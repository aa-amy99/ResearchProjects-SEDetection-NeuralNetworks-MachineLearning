<Block for 0x40004a, 48 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x50
0x400056:	mov	rax, qword ptr fs:[0x28]
0x40005f:	mov	qword ptr [rbp - 8], rax
0x400063:	xor	eax, eax
0x400065:	lea	rax, [rip - 0x6c]
0x40006c:	mov	qword ptr [rbp - 0x40], rax
0x400070:	mov	edi, 0x64
0x400075:	call	0x500010
<Block for 0x40007a, 11 bytes>
0x40007a:	mov	qword ptr [rbp - 0x38], rax
0x40007e:	cmp	qword ptr [rbp - 0x38], 0
0x400083:	jne	0x40008f
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 0xffffffff
0x40008a:	call	0x500018
<Block for 0x40008f, 26 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 0x38]
0x400093:	mov	byte ptr [rax], 0
0x400096:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40009d:	mov	rax, qword ptr [rbp - 0x38]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500020
<Block for 0x4000a9, 24 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x30], rax
0x4000ad:	mov	edx, 6
0x4000b2:	mov	esi, 1
0x4000b7:	mov	edi, 2
0x4000bc:	call	0x500028
<Block for 0x4000c1, 13 bytes>
0x4000c1:	mov	dword ptr [rbp - 0x48], eax
0x4000c4:	cmp	dword ptr [rbp - 0x48], -1
0x4000c8:	je	0x4001bb
<Block for 0x4001bb, 3 bytes>
0x4001bb:	nop	
0x4001bc:	jmp	0x4001bf
<Block for 0x4000ce, 22 bytes>
0x4000ce:	lea	rax, [rbp - 0x20]
0x4000d2:	mov	edx, 0x10
0x4000d7:	mov	esi, 0
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500030
<Block for 0x4001bf, 6 bytes>
0x4001bf:	cmp	dword ptr [rbp - 0x48], -1
0x4001c3:	je	0x4001cf
<Block for 0x4000e4, 18 bytes>
0x4000e4:	mov	word ptr [rbp - 0x20], 2
0x4000ea:	lea	rdi, [rip + 0x331]
0x4000f1:	call	0x500038
<Block for 0x4001cf, 13 bytes>
0x4001cf:	mov	rax, qword ptr [rbp - 0x38]
0x4001d3:	mov	rdx, qword ptr [rbp - 0x40]
0x4001d7:	mov	rdi, rax
0x4001da:	call	rdx
<Block for 0x4001c5, 10 bytes>
0x4001c5:	mov	eax, dword ptr [rbp - 0x48]
0x4001c8:	mov	edi, eax
0x4001ca:	call	0x500060
<Block for 0x4000f6, 13 bytes>
0x4000f6:	mov	dword ptr [rbp - 0x1c], eax
0x4000f9:	mov	edi, 0x6987
0x4000fe:	call	0x500040
<Block for 0x4001dc, 16 bytes>
0x4001dc:	nop	
0x4001dd:	mov	rax, qword ptr [rbp - 8]
0x4001e1:	xor	rax, qword ptr fs:[0x28]
0x4001ea:	je	0x4001f1
<Block for 0x400103, 26 bytes>
0x400103:	mov	word ptr [rbp - 0x1e], ax
0x400107:	lea	rcx, [rbp - 0x20]
0x40010b:	mov	eax, dword ptr [rbp - 0x48]
0x40010e:	mov	edx, 0x10
0x400113:	mov	rsi, rcx
0x400116:	mov	edi, eax
0x400118:	call	0x500048
<Block for 0x4001f1, 2 bytes>
0x4001f1:	leave	
0x4001f2:	ret	
<Block for 0x4001ec, 5 bytes>
0x4001ec:	call	0x500068
<Block for 0x40011d, 9 bytes>
0x40011d:	cmp	eax, -1
0x400120:	je	0x4001be
<Block for 0x400126, 39 bytes>
0x400126:	mov	eax, 0x63
0x40012b:	sub	rax, qword ptr [rbp - 0x30]
0x40012f:	mov	rdx, rax
0x400132:	mov	rcx, qword ptr [rbp - 0x38]
0x400136:	mov	rax, qword ptr [rbp - 0x30]
0x40013a:	lea	rsi, [rcx + rax]
0x40013e:	mov	eax, dword ptr [rbp - 0x48]
0x400141:	mov	ecx, 0
0x400146:	mov	edi, eax
0x400148:	call	0x500050
<Block for 0x4001be, 1 bytes>
0x4001be:	nop	
<Block for 0x40014d, 9 bytes>
0x40014d:	mov	dword ptr [rbp - 0x44], eax
0x400150:	cmp	dword ptr [rbp - 0x44], -1
0x400154:	je	0x4001bf
<Block for 0x400156, 6 bytes>
0x400156:	cmp	dword ptr [rbp - 0x44], 0
0x40015a:	je	0x4001bf
<Block for 0x40015c, 40 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x44]
0x40015f:	movsxd	rdx, eax
0x400162:	mov	rax, qword ptr [rbp - 0x30]
0x400166:	add	rdx, rax
0x400169:	mov	rax, qword ptr [rbp - 0x38]
0x40016d:	add	rax, rdx
0x400170:	mov	byte ptr [rax], 0
0x400173:	mov	rax, qword ptr [rbp - 0x38]
0x400177:	mov	esi, 0xd
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500058
<Block for 0x400184, 11 bytes>
0x400184:	mov	qword ptr [rbp - 0x28], rax
0x400188:	cmp	qword ptr [rbp - 0x28], 0
0x40018d:	je	0x400196
<Block for 0x400196, 17 bytes>
0x400196:	mov	rax, qword ptr [rbp - 0x38]
0x40019a:	mov	esi, 0xa
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500058
<Block for 0x40018f, 24 bytes>
0x40018f:	mov	rax, qword ptr [rbp - 0x28]
0x400193:	mov	byte ptr [rax], 0
0x400196:	mov	rax, qword ptr [rbp - 0x38]
0x40019a:	mov	esi, 0xa
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500058
<Block for 0x4001a7, 11 bytes>
0x4001a7:	mov	qword ptr [rbp - 0x28], rax
0x4001ab:	cmp	qword ptr [rbp - 0x28], 0
0x4001b0:	je	0x4001bf
<Block for 0x4001b2, 9 bytes>
0x4001b2:	mov	rax, qword ptr [rbp - 0x28]
0x4001b6:	mov	byte ptr [rax], 0
0x4001b9:	jmp	0x4001bf
