<Block for 0x4001f3, 26 bytes>
0x4001f3:	endbr64	
0x4001f7:	push	rbp
0x4001f8:	mov	rbp, rsp
0x4001fb:	sub	rsp, 0x20
0x4001ff:	mov	qword ptr [rbp - 0x18], rdi
0x400203:	mov	qword ptr [rbp - 8], 0
0x40020b:	jmp	0x400232
<Block for 0x400232, 12 bytes>
0x400232:	mov	rax, qword ptr [rbp - 0x18]
0x400236:	mov	rdi, rax
0x400239:	call	0x500020
<Block for 0x40023e, 6 bytes>
0x40023e:	cmp	qword ptr [rbp - 8], rax
0x400242:	jb	0x40020d
<Block for 0x40020d, 18 bytes>
0x40020d:	mov	rdx, qword ptr [rbp - 0x18]
0x400211:	mov	rax, qword ptr [rbp - 8]
0x400215:	add	rax, rdx
0x400218:	movzx	eax, byte ptr [rax]
0x40021b:	cmp	al, 0x53
0x40021d:	jne	0x40022d
<Block for 0x400244, 12 bytes>
0x400244:	mov	rax, qword ptr [rbp - 0x18]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500008
<Block for 0x40021f, 12 bytes>
0x40021f:	lea	rdi, [rip + 0x1eb]
0x400226:	call	0x500000
<Block for 0x40022d, 17 bytes>
0x40022d:	add	qword ptr [rbp - 8], 1
0x400232:	mov	rax, qword ptr [rbp - 0x18]
0x400236:	mov	rdi, rax
0x400239:	call	0x500020
<Block for 0x400250, 3 bytes>
0x400250:	nop	
0x400251:	leave	
0x400252:	ret	
<Block for 0x40022b, 2 bytes>
0x40022b:	jmp	0x400244
