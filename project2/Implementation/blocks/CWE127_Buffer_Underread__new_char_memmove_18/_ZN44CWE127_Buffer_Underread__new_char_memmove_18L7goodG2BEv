<Block for 0x4000bc, 50 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	add	rsp, -0x80
0x4000c8:	mov	rax, qword ptr fs:[0x28]
0x4000d1:	mov	qword ptr [rbp - 8], rax
0x4000d5:	xor	eax, eax
0x4000d7:	mov	qword ptr [rbp - 0x80], 0
0x4000df:	nop	
0x4000e0:	endbr64	
0x4000e4:	mov	edi, 0x64
0x4000e9:	call	0x500000
<Block for 0x4000ee, 26 bytes>
0x4000ee:	mov	qword ptr [rbp - 0x78], rax
0x4000f2:	mov	rax, qword ptr [rbp - 0x78]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x41
0x400100:	mov	rdi, rax
0x400103:	call	0x500008
<Block for 0x400108, 41 bytes>
0x400108:	mov	rax, qword ptr [rbp - 0x78]
0x40010c:	add	rax, 0x63
0x400110:	mov	byte ptr [rax], 0
0x400113:	mov	rax, qword ptr [rbp - 0x78]
0x400117:	mov	qword ptr [rbp - 0x80], rax
0x40011b:	lea	rax, [rbp - 0x70]
0x40011f:	mov	edx, 0x63
0x400124:	mov	esi, 0x43
0x400129:	mov	rdi, rax
0x40012c:	call	0x500008
<Block for 0x400131, 28 bytes>
0x400131:	mov	byte ptr [rbp - 0xd], 0
0x400135:	mov	rcx, qword ptr [rbp - 0x80]
0x400139:	lea	rax, [rbp - 0x70]
0x40013d:	mov	edx, 0x64
0x400142:	mov	rsi, rcx
0x400145:	mov	rdi, rax
0x400148:	call	0x500010
<Block for 0x40014d, 16 bytes>
0x40014d:	mov	byte ptr [rbp - 0xd], 0
0x400151:	lea	rax, [rbp - 0x70]
0x400155:	mov	rdi, rax
0x400158:	call	0x500018
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500020
