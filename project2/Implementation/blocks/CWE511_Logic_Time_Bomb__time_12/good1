<Block for 0x40008a, 37 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	sub	rsp, 0x10
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	eax, 0
0x4000aa:	call	0x500000
<Block for 0x4000af, 4 bytes>
0x4000af:	test	eax, eax
0x4000b1:	je	0x4000d9
<Block for 0x4000d9, 12 bytes>
0x4000d9:	lea	rax, [rbp - 0x10]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500008
<Block for 0x4000b3, 12 bytes>
0x4000b3:	lea	rax, [rbp - 0x10]
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500008
<Block for 0x4000e5, 12 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 0x10]
0x4000e9:	cmp	rax, 0x4779c8d0
0x4000ef:	jle	0x4000fd
<Block for 0x4000bf, 12 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 0x10]
0x4000c3:	cmp	rax, 0x4779c8d0
0x4000c9:	jle	0x4000fd
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x4000f1, 12 bytes>
0x4000f1:	lea	rdi, [rip + 0x44]
0x4000f8:	call	0x500018
<Block for 0x4000cb, 12 bytes>
0x4000cb:	lea	rdi, [rip + 0x6a]
0x4000d2:	call	0x500018
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500020
<Block for 0x4000d7, 2 bytes>
0x4000d7:	jmp	0x4000fd
