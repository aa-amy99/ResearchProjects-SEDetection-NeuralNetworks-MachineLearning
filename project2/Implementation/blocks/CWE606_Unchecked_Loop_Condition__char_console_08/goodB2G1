<Block for 0x4001f4, 151 bytes>
0x4001f4:	endbr64	
0x4001f8:	push	rbp
0x4001f9:	mov	rbp, rsp
0x4001fc:	sub	rsp, 0x90
0x400203:	mov	rax, qword ptr fs:[0x28]
0x40020c:	mov	qword ptr [rbp - 8], rax
0x400210:	xor	eax, eax
0x400212:	mov	qword ptr [rbp - 0x70], 0
0x40021a:	mov	qword ptr [rbp - 0x68], 0
0x400222:	mov	qword ptr [rbp - 0x60], 0
0x40022a:	mov	qword ptr [rbp - 0x58], 0
0x400232:	mov	qword ptr [rbp - 0x50], 0
0x40023a:	mov	qword ptr [rbp - 0x48], 0
0x400242:	mov	qword ptr [rbp - 0x40], 0
0x40024a:	mov	qword ptr [rbp - 0x38], 0
0x400252:	mov	qword ptr [rbp - 0x30], 0
0x40025a:	mov	qword ptr [rbp - 0x28], 0
0x400262:	mov	qword ptr [rbp - 0x20], 0
0x40026a:	mov	qword ptr [rbp - 0x18], 0
0x400272:	mov	dword ptr [rbp - 0x10], 0
0x400279:	lea	rax, [rbp - 0x70]
0x40027d:	mov	qword ptr [rbp - 0x80], rax
0x400281:	mov	eax, 0
0x400286:	call	0x400000
<Block for 0x40028b, 8 bytes>
0x40028b:	test	eax, eax
0x40028d:	je	0x400342
<Block for 0x400342, 10 bytes>
0x400342:	mov	eax, 0
0x400347:	call	0x40000f
<Block for 0x400293, 12 bytes>
0x400293:	mov	rax, qword ptr [rbp - 0x80]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500000
<Block for 0x40034c, 4 bytes>
0x40034c:	test	eax, eax
0x40034e:	je	0x40035e
<Block for 0x40029f, 23 bytes>
0x40029f:	mov	qword ptr [rbp - 0x78], rax
0x4002a3:	mov	eax, 0x64
0x4002a8:	sub	rax, qword ptr [rbp - 0x78]
0x4002ac:	cmp	rax, 1
0x4002b0:	jbe	0x400342
<Block for 0x40035e, 31 bytes>
0x40035e:	lea	rdx, [rbp - 0x8c]
0x400365:	mov	rax, qword ptr [rbp - 0x80]
0x400369:	lea	rsi, [rip + 0x4e4]
0x400370:	mov	rdi, rax
0x400373:	mov	eax, 0
0x400378:	call	0x500020
<Block for 0x400350, 12 bytes>
0x400350:	lea	rdi, [rip + 0x500]
0x400357:	call	0x500018
<Block for 0x4002b6, 44 bytes>
0x4002b6:	mov	rax, qword ptr [rip + 0xffd4b]
0x4002bd:	mov	rdx, qword ptr [rbp - 0x78]
0x4002c1:	mov	ecx, 0x64
0x4002c6:	sub	ecx, edx
0x4002c8:	mov	edx, ecx
0x4002ca:	mov	esi, edx
0x4002cc:	mov	rcx, qword ptr [rbp - 0x80]
0x4002d0:	mov	rdx, qword ptr [rbp - 0x78]
0x4002d4:	add	rcx, rdx
0x4002d7:	mov	rdx, rax
0x4002da:	mov	rdi, rcx
0x4002dd:	call	0x500010
<Block for 0x40037d, 5 bytes>
0x40037d:	cmp	eax, 1
0x400380:	jne	0x4003ce
<Block for 0x40035c, 2 bytes>
0x40035c:	jmp	0x4003ce
<Block for 0x4002e2, 5 bytes>
0x4002e2:	test	rax, rax
0x4002e5:	je	0x400328
<Block for 0x400382, 13 bytes>
0x400382:	mov	eax, dword ptr [rbp - 0x8c]
0x400388:	cmp	eax, 0x270f
0x40038d:	jg	0x4003ce
<Block for 0x4003ce, 16 bytes>
0x4003ce:	nop	
0x4003cf:	mov	rax, qword ptr [rbp - 8]
0x4003d3:	xor	rax, qword ptr fs:[0x28]
0x4003dc:	je	0x4003e3
<Block for 0x400328, 12 bytes>
0x400328:	lea	rdi, [rip + 0x516]
0x40032f:	call	0x500018
<Block for 0x4002e7, 12 bytes>
0x4002e7:	mov	rax, qword ptr [rbp - 0x80]
0x4002eb:	mov	rdi, rax
0x4002ee:	call	0x500000
<Block for 0x40038f, 22 bytes>
0x40038f:	mov	dword ptr [rbp - 0x84], 0
0x400399:	mov	dword ptr [rbp - 0x88], 0
0x4003a3:	jmp	0x4003b3
<Block for 0x4003e3, 2 bytes>
0x4003e3:	leave	
0x4003e4:	ret	
<Block for 0x4003de, 5 bytes>
0x4003de:	call	0x500030
<Block for 0x400334, 24 bytes>
0x400334:	mov	rdx, qword ptr [rbp - 0x80]
0x400338:	mov	rax, qword ptr [rbp - 0x78]
0x40033c:	add	rax, rdx
0x40033f:	mov	byte ptr [rax], 0
0x400342:	mov	eax, 0
0x400347:	call	0x40000f
<Block for 0x4002f3, 11 bytes>
0x4002f3:	mov	qword ptr [rbp - 0x78], rax
0x4002f7:	cmp	qword ptr [rbp - 0x78], 0
0x4002fc:	je	0x400342
<Block for 0x4003b3, 14 bytes>
0x4003b3:	mov	eax, dword ptr [rbp - 0x8c]
0x4003b9:	cmp	dword ptr [rbp - 0x88], eax
0x4003bf:	jl	0x4003a5
<Block for 0x4002fe, 22 bytes>
0x4002fe:	mov	rax, qword ptr [rbp - 0x78]
0x400302:	lea	rdx, [rax - 1]
0x400306:	mov	rax, qword ptr [rbp - 0x80]
0x40030a:	add	rax, rdx
0x40030d:	movzx	eax, byte ptr [rax]
0x400310:	cmp	al, 0xa
0x400312:	jne	0x400342
<Block for 0x4003a5, 28 bytes>
0x4003a5:	add	dword ptr [rbp - 0x84], 1
0x4003ac:	add	dword ptr [rbp - 0x88], 1
0x4003b3:	mov	eax, dword ptr [rbp - 0x8c]
0x4003b9:	cmp	dword ptr [rbp - 0x88], eax
0x4003bf:	jl	0x4003a5
<Block for 0x4003c1, 13 bytes>
0x4003c1:	mov	eax, dword ptr [rbp - 0x84]
0x4003c7:	mov	edi, eax
0x4003c9:	call	0x500028
<Block for 0x400314, 20 bytes>
0x400314:	mov	rax, qword ptr [rbp - 0x78]
0x400318:	lea	rdx, [rax - 1]
0x40031c:	mov	rax, qword ptr [rbp - 0x80]
0x400320:	add	rax, rdx
0x400323:	mov	byte ptr [rax], 0
0x400326:	jmp	0x400342
