<Block for 0x40013d, 52 bytes>
0x40013d:	endbr64	
0x400141:	push	rbp
0x400142:	mov	rbp, rsp
0x400145:	push	rbx
0x400146:	sub	rsp, 0x88
0x40014d:	mov	rax, qword ptr fs:[0x28]
0x400156:	mov	qword ptr [rbp - 0x18], rax
0x40015a:	xor	eax, eax
0x40015c:	mov	qword ptr [rbp - 0x90], 0
0x400167:	mov	edi, 0x64
0x40016c:	call	0x500000
<Block for 0x400171, 17 bytes>
0x400171:	mov	qword ptr [rbp - 0x88], rax
0x400178:	cmp	qword ptr [rbp - 0x88], 0
0x400180:	jne	0x40018c
<Block for 0x400182, 10 bytes>
0x400182:	mov	edi, 0xffffffff
0x400187:	call	0x500008
<Block for 0x40018c, 25 bytes>
0x40018c:	mov	rax, qword ptr [rbp - 0x88]
0x400193:	mov	edx, 0x63
0x400198:	mov	esi, 0x41
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500010
<Block for 0x4001a5, 50 bytes>
0x4001a5:	mov	rax, qword ptr [rbp - 0x88]
0x4001ac:	add	rax, 0x63
0x4001b0:	mov	byte ptr [rax], 0
0x4001b3:	mov	rax, qword ptr [rbp - 0x88]
0x4001ba:	mov	qword ptr [rbp - 0x90], rax
0x4001c1:	lea	rax, [rbp - 0x80]
0x4001c5:	mov	edx, 0x63
0x4001ca:	mov	esi, 0x43
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500010
<Block for 0x4001d7, 128 bytes>
0x4001d7:	mov	byte ptr [rbp - 0x1d], 0
0x4001db:	mov	rax, qword ptr [rbp - 0x90]
0x4001e2:	mov	rcx, qword ptr [rax]
0x4001e5:	mov	rbx, qword ptr [rax + 8]
0x4001e9:	mov	qword ptr [rbp - 0x80], rcx
0x4001ed:	mov	qword ptr [rbp - 0x78], rbx
0x4001f1:	mov	rcx, qword ptr [rax + 0x10]
0x4001f5:	mov	rbx, qword ptr [rax + 0x18]
0x4001f9:	mov	qword ptr [rbp - 0x70], rcx
0x4001fd:	mov	qword ptr [rbp - 0x68], rbx
0x400201:	mov	rcx, qword ptr [rax + 0x20]
0x400205:	mov	rbx, qword ptr [rax + 0x28]
0x400209:	mov	qword ptr [rbp - 0x60], rcx
0x40020d:	mov	qword ptr [rbp - 0x58], rbx
0x400211:	mov	rcx, qword ptr [rax + 0x30]
0x400215:	mov	rbx, qword ptr [rax + 0x38]
0x400219:	mov	qword ptr [rbp - 0x50], rcx
0x40021d:	mov	qword ptr [rbp - 0x48], rbx
0x400221:	mov	rcx, qword ptr [rax + 0x40]
0x400225:	mov	rbx, qword ptr [rax + 0x48]
0x400229:	mov	qword ptr [rbp - 0x40], rcx
0x40022d:	mov	qword ptr [rbp - 0x38], rbx
0x400231:	mov	rcx, qword ptr [rax + 0x50]
0x400235:	mov	rbx, qword ptr [rax + 0x58]
0x400239:	mov	qword ptr [rbp - 0x30], rcx
0x40023d:	mov	qword ptr [rbp - 0x28], rbx
0x400241:	mov	eax, dword ptr [rax + 0x60]
0x400244:	mov	dword ptr [rbp - 0x20], eax
0x400247:	mov	byte ptr [rbp - 0x1d], 0
0x40024b:	lea	rax, [rbp - 0x80]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500018
<Block for 0x400257, 16 bytes>
0x400257:	nop	
0x400258:	mov	rax, qword ptr [rbp - 0x18]
0x40025c:	xor	rax, qword ptr fs:[0x28]
0x400265:	je	0x40026c
<Block for 0x40026c, 10 bytes>
0x40026c:	add	rsp, 0x88
0x400273:	pop	rbx
0x400274:	pop	rbp
0x400275:	ret	
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500020
