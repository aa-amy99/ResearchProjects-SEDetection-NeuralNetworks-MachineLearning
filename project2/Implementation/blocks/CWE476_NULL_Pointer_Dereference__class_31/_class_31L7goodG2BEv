<Block for 0x40004a, 22 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x20
0x400056:	mov	edi, 8
0x40005b:	call	0x500010
<Block for 0x400060, 62 bytes>
0x400060:	mov	qword ptr [rbp - 0x20], rax
0x400064:	mov	rax, qword ptr [rbp - 0x20]
0x400068:	mov	dword ptr [rax], 0
0x40006e:	mov	rax, qword ptr [rbp - 0x20]
0x400072:	mov	dword ptr [rax + 4], 0
0x400079:	mov	rax, qword ptr [rbp - 0x20]
0x40007d:	mov	qword ptr [rbp - 0x18], rax
0x400081:	mov	rax, qword ptr [rbp - 0x18]
0x400085:	mov	qword ptr [rbp - 0x10], rax
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	mov	eax, dword ptr [rax]
0x400097:	mov	edi, eax
0x400099:	call	0x500000
<Block for 0x40009e, 9 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	test	rax, rax
0x4000a5:	je	0x4000b4
<Block for 0x4000b4, 3 bytes>
0x4000b4:	nop	
0x4000b5:	leave	
0x4000b6:	ret	
<Block for 0x4000a7, 13 bytes>
0x4000a7:	mov	esi, 8
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500008
