<Block for 0x400129, 22 bytes>
0x400129:	endbr64	
0x40012d:	push	rbp
0x40012e:	mov	rbp, rsp
0x400131:	sub	rsp, 0x20
0x400135:	mov	edi, 0x64
0x40013a:	call	0x500000
<Block for 0x40013f, 11 bytes>
0x40013f:	mov	qword ptr [rbp - 0x10], rax
0x400143:	cmp	qword ptr [rbp - 0x10], 0
0x400148:	jne	0x400154
<Block for 0x40014a, 10 bytes>
0x40014a:	mov	edi, 0xffffffff
0x40014f:	call	0x500008
<Block for 0x400154, 19 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x10]
0x400158:	mov	byte ptr [rax], 0
0x40015b:	mov	rax, qword ptr [rbp - 0x10]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500010
<Block for 0x400167, 23 bytes>
0x400167:	mov	qword ptr [rbp - 8], rax
0x40016b:	mov	eax, 0x64
0x400170:	sub	rax, qword ptr [rbp - 8]
0x400174:	cmp	rax, 1
0x400178:	jbe	0x40020a
<Block for 0x40020a, 10 bytes>
0x40020a:	mov	eax, 0
0x40020f:	call	0x500040
<Block for 0x40017e, 44 bytes>
0x40017e:	mov	rax, qword ptr [rip + 0xffe93]
0x400185:	mov	rdx, qword ptr [rbp - 8]
0x400189:	mov	ecx, 0x64
0x40018e:	sub	ecx, edx
0x400190:	mov	edx, ecx
0x400192:	mov	esi, edx
0x400194:	mov	rcx, qword ptr [rbp - 0x10]
0x400198:	mov	rdx, qword ptr [rbp - 8]
0x40019c:	add	rcx, rdx
0x40019f:	mov	rdx, rax
0x4001a2:	mov	rdi, rcx
0x4001a5:	call	0x500020
<Block for 0x400214, 4 bytes>
0x400214:	test	eax, eax
0x400216:	je	0x400226
<Block for 0x4001aa, 5 bytes>
0x4001aa:	test	rax, rax
0x4001ad:	je	0x4001f0
<Block for 0x400226, 10 bytes>
0x400226:	mov	qword ptr [rbp - 0x18], 0
0x40022e:	jmp	0x400255
<Block for 0x400218, 12 bytes>
0x400218:	lea	rdi, [rip + 0x1d5]
0x40021f:	call	0x500028
<Block for 0x4001f0, 12 bytes>
0x4001f0:	lea	rdi, [rip + 0x1dd]
0x4001f7:	call	0x500028
<Block for 0x4001af, 12 bytes>
0x4001af:	mov	rax, qword ptr [rbp - 0x10]
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500010
<Block for 0x400255, 12 bytes>
0x400255:	mov	rax, qword ptr [rbp - 0x10]
0x400259:	mov	rdi, rax
0x40025c:	call	0x500010
<Block for 0x400224, 2 bytes>
0x400224:	jmp	0x400273
<Block for 0x4001fc, 24 bytes>
0x4001fc:	mov	rdx, qword ptr [rbp - 0x10]
0x400200:	mov	rax, qword ptr [rbp - 8]
0x400204:	add	rax, rdx
0x400207:	mov	byte ptr [rax], 0
0x40020a:	mov	eax, 0
0x40020f:	call	0x500040
<Block for 0x4001bb, 11 bytes>
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	cmp	qword ptr [rbp - 8], 0
0x4001c4:	je	0x40020a
<Block for 0x400261, 6 bytes>
0x400261:	cmp	qword ptr [rbp - 0x18], rax
0x400265:	jb	0x400230
<Block for 0x400273, 3 bytes>
0x400273:	nop	
0x400274:	leave	
0x400275:	ret	
<Block for 0x4001c6, 22 bytes>
0x4001c6:	mov	rax, qword ptr [rbp - 8]
0x4001ca:	lea	rdx, [rax - 1]
0x4001ce:	mov	rax, qword ptr [rbp - 0x10]
0x4001d2:	add	rax, rdx
0x4001d5:	movzx	eax, byte ptr [rax]
0x4001d8:	cmp	al, 0xa
0x4001da:	jne	0x40020a
<Block for 0x400230, 18 bytes>
0x400230:	mov	rdx, qword ptr [rbp - 0x10]
0x400234:	mov	rax, qword ptr [rbp - 0x18]
0x400238:	add	rax, rdx
0x40023b:	movzx	eax, byte ptr [rax]
0x40023e:	cmp	al, 0x53
0x400240:	jne	0x400250
<Block for 0x400267, 12 bytes>
0x400267:	mov	rax, qword ptr [rbp - 0x10]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500038
<Block for 0x4001dc, 20 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 8]
0x4001e0:	lea	rdx, [rax - 1]
0x4001e4:	mov	rax, qword ptr [rbp - 0x10]
0x4001e8:	add	rax, rdx
0x4001eb:	mov	byte ptr [rax], 0
0x4001ee:	jmp	0x40020a
<Block for 0x400242, 12 bytes>
0x400242:	lea	rdi, [rip + 0x19a]
0x400249:	call	0x500028
<Block for 0x400250, 17 bytes>
0x400250:	add	qword ptr [rbp - 0x18], 1
0x400255:	mov	rax, qword ptr [rbp - 0x10]
0x400259:	mov	rdi, rax
0x40025c:	call	0x500010
<Block for 0x40024e, 2 bytes>
0x40024e:	jmp	0x400267
