<Block for 0x40008b, 41 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x30
0x400097:	mov	qword ptr [rbp - 0x28], rdi
0x40009b:	mov	rax, qword ptr fs:[0x28]
0x4000a4:	mov	qword ptr [rbp - 8], rax
0x4000a8:	xor	eax, eax
0x4000aa:	mov	eax, dword ptr [rip + 0xfff70]
0x4000b0:	test	eax, eax
0x4000b2:	je	0x4000c2
<Block for 0x4000c2, 28 bytes>
0x4000c2:	lea	rdx, [rbp - 0x14]
0x4000c6:	mov	rax, qword ptr [rbp - 0x28]
0x4000ca:	lea	rsi, [rip + 0x17d]
0x4000d1:	mov	rdi, rax
0x4000d4:	mov	eax, 0
0x4000d9:	call	0x500008
<Block for 0x4000b4, 12 bytes>
0x4000b4:	lea	rdi, [rip + 0x196]
0x4000bb:	call	0x500028
<Block for 0x4000de, 5 bytes>
0x4000de:	cmp	eax, 1
0x4000e1:	jne	0x400117
<Block for 0x4000c0, 2 bytes>
0x4000c0:	jmp	0x400117
<Block for 0x4000e3, 10 bytes>
0x4000e3:	mov	eax, dword ptr [rbp - 0x14]
0x4000e6:	cmp	eax, 0x270f
0x4000eb:	jg	0x400117
<Block for 0x400117, 16 bytes>
0x400117:	nop	
0x400118:	mov	rax, qword ptr [rbp - 8]
0x40011c:	xor	rax, qword ptr fs:[0x28]
0x400125:	je	0x40012c
<Block for 0x4000ed, 16 bytes>
0x4000ed:	mov	dword ptr [rbp - 0xc], 0
0x4000f4:	mov	dword ptr [rbp - 0x10], 0
0x4000fb:	jmp	0x400105
<Block for 0x40012c, 2 bytes>
0x40012c:	leave	
0x40012d:	ret	
<Block for 0x400127, 5 bytes>
0x400127:	call	0x500018
<Block for 0x400105, 8 bytes>
0x400105:	mov	eax, dword ptr [rbp - 0x14]
0x400108:	cmp	dword ptr [rbp - 0x10], eax
0x40010b:	jl	0x4000fd
<Block for 0x4000fd, 16 bytes>
0x4000fd:	add	dword ptr [rbp - 0xc], 1
0x400101:	add	dword ptr [rbp - 0x10], 1
0x400105:	mov	eax, dword ptr [rbp - 0x14]
0x400108:	cmp	dword ptr [rbp - 0x10], eax
0x40010b:	jl	0x4000fd
<Block for 0x40010d, 10 bytes>
0x40010d:	mov	eax, dword ptr [rbp - 0xc]
0x400110:	mov	edi, eax
0x400112:	call	0x500010
