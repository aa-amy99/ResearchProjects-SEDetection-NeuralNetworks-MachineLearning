<Block for 0x40018e, 45 bytes>
0x40018e:	endbr64	
0x400192:	push	rbp
0x400193:	mov	rbp, rsp
0x400196:	add	rsp, -0x80
0x40019a:	mov	rax, qword ptr fs:[0x28]
0x4001a3:	mov	qword ptr [rbp - 8], rax
0x4001a7:	xor	eax, eax
0x4001a9:	mov	qword ptr [rbp - 0x80], 0
0x4001b1:	mov	edi, 0x64
0x4001b6:	call	0x500000
<Block for 0x4001bb, 11 bytes>
0x4001bb:	mov	qword ptr [rbp - 0x78], rax
0x4001bf:	cmp	qword ptr [rbp - 0x78], 0
0x4001c4:	jne	0x4001d0
<Block for 0x4001c6, 10 bytes>
0x4001c6:	mov	edi, 0xffffffff
0x4001cb:	call	0x500008
<Block for 0x4001d0, 22 bytes>
0x4001d0:	mov	rax, qword ptr [rbp - 0x78]
0x4001d4:	mov	edx, 0x63
0x4001d9:	mov	esi, 0x41
0x4001de:	mov	rdi, rax
0x4001e1:	call	0x500010
<Block for 0x4001e6, 42 bytes>
0x4001e6:	mov	rax, qword ptr [rbp - 0x78]
0x4001ea:	add	rax, 0x63
0x4001ee:	mov	byte ptr [rax], 0
0x4001f1:	mov	rax, qword ptr [rbp - 0x78]
0x4001f5:	mov	qword ptr [rbp - 0x80], rax
0x4001f9:	nop	
0x4001fa:	lea	rax, [rbp - 0x70]
0x4001fe:	mov	edx, 0x63
0x400203:	mov	esi, 0x43
0x400208:	mov	rdi, rax
0x40020b:	call	0x500010
<Block for 0x400210, 28 bytes>
0x400210:	mov	byte ptr [rbp - 0xd], 0
0x400214:	mov	rcx, qword ptr [rbp - 0x80]
0x400218:	lea	rax, [rbp - 0x70]
0x40021c:	mov	edx, 0x64
0x400221:	mov	rsi, rcx
0x400224:	mov	rdi, rax
0x400227:	call	0x500018
<Block for 0x40022c, 16 bytes>
0x40022c:	mov	byte ptr [rbp - 0xd], 0
0x400230:	lea	rax, [rbp - 0x70]
0x400234:	mov	rdi, rax
0x400237:	call	0x500020
<Block for 0x40023c, 16 bytes>
0x40023c:	nop	
0x40023d:	mov	rax, qword ptr [rbp - 8]
0x400241:	xor	rax, qword ptr fs:[0x28]
0x40024a:	je	0x400251
<Block for 0x400251, 2 bytes>
0x400251:	leave	
0x400252:	ret	
<Block for 0x40024c, 5 bytes>
0x40024c:	call	0x500028
