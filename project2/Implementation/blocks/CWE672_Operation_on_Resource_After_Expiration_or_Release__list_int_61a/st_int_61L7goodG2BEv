<Block for 0x4001a9, 40 bytes>
0x4001a9:	endbr64	
0x4001ad:	push	rbp
0x4001ae:	mov	rbp, rsp
0x4001b1:	push	rbx
0x4001b2:	sub	rsp, 0x68
0x4001b6:	mov	rax, qword ptr fs:[0x28]
0x4001bf:	mov	qword ptr [rbp - 0x18], rax
0x4001c3:	xor	eax, eax
0x4001c5:	lea	rax, [rbp - 0x70]
0x4001c9:	mov	rdi, rax
0x4001cc:	call	0x4006d0
<Block for 0x4001d1, 19 bytes>
0x4001d1:	lea	rdx, [rbp - 0x70]
0x4001d5:	lea	rax, [rbp - 0x50]
0x4001d9:	mov	rsi, rdx
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x4007f0
<Block for 0x4001e4, 19 bytes>
0x4001e4:	lea	rax, [rbp - 0x30]
0x4001e8:	lea	rdx, [rbp - 0x50]
0x4001ec:	mov	rsi, rdx
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500048
<Block for 0x4001f7, 19 bytes>
0x4001f7:	lea	rdx, [rbp - 0x30]
0x4001fb:	lea	rax, [rbp - 0x70]
0x4001ff:	mov	rsi, rdx
0x400202:	mov	rdi, rax
0x400205:	call	0x4008bc
<Block for 0x40020a, 12 bytes>
0x40020a:	lea	rax, [rbp - 0x30]
0x40020e:	mov	rdi, rax
0x400211:	call	0x4006f0
<Block for 0x400216, 12 bytes>
0x400216:	lea	rax, [rbp - 0x50]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x4006f0
<Block for 0x400222, 12 bytes>
0x400222:	lea	rax, [rbp - 0x50]
0x400226:	mov	rdi, rax
0x400229:	call	0x40091c
<Block for 0x40022e, 19 bytes>
0x40022e:	lea	rsi, [rip + 0x333]
0x400235:	lea	rdi, [rip + 0xffdcc]
0x40023c:	call	0x500010
<Block for 0x400241, 12 bytes>
0x400241:	lea	rax, [rbp - 0x70]
0x400245:	mov	rdi, rax
0x400248:	call	0x400936
<Block for 0x40024d, 16 bytes>
0x40024d:	mov	qword ptr [rbp - 0x50], rax
0x400251:	lea	rax, [rbp - 0x70]
0x400255:	mov	rdi, rax
0x400258:	call	0x400986
<Block for 0x40025d, 23 bytes>
0x40025d:	mov	qword ptr [rbp - 0x30], rax
0x400261:	lea	rdx, [rbp - 0x30]
0x400265:	lea	rax, [rbp - 0x50]
0x400269:	mov	rsi, rdx
0x40026c:	mov	rdi, rax
0x40026f:	call	0x4009d2
<Block for 0x400274, 4 bytes>
0x400274:	test	al, al
0x400276:	je	0x4002df
<Block for 0x4002df, 22 bytes>
0x4002df:	mov	rax, qword ptr [rip + 0xffd42]
0x4002e6:	mov	rsi, rax
0x4002e9:	lea	rdi, [rip + 0xffd18]
0x4002f0:	call	0x500030
<Block for 0x400278, 12 bytes>
0x400278:	lea	rax, [rbp - 0x50]
0x40027c:	mov	rdi, rax
0x40027f:	call	0x400a50
<Block for 0x4002f5, 12 bytes>
0x4002f5:	lea	rax, [rbp - 0x70]
0x4002f9:	mov	rdi, rax
0x4002fc:	call	0x4006f0
<Block for 0x400284, 11 bytes>
0x400284:	mov	eax, dword ptr [rax]
0x400286:	test	eax, eax
0x400288:	sete	al
0x40028b:	test	al, al
0x40028d:	je	0x40029b
<Block for 0x400301, 16 bytes>
0x400301:	nop	
0x400302:	mov	rax, qword ptr [rbp - 0x18]
0x400306:	xor	rax, qword ptr fs:[0x28]
0x40030f:	je	0x40034b
<Block for 0x40029b, 19 bytes>
0x40029b:	lea	rsi, [rip + 0x2da]
0x4002a2:	lea	rdi, [rip + 0xffd5f]
0x4002a9:	call	0x500010
<Block for 0x40028f, 12 bytes>
0x40028f:	lea	rax, [rbp - 0x70]
0x400293:	mov	rdi, rax
0x400296:	call	0x400a72
<Block for 0x40034b, 7 bytes>
0x40034b:	add	rsp, 0x68
0x40034f:	pop	rbx
0x400350:	pop	rbp
0x400351:	ret	
<Block for 0x400311, 2 bytes>
0x400311:	jmp	0x400346
<Block for 0x4002ae, 15 bytes>
0x4002ae:	mov	rbx, rax
0x4002b1:	lea	rax, [rbp - 0x50]
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x400a50
<Block for 0x400346, 5 bytes>
0x400346:	call	0x500040
<Block for 0x4002bd, 12 bytes>
0x4002bd:	mov	eax, dword ptr [rax]
0x4002bf:	mov	esi, eax
0x4002c1:	mov	rdi, rbx
0x4002c4:	call	0x500018
<Block for 0x4002c9, 17 bytes>
0x4002c9:	lea	rax, [rbp - 0x50]
0x4002cd:	mov	esi, 0
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x4009f8
<Block for 0x4002da, 5 bytes>
0x4002da:	jmp	0x400251
<Block for 0x400251, 12 bytes>
0x400251:	lea	rax, [rbp - 0x70]
0x400255:	mov	rdi, rax
0x400258:	call	0x400986
