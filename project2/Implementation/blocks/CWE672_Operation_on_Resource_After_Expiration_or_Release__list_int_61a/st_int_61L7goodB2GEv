<Block for 0x400352, 40 bytes>
0x400352:	endbr64	
0x400356:	push	rbp
0x400357:	mov	rbp, rsp
0x40035a:	push	rbx
0x40035b:	sub	rsp, 0x68
0x40035f:	mov	rax, qword ptr fs:[0x28]
0x400368:	mov	qword ptr [rbp - 0x18], rax
0x40036c:	xor	eax, eax
0x40036e:	lea	rax, [rbp - 0x70]
0x400372:	mov	rdi, rax
0x400375:	call	0x4006d0
<Block for 0x40037a, 19 bytes>
0x40037a:	lea	rdx, [rbp - 0x70]
0x40037e:	lea	rax, [rbp - 0x50]
0x400382:	mov	rsi, rdx
0x400385:	mov	rdi, rax
0x400388:	call	0x4007f0
<Block for 0x40038d, 19 bytes>
0x40038d:	lea	rax, [rbp - 0x30]
0x400391:	lea	rdx, [rbp - 0x50]
0x400395:	mov	rsi, rdx
0x400398:	mov	rdi, rax
0x40039b:	call	0x500050
<Block for 0x4003a0, 19 bytes>
0x4003a0:	lea	rdx, [rbp - 0x30]
0x4003a4:	lea	rax, [rbp - 0x70]
0x4003a8:	mov	rsi, rdx
0x4003ab:	mov	rdi, rax
0x4003ae:	call	0x4008bc
<Block for 0x4003b3, 12 bytes>
0x4003b3:	lea	rax, [rbp - 0x30]
0x4003b7:	mov	rdi, rax
0x4003ba:	call	0x4006f0
<Block for 0x4003bf, 12 bytes>
0x4003bf:	lea	rax, [rbp - 0x50]
0x4003c3:	mov	rdi, rax
0x4003c6:	call	0x4006f0
<Block for 0x4003cb, 12 bytes>
0x4003cb:	lea	rax, [rbp - 0x50]
0x4003cf:	mov	rdi, rax
0x4003d2:	call	0x40091c
<Block for 0x4003d7, 19 bytes>
0x4003d7:	lea	rsi, [rip + 0x18a]
0x4003de:	lea	rdi, [rip + 0xffc23]
0x4003e5:	call	0x500010
<Block for 0x4003ea, 12 bytes>
0x4003ea:	lea	rax, [rbp - 0x70]
0x4003ee:	mov	rdi, rax
0x4003f1:	call	0x400936
<Block for 0x4003f6, 16 bytes>
0x4003f6:	mov	qword ptr [rbp - 0x50], rax
0x4003fa:	lea	rax, [rbp - 0x70]
0x4003fe:	mov	rdi, rax
0x400401:	call	0x400986
<Block for 0x400406, 23 bytes>
0x400406:	mov	qword ptr [rbp - 0x30], rax
0x40040a:	lea	rdx, [rbp - 0x30]
0x40040e:	lea	rax, [rbp - 0x50]
0x400412:	mov	rsi, rdx
0x400415:	mov	rdi, rax
0x400418:	call	0x4009d2
<Block for 0x40041d, 4 bytes>
0x40041d:	test	al, al
0x40041f:	je	0x400462
<Block for 0x400462, 22 bytes>
0x400462:	mov	rax, qword ptr [rip + 0xffbbf]
0x400469:	mov	rsi, rax
0x40046c:	lea	rdi, [rip + 0xffb95]
0x400473:	call	0x500030
<Block for 0x400421, 19 bytes>
0x400421:	lea	rsi, [rip + 0x154]
0x400428:	lea	rdi, [rip + 0xffbd9]
0x40042f:	call	0x500010
<Block for 0x400478, 12 bytes>
0x400478:	lea	rax, [rbp - 0x70]
0x40047c:	mov	rdi, rax
0x40047f:	call	0x4006f0
<Block for 0x400434, 15 bytes>
0x400434:	mov	rbx, rax
0x400437:	lea	rax, [rbp - 0x50]
0x40043b:	mov	rdi, rax
0x40043e:	call	0x400a50
<Block for 0x400484, 16 bytes>
0x400484:	nop	
0x400485:	mov	rax, qword ptr [rbp - 0x18]
0x400489:	xor	rax, qword ptr fs:[0x28]
0x400492:	je	0x4004ce
<Block for 0x400443, 12 bytes>
0x400443:	mov	eax, dword ptr [rax]
0x400445:	mov	esi, eax
0x400447:	mov	rdi, rbx
0x40044a:	call	0x500018
<Block for 0x4004ce, 7 bytes>
0x4004ce:	add	rsp, 0x68
0x4004d2:	pop	rbx
0x4004d3:	pop	rbp
0x4004d4:	ret	
<Block for 0x400494, 2 bytes>
0x400494:	jmp	0x4004c9
<Block for 0x40044f, 17 bytes>
0x40044f:	lea	rax, [rbp - 0x50]
0x400453:	mov	esi, 0
0x400458:	mov	rdi, rax
0x40045b:	call	0x4009f8
<Block for 0x4004c9, 5 bytes>
0x4004c9:	call	0x500040
<Block for 0x400460, 2 bytes>
0x400460:	jmp	0x4003fa
<Block for 0x4003fa, 12 bytes>
0x4003fa:	lea	rax, [rbp - 0x70]
0x4003fe:	mov	rdi, rax
0x400401:	call	0x400986
