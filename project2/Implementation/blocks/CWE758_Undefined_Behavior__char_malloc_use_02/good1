<Block for 0x40004f, 22 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x10
0x40005b:	mov	edi, 1
0x400060:	call	0x500000
<Block for 0x400065, 11 bytes>
0x400065:	mov	qword ptr [rbp - 8], rax
0x400069:	cmp	qword ptr [rbp - 8], 0
0x40006e:	jne	0x40007a
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 0xffffffff
0x400075:	call	0x500008
<Block for 0x40007a, 35 bytes>
0x40007a:	mov	byte ptr [rbp - 0xa], 5
0x40007e:	mov	rax, qword ptr [rbp - 8]
0x400082:	movzx	edx, byte ptr [rbp - 0xa]
0x400086:	mov	byte ptr [rax], dl
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	movzx	eax, byte ptr [rax]
0x40008f:	mov	byte ptr [rbp - 9], al
0x400092:	movsx	eax, byte ptr [rbp - 9]
0x400096:	mov	edi, eax
0x400098:	call	0x500018
<Block for 0x40009d, 12 bytes>
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 3 bytes>
0x4000a9:	nop	
0x4000aa:	leave	
0x4000ab:	ret	
