<Block for 0x400107, 22 bytes>
0x400107:	endbr64	
0x40010b:	push	rbp
0x40010c:	mov	rbp, rsp
0x40010f:	sub	rsp, 0x20
0x400113:	mov	edi, 0x64
0x400118:	call	0x500000
<Block for 0x40011d, 11 bytes>
0x40011d:	mov	qword ptr [rbp - 0x18], rax
0x400121:	cmp	qword ptr [rbp - 0x18], 0
0x400126:	jne	0x400132
<Block for 0x400128, 10 bytes>
0x400128:	mov	edi, 0xffffffff
0x40012d:	call	0x500008
<Block for 0x400132, 19 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x18]
0x400136:	mov	byte ptr [rax], 0
0x400139:	mov	rax, qword ptr [rbp - 0x18]
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x400145, 19 bytes>
0x400145:	mov	qword ptr [rbp - 0x10], rax
0x400149:	mov	eax, 0x64
0x40014e:	sub	rax, qword ptr [rbp - 0x10]
0x400152:	cmp	rax, 1
0x400156:	jbe	0x4001cb
<Block for 0x4001cb, 9 bytes>
0x4001cb:	mov	eax, 0
0x4001d0:	test	eax, eax
0x4001d2:	je	0x4001e2
<Block for 0x400158, 19 bytes>
0x400158:	lea	rsi, [rip + 0x219]
0x40015f:	lea	rdi, [rip + 0x214]
0x400166:	call	0x500018
<Block for 0x4001e2, 10 bytes>
0x4001e2:	mov	qword ptr [rbp - 0x20], 0
0x4001ea:	jmp	0x400211
<Block for 0x4001d4, 12 bytes>
0x4001d4:	lea	rdi, [rip + 0x1cd]
0x4001db:	call	0x500028
<Block for 0x40016b, 11 bytes>
0x40016b:	mov	qword ptr [rbp - 8], rax
0x40016f:	cmp	qword ptr [rbp - 8], 0
0x400174:	je	0x4001cb
<Block for 0x400211, 12 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x18]
0x400215:	mov	rdi, rax
0x400218:	call	0x500010
<Block for 0x4001e0, 2 bytes>
0x4001e0:	jmp	0x40022f
<Block for 0x400176, 42 bytes>
0x400176:	mov	rax, qword ptr [rbp - 0x10]
0x40017a:	mov	edx, 0x64
0x40017f:	sub	edx, eax
0x400181:	mov	eax, edx
0x400183:	mov	esi, eax
0x400185:	mov	rdx, qword ptr [rbp - 0x18]
0x400189:	mov	rax, qword ptr [rbp - 0x10]
0x40018d:	lea	rcx, [rdx + rax]
0x400191:	mov	rax, qword ptr [rbp - 8]
0x400195:	mov	rdx, rax
0x400198:	mov	rdi, rcx
0x40019b:	call	0x500020
<Block for 0x40021d, 6 bytes>
0x40021d:	cmp	qword ptr [rbp - 0x20], rax
0x400221:	jb	0x4001ec
<Block for 0x40022f, 3 bytes>
0x40022f:	nop	
0x400230:	leave	
0x400231:	ret	
<Block for 0x4001a0, 5 bytes>
0x4001a0:	test	rax, rax
0x4001a3:	jne	0x4001bf
<Block for 0x4001ec, 18 bytes>
0x4001ec:	mov	rdx, qword ptr [rbp - 0x18]
0x4001f0:	mov	rax, qword ptr [rbp - 0x20]
0x4001f4:	add	rax, rdx
0x4001f7:	movzx	eax, byte ptr [rax]
0x4001fa:	cmp	al, 0x53
0x4001fc:	jne	0x40020c
<Block for 0x400223, 12 bytes>
0x400223:	mov	rax, qword ptr [rbp - 0x18]
0x400227:	mov	rdi, rax
0x40022a:	call	0x500038
<Block for 0x4001a5, 12 bytes>
0x4001a5:	lea	rdi, [rip + 0x1dc]
0x4001ac:	call	0x500028
<Block for 0x4001bf, 12 bytes>
0x4001bf:	mov	rax, qword ptr [rbp - 8]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500030
<Block for 0x4001fe, 12 bytes>
0x4001fe:	lea	rdi, [rip + 0x192]
0x400205:	call	0x500028
<Block for 0x40020c, 17 bytes>
0x40020c:	add	qword ptr [rbp - 0x20], 1
0x400211:	mov	rax, qword ptr [rbp - 0x18]
0x400215:	mov	rdi, rax
0x400218:	call	0x500010
<Block for 0x4001b1, 26 bytes>
0x4001b1:	mov	rdx, qword ptr [rbp - 0x18]
0x4001b5:	mov	rax, qword ptr [rbp - 0x10]
0x4001b9:	add	rax, rdx
0x4001bc:	mov	byte ptr [rax], 0
0x4001bf:	mov	rax, qword ptr [rbp - 8]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500030
<Block for 0x40020a, 2 bytes>
0x40020a:	jmp	0x400223
