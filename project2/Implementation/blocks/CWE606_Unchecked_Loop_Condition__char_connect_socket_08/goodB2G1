<Block for 0x4002da, 154 bytes>
0x4002da:	endbr64	
0x4002de:	push	rbp
0x4002df:	mov	rbp, rsp
0x4002e2:	sub	rsp, 0xb0
0x4002e9:	mov	rax, qword ptr fs:[0x28]
0x4002f2:	mov	qword ptr [rbp - 8], rax
0x4002f6:	xor	eax, eax
0x4002f8:	mov	qword ptr [rbp - 0x70], 0
0x400300:	mov	qword ptr [rbp - 0x68], 0
0x400308:	mov	qword ptr [rbp - 0x60], 0
0x400310:	mov	qword ptr [rbp - 0x58], 0
0x400318:	mov	qword ptr [rbp - 0x50], 0
0x400320:	mov	qword ptr [rbp - 0x48], 0
0x400328:	mov	qword ptr [rbp - 0x40], 0
0x400330:	mov	qword ptr [rbp - 0x38], 0
0x400338:	mov	qword ptr [rbp - 0x30], 0
0x400340:	mov	qword ptr [rbp - 0x28], 0
0x400348:	mov	qword ptr [rbp - 0x20], 0
0x400350:	mov	qword ptr [rbp - 0x18], 0
0x400358:	mov	dword ptr [rbp - 0x10], 0
0x40035f:	lea	rax, [rbp - 0x70]
0x400363:	mov	qword ptr [rbp - 0x98], rax
0x40036a:	mov	eax, 0
0x40036f:	call	0x400000
<Block for 0x400374, 8 bytes>
0x400374:	test	eax, eax
0x400376:	je	0x40050b
<Block for 0x40050b, 10 bytes>
0x40050b:	mov	eax, 0
0x400510:	call	0x40000f
<Block for 0x40037c, 25 bytes>
0x40037c:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400386:	mov	rax, qword ptr [rbp - 0x98]
0x40038d:	mov	rdi, rax
0x400390:	call	0x500000
<Block for 0x400515, 4 bytes>
0x400515:	test	eax, eax
0x400517:	je	0x400527
<Block for 0x400395, 27 bytes>
0x400395:	mov	qword ptr [rbp - 0x90], rax
0x40039c:	mov	edx, 6
0x4003a1:	mov	esi, 1
0x4003a6:	mov	edi, 2
0x4003ab:	call	0x500008
<Block for 0x400527, 34 bytes>
0x400527:	lea	rdx, [rbp - 0xac]
0x40052e:	mov	rax, qword ptr [rbp - 0x98]
0x400535:	lea	rsi, [rip + 0x5c5]
0x40053c:	mov	rdi, rax
0x40053f:	mov	eax, 0
0x400544:	call	0x500048
<Block for 0x400519, 12 bytes>
0x400519:	lea	rdi, [rip + 0x5e4]
0x400520:	call	0x500060
<Block for 0x4003b0, 19 bytes>
0x4003b0:	mov	dword ptr [rbp - 0xa0], eax
0x4003b6:	cmp	dword ptr [rbp - 0xa0], -1
0x4003bd:	je	0x4004f1
<Block for 0x400549, 5 bytes>
0x400549:	cmp	eax, 1
0x40054c:	jne	0x40059a
<Block for 0x400525, 2 bytes>
0x400525:	jmp	0x40059a
<Block for 0x4004f1, 3 bytes>
0x4004f1:	nop	
0x4004f2:	jmp	0x4004f5
<Block for 0x4003c3, 22 bytes>
0x4003c3:	lea	rax, [rbp - 0x80]
0x4003c7:	mov	edx, 0x10
0x4003cc:	mov	esi, 0
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x500010
<Block for 0x40054e, 13 bytes>
0x40054e:	mov	eax, dword ptr [rbp - 0xac]
0x400554:	cmp	eax, 0x270f
0x400559:	jg	0x40059a
<Block for 0x40059a, 16 bytes>
0x40059a:	nop	
0x40059b:	mov	rax, qword ptr [rbp - 8]
0x40059f:	xor	rax, qword ptr fs:[0x28]
0x4005a8:	je	0x4005af
<Block for 0x4004f5, 9 bytes>
0x4004f5:	cmp	dword ptr [rbp - 0xa0], -1
0x4004fc:	je	0x40050b
<Block for 0x4003d9, 18 bytes>
0x4003d9:	mov	word ptr [rbp - 0x80], 2
0x4003df:	lea	rdi, [rip + 0x711]
0x4003e6:	call	0x500018
<Block for 0x40055b, 22 bytes>
0x40055b:	mov	dword ptr [rbp - 0xa4], 0
0x400565:	mov	dword ptr [rbp - 0xa8], 0
0x40056f:	jmp	0x40057f
<Block for 0x4005af, 2 bytes>
0x4005af:	leave	
0x4005b0:	ret	
<Block for 0x4005aa, 5 bytes>
0x4005aa:	call	0x500058
<Block for 0x4004fe, 13 bytes>
0x4004fe:	mov	eax, dword ptr [rbp - 0xa0]
0x400504:	mov	edi, eax
0x400506:	call	0x500040
<Block for 0x4003eb, 13 bytes>
0x4003eb:	mov	dword ptr [rbp - 0x7c], eax
0x4003ee:	mov	edi, 0x6987
0x4003f3:	call	0x500020
<Block for 0x40057f, 14 bytes>
0x40057f:	mov	eax, dword ptr [rbp - 0xac]
0x400585:	cmp	dword ptr [rbp - 0xa8], eax
0x40058b:	jl	0x400571
<Block for 0x4003f8, 29 bytes>
0x4003f8:	mov	word ptr [rbp - 0x7e], ax
0x4003fc:	lea	rcx, [rbp - 0x80]
0x400400:	mov	eax, dword ptr [rbp - 0xa0]
0x400406:	mov	edx, 0x10
0x40040b:	mov	rsi, rcx
0x40040e:	mov	edi, eax
0x400410:	call	0x500028
<Block for 0x400571, 28 bytes>
0x400571:	add	dword ptr [rbp - 0xa4], 1
0x400578:	add	dword ptr [rbp - 0xa8], 1
0x40057f:	mov	eax, dword ptr [rbp - 0xac]
0x400585:	cmp	dword ptr [rbp - 0xa8], eax
0x40058b:	jl	0x400571
<Block for 0x40058d, 13 bytes>
0x40058d:	mov	eax, dword ptr [rbp - 0xa4]
0x400593:	mov	edi, eax
0x400595:	call	0x500050
<Block for 0x400415, 9 bytes>
0x400415:	cmp	eax, -1
0x400418:	je	0x4004f4
<Block for 0x40041e, 51 bytes>
0x40041e:	mov	eax, 0x63
0x400423:	sub	rax, qword ptr [rbp - 0x90]
0x40042a:	mov	rdx, rax
0x40042d:	mov	rcx, qword ptr [rbp - 0x98]
0x400434:	mov	rax, qword ptr [rbp - 0x90]
0x40043b:	lea	rsi, [rcx + rax]
0x40043f:	mov	eax, dword ptr [rbp - 0xa0]
0x400445:	mov	ecx, 0
0x40044a:	mov	edi, eax
0x40044c:	call	0x500030
<Block for 0x4004f4, 1 bytes>
0x4004f4:	nop	
<Block for 0x400451, 19 bytes>
0x400451:	mov	dword ptr [rbp - 0x9c], eax
0x400457:	cmp	dword ptr [rbp - 0x9c], -1
0x40045e:	je	0x4004f5
<Block for 0x400464, 13 bytes>
0x400464:	cmp	dword ptr [rbp - 0x9c], 0
0x40046b:	je	0x4004f5
<Block for 0x400471, 52 bytes>
0x400471:	mov	eax, dword ptr [rbp - 0x9c]
0x400477:	movsxd	rdx, eax
0x40047a:	mov	rax, qword ptr [rbp - 0x90]
0x400481:	add	rdx, rax
0x400484:	mov	rax, qword ptr [rbp - 0x98]
0x40048b:	add	rax, rdx
0x40048e:	mov	byte ptr [rax], 0
0x400491:	mov	rax, qword ptr [rbp - 0x98]
0x400498:	mov	esi, 0xd
0x40049d:	mov	rdi, rax
0x4004a0:	call	0x500038
<Block for 0x4004a5, 17 bytes>
0x4004a5:	mov	qword ptr [rbp - 0x88], rax
0x4004ac:	cmp	qword ptr [rbp - 0x88], 0
0x4004b4:	je	0x4004c0
<Block for 0x4004c0, 20 bytes>
0x4004c0:	mov	rax, qword ptr [rbp - 0x98]
0x4004c7:	mov	esi, 0xa
0x4004cc:	mov	rdi, rax
0x4004cf:	call	0x500038
<Block for 0x4004b6, 30 bytes>
0x4004b6:	mov	rax, qword ptr [rbp - 0x88]
0x4004bd:	mov	byte ptr [rax], 0
0x4004c0:	mov	rax, qword ptr [rbp - 0x98]
0x4004c7:	mov	esi, 0xa
0x4004cc:	mov	rdi, rax
0x4004cf:	call	0x500038
<Block for 0x4004d4, 17 bytes>
0x4004d4:	mov	qword ptr [rbp - 0x88], rax
0x4004db:	cmp	qword ptr [rbp - 0x88], 0
0x4004e3:	je	0x4004f5
<Block for 0x4004e5, 12 bytes>
0x4004e5:	mov	rax, qword ptr [rbp - 0x88]
0x4004ec:	mov	byte ptr [rax], 0
0x4004ef:	jmp	0x4004f5
