<Block for 0x400232, 43 bytes>
0x400232:	endbr64	
0x400236:	push	rbp
0x400237:	mov	rbp, rsp
0x40023a:	push	rbx
0x40023b:	sub	rsp, 0x88
0x400242:	mov	rax, qword ptr fs:[0x28]
0x40024b:	mov	qword ptr [rbp - 0x18], rax
0x40024f:	xor	eax, eax
0x400251:	lea	rax, [rbp - 0x80]
0x400255:	mov	rdi, rax
0x400258:	call	0x4005b4
<Block for 0x40025d, 10 bytes>
0x40025d:	mov	edi, 0x64
0x400262:	call	0x500000
<Block for 0x400267, 17 bytes>
0x400267:	mov	qword ptr [rbp - 0x90], rax
0x40026e:	cmp	qword ptr [rbp - 0x90], 0
0x400276:	jne	0x400282
<Block for 0x400278, 10 bytes>
0x400278:	mov	edi, 0xffffffff
0x40027d:	call	0x500008
<Block for 0x400282, 25 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0x90]
0x400289:	mov	byte ptr [rax], 0
0x40028c:	mov	rax, qword ptr [rbp - 0x90]
0x400293:	mov	rdi, rax
0x400296:	call	0x500010
<Block for 0x40029b, 29 bytes>
0x40029b:	mov	qword ptr [rbp - 0x88], rax
0x4002a2:	mov	eax, 0x64
0x4002a7:	sub	rax, qword ptr [rbp - 0x88]
0x4002ae:	cmp	rax, 1
0x4002b2:	jbe	0x40036d
<Block for 0x40036d, 26 bytes>
0x40036d:	mov	dword ptr [rbp - 0x50], 0
0x400374:	lea	rdx, [rbp - 0x50]
0x400378:	lea	rax, [rbp - 0x80]
0x40037c:	mov	rsi, rdx
0x40037f:	mov	rdi, rax
0x400382:	call	0x40076e
<Block for 0x4002b8, 53 bytes>
0x4002b8:	mov	rax, qword ptr [rip + 0xffd59]
0x4002bf:	mov	rdx, qword ptr [rbp - 0x88]
0x4002c6:	mov	ecx, 0x64
0x4002cb:	sub	ecx, edx
0x4002cd:	mov	edx, ecx
0x4002cf:	mov	esi, edx
0x4002d1:	mov	rcx, qword ptr [rbp - 0x90]
0x4002d8:	mov	rdx, qword ptr [rbp - 0x88]
0x4002df:	add	rcx, rdx
0x4002e2:	mov	rdx, rax
0x4002e5:	mov	rdi, rcx
0x4002e8:	call	0x500020
<Block for 0x400387, 36 bytes>
0x400387:	mov	rdx, qword ptr [rbp - 0x90]
0x40038e:	mov	qword ptr [rax], rdx
0x400391:	mov	dword ptr [rbp - 0x50], 1
0x400398:	lea	rdx, [rbp - 0x50]
0x40039c:	lea	rax, [rbp - 0x80]
0x4003a0:	mov	rsi, rdx
0x4003a3:	mov	rdi, rax
0x4003a6:	call	0x40076e
<Block for 0x4002ed, 10 bytes>
0x4002ed:	test	rax, rax
0x4002f0:	setne	al
0x4002f3:	test	al, al
0x4002f5:	je	0x40034d
<Block for 0x4003ab, 36 bytes>
0x4003ab:	mov	rdx, qword ptr [rbp - 0x90]
0x4003b2:	mov	qword ptr [rax], rdx
0x4003b5:	mov	dword ptr [rbp - 0x50], 2
0x4003bc:	lea	rdx, [rbp - 0x50]
0x4003c0:	lea	rax, [rbp - 0x80]
0x4003c4:	mov	rsi, rdx
0x4003c7:	mov	rdi, rax
0x4003ca:	call	0x40076e
<Block for 0x40034d, 12 bytes>
0x40034d:	lea	rdi, [rip + 0x14c]
0x400354:	call	0x500028
<Block for 0x4002f7, 15 bytes>
0x4002f7:	mov	rax, qword ptr [rbp - 0x90]
0x4002fe:	mov	rdi, rax
0x400301:	call	0x500010
<Block for 0x4003cf, 29 bytes>
0x4003cf:	mov	rdx, qword ptr [rbp - 0x90]
0x4003d6:	mov	qword ptr [rax], rdx
0x4003d9:	lea	rdx, [rbp - 0x80]
0x4003dd:	lea	rax, [rbp - 0x50]
0x4003e1:	mov	rsi, rdx
0x4003e4:	mov	rdi, rax
0x4003e7:	call	0x4005f4
<Block for 0x400359, 46 bytes>
0x400359:	mov	rdx, qword ptr [rbp - 0x90]
0x400360:	mov	rax, qword ptr [rbp - 0x88]
0x400367:	add	rax, rdx
0x40036a:	mov	byte ptr [rax], 0
0x40036d:	mov	dword ptr [rbp - 0x50], 0
0x400374:	lea	rdx, [rbp - 0x50]
0x400378:	lea	rax, [rbp - 0x80]
0x40037c:	mov	rsi, rdx
0x40037f:	mov	rdi, rax
0x400382:	call	0x40076e
<Block for 0x400306, 17 bytes>
0x400306:	mov	qword ptr [rbp - 0x88], rax
0x40030d:	cmp	qword ptr [rbp - 0x88], 0
0x400315:	je	0x40036d
<Block for 0x4003ec, 12 bytes>
0x4003ec:	lea	rax, [rbp - 0x50]
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x500048
<Block for 0x400317, 28 bytes>
0x400317:	mov	rax, qword ptr [rbp - 0x88]
0x40031e:	lea	rdx, [rax - 1]
0x400322:	mov	rax, qword ptr [rbp - 0x90]
0x400329:	add	rax, rdx
0x40032c:	movzx	eax, byte ptr [rax]
0x40032f:	cmp	al, 0xa
0x400331:	jne	0x40036d
<Block for 0x4003f8, 12 bytes>
0x4003f8:	lea	rax, [rbp - 0x50]
0x4003fc:	mov	rdi, rax
0x4003ff:	call	0x4005d4
<Block for 0x400333, 26 bytes>
0x400333:	mov	rax, qword ptr [rbp - 0x88]
0x40033a:	lea	rdx, [rax - 1]
0x40033e:	mov	rax, qword ptr [rbp - 0x90]
0x400345:	add	rax, rdx
0x400348:	mov	byte ptr [rax], 0
0x40034b:	jmp	0x40036d
<Block for 0x400404, 12 bytes>
0x400404:	lea	rax, [rbp - 0x80]
0x400408:	mov	rdi, rax
0x40040b:	call	0x4005d4
<Block for 0x400410, 16 bytes>
0x400410:	nop	
0x400411:	mov	rax, qword ptr [rbp - 0x18]
0x400415:	xor	rax, qword ptr fs:[0x28]
0x40041e:	je	0x40045a
<Block for 0x40045a, 10 bytes>
0x40045a:	add	rsp, 0x88
0x400461:	pop	rbx
0x400462:	pop	rbp
0x400463:	ret	
<Block for 0x400420, 2 bytes>
0x400420:	jmp	0x400455
<Block for 0x400455, 5 bytes>
0x400455:	call	0x500040
