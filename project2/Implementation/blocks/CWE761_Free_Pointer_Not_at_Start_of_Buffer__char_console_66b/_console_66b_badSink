<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	rax, qword ptr [rbp - 0x18]
0x400014:	mov	rax, qword ptr [rax + 0x10]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	jmp	0x40003c
<Block for 0x40003c, 11 bytes>
0x40003c:	mov	rax, qword ptr [rbp - 8]
0x400040:	movzx	eax, byte ptr [rax]
0x400043:	test	al, al
0x400045:	jne	0x40001e
<Block for 0x400047, 12 bytes>
0x400047:	mov	rax, qword ptr [rbp - 8]
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x40001e, 11 bytes>
0x40001e:	mov	rax, qword ptr [rbp - 8]
0x400022:	movzx	eax, byte ptr [rax]
0x400025:	cmp	al, 0x53
0x400027:	jne	0x400037
<Block for 0x400053, 3 bytes>
0x400053:	nop	
0x400054:	leave	
0x400055:	ret	
<Block for 0x400029, 12 bytes>
0x400029:	lea	rdi, [rip + 0x92]
0x400030:	call	0x500000
<Block for 0x400037, 16 bytes>
0x400037:	add	qword ptr [rbp - 8], 1
0x40003c:	mov	rax, qword ptr [rbp - 8]
0x400040:	movzx	eax, byte ptr [rax]
0x400043:	test	al, al
0x400045:	jne	0x40001e
<Block for 0x400035, 2 bytes>
0x400035:	jmp	0x400047
