<Block for 0x4000ae, 36 bytes>
0x4000ae:	endbr64	
0x4000b2:	push	rbp
0x4000b3:	mov	rbp, rsp
0x4000b6:	push	rbx
0x4000b7:	sub	rsp, 0x18
0x4000bb:	mov	rax, qword ptr [rip + 0xfff6e]
0x4000c2:	mov	qword ptr [rbp - 0x18], rax
0x4000c6:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000cd:	call	0x500010
<Block for 0x4000d2, 7 bytes>
0x4000d2:	and	eax, 1
0x4000d5:	test	eax, eax
0x4000d7:	je	0x4000f6
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500010
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500010
<Block for 0x4000fb, 10 bytes>
0x4000fb:	shl	eax, 0x1e
0x4000fe:	mov	ebx, eax
0x400100:	call	0x500010
<Block for 0x4000de, 10 bytes>
0x4000de:	shl	eax, 0x1e
0x4000e1:	mov	ebx, eax
0x4000e3:	call	0x500010
<Block for 0x400105, 10 bytes>
0x400105:	shl	eax, 0xf
0x400108:	xor	ebx, eax
0x40010a:	call	0x500010
<Block for 0x4000e8, 10 bytes>
0x4000e8:	shl	eax, 0xf
0x4000eb:	xor	ebx, eax
0x4000ed:	call	0x500010
<Block for 0x40010f, 18 bytes>
0x40010f:	xor	eax, ebx
0x400111:	not	eax
0x400113:	mov	dword ptr [rbp - 0x1c], eax
0x400116:	mov	eax, dword ptr [rbp - 0x1c]
0x400119:	mov	rdx, qword ptr [rbp - 0x18]
0x40011d:	mov	edi, eax
0x40011f:	call	rdx
<Block for 0x4000f2, 4 bytes>
0x4000f2:	xor	eax, ebx
0x4000f4:	jmp	0x400113
<Block for 0x400121, 8 bytes>
0x400121:	nop	
0x400122:	add	rsp, 0x18
0x400126:	pop	rbx
0x400127:	pop	rbp
0x400128:	ret	
<Block for 0x400113, 14 bytes>
0x400113:	mov	dword ptr [rbp - 0x1c], eax
0x400116:	mov	eax, dword ptr [rbp - 0x1c]
0x400119:	mov	rdx, qword ptr [rbp - 0x18]
0x40011d:	mov	edi, eax
0x40011f:	call	rdx
