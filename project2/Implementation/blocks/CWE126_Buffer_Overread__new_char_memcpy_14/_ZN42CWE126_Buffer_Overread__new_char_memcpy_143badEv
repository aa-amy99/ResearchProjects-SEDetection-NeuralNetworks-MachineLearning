<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	eax, dword ptr [rip + 0xfffd7]
0x400029:	cmp	eax, 5
0x40002c:	jne	0x40005d
<Block for 0x40002e, 10 bytes>
0x40002e:	mov	edi, 0x32
0x400033:	call	0x500008
<Block for 0x40005d, 22 bytes>
0x40005d:	lea	rax, [rbp - 0x70]
0x400061:	mov	edx, 0x63
0x400066:	mov	esi, 0x43
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500010
<Block for 0x400038, 26 bytes>
0x400038:	mov	qword ptr [rbp - 0x78], rax
0x40003c:	mov	rax, qword ptr [rbp - 0x78]
0x400040:	mov	edx, 0x31
0x400045:	mov	esi, 0x41
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500010
<Block for 0x400073, 16 bytes>
0x400073:	mov	byte ptr [rbp - 0xd], 0
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	rdi, rax
0x40007e:	call	0x500018
<Block for 0x400052, 33 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x78]
0x400056:	add	rax, 0x31
0x40005a:	mov	byte ptr [rax], 0
0x40005d:	lea	rax, [rbp - 0x70]
0x400061:	mov	edx, 0x63
0x400066:	mov	esi, 0x43
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500010
<Block for 0x400083, 22 bytes>
0x400083:	mov	rdx, rax
0x400086:	mov	rcx, qword ptr [rbp - 0x78]
0x40008a:	lea	rax, [rbp - 0x70]
0x40008e:	mov	rsi, rcx
0x400091:	mov	rdi, rax
0x400094:	call	0x500020
<Block for 0x400099, 16 bytes>
0x400099:	mov	byte ptr [rbp - 0xd], 0
0x40009d:	lea	rax, [rbp - 0x70]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500028
<Block for 0x4000a9, 7 bytes>
0x4000a9:	cmp	qword ptr [rbp - 0x78], 0
0x4000ae:	je	0x4000bc
<Block for 0x4000bc, 16 bytes>
0x4000bc:	nop	
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	xor	rax, qword ptr fs:[0x28]
0x4000ca:	je	0x4000d1
<Block for 0x4000b0, 12 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 0x78]
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500030
<Block for 0x4000d1, 2 bytes>
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x4000cc, 5 bytes>
0x4000cc:	call	0x500038
