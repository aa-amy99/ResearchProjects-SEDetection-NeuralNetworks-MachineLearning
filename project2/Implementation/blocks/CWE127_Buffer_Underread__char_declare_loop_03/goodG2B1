<Block for 0x4000d1, 55 bytes>
0x4000d1:	endbr64	
0x4000d5:	push	rbp
0x4000d6:	mov	rbp, rsp
0x4000d9:	sub	rsp, 0xf0
0x4000e0:	mov	rax, qword ptr fs:[0x28]
0x4000e9:	mov	qword ptr [rbp - 8], rax
0x4000ed:	xor	eax, eax
0x4000ef:	lea	rax, [rbp - 0xe0]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x41
0x400100:	mov	rdi, rax
0x400103:	call	0x500000
<Block for 0x400108, 40 bytes>
0x400108:	mov	byte ptr [rbp - 0x7d], 0
0x40010c:	lea	rax, [rbp - 0xe0]
0x400113:	mov	qword ptr [rbp - 0xe8], rax
0x40011a:	lea	rax, [rbp - 0x70]
0x40011e:	mov	edx, 0x63
0x400123:	mov	esi, 0x43
0x400128:	mov	rdi, rax
0x40012b:	call	0x500000
<Block for 0x400130, 17 bytes>
0x400130:	mov	byte ptr [rbp - 0xd], 0
0x400134:	mov	qword ptr [rbp - 0xf0], 0
0x40013f:	jmp	0x40016d
<Block for 0x40016d, 10 bytes>
0x40016d:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400175:	jbe	0x400141
<Block for 0x400141, 54 bytes>
0x400141:	mov	rdx, qword ptr [rbp - 0xe8]
0x400148:	mov	rax, qword ptr [rbp - 0xf0]
0x40014f:	add	rax, rdx
0x400152:	movzx	eax, byte ptr [rax]
0x400155:	lea	rcx, [rbp - 0x70]
0x400159:	mov	rdx, qword ptr [rbp - 0xf0]
0x400160:	add	rdx, rcx
0x400163:	mov	byte ptr [rdx], al
0x400165:	add	qword ptr [rbp - 0xf0], 1
0x40016d:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400175:	jbe	0x400141
<Block for 0x400177, 16 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	rdi, rax
0x400182:	call	0x500008
<Block for 0x400187, 16 bytes>
0x400187:	nop	
0x400188:	mov	rax, qword ptr [rbp - 8]
0x40018c:	xor	rax, qword ptr fs:[0x28]
0x400195:	je	0x40019c
<Block for 0x40019c, 2 bytes>
0x40019c:	leave	
0x40019d:	ret	
<Block for 0x400197, 5 bytes>
0x400197:	call	0x500010
