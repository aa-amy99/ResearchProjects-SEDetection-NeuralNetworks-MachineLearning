<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x54]
0x400020:	mov	qword ptr [rbp - 0x48], rax
0x400024:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40002b:	call	0x500000
<Block for 0x400030, 7 bytes>
0x400030:	and	eax, 1
0x400033:	test	eax, eax
0x400035:	je	0x400054
<Block for 0x400054, 5 bytes>
0x400054:	call	0x500000
<Block for 0x400037, 5 bytes>
0x400037:	call	0x500000
<Block for 0x400059, 10 bytes>
0x400059:	shl	eax, 0x1e
0x40005c:	mov	ebx, eax
0x40005e:	call	0x500000
<Block for 0x40003c, 10 bytes>
0x40003c:	shl	eax, 0x1e
0x40003f:	mov	ebx, eax
0x400041:	call	0x500000
<Block for 0x400063, 10 bytes>
0x400063:	shl	eax, 0xf
0x400066:	xor	ebx, eax
0x400068:	call	0x500000
<Block for 0x400046, 10 bytes>
0x400046:	shl	eax, 0xf
0x400049:	xor	ebx, eax
0x40004b:	call	0x500000
<Block for 0x40006d, 62 bytes>
0x40006d:	xor	eax, ebx
0x40006f:	not	eax
0x400071:	mov	dword ptr [rbp - 0x54], eax
0x400074:	mov	rax, qword ptr [rbp - 0x48]
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	mov	dword ptr [rbp - 0x4c], eax
0x40007d:	mov	qword ptr [rbp - 0x40], 0
0x400085:	mov	qword ptr [rbp - 0x38], 0
0x40008d:	mov	qword ptr [rbp - 0x30], 0
0x400095:	mov	qword ptr [rbp - 0x28], 0
0x40009d:	mov	qword ptr [rbp - 0x20], 0
0x4000a5:	cmp	dword ptr [rbp - 0x4c], 9
0x4000a9:	jg	0x4000db
<Block for 0x400050, 4 bytes>
0x400050:	xor	eax, ebx
0x400052:	jmp	0x400071
<Block for 0x4000ab, 26 bytes>
0x4000ab:	mov	eax, dword ptr [rbp - 0x4c]
0x4000ae:	cdqe	
0x4000b0:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4000b8:	mov	dword ptr [rbp - 0x50], 0
0x4000bf:	cmp	dword ptr [rbp - 0x50], 9
0x4000c3:	jg	0x4000f5
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rdi, [rip + 0x226]
0x4000e2:	call	0x500010
<Block for 0x400071, 58 bytes>
0x400071:	mov	dword ptr [rbp - 0x54], eax
0x400074:	mov	rax, qword ptr [rbp - 0x48]
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	mov	dword ptr [rbp - 0x4c], eax
0x40007d:	mov	qword ptr [rbp - 0x40], 0
0x400085:	mov	qword ptr [rbp - 0x38], 0
0x40008d:	mov	qword ptr [rbp - 0x30], 0
0x400095:	mov	qword ptr [rbp - 0x28], 0
0x40009d:	mov	qword ptr [rbp - 0x20], 0
0x4000a5:	cmp	dword ptr [rbp - 0x4c], 9
0x4000a9:	jg	0x4000db
<Block for 0x4000c5, 16 bytes>
0x4000c5:	mov	eax, dword ptr [rbp - 0x50]
0x4000c8:	cdqe	
0x4000ca:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000ce:	mov	edi, eax
0x4000d0:	call	0x500008
<Block for 0x4000f5, 16 bytes>
0x4000f5:	nop	
0x4000f6:	mov	rax, qword ptr [rbp - 0x18]
0x4000fa:	xor	rax, qword ptr fs:[0x28]
0x400103:	je	0x40010a
<Block for 0x4000e7, 2 bytes>
0x4000e7:	jmp	0x4000f5
<Block for 0x4000d5, 6 bytes>
0x4000d5:	add	dword ptr [rbp - 0x50], 1
0x4000d9:	jmp	0x4000bf
<Block for 0x40010a, 7 bytes>
0x40010a:	add	rsp, 0x58
0x40010e:	pop	rbx
0x40010f:	pop	rbp
0x400110:	ret	
<Block for 0x400105, 5 bytes>
0x400105:	call	0x500020
<Block for 0x4000bf, 6 bytes>
0x4000bf:	cmp	dword ptr [rbp - 0x50], 9
0x4000c3:	jg	0x4000f5
