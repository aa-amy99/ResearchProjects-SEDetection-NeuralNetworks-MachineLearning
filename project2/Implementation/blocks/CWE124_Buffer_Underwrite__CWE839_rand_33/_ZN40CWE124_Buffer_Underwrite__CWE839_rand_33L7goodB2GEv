<Block for 0x4001da, 48 bytes>
0x4001da:	endbr64	
0x4001de:	push	rbp
0x4001df:	mov	rbp, rsp
0x4001e2:	push	rbx
0x4001e3:	sub	rsp, 0x58
0x4001e7:	mov	rax, qword ptr fs:[0x28]
0x4001f0:	mov	qword ptr [rbp - 0x18], rax
0x4001f4:	xor	eax, eax
0x4001f6:	lea	rax, [rbp - 0x54]
0x4001fa:	mov	qword ptr [rbp - 0x48], rax
0x4001fe:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400205:	call	0x500000
<Block for 0x40020a, 7 bytes>
0x40020a:	and	eax, 1
0x40020d:	test	eax, eax
0x40020f:	je	0x40022e
<Block for 0x40022e, 5 bytes>
0x40022e:	call	0x500000
<Block for 0x400211, 5 bytes>
0x400211:	call	0x500000
<Block for 0x400233, 10 bytes>
0x400233:	shl	eax, 0x1e
0x400236:	mov	ebx, eax
0x400238:	call	0x500000
<Block for 0x400216, 10 bytes>
0x400216:	shl	eax, 0x1e
0x400219:	mov	ebx, eax
0x40021b:	call	0x500000
<Block for 0x40023d, 10 bytes>
0x40023d:	shl	eax, 0xf
0x400240:	xor	ebx, eax
0x400242:	call	0x500000
<Block for 0x400220, 10 bytes>
0x400220:	shl	eax, 0xf
0x400223:	xor	ebx, eax
0x400225:	call	0x500000
<Block for 0x400247, 62 bytes>
0x400247:	xor	eax, ebx
0x400249:	not	eax
0x40024b:	mov	dword ptr [rbp - 0x54], eax
0x40024e:	mov	rax, qword ptr [rbp - 0x48]
0x400252:	mov	eax, dword ptr [rax]
0x400254:	mov	dword ptr [rbp - 0x4c], eax
0x400257:	mov	qword ptr [rbp - 0x40], 0
0x40025f:	mov	qword ptr [rbp - 0x38], 0
0x400267:	mov	qword ptr [rbp - 0x30], 0
0x40026f:	mov	qword ptr [rbp - 0x28], 0
0x400277:	mov	qword ptr [rbp - 0x20], 0
0x40027f:	cmp	dword ptr [rbp - 0x4c], 0
0x400283:	js	0x4002bb
<Block for 0x40022a, 4 bytes>
0x40022a:	xor	eax, ebx
0x40022c:	jmp	0x40024b
<Block for 0x4002bb, 12 bytes>
0x4002bb:	lea	rdi, [rip + 0x66]
0x4002c2:	call	0x500010
<Block for 0x400285, 6 bytes>
0x400285:	cmp	dword ptr [rbp - 0x4c], 9
0x400289:	jg	0x4002bb
<Block for 0x40024b, 58 bytes>
0x40024b:	mov	dword ptr [rbp - 0x54], eax
0x40024e:	mov	rax, qword ptr [rbp - 0x48]
0x400252:	mov	eax, dword ptr [rax]
0x400254:	mov	dword ptr [rbp - 0x4c], eax
0x400257:	mov	qword ptr [rbp - 0x40], 0
0x40025f:	mov	qword ptr [rbp - 0x38], 0
0x400267:	mov	qword ptr [rbp - 0x30], 0
0x40026f:	mov	qword ptr [rbp - 0x28], 0
0x400277:	mov	qword ptr [rbp - 0x20], 0
0x40027f:	cmp	dword ptr [rbp - 0x4c], 0
0x400283:	js	0x4002bb
<Block for 0x4002c7, 2 bytes>
0x4002c7:	jmp	0x4002d8
<Block for 0x40028b, 26 bytes>
0x40028b:	mov	eax, dword ptr [rbp - 0x4c]
0x40028e:	cdqe	
0x400290:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400298:	mov	dword ptr [rbp - 0x50], 0
0x40029f:	cmp	dword ptr [rbp - 0x50], 9
0x4002a3:	jg	0x4002c9
<Block for 0x4002d8, 15 bytes>
0x4002d8:	mov	rax, qword ptr [rbp - 0x18]
0x4002dc:	xor	rax, qword ptr fs:[0x28]
0x4002e5:	je	0x4002ec
<Block for 0x4002a5, 16 bytes>
0x4002a5:	mov	eax, dword ptr [rbp - 0x50]
0x4002a8:	cdqe	
0x4002aa:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002ae:	mov	edi, eax
0x4002b0:	call	0x500008
<Block for 0x4002c9, 3 bytes>
0x4002c9:	nop	
0x4002ca:	jmp	0x4002d8
<Block for 0x4002ec, 7 bytes>
0x4002ec:	add	rsp, 0x58
0x4002f0:	pop	rbx
0x4002f1:	pop	rbp
0x4002f2:	ret	
<Block for 0x4002e7, 5 bytes>
0x4002e7:	call	0x500020
<Block for 0x4002b5, 6 bytes>
0x4002b5:	add	dword ptr [rbp - 0x50], 1
0x4002b9:	jmp	0x40029f
<Block for 0x40029f, 6 bytes>
0x40029f:	cmp	dword ptr [rbp - 0x50], 9
0x4002a3:	jg	0x4002c9
