<Block for 0x4001d2, 24 bytes>
0x4001d2:	endbr64	
0x4001d6:	push	rbp
0x4001d7:	mov	rbp, rsp
0x4001da:	sub	rsp, 0x20
0x4001de:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4001e5:	call	0x400000
<Block for 0x4001ea, 9 bytes>
0x4001ea:	test	eax, eax
0x4001ec:	setne	al
0x4001ef:	test	al, al
0x4001f1:	je	0x4001fa
<Block for 0x4001fa, 25 bytes>
0x4001fa:	mov	eax, dword ptr [rbp - 0x1c]
0x4001fd:	cdqe	
0x4001ff:	shl	rax, 2
0x400203:	mov	qword ptr [rbp - 0x10], rax
0x400207:	mov	rax, qword ptr [rbp - 0x10]
0x40020b:	mov	rdi, rax
0x40020e:	call	0x500020
<Block for 0x4001f3, 32 bytes>
0x4001f3:	mov	dword ptr [rbp - 0x1c], 0x14
0x4001fa:	mov	eax, dword ptr [rbp - 0x1c]
0x4001fd:	cdqe	
0x4001ff:	shl	rax, 2
0x400203:	mov	qword ptr [rbp - 0x10], rax
0x400207:	mov	rax, qword ptr [rbp - 0x10]
0x40020b:	mov	rdi, rax
0x40020e:	call	0x500020
<Block for 0x400213, 23 bytes>
0x400213:	mov	qword ptr [rbp - 8], rax
0x400217:	mov	qword ptr [rbp - 0x18], 0
0x40021f:	mov	eax, dword ptr [rbp - 0x1c]
0x400222:	cdqe	
0x400224:	cmp	qword ptr [rbp - 0x18], rax
0x400228:	jae	0x40024a
<Block for 0x40022a, 32 bytes>
0x40022a:	mov	rax, qword ptr [rbp - 0x18]
0x40022e:	lea	rdx, [rax*4]
0x400236:	mov	rax, qword ptr [rbp - 8]
0x40023a:	add	rax, rdx
0x40023d:	mov	dword ptr [rax], 0
0x400243:	add	qword ptr [rbp - 0x18], 1
0x400248:	jmp	0x40021f
<Block for 0x40024a, 13 bytes>
0x40024a:	mov	rax, qword ptr [rbp - 8]
0x40024e:	mov	eax, dword ptr [rax]
0x400250:	mov	edi, eax
0x400252:	call	0x500028
<Block for 0x40021f, 11 bytes>
0x40021f:	mov	eax, dword ptr [rbp - 0x1c]
0x400222:	cdqe	
0x400224:	cmp	qword ptr [rbp - 0x18], rax
0x400228:	jae	0x40024a
<Block for 0x400257, 7 bytes>
0x400257:	cmp	qword ptr [rbp - 8], 0
0x40025c:	je	0x40026a
<Block for 0x40026a, 3 bytes>
0x40026a:	nop	
0x40026b:	leave	
0x40026c:	ret	
<Block for 0x40025e, 12 bytes>
0x40025e:	mov	rax, qword ptr [rbp - 8]
0x400262:	mov	rdi, rax
0x400265:	call	0x500030
