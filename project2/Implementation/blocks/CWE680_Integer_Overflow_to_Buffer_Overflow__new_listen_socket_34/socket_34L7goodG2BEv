<Block for 0x4001d7, 63 bytes>
0x4001d7:	endbr64	
0x4001db:	push	rbp
0x4001dc:	mov	rbp, rsp
0x4001df:	sub	rsp, 0x30
0x4001e3:	mov	dword ptr [rbp - 0x20], 0xffffffff
0x4001ea:	mov	dword ptr [rbp - 0x20], 0x14
0x4001f1:	mov	eax, dword ptr [rbp - 0x20]
0x4001f4:	mov	dword ptr [rbp - 0x24], eax
0x4001f7:	mov	eax, dword ptr [rbp - 0x24]
0x4001fa:	mov	dword ptr [rbp - 0x1c], eax
0x4001fd:	mov	eax, dword ptr [rbp - 0x1c]
0x400200:	cdqe	
0x400202:	shl	rax, 2
0x400206:	mov	qword ptr [rbp - 0x10], rax
0x40020a:	mov	rax, qword ptr [rbp - 0x10]
0x40020e:	mov	rdi, rax
0x400211:	call	0x500048
<Block for 0x400216, 23 bytes>
0x400216:	mov	qword ptr [rbp - 8], rax
0x40021a:	mov	qword ptr [rbp - 0x18], 0
0x400222:	mov	eax, dword ptr [rbp - 0x1c]
0x400225:	cdqe	
0x400227:	cmp	qword ptr [rbp - 0x18], rax
0x40022b:	jae	0x40024d
<Block for 0x40022d, 32 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 0x18]
0x400231:	lea	rdx, [rax*4]
0x400239:	mov	rax, qword ptr [rbp - 8]
0x40023d:	add	rax, rdx
0x400240:	mov	dword ptr [rax], 0
0x400246:	add	qword ptr [rbp - 0x18], 1
0x40024b:	jmp	0x400222
<Block for 0x40024d, 13 bytes>
0x40024d:	mov	rax, qword ptr [rbp - 8]
0x400251:	mov	eax, dword ptr [rax]
0x400253:	mov	edi, eax
0x400255:	call	0x500050
<Block for 0x400222, 11 bytes>
0x400222:	mov	eax, dword ptr [rbp - 0x1c]
0x400225:	cdqe	
0x400227:	cmp	qword ptr [rbp - 0x18], rax
0x40022b:	jae	0x40024d
<Block for 0x40025a, 7 bytes>
0x40025a:	cmp	qword ptr [rbp - 8], 0
0x40025f:	je	0x40026d
<Block for 0x40026d, 3 bytes>
0x40026d:	nop	
0x40026e:	leave	
0x40026f:	ret	
<Block for 0x400261, 12 bytes>
0x400261:	mov	rax, qword ptr [rbp - 8]
0x400265:	mov	rdi, rax
0x400268:	call	0x500058
