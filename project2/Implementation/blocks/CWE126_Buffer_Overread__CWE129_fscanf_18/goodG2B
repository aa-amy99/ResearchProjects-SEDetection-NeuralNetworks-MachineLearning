<Block for 0x400166, 97 bytes>
0x400166:	endbr64	
0x40016a:	push	rbp
0x40016b:	mov	rbp, rsp
0x40016e:	sub	rsp, 0x40
0x400172:	mov	rax, qword ptr fs:[0x28]
0x40017b:	mov	qword ptr [rbp - 8], rax
0x40017f:	xor	eax, eax
0x400181:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400188:	nop	
0x400189:	endbr64	
0x40018d:	mov	dword ptr [rbp - 0x34], 7
0x400194:	nop	
0x400195:	endbr64	
0x400199:	mov	qword ptr [rbp - 0x30], 0
0x4001a1:	mov	qword ptr [rbp - 0x28], 0
0x4001a9:	mov	qword ptr [rbp - 0x20], 0
0x4001b1:	mov	qword ptr [rbp - 0x18], 0
0x4001b9:	mov	qword ptr [rbp - 0x10], 0
0x4001c1:	cmp	dword ptr [rbp - 0x34], 0
0x4001c5:	js	0x4001d9
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rdi, [rip + 0x48]
0x4001e0:	call	0x500018
<Block for 0x4001c7, 16 bytes>
0x4001c7:	mov	eax, dword ptr [rbp - 0x34]
0x4001ca:	cdqe	
0x4001cc:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001d0:	mov	edi, eax
0x4001d2:	call	0x500010
<Block for 0x4001e5, 16 bytes>
0x4001e5:	nop	
0x4001e6:	mov	rax, qword ptr [rbp - 8]
0x4001ea:	xor	rax, qword ptr fs:[0x28]
0x4001f3:	je	0x4001fa
<Block for 0x4001d7, 2 bytes>
0x4001d7:	jmp	0x4001e5
<Block for 0x4001fa, 2 bytes>
0x4001fa:	leave	
0x4001fb:	ret	
<Block for 0x4001f5, 5 bytes>
0x4001f5:	call	0x500020
