<Block for 0x400063, 44 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x40
0x40006f:	mov	rax, qword ptr fs:[0x28]
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	xor	eax, eax
0x40007e:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400085:	mov	eax, dword ptr [rbp - 0x34]
0x400088:	mov	edi, eax
0x40008a:	call	0x400000
<Block for 0x40008f, 49 bytes>
0x40008f:	mov	dword ptr [rbp - 0x34], eax
0x400092:	mov	qword ptr [rbp - 0x30], 0
0x40009a:	mov	qword ptr [rbp - 0x28], 0
0x4000a2:	mov	qword ptr [rbp - 0x20], 0
0x4000aa:	mov	qword ptr [rbp - 0x18], 0
0x4000b2:	mov	qword ptr [rbp - 0x10], 0
0x4000ba:	cmp	dword ptr [rbp - 0x34], 0
0x4000be:	js	0x4000d2
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rdi, [rip + 0x1df]
0x4000d9:	call	0x500010
<Block for 0x4000c0, 16 bytes>
0x4000c0:	mov	eax, dword ptr [rbp - 0x34]
0x4000c3:	cdqe	
0x4000c5:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000c9:	mov	edi, eax
0x4000cb:	call	0x500008
<Block for 0x4000de, 16 bytes>
0x4000de:	nop	
0x4000df:	mov	rax, qword ptr [rbp - 8]
0x4000e3:	xor	rax, qword ptr fs:[0x28]
0x4000ec:	je	0x4000f3
<Block for 0x4000d0, 2 bytes>
0x4000d0:	jmp	0x4000de
<Block for 0x4000f3, 2 bytes>
0x4000f3:	leave	
0x4000f4:	ret	
<Block for 0x4000ee, 5 bytes>
0x4000ee:	call	0x500018
