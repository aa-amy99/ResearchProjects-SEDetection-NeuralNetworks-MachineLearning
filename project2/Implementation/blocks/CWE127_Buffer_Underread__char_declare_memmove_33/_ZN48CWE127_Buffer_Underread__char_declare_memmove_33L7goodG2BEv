<Block for 0x4000c8, 69 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0x100
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	lea	rax, [rbp - 0xf8]
0x4000ed:	mov	qword ptr [rbp - 0xf0], rax
0x4000f4:	lea	rax, [rbp - 0xe0]
0x4000fb:	mov	edx, 0x63
0x400100:	mov	esi, 0x41
0x400105:	mov	rdi, rax
0x400108:	call	0x500000
<Block for 0x40010d, 57 bytes>
0x40010d:	mov	byte ptr [rbp - 0x7d], 0
0x400111:	lea	rax, [rbp - 0xe0]
0x400118:	mov	qword ptr [rbp - 0xf8], rax
0x40011f:	mov	rax, qword ptr [rbp - 0xf0]
0x400126:	mov	rax, qword ptr [rax]
0x400129:	mov	qword ptr [rbp - 0xe8], rax
0x400130:	lea	rax, [rbp - 0x70]
0x400134:	mov	edx, 0x63
0x400139:	mov	esi, 0x43
0x40013e:	mov	rdi, rax
0x400141:	call	0x500000
<Block for 0x400146, 31 bytes>
0x400146:	mov	byte ptr [rbp - 0xd], 0
0x40014a:	mov	rcx, qword ptr [rbp - 0xe8]
0x400151:	lea	rax, [rbp - 0x70]
0x400155:	mov	edx, 0x64
0x40015a:	mov	rsi, rcx
0x40015d:	mov	rdi, rax
0x400160:	call	0x500008
<Block for 0x400165, 16 bytes>
0x400165:	mov	byte ptr [rbp - 0xd], 0
0x400169:	lea	rax, [rbp - 0x70]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500010
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500018
