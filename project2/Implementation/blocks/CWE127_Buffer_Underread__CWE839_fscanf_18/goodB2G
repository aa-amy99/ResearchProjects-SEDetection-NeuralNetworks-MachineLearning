<Block for 0x4000b0, 70 bytes>
0x4000b0:	endbr64	
0x4000b4:	push	rbp
0x4000b5:	mov	rbp, rsp
0x4000b8:	sub	rsp, 0x40
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000d2:	nop	
0x4000d3:	endbr64	
0x4000d7:	mov	rax, qword ptr [rip + 0xfff22]
0x4000de:	lea	rdx, [rbp - 0x34]
0x4000e2:	lea	rsi, [rip + 0x137]
0x4000e9:	mov	rdi, rax
0x4000ec:	mov	eax, 0
0x4000f1:	call	0x500008
<Block for 0x4000f6, 52 bytes>
0x4000f6:	nop	
0x4000f7:	endbr64	
0x4000fb:	mov	qword ptr [rbp - 0x30], 0
0x400103:	mov	qword ptr [rbp - 0x28], 0
0x40010b:	mov	qword ptr [rbp - 0x20], 0
0x400113:	mov	qword ptr [rbp - 0x18], 0
0x40011b:	mov	qword ptr [rbp - 0x10], 0
0x400123:	mov	eax, dword ptr [rbp - 0x34]
0x400126:	test	eax, eax
0x400128:	js	0x400144
<Block for 0x400144, 12 bytes>
0x400144:	lea	rdi, [rip + 0xfd]
0x40014b:	call	0x500018
<Block for 0x40012a, 8 bytes>
0x40012a:	mov	eax, dword ptr [rbp - 0x34]
0x40012d:	cmp	eax, 9
0x400130:	jg	0x400144
<Block for 0x400150, 16 bytes>
0x400150:	nop	
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	xor	rax, qword ptr fs:[0x28]
0x40015e:	je	0x400165
<Block for 0x400132, 16 bytes>
0x400132:	mov	eax, dword ptr [rbp - 0x34]
0x400135:	cdqe	
0x400137:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40013b:	mov	edi, eax
0x40013d:	call	0x500010
<Block for 0x400165, 2 bytes>
0x400165:	leave	
0x400166:	ret	
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500020
<Block for 0x400142, 2 bytes>
0x400142:	jmp	0x400150
