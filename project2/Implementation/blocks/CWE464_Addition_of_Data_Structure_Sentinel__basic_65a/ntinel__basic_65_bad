<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x18], rax
0x400026:	mov	byte ptr [rbp - 0x19], 0x20
0x40002a:	mov	rax, qword ptr [rip + 0xfffdf]
0x400031:	mov	rdi, rax
0x400034:	call	0x500018
<Block for 0x400039, 19 bytes>
0x400039:	mov	byte ptr [rbp - 0xa], al
0x40003c:	mov	byte ptr [rbp - 9], 0
0x400040:	lea	rax, [rbp - 0xa]
0x400044:	mov	rdi, rax
0x400047:	call	0x500020
<Block for 0x40004c, 15 bytes>
0x40004c:	mov	byte ptr [rbp - 0x19], al
0x40004f:	movsx	eax, byte ptr [rbp - 0x19]
0x400053:	mov	rdx, qword ptr [rbp - 0x18]
0x400057:	mov	edi, eax
0x400059:	call	rdx
<Block for 0x40005b, 16 bytes>
0x40005b:	nop	
0x40005c:	mov	rax, qword ptr [rbp - 8]
0x400060:	xor	rax, qword ptr fs:[0x28]
0x400069:	je	0x400070
<Block for 0x400070, 2 bytes>
0x400070:	leave	
0x400071:	ret	
<Block for 0x40006b, 5 bytes>
0x40006b:	call	0x500028
