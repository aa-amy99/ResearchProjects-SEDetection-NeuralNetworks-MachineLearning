<Block for 0x4001d5, 48 bytes>
0x4001d5:	endbr64	
0x4001d9:	push	rbp
0x4001da:	mov	rbp, rsp
0x4001dd:	sub	rsp, 0x60
0x4001e1:	mov	rax, qword ptr fs:[0x28]
0x4001ea:	mov	qword ptr [rbp - 8], rax
0x4001ee:	xor	eax, eax
0x4001f0:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4001f7:	mov	eax, dword ptr [rip + 0x563]
0x4001fd:	test	eax, eax
0x4001ff:	je	0x40031d
<Block for 0x40031d, 10 bytes>
0x40031d:	mov	eax, dword ptr [rip + 0x441]
0x400323:	test	eax, eax
0x400325:	je	0x400335
<Block for 0x400205, 34 bytes>
0x400205:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40020c:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400213:	mov	edx, 6
0x400218:	mov	esi, 1
0x40021d:	mov	edi, 2
0x400222:	call	0x500000
<Block for 0x400335, 46 bytes>
0x400335:	mov	qword ptr [rbp - 0x40], 0
0x40033d:	mov	qword ptr [rbp - 0x38], 0
0x400345:	mov	qword ptr [rbp - 0x30], 0
0x40034d:	mov	qword ptr [rbp - 0x28], 0
0x400355:	mov	qword ptr [rbp - 0x20], 0
0x40035d:	cmp	dword ptr [rbp - 0x54], 0
0x400361:	js	0x40039b
<Block for 0x400327, 12 bytes>
0x400327:	lea	rdi, [rip + 0x45a]
0x40032e:	call	0x500050
<Block for 0x400227, 13 bytes>
0x400227:	mov	dword ptr [rbp - 0x48], eax
0x40022a:	cmp	dword ptr [rbp - 0x48], -1
0x40022e:	je	0x4002f3
<Block for 0x40039b, 12 bytes>
0x40039b:	lea	rdi, [rip + 0x3fe]
0x4003a2:	call	0x500050
<Block for 0x400363, 6 bytes>
0x400363:	cmp	dword ptr [rbp - 0x54], 9
0x400367:	jg	0x40039b
<Block for 0x400333, 2 bytes>
0x400333:	jmp	0x4003a9
<Block for 0x4002f3, 3 bytes>
0x4002f3:	nop	
0x4002f4:	jmp	0x4002fd
<Block for 0x400234, 22 bytes>
0x400234:	lea	rax, [rbp - 0x40]
0x400238:	mov	edx, 0x10
0x40023d:	mov	esi, 0
0x400242:	mov	rdi, rax
0x400245:	call	0x500008
<Block for 0x4003a7, 2 bytes>
0x4003a7:	jmp	0x4003a9
<Block for 0x400369, 22 bytes>
0x400369:	mov	eax, dword ptr [rbp - 0x54]
0x40036c:	cdqe	
0x40036e:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400376:	mov	dword ptr [rbp - 0x4c], 0
0x40037d:	jmp	0x400393
<Block for 0x4003a9, 16 bytes>
0x4003a9:	nop	
0x4003aa:	mov	rax, qword ptr [rbp - 8]
0x4003ae:	xor	rax, qword ptr fs:[0x28]
0x4003b7:	je	0x4003be
<Block for 0x4002fd, 6 bytes>
0x4002fd:	cmp	dword ptr [rbp - 0x48], -1
0x400301:	je	0x40030d
<Block for 0x40024a, 23 bytes>
0x40024a:	mov	word ptr [rbp - 0x40], 2
0x400250:	mov	dword ptr [rbp - 0x3c], 0
0x400257:	mov	edi, 0x6987
0x40025c:	call	0x500010
<Block for 0x400393, 6 bytes>
0x400393:	cmp	dword ptr [rbp - 0x4c], 9
0x400397:	jle	0x40037f
<Block for 0x4003be, 2 bytes>
0x4003be:	leave	
0x4003bf:	ret	
<Block for 0x4003b9, 5 bytes>
0x4003b9:	call	0x500058
<Block for 0x40030d, 6 bytes>
0x40030d:	cmp	dword ptr [rbp - 0x50], -1
0x400311:	je	0x40031d
<Block for 0x400303, 10 bytes>
0x400303:	mov	eax, dword ptr [rbp - 0x48]
0x400306:	mov	edi, eax
0x400308:	call	0x500040
<Block for 0x400261, 26 bytes>
0x400261:	mov	word ptr [rbp - 0x3e], ax
0x400265:	lea	rcx, [rbp - 0x40]
0x400269:	mov	eax, dword ptr [rbp - 0x48]
0x40026c:	mov	edx, 0x10
0x400271:	mov	rsi, rcx
0x400274:	mov	edi, eax
0x400276:	call	0x500018
<Block for 0x40037f, 16 bytes>
0x40037f:	mov	eax, dword ptr [rbp - 0x4c]
0x400382:	cdqe	
0x400384:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400388:	mov	edi, eax
0x40038a:	call	0x500048
<Block for 0x400399, 2 bytes>
0x400399:	jmp	0x4003a9
<Block for 0x400313, 10 bytes>
0x400313:	mov	eax, dword ptr [rbp - 0x50]
0x400316:	mov	edi, eax
0x400318:	call	0x500040
<Block for 0x40027b, 5 bytes>
0x40027b:	cmp	eax, -1
0x40027e:	je	0x4002f6
<Block for 0x40038f, 10 bytes>
0x40038f:	add	dword ptr [rbp - 0x4c], 1
0x400393:	cmp	dword ptr [rbp - 0x4c], 9
0x400397:	jle	0x40037f
<Block for 0x4002f6, 3 bytes>
0x4002f6:	nop	
0x4002f7:	jmp	0x4002fd
<Block for 0x400280, 15 bytes>
0x400280:	mov	eax, dword ptr [rbp - 0x48]
0x400283:	mov	esi, 5
0x400288:	mov	edi, eax
0x40028a:	call	0x500020
<Block for 0x40028f, 5 bytes>
0x40028f:	cmp	eax, -1
0x400292:	je	0x4002f9
<Block for 0x4002f9, 3 bytes>
0x4002f9:	nop	
0x4002fa:	jmp	0x4002fd
<Block for 0x400294, 20 bytes>
0x400294:	mov	eax, dword ptr [rbp - 0x48]
0x400297:	mov	edx, 0
0x40029c:	mov	esi, 0
0x4002a1:	mov	edi, eax
0x4002a3:	call	0x500028
<Block for 0x4002a8, 9 bytes>
0x4002a8:	mov	dword ptr [rbp - 0x50], eax
0x4002ab:	cmp	dword ptr [rbp - 0x50], -1
0x4002af:	je	0x4002fc
<Block for 0x4002b1, 24 bytes>
0x4002b1:	lea	rsi, [rbp - 0x16]
0x4002b5:	mov	eax, dword ptr [rbp - 0x50]
0x4002b8:	mov	ecx, 0
0x4002bd:	mov	edx, 0xd
0x4002c2:	mov	edi, eax
0x4002c4:	call	0x500030
<Block for 0x4002fc, 1 bytes>
0x4002fc:	nop	
<Block for 0x4002c9, 9 bytes>
0x4002c9:	mov	dword ptr [rbp - 0x44], eax
0x4002cc:	cmp	dword ptr [rbp - 0x44], -1
0x4002d0:	je	0x4002fd
<Block for 0x4002d2, 6 bytes>
0x4002d2:	cmp	dword ptr [rbp - 0x44], 0
0x4002d6:	je	0x4002fd
<Block for 0x4002d8, 22 bytes>
0x4002d8:	mov	eax, dword ptr [rbp - 0x44]
0x4002db:	cdqe	
0x4002dd:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002e2:	lea	rax, [rbp - 0x16]
0x4002e6:	mov	rdi, rax
0x4002e9:	call	0x500038
<Block for 0x4002ee, 5 bytes>
0x4002ee:	mov	dword ptr [rbp - 0x54], eax
0x4002f1:	jmp	0x4002fd
