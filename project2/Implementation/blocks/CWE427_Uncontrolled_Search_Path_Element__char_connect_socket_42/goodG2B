<Block for 0x40025d, 82 bytes>
0x40025d:	endbr64	
0x400261:	push	rbp
0x400262:	mov	rbp, rsp
0x400265:	sub	rsp, 0x120
0x40026c:	mov	rax, qword ptr fs:[0x28]
0x400275:	mov	qword ptr [rbp - 8], rax
0x400279:	xor	eax, eax
0x40027b:	movabs	rax, 0x3d48544150
0x400285:	mov	edx, 0
0x40028a:	mov	qword ptr [rbp - 0x110], rax
0x400291:	mov	qword ptr [rbp - 0x108], rdx
0x400298:	lea	rdx, [rbp - 0x100]
0x40029f:	mov	eax, 0
0x4002a4:	mov	ecx, 0x1d
0x4002a9:	mov	rdi, rdx
0x4002ac:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002af, 39 bytes>
0x4002af:	mov	rdx, rdi
0x4002b2:	mov	word ptr [rdx], ax
0x4002b5:	add	rdx, 2
0x4002b9:	lea	rax, [rbp - 0x110]
0x4002c0:	mov	qword ptr [rbp - 0x118], rax
0x4002c7:	mov	rax, qword ptr [rbp - 0x118]
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x400218
<Block for 0x4002ac, 3 bytes>
0x4002ac:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002d6, 22 bytes>
0x4002d6:	mov	qword ptr [rbp - 0x118], rax
0x4002dd:	mov	rax, qword ptr [rbp - 0x118]
0x4002e4:	mov	rdi, rax
0x4002e7:	call	0x500050
<Block for 0x4002ec, 16 bytes>
0x4002ec:	nop	
0x4002ed:	mov	rax, qword ptr [rbp - 8]
0x4002f1:	xor	rax, qword ptr fs:[0x28]
0x4002fa:	je	0x400301
<Block for 0x400301, 2 bytes>
0x400301:	leave	
0x400302:	ret	
<Block for 0x4002fc, 5 bytes>
0x4002fc:	call	0x500048
