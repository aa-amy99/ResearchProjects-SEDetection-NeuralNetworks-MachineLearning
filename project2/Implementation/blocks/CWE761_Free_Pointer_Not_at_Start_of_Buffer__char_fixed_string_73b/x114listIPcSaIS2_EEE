<Block for 0x40005d, 28 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	sub	rsp, 0x20
0x400069:	mov	qword ptr [rbp - 0x18], rdi
0x40006d:	mov	rax, qword ptr [rbp - 0x18]
0x400071:	mov	rdi, rax
0x400074:	call	0x4000e2
<Block for 0x400079, 27 bytes>
0x400079:	mov	rax, qword ptr [rax]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	mov	qword ptr [rbp - 0x10], 0
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400094, 6 bytes>
0x400094:	cmp	qword ptr [rbp - 0x10], rax
0x400098:	jae	0x4000c1
<Block for 0x40009a, 18 bytes>
0x40009a:	mov	rdx, qword ptr [rbp - 8]
0x40009e:	mov	rax, qword ptr [rbp - 0x10]
0x4000a2:	add	rax, rdx
0x4000a5:	movzx	eax, byte ptr [rax]
0x4000a8:	cmp	al, 0x53
0x4000aa:	jne	0x4000ba
<Block for 0x4000c1, 12 bytes>
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500008
<Block for 0x4000ac, 12 bytes>
0x4000ac:	lea	rdi, [rip + 0x1e]
0x4000b3:	call	0x500000
<Block for 0x4000ba, 7 bytes>
0x4000ba:	add	qword ptr [rbp - 0x10], 1
0x4000bf:	jmp	0x400088
<Block for 0x4000cd, 3 bytes>
0x4000cd:	nop	
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000b8, 2 bytes>
0x4000b8:	jmp	0x4000c1
<Block for 0x400088, 12 bytes>
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
