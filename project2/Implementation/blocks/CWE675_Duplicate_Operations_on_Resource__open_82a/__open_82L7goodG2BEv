<Block for 0x40008b, 47 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	push	rbx
0x400094:	sub	rsp, 0x18
0x400098:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40009f:	mov	edx, 0x180
0x4000a4:	mov	esi, 0x42
0x4000a9:	lea	rdi, [rip + 0x15a]
0x4000b0:	mov	eax, 0
0x4000b5:	call	0x500000
<Block for 0x4000ba, 13 bytes>
0x4000ba:	mov	dword ptr [rbp - 0x1c], eax
0x4000bd:	mov	edi, 8
0x4000c2:	call	0x500010
<Block for 0x4000c7, 11 bytes>
0x4000c7:	mov	rbx, rax
0x4000ca:	mov	rdi, rbx
0x4000cd:	call	0x40021e
<Block for 0x4000d2, 28 bytes>
0x4000d2:	mov	qword ptr [rbp - 0x18], rbx
0x4000d6:	mov	rax, qword ptr [rbp - 0x18]
0x4000da:	mov	rax, qword ptr [rax]
0x4000dd:	mov	rcx, qword ptr [rax]
0x4000e0:	mov	edx, dword ptr [rbp - 0x1c]
0x4000e3:	mov	rax, qword ptr [rbp - 0x18]
0x4000e7:	mov	esi, edx
0x4000e9:	mov	rdi, rax
0x4000ec:	call	rcx
<Block for 0x4000ee, 9 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0x18]
0x4000f2:	test	rax, rax
0x4000f5:	je	0x400104
<Block for 0x400104, 8 bytes>
0x400104:	nop	
0x400105:	add	rsp, 0x18
0x400109:	pop	rbx
0x40010a:	pop	rbp
0x40010b:	ret	
<Block for 0x4000f7, 13 bytes>
0x4000f7:	mov	esi, 8
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500018
