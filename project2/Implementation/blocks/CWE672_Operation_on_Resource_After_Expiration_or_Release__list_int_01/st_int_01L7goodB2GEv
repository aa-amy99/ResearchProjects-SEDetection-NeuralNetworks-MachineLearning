<Block for 0x4002ee, 40 bytes>
0x4002ee:	endbr64	
0x4002f2:	push	rbp
0x4002f3:	mov	rbp, rsp
0x4002f6:	push	rbx
0x4002f7:	sub	rsp, 0x38
0x4002fb:	mov	rax, qword ptr fs:[0x28]
0x400304:	mov	qword ptr [rbp - 0x18], rax
0x400308:	xor	eax, eax
0x40030a:	lea	rax, [rbp - 0x30]
0x40030e:	mov	rdi, rax
0x400311:	call	0x40057e
<Block for 0x400316, 26 bytes>
0x400316:	mov	dword ptr [rbp - 0x38], 0x64
0x40031d:	lea	rdx, [rbp - 0x38]
0x400321:	lea	rax, [rbp - 0x30]
0x400325:	mov	rsi, rdx
0x400328:	mov	rdi, rax
0x40032b:	call	0x400666
<Block for 0x400330, 26 bytes>
0x400330:	mov	dword ptr [rbp - 0x38], 0
0x400337:	lea	rdx, [rbp - 0x38]
0x40033b:	lea	rax, [rbp - 0x30]
0x40033f:	mov	rsi, rdx
0x400342:	mov	rdi, rax
0x400345:	call	0x400666
<Block for 0x40034a, 12 bytes>
0x40034a:	lea	rax, [rbp - 0x40]
0x40034e:	mov	rdi, rax
0x400351:	call	0x4006b4
<Block for 0x400356, 19 bytes>
0x400356:	lea	rsi, [rip + 0x175]
0x40035d:	lea	rdi, [rip + 0xffc9c]
0x400364:	call	0x500008
<Block for 0x400369, 12 bytes>
0x400369:	lea	rax, [rbp - 0x30]
0x40036d:	mov	rdi, rax
0x400370:	call	0x4006ce
<Block for 0x400375, 16 bytes>
0x400375:	mov	qword ptr [rbp - 0x40], rax
0x400379:	lea	rax, [rbp - 0x30]
0x40037d:	mov	rdi, rax
0x400380:	call	0x40071e
<Block for 0x400385, 23 bytes>
0x400385:	mov	qword ptr [rbp - 0x38], rax
0x400389:	lea	rdx, [rbp - 0x38]
0x40038d:	lea	rax, [rbp - 0x40]
0x400391:	mov	rsi, rdx
0x400394:	mov	rdi, rax
0x400397:	call	0x40076a
<Block for 0x40039c, 4 bytes>
0x40039c:	test	al, al
0x40039e:	je	0x4003e1
<Block for 0x4003e1, 22 bytes>
0x4003e1:	mov	rax, qword ptr [rip + 0xffc38]
0x4003e8:	mov	rsi, rax
0x4003eb:	lea	rdi, [rip + 0xffc0e]
0x4003f2:	call	0x500028
<Block for 0x4003a0, 19 bytes>
0x4003a0:	lea	rsi, [rip + 0x13f]
0x4003a7:	lea	rdi, [rip + 0xffc52]
0x4003ae:	call	0x500008
<Block for 0x4003f7, 12 bytes>
0x4003f7:	lea	rax, [rbp - 0x30]
0x4003fb:	mov	rdi, rax
0x4003fe:	call	0x40059e
<Block for 0x4003b3, 15 bytes>
0x4003b3:	mov	rbx, rax
0x4003b6:	lea	rax, [rbp - 0x40]
0x4003ba:	mov	rdi, rax
0x4003bd:	call	0x4007e8
<Block for 0x400403, 16 bytes>
0x400403:	nop	
0x400404:	mov	rax, qword ptr [rbp - 0x18]
0x400408:	xor	rax, qword ptr fs:[0x28]
0x400411:	je	0x400438
<Block for 0x4003c2, 12 bytes>
0x4003c2:	mov	eax, dword ptr [rax]
0x4003c4:	mov	esi, eax
0x4003c6:	mov	rdi, rbx
0x4003c9:	call	0x500010
<Block for 0x400438, 7 bytes>
0x400438:	add	rsp, 0x38
0x40043c:	pop	rbx
0x40043d:	pop	rbp
0x40043e:	ret	
<Block for 0x400413, 2 bytes>
0x400413:	jmp	0x400433
<Block for 0x4003ce, 17 bytes>
0x4003ce:	lea	rax, [rbp - 0x40]
0x4003d2:	mov	esi, 0
0x4003d7:	mov	rdi, rax
0x4003da:	call	0x400790
<Block for 0x400433, 5 bytes>
0x400433:	call	0x500038
<Block for 0x4003df, 2 bytes>
0x4003df:	jmp	0x400379
<Block for 0x400379, 12 bytes>
0x400379:	lea	rax, [rbp - 0x30]
0x40037d:	mov	rdi, rax
0x400380:	call	0x40071e
