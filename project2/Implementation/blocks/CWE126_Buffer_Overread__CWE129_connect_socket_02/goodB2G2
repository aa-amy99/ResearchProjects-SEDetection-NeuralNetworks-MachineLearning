<Block for 0x4002b4, 61 bytes>
0x4002b4:	endbr64	
0x4002b8:	push	rbp
0x4002b9:	mov	rbp, rsp
0x4002bc:	sub	rsp, 0x50
0x4002c0:	mov	rax, qword ptr fs:[0x28]
0x4002c9:	mov	qword ptr [rbp - 8], rax
0x4002cd:	xor	eax, eax
0x4002cf:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4002d6:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4002dd:	mov	edx, 6
0x4002e2:	mov	esi, 1
0x4002e7:	mov	edi, 2
0x4002ec:	call	0x500000
<Block for 0x4002f1, 13 bytes>
0x4002f1:	mov	dword ptr [rbp - 0x48], eax
0x4002f4:	cmp	dword ptr [rbp - 0x48], -1
0x4002f8:	je	0x400394
<Block for 0x400394, 3 bytes>
0x400394:	nop	
0x400395:	jmp	0x400398
<Block for 0x4002fe, 22 bytes>
0x4002fe:	lea	rax, [rbp - 0x40]
0x400302:	mov	edx, 0x10
0x400307:	mov	esi, 0
0x40030c:	mov	rdi, rax
0x40030f:	call	0x500008
<Block for 0x400398, 6 bytes>
0x400398:	cmp	dword ptr [rbp - 0x48], -1
0x40039c:	je	0x4003a8
<Block for 0x400314, 18 bytes>
0x400314:	mov	word ptr [rbp - 0x40], 2
0x40031a:	lea	rdi, [rip + 0x23f]
0x400321:	call	0x500010
<Block for 0x4003a8, 46 bytes>
0x4003a8:	mov	qword ptr [rbp - 0x40], 0
0x4003b0:	mov	qword ptr [rbp - 0x38], 0
0x4003b8:	mov	qword ptr [rbp - 0x30], 0
0x4003c0:	mov	qword ptr [rbp - 0x28], 0
0x4003c8:	mov	qword ptr [rbp - 0x20], 0
0x4003d0:	cmp	dword ptr [rbp - 0x4c], 0
0x4003d4:	js	0x4003ee
<Block for 0x40039e, 10 bytes>
0x40039e:	mov	eax, dword ptr [rbp - 0x48]
0x4003a1:	mov	edi, eax
0x4003a3:	call	0x500038
<Block for 0x400326, 13 bytes>
0x400326:	mov	dword ptr [rbp - 0x3c], eax
0x400329:	mov	edi, 0x6987
0x40032e:	call	0x500018
<Block for 0x4003ee, 12 bytes>
0x4003ee:	lea	rdi, [rip + 0x19b]
0x4003f5:	call	0x500048
<Block for 0x4003d6, 6 bytes>
0x4003d6:	cmp	dword ptr [rbp - 0x4c], 9
0x4003da:	jg	0x4003ee
<Block for 0x400333, 26 bytes>
0x400333:	mov	word ptr [rbp - 0x3e], ax
0x400337:	lea	rcx, [rbp - 0x40]
0x40033b:	mov	eax, dword ptr [rbp - 0x48]
0x40033e:	mov	edx, 0x10
0x400343:	mov	rsi, rcx
0x400346:	mov	edi, eax
0x400348:	call	0x500020
<Block for 0x4003fa, 16 bytes>
0x4003fa:	nop	
0x4003fb:	mov	rax, qword ptr [rbp - 8]
0x4003ff:	xor	rax, qword ptr fs:[0x28]
0x400408:	je	0x40040f
<Block for 0x4003dc, 16 bytes>
0x4003dc:	mov	eax, dword ptr [rbp - 0x4c]
0x4003df:	cdqe	
0x4003e1:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4003e5:	mov	edi, eax
0x4003e7:	call	0x500040
<Block for 0x40034d, 5 bytes>
0x40034d:	cmp	eax, -1
0x400350:	je	0x400397
<Block for 0x40040f, 2 bytes>
0x40040f:	leave	
0x400410:	ret	
<Block for 0x40040a, 5 bytes>
0x40040a:	call	0x500050
<Block for 0x4003ec, 2 bytes>
0x4003ec:	jmp	0x4003fa
<Block for 0x400352, 24 bytes>
0x400352:	lea	rsi, [rbp - 0x16]
0x400356:	mov	eax, dword ptr [rbp - 0x48]
0x400359:	mov	ecx, 0
0x40035e:	mov	edx, 0xd
0x400363:	mov	edi, eax
0x400365:	call	0x500028
<Block for 0x400397, 1 bytes>
0x400397:	nop	
<Block for 0x40036a, 9 bytes>
0x40036a:	mov	dword ptr [rbp - 0x44], eax
0x40036d:	cmp	dword ptr [rbp - 0x44], -1
0x400371:	je	0x400398
<Block for 0x400373, 6 bytes>
0x400373:	cmp	dword ptr [rbp - 0x44], 0
0x400377:	je	0x400398
<Block for 0x400379, 22 bytes>
0x400379:	mov	eax, dword ptr [rbp - 0x44]
0x40037c:	cdqe	
0x40037e:	mov	byte ptr [rbp + rax - 0x16], 0
0x400383:	lea	rax, [rbp - 0x16]
0x400387:	mov	rdi, rax
0x40038a:	call	0x500030
<Block for 0x40038f, 5 bytes>
0x40038f:	mov	dword ptr [rbp - 0x4c], eax
0x400392:	jmp	0x400398
