<Block for 0x400157, 61 bytes>
0x400157:	endbr64	
0x40015b:	push	rbp
0x40015c:	mov	rbp, rsp
0x40015f:	sub	rsp, 0x50
0x400163:	mov	rax, qword ptr fs:[0x28]
0x40016c:	mov	qword ptr [rbp - 8], rax
0x400170:	xor	eax, eax
0x400172:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400179:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400180:	mov	edx, 6
0x400185:	mov	esi, 1
0x40018a:	mov	edi, 2
0x40018f:	call	0x500000
<Block for 0x400194, 13 bytes>
0x400194:	mov	dword ptr [rbp - 0x48], eax
0x400197:	cmp	dword ptr [rbp - 0x48], -1
0x40019b:	je	0x400237
<Block for 0x400237, 3 bytes>
0x400237:	nop	
0x400238:	jmp	0x40023b
<Block for 0x4001a1, 22 bytes>
0x4001a1:	lea	rax, [rbp - 0x40]
0x4001a5:	mov	edx, 0x10
0x4001aa:	mov	esi, 0
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500008
<Block for 0x40023b, 6 bytes>
0x40023b:	cmp	dword ptr [rbp - 0x48], -1
0x40023f:	je	0x40024b
<Block for 0x4001b7, 18 bytes>
0x4001b7:	mov	word ptr [rbp - 0x40], 2
0x4001bd:	lea	rdi, [rip + 0x39c]
0x4001c4:	call	0x500010
<Block for 0x40024b, 46 bytes>
0x40024b:	mov	qword ptr [rbp - 0x40], 0
0x400253:	mov	qword ptr [rbp - 0x38], 0
0x40025b:	mov	qword ptr [rbp - 0x30], 0
0x400263:	mov	qword ptr [rbp - 0x28], 0
0x40026b:	mov	qword ptr [rbp - 0x20], 0
0x400273:	cmp	dword ptr [rbp - 0x4c], 0
0x400277:	js	0x400291
<Block for 0x400241, 10 bytes>
0x400241:	mov	eax, dword ptr [rbp - 0x48]
0x400244:	mov	edi, eax
0x400246:	call	0x500038
<Block for 0x4001c9, 13 bytes>
0x4001c9:	mov	dword ptr [rbp - 0x3c], eax
0x4001cc:	mov	edi, 0x6987
0x4001d1:	call	0x500018
<Block for 0x400291, 12 bytes>
0x400291:	lea	rdi, [rip + 0x2f8]
0x400298:	call	0x500048
<Block for 0x400279, 6 bytes>
0x400279:	cmp	dword ptr [rbp - 0x4c], 9
0x40027d:	jg	0x400291
<Block for 0x4001d6, 26 bytes>
0x4001d6:	mov	word ptr [rbp - 0x3e], ax
0x4001da:	lea	rcx, [rbp - 0x40]
0x4001de:	mov	eax, dword ptr [rbp - 0x48]
0x4001e1:	mov	edx, 0x10
0x4001e6:	mov	rsi, rcx
0x4001e9:	mov	edi, eax
0x4001eb:	call	0x500020
<Block for 0x40029d, 16 bytes>
0x40029d:	nop	
0x40029e:	mov	rax, qword ptr [rbp - 8]
0x4002a2:	xor	rax, qword ptr fs:[0x28]
0x4002ab:	je	0x4002b2
<Block for 0x40027f, 16 bytes>
0x40027f:	mov	eax, dword ptr [rbp - 0x4c]
0x400282:	cdqe	
0x400284:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400288:	mov	edi, eax
0x40028a:	call	0x500040
<Block for 0x4001f0, 5 bytes>
0x4001f0:	cmp	eax, -1
0x4001f3:	je	0x40023a
<Block for 0x4002b2, 2 bytes>
0x4002b2:	leave	
0x4002b3:	ret	
<Block for 0x4002ad, 5 bytes>
0x4002ad:	call	0x500050
<Block for 0x40028f, 2 bytes>
0x40028f:	jmp	0x40029d
<Block for 0x4001f5, 24 bytes>
0x4001f5:	lea	rsi, [rbp - 0x16]
0x4001f9:	mov	eax, dword ptr [rbp - 0x48]
0x4001fc:	mov	ecx, 0
0x400201:	mov	edx, 0xd
0x400206:	mov	edi, eax
0x400208:	call	0x500028
<Block for 0x40023a, 1 bytes>
0x40023a:	nop	
<Block for 0x40020d, 9 bytes>
0x40020d:	mov	dword ptr [rbp - 0x44], eax
0x400210:	cmp	dword ptr [rbp - 0x44], -1
0x400214:	je	0x40023b
<Block for 0x400216, 6 bytes>
0x400216:	cmp	dword ptr [rbp - 0x44], 0
0x40021a:	je	0x40023b
<Block for 0x40021c, 22 bytes>
0x40021c:	mov	eax, dword ptr [rbp - 0x44]
0x40021f:	cdqe	
0x400221:	mov	byte ptr [rbp + rax - 0x16], 0
0x400226:	lea	rax, [rbp - 0x16]
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500030
<Block for 0x400232, 5 bytes>
0x400232:	mov	dword ptr [rbp - 0x4c], eax
0x400235:	jmp	0x40023b
