<Block for 0x4003d0, 44 bytes>
0x4003d0:	endbr64	
0x4003d4:	push	rbp
0x4003d5:	mov	rbp, rsp
0x4003d8:	sub	rsp, 0x60
0x4003dc:	mov	rax, qword ptr fs:[0x28]
0x4003e5:	mov	qword ptr [rbp - 8], rax
0x4003e9:	xor	eax, eax
0x4003eb:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4003f2:	mov	eax, 0
0x4003f7:	call	0x500000
<Block for 0x4003fc, 8 bytes>
0x4003fc:	test	eax, eax
0x4003fe:	je	0x40051c
<Block for 0x40051c, 10 bytes>
0x40051c:	mov	eax, 0
0x400521:	call	0x500000
<Block for 0x400404, 34 bytes>
0x400404:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40040b:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400412:	mov	edx, 6
0x400417:	mov	esi, 1
0x40041c:	mov	edi, 2
0x400421:	call	0x500008
<Block for 0x400526, 4 bytes>
0x400526:	test	eax, eax
0x400528:	je	0x40059e
<Block for 0x400426, 13 bytes>
0x400426:	mov	dword ptr [rbp - 0x48], eax
0x400429:	cmp	dword ptr [rbp - 0x48], -1
0x40042d:	je	0x4004f2
<Block for 0x40059e, 16 bytes>
0x40059e:	nop	
0x40059f:	mov	rax, qword ptr [rbp - 8]
0x4005a3:	xor	rax, qword ptr fs:[0x28]
0x4005ac:	je	0x4005b3
<Block for 0x40052a, 46 bytes>
0x40052a:	mov	qword ptr [rbp - 0x40], 0
0x400532:	mov	qword ptr [rbp - 0x38], 0
0x40053a:	mov	qword ptr [rbp - 0x30], 0
0x400542:	mov	qword ptr [rbp - 0x28], 0
0x40054a:	mov	qword ptr [rbp - 0x20], 0
0x400552:	cmp	dword ptr [rbp - 0x54], 0
0x400556:	js	0x400590
<Block for 0x4004f2, 3 bytes>
0x4004f2:	nop	
0x4004f3:	jmp	0x4004fc
<Block for 0x400433, 22 bytes>
0x400433:	lea	rax, [rbp - 0x40]
0x400437:	mov	edx, 0x10
0x40043c:	mov	esi, 0
0x400441:	mov	rdi, rax
0x400444:	call	0x500010
<Block for 0x4005b3, 2 bytes>
0x4005b3:	leave	
0x4005b4:	ret	
<Block for 0x4005ae, 5 bytes>
0x4005ae:	call	0x500060
<Block for 0x400590, 12 bytes>
0x400590:	lea	rdi, [rip + 0x229]
0x400597:	call	0x500058
<Block for 0x400558, 6 bytes>
0x400558:	cmp	dword ptr [rbp - 0x54], 9
0x40055c:	jg	0x400590
<Block for 0x4004fc, 6 bytes>
0x4004fc:	cmp	dword ptr [rbp - 0x48], -1
0x400500:	je	0x40050c
<Block for 0x400449, 23 bytes>
0x400449:	mov	word ptr [rbp - 0x40], 2
0x40044f:	mov	dword ptr [rbp - 0x3c], 0
0x400456:	mov	edi, 0x6987
0x40045b:	call	0x500018
<Block for 0x40059c, 2 bytes>
0x40059c:	jmp	0x40059e
<Block for 0x40055e, 22 bytes>
0x40055e:	mov	eax, dword ptr [rbp - 0x54]
0x400561:	cdqe	
0x400563:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40056b:	mov	dword ptr [rbp - 0x4c], 0
0x400572:	jmp	0x400588
<Block for 0x40050c, 6 bytes>
0x40050c:	cmp	dword ptr [rbp - 0x50], -1
0x400510:	je	0x40051c
<Block for 0x400502, 10 bytes>
0x400502:	mov	eax, dword ptr [rbp - 0x48]
0x400505:	mov	edi, eax
0x400507:	call	0x500048
<Block for 0x400460, 26 bytes>
0x400460:	mov	word ptr [rbp - 0x3e], ax
0x400464:	lea	rcx, [rbp - 0x40]
0x400468:	mov	eax, dword ptr [rbp - 0x48]
0x40046b:	mov	edx, 0x10
0x400470:	mov	rsi, rcx
0x400473:	mov	edi, eax
0x400475:	call	0x500020
<Block for 0x400588, 6 bytes>
0x400588:	cmp	dword ptr [rbp - 0x4c], 9
0x40058c:	jle	0x400574
<Block for 0x400512, 10 bytes>
0x400512:	mov	eax, dword ptr [rbp - 0x50]
0x400515:	mov	edi, eax
0x400517:	call	0x500048
<Block for 0x40047a, 5 bytes>
0x40047a:	cmp	eax, -1
0x40047d:	je	0x4004f5
<Block for 0x400574, 16 bytes>
0x400574:	mov	eax, dword ptr [rbp - 0x4c]
0x400577:	cdqe	
0x400579:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40057d:	mov	edi, eax
0x40057f:	call	0x500050
<Block for 0x40058e, 2 bytes>
0x40058e:	jmp	0x40059e
<Block for 0x4004f5, 3 bytes>
0x4004f5:	nop	
0x4004f6:	jmp	0x4004fc
<Block for 0x40047f, 15 bytes>
0x40047f:	mov	eax, dword ptr [rbp - 0x48]
0x400482:	mov	esi, 5
0x400487:	mov	edi, eax
0x400489:	call	0x500028
<Block for 0x400584, 10 bytes>
0x400584:	add	dword ptr [rbp - 0x4c], 1
0x400588:	cmp	dword ptr [rbp - 0x4c], 9
0x40058c:	jle	0x400574
<Block for 0x40048e, 5 bytes>
0x40048e:	cmp	eax, -1
0x400491:	je	0x4004f8
<Block for 0x4004f8, 3 bytes>
0x4004f8:	nop	
0x4004f9:	jmp	0x4004fc
<Block for 0x400493, 20 bytes>
0x400493:	mov	eax, dword ptr [rbp - 0x48]
0x400496:	mov	edx, 0
0x40049b:	mov	esi, 0
0x4004a0:	mov	edi, eax
0x4004a2:	call	0x500030
<Block for 0x4004a7, 9 bytes>
0x4004a7:	mov	dword ptr [rbp - 0x50], eax
0x4004aa:	cmp	dword ptr [rbp - 0x50], -1
0x4004ae:	je	0x4004fb
<Block for 0x4004b0, 24 bytes>
0x4004b0:	lea	rsi, [rbp - 0x16]
0x4004b4:	mov	eax, dword ptr [rbp - 0x50]
0x4004b7:	mov	ecx, 0
0x4004bc:	mov	edx, 0xd
0x4004c1:	mov	edi, eax
0x4004c3:	call	0x500038
<Block for 0x4004fb, 1 bytes>
0x4004fb:	nop	
<Block for 0x4004c8, 9 bytes>
0x4004c8:	mov	dword ptr [rbp - 0x44], eax
0x4004cb:	cmp	dword ptr [rbp - 0x44], -1
0x4004cf:	je	0x4004fc
<Block for 0x4004d1, 6 bytes>
0x4004d1:	cmp	dword ptr [rbp - 0x44], 0
0x4004d5:	je	0x4004fc
<Block for 0x4004d7, 22 bytes>
0x4004d7:	mov	eax, dword ptr [rbp - 0x44]
0x4004da:	cdqe	
0x4004dc:	mov	byte ptr [rbp + rax - 0x16], 0
0x4004e1:	lea	rax, [rbp - 0x16]
0x4004e5:	mov	rdi, rax
0x4004e8:	call	0x500040
<Block for 0x4004ed, 5 bytes>
0x4004ed:	mov	dword ptr [rbp - 0x54], eax
0x4004f0:	jmp	0x4004fc
