<Block for 0x4001dd, 44 bytes>
0x4001dd:	endbr64	
0x4001e1:	push	rbp
0x4001e2:	mov	rbp, rsp
0x4001e5:	sub	rsp, 0x60
0x4001e9:	mov	rax, qword ptr fs:[0x28]
0x4001f2:	mov	qword ptr [rbp - 8], rax
0x4001f6:	xor	eax, eax
0x4001f8:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4001ff:	mov	eax, 0
0x400204:	call	0x500000
<Block for 0x400209, 8 bytes>
0x400209:	test	eax, eax
0x40020b:	je	0x400329
<Block for 0x400329, 10 bytes>
0x400329:	mov	eax, 0
0x40032e:	call	0x500068
<Block for 0x400211, 34 bytes>
0x400211:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400218:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40021f:	mov	edx, 6
0x400224:	mov	esi, 1
0x400229:	mov	edi, 2
0x40022e:	call	0x500008
<Block for 0x400333, 4 bytes>
0x400333:	test	eax, eax
0x400335:	je	0x400345
<Block for 0x400233, 13 bytes>
0x400233:	mov	dword ptr [rbp - 0x48], eax
0x400236:	cmp	dword ptr [rbp - 0x48], -1
0x40023a:	je	0x4002ff
<Block for 0x400345, 46 bytes>
0x400345:	mov	qword ptr [rbp - 0x40], 0
0x40034d:	mov	qword ptr [rbp - 0x38], 0
0x400355:	mov	qword ptr [rbp - 0x30], 0
0x40035d:	mov	qword ptr [rbp - 0x28], 0
0x400365:	mov	qword ptr [rbp - 0x20], 0
0x40036d:	cmp	dword ptr [rbp - 0x54], 0
0x400371:	js	0x4003ab
<Block for 0x400337, 12 bytes>
0x400337:	lea	rdi, [rip + 0x46a]
0x40033e:	call	0x500058
<Block for 0x4002ff, 3 bytes>
0x4002ff:	nop	
0x400300:	jmp	0x400309
<Block for 0x400240, 22 bytes>
0x400240:	lea	rax, [rbp - 0x40]
0x400244:	mov	edx, 0x10
0x400249:	mov	esi, 0
0x40024e:	mov	rdi, rax
0x400251:	call	0x500010
<Block for 0x4003ab, 12 bytes>
0x4003ab:	lea	rdi, [rip + 0x40e]
0x4003b2:	call	0x500058
<Block for 0x400373, 6 bytes>
0x400373:	cmp	dword ptr [rbp - 0x54], 9
0x400377:	jg	0x4003ab
<Block for 0x400343, 2 bytes>
0x400343:	jmp	0x4003b9
<Block for 0x400309, 6 bytes>
0x400309:	cmp	dword ptr [rbp - 0x48], -1
0x40030d:	je	0x400319
<Block for 0x400256, 23 bytes>
0x400256:	mov	word ptr [rbp - 0x40], 2
0x40025c:	mov	dword ptr [rbp - 0x3c], 0
0x400263:	mov	edi, 0x6987
0x400268:	call	0x500018
<Block for 0x4003b7, 2 bytes>
0x4003b7:	jmp	0x4003b9
<Block for 0x400379, 22 bytes>
0x400379:	mov	eax, dword ptr [rbp - 0x54]
0x40037c:	cdqe	
0x40037e:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400386:	mov	dword ptr [rbp - 0x4c], 0
0x40038d:	jmp	0x4003a3
<Block for 0x4003b9, 16 bytes>
0x4003b9:	nop	
0x4003ba:	mov	rax, qword ptr [rbp - 8]
0x4003be:	xor	rax, qword ptr fs:[0x28]
0x4003c7:	je	0x4003ce
<Block for 0x400319, 6 bytes>
0x400319:	cmp	dword ptr [rbp - 0x50], -1
0x40031d:	je	0x400329
<Block for 0x40030f, 10 bytes>
0x40030f:	mov	eax, dword ptr [rbp - 0x48]
0x400312:	mov	edi, eax
0x400314:	call	0x500048
<Block for 0x40026d, 26 bytes>
0x40026d:	mov	word ptr [rbp - 0x3e], ax
0x400271:	lea	rcx, [rbp - 0x40]
0x400275:	mov	eax, dword ptr [rbp - 0x48]
0x400278:	mov	edx, 0x10
0x40027d:	mov	rsi, rcx
0x400280:	mov	edi, eax
0x400282:	call	0x500020
<Block for 0x4003a3, 6 bytes>
0x4003a3:	cmp	dword ptr [rbp - 0x4c], 9
0x4003a7:	jle	0x40038f
<Block for 0x4003ce, 2 bytes>
0x4003ce:	leave	
0x4003cf:	ret	
<Block for 0x4003c9, 5 bytes>
0x4003c9:	call	0x500060
<Block for 0x40031f, 10 bytes>
0x40031f:	mov	eax, dword ptr [rbp - 0x50]
0x400322:	mov	edi, eax
0x400324:	call	0x500048
<Block for 0x400287, 5 bytes>
0x400287:	cmp	eax, -1
0x40028a:	je	0x400302
<Block for 0x40038f, 16 bytes>
0x40038f:	mov	eax, dword ptr [rbp - 0x4c]
0x400392:	cdqe	
0x400394:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400398:	mov	edi, eax
0x40039a:	call	0x500050
<Block for 0x4003a9, 2 bytes>
0x4003a9:	jmp	0x4003b9
<Block for 0x400302, 3 bytes>
0x400302:	nop	
0x400303:	jmp	0x400309
<Block for 0x40028c, 15 bytes>
0x40028c:	mov	eax, dword ptr [rbp - 0x48]
0x40028f:	mov	esi, 5
0x400294:	mov	edi, eax
0x400296:	call	0x500028
<Block for 0x40039f, 10 bytes>
0x40039f:	add	dword ptr [rbp - 0x4c], 1
0x4003a3:	cmp	dword ptr [rbp - 0x4c], 9
0x4003a7:	jle	0x40038f
<Block for 0x40029b, 5 bytes>
0x40029b:	cmp	eax, -1
0x40029e:	je	0x400305
<Block for 0x400305, 3 bytes>
0x400305:	nop	
0x400306:	jmp	0x400309
<Block for 0x4002a0, 20 bytes>
0x4002a0:	mov	eax, dword ptr [rbp - 0x48]
0x4002a3:	mov	edx, 0
0x4002a8:	mov	esi, 0
0x4002ad:	mov	edi, eax
0x4002af:	call	0x500030
<Block for 0x4002b4, 9 bytes>
0x4002b4:	mov	dword ptr [rbp - 0x50], eax
0x4002b7:	cmp	dword ptr [rbp - 0x50], -1
0x4002bb:	je	0x400308
<Block for 0x4002bd, 24 bytes>
0x4002bd:	lea	rsi, [rbp - 0x16]
0x4002c1:	mov	eax, dword ptr [rbp - 0x50]
0x4002c4:	mov	ecx, 0
0x4002c9:	mov	edx, 0xd
0x4002ce:	mov	edi, eax
0x4002d0:	call	0x500038
<Block for 0x400308, 1 bytes>
0x400308:	nop	
<Block for 0x4002d5, 9 bytes>
0x4002d5:	mov	dword ptr [rbp - 0x44], eax
0x4002d8:	cmp	dword ptr [rbp - 0x44], -1
0x4002dc:	je	0x400309
<Block for 0x4002de, 6 bytes>
0x4002de:	cmp	dword ptr [rbp - 0x44], 0
0x4002e2:	je	0x400309
<Block for 0x4002e4, 22 bytes>
0x4002e4:	mov	eax, dword ptr [rbp - 0x44]
0x4002e7:	cdqe	
0x4002e9:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002ee:	lea	rax, [rbp - 0x16]
0x4002f2:	mov	rdi, rax
0x4002f5:	call	0x500040
<Block for 0x4002fa, 5 bytes>
0x4002fa:	mov	dword ptr [rbp - 0x54], eax
0x4002fd:	jmp	0x400309
