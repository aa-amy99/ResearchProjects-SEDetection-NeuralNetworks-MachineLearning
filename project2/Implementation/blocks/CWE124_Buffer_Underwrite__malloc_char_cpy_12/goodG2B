<Block for 0x400129, 51 bytes>
0x400129:	endbr64	
0x40012d:	push	rbp
0x40012e:	mov	rbp, rsp
0x400131:	sub	rsp, 0x90
0x400138:	mov	rax, qword ptr fs:[0x28]
0x400141:	mov	qword ptr [rbp - 8], rax
0x400145:	xor	eax, eax
0x400147:	mov	qword ptr [rbp - 0x88], 0
0x400152:	mov	eax, 0
0x400157:	call	0x500000
<Block for 0x40015c, 4 bytes>
0x40015c:	test	eax, eax
0x40015e:	je	0x4001ad
<Block for 0x4001ad, 10 bytes>
0x4001ad:	mov	edi, 0x64
0x4001b2:	call	0x500008
<Block for 0x400160, 10 bytes>
0x400160:	mov	edi, 0x64
0x400165:	call	0x500008
<Block for 0x4001b7, 11 bytes>
0x4001b7:	mov	qword ptr [rbp - 0x80], rax
0x4001bb:	cmp	qword ptr [rbp - 0x80], 0
0x4001c0:	jne	0x4001cc
<Block for 0x40016a, 11 bytes>
0x40016a:	mov	qword ptr [rbp - 0x78], rax
0x40016e:	cmp	qword ptr [rbp - 0x78], 0
0x400173:	jne	0x40017f
<Block for 0x4001c2, 10 bytes>
0x4001c2:	mov	edi, 0xffffffff
0x4001c7:	call	0x500010
<Block for 0x4001cc, 22 bytes>
0x4001cc:	mov	rax, qword ptr [rbp - 0x80]
0x4001d0:	mov	edx, 0x63
0x4001d5:	mov	esi, 0x41
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x500018
<Block for 0x400175, 10 bytes>
0x400175:	mov	edi, 0xffffffff
0x40017a:	call	0x500010
<Block for 0x40017f, 22 bytes>
0x40017f:	mov	rax, qword ptr [rbp - 0x78]
0x400183:	mov	edx, 0x63
0x400188:	mov	esi, 0x41
0x40018d:	mov	rdi, rax
0x400190:	call	0x500018
<Block for 0x4001e2, 44 bytes>
0x4001e2:	mov	rax, qword ptr [rbp - 0x80]
0x4001e6:	add	rax, 0x63
0x4001ea:	mov	byte ptr [rax], 0
0x4001ed:	mov	rax, qword ptr [rbp - 0x80]
0x4001f1:	mov	qword ptr [rbp - 0x88], rax
0x4001f8:	lea	rax, [rbp - 0x70]
0x4001fc:	mov	edx, 0x63
0x400201:	mov	esi, 0x43
0x400206:	mov	rdi, rax
0x400209:	call	0x500018
<Block for 0x400195, 24 bytes>
0x400195:	mov	rax, qword ptr [rbp - 0x78]
0x400199:	add	rax, 0x63
0x40019d:	mov	byte ptr [rax], 0
0x4001a0:	mov	rax, qword ptr [rbp - 0x78]
0x4001a4:	mov	qword ptr [rbp - 0x88], rax
0x4001ab:	jmp	0x4001f8
<Block for 0x40020e, 26 bytes>
0x40020e:	mov	byte ptr [rbp - 0xd], 0
0x400212:	lea	rdx, [rbp - 0x70]
0x400216:	mov	rax, qword ptr [rbp - 0x88]
0x40021d:	mov	rsi, rdx
0x400220:	mov	rdi, rax
0x400223:	call	0x500020
<Block for 0x4001f8, 22 bytes>
0x4001f8:	lea	rax, [rbp - 0x70]
0x4001fc:	mov	edx, 0x63
0x400201:	mov	esi, 0x43
0x400206:	mov	rdi, rax
0x400209:	call	0x500018
<Block for 0x400228, 15 bytes>
0x400228:	mov	rax, qword ptr [rbp - 0x88]
0x40022f:	mov	rdi, rax
0x400232:	call	0x500028
<Block for 0x400237, 16 bytes>
0x400237:	nop	
0x400238:	mov	rax, qword ptr [rbp - 8]
0x40023c:	xor	rax, qword ptr fs:[0x28]
0x400245:	je	0x40024c
<Block for 0x40024c, 2 bytes>
0x40024c:	leave	
0x40024d:	ret	
<Block for 0x400247, 5 bytes>
0x400247:	call	0x500030
