<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400022:	nop	
0x400023:	endbr64	
0x400027:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40002e:	mov	edx, 6
0x400033:	mov	esi, 1
0x400038:	mov	edi, 2
0x40003d:	call	0x500000
<Block for 0x400042, 13 bytes>
0x400042:	mov	dword ptr [rbp - 0x50], eax
0x400045:	cmp	dword ptr [rbp - 0x50], -1
0x400049:	je	0x4000ea
<Block for 0x4000ea, 3 bytes>
0x4000ea:	nop	
0x4000eb:	jmp	0x4000ee
<Block for 0x40004f, 22 bytes>
0x40004f:	lea	rax, [rbp - 0x30]
0x400053:	mov	edx, 0x10
0x400058:	mov	esi, 0
0x40005d:	mov	rdi, rax
0x400060:	call	0x500008
<Block for 0x4000ee, 6 bytes>
0x4000ee:	cmp	dword ptr [rbp - 0x50], -1
0x4000f2:	je	0x4000fe
<Block for 0x400065, 18 bytes>
0x400065:	mov	word ptr [rbp - 0x30], 2
0x40006b:	lea	rdi, [rip + 0x1b5]
0x400072:	call	0x500010
<Block for 0x4000fe, 25 bytes>
0x4000fe:	mov	eax, dword ptr [rbp - 0x54]
0x400101:	cdqe	
0x400103:	shl	rax, 2
0x400107:	mov	qword ptr [rbp - 0x40], rax
0x40010b:	mov	rax, qword ptr [rbp - 0x40]
0x40010f:	mov	rdi, rax
0x400112:	call	0x500040
<Block for 0x4000f4, 10 bytes>
0x4000f4:	mov	eax, dword ptr [rbp - 0x50]
0x4000f7:	mov	edi, eax
0x4000f9:	call	0x500038
<Block for 0x400077, 13 bytes>
0x400077:	mov	dword ptr [rbp - 0x2c], eax
0x40007a:	mov	edi, 0x6987
0x40007f:	call	0x500018
<Block for 0x400117, 23 bytes>
0x400117:	mov	qword ptr [rbp - 0x38], rax
0x40011b:	mov	qword ptr [rbp - 0x48], 0
0x400123:	mov	eax, dword ptr [rbp - 0x54]
0x400126:	cdqe	
0x400128:	cmp	qword ptr [rbp - 0x48], rax
0x40012c:	jae	0x40014e
<Block for 0x400084, 26 bytes>
0x400084:	mov	word ptr [rbp - 0x2e], ax
0x400088:	lea	rcx, [rbp - 0x30]
0x40008c:	mov	eax, dword ptr [rbp - 0x50]
0x40008f:	mov	edx, 0x10
0x400094:	mov	rsi, rcx
0x400097:	mov	edi, eax
0x400099:	call	0x500020
<Block for 0x40012e, 32 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x48]
0x400132:	lea	rdx, [rax*4]
0x40013a:	mov	rax, qword ptr [rbp - 0x38]
0x40013e:	add	rax, rdx
0x400141:	mov	dword ptr [rax], 0
0x400147:	add	qword ptr [rbp - 0x48], 1
0x40014c:	jmp	0x400123
<Block for 0x40014e, 13 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 0x38]
0x400152:	mov	eax, dword ptr [rax]
0x400154:	mov	edi, eax
0x400156:	call	0x500048
<Block for 0x40009e, 10 bytes>
0x40009e:	cmp	eax, -1
0x4000a1:	sete	al
0x4000a4:	test	al, al
0x4000a6:	jne	0x4000ed
<Block for 0x400123, 11 bytes>
0x400123:	mov	eax, dword ptr [rbp - 0x54]
0x400126:	cdqe	
0x400128:	cmp	qword ptr [rbp - 0x48], rax
0x40012c:	jae	0x40014e
<Block for 0x40015b, 7 bytes>
0x40015b:	cmp	qword ptr [rbp - 0x38], 0
0x400160:	je	0x40016e
<Block for 0x4000a8, 24 bytes>
0x4000a8:	lea	rsi, [rbp - 0x16]
0x4000ac:	mov	eax, dword ptr [rbp - 0x50]
0x4000af:	mov	ecx, 0
0x4000b4:	mov	edx, 0xd
0x4000b9:	mov	edi, eax
0x4000bb:	call	0x500028
<Block for 0x4000ed, 1 bytes>
0x4000ed:	nop	
<Block for 0x40016e, 16 bytes>
0x40016e:	nop	
0x40016f:	mov	rax, qword ptr [rbp - 8]
0x400173:	xor	rax, qword ptr fs:[0x28]
0x40017c:	je	0x400183
<Block for 0x400162, 12 bytes>
0x400162:	mov	rax, qword ptr [rbp - 0x38]
0x400166:	mov	rdi, rax
0x400169:	call	0x500050
<Block for 0x4000c0, 9 bytes>
0x4000c0:	mov	dword ptr [rbp - 0x4c], eax
0x4000c3:	cmp	dword ptr [rbp - 0x4c], -1
0x4000c7:	je	0x4000ee
<Block for 0x400183, 2 bytes>
0x400183:	leave	
0x400184:	ret	
<Block for 0x40017e, 5 bytes>
0x40017e:	call	0x500058
<Block for 0x4000c9, 6 bytes>
0x4000c9:	cmp	dword ptr [rbp - 0x4c], 0
0x4000cd:	je	0x4000ee
<Block for 0x4000cf, 22 bytes>
0x4000cf:	mov	eax, dword ptr [rbp - 0x4c]
0x4000d2:	cdqe	
0x4000d4:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000d9:	lea	rax, [rbp - 0x16]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500030
<Block for 0x4000e5, 5 bytes>
0x4000e5:	mov	dword ptr [rbp - 0x54], eax
0x4000e8:	jmp	0x4000ee
