<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x20], 0
0x400029:	jmp	0x40007e
<Block for 0x40007e, 6 bytes>
0x40007e:	cmp	dword ptr [rbp - 0x20], 0
0x400082:	jle	0x40002b
<Block for 0x40002b, 45 bytes>
0x40002b:	mov	qword ptr [rbp - 0x16], 0
0x400033:	mov	dword ptr [rbp - 0xe], 0
0x40003a:	mov	word ptr [rbp - 0xa], 0
0x400040:	mov	rdx, qword ptr [rip + 0xfffb9]
0x400047:	lea	rax, [rbp - 0x16]
0x40004b:	mov	esi, 0xe
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400084, 6 bytes>
0x400084:	cmp	dword ptr [rbp - 0x1c], 5
0x400088:	jg	0x4000a9
<Block for 0x400058, 5 bytes>
0x400058:	test	rax, rax
0x40005b:	je	0x40006e
<Block for 0x40008a, 31 bytes>
0x40008a:	lea	rcx, [rip + 0x10f]
0x400091:	mov	edx, 0x32
0x400096:	lea	rsi, [rip + 0xb3]
0x40009d:	lea	rdi, [rip + 0xd3]
0x4000a4:	call	0x500020
<Block for 0x4000a9, 16 bytes>
0x4000a9:	nop	
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	xor	rax, qword ptr fs:[0x28]
0x4000b7:	je	0x4000be
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rdi, [rip + 0xcb]
0x400075:	call	0x500018
<Block for 0x40005d, 12 bytes>
0x40005d:	lea	rax, [rbp - 0x16]
0x400061:	mov	rdi, rax
0x400064:	call	0x500010
<Block for 0x4000be, 2 bytes>
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000b9, 5 bytes>
0x4000b9:	call	0x500028
<Block for 0x40007a, 10 bytes>
0x40007a:	add	dword ptr [rbp - 0x20], 1
0x40007e:	cmp	dword ptr [rbp - 0x20], 0
0x400082:	jle	0x40002b
<Block for 0x400069, 5 bytes>
0x400069:	mov	dword ptr [rbp - 0x1c], eax
0x40006c:	jmp	0x40007a
