<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	dword ptr [rbp - 0x18], 0
0x40001b:	cmp	dword ptr [rbp - 0x18], 0
0x40001f:	jg	0x400078
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 0x320
0x400026:	call	0x500000
<Block for 0x400078, 13 bytes>
0x400078:	mov	dword ptr [rbp - 0x14], 0
0x40007f:	cmp	dword ptr [rbp - 0x14], 0
0x400083:	jg	0x40009a
<Block for 0x40002b, 19 bytes>
0x40002b:	mov	qword ptr [rbp - 0x10], rax
0x40002f:	mov	qword ptr [rbp - 8], 0
0x400037:	cmp	qword ptr [rbp - 8], 0x63
0x40003c:	ja	0x40005f
<Block for 0x400085, 15 bytes>
0x400085:	mov	rax, qword ptr [rbp - 0x10]
0x400089:	mov	rax, qword ptr [rax]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x40009a, 3 bytes>
0x40009a:	nop	
0x40009b:	leave	
0x40009c:	ret	
<Block for 0x40003e, 33 bytes>
0x40003e:	mov	rax, qword ptr [rbp - 8]
0x400042:	lea	rdx, [rax*8]
0x40004a:	mov	rax, qword ptr [rbp - 0x10]
0x40004e:	add	rax, rdx
0x400051:	mov	qword ptr [rax], 5
0x400058:	add	qword ptr [rbp - 8], 1
0x40005d:	jmp	0x400037
<Block for 0x40005f, 7 bytes>
0x40005f:	cmp	qword ptr [rbp - 0x10], 0
0x400064:	je	0x400072
<Block for 0x400094, 6 bytes>
0x400094:	add	dword ptr [rbp - 0x14], 1
0x400098:	jmp	0x40007f
<Block for 0x400037, 7 bytes>
0x400037:	cmp	qword ptr [rbp - 8], 0x63
0x40003c:	ja	0x40005f
<Block for 0x400072, 6 bytes>
0x400072:	add	dword ptr [rbp - 0x18], 1
0x400076:	jmp	0x40001b
<Block for 0x400066, 12 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0x10]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500008
<Block for 0x40007f, 6 bytes>
0x40007f:	cmp	dword ptr [rbp - 0x14], 0
0x400083:	jg	0x40009a
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x18], 0
0x40001f:	jg	0x400078
