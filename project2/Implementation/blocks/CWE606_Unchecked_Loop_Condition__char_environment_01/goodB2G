<Block for 0x400262, 159 bytes>
0x400262:	endbr64	
0x400266:	push	rbp
0x400267:	mov	rbp, rsp
0x40026a:	sub	rsp, 0xa0
0x400271:	mov	rax, qword ptr fs:[0x28]
0x40027a:	mov	qword ptr [rbp - 8], rax
0x40027e:	xor	eax, eax
0x400280:	mov	qword ptr [rbp - 0x70], 0
0x400288:	mov	qword ptr [rbp - 0x68], 0
0x400290:	mov	qword ptr [rbp - 0x60], 0
0x400298:	mov	qword ptr [rbp - 0x58], 0
0x4002a0:	mov	qword ptr [rbp - 0x50], 0
0x4002a8:	mov	qword ptr [rbp - 0x48], 0
0x4002b0:	mov	qword ptr [rbp - 0x40], 0
0x4002b8:	mov	qword ptr [rbp - 0x38], 0
0x4002c0:	mov	qword ptr [rbp - 0x30], 0
0x4002c8:	mov	qword ptr [rbp - 0x28], 0
0x4002d0:	mov	qword ptr [rbp - 0x20], 0
0x4002d8:	mov	qword ptr [rbp - 0x18], 0
0x4002e0:	mov	dword ptr [rbp - 0x10], 0
0x4002e7:	lea	rax, [rbp - 0x70]
0x4002eb:	mov	qword ptr [rbp - 0x88], rax
0x4002f2:	mov	rax, qword ptr [rbp - 0x88]
0x4002f9:	mov	rdi, rax
0x4002fc:	call	0x500000
<Block for 0x400301, 16 bytes>
0x400301:	mov	qword ptr [rbp - 0x80], rax
0x400305:	lea	rdi, [rip + 0xe2]
0x40030c:	call	0x500008
<Block for 0x400311, 11 bytes>
0x400311:	mov	qword ptr [rbp - 0x78], rax
0x400315:	cmp	qword ptr [rbp - 0x78], 0
0x40031a:	je	0x400345
<Block for 0x400345, 34 bytes>
0x400345:	lea	rdx, [rbp - 0x94]
0x40034c:	mov	rax, qword ptr [rbp - 0x88]
0x400353:	lea	rsi, [rip + 0x98]
0x40035a:	mov	rdi, rax
0x40035d:	mov	eax, 0
0x400362:	call	0x500018
<Block for 0x40031c, 41 bytes>
0x40031c:	mov	eax, 0x63
0x400321:	sub	rax, qword ptr [rbp - 0x80]
0x400325:	mov	rdx, rax
0x400328:	mov	rcx, qword ptr [rbp - 0x88]
0x40032f:	mov	rax, qword ptr [rbp - 0x80]
0x400333:	add	rcx, rax
0x400336:	mov	rax, qword ptr [rbp - 0x78]
0x40033a:	mov	rsi, rax
0x40033d:	mov	rdi, rcx
0x400340:	call	0x500010
<Block for 0x400367, 5 bytes>
0x400367:	cmp	eax, 1
0x40036a:	jne	0x4003b8
<Block for 0x40036c, 13 bytes>
0x40036c:	mov	eax, dword ptr [rbp - 0x94]
0x400372:	cmp	eax, 0x270f
0x400377:	jg	0x4003b8
<Block for 0x4003b8, 16 bytes>
0x4003b8:	nop	
0x4003b9:	mov	rax, qword ptr [rbp - 8]
0x4003bd:	xor	rax, qword ptr fs:[0x28]
0x4003c6:	je	0x4003cd
<Block for 0x400379, 22 bytes>
0x400379:	mov	dword ptr [rbp - 0x8c], 0
0x400383:	mov	dword ptr [rbp - 0x90], 0
0x40038d:	jmp	0x40039d
<Block for 0x4003cd, 2 bytes>
0x4003cd:	leave	
0x4003ce:	ret	
<Block for 0x4003c8, 5 bytes>
0x4003c8:	call	0x500028
<Block for 0x40039d, 14 bytes>
0x40039d:	mov	eax, dword ptr [rbp - 0x94]
0x4003a3:	cmp	dword ptr [rbp - 0x90], eax
0x4003a9:	jl	0x40038f
<Block for 0x40038f, 28 bytes>
0x40038f:	add	dword ptr [rbp - 0x8c], 1
0x400396:	add	dword ptr [rbp - 0x90], 1
0x40039d:	mov	eax, dword ptr [rbp - 0x94]
0x4003a3:	cmp	dword ptr [rbp - 0x90], eax
0x4003a9:	jl	0x40038f
<Block for 0x4003ab, 13 bytes>
0x4003ab:	mov	eax, dword ptr [rbp - 0x8c]
0x4003b1:	mov	edi, eax
0x4003b3:	call	0x500020
