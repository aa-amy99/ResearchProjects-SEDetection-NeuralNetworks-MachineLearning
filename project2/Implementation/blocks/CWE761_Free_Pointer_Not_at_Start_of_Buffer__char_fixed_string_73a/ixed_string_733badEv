<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400318
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x58], rax
0x400036:	mov	rax, qword ptr [rbp - 0x58]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 54 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x58]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x58]
0x400054:	movabs	rcx, 0x7453206465786946
0x40005e:	mov	qword ptr [rax], rcx
0x400061:	mov	dword ptr [rax + 8], 0x676e6972
0x400068:	mov	byte ptr [rax + 0xc], 0
0x40006c:	lea	rdx, [rbp - 0x58]
0x400070:	lea	rax, [rbp - 0x50]
0x400074:	mov	rsi, rdx
0x400077:	mov	rdi, rax
0x40007a:	call	0x40040e
<Block for 0x40007f, 19 bytes>
0x40007f:	lea	rdx, [rbp - 0x58]
0x400083:	lea	rax, [rbp - 0x50]
0x400087:	mov	rsi, rdx
0x40008a:	mov	rdi, rax
0x40008d:	call	0x40040e
<Block for 0x400092, 19 bytes>
0x400092:	lea	rdx, [rbp - 0x58]
0x400096:	lea	rax, [rbp - 0x50]
0x40009a:	mov	rsi, rdx
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x40040e
<Block for 0x4000a5, 19 bytes>
0x4000a5:	lea	rdx, [rbp - 0x50]
0x4000a9:	lea	rax, [rbp - 0x30]
0x4000ad:	mov	rsi, rdx
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x400448
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rax, [rbp - 0x30]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500010
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rax, [rbp - 0x30]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x400338
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rax, [rbp - 0x50]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x400338
<Block for 0x4000dc, 16 bytes>
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x400126
<Block for 0x400126, 7 bytes>
0x400126:	add	rsp, 0x58
0x40012a:	pop	rbx
0x40012b:	pop	rbp
0x40012c:	ret	
<Block for 0x4000ec, 2 bytes>
0x4000ec:	jmp	0x400121
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500020
