<Block for 0x4002de, 61 bytes>
0x4002de:	endbr64	
0x4002e2:	push	rbp
0x4002e3:	mov	rbp, rsp
0x4002e6:	sub	rsp, 0x30
0x4002ea:	mov	rax, qword ptr fs:[0x28]
0x4002f3:	mov	qword ptr [rbp - 8], rax
0x4002f7:	xor	eax, eax
0x4002f9:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400300:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400307:	mov	edx, 6
0x40030c:	mov	esi, 1
0x400311:	mov	edi, 2
0x400316:	call	0x500000
<Block for 0x40031b, 13 bytes>
0x40031b:	mov	dword ptr [rbp - 0x24], eax
0x40031e:	cmp	dword ptr [rbp - 0x24], -1
0x400322:	je	0x4003d4
<Block for 0x4003d4, 3 bytes>
0x4003d4:	nop	
0x4003d5:	jmp	0x4003de
<Block for 0x400328, 22 bytes>
0x400328:	lea	rax, [rbp - 0x20]
0x40032c:	mov	edx, 0x10
0x400331:	mov	esi, 0
0x400336:	mov	rdi, rax
0x400339:	call	0x500008
<Block for 0x4003de, 6 bytes>
0x4003de:	cmp	dword ptr [rbp - 0x24], -1
0x4003e2:	je	0x4003ee
<Block for 0x40033e, 23 bytes>
0x40033e:	mov	word ptr [rbp - 0x20], 2
0x400344:	mov	dword ptr [rbp - 0x1c], 0
0x40034b:	mov	edi, 0x4e20
0x400350:	call	0x500010
<Block for 0x4003ee, 6 bytes>
0x4003ee:	cmp	dword ptr [rbp - 0x28], -1
0x4003f2:	je	0x4003fe
<Block for 0x4003e4, 10 bytes>
0x4003e4:	mov	eax, dword ptr [rbp - 0x24]
0x4003e7:	mov	edi, eax
0x4003e9:	call	0x500058
<Block for 0x400355, 26 bytes>
0x400355:	mov	word ptr [rbp - 0x1e], ax
0x400359:	lea	rcx, [rbp - 0x20]
0x40035d:	mov	eax, dword ptr [rbp - 0x24]
0x400360:	mov	edx, 0x10
0x400365:	mov	rsi, rcx
0x400368:	mov	edi, eax
0x40036a:	call	0x500018
<Block for 0x4003fe, 17 bytes>
0x4003fe:	nop	
0x4003ff:	nop	
0x400400:	mov	rax, qword ptr [rbp - 8]
0x400404:	xor	rax, qword ptr fs:[0x28]
0x40040d:	je	0x400414
<Block for 0x4003f4, 10 bytes>
0x4003f4:	mov	eax, dword ptr [rbp - 0x28]
0x4003f7:	mov	edi, eax
0x4003f9:	call	0x500058
<Block for 0x40036f, 5 bytes>
0x40036f:	cmp	eax, -1
0x400372:	je	0x4003d7
<Block for 0x400414, 2 bytes>
0x400414:	leave	
0x400415:	ret	
<Block for 0x40040f, 5 bytes>
0x40040f:	call	0x500060
<Block for 0x4003d7, 3 bytes>
0x4003d7:	nop	
0x4003d8:	jmp	0x4003de
<Block for 0x400374, 15 bytes>
0x400374:	mov	eax, dword ptr [rbp - 0x24]
0x400377:	mov	esi, 5
0x40037c:	mov	edi, eax
0x40037e:	call	0x500020
<Block for 0x400383, 5 bytes>
0x400383:	cmp	eax, -1
0x400386:	je	0x4003da
<Block for 0x4003da, 3 bytes>
0x4003da:	nop	
0x4003db:	jmp	0x4003de
<Block for 0x400388, 20 bytes>
0x400388:	mov	eax, dword ptr [rbp - 0x24]
0x40038b:	mov	edx, 0
0x400390:	mov	esi, 0
0x400395:	mov	edi, eax
0x400397:	call	0x500028
<Block for 0x40039c, 9 bytes>
0x40039c:	mov	dword ptr [rbp - 0x28], eax
0x40039f:	cmp	dword ptr [rbp - 0x28], -1
0x4003a3:	je	0x4003dd
<Block for 0x4003a5, 27 bytes>
0x4003a5:	mov	eax, dword ptr [rbp - 0x28]
0x4003a8:	mov	ecx, 0
0x4003ad:	mov	edx, 8
0x4003b2:	lea	rsi, [rip + 0x9b]
0x4003b9:	mov	edi, eax
0x4003bb:	call	0x500048
<Block for 0x4003dd, 1 bytes>
0x4003dd:	nop	
<Block for 0x4003c0, 6 bytes>
0x4003c0:	cmp	rax, -1
0x4003c4:	jne	0x4003de
<Block for 0x4003c6, 12 bytes>
0x4003c6:	lea	rdi, [rip + 0x90]
0x4003cd:	call	0x500050
<Block for 0x4003d2, 2 bytes>
0x4003d2:	jmp	0x4003de
