<Block for 0x40011f, 65 bytes>
0x40011f:	endbr64	
0x400123:	push	rbp
0x400124:	mov	rbp, rsp
0x400127:	sub	rsp, 0x30
0x40012b:	mov	rax, qword ptr fs:[0x28]
0x400134:	mov	qword ptr [rbp - 8], rax
0x400138:	xor	eax, eax
0x40013a:	movabs	rax, 0x7271706f2f636261
0x400144:	mov	qword ptr [rbp - 0x14], rax
0x400148:	mov	dword ptr [rbp - 0xc], 0x757473
0x40014f:	lea	rax, [rbp - 0x14]
0x400153:	mov	esi, 0x2f
0x400158:	mov	rdi, rax
0x40015b:	call	0x500000
<Block for 0x400160, 11 bytes>
0x400160:	mov	qword ptr [rbp - 0x28], rax
0x400164:	cmp	qword ptr [rbp - 0x28], 0
0x400169:	jne	0x400175
<Block for 0x40016b, 10 bytes>
0x40016b:	mov	edi, 1
0x400170:	call	0x500008
<Block for 0x400175, 29 bytes>
0x400175:	lea	rax, [rbp - 0x14]
0x400179:	mov	rdx, qword ptr [rbp - 0x28]
0x40017d:	sub	rdx, rax
0x400180:	mov	rax, rdx
0x400183:	mov	qword ptr [rbp - 0x20], rax
0x400187:	mov	rax, qword ptr [rbp - 0x20]
0x40018b:	mov	edi, eax
0x40018d:	call	0x500010
<Block for 0x400192, 16 bytes>
0x400192:	nop	
0x400193:	mov	rax, qword ptr [rbp - 8]
0x400197:	xor	rax, qword ptr fs:[0x28]
0x4001a0:	je	0x4001a7
<Block for 0x4001a7, 2 bytes>
0x4001a7:	leave	
0x4001a8:	ret	
<Block for 0x4001a2, 5 bytes>
0x4001a2:	call	0x500018
