<Block for 0x400270, 52 bytes>
0x400270:	endbr64	
0x400274:	push	rbp
0x400275:	mov	rbp, rsp
0x400278:	push	rbx
0x400279:	sub	rsp, 0x88
0x400280:	mov	rax, qword ptr fs:[0x28]
0x400289:	mov	qword ptr [rbp - 0x18], rax
0x40028d:	xor	eax, eax
0x40028f:	mov	qword ptr [rbp - 0x90], 0
0x40029a:	mov	eax, dword ptr [rip + 0xffd60]
0x4002a0:	test	eax, eax
0x4002a2:	je	0x4002ea
<Block for 0x4002ea, 22 bytes>
0x4002ea:	lea	rax, [rbp - 0x80]
0x4002ee:	mov	edx, 0x63
0x4002f3:	mov	esi, 0x43
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500010
<Block for 0x4002a4, 10 bytes>
0x4002a4:	mov	edi, 0x64
0x4002a9:	call	0x500008
<Block for 0x400300, 128 bytes>
0x400300:	mov	byte ptr [rbp - 0x1d], 0
0x400304:	mov	rax, qword ptr [rbp - 0x90]
0x40030b:	mov	rcx, qword ptr [rax]
0x40030e:	mov	rbx, qword ptr [rax + 8]
0x400312:	mov	qword ptr [rbp - 0x80], rcx
0x400316:	mov	qword ptr [rbp - 0x78], rbx
0x40031a:	mov	rcx, qword ptr [rax + 0x10]
0x40031e:	mov	rbx, qword ptr [rax + 0x18]
0x400322:	mov	qword ptr [rbp - 0x70], rcx
0x400326:	mov	qword ptr [rbp - 0x68], rbx
0x40032a:	mov	rcx, qword ptr [rax + 0x20]
0x40032e:	mov	rbx, qword ptr [rax + 0x28]
0x400332:	mov	qword ptr [rbp - 0x60], rcx
0x400336:	mov	qword ptr [rbp - 0x58], rbx
0x40033a:	mov	rcx, qword ptr [rax + 0x30]
0x40033e:	mov	rbx, qword ptr [rax + 0x38]
0x400342:	mov	qword ptr [rbp - 0x50], rcx
0x400346:	mov	qword ptr [rbp - 0x48], rbx
0x40034a:	mov	rcx, qword ptr [rax + 0x40]
0x40034e:	mov	rbx, qword ptr [rax + 0x48]
0x400352:	mov	qword ptr [rbp - 0x40], rcx
0x400356:	mov	qword ptr [rbp - 0x38], rbx
0x40035a:	mov	rcx, qword ptr [rax + 0x50]
0x40035e:	mov	rbx, qword ptr [rax + 0x58]
0x400362:	mov	qword ptr [rbp - 0x30], rcx
0x400366:	mov	qword ptr [rbp - 0x28], rbx
0x40036a:	mov	eax, dword ptr [rax + 0x60]
0x40036d:	mov	dword ptr [rbp - 0x20], eax
0x400370:	mov	byte ptr [rbp - 0x1d], 0
0x400374:	lea	rax, [rbp - 0x80]
0x400378:	mov	rdi, rax
0x40037b:	call	0x500018
<Block for 0x4002ae, 32 bytes>
0x4002ae:	mov	qword ptr [rbp - 0x88], rax
0x4002b5:	mov	rax, qword ptr [rbp - 0x88]
0x4002bc:	mov	edx, 0x63
0x4002c1:	mov	esi, 0x41
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x500010
<Block for 0x400380, 16 bytes>
0x400380:	nop	
0x400381:	mov	rax, qword ptr [rbp - 0x18]
0x400385:	xor	rax, qword ptr fs:[0x28]
0x40038e:	je	0x400395
<Block for 0x4002ce, 50 bytes>
0x4002ce:	mov	rax, qword ptr [rbp - 0x88]
0x4002d5:	add	rax, 0x63
0x4002d9:	mov	byte ptr [rax], 0
0x4002dc:	mov	rax, qword ptr [rbp - 0x88]
0x4002e3:	mov	qword ptr [rbp - 0x90], rax
0x4002ea:	lea	rax, [rbp - 0x80]
0x4002ee:	mov	edx, 0x63
0x4002f3:	mov	esi, 0x43
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500010
<Block for 0x400395, 10 bytes>
0x400395:	add	rsp, 0x88
0x40039c:	pop	rbx
0x40039d:	pop	rbp
0x40039e:	ret	
<Block for 0x400390, 5 bytes>
0x400390:	call	0x500020
