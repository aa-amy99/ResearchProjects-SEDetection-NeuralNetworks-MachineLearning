<Block for 0x400259, 24 bytes>
0x400259:	endbr64	
0x40025d:	push	rbp
0x40025e:	mov	rbp, rsp
0x400261:	sub	rsp, 0x20
0x400265:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40026c:	call	0x400000
<Block for 0x400271, 9 bytes>
0x400271:	test	eax, eax
0x400273:	setne	al
0x400276:	test	al, al
0x400278:	je	0x400281
<Block for 0x400281, 25 bytes>
0x400281:	mov	eax, dword ptr [rbp - 0x1c]
0x400284:	cdqe	
0x400286:	shl	rax, 2
0x40028a:	mov	qword ptr [rbp - 0x10], rax
0x40028e:	mov	rax, qword ptr [rbp - 0x10]
0x400292:	mov	rdi, rax
0x400295:	call	0x500040
<Block for 0x40027a, 32 bytes>
0x40027a:	mov	dword ptr [rbp - 0x1c], 0x14
0x400281:	mov	eax, dword ptr [rbp - 0x1c]
0x400284:	cdqe	
0x400286:	shl	rax, 2
0x40028a:	mov	qword ptr [rbp - 0x10], rax
0x40028e:	mov	rax, qword ptr [rbp - 0x10]
0x400292:	mov	rdi, rax
0x400295:	call	0x500040
<Block for 0x40029a, 23 bytes>
0x40029a:	mov	qword ptr [rbp - 8], rax
0x40029e:	mov	qword ptr [rbp - 0x18], 0
0x4002a6:	mov	eax, dword ptr [rbp - 0x1c]
0x4002a9:	cdqe	
0x4002ab:	cmp	qword ptr [rbp - 0x18], rax
0x4002af:	jae	0x4002d1
<Block for 0x4002b1, 32 bytes>
0x4002b1:	mov	rax, qword ptr [rbp - 0x18]
0x4002b5:	lea	rdx, [rax*4]
0x4002bd:	mov	rax, qword ptr [rbp - 8]
0x4002c1:	add	rax, rdx
0x4002c4:	mov	dword ptr [rax], 0
0x4002ca:	add	qword ptr [rbp - 0x18], 1
0x4002cf:	jmp	0x4002a6
<Block for 0x4002d1, 13 bytes>
0x4002d1:	mov	rax, qword ptr [rbp - 8]
0x4002d5:	mov	eax, dword ptr [rax]
0x4002d7:	mov	edi, eax
0x4002d9:	call	0x500048
<Block for 0x4002a6, 11 bytes>
0x4002a6:	mov	eax, dword ptr [rbp - 0x1c]
0x4002a9:	cdqe	
0x4002ab:	cmp	qword ptr [rbp - 0x18], rax
0x4002af:	jae	0x4002d1
<Block for 0x4002de, 7 bytes>
0x4002de:	cmp	qword ptr [rbp - 8], 0
0x4002e3:	je	0x4002f1
<Block for 0x4002f1, 3 bytes>
0x4002f1:	nop	
0x4002f2:	leave	
0x4002f3:	ret	
<Block for 0x4002e5, 12 bytes>
0x4002e5:	mov	rax, qword ptr [rbp - 8]
0x4002e9:	mov	rdi, rax
0x4002ec:	call	0x500050
