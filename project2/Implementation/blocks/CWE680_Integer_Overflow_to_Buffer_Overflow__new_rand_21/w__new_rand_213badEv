<Block for 0x40006d, 39 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x20
0x400079:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400080:	mov	dword ptr [rip + 0x226], 1
0x40008a:	mov	eax, dword ptr [rbp - 0x1c]
0x40008d:	mov	edi, eax
0x40008f:	call	0x400000
<Block for 0x400094, 28 bytes>
0x400094:	mov	dword ptr [rbp - 0x1c], eax
0x400097:	mov	eax, dword ptr [rbp - 0x1c]
0x40009a:	cdqe	
0x40009c:	shl	rax, 2
0x4000a0:	mov	qword ptr [rbp - 0x10], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
<Block for 0x4000b0, 23 bytes>
0x4000b0:	mov	qword ptr [rbp - 8], rax
0x4000b4:	mov	qword ptr [rbp - 0x18], 0
0x4000bc:	mov	eax, dword ptr [rbp - 0x1c]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x18], rax
0x4000c5:	jae	0x4000e7
<Block for 0x4000c7, 32 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x18]
0x4000cb:	lea	rdx, [rax*4]
0x4000d3:	mov	rax, qword ptr [rbp - 8]
0x4000d7:	add	rax, rdx
0x4000da:	mov	dword ptr [rax], 0
0x4000e0:	add	qword ptr [rbp - 0x18], 1
0x4000e5:	jmp	0x4000bc
<Block for 0x4000e7, 13 bytes>
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	mov	eax, dword ptr [rax]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500010
<Block for 0x4000bc, 11 bytes>
0x4000bc:	mov	eax, dword ptr [rbp - 0x1c]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x18], rax
0x4000c5:	jae	0x4000e7
<Block for 0x4000f4, 7 bytes>
0x4000f4:	cmp	qword ptr [rbp - 8], 0
0x4000f9:	je	0x400107
<Block for 0x400107, 3 bytes>
0x400107:	nop	
0x400108:	leave	
0x400109:	ret	
<Block for 0x4000fb, 12 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
