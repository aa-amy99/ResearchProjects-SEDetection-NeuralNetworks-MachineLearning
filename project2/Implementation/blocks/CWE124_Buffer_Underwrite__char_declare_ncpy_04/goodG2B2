<Block for 0x400188, 55 bytes>
0x400188:	endbr64	
0x40018c:	push	rbp
0x40018d:	mov	rbp, rsp
0x400190:	sub	rsp, 0xf0
0x400197:	mov	rax, qword ptr fs:[0x28]
0x4001a0:	mov	qword ptr [rbp - 8], rax
0x4001a4:	xor	eax, eax
0x4001a6:	lea	rax, [rbp - 0xe0]
0x4001ad:	mov	edx, 0x63
0x4001b2:	mov	esi, 0x41
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500000
<Block for 0x4001bf, 13 bytes>
0x4001bf:	mov	byte ptr [rbp - 0x7d], 0
0x4001c3:	mov	eax, 1
0x4001c8:	test	eax, eax
0x4001ca:	je	0x4001da
<Block for 0x4001da, 22 bytes>
0x4001da:	lea	rax, [rbp - 0x70]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x43
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x4001cc, 36 bytes>
0x4001cc:	lea	rax, [rbp - 0xe0]
0x4001d3:	mov	qword ptr [rbp - 0xe8], rax
0x4001da:	lea	rax, [rbp - 0x70]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x43
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x4001f0, 31 bytes>
0x4001f0:	mov	byte ptr [rbp - 0xd], 0
0x4001f4:	lea	rcx, [rbp - 0x70]
0x4001f8:	mov	rax, qword ptr [rbp - 0xe8]
0x4001ff:	mov	edx, 0x63
0x400204:	mov	rsi, rcx
0x400207:	mov	rdi, rax
0x40020a:	call	0x500008
<Block for 0x40020f, 29 bytes>
0x40020f:	mov	rax, qword ptr [rbp - 0xe8]
0x400216:	add	rax, 0x63
0x40021a:	mov	byte ptr [rax], 0
0x40021d:	mov	rax, qword ptr [rbp - 0xe8]
0x400224:	mov	rdi, rax
0x400227:	call	0x500010
<Block for 0x40022c, 16 bytes>
0x40022c:	nop	
0x40022d:	mov	rax, qword ptr [rbp - 8]
0x400231:	xor	rax, qword ptr fs:[0x28]
0x40023a:	je	0x400241
<Block for 0x400241, 2 bytes>
0x400241:	leave	
0x400242:	ret	
<Block for 0x40023c, 5 bytes>
0x40023c:	call	0x500018
