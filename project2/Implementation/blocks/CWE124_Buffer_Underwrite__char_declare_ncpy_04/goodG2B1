<Block for 0x4000bf, 55 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	sub	rsp, 0xf0
0x4000ce:	mov	rax, qword ptr fs:[0x28]
0x4000d7:	mov	qword ptr [rbp - 8], rax
0x4000db:	xor	eax, eax
0x4000dd:	lea	rax, [rbp - 0xe0]
0x4000e4:	mov	edx, 0x63
0x4000e9:	mov	esi, 0x41
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500000
<Block for 0x4000f6, 13 bytes>
0x4000f6:	mov	byte ptr [rbp - 0x7d], 0
0x4000fa:	mov	eax, 0
0x4000ff:	test	eax, eax
0x400101:	je	0x400111
<Block for 0x400111, 36 bytes>
0x400111:	lea	rax, [rbp - 0xe0]
0x400118:	mov	qword ptr [rbp - 0xe8], rax
0x40011f:	lea	rax, [rbp - 0x70]
0x400123:	mov	edx, 0x63
0x400128:	mov	esi, 0x43
0x40012d:	mov	rdi, rax
0x400130:	call	0x500000
<Block for 0x400103, 12 bytes>
0x400103:	lea	rdi, [rip + 0x162]
0x40010a:	call	0x500010
<Block for 0x400135, 31 bytes>
0x400135:	mov	byte ptr [rbp - 0xd], 0
0x400139:	lea	rcx, [rbp - 0x70]
0x40013d:	mov	rax, qword ptr [rbp - 0xe8]
0x400144:	mov	edx, 0x63
0x400149:	mov	rsi, rcx
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500008
<Block for 0x40010f, 2 bytes>
0x40010f:	jmp	0x40011f
<Block for 0x400154, 29 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0xe8]
0x40015b:	add	rax, 0x63
0x40015f:	mov	byte ptr [rax], 0
0x400162:	mov	rax, qword ptr [rbp - 0xe8]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500010
<Block for 0x40011f, 22 bytes>
0x40011f:	lea	rax, [rbp - 0x70]
0x400123:	mov	edx, 0x63
0x400128:	mov	esi, 0x43
0x40012d:	mov	rdi, rax
0x400130:	call	0x500000
<Block for 0x400171, 16 bytes>
0x400171:	nop	
0x400172:	mov	rax, qword ptr [rbp - 8]
0x400176:	xor	rax, qword ptr fs:[0x28]
0x40017f:	je	0x400186
<Block for 0x400186, 2 bytes>
0x400186:	leave	
0x400187:	ret	
<Block for 0x400181, 5 bytes>
0x400181:	call	0x500018
