<Block for 0x40004a, 21 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x10
0x400056:	mov	dword ptr [rbp - 0xc], 0
0x40005d:	jmp	0x40009b
<Block for 0x40009b, 6 bytes>
0x40009b:	cmp	dword ptr [rbp - 0xc], 0
0x40009f:	jle	0x40005f
<Block for 0x40005f, 5 bytes>
0x40005f:	call	0x500000
<Block for 0x4000a1, 4 bytes>
0x4000a1:	nop	
0x4000a2:	nop	
0x4000a3:	leave	
0x4000a4:	ret	
<Block for 0x400064, 8 bytes>
0x400064:	mov	dword ptr [rbp - 8], eax
0x400067:	call	0x500000
<Block for 0x40006c, 7 bytes>
0x40006c:	and	eax, 1
0x40006f:	test	eax, eax
0x400071:	jne	0x400076
<Block for 0x400073, 10 bytes>
0x400073:	not	dword ptr [rbp - 8]
0x400076:	mov	eax, dword ptr [rbp - 8]
0x400079:	test	eax, eax
0x40007b:	jns	0x400087
<Block for 0x400076, 7 bytes>
0x400076:	mov	eax, dword ptr [rbp - 8]
0x400079:	test	eax, eax
0x40007b:	jns	0x400087
<Block for 0x40007d, 10 bytes>
0x40007d:	mov	edi, 1
0x400082:	call	0x500010
<Block for 0x400087, 16 bytes>
0x400087:	mov	eax, dword ptr [rbp - 8]
0x40008a:	mov	dword ptr [rbp - 4], eax
0x40008d:	mov	eax, dword ptr [rbp - 4]
0x400090:	mov	edi, eax
0x400092:	call	0x500008
<Block for 0x400097, 10 bytes>
0x400097:	add	dword ptr [rbp - 0xc], 1
0x40009b:	cmp	dword ptr [rbp - 0xc], 0
0x40009f:	jle	0x40005f
