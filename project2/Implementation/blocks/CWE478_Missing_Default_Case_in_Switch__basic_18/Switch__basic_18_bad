<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	nop	
0x40000d:	endbr64	
0x400011:	lea	rax, [rip + 0x10c]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	call	0x500000
<Block for 0x400021, 55 bytes>
0x400021:	mov	edx, eax
0x400023:	movsxd	rax, edx
0x400026:	imul	rax, rax, 0x55555556
0x40002d:	shr	rax, 0x20
0x400031:	mov	rcx, rax
0x400034:	mov	eax, edx
0x400036:	sar	eax, 0x1f
0x400039:	mov	esi, ecx
0x40003b:	sub	esi, eax
0x40003d:	mov	eax, esi
0x40003f:	mov	dword ptr [rbp - 0xc], eax
0x400042:	mov	ecx, dword ptr [rbp - 0xc]
0x400045:	mov	eax, ecx
0x400047:	add	eax, eax
0x400049:	add	eax, ecx
0x40004b:	sub	edx, eax
0x40004d:	mov	eax, edx
0x40004f:	mov	dword ptr [rbp - 0xc], eax
0x400052:	cmp	dword ptr [rbp - 0xc], 0
0x400056:	je	0x400060
<Block for 0x400060, 13 bytes>
0x400060:	lea	rax, [rip + 0xd6]
0x400067:	mov	qword ptr [rbp - 8], rax
0x40006b:	jmp	0x400079
<Block for 0x400058, 6 bytes>
0x400058:	cmp	dword ptr [rbp - 0xc], 1
0x40005c:	je	0x40006d
<Block for 0x400079, 12 bytes>
0x400079:	mov	rax, qword ptr [rbp - 8]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x40006d, 24 bytes>
0x40006d:	lea	rax, [rip + 0xcb]
0x400074:	mov	qword ptr [rbp - 8], rax
0x400078:	nop	
0x400079:	mov	rax, qword ptr [rbp - 8]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x40005e, 2 bytes>
0x40005e:	jmp	0x400079
<Block for 0x400085, 3 bytes>
0x400085:	nop	
0x400086:	leave	
0x400087:	ret	
