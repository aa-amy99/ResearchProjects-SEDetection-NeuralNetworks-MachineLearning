<Block for 0x400088, 33 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x10
0x400094:	nop	
0x400095:	endbr64	
0x400099:	lea	rax, [rip + 0x84]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	call	0x500000
<Block for 0x4000a9, 55 bytes>
0x4000a9:	mov	edx, eax
0x4000ab:	movsxd	rax, edx
0x4000ae:	imul	rax, rax, 0x55555556
0x4000b5:	shr	rax, 0x20
0x4000b9:	mov	rcx, rax
0x4000bc:	mov	eax, edx
0x4000be:	sar	eax, 0x1f
0x4000c1:	mov	esi, ecx
0x4000c3:	sub	esi, eax
0x4000c5:	mov	eax, esi
0x4000c7:	mov	dword ptr [rbp - 0xc], eax
0x4000ca:	mov	ecx, dword ptr [rbp - 0xc]
0x4000cd:	mov	eax, ecx
0x4000cf:	add	eax, eax
0x4000d1:	add	eax, ecx
0x4000d3:	sub	edx, eax
0x4000d5:	mov	eax, edx
0x4000d7:	mov	dword ptr [rbp - 0xc], eax
0x4000da:	cmp	dword ptr [rbp - 0xc], 0
0x4000de:	je	0x4000e8
<Block for 0x4000e8, 13 bytes>
0x4000e8:	lea	rax, [rip + 0x4e]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	jmp	0x400101
<Block for 0x4000e0, 6 bytes>
0x4000e0:	cmp	dword ptr [rbp - 0xc], 1
0x4000e4:	je	0x4000f5
<Block for 0x400101, 12 bytes>
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	mov	rdi, rax
0x400108:	call	0x500008
<Block for 0x4000f5, 24 bytes>
0x4000f5:	lea	rax, [rip + 0x43]
0x4000fc:	mov	qword ptr [rbp - 8], rax
0x400100:	nop	
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	mov	rdi, rax
0x400108:	call	0x500008
<Block for 0x4000e6, 2 bytes>
0x4000e6:	jmp	0x40010d
<Block for 0x40010d, 2 bytes>
0x40010d:	leave	
0x40010e:	ret	
