<Block for 0x4000c3, 40 bytes>
0x4000c3:	endbr64	
0x4000c7:	push	rbp
0x4000c8:	mov	rbp, rsp
0x4000cb:	push	rbx
0x4000cc:	sub	rsp, 0x68
0x4000d0:	mov	rax, qword ptr fs:[0x28]
0x4000d9:	mov	qword ptr [rbp - 0x18], rax
0x4000dd:	xor	eax, eax
0x4000df:	lea	rax, [rbp - 0x70]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x400372
<Block for 0x4000eb, 19 bytes>
0x4000eb:	lea	rdx, [rbp - 0x70]
0x4000ef:	lea	rax, [rbp - 0x30]
0x4000f3:	mov	rsi, rdx
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x40047a
<Block for 0x4000fe, 19 bytes>
0x4000fe:	lea	rdx, [rbp - 0x30]
0x400102:	lea	rax, [rbp - 0x50]
0x400106:	mov	rsi, rdx
0x400109:	mov	rdi, rax
0x40010c:	call	0x500020
<Block for 0x400111, 12 bytes>
0x400111:	lea	rax, [rbp - 0x30]
0x400115:	mov	rdi, rax
0x400118:	call	0x400392
<Block for 0x40011d, 12 bytes>
0x40011d:	lea	rax, [rbp - 0x50]
0x400121:	mov	rdi, rax
0x400124:	call	0x500028
<Block for 0x400129, 12 bytes>
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	rdi, rax
0x400130:	call	0x400392
<Block for 0x400135, 16 bytes>
0x400135:	nop	
0x400136:	mov	rax, qword ptr [rbp - 0x18]
0x40013a:	xor	rax, qword ptr fs:[0x28]
0x400143:	je	0x40017f
<Block for 0x40017f, 7 bytes>
0x40017f:	add	rsp, 0x68
0x400183:	pop	rbx
0x400184:	pop	rbp
0x400185:	ret	
<Block for 0x400145, 2 bytes>
0x400145:	jmp	0x40017a
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500018
