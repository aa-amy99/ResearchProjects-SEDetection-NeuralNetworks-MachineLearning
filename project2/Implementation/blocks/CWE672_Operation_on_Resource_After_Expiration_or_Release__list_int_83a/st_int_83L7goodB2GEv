<Block for 0x400186, 40 bytes>
0x400186:	endbr64	
0x40018a:	push	rbp
0x40018b:	mov	rbp, rsp
0x40018e:	push	rbx
0x40018f:	sub	rsp, 0x68
0x400193:	mov	rax, qword ptr fs:[0x28]
0x40019c:	mov	qword ptr [rbp - 0x18], rax
0x4001a0:	xor	eax, eax
0x4001a2:	lea	rax, [rbp - 0x70]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x400372
<Block for 0x4001ae, 19 bytes>
0x4001ae:	lea	rdx, [rbp - 0x70]
0x4001b2:	lea	rax, [rbp - 0x30]
0x4001b6:	mov	rsi, rdx
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x40047a
<Block for 0x4001c1, 19 bytes>
0x4001c1:	lea	rdx, [rbp - 0x30]
0x4001c5:	lea	rax, [rbp - 0x50]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500030
<Block for 0x4001d4, 12 bytes>
0x4001d4:	lea	rax, [rbp - 0x30]
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x400392
<Block for 0x4001e0, 12 bytes>
0x4001e0:	lea	rax, [rbp - 0x50]
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x500038
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rax, [rbp - 0x70]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x400392
<Block for 0x4001f8, 16 bytes>
0x4001f8:	nop	
0x4001f9:	mov	rax, qword ptr [rbp - 0x18]
0x4001fd:	xor	rax, qword ptr fs:[0x28]
0x400206:	je	0x400242
<Block for 0x400242, 7 bytes>
0x400242:	add	rsp, 0x68
0x400246:	pop	rbx
0x400247:	pop	rbp
0x400248:	ret	
<Block for 0x400208, 2 bytes>
0x400208:	jmp	0x40023d
<Block for 0x40023d, 5 bytes>
0x40023d:	call	0x500018
