<Block for 0x40010c, 22 bytes>
0x40010c:	endbr64	
0x400110:	push	rbp
0x400111:	mov	rbp, rsp
0x400114:	sub	rsp, 0x20
0x400118:	mov	edi, 0x64
0x40011d:	call	0x500000
<Block for 0x400122, 11 bytes>
0x400122:	mov	qword ptr [rbp - 0x18], rax
0x400126:	cmp	qword ptr [rbp - 0x18], 0
0x40012b:	jne	0x400137
<Block for 0x40012d, 10 bytes>
0x40012d:	mov	edi, 0xffffffff
0x400132:	call	0x500008
<Block for 0x400137, 19 bytes>
0x400137:	mov	rax, qword ptr [rbp - 0x18]
0x40013b:	mov	byte ptr [rax], 0
0x40013e:	mov	rax, qword ptr [rbp - 0x18]
0x400142:	mov	rdi, rax
0x400145:	call	0x500010
<Block for 0x40014a, 19 bytes>
0x40014a:	mov	qword ptr [rbp - 0x10], rax
0x40014e:	mov	eax, 0x64
0x400153:	sub	rax, qword ptr [rbp - 0x10]
0x400157:	cmp	rax, 1
0x40015b:	jbe	0x4001d0
<Block for 0x4001d0, 10 bytes>
0x4001d0:	mov	eax, 0
0x4001d5:	call	0x500048
<Block for 0x40015d, 19 bytes>
0x40015d:	lea	rsi, [rip + 0x219]
0x400164:	lea	rdi, [rip + 0x214]
0x40016b:	call	0x500018
<Block for 0x4001da, 4 bytes>
0x4001da:	test	eax, eax
0x4001dc:	je	0x4001ec
<Block for 0x400170, 11 bytes>
0x400170:	mov	qword ptr [rbp - 8], rax
0x400174:	cmp	qword ptr [rbp - 8], 0
0x400179:	je	0x4001d0
<Block for 0x4001ec, 10 bytes>
0x4001ec:	mov	qword ptr [rbp - 0x20], 0
0x4001f4:	jmp	0x40021b
<Block for 0x4001de, 12 bytes>
0x4001de:	lea	rdi, [rip + 0x1c8]
0x4001e5:	call	0x500028
<Block for 0x40017b, 42 bytes>
0x40017b:	mov	rax, qword ptr [rbp - 0x10]
0x40017f:	mov	edx, 0x64
0x400184:	sub	edx, eax
0x400186:	mov	eax, edx
0x400188:	mov	esi, eax
0x40018a:	mov	rdx, qword ptr [rbp - 0x18]
0x40018e:	mov	rax, qword ptr [rbp - 0x10]
0x400192:	lea	rcx, [rdx + rax]
0x400196:	mov	rax, qword ptr [rbp - 8]
0x40019a:	mov	rdx, rax
0x40019d:	mov	rdi, rcx
0x4001a0:	call	0x500020
<Block for 0x40021b, 12 bytes>
0x40021b:	mov	rax, qword ptr [rbp - 0x18]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x4001ea, 2 bytes>
0x4001ea:	jmp	0x400239
<Block for 0x4001a5, 5 bytes>
0x4001a5:	test	rax, rax
0x4001a8:	jne	0x4001c4
<Block for 0x400227, 6 bytes>
0x400227:	cmp	qword ptr [rbp - 0x20], rax
0x40022b:	jb	0x4001f6
<Block for 0x400239, 3 bytes>
0x400239:	nop	
0x40023a:	leave	
0x40023b:	ret	
<Block for 0x4001aa, 12 bytes>
0x4001aa:	lea	rdi, [rip + 0x1dc]
0x4001b1:	call	0x500028
<Block for 0x4001c4, 12 bytes>
0x4001c4:	mov	rax, qword ptr [rbp - 8]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500030
<Block for 0x4001f6, 18 bytes>
0x4001f6:	mov	rdx, qword ptr [rbp - 0x18]
0x4001fa:	mov	rax, qword ptr [rbp - 0x20]
0x4001fe:	add	rax, rdx
0x400201:	movzx	eax, byte ptr [rax]
0x400204:	cmp	al, 0x53
0x400206:	jne	0x400216
<Block for 0x40022d, 12 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 0x18]
0x400231:	mov	rdi, rax
0x400234:	call	0x500040
<Block for 0x4001b6, 26 bytes>
0x4001b6:	mov	rdx, qword ptr [rbp - 0x18]
0x4001ba:	mov	rax, qword ptr [rbp - 0x10]
0x4001be:	add	rax, rdx
0x4001c1:	mov	byte ptr [rax], 0
0x4001c4:	mov	rax, qword ptr [rbp - 8]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500030
<Block for 0x400208, 12 bytes>
0x400208:	lea	rdi, [rip + 0x18d]
0x40020f:	call	0x500028
<Block for 0x400216, 17 bytes>
0x400216:	add	qword ptr [rbp - 0x20], 1
0x40021b:	mov	rax, qword ptr [rbp - 0x18]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x400214, 2 bytes>
0x400214:	jmp	0x40022d
