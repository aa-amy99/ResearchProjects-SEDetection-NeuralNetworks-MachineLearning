<Block for 0x400112, 37 bytes>
0x400112:	endbr64	
0x400116:	push	rbp
0x400117:	mov	rbp, rsp
0x40011a:	sub	rsp, 0x30
0x40011e:	mov	rax, qword ptr fs:[0x28]
0x400127:	mov	qword ptr [rbp - 8], rax
0x40012b:	xor	eax, eax
0x40012d:	mov	eax, dword ptr [rip + 0x81]
0x400133:	test	eax, eax
0x400135:	je	0x40017d
<Block for 0x40017d, 16 bytes>
0x40017d:	nop	
0x40017e:	mov	rax, qword ptr [rbp - 8]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x400192
<Block for 0x400137, 70 bytes>
0x400137:	mov	dword ptr [rbp - 0x20], 1
0x40013e:	mov	dword ptr [rbp - 0x1c], 2
0x400145:	mov	dword ptr [rbp - 0x18], 3
0x40014c:	mov	dword ptr [rbp - 0x14], 4
0x400153:	mov	dword ptr [rbp - 0x10], 5
0x40015a:	lea	rax, [rbp - 0x20]
0x40015e:	mov	qword ptr [rbp - 0x28], rax
0x400162:	mov	rax, qword ptr [rbp - 0x28]
0x400166:	add	rax, 8
0x40016a:	movzx	eax, byte ptr [rax]
0x40016d:	movsx	eax, al
0x400170:	mov	dword ptr [rbp - 0x2c], eax
0x400173:	mov	eax, dword ptr [rbp - 0x2c]
0x400176:	mov	edi, eax
0x400178:	call	0x500000
<Block for 0x400192, 2 bytes>
0x400192:	leave	
0x400193:	ret	
<Block for 0x40018d, 5 bytes>
0x40018d:	call	0x500008
