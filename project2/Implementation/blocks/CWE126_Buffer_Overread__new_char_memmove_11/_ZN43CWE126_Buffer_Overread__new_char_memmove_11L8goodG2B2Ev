<Block for 0x4001ba, 40 bytes>
0x4001ba:	endbr64	
0x4001be:	push	rbp
0x4001bf:	mov	rbp, rsp
0x4001c2:	add	rsp, -0x80
0x4001c6:	mov	rax, qword ptr fs:[0x28]
0x4001cf:	mov	qword ptr [rbp - 8], rax
0x4001d3:	xor	eax, eax
0x4001d5:	mov	qword ptr [rbp - 0x78], 0
0x4001dd:	call	0x500000
<Block for 0x4001e2, 9 bytes>
0x4001e2:	test	eax, eax
0x4001e4:	setne	al
0x4001e7:	test	al, al
0x4001e9:	je	0x40021a
<Block for 0x40021a, 22 bytes>
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	edx, 0x63
0x400223:	mov	esi, 0x43
0x400228:	mov	rdi, rax
0x40022b:	call	0x500010
<Block for 0x4001eb, 10 bytes>
0x4001eb:	mov	edi, 0x64
0x4001f0:	call	0x500008
<Block for 0x400230, 16 bytes>
0x400230:	mov	byte ptr [rbp - 0xd], 0
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	rdi, rax
0x40023b:	call	0x500018
<Block for 0x4001f5, 26 bytes>
0x4001f5:	mov	qword ptr [rbp - 0x78], rax
0x4001f9:	mov	rax, qword ptr [rbp - 0x78]
0x4001fd:	mov	edx, 0x63
0x400202:	mov	esi, 0x41
0x400207:	mov	rdi, rax
0x40020a:	call	0x500010
<Block for 0x400240, 22 bytes>
0x400240:	mov	rdx, rax
0x400243:	mov	rcx, qword ptr [rbp - 0x78]
0x400247:	lea	rax, [rbp - 0x70]
0x40024b:	mov	rsi, rcx
0x40024e:	mov	rdi, rax
0x400251:	call	0x500020
<Block for 0x40020f, 33 bytes>
0x40020f:	mov	rax, qword ptr [rbp - 0x78]
0x400213:	add	rax, 0x63
0x400217:	mov	byte ptr [rax], 0
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	edx, 0x63
0x400223:	mov	esi, 0x43
0x400228:	mov	rdi, rax
0x40022b:	call	0x500010
<Block for 0x400256, 16 bytes>
0x400256:	mov	byte ptr [rbp - 0xd], 0
0x40025a:	lea	rax, [rbp - 0x70]
0x40025e:	mov	rdi, rax
0x400261:	call	0x500028
<Block for 0x400266, 7 bytes>
0x400266:	cmp	qword ptr [rbp - 0x78], 0
0x40026b:	je	0x400279
<Block for 0x400279, 16 bytes>
0x400279:	nop	
0x40027a:	mov	rax, qword ptr [rbp - 8]
0x40027e:	xor	rax, qword ptr fs:[0x28]
0x400287:	je	0x40028e
<Block for 0x40026d, 12 bytes>
0x40026d:	mov	rax, qword ptr [rbp - 0x78]
0x400271:	mov	rdi, rax
0x400274:	call	0x500030
<Block for 0x40028e, 2 bytes>
0x40028e:	leave	
0x40028f:	ret	
<Block for 0x400289, 5 bytes>
0x400289:	call	0x500038
