<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0x13a]
0x400012:	test	eax, eax
0x400014:	je	0x400061
<Block for 0x400061, 3 bytes>
0x400061:	nop	
0x400062:	leave	
0x400063:	ret	
<Block for 0x400016, 18 bytes>
0x400016:	mov	qword ptr [rbp - 8], 0
0x40001e:	mov	edi, 4
0x400023:	call	0x500000
<Block for 0x400028, 27 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	mov	rax, qword ptr [rbp - 8]
0x400030:	mov	dword ptr [rax], 5
0x400036:	mov	rax, qword ptr [rbp - 8]
0x40003a:	mov	eax, dword ptr [rax]
0x40003c:	mov	edi, eax
0x40003e:	call	0x500008
<Block for 0x400043, 7 bytes>
0x400043:	cmp	qword ptr [rbp - 8], 0
0x400048:	je	0x400054
<Block for 0x400054, 13 bytes>
0x400054:	mov	rax, qword ptr [rbp - 8]
0x400058:	mov	eax, dword ptr [rax]
0x40005a:	mov	edi, eax
0x40005c:	call	0x500008
<Block for 0x40004a, 23 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 8]
0x40004e:	mov	dword ptr [rax], 0xa
0x400054:	mov	rax, qword ptr [rbp - 8]
0x400058:	mov	eax, dword ptr [rax]
0x40005a:	mov	edi, eax
0x40005c:	call	0x500008
