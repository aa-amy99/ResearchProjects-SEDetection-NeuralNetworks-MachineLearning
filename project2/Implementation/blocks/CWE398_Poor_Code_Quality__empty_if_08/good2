<Block for 0x40011c, 22 bytes>
0x40011c:	endbr64	
0x400120:	push	rbp
0x400121:	mov	rbp, rsp
0x400124:	sub	rsp, 0x10
0x400128:	mov	eax, 0
0x40012d:	call	0x400000
<Block for 0x400132, 4 bytes>
0x400132:	test	eax, eax
0x400134:	je	0x400198
<Block for 0x400198, 3 bytes>
0x400198:	nop	
0x400199:	leave	
0x40019a:	ret	
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500000
<Block for 0x40013b, 55 bytes>
0x40013b:	mov	edx, eax
0x40013d:	movsxd	rax, edx
0x400140:	imul	rax, rax, 0x55555556
0x400147:	shr	rax, 0x20
0x40014b:	mov	rcx, rax
0x40014e:	mov	eax, edx
0x400150:	sar	eax, 0x1f
0x400153:	mov	esi, ecx
0x400155:	sub	esi, eax
0x400157:	mov	eax, esi
0x400159:	mov	dword ptr [rbp - 4], eax
0x40015c:	mov	ecx, dword ptr [rbp - 4]
0x40015f:	mov	eax, ecx
0x400161:	add	eax, eax
0x400163:	add	eax, ecx
0x400165:	sub	edx, eax
0x400167:	mov	eax, edx
0x400169:	mov	dword ptr [rbp - 4], eax
0x40016c:	cmp	dword ptr [rbp - 4], 0
0x400170:	jne	0x400180
<Block for 0x400172, 12 bytes>
0x400172:	lea	rdi, [rip + 0x81]
0x400179:	call	0x500008
<Block for 0x400180, 12 bytes>
0x400180:	lea	rdi, [rip + 0x33]
0x400187:	call	0x500008
<Block for 0x40017e, 2 bytes>
0x40017e:	jmp	0x40018c
<Block for 0x40018c, 12 bytes>
0x40018c:	lea	rdi, [rip + 0x7f]
0x400193:	call	0x500008
