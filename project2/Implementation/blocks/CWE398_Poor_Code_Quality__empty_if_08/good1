<Block for 0x40008f, 22 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	sub	rsp, 0x10
0x40009b:	mov	eax, 0
0x4000a0:	call	0x40000f
<Block for 0x4000a5, 4 bytes>
0x4000a5:	test	eax, eax
0x4000a7:	je	0x4000b7
<Block for 0x4000b7, 5 bytes>
0x4000b7:	call	0x500000
<Block for 0x4000a9, 12 bytes>
0x4000a9:	lea	rdi, [rip + 0x135]
0x4000b0:	call	0x500008
<Block for 0x4000bc, 55 bytes>
0x4000bc:	mov	edx, eax
0x4000be:	movsxd	rax, edx
0x4000c1:	imul	rax, rax, 0x55555556
0x4000c8:	shr	rax, 0x20
0x4000cc:	mov	rcx, rax
0x4000cf:	mov	eax, edx
0x4000d1:	sar	eax, 0x1f
0x4000d4:	mov	esi, ecx
0x4000d6:	sub	esi, eax
0x4000d8:	mov	eax, esi
0x4000da:	mov	dword ptr [rbp - 4], eax
0x4000dd:	mov	ecx, dword ptr [rbp - 4]
0x4000e0:	mov	eax, ecx
0x4000e2:	add	eax, eax
0x4000e4:	add	eax, ecx
0x4000e6:	sub	edx, eax
0x4000e8:	mov	eax, edx
0x4000ea:	mov	dword ptr [rbp - 4], eax
0x4000ed:	cmp	dword ptr [rbp - 4], 0
0x4000f1:	jne	0x400101
<Block for 0x4000b5, 2 bytes>
0x4000b5:	jmp	0x400119
<Block for 0x4000f3, 12 bytes>
0x4000f3:	lea	rdi, [rip + 0x100]
0x4000fa:	call	0x500008
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0xb2]
0x400108:	call	0x500008
<Block for 0x400119, 3 bytes>
0x400119:	nop	
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x4000ff, 2 bytes>
0x4000ff:	jmp	0x40010d
<Block for 0x40010d, 12 bytes>
0x40010d:	lea	rdi, [rip + 0xfe]
0x400114:	call	0x500008
