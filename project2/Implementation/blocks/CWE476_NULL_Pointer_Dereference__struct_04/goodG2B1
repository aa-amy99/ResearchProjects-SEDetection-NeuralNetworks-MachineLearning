<Block for 0x4000da, 36 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0x20
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	eax, 0
0x4000fa:	test	eax, eax
0x4000fc:	je	0x40010c
<Block for 0x40010c, 31 bytes>
0x40010c:	mov	dword ptr [rbp - 0x10], 0
0x400113:	mov	dword ptr [rbp - 0xc], 0
0x40011a:	lea	rax, [rbp - 0x10]
0x40011e:	mov	qword ptr [rbp - 0x18], rax
0x400122:	mov	eax, 1
0x400127:	test	eax, eax
0x400129:	je	0x400138
<Block for 0x4000fe, 12 bytes>
0x4000fe:	lea	rdi, [rip + 0xef]
0x400105:	call	0x500008
<Block for 0x400138, 16 bytes>
0x400138:	nop	
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	xor	rax, qword ptr fs:[0x28]
0x400146:	je	0x40014d
<Block for 0x40012b, 13 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0x18]
0x40012f:	mov	eax, dword ptr [rax]
0x400131:	mov	edi, eax
0x400133:	call	0x500000
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x400122
<Block for 0x40014d, 2 bytes>
0x40014d:	leave	
0x40014e:	ret	
<Block for 0x400148, 5 bytes>
0x400148:	call	0x500010
<Block for 0x400122, 9 bytes>
0x400122:	mov	eax, 1
0x400127:	test	eax, eax
0x400129:	je	0x400138
