<Block for 0x40014f, 36 bytes>
0x40014f:	endbr64	
0x400153:	push	rbp
0x400154:	mov	rbp, rsp
0x400157:	sub	rsp, 0x20
0x40015b:	mov	rax, qword ptr fs:[0x28]
0x400164:	mov	qword ptr [rbp - 8], rax
0x400168:	xor	eax, eax
0x40016a:	mov	eax, 1
0x40016f:	test	eax, eax
0x400171:	je	0x400189
<Block for 0x400189, 9 bytes>
0x400189:	mov	eax, 1
0x40018e:	test	eax, eax
0x400190:	je	0x40019f
<Block for 0x400173, 31 bytes>
0x400173:	mov	dword ptr [rbp - 0x10], 0
0x40017a:	mov	dword ptr [rbp - 0xc], 0
0x400181:	lea	rax, [rbp - 0x10]
0x400185:	mov	qword ptr [rbp - 0x18], rax
0x400189:	mov	eax, 1
0x40018e:	test	eax, eax
0x400190:	je	0x40019f
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x400192, 13 bytes>
0x400192:	mov	rax, qword ptr [rbp - 0x18]
0x400196:	mov	eax, dword ptr [rax]
0x400198:	mov	edi, eax
0x40019a:	call	0x500000
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500010
