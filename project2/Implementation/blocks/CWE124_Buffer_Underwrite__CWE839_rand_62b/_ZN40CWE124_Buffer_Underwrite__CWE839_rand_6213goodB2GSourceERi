<Block for 0x400082, 22 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	push	rbx
0x40008b:	sub	rsp, 0x18
0x40008f:	mov	qword ptr [rbp - 0x18], rdi
0x400093:	call	0x500000
<Block for 0x400098, 7 bytes>
0x400098:	and	eax, 1
0x40009b:	test	eax, eax
0x40009d:	je	0x4000be
<Block for 0x4000be, 5 bytes>
0x4000be:	call	0x500000
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500000
<Block for 0x4000c3, 10 bytes>
0x4000c3:	shl	eax, 0x1e
0x4000c6:	mov	ebx, eax
0x4000c8:	call	0x500000
<Block for 0x4000a4, 10 bytes>
0x4000a4:	shl	eax, 0x1e
0x4000a7:	mov	ebx, eax
0x4000a9:	call	0x500000
<Block for 0x4000cd, 10 bytes>
0x4000cd:	shl	eax, 0xf
0x4000d0:	xor	ebx, eax
0x4000d2:	call	0x500000
<Block for 0x4000ae, 10 bytes>
0x4000ae:	shl	eax, 0xf
0x4000b1:	xor	ebx, eax
0x4000b3:	call	0x500000
<Block for 0x4000d7, 20 bytes>
0x4000d7:	xor	eax, ebx
0x4000d9:	not	eax
0x4000db:	mov	edx, eax
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	mov	dword ptr [rax], edx
0x4000e3:	nop	
0x4000e4:	add	rsp, 0x18
0x4000e8:	pop	rbx
0x4000e9:	pop	rbp
0x4000ea:	ret	
<Block for 0x4000b8, 6 bytes>
0x4000b8:	xor	eax, ebx
0x4000ba:	mov	edx, eax
0x4000bc:	jmp	0x4000dd
<Block for 0x4000dd, 14 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	mov	dword ptr [rax], edx
0x4000e3:	nop	
0x4000e4:	add	rsp, 0x18
0x4000e8:	pop	rbx
0x4000e9:	pop	rbp
0x4000ea:	ret	
