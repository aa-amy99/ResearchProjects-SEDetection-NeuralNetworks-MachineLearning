<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x400047
<Block for 0x400047, 19 bytes>
0x400047:	lea	rsi, [rip + 0x140]
0x40004e:	lea	rdi, [rip + 0x150]
0x400055:	call	0x500008
<Block for 0x400022, 19 bytes>
0x400022:	lea	rsi, [rip + 0x165]
0x400029:	lea	rdi, [rip + 0x161]
0x400030:	call	0x500008
<Block for 0x40005a, 14 bytes>
0x40005a:	mov	qword ptr [rbp - 8], rax
0x40005e:	mov	eax, 0
0x400063:	call	0x500000
<Block for 0x400035, 16 bytes>
0x400035:	mov	qword ptr [rbp - 8], rax
0x400039:	mov	rax, qword ptr [rbp - 8]
0x40003d:	mov	rdi, rax
0x400040:	call	0x500010
<Block for 0x400068, 4 bytes>
0x400068:	test	eax, eax
0x40006a:	je	0x400078
<Block for 0x400045, 2 bytes>
0x400045:	jmp	0x40005e
<Block for 0x400078, 3 bytes>
0x400078:	nop	
0x400079:	leave	
0x40007a:	ret	
<Block for 0x40006c, 12 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 8]
0x400070:	mov	rdi, rax
0x400073:	call	0x500010
<Block for 0x40005e, 10 bytes>
0x40005e:	mov	eax, 0
0x400063:	call	0x500000
