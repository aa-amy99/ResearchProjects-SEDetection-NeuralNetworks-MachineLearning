<Block for 0x4000f2, 30 bytes>
0x4000f2:	endbr64	
0x4000f6:	push	rbp
0x4000f7:	mov	rbp, rsp
0x4000fa:	sub	rsp, 0x10
0x4000fe:	mov	qword ptr [rbp - 8], 0
0x400106:	mov	eax, 0
0x40010b:	call	0x500000
<Block for 0x400110, 4 bytes>
0x400110:	test	eax, eax
0x400112:	je	0x40012d
<Block for 0x40012d, 19 bytes>
0x40012d:	lea	rsi, [rip + 0x5a]
0x400134:	lea	rdi, [rip + 0x6a]
0x40013b:	call	0x500008
<Block for 0x400114, 19 bytes>
0x400114:	lea	rsi, [rip + 0x73]
0x40011b:	lea	rdi, [rip + 0x83]
0x400122:	call	0x500008
<Block for 0x400140, 14 bytes>
0x400140:	mov	qword ptr [rbp - 8], rax
0x400144:	mov	eax, 0
0x400149:	call	0x500000
<Block for 0x400127, 6 bytes>
0x400127:	mov	qword ptr [rbp - 8], rax
0x40012b:	jmp	0x400144
<Block for 0x40014e, 4 bytes>
0x40014e:	test	eax, eax
0x400150:	je	0x400160
<Block for 0x400144, 10 bytes>
0x400144:	mov	eax, 0
0x400149:	call	0x500000
<Block for 0x400160, 12 bytes>
0x400160:	mov	rax, qword ptr [rbp - 8]
0x400164:	mov	rdi, rax
0x400167:	call	0x500010
<Block for 0x400152, 12 bytes>
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	mov	rdi, rax
0x400159:	call	0x500010
<Block for 0x40016c, 3 bytes>
0x40016c:	nop	
0x40016d:	leave	
0x40016e:	ret	
<Block for 0x40015e, 2 bytes>
0x40015e:	jmp	0x40016c
