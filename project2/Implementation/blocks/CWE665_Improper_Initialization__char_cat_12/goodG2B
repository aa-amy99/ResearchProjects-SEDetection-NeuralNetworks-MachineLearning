<Block for 0x40009a, 54 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0xf0
0x4000a9:	mov	rax, qword ptr fs:[0x28]
0x4000b2:	mov	qword ptr [rbp - 8], rax
0x4000b6:	xor	eax, eax
0x4000b8:	lea	rax, [rbp - 0xe0]
0x4000bf:	mov	qword ptr [rbp - 0xe8], rax
0x4000c6:	mov	eax, 0
0x4000cb:	call	0x500000
<Block for 0x4000d0, 4 bytes>
0x4000d0:	test	eax, eax
0x4000d2:	je	0x4000e0
<Block for 0x4000e0, 32 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 0xe8]
0x4000e7:	mov	byte ptr [rax], 0
0x4000ea:	lea	rax, [rbp - 0x70]
0x4000ee:	mov	edx, 0x63
0x4000f3:	mov	esi, 0x43
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500008
<Block for 0x4000d4, 12 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0xe8]
0x4000db:	mov	byte ptr [rax], 0
0x4000de:	jmp	0x4000ea
<Block for 0x400100, 26 bytes>
0x400100:	mov	byte ptr [rbp - 0xd], 0
0x400104:	lea	rdx, [rbp - 0x70]
0x400108:	mov	rax, qword ptr [rbp - 0xe8]
0x40010f:	mov	rsi, rdx
0x400112:	mov	rdi, rax
0x400115:	call	0x500010
<Block for 0x4000ea, 22 bytes>
0x4000ea:	lea	rax, [rbp - 0x70]
0x4000ee:	mov	edx, 0x63
0x4000f3:	mov	esi, 0x43
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500008
<Block for 0x40011a, 15 bytes>
0x40011a:	mov	rax, qword ptr [rbp - 0xe8]
0x400121:	mov	rdi, rax
0x400124:	call	0x500018
<Block for 0x400129, 16 bytes>
0x400129:	nop	
0x40012a:	mov	rax, qword ptr [rbp - 8]
0x40012e:	xor	rax, qword ptr fs:[0x28]
0x400137:	je	0x40013e
<Block for 0x40013e, 2 bytes>
0x40013e:	leave	
0x40013f:	ret	
<Block for 0x400139, 5 bytes>
0x400139:	call	0x500020
