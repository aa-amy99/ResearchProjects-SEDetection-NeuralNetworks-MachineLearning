<Block for 0x40023b, 82 bytes>
0x40023b:	endbr64	
0x40023f:	push	rbp
0x400240:	mov	rbp, rsp
0x400243:	sub	rsp, 0x120
0x40024a:	mov	rax, qword ptr fs:[0x28]
0x400253:	mov	qword ptr [rbp - 8], rax
0x400257:	xor	eax, eax
0x400259:	movabs	rax, 0x3d48544150
0x400263:	mov	edx, 0
0x400268:	mov	qword ptr [rbp - 0x110], rax
0x40026f:	mov	qword ptr [rbp - 0x108], rdx
0x400276:	lea	rdx, [rbp - 0x100]
0x40027d:	mov	eax, 0
0x400282:	mov	ecx, 0x1d
0x400287:	mov	rdi, rdx
0x40028a:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028d, 35 bytes>
0x40028d:	mov	rdx, rdi
0x400290:	mov	word ptr [rdx], ax
0x400293:	add	rdx, 2
0x400297:	lea	rax, [rbp - 0x110]
0x40029e:	mov	qword ptr [rbp - 0x118], rax
0x4002a5:	mov	eax, dword ptr [rip + 0x85]
0x4002ab:	cmp	eax, 5
0x4002ae:	jne	0x4002e9
<Block for 0x40028a, 3 bytes>
0x40028a:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002b0, 27 bytes>
0x4002b0:	mov	rax, qword ptr [rbp - 0x118]
0x4002b7:	mov	rcx, -1
0x4002be:	mov	rdx, rax
0x4002c1:	mov	eax, 0
0x4002c6:	mov	rdi, rdx
0x4002c9:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002e9, 15 bytes>
0x4002e9:	mov	rax, qword ptr [rbp - 0x118]
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500028
<Block for 0x4002cb, 45 bytes>
0x4002cb:	mov	rax, rcx
0x4002ce:	not	rax
0x4002d1:	lea	rdx, [rax - 1]
0x4002d5:	mov	rax, qword ptr [rbp - 0x118]
0x4002dc:	add	rax, rdx
0x4002df:	mov	dword ptr [rax], 0x6e69622f
0x4002e5:	mov	byte ptr [rax + 4], 0
0x4002e9:	mov	rax, qword ptr [rbp - 0x118]
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500028
<Block for 0x4002c9, 2 bytes>
0x4002c9:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002f8, 16 bytes>
0x4002f8:	nop	
0x4002f9:	mov	rax, qword ptr [rbp - 8]
0x4002fd:	xor	rax, qword ptr fs:[0x28]
0x400306:	je	0x40030d
<Block for 0x40030d, 2 bytes>
0x40030d:	leave	
0x40030e:	ret	
<Block for 0x400308, 5 bytes>
0x400308:	call	0x500030
