<Block for 0x400293, 40 bytes>
0x400293:	endbr64	
0x400297:	push	rbp
0x400298:	mov	rbp, rsp
0x40029b:	push	rbx
0x40029c:	sub	rsp, 0x58
0x4002a0:	mov	rax, qword ptr fs:[0x28]
0x4002a9:	mov	qword ptr [rbp - 0x18], rax
0x4002ad:	xor	eax, eax
0x4002af:	lea	rax, [rbp - 0x50]
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x40072e
<Block for 0x4002bb, 26 bytes>
0x4002bb:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4002c2:	mov	dword ptr [rbp - 0x5c], 7
0x4002c9:	lea	rax, [rbp - 0x50]
0x4002cd:	mov	rdi, rax
0x4002d0:	call	0x4008da
<Block for 0x4002d5, 23 bytes>
0x4002d5:	mov	qword ptr [rbp - 0x58], rax
0x4002d9:	lea	rdx, [rbp - 0x58]
0x4002dd:	lea	rax, [rbp - 0x30]
0x4002e1:	mov	rsi, rdx
0x4002e4:	mov	rdi, rax
0x4002e7:	call	0x40092a
<Block for 0x4002ec, 28 bytes>
0x4002ec:	lea	rdx, [rbp - 0x5c]
0x4002f0:	mov	rsi, qword ptr [rbp - 0x30]
0x4002f4:	lea	rax, [rbp - 0x50]
0x4002f8:	mov	rcx, rdx
0x4002fb:	mov	edx, 1
0x400300:	mov	rdi, rax
0x400303:	call	0x400958
<Block for 0x400308, 12 bytes>
0x400308:	lea	rax, [rbp - 0x50]
0x40030c:	mov	rdi, rax
0x40030f:	call	0x4008da
<Block for 0x400314, 23 bytes>
0x400314:	mov	qword ptr [rbp - 0x58], rax
0x400318:	lea	rdx, [rbp - 0x58]
0x40031c:	lea	rax, [rbp - 0x30]
0x400320:	mov	rsi, rdx
0x400323:	mov	rdi, rax
0x400326:	call	0x40092a
<Block for 0x40032b, 28 bytes>
0x40032b:	lea	rdx, [rbp - 0x5c]
0x40032f:	mov	rsi, qword ptr [rbp - 0x30]
0x400333:	lea	rax, [rbp - 0x50]
0x400337:	mov	rcx, rdx
0x40033a:	mov	edx, 1
0x40033f:	mov	rdi, rax
0x400342:	call	0x400958
<Block for 0x400347, 12 bytes>
0x400347:	lea	rax, [rbp - 0x50]
0x40034b:	mov	rdi, rax
0x40034e:	call	0x4008da
<Block for 0x400353, 23 bytes>
0x400353:	mov	qword ptr [rbp - 0x58], rax
0x400357:	lea	rdx, [rbp - 0x58]
0x40035b:	lea	rax, [rbp - 0x30]
0x40035f:	mov	rsi, rdx
0x400362:	mov	rdi, rax
0x400365:	call	0x40092a
<Block for 0x40036a, 28 bytes>
0x40036a:	lea	rdx, [rbp - 0x5c]
0x40036e:	mov	rsi, qword ptr [rbp - 0x30]
0x400372:	lea	rax, [rbp - 0x50]
0x400376:	mov	rcx, rdx
0x400379:	mov	edx, 1
0x40037e:	mov	rdi, rax
0x400381:	call	0x400958
<Block for 0x400386, 19 bytes>
0x400386:	lea	rdx, [rbp - 0x50]
0x40038a:	lea	rax, [rbp - 0x30]
0x40038e:	mov	rsi, rdx
0x400391:	mov	rdi, rax
0x400394:	call	0x400a1e
<Block for 0x400399, 12 bytes>
0x400399:	lea	rax, [rbp - 0x30]
0x40039d:	mov	rdi, rax
0x4003a0:	call	0x500058
<Block for 0x4003a5, 12 bytes>
0x4003a5:	lea	rax, [rbp - 0x30]
0x4003a9:	mov	rdi, rax
0x4003ac:	call	0x400892
<Block for 0x4003b1, 12 bytes>
0x4003b1:	lea	rax, [rbp - 0x50]
0x4003b5:	mov	rdi, rax
0x4003b8:	call	0x400892
<Block for 0x4003bd, 16 bytes>
0x4003bd:	nop	
0x4003be:	mov	rax, qword ptr [rbp - 0x18]
0x4003c2:	xor	rax, qword ptr fs:[0x28]
0x4003cb:	je	0x400407
<Block for 0x400407, 7 bytes>
0x400407:	add	rsp, 0x58
0x40040b:	pop	rbx
0x40040c:	pop	rbp
0x40040d:	ret	
<Block for 0x4003cd, 2 bytes>
0x4003cd:	jmp	0x400402
<Block for 0x400402, 5 bytes>
0x400402:	call	0x500050
