<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x40072e
<Block for 0x40002b, 40 bytes>
0x40002b:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x400035:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x40003f:	mov	edx, 6
0x400044:	mov	esi, 1
0x400049:	mov	edi, 2
0x40004e:	call	0x500000
<Block for 0x400053, 19 bytes>
0x400053:	mov	dword ptr [rbp - 0x90], eax
0x400059:	cmp	dword ptr [rbp - 0x90], -1
0x400060:	je	0x400116
<Block for 0x400116, 3 bytes>
0x400116:	nop	
0x400117:	jmp	0x40011a
<Block for 0x400066, 22 bytes>
0x400066:	lea	rax, [rbp - 0x40]
0x40006a:	mov	edx, 0x10
0x40006f:	mov	esi, 0
0x400074:	mov	rdi, rax
0x400077:	call	0x500008
<Block for 0x40011a, 9 bytes>
0x40011a:	cmp	dword ptr [rbp - 0x90], -1
0x400121:	je	0x400130
<Block for 0x40007c, 18 bytes>
0x40007c:	mov	word ptr [rbp - 0x40], 2
0x400082:	lea	rdi, [rip + 0x644]
0x400089:	call	0x500010
<Block for 0x400130, 12 bytes>
0x400130:	lea	rax, [rbp - 0x80]
0x400134:	mov	rdi, rax
0x400137:	call	0x4008da
<Block for 0x400123, 13 bytes>
0x400123:	mov	eax, dword ptr [rbp - 0x90]
0x400129:	mov	edi, eax
0x40012b:	call	0x500038
<Block for 0x40008e, 13 bytes>
0x40008e:	mov	dword ptr [rbp - 0x3c], eax
0x400091:	mov	edi, 0x6987
0x400096:	call	0x500018
<Block for 0x40013c, 29 bytes>
0x40013c:	mov	qword ptr [rbp - 0x88], rax
0x400143:	lea	rdx, [rbp - 0x88]
0x40014a:	lea	rax, [rbp - 0x60]
0x40014e:	mov	rsi, rdx
0x400151:	mov	rdi, rax
0x400154:	call	0x40092a
<Block for 0x40009b, 29 bytes>
0x40009b:	mov	word ptr [rbp - 0x3e], ax
0x40009f:	lea	rcx, [rbp - 0x40]
0x4000a3:	mov	eax, dword ptr [rbp - 0x90]
0x4000a9:	mov	edx, 0x10
0x4000ae:	mov	rsi, rcx
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500020
<Block for 0x400159, 31 bytes>
0x400159:	lea	rdx, [rbp - 0x94]
0x400160:	mov	rsi, qword ptr [rbp - 0x60]
0x400164:	lea	rax, [rbp - 0x80]
0x400168:	mov	rcx, rdx
0x40016b:	mov	edx, 1
0x400170:	mov	rdi, rax
0x400173:	call	0x400958
<Block for 0x4000b8, 10 bytes>
0x4000b8:	cmp	eax, -1
0x4000bb:	sete	al
0x4000be:	test	al, al
0x4000c0:	jne	0x400119
<Block for 0x400178, 12 bytes>
0x400178:	lea	rax, [rbp - 0x80]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x4008da
<Block for 0x4000c2, 27 bytes>
0x4000c2:	lea	rsi, [rbp - 0x26]
0x4000c6:	mov	eax, dword ptr [rbp - 0x90]
0x4000cc:	mov	ecx, 0
0x4000d1:	mov	edx, 0xd
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500028
<Block for 0x400119, 1 bytes>
0x400119:	nop	
<Block for 0x400184, 29 bytes>
0x400184:	mov	qword ptr [rbp - 0x88], rax
0x40018b:	lea	rdx, [rbp - 0x88]
0x400192:	lea	rax, [rbp - 0x60]
0x400196:	mov	rsi, rdx
0x400199:	mov	rdi, rax
0x40019c:	call	0x40092a
<Block for 0x4000dd, 15 bytes>
0x4000dd:	mov	dword ptr [rbp - 0x8c], eax
0x4000e3:	cmp	dword ptr [rbp - 0x8c], -1
0x4000ea:	je	0x40011a
<Block for 0x4001a1, 31 bytes>
0x4001a1:	lea	rdx, [rbp - 0x94]
0x4001a8:	mov	rsi, qword ptr [rbp - 0x60]
0x4001ac:	lea	rax, [rbp - 0x80]
0x4001b0:	mov	rcx, rdx
0x4001b3:	mov	edx, 1
0x4001b8:	mov	rdi, rax
0x4001bb:	call	0x400958
<Block for 0x4000ec, 9 bytes>
0x4000ec:	cmp	dword ptr [rbp - 0x8c], 0
0x4000f3:	je	0x40011a
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rax, [rbp - 0x80]
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x4008da
<Block for 0x4000f5, 25 bytes>
0x4000f5:	mov	eax, dword ptr [rbp - 0x8c]
0x4000fb:	cdqe	
0x4000fd:	mov	byte ptr [rbp + rax - 0x26], 0
0x400102:	lea	rax, [rbp - 0x26]
0x400106:	mov	rdi, rax
0x400109:	call	0x500030
<Block for 0x4001cc, 29 bytes>
0x4001cc:	mov	qword ptr [rbp - 0x88], rax
0x4001d3:	lea	rdx, [rbp - 0x88]
0x4001da:	lea	rax, [rbp - 0x60]
0x4001de:	mov	rsi, rdx
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x40092a
<Block for 0x40010e, 8 bytes>
0x40010e:	mov	dword ptr [rbp - 0x94], eax
0x400114:	jmp	0x40011a
<Block for 0x4001e9, 31 bytes>
0x4001e9:	lea	rdx, [rbp - 0x94]
0x4001f0:	mov	rsi, qword ptr [rbp - 0x60]
0x4001f4:	lea	rax, [rbp - 0x80]
0x4001f8:	mov	rcx, rdx
0x4001fb:	mov	edx, 1
0x400200:	mov	rdi, rax
0x400203:	call	0x400958
<Block for 0x400208, 19 bytes>
0x400208:	lea	rdx, [rbp - 0x80]
0x40020c:	lea	rax, [rbp - 0x60]
0x400210:	mov	rsi, rdx
0x400213:	mov	rdi, rax
0x400216:	call	0x400a1e
<Block for 0x40021b, 12 bytes>
0x40021b:	lea	rax, [rbp - 0x60]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500040
<Block for 0x400227, 12 bytes>
0x400227:	lea	rax, [rbp - 0x60]
0x40022b:	mov	rdi, rax
0x40022e:	call	0x400892
<Block for 0x400233, 12 bytes>
0x400233:	lea	rax, [rbp - 0x80]
0x400237:	mov	rdi, rax
0x40023a:	call	0x400892
<Block for 0x40023f, 16 bytes>
0x40023f:	nop	
0x400240:	mov	rax, qword ptr [rbp - 0x18]
0x400244:	xor	rax, qword ptr fs:[0x28]
0x40024d:	je	0x400289
<Block for 0x400289, 10 bytes>
0x400289:	add	rsp, 0x98
0x400290:	pop	rbx
0x400291:	pop	rbp
0x400292:	ret	
<Block for 0x40024f, 2 bytes>
0x40024f:	jmp	0x400284
<Block for 0x400284, 5 bytes>
0x400284:	call	0x500050
