<Block for 0x40040e, 43 bytes>
0x40040e:	endbr64	
0x400412:	push	rbp
0x400413:	mov	rbp, rsp
0x400416:	push	rbx
0x400417:	sub	rsp, 0x98
0x40041e:	mov	rax, qword ptr fs:[0x28]
0x400427:	mov	qword ptr [rbp - 0x18], rax
0x40042b:	xor	eax, eax
0x40042d:	lea	rax, [rbp - 0x80]
0x400431:	mov	rdi, rax
0x400434:	call	0x40072e
<Block for 0x400439, 40 bytes>
0x400439:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x400443:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x40044d:	mov	edx, 6
0x400452:	mov	esi, 1
0x400457:	mov	edi, 2
0x40045c:	call	0x500000
<Block for 0x400461, 19 bytes>
0x400461:	mov	dword ptr [rbp - 0x90], eax
0x400467:	cmp	dword ptr [rbp - 0x90], -1
0x40046e:	je	0x400524
<Block for 0x400524, 3 bytes>
0x400524:	nop	
0x400525:	jmp	0x400528
<Block for 0x400474, 22 bytes>
0x400474:	lea	rax, [rbp - 0x40]
0x400478:	mov	edx, 0x10
0x40047d:	mov	esi, 0
0x400482:	mov	rdi, rax
0x400485:	call	0x500008
<Block for 0x400528, 9 bytes>
0x400528:	cmp	dword ptr [rbp - 0x90], -1
0x40052f:	je	0x40053e
<Block for 0x40048a, 18 bytes>
0x40048a:	mov	word ptr [rbp - 0x40], 2
0x400490:	lea	rdi, [rip + 0x236]
0x400497:	call	0x500010
<Block for 0x40053e, 12 bytes>
0x40053e:	lea	rax, [rbp - 0x80]
0x400542:	mov	rdi, rax
0x400545:	call	0x4008da
<Block for 0x400531, 13 bytes>
0x400531:	mov	eax, dword ptr [rbp - 0x90]
0x400537:	mov	edi, eax
0x400539:	call	0x500038
<Block for 0x40049c, 13 bytes>
0x40049c:	mov	dword ptr [rbp - 0x3c], eax
0x40049f:	mov	edi, 0x6987
0x4004a4:	call	0x500018
<Block for 0x40054a, 29 bytes>
0x40054a:	mov	qword ptr [rbp - 0x88], rax
0x400551:	lea	rdx, [rbp - 0x88]
0x400558:	lea	rax, [rbp - 0x60]
0x40055c:	mov	rsi, rdx
0x40055f:	mov	rdi, rax
0x400562:	call	0x40092a
<Block for 0x4004a9, 29 bytes>
0x4004a9:	mov	word ptr [rbp - 0x3e], ax
0x4004ad:	lea	rcx, [rbp - 0x40]
0x4004b1:	mov	eax, dword ptr [rbp - 0x90]
0x4004b7:	mov	edx, 0x10
0x4004bc:	mov	rsi, rcx
0x4004bf:	mov	edi, eax
0x4004c1:	call	0x500020
<Block for 0x400567, 31 bytes>
0x400567:	lea	rdx, [rbp - 0x94]
0x40056e:	mov	rsi, qword ptr [rbp - 0x60]
0x400572:	lea	rax, [rbp - 0x80]
0x400576:	mov	rcx, rdx
0x400579:	mov	edx, 1
0x40057e:	mov	rdi, rax
0x400581:	call	0x400958
<Block for 0x4004c6, 10 bytes>
0x4004c6:	cmp	eax, -1
0x4004c9:	sete	al
0x4004cc:	test	al, al
0x4004ce:	jne	0x400527
<Block for 0x400586, 12 bytes>
0x400586:	lea	rax, [rbp - 0x80]
0x40058a:	mov	rdi, rax
0x40058d:	call	0x4008da
<Block for 0x4004d0, 27 bytes>
0x4004d0:	lea	rsi, [rbp - 0x26]
0x4004d4:	mov	eax, dword ptr [rbp - 0x90]
0x4004da:	mov	ecx, 0
0x4004df:	mov	edx, 0xd
0x4004e4:	mov	edi, eax
0x4004e6:	call	0x500028
<Block for 0x400527, 1 bytes>
0x400527:	nop	
<Block for 0x400592, 29 bytes>
0x400592:	mov	qword ptr [rbp - 0x88], rax
0x400599:	lea	rdx, [rbp - 0x88]
0x4005a0:	lea	rax, [rbp - 0x60]
0x4005a4:	mov	rsi, rdx
0x4005a7:	mov	rdi, rax
0x4005aa:	call	0x40092a
<Block for 0x4004eb, 15 bytes>
0x4004eb:	mov	dword ptr [rbp - 0x8c], eax
0x4004f1:	cmp	dword ptr [rbp - 0x8c], -1
0x4004f8:	je	0x400528
<Block for 0x4005af, 31 bytes>
0x4005af:	lea	rdx, [rbp - 0x94]
0x4005b6:	mov	rsi, qword ptr [rbp - 0x60]
0x4005ba:	lea	rax, [rbp - 0x80]
0x4005be:	mov	rcx, rdx
0x4005c1:	mov	edx, 1
0x4005c6:	mov	rdi, rax
0x4005c9:	call	0x400958
<Block for 0x4004fa, 9 bytes>
0x4004fa:	cmp	dword ptr [rbp - 0x8c], 0
0x400501:	je	0x400528
<Block for 0x4005ce, 12 bytes>
0x4005ce:	lea	rax, [rbp - 0x80]
0x4005d2:	mov	rdi, rax
0x4005d5:	call	0x4008da
<Block for 0x400503, 25 bytes>
0x400503:	mov	eax, dword ptr [rbp - 0x8c]
0x400509:	cdqe	
0x40050b:	mov	byte ptr [rbp + rax - 0x26], 0
0x400510:	lea	rax, [rbp - 0x26]
0x400514:	mov	rdi, rax
0x400517:	call	0x500030
<Block for 0x4005da, 29 bytes>
0x4005da:	mov	qword ptr [rbp - 0x88], rax
0x4005e1:	lea	rdx, [rbp - 0x88]
0x4005e8:	lea	rax, [rbp - 0x60]
0x4005ec:	mov	rsi, rdx
0x4005ef:	mov	rdi, rax
0x4005f2:	call	0x40092a
<Block for 0x40051c, 8 bytes>
0x40051c:	mov	dword ptr [rbp - 0x94], eax
0x400522:	jmp	0x400528
<Block for 0x4005f7, 31 bytes>
0x4005f7:	lea	rdx, [rbp - 0x94]
0x4005fe:	mov	rsi, qword ptr [rbp - 0x60]
0x400602:	lea	rax, [rbp - 0x80]
0x400606:	mov	rcx, rdx
0x400609:	mov	edx, 1
0x40060e:	mov	rdi, rax
0x400611:	call	0x400958
<Block for 0x400616, 19 bytes>
0x400616:	lea	rdx, [rbp - 0x80]
0x40061a:	lea	rax, [rbp - 0x60]
0x40061e:	mov	rsi, rdx
0x400621:	mov	rdi, rax
0x400624:	call	0x400a1e
<Block for 0x400629, 12 bytes>
0x400629:	lea	rax, [rbp - 0x60]
0x40062d:	mov	rdi, rax
0x400630:	call	0x500060
<Block for 0x400635, 12 bytes>
0x400635:	lea	rax, [rbp - 0x60]
0x400639:	mov	rdi, rax
0x40063c:	call	0x400892
<Block for 0x400641, 12 bytes>
0x400641:	lea	rax, [rbp - 0x80]
0x400645:	mov	rdi, rax
0x400648:	call	0x400892
<Block for 0x40064d, 16 bytes>
0x40064d:	nop	
0x40064e:	mov	rax, qword ptr [rbp - 0x18]
0x400652:	xor	rax, qword ptr fs:[0x28]
0x40065b:	je	0x400697
<Block for 0x400697, 10 bytes>
0x400697:	add	rsp, 0x98
0x40069e:	pop	rbx
0x40069f:	pop	rbp
0x4006a0:	ret	
<Block for 0x40065d, 2 bytes>
0x40065d:	jmp	0x400692
<Block for 0x400692, 5 bytes>
0x400692:	call	0x500050
