<Block for 0x400066, 22 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x10
0x400072:	mov	eax, 0
0x400077:	call	0x40000f
<Block for 0x40007c, 4 bytes>
0x40007c:	test	eax, eax
0x40007e:	je	0x40008e
<Block for 0x40008e, 27 bytes>
0x40008e:	mov	qword ptr [rbp - 8], 0
0x400096:	lea	rsi, [rip + 0xc0]
0x40009d:	lea	rdi, [rip + 0xbc]
0x4000a4:	call	0x500000
<Block for 0x400080, 12 bytes>
0x400080:	lea	rdi, [rip + 0xe2]
0x400087:	call	0x500010
<Block for 0x4000a9, 11 bytes>
0x4000a9:	mov	qword ptr [rbp - 8], rax
0x4000ad:	cmp	qword ptr [rbp - 8], 0
0x4000b2:	jne	0x4000ca
<Block for 0x40008c, 2 bytes>
0x40008c:	jmp	0x4000d6
<Block for 0x4000b4, 12 bytes>
0x4000b4:	lea	rdi, [rip + 0xc3]
0x4000bb:	call	0x500010
<Block for 0x4000ca, 12 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500008
<Block for 0x4000d6, 3 bytes>
0x4000d6:	nop	
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000c0, 10 bytes>
0x4000c0:	mov	edi, 1
0x4000c5:	call	0x500018
