<Block for 0x400099, 32 bytes>
0x400099:	endbr64	
0x40009d:	push	rbp
0x40009e:	mov	rbp, rsp
0x4000a1:	sub	rsp, 0x20
0x4000a5:	mov	rax, qword ptr fs:[0x28]
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	xor	eax, eax
0x4000b4:	call	0x500000
<Block for 0x4000b9, 9 bytes>
0x4000b9:	test	eax, eax
0x4000bb:	setne	al
0x4000be:	test	al, al
0x4000c0:	je	0x4000f8
<Block for 0x4000f8, 17 bytes>
0x4000f8:	mov	esi, 0xa
0x4000fd:	lea	rdi, [rip + 0xfff14]
0x400104:	call	0x4001bc
<Block for 0x4000c2, 17 bytes>
0x4000c2:	mov	esi, 0xa
0x4000c7:	lea	rdi, [rip + 0xfff4a]
0x4000ce:	call	0x4001bc
<Block for 0x400109, 19 bytes>
0x400109:	lea	rax, [rbp - 0x12]
0x40010d:	mov	rsi, rax
0x400110:	lea	rdi, [rip + 0xffef1]
0x400117:	call	0x500010
<Block for 0x4000d3, 19 bytes>
0x4000d3:	lea	rax, [rbp - 0x12]
0x4000d7:	mov	rsi, rax
0x4000da:	lea	rdi, [rip + 0xfff27]
0x4000e1:	call	0x500010
<Block for 0x40011c, 16 bytes>
0x40011c:	mov	byte ptr [rbp - 9], 0
0x400120:	lea	rax, [rbp - 0x12]
0x400124:	mov	rdi, rax
0x400127:	call	0x500018
<Block for 0x4000e6, 16 bytes>
0x4000e6:	mov	byte ptr [rbp - 9], 0
0x4000ea:	lea	rax, [rbp - 0x12]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500018
<Block for 0x40012c, 16 bytes>
0x40012c:	nop	
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	xor	rax, qword ptr fs:[0x28]
0x40013a:	je	0x400141
<Block for 0x4000f6, 2 bytes>
0x4000f6:	jmp	0x40012c
<Block for 0x400141, 2 bytes>
0x400141:	leave	
0x400142:	ret	
<Block for 0x40013c, 5 bytes>
0x40013c:	call	0x500020
