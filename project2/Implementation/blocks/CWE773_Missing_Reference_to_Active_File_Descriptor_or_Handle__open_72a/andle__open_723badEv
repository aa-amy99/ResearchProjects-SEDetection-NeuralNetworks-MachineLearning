<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003b6
<Block for 0x400028, 34 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002f:	mov	edx, 0x180
0x400034:	mov	esi, 0x42
0x400039:	lea	rdi, [rip + 0x30b]
0x400040:	mov	eax, 0
0x400045:	call	0x500000
<Block for 0x40004a, 15 bytes>
0x40004a:	mov	dword ptr [rbp - 0x5c], eax
0x40004d:	lea	rax, [rbp - 0x50]
0x400051:	mov	rdi, rax
0x400054:	call	0x40054a
<Block for 0x400059, 23 bytes>
0x400059:	mov	qword ptr [rbp - 0x58], rax
0x40005d:	lea	rdx, [rbp - 0x58]
0x400061:	lea	rax, [rbp - 0x30]
0x400065:	mov	rsi, rdx
0x400068:	mov	rdi, rax
0x40006b:	call	0x40059a
<Block for 0x400070, 28 bytes>
0x400070:	lea	rdx, [rbp - 0x5c]
0x400074:	mov	rsi, qword ptr [rbp - 0x30]
0x400078:	lea	rax, [rbp - 0x50]
0x40007c:	mov	rcx, rdx
0x40007f:	mov	edx, 1
0x400084:	mov	rdi, rax
0x400087:	call	0x4005c8
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rax, [rbp - 0x50]
0x400090:	mov	rdi, rax
0x400093:	call	0x40054a
<Block for 0x400098, 23 bytes>
0x400098:	mov	qword ptr [rbp - 0x58], rax
0x40009c:	lea	rdx, [rbp - 0x58]
0x4000a0:	lea	rax, [rbp - 0x30]
0x4000a4:	mov	rsi, rdx
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x40059a
<Block for 0x4000af, 28 bytes>
0x4000af:	lea	rdx, [rbp - 0x5c]
0x4000b3:	mov	rsi, qword ptr [rbp - 0x30]
0x4000b7:	lea	rax, [rbp - 0x50]
0x4000bb:	mov	rcx, rdx
0x4000be:	mov	edx, 1
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x4005c8
<Block for 0x4000cb, 12 bytes>
0x4000cb:	lea	rax, [rbp - 0x50]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x40054a
<Block for 0x4000d7, 23 bytes>
0x4000d7:	mov	qword ptr [rbp - 0x58], rax
0x4000db:	lea	rdx, [rbp - 0x58]
0x4000df:	lea	rax, [rbp - 0x30]
0x4000e3:	mov	rsi, rdx
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x40059a
<Block for 0x4000ee, 28 bytes>
0x4000ee:	lea	rdx, [rbp - 0x5c]
0x4000f2:	mov	rsi, qword ptr [rbp - 0x30]
0x4000f6:	lea	rax, [rbp - 0x50]
0x4000fa:	mov	rcx, rdx
0x4000fd:	mov	edx, 1
0x400102:	mov	rdi, rax
0x400105:	call	0x4005c8
<Block for 0x40010a, 19 bytes>
0x40010a:	lea	rdx, [rbp - 0x50]
0x40010e:	lea	rax, [rbp - 0x30]
0x400112:	mov	rsi, rdx
0x400115:	mov	rdi, rax
0x400118:	call	0x40068e
<Block for 0x40011d, 12 bytes>
0x40011d:	lea	rax, [rbp - 0x30]
0x400121:	mov	rdi, rax
0x400124:	call	0x500008
<Block for 0x400129, 12 bytes>
0x400129:	lea	rax, [rbp - 0x30]
0x40012d:	mov	rdi, rax
0x400130:	call	0x400502
<Block for 0x400135, 12 bytes>
0x400135:	lea	rax, [rbp - 0x50]
0x400139:	mov	rdi, rax
0x40013c:	call	0x400502
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 0x18]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x40018b
<Block for 0x40018b, 7 bytes>
0x40018b:	add	rsp, 0x58
0x40018f:	pop	rbx
0x400190:	pop	rbp
0x400191:	ret	
<Block for 0x400151, 2 bytes>
0x400151:	jmp	0x400186
<Block for 0x400186, 5 bytes>
0x400186:	call	0x500018
