<Block for 0x400087, 79 bytes>
0x400087:	endbr64	
0x40008b:	push	rbp
0x40008c:	mov	rbp, rsp
0x40008f:	sub	rsp, 0x20
0x400093:	mov	rax, qword ptr fs:[0x28]
0x40009c:	mov	qword ptr [rbp - 8], rax
0x4000a0:	xor	eax, eax
0x4000a2:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a9:	mov	qword ptr [rbp - 0x16], 0
0x4000b1:	mov	dword ptr [rbp - 0xe], 0
0x4000b8:	mov	word ptr [rbp - 0xa], 0
0x4000be:	mov	rdx, qword ptr [rip + 0xfff53]
0x4000c5:	lea	rax, [rbp - 0x16]
0x4000c9:	mov	esi, 0xe
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500020
<Block for 0x4000d6, 5 bytes>
0x4000d6:	test	rax, rax
0x4000d9:	je	0x4000ec
<Block for 0x4000ec, 12 bytes>
0x4000ec:	lea	rdi, [rip + 0x25c]
0x4000f3:	call	0x500008
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rax, [rbp - 0x16]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500028
<Block for 0x4000f8, 19 bytes>
0x4000f8:	mov	eax, dword ptr [rbp - 0x1c]
0x4000fb:	mov	dword ptr [rip + 0x21f], eax
0x400101:	mov	eax, 0
0x400106:	call	0x400000
<Block for 0x4000e7, 5 bytes>
0x4000e7:	mov	dword ptr [rbp - 0x1c], eax
0x4000ea:	jmp	0x4000f8
<Block for 0x40010b, 16 bytes>
0x40010b:	nop	
0x40010c:	mov	rax, qword ptr [rbp - 8]
0x400110:	xor	rax, qword ptr fs:[0x28]
0x400119:	je	0x400120
<Block for 0x400120, 2 bytes>
0x400120:	leave	
0x400121:	ret	
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500010
