<Block for 0x40009d, 27 bytes>
0x40009d:	endbr64	
0x4000a1:	push	rbp
0x4000a2:	mov	rbp, rsp
0x4000a5:	sub	rsp, 0x10
0x4000a9:	nop	
0x4000aa:	endbr64	
0x4000ae:	mov	edi, 8
0x4000b3:	call	0x500018
<Block for 0x4000b8, 51 bytes>
0x4000b8:	mov	qword ptr [rbp - 0x10], rax
0x4000bc:	mov	rax, qword ptr [rbp - 0x10]
0x4000c0:	mov	dword ptr [rax], 0
0x4000c6:	mov	rax, qword ptr [rbp - 0x10]
0x4000ca:	mov	dword ptr [rax + 4], 0
0x4000d1:	mov	rax, qword ptr [rbp - 0x10]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	nop	
0x4000da:	endbr64	
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	eax, dword ptr [rax]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x500000
<Block for 0x4000eb, 9 bytes>
0x4000eb:	mov	rax, qword ptr [rbp - 8]
0x4000ef:	test	rax, rax
0x4000f2:	je	0x400101
<Block for 0x400101, 3 bytes>
0x400101:	nop	
0x400102:	leave	
0x400103:	ret	
<Block for 0x4000f4, 13 bytes>
0x4000f4:	mov	esi, 8
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500008
