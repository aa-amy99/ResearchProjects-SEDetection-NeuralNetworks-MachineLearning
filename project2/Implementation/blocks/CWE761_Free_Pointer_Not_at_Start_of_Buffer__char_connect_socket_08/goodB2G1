<Block for 0x4001f4, 37 bytes>
0x4001f4:	endbr64	
0x4001f8:	push	rbp
0x4001f9:	mov	rbp, rsp
0x4001fc:	sub	rsp, 0x50
0x400200:	mov	rax, qword ptr fs:[0x28]
0x400209:	mov	qword ptr [rbp - 8], rax
0x40020d:	xor	eax, eax
0x40020f:	mov	edi, 0x64
0x400214:	call	0x500000
<Block for 0x400219, 11 bytes>
0x400219:	mov	qword ptr [rbp - 0x38], rax
0x40021d:	cmp	qword ptr [rbp - 0x38], 0
0x400222:	jne	0x40022e
<Block for 0x400224, 10 bytes>
0x400224:	mov	edi, 0xffffffff
0x400229:	call	0x500008
<Block for 0x40022e, 26 bytes>
0x40022e:	mov	rax, qword ptr [rbp - 0x38]
0x400232:	mov	byte ptr [rax], 0
0x400235:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40023c:	mov	rax, qword ptr [rbp - 0x38]
0x400240:	mov	rdi, rax
0x400243:	call	0x500010
<Block for 0x400248, 24 bytes>
0x400248:	mov	qword ptr [rbp - 0x30], rax
0x40024c:	mov	edx, 6
0x400251:	mov	esi, 1
0x400256:	mov	edi, 2
0x40025b:	call	0x500018
<Block for 0x400260, 13 bytes>
0x400260:	mov	dword ptr [rbp - 0x48], eax
0x400263:	cmp	dword ptr [rbp - 0x48], -1
0x400267:	je	0x40035a
<Block for 0x40035a, 3 bytes>
0x40035a:	nop	
0x40035b:	jmp	0x40035e
<Block for 0x40026d, 22 bytes>
0x40026d:	lea	rax, [rbp - 0x20]
0x400271:	mov	edx, 0x10
0x400276:	mov	esi, 0
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500020
<Block for 0x40035e, 6 bytes>
0x40035e:	cmp	dword ptr [rbp - 0x48], -1
0x400362:	je	0x40036e
<Block for 0x400283, 18 bytes>
0x400283:	mov	word ptr [rbp - 0x20], 2
0x400289:	lea	rdi, [rip + 0x369]
0x400290:	call	0x500028
<Block for 0x40036e, 10 bytes>
0x40036e:	mov	eax, 0
0x400373:	call	0x40000f
<Block for 0x400364, 10 bytes>
0x400364:	mov	eax, dword ptr [rbp - 0x48]
0x400367:	mov	edi, eax
0x400369:	call	0x500050
<Block for 0x400295, 13 bytes>
0x400295:	mov	dword ptr [rbp - 0x1c], eax
0x400298:	mov	edi, 0x6987
0x40029d:	call	0x500030
<Block for 0x400378, 4 bytes>
0x400378:	test	eax, eax
0x40037a:	je	0x40038a
<Block for 0x4002a2, 26 bytes>
0x4002a2:	mov	word ptr [rbp - 0x1e], ax
0x4002a6:	lea	rcx, [rbp - 0x20]
0x4002aa:	mov	eax, dword ptr [rbp - 0x48]
0x4002ad:	mov	edx, 0x10
0x4002b2:	mov	rsi, rcx
0x4002b5:	mov	edi, eax
0x4002b7:	call	0x500038
<Block for 0x40038a, 10 bytes>
0x40038a:	mov	qword ptr [rbp - 0x40], 0
0x400392:	jmp	0x4003b9
<Block for 0x40037c, 12 bytes>
0x40037c:	lea	rdi, [rip + 0x291]
0x400383:	call	0x500058
<Block for 0x4002bc, 9 bytes>
0x4002bc:	cmp	eax, -1
0x4002bf:	je	0x40035d
<Block for 0x4003b9, 12 bytes>
0x4003b9:	mov	rax, qword ptr [rbp - 0x38]
0x4003bd:	mov	rdi, rax
0x4003c0:	call	0x500010
<Block for 0x400388, 2 bytes>
0x400388:	jmp	0x4003d7
<Block for 0x4002c5, 39 bytes>
0x4002c5:	mov	eax, 0x63
0x4002ca:	sub	rax, qword ptr [rbp - 0x30]
0x4002ce:	mov	rdx, rax
0x4002d1:	mov	rcx, qword ptr [rbp - 0x38]
0x4002d5:	mov	rax, qword ptr [rbp - 0x30]
0x4002d9:	lea	rsi, [rcx + rax]
0x4002dd:	mov	eax, dword ptr [rbp - 0x48]
0x4002e0:	mov	ecx, 0
0x4002e5:	mov	edi, eax
0x4002e7:	call	0x500040
<Block for 0x40035d, 1 bytes>
0x40035d:	nop	
<Block for 0x4003c5, 6 bytes>
0x4003c5:	cmp	qword ptr [rbp - 0x40], rax
0x4003c9:	jb	0x400394
<Block for 0x4003d7, 16 bytes>
0x4003d7:	nop	
0x4003d8:	mov	rax, qword ptr [rbp - 8]
0x4003dc:	xor	rax, qword ptr fs:[0x28]
0x4003e5:	je	0x4003ec
<Block for 0x4002ec, 9 bytes>
0x4002ec:	mov	dword ptr [rbp - 0x44], eax
0x4002ef:	cmp	dword ptr [rbp - 0x44], -1
0x4002f3:	je	0x40035e
<Block for 0x400394, 18 bytes>
0x400394:	mov	rdx, qword ptr [rbp - 0x38]
0x400398:	mov	rax, qword ptr [rbp - 0x40]
0x40039c:	add	rax, rdx
0x40039f:	movzx	eax, byte ptr [rax]
0x4003a2:	cmp	al, 0x53
0x4003a4:	jne	0x4003b4
<Block for 0x4003cb, 12 bytes>
0x4003cb:	mov	rax, qword ptr [rbp - 0x38]
0x4003cf:	mov	rdi, rax
0x4003d2:	call	0x500060
<Block for 0x4003ec, 2 bytes>
0x4003ec:	leave	
0x4003ed:	ret	
<Block for 0x4003e7, 5 bytes>
0x4003e7:	call	0x500068
<Block for 0x4002f5, 6 bytes>
0x4002f5:	cmp	dword ptr [rbp - 0x44], 0
0x4002f9:	je	0x40035e
<Block for 0x4003a6, 12 bytes>
0x4003a6:	lea	rdi, [rip + 0x256]
0x4003ad:	call	0x500058
<Block for 0x4003b4, 17 bytes>
0x4003b4:	add	qword ptr [rbp - 0x40], 1
0x4003b9:	mov	rax, qword ptr [rbp - 0x38]
0x4003bd:	mov	rdi, rax
0x4003c0:	call	0x500010
<Block for 0x4002fb, 40 bytes>
0x4002fb:	mov	eax, dword ptr [rbp - 0x44]
0x4002fe:	movsxd	rdx, eax
0x400301:	mov	rax, qword ptr [rbp - 0x30]
0x400305:	add	rdx, rax
0x400308:	mov	rax, qword ptr [rbp - 0x38]
0x40030c:	add	rax, rdx
0x40030f:	mov	byte ptr [rax], 0
0x400312:	mov	rax, qword ptr [rbp - 0x38]
0x400316:	mov	esi, 0xd
0x40031b:	mov	rdi, rax
0x40031e:	call	0x500048
<Block for 0x4003b2, 2 bytes>
0x4003b2:	jmp	0x4003cb
<Block for 0x400323, 11 bytes>
0x400323:	mov	qword ptr [rbp - 0x28], rax
0x400327:	cmp	qword ptr [rbp - 0x28], 0
0x40032c:	je	0x400335
<Block for 0x400335, 17 bytes>
0x400335:	mov	rax, qword ptr [rbp - 0x38]
0x400339:	mov	esi, 0xa
0x40033e:	mov	rdi, rax
0x400341:	call	0x500048
<Block for 0x40032e, 24 bytes>
0x40032e:	mov	rax, qword ptr [rbp - 0x28]
0x400332:	mov	byte ptr [rax], 0
0x400335:	mov	rax, qword ptr [rbp - 0x38]
0x400339:	mov	esi, 0xa
0x40033e:	mov	rdi, rax
0x400341:	call	0x500048
<Block for 0x400346, 11 bytes>
0x400346:	mov	qword ptr [rbp - 0x28], rax
0x40034a:	cmp	qword ptr [rbp - 0x28], 0
0x40034f:	je	0x40035e
<Block for 0x400351, 9 bytes>
0x400351:	mov	rax, qword ptr [rbp - 0x28]
0x400355:	mov	byte ptr [rax], 0
0x400358:	jmp	0x40035e
