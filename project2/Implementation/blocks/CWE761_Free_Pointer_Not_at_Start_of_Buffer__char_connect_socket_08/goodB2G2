<Block for 0x4003ee, 37 bytes>
0x4003ee:	endbr64	
0x4003f2:	push	rbp
0x4003f3:	mov	rbp, rsp
0x4003f6:	sub	rsp, 0x50
0x4003fa:	mov	rax, qword ptr fs:[0x28]
0x400403:	mov	qword ptr [rbp - 8], rax
0x400407:	xor	eax, eax
0x400409:	mov	edi, 0x64
0x40040e:	call	0x500000
<Block for 0x400413, 11 bytes>
0x400413:	mov	qword ptr [rbp - 0x38], rax
0x400417:	cmp	qword ptr [rbp - 0x38], 0
0x40041c:	jne	0x400428
<Block for 0x40041e, 10 bytes>
0x40041e:	mov	edi, 0xffffffff
0x400423:	call	0x500008
<Block for 0x400428, 26 bytes>
0x400428:	mov	rax, qword ptr [rbp - 0x38]
0x40042c:	mov	byte ptr [rax], 0
0x40042f:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400436:	mov	rax, qword ptr [rbp - 0x38]
0x40043a:	mov	rdi, rax
0x40043d:	call	0x500010
<Block for 0x400442, 24 bytes>
0x400442:	mov	qword ptr [rbp - 0x30], rax
0x400446:	mov	edx, 6
0x40044b:	mov	esi, 1
0x400450:	mov	edi, 2
0x400455:	call	0x500018
<Block for 0x40045a, 13 bytes>
0x40045a:	mov	dword ptr [rbp - 0x48], eax
0x40045d:	cmp	dword ptr [rbp - 0x48], -1
0x400461:	je	0x400554
<Block for 0x400554, 3 bytes>
0x400554:	nop	
0x400555:	jmp	0x400558
<Block for 0x400467, 22 bytes>
0x400467:	lea	rax, [rbp - 0x20]
0x40046b:	mov	edx, 0x10
0x400470:	mov	esi, 0
0x400475:	mov	rdi, rax
0x400478:	call	0x500020
<Block for 0x400558, 6 bytes>
0x400558:	cmp	dword ptr [rbp - 0x48], -1
0x40055c:	je	0x400568
<Block for 0x40047d, 18 bytes>
0x40047d:	mov	word ptr [rbp - 0x20], 2
0x400483:	lea	rdi, [rip + 0x16f]
0x40048a:	call	0x500028
<Block for 0x400568, 10 bytes>
0x400568:	mov	eax, 0
0x40056d:	call	0x400000
<Block for 0x40055e, 10 bytes>
0x40055e:	mov	eax, dword ptr [rbp - 0x48]
0x400561:	mov	edi, eax
0x400563:	call	0x500050
<Block for 0x40048f, 13 bytes>
0x40048f:	mov	dword ptr [rbp - 0x1c], eax
0x400492:	mov	edi, 0x6987
0x400497:	call	0x500030
<Block for 0x400572, 4 bytes>
0x400572:	test	eax, eax
0x400574:	je	0x4005c3
<Block for 0x40049c, 26 bytes>
0x40049c:	mov	word ptr [rbp - 0x1e], ax
0x4004a0:	lea	rcx, [rbp - 0x20]
0x4004a4:	mov	eax, dword ptr [rbp - 0x48]
0x4004a7:	mov	edx, 0x10
0x4004ac:	mov	rsi, rcx
0x4004af:	mov	edi, eax
0x4004b1:	call	0x500038
<Block for 0x4005c3, 16 bytes>
0x4005c3:	nop	
0x4005c4:	mov	rax, qword ptr [rbp - 8]
0x4005c8:	xor	rax, qword ptr fs:[0x28]
0x4005d1:	je	0x4005d8
<Block for 0x400576, 10 bytes>
0x400576:	mov	qword ptr [rbp - 0x40], 0
0x40057e:	jmp	0x4005a5
<Block for 0x4004b6, 9 bytes>
0x4004b6:	cmp	eax, -1
0x4004b9:	je	0x400557
<Block for 0x4005d8, 2 bytes>
0x4005d8:	leave	
0x4005d9:	ret	
<Block for 0x4005d3, 5 bytes>
0x4005d3:	call	0x500068
<Block for 0x4005a5, 12 bytes>
0x4005a5:	mov	rax, qword ptr [rbp - 0x38]
0x4005a9:	mov	rdi, rax
0x4005ac:	call	0x500010
<Block for 0x4004bf, 39 bytes>
0x4004bf:	mov	eax, 0x63
0x4004c4:	sub	rax, qword ptr [rbp - 0x30]
0x4004c8:	mov	rdx, rax
0x4004cb:	mov	rcx, qword ptr [rbp - 0x38]
0x4004cf:	mov	rax, qword ptr [rbp - 0x30]
0x4004d3:	lea	rsi, [rcx + rax]
0x4004d7:	mov	eax, dword ptr [rbp - 0x48]
0x4004da:	mov	ecx, 0
0x4004df:	mov	edi, eax
0x4004e1:	call	0x500040
<Block for 0x400557, 1 bytes>
0x400557:	nop	
<Block for 0x4005b1, 6 bytes>
0x4005b1:	cmp	qword ptr [rbp - 0x40], rax
0x4005b5:	jb	0x400580
<Block for 0x4004e6, 9 bytes>
0x4004e6:	mov	dword ptr [rbp - 0x44], eax
0x4004e9:	cmp	dword ptr [rbp - 0x44], -1
0x4004ed:	je	0x400558
<Block for 0x400580, 18 bytes>
0x400580:	mov	rdx, qword ptr [rbp - 0x38]
0x400584:	mov	rax, qword ptr [rbp - 0x40]
0x400588:	add	rax, rdx
0x40058b:	movzx	eax, byte ptr [rax]
0x40058e:	cmp	al, 0x53
0x400590:	jne	0x4005a0
<Block for 0x4005b7, 12 bytes>
0x4005b7:	mov	rax, qword ptr [rbp - 0x38]
0x4005bb:	mov	rdi, rax
0x4005be:	call	0x500060
<Block for 0x4004ef, 6 bytes>
0x4004ef:	cmp	dword ptr [rbp - 0x44], 0
0x4004f3:	je	0x400558
<Block for 0x400592, 12 bytes>
0x400592:	lea	rdi, [rip + 0x6a]
0x400599:	call	0x500058
<Block for 0x4005a0, 17 bytes>
0x4005a0:	add	qword ptr [rbp - 0x40], 1
0x4005a5:	mov	rax, qword ptr [rbp - 0x38]
0x4005a9:	mov	rdi, rax
0x4005ac:	call	0x500010
<Block for 0x4004f5, 40 bytes>
0x4004f5:	mov	eax, dword ptr [rbp - 0x44]
0x4004f8:	movsxd	rdx, eax
0x4004fb:	mov	rax, qword ptr [rbp - 0x30]
0x4004ff:	add	rdx, rax
0x400502:	mov	rax, qword ptr [rbp - 0x38]
0x400506:	add	rax, rdx
0x400509:	mov	byte ptr [rax], 0
0x40050c:	mov	rax, qword ptr [rbp - 0x38]
0x400510:	mov	esi, 0xd
0x400515:	mov	rdi, rax
0x400518:	call	0x500048
<Block for 0x40059e, 2 bytes>
0x40059e:	jmp	0x4005b7
<Block for 0x40051d, 11 bytes>
0x40051d:	mov	qword ptr [rbp - 0x28], rax
0x400521:	cmp	qword ptr [rbp - 0x28], 0
0x400526:	je	0x40052f
<Block for 0x40052f, 17 bytes>
0x40052f:	mov	rax, qword ptr [rbp - 0x38]
0x400533:	mov	esi, 0xa
0x400538:	mov	rdi, rax
0x40053b:	call	0x500048
<Block for 0x400528, 24 bytes>
0x400528:	mov	rax, qword ptr [rbp - 0x28]
0x40052c:	mov	byte ptr [rax], 0
0x40052f:	mov	rax, qword ptr [rbp - 0x38]
0x400533:	mov	esi, 0xa
0x400538:	mov	rdi, rax
0x40053b:	call	0x500048
<Block for 0x400540, 11 bytes>
0x400540:	mov	qword ptr [rbp - 0x28], rax
0x400544:	cmp	qword ptr [rbp - 0x28], 0
0x400549:	je	0x400558
<Block for 0x40054b, 9 bytes>
0x40054b:	mov	rax, qword ptr [rbp - 0x28]
0x40054f:	mov	byte ptr [rax], 0
0x400552:	jmp	0x400558
