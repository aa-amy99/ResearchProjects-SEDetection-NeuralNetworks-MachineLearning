<Block for 0x4000dc, 58 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x20
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	dword ptr [rbp - 0x1c], 0x64
0x4000fe:	mov	dword ptr [rbp - 0x10], 0
0x400105:	mov	dword ptr [rbp - 0xc], 0
0x40010c:	mov	eax, dword ptr [rip + 0xffeee]
0x400112:	test	eax, eax
0x400114:	je	0x40011e
<Block for 0x40011e, 14 bytes>
0x40011e:	mov	rax, qword ptr [rbp - 0x18]
0x400122:	mov	eax, dword ptr [rax + 4]
0x400125:	mov	edi, eax
0x400127:	call	0x500008
<Block for 0x400116, 22 bytes>
0x400116:	lea	rax, [rbp - 0x10]
0x40011a:	mov	qword ptr [rbp - 0x18], rax
0x40011e:	mov	rax, qword ptr [rbp - 0x18]
0x400122:	mov	eax, dword ptr [rax + 4]
0x400125:	mov	edi, eax
0x400127:	call	0x500008
<Block for 0x40012c, 16 bytes>
0x40012c:	nop	
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	xor	rax, qword ptr fs:[0x28]
0x40013a:	je	0x400141
<Block for 0x400141, 2 bytes>
0x400141:	leave	
0x400142:	ret	
<Block for 0x40013c, 5 bytes>
0x40013c:	call	0x500010
