<Block for 0x400067, 58 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x20
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	dword ptr [rbp - 0x1c], 0x64
0x400089:	mov	dword ptr [rbp - 0x10], 0
0x400090:	mov	dword ptr [rbp - 0xc], 0
0x400097:	mov	eax, dword ptr [rip + 0xfff7b]
0x40009d:	test	eax, eax
0x40009f:	je	0x4000af
<Block for 0x4000af, 22 bytes>
0x4000af:	lea	rax, [rbp - 0x10]
0x4000b3:	mov	qword ptr [rbp - 0x18], rax
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	eax, dword ptr [rax + 4]
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500008
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0xb0]
0x4000a8:	call	0x500020
<Block for 0x4000c5, 16 bytes>
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x4000ad, 2 bytes>
0x4000ad:	jmp	0x4000b7
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500010
<Block for 0x4000b7, 14 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	eax, dword ptr [rax + 4]
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500008
