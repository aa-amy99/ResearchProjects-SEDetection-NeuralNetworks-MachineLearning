<Block for 0x4000d0, 70 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0xa0
0x4000df:	mov	qword ptr [rbp - 0x98], rdi
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	rax, qword ptr [rbp - 0x98]
0x4000fc:	mov	qword ptr [rbp - 0x80], rax
0x400100:	lea	rax, [rbp - 0x70]
0x400104:	mov	edx, 0x63
0x400109:	mov	esi, 0x43
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 16 bytes>
0x400116:	mov	byte ptr [rbp - 0xd], 0
0x40011a:	lea	rax, [rbp - 0x70]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500008
<Block for 0x400126, 17 bytes>
0x400126:	mov	qword ptr [rbp - 0x78], rax
0x40012a:	mov	qword ptr [rbp - 0x88], 0
0x400135:	jmp	0x400160
<Block for 0x400160, 13 bytes>
0x400160:	mov	rax, qword ptr [rbp - 0x88]
0x400167:	cmp	rax, qword ptr [rbp - 0x78]
0x40016b:	jb	0x400137
<Block for 0x400137, 54 bytes>
0x400137:	mov	rdx, qword ptr [rbp - 0x80]
0x40013b:	mov	rax, qword ptr [rbp - 0x88]
0x400142:	add	rax, rdx
0x400145:	movzx	eax, byte ptr [rax]
0x400148:	lea	rcx, [rbp - 0x70]
0x40014c:	mov	rdx, qword ptr [rbp - 0x88]
0x400153:	add	rdx, rcx
0x400156:	mov	byte ptr [rdx], al
0x400158:	add	qword ptr [rbp - 0x88], 1
0x400160:	mov	rax, qword ptr [rbp - 0x88]
0x400167:	cmp	rax, qword ptr [rbp - 0x78]
0x40016b:	jb	0x400137
<Block for 0x40016d, 16 bytes>
0x40016d:	mov	byte ptr [rbp - 0xd], 0
0x400171:	lea	rax, [rbp - 0x70]
0x400175:	mov	rdi, rax
0x400178:	call	0x500010
<Block for 0x40017d, 12 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x80]
0x400181:	mov	rdi, rax
0x400184:	call	0x500018
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500020
