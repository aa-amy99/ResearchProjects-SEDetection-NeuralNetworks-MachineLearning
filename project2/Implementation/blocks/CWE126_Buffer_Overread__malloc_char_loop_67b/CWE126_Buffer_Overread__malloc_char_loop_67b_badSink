<Block for 0x400000, 70 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	qword ptr [rbp - 0x98], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x98]
0x40002c:	mov	qword ptr [rbp - 0x80], rax
0x400030:	lea	rax, [rbp - 0x70]
0x400034:	mov	edx, 0x63
0x400039:	mov	esi, 0x43
0x40003e:	mov	rdi, rax
0x400041:	call	0x500000
<Block for 0x400046, 16 bytes>
0x400046:	mov	byte ptr [rbp - 0xd], 0
0x40004a:	lea	rax, [rbp - 0x70]
0x40004e:	mov	rdi, rax
0x400051:	call	0x500008
<Block for 0x400056, 17 bytes>
0x400056:	mov	qword ptr [rbp - 0x78], rax
0x40005a:	mov	qword ptr [rbp - 0x88], 0
0x400065:	jmp	0x400090
<Block for 0x400090, 13 bytes>
0x400090:	mov	rax, qword ptr [rbp - 0x88]
0x400097:	cmp	rax, qword ptr [rbp - 0x78]
0x40009b:	jb	0x400067
<Block for 0x400067, 54 bytes>
0x400067:	mov	rdx, qword ptr [rbp - 0x80]
0x40006b:	mov	rax, qword ptr [rbp - 0x88]
0x400072:	add	rax, rdx
0x400075:	movzx	eax, byte ptr [rax]
0x400078:	lea	rcx, [rbp - 0x70]
0x40007c:	mov	rdx, qword ptr [rbp - 0x88]
0x400083:	add	rdx, rcx
0x400086:	mov	byte ptr [rdx], al
0x400088:	add	qword ptr [rbp - 0x88], 1
0x400090:	mov	rax, qword ptr [rbp - 0x88]
0x400097:	cmp	rax, qword ptr [rbp - 0x78]
0x40009b:	jb	0x400067
<Block for 0x40009d, 16 bytes>
0x40009d:	mov	byte ptr [rbp - 0xd], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500010
<Block for 0x4000ad, 12 bytes>
0x4000ad:	mov	rax, qword ptr [rbp - 0x80]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000b9, 16 bytes>
0x4000b9:	nop	
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	xor	rax, qword ptr fs:[0x28]
0x4000c7:	je	0x4000ce
<Block for 0x4000ce, 2 bytes>
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500020
