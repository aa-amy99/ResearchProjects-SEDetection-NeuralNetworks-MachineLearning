<Block for 0x4000e0, 57 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x90
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	qword ptr [rbp - 0x80], 0
0x400106:	mov	dword ptr [rbp - 0x84], 0
0x400110:	cmp	dword ptr [rbp - 0x84], 0
0x400117:	jg	0x400159
<Block for 0x400119, 10 bytes>
0x400119:	mov	edi, 0x64
0x40011e:	call	0x500000
<Block for 0x400159, 22 bytes>
0x400159:	lea	rax, [rbp - 0x70]
0x40015d:	mov	edx, 0x63
0x400162:	mov	esi, 0x43
0x400167:	mov	rdi, rax
0x40016a:	call	0x500008
<Block for 0x400123, 26 bytes>
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	mov	rax, qword ptr [rbp - 0x78]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x41
0x400135:	mov	rdi, rax
0x400138:	call	0x500008
<Block for 0x40016f, 16 bytes>
0x40016f:	mov	byte ptr [rbp - 0xd], 0
0x400173:	lea	rax, [rbp - 0x70]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500010
<Block for 0x40013d, 28 bytes>
0x40013d:	mov	rax, qword ptr [rbp - 0x78]
0x400141:	add	rax, 0x63
0x400145:	mov	byte ptr [rax], 0
0x400148:	mov	rax, qword ptr [rbp - 0x78]
0x40014c:	mov	qword ptr [rbp - 0x80], rax
0x400150:	add	dword ptr [rbp - 0x84], 1
0x400157:	jmp	0x400110
<Block for 0x40017f, 22 bytes>
0x40017f:	mov	rdx, rax
0x400182:	mov	rcx, qword ptr [rbp - 0x80]
0x400186:	lea	rax, [rbp - 0x70]
0x40018a:	mov	rsi, rcx
0x40018d:	mov	rdi, rax
0x400190:	call	0x500018
<Block for 0x400110, 9 bytes>
0x400110:	cmp	dword ptr [rbp - 0x84], 0
0x400117:	jg	0x400159
<Block for 0x400195, 16 bytes>
0x400195:	mov	byte ptr [rbp - 0xd], 0
0x400199:	lea	rax, [rbp - 0x70]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500020
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x4001ba, 2 bytes>
0x4001ba:	leave	
0x4001bb:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500028
