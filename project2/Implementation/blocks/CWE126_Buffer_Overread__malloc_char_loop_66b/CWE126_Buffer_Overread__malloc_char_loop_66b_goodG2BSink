<Block for 0x4000d4, 74 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0xa0
0x4000e3:	mov	qword ptr [rbp - 0x98], rdi
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	mov	rax, qword ptr [rbp - 0x98]
0x400100:	mov	rax, qword ptr [rax + 0x10]
0x400104:	mov	qword ptr [rbp - 0x80], rax
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x43
0x400116:	mov	rdi, rax
0x400119:	call	0x500000
<Block for 0x40011e, 16 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0
0x400122:	lea	rax, [rbp - 0x70]
0x400126:	mov	rdi, rax
0x400129:	call	0x500008
<Block for 0x40012e, 17 bytes>
0x40012e:	mov	qword ptr [rbp - 0x78], rax
0x400132:	mov	qword ptr [rbp - 0x88], 0
0x40013d:	jmp	0x400168
<Block for 0x400168, 13 bytes>
0x400168:	mov	rax, qword ptr [rbp - 0x88]
0x40016f:	cmp	rax, qword ptr [rbp - 0x78]
0x400173:	jb	0x40013f
<Block for 0x40013f, 54 bytes>
0x40013f:	mov	rdx, qword ptr [rbp - 0x80]
0x400143:	mov	rax, qword ptr [rbp - 0x88]
0x40014a:	add	rax, rdx
0x40014d:	movzx	eax, byte ptr [rax]
0x400150:	lea	rcx, [rbp - 0x70]
0x400154:	mov	rdx, qword ptr [rbp - 0x88]
0x40015b:	add	rdx, rcx
0x40015e:	mov	byte ptr [rdx], al
0x400160:	add	qword ptr [rbp - 0x88], 1
0x400168:	mov	rax, qword ptr [rbp - 0x88]
0x40016f:	cmp	rax, qword ptr [rbp - 0x78]
0x400173:	jb	0x40013f
<Block for 0x400175, 16 bytes>
0x400175:	mov	byte ptr [rbp - 0xd], 0
0x400179:	lea	rax, [rbp - 0x70]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500010
<Block for 0x400185, 12 bytes>
0x400185:	mov	rax, qword ptr [rbp - 0x80]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500018
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500020
