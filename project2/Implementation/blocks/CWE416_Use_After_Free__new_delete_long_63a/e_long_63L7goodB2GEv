<Block for 0x4000d4, 45 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0x10
0x4000e0:	mov	rax, qword ptr fs:[0x28]
0x4000e9:	mov	qword ptr [rbp - 8], rax
0x4000ed:	xor	eax, eax
0x4000ef:	mov	qword ptr [rbp - 0x10], 0
0x4000f7:	mov	edi, 8
0x4000fc:	call	0x500000
<Block for 0x400101, 24 bytes>
0x400101:	mov	qword ptr [rbp - 0x10], rax
0x400105:	mov	rax, qword ptr [rbp - 0x10]
0x400109:	mov	qword ptr [rax], 5
0x400110:	mov	rax, qword ptr [rbp - 0x10]
0x400114:	test	rax, rax
0x400117:	je	0x400126
<Block for 0x400126, 12 bytes>
0x400126:	lea	rax, [rbp - 0x10]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500028
<Block for 0x400119, 13 bytes>
0x400119:	mov	esi, 8
0x40011e:	mov	rdi, rax
0x400121:	call	0x500008
<Block for 0x400132, 16 bytes>
0x400132:	nop	
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	xor	rax, qword ptr fs:[0x28]
0x400140:	je	0x400147
<Block for 0x400147, 2 bytes>
0x400147:	leave	
0x400148:	ret	
<Block for 0x400142, 5 bytes>
0x400142:	call	0x500018
