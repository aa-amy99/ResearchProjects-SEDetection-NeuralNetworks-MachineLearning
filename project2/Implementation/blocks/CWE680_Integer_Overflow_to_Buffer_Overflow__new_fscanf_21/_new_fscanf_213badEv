<Block for 0x40003d, 39 bytes>
0x40003d:	endbr64	
0x400041:	push	rbp
0x400042:	mov	rbp, rsp
0x400045:	sub	rsp, 0x20
0x400049:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400050:	mov	dword ptr [rip + 0x226], 1
0x40005a:	mov	eax, dword ptr [rbp - 0x1c]
0x40005d:	mov	edi, eax
0x40005f:	call	0x400000
<Block for 0x400064, 28 bytes>
0x400064:	mov	dword ptr [rbp - 0x1c], eax
0x400067:	mov	eax, dword ptr [rbp - 0x1c]
0x40006a:	cdqe	
0x40006c:	shl	rax, 2
0x400070:	mov	qword ptr [rbp - 0x10], rax
0x400074:	mov	rax, qword ptr [rbp - 0x10]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500010
<Block for 0x400080, 23 bytes>
0x400080:	mov	qword ptr [rbp - 8], rax
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	eax, dword ptr [rbp - 0x1c]
0x40008f:	cdqe	
0x400091:	cmp	qword ptr [rbp - 0x18], rax
0x400095:	jae	0x4000b7
<Block for 0x400097, 32 bytes>
0x400097:	mov	rax, qword ptr [rbp - 0x18]
0x40009b:	lea	rdx, [rax*4]
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	add	rax, rdx
0x4000aa:	mov	dword ptr [rax], 0
0x4000b0:	add	qword ptr [rbp - 0x18], 1
0x4000b5:	jmp	0x40008c
<Block for 0x4000b7, 13 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	mov	eax, dword ptr [rax]
0x4000bd:	mov	edi, eax
0x4000bf:	call	0x500018
<Block for 0x40008c, 11 bytes>
0x40008c:	mov	eax, dword ptr [rbp - 0x1c]
0x40008f:	cdqe	
0x400091:	cmp	qword ptr [rbp - 0x18], rax
0x400095:	jae	0x4000b7
<Block for 0x4000c4, 7 bytes>
0x4000c4:	cmp	qword ptr [rbp - 8], 0
0x4000c9:	je	0x4000d7
<Block for 0x4000d7, 3 bytes>
0x4000d7:	nop	
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000cb, 12 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500020
