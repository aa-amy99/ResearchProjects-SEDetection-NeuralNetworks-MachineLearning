<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400023:	mov	rax, qword ptr [rip + 0xfffd6]
0x40002a:	lea	rdx, [rbp - 0x24]
0x40002e:	lea	rsi, [rip + 0x1e0]
0x400035:	mov	rdi, rax
0x400038:	mov	eax, 0
0x40003d:	call	0x500008
<Block for 0x400042, 10 bytes>
0x400042:	mov	edi, 8
0x400047:	call	0x500010
<Block for 0x40004c, 11 bytes>
0x40004c:	mov	rbx, rax
0x40004f:	mov	rdi, rbx
0x400052:	call	0x4001e8
<Block for 0x400057, 28 bytes>
0x400057:	mov	qword ptr [rbp - 0x20], rbx
0x40005b:	mov	rax, qword ptr [rbp - 0x20]
0x40005f:	mov	rax, qword ptr [rax]
0x400062:	mov	rcx, qword ptr [rax]
0x400065:	mov	edx, dword ptr [rbp - 0x24]
0x400068:	mov	rax, qword ptr [rbp - 0x20]
0x40006c:	mov	esi, edx
0x40006e:	mov	rdi, rax
0x400071:	call	rcx
<Block for 0x400073, 9 bytes>
0x400073:	mov	rax, qword ptr [rbp - 0x20]
0x400077:	test	rax, rax
0x40007a:	je	0x400089
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 0x18]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x40007c, 13 bytes>
0x40007c:	mov	esi, 8
0x400081:	mov	rdi, rax
0x400084:	call	0x500018
<Block for 0x40009e, 7 bytes>
0x40009e:	add	rsp, 0x28
0x4000a2:	pop	rbx
0x4000a3:	pop	rbp
0x4000a4:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500020
