<Block for 0x4004ed, 46 bytes>
0x4004ed:	endbr64	
0x4004f1:	push	rbp
0x4004f2:	mov	rbp, rsp
0x4004f5:	push	rbx
0x4004f6:	sub	rsp, 0xd8
0x4004fd:	mov	rax, qword ptr fs:[0x28]
0x400506:	mov	qword ptr [rbp - 0x18], rax
0x40050a:	xor	eax, eax
0x40050c:	lea	rax, [rbp - 0xc0]
0x400513:	mov	rdi, rax
0x400516:	call	0x400816
<Block for 0x40051b, 129 bytes>
0x40051b:	mov	qword ptr [rbp - 0x80], 0
0x400523:	mov	qword ptr [rbp - 0x78], 0
0x40052b:	mov	qword ptr [rbp - 0x70], 0
0x400533:	mov	qword ptr [rbp - 0x68], 0
0x40053b:	mov	qword ptr [rbp - 0x60], 0
0x400543:	mov	qword ptr [rbp - 0x58], 0
0x40054b:	mov	qword ptr [rbp - 0x50], 0
0x400553:	mov	qword ptr [rbp - 0x48], 0
0x40055b:	mov	qword ptr [rbp - 0x40], 0
0x400563:	mov	qword ptr [rbp - 0x38], 0
0x40056b:	mov	qword ptr [rbp - 0x30], 0
0x400573:	mov	qword ptr [rbp - 0x28], 0
0x40057b:	mov	dword ptr [rbp - 0x20], 0
0x400582:	lea	rax, [rbp - 0x80]
0x400586:	mov	qword ptr [rbp - 0xe0], rax
0x40058d:	mov	rax, qword ptr [rbp - 0xe0]
0x400594:	mov	rdi, rax
0x400597:	call	0x500000
<Block for 0x40059c, 19 bytes>
0x40059c:	mov	qword ptr [rbp - 0xd0], rax
0x4005a3:	lea	rdi, [rip + 0x210]
0x4005aa:	call	0x500008
<Block for 0x4005af, 17 bytes>
0x4005af:	mov	qword ptr [rbp - 0xc8], rax
0x4005b6:	cmp	qword ptr [rbp - 0xc8], 0
0x4005be:	je	0x4005f2
<Block for 0x4005f2, 15 bytes>
0x4005f2:	lea	rax, [rbp - 0xc0]
0x4005f9:	mov	rdi, rax
0x4005fc:	call	0x4009c2
<Block for 0x4005c0, 50 bytes>
0x4005c0:	mov	eax, 0x63
0x4005c5:	sub	rax, qword ptr [rbp - 0xd0]
0x4005cc:	mov	rdx, rax
0x4005cf:	mov	rcx, qword ptr [rbp - 0xe0]
0x4005d6:	mov	rax, qword ptr [rbp - 0xd0]
0x4005dd:	add	rcx, rax
0x4005e0:	mov	rax, qword ptr [rbp - 0xc8]
0x4005e7:	mov	rsi, rax
0x4005ea:	mov	rdi, rcx
0x4005ed:	call	0x500010
<Block for 0x400601, 32 bytes>
0x400601:	mov	qword ptr [rbp - 0xd8], rax
0x400608:	lea	rdx, [rbp - 0xd8]
0x40060f:	lea	rax, [rbp - 0xa0]
0x400616:	mov	rsi, rdx
0x400619:	mov	rdi, rax
0x40061c:	call	0x400a12
<Block for 0x400621, 37 bytes>
0x400621:	lea	rdx, [rbp - 0xe0]
0x400628:	mov	rsi, qword ptr [rbp - 0xa0]
0x40062f:	lea	rax, [rbp - 0xc0]
0x400636:	mov	rcx, rdx
0x400639:	mov	edx, 1
0x40063e:	mov	rdi, rax
0x400641:	call	0x400a40
<Block for 0x400646, 15 bytes>
0x400646:	lea	rax, [rbp - 0xc0]
0x40064d:	mov	rdi, rax
0x400650:	call	0x4009c2
<Block for 0x400655, 32 bytes>
0x400655:	mov	qword ptr [rbp - 0xd8], rax
0x40065c:	lea	rdx, [rbp - 0xd8]
0x400663:	lea	rax, [rbp - 0xa0]
0x40066a:	mov	rsi, rdx
0x40066d:	mov	rdi, rax
0x400670:	call	0x400a12
<Block for 0x400675, 37 bytes>
0x400675:	lea	rdx, [rbp - 0xe0]
0x40067c:	mov	rsi, qword ptr [rbp - 0xa0]
0x400683:	lea	rax, [rbp - 0xc0]
0x40068a:	mov	rcx, rdx
0x40068d:	mov	edx, 1
0x400692:	mov	rdi, rax
0x400695:	call	0x400a40
<Block for 0x40069a, 15 bytes>
0x40069a:	lea	rax, [rbp - 0xc0]
0x4006a1:	mov	rdi, rax
0x4006a4:	call	0x4009c2
<Block for 0x4006a9, 32 bytes>
0x4006a9:	mov	qword ptr [rbp - 0xd8], rax
0x4006b0:	lea	rdx, [rbp - 0xd8]
0x4006b7:	lea	rax, [rbp - 0xa0]
0x4006be:	mov	rsi, rdx
0x4006c1:	mov	rdi, rax
0x4006c4:	call	0x400a12
<Block for 0x4006c9, 37 bytes>
0x4006c9:	lea	rdx, [rbp - 0xe0]
0x4006d0:	mov	rsi, qword ptr [rbp - 0xa0]
0x4006d7:	lea	rax, [rbp - 0xc0]
0x4006de:	mov	rcx, rdx
0x4006e1:	mov	edx, 1
0x4006e6:	mov	rdi, rax
0x4006e9:	call	0x400a40
<Block for 0x4006ee, 25 bytes>
0x4006ee:	lea	rdx, [rbp - 0xc0]
0x4006f5:	lea	rax, [rbp - 0xa0]
0x4006fc:	mov	rsi, rdx
0x4006ff:	mov	rdi, rax
0x400702:	call	0x400b06
<Block for 0x400707, 15 bytes>
0x400707:	lea	rax, [rbp - 0xa0]
0x40070e:	mov	rdi, rax
0x400711:	call	0x500038
<Block for 0x400716, 15 bytes>
0x400716:	lea	rax, [rbp - 0xa0]
0x40071d:	mov	rdi, rax
0x400720:	call	0x40097a
<Block for 0x400725, 15 bytes>
0x400725:	lea	rax, [rbp - 0xc0]
0x40072c:	mov	rdi, rax
0x40072f:	call	0x40097a
<Block for 0x400734, 16 bytes>
0x400734:	nop	
0x400735:	mov	rax, qword ptr [rbp - 0x18]
0x400739:	xor	rax, qword ptr fs:[0x28]
0x400742:	je	0x400784
<Block for 0x400784, 10 bytes>
0x400784:	add	rsp, 0xd8
0x40078b:	pop	rbx
0x40078c:	pop	rbp
0x40078d:	ret	
<Block for 0x400744, 2 bytes>
0x400744:	jmp	0x40077f
<Block for 0x40077f, 5 bytes>
0x40077f:	call	0x500028
