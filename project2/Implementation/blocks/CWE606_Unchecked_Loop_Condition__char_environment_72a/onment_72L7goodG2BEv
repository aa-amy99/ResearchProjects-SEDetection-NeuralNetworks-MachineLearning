<Block for 0x4002a1, 46 bytes>
0x4002a1:	endbr64	
0x4002a5:	push	rbp
0x4002a6:	mov	rbp, rsp
0x4002a9:	push	rbx
0x4002aa:	sub	rsp, 0xc8
0x4002b1:	mov	rax, qword ptr fs:[0x28]
0x4002ba:	mov	qword ptr [rbp - 0x18], rax
0x4002be:	xor	eax, eax
0x4002c0:	lea	rax, [rbp - 0xc0]
0x4002c7:	mov	rdi, rax
0x4002ca:	call	0x400816
<Block for 0x4002cf, 145 bytes>
0x4002cf:	mov	qword ptr [rbp - 0x80], 0
0x4002d7:	mov	qword ptr [rbp - 0x78], 0
0x4002df:	mov	qword ptr [rbp - 0x70], 0
0x4002e7:	mov	qword ptr [rbp - 0x68], 0
0x4002ef:	mov	qword ptr [rbp - 0x60], 0
0x4002f7:	mov	qword ptr [rbp - 0x58], 0
0x4002ff:	mov	qword ptr [rbp - 0x50], 0
0x400307:	mov	qword ptr [rbp - 0x48], 0
0x40030f:	mov	qword ptr [rbp - 0x40], 0
0x400317:	mov	qword ptr [rbp - 0x38], 0
0x40031f:	mov	qword ptr [rbp - 0x30], 0
0x400327:	mov	qword ptr [rbp - 0x28], 0
0x40032f:	mov	dword ptr [rbp - 0x20], 0
0x400336:	lea	rax, [rbp - 0x80]
0x40033a:	mov	qword ptr [rbp - 0xd0], rax
0x400341:	mov	rax, qword ptr [rbp - 0xd0]
0x400348:	mov	word ptr [rax], 0x3531
0x40034d:	mov	byte ptr [rax + 2], 0
0x400351:	lea	rax, [rbp - 0xc0]
0x400358:	mov	rdi, rax
0x40035b:	call	0x4009c2
<Block for 0x400360, 32 bytes>
0x400360:	mov	qword ptr [rbp - 0xc8], rax
0x400367:	lea	rdx, [rbp - 0xc8]
0x40036e:	lea	rax, [rbp - 0xa0]
0x400375:	mov	rsi, rdx
0x400378:	mov	rdi, rax
0x40037b:	call	0x400a12
<Block for 0x400380, 37 bytes>
0x400380:	lea	rdx, [rbp - 0xd0]
0x400387:	mov	rsi, qword ptr [rbp - 0xa0]
0x40038e:	lea	rax, [rbp - 0xc0]
0x400395:	mov	rcx, rdx
0x400398:	mov	edx, 1
0x40039d:	mov	rdi, rax
0x4003a0:	call	0x400a40
<Block for 0x4003a5, 15 bytes>
0x4003a5:	lea	rax, [rbp - 0xc0]
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x4009c2
<Block for 0x4003b4, 32 bytes>
0x4003b4:	mov	qword ptr [rbp - 0xc8], rax
0x4003bb:	lea	rdx, [rbp - 0xc8]
0x4003c2:	lea	rax, [rbp - 0xa0]
0x4003c9:	mov	rsi, rdx
0x4003cc:	mov	rdi, rax
0x4003cf:	call	0x400a12
<Block for 0x4003d4, 37 bytes>
0x4003d4:	lea	rdx, [rbp - 0xd0]
0x4003db:	mov	rsi, qword ptr [rbp - 0xa0]
0x4003e2:	lea	rax, [rbp - 0xc0]
0x4003e9:	mov	rcx, rdx
0x4003ec:	mov	edx, 1
0x4003f1:	mov	rdi, rax
0x4003f4:	call	0x400a40
<Block for 0x4003f9, 15 bytes>
0x4003f9:	lea	rax, [rbp - 0xc0]
0x400400:	mov	rdi, rax
0x400403:	call	0x4009c2
<Block for 0x400408, 32 bytes>
0x400408:	mov	qword ptr [rbp - 0xc8], rax
0x40040f:	lea	rdx, [rbp - 0xc8]
0x400416:	lea	rax, [rbp - 0xa0]
0x40041d:	mov	rsi, rdx
0x400420:	mov	rdi, rax
0x400423:	call	0x400a12
<Block for 0x400428, 37 bytes>
0x400428:	lea	rdx, [rbp - 0xd0]
0x40042f:	mov	rsi, qword ptr [rbp - 0xa0]
0x400436:	lea	rax, [rbp - 0xc0]
0x40043d:	mov	rcx, rdx
0x400440:	mov	edx, 1
0x400445:	mov	rdi, rax
0x400448:	call	0x400a40
<Block for 0x40044d, 25 bytes>
0x40044d:	lea	rdx, [rbp - 0xc0]
0x400454:	lea	rax, [rbp - 0xa0]
0x40045b:	mov	rsi, rdx
0x40045e:	mov	rdi, rax
0x400461:	call	0x400b06
<Block for 0x400466, 15 bytes>
0x400466:	lea	rax, [rbp - 0xa0]
0x40046d:	mov	rdi, rax
0x400470:	call	0x500030
<Block for 0x400475, 15 bytes>
0x400475:	lea	rax, [rbp - 0xa0]
0x40047c:	mov	rdi, rax
0x40047f:	call	0x40097a
<Block for 0x400484, 15 bytes>
0x400484:	lea	rax, [rbp - 0xc0]
0x40048b:	mov	rdi, rax
0x40048e:	call	0x40097a
<Block for 0x400493, 16 bytes>
0x400493:	nop	
0x400494:	mov	rax, qword ptr [rbp - 0x18]
0x400498:	xor	rax, qword ptr fs:[0x28]
0x4004a1:	je	0x4004e3
<Block for 0x4004e3, 10 bytes>
0x4004e3:	add	rsp, 0xc8
0x4004ea:	pop	rbx
0x4004eb:	pop	rbp
0x4004ec:	ret	
<Block for 0x4004a3, 2 bytes>
0x4004a3:	jmp	0x4004de
<Block for 0x4004de, 5 bytes>
0x4004de:	call	0x500028
