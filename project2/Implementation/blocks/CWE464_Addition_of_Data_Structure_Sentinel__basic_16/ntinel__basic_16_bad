<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	rax, qword ptr [rip + 0xfffda]
0x400026:	mov	rdi, rax
0x400029:	call	0x500008
<Block for 0x40002e, 19 bytes>
0x40002e:	mov	byte ptr [rbp - 0xc], al
0x400031:	mov	byte ptr [rbp - 0xb], 0
0x400035:	lea	rax, [rbp - 0xc]
0x400039:	mov	rdi, rax
0x40003c:	call	0x500010
<Block for 0x400041, 35 bytes>
0x400041:	mov	byte ptr [rbp - 0xd], al
0x400044:	nop	
0x400045:	mov	byte ptr [rbp - 0xc], 0x78
0x400049:	movzx	eax, byte ptr [rbp - 0xd]
0x40004d:	mov	byte ptr [rbp - 0xb], al
0x400050:	mov	byte ptr [rbp - 0xa], 0x7a
0x400054:	mov	byte ptr [rbp - 9], 0
0x400058:	lea	rax, [rbp - 0xc]
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500018
<Block for 0x400064, 16 bytes>
0x400064:	nop	
0x400065:	mov	rax, qword ptr [rbp - 8]
0x400069:	xor	rax, qword ptr fs:[0x28]
0x400072:	je	0x400079
<Block for 0x400079, 2 bytes>
0x400079:	leave	
0x40007a:	ret	
<Block for 0x400074, 5 bytes>
0x400074:	call	0x500020
