<Block for 0x40006d, 52 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x10
0x400079:	mov	rax, qword ptr fs:[0x28]
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	xor	eax, eax
0x400088:	mov	byte ptr [rbp - 0xd], 0x20
0x40008c:	mov	dword ptr [rip + 0xd6], 0
0x400096:	movsx	eax, byte ptr [rbp - 0xd]
0x40009a:	mov	edi, eax
0x40009c:	call	0x500018
<Block for 0x4000a1, 34 bytes>
0x4000a1:	mov	byte ptr [rbp - 0xd], al
0x4000a4:	mov	byte ptr [rbp - 0xc], 0x78
0x4000a8:	movzx	eax, byte ptr [rbp - 0xd]
0x4000ac:	mov	byte ptr [rbp - 0xb], al
0x4000af:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000b3:	mov	byte ptr [rbp - 9], 0
0x4000b7:	lea	rax, [rbp - 0xc]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500008
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500010
