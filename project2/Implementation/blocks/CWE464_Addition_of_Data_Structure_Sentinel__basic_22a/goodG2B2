<Block for 0x4000da, 52 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0x10
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	byte ptr [rbp - 0xd], 0x20
0x4000f9:	mov	dword ptr [rip + 0x6d], 1
0x400103:	movsx	eax, byte ptr [rbp - 0xd]
0x400107:	mov	edi, eax
0x400109:	call	0x500020
<Block for 0x40010e, 34 bytes>
0x40010e:	mov	byte ptr [rbp - 0xd], al
0x400111:	mov	byte ptr [rbp - 0xc], 0x78
0x400115:	movzx	eax, byte ptr [rbp - 0xd]
0x400119:	mov	byte ptr [rbp - 0xb], al
0x40011c:	mov	byte ptr [rbp - 0xa], 0x7a
0x400120:	mov	byte ptr [rbp - 9], 0
0x400124:	lea	rax, [rbp - 0xc]
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x400130, 16 bytes>
0x400130:	nop	
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	xor	rax, qword ptr fs:[0x28]
0x40013e:	je	0x400145
<Block for 0x400145, 2 bytes>
0x400145:	leave	
0x400146:	ret	
<Block for 0x400140, 5 bytes>
0x400140:	call	0x500010
