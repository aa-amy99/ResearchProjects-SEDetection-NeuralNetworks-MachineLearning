<Block for 0x4001aa, 112 bytes>
0x4001aa:	endbr64	
0x4001ae:	push	rbp
0x4001af:	mov	rbp, rsp
0x4001b2:	sub	rsp, 0xb0
0x4001b9:	mov	rax, qword ptr fs:[0x28]
0x4001c2:	mov	qword ptr [rbp - 8], rax
0x4001c6:	xor	eax, eax
0x4001c8:	lea	rax, [rbp - 0xa8]
0x4001cf:	mov	qword ptr [rbp - 0x98], rax
0x4001d6:	lea	rax, [rbp - 0xa8]
0x4001dd:	mov	qword ptr [rbp - 0x90], rax
0x4001e4:	mov	eax, 0x10
0x4001e9:	sub	rax, 1
0x4001ed:	add	rax, 0x6c
0x4001f1:	mov	esi, 0x10
0x4001f6:	mov	edx, 0
0x4001fb:	div	rsi
0x4001fe:	imul	rax, rax, 0x10
0x400202:	mov	rdx, rax
0x400205:	and	rdx, 0xfffffffffffff000
0x40020c:	mov	rcx, rsp
0x40020f:	sub	rcx, rdx
0x400212:	mov	rdx, rcx
0x400215:	cmp	rsp, rdx
0x400218:	je	0x40022c
<Block for 0x40022c, 26 bytes>
0x40022c:	mov	rdx, rax
0x40022f:	and	edx, 0xfff
0x400235:	sub	rsp, rdx
0x400238:	mov	rdx, rax
0x40023b:	and	edx, 0xfff
0x400241:	test	rdx, rdx
0x400244:	je	0x400256
<Block for 0x40021a, 18 bytes>
0x40021a:	sub	rsp, 0x1000
0x400221:	or	qword ptr [rsp + 0xff8], 0
0x40022a:	jmp	0x400215
<Block for 0x400256, 47 bytes>
0x400256:	mov	rax, rsp
0x400259:	add	rax, 0xf
0x40025d:	shr	rax, 4
0x400261:	shl	rax, 4
0x400265:	mov	qword ptr [rbp - 0x88], rax
0x40026c:	mov	rax, qword ptr [rbp - 0x88]
0x400273:	mov	edx, 0x63
0x400278:	mov	esi, 0x41
0x40027d:	mov	rdi, rax
0x400280:	call	0x500000
<Block for 0x400246, 63 bytes>
0x400246:	and	eax, 0xfff
0x40024b:	sub	rax, 8
0x40024f:	add	rax, rsp
0x400252:	or	qword ptr [rax], 0
0x400256:	mov	rax, rsp
0x400259:	add	rax, 0xf
0x40025d:	shr	rax, 4
0x400261:	shl	rax, 4
0x400265:	mov	qword ptr [rbp - 0x88], rax
0x40026c:	mov	rax, qword ptr [rbp - 0x88]
0x400273:	mov	edx, 0x63
0x400278:	mov	esi, 0x41
0x40027d:	mov	rdi, rax
0x400280:	call	0x500000
<Block for 0x400215, 5 bytes>
0x400215:	cmp	rsp, rdx
0x400218:	je	0x40022c
<Block for 0x400285, 89 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x88]
0x40028c:	add	rax, 0x63
0x400290:	mov	byte ptr [rax], 0
0x400293:	mov	rax, qword ptr [rbp - 0x98]
0x40029a:	mov	rax, qword ptr [rax]
0x40029d:	mov	qword ptr [rbp - 0x80], rax
0x4002a1:	mov	rax, qword ptr [rbp - 0x88]
0x4002a8:	mov	qword ptr [rbp - 0x80], rax
0x4002ac:	mov	rax, qword ptr [rbp - 0x98]
0x4002b3:	mov	rdx, qword ptr [rbp - 0x80]
0x4002b7:	mov	qword ptr [rax], rdx
0x4002ba:	mov	rax, qword ptr [rbp - 0x90]
0x4002c1:	mov	rax, qword ptr [rax]
0x4002c4:	mov	qword ptr [rbp - 0x78], rax
0x4002c8:	lea	rax, [rbp - 0x70]
0x4002cc:	mov	edx, 0x63
0x4002d1:	mov	esi, 0x43
0x4002d6:	mov	rdi, rax
0x4002d9:	call	0x500000
<Block for 0x4002de, 17 bytes>
0x4002de:	mov	byte ptr [rbp - 0xd], 0
0x4002e2:	mov	qword ptr [rbp - 0xa0], 0
0x4002ed:	jmp	0x400318
<Block for 0x400318, 10 bytes>
0x400318:	cmp	qword ptr [rbp - 0xa0], 0x63
0x400320:	jbe	0x4002ef
<Block for 0x4002ef, 51 bytes>
0x4002ef:	mov	rdx, qword ptr [rbp - 0x78]
0x4002f3:	mov	rax, qword ptr [rbp - 0xa0]
0x4002fa:	add	rdx, rax
0x4002fd:	lea	rcx, [rbp - 0x70]
0x400301:	mov	rax, qword ptr [rbp - 0xa0]
0x400308:	add	rax, rcx
0x40030b:	movzx	eax, byte ptr [rax]
0x40030e:	mov	byte ptr [rdx], al
0x400310:	add	qword ptr [rbp - 0xa0], 1
0x400318:	cmp	qword ptr [rbp - 0xa0], 0x63
0x400320:	jbe	0x4002ef
<Block for 0x400322, 23 bytes>
0x400322:	mov	rax, qword ptr [rbp - 0x78]
0x400326:	add	rax, 0x63
0x40032a:	mov	byte ptr [rax], 0
0x40032d:	mov	rax, qword ptr [rbp - 0x78]
0x400331:	mov	rdi, rax
0x400334:	call	0x500008
<Block for 0x400339, 16 bytes>
0x400339:	nop	
0x40033a:	mov	rax, qword ptr [rbp - 8]
0x40033e:	xor	rax, qword ptr fs:[0x28]
0x400347:	je	0x40034e
<Block for 0x40034e, 2 bytes>
0x40034e:	leave	
0x40034f:	ret	
<Block for 0x400349, 5 bytes>
0x400349:	call	0x500010
