<Block for 0x4000c0, 55 bytes>
0x4000c0:	endbr64	
0x4000c4:	push	rbp
0x4000c5:	mov	rbp, rsp
0x4000c8:	sub	rsp, 0xf0
0x4000cf:	mov	rax, qword ptr fs:[0x28]
0x4000d8:	mov	qword ptr [rbp - 8], rax
0x4000dc:	xor	eax, eax
0x4000de:	lea	rax, [rbp - 0xe0]
0x4000e5:	mov	edx, 0x63
0x4000ea:	mov	esi, 0x41
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500000
<Block for 0x4000f7, 14 bytes>
0x4000f7:	mov	byte ptr [rbp - 0x7d], 0
0x4000fb:	mov	eax, dword ptr [rip + 0x16b]
0x400101:	test	eax, eax
0x400103:	je	0x400113
<Block for 0x400113, 36 bytes>
0x400113:	lea	rax, [rbp - 0xe0]
0x40011a:	mov	qword ptr [rbp - 0xe8], rax
0x400121:	lea	rax, [rbp - 0x70]
0x400125:	mov	edx, 0x63
0x40012a:	mov	esi, 0x43
0x40012f:	mov	rdi, rax
0x400132:	call	0x500000
<Block for 0x400105, 12 bytes>
0x400105:	lea	rdi, [rip + 0x164]
0x40010c:	call	0x500010
<Block for 0x400137, 31 bytes>
0x400137:	mov	byte ptr [rbp - 0xd], 0
0x40013b:	lea	rcx, [rbp - 0x70]
0x40013f:	mov	rax, qword ptr [rbp - 0xe8]
0x400146:	mov	edx, 0x64
0x40014b:	mov	rsi, rcx
0x40014e:	mov	rdi, rax
0x400151:	call	0x500008
<Block for 0x400111, 2 bytes>
0x400111:	jmp	0x400121
<Block for 0x400156, 29 bytes>
0x400156:	mov	rax, qword ptr [rbp - 0xe8]
0x40015d:	add	rax, 0x63
0x400161:	mov	byte ptr [rax], 0
0x400164:	mov	rax, qword ptr [rbp - 0xe8]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500010
<Block for 0x400121, 22 bytes>
0x400121:	lea	rax, [rbp - 0x70]
0x400125:	mov	edx, 0x63
0x40012a:	mov	esi, 0x43
0x40012f:	mov	rdi, rax
0x400132:	call	0x500000
<Block for 0x400173, 16 bytes>
0x400173:	nop	
0x400174:	mov	rax, qword ptr [rbp - 8]
0x400178:	xor	rax, qword ptr fs:[0x28]
0x400181:	je	0x400188
<Block for 0x400188, 2 bytes>
0x400188:	leave	
0x400189:	ret	
<Block for 0x400183, 5 bytes>
0x400183:	call	0x500018
