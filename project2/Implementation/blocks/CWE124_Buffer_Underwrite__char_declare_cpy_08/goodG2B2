<Block for 0x40018a, 55 bytes>
0x40018a:	endbr64	
0x40018e:	push	rbp
0x40018f:	mov	rbp, rsp
0x400192:	sub	rsp, 0xf0
0x400199:	mov	rax, qword ptr fs:[0x28]
0x4001a2:	mov	qword ptr [rbp - 8], rax
0x4001a6:	xor	eax, eax
0x4001a8:	lea	rax, [rbp - 0xe0]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x41
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500000
<Block for 0x4001c1, 14 bytes>
0x4001c1:	mov	byte ptr [rbp - 0x7d], 0
0x4001c5:	mov	eax, 0
0x4001ca:	call	0x400000
<Block for 0x4001cf, 4 bytes>
0x4001cf:	test	eax, eax
0x4001d1:	je	0x4001e1
<Block for 0x4001e1, 22 bytes>
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500000
<Block for 0x4001d3, 36 bytes>
0x4001d3:	lea	rax, [rbp - 0xe0]
0x4001da:	mov	qword ptr [rbp - 0xe8], rax
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500000
<Block for 0x4001f7, 26 bytes>
0x4001f7:	mov	byte ptr [rbp - 0xd], 0
0x4001fb:	lea	rdx, [rbp - 0x70]
0x4001ff:	mov	rax, qword ptr [rbp - 0xe8]
0x400206:	mov	rsi, rdx
0x400209:	mov	rdi, rax
0x40020c:	call	0x500008
<Block for 0x400211, 15 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0xe8]
0x400218:	mov	rdi, rax
0x40021b:	call	0x500010
<Block for 0x400220, 16 bytes>
0x400220:	nop	
0x400221:	mov	rax, qword ptr [rbp - 8]
0x400225:	xor	rax, qword ptr fs:[0x28]
0x40022e:	je	0x400235
<Block for 0x400235, 2 bytes>
0x400235:	leave	
0x400236:	ret	
<Block for 0x400230, 5 bytes>
0x400230:	call	0x500018
