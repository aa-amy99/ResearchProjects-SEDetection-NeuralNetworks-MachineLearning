<Block for 0x4000cf, 55 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	sub	rsp, 0xf0
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	lea	rax, [rbp - 0xe0]
0x4000f4:	mov	edx, 0x63
0x4000f9:	mov	esi, 0x41
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500000
<Block for 0x400106, 14 bytes>
0x400106:	mov	byte ptr [rbp - 0x7d], 0
0x40010a:	mov	eax, 0
0x40010f:	call	0x40000f
<Block for 0x400114, 4 bytes>
0x400114:	test	eax, eax
0x400116:	je	0x400126
<Block for 0x400126, 36 bytes>
0x400126:	lea	rax, [rbp - 0xe0]
0x40012d:	mov	qword ptr [rbp - 0xe8], rax
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	edx, 0x63
0x40013d:	mov	esi, 0x43
0x400142:	mov	rdi, rax
0x400145:	call	0x500000
<Block for 0x400118, 12 bytes>
0x400118:	lea	rdi, [rip + 0x137]
0x40011f:	call	0x500010
<Block for 0x40014a, 26 bytes>
0x40014a:	mov	byte ptr [rbp - 0xd], 0
0x40014e:	lea	rdx, [rbp - 0x70]
0x400152:	mov	rax, qword ptr [rbp - 0xe8]
0x400159:	mov	rsi, rdx
0x40015c:	mov	rdi, rax
0x40015f:	call	0x500008
<Block for 0x400124, 2 bytes>
0x400124:	jmp	0x400134
<Block for 0x400164, 15 bytes>
0x400164:	mov	rax, qword ptr [rbp - 0xe8]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500010
<Block for 0x400134, 22 bytes>
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	edx, 0x63
0x40013d:	mov	esi, 0x43
0x400142:	mov	rdi, rax
0x400145:	call	0x500000
<Block for 0x400173, 16 bytes>
0x400173:	nop	
0x400174:	mov	rax, qword ptr [rbp - 8]
0x400178:	xor	rax, qword ptr fs:[0x28]
0x400181:	je	0x400188
<Block for 0x400188, 2 bytes>
0x400188:	leave	
0x400189:	ret	
<Block for 0x400183, 5 bytes>
0x400183:	call	0x500018
