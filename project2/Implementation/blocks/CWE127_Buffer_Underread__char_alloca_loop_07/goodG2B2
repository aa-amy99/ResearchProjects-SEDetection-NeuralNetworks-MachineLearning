<Block for 0x4002b0, 84 bytes>
0x4002b0:	endbr64	
0x4002b4:	push	rbp
0x4002b5:	mov	rbp, rsp
0x4002b8:	sub	rsp, 0x90
0x4002bf:	mov	rax, qword ptr fs:[0x28]
0x4002c8:	mov	qword ptr [rbp - 8], rax
0x4002cc:	xor	eax, eax
0x4002ce:	mov	eax, 0x10
0x4002d3:	sub	rax, 1
0x4002d7:	add	rax, 0x6c
0x4002db:	mov	esi, 0x10
0x4002e0:	mov	edx, 0
0x4002e5:	div	rsi
0x4002e8:	imul	rax, rax, 0x10
0x4002ec:	mov	rdx, rax
0x4002ef:	and	rdx, 0xfffffffffffff000
0x4002f6:	mov	rcx, rsp
0x4002f9:	sub	rcx, rdx
0x4002fc:	mov	rdx, rcx
0x4002ff:	cmp	rsp, rdx
0x400302:	je	0x400316
<Block for 0x400316, 26 bytes>
0x400316:	mov	rdx, rax
0x400319:	and	edx, 0xfff
0x40031f:	sub	rsp, rdx
0x400322:	mov	rdx, rax
0x400325:	and	edx, 0xfff
0x40032b:	test	rdx, rdx
0x40032e:	je	0x400340
<Block for 0x400304, 18 bytes>
0x400304:	sub	rsp, 0x1000
0x40030b:	or	qword ptr [rsp + 0xff8], 0
0x400314:	jmp	0x4002ff
<Block for 0x400340, 41 bytes>
0x400340:	mov	rax, rsp
0x400343:	add	rax, 0xf
0x400347:	shr	rax, 4
0x40034b:	shl	rax, 4
0x40034f:	mov	qword ptr [rbp - 0x78], rax
0x400353:	mov	rax, qword ptr [rbp - 0x78]
0x400357:	mov	edx, 0x63
0x40035c:	mov	esi, 0x41
0x400361:	mov	rdi, rax
0x400364:	call	0x500000
<Block for 0x400330, 57 bytes>
0x400330:	and	eax, 0xfff
0x400335:	sub	rax, 8
0x400339:	add	rax, rsp
0x40033c:	or	qword ptr [rax], 0
0x400340:	mov	rax, rsp
0x400343:	add	rax, 0xf
0x400347:	shr	rax, 4
0x40034b:	shl	rax, 4
0x40034f:	mov	qword ptr [rbp - 0x78], rax
0x400353:	mov	rax, qword ptr [rbp - 0x78]
0x400357:	mov	edx, 0x63
0x40035c:	mov	esi, 0x41
0x400361:	mov	rdi, rax
0x400364:	call	0x500000
<Block for 0x4002ff, 5 bytes>
0x4002ff:	cmp	rsp, rdx
0x400302:	je	0x400316
<Block for 0x400369, 22 bytes>
0x400369:	mov	rax, qword ptr [rbp - 0x78]
0x40036d:	add	rax, 0x63
0x400371:	mov	byte ptr [rax], 0
0x400374:	mov	eax, dword ptr [rip + 0xa6]
0x40037a:	cmp	eax, 5
0x40037d:	jne	0x40038a
<Block for 0x40037f, 33 bytes>
0x40037f:	mov	rax, qword ptr [rbp - 0x78]
0x400383:	mov	qword ptr [rbp - 0x88], rax
0x40038a:	lea	rax, [rbp - 0x70]
0x40038e:	mov	edx, 0x63
0x400393:	mov	esi, 0x43
0x400398:	mov	rdi, rax
0x40039b:	call	0x500000
<Block for 0x40038a, 22 bytes>
0x40038a:	lea	rax, [rbp - 0x70]
0x40038e:	mov	edx, 0x63
0x400393:	mov	esi, 0x43
0x400398:	mov	rdi, rax
0x40039b:	call	0x500000
<Block for 0x4003a0, 14 bytes>
0x4003a0:	mov	byte ptr [rbp - 0xd], 0
0x4003a4:	mov	qword ptr [rbp - 0x80], 0
0x4003ac:	jmp	0x4003d1
<Block for 0x4003d1, 7 bytes>
0x4003d1:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d6:	jbe	0x4003ae
<Block for 0x4003ae, 42 bytes>
0x4003ae:	mov	rdx, qword ptr [rbp - 0x88]
0x4003b5:	mov	rax, qword ptr [rbp - 0x80]
0x4003b9:	add	rax, rdx
0x4003bc:	movzx	eax, byte ptr [rax]
0x4003bf:	lea	rcx, [rbp - 0x70]
0x4003c3:	mov	rdx, qword ptr [rbp - 0x80]
0x4003c7:	add	rdx, rcx
0x4003ca:	mov	byte ptr [rdx], al
0x4003cc:	add	qword ptr [rbp - 0x80], 1
0x4003d1:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d6:	jbe	0x4003ae
<Block for 0x4003d8, 16 bytes>
0x4003d8:	mov	byte ptr [rbp - 0xd], 0
0x4003dc:	lea	rax, [rbp - 0x70]
0x4003e0:	mov	rdi, rax
0x4003e3:	call	0x500008
<Block for 0x4003e8, 16 bytes>
0x4003e8:	nop	
0x4003e9:	mov	rax, qword ptr [rbp - 8]
0x4003ed:	xor	rax, qword ptr fs:[0x28]
0x4003f6:	je	0x4003fd
<Block for 0x4003fd, 2 bytes>
0x4003fd:	leave	
0x4003fe:	ret	
<Block for 0x4003f8, 5 bytes>
0x4003f8:	call	0x500010
