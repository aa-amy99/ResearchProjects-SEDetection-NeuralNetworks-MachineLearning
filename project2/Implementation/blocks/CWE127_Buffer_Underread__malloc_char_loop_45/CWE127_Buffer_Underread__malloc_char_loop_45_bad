<Block for 0x400098, 30 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0x10
0x4000a4:	mov	qword ptr [rbp - 0x10], 0
0x4000ac:	mov	edi, 0x64
0x4000b1:	call	0x500018
<Block for 0x4000b6, 11 bytes>
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	cmp	qword ptr [rbp - 8], 0
0x4000bf:	jne	0x4000cb
<Block for 0x4000c1, 10 bytes>
0x4000c1:	mov	edi, 0xffffffff
0x4000c6:	call	0x500020
<Block for 0x4000cb, 22 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	mov	edx, 0x63
0x4000d4:	mov	esi, 0x41
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500000
<Block for 0x4000e1, 44 bytes>
0x4000e1:	mov	rax, qword ptr [rbp - 8]
0x4000e5:	add	rax, 0x63
0x4000e9:	mov	byte ptr [rax], 0
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	sub	rax, 8
0x4000f4:	mov	qword ptr [rbp - 0x10], rax
0x4000f8:	mov	rax, qword ptr [rbp - 0x10]
0x4000fc:	mov	qword ptr [rip + 0x135], rax
0x400103:	mov	eax, 0
0x400108:	call	0x400000
<Block for 0x40010d, 3 bytes>
0x40010d:	nop	
0x40010e:	leave	
0x40010f:	ret	
