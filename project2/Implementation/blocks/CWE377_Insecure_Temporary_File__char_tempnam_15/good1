<Block for 0x400086, 67 bytes>
0x400086:	endbr64	
0x40008a:	push	rbp
0x40008b:	mov	rbp, rsp
0x40008e:	sub	rsp, 0x30
0x400092:	mov	rax, qword ptr fs:[0x28]
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	xor	eax, eax
0x4000a1:	movabs	rax, 0x6c69662f706d742f
0x4000ab:	movabs	rdx, 0x58585858585865
0x4000b5:	mov	qword ptr [rbp - 0x20], rax
0x4000b9:	mov	qword ptr [rbp - 0x18], rdx
0x4000bd:	lea	rax, [rbp - 0x20]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500030
<Block for 0x4000c9, 15 bytes>
0x4000c9:	mov	dword ptr [rbp - 0x24], eax
0x4000cc:	lea	rax, [rbp - 0x20]
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500010
<Block for 0x4000d8, 6 bytes>
0x4000d8:	cmp	dword ptr [rbp - 0x24], -1
0x4000dc:	je	0x4000f4
<Block for 0x4000f4, 17 bytes>
0x4000f4:	nop	
0x4000f5:	nop	
0x4000f6:	mov	rax, qword ptr [rbp - 8]
0x4000fa:	xor	rax, qword ptr fs:[0x28]
0x400103:	je	0x40010a
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rdi, [rip + 0xd3]
0x4000e5:	call	0x500010
<Block for 0x40010a, 2 bytes>
0x40010a:	leave	
0x40010b:	ret	
<Block for 0x400105, 5 bytes>
0x400105:	call	0x500038
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	eax, dword ptr [rbp - 0x24]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500020
