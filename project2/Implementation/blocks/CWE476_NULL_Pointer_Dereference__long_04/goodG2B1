<Block for 0x4000e0, 44 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x20
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	qword ptr [rbp - 0x18], 5
0x400103:	mov	eax, 0
0x400108:	test	eax, eax
0x40010a:	je	0x40011a
<Block for 0x40011a, 17 bytes>
0x40011a:	lea	rax, [rbp - 0x18]
0x40011e:	mov	qword ptr [rbp - 0x10], rax
0x400122:	mov	eax, 1
0x400127:	test	eax, eax
0x400129:	je	0x40013a
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rdi, [rip + 0xdd]
0x400113:	call	0x500008
<Block for 0x40013a, 16 bytes>
0x40013a:	nop	
0x40013b:	mov	rax, qword ptr [rbp - 8]
0x40013f:	xor	rax, qword ptr fs:[0x28]
0x400148:	je	0x40014f
<Block for 0x40012b, 15 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0x10]
0x40012f:	mov	rax, qword ptr [rax]
0x400132:	mov	rdi, rax
0x400135:	call	0x500000
<Block for 0x400118, 2 bytes>
0x400118:	jmp	0x400122
<Block for 0x40014f, 2 bytes>
0x40014f:	leave	
0x400150:	ret	
<Block for 0x40014a, 5 bytes>
0x40014a:	call	0x500010
<Block for 0x400122, 9 bytes>
0x400122:	mov	eax, 1
0x400127:	test	eax, eax
0x400129:	je	0x40013a
