<Block for 0x4001cd, 30 bytes>
0x4001cd:	endbr64	
0x4001d1:	push	rbp
0x4001d2:	mov	rbp, rsp
0x4001d5:	sub	rsp, 0x10
0x4001d9:	mov	qword ptr [rbp - 0x10], 0
0x4001e1:	mov	eax, dword ptr [rip + 0x135]
0x4001e7:	test	eax, eax
0x4001e9:	je	0x4001f9
<Block for 0x4001f9, 10 bytes>
0x4001f9:	mov	edi, 0x320
0x4001fe:	call	0x500000
<Block for 0x4001eb, 12 bytes>
0x4001eb:	lea	rdi, [rip + 0x12e]
0x4001f2:	call	0x500018
<Block for 0x400203, 19 bytes>
0x400203:	mov	qword ptr [rbp - 0x10], rax
0x400207:	mov	qword ptr [rbp - 8], 0
0x40020f:	cmp	qword ptr [rbp - 8], 0x63
0x400214:	ja	0x400250
<Block for 0x4001f7, 2 bytes>
0x4001f7:	jmp	0x400250
<Block for 0x400216, 58 bytes>
0x400216:	mov	rax, qword ptr [rbp - 8]
0x40021a:	lea	rdx, [rax*8]
0x400222:	mov	rax, qword ptr [rbp - 0x10]
0x400226:	add	rax, rdx
0x400229:	mov	dword ptr [rax], 1
0x40022f:	mov	rax, qword ptr [rbp - 8]
0x400233:	lea	rdx, [rax*8]
0x40023b:	mov	rax, qword ptr [rbp - 0x10]
0x40023f:	add	rax, rdx
0x400242:	mov	dword ptr [rax + 4], 2
0x400249:	add	qword ptr [rbp - 8], 1
0x40024e:	jmp	0x40020f
<Block for 0x400250, 10 bytes>
0x400250:	mov	eax, dword ptr [rip + 0xc2]
0x400256:	test	eax, eax
0x400258:	je	0x400266
<Block for 0x40020f, 7 bytes>
0x40020f:	cmp	qword ptr [rbp - 8], 0x63
0x400214:	ja	0x400250
<Block for 0x400266, 3 bytes>
0x400266:	nop	
0x400267:	leave	
0x400268:	ret	
<Block for 0x40025a, 12 bytes>
0x40025a:	mov	rax, qword ptr [rbp - 0x10]
0x40025e:	mov	rdi, rax
0x400261:	call	0x500010
