<Block for 0x400269, 30 bytes>
0x400269:	endbr64	
0x40026d:	push	rbp
0x40026e:	mov	rbp, rsp
0x400271:	sub	rsp, 0x10
0x400275:	mov	qword ptr [rbp - 0x10], 0
0x40027d:	mov	eax, dword ptr [rip + 0x95]
0x400283:	test	eax, eax
0x400285:	je	0x4002de
<Block for 0x4002de, 10 bytes>
0x4002de:	mov	eax, dword ptr [rip + 0x34]
0x4002e4:	test	eax, eax
0x4002e6:	je	0x4002f4
<Block for 0x400287, 10 bytes>
0x400287:	mov	edi, 0x320
0x40028c:	call	0x500000
<Block for 0x4002f4, 3 bytes>
0x4002f4:	nop	
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002e8, 12 bytes>
0x4002e8:	mov	rax, qword ptr [rbp - 0x10]
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x500010
<Block for 0x400291, 19 bytes>
0x400291:	mov	qword ptr [rbp - 0x10], rax
0x400295:	mov	qword ptr [rbp - 8], 0
0x40029d:	cmp	qword ptr [rbp - 8], 0x63
0x4002a2:	ja	0x4002de
<Block for 0x4002a4, 58 bytes>
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	lea	rdx, [rax*8]
0x4002b0:	mov	rax, qword ptr [rbp - 0x10]
0x4002b4:	add	rax, rdx
0x4002b7:	mov	dword ptr [rax], 1
0x4002bd:	mov	rax, qword ptr [rbp - 8]
0x4002c1:	lea	rdx, [rax*8]
0x4002c9:	mov	rax, qword ptr [rbp - 0x10]
0x4002cd:	add	rax, rdx
0x4002d0:	mov	dword ptr [rax + 4], 2
0x4002d7:	add	qword ptr [rbp - 8], 1
0x4002dc:	jmp	0x40029d
<Block for 0x40029d, 7 bytes>
0x40029d:	cmp	qword ptr [rbp - 8], 0x63
0x4002a2:	ja	0x4002de
