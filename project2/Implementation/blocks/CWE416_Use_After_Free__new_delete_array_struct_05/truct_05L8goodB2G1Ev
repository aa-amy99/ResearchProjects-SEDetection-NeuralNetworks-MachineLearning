<Block for 0x4000a1, 30 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x10
0x4000ad:	mov	qword ptr [rbp - 8], 0
0x4000b5:	mov	eax, dword ptr [rip + 0x25d]
0x4000bb:	test	eax, eax
0x4000bd:	je	0x400129
<Block for 0x400129, 10 bytes>
0x400129:	mov	eax, dword ptr [rip + 0x1ed]
0x40012f:	test	eax, eax
0x400131:	je	0x40013f
<Block for 0x4000bf, 10 bytes>
0x4000bf:	mov	edi, 0x320
0x4000c4:	call	0x500000
<Block for 0x40013f, 3 bytes>
0x40013f:	nop	
0x400140:	leave	
0x400141:	ret	
<Block for 0x400133, 12 bytes>
0x400133:	lea	rdi, [rip + 0x1e6]
0x40013a:	call	0x500018
<Block for 0x4000c9, 19 bytes>
0x4000c9:	mov	qword ptr [rbp - 8], rax
0x4000cd:	mov	qword ptr [rbp - 0x10], 0
0x4000d5:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000da:	ja	0x400116
<Block for 0x4000dc, 58 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x10]
0x4000e0:	lea	rdx, [rax*8]
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	add	rax, rdx
0x4000ef:	mov	dword ptr [rax], 1
0x4000f5:	mov	rax, qword ptr [rbp - 0x10]
0x4000f9:	lea	rdx, [rax*8]
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	add	rax, rdx
0x400108:	mov	dword ptr [rax + 4], 2
0x40010f:	add	qword ptr [rbp - 0x10], 1
0x400114:	jmp	0x4000d5
<Block for 0x400116, 7 bytes>
0x400116:	cmp	qword ptr [rbp - 8], 0
0x40011b:	je	0x400129
<Block for 0x4000d5, 7 bytes>
0x4000d5:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000da:	ja	0x400116
<Block for 0x40011d, 12 bytes>
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	mov	rdi, rax
0x400124:	call	0x500008
