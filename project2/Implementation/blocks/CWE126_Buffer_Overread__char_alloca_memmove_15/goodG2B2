<Block for 0x4003c1, 84 bytes>
0x4003c1:	endbr64	
0x4003c5:	push	rbp
0x4003c6:	mov	rbp, rsp
0x4003c9:	sub	rsp, 0x90
0x4003d0:	mov	rax, qword ptr fs:[0x28]
0x4003d9:	mov	qword ptr [rbp - 8], rax
0x4003dd:	xor	eax, eax
0x4003df:	mov	eax, 0x10
0x4003e4:	sub	rax, 1
0x4003e8:	add	rax, 0x3a
0x4003ec:	mov	ecx, 0x10
0x4003f1:	mov	edx, 0
0x4003f6:	div	rcx
0x4003f9:	imul	rax, rax, 0x10
0x4003fd:	mov	rdx, rax
0x400400:	and	rdx, 0xfffffffffffff000
0x400407:	mov	rcx, rsp
0x40040a:	sub	rcx, rdx
0x40040d:	mov	rdx, rcx
0x400410:	cmp	rsp, rdx
0x400413:	je	0x400427
<Block for 0x400427, 26 bytes>
0x400427:	mov	rdx, rax
0x40042a:	and	edx, 0xfff
0x400430:	sub	rsp, rdx
0x400433:	mov	rdx, rax
0x400436:	and	edx, 0xfff
0x40043c:	test	rdx, rdx
0x40043f:	je	0x400451
<Block for 0x400415, 18 bytes>
0x400415:	sub	rsp, 0x1000
0x40041c:	or	qword ptr [rsp + 0xff8], 0
0x400425:	jmp	0x400410
<Block for 0x400451, 76 bytes>
0x400451:	mov	rax, rsp
0x400454:	add	rax, 0xf
0x400458:	shr	rax, 4
0x40045c:	shl	rax, 4
0x400460:	mov	qword ptr [rbp - 0x88], rax
0x400467:	mov	eax, 0x10
0x40046c:	sub	rax, 1
0x400470:	add	rax, 0x6c
0x400474:	mov	edi, 0x10
0x400479:	mov	edx, 0
0x40047e:	div	rdi
0x400481:	imul	rax, rax, 0x10
0x400485:	mov	rdx, rax
0x400488:	and	rdx, 0xfffffffffffff000
0x40048f:	mov	rsi, rsp
0x400492:	sub	rsi, rdx
0x400495:	mov	rdx, rsi
0x400498:	cmp	rsp, rdx
0x40049b:	je	0x4004af
<Block for 0x400441, 92 bytes>
0x400441:	and	eax, 0xfff
0x400446:	sub	rax, 8
0x40044a:	add	rax, rsp
0x40044d:	or	qword ptr [rax], 0
0x400451:	mov	rax, rsp
0x400454:	add	rax, 0xf
0x400458:	shr	rax, 4
0x40045c:	shl	rax, 4
0x400460:	mov	qword ptr [rbp - 0x88], rax
0x400467:	mov	eax, 0x10
0x40046c:	sub	rax, 1
0x400470:	add	rax, 0x6c
0x400474:	mov	edi, 0x10
0x400479:	mov	edx, 0
0x40047e:	div	rdi
0x400481:	imul	rax, rax, 0x10
0x400485:	mov	rdx, rax
0x400488:	and	rdx, 0xfffffffffffff000
0x40048f:	mov	rsi, rsp
0x400492:	sub	rsi, rdx
0x400495:	mov	rdx, rsi
0x400498:	cmp	rsp, rdx
0x40049b:	je	0x4004af
<Block for 0x400410, 5 bytes>
0x400410:	cmp	rsp, rdx
0x400413:	je	0x400427
<Block for 0x4004af, 26 bytes>
0x4004af:	mov	rdx, rax
0x4004b2:	and	edx, 0xfff
0x4004b8:	sub	rsp, rdx
0x4004bb:	mov	rdx, rax
0x4004be:	and	edx, 0xfff
0x4004c4:	test	rdx, rdx
0x4004c7:	je	0x4004d9
<Block for 0x40049d, 18 bytes>
0x40049d:	sub	rsp, 0x1000
0x4004a4:	or	qword ptr [rsp + 0xff8], 0
0x4004ad:	jmp	0x400498
<Block for 0x4004d9, 44 bytes>
0x4004d9:	mov	rax, rsp
0x4004dc:	add	rax, 0xf
0x4004e0:	shr	rax, 4
0x4004e4:	shl	rax, 4
0x4004e8:	mov	qword ptr [rbp - 0x80], rax
0x4004ec:	mov	rax, qword ptr [rbp - 0x88]
0x4004f3:	mov	edx, 0x31
0x4004f8:	mov	esi, 0x41
0x4004fd:	mov	rdi, rax
0x400500:	call	0x500000
<Block for 0x4004c9, 60 bytes>
0x4004c9:	and	eax, 0xfff
0x4004ce:	sub	rax, 8
0x4004d2:	add	rax, rsp
0x4004d5:	or	qword ptr [rax], 0
0x4004d9:	mov	rax, rsp
0x4004dc:	add	rax, 0xf
0x4004e0:	shr	rax, 4
0x4004e4:	shl	rax, 4
0x4004e8:	mov	qword ptr [rbp - 0x80], rax
0x4004ec:	mov	rax, qword ptr [rbp - 0x88]
0x4004f3:	mov	edx, 0x31
0x4004f8:	mov	esi, 0x41
0x4004fd:	mov	rdi, rax
0x400500:	call	0x500000
<Block for 0x400498, 5 bytes>
0x400498:	cmp	rsp, rdx
0x40049b:	je	0x4004af
<Block for 0x400505, 36 bytes>
0x400505:	mov	rax, qword ptr [rbp - 0x88]
0x40050c:	add	rax, 0x31
0x400510:	mov	byte ptr [rax], 0
0x400513:	mov	rax, qword ptr [rbp - 0x80]
0x400517:	mov	edx, 0x63
0x40051c:	mov	esi, 0x41
0x400521:	mov	rdi, rax
0x400524:	call	0x500000
<Block for 0x400529, 42 bytes>
0x400529:	mov	rax, qword ptr [rbp - 0x80]
0x40052d:	add	rax, 0x63
0x400531:	mov	byte ptr [rax], 0
0x400534:	mov	rax, qword ptr [rbp - 0x80]
0x400538:	mov	qword ptr [rbp - 0x78], rax
0x40053c:	nop	
0x40053d:	lea	rax, [rbp - 0x70]
0x400541:	mov	edx, 0x63
0x400546:	mov	esi, 0x43
0x40054b:	mov	rdi, rax
0x40054e:	call	0x500000
<Block for 0x400553, 16 bytes>
0x400553:	mov	byte ptr [rbp - 0xd], 0
0x400557:	lea	rax, [rbp - 0x70]
0x40055b:	mov	rdi, rax
0x40055e:	call	0x500008
<Block for 0x400563, 22 bytes>
0x400563:	mov	rdx, rax
0x400566:	mov	rcx, qword ptr [rbp - 0x78]
0x40056a:	lea	rax, [rbp - 0x70]
0x40056e:	mov	rsi, rcx
0x400571:	mov	rdi, rax
0x400574:	call	0x500010
<Block for 0x400579, 16 bytes>
0x400579:	mov	byte ptr [rbp - 0xd], 0
0x40057d:	lea	rax, [rbp - 0x70]
0x400581:	mov	rdi, rax
0x400584:	call	0x500018
<Block for 0x400589, 16 bytes>
0x400589:	nop	
0x40058a:	mov	rax, qword ptr [rbp - 8]
0x40058e:	xor	rax, qword ptr fs:[0x28]
0x400597:	je	0x40059e
<Block for 0x40059e, 2 bytes>
0x40059e:	leave	
0x40059f:	ret	
<Block for 0x400599, 5 bytes>
0x400599:	call	0x500020
