<Block for 0x400081, 45 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x20
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	mov	qword ptr [rbp - 0x18], 0
0x4000a4:	mov	edi, 0x64
0x4000a9:	call	0x500000
<Block for 0x4000ae, 26 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x10], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	mov	edx, 0x63
0x4000bb:	mov	esi, 0x41
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500008
<Block for 0x4000c8, 31 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 0x10]
0x4000cc:	add	rax, 0x63
0x4000d0:	mov	byte ptr [rax], 0
0x4000d3:	mov	rax, qword ptr [rbp - 0x10]
0x4000d7:	mov	qword ptr [rbp - 0x18], rax
0x4000db:	lea	rax, [rbp - 0x18]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500020
<Block for 0x4000e7, 16 bytes>
0x4000e7:	nop	
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	xor	rax, qword ptr fs:[0x28]
0x4000f5:	je	0x4000fc
<Block for 0x4000fc, 2 bytes>
0x4000fc:	leave	
0x4000fd:	ret	
<Block for 0x4000f7, 5 bytes>
0x4000f7:	call	0x500018
