<Block for 0x40013c, 84 bytes>
0x40013c:	endbr64	
0x400140:	push	rbp
0x400141:	mov	rbp, rsp
0x400144:	sub	rsp, 0xe0
0x40014b:	mov	rax, qword ptr fs:[0x28]
0x400154:	mov	qword ptr [rbp - 8], rax
0x400158:	xor	eax, eax
0x40015a:	mov	eax, 0x10
0x40015f:	sub	rax, 1
0x400163:	add	rax, 0x6c
0x400167:	mov	ecx, 0x10
0x40016c:	mov	edx, 0
0x400171:	div	rcx
0x400174:	imul	rax, rax, 0x10
0x400178:	mov	rdx, rax
0x40017b:	and	rdx, 0xfffffffffffff000
0x400182:	mov	rcx, rsp
0x400185:	sub	rcx, rdx
0x400188:	mov	rdx, rcx
0x40018b:	cmp	rsp, rdx
0x40018e:	je	0x4001a2
<Block for 0x4001a2, 26 bytes>
0x4001a2:	mov	rdx, rax
0x4001a5:	and	edx, 0xfff
0x4001ab:	sub	rsp, rdx
0x4001ae:	mov	rdx, rax
0x4001b1:	and	edx, 0xfff
0x4001b7:	test	rdx, rdx
0x4001ba:	je	0x4001cc
<Block for 0x400190, 18 bytes>
0x400190:	sub	rsp, 0x1000
0x400197:	or	qword ptr [rsp + 0xff8], 0
0x4001a0:	jmp	0x40018b
<Block for 0x4001cc, 47 bytes>
0x4001cc:	mov	rax, rsp
0x4001cf:	add	rax, 0xf
0x4001d3:	shr	rax, 4
0x4001d7:	shl	rax, 4
0x4001db:	mov	qword ptr [rbp - 0xe0], rax
0x4001e2:	mov	rax, qword ptr [rbp - 0xe0]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x41
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500000
<Block for 0x4001bc, 63 bytes>
0x4001bc:	and	eax, 0xfff
0x4001c1:	sub	rax, 8
0x4001c5:	add	rax, rsp
0x4001c8:	or	qword ptr [rax], 0
0x4001cc:	mov	rax, rsp
0x4001cf:	add	rax, 0xf
0x4001d3:	shr	rax, 4
0x4001d7:	shl	rax, 4
0x4001db:	mov	qword ptr [rbp - 0xe0], rax
0x4001e2:	mov	rax, qword ptr [rbp - 0xe0]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x41
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500000
<Block for 0x40018b, 5 bytes>
0x40018b:	cmp	rsp, rdx
0x40018e:	je	0x4001a2
<Block for 0x4001fb, 54 bytes>
0x4001fb:	mov	rax, qword ptr [rbp - 0xe0]
0x400202:	add	rax, 0x63
0x400206:	mov	byte ptr [rax], 0
0x400209:	mov	rax, qword ptr [rbp - 0xe0]
0x400210:	mov	qword ptr [rbp - 0xd8], rax
0x400217:	nop	
0x400218:	lea	rax, [rbp - 0xd0]
0x40021f:	mov	edx, 0xc7
0x400224:	mov	esi, 0x43
0x400229:	mov	rdi, rax
0x40022c:	call	0x500000
<Block for 0x400231, 29 bytes>
0x400231:	mov	byte ptr [rbp - 9], 0
0x400235:	mov	rdx, qword ptr [rbp - 0xd8]
0x40023c:	lea	rax, [rbp - 0xd0]
0x400243:	mov	rsi, rdx
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x40024e, 15 bytes>
0x40024e:	lea	rax, [rbp - 0xd0]
0x400255:	mov	rdi, rax
0x400258:	call	0x500010
<Block for 0x40025d, 16 bytes>
0x40025d:	nop	
0x40025e:	mov	rax, qword ptr [rbp - 8]
0x400262:	xor	rax, qword ptr fs:[0x28]
0x40026b:	je	0x400272
<Block for 0x400272, 2 bytes>
0x400272:	leave	
0x400273:	ret	
<Block for 0x40026d, 5 bytes>
0x40026d:	call	0x500018
