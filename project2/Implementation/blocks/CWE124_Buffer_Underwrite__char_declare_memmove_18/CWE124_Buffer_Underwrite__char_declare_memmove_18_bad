<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 49 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	nop	
0x40003c:	endbr64	
0x400040:	lea	rax, [rbp - 0xe0]
0x400047:	sub	rax, 8
0x40004b:	mov	qword ptr [rbp - 0xe8], rax
0x400052:	lea	rax, [rbp - 0x70]
0x400056:	mov	edx, 0x63
0x40005b:	mov	esi, 0x43
0x400060:	mov	rdi, rax
0x400063:	call	0x500000
<Block for 0x400068, 31 bytes>
0x400068:	mov	byte ptr [rbp - 0xd], 0
0x40006c:	lea	rcx, [rbp - 0x70]
0x400070:	mov	rax, qword ptr [rbp - 0xe8]
0x400077:	mov	edx, 0x64
0x40007c:	mov	rsi, rcx
0x40007f:	mov	rdi, rax
0x400082:	call	0x500008
<Block for 0x400087, 29 bytes>
0x400087:	mov	rax, qword ptr [rbp - 0xe8]
0x40008e:	add	rax, 0x63
0x400092:	mov	byte ptr [rax], 0
0x400095:	mov	rax, qword ptr [rbp - 0xe8]
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
<Block for 0x4000a4, 16 bytes>
0x4000a4:	nop	
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	xor	rax, qword ptr fs:[0x28]
0x4000b2:	je	0x4000b9
<Block for 0x4000b9, 2 bytes>
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000b4, 5 bytes>
0x4000b4:	call	0x500018
