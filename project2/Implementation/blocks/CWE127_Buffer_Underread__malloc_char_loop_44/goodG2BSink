<Block for 0x400115, 59 bytes>
0x400115:	endbr64	
0x400119:	push	rbp
0x40011a:	mov	rbp, rsp
0x40011d:	sub	rsp, 0x90
0x400124:	mov	qword ptr [rbp - 0x88], rdi
0x40012b:	mov	rax, qword ptr fs:[0x28]
0x400134:	mov	qword ptr [rbp - 8], rax
0x400138:	xor	eax, eax
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x400150, 14 bytes>
0x400150:	mov	byte ptr [rbp - 0xd], 0
0x400154:	mov	qword ptr [rbp - 0x78], 0
0x40015c:	jmp	0x400181
<Block for 0x400181, 7 bytes>
0x400181:	cmp	qword ptr [rbp - 0x78], 0x63
0x400186:	jbe	0x40015e
<Block for 0x40015e, 42 bytes>
0x40015e:	mov	rdx, qword ptr [rbp - 0x88]
0x400165:	mov	rax, qword ptr [rbp - 0x78]
0x400169:	add	rax, rdx
0x40016c:	movzx	eax, byte ptr [rax]
0x40016f:	lea	rcx, [rbp - 0x70]
0x400173:	mov	rdx, qword ptr [rbp - 0x78]
0x400177:	add	rdx, rcx
0x40017a:	mov	byte ptr [rdx], al
0x40017c:	add	qword ptr [rbp - 0x78], 1
0x400181:	cmp	qword ptr [rbp - 0x78], 0x63
0x400186:	jbe	0x40015e
<Block for 0x400188, 16 bytes>
0x400188:	mov	byte ptr [rbp - 0xd], 0
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	rdi, rax
0x400193:	call	0x500008
<Block for 0x400198, 16 bytes>
0x400198:	nop	
0x400199:	mov	rax, qword ptr [rbp - 8]
0x40019d:	xor	rax, qword ptr fs:[0x28]
0x4001a6:	je	0x4001ad
<Block for 0x4001ad, 2 bytes>
0x4001ad:	leave	
0x4001ae:	ret	
<Block for 0x4001a8, 5 bytes>
0x4001a8:	call	0x500010
