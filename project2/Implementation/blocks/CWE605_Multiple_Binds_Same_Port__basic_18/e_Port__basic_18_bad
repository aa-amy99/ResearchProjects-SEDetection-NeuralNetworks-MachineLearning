<Block for 0x400000, 170 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	nop	
0x40001f:	endbr64	
0x400023:	mov	qword ptr [rbp - 0x70], 0
0x40002b:	mov	qword ptr [rbp - 0x68], 0
0x400033:	mov	qword ptr [rbp - 0x60], 0
0x40003b:	mov	qword ptr [rbp - 0x58], 0
0x400043:	mov	qword ptr [rbp - 0x50], 0
0x40004b:	mov	qword ptr [rbp - 0x48], 0
0x400053:	mov	qword ptr [rbp - 0x40], 0
0x40005b:	mov	qword ptr [rbp - 0x38], 0
0x400063:	mov	qword ptr [rbp - 0x30], 0
0x40006b:	mov	qword ptr [rbp - 0x28], 0
0x400073:	mov	qword ptr [rbp - 0x20], 0
0x40007b:	mov	qword ptr [rbp - 0x18], 0
0x400083:	mov	dword ptr [rbp - 0x10], 0
0x40008a:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400094:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x40009e:	lea	rax, [rbp - 0x70]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500000
<Block for 0x4000aa, 47 bytes>
0x4000aa:	mov	qword ptr [rbp - 0x90], rax
0x4000b1:	mov	dword ptr [rbp - 0xa4], 1
0x4000bb:	mov	dword ptr [rbp - 0x98], 4
0x4000c5:	mov	edx, 6
0x4000ca:	mov	esi, 1
0x4000cf:	mov	edi, 2
0x4000d4:	call	0x500008
<Block for 0x4000d9, 19 bytes>
0x4000d9:	mov	dword ptr [rbp - 0x9c], eax
0x4000df:	cmp	dword ptr [rbp - 0x9c], -1
0x4000e6:	je	0x400269
<Block for 0x400269, 3 bytes>
0x400269:	nop	
0x40026a:	jmp	0x400276
<Block for 0x4000ec, 42 bytes>
0x4000ec:	mov	ecx, dword ptr [rbp - 0x98]
0x4000f2:	lea	rdx, [rbp - 0xa4]
0x4000f9:	mov	eax, dword ptr [rbp - 0x9c]
0x4000ff:	mov	r8d, ecx
0x400102:	mov	rcx, rdx
0x400105:	mov	edx, 2
0x40010a:	mov	esi, 1
0x40010f:	mov	edi, eax
0x400111:	call	0x500010
<Block for 0x400276, 9 bytes>
0x400276:	cmp	dword ptr [rbp - 0x9c], -1
0x40027d:	je	0x40028c
<Block for 0x400116, 8 bytes>
0x400116:	test	eax, eax
0x400118:	jne	0x40026c
<Block for 0x40028c, 9 bytes>
0x40028c:	cmp	dword ptr [rbp - 0xa0], -1
0x400293:	je	0x4002a2
<Block for 0x40027f, 13 bytes>
0x40027f:	mov	eax, dword ptr [rbp - 0x9c]
0x400285:	mov	edi, eax
0x400287:	call	0x500050
<Block for 0x40011e, 22 bytes>
0x40011e:	lea	rax, [rbp - 0x80]
0x400122:	mov	edx, 0x10
0x400127:	mov	esi, 0
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500018
<Block for 0x40026c, 3 bytes>
0x40026c:	nop	
0x40026d:	jmp	0x400276
<Block for 0x4002a2, 12 bytes>
0x4002a2:	lea	rax, [rbp - 0x70]
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x500058
<Block for 0x400295, 13 bytes>
0x400295:	mov	eax, dword ptr [rbp - 0xa0]
0x40029b:	mov	edi, eax
0x40029d:	call	0x500050
<Block for 0x400134, 23 bytes>
0x400134:	mov	word ptr [rbp - 0x80], 2
0x40013a:	mov	dword ptr [rbp - 0x7c], 0
0x400141:	mov	edi, 0x6987
0x400146:	call	0x500020
<Block for 0x4002ae, 16 bytes>
0x4002ae:	nop	
0x4002af:	mov	rax, qword ptr [rbp - 8]
0x4002b3:	xor	rax, qword ptr fs:[0x28]
0x4002bc:	je	0x4002c3
<Block for 0x40014b, 29 bytes>
0x40014b:	mov	word ptr [rbp - 0x7e], ax
0x40014f:	lea	rcx, [rbp - 0x80]
0x400153:	mov	eax, dword ptr [rbp - 0x9c]
0x400159:	mov	edx, 0x10
0x40015e:	mov	rsi, rcx
0x400161:	mov	edi, eax
0x400163:	call	0x500028
<Block for 0x4002c3, 2 bytes>
0x4002c3:	leave	
0x4002c4:	ret	
<Block for 0x4002be, 5 bytes>
0x4002be:	call	0x500060
<Block for 0x400168, 9 bytes>
0x400168:	cmp	eax, -1
0x40016b:	je	0x40026f
<Block for 0x40026f, 3 bytes>
0x40026f:	nop	
0x400270:	jmp	0x400276
<Block for 0x400171, 18 bytes>
0x400171:	mov	eax, dword ptr [rbp - 0x9c]
0x400177:	mov	esi, 5
0x40017c:	mov	edi, eax
0x40017e:	call	0x500030
<Block for 0x400183, 9 bytes>
0x400183:	cmp	eax, -1
0x400186:	je	0x400272
<Block for 0x400272, 3 bytes>
0x400272:	nop	
0x400273:	jmp	0x400276
<Block for 0x40018c, 23 bytes>
0x40018c:	mov	eax, dword ptr [rbp - 0x9c]
0x400192:	mov	edx, 0
0x400197:	mov	esi, 0
0x40019c:	mov	edi, eax
0x40019e:	call	0x500038
<Block for 0x4001a3, 19 bytes>
0x4001a3:	mov	dword ptr [rbp - 0xa0], eax
0x4001a9:	cmp	dword ptr [rbp - 0xa0], -1
0x4001b0:	je	0x400275
<Block for 0x4001b6, 52 bytes>
0x4001b6:	mov	rax, qword ptr [rbp - 0x90]
0x4001bd:	mov	edx, 0x63
0x4001c2:	sub	edx, eax
0x4001c4:	mov	eax, edx
0x4001c6:	movsxd	rdx, eax
0x4001c9:	lea	rcx, [rbp - 0x70]
0x4001cd:	mov	rax, qword ptr [rbp - 0x90]
0x4001d4:	lea	rsi, [rcx + rax]
0x4001d8:	mov	eax, dword ptr [rbp - 0xa0]
0x4001de:	mov	ecx, 0
0x4001e3:	mov	edi, eax
0x4001e5:	call	0x500040
<Block for 0x400275, 1 bytes>
0x400275:	nop	
<Block for 0x4001ea, 15 bytes>
0x4001ea:	mov	dword ptr [rbp - 0x94], eax
0x4001f0:	cmp	dword ptr [rbp - 0x94], -1
0x4001f7:	je	0x400276
<Block for 0x4001f9, 9 bytes>
0x4001f9:	cmp	dword ptr [rbp - 0x94], 0
0x400200:	je	0x400276
<Block for 0x400202, 30 bytes>
0x400202:	mov	eax, dword ptr [rbp - 0x94]
0x400208:	cdqe	
0x40020a:	mov	byte ptr [rbp + rax - 0x70], 0
0x40020f:	lea	rax, [rbp - 0x70]
0x400213:	mov	esi, 0xd
0x400218:	mov	rdi, rax
0x40021b:	call	0x500048
<Block for 0x400220, 17 bytes>
0x400220:	mov	qword ptr [rbp - 0x88], rax
0x400227:	cmp	qword ptr [rbp - 0x88], 0
0x40022f:	je	0x40023b
<Block for 0x40023b, 17 bytes>
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	esi, 0xa
0x400244:	mov	rdi, rax
0x400247:	call	0x500048
<Block for 0x400231, 27 bytes>
0x400231:	mov	rax, qword ptr [rbp - 0x88]
0x400238:	mov	byte ptr [rax], 0
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	esi, 0xa
0x400244:	mov	rdi, rax
0x400247:	call	0x500048
<Block for 0x40024c, 17 bytes>
0x40024c:	mov	qword ptr [rbp - 0x88], rax
0x400253:	cmp	qword ptr [rbp - 0x88], 0
0x40025b:	je	0x400276
<Block for 0x40025d, 12 bytes>
0x40025d:	mov	rax, qword ptr [rbp - 0x88]
0x400264:	mov	byte ptr [rax], 0
0x400267:	jmp	0x400276
