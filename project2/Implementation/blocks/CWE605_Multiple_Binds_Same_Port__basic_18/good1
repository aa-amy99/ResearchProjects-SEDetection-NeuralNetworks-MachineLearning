<Block for 0x4002c5, 170 bytes>
0x4002c5:	endbr64	
0x4002c9:	push	rbp
0x4002ca:	mov	rbp, rsp
0x4002cd:	sub	rsp, 0xa0
0x4002d4:	mov	rax, qword ptr fs:[0x28]
0x4002dd:	mov	qword ptr [rbp - 8], rax
0x4002e1:	xor	eax, eax
0x4002e3:	nop	
0x4002e4:	endbr64	
0x4002e8:	mov	qword ptr [rbp - 0x70], 0
0x4002f0:	mov	qword ptr [rbp - 0x68], 0
0x4002f8:	mov	qword ptr [rbp - 0x60], 0
0x400300:	mov	qword ptr [rbp - 0x58], 0
0x400308:	mov	qword ptr [rbp - 0x50], 0
0x400310:	mov	qword ptr [rbp - 0x48], 0
0x400318:	mov	qword ptr [rbp - 0x40], 0
0x400320:	mov	qword ptr [rbp - 0x38], 0
0x400328:	mov	qword ptr [rbp - 0x30], 0
0x400330:	mov	qword ptr [rbp - 0x28], 0
0x400338:	mov	qword ptr [rbp - 0x20], 0
0x400340:	mov	qword ptr [rbp - 0x18], 0
0x400348:	mov	dword ptr [rbp - 0x10], 0
0x40034f:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400359:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400363:	lea	rax, [rbp - 0x70]
0x400367:	mov	rdi, rax
0x40036a:	call	0x500000
<Block for 0x40036f, 27 bytes>
0x40036f:	mov	qword ptr [rbp - 0x90], rax
0x400376:	mov	edx, 6
0x40037b:	mov	esi, 1
0x400380:	mov	edi, 2
0x400385:	call	0x500008
<Block for 0x40038a, 19 bytes>
0x40038a:	mov	dword ptr [rbp - 0x98], eax
0x400390:	cmp	dword ptr [rbp - 0x98], -1
0x400397:	je	0x4004e8
<Block for 0x4004e8, 3 bytes>
0x4004e8:	nop	
0x4004e9:	jmp	0x4004f2
<Block for 0x40039d, 22 bytes>
0x40039d:	lea	rax, [rbp - 0x80]
0x4003a1:	mov	edx, 0x10
0x4003a6:	mov	esi, 0
0x4003ab:	mov	rdi, rax
0x4003ae:	call	0x500018
<Block for 0x4004f2, 9 bytes>
0x4004f2:	cmp	dword ptr [rbp - 0x98], -1
0x4004f9:	je	0x400508
<Block for 0x4003b3, 23 bytes>
0x4003b3:	mov	word ptr [rbp - 0x80], 2
0x4003b9:	mov	dword ptr [rbp - 0x7c], 0
0x4003c0:	mov	edi, 0x6987
0x4003c5:	call	0x500020
<Block for 0x400508, 9 bytes>
0x400508:	cmp	dword ptr [rbp - 0x9c], -1
0x40050f:	je	0x40051e
<Block for 0x4004fb, 13 bytes>
0x4004fb:	mov	eax, dword ptr [rbp - 0x98]
0x400501:	mov	edi, eax
0x400503:	call	0x500050
<Block for 0x4003ca, 29 bytes>
0x4003ca:	mov	word ptr [rbp - 0x7e], ax
0x4003ce:	lea	rcx, [rbp - 0x80]
0x4003d2:	mov	eax, dword ptr [rbp - 0x98]
0x4003d8:	mov	edx, 0x10
0x4003dd:	mov	rsi, rcx
0x4003e0:	mov	edi, eax
0x4003e2:	call	0x500028
<Block for 0x40051e, 12 bytes>
0x40051e:	lea	rax, [rbp - 0x70]
0x400522:	mov	rdi, rax
0x400525:	call	0x500058
<Block for 0x400511, 13 bytes>
0x400511:	mov	eax, dword ptr [rbp - 0x9c]
0x400517:	mov	edi, eax
0x400519:	call	0x500050
<Block for 0x4003e7, 9 bytes>
0x4003e7:	cmp	eax, -1
0x4003ea:	je	0x4004eb
<Block for 0x40052a, 16 bytes>
0x40052a:	nop	
0x40052b:	mov	rax, qword ptr [rbp - 8]
0x40052f:	xor	rax, qword ptr fs:[0x28]
0x400538:	je	0x40053f
<Block for 0x4004eb, 3 bytes>
0x4004eb:	nop	
0x4004ec:	jmp	0x4004f2
<Block for 0x4003f0, 18 bytes>
0x4003f0:	mov	eax, dword ptr [rbp - 0x98]
0x4003f6:	mov	esi, 5
0x4003fb:	mov	edi, eax
0x4003fd:	call	0x500030
<Block for 0x40053f, 2 bytes>
0x40053f:	leave	
0x400540:	ret	
<Block for 0x40053a, 5 bytes>
0x40053a:	call	0x500060
<Block for 0x400402, 9 bytes>
0x400402:	cmp	eax, -1
0x400405:	je	0x4004ee
<Block for 0x4004ee, 3 bytes>
0x4004ee:	nop	
0x4004ef:	jmp	0x4004f2
<Block for 0x40040b, 23 bytes>
0x40040b:	mov	eax, dword ptr [rbp - 0x98]
0x400411:	mov	edx, 0
0x400416:	mov	esi, 0
0x40041b:	mov	edi, eax
0x40041d:	call	0x500038
<Block for 0x400422, 19 bytes>
0x400422:	mov	dword ptr [rbp - 0x9c], eax
0x400428:	cmp	dword ptr [rbp - 0x9c], -1
0x40042f:	je	0x4004f1
<Block for 0x400435, 52 bytes>
0x400435:	mov	rax, qword ptr [rbp - 0x90]
0x40043c:	mov	edx, 0x63
0x400441:	sub	edx, eax
0x400443:	mov	eax, edx
0x400445:	movsxd	rdx, eax
0x400448:	lea	rcx, [rbp - 0x70]
0x40044c:	mov	rax, qword ptr [rbp - 0x90]
0x400453:	lea	rsi, [rcx + rax]
0x400457:	mov	eax, dword ptr [rbp - 0x9c]
0x40045d:	mov	ecx, 0
0x400462:	mov	edi, eax
0x400464:	call	0x500040
<Block for 0x4004f1, 1 bytes>
0x4004f1:	nop	
<Block for 0x400469, 15 bytes>
0x400469:	mov	dword ptr [rbp - 0x94], eax
0x40046f:	cmp	dword ptr [rbp - 0x94], -1
0x400476:	je	0x4004f2
<Block for 0x400478, 9 bytes>
0x400478:	cmp	dword ptr [rbp - 0x94], 0
0x40047f:	je	0x4004f2
<Block for 0x400481, 30 bytes>
0x400481:	mov	eax, dword ptr [rbp - 0x94]
0x400487:	cdqe	
0x400489:	mov	byte ptr [rbp + rax - 0x70], 0
0x40048e:	lea	rax, [rbp - 0x70]
0x400492:	mov	esi, 0xd
0x400497:	mov	rdi, rax
0x40049a:	call	0x500048
<Block for 0x40049f, 17 bytes>
0x40049f:	mov	qword ptr [rbp - 0x88], rax
0x4004a6:	cmp	qword ptr [rbp - 0x88], 0
0x4004ae:	je	0x4004ba
<Block for 0x4004ba, 17 bytes>
0x4004ba:	lea	rax, [rbp - 0x70]
0x4004be:	mov	esi, 0xa
0x4004c3:	mov	rdi, rax
0x4004c6:	call	0x500048
<Block for 0x4004b0, 27 bytes>
0x4004b0:	mov	rax, qword ptr [rbp - 0x88]
0x4004b7:	mov	byte ptr [rax], 0
0x4004ba:	lea	rax, [rbp - 0x70]
0x4004be:	mov	esi, 0xa
0x4004c3:	mov	rdi, rax
0x4004c6:	call	0x500048
<Block for 0x4004cb, 17 bytes>
0x4004cb:	mov	qword ptr [rbp - 0x88], rax
0x4004d2:	cmp	qword ptr [rbp - 0x88], 0
0x4004da:	je	0x4004f2
<Block for 0x4004dc, 12 bytes>
0x4004dc:	mov	rax, qword ptr [rbp - 0x88]
0x4004e3:	mov	byte ptr [rax], 0
0x4004e6:	jmp	0x4004f2
