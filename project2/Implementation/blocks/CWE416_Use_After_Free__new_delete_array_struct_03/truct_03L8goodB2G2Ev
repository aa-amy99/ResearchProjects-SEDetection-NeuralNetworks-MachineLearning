<Block for 0x40010e, 30 bytes>
0x40010e:	endbr64	
0x400112:	push	rbp
0x400113:	mov	rbp, rsp
0x400116:	sub	rsp, 0x10
0x40011a:	mov	qword ptr [rbp - 8], 0
0x400122:	mov	edi, 0x320
0x400127:	call	0x500000
<Block for 0x40012c, 19 bytes>
0x40012c:	mov	qword ptr [rbp - 8], rax
0x400130:	mov	qword ptr [rbp - 0x10], 0
0x400138:	cmp	qword ptr [rbp - 0x10], 0x63
0x40013d:	ja	0x400179
<Block for 0x40013f, 58 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x10]
0x400143:	lea	rdx, [rax*8]
0x40014b:	mov	rax, qword ptr [rbp - 8]
0x40014f:	add	rax, rdx
0x400152:	mov	dword ptr [rax], 1
0x400158:	mov	rax, qword ptr [rbp - 0x10]
0x40015c:	lea	rdx, [rax*8]
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	add	rax, rdx
0x40016b:	mov	dword ptr [rax + 4], 2
0x400172:	add	qword ptr [rbp - 0x10], 1
0x400177:	jmp	0x400138
<Block for 0x400179, 7 bytes>
0x400179:	cmp	qword ptr [rbp - 8], 0
0x40017e:	je	0x40018c
<Block for 0x400138, 7 bytes>
0x400138:	cmp	qword ptr [rbp - 0x10], 0x63
0x40013d:	ja	0x400179
<Block for 0x40018c, 3 bytes>
0x40018c:	nop	
0x40018d:	leave	
0x40018e:	ret	
<Block for 0x400180, 12 bytes>
0x400180:	mov	rax, qword ptr [rbp - 8]
0x400184:	mov	rdi, rax
0x400187:	call	0x500008
