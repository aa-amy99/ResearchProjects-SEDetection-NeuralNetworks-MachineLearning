<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x90]
0x400026:	mov	rdi, rax
0x400029:	call	0x400412
<Block for 0x40002e, 55 bytes>
0x40002e:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x400038:	mov	qword ptr [rbp - 0x26], 0
0x400040:	mov	dword ptr [rbp - 0x1e], 0
0x400047:	mov	word ptr [rbp - 0x1a], 0
0x40004d:	mov	rdx, qword ptr [rip + 0xfffac]
0x400054:	lea	rax, [rbp - 0x26]
0x400058:	mov	esi, 0xe
0x40005d:	mov	rdi, rax
0x400060:	call	0x500008
<Block for 0x400065, 10 bytes>
0x400065:	test	rax, rax
0x400068:	setne	al
0x40006b:	test	al, al
0x40006d:	je	0x400083
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0x274]
0x40008a:	call	0x500018
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rax, [rbp - 0x26]
0x400073:	mov	rdi, rax
0x400076:	call	0x500010
<Block for 0x40008f, 29 bytes>
0x40008f:	mov	dword ptr [rbp - 0x60], 0
0x400096:	lea	rdx, [rbp - 0x60]
0x40009a:	lea	rax, [rbp - 0x90]
0x4000a1:	mov	rsi, rdx
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x4005ca
<Block for 0x40007b, 8 bytes>
0x40007b:	mov	dword ptr [rbp - 0x94], eax
0x400081:	jmp	0x40008f
<Block for 0x4000ac, 37 bytes>
0x4000ac:	mov	edx, dword ptr [rbp - 0x94]
0x4000b2:	mov	dword ptr [rax], edx
0x4000b4:	mov	dword ptr [rbp - 0x60], 1
0x4000bb:	lea	rdx, [rbp - 0x60]
0x4000bf:	lea	rax, [rbp - 0x90]
0x4000c6:	mov	rsi, rdx
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x4005ca
<Block for 0x4000d1, 37 bytes>
0x4000d1:	mov	edx, dword ptr [rbp - 0x94]
0x4000d7:	mov	dword ptr [rax], edx
0x4000d9:	mov	dword ptr [rbp - 0x60], 2
0x4000e0:	lea	rdx, [rbp - 0x60]
0x4000e4:	lea	rax, [rbp - 0x90]
0x4000eb:	mov	rsi, rdx
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x4005ca
<Block for 0x4000f6, 30 bytes>
0x4000f6:	mov	edx, dword ptr [rbp - 0x94]
0x4000fc:	mov	dword ptr [rax], edx
0x4000fe:	lea	rdx, [rbp - 0x90]
0x400105:	lea	rax, [rbp - 0x60]
0x400109:	mov	rsi, rdx
0x40010c:	mov	rdi, rax
0x40010f:	call	0x400452
<Block for 0x400114, 12 bytes>
0x400114:	lea	rax, [rbp - 0x60]
0x400118:	mov	rdi, rax
0x40011b:	call	0x500020
<Block for 0x400120, 12 bytes>
0x400120:	lea	rax, [rbp - 0x60]
0x400124:	mov	rdi, rax
0x400127:	call	0x400432
<Block for 0x40012c, 15 bytes>
0x40012c:	lea	rax, [rbp - 0x90]
0x400133:	mov	rdi, rax
0x400136:	call	0x400432
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 0x18]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400188
<Block for 0x400188, 10 bytes>
0x400188:	add	rsp, 0x98
0x40018f:	pop	rbx
0x400190:	pop	rbp
0x400191:	ret	
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x400183
<Block for 0x400183, 5 bytes>
0x400183:	call	0x500030
