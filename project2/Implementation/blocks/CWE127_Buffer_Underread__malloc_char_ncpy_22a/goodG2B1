<Block for 0x4000a0, 57 bytes>
0x4000a0:	endbr64	
0x4000a4:	push	rbp
0x4000a5:	mov	rbp, rsp
0x4000a8:	add	rsp, -0x80
0x4000ac:	mov	rax, qword ptr fs:[0x28]
0x4000b5:	mov	qword ptr [rbp - 8], rax
0x4000b9:	xor	eax, eax
0x4000bb:	mov	qword ptr [rbp - 0x78], 0
0x4000c3:	mov	dword ptr [rip + 0x137], 0
0x4000cd:	mov	rax, qword ptr [rbp - 0x78]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500030
<Block for 0x4000d9, 26 bytes>
0x4000d9:	mov	qword ptr [rbp - 0x78], rax
0x4000dd:	lea	rax, [rbp - 0x70]
0x4000e1:	mov	edx, 0x63
0x4000e6:	mov	esi, 0x43
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500008
<Block for 0x4000f3, 16 bytes>
0x4000f3:	mov	byte ptr [rbp - 0xd], 0
0x4000f7:	lea	rax, [rbp - 0x70]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500010
<Block for 0x400103, 22 bytes>
0x400103:	mov	rdx, rax
0x400106:	mov	rcx, qword ptr [rbp - 0x78]
0x40010a:	lea	rax, [rbp - 0x70]
0x40010e:	mov	rsi, rcx
0x400111:	mov	rdi, rax
0x400114:	call	0x500018
<Block for 0x400119, 16 bytes>
0x400119:	mov	byte ptr [rbp - 0xd], 0
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	rdi, rax
0x400124:	call	0x500020
<Block for 0x400129, 16 bytes>
0x400129:	nop	
0x40012a:	mov	rax, qword ptr [rbp - 8]
0x40012e:	xor	rax, qword ptr fs:[0x28]
0x400137:	je	0x40013e
<Block for 0x40013e, 2 bytes>
0x40013e:	leave	
0x40013f:	ret	
<Block for 0x400139, 5 bytes>
0x400139:	call	0x500028
