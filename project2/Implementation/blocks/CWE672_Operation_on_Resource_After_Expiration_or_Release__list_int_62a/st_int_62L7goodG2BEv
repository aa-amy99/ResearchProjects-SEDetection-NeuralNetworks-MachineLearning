<Block for 0x40014f, 40 bytes>
0x40014f:	endbr64	
0x400153:	push	rbp
0x400154:	mov	rbp, rsp
0x400157:	push	rbx
0x400158:	sub	rsp, 0x38
0x40015c:	mov	rax, qword ptr fs:[0x28]
0x400165:	mov	qword ptr [rbp - 0x18], rax
0x400169:	xor	eax, eax
0x40016b:	lea	rax, [rbp - 0x30]
0x40016f:	mov	rdi, rax
0x400172:	call	0x4004f0
<Block for 0x400177, 12 bytes>
0x400177:	lea	rax, [rbp - 0x30]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500048
<Block for 0x400183, 12 bytes>
0x400183:	lea	rax, [rbp - 0x40]
0x400187:	mov	rdi, rax
0x40018a:	call	0x4005d8
<Block for 0x40018f, 19 bytes>
0x40018f:	lea	rsi, [rip + 0x2ae]
0x400196:	lea	rdi, [rip + 0xffe6b]
0x40019d:	call	0x500010
<Block for 0x4001a2, 12 bytes>
0x4001a2:	lea	rax, [rbp - 0x30]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x4005f2
<Block for 0x4001ae, 16 bytes>
0x4001ae:	mov	qword ptr [rbp - 0x40], rax
0x4001b2:	lea	rax, [rbp - 0x30]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x400642
<Block for 0x4001be, 23 bytes>
0x4001be:	mov	qword ptr [rbp - 0x38], rax
0x4001c2:	lea	rdx, [rbp - 0x38]
0x4001c6:	lea	rax, [rbp - 0x40]
0x4001ca:	mov	rsi, rdx
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x40068e
<Block for 0x4001d5, 4 bytes>
0x4001d5:	test	al, al
0x4001d7:	je	0x400240
<Block for 0x400240, 22 bytes>
0x400240:	mov	rax, qword ptr [rip + 0xffde1]
0x400247:	mov	rsi, rax
0x40024a:	lea	rdi, [rip + 0xffdb7]
0x400251:	call	0x500030
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rax, [rbp - 0x40]
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x40070c
<Block for 0x400256, 12 bytes>
0x400256:	lea	rax, [rbp - 0x30]
0x40025a:	mov	rdi, rax
0x40025d:	call	0x400510
<Block for 0x4001e5, 11 bytes>
0x4001e5:	mov	eax, dword ptr [rax]
0x4001e7:	test	eax, eax
0x4001e9:	sete	al
0x4001ec:	test	al, al
0x4001ee:	je	0x4001fc
<Block for 0x400262, 16 bytes>
0x400262:	nop	
0x400263:	mov	rax, qword ptr [rbp - 0x18]
0x400267:	xor	rax, qword ptr fs:[0x28]
0x400270:	je	0x400297
<Block for 0x4001fc, 19 bytes>
0x4001fc:	lea	rsi, [rip + 0x255]
0x400203:	lea	rdi, [rip + 0xffdfe]
0x40020a:	call	0x500010
<Block for 0x4001f0, 12 bytes>
0x4001f0:	lea	rax, [rbp - 0x30]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x40072e
<Block for 0x400297, 7 bytes>
0x400297:	add	rsp, 0x38
0x40029b:	pop	rbx
0x40029c:	pop	rbp
0x40029d:	ret	
<Block for 0x400272, 2 bytes>
0x400272:	jmp	0x400292
<Block for 0x40020f, 15 bytes>
0x40020f:	mov	rbx, rax
0x400212:	lea	rax, [rbp - 0x40]
0x400216:	mov	rdi, rax
0x400219:	call	0x40070c
<Block for 0x400292, 5 bytes>
0x400292:	call	0x500040
<Block for 0x40021e, 12 bytes>
0x40021e:	mov	eax, dword ptr [rax]
0x400220:	mov	esi, eax
0x400222:	mov	rdi, rbx
0x400225:	call	0x500018
<Block for 0x40022a, 17 bytes>
0x40022a:	lea	rax, [rbp - 0x40]
0x40022e:	mov	esi, 0
0x400233:	mov	rdi, rax
0x400236:	call	0x4006b4
<Block for 0x40023b, 5 bytes>
0x40023b:	jmp	0x4001b2
<Block for 0x4001b2, 12 bytes>
0x4001b2:	lea	rax, [rbp - 0x30]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x400642
