<Block for 0x4000ab, 79 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x20
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000cd:	mov	qword ptr [rbp - 0x16], 0
0x4000d5:	mov	dword ptr [rbp - 0xe], 0
0x4000dc:	mov	word ptr [rbp - 0xa], 0
0x4000e2:	mov	rdx, qword ptr [rip + 0xfff2f]
0x4000e9:	lea	rax, [rbp - 0x16]
0x4000ed:	mov	esi, 0xe
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500020
<Block for 0x4000fa, 5 bytes>
0x4000fa:	test	rax, rax
0x4000fd:	je	0x400110
<Block for 0x400110, 12 bytes>
0x400110:	lea	rdi, [rip + 0x411]
0x400117:	call	0x500008
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rax, [rbp - 0x16]
0x400103:	mov	rdi, rax
0x400106:	call	0x500028
<Block for 0x40011c, 20 bytes>
0x40011c:	mov	dword ptr [rip + 0x3d2], 1
0x400126:	mov	eax, dword ptr [rbp - 0x1c]
0x400129:	mov	edi, eax
0x40012b:	call	0x400000
<Block for 0x40010b, 5 bytes>
0x40010b:	mov	dword ptr [rbp - 0x1c], eax
0x40010e:	jmp	0x40011c
<Block for 0x400130, 16 bytes>
0x400130:	nop	
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	xor	rax, qword ptr fs:[0x28]
0x40013e:	je	0x400145
<Block for 0x400145, 2 bytes>
0x400145:	leave	
0x400146:	ret	
<Block for 0x400140, 5 bytes>
0x400140:	call	0x500010
