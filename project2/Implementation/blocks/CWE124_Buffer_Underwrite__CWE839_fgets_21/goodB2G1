<Block for 0x400208, 79 bytes>
0x400208:	endbr64	
0x40020c:	push	rbp
0x40020d:	mov	rbp, rsp
0x400210:	sub	rsp, 0x20
0x400214:	mov	rax, qword ptr fs:[0x28]
0x40021d:	mov	qword ptr [rbp - 8], rax
0x400221:	xor	eax, eax
0x400223:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40022a:	mov	qword ptr [rbp - 0x16], 0
0x400232:	mov	dword ptr [rbp - 0xe], 0
0x400239:	mov	word ptr [rbp - 0xa], 0
0x40023f:	mov	rdx, qword ptr [rip + 0xffdd2]
0x400246:	lea	rax, [rbp - 0x16]
0x40024a:	mov	esi, 0xe
0x40024f:	mov	rdi, rax
0x400252:	call	0x500020
<Block for 0x400257, 5 bytes>
0x400257:	test	rax, rax
0x40025a:	je	0x40026d
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rdi, [rip + 0x2b4]
0x400274:	call	0x500008
<Block for 0x40025c, 12 bytes>
0x40025c:	lea	rax, [rbp - 0x16]
0x400260:	mov	rdi, rax
0x400263:	call	0x500028
<Block for 0x400279, 20 bytes>
0x400279:	mov	dword ptr [rip + 0x279], 0
0x400283:	mov	eax, dword ptr [rbp - 0x1c]
0x400286:	mov	edi, eax
0x400288:	call	0x400147
<Block for 0x400268, 5 bytes>
0x400268:	mov	dword ptr [rbp - 0x1c], eax
0x40026b:	jmp	0x400279
<Block for 0x40028d, 16 bytes>
0x40028d:	nop	
0x40028e:	mov	rax, qword ptr [rbp - 8]
0x400292:	xor	rax, qword ptr fs:[0x28]
0x40029b:	je	0x4002a2
<Block for 0x4002a2, 2 bytes>
0x4002a2:	leave	
0x4002a3:	ret	
<Block for 0x40029d, 5 bytes>
0x40029d:	call	0x500010
