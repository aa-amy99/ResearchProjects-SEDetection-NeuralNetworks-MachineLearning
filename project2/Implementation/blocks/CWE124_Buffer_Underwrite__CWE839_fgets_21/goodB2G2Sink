<Block for 0x4002a4, 40 bytes>
0x4002a4:	endbr64	
0x4002a8:	push	rbp
0x4002a9:	mov	rbp, rsp
0x4002ac:	sub	rsp, 0x50
0x4002b0:	mov	dword ptr [rbp - 0x44], edi
0x4002b3:	mov	rax, qword ptr fs:[0x28]
0x4002bc:	mov	qword ptr [rbp - 8], rax
0x4002c0:	xor	eax, eax
0x4002c2:	mov	eax, dword ptr [rip + 0x238]
0x4002c8:	test	eax, eax
0x4002ca:	je	0x400340
<Block for 0x400340, 16 bytes>
0x400340:	nop	
0x400341:	mov	rax, qword ptr [rbp - 8]
0x400345:	xor	rax, qword ptr fs:[0x28]
0x40034e:	je	0x400355
<Block for 0x4002cc, 46 bytes>
0x4002cc:	mov	qword ptr [rbp - 0x30], 0
0x4002d4:	mov	qword ptr [rbp - 0x28], 0
0x4002dc:	mov	qword ptr [rbp - 0x20], 0
0x4002e4:	mov	qword ptr [rbp - 0x18], 0
0x4002ec:	mov	qword ptr [rbp - 0x10], 0
0x4002f4:	cmp	dword ptr [rbp - 0x44], 0
0x4002f8:	js	0x400332
<Block for 0x400355, 2 bytes>
0x400355:	leave	
0x400356:	ret	
<Block for 0x400350, 5 bytes>
0x400350:	call	0x500010
<Block for 0x400332, 12 bytes>
0x400332:	lea	rdi, [rip + 0x217]
0x400339:	call	0x500008
<Block for 0x4002fa, 6 bytes>
0x4002fa:	cmp	dword ptr [rbp - 0x44], 9
0x4002fe:	jg	0x400332
<Block for 0x40033e, 2 bytes>
0x40033e:	jmp	0x400340
<Block for 0x400300, 22 bytes>
0x400300:	mov	eax, dword ptr [rbp - 0x44]
0x400303:	cdqe	
0x400305:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40030d:	mov	dword ptr [rbp - 0x34], 0
0x400314:	jmp	0x40032a
<Block for 0x40032a, 6 bytes>
0x40032a:	cmp	dword ptr [rbp - 0x34], 9
0x40032e:	jle	0x400316
<Block for 0x400316, 16 bytes>
0x400316:	mov	eax, dword ptr [rbp - 0x34]
0x400319:	cdqe	
0x40031b:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40031f:	mov	edi, eax
0x400321:	call	0x500000
<Block for 0x400330, 2 bytes>
0x400330:	jmp	0x400340
<Block for 0x400326, 10 bytes>
0x400326:	add	dword ptr [rbp - 0x34], 1
0x40032a:	cmp	dword ptr [rbp - 0x34], 9
0x40032e:	jle	0x400316
