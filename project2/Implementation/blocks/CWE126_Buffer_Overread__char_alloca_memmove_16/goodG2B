<Block for 0x4001e2, 84 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0x90
0x4001f1:	mov	rax, qword ptr fs:[0x28]
0x4001fa:	mov	qword ptr [rbp - 8], rax
0x4001fe:	xor	eax, eax
0x400200:	mov	eax, 0x10
0x400205:	sub	rax, 1
0x400209:	add	rax, 0x3a
0x40020d:	mov	ecx, 0x10
0x400212:	mov	edx, 0
0x400217:	div	rcx
0x40021a:	imul	rax, rax, 0x10
0x40021e:	mov	rdx, rax
0x400221:	and	rdx, 0xfffffffffffff000
0x400228:	mov	rcx, rsp
0x40022b:	sub	rcx, rdx
0x40022e:	mov	rdx, rcx
0x400231:	cmp	rsp, rdx
0x400234:	je	0x400248
<Block for 0x400248, 26 bytes>
0x400248:	mov	rdx, rax
0x40024b:	and	edx, 0xfff
0x400251:	sub	rsp, rdx
0x400254:	mov	rdx, rax
0x400257:	and	edx, 0xfff
0x40025d:	test	rdx, rdx
0x400260:	je	0x400272
<Block for 0x400236, 18 bytes>
0x400236:	sub	rsp, 0x1000
0x40023d:	or	qword ptr [rsp + 0xff8], 0
0x400246:	jmp	0x400231
<Block for 0x400272, 76 bytes>
0x400272:	mov	rax, rsp
0x400275:	add	rax, 0xf
0x400279:	shr	rax, 4
0x40027d:	shl	rax, 4
0x400281:	mov	qword ptr [rbp - 0x88], rax
0x400288:	mov	eax, 0x10
0x40028d:	sub	rax, 1
0x400291:	add	rax, 0x6c
0x400295:	mov	edi, 0x10
0x40029a:	mov	edx, 0
0x40029f:	div	rdi
0x4002a2:	imul	rax, rax, 0x10
0x4002a6:	mov	rdx, rax
0x4002a9:	and	rdx, 0xfffffffffffff000
0x4002b0:	mov	rsi, rsp
0x4002b3:	sub	rsi, rdx
0x4002b6:	mov	rdx, rsi
0x4002b9:	cmp	rsp, rdx
0x4002bc:	je	0x4002d0
<Block for 0x400262, 92 bytes>
0x400262:	and	eax, 0xfff
0x400267:	sub	rax, 8
0x40026b:	add	rax, rsp
0x40026e:	or	qword ptr [rax], 0
0x400272:	mov	rax, rsp
0x400275:	add	rax, 0xf
0x400279:	shr	rax, 4
0x40027d:	shl	rax, 4
0x400281:	mov	qword ptr [rbp - 0x88], rax
0x400288:	mov	eax, 0x10
0x40028d:	sub	rax, 1
0x400291:	add	rax, 0x6c
0x400295:	mov	edi, 0x10
0x40029a:	mov	edx, 0
0x40029f:	div	rdi
0x4002a2:	imul	rax, rax, 0x10
0x4002a6:	mov	rdx, rax
0x4002a9:	and	rdx, 0xfffffffffffff000
0x4002b0:	mov	rsi, rsp
0x4002b3:	sub	rsi, rdx
0x4002b6:	mov	rdx, rsi
0x4002b9:	cmp	rsp, rdx
0x4002bc:	je	0x4002d0
<Block for 0x400231, 5 bytes>
0x400231:	cmp	rsp, rdx
0x400234:	je	0x400248
<Block for 0x4002d0, 26 bytes>
0x4002d0:	mov	rdx, rax
0x4002d3:	and	edx, 0xfff
0x4002d9:	sub	rsp, rdx
0x4002dc:	mov	rdx, rax
0x4002df:	and	edx, 0xfff
0x4002e5:	test	rdx, rdx
0x4002e8:	je	0x4002fa
<Block for 0x4002be, 18 bytes>
0x4002be:	sub	rsp, 0x1000
0x4002c5:	or	qword ptr [rsp + 0xff8], 0
0x4002ce:	jmp	0x4002b9
<Block for 0x4002fa, 44 bytes>
0x4002fa:	mov	rax, rsp
0x4002fd:	add	rax, 0xf
0x400301:	shr	rax, 4
0x400305:	shl	rax, 4
0x400309:	mov	qword ptr [rbp - 0x80], rax
0x40030d:	mov	rax, qword ptr [rbp - 0x88]
0x400314:	mov	edx, 0x31
0x400319:	mov	esi, 0x41
0x40031e:	mov	rdi, rax
0x400321:	call	0x500000
<Block for 0x4002ea, 60 bytes>
0x4002ea:	and	eax, 0xfff
0x4002ef:	sub	rax, 8
0x4002f3:	add	rax, rsp
0x4002f6:	or	qword ptr [rax], 0
0x4002fa:	mov	rax, rsp
0x4002fd:	add	rax, 0xf
0x400301:	shr	rax, 4
0x400305:	shl	rax, 4
0x400309:	mov	qword ptr [rbp - 0x80], rax
0x40030d:	mov	rax, qword ptr [rbp - 0x88]
0x400314:	mov	edx, 0x31
0x400319:	mov	esi, 0x41
0x40031e:	mov	rdi, rax
0x400321:	call	0x500000
<Block for 0x4002b9, 5 bytes>
0x4002b9:	cmp	rsp, rdx
0x4002bc:	je	0x4002d0
<Block for 0x400326, 36 bytes>
0x400326:	mov	rax, qword ptr [rbp - 0x88]
0x40032d:	add	rax, 0x31
0x400331:	mov	byte ptr [rax], 0
0x400334:	mov	rax, qword ptr [rbp - 0x80]
0x400338:	mov	edx, 0x63
0x40033d:	mov	esi, 0x41
0x400342:	mov	rdi, rax
0x400345:	call	0x500000
<Block for 0x40034a, 42 bytes>
0x40034a:	mov	rax, qword ptr [rbp - 0x80]
0x40034e:	add	rax, 0x63
0x400352:	mov	byte ptr [rax], 0
0x400355:	mov	rax, qword ptr [rbp - 0x80]
0x400359:	mov	qword ptr [rbp - 0x78], rax
0x40035d:	nop	
0x40035e:	lea	rax, [rbp - 0x70]
0x400362:	mov	edx, 0x63
0x400367:	mov	esi, 0x43
0x40036c:	mov	rdi, rax
0x40036f:	call	0x500000
<Block for 0x400374, 16 bytes>
0x400374:	mov	byte ptr [rbp - 0xd], 0
0x400378:	lea	rax, [rbp - 0x70]
0x40037c:	mov	rdi, rax
0x40037f:	call	0x500008
<Block for 0x400384, 22 bytes>
0x400384:	mov	rdx, rax
0x400387:	mov	rcx, qword ptr [rbp - 0x78]
0x40038b:	lea	rax, [rbp - 0x70]
0x40038f:	mov	rsi, rcx
0x400392:	mov	rdi, rax
0x400395:	call	0x500010
<Block for 0x40039a, 16 bytes>
0x40039a:	mov	byte ptr [rbp - 0xd], 0
0x40039e:	lea	rax, [rbp - 0x70]
0x4003a2:	mov	rdi, rax
0x4003a5:	call	0x500018
<Block for 0x4003aa, 16 bytes>
0x4003aa:	nop	
0x4003ab:	mov	rax, qword ptr [rbp - 8]
0x4003af:	xor	rax, qword ptr fs:[0x28]
0x4003b8:	je	0x4003bf
<Block for 0x4003bf, 2 bytes>
0x4003bf:	leave	
0x4003c0:	ret	
<Block for 0x4003ba, 5 bytes>
0x4003ba:	call	0x500020
