<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	eax, dword ptr [rip + 0xfffdb]
0x400025:	test	eax, eax
0x400027:	je	0x400166
<Block for 0x400166, 19 bytes>
0x400166:	mov	rax, qword ptr [rbp - 0x48]
0x40016a:	mov	rcx, qword ptr [rbp - 8]
0x40016e:	xor	rcx, qword ptr fs:[0x28]
0x400177:	je	0x40017e
<Block for 0x40002d, 19 bytes>
0x40002d:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400034:	mov	rax, qword ptr [rbp - 0x48]
0x400038:	mov	rdi, rax
0x40003b:	call	0x500008
<Block for 0x40017e, 2 bytes>
0x40017e:	leave	
0x40017f:	ret	
<Block for 0x400179, 5 bytes>
0x400179:	call	0x500050
<Block for 0x400040, 24 bytes>
0x400040:	mov	qword ptr [rbp - 0x30], rax
0x400044:	mov	edx, 6
0x400049:	mov	esi, 1
0x40004e:	mov	edi, 2
0x400053:	call	0x500010
<Block for 0x400058, 13 bytes>
0x400058:	mov	dword ptr [rbp - 0x38], eax
0x40005b:	cmp	dword ptr [rbp - 0x38], -1
0x40005f:	je	0x400152
<Block for 0x400152, 3 bytes>
0x400152:	nop	
0x400153:	jmp	0x400156
<Block for 0x400065, 22 bytes>
0x400065:	lea	rax, [rbp - 0x20]
0x400069:	mov	edx, 0x10
0x40006e:	mov	esi, 0
0x400073:	mov	rdi, rax
0x400076:	call	0x500018
<Block for 0x400156, 6 bytes>
0x400156:	cmp	dword ptr [rbp - 0x38], -1
0x40015a:	je	0x400166
<Block for 0x40007b, 18 bytes>
0x40007b:	mov	word ptr [rbp - 0x20], 2
0x400081:	lea	rdi, [rip + 0x1a8]
0x400088:	call	0x500020
<Block for 0x40015c, 10 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x38]
0x40015f:	mov	edi, eax
0x400161:	call	0x500048
<Block for 0x40008d, 13 bytes>
0x40008d:	mov	dword ptr [rbp - 0x1c], eax
0x400090:	mov	edi, 0x6987
0x400095:	call	0x500028
<Block for 0x40009a, 26 bytes>
0x40009a:	mov	word ptr [rbp - 0x1e], ax
0x40009e:	lea	rcx, [rbp - 0x20]
0x4000a2:	mov	eax, dword ptr [rbp - 0x38]
0x4000a5:	mov	edx, 0x10
0x4000aa:	mov	rsi, rcx
0x4000ad:	mov	edi, eax
0x4000af:	call	0x500030
<Block for 0x4000b4, 9 bytes>
0x4000b4:	cmp	eax, -1
0x4000b7:	je	0x400155
<Block for 0x4000bd, 39 bytes>
0x4000bd:	mov	eax, 0xf9
0x4000c2:	sub	rax, qword ptr [rbp - 0x30]
0x4000c6:	mov	rdx, rax
0x4000c9:	mov	rcx, qword ptr [rbp - 0x48]
0x4000cd:	mov	rax, qword ptr [rbp - 0x30]
0x4000d1:	lea	rsi, [rcx + rax]
0x4000d5:	mov	eax, dword ptr [rbp - 0x38]
0x4000d8:	mov	ecx, 0
0x4000dd:	mov	edi, eax
0x4000df:	call	0x500038
<Block for 0x400155, 1 bytes>
0x400155:	nop	
<Block for 0x4000e4, 9 bytes>
0x4000e4:	mov	dword ptr [rbp - 0x34], eax
0x4000e7:	cmp	dword ptr [rbp - 0x34], -1
0x4000eb:	je	0x400156
<Block for 0x4000ed, 6 bytes>
0x4000ed:	cmp	dword ptr [rbp - 0x34], 0
0x4000f1:	je	0x400156
<Block for 0x4000f3, 40 bytes>
0x4000f3:	mov	eax, dword ptr [rbp - 0x34]
0x4000f6:	movsxd	rdx, eax
0x4000f9:	mov	rax, qword ptr [rbp - 0x30]
0x4000fd:	add	rdx, rax
0x400100:	mov	rax, qword ptr [rbp - 0x48]
0x400104:	add	rax, rdx
0x400107:	mov	byte ptr [rax], 0
0x40010a:	mov	rax, qword ptr [rbp - 0x48]
0x40010e:	mov	esi, 0xd
0x400113:	mov	rdi, rax
0x400116:	call	0x500040
<Block for 0x40011b, 11 bytes>
0x40011b:	mov	qword ptr [rbp - 0x28], rax
0x40011f:	cmp	qword ptr [rbp - 0x28], 0
0x400124:	je	0x40012d
<Block for 0x40012d, 17 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x48]
0x400131:	mov	esi, 0xa
0x400136:	mov	rdi, rax
0x400139:	call	0x500040
<Block for 0x400126, 24 bytes>
0x400126:	mov	rax, qword ptr [rbp - 0x28]
0x40012a:	mov	byte ptr [rax], 0
0x40012d:	mov	rax, qword ptr [rbp - 0x48]
0x400131:	mov	esi, 0xa
0x400136:	mov	rdi, rax
0x400139:	call	0x500040
<Block for 0x40013e, 11 bytes>
0x40013e:	mov	qword ptr [rbp - 0x28], rax
0x400142:	cmp	qword ptr [rbp - 0x28], 0
0x400147:	je	0x400156
<Block for 0x400149, 9 bytes>
0x400149:	mov	rax, qword ptr [rbp - 0x28]
0x40014d:	mov	byte ptr [rax], 0
0x400150:	jmp	0x400156
