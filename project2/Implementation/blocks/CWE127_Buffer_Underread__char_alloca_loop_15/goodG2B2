<Block for 0x4002a0, 84 bytes>
0x4002a0:	endbr64	
0x4002a4:	push	rbp
0x4002a5:	mov	rbp, rsp
0x4002a8:	sub	rsp, 0x90
0x4002af:	mov	rax, qword ptr fs:[0x28]
0x4002b8:	mov	qword ptr [rbp - 8], rax
0x4002bc:	xor	eax, eax
0x4002be:	mov	eax, 0x10
0x4002c3:	sub	rax, 1
0x4002c7:	add	rax, 0x6c
0x4002cb:	mov	esi, 0x10
0x4002d0:	mov	edx, 0
0x4002d5:	div	rsi
0x4002d8:	imul	rax, rax, 0x10
0x4002dc:	mov	rdx, rax
0x4002df:	and	rdx, 0xfffffffffffff000
0x4002e6:	mov	rcx, rsp
0x4002e9:	sub	rcx, rdx
0x4002ec:	mov	rdx, rcx
0x4002ef:	cmp	rsp, rdx
0x4002f2:	je	0x400306
<Block for 0x400306, 26 bytes>
0x400306:	mov	rdx, rax
0x400309:	and	edx, 0xfff
0x40030f:	sub	rsp, rdx
0x400312:	mov	rdx, rax
0x400315:	and	edx, 0xfff
0x40031b:	test	rdx, rdx
0x40031e:	je	0x400330
<Block for 0x4002f4, 18 bytes>
0x4002f4:	sub	rsp, 0x1000
0x4002fb:	or	qword ptr [rsp + 0xff8], 0
0x400304:	jmp	0x4002ef
<Block for 0x400330, 41 bytes>
0x400330:	mov	rax, rsp
0x400333:	add	rax, 0xf
0x400337:	shr	rax, 4
0x40033b:	shl	rax, 4
0x40033f:	mov	qword ptr [rbp - 0x80], rax
0x400343:	mov	rax, qword ptr [rbp - 0x80]
0x400347:	mov	edx, 0x63
0x40034c:	mov	esi, 0x41
0x400351:	mov	rdi, rax
0x400354:	call	0x500000
<Block for 0x400320, 57 bytes>
0x400320:	and	eax, 0xfff
0x400325:	sub	rax, 8
0x400329:	add	rax, rsp
0x40032c:	or	qword ptr [rax], 0
0x400330:	mov	rax, rsp
0x400333:	add	rax, 0xf
0x400337:	shr	rax, 4
0x40033b:	shl	rax, 4
0x40033f:	mov	qword ptr [rbp - 0x80], rax
0x400343:	mov	rax, qword ptr [rbp - 0x80]
0x400347:	mov	edx, 0x63
0x40034c:	mov	esi, 0x41
0x400351:	mov	rdi, rax
0x400354:	call	0x500000
<Block for 0x4002ef, 5 bytes>
0x4002ef:	cmp	rsp, rdx
0x4002f2:	je	0x400306
<Block for 0x400359, 42 bytes>
0x400359:	mov	rax, qword ptr [rbp - 0x80]
0x40035d:	add	rax, 0x63
0x400361:	mov	byte ptr [rax], 0
0x400364:	mov	rax, qword ptr [rbp - 0x80]
0x400368:	mov	qword ptr [rbp - 0x78], rax
0x40036c:	nop	
0x40036d:	lea	rax, [rbp - 0x70]
0x400371:	mov	edx, 0x63
0x400376:	mov	esi, 0x43
0x40037b:	mov	rdi, rax
0x40037e:	call	0x500000
<Block for 0x400383, 17 bytes>
0x400383:	mov	byte ptr [rbp - 0xd], 0
0x400387:	mov	qword ptr [rbp - 0x88], 0
0x400392:	jmp	0x4003bd
<Block for 0x4003bd, 10 bytes>
0x4003bd:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003c5:	jbe	0x400394
<Block for 0x400394, 51 bytes>
0x400394:	mov	rdx, qword ptr [rbp - 0x78]
0x400398:	mov	rax, qword ptr [rbp - 0x88]
0x40039f:	add	rax, rdx
0x4003a2:	movzx	eax, byte ptr [rax]
0x4003a5:	lea	rcx, [rbp - 0x70]
0x4003a9:	mov	rdx, qword ptr [rbp - 0x88]
0x4003b0:	add	rdx, rcx
0x4003b3:	mov	byte ptr [rdx], al
0x4003b5:	add	qword ptr [rbp - 0x88], 1
0x4003bd:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003c5:	jbe	0x400394
<Block for 0x4003c7, 16 bytes>
0x4003c7:	mov	byte ptr [rbp - 0xd], 0
0x4003cb:	lea	rax, [rbp - 0x70]
0x4003cf:	mov	rdi, rax
0x4003d2:	call	0x500008
<Block for 0x4003d7, 16 bytes>
0x4003d7:	nop	
0x4003d8:	mov	rax, qword ptr [rbp - 8]
0x4003dc:	xor	rax, qword ptr fs:[0x28]
0x4003e5:	je	0x4003ec
<Block for 0x4003ec, 2 bytes>
0x4003ec:	leave	
0x4003ed:	ret	
<Block for 0x4003e7, 5 bytes>
0x4003e7:	call	0x500010
