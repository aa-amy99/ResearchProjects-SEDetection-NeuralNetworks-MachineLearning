<Block for 0x400152, 84 bytes>
0x400152:	endbr64	
0x400156:	push	rbp
0x400157:	mov	rbp, rsp
0x40015a:	sub	rsp, 0x90
0x400161:	mov	rax, qword ptr fs:[0x28]
0x40016a:	mov	qword ptr [rbp - 8], rax
0x40016e:	xor	eax, eax
0x400170:	mov	eax, 0x10
0x400175:	sub	rax, 1
0x400179:	add	rax, 0x6c
0x40017d:	mov	esi, 0x10
0x400182:	mov	edx, 0
0x400187:	div	rsi
0x40018a:	imul	rax, rax, 0x10
0x40018e:	mov	rdx, rax
0x400191:	and	rdx, 0xfffffffffffff000
0x400198:	mov	rcx, rsp
0x40019b:	sub	rcx, rdx
0x40019e:	mov	rdx, rcx
0x4001a1:	cmp	rsp, rdx
0x4001a4:	je	0x4001b8
<Block for 0x4001b8, 26 bytes>
0x4001b8:	mov	rdx, rax
0x4001bb:	and	edx, 0xfff
0x4001c1:	sub	rsp, rdx
0x4001c4:	mov	rdx, rax
0x4001c7:	and	edx, 0xfff
0x4001cd:	test	rdx, rdx
0x4001d0:	je	0x4001e2
<Block for 0x4001a6, 18 bytes>
0x4001a6:	sub	rsp, 0x1000
0x4001ad:	or	qword ptr [rsp + 0xff8], 0
0x4001b6:	jmp	0x4001a1
<Block for 0x4001e2, 41 bytes>
0x4001e2:	mov	rax, rsp
0x4001e5:	add	rax, 0xf
0x4001e9:	shr	rax, 4
0x4001ed:	shl	rax, 4
0x4001f1:	mov	qword ptr [rbp - 0x80], rax
0x4001f5:	mov	rax, qword ptr [rbp - 0x80]
0x4001f9:	mov	edx, 0x63
0x4001fe:	mov	esi, 0x41
0x400203:	mov	rdi, rax
0x400206:	call	0x500000
<Block for 0x4001d2, 57 bytes>
0x4001d2:	and	eax, 0xfff
0x4001d7:	sub	rax, 8
0x4001db:	add	rax, rsp
0x4001de:	or	qword ptr [rax], 0
0x4001e2:	mov	rax, rsp
0x4001e5:	add	rax, 0xf
0x4001e9:	shr	rax, 4
0x4001ed:	shl	rax, 4
0x4001f1:	mov	qword ptr [rbp - 0x80], rax
0x4001f5:	mov	rax, qword ptr [rbp - 0x80]
0x4001f9:	mov	edx, 0x63
0x4001fe:	mov	esi, 0x41
0x400203:	mov	rdi, rax
0x400206:	call	0x500000
<Block for 0x4001a1, 5 bytes>
0x4001a1:	cmp	rsp, rdx
0x4001a4:	je	0x4001b8
<Block for 0x40020b, 42 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x80]
0x40020f:	add	rax, 0x63
0x400213:	mov	byte ptr [rax], 0
0x400216:	mov	rax, qword ptr [rbp - 0x80]
0x40021a:	mov	qword ptr [rbp - 0x78], rax
0x40021e:	nop	
0x40021f:	lea	rax, [rbp - 0x70]
0x400223:	mov	edx, 0x63
0x400228:	mov	esi, 0x43
0x40022d:	mov	rdi, rax
0x400230:	call	0x500000
<Block for 0x400235, 17 bytes>
0x400235:	mov	byte ptr [rbp - 0xd], 0
0x400239:	mov	qword ptr [rbp - 0x88], 0
0x400244:	jmp	0x40026f
<Block for 0x40026f, 10 bytes>
0x40026f:	cmp	qword ptr [rbp - 0x88], 0x63
0x400277:	jbe	0x400246
<Block for 0x400246, 51 bytes>
0x400246:	mov	rdx, qword ptr [rbp - 0x78]
0x40024a:	mov	rax, qword ptr [rbp - 0x88]
0x400251:	add	rax, rdx
0x400254:	movzx	eax, byte ptr [rax]
0x400257:	lea	rcx, [rbp - 0x70]
0x40025b:	mov	rdx, qword ptr [rbp - 0x88]
0x400262:	add	rdx, rcx
0x400265:	mov	byte ptr [rdx], al
0x400267:	add	qword ptr [rbp - 0x88], 1
0x40026f:	cmp	qword ptr [rbp - 0x88], 0x63
0x400277:	jbe	0x400246
<Block for 0x400279, 16 bytes>
0x400279:	mov	byte ptr [rbp - 0xd], 0
0x40027d:	lea	rax, [rbp - 0x70]
0x400281:	mov	rdi, rax
0x400284:	call	0x500008
<Block for 0x400289, 16 bytes>
0x400289:	nop	
0x40028a:	mov	rax, qword ptr [rbp - 8]
0x40028e:	xor	rax, qword ptr fs:[0x28]
0x400297:	je	0x40029e
<Block for 0x40029e, 2 bytes>
0x40029e:	leave	
0x40029f:	ret	
<Block for 0x400299, 5 bytes>
0x400299:	call	0x500010
