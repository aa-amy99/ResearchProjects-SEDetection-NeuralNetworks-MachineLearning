<Block for 0x4000a0, 38 bytes>
0x4000a0:	endbr64	
0x4000a4:	push	rbp
0x4000a5:	mov	rbp, rsp
0x4000a8:	sub	rsp, 0x30
0x4000ac:	mov	rax, qword ptr fs:[0x28]
0x4000b5:	mov	qword ptr [rbp - 8], rax
0x4000b9:	xor	eax, eax
0x4000bb:	mov	eax, dword ptr [rip + 0xfff3f]
0x4000c1:	cmp	eax, 5
0x4000c4:	je	0x4000d4
<Block for 0x4000d4, 38 bytes>
0x4000d4:	movabs	rax, 0x7271706f2f636261
0x4000de:	mov	qword ptr [rbp - 0x14], rax
0x4000e2:	mov	dword ptr [rbp - 0xc], 0x757473
0x4000e9:	lea	rax, [rbp - 0x14]
0x4000ed:	mov	esi, 0x2f
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500008
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rdi, [rip + 0x12a]
0x4000cd:	call	0x500028
<Block for 0x4000fa, 11 bytes>
0x4000fa:	mov	qword ptr [rbp - 0x28], rax
0x4000fe:	cmp	qword ptr [rbp - 0x28], 0
0x400103:	jne	0x40010f
<Block for 0x4000d2, 2 bytes>
0x4000d2:	jmp	0x40012c
<Block for 0x400105, 10 bytes>
0x400105:	mov	edi, 1
0x40010a:	call	0x500010
<Block for 0x40010f, 29 bytes>
0x40010f:	lea	rax, [rbp - 0x14]
0x400113:	mov	rdx, qword ptr [rbp - 0x28]
0x400117:	sub	rdx, rax
0x40011a:	mov	rax, rdx
0x40011d:	mov	qword ptr [rbp - 0x20], rax
0x400121:	mov	rax, qword ptr [rbp - 0x20]
0x400125:	mov	edi, eax
0x400127:	call	0x500018
<Block for 0x40012c, 16 bytes>
0x40012c:	nop	
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	xor	rax, qword ptr fs:[0x28]
0x40013a:	je	0x400141
<Block for 0x400141, 2 bytes>
0x400141:	leave	
0x400142:	ret	
<Block for 0x40013c, 5 bytes>
0x40013c:	call	0x500020
