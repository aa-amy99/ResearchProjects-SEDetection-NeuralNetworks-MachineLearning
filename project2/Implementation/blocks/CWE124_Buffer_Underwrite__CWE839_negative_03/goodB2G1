<Block for 0x4000ac, 87 bytes>
0x4000ac:	endbr64	
0x4000b0:	push	rbp
0x4000b1:	mov	rbp, rsp
0x4000b4:	sub	rsp, 0x40
0x4000b8:	mov	rax, qword ptr fs:[0x28]
0x4000c1:	mov	qword ptr [rbp - 8], rax
0x4000c5:	xor	eax, eax
0x4000c7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000ce:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000d5:	mov	qword ptr [rbp - 0x30], 0
0x4000dd:	mov	qword ptr [rbp - 0x28], 0
0x4000e5:	mov	qword ptr [rbp - 0x20], 0
0x4000ed:	mov	qword ptr [rbp - 0x18], 0
0x4000f5:	mov	qword ptr [rbp - 0x10], 0
0x4000fd:	cmp	dword ptr [rbp - 0x34], 0
0x400101:	js	0x40013b
<Block for 0x40013b, 12 bytes>
0x40013b:	lea	rdi, [rip + 0x27e]
0x400142:	call	0x500008
<Block for 0x400103, 6 bytes>
0x400103:	cmp	dword ptr [rbp - 0x34], 9
0x400107:	jg	0x40013b
<Block for 0x400147, 16 bytes>
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 8]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x40015c
<Block for 0x400109, 22 bytes>
0x400109:	mov	eax, dword ptr [rbp - 0x34]
0x40010c:	cdqe	
0x40010e:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400116:	mov	dword ptr [rbp - 0x38], 0
0x40011d:	jmp	0x400133
<Block for 0x40015c, 2 bytes>
0x40015c:	leave	
0x40015d:	ret	
<Block for 0x400157, 5 bytes>
0x400157:	call	0x500010
<Block for 0x400133, 6 bytes>
0x400133:	cmp	dword ptr [rbp - 0x38], 9
0x400137:	jle	0x40011f
<Block for 0x40011f, 16 bytes>
0x40011f:	mov	eax, dword ptr [rbp - 0x38]
0x400122:	cdqe	
0x400124:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400128:	mov	edi, eax
0x40012a:	call	0x500000
<Block for 0x400139, 2 bytes>
0x400139:	jmp	0x400147
<Block for 0x40012f, 10 bytes>
0x40012f:	add	dword ptr [rbp - 0x38], 1
0x400133:	cmp	dword ptr [rbp - 0x38], 9
0x400137:	jle	0x40011f
