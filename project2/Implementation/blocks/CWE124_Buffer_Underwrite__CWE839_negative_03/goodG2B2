<Block for 0x4002bc, 87 bytes>
0x4002bc:	endbr64	
0x4002c0:	push	rbp
0x4002c1:	mov	rbp, rsp
0x4002c4:	sub	rsp, 0x40
0x4002c8:	mov	rax, qword ptr fs:[0x28]
0x4002d1:	mov	qword ptr [rbp - 8], rax
0x4002d5:	xor	eax, eax
0x4002d7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4002de:	mov	dword ptr [rbp - 0x34], 7
0x4002e5:	mov	qword ptr [rbp - 0x30], 0
0x4002ed:	mov	qword ptr [rbp - 0x28], 0
0x4002f5:	mov	qword ptr [rbp - 0x20], 0
0x4002fd:	mov	qword ptr [rbp - 0x18], 0
0x400305:	mov	qword ptr [rbp - 0x10], 0
0x40030d:	cmp	dword ptr [rbp - 0x34], 9
0x400311:	jg	0x400345
<Block for 0x400313, 22 bytes>
0x400313:	mov	eax, dword ptr [rbp - 0x34]
0x400316:	cdqe	
0x400318:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400320:	mov	dword ptr [rbp - 0x38], 0
0x400327:	jmp	0x40033d
<Block for 0x400345, 12 bytes>
0x400345:	lea	rdi, [rip + 0x54]
0x40034c:	call	0x500008
<Block for 0x40033d, 6 bytes>
0x40033d:	cmp	dword ptr [rbp - 0x38], 9
0x400341:	jle	0x400329
<Block for 0x400351, 16 bytes>
0x400351:	nop	
0x400352:	mov	rax, qword ptr [rbp - 8]
0x400356:	xor	rax, qword ptr fs:[0x28]
0x40035f:	je	0x400366
<Block for 0x400329, 16 bytes>
0x400329:	mov	eax, dword ptr [rbp - 0x38]
0x40032c:	cdqe	
0x40032e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400332:	mov	edi, eax
0x400334:	call	0x500000
<Block for 0x400343, 2 bytes>
0x400343:	jmp	0x400351
<Block for 0x400366, 2 bytes>
0x400366:	leave	
0x400367:	ret	
<Block for 0x400361, 5 bytes>
0x400361:	call	0x500010
<Block for 0x400339, 10 bytes>
0x400339:	add	dword ptr [rbp - 0x38], 1
0x40033d:	cmp	dword ptr [rbp - 0x38], 9
0x400341:	jle	0x400329
