<Block for 0x40009f, 70 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x90
0x4000ae:	mov	qword ptr [rbp - 0x88], rdi
0x4000b5:	mov	rax, qword ptr fs:[0x28]
0x4000be:	mov	qword ptr [rbp - 8], rax
0x4000c2:	xor	eax, eax
0x4000c4:	mov	rax, qword ptr [rbp - 0x88]
0x4000cb:	mov	qword ptr [rbp - 0x78], rax
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x43
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x4000e5, 16 bytes>
0x4000e5:	mov	byte ptr [rbp - 0xd], 0
0x4000e9:	lea	rax, [rbp - 0x70]
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500008
<Block for 0x4000f5, 22 bytes>
0x4000f5:	mov	rdx, rax
0x4000f8:	mov	rcx, qword ptr [rbp - 0x78]
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	rsi, rcx
0x400103:	mov	rdi, rax
0x400106:	call	0x500010
<Block for 0x40010b, 16 bytes>
0x40010b:	mov	byte ptr [rbp - 0xd], 0
0x40010f:	lea	rax, [rbp - 0x70]
0x400113:	mov	rdi, rax
0x400116:	call	0x500018
<Block for 0x40011b, 12 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 0x78]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500020
<Block for 0x400127, 16 bytes>
0x400127:	nop	
0x400128:	mov	rax, qword ptr [rbp - 8]
0x40012c:	xor	rax, qword ptr fs:[0x28]
0x400135:	je	0x40013c
<Block for 0x40013c, 2 bytes>
0x40013c:	leave	
0x40013d:	ret	
<Block for 0x400137, 5 bytes>
0x400137:	call	0x500028
