<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x130
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 44 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x128], rax
0x40006a:	nop	
0x40006b:	endbr64	
0x40006f:	mov	rax, qword ptr [rbp - 0x128]
0x400076:	mov	rdi, rax
0x400079:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x40007e, 19 bytes>
0x40007e:	mov	qword ptr [rbp - 0x120], rax
0x400085:	lea	rdi, [rip + 0x151]
0x40008c:	call	0x500008
<Block for 0x400091, 17 bytes>
0x400091:	mov	qword ptr [rbp - 0x118], rax
0x400098:	cmp	qword ptr [rbp - 0x118], 0
0x4000a0:	je	0x4000d4
<Block for 0x4000d4, 15 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0x128]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500018
<Block for 0x4000a2, 50 bytes>
0x4000a2:	mov	eax, 0xf9
0x4000a7:	sub	rax, qword ptr [rbp - 0x120]
0x4000ae:	mov	rdx, rax
0x4000b1:	mov	rcx, qword ptr [rbp - 0x128]
0x4000b8:	mov	rax, qword ptr [rbp - 0x120]
0x4000bf:	add	rcx, rax
0x4000c2:	mov	rax, qword ptr [rbp - 0x118]
0x4000c9:	mov	rsi, rax
0x4000cc:	mov	rdi, rcx
0x4000cf:	call	0x500010
<Block for 0x4000e3, 16 bytes>
0x4000e3:	nop	
0x4000e4:	mov	rax, qword ptr [rbp - 8]
0x4000e8:	xor	rax, qword ptr fs:[0x28]
0x4000f1:	je	0x4000f8
<Block for 0x4000f8, 2 bytes>
0x4000f8:	leave	
0x4000f9:	ret	
<Block for 0x4000f3, 5 bytes>
0x4000f3:	call	0x500020
