<Block for 0x4000fa, 82 bytes>
0x4000fa:	endbr64	
0x4000fe:	push	rbp
0x4000ff:	mov	rbp, rsp
0x400102:	sub	rsp, 0x120
0x400109:	mov	rax, qword ptr fs:[0x28]
0x400112:	mov	qword ptr [rbp - 8], rax
0x400116:	xor	eax, eax
0x400118:	movabs	rax, 0x3d48544150
0x400122:	mov	edx, 0
0x400127:	mov	qword ptr [rbp - 0x110], rax
0x40012e:	mov	qword ptr [rbp - 0x108], rdx
0x400135:	lea	rdx, [rbp - 0x100]
0x40013c:	mov	eax, 0
0x400141:	mov	ecx, 0x1d
0x400146:	mov	rdi, rdx
0x400149:	rep stosq	qword ptr [rdi], rax
<Block for 0x40014c, 56 bytes>
0x40014c:	mov	rdx, rdi
0x40014f:	mov	word ptr [rdx], ax
0x400152:	add	rdx, 2
0x400156:	lea	rax, [rbp - 0x110]
0x40015d:	mov	qword ptr [rbp - 0x118], rax
0x400164:	nop	
0x400165:	endbr64	
0x400169:	mov	rax, qword ptr [rbp - 0x118]
0x400170:	mov	rcx, -1
0x400177:	mov	rdx, rax
0x40017a:	mov	eax, 0
0x40017f:	mov	rdi, rdx
0x400182:	repne scasb	al, byte ptr [rdi]
<Block for 0x400149, 3 bytes>
0x400149:	rep stosq	qword ptr [rdi], rax
<Block for 0x400184, 45 bytes>
0x400184:	mov	rax, rcx
0x400187:	not	rax
0x40018a:	lea	rdx, [rax - 1]
0x40018e:	mov	rax, qword ptr [rbp - 0x118]
0x400195:	add	rax, rdx
0x400198:	mov	dword ptr [rax], 0x6e69622f
0x40019e:	mov	byte ptr [rax + 4], 0
0x4001a2:	mov	rax, qword ptr [rbp - 0x118]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500018
<Block for 0x400182, 2 bytes>
0x400182:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500020
