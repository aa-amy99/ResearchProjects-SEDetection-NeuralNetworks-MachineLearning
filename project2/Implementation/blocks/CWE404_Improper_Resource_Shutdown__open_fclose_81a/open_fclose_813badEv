<Block for 0x400000, 61 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	edx, 0x180
0x400027:	mov	esi, 0x42
0x40002c:	lea	rdi, [rip + 0xe1]
0x400033:	mov	eax, 0
0x400038:	call	0x500000
<Block for 0x40003d, 46 bytes>
0x40003d:	mov	dword ptr [rbp - 0x1c], eax
0x400040:	lea	rax, [rip + 0xfffd1]
0x400047:	mov	qword ptr [rbp - 0x18], rax
0x40004b:	lea	rax, [rbp - 0x18]
0x40004f:	mov	qword ptr [rbp - 0x10], rax
0x400053:	mov	rax, qword ptr [rbp - 0x10]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	mov	rcx, qword ptr [rax]
0x40005d:	mov	edx, dword ptr [rbp - 0x1c]
0x400060:	mov	rax, qword ptr [rbp - 0x10]
0x400064:	mov	esi, edx
0x400066:	mov	rdi, rax
0x400069:	call	rcx
<Block for 0x40006b, 16 bytes>
0x40006b:	nop	
0x40006c:	mov	rax, qword ptr [rbp - 8]
0x400070:	xor	rax, qword ptr fs:[0x28]
0x400079:	je	0x400080
<Block for 0x400080, 2 bytes>
0x400080:	leave	
0x400081:	ret	
<Block for 0x40007b, 5 bytes>
0x40007b:	call	0x500010
