<Block for 0x4000ea, 69 bytes>
0x4000ea:	endbr64	
0x4000ee:	push	rbp
0x4000ef:	mov	rbp, rsp
0x4000f2:	sub	rsp, 0xe0
0x4000f9:	mov	rax, qword ptr fs:[0x28]
0x400102:	mov	qword ptr [rbp - 8], rax
0x400106:	xor	eax, eax
0x400108:	mov	rax, qword ptr [rip + 0xd9]
0x40010f:	mov	qword ptr [rbp - 0xd8], rax
0x400116:	lea	rax, [rbp - 0xd0]
0x40011d:	mov	edx, 0xc7
0x400122:	mov	esi, 0x43
0x400127:	mov	rdi, rax
0x40012a:	call	0x500000
<Block for 0x40012f, 29 bytes>
0x40012f:	mov	byte ptr [rbp - 9], 0
0x400133:	mov	rdx, qword ptr [rbp - 0xd8]
0x40013a:	lea	rax, [rbp - 0xd0]
0x400141:	mov	rsi, rdx
0x400144:	mov	rdi, rax
0x400147:	call	0x500008
<Block for 0x40014c, 15 bytes>
0x40014c:	lea	rax, [rbp - 0xd0]
0x400153:	mov	rdi, rax
0x400156:	call	0x500010
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500018
