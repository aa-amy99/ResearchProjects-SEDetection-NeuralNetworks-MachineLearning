<Block for 0x400244, 25 bytes>
0x400244:	endbr64	
0x400248:	push	rbp
0x400249:	mov	rbp, rsp
0x40024c:	sub	rsp, 0x10
0x400250:	mov	qword ptr [rbp - 0x10], 0
0x400258:	call	0x400000
<Block for 0x40025d, 9 bytes>
0x40025d:	test	eax, eax
0x40025f:	setne	al
0x400262:	test	al, al
0x400264:	je	0x4002a3
<Block for 0x4002a3, 5 bytes>
0x4002a3:	call	0x400000
<Block for 0x400266, 10 bytes>
0x400266:	mov	edi, 0x190
0x40026b:	call	0x500000
<Block for 0x4002a8, 9 bytes>
0x4002a8:	test	eax, eax
0x4002aa:	setne	al
0x4002ad:	test	al, al
0x4002af:	je	0x4002be
<Block for 0x400270, 19 bytes>
0x400270:	mov	qword ptr [rbp - 0x10], rax
0x400274:	mov	qword ptr [rbp - 8], 0
0x40027c:	cmp	qword ptr [rbp - 8], 0x63
0x400281:	ja	0x4002a3
<Block for 0x4002be, 3 bytes>
0x4002be:	nop	
0x4002bf:	leave	
0x4002c0:	ret	
<Block for 0x4002b1, 13 bytes>
0x4002b1:	mov	rax, qword ptr [rbp - 0x10]
0x4002b5:	mov	eax, dword ptr [rax]
0x4002b7:	mov	edi, eax
0x4002b9:	call	0x500010
<Block for 0x400283, 32 bytes>
0x400283:	mov	rax, qword ptr [rbp - 8]
0x400287:	lea	rdx, [rax*4]
0x40028f:	mov	rax, qword ptr [rbp - 0x10]
0x400293:	add	rax, rdx
0x400296:	mov	dword ptr [rax], 5
0x40029c:	add	qword ptr [rbp - 8], 1
0x4002a1:	jmp	0x40027c
<Block for 0x40027c, 7 bytes>
0x40027c:	cmp	qword ptr [rbp - 8], 0x63
0x400281:	ja	0x4002a3
