<Block for 0x4000bb, 17 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x10
0x4000c7:	call	0x500000
<Block for 0x4000cc, 55 bytes>
0x4000cc:	mov	edx, eax
0x4000ce:	movsxd	rax, edx
0x4000d1:	imul	rax, rax, 0x55555556
0x4000d8:	shr	rax, 0x20
0x4000dc:	mov	rcx, rax
0x4000df:	mov	eax, edx
0x4000e1:	sar	eax, 0x1f
0x4000e4:	mov	esi, ecx
0x4000e6:	sub	esi, eax
0x4000e8:	mov	eax, esi
0x4000ea:	mov	dword ptr [rbp - 4], eax
0x4000ed:	mov	ecx, dword ptr [rbp - 4]
0x4000f0:	mov	eax, ecx
0x4000f2:	add	eax, eax
0x4000f4:	add	eax, ecx
0x4000f6:	sub	edx, eax
0x4000f8:	mov	eax, edx
0x4000fa:	mov	dword ptr [rbp - 4], eax
0x4000fd:	cmp	dword ptr [rbp - 4], 0
0x400101:	jne	0x400110
<Block for 0x400103, 12 bytes>
0x400103:	lea	rdi, [rip + 0x46]
0x40010a:	call	0x500008
<Block for 0x400110, 12 bytes>
0x400110:	lea	rdi, [rip + 0x53]
0x400117:	call	0x500008
<Block for 0x40010f, 1 bytes>
0x40010f:	nop	
<Block for 0x40011c, 4 bytes>
0x40011c:	nop	
0x40011d:	nop	
0x40011e:	leave	
0x40011f:	ret	
