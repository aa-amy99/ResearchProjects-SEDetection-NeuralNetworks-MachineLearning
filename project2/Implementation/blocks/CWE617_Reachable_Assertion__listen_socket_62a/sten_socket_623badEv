<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	lea	rax, [rbp - 0xc]
0x400026:	mov	rdi, rax
0x400029:	call	0x500000
<Block for 0x40002e, 8 bytes>
0x40002e:	mov	eax, dword ptr [rbp - 0xc]
0x400031:	cmp	eax, 5
0x400034:	jg	0x400055
<Block for 0x400036, 31 bytes>
0x400036:	lea	rcx, [rip + 0xab]
0x40003d:	mov	edx, 0x26
0x400042:	lea	rsi, [rip + 0xdf]
0x400049:	lea	rdi, [rip + 0x10a]
0x400050:	call	0x500008
<Block for 0x400055, 16 bytes>
0x400055:	nop	
0x400056:	mov	rax, qword ptr [rbp - 8]
0x40005a:	xor	rax, qword ptr fs:[0x28]
0x400063:	je	0x40006a
<Block for 0x40006a, 2 bytes>
0x40006a:	leave	
0x40006b:	ret	
<Block for 0x400065, 5 bytes>
0x400065:	call	0x500010
