<Block for 0x400000, 35 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	nop	
0x400015:	endbr64	
0x400019:	mov	edi, 0x64
0x40001e:	call	0x500000
<Block for 0x400023, 11 bytes>
0x400023:	mov	qword ptr [rbp - 8], rax
0x400027:	cmp	qword ptr [rbp - 8], 0
0x40002c:	jne	0x400038
<Block for 0x40002e, 10 bytes>
0x40002e:	mov	edi, 0xffffffff
0x400033:	call	0x500008
<Block for 0x400038, 22 bytes>
0x400038:	mov	rax, qword ptr [rbp - 8]
0x40003c:	mov	edx, 0x63
0x400041:	mov	esi, 0x41
0x400046:	mov	rdi, rax
0x400049:	call	0x500010
<Block for 0x40004e, 23 bytes>
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	add	rax, 0x63
0x400056:	mov	byte ptr [rax], 0
0x400059:	mov	rax, qword ptr [rbp - 8]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500018
<Block for 0x400065, 17 bytes>
0x400065:	nop	
0x400066:	endbr64	
0x40006a:	mov	rax, qword ptr [rbp - 8]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500020
<Block for 0x400076, 3 bytes>
0x400076:	nop	
0x400077:	leave	
0x400078:	ret	
