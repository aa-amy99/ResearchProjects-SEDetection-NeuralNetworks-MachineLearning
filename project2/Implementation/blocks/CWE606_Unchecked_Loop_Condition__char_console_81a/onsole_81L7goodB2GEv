<Block for 0x400287, 159 bytes>
0x400287:	endbr64	
0x40028b:	push	rbp
0x40028c:	mov	rbp, rsp
0x40028f:	sub	rsp, 0x90
0x400296:	mov	rax, qword ptr fs:[0x28]
0x40029f:	mov	qword ptr [rbp - 8], rax
0x4002a3:	xor	eax, eax
0x4002a5:	mov	qword ptr [rbp - 0x70], 0
0x4002ad:	mov	qword ptr [rbp - 0x68], 0
0x4002b5:	mov	qword ptr [rbp - 0x60], 0
0x4002bd:	mov	qword ptr [rbp - 0x58], 0
0x4002c5:	mov	qword ptr [rbp - 0x50], 0
0x4002cd:	mov	qword ptr [rbp - 0x48], 0
0x4002d5:	mov	qword ptr [rbp - 0x40], 0
0x4002dd:	mov	qword ptr [rbp - 0x38], 0
0x4002e5:	mov	qword ptr [rbp - 0x30], 0
0x4002ed:	mov	qword ptr [rbp - 0x28], 0
0x4002f5:	mov	qword ptr [rbp - 0x20], 0
0x4002fd:	mov	qword ptr [rbp - 0x18], 0
0x400305:	mov	dword ptr [rbp - 0x10], 0
0x40030c:	lea	rax, [rbp - 0x70]
0x400310:	mov	qword ptr [rbp - 0x88], rax
0x400317:	mov	rax, qword ptr [rbp - 0x88]
0x40031e:	mov	rdi, rax
0x400321:	call	0x500000
<Block for 0x400326, 23 bytes>
0x400326:	mov	qword ptr [rbp - 0x80], rax
0x40032a:	mov	eax, 0x64
0x40032f:	sub	rax, qword ptr [rbp - 0x80]
0x400333:	cmp	rax, 1
0x400337:	jbe	0x4003dd
<Block for 0x4003dd, 54 bytes>
0x4003dd:	lea	rax, [rip + 0xffc64]
0x4003e4:	mov	qword ptr [rbp - 0x90], rax
0x4003eb:	lea	rax, [rbp - 0x90]
0x4003f2:	mov	qword ptr [rbp - 0x78], rax
0x4003f6:	mov	rax, qword ptr [rbp - 0x78]
0x4003fa:	mov	rax, qword ptr [rax]
0x4003fd:	mov	rcx, qword ptr [rax]
0x400400:	mov	rdx, qword ptr [rbp - 0x88]
0x400407:	mov	rax, qword ptr [rbp - 0x78]
0x40040b:	mov	rsi, rdx
0x40040e:	mov	rdi, rax
0x400411:	call	rcx
<Block for 0x40033d, 47 bytes>
0x40033d:	mov	rax, qword ptr [rip + 0xffcc4]
0x400344:	mov	rdx, qword ptr [rbp - 0x80]
0x400348:	mov	ecx, 0x64
0x40034d:	sub	ecx, edx
0x40034f:	mov	edx, ecx
0x400351:	mov	esi, edx
0x400353:	mov	rcx, qword ptr [rbp - 0x88]
0x40035a:	mov	rdx, qword ptr [rbp - 0x80]
0x40035e:	add	rcx, rdx
0x400361:	mov	rdx, rax
0x400364:	mov	rdi, rcx
0x400367:	call	0x500010
<Block for 0x400413, 16 bytes>
0x400413:	nop	
0x400414:	mov	rax, qword ptr [rbp - 8]
0x400418:	xor	rax, qword ptr fs:[0x28]
0x400421:	je	0x400428
<Block for 0x40036c, 10 bytes>
0x40036c:	test	rax, rax
0x40036f:	setne	al
0x400372:	test	al, al
0x400374:	je	0x4003c0
<Block for 0x400428, 2 bytes>
0x400428:	leave	
0x400429:	ret	
<Block for 0x400423, 5 bytes>
0x400423:	call	0x500028
<Block for 0x4003c0, 12 bytes>
0x4003c0:	lea	rdi, [rip + 0x78]
0x4003c7:	call	0x500018
<Block for 0x400376, 15 bytes>
0x400376:	mov	rax, qword ptr [rbp - 0x88]
0x40037d:	mov	rdi, rax
0x400380:	call	0x500000
<Block for 0x4003cc, 71 bytes>
0x4003cc:	mov	rdx, qword ptr [rbp - 0x88]
0x4003d3:	mov	rax, qword ptr [rbp - 0x80]
0x4003d7:	add	rax, rdx
0x4003da:	mov	byte ptr [rax], 0
0x4003dd:	lea	rax, [rip + 0xffc64]
0x4003e4:	mov	qword ptr [rbp - 0x90], rax
0x4003eb:	lea	rax, [rbp - 0x90]
0x4003f2:	mov	qword ptr [rbp - 0x78], rax
0x4003f6:	mov	rax, qword ptr [rbp - 0x78]
0x4003fa:	mov	rax, qword ptr [rax]
0x4003fd:	mov	rcx, qword ptr [rax]
0x400400:	mov	rdx, qword ptr [rbp - 0x88]
0x400407:	mov	rax, qword ptr [rbp - 0x78]
0x40040b:	mov	rsi, rdx
0x40040e:	mov	rdi, rax
0x400411:	call	rcx
<Block for 0x400385, 11 bytes>
0x400385:	mov	qword ptr [rbp - 0x80], rax
0x400389:	cmp	qword ptr [rbp - 0x80], 0
0x40038e:	je	0x4003dd
<Block for 0x400390, 25 bytes>
0x400390:	mov	rax, qword ptr [rbp - 0x80]
0x400394:	lea	rdx, [rax - 1]
0x400398:	mov	rax, qword ptr [rbp - 0x88]
0x40039f:	add	rax, rdx
0x4003a2:	movzx	eax, byte ptr [rax]
0x4003a5:	cmp	al, 0xa
0x4003a7:	jne	0x4003dd
<Block for 0x4003a9, 23 bytes>
0x4003a9:	mov	rax, qword ptr [rbp - 0x80]
0x4003ad:	lea	rdx, [rax - 1]
0x4003b1:	mov	rax, qword ptr [rbp - 0x88]
0x4003b8:	add	rax, rdx
0x4003bb:	mov	byte ptr [rax], 0
0x4003be:	jmp	0x4003dd
