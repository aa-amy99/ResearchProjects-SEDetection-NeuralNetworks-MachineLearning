<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	rax, qword ptr [rbp - 0x88]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 23 bytes>
0x40009f:	mov	qword ptr [rbp - 0x80], rax
0x4000a3:	mov	eax, 0x64
0x4000a8:	sub	rax, qword ptr [rbp - 0x80]
0x4000ac:	cmp	rax, 1
0x4000b0:	jbe	0x400156
<Block for 0x400156, 54 bytes>
0x400156:	lea	rax, [rip + 0xffed3]
0x40015d:	mov	qword ptr [rbp - 0x90], rax
0x400164:	lea	rax, [rbp - 0x90]
0x40016b:	mov	qword ptr [rbp - 0x78], rax
0x40016f:	mov	rax, qword ptr [rbp - 0x78]
0x400173:	mov	rax, qword ptr [rax]
0x400176:	mov	rcx, qword ptr [rax]
0x400179:	mov	rdx, qword ptr [rbp - 0x88]
0x400180:	mov	rax, qword ptr [rbp - 0x78]
0x400184:	mov	rsi, rdx
0x400187:	mov	rdi, rax
0x40018a:	call	rcx
<Block for 0x4000b6, 47 bytes>
0x4000b6:	mov	rax, qword ptr [rip + 0xfff4b]
0x4000bd:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c1:	mov	ecx, 0x64
0x4000c6:	sub	ecx, edx
0x4000c8:	mov	edx, ecx
0x4000ca:	mov	esi, edx
0x4000cc:	mov	rcx, qword ptr [rbp - 0x88]
0x4000d3:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d7:	add	rcx, rdx
0x4000da:	mov	rdx, rax
0x4000dd:	mov	rdi, rcx
0x4000e0:	call	0x500010
<Block for 0x40018c, 16 bytes>
0x40018c:	nop	
0x40018d:	mov	rax, qword ptr [rbp - 8]
0x400191:	xor	rax, qword ptr fs:[0x28]
0x40019a:	je	0x4001a1
<Block for 0x4000e5, 10 bytes>
0x4000e5:	test	rax, rax
0x4000e8:	setne	al
0x4000eb:	test	al, al
0x4000ed:	je	0x400139
<Block for 0x4001a1, 2 bytes>
0x4001a1:	leave	
0x4001a2:	ret	
<Block for 0x40019c, 5 bytes>
0x40019c:	call	0x500028
<Block for 0x400139, 12 bytes>
0x400139:	lea	rdi, [rip + 0x2ff]
0x400140:	call	0x500018
<Block for 0x4000ef, 15 bytes>
0x4000ef:	mov	rax, qword ptr [rbp - 0x88]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500000
<Block for 0x400145, 71 bytes>
0x400145:	mov	rdx, qword ptr [rbp - 0x88]
0x40014c:	mov	rax, qword ptr [rbp - 0x80]
0x400150:	add	rax, rdx
0x400153:	mov	byte ptr [rax], 0
0x400156:	lea	rax, [rip + 0xffed3]
0x40015d:	mov	qword ptr [rbp - 0x90], rax
0x400164:	lea	rax, [rbp - 0x90]
0x40016b:	mov	qword ptr [rbp - 0x78], rax
0x40016f:	mov	rax, qword ptr [rbp - 0x78]
0x400173:	mov	rax, qword ptr [rax]
0x400176:	mov	rcx, qword ptr [rax]
0x400179:	mov	rdx, qword ptr [rbp - 0x88]
0x400180:	mov	rax, qword ptr [rbp - 0x78]
0x400184:	mov	rsi, rdx
0x400187:	mov	rdi, rax
0x40018a:	call	rcx
<Block for 0x4000fe, 11 bytes>
0x4000fe:	mov	qword ptr [rbp - 0x80], rax
0x400102:	cmp	qword ptr [rbp - 0x80], 0
0x400107:	je	0x400156
<Block for 0x400109, 25 bytes>
0x400109:	mov	rax, qword ptr [rbp - 0x80]
0x40010d:	lea	rdx, [rax - 1]
0x400111:	mov	rax, qword ptr [rbp - 0x88]
0x400118:	add	rax, rdx
0x40011b:	movzx	eax, byte ptr [rax]
0x40011e:	cmp	al, 0xa
0x400120:	jne	0x400156
<Block for 0x400122, 23 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x80]
0x400126:	lea	rdx, [rax - 1]
0x40012a:	mov	rax, qword ptr [rbp - 0x88]
0x400131:	add	rax, rdx
0x400134:	mov	byte ptr [rax], 0
0x400137:	jmp	0x400156
