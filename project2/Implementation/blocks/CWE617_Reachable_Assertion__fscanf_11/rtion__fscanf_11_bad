<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x40004f
<Block for 0x40004f, 8 bytes>
0x40004f:	mov	eax, dword ptr [rbp - 0xc]
0x400052:	cmp	eax, 5
0x400055:	jg	0x400076
<Block for 0x400030, 31 bytes>
0x400030:	mov	rax, qword ptr [rip + 0xfffd1]
0x400037:	lea	rdx, [rbp - 0xc]
0x40003b:	lea	rsi, [rip + 0x11e]
0x400042:	mov	rdi, rax
0x400045:	mov	eax, 0
0x40004a:	call	0x500010
<Block for 0x400057, 31 bytes>
0x400057:	lea	rcx, [rip + 0x162]
0x40005e:	mov	edx, 0x24
0x400063:	lea	rsi, [rip + 0xfe]
0x40006a:	lea	rdi, [rip + 0x11f]
0x400071:	call	0x500018
<Block for 0x400076, 16 bytes>
0x400076:	nop	
0x400077:	mov	rax, qword ptr [rbp - 8]
0x40007b:	xor	rax, qword ptr fs:[0x28]
0x400084:	je	0x40008b
<Block for 0x40008b, 2 bytes>
0x40008b:	leave	
0x40008c:	ret	
<Block for 0x400086, 5 bytes>
0x400086:	call	0x500020
