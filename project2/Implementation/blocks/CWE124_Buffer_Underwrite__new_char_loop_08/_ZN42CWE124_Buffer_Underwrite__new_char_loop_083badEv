<Block for 0x40001e, 46 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x90
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	qword ptr [rbp - 0x88], 0
0x400047:	call	0x400000
<Block for 0x40004c, 9 bytes>
0x40004c:	test	eax, eax
0x40004e:	setne	al
0x400051:	test	al, al
0x400053:	je	0x400093
<Block for 0x400093, 22 bytes>
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	edx, 0x63
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500008
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0x64
0x40005a:	call	0x500000
<Block for 0x4000a9, 19 bytes>
0x4000a9:	mov	byte ptr [rbp - 0xd], 0
0x4000ad:	mov	qword ptr [rbp - 0x80], 0
0x4000b5:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000ba:	ja	0x4000e1
<Block for 0x40005f, 26 bytes>
0x40005f:	mov	qword ptr [rbp - 0x78], rax
0x400063:	mov	rax, qword ptr [rbp - 0x78]
0x400067:	mov	edx, 0x63
0x40006c:	mov	esi, 0x41
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x4000bc, 37 bytes>
0x4000bc:	mov	rdx, qword ptr [rbp - 0x88]
0x4000c3:	mov	rax, qword ptr [rbp - 0x80]
0x4000c7:	add	rdx, rax
0x4000ca:	lea	rcx, [rbp - 0x70]
0x4000ce:	mov	rax, qword ptr [rbp - 0x80]
0x4000d2:	add	rax, rcx
0x4000d5:	movzx	eax, byte ptr [rax]
0x4000d8:	mov	byte ptr [rdx], al
0x4000da:	add	qword ptr [rbp - 0x80], 1
0x4000df:	jmp	0x4000b5
<Block for 0x4000e1, 29 bytes>
0x4000e1:	mov	rax, qword ptr [rbp - 0x88]
0x4000e8:	add	rax, 0x63
0x4000ec:	mov	byte ptr [rax], 0
0x4000ef:	mov	rax, qword ptr [rbp - 0x88]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500010
<Block for 0x400079, 48 bytes>
0x400079:	mov	rax, qword ptr [rbp - 0x78]
0x40007d:	add	rax, 0x63
0x400081:	mov	byte ptr [rax], 0
0x400084:	mov	rax, qword ptr [rbp - 0x78]
0x400088:	sub	rax, 8
0x40008c:	mov	qword ptr [rbp - 0x88], rax
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	edx, 0x63
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500008
<Block for 0x4000b5, 7 bytes>
0x4000b5:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000ba:	ja	0x4000e1
<Block for 0x4000fe, 16 bytes>
0x4000fe:	nop	
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	xor	rax, qword ptr fs:[0x28]
0x40010c:	je	0x400113
<Block for 0x400113, 2 bytes>
0x400113:	leave	
0x400114:	ret	
<Block for 0x40010e, 5 bytes>
0x40010e:	call	0x500018
