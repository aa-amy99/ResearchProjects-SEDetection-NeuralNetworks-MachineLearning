<Block for 0x400050, 28 bytes>
0x400050:	endbr64	
0x400054:	push	rbp
0x400055:	mov	rbp, rsp
0x400058:	push	r12
0x40005a:	push	rbx
0x40005b:	sub	rsp, 0x10
0x40005f:	mov	dword ptr [rbp - 0x14], 0
0x400066:	cmp	dword ptr [rbp - 0x14], 0
0x40006a:	jg	0x4000bb
<Block for 0x40006c, 10 bytes>
0x40006c:	mov	edi, 0x10
0x400071:	call	0x500000
<Block for 0x4000bb, 10 bytes>
0x4000bb:	nop	
0x4000bc:	add	rsp, 0x10
0x4000c0:	pop	rbx
0x4000c1:	pop	r12
0x4000c3:	pop	rbp
0x4000c4:	ret	
<Block for 0x400076, 18 bytes>
0x400076:	mov	rbx, rax
0x400079:	lea	rsi, [rip + 0xda]
0x400080:	mov	rdi, rbx
0x400083:	call	0x500028
<Block for 0x400088, 25 bytes>
0x400088:	mov	rax, qword ptr [rip + 0xfffa9]
0x40008f:	mov	rdx, rax
0x400092:	lea	rsi, [rip + 0xfffa7]
0x400099:	mov	rdi, rbx
0x40009c:	call	0x500020
<Block for 0x4000a1, 15 bytes>
0x4000a1:	endbr64	
0x4000a5:	mov	r12, rax
0x4000a8:	mov	rdi, rbx
0x4000ab:	call	0x500048
<Block for 0x4000b0, 11 bytes>
0x4000b0:	mov	rax, r12
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500050
