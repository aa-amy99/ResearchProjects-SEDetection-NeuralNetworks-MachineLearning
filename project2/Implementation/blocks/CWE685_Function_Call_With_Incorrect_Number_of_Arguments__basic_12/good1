<Block for 0x40009f, 37 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x70
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	mov	eax, 0
0x4000bf:	call	0x500000
<Block for 0x4000c4, 4 bytes>
0x4000c4:	test	eax, eax
0x4000c6:	je	0x4000fc
<Block for 0x4000fc, 38 bytes>
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	lea	rcx, [rip + 0x53]
0x400107:	lea	rdx, [rip + 0x4c]
0x40010e:	lea	rsi, [rip + 0x49]
0x400115:	mov	rdi, rax
0x400118:	mov	eax, 0
0x40011d:	call	0x500008
<Block for 0x4000c8, 38 bytes>
0x4000c8:	lea	rax, [rbp - 0x70]
0x4000cc:	lea	rcx, [rip + 0x87]
0x4000d3:	lea	rdx, [rip + 0x80]
0x4000da:	lea	rsi, [rip + 0x7d]
0x4000e1:	mov	rdi, rax
0x4000e4:	mov	eax, 0
0x4000e9:	call	0x500008
<Block for 0x400122, 12 bytes>
0x400122:	lea	rax, [rbp - 0x70]
0x400126:	mov	rdi, rax
0x400129:	call	0x500010
<Block for 0x4000ee, 12 bytes>
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
<Block for 0x40012e, 16 bytes>
0x40012e:	nop	
0x40012f:	mov	rax, qword ptr [rbp - 8]
0x400133:	xor	rax, qword ptr fs:[0x28]
0x40013c:	je	0x400143
<Block for 0x4000fa, 2 bytes>
0x4000fa:	jmp	0x40012e
<Block for 0x400143, 2 bytes>
0x400143:	leave	
0x400144:	ret	
<Block for 0x40013e, 5 bytes>
0x40013e:	call	0x500018
