<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400384
<Block for 0x400028, 32 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	byte ptr [rbp - 0x30], 0x61
0x400034:	lea	rax, [rbp - 0x30]
0x400038:	mov	qword ptr [rbp - 0x60], rax
0x40003c:	lea	rax, [rbp - 0x50]
0x400040:	mov	rdi, rax
0x400043:	call	0x400516
<Block for 0x400048, 23 bytes>
0x400048:	mov	qword ptr [rbp - 0x58], rax
0x40004c:	lea	rdx, [rbp - 0x58]
0x400050:	lea	rax, [rbp - 0x30]
0x400054:	mov	rsi, rdx
0x400057:	mov	rdi, rax
0x40005a:	call	0x400566
<Block for 0x40005f, 28 bytes>
0x40005f:	lea	rdx, [rbp - 0x60]
0x400063:	mov	rsi, qword ptr [rbp - 0x30]
0x400067:	lea	rax, [rbp - 0x50]
0x40006b:	mov	rcx, rdx
0x40006e:	mov	edx, 1
0x400073:	mov	rdi, rax
0x400076:	call	0x400594
<Block for 0x40007b, 12 bytes>
0x40007b:	lea	rax, [rbp - 0x50]
0x40007f:	mov	rdi, rax
0x400082:	call	0x400516
<Block for 0x400087, 23 bytes>
0x400087:	mov	qword ptr [rbp - 0x58], rax
0x40008b:	lea	rdx, [rbp - 0x58]
0x40008f:	lea	rax, [rbp - 0x30]
0x400093:	mov	rsi, rdx
0x400096:	mov	rdi, rax
0x400099:	call	0x400566
<Block for 0x40009e, 28 bytes>
0x40009e:	lea	rdx, [rbp - 0x60]
0x4000a2:	mov	rsi, qword ptr [rbp - 0x30]
0x4000a6:	lea	rax, [rbp - 0x50]
0x4000aa:	mov	rcx, rdx
0x4000ad:	mov	edx, 1
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x400594
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rax, [rbp - 0x50]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x400516
<Block for 0x4000c6, 23 bytes>
0x4000c6:	mov	qword ptr [rbp - 0x58], rax
0x4000ca:	lea	rdx, [rbp - 0x58]
0x4000ce:	lea	rax, [rbp - 0x30]
0x4000d2:	mov	rsi, rdx
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x400566
<Block for 0x4000dd, 28 bytes>
0x4000dd:	lea	rdx, [rbp - 0x60]
0x4000e1:	mov	rsi, qword ptr [rbp - 0x30]
0x4000e5:	lea	rax, [rbp - 0x50]
0x4000e9:	mov	rcx, rdx
0x4000ec:	mov	edx, 1
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x400594
<Block for 0x4000f9, 19 bytes>
0x4000f9:	lea	rdx, [rbp - 0x50]
0x4000fd:	lea	rax, [rbp - 0x30]
0x400101:	mov	rsi, rdx
0x400104:	mov	rdi, rax
0x400107:	call	0x40065a
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rax, [rbp - 0x30]
0x400110:	mov	rdi, rax
0x400113:	call	0x500000
<Block for 0x400118, 12 bytes>
0x400118:	lea	rax, [rbp - 0x30]
0x40011c:	mov	rdi, rax
0x40011f:	call	0x4004ce
<Block for 0x400124, 12 bytes>
0x400124:	lea	rax, [rbp - 0x50]
0x400128:	mov	rdi, rax
0x40012b:	call	0x4004ce
<Block for 0x400130, 16 bytes>
0x400130:	nop	
0x400131:	mov	rax, qword ptr [rbp - 0x18]
0x400135:	xor	rax, qword ptr fs:[0x28]
0x40013e:	je	0x40017a
<Block for 0x40017a, 7 bytes>
0x40017a:	add	rsp, 0x58
0x40017e:	pop	rbx
0x40017f:	pop	rbp
0x400180:	ret	
<Block for 0x400140, 2 bytes>
0x400140:	jmp	0x400175
<Block for 0x400175, 5 bytes>
0x400175:	call	0x500010
