<Block for 0x40018c, 40 bytes>
0x40018c:	endbr64	
0x400190:	push	rbp
0x400191:	mov	rbp, rsp
0x400194:	push	rbx
0x400195:	sub	rsp, 0x58
0x400199:	mov	rax, qword ptr fs:[0x28]
0x4001a2:	mov	qword ptr [rbp - 0x18], rax
0x4001a6:	xor	eax, eax
0x4001a8:	lea	rax, [rbp - 0x50]
0x4001ac:	mov	rdi, rax
0x4001af:	call	0x4003ae
<Block for 0x4001b4, 27 bytes>
0x4001b4:	mov	qword ptr [rbp - 0x60], 0
0x4001bc:	lea	rsi, [rip + 0x17c]
0x4001c3:	lea	rdi, [rip + 0x178]
0x4001ca:	call	0x500000
<Block for 0x4001cf, 16 bytes>
0x4001cf:	mov	qword ptr [rbp - 0x60], rax
0x4001d3:	lea	rax, [rbp - 0x50]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x400542
<Block for 0x4001df, 23 bytes>
0x4001df:	mov	qword ptr [rbp - 0x58], rax
0x4001e3:	lea	rdx, [rbp - 0x58]
0x4001e7:	lea	rax, [rbp - 0x30]
0x4001eb:	mov	rsi, rdx
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x400592
<Block for 0x4001f6, 28 bytes>
0x4001f6:	lea	rdx, [rbp - 0x60]
0x4001fa:	mov	rsi, qword ptr [rbp - 0x30]
0x4001fe:	lea	rax, [rbp - 0x50]
0x400202:	mov	rcx, rdx
0x400205:	mov	edx, 1
0x40020a:	mov	rdi, rax
0x40020d:	call	0x4005c0
<Block for 0x400212, 12 bytes>
0x400212:	lea	rax, [rbp - 0x50]
0x400216:	mov	rdi, rax
0x400219:	call	0x400542
<Block for 0x40021e, 23 bytes>
0x40021e:	mov	qword ptr [rbp - 0x58], rax
0x400222:	lea	rdx, [rbp - 0x58]
0x400226:	lea	rax, [rbp - 0x30]
0x40022a:	mov	rsi, rdx
0x40022d:	mov	rdi, rax
0x400230:	call	0x400592
<Block for 0x400235, 28 bytes>
0x400235:	lea	rdx, [rbp - 0x60]
0x400239:	mov	rsi, qword ptr [rbp - 0x30]
0x40023d:	lea	rax, [rbp - 0x50]
0x400241:	mov	rcx, rdx
0x400244:	mov	edx, 1
0x400249:	mov	rdi, rax
0x40024c:	call	0x4005c0
<Block for 0x400251, 12 bytes>
0x400251:	lea	rax, [rbp - 0x50]
0x400255:	mov	rdi, rax
0x400258:	call	0x400542
<Block for 0x40025d, 23 bytes>
0x40025d:	mov	qword ptr [rbp - 0x58], rax
0x400261:	lea	rdx, [rbp - 0x58]
0x400265:	lea	rax, [rbp - 0x30]
0x400269:	mov	rsi, rdx
0x40026c:	mov	rdi, rax
0x40026f:	call	0x400592
<Block for 0x400274, 28 bytes>
0x400274:	lea	rdx, [rbp - 0x60]
0x400278:	mov	rsi, qword ptr [rbp - 0x30]
0x40027c:	lea	rax, [rbp - 0x50]
0x400280:	mov	rcx, rdx
0x400283:	mov	edx, 1
0x400288:	mov	rdi, rax
0x40028b:	call	0x4005c0
<Block for 0x400290, 19 bytes>
0x400290:	lea	rdx, [rbp - 0x50]
0x400294:	lea	rax, [rbp - 0x30]
0x400298:	mov	rsi, rdx
0x40029b:	mov	rdi, rax
0x40029e:	call	0x400686
<Block for 0x4002a3, 12 bytes>
0x4002a3:	lea	rax, [rbp - 0x30]
0x4002a7:	mov	rdi, rax
0x4002aa:	call	0x500020
<Block for 0x4002af, 12 bytes>
0x4002af:	lea	rax, [rbp - 0x30]
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x4004fa
<Block for 0x4002bb, 12 bytes>
0x4002bb:	lea	rax, [rbp - 0x50]
0x4002bf:	mov	rdi, rax
0x4002c2:	call	0x4004fa
<Block for 0x4002c7, 16 bytes>
0x4002c7:	nop	
0x4002c8:	mov	rax, qword ptr [rbp - 0x18]
0x4002cc:	xor	rax, qword ptr fs:[0x28]
0x4002d5:	je	0x400311
<Block for 0x400311, 7 bytes>
0x400311:	add	rsp, 0x58
0x400315:	pop	rbx
0x400316:	pop	rbp
0x400317:	ret	
<Block for 0x4002d7, 2 bytes>
0x4002d7:	jmp	0x40030c
<Block for 0x40030c, 5 bytes>
0x40030c:	call	0x500018
