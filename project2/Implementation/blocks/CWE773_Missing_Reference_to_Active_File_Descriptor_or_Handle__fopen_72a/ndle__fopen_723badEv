<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003ae
<Block for 0x400028, 27 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	lea	rsi, [rip + 0x308]
0x400037:	lea	rdi, [rip + 0x304]
0x40003e:	call	0x500000
<Block for 0x400043, 16 bytes>
0x400043:	mov	qword ptr [rbp - 0x60], rax
0x400047:	lea	rax, [rbp - 0x50]
0x40004b:	mov	rdi, rax
0x40004e:	call	0x400542
<Block for 0x400053, 23 bytes>
0x400053:	mov	qword ptr [rbp - 0x58], rax
0x400057:	lea	rdx, [rbp - 0x58]
0x40005b:	lea	rax, [rbp - 0x30]
0x40005f:	mov	rsi, rdx
0x400062:	mov	rdi, rax
0x400065:	call	0x400592
<Block for 0x40006a, 28 bytes>
0x40006a:	lea	rdx, [rbp - 0x60]
0x40006e:	mov	rsi, qword ptr [rbp - 0x30]
0x400072:	lea	rax, [rbp - 0x50]
0x400076:	mov	rcx, rdx
0x400079:	mov	edx, 1
0x40007e:	mov	rdi, rax
0x400081:	call	0x4005c0
<Block for 0x400086, 12 bytes>
0x400086:	lea	rax, [rbp - 0x50]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x400542
<Block for 0x400092, 23 bytes>
0x400092:	mov	qword ptr [rbp - 0x58], rax
0x400096:	lea	rdx, [rbp - 0x58]
0x40009a:	lea	rax, [rbp - 0x30]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x400592
<Block for 0x4000a9, 28 bytes>
0x4000a9:	lea	rdx, [rbp - 0x60]
0x4000ad:	mov	rsi, qword ptr [rbp - 0x30]
0x4000b1:	lea	rax, [rbp - 0x50]
0x4000b5:	mov	rcx, rdx
0x4000b8:	mov	edx, 1
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x4005c0
<Block for 0x4000c5, 12 bytes>
0x4000c5:	lea	rax, [rbp - 0x50]
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x400542
<Block for 0x4000d1, 23 bytes>
0x4000d1:	mov	qword ptr [rbp - 0x58], rax
0x4000d5:	lea	rdx, [rbp - 0x58]
0x4000d9:	lea	rax, [rbp - 0x30]
0x4000dd:	mov	rsi, rdx
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x400592
<Block for 0x4000e8, 28 bytes>
0x4000e8:	lea	rdx, [rbp - 0x60]
0x4000ec:	mov	rsi, qword ptr [rbp - 0x30]
0x4000f0:	lea	rax, [rbp - 0x50]
0x4000f4:	mov	rcx, rdx
0x4000f7:	mov	edx, 1
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x4005c0
<Block for 0x400104, 19 bytes>
0x400104:	lea	rdx, [rbp - 0x50]
0x400108:	lea	rax, [rbp - 0x30]
0x40010c:	mov	rsi, rdx
0x40010f:	mov	rdi, rax
0x400112:	call	0x400686
<Block for 0x400117, 12 bytes>
0x400117:	lea	rax, [rbp - 0x30]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x400123, 12 bytes>
0x400123:	lea	rax, [rbp - 0x30]
0x400127:	mov	rdi, rax
0x40012a:	call	0x4004fa
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rax, [rbp - 0x50]
0x400133:	mov	rdi, rax
0x400136:	call	0x4004fa
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 0x18]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400185
<Block for 0x400185, 7 bytes>
0x400185:	add	rsp, 0x58
0x400189:	pop	rbx
0x40018a:	pop	rbp
0x40018b:	ret	
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x400180
<Block for 0x400180, 5 bytes>
0x400180:	call	0x500018
