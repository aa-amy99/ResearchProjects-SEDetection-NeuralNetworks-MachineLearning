<Block for 0x40019c, 45 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	add	rsp, -0x80
0x4001a8:	mov	rax, qword ptr fs:[0x28]
0x4001b1:	mov	qword ptr [rbp - 8], rax
0x4001b5:	xor	eax, eax
0x4001b7:	mov	qword ptr [rbp - 0x80], 0
0x4001bf:	mov	eax, 5
0x4001c4:	cmp	eax, 5
0x4001c7:	jne	0x400211
<Block for 0x4001c9, 10 bytes>
0x4001c9:	mov	edi, 0x64
0x4001ce:	call	0x500000
<Block for 0x400211, 22 bytes>
0x400211:	lea	rax, [rbp - 0x70]
0x400215:	mov	edx, 0x63
0x40021a:	mov	esi, 0x43
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x4001d3, 11 bytes>
0x4001d3:	mov	qword ptr [rbp - 0x78], rax
0x4001d7:	cmp	qword ptr [rbp - 0x78], 0
0x4001dc:	jne	0x4001e8
<Block for 0x400227, 23 bytes>
0x400227:	mov	byte ptr [rbp - 0xd], 0
0x40022b:	lea	rdx, [rbp - 0x70]
0x40022f:	mov	rax, qword ptr [rbp - 0x80]
0x400233:	mov	rsi, rdx
0x400236:	mov	rdi, rax
0x400239:	call	0x500018
<Block for 0x4001de, 10 bytes>
0x4001de:	mov	edi, 0xffffffff
0x4001e3:	call	0x500008
<Block for 0x4001e8, 22 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ec:	mov	edx, 0x63
0x4001f1:	mov	esi, 0x41
0x4001f6:	mov	rdi, rax
0x4001f9:	call	0x500010
<Block for 0x40023e, 12 bytes>
0x40023e:	mov	rax, qword ptr [rbp - 0x80]
0x400242:	mov	rdi, rax
0x400245:	call	0x500020
<Block for 0x4001fe, 41 bytes>
0x4001fe:	mov	rax, qword ptr [rbp - 0x78]
0x400202:	add	rax, 0x63
0x400206:	mov	byte ptr [rax], 0
0x400209:	mov	rax, qword ptr [rbp - 0x78]
0x40020d:	mov	qword ptr [rbp - 0x80], rax
0x400211:	lea	rax, [rbp - 0x70]
0x400215:	mov	edx, 0x63
0x40021a:	mov	esi, 0x43
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x40024a, 16 bytes>
0x40024a:	nop	
0x40024b:	mov	rax, qword ptr [rbp - 8]
0x40024f:	xor	rax, qword ptr fs:[0x28]
0x400258:	je	0x40025f
<Block for 0x40025f, 2 bytes>
0x40025f:	leave	
0x400260:	ret	
<Block for 0x40025a, 5 bytes>
0x40025a:	call	0x500028
