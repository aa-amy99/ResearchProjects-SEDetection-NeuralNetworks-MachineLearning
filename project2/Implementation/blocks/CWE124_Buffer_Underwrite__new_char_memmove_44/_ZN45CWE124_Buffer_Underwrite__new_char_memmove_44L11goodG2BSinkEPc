<Block for 0x4000e9, 53 bytes>
0x4000e9:	endbr64	
0x4000ed:	push	rbp
0x4000ee:	mov	rbp, rsp
0x4000f1:	add	rsp, -0x80
0x4000f5:	mov	qword ptr [rbp - 0x78], rdi
0x4000f9:	mov	rax, qword ptr fs:[0x28]
0x400102:	mov	qword ptr [rbp - 8], rax
0x400106:	xor	eax, eax
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x43
0x400116:	mov	rdi, rax
0x400119:	call	0x500000
<Block for 0x40011e, 28 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0
0x400122:	lea	rcx, [rbp - 0x70]
0x400126:	mov	rax, qword ptr [rbp - 0x78]
0x40012a:	mov	edx, 0x64
0x40012f:	mov	rsi, rcx
0x400132:	mov	rdi, rax
0x400135:	call	0x500008
<Block for 0x40013a, 23 bytes>
0x40013a:	mov	rax, qword ptr [rbp - 0x78]
0x40013e:	add	rax, 0x63
0x400142:	mov	byte ptr [rax], 0
0x400145:	mov	rax, qword ptr [rbp - 0x78]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500010
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x400166
<Block for 0x400166, 2 bytes>
0x400166:	leave	
0x400167:	ret	
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500018
