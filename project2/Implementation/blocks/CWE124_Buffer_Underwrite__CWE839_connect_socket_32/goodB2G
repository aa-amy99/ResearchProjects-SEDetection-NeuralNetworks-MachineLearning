<Block for 0x400279, 86 bytes>
0x400279:	endbr64	
0x40027d:	push	rbp
0x40027e:	mov	rbp, rsp
0x400281:	sub	rsp, 0x70
0x400285:	mov	rax, qword ptr fs:[0x28]
0x40028e:	mov	qword ptr [rbp - 8], rax
0x400292:	xor	eax, eax
0x400294:	lea	rax, [rbp - 0x68]
0x400298:	mov	qword ptr [rbp - 0x50], rax
0x40029c:	lea	rax, [rbp - 0x68]
0x4002a0:	mov	qword ptr [rbp - 0x48], rax
0x4002a4:	mov	dword ptr [rbp - 0x68], 0xffffffff
0x4002ab:	mov	rax, qword ptr [rbp - 0x50]
0x4002af:	mov	eax, dword ptr [rax]
0x4002b1:	mov	dword ptr [rbp - 0x64], eax
0x4002b4:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4002bb:	mov	edx, 6
0x4002c0:	mov	esi, 1
0x4002c5:	mov	edi, 2
0x4002ca:	call	0x500000
<Block for 0x4002cf, 13 bytes>
0x4002cf:	mov	dword ptr [rbp - 0x5c], eax
0x4002d2:	cmp	dword ptr [rbp - 0x5c], -1
0x4002d6:	je	0x400372
<Block for 0x400372, 3 bytes>
0x400372:	nop	
0x400373:	jmp	0x400376
<Block for 0x4002dc, 22 bytes>
0x4002dc:	lea	rax, [rbp - 0x40]
0x4002e0:	mov	edx, 0x10
0x4002e5:	mov	esi, 0
0x4002ea:	mov	rdi, rax
0x4002ed:	call	0x500008
<Block for 0x400376, 6 bytes>
0x400376:	cmp	dword ptr [rbp - 0x5c], -1
0x40037a:	je	0x400386
<Block for 0x4002f2, 18 bytes>
0x4002f2:	mov	word ptr [rbp - 0x40], 2
0x4002f8:	lea	rdi, [rip + 0x141]
0x4002ff:	call	0x500010
<Block for 0x400386, 64 bytes>
0x400386:	mov	rax, qword ptr [rbp - 0x50]
0x40038a:	mov	edx, dword ptr [rbp - 0x64]
0x40038d:	mov	dword ptr [rax], edx
0x40038f:	mov	rax, qword ptr [rbp - 0x48]
0x400393:	mov	eax, dword ptr [rax]
0x400395:	mov	dword ptr [rbp - 0x54], eax
0x400398:	mov	qword ptr [rbp - 0x40], 0
0x4003a0:	mov	qword ptr [rbp - 0x38], 0
0x4003a8:	mov	qword ptr [rbp - 0x30], 0
0x4003b0:	mov	qword ptr [rbp - 0x28], 0
0x4003b8:	mov	qword ptr [rbp - 0x20], 0
0x4003c0:	cmp	dword ptr [rbp - 0x54], 0
0x4003c4:	js	0x4003fe
<Block for 0x40037c, 10 bytes>
0x40037c:	mov	eax, dword ptr [rbp - 0x5c]
0x40037f:	mov	edi, eax
0x400381:	call	0x500038
<Block for 0x400304, 13 bytes>
0x400304:	mov	dword ptr [rbp - 0x3c], eax
0x400307:	mov	edi, 0x6987
0x40030c:	call	0x500018
<Block for 0x4003fe, 12 bytes>
0x4003fe:	lea	rdi, [rip + 0x6b]
0x400405:	call	0x500048
<Block for 0x4003c6, 6 bytes>
0x4003c6:	cmp	dword ptr [rbp - 0x54], 9
0x4003ca:	jg	0x4003fe
<Block for 0x400311, 26 bytes>
0x400311:	mov	word ptr [rbp - 0x3e], ax
0x400315:	lea	rcx, [rbp - 0x40]
0x400319:	mov	eax, dword ptr [rbp - 0x5c]
0x40031c:	mov	edx, 0x10
0x400321:	mov	rsi, rcx
0x400324:	mov	edi, eax
0x400326:	call	0x500020
<Block for 0x40040a, 16 bytes>
0x40040a:	nop	
0x40040b:	mov	rax, qword ptr [rbp - 8]
0x40040f:	xor	rax, qword ptr fs:[0x28]
0x400418:	je	0x40041f
<Block for 0x4003cc, 22 bytes>
0x4003cc:	mov	eax, dword ptr [rbp - 0x54]
0x4003cf:	cdqe	
0x4003d1:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4003d9:	mov	dword ptr [rbp - 0x60], 0
0x4003e0:	jmp	0x4003f6
<Block for 0x40032b, 5 bytes>
0x40032b:	cmp	eax, -1
0x40032e:	je	0x400375
<Block for 0x40041f, 2 bytes>
0x40041f:	leave	
0x400420:	ret	
<Block for 0x40041a, 5 bytes>
0x40041a:	call	0x500050
<Block for 0x4003f6, 6 bytes>
0x4003f6:	cmp	dword ptr [rbp - 0x60], 9
0x4003fa:	jle	0x4003e2
<Block for 0x400330, 24 bytes>
0x400330:	lea	rsi, [rbp - 0x16]
0x400334:	mov	eax, dword ptr [rbp - 0x5c]
0x400337:	mov	ecx, 0
0x40033c:	mov	edx, 0xd
0x400341:	mov	edi, eax
0x400343:	call	0x500028
<Block for 0x400375, 1 bytes>
0x400375:	nop	
<Block for 0x4003e2, 16 bytes>
0x4003e2:	mov	eax, dword ptr [rbp - 0x60]
0x4003e5:	cdqe	
0x4003e7:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4003eb:	mov	edi, eax
0x4003ed:	call	0x500040
<Block for 0x4003fc, 2 bytes>
0x4003fc:	jmp	0x40040a
<Block for 0x400348, 9 bytes>
0x400348:	mov	dword ptr [rbp - 0x58], eax
0x40034b:	cmp	dword ptr [rbp - 0x58], -1
0x40034f:	je	0x400376
<Block for 0x4003f2, 10 bytes>
0x4003f2:	add	dword ptr [rbp - 0x60], 1
0x4003f6:	cmp	dword ptr [rbp - 0x60], 9
0x4003fa:	jle	0x4003e2
<Block for 0x400351, 6 bytes>
0x400351:	cmp	dword ptr [rbp - 0x58], 0
0x400355:	je	0x400376
<Block for 0x400357, 22 bytes>
0x400357:	mov	eax, dword ptr [rbp - 0x58]
0x40035a:	cdqe	
0x40035c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400361:	lea	rax, [rbp - 0x16]
0x400365:	mov	rdi, rax
0x400368:	call	0x500030
<Block for 0x40036d, 5 bytes>
0x40036d:	mov	dword ptr [rbp - 0x64], eax
0x400370:	jmp	0x400376
