<Block for 0x40018b, 43 bytes>
0x40018b:	endbr64	
0x40018f:	push	rbp
0x400190:	mov	rbp, rsp
0x400193:	push	rbx
0x400194:	sub	rsp, 0x88
0x40019b:	mov	rax, qword ptr fs:[0x28]
0x4001a4:	mov	qword ptr [rbp - 0x18], rax
0x4001a8:	xor	eax, eax
0x4001aa:	lea	rax, [rbp - 0x80]
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x400452
<Block for 0x4001b6, 21 bytes>
0x4001b6:	mov	qword ptr [rbp - 0x90], 0
0x4001c1:	mov	edi, 0x64
0x4001c6:	call	0x500000
<Block for 0x4001cb, 17 bytes>
0x4001cb:	mov	qword ptr [rbp - 0x88], rax
0x4001d2:	cmp	qword ptr [rbp - 0x88], 0
0x4001da:	jne	0x4001e6
<Block for 0x4001dc, 10 bytes>
0x4001dc:	mov	edi, 0xffffffff
0x4001e1:	call	0x500008
<Block for 0x4001e6, 25 bytes>
0x4001e6:	mov	rax, qword ptr [rbp - 0x88]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500010
<Block for 0x4001ff, 54 bytes>
0x4001ff:	mov	rax, qword ptr [rbp - 0x88]
0x400206:	add	rax, 0x63
0x40020a:	mov	byte ptr [rax], 0
0x40020d:	mov	rax, qword ptr [rbp - 0x88]
0x400214:	mov	qword ptr [rbp - 0x90], rax
0x40021b:	mov	dword ptr [rbp - 0x50], 0
0x400222:	lea	rdx, [rbp - 0x50]
0x400226:	lea	rax, [rbp - 0x80]
0x40022a:	mov	rsi, rdx
0x40022d:	mov	rdi, rax
0x400230:	call	0x40060a
<Block for 0x400235, 36 bytes>
0x400235:	mov	rdx, qword ptr [rbp - 0x90]
0x40023c:	mov	qword ptr [rax], rdx
0x40023f:	mov	dword ptr [rbp - 0x50], 1
0x400246:	lea	rdx, [rbp - 0x50]
0x40024a:	lea	rax, [rbp - 0x80]
0x40024e:	mov	rsi, rdx
0x400251:	mov	rdi, rax
0x400254:	call	0x40060a
<Block for 0x400259, 36 bytes>
0x400259:	mov	rdx, qword ptr [rbp - 0x90]
0x400260:	mov	qword ptr [rax], rdx
0x400263:	mov	dword ptr [rbp - 0x50], 2
0x40026a:	lea	rdx, [rbp - 0x50]
0x40026e:	lea	rax, [rbp - 0x80]
0x400272:	mov	rsi, rdx
0x400275:	mov	rdi, rax
0x400278:	call	0x40060a
<Block for 0x40027d, 29 bytes>
0x40027d:	mov	rdx, qword ptr [rbp - 0x90]
0x400284:	mov	qword ptr [rax], rdx
0x400287:	lea	rdx, [rbp - 0x80]
0x40028b:	lea	rax, [rbp - 0x50]
0x40028f:	mov	rsi, rdx
0x400292:	mov	rdi, rax
0x400295:	call	0x400492
<Block for 0x40029a, 12 bytes>
0x40029a:	lea	rax, [rbp - 0x50]
0x40029e:	mov	rdi, rax
0x4002a1:	call	0x500030
<Block for 0x4002a6, 12 bytes>
0x4002a6:	lea	rax, [rbp - 0x50]
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x400472
<Block for 0x4002b2, 12 bytes>
0x4002b2:	lea	rax, [rbp - 0x80]
0x4002b6:	mov	rdi, rax
0x4002b9:	call	0x400472
<Block for 0x4002be, 16 bytes>
0x4002be:	nop	
0x4002bf:	mov	rax, qword ptr [rbp - 0x18]
0x4002c3:	xor	rax, qword ptr fs:[0x28]
0x4002cc:	je	0x400308
<Block for 0x400308, 10 bytes>
0x400308:	add	rsp, 0x88
0x40030f:	pop	rbx
0x400310:	pop	rbp
0x400311:	ret	
<Block for 0x4002ce, 2 bytes>
0x4002ce:	jmp	0x400303
<Block for 0x400303, 5 bytes>
0x400303:	call	0x500028
