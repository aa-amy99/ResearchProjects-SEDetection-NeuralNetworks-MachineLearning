<Block for 0x40006e, 23 bytes>
0x40006e:	endbr64	
0x400072:	push	rbp
0x400073:	mov	rbp, rsp
0x400076:	sub	rsp, 0x10
0x40007a:	mov	eax, dword ptr [rip + 0x114]
0x400080:	cmp	eax, 5
0x400083:	je	0x400093
<Block for 0x400093, 5 bytes>
0x400093:	call	0x500000
<Block for 0x400085, 12 bytes>
0x400085:	lea	rdi, [rip + 0x137]
0x40008c:	call	0x500008
<Block for 0x400098, 55 bytes>
0x400098:	mov	edx, eax
0x40009a:	movsxd	rax, edx
0x40009d:	imul	rax, rax, 0x55555556
0x4000a4:	shr	rax, 0x20
0x4000a8:	mov	rcx, rax
0x4000ab:	mov	eax, edx
0x4000ad:	sar	eax, 0x1f
0x4000b0:	mov	esi, ecx
0x4000b2:	sub	esi, eax
0x4000b4:	mov	eax, esi
0x4000b6:	mov	dword ptr [rbp - 4], eax
0x4000b9:	mov	ecx, dword ptr [rbp - 4]
0x4000bc:	mov	eax, ecx
0x4000be:	add	eax, eax
0x4000c0:	add	eax, ecx
0x4000c2:	sub	edx, eax
0x4000c4:	mov	eax, edx
0x4000c6:	mov	dword ptr [rbp - 4], eax
0x4000c9:	cmp	dword ptr [rbp - 4], 0
0x4000cd:	jne	0x4000dd
<Block for 0x400091, 2 bytes>
0x400091:	jmp	0x4000f5
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rdi, [rip + 0x102]
0x4000d6:	call	0x500008
<Block for 0x4000dd, 12 bytes>
0x4000dd:	lea	rdi, [rip + 0xb4]
0x4000e4:	call	0x500008
<Block for 0x4000f5, 3 bytes>
0x4000f5:	nop	
0x4000f6:	leave	
0x4000f7:	ret	
<Block for 0x4000db, 2 bytes>
0x4000db:	jmp	0x4000e9
<Block for 0x4000e9, 12 bytes>
0x4000e9:	lea	rdi, [rip + 0x100]
0x4000f0:	call	0x500008
