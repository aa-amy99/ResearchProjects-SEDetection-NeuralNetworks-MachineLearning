<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 5
0x400023:	mov	eax, 0
0x400028:	call	0x500000
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	je	0x40003b
<Block for 0x40003b, 18 bytes>
0x40003b:	lea	rax, [rbp - 0x18]
0x40003f:	mov	qword ptr [rbp - 0x10], rax
0x400043:	mov	eax, 0
0x400048:	call	0x500000
<Block for 0x400031, 10 bytes>
0x400031:	mov	qword ptr [rbp - 0x10], 0
0x400039:	jmp	0x400043
<Block for 0x40004d, 4 bytes>
0x40004d:	test	eax, eax
0x40004f:	je	0x400062
<Block for 0x400043, 10 bytes>
0x400043:	mov	eax, 0
0x400048:	call	0x500000
<Block for 0x400062, 7 bytes>
0x400062:	cmp	qword ptr [rbp - 0x10], 0
0x400067:	je	0x40007a
<Block for 0x400051, 15 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x10]
0x400055:	mov	rax, qword ptr [rax]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500008
<Block for 0x40007a, 12 bytes>
0x40007a:	lea	rdi, [rip + 0x14a]
0x400081:	call	0x500010
<Block for 0x400069, 15 bytes>
0x400069:	mov	rax, qword ptr [rbp - 0x10]
0x40006d:	mov	rax, qword ptr [rax]
0x400070:	mov	rdi, rax
0x400073:	call	0x500008
<Block for 0x400060, 2 bytes>
0x400060:	jmp	0x400086
<Block for 0x400086, 16 bytes>
0x400086:	nop	
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	xor	rax, qword ptr fs:[0x28]
0x400094:	je	0x40009b
<Block for 0x400078, 2 bytes>
0x400078:	jmp	0x400086
<Block for 0x40009b, 2 bytes>
0x40009b:	leave	
0x40009c:	ret	
<Block for 0x400096, 5 bytes>
0x400096:	call	0x500018
