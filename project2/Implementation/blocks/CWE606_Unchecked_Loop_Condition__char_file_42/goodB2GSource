<Block for 0x4002d1, 28 bytes>
0x4002d1:	endbr64	
0x4002d5:	push	rbp
0x4002d6:	mov	rbp, rsp
0x4002d9:	sub	rsp, 0x20
0x4002dd:	mov	qword ptr [rbp - 0x18], rdi
0x4002e1:	mov	rax, qword ptr [rbp - 0x18]
0x4002e5:	mov	rdi, rax
0x4002e8:	call	0x500000
<Block for 0x4002ed, 19 bytes>
0x4002ed:	mov	qword ptr [rbp - 0x10], rax
0x4002f1:	mov	eax, 0x64
0x4002f6:	sub	rax, qword ptr [rbp - 0x10]
0x4002fa:	cmp	rax, 1
0x4002fe:	jbe	0x400373
<Block for 0x400373, 6 bytes>
0x400373:	mov	rax, qword ptr [rbp - 0x18]
0x400377:	leave	
0x400378:	ret	
<Block for 0x400300, 19 bytes>
0x400300:	lea	rsi, [rip + 0x1a3]
0x400307:	lea	rdi, [rip + 0x19e]
0x40030e:	call	0x500008
<Block for 0x400313, 11 bytes>
0x400313:	mov	qword ptr [rbp - 8], rax
0x400317:	cmp	qword ptr [rbp - 8], 0
0x40031c:	je	0x400373
<Block for 0x40031e, 42 bytes>
0x40031e:	mov	rax, qword ptr [rbp - 0x10]
0x400322:	mov	edx, 0x64
0x400327:	sub	edx, eax
0x400329:	mov	eax, edx
0x40032b:	mov	esi, eax
0x40032d:	mov	rdx, qword ptr [rbp - 0x18]
0x400331:	mov	rax, qword ptr [rbp - 0x10]
0x400335:	lea	rcx, [rdx + rax]
0x400339:	mov	rax, qword ptr [rbp - 8]
0x40033d:	mov	rdx, rax
0x400340:	mov	rdi, rcx
0x400343:	call	0x500010
<Block for 0x400348, 5 bytes>
0x400348:	test	rax, rax
0x40034b:	jne	0x400367
<Block for 0x40034d, 12 bytes>
0x40034d:	lea	rdi, [rip + 0x166]
0x400354:	call	0x500018
<Block for 0x400367, 12 bytes>
0x400367:	mov	rax, qword ptr [rbp - 8]
0x40036b:	mov	rdi, rax
0x40036e:	call	0x500020
<Block for 0x400359, 26 bytes>
0x400359:	mov	rdx, qword ptr [rbp - 0x18]
0x40035d:	mov	rax, qword ptr [rbp - 0x10]
0x400361:	add	rax, rdx
0x400364:	mov	byte ptr [rax], 0
0x400367:	mov	rax, qword ptr [rbp - 8]
0x40036b:	mov	rdi, rax
0x40036e:	call	0x500020
