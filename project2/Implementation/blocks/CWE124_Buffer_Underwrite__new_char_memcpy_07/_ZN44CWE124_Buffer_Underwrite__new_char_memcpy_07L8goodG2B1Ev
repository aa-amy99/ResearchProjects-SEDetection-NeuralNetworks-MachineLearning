<Block for 0x400141, 53 bytes>
0x400141:	endbr64	
0x400145:	push	rbp
0x400146:	mov	rbp, rsp
0x400149:	push	rbx
0x40014a:	sub	rsp, 0x88
0x400151:	mov	rax, qword ptr fs:[0x28]
0x40015a:	mov	qword ptr [rbp - 0x18], rax
0x40015e:	xor	eax, eax
0x400160:	mov	qword ptr [rbp - 0x90], 0
0x40016b:	mov	eax, dword ptr [rip + 0x26f]
0x400171:	cmp	eax, 5
0x400174:	je	0x400184
<Block for 0x400184, 10 bytes>
0x400184:	mov	edi, 0x64
0x400189:	call	0x500000
<Block for 0x400176, 12 bytes>
0x400176:	lea	rdi, [rip + 0x267]
0x40017d:	call	0x500010
<Block for 0x40018e, 32 bytes>
0x40018e:	mov	qword ptr [rbp - 0x88], rax
0x400195:	mov	rax, qword ptr [rbp - 0x88]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x41
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500008
<Block for 0x400182, 2 bytes>
0x400182:	jmp	0x4001ca
<Block for 0x4001ae, 50 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x88]
0x4001b5:	add	rax, 0x63
0x4001b9:	mov	byte ptr [rax], 0
0x4001bc:	mov	rax, qword ptr [rbp - 0x88]
0x4001c3:	mov	qword ptr [rbp - 0x90], rax
0x4001ca:	lea	rax, [rbp - 0x80]
0x4001ce:	mov	edx, 0x63
0x4001d3:	mov	esi, 0x43
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500008
<Block for 0x4001ca, 22 bytes>
0x4001ca:	lea	rax, [rbp - 0x80]
0x4001ce:	mov	edx, 0x63
0x4001d3:	mov	esi, 0x43
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500008
<Block for 0x4001e0, 141 bytes>
0x4001e0:	mov	byte ptr [rbp - 0x1d], 0
0x4001e4:	mov	rax, qword ptr [rbp - 0x90]
0x4001eb:	mov	rcx, qword ptr [rbp - 0x80]
0x4001ef:	mov	rbx, qword ptr [rbp - 0x78]
0x4001f3:	mov	qword ptr [rax], rcx
0x4001f6:	mov	qword ptr [rax + 8], rbx
0x4001fa:	mov	rcx, qword ptr [rbp - 0x70]
0x4001fe:	mov	rbx, qword ptr [rbp - 0x68]
0x400202:	mov	qword ptr [rax + 0x10], rcx
0x400206:	mov	qword ptr [rax + 0x18], rbx
0x40020a:	mov	rcx, qword ptr [rbp - 0x60]
0x40020e:	mov	rbx, qword ptr [rbp - 0x58]
0x400212:	mov	qword ptr [rax + 0x20], rcx
0x400216:	mov	qword ptr [rax + 0x28], rbx
0x40021a:	mov	rcx, qword ptr [rbp - 0x50]
0x40021e:	mov	rbx, qword ptr [rbp - 0x48]
0x400222:	mov	qword ptr [rax + 0x30], rcx
0x400226:	mov	qword ptr [rax + 0x38], rbx
0x40022a:	mov	rcx, qword ptr [rbp - 0x40]
0x40022e:	mov	rbx, qword ptr [rbp - 0x38]
0x400232:	mov	qword ptr [rax + 0x40], rcx
0x400236:	mov	qword ptr [rax + 0x48], rbx
0x40023a:	mov	rcx, qword ptr [rbp - 0x30]
0x40023e:	mov	rbx, qword ptr [rbp - 0x28]
0x400242:	mov	qword ptr [rax + 0x50], rcx
0x400246:	mov	qword ptr [rax + 0x58], rbx
0x40024a:	mov	edx, dword ptr [rbp - 0x20]
0x40024d:	mov	dword ptr [rax + 0x60], edx
0x400250:	mov	rax, qword ptr [rbp - 0x90]
0x400257:	add	rax, 0x63
0x40025b:	mov	byte ptr [rax], 0
0x40025e:	mov	rax, qword ptr [rbp - 0x90]
0x400265:	mov	rdi, rax
0x400268:	call	0x500010
<Block for 0x40026d, 16 bytes>
0x40026d:	nop	
0x40026e:	mov	rax, qword ptr [rbp - 0x18]
0x400272:	xor	rax, qword ptr fs:[0x28]
0x40027b:	je	0x400282
<Block for 0x400282, 10 bytes>
0x400282:	add	rsp, 0x88
0x400289:	pop	rbx
0x40028a:	pop	rbp
0x40028b:	ret	
<Block for 0x40027d, 5 bytes>
0x40027d:	call	0x500018
