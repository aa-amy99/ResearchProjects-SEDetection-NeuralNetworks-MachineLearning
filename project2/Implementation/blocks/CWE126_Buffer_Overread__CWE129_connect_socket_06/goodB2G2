<Block for 0x4002f2, 48 bytes>
0x4002f2:	endbr64	
0x4002f6:	push	rbp
0x4002f7:	mov	rbp, rsp
0x4002fa:	sub	rsp, 0x50
0x4002fe:	mov	rax, qword ptr fs:[0x28]
0x400307:	mov	qword ptr [rbp - 8], rax
0x40030b:	xor	eax, eax
0x40030d:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400314:	mov	eax, 5
0x400319:	cmp	eax, 5
0x40031c:	jne	0x4003f4
<Block for 0x400322, 27 bytes>
0x400322:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400329:	mov	edx, 6
0x40032e:	mov	esi, 1
0x400333:	mov	edi, 2
0x400338:	call	0x500000
<Block for 0x4003f4, 10 bytes>
0x4003f4:	mov	eax, 5
0x4003f9:	cmp	eax, 5
0x4003fc:	jne	0x400450
<Block for 0x40033d, 13 bytes>
0x40033d:	mov	dword ptr [rbp - 0x48], eax
0x400340:	cmp	dword ptr [rbp - 0x48], -1
0x400344:	je	0x4003e0
<Block for 0x4003fe, 46 bytes>
0x4003fe:	mov	qword ptr [rbp - 0x40], 0
0x400406:	mov	qword ptr [rbp - 0x38], 0
0x40040e:	mov	qword ptr [rbp - 0x30], 0
0x400416:	mov	qword ptr [rbp - 0x28], 0
0x40041e:	mov	qword ptr [rbp - 0x20], 0
0x400426:	cmp	dword ptr [rbp - 0x4c], 0
0x40042a:	js	0x400444
<Block for 0x400450, 16 bytes>
0x400450:	nop	
0x400451:	mov	rax, qword ptr [rbp - 8]
0x400455:	xor	rax, qword ptr fs:[0x28]
0x40045e:	je	0x400465
<Block for 0x4003e0, 3 bytes>
0x4003e0:	nop	
0x4003e1:	jmp	0x4003e4
<Block for 0x40034a, 22 bytes>
0x40034a:	lea	rax, [rbp - 0x40]
0x40034e:	mov	edx, 0x10
0x400353:	mov	esi, 0
0x400358:	mov	rdi, rax
0x40035b:	call	0x500008
<Block for 0x400444, 12 bytes>
0x400444:	lea	rdi, [rip + 0x1e5]
0x40044b:	call	0x500048
<Block for 0x40042c, 6 bytes>
0x40042c:	cmp	dword ptr [rbp - 0x4c], 9
0x400430:	jg	0x400444
<Block for 0x400465, 2 bytes>
0x400465:	leave	
0x400466:	ret	
<Block for 0x400460, 5 bytes>
0x400460:	call	0x500050
<Block for 0x4003e4, 6 bytes>
0x4003e4:	cmp	dword ptr [rbp - 0x48], -1
0x4003e8:	je	0x4003f4
<Block for 0x400360, 18 bytes>
0x400360:	mov	word ptr [rbp - 0x40], 2
0x400366:	lea	rdi, [rip + 0x27f]
0x40036d:	call	0x500010
<Block for 0x400432, 16 bytes>
0x400432:	mov	eax, dword ptr [rbp - 0x4c]
0x400435:	cdqe	
0x400437:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40043b:	mov	edi, eax
0x40043d:	call	0x500040
<Block for 0x4003ea, 10 bytes>
0x4003ea:	mov	eax, dword ptr [rbp - 0x48]
0x4003ed:	mov	edi, eax
0x4003ef:	call	0x500038
<Block for 0x400372, 13 bytes>
0x400372:	mov	dword ptr [rbp - 0x3c], eax
0x400375:	mov	edi, 0x6987
0x40037a:	call	0x500018
<Block for 0x400442, 2 bytes>
0x400442:	jmp	0x400450
<Block for 0x40037f, 26 bytes>
0x40037f:	mov	word ptr [rbp - 0x3e], ax
0x400383:	lea	rcx, [rbp - 0x40]
0x400387:	mov	eax, dword ptr [rbp - 0x48]
0x40038a:	mov	edx, 0x10
0x40038f:	mov	rsi, rcx
0x400392:	mov	edi, eax
0x400394:	call	0x500020
<Block for 0x400399, 5 bytes>
0x400399:	cmp	eax, -1
0x40039c:	je	0x4003e3
<Block for 0x40039e, 24 bytes>
0x40039e:	lea	rsi, [rbp - 0x16]
0x4003a2:	mov	eax, dword ptr [rbp - 0x48]
0x4003a5:	mov	ecx, 0
0x4003aa:	mov	edx, 0xd
0x4003af:	mov	edi, eax
0x4003b1:	call	0x500028
<Block for 0x4003e3, 1 bytes>
0x4003e3:	nop	
<Block for 0x4003b6, 9 bytes>
0x4003b6:	mov	dword ptr [rbp - 0x44], eax
0x4003b9:	cmp	dword ptr [rbp - 0x44], -1
0x4003bd:	je	0x4003e4
<Block for 0x4003bf, 6 bytes>
0x4003bf:	cmp	dword ptr [rbp - 0x44], 0
0x4003c3:	je	0x4003e4
<Block for 0x4003c5, 22 bytes>
0x4003c5:	mov	eax, dword ptr [rbp - 0x44]
0x4003c8:	cdqe	
0x4003ca:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003cf:	lea	rax, [rbp - 0x16]
0x4003d3:	mov	rdi, rax
0x4003d6:	call	0x500030
<Block for 0x4003db, 5 bytes>
0x4003db:	mov	dword ptr [rbp - 0x4c], eax
0x4003de:	jmp	0x4003e4
