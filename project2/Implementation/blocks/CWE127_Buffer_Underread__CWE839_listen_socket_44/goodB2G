<Block for 0x400323, 79 bytes>
0x400323:	endbr64	
0x400327:	push	rbp
0x400328:	mov	rbp, rsp
0x40032b:	sub	rsp, 0x50
0x40032f:	mov	rax, qword ptr fs:[0x28]
0x400338:	mov	qword ptr [rbp - 8], rax
0x40033c:	xor	eax, eax
0x40033e:	lea	rax, [rip - 0xa9]
0x400345:	mov	qword ptr [rbp - 0x38], rax
0x400349:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400350:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400357:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40035e:	mov	edx, 6
0x400363:	mov	esi, 1
0x400368:	mov	edi, 2
0x40036d:	call	0x500018
<Block for 0x400372, 13 bytes>
0x400372:	mov	dword ptr [rbp - 0x40], eax
0x400375:	cmp	dword ptr [rbp - 0x40], -1
0x400379:	je	0x40043e
<Block for 0x40043e, 3 bytes>
0x40043e:	nop	
0x40043f:	jmp	0x400448
<Block for 0x40037f, 22 bytes>
0x40037f:	lea	rax, [rbp - 0x30]
0x400383:	mov	edx, 0x10
0x400388:	mov	esi, 0
0x40038d:	mov	rdi, rax
0x400390:	call	0x500020
<Block for 0x400448, 6 bytes>
0x400448:	cmp	dword ptr [rbp - 0x40], -1
0x40044c:	je	0x400458
<Block for 0x400395, 23 bytes>
0x400395:	mov	word ptr [rbp - 0x30], 2
0x40039b:	mov	dword ptr [rbp - 0x2c], 0
0x4003a2:	mov	edi, 0x6987
0x4003a7:	call	0x500028
<Block for 0x400458, 6 bytes>
0x400458:	cmp	dword ptr [rbp - 0x44], -1
0x40045c:	je	0x400468
<Block for 0x40044e, 10 bytes>
0x40044e:	mov	eax, dword ptr [rbp - 0x40]
0x400451:	mov	edi, eax
0x400453:	call	0x500058
<Block for 0x4003ac, 26 bytes>
0x4003ac:	mov	word ptr [rbp - 0x2e], ax
0x4003b0:	lea	rcx, [rbp - 0x30]
0x4003b4:	mov	eax, dword ptr [rbp - 0x40]
0x4003b7:	mov	edx, 0x10
0x4003bc:	mov	rsi, rcx
0x4003bf:	mov	edi, eax
0x4003c1:	call	0x500030
<Block for 0x400468, 11 bytes>
0x400468:	mov	eax, dword ptr [rbp - 0x48]
0x40046b:	mov	rdx, qword ptr [rbp - 0x38]
0x40046f:	mov	edi, eax
0x400471:	call	rdx
<Block for 0x40045e, 10 bytes>
0x40045e:	mov	eax, dword ptr [rbp - 0x44]
0x400461:	mov	edi, eax
0x400463:	call	0x500058
<Block for 0x4003c6, 5 bytes>
0x4003c6:	cmp	eax, -1
0x4003c9:	je	0x400441
<Block for 0x400473, 16 bytes>
0x400473:	nop	
0x400474:	mov	rax, qword ptr [rbp - 8]
0x400478:	xor	rax, qword ptr fs:[0x28]
0x400481:	je	0x400488
<Block for 0x400441, 3 bytes>
0x400441:	nop	
0x400442:	jmp	0x400448
<Block for 0x4003cb, 15 bytes>
0x4003cb:	mov	eax, dword ptr [rbp - 0x40]
0x4003ce:	mov	esi, 5
0x4003d3:	mov	edi, eax
0x4003d5:	call	0x500038
<Block for 0x400488, 2 bytes>
0x400488:	leave	
0x400489:	ret	
<Block for 0x400483, 5 bytes>
0x400483:	call	0x500010
<Block for 0x4003da, 5 bytes>
0x4003da:	cmp	eax, -1
0x4003dd:	je	0x400444
<Block for 0x400444, 3 bytes>
0x400444:	nop	
0x400445:	jmp	0x400448
<Block for 0x4003df, 20 bytes>
0x4003df:	mov	eax, dword ptr [rbp - 0x40]
0x4003e2:	mov	edx, 0
0x4003e7:	mov	esi, 0
0x4003ec:	mov	edi, eax
0x4003ee:	call	0x500040
<Block for 0x4003f3, 9 bytes>
0x4003f3:	mov	dword ptr [rbp - 0x44], eax
0x4003f6:	cmp	dword ptr [rbp - 0x44], -1
0x4003fa:	je	0x400447
<Block for 0x4003fc, 24 bytes>
0x4003fc:	lea	rsi, [rbp - 0x16]
0x400400:	mov	eax, dword ptr [rbp - 0x44]
0x400403:	mov	ecx, 0
0x400408:	mov	edx, 0xd
0x40040d:	mov	edi, eax
0x40040f:	call	0x500048
<Block for 0x400447, 1 bytes>
0x400447:	nop	
<Block for 0x400414, 9 bytes>
0x400414:	mov	dword ptr [rbp - 0x3c], eax
0x400417:	cmp	dword ptr [rbp - 0x3c], -1
0x40041b:	je	0x400448
<Block for 0x40041d, 6 bytes>
0x40041d:	cmp	dword ptr [rbp - 0x3c], 0
0x400421:	je	0x400448
<Block for 0x400423, 22 bytes>
0x400423:	mov	eax, dword ptr [rbp - 0x3c]
0x400426:	cdqe	
0x400428:	mov	byte ptr [rbp + rax - 0x16], 0
0x40042d:	lea	rax, [rbp - 0x16]
0x400431:	mov	rdi, rax
0x400434:	call	0x500050
<Block for 0x400439, 5 bytes>
0x400439:	mov	dword ptr [rbp - 0x48], eax
0x40043c:	jmp	0x400448
