<Block for 0x4001ea, 40 bytes>
0x4001ea:	endbr64	
0x4001ee:	push	rbp
0x4001ef:	mov	rbp, rsp
0x4001f2:	push	rbx
0x4001f3:	sub	rsp, 0x58
0x4001f7:	mov	rax, qword ptr fs:[0x28]
0x400200:	mov	qword ptr [rbp - 0x18], rax
0x400204:	xor	eax, eax
0x400206:	lea	rax, [rbp - 0x50]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x40039e
<Block for 0x400212, 27 bytes>
0x400212:	mov	qword ptr [rbp - 0x58], 0
0x40021a:	lea	rdx, [rbp - 0x58]
0x40021e:	lea	rax, [rbp - 0x50]
0x400222:	mov	rsi, rdx
0x400225:	mov	rdi, rax
0x400228:	call	0x4004a8
<Block for 0x40022d, 19 bytes>
0x40022d:	lea	rdx, [rbp - 0x58]
0x400231:	lea	rax, [rbp - 0x50]
0x400235:	mov	rsi, rdx
0x400238:	mov	rdi, rax
0x40023b:	call	0x4004a8
<Block for 0x400240, 19 bytes>
0x400240:	lea	rdx, [rbp - 0x58]
0x400244:	lea	rax, [rbp - 0x50]
0x400248:	mov	rsi, rdx
0x40024b:	mov	rdi, rax
0x40024e:	call	0x4004a8
<Block for 0x400253, 19 bytes>
0x400253:	lea	rdx, [rbp - 0x50]
0x400257:	lea	rax, [rbp - 0x30]
0x40025b:	mov	rsi, rdx
0x40025e:	mov	rdi, rax
0x400261:	call	0x4004e2
<Block for 0x400266, 12 bytes>
0x400266:	lea	rax, [rbp - 0x30]
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500020
<Block for 0x400272, 12 bytes>
0x400272:	lea	rax, [rbp - 0x30]
0x400276:	mov	rdi, rax
0x400279:	call	0x4003be
<Block for 0x40027e, 12 bytes>
0x40027e:	lea	rax, [rbp - 0x50]
0x400282:	mov	rdi, rax
0x400285:	call	0x4003be
<Block for 0x40028a, 16 bytes>
0x40028a:	nop	
0x40028b:	mov	rax, qword ptr [rbp - 0x18]
0x40028f:	xor	rax, qword ptr fs:[0x28]
0x400298:	je	0x4002d4
<Block for 0x4002d4, 7 bytes>
0x4002d4:	add	rsp, 0x58
0x4002d8:	pop	rbx
0x4002d9:	pop	rbp
0x4002da:	ret	
<Block for 0x40029a, 2 bytes>
0x40029a:	jmp	0x4002cf
<Block for 0x4002cf, 5 bytes>
0x4002cf:	call	0x500010
