<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400022:	nop	
0x400023:	endbr64	
0x400027:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40002e:	mov	edx, 6
0x400033:	mov	esi, 1
0x400038:	mov	edi, 2
0x40003d:	call	0x500000
<Block for 0x400042, 13 bytes>
0x400042:	mov	dword ptr [rbp - 0x48], eax
0x400045:	cmp	dword ptr [rbp - 0x48], -1
0x400049:	je	0x4000e5
<Block for 0x4000e5, 3 bytes>
0x4000e5:	nop	
0x4000e6:	jmp	0x4000e9
<Block for 0x40004f, 22 bytes>
0x40004f:	lea	rax, [rbp - 0x40]
0x400053:	mov	edx, 0x10
0x400058:	mov	esi, 0
0x40005d:	mov	rdi, rax
0x400060:	call	0x500008
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x48], -1
0x4000ed:	je	0x4000f9
<Block for 0x400065, 18 bytes>
0x400065:	mov	word ptr [rbp - 0x40], 2
0x40006b:	lea	rdi, [rip + 0x36e]
0x400072:	call	0x500010
<Block for 0x4000f9, 51 bytes>
0x4000f9:	nop	
0x4000fa:	endbr64	
0x4000fe:	mov	qword ptr [rbp - 0x40], 0
0x400106:	mov	qword ptr [rbp - 0x38], 0
0x40010e:	mov	qword ptr [rbp - 0x30], 0
0x400116:	mov	qword ptr [rbp - 0x28], 0
0x40011e:	mov	qword ptr [rbp - 0x20], 0
0x400126:	cmp	dword ptr [rbp - 0x50], 9
0x40012a:	jg	0x40015e
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x48]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500038
<Block for 0x400077, 13 bytes>
0x400077:	mov	dword ptr [rbp - 0x3c], eax
0x40007a:	mov	edi, 0x6987
0x40007f:	call	0x500018
<Block for 0x40012c, 22 bytes>
0x40012c:	mov	eax, dword ptr [rbp - 0x50]
0x40012f:	cdqe	
0x400131:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400139:	mov	dword ptr [rbp - 0x4c], 0
0x400140:	jmp	0x400156
<Block for 0x40015e, 12 bytes>
0x40015e:	lea	rdi, [rip + 0x28b]
0x400165:	call	0x500048
<Block for 0x400084, 26 bytes>
0x400084:	mov	word ptr [rbp - 0x3e], ax
0x400088:	lea	rcx, [rbp - 0x40]
0x40008c:	mov	eax, dword ptr [rbp - 0x48]
0x40008f:	mov	edx, 0x10
0x400094:	mov	rsi, rcx
0x400097:	mov	edi, eax
0x400099:	call	0x500020
<Block for 0x400156, 6 bytes>
0x400156:	cmp	dword ptr [rbp - 0x4c], 9
0x40015a:	jle	0x400142
<Block for 0x40016a, 16 bytes>
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x40009e, 5 bytes>
0x40009e:	cmp	eax, -1
0x4000a1:	je	0x4000e8
<Block for 0x400142, 16 bytes>
0x400142:	mov	eax, dword ptr [rbp - 0x4c]
0x400145:	cdqe	
0x400147:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40014b:	mov	edi, eax
0x40014d:	call	0x500040
<Block for 0x40015c, 2 bytes>
0x40015c:	jmp	0x40016a
<Block for 0x40017f, 2 bytes>
0x40017f:	leave	
0x400180:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500050
<Block for 0x4000a3, 24 bytes>
0x4000a3:	lea	rsi, [rbp - 0x16]
0x4000a7:	mov	eax, dword ptr [rbp - 0x48]
0x4000aa:	mov	ecx, 0
0x4000af:	mov	edx, 0xd
0x4000b4:	mov	edi, eax
0x4000b6:	call	0x500028
<Block for 0x4000e8, 1 bytes>
0x4000e8:	nop	
<Block for 0x400152, 10 bytes>
0x400152:	add	dword ptr [rbp - 0x4c], 1
0x400156:	cmp	dword ptr [rbp - 0x4c], 9
0x40015a:	jle	0x400142
<Block for 0x4000bb, 9 bytes>
0x4000bb:	mov	dword ptr [rbp - 0x44], eax
0x4000be:	cmp	dword ptr [rbp - 0x44], -1
0x4000c2:	je	0x4000e9
<Block for 0x4000c4, 6 bytes>
0x4000c4:	cmp	dword ptr [rbp - 0x44], 0
0x4000c8:	je	0x4000e9
<Block for 0x4000ca, 22 bytes>
0x4000ca:	mov	eax, dword ptr [rbp - 0x44]
0x4000cd:	cdqe	
0x4000cf:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000d4:	lea	rax, [rbp - 0x16]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500030
<Block for 0x4000e0, 5 bytes>
0x4000e0:	mov	dword ptr [rbp - 0x50], eax
0x4000e3:	jmp	0x4000e9
