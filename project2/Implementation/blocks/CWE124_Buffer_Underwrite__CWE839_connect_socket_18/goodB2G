<Block for 0x400181, 66 bytes>
0x400181:	endbr64	
0x400185:	push	rbp
0x400186:	mov	rbp, rsp
0x400189:	sub	rsp, 0x50
0x40018d:	mov	rax, qword ptr fs:[0x28]
0x400196:	mov	qword ptr [rbp - 8], rax
0x40019a:	xor	eax, eax
0x40019c:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4001a3:	nop	
0x4001a4:	endbr64	
0x4001a8:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001af:	mov	edx, 6
0x4001b4:	mov	esi, 1
0x4001b9:	mov	edi, 2
0x4001be:	call	0x500000
<Block for 0x4001c3, 13 bytes>
0x4001c3:	mov	dword ptr [rbp - 0x48], eax
0x4001c6:	cmp	dword ptr [rbp - 0x48], -1
0x4001ca:	je	0x400266
<Block for 0x400266, 3 bytes>
0x400266:	nop	
0x400267:	jmp	0x40026a
<Block for 0x4001d0, 22 bytes>
0x4001d0:	lea	rax, [rbp - 0x40]
0x4001d4:	mov	edx, 0x10
0x4001d9:	mov	esi, 0
0x4001de:	mov	rdi, rax
0x4001e1:	call	0x500008
<Block for 0x40026a, 6 bytes>
0x40026a:	cmp	dword ptr [rbp - 0x48], -1
0x40026e:	je	0x40027a
<Block for 0x4001e6, 18 bytes>
0x4001e6:	mov	word ptr [rbp - 0x40], 2
0x4001ec:	lea	rdi, [rip + 0x1ed]
0x4001f3:	call	0x500010
<Block for 0x40027a, 51 bytes>
0x40027a:	nop	
0x40027b:	endbr64	
0x40027f:	mov	qword ptr [rbp - 0x40], 0
0x400287:	mov	qword ptr [rbp - 0x38], 0
0x40028f:	mov	qword ptr [rbp - 0x30], 0
0x400297:	mov	qword ptr [rbp - 0x28], 0
0x40029f:	mov	qword ptr [rbp - 0x20], 0
0x4002a7:	cmp	dword ptr [rbp - 0x50], 0
0x4002ab:	js	0x4002e5
<Block for 0x400270, 10 bytes>
0x400270:	mov	eax, dword ptr [rbp - 0x48]
0x400273:	mov	edi, eax
0x400275:	call	0x500038
<Block for 0x4001f8, 13 bytes>
0x4001f8:	mov	dword ptr [rbp - 0x3c], eax
0x4001fb:	mov	edi, 0x6987
0x400200:	call	0x500018
<Block for 0x4002e5, 12 bytes>
0x4002e5:	lea	rdi, [rip + 0x124]
0x4002ec:	call	0x500048
<Block for 0x4002ad, 6 bytes>
0x4002ad:	cmp	dword ptr [rbp - 0x50], 9
0x4002b1:	jg	0x4002e5
<Block for 0x400205, 26 bytes>
0x400205:	mov	word ptr [rbp - 0x3e], ax
0x400209:	lea	rcx, [rbp - 0x40]
0x40020d:	mov	eax, dword ptr [rbp - 0x48]
0x400210:	mov	edx, 0x10
0x400215:	mov	rsi, rcx
0x400218:	mov	edi, eax
0x40021a:	call	0x500020
<Block for 0x4002f1, 16 bytes>
0x4002f1:	nop	
0x4002f2:	mov	rax, qword ptr [rbp - 8]
0x4002f6:	xor	rax, qword ptr fs:[0x28]
0x4002ff:	je	0x400306
<Block for 0x4002b3, 22 bytes>
0x4002b3:	mov	eax, dword ptr [rbp - 0x50]
0x4002b6:	cdqe	
0x4002b8:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002c0:	mov	dword ptr [rbp - 0x4c], 0
0x4002c7:	jmp	0x4002dd
<Block for 0x40021f, 5 bytes>
0x40021f:	cmp	eax, -1
0x400222:	je	0x400269
<Block for 0x400306, 2 bytes>
0x400306:	leave	
0x400307:	ret	
<Block for 0x400301, 5 bytes>
0x400301:	call	0x500050
<Block for 0x4002dd, 6 bytes>
0x4002dd:	cmp	dword ptr [rbp - 0x4c], 9
0x4002e1:	jle	0x4002c9
<Block for 0x400224, 24 bytes>
0x400224:	lea	rsi, [rbp - 0x16]
0x400228:	mov	eax, dword ptr [rbp - 0x48]
0x40022b:	mov	ecx, 0
0x400230:	mov	edx, 0xd
0x400235:	mov	edi, eax
0x400237:	call	0x500028
<Block for 0x400269, 1 bytes>
0x400269:	nop	
<Block for 0x4002c9, 16 bytes>
0x4002c9:	mov	eax, dword ptr [rbp - 0x4c]
0x4002cc:	cdqe	
0x4002ce:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002d2:	mov	edi, eax
0x4002d4:	call	0x500040
<Block for 0x4002e3, 2 bytes>
0x4002e3:	jmp	0x4002f1
<Block for 0x40023c, 9 bytes>
0x40023c:	mov	dword ptr [rbp - 0x44], eax
0x40023f:	cmp	dword ptr [rbp - 0x44], -1
0x400243:	je	0x40026a
<Block for 0x4002d9, 10 bytes>
0x4002d9:	add	dword ptr [rbp - 0x4c], 1
0x4002dd:	cmp	dword ptr [rbp - 0x4c], 9
0x4002e1:	jle	0x4002c9
<Block for 0x400245, 6 bytes>
0x400245:	cmp	dword ptr [rbp - 0x44], 0
0x400249:	je	0x40026a
<Block for 0x40024b, 22 bytes>
0x40024b:	mov	eax, dword ptr [rbp - 0x44]
0x40024e:	cdqe	
0x400250:	mov	byte ptr [rbp + rax - 0x16], 0
0x400255:	lea	rax, [rbp - 0x16]
0x400259:	mov	rdi, rax
0x40025c:	call	0x500030
<Block for 0x400261, 5 bytes>
0x400261:	mov	dword ptr [rbp - 0x50], eax
0x400264:	jmp	0x40026a
