<Block for 0x40008f, 76 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	sub	rsp, 0xf0
0x40009e:	mov	qword ptr [rbp - 0xe8], rdi
0x4000a5:	mov	rax, qword ptr fs:[0x28]
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	xor	eax, eax
0x4000b4:	mov	rax, qword ptr [rbp - 0xe8]
0x4000bb:	mov	qword ptr [rbp - 0xd8], rax
0x4000c2:	lea	rax, [rbp - 0xd0]
0x4000c9:	mov	edx, 0xc7
0x4000ce:	mov	esi, 0x43
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500000
<Block for 0x4000db, 29 bytes>
0x4000db:	mov	byte ptr [rbp - 9], 0
0x4000df:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000e6:	lea	rax, [rbp - 0xd0]
0x4000ed:	mov	rsi, rdx
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500008
<Block for 0x4000f8, 15 bytes>
0x4000f8:	lea	rax, [rbp - 0xd0]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500010
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500018
