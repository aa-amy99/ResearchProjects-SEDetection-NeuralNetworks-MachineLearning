<Block for 0x400026, 82 bytes>
0x400026:	endbr64	
0x40002a:	push	rbp
0x40002b:	mov	rbp, rsp
0x40002e:	sub	rsp, 0x120
0x400035:	mov	rax, qword ptr fs:[0x28]
0x40003e:	mov	qword ptr [rbp - 8], rax
0x400042:	xor	eax, eax
0x400044:	movabs	rax, 0x3d48544150
0x40004e:	mov	edx, 0
0x400053:	mov	qword ptr [rbp - 0x110], rax
0x40005a:	mov	qword ptr [rbp - 0x108], rdx
0x400061:	lea	rdx, [rbp - 0x100]
0x400068:	mov	eax, 0
0x40006d:	mov	ecx, 0x1d
0x400072:	mov	rdi, rdx
0x400075:	rep stosq	qword ptr [rdi], rax
<Block for 0x400078, 39 bytes>
0x400078:	mov	rdx, rdi
0x40007b:	mov	word ptr [rdx], ax
0x40007e:	add	rdx, 2
0x400082:	lea	rax, [rbp - 0x110]
0x400089:	mov	qword ptr [rbp - 0x120], rax
0x400090:	mov	rax, qword ptr [rbp - 0x120]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500008
<Block for 0x400075, 3 bytes>
0x400075:	rep stosq	qword ptr [rdi], rax
<Block for 0x40009f, 29 bytes>
0x40009f:	mov	qword ptr [rbp - 0x118], rax
0x4000a6:	mov	eax, 0xfa
0x4000ab:	sub	rax, qword ptr [rbp - 0x118]
0x4000b2:	cmp	rax, 1
0x4000b6:	jbe	0x40016c
<Block for 0x40016c, 24 bytes>
0x40016c:	mov	rax, qword ptr [rbp - 0x120]
0x400173:	mov	qword ptr [rip + 0x12e], rax
0x40017a:	mov	eax, 0
0x40017f:	call	0x400000
<Block for 0x4000bc, 53 bytes>
0x4000bc:	mov	rax, qword ptr [rip + 0xfff4d]
0x4000c3:	mov	rdx, qword ptr [rbp - 0x118]
0x4000ca:	mov	ecx, 0xfa
0x4000cf:	sub	ecx, edx
0x4000d1:	mov	edx, ecx
0x4000d3:	mov	esi, edx
0x4000d5:	mov	rcx, qword ptr [rbp - 0x120]
0x4000dc:	mov	rdx, qword ptr [rbp - 0x118]
0x4000e3:	add	rcx, rdx
0x4000e6:	mov	rdx, rax
0x4000e9:	mov	rdi, rcx
0x4000ec:	call	0x500018
<Block for 0x400184, 16 bytes>
0x400184:	nop	
0x400185:	mov	rax, qword ptr [rbp - 8]
0x400189:	xor	rax, qword ptr fs:[0x28]
0x400192:	je	0x400199
<Block for 0x4000f1, 5 bytes>
0x4000f1:	test	rax, rax
0x4000f4:	je	0x40014c
<Block for 0x400199, 2 bytes>
0x400199:	leave	
0x40019a:	ret	
<Block for 0x400194, 5 bytes>
0x400194:	call	0x500028
<Block for 0x40014c, 12 bytes>
0x40014c:	lea	rdi, [rip + 0x165]
0x400153:	call	0x500020
<Block for 0x4000f6, 15 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0x120]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500008
<Block for 0x400158, 44 bytes>
0x400158:	mov	rdx, qword ptr [rbp - 0x120]
0x40015f:	mov	rax, qword ptr [rbp - 0x118]
0x400166:	add	rax, rdx
0x400169:	mov	byte ptr [rax], 0
0x40016c:	mov	rax, qword ptr [rbp - 0x120]
0x400173:	mov	qword ptr [rip + 0x12e], rax
0x40017a:	mov	eax, 0
0x40017f:	call	0x400000
<Block for 0x400105, 17 bytes>
0x400105:	mov	qword ptr [rbp - 0x118], rax
0x40010c:	cmp	qword ptr [rbp - 0x118], 0
0x400114:	je	0x40016c
<Block for 0x400116, 28 bytes>
0x400116:	mov	rax, qword ptr [rbp - 0x118]
0x40011d:	lea	rdx, [rax - 1]
0x400121:	mov	rax, qword ptr [rbp - 0x120]
0x400128:	add	rax, rdx
0x40012b:	movzx	eax, byte ptr [rax]
0x40012e:	cmp	al, 0xa
0x400130:	jne	0x40016c
<Block for 0x400132, 26 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x118]
0x400139:	lea	rdx, [rax - 1]
0x40013d:	mov	rax, qword ptr [rbp - 0x120]
0x400144:	add	rax, rdx
0x400147:	mov	byte ptr [rax], 0
0x40014a:	jmp	0x40016c
