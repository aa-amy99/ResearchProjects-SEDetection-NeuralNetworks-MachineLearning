<Block for 0x4001c1, 82 bytes>
0x4001c1:	endbr64	
0x4001c5:	push	rbp
0x4001c6:	mov	rbp, rsp
0x4001c9:	sub	rsp, 0x120
0x4001d0:	mov	rax, qword ptr fs:[0x28]
0x4001d9:	mov	qword ptr [rbp - 8], rax
0x4001dd:	xor	eax, eax
0x4001df:	movabs	rax, 0x3d48544150
0x4001e9:	mov	edx, 0
0x4001ee:	mov	qword ptr [rbp - 0x110], rax
0x4001f5:	mov	qword ptr [rbp - 0x108], rdx
0x4001fc:	lea	rdx, [rbp - 0x100]
0x400203:	mov	eax, 0
0x400208:	mov	ecx, 0x1d
0x40020d:	mov	rdi, rdx
0x400210:	rep stosq	qword ptr [rdi], rax
<Block for 0x400213, 51 bytes>
0x400213:	mov	rdx, rdi
0x400216:	mov	word ptr [rdx], ax
0x400219:	add	rdx, 2
0x40021d:	lea	rax, [rbp - 0x110]
0x400224:	mov	qword ptr [rbp - 0x118], rax
0x40022b:	mov	rax, qword ptr [rbp - 0x118]
0x400232:	mov	rcx, -1
0x400239:	mov	rdx, rax
0x40023c:	mov	eax, 0
0x400241:	mov	rdi, rdx
0x400244:	repne scasb	al, byte ptr [rdi]
<Block for 0x400210, 3 bytes>
0x400210:	rep stosq	qword ptr [rdi], rax
<Block for 0x400246, 54 bytes>
0x400246:	mov	rax, rcx
0x400249:	not	rax
0x40024c:	lea	rdx, [rax - 1]
0x400250:	mov	rax, qword ptr [rbp - 0x118]
0x400257:	add	rax, rdx
0x40025a:	mov	dword ptr [rax], 0x6e69622f
0x400260:	mov	byte ptr [rax + 4], 0
0x400264:	mov	rax, qword ptr [rbp - 0x118]
0x40026b:	mov	qword ptr [rip + 0x3e], rax
0x400272:	mov	eax, 0
0x400277:	call	0x40019b
<Block for 0x400244, 2 bytes>
0x400244:	repne scasb	al, byte ptr [rdi]
<Block for 0x40027c, 16 bytes>
0x40027c:	nop	
0x40027d:	mov	rax, qword ptr [rbp - 8]
0x400281:	xor	rax, qword ptr fs:[0x28]
0x40028a:	je	0x400291
<Block for 0x400291, 2 bytes>
0x400291:	leave	
0x400292:	ret	
<Block for 0x40028c, 5 bytes>
0x40028c:	call	0x500028
