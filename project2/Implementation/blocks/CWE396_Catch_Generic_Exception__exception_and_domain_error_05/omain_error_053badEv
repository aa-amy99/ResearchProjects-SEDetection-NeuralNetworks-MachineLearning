<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r13
0x40000a:	push	r12
0x40000c:	push	rbx
0x40000d:	sub	rsp, 0x18
0x400011:	mov	eax, dword ptr [rip + 0x489]
0x400017:	test	eax, eax
0x400019:	je	0x400174
<Block for 0x400174, 11 bytes>
0x400174:	add	rsp, 0x18
0x400178:	pop	rbx
0x400179:	pop	r12
0x40017b:	pop	r13
0x40017d:	pop	rbp
0x40017e:	ret	
<Block for 0x40001f, 5 bytes>
0x40001f:	call	0x500000
<Block for 0x400024, 12 bytes>
0x400024:	and	eax, 1
0x400027:	test	eax, eax
0x400029:	sete	al
0x40002c:	test	al, al
0x40002e:	je	0x400065
<Block for 0x400065, 5 bytes>
0x400065:	call	0x500000
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0x10
0x400035:	call	0x500008
<Block for 0x40006a, 12 bytes>
0x40006a:	and	eax, 1
0x40006d:	test	eax, eax
0x40006f:	sete	al
0x400072:	test	al, al
0x400074:	je	0x4000ab
<Block for 0x40003a, 18 bytes>
0x40003a:	mov	rbx, rax
0x40003d:	lea	rsi, [rip + 0x465]
0x400044:	mov	rdi, rbx
0x400047:	call	0x500010
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x401]
0x4000b2:	call	0x500058
<Block for 0x400076, 10 bytes>
0x400076:	mov	edi, 0x10
0x40007b:	call	0x500008
<Block for 0x40004c, 25 bytes>
0x40004c:	mov	rax, qword ptr [rip + 0xfffcd]
0x400053:	mov	rdx, rax
0x400056:	lea	rsi, [rip + 0xfffcb]
0x40005d:	mov	rdi, rbx
0x400060:	call	0x500030
<Block for 0x4000b7, 5 bytes>
0x4000b7:	jmp	0x400174
<Block for 0x400080, 18 bytes>
0x400080:	mov	rbx, rax
0x400083:	lea	rsi, [rip + 0x424]
0x40008a:	mov	rdi, rbx
0x40008d:	call	0x500038
<Block for 0x400092, 25 bytes>
0x400092:	mov	rax, qword ptr [rip + 0xfffaf]
0x400099:	mov	rdx, rax
0x40009c:	lea	rsi, [rip + 0xfffad]
0x4000a3:	mov	rdi, rbx
0x4000a6:	call	0x500030
