<Block for 0x400157, 82 bytes>
0x400157:	endbr64	
0x40015b:	push	rbp
0x40015c:	mov	rbp, rsp
0x40015f:	sub	rsp, 0x120
0x400166:	mov	rax, qword ptr fs:[0x28]
0x40016f:	mov	qword ptr [rbp - 8], rax
0x400173:	xor	eax, eax
0x400175:	movabs	rax, 0x3d48544150
0x40017f:	mov	edx, 0
0x400184:	mov	qword ptr [rbp - 0x110], rax
0x40018b:	mov	qword ptr [rbp - 0x108], rdx
0x400192:	lea	rdx, [rbp - 0x100]
0x400199:	mov	eax, 0
0x40019e:	mov	ecx, 0x1d
0x4001a3:	mov	rdi, rdx
0x4001a6:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001a9, 33 bytes>
0x4001a9:	mov	rdx, rdi
0x4001ac:	mov	word ptr [rdx], ax
0x4001af:	add	rdx, 2
0x4001b3:	lea	rax, [rbp - 0x110]
0x4001ba:	mov	qword ptr [rbp - 0x118], rax
0x4001c1:	mov	eax, 0
0x4001c6:	test	eax, eax
0x4001c8:	je	0x4001d8
<Block for 0x4001a6, 3 bytes>
0x4001a6:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001d8, 27 bytes>
0x4001d8:	mov	rax, qword ptr [rbp - 0x118]
0x4001df:	mov	rcx, -1
0x4001e6:	mov	rdx, rax
0x4001e9:	mov	eax, 0
0x4001ee:	mov	rdi, rdx
0x4001f1:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001ca, 12 bytes>
0x4001ca:	lea	rdi, [rip + 0x17e]
0x4001d1:	call	0x500018
<Block for 0x4001f3, 45 bytes>
0x4001f3:	mov	rax, rcx
0x4001f6:	not	rax
0x4001f9:	lea	rdx, [rax - 1]
0x4001fd:	mov	rax, qword ptr [rbp - 0x118]
0x400204:	add	rax, rdx
0x400207:	mov	dword ptr [rax], 0x6e69622f
0x40020d:	mov	byte ptr [rax + 4], 0
0x400211:	mov	rax, qword ptr [rbp - 0x118]
0x400218:	mov	rdi, rax
0x40021b:	call	0x500028
<Block for 0x4001f1, 2 bytes>
0x4001f1:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001d6, 2 bytes>
0x4001d6:	jmp	0x400211
<Block for 0x400220, 16 bytes>
0x400220:	nop	
0x400221:	mov	rax, qword ptr [rbp - 8]
0x400225:	xor	rax, qword ptr fs:[0x28]
0x40022e:	je	0x400235
<Block for 0x400211, 15 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x118]
0x400218:	mov	rdi, rax
0x40021b:	call	0x500028
<Block for 0x400235, 2 bytes>
0x400235:	leave	
0x400236:	ret	
<Block for 0x400230, 5 bytes>
0x400230:	call	0x500030
