<Block for 0x400000, 90 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x20], rax
0x400026:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40002d:	mov	qword ptr [rbp - 0x16], 0
0x400035:	mov	dword ptr [rbp - 0xe], 0
0x40003c:	mov	word ptr [rbp - 0xa], 0
0x400042:	mov	rdx, qword ptr [rip + 0xfffc7]
0x400049:	lea	rax, [rbp - 0x16]
0x40004d:	mov	esi, 0xe
0x400052:	mov	rdi, rax
0x400055:	call	0x500018
<Block for 0x40005a, 5 bytes>
0x40005a:	test	rax, rax
0x40005d:	je	0x400070
<Block for 0x400070, 12 bytes>
0x400070:	lea	rdi, [rip + 0x6f]
0x400077:	call	0x500028
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rax, [rbp - 0x16]
0x400063:	mov	rdi, rax
0x400066:	call	0x500020
<Block for 0x40007c, 11 bytes>
0x40007c:	mov	eax, dword ptr [rbp - 0x24]
0x40007f:	mov	rdx, qword ptr [rbp - 0x20]
0x400083:	mov	edi, eax
0x400085:	call	rdx
<Block for 0x40006b, 5 bytes>
0x40006b:	mov	dword ptr [rbp - 0x24], eax
0x40006e:	jmp	0x40007c
<Block for 0x400087, 16 bytes>
0x400087:	nop	
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	xor	rax, qword ptr fs:[0x28]
0x400095:	je	0x40009c
<Block for 0x40009c, 2 bytes>
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x400097, 5 bytes>
0x400097:	call	0x500030
