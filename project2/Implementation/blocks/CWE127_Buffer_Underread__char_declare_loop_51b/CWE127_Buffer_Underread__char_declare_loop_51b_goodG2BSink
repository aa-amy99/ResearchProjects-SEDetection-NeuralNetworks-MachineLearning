<Block for 0x40009a, 59 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x90
0x4000a9:	mov	qword ptr [rbp - 0x88], rdi
0x4000b0:	mov	rax, qword ptr fs:[0x28]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	xor	eax, eax
0x4000bf:	lea	rax, [rbp - 0x70]
0x4000c3:	mov	edx, 0x63
0x4000c8:	mov	esi, 0x43
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500000
<Block for 0x4000d5, 14 bytes>
0x4000d5:	mov	byte ptr [rbp - 0xd], 0
0x4000d9:	mov	qword ptr [rbp - 0x78], 0
0x4000e1:	jmp	0x400106
<Block for 0x400106, 7 bytes>
0x400106:	cmp	qword ptr [rbp - 0x78], 0x63
0x40010b:	jbe	0x4000e3
<Block for 0x4000e3, 42 bytes>
0x4000e3:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ea:	mov	rax, qword ptr [rbp - 0x78]
0x4000ee:	add	rax, rdx
0x4000f1:	movzx	eax, byte ptr [rax]
0x4000f4:	lea	rcx, [rbp - 0x70]
0x4000f8:	mov	rdx, qword ptr [rbp - 0x78]
0x4000fc:	add	rdx, rcx
0x4000ff:	mov	byte ptr [rdx], al
0x400101:	add	qword ptr [rbp - 0x78], 1
0x400106:	cmp	qword ptr [rbp - 0x78], 0x63
0x40010b:	jbe	0x4000e3
<Block for 0x40010d, 16 bytes>
0x40010d:	mov	byte ptr [rbp - 0xd], 0
0x400111:	lea	rax, [rbp - 0x70]
0x400115:	mov	rdi, rax
0x400118:	call	0x500008
<Block for 0x40011d, 16 bytes>
0x40011d:	nop	
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	xor	rax, qword ptr fs:[0x28]
0x40012b:	je	0x400132
<Block for 0x400132, 2 bytes>
0x400132:	leave	
0x400133:	ret	
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500010
