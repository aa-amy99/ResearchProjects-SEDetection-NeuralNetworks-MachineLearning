<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 1
0x400020:	test	eax, eax
0x400022:	je	0x400056
<Block for 0x400056, 16 bytes>
0x400056:	nop	
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	xor	rax, qword ptr fs:[0x28]
0x400064:	je	0x40006b
<Block for 0x400024, 40 bytes>
0x400024:	mov	byte ptr [rbp - 0x10], 1
0x400028:	lea	rax, [rbp - 0x10]
0x40002c:	mov	qword ptr [rbp - 0x18], rax
0x400030:	mov	rax, qword ptr [rbp - 0x18]
0x400034:	add	rax, 4
0x400038:	mov	dword ptr [rax], 5
0x40003e:	movzx	eax, byte ptr [rbp - 0x10]
0x400042:	movsx	eax, al
0x400045:	mov	edi, eax
0x400047:	call	0x500000
<Block for 0x40006b, 2 bytes>
0x40006b:	leave	
0x40006c:	ret	
<Block for 0x400066, 5 bytes>
0x400066:	call	0x500008
<Block for 0x40004c, 10 bytes>
0x40004c:	mov	eax, dword ptr [rbp - 0xc]
0x40004f:	mov	edi, eax
0x400051:	call	0x500000
