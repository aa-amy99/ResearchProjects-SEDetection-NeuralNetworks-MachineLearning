<Block for 0x40013f, 98 bytes>
0x40013f:	endbr64	
0x400143:	push	rbp
0x400144:	mov	rbp, rsp
0x400147:	sub	rsp, 0x90
0x40014e:	mov	rax, qword ptr fs:[0x28]
0x400157:	mov	qword ptr [rbp - 8], rax
0x40015b:	xor	eax, eax
0x40015d:	lea	rax, [rbp - 0x90]
0x400164:	mov	qword ptr [rbp - 0x88], rax
0x40016b:	mov	eax, 0x10
0x400170:	sub	rax, 1
0x400174:	add	rax, 0x6c
0x400178:	mov	ecx, 0x10
0x40017d:	mov	edx, 0
0x400182:	div	rcx
0x400185:	imul	rax, rax, 0x10
0x400189:	mov	rdx, rax
0x40018c:	and	rdx, 0xfffffffffffff000
0x400193:	mov	rcx, rsp
0x400196:	sub	rcx, rdx
0x400199:	mov	rdx, rcx
0x40019c:	cmp	rsp, rdx
0x40019f:	je	0x4001b3
<Block for 0x4001b3, 26 bytes>
0x4001b3:	mov	rdx, rax
0x4001b6:	and	edx, 0xfff
0x4001bc:	sub	rsp, rdx
0x4001bf:	mov	rdx, rax
0x4001c2:	and	edx, 0xfff
0x4001c8:	test	rdx, rdx
0x4001cb:	je	0x4001dd
<Block for 0x4001a1, 18 bytes>
0x4001a1:	sub	rsp, 0x1000
0x4001a8:	or	qword ptr [rsp + 0xff8], 0
0x4001b1:	jmp	0x40019c
<Block for 0x4001dd, 41 bytes>
0x4001dd:	mov	rax, rsp
0x4001e0:	add	rax, 0xf
0x4001e4:	shr	rax, 4
0x4001e8:	shl	rax, 4
0x4001ec:	mov	qword ptr [rbp - 0x80], rax
0x4001f0:	mov	rax, qword ptr [rbp - 0x80]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x41
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500000
<Block for 0x4001cd, 57 bytes>
0x4001cd:	and	eax, 0xfff
0x4001d2:	sub	rax, 8
0x4001d6:	add	rax, rsp
0x4001d9:	or	qword ptr [rax], 0
0x4001dd:	mov	rax, rsp
0x4001e0:	add	rax, 0xf
0x4001e4:	shr	rax, 4
0x4001e8:	shl	rax, 4
0x4001ec:	mov	qword ptr [rbp - 0x80], rax
0x4001f0:	mov	rax, qword ptr [rbp - 0x80]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x41
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500000
<Block for 0x40019c, 5 bytes>
0x40019c:	cmp	rsp, rdx
0x40019f:	je	0x4001b3
<Block for 0x400206, 58 bytes>
0x400206:	mov	rax, qword ptr [rbp - 0x80]
0x40020a:	add	rax, 0x63
0x40020e:	mov	byte ptr [rax], 0
0x400211:	mov	rax, qword ptr [rbp - 0x80]
0x400215:	mov	qword ptr [rbp - 0x90], rax
0x40021c:	mov	rax, qword ptr [rbp - 0x88]
0x400223:	mov	rax, qword ptr [rax]
0x400226:	mov	qword ptr [rbp - 0x78], rax
0x40022a:	lea	rax, [rbp - 0x70]
0x40022e:	mov	edx, 0x63
0x400233:	mov	esi, 0x43
0x400238:	mov	rdi, rax
0x40023b:	call	0x500000
<Block for 0x400240, 23 bytes>
0x400240:	mov	byte ptr [rbp - 0xd], 0
0x400244:	lea	rdx, [rbp - 0x70]
0x400248:	mov	rax, qword ptr [rbp - 0x78]
0x40024c:	mov	rsi, rdx
0x40024f:	mov	rdi, rax
0x400252:	call	0x500008
<Block for 0x400257, 12 bytes>
0x400257:	mov	rax, qword ptr [rbp - 0x78]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500010
<Block for 0x400263, 16 bytes>
0x400263:	nop	
0x400264:	mov	rax, qword ptr [rbp - 8]
0x400268:	xor	rax, qword ptr fs:[0x28]
0x400271:	je	0x400278
<Block for 0x400278, 2 bytes>
0x400278:	leave	
0x400279:	ret	
<Block for 0x400273, 5 bytes>
0x400273:	call	0x500018
