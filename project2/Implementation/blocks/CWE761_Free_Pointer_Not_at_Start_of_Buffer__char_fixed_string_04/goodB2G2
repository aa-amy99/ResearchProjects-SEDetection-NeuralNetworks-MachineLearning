<Block for 0x400146, 22 bytes>
0x400146:	endbr64	
0x40014a:	push	rbp
0x40014b:	mov	rbp, rsp
0x40014e:	sub	rsp, 0x10
0x400152:	mov	edi, 0x64
0x400157:	call	0x500000
<Block for 0x40015c, 11 bytes>
0x40015c:	mov	qword ptr [rbp - 8], rax
0x400160:	cmp	qword ptr [rbp - 8], 0
0x400165:	jne	0x400171
<Block for 0x400167, 10 bytes>
0x400167:	mov	edi, 0xffffffff
0x40016c:	call	0x500008
<Block for 0x400171, 44 bytes>
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	mov	byte ptr [rax], 0
0x400178:	mov	rax, qword ptr [rbp - 8]
0x40017c:	movabs	rcx, 0x7453206465786946
0x400186:	mov	qword ptr [rax], rcx
0x400189:	mov	dword ptr [rax + 8], 0x676e6972
0x400190:	mov	byte ptr [rax + 0xc], 0
0x400194:	mov	eax, 1
0x400199:	test	eax, eax
0x40019b:	je	0x4001ea
<Block for 0x4001ea, 3 bytes>
0x4001ea:	nop	
0x4001eb:	leave	
0x4001ec:	ret	
<Block for 0x40019d, 10 bytes>
0x40019d:	mov	qword ptr [rbp - 0x10], 0
0x4001a5:	jmp	0x4001cc
<Block for 0x4001cc, 12 bytes>
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500020
<Block for 0x4001d8, 6 bytes>
0x4001d8:	cmp	qword ptr [rbp - 0x10], rax
0x4001dc:	jb	0x4001a7
<Block for 0x4001a7, 18 bytes>
0x4001a7:	mov	rdx, qword ptr [rbp - 8]
0x4001ab:	mov	rax, qword ptr [rbp - 0x10]
0x4001af:	add	rax, rdx
0x4001b2:	movzx	eax, byte ptr [rax]
0x4001b5:	cmp	al, 0x53
0x4001b7:	jne	0x4001c7
<Block for 0x4001de, 12 bytes>
0x4001de:	mov	rax, qword ptr [rbp - 8]
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x500018
<Block for 0x4001b9, 12 bytes>
0x4001b9:	lea	rdi, [rip + 0x54]
0x4001c0:	call	0x500010
<Block for 0x4001c7, 17 bytes>
0x4001c7:	add	qword ptr [rbp - 0x10], 1
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500020
<Block for 0x4001c5, 2 bytes>
0x4001c5:	jmp	0x4001de
