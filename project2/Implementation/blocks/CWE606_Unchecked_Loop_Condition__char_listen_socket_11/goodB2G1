<Block for 0x40031f, 154 bytes>
0x40031f:	endbr64	
0x400323:	push	rbp
0x400324:	mov	rbp, rsp
0x400327:	sub	rsp, 0xb0
0x40032e:	mov	rax, qword ptr fs:[0x28]
0x400337:	mov	qword ptr [rbp - 8], rax
0x40033b:	xor	eax, eax
0x40033d:	mov	qword ptr [rbp - 0x70], 0
0x400345:	mov	qword ptr [rbp - 0x68], 0
0x40034d:	mov	qword ptr [rbp - 0x60], 0
0x400355:	mov	qword ptr [rbp - 0x58], 0
0x40035d:	mov	qword ptr [rbp - 0x50], 0
0x400365:	mov	qword ptr [rbp - 0x48], 0
0x40036d:	mov	qword ptr [rbp - 0x40], 0
0x400375:	mov	qword ptr [rbp - 0x38], 0
0x40037d:	mov	qword ptr [rbp - 0x30], 0
0x400385:	mov	qword ptr [rbp - 0x28], 0
0x40038d:	mov	qword ptr [rbp - 0x20], 0
0x400395:	mov	qword ptr [rbp - 0x18], 0
0x40039d:	mov	dword ptr [rbp - 0x10], 0
0x4003a4:	lea	rax, [rbp - 0x70]
0x4003a8:	mov	qword ptr [rbp - 0x98], rax
0x4003af:	mov	eax, 0
0x4003b4:	call	0x500000
<Block for 0x4003b9, 8 bytes>
0x4003b9:	test	eax, eax
0x4003bb:	je	0x4005b3
<Block for 0x4005b3, 10 bytes>
0x4005b3:	mov	eax, 0
0x4005b8:	call	0x500070
<Block for 0x4003c1, 35 bytes>
0x4003c1:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4003cb:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x4003d5:	mov	rax, qword ptr [rbp - 0x98]
0x4003dc:	mov	rdi, rax
0x4003df:	call	0x500008
<Block for 0x4005bd, 4 bytes>
0x4005bd:	test	eax, eax
0x4005bf:	je	0x4005cf
<Block for 0x4003e4, 27 bytes>
0x4003e4:	mov	qword ptr [rbp - 0x90], rax
0x4003eb:	mov	edx, 6
0x4003f0:	mov	esi, 1
0x4003f5:	mov	edi, 2
0x4003fa:	call	0x500010
<Block for 0x4005cf, 34 bytes>
0x4005cf:	lea	rdx, [rbp - 0xb0]
0x4005d6:	mov	rax, qword ptr [rbp - 0x98]
0x4005dd:	lea	rsi, [rip + 0x61e]
0x4005e4:	mov	rdi, rax
0x4005e7:	mov	eax, 0
0x4005ec:	call	0x500058
<Block for 0x4005c1, 12 bytes>
0x4005c1:	lea	rdi, [rip + 0x63d]
0x4005c8:	call	0x500078
<Block for 0x4003ff, 19 bytes>
0x4003ff:	mov	dword ptr [rbp - 0xa0], eax
0x400405:	cmp	dword ptr [rbp - 0xa0], -1
0x40040c:	je	0x40057d
<Block for 0x4005f1, 5 bytes>
0x4005f1:	cmp	eax, 1
0x4005f4:	jne	0x400642
<Block for 0x4005cd, 2 bytes>
0x4005cd:	jmp	0x400642
<Block for 0x40057d, 3 bytes>
0x40057d:	nop	
0x40057e:	jmp	0x400587
<Block for 0x400412, 22 bytes>
0x400412:	lea	rax, [rbp - 0x80]
0x400416:	mov	edx, 0x10
0x40041b:	mov	esi, 0
0x400420:	mov	rdi, rax
0x400423:	call	0x500018
<Block for 0x4005f6, 13 bytes>
0x4005f6:	mov	eax, dword ptr [rbp - 0xb0]
0x4005fc:	cmp	eax, 0x270f
0x400601:	jg	0x400642
<Block for 0x400642, 16 bytes>
0x400642:	nop	
0x400643:	mov	rax, qword ptr [rbp - 8]
0x400647:	xor	rax, qword ptr fs:[0x28]
0x400650:	je	0x400657
<Block for 0x400587, 9 bytes>
0x400587:	cmp	dword ptr [rbp - 0xa0], -1
0x40058e:	je	0x40059d
<Block for 0x400428, 23 bytes>
0x400428:	mov	word ptr [rbp - 0x80], 2
0x40042e:	mov	dword ptr [rbp - 0x7c], 0
0x400435:	mov	edi, 0x6987
0x40043a:	call	0x500020
<Block for 0x400603, 22 bytes>
0x400603:	mov	dword ptr [rbp - 0xa4], 0
0x40060d:	mov	dword ptr [rbp - 0xa8], 0
0x400617:	jmp	0x400627
<Block for 0x400657, 2 bytes>
0x400657:	leave	
0x400658:	ret	
<Block for 0x400652, 5 bytes>
0x400652:	call	0x500068
<Block for 0x40059d, 9 bytes>
0x40059d:	cmp	dword ptr [rbp - 0xac], -1
0x4005a4:	je	0x4005b3
<Block for 0x400590, 13 bytes>
0x400590:	mov	eax, dword ptr [rbp - 0xa0]
0x400596:	mov	edi, eax
0x400598:	call	0x500050
<Block for 0x40043f, 29 bytes>
0x40043f:	mov	word ptr [rbp - 0x7e], ax
0x400443:	lea	rcx, [rbp - 0x80]
0x400447:	mov	eax, dword ptr [rbp - 0xa0]
0x40044d:	mov	edx, 0x10
0x400452:	mov	rsi, rcx
0x400455:	mov	edi, eax
0x400457:	call	0x500028
<Block for 0x400627, 14 bytes>
0x400627:	mov	eax, dword ptr [rbp - 0xb0]
0x40062d:	cmp	dword ptr [rbp - 0xa8], eax
0x400633:	jl	0x400619
<Block for 0x4005a6, 13 bytes>
0x4005a6:	mov	eax, dword ptr [rbp - 0xac]
0x4005ac:	mov	edi, eax
0x4005ae:	call	0x500050
<Block for 0x40045c, 9 bytes>
0x40045c:	cmp	eax, -1
0x40045f:	je	0x400580
<Block for 0x400619, 28 bytes>
0x400619:	add	dword ptr [rbp - 0xa4], 1
0x400620:	add	dword ptr [rbp - 0xa8], 1
0x400627:	mov	eax, dword ptr [rbp - 0xb0]
0x40062d:	cmp	dword ptr [rbp - 0xa8], eax
0x400633:	jl	0x400619
<Block for 0x400635, 13 bytes>
0x400635:	mov	eax, dword ptr [rbp - 0xa4]
0x40063b:	mov	edi, eax
0x40063d:	call	0x500060
<Block for 0x400580, 3 bytes>
0x400580:	nop	
0x400581:	jmp	0x400587
<Block for 0x400465, 18 bytes>
0x400465:	mov	eax, dword ptr [rbp - 0xa0]
0x40046b:	mov	esi, 5
0x400470:	mov	edi, eax
0x400472:	call	0x500030
<Block for 0x400477, 9 bytes>
0x400477:	cmp	eax, -1
0x40047a:	je	0x400583
<Block for 0x400583, 3 bytes>
0x400583:	nop	
0x400584:	jmp	0x400587
<Block for 0x400480, 23 bytes>
0x400480:	mov	eax, dword ptr [rbp - 0xa0]
0x400486:	mov	edx, 0
0x40048b:	mov	esi, 0
0x400490:	mov	edi, eax
0x400492:	call	0x500038
<Block for 0x400497, 19 bytes>
0x400497:	mov	dword ptr [rbp - 0xac], eax
0x40049d:	cmp	dword ptr [rbp - 0xac], -1
0x4004a4:	je	0x400586
<Block for 0x4004aa, 51 bytes>
0x4004aa:	mov	eax, 0x63
0x4004af:	sub	rax, qword ptr [rbp - 0x90]
0x4004b6:	mov	rdx, rax
0x4004b9:	mov	rcx, qword ptr [rbp - 0x98]
0x4004c0:	mov	rax, qword ptr [rbp - 0x90]
0x4004c7:	lea	rsi, [rcx + rax]
0x4004cb:	mov	eax, dword ptr [rbp - 0xac]
0x4004d1:	mov	ecx, 0
0x4004d6:	mov	edi, eax
0x4004d8:	call	0x500040
<Block for 0x400586, 1 bytes>
0x400586:	nop	
<Block for 0x4004dd, 19 bytes>
0x4004dd:	mov	dword ptr [rbp - 0x9c], eax
0x4004e3:	cmp	dword ptr [rbp - 0x9c], -1
0x4004ea:	je	0x400587
<Block for 0x4004f0, 13 bytes>
0x4004f0:	cmp	dword ptr [rbp - 0x9c], 0
0x4004f7:	je	0x400587
<Block for 0x4004fd, 52 bytes>
0x4004fd:	mov	eax, dword ptr [rbp - 0x9c]
0x400503:	movsxd	rdx, eax
0x400506:	mov	rax, qword ptr [rbp - 0x90]
0x40050d:	add	rdx, rax
0x400510:	mov	rax, qword ptr [rbp - 0x98]
0x400517:	add	rax, rdx
0x40051a:	mov	byte ptr [rax], 0
0x40051d:	mov	rax, qword ptr [rbp - 0x98]
0x400524:	mov	esi, 0xd
0x400529:	mov	rdi, rax
0x40052c:	call	0x500048
<Block for 0x400531, 17 bytes>
0x400531:	mov	qword ptr [rbp - 0x88], rax
0x400538:	cmp	qword ptr [rbp - 0x88], 0
0x400540:	je	0x40054c
<Block for 0x40054c, 20 bytes>
0x40054c:	mov	rax, qword ptr [rbp - 0x98]
0x400553:	mov	esi, 0xa
0x400558:	mov	rdi, rax
0x40055b:	call	0x500048
<Block for 0x400542, 30 bytes>
0x400542:	mov	rax, qword ptr [rbp - 0x88]
0x400549:	mov	byte ptr [rax], 0
0x40054c:	mov	rax, qword ptr [rbp - 0x98]
0x400553:	mov	esi, 0xa
0x400558:	mov	rdi, rax
0x40055b:	call	0x500048
<Block for 0x400560, 17 bytes>
0x400560:	mov	qword ptr [rbp - 0x88], rax
0x400567:	cmp	qword ptr [rbp - 0x88], 0
0x40056f:	je	0x400587
<Block for 0x400571, 12 bytes>
0x400571:	mov	rax, qword ptr [rbp - 0x88]
0x400578:	mov	byte ptr [rax], 0
0x40057b:	jmp	0x400587
