<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0x1e2]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x40004e
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 8
0x400024:	call	0x500000
<Block for 0x40004e, 11 bytes>
0x40004e:	mov	eax, dword ptr [rip + 0x1a8]
0x400054:	cmp	eax, 5
0x400057:	jne	0x400068
<Block for 0x400029, 24 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	mov	rax, qword ptr [rbp - 8]
0x400031:	mov	qword ptr [rax], 5
0x400038:	mov	rax, qword ptr [rbp - 8]
0x40003c:	test	rax, rax
0x40003f:	je	0x40004e
<Block for 0x400059, 15 bytes>
0x400059:	mov	rax, qword ptr [rbp - 8]
0x40005d:	mov	rax, qword ptr [rax]
0x400060:	mov	rdi, rax
0x400063:	call	0x500010
<Block for 0x400068, 3 bytes>
0x400068:	nop	
0x400069:	leave	
0x40006a:	ret	
<Block for 0x400041, 13 bytes>
0x400041:	mov	esi, 8
0x400046:	mov	rdi, rax
0x400049:	call	0x500008
