<Block for 0x400069, 33 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x10
0x400075:	mov	rax, qword ptr [rip + 0xfffac]
0x40007c:	mov	qword ptr [rbp - 0x10], rax
0x400080:	mov	edi, 0x64
0x400085:	call	0x500010
<Block for 0x40008a, 11 bytes>
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	cmp	qword ptr [rbp - 8], 0
0x400093:	jne	0x40009f
<Block for 0x400095, 10 bytes>
0x400095:	mov	edi, 0xffffffff
0x40009a:	call	0x500018
<Block for 0x40009f, 48 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	byte ptr [rax], 0
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	movabs	rcx, 0x7453206465786946
0x4000b4:	mov	qword ptr [rax], rcx
0x4000b7:	mov	dword ptr [rax + 8], 0x676e6972
0x4000be:	mov	byte ptr [rax + 0xc], 0
0x4000c2:	mov	rax, qword ptr [rbp - 8]
0x4000c6:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	rdx
<Block for 0x4000cf, 3 bytes>
0x4000cf:	nop	
0x4000d0:	leave	
0x4000d1:	ret	
