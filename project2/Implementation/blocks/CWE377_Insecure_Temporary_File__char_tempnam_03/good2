<Block for 0x40010a, 67 bytes>
0x40010a:	endbr64	
0x40010e:	push	rbp
0x40010f:	mov	rbp, rsp
0x400112:	sub	rsp, 0x30
0x400116:	mov	rax, qword ptr fs:[0x28]
0x40011f:	mov	qword ptr [rbp - 8], rax
0x400123:	xor	eax, eax
0x400125:	movabs	rax, 0x6c69662f706d742f
0x40012f:	movabs	rdx, 0x58585858585865
0x400139:	mov	qword ptr [rbp - 0x20], rax
0x40013d:	mov	qword ptr [rbp - 0x18], rdx
0x400141:	lea	rax, [rbp - 0x20]
0x400145:	mov	rdi, rax
0x400148:	call	0x500030
<Block for 0x40014d, 15 bytes>
0x40014d:	mov	dword ptr [rbp - 0x24], eax
0x400150:	lea	rax, [rbp - 0x20]
0x400154:	mov	rdi, rax
0x400157:	call	0x500010
<Block for 0x40015c, 6 bytes>
0x40015c:	cmp	dword ptr [rbp - 0x24], -1
0x400160:	je	0x400178
<Block for 0x400178, 16 bytes>
0x400178:	nop	
0x400179:	mov	rax, qword ptr [rbp - 8]
0x40017d:	xor	rax, qword ptr fs:[0x28]
0x400186:	je	0x40018d
<Block for 0x400162, 12 bytes>
0x400162:	lea	rdi, [rip + 0x47]
0x400169:	call	0x500010
<Block for 0x40018d, 2 bytes>
0x40018d:	leave	
0x40018e:	ret	
<Block for 0x400188, 5 bytes>
0x400188:	call	0x500038
<Block for 0x40016e, 10 bytes>
0x40016e:	mov	eax, dword ptr [rbp - 0x24]
0x400171:	mov	edi, eax
0x400173:	call	0x500020
