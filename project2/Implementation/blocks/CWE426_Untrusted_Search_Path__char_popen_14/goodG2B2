<Block for 0x4001ed, 149 bytes>
0x4001ed:	endbr64	
0x4001f1:	push	rbp
0x4001f2:	mov	rbp, rsp
0x4001f5:	add	rsp, -0x80
0x4001f9:	mov	rax, qword ptr fs:[0x28]
0x400202:	mov	qword ptr [rbp - 8], rax
0x400206:	xor	eax, eax
0x400208:	mov	qword ptr [rbp - 0x70], 0
0x400210:	mov	qword ptr [rbp - 0x68], 0
0x400218:	mov	qword ptr [rbp - 0x60], 0
0x400220:	mov	qword ptr [rbp - 0x58], 0
0x400228:	mov	qword ptr [rbp - 0x50], 0
0x400230:	mov	qword ptr [rbp - 0x48], 0
0x400238:	mov	qword ptr [rbp - 0x40], 0
0x400240:	mov	qword ptr [rbp - 0x38], 0
0x400248:	mov	qword ptr [rbp - 0x30], 0
0x400250:	mov	qword ptr [rbp - 0x28], 0
0x400258:	mov	qword ptr [rbp - 0x20], 0
0x400260:	mov	qword ptr [rbp - 0x18], 0
0x400268:	mov	dword ptr [rbp - 0x10], 0
0x40026f:	lea	rax, [rbp - 0x70]
0x400273:	mov	qword ptr [rbp - 0x80], rax
0x400277:	mov	eax, dword ptr [rip + 0xffd83]
0x40027d:	cmp	eax, 5
0x400280:	jne	0x4002a1
<Block for 0x400282, 50 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0x80]
0x400286:	movabs	rdx, 0x6e69622f7273752f
0x400290:	movabs	rcx, 0x616c2d20736c2f
0x40029a:	mov	qword ptr [rax], rdx
0x40029d:	mov	qword ptr [rax + 8], rcx
0x4002a1:	mov	rax, qword ptr [rbp - 0x80]
0x4002a5:	lea	rsi, [rip + 0x55]
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500008
<Block for 0x4002a1, 19 bytes>
0x4002a1:	mov	rax, qword ptr [rbp - 0x80]
0x4002a5:	lea	rsi, [rip + 0x55]
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500008
<Block for 0x4002b4, 11 bytes>
0x4002b4:	mov	qword ptr [rbp - 0x78], rax
0x4002b8:	cmp	qword ptr [rbp - 0x78], 0
0x4002bd:	je	0x4002cb
<Block for 0x4002cb, 16 bytes>
0x4002cb:	nop	
0x4002cc:	mov	rax, qword ptr [rbp - 8]
0x4002d0:	xor	rax, qword ptr fs:[0x28]
0x4002d9:	je	0x4002e0
<Block for 0x4002bf, 12 bytes>
0x4002bf:	mov	rax, qword ptr [rbp - 0x78]
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500010
<Block for 0x4002e0, 2 bytes>
0x4002e0:	leave	
0x4002e1:	ret	
<Block for 0x4002db, 5 bytes>
0x4002db:	call	0x500018
