<Block for 0x40004a, 48 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x50
0x400056:	mov	rax, qword ptr fs:[0x28]
0x40005f:	mov	qword ptr [rbp - 8], rax
0x400063:	xor	eax, eax
0x400065:	lea	rax, [rip - 0x6c]
0x40006c:	mov	qword ptr [rbp - 0x40], rax
0x400070:	mov	edi, 0x64
0x400075:	call	0x500010
<Block for 0x40007a, 11 bytes>
0x40007a:	mov	qword ptr [rbp - 0x38], rax
0x40007e:	cmp	qword ptr [rbp - 0x38], 0
0x400083:	jne	0x40008f
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 0xffffffff
0x40008a:	call	0x500018
<Block for 0x40008f, 33 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 0x38]
0x400093:	mov	byte ptr [rax], 0
0x400096:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40009d:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4000a4:	mov	rax, qword ptr [rbp - 0x38]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500020
<Block for 0x4000b0, 24 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x30], rax
0x4000b4:	mov	edx, 6
0x4000b9:	mov	esi, 1
0x4000be:	mov	edi, 2
0x4000c3:	call	0x500028
<Block for 0x4000c8, 13 bytes>
0x4000c8:	mov	dword ptr [rbp - 0x48], eax
0x4000cb:	cmp	dword ptr [rbp - 0x48], -1
0x4000cf:	je	0x4001f3
<Block for 0x4001f3, 3 bytes>
0x4001f3:	nop	
0x4001f4:	jmp	0x4001fd
<Block for 0x4000d5, 22 bytes>
0x4000d5:	lea	rax, [rbp - 0x20]
0x4000d9:	mov	edx, 0x10
0x4000de:	mov	esi, 0
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500030
<Block for 0x4001fd, 6 bytes>
0x4001fd:	cmp	dword ptr [rbp - 0x48], -1
0x400201:	je	0x40020d
<Block for 0x4000eb, 23 bytes>
0x4000eb:	mov	word ptr [rbp - 0x20], 2
0x4000f1:	mov	dword ptr [rbp - 0x1c], 0
0x4000f8:	mov	edi, 0x6987
0x4000fd:	call	0x500038
<Block for 0x40020d, 6 bytes>
0x40020d:	cmp	dword ptr [rbp - 0x4c], -1
0x400211:	je	0x40021d
<Block for 0x400203, 10 bytes>
0x400203:	mov	eax, dword ptr [rbp - 0x48]
0x400206:	mov	edi, eax
0x400208:	call	0x500068
<Block for 0x400102, 26 bytes>
0x400102:	mov	word ptr [rbp - 0x1e], ax
0x400106:	lea	rcx, [rbp - 0x20]
0x40010a:	mov	eax, dword ptr [rbp - 0x48]
0x40010d:	mov	edx, 0x10
0x400112:	mov	rsi, rcx
0x400115:	mov	edi, eax
0x400117:	call	0x500040
<Block for 0x40021d, 13 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x38]
0x400221:	mov	rdx, qword ptr [rbp - 0x40]
0x400225:	mov	rdi, rax
0x400228:	call	rdx
<Block for 0x400213, 10 bytes>
0x400213:	mov	eax, dword ptr [rbp - 0x4c]
0x400216:	mov	edi, eax
0x400218:	call	0x500068
<Block for 0x40011c, 9 bytes>
0x40011c:	cmp	eax, -1
0x40011f:	je	0x4001f6
<Block for 0x40022a, 16 bytes>
0x40022a:	nop	
0x40022b:	mov	rax, qword ptr [rbp - 8]
0x40022f:	xor	rax, qword ptr fs:[0x28]
0x400238:	je	0x40023f
<Block for 0x4001f6, 3 bytes>
0x4001f6:	nop	
0x4001f7:	jmp	0x4001fd
<Block for 0x400125, 15 bytes>
0x400125:	mov	eax, dword ptr [rbp - 0x48]
0x400128:	mov	esi, 5
0x40012d:	mov	edi, eax
0x40012f:	call	0x500048
<Block for 0x40023f, 2 bytes>
0x40023f:	leave	
0x400240:	ret	
<Block for 0x40023a, 5 bytes>
0x40023a:	call	0x500070
<Block for 0x400134, 9 bytes>
0x400134:	cmp	eax, -1
0x400137:	je	0x4001f9
<Block for 0x4001f9, 3 bytes>
0x4001f9:	nop	
0x4001fa:	jmp	0x4001fd
<Block for 0x40013d, 20 bytes>
0x40013d:	mov	eax, dword ptr [rbp - 0x48]
0x400140:	mov	edx, 0
0x400145:	mov	esi, 0
0x40014a:	mov	edi, eax
0x40014c:	call	0x500050
<Block for 0x400151, 13 bytes>
0x400151:	mov	dword ptr [rbp - 0x4c], eax
0x400154:	cmp	dword ptr [rbp - 0x4c], -1
0x400158:	je	0x4001fc
<Block for 0x40015e, 39 bytes>
0x40015e:	mov	eax, 0x63
0x400163:	sub	rax, qword ptr [rbp - 0x30]
0x400167:	mov	rdx, rax
0x40016a:	mov	rcx, qword ptr [rbp - 0x38]
0x40016e:	mov	rax, qword ptr [rbp - 0x30]
0x400172:	lea	rsi, [rcx + rax]
0x400176:	mov	eax, dword ptr [rbp - 0x4c]
0x400179:	mov	ecx, 0
0x40017e:	mov	edi, eax
0x400180:	call	0x500058
<Block for 0x4001fc, 1 bytes>
0x4001fc:	nop	
<Block for 0x400185, 9 bytes>
0x400185:	mov	dword ptr [rbp - 0x44], eax
0x400188:	cmp	dword ptr [rbp - 0x44], -1
0x40018c:	je	0x4001fd
<Block for 0x40018e, 6 bytes>
0x40018e:	cmp	dword ptr [rbp - 0x44], 0
0x400192:	je	0x4001fd
<Block for 0x400194, 40 bytes>
0x400194:	mov	eax, dword ptr [rbp - 0x44]
0x400197:	movsxd	rdx, eax
0x40019a:	mov	rax, qword ptr [rbp - 0x30]
0x40019e:	add	rdx, rax
0x4001a1:	mov	rax, qword ptr [rbp - 0x38]
0x4001a5:	add	rax, rdx
0x4001a8:	mov	byte ptr [rax], 0
0x4001ab:	mov	rax, qword ptr [rbp - 0x38]
0x4001af:	mov	esi, 0xd
0x4001b4:	mov	rdi, rax
0x4001b7:	call	0x500060
<Block for 0x4001bc, 11 bytes>
0x4001bc:	mov	qword ptr [rbp - 0x28], rax
0x4001c0:	cmp	qword ptr [rbp - 0x28], 0
0x4001c5:	je	0x4001ce
<Block for 0x4001ce, 17 bytes>
0x4001ce:	mov	rax, qword ptr [rbp - 0x38]
0x4001d2:	mov	esi, 0xa
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500060
<Block for 0x4001c7, 24 bytes>
0x4001c7:	mov	rax, qword ptr [rbp - 0x28]
0x4001cb:	mov	byte ptr [rax], 0
0x4001ce:	mov	rax, qword ptr [rbp - 0x38]
0x4001d2:	mov	esi, 0xa
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500060
<Block for 0x4001df, 11 bytes>
0x4001df:	mov	qword ptr [rbp - 0x28], rax
0x4001e3:	cmp	qword ptr [rbp - 0x28], 0
0x4001e8:	je	0x4001fd
<Block for 0x4001ea, 9 bytes>
0x4001ea:	mov	rax, qword ptr [rbp - 0x28]
0x4001ee:	mov	byte ptr [rax], 0
0x4001f1:	jmp	0x4001fd
