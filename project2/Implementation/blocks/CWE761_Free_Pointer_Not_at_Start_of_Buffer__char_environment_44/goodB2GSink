<Block for 0x4000e4, 26 bytes>
0x4000e4:	endbr64	
0x4000e8:	push	rbp
0x4000e9:	mov	rbp, rsp
0x4000ec:	sub	rsp, 0x20
0x4000f0:	mov	qword ptr [rbp - 0x18], rdi
0x4000f4:	mov	qword ptr [rbp - 8], 0
0x4000fc:	jmp	0x400123
<Block for 0x400123, 12 bytes>
0x400123:	mov	rax, qword ptr [rbp - 0x18]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500020
<Block for 0x40012f, 6 bytes>
0x40012f:	cmp	qword ptr [rbp - 8], rax
0x400133:	jb	0x4000fe
<Block for 0x4000fe, 18 bytes>
0x4000fe:	mov	rdx, qword ptr [rbp - 0x18]
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	add	rax, rdx
0x400109:	movzx	eax, byte ptr [rax]
0x40010c:	cmp	al, 0x53
0x40010e:	jne	0x40011e
<Block for 0x400135, 12 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x18]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500008
<Block for 0x400110, 12 bytes>
0x400110:	lea	rdi, [rip + 0xdc]
0x400117:	call	0x500000
<Block for 0x40011e, 17 bytes>
0x40011e:	add	qword ptr [rbp - 8], 1
0x400123:	mov	rax, qword ptr [rbp - 0x18]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500020
<Block for 0x400141, 3 bytes>
0x400141:	nop	
0x400142:	leave	
0x400143:	ret	
<Block for 0x40011c, 2 bytes>
0x40011c:	jmp	0x400135
