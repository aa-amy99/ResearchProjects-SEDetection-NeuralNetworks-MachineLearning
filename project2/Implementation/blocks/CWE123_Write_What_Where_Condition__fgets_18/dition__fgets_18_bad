<Block for 0x400000, 104 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	lea	rax, [rbp - 0x20]
0x400027:	mov	qword ptr [rbp - 0x18], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x20]
0x40002f:	mov	qword ptr [rbp - 0x30], rax
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	qword ptr [rbp - 0x28], rax
0x40003b:	lea	rax, [rbp - 0x30]
0x40003f:	mov	qword ptr [rbp - 0x20], rax
0x400043:	lea	rax, [rbp - 0x30]
0x400047:	mov	qword ptr [rbp - 0x18], rax
0x40004b:	nop	
0x40004c:	endbr64	
0x400050:	mov	rdx, qword ptr [rip + 0xfffa9]
0x400057:	lea	rax, [rbp - 0x30]
0x40005b:	mov	esi, 0x10
0x400060:	mov	rdi, rax
0x400063:	call	0x500008
<Block for 0x400068, 5 bytes>
0x400068:	test	rax, rax
0x40006b:	jne	0x400083
<Block for 0x40006d, 12 bytes>
0x40006d:	lea	rdi, [rip + 0x124]
0x400074:	call	0x500010
<Block for 0x400083, 73 bytes>
0x400083:	mov	rax, qword ptr [rbp - 0x28]
0x400087:	mov	qword ptr [rip + 0xfa], rax
0x40008e:	mov	rax, qword ptr [rbp - 0x30]
0x400092:	mov	qword ptr [rip + 0xf7], rax
0x400099:	mov	rax, qword ptr [rip + 0xe8]
0x4000a0:	mov	rdx, qword ptr [rip + 0xe9]
0x4000a7:	mov	qword ptr [rax], rdx
0x4000aa:	mov	rax, qword ptr [rip + 0xdf]
0x4000b1:	mov	rdx, qword ptr [rip + 0xd0]
0x4000b8:	mov	qword ptr [rax + 8], rdx
0x4000bc:	nop	
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	xor	rax, qword ptr fs:[0x28]
0x4000ca:	je	0x4000d1
<Block for 0x400079, 10 bytes>
0x400079:	mov	edi, 1
0x40007e:	call	0x500018
<Block for 0x4000d1, 2 bytes>
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x4000cc, 5 bytes>
0x4000cc:	call	0x500020
