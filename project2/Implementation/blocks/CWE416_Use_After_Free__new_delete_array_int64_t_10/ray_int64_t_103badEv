<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	test	eax, eax
0x40001c:	je	0x40006f
<Block for 0x40006f, 10 bytes>
0x40006f:	mov	eax, dword ptr [rip + 0xfff8b]
0x400075:	test	eax, eax
0x400077:	je	0x400088
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 0x320
0x400023:	call	0x500008
<Block for 0x400088, 3 bytes>
0x400088:	nop	
0x400089:	leave	
0x40008a:	ret	
<Block for 0x400079, 15 bytes>
0x400079:	mov	rax, qword ptr [rbp - 0x10]
0x40007d:	mov	rax, qword ptr [rax]
0x400080:	mov	rdi, rax
0x400083:	call	0x500018
<Block for 0x400028, 19 bytes>
0x400028:	mov	qword ptr [rbp - 0x10], rax
0x40002c:	mov	qword ptr [rbp - 8], 0
0x400034:	cmp	qword ptr [rbp - 8], 0x63
0x400039:	ja	0x40005c
<Block for 0x40003b, 33 bytes>
0x40003b:	mov	rax, qword ptr [rbp - 8]
0x40003f:	lea	rdx, [rax*8]
0x400047:	mov	rax, qword ptr [rbp - 0x10]
0x40004b:	add	rax, rdx
0x40004e:	mov	qword ptr [rax], 5
0x400055:	add	qword ptr [rbp - 8], 1
0x40005a:	jmp	0x400034
<Block for 0x40005c, 7 bytes>
0x40005c:	cmp	qword ptr [rbp - 0x10], 0
0x400061:	je	0x40006f
<Block for 0x400034, 7 bytes>
0x400034:	cmp	qword ptr [rbp - 8], 0x63
0x400039:	ja	0x40005c
<Block for 0x400063, 12 bytes>
0x400063:	mov	rax, qword ptr [rbp - 0x10]
0x400067:	mov	rdi, rax
0x40006a:	call	0x500010
