<Block for 0x40008b, 30 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x10
0x400097:	mov	qword ptr [rbp - 8], 0
0x40009f:	mov	eax, dword ptr [rip + 0xfff5b]
0x4000a5:	test	eax, eax
0x4000a7:	je	0x4000fa
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	eax, dword ptr [rip + 0xfff20]
0x400100:	test	eax, eax
0x400102:	je	0x400110
<Block for 0x4000a9, 10 bytes>
0x4000a9:	mov	edi, 0x320
0x4000ae:	call	0x500008
<Block for 0x400110, 3 bytes>
0x400110:	nop	
0x400111:	leave	
0x400112:	ret	
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x197]
0x40010b:	call	0x500028
<Block for 0x4000b3, 19 bytes>
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	mov	qword ptr [rbp - 0x10], 0
0x4000bf:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c4:	ja	0x4000e7
<Block for 0x4000c6, 33 bytes>
0x4000c6:	mov	rax, qword ptr [rbp - 0x10]
0x4000ca:	lea	rdx, [rax*8]
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	add	rax, rdx
0x4000d9:	mov	qword ptr [rax], 5
0x4000e0:	add	qword ptr [rbp - 0x10], 1
0x4000e5:	jmp	0x4000bf
<Block for 0x4000e7, 7 bytes>
0x4000e7:	cmp	qword ptr [rbp - 8], 0
0x4000ec:	je	0x4000fa
<Block for 0x4000bf, 7 bytes>
0x4000bf:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c4:	ja	0x4000e7
<Block for 0x4000ee, 12 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 8]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
