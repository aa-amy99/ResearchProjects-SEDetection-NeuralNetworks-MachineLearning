<Block for 0x4001aa, 46 bytes>
0x4001aa:	endbr64	
0x4001ae:	push	rbp
0x4001af:	mov	rbp, rsp
0x4001b2:	push	rbx
0x4001b3:	sub	rsp, 0x98
0x4001ba:	mov	rax, qword ptr fs:[0x28]
0x4001c3:	mov	qword ptr [rbp - 0x18], rax
0x4001c7:	xor	eax, eax
0x4001c9:	lea	rax, [rbp - 0xa0]
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x400700
<Block for 0x4001d8, 12 bytes>
0x4001d8:	lea	rax, [rbp - 0x80]
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x400780
<Block for 0x4001e4, 29 bytes>
0x4001e4:	mov	dword ptr [rbp - 0x50], 0x64
0x4001eb:	lea	rdx, [rbp - 0x50]
0x4001ef:	lea	rax, [rbp - 0xa0]
0x4001f6:	mov	rsi, rdx
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x400a26
<Block for 0x400201, 29 bytes>
0x400201:	mov	dword ptr [rbp - 0x50], 0xc8
0x400208:	lea	rdx, [rbp - 0x50]
0x40020c:	lea	rax, [rbp - 0xa0]
0x400213:	mov	rsi, rdx
0x400216:	mov	rdi, rax
0x400219:	call	0x400a26
<Block for 0x40021e, 26 bytes>
0x40021e:	mov	dword ptr [rbp - 0x50], 0
0x400225:	lea	rdx, [rbp - 0x50]
0x400229:	lea	rax, [rbp - 0x80]
0x40022d:	mov	rsi, rdx
0x400230:	mov	rdi, rax
0x400233:	call	0x400a74
<Block for 0x400238, 21 bytes>
0x400238:	mov	rdx, rax
0x40023b:	lea	rax, [rbp - 0xa0]
0x400242:	mov	rsi, rax
0x400245:	mov	rdi, rdx
0x400248:	call	0x400bbe
<Block for 0x40024d, 26 bytes>
0x40024d:	mov	dword ptr [rbp - 0x50], 1
0x400254:	lea	rdx, [rbp - 0x50]
0x400258:	lea	rax, [rbp - 0x80]
0x40025c:	mov	rsi, rdx
0x40025f:	mov	rdi, rax
0x400262:	call	0x400a74
<Block for 0x400267, 21 bytes>
0x400267:	mov	rdx, rax
0x40026a:	lea	rax, [rbp - 0xa0]
0x400271:	mov	rsi, rax
0x400274:	mov	rdi, rdx
0x400277:	call	0x400bbe
<Block for 0x40027c, 26 bytes>
0x40027c:	mov	dword ptr [rbp - 0x50], 2
0x400283:	lea	rdx, [rbp - 0x50]
0x400287:	lea	rax, [rbp - 0x80]
0x40028b:	mov	rsi, rdx
0x40028e:	mov	rdi, rax
0x400291:	call	0x400a74
<Block for 0x400296, 21 bytes>
0x400296:	mov	rdx, rax
0x400299:	lea	rax, [rbp - 0xa0]
0x4002a0:	mov	rsi, rax
0x4002a3:	mov	rdi, rdx
0x4002a6:	call	0x400bbe
<Block for 0x4002ab, 19 bytes>
0x4002ab:	lea	rdx, [rbp - 0x80]
0x4002af:	lea	rax, [rbp - 0x50]
0x4002b3:	mov	rsi, rdx
0x4002b6:	mov	rdi, rax
0x4002b9:	call	0x4007c0
<Block for 0x4002be, 12 bytes>
0x4002be:	lea	rax, [rbp - 0x50]
0x4002c2:	mov	rdi, rax
0x4002c5:	call	0x500018
<Block for 0x4002ca, 12 bytes>
0x4002ca:	lea	rax, [rbp - 0x50]
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x4007a0
<Block for 0x4002d6, 12 bytes>
0x4002d6:	lea	rax, [rbp - 0x80]
0x4002da:	mov	rdi, rax
0x4002dd:	call	0x4007a0
<Block for 0x4002e2, 15 bytes>
0x4002e2:	lea	rax, [rbp - 0xa0]
0x4002e9:	mov	rdi, rax
0x4002ec:	call	0x400720
<Block for 0x4002f1, 16 bytes>
0x4002f1:	nop	
0x4002f2:	mov	rax, qword ptr [rbp - 0x18]
0x4002f6:	xor	rax, qword ptr fs:[0x28]
0x4002ff:	je	0x40034a
<Block for 0x40034a, 10 bytes>
0x40034a:	add	rsp, 0x98
0x400351:	pop	rbx
0x400352:	pop	rbp
0x400353:	ret	
<Block for 0x400301, 2 bytes>
0x400301:	jmp	0x400345
<Block for 0x400345, 5 bytes>
0x400345:	call	0x500010
