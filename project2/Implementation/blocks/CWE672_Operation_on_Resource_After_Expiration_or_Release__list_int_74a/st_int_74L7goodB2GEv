<Block for 0x400354, 46 bytes>
0x400354:	endbr64	
0x400358:	push	rbp
0x400359:	mov	rbp, rsp
0x40035c:	push	rbx
0x40035d:	sub	rsp, 0x98
0x400364:	mov	rax, qword ptr fs:[0x28]
0x40036d:	mov	qword ptr [rbp - 0x18], rax
0x400371:	xor	eax, eax
0x400373:	lea	rax, [rbp - 0xa0]
0x40037a:	mov	rdi, rax
0x40037d:	call	0x400700
<Block for 0x400382, 12 bytes>
0x400382:	lea	rax, [rbp - 0x80]
0x400386:	mov	rdi, rax
0x400389:	call	0x400780
<Block for 0x40038e, 29 bytes>
0x40038e:	mov	dword ptr [rbp - 0x50], 0x64
0x400395:	lea	rdx, [rbp - 0x50]
0x400399:	lea	rax, [rbp - 0xa0]
0x4003a0:	mov	rsi, rdx
0x4003a3:	mov	rdi, rax
0x4003a6:	call	0x400a26
<Block for 0x4003ab, 29 bytes>
0x4003ab:	mov	dword ptr [rbp - 0x50], 0
0x4003b2:	lea	rdx, [rbp - 0x50]
0x4003b6:	lea	rax, [rbp - 0xa0]
0x4003bd:	mov	rsi, rdx
0x4003c0:	mov	rdi, rax
0x4003c3:	call	0x400a26
<Block for 0x4003c8, 26 bytes>
0x4003c8:	mov	dword ptr [rbp - 0x50], 0
0x4003cf:	lea	rdx, [rbp - 0x50]
0x4003d3:	lea	rax, [rbp - 0x80]
0x4003d7:	mov	rsi, rdx
0x4003da:	mov	rdi, rax
0x4003dd:	call	0x400a74
<Block for 0x4003e2, 21 bytes>
0x4003e2:	mov	rdx, rax
0x4003e5:	lea	rax, [rbp - 0xa0]
0x4003ec:	mov	rsi, rax
0x4003ef:	mov	rdi, rdx
0x4003f2:	call	0x400bbe
<Block for 0x4003f7, 26 bytes>
0x4003f7:	mov	dword ptr [rbp - 0x50], 1
0x4003fe:	lea	rdx, [rbp - 0x50]
0x400402:	lea	rax, [rbp - 0x80]
0x400406:	mov	rsi, rdx
0x400409:	mov	rdi, rax
0x40040c:	call	0x400a74
<Block for 0x400411, 21 bytes>
0x400411:	mov	rdx, rax
0x400414:	lea	rax, [rbp - 0xa0]
0x40041b:	mov	rsi, rax
0x40041e:	mov	rdi, rdx
0x400421:	call	0x400bbe
<Block for 0x400426, 26 bytes>
0x400426:	mov	dword ptr [rbp - 0x50], 2
0x40042d:	lea	rdx, [rbp - 0x50]
0x400431:	lea	rax, [rbp - 0x80]
0x400435:	mov	rsi, rdx
0x400438:	mov	rdi, rax
0x40043b:	call	0x400a74
<Block for 0x400440, 21 bytes>
0x400440:	mov	rdx, rax
0x400443:	lea	rax, [rbp - 0xa0]
0x40044a:	mov	rsi, rax
0x40044d:	mov	rdi, rdx
0x400450:	call	0x400bbe
<Block for 0x400455, 19 bytes>
0x400455:	lea	rdx, [rbp - 0x80]
0x400459:	lea	rax, [rbp - 0x50]
0x40045d:	mov	rsi, rdx
0x400460:	mov	rdi, rax
0x400463:	call	0x4007c0
<Block for 0x400468, 12 bytes>
0x400468:	lea	rax, [rbp - 0x50]
0x40046c:	mov	rdi, rax
0x40046f:	call	0x500020
<Block for 0x400474, 12 bytes>
0x400474:	lea	rax, [rbp - 0x50]
0x400478:	mov	rdi, rax
0x40047b:	call	0x4007a0
<Block for 0x400480, 12 bytes>
0x400480:	lea	rax, [rbp - 0x80]
0x400484:	mov	rdi, rax
0x400487:	call	0x4007a0
<Block for 0x40048c, 15 bytes>
0x40048c:	lea	rax, [rbp - 0xa0]
0x400493:	mov	rdi, rax
0x400496:	call	0x400720
<Block for 0x40049b, 16 bytes>
0x40049b:	nop	
0x40049c:	mov	rax, qword ptr [rbp - 0x18]
0x4004a0:	xor	rax, qword ptr fs:[0x28]
0x4004a9:	je	0x4004f4
<Block for 0x4004f4, 10 bytes>
0x4004f4:	add	rsp, 0x98
0x4004fb:	pop	rbx
0x4004fc:	pop	rbp
0x4004fd:	ret	
<Block for 0x4004ab, 2 bytes>
0x4004ab:	jmp	0x4004ef
<Block for 0x4004ef, 5 bytes>
0x4004ef:	call	0x500010
