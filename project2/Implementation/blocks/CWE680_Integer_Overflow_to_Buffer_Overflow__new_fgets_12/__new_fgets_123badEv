<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	call	0x500000
<Block for 0x400027, 9 bytes>
0x400027:	test	eax, eax
0x400029:	setne	al
0x40002c:	test	al, al
0x40002e:	je	0x400086
<Block for 0x400086, 32 bytes>
0x400086:	mov	dword ptr [rbp - 0x34], 0x14
0x40008d:	mov	eax, dword ptr [rbp - 0x34]
0x400090:	cdqe	
0x400092:	shl	rax, 2
0x400096:	mov	qword ptr [rbp - 0x28], rax
0x40009a:	mov	rax, qword ptr [rbp - 0x28]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500028
<Block for 0x400030, 45 bytes>
0x400030:	mov	qword ptr [rbp - 0x16], 0
0x400038:	mov	dword ptr [rbp - 0xe], 0
0x40003f:	mov	word ptr [rbp - 0xa], 0
0x400045:	mov	rdx, qword ptr [rip + 0xfffbc]
0x40004c:	lea	rax, [rbp - 0x16]
0x400050:	mov	esi, 0xe
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x4000a6, 23 bytes>
0x4000a6:	mov	qword ptr [rbp - 0x20], rax
0x4000aa:	mov	qword ptr [rbp - 0x30], 0
0x4000b2:	mov	eax, dword ptr [rbp - 0x34]
0x4000b5:	cdqe	
0x4000b7:	cmp	qword ptr [rbp - 0x30], rax
0x4000bb:	jae	0x4000dd
<Block for 0x40005d, 10 bytes>
0x40005d:	test	rax, rax
0x400060:	setne	al
0x400063:	test	al, al
0x400065:	je	0x400078
<Block for 0x4000bd, 32 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x30]
0x4000c1:	lea	rdx, [rax*4]
0x4000c9:	mov	rax, qword ptr [rbp - 0x20]
0x4000cd:	add	rax, rdx
0x4000d0:	mov	dword ptr [rax], 0
0x4000d6:	add	qword ptr [rbp - 0x30], 1
0x4000db:	jmp	0x4000b2
<Block for 0x4000dd, 13 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x20]
0x4000e1:	mov	eax, dword ptr [rax]
0x4000e3:	mov	edi, eax
0x4000e5:	call	0x500030
<Block for 0x400078, 12 bytes>
0x400078:	lea	rdi, [rip + 0x149]
0x40007f:	call	0x500020
<Block for 0x400067, 12 bytes>
0x400067:	lea	rax, [rbp - 0x16]
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500018
<Block for 0x4000b2, 11 bytes>
0x4000b2:	mov	eax, dword ptr [rbp - 0x34]
0x4000b5:	cdqe	
0x4000b7:	cmp	qword ptr [rbp - 0x30], rax
0x4000bb:	jae	0x4000dd
<Block for 0x4000ea, 7 bytes>
0x4000ea:	cmp	qword ptr [rbp - 0x20], 0
0x4000ef:	je	0x4000fd
<Block for 0x400084, 2 bytes>
0x400084:	jmp	0x40008d
<Block for 0x400073, 5 bytes>
0x400073:	mov	dword ptr [rbp - 0x34], eax
0x400076:	jmp	0x40008d
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x4000f1, 12 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x20]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500038
<Block for 0x40008d, 25 bytes>
0x40008d:	mov	eax, dword ptr [rbp - 0x34]
0x400090:	cdqe	
0x400092:	shl	rax, 2
0x400096:	mov	qword ptr [rbp - 0x28], rax
0x40009a:	mov	rax, qword ptr [rbp - 0x28]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500028
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500040
