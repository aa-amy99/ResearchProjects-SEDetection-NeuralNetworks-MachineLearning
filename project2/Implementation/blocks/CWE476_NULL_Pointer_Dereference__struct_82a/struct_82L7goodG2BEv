<Block for 0x400066, 60 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x28
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 0x18], rax
0x400080:	xor	eax, eax
0x400082:	mov	dword ptr [rbp - 0x20], 0
0x400089:	mov	dword ptr [rbp - 0x1c], 0
0x400090:	lea	rax, [rbp - 0x20]
0x400094:	mov	qword ptr [rbp - 0x30], rax
0x400098:	mov	edi, 8
0x40009d:	call	0x500000
<Block for 0x4000a2, 11 bytes>
0x4000a2:	mov	rbx, rax
0x4000a5:	mov	rdi, rbx
0x4000a8:	call	0x4001c4
<Block for 0x4000ad, 30 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x28], rbx
0x4000b1:	mov	rax, qword ptr [rbp - 0x28]
0x4000b5:	mov	rax, qword ptr [rax]
0x4000b8:	mov	rcx, qword ptr [rax]
0x4000bb:	mov	rdx, qword ptr [rbp - 0x30]
0x4000bf:	mov	rax, qword ptr [rbp - 0x28]
0x4000c3:	mov	rsi, rdx
0x4000c6:	mov	rdi, rax
0x4000c9:	call	rcx
<Block for 0x4000cb, 9 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 0x28]
0x4000cf:	test	rax, rax
0x4000d2:	je	0x4000e1
<Block for 0x4000e1, 16 bytes>
0x4000e1:	nop	
0x4000e2:	mov	rax, qword ptr [rbp - 0x18]
0x4000e6:	xor	rax, qword ptr fs:[0x28]
0x4000ef:	je	0x4000f6
<Block for 0x4000d4, 13 bytes>
0x4000d4:	mov	esi, 8
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500008
<Block for 0x4000f6, 7 bytes>
0x4000f6:	add	rsp, 0x28
0x4000fa:	pop	rbx
0x4000fb:	pop	rbp
0x4000fc:	ret	
<Block for 0x4000f1, 5 bytes>
0x4000f1:	call	0x500010
