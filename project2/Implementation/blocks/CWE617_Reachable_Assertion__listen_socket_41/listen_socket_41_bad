<Block for 0x400037, 68 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	sub	rsp, 0x40
0x400043:	mov	rax, qword ptr fs:[0x28]
0x40004c:	mov	qword ptr [rbp - 8], rax
0x400050:	xor	eax, eax
0x400052:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400059:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400060:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x400067:	mov	edx, 6
0x40006c:	mov	esi, 1
0x400071:	mov	edi, 2
0x400076:	call	0x500008
<Block for 0x40007b, 13 bytes>
0x40007b:	mov	dword ptr [rbp - 0x38], eax
0x40007e:	cmp	dword ptr [rbp - 0x38], -1
0x400082:	je	0x400147
<Block for 0x400147, 3 bytes>
0x400147:	nop	
0x400148:	jmp	0x400151
<Block for 0x400088, 22 bytes>
0x400088:	lea	rax, [rbp - 0x30]
0x40008c:	mov	edx, 0x10
0x400091:	mov	esi, 0
0x400096:	mov	rdi, rax
0x400099:	call	0x500010
<Block for 0x400151, 6 bytes>
0x400151:	cmp	dword ptr [rbp - 0x38], -1
0x400155:	je	0x400161
<Block for 0x40009e, 23 bytes>
0x40009e:	mov	word ptr [rbp - 0x30], 2
0x4000a4:	mov	dword ptr [rbp - 0x2c], 0
0x4000ab:	mov	edi, 0x6987
0x4000b0:	call	0x500018
<Block for 0x400161, 6 bytes>
0x400161:	cmp	dword ptr [rbp - 0x3c], -1
0x400165:	je	0x400171
<Block for 0x400157, 10 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x38]
0x40015a:	mov	edi, eax
0x40015c:	call	0x500048
<Block for 0x4000b5, 26 bytes>
0x4000b5:	mov	word ptr [rbp - 0x2e], ax
0x4000b9:	lea	rcx, [rbp - 0x30]
0x4000bd:	mov	eax, dword ptr [rbp - 0x38]
0x4000c0:	mov	edx, 0x10
0x4000c5:	mov	rsi, rcx
0x4000c8:	mov	edi, eax
0x4000ca:	call	0x500020
<Block for 0x400171, 10 bytes>
0x400171:	mov	eax, dword ptr [rbp - 0x40]
0x400174:	mov	edi, eax
0x400176:	call	0x400000
<Block for 0x400167, 10 bytes>
0x400167:	mov	eax, dword ptr [rbp - 0x3c]
0x40016a:	mov	edi, eax
0x40016c:	call	0x500048
<Block for 0x4000cf, 5 bytes>
0x4000cf:	cmp	eax, -1
0x4000d2:	je	0x40014a
<Block for 0x40017b, 16 bytes>
0x40017b:	nop	
0x40017c:	mov	rax, qword ptr [rbp - 8]
0x400180:	xor	rax, qword ptr fs:[0x28]
0x400189:	je	0x400190
<Block for 0x40014a, 3 bytes>
0x40014a:	nop	
0x40014b:	jmp	0x400151
<Block for 0x4000d4, 15 bytes>
0x4000d4:	mov	eax, dword ptr [rbp - 0x38]
0x4000d7:	mov	esi, 5
0x4000dc:	mov	edi, eax
0x4000de:	call	0x500028
<Block for 0x400190, 2 bytes>
0x400190:	leave	
0x400191:	ret	
<Block for 0x40018b, 5 bytes>
0x40018b:	call	0x500050
<Block for 0x4000e3, 5 bytes>
0x4000e3:	cmp	eax, -1
0x4000e6:	je	0x40014d
<Block for 0x40014d, 3 bytes>
0x40014d:	nop	
0x40014e:	jmp	0x400151
<Block for 0x4000e8, 20 bytes>
0x4000e8:	mov	eax, dword ptr [rbp - 0x38]
0x4000eb:	mov	edx, 0
0x4000f0:	mov	esi, 0
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x500030
<Block for 0x4000fc, 9 bytes>
0x4000fc:	mov	dword ptr [rbp - 0x3c], eax
0x4000ff:	cmp	dword ptr [rbp - 0x3c], -1
0x400103:	je	0x400150
<Block for 0x400105, 24 bytes>
0x400105:	lea	rsi, [rbp - 0x16]
0x400109:	mov	eax, dword ptr [rbp - 0x3c]
0x40010c:	mov	ecx, 0
0x400111:	mov	edx, 0xd
0x400116:	mov	edi, eax
0x400118:	call	0x500038
<Block for 0x400150, 1 bytes>
0x400150:	nop	
<Block for 0x40011d, 9 bytes>
0x40011d:	mov	dword ptr [rbp - 0x34], eax
0x400120:	cmp	dword ptr [rbp - 0x34], -1
0x400124:	je	0x400151
<Block for 0x400126, 6 bytes>
0x400126:	cmp	dword ptr [rbp - 0x34], 0
0x40012a:	je	0x400151
<Block for 0x40012c, 22 bytes>
0x40012c:	mov	eax, dword ptr [rbp - 0x34]
0x40012f:	cdqe	
0x400131:	mov	byte ptr [rbp + rax - 0x16], 0
0x400136:	lea	rax, [rbp - 0x16]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500040
<Block for 0x400142, 5 bytes>
0x400142:	mov	dword ptr [rbp - 0x40], eax
0x400145:	jmp	0x400151
