<Block for 0x4000b6, 57 bytes>
0x4000b6:	endbr64	
0x4000ba:	push	rbp
0x4000bb:	mov	rbp, rsp
0x4000be:	add	rsp, -0x80
0x4000c2:	mov	rax, qword ptr fs:[0x28]
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	xor	eax, eax
0x4000d1:	mov	qword ptr [rbp - 0x78], 0
0x4000d9:	mov	dword ptr [rip + 0x159], 0
0x4000e3:	mov	rax, qword ptr [rbp - 0x78]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500020
<Block for 0x4000ef, 26 bytes>
0x4000ef:	mov	qword ptr [rbp - 0x78], rax
0x4000f3:	lea	rax, [rbp - 0x70]
0x4000f7:	mov	edx, 0x63
0x4000fc:	mov	esi, 0x43
0x400101:	mov	rdi, rax
0x400104:	call	0x500008
<Block for 0x400109, 19 bytes>
0x400109:	mov	byte ptr [rbp - 0xd], 0
0x40010d:	mov	qword ptr [rbp - 0x80], 0
0x400115:	cmp	qword ptr [rbp - 0x80], 0x63
0x40011a:	ja	0x40013e
<Block for 0x40011c, 34 bytes>
0x40011c:	mov	rdx, qword ptr [rbp - 0x78]
0x400120:	mov	rax, qword ptr [rbp - 0x80]
0x400124:	add	rdx, rax
0x400127:	lea	rcx, [rbp - 0x70]
0x40012b:	mov	rax, qword ptr [rbp - 0x80]
0x40012f:	add	rax, rcx
0x400132:	movzx	eax, byte ptr [rax]
0x400135:	mov	byte ptr [rdx], al
0x400137:	add	qword ptr [rbp - 0x80], 1
0x40013c:	jmp	0x400115
<Block for 0x40013e, 23 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x78]
0x400142:	add	rax, 0x63
0x400146:	mov	byte ptr [rax], 0
0x400149:	mov	rax, qword ptr [rbp - 0x78]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500010
<Block for 0x400115, 7 bytes>
0x400115:	cmp	qword ptr [rbp - 0x80], 0x63
0x40011a:	ja	0x40013e
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500018
