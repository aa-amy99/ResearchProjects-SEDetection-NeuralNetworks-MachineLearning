<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	dword ptr [rip + 0x20b], 1
0x40002d:	mov	rax, qword ptr [rbp - 0x78]
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 26 bytes>
0x400039:	mov	qword ptr [rbp - 0x78], rax
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x43
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 19 bytes>
0x400053:	mov	byte ptr [rbp - 0xd], 0
0x400057:	mov	qword ptr [rbp - 0x80], 0
0x40005f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400064:	ja	0x400088
<Block for 0x400066, 34 bytes>
0x400066:	mov	rdx, qword ptr [rbp - 0x78]
0x40006a:	mov	rax, qword ptr [rbp - 0x80]
0x40006e:	add	rdx, rax
0x400071:	lea	rcx, [rbp - 0x70]
0x400075:	mov	rax, qword ptr [rbp - 0x80]
0x400079:	add	rax, rcx
0x40007c:	movzx	eax, byte ptr [rax]
0x40007f:	mov	byte ptr [rdx], al
0x400081:	add	qword ptr [rbp - 0x80], 1
0x400086:	jmp	0x40005f
<Block for 0x400088, 23 bytes>
0x400088:	mov	rax, qword ptr [rbp - 0x78]
0x40008c:	add	rax, 0x63
0x400090:	mov	byte ptr [rax], 0
0x400093:	mov	rax, qword ptr [rbp - 0x78]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500010
<Block for 0x40005f, 7 bytes>
0x40005f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400064:	ja	0x400088
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000b4
<Block for 0x4000b4, 2 bytes>
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500018
