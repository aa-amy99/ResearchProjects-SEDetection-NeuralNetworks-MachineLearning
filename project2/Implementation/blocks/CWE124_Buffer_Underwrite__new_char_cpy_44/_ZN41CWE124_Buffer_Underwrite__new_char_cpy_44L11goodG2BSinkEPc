<Block for 0x4000d9, 53 bytes>
0x4000d9:	endbr64	
0x4000dd:	push	rbp
0x4000de:	mov	rbp, rsp
0x4000e1:	add	rsp, -0x80
0x4000e5:	mov	qword ptr [rbp - 0x78], rdi
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	edx, 0x63
0x400101:	mov	esi, 0x43
0x400106:	mov	rdi, rax
0x400109:	call	0x500000
<Block for 0x40010e, 23 bytes>
0x40010e:	mov	byte ptr [rbp - 0xd], 0
0x400112:	lea	rdx, [rbp - 0x70]
0x400116:	mov	rax, qword ptr [rbp - 0x78]
0x40011a:	mov	rsi, rdx
0x40011d:	mov	rdi, rax
0x400120:	call	0x500008
<Block for 0x400125, 12 bytes>
0x400125:	mov	rax, qword ptr [rbp - 0x78]
0x400129:	mov	rdi, rax
0x40012c:	call	0x500010
<Block for 0x400131, 16 bytes>
0x400131:	nop	
0x400132:	mov	rax, qword ptr [rbp - 8]
0x400136:	xor	rax, qword ptr fs:[0x28]
0x40013f:	je	0x400146
<Block for 0x400146, 2 bytes>
0x400146:	leave	
0x400147:	ret	
<Block for 0x400141, 5 bytes>
0x400141:	call	0x500018
