<Block for 0x4001ce, 48 bytes>
0x4001ce:	endbr64	
0x4001d2:	push	rbp
0x4001d3:	mov	rbp, rsp
0x4001d6:	sub	rsp, 0x90
0x4001dd:	mov	rax, qword ptr fs:[0x28]
0x4001e6:	mov	qword ptr [rbp - 8], rax
0x4001ea:	xor	eax, eax
0x4001ec:	mov	qword ptr [rbp - 0x80], 0
0x4001f4:	mov	edi, 0x64
0x4001f9:	call	0x500000
<Block for 0x4001fe, 26 bytes>
0x4001fe:	mov	qword ptr [rbp - 0x78], rax
0x400202:	mov	rax, qword ptr [rbp - 0x78]
0x400206:	mov	edx, 0x63
0x40020b:	mov	esi, 0x41
0x400210:	mov	rdi, rax
0x400213:	call	0x500008
<Block for 0x400218, 41 bytes>
0x400218:	mov	rax, qword ptr [rbp - 0x78]
0x40021c:	add	rax, 0x63
0x400220:	mov	byte ptr [rax], 0
0x400223:	mov	rax, qword ptr [rbp - 0x78]
0x400227:	mov	qword ptr [rbp - 0x80], rax
0x40022b:	lea	rax, [rbp - 0x70]
0x40022f:	mov	edx, 0x63
0x400234:	mov	esi, 0x43
0x400239:	mov	rdi, rax
0x40023c:	call	0x500008
<Block for 0x400241, 25 bytes>
0x400241:	mov	byte ptr [rbp - 0xd], 0
0x400245:	mov	qword ptr [rbp - 0x88], 0
0x400250:	cmp	qword ptr [rbp - 0x88], 0x63
0x400258:	ja	0x400285
<Block for 0x40025a, 43 bytes>
0x40025a:	mov	rdx, qword ptr [rbp - 0x80]
0x40025e:	mov	rax, qword ptr [rbp - 0x88]
0x400265:	add	rdx, rax
0x400268:	lea	rcx, [rbp - 0x70]
0x40026c:	mov	rax, qword ptr [rbp - 0x88]
0x400273:	add	rax, rcx
0x400276:	movzx	eax, byte ptr [rax]
0x400279:	mov	byte ptr [rdx], al
0x40027b:	add	qword ptr [rbp - 0x88], 1
0x400283:	jmp	0x400250
<Block for 0x400285, 23 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x80]
0x400289:	add	rax, 0x63
0x40028d:	mov	byte ptr [rax], 0
0x400290:	mov	rax, qword ptr [rbp - 0x80]
0x400294:	mov	rdi, rax
0x400297:	call	0x500010
<Block for 0x400250, 10 bytes>
0x400250:	cmp	qword ptr [rbp - 0x88], 0x63
0x400258:	ja	0x400285
<Block for 0x40029c, 16 bytes>
0x40029c:	nop	
0x40029d:	mov	rax, qword ptr [rbp - 8]
0x4002a1:	xor	rax, qword ptr fs:[0x28]
0x4002aa:	je	0x4002b1
<Block for 0x4002b1, 2 bytes>
0x4002b1:	leave	
0x4002b2:	ret	
<Block for 0x4002ac, 5 bytes>
0x4002ac:	call	0x500018
