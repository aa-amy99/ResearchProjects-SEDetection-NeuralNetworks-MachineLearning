<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400027:	mov	edx, 6
0x40002c:	mov	esi, 1
0x400031:	mov	edi, 2
0x400036:	call	0x500000
<Block for 0x40003b, 9 bytes>
0x40003b:	mov	dword ptr [rbp - 0x24], eax
0x40003e:	cmp	dword ptr [rbp - 0x24], -1
0x400042:	je	0x400098
<Block for 0x400044, 22 bytes>
0x400044:	lea	rax, [rbp - 0x20]
0x400048:	mov	edx, 0x10
0x40004d:	mov	esi, 0
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x400098, 1 bytes>
0x400098:	nop	
<Block for 0x40005a, 18 bytes>
0x40005a:	mov	word ptr [rbp - 0x20], 2
0x400060:	lea	rdi, [rip + 0x59]
0x400067:	call	0x500010
<Block for 0x400099, 6 bytes>
0x400099:	cmp	dword ptr [rbp - 0x24], -1
0x40009d:	je	0x4000a9
<Block for 0x40006c, 13 bytes>
0x40006c:	mov	dword ptr [rbp - 0x1c], eax
0x40006f:	mov	edi, 0x50
0x400074:	call	0x500018
<Block for 0x4000a9, 16 bytes>
0x4000a9:	nop	
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	xor	rax, qword ptr fs:[0x28]
0x4000b7:	je	0x4000be
<Block for 0x40009f, 10 bytes>
0x40009f:	mov	eax, dword ptr [rbp - 0x24]
0x4000a2:	mov	edi, eax
0x4000a4:	call	0x500028
<Block for 0x400079, 26 bytes>
0x400079:	mov	word ptr [rbp - 0x1e], ax
0x40007d:	lea	rcx, [rbp - 0x20]
0x400081:	mov	eax, dword ptr [rbp - 0x24]
0x400084:	mov	edx, 0x10
0x400089:	mov	rsi, rcx
0x40008c:	mov	edi, eax
0x40008e:	call	0x500020
<Block for 0x4000be, 2 bytes>
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000b9, 5 bytes>
0x4000b9:	call	0x500030
<Block for 0x400093, 5 bytes>
0x400093:	cmp	eax, -1
0x400096:	jmp	0x400099
