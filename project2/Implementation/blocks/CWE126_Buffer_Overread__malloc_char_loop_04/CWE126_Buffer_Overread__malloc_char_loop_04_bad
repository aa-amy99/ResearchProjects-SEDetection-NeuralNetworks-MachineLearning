<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, 1
0x40002e:	test	eax, eax
0x400030:	je	0x40007e
<Block for 0x40007e, 22 bytes>
0x40007e:	lea	rax, [rbp - 0x70]
0x400082:	mov	edx, 0x63
0x400087:	mov	esi, 0x43
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0x32
0x400037:	call	0x500000
<Block for 0x400094, 16 bytes>
0x400094:	mov	byte ptr [rbp - 0xd], 0
0x400098:	lea	rax, [rbp - 0x70]
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500018
<Block for 0x40003c, 17 bytes>
0x40003c:	mov	qword ptr [rbp - 0x88], rax
0x400043:	cmp	qword ptr [rbp - 0x88], 0
0x40004b:	jne	0x400057
<Block for 0x4000a4, 14 bytes>
0x4000a4:	mov	qword ptr [rbp - 0x78], rax
0x4000a8:	mov	qword ptr [rbp - 0x80], 0
0x4000b0:	jmp	0x4000d5
<Block for 0x40004d, 10 bytes>
0x40004d:	mov	edi, 0xffffffff
0x400052:	call	0x500008
<Block for 0x400057, 25 bytes>
0x400057:	mov	rax, qword ptr [rbp - 0x88]
0x40005e:	mov	edx, 0x31
0x400063:	mov	esi, 0x41
0x400068:	mov	rdi, rax
0x40006b:	call	0x500010
<Block for 0x4000d5, 10 bytes>
0x4000d5:	mov	rax, qword ptr [rbp - 0x80]
0x4000d9:	cmp	rax, qword ptr [rbp - 0x78]
0x4000dd:	jb	0x4000b2
<Block for 0x400070, 36 bytes>
0x400070:	mov	rax, qword ptr [rbp - 0x88]
0x400077:	add	rax, 0x31
0x40007b:	mov	byte ptr [rax], 0
0x40007e:	lea	rax, [rbp - 0x70]
0x400082:	mov	edx, 0x63
0x400087:	mov	esi, 0x43
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x4000b2, 45 bytes>
0x4000b2:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b9:	mov	rax, qword ptr [rbp - 0x80]
0x4000bd:	add	rax, rdx
0x4000c0:	movzx	eax, byte ptr [rax]
0x4000c3:	lea	rcx, [rbp - 0x70]
0x4000c7:	mov	rdx, qword ptr [rbp - 0x80]
0x4000cb:	add	rdx, rcx
0x4000ce:	mov	byte ptr [rdx], al
0x4000d0:	add	qword ptr [rbp - 0x80], 1
0x4000d5:	mov	rax, qword ptr [rbp - 0x80]
0x4000d9:	cmp	rax, qword ptr [rbp - 0x78]
0x4000dd:	jb	0x4000b2
<Block for 0x4000df, 16 bytes>
0x4000df:	mov	byte ptr [rbp - 0xd], 0
0x4000e3:	lea	rax, [rbp - 0x70]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500020
<Block for 0x4000ef, 15 bytes>
0x4000ef:	mov	rax, qword ptr [rbp - 0x88]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500028
<Block for 0x4000fe, 16 bytes>
0x4000fe:	nop	
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	xor	rax, qword ptr fs:[0x28]
0x40010c:	je	0x400113
<Block for 0x400113, 2 bytes>
0x400113:	leave	
0x400114:	ret	
<Block for 0x40010e, 5 bytes>
0x40010e:	call	0x500030
