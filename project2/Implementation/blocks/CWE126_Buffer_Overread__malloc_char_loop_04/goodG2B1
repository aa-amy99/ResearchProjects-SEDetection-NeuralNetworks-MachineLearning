<Block for 0x400115, 50 bytes>
0x400115:	endbr64	
0x400119:	push	rbp
0x40011a:	mov	rbp, rsp
0x40011d:	sub	rsp, 0x90
0x400124:	mov	rax, qword ptr fs:[0x28]
0x40012d:	mov	qword ptr [rbp - 8], rax
0x400131:	xor	eax, eax
0x400133:	mov	qword ptr [rbp - 0x88], 0
0x40013e:	mov	eax, 0
0x400143:	test	eax, eax
0x400145:	je	0x400155
<Block for 0x400155, 10 bytes>
0x400155:	mov	edi, 0x64
0x40015a:	call	0x500000
<Block for 0x400147, 12 bytes>
0x400147:	lea	rdi, [rip + 0x226]
0x40014e:	call	0x500020
<Block for 0x40015f, 17 bytes>
0x40015f:	mov	qword ptr [rbp - 0x88], rax
0x400166:	cmp	qword ptr [rbp - 0x88], 0
0x40016e:	jne	0x40017a
<Block for 0x400153, 2 bytes>
0x400153:	jmp	0x4001a1
<Block for 0x400170, 10 bytes>
0x400170:	mov	edi, 0xffffffff
0x400175:	call	0x500008
<Block for 0x40017a, 25 bytes>
0x40017a:	mov	rax, qword ptr [rbp - 0x88]
0x400181:	mov	edx, 0x63
0x400186:	mov	esi, 0x41
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500010
<Block for 0x4001a1, 22 bytes>
0x4001a1:	lea	rax, [rbp - 0x70]
0x4001a5:	mov	edx, 0x63
0x4001aa:	mov	esi, 0x43
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500010
<Block for 0x400193, 36 bytes>
0x400193:	mov	rax, qword ptr [rbp - 0x88]
0x40019a:	add	rax, 0x63
0x40019e:	mov	byte ptr [rax], 0
0x4001a1:	lea	rax, [rbp - 0x70]
0x4001a5:	mov	edx, 0x63
0x4001aa:	mov	esi, 0x43
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500010
<Block for 0x4001b7, 16 bytes>
0x4001b7:	mov	byte ptr [rbp - 0xd], 0
0x4001bb:	lea	rax, [rbp - 0x70]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500018
<Block for 0x4001c7, 14 bytes>
0x4001c7:	mov	qword ptr [rbp - 0x78], rax
0x4001cb:	mov	qword ptr [rbp - 0x80], 0
0x4001d3:	jmp	0x4001f8
<Block for 0x4001f8, 10 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0x80]
0x4001fc:	cmp	rax, qword ptr [rbp - 0x78]
0x400200:	jb	0x4001d5
<Block for 0x4001d5, 45 bytes>
0x4001d5:	mov	rdx, qword ptr [rbp - 0x88]
0x4001dc:	mov	rax, qword ptr [rbp - 0x80]
0x4001e0:	add	rax, rdx
0x4001e3:	movzx	eax, byte ptr [rax]
0x4001e6:	lea	rcx, [rbp - 0x70]
0x4001ea:	mov	rdx, qword ptr [rbp - 0x80]
0x4001ee:	add	rdx, rcx
0x4001f1:	mov	byte ptr [rdx], al
0x4001f3:	add	qword ptr [rbp - 0x80], 1
0x4001f8:	mov	rax, qword ptr [rbp - 0x80]
0x4001fc:	cmp	rax, qword ptr [rbp - 0x78]
0x400200:	jb	0x4001d5
<Block for 0x400202, 16 bytes>
0x400202:	mov	byte ptr [rbp - 0xd], 0
0x400206:	lea	rax, [rbp - 0x70]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500020
<Block for 0x400212, 15 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x88]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500028
<Block for 0x400221, 16 bytes>
0x400221:	nop	
0x400222:	mov	rax, qword ptr [rbp - 8]
0x400226:	xor	rax, qword ptr fs:[0x28]
0x40022f:	je	0x400236
<Block for 0x400236, 2 bytes>
0x400236:	leave	
0x400237:	ret	
<Block for 0x400231, 5 bytes>
0x400231:	call	0x500030
