<Block for 0x4000c7, 73 bytes>
0x4000c7:	endbr64	
0x4000cb:	push	rbp
0x4000cc:	mov	rbp, rsp
0x4000cf:	sub	rsp, 0xa0
0x4000d6:	mov	qword ptr [rbp - 0x98], rdi
0x4000dd:	mov	rax, qword ptr fs:[0x28]
0x4000e6:	mov	qword ptr [rbp - 8], rax
0x4000ea:	xor	eax, eax
0x4000ec:	mov	rax, qword ptr [rbp - 0x98]
0x4000f3:	mov	rax, qword ptr [rax]
0x4000f6:	mov	qword ptr [rbp - 0x80], rax
0x4000fa:	lea	rax, [rbp - 0x70]
0x4000fe:	mov	edx, 0x63
0x400103:	mov	esi, 0x43
0x400108:	mov	rdi, rax
0x40010b:	call	0x500000
<Block for 0x400110, 16 bytes>
0x400110:	mov	byte ptr [rbp - 0xd], 0
0x400114:	lea	rax, [rbp - 0x70]
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x400120, 17 bytes>
0x400120:	mov	qword ptr [rbp - 0x78], rax
0x400124:	mov	qword ptr [rbp - 0x88], 0
0x40012f:	jmp	0x40015a
<Block for 0x40015a, 13 bytes>
0x40015a:	mov	rax, qword ptr [rbp - 0x88]
0x400161:	cmp	rax, qword ptr [rbp - 0x78]
0x400165:	jb	0x400131
<Block for 0x400131, 54 bytes>
0x400131:	mov	rdx, qword ptr [rbp - 0x80]
0x400135:	mov	rax, qword ptr [rbp - 0x88]
0x40013c:	add	rax, rdx
0x40013f:	movzx	eax, byte ptr [rax]
0x400142:	lea	rcx, [rbp - 0x70]
0x400146:	mov	rdx, qword ptr [rbp - 0x88]
0x40014d:	add	rdx, rcx
0x400150:	mov	byte ptr [rdx], al
0x400152:	add	qword ptr [rbp - 0x88], 1
0x40015a:	mov	rax, qword ptr [rbp - 0x88]
0x400161:	cmp	rax, qword ptr [rbp - 0x78]
0x400165:	jb	0x400131
<Block for 0x400167, 16 bytes>
0x400167:	mov	byte ptr [rbp - 0xd], 0
0x40016b:	lea	rax, [rbp - 0x70]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x400177, 16 bytes>
0x400177:	nop	
0x400178:	mov	rax, qword ptr [rbp - 8]
0x40017c:	xor	rax, qword ptr fs:[0x28]
0x400185:	je	0x40018c
<Block for 0x40018c, 2 bytes>
0x40018c:	leave	
0x40018d:	ret	
<Block for 0x400187, 5 bytes>
0x400187:	call	0x500018
