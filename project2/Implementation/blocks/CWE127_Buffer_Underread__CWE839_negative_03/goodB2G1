<Block for 0x40008c, 87 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0x40
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000ae:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000b5:	mov	qword ptr [rbp - 0x30], 0
0x4000bd:	mov	qword ptr [rbp - 0x28], 0
0x4000c5:	mov	qword ptr [rbp - 0x20], 0
0x4000cd:	mov	qword ptr [rbp - 0x18], 0
0x4000d5:	mov	qword ptr [rbp - 0x10], 0
0x4000dd:	cmp	dword ptr [rbp - 0x34], 0
0x4000e1:	js	0x4000fb
<Block for 0x4000fb, 12 bytes>
0x4000fb:	lea	rdi, [rip + 0x21e]
0x400102:	call	0x500008
<Block for 0x4000e3, 6 bytes>
0x4000e3:	cmp	dword ptr [rbp - 0x34], 9
0x4000e7:	jg	0x4000fb
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x4000e9, 16 bytes>
0x4000e9:	mov	eax, dword ptr [rbp - 0x34]
0x4000ec:	cdqe	
0x4000ee:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500000
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500010
<Block for 0x4000f9, 2 bytes>
0x4000f9:	jmp	0x400107
