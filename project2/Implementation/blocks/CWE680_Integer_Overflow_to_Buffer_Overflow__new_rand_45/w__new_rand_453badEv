<Block for 0x400088, 25 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	push	rbx
0x400091:	sub	rsp, 0x18
0x400095:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40009c:	call	0x500018
<Block for 0x4000a1, 7 bytes>
0x4000a1:	and	eax, 1
0x4000a4:	test	eax, eax
0x4000a6:	je	0x4000c5
<Block for 0x4000c5, 5 bytes>
0x4000c5:	call	0x500018
<Block for 0x4000a8, 5 bytes>
0x4000a8:	call	0x500018
<Block for 0x4000ca, 10 bytes>
0x4000ca:	shl	eax, 0x1e
0x4000cd:	mov	ebx, eax
0x4000cf:	call	0x500018
<Block for 0x4000ad, 10 bytes>
0x4000ad:	shl	eax, 0x1e
0x4000b0:	mov	ebx, eax
0x4000b2:	call	0x500018
<Block for 0x4000d4, 10 bytes>
0x4000d4:	shl	eax, 0xf
0x4000d7:	xor	ebx, eax
0x4000d9:	call	0x500018
<Block for 0x4000b7, 10 bytes>
0x4000b7:	shl	eax, 0xf
0x4000ba:	xor	ebx, eax
0x4000bc:	call	0x500018
<Block for 0x4000de, 21 bytes>
0x4000de:	xor	eax, ebx
0x4000e0:	not	eax
0x4000e2:	mov	dword ptr [rbp - 0x14], eax
0x4000e5:	mov	eax, dword ptr [rbp - 0x14]
0x4000e8:	mov	dword ptr [rip + 0xd2], eax
0x4000ee:	call	0x400000
<Block for 0x4000c1, 4 bytes>
0x4000c1:	xor	eax, ebx
0x4000c3:	jmp	0x4000e2
<Block for 0x4000f3, 8 bytes>
0x4000f3:	nop	
0x4000f4:	add	rsp, 0x18
0x4000f8:	pop	rbx
0x4000f9:	pop	rbp
0x4000fa:	ret	
<Block for 0x4000e2, 17 bytes>
0x4000e2:	mov	dword ptr [rbp - 0x14], eax
0x4000e5:	mov	eax, dword ptr [rbp - 0x14]
0x4000e8:	mov	dword ptr [rip + 0xd2], eax
0x4000ee:	call	0x400000
