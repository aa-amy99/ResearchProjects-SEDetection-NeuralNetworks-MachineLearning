<Block for 0x400000, 49 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0xfffd8]
0x400028:	cmp	eax, 5
0x40002b:	jne	0x400103
<Block for 0x400031, 27 bytes>
0x400031:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400038:	mov	edx, 6
0x40003d:	mov	esi, 1
0x400042:	mov	edi, 2
0x400047:	call	0x500008
<Block for 0x400103, 17 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x4c]
0x400106:	cdqe	
0x400108:	shl	rax, 2
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500048
<Block for 0x40004c, 13 bytes>
0x40004c:	mov	dword ptr [rbp - 0x48], eax
0x40004f:	cmp	dword ptr [rbp - 0x48], -1
0x400053:	je	0x4000ef
<Block for 0x400114, 11 bytes>
0x400114:	mov	qword ptr [rbp - 0x38], rax
0x400118:	cmp	qword ptr [rbp - 0x38], 0
0x40011d:	jne	0x400129
<Block for 0x4000ef, 3 bytes>
0x4000ef:	nop	
0x4000f0:	jmp	0x4000f3
<Block for 0x400059, 22 bytes>
0x400059:	lea	rax, [rbp - 0x30]
0x40005d:	mov	edx, 0x10
0x400062:	mov	esi, 0
0x400067:	mov	rdi, rax
0x40006a:	call	0x500010
<Block for 0x40011f, 10 bytes>
0x40011f:	mov	edi, 0xffffffff
0x400124:	call	0x500050
<Block for 0x400129, 10 bytes>
0x400129:	mov	qword ptr [rbp - 0x40], 0
0x400131:	jmp	0x400151
<Block for 0x4000f3, 6 bytes>
0x4000f3:	cmp	dword ptr [rbp - 0x48], -1
0x4000f7:	je	0x400103
<Block for 0x40006f, 18 bytes>
0x40006f:	mov	word ptr [rbp - 0x30], 2
0x400075:	lea	rdi, [rip + 0x271]
0x40007c:	call	0x500018
<Block for 0x400151, 11 bytes>
0x400151:	mov	eax, dword ptr [rbp - 0x4c]
0x400154:	cdqe	
0x400156:	cmp	qword ptr [rbp - 0x40], rax
0x40015a:	jb	0x400133
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	eax, dword ptr [rbp - 0x48]
0x4000fc:	mov	edi, eax
0x4000fe:	call	0x500040
<Block for 0x400081, 13 bytes>
0x400081:	mov	dword ptr [rbp - 0x2c], eax
0x400084:	mov	edi, 0x6987
0x400089:	call	0x500020
<Block for 0x400133, 41 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x40]
0x400137:	lea	rdx, [rax*4]
0x40013f:	mov	rax, qword ptr [rbp - 0x38]
0x400143:	add	rax, rdx
0x400146:	mov	dword ptr [rax], 0
0x40014c:	add	qword ptr [rbp - 0x40], 1
0x400151:	mov	eax, dword ptr [rbp - 0x4c]
0x400154:	cdqe	
0x400156:	cmp	qword ptr [rbp - 0x40], rax
0x40015a:	jb	0x400133
<Block for 0x40015c, 13 bytes>
0x40015c:	mov	rax, qword ptr [rbp - 0x38]
0x400160:	mov	eax, dword ptr [rax]
0x400162:	mov	edi, eax
0x400164:	call	0x500058
<Block for 0x40008e, 26 bytes>
0x40008e:	mov	word ptr [rbp - 0x2e], ax
0x400092:	lea	rcx, [rbp - 0x30]
0x400096:	mov	eax, dword ptr [rbp - 0x48]
0x400099:	mov	edx, 0x10
0x40009e:	mov	rsi, rcx
0x4000a1:	mov	edi, eax
0x4000a3:	call	0x500028
<Block for 0x400169, 12 bytes>
0x400169:	mov	rax, qword ptr [rbp - 0x38]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500060
<Block for 0x4000a8, 5 bytes>
0x4000a8:	cmp	eax, -1
0x4000ab:	je	0x4000f2
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x4000ad, 24 bytes>
0x4000ad:	lea	rsi, [rbp - 0x16]
0x4000b1:	mov	eax, dword ptr [rbp - 0x48]
0x4000b4:	mov	ecx, 0
0x4000b9:	mov	edx, 0xd
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500030
<Block for 0x4000f2, 1 bytes>
0x4000f2:	nop	
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500068
<Block for 0x4000c5, 9 bytes>
0x4000c5:	mov	dword ptr [rbp - 0x44], eax
0x4000c8:	cmp	dword ptr [rbp - 0x44], -1
0x4000cc:	je	0x4000f3
<Block for 0x4000ce, 6 bytes>
0x4000ce:	cmp	dword ptr [rbp - 0x44], 0
0x4000d2:	je	0x4000f3
<Block for 0x4000d4, 22 bytes>
0x4000d4:	mov	eax, dword ptr [rbp - 0x44]
0x4000d7:	cdqe	
0x4000d9:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000de:	lea	rax, [rbp - 0x16]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500038
<Block for 0x4000ea, 5 bytes>
0x4000ea:	mov	dword ptr [rbp - 0x4c], eax
0x4000ed:	jmp	0x4000f3
