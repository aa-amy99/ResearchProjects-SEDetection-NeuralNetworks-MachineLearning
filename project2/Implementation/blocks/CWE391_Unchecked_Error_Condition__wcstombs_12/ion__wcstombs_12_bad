<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x40006a
<Block for 0x40006a, 17 bytes>
0x40006a:	mov	qword ptr [rbp - 0x80], 0
0x400072:	mov	byte ptr [rbp - 0x70], 0
0x400076:	call	0x500020
<Block for 0x400029, 36 bytes>
0x400029:	mov	qword ptr [rbp - 0x78], 0
0x400031:	mov	byte ptr [rbp - 0x70], 0
0x400035:	lea	rax, [rbp - 0x70]
0x400039:	mov	edx, 0x64
0x40003e:	lea	rsi, [rip + 0x1d7]
0x400045:	mov	rdi, rax
0x400048:	call	0x500008
<Block for 0x40007b, 30 bytes>
0x40007b:	mov	dword ptr [rax], 0
0x400081:	lea	rax, [rbp - 0x70]
0x400085:	mov	edx, 0x64
0x40008a:	lea	rsi, [rip + 0x18b]
0x400091:	mov	rdi, rax
0x400094:	call	0x500008
<Block for 0x40004d, 15 bytes>
0x40004d:	mov	qword ptr [rbp - 0x78], rax
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	mov	edi, eax
0x400057:	call	0x500010
<Block for 0x400099, 9 bytes>
0x400099:	mov	qword ptr [rbp - 0x80], rax
0x40009d:	call	0x500020
<Block for 0x40005c, 12 bytes>
0x40005c:	lea	rax, [rbp - 0x70]
0x400060:	mov	rdi, rax
0x400063:	call	0x500018
<Block for 0x4000a2, 7 bytes>
0x4000a2:	mov	eax, dword ptr [rax]
0x4000a4:	cmp	eax, 0x54
0x4000a7:	jne	0x4000bf
<Block for 0x400068, 2 bytes>
0x400068:	jmp	0x4000d6
<Block for 0x4000a9, 12 bytes>
0x4000a9:	lea	rdi, [rip + 0x174]
0x4000b0:	call	0x500018
<Block for 0x4000bf, 11 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 0x80]
0x4000c3:	mov	edi, eax
0x4000c5:	call	0x500010
<Block for 0x4000d6, 16 bytes>
0x4000d6:	nop	
0x4000d7:	mov	rax, qword ptr [rbp - 8]
0x4000db:	xor	rax, qword ptr fs:[0x28]
0x4000e4:	je	0x4000eb
<Block for 0x4000b5, 10 bytes>
0x4000b5:	mov	edi, 1
0x4000ba:	call	0x500028
<Block for 0x4000ca, 12 bytes>
0x4000ca:	lea	rax, [rbp - 0x70]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500018
<Block for 0x4000eb, 2 bytes>
0x4000eb:	leave	
0x4000ec:	ret	
<Block for 0x4000e6, 5 bytes>
0x4000e6:	call	0x500030
