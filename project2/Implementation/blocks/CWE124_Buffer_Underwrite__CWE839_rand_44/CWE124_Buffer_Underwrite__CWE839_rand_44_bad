<Block for 0x4000a1, 36 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	push	rbx
0x4000aa:	sub	rsp, 0x18
0x4000ae:	lea	rax, [rip - 0xb5]
0x4000b5:	mov	qword ptr [rbp - 0x18], rax
0x4000b9:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000c0:	call	0x500018
<Block for 0x4000c5, 7 bytes>
0x4000c5:	and	eax, 1
0x4000c8:	test	eax, eax
0x4000ca:	je	0x4000e9
<Block for 0x4000e9, 5 bytes>
0x4000e9:	call	0x500018
<Block for 0x4000cc, 5 bytes>
0x4000cc:	call	0x500018
<Block for 0x4000ee, 10 bytes>
0x4000ee:	shl	eax, 0x1e
0x4000f1:	mov	ebx, eax
0x4000f3:	call	0x500018
<Block for 0x4000d1, 10 bytes>
0x4000d1:	shl	eax, 0x1e
0x4000d4:	mov	ebx, eax
0x4000d6:	call	0x500018
<Block for 0x4000f8, 10 bytes>
0x4000f8:	shl	eax, 0xf
0x4000fb:	xor	ebx, eax
0x4000fd:	call	0x500018
<Block for 0x4000db, 10 bytes>
0x4000db:	shl	eax, 0xf
0x4000de:	xor	ebx, eax
0x4000e0:	call	0x500018
<Block for 0x400102, 18 bytes>
0x400102:	xor	eax, ebx
0x400104:	not	eax
0x400106:	mov	dword ptr [rbp - 0x1c], eax
0x400109:	mov	eax, dword ptr [rbp - 0x1c]
0x40010c:	mov	rdx, qword ptr [rbp - 0x18]
0x400110:	mov	edi, eax
0x400112:	call	rdx
<Block for 0x4000e5, 4 bytes>
0x4000e5:	xor	eax, ebx
0x4000e7:	jmp	0x400106
<Block for 0x400114, 8 bytes>
0x400114:	nop	
0x400115:	add	rsp, 0x18
0x400119:	pop	rbx
0x40011a:	pop	rbp
0x40011b:	ret	
<Block for 0x400106, 14 bytes>
0x400106:	mov	dword ptr [rbp - 0x1c], eax
0x400109:	mov	eax, dword ptr [rbp - 0x1c]
0x40010c:	mov	rdx, qword ptr [rbp - 0x18]
0x400110:	mov	edi, eax
0x400112:	call	rdx
