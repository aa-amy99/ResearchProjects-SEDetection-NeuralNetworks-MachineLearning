<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000d6
<Block for 0x4000d6, 54 bytes>
0x4000d6:	mov	eax, 0x10
0x4000db:	sub	rax, 1
0x4000df:	add	rax, 0x10
0x4000e3:	mov	esi, 0x10
0x4000e8:	mov	edx, 0
0x4000ed:	div	rsi
0x4000f0:	imul	rax, rax, 0x10
0x4000f4:	mov	rdx, rax
0x4000f7:	and	rdx, 0xfffffffffffff000
0x4000fe:	mov	rsi, rsp
0x400101:	sub	rsi, rdx
0x400104:	mov	rdx, rsi
0x400107:	cmp	rsp, rdx
0x40010a:	je	0x40011e
<Block for 0x40002d, 54 bytes>
0x40002d:	mov	eax, 0x10
0x400032:	sub	rax, 1
0x400036:	add	rax, 0x10
0x40003a:	mov	ecx, 0x10
0x40003f:	mov	edx, 0
0x400044:	div	rcx
0x400047:	imul	rax, rax, 0x10
0x40004b:	mov	rdx, rax
0x40004e:	and	rdx, 0xfffffffffffff000
0x400055:	mov	rcx, rsp
0x400058:	sub	rcx, rdx
0x40005b:	mov	rdx, rcx
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x40011e, 26 bytes>
0x40011e:	mov	rdx, rax
0x400121:	and	edx, 0xfff
0x400127:	sub	rsp, rdx
0x40012a:	mov	rdx, rax
0x40012d:	and	edx, 0xfff
0x400133:	test	rdx, rdx
0x400136:	je	0x400148
<Block for 0x40010c, 18 bytes>
0x40010c:	sub	rsp, 0x1000
0x400113:	or	qword ptr [rsp + 0xff8], 0
0x40011c:	jmp	0x400107
<Block for 0x400075, 26 bytes>
0x400075:	mov	rdx, rax
0x400078:	and	edx, 0xfff
0x40007e:	sub	rsp, rdx
0x400081:	mov	rdx, rax
0x400084:	and	edx, 0xfff
0x40008a:	test	rdx, rdx
0x40008d:	je	0x40009f
<Block for 0x400063, 18 bytes>
0x400063:	sub	rsp, 0x1000
0x40006a:	or	qword ptr [rsp + 0xff8], 0
0x400073:	jmp	0x40005e
<Block for 0x400148, 65 bytes>
0x400148:	mov	rax, rsp
0x40014b:	add	rax, 0xf
0x40014f:	shr	rax, 4
0x400153:	shl	rax, 4
0x400157:	mov	qword ptr [rbp - 0x28], rax
0x40015b:	mov	dword ptr [rbp - 0x18], 1
0x400162:	mov	dword ptr [rbp - 0x14], 2
0x400169:	mov	rax, qword ptr [rbp - 0x28]
0x40016d:	mov	rdx, qword ptr [rbp - 0x18]
0x400171:	mov	qword ptr [rax], rdx
0x400174:	mov	rax, qword ptr [rbp - 0x28]
0x400178:	mov	rax, qword ptr [rax]
0x40017b:	mov	qword ptr [rbp - 0x10], rax
0x40017f:	mov	eax, dword ptr [rbp - 0x10]
0x400182:	mov	edi, eax
0x400184:	call	0x500008
<Block for 0x400138, 81 bytes>
0x400138:	and	eax, 0xfff
0x40013d:	sub	rax, 8
0x400141:	add	rax, rsp
0x400144:	or	qword ptr [rax], 0
0x400148:	mov	rax, rsp
0x40014b:	add	rax, 0xf
0x40014f:	shr	rax, 4
0x400153:	shl	rax, 4
0x400157:	mov	qword ptr [rbp - 0x28], rax
0x40015b:	mov	dword ptr [rbp - 0x18], 1
0x400162:	mov	dword ptr [rbp - 0x14], 2
0x400169:	mov	rax, qword ptr [rbp - 0x28]
0x40016d:	mov	rdx, qword ptr [rbp - 0x18]
0x400171:	mov	qword ptr [rax], rdx
0x400174:	mov	rax, qword ptr [rbp - 0x28]
0x400178:	mov	rax, qword ptr [rax]
0x40017b:	mov	qword ptr [rbp - 0x10], rax
0x40017f:	mov	eax, dword ptr [rbp - 0x10]
0x400182:	mov	edi, eax
0x400184:	call	0x500008
<Block for 0x400107, 5 bytes>
0x400107:	cmp	rsp, rdx
0x40010a:	je	0x40011e
<Block for 0x40009f, 40 bytes>
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x20], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x20]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	eax, dword ptr [rbp - 0x10]
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500008
<Block for 0x40008f, 56 bytes>
0x40008f:	and	eax, 0xfff
0x400094:	sub	rax, 8
0x400098:	add	rax, rsp
0x40009b:	or	qword ptr [rax], 0
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x20], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x20]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	eax, dword ptr [rbp - 0x10]
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500008
<Block for 0x40005e, 5 bytes>
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400189, 10 bytes>
0x400189:	mov	eax, dword ptr [rbp - 0xc]
0x40018c:	mov	edi, eax
0x40018e:	call	0x500008
<Block for 0x4000c7, 10 bytes>
0x4000c7:	mov	eax, dword ptr [rbp - 0xc]
0x4000ca:	mov	edi, eax
0x4000cc:	call	0x500008
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4000d1, 5 bytes>
0x4000d1:	jmp	0x400193
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500010
