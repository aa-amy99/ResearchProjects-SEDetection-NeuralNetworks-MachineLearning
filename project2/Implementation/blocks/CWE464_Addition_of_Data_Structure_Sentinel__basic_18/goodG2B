<Block for 0x40007f, 71 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	sub	rsp, 0x10
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	mov	byte ptr [rbp - 0xd], 0x20
0x40009e:	nop	
0x40009f:	endbr64	
0x4000a3:	mov	byte ptr [rbp - 0xd], 0x61
0x4000a7:	mov	byte ptr [rbp - 0xc], 0x78
0x4000ab:	movzx	eax, byte ptr [rbp - 0xd]
0x4000af:	mov	byte ptr [rbp - 0xb], al
0x4000b2:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000b6:	mov	byte ptr [rbp - 9], 0
0x4000ba:	lea	rax, [rbp - 0xc]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x4000c6, 16 bytes>
0x4000c6:	nop	
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	xor	rax, qword ptr fs:[0x28]
0x4000d4:	je	0x4000db
<Block for 0x4000db, 2 bytes>
0x4000db:	leave	
0x4000dc:	ret	
<Block for 0x4000d6, 5 bytes>
0x4000d6:	call	0x500020
