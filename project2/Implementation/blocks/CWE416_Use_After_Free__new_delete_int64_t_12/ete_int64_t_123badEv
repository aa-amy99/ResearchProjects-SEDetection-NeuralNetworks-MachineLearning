<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	call	0x500000
<Block for 0x400019, 9 bytes>
0x400019:	test	eax, eax
0x40001b:	setne	al
0x40001e:	test	al, al
0x400020:	je	0x400053
<Block for 0x400053, 10 bytes>
0x400053:	mov	edi, 8
0x400058:	call	0x500008
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 8
0x400027:	call	0x500008
<Block for 0x40005d, 20 bytes>
0x40005d:	mov	qword ptr [rbp - 8], rax
0x400061:	mov	rax, qword ptr [rbp - 8]
0x400065:	mov	qword ptr [rax], 5
0x40006c:	call	0x500000
<Block for 0x40002c, 24 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	mov	rax, qword ptr [rbp - 8]
0x400034:	mov	qword ptr [rax], 5
0x40003b:	mov	rax, qword ptr [rbp - 8]
0x40003f:	test	rax, rax
0x400042:	je	0x40006c
<Block for 0x400071, 9 bytes>
0x400071:	test	eax, eax
0x400073:	setne	al
0x400076:	test	al, al
0x400078:	je	0x400089
<Block for 0x40006c, 5 bytes>
0x40006c:	call	0x500000
<Block for 0x400044, 13 bytes>
0x400044:	mov	esi, 8
0x400049:	mov	rdi, rax
0x40004c:	call	0x500010
<Block for 0x400089, 3 bytes>
0x400089:	nop	
0x40008a:	leave	
0x40008b:	ret	
<Block for 0x40007a, 15 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	mov	rax, qword ptr [rax]
0x400081:	mov	rdi, rax
0x400084:	call	0x500018
<Block for 0x400051, 2 bytes>
0x400051:	jmp	0x40006c
