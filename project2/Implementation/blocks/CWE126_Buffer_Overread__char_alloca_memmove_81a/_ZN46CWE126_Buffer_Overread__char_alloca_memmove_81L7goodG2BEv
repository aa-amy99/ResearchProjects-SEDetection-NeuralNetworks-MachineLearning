<Block for 0x4001b3, 81 bytes>
0x4001b3:	endbr64	
0x4001b7:	push	rbp
0x4001b8:	mov	rbp, rsp
0x4001bb:	sub	rsp, 0x30
0x4001bf:	mov	rax, qword ptr fs:[0x28]
0x4001c8:	mov	qword ptr [rbp - 8], rax
0x4001cc:	xor	eax, eax
0x4001ce:	mov	eax, 0x10
0x4001d3:	sub	rax, 1
0x4001d7:	add	rax, 0x3a
0x4001db:	mov	edi, 0x10
0x4001e0:	mov	edx, 0
0x4001e5:	div	rdi
0x4001e8:	imul	rax, rax, 0x10
0x4001ec:	mov	rdx, rax
0x4001ef:	and	rdx, 0xfffffffffffff000
0x4001f6:	mov	rcx, rsp
0x4001f9:	sub	rcx, rdx
0x4001fc:	mov	rdx, rcx
0x4001ff:	cmp	rsp, rdx
0x400202:	je	0x400216
<Block for 0x400216, 26 bytes>
0x400216:	mov	rdx, rax
0x400219:	and	edx, 0xfff
0x40021f:	sub	rsp, rdx
0x400222:	mov	rdx, rax
0x400225:	and	edx, 0xfff
0x40022b:	test	rdx, rdx
0x40022e:	je	0x400240
<Block for 0x400204, 18 bytes>
0x400204:	sub	rsp, 0x1000
0x40020b:	or	qword ptr [rsp + 0xff8], 0
0x400214:	jmp	0x4001ff
<Block for 0x400240, 73 bytes>
0x400240:	mov	rax, rsp
0x400243:	add	rax, 0xf
0x400247:	shr	rax, 4
0x40024b:	shl	rax, 4
0x40024f:	mov	qword ptr [rbp - 0x28], rax
0x400253:	mov	eax, 0x10
0x400258:	sub	rax, 1
0x40025c:	add	rax, 0x6c
0x400260:	mov	ecx, 0x10
0x400265:	mov	edx, 0
0x40026a:	div	rcx
0x40026d:	imul	rax, rax, 0x10
0x400271:	mov	rdx, rax
0x400274:	and	rdx, 0xfffffffffffff000
0x40027b:	mov	rsi, rsp
0x40027e:	sub	rsi, rdx
0x400281:	mov	rdx, rsi
0x400284:	cmp	rsp, rdx
0x400287:	je	0x40029b
<Block for 0x400230, 89 bytes>
0x400230:	and	eax, 0xfff
0x400235:	sub	rax, 8
0x400239:	add	rax, rsp
0x40023c:	or	qword ptr [rax], 0
0x400240:	mov	rax, rsp
0x400243:	add	rax, 0xf
0x400247:	shr	rax, 4
0x40024b:	shl	rax, 4
0x40024f:	mov	qword ptr [rbp - 0x28], rax
0x400253:	mov	eax, 0x10
0x400258:	sub	rax, 1
0x40025c:	add	rax, 0x6c
0x400260:	mov	ecx, 0x10
0x400265:	mov	edx, 0
0x40026a:	div	rcx
0x40026d:	imul	rax, rax, 0x10
0x400271:	mov	rdx, rax
0x400274:	and	rdx, 0xfffffffffffff000
0x40027b:	mov	rsi, rsp
0x40027e:	sub	rsi, rdx
0x400281:	mov	rdx, rsi
0x400284:	cmp	rsp, rdx
0x400287:	je	0x40029b
<Block for 0x4001ff, 5 bytes>
0x4001ff:	cmp	rsp, rdx
0x400202:	je	0x400216
<Block for 0x40029b, 26 bytes>
0x40029b:	mov	rdx, rax
0x40029e:	and	edx, 0xfff
0x4002a4:	sub	rsp, rdx
0x4002a7:	mov	rdx, rax
0x4002aa:	and	edx, 0xfff
0x4002b0:	test	rdx, rdx
0x4002b3:	je	0x4002c5
<Block for 0x400289, 18 bytes>
0x400289:	sub	rsp, 0x1000
0x400290:	or	qword ptr [rsp + 0xff8], 0
0x400299:	jmp	0x400284
<Block for 0x4002c5, 41 bytes>
0x4002c5:	mov	rax, rsp
0x4002c8:	add	rax, 0xf
0x4002cc:	shr	rax, 4
0x4002d0:	shl	rax, 4
0x4002d4:	mov	qword ptr [rbp - 0x20], rax
0x4002d8:	mov	rax, qword ptr [rbp - 0x28]
0x4002dc:	mov	edx, 0x31
0x4002e1:	mov	esi, 0x41
0x4002e6:	mov	rdi, rax
0x4002e9:	call	0x500000
<Block for 0x4002b5, 57 bytes>
0x4002b5:	and	eax, 0xfff
0x4002ba:	sub	rax, 8
0x4002be:	add	rax, rsp
0x4002c1:	or	qword ptr [rax], 0
0x4002c5:	mov	rax, rsp
0x4002c8:	add	rax, 0xf
0x4002cc:	shr	rax, 4
0x4002d0:	shl	rax, 4
0x4002d4:	mov	qword ptr [rbp - 0x20], rax
0x4002d8:	mov	rax, qword ptr [rbp - 0x28]
0x4002dc:	mov	edx, 0x31
0x4002e1:	mov	esi, 0x41
0x4002e6:	mov	rdi, rax
0x4002e9:	call	0x500000
<Block for 0x400284, 5 bytes>
0x400284:	cmp	rsp, rdx
0x400287:	je	0x40029b
<Block for 0x4002ee, 33 bytes>
0x4002ee:	mov	rax, qword ptr [rbp - 0x28]
0x4002f2:	add	rax, 0x31
0x4002f6:	mov	byte ptr [rax], 0
0x4002f9:	mov	rax, qword ptr [rbp - 0x20]
0x4002fd:	mov	edx, 0x63
0x400302:	mov	esi, 0x41
0x400307:	mov	rdi, rax
0x40030a:	call	0x500000
<Block for 0x40030f, 64 bytes>
0x40030f:	mov	rax, qword ptr [rbp - 0x20]
0x400313:	add	rax, 0x63
0x400317:	mov	byte ptr [rax], 0
0x40031a:	mov	rax, qword ptr [rbp - 0x20]
0x40031e:	mov	qword ptr [rbp - 0x18], rax
0x400322:	lea	rax, [rip + 0xffcff]
0x400329:	mov	qword ptr [rbp - 0x30], rax
0x40032d:	lea	rax, [rbp - 0x30]
0x400331:	mov	qword ptr [rbp - 0x10], rax
0x400335:	mov	rax, qword ptr [rbp - 0x10]
0x400339:	mov	rax, qword ptr [rax]
0x40033c:	mov	rcx, qword ptr [rax]
0x40033f:	mov	rdx, qword ptr [rbp - 0x18]
0x400343:	mov	rax, qword ptr [rbp - 0x10]
0x400347:	mov	rsi, rdx
0x40034a:	mov	rdi, rax
0x40034d:	call	rcx
<Block for 0x40034f, 16 bytes>
0x40034f:	nop	
0x400350:	mov	rax, qword ptr [rbp - 8]
0x400354:	xor	rax, qword ptr fs:[0x28]
0x40035d:	je	0x400364
<Block for 0x400364, 2 bytes>
0x400364:	leave	
0x400365:	ret	
<Block for 0x40035f, 5 bytes>
0x40035f:	call	0x500010
