<Block for 0x400462, 37 bytes>
0x400462:	endbr64	
0x400466:	push	rbp
0x400467:	mov	rbp, rsp
0x40046a:	sub	rsp, 0x50
0x40046e:	mov	rax, qword ptr fs:[0x28]
0x400477:	mov	qword ptr [rbp - 8], rax
0x40047b:	xor	eax, eax
0x40047d:	mov	edi, 0x64
0x400482:	call	0x500000
<Block for 0x400487, 11 bytes>
0x400487:	mov	qword ptr [rbp - 0x38], rax
0x40048b:	cmp	qword ptr [rbp - 0x38], 0
0x400490:	jne	0x40049c
<Block for 0x400492, 10 bytes>
0x400492:	mov	edi, 0xffffffff
0x400497:	call	0x500008
<Block for 0x40049c, 33 bytes>
0x40049c:	mov	rax, qword ptr [rbp - 0x38]
0x4004a0:	mov	byte ptr [rax], 0
0x4004a3:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4004aa:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4004b1:	mov	rax, qword ptr [rbp - 0x38]
0x4004b5:	mov	rdi, rax
0x4004b8:	call	0x500010
<Block for 0x4004bd, 24 bytes>
0x4004bd:	mov	qword ptr [rbp - 0x30], rax
0x4004c1:	mov	edx, 6
0x4004c6:	mov	esi, 1
0x4004cb:	mov	edi, 2
0x4004d0:	call	0x500018
<Block for 0x4004d5, 13 bytes>
0x4004d5:	mov	dword ptr [rbp - 0x48], eax
0x4004d8:	cmp	dword ptr [rbp - 0x48], -1
0x4004dc:	je	0x400600
<Block for 0x400600, 3 bytes>
0x400600:	nop	
0x400601:	jmp	0x40060a
<Block for 0x4004e2, 22 bytes>
0x4004e2:	lea	rax, [rbp - 0x20]
0x4004e6:	mov	edx, 0x10
0x4004eb:	mov	esi, 0
0x4004f0:	mov	rdi, rax
0x4004f3:	call	0x500020
<Block for 0x40060a, 6 bytes>
0x40060a:	cmp	dword ptr [rbp - 0x48], -1
0x40060e:	je	0x40061a
<Block for 0x4004f8, 23 bytes>
0x4004f8:	mov	word ptr [rbp - 0x20], 2
0x4004fe:	mov	dword ptr [rbp - 0x1c], 0
0x400505:	mov	edi, 0x6987
0x40050a:	call	0x500028
<Block for 0x40061a, 6 bytes>
0x40061a:	cmp	dword ptr [rbp - 0x4c], -1
0x40061e:	je	0x40062a
<Block for 0x400610, 10 bytes>
0x400610:	mov	eax, dword ptr [rbp - 0x48]
0x400613:	mov	edi, eax
0x400615:	call	0x500058
<Block for 0x40050f, 26 bytes>
0x40050f:	mov	word ptr [rbp - 0x1e], ax
0x400513:	lea	rcx, [rbp - 0x20]
0x400517:	mov	eax, dword ptr [rbp - 0x48]
0x40051a:	mov	edx, 0x10
0x40051f:	mov	rsi, rcx
0x400522:	mov	edi, eax
0x400524:	call	0x500030
<Block for 0x40062a, 9 bytes>
0x40062a:	mov	eax, 1
0x40062f:	test	eax, eax
0x400631:	je	0x400680
<Block for 0x400620, 10 bytes>
0x400620:	mov	eax, dword ptr [rbp - 0x4c]
0x400623:	mov	edi, eax
0x400625:	call	0x500058
<Block for 0x400529, 9 bytes>
0x400529:	cmp	eax, -1
0x40052c:	je	0x400603
<Block for 0x400680, 16 bytes>
0x400680:	nop	
0x400681:	mov	rax, qword ptr [rbp - 8]
0x400685:	xor	rax, qword ptr fs:[0x28]
0x40068e:	je	0x400695
<Block for 0x400633, 10 bytes>
0x400633:	mov	qword ptr [rbp - 0x40], 0
0x40063b:	jmp	0x400662
<Block for 0x400603, 3 bytes>
0x400603:	nop	
0x400604:	jmp	0x40060a
<Block for 0x400532, 15 bytes>
0x400532:	mov	eax, dword ptr [rbp - 0x48]
0x400535:	mov	esi, 5
0x40053a:	mov	edi, eax
0x40053c:	call	0x500038
<Block for 0x400695, 2 bytes>
0x400695:	leave	
0x400696:	ret	
<Block for 0x400690, 5 bytes>
0x400690:	call	0x500070
<Block for 0x400662, 12 bytes>
0x400662:	mov	rax, qword ptr [rbp - 0x38]
0x400666:	mov	rdi, rax
0x400669:	call	0x500010
<Block for 0x400541, 9 bytes>
0x400541:	cmp	eax, -1
0x400544:	je	0x400606
<Block for 0x40066e, 6 bytes>
0x40066e:	cmp	qword ptr [rbp - 0x40], rax
0x400672:	jb	0x40063d
<Block for 0x400606, 3 bytes>
0x400606:	nop	
0x400607:	jmp	0x40060a
<Block for 0x40054a, 20 bytes>
0x40054a:	mov	eax, dword ptr [rbp - 0x48]
0x40054d:	mov	edx, 0
0x400552:	mov	esi, 0
0x400557:	mov	edi, eax
0x400559:	call	0x500040
<Block for 0x40063d, 18 bytes>
0x40063d:	mov	rdx, qword ptr [rbp - 0x38]
0x400641:	mov	rax, qword ptr [rbp - 0x40]
0x400645:	add	rax, rdx
0x400648:	movzx	eax, byte ptr [rax]
0x40064b:	cmp	al, 0x53
0x40064d:	jne	0x40065d
<Block for 0x400674, 12 bytes>
0x400674:	mov	rax, qword ptr [rbp - 0x38]
0x400678:	mov	rdi, rax
0x40067b:	call	0x500068
<Block for 0x40055e, 13 bytes>
0x40055e:	mov	dword ptr [rbp - 0x4c], eax
0x400561:	cmp	dword ptr [rbp - 0x4c], -1
0x400565:	je	0x400609
<Block for 0x40064f, 12 bytes>
0x40064f:	lea	rdi, [rip + 0x6a]
0x400656:	call	0x500060
<Block for 0x40065d, 17 bytes>
0x40065d:	add	qword ptr [rbp - 0x40], 1
0x400662:	mov	rax, qword ptr [rbp - 0x38]
0x400666:	mov	rdi, rax
0x400669:	call	0x500010
<Block for 0x40056b, 39 bytes>
0x40056b:	mov	eax, 0x63
0x400570:	sub	rax, qword ptr [rbp - 0x30]
0x400574:	mov	rdx, rax
0x400577:	mov	rcx, qword ptr [rbp - 0x38]
0x40057b:	mov	rax, qword ptr [rbp - 0x30]
0x40057f:	lea	rsi, [rcx + rax]
0x400583:	mov	eax, dword ptr [rbp - 0x4c]
0x400586:	mov	ecx, 0
0x40058b:	mov	edi, eax
0x40058d:	call	0x500048
<Block for 0x400609, 1 bytes>
0x400609:	nop	
<Block for 0x40065b, 2 bytes>
0x40065b:	jmp	0x400674
<Block for 0x400592, 9 bytes>
0x400592:	mov	dword ptr [rbp - 0x44], eax
0x400595:	cmp	dword ptr [rbp - 0x44], -1
0x400599:	je	0x40060a
<Block for 0x40059b, 6 bytes>
0x40059b:	cmp	dword ptr [rbp - 0x44], 0
0x40059f:	je	0x40060a
<Block for 0x4005a1, 40 bytes>
0x4005a1:	mov	eax, dword ptr [rbp - 0x44]
0x4005a4:	movsxd	rdx, eax
0x4005a7:	mov	rax, qword ptr [rbp - 0x30]
0x4005ab:	add	rdx, rax
0x4005ae:	mov	rax, qword ptr [rbp - 0x38]
0x4005b2:	add	rax, rdx
0x4005b5:	mov	byte ptr [rax], 0
0x4005b8:	mov	rax, qword ptr [rbp - 0x38]
0x4005bc:	mov	esi, 0xd
0x4005c1:	mov	rdi, rax
0x4005c4:	call	0x500050
<Block for 0x4005c9, 11 bytes>
0x4005c9:	mov	qword ptr [rbp - 0x28], rax
0x4005cd:	cmp	qword ptr [rbp - 0x28], 0
0x4005d2:	je	0x4005db
<Block for 0x4005db, 17 bytes>
0x4005db:	mov	rax, qword ptr [rbp - 0x38]
0x4005df:	mov	esi, 0xa
0x4005e4:	mov	rdi, rax
0x4005e7:	call	0x500050
<Block for 0x4005d4, 24 bytes>
0x4005d4:	mov	rax, qword ptr [rbp - 0x28]
0x4005d8:	mov	byte ptr [rax], 0
0x4005db:	mov	rax, qword ptr [rbp - 0x38]
0x4005df:	mov	esi, 0xa
0x4005e4:	mov	rdi, rax
0x4005e7:	call	0x500050
<Block for 0x4005ec, 11 bytes>
0x4005ec:	mov	qword ptr [rbp - 0x28], rax
0x4005f0:	cmp	qword ptr [rbp - 0x28], 0
0x4005f5:	je	0x40060a
<Block for 0x4005f7, 9 bytes>
0x4005f7:	mov	rax, qword ptr [rbp - 0x28]
0x4005fb:	mov	byte ptr [rax], 0
0x4005fe:	jmp	0x40060a
