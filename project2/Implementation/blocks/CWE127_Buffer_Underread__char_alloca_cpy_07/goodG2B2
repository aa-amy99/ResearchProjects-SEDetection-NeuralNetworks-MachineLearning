<Block for 0x400296, 84 bytes>
0x400296:	endbr64	
0x40029a:	push	rbp
0x40029b:	mov	rbp, rsp
0x40029e:	sub	rsp, 0xe0
0x4002a5:	mov	rax, qword ptr fs:[0x28]
0x4002ae:	mov	qword ptr [rbp - 8], rax
0x4002b2:	xor	eax, eax
0x4002b4:	mov	eax, 0x10
0x4002b9:	sub	rax, 1
0x4002bd:	add	rax, 0x6c
0x4002c1:	mov	ecx, 0x10
0x4002c6:	mov	edx, 0
0x4002cb:	div	rcx
0x4002ce:	imul	rax, rax, 0x10
0x4002d2:	mov	rdx, rax
0x4002d5:	and	rdx, 0xfffffffffffff000
0x4002dc:	mov	rcx, rsp
0x4002df:	sub	rcx, rdx
0x4002e2:	mov	rdx, rcx
0x4002e5:	cmp	rsp, rdx
0x4002e8:	je	0x4002fc
<Block for 0x4002fc, 26 bytes>
0x4002fc:	mov	rdx, rax
0x4002ff:	and	edx, 0xfff
0x400305:	sub	rsp, rdx
0x400308:	mov	rdx, rax
0x40030b:	and	edx, 0xfff
0x400311:	test	rdx, rdx
0x400314:	je	0x400326
<Block for 0x4002ea, 18 bytes>
0x4002ea:	sub	rsp, 0x1000
0x4002f1:	or	qword ptr [rsp + 0xff8], 0
0x4002fa:	jmp	0x4002e5
<Block for 0x400326, 47 bytes>
0x400326:	mov	rax, rsp
0x400329:	add	rax, 0xf
0x40032d:	shr	rax, 4
0x400331:	shl	rax, 4
0x400335:	mov	qword ptr [rbp - 0xd8], rax
0x40033c:	mov	rax, qword ptr [rbp - 0xd8]
0x400343:	mov	edx, 0x63
0x400348:	mov	esi, 0x41
0x40034d:	mov	rdi, rax
0x400350:	call	0x500000
<Block for 0x400316, 63 bytes>
0x400316:	and	eax, 0xfff
0x40031b:	sub	rax, 8
0x40031f:	add	rax, rsp
0x400322:	or	qword ptr [rax], 0
0x400326:	mov	rax, rsp
0x400329:	add	rax, 0xf
0x40032d:	shr	rax, 4
0x400331:	shl	rax, 4
0x400335:	mov	qword ptr [rbp - 0xd8], rax
0x40033c:	mov	rax, qword ptr [rbp - 0xd8]
0x400343:	mov	edx, 0x63
0x400348:	mov	esi, 0x41
0x40034d:	mov	rdi, rax
0x400350:	call	0x500000
<Block for 0x4002e5, 5 bytes>
0x4002e5:	cmp	rsp, rdx
0x4002e8:	je	0x4002fc
<Block for 0x400355, 25 bytes>
0x400355:	mov	rax, qword ptr [rbp - 0xd8]
0x40035c:	add	rax, 0x63
0x400360:	mov	byte ptr [rax], 0
0x400363:	mov	eax, dword ptr [rip + 0x8f]
0x400369:	cmp	eax, 5
0x40036c:	jne	0x40037c
<Block for 0x40036e, 39 bytes>
0x40036e:	mov	rax, qword ptr [rbp - 0xd8]
0x400375:	mov	qword ptr [rbp - 0xe0], rax
0x40037c:	lea	rax, [rbp - 0xd0]
0x400383:	mov	edx, 0xc7
0x400388:	mov	esi, 0x43
0x40038d:	mov	rdi, rax
0x400390:	call	0x500000
<Block for 0x40037c, 25 bytes>
0x40037c:	lea	rax, [rbp - 0xd0]
0x400383:	mov	edx, 0xc7
0x400388:	mov	esi, 0x43
0x40038d:	mov	rdi, rax
0x400390:	call	0x500000
<Block for 0x400395, 29 bytes>
0x400395:	mov	byte ptr [rbp - 9], 0
0x400399:	mov	rdx, qword ptr [rbp - 0xe0]
0x4003a0:	lea	rax, [rbp - 0xd0]
0x4003a7:	mov	rsi, rdx
0x4003aa:	mov	rdi, rax
0x4003ad:	call	0x500008
<Block for 0x4003b2, 15 bytes>
0x4003b2:	lea	rax, [rbp - 0xd0]
0x4003b9:	mov	rdi, rax
0x4003bc:	call	0x500010
<Block for 0x4003c1, 16 bytes>
0x4003c1:	nop	
0x4003c2:	mov	rax, qword ptr [rbp - 8]
0x4003c6:	xor	rax, qword ptr fs:[0x28]
0x4003cf:	je	0x4003d6
<Block for 0x4003d6, 2 bytes>
0x4003d6:	leave	
0x4003d7:	ret	
<Block for 0x4003d1, 5 bytes>
0x4003d1:	call	0x500018
