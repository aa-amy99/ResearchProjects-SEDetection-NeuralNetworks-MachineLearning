<Block for 0x400216, 150 bytes>
0x400216:	endbr64	
0x40021a:	push	rbp
0x40021b:	mov	rbp, rsp
0x40021e:	add	rsp, -0x80
0x400222:	mov	rax, qword ptr fs:[0x28]
0x40022b:	mov	qword ptr [rbp - 8], rax
0x40022f:	xor	eax, eax
0x400231:	mov	qword ptr [rbp - 0x70], 0
0x400239:	mov	qword ptr [rbp - 0x68], 0
0x400241:	mov	qword ptr [rbp - 0x60], 0
0x400249:	mov	qword ptr [rbp - 0x58], 0
0x400251:	mov	qword ptr [rbp - 0x50], 0
0x400259:	mov	qword ptr [rbp - 0x48], 0
0x400261:	mov	qword ptr [rbp - 0x40], 0
0x400269:	mov	qword ptr [rbp - 0x38], 0
0x400271:	mov	qword ptr [rbp - 0x30], 0
0x400279:	mov	qword ptr [rbp - 0x28], 0
0x400281:	mov	qword ptr [rbp - 0x20], 0
0x400289:	mov	qword ptr [rbp - 0x18], 0
0x400291:	mov	dword ptr [rbp - 0x10], 0
0x400298:	lea	rax, [rbp - 0x70]
0x40029c:	mov	qword ptr [rbp - 0x80], rax
0x4002a0:	mov	rax, qword ptr [rbp - 0x80]
0x4002a4:	mov	rdi, rax
0x4002a7:	call	0x500000
<Block for 0x4002ac, 23 bytes>
0x4002ac:	mov	qword ptr [rbp - 0x78], rax
0x4002b0:	mov	eax, 0x64
0x4002b5:	sub	rax, qword ptr [rbp - 0x78]
0x4002b9:	cmp	rax, 1
0x4002bd:	jbe	0x40034f
<Block for 0x40034f, 12 bytes>
0x40034f:	lea	rax, [rbp - 0x80]
0x400353:	mov	rdi, rax
0x400356:	call	0x500038
<Block for 0x4002c3, 44 bytes>
0x4002c3:	mov	rax, qword ptr [rip + 0xffd3e]
0x4002ca:	mov	rdx, qword ptr [rbp - 0x78]
0x4002ce:	mov	ecx, 0x64
0x4002d3:	sub	ecx, edx
0x4002d5:	mov	edx, ecx
0x4002d7:	mov	esi, edx
0x4002d9:	mov	rcx, qword ptr [rbp - 0x80]
0x4002dd:	mov	rdx, qword ptr [rbp - 0x78]
0x4002e1:	add	rcx, rdx
0x4002e4:	mov	rdx, rax
0x4002e7:	mov	rdi, rcx
0x4002ea:	call	0x500010
<Block for 0x40035b, 16 bytes>
0x40035b:	nop	
0x40035c:	mov	rax, qword ptr [rbp - 8]
0x400360:	xor	rax, qword ptr fs:[0x28]
0x400369:	je	0x400370
<Block for 0x4002ef, 5 bytes>
0x4002ef:	test	rax, rax
0x4002f2:	je	0x400335
<Block for 0x400370, 2 bytes>
0x400370:	leave	
0x400371:	ret	
<Block for 0x40036b, 5 bytes>
0x40036b:	call	0x500028
<Block for 0x400335, 12 bytes>
0x400335:	lea	rdi, [rip + 0x55]
0x40033c:	call	0x500018
<Block for 0x4002f4, 12 bytes>
0x4002f4:	mov	rax, qword ptr [rbp - 0x80]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500000
<Block for 0x400341, 26 bytes>
0x400341:	mov	rdx, qword ptr [rbp - 0x80]
0x400345:	mov	rax, qword ptr [rbp - 0x78]
0x400349:	add	rax, rdx
0x40034c:	mov	byte ptr [rax], 0
0x40034f:	lea	rax, [rbp - 0x80]
0x400353:	mov	rdi, rax
0x400356:	call	0x500038
<Block for 0x400300, 11 bytes>
0x400300:	mov	qword ptr [rbp - 0x78], rax
0x400304:	cmp	qword ptr [rbp - 0x78], 0
0x400309:	je	0x40034f
<Block for 0x40030b, 22 bytes>
0x40030b:	mov	rax, qword ptr [rbp - 0x80]
0x40030f:	mov	rdx, qword ptr [rbp - 0x78]
0x400313:	sub	rdx, 1
0x400317:	add	rax, rdx
0x40031a:	movzx	eax, byte ptr [rax]
0x40031d:	cmp	al, 0xa
0x40031f:	jne	0x40034f
<Block for 0x400321, 20 bytes>
0x400321:	mov	rax, qword ptr [rbp - 0x80]
0x400325:	mov	rdx, qword ptr [rbp - 0x78]
0x400329:	sub	rdx, 1
0x40032d:	add	rax, rdx
0x400330:	mov	byte ptr [rax], 0
0x400333:	jmp	0x40034f
