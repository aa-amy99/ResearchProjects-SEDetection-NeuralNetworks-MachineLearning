<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rdx, [rbp - 0x14]
0x400023:	mov	rax, qword ptr [rbp - 0x28]
0x400027:	lea	rsi, [rip + 0x44a]
0x40002e:	mov	rdi, rax
0x400031:	mov	eax, 0
0x400036:	call	0x500000
<Block for 0x40003b, 5 bytes>
0x40003b:	cmp	eax, 1
0x40003e:	jne	0x40006a
<Block for 0x400040, 16 bytes>
0x400040:	mov	dword ptr [rbp - 0xc], 0
0x400047:	mov	dword ptr [rbp - 0x10], 0
0x40004e:	jmp	0x400058
<Block for 0x40006a, 16 bytes>
0x40006a:	nop	
0x40006b:	mov	rax, qword ptr [rbp - 8]
0x40006f:	xor	rax, qword ptr fs:[0x28]
0x400078:	je	0x40007f
<Block for 0x400058, 8 bytes>
0x400058:	mov	eax, dword ptr [rbp - 0x14]
0x40005b:	cmp	dword ptr [rbp - 0x10], eax
0x40005e:	jl	0x400050
<Block for 0x40007f, 2 bytes>
0x40007f:	leave	
0x400080:	ret	
<Block for 0x40007a, 5 bytes>
0x40007a:	call	0x500010
<Block for 0x400050, 16 bytes>
0x400050:	add	dword ptr [rbp - 0xc], 1
0x400054:	add	dword ptr [rbp - 0x10], 1
0x400058:	mov	eax, dword ptr [rbp - 0x14]
0x40005b:	cmp	dword ptr [rbp - 0x10], eax
0x40005e:	jl	0x400050
<Block for 0x400060, 10 bytes>
0x400060:	mov	eax, dword ptr [rbp - 0xc]
0x400063:	mov	edi, eax
0x400065:	call	0x500008
