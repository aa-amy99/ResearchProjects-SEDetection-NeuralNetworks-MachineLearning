<Block for 0x400081, 159 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x90
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	qword ptr [rbp - 0x70], 0
0x4000a7:	mov	qword ptr [rbp - 0x68], 0
0x4000af:	mov	qword ptr [rbp - 0x60], 0
0x4000b7:	mov	qword ptr [rbp - 0x58], 0
0x4000bf:	mov	qword ptr [rbp - 0x50], 0
0x4000c7:	mov	qword ptr [rbp - 0x48], 0
0x4000cf:	mov	qword ptr [rbp - 0x40], 0
0x4000d7:	mov	qword ptr [rbp - 0x38], 0
0x4000df:	mov	qword ptr [rbp - 0x30], 0
0x4000e7:	mov	qword ptr [rbp - 0x28], 0
0x4000ef:	mov	qword ptr [rbp - 0x20], 0
0x4000f7:	mov	qword ptr [rbp - 0x18], 0
0x4000ff:	mov	dword ptr [rbp - 0x10], 0
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	qword ptr [rbp - 0x88], rax
0x400111:	mov	rax, qword ptr [rbp - 0x88]
0x400118:	mov	rdi, rax
0x40011b:	call	0x500018
<Block for 0x400120, 16 bytes>
0x400120:	mov	qword ptr [rbp - 0x80], rax
0x400124:	lea	rdi, [rip + 0x350]
0x40012b:	call	0x500020
<Block for 0x400130, 11 bytes>
0x400130:	mov	qword ptr [rbp - 0x78], rax
0x400134:	cmp	qword ptr [rbp - 0x78], 0
0x400139:	je	0x400164
<Block for 0x400164, 15 bytes>
0x400164:	mov	rax, qword ptr [rbp - 0x88]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x400000
<Block for 0x40013b, 41 bytes>
0x40013b:	mov	eax, 0x63
0x400140:	sub	rax, qword ptr [rbp - 0x80]
0x400144:	mov	rdx, rax
0x400147:	mov	rcx, qword ptr [rbp - 0x88]
0x40014e:	mov	rax, qword ptr [rbp - 0x80]
0x400152:	add	rcx, rax
0x400155:	mov	rax, qword ptr [rbp - 0x78]
0x400159:	mov	rsi, rax
0x40015c:	mov	rdi, rcx
0x40015f:	call	0x500028
<Block for 0x400173, 16 bytes>
0x400173:	nop	
0x400174:	mov	rax, qword ptr [rbp - 8]
0x400178:	xor	rax, qword ptr fs:[0x28]
0x400181:	je	0x400188
<Block for 0x400188, 2 bytes>
0x400188:	leave	
0x400189:	ret	
<Block for 0x400183, 5 bytes>
0x400183:	call	0x500010
