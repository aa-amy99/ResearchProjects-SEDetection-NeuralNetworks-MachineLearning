<Block for 0x4000a7, 41 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	sub	rsp, 0x120
0x4000b6:	mov	rax, qword ptr fs:[0x28]
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	xor	eax, eax
0x4000c5:	mov	eax, dword ptr [rip + 0xfff35]
0x4000cb:	cmp	eax, 5
0x4000ce:	je	0x4000de
<Block for 0x4000de, 25 bytes>
0x4000de:	lea	rax, [rbp - 0xa0]
0x4000e5:	mov	edx, 0x95
0x4000ea:	mov	esi, 0x41
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500008
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rdi, [rip + 0x159]
0x4000d7:	call	0x500010
<Block for 0x4000f7, 16 bytes>
0x4000f7:	mov	byte ptr [rbp - 0xb], 0
0x4000fb:	mov	dword ptr [rbp - 0x114], 0
0x400105:	jmp	0x40012d
<Block for 0x4000dc, 2 bytes>
0x4000dc:	jmp	0x40014c
<Block for 0x40012d, 9 bytes>
0x40012d:	cmp	dword ptr [rbp - 0x114], 0x62
0x400134:	jle	0x400107
<Block for 0x40014c, 16 bytes>
0x40014c:	nop	
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	xor	rax, qword ptr fs:[0x28]
0x40015a:	je	0x400161
<Block for 0x400107, 47 bytes>
0x400107:	mov	eax, dword ptr [rbp - 0x114]
0x40010d:	cdqe	
0x40010f:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400117:	mov	eax, dword ptr [rbp - 0x114]
0x40011d:	cdqe	
0x40011f:	mov	byte ptr [rbp + rax - 0x110], dl
0x400126:	add	dword ptr [rbp - 0x114], 1
0x40012d:	cmp	dword ptr [rbp - 0x114], 0x62
0x400134:	jle	0x400107
<Block for 0x400136, 22 bytes>
0x400136:	mov	byte ptr [rbp - 0xad], 0
0x40013d:	lea	rax, [rbp - 0x110]
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x400161, 2 bytes>
0x400161:	leave	
0x400162:	ret	
<Block for 0x40015c, 5 bytes>
0x40015c:	call	0x500018
