<Block for 0x4000a7, 79 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	sub	rsp, 0x20
0x4000b3:	mov	rax, qword ptr fs:[0x28]
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	xor	eax, eax
0x4000c2:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000c9:	mov	qword ptr [rbp - 0x16], 0
0x4000d1:	mov	dword ptr [rbp - 0xe], 0
0x4000d8:	mov	word ptr [rbp - 0xa], 0
0x4000de:	mov	rdx, qword ptr [rip + 0xfff33]
0x4000e5:	lea	rax, [rbp - 0x16]
0x4000e9:	mov	esi, 0xe
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500020
<Block for 0x4000f6, 5 bytes>
0x4000f6:	test	rax, rax
0x4000f9:	je	0x40010c
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rdi, [rip + 0x29d]
0x400113:	call	0x500008
<Block for 0x4000fb, 12 bytes>
0x4000fb:	lea	rax, [rbp - 0x16]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500028
<Block for 0x400118, 19 bytes>
0x400118:	mov	eax, dword ptr [rbp - 0x1c]
0x40011b:	mov	dword ptr [rip + 0x25f], eax
0x400121:	mov	eax, 0
0x400126:	call	0x400000
<Block for 0x400107, 5 bytes>
0x400107:	mov	dword ptr [rbp - 0x1c], eax
0x40010a:	jmp	0x400118
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500010
