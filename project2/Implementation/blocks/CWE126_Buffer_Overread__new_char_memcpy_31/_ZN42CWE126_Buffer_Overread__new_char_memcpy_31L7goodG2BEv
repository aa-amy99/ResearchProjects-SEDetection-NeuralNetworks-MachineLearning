<Block for 0x4000ea, 51 bytes>
0x4000ea:	endbr64	
0x4000ee:	push	rbp
0x4000ef:	mov	rbp, rsp
0x4000f2:	sub	rsp, 0x90
0x4000f9:	mov	rax, qword ptr fs:[0x28]
0x400102:	mov	qword ptr [rbp - 8], rax
0x400106:	xor	eax, eax
0x400108:	mov	qword ptr [rbp - 0x88], 0
0x400113:	mov	edi, 0x64
0x400118:	call	0x500000
<Block for 0x40011d, 32 bytes>
0x40011d:	mov	qword ptr [rbp - 0x88], rax
0x400124:	mov	rax, qword ptr [rbp - 0x88]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x41
0x400135:	mov	rdi, rax
0x400138:	call	0x500008
<Block for 0x40013d, 55 bytes>
0x40013d:	mov	rax, qword ptr [rbp - 0x88]
0x400144:	add	rax, 0x63
0x400148:	mov	byte ptr [rax], 0
0x40014b:	mov	rax, qword ptr [rbp - 0x88]
0x400152:	mov	qword ptr [rbp - 0x80], rax
0x400156:	mov	rax, qword ptr [rbp - 0x80]
0x40015a:	mov	qword ptr [rbp - 0x78], rax
0x40015e:	lea	rax, [rbp - 0x70]
0x400162:	mov	edx, 0x63
0x400167:	mov	esi, 0x43
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500008
<Block for 0x400174, 16 bytes>
0x400174:	mov	byte ptr [rbp - 0xd], 0
0x400178:	lea	rax, [rbp - 0x70]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500010
<Block for 0x400184, 22 bytes>
0x400184:	mov	rdx, rax
0x400187:	mov	rcx, qword ptr [rbp - 0x78]
0x40018b:	lea	rax, [rbp - 0x70]
0x40018f:	mov	rsi, rcx
0x400192:	mov	rdi, rax
0x400195:	call	0x500018
<Block for 0x40019a, 16 bytes>
0x40019a:	mov	byte ptr [rbp - 0xd], 0
0x40019e:	lea	rax, [rbp - 0x70]
0x4001a2:	mov	rdi, rax
0x4001a5:	call	0x500020
<Block for 0x4001aa, 7 bytes>
0x4001aa:	cmp	qword ptr [rbp - 0x78], 0
0x4001af:	je	0x4001bd
<Block for 0x4001bd, 16 bytes>
0x4001bd:	nop	
0x4001be:	mov	rax, qword ptr [rbp - 8]
0x4001c2:	xor	rax, qword ptr fs:[0x28]
0x4001cb:	je	0x4001d2
<Block for 0x4001b1, 12 bytes>
0x4001b1:	mov	rax, qword ptr [rbp - 0x78]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500028
<Block for 0x4001d2, 2 bytes>
0x4001d2:	leave	
0x4001d3:	ret	
<Block for 0x4001cd, 5 bytes>
0x4001cd:	call	0x500030
