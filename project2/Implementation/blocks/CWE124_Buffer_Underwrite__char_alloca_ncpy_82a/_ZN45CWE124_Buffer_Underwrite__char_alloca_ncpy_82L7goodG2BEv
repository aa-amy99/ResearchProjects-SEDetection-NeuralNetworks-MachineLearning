<Block for 0x400132, 82 bytes>
0x400132:	endbr64	
0x400136:	push	rbp
0x400137:	mov	rbp, rsp
0x40013a:	push	rbx
0x40013b:	sub	rsp, 0x28
0x40013f:	mov	rax, qword ptr fs:[0x28]
0x400148:	mov	qword ptr [rbp - 0x18], rax
0x40014c:	xor	eax, eax
0x40014e:	mov	eax, 0x10
0x400153:	sub	rax, 1
0x400157:	add	rax, 0x6c
0x40015b:	mov	esi, 0x10
0x400160:	mov	edx, 0
0x400165:	div	rsi
0x400168:	imul	rax, rax, 0x10
0x40016c:	mov	rdx, rax
0x40016f:	and	rdx, 0xfffffffffffff000
0x400176:	mov	rcx, rsp
0x400179:	sub	rcx, rdx
0x40017c:	mov	rdx, rcx
0x40017f:	cmp	rsp, rdx
0x400182:	je	0x400196
<Block for 0x400196, 26 bytes>
0x400196:	mov	rdx, rax
0x400199:	and	edx, 0xfff
0x40019f:	sub	rsp, rdx
0x4001a2:	mov	rdx, rax
0x4001a5:	and	edx, 0xfff
0x4001ab:	test	rdx, rdx
0x4001ae:	je	0x4001c0
<Block for 0x400184, 18 bytes>
0x400184:	sub	rsp, 0x1000
0x40018b:	or	qword ptr [rsp + 0xff8], 0
0x400194:	jmp	0x40017f
<Block for 0x4001c0, 41 bytes>
0x4001c0:	mov	rax, rsp
0x4001c3:	add	rax, 0xf
0x4001c7:	shr	rax, 4
0x4001cb:	shl	rax, 4
0x4001cf:	mov	qword ptr [rbp - 0x30], rax
0x4001d3:	mov	rax, qword ptr [rbp - 0x30]
0x4001d7:	mov	edx, 0x63
0x4001dc:	mov	esi, 0x41
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500000
<Block for 0x4001b0, 57 bytes>
0x4001b0:	and	eax, 0xfff
0x4001b5:	sub	rax, 8
0x4001b9:	add	rax, rsp
0x4001bc:	or	qword ptr [rax], 0
0x4001c0:	mov	rax, rsp
0x4001c3:	add	rax, 0xf
0x4001c7:	shr	rax, 4
0x4001cb:	shl	rax, 4
0x4001cf:	mov	qword ptr [rbp - 0x30], rax
0x4001d3:	mov	rax, qword ptr [rbp - 0x30]
0x4001d7:	mov	edx, 0x63
0x4001dc:	mov	esi, 0x41
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500000
<Block for 0x40017f, 5 bytes>
0x40017f:	cmp	rsp, rdx
0x400182:	je	0x400196
<Block for 0x4001e9, 29 bytes>
0x4001e9:	mov	rax, qword ptr [rbp - 0x30]
0x4001ed:	add	rax, 0x63
0x4001f1:	mov	byte ptr [rax], 0
0x4001f4:	mov	rax, qword ptr [rbp - 0x30]
0x4001f8:	mov	qword ptr [rbp - 0x28], rax
0x4001fc:	mov	edi, 8
0x400201:	call	0x500008
<Block for 0x400206, 11 bytes>
0x400206:	mov	rbx, rax
0x400209:	mov	rdi, rbx
0x40020c:	call	0x4002bc
<Block for 0x400211, 30 bytes>
0x400211:	mov	qword ptr [rbp - 0x20], rbx
0x400215:	mov	rax, qword ptr [rbp - 0x20]
0x400219:	mov	rax, qword ptr [rax]
0x40021c:	mov	rcx, qword ptr [rax]
0x40021f:	mov	rdx, qword ptr [rbp - 0x28]
0x400223:	mov	rax, qword ptr [rbp - 0x20]
0x400227:	mov	rsi, rdx
0x40022a:	mov	rdi, rax
0x40022d:	call	rcx
<Block for 0x40022f, 9 bytes>
0x40022f:	mov	rax, qword ptr [rbp - 0x20]
0x400233:	test	rax, rax
0x400236:	je	0x400245
<Block for 0x400245, 16 bytes>
0x400245:	nop	
0x400246:	mov	rax, qword ptr [rbp - 0x18]
0x40024a:	xor	rax, qword ptr fs:[0x28]
0x400253:	je	0x40025a
<Block for 0x400238, 13 bytes>
0x400238:	mov	esi, 8
0x40023d:	mov	rdi, rax
0x400240:	call	0x500010
<Block for 0x40025a, 6 bytes>
0x40025a:	mov	rbx, qword ptr [rbp - 8]
0x40025e:	leave	
0x40025f:	ret	
<Block for 0x400255, 5 bytes>
0x400255:	call	0x500018
