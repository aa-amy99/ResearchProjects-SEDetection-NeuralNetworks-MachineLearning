<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	eax, 0x10
0x400021:	sub	rax, 1
0x400025:	add	rax, 0x6c
0x400029:	mov	esi, 0x10
0x40002e:	mov	edx, 0
0x400033:	div	rsi
0x400036:	imul	rax, rax, 0x10
0x40003a:	mov	rdx, rax
0x40003d:	and	rdx, 0xfffffffffffff000
0x400044:	mov	rcx, rsp
0x400047:	sub	rcx, rdx
0x40004a:	mov	rdx, rcx
0x40004d:	cmp	rsp, rdx
0x400050:	je	0x400064
<Block for 0x400064, 26 bytes>
0x400064:	mov	rdx, rax
0x400067:	and	edx, 0xfff
0x40006d:	sub	rsp, rdx
0x400070:	mov	rdx, rax
0x400073:	and	edx, 0xfff
0x400079:	test	rdx, rdx
0x40007c:	je	0x40008e
<Block for 0x400052, 18 bytes>
0x400052:	sub	rsp, 0x1000
0x400059:	or	qword ptr [rsp + 0xff8], 0
0x400062:	jmp	0x40004d
<Block for 0x40008e, 41 bytes>
0x40008e:	mov	rax, rsp
0x400091:	add	rax, 0xf
0x400095:	shr	rax, 4
0x400099:	shl	rax, 4
0x40009d:	mov	qword ptr [rbp - 0x30], rax
0x4000a1:	mov	rax, qword ptr [rbp - 0x30]
0x4000a5:	mov	edx, 0x63
0x4000aa:	mov	esi, 0x41
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500000
<Block for 0x40007e, 57 bytes>
0x40007e:	and	eax, 0xfff
0x400083:	sub	rax, 8
0x400087:	add	rax, rsp
0x40008a:	or	qword ptr [rax], 0
0x40008e:	mov	rax, rsp
0x400091:	add	rax, 0xf
0x400095:	shr	rax, 4
0x400099:	shl	rax, 4
0x40009d:	mov	qword ptr [rbp - 0x30], rax
0x4000a1:	mov	rax, qword ptr [rbp - 0x30]
0x4000a5:	mov	edx, 0x63
0x4000aa:	mov	esi, 0x41
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500000
<Block for 0x40004d, 5 bytes>
0x40004d:	cmp	rsp, rdx
0x400050:	je	0x400064
<Block for 0x4000b7, 33 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x30]
0x4000bb:	add	rax, 0x63
0x4000bf:	mov	byte ptr [rax], 0
0x4000c2:	mov	rax, qword ptr [rbp - 0x30]
0x4000c6:	sub	rax, 8
0x4000ca:	mov	qword ptr [rbp - 0x28], rax
0x4000ce:	mov	edi, 8
0x4000d3:	call	0x500008
<Block for 0x4000d8, 11 bytes>
0x4000d8:	mov	rbx, rax
0x4000db:	mov	rdi, rbx
0x4000de:	call	0x40028e
<Block for 0x4000e3, 30 bytes>
0x4000e3:	mov	qword ptr [rbp - 0x20], rbx
0x4000e7:	mov	rax, qword ptr [rbp - 0x20]
0x4000eb:	mov	rax, qword ptr [rax]
0x4000ee:	mov	rcx, qword ptr [rax]
0x4000f1:	mov	rdx, qword ptr [rbp - 0x28]
0x4000f5:	mov	rax, qword ptr [rbp - 0x20]
0x4000f9:	mov	rsi, rdx
0x4000fc:	mov	rdi, rax
0x4000ff:	call	rcx
<Block for 0x400101, 9 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0x20]
0x400105:	test	rax, rax
0x400108:	je	0x400117
<Block for 0x400117, 16 bytes>
0x400117:	nop	
0x400118:	mov	rax, qword ptr [rbp - 0x18]
0x40011c:	xor	rax, qword ptr fs:[0x28]
0x400125:	je	0x40012c
<Block for 0x40010a, 13 bytes>
0x40010a:	mov	esi, 8
0x40010f:	mov	rdi, rax
0x400112:	call	0x500010
<Block for 0x40012c, 6 bytes>
0x40012c:	mov	rbx, qword ptr [rbp - 8]
0x400130:	leave	
0x400131:	ret	
<Block for 0x400127, 5 bytes>
0x400127:	call	0x500018
