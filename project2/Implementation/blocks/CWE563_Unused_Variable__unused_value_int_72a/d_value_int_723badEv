<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004ea
<Block for 0x400028, 19 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 5
0x40002f:	lea	rax, [rbp - 0x50]
0x400033:	mov	rdi, rax
0x400036:	call	0x400692
<Block for 0x40003b, 23 bytes>
0x40003b:	mov	qword ptr [rbp - 0x58], rax
0x40003f:	lea	rdx, [rbp - 0x58]
0x400043:	lea	rax, [rbp - 0x30]
0x400047:	mov	rsi, rdx
0x40004a:	mov	rdi, rax
0x40004d:	call	0x4006e2
<Block for 0x400052, 28 bytes>
0x400052:	lea	rdx, [rbp - 0x5c]
0x400056:	mov	rsi, qword ptr [rbp - 0x30]
0x40005a:	lea	rax, [rbp - 0x50]
0x40005e:	mov	rcx, rdx
0x400061:	mov	edx, 1
0x400066:	mov	rdi, rax
0x400069:	call	0x400710
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rax, [rbp - 0x50]
0x400072:	mov	rdi, rax
0x400075:	call	0x400692
<Block for 0x40007a, 23 bytes>
0x40007a:	mov	qword ptr [rbp - 0x58], rax
0x40007e:	lea	rdx, [rbp - 0x58]
0x400082:	lea	rax, [rbp - 0x30]
0x400086:	mov	rsi, rdx
0x400089:	mov	rdi, rax
0x40008c:	call	0x4006e2
<Block for 0x400091, 28 bytes>
0x400091:	lea	rdx, [rbp - 0x5c]
0x400095:	mov	rsi, qword ptr [rbp - 0x30]
0x400099:	lea	rax, [rbp - 0x50]
0x40009d:	mov	rcx, rdx
0x4000a0:	mov	edx, 1
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x400710
<Block for 0x4000ad, 12 bytes>
0x4000ad:	lea	rax, [rbp - 0x50]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x400692
<Block for 0x4000b9, 23 bytes>
0x4000b9:	mov	qword ptr [rbp - 0x58], rax
0x4000bd:	lea	rdx, [rbp - 0x58]
0x4000c1:	lea	rax, [rbp - 0x30]
0x4000c5:	mov	rsi, rdx
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x4006e2
<Block for 0x4000d0, 28 bytes>
0x4000d0:	lea	rdx, [rbp - 0x5c]
0x4000d4:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d8:	lea	rax, [rbp - 0x50]
0x4000dc:	mov	rcx, rdx
0x4000df:	mov	edx, 1
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x400710
<Block for 0x4000ec, 19 bytes>
0x4000ec:	lea	rdx, [rbp - 0x50]
0x4000f0:	lea	rax, [rbp - 0x30]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x4007d6
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rax, [rbp - 0x30]
0x400103:	mov	rdi, rax
0x400106:	call	0x500000
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rax, [rbp - 0x30]
0x40010f:	mov	rdi, rax
0x400112:	call	0x40064a
<Block for 0x400117, 12 bytes>
0x400117:	lea	rax, [rbp - 0x50]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x40064a
<Block for 0x400123, 16 bytes>
0x400123:	nop	
0x400124:	mov	rax, qword ptr [rbp - 0x18]
0x400128:	xor	rax, qword ptr fs:[0x28]
0x400131:	je	0x40016d
<Block for 0x40016d, 7 bytes>
0x40016d:	add	rsp, 0x58
0x400171:	pop	rbx
0x400172:	pop	rbp
0x400173:	ret	
<Block for 0x400133, 2 bytes>
0x400133:	jmp	0x400168
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500010
