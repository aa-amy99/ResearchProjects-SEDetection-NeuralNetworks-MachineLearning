<Block for 0x4002f2, 40 bytes>
0x4002f2:	endbr64	
0x4002f6:	push	rbp
0x4002f7:	mov	rbp, rsp
0x4002fa:	push	rbx
0x4002fb:	sub	rsp, 0x58
0x4002ff:	mov	rax, qword ptr fs:[0x28]
0x400308:	mov	qword ptr [rbp - 0x18], rax
0x40030c:	xor	eax, eax
0x40030e:	lea	rax, [rbp - 0x50]
0x400312:	mov	rdi, rax
0x400315:	call	0x4004ea
<Block for 0x40031a, 19 bytes>
0x40031a:	mov	dword ptr [rbp - 0x5c], 5
0x400321:	lea	rax, [rbp - 0x50]
0x400325:	mov	rdi, rax
0x400328:	call	0x400692
<Block for 0x40032d, 23 bytes>
0x40032d:	mov	qword ptr [rbp - 0x58], rax
0x400331:	lea	rdx, [rbp - 0x58]
0x400335:	lea	rax, [rbp - 0x30]
0x400339:	mov	rsi, rdx
0x40033c:	mov	rdi, rax
0x40033f:	call	0x4006e2
<Block for 0x400344, 28 bytes>
0x400344:	lea	rdx, [rbp - 0x5c]
0x400348:	mov	rsi, qword ptr [rbp - 0x30]
0x40034c:	lea	rax, [rbp - 0x50]
0x400350:	mov	rcx, rdx
0x400353:	mov	edx, 1
0x400358:	mov	rdi, rax
0x40035b:	call	0x400710
<Block for 0x400360, 12 bytes>
0x400360:	lea	rax, [rbp - 0x50]
0x400364:	mov	rdi, rax
0x400367:	call	0x400692
<Block for 0x40036c, 23 bytes>
0x40036c:	mov	qword ptr [rbp - 0x58], rax
0x400370:	lea	rdx, [rbp - 0x58]
0x400374:	lea	rax, [rbp - 0x30]
0x400378:	mov	rsi, rdx
0x40037b:	mov	rdi, rax
0x40037e:	call	0x4006e2
<Block for 0x400383, 28 bytes>
0x400383:	lea	rdx, [rbp - 0x5c]
0x400387:	mov	rsi, qword ptr [rbp - 0x30]
0x40038b:	lea	rax, [rbp - 0x50]
0x40038f:	mov	rcx, rdx
0x400392:	mov	edx, 1
0x400397:	mov	rdi, rax
0x40039a:	call	0x400710
<Block for 0x40039f, 12 bytes>
0x40039f:	lea	rax, [rbp - 0x50]
0x4003a3:	mov	rdi, rax
0x4003a6:	call	0x400692
<Block for 0x4003ab, 23 bytes>
0x4003ab:	mov	qword ptr [rbp - 0x58], rax
0x4003af:	lea	rdx, [rbp - 0x58]
0x4003b3:	lea	rax, [rbp - 0x30]
0x4003b7:	mov	rsi, rdx
0x4003ba:	mov	rdi, rax
0x4003bd:	call	0x4006e2
<Block for 0x4003c2, 28 bytes>
0x4003c2:	lea	rdx, [rbp - 0x5c]
0x4003c6:	mov	rsi, qword ptr [rbp - 0x30]
0x4003ca:	lea	rax, [rbp - 0x50]
0x4003ce:	mov	rcx, rdx
0x4003d1:	mov	edx, 1
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x400710
<Block for 0x4003de, 19 bytes>
0x4003de:	lea	rdx, [rbp - 0x50]
0x4003e2:	lea	rax, [rbp - 0x30]
0x4003e6:	mov	rsi, rdx
0x4003e9:	mov	rdi, rax
0x4003ec:	call	0x4007d6
<Block for 0x4003f1, 12 bytes>
0x4003f1:	lea	rax, [rbp - 0x30]
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500028
<Block for 0x4003fd, 12 bytes>
0x4003fd:	lea	rax, [rbp - 0x30]
0x400401:	mov	rdi, rax
0x400404:	call	0x40064a
<Block for 0x400409, 12 bytes>
0x400409:	lea	rax, [rbp - 0x50]
0x40040d:	mov	rdi, rax
0x400410:	call	0x40064a
<Block for 0x400415, 16 bytes>
0x400415:	nop	
0x400416:	mov	rax, qword ptr [rbp - 0x18]
0x40041a:	xor	rax, qword ptr fs:[0x28]
0x400423:	je	0x40045f
<Block for 0x40045f, 7 bytes>
0x40045f:	add	rsp, 0x58
0x400463:	pop	rbx
0x400464:	pop	rbp
0x400465:	ret	
<Block for 0x400425, 2 bytes>
0x400425:	jmp	0x40045a
<Block for 0x40045a, 5 bytes>
0x40045a:	call	0x500010
