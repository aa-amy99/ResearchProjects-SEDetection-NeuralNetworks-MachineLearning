<Block for 0x400174, 40 bytes>
0x400174:	endbr64	
0x400178:	push	rbp
0x400179:	mov	rbp, rsp
0x40017c:	push	rbx
0x40017d:	sub	rsp, 0x58
0x400181:	mov	rax, qword ptr fs:[0x28]
0x40018a:	mov	qword ptr [rbp - 0x18], rax
0x40018e:	xor	eax, eax
0x400190:	lea	rax, [rbp - 0x50]
0x400194:	mov	rdi, rax
0x400197:	call	0x4004ea
<Block for 0x40019c, 17 bytes>
0x40019c:	mov	dword ptr [rbp - 0x5c], 5
0x4001a3:	mov	eax, dword ptr [rbp - 0x5c]
0x4001a6:	mov	edi, eax
0x4001a8:	call	0x500018
<Block for 0x4001ad, 12 bytes>
0x4001ad:	lea	rax, [rbp - 0x50]
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x400692
<Block for 0x4001b9, 23 bytes>
0x4001b9:	mov	qword ptr [rbp - 0x58], rax
0x4001bd:	lea	rdx, [rbp - 0x58]
0x4001c1:	lea	rax, [rbp - 0x30]
0x4001c5:	mov	rsi, rdx
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x4006e2
<Block for 0x4001d0, 28 bytes>
0x4001d0:	lea	rdx, [rbp - 0x5c]
0x4001d4:	mov	rsi, qword ptr [rbp - 0x30]
0x4001d8:	lea	rax, [rbp - 0x50]
0x4001dc:	mov	rcx, rdx
0x4001df:	mov	edx, 1
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x400710
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rax, [rbp - 0x50]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x400692
<Block for 0x4001f8, 23 bytes>
0x4001f8:	mov	qword ptr [rbp - 0x58], rax
0x4001fc:	lea	rdx, [rbp - 0x58]
0x400200:	lea	rax, [rbp - 0x30]
0x400204:	mov	rsi, rdx
0x400207:	mov	rdi, rax
0x40020a:	call	0x4006e2
<Block for 0x40020f, 28 bytes>
0x40020f:	lea	rdx, [rbp - 0x5c]
0x400213:	mov	rsi, qword ptr [rbp - 0x30]
0x400217:	lea	rax, [rbp - 0x50]
0x40021b:	mov	rcx, rdx
0x40021e:	mov	edx, 1
0x400223:	mov	rdi, rax
0x400226:	call	0x400710
<Block for 0x40022b, 12 bytes>
0x40022b:	lea	rax, [rbp - 0x50]
0x40022f:	mov	rdi, rax
0x400232:	call	0x400692
<Block for 0x400237, 23 bytes>
0x400237:	mov	qword ptr [rbp - 0x58], rax
0x40023b:	lea	rdx, [rbp - 0x58]
0x40023f:	lea	rax, [rbp - 0x30]
0x400243:	mov	rsi, rdx
0x400246:	mov	rdi, rax
0x400249:	call	0x4006e2
<Block for 0x40024e, 28 bytes>
0x40024e:	lea	rdx, [rbp - 0x5c]
0x400252:	mov	rsi, qword ptr [rbp - 0x30]
0x400256:	lea	rax, [rbp - 0x50]
0x40025a:	mov	rcx, rdx
0x40025d:	mov	edx, 1
0x400262:	mov	rdi, rax
0x400265:	call	0x400710
<Block for 0x40026a, 19 bytes>
0x40026a:	lea	rdx, [rbp - 0x50]
0x40026e:	lea	rax, [rbp - 0x30]
0x400272:	mov	rsi, rdx
0x400275:	mov	rdi, rax
0x400278:	call	0x4007d6
<Block for 0x40027d, 12 bytes>
0x40027d:	lea	rax, [rbp - 0x30]
0x400281:	mov	rdi, rax
0x400284:	call	0x500020
<Block for 0x400289, 12 bytes>
0x400289:	lea	rax, [rbp - 0x30]
0x40028d:	mov	rdi, rax
0x400290:	call	0x40064a
<Block for 0x400295, 12 bytes>
0x400295:	lea	rax, [rbp - 0x50]
0x400299:	mov	rdi, rax
0x40029c:	call	0x40064a
<Block for 0x4002a1, 16 bytes>
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 0x18]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002eb
<Block for 0x4002eb, 7 bytes>
0x4002eb:	add	rsp, 0x58
0x4002ef:	pop	rbx
0x4002f0:	pop	rbp
0x4002f1:	ret	
<Block for 0x4002b1, 2 bytes>
0x4002b1:	jmp	0x4002e6
<Block for 0x4002e6, 5 bytes>
0x4002e6:	call	0x500010
