<Block for 0x4000bc, 40 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	push	rbx
0x4000c5:	sub	rsp, 0x38
0x4000c9:	mov	rax, qword ptr fs:[0x28]
0x4000d2:	mov	qword ptr [rbp - 0x18], rax
0x4000d6:	xor	eax, eax
0x4000d8:	lea	rax, [rbp - 0x30]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x400436
<Block for 0x4000e4, 26 bytes>
0x4000e4:	mov	dword ptr [rbp - 0x34], 0x64
0x4000eb:	lea	rdx, [rbp - 0x34]
0x4000ef:	lea	rax, [rbp - 0x30]
0x4000f3:	mov	rsi, rdx
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x400536
<Block for 0x4000fe, 26 bytes>
0x4000fe:	mov	dword ptr [rbp - 0x34], 0xc8
0x400105:	lea	rdx, [rbp - 0x34]
0x400109:	lea	rax, [rbp - 0x30]
0x40010d:	mov	rsi, rdx
0x400110:	mov	rdi, rax
0x400113:	call	0x400536
<Block for 0x400118, 19 bytes>
0x400118:	lea	rax, [rbp - 0x30]
0x40011c:	mov	rsi, rax
0x40011f:	lea	rdi, [rip + 0x22a]
0x400126:	call	0x4005a2
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500018
<Block for 0x400130, 12 bytes>
0x400130:	lea	rax, [rbp - 0x30]
0x400134:	mov	rdi, rax
0x400137:	call	0x400456
<Block for 0x40013c, 16 bytes>
0x40013c:	nop	
0x40013d:	mov	rax, qword ptr [rbp - 0x18]
0x400141:	xor	rax, qword ptr fs:[0x28]
0x40014a:	je	0x400171
<Block for 0x400171, 7 bytes>
0x400171:	add	rsp, 0x38
0x400175:	pop	rbx
0x400176:	pop	rbp
0x400177:	ret	
<Block for 0x40014c, 2 bytes>
0x40014c:	jmp	0x40016c
<Block for 0x40016c, 5 bytes>
0x40016c:	call	0x500010
