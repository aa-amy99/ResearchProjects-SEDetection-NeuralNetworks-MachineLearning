<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x38
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x30]
0x400020:	mov	rdi, rax
0x400023:	call	0x400436
<Block for 0x400028, 26 bytes>
0x400028:	mov	dword ptr [rbp - 0x34], 0x64
0x40002f:	lea	rdx, [rbp - 0x34]
0x400033:	lea	rax, [rbp - 0x30]
0x400037:	mov	rsi, rdx
0x40003a:	mov	rdi, rax
0x40003d:	call	0x400536
<Block for 0x400042, 26 bytes>
0x400042:	mov	dword ptr [rbp - 0x34], 0
0x400049:	lea	rdx, [rbp - 0x34]
0x40004d:	lea	rax, [rbp - 0x30]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	0x400536
<Block for 0x40005c, 19 bytes>
0x40005c:	lea	rax, [rbp - 0x30]
0x400060:	mov	rsi, rax
0x400063:	lea	rdi, [rip + 0x2c6]
0x40006a:	call	0x4005a2
<Block for 0x40006f, 5 bytes>
0x40006f:	call	0x500000
<Block for 0x400074, 12 bytes>
0x400074:	lea	rax, [rbp - 0x30]
0x400078:	mov	rdi, rax
0x40007b:	call	0x400456
<Block for 0x400080, 16 bytes>
0x400080:	nop	
0x400081:	mov	rax, qword ptr [rbp - 0x18]
0x400085:	xor	rax, qword ptr fs:[0x28]
0x40008e:	je	0x4000b5
<Block for 0x4000b5, 7 bytes>
0x4000b5:	add	rsp, 0x38
0x4000b9:	pop	rbx
0x4000ba:	pop	rbp
0x4000bb:	ret	
<Block for 0x400090, 2 bytes>
0x400090:	jmp	0x4000b0
<Block for 0x4000b0, 5 bytes>
0x4000b0:	call	0x500010
