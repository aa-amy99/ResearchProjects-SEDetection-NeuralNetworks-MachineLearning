<Block for 0x400178, 40 bytes>
0x400178:	endbr64	
0x40017c:	push	rbp
0x40017d:	mov	rbp, rsp
0x400180:	push	rbx
0x400181:	sub	rsp, 0x38
0x400185:	mov	rax, qword ptr fs:[0x28]
0x40018e:	mov	qword ptr [rbp - 0x18], rax
0x400192:	xor	eax, eax
0x400194:	lea	rax, [rbp - 0x30]
0x400198:	mov	rdi, rax
0x40019b:	call	0x400436
<Block for 0x4001a0, 26 bytes>
0x4001a0:	mov	dword ptr [rbp - 0x34], 0x64
0x4001a7:	lea	rdx, [rbp - 0x34]
0x4001ab:	lea	rax, [rbp - 0x30]
0x4001af:	mov	rsi, rdx
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x400536
<Block for 0x4001ba, 26 bytes>
0x4001ba:	mov	dword ptr [rbp - 0x34], 0
0x4001c1:	lea	rdx, [rbp - 0x34]
0x4001c5:	lea	rax, [rbp - 0x30]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x400536
<Block for 0x4001d4, 19 bytes>
0x4001d4:	lea	rax, [rbp - 0x30]
0x4001d8:	mov	rsi, rax
0x4001db:	lea	rdi, [rip + 0x18e]
0x4001e2:	call	0x4005a2
<Block for 0x4001e7, 5 bytes>
0x4001e7:	call	0x500020
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rax, [rbp - 0x30]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x400456
<Block for 0x4001f8, 16 bytes>
0x4001f8:	nop	
0x4001f9:	mov	rax, qword ptr [rbp - 0x18]
0x4001fd:	xor	rax, qword ptr fs:[0x28]
0x400206:	je	0x40022d
<Block for 0x40022d, 7 bytes>
0x40022d:	add	rsp, 0x38
0x400231:	pop	rbx
0x400232:	pop	rbp
0x400233:	ret	
<Block for 0x400208, 2 bytes>
0x400208:	jmp	0x400228
<Block for 0x400228, 5 bytes>
0x400228:	call	0x500010
