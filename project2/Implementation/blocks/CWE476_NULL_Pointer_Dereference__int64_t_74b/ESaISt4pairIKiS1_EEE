<Block for 0x4000cc, 57 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x30
0x4000d8:	mov	qword ptr [rbp - 0x28], rdi
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	dword ptr [rbp - 0x14], 2
0x4000f2:	lea	rdx, [rbp - 0x14]
0x4000f6:	mov	rax, qword ptr [rbp - 0x28]
0x4000fa:	mov	rsi, rdx
0x4000fd:	mov	rdi, rax
0x400100:	call	0x400180
<Block for 0x400105, 14 bytes>
0x400105:	mov	rax, qword ptr [rax]
0x400108:	mov	qword ptr [rbp - 0x10], rax
0x40010c:	cmp	qword ptr [rbp - 0x10], 0
0x400111:	je	0x400124
<Block for 0x400124, 12 bytes>
0x400124:	lea	rdi, [rip + 0x48]
0x40012b:	call	0x500010
<Block for 0x400113, 15 bytes>
0x400113:	mov	rax, qword ptr [rbp - 0x10]
0x400117:	mov	rax, qword ptr [rax]
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x400130, 16 bytes>
0x400130:	nop	
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	xor	rax, qword ptr fs:[0x28]
0x40013e:	je	0x400145
<Block for 0x400122, 2 bytes>
0x400122:	jmp	0x400130
<Block for 0x400145, 2 bytes>
0x400145:	leave	
0x400146:	ret	
<Block for 0x400140, 5 bytes>
0x400140:	call	0x500008
