<Block for 0x400256, 81 bytes>
0x400256:	endbr64	
0x40025a:	push	rbp
0x40025b:	mov	rbp, rsp
0x40025e:	add	rsp, -0x80
0x400262:	mov	rax, qword ptr fs:[0x28]
0x40026b:	mov	qword ptr [rbp - 8], rax
0x40026f:	xor	eax, eax
0x400271:	mov	eax, 0x10
0x400276:	sub	rax, 1
0x40027a:	add	rax, 0x6c
0x40027e:	mov	ecx, 0x10
0x400283:	mov	edx, 0
0x400288:	div	rcx
0x40028b:	imul	rax, rax, 0x10
0x40028f:	mov	rdx, rax
0x400292:	and	rdx, 0xfffffffffffff000
0x400299:	mov	rcx, rsp
0x40029c:	sub	rcx, rdx
0x40029f:	mov	rdx, rcx
0x4002a2:	cmp	rsp, rdx
0x4002a5:	je	0x4002b9
<Block for 0x4002b9, 26 bytes>
0x4002b9:	mov	rdx, rax
0x4002bc:	and	edx, 0xfff
0x4002c2:	sub	rsp, rdx
0x4002c5:	mov	rdx, rax
0x4002c8:	and	edx, 0xfff
0x4002ce:	test	rdx, rdx
0x4002d1:	je	0x4002e3
<Block for 0x4002a7, 18 bytes>
0x4002a7:	sub	rsp, 0x1000
0x4002ae:	or	qword ptr [rsp + 0xff8], 0
0x4002b7:	jmp	0x4002a2
<Block for 0x4002e3, 41 bytes>
0x4002e3:	mov	rax, rsp
0x4002e6:	add	rax, 0xf
0x4002ea:	shr	rax, 4
0x4002ee:	shl	rax, 4
0x4002f2:	mov	qword ptr [rbp - 0x78], rax
0x4002f6:	mov	rax, qword ptr [rbp - 0x78]
0x4002fa:	mov	edx, 0x63
0x4002ff:	mov	esi, 0x41
0x400304:	mov	rdi, rax
0x400307:	call	0x500000
<Block for 0x4002d3, 57 bytes>
0x4002d3:	and	eax, 0xfff
0x4002d8:	sub	rax, 8
0x4002dc:	add	rax, rsp
0x4002df:	or	qword ptr [rax], 0
0x4002e3:	mov	rax, rsp
0x4002e6:	add	rax, 0xf
0x4002ea:	shr	rax, 4
0x4002ee:	shl	rax, 4
0x4002f2:	mov	qword ptr [rbp - 0x78], rax
0x4002f6:	mov	rax, qword ptr [rbp - 0x78]
0x4002fa:	mov	edx, 0x63
0x4002ff:	mov	esi, 0x41
0x400304:	mov	rdi, rax
0x400307:	call	0x500000
<Block for 0x4002a2, 5 bytes>
0x4002a2:	cmp	rsp, rdx
0x4002a5:	je	0x4002b9
<Block for 0x40030c, 20 bytes>
0x40030c:	mov	rax, qword ptr [rbp - 0x78]
0x400310:	add	rax, 0x63
0x400314:	mov	byte ptr [rax], 0
0x400317:	mov	eax, 1
0x40031c:	test	eax, eax
0x40031e:	je	0x400328
<Block for 0x400328, 22 bytes>
0x400328:	lea	rax, [rbp - 0x70]
0x40032c:	mov	edx, 0x63
0x400331:	mov	esi, 0x43
0x400336:	mov	rdi, rax
0x400339:	call	0x500000
<Block for 0x400320, 30 bytes>
0x400320:	mov	rax, qword ptr [rbp - 0x78]
0x400324:	mov	qword ptr [rbp - 0x80], rax
0x400328:	lea	rax, [rbp - 0x70]
0x40032c:	mov	edx, 0x63
0x400331:	mov	esi, 0x43
0x400336:	mov	rdi, rax
0x400339:	call	0x500000
<Block for 0x40033e, 23 bytes>
0x40033e:	mov	byte ptr [rbp - 0xd], 0
0x400342:	lea	rdx, [rbp - 0x70]
0x400346:	mov	rax, qword ptr [rbp - 0x80]
0x40034a:	mov	rsi, rdx
0x40034d:	mov	rdi, rax
0x400350:	call	0x500008
<Block for 0x400355, 12 bytes>
0x400355:	mov	rax, qword ptr [rbp - 0x80]
0x400359:	mov	rdi, rax
0x40035c:	call	0x500010
<Block for 0x400361, 16 bytes>
0x400361:	nop	
0x400362:	mov	rax, qword ptr [rbp - 8]
0x400366:	xor	rax, qword ptr fs:[0x28]
0x40036f:	je	0x400376
<Block for 0x400376, 2 bytes>
0x400376:	leave	
0x400377:	ret	
<Block for 0x400371, 5 bytes>
0x400371:	call	0x500018
