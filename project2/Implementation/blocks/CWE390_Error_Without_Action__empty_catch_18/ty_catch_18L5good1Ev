<Block for 0x400132, 47 bytes>
0x400132:	endbr64	
0x400136:	push	rbp
0x400137:	mov	rbp, rsp
0x40013a:	push	r12
0x40013c:	push	rbx
0x40013d:	sub	rsp, 0x60
0x400141:	mov	rax, qword ptr fs:[0x28]
0x40014a:	mov	qword ptr [rbp - 0x18], rax
0x40014e:	xor	eax, eax
0x400150:	nop	
0x400151:	endbr64	
0x400155:	lea	rax, [rbp - 0x69]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500000
<Block for 0x400161, 23 bytes>
0x400161:	lea	rdx, [rbp - 0x69]
0x400165:	lea	rax, [rbp - 0x60]
0x400169:	lea	rsi, [rip + 0x19b]
0x400170:	mov	rdi, rax
0x400173:	call	0x500008
<Block for 0x400178, 12 bytes>
0x400178:	lea	rax, [rbp - 0x69]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500010
<Block for 0x400184, 5 bytes>
0x400184:	call	0x500018
<Block for 0x400189, 8 bytes>
0x400189:	movsxd	rbx, eax
0x40018c:	call	0x500018
<Block for 0x400191, 22 bytes>
0x400191:	movsxd	rdx, eax
0x400194:	lea	rax, [rbp - 0x40]
0x400198:	lea	rsi, [rbp - 0x60]
0x40019c:	mov	rcx, rbx
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500020
<Block for 0x4001a7, 12 bytes>
0x4001a7:	lea	rax, [rbp - 0x40]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500028
<Block for 0x4001b3, 8 bytes>
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500030
<Block for 0x4001bb, 12 bytes>
0x4001bb:	lea	rax, [rbp - 0x40]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500038
<Block for 0x4001c7, 12 bytes>
0x4001c7:	lea	rax, [rbp - 0x60]
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x500038
<Block for 0x4001d3, 20 bytes>
0x4001d3:	nop	
0x4001d4:	mov	rax, qword ptr [rbp - 0x18]
0x4001d8:	xor	rax, qword ptr fs:[0x28]
0x4001e1:	je	0x40028a
<Block for 0x40028a, 9 bytes>
0x40028a:	add	rsp, 0x60
0x40028e:	pop	rbx
0x40028f:	pop	r12
0x400291:	pop	rbp
0x400292:	ret	
<Block for 0x4001e7, 5 bytes>
0x4001e7:	jmp	0x400285
<Block for 0x400285, 5 bytes>
0x400285:	call	0x500058
