<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400081
<Block for 0x400081, 24 bytes>
0x400081:	mov	dword ptr [rbp - 0x2c], 0x14
0x400088:	mov	eax, dword ptr [rbp - 0x2c]
0x40008b:	cdqe	
0x40008d:	shl	rax, 2
0x400091:	mov	rdi, rax
0x400094:	call	0x500028
<Block for 0x400030, 45 bytes>
0x400030:	mov	qword ptr [rbp - 0x16], 0
0x400038:	mov	dword ptr [rbp - 0xe], 0
0x40003f:	mov	word ptr [rbp - 0xa], 0
0x400045:	mov	rdx, qword ptr [rip + 0xfffbc]
0x40004c:	lea	rax, [rbp - 0x16]
0x400050:	mov	esi, 0xe
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x400099, 11 bytes>
0x400099:	mov	qword ptr [rbp - 0x20], rax
0x40009d:	cmp	qword ptr [rbp - 0x20], 0
0x4000a2:	jne	0x4000ae
<Block for 0x40005d, 5 bytes>
0x40005d:	test	rax, rax
0x400060:	je	0x400073
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 0xffffffff
0x4000a9:	call	0x500030
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x28], 0
0x4000b6:	jmp	0x4000d6
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x152]
0x40007a:	call	0x500020
<Block for 0x400062, 12 bytes>
0x400062:	lea	rax, [rbp - 0x16]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x4000d6, 11 bytes>
0x4000d6:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d9:	cdqe	
0x4000db:	cmp	qword ptr [rbp - 0x28], rax
0x4000df:	jb	0x4000b8
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x400088
<Block for 0x40006e, 5 bytes>
0x40006e:	mov	dword ptr [rbp - 0x2c], eax
0x400071:	jmp	0x400088
<Block for 0x4000b8, 41 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x28]
0x4000bc:	lea	rdx, [rax*4]
0x4000c4:	mov	rax, qword ptr [rbp - 0x20]
0x4000c8:	add	rax, rdx
0x4000cb:	mov	dword ptr [rax], 0
0x4000d1:	add	qword ptr [rbp - 0x28], 1
0x4000d6:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d9:	cdqe	
0x4000db:	cmp	qword ptr [rbp - 0x28], rax
0x4000df:	jb	0x4000b8
<Block for 0x4000e1, 13 bytes>
0x4000e1:	mov	rax, qword ptr [rbp - 0x20]
0x4000e5:	mov	eax, dword ptr [rax]
0x4000e7:	mov	edi, eax
0x4000e9:	call	0x500038
<Block for 0x400088, 17 bytes>
0x400088:	mov	eax, dword ptr [rbp - 0x2c]
0x40008b:	cdqe	
0x40008d:	shl	rax, 2
0x400091:	mov	rdi, rax
0x400094:	call	0x500028
<Block for 0x4000ee, 12 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0x20]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500040
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x40010f
<Block for 0x40010f, 2 bytes>
0x40010f:	leave	
0x400110:	ret	
<Block for 0x40010a, 5 bytes>
0x40010a:	call	0x500048
