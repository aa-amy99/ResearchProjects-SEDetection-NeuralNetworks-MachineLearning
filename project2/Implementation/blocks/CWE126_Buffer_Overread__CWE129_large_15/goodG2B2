<Block for 0x400244, 88 bytes>
0x400244:	endbr64	
0x400248:	push	rbp
0x400249:	mov	rbp, rsp
0x40024c:	sub	rsp, 0x40
0x400250:	mov	rax, qword ptr fs:[0x28]
0x400259:	mov	qword ptr [rbp - 8], rax
0x40025d:	xor	eax, eax
0x40025f:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400266:	mov	dword ptr [rbp - 0x34], 7
0x40026d:	nop	
0x40026e:	mov	qword ptr [rbp - 0x30], 0
0x400276:	mov	qword ptr [rbp - 0x28], 0
0x40027e:	mov	qword ptr [rbp - 0x20], 0
0x400286:	mov	qword ptr [rbp - 0x18], 0
0x40028e:	mov	qword ptr [rbp - 0x10], 0
0x400296:	cmp	dword ptr [rbp - 0x34], 0
0x40029a:	js	0x4002ae
<Block for 0x4002ae, 12 bytes>
0x4002ae:	lea	rdi, [rip + 0x53]
0x4002b5:	call	0x500008
<Block for 0x40029c, 16 bytes>
0x40029c:	mov	eax, dword ptr [rbp - 0x34]
0x40029f:	cdqe	
0x4002a1:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002a5:	mov	edi, eax
0x4002a7:	call	0x500000
<Block for 0x4002ba, 17 bytes>
0x4002ba:	nop	
0x4002bb:	nop	
0x4002bc:	mov	rax, qword ptr [rbp - 8]
0x4002c0:	xor	rax, qword ptr fs:[0x28]
0x4002c9:	je	0x4002d0
<Block for 0x4002ac, 2 bytes>
0x4002ac:	jmp	0x4002ba
<Block for 0x4002d0, 2 bytes>
0x4002d0:	leave	
0x4002d1:	ret	
<Block for 0x4002cb, 5 bytes>
0x4002cb:	call	0x500010
