<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	eax, dword ptr [rip + 0xfffd7]
0x400029:	test	eax, eax
0x40002b:	je	0x40005c
<Block for 0x40005c, 22 bytes>
0x40005c:	lea	rax, [rbp - 0x70]
0x400060:	mov	edx, 0x63
0x400065:	mov	esi, 0x43
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x40002d, 10 bytes>
0x40002d:	mov	edi, 0x32
0x400032:	call	0x500008
<Block for 0x400072, 16 bytes>
0x400072:	mov	byte ptr [rbp - 0xd], 0
0x400076:	lea	rax, [rbp - 0x70]
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500018
<Block for 0x400037, 26 bytes>
0x400037:	mov	qword ptr [rbp - 0x78], rax
0x40003b:	mov	rax, qword ptr [rbp - 0x78]
0x40003f:	mov	edx, 0x31
0x400044:	mov	esi, 0x41
0x400049:	mov	rdi, rax
0x40004c:	call	0x500010
<Block for 0x400082, 22 bytes>
0x400082:	mov	rdx, rax
0x400085:	mov	rcx, qword ptr [rbp - 0x78]
0x400089:	lea	rax, [rbp - 0x70]
0x40008d:	mov	rsi, rcx
0x400090:	mov	rdi, rax
0x400093:	call	0x500020
<Block for 0x400051, 33 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	add	rax, 0x31
0x400059:	mov	byte ptr [rax], 0
0x40005c:	lea	rax, [rbp - 0x70]
0x400060:	mov	edx, 0x63
0x400065:	mov	esi, 0x43
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400098, 16 bytes>
0x400098:	mov	byte ptr [rbp - 0xd], 0
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500028
<Block for 0x4000a8, 7 bytes>
0x4000a8:	cmp	qword ptr [rbp - 0x78], 0
0x4000ad:	je	0x4000bb
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x4000af, 12 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 0x78]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500030
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500038
