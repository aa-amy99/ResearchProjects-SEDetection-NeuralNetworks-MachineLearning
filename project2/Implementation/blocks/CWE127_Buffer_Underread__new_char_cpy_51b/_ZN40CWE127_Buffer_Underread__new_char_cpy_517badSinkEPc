<Block for 0x400000, 62 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	qword ptr [rbp - 0xd8], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	lea	rax, [rbp - 0xd0]
0x40002c:	mov	edx, 0xc7
0x400031:	mov	esi, 0x43
0x400036:	mov	rdi, rax
0x400039:	call	0x500000
<Block for 0x40003e, 29 bytes>
0x40003e:	mov	byte ptr [rbp - 9], 0
0x400042:	mov	rdx, qword ptr [rbp - 0xd8]
0x400049:	lea	rax, [rbp - 0xd0]
0x400050:	mov	rsi, rdx
0x400053:	mov	rdi, rax
0x400056:	call	0x500008
<Block for 0x40005b, 15 bytes>
0x40005b:	lea	rax, [rbp - 0xd0]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40006a, 16 bytes>
0x40006a:	nop	
0x40006b:	mov	rax, qword ptr [rbp - 8]
0x40006f:	xor	rax, qword ptr fs:[0x28]
0x400078:	je	0x40007f
<Block for 0x40007f, 2 bytes>
0x40007f:	leave	
0x400080:	ret	
<Block for 0x40007a, 5 bytes>
0x40007a:	call	0x500018
