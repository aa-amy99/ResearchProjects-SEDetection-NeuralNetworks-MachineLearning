<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	edi, 0x64
0x40002e:	call	0x500000
<Block for 0x400033, 32 bytes>
0x400033:	mov	qword ptr [rbp - 0xd8], rax
0x40003a:	mov	rax, qword ptr [rbp - 0xd8]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 58 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0xd8]
0x40005a:	add	rax, 0x63
0x40005e:	mov	byte ptr [rax], 0
0x400061:	mov	rax, qword ptr [rbp - 0xd8]
0x400068:	sub	rax, 8
0x40006c:	mov	qword ptr [rbp - 0xe0], rax
0x400073:	nop	
0x400074:	lea	rax, [rbp - 0xd0]
0x40007b:	mov	edx, 0xc7
0x400080:	mov	esi, 0x43
0x400085:	mov	rdi, rax
0x400088:	call	0x500008
<Block for 0x40008d, 29 bytes>
0x40008d:	mov	byte ptr [rbp - 9], 0
0x400091:	mov	rdx, qword ptr [rbp - 0xe0]
0x400098:	lea	rax, [rbp - 0xd0]
0x40009f:	mov	rsi, rdx
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500010
<Block for 0x4000aa, 15 bytes>
0x4000aa:	lea	rax, [rbp - 0xd0]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000b9, 16 bytes>
0x4000b9:	nop	
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	xor	rax, qword ptr fs:[0x28]
0x4000c7:	je	0x4000ce
<Block for 0x4000ce, 2 bytes>
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500020
