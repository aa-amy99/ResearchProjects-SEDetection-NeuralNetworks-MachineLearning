<Block for 0x4000d0, 51 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0xe0
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	qword ptr [rbp - 0xe0], 0
0x4000f9:	mov	edi, 0x64
0x4000fe:	call	0x500000
<Block for 0x400103, 32 bytes>
0x400103:	mov	qword ptr [rbp - 0xd8], rax
0x40010a:	mov	rax, qword ptr [rbp - 0xd8]
0x400111:	mov	edx, 0x63
0x400116:	mov	esi, 0x41
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x400123, 54 bytes>
0x400123:	mov	rax, qword ptr [rbp - 0xd8]
0x40012a:	add	rax, 0x63
0x40012e:	mov	byte ptr [rax], 0
0x400131:	mov	rax, qword ptr [rbp - 0xd8]
0x400138:	mov	qword ptr [rbp - 0xe0], rax
0x40013f:	nop	
0x400140:	lea	rax, [rbp - 0xd0]
0x400147:	mov	edx, 0xc7
0x40014c:	mov	esi, 0x43
0x400151:	mov	rdi, rax
0x400154:	call	0x500008
<Block for 0x400159, 29 bytes>
0x400159:	mov	byte ptr [rbp - 9], 0
0x40015d:	mov	rdx, qword ptr [rbp - 0xe0]
0x400164:	lea	rax, [rbp - 0xd0]
0x40016b:	mov	rsi, rdx
0x40016e:	mov	rdi, rax
0x400171:	call	0x500010
<Block for 0x400176, 15 bytes>
0x400176:	lea	rax, [rbp - 0xd0]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500018
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500020
