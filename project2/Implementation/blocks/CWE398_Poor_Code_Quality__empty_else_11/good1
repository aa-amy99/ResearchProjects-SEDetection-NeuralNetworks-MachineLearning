<Block for 0x400071, 22 bytes>
0x400071:	endbr64	
0x400075:	push	rbp
0x400076:	mov	rbp, rsp
0x400079:	sub	rsp, 0x10
0x40007d:	mov	eax, 0
0x400082:	call	0x500018
<Block for 0x400087, 4 bytes>
0x400087:	test	eax, eax
0x400089:	je	0x400099
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500008
<Block for 0x40008b, 12 bytes>
0x40008b:	lea	rdi, [rip + 0x135]
0x400092:	call	0x500010
<Block for 0x40009e, 55 bytes>
0x40009e:	mov	edx, eax
0x4000a0:	movsxd	rax, edx
0x4000a3:	imul	rax, rax, 0x55555556
0x4000aa:	shr	rax, 0x20
0x4000ae:	mov	rcx, rax
0x4000b1:	mov	eax, edx
0x4000b3:	sar	eax, 0x1f
0x4000b6:	mov	esi, ecx
0x4000b8:	sub	esi, eax
0x4000ba:	mov	eax, esi
0x4000bc:	mov	dword ptr [rbp - 4], eax
0x4000bf:	mov	ecx, dword ptr [rbp - 4]
0x4000c2:	mov	eax, ecx
0x4000c4:	add	eax, eax
0x4000c6:	add	eax, ecx
0x4000c8:	sub	edx, eax
0x4000ca:	mov	eax, edx
0x4000cc:	mov	dword ptr [rbp - 4], eax
0x4000cf:	cmp	dword ptr [rbp - 4], 0
0x4000d3:	jne	0x4000e3
<Block for 0x400097, 2 bytes>
0x400097:	jmp	0x4000fb
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rdi, [rip + 0x100]
0x4000dc:	call	0x500010
<Block for 0x4000e3, 12 bytes>
0x4000e3:	lea	rdi, [rip + 0xb2]
0x4000ea:	call	0x500010
<Block for 0x4000fb, 3 bytes>
0x4000fb:	nop	
0x4000fc:	leave	
0x4000fd:	ret	
<Block for 0x4000e1, 2 bytes>
0x4000e1:	jmp	0x4000ef
<Block for 0x4000ef, 12 bytes>
0x4000ef:	lea	rdi, [rip + 0xfe]
0x4000f6:	call	0x500010
