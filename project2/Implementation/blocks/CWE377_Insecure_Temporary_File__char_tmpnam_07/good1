<Block for 0x40007f, 38 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	sub	rsp, 0x30
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	mov	eax, dword ptr [rip + 0x12c]
0x4000a0:	cmp	eax, 5
0x4000a3:	je	0x4000b3
<Block for 0x4000b3, 40 bytes>
0x4000b3:	movabs	rax, 0x6c69662f706d742f
0x4000bd:	movabs	rdx, 0x58585858585865
0x4000c7:	mov	qword ptr [rbp - 0x20], rax
0x4000cb:	mov	qword ptr [rbp - 0x18], rdx
0x4000cf:	lea	rax, [rbp - 0x20]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500028
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x151]
0x4000ac:	call	0x500010
<Block for 0x4000db, 15 bytes>
0x4000db:	mov	dword ptr [rbp - 0x24], eax
0x4000de:	lea	rax, [rbp - 0x20]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500010
<Block for 0x4000b1, 2 bytes>
0x4000b1:	jmp	0x400106
<Block for 0x4000ea, 6 bytes>
0x4000ea:	cmp	dword ptr [rbp - 0x24], -1
0x4000ee:	je	0x400106
<Block for 0x400106, 16 bytes>
0x400106:	nop	
0x400107:	mov	rax, qword ptr [rbp - 8]
0x40010b:	xor	rax, qword ptr fs:[0x28]
0x400114:	je	0x40011b
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rdi, [rip + 0xd9]
0x4000f7:	call	0x500010
<Block for 0x40011b, 2 bytes>
0x40011b:	leave	
0x40011c:	ret	
<Block for 0x400116, 5 bytes>
0x400116:	call	0x500030
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	eax, dword ptr [rbp - 0x24]
0x4000ff:	mov	edi, eax
0x400101:	call	0x500020
