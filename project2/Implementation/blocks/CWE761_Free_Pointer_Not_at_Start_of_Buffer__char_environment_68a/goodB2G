<Block for 0x400097, 22 bytes>
0x400097:	endbr64	
0x40009b:	push	rbp
0x40009c:	mov	rbp, rsp
0x40009f:	sub	rsp, 0x20
0x4000a3:	mov	edi, 0x64
0x4000a8:	call	0x500000
<Block for 0x4000ad, 11 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x18], rax
0x4000b1:	cmp	qword ptr [rbp - 0x18], 0
0x4000b6:	jne	0x4000c2
<Block for 0x4000b8, 10 bytes>
0x4000b8:	mov	edi, 0xffffffff
0x4000bd:	call	0x500008
<Block for 0x4000c2, 19 bytes>
0x4000c2:	mov	rax, qword ptr [rbp - 0x18]
0x4000c6:	mov	byte ptr [rax], 0
0x4000c9:	mov	rax, qword ptr [rbp - 0x18]
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500010
<Block for 0x4000d5, 16 bytes>
0x4000d5:	mov	qword ptr [rbp - 0x10], rax
0x4000d9:	lea	rdi, [rip + 0x63]
0x4000e0:	call	0x500018
<Block for 0x4000e5, 11 bytes>
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	cmp	qword ptr [rbp - 8], 0
0x4000ee:	je	0x400116
<Block for 0x400116, 21 bytes>
0x400116:	mov	rax, qword ptr [rbp - 0x18]
0x40011a:	mov	qword ptr [rip - 0x119], rax
0x400121:	mov	eax, 0
0x400126:	call	0x500030
<Block for 0x4000f0, 38 bytes>
0x4000f0:	mov	eax, 0x63
0x4000f5:	sub	rax, qword ptr [rbp - 0x10]
0x4000f9:	mov	rdx, rax
0x4000fc:	mov	rcx, qword ptr [rbp - 0x18]
0x400100:	mov	rax, qword ptr [rbp - 0x10]
0x400104:	add	rcx, rax
0x400107:	mov	rax, qword ptr [rbp - 8]
0x40010b:	mov	rsi, rax
0x40010e:	mov	rdi, rcx
0x400111:	call	0x500020
<Block for 0x40012b, 3 bytes>
0x40012b:	nop	
0x40012c:	leave	
0x40012d:	ret	
