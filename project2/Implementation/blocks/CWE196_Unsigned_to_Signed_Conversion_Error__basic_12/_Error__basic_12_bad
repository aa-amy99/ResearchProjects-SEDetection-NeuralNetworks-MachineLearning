<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400043
<Block for 0x400043, 5 bytes>
0x400043:	call	0x500008
<Block for 0x40001a, 5 bytes>
0x40001a:	call	0x500008
<Block for 0x400048, 8 bytes>
0x400048:	mov	dword ptr [rbp - 0xc], eax
0x40004b:	call	0x500008
<Block for 0x40001f, 8 bytes>
0x40001f:	mov	dword ptr [rbp - 0x10], eax
0x400022:	call	0x500008
<Block for 0x400050, 7 bytes>
0x400050:	and	eax, 1
0x400053:	test	eax, eax
0x400055:	jne	0x40005a
<Block for 0x400027, 7 bytes>
0x400027:	and	eax, 1
0x40002a:	test	eax, eax
0x40002c:	jne	0x400031
<Block for 0x400057, 10 bytes>
0x400057:	not	dword ptr [rbp - 0xc]
0x40005a:	mov	eax, dword ptr [rbp - 0xc]
0x40005d:	test	eax, eax
0x40005f:	jns	0x40006b
<Block for 0x40005a, 7 bytes>
0x40005a:	mov	eax, dword ptr [rbp - 0xc]
0x40005d:	test	eax, eax
0x40005f:	jns	0x40006b
<Block for 0x40002e, 19 bytes>
0x40002e:	not	dword ptr [rbp - 0x10]
0x400031:	mov	eax, dword ptr [rbp - 0x10]
0x400034:	mov	dword ptr [rbp - 4], eax
0x400037:	mov	eax, dword ptr [rbp - 4]
0x40003a:	mov	edi, eax
0x40003c:	call	0x500010
<Block for 0x400031, 16 bytes>
0x400031:	mov	eax, dword ptr [rbp - 0x10]
0x400034:	mov	dword ptr [rbp - 4], eax
0x400037:	mov	eax, dword ptr [rbp - 4]
0x40003a:	mov	edi, eax
0x40003c:	call	0x500010
<Block for 0x400061, 10 bytes>
0x400061:	mov	edi, 1
0x400066:	call	0x500018
<Block for 0x40006b, 16 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0xc]
0x40006e:	mov	dword ptr [rbp - 8], eax
0x400071:	mov	eax, dword ptr [rbp - 8]
0x400074:	mov	edi, eax
0x400076:	call	0x500010
<Block for 0x400041, 2 bytes>
0x400041:	jmp	0x40007b
<Block for 0x40007b, 3 bytes>
0x40007b:	nop	
0x40007c:	leave	
0x40007d:	ret	
