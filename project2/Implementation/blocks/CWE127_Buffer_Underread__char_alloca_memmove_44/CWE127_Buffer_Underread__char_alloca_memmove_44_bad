<Block for 0x400078, 92 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x20
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	lea	rax, [rip - 0x9a]
0x40009a:	mov	qword ptr [rbp - 0x20], rax
0x40009e:	mov	eax, 0x10
0x4000a3:	sub	rax, 1
0x4000a7:	add	rax, 0x6c
0x4000ab:	mov	esi, 0x10
0x4000b0:	mov	edx, 0
0x4000b5:	div	rsi
0x4000b8:	imul	rax, rax, 0x10
0x4000bc:	mov	rdx, rax
0x4000bf:	and	rdx, 0xfffffffffffff000
0x4000c6:	mov	rcx, rsp
0x4000c9:	sub	rcx, rdx
0x4000cc:	mov	rdx, rcx
0x4000cf:	cmp	rsp, rdx
0x4000d2:	je	0x4000e6
<Block for 0x4000e6, 26 bytes>
0x4000e6:	mov	rdx, rax
0x4000e9:	and	edx, 0xfff
0x4000ef:	sub	rsp, rdx
0x4000f2:	mov	rdx, rax
0x4000f5:	and	edx, 0xfff
0x4000fb:	test	rdx, rdx
0x4000fe:	je	0x400110
<Block for 0x4000d4, 18 bytes>
0x4000d4:	sub	rsp, 0x1000
0x4000db:	or	qword ptr [rsp + 0xff8], 0
0x4000e4:	jmp	0x4000cf
<Block for 0x400110, 41 bytes>
0x400110:	mov	rax, rsp
0x400113:	add	rax, 0xf
0x400117:	shr	rax, 4
0x40011b:	shl	rax, 4
0x40011f:	mov	qword ptr [rbp - 0x18], rax
0x400123:	mov	rax, qword ptr [rbp - 0x18]
0x400127:	mov	edx, 0x63
0x40012c:	mov	esi, 0x41
0x400131:	mov	rdi, rax
0x400134:	call	0x500000
<Block for 0x400100, 57 bytes>
0x400100:	and	eax, 0xfff
0x400105:	sub	rax, 8
0x400109:	add	rax, rsp
0x40010c:	or	qword ptr [rax], 0
0x400110:	mov	rax, rsp
0x400113:	add	rax, 0xf
0x400117:	shr	rax, 4
0x40011b:	shl	rax, 4
0x40011f:	mov	qword ptr [rbp - 0x18], rax
0x400123:	mov	rax, qword ptr [rbp - 0x18]
0x400127:	mov	edx, 0x63
0x40012c:	mov	esi, 0x41
0x400131:	mov	rdi, rax
0x400134:	call	0x500000
<Block for 0x4000cf, 5 bytes>
0x4000cf:	cmp	rsp, rdx
0x4000d2:	je	0x4000e6
<Block for 0x400139, 36 bytes>
0x400139:	mov	rax, qword ptr [rbp - 0x18]
0x40013d:	add	rax, 0x63
0x400141:	mov	byte ptr [rax], 0
0x400144:	mov	rax, qword ptr [rbp - 0x18]
0x400148:	sub	rax, 8
0x40014c:	mov	qword ptr [rbp - 0x10], rax
0x400150:	mov	rax, qword ptr [rbp - 0x10]
0x400154:	mov	rdx, qword ptr [rbp - 0x20]
0x400158:	mov	rdi, rax
0x40015b:	call	rdx
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500018
