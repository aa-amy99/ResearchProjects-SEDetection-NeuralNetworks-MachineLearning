<Block for 0x4002e2, 82 bytes>
0x4002e2:	endbr64	
0x4002e6:	push	rbp
0x4002e7:	mov	rbp, rsp
0x4002ea:	sub	rsp, 0x40
0x4002ee:	mov	rax, qword ptr fs:[0x28]
0x4002f7:	mov	qword ptr [rbp - 8], rax
0x4002fb:	xor	eax, eax
0x4002fd:	mov	eax, dword ptr [rip + 0x219]
0x400303:	mov	dword ptr [rbp - 0x34], eax
0x400306:	mov	qword ptr [rbp - 0x30], 0
0x40030e:	mov	qword ptr [rbp - 0x28], 0
0x400316:	mov	qword ptr [rbp - 0x20], 0
0x40031e:	mov	qword ptr [rbp - 0x18], 0
0x400326:	mov	qword ptr [rbp - 0x10], 0
0x40032e:	cmp	dword ptr [rbp - 0x34], 0
0x400332:	js	0x40036c
<Block for 0x40036c, 12 bytes>
0x40036c:	lea	rdi, [rip + 0x1cd]
0x400373:	call	0x500008
<Block for 0x400334, 6 bytes>
0x400334:	cmp	dword ptr [rbp - 0x34], 9
0x400338:	jg	0x40036c
<Block for 0x400378, 16 bytes>
0x400378:	nop	
0x400379:	mov	rax, qword ptr [rbp - 8]
0x40037d:	xor	rax, qword ptr fs:[0x28]
0x400386:	je	0x40038d
<Block for 0x40033a, 22 bytes>
0x40033a:	mov	eax, dword ptr [rbp - 0x34]
0x40033d:	cdqe	
0x40033f:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400347:	mov	dword ptr [rbp - 0x38], 0
0x40034e:	jmp	0x400364
<Block for 0x40038d, 2 bytes>
0x40038d:	leave	
0x40038e:	ret	
<Block for 0x400388, 5 bytes>
0x400388:	call	0x500010
<Block for 0x400364, 6 bytes>
0x400364:	cmp	dword ptr [rbp - 0x38], 9
0x400368:	jle	0x400350
<Block for 0x400350, 16 bytes>
0x400350:	mov	eax, dword ptr [rbp - 0x38]
0x400353:	cdqe	
0x400355:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400359:	mov	edi, eax
0x40035b:	call	0x500000
<Block for 0x40036a, 2 bytes>
0x40036a:	jmp	0x400378
<Block for 0x400360, 10 bytes>
0x400360:	add	dword ptr [rbp - 0x38], 1
0x400364:	cmp	dword ptr [rbp - 0x38], 9
0x400368:	jle	0x400350
