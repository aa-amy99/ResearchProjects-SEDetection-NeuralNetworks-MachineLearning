<Block for 0x400000, 42 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	dword ptr [rbp - 0x118], 0
0x400028:	jmp	0x400098
<Block for 0x400098, 9 bytes>
0x400098:	cmp	dword ptr [rbp - 0x118], 0
0x40009f:	jle	0x40002a
<Block for 0x40002a, 25 bytes>
0x40002a:	lea	rax, [rbp - 0xa0]
0x400031:	mov	edx, 0x95
0x400036:	mov	esi, 0x41
0x40003b:	mov	rdi, rax
0x40003e:	call	0x500000
<Block for 0x4000a1, 16 bytes>
0x4000a1:	nop	
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	xor	rax, qword ptr fs:[0x28]
0x4000af:	je	0x4000b6
<Block for 0x400043, 16 bytes>
0x400043:	mov	byte ptr [rbp - 0xb], 0
0x400047:	mov	dword ptr [rbp - 0x114], 0
0x400051:	jmp	0x400079
<Block for 0x4000b6, 2 bytes>
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000b1, 5 bytes>
0x4000b1:	call	0x500010
<Block for 0x400079, 9 bytes>
0x400079:	cmp	dword ptr [rbp - 0x114], 0x62
0x400080:	jle	0x400053
<Block for 0x400053, 47 bytes>
0x400053:	mov	eax, dword ptr [rbp - 0x114]
0x400059:	cdqe	
0x40005b:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400063:	mov	eax, dword ptr [rbp - 0x114]
0x400069:	cdqe	
0x40006b:	mov	byte ptr [rbp + rax - 0x110], dl
0x400072:	add	dword ptr [rbp - 0x114], 1
0x400079:	cmp	dword ptr [rbp - 0x114], 0x62
0x400080:	jle	0x400053
<Block for 0x400082, 15 bytes>
0x400082:	lea	rax, [rbp - 0x110]
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x400091, 16 bytes>
0x400091:	add	dword ptr [rbp - 0x118], 1
0x400098:	cmp	dword ptr [rbp - 0x118], 0
0x40009f:	jle	0x40002a
