<Block for 0x4000b8, 42 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0x120
0x4000c7:	mov	rax, qword ptr fs:[0x28]
0x4000d0:	mov	qword ptr [rbp - 8], rax
0x4000d4:	xor	eax, eax
0x4000d6:	mov	dword ptr [rbp - 0x118], 0
0x4000e0:	jmp	0x400157
<Block for 0x400157, 9 bytes>
0x400157:	cmp	dword ptr [rbp - 0x118], 0
0x40015e:	jle	0x4000e2
<Block for 0x4000e2, 25 bytes>
0x4000e2:	lea	rax, [rbp - 0xa0]
0x4000e9:	mov	edx, 0x95
0x4000ee:	mov	esi, 0x41
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500000
<Block for 0x400160, 16 bytes>
0x400160:	nop	
0x400161:	mov	rax, qword ptr [rbp - 8]
0x400165:	xor	rax, qword ptr fs:[0x28]
0x40016e:	je	0x400175
<Block for 0x4000fb, 16 bytes>
0x4000fb:	mov	byte ptr [rbp - 0xb], 0
0x4000ff:	mov	dword ptr [rbp - 0x114], 0
0x400109:	jmp	0x400131
<Block for 0x400175, 2 bytes>
0x400175:	leave	
0x400176:	ret	
<Block for 0x400170, 5 bytes>
0x400170:	call	0x500010
<Block for 0x400131, 9 bytes>
0x400131:	cmp	dword ptr [rbp - 0x114], 0x62
0x400138:	jle	0x40010b
<Block for 0x40010b, 47 bytes>
0x40010b:	mov	eax, dword ptr [rbp - 0x114]
0x400111:	cdqe	
0x400113:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x40011b:	mov	eax, dword ptr [rbp - 0x114]
0x400121:	cdqe	
0x400123:	mov	byte ptr [rbp + rax - 0x110], dl
0x40012a:	add	dword ptr [rbp - 0x114], 1
0x400131:	cmp	dword ptr [rbp - 0x114], 0x62
0x400138:	jle	0x40010b
<Block for 0x40013a, 22 bytes>
0x40013a:	mov	byte ptr [rbp - 0xad], 0
0x400141:	lea	rax, [rbp - 0x110]
0x400148:	mov	rdi, rax
0x40014b:	call	0x500008
<Block for 0x400150, 16 bytes>
0x400150:	add	dword ptr [rbp - 0x118], 1
0x400157:	cmp	dword ptr [rbp - 0x118], 0
0x40015e:	jle	0x4000e2
