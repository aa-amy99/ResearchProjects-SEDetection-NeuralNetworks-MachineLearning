<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400022:	mov	qword ptr [rbp - 0x16], 0
0x40002a:	mov	dword ptr [rbp - 0xe], 0
0x400031:	mov	word ptr [rbp - 0xa], 0
0x400037:	mov	rdx, qword ptr [rip + 0xfffc2]
0x40003e:	lea	rax, [rbp - 0x16]
0x400042:	mov	esi, 0xe
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 5 bytes>
0x40004f:	test	rax, rax
0x400052:	je	0x400065
<Block for 0x400065, 12 bytes>
0x400065:	lea	rdi, [rip + 0x134]
0x40006c:	call	0x500018
<Block for 0x400054, 12 bytes>
0x400054:	lea	rax, [rbp - 0x16]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500010
<Block for 0x400071, 18 bytes>
0x400071:	nop	
0x400072:	mov	eax, dword ptr [rbp - 0x2c]
0x400075:	cdqe	
0x400077:	shl	rax, 2
0x40007b:	mov	rdi, rax
0x40007e:	call	0x500020
<Block for 0x400060, 5 bytes>
0x400060:	mov	dword ptr [rbp - 0x2c], eax
0x400063:	jmp	0x400071
<Block for 0x400083, 11 bytes>
0x400083:	mov	qword ptr [rbp - 0x20], rax
0x400087:	cmp	qword ptr [rbp - 0x20], 0
0x40008c:	jne	0x400098
<Block for 0x40008e, 10 bytes>
0x40008e:	mov	edi, 0xffffffff
0x400093:	call	0x500028
<Block for 0x400098, 10 bytes>
0x400098:	mov	qword ptr [rbp - 0x28], 0
0x4000a0:	jmp	0x4000c0
<Block for 0x4000c0, 11 bytes>
0x4000c0:	mov	eax, dword ptr [rbp - 0x2c]
0x4000c3:	cdqe	
0x4000c5:	cmp	qword ptr [rbp - 0x28], rax
0x4000c9:	jb	0x4000a2
<Block for 0x4000a2, 41 bytes>
0x4000a2:	mov	rax, qword ptr [rbp - 0x28]
0x4000a6:	lea	rdx, [rax*4]
0x4000ae:	mov	rax, qword ptr [rbp - 0x20]
0x4000b2:	add	rax, rdx
0x4000b5:	mov	dword ptr [rax], 0
0x4000bb:	add	qword ptr [rbp - 0x28], 1
0x4000c0:	mov	eax, dword ptr [rbp - 0x2c]
0x4000c3:	cdqe	
0x4000c5:	cmp	qword ptr [rbp - 0x28], rax
0x4000c9:	jb	0x4000a2
<Block for 0x4000cb, 13 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 0x20]
0x4000cf:	mov	eax, dword ptr [rax]
0x4000d1:	mov	edi, eax
0x4000d3:	call	0x500030
<Block for 0x4000d8, 12 bytes>
0x4000d8:	mov	rax, qword ptr [rbp - 0x20]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500038
<Block for 0x4000e4, 16 bytes>
0x4000e4:	nop	
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	xor	rax, qword ptr fs:[0x28]
0x4000f2:	je	0x4000f9
<Block for 0x4000f9, 2 bytes>
0x4000f9:	leave	
0x4000fa:	ret	
<Block for 0x4000f4, 5 bytes>
0x4000f4:	call	0x500040
