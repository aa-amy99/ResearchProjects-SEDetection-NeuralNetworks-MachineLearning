<Block for 0x4001bc, 42 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	add	rsp, -0x80
0x4001c8:	mov	rax, qword ptr fs:[0x28]
0x4001d1:	mov	qword ptr [rbp - 8], rax
0x4001d5:	xor	eax, eax
0x4001d7:	mov	eax, dword ptr [rip + 0xffe23]
0x4001dd:	cmp	eax, 5
0x4001e0:	jne	0x400285
<Block for 0x4001e6, 142 bytes>
0x4001e6:	mov	qword ptr [rbp - 0x70], 0
0x4001ee:	mov	qword ptr [rbp - 0x68], 0
0x4001f6:	mov	qword ptr [rbp - 0x60], 0
0x4001fe:	mov	qword ptr [rbp - 0x58], 0
0x400206:	mov	qword ptr [rbp - 0x50], 0
0x40020e:	mov	qword ptr [rbp - 0x48], 0
0x400216:	mov	qword ptr [rbp - 0x40], 0
0x40021e:	mov	qword ptr [rbp - 0x38], 0
0x400226:	mov	qword ptr [rbp - 0x30], 0
0x40022e:	mov	qword ptr [rbp - 0x28], 0
0x400236:	mov	qword ptr [rbp - 0x20], 0
0x40023e:	mov	qword ptr [rbp - 0x18], 0
0x400246:	mov	dword ptr [rbp - 0x10], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	qword ptr [rbp - 0x78], rax
0x400255:	mov	rax, qword ptr [rbp - 0x78]
0x400259:	mov	rdx, rax
0x40025c:	lea	rsi, [rip + 0x58]
0x400263:	lea	rdi, [rip + 0x57]
0x40026a:	mov	eax, 0
0x40026f:	call	0x500008
<Block for 0x400285, 16 bytes>
0x400285:	nop	
0x400286:	mov	rax, qword ptr [rbp - 8]
0x40028a:	xor	rax, qword ptr fs:[0x28]
0x400293:	je	0x40029a
<Block for 0x400274, 5 bytes>
0x400274:	cmp	eax, -1
0x400277:	jne	0x400285
<Block for 0x40029a, 2 bytes>
0x40029a:	leave	
0x40029b:	ret	
<Block for 0x400295, 5 bytes>
0x400295:	call	0x500010
<Block for 0x400279, 12 bytes>
0x400279:	lea	rdi, [rip + 0x5d]
0x400280:	call	0x500018
