<Block for 0x4000b2, 43 bytes>
0x4000b2:	endbr64	
0x4000b6:	push	rbp
0x4000b7:	mov	rbp, rsp
0x4000ba:	sub	rsp, 0x40
0x4000be:	mov	rax, qword ptr fs:[0x28]
0x4000c7:	mov	qword ptr [rbp - 8], rax
0x4000cb:	xor	eax, eax
0x4000cd:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000d4:	mov	dword ptr [rbp - 0x3c], 0
0x4000db:	jmp	0x4000e8
<Block for 0x4000e8, 6 bytes>
0x4000e8:	cmp	dword ptr [rbp - 0x3c], 0
0x4000ec:	jle	0x4000dd
<Block for 0x4000dd, 17 bytes>
0x4000dd:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000e4:	add	dword ptr [rbp - 0x3c], 1
0x4000e8:	cmp	dword ptr [rbp - 0x3c], 0
0x4000ec:	jle	0x4000dd
<Block for 0x4000ee, 9 bytes>
0x4000ee:	mov	dword ptr [rbp - 0x38], 0
0x4000f5:	jmp	0x40014d
<Block for 0x40014d, 6 bytes>
0x40014d:	cmp	dword ptr [rbp - 0x38], 0
0x400151:	jle	0x4000f7
<Block for 0x4000f7, 46 bytes>
0x4000f7:	mov	qword ptr [rbp - 0x30], 0
0x4000ff:	mov	qword ptr [rbp - 0x28], 0
0x400107:	mov	qword ptr [rbp - 0x20], 0
0x40010f:	mov	qword ptr [rbp - 0x18], 0
0x400117:	mov	qword ptr [rbp - 0x10], 0
0x40011f:	cmp	dword ptr [rbp - 0x34], 0
0x400123:	js	0x40013d
<Block for 0x400153, 16 bytes>
0x400153:	nop	
0x400154:	mov	rax, qword ptr [rbp - 8]
0x400158:	xor	rax, qword ptr fs:[0x28]
0x400161:	je	0x400168
<Block for 0x40013d, 12 bytes>
0x40013d:	lea	rdi, [rip + 0x11c]
0x400144:	call	0x500008
<Block for 0x400125, 6 bytes>
0x400125:	cmp	dword ptr [rbp - 0x34], 9
0x400129:	jg	0x40013d
<Block for 0x400168, 2 bytes>
0x400168:	leave	
0x400169:	ret	
<Block for 0x400163, 5 bytes>
0x400163:	call	0x500010
<Block for 0x400149, 10 bytes>
0x400149:	add	dword ptr [rbp - 0x38], 1
0x40014d:	cmp	dword ptr [rbp - 0x38], 0
0x400151:	jle	0x4000f7
<Block for 0x40012b, 16 bytes>
0x40012b:	mov	eax, dword ptr [rbp - 0x34]
0x40012e:	cdqe	
0x400130:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400134:	mov	edi, eax
0x400136:	call	0x500000
<Block for 0x40013b, 2 bytes>
0x40013b:	jmp	0x400149
