<Block for 0x40008f, 47 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	add	rsp, -0x80
0x40009b:	mov	rax, qword ptr fs:[0x28]
0x4000a4:	mov	qword ptr [rbp - 8], rax
0x4000a8:	xor	eax, eax
0x4000aa:	mov	qword ptr [rbp - 0x78], 0
0x4000b2:	lea	rax, [rbp - 0x78]
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x500028
<Block for 0x4000be, 22 bytes>
0x4000be:	lea	rax, [rbp - 0x70]
0x4000c2:	mov	edx, 0x63
0x4000c7:	mov	esi, 0x43
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500008
<Block for 0x4000d4, 28 bytes>
0x4000d4:	mov	byte ptr [rbp - 0xd], 0
0x4000d8:	mov	rax, qword ptr [rbp - 0x78]
0x4000dc:	lea	rcx, [rbp - 0x70]
0x4000e0:	mov	edx, 0x64
0x4000e5:	mov	rsi, rcx
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500010
<Block for 0x4000f0, 23 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x78]
0x4000f4:	add	rax, 0x63
0x4000f8:	mov	byte ptr [rax], 0
0x4000fb:	mov	rax, qword ptr [rbp - 0x78]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500020
