<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	dword ptr [rbp - 0x38], 2
0x400026:	lea	rdx, [rbp - 0x38]
0x40002a:	mov	rax, qword ptr [rbp - 0x48]
0x40002e:	mov	rsi, rdx
0x400031:	mov	rdi, rax
0x400034:	call	0x400264
<Block for 0x400039, 51 bytes>
0x400039:	mov	eax, dword ptr [rax]
0x40003b:	mov	dword ptr [rbp - 0x34], eax
0x40003e:	mov	qword ptr [rbp - 0x30], 0
0x400046:	mov	qword ptr [rbp - 0x28], 0
0x40004e:	mov	qword ptr [rbp - 0x20], 0
0x400056:	mov	qword ptr [rbp - 0x18], 0
0x40005e:	mov	qword ptr [rbp - 0x10], 0
0x400066:	cmp	dword ptr [rbp - 0x34], 0
0x40006a:	js	0x40007e
<Block for 0x40007e, 12 bytes>
0x40007e:	lea	rdi, [rip + 0x19b]
0x400085:	call	0x500008
<Block for 0x40006c, 16 bytes>
0x40006c:	mov	eax, dword ptr [rbp - 0x34]
0x40006f:	cdqe	
0x400071:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400075:	mov	edi, eax
0x400077:	call	0x500000
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x40007c, 2 bytes>
0x40007c:	jmp	0x40008a
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500010
