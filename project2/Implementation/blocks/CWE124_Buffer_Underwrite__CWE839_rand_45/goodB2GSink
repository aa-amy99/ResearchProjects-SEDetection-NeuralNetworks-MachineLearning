<Block for 0x4001f6, 82 bytes>
0x4001f6:	endbr64	
0x4001fa:	push	rbp
0x4001fb:	mov	rbp, rsp
0x4001fe:	sub	rsp, 0x40
0x400202:	mov	rax, qword ptr fs:[0x28]
0x40020b:	mov	qword ptr [rbp - 8], rax
0x40020f:	xor	eax, eax
0x400211:	mov	eax, dword ptr [rip + 0x12d]
0x400217:	mov	dword ptr [rbp - 0x34], eax
0x40021a:	mov	qword ptr [rbp - 0x30], 0
0x400222:	mov	qword ptr [rbp - 0x28], 0
0x40022a:	mov	qword ptr [rbp - 0x20], 0
0x400232:	mov	qword ptr [rbp - 0x18], 0
0x40023a:	mov	qword ptr [rbp - 0x10], 0
0x400242:	cmp	dword ptr [rbp - 0x34], 0
0x400246:	js	0x400280
<Block for 0x400280, 12 bytes>
0x400280:	lea	rdi, [rip + 0xe1]
0x400287:	call	0x500008
<Block for 0x400248, 6 bytes>
0x400248:	cmp	dword ptr [rbp - 0x34], 9
0x40024c:	jg	0x400280
<Block for 0x40028c, 16 bytes>
0x40028c:	nop	
0x40028d:	mov	rax, qword ptr [rbp - 8]
0x400291:	xor	rax, qword ptr fs:[0x28]
0x40029a:	je	0x4002a1
<Block for 0x40024e, 22 bytes>
0x40024e:	mov	eax, dword ptr [rbp - 0x34]
0x400251:	cdqe	
0x400253:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40025b:	mov	dword ptr [rbp - 0x38], 0
0x400262:	jmp	0x400278
<Block for 0x4002a1, 2 bytes>
0x4002a1:	leave	
0x4002a2:	ret	
<Block for 0x40029c, 5 bytes>
0x40029c:	call	0x500010
<Block for 0x400278, 6 bytes>
0x400278:	cmp	dword ptr [rbp - 0x38], 9
0x40027c:	jle	0x400264
<Block for 0x400264, 16 bytes>
0x400264:	mov	eax, dword ptr [rbp - 0x38]
0x400267:	cdqe	
0x400269:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40026d:	mov	edi, eax
0x40026f:	call	0x500000
<Block for 0x40027e, 2 bytes>
0x40027e:	jmp	0x40028c
<Block for 0x400274, 10 bytes>
0x400274:	add	dword ptr [rbp - 0x38], 1
0x400278:	cmp	dword ptr [rbp - 0x38], 9
0x40027c:	jle	0x400264
