<Block for 0x4000a7, 25 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	push	rbx
0x4000b0:	sub	rsp, 0x18
0x4000b4:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000bb:	call	0x500018
<Block for 0x4000c0, 7 bytes>
0x4000c0:	and	eax, 1
0x4000c3:	test	eax, eax
0x4000c5:	je	0x4000e4
<Block for 0x4000e4, 5 bytes>
0x4000e4:	call	0x500018
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500018
<Block for 0x4000e9, 10 bytes>
0x4000e9:	shl	eax, 0x1e
0x4000ec:	mov	ebx, eax
0x4000ee:	call	0x500018
<Block for 0x4000cc, 10 bytes>
0x4000cc:	shl	eax, 0x1e
0x4000cf:	mov	ebx, eax
0x4000d1:	call	0x500018
<Block for 0x4000f3, 10 bytes>
0x4000f3:	shl	eax, 0xf
0x4000f6:	xor	ebx, eax
0x4000f8:	call	0x500018
<Block for 0x4000d6, 10 bytes>
0x4000d6:	shl	eax, 0xf
0x4000d9:	xor	ebx, eax
0x4000db:	call	0x500018
<Block for 0x4000fd, 26 bytes>
0x4000fd:	xor	eax, ebx
0x4000ff:	not	eax
0x400101:	mov	dword ptr [rbp - 0x14], eax
0x400104:	mov	eax, dword ptr [rbp - 0x14]
0x400107:	mov	dword ptr [rip + 0x22f], eax
0x40010d:	mov	eax, 0
0x400112:	call	0x400000
<Block for 0x4000e0, 4 bytes>
0x4000e0:	xor	eax, ebx
0x4000e2:	jmp	0x400101
<Block for 0x400117, 8 bytes>
0x400117:	nop	
0x400118:	add	rsp, 0x18
0x40011c:	pop	rbx
0x40011d:	pop	rbp
0x40011e:	ret	
<Block for 0x400101, 22 bytes>
0x400101:	mov	dword ptr [rbp - 0x14], eax
0x400104:	mov	eax, dword ptr [rbp - 0x14]
0x400107:	mov	dword ptr [rip + 0x22f], eax
0x40010d:	mov	eax, 0
0x400112:	call	0x400000
