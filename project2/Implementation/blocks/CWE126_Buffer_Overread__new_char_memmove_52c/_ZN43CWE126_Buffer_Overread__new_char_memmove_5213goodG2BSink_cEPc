<Block for 0x400095, 53 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	add	rsp, -0x80
0x4000a1:	mov	qword ptr [rbp - 0x78], rdi
0x4000a5:	mov	rax, qword ptr fs:[0x28]
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	xor	eax, eax
0x4000b4:	lea	rax, [rbp - 0x70]
0x4000b8:	mov	edx, 0x63
0x4000bd:	mov	esi, 0x43
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500000
<Block for 0x4000ca, 16 bytes>
0x4000ca:	mov	byte ptr [rbp - 0xd], 0
0x4000ce:	lea	rax, [rbp - 0x70]
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500008
<Block for 0x4000da, 22 bytes>
0x4000da:	mov	rdx, rax
0x4000dd:	mov	rcx, qword ptr [rbp - 0x78]
0x4000e1:	lea	rax, [rbp - 0x70]
0x4000e5:	mov	rsi, rcx
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500010
<Block for 0x4000f0, 16 bytes>
0x4000f0:	mov	byte ptr [rbp - 0xd], 0
0x4000f4:	lea	rax, [rbp - 0x70]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500018
<Block for 0x400100, 7 bytes>
0x400100:	cmp	qword ptr [rbp - 0x78], 0
0x400105:	je	0x400113
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x400107, 12 bytes>
0x400107:	mov	rax, qword ptr [rbp - 0x78]
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500020
<Block for 0x400128, 2 bytes>
0x400128:	leave	
0x400129:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500028
