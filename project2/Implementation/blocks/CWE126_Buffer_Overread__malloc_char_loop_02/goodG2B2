<Block for 0x40020c, 48 bytes>
0x40020c:	endbr64	
0x400210:	push	rbp
0x400211:	mov	rbp, rsp
0x400214:	sub	rsp, 0x90
0x40021b:	mov	rax, qword ptr fs:[0x28]
0x400224:	mov	qword ptr [rbp - 8], rax
0x400228:	xor	eax, eax
0x40022a:	mov	qword ptr [rbp - 0x80], 0
0x400232:	mov	edi, 0x64
0x400237:	call	0x500000
<Block for 0x40023c, 11 bytes>
0x40023c:	mov	qword ptr [rbp - 0x80], rax
0x400240:	cmp	qword ptr [rbp - 0x80], 0
0x400245:	jne	0x400251
<Block for 0x400247, 10 bytes>
0x400247:	mov	edi, 0xffffffff
0x40024c:	call	0x500008
<Block for 0x400251, 22 bytes>
0x400251:	mov	rax, qword ptr [rbp - 0x80]
0x400255:	mov	edx, 0x63
0x40025a:	mov	esi, 0x41
0x40025f:	mov	rdi, rax
0x400262:	call	0x500010
<Block for 0x400267, 33 bytes>
0x400267:	mov	rax, qword ptr [rbp - 0x80]
0x40026b:	add	rax, 0x63
0x40026f:	mov	byte ptr [rax], 0
0x400272:	lea	rax, [rbp - 0x70]
0x400276:	mov	edx, 0x63
0x40027b:	mov	esi, 0x43
0x400280:	mov	rdi, rax
0x400283:	call	0x500010
<Block for 0x400288, 16 bytes>
0x400288:	mov	byte ptr [rbp - 0xd], 0
0x40028c:	lea	rax, [rbp - 0x70]
0x400290:	mov	rdi, rax
0x400293:	call	0x500018
<Block for 0x400298, 17 bytes>
0x400298:	mov	qword ptr [rbp - 0x78], rax
0x40029c:	mov	qword ptr [rbp - 0x88], 0
0x4002a7:	jmp	0x4002d2
<Block for 0x4002d2, 13 bytes>
0x4002d2:	mov	rax, qword ptr [rbp - 0x88]
0x4002d9:	cmp	rax, qword ptr [rbp - 0x78]
0x4002dd:	jb	0x4002a9
<Block for 0x4002a9, 54 bytes>
0x4002a9:	mov	rdx, qword ptr [rbp - 0x80]
0x4002ad:	mov	rax, qword ptr [rbp - 0x88]
0x4002b4:	add	rax, rdx
0x4002b7:	movzx	eax, byte ptr [rax]
0x4002ba:	lea	rcx, [rbp - 0x70]
0x4002be:	mov	rdx, qword ptr [rbp - 0x88]
0x4002c5:	add	rdx, rcx
0x4002c8:	mov	byte ptr [rdx], al
0x4002ca:	add	qword ptr [rbp - 0x88], 1
0x4002d2:	mov	rax, qword ptr [rbp - 0x88]
0x4002d9:	cmp	rax, qword ptr [rbp - 0x78]
0x4002dd:	jb	0x4002a9
<Block for 0x4002df, 16 bytes>
0x4002df:	mov	byte ptr [rbp - 0xd], 0
0x4002e3:	lea	rax, [rbp - 0x70]
0x4002e7:	mov	rdi, rax
0x4002ea:	call	0x500020
<Block for 0x4002ef, 12 bytes>
0x4002ef:	mov	rax, qword ptr [rbp - 0x80]
0x4002f3:	mov	rdi, rax
0x4002f6:	call	0x500028
<Block for 0x4002fb, 16 bytes>
0x4002fb:	nop	
0x4002fc:	mov	rax, qword ptr [rbp - 8]
0x400300:	xor	rax, qword ptr fs:[0x28]
0x400309:	je	0x400310
<Block for 0x400310, 2 bytes>
0x400310:	leave	
0x400311:	ret	
<Block for 0x40030b, 5 bytes>
0x40030b:	call	0x500030
