<Block for 0x400074, 17 bytes>
0x400074:	endbr64	
0x400078:	push	rbp
0x400079:	mov	rbp, rsp
0x40007c:	sub	rsp, 0x10
0x400080:	call	0x40000f
<Block for 0x400085, 9 bytes>
0x400085:	test	eax, eax
0x400087:	setne	al
0x40008a:	test	al, al
0x40008c:	je	0x40009c
<Block for 0x40009c, 14 bytes>
0x40009c:	mov	byte ptr [rbp - 0xa], 5
0x4000a0:	mov	edi, 1
0x4000a5:	call	0x500000
<Block for 0x40008e, 12 bytes>
0x40008e:	lea	rdi, [rip + 0xca]
0x400095:	call	0x500018
<Block for 0x4000aa, 35 bytes>
0x4000aa:	mov	qword ptr [rbp - 8], rax
0x4000ae:	mov	rax, qword ptr [rbp - 8]
0x4000b2:	movzx	edx, byte ptr [rbp - 0xa]
0x4000b6:	mov	byte ptr [rax], dl
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	movzx	eax, byte ptr [rax]
0x4000bf:	mov	byte ptr [rbp - 9], al
0x4000c2:	movsx	eax, byte ptr [rbp - 9]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x500010
<Block for 0x40009a, 2 bytes>
0x40009a:	jmp	0x4000e3
<Block for 0x4000cd, 9 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	test	rax, rax
0x4000d4:	je	0x4000e3
<Block for 0x4000e3, 3 bytes>
0x4000e3:	nop	
0x4000e4:	leave	
0x4000e5:	ret	
<Block for 0x4000d6, 13 bytes>
0x4000d6:	mov	esi, 1
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500008
