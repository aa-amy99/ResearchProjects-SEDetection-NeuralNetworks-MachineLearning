<Block for 0x4001d6, 151 bytes>
0x4001d6:	endbr64	
0x4001da:	push	rbp
0x4001db:	mov	rbp, rsp
0x4001de:	sub	rsp, 0x90
0x4001e5:	mov	rax, qword ptr fs:[0x28]
0x4001ee:	mov	qword ptr [rbp - 8], rax
0x4001f2:	xor	eax, eax
0x4001f4:	mov	qword ptr [rbp - 0x70], 0
0x4001fc:	mov	qword ptr [rbp - 0x68], 0
0x400204:	mov	qword ptr [rbp - 0x60], 0
0x40020c:	mov	qword ptr [rbp - 0x58], 0
0x400214:	mov	qword ptr [rbp - 0x50], 0
0x40021c:	mov	qword ptr [rbp - 0x48], 0
0x400224:	mov	qword ptr [rbp - 0x40], 0
0x40022c:	mov	qword ptr [rbp - 0x38], 0
0x400234:	mov	qword ptr [rbp - 0x30], 0
0x40023c:	mov	qword ptr [rbp - 0x28], 0
0x400244:	mov	qword ptr [rbp - 0x20], 0
0x40024c:	mov	qword ptr [rbp - 0x18], 0
0x400254:	mov	dword ptr [rbp - 0x10], 0
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	qword ptr [rbp - 0x80], rax
0x400263:	mov	eax, 0
0x400268:	call	0x500000
<Block for 0x40026d, 8 bytes>
0x40026d:	test	eax, eax
0x40026f:	je	0x400324
<Block for 0x400324, 10 bytes>
0x400324:	mov	eax, 0
0x400329:	call	0x500040
<Block for 0x400275, 12 bytes>
0x400275:	mov	rax, qword ptr [rbp - 0x80]
0x400279:	mov	rdi, rax
0x40027c:	call	0x500008
<Block for 0x40032e, 4 bytes>
0x40032e:	test	eax, eax
0x400330:	je	0x400340
<Block for 0x400281, 23 bytes>
0x400281:	mov	qword ptr [rbp - 0x78], rax
0x400285:	mov	eax, 0x64
0x40028a:	sub	rax, qword ptr [rbp - 0x78]
0x40028e:	cmp	rax, 1
0x400292:	jbe	0x400324
<Block for 0x400340, 31 bytes>
0x400340:	lea	rdx, [rbp - 0x8c]
0x400347:	mov	rax, qword ptr [rbp - 0x80]
0x40034b:	lea	rsi, [rip + 0x4e4]
0x400352:	mov	rdi, rax
0x400355:	mov	eax, 0
0x40035a:	call	0x500028
<Block for 0x400332, 12 bytes>
0x400332:	lea	rdi, [rip + 0x500]
0x400339:	call	0x500020
<Block for 0x400298, 44 bytes>
0x400298:	mov	rax, qword ptr [rip + 0xffd71]
0x40029f:	mov	rdx, qword ptr [rbp - 0x78]
0x4002a3:	mov	ecx, 0x64
0x4002a8:	sub	ecx, edx
0x4002aa:	mov	edx, ecx
0x4002ac:	mov	esi, edx
0x4002ae:	mov	rcx, qword ptr [rbp - 0x80]
0x4002b2:	mov	rdx, qword ptr [rbp - 0x78]
0x4002b6:	add	rcx, rdx
0x4002b9:	mov	rdx, rax
0x4002bc:	mov	rdi, rcx
0x4002bf:	call	0x500018
<Block for 0x40035f, 5 bytes>
0x40035f:	cmp	eax, 1
0x400362:	jne	0x4003b0
<Block for 0x40033e, 2 bytes>
0x40033e:	jmp	0x4003b0
<Block for 0x4002c4, 5 bytes>
0x4002c4:	test	rax, rax
0x4002c7:	je	0x40030a
<Block for 0x400364, 13 bytes>
0x400364:	mov	eax, dword ptr [rbp - 0x8c]
0x40036a:	cmp	eax, 0x270f
0x40036f:	jg	0x4003b0
<Block for 0x4003b0, 16 bytes>
0x4003b0:	nop	
0x4003b1:	mov	rax, qword ptr [rbp - 8]
0x4003b5:	xor	rax, qword ptr fs:[0x28]
0x4003be:	je	0x4003c5
<Block for 0x40030a, 12 bytes>
0x40030a:	lea	rdi, [rip + 0x516]
0x400311:	call	0x500020
<Block for 0x4002c9, 12 bytes>
0x4002c9:	mov	rax, qword ptr [rbp - 0x80]
0x4002cd:	mov	rdi, rax
0x4002d0:	call	0x500008
<Block for 0x400371, 22 bytes>
0x400371:	mov	dword ptr [rbp - 0x84], 0
0x40037b:	mov	dword ptr [rbp - 0x88], 0
0x400385:	jmp	0x400395
<Block for 0x4003c5, 2 bytes>
0x4003c5:	leave	
0x4003c6:	ret	
<Block for 0x4003c0, 5 bytes>
0x4003c0:	call	0x500038
<Block for 0x400316, 24 bytes>
0x400316:	mov	rdx, qword ptr [rbp - 0x80]
0x40031a:	mov	rax, qword ptr [rbp - 0x78]
0x40031e:	add	rax, rdx
0x400321:	mov	byte ptr [rax], 0
0x400324:	mov	eax, 0
0x400329:	call	0x500040
<Block for 0x4002d5, 11 bytes>
0x4002d5:	mov	qword ptr [rbp - 0x78], rax
0x4002d9:	cmp	qword ptr [rbp - 0x78], 0
0x4002de:	je	0x400324
<Block for 0x400395, 14 bytes>
0x400395:	mov	eax, dword ptr [rbp - 0x8c]
0x40039b:	cmp	dword ptr [rbp - 0x88], eax
0x4003a1:	jl	0x400387
<Block for 0x4002e0, 22 bytes>
0x4002e0:	mov	rax, qword ptr [rbp - 0x78]
0x4002e4:	lea	rdx, [rax - 1]
0x4002e8:	mov	rax, qword ptr [rbp - 0x80]
0x4002ec:	add	rax, rdx
0x4002ef:	movzx	eax, byte ptr [rax]
0x4002f2:	cmp	al, 0xa
0x4002f4:	jne	0x400324
<Block for 0x400387, 28 bytes>
0x400387:	add	dword ptr [rbp - 0x84], 1
0x40038e:	add	dword ptr [rbp - 0x88], 1
0x400395:	mov	eax, dword ptr [rbp - 0x8c]
0x40039b:	cmp	dword ptr [rbp - 0x88], eax
0x4003a1:	jl	0x400387
<Block for 0x4003a3, 13 bytes>
0x4003a3:	mov	eax, dword ptr [rbp - 0x84]
0x4003a9:	mov	edi, eax
0x4003ab:	call	0x500030
<Block for 0x4002f6, 20 bytes>
0x4002f6:	mov	rax, qword ptr [rbp - 0x78]
0x4002fa:	lea	rdx, [rax - 1]
0x4002fe:	mov	rax, qword ptr [rbp - 0x80]
0x400302:	add	rax, rdx
0x400305:	mov	byte ptr [rax], 0
0x400308:	jmp	0x400324
