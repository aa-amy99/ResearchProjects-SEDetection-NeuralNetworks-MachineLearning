<Block for 0x400340, 85 bytes>
0x400340:	endbr64	
0x400344:	push	rbp
0x400345:	mov	rbp, rsp
0x400348:	push	rbx
0x400349:	sub	rsp, 0x88
0x400350:	mov	rax, qword ptr fs:[0x28]
0x400359:	mov	qword ptr [rbp - 0x18], rax
0x40035d:	xor	eax, eax
0x40035f:	mov	eax, 0x10
0x400364:	sub	rax, 1
0x400368:	add	rax, 0x6c
0x40036c:	mov	esi, 0x10
0x400371:	mov	edx, 0
0x400376:	div	rsi
0x400379:	imul	rax, rax, 0x10
0x40037d:	mov	rdx, rax
0x400380:	and	rdx, 0xfffffffffffff000
0x400387:	mov	rbx, rsp
0x40038a:	sub	rbx, rdx
0x40038d:	mov	rdx, rbx
0x400390:	cmp	rsp, rdx
0x400393:	je	0x4003a7
<Block for 0x4003a7, 26 bytes>
0x4003a7:	mov	rdx, rax
0x4003aa:	and	edx, 0xfff
0x4003b0:	sub	rsp, rdx
0x4003b3:	mov	rdx, rax
0x4003b6:	and	edx, 0xfff
0x4003bc:	test	rdx, rdx
0x4003bf:	je	0x4003d1
<Block for 0x400395, 18 bytes>
0x400395:	sub	rsp, 0x1000
0x40039c:	or	qword ptr [rsp + 0xff8], 0
0x4003a5:	jmp	0x400390
<Block for 0x4003d1, 47 bytes>
0x4003d1:	mov	rax, rsp
0x4003d4:	add	rax, 0xf
0x4003d8:	shr	rax, 4
0x4003dc:	shl	rax, 4
0x4003e0:	mov	qword ptr [rbp - 0x88], rax
0x4003e7:	mov	rax, qword ptr [rbp - 0x88]
0x4003ee:	mov	edx, 0x63
0x4003f3:	mov	esi, 0x41
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x500000
<Block for 0x4003c1, 63 bytes>
0x4003c1:	and	eax, 0xfff
0x4003c6:	sub	rax, 8
0x4003ca:	add	rax, rsp
0x4003cd:	or	qword ptr [rax], 0
0x4003d1:	mov	rax, rsp
0x4003d4:	add	rax, 0xf
0x4003d8:	shr	rax, 4
0x4003dc:	shl	rax, 4
0x4003e0:	mov	qword ptr [rbp - 0x88], rax
0x4003e7:	mov	rax, qword ptr [rbp - 0x88]
0x4003ee:	mov	edx, 0x63
0x4003f3:	mov	esi, 0x41
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x500000
<Block for 0x400390, 5 bytes>
0x400390:	cmp	rsp, rdx
0x400393:	je	0x4003a7
<Block for 0x400400, 24 bytes>
0x400400:	mov	rax, qword ptr [rbp - 0x88]
0x400407:	add	rax, 0x63
0x40040b:	mov	byte ptr [rax], 0
0x40040e:	mov	eax, dword ptr [rip + 0xffbf4]
0x400414:	test	eax, eax
0x400416:	je	0x400426
<Block for 0x400426, 22 bytes>
0x400426:	lea	rax, [rbp - 0x80]
0x40042a:	mov	edx, 0x63
0x40042f:	mov	esi, 0x43
0x400434:	mov	rdi, rax
0x400437:	call	0x500000
<Block for 0x400418, 36 bytes>
0x400418:	mov	rax, qword ptr [rbp - 0x88]
0x40041f:	mov	qword ptr [rbp - 0x90], rax
0x400426:	lea	rax, [rbp - 0x80]
0x40042a:	mov	edx, 0x63
0x40042f:	mov	esi, 0x43
0x400434:	mov	rdi, rax
0x400437:	call	0x500000
<Block for 0x40043c, 128 bytes>
0x40043c:	mov	byte ptr [rbp - 0x1d], 0
0x400440:	mov	rax, qword ptr [rbp - 0x90]
0x400447:	mov	rcx, qword ptr [rax]
0x40044a:	mov	rbx, qword ptr [rax + 8]
0x40044e:	mov	qword ptr [rbp - 0x80], rcx
0x400452:	mov	qword ptr [rbp - 0x78], rbx
0x400456:	mov	rcx, qword ptr [rax + 0x10]
0x40045a:	mov	rbx, qword ptr [rax + 0x18]
0x40045e:	mov	qword ptr [rbp - 0x70], rcx
0x400462:	mov	qword ptr [rbp - 0x68], rbx
0x400466:	mov	rcx, qword ptr [rax + 0x20]
0x40046a:	mov	rbx, qword ptr [rax + 0x28]
0x40046e:	mov	qword ptr [rbp - 0x60], rcx
0x400472:	mov	qword ptr [rbp - 0x58], rbx
0x400476:	mov	rcx, qword ptr [rax + 0x30]
0x40047a:	mov	rbx, qword ptr [rax + 0x38]
0x40047e:	mov	qword ptr [rbp - 0x50], rcx
0x400482:	mov	qword ptr [rbp - 0x48], rbx
0x400486:	mov	rcx, qword ptr [rax + 0x40]
0x40048a:	mov	rbx, qword ptr [rax + 0x48]
0x40048e:	mov	qword ptr [rbp - 0x40], rcx
0x400492:	mov	qword ptr [rbp - 0x38], rbx
0x400496:	mov	rcx, qword ptr [rax + 0x50]
0x40049a:	mov	rbx, qword ptr [rax + 0x58]
0x40049e:	mov	qword ptr [rbp - 0x30], rcx
0x4004a2:	mov	qword ptr [rbp - 0x28], rbx
0x4004a6:	mov	eax, dword ptr [rax + 0x60]
0x4004a9:	mov	dword ptr [rbp - 0x20], eax
0x4004ac:	mov	byte ptr [rbp - 0x1d], 0
0x4004b0:	lea	rax, [rbp - 0x80]
0x4004b4:	mov	rdi, rax
0x4004b7:	call	0x500010
<Block for 0x4004bc, 16 bytes>
0x4004bc:	nop	
0x4004bd:	mov	rax, qword ptr [rbp - 0x18]
0x4004c1:	xor	rax, qword ptr fs:[0x28]
0x4004ca:	je	0x4004d1
<Block for 0x4004d1, 6 bytes>
0x4004d1:	mov	rbx, qword ptr [rbp - 8]
0x4004d5:	leave	
0x4004d6:	ret	
<Block for 0x4004cc, 5 bytes>
0x4004cc:	call	0x500018
