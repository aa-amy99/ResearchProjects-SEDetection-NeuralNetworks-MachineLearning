<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	dword ptr [rbp - 0x7c], 0
0x40002a:	cmp	dword ptr [rbp - 0x7c], 0
0x40002e:	jg	0x400065
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0x32
0x400035:	call	0x500000
<Block for 0x400065, 22 bytes>
0x400065:	lea	rax, [rbp - 0x70]
0x400069:	mov	edx, 0x63
0x40006e:	mov	esi, 0x43
0x400073:	mov	rdi, rax
0x400076:	call	0x500008
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	qword ptr [rbp - 0x78], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x78]
0x400042:	mov	edx, 0x31
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x40007b, 16 bytes>
0x40007b:	mov	byte ptr [rbp - 0xd], 0
0x40007f:	lea	rax, [rbp - 0x70]
0x400083:	mov	rdi, rax
0x400086:	call	0x500010
<Block for 0x400054, 17 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x78]
0x400058:	add	rax, 0x31
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	add	dword ptr [rbp - 0x7c], 1
0x400063:	jmp	0x40002a
<Block for 0x40008b, 22 bytes>
0x40008b:	mov	rdx, rax
0x40008e:	mov	rcx, qword ptr [rbp - 0x78]
0x400092:	lea	rax, [rbp - 0x70]
0x400096:	mov	rsi, rcx
0x400099:	mov	rdi, rax
0x40009c:	call	0x500018
<Block for 0x40002a, 6 bytes>
0x40002a:	cmp	dword ptr [rbp - 0x7c], 0
0x40002e:	jg	0x400065
<Block for 0x4000a1, 16 bytes>
0x4000a1:	mov	byte ptr [rbp - 0xd], 0
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500020
<Block for 0x4000b1, 7 bytes>
0x4000b1:	cmp	qword ptr [rbp - 0x78], 0
0x4000b6:	je	0x4000c4
<Block for 0x4000c4, 16 bytes>
0x4000c4:	nop	
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	xor	rax, qword ptr fs:[0x28]
0x4000d2:	je	0x4000d9
<Block for 0x4000b8, 12 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x78]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500028
<Block for 0x4000d9, 2 bytes>
0x4000d9:	leave	
0x4000da:	ret	
<Block for 0x4000d4, 5 bytes>
0x4000d4:	call	0x500030
