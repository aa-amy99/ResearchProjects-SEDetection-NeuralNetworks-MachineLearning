<Block for 0x4000db, 48 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	add	rsp, -0x80
0x4000e7:	mov	rax, qword ptr fs:[0x28]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	xor	eax, eax
0x4000f6:	mov	qword ptr [rbp - 0x78], 0
0x4000fe:	mov	dword ptr [rbp - 0x7c], 0
0x400105:	cmp	dword ptr [rbp - 0x7c], 0
0x400109:	jg	0x400140
<Block for 0x40010b, 10 bytes>
0x40010b:	mov	edi, 0x64
0x400110:	call	0x500000
<Block for 0x400140, 22 bytes>
0x400140:	lea	rax, [rbp - 0x70]
0x400144:	mov	edx, 0x63
0x400149:	mov	esi, 0x43
0x40014e:	mov	rdi, rax
0x400151:	call	0x500008
<Block for 0x400115, 26 bytes>
0x400115:	mov	qword ptr [rbp - 0x78], rax
0x400119:	mov	rax, qword ptr [rbp - 0x78]
0x40011d:	mov	edx, 0x63
0x400122:	mov	esi, 0x41
0x400127:	mov	rdi, rax
0x40012a:	call	0x500008
<Block for 0x400156, 16 bytes>
0x400156:	mov	byte ptr [rbp - 0xd], 0
0x40015a:	lea	rax, [rbp - 0x70]
0x40015e:	mov	rdi, rax
0x400161:	call	0x500010
<Block for 0x40012f, 17 bytes>
0x40012f:	mov	rax, qword ptr [rbp - 0x78]
0x400133:	add	rax, 0x63
0x400137:	mov	byte ptr [rax], 0
0x40013a:	add	dword ptr [rbp - 0x7c], 1
0x40013e:	jmp	0x400105
<Block for 0x400166, 22 bytes>
0x400166:	mov	rdx, rax
0x400169:	mov	rcx, qword ptr [rbp - 0x78]
0x40016d:	lea	rax, [rbp - 0x70]
0x400171:	mov	rsi, rcx
0x400174:	mov	rdi, rax
0x400177:	call	0x500018
<Block for 0x400105, 6 bytes>
0x400105:	cmp	dword ptr [rbp - 0x7c], 0
0x400109:	jg	0x400140
<Block for 0x40017c, 16 bytes>
0x40017c:	mov	byte ptr [rbp - 0xd], 0
0x400180:	lea	rax, [rbp - 0x70]
0x400184:	mov	rdi, rax
0x400187:	call	0x500020
<Block for 0x40018c, 7 bytes>
0x40018c:	cmp	qword ptr [rbp - 0x78], 0
0x400191:	je	0x40019f
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x400193, 12 bytes>
0x400193:	mov	rax, qword ptr [rbp - 0x78]
0x400197:	mov	rdi, rax
0x40019a:	call	0x500028
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500030
