<Block for 0x400209, 30 bytes>
0x400209:	endbr64	
0x40020d:	push	rbp
0x40020e:	mov	rbp, rsp
0x400211:	sub	rsp, 0x10
0x400215:	mov	qword ptr [rbp - 8], 0
0x40021d:	mov	edi, 0x320
0x400222:	call	0x500000
<Block for 0x400227, 19 bytes>
0x400227:	mov	qword ptr [rbp - 8], rax
0x40022b:	mov	qword ptr [rbp - 0x10], 0
0x400233:	cmp	qword ptr [rbp - 0x10], 0x63
0x400238:	ja	0x400274
<Block for 0x40023a, 58 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 0x10]
0x40023e:	lea	rdx, [rax*8]
0x400246:	mov	rax, qword ptr [rbp - 8]
0x40024a:	add	rax, rdx
0x40024d:	mov	dword ptr [rax], 1
0x400253:	mov	rax, qword ptr [rbp - 0x10]
0x400257:	lea	rdx, [rax*8]
0x40025f:	mov	rax, qword ptr [rbp - 8]
0x400263:	add	rax, rdx
0x400266:	mov	dword ptr [rax + 4], 2
0x40026d:	add	qword ptr [rbp - 0x10], 1
0x400272:	jmp	0x400233
<Block for 0x400274, 12 bytes>
0x400274:	mov	rax, qword ptr [rbp - 8]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500010
<Block for 0x400233, 7 bytes>
0x400233:	cmp	qword ptr [rbp - 0x10], 0x63
0x400238:	ja	0x400274
<Block for 0x400280, 3 bytes>
0x400280:	nop	
0x400281:	leave	
0x400282:	ret	
