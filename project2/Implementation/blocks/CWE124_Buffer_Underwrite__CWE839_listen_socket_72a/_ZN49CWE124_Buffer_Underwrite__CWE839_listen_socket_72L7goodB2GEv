<Block for 0x400476, 43 bytes>
0x400476:	endbr64	
0x40047a:	push	rbp
0x40047b:	mov	rbp, rsp
0x40047e:	push	rbx
0x40047f:	sub	rsp, 0x98
0x400486:	mov	rax, qword ptr fs:[0x28]
0x40048f:	mov	qword ptr [rbp - 0x18], rax
0x400493:	xor	eax, eax
0x400495:	lea	rax, [rbp - 0x80]
0x400499:	mov	rdi, rax
0x40049c:	call	0x4007f4
<Block for 0x4004a1, 50 bytes>
0x4004a1:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4004ab:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x4004b5:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x4004bf:	mov	edx, 6
0x4004c4:	mov	esi, 1
0x4004c9:	mov	edi, 2
0x4004ce:	call	0x500000
<Block for 0x4004d3, 19 bytes>
0x4004d3:	mov	dword ptr [rbp - 0x90], eax
0x4004d9:	cmp	dword ptr [rbp - 0x90], -1
0x4004e0:	je	0x4005d8
<Block for 0x4005d8, 3 bytes>
0x4005d8:	nop	
0x4005d9:	jmp	0x4005e2
<Block for 0x4004e6, 22 bytes>
0x4004e6:	lea	rax, [rbp - 0x40]
0x4004ea:	mov	edx, 0x10
0x4004ef:	mov	esi, 0
0x4004f4:	mov	rdi, rax
0x4004f7:	call	0x500008
<Block for 0x4005e2, 9 bytes>
0x4005e2:	cmp	dword ptr [rbp - 0x90], -1
0x4005e9:	je	0x4005f8
<Block for 0x4004fc, 23 bytes>
0x4004fc:	mov	word ptr [rbp - 0x40], 2
0x400502:	mov	dword ptr [rbp - 0x3c], 0
0x400509:	mov	edi, 0x6987
0x40050e:	call	0x500010
<Block for 0x4005f8, 9 bytes>
0x4005f8:	cmp	dword ptr [rbp - 0x94], -1
0x4005ff:	je	0x40060e
<Block for 0x4005eb, 13 bytes>
0x4005eb:	mov	eax, dword ptr [rbp - 0x90]
0x4005f1:	mov	edi, eax
0x4005f3:	call	0x500040
<Block for 0x400513, 29 bytes>
0x400513:	mov	word ptr [rbp - 0x3e], ax
0x400517:	lea	rcx, [rbp - 0x40]
0x40051b:	mov	eax, dword ptr [rbp - 0x90]
0x400521:	mov	edx, 0x10
0x400526:	mov	rsi, rcx
0x400529:	mov	edi, eax
0x40052b:	call	0x500018
<Block for 0x40060e, 12 bytes>
0x40060e:	lea	rax, [rbp - 0x80]
0x400612:	mov	rdi, rax
0x400615:	call	0x40099e
<Block for 0x400601, 13 bytes>
0x400601:	mov	eax, dword ptr [rbp - 0x94]
0x400607:	mov	edi, eax
0x400609:	call	0x500040
<Block for 0x400530, 14 bytes>
0x400530:	cmp	eax, -1
0x400533:	sete	al
0x400536:	test	al, al
0x400538:	jne	0x4005db
<Block for 0x40061a, 29 bytes>
0x40061a:	mov	qword ptr [rbp - 0x88], rax
0x400621:	lea	rdx, [rbp - 0x88]
0x400628:	lea	rax, [rbp - 0x60]
0x40062c:	mov	rsi, rdx
0x40062f:	mov	rdi, rax
0x400632:	call	0x4009ee
<Block for 0x40053e, 18 bytes>
0x40053e:	mov	eax, dword ptr [rbp - 0x90]
0x400544:	mov	esi, 5
0x400549:	mov	edi, eax
0x40054b:	call	0x500020
<Block for 0x4005db, 3 bytes>
0x4005db:	nop	
0x4005dc:	jmp	0x4005e2
<Block for 0x400637, 31 bytes>
0x400637:	lea	rdx, [rbp - 0x98]
0x40063e:	mov	rsi, qword ptr [rbp - 0x60]
0x400642:	lea	rax, [rbp - 0x80]
0x400646:	mov	rcx, rdx
0x400649:	mov	edx, 1
0x40064e:	mov	rdi, rax
0x400651:	call	0x400a1c
<Block for 0x400550, 14 bytes>
0x400550:	cmp	eax, -1
0x400553:	sete	al
0x400556:	test	al, al
0x400558:	jne	0x4005de
<Block for 0x400656, 12 bytes>
0x400656:	lea	rax, [rbp - 0x80]
0x40065a:	mov	rdi, rax
0x40065d:	call	0x40099e
<Block for 0x40055e, 23 bytes>
0x40055e:	mov	eax, dword ptr [rbp - 0x90]
0x400564:	mov	edx, 0
0x400569:	mov	esi, 0
0x40056e:	mov	edi, eax
0x400570:	call	0x500028
<Block for 0x4005de, 3 bytes>
0x4005de:	nop	
0x4005df:	jmp	0x4005e2
<Block for 0x400662, 29 bytes>
0x400662:	mov	qword ptr [rbp - 0x88], rax
0x400669:	lea	rdx, [rbp - 0x88]
0x400670:	lea	rax, [rbp - 0x60]
0x400674:	mov	rsi, rdx
0x400677:	mov	rdi, rax
0x40067a:	call	0x4009ee
<Block for 0x400575, 15 bytes>
0x400575:	mov	dword ptr [rbp - 0x94], eax
0x40057b:	cmp	dword ptr [rbp - 0x94], -1
0x400582:	je	0x4005e1
<Block for 0x40067f, 31 bytes>
0x40067f:	lea	rdx, [rbp - 0x98]
0x400686:	mov	rsi, qword ptr [rbp - 0x60]
0x40068a:	lea	rax, [rbp - 0x80]
0x40068e:	mov	rcx, rdx
0x400691:	mov	edx, 1
0x400696:	mov	rdi, rax
0x400699:	call	0x400a1c
<Block for 0x400584, 27 bytes>
0x400584:	lea	rsi, [rbp - 0x26]
0x400588:	mov	eax, dword ptr [rbp - 0x94]
0x40058e:	mov	ecx, 0
0x400593:	mov	edx, 0xd
0x400598:	mov	edi, eax
0x40059a:	call	0x500030
<Block for 0x4005e1, 1 bytes>
0x4005e1:	nop	
<Block for 0x40069e, 12 bytes>
0x40069e:	lea	rax, [rbp - 0x80]
0x4006a2:	mov	rdi, rax
0x4006a5:	call	0x40099e
<Block for 0x40059f, 15 bytes>
0x40059f:	mov	dword ptr [rbp - 0x8c], eax
0x4005a5:	cmp	dword ptr [rbp - 0x8c], -1
0x4005ac:	je	0x4005e2
<Block for 0x4006aa, 29 bytes>
0x4006aa:	mov	qword ptr [rbp - 0x88], rax
0x4006b1:	lea	rdx, [rbp - 0x88]
0x4006b8:	lea	rax, [rbp - 0x60]
0x4006bc:	mov	rsi, rdx
0x4006bf:	mov	rdi, rax
0x4006c2:	call	0x4009ee
<Block for 0x4005ae, 9 bytes>
0x4005ae:	cmp	dword ptr [rbp - 0x8c], 0
0x4005b5:	je	0x4005e2
<Block for 0x4006c7, 31 bytes>
0x4006c7:	lea	rdx, [rbp - 0x98]
0x4006ce:	mov	rsi, qword ptr [rbp - 0x60]
0x4006d2:	lea	rax, [rbp - 0x80]
0x4006d6:	mov	rcx, rdx
0x4006d9:	mov	edx, 1
0x4006de:	mov	rdi, rax
0x4006e1:	call	0x400a1c
<Block for 0x4005b7, 25 bytes>
0x4005b7:	mov	eax, dword ptr [rbp - 0x8c]
0x4005bd:	cdqe	
0x4005bf:	mov	byte ptr [rbp + rax - 0x26], 0
0x4005c4:	lea	rax, [rbp - 0x26]
0x4005c8:	mov	rdi, rax
0x4005cb:	call	0x500038
<Block for 0x4006e6, 19 bytes>
0x4006e6:	lea	rdx, [rbp - 0x80]
0x4006ea:	lea	rax, [rbp - 0x60]
0x4006ee:	mov	rsi, rdx
0x4006f1:	mov	rdi, rax
0x4006f4:	call	0x400ae2
<Block for 0x4005d0, 8 bytes>
0x4005d0:	mov	dword ptr [rbp - 0x98], eax
0x4005d6:	jmp	0x4005e2
<Block for 0x4006f9, 12 bytes>
0x4006f9:	lea	rax, [rbp - 0x60]
0x4006fd:	mov	rdi, rax
0x400700:	call	0x500068
<Block for 0x400705, 12 bytes>
0x400705:	lea	rax, [rbp - 0x60]
0x400709:	mov	rdi, rax
0x40070c:	call	0x400956
<Block for 0x400711, 12 bytes>
0x400711:	lea	rax, [rbp - 0x80]
0x400715:	mov	rdi, rax
0x400718:	call	0x400956
<Block for 0x40071d, 16 bytes>
0x40071d:	nop	
0x40071e:	mov	rax, qword ptr [rbp - 0x18]
0x400722:	xor	rax, qword ptr fs:[0x28]
0x40072b:	je	0x400767
<Block for 0x400767, 10 bytes>
0x400767:	add	rsp, 0x98
0x40076e:	pop	rbx
0x40076f:	pop	rbp
0x400770:	ret	
<Block for 0x40072d, 2 bytes>
0x40072d:	jmp	0x400762
<Block for 0x400762, 5 bytes>
0x400762:	call	0x500058
