<Block for 0x400450, 37 bytes>
0x400450:	endbr64	
0x400454:	push	rbp
0x400455:	mov	rbp, rsp
0x400458:	sub	rsp, 0x20
0x40045c:	mov	rax, qword ptr fs:[0x28]
0x400465:	mov	qword ptr [rbp - 8], rax
0x400469:	xor	eax, eax
0x40046b:	mov	edi, 0x64
0x400470:	call	0x500058
<Block for 0x400475, 13 bytes>
0x400475:	mov	qword ptr [rbp - 0x18], rax
0x400479:	mov	rax, qword ptr [rbp - 0x18]
0x40047d:	test	rax, rax
0x400480:	jne	0x40048c
<Block for 0x400482, 10 bytes>
0x400482:	mov	edi, 0xffffffff
0x400487:	call	0x500060
<Block for 0x40048c, 19 bytes>
0x40048c:	mov	rax, qword ptr [rbp - 0x18]
0x400490:	mov	byte ptr [rax], 0
0x400493:	lea	rax, [rbp - 0x18]
0x400497:	mov	rdi, rax
0x40049a:	call	0x40027a
<Block for 0x40049f, 20 bytes>
0x40049f:	mov	qword ptr [rbp - 0x10], 0
0x4004a7:	mov	rax, qword ptr [rbp - 0x18]
0x4004ab:	mov	rdi, rax
0x4004ae:	call	0x500000
<Block for 0x4004b3, 6 bytes>
0x4004b3:	cmp	qword ptr [rbp - 0x10], rax
0x4004b7:	jae	0x4004e0
<Block for 0x4004b9, 18 bytes>
0x4004b9:	mov	rdx, qword ptr [rbp - 0x18]
0x4004bd:	mov	rax, qword ptr [rbp - 0x10]
0x4004c1:	add	rax, rdx
0x4004c4:	movzx	eax, byte ptr [rax]
0x4004c7:	cmp	al, 0x53
0x4004c9:	jne	0x4004d9
<Block for 0x4004e0, 12 bytes>
0x4004e0:	mov	rax, qword ptr [rbp - 0x18]
0x4004e4:	mov	rdi, rax
0x4004e7:	call	0x500070
<Block for 0x4004cb, 12 bytes>
0x4004cb:	lea	rdi, [rip + 0x41]
0x4004d2:	call	0x500068
<Block for 0x4004d9, 7 bytes>
0x4004d9:	add	qword ptr [rbp - 0x10], 1
0x4004de:	jmp	0x4004a7
<Block for 0x4004ec, 16 bytes>
0x4004ec:	nop	
0x4004ed:	mov	rax, qword ptr [rbp - 8]
0x4004f1:	xor	rax, qword ptr fs:[0x28]
0x4004fa:	je	0x400501
<Block for 0x4004d7, 2 bytes>
0x4004d7:	jmp	0x4004e0
<Block for 0x4004a7, 12 bytes>
0x4004a7:	mov	rax, qword ptr [rbp - 0x18]
0x4004ab:	mov	rdi, rax
0x4004ae:	call	0x500000
<Block for 0x400501, 2 bytes>
0x400501:	leave	
0x400502:	ret	
<Block for 0x4004fc, 5 bytes>
0x4004fc:	call	0x500050
