<Block for 0x400092, 25 bytes>
0x400092:	endbr64	
0x400096:	push	rbp
0x400097:	mov	rbp, rsp
0x40009a:	sub	rsp, 0x10
0x40009e:	mov	dword ptr [rbp - 4], edi
0x4000a1:	mov	eax, dword ptr [rip + 0x161]
0x4000a7:	test	eax, eax
0x4000a9:	je	0x4000b9
<Block for 0x4000b9, 6 bytes>
0x4000b9:	cmp	dword ptr [rbp - 4], -1
0x4000bd:	je	0x4000c9
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x182]
0x4000b2:	call	0x500010
<Block for 0x4000c9, 27 bytes>
0x4000c9:	mov	edx, 0x180
0x4000ce:	mov	esi, 0x42
0x4000d3:	lea	rdi, [rip + 0x16f]
0x4000da:	mov	eax, 0
0x4000df:	call	0x500000
<Block for 0x4000bf, 10 bytes>
0x4000bf:	mov	eax, dword ptr [rbp - 4]
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500008
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x4000f7
<Block for 0x4000e4, 9 bytes>
0x4000e4:	mov	dword ptr [rbp - 4], eax
0x4000e7:	cmp	dword ptr [rbp - 4], -1
0x4000eb:	je	0x4000f7
<Block for 0x4000f7, 3 bytes>
0x4000f7:	nop	
0x4000f8:	leave	
0x4000f9:	ret	
<Block for 0x4000ed, 10 bytes>
0x4000ed:	mov	eax, dword ptr [rbp - 4]
0x4000f0:	mov	edi, eax
0x4000f2:	call	0x500008
