<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x160
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x158]
0x400025:	mov	qword ptr [rbp - 0x150], rax
0x40002c:	lea	rax, [rbp - 0x140]
0x400033:	mov	edx, 0x63
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500000
<Block for 0x400045, 67 bytes>
0x400045:	mov	byte ptr [rbp - 0xdd], 0
0x40004c:	lea	rax, [rbp - 0x140]
0x400053:	sub	rax, 8
0x400057:	mov	qword ptr [rbp - 0x158], rax
0x40005e:	mov	rax, qword ptr [rbp - 0x150]
0x400065:	mov	rax, qword ptr [rax]
0x400068:	mov	qword ptr [rbp - 0x148], rax
0x40006f:	lea	rax, [rbp - 0xd0]
0x400076:	mov	edx, 0xc7
0x40007b:	mov	esi, 0x43
0x400080:	mov	rdi, rax
0x400083:	call	0x500000
<Block for 0x400088, 29 bytes>
0x400088:	mov	byte ptr [rbp - 9], 0
0x40008c:	mov	rdx, qword ptr [rbp - 0x148]
0x400093:	lea	rax, [rbp - 0xd0]
0x40009a:	mov	rsi, rdx
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500008
<Block for 0x4000a5, 15 bytes>
0x4000a5:	lea	rax, [rbp - 0xd0]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500010
<Block for 0x4000b4, 16 bytes>
0x4000b4:	nop	
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	xor	rax, qword ptr fs:[0x28]
0x4000c2:	je	0x4000c9
<Block for 0x4000c9, 2 bytes>
0x4000c9:	leave	
0x4000ca:	ret	
<Block for 0x4000c4, 5 bytes>
0x4000c4:	call	0x500018
