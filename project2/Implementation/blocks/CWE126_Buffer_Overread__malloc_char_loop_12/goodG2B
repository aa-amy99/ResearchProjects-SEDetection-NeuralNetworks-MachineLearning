<Block for 0x400168, 51 bytes>
0x400168:	endbr64	
0x40016c:	push	rbp
0x40016d:	mov	rbp, rsp
0x400170:	sub	rsp, 0x90
0x400177:	mov	rax, qword ptr fs:[0x28]
0x400180:	mov	qword ptr [rbp - 8], rax
0x400184:	xor	eax, eax
0x400186:	mov	qword ptr [rbp - 0x88], 0
0x400191:	mov	eax, 0
0x400196:	call	0x500000
<Block for 0x40019b, 4 bytes>
0x40019b:	test	eax, eax
0x40019d:	je	0x4001ed
<Block for 0x4001ed, 10 bytes>
0x4001ed:	mov	edi, 0x64
0x4001f2:	call	0x500008
<Block for 0x40019f, 10 bytes>
0x40019f:	mov	edi, 0x64
0x4001a4:	call	0x500008
<Block for 0x4001f7, 17 bytes>
0x4001f7:	mov	qword ptr [rbp - 0x88], rax
0x4001fe:	cmp	qword ptr [rbp - 0x88], 0
0x400206:	jne	0x400212
<Block for 0x4001a9, 17 bytes>
0x4001a9:	mov	qword ptr [rbp - 0x88], rax
0x4001b0:	cmp	qword ptr [rbp - 0x88], 0
0x4001b8:	jne	0x4001c4
<Block for 0x400208, 10 bytes>
0x400208:	mov	edi, 0xffffffff
0x40020d:	call	0x500010
<Block for 0x400212, 25 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x88]
0x400219:	mov	edx, 0x63
0x40021e:	mov	esi, 0x41
0x400223:	mov	rdi, rax
0x400226:	call	0x500018
<Block for 0x4001ba, 10 bytes>
0x4001ba:	mov	edi, 0xffffffff
0x4001bf:	call	0x500010
<Block for 0x4001c4, 25 bytes>
0x4001c4:	mov	rax, qword ptr [rbp - 0x88]
0x4001cb:	mov	edx, 0x63
0x4001d0:	mov	esi, 0x41
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500018
<Block for 0x40022b, 36 bytes>
0x40022b:	mov	rax, qword ptr [rbp - 0x88]
0x400232:	add	rax, 0x63
0x400236:	mov	byte ptr [rax], 0
0x400239:	lea	rax, [rbp - 0x70]
0x40023d:	mov	edx, 0x63
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500018
<Block for 0x4001dd, 16 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x88]
0x4001e4:	add	rax, 0x63
0x4001e8:	mov	byte ptr [rax], 0
0x4001eb:	jmp	0x400239
<Block for 0x40024f, 16 bytes>
0x40024f:	mov	byte ptr [rbp - 0xd], 0
0x400253:	lea	rax, [rbp - 0x70]
0x400257:	mov	rdi, rax
0x40025a:	call	0x500020
<Block for 0x400239, 22 bytes>
0x400239:	lea	rax, [rbp - 0x70]
0x40023d:	mov	edx, 0x63
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500018
<Block for 0x40025f, 14 bytes>
0x40025f:	mov	qword ptr [rbp - 0x78], rax
0x400263:	mov	qword ptr [rbp - 0x80], 0
0x40026b:	jmp	0x400290
<Block for 0x400290, 10 bytes>
0x400290:	mov	rax, qword ptr [rbp - 0x80]
0x400294:	cmp	rax, qword ptr [rbp - 0x78]
0x400298:	jb	0x40026d
<Block for 0x40026d, 45 bytes>
0x40026d:	mov	rdx, qword ptr [rbp - 0x88]
0x400274:	mov	rax, qword ptr [rbp - 0x80]
0x400278:	add	rax, rdx
0x40027b:	movzx	eax, byte ptr [rax]
0x40027e:	lea	rcx, [rbp - 0x70]
0x400282:	mov	rdx, qword ptr [rbp - 0x80]
0x400286:	add	rdx, rcx
0x400289:	mov	byte ptr [rdx], al
0x40028b:	add	qword ptr [rbp - 0x80], 1
0x400290:	mov	rax, qword ptr [rbp - 0x80]
0x400294:	cmp	rax, qword ptr [rbp - 0x78]
0x400298:	jb	0x40026d
<Block for 0x40029a, 16 bytes>
0x40029a:	mov	byte ptr [rbp - 0xd], 0
0x40029e:	lea	rax, [rbp - 0x70]
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x500028
<Block for 0x4002aa, 15 bytes>
0x4002aa:	mov	rax, qword ptr [rbp - 0x88]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500030
<Block for 0x4002b9, 16 bytes>
0x4002b9:	nop	
0x4002ba:	mov	rax, qword ptr [rbp - 8]
0x4002be:	xor	rax, qword ptr fs:[0x28]
0x4002c7:	je	0x4002ce
<Block for 0x4002ce, 2 bytes>
0x4002ce:	leave	
0x4002cf:	ret	
<Block for 0x4002c9, 5 bytes>
0x4002c9:	call	0x500038
