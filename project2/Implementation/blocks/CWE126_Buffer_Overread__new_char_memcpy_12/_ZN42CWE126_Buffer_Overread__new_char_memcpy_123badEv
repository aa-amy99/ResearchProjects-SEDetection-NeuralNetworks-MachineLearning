<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	call	0x500000
<Block for 0x400028, 9 bytes>
0x400028:	test	eax, eax
0x40002a:	setne	al
0x40002d:	test	al, al
0x40002f:	je	0x400062
<Block for 0x400062, 10 bytes>
0x400062:	mov	edi, 0x64
0x400067:	call	0x500008
<Block for 0x400031, 10 bytes>
0x400031:	mov	edi, 0x32
0x400036:	call	0x500008
<Block for 0x40006c, 26 bytes>
0x40006c:	mov	qword ptr [rbp - 0x78], rax
0x400070:	mov	rax, qword ptr [rbp - 0x78]
0x400074:	mov	edx, 0x63
0x400079:	mov	esi, 0x41
0x40007e:	mov	rdi, rax
0x400081:	call	0x500010
<Block for 0x40003b, 26 bytes>
0x40003b:	mov	qword ptr [rbp - 0x78], rax
0x40003f:	mov	rax, qword ptr [rbp - 0x78]
0x400043:	mov	edx, 0x31
0x400048:	mov	esi, 0x41
0x40004d:	mov	rdi, rax
0x400050:	call	0x500010
<Block for 0x400086, 33 bytes>
0x400086:	mov	rax, qword ptr [rbp - 0x78]
0x40008a:	add	rax, 0x63
0x40008e:	mov	byte ptr [rax], 0
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x400055, 13 bytes>
0x400055:	mov	rax, qword ptr [rbp - 0x78]
0x400059:	add	rax, 0x31
0x40005d:	mov	byte ptr [rax], 0
0x400060:	jmp	0x400091
<Block for 0x4000a7, 16 bytes>
0x4000a7:	mov	byte ptr [rbp - 0xd], 0
0x4000ab:	lea	rax, [rbp - 0x70]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500018
<Block for 0x400091, 22 bytes>
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x4000b7, 22 bytes>
0x4000b7:	mov	rdx, rax
0x4000ba:	mov	rcx, qword ptr [rbp - 0x78]
0x4000be:	lea	rax, [rbp - 0x70]
0x4000c2:	mov	rsi, rcx
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500020
<Block for 0x4000cd, 16 bytes>
0x4000cd:	mov	byte ptr [rbp - 0xd], 0
0x4000d1:	lea	rax, [rbp - 0x70]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500028
<Block for 0x4000dd, 7 bytes>
0x4000dd:	cmp	qword ptr [rbp - 0x78], 0
0x4000e2:	je	0x4000f0
<Block for 0x4000f0, 16 bytes>
0x4000f0:	nop	
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	xor	rax, qword ptr fs:[0x28]
0x4000fe:	je	0x400105
<Block for 0x4000e4, 12 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x78]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500030
<Block for 0x400105, 2 bytes>
0x400105:	leave	
0x400106:	ret	
<Block for 0x400100, 5 bytes>
0x400100:	call	0x500038
