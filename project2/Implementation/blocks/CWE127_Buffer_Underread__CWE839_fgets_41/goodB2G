<Block for 0x400242, 79 bytes>
0x400242:	endbr64	
0x400246:	push	rbp
0x400247:	mov	rbp, rsp
0x40024a:	sub	rsp, 0x20
0x40024e:	mov	rax, qword ptr fs:[0x28]
0x400257:	mov	qword ptr [rbp - 8], rax
0x40025b:	xor	eax, eax
0x40025d:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400264:	mov	qword ptr [rbp - 0x16], 0
0x40026c:	mov	dword ptr [rbp - 0xe], 0
0x400273:	mov	word ptr [rbp - 0xa], 0
0x400279:	mov	rdx, qword ptr [rip + 0xffd98]
0x400280:	lea	rax, [rbp - 0x16]
0x400284:	mov	esi, 0xe
0x400289:	mov	rdi, rax
0x40028c:	call	0x500020
<Block for 0x400291, 5 bytes>
0x400291:	test	rax, rax
0x400294:	je	0x4002a7
<Block for 0x4002a7, 12 bytes>
0x4002a7:	lea	rdi, [rip + 0x69]
0x4002ae:	call	0x500008
<Block for 0x400296, 12 bytes>
0x400296:	lea	rax, [rbp - 0x16]
0x40029a:	mov	rdi, rax
0x40029d:	call	0x500028
<Block for 0x4002b3, 10 bytes>
0x4002b3:	mov	eax, dword ptr [rbp - 0x1c]
0x4002b6:	mov	edi, eax
0x4002b8:	call	0x4001bb
<Block for 0x4002a2, 5 bytes>
0x4002a2:	mov	dword ptr [rbp - 0x1c], eax
0x4002a5:	jmp	0x4002b3
<Block for 0x4002bd, 16 bytes>
0x4002bd:	nop	
0x4002be:	mov	rax, qword ptr [rbp - 8]
0x4002c2:	xor	rax, qword ptr fs:[0x28]
0x4002cb:	je	0x4002d2
<Block for 0x4002d2, 2 bytes>
0x4002d2:	leave	
0x4002d3:	ret	
<Block for 0x4002cd, 5 bytes>
0x4002cd:	call	0x500010
