<Block for 0x4000a1, 60 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x120
0x4000b0:	mov	rax, qword ptr fs:[0x28]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	xor	eax, eax
0x4000bf:	nop	
0x4000c0:	endbr64	
0x4000c4:	lea	rax, [rbp - 0xa0]
0x4000cb:	mov	edx, 0x95
0x4000d0:	mov	esi, 0x41
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500000
<Block for 0x4000dd, 16 bytes>
0x4000dd:	mov	byte ptr [rbp - 0xb], 0
0x4000e1:	mov	dword ptr [rbp - 0x114], 0
0x4000eb:	jmp	0x400113
<Block for 0x400113, 9 bytes>
0x400113:	cmp	dword ptr [rbp - 0x114], 0x62
0x40011a:	jle	0x4000ed
<Block for 0x4000ed, 47 bytes>
0x4000ed:	mov	eax, dword ptr [rbp - 0x114]
0x4000f3:	cdqe	
0x4000f5:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x4000fd:	mov	eax, dword ptr [rbp - 0x114]
0x400103:	cdqe	
0x400105:	mov	byte ptr [rbp + rax - 0x110], dl
0x40010c:	add	dword ptr [rbp - 0x114], 1
0x400113:	cmp	dword ptr [rbp - 0x114], 0x62
0x40011a:	jle	0x4000ed
<Block for 0x40011c, 22 bytes>
0x40011c:	mov	byte ptr [rbp - 0xad], 0
0x400123:	lea	rax, [rbp - 0x110]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x400132, 16 bytes>
0x400132:	nop	
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	xor	rax, qword ptr fs:[0x28]
0x400140:	je	0x400147
<Block for 0x400147, 2 bytes>
0x400147:	leave	
0x400148:	ret	
<Block for 0x400142, 5 bytes>
0x400142:	call	0x500010
