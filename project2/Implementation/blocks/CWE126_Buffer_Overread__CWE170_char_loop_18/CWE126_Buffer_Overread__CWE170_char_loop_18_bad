<Block for 0x400000, 60 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	nop	
0x40001f:	endbr64	
0x400023:	lea	rax, [rbp - 0xa0]
0x40002a:	mov	edx, 0x95
0x40002f:	mov	esi, 0x41
0x400034:	mov	rdi, rax
0x400037:	call	0x500000
<Block for 0x40003c, 16 bytes>
0x40003c:	mov	byte ptr [rbp - 0xb], 0
0x400040:	mov	dword ptr [rbp - 0x114], 0
0x40004a:	jmp	0x400072
<Block for 0x400072, 9 bytes>
0x400072:	cmp	dword ptr [rbp - 0x114], 0x62
0x400079:	jle	0x40004c
<Block for 0x40004c, 47 bytes>
0x40004c:	mov	eax, dword ptr [rbp - 0x114]
0x400052:	cdqe	
0x400054:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x40005c:	mov	eax, dword ptr [rbp - 0x114]
0x400062:	cdqe	
0x400064:	mov	byte ptr [rbp + rax - 0x110], dl
0x40006b:	add	dword ptr [rbp - 0x114], 1
0x400072:	cmp	dword ptr [rbp - 0x114], 0x62
0x400079:	jle	0x40004c
<Block for 0x40007b, 15 bytes>
0x40007b:	lea	rax, [rbp - 0x110]
0x400082:	mov	rdi, rax
0x400085:	call	0x500008
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500010
