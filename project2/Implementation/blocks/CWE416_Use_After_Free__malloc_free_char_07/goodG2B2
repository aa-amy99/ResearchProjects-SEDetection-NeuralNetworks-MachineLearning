<Block for 0x4001ff, 31 bytes>
0x4001ff:	endbr64	
0x400203:	push	rbp
0x400204:	mov	rbp, rsp
0x400207:	sub	rsp, 0x10
0x40020b:	mov	qword ptr [rbp - 8], 0
0x400213:	mov	eax, dword ptr [rip + 0x93]
0x400219:	cmp	eax, 5
0x40021c:	jne	0x40025e
<Block for 0x40021e, 10 bytes>
0x40021e:	mov	edi, 0x64
0x400223:	call	0x500000
<Block for 0x40025e, 11 bytes>
0x40025e:	mov	eax, dword ptr [rip + 0x48]
0x400264:	cmp	eax, 5
0x400267:	jne	0x400275
<Block for 0x400228, 11 bytes>
0x400228:	mov	qword ptr [rbp - 8], rax
0x40022c:	cmp	qword ptr [rbp - 8], 0
0x400231:	jne	0x40023d
<Block for 0x400269, 12 bytes>
0x400269:	mov	rax, qword ptr [rbp - 8]
0x40026d:	mov	rdi, rax
0x400270:	call	0x500020
<Block for 0x400275, 3 bytes>
0x400275:	nop	
0x400276:	leave	
0x400277:	ret	
<Block for 0x400233, 10 bytes>
0x400233:	mov	edi, 0xffffffff
0x400238:	call	0x500008
<Block for 0x40023d, 22 bytes>
0x40023d:	mov	rax, qword ptr [rbp - 8]
0x400241:	mov	edx, 0x63
0x400246:	mov	esi, 0x41
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500010
<Block for 0x400253, 22 bytes>
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	add	rax, 0x63
0x40025b:	mov	byte ptr [rax], 0
0x40025e:	mov	eax, dword ptr [rip + 0x48]
0x400264:	cmp	eax, 5
0x400267:	jne	0x400275
