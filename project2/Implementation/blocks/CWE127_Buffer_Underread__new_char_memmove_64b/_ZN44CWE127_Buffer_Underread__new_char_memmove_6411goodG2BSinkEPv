<Block for 0x400094, 81 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0x90
0x4000a3:	mov	qword ptr [rbp - 0x88], rdi
0x4000aa:	mov	rax, qword ptr fs:[0x28]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	xor	eax, eax
0x4000b9:	mov	rax, qword ptr [rbp - 0x88]
0x4000c0:	mov	qword ptr [rbp - 0x80], rax
0x4000c4:	mov	rax, qword ptr [rbp - 0x80]
0x4000c8:	mov	rax, qword ptr [rax]
0x4000cb:	mov	qword ptr [rbp - 0x78], rax
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x43
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x4000e5, 28 bytes>
0x4000e5:	mov	byte ptr [rbp - 0xd], 0
0x4000e9:	mov	rcx, qword ptr [rbp - 0x78]
0x4000ed:	lea	rax, [rbp - 0x70]
0x4000f1:	mov	edx, 0x64
0x4000f6:	mov	rsi, rcx
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500008
<Block for 0x400101, 16 bytes>
0x400101:	mov	byte ptr [rbp - 0xd], 0
0x400105:	lea	rax, [rbp - 0x70]
0x400109:	mov	rdi, rax
0x40010c:	call	0x500010
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500018
