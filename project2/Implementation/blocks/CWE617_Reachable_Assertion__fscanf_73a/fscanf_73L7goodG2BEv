<Block for 0x40010f, 40 bytes>
0x40010f:	endbr64	
0x400113:	push	rbp
0x400114:	mov	rbp, rsp
0x400117:	push	rbx
0x400118:	sub	rsp, 0x58
0x40011c:	mov	rax, qword ptr fs:[0x28]
0x400125:	mov	qword ptr [rbp - 0x18], rax
0x400129:	xor	eax, eax
0x40012b:	lea	rax, [rbp - 0x50]
0x40012f:	mov	rdi, rax
0x400132:	call	0x4002c6
<Block for 0x400137, 33 bytes>
0x400137:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40013e:	mov	dword ptr [rbp - 0x54], 6
0x400145:	lea	rdx, [rbp - 0x54]
0x400149:	lea	rax, [rbp - 0x50]
0x40014d:	mov	rsi, rdx
0x400150:	mov	rdi, rax
0x400153:	call	0x4003bc
<Block for 0x400158, 19 bytes>
0x400158:	lea	rdx, [rbp - 0x54]
0x40015c:	lea	rax, [rbp - 0x50]
0x400160:	mov	rsi, rdx
0x400163:	mov	rdi, rax
0x400166:	call	0x4003bc
<Block for 0x40016b, 19 bytes>
0x40016b:	lea	rdx, [rbp - 0x54]
0x40016f:	lea	rax, [rbp - 0x50]
0x400173:	mov	rsi, rdx
0x400176:	mov	rdi, rax
0x400179:	call	0x4003bc
<Block for 0x40017e, 19 bytes>
0x40017e:	lea	rdx, [rbp - 0x50]
0x400182:	lea	rax, [rbp - 0x30]
0x400186:	mov	rsi, rdx
0x400189:	mov	rdi, rax
0x40018c:	call	0x4003f6
<Block for 0x400191, 12 bytes>
0x400191:	lea	rax, [rbp - 0x30]
0x400195:	mov	rdi, rax
0x400198:	call	0x500028
<Block for 0x40019d, 12 bytes>
0x40019d:	lea	rax, [rbp - 0x30]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4002e6
<Block for 0x4001a9, 12 bytes>
0x4001a9:	lea	rax, [rbp - 0x50]
0x4001ad:	mov	rdi, rax
0x4001b0:	call	0x4002e6
<Block for 0x4001b5, 16 bytes>
0x4001b5:	nop	
0x4001b6:	mov	rax, qword ptr [rbp - 0x18]
0x4001ba:	xor	rax, qword ptr fs:[0x28]
0x4001c3:	je	0x4001ff
<Block for 0x4001ff, 7 bytes>
0x4001ff:	add	rsp, 0x58
0x400203:	pop	rbx
0x400204:	pop	rbp
0x400205:	ret	
<Block for 0x4001c5, 2 bytes>
0x4001c5:	jmp	0x4001fa
<Block for 0x4001fa, 5 bytes>
0x4001fa:	call	0x500020
