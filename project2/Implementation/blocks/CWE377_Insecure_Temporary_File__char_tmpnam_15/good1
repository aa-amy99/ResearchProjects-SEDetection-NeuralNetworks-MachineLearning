<Block for 0x400075, 67 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x30
0x400081:	mov	rax, qword ptr fs:[0x28]
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	xor	eax, eax
0x400090:	movabs	rax, 0x6c69662f706d742f
0x40009a:	movabs	rdx, 0x58585858585865
0x4000a4:	mov	qword ptr [rbp - 0x20], rax
0x4000a8:	mov	qword ptr [rbp - 0x18], rdx
0x4000ac:	lea	rax, [rbp - 0x20]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500028
<Block for 0x4000b8, 15 bytes>
0x4000b8:	mov	dword ptr [rbp - 0x24], eax
0x4000bb:	lea	rax, [rbp - 0x20]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
<Block for 0x4000c7, 6 bytes>
0x4000c7:	cmp	dword ptr [rbp - 0x24], -1
0x4000cb:	je	0x4000e3
<Block for 0x4000e3, 17 bytes>
0x4000e3:	nop	
0x4000e4:	nop	
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	xor	rax, qword ptr fs:[0x28]
0x4000f2:	je	0x4000f9
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rdi, [rip + 0xcc]
0x4000d4:	call	0x500010
<Block for 0x4000f9, 2 bytes>
0x4000f9:	leave	
0x4000fa:	ret	
<Block for 0x4000f4, 5 bytes>
0x4000f4:	call	0x500030
<Block for 0x4000d9, 10 bytes>
0x4000d9:	mov	eax, dword ptr [rbp - 0x24]
0x4000dc:	mov	edi, eax
0x4000de:	call	0x500020
