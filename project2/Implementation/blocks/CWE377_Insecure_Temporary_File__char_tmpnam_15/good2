<Block for 0x4000fb, 67 bytes>
0x4000fb:	endbr64	
0x4000ff:	push	rbp
0x400100:	mov	rbp, rsp
0x400103:	sub	rsp, 0x30
0x400107:	mov	rax, qword ptr fs:[0x28]
0x400110:	mov	qword ptr [rbp - 8], rax
0x400114:	xor	eax, eax
0x400116:	movabs	rax, 0x6c69662f706d742f
0x400120:	movabs	rdx, 0x58585858585865
0x40012a:	mov	qword ptr [rbp - 0x20], rax
0x40012e:	mov	qword ptr [rbp - 0x18], rdx
0x400132:	lea	rax, [rbp - 0x20]
0x400136:	mov	rdi, rax
0x400139:	call	0x500028
<Block for 0x40013e, 15 bytes>
0x40013e:	mov	dword ptr [rbp - 0x24], eax
0x400141:	lea	rax, [rbp - 0x20]
0x400145:	mov	rdi, rax
0x400148:	call	0x500010
<Block for 0x40014d, 6 bytes>
0x40014d:	cmp	dword ptr [rbp - 0x24], -1
0x400151:	je	0x400169
<Block for 0x400169, 17 bytes>
0x400169:	nop	
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x400153, 12 bytes>
0x400153:	lea	rdi, [rip + 0x46]
0x40015a:	call	0x500010
<Block for 0x40017f, 2 bytes>
0x40017f:	leave	
0x400180:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500030
<Block for 0x40015f, 10 bytes>
0x40015f:	mov	eax, dword ptr [rbp - 0x24]
0x400162:	mov	edi, eax
0x400164:	call	0x500020
