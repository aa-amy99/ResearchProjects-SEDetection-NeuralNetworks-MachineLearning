<Block for 0x4000ed, 40 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	add	rsp, -0x80
0x4000f9:	mov	rax, qword ptr fs:[0x28]
0x400102:	mov	qword ptr [rbp - 8], rax
0x400106:	xor	eax, eax
0x400108:	mov	qword ptr [rbp - 0x80], 0
0x400110:	call	0x40000f
<Block for 0x400115, 9 bytes>
0x400115:	test	eax, eax
0x400117:	setne	al
0x40011a:	test	al, al
0x40011c:	je	0x40012c
<Block for 0x40012c, 10 bytes>
0x40012c:	mov	edi, 0x64
0x400131:	call	0x500000
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rdi, [rip + 0x181]
0x400125:	call	0x500020
<Block for 0x400136, 26 bytes>
0x400136:	mov	qword ptr [rbp - 0x78], rax
0x40013a:	mov	rax, qword ptr [rbp - 0x78]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x41
0x400148:	mov	rdi, rax
0x40014b:	call	0x500008
<Block for 0x40012a, 2 bytes>
0x40012a:	jmp	0x400163
<Block for 0x400150, 41 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0x78]
0x400154:	add	rax, 0x63
0x400158:	mov	byte ptr [rax], 0
0x40015b:	mov	rax, qword ptr [rbp - 0x78]
0x40015f:	mov	qword ptr [rbp - 0x80], rax
0x400163:	lea	rax, [rbp - 0x70]
0x400167:	mov	edx, 0x63
0x40016c:	mov	esi, 0x43
0x400171:	mov	rdi, rax
0x400174:	call	0x500008
<Block for 0x400163, 22 bytes>
0x400163:	lea	rax, [rbp - 0x70]
0x400167:	mov	edx, 0x63
0x40016c:	mov	esi, 0x43
0x400171:	mov	rdi, rax
0x400174:	call	0x500008
<Block for 0x400179, 16 bytes>
0x400179:	mov	byte ptr [rbp - 0xd], 0
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	rdi, rax
0x400184:	call	0x500010
<Block for 0x400189, 22 bytes>
0x400189:	mov	rdx, rax
0x40018c:	mov	rcx, qword ptr [rbp - 0x80]
0x400190:	lea	rax, [rbp - 0x70]
0x400194:	mov	rsi, rcx
0x400197:	mov	rdi, rax
0x40019a:	call	0x500018
<Block for 0x40019f, 16 bytes>
0x40019f:	mov	byte ptr [rbp - 0xd], 0
0x4001a3:	lea	rax, [rbp - 0x70]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500020
<Block for 0x4001af, 16 bytes>
0x4001af:	nop	
0x4001b0:	mov	rax, qword ptr [rbp - 8]
0x4001b4:	xor	rax, qword ptr fs:[0x28]
0x4001bd:	je	0x4001c4
<Block for 0x4001c4, 2 bytes>
0x4001c4:	leave	
0x4001c5:	ret	
<Block for 0x4001bf, 5 bytes>
0x4001bf:	call	0x500028
