<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400068
<Block for 0x400068, 16 bytes>
0x400068:	nop	
0x400069:	mov	rax, qword ptr [rbp - 8]
0x40006d:	xor	rax, qword ptr fs:[0x28]
0x400076:	je	0x40007d
<Block for 0x400029, 36 bytes>
0x400029:	mov	qword ptr [rbp - 0x78], 0
0x400031:	mov	byte ptr [rbp - 0x70], 0
0x400035:	lea	rax, [rbp - 0x70]
0x400039:	mov	edx, 0x64
0x40003e:	lea	rsi, [rip + 0x1bf]
0x400045:	mov	rdi, rax
0x400048:	call	0x500008
<Block for 0x40007d, 2 bytes>
0x40007d:	leave	
0x40007e:	ret	
<Block for 0x400078, 5 bytes>
0x400078:	call	0x500020
<Block for 0x40004d, 15 bytes>
0x40004d:	mov	qword ptr [rbp - 0x78], rax
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	mov	edi, eax
0x400057:	call	0x500010
<Block for 0x40005c, 12 bytes>
0x40005c:	lea	rax, [rbp - 0x70]
0x400060:	mov	rdi, rax
0x400063:	call	0x500018
