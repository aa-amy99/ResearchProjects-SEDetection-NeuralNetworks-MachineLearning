<Block for 0x40007f, 37 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	add	rsp, -0x80
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	mov	eax, 0
0x40009f:	call	0x500028
<Block for 0x4000a4, 4 bytes>
0x4000a4:	test	eax, eax
0x4000a6:	je	0x4000b6
<Block for 0x4000b6, 17 bytes>
0x4000b6:	mov	qword ptr [rbp - 0x78], 0
0x4000be:	mov	byte ptr [rbp - 0x70], 0
0x4000c2:	call	0x500030
<Block for 0x4000a8, 12 bytes>
0x4000a8:	lea	rdi, [rip + 0x15d]
0x4000af:	call	0x500018
<Block for 0x4000c7, 30 bytes>
0x4000c7:	mov	dword ptr [rax], 0
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	edx, 0x64
0x4000d6:	lea	rsi, [rip + 0x127]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500008
<Block for 0x4000b4, 2 bytes>
0x4000b4:	jmp	0x400122
<Block for 0x4000e5, 9 bytes>
0x4000e5:	mov	qword ptr [rbp - 0x78], rax
0x4000e9:	call	0x500030
<Block for 0x400122, 16 bytes>
0x400122:	nop	
0x400123:	mov	rax, qword ptr [rbp - 8]
0x400127:	xor	rax, qword ptr fs:[0x28]
0x400130:	je	0x400137
<Block for 0x4000ee, 7 bytes>
0x4000ee:	mov	eax, dword ptr [rax]
0x4000f0:	cmp	eax, 0x54
0x4000f3:	jne	0x40010b
<Block for 0x400137, 2 bytes>
0x400137:	leave	
0x400138:	ret	
<Block for 0x400132, 5 bytes>
0x400132:	call	0x500020
<Block for 0x4000f5, 12 bytes>
0x4000f5:	lea	rdi, [rip + 0x125]
0x4000fc:	call	0x500018
<Block for 0x40010b, 11 bytes>
0x40010b:	mov	rax, qword ptr [rbp - 0x78]
0x40010f:	mov	edi, eax
0x400111:	call	0x500010
<Block for 0x400101, 10 bytes>
0x400101:	mov	edi, 1
0x400106:	call	0x500038
<Block for 0x400116, 12 bytes>
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500018
