<Block for 0x40030d, 59 bytes>
0x40030d:	endbr64	
0x400311:	push	rbp
0x400312:	mov	rbp, rsp
0x400315:	sub	rsp, 0x30
0x400319:	mov	qword ptr [rbp - 0x28], rdi
0x40031d:	mov	rax, qword ptr fs:[0x28]
0x400326:	mov	qword ptr [rbp - 8], rax
0x40032a:	xor	eax, eax
0x40032c:	lea	rdx, [rbp - 0x14]
0x400330:	mov	rax, qword ptr [rbp - 0x28]
0x400334:	lea	rsi, [rip + 0x1cd]
0x40033b:	mov	rdi, rax
0x40033e:	mov	eax, 0
0x400343:	call	0x500000
<Block for 0x400348, 5 bytes>
0x400348:	cmp	eax, 1
0x40034b:	jne	0x400381
<Block for 0x40034d, 10 bytes>
0x40034d:	mov	eax, dword ptr [rbp - 0x14]
0x400350:	cmp	eax, 0x270f
0x400355:	jg	0x400381
<Block for 0x400381, 16 bytes>
0x400381:	nop	
0x400382:	mov	rax, qword ptr [rbp - 8]
0x400386:	xor	rax, qword ptr fs:[0x28]
0x40038f:	je	0x400396
<Block for 0x400357, 16 bytes>
0x400357:	mov	dword ptr [rbp - 0xc], 0
0x40035e:	mov	dword ptr [rbp - 0x10], 0
0x400365:	jmp	0x40036f
<Block for 0x400396, 2 bytes>
0x400396:	leave	
0x400397:	ret	
<Block for 0x400391, 5 bytes>
0x400391:	call	0x500010
<Block for 0x40036f, 8 bytes>
0x40036f:	mov	eax, dword ptr [rbp - 0x14]
0x400372:	cmp	dword ptr [rbp - 0x10], eax
0x400375:	jl	0x400367
<Block for 0x400367, 16 bytes>
0x400367:	add	dword ptr [rbp - 0xc], 1
0x40036b:	add	dword ptr [rbp - 0x10], 1
0x40036f:	mov	eax, dword ptr [rbp - 0x14]
0x400372:	cmp	dword ptr [rbp - 0x10], eax
0x400375:	jl	0x400367
<Block for 0x400377, 10 bytes>
0x400377:	mov	eax, dword ptr [rbp - 0xc]
0x40037a:	mov	edi, eax
0x40037c:	call	0x500008
