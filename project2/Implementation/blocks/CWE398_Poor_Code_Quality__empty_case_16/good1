<Block for 0x400056, 17 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x10
0x400062:	call	0x500000
<Block for 0x400067, 55 bytes>
0x400067:	mov	edx, eax
0x400069:	movsxd	rax, edx
0x40006c:	imul	rax, rax, 0x55555556
0x400073:	shr	rax, 0x20
0x400077:	mov	rcx, rax
0x40007a:	mov	eax, edx
0x40007c:	sar	eax, 0x1f
0x40007f:	mov	esi, ecx
0x400081:	sub	esi, eax
0x400083:	mov	eax, esi
0x400085:	mov	dword ptr [rbp - 4], eax
0x400088:	mov	ecx, dword ptr [rbp - 4]
0x40008b:	mov	eax, ecx
0x40008d:	add	eax, eax
0x40008f:	add	eax, ecx
0x400091:	sub	edx, eax
0x400093:	mov	eax, edx
0x400095:	mov	dword ptr [rbp - 4], eax
0x400098:	cmp	dword ptr [rbp - 4], 0
0x40009c:	jne	0x4000ab
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0x3c]
0x4000a5:	call	0x500008
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x49]
0x4000b2:	call	0x500008
<Block for 0x4000aa, 1 bytes>
0x4000aa:	nop	
<Block for 0x4000b7, 4 bytes>
0x4000b7:	nop	
0x4000b8:	nop	
0x4000b9:	leave	
0x4000ba:	ret	
