<Block for 0x40008f, 43 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	sub	rsp, 0x30
0x40009b:	mov	qword ptr [rbp - 0x28], rdi
0x40009f:	mov	rax, qword ptr [rbp - 0x28]
0x4000a3:	mov	eax, dword ptr [rax + 8]
0x4000a6:	mov	dword ptr [rbp - 0x14], eax
0x4000a9:	mov	eax, dword ptr [rbp - 0x14]
0x4000ac:	cdqe	
0x4000ae:	shl	rax, 2
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500000
<Block for 0x4000ba, 11 bytes>
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	cmp	qword ptr [rbp - 8], 0
0x4000c3:	jne	0x4000cf
<Block for 0x4000c5, 10 bytes>
0x4000c5:	mov	edi, 0xffffffff
0x4000ca:	call	0x500008
<Block for 0x4000cf, 10 bytes>
0x4000cf:	mov	qword ptr [rbp - 0x10], 0
0x4000d7:	jmp	0x4000f7
<Block for 0x4000f7, 11 bytes>
0x4000f7:	mov	eax, dword ptr [rbp - 0x14]
0x4000fa:	cdqe	
0x4000fc:	cmp	qword ptr [rbp - 0x10], rax
0x400100:	jb	0x4000d9
<Block for 0x4000d9, 41 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 0x10]
0x4000dd:	lea	rdx, [rax*4]
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	add	rax, rdx
0x4000ec:	mov	dword ptr [rax], 0
0x4000f2:	add	qword ptr [rbp - 0x10], 1
0x4000f7:	mov	eax, dword ptr [rbp - 0x14]
0x4000fa:	cdqe	
0x4000fc:	cmp	qword ptr [rbp - 0x10], rax
0x400100:	jb	0x4000d9
<Block for 0x400102, 13 bytes>
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	mov	eax, dword ptr [rax]
0x400108:	mov	edi, eax
0x40010a:	call	0x500010
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500018
<Block for 0x40011b, 3 bytes>
0x40011b:	nop	
0x40011c:	leave	
0x40011d:	ret	
