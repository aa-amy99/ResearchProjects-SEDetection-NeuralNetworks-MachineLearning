<Block for 0x400160, 43 bytes>
0x400160:	endbr64	
0x400164:	push	rbp
0x400165:	mov	rbp, rsp
0x400168:	push	rbx
0x400169:	sub	rsp, 0x88
0x400170:	mov	rax, qword ptr fs:[0x28]
0x400179:	mov	qword ptr [rbp - 0x18], rax
0x40017d:	xor	eax, eax
0x40017f:	lea	rax, [rbp - 0x80]
0x400183:	mov	rdi, rax
0x400186:	call	0x40057a
<Block for 0x40018b, 30 bytes>
0x40018b:	mov	qword ptr [rbp - 0x88], 0
0x400196:	lea	rsi, [rip + 0x2ab]
0x40019d:	lea	rdi, [rip + 0x2bd]
0x4001a4:	call	0x500030
<Block for 0x4001a9, 33 bytes>
0x4001a9:	mov	qword ptr [rbp - 0x88], rax
0x4001b0:	mov	dword ptr [rbp - 0x50], 0
0x4001b7:	lea	rdx, [rbp - 0x50]
0x4001bb:	lea	rax, [rbp - 0x80]
0x4001bf:	mov	rsi, rdx
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x400746
<Block for 0x4001ca, 36 bytes>
0x4001ca:	mov	rdx, qword ptr [rbp - 0x88]
0x4001d1:	mov	qword ptr [rax], rdx
0x4001d4:	mov	dword ptr [rbp - 0x50], 1
0x4001db:	lea	rdx, [rbp - 0x50]
0x4001df:	lea	rax, [rbp - 0x80]
0x4001e3:	mov	rsi, rdx
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x400746
<Block for 0x4001ee, 36 bytes>
0x4001ee:	mov	rdx, qword ptr [rbp - 0x88]
0x4001f5:	mov	qword ptr [rax], rdx
0x4001f8:	mov	dword ptr [rbp - 0x50], 2
0x4001ff:	lea	rdx, [rbp - 0x50]
0x400203:	lea	rax, [rbp - 0x80]
0x400207:	mov	rsi, rdx
0x40020a:	mov	rdi, rax
0x40020d:	call	0x400746
<Block for 0x400212, 29 bytes>
0x400212:	mov	rdx, qword ptr [rbp - 0x88]
0x400219:	mov	qword ptr [rax], rdx
0x40021c:	lea	rdx, [rbp - 0x80]
0x400220:	lea	rax, [rbp - 0x50]
0x400224:	mov	rsi, rdx
0x400227:	mov	rdi, rax
0x40022a:	call	0x4005ba
<Block for 0x40022f, 12 bytes>
0x40022f:	lea	rax, [rbp - 0x50]
0x400233:	mov	rdi, rax
0x400236:	call	0x500038
<Block for 0x40023b, 12 bytes>
0x40023b:	lea	rax, [rbp - 0x50]
0x40023f:	mov	rdi, rax
0x400242:	call	0x40059a
<Block for 0x400247, 12 bytes>
0x400247:	lea	rax, [rbp - 0x80]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x40059a
<Block for 0x400253, 16 bytes>
0x400253:	nop	
0x400254:	mov	rax, qword ptr [rbp - 0x18]
0x400258:	xor	rax, qword ptr fs:[0x28]
0x400261:	je	0x40029d
<Block for 0x40029d, 10 bytes>
0x40029d:	add	rsp, 0x88
0x4002a4:	pop	rbx
0x4002a5:	pop	rbp
0x4002a6:	ret	
<Block for 0x400263, 2 bytes>
0x400263:	jmp	0x400298
<Block for 0x400298, 5 bytes>
0x400298:	call	0x500028
