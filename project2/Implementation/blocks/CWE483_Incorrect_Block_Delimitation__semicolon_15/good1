<Block for 0x400072, 17 bytes>
0x400072:	endbr64	
0x400076:	push	rbp
0x400077:	mov	rbp, rsp
0x40007a:	sub	rsp, 0x10
0x40007e:	call	0x500000
<Block for 0x400083, 62 bytes>
0x400083:	mov	edx, eax
0x400085:	movsxd	rax, edx
0x400088:	imul	rax, rax, 0x55555556
0x40008f:	shr	rax, 0x20
0x400093:	mov	rcx, rax
0x400096:	mov	eax, edx
0x400098:	sar	eax, 0x1f
0x40009b:	mov	esi, ecx
0x40009d:	sub	esi, eax
0x40009f:	mov	eax, esi
0x4000a1:	mov	dword ptr [rbp - 4], eax
0x4000a4:	mov	ecx, dword ptr [rbp - 4]
0x4000a7:	mov	eax, ecx
0x4000a9:	add	eax, eax
0x4000ab:	add	eax, ecx
0x4000ad:	sub	edx, eax
0x4000af:	mov	eax, edx
0x4000b1:	mov	dword ptr [rbp - 4], eax
0x4000b4:	mov	dword ptr [rbp - 8], 0
0x4000bb:	cmp	dword ptr [rbp - 4], 0
0x4000bf:	jne	0x4000d4
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rdi, [rip + 0xb9]
0x4000c8:	call	0x500008
<Block for 0x4000d4, 6 bytes>
0x4000d4:	cmp	dword ptr [rbp - 8], 0
0x4000d8:	je	0x4000e6
<Block for 0x4000cd, 13 bytes>
0x4000cd:	mov	dword ptr [rbp - 8], 1
0x4000d4:	cmp	dword ptr [rbp - 8], 0
0x4000d8:	je	0x4000e6
<Block for 0x4000e6, 4 bytes>
0x4000e6:	nop	
0x4000e7:	nop	
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000da, 12 bytes>
0x4000da:	lea	rdi, [rip + 0xa7]
0x4000e1:	call	0x500008
