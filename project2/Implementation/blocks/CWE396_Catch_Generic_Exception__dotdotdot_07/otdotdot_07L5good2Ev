<Block for 0x4002a5, 32 bytes>
0x4002a5:	endbr64	
0x4002a9:	push	rbp
0x4002aa:	mov	rbp, rsp
0x4002ad:	push	r13
0x4002af:	push	r12
0x4002b1:	push	rbx
0x4002b2:	sub	rsp, 0x18
0x4002b6:	mov	eax, dword ptr [rip + 0x180]
0x4002bc:	cmp	eax, 5
0x4002bf:	jne	0x40041a
<Block for 0x4002c5, 5 bytes>
0x4002c5:	call	0x500000
<Block for 0x40041a, 11 bytes>
0x40041a:	add	rsp, 0x18
0x40041e:	pop	rbx
0x40041f:	pop	r12
0x400421:	pop	r13
0x400423:	pop	rbp
0x400424:	ret	
<Block for 0x4002ca, 12 bytes>
0x4002ca:	and	eax, 1
0x4002cd:	test	eax, eax
0x4002cf:	sete	al
0x4002d2:	test	al, al
0x4002d4:	je	0x40030b
<Block for 0x40030b, 5 bytes>
0x40030b:	call	0x500000
<Block for 0x4002d6, 10 bytes>
0x4002d6:	mov	edi, 0x10
0x4002db:	call	0x500008
<Block for 0x400310, 12 bytes>
0x400310:	and	eax, 1
0x400313:	test	eax, eax
0x400315:	sete	al
0x400318:	test	al, al
0x40031a:	je	0x400351
<Block for 0x4002e0, 18 bytes>
0x4002e0:	mov	rbx, rax
0x4002e3:	lea	rsi, [rip + 0x157]
0x4002ea:	mov	rdi, rbx
0x4002ed:	call	0x500010
<Block for 0x400351, 12 bytes>
0x400351:	lea	rdi, [rip + 0xf3]
0x400358:	call	0x500058
<Block for 0x40031c, 10 bytes>
0x40031c:	mov	edi, 0x10
0x400321:	call	0x500008
<Block for 0x4002f2, 25 bytes>
0x4002f2:	mov	rax, qword ptr [rip + 0xffd27]
0x4002f9:	mov	rdx, rax
0x4002fc:	lea	rsi, [rip + 0xffd25]
0x400303:	mov	rdi, rbx
0x400306:	call	0x500030
<Block for 0x40035d, 5 bytes>
0x40035d:	jmp	0x40041a
<Block for 0x400326, 18 bytes>
0x400326:	mov	rbx, rax
0x400329:	lea	rsi, [rip + 0x116]
0x400330:	mov	rdi, rbx
0x400333:	call	0x500038
<Block for 0x400338, 25 bytes>
0x400338:	mov	rax, qword ptr [rip + 0xffd09]
0x40033f:	mov	rdx, rax
0x400342:	lea	rsi, [rip + 0xffd07]
0x400349:	mov	rdi, rbx
0x40034c:	call	0x500030
