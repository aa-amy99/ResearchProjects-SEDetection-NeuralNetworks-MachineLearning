<Block for 0x4001ee, 40 bytes>
0x4001ee:	endbr64	
0x4001f2:	push	rbp
0x4001f3:	mov	rbp, rsp
0x4001f6:	push	rbx
0x4001f7:	sub	rsp, 0x48
0x4001fb:	mov	rax, qword ptr fs:[0x28]
0x400204:	mov	qword ptr [rbp - 0x18], rax
0x400208:	xor	eax, eax
0x40020a:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400211:	call	0x500000
<Block for 0x400216, 7 bytes>
0x400216:	and	eax, 1
0x400219:	test	eax, eax
0x40021b:	je	0x40023a
<Block for 0x40023a, 5 bytes>
0x40023a:	call	0x500000
<Block for 0x40021d, 5 bytes>
0x40021d:	call	0x500000
<Block for 0x40023f, 10 bytes>
0x40023f:	shl	eax, 0x1e
0x400242:	mov	ebx, eax
0x400244:	call	0x500000
<Block for 0x400222, 10 bytes>
0x400222:	shl	eax, 0x1e
0x400225:	mov	ebx, eax
0x400227:	call	0x500000
<Block for 0x400249, 10 bytes>
0x400249:	shl	eax, 0xf
0x40024c:	xor	ebx, eax
0x40024e:	call	0x500000
<Block for 0x40022c, 10 bytes>
0x40022c:	shl	eax, 0xf
0x40022f:	xor	ebx, eax
0x400231:	call	0x500000
<Block for 0x400253, 53 bytes>
0x400253:	xor	eax, ebx
0x400255:	not	eax
0x400257:	mov	dword ptr [rbp - 0x44], eax
0x40025a:	mov	qword ptr [rbp - 0x40], 0
0x400262:	mov	qword ptr [rbp - 0x38], 0
0x40026a:	mov	qword ptr [rbp - 0x30], 0
0x400272:	mov	qword ptr [rbp - 0x28], 0
0x40027a:	mov	qword ptr [rbp - 0x20], 0
0x400282:	cmp	dword ptr [rbp - 0x44], 0
0x400286:	js	0x4002c0
<Block for 0x400236, 4 bytes>
0x400236:	xor	eax, ebx
0x400238:	jmp	0x400257
<Block for 0x4002c0, 12 bytes>
0x4002c0:	lea	rdi, [rip + 0x1d1]
0x4002c7:	call	0x500010
<Block for 0x400288, 6 bytes>
0x400288:	cmp	dword ptr [rbp - 0x44], 9
0x40028c:	jg	0x4002c0
<Block for 0x400257, 49 bytes>
0x400257:	mov	dword ptr [rbp - 0x44], eax
0x40025a:	mov	qword ptr [rbp - 0x40], 0
0x400262:	mov	qword ptr [rbp - 0x38], 0
0x40026a:	mov	qword ptr [rbp - 0x30], 0
0x400272:	mov	qword ptr [rbp - 0x28], 0
0x40027a:	mov	qword ptr [rbp - 0x20], 0
0x400282:	cmp	dword ptr [rbp - 0x44], 0
0x400286:	js	0x4002c0
<Block for 0x4002cc, 16 bytes>
0x4002cc:	nop	
0x4002cd:	mov	rax, qword ptr [rbp - 0x18]
0x4002d1:	xor	rax, qword ptr fs:[0x28]
0x4002da:	je	0x4002e1
<Block for 0x40028e, 22 bytes>
0x40028e:	mov	eax, dword ptr [rbp - 0x44]
0x400291:	cdqe	
0x400293:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40029b:	mov	dword ptr [rbp - 0x48], 0
0x4002a2:	jmp	0x4002b8
<Block for 0x4002e1, 7 bytes>
0x4002e1:	add	rsp, 0x48
0x4002e5:	pop	rbx
0x4002e6:	pop	rbp
0x4002e7:	ret	
<Block for 0x4002dc, 5 bytes>
0x4002dc:	call	0x500018
<Block for 0x4002b8, 6 bytes>
0x4002b8:	cmp	dword ptr [rbp - 0x48], 9
0x4002bc:	jle	0x4002a4
<Block for 0x4002a4, 16 bytes>
0x4002a4:	mov	eax, dword ptr [rbp - 0x48]
0x4002a7:	cdqe	
0x4002a9:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002ad:	mov	edi, eax
0x4002af:	call	0x500008
<Block for 0x4002be, 2 bytes>
0x4002be:	jmp	0x4002cc
<Block for 0x4002b4, 10 bytes>
0x4002b4:	add	dword ptr [rbp - 0x48], 1
0x4002b8:	cmp	dword ptr [rbp - 0x48], 9
0x4002bc:	jle	0x4002a4
