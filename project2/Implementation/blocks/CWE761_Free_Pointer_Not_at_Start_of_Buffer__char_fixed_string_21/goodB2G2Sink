<Block for 0x40019a, 26 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	sub	rsp, 0x20
0x4001a6:	mov	qword ptr [rbp - 0x18], rdi
0x4001aa:	mov	eax, dword ptr [rip + 0xe4]
0x4001b0:	test	eax, eax
0x4001b2:	je	0x400201
<Block for 0x400201, 3 bytes>
0x400201:	nop	
0x400202:	leave	
0x400203:	ret	
<Block for 0x4001b4, 10 bytes>
0x4001b4:	mov	qword ptr [rbp - 8], 0
0x4001bc:	jmp	0x4001e3
<Block for 0x4001e3, 12 bytes>
0x4001e3:	mov	rax, qword ptr [rbp - 0x18]
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500020
<Block for 0x4001ef, 6 bytes>
0x4001ef:	cmp	qword ptr [rbp - 8], rax
0x4001f3:	jb	0x4001be
<Block for 0x4001be, 18 bytes>
0x4001be:	mov	rdx, qword ptr [rbp - 0x18]
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	add	rax, rdx
0x4001c9:	movzx	eax, byte ptr [rax]
0x4001cc:	cmp	al, 0x53
0x4001ce:	jne	0x4001de
<Block for 0x4001f5, 12 bytes>
0x4001f5:	mov	rax, qword ptr [rbp - 0x18]
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500008
<Block for 0x4001d0, 12 bytes>
0x4001d0:	lea	rdi, [rip + 0xc1]
0x4001d7:	call	0x500000
<Block for 0x4001de, 17 bytes>
0x4001de:	add	qword ptr [rbp - 8], 1
0x4001e3:	mov	rax, qword ptr [rbp - 0x18]
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500020
<Block for 0x4001dc, 2 bytes>
0x4001dc:	jmp	0x4001f5
