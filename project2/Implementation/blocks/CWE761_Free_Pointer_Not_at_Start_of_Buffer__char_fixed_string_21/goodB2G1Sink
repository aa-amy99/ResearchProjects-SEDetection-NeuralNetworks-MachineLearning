<Block for 0x4000bb, 26 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x20
0x4000c7:	mov	qword ptr [rbp - 0x18], rdi
0x4000cb:	mov	eax, dword ptr [rip + 0x1bf]
0x4000d1:	test	eax, eax
0x4000d3:	je	0x4000e3
<Block for 0x4000e3, 10 bytes>
0x4000e3:	mov	qword ptr [rbp - 8], 0
0x4000eb:	jmp	0x400112
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rdi, [rip + 0x1cd]
0x4000dc:	call	0x500000
<Block for 0x400112, 12 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	mov	rdi, rax
0x400119:	call	0x500020
<Block for 0x4000e1, 2 bytes>
0x4000e1:	jmp	0x400130
<Block for 0x40011e, 6 bytes>
0x40011e:	cmp	qword ptr [rbp - 8], rax
0x400122:	jb	0x4000ed
<Block for 0x400130, 3 bytes>
0x400130:	nop	
0x400131:	leave	
0x400132:	ret	
<Block for 0x4000ed, 18 bytes>
0x4000ed:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	add	rax, rdx
0x4000f8:	movzx	eax, byte ptr [rax]
0x4000fb:	cmp	al, 0x53
0x4000fd:	jne	0x40010d
<Block for 0x400124, 12 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0x18]
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rdi, [rip + 0x192]
0x400106:	call	0x500000
<Block for 0x40010d, 17 bytes>
0x40010d:	add	qword ptr [rbp - 8], 1
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	mov	rdi, rax
0x400119:	call	0x500020
<Block for 0x40010b, 2 bytes>
0x40010b:	jmp	0x400124
