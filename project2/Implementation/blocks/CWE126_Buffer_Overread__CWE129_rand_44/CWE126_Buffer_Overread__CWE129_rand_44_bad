<Block for 0x400081, 36 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	push	rbx
0x40008a:	sub	rsp, 0x18
0x40008e:	lea	rax, [rip - 0x95]
0x400095:	mov	qword ptr [rbp - 0x18], rax
0x400099:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a0:	call	0x500018
<Block for 0x4000a5, 7 bytes>
0x4000a5:	and	eax, 1
0x4000a8:	test	eax, eax
0x4000aa:	je	0x4000c9
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500018
<Block for 0x4000ac, 5 bytes>
0x4000ac:	call	0x500018
<Block for 0x4000ce, 10 bytes>
0x4000ce:	shl	eax, 0x1e
0x4000d1:	mov	ebx, eax
0x4000d3:	call	0x500018
<Block for 0x4000b1, 10 bytes>
0x4000b1:	shl	eax, 0x1e
0x4000b4:	mov	ebx, eax
0x4000b6:	call	0x500018
<Block for 0x4000d8, 10 bytes>
0x4000d8:	shl	eax, 0xf
0x4000db:	xor	ebx, eax
0x4000dd:	call	0x500018
<Block for 0x4000bb, 10 bytes>
0x4000bb:	shl	eax, 0xf
0x4000be:	xor	ebx, eax
0x4000c0:	call	0x500018
<Block for 0x4000e2, 18 bytes>
0x4000e2:	xor	eax, ebx
0x4000e4:	not	eax
0x4000e6:	mov	dword ptr [rbp - 0x1c], eax
0x4000e9:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ec:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f0:	mov	edi, eax
0x4000f2:	call	rdx
<Block for 0x4000c5, 4 bytes>
0x4000c5:	xor	eax, ebx
0x4000c7:	jmp	0x4000e6
<Block for 0x4000f4, 8 bytes>
0x4000f4:	nop	
0x4000f5:	add	rsp, 0x18
0x4000f9:	pop	rbx
0x4000fa:	pop	rbp
0x4000fb:	ret	
<Block for 0x4000e6, 14 bytes>
0x4000e6:	mov	dword ptr [rbp - 0x1c], eax
0x4000e9:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ec:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f0:	mov	edi, eax
0x4000f2:	call	rdx
