<Block for 0x4002dc, 76 bytes>
0x4002dc:	endbr64	
0x4002e0:	push	rbp
0x4002e1:	mov	rbp, rsp
0x4002e4:	sub	rsp, 0x50
0x4002e8:	mov	dword ptr [rbp - 0x44], edi
0x4002eb:	mov	rax, qword ptr fs:[0x28]
0x4002f4:	mov	qword ptr [rbp - 8], rax
0x4002f8:	xor	eax, eax
0x4002fa:	mov	qword ptr [rbp - 0x30], 0
0x400302:	mov	qword ptr [rbp - 0x28], 0
0x40030a:	mov	qword ptr [rbp - 0x20], 0
0x400312:	mov	qword ptr [rbp - 0x18], 0
0x40031a:	mov	qword ptr [rbp - 0x10], 0
0x400322:	cmp	dword ptr [rbp - 0x44], 0
0x400326:	js	0x400360
<Block for 0x400360, 12 bytes>
0x400360:	lea	rdi, [rip + 0x1c9]
0x400367:	call	0x500008
<Block for 0x400328, 6 bytes>
0x400328:	cmp	dword ptr [rbp - 0x44], 9
0x40032c:	jg	0x400360
<Block for 0x40036c, 16 bytes>
0x40036c:	nop	
0x40036d:	mov	rax, qword ptr [rbp - 8]
0x400371:	xor	rax, qword ptr fs:[0x28]
0x40037a:	je	0x400381
<Block for 0x40032e, 22 bytes>
0x40032e:	mov	eax, dword ptr [rbp - 0x44]
0x400331:	cdqe	
0x400333:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40033b:	mov	dword ptr [rbp - 0x34], 0
0x400342:	jmp	0x400358
<Block for 0x400381, 2 bytes>
0x400381:	leave	
0x400382:	ret	
<Block for 0x40037c, 5 bytes>
0x40037c:	call	0x500010
<Block for 0x400358, 6 bytes>
0x400358:	cmp	dword ptr [rbp - 0x34], 9
0x40035c:	jle	0x400344
<Block for 0x400344, 16 bytes>
0x400344:	mov	eax, dword ptr [rbp - 0x34]
0x400347:	cdqe	
0x400349:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40034d:	mov	edi, eax
0x40034f:	call	0x500000
<Block for 0x40035e, 2 bytes>
0x40035e:	jmp	0x40036c
<Block for 0x400354, 10 bytes>
0x400354:	add	dword ptr [rbp - 0x34], 1
0x400358:	cmp	dword ptr [rbp - 0x34], 9
0x40035c:	jle	0x400344
