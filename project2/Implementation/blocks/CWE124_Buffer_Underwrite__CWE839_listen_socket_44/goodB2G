<Block for 0x400383, 79 bytes>
0x400383:	endbr64	
0x400387:	push	rbp
0x400388:	mov	rbp, rsp
0x40038b:	sub	rsp, 0x50
0x40038f:	mov	rax, qword ptr fs:[0x28]
0x400398:	mov	qword ptr [rbp - 8], rax
0x40039c:	xor	eax, eax
0x40039e:	lea	rax, [rip - 0xc9]
0x4003a5:	mov	qword ptr [rbp - 0x38], rax
0x4003a9:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4003b0:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4003b7:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4003be:	mov	edx, 6
0x4003c3:	mov	esi, 1
0x4003c8:	mov	edi, 2
0x4003cd:	call	0x500018
<Block for 0x4003d2, 13 bytes>
0x4003d2:	mov	dword ptr [rbp - 0x40], eax
0x4003d5:	cmp	dword ptr [rbp - 0x40], -1
0x4003d9:	je	0x40049e
<Block for 0x40049e, 3 bytes>
0x40049e:	nop	
0x40049f:	jmp	0x4004a8
<Block for 0x4003df, 22 bytes>
0x4003df:	lea	rax, [rbp - 0x30]
0x4003e3:	mov	edx, 0x10
0x4003e8:	mov	esi, 0
0x4003ed:	mov	rdi, rax
0x4003f0:	call	0x500020
<Block for 0x4004a8, 6 bytes>
0x4004a8:	cmp	dword ptr [rbp - 0x40], -1
0x4004ac:	je	0x4004b8
<Block for 0x4003f5, 23 bytes>
0x4003f5:	mov	word ptr [rbp - 0x30], 2
0x4003fb:	mov	dword ptr [rbp - 0x2c], 0
0x400402:	mov	edi, 0x6987
0x400407:	call	0x500028
<Block for 0x4004b8, 6 bytes>
0x4004b8:	cmp	dword ptr [rbp - 0x44], -1
0x4004bc:	je	0x4004c8
<Block for 0x4004ae, 10 bytes>
0x4004ae:	mov	eax, dword ptr [rbp - 0x40]
0x4004b1:	mov	edi, eax
0x4004b3:	call	0x500058
<Block for 0x40040c, 26 bytes>
0x40040c:	mov	word ptr [rbp - 0x2e], ax
0x400410:	lea	rcx, [rbp - 0x30]
0x400414:	mov	eax, dword ptr [rbp - 0x40]
0x400417:	mov	edx, 0x10
0x40041c:	mov	rsi, rcx
0x40041f:	mov	edi, eax
0x400421:	call	0x500030
<Block for 0x4004c8, 11 bytes>
0x4004c8:	mov	eax, dword ptr [rbp - 0x48]
0x4004cb:	mov	rdx, qword ptr [rbp - 0x38]
0x4004cf:	mov	edi, eax
0x4004d1:	call	rdx
<Block for 0x4004be, 10 bytes>
0x4004be:	mov	eax, dword ptr [rbp - 0x44]
0x4004c1:	mov	edi, eax
0x4004c3:	call	0x500058
<Block for 0x400426, 5 bytes>
0x400426:	cmp	eax, -1
0x400429:	je	0x4004a1
<Block for 0x4004d3, 16 bytes>
0x4004d3:	nop	
0x4004d4:	mov	rax, qword ptr [rbp - 8]
0x4004d8:	xor	rax, qword ptr fs:[0x28]
0x4004e1:	je	0x4004e8
<Block for 0x4004a1, 3 bytes>
0x4004a1:	nop	
0x4004a2:	jmp	0x4004a8
<Block for 0x40042b, 15 bytes>
0x40042b:	mov	eax, dword ptr [rbp - 0x40]
0x40042e:	mov	esi, 5
0x400433:	mov	edi, eax
0x400435:	call	0x500038
<Block for 0x4004e8, 2 bytes>
0x4004e8:	leave	
0x4004e9:	ret	
<Block for 0x4004e3, 5 bytes>
0x4004e3:	call	0x500010
<Block for 0x40043a, 5 bytes>
0x40043a:	cmp	eax, -1
0x40043d:	je	0x4004a4
<Block for 0x4004a4, 3 bytes>
0x4004a4:	nop	
0x4004a5:	jmp	0x4004a8
<Block for 0x40043f, 20 bytes>
0x40043f:	mov	eax, dword ptr [rbp - 0x40]
0x400442:	mov	edx, 0
0x400447:	mov	esi, 0
0x40044c:	mov	edi, eax
0x40044e:	call	0x500040
<Block for 0x400453, 9 bytes>
0x400453:	mov	dword ptr [rbp - 0x44], eax
0x400456:	cmp	dword ptr [rbp - 0x44], -1
0x40045a:	je	0x4004a7
<Block for 0x40045c, 24 bytes>
0x40045c:	lea	rsi, [rbp - 0x16]
0x400460:	mov	eax, dword ptr [rbp - 0x44]
0x400463:	mov	ecx, 0
0x400468:	mov	edx, 0xd
0x40046d:	mov	edi, eax
0x40046f:	call	0x500048
<Block for 0x4004a7, 1 bytes>
0x4004a7:	nop	
<Block for 0x400474, 9 bytes>
0x400474:	mov	dword ptr [rbp - 0x3c], eax
0x400477:	cmp	dword ptr [rbp - 0x3c], -1
0x40047b:	je	0x4004a8
<Block for 0x40047d, 6 bytes>
0x40047d:	cmp	dword ptr [rbp - 0x3c], 0
0x400481:	je	0x4004a8
<Block for 0x400483, 22 bytes>
0x400483:	mov	eax, dword ptr [rbp - 0x3c]
0x400486:	cdqe	
0x400488:	mov	byte ptr [rbp + rax - 0x16], 0
0x40048d:	lea	rax, [rbp - 0x16]
0x400491:	mov	rdi, rax
0x400494:	call	0x500050
<Block for 0x400499, 5 bytes>
0x400499:	mov	dword ptr [rbp - 0x48], eax
0x40049c:	jmp	0x4004a8
