<Block for 0x40023b, 82 bytes>
0x40023b:	endbr64	
0x40023f:	push	rbp
0x400240:	mov	rbp, rsp
0x400243:	sub	rsp, 0x120
0x40024a:	mov	rax, qword ptr fs:[0x28]
0x400253:	mov	qword ptr [rbp - 8], rax
0x400257:	xor	eax, eax
0x400259:	movabs	rax, 0x3d48544150
0x400263:	mov	edx, 0
0x400268:	mov	qword ptr [rbp - 0x110], rax
0x40026f:	mov	qword ptr [rbp - 0x108], rdx
0x400276:	lea	rdx, [rbp - 0x100]
0x40027d:	mov	eax, 0
0x400282:	mov	ecx, 0x1d
0x400287:	mov	rdi, rdx
0x40028a:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028d, 33 bytes>
0x40028d:	mov	rdx, rdi
0x400290:	mov	word ptr [rdx], ax
0x400293:	add	rdx, 2
0x400297:	lea	rax, [rbp - 0x110]
0x40029e:	mov	qword ptr [rbp - 0x118], rax
0x4002a5:	mov	eax, 0
0x4002aa:	test	eax, eax
0x4002ac:	je	0x4002bc
<Block for 0x40028a, 3 bytes>
0x40028a:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002bc, 27 bytes>
0x4002bc:	mov	rax, qword ptr [rbp - 0x118]
0x4002c3:	mov	rcx, -1
0x4002ca:	mov	rdx, rax
0x4002cd:	mov	eax, 0
0x4002d2:	mov	rdi, rdx
0x4002d5:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002ae, 12 bytes>
0x4002ae:	lea	rdi, [rip + 0x169]
0x4002b5:	call	0x500058
<Block for 0x4002d7, 45 bytes>
0x4002d7:	mov	rax, rcx
0x4002da:	not	rax
0x4002dd:	lea	rdx, [rax - 1]
0x4002e1:	mov	rax, qword ptr [rbp - 0x118]
0x4002e8:	add	rax, rdx
0x4002eb:	mov	dword ptr [rax], 0x6e69622f
0x4002f1:	mov	byte ptr [rax + 4], 0
0x4002f5:	mov	rax, qword ptr [rbp - 0x118]
0x4002fc:	mov	rdi, rax
0x4002ff:	call	0x500048
<Block for 0x4002d5, 2 bytes>
0x4002d5:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002ba, 2 bytes>
0x4002ba:	jmp	0x4002f5
<Block for 0x400304, 16 bytes>
0x400304:	nop	
0x400305:	mov	rax, qword ptr [rbp - 8]
0x400309:	xor	rax, qword ptr fs:[0x28]
0x400312:	je	0x400319
<Block for 0x4002f5, 15 bytes>
0x4002f5:	mov	rax, qword ptr [rbp - 0x118]
0x4002fc:	mov	rdi, rax
0x4002ff:	call	0x500048
<Block for 0x400319, 2 bytes>
0x400319:	leave	
0x40031a:	ret	
<Block for 0x400314, 5 bytes>
0x400314:	call	0x500050
