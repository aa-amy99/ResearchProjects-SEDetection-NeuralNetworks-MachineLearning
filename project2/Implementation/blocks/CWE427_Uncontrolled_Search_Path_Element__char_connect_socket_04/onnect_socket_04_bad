<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 37 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	eax, 1
0x40006f:	test	eax, eax
0x400071:	je	0x400215
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400215, 15 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x138]
0x40021c:	mov	rdi, rax
0x40021f:	call	0x500048
<Block for 0x400077, 25 bytes>
0x400077:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400081:	mov	rax, qword ptr [rbp - 0x138]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500000
<Block for 0x400224, 16 bytes>
0x400224:	nop	
0x400225:	mov	rax, qword ptr [rbp - 8]
0x400229:	xor	rax, qword ptr fs:[0x28]
0x400232:	je	0x400239
<Block for 0x400090, 27 bytes>
0x400090:	mov	qword ptr [rbp - 0x130], rax
0x400097:	mov	edx, 6
0x40009c:	mov	esi, 1
0x4000a1:	mov	edi, 2
0x4000a6:	call	0x500008
<Block for 0x400239, 2 bytes>
0x400239:	leave	
0x40023a:	ret	
<Block for 0x400234, 5 bytes>
0x400234:	call	0x500050
<Block for 0x4000ab, 19 bytes>
0x4000ab:	mov	dword ptr [rbp - 0x140], eax
0x4000b1:	cmp	dword ptr [rbp - 0x140], -1
0x4000b8:	je	0x4001fb
<Block for 0x4001fb, 3 bytes>
0x4001fb:	nop	
0x4001fc:	jmp	0x4001ff
<Block for 0x4000be, 25 bytes>
0x4000be:	lea	rax, [rbp - 0x120]
0x4000c5:	mov	edx, 0x10
0x4000ca:	mov	esi, 0
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500010
<Block for 0x4001ff, 9 bytes>
0x4001ff:	cmp	dword ptr [rbp - 0x140], -1
0x400206:	je	0x400215
<Block for 0x4000d7, 21 bytes>
0x4000d7:	mov	word ptr [rbp - 0x120], 2
0x4000e0:	lea	rdi, [rip + 0x32d]
0x4000e7:	call	0x500018
<Block for 0x400208, 13 bytes>
0x400208:	mov	eax, dword ptr [rbp - 0x140]
0x40020e:	mov	edi, eax
0x400210:	call	0x500040
<Block for 0x4000ec, 16 bytes>
0x4000ec:	mov	dword ptr [rbp - 0x11c], eax
0x4000f2:	mov	edi, 0x6987
0x4000f7:	call	0x500020
<Block for 0x4000fc, 35 bytes>
0x4000fc:	mov	word ptr [rbp - 0x11e], ax
0x400103:	lea	rcx, [rbp - 0x120]
0x40010a:	mov	eax, dword ptr [rbp - 0x140]
0x400110:	mov	edx, 0x10
0x400115:	mov	rsi, rcx
0x400118:	mov	edi, eax
0x40011a:	call	0x500028
<Block for 0x40011f, 9 bytes>
0x40011f:	cmp	eax, -1
0x400122:	je	0x4001fe
<Block for 0x400128, 51 bytes>
0x400128:	mov	eax, 0xf9
0x40012d:	sub	rax, qword ptr [rbp - 0x130]
0x400134:	mov	rdx, rax
0x400137:	mov	rcx, qword ptr [rbp - 0x138]
0x40013e:	mov	rax, qword ptr [rbp - 0x130]
0x400145:	lea	rsi, [rcx + rax]
0x400149:	mov	eax, dword ptr [rbp - 0x140]
0x40014f:	mov	ecx, 0
0x400154:	mov	edi, eax
0x400156:	call	0x500030
<Block for 0x4001fe, 1 bytes>
0x4001fe:	nop	
<Block for 0x40015b, 19 bytes>
0x40015b:	mov	dword ptr [rbp - 0x13c], eax
0x400161:	cmp	dword ptr [rbp - 0x13c], -1
0x400168:	je	0x4001ff
<Block for 0x40016e, 13 bytes>
0x40016e:	cmp	dword ptr [rbp - 0x13c], 0
0x400175:	je	0x4001ff
<Block for 0x40017b, 52 bytes>
0x40017b:	mov	eax, dword ptr [rbp - 0x13c]
0x400181:	movsxd	rdx, eax
0x400184:	mov	rax, qword ptr [rbp - 0x130]
0x40018b:	add	rdx, rax
0x40018e:	mov	rax, qword ptr [rbp - 0x138]
0x400195:	add	rax, rdx
0x400198:	mov	byte ptr [rax], 0
0x40019b:	mov	rax, qword ptr [rbp - 0x138]
0x4001a2:	mov	esi, 0xd
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500038
<Block for 0x4001af, 17 bytes>
0x4001af:	mov	qword ptr [rbp - 0x128], rax
0x4001b6:	cmp	qword ptr [rbp - 0x128], 0
0x4001be:	je	0x4001ca
<Block for 0x4001ca, 20 bytes>
0x4001ca:	mov	rax, qword ptr [rbp - 0x138]
0x4001d1:	mov	esi, 0xa
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500038
<Block for 0x4001c0, 30 bytes>
0x4001c0:	mov	rax, qword ptr [rbp - 0x128]
0x4001c7:	mov	byte ptr [rax], 0
0x4001ca:	mov	rax, qword ptr [rbp - 0x138]
0x4001d1:	mov	esi, 0xa
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500038
<Block for 0x4001de, 17 bytes>
0x4001de:	mov	qword ptr [rbp - 0x128], rax
0x4001e5:	cmp	qword ptr [rbp - 0x128], 0
0x4001ed:	je	0x4001ff
<Block for 0x4001ef, 12 bytes>
0x4001ef:	mov	rax, qword ptr [rbp - 0x128]
0x4001f6:	mov	byte ptr [rax], 0
0x4001f9:	jmp	0x4001ff
