<Block for 0x400000, 75 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0x19], 0x43
0x40001f:	lea	rax, [rip + 0xfffea]
0x400026:	mov	qword ptr [rbp - 0x18], rax
0x40002a:	lea	rax, [rbp - 0x18]
0x40002e:	mov	qword ptr [rbp - 0x10], rax
0x400032:	mov	rax, qword ptr [rbp - 0x10]
0x400036:	mov	rax, qword ptr [rax]
0x400039:	mov	rcx, qword ptr [rax]
0x40003c:	movsx	edx, byte ptr [rbp - 0x19]
0x400040:	mov	rax, qword ptr [rbp - 0x10]
0x400044:	mov	esi, edx
0x400046:	mov	rdi, rax
0x400049:	call	rcx
<Block for 0x40004b, 16 bytes>
0x40004b:	nop	
0x40004c:	mov	rax, qword ptr [rbp - 8]
0x400050:	xor	rax, qword ptr fs:[0x28]
0x400059:	je	0x400060
<Block for 0x400060, 2 bytes>
0x400060:	leave	
0x400061:	ret	
<Block for 0x40005b, 5 bytes>
0x40005b:	call	0x500008
