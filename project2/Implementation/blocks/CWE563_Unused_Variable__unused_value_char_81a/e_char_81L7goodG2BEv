<Block for 0x400062, 42 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x20
0x40006e:	mov	rax, qword ptr fs:[0x28]
0x400077:	mov	qword ptr [rbp - 8], rax
0x40007b:	xor	eax, eax
0x40007d:	mov	byte ptr [rbp - 0x19], 0x43
0x400081:	movsx	eax, byte ptr [rbp - 0x19]
0x400085:	mov	edi, eax
0x400087:	call	0x500010
<Block for 0x40008c, 44 bytes>
0x40008c:	lea	rax, [rip + 0xfff95]
0x400093:	mov	qword ptr [rbp - 0x18], rax
0x400097:	lea	rax, [rbp - 0x18]
0x40009b:	mov	qword ptr [rbp - 0x10], rax
0x40009f:	mov	rax, qword ptr [rbp - 0x10]
0x4000a3:	mov	rax, qword ptr [rax]
0x4000a6:	mov	rcx, qword ptr [rax]
0x4000a9:	movsx	edx, byte ptr [rbp - 0x19]
0x4000ad:	mov	rax, qword ptr [rbp - 0x10]
0x4000b1:	mov	esi, edx
0x4000b3:	mov	rdi, rax
0x4000b6:	call	rcx
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500008
