<Block for 0x400081, 47 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	push	rbx
0x40008a:	sub	rsp, 0x18
0x40008e:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400095:	mov	edx, 0x180
0x40009a:	mov	esi, 0x42
0x40009f:	lea	rdi, [rip + 0xb7]
0x4000a6:	mov	eax, 0
0x4000ab:	call	0x500000
<Block for 0x4000b0, 13 bytes>
0x4000b0:	mov	dword ptr [rbp - 0x1c], eax
0x4000b3:	mov	edi, 8
0x4000b8:	call	0x500008
<Block for 0x4000bd, 11 bytes>
0x4000bd:	mov	rbx, rax
0x4000c0:	mov	rdi, rbx
0x4000c3:	call	0x400170
<Block for 0x4000c8, 28 bytes>
0x4000c8:	mov	qword ptr [rbp - 0x18], rbx
0x4000cc:	mov	rax, qword ptr [rbp - 0x18]
0x4000d0:	mov	rax, qword ptr [rax]
0x4000d3:	mov	rcx, qword ptr [rax]
0x4000d6:	mov	edx, dword ptr [rbp - 0x1c]
0x4000d9:	mov	rax, qword ptr [rbp - 0x18]
0x4000dd:	mov	esi, edx
0x4000df:	mov	rdi, rax
0x4000e2:	call	rcx
<Block for 0x4000e4, 9 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x18]
0x4000e8:	test	rax, rax
0x4000eb:	je	0x4000fa
<Block for 0x4000fa, 8 bytes>
0x4000fa:	nop	
0x4000fb:	add	rsp, 0x18
0x4000ff:	pop	rbx
0x400100:	pop	rbp
0x400101:	ret	
<Block for 0x4000ed, 13 bytes>
0x4000ed:	mov	esi, 8
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
