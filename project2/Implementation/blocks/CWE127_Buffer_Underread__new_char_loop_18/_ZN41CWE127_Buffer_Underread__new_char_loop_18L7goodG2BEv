<Block for 0x4000e7, 53 bytes>
0x4000e7:	endbr64	
0x4000eb:	push	rbp
0x4000ec:	mov	rbp, rsp
0x4000ef:	sub	rsp, 0x90
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	mov	qword ptr [rbp - 0x80], 0
0x40010d:	nop	
0x40010e:	endbr64	
0x400112:	mov	edi, 0x64
0x400117:	call	0x500000
<Block for 0x40011c, 26 bytes>
0x40011c:	mov	qword ptr [rbp - 0x78], rax
0x400120:	mov	rax, qword ptr [rbp - 0x78]
0x400124:	mov	edx, 0x63
0x400129:	mov	esi, 0x41
0x40012e:	mov	rdi, rax
0x400131:	call	0x500008
<Block for 0x400136, 41 bytes>
0x400136:	mov	rax, qword ptr [rbp - 0x78]
0x40013a:	add	rax, 0x63
0x40013e:	mov	byte ptr [rax], 0
0x400141:	mov	rax, qword ptr [rbp - 0x78]
0x400145:	mov	qword ptr [rbp - 0x80], rax
0x400149:	lea	rax, [rbp - 0x70]
0x40014d:	mov	edx, 0x63
0x400152:	mov	esi, 0x43
0x400157:	mov	rdi, rax
0x40015a:	call	0x500008
<Block for 0x40015f, 25 bytes>
0x40015f:	mov	byte ptr [rbp - 0xd], 0
0x400163:	mov	qword ptr [rbp - 0x88], 0
0x40016e:	cmp	qword ptr [rbp - 0x88], 0x63
0x400176:	ja	0x4001a3
<Block for 0x400178, 43 bytes>
0x400178:	mov	rdx, qword ptr [rbp - 0x80]
0x40017c:	mov	rax, qword ptr [rbp - 0x88]
0x400183:	add	rax, rdx
0x400186:	movzx	eax, byte ptr [rax]
0x400189:	lea	rcx, [rbp - 0x70]
0x40018d:	mov	rdx, qword ptr [rbp - 0x88]
0x400194:	add	rdx, rcx
0x400197:	mov	byte ptr [rdx], al
0x400199:	add	qword ptr [rbp - 0x88], 1
0x4001a1:	jmp	0x40016e
<Block for 0x4001a3, 16 bytes>
0x4001a3:	mov	byte ptr [rbp - 0xd], 0
0x4001a7:	lea	rax, [rbp - 0x70]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500010
<Block for 0x40016e, 10 bytes>
0x40016e:	cmp	qword ptr [rbp - 0x88], 0x63
0x400176:	ja	0x4001a3
<Block for 0x4001b3, 16 bytes>
0x4001b3:	nop	
0x4001b4:	mov	rax, qword ptr [rbp - 8]
0x4001b8:	xor	rax, qword ptr fs:[0x28]
0x4001c1:	je	0x4001c8
<Block for 0x4001c8, 2 bytes>
0x4001c8:	leave	
0x4001c9:	ret	
<Block for 0x4001c3, 5 bytes>
0x4001c3:	call	0x500018
