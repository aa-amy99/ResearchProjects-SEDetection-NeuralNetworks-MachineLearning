<Block for 0x4000dc, 65 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x90
0x4000eb:	mov	rax, qword ptr fs:[0x28]
0x4000f4:	mov	qword ptr [rbp - 8], rax
0x4000f8:	xor	eax, eax
0x4000fa:	lea	rax, [rbp - 0x90]
0x400101:	mov	qword ptr [rbp - 0x88], rax
0x400108:	mov	qword ptr [rbp - 0x90], 0
0x400113:	mov	edi, 0x64
0x400118:	call	0x500000
<Block for 0x40011d, 26 bytes>
0x40011d:	mov	qword ptr [rbp - 0x80], rax
0x400121:	mov	rax, qword ptr [rbp - 0x80]
0x400125:	mov	edx, 0x63
0x40012a:	mov	esi, 0x41
0x40012f:	mov	rdi, rax
0x400132:	call	0x500008
<Block for 0x400137, 58 bytes>
0x400137:	mov	rax, qword ptr [rbp - 0x80]
0x40013b:	add	rax, 0x63
0x40013f:	mov	byte ptr [rax], 0
0x400142:	mov	rax, qword ptr [rbp - 0x80]
0x400146:	mov	qword ptr [rbp - 0x90], rax
0x40014d:	mov	rax, qword ptr [rbp - 0x88]
0x400154:	mov	rax, qword ptr [rax]
0x400157:	mov	qword ptr [rbp - 0x78], rax
0x40015b:	lea	rax, [rbp - 0x70]
0x40015f:	mov	edx, 0x63
0x400164:	mov	esi, 0x43
0x400169:	mov	rdi, rax
0x40016c:	call	0x500008
<Block for 0x400171, 28 bytes>
0x400171:	mov	byte ptr [rbp - 0xd], 0
0x400175:	mov	rcx, qword ptr [rbp - 0x78]
0x400179:	lea	rax, [rbp - 0x70]
0x40017d:	mov	edx, 0x64
0x400182:	mov	rsi, rcx
0x400185:	mov	rdi, rax
0x400188:	call	0x500010
<Block for 0x40018d, 16 bytes>
0x40018d:	mov	byte ptr [rbp - 0xd], 0
0x400191:	lea	rax, [rbp - 0x70]
0x400195:	mov	rdi, rax
0x400198:	call	0x500018
<Block for 0x40019d, 16 bytes>
0x40019d:	nop	
0x40019e:	mov	rax, qword ptr [rbp - 8]
0x4001a2:	xor	rax, qword ptr fs:[0x28]
0x4001ab:	je	0x4001b2
<Block for 0x4001b2, 2 bytes>
0x4001b2:	leave	
0x4001b3:	ret	
<Block for 0x4001ad, 5 bytes>
0x4001ad:	call	0x500020
