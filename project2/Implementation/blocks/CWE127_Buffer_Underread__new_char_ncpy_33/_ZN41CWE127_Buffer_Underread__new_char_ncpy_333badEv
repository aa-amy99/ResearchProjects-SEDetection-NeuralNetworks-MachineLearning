<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x90]
0x400025:	mov	qword ptr [rbp - 0x88], rax
0x40002c:	mov	qword ptr [rbp - 0x90], 0
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500000
<Block for 0x400041, 26 bytes>
0x400041:	mov	qword ptr [rbp - 0x80], rax
0x400045:	mov	rax, qword ptr [rbp - 0x80]
0x400049:	mov	edx, 0x63
0x40004e:	mov	esi, 0x41
0x400053:	mov	rdi, rax
0x400056:	call	0x500008
<Block for 0x40005b, 62 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 0x80]
0x40005f:	add	rax, 0x63
0x400063:	mov	byte ptr [rax], 0
0x400066:	mov	rax, qword ptr [rbp - 0x80]
0x40006a:	sub	rax, 8
0x40006e:	mov	qword ptr [rbp - 0x90], rax
0x400075:	mov	rax, qword ptr [rbp - 0x88]
0x40007c:	mov	rax, qword ptr [rax]
0x40007f:	mov	qword ptr [rbp - 0x78], rax
0x400083:	lea	rax, [rbp - 0x70]
0x400087:	mov	edx, 0x63
0x40008c:	mov	esi, 0x43
0x400091:	mov	rdi, rax
0x400094:	call	0x500008
<Block for 0x400099, 16 bytes>
0x400099:	mov	byte ptr [rbp - 0xd], 0
0x40009d:	lea	rax, [rbp - 0x70]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 22 bytes>
0x4000a9:	mov	rdx, rax
0x4000ac:	mov	rcx, qword ptr [rbp - 0x78]
0x4000b0:	lea	rax, [rbp - 0x70]
0x4000b4:	mov	rsi, rcx
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500018
<Block for 0x4000bf, 16 bytes>
0x4000bf:	mov	byte ptr [rbp - 0xd], 0
0x4000c3:	lea	rax, [rbp - 0x70]
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x500020
<Block for 0x4000cf, 16 bytes>
0x4000cf:	nop	
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	xor	rax, qword ptr fs:[0x28]
0x4000dd:	je	0x4000e4
<Block for 0x4000e4, 2 bytes>
0x4000e4:	leave	
0x4000e5:	ret	
<Block for 0x4000df, 5 bytes>
0x4000df:	call	0x500028
