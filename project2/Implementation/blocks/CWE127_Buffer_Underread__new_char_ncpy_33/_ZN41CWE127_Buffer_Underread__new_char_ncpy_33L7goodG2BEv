<Block for 0x4000e6, 65 bytes>
0x4000e6:	endbr64	
0x4000ea:	push	rbp
0x4000eb:	mov	rbp, rsp
0x4000ee:	sub	rsp, 0x90
0x4000f5:	mov	rax, qword ptr fs:[0x28]
0x4000fe:	mov	qword ptr [rbp - 8], rax
0x400102:	xor	eax, eax
0x400104:	lea	rax, [rbp - 0x90]
0x40010b:	mov	qword ptr [rbp - 0x88], rax
0x400112:	mov	qword ptr [rbp - 0x90], 0
0x40011d:	mov	edi, 0x64
0x400122:	call	0x500000
<Block for 0x400127, 26 bytes>
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	mov	rax, qword ptr [rbp - 0x80]
0x40012f:	mov	edx, 0x63
0x400134:	mov	esi, 0x41
0x400139:	mov	rdi, rax
0x40013c:	call	0x500008
<Block for 0x400141, 58 bytes>
0x400141:	mov	rax, qword ptr [rbp - 0x80]
0x400145:	add	rax, 0x63
0x400149:	mov	byte ptr [rax], 0
0x40014c:	mov	rax, qword ptr [rbp - 0x80]
0x400150:	mov	qword ptr [rbp - 0x90], rax
0x400157:	mov	rax, qword ptr [rbp - 0x88]
0x40015e:	mov	rax, qword ptr [rax]
0x400161:	mov	qword ptr [rbp - 0x78], rax
0x400165:	lea	rax, [rbp - 0x70]
0x400169:	mov	edx, 0x63
0x40016e:	mov	esi, 0x43
0x400173:	mov	rdi, rax
0x400176:	call	0x500008
<Block for 0x40017b, 16 bytes>
0x40017b:	mov	byte ptr [rbp - 0xd], 0
0x40017f:	lea	rax, [rbp - 0x70]
0x400183:	mov	rdi, rax
0x400186:	call	0x500010
<Block for 0x40018b, 22 bytes>
0x40018b:	mov	rdx, rax
0x40018e:	mov	rcx, qword ptr [rbp - 0x78]
0x400192:	lea	rax, [rbp - 0x70]
0x400196:	mov	rsi, rcx
0x400199:	mov	rdi, rax
0x40019c:	call	0x500018
<Block for 0x4001a1, 16 bytes>
0x4001a1:	mov	byte ptr [rbp - 0xd], 0
0x4001a5:	lea	rax, [rbp - 0x70]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500020
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500028
