<Block for 0x40004b, 22 bytes>
0x40004b:	endbr64	
0x40004f:	push	rbp
0x400050:	mov	rbp, rsp
0x400053:	sub	rsp, 0x20
0x400057:	mov	edi, 4
0x40005c:	call	0x500000
<Block for 0x400061, 24 bytes>
0x400061:	mov	qword ptr [rbp - 0x18], rax
0x400065:	mov	rax, qword ptr [rbp - 0x18]
0x400069:	mov	dword ptr [rax], 5
0x40006f:	mov	edi, 8
0x400074:	call	0x500000
<Block for 0x400079, 39 bytes>
0x400079:	mov	qword ptr [rbp - 0x10], rax
0x40007d:	mov	rax, qword ptr [rbp - 0x10]
0x400081:	mov	rdx, qword ptr [rbp - 0x18]
0x400085:	mov	qword ptr [rax], rdx
0x400088:	mov	rax, qword ptr [rbp - 0x10]
0x40008c:	mov	rax, qword ptr [rax]
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	mov	rax, qword ptr [rbp - 8]
0x400097:	mov	eax, dword ptr [rax]
0x400099:	mov	edi, eax
0x40009b:	call	0x500010
<Block for 0x4000a0, 9 bytes>
0x4000a0:	mov	rax, qword ptr [rbp - 0x10]
0x4000a4:	test	rax, rax
0x4000a7:	je	0x4000b6
<Block for 0x4000b6, 3 bytes>
0x4000b6:	nop	
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000a9, 13 bytes>
0x4000a9:	mov	esi, 8
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500008
