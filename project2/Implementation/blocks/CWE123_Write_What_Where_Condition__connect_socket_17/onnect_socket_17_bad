<Block for 0x400000, 87 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	dword ptr [rbp - 0x4c], 0
0x400052:	jmp	0x400104
<Block for 0x400104, 10 bytes>
0x400104:	cmp	dword ptr [rbp - 0x4c], 0
0x400108:	jle	0x400057
<Block for 0x400057, 27 bytes>
0x400057:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40005e:	mov	edx, 6
0x400063:	mov	esi, 1
0x400068:	mov	edi, 2
0x40006d:	call	0x500000
<Block for 0x40010e, 73 bytes>
0x40010e:	mov	rax, qword ptr [rbp - 0x38]
0x400112:	mov	qword ptr [rip + 0x10f], rax
0x400119:	mov	rax, qword ptr [rbp - 0x40]
0x40011d:	mov	qword ptr [rip + 0x10c], rax
0x400124:	mov	rax, qword ptr [rip + 0xfd]
0x40012b:	mov	rdx, qword ptr [rip + 0xfe]
0x400132:	mov	qword ptr [rax], rdx
0x400135:	mov	rax, qword ptr [rip + 0xf4]
0x40013c:	mov	rdx, qword ptr [rip + 0xe5]
0x400143:	mov	qword ptr [rax + 8], rdx
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 8]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x40015c
<Block for 0x400072, 9 bytes>
0x400072:	mov	dword ptr [rbp - 0x48], eax
0x400075:	cmp	dword ptr [rbp - 0x48], -1
0x400079:	je	0x4000ec
<Block for 0x40015c, 2 bytes>
0x40015c:	leave	
0x40015d:	ret	
<Block for 0x400157, 5 bytes>
0x400157:	call	0x500038
<Block for 0x4000ec, 3 bytes>
0x4000ec:	nop	
0x4000ed:	jmp	0x4000f0
<Block for 0x40007b, 22 bytes>
0x40007b:	lea	rax, [rbp - 0x20]
0x40007f:	mov	edx, 0x10
0x400084:	mov	esi, 0
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x4000f0, 6 bytes>
0x4000f0:	cmp	dword ptr [rbp - 0x48], -1
0x4000f4:	je	0x400100
<Block for 0x400091, 18 bytes>
0x400091:	mov	word ptr [rbp - 0x20], 2
0x400097:	lea	rdi, [rip + 0x19a]
0x40009e:	call	0x500010
<Block for 0x400100, 14 bytes>
0x400100:	add	dword ptr [rbp - 0x4c], 1
0x400104:	cmp	dword ptr [rbp - 0x4c], 0
0x400108:	jle	0x400057
<Block for 0x4000f6, 10 bytes>
0x4000f6:	mov	eax, dword ptr [rbp - 0x48]
0x4000f9:	mov	edi, eax
0x4000fb:	call	0x500030
<Block for 0x4000a3, 13 bytes>
0x4000a3:	mov	dword ptr [rbp - 0x1c], eax
0x4000a6:	mov	edi, 0x6987
0x4000ab:	call	0x500018
<Block for 0x4000b0, 26 bytes>
0x4000b0:	mov	word ptr [rbp - 0x1e], ax
0x4000b4:	lea	rcx, [rbp - 0x20]
0x4000b8:	mov	eax, dword ptr [rbp - 0x48]
0x4000bb:	mov	edx, 0x10
0x4000c0:	mov	rsi, rcx
0x4000c3:	mov	edi, eax
0x4000c5:	call	0x500020
<Block for 0x4000ca, 5 bytes>
0x4000ca:	cmp	eax, -1
0x4000cd:	je	0x4000ef
<Block for 0x4000cf, 24 bytes>
0x4000cf:	lea	rsi, [rbp - 0x40]
0x4000d3:	mov	eax, dword ptr [rbp - 0x48]
0x4000d6:	mov	ecx, 0
0x4000db:	mov	edx, 0x10
0x4000e0:	mov	edi, eax
0x4000e2:	call	0x500028
<Block for 0x4000ef, 1 bytes>
0x4000ef:	nop	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	mov	dword ptr [rbp - 0x44], eax
0x4000ea:	jmp	0x4000f0
