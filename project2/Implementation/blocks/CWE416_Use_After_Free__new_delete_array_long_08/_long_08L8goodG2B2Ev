<Block for 0x40024c, 25 bytes>
0x40024c:	endbr64	
0x400250:	push	rbp
0x400251:	mov	rbp, rsp
0x400254:	sub	rsp, 0x10
0x400258:	mov	qword ptr [rbp - 0x10], 0
0x400260:	call	0x400000
<Block for 0x400265, 9 bytes>
0x400265:	test	eax, eax
0x400267:	setne	al
0x40026a:	test	al, al
0x40026c:	je	0x4002ac
<Block for 0x4002ac, 5 bytes>
0x4002ac:	call	0x400000
<Block for 0x40026e, 10 bytes>
0x40026e:	mov	edi, 0x320
0x400273:	call	0x500000
<Block for 0x4002b1, 9 bytes>
0x4002b1:	test	eax, eax
0x4002b3:	setne	al
0x4002b6:	test	al, al
0x4002b8:	je	0x4002c9
<Block for 0x400278, 19 bytes>
0x400278:	mov	qword ptr [rbp - 0x10], rax
0x40027c:	mov	qword ptr [rbp - 8], 0
0x400284:	cmp	qword ptr [rbp - 8], 0x63
0x400289:	ja	0x4002ac
<Block for 0x4002c9, 3 bytes>
0x4002c9:	nop	
0x4002ca:	leave	
0x4002cb:	ret	
<Block for 0x4002ba, 15 bytes>
0x4002ba:	mov	rax, qword ptr [rbp - 0x10]
0x4002be:	mov	rax, qword ptr [rax]
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x500010
<Block for 0x40028b, 33 bytes>
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	lea	rdx, [rax*8]
0x400297:	mov	rax, qword ptr [rbp - 0x10]
0x40029b:	add	rax, rdx
0x40029e:	mov	qword ptr [rax], 5
0x4002a5:	add	qword ptr [rbp - 8], 1
0x4002aa:	jmp	0x400284
<Block for 0x400284, 7 bytes>
0x400284:	cmp	qword ptr [rbp - 8], 0x63
0x400289:	ja	0x4002ac
