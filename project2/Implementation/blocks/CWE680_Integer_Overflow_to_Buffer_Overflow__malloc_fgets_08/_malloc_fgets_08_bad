<Block for 0x40001e, 44 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x30
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400040:	mov	eax, 0
0x400045:	call	0x400000
<Block for 0x40004a, 4 bytes>
0x40004a:	test	eax, eax
0x40004c:	je	0x40009d
<Block for 0x40009d, 17 bytes>
0x40009d:	mov	eax, dword ptr [rbp - 0x2c]
0x4000a0:	cdqe	
0x4000a2:	shl	rax, 2
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500020
<Block for 0x40004e, 45 bytes>
0x40004e:	mov	qword ptr [rbp - 0x16], 0
0x400056:	mov	dword ptr [rbp - 0xe], 0
0x40005d:	mov	word ptr [rbp - 0xa], 0
0x400063:	mov	rdx, qword ptr [rip + 0xfff96]
0x40006a:	lea	rax, [rbp - 0x16]
0x40006e:	mov	esi, 0xe
0x400073:	mov	rdi, rax
0x400076:	call	0x500008
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x20], rax
0x4000b2:	cmp	qword ptr [rbp - 0x20], 0
0x4000b7:	jne	0x4000c3
<Block for 0x40007b, 5 bytes>
0x40007b:	test	rax, rax
0x40007e:	je	0x400091
<Block for 0x4000b9, 10 bytes>
0x4000b9:	mov	edi, 0xffffffff
0x4000be:	call	0x500028
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	qword ptr [rbp - 0x28], 0
0x4000cb:	jmp	0x4000eb
<Block for 0x400091, 12 bytes>
0x400091:	lea	rdi, [rip + 0x1f5]
0x400098:	call	0x500018
<Block for 0x400080, 12 bytes>
0x400080:	lea	rax, [rbp - 0x16]
0x400084:	mov	rdi, rax
0x400087:	call	0x500010
<Block for 0x4000eb, 11 bytes>
0x4000eb:	mov	eax, dword ptr [rbp - 0x2c]
0x4000ee:	cdqe	
0x4000f0:	cmp	qword ptr [rbp - 0x28], rax
0x4000f4:	jb	0x4000cd
<Block for 0x40008c, 5 bytes>
0x40008c:	mov	dword ptr [rbp - 0x2c], eax
0x40008f:	jmp	0x40009d
<Block for 0x4000cd, 41 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 0x28]
0x4000d1:	lea	rdx, [rax*4]
0x4000d9:	mov	rax, qword ptr [rbp - 0x20]
0x4000dd:	add	rax, rdx
0x4000e0:	mov	dword ptr [rax], 0
0x4000e6:	add	qword ptr [rbp - 0x28], 1
0x4000eb:	mov	eax, dword ptr [rbp - 0x2c]
0x4000ee:	cdqe	
0x4000f0:	cmp	qword ptr [rbp - 0x28], rax
0x4000f4:	jb	0x4000cd
<Block for 0x4000f6, 13 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0x20]
0x4000fa:	mov	eax, dword ptr [rax]
0x4000fc:	mov	edi, eax
0x4000fe:	call	0x500030
<Block for 0x400103, 12 bytes>
0x400103:	mov	rax, qword ptr [rbp - 0x20]
0x400107:	mov	rdi, rax
0x40010a:	call	0x500038
<Block for 0x40010f, 16 bytes>
0x40010f:	nop	
0x400110:	mov	rax, qword ptr [rbp - 8]
0x400114:	xor	rax, qword ptr fs:[0x28]
0x40011d:	je	0x400124
<Block for 0x400124, 2 bytes>
0x400124:	leave	
0x400125:	ret	
<Block for 0x40011f, 5 bytes>
0x40011f:	call	0x500040
