<Block for 0x4000f7, 40 bytes>
0x4000f7:	endbr64	
0x4000fb:	push	rbp
0x4000fc:	mov	rbp, rsp
0x4000ff:	push	rbx
0x400100:	sub	rsp, 0x58
0x400104:	mov	rax, qword ptr fs:[0x28]
0x40010d:	mov	qword ptr [rbp - 0x18], rax
0x400111:	xor	eax, eax
0x400113:	lea	rax, [rbp - 0x50]
0x400117:	mov	rdi, rax
0x40011a:	call	0x4003b4
<Block for 0x40011f, 26 bytes>
0x40011f:	mov	dword ptr [rbp - 0x58], 0
0x400126:	mov	dword ptr [rbp - 0x54], 0
0x40012d:	lea	rax, [rbp - 0x58]
0x400131:	mov	rdi, rax
0x400134:	call	0x500018
<Block for 0x400139, 19 bytes>
0x400139:	lea	rdx, [rbp - 0x58]
0x40013d:	lea	rax, [rbp - 0x50]
0x400141:	mov	rsi, rdx
0x400144:	mov	rdi, rax
0x400147:	call	0x4004be
<Block for 0x40014c, 19 bytes>
0x40014c:	lea	rdx, [rbp - 0x58]
0x400150:	lea	rax, [rbp - 0x50]
0x400154:	mov	rsi, rdx
0x400157:	mov	rdi, rax
0x40015a:	call	0x4004be
<Block for 0x40015f, 19 bytes>
0x40015f:	lea	rdx, [rbp - 0x58]
0x400163:	lea	rax, [rbp - 0x50]
0x400167:	mov	rsi, rdx
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4004be
<Block for 0x400172, 19 bytes>
0x400172:	lea	rdx, [rbp - 0x50]
0x400176:	lea	rax, [rbp - 0x30]
0x40017a:	mov	rsi, rdx
0x40017d:	mov	rdi, rax
0x400180:	call	0x4004f8
<Block for 0x400185, 12 bytes>
0x400185:	lea	rax, [rbp - 0x30]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500020
<Block for 0x400191, 12 bytes>
0x400191:	lea	rax, [rbp - 0x30]
0x400195:	mov	rdi, rax
0x400198:	call	0x4003d4
<Block for 0x40019d, 12 bytes>
0x40019d:	lea	rax, [rbp - 0x50]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4003d4
<Block for 0x4001a9, 16 bytes>
0x4001a9:	nop	
0x4001aa:	mov	rax, qword ptr [rbp - 0x18]
0x4001ae:	xor	rax, qword ptr fs:[0x28]
0x4001b7:	je	0x4001f3
<Block for 0x4001f3, 7 bytes>
0x4001f3:	add	rsp, 0x58
0x4001f7:	pop	rbx
0x4001f8:	pop	rbp
0x4001f9:	ret	
<Block for 0x4001b9, 2 bytes>
0x4001b9:	jmp	0x4001ee
<Block for 0x4001ee, 5 bytes>
0x4001ee:	call	0x500010
