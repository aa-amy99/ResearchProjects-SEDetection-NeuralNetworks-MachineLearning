<Block for 0x4001fa, 40 bytes>
0x4001fa:	endbr64	
0x4001fe:	push	rbp
0x4001ff:	mov	rbp, rsp
0x400202:	push	rbx
0x400203:	sub	rsp, 0x58
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 0x18], rax
0x400214:	xor	eax, eax
0x400216:	lea	rax, [rbp - 0x50]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x4003b4
<Block for 0x400222, 33 bytes>
0x400222:	mov	dword ptr [rbp - 0x58], 0
0x400229:	mov	dword ptr [rbp - 0x54], 0
0x400230:	lea	rdx, [rbp - 0x58]
0x400234:	lea	rax, [rbp - 0x50]
0x400238:	mov	rsi, rdx
0x40023b:	mov	rdi, rax
0x40023e:	call	0x4004be
<Block for 0x400243, 19 bytes>
0x400243:	lea	rdx, [rbp - 0x58]
0x400247:	lea	rax, [rbp - 0x50]
0x40024b:	mov	rsi, rdx
0x40024e:	mov	rdi, rax
0x400251:	call	0x4004be
<Block for 0x400256, 19 bytes>
0x400256:	lea	rdx, [rbp - 0x58]
0x40025a:	lea	rax, [rbp - 0x50]
0x40025e:	mov	rsi, rdx
0x400261:	mov	rdi, rax
0x400264:	call	0x4004be
<Block for 0x400269, 19 bytes>
0x400269:	lea	rdx, [rbp - 0x50]
0x40026d:	lea	rax, [rbp - 0x30]
0x400271:	mov	rsi, rdx
0x400274:	mov	rdi, rax
0x400277:	call	0x4004f8
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rax, [rbp - 0x30]
0x400280:	mov	rdi, rax
0x400283:	call	0x500028
<Block for 0x400288, 12 bytes>
0x400288:	lea	rax, [rbp - 0x30]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x4003d4
<Block for 0x400294, 12 bytes>
0x400294:	lea	rax, [rbp - 0x50]
0x400298:	mov	rdi, rax
0x40029b:	call	0x4003d4
<Block for 0x4002a0, 16 bytes>
0x4002a0:	nop	
0x4002a1:	mov	rax, qword ptr [rbp - 0x18]
0x4002a5:	xor	rax, qword ptr fs:[0x28]
0x4002ae:	je	0x4002ea
<Block for 0x4002ea, 7 bytes>
0x4002ea:	add	rsp, 0x58
0x4002ee:	pop	rbx
0x4002ef:	pop	rbp
0x4002f0:	ret	
<Block for 0x4002b0, 2 bytes>
0x4002b0:	jmp	0x4002e5
<Block for 0x4002e5, 5 bytes>
0x4002e5:	call	0x500010
