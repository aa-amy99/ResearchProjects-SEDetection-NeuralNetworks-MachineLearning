<Block for 0x4001fa, 44 bytes>
0x4001fa:	endbr64	
0x4001fe:	push	rbp
0x4001ff:	mov	rbp, rsp
0x400202:	sub	rsp, 0x40
0x400206:	mov	rax, qword ptr fs:[0x28]
0x40020f:	mov	qword ptr [rbp - 8], rax
0x400213:	xor	eax, eax
0x400215:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40021c:	mov	eax, dword ptr [rip + 0x15e]
0x400222:	test	eax, eax
0x400224:	je	0x400234
<Block for 0x400234, 17 bytes>
0x400234:	mov	dword ptr [rbp - 0x34], 7
0x40023b:	mov	eax, dword ptr [rip + 0x13b]
0x400241:	test	eax, eax
0x400243:	je	0x400291
<Block for 0x400226, 12 bytes>
0x400226:	lea	rdi, [rip + 0x17a]
0x40022d:	call	0x500008
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 8]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002a6
<Block for 0x400245, 46 bytes>
0x400245:	mov	qword ptr [rbp - 0x30], 0
0x40024d:	mov	qword ptr [rbp - 0x28], 0
0x400255:	mov	qword ptr [rbp - 0x20], 0
0x40025d:	mov	qword ptr [rbp - 0x18], 0
0x400265:	mov	qword ptr [rbp - 0x10], 0
0x40026d:	cmp	dword ptr [rbp - 0x34], 0
0x400271:	js	0x400285
<Block for 0x400232, 2 bytes>
0x400232:	jmp	0x40023b
<Block for 0x4002a6, 2 bytes>
0x4002a6:	leave	
0x4002a7:	ret	
<Block for 0x4002a1, 5 bytes>
0x4002a1:	call	0x500010
<Block for 0x400285, 12 bytes>
0x400285:	lea	rdi, [rip + 0xfc]
0x40028c:	call	0x500008
<Block for 0x400273, 16 bytes>
0x400273:	mov	eax, dword ptr [rbp - 0x34]
0x400276:	cdqe	
0x400278:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40027c:	mov	edi, eax
0x40027e:	call	0x500000
<Block for 0x40023b, 10 bytes>
0x40023b:	mov	eax, dword ptr [rip + 0x13b]
0x400241:	test	eax, eax
0x400243:	je	0x400291
<Block for 0x400283, 2 bytes>
0x400283:	jmp	0x400291
