<Block for 0x40005a, 21 bytes>
0x40005a:	endbr64	
0x40005e:	push	rbp
0x40005f:	mov	rbp, rsp
0x400062:	sub	rsp, 0x20
0x400066:	mov	eax, 0
0x40006b:	test	eax, eax
0x40006d:	je	0x40007d
<Block for 0x40007d, 10 bytes>
0x40007d:	mov	edi, 8
0x400082:	call	0x500000
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0xf6]
0x400076:	call	0x500020
<Block for 0x400087, 11 bytes>
0x400087:	mov	qword ptr [rbp - 0x18], rax
0x40008b:	cmp	qword ptr [rbp - 0x18], 0
0x400090:	jne	0x40009c
<Block for 0x40007b, 2 bytes>
0x40007b:	jmp	0x4000d2
<Block for 0x400092, 10 bytes>
0x400092:	mov	edi, 0xffffffff
0x400097:	call	0x500008
<Block for 0x40009c, 42 bytes>
0x40009c:	mov	qword ptr [rbp - 0x10], 5
0x4000a4:	mov	rax, qword ptr [rbp - 0x18]
0x4000a8:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ac:	mov	qword ptr [rax], rdx
0x4000af:	mov	rax, qword ptr [rbp - 0x18]
0x4000b3:	mov	rax, qword ptr [rax]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x4000d2, 3 bytes>
0x4000d2:	nop	
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000c6, 12 bytes>
0x4000c6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500010
