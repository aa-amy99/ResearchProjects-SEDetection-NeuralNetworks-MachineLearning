<Block for 0x400264, 46 bytes>
0x400264:	endbr64	
0x400268:	push	rbp
0x400269:	mov	rbp, rsp
0x40026c:	sub	rsp, 0x40
0x400270:	mov	rax, qword ptr fs:[0x28]
0x400279:	mov	qword ptr [rbp - 8], rax
0x40027d:	xor	eax, eax
0x40027f:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400286:	lea	rax, [rbp - 0x34]
0x40028a:	mov	rdi, rax
0x40028d:	call	0x4001d7
<Block for 0x400292, 47 bytes>
0x400292:	mov	qword ptr [rbp - 0x30], 0
0x40029a:	mov	qword ptr [rbp - 0x28], 0
0x4002a2:	mov	qword ptr [rbp - 0x20], 0
0x4002aa:	mov	qword ptr [rbp - 0x18], 0
0x4002b2:	mov	qword ptr [rbp - 0x10], 0
0x4002ba:	mov	eax, dword ptr [rbp - 0x34]
0x4002bd:	test	eax, eax
0x4002bf:	js	0x4002db
<Block for 0x4002db, 12 bytes>
0x4002db:	lea	rdi, [rip + 0x66]
0x4002e2:	call	0x500018
<Block for 0x4002c1, 8 bytes>
0x4002c1:	mov	eax, dword ptr [rbp - 0x34]
0x4002c4:	cmp	eax, 9
0x4002c7:	jg	0x4002db
<Block for 0x4002e7, 16 bytes>
0x4002e7:	nop	
0x4002e8:	mov	rax, qword ptr [rbp - 8]
0x4002ec:	xor	rax, qword ptr fs:[0x28]
0x4002f5:	je	0x4002fc
<Block for 0x4002c9, 16 bytes>
0x4002c9:	mov	eax, dword ptr [rbp - 0x34]
0x4002cc:	cdqe	
0x4002ce:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002d2:	mov	edi, eax
0x4002d4:	call	0x500028
<Block for 0x4002fc, 2 bytes>
0x4002fc:	leave	
0x4002fd:	ret	
<Block for 0x4002f7, 5 bytes>
0x4002f7:	call	0x500020
<Block for 0x4002d9, 2 bytes>
0x4002d9:	jmp	0x4002e7
