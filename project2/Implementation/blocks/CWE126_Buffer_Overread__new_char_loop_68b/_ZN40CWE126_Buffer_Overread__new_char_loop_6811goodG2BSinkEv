<Block for 0x4000d0, 63 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x90
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	rax, qword ptr [rip + 0xfff3b]
0x4000f5:	mov	qword ptr [rbp - 0x80], rax
0x4000f9:	lea	rax, [rbp - 0x70]
0x4000fd:	mov	edx, 0x63
0x400102:	mov	esi, 0x43
0x400107:	mov	rdi, rax
0x40010a:	call	0x500008
<Block for 0x40010f, 16 bytes>
0x40010f:	mov	byte ptr [rbp - 0xd], 0
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	rdi, rax
0x40011a:	call	0x500010
<Block for 0x40011f, 28 bytes>
0x40011f:	mov	qword ptr [rbp - 0x78], rax
0x400123:	mov	qword ptr [rbp - 0x88], 0
0x40012e:	mov	rax, qword ptr [rbp - 0x88]
0x400135:	cmp	rax, qword ptr [rbp - 0x78]
0x400139:	jae	0x400166
<Block for 0x40013b, 43 bytes>
0x40013b:	mov	rdx, qword ptr [rbp - 0x80]
0x40013f:	mov	rax, qword ptr [rbp - 0x88]
0x400146:	add	rax, rdx
0x400149:	movzx	eax, byte ptr [rax]
0x40014c:	lea	rcx, [rbp - 0x70]
0x400150:	mov	rdx, qword ptr [rbp - 0x88]
0x400157:	add	rdx, rcx
0x40015a:	mov	byte ptr [rdx], al
0x40015c:	add	qword ptr [rbp - 0x88], 1
0x400164:	jmp	0x40012e
<Block for 0x400166, 16 bytes>
0x400166:	mov	byte ptr [rbp - 0xd], 0
0x40016a:	lea	rax, [rbp - 0x70]
0x40016e:	mov	rdi, rax
0x400171:	call	0x500018
<Block for 0x40012e, 13 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x88]
0x400135:	cmp	rax, qword ptr [rbp - 0x78]
0x400139:	jae	0x400166
<Block for 0x400176, 7 bytes>
0x400176:	cmp	qword ptr [rbp - 0x80], 0
0x40017b:	je	0x400189
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40017d, 12 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x80]
0x400181:	mov	rdi, rax
0x400184:	call	0x500020
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500028
