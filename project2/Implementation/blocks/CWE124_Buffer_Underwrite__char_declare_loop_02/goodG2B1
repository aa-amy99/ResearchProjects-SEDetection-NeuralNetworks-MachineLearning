<Block for 0x4000de, 55 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	sub	rsp, 0xf0
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	xor	eax, eax
0x4000fc:	lea	rax, [rbp - 0xe0]
0x400103:	mov	edx, 0x63
0x400108:	mov	esi, 0x41
0x40010d:	mov	rdi, rax
0x400110:	call	0x500000
<Block for 0x400115, 40 bytes>
0x400115:	mov	byte ptr [rbp - 0x7d], 0
0x400119:	lea	rax, [rbp - 0xe0]
0x400120:	mov	qword ptr [rbp - 0xe8], rax
0x400127:	lea	rax, [rbp - 0x70]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x43
0x400135:	mov	rdi, rax
0x400138:	call	0x500000
<Block for 0x40013d, 17 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	mov	qword ptr [rbp - 0xf0], 0
0x40014c:	jmp	0x40017a
<Block for 0x40017a, 10 bytes>
0x40017a:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400182:	jbe	0x40014e
<Block for 0x40014e, 54 bytes>
0x40014e:	mov	rdx, qword ptr [rbp - 0xe8]
0x400155:	mov	rax, qword ptr [rbp - 0xf0]
0x40015c:	add	rdx, rax
0x40015f:	lea	rcx, [rbp - 0x70]
0x400163:	mov	rax, qword ptr [rbp - 0xf0]
0x40016a:	add	rax, rcx
0x40016d:	movzx	eax, byte ptr [rax]
0x400170:	mov	byte ptr [rdx], al
0x400172:	add	qword ptr [rbp - 0xf0], 1
0x40017a:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400182:	jbe	0x40014e
<Block for 0x400184, 29 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0xe8]
0x40018b:	add	rax, 0x63
0x40018f:	mov	byte ptr [rax], 0
0x400192:	mov	rax, qword ptr [rbp - 0xe8]
0x400199:	mov	rdi, rax
0x40019c:	call	0x500008
<Block for 0x4001a1, 16 bytes>
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	xor	rax, qword ptr fs:[0x28]
0x4001af:	je	0x4001b6
<Block for 0x4001b6, 2 bytes>
0x4001b6:	leave	
0x4001b7:	ret	
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500010
