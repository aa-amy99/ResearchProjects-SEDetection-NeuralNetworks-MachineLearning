<Block for 0x4001bc, 36 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	sub	rsp, 0x10
0x4001c8:	mov	rax, qword ptr fs:[0x28]
0x4001d1:	mov	qword ptr [rbp - 8], rax
0x4001d5:	xor	eax, eax
0x4001d7:	mov	eax, 1
0x4001dc:	test	eax, eax
0x4001de:	je	0x4001fa
<Block for 0x4001fa, 9 bytes>
0x4001fa:	mov	eax, 1
0x4001ff:	test	eax, eax
0x400201:	je	0x40021d
<Block for 0x4001e0, 26 bytes>
0x4001e0:	mov	dword ptr [rbp - 0x10], 0
0x4001e7:	mov	dword ptr [rbp - 0xc], 0
0x4001ee:	lea	rax, [rbp - 0x10]
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500000
<Block for 0x40021d, 16 bytes>
0x40021d:	nop	
0x40021e:	mov	rax, qword ptr [rbp - 8]
0x400222:	xor	rax, qword ptr fs:[0x28]
0x40022b:	je	0x400232
<Block for 0x400203, 26 bytes>
0x400203:	mov	dword ptr [rbp - 0x10], 1
0x40020a:	mov	dword ptr [rbp - 0xc], 1
0x400211:	lea	rax, [rbp - 0x10]
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x400232, 2 bytes>
0x400232:	leave	
0x400233:	ret	
<Block for 0x40022d, 5 bytes>
0x40022d:	call	0x500008
