<Block for 0x400136, 36 bytes>
0x400136:	endbr64	
0x40013a:	push	rbp
0x40013b:	mov	rbp, rsp
0x40013e:	sub	rsp, 0x10
0x400142:	mov	rax, qword ptr fs:[0x28]
0x40014b:	mov	qword ptr [rbp - 8], rax
0x40014f:	xor	eax, eax
0x400151:	mov	eax, 0
0x400156:	test	eax, eax
0x400158:	je	0x400168
<Block for 0x400168, 26 bytes>
0x400168:	mov	dword ptr [rbp - 0x10], 0
0x40016f:	mov	dword ptr [rbp - 0xc], 0
0x400176:	lea	rax, [rbp - 0x10]
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500000
<Block for 0x40015a, 12 bytes>
0x40015a:	lea	rdi, [rip + 0x10f]
0x400161:	call	0x500010
<Block for 0x400182, 9 bytes>
0x400182:	mov	eax, 1
0x400187:	test	eax, eax
0x400189:	je	0x4001a5
<Block for 0x400166, 2 bytes>
0x400166:	jmp	0x400182
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x40018b, 26 bytes>
0x40018b:	mov	dword ptr [rbp - 0x10], 1
0x400192:	mov	dword ptr [rbp - 0xc], 1
0x400199:	lea	rax, [rbp - 0x10]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500000
<Block for 0x4001ba, 2 bytes>
0x4001ba:	leave	
0x4001bb:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500008
