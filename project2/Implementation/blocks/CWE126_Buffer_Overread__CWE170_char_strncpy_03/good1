<Block for 0x40007f, 55 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	sub	rsp, 0x110
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	lea	rax, [rbp - 0xa0]
0x4000a4:	mov	edx, 0x95
0x4000a9:	mov	esi, 0x41
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500000
<Block for 0x4000b6, 34 bytes>
0x4000b6:	mov	byte ptr [rbp - 0xb], 0
0x4000ba:	lea	rcx, [rbp - 0xa0]
0x4000c1:	lea	rax, [rbp - 0x110]
0x4000c8:	mov	edx, 0x63
0x4000cd:	mov	rsi, rcx
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500008
<Block for 0x4000d8, 22 bytes>
0x4000d8:	mov	byte ptr [rbp - 0xad], 0
0x4000df:	lea	rax, [rbp - 0x110]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500010
<Block for 0x4000ee, 16 bytes>
0x4000ee:	nop	
0x4000ef:	mov	rax, qword ptr [rbp - 8]
0x4000f3:	xor	rax, qword ptr fs:[0x28]
0x4000fc:	je	0x400103
<Block for 0x400103, 2 bytes>
0x400103:	leave	
0x400104:	ret	
<Block for 0x4000fe, 5 bytes>
0x4000fe:	call	0x500018
