<Block for 0x4000e3, 53 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	add	rsp, -0x80
0x4000ef:	mov	qword ptr [rbp - 0x78], rdi
0x4000f3:	mov	rax, qword ptr fs:[0x28]
0x4000fc:	mov	qword ptr [rbp - 8], rax
0x400100:	xor	eax, eax
0x400102:	lea	rax, [rbp - 0x70]
0x400106:	mov	edx, 0x63
0x40010b:	mov	esi, 0x43
0x400110:	mov	rdi, rax
0x400113:	call	0x500000
<Block for 0x400118, 28 bytes>
0x400118:	mov	byte ptr [rbp - 0xd], 0
0x40011c:	lea	rcx, [rbp - 0x70]
0x400120:	mov	rax, qword ptr [rbp - 0x78]
0x400124:	mov	edx, 0x64
0x400129:	mov	rsi, rcx
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x400134, 23 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0x78]
0x400138:	add	rax, 0x63
0x40013c:	mov	byte ptr [rax], 0
0x40013f:	mov	rax, qword ptr [rbp - 0x78]
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x40014b, 16 bytes>
0x40014b:	nop	
0x40014c:	mov	rax, qword ptr [rbp - 8]
0x400150:	xor	rax, qword ptr fs:[0x28]
0x400159:	je	0x400160
<Block for 0x400160, 2 bytes>
0x400160:	leave	
0x400161:	ret	
<Block for 0x40015b, 5 bytes>
0x40015b:	call	0x500018
