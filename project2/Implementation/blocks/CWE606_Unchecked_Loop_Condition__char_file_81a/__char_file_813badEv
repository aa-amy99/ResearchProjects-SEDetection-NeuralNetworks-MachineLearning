<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x90], rax
0x400090:	mov	rax, qword ptr [rbp - 0x90]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 29 bytes>
0x40009f:	mov	qword ptr [rbp - 0x88], rax
0x4000a6:	mov	eax, 0x64
0x4000ab:	sub	rax, qword ptr [rbp - 0x88]
0x4000b2:	cmp	rax, 1
0x4000b6:	jbe	0x400143
<Block for 0x400143, 54 bytes>
0x400143:	lea	rax, [rip + 0xffeee]
0x40014a:	mov	qword ptr [rbp - 0x98], rax
0x400151:	lea	rax, [rbp - 0x98]
0x400158:	mov	qword ptr [rbp - 0x78], rax
0x40015c:	mov	rax, qword ptr [rbp - 0x78]
0x400160:	mov	rax, qword ptr [rax]
0x400163:	mov	rcx, qword ptr [rax]
0x400166:	mov	rdx, qword ptr [rbp - 0x90]
0x40016d:	mov	rax, qword ptr [rbp - 0x78]
0x400171:	mov	rsi, rdx
0x400174:	mov	rdi, rax
0x400177:	call	rcx
<Block for 0x4000bc, 19 bytes>
0x4000bc:	lea	rsi, [rip + 0x356]
0x4000c3:	lea	rdi, [rip + 0x351]
0x4000ca:	call	0x500008
<Block for 0x400179, 16 bytes>
0x400179:	nop	
0x40017a:	mov	rax, qword ptr [rbp - 8]
0x40017e:	xor	rax, qword ptr fs:[0x28]
0x400187:	je	0x40018e
<Block for 0x4000cf, 11 bytes>
0x4000cf:	mov	qword ptr [rbp - 0x80], rax
0x4000d3:	cmp	qword ptr [rbp - 0x80], 0
0x4000d8:	je	0x400143
<Block for 0x40018e, 2 bytes>
0x40018e:	leave	
0x40018f:	ret	
<Block for 0x400189, 5 bytes>
0x400189:	call	0x500030
<Block for 0x4000da, 51 bytes>
0x4000da:	mov	rax, qword ptr [rbp - 0x88]
0x4000e1:	mov	edx, 0x64
0x4000e6:	sub	edx, eax
0x4000e8:	mov	eax, edx
0x4000ea:	mov	esi, eax
0x4000ec:	mov	rdx, qword ptr [rbp - 0x90]
0x4000f3:	mov	rax, qword ptr [rbp - 0x88]
0x4000fa:	lea	rcx, [rdx + rax]
0x4000fe:	mov	rax, qword ptr [rbp - 0x80]
0x400102:	mov	rdx, rax
0x400105:	mov	rdi, rcx
0x400108:	call	0x500010
<Block for 0x40010d, 10 bytes>
0x40010d:	test	rax, rax
0x400110:	sete	al
0x400113:	test	al, al
0x400115:	je	0x400137
<Block for 0x400137, 12 bytes>
0x400137:	mov	rax, qword ptr [rbp - 0x80]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500020
<Block for 0x400117, 12 bytes>
0x400117:	lea	rdi, [rip + 0x30b]
0x40011e:	call	0x500018
<Block for 0x400123, 32 bytes>
0x400123:	mov	rdx, qword ptr [rbp - 0x90]
0x40012a:	mov	rax, qword ptr [rbp - 0x88]
0x400131:	add	rax, rdx
0x400134:	mov	byte ptr [rax], 0
0x400137:	mov	rax, qword ptr [rbp - 0x80]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500020
