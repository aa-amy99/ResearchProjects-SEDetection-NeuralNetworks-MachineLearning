<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4004b0
<Block for 0x40002b, 10 bytes>
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 17 bytes>
0x400035:	mov	qword ptr [rbp - 0x98], rax
0x40003c:	cmp	qword ptr [rbp - 0x98], 0
0x400044:	jne	0x400050
<Block for 0x400046, 10 bytes>
0x400046:	mov	edi, 0xffffffff
0x40004b:	call	0x500008
<Block for 0x400050, 25 bytes>
0x400050:	mov	rax, qword ptr [rbp - 0x98]
0x400057:	mov	byte ptr [rax], 0
0x40005a:	mov	rax, qword ptr [rbp - 0x98]
0x400061:	mov	rdi, rax
0x400064:	call	0x500010
<Block for 0x400069, 19 bytes>
0x400069:	mov	qword ptr [rbp - 0x90], rax
0x400070:	lea	rdi, [rip + 0x331]
0x400077:	call	0x500018
<Block for 0x40007c, 17 bytes>
0x40007c:	mov	qword ptr [rbp - 0x88], rax
0x400083:	cmp	qword ptr [rbp - 0x88], 0
0x40008b:	je	0x4000bf
<Block for 0x4000bf, 26 bytes>
0x4000bf:	mov	dword ptr [rbp - 0x50], 0
0x4000c6:	lea	rdx, [rbp - 0x50]
0x4000ca:	lea	rax, [rbp - 0x80]
0x4000ce:	mov	rsi, rdx
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x40066a
<Block for 0x40008d, 50 bytes>
0x40008d:	mov	eax, 0x63
0x400092:	sub	rax, qword ptr [rbp - 0x90]
0x400099:	mov	rdx, rax
0x40009c:	mov	rcx, qword ptr [rbp - 0x98]
0x4000a3:	mov	rax, qword ptr [rbp - 0x90]
0x4000aa:	add	rcx, rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x88]
0x4000b4:	mov	rsi, rax
0x4000b7:	mov	rdi, rcx
0x4000ba:	call	0x500020
<Block for 0x4000d9, 36 bytes>
0x4000d9:	mov	rdx, qword ptr [rbp - 0x98]
0x4000e0:	mov	qword ptr [rax], rdx
0x4000e3:	mov	dword ptr [rbp - 0x50], 1
0x4000ea:	lea	rdx, [rbp - 0x50]
0x4000ee:	lea	rax, [rbp - 0x80]
0x4000f2:	mov	rsi, rdx
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x40066a
<Block for 0x4000fd, 36 bytes>
0x4000fd:	mov	rdx, qword ptr [rbp - 0x98]
0x400104:	mov	qword ptr [rax], rdx
0x400107:	mov	dword ptr [rbp - 0x50], 2
0x40010e:	lea	rdx, [rbp - 0x50]
0x400112:	lea	rax, [rbp - 0x80]
0x400116:	mov	rsi, rdx
0x400119:	mov	rdi, rax
0x40011c:	call	0x40066a
<Block for 0x400121, 29 bytes>
0x400121:	mov	rdx, qword ptr [rbp - 0x98]
0x400128:	mov	qword ptr [rax], rdx
0x40012b:	lea	rdx, [rbp - 0x80]
0x40012f:	lea	rax, [rbp - 0x50]
0x400133:	mov	rsi, rdx
0x400136:	mov	rdi, rax
0x400139:	call	0x4004f0
<Block for 0x40013e, 12 bytes>
0x40013e:	lea	rax, [rbp - 0x50]
0x400142:	mov	rdi, rax
0x400145:	call	0x500028
<Block for 0x40014a, 12 bytes>
0x40014a:	lea	rax, [rbp - 0x50]
0x40014e:	mov	rdi, rax
0x400151:	call	0x4004d0
<Block for 0x400156, 12 bytes>
0x400156:	lea	rax, [rbp - 0x80]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x4004d0
<Block for 0x400162, 16 bytes>
0x400162:	nop	
0x400163:	mov	rax, qword ptr [rbp - 0x18]
0x400167:	xor	rax, qword ptr fs:[0x28]
0x400170:	je	0x4001ac
<Block for 0x4001ac, 10 bytes>
0x4001ac:	add	rsp, 0x98
0x4001b3:	pop	rbx
0x4001b4:	pop	rbp
0x4001b5:	ret	
<Block for 0x400172, 2 bytes>
0x400172:	jmp	0x4001a7
<Block for 0x4001a7, 5 bytes>
0x4001a7:	call	0x500038
