<Block for 0x4001b6, 43 bytes>
0x4001b6:	endbr64	
0x4001ba:	push	rbp
0x4001bb:	mov	rbp, rsp
0x4001be:	push	rbx
0x4001bf:	sub	rsp, 0x98
0x4001c6:	mov	rax, qword ptr fs:[0x28]
0x4001cf:	mov	qword ptr [rbp - 0x18], rax
0x4001d3:	xor	eax, eax
0x4001d5:	lea	rax, [rbp - 0x80]
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x4004b0
<Block for 0x4001e1, 10 bytes>
0x4001e1:	mov	edi, 0x64
0x4001e6:	call	0x500000
<Block for 0x4001eb, 17 bytes>
0x4001eb:	mov	qword ptr [rbp - 0x98], rax
0x4001f2:	cmp	qword ptr [rbp - 0x98], 0
0x4001fa:	jne	0x400206
<Block for 0x4001fc, 10 bytes>
0x4001fc:	mov	edi, 0xffffffff
0x400201:	call	0x500008
<Block for 0x400206, 25 bytes>
0x400206:	mov	rax, qword ptr [rbp - 0x98]
0x40020d:	mov	byte ptr [rax], 0
0x400210:	mov	rax, qword ptr [rbp - 0x98]
0x400217:	mov	rdi, rax
0x40021a:	call	0x500010
<Block for 0x40021f, 19 bytes>
0x40021f:	mov	qword ptr [rbp - 0x90], rax
0x400226:	lea	rdi, [rip + 0x17b]
0x40022d:	call	0x500018
<Block for 0x400232, 17 bytes>
0x400232:	mov	qword ptr [rbp - 0x88], rax
0x400239:	cmp	qword ptr [rbp - 0x88], 0
0x400241:	je	0x400275
<Block for 0x400275, 26 bytes>
0x400275:	mov	dword ptr [rbp - 0x50], 0
0x40027c:	lea	rdx, [rbp - 0x50]
0x400280:	lea	rax, [rbp - 0x80]
0x400284:	mov	rsi, rdx
0x400287:	mov	rdi, rax
0x40028a:	call	0x40066a
<Block for 0x400243, 50 bytes>
0x400243:	mov	eax, 0x63
0x400248:	sub	rax, qword ptr [rbp - 0x90]
0x40024f:	mov	rdx, rax
0x400252:	mov	rcx, qword ptr [rbp - 0x98]
0x400259:	mov	rax, qword ptr [rbp - 0x90]
0x400260:	add	rcx, rax
0x400263:	mov	rax, qword ptr [rbp - 0x88]
0x40026a:	mov	rsi, rax
0x40026d:	mov	rdi, rcx
0x400270:	call	0x500020
<Block for 0x40028f, 36 bytes>
0x40028f:	mov	rdx, qword ptr [rbp - 0x98]
0x400296:	mov	qword ptr [rax], rdx
0x400299:	mov	dword ptr [rbp - 0x50], 1
0x4002a0:	lea	rdx, [rbp - 0x50]
0x4002a4:	lea	rax, [rbp - 0x80]
0x4002a8:	mov	rsi, rdx
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x40066a
<Block for 0x4002b3, 36 bytes>
0x4002b3:	mov	rdx, qword ptr [rbp - 0x98]
0x4002ba:	mov	qword ptr [rax], rdx
0x4002bd:	mov	dword ptr [rbp - 0x50], 2
0x4002c4:	lea	rdx, [rbp - 0x50]
0x4002c8:	lea	rax, [rbp - 0x80]
0x4002cc:	mov	rsi, rdx
0x4002cf:	mov	rdi, rax
0x4002d2:	call	0x40066a
<Block for 0x4002d7, 29 bytes>
0x4002d7:	mov	rdx, qword ptr [rbp - 0x98]
0x4002de:	mov	qword ptr [rax], rdx
0x4002e1:	lea	rdx, [rbp - 0x80]
0x4002e5:	lea	rax, [rbp - 0x50]
0x4002e9:	mov	rsi, rdx
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x4004f0
<Block for 0x4002f4, 12 bytes>
0x4002f4:	lea	rax, [rbp - 0x50]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500040
<Block for 0x400300, 12 bytes>
0x400300:	lea	rax, [rbp - 0x50]
0x400304:	mov	rdi, rax
0x400307:	call	0x4004d0
<Block for 0x40030c, 12 bytes>
0x40030c:	lea	rax, [rbp - 0x80]
0x400310:	mov	rdi, rax
0x400313:	call	0x4004d0
<Block for 0x400318, 16 bytes>
0x400318:	nop	
0x400319:	mov	rax, qword ptr [rbp - 0x18]
0x40031d:	xor	rax, qword ptr fs:[0x28]
0x400326:	je	0x400362
<Block for 0x400362, 10 bytes>
0x400362:	add	rsp, 0x98
0x400369:	pop	rbx
0x40036a:	pop	rbp
0x40036b:	ret	
<Block for 0x400328, 2 bytes>
0x400328:	jmp	0x40035d
<Block for 0x40035d, 5 bytes>
0x40035d:	call	0x500038
