<Block for 0x400059, 22 bytes>
0x400059:	endbr64	
0x40005d:	push	rbp
0x40005e:	mov	rbp, rsp
0x400061:	sub	rsp, 0x20
0x400065:	mov	eax, dword ptr [rip + 0x119]
0x40006b:	test	eax, eax
0x40006d:	je	0x40007d
<Block for 0x40007d, 10 bytes>
0x40007d:	mov	edi, 8
0x400082:	call	0x500000
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0x112]
0x400076:	call	0x500018
<Block for 0x400087, 30 bytes>
0x400087:	mov	qword ptr [rbp - 0x18], rax
0x40008b:	mov	rax, qword ptr [rbp - 0x18]
0x40008f:	movsd	xmm0, qword ptr [rip + 0x109]
0x400097:	movsd	qword ptr [rax], xmm0
0x40009b:	mov	edi, 8
0x4000a0:	call	0x500000
<Block for 0x40007b, 2 bytes>
0x40007b:	jmp	0x4000e6
<Block for 0x4000a5, 43 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x10], rax
0x4000a9:	mov	rax, qword ptr [rbp - 0x10]
0x4000ad:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b1:	mov	qword ptr [rax], rdx
0x4000b4:	mov	rax, qword ptr [rbp - 0x10]
0x4000b8:	mov	rax, qword ptr [rax]
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	mov	rax, qword ptr [rax]
0x4000c6:	movq	xmm0, rax
0x4000cb:	call	0x500010
<Block for 0x4000e6, 3 bytes>
0x4000e6:	nop	
0x4000e7:	leave	
0x4000e8:	ret	
<Block for 0x4000d0, 9 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x10]
0x4000d4:	test	rax, rax
0x4000d7:	je	0x4000e6
<Block for 0x4000d9, 13 bytes>
0x4000d9:	mov	esi, 8
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500008
