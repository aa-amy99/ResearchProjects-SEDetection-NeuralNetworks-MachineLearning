<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400022:	mov	eax, 5
0x400027:	cmp	eax, 5
0x40002a:	jne	0x40007b
<Block for 0x40002c, 45 bytes>
0x40002c:	mov	qword ptr [rbp - 0x16], 0
0x400034:	mov	dword ptr [rbp - 0xe], 0
0x40003b:	mov	word ptr [rbp - 0xa], 0
0x400041:	mov	rdx, qword ptr [rip + 0xfffb8]
0x400048:	lea	rax, [rbp - 0x16]
0x40004c:	mov	esi, 0xe
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
<Block for 0x40007b, 10 bytes>
0x40007b:	mov	eax, 5
0x400080:	cmp	eax, 5
0x400083:	jne	0x4000d1
<Block for 0x400059, 5 bytes>
0x400059:	test	rax, rax
0x40005c:	je	0x40006f
<Block for 0x400085, 46 bytes>
0x400085:	mov	qword ptr [rbp - 0x40], 0
0x40008d:	mov	qword ptr [rbp - 0x38], 0
0x400095:	mov	qword ptr [rbp - 0x30], 0
0x40009d:	mov	qword ptr [rbp - 0x28], 0
0x4000a5:	mov	qword ptr [rbp - 0x20], 0
0x4000ad:	cmp	dword ptr [rbp - 0x44], 0
0x4000b1:	js	0x4000c5
<Block for 0x4000d1, 16 bytes>
0x4000d1:	nop	
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	xor	rax, qword ptr fs:[0x28]
0x4000df:	je	0x4000e6
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0x3e6]
0x400076:	call	0x500018
<Block for 0x40005e, 12 bytes>
0x40005e:	lea	rax, [rbp - 0x16]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x4000c5, 12 bytes>
0x4000c5:	lea	rdi, [rip + 0x3a4]
0x4000cc:	call	0x500018
<Block for 0x4000b3, 16 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 0x44]
0x4000b6:	cdqe	
0x4000b8:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000bc:	mov	edi, eax
0x4000be:	call	0x500020
<Block for 0x4000e6, 2 bytes>
0x4000e6:	leave	
0x4000e7:	ret	
<Block for 0x4000e1, 5 bytes>
0x4000e1:	call	0x500028
<Block for 0x40006a, 5 bytes>
0x40006a:	mov	dword ptr [rbp - 0x44], eax
0x40006d:	jmp	0x40007b
<Block for 0x4000c3, 2 bytes>
0x4000c3:	jmp	0x4000d1
