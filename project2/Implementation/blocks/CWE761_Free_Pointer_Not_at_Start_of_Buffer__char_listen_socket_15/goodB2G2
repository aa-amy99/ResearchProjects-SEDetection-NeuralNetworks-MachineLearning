<Block for 0x400444, 37 bytes>
0x400444:	endbr64	
0x400448:	push	rbp
0x400449:	mov	rbp, rsp
0x40044c:	sub	rsp, 0x50
0x400450:	mov	rax, qword ptr fs:[0x28]
0x400459:	mov	qword ptr [rbp - 8], rax
0x40045d:	xor	eax, eax
0x40045f:	mov	edi, 0x64
0x400464:	call	0x500000
<Block for 0x400469, 11 bytes>
0x400469:	mov	qword ptr [rbp - 0x38], rax
0x40046d:	cmp	qword ptr [rbp - 0x38], 0
0x400472:	jne	0x40047e
<Block for 0x400474, 10 bytes>
0x400474:	mov	edi, 0xffffffff
0x400479:	call	0x500008
<Block for 0x40047e, 33 bytes>
0x40047e:	mov	rax, qword ptr [rbp - 0x38]
0x400482:	mov	byte ptr [rax], 0
0x400485:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40048c:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400493:	mov	rax, qword ptr [rbp - 0x38]
0x400497:	mov	rdi, rax
0x40049a:	call	0x500010
<Block for 0x40049f, 24 bytes>
0x40049f:	mov	qword ptr [rbp - 0x30], rax
0x4004a3:	mov	edx, 6
0x4004a8:	mov	esi, 1
0x4004ad:	mov	edi, 2
0x4004b2:	call	0x500018
<Block for 0x4004b7, 13 bytes>
0x4004b7:	mov	dword ptr [rbp - 0x48], eax
0x4004ba:	cmp	dword ptr [rbp - 0x48], -1
0x4004be:	je	0x4005e2
<Block for 0x4005e2, 3 bytes>
0x4005e2:	nop	
0x4005e3:	jmp	0x4005ec
<Block for 0x4004c4, 22 bytes>
0x4004c4:	lea	rax, [rbp - 0x20]
0x4004c8:	mov	edx, 0x10
0x4004cd:	mov	esi, 0
0x4004d2:	mov	rdi, rax
0x4004d5:	call	0x500020
<Block for 0x4005ec, 6 bytes>
0x4005ec:	cmp	dword ptr [rbp - 0x48], -1
0x4005f0:	je	0x4005fc
<Block for 0x4004da, 23 bytes>
0x4004da:	mov	word ptr [rbp - 0x20], 2
0x4004e0:	mov	dword ptr [rbp - 0x1c], 0
0x4004e7:	mov	edi, 0x6987
0x4004ec:	call	0x500028
<Block for 0x4005fc, 6 bytes>
0x4005fc:	cmp	dword ptr [rbp - 0x4c], -1
0x400600:	je	0x40060c
<Block for 0x4005f2, 10 bytes>
0x4005f2:	mov	eax, dword ptr [rbp - 0x48]
0x4005f5:	mov	edi, eax
0x4005f7:	call	0x500058
<Block for 0x4004f1, 26 bytes>
0x4004f1:	mov	word ptr [rbp - 0x1e], ax
0x4004f5:	lea	rcx, [rbp - 0x20]
0x4004f9:	mov	eax, dword ptr [rbp - 0x48]
0x4004fc:	mov	edx, 0x10
0x400501:	mov	rsi, rcx
0x400504:	mov	edi, eax
0x400506:	call	0x500030
<Block for 0x40060c, 10 bytes>
0x40060c:	mov	qword ptr [rbp - 0x40], 0
0x400614:	jmp	0x40063b
<Block for 0x400602, 10 bytes>
0x400602:	mov	eax, dword ptr [rbp - 0x4c]
0x400605:	mov	edi, eax
0x400607:	call	0x500058
<Block for 0x40050b, 9 bytes>
0x40050b:	cmp	eax, -1
0x40050e:	je	0x4005e5
<Block for 0x40063b, 12 bytes>
0x40063b:	mov	rax, qword ptr [rbp - 0x38]
0x40063f:	mov	rdi, rax
0x400642:	call	0x500010
<Block for 0x4005e5, 3 bytes>
0x4005e5:	nop	
0x4005e6:	jmp	0x4005ec
<Block for 0x400514, 15 bytes>
0x400514:	mov	eax, dword ptr [rbp - 0x48]
0x400517:	mov	esi, 5
0x40051c:	mov	edi, eax
0x40051e:	call	0x500038
<Block for 0x400647, 6 bytes>
0x400647:	cmp	qword ptr [rbp - 0x40], rax
0x40064b:	jb	0x400616
<Block for 0x400523, 9 bytes>
0x400523:	cmp	eax, -1
0x400526:	je	0x4005e8
<Block for 0x400616, 18 bytes>
0x400616:	mov	rdx, qword ptr [rbp - 0x38]
0x40061a:	mov	rax, qword ptr [rbp - 0x40]
0x40061e:	add	rax, rdx
0x400621:	movzx	eax, byte ptr [rax]
0x400624:	cmp	al, 0x53
0x400626:	jne	0x400636
<Block for 0x40064d, 12 bytes>
0x40064d:	mov	rax, qword ptr [rbp - 0x38]
0x400651:	mov	rdi, rax
0x400654:	call	0x500068
<Block for 0x4005e8, 3 bytes>
0x4005e8:	nop	
0x4005e9:	jmp	0x4005ec
<Block for 0x40052c, 20 bytes>
0x40052c:	mov	eax, dword ptr [rbp - 0x48]
0x40052f:	mov	edx, 0
0x400534:	mov	esi, 0
0x400539:	mov	edi, eax
0x40053b:	call	0x500040
<Block for 0x400628, 12 bytes>
0x400628:	lea	rdi, [rip + 0x61]
0x40062f:	call	0x500060
<Block for 0x400636, 17 bytes>
0x400636:	add	qword ptr [rbp - 0x40], 1
0x40063b:	mov	rax, qword ptr [rbp - 0x38]
0x40063f:	mov	rdi, rax
0x400642:	call	0x500010
<Block for 0x400659, 17 bytes>
0x400659:	nop	
0x40065a:	nop	
0x40065b:	mov	rax, qword ptr [rbp - 8]
0x40065f:	xor	rax, qword ptr fs:[0x28]
0x400668:	je	0x40066f
<Block for 0x400540, 13 bytes>
0x400540:	mov	dword ptr [rbp - 0x4c], eax
0x400543:	cmp	dword ptr [rbp - 0x4c], -1
0x400547:	je	0x4005eb
<Block for 0x400634, 2 bytes>
0x400634:	jmp	0x40064d
<Block for 0x40066f, 2 bytes>
0x40066f:	leave	
0x400670:	ret	
<Block for 0x40066a, 5 bytes>
0x40066a:	call	0x500070
<Block for 0x40054d, 39 bytes>
0x40054d:	mov	eax, 0x63
0x400552:	sub	rax, qword ptr [rbp - 0x30]
0x400556:	mov	rdx, rax
0x400559:	mov	rcx, qword ptr [rbp - 0x38]
0x40055d:	mov	rax, qword ptr [rbp - 0x30]
0x400561:	lea	rsi, [rcx + rax]
0x400565:	mov	eax, dword ptr [rbp - 0x4c]
0x400568:	mov	ecx, 0
0x40056d:	mov	edi, eax
0x40056f:	call	0x500048
<Block for 0x4005eb, 1 bytes>
0x4005eb:	nop	
<Block for 0x400574, 9 bytes>
0x400574:	mov	dword ptr [rbp - 0x44], eax
0x400577:	cmp	dword ptr [rbp - 0x44], -1
0x40057b:	je	0x4005ec
<Block for 0x40057d, 6 bytes>
0x40057d:	cmp	dword ptr [rbp - 0x44], 0
0x400581:	je	0x4005ec
<Block for 0x400583, 40 bytes>
0x400583:	mov	eax, dword ptr [rbp - 0x44]
0x400586:	movsxd	rdx, eax
0x400589:	mov	rax, qword ptr [rbp - 0x30]
0x40058d:	add	rdx, rax
0x400590:	mov	rax, qword ptr [rbp - 0x38]
0x400594:	add	rax, rdx
0x400597:	mov	byte ptr [rax], 0
0x40059a:	mov	rax, qword ptr [rbp - 0x38]
0x40059e:	mov	esi, 0xd
0x4005a3:	mov	rdi, rax
0x4005a6:	call	0x500050
<Block for 0x4005ab, 11 bytes>
0x4005ab:	mov	qword ptr [rbp - 0x28], rax
0x4005af:	cmp	qword ptr [rbp - 0x28], 0
0x4005b4:	je	0x4005bd
<Block for 0x4005bd, 17 bytes>
0x4005bd:	mov	rax, qword ptr [rbp - 0x38]
0x4005c1:	mov	esi, 0xa
0x4005c6:	mov	rdi, rax
0x4005c9:	call	0x500050
<Block for 0x4005b6, 24 bytes>
0x4005b6:	mov	rax, qword ptr [rbp - 0x28]
0x4005ba:	mov	byte ptr [rax], 0
0x4005bd:	mov	rax, qword ptr [rbp - 0x38]
0x4005c1:	mov	esi, 0xa
0x4005c6:	mov	rdi, rax
0x4005c9:	call	0x500050
<Block for 0x4005ce, 11 bytes>
0x4005ce:	mov	qword ptr [rbp - 0x28], rax
0x4005d2:	cmp	qword ptr [rbp - 0x28], 0
0x4005d7:	je	0x4005ec
<Block for 0x4005d9, 9 bytes>
0x4005d9:	mov	rax, qword ptr [rbp - 0x28]
0x4005dd:	mov	byte ptr [rax], 0
0x4005e0:	jmp	0x4005ec
