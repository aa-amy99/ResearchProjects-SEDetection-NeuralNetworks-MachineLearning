<Block for 0x400268, 81 bytes>
0x400268:	endbr64	
0x40026c:	push	rbp
0x40026d:	mov	rbp, rsp
0x400270:	add	rsp, -0x80
0x400274:	mov	rax, qword ptr fs:[0x28]
0x40027d:	mov	qword ptr [rbp - 8], rax
0x400281:	xor	eax, eax
0x400283:	mov	eax, 0x10
0x400288:	sub	rax, 1
0x40028c:	add	rax, 0x6c
0x400290:	mov	esi, 0x10
0x400295:	mov	edx, 0
0x40029a:	div	rsi
0x40029d:	imul	rax, rax, 0x10
0x4002a1:	mov	rdx, rax
0x4002a4:	and	rdx, 0xfffffffffffff000
0x4002ab:	mov	rcx, rsp
0x4002ae:	sub	rcx, rdx
0x4002b1:	mov	rdx, rcx
0x4002b4:	cmp	rsp, rdx
0x4002b7:	je	0x4002cb
<Block for 0x4002cb, 26 bytes>
0x4002cb:	mov	rdx, rax
0x4002ce:	and	edx, 0xfff
0x4002d4:	sub	rsp, rdx
0x4002d7:	mov	rdx, rax
0x4002da:	and	edx, 0xfff
0x4002e0:	test	rdx, rdx
0x4002e3:	je	0x4002f5
<Block for 0x4002b9, 18 bytes>
0x4002b9:	sub	rsp, 0x1000
0x4002c0:	or	qword ptr [rsp + 0xff8], 0
0x4002c9:	jmp	0x4002b4
<Block for 0x4002f5, 41 bytes>
0x4002f5:	mov	rax, rsp
0x4002f8:	add	rax, 0xf
0x4002fc:	shr	rax, 4
0x400300:	shl	rax, 4
0x400304:	mov	qword ptr [rbp - 0x78], rax
0x400308:	mov	rax, qword ptr [rbp - 0x78]
0x40030c:	mov	edx, 0x63
0x400311:	mov	esi, 0x41
0x400316:	mov	rdi, rax
0x400319:	call	0x500000
<Block for 0x4002e5, 57 bytes>
0x4002e5:	and	eax, 0xfff
0x4002ea:	sub	rax, 8
0x4002ee:	add	rax, rsp
0x4002f1:	or	qword ptr [rax], 0
0x4002f5:	mov	rax, rsp
0x4002f8:	add	rax, 0xf
0x4002fc:	shr	rax, 4
0x400300:	shl	rax, 4
0x400304:	mov	qword ptr [rbp - 0x78], rax
0x400308:	mov	rax, qword ptr [rbp - 0x78]
0x40030c:	mov	edx, 0x63
0x400311:	mov	esi, 0x41
0x400316:	mov	rdi, rax
0x400319:	call	0x500000
<Block for 0x4002b4, 5 bytes>
0x4002b4:	cmp	rsp, rdx
0x4002b7:	je	0x4002cb
<Block for 0x40031e, 20 bytes>
0x40031e:	mov	rax, qword ptr [rbp - 0x78]
0x400322:	add	rax, 0x63
0x400326:	mov	byte ptr [rax], 0
0x400329:	mov	eax, 1
0x40032e:	test	eax, eax
0x400330:	je	0x40033a
<Block for 0x40033a, 22 bytes>
0x40033a:	lea	rax, [rbp - 0x70]
0x40033e:	mov	edx, 0x63
0x400343:	mov	esi, 0x43
0x400348:	mov	rdi, rax
0x40034b:	call	0x500000
<Block for 0x400332, 30 bytes>
0x400332:	mov	rax, qword ptr [rbp - 0x78]
0x400336:	mov	qword ptr [rbp - 0x80], rax
0x40033a:	lea	rax, [rbp - 0x70]
0x40033e:	mov	edx, 0x63
0x400343:	mov	esi, 0x43
0x400348:	mov	rdi, rax
0x40034b:	call	0x500000
<Block for 0x400350, 28 bytes>
0x400350:	mov	byte ptr [rbp - 0xd], 0
0x400354:	mov	rcx, qword ptr [rbp - 0x80]
0x400358:	lea	rax, [rbp - 0x70]
0x40035c:	mov	edx, 0x64
0x400361:	mov	rsi, rcx
0x400364:	mov	rdi, rax
0x400367:	call	0x500008
<Block for 0x40036c, 16 bytes>
0x40036c:	mov	byte ptr [rbp - 0xd], 0
0x400370:	lea	rax, [rbp - 0x70]
0x400374:	mov	rdi, rax
0x400377:	call	0x500010
<Block for 0x40037c, 16 bytes>
0x40037c:	nop	
0x40037d:	mov	rax, qword ptr [rbp - 8]
0x400381:	xor	rax, qword ptr fs:[0x28]
0x40038a:	je	0x400391
<Block for 0x400391, 2 bytes>
0x400391:	leave	
0x400392:	ret	
<Block for 0x40038c, 5 bytes>
0x40038c:	call	0x500018
