<Block for 0x400549, 88 bytes>
0x400549:	endbr64	
0x40054d:	push	rbp
0x40054e:	mov	rbp, rsp
0x400551:	sub	rsp, 0x40
0x400555:	mov	rax, qword ptr fs:[0x28]
0x40055e:	mov	qword ptr [rbp - 8], rax
0x400562:	xor	eax, eax
0x400564:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40056b:	mov	dword ptr [rbp - 0x34], 7
0x400572:	nop	
0x400573:	mov	qword ptr [rbp - 0x30], 0
0x40057b:	mov	qword ptr [rbp - 0x28], 0
0x400583:	mov	qword ptr [rbp - 0x20], 0
0x40058b:	mov	qword ptr [rbp - 0x18], 0
0x400593:	mov	qword ptr [rbp - 0x10], 0
0x40059b:	cmp	dword ptr [rbp - 0x34], 9
0x40059f:	jg	0x4005d3
<Block for 0x4005a1, 22 bytes>
0x4005a1:	mov	eax, dword ptr [rbp - 0x34]
0x4005a4:	cdqe	
0x4005a6:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4005ae:	mov	dword ptr [rbp - 0x38], 0
0x4005b5:	jmp	0x4005cb
<Block for 0x4005d3, 12 bytes>
0x4005d3:	lea	rdi, [rip + 0xfe]
0x4005da:	call	0x500050
<Block for 0x4005cb, 6 bytes>
0x4005cb:	cmp	dword ptr [rbp - 0x38], 9
0x4005cf:	jle	0x4005b7
<Block for 0x4005df, 17 bytes>
0x4005df:	nop	
0x4005e0:	nop	
0x4005e1:	mov	rax, qword ptr [rbp - 8]
0x4005e5:	xor	rax, qword ptr fs:[0x28]
0x4005ee:	je	0x4005f5
<Block for 0x4005b7, 16 bytes>
0x4005b7:	mov	eax, dword ptr [rbp - 0x38]
0x4005ba:	cdqe	
0x4005bc:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4005c0:	mov	edi, eax
0x4005c2:	call	0x500048
<Block for 0x4005d1, 2 bytes>
0x4005d1:	jmp	0x4005df
<Block for 0x4005f5, 2 bytes>
0x4005f5:	leave	
0x4005f6:	ret	
<Block for 0x4005f0, 5 bytes>
0x4005f0:	call	0x500058
<Block for 0x4005c7, 10 bytes>
0x4005c7:	add	dword ptr [rbp - 0x38], 1
0x4005cb:	cmp	dword ptr [rbp - 0x38], 9
0x4005cf:	jle	0x4005b7
