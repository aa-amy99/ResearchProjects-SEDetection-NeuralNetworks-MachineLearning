<Block for 0x400214, 37 bytes>
0x400214:	endbr64	
0x400218:	push	rbp
0x400219:	mov	rbp, rsp
0x40021c:	sub	rsp, 0x20
0x400220:	mov	rax, qword ptr fs:[0x28]
0x400229:	mov	qword ptr [rbp - 8], rax
0x40022d:	xor	eax, eax
0x40022f:	mov	eax, 0
0x400234:	call	0x400000
<Block for 0x400239, 8 bytes>
0x400239:	test	eax, eax
0x40023b:	je	0x4002fe
<Block for 0x4002fe, 16 bytes>
0x4002fe:	nop	
0x4002ff:	mov	rax, qword ptr [rbp - 8]
0x400303:	xor	rax, qword ptr fs:[0x28]
0x40030c:	je	0x400313
<Block for 0x400241, 54 bytes>
0x400241:	mov	eax, 0x10
0x400246:	sub	rax, 1
0x40024a:	add	rax, 0x10
0x40024e:	mov	esi, 0x10
0x400253:	mov	edx, 0
0x400258:	div	rsi
0x40025b:	imul	rax, rax, 0x10
0x40025f:	mov	rdx, rax
0x400262:	and	rdx, 0xfffffffffffff000
0x400269:	mov	rcx, rsp
0x40026c:	sub	rcx, rdx
0x40026f:	mov	rdx, rcx
0x400272:	cmp	rsp, rdx
0x400275:	je	0x400289
<Block for 0x400313, 2 bytes>
0x400313:	leave	
0x400314:	ret	
<Block for 0x40030e, 5 bytes>
0x40030e:	call	0x500008
<Block for 0x400289, 26 bytes>
0x400289:	mov	rdx, rax
0x40028c:	and	edx, 0xfff
0x400292:	sub	rsp, rdx
0x400295:	mov	rdx, rax
0x400298:	and	edx, 0xfff
0x40029e:	test	rdx, rdx
0x4002a1:	je	0x4002b3
<Block for 0x400277, 18 bytes>
0x400277:	sub	rsp, 0x1000
0x40027e:	or	qword ptr [rsp + 0xff8], 0
0x400287:	jmp	0x400272
<Block for 0x4002b3, 65 bytes>
0x4002b3:	mov	rax, rsp
0x4002b6:	add	rax, 0xf
0x4002ba:	shr	rax, 4
0x4002be:	shl	rax, 4
0x4002c2:	mov	qword ptr [rbp - 0x20], rax
0x4002c6:	mov	dword ptr [rbp - 0x18], 1
0x4002cd:	mov	dword ptr [rbp - 0x14], 2
0x4002d4:	mov	rax, qword ptr [rbp - 0x20]
0x4002d8:	mov	rdx, qword ptr [rbp - 0x18]
0x4002dc:	mov	qword ptr [rax], rdx
0x4002df:	mov	rax, qword ptr [rbp - 0x20]
0x4002e3:	mov	rax, qword ptr [rax]
0x4002e6:	mov	qword ptr [rbp - 0x10], rax
0x4002ea:	mov	eax, dword ptr [rbp - 0x10]
0x4002ed:	mov	edi, eax
0x4002ef:	call	0x500000
<Block for 0x4002a3, 81 bytes>
0x4002a3:	and	eax, 0xfff
0x4002a8:	sub	rax, 8
0x4002ac:	add	rax, rsp
0x4002af:	or	qword ptr [rax], 0
0x4002b3:	mov	rax, rsp
0x4002b6:	add	rax, 0xf
0x4002ba:	shr	rax, 4
0x4002be:	shl	rax, 4
0x4002c2:	mov	qword ptr [rbp - 0x20], rax
0x4002c6:	mov	dword ptr [rbp - 0x18], 1
0x4002cd:	mov	dword ptr [rbp - 0x14], 2
0x4002d4:	mov	rax, qword ptr [rbp - 0x20]
0x4002d8:	mov	rdx, qword ptr [rbp - 0x18]
0x4002dc:	mov	qword ptr [rax], rdx
0x4002df:	mov	rax, qword ptr [rbp - 0x20]
0x4002e3:	mov	rax, qword ptr [rax]
0x4002e6:	mov	qword ptr [rbp - 0x10], rax
0x4002ea:	mov	eax, dword ptr [rbp - 0x10]
0x4002ed:	mov	edi, eax
0x4002ef:	call	0x500000
<Block for 0x400272, 5 bytes>
0x400272:	cmp	rsp, rdx
0x400275:	je	0x400289
<Block for 0x4002f4, 10 bytes>
0x4002f4:	mov	eax, dword ptr [rbp - 0xc]
0x4002f7:	mov	edi, eax
0x4002f9:	call	0x500000
