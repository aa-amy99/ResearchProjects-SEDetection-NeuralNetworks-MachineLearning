<Block for 0x400106, 37 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	sub	rsp, 0x20
0x400112:	mov	rax, qword ptr fs:[0x28]
0x40011b:	mov	qword ptr [rbp - 8], rax
0x40011f:	xor	eax, eax
0x400121:	mov	eax, 0
0x400126:	call	0x40000f
<Block for 0x40012b, 4 bytes>
0x40012b:	test	eax, eax
0x40012d:	je	0x400140
<Block for 0x400140, 54 bytes>
0x400140:	mov	eax, 0x10
0x400145:	sub	rax, 1
0x400149:	add	rax, 0x10
0x40014d:	mov	esi, 0x10
0x400152:	mov	edx, 0
0x400157:	div	rsi
0x40015a:	imul	rax, rax, 0x10
0x40015e:	mov	rdx, rax
0x400161:	and	rdx, 0xfffffffffffff000
0x400168:	mov	rcx, rsp
0x40016b:	sub	rcx, rdx
0x40016e:	mov	rdx, rcx
0x400171:	cmp	rsp, rdx
0x400174:	je	0x400188
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rdi, [rip + 0x1fe]
0x400136:	call	0x500010
<Block for 0x400188, 26 bytes>
0x400188:	mov	rdx, rax
0x40018b:	and	edx, 0xfff
0x400191:	sub	rsp, rdx
0x400194:	mov	rdx, rax
0x400197:	and	edx, 0xfff
0x40019d:	test	rdx, rdx
0x4001a0:	je	0x4001b2
<Block for 0x400176, 18 bytes>
0x400176:	sub	rsp, 0x1000
0x40017d:	or	qword ptr [rsp + 0xff8], 0
0x400186:	jmp	0x400171
<Block for 0x40013b, 5 bytes>
0x40013b:	jmp	0x4001fd
<Block for 0x4001b2, 65 bytes>
0x4001b2:	mov	rax, rsp
0x4001b5:	add	rax, 0xf
0x4001b9:	shr	rax, 4
0x4001bd:	shl	rax, 4
0x4001c1:	mov	qword ptr [rbp - 0x20], rax
0x4001c5:	mov	dword ptr [rbp - 0x18], 1
0x4001cc:	mov	dword ptr [rbp - 0x14], 2
0x4001d3:	mov	rax, qword ptr [rbp - 0x20]
0x4001d7:	mov	rdx, qword ptr [rbp - 0x18]
0x4001db:	mov	qword ptr [rax], rdx
0x4001de:	mov	rax, qword ptr [rbp - 0x20]
0x4001e2:	mov	rax, qword ptr [rax]
0x4001e5:	mov	qword ptr [rbp - 0x10], rax
0x4001e9:	mov	eax, dword ptr [rbp - 0x10]
0x4001ec:	mov	edi, eax
0x4001ee:	call	0x500000
<Block for 0x4001a2, 81 bytes>
0x4001a2:	and	eax, 0xfff
0x4001a7:	sub	rax, 8
0x4001ab:	add	rax, rsp
0x4001ae:	or	qword ptr [rax], 0
0x4001b2:	mov	rax, rsp
0x4001b5:	add	rax, 0xf
0x4001b9:	shr	rax, 4
0x4001bd:	shl	rax, 4
0x4001c1:	mov	qword ptr [rbp - 0x20], rax
0x4001c5:	mov	dword ptr [rbp - 0x18], 1
0x4001cc:	mov	dword ptr [rbp - 0x14], 2
0x4001d3:	mov	rax, qword ptr [rbp - 0x20]
0x4001d7:	mov	rdx, qword ptr [rbp - 0x18]
0x4001db:	mov	qword ptr [rax], rdx
0x4001de:	mov	rax, qword ptr [rbp - 0x20]
0x4001e2:	mov	rax, qword ptr [rax]
0x4001e5:	mov	qword ptr [rbp - 0x10], rax
0x4001e9:	mov	eax, dword ptr [rbp - 0x10]
0x4001ec:	mov	edi, eax
0x4001ee:	call	0x500000
<Block for 0x400171, 5 bytes>
0x400171:	cmp	rsp, rdx
0x400174:	je	0x400188
<Block for 0x4001fd, 16 bytes>
0x4001fd:	nop	
0x4001fe:	mov	rax, qword ptr [rbp - 8]
0x400202:	xor	rax, qword ptr fs:[0x28]
0x40020b:	je	0x400212
<Block for 0x4001f3, 10 bytes>
0x4001f3:	mov	eax, dword ptr [rbp - 0xc]
0x4001f6:	mov	edi, eax
0x4001f8:	call	0x500000
<Block for 0x400212, 2 bytes>
0x400212:	leave	
0x400213:	ret	
<Block for 0x40020d, 5 bytes>
0x40020d:	call	0x500008
