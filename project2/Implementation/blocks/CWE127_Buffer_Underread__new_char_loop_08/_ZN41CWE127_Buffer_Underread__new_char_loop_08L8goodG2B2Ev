<Block for 0x4001fc, 46 bytes>
0x4001fc:	endbr64	
0x400200:	push	rbp
0x400201:	mov	rbp, rsp
0x400204:	sub	rsp, 0x90
0x40020b:	mov	rax, qword ptr fs:[0x28]
0x400214:	mov	qword ptr [rbp - 8], rax
0x400218:	xor	eax, eax
0x40021a:	mov	qword ptr [rbp - 0x88], 0
0x400225:	call	0x400000
<Block for 0x40022a, 9 bytes>
0x40022a:	test	eax, eax
0x40022c:	setne	al
0x40022f:	test	al, al
0x400231:	je	0x40026d
<Block for 0x40026d, 22 bytes>
0x40026d:	lea	rax, [rbp - 0x70]
0x400271:	mov	edx, 0x63
0x400276:	mov	esi, 0x43
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500008
<Block for 0x400233, 10 bytes>
0x400233:	mov	edi, 0x64
0x400238:	call	0x500000
<Block for 0x400283, 19 bytes>
0x400283:	mov	byte ptr [rbp - 0xd], 0
0x400287:	mov	qword ptr [rbp - 0x80], 0
0x40028f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400294:	ja	0x4002bb
<Block for 0x40023d, 26 bytes>
0x40023d:	mov	qword ptr [rbp - 0x78], rax
0x400241:	mov	rax, qword ptr [rbp - 0x78]
0x400245:	mov	edx, 0x63
0x40024a:	mov	esi, 0x41
0x40024f:	mov	rdi, rax
0x400252:	call	0x500008
<Block for 0x400296, 37 bytes>
0x400296:	mov	rdx, qword ptr [rbp - 0x88]
0x40029d:	mov	rax, qword ptr [rbp - 0x80]
0x4002a1:	add	rax, rdx
0x4002a4:	movzx	eax, byte ptr [rax]
0x4002a7:	lea	rcx, [rbp - 0x70]
0x4002ab:	mov	rdx, qword ptr [rbp - 0x80]
0x4002af:	add	rdx, rcx
0x4002b2:	mov	byte ptr [rdx], al
0x4002b4:	add	qword ptr [rbp - 0x80], 1
0x4002b9:	jmp	0x40028f
<Block for 0x4002bb, 16 bytes>
0x4002bb:	mov	byte ptr [rbp - 0xd], 0
0x4002bf:	lea	rax, [rbp - 0x70]
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500010
<Block for 0x400257, 44 bytes>
0x400257:	mov	rax, qword ptr [rbp - 0x78]
0x40025b:	add	rax, 0x63
0x40025f:	mov	byte ptr [rax], 0
0x400262:	mov	rax, qword ptr [rbp - 0x78]
0x400266:	mov	qword ptr [rbp - 0x88], rax
0x40026d:	lea	rax, [rbp - 0x70]
0x400271:	mov	edx, 0x63
0x400276:	mov	esi, 0x43
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500008
<Block for 0x40028f, 7 bytes>
0x40028f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400294:	ja	0x4002bb
<Block for 0x4002cb, 16 bytes>
0x4002cb:	nop	
0x4002cc:	mov	rax, qword ptr [rbp - 8]
0x4002d0:	xor	rax, qword ptr fs:[0x28]
0x4002d9:	je	0x4002e0
<Block for 0x4002e0, 2 bytes>
0x4002e0:	leave	
0x4002e1:	ret	
<Block for 0x4002db, 5 bytes>
0x4002db:	call	0x500018
