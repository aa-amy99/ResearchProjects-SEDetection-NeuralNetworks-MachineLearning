<Block for 0x400307, 42 bytes>
0x400307:	endbr64	
0x40030b:	push	rbp
0x40030c:	mov	rbp, rsp
0x40030f:	sub	rsp, 0x30
0x400313:	mov	rax, qword ptr fs:[0x28]
0x40031c:	mov	qword ptr [rbp - 8], rax
0x400320:	xor	eax, eax
0x400322:	mov	eax, dword ptr [rip + 0x144]
0x400328:	cmp	eax, 5
0x40032b:	jne	0x400436
<Block for 0x400331, 34 bytes>
0x400331:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400338:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40033f:	mov	edx, 6
0x400344:	mov	esi, 1
0x400349:	mov	edi, 2
0x40034e:	call	0x500000
<Block for 0x400436, 16 bytes>
0x400436:	nop	
0x400437:	mov	rax, qword ptr [rbp - 8]
0x40043b:	xor	rax, qword ptr fs:[0x28]
0x400444:	je	0x40044b
<Block for 0x400353, 13 bytes>
0x400353:	mov	dword ptr [rbp - 0x24], eax
0x400356:	cmp	dword ptr [rbp - 0x24], -1
0x40035a:	je	0x40040c
<Block for 0x40044b, 2 bytes>
0x40044b:	leave	
0x40044c:	ret	
<Block for 0x400446, 5 bytes>
0x400446:	call	0x500060
<Block for 0x40040c, 3 bytes>
0x40040c:	nop	
0x40040d:	jmp	0x400416
<Block for 0x400360, 22 bytes>
0x400360:	lea	rax, [rbp - 0x20]
0x400364:	mov	edx, 0x10
0x400369:	mov	esi, 0
0x40036e:	mov	rdi, rax
0x400371:	call	0x500008
<Block for 0x400416, 6 bytes>
0x400416:	cmp	dword ptr [rbp - 0x24], -1
0x40041a:	je	0x400426
<Block for 0x400376, 23 bytes>
0x400376:	mov	word ptr [rbp - 0x20], 2
0x40037c:	mov	dword ptr [rbp - 0x1c], 0
0x400383:	mov	edi, 0x4e20
0x400388:	call	0x500010
<Block for 0x400426, 6 bytes>
0x400426:	cmp	dword ptr [rbp - 0x28], -1
0x40042a:	je	0x400436
<Block for 0x40041c, 10 bytes>
0x40041c:	mov	eax, dword ptr [rbp - 0x24]
0x40041f:	mov	edi, eax
0x400421:	call	0x500058
<Block for 0x40038d, 26 bytes>
0x40038d:	mov	word ptr [rbp - 0x1e], ax
0x400391:	lea	rcx, [rbp - 0x20]
0x400395:	mov	eax, dword ptr [rbp - 0x24]
0x400398:	mov	edx, 0x10
0x40039d:	mov	rsi, rcx
0x4003a0:	mov	edi, eax
0x4003a2:	call	0x500018
<Block for 0x40042c, 10 bytes>
0x40042c:	mov	eax, dword ptr [rbp - 0x28]
0x40042f:	mov	edi, eax
0x400431:	call	0x500058
<Block for 0x4003a7, 5 bytes>
0x4003a7:	cmp	eax, -1
0x4003aa:	je	0x40040f
<Block for 0x40040f, 3 bytes>
0x40040f:	nop	
0x400410:	jmp	0x400416
<Block for 0x4003ac, 15 bytes>
0x4003ac:	mov	eax, dword ptr [rbp - 0x24]
0x4003af:	mov	esi, 5
0x4003b4:	mov	edi, eax
0x4003b6:	call	0x500020
<Block for 0x4003bb, 5 bytes>
0x4003bb:	cmp	eax, -1
0x4003be:	je	0x400412
<Block for 0x400412, 3 bytes>
0x400412:	nop	
0x400413:	jmp	0x400416
<Block for 0x4003c0, 20 bytes>
0x4003c0:	mov	eax, dword ptr [rbp - 0x24]
0x4003c3:	mov	edx, 0
0x4003c8:	mov	esi, 0
0x4003cd:	mov	edi, eax
0x4003cf:	call	0x500028
<Block for 0x4003d4, 9 bytes>
0x4003d4:	mov	dword ptr [rbp - 0x28], eax
0x4003d7:	cmp	dword ptr [rbp - 0x28], -1
0x4003db:	je	0x400415
<Block for 0x4003dd, 27 bytes>
0x4003dd:	mov	eax, dword ptr [rbp - 0x28]
0x4003e0:	mov	ecx, 0
0x4003e5:	mov	edx, 8
0x4003ea:	lea	rsi, [rip + 0x9e]
0x4003f1:	mov	edi, eax
0x4003f3:	call	0x500048
<Block for 0x400415, 1 bytes>
0x400415:	nop	
<Block for 0x4003f8, 6 bytes>
0x4003f8:	cmp	rax, -1
0x4003fc:	jne	0x400416
<Block for 0x4003fe, 12 bytes>
0x4003fe:	lea	rdi, [rip + 0x93]
0x400405:	call	0x500050
<Block for 0x40040a, 2 bytes>
0x40040a:	jmp	0x400416
