<Block for 0x4001b4, 38 bytes>
0x4001b4:	endbr64	
0x4001b8:	push	rbp
0x4001b9:	mov	rbp, rsp
0x4001bc:	sub	rsp, 0x30
0x4001c0:	mov	rax, qword ptr fs:[0x28]
0x4001c9:	mov	qword ptr [rbp - 8], rax
0x4001cd:	xor	eax, eax
0x4001cf:	mov	eax, dword ptr [rip + 0x297]
0x4001d5:	cmp	eax, 5
0x4001d8:	je	0x4001eb
<Block for 0x4001eb, 34 bytes>
0x4001eb:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001f2:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001f9:	mov	edx, 6
0x4001fe:	mov	esi, 1
0x400203:	mov	edi, 2
0x400208:	call	0x500000
<Block for 0x4001da, 12 bytes>
0x4001da:	lea	rdi, [rip + 0x2c4]
0x4001e1:	call	0x500050
<Block for 0x40020d, 13 bytes>
0x40020d:	mov	dword ptr [rbp - 0x24], eax
0x400210:	cmp	dword ptr [rbp - 0x24], -1
0x400214:	je	0x4002c6
<Block for 0x4001e6, 5 bytes>
0x4001e6:	jmp	0x4002f0
<Block for 0x4002c6, 3 bytes>
0x4002c6:	nop	
0x4002c7:	jmp	0x4002d0
<Block for 0x40021a, 22 bytes>
0x40021a:	lea	rax, [rbp - 0x20]
0x40021e:	mov	edx, 0x10
0x400223:	mov	esi, 0
0x400228:	mov	rdi, rax
0x40022b:	call	0x500008
<Block for 0x4002f0, 16 bytes>
0x4002f0:	nop	
0x4002f1:	mov	rax, qword ptr [rbp - 8]
0x4002f5:	xor	rax, qword ptr fs:[0x28]
0x4002fe:	je	0x400305
<Block for 0x4002d0, 6 bytes>
0x4002d0:	cmp	dword ptr [rbp - 0x24], -1
0x4002d4:	je	0x4002e0
<Block for 0x400230, 23 bytes>
0x400230:	mov	word ptr [rbp - 0x20], 2
0x400236:	mov	dword ptr [rbp - 0x1c], 0
0x40023d:	mov	edi, 0x4e20
0x400242:	call	0x500010
<Block for 0x400305, 2 bytes>
0x400305:	leave	
0x400306:	ret	
<Block for 0x400300, 5 bytes>
0x400300:	call	0x500060
<Block for 0x4002e0, 6 bytes>
0x4002e0:	cmp	dword ptr [rbp - 0x28], -1
0x4002e4:	je	0x4002f0
<Block for 0x4002d6, 10 bytes>
0x4002d6:	mov	eax, dword ptr [rbp - 0x24]
0x4002d9:	mov	edi, eax
0x4002db:	call	0x500058
<Block for 0x400247, 26 bytes>
0x400247:	mov	word ptr [rbp - 0x1e], ax
0x40024b:	lea	rcx, [rbp - 0x20]
0x40024f:	mov	eax, dword ptr [rbp - 0x24]
0x400252:	mov	edx, 0x10
0x400257:	mov	rsi, rcx
0x40025a:	mov	edi, eax
0x40025c:	call	0x500018
<Block for 0x4002e6, 10 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x28]
0x4002e9:	mov	edi, eax
0x4002eb:	call	0x500058
<Block for 0x400261, 5 bytes>
0x400261:	cmp	eax, -1
0x400264:	je	0x4002c9
<Block for 0x4002c9, 3 bytes>
0x4002c9:	nop	
0x4002ca:	jmp	0x4002d0
<Block for 0x400266, 15 bytes>
0x400266:	mov	eax, dword ptr [rbp - 0x24]
0x400269:	mov	esi, 5
0x40026e:	mov	edi, eax
0x400270:	call	0x500020
<Block for 0x400275, 5 bytes>
0x400275:	cmp	eax, -1
0x400278:	je	0x4002cc
<Block for 0x4002cc, 3 bytes>
0x4002cc:	nop	
0x4002cd:	jmp	0x4002d0
<Block for 0x40027a, 20 bytes>
0x40027a:	mov	eax, dword ptr [rbp - 0x24]
0x40027d:	mov	edx, 0
0x400282:	mov	esi, 0
0x400287:	mov	edi, eax
0x400289:	call	0x500028
<Block for 0x40028e, 9 bytes>
0x40028e:	mov	dword ptr [rbp - 0x28], eax
0x400291:	cmp	dword ptr [rbp - 0x28], -1
0x400295:	je	0x4002cf
<Block for 0x400297, 27 bytes>
0x400297:	mov	eax, dword ptr [rbp - 0x28]
0x40029a:	mov	ecx, 0
0x40029f:	mov	edx, 8
0x4002a4:	lea	rsi, [rip + 0x1e4]
0x4002ab:	mov	edi, eax
0x4002ad:	call	0x500048
<Block for 0x4002cf, 1 bytes>
0x4002cf:	nop	
<Block for 0x4002b2, 6 bytes>
0x4002b2:	cmp	rax, -1
0x4002b6:	jne	0x4002d0
<Block for 0x4002b8, 12 bytes>
0x4002b8:	lea	rdi, [rip + 0x1d9]
0x4002bf:	call	0x500050
<Block for 0x4002c4, 2 bytes>
0x4002c4:	jmp	0x4002d0
