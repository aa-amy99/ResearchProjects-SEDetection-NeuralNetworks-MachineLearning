<Block for 0x400104, 59 bytes>
0x400104:	endbr64	
0x400108:	push	rbp
0x400109:	mov	rbp, rsp
0x40010c:	sub	rsp, 0x90
0x400113:	mov	qword ptr [rbp - 0x88], rdi
0x40011a:	mov	rax, qword ptr fs:[0x28]
0x400123:	mov	qword ptr [rbp - 8], rax
0x400127:	xor	eax, eax
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x43
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x40013f, 19 bytes>
0x40013f:	mov	byte ptr [rbp - 0xd], 0
0x400143:	mov	qword ptr [rbp - 0x78], 0
0x40014b:	cmp	qword ptr [rbp - 0x78], 0x63
0x400150:	ja	0x400177
<Block for 0x400152, 37 bytes>
0x400152:	mov	rdx, qword ptr [rbp - 0x88]
0x400159:	mov	rax, qword ptr [rbp - 0x78]
0x40015d:	add	rax, rdx
0x400160:	movzx	eax, byte ptr [rax]
0x400163:	lea	rcx, [rbp - 0x70]
0x400167:	mov	rdx, qword ptr [rbp - 0x78]
0x40016b:	add	rdx, rcx
0x40016e:	mov	byte ptr [rdx], al
0x400170:	add	qword ptr [rbp - 0x78], 1
0x400175:	jmp	0x40014b
<Block for 0x400177, 16 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	rdi, rax
0x400182:	call	0x500008
<Block for 0x40014b, 7 bytes>
0x40014b:	cmp	qword ptr [rbp - 0x78], 0x63
0x400150:	ja	0x400177
<Block for 0x400187, 16 bytes>
0x400187:	nop	
0x400188:	mov	rax, qword ptr [rbp - 8]
0x40018c:	xor	rax, qword ptr fs:[0x28]
0x400195:	je	0x40019c
<Block for 0x40019c, 2 bytes>
0x40019c:	leave	
0x40019d:	ret	
<Block for 0x400197, 5 bytes>
0x400197:	call	0x500010
