<Block for 0x400065, 40 bytes>
0x400065:	endbr64	
0x400069:	push	rbp
0x40006a:	mov	rbp, rsp
0x40006d:	sub	rsp, 0x30
0x400071:	mov	rax, qword ptr fs:[0x28]
0x40007a:	mov	qword ptr [rbp - 8], rax
0x40007e:	xor	eax, eax
0x400080:	mov	dword ptr [rbp - 0x24], 0
0x400087:	cmp	dword ptr [rbp - 0x24], 0
0x40008b:	jg	0x4000ef
<Block for 0x40008d, 24 bytes>
0x40008d:	mov	dword ptr [rbp - 0x18], 1
0x400094:	mov	dword ptr [rbp - 0x14], 2
0x40009b:	mov	edi, 8
0x4000a0:	call	0x500000
<Block for 0x4000ef, 16 bytes>
0x4000ef:	nop	
0x4000f0:	mov	rax, qword ptr [rbp - 8]
0x4000f4:	xor	rax, qword ptr fs:[0x28]
0x4000fd:	je	0x400104
<Block for 0x4000a5, 36 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x20], rax
0x4000a9:	mov	rax, qword ptr [rbp - 0x20]
0x4000ad:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b1:	mov	qword ptr [rax], rdx
0x4000b4:	mov	rax, qword ptr [rbp - 0x20]
0x4000b8:	mov	rax, qword ptr [rax]
0x4000bb:	mov	qword ptr [rbp - 0x10], rax
0x4000bf:	mov	eax, dword ptr [rbp - 0x10]
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500010
<Block for 0x400104, 2 bytes>
0x400104:	leave	
0x400105:	ret	
<Block for 0x4000ff, 5 bytes>
0x4000ff:	call	0x500018
<Block for 0x4000c9, 10 bytes>
0x4000c9:	mov	eax, dword ptr [rbp - 0xc]
0x4000cc:	mov	edi, eax
0x4000ce:	call	0x500010
<Block for 0x4000d3, 9 bytes>
0x4000d3:	mov	rax, qword ptr [rbp - 0x20]
0x4000d7:	test	rax, rax
0x4000da:	je	0x4000e9
<Block for 0x4000e9, 6 bytes>
0x4000e9:	add	dword ptr [rbp - 0x24], 1
0x4000ed:	jmp	0x400087
<Block for 0x4000dc, 13 bytes>
0x4000dc:	mov	esi, 8
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500008
<Block for 0x400087, 6 bytes>
0x400087:	cmp	dword ptr [rbp - 0x24], 0
0x40008b:	jg	0x4000ef
