<Block for 0x4000aa, 45 bytes>
0x4000aa:	endbr64	
0x4000ae:	push	rbp
0x4000af:	mov	rbp, rsp
0x4000b2:	sub	rsp, 0x20
0x4000b6:	mov	rax, qword ptr fs:[0x28]
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	xor	eax, eax
0x4000c5:	mov	qword ptr [rbp - 0x18], 0
0x4000cd:	mov	edi, 0x320
0x4000d2:	call	0x500000
<Block for 0x4000d7, 19 bytes>
0x4000d7:	mov	qword ptr [rbp - 0x18], rax
0x4000db:	mov	qword ptr [rbp - 0x10], 0
0x4000e3:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000e8:	ja	0x40011c
<Block for 0x4000ea, 50 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 0x18]
0x4000ee:	mov	rdx, qword ptr [rbp - 0x10]
0x4000f2:	shl	rdx, 3
0x4000f6:	add	rax, rdx
0x4000f9:	mov	dword ptr [rax], 1
0x4000ff:	mov	rax, qword ptr [rbp - 0x18]
0x400103:	mov	rdx, qword ptr [rbp - 0x10]
0x400107:	shl	rdx, 3
0x40010b:	add	rax, rdx
0x40010e:	mov	dword ptr [rax + 4], 2
0x400115:	add	qword ptr [rbp - 0x10], 1
0x40011a:	jmp	0x4000e3
<Block for 0x40011c, 12 bytes>
0x40011c:	lea	rax, [rbp - 0x18]
0x400120:	mov	rdi, rax
0x400123:	call	0x500020
<Block for 0x4000e3, 7 bytes>
0x4000e3:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000e8:	ja	0x40011c
<Block for 0x400128, 16 bytes>
0x400128:	nop	
0x400129:	mov	rax, qword ptr [rbp - 8]
0x40012d:	xor	rax, qword ptr fs:[0x28]
0x400136:	je	0x40013d
<Block for 0x40013d, 2 bytes>
0x40013d:	leave	
0x40013e:	ret	
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500018
