<Block for 0x400148, 53 bytes>
0x400148:	endbr64	
0x40014c:	push	rbp
0x40014d:	mov	rbp, rsp
0x400150:	push	rbx
0x400151:	sub	rsp, 0x88
0x400158:	mov	rax, qword ptr fs:[0x28]
0x400161:	mov	qword ptr [rbp - 0x18], rax
0x400165:	xor	eax, eax
0x400167:	mov	qword ptr [rbp - 0x90], 0
0x400172:	mov	eax, dword ptr [rip + 0x288]
0x400178:	cmp	eax, 5
0x40017b:	je	0x40018b
<Block for 0x40018b, 10 bytes>
0x40018b:	mov	edi, 0x64
0x400190:	call	0x500000
<Block for 0x40017d, 12 bytes>
0x40017d:	lea	rdi, [rip + 0x280]
0x400184:	call	0x500018
<Block for 0x400195, 17 bytes>
0x400195:	mov	qword ptr [rbp - 0x88], rax
0x40019c:	cmp	qword ptr [rbp - 0x88], 0
0x4001a4:	jne	0x4001b0
<Block for 0x400189, 2 bytes>
0x400189:	jmp	0x4001e5
<Block for 0x4001a6, 10 bytes>
0x4001a6:	mov	edi, 0xffffffff
0x4001ab:	call	0x500008
<Block for 0x4001b0, 25 bytes>
0x4001b0:	mov	rax, qword ptr [rbp - 0x88]
0x4001b7:	mov	edx, 0x63
0x4001bc:	mov	esi, 0x41
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500010
<Block for 0x4001e5, 22 bytes>
0x4001e5:	lea	rax, [rbp - 0x80]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x43
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500010
<Block for 0x4001c9, 50 bytes>
0x4001c9:	mov	rax, qword ptr [rbp - 0x88]
0x4001d0:	add	rax, 0x63
0x4001d4:	mov	byte ptr [rax], 0
0x4001d7:	mov	rax, qword ptr [rbp - 0x88]
0x4001de:	mov	qword ptr [rbp - 0x90], rax
0x4001e5:	lea	rax, [rbp - 0x80]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x43
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500010
<Block for 0x4001fb, 128 bytes>
0x4001fb:	mov	byte ptr [rbp - 0x1d], 0
0x4001ff:	mov	rax, qword ptr [rbp - 0x90]
0x400206:	mov	rcx, qword ptr [rax]
0x400209:	mov	rbx, qword ptr [rax + 8]
0x40020d:	mov	qword ptr [rbp - 0x80], rcx
0x400211:	mov	qword ptr [rbp - 0x78], rbx
0x400215:	mov	rcx, qword ptr [rax + 0x10]
0x400219:	mov	rbx, qword ptr [rax + 0x18]
0x40021d:	mov	qword ptr [rbp - 0x70], rcx
0x400221:	mov	qword ptr [rbp - 0x68], rbx
0x400225:	mov	rcx, qword ptr [rax + 0x20]
0x400229:	mov	rbx, qword ptr [rax + 0x28]
0x40022d:	mov	qword ptr [rbp - 0x60], rcx
0x400231:	mov	qword ptr [rbp - 0x58], rbx
0x400235:	mov	rcx, qword ptr [rax + 0x30]
0x400239:	mov	rbx, qword ptr [rax + 0x38]
0x40023d:	mov	qword ptr [rbp - 0x50], rcx
0x400241:	mov	qword ptr [rbp - 0x48], rbx
0x400245:	mov	rcx, qword ptr [rax + 0x40]
0x400249:	mov	rbx, qword ptr [rax + 0x48]
0x40024d:	mov	qword ptr [rbp - 0x40], rcx
0x400251:	mov	qword ptr [rbp - 0x38], rbx
0x400255:	mov	rcx, qword ptr [rax + 0x50]
0x400259:	mov	rbx, qword ptr [rax + 0x58]
0x40025d:	mov	qword ptr [rbp - 0x30], rcx
0x400261:	mov	qword ptr [rbp - 0x28], rbx
0x400265:	mov	eax, dword ptr [rax + 0x60]
0x400268:	mov	dword ptr [rbp - 0x20], eax
0x40026b:	mov	byte ptr [rbp - 0x1d], 0
0x40026f:	lea	rax, [rbp - 0x80]
0x400273:	mov	rdi, rax
0x400276:	call	0x500018
<Block for 0x40027b, 16 bytes>
0x40027b:	nop	
0x40027c:	mov	rax, qword ptr [rbp - 0x18]
0x400280:	xor	rax, qword ptr fs:[0x28]
0x400289:	je	0x400290
<Block for 0x400290, 10 bytes>
0x400290:	add	rsp, 0x88
0x400297:	pop	rbx
0x400298:	pop	rbp
0x400299:	ret	
<Block for 0x40028b, 5 bytes>
0x40028b:	call	0x500020
