<Block for 0x400265, 40 bytes>
0x400265:	endbr64	
0x400269:	push	rbp
0x40026a:	mov	rbp, rsp
0x40026d:	push	rbx
0x40026e:	sub	rsp, 0x58
0x400272:	mov	rax, qword ptr fs:[0x28]
0x40027b:	mov	qword ptr [rbp - 0x18], rax
0x40027f:	xor	eax, eax
0x400281:	lea	rax, [rbp - 0x50]
0x400285:	mov	rdi, rax
0x400288:	call	0x40041a
<Block for 0x40028d, 33 bytes>
0x40028d:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400294:	mov	dword ptr [rbp - 0x54], 0x14
0x40029b:	lea	rdx, [rbp - 0x54]
0x40029f:	lea	rax, [rbp - 0x50]
0x4002a3:	mov	rsi, rdx
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x400512
<Block for 0x4002ae, 19 bytes>
0x4002ae:	lea	rdx, [rbp - 0x54]
0x4002b2:	lea	rax, [rbp - 0x50]
0x4002b6:	mov	rsi, rdx
0x4002b9:	mov	rdi, rax
0x4002bc:	call	0x400512
<Block for 0x4002c1, 19 bytes>
0x4002c1:	lea	rdx, [rbp - 0x54]
0x4002c5:	lea	rax, [rbp - 0x50]
0x4002c9:	mov	rsi, rdx
0x4002cc:	mov	rdi, rax
0x4002cf:	call	0x400512
<Block for 0x4002d4, 19 bytes>
0x4002d4:	lea	rdx, [rbp - 0x50]
0x4002d8:	lea	rax, [rbp - 0x30]
0x4002dc:	mov	rsi, rdx
0x4002df:	mov	rdi, rax
0x4002e2:	call	0x40054c
<Block for 0x4002e7, 12 bytes>
0x4002e7:	lea	rax, [rbp - 0x30]
0x4002eb:	mov	rdi, rax
0x4002ee:	call	0x500060
<Block for 0x4002f3, 12 bytes>
0x4002f3:	lea	rax, [rbp - 0x30]
0x4002f7:	mov	rdi, rax
0x4002fa:	call	0x40043a
<Block for 0x4002ff, 12 bytes>
0x4002ff:	lea	rax, [rbp - 0x50]
0x400303:	mov	rdi, rax
0x400306:	call	0x40043a
<Block for 0x40030b, 16 bytes>
0x40030b:	nop	
0x40030c:	mov	rax, qword ptr [rbp - 0x18]
0x400310:	xor	rax, qword ptr fs:[0x28]
0x400319:	je	0x400355
<Block for 0x400355, 7 bytes>
0x400355:	add	rsp, 0x58
0x400359:	pop	rbx
0x40035a:	pop	rbp
0x40035b:	ret	
<Block for 0x40031b, 2 bytes>
0x40031b:	jmp	0x400350
<Block for 0x400350, 5 bytes>
0x400350:	call	0x500058
