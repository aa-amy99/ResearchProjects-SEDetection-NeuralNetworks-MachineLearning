<Block for 0x400244, 104 bytes>
0x400244:	endbr64	
0x400248:	push	rbp
0x400249:	mov	rbp, rsp
0x40024c:	sub	rsp, 0x30
0x400250:	mov	rax, qword ptr fs:[0x28]
0x400259:	mov	qword ptr [rbp - 8], rax
0x40025d:	xor	eax, eax
0x40025f:	lea	rax, [rbp - 0x20]
0x400263:	mov	qword ptr [rbp - 0x20], rax
0x400267:	lea	rax, [rbp - 0x20]
0x40026b:	mov	qword ptr [rbp - 0x18], rax
0x40026f:	mov	rax, qword ptr [rbp - 0x20]
0x400273:	mov	qword ptr [rbp - 0x30], rax
0x400277:	mov	rax, qword ptr [rbp - 0x18]
0x40027b:	mov	qword ptr [rbp - 0x28], rax
0x40027f:	lea	rax, [rbp - 0x30]
0x400283:	mov	qword ptr [rbp - 0x20], rax
0x400287:	lea	rax, [rbp - 0x30]
0x40028b:	mov	qword ptr [rbp - 0x18], rax
0x40028f:	mov	dword ptr [rip + 0xa7], 1
0x400299:	mov	rdx, qword ptr [rbp - 0x30]
0x40029d:	mov	rax, qword ptr [rbp - 0x28]
0x4002a1:	mov	rdi, rdx
0x4002a4:	mov	rsi, rax
0x4002a7:	call	0x400221
<Block for 0x4002ac, 81 bytes>
0x4002ac:	mov	qword ptr [rbp - 0x30], rax
0x4002b0:	mov	qword ptr [rbp - 0x28], rdx
0x4002b4:	mov	rax, qword ptr [rbp - 0x28]
0x4002b8:	mov	qword ptr [rip + 0x69], rax
0x4002bf:	mov	rax, qword ptr [rbp - 0x30]
0x4002c3:	mov	qword ptr [rip + 0x66], rax
0x4002ca:	mov	rax, qword ptr [rip + 0x57]
0x4002d1:	mov	rdx, qword ptr [rip + 0x58]
0x4002d8:	mov	qword ptr [rax], rdx
0x4002db:	mov	rax, qword ptr [rip + 0x4e]
0x4002e2:	mov	rdx, qword ptr [rip + 0x3f]
0x4002e9:	mov	qword ptr [rax + 8], rdx
0x4002ed:	nop	
0x4002ee:	mov	rax, qword ptr [rbp - 8]
0x4002f2:	xor	rax, qword ptr fs:[0x28]
0x4002fb:	je	0x400302
<Block for 0x400302, 2 bytes>
0x400302:	leave	
0x400303:	ret	
<Block for 0x4002fd, 5 bytes>
0x4002fd:	call	0x500020
