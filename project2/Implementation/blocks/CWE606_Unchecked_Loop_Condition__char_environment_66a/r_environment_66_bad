<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0xb8], rax
0x400090:	mov	rax, qword ptr [rbp - 0xb8]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 19 bytes>
0x40009f:	mov	qword ptr [rbp - 0xb0], rax
0x4000a6:	lea	rdi, [rip + 0x298]
0x4000ad:	call	0x500008
<Block for 0x4000b2, 17 bytes>
0x4000b2:	mov	qword ptr [rbp - 0xa8], rax
0x4000b9:	cmp	qword ptr [rbp - 0xa8], 0
0x4000c1:	je	0x4000f5
<Block for 0x4000f5, 29 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 0xb8]
0x4000fc:	mov	qword ptr [rbp - 0x90], rax
0x400103:	lea	rax, [rbp - 0xa0]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500018
<Block for 0x4000c3, 50 bytes>
0x4000c3:	mov	eax, 0x63
0x4000c8:	sub	rax, qword ptr [rbp - 0xb0]
0x4000cf:	mov	rdx, rax
0x4000d2:	mov	rcx, qword ptr [rbp - 0xb8]
0x4000d9:	mov	rax, qword ptr [rbp - 0xb0]
0x4000e0:	add	rcx, rax
0x4000e3:	mov	rax, qword ptr [rbp - 0xa8]
0x4000ea:	mov	rsi, rax
0x4000ed:	mov	rdi, rcx
0x4000f0:	call	0x500010
<Block for 0x400112, 16 bytes>
0x400112:	nop	
0x400113:	mov	rax, qword ptr [rbp - 8]
0x400117:	xor	rax, qword ptr fs:[0x28]
0x400120:	je	0x400127
<Block for 0x400127, 2 bytes>
0x400127:	leave	
0x400128:	ret	
<Block for 0x400122, 5 bytes>
0x400122:	call	0x500020
