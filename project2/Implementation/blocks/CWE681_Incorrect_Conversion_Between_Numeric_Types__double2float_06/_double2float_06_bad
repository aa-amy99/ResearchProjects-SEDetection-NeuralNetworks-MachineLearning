<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 5
0x400023:	cmp	eax, 5
0x400026:	jne	0x40008a
<Block for 0x400028, 39 bytes>
0x400028:	pxor	xmm0, xmm0
0x40002c:	movsd	qword ptr [rbp - 0x118], xmm0
0x400034:	mov	rdx, qword ptr [rip + 0xfffc5]
0x40003b:	lea	rax, [rbp - 0x110]
0x400042:	mov	esi, 0x100
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x40004f, 5 bytes>
0x40004f:	test	rax, rax
0x400052:	je	0x400071
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500028
<Block for 0x400071, 12 bytes>
0x400071:	lea	rdi, [rip + 0x20c]
0x400078:	call	0x500018
<Block for 0x400054, 15 bytes>
0x400054:	lea	rax, [rbp - 0x110]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
<Block for 0x40007d, 13 bytes>
0x40007d:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x400085:	call	0x500020
<Block for 0x400063, 14 bytes>
0x400063:	movq	rax, xmm0
0x400068:	mov	qword ptr [rbp - 0x118], rax
0x40006f:	jmp	0x40007d
