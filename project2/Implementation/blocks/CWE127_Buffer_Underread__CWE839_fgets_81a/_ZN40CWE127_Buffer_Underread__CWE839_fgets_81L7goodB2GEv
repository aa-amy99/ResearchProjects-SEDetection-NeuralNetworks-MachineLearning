<Block for 0x400123, 79 bytes>
0x400123:	endbr64	
0x400127:	push	rbp
0x400128:	mov	rbp, rsp
0x40012b:	sub	rsp, 0x30
0x40012f:	mov	rax, qword ptr fs:[0x28]
0x400138:	mov	qword ptr [rbp - 8], rax
0x40013c:	xor	eax, eax
0x40013e:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400145:	mov	qword ptr [rbp - 0x16], 0
0x40014d:	mov	dword ptr [rbp - 0xe], 0
0x400154:	mov	word ptr [rbp - 0xa], 0
0x40015a:	mov	rdx, qword ptr [rip + 0xffe9f]
0x400161:	lea	rax, [rbp - 0x16]
0x400165:	mov	esi, 0xe
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500008
<Block for 0x400172, 10 bytes>
0x400172:	test	rax, rax
0x400175:	setne	al
0x400178:	test	al, al
0x40017a:	je	0x40018d
<Block for 0x40018d, 12 bytes>
0x40018d:	lea	rdi, [rip + 0x5c]
0x400194:	call	0x500018
<Block for 0x40017c, 12 bytes>
0x40017c:	lea	rax, [rbp - 0x16]
0x400180:	mov	rdi, rax
0x400183:	call	0x500010
<Block for 0x400199, 43 bytes>
0x400199:	lea	rax, [rip + 0xffea8]
0x4001a0:	mov	qword ptr [rbp - 0x28], rax
0x4001a4:	lea	rax, [rbp - 0x28]
0x4001a8:	mov	qword ptr [rbp - 0x20], rax
0x4001ac:	mov	rax, qword ptr [rbp - 0x20]
0x4001b0:	mov	rax, qword ptr [rax]
0x4001b3:	mov	rcx, qword ptr [rax]
0x4001b6:	mov	edx, dword ptr [rbp - 0x2c]
0x4001b9:	mov	rax, qword ptr [rbp - 0x20]
0x4001bd:	mov	esi, edx
0x4001bf:	mov	rdi, rax
0x4001c2:	call	rcx
<Block for 0x400188, 5 bytes>
0x400188:	mov	dword ptr [rbp - 0x2c], eax
0x40018b:	jmp	0x400199
<Block for 0x4001c4, 16 bytes>
0x4001c4:	nop	
0x4001c5:	mov	rax, qword ptr [rbp - 8]
0x4001c9:	xor	rax, qword ptr fs:[0x28]
0x4001d2:	je	0x4001d9
<Block for 0x4001d9, 2 bytes>
0x4001d9:	leave	
0x4001da:	ret	
<Block for 0x4001d4, 5 bytes>
0x4001d4:	call	0x500028
