<Block for 0x400354, 41 bytes>
0x400354:	endbr64	
0x400358:	push	rbp
0x400359:	mov	rbp, rsp
0x40035c:	sub	rsp, 0x30
0x400360:	mov	qword ptr [rbp - 0x28], rdi
0x400364:	mov	rax, qword ptr fs:[0x28]
0x40036d:	mov	qword ptr [rbp - 8], rax
0x400371:	xor	eax, eax
0x400373:	mov	eax, dword ptr [rip + 0x303]
0x400379:	test	eax, eax
0x40037b:	je	0x4003d2
<Block for 0x4003d2, 16 bytes>
0x4003d2:	nop	
0x4003d3:	mov	rax, qword ptr [rbp - 8]
0x4003d7:	xor	rax, qword ptr fs:[0x28]
0x4003e0:	je	0x4003e7
<Block for 0x40037d, 28 bytes>
0x40037d:	lea	rdx, [rbp - 0x14]
0x400381:	mov	rax, qword ptr [rbp - 0x28]
0x400385:	lea	rsi, [rip + 0x2f8]
0x40038c:	mov	rdi, rax
0x40038f:	mov	eax, 0
0x400394:	call	0x500000
<Block for 0x4003e7, 2 bytes>
0x4003e7:	leave	
0x4003e8:	ret	
<Block for 0x4003e2, 5 bytes>
0x4003e2:	call	0x500010
<Block for 0x400399, 5 bytes>
0x400399:	cmp	eax, 1
0x40039c:	jne	0x4003d2
<Block for 0x40039e, 10 bytes>
0x40039e:	mov	eax, dword ptr [rbp - 0x14]
0x4003a1:	cmp	eax, 0x270f
0x4003a6:	jg	0x4003d2
<Block for 0x4003a8, 16 bytes>
0x4003a8:	mov	dword ptr [rbp - 0xc], 0
0x4003af:	mov	dword ptr [rbp - 0x10], 0
0x4003b6:	jmp	0x4003c0
<Block for 0x4003c0, 8 bytes>
0x4003c0:	mov	eax, dword ptr [rbp - 0x14]
0x4003c3:	cmp	dword ptr [rbp - 0x10], eax
0x4003c6:	jl	0x4003b8
<Block for 0x4003b8, 16 bytes>
0x4003b8:	add	dword ptr [rbp - 0xc], 1
0x4003bc:	add	dword ptr [rbp - 0x10], 1
0x4003c0:	mov	eax, dword ptr [rbp - 0x14]
0x4003c3:	cmp	dword ptr [rbp - 0x10], eax
0x4003c6:	jl	0x4003b8
<Block for 0x4003c8, 10 bytes>
0x4003c8:	mov	eax, dword ptr [rbp - 0xc]
0x4003cb:	mov	edi, eax
0x4003cd:	call	0x500008
