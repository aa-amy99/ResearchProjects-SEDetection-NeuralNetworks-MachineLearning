<Block for 0x40019e, 41 bytes>
0x40019e:	endbr64	
0x4001a2:	push	rbp
0x4001a3:	mov	rbp, rsp
0x4001a6:	sub	rsp, 0x30
0x4001aa:	mov	qword ptr [rbp - 0x28], rdi
0x4001ae:	mov	rax, qword ptr fs:[0x28]
0x4001b7:	mov	qword ptr [rbp - 8], rax
0x4001bb:	xor	eax, eax
0x4001bd:	mov	eax, dword ptr [rip + 0x4b5]
0x4001c3:	test	eax, eax
0x4001c5:	je	0x4001d5
<Block for 0x4001d5, 28 bytes>
0x4001d5:	lea	rdx, [rbp - 0x14]
0x4001d9:	mov	rax, qword ptr [rbp - 0x28]
0x4001dd:	lea	rsi, [rip + 0x4a0]
0x4001e4:	mov	rdi, rax
0x4001e7:	mov	eax, 0
0x4001ec:	call	0x500000
<Block for 0x4001c7, 12 bytes>
0x4001c7:	lea	rdi, [rip + 0x4bd]
0x4001ce:	call	0x500030
<Block for 0x4001f1, 5 bytes>
0x4001f1:	cmp	eax, 1
0x4001f4:	jne	0x40022a
<Block for 0x4001d3, 2 bytes>
0x4001d3:	jmp	0x40022a
<Block for 0x4001f6, 10 bytes>
0x4001f6:	mov	eax, dword ptr [rbp - 0x14]
0x4001f9:	cmp	eax, 0x270f
0x4001fe:	jg	0x40022a
<Block for 0x40022a, 16 bytes>
0x40022a:	nop	
0x40022b:	mov	rax, qword ptr [rbp - 8]
0x40022f:	xor	rax, qword ptr fs:[0x28]
0x400238:	je	0x40023f
<Block for 0x400200, 16 bytes>
0x400200:	mov	dword ptr [rbp - 0xc], 0
0x400207:	mov	dword ptr [rbp - 0x10], 0
0x40020e:	jmp	0x400218
<Block for 0x40023f, 2 bytes>
0x40023f:	leave	
0x400240:	ret	
<Block for 0x40023a, 5 bytes>
0x40023a:	call	0x500010
<Block for 0x400218, 8 bytes>
0x400218:	mov	eax, dword ptr [rbp - 0x14]
0x40021b:	cmp	dword ptr [rbp - 0x10], eax
0x40021e:	jl	0x400210
<Block for 0x400210, 16 bytes>
0x400210:	add	dword ptr [rbp - 0xc], 1
0x400214:	add	dword ptr [rbp - 0x10], 1
0x400218:	mov	eax, dword ptr [rbp - 0x14]
0x40021b:	cmp	dword ptr [rbp - 0x10], eax
0x40021e:	jl	0x400210
<Block for 0x400220, 10 bytes>
0x400220:	mov	eax, dword ptr [rbp - 0xc]
0x400223:	mov	edi, eax
0x400225:	call	0x500008
