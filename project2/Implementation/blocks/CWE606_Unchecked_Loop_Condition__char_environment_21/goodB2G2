<Block for 0x4003e9, 159 bytes>
0x4003e9:	endbr64	
0x4003ed:	push	rbp
0x4003ee:	mov	rbp, rsp
0x4003f1:	sub	rsp, 0x90
0x4003f8:	mov	rax, qword ptr fs:[0x28]
0x400401:	mov	qword ptr [rbp - 8], rax
0x400405:	xor	eax, eax
0x400407:	mov	qword ptr [rbp - 0x70], 0
0x40040f:	mov	qword ptr [rbp - 0x68], 0
0x400417:	mov	qword ptr [rbp - 0x60], 0
0x40041f:	mov	qword ptr [rbp - 0x58], 0
0x400427:	mov	qword ptr [rbp - 0x50], 0
0x40042f:	mov	qword ptr [rbp - 0x48], 0
0x400437:	mov	qword ptr [rbp - 0x40], 0
0x40043f:	mov	qword ptr [rbp - 0x38], 0
0x400447:	mov	qword ptr [rbp - 0x30], 0
0x40044f:	mov	qword ptr [rbp - 0x28], 0
0x400457:	mov	qword ptr [rbp - 0x20], 0
0x40045f:	mov	qword ptr [rbp - 0x18], 0
0x400467:	mov	dword ptr [rbp - 0x10], 0
0x40046e:	lea	rax, [rbp - 0x70]
0x400472:	mov	qword ptr [rbp - 0x88], rax
0x400479:	mov	rax, qword ptr [rbp - 0x88]
0x400480:	mov	rdi, rax
0x400483:	call	0x500018
<Block for 0x400488, 16 bytes>
0x400488:	mov	qword ptr [rbp - 0x80], rax
0x40048c:	lea	rdi, [rip + 0x1f4]
0x400493:	call	0x500020
<Block for 0x400498, 11 bytes>
0x400498:	mov	qword ptr [rbp - 0x78], rax
0x40049c:	cmp	qword ptr [rbp - 0x78], 0
0x4004a1:	je	0x4004cc
<Block for 0x4004cc, 25 bytes>
0x4004cc:	mov	dword ptr [rip + 0x1a6], 1
0x4004d6:	mov	rax, qword ptr [rbp - 0x88]
0x4004dd:	mov	rdi, rax
0x4004e0:	call	0x400354
<Block for 0x4004a3, 41 bytes>
0x4004a3:	mov	eax, 0x63
0x4004a8:	sub	rax, qword ptr [rbp - 0x80]
0x4004ac:	mov	rdx, rax
0x4004af:	mov	rcx, qword ptr [rbp - 0x88]
0x4004b6:	mov	rax, qword ptr [rbp - 0x80]
0x4004ba:	add	rcx, rax
0x4004bd:	mov	rax, qword ptr [rbp - 0x78]
0x4004c1:	mov	rsi, rax
0x4004c4:	mov	rdi, rcx
0x4004c7:	call	0x500028
<Block for 0x4004e5, 16 bytes>
0x4004e5:	nop	
0x4004e6:	mov	rax, qword ptr [rbp - 8]
0x4004ea:	xor	rax, qword ptr fs:[0x28]
0x4004f3:	je	0x4004fa
<Block for 0x4004fa, 2 bytes>
0x4004fa:	leave	
0x4004fb:	ret	
<Block for 0x4004f5, 5 bytes>
0x4004f5:	call	0x500010
