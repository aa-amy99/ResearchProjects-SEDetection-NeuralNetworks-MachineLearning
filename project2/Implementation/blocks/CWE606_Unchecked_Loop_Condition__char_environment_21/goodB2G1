<Block for 0x400241, 159 bytes>
0x400241:	endbr64	
0x400245:	push	rbp
0x400246:	mov	rbp, rsp
0x400249:	sub	rsp, 0x90
0x400250:	mov	rax, qword ptr fs:[0x28]
0x400259:	mov	qword ptr [rbp - 8], rax
0x40025d:	xor	eax, eax
0x40025f:	mov	qword ptr [rbp - 0x70], 0
0x400267:	mov	qword ptr [rbp - 0x68], 0
0x40026f:	mov	qword ptr [rbp - 0x60], 0
0x400277:	mov	qword ptr [rbp - 0x58], 0
0x40027f:	mov	qword ptr [rbp - 0x50], 0
0x400287:	mov	qword ptr [rbp - 0x48], 0
0x40028f:	mov	qword ptr [rbp - 0x40], 0
0x400297:	mov	qword ptr [rbp - 0x38], 0
0x40029f:	mov	qword ptr [rbp - 0x30], 0
0x4002a7:	mov	qword ptr [rbp - 0x28], 0
0x4002af:	mov	qword ptr [rbp - 0x20], 0
0x4002b7:	mov	qword ptr [rbp - 0x18], 0
0x4002bf:	mov	dword ptr [rbp - 0x10], 0
0x4002c6:	lea	rax, [rbp - 0x70]
0x4002ca:	mov	qword ptr [rbp - 0x88], rax
0x4002d1:	mov	rax, qword ptr [rbp - 0x88]
0x4002d8:	mov	rdi, rax
0x4002db:	call	0x500018
<Block for 0x4002e0, 16 bytes>
0x4002e0:	mov	qword ptr [rbp - 0x80], rax
0x4002e4:	lea	rdi, [rip + 0x39c]
0x4002eb:	call	0x500020
<Block for 0x4002f0, 11 bytes>
0x4002f0:	mov	qword ptr [rbp - 0x78], rax
0x4002f4:	cmp	qword ptr [rbp - 0x78], 0
0x4002f9:	je	0x400324
<Block for 0x400324, 25 bytes>
0x400324:	mov	dword ptr [rip + 0x34a], 0
0x40032e:	mov	rax, qword ptr [rbp - 0x88]
0x400335:	mov	rdi, rax
0x400338:	call	0x40019e
<Block for 0x4002fb, 41 bytes>
0x4002fb:	mov	eax, 0x63
0x400300:	sub	rax, qword ptr [rbp - 0x80]
0x400304:	mov	rdx, rax
0x400307:	mov	rcx, qword ptr [rbp - 0x88]
0x40030e:	mov	rax, qword ptr [rbp - 0x80]
0x400312:	add	rcx, rax
0x400315:	mov	rax, qword ptr [rbp - 0x78]
0x400319:	mov	rsi, rax
0x40031c:	mov	rdi, rcx
0x40031f:	call	0x500028
<Block for 0x40033d, 16 bytes>
0x40033d:	nop	
0x40033e:	mov	rax, qword ptr [rbp - 8]
0x400342:	xor	rax, qword ptr fs:[0x28]
0x40034b:	je	0x400352
<Block for 0x400352, 2 bytes>
0x400352:	leave	
0x400353:	ret	
<Block for 0x40034d, 5 bytes>
0x40034d:	call	0x500010
