<Block for 0x40008b, 159 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x90
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	qword ptr [rbp - 0x70], 0
0x4000b1:	mov	qword ptr [rbp - 0x68], 0
0x4000b9:	mov	qword ptr [rbp - 0x60], 0
0x4000c1:	mov	qword ptr [rbp - 0x58], 0
0x4000c9:	mov	qword ptr [rbp - 0x50], 0
0x4000d1:	mov	qword ptr [rbp - 0x48], 0
0x4000d9:	mov	qword ptr [rbp - 0x40], 0
0x4000e1:	mov	qword ptr [rbp - 0x38], 0
0x4000e9:	mov	qword ptr [rbp - 0x30], 0
0x4000f1:	mov	qword ptr [rbp - 0x28], 0
0x4000f9:	mov	qword ptr [rbp - 0x20], 0
0x400101:	mov	qword ptr [rbp - 0x18], 0
0x400109:	mov	dword ptr [rbp - 0x10], 0
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	qword ptr [rbp - 0x88], rax
0x40011b:	mov	rax, qword ptr [rbp - 0x88]
0x400122:	mov	rdi, rax
0x400125:	call	0x500018
<Block for 0x40012a, 16 bytes>
0x40012a:	mov	qword ptr [rbp - 0x80], rax
0x40012e:	lea	rdi, [rip + 0x552]
0x400135:	call	0x500020
<Block for 0x40013a, 11 bytes>
0x40013a:	mov	qword ptr [rbp - 0x78], rax
0x40013e:	cmp	qword ptr [rbp - 0x78], 0
0x400143:	je	0x40016e
<Block for 0x40016e, 25 bytes>
0x40016e:	mov	dword ptr [rip + 0x4fc], 1
0x400178:	mov	rax, qword ptr [rbp - 0x88]
0x40017f:	mov	rdi, rax
0x400182:	call	0x400000
<Block for 0x400145, 41 bytes>
0x400145:	mov	eax, 0x63
0x40014a:	sub	rax, qword ptr [rbp - 0x80]
0x40014e:	mov	rdx, rax
0x400151:	mov	rcx, qword ptr [rbp - 0x88]
0x400158:	mov	rax, qword ptr [rbp - 0x80]
0x40015c:	add	rcx, rax
0x40015f:	mov	rax, qword ptr [rbp - 0x78]
0x400163:	mov	rsi, rax
0x400166:	mov	rdi, rcx
0x400169:	call	0x500028
<Block for 0x400187, 16 bytes>
0x400187:	nop	
0x400188:	mov	rax, qword ptr [rbp - 8]
0x40018c:	xor	rax, qword ptr fs:[0x28]
0x400195:	je	0x40019c
<Block for 0x40019c, 2 bytes>
0x40019c:	leave	
0x40019d:	ret	
<Block for 0x400197, 5 bytes>
0x400197:	call	0x500010
