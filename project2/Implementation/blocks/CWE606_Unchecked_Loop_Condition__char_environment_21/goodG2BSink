<Block for 0x4004fc, 41 bytes>
0x4004fc:	endbr64	
0x400500:	push	rbp
0x400501:	mov	rbp, rsp
0x400504:	sub	rsp, 0x30
0x400508:	mov	qword ptr [rbp - 0x28], rdi
0x40050c:	mov	rax, qword ptr fs:[0x28]
0x400515:	mov	qword ptr [rbp - 8], rax
0x400519:	xor	eax, eax
0x40051b:	mov	eax, dword ptr [rip + 0x15f]
0x400521:	test	eax, eax
0x400523:	je	0x400570
<Block for 0x400570, 16 bytes>
0x400570:	nop	
0x400571:	mov	rax, qword ptr [rbp - 8]
0x400575:	xor	rax, qword ptr fs:[0x28]
0x40057e:	je	0x400585
<Block for 0x400525, 28 bytes>
0x400525:	lea	rdx, [rbp - 0x14]
0x400529:	mov	rax, qword ptr [rbp - 0x28]
0x40052d:	lea	rsi, [rip + 0x150]
0x400534:	mov	rdi, rax
0x400537:	mov	eax, 0
0x40053c:	call	0x500000
<Block for 0x400585, 2 bytes>
0x400585:	leave	
0x400586:	ret	
<Block for 0x400580, 5 bytes>
0x400580:	call	0x500010
<Block for 0x400541, 5 bytes>
0x400541:	cmp	eax, 1
0x400544:	jne	0x400570
<Block for 0x400546, 16 bytes>
0x400546:	mov	dword ptr [rbp - 0xc], 0
0x40054d:	mov	dword ptr [rbp - 0x10], 0
0x400554:	jmp	0x40055e
<Block for 0x40055e, 8 bytes>
0x40055e:	mov	eax, dword ptr [rbp - 0x14]
0x400561:	cmp	dword ptr [rbp - 0x10], eax
0x400564:	jl	0x400556
<Block for 0x400556, 16 bytes>
0x400556:	add	dword ptr [rbp - 0xc], 1
0x40055a:	add	dword ptr [rbp - 0x10], 1
0x40055e:	mov	eax, dword ptr [rbp - 0x14]
0x400561:	cmp	dword ptr [rbp - 0x10], eax
0x400564:	jl	0x400556
<Block for 0x400566, 10 bytes>
0x400566:	mov	eax, dword ptr [rbp - 0xc]
0x400569:	mov	edi, eax
0x40056b:	call	0x500008
