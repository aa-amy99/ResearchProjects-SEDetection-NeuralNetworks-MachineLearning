<Block for 0x400112, 46 bytes>
0x400112:	endbr64	
0x400116:	push	rbp
0x400117:	mov	rbp, rsp
0x40011a:	sub	rsp, 0x10
0x40011e:	mov	rax, qword ptr fs:[0x28]
0x400127:	mov	qword ptr [rbp - 8], rax
0x40012b:	xor	eax, eax
0x40012d:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400134:	lea	rax, [rbp - 0xc]
0x400138:	mov	rdi, rax
0x40013b:	call	0x4000f9
<Block for 0x400140, 8 bytes>
0x400140:	mov	eax, dword ptr [rbp - 0xc]
0x400143:	cmp	eax, 5
0x400146:	jg	0x400167
<Block for 0x400148, 31 bytes>
0x400148:	lea	rcx, [rip + 0xc9]
0x40014f:	mov	edx, 0x4b
0x400154:	lea	rsi, [rip + 0x7d]
0x40015b:	lea	rdi, [rip + 0x9f]
0x400162:	call	0x500028
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500020
