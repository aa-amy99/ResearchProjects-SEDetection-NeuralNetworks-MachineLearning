<Block for 0x40008d, 46 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	rax, qword ptr fs:[0x28]
0x4000a2:	mov	qword ptr [rbp - 8], rax
0x4000a6:	xor	eax, eax
0x4000a8:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x4000af:	lea	rax, [rbp - 0xc]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x400000
<Block for 0x4000bb, 8 bytes>
0x4000bb:	mov	eax, dword ptr [rbp - 0xc]
0x4000be:	cmp	eax, 5
0x4000c1:	jg	0x4000e2
<Block for 0x4000c3, 31 bytes>
0x4000c3:	lea	rcx, [rip + 0xd6]
0x4000ca:	mov	edx, 0x36
0x4000cf:	lea	rsi, [rip + 0x102]
0x4000d6:	lea	rdi, [rip + 0x124]
0x4000dd:	call	0x500028
<Block for 0x4000e2, 16 bytes>
0x4000e2:	nop	
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	xor	rax, qword ptr fs:[0x28]
0x4000f0:	je	0x4000f7
<Block for 0x4000f7, 2 bytes>
0x4000f7:	leave	
0x4000f8:	ret	
<Block for 0x4000f2, 5 bytes>
0x4000f2:	call	0x500020
