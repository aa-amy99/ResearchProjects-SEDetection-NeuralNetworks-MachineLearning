<Block for 0x4000b6, 55 bytes>
0x4000b6:	endbr64	
0x4000ba:	push	rbp
0x4000bb:	mov	rbp, rsp
0x4000be:	sub	rsp, 0xf0
0x4000c5:	mov	rax, qword ptr fs:[0x28]
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	xor	eax, eax
0x4000d4:	lea	rax, [rbp - 0xe0]
0x4000db:	mov	edx, 0x63
0x4000e0:	mov	esi, 0x41
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500000
<Block for 0x4000ed, 40 bytes>
0x4000ed:	mov	byte ptr [rbp - 0x7d], 0
0x4000f1:	lea	rax, [rbp - 0xe0]
0x4000f8:	mov	qword ptr [rbp - 0xe8], rax
0x4000ff:	lea	rax, [rbp - 0x70]
0x400103:	mov	edx, 0x63
0x400108:	mov	esi, 0x43
0x40010d:	mov	rdi, rax
0x400110:	call	0x500000
<Block for 0x400115, 31 bytes>
0x400115:	mov	byte ptr [rbp - 0xd], 0
0x400119:	lea	rcx, [rbp - 0x70]
0x40011d:	mov	rax, qword ptr [rbp - 0xe8]
0x400124:	mov	edx, 0x64
0x400129:	mov	rsi, rcx
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x400134, 29 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0xe8]
0x40013b:	add	rax, 0x63
0x40013f:	mov	byte ptr [rax], 0
0x400142:	mov	rax, qword ptr [rbp - 0xe8]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500010
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x400166
<Block for 0x400166, 2 bytes>
0x400166:	leave	
0x400167:	ret	
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500018
