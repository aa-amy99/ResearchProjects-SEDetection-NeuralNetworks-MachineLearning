<Block for 0x4001a2, 40 bytes>
0x4001a2:	endbr64	
0x4001a6:	push	rbp
0x4001a7:	mov	rbp, rsp
0x4001aa:	add	rsp, -0x80
0x4001ae:	mov	rax, qword ptr fs:[0x28]
0x4001b7:	mov	qword ptr [rbp - 8], rax
0x4001bb:	xor	eax, eax
0x4001bd:	mov	qword ptr [rbp - 0x80], 0
0x4001c5:	call	0x500000
<Block for 0x4001ca, 9 bytes>
0x4001ca:	test	eax, eax
0x4001cc:	setne	al
0x4001cf:	test	al, al
0x4001d1:	je	0x40020a
<Block for 0x40020a, 22 bytes>
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	edx, 0x63
0x400213:	mov	esi, 0x43
0x400218:	mov	rdi, rax
0x40021b:	call	0x500010
<Block for 0x4001d3, 10 bytes>
0x4001d3:	mov	edi, 0x64
0x4001d8:	call	0x500008
<Block for 0x400220, 28 bytes>
0x400220:	mov	byte ptr [rbp - 0xd], 0
0x400224:	lea	rcx, [rbp - 0x70]
0x400228:	mov	rax, qword ptr [rbp - 0x80]
0x40022c:	mov	edx, 0x64
0x400231:	mov	rsi, rcx
0x400234:	mov	rdi, rax
0x400237:	call	0x500018
<Block for 0x4001dd, 26 bytes>
0x4001dd:	mov	qword ptr [rbp - 0x78], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0x78]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x41
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500010
<Block for 0x40023c, 23 bytes>
0x40023c:	mov	rax, qword ptr [rbp - 0x80]
0x400240:	add	rax, 0x63
0x400244:	mov	byte ptr [rax], 0
0x400247:	mov	rax, qword ptr [rbp - 0x80]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500020
<Block for 0x4001f7, 41 bytes>
0x4001f7:	mov	rax, qword ptr [rbp - 0x78]
0x4001fb:	add	rax, 0x63
0x4001ff:	mov	byte ptr [rax], 0
0x400202:	mov	rax, qword ptr [rbp - 0x78]
0x400206:	mov	qword ptr [rbp - 0x80], rax
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	edx, 0x63
0x400213:	mov	esi, 0x43
0x400218:	mov	rdi, rax
0x40021b:	call	0x500010
<Block for 0x400253, 16 bytes>
0x400253:	nop	
0x400254:	mov	rax, qword ptr [rbp - 8]
0x400258:	xor	rax, qword ptr fs:[0x28]
0x400261:	je	0x400268
<Block for 0x400268, 2 bytes>
0x400268:	leave	
0x400269:	ret	
<Block for 0x400263, 5 bytes>
0x400263:	call	0x500028
