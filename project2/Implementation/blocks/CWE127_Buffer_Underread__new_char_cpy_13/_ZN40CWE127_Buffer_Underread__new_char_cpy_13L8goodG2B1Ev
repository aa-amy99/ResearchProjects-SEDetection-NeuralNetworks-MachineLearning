<Block for 0x4000da, 52 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0xe0
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	qword ptr [rbp - 0xe0], 0
0x400103:	mov	eax, dword ptr [rip + 0xffef7]
0x400109:	cmp	eax, 5
0x40010c:	je	0x40011c
<Block for 0x40011c, 10 bytes>
0x40011c:	mov	edi, 0x64
0x400121:	call	0x500008
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0x194]
0x400115:	call	0x500020
<Block for 0x400126, 32 bytes>
0x400126:	mov	qword ptr [rbp - 0xd8], rax
0x40012d:	mov	rax, qword ptr [rbp - 0xd8]
0x400134:	mov	edx, 0x63
0x400139:	mov	esi, 0x41
0x40013e:	mov	rdi, rax
0x400141:	call	0x500010
<Block for 0x40011a, 2 bytes>
0x40011a:	jmp	0x400162
<Block for 0x400146, 53 bytes>
0x400146:	mov	rax, qword ptr [rbp - 0xd8]
0x40014d:	add	rax, 0x63
0x400151:	mov	byte ptr [rax], 0
0x400154:	mov	rax, qword ptr [rbp - 0xd8]
0x40015b:	mov	qword ptr [rbp - 0xe0], rax
0x400162:	lea	rax, [rbp - 0xd0]
0x400169:	mov	edx, 0xc7
0x40016e:	mov	esi, 0x43
0x400173:	mov	rdi, rax
0x400176:	call	0x500010
<Block for 0x400162, 25 bytes>
0x400162:	lea	rax, [rbp - 0xd0]
0x400169:	mov	edx, 0xc7
0x40016e:	mov	esi, 0x43
0x400173:	mov	rdi, rax
0x400176:	call	0x500010
<Block for 0x40017b, 29 bytes>
0x40017b:	mov	byte ptr [rbp - 9], 0
0x40017f:	mov	rdx, qword ptr [rbp - 0xe0]
0x400186:	lea	rax, [rbp - 0xd0]
0x40018d:	mov	rsi, rdx
0x400190:	mov	rdi, rax
0x400193:	call	0x500018
<Block for 0x400198, 15 bytes>
0x400198:	lea	rax, [rbp - 0xd0]
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500020
<Block for 0x4001a7, 16 bytes>
0x4001a7:	nop	
0x4001a8:	mov	rax, qword ptr [rbp - 8]
0x4001ac:	xor	rax, qword ptr fs:[0x28]
0x4001b5:	je	0x4001bc
<Block for 0x4001bc, 2 bytes>
0x4001bc:	leave	
0x4001bd:	ret	
<Block for 0x4001b7, 5 bytes>
0x4001b7:	call	0x500028
