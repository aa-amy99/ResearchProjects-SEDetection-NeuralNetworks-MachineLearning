<Block for 0x400285, 160 bytes>
0x400285:	endbr64	
0x400289:	push	rbp
0x40028a:	mov	rbp, rsp
0x40028d:	push	rbx
0x40028e:	sub	rsp, 0x98
0x400295:	mov	rax, qword ptr fs:[0x28]
0x40029e:	mov	qword ptr [rbp - 0x18], rax
0x4002a2:	xor	eax, eax
0x4002a4:	mov	qword ptr [rbp - 0x80], 0
0x4002ac:	mov	qword ptr [rbp - 0x78], 0
0x4002b4:	mov	qword ptr [rbp - 0x70], 0
0x4002bc:	mov	qword ptr [rbp - 0x68], 0
0x4002c4:	mov	qword ptr [rbp - 0x60], 0
0x4002cc:	mov	qword ptr [rbp - 0x58], 0
0x4002d4:	mov	qword ptr [rbp - 0x50], 0
0x4002dc:	mov	qword ptr [rbp - 0x48], 0
0x4002e4:	mov	qword ptr [rbp - 0x40], 0
0x4002ec:	mov	qword ptr [rbp - 0x38], 0
0x4002f4:	mov	qword ptr [rbp - 0x30], 0
0x4002fc:	mov	qword ptr [rbp - 0x28], 0
0x400304:	mov	dword ptr [rbp - 0x20], 0
0x40030b:	lea	rax, [rbp - 0x80]
0x40030f:	mov	qword ptr [rbp - 0xa0], rax
0x400316:	mov	rax, qword ptr [rbp - 0xa0]
0x40031d:	mov	rdi, rax
0x400320:	call	0x500000
<Block for 0x400325, 19 bytes>
0x400325:	mov	qword ptr [rbp - 0x98], rax
0x40032c:	lea	rdi, [rip + 0x120]
0x400333:	call	0x500008
<Block for 0x400338, 17 bytes>
0x400338:	mov	qword ptr [rbp - 0x90], rax
0x40033f:	cmp	qword ptr [rbp - 0x90], 0
0x400347:	je	0x40037b
<Block for 0x40037b, 10 bytes>
0x40037b:	mov	edi, 8
0x400380:	call	0x500018
<Block for 0x400349, 50 bytes>
0x400349:	mov	eax, 0x63
0x40034e:	sub	rax, qword ptr [rbp - 0x98]
0x400355:	mov	rdx, rax
0x400358:	mov	rcx, qword ptr [rbp - 0xa0]
0x40035f:	mov	rax, qword ptr [rbp - 0x98]
0x400366:	add	rcx, rax
0x400369:	mov	rax, qword ptr [rbp - 0x90]
0x400370:	mov	rsi, rax
0x400373:	mov	rdi, rcx
0x400376:	call	0x500010
<Block for 0x400385, 11 bytes>
0x400385:	mov	rbx, rax
0x400388:	mov	rdi, rbx
0x40038b:	call	0x400486
<Block for 0x400390, 42 bytes>
0x400390:	mov	qword ptr [rbp - 0x88], rbx
0x400397:	mov	rax, qword ptr [rbp - 0x88]
0x40039e:	mov	rax, qword ptr [rax]
0x4003a1:	mov	rcx, qword ptr [rax]
0x4003a4:	mov	rdx, qword ptr [rbp - 0xa0]
0x4003ab:	mov	rax, qword ptr [rbp - 0x88]
0x4003b2:	mov	rsi, rdx
0x4003b5:	mov	rdi, rax
0x4003b8:	call	rcx
<Block for 0x4003ba, 12 bytes>
0x4003ba:	mov	rax, qword ptr [rbp - 0x88]
0x4003c1:	test	rax, rax
0x4003c4:	je	0x4003d3
<Block for 0x4003d3, 16 bytes>
0x4003d3:	nop	
0x4003d4:	mov	rax, qword ptr [rbp - 0x18]
0x4003d8:	xor	rax, qword ptr fs:[0x28]
0x4003e1:	je	0x4003e8
<Block for 0x4003c6, 13 bytes>
0x4003c6:	mov	esi, 8
0x4003cb:	mov	rdi, rax
0x4003ce:	call	0x500020
<Block for 0x4003e8, 10 bytes>
0x4003e8:	add	rsp, 0x98
0x4003ef:	pop	rbx
0x4003f0:	pop	rbp
0x4003f1:	ret	
<Block for 0x4003e3, 5 bytes>
0x4003e3:	call	0x500028
