<Block for 0x400000, 160 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x80], 0
0x400027:	mov	qword ptr [rbp - 0x78], 0
0x40002f:	mov	qword ptr [rbp - 0x70], 0
0x400037:	mov	qword ptr [rbp - 0x68], 0
0x40003f:	mov	qword ptr [rbp - 0x60], 0
0x400047:	mov	qword ptr [rbp - 0x58], 0
0x40004f:	mov	qword ptr [rbp - 0x50], 0
0x400057:	mov	qword ptr [rbp - 0x48], 0
0x40005f:	mov	qword ptr [rbp - 0x40], 0
0x400067:	mov	qword ptr [rbp - 0x38], 0
0x40006f:	mov	qword ptr [rbp - 0x30], 0
0x400077:	mov	qword ptr [rbp - 0x28], 0
0x40007f:	mov	dword ptr [rbp - 0x20], 0
0x400086:	lea	rax, [rbp - 0x80]
0x40008a:	mov	qword ptr [rbp - 0xa0], rax
0x400091:	mov	rax, qword ptr [rbp - 0xa0]
0x400098:	mov	rdi, rax
0x40009b:	call	0x500000
<Block for 0x4000a0, 19 bytes>
0x4000a0:	mov	qword ptr [rbp - 0x98], rax
0x4000a7:	lea	rdi, [rip + 0x3a5]
0x4000ae:	call	0x500008
<Block for 0x4000b3, 17 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x90], rax
0x4000ba:	cmp	qword ptr [rbp - 0x90], 0
0x4000c2:	je	0x4000f6
<Block for 0x4000f6, 10 bytes>
0x4000f6:	mov	edi, 8
0x4000fb:	call	0x500018
<Block for 0x4000c4, 50 bytes>
0x4000c4:	mov	eax, 0x63
0x4000c9:	sub	rax, qword ptr [rbp - 0x98]
0x4000d0:	mov	rdx, rax
0x4000d3:	mov	rcx, qword ptr [rbp - 0xa0]
0x4000da:	mov	rax, qword ptr [rbp - 0x98]
0x4000e1:	add	rcx, rax
0x4000e4:	mov	rax, qword ptr [rbp - 0x90]
0x4000eb:	mov	rsi, rax
0x4000ee:	mov	rdi, rcx
0x4000f1:	call	0x500010
<Block for 0x400100, 11 bytes>
0x400100:	mov	rbx, rax
0x400103:	mov	rdi, rbx
0x400106:	call	0x400426
<Block for 0x40010b, 42 bytes>
0x40010b:	mov	qword ptr [rbp - 0x88], rbx
0x400112:	mov	rax, qword ptr [rbp - 0x88]
0x400119:	mov	rax, qword ptr [rax]
0x40011c:	mov	rcx, qword ptr [rax]
0x40011f:	mov	rdx, qword ptr [rbp - 0xa0]
0x400126:	mov	rax, qword ptr [rbp - 0x88]
0x40012d:	mov	rsi, rdx
0x400130:	mov	rdi, rax
0x400133:	call	rcx
<Block for 0x400135, 12 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x88]
0x40013c:	test	rax, rax
0x40013f:	je	0x40014e
<Block for 0x40014e, 16 bytes>
0x40014e:	nop	
0x40014f:	mov	rax, qword ptr [rbp - 0x18]
0x400153:	xor	rax, qword ptr fs:[0x28]
0x40015c:	je	0x400163
<Block for 0x400141, 13 bytes>
0x400141:	mov	esi, 8
0x400146:	mov	rdi, rax
0x400149:	call	0x500020
<Block for 0x400163, 10 bytes>
0x400163:	add	rsp, 0x98
0x40016a:	pop	rbx
0x40016b:	pop	rbp
0x40016c:	ret	
<Block for 0x40015e, 5 bytes>
0x40015e:	call	0x500028
