<Block for 0x40008d, 22 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	edi, 8
0x40009e:	call	0x500018
<Block for 0x4000a3, 47 bytes>
0x4000a3:	mov	qword ptr [rbp - 0x10], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x10]
0x4000ab:	mov	dword ptr [rax], 0
0x4000b1:	mov	rax, qword ptr [rbp - 0x10]
0x4000b5:	mov	dword ptr [rax + 4], 0
0x4000bc:	mov	rax, qword ptr [rbp - 0x10]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	nop	
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	mov	eax, dword ptr [rax]
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500000
<Block for 0x4000d2, 9 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	test	rax, rax
0x4000d9:	je	0x4000e8
<Block for 0x4000e8, 4 bytes>
0x4000e8:	nop	
0x4000e9:	nop	
0x4000ea:	leave	
0x4000eb:	ret	
<Block for 0x4000db, 13 bytes>
0x4000db:	mov	esi, 8
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500008
