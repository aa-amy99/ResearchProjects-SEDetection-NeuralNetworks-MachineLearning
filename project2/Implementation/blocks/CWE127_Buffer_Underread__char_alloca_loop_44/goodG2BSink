<Block for 0x400196, 59 bytes>
0x400196:	endbr64	
0x40019a:	push	rbp
0x40019b:	mov	rbp, rsp
0x40019e:	sub	rsp, 0x90
0x4001a5:	mov	qword ptr [rbp - 0x88], rdi
0x4001ac:	mov	rax, qword ptr fs:[0x28]
0x4001b5:	mov	qword ptr [rbp - 8], rax
0x4001b9:	xor	eax, eax
0x4001bb:	lea	rax, [rbp - 0x70]
0x4001bf:	mov	edx, 0x63
0x4001c4:	mov	esi, 0x43
0x4001c9:	mov	rdi, rax
0x4001cc:	call	0x500000
<Block for 0x4001d1, 14 bytes>
0x4001d1:	mov	byte ptr [rbp - 0xd], 0
0x4001d5:	mov	qword ptr [rbp - 0x78], 0
0x4001dd:	jmp	0x400202
<Block for 0x400202, 7 bytes>
0x400202:	cmp	qword ptr [rbp - 0x78], 0x63
0x400207:	jbe	0x4001df
<Block for 0x4001df, 42 bytes>
0x4001df:	mov	rdx, qword ptr [rbp - 0x88]
0x4001e6:	mov	rax, qword ptr [rbp - 0x78]
0x4001ea:	add	rax, rdx
0x4001ed:	movzx	eax, byte ptr [rax]
0x4001f0:	lea	rcx, [rbp - 0x70]
0x4001f4:	mov	rdx, qword ptr [rbp - 0x78]
0x4001f8:	add	rdx, rcx
0x4001fb:	mov	byte ptr [rdx], al
0x4001fd:	add	qword ptr [rbp - 0x78], 1
0x400202:	cmp	qword ptr [rbp - 0x78], 0x63
0x400207:	jbe	0x4001df
<Block for 0x400209, 16 bytes>
0x400209:	mov	byte ptr [rbp - 0xd], 0
0x40020d:	lea	rax, [rbp - 0x70]
0x400211:	mov	rdi, rax
0x400214:	call	0x500008
<Block for 0x400219, 16 bytes>
0x400219:	nop	
0x40021a:	mov	rax, qword ptr [rbp - 8]
0x40021e:	xor	rax, qword ptr fs:[0x28]
0x400227:	je	0x40022e
<Block for 0x40022e, 2 bytes>
0x40022e:	leave	
0x40022f:	ret	
<Block for 0x400229, 5 bytes>
0x400229:	call	0x500010
