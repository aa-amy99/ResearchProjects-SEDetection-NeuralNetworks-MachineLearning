<Block for 0x4002c2, 46 bytes>
0x4002c2:	endbr64	
0x4002c6:	push	rbp
0x4002c7:	mov	rbp, rsp
0x4002ca:	push	rbx
0x4002cb:	sub	rsp, 0x98
0x4002d2:	mov	rax, qword ptr fs:[0x28]
0x4002db:	mov	qword ptr [rbp - 0x18], rax
0x4002df:	xor	eax, eax
0x4002e1:	lea	rax, [rbp - 0x90]
0x4002e8:	mov	rdi, rax
0x4002eb:	call	0x4005aa
<Block for 0x4002f0, 55 bytes>
0x4002f0:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x4002fa:	mov	qword ptr [rbp - 0x26], 0
0x400302:	mov	dword ptr [rbp - 0x1e], 0
0x400309:	mov	word ptr [rbp - 0x1a], 0
0x40030f:	mov	rdx, qword ptr [rip + 0xffcea]
0x400316:	lea	rax, [rbp - 0x26]
0x40031a:	mov	esi, 0xe
0x40031f:	mov	rdi, rax
0x400322:	call	0x500008
<Block for 0x400327, 10 bytes>
0x400327:	test	rax, rax
0x40032a:	setne	al
0x40032d:	test	al, al
0x40032f:	je	0x400345
<Block for 0x400345, 12 bytes>
0x400345:	lea	rdi, [rip + 0x149]
0x40034c:	call	0x500018
<Block for 0x400331, 12 bytes>
0x400331:	lea	rax, [rbp - 0x26]
0x400335:	mov	rdi, rax
0x400338:	call	0x500010
<Block for 0x400351, 29 bytes>
0x400351:	mov	dword ptr [rbp - 0x60], 0
0x400358:	lea	rdx, [rbp - 0x60]
0x40035c:	lea	rax, [rbp - 0x90]
0x400363:	mov	rsi, rdx
0x400366:	mov	rdi, rax
0x400369:	call	0x400776
<Block for 0x40033d, 8 bytes>
0x40033d:	mov	dword ptr [rbp - 0x94], eax
0x400343:	jmp	0x400351
<Block for 0x40036e, 37 bytes>
0x40036e:	mov	edx, dword ptr [rbp - 0x94]
0x400374:	mov	dword ptr [rax], edx
0x400376:	mov	dword ptr [rbp - 0x60], 1
0x40037d:	lea	rdx, [rbp - 0x60]
0x400381:	lea	rax, [rbp - 0x90]
0x400388:	mov	rsi, rdx
0x40038b:	mov	rdi, rax
0x40038e:	call	0x400776
<Block for 0x400393, 37 bytes>
0x400393:	mov	edx, dword ptr [rbp - 0x94]
0x400399:	mov	dword ptr [rax], edx
0x40039b:	mov	dword ptr [rbp - 0x60], 2
0x4003a2:	lea	rdx, [rbp - 0x60]
0x4003a6:	lea	rax, [rbp - 0x90]
0x4003ad:	mov	rsi, rdx
0x4003b0:	mov	rdi, rax
0x4003b3:	call	0x400776
<Block for 0x4003b8, 30 bytes>
0x4003b8:	mov	edx, dword ptr [rbp - 0x94]
0x4003be:	mov	dword ptr [rax], edx
0x4003c0:	lea	rdx, [rbp - 0x90]
0x4003c7:	lea	rax, [rbp - 0x60]
0x4003cb:	mov	rsi, rdx
0x4003ce:	mov	rdi, rax
0x4003d1:	call	0x4005ea
<Block for 0x4003d6, 12 bytes>
0x4003d6:	lea	rax, [rbp - 0x60]
0x4003da:	mov	rdi, rax
0x4003dd:	call	0x500040
<Block for 0x4003e2, 12 bytes>
0x4003e2:	lea	rax, [rbp - 0x60]
0x4003e6:	mov	rdi, rax
0x4003e9:	call	0x4005ca
<Block for 0x4003ee, 15 bytes>
0x4003ee:	lea	rax, [rbp - 0x90]
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x4005ca
<Block for 0x4003fd, 16 bytes>
0x4003fd:	nop	
0x4003fe:	mov	rax, qword ptr [rbp - 0x18]
0x400402:	xor	rax, qword ptr fs:[0x28]
0x40040b:	je	0x40044a
<Block for 0x40044a, 10 bytes>
0x40044a:	add	rsp, 0x98
0x400451:	pop	rbx
0x400452:	pop	rbp
0x400453:	ret	
<Block for 0x40040d, 2 bytes>
0x40040d:	jmp	0x400445
<Block for 0x400445, 5 bytes>
0x400445:	call	0x500030
