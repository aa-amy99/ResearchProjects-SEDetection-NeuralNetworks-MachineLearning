<Block for 0x4000e2, 26 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	sub	rsp, 0x20
0x4000ee:	mov	qword ptr [rbp - 0x18], rdi
0x4000f2:	mov	eax, dword ptr [rip + 0xfff38]
0x4000f8:	test	eax, eax
0x4000fa:	je	0x400144
<Block for 0x400144, 6 bytes>
0x400144:	mov	rax, qword ptr [rbp - 0x18]
0x400148:	leave	
0x400149:	ret	
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	edi, 0x64
0x400101:	call	0x500008
<Block for 0x400106, 11 bytes>
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	cmp	qword ptr [rbp - 8], 0
0x40010f:	jne	0x40011b
<Block for 0x400111, 10 bytes>
0x400111:	mov	edi, 0xffffffff
0x400116:	call	0x500010
<Block for 0x40011b, 22 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	mov	edx, 0x63
0x400124:	mov	esi, 0x41
0x400129:	mov	rdi, rax
0x40012c:	call	0x500018
<Block for 0x400131, 25 bytes>
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	add	rax, 0x63
0x400139:	mov	byte ptr [rax], 0
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	mov	qword ptr [rbp - 0x18], rax
0x400144:	mov	rax, qword ptr [rbp - 0x18]
0x400148:	leave	
0x400149:	ret	
