<Block for 0x40005d, 25 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	nop	
0x400066:	endbr64	
0x40006a:	lea	rdi, [rip + 0xa7]
0x400071:	call	0x500000
<Block for 0x400076, 12 bytes>
0x400076:	lea	rdi, [rip + 0x93]
0x40007d:	call	0x500008
<Block for 0x400082, 4 bytes>
0x400082:	test	eax, eax
0x400084:	jne	0x40009c
<Block for 0x400086, 12 bytes>
0x400086:	lea	rdi, [rip + 0x9c]
0x40008d:	call	0x500000
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rdi, [rip + 0x9c]
0x4000a3:	call	0x500000
<Block for 0x400092, 10 bytes>
0x400092:	mov	edi, 1
0x400097:	call	0x500010
<Block for 0x4000a8, 15 bytes>
0x4000a8:	mov	rax, qword ptr [rip + 0x61]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500018
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rdi, [rip + 0x93]
0x4000be:	call	0x500000
<Block for 0x4000c3, 15 bytes>
0x4000c3:	mov	rax, qword ptr [rip + 0x46]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500020
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rdi, [rip + 0x8a]
0x4000d9:	call	0x500000
<Block for 0x4000de, 15 bytes>
0x4000de:	mov	rax, qword ptr [rip + 0x2b]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500028
<Block for 0x4000ed, 3 bytes>
0x4000ed:	nop	
0x4000ee:	pop	rbp
0x4000ef:	ret	
