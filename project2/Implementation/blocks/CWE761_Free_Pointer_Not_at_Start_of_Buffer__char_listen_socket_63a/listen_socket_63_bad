<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	edi, 0x64
0x400020:	call	0x500000
<Block for 0x400025, 13 bytes>
0x400025:	mov	qword ptr [rbp - 0x38], rax
0x400029:	mov	rax, qword ptr [rbp - 0x38]
0x40002d:	test	rax, rax
0x400030:	jne	0x40003c
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0xffffffff
0x400037:	call	0x500008
<Block for 0x40003c, 33 bytes>
0x40003c:	mov	rax, qword ptr [rbp - 0x38]
0x400040:	mov	byte ptr [rax], 0
0x400043:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40004a:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400051:	mov	rax, qword ptr [rbp - 0x38]
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x40005d, 24 bytes>
0x40005d:	mov	qword ptr [rbp - 0x30], rax
0x400061:	mov	edx, 6
0x400066:	mov	esi, 1
0x40006b:	mov	edi, 2
0x400070:	call	0x500018
<Block for 0x400075, 13 bytes>
0x400075:	mov	dword ptr [rbp - 0x40], eax
0x400078:	cmp	dword ptr [rbp - 0x40], -1
0x40007c:	je	0x4001a0
<Block for 0x4001a0, 3 bytes>
0x4001a0:	nop	
0x4001a1:	jmp	0x4001aa
<Block for 0x400082, 22 bytes>
0x400082:	lea	rax, [rbp - 0x20]
0x400086:	mov	edx, 0x10
0x40008b:	mov	esi, 0
0x400090:	mov	rdi, rax
0x400093:	call	0x500020
<Block for 0x4001aa, 6 bytes>
0x4001aa:	cmp	dword ptr [rbp - 0x40], -1
0x4001ae:	je	0x4001ba
<Block for 0x400098, 23 bytes>
0x400098:	mov	word ptr [rbp - 0x20], 2
0x40009e:	mov	dword ptr [rbp - 0x1c], 0
0x4000a5:	mov	edi, 0x6987
0x4000aa:	call	0x500028
<Block for 0x4001ba, 6 bytes>
0x4001ba:	cmp	dword ptr [rbp - 0x44], -1
0x4001be:	je	0x4001ca
<Block for 0x4001b0, 10 bytes>
0x4001b0:	mov	eax, dword ptr [rbp - 0x40]
0x4001b3:	mov	edi, eax
0x4001b5:	call	0x500058
<Block for 0x4000af, 26 bytes>
0x4000af:	mov	word ptr [rbp - 0x1e], ax
0x4000b3:	lea	rcx, [rbp - 0x20]
0x4000b7:	mov	eax, dword ptr [rbp - 0x40]
0x4000ba:	mov	edx, 0x10
0x4000bf:	mov	rsi, rcx
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500030
<Block for 0x4001ca, 12 bytes>
0x4001ca:	lea	rax, [rbp - 0x38]
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x500060
<Block for 0x4001c0, 10 bytes>
0x4001c0:	mov	eax, dword ptr [rbp - 0x44]
0x4001c3:	mov	edi, eax
0x4001c5:	call	0x500058
<Block for 0x4000c9, 9 bytes>
0x4000c9:	cmp	eax, -1
0x4000cc:	je	0x4001a3
<Block for 0x4001d6, 16 bytes>
0x4001d6:	nop	
0x4001d7:	mov	rax, qword ptr [rbp - 8]
0x4001db:	xor	rax, qword ptr fs:[0x28]
0x4001e4:	je	0x4001eb
<Block for 0x4001a3, 3 bytes>
0x4001a3:	nop	
0x4001a4:	jmp	0x4001aa
<Block for 0x4000d2, 15 bytes>
0x4000d2:	mov	eax, dword ptr [rbp - 0x40]
0x4000d5:	mov	esi, 5
0x4000da:	mov	edi, eax
0x4000dc:	call	0x500038
<Block for 0x4001eb, 2 bytes>
0x4001eb:	leave	
0x4001ec:	ret	
<Block for 0x4001e6, 5 bytes>
0x4001e6:	call	0x500068
<Block for 0x4000e1, 9 bytes>
0x4000e1:	cmp	eax, -1
0x4000e4:	je	0x4001a6
<Block for 0x4001a6, 3 bytes>
0x4001a6:	nop	
0x4001a7:	jmp	0x4001aa
<Block for 0x4000ea, 20 bytes>
0x4000ea:	mov	eax, dword ptr [rbp - 0x40]
0x4000ed:	mov	edx, 0
0x4000f2:	mov	esi, 0
0x4000f7:	mov	edi, eax
0x4000f9:	call	0x500040
<Block for 0x4000fe, 13 bytes>
0x4000fe:	mov	dword ptr [rbp - 0x44], eax
0x400101:	cmp	dword ptr [rbp - 0x44], -1
0x400105:	je	0x4001a9
<Block for 0x40010b, 39 bytes>
0x40010b:	mov	eax, 0x63
0x400110:	sub	rax, qword ptr [rbp - 0x30]
0x400114:	mov	rdx, rax
0x400117:	mov	rcx, qword ptr [rbp - 0x38]
0x40011b:	mov	rax, qword ptr [rbp - 0x30]
0x40011f:	lea	rsi, [rcx + rax]
0x400123:	mov	eax, dword ptr [rbp - 0x44]
0x400126:	mov	ecx, 0
0x40012b:	mov	edi, eax
0x40012d:	call	0x500048
<Block for 0x4001a9, 1 bytes>
0x4001a9:	nop	
<Block for 0x400132, 9 bytes>
0x400132:	mov	dword ptr [rbp - 0x3c], eax
0x400135:	cmp	dword ptr [rbp - 0x3c], -1
0x400139:	je	0x4001aa
<Block for 0x40013b, 6 bytes>
0x40013b:	cmp	dword ptr [rbp - 0x3c], 0
0x40013f:	je	0x4001aa
<Block for 0x400141, 40 bytes>
0x400141:	mov	rax, qword ptr [rbp - 0x38]
0x400145:	mov	edx, dword ptr [rbp - 0x3c]
0x400148:	movsxd	rcx, edx
0x40014b:	mov	rdx, qword ptr [rbp - 0x30]
0x40014f:	add	rdx, rcx
0x400152:	add	rax, rdx
0x400155:	mov	byte ptr [rax], 0
0x400158:	mov	rax, qword ptr [rbp - 0x38]
0x40015c:	mov	esi, 0xd
0x400161:	mov	rdi, rax
0x400164:	call	0x500050
<Block for 0x400169, 11 bytes>
0x400169:	mov	qword ptr [rbp - 0x28], rax
0x40016d:	cmp	qword ptr [rbp - 0x28], 0
0x400172:	je	0x40017b
<Block for 0x40017b, 17 bytes>
0x40017b:	mov	rax, qword ptr [rbp - 0x38]
0x40017f:	mov	esi, 0xa
0x400184:	mov	rdi, rax
0x400187:	call	0x500050
<Block for 0x400174, 24 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0x28]
0x400178:	mov	byte ptr [rax], 0
0x40017b:	mov	rax, qword ptr [rbp - 0x38]
0x40017f:	mov	esi, 0xa
0x400184:	mov	rdi, rax
0x400187:	call	0x500050
<Block for 0x40018c, 11 bytes>
0x40018c:	mov	qword ptr [rbp - 0x28], rax
0x400190:	cmp	qword ptr [rbp - 0x28], 0
0x400195:	je	0x4001aa
<Block for 0x400197, 9 bytes>
0x400197:	mov	rax, qword ptr [rbp - 0x28]
0x40019b:	mov	byte ptr [rax], 0
0x40019e:	jmp	0x4001aa
