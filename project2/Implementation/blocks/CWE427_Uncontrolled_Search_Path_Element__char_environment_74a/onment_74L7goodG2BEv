<Block for 0x400206, 46 bytes>
0x400206:	endbr64	
0x40020a:	push	rbp
0x40020b:	mov	rbp, rsp
0x40020e:	push	rbx
0x40020f:	sub	rsp, 0x188
0x400216:	mov	rax, qword ptr fs:[0x28]
0x40021f:	mov	qword ptr [rbp - 0x18], rax
0x400223:	xor	eax, eax
0x400225:	lea	rax, [rbp - 0x180]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x400524
<Block for 0x400234, 52 bytes>
0x400234:	movabs	rax, 0x3d48544150
0x40023e:	mov	edx, 0
0x400243:	mov	qword ptr [rbp - 0x120], rax
0x40024a:	mov	qword ptr [rbp - 0x118], rdx
0x400251:	lea	rdx, [rbp - 0x110]
0x400258:	mov	eax, 0
0x40025d:	mov	ecx, 0x1d
0x400262:	mov	rdi, rdx
0x400265:	rep stosq	qword ptr [rdi], rax
<Block for 0x400268, 51 bytes>
0x400268:	mov	rdx, rdi
0x40026b:	mov	word ptr [rdx], ax
0x40026e:	add	rdx, 2
0x400272:	lea	rax, [rbp - 0x120]
0x400279:	mov	qword ptr [rbp - 0x188], rax
0x400280:	mov	rax, qword ptr [rbp - 0x188]
0x400287:	mov	rcx, -1
0x40028e:	mov	rdx, rax
0x400291:	mov	eax, 0
0x400296:	mov	rdi, rdx
0x400299:	repne scasb	al, byte ptr [rdi]
<Block for 0x400265, 3 bytes>
0x400265:	rep stosq	qword ptr [rdi], rax
<Block for 0x40029b, 65 bytes>
0x40029b:	mov	rax, rcx
0x40029e:	not	rax
0x4002a1:	lea	rdx, [rax - 1]
0x4002a5:	mov	rax, qword ptr [rbp - 0x188]
0x4002ac:	add	rax, rdx
0x4002af:	mov	dword ptr [rax], 0x6e69622f
0x4002b5:	mov	byte ptr [rax + 4], 0
0x4002b9:	mov	dword ptr [rbp - 0x150], 0
0x4002c3:	lea	rdx, [rbp - 0x150]
0x4002ca:	lea	rax, [rbp - 0x180]
0x4002d1:	mov	rsi, rdx
0x4002d4:	mov	rdi, rax
0x4002d7:	call	0x4006de
<Block for 0x400299, 2 bytes>
0x400299:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002dc, 45 bytes>
0x4002dc:	mov	rdx, qword ptr [rbp - 0x188]
0x4002e3:	mov	qword ptr [rax], rdx
0x4002e6:	mov	dword ptr [rbp - 0x150], 1
0x4002f0:	lea	rdx, [rbp - 0x150]
0x4002f7:	lea	rax, [rbp - 0x180]
0x4002fe:	mov	rsi, rdx
0x400301:	mov	rdi, rax
0x400304:	call	0x4006de
<Block for 0x400309, 45 bytes>
0x400309:	mov	rdx, qword ptr [rbp - 0x188]
0x400310:	mov	qword ptr [rax], rdx
0x400313:	mov	dword ptr [rbp - 0x150], 2
0x40031d:	lea	rdx, [rbp - 0x150]
0x400324:	lea	rax, [rbp - 0x180]
0x40032b:	mov	rsi, rdx
0x40032e:	mov	rdi, rax
0x400331:	call	0x4006de
<Block for 0x400336, 35 bytes>
0x400336:	mov	rdx, qword ptr [rbp - 0x188]
0x40033d:	mov	qword ptr [rax], rdx
0x400340:	lea	rdx, [rbp - 0x180]
0x400347:	lea	rax, [rbp - 0x150]
0x40034e:	mov	rsi, rdx
0x400351:	mov	rdi, rax
0x400354:	call	0x400564
<Block for 0x400359, 15 bytes>
0x400359:	lea	rax, [rbp - 0x150]
0x400360:	mov	rdi, rax
0x400363:	call	0x500030
<Block for 0x400368, 15 bytes>
0x400368:	lea	rax, [rbp - 0x150]
0x40036f:	mov	rdi, rax
0x400372:	call	0x400544
<Block for 0x400377, 15 bytes>
0x400377:	lea	rax, [rbp - 0x180]
0x40037e:	mov	rdi, rax
0x400381:	call	0x400544
<Block for 0x400386, 16 bytes>
0x400386:	nop	
0x400387:	mov	rax, qword ptr [rbp - 0x18]
0x40038b:	xor	rax, qword ptr fs:[0x28]
0x400394:	je	0x4003d6
<Block for 0x4003d6, 10 bytes>
0x4003d6:	add	rsp, 0x188
0x4003dd:	pop	rbx
0x4003de:	pop	rbp
0x4003df:	ret	
<Block for 0x400396, 2 bytes>
0x400396:	jmp	0x4003d1
<Block for 0x4003d1, 5 bytes>
0x4003d1:	call	0x500028
