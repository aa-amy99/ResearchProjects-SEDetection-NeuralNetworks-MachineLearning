<Block for 0x4004de, 40 bytes>
0x4004de:	endbr64	
0x4004e2:	push	rbp
0x4004e3:	mov	rbp, rsp
0x4004e6:	push	rbx
0x4004e7:	sub	rsp, 0x68
0x4004eb:	mov	rax, qword ptr fs:[0x28]
0x4004f4:	mov	qword ptr [rbp - 0x18], rax
0x4004f8:	xor	eax, eax
0x4004fa:	lea	rax, [rbp - 0x70]
0x4004fe:	mov	rdi, rax
0x400501:	call	0x4009cc
<Block for 0x400506, 19 bytes>
0x400506:	lea	rdx, [rbp - 0x70]
0x40050a:	lea	rax, [rbp - 0x50]
0x40050e:	mov	rsi, rdx
0x400511:	mov	rdi, rax
0x400514:	call	0x400b48
<Block for 0x400519, 19 bytes>
0x400519:	lea	rax, [rbp - 0x30]
0x40051d:	lea	rdx, [rbp - 0x50]
0x400521:	mov	rsi, rdx
0x400524:	mov	rdi, rax
0x400527:	call	0x40045a
<Block for 0x40052c, 19 bytes>
0x40052c:	lea	rdx, [rbp - 0x30]
0x400530:	lea	rax, [rbp - 0x70]
0x400534:	mov	rsi, rdx
0x400537:	mov	rdi, rax
0x40053a:	call	0x400c14
<Block for 0x40053f, 12 bytes>
0x40053f:	lea	rax, [rbp - 0x30]
0x400543:	mov	rdi, rax
0x400546:	call	0x40098c
<Block for 0x40054b, 12 bytes>
0x40054b:	lea	rax, [rbp - 0x50]
0x40054f:	mov	rdi, rax
0x400552:	call	0x40098c
<Block for 0x400557, 12 bytes>
0x400557:	lea	rax, [rbp - 0x50]
0x40055b:	mov	rdi, rax
0x40055e:	call	0x400c74
<Block for 0x400563, 19 bytes>
0x400563:	lea	rsi, [rip + 0x18a]
0x40056a:	lea	rdi, [rip + 0xffa97]
0x400571:	call	0x500010
<Block for 0x400576, 12 bytes>
0x400576:	lea	rax, [rbp - 0x70]
0x40057a:	mov	rdi, rax
0x40057d:	call	0x400c8e
<Block for 0x400582, 16 bytes>
0x400582:	mov	qword ptr [rbp - 0x50], rax
0x400586:	lea	rax, [rbp - 0x70]
0x40058a:	mov	rdi, rax
0x40058d:	call	0x400cde
<Block for 0x400592, 23 bytes>
0x400592:	mov	qword ptr [rbp - 0x30], rax
0x400596:	lea	rdx, [rbp - 0x30]
0x40059a:	lea	rax, [rbp - 0x50]
0x40059e:	mov	rsi, rdx
0x4005a1:	mov	rdi, rax
0x4005a4:	call	0x400d2a
<Block for 0x4005a9, 4 bytes>
0x4005a9:	test	al, al
0x4005ab:	je	0x4005ee
<Block for 0x4005ee, 22 bytes>
0x4005ee:	mov	rax, qword ptr [rip + 0xffa33]
0x4005f5:	mov	rsi, rax
0x4005f8:	lea	rdi, [rip + 0xffa09]
0x4005ff:	call	0x500030
<Block for 0x4005ad, 19 bytes>
0x4005ad:	lea	rsi, [rip + 0x154]
0x4005b4:	lea	rdi, [rip + 0xffa4d]
0x4005bb:	call	0x500010
<Block for 0x400604, 12 bytes>
0x400604:	lea	rax, [rbp - 0x70]
0x400608:	mov	rdi, rax
0x40060b:	call	0x40098c
<Block for 0x4005c0, 15 bytes>
0x4005c0:	mov	rbx, rax
0x4005c3:	lea	rax, [rbp - 0x50]
0x4005c7:	mov	rdi, rax
0x4005ca:	call	0x400da8
<Block for 0x400610, 16 bytes>
0x400610:	nop	
0x400611:	mov	rax, qword ptr [rbp - 0x18]
0x400615:	xor	rax, qword ptr fs:[0x28]
0x40061e:	je	0x40065a
<Block for 0x4005cf, 12 bytes>
0x4005cf:	mov	eax, dword ptr [rax]
0x4005d1:	mov	esi, eax
0x4005d3:	mov	rdi, rbx
0x4005d6:	call	0x500018
<Block for 0x40065a, 7 bytes>
0x40065a:	add	rsp, 0x68
0x40065e:	pop	rbx
0x40065f:	pop	rbp
0x400660:	ret	
<Block for 0x400620, 2 bytes>
0x400620:	jmp	0x400655
<Block for 0x4005db, 17 bytes>
0x4005db:	lea	rax, [rbp - 0x50]
0x4005df:	mov	esi, 0
0x4005e4:	mov	rdi, rax
0x4005e7:	call	0x400d50
<Block for 0x400655, 5 bytes>
0x400655:	call	0x500000
<Block for 0x4005ec, 2 bytes>
0x4005ec:	jmp	0x400586
<Block for 0x400586, 12 bytes>
0x400586:	lea	rax, [rbp - 0x70]
0x40058a:	mov	rdi, rax
0x40058d:	call	0x400cde
