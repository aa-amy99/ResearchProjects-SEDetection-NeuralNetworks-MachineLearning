<Block for 0x400037, 36 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	push	rbx
0x400040:	sub	rsp, 0x18
0x400044:	lea	rax, [rip - 0x4b]
0x40004b:	mov	qword ptr [rbp - 0x18], rax
0x40004f:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400056:	call	0x500008
<Block for 0x40005b, 7 bytes>
0x40005b:	and	eax, 1
0x40005e:	test	eax, eax
0x400060:	je	0x40007f
<Block for 0x40007f, 5 bytes>
0x40007f:	call	0x500008
<Block for 0x400062, 5 bytes>
0x400062:	call	0x500008
<Block for 0x400084, 10 bytes>
0x400084:	shl	eax, 0x1e
0x400087:	mov	ebx, eax
0x400089:	call	0x500008
<Block for 0x400067, 10 bytes>
0x400067:	shl	eax, 0x1e
0x40006a:	mov	ebx, eax
0x40006c:	call	0x500008
<Block for 0x40008e, 10 bytes>
0x40008e:	shl	eax, 0xf
0x400091:	xor	ebx, eax
0x400093:	call	0x500008
<Block for 0x400071, 10 bytes>
0x400071:	shl	eax, 0xf
0x400074:	xor	ebx, eax
0x400076:	call	0x500008
<Block for 0x400098, 18 bytes>
0x400098:	xor	eax, ebx
0x40009a:	not	eax
0x40009c:	mov	dword ptr [rbp - 0x1c], eax
0x40009f:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a2:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a6:	mov	edi, eax
0x4000a8:	call	rdx
<Block for 0x40007b, 4 bytes>
0x40007b:	xor	eax, ebx
0x40007d:	jmp	0x40009c
<Block for 0x4000aa, 8 bytes>
0x4000aa:	nop	
0x4000ab:	add	rsp, 0x18
0x4000af:	pop	rbx
0x4000b0:	pop	rbp
0x4000b1:	ret	
<Block for 0x40009c, 14 bytes>
0x40009c:	mov	dword ptr [rbp - 0x1c], eax
0x40009f:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a2:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a6:	mov	edi, eax
0x4000a8:	call	rdx
