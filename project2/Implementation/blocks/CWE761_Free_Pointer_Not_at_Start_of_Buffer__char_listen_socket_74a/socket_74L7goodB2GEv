<Block for 0x400362, 46 bytes>
0x400362:	endbr64	
0x400366:	push	rbp
0x400367:	mov	rbp, rsp
0x40036a:	push	rbx
0x40036b:	sub	rsp, 0xb8
0x400372:	mov	rax, qword ptr fs:[0x28]
0x40037b:	mov	qword ptr [rbp - 0x18], rax
0x40037f:	xor	eax, eax
0x400381:	lea	rax, [rbp - 0x90]
0x400388:	mov	rdi, rax
0x40038b:	call	0x400804
<Block for 0x400390, 10 bytes>
0x400390:	mov	edi, 0x64
0x400395:	call	0x500000
<Block for 0x40039a, 17 bytes>
0x40039a:	mov	qword ptr [rbp - 0xa8], rax
0x4003a1:	cmp	qword ptr [rbp - 0xa8], 0
0x4003a9:	jne	0x4003b5
<Block for 0x4003ab, 10 bytes>
0x4003ab:	mov	edi, 0xffffffff
0x4003b0:	call	0x500008
<Block for 0x4003b5, 45 bytes>
0x4003b5:	mov	rax, qword ptr [rbp - 0xa8]
0x4003bc:	mov	byte ptr [rax], 0
0x4003bf:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x4003c9:	mov	dword ptr [rbp - 0xb4], 0xffffffff
0x4003d3:	mov	rax, qword ptr [rbp - 0xa8]
0x4003da:	mov	rdi, rax
0x4003dd:	call	0x500010
<Block for 0x4003e2, 27 bytes>
0x4003e2:	mov	qword ptr [rbp - 0xa0], rax
0x4003e9:	mov	edx, 6
0x4003ee:	mov	esi, 1
0x4003f3:	mov	edi, 2
0x4003f8:	call	0x500018
<Block for 0x4003fd, 19 bytes>
0x4003fd:	mov	dword ptr [rbp - 0xb0], eax
0x400403:	cmp	dword ptr [rbp - 0xb0], -1
0x40040a:	je	0x400585
<Block for 0x400585, 3 bytes>
0x400585:	nop	
0x400586:	jmp	0x40058f
<Block for 0x400410, 22 bytes>
0x400410:	lea	rax, [rbp - 0x30]
0x400414:	mov	edx, 0x10
0x400419:	mov	esi, 0
0x40041e:	mov	rdi, rax
0x400421:	call	0x500020
<Block for 0x40058f, 9 bytes>
0x40058f:	cmp	dword ptr [rbp - 0xb0], -1
0x400596:	je	0x4005a5
<Block for 0x400426, 23 bytes>
0x400426:	mov	word ptr [rbp - 0x30], 2
0x40042c:	mov	dword ptr [rbp - 0x2c], 0
0x400433:	mov	edi, 0x6987
0x400438:	call	0x500028
<Block for 0x4005a5, 9 bytes>
0x4005a5:	cmp	dword ptr [rbp - 0xb4], -1
0x4005ac:	je	0x4005bb
<Block for 0x400598, 13 bytes>
0x400598:	mov	eax, dword ptr [rbp - 0xb0]
0x40059e:	mov	edi, eax
0x4005a0:	call	0x500058
<Block for 0x40043d, 29 bytes>
0x40043d:	mov	word ptr [rbp - 0x2e], ax
0x400441:	lea	rcx, [rbp - 0x30]
0x400445:	mov	eax, dword ptr [rbp - 0xb0]
0x40044b:	mov	edx, 0x10
0x400450:	mov	rsi, rcx
0x400453:	mov	edi, eax
0x400455:	call	0x500030
<Block for 0x4005bb, 29 bytes>
0x4005bb:	mov	dword ptr [rbp - 0x60], 0
0x4005c2:	lea	rdx, [rbp - 0x60]
0x4005c6:	lea	rax, [rbp - 0x90]
0x4005cd:	mov	rsi, rdx
0x4005d0:	mov	rdi, rax
0x4005d3:	call	0x4009be
<Block for 0x4005ae, 13 bytes>
0x4005ae:	mov	eax, dword ptr [rbp - 0xb4]
0x4005b4:	mov	edi, eax
0x4005b6:	call	0x500058
<Block for 0x40045a, 14 bytes>
0x40045a:	cmp	eax, -1
0x40045d:	sete	al
0x400460:	test	al, al
0x400462:	jne	0x400588
<Block for 0x4005d8, 39 bytes>
0x4005d8:	mov	rdx, qword ptr [rbp - 0xa8]
0x4005df:	mov	qword ptr [rax], rdx
0x4005e2:	mov	dword ptr [rbp - 0x60], 1
0x4005e9:	lea	rdx, [rbp - 0x60]
0x4005ed:	lea	rax, [rbp - 0x90]
0x4005f4:	mov	rsi, rdx
0x4005f7:	mov	rdi, rax
0x4005fa:	call	0x4009be
<Block for 0x400468, 18 bytes>
0x400468:	mov	eax, dword ptr [rbp - 0xb0]
0x40046e:	mov	esi, 5
0x400473:	mov	edi, eax
0x400475:	call	0x500038
<Block for 0x400588, 3 bytes>
0x400588:	nop	
0x400589:	jmp	0x40058f
<Block for 0x4005ff, 39 bytes>
0x4005ff:	mov	rdx, qword ptr [rbp - 0xa8]
0x400606:	mov	qword ptr [rax], rdx
0x400609:	mov	dword ptr [rbp - 0x60], 2
0x400610:	lea	rdx, [rbp - 0x60]
0x400614:	lea	rax, [rbp - 0x90]
0x40061b:	mov	rsi, rdx
0x40061e:	mov	rdi, rax
0x400621:	call	0x4009be
<Block for 0x40047a, 14 bytes>
0x40047a:	cmp	eax, -1
0x40047d:	sete	al
0x400480:	test	al, al
0x400482:	jne	0x40058b
<Block for 0x400626, 32 bytes>
0x400626:	mov	rdx, qword ptr [rbp - 0xa8]
0x40062d:	mov	qword ptr [rax], rdx
0x400630:	lea	rdx, [rbp - 0x90]
0x400637:	lea	rax, [rbp - 0x60]
0x40063b:	mov	rsi, rdx
0x40063e:	mov	rdi, rax
0x400641:	call	0x400844
<Block for 0x400488, 23 bytes>
0x400488:	mov	eax, dword ptr [rbp - 0xb0]
0x40048e:	mov	edx, 0
0x400493:	mov	esi, 0
0x400498:	mov	edi, eax
0x40049a:	call	0x500040
<Block for 0x40058b, 3 bytes>
0x40058b:	nop	
0x40058c:	jmp	0x40058f
<Block for 0x400646, 12 bytes>
0x400646:	lea	rax, [rbp - 0x60]
0x40064a:	mov	rdi, rax
0x40064d:	call	0x500078
<Block for 0x40049f, 19 bytes>
0x40049f:	mov	dword ptr [rbp - 0xb4], eax
0x4004a5:	cmp	dword ptr [rbp - 0xb4], -1
0x4004ac:	je	0x40058e
<Block for 0x400652, 12 bytes>
0x400652:	lea	rax, [rbp - 0x60]
0x400656:	mov	rdi, rax
0x400659:	call	0x400824
<Block for 0x4004b2, 51 bytes>
0x4004b2:	mov	eax, 0x63
0x4004b7:	sub	rax, qword ptr [rbp - 0xa0]
0x4004be:	mov	rdx, rax
0x4004c1:	mov	rcx, qword ptr [rbp - 0xa8]
0x4004c8:	mov	rax, qword ptr [rbp - 0xa0]
0x4004cf:	lea	rsi, [rcx + rax]
0x4004d3:	mov	eax, dword ptr [rbp - 0xb4]
0x4004d9:	mov	ecx, 0
0x4004de:	mov	edi, eax
0x4004e0:	call	0x500048
<Block for 0x40058e, 1 bytes>
0x40058e:	nop	
<Block for 0x40065e, 15 bytes>
0x40065e:	lea	rax, [rbp - 0x90]
0x400665:	mov	rdi, rax
0x400668:	call	0x400824
<Block for 0x4004e5, 19 bytes>
0x4004e5:	mov	dword ptr [rbp - 0xac], eax
0x4004eb:	cmp	dword ptr [rbp - 0xac], -1
0x4004f2:	je	0x40058f
<Block for 0x40066d, 16 bytes>
0x40066d:	nop	
0x40066e:	mov	rax, qword ptr [rbp - 0x18]
0x400672:	xor	rax, qword ptr fs:[0x28]
0x40067b:	je	0x4006ba
<Block for 0x4004f8, 13 bytes>
0x4004f8:	cmp	dword ptr [rbp - 0xac], 0
0x4004ff:	je	0x40058f
<Block for 0x4006ba, 10 bytes>
0x4006ba:	add	rsp, 0xb8
0x4006c1:	pop	rbx
0x4006c2:	pop	rbp
0x4006c3:	ret	
<Block for 0x40067d, 2 bytes>
0x40067d:	jmp	0x4006b5
<Block for 0x400505, 52 bytes>
0x400505:	mov	eax, dword ptr [rbp - 0xac]
0x40050b:	movsxd	rdx, eax
0x40050e:	mov	rax, qword ptr [rbp - 0xa0]
0x400515:	add	rdx, rax
0x400518:	mov	rax, qword ptr [rbp - 0xa8]
0x40051f:	add	rax, rdx
0x400522:	mov	byte ptr [rax], 0
0x400525:	mov	rax, qword ptr [rbp - 0xa8]
0x40052c:	mov	esi, 0xd
0x400531:	mov	rdi, rax
0x400534:	call	0x500050
<Block for 0x4006b5, 5 bytes>
0x4006b5:	call	0x500070
<Block for 0x400539, 17 bytes>
0x400539:	mov	qword ptr [rbp - 0x98], rax
0x400540:	cmp	qword ptr [rbp - 0x98], 0
0x400548:	je	0x400554
<Block for 0x400554, 20 bytes>
0x400554:	mov	rax, qword ptr [rbp - 0xa8]
0x40055b:	mov	esi, 0xa
0x400560:	mov	rdi, rax
0x400563:	call	0x500050
<Block for 0x40054a, 30 bytes>
0x40054a:	mov	rax, qword ptr [rbp - 0x98]
0x400551:	mov	byte ptr [rax], 0
0x400554:	mov	rax, qword ptr [rbp - 0xa8]
0x40055b:	mov	esi, 0xa
0x400560:	mov	rdi, rax
0x400563:	call	0x500050
<Block for 0x400568, 17 bytes>
0x400568:	mov	qword ptr [rbp - 0x98], rax
0x40056f:	cmp	qword ptr [rbp - 0x98], 0
0x400577:	je	0x40058f
<Block for 0x400579, 12 bytes>
0x400579:	mov	rax, qword ptr [rbp - 0x98]
0x400580:	mov	byte ptr [rax], 0
0x400583:	jmp	0x40058f
