<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	edi, 0x64
0x400021:	call	0x500000
<Block for 0x400026, 11 bytes>
0x400026:	mov	qword ptr [rbp - 0x50], rax
0x40002a:	cmp	qword ptr [rbp - 0x50], 0
0x40002f:	jne	0x40003b
<Block for 0x400031, 10 bytes>
0x400031:	mov	edi, 0xffffffff
0x400036:	call	0x500008
<Block for 0x40003b, 33 bytes>
0x40003b:	mov	rax, qword ptr [rbp - 0x50]
0x40003f:	mov	byte ptr [rax], 0
0x400042:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400049:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400050:	mov	rax, qword ptr [rbp - 0x50]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 24 bytes>
0x40005c:	mov	qword ptr [rbp - 0x48], rax
0x400060:	mov	edx, 6
0x400065:	mov	esi, 1
0x40006a:	mov	edi, 2
0x40006f:	call	0x500018
<Block for 0x400074, 13 bytes>
0x400074:	mov	dword ptr [rbp - 0x58], eax
0x400077:	cmp	dword ptr [rbp - 0x58], -1
0x40007b:	je	0x4001a9
<Block for 0x4001a9, 3 bytes>
0x4001a9:	nop	
0x4001aa:	jmp	0x4001b3
<Block for 0x400081, 22 bytes>
0x400081:	lea	rax, [rbp - 0x30]
0x400085:	mov	edx, 0x10
0x40008a:	mov	esi, 0
0x40008f:	mov	rdi, rax
0x400092:	call	0x500020
<Block for 0x4001b3, 6 bytes>
0x4001b3:	cmp	dword ptr [rbp - 0x58], -1
0x4001b7:	je	0x4001c3
<Block for 0x400097, 23 bytes>
0x400097:	mov	word ptr [rbp - 0x30], 2
0x40009d:	mov	dword ptr [rbp - 0x2c], 0
0x4000a4:	mov	edi, 0x6987
0x4000a9:	call	0x500028
<Block for 0x4001c3, 6 bytes>
0x4001c3:	cmp	dword ptr [rbp - 0x5c], -1
0x4001c7:	je	0x4001d3
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	eax, dword ptr [rbp - 0x58]
0x4001bc:	mov	edi, eax
0x4001be:	call	0x500058
<Block for 0x4000ae, 26 bytes>
0x4000ae:	mov	word ptr [rbp - 0x2e], ax
0x4000b2:	lea	rcx, [rbp - 0x30]
0x4000b6:	mov	eax, dword ptr [rbp - 0x58]
0x4000b9:	mov	edx, 0x10
0x4000be:	mov	rsi, rcx
0x4000c1:	mov	edi, eax
0x4000c3:	call	0x500030
<Block for 0x4001d3, 10 bytes>
0x4001d3:	mov	edi, 8
0x4001d8:	call	0x500060
<Block for 0x4001c9, 10 bytes>
0x4001c9:	mov	eax, dword ptr [rbp - 0x5c]
0x4001cc:	mov	edi, eax
0x4001ce:	call	0x500058
<Block for 0x4000c8, 14 bytes>
0x4000c8:	cmp	eax, -1
0x4000cb:	sete	al
0x4000ce:	test	al, al
0x4000d0:	jne	0x4001ac
<Block for 0x4001dd, 11 bytes>
0x4001dd:	mov	rbx, rax
0x4001e0:	mov	rdi, rbx
0x4001e3:	call	0x40049e
<Block for 0x4000d6, 15 bytes>
0x4000d6:	mov	eax, dword ptr [rbp - 0x58]
0x4000d9:	mov	esi, 5
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500038
<Block for 0x4001ac, 3 bytes>
0x4001ac:	nop	
0x4001ad:	jmp	0x4001b3
<Block for 0x4001e8, 30 bytes>
0x4001e8:	mov	qword ptr [rbp - 0x38], rbx
0x4001ec:	mov	rax, qword ptr [rbp - 0x38]
0x4001f0:	mov	rax, qword ptr [rax]
0x4001f3:	mov	rcx, qword ptr [rax]
0x4001f6:	mov	rdx, qword ptr [rbp - 0x50]
0x4001fa:	mov	rax, qword ptr [rbp - 0x38]
0x4001fe:	mov	rsi, rdx
0x400201:	mov	rdi, rax
0x400204:	call	rcx
<Block for 0x4000e5, 14 bytes>
0x4000e5:	cmp	eax, -1
0x4000e8:	sete	al
0x4000eb:	test	al, al
0x4000ed:	jne	0x4001af
<Block for 0x400206, 9 bytes>
0x400206:	mov	rax, qword ptr [rbp - 0x38]
0x40020a:	test	rax, rax
0x40020d:	je	0x40021c
<Block for 0x4000f3, 20 bytes>
0x4000f3:	mov	eax, dword ptr [rbp - 0x58]
0x4000f6:	mov	edx, 0
0x4000fb:	mov	esi, 0
0x400100:	mov	edi, eax
0x400102:	call	0x500040
<Block for 0x4001af, 3 bytes>
0x4001af:	nop	
0x4001b0:	jmp	0x4001b3
<Block for 0x40021c, 16 bytes>
0x40021c:	nop	
0x40021d:	mov	rax, qword ptr [rbp - 0x18]
0x400221:	xor	rax, qword ptr fs:[0x28]
0x40022a:	je	0x400231
<Block for 0x40020f, 13 bytes>
0x40020f:	mov	esi, 8
0x400214:	mov	rdi, rax
0x400217:	call	0x500068
<Block for 0x400107, 13 bytes>
0x400107:	mov	dword ptr [rbp - 0x5c], eax
0x40010a:	cmp	dword ptr [rbp - 0x5c], -1
0x40010e:	je	0x4001b2
<Block for 0x400231, 7 bytes>
0x400231:	add	rsp, 0x58
0x400235:	pop	rbx
0x400236:	pop	rbp
0x400237:	ret	
<Block for 0x40022c, 5 bytes>
0x40022c:	call	0x500070
<Block for 0x400114, 39 bytes>
0x400114:	mov	eax, 0x63
0x400119:	sub	rax, qword ptr [rbp - 0x48]
0x40011d:	mov	rdx, rax
0x400120:	mov	rcx, qword ptr [rbp - 0x50]
0x400124:	mov	rax, qword ptr [rbp - 0x48]
0x400128:	lea	rsi, [rcx + rax]
0x40012c:	mov	eax, dword ptr [rbp - 0x5c]
0x40012f:	mov	ecx, 0
0x400134:	mov	edi, eax
0x400136:	call	0x500048
<Block for 0x4001b2, 1 bytes>
0x4001b2:	nop	
<Block for 0x40013b, 9 bytes>
0x40013b:	mov	dword ptr [rbp - 0x54], eax
0x40013e:	cmp	dword ptr [rbp - 0x54], -1
0x400142:	je	0x4001b3
<Block for 0x400144, 6 bytes>
0x400144:	cmp	dword ptr [rbp - 0x54], 0
0x400148:	je	0x4001b3
<Block for 0x40014a, 40 bytes>
0x40014a:	mov	eax, dword ptr [rbp - 0x54]
0x40014d:	movsxd	rdx, eax
0x400150:	mov	rax, qword ptr [rbp - 0x48]
0x400154:	add	rdx, rax
0x400157:	mov	rax, qword ptr [rbp - 0x50]
0x40015b:	add	rax, rdx
0x40015e:	mov	byte ptr [rax], 0
0x400161:	mov	rax, qword ptr [rbp - 0x50]
0x400165:	mov	esi, 0xd
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500050
<Block for 0x400172, 11 bytes>
0x400172:	mov	qword ptr [rbp - 0x40], rax
0x400176:	cmp	qword ptr [rbp - 0x40], 0
0x40017b:	je	0x400184
<Block for 0x400184, 17 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0x50]
0x400188:	mov	esi, 0xa
0x40018d:	mov	rdi, rax
0x400190:	call	0x500050
<Block for 0x40017d, 24 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x40]
0x400181:	mov	byte ptr [rax], 0
0x400184:	mov	rax, qword ptr [rbp - 0x50]
0x400188:	mov	esi, 0xa
0x40018d:	mov	rdi, rax
0x400190:	call	0x500050
<Block for 0x400195, 11 bytes>
0x400195:	mov	qword ptr [rbp - 0x40], rax
0x400199:	cmp	qword ptr [rbp - 0x40], 0
0x40019e:	je	0x4001b3
<Block for 0x4001a0, 9 bytes>
0x4001a0:	mov	rax, qword ptr [rbp - 0x40]
0x4001a4:	mov	byte ptr [rax], 0
0x4001a7:	jmp	0x4001b3
