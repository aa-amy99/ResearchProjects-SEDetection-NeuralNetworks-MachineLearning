<Block for 0x400238, 38 bytes>
0x400238:	endbr64	
0x40023c:	push	rbp
0x40023d:	mov	rbp, rsp
0x400240:	push	rbx
0x400241:	sub	rsp, 0x58
0x400245:	mov	rax, qword ptr fs:[0x28]
0x40024e:	mov	qword ptr [rbp - 0x18], rax
0x400252:	xor	eax, eax
0x400254:	mov	edi, 0x64
0x400259:	call	0x500000
<Block for 0x40025e, 11 bytes>
0x40025e:	mov	qword ptr [rbp - 0x50], rax
0x400262:	cmp	qword ptr [rbp - 0x50], 0
0x400267:	jne	0x400273
<Block for 0x400269, 10 bytes>
0x400269:	mov	edi, 0xffffffff
0x40026e:	call	0x500008
<Block for 0x400273, 33 bytes>
0x400273:	mov	rax, qword ptr [rbp - 0x50]
0x400277:	mov	byte ptr [rax], 0
0x40027a:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400281:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400288:	mov	rax, qword ptr [rbp - 0x50]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x500010
<Block for 0x400294, 24 bytes>
0x400294:	mov	qword ptr [rbp - 0x48], rax
0x400298:	mov	edx, 6
0x40029d:	mov	esi, 1
0x4002a2:	mov	edi, 2
0x4002a7:	call	0x500018
<Block for 0x4002ac, 13 bytes>
0x4002ac:	mov	dword ptr [rbp - 0x58], eax
0x4002af:	cmp	dword ptr [rbp - 0x58], -1
0x4002b3:	je	0x4003e1
<Block for 0x4003e1, 3 bytes>
0x4003e1:	nop	
0x4003e2:	jmp	0x4003eb
<Block for 0x4002b9, 22 bytes>
0x4002b9:	lea	rax, [rbp - 0x30]
0x4002bd:	mov	edx, 0x10
0x4002c2:	mov	esi, 0
0x4002c7:	mov	rdi, rax
0x4002ca:	call	0x500020
<Block for 0x4003eb, 6 bytes>
0x4003eb:	cmp	dword ptr [rbp - 0x58], -1
0x4003ef:	je	0x4003fb
<Block for 0x4002cf, 23 bytes>
0x4002cf:	mov	word ptr [rbp - 0x30], 2
0x4002d5:	mov	dword ptr [rbp - 0x2c], 0
0x4002dc:	mov	edi, 0x6987
0x4002e1:	call	0x500028
<Block for 0x4003fb, 6 bytes>
0x4003fb:	cmp	dword ptr [rbp - 0x5c], -1
0x4003ff:	je	0x40040b
<Block for 0x4003f1, 10 bytes>
0x4003f1:	mov	eax, dword ptr [rbp - 0x58]
0x4003f4:	mov	edi, eax
0x4003f6:	call	0x500058
<Block for 0x4002e6, 26 bytes>
0x4002e6:	mov	word ptr [rbp - 0x2e], ax
0x4002ea:	lea	rcx, [rbp - 0x30]
0x4002ee:	mov	eax, dword ptr [rbp - 0x58]
0x4002f1:	mov	edx, 0x10
0x4002f6:	mov	rsi, rcx
0x4002f9:	mov	edi, eax
0x4002fb:	call	0x500030
<Block for 0x40040b, 10 bytes>
0x40040b:	mov	edi, 8
0x400410:	call	0x500060
<Block for 0x400401, 10 bytes>
0x400401:	mov	eax, dword ptr [rbp - 0x5c]
0x400404:	mov	edi, eax
0x400406:	call	0x500058
<Block for 0x400300, 14 bytes>
0x400300:	cmp	eax, -1
0x400303:	sete	al
0x400306:	test	al, al
0x400308:	jne	0x4003e4
<Block for 0x400415, 11 bytes>
0x400415:	mov	rbx, rax
0x400418:	mov	rdi, rbx
0x40041b:	call	0x4004cc
<Block for 0x40030e, 15 bytes>
0x40030e:	mov	eax, dword ptr [rbp - 0x58]
0x400311:	mov	esi, 5
0x400316:	mov	edi, eax
0x400318:	call	0x500038
<Block for 0x4003e4, 3 bytes>
0x4003e4:	nop	
0x4003e5:	jmp	0x4003eb
<Block for 0x400420, 30 bytes>
0x400420:	mov	qword ptr [rbp - 0x38], rbx
0x400424:	mov	rax, qword ptr [rbp - 0x38]
0x400428:	mov	rax, qword ptr [rax]
0x40042b:	mov	rcx, qword ptr [rax]
0x40042e:	mov	rdx, qword ptr [rbp - 0x50]
0x400432:	mov	rax, qword ptr [rbp - 0x38]
0x400436:	mov	rsi, rdx
0x400439:	mov	rdi, rax
0x40043c:	call	rcx
<Block for 0x40031d, 14 bytes>
0x40031d:	cmp	eax, -1
0x400320:	sete	al
0x400323:	test	al, al
0x400325:	jne	0x4003e7
<Block for 0x40043e, 9 bytes>
0x40043e:	mov	rax, qword ptr [rbp - 0x38]
0x400442:	test	rax, rax
0x400445:	je	0x400454
<Block for 0x40032b, 20 bytes>
0x40032b:	mov	eax, dword ptr [rbp - 0x58]
0x40032e:	mov	edx, 0
0x400333:	mov	esi, 0
0x400338:	mov	edi, eax
0x40033a:	call	0x500040
<Block for 0x4003e7, 3 bytes>
0x4003e7:	nop	
0x4003e8:	jmp	0x4003eb
<Block for 0x400454, 16 bytes>
0x400454:	nop	
0x400455:	mov	rax, qword ptr [rbp - 0x18]
0x400459:	xor	rax, qword ptr fs:[0x28]
0x400462:	je	0x400469
<Block for 0x400447, 13 bytes>
0x400447:	mov	esi, 8
0x40044c:	mov	rdi, rax
0x40044f:	call	0x500068
<Block for 0x40033f, 13 bytes>
0x40033f:	mov	dword ptr [rbp - 0x5c], eax
0x400342:	cmp	dword ptr [rbp - 0x5c], -1
0x400346:	je	0x4003ea
<Block for 0x400469, 7 bytes>
0x400469:	add	rsp, 0x58
0x40046d:	pop	rbx
0x40046e:	pop	rbp
0x40046f:	ret	
<Block for 0x400464, 5 bytes>
0x400464:	call	0x500070
<Block for 0x40034c, 39 bytes>
0x40034c:	mov	eax, 0x63
0x400351:	sub	rax, qword ptr [rbp - 0x48]
0x400355:	mov	rdx, rax
0x400358:	mov	rcx, qword ptr [rbp - 0x50]
0x40035c:	mov	rax, qword ptr [rbp - 0x48]
0x400360:	lea	rsi, [rcx + rax]
0x400364:	mov	eax, dword ptr [rbp - 0x5c]
0x400367:	mov	ecx, 0
0x40036c:	mov	edi, eax
0x40036e:	call	0x500048
<Block for 0x4003ea, 1 bytes>
0x4003ea:	nop	
<Block for 0x400373, 9 bytes>
0x400373:	mov	dword ptr [rbp - 0x54], eax
0x400376:	cmp	dword ptr [rbp - 0x54], -1
0x40037a:	je	0x4003eb
<Block for 0x40037c, 6 bytes>
0x40037c:	cmp	dword ptr [rbp - 0x54], 0
0x400380:	je	0x4003eb
<Block for 0x400382, 40 bytes>
0x400382:	mov	eax, dword ptr [rbp - 0x54]
0x400385:	movsxd	rdx, eax
0x400388:	mov	rax, qword ptr [rbp - 0x48]
0x40038c:	add	rdx, rax
0x40038f:	mov	rax, qword ptr [rbp - 0x50]
0x400393:	add	rax, rdx
0x400396:	mov	byte ptr [rax], 0
0x400399:	mov	rax, qword ptr [rbp - 0x50]
0x40039d:	mov	esi, 0xd
0x4003a2:	mov	rdi, rax
0x4003a5:	call	0x500050
<Block for 0x4003aa, 11 bytes>
0x4003aa:	mov	qword ptr [rbp - 0x40], rax
0x4003ae:	cmp	qword ptr [rbp - 0x40], 0
0x4003b3:	je	0x4003bc
<Block for 0x4003bc, 17 bytes>
0x4003bc:	mov	rax, qword ptr [rbp - 0x50]
0x4003c0:	mov	esi, 0xa
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x500050
<Block for 0x4003b5, 24 bytes>
0x4003b5:	mov	rax, qword ptr [rbp - 0x40]
0x4003b9:	mov	byte ptr [rax], 0
0x4003bc:	mov	rax, qword ptr [rbp - 0x50]
0x4003c0:	mov	esi, 0xa
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x500050
<Block for 0x4003cd, 11 bytes>
0x4003cd:	mov	qword ptr [rbp - 0x40], rax
0x4003d1:	cmp	qword ptr [rbp - 0x40], 0
0x4003d6:	je	0x4003eb
<Block for 0x4003d8, 9 bytes>
0x4003d8:	mov	rax, qword ptr [rbp - 0x40]
0x4003dc:	mov	byte ptr [rax], 0
0x4003df:	jmp	0x4003eb
