<Block for 0x4000df, 55 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0xf0
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	lea	rax, [rbp - 0xe0]
0x400104:	mov	edx, 0x63
0x400109:	mov	esi, 0x41
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 14 bytes>
0x400116:	mov	byte ptr [rbp - 0x7d], 0
0x40011a:	mov	eax, 0
0x40011f:	call	0x40000f
<Block for 0x400124, 4 bytes>
0x400124:	test	eax, eax
0x400126:	je	0x400136
<Block for 0x400136, 36 bytes>
0x400136:	lea	rax, [rbp - 0xe0]
0x40013d:	mov	qword ptr [rbp - 0xe8], rax
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x400128, 12 bytes>
0x400128:	lea	rdi, [rip + 0x157]
0x40012f:	call	0x500018
<Block for 0x40015a, 16 bytes>
0x40015a:	mov	byte ptr [rbp - 0xd], 0
0x40015e:	lea	rax, [rbp - 0x70]
0x400162:	mov	rdi, rax
0x400165:	call	0x500008
<Block for 0x400134, 2 bytes>
0x400134:	jmp	0x400144
<Block for 0x40016a, 25 bytes>
0x40016a:	mov	rdx, rax
0x40016d:	mov	rcx, qword ptr [rbp - 0xe8]
0x400174:	lea	rax, [rbp - 0x70]
0x400178:	mov	rsi, rcx
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500010
<Block for 0x400144, 22 bytes>
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x400183, 16 bytes>
0x400183:	mov	byte ptr [rbp - 0xd], 0
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500018
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500020
