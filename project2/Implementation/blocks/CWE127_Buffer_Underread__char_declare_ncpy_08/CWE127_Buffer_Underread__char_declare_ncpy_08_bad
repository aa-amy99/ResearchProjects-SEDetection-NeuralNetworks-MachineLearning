<Block for 0x40001e, 55 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xf0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	lea	rax, [rbp - 0xe0]
0x400043:	mov	edx, 0x63
0x400048:	mov	esi, 0x41
0x40004d:	mov	rdi, rax
0x400050:	call	0x500000
<Block for 0x400055, 14 bytes>
0x400055:	mov	byte ptr [rbp - 0x7d], 0
0x400059:	mov	eax, 0
0x40005e:	call	0x400000
<Block for 0x400063, 4 bytes>
0x400063:	test	eax, eax
0x400065:	je	0x400079
<Block for 0x400079, 22 bytes>
0x400079:	lea	rax, [rbp - 0x70]
0x40007d:	mov	edx, 0x63
0x400082:	mov	esi, 0x43
0x400087:	mov	rdi, rax
0x40008a:	call	0x500000
<Block for 0x400067, 40 bytes>
0x400067:	lea	rax, [rbp - 0xe0]
0x40006e:	sub	rax, 8
0x400072:	mov	qword ptr [rbp - 0xe8], rax
0x400079:	lea	rax, [rbp - 0x70]
0x40007d:	mov	edx, 0x63
0x400082:	mov	esi, 0x43
0x400087:	mov	rdi, rax
0x40008a:	call	0x500000
<Block for 0x40008f, 16 bytes>
0x40008f:	mov	byte ptr [rbp - 0xd], 0
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500008
<Block for 0x40009f, 25 bytes>
0x40009f:	mov	rdx, rax
0x4000a2:	mov	rcx, qword ptr [rbp - 0xe8]
0x4000a9:	lea	rax, [rbp - 0x70]
0x4000ad:	mov	rsi, rcx
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500010
<Block for 0x4000b8, 16 bytes>
0x4000b8:	mov	byte ptr [rbp - 0xd], 0
0x4000bc:	lea	rax, [rbp - 0x70]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500018
<Block for 0x4000c8, 16 bytes>
0x4000c8:	nop	
0x4000c9:	mov	rax, qword ptr [rbp - 8]
0x4000cd:	xor	rax, qword ptr fs:[0x28]
0x4000d6:	je	0x4000dd
<Block for 0x4000dd, 2 bytes>
0x4000dd:	leave	
0x4000de:	ret	
<Block for 0x4000d8, 5 bytes>
0x4000d8:	call	0x500020
