<Block for 0x4001aa, 55 bytes>
0x4001aa:	endbr64	
0x4001ae:	push	rbp
0x4001af:	mov	rbp, rsp
0x4001b2:	sub	rsp, 0xf0
0x4001b9:	mov	rax, qword ptr fs:[0x28]
0x4001c2:	mov	qword ptr [rbp - 8], rax
0x4001c6:	xor	eax, eax
0x4001c8:	lea	rax, [rbp - 0xe0]
0x4001cf:	mov	edx, 0x63
0x4001d4:	mov	esi, 0x41
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x500000
<Block for 0x4001e1, 14 bytes>
0x4001e1:	mov	byte ptr [rbp - 0x7d], 0
0x4001e5:	mov	eax, 0
0x4001ea:	call	0x400000
<Block for 0x4001ef, 4 bytes>
0x4001ef:	test	eax, eax
0x4001f1:	je	0x400201
<Block for 0x400201, 22 bytes>
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x4001f3, 36 bytes>
0x4001f3:	lea	rax, [rbp - 0xe0]
0x4001fa:	mov	qword ptr [rbp - 0xe8], rax
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x400217, 16 bytes>
0x400217:	mov	byte ptr [rbp - 0xd], 0
0x40021b:	lea	rax, [rbp - 0x70]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500008
<Block for 0x400227, 25 bytes>
0x400227:	mov	rdx, rax
0x40022a:	mov	rcx, qword ptr [rbp - 0xe8]
0x400231:	lea	rax, [rbp - 0x70]
0x400235:	mov	rsi, rcx
0x400238:	mov	rdi, rax
0x40023b:	call	0x500010
<Block for 0x400240, 16 bytes>
0x400240:	mov	byte ptr [rbp - 0xd], 0
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500018
<Block for 0x400250, 16 bytes>
0x400250:	nop	
0x400251:	mov	rax, qword ptr [rbp - 8]
0x400255:	xor	rax, qword ptr fs:[0x28]
0x40025e:	je	0x400265
<Block for 0x400265, 2 bytes>
0x400265:	leave	
0x400266:	ret	
<Block for 0x400260, 5 bytes>
0x400260:	call	0x500020
