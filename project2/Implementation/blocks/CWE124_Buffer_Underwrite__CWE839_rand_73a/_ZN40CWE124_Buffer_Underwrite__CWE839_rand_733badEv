<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x40042c
<Block for 0x400028, 12 bytes>
0x400028:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40002f:	call	0x500000
<Block for 0x400034, 7 bytes>
0x400034:	and	eax, 1
0x400037:	test	eax, eax
0x400039:	je	0x400058
<Block for 0x400058, 5 bytes>
0x400058:	call	0x500000
<Block for 0x40003b, 5 bytes>
0x40003b:	call	0x500000
<Block for 0x40005d, 10 bytes>
0x40005d:	shl	eax, 0x1e
0x400060:	mov	ebx, eax
0x400062:	call	0x500000
<Block for 0x400040, 10 bytes>
0x400040:	shl	eax, 0x1e
0x400043:	mov	ebx, eax
0x400045:	call	0x500000
<Block for 0x400067, 10 bytes>
0x400067:	shl	eax, 0xf
0x40006a:	xor	ebx, eax
0x40006c:	call	0x500000
<Block for 0x40004a, 10 bytes>
0x40004a:	shl	eax, 0xf
0x40004d:	xor	ebx, eax
0x40004f:	call	0x500000
<Block for 0x400071, 26 bytes>
0x400071:	xor	eax, ebx
0x400073:	not	eax
0x400075:	mov	dword ptr [rbp - 0x54], eax
0x400078:	lea	rdx, [rbp - 0x54]
0x40007c:	lea	rax, [rbp - 0x50]
0x400080:	mov	rsi, rdx
0x400083:	mov	rdi, rax
0x400086:	call	0x400538
<Block for 0x400054, 4 bytes>
0x400054:	xor	eax, ebx
0x400056:	jmp	0x400075
<Block for 0x40008b, 19 bytes>
0x40008b:	lea	rdx, [rbp - 0x54]
0x40008f:	lea	rax, [rbp - 0x50]
0x400093:	mov	rsi, rdx
0x400096:	mov	rdi, rax
0x400099:	call	0x400538
<Block for 0x400075, 22 bytes>
0x400075:	mov	dword ptr [rbp - 0x54], eax
0x400078:	lea	rdx, [rbp - 0x54]
0x40007c:	lea	rax, [rbp - 0x50]
0x400080:	mov	rsi, rdx
0x400083:	mov	rdi, rax
0x400086:	call	0x400538
<Block for 0x40009e, 19 bytes>
0x40009e:	lea	rdx, [rbp - 0x54]
0x4000a2:	lea	rax, [rbp - 0x50]
0x4000a6:	mov	rsi, rdx
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x400538
<Block for 0x4000b1, 19 bytes>
0x4000b1:	lea	rdx, [rbp - 0x50]
0x4000b5:	lea	rax, [rbp - 0x30]
0x4000b9:	mov	rsi, rdx
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x400572
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rax, [rbp - 0x30]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500008
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rax, [rbp - 0x30]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x40044c
<Block for 0x4000dc, 12 bytes>
0x4000dc:	lea	rax, [rbp - 0x50]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x40044c
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 0x18]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x400132
<Block for 0x400132, 7 bytes>
0x400132:	add	rsp, 0x58
0x400136:	pop	rbx
0x400137:	pop	rbp
0x400138:	ret	
<Block for 0x4000f8, 2 bytes>
0x4000f8:	jmp	0x40012d
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500018
