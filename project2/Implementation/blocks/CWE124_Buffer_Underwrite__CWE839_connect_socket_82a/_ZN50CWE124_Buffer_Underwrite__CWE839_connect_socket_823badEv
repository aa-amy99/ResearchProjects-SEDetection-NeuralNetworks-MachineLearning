<Block for 0x400000, 62 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400023:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40002a:	mov	edx, 6
0x40002f:	mov	esi, 1
0x400034:	mov	edi, 2
0x400039:	call	0x500000
<Block for 0x40003e, 13 bytes>
0x40003e:	mov	dword ptr [rbp - 0x50], eax
0x400041:	cmp	dword ptr [rbp - 0x50], -1
0x400045:	je	0x4000e6
<Block for 0x4000e6, 3 bytes>
0x4000e6:	nop	
0x4000e7:	jmp	0x4000ea
<Block for 0x40004b, 22 bytes>
0x40004b:	lea	rax, [rbp - 0x40]
0x40004f:	mov	edx, 0x10
0x400054:	mov	esi, 0
0x400059:	mov	rdi, rax
0x40005c:	call	0x500008
<Block for 0x4000ea, 6 bytes>
0x4000ea:	cmp	dword ptr [rbp - 0x50], -1
0x4000ee:	je	0x4000fa
<Block for 0x400061, 18 bytes>
0x400061:	mov	word ptr [rbp - 0x40], 2
0x400067:	lea	rdi, [rip + 0x317]
0x40006e:	call	0x500010
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	edi, 8
0x4000ff:	call	0x500040
<Block for 0x4000f0, 10 bytes>
0x4000f0:	mov	eax, dword ptr [rbp - 0x50]
0x4000f3:	mov	edi, eax
0x4000f5:	call	0x500038
<Block for 0x400073, 13 bytes>
0x400073:	mov	dword ptr [rbp - 0x3c], eax
0x400076:	mov	edi, 0x6987
0x40007b:	call	0x500018
<Block for 0x400104, 11 bytes>
0x400104:	mov	rbx, rax
0x400107:	mov	rdi, rbx
0x40010a:	call	0x400358
<Block for 0x400080, 26 bytes>
0x400080:	mov	word ptr [rbp - 0x3e], ax
0x400084:	lea	rcx, [rbp - 0x40]
0x400088:	mov	eax, dword ptr [rbp - 0x50]
0x40008b:	mov	edx, 0x10
0x400090:	mov	rsi, rcx
0x400093:	mov	edi, eax
0x400095:	call	0x500020
<Block for 0x40010f, 28 bytes>
0x40010f:	mov	qword ptr [rbp - 0x48], rbx
0x400113:	mov	rax, qword ptr [rbp - 0x48]
0x400117:	mov	rax, qword ptr [rax]
0x40011a:	mov	rcx, qword ptr [rax]
0x40011d:	mov	edx, dword ptr [rbp - 0x54]
0x400120:	mov	rax, qword ptr [rbp - 0x48]
0x400124:	mov	esi, edx
0x400126:	mov	rdi, rax
0x400129:	call	rcx
<Block for 0x40009a, 10 bytes>
0x40009a:	cmp	eax, -1
0x40009d:	sete	al
0x4000a0:	test	al, al
0x4000a2:	jne	0x4000e9
<Block for 0x40012b, 9 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0x48]
0x40012f:	test	rax, rax
0x400132:	je	0x400141
<Block for 0x4000a4, 24 bytes>
0x4000a4:	lea	rsi, [rbp - 0x26]
0x4000a8:	mov	eax, dword ptr [rbp - 0x50]
0x4000ab:	mov	ecx, 0
0x4000b0:	mov	edx, 0xd
0x4000b5:	mov	edi, eax
0x4000b7:	call	0x500028
<Block for 0x4000e9, 1 bytes>
0x4000e9:	nop	
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 0x18]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400134, 13 bytes>
0x400134:	mov	esi, 8
0x400139:	mov	rdi, rax
0x40013c:	call	0x500048
<Block for 0x4000bc, 9 bytes>
0x4000bc:	mov	dword ptr [rbp - 0x4c], eax
0x4000bf:	cmp	dword ptr [rbp - 0x4c], -1
0x4000c3:	je	0x4000ea
<Block for 0x400156, 7 bytes>
0x400156:	add	rsp, 0x58
0x40015a:	pop	rbx
0x40015b:	pop	rbp
0x40015c:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500050
<Block for 0x4000c5, 6 bytes>
0x4000c5:	cmp	dword ptr [rbp - 0x4c], 0
0x4000c9:	je	0x4000ea
<Block for 0x4000cb, 22 bytes>
0x4000cb:	mov	eax, dword ptr [rbp - 0x4c]
0x4000ce:	cdqe	
0x4000d0:	mov	byte ptr [rbp + rax - 0x26], 0
0x4000d5:	lea	rax, [rbp - 0x26]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500030
<Block for 0x4000e1, 5 bytes>
0x4000e1:	mov	dword ptr [rbp - 0x54], eax
0x4000e4:	jmp	0x4000ea
