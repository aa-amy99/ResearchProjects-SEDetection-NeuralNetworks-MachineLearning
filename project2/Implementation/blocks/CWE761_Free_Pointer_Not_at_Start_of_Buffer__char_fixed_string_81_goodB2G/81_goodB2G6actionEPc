<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	qword ptr [rbp - 0x20], rsi
0x400014:	mov	qword ptr [rbp - 8], 0
0x40001c:	mov	rax, qword ptr [rbp - 0x20]
0x400020:	mov	rdi, rax
0x400023:	call	0x500000
<Block for 0x400028, 6 bytes>
0x400028:	cmp	qword ptr [rbp - 8], rax
0x40002c:	jae	0x400055
<Block for 0x40002e, 18 bytes>
0x40002e:	mov	rdx, qword ptr [rbp - 0x20]
0x400032:	mov	rax, qword ptr [rbp - 8]
0x400036:	add	rax, rdx
0x400039:	movzx	eax, byte ptr [rax]
0x40003c:	cmp	al, 0x53
0x40003e:	jne	0x40004e
<Block for 0x400055, 12 bytes>
0x400055:	mov	rax, qword ptr [rbp - 0x20]
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x400040, 12 bytes>
0x400040:	lea	rdi, [rip + 0x1d]
0x400047:	call	0x500008
<Block for 0x40004e, 7 bytes>
0x40004e:	add	qword ptr [rbp - 8], 1
0x400053:	jmp	0x40001c
<Block for 0x400061, 3 bytes>
0x400061:	nop	
0x400062:	leave	
0x400063:	ret	
<Block for 0x40004c, 2 bytes>
0x40004c:	jmp	0x400055
<Block for 0x40001c, 12 bytes>
0x40001c:	mov	rax, qword ptr [rbp - 0x20]
0x400020:	mov	rdi, rax
0x400023:	call	0x500000
