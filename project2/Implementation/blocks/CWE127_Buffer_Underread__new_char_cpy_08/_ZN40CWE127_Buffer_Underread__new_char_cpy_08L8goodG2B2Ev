<Block for 0x4001e2, 46 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0xe0
0x4001f1:	mov	rax, qword ptr fs:[0x28]
0x4001fa:	mov	qword ptr [rbp - 8], rax
0x4001fe:	xor	eax, eax
0x400200:	mov	qword ptr [rbp - 0xe0], 0
0x40020b:	call	0x400000
<Block for 0x400210, 9 bytes>
0x400210:	test	eax, eax
0x400212:	setne	al
0x400215:	test	al, al
0x400217:	je	0x40025f
<Block for 0x40025f, 25 bytes>
0x40025f:	lea	rax, [rbp - 0xd0]
0x400266:	mov	edx, 0xc7
0x40026b:	mov	esi, 0x43
0x400270:	mov	rdi, rax
0x400273:	call	0x500008
<Block for 0x400219, 10 bytes>
0x400219:	mov	edi, 0x64
0x40021e:	call	0x500000
<Block for 0x400278, 29 bytes>
0x400278:	mov	byte ptr [rbp - 9], 0
0x40027c:	mov	rdx, qword ptr [rbp - 0xe0]
0x400283:	lea	rax, [rbp - 0xd0]
0x40028a:	mov	rsi, rdx
0x40028d:	mov	rdi, rax
0x400290:	call	0x500010
<Block for 0x400223, 32 bytes>
0x400223:	mov	qword ptr [rbp - 0xd8], rax
0x40022a:	mov	rax, qword ptr [rbp - 0xd8]
0x400231:	mov	edx, 0x63
0x400236:	mov	esi, 0x41
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500008
<Block for 0x400295, 15 bytes>
0x400295:	lea	rax, [rbp - 0xd0]
0x40029c:	mov	rdi, rax
0x40029f:	call	0x500018
<Block for 0x400243, 53 bytes>
0x400243:	mov	rax, qword ptr [rbp - 0xd8]
0x40024a:	add	rax, 0x63
0x40024e:	mov	byte ptr [rax], 0
0x400251:	mov	rax, qword ptr [rbp - 0xd8]
0x400258:	mov	qword ptr [rbp - 0xe0], rax
0x40025f:	lea	rax, [rbp - 0xd0]
0x400266:	mov	edx, 0xc7
0x40026b:	mov	esi, 0x43
0x400270:	mov	rdi, rax
0x400273:	call	0x500008
<Block for 0x4002a4, 16 bytes>
0x4002a4:	nop	
0x4002a5:	mov	rax, qword ptr [rbp - 8]
0x4002a9:	xor	rax, qword ptr fs:[0x28]
0x4002b2:	je	0x4002b9
<Block for 0x4002b9, 2 bytes>
0x4002b9:	leave	
0x4002ba:	ret	
<Block for 0x4002b4, 5 bytes>
0x4002b4:	call	0x500020
