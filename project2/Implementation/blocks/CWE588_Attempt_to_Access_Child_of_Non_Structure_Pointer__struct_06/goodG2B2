<Block for 0x4000d8, 58 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	sub	rsp, 0x20
0x4000e4:	mov	rax, qword ptr fs:[0x28]
0x4000ed:	mov	qword ptr [rbp - 8], rax
0x4000f1:	xor	eax, eax
0x4000f3:	mov	dword ptr [rbp - 0x1c], 0x64
0x4000fa:	mov	dword ptr [rbp - 0x10], 0
0x400101:	mov	dword ptr [rbp - 0xc], 0
0x400108:	mov	eax, 5
0x40010d:	cmp	eax, 5
0x400110:	jne	0x40011a
<Block for 0x400112, 20 bytes>
0x400112:	lea	rax, [rbp - 0x10]
0x400116:	mov	qword ptr [rbp - 0x18], rax
0x40011a:	mov	rax, qword ptr [rbp - 0x18]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x40011a, 12 bytes>
0x40011a:	mov	rax, qword ptr [rbp - 0x18]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x400126, 16 bytes>
0x400126:	nop	
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	xor	rax, qword ptr fs:[0x28]
0x400134:	je	0x40013b
<Block for 0x40013b, 2 bytes>
0x40013b:	leave	
0x40013c:	ret	
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500008
