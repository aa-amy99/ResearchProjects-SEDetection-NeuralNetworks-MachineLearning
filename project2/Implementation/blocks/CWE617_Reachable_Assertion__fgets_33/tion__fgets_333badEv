<Block for 0x400000, 87 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x28]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40002a:	mov	qword ptr [rbp - 0x16], 0
0x400032:	mov	dword ptr [rbp - 0xe], 0
0x400039:	mov	word ptr [rbp - 0xa], 0
0x40003f:	mov	rdx, qword ptr [rip + 0xfffba]
0x400046:	lea	rax, [rbp - 0x16]
0x40004a:	mov	esi, 0xe
0x40004f:	mov	rdi, rax
0x400052:	call	0x500008
<Block for 0x400057, 10 bytes>
0x400057:	test	rax, rax
0x40005a:	setne	al
0x40005d:	test	al, al
0x40005f:	je	0x400072
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0xdf]
0x400079:	call	0x500018
<Block for 0x400061, 12 bytes>
0x400061:	lea	rax, [rbp - 0x16]
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x40007e, 15 bytes>
0x40007e:	mov	rax, qword ptr [rbp - 0x20]
0x400082:	mov	eax, dword ptr [rax]
0x400084:	mov	dword ptr [rbp - 0x24], eax
0x400087:	cmp	dword ptr [rbp - 0x24], 5
0x40008b:	jg	0x4000b8
<Block for 0x40006d, 5 bytes>
0x40006d:	mov	dword ptr [rbp - 0x28], eax
0x400070:	jmp	0x40007e
<Block for 0x40008d, 31 bytes>
0x40008d:	lea	rcx, [rip + 0xd4]
0x400094:	mov	edx, 0x34
0x400099:	lea	rsi, [rip + 0x100]
0x4000a0:	lea	rdi, [rip + 0x122]
0x4000a7:	call	0x500020
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000ac, 12 bytes>
0x4000ac:	endbr64	
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500028
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500030
