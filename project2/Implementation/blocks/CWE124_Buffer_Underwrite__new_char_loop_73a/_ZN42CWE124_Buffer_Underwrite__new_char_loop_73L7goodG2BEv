<Block for 0x40012c, 40 bytes>
0x40012c:	endbr64	
0x400130:	push	rbp
0x400131:	mov	rbp, rsp
0x400134:	push	rbx
0x400135:	sub	rsp, 0x58
0x400139:	mov	rax, qword ptr fs:[0x28]
0x400142:	mov	qword ptr [rbp - 0x18], rax
0x400146:	xor	eax, eax
0x400148:	lea	rax, [rbp - 0x50]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x400312
<Block for 0x400154, 18 bytes>
0x400154:	mov	qword ptr [rbp - 0x60], 0
0x40015c:	mov	edi, 0x64
0x400161:	call	0x500000
<Block for 0x400166, 26 bytes>
0x400166:	mov	qword ptr [rbp - 0x58], rax
0x40016a:	mov	rax, qword ptr [rbp - 0x58]
0x40016e:	mov	edx, 0x63
0x400173:	mov	esi, 0x41
0x400178:	mov	rdi, rax
0x40017b:	call	0x500008
<Block for 0x400180, 38 bytes>
0x400180:	mov	rax, qword ptr [rbp - 0x58]
0x400184:	add	rax, 0x63
0x400188:	mov	byte ptr [rax], 0
0x40018b:	mov	rax, qword ptr [rbp - 0x58]
0x40018f:	mov	qword ptr [rbp - 0x60], rax
0x400193:	lea	rdx, [rbp - 0x60]
0x400197:	lea	rax, [rbp - 0x50]
0x40019b:	mov	rsi, rdx
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x40040a
<Block for 0x4001a6, 19 bytes>
0x4001a6:	lea	rdx, [rbp - 0x60]
0x4001aa:	lea	rax, [rbp - 0x50]
0x4001ae:	mov	rsi, rdx
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x40040a
<Block for 0x4001b9, 19 bytes>
0x4001b9:	lea	rdx, [rbp - 0x60]
0x4001bd:	lea	rax, [rbp - 0x50]
0x4001c1:	mov	rsi, rdx
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x40040a
<Block for 0x4001cc, 19 bytes>
0x4001cc:	lea	rdx, [rbp - 0x50]
0x4001d0:	lea	rax, [rbp - 0x30]
0x4001d4:	mov	rsi, rdx
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x400444
<Block for 0x4001df, 12 bytes>
0x4001df:	lea	rax, [rbp - 0x30]
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500028
<Block for 0x4001eb, 12 bytes>
0x4001eb:	lea	rax, [rbp - 0x30]
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x400332
<Block for 0x4001f7, 12 bytes>
0x4001f7:	lea	rax, [rbp - 0x50]
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x400332
<Block for 0x400203, 16 bytes>
0x400203:	nop	
0x400204:	mov	rax, qword ptr [rbp - 0x18]
0x400208:	xor	rax, qword ptr fs:[0x28]
0x400211:	je	0x40024d
<Block for 0x40024d, 7 bytes>
0x40024d:	add	rsp, 0x58
0x400251:	pop	rbx
0x400252:	pop	rbp
0x400253:	ret	
<Block for 0x400213, 2 bytes>
0x400213:	jmp	0x400248
<Block for 0x400248, 5 bytes>
0x400248:	call	0x500020
