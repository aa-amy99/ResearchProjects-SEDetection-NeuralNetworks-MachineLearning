<Block for 0x400212, 44 bytes>
0x400212:	endbr64	
0x400216:	push	rbp
0x400217:	mov	rbp, rsp
0x40021a:	sub	rsp, 0x50
0x40021e:	mov	rax, qword ptr fs:[0x28]
0x400227:	mov	qword ptr [rbp - 8], rax
0x40022b:	xor	eax, eax
0x40022d:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400234:	mov	eax, 0
0x400239:	call	0x400000
<Block for 0x40023e, 4 bytes>
0x40023e:	test	eax, eax
0x400240:	je	0x400291
<Block for 0x400291, 10 bytes>
0x400291:	mov	eax, 0
0x400296:	call	0x400000
<Block for 0x400242, 45 bytes>
0x400242:	mov	qword ptr [rbp - 0x16], 0
0x40024a:	mov	dword ptr [rbp - 0xe], 0
0x400251:	mov	word ptr [rbp - 0xa], 0
0x400257:	mov	rdx, qword ptr [rip + 0xffda2]
0x40025e:	lea	rax, [rbp - 0x16]
0x400262:	mov	esi, 0xe
0x400267:	mov	rdi, rax
0x40026a:	call	0x500008
<Block for 0x40029b, 4 bytes>
0x40029b:	test	eax, eax
0x40029d:	je	0x4002f1
<Block for 0x40026f, 5 bytes>
0x40026f:	test	rax, rax
0x400272:	je	0x400285
<Block for 0x4002f1, 16 bytes>
0x4002f1:	nop	
0x4002f2:	mov	rax, qword ptr [rbp - 8]
0x4002f6:	xor	rax, qword ptr fs:[0x28]
0x4002ff:	je	0x400306
<Block for 0x40029f, 46 bytes>
0x40029f:	mov	qword ptr [rbp - 0x40], 0
0x4002a7:	mov	qword ptr [rbp - 0x38], 0
0x4002af:	mov	qword ptr [rbp - 0x30], 0
0x4002b7:	mov	qword ptr [rbp - 0x28], 0
0x4002bf:	mov	qword ptr [rbp - 0x20], 0
0x4002c7:	cmp	dword ptr [rbp - 0x44], 0
0x4002cb:	js	0x4002e5
<Block for 0x400285, 12 bytes>
0x400285:	lea	rdi, [rip + 0x214]
0x40028c:	call	0x500018
<Block for 0x400274, 12 bytes>
0x400274:	lea	rax, [rbp - 0x16]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500010
<Block for 0x400306, 2 bytes>
0x400306:	leave	
0x400307:	ret	
<Block for 0x400301, 5 bytes>
0x400301:	call	0x500028
<Block for 0x4002e5, 12 bytes>
0x4002e5:	lea	rdi, [rip + 0x1fc]
0x4002ec:	call	0x500018
<Block for 0x4002cd, 6 bytes>
0x4002cd:	cmp	dword ptr [rbp - 0x44], 9
0x4002d1:	jg	0x4002e5
<Block for 0x400280, 5 bytes>
0x400280:	mov	dword ptr [rbp - 0x44], eax
0x400283:	jmp	0x400291
<Block for 0x4002d3, 16 bytes>
0x4002d3:	mov	eax, dword ptr [rbp - 0x44]
0x4002d6:	cdqe	
0x4002d8:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002dc:	mov	edi, eax
0x4002de:	call	0x500020
<Block for 0x4002e3, 2 bytes>
0x4002e3:	jmp	0x4002f1
