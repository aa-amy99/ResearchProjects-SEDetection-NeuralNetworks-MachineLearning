<Block for 0x400590, 40 bytes>
0x400590:	endbr64	
0x400594:	push	rbp
0x400595:	mov	rbp, rsp
0x400598:	push	rbx
0x400599:	sub	rsp, 0x38
0x40059d:	mov	rax, qword ptr fs:[0x28]
0x4005a6:	mov	qword ptr [rbp - 0x18], rax
0x4005aa:	xor	eax, eax
0x4005ac:	lea	rax, [rbp - 0x30]
0x4005b0:	mov	rdi, rax
0x4005b3:	call	0x400858
<Block for 0x4005b8, 26 bytes>
0x4005b8:	mov	dword ptr [rbp - 0x38], 0x64
0x4005bf:	lea	rdx, [rbp - 0x38]
0x4005c3:	lea	rax, [rbp - 0x30]
0x4005c7:	mov	rsi, rdx
0x4005ca:	mov	rdi, rax
0x4005cd:	call	0x40095e
<Block for 0x4005d2, 26 bytes>
0x4005d2:	mov	dword ptr [rbp - 0x38], 0xc8
0x4005d9:	lea	rdx, [rbp - 0x38]
0x4005dd:	lea	rax, [rbp - 0x30]
0x4005e1:	mov	rsi, rdx
0x4005e4:	mov	rdi, rax
0x4005e7:	call	0x40095e
<Block for 0x4005ec, 12 bytes>
0x4005ec:	lea	rax, [rbp - 0x40]
0x4005f0:	mov	rdi, rax
0x4005f3:	call	0x4009ac
<Block for 0x4005f8, 19 bytes>
0x4005f8:	lea	rsi, [rip + 0x1ad]
0x4005ff:	lea	rdi, [rip + 0xff9fa]
0x400606:	call	0x500008
<Block for 0x40060b, 12 bytes>
0x40060b:	lea	rax, [rbp - 0x30]
0x40060f:	mov	rdi, rax
0x400612:	call	0x4009c6
<Block for 0x400617, 16 bytes>
0x400617:	mov	qword ptr [rbp - 0x40], rax
0x40061b:	lea	rax, [rbp - 0x30]
0x40061f:	mov	rdi, rax
0x400622:	call	0x400a16
<Block for 0x400627, 23 bytes>
0x400627:	mov	qword ptr [rbp - 0x38], rax
0x40062b:	lea	rdx, [rbp - 0x38]
0x40062f:	lea	rax, [rbp - 0x40]
0x400633:	mov	rsi, rdx
0x400636:	mov	rdi, rax
0x400639:	call	0x400a62
<Block for 0x40063e, 4 bytes>
0x40063e:	test	al, al
0x400640:	je	0x4006a9
<Block for 0x4006a9, 22 bytes>
0x4006a9:	mov	rax, qword ptr [rip + 0xff970]
0x4006b0:	mov	rsi, rax
0x4006b3:	lea	rdi, [rip + 0xff946]
0x4006ba:	call	0x500028
<Block for 0x400642, 12 bytes>
0x400642:	lea	rax, [rbp - 0x40]
0x400646:	mov	rdi, rax
0x400649:	call	0x400ae0
<Block for 0x4006bf, 12 bytes>
0x4006bf:	lea	rax, [rbp - 0x30]
0x4006c3:	mov	rdi, rax
0x4006c6:	call	0x400878
<Block for 0x40064e, 11 bytes>
0x40064e:	mov	eax, dword ptr [rax]
0x400650:	test	eax, eax
0x400652:	sete	al
0x400655:	test	al, al
0x400657:	je	0x400665
<Block for 0x4006cb, 16 bytes>
0x4006cb:	nop	
0x4006cc:	mov	rax, qword ptr [rbp - 0x18]
0x4006d0:	xor	rax, qword ptr fs:[0x28]
0x4006d9:	je	0x400700
<Block for 0x400665, 19 bytes>
0x400665:	lea	rsi, [rip + 0x154]
0x40066c:	lea	rdi, [rip + 0xff98d]
0x400673:	call	0x500008
<Block for 0x400659, 12 bytes>
0x400659:	lea	rax, [rbp - 0x30]
0x40065d:	mov	rdi, rax
0x400660:	call	0x400b02
<Block for 0x400700, 7 bytes>
0x400700:	add	rsp, 0x38
0x400704:	pop	rbx
0x400705:	pop	rbp
0x400706:	ret	
<Block for 0x4006db, 2 bytes>
0x4006db:	jmp	0x4006fb
<Block for 0x400678, 15 bytes>
0x400678:	mov	rbx, rax
0x40067b:	lea	rax, [rbp - 0x40]
0x40067f:	mov	rdi, rax
0x400682:	call	0x400ae0
<Block for 0x4006fb, 5 bytes>
0x4006fb:	call	0x500038
<Block for 0x400687, 12 bytes>
0x400687:	mov	eax, dword ptr [rax]
0x400689:	mov	esi, eax
0x40068b:	mov	rdi, rbx
0x40068e:	call	0x500010
<Block for 0x400693, 17 bytes>
0x400693:	lea	rax, [rbp - 0x40]
0x400697:	mov	esi, 0
0x40069c:	mov	rdi, rax
0x40069f:	call	0x400a88
<Block for 0x4006a4, 5 bytes>
0x4006a4:	jmp	0x40061b
<Block for 0x40061b, 12 bytes>
0x40061b:	lea	rax, [rbp - 0x30]
0x40061f:	mov	rdi, rax
0x400622:	call	0x400a16
