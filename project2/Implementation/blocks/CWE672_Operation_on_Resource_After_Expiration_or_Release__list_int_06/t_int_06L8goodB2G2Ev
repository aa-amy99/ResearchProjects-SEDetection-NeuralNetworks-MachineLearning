<Block for 0x4002c8, 40 bytes>
0x4002c8:	endbr64	
0x4002cc:	push	rbp
0x4002cd:	mov	rbp, rsp
0x4002d0:	push	rbx
0x4002d1:	sub	rsp, 0x38
0x4002d5:	mov	rax, qword ptr fs:[0x28]
0x4002de:	mov	qword ptr [rbp - 0x18], rax
0x4002e2:	xor	eax, eax
0x4002e4:	lea	rax, [rbp - 0x30]
0x4002e8:	mov	rdi, rax
0x4002eb:	call	0x400858
<Block for 0x4002f0, 26 bytes>
0x4002f0:	mov	dword ptr [rbp - 0x38], 0x64
0x4002f7:	lea	rdx, [rbp - 0x38]
0x4002fb:	lea	rax, [rbp - 0x30]
0x4002ff:	mov	rsi, rdx
0x400302:	mov	rdi, rax
0x400305:	call	0x40095e
<Block for 0x40030a, 26 bytes>
0x40030a:	mov	dword ptr [rbp - 0x38], 0
0x400311:	lea	rdx, [rbp - 0x38]
0x400315:	lea	rax, [rbp - 0x30]
0x400319:	mov	rsi, rdx
0x40031c:	mov	rdi, rax
0x40031f:	call	0x40095e
<Block for 0x400324, 12 bytes>
0x400324:	lea	rax, [rbp - 0x40]
0x400328:	mov	rdi, rax
0x40032b:	call	0x4009ac
<Block for 0x400330, 19 bytes>
0x400330:	lea	rsi, [rip + 0x475]
0x400337:	lea	rdi, [rip + 0xffcc2]
0x40033e:	call	0x500008
<Block for 0x400343, 12 bytes>
0x400343:	lea	rax, [rbp - 0x30]
0x400347:	mov	rdi, rax
0x40034a:	call	0x4009c6
<Block for 0x40034f, 16 bytes>
0x40034f:	mov	qword ptr [rbp - 0x40], rax
0x400353:	lea	rax, [rbp - 0x30]
0x400357:	mov	rdi, rax
0x40035a:	call	0x400a16
<Block for 0x40035f, 23 bytes>
0x40035f:	mov	qword ptr [rbp - 0x38], rax
0x400363:	lea	rdx, [rbp - 0x38]
0x400367:	lea	rax, [rbp - 0x40]
0x40036b:	mov	rsi, rdx
0x40036e:	mov	rdi, rax
0x400371:	call	0x400a62
<Block for 0x400376, 4 bytes>
0x400376:	test	al, al
0x400378:	je	0x4003bb
<Block for 0x4003bb, 22 bytes>
0x4003bb:	mov	rax, qword ptr [rip + 0xffc5e]
0x4003c2:	mov	rsi, rax
0x4003c5:	lea	rdi, [rip + 0xffc34]
0x4003cc:	call	0x500028
<Block for 0x40037a, 19 bytes>
0x40037a:	lea	rsi, [rip + 0x43f]
0x400381:	lea	rdi, [rip + 0xffc78]
0x400388:	call	0x500008
<Block for 0x4003d1, 12 bytes>
0x4003d1:	lea	rax, [rbp - 0x30]
0x4003d5:	mov	rdi, rax
0x4003d8:	call	0x400878
<Block for 0x40038d, 15 bytes>
0x40038d:	mov	rbx, rax
0x400390:	lea	rax, [rbp - 0x40]
0x400394:	mov	rdi, rax
0x400397:	call	0x400ae0
<Block for 0x4003dd, 16 bytes>
0x4003dd:	nop	
0x4003de:	mov	rax, qword ptr [rbp - 0x18]
0x4003e2:	xor	rax, qword ptr fs:[0x28]
0x4003eb:	je	0x400412
<Block for 0x40039c, 12 bytes>
0x40039c:	mov	eax, dword ptr [rax]
0x40039e:	mov	esi, eax
0x4003a0:	mov	rdi, rbx
0x4003a3:	call	0x500010
<Block for 0x400412, 7 bytes>
0x400412:	add	rsp, 0x38
0x400416:	pop	rbx
0x400417:	pop	rbp
0x400418:	ret	
<Block for 0x4003ed, 2 bytes>
0x4003ed:	jmp	0x40040d
<Block for 0x4003a8, 17 bytes>
0x4003a8:	lea	rax, [rbp - 0x40]
0x4003ac:	mov	esi, 0
0x4003b1:	mov	rdi, rax
0x4003b4:	call	0x400a88
<Block for 0x40040d, 5 bytes>
0x40040d:	call	0x500038
<Block for 0x4003b9, 2 bytes>
0x4003b9:	jmp	0x400353
<Block for 0x400353, 12 bytes>
0x400353:	lea	rax, [rbp - 0x30]
0x400357:	mov	rdi, rax
0x40035a:	call	0x400a16
