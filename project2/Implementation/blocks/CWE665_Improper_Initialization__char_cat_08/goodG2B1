<Block for 0x4000aa, 54 bytes>
0x4000aa:	endbr64	
0x4000ae:	push	rbp
0x4000af:	mov	rbp, rsp
0x4000b2:	sub	rsp, 0xf0
0x4000b9:	mov	rax, qword ptr fs:[0x28]
0x4000c2:	mov	qword ptr [rbp - 8], rax
0x4000c6:	xor	eax, eax
0x4000c8:	lea	rax, [rbp - 0xe0]
0x4000cf:	mov	qword ptr [rbp - 0xe8], rax
0x4000d6:	mov	eax, 0
0x4000db:	call	0x40000f
<Block for 0x4000e0, 4 bytes>
0x4000e0:	test	eax, eax
0x4000e2:	je	0x4000f2
<Block for 0x4000f2, 32 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f9:	mov	byte ptr [rax], 0
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x43
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x4000e4, 12 bytes>
0x4000e4:	lea	rdi, [rip + 0x120]
0x4000eb:	call	0x500010
<Block for 0x400112, 26 bytes>
0x400112:	mov	byte ptr [rbp - 0xd], 0
0x400116:	lea	rdx, [rbp - 0x70]
0x40011a:	mov	rax, qword ptr [rbp - 0xe8]
0x400121:	mov	rsi, rdx
0x400124:	mov	rdi, rax
0x400127:	call	0x500008
<Block for 0x4000f0, 2 bytes>
0x4000f0:	jmp	0x4000fc
<Block for 0x40012c, 15 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0xe8]
0x400133:	mov	rdi, rax
0x400136:	call	0x500010
<Block for 0x4000fc, 22 bytes>
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x43
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500018
