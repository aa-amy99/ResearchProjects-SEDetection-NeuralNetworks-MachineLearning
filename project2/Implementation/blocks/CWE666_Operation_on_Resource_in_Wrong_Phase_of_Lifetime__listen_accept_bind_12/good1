<Block for 0x4004d0, 40 bytes>
0x4004d0:	endbr64	
0x4004d4:	push	rbp
0x4004d5:	mov	rbp, rsp
0x4004d8:	sub	rsp, 0xc0
0x4004df:	mov	rax, qword ptr fs:[0x28]
0x4004e8:	mov	qword ptr [rbp - 8], rax
0x4004ec:	xor	eax, eax
0x4004ee:	mov	eax, 0
0x4004f3:	call	0x500000
<Block for 0x4004f8, 8 bytes>
0x4004f8:	test	eax, eax
0x4004fa:	je	0x400747
<Block for 0x400747, 135 bytes>
0x400747:	mov	qword ptr [rbp - 0x70], 0
0x40074f:	mov	qword ptr [rbp - 0x68], 0
0x400757:	mov	qword ptr [rbp - 0x60], 0
0x40075f:	mov	qword ptr [rbp - 0x58], 0
0x400767:	mov	qword ptr [rbp - 0x50], 0
0x40076f:	mov	qword ptr [rbp - 0x48], 0
0x400777:	mov	qword ptr [rbp - 0x40], 0
0x40077f:	mov	qword ptr [rbp - 0x38], 0
0x400787:	mov	qword ptr [rbp - 0x30], 0
0x40078f:	mov	qword ptr [rbp - 0x28], 0
0x400797:	mov	qword ptr [rbp - 0x20], 0
0x40079f:	mov	qword ptr [rbp - 0x18], 0
0x4007a7:	mov	dword ptr [rbp - 0x10], 0
0x4007ae:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x4007b8:	mov	dword ptr [rbp - 0xb4], 0xffffffff
0x4007c2:	lea	rax, [rbp - 0x70]
0x4007c6:	mov	rdi, rax
0x4007c9:	call	0x500008
<Block for 0x400500, 135 bytes>
0x400500:	mov	qword ptr [rbp - 0x70], 0
0x400508:	mov	qword ptr [rbp - 0x68], 0
0x400510:	mov	qword ptr [rbp - 0x60], 0
0x400518:	mov	qword ptr [rbp - 0x58], 0
0x400520:	mov	qword ptr [rbp - 0x50], 0
0x400528:	mov	qword ptr [rbp - 0x48], 0
0x400530:	mov	qword ptr [rbp - 0x40], 0
0x400538:	mov	qword ptr [rbp - 0x38], 0
0x400540:	mov	qword ptr [rbp - 0x30], 0
0x400548:	mov	qword ptr [rbp - 0x28], 0
0x400550:	mov	qword ptr [rbp - 0x20], 0
0x400558:	mov	qword ptr [rbp - 0x18], 0
0x400560:	mov	dword ptr [rbp - 0x10], 0
0x400567:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x400571:	mov	dword ptr [rbp - 0xb8], 0xffffffff
0x40057b:	lea	rax, [rbp - 0x70]
0x40057f:	mov	rdi, rax
0x400582:	call	0x500008
<Block for 0x4007ce, 27 bytes>
0x4007ce:	mov	qword ptr [rbp - 0xa0], rax
0x4007d5:	mov	edx, 6
0x4007da:	mov	esi, 1
0x4007df:	mov	edi, 2
0x4007e4:	call	0x500010
<Block for 0x400587, 27 bytes>
0x400587:	mov	qword ptr [rbp - 0x90], rax
0x40058e:	mov	edx, 6
0x400593:	mov	esi, 1
0x400598:	mov	edi, 2
0x40059d:	call	0x500010
<Block for 0x4007e9, 19 bytes>
0x4007e9:	mov	dword ptr [rbp - 0xb0], eax
0x4007ef:	cmp	dword ptr [rbp - 0xb0], -1
0x4007f6:	je	0x400947
<Block for 0x4005a2, 19 bytes>
0x4005a2:	mov	dword ptr [rbp - 0xa8], eax
0x4005a8:	cmp	dword ptr [rbp - 0xa8], -1
0x4005af:	je	0x400700
<Block for 0x400947, 3 bytes>
0x400947:	nop	
0x400948:	jmp	0x400951
<Block for 0x4007fc, 22 bytes>
0x4007fc:	lea	rax, [rbp - 0x80]
0x400800:	mov	edx, 0x10
0x400805:	mov	esi, 0
0x40080a:	mov	rdi, rax
0x40080d:	call	0x500018
<Block for 0x400700, 3 bytes>
0x400700:	nop	
0x400701:	jmp	0x40070a
<Block for 0x4005b5, 22 bytes>
0x4005b5:	lea	rax, [rbp - 0x80]
0x4005b9:	mov	edx, 0x10
0x4005be:	mov	esi, 0
0x4005c3:	mov	rdi, rax
0x4005c6:	call	0x500018
<Block for 0x400951, 9 bytes>
0x400951:	cmp	dword ptr [rbp - 0xb0], -1
0x400958:	je	0x400967
<Block for 0x400812, 23 bytes>
0x400812:	mov	word ptr [rbp - 0x80], 2
0x400818:	mov	dword ptr [rbp - 0x7c], 0
0x40081f:	mov	edi, 0x6987
0x400824:	call	0x500020
<Block for 0x40070a, 9 bytes>
0x40070a:	cmp	dword ptr [rbp - 0xa8], -1
0x400711:	je	0x400720
<Block for 0x4005cb, 23 bytes>
0x4005cb:	mov	word ptr [rbp - 0x80], 2
0x4005d1:	mov	dword ptr [rbp - 0x7c], 0
0x4005d8:	mov	edi, 0x6987
0x4005dd:	call	0x500020
<Block for 0x400967, 9 bytes>
0x400967:	cmp	dword ptr [rbp - 0xb4], -1
0x40096e:	je	0x40097d
<Block for 0x40095a, 13 bytes>
0x40095a:	mov	eax, dword ptr [rbp - 0xb0]
0x400960:	mov	edi, eax
0x400962:	call	0x500050
<Block for 0x400829, 29 bytes>
0x400829:	mov	word ptr [rbp - 0x7e], ax
0x40082d:	lea	rcx, [rbp - 0x80]
0x400831:	mov	eax, dword ptr [rbp - 0xb0]
0x400837:	mov	edx, 0x10
0x40083c:	mov	rsi, rcx
0x40083f:	mov	edi, eax
0x400841:	call	0x500038
<Block for 0x400720, 9 bytes>
0x400720:	cmp	dword ptr [rbp - 0xb8], -1
0x400727:	je	0x400736
<Block for 0x400713, 13 bytes>
0x400713:	mov	eax, dword ptr [rbp - 0xa8]
0x400719:	mov	edi, eax
0x40071b:	call	0x500050
<Block for 0x4005e2, 29 bytes>
0x4005e2:	mov	word ptr [rbp - 0x7e], ax
0x4005e6:	lea	rcx, [rbp - 0x80]
0x4005ea:	mov	eax, dword ptr [rbp - 0xa8]
0x4005f0:	mov	edx, 0x10
0x4005f5:	mov	rsi, rcx
0x4005f8:	mov	edi, eax
0x4005fa:	call	0x500038
<Block for 0x40097d, 12 bytes>
0x40097d:	lea	rax, [rbp - 0x70]
0x400981:	mov	rdi, rax
0x400984:	call	0x500058
<Block for 0x400970, 13 bytes>
0x400970:	mov	eax, dword ptr [rbp - 0xb4]
0x400976:	mov	edi, eax
0x400978:	call	0x500050
<Block for 0x400846, 9 bytes>
0x400846:	cmp	eax, -1
0x400849:	je	0x40094a
<Block for 0x400736, 12 bytes>
0x400736:	lea	rax, [rbp - 0x70]
0x40073a:	mov	rdi, rax
0x40073d:	call	0x500058
<Block for 0x400729, 13 bytes>
0x400729:	mov	eax, dword ptr [rbp - 0xb8]
0x40072f:	mov	edi, eax
0x400731:	call	0x500050
<Block for 0x4005ff, 9 bytes>
0x4005ff:	cmp	eax, -1
0x400602:	je	0x400703
<Block for 0x400989, 16 bytes>
0x400989:	nop	
0x40098a:	mov	rax, qword ptr [rbp - 8]
0x40098e:	xor	rax, qword ptr fs:[0x28]
0x400997:	je	0x40099e
<Block for 0x40094a, 3 bytes>
0x40094a:	nop	
0x40094b:	jmp	0x400951
<Block for 0x40084f, 18 bytes>
0x40084f:	mov	eax, dword ptr [rbp - 0xb0]
0x400855:	mov	esi, 5
0x40085a:	mov	edi, eax
0x40085c:	call	0x500028
<Block for 0x400742, 5 bytes>
0x400742:	jmp	0x400989
<Block for 0x400703, 3 bytes>
0x400703:	nop	
0x400704:	jmp	0x40070a
<Block for 0x400608, 18 bytes>
0x400608:	mov	eax, dword ptr [rbp - 0xa8]
0x40060e:	mov	esi, 5
0x400613:	mov	edi, eax
0x400615:	call	0x500028
<Block for 0x40099e, 2 bytes>
0x40099e:	leave	
0x40099f:	ret	
<Block for 0x400999, 5 bytes>
0x400999:	call	0x500060
<Block for 0x400861, 9 bytes>
0x400861:	cmp	eax, -1
0x400864:	je	0x40094d
<Block for 0x40061a, 9 bytes>
0x40061a:	cmp	eax, -1
0x40061d:	je	0x400706
<Block for 0x40094d, 3 bytes>
0x40094d:	nop	
0x40094e:	jmp	0x400951
<Block for 0x40086a, 23 bytes>
0x40086a:	mov	eax, dword ptr [rbp - 0xb0]
0x400870:	mov	edx, 0
0x400875:	mov	esi, 0
0x40087a:	mov	edi, eax
0x40087c:	call	0x500030
<Block for 0x400706, 3 bytes>
0x400706:	nop	
0x400707:	jmp	0x40070a
<Block for 0x400623, 23 bytes>
0x400623:	mov	eax, dword ptr [rbp - 0xa8]
0x400629:	mov	edx, 0
0x40062e:	mov	esi, 0
0x400633:	mov	edi, eax
0x400635:	call	0x500030
<Block for 0x400881, 19 bytes>
0x400881:	mov	dword ptr [rbp - 0xb4], eax
0x400887:	cmp	dword ptr [rbp - 0xb4], -1
0x40088e:	je	0x400950
<Block for 0x40063a, 19 bytes>
0x40063a:	mov	dword ptr [rbp - 0xb8], eax
0x400640:	cmp	dword ptr [rbp - 0xb8], -1
0x400647:	je	0x400709
<Block for 0x400894, 52 bytes>
0x400894:	mov	rax, qword ptr [rbp - 0xa0]
0x40089b:	mov	edx, 0x63
0x4008a0:	sub	edx, eax
0x4008a2:	mov	eax, edx
0x4008a4:	movsxd	rdx, eax
0x4008a7:	lea	rcx, [rbp - 0x70]
0x4008ab:	mov	rax, qword ptr [rbp - 0xa0]
0x4008b2:	lea	rsi, [rcx + rax]
0x4008b6:	mov	eax, dword ptr [rbp - 0xb4]
0x4008bc:	mov	ecx, 0
0x4008c1:	mov	edi, eax
0x4008c3:	call	0x500040
<Block for 0x400950, 1 bytes>
0x400950:	nop	
<Block for 0x40064d, 52 bytes>
0x40064d:	mov	rax, qword ptr [rbp - 0x90]
0x400654:	mov	edx, 0x63
0x400659:	sub	edx, eax
0x40065b:	mov	eax, edx
0x40065d:	movsxd	rdx, eax
0x400660:	lea	rcx, [rbp - 0x70]
0x400664:	mov	rax, qword ptr [rbp - 0x90]
0x40066b:	lea	rsi, [rcx + rax]
0x40066f:	mov	eax, dword ptr [rbp - 0xb8]
0x400675:	mov	ecx, 0
0x40067a:	mov	edi, eax
0x40067c:	call	0x500040
<Block for 0x400709, 1 bytes>
0x400709:	nop	
<Block for 0x4008c8, 15 bytes>
0x4008c8:	mov	dword ptr [rbp - 0xac], eax
0x4008ce:	cmp	dword ptr [rbp - 0xac], -1
0x4008d5:	je	0x400951
<Block for 0x400681, 15 bytes>
0x400681:	mov	dword ptr [rbp - 0xa4], eax
0x400687:	cmp	dword ptr [rbp - 0xa4], -1
0x40068e:	je	0x40070a
<Block for 0x4008d7, 9 bytes>
0x4008d7:	cmp	dword ptr [rbp - 0xac], 0
0x4008de:	je	0x400951
<Block for 0x400690, 9 bytes>
0x400690:	cmp	dword ptr [rbp - 0xa4], 0
0x400697:	je	0x40070a
<Block for 0x4008e0, 30 bytes>
0x4008e0:	mov	eax, dword ptr [rbp - 0xac]
0x4008e6:	cdqe	
0x4008e8:	mov	byte ptr [rbp + rax - 0x70], 0
0x4008ed:	lea	rax, [rbp - 0x70]
0x4008f1:	mov	esi, 0xd
0x4008f6:	mov	rdi, rax
0x4008f9:	call	0x500048
<Block for 0x400699, 30 bytes>
0x400699:	mov	eax, dword ptr [rbp - 0xa4]
0x40069f:	cdqe	
0x4006a1:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006a6:	lea	rax, [rbp - 0x70]
0x4006aa:	mov	esi, 0xd
0x4006af:	mov	rdi, rax
0x4006b2:	call	0x500048
<Block for 0x4008fe, 17 bytes>
0x4008fe:	mov	qword ptr [rbp - 0x98], rax
0x400905:	cmp	qword ptr [rbp - 0x98], 0
0x40090d:	je	0x400919
<Block for 0x4006b7, 17 bytes>
0x4006b7:	mov	qword ptr [rbp - 0x88], rax
0x4006be:	cmp	qword ptr [rbp - 0x88], 0
0x4006c6:	je	0x4006d2
<Block for 0x400919, 17 bytes>
0x400919:	lea	rax, [rbp - 0x70]
0x40091d:	mov	esi, 0xa
0x400922:	mov	rdi, rax
0x400925:	call	0x500048
<Block for 0x40090f, 27 bytes>
0x40090f:	mov	rax, qword ptr [rbp - 0x98]
0x400916:	mov	byte ptr [rax], 0
0x400919:	lea	rax, [rbp - 0x70]
0x40091d:	mov	esi, 0xa
0x400922:	mov	rdi, rax
0x400925:	call	0x500048
<Block for 0x4006d2, 17 bytes>
0x4006d2:	lea	rax, [rbp - 0x70]
0x4006d6:	mov	esi, 0xa
0x4006db:	mov	rdi, rax
0x4006de:	call	0x500048
<Block for 0x4006c8, 27 bytes>
0x4006c8:	mov	rax, qword ptr [rbp - 0x88]
0x4006cf:	mov	byte ptr [rax], 0
0x4006d2:	lea	rax, [rbp - 0x70]
0x4006d6:	mov	esi, 0xa
0x4006db:	mov	rdi, rax
0x4006de:	call	0x500048
<Block for 0x40092a, 17 bytes>
0x40092a:	mov	qword ptr [rbp - 0x98], rax
0x400931:	cmp	qword ptr [rbp - 0x98], 0
0x400939:	je	0x400951
<Block for 0x4006e3, 17 bytes>
0x4006e3:	mov	qword ptr [rbp - 0x88], rax
0x4006ea:	cmp	qword ptr [rbp - 0x88], 0
0x4006f2:	je	0x40070a
<Block for 0x40093b, 12 bytes>
0x40093b:	mov	rax, qword ptr [rbp - 0x98]
0x400942:	mov	byte ptr [rax], 0
0x400945:	jmp	0x400951
<Block for 0x4006f4, 12 bytes>
0x4006f4:	mov	rax, qword ptr [rbp - 0x88]
0x4006fb:	mov	byte ptr [rax], 0
0x4006fe:	jmp	0x40070a
