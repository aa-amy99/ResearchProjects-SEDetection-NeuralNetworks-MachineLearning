<Block for 0x400088, 30 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x10
0x400094:	mov	qword ptr [rbp - 8], 0
0x40009c:	mov	eax, dword ptr [rip + 0xfff5e]
0x4000a2:	test	eax, eax
0x4000a4:	je	0x4000f6
<Block for 0x4000f6, 10 bytes>
0x4000f6:	mov	eax, dword ptr [rip + 0xfff24]
0x4000fc:	test	eax, eax
0x4000fe:	je	0x40010c
<Block for 0x4000a6, 10 bytes>
0x4000a6:	mov	edi, 0x190
0x4000ab:	call	0x500008
<Block for 0x40010c, 3 bytes>
0x40010c:	nop	
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x190]
0x400107:	call	0x500028
<Block for 0x4000b0, 19 bytes>
0x4000b0:	mov	qword ptr [rbp - 8], rax
0x4000b4:	mov	qword ptr [rbp - 0x10], 0
0x4000bc:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c1:	ja	0x4000e3
<Block for 0x4000c3, 32 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	lea	rdx, [rax*4]
0x4000cf:	mov	rax, qword ptr [rbp - 8]
0x4000d3:	add	rax, rdx
0x4000d6:	mov	dword ptr [rax], 5
0x4000dc:	add	qword ptr [rbp - 0x10], 1
0x4000e1:	jmp	0x4000bc
<Block for 0x4000e3, 7 bytes>
0x4000e3:	cmp	qword ptr [rbp - 8], 0
0x4000e8:	je	0x4000f6
<Block for 0x4000bc, 7 bytes>
0x4000bc:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c1:	ja	0x4000e3
<Block for 0x4000ea, 12 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500010
