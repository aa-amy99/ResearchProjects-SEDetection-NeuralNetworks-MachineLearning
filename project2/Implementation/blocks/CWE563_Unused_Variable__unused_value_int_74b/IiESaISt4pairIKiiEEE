<Block for 0x4000cc, 57 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x20
0x4000d8:	mov	qword ptr [rbp - 0x18], rdi
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	dword ptr [rbp - 0x10], 2
0x4000f2:	lea	rdx, [rbp - 0x10]
0x4000f6:	mov	rax, qword ptr [rbp - 0x18]
0x4000fa:	mov	rsi, rdx
0x4000fd:	mov	rdi, rax
0x400100:	call	0x400158
<Block for 0x400105, 15 bytes>
0x400105:	mov	eax, dword ptr [rax]
0x400107:	mov	dword ptr [rbp - 0xc], eax
0x40010a:	mov	eax, dword ptr [rbp - 0xc]
0x40010d:	mov	edi, eax
0x40010f:	call	0x500000
<Block for 0x400114, 16 bytes>
0x400114:	nop	
0x400115:	mov	rax, qword ptr [rbp - 8]
0x400119:	xor	rax, qword ptr fs:[0x28]
0x400122:	je	0x400129
<Block for 0x400129, 2 bytes>
0x400129:	leave	
0x40012a:	ret	
<Block for 0x400124, 5 bytes>
0x400124:	call	0x500008
