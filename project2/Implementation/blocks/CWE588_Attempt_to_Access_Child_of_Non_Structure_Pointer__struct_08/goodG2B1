<Block for 0x400087, 58 bytes>
0x400087:	endbr64	
0x40008b:	push	rbp
0x40008c:	mov	rbp, rsp
0x40008f:	sub	rsp, 0x20
0x400093:	mov	rax, qword ptr fs:[0x28]
0x40009c:	mov	qword ptr [rbp - 8], rax
0x4000a0:	xor	eax, eax
0x4000a2:	mov	dword ptr [rbp - 0x1c], 0x64
0x4000a9:	mov	dword ptr [rbp - 0x10], 0
0x4000b0:	mov	dword ptr [rbp - 0xc], 0
0x4000b7:	mov	eax, 0
0x4000bc:	call	0x40000f
<Block for 0x4000c1, 4 bytes>
0x4000c1:	test	eax, eax
0x4000c3:	je	0x4000d3
<Block for 0x4000d3, 20 bytes>
0x4000d3:	lea	rax, [rbp - 0x10]
0x4000d7:	mov	qword ptr [rbp - 0x18], rax
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500000
<Block for 0x4000c5, 12 bytes>
0x4000c5:	lea	rdi, [rip + 0xba]
0x4000cc:	call	0x500010
<Block for 0x4000e7, 16 bytes>
0x4000e7:	nop	
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	xor	rax, qword ptr fs:[0x28]
0x4000f5:	je	0x4000fc
<Block for 0x4000d1, 2 bytes>
0x4000d1:	jmp	0x4000db
<Block for 0x4000fc, 2 bytes>
0x4000fc:	leave	
0x4000fd:	ret	
<Block for 0x4000f7, 5 bytes>
0x4000f7:	call	0x500008
<Block for 0x4000db, 12 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500000
