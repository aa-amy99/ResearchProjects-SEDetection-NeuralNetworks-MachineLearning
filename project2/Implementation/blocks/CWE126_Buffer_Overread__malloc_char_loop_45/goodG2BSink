<Block for 0x400135, 63 bytes>
0x400135:	endbr64	
0x400139:	push	rbp
0x40013a:	mov	rbp, rsp
0x40013d:	sub	rsp, 0x90
0x400144:	mov	rax, qword ptr fs:[0x28]
0x40014d:	mov	qword ptr [rbp - 8], rax
0x400151:	xor	eax, eax
0x400153:	mov	rax, qword ptr [rip + 0x12e]
0x40015a:	mov	qword ptr [rbp - 0x80], rax
0x40015e:	lea	rax, [rbp - 0x70]
0x400162:	mov	edx, 0x63
0x400167:	mov	esi, 0x43
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500000
<Block for 0x400174, 16 bytes>
0x400174:	mov	byte ptr [rbp - 0xd], 0
0x400178:	lea	rax, [rbp - 0x70]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500008
<Block for 0x400184, 17 bytes>
0x400184:	mov	qword ptr [rbp - 0x78], rax
0x400188:	mov	qword ptr [rbp - 0x88], 0
0x400193:	jmp	0x4001be
<Block for 0x4001be, 13 bytes>
0x4001be:	mov	rax, qword ptr [rbp - 0x88]
0x4001c5:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c9:	jb	0x400195
<Block for 0x400195, 54 bytes>
0x400195:	mov	rdx, qword ptr [rbp - 0x80]
0x400199:	mov	rax, qword ptr [rbp - 0x88]
0x4001a0:	add	rax, rdx
0x4001a3:	movzx	eax, byte ptr [rax]
0x4001a6:	lea	rcx, [rbp - 0x70]
0x4001aa:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b1:	add	rdx, rcx
0x4001b4:	mov	byte ptr [rdx], al
0x4001b6:	add	qword ptr [rbp - 0x88], 1
0x4001be:	mov	rax, qword ptr [rbp - 0x88]
0x4001c5:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c9:	jb	0x400195
<Block for 0x4001cb, 16 bytes>
0x4001cb:	mov	byte ptr [rbp - 0xd], 0
0x4001cf:	lea	rax, [rbp - 0x70]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x500010
<Block for 0x4001db, 12 bytes>
0x4001db:	mov	rax, qword ptr [rbp - 0x80]
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500018
<Block for 0x4001e7, 16 bytes>
0x4001e7:	nop	
0x4001e8:	mov	rax, qword ptr [rbp - 8]
0x4001ec:	xor	rax, qword ptr fs:[0x28]
0x4001f5:	je	0x4001fc
<Block for 0x4001fc, 2 bytes>
0x4001fc:	leave	
0x4001fd:	ret	
<Block for 0x4001f7, 5 bytes>
0x4001f7:	call	0x500020
