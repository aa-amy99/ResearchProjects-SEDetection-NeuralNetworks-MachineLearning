<Block for 0x40002e, 62 bytes>
0x40002e:	endbr64	
0x400032:	push	rbp
0x400033:	mov	rbp, rsp
0x400036:	sub	rsp, 0x30
0x40003a:	mov	qword ptr [rbp - 0x28], rdi
0x40003e:	mov	rax, qword ptr fs:[0x28]
0x400047:	mov	qword ptr [rbp - 8], rax
0x40004b:	xor	eax, eax
0x40004d:	mov	rax, qword ptr [rbp - 0x28]
0x400051:	mov	rax, qword ptr [rax]
0x400054:	lea	rdx, [rbp - 0x14]
0x400058:	lea	rsi, [rip + 0x58]
0x40005f:	mov	rdi, rax
0x400062:	mov	eax, 0
0x400067:	call	0x500000
<Block for 0x40006c, 10 bytes>
0x40006c:	cmp	eax, 1
0x40006f:	sete	al
0x400072:	test	al, al
0x400074:	je	0x4000a0
<Block for 0x4000a0, 16 bytes>
0x4000a0:	nop	
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	xor	rax, qword ptr fs:[0x28]
0x4000ae:	je	0x4000b5
<Block for 0x400076, 22 bytes>
0x400076:	mov	dword ptr [rbp - 0xc], 0
0x40007d:	mov	dword ptr [rbp - 0x10], 0
0x400084:	mov	eax, dword ptr [rbp - 0x14]
0x400087:	cmp	dword ptr [rbp - 0x10], eax
0x40008a:	jge	0x400096
<Block for 0x4000b5, 2 bytes>
0x4000b5:	leave	
0x4000b6:	ret	
<Block for 0x4000b0, 5 bytes>
0x4000b0:	call	0x500010
<Block for 0x40008c, 10 bytes>
0x40008c:	add	dword ptr [rbp - 0xc], 1
0x400090:	add	dword ptr [rbp - 0x10], 1
0x400094:	jmp	0x400084
<Block for 0x400096, 10 bytes>
0x400096:	mov	eax, dword ptr [rbp - 0xc]
0x400099:	mov	edi, eax
0x40009b:	call	0x500008
<Block for 0x400084, 8 bytes>
0x400084:	mov	eax, dword ptr [rbp - 0x14]
0x400087:	cmp	dword ptr [rbp - 0x10], eax
0x40008a:	jge	0x400096
