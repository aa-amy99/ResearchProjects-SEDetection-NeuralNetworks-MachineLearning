<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	mov	rax, qword ptr [rip + 0xfffd7]
0x400029:	lea	rdx, [rbp - 0xc]
0x40002d:	lea	rsi, [rip + 0xac]
0x400034:	mov	rdi, rax
0x400037:	mov	eax, 0
0x40003c:	call	0x500008
<Block for 0x400041, 9 bytes>
0x400041:	nop	
0x400042:	mov	eax, dword ptr [rbp - 0xc]
0x400045:	cmp	eax, 5
0x400048:	jg	0x400069
<Block for 0x40004a, 31 bytes>
0x40004a:	lea	rcx, [rip + 0xef]
0x400051:	mov	edx, 0x25
0x400056:	lea	rsi, [rip + 0x8b]
0x40005d:	lea	rdi, [rip + 0xac]
0x400064:	call	0x500010
<Block for 0x400069, 16 bytes>
0x400069:	nop	
0x40006a:	mov	rax, qword ptr [rbp - 8]
0x40006e:	xor	rax, qword ptr fs:[0x28]
0x400077:	je	0x40007e
<Block for 0x40007e, 2 bytes>
0x40007e:	leave	
0x40007f:	ret	
<Block for 0x400079, 5 bytes>
0x400079:	call	0x500018
