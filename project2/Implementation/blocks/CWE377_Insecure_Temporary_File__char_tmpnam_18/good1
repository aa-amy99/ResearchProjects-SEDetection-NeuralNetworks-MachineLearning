<Block for 0x400079, 72 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	sub	rsp, 0x30
0x400085:	mov	rax, qword ptr fs:[0x28]
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	xor	eax, eax
0x400094:	nop	
0x400095:	endbr64	
0x400099:	movabs	rax, 0x6c69662f706d742f
0x4000a3:	movabs	rdx, 0x58585858585865
0x4000ad:	mov	qword ptr [rbp - 0x20], rax
0x4000b1:	mov	qword ptr [rbp - 0x18], rdx
0x4000b5:	lea	rax, [rbp - 0x20]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500028
<Block for 0x4000c1, 15 bytes>
0x4000c1:	mov	dword ptr [rbp - 0x24], eax
0x4000c4:	lea	rax, [rbp - 0x20]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500010
<Block for 0x4000d0, 6 bytes>
0x4000d0:	cmp	dword ptr [rbp - 0x24], -1
0x4000d4:	je	0x4000ec
<Block for 0x4000ec, 16 bytes>
0x4000ec:	nop	
0x4000ed:	mov	rax, qword ptr [rbp - 8]
0x4000f1:	xor	rax, qword ptr fs:[0x28]
0x4000fa:	je	0x400101
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0x3b]
0x4000dd:	call	0x500010
<Block for 0x400101, 2 bytes>
0x400101:	leave	
0x400102:	ret	
<Block for 0x4000fc, 5 bytes>
0x4000fc:	call	0x500030
<Block for 0x4000e2, 10 bytes>
0x4000e2:	mov	eax, dword ptr [rbp - 0x24]
0x4000e5:	mov	edi, eax
0x4000e7:	call	0x500020
