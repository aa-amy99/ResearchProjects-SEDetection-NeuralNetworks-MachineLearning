<Block for 0x4001a4, 45 bytes>
0x4001a4:	endbr64	
0x4001a8:	push	rbp
0x4001a9:	mov	rbp, rsp
0x4001ac:	add	rsp, -0x80
0x4001b0:	mov	rax, qword ptr fs:[0x28]
0x4001b9:	mov	qword ptr [rbp - 8], rax
0x4001bd:	xor	eax, eax
0x4001bf:	mov	qword ptr [rbp - 0x80], 0
0x4001c7:	mov	eax, 0
0x4001cc:	call	0x500000
<Block for 0x4001d1, 4 bytes>
0x4001d1:	test	eax, eax
0x4001d3:	je	0x40021d
<Block for 0x40021d, 22 bytes>
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	edx, 0x63
0x400226:	mov	esi, 0x43
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500018
<Block for 0x4001d5, 10 bytes>
0x4001d5:	mov	edi, 0x64
0x4001da:	call	0x500008
<Block for 0x400233, 23 bytes>
0x400233:	mov	byte ptr [rbp - 0xd], 0
0x400237:	lea	rdx, [rbp - 0x70]
0x40023b:	mov	rax, qword ptr [rbp - 0x80]
0x40023f:	mov	rsi, rdx
0x400242:	mov	rdi, rax
0x400245:	call	0x500020
<Block for 0x4001df, 11 bytes>
0x4001df:	mov	qword ptr [rbp - 0x78], rax
0x4001e3:	cmp	qword ptr [rbp - 0x78], 0
0x4001e8:	jne	0x4001f4
<Block for 0x40024a, 12 bytes>
0x40024a:	mov	rax, qword ptr [rbp - 0x80]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500028
<Block for 0x4001ea, 10 bytes>
0x4001ea:	mov	edi, 0xffffffff
0x4001ef:	call	0x500010
<Block for 0x4001f4, 22 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	mov	edx, 0x63
0x4001fd:	mov	esi, 0x41
0x400202:	mov	rdi, rax
0x400205:	call	0x500018
<Block for 0x400256, 16 bytes>
0x400256:	nop	
0x400257:	mov	rax, qword ptr [rbp - 8]
0x40025b:	xor	rax, qword ptr fs:[0x28]
0x400264:	je	0x40026b
<Block for 0x40020a, 41 bytes>
0x40020a:	mov	rax, qword ptr [rbp - 0x78]
0x40020e:	add	rax, 0x63
0x400212:	mov	byte ptr [rax], 0
0x400215:	mov	rax, qword ptr [rbp - 0x78]
0x400219:	mov	qword ptr [rbp - 0x80], rax
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	edx, 0x63
0x400226:	mov	esi, 0x43
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500018
<Block for 0x40026b, 2 bytes>
0x40026b:	leave	
0x40026c:	ret	
<Block for 0x400266, 5 bytes>
0x400266:	call	0x500030
