<Block for 0x40009f, 49 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	add	rsp, -0x80
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	lea	rax, [rbp - 0x70]
0x4000be:	mov	edx, 0x63
0x4000c3:	mov	esi, 0x41
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500000
<Block for 0x4000d0, 37 bytes>
0x4000d0:	mov	byte ptr [rbp - 0xd], 0
0x4000d4:	lea	rax, [rbp - 0x70]
0x4000d8:	sub	rax, 8
0x4000dc:	mov	qword ptr [rbp - 0x78], rax
0x4000e0:	mov	rax, qword ptr [rbp - 0x78]
0x4000e4:	mov	qword ptr [rip + 0x145], rax
0x4000eb:	mov	eax, 0
0x4000f0:	call	0x400000
<Block for 0x4000f5, 16 bytes>
0x4000f5:	nop	
0x4000f6:	mov	rax, qword ptr [rbp - 8]
0x4000fa:	xor	rax, qword ptr fs:[0x28]
0x400103:	je	0x40010a
<Block for 0x40010a, 2 bytes>
0x40010a:	leave	
0x40010b:	ret	
<Block for 0x400105, 5 bytes>
0x400105:	call	0x500010
