<Block for 0x400191, 85 bytes>
0x400191:	endbr64	
0x400195:	push	rbp
0x400196:	mov	rbp, rsp
0x400199:	push	rbx
0x40019a:	sub	rsp, 0x88
0x4001a1:	mov	rax, qword ptr fs:[0x28]
0x4001aa:	mov	qword ptr [rbp - 0x18], rax
0x4001ae:	xor	eax, eax
0x4001b0:	mov	eax, 0x10
0x4001b5:	sub	rax, 1
0x4001b9:	add	rax, 0x6c
0x4001bd:	mov	esi, 0x10
0x4001c2:	mov	edx, 0
0x4001c7:	div	rsi
0x4001ca:	imul	rax, rax, 0x10
0x4001ce:	mov	rdx, rax
0x4001d1:	and	rdx, 0xfffffffffffff000
0x4001d8:	mov	rbx, rsp
0x4001db:	sub	rbx, rdx
0x4001de:	mov	rdx, rbx
0x4001e1:	cmp	rsp, rdx
0x4001e4:	je	0x4001f8
<Block for 0x4001f8, 26 bytes>
0x4001f8:	mov	rdx, rax
0x4001fb:	and	edx, 0xfff
0x400201:	sub	rsp, rdx
0x400204:	mov	rdx, rax
0x400207:	and	edx, 0xfff
0x40020d:	test	rdx, rdx
0x400210:	je	0x400222
<Block for 0x4001e6, 18 bytes>
0x4001e6:	sub	rsp, 0x1000
0x4001ed:	or	qword ptr [rsp + 0xff8], 0
0x4001f6:	jmp	0x4001e1
<Block for 0x400222, 47 bytes>
0x400222:	mov	rax, rsp
0x400225:	add	rax, 0xf
0x400229:	shr	rax, 4
0x40022d:	shl	rax, 4
0x400231:	mov	qword ptr [rbp - 0x90], rax
0x400238:	mov	rax, qword ptr [rbp - 0x90]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x41
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x400212, 63 bytes>
0x400212:	and	eax, 0xfff
0x400217:	sub	rax, 8
0x40021b:	add	rax, rsp
0x40021e:	or	qword ptr [rax], 0
0x400222:	mov	rax, rsp
0x400225:	add	rax, 0xf
0x400229:	shr	rax, 4
0x40022d:	shl	rax, 4
0x400231:	mov	qword ptr [rbp - 0x90], rax
0x400238:	mov	rax, qword ptr [rbp - 0x90]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x41
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x4001e1, 5 bytes>
0x4001e1:	cmp	rsp, rdx
0x4001e4:	je	0x4001f8
<Block for 0x400251, 50 bytes>
0x400251:	mov	rax, qword ptr [rbp - 0x90]
0x400258:	add	rax, 0x63
0x40025c:	mov	byte ptr [rax], 0
0x40025f:	mov	rax, qword ptr [rbp - 0x90]
0x400266:	mov	qword ptr [rbp - 0x88], rax
0x40026d:	lea	rax, [rbp - 0x80]
0x400271:	mov	edx, 0x63
0x400276:	mov	esi, 0x43
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500000
<Block for 0x400283, 128 bytes>
0x400283:	mov	byte ptr [rbp - 0x1d], 0
0x400287:	mov	rax, qword ptr [rbp - 0x88]
0x40028e:	mov	rcx, qword ptr [rax]
0x400291:	mov	rbx, qword ptr [rax + 8]
0x400295:	mov	qword ptr [rbp - 0x80], rcx
0x400299:	mov	qword ptr [rbp - 0x78], rbx
0x40029d:	mov	rcx, qword ptr [rax + 0x10]
0x4002a1:	mov	rbx, qword ptr [rax + 0x18]
0x4002a5:	mov	qword ptr [rbp - 0x70], rcx
0x4002a9:	mov	qword ptr [rbp - 0x68], rbx
0x4002ad:	mov	rcx, qword ptr [rax + 0x20]
0x4002b1:	mov	rbx, qword ptr [rax + 0x28]
0x4002b5:	mov	qword ptr [rbp - 0x60], rcx
0x4002b9:	mov	qword ptr [rbp - 0x58], rbx
0x4002bd:	mov	rcx, qword ptr [rax + 0x30]
0x4002c1:	mov	rbx, qword ptr [rax + 0x38]
0x4002c5:	mov	qword ptr [rbp - 0x50], rcx
0x4002c9:	mov	qword ptr [rbp - 0x48], rbx
0x4002cd:	mov	rcx, qword ptr [rax + 0x40]
0x4002d1:	mov	rbx, qword ptr [rax + 0x48]
0x4002d5:	mov	qword ptr [rbp - 0x40], rcx
0x4002d9:	mov	qword ptr [rbp - 0x38], rbx
0x4002dd:	mov	rcx, qword ptr [rax + 0x50]
0x4002e1:	mov	rbx, qword ptr [rax + 0x58]
0x4002e5:	mov	qword ptr [rbp - 0x30], rcx
0x4002e9:	mov	qword ptr [rbp - 0x28], rbx
0x4002ed:	mov	eax, dword ptr [rax + 0x60]
0x4002f0:	mov	dword ptr [rbp - 0x20], eax
0x4002f3:	mov	byte ptr [rbp - 0x1d], 0
0x4002f7:	lea	rax, [rbp - 0x80]
0x4002fb:	mov	rdi, rax
0x4002fe:	call	0x500008
<Block for 0x400303, 16 bytes>
0x400303:	nop	
0x400304:	mov	rax, qword ptr [rbp - 0x18]
0x400308:	xor	rax, qword ptr fs:[0x28]
0x400311:	je	0x400318
<Block for 0x400318, 6 bytes>
0x400318:	mov	rbx, qword ptr [rbp - 8]
0x40031c:	leave	
0x40031d:	ret	
<Block for 0x400313, 5 bytes>
0x400313:	call	0x500010
