<Block for 0x40012e, 41 bytes>
0x40012e:	endbr64	
0x400132:	push	rbp
0x400133:	mov	rbp, rsp
0x400136:	sub	rsp, 0x30
0x40013a:	mov	qword ptr [rbp - 0x28], rdi
0x40013e:	mov	rax, qword ptr fs:[0x28]
0x400147:	mov	qword ptr [rbp - 8], rax
0x40014b:	xor	eax, eax
0x40014d:	mov	eax, dword ptr [rip + 0xffedd]
0x400153:	test	eax, eax
0x400155:	je	0x4001ac
<Block for 0x4001ac, 16 bytes>
0x4001ac:	nop	
0x4001ad:	mov	rax, qword ptr [rbp - 8]
0x4001b1:	xor	rax, qword ptr fs:[0x28]
0x4001ba:	je	0x4001c1
<Block for 0x400157, 28 bytes>
0x400157:	lea	rdx, [rbp - 0x14]
0x40015b:	mov	rax, qword ptr [rbp - 0x28]
0x40015f:	lea	rsi, [rip + 0xe8]
0x400166:	mov	rdi, rax
0x400169:	mov	eax, 0
0x40016e:	call	0x500008
<Block for 0x4001c1, 2 bytes>
0x4001c1:	leave	
0x4001c2:	ret	
<Block for 0x4001bc, 5 bytes>
0x4001bc:	call	0x500018
<Block for 0x400173, 5 bytes>
0x400173:	cmp	eax, 1
0x400176:	jne	0x4001ac
<Block for 0x400178, 10 bytes>
0x400178:	mov	eax, dword ptr [rbp - 0x14]
0x40017b:	cmp	eax, 0x270f
0x400180:	jg	0x4001ac
<Block for 0x400182, 16 bytes>
0x400182:	mov	dword ptr [rbp - 0xc], 0
0x400189:	mov	dword ptr [rbp - 0x10], 0
0x400190:	jmp	0x40019a
<Block for 0x40019a, 8 bytes>
0x40019a:	mov	eax, dword ptr [rbp - 0x14]
0x40019d:	cmp	dword ptr [rbp - 0x10], eax
0x4001a0:	jl	0x400192
<Block for 0x400192, 16 bytes>
0x400192:	add	dword ptr [rbp - 0xc], 1
0x400196:	add	dword ptr [rbp - 0x10], 1
0x40019a:	mov	eax, dword ptr [rbp - 0x14]
0x40019d:	cmp	dword ptr [rbp - 0x10], eax
0x4001a0:	jl	0x400192
<Block for 0x4001a2, 10 bytes>
0x4001a2:	mov	eax, dword ptr [rbp - 0xc]
0x4001a5:	mov	edi, eax
0x4001a7:	call	0x500010
