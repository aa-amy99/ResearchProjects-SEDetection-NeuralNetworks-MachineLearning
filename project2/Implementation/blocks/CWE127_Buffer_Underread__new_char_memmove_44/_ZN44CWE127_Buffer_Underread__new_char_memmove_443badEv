<Block for 0x400078, 41 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x20
0x400084:	lea	rax, [rip - 0x8b]
0x40008b:	mov	qword ptr [rbp - 0x18], rax
0x40008f:	mov	qword ptr [rbp - 0x10], 0
0x400097:	mov	edi, 0x64
0x40009c:	call	0x500020
<Block for 0x4000a1, 26 bytes>
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	edx, 0x63
0x4000ae:	mov	esi, 0x41
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500000
<Block for 0x4000bb, 36 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	add	rax, 0x63
0x4000c3:	mov	byte ptr [rax], 0
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	sub	rax, 8
0x4000ce:	mov	qword ptr [rbp - 0x10], rax
0x4000d2:	mov	rax, qword ptr [rbp - 0x10]
0x4000d6:	mov	rdx, qword ptr [rbp - 0x18]
0x4000da:	mov	rdi, rax
0x4000dd:	call	rdx
<Block for 0x4000df, 3 bytes>
0x4000df:	nop	
0x4000e0:	leave	
0x4000e1:	ret	
