<Block for 0x4000e2, 53 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	add	rsp, -0x80
0x4000ee:	mov	qword ptr [rbp - 0x78], rdi
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	edx, 0x63
0x40010a:	mov	esi, 0x43
0x40010f:	mov	rdi, rax
0x400112:	call	0x500000
<Block for 0x400117, 28 bytes>
0x400117:	mov	byte ptr [rbp - 0xd], 0
0x40011b:	mov	rcx, qword ptr [rbp - 0x78]
0x40011f:	lea	rax, [rbp - 0x70]
0x400123:	mov	edx, 0x64
0x400128:	mov	rsi, rcx
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500008
<Block for 0x400133, 16 bytes>
0x400133:	mov	byte ptr [rbp - 0xd], 0
0x400137:	lea	rax, [rbp - 0x70]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500010
<Block for 0x400143, 16 bytes>
0x400143:	nop	
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	xor	rax, qword ptr fs:[0x28]
0x400151:	je	0x400158
<Block for 0x400158, 2 bytes>
0x400158:	leave	
0x400159:	ret	
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500018
