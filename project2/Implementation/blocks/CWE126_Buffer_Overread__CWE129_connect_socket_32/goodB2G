<Block for 0x400239, 86 bytes>
0x400239:	endbr64	
0x40023d:	push	rbp
0x40023e:	mov	rbp, rsp
0x400241:	sub	rsp, 0x70
0x400245:	mov	rax, qword ptr fs:[0x28]
0x40024e:	mov	qword ptr [rbp - 8], rax
0x400252:	xor	eax, eax
0x400254:	lea	rax, [rbp - 0x64]
0x400258:	mov	qword ptr [rbp - 0x50], rax
0x40025c:	lea	rax, [rbp - 0x64]
0x400260:	mov	qword ptr [rbp - 0x48], rax
0x400264:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x40026b:	mov	rax, qword ptr [rbp - 0x50]
0x40026f:	mov	eax, dword ptr [rax]
0x400271:	mov	dword ptr [rbp - 0x60], eax
0x400274:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40027b:	mov	edx, 6
0x400280:	mov	esi, 1
0x400285:	mov	edi, 2
0x40028a:	call	0x500000
<Block for 0x40028f, 13 bytes>
0x40028f:	mov	dword ptr [rbp - 0x5c], eax
0x400292:	cmp	dword ptr [rbp - 0x5c], -1
0x400296:	je	0x400332
<Block for 0x400332, 3 bytes>
0x400332:	nop	
0x400333:	jmp	0x400336
<Block for 0x40029c, 22 bytes>
0x40029c:	lea	rax, [rbp - 0x40]
0x4002a0:	mov	edx, 0x10
0x4002a5:	mov	esi, 0
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x500008
<Block for 0x400336, 6 bytes>
0x400336:	cmp	dword ptr [rbp - 0x5c], -1
0x40033a:	je	0x400346
<Block for 0x4002b2, 18 bytes>
0x4002b2:	mov	word ptr [rbp - 0x40], 2
0x4002b8:	lea	rdi, [rip + 0x121]
0x4002bf:	call	0x500010
<Block for 0x400346, 64 bytes>
0x400346:	mov	rax, qword ptr [rbp - 0x50]
0x40034a:	mov	edx, dword ptr [rbp - 0x60]
0x40034d:	mov	dword ptr [rax], edx
0x40034f:	mov	rax, qword ptr [rbp - 0x48]
0x400353:	mov	eax, dword ptr [rax]
0x400355:	mov	dword ptr [rbp - 0x54], eax
0x400358:	mov	qword ptr [rbp - 0x40], 0
0x400360:	mov	qword ptr [rbp - 0x38], 0
0x400368:	mov	qword ptr [rbp - 0x30], 0
0x400370:	mov	qword ptr [rbp - 0x28], 0
0x400378:	mov	qword ptr [rbp - 0x20], 0
0x400380:	cmp	dword ptr [rbp - 0x54], 0
0x400384:	js	0x40039e
<Block for 0x40033c, 10 bytes>
0x40033c:	mov	eax, dword ptr [rbp - 0x5c]
0x40033f:	mov	edi, eax
0x400341:	call	0x500038
<Block for 0x4002c4, 13 bytes>
0x4002c4:	mov	dword ptr [rbp - 0x3c], eax
0x4002c7:	mov	edi, 0x6987
0x4002cc:	call	0x500018
<Block for 0x40039e, 12 bytes>
0x40039e:	lea	rdi, [rip + 0x6b]
0x4003a5:	call	0x500048
<Block for 0x400386, 6 bytes>
0x400386:	cmp	dword ptr [rbp - 0x54], 9
0x40038a:	jg	0x40039e
<Block for 0x4002d1, 26 bytes>
0x4002d1:	mov	word ptr [rbp - 0x3e], ax
0x4002d5:	lea	rcx, [rbp - 0x40]
0x4002d9:	mov	eax, dword ptr [rbp - 0x5c]
0x4002dc:	mov	edx, 0x10
0x4002e1:	mov	rsi, rcx
0x4002e4:	mov	edi, eax
0x4002e6:	call	0x500020
<Block for 0x4003aa, 16 bytes>
0x4003aa:	nop	
0x4003ab:	mov	rax, qword ptr [rbp - 8]
0x4003af:	xor	rax, qword ptr fs:[0x28]
0x4003b8:	je	0x4003bf
<Block for 0x40038c, 16 bytes>
0x40038c:	mov	eax, dword ptr [rbp - 0x54]
0x40038f:	cdqe	
0x400391:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400395:	mov	edi, eax
0x400397:	call	0x500040
<Block for 0x4002eb, 5 bytes>
0x4002eb:	cmp	eax, -1
0x4002ee:	je	0x400335
<Block for 0x4003bf, 2 bytes>
0x4003bf:	leave	
0x4003c0:	ret	
<Block for 0x4003ba, 5 bytes>
0x4003ba:	call	0x500050
<Block for 0x40039c, 2 bytes>
0x40039c:	jmp	0x4003aa
<Block for 0x4002f0, 24 bytes>
0x4002f0:	lea	rsi, [rbp - 0x16]
0x4002f4:	mov	eax, dword ptr [rbp - 0x5c]
0x4002f7:	mov	ecx, 0
0x4002fc:	mov	edx, 0xd
0x400301:	mov	edi, eax
0x400303:	call	0x500028
<Block for 0x400335, 1 bytes>
0x400335:	nop	
<Block for 0x400308, 9 bytes>
0x400308:	mov	dword ptr [rbp - 0x58], eax
0x40030b:	cmp	dword ptr [rbp - 0x58], -1
0x40030f:	je	0x400336
<Block for 0x400311, 6 bytes>
0x400311:	cmp	dword ptr [rbp - 0x58], 0
0x400315:	je	0x400336
<Block for 0x400317, 22 bytes>
0x400317:	mov	eax, dword ptr [rbp - 0x58]
0x40031a:	cdqe	
0x40031c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400321:	lea	rax, [rbp - 0x16]
0x400325:	mov	rdi, rax
0x400328:	call	0x500030
<Block for 0x40032d, 5 bytes>
0x40032d:	mov	dword ptr [rbp - 0x60], eax
0x400330:	jmp	0x400336
