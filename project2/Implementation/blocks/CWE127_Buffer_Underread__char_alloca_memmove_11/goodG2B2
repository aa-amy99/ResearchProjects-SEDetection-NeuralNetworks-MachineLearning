<Block for 0x400272, 81 bytes>
0x400272:	endbr64	
0x400276:	push	rbp
0x400277:	mov	rbp, rsp
0x40027a:	add	rsp, -0x80
0x40027e:	mov	rax, qword ptr fs:[0x28]
0x400287:	mov	qword ptr [rbp - 8], rax
0x40028b:	xor	eax, eax
0x40028d:	mov	eax, 0x10
0x400292:	sub	rax, 1
0x400296:	add	rax, 0x6c
0x40029a:	mov	esi, 0x10
0x40029f:	mov	edx, 0
0x4002a4:	div	rsi
0x4002a7:	imul	rax, rax, 0x10
0x4002ab:	mov	rdx, rax
0x4002ae:	and	rdx, 0xfffffffffffff000
0x4002b5:	mov	rcx, rsp
0x4002b8:	sub	rcx, rdx
0x4002bb:	mov	rdx, rcx
0x4002be:	cmp	rsp, rdx
0x4002c1:	je	0x4002d5
<Block for 0x4002d5, 26 bytes>
0x4002d5:	mov	rdx, rax
0x4002d8:	and	edx, 0xfff
0x4002de:	sub	rsp, rdx
0x4002e1:	mov	rdx, rax
0x4002e4:	and	edx, 0xfff
0x4002ea:	test	rdx, rdx
0x4002ed:	je	0x4002ff
<Block for 0x4002c3, 18 bytes>
0x4002c3:	sub	rsp, 0x1000
0x4002ca:	or	qword ptr [rsp + 0xff8], 0
0x4002d3:	jmp	0x4002be
<Block for 0x4002ff, 41 bytes>
0x4002ff:	mov	rax, rsp
0x400302:	add	rax, 0xf
0x400306:	shr	rax, 4
0x40030a:	shl	rax, 4
0x40030e:	mov	qword ptr [rbp - 0x78], rax
0x400312:	mov	rax, qword ptr [rbp - 0x78]
0x400316:	mov	edx, 0x63
0x40031b:	mov	esi, 0x41
0x400320:	mov	rdi, rax
0x400323:	call	0x500000
<Block for 0x4002ef, 57 bytes>
0x4002ef:	and	eax, 0xfff
0x4002f4:	sub	rax, 8
0x4002f8:	add	rax, rsp
0x4002fb:	or	qword ptr [rax], 0
0x4002ff:	mov	rax, rsp
0x400302:	add	rax, 0xf
0x400306:	shr	rax, 4
0x40030a:	shl	rax, 4
0x40030e:	mov	qword ptr [rbp - 0x78], rax
0x400312:	mov	rax, qword ptr [rbp - 0x78]
0x400316:	mov	edx, 0x63
0x40031b:	mov	esi, 0x41
0x400320:	mov	rdi, rax
0x400323:	call	0x500000
<Block for 0x4002be, 5 bytes>
0x4002be:	cmp	rsp, rdx
0x4002c1:	je	0x4002d5
<Block for 0x400328, 21 bytes>
0x400328:	mov	rax, qword ptr [rbp - 0x78]
0x40032c:	add	rax, 0x63
0x400330:	mov	byte ptr [rax], 0
0x400333:	mov	eax, 0
0x400338:	call	0x500008
<Block for 0x40033d, 4 bytes>
0x40033d:	test	eax, eax
0x40033f:	je	0x400349
<Block for 0x400349, 22 bytes>
0x400349:	lea	rax, [rbp - 0x70]
0x40034d:	mov	edx, 0x63
0x400352:	mov	esi, 0x43
0x400357:	mov	rdi, rax
0x40035a:	call	0x500000
<Block for 0x400341, 30 bytes>
0x400341:	mov	rax, qword ptr [rbp - 0x78]
0x400345:	mov	qword ptr [rbp - 0x80], rax
0x400349:	lea	rax, [rbp - 0x70]
0x40034d:	mov	edx, 0x63
0x400352:	mov	esi, 0x43
0x400357:	mov	rdi, rax
0x40035a:	call	0x500000
<Block for 0x40035f, 28 bytes>
0x40035f:	mov	byte ptr [rbp - 0xd], 0
0x400363:	mov	rcx, qword ptr [rbp - 0x80]
0x400367:	lea	rax, [rbp - 0x70]
0x40036b:	mov	edx, 0x64
0x400370:	mov	rsi, rcx
0x400373:	mov	rdi, rax
0x400376:	call	0x500010
<Block for 0x40037b, 16 bytes>
0x40037b:	mov	byte ptr [rbp - 0xd], 0
0x40037f:	lea	rax, [rbp - 0x70]
0x400383:	mov	rdi, rax
0x400386:	call	0x500018
<Block for 0x40038b, 16 bytes>
0x40038b:	nop	
0x40038c:	mov	rax, qword ptr [rbp - 8]
0x400390:	xor	rax, qword ptr fs:[0x28]
0x400399:	je	0x4003a0
<Block for 0x4003a0, 2 bytes>
0x4003a0:	leave	
0x4003a1:	ret	
<Block for 0x40039b, 5 bytes>
0x40039b:	call	0x500020
