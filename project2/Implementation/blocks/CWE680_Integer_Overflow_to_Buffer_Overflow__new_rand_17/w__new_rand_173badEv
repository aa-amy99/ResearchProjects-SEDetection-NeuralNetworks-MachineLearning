<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400014:	mov	dword ptr [rbp - 0x30], 0
0x40001b:	cmp	dword ptr [rbp - 0x30], 0
0x40001f:	jg	0x400070
<Block for 0x400021, 5 bytes>
0x400021:	call	0x500000
<Block for 0x400070, 25 bytes>
0x400070:	mov	eax, dword ptr [rbp - 0x2c]
0x400073:	cdqe	
0x400075:	shl	rax, 2
0x400079:	mov	qword ptr [rbp - 0x20], rax
0x40007d:	mov	rax, qword ptr [rbp - 0x20]
0x400081:	mov	rdi, rax
0x400084:	call	0x500008
<Block for 0x400026, 7 bytes>
0x400026:	and	eax, 1
0x400029:	test	eax, eax
0x40002b:	je	0x40004a
<Block for 0x400089, 23 bytes>
0x400089:	mov	qword ptr [rbp - 0x18], rax
0x40008d:	mov	qword ptr [rbp - 0x28], 0
0x400095:	mov	eax, dword ptr [rbp - 0x2c]
0x400098:	cdqe	
0x40009a:	cmp	qword ptr [rbp - 0x28], rax
0x40009e:	jae	0x4000c0
<Block for 0x40004a, 5 bytes>
0x40004a:	call	0x500000
<Block for 0x40002d, 5 bytes>
0x40002d:	call	0x500000
<Block for 0x4000a0, 32 bytes>
0x4000a0:	mov	rax, qword ptr [rbp - 0x28]
0x4000a4:	lea	rdx, [rax*4]
0x4000ac:	mov	rax, qword ptr [rbp - 0x18]
0x4000b0:	add	rax, rdx
0x4000b3:	mov	dword ptr [rax], 0
0x4000b9:	add	qword ptr [rbp - 0x28], 1
0x4000be:	jmp	0x400095
<Block for 0x4000c0, 13 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x18]
0x4000c4:	mov	eax, dword ptr [rax]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x500010
<Block for 0x40004f, 10 bytes>
0x40004f:	shl	eax, 0x1e
0x400052:	mov	ebx, eax
0x400054:	call	0x500000
<Block for 0x400032, 10 bytes>
0x400032:	shl	eax, 0x1e
0x400035:	mov	ebx, eax
0x400037:	call	0x500000
<Block for 0x400095, 11 bytes>
0x400095:	mov	eax, dword ptr [rbp - 0x2c]
0x400098:	cdqe	
0x40009a:	cmp	qword ptr [rbp - 0x28], rax
0x40009e:	jae	0x4000c0
<Block for 0x4000cd, 7 bytes>
0x4000cd:	cmp	qword ptr [rbp - 0x18], 0
0x4000d2:	je	0x4000e0
<Block for 0x400059, 10 bytes>
0x400059:	shl	eax, 0xf
0x40005c:	xor	ebx, eax
0x40005e:	call	0x500000
<Block for 0x40003c, 10 bytes>
0x40003c:	shl	eax, 0xf
0x40003f:	xor	ebx, eax
0x400041:	call	0x500000
<Block for 0x4000e0, 8 bytes>
0x4000e0:	nop	
0x4000e1:	add	rsp, 0x28
0x4000e5:	pop	rbx
0x4000e6:	pop	rbp
0x4000e7:	ret	
<Block for 0x4000d4, 12 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0x18]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500018
<Block for 0x400063, 13 bytes>
0x400063:	xor	eax, ebx
0x400065:	not	eax
0x400067:	mov	dword ptr [rbp - 0x2c], eax
0x40006a:	add	dword ptr [rbp - 0x30], 1
0x40006e:	jmp	0x40001b
<Block for 0x400046, 4 bytes>
0x400046:	xor	eax, ebx
0x400048:	jmp	0x400067
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x30], 0
0x40001f:	jg	0x400070
<Block for 0x400067, 9 bytes>
0x400067:	mov	dword ptr [rbp - 0x2c], eax
0x40006a:	add	dword ptr [rbp - 0x30], 1
0x40006e:	jmp	0x40001b
