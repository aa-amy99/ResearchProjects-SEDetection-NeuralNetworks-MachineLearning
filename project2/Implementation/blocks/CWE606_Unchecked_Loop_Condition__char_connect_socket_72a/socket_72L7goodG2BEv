<Block for 0x4003df, 46 bytes>
0x4003df:	endbr64	
0x4003e3:	push	rbp
0x4003e4:	mov	rbp, rsp
0x4003e7:	push	rbx
0x4003e8:	sub	rsp, 0xc8
0x4003ef:	mov	rax, qword ptr fs:[0x28]
0x4003f8:	mov	qword ptr [rbp - 0x18], rax
0x4003fc:	xor	eax, eax
0x4003fe:	lea	rax, [rbp - 0xc0]
0x400405:	mov	rdi, rax
0x400408:	call	0x400a98
<Block for 0x40040d, 145 bytes>
0x40040d:	mov	qword ptr [rbp - 0x80], 0
0x400415:	mov	qword ptr [rbp - 0x78], 0
0x40041d:	mov	qword ptr [rbp - 0x70], 0
0x400425:	mov	qword ptr [rbp - 0x68], 0
0x40042d:	mov	qword ptr [rbp - 0x60], 0
0x400435:	mov	qword ptr [rbp - 0x58], 0
0x40043d:	mov	qword ptr [rbp - 0x50], 0
0x400445:	mov	qword ptr [rbp - 0x48], 0
0x40044d:	mov	qword ptr [rbp - 0x40], 0
0x400455:	mov	qword ptr [rbp - 0x38], 0
0x40045d:	mov	qword ptr [rbp - 0x30], 0
0x400465:	mov	qword ptr [rbp - 0x28], 0
0x40046d:	mov	dword ptr [rbp - 0x20], 0
0x400474:	lea	rax, [rbp - 0x80]
0x400478:	mov	qword ptr [rbp - 0xd0], rax
0x40047f:	mov	rax, qword ptr [rbp - 0xd0]
0x400486:	mov	word ptr [rax], 0x3531
0x40048b:	mov	byte ptr [rax + 2], 0
0x40048f:	lea	rax, [rbp - 0xc0]
0x400496:	mov	rdi, rax
0x400499:	call	0x400c42
<Block for 0x40049e, 32 bytes>
0x40049e:	mov	qword ptr [rbp - 0xc8], rax
0x4004a5:	lea	rdx, [rbp - 0xc8]
0x4004ac:	lea	rax, [rbp - 0xa0]
0x4004b3:	mov	rsi, rdx
0x4004b6:	mov	rdi, rax
0x4004b9:	call	0x400c92
<Block for 0x4004be, 37 bytes>
0x4004be:	lea	rdx, [rbp - 0xd0]
0x4004c5:	mov	rsi, qword ptr [rbp - 0xa0]
0x4004cc:	lea	rax, [rbp - 0xc0]
0x4004d3:	mov	rcx, rdx
0x4004d6:	mov	edx, 1
0x4004db:	mov	rdi, rax
0x4004de:	call	0x400cc0
<Block for 0x4004e3, 15 bytes>
0x4004e3:	lea	rax, [rbp - 0xc0]
0x4004ea:	mov	rdi, rax
0x4004ed:	call	0x400c42
<Block for 0x4004f2, 32 bytes>
0x4004f2:	mov	qword ptr [rbp - 0xc8], rax
0x4004f9:	lea	rdx, [rbp - 0xc8]
0x400500:	lea	rax, [rbp - 0xa0]
0x400507:	mov	rsi, rdx
0x40050a:	mov	rdi, rax
0x40050d:	call	0x400c92
<Block for 0x400512, 37 bytes>
0x400512:	lea	rdx, [rbp - 0xd0]
0x400519:	mov	rsi, qword ptr [rbp - 0xa0]
0x400520:	lea	rax, [rbp - 0xc0]
0x400527:	mov	rcx, rdx
0x40052a:	mov	edx, 1
0x40052f:	mov	rdi, rax
0x400532:	call	0x400cc0
<Block for 0x400537, 15 bytes>
0x400537:	lea	rax, [rbp - 0xc0]
0x40053e:	mov	rdi, rax
0x400541:	call	0x400c42
<Block for 0x400546, 32 bytes>
0x400546:	mov	qword ptr [rbp - 0xc8], rax
0x40054d:	lea	rdx, [rbp - 0xc8]
0x400554:	lea	rax, [rbp - 0xa0]
0x40055b:	mov	rsi, rdx
0x40055e:	mov	rdi, rax
0x400561:	call	0x400c92
<Block for 0x400566, 37 bytes>
0x400566:	lea	rdx, [rbp - 0xd0]
0x40056d:	mov	rsi, qword ptr [rbp - 0xa0]
0x400574:	lea	rax, [rbp - 0xc0]
0x40057b:	mov	rcx, rdx
0x40057e:	mov	edx, 1
0x400583:	mov	rdi, rax
0x400586:	call	0x400cc0
<Block for 0x40058b, 25 bytes>
0x40058b:	lea	rdx, [rbp - 0xc0]
0x400592:	lea	rax, [rbp - 0xa0]
0x400599:	mov	rsi, rdx
0x40059c:	mov	rdi, rax
0x40059f:	call	0x400d86
<Block for 0x4005a4, 15 bytes>
0x4005a4:	lea	rax, [rbp - 0xa0]
0x4005ab:	mov	rdi, rax
0x4005ae:	call	0x500060
<Block for 0x4005b3, 15 bytes>
0x4005b3:	lea	rax, [rbp - 0xa0]
0x4005ba:	mov	rdi, rax
0x4005bd:	call	0x400bfa
<Block for 0x4005c2, 15 bytes>
0x4005c2:	lea	rax, [rbp - 0xc0]
0x4005c9:	mov	rdi, rax
0x4005cc:	call	0x400bfa
<Block for 0x4005d1, 16 bytes>
0x4005d1:	nop	
0x4005d2:	mov	rax, qword ptr [rbp - 0x18]
0x4005d6:	xor	rax, qword ptr fs:[0x28]
0x4005df:	je	0x400621
<Block for 0x400621, 10 bytes>
0x400621:	add	rsp, 0xc8
0x400628:	pop	rbx
0x400629:	pop	rbp
0x40062a:	ret	
<Block for 0x4005e1, 2 bytes>
0x4005e1:	jmp	0x40061c
<Block for 0x40061c, 5 bytes>
0x40061c:	call	0x500058
