<Block for 0x40062b, 46 bytes>
0x40062b:	endbr64	
0x40062f:	push	rbp
0x400630:	mov	rbp, rsp
0x400633:	push	rbx
0x400634:	sub	rsp, 0xf8
0x40063b:	mov	rax, qword ptr fs:[0x28]
0x400644:	mov	qword ptr [rbp - 0x18], rax
0x400648:	xor	eax, eax
0x40064a:	lea	rax, [rbp - 0xd0]
0x400651:	mov	rdi, rax
0x400654:	call	0x400a98
<Block for 0x400659, 139 bytes>
0x400659:	mov	qword ptr [rbp - 0x80], 0
0x400661:	mov	qword ptr [rbp - 0x78], 0
0x400669:	mov	qword ptr [rbp - 0x70], 0
0x400671:	mov	qword ptr [rbp - 0x68], 0
0x400679:	mov	qword ptr [rbp - 0x60], 0
0x400681:	mov	qword ptr [rbp - 0x58], 0
0x400689:	mov	qword ptr [rbp - 0x50], 0
0x400691:	mov	qword ptr [rbp - 0x48], 0
0x400699:	mov	qword ptr [rbp - 0x40], 0
0x4006a1:	mov	qword ptr [rbp - 0x38], 0
0x4006a9:	mov	qword ptr [rbp - 0x30], 0
0x4006b1:	mov	qword ptr [rbp - 0x28], 0
0x4006b9:	mov	dword ptr [rbp - 0x20], 0
0x4006c0:	lea	rax, [rbp - 0x80]
0x4006c4:	mov	qword ptr [rbp - 0xf0], rax
0x4006cb:	mov	dword ptr [rbp - 0xf8], 0xffffffff
0x4006d5:	mov	rax, qword ptr [rbp - 0xf0]
0x4006dc:	mov	rdi, rax
0x4006df:	call	0x500000
<Block for 0x4006e4, 27 bytes>
0x4006e4:	mov	qword ptr [rbp - 0xe0], rax
0x4006eb:	mov	edx, 6
0x4006f0:	mov	esi, 1
0x4006f5:	mov	edi, 2
0x4006fa:	call	0x500008
<Block for 0x4006ff, 19 bytes>
0x4006ff:	mov	dword ptr [rbp - 0xf8], eax
0x400705:	cmp	dword ptr [rbp - 0xf8], -1
0x40070c:	je	0x400854
<Block for 0x400854, 3 bytes>
0x400854:	nop	
0x400855:	jmp	0x400858
<Block for 0x400712, 25 bytes>
0x400712:	lea	rax, [rbp - 0x90]
0x400719:	mov	edx, 0x10
0x40071e:	mov	esi, 0
0x400723:	mov	rdi, rax
0x400726:	call	0x500010
<Block for 0x400858, 9 bytes>
0x400858:	cmp	dword ptr [rbp - 0xf8], -1
0x40085f:	je	0x40086e
<Block for 0x40072b, 21 bytes>
0x40072b:	mov	word ptr [rbp - 0x90], 2
0x400734:	lea	rdi, [rip + 0x2fb]
0x40073b:	call	0x500018
<Block for 0x40086e, 15 bytes>
0x40086e:	lea	rax, [rbp - 0xd0]
0x400875:	mov	rdi, rax
0x400878:	call	0x400c42
<Block for 0x400861, 13 bytes>
0x400861:	mov	eax, dword ptr [rbp - 0xf8]
0x400867:	mov	edi, eax
0x400869:	call	0x500040
<Block for 0x400740, 16 bytes>
0x400740:	mov	dword ptr [rbp - 0x8c], eax
0x400746:	mov	edi, 0x6987
0x40074b:	call	0x500020
<Block for 0x40087d, 32 bytes>
0x40087d:	mov	qword ptr [rbp - 0xe8], rax
0x400884:	lea	rdx, [rbp - 0xe8]
0x40088b:	lea	rax, [rbp - 0xb0]
0x400892:	mov	rsi, rdx
0x400895:	mov	rdi, rax
0x400898:	call	0x400c92
<Block for 0x400750, 35 bytes>
0x400750:	mov	word ptr [rbp - 0x8e], ax
0x400757:	lea	rcx, [rbp - 0x90]
0x40075e:	mov	eax, dword ptr [rbp - 0xf8]
0x400764:	mov	edx, 0x10
0x400769:	mov	rsi, rcx
0x40076c:	mov	edi, eax
0x40076e:	call	0x500028
<Block for 0x40089d, 37 bytes>
0x40089d:	lea	rdx, [rbp - 0xf0]
0x4008a4:	mov	rsi, qword ptr [rbp - 0xb0]
0x4008ab:	lea	rax, [rbp - 0xd0]
0x4008b2:	mov	rcx, rdx
0x4008b5:	mov	edx, 1
0x4008ba:	mov	rdi, rax
0x4008bd:	call	0x400cc0
<Block for 0x400773, 14 bytes>
0x400773:	cmp	eax, -1
0x400776:	sete	al
0x400779:	test	al, al
0x40077b:	jne	0x400857
<Block for 0x4008c2, 15 bytes>
0x4008c2:	lea	rax, [rbp - 0xd0]
0x4008c9:	mov	rdi, rax
0x4008cc:	call	0x400c42
<Block for 0x400781, 51 bytes>
0x400781:	mov	eax, 0x63
0x400786:	sub	rax, qword ptr [rbp - 0xe0]
0x40078d:	mov	rdx, rax
0x400790:	mov	rcx, qword ptr [rbp - 0xf0]
0x400797:	mov	rax, qword ptr [rbp - 0xe0]
0x40079e:	lea	rsi, [rcx + rax]
0x4007a2:	mov	eax, dword ptr [rbp - 0xf8]
0x4007a8:	mov	ecx, 0
0x4007ad:	mov	edi, eax
0x4007af:	call	0x500030
<Block for 0x400857, 1 bytes>
0x400857:	nop	
<Block for 0x4008d1, 32 bytes>
0x4008d1:	mov	qword ptr [rbp - 0xe8], rax
0x4008d8:	lea	rdx, [rbp - 0xe8]
0x4008df:	lea	rax, [rbp - 0xb0]
0x4008e6:	mov	rsi, rdx
0x4008e9:	mov	rdi, rax
0x4008ec:	call	0x400c92
<Block for 0x4007b4, 19 bytes>
0x4007b4:	mov	dword ptr [rbp - 0xf4], eax
0x4007ba:	cmp	dword ptr [rbp - 0xf4], -1
0x4007c1:	je	0x400858
<Block for 0x4008f1, 37 bytes>
0x4008f1:	lea	rdx, [rbp - 0xf0]
0x4008f8:	mov	rsi, qword ptr [rbp - 0xb0]
0x4008ff:	lea	rax, [rbp - 0xd0]
0x400906:	mov	rcx, rdx
0x400909:	mov	edx, 1
0x40090e:	mov	rdi, rax
0x400911:	call	0x400cc0
<Block for 0x4007c7, 13 bytes>
0x4007c7:	cmp	dword ptr [rbp - 0xf4], 0
0x4007ce:	je	0x400858
<Block for 0x400916, 15 bytes>
0x400916:	lea	rax, [rbp - 0xd0]
0x40091d:	mov	rdi, rax
0x400920:	call	0x400c42
<Block for 0x4007d4, 52 bytes>
0x4007d4:	mov	rax, qword ptr [rbp - 0xf0]
0x4007db:	mov	edx, dword ptr [rbp - 0xf4]
0x4007e1:	movsxd	rcx, edx
0x4007e4:	mov	rdx, qword ptr [rbp - 0xe0]
0x4007eb:	add	rdx, rcx
0x4007ee:	add	rax, rdx
0x4007f1:	mov	byte ptr [rax], 0
0x4007f4:	mov	rax, qword ptr [rbp - 0xf0]
0x4007fb:	mov	esi, 0xd
0x400800:	mov	rdi, rax
0x400803:	call	0x500038
<Block for 0x400925, 32 bytes>
0x400925:	mov	qword ptr [rbp - 0xe8], rax
0x40092c:	lea	rdx, [rbp - 0xe8]
0x400933:	lea	rax, [rbp - 0xb0]
0x40093a:	mov	rsi, rdx
0x40093d:	mov	rdi, rax
0x400940:	call	0x400c92
<Block for 0x400808, 17 bytes>
0x400808:	mov	qword ptr [rbp - 0xd8], rax
0x40080f:	cmp	qword ptr [rbp - 0xd8], 0
0x400817:	je	0x400823
<Block for 0x400945, 37 bytes>
0x400945:	lea	rdx, [rbp - 0xf0]
0x40094c:	mov	rsi, qword ptr [rbp - 0xb0]
0x400953:	lea	rax, [rbp - 0xd0]
0x40095a:	mov	rcx, rdx
0x40095d:	mov	edx, 1
0x400962:	mov	rdi, rax
0x400965:	call	0x400cc0
<Block for 0x400823, 20 bytes>
0x400823:	mov	rax, qword ptr [rbp - 0xf0]
0x40082a:	mov	esi, 0xa
0x40082f:	mov	rdi, rax
0x400832:	call	0x500038
<Block for 0x400819, 30 bytes>
0x400819:	mov	rax, qword ptr [rbp - 0xd8]
0x400820:	mov	byte ptr [rax], 0
0x400823:	mov	rax, qword ptr [rbp - 0xf0]
0x40082a:	mov	esi, 0xa
0x40082f:	mov	rdi, rax
0x400832:	call	0x500038
<Block for 0x40096a, 25 bytes>
0x40096a:	lea	rdx, [rbp - 0xd0]
0x400971:	lea	rax, [rbp - 0xb0]
0x400978:	mov	rsi, rdx
0x40097b:	mov	rdi, rax
0x40097e:	call	0x400d86
<Block for 0x400837, 17 bytes>
0x400837:	mov	qword ptr [rbp - 0xd8], rax
0x40083e:	cmp	qword ptr [rbp - 0xd8], 0
0x400846:	je	0x400858
<Block for 0x400983, 15 bytes>
0x400983:	lea	rax, [rbp - 0xb0]
0x40098a:	mov	rdi, rax
0x40098d:	call	0x500068
<Block for 0x400848, 12 bytes>
0x400848:	mov	rax, qword ptr [rbp - 0xd8]
0x40084f:	mov	byte ptr [rax], 0
0x400852:	jmp	0x400858
<Block for 0x400992, 15 bytes>
0x400992:	lea	rax, [rbp - 0xb0]
0x400999:	mov	rdi, rax
0x40099c:	call	0x400bfa
<Block for 0x4009a1, 15 bytes>
0x4009a1:	lea	rax, [rbp - 0xd0]
0x4009a8:	mov	rdi, rax
0x4009ab:	call	0x400bfa
<Block for 0x4009b0, 16 bytes>
0x4009b0:	nop	
0x4009b1:	mov	rax, qword ptr [rbp - 0x18]
0x4009b5:	xor	rax, qword ptr fs:[0x28]
0x4009be:	je	0x400a00
<Block for 0x400a00, 10 bytes>
0x400a00:	add	rsp, 0xf8
0x400a07:	pop	rbx
0x400a08:	pop	rbp
0x400a09:	ret	
<Block for 0x4009c0, 2 bytes>
0x4009c0:	jmp	0x4009fb
<Block for 0x4009fb, 5 bytes>
0x4009fb:	call	0x500058
