<Block for 0x4000dd, 36 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	add	rsp, -0x80
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	eax, 0
0x4000fd:	test	eax, eax
0x4000ff:	je	0x400112
<Block for 0x400112, 142 bytes>
0x400112:	mov	qword ptr [rbp - 0x70], 0
0x40011a:	mov	qword ptr [rbp - 0x68], 0
0x400122:	mov	qword ptr [rbp - 0x60], 0
0x40012a:	mov	qword ptr [rbp - 0x58], 0
0x400132:	mov	qword ptr [rbp - 0x50], 0
0x40013a:	mov	qword ptr [rbp - 0x48], 0
0x400142:	mov	qword ptr [rbp - 0x40], 0
0x40014a:	mov	qword ptr [rbp - 0x38], 0
0x400152:	mov	qword ptr [rbp - 0x30], 0
0x40015a:	mov	qword ptr [rbp - 0x28], 0
0x400162:	mov	qword ptr [rbp - 0x20], 0
0x40016a:	mov	qword ptr [rbp - 0x18], 0
0x400172:	mov	dword ptr [rbp - 0x10], 0
0x400179:	lea	rax, [rbp - 0x70]
0x40017d:	mov	qword ptr [rbp - 0x78], rax
0x400181:	mov	rax, qword ptr [rbp - 0x78]
0x400185:	mov	rdx, rax
0x400188:	lea	rsi, [rip + 0x141]
0x40018f:	lea	rdi, [rip + 0x140]
0x400196:	mov	eax, 0
0x40019b:	call	0x500000
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0x1e4]
0x400108:	call	0x500008
<Block for 0x4001a0, 5 bytes>
0x4001a0:	cmp	eax, -1
0x4001a3:	jne	0x4001b1
<Block for 0x40010d, 5 bytes>
0x40010d:	jmp	0x4001b1
<Block for 0x4001a5, 12 bytes>
0x4001a5:	lea	rdi, [rip + 0x131]
0x4001ac:	call	0x500008
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500010
