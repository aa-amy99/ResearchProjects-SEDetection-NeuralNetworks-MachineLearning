<Block for 0x40008d, 46 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x40
0x400099:	mov	rax, qword ptr fs:[0x28]
0x4000a2:	mov	qword ptr [rbp - 8], rax
0x4000a6:	xor	eax, eax
0x4000a8:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000af:	lea	rax, [rbp - 0x38]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x400000
<Block for 0x4000bb, 48 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x30], 0
0x4000c3:	mov	qword ptr [rbp - 0x28], 0
0x4000cb:	mov	qword ptr [rbp - 0x20], 0
0x4000d3:	mov	qword ptr [rbp - 0x18], 0
0x4000db:	mov	qword ptr [rbp - 0x10], 0
0x4000e3:	mov	eax, dword ptr [rbp - 0x38]
0x4000e6:	cmp	eax, 9
0x4000e9:	jg	0x40011b
<Block for 0x4000eb, 26 bytes>
0x4000eb:	mov	eax, dword ptr [rbp - 0x38]
0x4000ee:	cdqe	
0x4000f0:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4000f8:	mov	dword ptr [rbp - 0x34], 0
0x4000ff:	cmp	dword ptr [rbp - 0x34], 9
0x400103:	jg	0x400127
<Block for 0x40011b, 12 bytes>
0x40011b:	lea	rdi, [rip + 0x266]
0x400122:	call	0x500018
<Block for 0x400105, 16 bytes>
0x400105:	mov	eax, dword ptr [rbp - 0x34]
0x400108:	cdqe	
0x40010a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40010e:	mov	edi, eax
0x400110:	call	0x500028
<Block for 0x400127, 16 bytes>
0x400127:	nop	
0x400128:	mov	rax, qword ptr [rbp - 8]
0x40012c:	xor	rax, qword ptr fs:[0x28]
0x400135:	je	0x40013c
<Block for 0x400115, 6 bytes>
0x400115:	add	dword ptr [rbp - 0x34], 1
0x400119:	jmp	0x4000ff
<Block for 0x40013c, 2 bytes>
0x40013c:	leave	
0x40013d:	ret	
<Block for 0x400137, 5 bytes>
0x400137:	call	0x500020
<Block for 0x4000ff, 6 bytes>
0x4000ff:	cmp	dword ptr [rbp - 0x34], 9
0x400103:	jg	0x400127
