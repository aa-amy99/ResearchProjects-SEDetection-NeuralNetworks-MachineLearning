<Block for 0x400216, 76 bytes>
0x400216:	endbr64	
0x40021a:	push	rbp
0x40021b:	mov	rbp, rsp
0x40021e:	sub	rsp, 0x30
0x400222:	mov	qword ptr [rbp - 0x28], rdi
0x400226:	mov	rax, qword ptr fs:[0x28]
0x40022f:	mov	qword ptr [rbp - 8], rax
0x400233:	xor	eax, eax
0x400235:	mov	qword ptr [rbp - 0x16], 0
0x40023d:	mov	dword ptr [rbp - 0xe], 0
0x400244:	mov	word ptr [rbp - 0xa], 0
0x40024a:	mov	rdx, qword ptr [rip + 0xffdaf]
0x400251:	lea	rax, [rbp - 0x16]
0x400255:	mov	esi, 0xe
0x40025a:	mov	rdi, rax
0x40025d:	call	0x500008
<Block for 0x400262, 10 bytes>
0x400262:	test	rax, rax
0x400265:	setne	al
0x400268:	test	al, al
0x40026a:	je	0x400280
<Block for 0x400280, 12 bytes>
0x400280:	lea	rdi, [rip + 0xf1]
0x400287:	call	0x500018
<Block for 0x40026c, 12 bytes>
0x40026c:	lea	rax, [rbp - 0x16]
0x400270:	mov	rdi, rax
0x400273:	call	0x500010
<Block for 0x40028c, 16 bytes>
0x40028c:	nop	
0x40028d:	mov	rax, qword ptr [rbp - 8]
0x400291:	xor	rax, qword ptr fs:[0x28]
0x40029a:	je	0x4002a1
<Block for 0x400278, 8 bytes>
0x400278:	mov	rdx, qword ptr [rbp - 0x28]
0x40027c:	mov	dword ptr [rdx], eax
0x40027e:	jmp	0x40028c
<Block for 0x4002a1, 2 bytes>
0x4002a1:	leave	
0x4002a2:	ret	
<Block for 0x40029c, 5 bytes>
0x40029c:	call	0x500020
