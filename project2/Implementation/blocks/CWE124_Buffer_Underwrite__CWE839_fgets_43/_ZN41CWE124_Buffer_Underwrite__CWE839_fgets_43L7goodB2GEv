<Block for 0x4002a3, 46 bytes>
0x4002a3:	endbr64	
0x4002a7:	push	rbp
0x4002a8:	mov	rbp, rsp
0x4002ab:	sub	rsp, 0x40
0x4002af:	mov	rax, qword ptr fs:[0x28]
0x4002b8:	mov	qword ptr [rbp - 8], rax
0x4002bc:	xor	eax, eax
0x4002be:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4002c5:	lea	rax, [rbp - 0x38]
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x400216
<Block for 0x4002d1, 47 bytes>
0x4002d1:	mov	qword ptr [rbp - 0x30], 0
0x4002d9:	mov	qword ptr [rbp - 0x28], 0
0x4002e1:	mov	qword ptr [rbp - 0x20], 0
0x4002e9:	mov	qword ptr [rbp - 0x18], 0
0x4002f1:	mov	qword ptr [rbp - 0x10], 0
0x4002f9:	mov	eax, dword ptr [rbp - 0x38]
0x4002fc:	test	eax, eax
0x4002fe:	js	0x400338
<Block for 0x400338, 12 bytes>
0x400338:	lea	rdi, [rip + 0x69]
0x40033f:	call	0x500018
<Block for 0x400300, 8 bytes>
0x400300:	mov	eax, dword ptr [rbp - 0x38]
0x400303:	cmp	eax, 9
0x400306:	jg	0x400338
<Block for 0x400344, 2 bytes>
0x400344:	jmp	0x400347
<Block for 0x400308, 26 bytes>
0x400308:	mov	eax, dword ptr [rbp - 0x38]
0x40030b:	cdqe	
0x40030d:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400315:	mov	dword ptr [rbp - 0x34], 0
0x40031c:	cmp	dword ptr [rbp - 0x34], 9
0x400320:	jg	0x400346
<Block for 0x400347, 16 bytes>
0x400347:	nop	
0x400348:	mov	rax, qword ptr [rbp - 8]
0x40034c:	xor	rax, qword ptr fs:[0x28]
0x400355:	je	0x40035c
<Block for 0x400322, 16 bytes>
0x400322:	mov	eax, dword ptr [rbp - 0x34]
0x400325:	cdqe	
0x400327:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40032b:	mov	edi, eax
0x40032d:	call	0x500028
<Block for 0x400346, 1 bytes>
0x400346:	nop	
<Block for 0x40035c, 2 bytes>
0x40035c:	leave	
0x40035d:	ret	
<Block for 0x400357, 5 bytes>
0x400357:	call	0x500020
<Block for 0x400332, 6 bytes>
0x400332:	add	dword ptr [rbp - 0x34], 1
0x400336:	jmp	0x40031c
<Block for 0x40031c, 6 bytes>
0x40031c:	cmp	dword ptr [rbp - 0x34], 9
0x400320:	jg	0x400346
