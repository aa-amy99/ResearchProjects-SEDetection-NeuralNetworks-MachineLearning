<Block for 0x400149, 37 bytes>
0x400149:	endbr64	
0x40014d:	push	rbp
0x40014e:	mov	rbp, rsp
0x400151:	sub	rsp, 0x30
0x400155:	mov	rax, qword ptr fs:[0x28]
0x40015e:	mov	qword ptr [rbp - 8], rax
0x400162:	xor	eax, eax
0x400164:	mov	eax, 0
0x400169:	call	0x500000
<Block for 0x40016e, 4 bytes>
0x40016e:	test	eax, eax
0x400170:	je	0x4001ca
<Block for 0x4001ca, 16 bytes>
0x4001ca:	nop	
0x4001cb:	mov	rax, qword ptr [rbp - 8]
0x4001cf:	xor	rax, qword ptr fs:[0x28]
0x4001d8:	je	0x4001df
<Block for 0x400172, 38 bytes>
0x400172:	movabs	rax, 0x7271706f2f636261
0x40017c:	mov	qword ptr [rbp - 0x14], rax
0x400180:	mov	dword ptr [rbp - 0xc], 0x757473
0x400187:	lea	rax, [rbp - 0x14]
0x40018b:	mov	esi, 0x2f
0x400190:	mov	rdi, rax
0x400193:	call	0x500008
<Block for 0x4001df, 2 bytes>
0x4001df:	leave	
0x4001e0:	ret	
<Block for 0x4001da, 5 bytes>
0x4001da:	call	0x500020
<Block for 0x400198, 11 bytes>
0x400198:	mov	qword ptr [rbp - 0x28], rax
0x40019c:	cmp	qword ptr [rbp - 0x28], 0
0x4001a1:	jne	0x4001ad
<Block for 0x4001a3, 10 bytes>
0x4001a3:	mov	edi, 1
0x4001a8:	call	0x500010
<Block for 0x4001ad, 29 bytes>
0x4001ad:	lea	rax, [rbp - 0x14]
0x4001b1:	mov	rdx, qword ptr [rbp - 0x28]
0x4001b5:	sub	rdx, rax
0x4001b8:	mov	rax, rdx
0x4001bb:	mov	qword ptr [rbp - 0x20], rax
0x4001bf:	mov	rax, qword ptr [rbp - 0x20]
0x4001c3:	mov	edi, eax
0x4001c5:	call	0x500018
