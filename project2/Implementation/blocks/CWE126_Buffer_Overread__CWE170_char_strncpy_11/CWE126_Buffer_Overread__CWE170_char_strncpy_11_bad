<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0
0x400023:	call	0x500000
<Block for 0x400028, 4 bytes>
0x400028:	test	eax, eax
0x40002a:	je	0x400076
<Block for 0x400076, 16 bytes>
0x400076:	nop	
0x400077:	mov	rax, qword ptr [rbp - 8]
0x40007b:	xor	rax, qword ptr fs:[0x28]
0x400084:	je	0x40008b
<Block for 0x40002c, 25 bytes>
0x40002c:	lea	rax, [rbp - 0xa0]
0x400033:	mov	edx, 0x95
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x40008b, 2 bytes>
0x40008b:	leave	
0x40008c:	ret	
<Block for 0x400086, 5 bytes>
0x400086:	call	0x500020
<Block for 0x400045, 34 bytes>
0x400045:	mov	byte ptr [rbp - 0xb], 0
0x400049:	lea	rcx, [rbp - 0xa0]
0x400050:	lea	rax, [rbp - 0x110]
0x400057:	mov	edx, 0x63
0x40005c:	mov	rsi, rcx
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x400067, 15 bytes>
0x400067:	lea	rax, [rbp - 0x110]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500018
