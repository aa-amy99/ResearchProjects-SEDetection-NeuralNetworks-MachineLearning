<Block for 0x400106, 37 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	sub	rsp, 0x50
0x400112:	mov	rax, qword ptr fs:[0x28]
0x40011b:	mov	qword ptr [rbp - 8], rax
0x40011f:	xor	eax, eax
0x400121:	mov	eax, 0
0x400126:	call	0x500000
<Block for 0x40012b, 4 bytes>
0x40012b:	test	eax, eax
0x40012d:	je	0x400193
<Block for 0x400193, 98 bytes>
0x400193:	mov	dword ptr [rbp - 0x30], 1
0x40019a:	mov	dword ptr [rbp - 0x2c], 2
0x4001a1:	mov	dword ptr [rbp - 0x28], 3
0x4001a8:	mov	dword ptr [rbp - 0x24], 4
0x4001af:	mov	dword ptr [rbp - 0x20], 5
0x4001b6:	mov	dword ptr [rbp - 0x1c], 6
0x4001bd:	mov	dword ptr [rbp - 0x18], 7
0x4001c4:	mov	dword ptr [rbp - 0x14], 8
0x4001cb:	mov	dword ptr [rbp - 0x10], 9
0x4001d2:	mov	dword ptr [rbp - 0xc], 0xa
0x4001d9:	lea	rax, [rbp - 0x30]
0x4001dd:	mov	qword ptr [rbp - 0x40], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0x40]
0x4001e5:	mov	eax, dword ptr [rax + 8]
0x4001e8:	mov	dword ptr [rbp - 0x48], eax
0x4001eb:	mov	eax, dword ptr [rbp - 0x48]
0x4001ee:	mov	edi, eax
0x4001f0:	call	0x500008
<Block for 0x40012f, 98 bytes>
0x40012f:	mov	dword ptr [rbp - 0x30], 1
0x400136:	mov	dword ptr [rbp - 0x2c], 2
0x40013d:	mov	dword ptr [rbp - 0x28], 3
0x400144:	mov	dword ptr [rbp - 0x24], 4
0x40014b:	mov	dword ptr [rbp - 0x20], 5
0x400152:	mov	dword ptr [rbp - 0x1c], 6
0x400159:	mov	dword ptr [rbp - 0x18], 7
0x400160:	mov	dword ptr [rbp - 0x14], 8
0x400167:	mov	dword ptr [rbp - 0x10], 9
0x40016e:	mov	dword ptr [rbp - 0xc], 0xa
0x400175:	lea	rax, [rbp - 0x30]
0x400179:	mov	qword ptr [rbp - 0x38], rax
0x40017d:	mov	rax, qword ptr [rbp - 0x38]
0x400181:	mov	eax, dword ptr [rax + 8]
0x400184:	mov	dword ptr [rbp - 0x44], eax
0x400187:	mov	eax, dword ptr [rbp - 0x44]
0x40018a:	mov	edi, eax
0x40018c:	call	0x500008
<Block for 0x4001f5, 16 bytes>
0x4001f5:	nop	
0x4001f6:	mov	rax, qword ptr [rbp - 8]
0x4001fa:	xor	rax, qword ptr fs:[0x28]
0x400203:	je	0x40020a
<Block for 0x400191, 2 bytes>
0x400191:	jmp	0x4001f5
<Block for 0x40020a, 2 bytes>
0x40020a:	leave	
0x40020b:	ret	
<Block for 0x400205, 5 bytes>
0x400205:	call	0x500010
