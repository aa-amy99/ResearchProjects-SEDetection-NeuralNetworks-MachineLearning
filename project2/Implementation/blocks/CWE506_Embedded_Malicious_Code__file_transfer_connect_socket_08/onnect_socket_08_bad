<Block for 0x40000f, 34 bytes>
0x40000f:	endbr64	
0x400013:	push	rbp
0x400014:	mov	rbp, rsp
0x400017:	push	rbx
0x400018:	lea	r11, [rsp - 0x10000]
0x400020:	sub	rsp, 0x1000
0x400027:	or	qword ptr [rsp], 0
0x40002c:	cmp	rsp, r11
0x40002f:	jne	0x400020
<Block for 0x400031, 29 bytes>
0x400031:	sub	rsp, 0x38
0x400035:	mov	rax, qword ptr fs:[0x28]
0x40003e:	mov	qword ptr [rbp - 0x18], rax
0x400042:	xor	eax, eax
0x400044:	mov	eax, 0
0x400049:	call	0x400000
<Block for 0x400020, 17 bytes>
0x400020:	sub	rsp, 0x1000
0x400027:	or	qword ptr [rsp], 0
0x40002c:	cmp	rsp, r11
0x40002f:	jne	0x400020
<Block for 0x40004e, 8 bytes>
0x40004e:	test	eax, eax
0x400050:	je	0x4001a7
<Block for 0x4001a7, 16 bytes>
0x4001a7:	nop	
0x4001a8:	mov	rax, qword ptr [rbp - 0x18]
0x4001ac:	xor	rax, qword ptr fs:[0x28]
0x4001b5:	je	0x4001bc
<Block for 0x400056, 29 bytes>
0x400056:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x400060:	lea	rsi, [rip + 0x15f]
0x400067:	lea	rdi, [rip + 0x15a]
0x40006e:	call	0x500000
<Block for 0x4001bc, 10 bytes>
0x4001bc:	add	rsp, 0x10038
0x4001c3:	pop	rbx
0x4001c4:	pop	rbp
0x4001c5:	ret	
<Block for 0x4001b7, 5 bytes>
0x4001b7:	call	0x500058
<Block for 0x400073, 17 bytes>
0x400073:	mov	qword ptr [rbp - 0x10038], rax
0x40007a:	cmp	qword ptr [rbp - 0x10038], 0
0x400082:	je	0x4000c6
<Block for 0x4000c6, 20 bytes>
0x4000c6:	mov	edx, 6
0x4000cb:	mov	esi, 1
0x4000d0:	mov	edi, 2
0x4000d5:	call	0x500020
<Block for 0x400084, 27 bytes>
0x400084:	mov	rdx, qword ptr [rbp - 0x10038]
0x40008b:	lea	rax, [rbp - 0x10020]
0x400092:	mov	esi, 0xffff
0x400097:	mov	rdi, rax
0x40009a:	call	0x500008
<Block for 0x4000da, 19 bytes>
0x4000da:	mov	dword ptr [rbp - 0x1003c], eax
0x4000e0:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000e7:	je	0x40018d
<Block for 0x40009f, 5 bytes>
0x40009f:	test	rax, rax
0x4000a2:	jne	0x4000b7
<Block for 0x40018d, 3 bytes>
0x40018d:	nop	
0x40018e:	jmp	0x400191
<Block for 0x4000ed, 25 bytes>
0x4000ed:	lea	rax, [rbp - 0x10030]
0x4000f4:	mov	edx, 0x10
0x4000f9:	mov	esi, 0
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500028
<Block for 0x4000a4, 12 bytes>
0x4000a4:	lea	rdi, [rip + 0x126]
0x4000ab:	call	0x500010
<Block for 0x4000b7, 15 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x10038]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x400191, 9 bytes>
0x400191:	cmp	dword ptr [rbp - 0x1003c], -1
0x400198:	je	0x4001a7
<Block for 0x400106, 29 bytes>
0x400106:	mov	word ptr [rbp - 0x10030], 2
0x40010f:	mov	dword ptr [rbp - 0x1002c], 0
0x400119:	mov	edi, 0x6987
0x40011e:	call	0x500030
<Block for 0x4000b0, 22 bytes>
0x4000b0:	mov	byte ptr [rbp - 0x10020], 0
0x4000b7:	mov	rax, qword ptr [rbp - 0x10038]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x40019a, 13 bytes>
0x40019a:	mov	eax, dword ptr [rbp - 0x1003c]
0x4001a0:	mov	edi, eax
0x4001a2:	call	0x500050
<Block for 0x400123, 35 bytes>
0x400123:	mov	word ptr [rbp - 0x1002e], ax
0x40012a:	lea	rcx, [rbp - 0x10030]
0x400131:	mov	eax, dword ptr [rbp - 0x1003c]
0x400137:	mov	edx, 0x10
0x40013c:	mov	rsi, rcx
0x40013f:	mov	edi, eax
0x400141:	call	0x500038
<Block for 0x400146, 5 bytes>
0x400146:	cmp	eax, -1
0x400149:	je	0x400190
<Block for 0x40014b, 15 bytes>
0x40014b:	lea	rax, [rbp - 0x10020]
0x400152:	mov	rdi, rax
0x400155:	call	0x500040
<Block for 0x400190, 1 bytes>
0x400190:	nop	
<Block for 0x40015a, 28 bytes>
0x40015a:	mov	rdx, rax
0x40015d:	lea	rsi, [rbp - 0x10020]
0x400164:	mov	eax, dword ptr [rbp - 0x1003c]
0x40016a:	mov	ecx, 0
0x40016f:	mov	edi, eax
0x400171:	call	0x500048
<Block for 0x400176, 18 bytes>
0x400176:	mov	rbx, rax
0x400179:	lea	rax, [rbp - 0x10020]
0x400180:	mov	rdi, rax
0x400183:	call	0x500040
<Block for 0x400188, 5 bytes>
0x400188:	cmp	rbx, rax
0x40018b:	jmp	0x400191
