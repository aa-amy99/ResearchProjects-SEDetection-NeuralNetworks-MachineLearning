<Block for 0x4000a7, 59 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	sub	rsp, 0x90
0x4000b6:	mov	qword ptr [rbp - 0x88], rdi
0x4000bd:	mov	rax, qword ptr fs:[0x28]
0x4000c6:	mov	qword ptr [rbp - 8], rax
0x4000ca:	xor	eax, eax
0x4000cc:	lea	rax, [rbp - 0x70]
0x4000d0:	mov	edx, 0x63
0x4000d5:	mov	esi, 0x43
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500000
<Block for 0x4000e2, 19 bytes>
0x4000e2:	mov	byte ptr [rbp - 0xd], 0
0x4000e6:	mov	qword ptr [rbp - 0x78], 0
0x4000ee:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000f3:	ja	0x40011a
<Block for 0x4000f5, 37 bytes>
0x4000f5:	mov	rdx, qword ptr [rbp - 0x88]
0x4000fc:	mov	rax, qword ptr [rbp - 0x78]
0x400100:	add	rdx, rax
0x400103:	lea	rcx, [rbp - 0x70]
0x400107:	mov	rax, qword ptr [rbp - 0x78]
0x40010b:	add	rax, rcx
0x40010e:	movzx	eax, byte ptr [rax]
0x400111:	mov	byte ptr [rdx], al
0x400113:	add	qword ptr [rbp - 0x78], 1
0x400118:	jmp	0x4000ee
<Block for 0x40011a, 29 bytes>
0x40011a:	mov	rax, qword ptr [rbp - 0x88]
0x400121:	add	rax, 0x63
0x400125:	mov	byte ptr [rax], 0
0x400128:	mov	rax, qword ptr [rbp - 0x88]
0x40012f:	mov	rdi, rax
0x400132:	call	0x500008
<Block for 0x4000ee, 7 bytes>
0x4000ee:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000f3:	ja	0x40011a
<Block for 0x400137, 16 bytes>
0x400137:	nop	
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	xor	rax, qword ptr fs:[0x28]
0x400145:	je	0x40014c
<Block for 0x40014c, 2 bytes>
0x40014c:	leave	
0x40014d:	ret	
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500010
