<Block for 0x40001e, 40 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x120
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0
0x400041:	call	0x400000
<Block for 0x400046, 4 bytes>
0x400046:	test	eax, eax
0x400048:	je	0x4000b1
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x40004a, 25 bytes>
0x40004a:	lea	rax, [rbp - 0xa0]
0x400051:	mov	edx, 0x95
0x400056:	mov	esi, 0x41
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500000
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500010
<Block for 0x400063, 16 bytes>
0x400063:	mov	byte ptr [rbp - 0xb], 0
0x400067:	mov	dword ptr [rbp - 0x114], 0
0x400071:	jmp	0x400099
<Block for 0x400099, 9 bytes>
0x400099:	cmp	dword ptr [rbp - 0x114], 0x62
0x4000a0:	jle	0x400073
<Block for 0x400073, 47 bytes>
0x400073:	mov	eax, dword ptr [rbp - 0x114]
0x400079:	cdqe	
0x40007b:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400083:	mov	eax, dword ptr [rbp - 0x114]
0x400089:	cdqe	
0x40008b:	mov	byte ptr [rbp + rax - 0x110], dl
0x400092:	add	dword ptr [rbp - 0x114], 1
0x400099:	cmp	dword ptr [rbp - 0x114], 0x62
0x4000a0:	jle	0x400073
<Block for 0x4000a2, 15 bytes>
0x4000a2:	lea	rax, [rbp - 0x110]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500008
