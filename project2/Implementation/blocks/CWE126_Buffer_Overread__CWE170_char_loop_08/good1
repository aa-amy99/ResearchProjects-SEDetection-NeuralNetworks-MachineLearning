<Block for 0x4000c8, 40 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0x120
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	mov	eax, 0
0x4000eb:	call	0x40000f
<Block for 0x4000f0, 4 bytes>
0x4000f0:	test	eax, eax
0x4000f2:	je	0x400102
<Block for 0x400102, 25 bytes>
0x400102:	lea	rax, [rbp - 0xa0]
0x400109:	mov	edx, 0x95
0x40010e:	mov	esi, 0x41
0x400113:	mov	rdi, rax
0x400116:	call	0x500000
<Block for 0x4000f4, 12 bytes>
0x4000f4:	lea	rdi, [rip + 0x15c]
0x4000fb:	call	0x500008
<Block for 0x40011b, 16 bytes>
0x40011b:	mov	byte ptr [rbp - 0xb], 0
0x40011f:	mov	dword ptr [rbp - 0x114], 0
0x400129:	jmp	0x400151
<Block for 0x400100, 2 bytes>
0x400100:	jmp	0x400170
<Block for 0x400151, 9 bytes>
0x400151:	cmp	dword ptr [rbp - 0x114], 0x62
0x400158:	jle	0x40012b
<Block for 0x400170, 16 bytes>
0x400170:	nop	
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	xor	rax, qword ptr fs:[0x28]
0x40017e:	je	0x400185
<Block for 0x40012b, 47 bytes>
0x40012b:	mov	eax, dword ptr [rbp - 0x114]
0x400131:	cdqe	
0x400133:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x40013b:	mov	eax, dword ptr [rbp - 0x114]
0x400141:	cdqe	
0x400143:	mov	byte ptr [rbp + rax - 0x110], dl
0x40014a:	add	dword ptr [rbp - 0x114], 1
0x400151:	cmp	dword ptr [rbp - 0x114], 0x62
0x400158:	jle	0x40012b
<Block for 0x40015a, 22 bytes>
0x40015a:	mov	byte ptr [rbp - 0xad], 0
0x400161:	lea	rax, [rbp - 0x110]
0x400168:	mov	rdi, rax
0x40016b:	call	0x500008
<Block for 0x400185, 2 bytes>
0x400185:	leave	
0x400186:	ret	
<Block for 0x400180, 5 bytes>
0x400180:	call	0x500010
