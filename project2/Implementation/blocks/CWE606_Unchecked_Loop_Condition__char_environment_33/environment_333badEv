<Block for 0x400000, 173 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x98]
0x400025:	mov	qword ptr [rbp - 0x90], rax
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	qword ptr [rbp - 0x98], rax
0x40009e:	mov	rax, qword ptr [rbp - 0x98]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500000
<Block for 0x4000ad, 19 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x88], rax
0x4000b4:	lea	rdi, [rip + 0x3aa]
0x4000bb:	call	0x500008
<Block for 0x4000c0, 11 bytes>
0x4000c0:	mov	qword ptr [rbp - 0x80], rax
0x4000c4:	cmp	qword ptr [rbp - 0x80], 0
0x4000c9:	je	0x4000fa
<Block for 0x4000fa, 45 bytes>
0x4000fa:	mov	rax, qword ptr [rbp - 0x90]
0x400101:	mov	rax, qword ptr [rax]
0x400104:	mov	qword ptr [rbp - 0x78], rax
0x400108:	lea	rdx, [rbp - 0xa4]
0x40010f:	mov	rax, qword ptr [rbp - 0x78]
0x400113:	lea	rsi, [rip + 0x34f]
0x40011a:	mov	rdi, rax
0x40011d:	mov	eax, 0
0x400122:	call	0x500018
<Block for 0x4000cb, 47 bytes>
0x4000cb:	mov	eax, 0x63
0x4000d0:	sub	rax, qword ptr [rbp - 0x88]
0x4000d7:	mov	rdx, rax
0x4000da:	mov	rcx, qword ptr [rbp - 0x98]
0x4000e1:	mov	rax, qword ptr [rbp - 0x88]
0x4000e8:	add	rcx, rax
0x4000eb:	mov	rax, qword ptr [rbp - 0x80]
0x4000ef:	mov	rsi, rax
0x4000f2:	mov	rdi, rcx
0x4000f5:	call	0x500010
<Block for 0x400127, 10 bytes>
0x400127:	cmp	eax, 1
0x40012a:	sete	al
0x40012d:	test	al, al
0x40012f:	je	0x400170
<Block for 0x400170, 16 bytes>
0x400170:	nop	
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	xor	rax, qword ptr fs:[0x28]
0x40017e:	je	0x400185
<Block for 0x400131, 34 bytes>
0x400131:	mov	dword ptr [rbp - 0x9c], 0
0x40013b:	mov	dword ptr [rbp - 0xa0], 0
0x400145:	mov	eax, dword ptr [rbp - 0xa4]
0x40014b:	cmp	dword ptr [rbp - 0xa0], eax
0x400151:	jge	0x400163
<Block for 0x400185, 2 bytes>
0x400185:	leave	
0x400186:	ret	
<Block for 0x400180, 5 bytes>
0x400180:	call	0x500028
<Block for 0x400153, 16 bytes>
0x400153:	add	dword ptr [rbp - 0x9c], 1
0x40015a:	add	dword ptr [rbp - 0xa0], 1
0x400161:	jmp	0x400145
<Block for 0x400163, 13 bytes>
0x400163:	mov	eax, dword ptr [rbp - 0x9c]
0x400169:	mov	edi, eax
0x40016b:	call	0x500020
<Block for 0x400145, 14 bytes>
0x400145:	mov	eax, dword ptr [rbp - 0xa4]
0x40014b:	cmp	dword ptr [rbp - 0xa0], eax
0x400151:	jge	0x400163
