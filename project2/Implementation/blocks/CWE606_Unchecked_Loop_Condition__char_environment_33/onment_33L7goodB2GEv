<Block for 0x4002bc, 173 bytes>
0x4002bc:	endbr64	
0x4002c0:	push	rbp
0x4002c1:	mov	rbp, rsp
0x4002c4:	sub	rsp, 0xb0
0x4002cb:	mov	rax, qword ptr fs:[0x28]
0x4002d4:	mov	qword ptr [rbp - 8], rax
0x4002d8:	xor	eax, eax
0x4002da:	lea	rax, [rbp - 0x98]
0x4002e1:	mov	qword ptr [rbp - 0x90], rax
0x4002e8:	mov	qword ptr [rbp - 0x70], 0
0x4002f0:	mov	qword ptr [rbp - 0x68], 0
0x4002f8:	mov	qword ptr [rbp - 0x60], 0
0x400300:	mov	qword ptr [rbp - 0x58], 0
0x400308:	mov	qword ptr [rbp - 0x50], 0
0x400310:	mov	qword ptr [rbp - 0x48], 0
0x400318:	mov	qword ptr [rbp - 0x40], 0
0x400320:	mov	qword ptr [rbp - 0x38], 0
0x400328:	mov	qword ptr [rbp - 0x30], 0
0x400330:	mov	qword ptr [rbp - 0x28], 0
0x400338:	mov	qword ptr [rbp - 0x20], 0
0x400340:	mov	qword ptr [rbp - 0x18], 0
0x400348:	mov	dword ptr [rbp - 0x10], 0
0x40034f:	lea	rax, [rbp - 0x70]
0x400353:	mov	qword ptr [rbp - 0x98], rax
0x40035a:	mov	rax, qword ptr [rbp - 0x98]
0x400361:	mov	rdi, rax
0x400364:	call	0x500000
<Block for 0x400369, 19 bytes>
0x400369:	mov	qword ptr [rbp - 0x88], rax
0x400370:	lea	rdi, [rip + 0xee]
0x400377:	call	0x500008
<Block for 0x40037c, 11 bytes>
0x40037c:	mov	qword ptr [rbp - 0x80], rax
0x400380:	cmp	qword ptr [rbp - 0x80], 0
0x400385:	je	0x4003b6
<Block for 0x4003b6, 45 bytes>
0x4003b6:	mov	rax, qword ptr [rbp - 0x90]
0x4003bd:	mov	rax, qword ptr [rax]
0x4003c0:	mov	qword ptr [rbp - 0x78], rax
0x4003c4:	lea	rdx, [rbp - 0xa4]
0x4003cb:	mov	rax, qword ptr [rbp - 0x78]
0x4003cf:	lea	rsi, [rip + 0x93]
0x4003d6:	mov	rdi, rax
0x4003d9:	mov	eax, 0
0x4003de:	call	0x500018
<Block for 0x400387, 47 bytes>
0x400387:	mov	eax, 0x63
0x40038c:	sub	rax, qword ptr [rbp - 0x88]
0x400393:	mov	rdx, rax
0x400396:	mov	rcx, qword ptr [rbp - 0x98]
0x40039d:	mov	rax, qword ptr [rbp - 0x88]
0x4003a4:	add	rcx, rax
0x4003a7:	mov	rax, qword ptr [rbp - 0x80]
0x4003ab:	mov	rsi, rax
0x4003ae:	mov	rdi, rcx
0x4003b1:	call	0x500010
<Block for 0x4003e3, 10 bytes>
0x4003e3:	cmp	eax, 1
0x4003e6:	sete	al
0x4003e9:	test	al, al
0x4003eb:	je	0x400439
<Block for 0x400439, 16 bytes>
0x400439:	nop	
0x40043a:	mov	rax, qword ptr [rbp - 8]
0x40043e:	xor	rax, qword ptr fs:[0x28]
0x400447:	je	0x40044e
<Block for 0x4003ed, 13 bytes>
0x4003ed:	mov	eax, dword ptr [rbp - 0xa4]
0x4003f3:	cmp	eax, 0x270f
0x4003f8:	jg	0x400439
<Block for 0x40044e, 2 bytes>
0x40044e:	leave	
0x40044f:	ret	
<Block for 0x400449, 5 bytes>
0x400449:	call	0x500028
<Block for 0x4003fa, 34 bytes>
0x4003fa:	mov	dword ptr [rbp - 0x9c], 0
0x400404:	mov	dword ptr [rbp - 0xa0], 0
0x40040e:	mov	eax, dword ptr [rbp - 0xa4]
0x400414:	cmp	dword ptr [rbp - 0xa0], eax
0x40041a:	jge	0x40042c
<Block for 0x40041c, 16 bytes>
0x40041c:	add	dword ptr [rbp - 0x9c], 1
0x400423:	add	dword ptr [rbp - 0xa0], 1
0x40042a:	jmp	0x40040e
<Block for 0x40042c, 13 bytes>
0x40042c:	mov	eax, dword ptr [rbp - 0x9c]
0x400432:	mov	edi, eax
0x400434:	call	0x500020
<Block for 0x40040e, 14 bytes>
0x40040e:	mov	eax, dword ptr [rbp - 0xa4]
0x400414:	cmp	dword ptr [rbp - 0xa0], eax
0x40041a:	jge	0x40042c
