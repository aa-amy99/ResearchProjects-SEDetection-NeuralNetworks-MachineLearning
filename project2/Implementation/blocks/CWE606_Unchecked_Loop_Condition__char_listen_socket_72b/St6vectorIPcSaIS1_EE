<Block for 0x40013c, 48 bytes>
0x40013c:	endbr64	
0x400140:	push	rbp
0x400141:	mov	rbp, rsp
0x400144:	sub	rsp, 0x30
0x400148:	mov	qword ptr [rbp - 0x28], rdi
0x40014c:	mov	rax, qword ptr fs:[0x28]
0x400155:	mov	qword ptr [rbp - 8], rax
0x400159:	xor	eax, eax
0x40015b:	mov	rax, qword ptr [rbp - 0x28]
0x40015f:	mov	esi, 2
0x400164:	mov	rdi, rax
0x400167:	call	0x4001e8
<Block for 0x40016c, 35 bytes>
0x40016c:	mov	rax, qword ptr [rax]
0x40016f:	mov	qword ptr [rbp - 0x10], rax
0x400173:	lea	rdx, [rbp - 0x1c]
0x400177:	mov	rax, qword ptr [rbp - 0x10]
0x40017b:	lea	rsi, [rip + 0x63]
0x400182:	mov	rdi, rax
0x400185:	mov	eax, 0
0x40018a:	call	0x500000
<Block for 0x40018f, 10 bytes>
0x40018f:	cmp	eax, 1
0x400192:	sete	al
0x400195:	test	al, al
0x400197:	je	0x4001cd
<Block for 0x4001cd, 16 bytes>
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x400199, 10 bytes>
0x400199:	mov	eax, dword ptr [rbp - 0x1c]
0x40019c:	cmp	eax, 0x270f
0x4001a1:	jg	0x4001cd
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500010
<Block for 0x4001a3, 22 bytes>
0x4001a3:	mov	dword ptr [rbp - 0x14], 0
0x4001aa:	mov	dword ptr [rbp - 0x18], 0
0x4001b1:	mov	eax, dword ptr [rbp - 0x1c]
0x4001b4:	cmp	dword ptr [rbp - 0x18], eax
0x4001b7:	jge	0x4001c3
<Block for 0x4001b9, 10 bytes>
0x4001b9:	add	dword ptr [rbp - 0x14], 1
0x4001bd:	add	dword ptr [rbp - 0x18], 1
0x4001c1:	jmp	0x4001b1
<Block for 0x4001c3, 10 bytes>
0x4001c3:	mov	eax, dword ptr [rbp - 0x14]
0x4001c6:	mov	edi, eax
0x4001c8:	call	0x500008
<Block for 0x4001b1, 8 bytes>
0x4001b1:	mov	eax, dword ptr [rbp - 0x1c]
0x4001b4:	cmp	dword ptr [rbp - 0x18], eax
0x4001b7:	jge	0x4001c3
