<Block for 0x40001f, 36 bytes>
0x40001f:	endbr64	
0x400023:	push	rbp
0x400024:	mov	rbp, rsp
0x400027:	sub	rsp, 0x20
0x40002b:	mov	rax, qword ptr fs:[0x28]
0x400034:	mov	qword ptr [rbp - 8], rax
0x400038:	xor	eax, eax
0x40003a:	mov	dword ptr [rbp - 0x14], 0
0x400041:	jmp	0x400061
<Block for 0x400061, 6 bytes>
0x400061:	cmp	dword ptr [rbp - 0x14], 0
0x400065:	jle	0x400043
<Block for 0x400043, 26 bytes>
0x400043:	mov	dword ptr [rbp - 0x10], 0
0x40004a:	mov	dword ptr [rbp - 0xc], 0
0x400051:	lea	rax, [rbp - 0x10]
0x400055:	mov	rdi, rax
0x400058:	call	0x500000
<Block for 0x400067, 16 bytes>
0x400067:	nop	
0x400068:	mov	rax, qword ptr [rbp - 8]
0x40006c:	xor	rax, qword ptr fs:[0x28]
0x400075:	je	0x40007c
<Block for 0x40005d, 10 bytes>
0x40005d:	add	dword ptr [rbp - 0x14], 1
0x400061:	cmp	dword ptr [rbp - 0x14], 0
0x400065:	jle	0x400043
<Block for 0x40007c, 2 bytes>
0x40007c:	leave	
0x40007d:	ret	
<Block for 0x400077, 5 bytes>
0x400077:	call	0x500008
