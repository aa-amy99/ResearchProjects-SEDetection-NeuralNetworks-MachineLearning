<Block for 0x400000, 21 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 4], 0
0x400013:	jmp	0x400081
<Block for 0x400081, 6 bytes>
0x400081:	cmp	dword ptr [rbp - 4], 0
0x400085:	jle	0x400015
<Block for 0x400015, 12 bytes>
0x400015:	lea	rdi, [rip + 0x144]
0x40001c:	call	0x500000
<Block for 0x400087, 4 bytes>
0x400087:	nop	
0x400088:	nop	
0x400089:	leave	
0x40008a:	ret	
<Block for 0x400021, 12 bytes>
0x400021:	lea	rdi, [rip + 0x128]
0x400028:	call	0x500008
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	jne	0x400047
<Block for 0x400031, 12 bytes>
0x400031:	lea	rdi, [rip + 0x139]
0x400038:	call	0x500000
<Block for 0x400047, 12 bytes>
0x400047:	lea	rdi, [rip + 0x139]
0x40004e:	call	0x500000
<Block for 0x40003d, 10 bytes>
0x40003d:	mov	edi, 1
0x400042:	call	0x500010
<Block for 0x400053, 15 bytes>
0x400053:	mov	rax, qword ptr [rip + 0xf6]
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500018
<Block for 0x400062, 12 bytes>
0x400062:	lea	rdi, [rip + 0x130]
0x400069:	call	0x500000
<Block for 0x40006e, 15 bytes>
0x40006e:	mov	rax, qword ptr [rip + 0xdb]
0x400075:	mov	rdi, rax
0x400078:	call	0x500020
<Block for 0x40007d, 10 bytes>
0x40007d:	add	dword ptr [rbp - 4], 1
0x400081:	cmp	dword ptr [rbp - 4], 0
0x400085:	jle	0x400015
