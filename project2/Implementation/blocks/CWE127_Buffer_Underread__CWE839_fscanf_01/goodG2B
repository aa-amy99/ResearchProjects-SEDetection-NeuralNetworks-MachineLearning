<Block for 0x4000a6, 87 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x40
0x4000b2:	mov	rax, qword ptr fs:[0x28]
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	xor	eax, eax
0x4000c1:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000c8:	mov	dword ptr [rbp - 0x34], 7
0x4000cf:	mov	qword ptr [rbp - 0x30], 0
0x4000d7:	mov	qword ptr [rbp - 0x28], 0
0x4000df:	mov	qword ptr [rbp - 0x20], 0
0x4000e7:	mov	qword ptr [rbp - 0x18], 0
0x4000ef:	mov	qword ptr [rbp - 0x10], 0
0x4000f7:	cmp	dword ptr [rbp - 0x34], 9
0x4000fb:	jg	0x40010f
<Block for 0x4000fd, 16 bytes>
0x4000fd:	mov	eax, dword ptr [rbp - 0x34]
0x400100:	cdqe	
0x400102:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400106:	mov	edi, eax
0x400108:	call	0x500010
<Block for 0x40010f, 12 bytes>
0x40010f:	lea	rdi, [rip + 0xf2]
0x400116:	call	0x500018
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x40011b
<Block for 0x40011b, 16 bytes>
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500020
