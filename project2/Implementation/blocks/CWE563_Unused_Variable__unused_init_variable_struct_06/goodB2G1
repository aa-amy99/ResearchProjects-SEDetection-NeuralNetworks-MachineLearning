<Block for 0x400019, 51 bytes>
0x400019:	endbr64	
0x40001d:	push	rbp
0x40001e:	mov	rbp, rsp
0x400021:	sub	rsp, 0x10
0x400025:	mov	rax, qword ptr fs:[0x28]
0x40002e:	mov	qword ptr [rbp - 8], rax
0x400032:	xor	eax, eax
0x400034:	mov	dword ptr [rbp - 0x10], 0
0x40003b:	mov	dword ptr [rbp - 0xc], 0
0x400042:	mov	eax, 5
0x400047:	cmp	eax, 5
0x40004a:	je	0x40005a
<Block for 0x40005a, 12 bytes>
0x40005a:	lea	rax, [rbp - 0x10]
0x40005e:	mov	rdi, rax
0x400061:	call	0x500008
<Block for 0x40004c, 12 bytes>
0x40004c:	lea	rdi, [rip + 0xa5]
0x400053:	call	0x500000
<Block for 0x400066, 16 bytes>
0x400066:	nop	
0x400067:	mov	rax, qword ptr [rbp - 8]
0x40006b:	xor	rax, qword ptr fs:[0x28]
0x400074:	je	0x40007b
<Block for 0x400058, 2 bytes>
0x400058:	jmp	0x400066
<Block for 0x40007b, 2 bytes>
0x40007b:	leave	
0x40007c:	ret	
<Block for 0x400076, 5 bytes>
0x400076:	call	0x500010
