<Block for 0x40027c, 170 bytes>
0x40027c:	endbr64	
0x400280:	push	rbp
0x400281:	mov	rbp, rsp
0x400284:	sub	rsp, 0xa0
0x40028b:	mov	rax, qword ptr fs:[0x28]
0x400294:	mov	qword ptr [rbp - 8], rax
0x400298:	xor	eax, eax
0x40029a:	nop	
0x40029b:	endbr64	
0x40029f:	mov	qword ptr [rbp - 0x70], 0
0x4002a7:	mov	qword ptr [rbp - 0x68], 0
0x4002af:	mov	qword ptr [rbp - 0x60], 0
0x4002b7:	mov	qword ptr [rbp - 0x58], 0
0x4002bf:	mov	qword ptr [rbp - 0x50], 0
0x4002c7:	mov	qword ptr [rbp - 0x48], 0
0x4002cf:	mov	qword ptr [rbp - 0x40], 0
0x4002d7:	mov	qword ptr [rbp - 0x38], 0
0x4002df:	mov	qword ptr [rbp - 0x30], 0
0x4002e7:	mov	qword ptr [rbp - 0x28], 0
0x4002ef:	mov	qword ptr [rbp - 0x20], 0
0x4002f7:	mov	qword ptr [rbp - 0x18], 0
0x4002ff:	mov	dword ptr [rbp - 0x10], 0
0x400306:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400310:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40031a:	lea	rax, [rbp - 0x70]
0x40031e:	mov	rdi, rax
0x400321:	call	0x500000
<Block for 0x400326, 27 bytes>
0x400326:	mov	qword ptr [rbp - 0x90], rax
0x40032d:	mov	edx, 6
0x400332:	mov	esi, 1
0x400337:	mov	edi, 2
0x40033c:	call	0x500008
<Block for 0x400341, 19 bytes>
0x400341:	mov	dword ptr [rbp - 0x98], eax
0x400347:	cmp	dword ptr [rbp - 0x98], -1
0x40034e:	je	0x40049f
<Block for 0x40049f, 3 bytes>
0x40049f:	nop	
0x4004a0:	jmp	0x4004a9
<Block for 0x400354, 22 bytes>
0x400354:	lea	rax, [rbp - 0x80]
0x400358:	mov	edx, 0x10
0x40035d:	mov	esi, 0
0x400362:	mov	rdi, rax
0x400365:	call	0x500010
<Block for 0x4004a9, 9 bytes>
0x4004a9:	cmp	dword ptr [rbp - 0x98], -1
0x4004b0:	je	0x4004bf
<Block for 0x40036a, 23 bytes>
0x40036a:	mov	word ptr [rbp - 0x80], 2
0x400370:	mov	dword ptr [rbp - 0x7c], 0
0x400377:	mov	edi, 0x6987
0x40037c:	call	0x500018
<Block for 0x4004bf, 9 bytes>
0x4004bf:	cmp	dword ptr [rbp - 0x9c], -1
0x4004c6:	je	0x4004d5
<Block for 0x4004b2, 13 bytes>
0x4004b2:	mov	eax, dword ptr [rbp - 0x98]
0x4004b8:	mov	edi, eax
0x4004ba:	call	0x500048
<Block for 0x400381, 29 bytes>
0x400381:	mov	word ptr [rbp - 0x7e], ax
0x400385:	lea	rcx, [rbp - 0x80]
0x400389:	mov	eax, dword ptr [rbp - 0x98]
0x40038f:	mov	edx, 0x10
0x400394:	mov	rsi, rcx
0x400397:	mov	edi, eax
0x400399:	call	0x500030
<Block for 0x4004d5, 12 bytes>
0x4004d5:	lea	rax, [rbp - 0x70]
0x4004d9:	mov	rdi, rax
0x4004dc:	call	0x500050
<Block for 0x4004c8, 13 bytes>
0x4004c8:	mov	eax, dword ptr [rbp - 0x9c]
0x4004ce:	mov	edi, eax
0x4004d0:	call	0x500048
<Block for 0x40039e, 9 bytes>
0x40039e:	cmp	eax, -1
0x4003a1:	je	0x4004a2
<Block for 0x4004e1, 16 bytes>
0x4004e1:	nop	
0x4004e2:	mov	rax, qword ptr [rbp - 8]
0x4004e6:	xor	rax, qword ptr fs:[0x28]
0x4004ef:	je	0x4004f6
<Block for 0x4004a2, 3 bytes>
0x4004a2:	nop	
0x4004a3:	jmp	0x4004a9
<Block for 0x4003a7, 18 bytes>
0x4003a7:	mov	eax, dword ptr [rbp - 0x98]
0x4003ad:	mov	esi, 5
0x4003b2:	mov	edi, eax
0x4003b4:	call	0x500028
<Block for 0x4004f6, 2 bytes>
0x4004f6:	leave	
0x4004f7:	ret	
<Block for 0x4004f1, 5 bytes>
0x4004f1:	call	0x500058
<Block for 0x4003b9, 9 bytes>
0x4003b9:	cmp	eax, -1
0x4003bc:	je	0x4004a5
<Block for 0x4004a5, 3 bytes>
0x4004a5:	nop	
0x4004a6:	jmp	0x4004a9
<Block for 0x4003c2, 23 bytes>
0x4003c2:	mov	eax, dword ptr [rbp - 0x98]
0x4003c8:	mov	edx, 0
0x4003cd:	mov	esi, 0
0x4003d2:	mov	edi, eax
0x4003d4:	call	0x500020
<Block for 0x4003d9, 19 bytes>
0x4003d9:	mov	dword ptr [rbp - 0x9c], eax
0x4003df:	cmp	dword ptr [rbp - 0x9c], -1
0x4003e6:	je	0x4004a8
<Block for 0x4003ec, 52 bytes>
0x4003ec:	mov	rax, qword ptr [rbp - 0x90]
0x4003f3:	mov	edx, 0x63
0x4003f8:	sub	edx, eax
0x4003fa:	mov	eax, edx
0x4003fc:	movsxd	rdx, eax
0x4003ff:	lea	rcx, [rbp - 0x70]
0x400403:	mov	rax, qword ptr [rbp - 0x90]
0x40040a:	lea	rsi, [rcx + rax]
0x40040e:	mov	eax, dword ptr [rbp - 0x9c]
0x400414:	mov	ecx, 0
0x400419:	mov	edi, eax
0x40041b:	call	0x500038
<Block for 0x4004a8, 1 bytes>
0x4004a8:	nop	
<Block for 0x400420, 15 bytes>
0x400420:	mov	dword ptr [rbp - 0x94], eax
0x400426:	cmp	dword ptr [rbp - 0x94], -1
0x40042d:	je	0x4004a9
<Block for 0x40042f, 9 bytes>
0x40042f:	cmp	dword ptr [rbp - 0x94], 0
0x400436:	je	0x4004a9
<Block for 0x400438, 30 bytes>
0x400438:	mov	eax, dword ptr [rbp - 0x94]
0x40043e:	cdqe	
0x400440:	mov	byte ptr [rbp + rax - 0x70], 0
0x400445:	lea	rax, [rbp - 0x70]
0x400449:	mov	esi, 0xd
0x40044e:	mov	rdi, rax
0x400451:	call	0x500040
<Block for 0x400456, 17 bytes>
0x400456:	mov	qword ptr [rbp - 0x88], rax
0x40045d:	cmp	qword ptr [rbp - 0x88], 0
0x400465:	je	0x400471
<Block for 0x400471, 17 bytes>
0x400471:	lea	rax, [rbp - 0x70]
0x400475:	mov	esi, 0xa
0x40047a:	mov	rdi, rax
0x40047d:	call	0x500040
<Block for 0x400467, 27 bytes>
0x400467:	mov	rax, qword ptr [rbp - 0x88]
0x40046e:	mov	byte ptr [rax], 0
0x400471:	lea	rax, [rbp - 0x70]
0x400475:	mov	esi, 0xa
0x40047a:	mov	rdi, rax
0x40047d:	call	0x500040
<Block for 0x400482, 17 bytes>
0x400482:	mov	qword ptr [rbp - 0x88], rax
0x400489:	cmp	qword ptr [rbp - 0x88], 0
0x400491:	je	0x4004a9
<Block for 0x400493, 12 bytes>
0x400493:	mov	rax, qword ptr [rbp - 0x88]
0x40049a:	mov	byte ptr [rax], 0
0x40049d:	jmp	0x4004a9
