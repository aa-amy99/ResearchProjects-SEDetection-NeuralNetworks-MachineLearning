<Block for 0x400149, 84 bytes>
0x400149:	endbr64	
0x40014d:	push	rbp
0x40014e:	mov	rbp, rsp
0x400151:	sub	rsp, 0xe0
0x400158:	mov	rax, qword ptr fs:[0x28]
0x400161:	mov	qword ptr [rbp - 8], rax
0x400165:	xor	eax, eax
0x400167:	mov	eax, 0x10
0x40016c:	sub	rax, 1
0x400170:	add	rax, 0x6c
0x400174:	mov	ecx, 0x10
0x400179:	mov	edx, 0
0x40017e:	div	rcx
0x400181:	imul	rax, rax, 0x10
0x400185:	mov	rdx, rax
0x400188:	and	rdx, 0xfffffffffffff000
0x40018f:	mov	rcx, rsp
0x400192:	sub	rcx, rdx
0x400195:	mov	rdx, rcx
0x400198:	cmp	rsp, rdx
0x40019b:	je	0x4001af
<Block for 0x4001af, 26 bytes>
0x4001af:	mov	rdx, rax
0x4001b2:	and	edx, 0xfff
0x4001b8:	sub	rsp, rdx
0x4001bb:	mov	rdx, rax
0x4001be:	and	edx, 0xfff
0x4001c4:	test	rdx, rdx
0x4001c7:	je	0x4001d9
<Block for 0x40019d, 18 bytes>
0x40019d:	sub	rsp, 0x1000
0x4001a4:	or	qword ptr [rsp + 0xff8], 0
0x4001ad:	jmp	0x400198
<Block for 0x4001d9, 47 bytes>
0x4001d9:	mov	rax, rsp
0x4001dc:	add	rax, 0xf
0x4001e0:	shr	rax, 4
0x4001e4:	shl	rax, 4
0x4001e8:	mov	qword ptr [rbp - 0xd8], rax
0x4001ef:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f6:	mov	edx, 0x63
0x4001fb:	mov	esi, 0x41
0x400200:	mov	rdi, rax
0x400203:	call	0x500000
<Block for 0x4001c9, 63 bytes>
0x4001c9:	and	eax, 0xfff
0x4001ce:	sub	rax, 8
0x4001d2:	add	rax, rsp
0x4001d5:	or	qword ptr [rax], 0
0x4001d9:	mov	rax, rsp
0x4001dc:	add	rax, 0xf
0x4001e0:	shr	rax, 4
0x4001e4:	shl	rax, 4
0x4001e8:	mov	qword ptr [rbp - 0xd8], rax
0x4001ef:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f6:	mov	edx, 0x63
0x4001fb:	mov	esi, 0x41
0x400200:	mov	rdi, rax
0x400203:	call	0x500000
<Block for 0x400198, 5 bytes>
0x400198:	cmp	rsp, rdx
0x40019b:	je	0x4001af
<Block for 0x400208, 24 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0xd8]
0x40020f:	add	rax, 0x63
0x400213:	mov	byte ptr [rax], 0
0x400216:	mov	eax, 0
0x40021b:	call	0x500028
<Block for 0x400220, 4 bytes>
0x400220:	test	eax, eax
0x400222:	je	0x400232
<Block for 0x400232, 39 bytes>
0x400232:	mov	rax, qword ptr [rbp - 0xd8]
0x400239:	mov	qword ptr [rbp - 0xe0], rax
0x400240:	lea	rax, [rbp - 0xd0]
0x400247:	mov	edx, 0xc7
0x40024c:	mov	esi, 0x43
0x400251:	mov	rdi, rax
0x400254:	call	0x500000
<Block for 0x400224, 12 bytes>
0x400224:	lea	rdi, [rip + 0x1d5]
0x40022b:	call	0x500018
<Block for 0x400259, 29 bytes>
0x400259:	mov	byte ptr [rbp - 9], 0
0x40025d:	mov	rdx, qword ptr [rbp - 0xe0]
0x400264:	lea	rax, [rbp - 0xd0]
0x40026b:	mov	rsi, rdx
0x40026e:	mov	rdi, rax
0x400271:	call	0x500010
<Block for 0x400230, 2 bytes>
0x400230:	jmp	0x400240
<Block for 0x400276, 15 bytes>
0x400276:	lea	rax, [rbp - 0xd0]
0x40027d:	mov	rdi, rax
0x400280:	call	0x500018
<Block for 0x400240, 25 bytes>
0x400240:	lea	rax, [rbp - 0xd0]
0x400247:	mov	edx, 0xc7
0x40024c:	mov	esi, 0x43
0x400251:	mov	rdi, rax
0x400254:	call	0x500000
<Block for 0x400285, 16 bytes>
0x400285:	nop	
0x400286:	mov	rax, qword ptr [rbp - 8]
0x40028a:	xor	rax, qword ptr fs:[0x28]
0x400293:	je	0x40029a
<Block for 0x40029a, 2 bytes>
0x40029a:	leave	
0x40029b:	ret	
<Block for 0x400295, 5 bytes>
0x400295:	call	0x500020
