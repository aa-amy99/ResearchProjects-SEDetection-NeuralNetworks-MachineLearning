<Block for 0x40029a, 53 bytes>
0x40029a:	endbr64	
0x40029e:	push	rbp
0x40029f:	mov	rbp, rsp
0x4002a2:	push	rbx
0x4002a3:	sub	rsp, 0x88
0x4002aa:	mov	rax, qword ptr fs:[0x28]
0x4002b3:	mov	qword ptr [rbp - 0x18], rax
0x4002b7:	xor	eax, eax
0x4002b9:	mov	qword ptr [rbp - 0x90], 0
0x4002c4:	mov	eax, dword ptr [rip + 0xffd36]
0x4002ca:	cmp	eax, 5
0x4002cd:	jne	0x400329
<Block for 0x4002cf, 10 bytes>
0x4002cf:	mov	edi, 0x64
0x4002d4:	call	0x500008
<Block for 0x400329, 22 bytes>
0x400329:	lea	rax, [rbp - 0x80]
0x40032d:	mov	edx, 0x63
0x400332:	mov	esi, 0x43
0x400337:	mov	rdi, rax
0x40033a:	call	0x500018
<Block for 0x4002d9, 17 bytes>
0x4002d9:	mov	qword ptr [rbp - 0x88], rax
0x4002e0:	cmp	qword ptr [rbp - 0x88], 0
0x4002e8:	jne	0x4002f4
<Block for 0x40033f, 128 bytes>
0x40033f:	mov	byte ptr [rbp - 0x1d], 0
0x400343:	mov	rax, qword ptr [rbp - 0x90]
0x40034a:	mov	rcx, qword ptr [rax]
0x40034d:	mov	rbx, qword ptr [rax + 8]
0x400351:	mov	qword ptr [rbp - 0x80], rcx
0x400355:	mov	qword ptr [rbp - 0x78], rbx
0x400359:	mov	rcx, qword ptr [rax + 0x10]
0x40035d:	mov	rbx, qword ptr [rax + 0x18]
0x400361:	mov	qword ptr [rbp - 0x70], rcx
0x400365:	mov	qword ptr [rbp - 0x68], rbx
0x400369:	mov	rcx, qword ptr [rax + 0x20]
0x40036d:	mov	rbx, qword ptr [rax + 0x28]
0x400371:	mov	qword ptr [rbp - 0x60], rcx
0x400375:	mov	qword ptr [rbp - 0x58], rbx
0x400379:	mov	rcx, qword ptr [rax + 0x30]
0x40037d:	mov	rbx, qword ptr [rax + 0x38]
0x400381:	mov	qword ptr [rbp - 0x50], rcx
0x400385:	mov	qword ptr [rbp - 0x48], rbx
0x400389:	mov	rcx, qword ptr [rax + 0x40]
0x40038d:	mov	rbx, qword ptr [rax + 0x48]
0x400391:	mov	qword ptr [rbp - 0x40], rcx
0x400395:	mov	qword ptr [rbp - 0x38], rbx
0x400399:	mov	rcx, qword ptr [rax + 0x50]
0x40039d:	mov	rbx, qword ptr [rax + 0x58]
0x4003a1:	mov	qword ptr [rbp - 0x30], rcx
0x4003a5:	mov	qword ptr [rbp - 0x28], rbx
0x4003a9:	mov	eax, dword ptr [rax + 0x60]
0x4003ac:	mov	dword ptr [rbp - 0x20], eax
0x4003af:	mov	byte ptr [rbp - 0x1d], 0
0x4003b3:	lea	rax, [rbp - 0x80]
0x4003b7:	mov	rdi, rax
0x4003ba:	call	0x500020
<Block for 0x4002ea, 10 bytes>
0x4002ea:	mov	edi, 0xffffffff
0x4002ef:	call	0x500010
<Block for 0x4002f4, 25 bytes>
0x4002f4:	mov	rax, qword ptr [rbp - 0x88]
0x4002fb:	mov	edx, 0x63
0x400300:	mov	esi, 0x41
0x400305:	mov	rdi, rax
0x400308:	call	0x500018
<Block for 0x4003bf, 16 bytes>
0x4003bf:	nop	
0x4003c0:	mov	rax, qword ptr [rbp - 0x18]
0x4003c4:	xor	rax, qword ptr fs:[0x28]
0x4003cd:	je	0x4003d4
<Block for 0x40030d, 50 bytes>
0x40030d:	mov	rax, qword ptr [rbp - 0x88]
0x400314:	add	rax, 0x63
0x400318:	mov	byte ptr [rax], 0
0x40031b:	mov	rax, qword ptr [rbp - 0x88]
0x400322:	mov	qword ptr [rbp - 0x90], rax
0x400329:	lea	rax, [rbp - 0x80]
0x40032d:	mov	edx, 0x63
0x400332:	mov	esi, 0x43
0x400337:	mov	rdi, rax
0x40033a:	call	0x500018
<Block for 0x4003d4, 10 bytes>
0x4003d4:	add	rsp, 0x88
0x4003db:	pop	rbx
0x4003dc:	pop	rbp
0x4003dd:	ret	
<Block for 0x4003cf, 5 bytes>
0x4003cf:	call	0x500028
