<Block for 0x40003d, 25 bytes>
0x40003d:	endbr64	
0x400041:	push	rbp
0x400042:	mov	rbp, rsp
0x400045:	push	rbx
0x400046:	sub	rsp, 0x18
0x40004a:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400051:	call	0x500008
<Block for 0x400056, 7 bytes>
0x400056:	and	eax, 1
0x400059:	test	eax, eax
0x40005b:	je	0x40007a
<Block for 0x40007a, 5 bytes>
0x40007a:	call	0x500008
<Block for 0x40005d, 5 bytes>
0x40005d:	call	0x500008
<Block for 0x40007f, 10 bytes>
0x40007f:	shl	eax, 0x1e
0x400082:	mov	ebx, eax
0x400084:	call	0x500008
<Block for 0x400062, 10 bytes>
0x400062:	shl	eax, 0x1e
0x400065:	mov	ebx, eax
0x400067:	call	0x500008
<Block for 0x400089, 10 bytes>
0x400089:	shl	eax, 0xf
0x40008c:	xor	ebx, eax
0x40008e:	call	0x500008
<Block for 0x40006c, 10 bytes>
0x40006c:	shl	eax, 0xf
0x40006f:	xor	ebx, eax
0x400071:	call	0x500008
<Block for 0x400093, 26 bytes>
0x400093:	xor	eax, ebx
0x400095:	not	eax
0x400097:	mov	dword ptr [rbp - 0x14], eax
0x40009a:	mov	eax, dword ptr [rbp - 0x14]
0x40009d:	mov	dword ptr [rip + 0x95], eax
0x4000a3:	mov	eax, 0
0x4000a8:	call	0x400000
<Block for 0x400076, 4 bytes>
0x400076:	xor	eax, ebx
0x400078:	jmp	0x400097
<Block for 0x4000ad, 8 bytes>
0x4000ad:	nop	
0x4000ae:	add	rsp, 0x18
0x4000b2:	pop	rbx
0x4000b3:	pop	rbp
0x4000b4:	ret	
<Block for 0x400097, 22 bytes>
0x400097:	mov	dword ptr [rbp - 0x14], eax
0x40009a:	mov	eax, dword ptr [rbp - 0x14]
0x40009d:	mov	dword ptr [rip + 0x95], eax
0x4000a3:	mov	eax, 0
0x4000a8:	call	0x400000
