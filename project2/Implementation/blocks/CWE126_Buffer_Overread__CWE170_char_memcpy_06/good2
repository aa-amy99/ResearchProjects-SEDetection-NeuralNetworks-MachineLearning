<Block for 0x400127, 40 bytes>
0x400127:	endbr64	
0x40012b:	push	rbp
0x40012c:	mov	rbp, rsp
0x40012f:	sub	rsp, 0x110
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 8], rax
0x400143:	xor	eax, eax
0x400145:	mov	eax, 5
0x40014a:	cmp	eax, 5
0x40014d:	jne	0x4001a0
<Block for 0x40014f, 25 bytes>
0x40014f:	lea	rax, [rbp - 0xa0]
0x400156:	mov	edx, 0x95
0x40015b:	mov	esi, 0x41
0x400160:	mov	rdi, rax
0x400163:	call	0x500000
<Block for 0x4001a0, 16 bytes>
0x4001a0:	nop	
0x4001a1:	mov	rax, qword ptr [rbp - 8]
0x4001a5:	xor	rax, qword ptr fs:[0x28]
0x4001ae:	je	0x4001b5
<Block for 0x400168, 34 bytes>
0x400168:	mov	byte ptr [rbp - 0xb], 0
0x40016c:	lea	rcx, [rbp - 0xa0]
0x400173:	lea	rax, [rbp - 0x110]
0x40017a:	mov	edx, 0x63
0x40017f:	mov	rsi, rcx
0x400182:	mov	rdi, rax
0x400185:	call	0x500008
<Block for 0x4001b5, 2 bytes>
0x4001b5:	leave	
0x4001b6:	ret	
<Block for 0x4001b0, 5 bytes>
0x4001b0:	call	0x500018
<Block for 0x40018a, 22 bytes>
0x40018a:	mov	byte ptr [rbp - 0xad], 0
0x400191:	lea	rax, [rbp - 0x110]
0x400198:	mov	rdi, rax
0x40019b:	call	0x500010
