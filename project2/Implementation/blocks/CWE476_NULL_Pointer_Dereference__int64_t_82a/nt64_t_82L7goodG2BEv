<Block for 0x400066, 54 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x28
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 0x18], rax
0x400080:	xor	eax, eax
0x400082:	mov	qword ptr [rbp - 0x30], 5
0x40008a:	lea	rax, [rbp - 0x30]
0x40008e:	mov	qword ptr [rbp - 0x28], rax
0x400092:	mov	edi, 8
0x400097:	call	0x500000
<Block for 0x40009c, 11 bytes>
0x40009c:	mov	rbx, rax
0x40009f:	mov	rdi, rbx
0x4000a2:	call	0x4001be
<Block for 0x4000a7, 30 bytes>
0x4000a7:	mov	qword ptr [rbp - 0x20], rbx
0x4000ab:	mov	rax, qword ptr [rbp - 0x20]
0x4000af:	mov	rax, qword ptr [rax]
0x4000b2:	mov	rcx, qword ptr [rax]
0x4000b5:	mov	rdx, qword ptr [rbp - 0x28]
0x4000b9:	mov	rax, qword ptr [rbp - 0x20]
0x4000bd:	mov	rsi, rdx
0x4000c0:	mov	rdi, rax
0x4000c3:	call	rcx
<Block for 0x4000c5, 9 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 0x20]
0x4000c9:	test	rax, rax
0x4000cc:	je	0x4000db
<Block for 0x4000db, 16 bytes>
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 0x18]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x4000f0
<Block for 0x4000ce, 13 bytes>
0x4000ce:	mov	esi, 8
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500008
<Block for 0x4000f0, 7 bytes>
0x4000f0:	add	rsp, 0x28
0x4000f4:	pop	rbx
0x4000f5:	pop	rbp
0x4000f6:	ret	
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500010
