<Block for 0x4000e2, 81 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	sub	rsp, 0x20
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	mov	eax, 0x10
0x400102:	sub	rax, 1
0x400106:	add	rax, 0x6c
0x40010a:	mov	esi, 0x10
0x40010f:	mov	edx, 0
0x400114:	div	rsi
0x400117:	imul	rax, rax, 0x10
0x40011b:	mov	rdx, rax
0x40011e:	and	rdx, 0xfffffffffffff000
0x400125:	mov	rcx, rsp
0x400128:	sub	rcx, rdx
0x40012b:	mov	rdx, rcx
0x40012e:	cmp	rsp, rdx
0x400131:	je	0x400145
<Block for 0x400145, 26 bytes>
0x400145:	mov	rdx, rax
0x400148:	and	edx, 0xfff
0x40014e:	sub	rsp, rdx
0x400151:	mov	rdx, rax
0x400154:	and	edx, 0xfff
0x40015a:	test	rdx, rdx
0x40015d:	je	0x40016f
<Block for 0x400133, 18 bytes>
0x400133:	sub	rsp, 0x1000
0x40013a:	or	qword ptr [rsp + 0xff8], 0
0x400143:	jmp	0x40012e
<Block for 0x40016f, 41 bytes>
0x40016f:	mov	rax, rsp
0x400172:	add	rax, 0xf
0x400176:	shr	rax, 4
0x40017a:	shl	rax, 4
0x40017e:	mov	qword ptr [rbp - 0x18], rax
0x400182:	mov	rax, qword ptr [rbp - 0x18]
0x400186:	mov	edx, 0x63
0x40018b:	mov	esi, 0x41
0x400190:	mov	rdi, rax
0x400193:	call	0x500000
<Block for 0x40015f, 57 bytes>
0x40015f:	and	eax, 0xfff
0x400164:	sub	rax, 8
0x400168:	add	rax, rsp
0x40016b:	or	qword ptr [rax], 0
0x40016f:	mov	rax, rsp
0x400172:	add	rax, 0xf
0x400176:	shr	rax, 4
0x40017a:	shl	rax, 4
0x40017e:	mov	qword ptr [rbp - 0x18], rax
0x400182:	mov	rax, qword ptr [rbp - 0x18]
0x400186:	mov	edx, 0x63
0x40018b:	mov	esi, 0x41
0x400190:	mov	rdi, rax
0x400193:	call	0x500000
<Block for 0x40012e, 5 bytes>
0x40012e:	cmp	rsp, rdx
0x400131:	je	0x400145
<Block for 0x400198, 44 bytes>
0x400198:	mov	rax, qword ptr [rbp - 0x18]
0x40019c:	add	rax, 0x63
0x4001a0:	mov	byte ptr [rax], 0
0x4001a3:	mov	rax, qword ptr [rbp - 0x18]
0x4001a7:	sub	rax, 8
0x4001ab:	mov	qword ptr [rbp - 0x10], rax
0x4001af:	mov	rax, qword ptr [rbp - 0x10]
0x4001b3:	mov	qword ptr [rip + 0x20e], rax
0x4001ba:	mov	eax, 0
0x4001bf:	call	0x400000
<Block for 0x4001c4, 16 bytes>
0x4001c4:	nop	
0x4001c5:	mov	rax, qword ptr [rbp - 8]
0x4001c9:	xor	rax, qword ptr fs:[0x28]
0x4001d2:	je	0x4001d9
<Block for 0x4001d9, 2 bytes>
0x4001d9:	leave	
0x4001da:	ret	
<Block for 0x4001d4, 5 bytes>
0x4001d4:	call	0x500010
