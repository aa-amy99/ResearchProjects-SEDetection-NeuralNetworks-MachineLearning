<Block for 0x400159, 61 bytes>
0x400159:	endbr64	
0x40015d:	push	rbp
0x40015e:	mov	rbp, rsp
0x400161:	sub	rsp, 0x50
0x400165:	mov	rax, qword ptr fs:[0x28]
0x40016e:	mov	qword ptr [rbp - 8], rax
0x400172:	xor	eax, eax
0x400174:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x40017b:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400182:	mov	edx, 6
0x400187:	mov	esi, 1
0x40018c:	mov	edi, 2
0x400191:	call	0x500000
<Block for 0x400196, 13 bytes>
0x400196:	mov	dword ptr [rbp - 0x48], eax
0x400199:	cmp	dword ptr [rbp - 0x48], -1
0x40019d:	je	0x400239
<Block for 0x400239, 3 bytes>
0x400239:	nop	
0x40023a:	jmp	0x40023d
<Block for 0x4001a3, 22 bytes>
0x4001a3:	lea	rax, [rbp - 0x40]
0x4001a7:	mov	edx, 0x10
0x4001ac:	mov	esi, 0
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500008
<Block for 0x40023d, 6 bytes>
0x40023d:	cmp	dword ptr [rbp - 0x48], -1
0x400241:	je	0x40024d
<Block for 0x4001b9, 18 bytes>
0x4001b9:	mov	word ptr [rbp - 0x40], 2
0x4001bf:	lea	rdi, [rip + 0x3a2]
0x4001c6:	call	0x500010
<Block for 0x40024d, 47 bytes>
0x40024d:	nop	
0x40024e:	mov	qword ptr [rbp - 0x40], 0
0x400256:	mov	qword ptr [rbp - 0x38], 0
0x40025e:	mov	qword ptr [rbp - 0x30], 0
0x400266:	mov	qword ptr [rbp - 0x28], 0
0x40026e:	mov	qword ptr [rbp - 0x20], 0
0x400276:	cmp	dword ptr [rbp - 0x4c], 0
0x40027a:	js	0x400294
<Block for 0x400243, 10 bytes>
0x400243:	mov	eax, dword ptr [rbp - 0x48]
0x400246:	mov	edi, eax
0x400248:	call	0x500038
<Block for 0x4001cb, 13 bytes>
0x4001cb:	mov	dword ptr [rbp - 0x3c], eax
0x4001ce:	mov	edi, 0x6987
0x4001d3:	call	0x500018
<Block for 0x400294, 12 bytes>
0x400294:	lea	rdi, [rip + 0x2fd]
0x40029b:	call	0x500048
<Block for 0x40027c, 6 bytes>
0x40027c:	cmp	dword ptr [rbp - 0x4c], 9
0x400280:	jg	0x400294
<Block for 0x4001d8, 26 bytes>
0x4001d8:	mov	word ptr [rbp - 0x3e], ax
0x4001dc:	lea	rcx, [rbp - 0x40]
0x4001e0:	mov	eax, dword ptr [rbp - 0x48]
0x4001e3:	mov	edx, 0x10
0x4001e8:	mov	rsi, rcx
0x4001eb:	mov	edi, eax
0x4001ed:	call	0x500020
<Block for 0x4002a0, 17 bytes>
0x4002a0:	nop	
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 8]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002b6
<Block for 0x400282, 16 bytes>
0x400282:	mov	eax, dword ptr [rbp - 0x4c]
0x400285:	cdqe	
0x400287:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40028b:	mov	edi, eax
0x40028d:	call	0x500040
<Block for 0x4001f2, 5 bytes>
0x4001f2:	cmp	eax, -1
0x4001f5:	je	0x40023c
<Block for 0x4002b6, 2 bytes>
0x4002b6:	leave	
0x4002b7:	ret	
<Block for 0x4002b1, 5 bytes>
0x4002b1:	call	0x500050
<Block for 0x400292, 2 bytes>
0x400292:	jmp	0x4002a0
<Block for 0x4001f7, 24 bytes>
0x4001f7:	lea	rsi, [rbp - 0x16]
0x4001fb:	mov	eax, dword ptr [rbp - 0x48]
0x4001fe:	mov	ecx, 0
0x400203:	mov	edx, 0xd
0x400208:	mov	edi, eax
0x40020a:	call	0x500028
<Block for 0x40023c, 1 bytes>
0x40023c:	nop	
<Block for 0x40020f, 9 bytes>
0x40020f:	mov	dword ptr [rbp - 0x44], eax
0x400212:	cmp	dword ptr [rbp - 0x44], -1
0x400216:	je	0x40023d
<Block for 0x400218, 6 bytes>
0x400218:	cmp	dword ptr [rbp - 0x44], 0
0x40021c:	je	0x40023d
<Block for 0x40021e, 22 bytes>
0x40021e:	mov	eax, dword ptr [rbp - 0x44]
0x400221:	cdqe	
0x400223:	mov	byte ptr [rbp + rax - 0x16], 0
0x400228:	lea	rax, [rbp - 0x16]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x500030
<Block for 0x400234, 5 bytes>
0x400234:	mov	dword ptr [rbp - 0x4c], eax
0x400237:	jmp	0x40023d
