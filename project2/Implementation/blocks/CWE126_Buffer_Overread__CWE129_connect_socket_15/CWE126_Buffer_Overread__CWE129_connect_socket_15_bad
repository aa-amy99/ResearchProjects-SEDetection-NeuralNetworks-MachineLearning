<Block for 0x400000, 61 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400029:	mov	edx, 6
0x40002e:	mov	esi, 1
0x400033:	mov	edi, 2
0x400038:	call	0x500000
<Block for 0x40003d, 13 bytes>
0x40003d:	mov	dword ptr [rbp - 0x48], eax
0x400040:	cmp	dword ptr [rbp - 0x48], -1
0x400044:	je	0x4000e0
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	jmp	0x4000e4
<Block for 0x40004a, 22 bytes>
0x40004a:	lea	rax, [rbp - 0x40]
0x40004e:	mov	edx, 0x10
0x400053:	mov	esi, 0
0x400058:	mov	rdi, rax
0x40005b:	call	0x500008
<Block for 0x4000e4, 6 bytes>
0x4000e4:	cmp	dword ptr [rbp - 0x48], -1
0x4000e8:	je	0x4000f4
<Block for 0x400060, 18 bytes>
0x400060:	mov	word ptr [rbp - 0x40], 2
0x400066:	lea	rdi, [rip + 0x4fb]
0x40006d:	call	0x500010
<Block for 0x4000f4, 47 bytes>
0x4000f4:	nop	
0x4000f5:	mov	qword ptr [rbp - 0x40], 0
0x4000fd:	mov	qword ptr [rbp - 0x38], 0
0x400105:	mov	qword ptr [rbp - 0x30], 0
0x40010d:	mov	qword ptr [rbp - 0x28], 0
0x400115:	mov	qword ptr [rbp - 0x20], 0
0x40011d:	cmp	dword ptr [rbp - 0x4c], 0
0x400121:	js	0x400135
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	eax, dword ptr [rbp - 0x48]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500038
<Block for 0x400072, 13 bytes>
0x400072:	mov	dword ptr [rbp - 0x3c], eax
0x400075:	mov	edi, 0x6987
0x40007a:	call	0x500018
<Block for 0x400135, 12 bytes>
0x400135:	lea	rdi, [rip + 0x43c]
0x40013c:	call	0x500048
<Block for 0x400123, 16 bytes>
0x400123:	mov	eax, dword ptr [rbp - 0x4c]
0x400126:	cdqe	
0x400128:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40012c:	mov	edi, eax
0x40012e:	call	0x500040
<Block for 0x40007f, 26 bytes>
0x40007f:	mov	word ptr [rbp - 0x3e], ax
0x400083:	lea	rcx, [rbp - 0x40]
0x400087:	mov	eax, dword ptr [rbp - 0x48]
0x40008a:	mov	edx, 0x10
0x40008f:	mov	rsi, rcx
0x400092:	mov	edi, eax
0x400094:	call	0x500020
<Block for 0x400141, 17 bytes>
0x400141:	nop	
0x400142:	nop	
0x400143:	mov	rax, qword ptr [rbp - 8]
0x400147:	xor	rax, qword ptr fs:[0x28]
0x400150:	je	0x400157
<Block for 0x400133, 2 bytes>
0x400133:	jmp	0x400141
<Block for 0x400099, 5 bytes>
0x400099:	cmp	eax, -1
0x40009c:	je	0x4000e3
<Block for 0x400157, 2 bytes>
0x400157:	leave	
0x400158:	ret	
<Block for 0x400152, 5 bytes>
0x400152:	call	0x500050
<Block for 0x40009e, 24 bytes>
0x40009e:	lea	rsi, [rbp - 0x16]
0x4000a2:	mov	eax, dword ptr [rbp - 0x48]
0x4000a5:	mov	ecx, 0
0x4000aa:	mov	edx, 0xd
0x4000af:	mov	edi, eax
0x4000b1:	call	0x500028
<Block for 0x4000e3, 1 bytes>
0x4000e3:	nop	
<Block for 0x4000b6, 9 bytes>
0x4000b6:	mov	dword ptr [rbp - 0x44], eax
0x4000b9:	cmp	dword ptr [rbp - 0x44], -1
0x4000bd:	je	0x4000e4
<Block for 0x4000bf, 6 bytes>
0x4000bf:	cmp	dword ptr [rbp - 0x44], 0
0x4000c3:	je	0x4000e4
<Block for 0x4000c5, 22 bytes>
0x4000c5:	mov	eax, dword ptr [rbp - 0x44]
0x4000c8:	cdqe	
0x4000ca:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000cf:	lea	rax, [rbp - 0x16]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500030
<Block for 0x4000db, 5 bytes>
0x4000db:	mov	dword ptr [rbp - 0x4c], eax
0x4000de:	jmp	0x4000e4
