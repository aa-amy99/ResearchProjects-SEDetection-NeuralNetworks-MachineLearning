<Block for 0x400000, 85 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	eax, 0x10
0x400024:	sub	rax, 1
0x400028:	add	rax, 0x6c
0x40002c:	mov	esi, 0x10
0x400031:	mov	edx, 0
0x400036:	div	rsi
0x400039:	imul	rax, rax, 0x10
0x40003d:	mov	rdx, rax
0x400040:	and	rdx, 0xfffffffffffff000
0x400047:	mov	rbx, rsp
0x40004a:	sub	rbx, rdx
0x40004d:	mov	rdx, rbx
0x400050:	cmp	rsp, rdx
0x400053:	je	0x400067
<Block for 0x400067, 26 bytes>
0x400067:	mov	rdx, rax
0x40006a:	and	edx, 0xfff
0x400070:	sub	rsp, rdx
0x400073:	mov	rdx, rax
0x400076:	and	edx, 0xfff
0x40007c:	test	rdx, rdx
0x40007f:	je	0x400091
<Block for 0x400055, 18 bytes>
0x400055:	sub	rsp, 0x1000
0x40005c:	or	qword ptr [rsp + 0xff8], 0
0x400065:	jmp	0x400050
<Block for 0x400091, 47 bytes>
0x400091:	mov	rax, rsp
0x400094:	add	rax, 0xf
0x400098:	shr	rax, 4
0x40009c:	shl	rax, 4
0x4000a0:	mov	qword ptr [rbp - 0x88], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x88]
0x4000ae:	mov	edx, 0x63
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500000
<Block for 0x400081, 63 bytes>
0x400081:	and	eax, 0xfff
0x400086:	sub	rax, 8
0x40008a:	add	rax, rsp
0x40008d:	or	qword ptr [rax], 0
0x400091:	mov	rax, rsp
0x400094:	add	rax, 0xf
0x400098:	shr	rax, 4
0x40009c:	shl	rax, 4
0x4000a0:	mov	qword ptr [rbp - 0x88], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x88]
0x4000ae:	mov	edx, 0x63
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500000
<Block for 0x400050, 5 bytes>
0x400050:	cmp	rsp, rdx
0x400053:	je	0x400067
<Block for 0x4000c0, 25 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x88]
0x4000c7:	add	rax, 0x63
0x4000cb:	mov	byte ptr [rax], 0
0x4000ce:	mov	eax, dword ptr [rip + 0x428]
0x4000d4:	cmp	eax, 5
0x4000d7:	jne	0x4000eb
<Block for 0x4000d9, 40 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 0x88]
0x4000e0:	sub	rax, 8
0x4000e4:	mov	qword ptr [rbp - 0x90], rax
0x4000eb:	lea	rax, [rbp - 0x80]
0x4000ef:	mov	edx, 0x63
0x4000f4:	mov	esi, 0x43
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500000
<Block for 0x4000eb, 22 bytes>
0x4000eb:	lea	rax, [rbp - 0x80]
0x4000ef:	mov	edx, 0x63
0x4000f4:	mov	esi, 0x43
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500000
<Block for 0x400101, 128 bytes>
0x400101:	mov	byte ptr [rbp - 0x1d], 0
0x400105:	mov	rax, qword ptr [rbp - 0x90]
0x40010c:	mov	rcx, qword ptr [rax]
0x40010f:	mov	rbx, qword ptr [rax + 8]
0x400113:	mov	qword ptr [rbp - 0x80], rcx
0x400117:	mov	qword ptr [rbp - 0x78], rbx
0x40011b:	mov	rcx, qword ptr [rax + 0x10]
0x40011f:	mov	rbx, qword ptr [rax + 0x18]
0x400123:	mov	qword ptr [rbp - 0x70], rcx
0x400127:	mov	qword ptr [rbp - 0x68], rbx
0x40012b:	mov	rcx, qword ptr [rax + 0x20]
0x40012f:	mov	rbx, qword ptr [rax + 0x28]
0x400133:	mov	qword ptr [rbp - 0x60], rcx
0x400137:	mov	qword ptr [rbp - 0x58], rbx
0x40013b:	mov	rcx, qword ptr [rax + 0x30]
0x40013f:	mov	rbx, qword ptr [rax + 0x38]
0x400143:	mov	qword ptr [rbp - 0x50], rcx
0x400147:	mov	qword ptr [rbp - 0x48], rbx
0x40014b:	mov	rcx, qword ptr [rax + 0x40]
0x40014f:	mov	rbx, qword ptr [rax + 0x48]
0x400153:	mov	qword ptr [rbp - 0x40], rcx
0x400157:	mov	qword ptr [rbp - 0x38], rbx
0x40015b:	mov	rcx, qword ptr [rax + 0x50]
0x40015f:	mov	rbx, qword ptr [rax + 0x58]
0x400163:	mov	qword ptr [rbp - 0x30], rcx
0x400167:	mov	qword ptr [rbp - 0x28], rbx
0x40016b:	mov	eax, dword ptr [rax + 0x60]
0x40016e:	mov	dword ptr [rbp - 0x20], eax
0x400171:	mov	byte ptr [rbp - 0x1d], 0
0x400175:	lea	rax, [rbp - 0x80]
0x400179:	mov	rdi, rax
0x40017c:	call	0x500008
<Block for 0x400181, 16 bytes>
0x400181:	nop	
0x400182:	mov	rax, qword ptr [rbp - 0x18]
0x400186:	xor	rax, qword ptr fs:[0x28]
0x40018f:	je	0x400196
<Block for 0x400196, 6 bytes>
0x400196:	mov	rbx, qword ptr [rbp - 8]
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400191, 5 bytes>
0x400191:	call	0x500010
