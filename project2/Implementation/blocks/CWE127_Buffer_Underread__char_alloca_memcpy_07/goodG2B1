<Block for 0x40019c, 85 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	push	rbx
0x4001a5:	sub	rsp, 0x88
0x4001ac:	mov	rax, qword ptr fs:[0x28]
0x4001b5:	mov	qword ptr [rbp - 0x18], rax
0x4001b9:	xor	eax, eax
0x4001bb:	mov	eax, 0x10
0x4001c0:	sub	rax, 1
0x4001c4:	add	rax, 0x6c
0x4001c8:	mov	esi, 0x10
0x4001cd:	mov	edx, 0
0x4001d2:	div	rsi
0x4001d5:	imul	rax, rax, 0x10
0x4001d9:	mov	rdx, rax
0x4001dc:	and	rdx, 0xfffffffffffff000
0x4001e3:	mov	rbx, rsp
0x4001e6:	sub	rbx, rdx
0x4001e9:	mov	rdx, rbx
0x4001ec:	cmp	rsp, rdx
0x4001ef:	je	0x400203
<Block for 0x400203, 26 bytes>
0x400203:	mov	rdx, rax
0x400206:	and	edx, 0xfff
0x40020c:	sub	rsp, rdx
0x40020f:	mov	rdx, rax
0x400212:	and	edx, 0xfff
0x400218:	test	rdx, rdx
0x40021b:	je	0x40022d
<Block for 0x4001f1, 18 bytes>
0x4001f1:	sub	rsp, 0x1000
0x4001f8:	or	qword ptr [rsp + 0xff8], 0
0x400201:	jmp	0x4001ec
<Block for 0x40022d, 47 bytes>
0x40022d:	mov	rax, rsp
0x400230:	add	rax, 0xf
0x400234:	shr	rax, 4
0x400238:	shl	rax, 4
0x40023c:	mov	qword ptr [rbp - 0x88], rax
0x400243:	mov	rax, qword ptr [rbp - 0x88]
0x40024a:	mov	edx, 0x63
0x40024f:	mov	esi, 0x41
0x400254:	mov	rdi, rax
0x400257:	call	0x500000
<Block for 0x40021d, 63 bytes>
0x40021d:	and	eax, 0xfff
0x400222:	sub	rax, 8
0x400226:	add	rax, rsp
0x400229:	or	qword ptr [rax], 0
0x40022d:	mov	rax, rsp
0x400230:	add	rax, 0xf
0x400234:	shr	rax, 4
0x400238:	shl	rax, 4
0x40023c:	mov	qword ptr [rbp - 0x88], rax
0x400243:	mov	rax, qword ptr [rbp - 0x88]
0x40024a:	mov	edx, 0x63
0x40024f:	mov	esi, 0x41
0x400254:	mov	rdi, rax
0x400257:	call	0x500000
<Block for 0x4001ec, 5 bytes>
0x4001ec:	cmp	rsp, rdx
0x4001ef:	je	0x400203
<Block for 0x40025c, 25 bytes>
0x40025c:	mov	rax, qword ptr [rbp - 0x88]
0x400263:	add	rax, 0x63
0x400267:	mov	byte ptr [rax], 0
0x40026a:	mov	eax, dword ptr [rip + 0x28c]
0x400270:	cmp	eax, 5
0x400273:	je	0x400283
<Block for 0x400283, 36 bytes>
0x400283:	mov	rax, qword ptr [rbp - 0x88]
0x40028a:	mov	qword ptr [rbp - 0x90], rax
0x400291:	lea	rax, [rbp - 0x80]
0x400295:	mov	edx, 0x63
0x40029a:	mov	esi, 0x43
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500000
<Block for 0x400275, 12 bytes>
0x400275:	lea	rdi, [rip + 0x284]
0x40027c:	call	0x500008
<Block for 0x4002a7, 128 bytes>
0x4002a7:	mov	byte ptr [rbp - 0x1d], 0
0x4002ab:	mov	rax, qword ptr [rbp - 0x90]
0x4002b2:	mov	rcx, qword ptr [rax]
0x4002b5:	mov	rbx, qword ptr [rax + 8]
0x4002b9:	mov	qword ptr [rbp - 0x80], rcx
0x4002bd:	mov	qword ptr [rbp - 0x78], rbx
0x4002c1:	mov	rcx, qword ptr [rax + 0x10]
0x4002c5:	mov	rbx, qword ptr [rax + 0x18]
0x4002c9:	mov	qword ptr [rbp - 0x70], rcx
0x4002cd:	mov	qword ptr [rbp - 0x68], rbx
0x4002d1:	mov	rcx, qword ptr [rax + 0x20]
0x4002d5:	mov	rbx, qword ptr [rax + 0x28]
0x4002d9:	mov	qword ptr [rbp - 0x60], rcx
0x4002dd:	mov	qword ptr [rbp - 0x58], rbx
0x4002e1:	mov	rcx, qword ptr [rax + 0x30]
0x4002e5:	mov	rbx, qword ptr [rax + 0x38]
0x4002e9:	mov	qword ptr [rbp - 0x50], rcx
0x4002ed:	mov	qword ptr [rbp - 0x48], rbx
0x4002f1:	mov	rcx, qword ptr [rax + 0x40]
0x4002f5:	mov	rbx, qword ptr [rax + 0x48]
0x4002f9:	mov	qword ptr [rbp - 0x40], rcx
0x4002fd:	mov	qword ptr [rbp - 0x38], rbx
0x400301:	mov	rcx, qword ptr [rax + 0x50]
0x400305:	mov	rbx, qword ptr [rax + 0x58]
0x400309:	mov	qword ptr [rbp - 0x30], rcx
0x40030d:	mov	qword ptr [rbp - 0x28], rbx
0x400311:	mov	eax, dword ptr [rax + 0x60]
0x400314:	mov	dword ptr [rbp - 0x20], eax
0x400317:	mov	byte ptr [rbp - 0x1d], 0
0x40031b:	lea	rax, [rbp - 0x80]
0x40031f:	mov	rdi, rax
0x400322:	call	0x500008
<Block for 0x400281, 2 bytes>
0x400281:	jmp	0x400291
<Block for 0x400327, 16 bytes>
0x400327:	nop	
0x400328:	mov	rax, qword ptr [rbp - 0x18]
0x40032c:	xor	rax, qword ptr fs:[0x28]
0x400335:	je	0x40033c
<Block for 0x400291, 22 bytes>
0x400291:	lea	rax, [rbp - 0x80]
0x400295:	mov	edx, 0x63
0x40029a:	mov	esi, 0x43
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500000
<Block for 0x40033c, 6 bytes>
0x40033c:	mov	rbx, qword ptr [rbp - 8]
0x400340:	leave	
0x400341:	ret	
<Block for 0x400337, 5 bytes>
0x400337:	call	0x500010
