<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400334
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	edi, 0x64
0x400035:	call	0x500000
<Block for 0x40003a, 11 bytes>
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	cmp	qword ptr [rbp - 0x58], 0
0x400043:	jne	0x40004f
<Block for 0x400045, 10 bytes>
0x400045:	mov	edi, 0xffffffff
0x40004a:	call	0x500008
<Block for 0x40004f, 22 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 0x58]
0x400053:	mov	edx, 0x63
0x400058:	mov	esi, 0x41
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x400065, 42 bytes>
0x400065:	mov	rax, qword ptr [rbp - 0x58]
0x400069:	add	rax, 0x63
0x40006d:	mov	byte ptr [rax], 0
0x400070:	mov	rax, qword ptr [rbp - 0x58]
0x400074:	sub	rax, 8
0x400078:	mov	qword ptr [rbp - 0x60], rax
0x40007c:	lea	rdx, [rbp - 0x60]
0x400080:	lea	rax, [rbp - 0x50]
0x400084:	mov	rsi, rdx
0x400087:	mov	rdi, rax
0x40008a:	call	0x40042c
<Block for 0x40008f, 19 bytes>
0x40008f:	lea	rdx, [rbp - 0x60]
0x400093:	lea	rax, [rbp - 0x50]
0x400097:	mov	rsi, rdx
0x40009a:	mov	rdi, rax
0x40009d:	call	0x40042c
<Block for 0x4000a2, 19 bytes>
0x4000a2:	lea	rdx, [rbp - 0x60]
0x4000a6:	lea	rax, [rbp - 0x50]
0x4000aa:	mov	rsi, rdx
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x40042c
<Block for 0x4000b5, 19 bytes>
0x4000b5:	lea	rdx, [rbp - 0x50]
0x4000b9:	lea	rax, [rbp - 0x30]
0x4000bd:	mov	rsi, rdx
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x400466
<Block for 0x4000c8, 12 bytes>
0x4000c8:	lea	rax, [rbp - 0x30]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500018
<Block for 0x4000d4, 12 bytes>
0x4000d4:	lea	rax, [rbp - 0x30]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x400354
<Block for 0x4000e0, 12 bytes>
0x4000e0:	lea	rax, [rbp - 0x50]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x400354
<Block for 0x4000ec, 16 bytes>
0x4000ec:	nop	
0x4000ed:	mov	rax, qword ptr [rbp - 0x18]
0x4000f1:	xor	rax, qword ptr fs:[0x28]
0x4000fa:	je	0x400136
<Block for 0x400136, 7 bytes>
0x400136:	add	rsp, 0x58
0x40013a:	pop	rbx
0x40013b:	pop	rbp
0x40013c:	ret	
<Block for 0x4000fc, 2 bytes>
0x4000fc:	jmp	0x400131
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500028
