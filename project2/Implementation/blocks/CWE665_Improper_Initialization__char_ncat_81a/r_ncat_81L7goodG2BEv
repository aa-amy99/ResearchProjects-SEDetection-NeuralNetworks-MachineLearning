<Block for 0x400070, 96 bytes>
0x400070:	endbr64	
0x400074:	push	rbp
0x400075:	mov	rbp, rsp
0x400078:	sub	rsp, 0x90
0x40007f:	mov	rax, qword ptr fs:[0x28]
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	xor	eax, eax
0x40008e:	lea	rax, [rbp - 0x70]
0x400092:	mov	qword ptr [rbp - 0x80], rax
0x400096:	mov	rax, qword ptr [rbp - 0x80]
0x40009a:	mov	byte ptr [rax], 0
0x40009d:	lea	rax, [rip + 0xfff7c]
0x4000a4:	mov	qword ptr [rbp - 0x88], rax
0x4000ab:	lea	rax, [rbp - 0x88]
0x4000b2:	mov	qword ptr [rbp - 0x78], rax
0x4000b6:	mov	rax, qword ptr [rbp - 0x78]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	rcx, qword ptr [rax]
0x4000c0:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c4:	mov	rax, qword ptr [rbp - 0x78]
0x4000c8:	mov	rsi, rdx
0x4000cb:	mov	rdi, rax
0x4000ce:	call	rcx
<Block for 0x4000d0, 16 bytes>
0x4000d0:	nop	
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	xor	rax, qword ptr fs:[0x28]
0x4000de:	je	0x4000e5
<Block for 0x4000e5, 2 bytes>
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	call	0x500008
