<Block for 0x400000, 89 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x70]
0x400022:	mov	qword ptr [rbp - 0x80], rax
0x400026:	lea	rax, [rip + 0xfffe3]
0x40002d:	mov	qword ptr [rbp - 0x88], rax
0x400034:	lea	rax, [rbp - 0x88]
0x40003b:	mov	qword ptr [rbp - 0x78], rax
0x40003f:	mov	rax, qword ptr [rbp - 0x78]
0x400043:	mov	rax, qword ptr [rax]
0x400046:	mov	rcx, qword ptr [rax]
0x400049:	mov	rdx, qword ptr [rbp - 0x80]
0x40004d:	mov	rax, qword ptr [rbp - 0x78]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	rcx
<Block for 0x400059, 16 bytes>
0x400059:	nop	
0x40005a:	mov	rax, qword ptr [rbp - 8]
0x40005e:	xor	rax, qword ptr fs:[0x28]
0x400067:	je	0x40006e
<Block for 0x40006e, 2 bytes>
0x40006e:	leave	
0x40006f:	ret	
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500008
