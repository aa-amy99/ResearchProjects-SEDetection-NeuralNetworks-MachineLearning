<Block for 0x4001a8, 40 bytes>
0x4001a8:	endbr64	
0x4001ac:	push	rbp
0x4001ad:	mov	rbp, rsp
0x4001b0:	add	rsp, -0x80
0x4001b4:	mov	rax, qword ptr fs:[0x28]
0x4001bd:	mov	qword ptr [rbp - 8], rax
0x4001c1:	xor	eax, eax
0x4001c3:	mov	qword ptr [rbp - 0x80], 0
0x4001cb:	call	0x500000
<Block for 0x4001d0, 9 bytes>
0x4001d0:	test	eax, eax
0x4001d2:	setne	al
0x4001d5:	test	al, al
0x4001d7:	je	0x400210
<Block for 0x400210, 22 bytes>
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500010
<Block for 0x4001d9, 10 bytes>
0x4001d9:	mov	edi, 0x64
0x4001de:	call	0x500008
<Block for 0x400226, 16 bytes>
0x400226:	mov	byte ptr [rbp - 0xd], 0
0x40022a:	lea	rax, [rbp - 0x70]
0x40022e:	mov	rdi, rax
0x400231:	call	0x500018
<Block for 0x4001e3, 26 bytes>
0x4001e3:	mov	qword ptr [rbp - 0x78], rax
0x4001e7:	mov	rax, qword ptr [rbp - 0x78]
0x4001eb:	mov	edx, 0x63
0x4001f0:	mov	esi, 0x41
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x500010
<Block for 0x400236, 22 bytes>
0x400236:	mov	rdx, rax
0x400239:	mov	rcx, qword ptr [rbp - 0x80]
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	rsi, rcx
0x400244:	mov	rdi, rax
0x400247:	call	0x500020
<Block for 0x4001fd, 41 bytes>
0x4001fd:	mov	rax, qword ptr [rbp - 0x78]
0x400201:	add	rax, 0x63
0x400205:	mov	byte ptr [rax], 0
0x400208:	mov	rax, qword ptr [rbp - 0x78]
0x40020c:	mov	qword ptr [rbp - 0x80], rax
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500010
<Block for 0x40024c, 16 bytes>
0x40024c:	mov	byte ptr [rbp - 0xd], 0
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	rdi, rax
0x400257:	call	0x500028
<Block for 0x40025c, 16 bytes>
0x40025c:	nop	
0x40025d:	mov	rax, qword ptr [rbp - 8]
0x400261:	xor	rax, qword ptr fs:[0x28]
0x40026a:	je	0x400271
<Block for 0x400271, 2 bytes>
0x400271:	leave	
0x400272:	ret	
<Block for 0x40026c, 5 bytes>
0x40026c:	call	0x500030
