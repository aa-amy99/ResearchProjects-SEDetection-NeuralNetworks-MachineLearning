<Block for 0x4000cf, 40 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	add	rsp, -0x80
0x4000db:	mov	rax, qword ptr fs:[0x28]
0x4000e4:	mov	qword ptr [rbp - 8], rax
0x4000e8:	xor	eax, eax
0x4000ea:	mov	qword ptr [rbp - 0x80], 0
0x4000f2:	call	0x500038
<Block for 0x4000f7, 9 bytes>
0x4000f7:	test	eax, eax
0x4000f9:	setne	al
0x4000fc:	test	al, al
0x4000fe:	je	0x40010e
<Block for 0x40010e, 10 bytes>
0x40010e:	mov	edi, 0x64
0x400113:	call	0x500008
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x181]
0x400107:	call	0x500028
<Block for 0x400118, 26 bytes>
0x400118:	mov	qword ptr [rbp - 0x78], rax
0x40011c:	mov	rax, qword ptr [rbp - 0x78]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x41
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500010
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x400145
<Block for 0x400132, 41 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x78]
0x400136:	add	rax, 0x63
0x40013a:	mov	byte ptr [rax], 0
0x40013d:	mov	rax, qword ptr [rbp - 0x78]
0x400141:	mov	qword ptr [rbp - 0x80], rax
0x400145:	lea	rax, [rbp - 0x70]
0x400149:	mov	edx, 0x63
0x40014e:	mov	esi, 0x43
0x400153:	mov	rdi, rax
0x400156:	call	0x500010
<Block for 0x400145, 22 bytes>
0x400145:	lea	rax, [rbp - 0x70]
0x400149:	mov	edx, 0x63
0x40014e:	mov	esi, 0x43
0x400153:	mov	rdi, rax
0x400156:	call	0x500010
<Block for 0x40015b, 16 bytes>
0x40015b:	mov	byte ptr [rbp - 0xd], 0
0x40015f:	lea	rax, [rbp - 0x70]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x40016b, 22 bytes>
0x40016b:	mov	rdx, rax
0x40016e:	mov	rcx, qword ptr [rbp - 0x80]
0x400172:	lea	rax, [rbp - 0x70]
0x400176:	mov	rsi, rcx
0x400179:	mov	rdi, rax
0x40017c:	call	0x500020
<Block for 0x400181, 16 bytes>
0x400181:	mov	byte ptr [rbp - 0xd], 0
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500028
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500030
