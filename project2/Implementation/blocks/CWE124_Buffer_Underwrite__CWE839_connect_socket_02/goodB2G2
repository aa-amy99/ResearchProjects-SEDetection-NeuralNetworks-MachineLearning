<Block for 0x4002f4, 61 bytes>
0x4002f4:	endbr64	
0x4002f8:	push	rbp
0x4002f9:	mov	rbp, rsp
0x4002fc:	sub	rsp, 0x50
0x400300:	mov	rax, qword ptr fs:[0x28]
0x400309:	mov	qword ptr [rbp - 8], rax
0x40030d:	xor	eax, eax
0x40030f:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400316:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40031d:	mov	edx, 6
0x400322:	mov	esi, 1
0x400327:	mov	edi, 2
0x40032c:	call	0x500000
<Block for 0x400331, 13 bytes>
0x400331:	mov	dword ptr [rbp - 0x48], eax
0x400334:	cmp	dword ptr [rbp - 0x48], -1
0x400338:	je	0x4003d4
<Block for 0x4003d4, 3 bytes>
0x4003d4:	nop	
0x4003d5:	jmp	0x4003d8
<Block for 0x40033e, 22 bytes>
0x40033e:	lea	rax, [rbp - 0x40]
0x400342:	mov	edx, 0x10
0x400347:	mov	esi, 0
0x40034c:	mov	rdi, rax
0x40034f:	call	0x500008
<Block for 0x4003d8, 6 bytes>
0x4003d8:	cmp	dword ptr [rbp - 0x48], -1
0x4003dc:	je	0x4003e8
<Block for 0x400354, 18 bytes>
0x400354:	mov	word ptr [rbp - 0x40], 2
0x40035a:	lea	rdi, [rip + 0x29f]
0x400361:	call	0x500010
<Block for 0x4003e8, 46 bytes>
0x4003e8:	mov	qword ptr [rbp - 0x40], 0
0x4003f0:	mov	qword ptr [rbp - 0x38], 0
0x4003f8:	mov	qword ptr [rbp - 0x30], 0
0x400400:	mov	qword ptr [rbp - 0x28], 0
0x400408:	mov	qword ptr [rbp - 0x20], 0
0x400410:	cmp	dword ptr [rbp - 0x50], 0
0x400414:	js	0x40044e
<Block for 0x4003de, 10 bytes>
0x4003de:	mov	eax, dword ptr [rbp - 0x48]
0x4003e1:	mov	edi, eax
0x4003e3:	call	0x500038
<Block for 0x400366, 13 bytes>
0x400366:	mov	dword ptr [rbp - 0x3c], eax
0x400369:	mov	edi, 0x6987
0x40036e:	call	0x500018
<Block for 0x40044e, 12 bytes>
0x40044e:	lea	rdi, [rip + 0x1db]
0x400455:	call	0x500048
<Block for 0x400416, 6 bytes>
0x400416:	cmp	dword ptr [rbp - 0x50], 9
0x40041a:	jg	0x40044e
<Block for 0x400373, 26 bytes>
0x400373:	mov	word ptr [rbp - 0x3e], ax
0x400377:	lea	rcx, [rbp - 0x40]
0x40037b:	mov	eax, dword ptr [rbp - 0x48]
0x40037e:	mov	edx, 0x10
0x400383:	mov	rsi, rcx
0x400386:	mov	edi, eax
0x400388:	call	0x500020
<Block for 0x40045a, 16 bytes>
0x40045a:	nop	
0x40045b:	mov	rax, qword ptr [rbp - 8]
0x40045f:	xor	rax, qword ptr fs:[0x28]
0x400468:	je	0x40046f
<Block for 0x40041c, 22 bytes>
0x40041c:	mov	eax, dword ptr [rbp - 0x50]
0x40041f:	cdqe	
0x400421:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400429:	mov	dword ptr [rbp - 0x4c], 0
0x400430:	jmp	0x400446
<Block for 0x40038d, 5 bytes>
0x40038d:	cmp	eax, -1
0x400390:	je	0x4003d7
<Block for 0x40046f, 2 bytes>
0x40046f:	leave	
0x400470:	ret	
<Block for 0x40046a, 5 bytes>
0x40046a:	call	0x500050
<Block for 0x400446, 6 bytes>
0x400446:	cmp	dword ptr [rbp - 0x4c], 9
0x40044a:	jle	0x400432
<Block for 0x400392, 24 bytes>
0x400392:	lea	rsi, [rbp - 0x16]
0x400396:	mov	eax, dword ptr [rbp - 0x48]
0x400399:	mov	ecx, 0
0x40039e:	mov	edx, 0xd
0x4003a3:	mov	edi, eax
0x4003a5:	call	0x500028
<Block for 0x4003d7, 1 bytes>
0x4003d7:	nop	
<Block for 0x400432, 16 bytes>
0x400432:	mov	eax, dword ptr [rbp - 0x4c]
0x400435:	cdqe	
0x400437:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40043b:	mov	edi, eax
0x40043d:	call	0x500040
<Block for 0x40044c, 2 bytes>
0x40044c:	jmp	0x40045a
<Block for 0x4003aa, 9 bytes>
0x4003aa:	mov	dword ptr [rbp - 0x44], eax
0x4003ad:	cmp	dword ptr [rbp - 0x44], -1
0x4003b1:	je	0x4003d8
<Block for 0x400442, 10 bytes>
0x400442:	add	dword ptr [rbp - 0x4c], 1
0x400446:	cmp	dword ptr [rbp - 0x4c], 9
0x40044a:	jle	0x400432
<Block for 0x4003b3, 6 bytes>
0x4003b3:	cmp	dword ptr [rbp - 0x44], 0
0x4003b7:	je	0x4003d8
<Block for 0x4003b9, 22 bytes>
0x4003b9:	mov	eax, dword ptr [rbp - 0x44]
0x4003bc:	cdqe	
0x4003be:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003c3:	lea	rax, [rbp - 0x16]
0x4003c7:	mov	rdi, rax
0x4003ca:	call	0x500030
<Block for 0x4003cf, 5 bytes>
0x4003cf:	mov	dword ptr [rbp - 0x50], eax
0x4003d2:	jmp	0x4003d8
