<Block for 0x400062, 47 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	add	rsp, -0x80
0x40006e:	mov	rax, qword ptr fs:[0x28]
0x400077:	mov	qword ptr [rbp - 8], rax
0x40007b:	xor	eax, eax
0x40007d:	mov	qword ptr [rbp - 0x78], 0
0x400085:	lea	rax, [rbp - 0x78]
0x400089:	mov	rdi, rax
0x40008c:	call	0x400000
<Block for 0x400091, 22 bytes>
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x4000a7, 16 bytes>
0x4000a7:	mov	byte ptr [rbp - 0xd], 0
0x4000ab:	lea	rax, [rbp - 0x70]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500018
<Block for 0x4000b7, 22 bytes>
0x4000b7:	mov	rdx, rax
0x4000ba:	mov	rcx, qword ptr [rbp - 0x78]
0x4000be:	lea	rax, [rbp - 0x70]
0x4000c2:	mov	rsi, rcx
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500020
<Block for 0x4000cd, 16 bytes>
0x4000cd:	mov	byte ptr [rbp - 0xd], 0
0x4000d1:	lea	rax, [rbp - 0x70]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500028
<Block for 0x4000dd, 16 bytes>
0x4000dd:	nop	
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	xor	rax, qword ptr fs:[0x28]
0x4000eb:	je	0x4000f2
<Block for 0x4000f2, 2 bytes>
0x4000f2:	leave	
0x4000f3:	ret	
<Block for 0x4000ed, 5 bytes>
0x4000ed:	call	0x500030
