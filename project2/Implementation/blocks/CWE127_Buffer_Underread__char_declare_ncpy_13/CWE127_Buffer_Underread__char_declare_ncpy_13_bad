<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 15 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	mov	eax, dword ptr [rip + 0xfffc7]
0x400041:	cmp	eax, 5
0x400044:	jne	0x400058
<Block for 0x400046, 40 bytes>
0x400046:	lea	rax, [rbp - 0xe0]
0x40004d:	sub	rax, 8
0x400051:	mov	qword ptr [rbp - 0xe8], rax
0x400058:	lea	rax, [rbp - 0x70]
0x40005c:	mov	edx, 0x63
0x400061:	mov	esi, 0x43
0x400066:	mov	rdi, rax
0x400069:	call	0x500000
<Block for 0x400058, 22 bytes>
0x400058:	lea	rax, [rbp - 0x70]
0x40005c:	mov	edx, 0x63
0x400061:	mov	esi, 0x43
0x400066:	mov	rdi, rax
0x400069:	call	0x500000
<Block for 0x40006e, 16 bytes>
0x40006e:	mov	byte ptr [rbp - 0xd], 0
0x400072:	lea	rax, [rbp - 0x70]
0x400076:	mov	rdi, rax
0x400079:	call	0x500010
<Block for 0x40007e, 25 bytes>
0x40007e:	mov	rdx, rax
0x400081:	mov	rcx, qword ptr [rbp - 0xe8]
0x400088:	lea	rax, [rbp - 0x70]
0x40008c:	mov	rsi, rcx
0x40008f:	mov	rdi, rax
0x400092:	call	0x500018
<Block for 0x400097, 16 bytes>
0x400097:	mov	byte ptr [rbp - 0xd], 0
0x40009b:	lea	rax, [rbp - 0x70]
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500020
<Block for 0x4000a7, 16 bytes>
0x4000a7:	nop	
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	xor	rax, qword ptr fs:[0x28]
0x4000b5:	je	0x4000bc
<Block for 0x4000bc, 2 bytes>
0x4000bc:	leave	
0x4000bd:	ret	
<Block for 0x4000b7, 5 bytes>
0x4000b7:	call	0x500028
