<Block for 0x4000a1, 81 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0xf0
0x4000b0:	mov	rax, qword ptr fs:[0x28]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	xor	eax, eax
0x4000bf:	lea	rax, [rbp - 0xe0]
0x4000c6:	mov	qword ptr [rbp - 0xf0], rax
0x4000cd:	nop	
0x4000ce:	endbr64	
0x4000d2:	mov	rax, qword ptr [rbp - 0xf0]
0x4000d9:	mov	byte ptr [rax], 0
0x4000dc:	lea	rax, [rbp - 0x70]
0x4000e0:	mov	edx, 0x63
0x4000e5:	mov	esi, 0x43
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500000
<Block for 0x4000f2, 16 bytes>
0x4000f2:	mov	byte ptr [rbp - 0xd], 0
0x4000f6:	lea	rax, [rbp - 0x70]
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500008
<Block for 0x400102, 36 bytes>
0x400102:	mov	qword ptr [rbp - 0xe8], rax
0x400109:	mov	rdx, qword ptr [rbp - 0xe8]
0x400110:	lea	rcx, [rbp - 0x70]
0x400114:	mov	rax, qword ptr [rbp - 0xf0]
0x40011b:	mov	rsi, rcx
0x40011e:	mov	rdi, rax
0x400121:	call	0x500010
<Block for 0x400126, 15 bytes>
0x400126:	mov	rax, qword ptr [rbp - 0xf0]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500018
<Block for 0x400135, 16 bytes>
0x400135:	nop	
0x400136:	mov	rax, qword ptr [rbp - 8]
0x40013a:	xor	rax, qword ptr fs:[0x28]
0x400143:	je	0x40014a
<Block for 0x40014a, 2 bytes>
0x40014a:	leave	
0x40014b:	ret	
<Block for 0x400145, 5 bytes>
0x400145:	call	0x500020
