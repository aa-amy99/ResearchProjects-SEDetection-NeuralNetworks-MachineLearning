<Block for 0x400000, 71 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	nop	
0x40002d:	endbr64	
0x400031:	lea	rax, [rbp - 0x70]
0x400035:	mov	edx, 0x63
0x40003a:	mov	esi, 0x43
0x40003f:	mov	rdi, rax
0x400042:	call	0x500000
<Block for 0x400047, 16 bytes>
0x400047:	mov	byte ptr [rbp - 0xd], 0
0x40004b:	lea	rax, [rbp - 0x70]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500008
<Block for 0x400057, 36 bytes>
0x400057:	mov	qword ptr [rbp - 0xe8], rax
0x40005e:	mov	rdx, qword ptr [rbp - 0xe8]
0x400065:	lea	rcx, [rbp - 0x70]
0x400069:	mov	rax, qword ptr [rbp - 0xf0]
0x400070:	mov	rsi, rcx
0x400073:	mov	rdi, rax
0x400076:	call	0x500010
<Block for 0x40007b, 15 bytes>
0x40007b:	mov	rax, qword ptr [rbp - 0xf0]
0x400082:	mov	rdi, rax
0x400085:	call	0x500018
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500020
