<Block for 0x40009e, 47 bytes>
0x40009e:	endbr64	
0x4000a2:	push	rbp
0x4000a3:	mov	rbp, rsp
0x4000a6:	add	rsp, -0x80
0x4000aa:	mov	rax, qword ptr fs:[0x28]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	xor	eax, eax
0x4000b9:	mov	qword ptr [rbp - 0x78], 0
0x4000c1:	lea	rax, [rbp - 0x78]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500038
<Block for 0x4000cd, 22 bytes>
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x43
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500008
<Block for 0x4000e3, 16 bytes>
0x4000e3:	mov	byte ptr [rbp - 0xd], 0
0x4000e7:	lea	rax, [rbp - 0x70]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500010
<Block for 0x4000f3, 22 bytes>
0x4000f3:	mov	rdx, rax
0x4000f6:	mov	rcx, qword ptr [rbp - 0x78]
0x4000fa:	lea	rax, [rbp - 0x70]
0x4000fe:	mov	rsi, rcx
0x400101:	mov	rdi, rax
0x400104:	call	0x500018
<Block for 0x400109, 16 bytes>
0x400109:	mov	byte ptr [rbp - 0xd], 0
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	rdi, rax
0x400114:	call	0x500020
<Block for 0x400119, 12 bytes>
0x400119:	mov	rax, qword ptr [rbp - 0x78]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500028
<Block for 0x400125, 16 bytes>
0x400125:	nop	
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	xor	rax, qword ptr fs:[0x28]
0x400133:	je	0x40013a
<Block for 0x40013a, 2 bytes>
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x400135, 5 bytes>
0x400135:	call	0x500030
