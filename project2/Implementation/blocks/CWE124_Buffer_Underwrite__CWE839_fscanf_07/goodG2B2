<Block for 0x400384, 45 bytes>
0x400384:	endbr64	
0x400388:	push	rbp
0x400389:	mov	rbp, rsp
0x40038c:	sub	rsp, 0x40
0x400390:	mov	rax, qword ptr fs:[0x28]
0x400399:	mov	qword ptr [rbp - 8], rax
0x40039d:	xor	eax, eax
0x40039f:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4003a6:	mov	eax, dword ptr [rip + 0xd0]
0x4003ac:	cmp	eax, 5
0x4003af:	jne	0x4003b8
<Block for 0x4003b1, 18 bytes>
0x4003b1:	mov	dword ptr [rbp - 0x38], 7
0x4003b8:	mov	eax, dword ptr [rip + 0xbe]
0x4003be:	cmp	eax, 5
0x4003c1:	jne	0x40042f
<Block for 0x4003b8, 11 bytes>
0x4003b8:	mov	eax, dword ptr [rip + 0xbe]
0x4003be:	cmp	eax, 5
0x4003c1:	jne	0x40042f
<Block for 0x4003c3, 46 bytes>
0x4003c3:	mov	qword ptr [rbp - 0x30], 0
0x4003cb:	mov	qword ptr [rbp - 0x28], 0
0x4003d3:	mov	qword ptr [rbp - 0x20], 0
0x4003db:	mov	qword ptr [rbp - 0x18], 0
0x4003e3:	mov	qword ptr [rbp - 0x10], 0
0x4003eb:	cmp	dword ptr [rbp - 0x38], 9
0x4003ef:	jg	0x400423
<Block for 0x40042f, 16 bytes>
0x40042f:	nop	
0x400430:	mov	rax, qword ptr [rbp - 8]
0x400434:	xor	rax, qword ptr fs:[0x28]
0x40043d:	je	0x400444
<Block for 0x4003f1, 22 bytes>
0x4003f1:	mov	eax, dword ptr [rbp - 0x38]
0x4003f4:	cdqe	
0x4003f6:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4003fe:	mov	dword ptr [rbp - 0x34], 0
0x400405:	jmp	0x40041b
<Block for 0x400423, 12 bytes>
0x400423:	lea	rdi, [rip + 0x5e]
0x40042a:	call	0x500018
<Block for 0x400444, 2 bytes>
0x400444:	leave	
0x400445:	ret	
<Block for 0x40043f, 5 bytes>
0x40043f:	call	0x500020
<Block for 0x40041b, 6 bytes>
0x40041b:	cmp	dword ptr [rbp - 0x34], 9
0x40041f:	jle	0x400407
<Block for 0x400407, 16 bytes>
0x400407:	mov	eax, dword ptr [rbp - 0x34]
0x40040a:	cdqe	
0x40040c:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400410:	mov	edi, eax
0x400412:	call	0x500010
<Block for 0x400421, 2 bytes>
0x400421:	jmp	0x40042f
<Block for 0x400417, 10 bytes>
0x400417:	add	dword ptr [rbp - 0x34], 1
0x40041b:	cmp	dword ptr [rbp - 0x34], 9
0x40041f:	jle	0x400407
