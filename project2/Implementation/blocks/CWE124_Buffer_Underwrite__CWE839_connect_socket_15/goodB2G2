<Block for 0x4002f8, 61 bytes>
0x4002f8:	endbr64	
0x4002fc:	push	rbp
0x4002fd:	mov	rbp, rsp
0x400300:	sub	rsp, 0x50
0x400304:	mov	rax, qword ptr fs:[0x28]
0x40030d:	mov	qword ptr [rbp - 8], rax
0x400311:	xor	eax, eax
0x400313:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40031a:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400321:	mov	edx, 6
0x400326:	mov	esi, 1
0x40032b:	mov	edi, 2
0x400330:	call	0x500000
<Block for 0x400335, 13 bytes>
0x400335:	mov	dword ptr [rbp - 0x48], eax
0x400338:	cmp	dword ptr [rbp - 0x48], -1
0x40033c:	je	0x4003d8
<Block for 0x4003d8, 3 bytes>
0x4003d8:	nop	
0x4003d9:	jmp	0x4003dc
<Block for 0x400342, 22 bytes>
0x400342:	lea	rax, [rbp - 0x40]
0x400346:	mov	edx, 0x10
0x40034b:	mov	esi, 0
0x400350:	mov	rdi, rax
0x400353:	call	0x500008
<Block for 0x4003dc, 6 bytes>
0x4003dc:	cmp	dword ptr [rbp - 0x48], -1
0x4003e0:	je	0x4003ec
<Block for 0x400358, 18 bytes>
0x400358:	mov	word ptr [rbp - 0x40], 2
0x40035e:	lea	rdi, [rip + 0x2a3]
0x400365:	call	0x500010
<Block for 0x4003ec, 47 bytes>
0x4003ec:	nop	
0x4003ed:	mov	qword ptr [rbp - 0x40], 0
0x4003f5:	mov	qword ptr [rbp - 0x38], 0
0x4003fd:	mov	qword ptr [rbp - 0x30], 0
0x400405:	mov	qword ptr [rbp - 0x28], 0
0x40040d:	mov	qword ptr [rbp - 0x20], 0
0x400415:	cmp	dword ptr [rbp - 0x50], 0
0x400419:	js	0x400453
<Block for 0x4003e2, 10 bytes>
0x4003e2:	mov	eax, dword ptr [rbp - 0x48]
0x4003e5:	mov	edi, eax
0x4003e7:	call	0x500038
<Block for 0x40036a, 13 bytes>
0x40036a:	mov	dword ptr [rbp - 0x3c], eax
0x40036d:	mov	edi, 0x6987
0x400372:	call	0x500018
<Block for 0x400453, 12 bytes>
0x400453:	lea	rdi, [rip + 0x1de]
0x40045a:	call	0x500048
<Block for 0x40041b, 6 bytes>
0x40041b:	cmp	dword ptr [rbp - 0x50], 9
0x40041f:	jg	0x400453
<Block for 0x400377, 26 bytes>
0x400377:	mov	word ptr [rbp - 0x3e], ax
0x40037b:	lea	rcx, [rbp - 0x40]
0x40037f:	mov	eax, dword ptr [rbp - 0x48]
0x400382:	mov	edx, 0x10
0x400387:	mov	rsi, rcx
0x40038a:	mov	edi, eax
0x40038c:	call	0x500020
<Block for 0x40045f, 17 bytes>
0x40045f:	nop	
0x400460:	nop	
0x400461:	mov	rax, qword ptr [rbp - 8]
0x400465:	xor	rax, qword ptr fs:[0x28]
0x40046e:	je	0x400475
<Block for 0x400421, 22 bytes>
0x400421:	mov	eax, dword ptr [rbp - 0x50]
0x400424:	cdqe	
0x400426:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40042e:	mov	dword ptr [rbp - 0x4c], 0
0x400435:	jmp	0x40044b
<Block for 0x400391, 5 bytes>
0x400391:	cmp	eax, -1
0x400394:	je	0x4003db
<Block for 0x400475, 2 bytes>
0x400475:	leave	
0x400476:	ret	
<Block for 0x400470, 5 bytes>
0x400470:	call	0x500050
<Block for 0x40044b, 6 bytes>
0x40044b:	cmp	dword ptr [rbp - 0x4c], 9
0x40044f:	jle	0x400437
<Block for 0x400396, 24 bytes>
0x400396:	lea	rsi, [rbp - 0x16]
0x40039a:	mov	eax, dword ptr [rbp - 0x48]
0x40039d:	mov	ecx, 0
0x4003a2:	mov	edx, 0xd
0x4003a7:	mov	edi, eax
0x4003a9:	call	0x500028
<Block for 0x4003db, 1 bytes>
0x4003db:	nop	
<Block for 0x400437, 16 bytes>
0x400437:	mov	eax, dword ptr [rbp - 0x4c]
0x40043a:	cdqe	
0x40043c:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400440:	mov	edi, eax
0x400442:	call	0x500040
<Block for 0x400451, 2 bytes>
0x400451:	jmp	0x40045f
<Block for 0x4003ae, 9 bytes>
0x4003ae:	mov	dword ptr [rbp - 0x44], eax
0x4003b1:	cmp	dword ptr [rbp - 0x44], -1
0x4003b5:	je	0x4003dc
<Block for 0x400447, 10 bytes>
0x400447:	add	dword ptr [rbp - 0x4c], 1
0x40044b:	cmp	dword ptr [rbp - 0x4c], 9
0x40044f:	jle	0x400437
<Block for 0x4003b7, 6 bytes>
0x4003b7:	cmp	dword ptr [rbp - 0x44], 0
0x4003bb:	je	0x4003dc
<Block for 0x4003bd, 22 bytes>
0x4003bd:	mov	eax, dword ptr [rbp - 0x44]
0x4003c0:	cdqe	
0x4003c2:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003c7:	lea	rax, [rbp - 0x16]
0x4003cb:	mov	rdi, rax
0x4003ce:	call	0x500030
<Block for 0x4003d3, 5 bytes>
0x4003d3:	mov	dword ptr [rbp - 0x50], eax
0x4003d6:	jmp	0x4003dc
