<Block for 0x4001b0, 40 bytes>
0x4001b0:	endbr64	
0x4001b4:	push	rbp
0x4001b5:	mov	rbp, rsp
0x4001b8:	push	rbx
0x4001b9:	sub	rsp, 0x68
0x4001bd:	mov	rax, qword ptr fs:[0x28]
0x4001c6:	mov	qword ptr [rbp - 0x18], rax
0x4001ca:	xor	eax, eax
0x4001cc:	lea	rax, [rbp - 0x50]
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x4003da
<Block for 0x4001d8, 18 bytes>
0x4001d8:	mov	qword ptr [rbp - 0x68], 0
0x4001e0:	mov	edi, 0x64
0x4001e5:	call	0x500000
<Block for 0x4001ea, 26 bytes>
0x4001ea:	mov	qword ptr [rbp - 0x58], rax
0x4001ee:	mov	rax, qword ptr [rbp - 0x58]
0x4001f2:	mov	edx, 0x63
0x4001f7:	mov	esi, 0x41
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500008
<Block for 0x400204, 31 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0x58]
0x400208:	add	rax, 0x63
0x40020c:	mov	byte ptr [rax], 0
0x40020f:	mov	rax, qword ptr [rbp - 0x58]
0x400213:	mov	qword ptr [rbp - 0x68], rax
0x400217:	lea	rax, [rbp - 0x50]
0x40021b:	mov	rdi, rax
0x40021e:	call	0x40056e
<Block for 0x400223, 23 bytes>
0x400223:	mov	qword ptr [rbp - 0x60], rax
0x400227:	lea	rdx, [rbp - 0x60]
0x40022b:	lea	rax, [rbp - 0x30]
0x40022f:	mov	rsi, rdx
0x400232:	mov	rdi, rax
0x400235:	call	0x4005be
<Block for 0x40023a, 28 bytes>
0x40023a:	lea	rdx, [rbp - 0x68]
0x40023e:	mov	rsi, qword ptr [rbp - 0x30]
0x400242:	lea	rax, [rbp - 0x50]
0x400246:	mov	rcx, rdx
0x400249:	mov	edx, 1
0x40024e:	mov	rdi, rax
0x400251:	call	0x4005ec
<Block for 0x400256, 12 bytes>
0x400256:	lea	rax, [rbp - 0x50]
0x40025a:	mov	rdi, rax
0x40025d:	call	0x40056e
<Block for 0x400262, 23 bytes>
0x400262:	mov	qword ptr [rbp - 0x60], rax
0x400266:	lea	rdx, [rbp - 0x60]
0x40026a:	lea	rax, [rbp - 0x30]
0x40026e:	mov	rsi, rdx
0x400271:	mov	rdi, rax
0x400274:	call	0x4005be
<Block for 0x400279, 28 bytes>
0x400279:	lea	rdx, [rbp - 0x68]
0x40027d:	mov	rsi, qword ptr [rbp - 0x30]
0x400281:	lea	rax, [rbp - 0x50]
0x400285:	mov	rcx, rdx
0x400288:	mov	edx, 1
0x40028d:	mov	rdi, rax
0x400290:	call	0x4005ec
<Block for 0x400295, 12 bytes>
0x400295:	lea	rax, [rbp - 0x50]
0x400299:	mov	rdi, rax
0x40029c:	call	0x40056e
<Block for 0x4002a1, 23 bytes>
0x4002a1:	mov	qword ptr [rbp - 0x60], rax
0x4002a5:	lea	rdx, [rbp - 0x60]
0x4002a9:	lea	rax, [rbp - 0x30]
0x4002ad:	mov	rsi, rdx
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x4005be
<Block for 0x4002b8, 28 bytes>
0x4002b8:	lea	rdx, [rbp - 0x68]
0x4002bc:	mov	rsi, qword ptr [rbp - 0x30]
0x4002c0:	lea	rax, [rbp - 0x50]
0x4002c4:	mov	rcx, rdx
0x4002c7:	mov	edx, 1
0x4002cc:	mov	rdi, rax
0x4002cf:	call	0x4005ec
<Block for 0x4002d4, 19 bytes>
0x4002d4:	lea	rdx, [rbp - 0x50]
0x4002d8:	lea	rax, [rbp - 0x30]
0x4002dc:	mov	rsi, rdx
0x4002df:	mov	rdi, rax
0x4002e2:	call	0x4006b2
<Block for 0x4002e7, 12 bytes>
0x4002e7:	lea	rax, [rbp - 0x30]
0x4002eb:	mov	rdi, rax
0x4002ee:	call	0x500028
<Block for 0x4002f3, 12 bytes>
0x4002f3:	lea	rax, [rbp - 0x30]
0x4002f7:	mov	rdi, rax
0x4002fa:	call	0x400526
<Block for 0x4002ff, 12 bytes>
0x4002ff:	lea	rax, [rbp - 0x50]
0x400303:	mov	rdi, rax
0x400306:	call	0x400526
<Block for 0x40030b, 16 bytes>
0x40030b:	nop	
0x40030c:	mov	rax, qword ptr [rbp - 0x18]
0x400310:	xor	rax, qword ptr fs:[0x28]
0x400319:	je	0x400355
<Block for 0x400355, 7 bytes>
0x400355:	add	rsp, 0x68
0x400359:	pop	rbx
0x40035a:	pop	rbp
0x40035b:	ret	
<Block for 0x40031b, 2 bytes>
0x40031b:	jmp	0x400350
<Block for 0x400350, 5 bytes>
0x400350:	call	0x500020
