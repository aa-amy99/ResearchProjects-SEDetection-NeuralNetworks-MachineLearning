<Block for 0x40019b, 81 bytes>
0x40019b:	endbr64	
0x40019f:	push	rbp
0x4001a0:	mov	rbp, rsp
0x4001a3:	sub	rsp, 0x20
0x4001a7:	mov	rax, qword ptr fs:[0x28]
0x4001b0:	mov	qword ptr [rbp - 8], rax
0x4001b4:	xor	eax, eax
0x4001b6:	mov	eax, 0x10
0x4001bb:	sub	rax, 1
0x4001bf:	add	rax, 0x3a
0x4001c3:	mov	edi, 0x10
0x4001c8:	mov	edx, 0
0x4001cd:	div	rdi
0x4001d0:	imul	rax, rax, 0x10
0x4001d4:	mov	rdx, rax
0x4001d7:	and	rdx, 0xfffffffffffff000
0x4001de:	mov	rcx, rsp
0x4001e1:	sub	rcx, rdx
0x4001e4:	mov	rdx, rcx
0x4001e7:	cmp	rsp, rdx
0x4001ea:	je	0x4001fe
<Block for 0x4001fe, 26 bytes>
0x4001fe:	mov	rdx, rax
0x400201:	and	edx, 0xfff
0x400207:	sub	rsp, rdx
0x40020a:	mov	rdx, rax
0x40020d:	and	edx, 0xfff
0x400213:	test	rdx, rdx
0x400216:	je	0x400228
<Block for 0x4001ec, 18 bytes>
0x4001ec:	sub	rsp, 0x1000
0x4001f3:	or	qword ptr [rsp + 0xff8], 0
0x4001fc:	jmp	0x4001e7
<Block for 0x400228, 73 bytes>
0x400228:	mov	rax, rsp
0x40022b:	add	rax, 0xf
0x40022f:	shr	rax, 4
0x400233:	shl	rax, 4
0x400237:	mov	qword ptr [rbp - 0x20], rax
0x40023b:	mov	eax, 0x10
0x400240:	sub	rax, 1
0x400244:	add	rax, 0x6c
0x400248:	mov	ecx, 0x10
0x40024d:	mov	edx, 0
0x400252:	div	rcx
0x400255:	imul	rax, rax, 0x10
0x400259:	mov	rdx, rax
0x40025c:	and	rdx, 0xfffffffffffff000
0x400263:	mov	rsi, rsp
0x400266:	sub	rsi, rdx
0x400269:	mov	rdx, rsi
0x40026c:	cmp	rsp, rdx
0x40026f:	je	0x400283
<Block for 0x400218, 89 bytes>
0x400218:	and	eax, 0xfff
0x40021d:	sub	rax, 8
0x400221:	add	rax, rsp
0x400224:	or	qword ptr [rax], 0
0x400228:	mov	rax, rsp
0x40022b:	add	rax, 0xf
0x40022f:	shr	rax, 4
0x400233:	shl	rax, 4
0x400237:	mov	qword ptr [rbp - 0x20], rax
0x40023b:	mov	eax, 0x10
0x400240:	sub	rax, 1
0x400244:	add	rax, 0x6c
0x400248:	mov	ecx, 0x10
0x40024d:	mov	edx, 0
0x400252:	div	rcx
0x400255:	imul	rax, rax, 0x10
0x400259:	mov	rdx, rax
0x40025c:	and	rdx, 0xfffffffffffff000
0x400263:	mov	rsi, rsp
0x400266:	sub	rsi, rdx
0x400269:	mov	rdx, rsi
0x40026c:	cmp	rsp, rdx
0x40026f:	je	0x400283
<Block for 0x4001e7, 5 bytes>
0x4001e7:	cmp	rsp, rdx
0x4001ea:	je	0x4001fe
<Block for 0x400283, 26 bytes>
0x400283:	mov	rdx, rax
0x400286:	and	edx, 0xfff
0x40028c:	sub	rsp, rdx
0x40028f:	mov	rdx, rax
0x400292:	and	edx, 0xfff
0x400298:	test	rdx, rdx
0x40029b:	je	0x4002ad
<Block for 0x400271, 18 bytes>
0x400271:	sub	rsp, 0x1000
0x400278:	or	qword ptr [rsp + 0xff8], 0
0x400281:	jmp	0x40026c
<Block for 0x4002ad, 41 bytes>
0x4002ad:	mov	rax, rsp
0x4002b0:	add	rax, 0xf
0x4002b4:	shr	rax, 4
0x4002b8:	shl	rax, 4
0x4002bc:	mov	qword ptr [rbp - 0x18], rax
0x4002c0:	mov	rax, qword ptr [rbp - 0x20]
0x4002c4:	mov	edx, 0x31
0x4002c9:	mov	esi, 0x41
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x500000
<Block for 0x40029d, 57 bytes>
0x40029d:	and	eax, 0xfff
0x4002a2:	sub	rax, 8
0x4002a6:	add	rax, rsp
0x4002a9:	or	qword ptr [rax], 0
0x4002ad:	mov	rax, rsp
0x4002b0:	add	rax, 0xf
0x4002b4:	shr	rax, 4
0x4002b8:	shl	rax, 4
0x4002bc:	mov	qword ptr [rbp - 0x18], rax
0x4002c0:	mov	rax, qword ptr [rbp - 0x20]
0x4002c4:	mov	edx, 0x31
0x4002c9:	mov	esi, 0x41
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x500000
<Block for 0x40026c, 5 bytes>
0x40026c:	cmp	rsp, rdx
0x40026f:	je	0x400283
<Block for 0x4002d6, 33 bytes>
0x4002d6:	mov	rax, qword ptr [rbp - 0x20]
0x4002da:	add	rax, 0x31
0x4002de:	mov	byte ptr [rax], 0
0x4002e1:	mov	rax, qword ptr [rbp - 0x18]
0x4002e5:	mov	edx, 0x63
0x4002ea:	mov	esi, 0x41
0x4002ef:	mov	rdi, rax
0x4002f2:	call	0x500000
<Block for 0x4002f7, 40 bytes>
0x4002f7:	mov	rax, qword ptr [rbp - 0x18]
0x4002fb:	add	rax, 0x63
0x4002ff:	mov	byte ptr [rax], 0
0x400302:	mov	rax, qword ptr [rbp - 0x18]
0x400306:	mov	qword ptr [rbp - 0x10], rax
0x40030a:	mov	rax, qword ptr [rbp - 0x10]
0x40030e:	mov	qword ptr [rip - 0x30d], rax
0x400315:	mov	eax, 0
0x40031a:	call	0x500018
<Block for 0x40031f, 16 bytes>
0x40031f:	nop	
0x400320:	mov	rax, qword ptr [rbp - 8]
0x400324:	xor	rax, qword ptr fs:[0x28]
0x40032d:	je	0x400334
<Block for 0x400334, 2 bytes>
0x400334:	leave	
0x400335:	ret	
<Block for 0x40032f, 5 bytes>
0x40032f:	call	0x500010
