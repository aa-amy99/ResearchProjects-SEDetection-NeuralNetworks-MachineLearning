<Block for 0x4001eb, 30 bytes>
0x4001eb:	endbr64	
0x4001ef:	push	rbp
0x4001f0:	mov	rbp, rsp
0x4001f3:	sub	rsp, 0x10
0x4001f7:	mov	qword ptr [rbp - 0x10], 0
0x4001ff:	mov	eax, dword ptr [rip + 0x16b]
0x400205:	test	eax, eax
0x400207:	je	0x400217
<Block for 0x400217, 10 bytes>
0x400217:	mov	edi, 0x320
0x40021c:	call	0x500000
<Block for 0x400209, 12 bytes>
0x400209:	lea	rdi, [rip + 0x164]
0x400210:	call	0x500020
<Block for 0x400221, 11 bytes>
0x400221:	mov	qword ptr [rbp - 0x10], rax
0x400225:	cmp	qword ptr [rbp - 0x10], 0
0x40022a:	jne	0x400236
<Block for 0x400215, 2 bytes>
0x400215:	jmp	0x40027f
<Block for 0x40022c, 10 bytes>
0x40022c:	mov	edi, 0xffffffff
0x400231:	call	0x500008
<Block for 0x400236, 10 bytes>
0x400236:	mov	qword ptr [rbp - 8], 0
0x40023e:	jmp	0x400278
<Block for 0x40027f, 10 bytes>
0x40027f:	mov	eax, dword ptr [rip + 0xe7]
0x400285:	test	eax, eax
0x400287:	je	0x400295
<Block for 0x400278, 7 bytes>
0x400278:	cmp	qword ptr [rbp - 8], 0x63
0x40027d:	jbe	0x400240
<Block for 0x400295, 3 bytes>
0x400295:	nop	
0x400296:	leave	
0x400297:	ret	
<Block for 0x400289, 12 bytes>
0x400289:	mov	rax, qword ptr [rbp - 0x10]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500018
<Block for 0x400240, 63 bytes>
0x400240:	mov	rax, qword ptr [rbp - 8]
0x400244:	lea	rdx, [rax*8]
0x40024c:	mov	rax, qword ptr [rbp - 0x10]
0x400250:	add	rax, rdx
0x400253:	mov	dword ptr [rax], 1
0x400259:	mov	rax, qword ptr [rbp - 8]
0x40025d:	lea	rdx, [rax*8]
0x400265:	mov	rax, qword ptr [rbp - 0x10]
0x400269:	add	rax, rdx
0x40026c:	mov	dword ptr [rax + 4], 2
0x400273:	add	qword ptr [rbp - 8], 1
0x400278:	cmp	qword ptr [rbp - 8], 0x63
0x40027d:	jbe	0x400240
