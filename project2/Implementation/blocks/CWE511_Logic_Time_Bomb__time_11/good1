<Block for 0x400064, 37 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x10
0x400070:	mov	rax, qword ptr fs:[0x28]
0x400079:	mov	qword ptr [rbp - 8], rax
0x40007d:	xor	eax, eax
0x40007f:	mov	eax, 0
0x400084:	call	0x500020
<Block for 0x400089, 4 bytes>
0x400089:	test	eax, eax
0x40008b:	je	0x40009b
<Block for 0x40009b, 12 bytes>
0x40009b:	lea	rax, [rbp - 0x10]
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500008
<Block for 0x40008d, 12 bytes>
0x40008d:	lea	rdi, [rip + 0xd8]
0x400094:	call	0x500028
<Block for 0x4000a7, 12 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x10]
0x4000ab:	cmp	rax, 0x4779c8d0
0x4000b1:	jle	0x4000bf
<Block for 0x400099, 2 bytes>
0x400099:	jmp	0x4000bf
<Block for 0x4000bf, 16 bytes>
0x4000bf:	nop	
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	xor	rax, qword ptr fs:[0x28]
0x4000cd:	je	0x4000d4
<Block for 0x4000b3, 12 bytes>
0x4000b3:	lea	rdi, [rip + 0xc7]
0x4000ba:	call	0x500028
<Block for 0x4000d4, 2 bytes>
0x4000d4:	leave	
0x4000d5:	ret	
<Block for 0x4000cf, 5 bytes>
0x4000cf:	call	0x500018
