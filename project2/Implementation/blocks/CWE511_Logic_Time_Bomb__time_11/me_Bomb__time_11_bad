<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x40004d
<Block for 0x40004d, 16 bytes>
0x40004d:	nop	
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	xor	rax, qword ptr fs:[0x28]
0x40005b:	je	0x400062
<Block for 0x400029, 12 bytes>
0x400029:	lea	rax, [rbp - 0x10]
0x40002d:	mov	rdi, rax
0x400030:	call	0x500008
<Block for 0x400062, 2 bytes>
0x400062:	leave	
0x400063:	ret	
<Block for 0x40005d, 5 bytes>
0x40005d:	call	0x500018
<Block for 0x400035, 12 bytes>
0x400035:	mov	rax, qword ptr [rbp - 0x10]
0x400039:	cmp	rax, 0x4779c8d0
0x40003f:	jle	0x40004d
<Block for 0x400041, 12 bytes>
0x400041:	lea	rdi, [rip + 0x111]
0x400048:	call	0x500010
