<Block for 0x400145, 84 bytes>
0x400145:	endbr64	
0x400149:	push	rbp
0x40014a:	mov	rbp, rsp
0x40014d:	sub	rsp, 0xe0
0x400154:	mov	rax, qword ptr fs:[0x28]
0x40015d:	mov	qword ptr [rbp - 8], rax
0x400161:	xor	eax, eax
0x400163:	mov	eax, 0x10
0x400168:	sub	rax, 1
0x40016c:	add	rax, 0x6c
0x400170:	mov	ecx, 0x10
0x400175:	mov	edx, 0
0x40017a:	div	rcx
0x40017d:	imul	rax, rax, 0x10
0x400181:	mov	rdx, rax
0x400184:	and	rdx, 0xfffffffffffff000
0x40018b:	mov	rcx, rsp
0x40018e:	sub	rcx, rdx
0x400191:	mov	rdx, rcx
0x400194:	cmp	rsp, rdx
0x400197:	je	0x4001ab
<Block for 0x4001ab, 26 bytes>
0x4001ab:	mov	rdx, rax
0x4001ae:	and	edx, 0xfff
0x4001b4:	sub	rsp, rdx
0x4001b7:	mov	rdx, rax
0x4001ba:	and	edx, 0xfff
0x4001c0:	test	rdx, rdx
0x4001c3:	je	0x4001d5
<Block for 0x400199, 18 bytes>
0x400199:	sub	rsp, 0x1000
0x4001a0:	or	qword ptr [rsp + 0xff8], 0
0x4001a9:	jmp	0x400194
<Block for 0x4001d5, 47 bytes>
0x4001d5:	mov	rax, rsp
0x4001d8:	add	rax, 0xf
0x4001dc:	shr	rax, 4
0x4001e0:	shl	rax, 4
0x4001e4:	mov	qword ptr [rbp - 0xd8], rax
0x4001eb:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f2:	mov	edx, 0x63
0x4001f7:	mov	esi, 0x41
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500000
<Block for 0x4001c5, 63 bytes>
0x4001c5:	and	eax, 0xfff
0x4001ca:	sub	rax, 8
0x4001ce:	add	rax, rsp
0x4001d1:	or	qword ptr [rax], 0
0x4001d5:	mov	rax, rsp
0x4001d8:	add	rax, 0xf
0x4001dc:	shr	rax, 4
0x4001e0:	shl	rax, 4
0x4001e4:	mov	qword ptr [rbp - 0xd8], rax
0x4001eb:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f2:	mov	edx, 0x63
0x4001f7:	mov	esi, 0x41
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500000
<Block for 0x400194, 5 bytes>
0x400194:	cmp	rsp, rdx
0x400197:	je	0x4001ab
<Block for 0x400204, 24 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0xd8]
0x40020b:	add	rax, 0x63
0x40020f:	mov	byte ptr [rax], 0
0x400212:	mov	eax, 5
0x400217:	cmp	eax, 5
0x40021a:	je	0x40022a
<Block for 0x40022a, 39 bytes>
0x40022a:	mov	rax, qword ptr [rbp - 0xd8]
0x400231:	mov	qword ptr [rbp - 0xe0], rax
0x400238:	lea	rax, [rbp - 0xd0]
0x40023f:	mov	edx, 0xc7
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x40021c, 12 bytes>
0x40021c:	lea	rdi, [rip + 0x1d5]
0x400223:	call	0x500010
<Block for 0x400251, 29 bytes>
0x400251:	mov	byte ptr [rbp - 9], 0
0x400255:	mov	rdx, qword ptr [rbp - 0xe0]
0x40025c:	lea	rax, [rbp - 0xd0]
0x400263:	mov	rsi, rdx
0x400266:	mov	rdi, rax
0x400269:	call	0x500008
<Block for 0x400228, 2 bytes>
0x400228:	jmp	0x400238
<Block for 0x40026e, 15 bytes>
0x40026e:	lea	rax, [rbp - 0xd0]
0x400275:	mov	rdi, rax
0x400278:	call	0x500010
<Block for 0x400238, 25 bytes>
0x400238:	lea	rax, [rbp - 0xd0]
0x40023f:	mov	edx, 0xc7
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500018
