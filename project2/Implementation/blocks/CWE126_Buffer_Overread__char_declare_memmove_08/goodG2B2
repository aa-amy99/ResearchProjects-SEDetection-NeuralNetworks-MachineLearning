<Block for 0x4001e6, 55 bytes>
0x4001e6:	endbr64	
0x4001ea:	push	rbp
0x4001eb:	mov	rbp, rsp
0x4001ee:	sub	rsp, 0x130
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	xor	eax, eax
0x400204:	lea	rax, [rbp - 0x120]
0x40020b:	mov	edx, 0x31
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x40021d, 32 bytes>
0x40021d:	mov	byte ptr [rbp - 0xef], 0
0x400224:	lea	rax, [rbp - 0xe0]
0x40022b:	mov	edx, 0x63
0x400230:	mov	esi, 0x41
0x400235:	mov	rdi, rax
0x400238:	call	0x500000
<Block for 0x40023d, 14 bytes>
0x40023d:	mov	byte ptr [rbp - 0x7d], 0
0x400241:	mov	eax, 0
0x400246:	call	0x400000
<Block for 0x40024b, 4 bytes>
0x40024b:	test	eax, eax
0x40024d:	je	0x40025d
<Block for 0x40025d, 22 bytes>
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	edx, 0x63
0x400266:	mov	esi, 0x43
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500000
<Block for 0x40024f, 36 bytes>
0x40024f:	lea	rax, [rbp - 0xe0]
0x400256:	mov	qword ptr [rbp - 0x128], rax
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	edx, 0x63
0x400266:	mov	esi, 0x43
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500000
<Block for 0x400273, 16 bytes>
0x400273:	mov	byte ptr [rbp - 0xd], 0
0x400277:	lea	rax, [rbp - 0x70]
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500008
<Block for 0x400283, 25 bytes>
0x400283:	mov	rdx, rax
0x400286:	mov	rcx, qword ptr [rbp - 0x128]
0x40028d:	lea	rax, [rbp - 0x70]
0x400291:	mov	rsi, rcx
0x400294:	mov	rdi, rax
0x400297:	call	0x500010
<Block for 0x40029c, 16 bytes>
0x40029c:	mov	byte ptr [rbp - 0xd], 0
0x4002a0:	lea	rax, [rbp - 0x70]
0x4002a4:	mov	rdi, rax
0x4002a7:	call	0x500018
<Block for 0x4002ac, 16 bytes>
0x4002ac:	nop	
0x4002ad:	mov	rax, qword ptr [rbp - 8]
0x4002b1:	xor	rax, qword ptr fs:[0x28]
0x4002ba:	je	0x4002c1
<Block for 0x4002c1, 2 bytes>
0x4002c1:	leave	
0x4002c2:	ret	
<Block for 0x4002bc, 5 bytes>
0x4002bc:	call	0x500020
