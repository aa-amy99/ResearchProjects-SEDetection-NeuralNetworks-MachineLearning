<Block for 0x4003a3, 150 bytes>
0x4003a3:	endbr64	
0x4003a7:	push	rbp
0x4003a8:	mov	rbp, rsp
0x4003ab:	add	rsp, -0x80
0x4003af:	mov	rax, qword ptr fs:[0x28]
0x4003b8:	mov	qword ptr [rbp - 8], rax
0x4003bc:	xor	eax, eax
0x4003be:	mov	qword ptr [rbp - 0x70], 0
0x4003c6:	mov	qword ptr [rbp - 0x68], 0
0x4003ce:	mov	qword ptr [rbp - 0x60], 0
0x4003d6:	mov	qword ptr [rbp - 0x58], 0
0x4003de:	mov	qword ptr [rbp - 0x50], 0
0x4003e6:	mov	qword ptr [rbp - 0x48], 0
0x4003ee:	mov	qword ptr [rbp - 0x40], 0
0x4003f6:	mov	qword ptr [rbp - 0x38], 0
0x4003fe:	mov	qword ptr [rbp - 0x30], 0
0x400406:	mov	qword ptr [rbp - 0x28], 0
0x40040e:	mov	qword ptr [rbp - 0x20], 0
0x400416:	mov	qword ptr [rbp - 0x18], 0
0x40041e:	mov	dword ptr [rbp - 0x10], 0
0x400425:	lea	rax, [rbp - 0x70]
0x400429:	mov	qword ptr [rbp - 0x80], rax
0x40042d:	mov	rax, qword ptr [rbp - 0x80]
0x400431:	mov	rdi, rax
0x400434:	call	0x500018
<Block for 0x400439, 23 bytes>
0x400439:	mov	qword ptr [rbp - 0x78], rax
0x40043d:	mov	eax, 0x64
0x400442:	sub	rax, qword ptr [rbp - 0x78]
0x400446:	cmp	rax, 1
0x40044a:	jbe	0x4004dc
<Block for 0x4004dc, 12 bytes>
0x4004dc:	mov	rax, qword ptr [rbp - 0x80]
0x4004e0:	mov	rdi, rax
0x4004e3:	call	0x400318
<Block for 0x400450, 44 bytes>
0x400450:	mov	rax, qword ptr [rip + 0xffbc9]
0x400457:	mov	rdx, qword ptr [rbp - 0x78]
0x40045b:	mov	ecx, 0x64
0x400460:	sub	ecx, edx
0x400462:	mov	edx, ecx
0x400464:	mov	esi, edx
0x400466:	mov	rcx, qword ptr [rbp - 0x80]
0x40046a:	mov	rdx, qword ptr [rbp - 0x78]
0x40046e:	add	rcx, rdx
0x400471:	mov	rdx, rax
0x400474:	mov	rdi, rcx
0x400477:	call	0x500028
<Block for 0x4004e8, 16 bytes>
0x4004e8:	nop	
0x4004e9:	mov	rax, qword ptr [rbp - 8]
0x4004ed:	xor	rax, qword ptr fs:[0x28]
0x4004f6:	je	0x4004fd
<Block for 0x40047c, 5 bytes>
0x40047c:	test	rax, rax
0x40047f:	je	0x4004c2
<Block for 0x4004fd, 2 bytes>
0x4004fd:	leave	
0x4004fe:	ret	
<Block for 0x4004f8, 5 bytes>
0x4004f8:	call	0x500010
<Block for 0x4004c2, 12 bytes>
0x4004c2:	lea	rdi, [rip + 0x58]
0x4004c9:	call	0x500030
<Block for 0x400481, 12 bytes>
0x400481:	mov	rax, qword ptr [rbp - 0x80]
0x400485:	mov	rdi, rax
0x400488:	call	0x500018
<Block for 0x4004ce, 26 bytes>
0x4004ce:	mov	rdx, qword ptr [rbp - 0x80]
0x4004d2:	mov	rax, qword ptr [rbp - 0x78]
0x4004d6:	add	rax, rdx
0x4004d9:	mov	byte ptr [rax], 0
0x4004dc:	mov	rax, qword ptr [rbp - 0x80]
0x4004e0:	mov	rdi, rax
0x4004e3:	call	0x400318
<Block for 0x40048d, 11 bytes>
0x40048d:	mov	qword ptr [rbp - 0x78], rax
0x400491:	cmp	qword ptr [rbp - 0x78], 0
0x400496:	je	0x4004dc
<Block for 0x400498, 22 bytes>
0x400498:	mov	rax, qword ptr [rbp - 0x78]
0x40049c:	lea	rdx, [rax - 1]
0x4004a0:	mov	rax, qword ptr [rbp - 0x80]
0x4004a4:	add	rax, rdx
0x4004a7:	movzx	eax, byte ptr [rax]
0x4004aa:	cmp	al, 0xa
0x4004ac:	jne	0x4004dc
<Block for 0x4004ae, 20 bytes>
0x4004ae:	mov	rax, qword ptr [rbp - 0x78]
0x4004b2:	lea	rdx, [rax - 1]
0x4004b6:	mov	rax, qword ptr [rbp - 0x80]
0x4004ba:	add	rax, rdx
0x4004bd:	mov	byte ptr [rax], 0
0x4004c0:	jmp	0x4004dc
