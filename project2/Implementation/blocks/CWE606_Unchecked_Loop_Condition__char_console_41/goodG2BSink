<Block for 0x4001dd, 59 bytes>
0x4001dd:	endbr64	
0x4001e1:	push	rbp
0x4001e2:	mov	rbp, rsp
0x4001e5:	sub	rsp, 0x30
0x4001e9:	mov	qword ptr [rbp - 0x28], rdi
0x4001ed:	mov	rax, qword ptr fs:[0x28]
0x4001f6:	mov	qword ptr [rbp - 8], rax
0x4001fa:	xor	eax, eax
0x4001fc:	lea	rdx, [rbp - 0x14]
0x400200:	mov	rax, qword ptr [rbp - 0x28]
0x400204:	lea	rsi, [rip + 0x313]
0x40020b:	mov	rdi, rax
0x40020e:	mov	eax, 0
0x400213:	call	0x500000
<Block for 0x400218, 5 bytes>
0x400218:	cmp	eax, 1
0x40021b:	jne	0x400247
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	dword ptr [rbp - 0xc], 0
0x400224:	mov	dword ptr [rbp - 0x10], 0
0x40022b:	jmp	0x400235
<Block for 0x400247, 16 bytes>
0x400247:	nop	
0x400248:	mov	rax, qword ptr [rbp - 8]
0x40024c:	xor	rax, qword ptr fs:[0x28]
0x400255:	je	0x40025c
<Block for 0x400235, 8 bytes>
0x400235:	mov	eax, dword ptr [rbp - 0x14]
0x400238:	cmp	dword ptr [rbp - 0x10], eax
0x40023b:	jl	0x40022d
<Block for 0x40025c, 2 bytes>
0x40025c:	leave	
0x40025d:	ret	
<Block for 0x400257, 5 bytes>
0x400257:	call	0x500010
<Block for 0x40022d, 16 bytes>
0x40022d:	add	dword ptr [rbp - 0xc], 1
0x400231:	add	dword ptr [rbp - 0x10], 1
0x400235:	mov	eax, dword ptr [rbp - 0x14]
0x400238:	cmp	dword ptr [rbp - 0x10], eax
0x40023b:	jl	0x40022d
<Block for 0x40023d, 10 bytes>
0x40023d:	mov	eax, dword ptr [rbp - 0xc]
0x400240:	mov	edi, eax
0x400242:	call	0x500008
