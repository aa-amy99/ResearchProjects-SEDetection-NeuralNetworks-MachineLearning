<Block for 0x400081, 150 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	add	rsp, -0x80
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	mov	qword ptr [rbp - 0x70], 0
0x4000a4:	mov	qword ptr [rbp - 0x68], 0
0x4000ac:	mov	qword ptr [rbp - 0x60], 0
0x4000b4:	mov	qword ptr [rbp - 0x58], 0
0x4000bc:	mov	qword ptr [rbp - 0x50], 0
0x4000c4:	mov	qword ptr [rbp - 0x48], 0
0x4000cc:	mov	qword ptr [rbp - 0x40], 0
0x4000d4:	mov	qword ptr [rbp - 0x38], 0
0x4000dc:	mov	qword ptr [rbp - 0x30], 0
0x4000e4:	mov	qword ptr [rbp - 0x28], 0
0x4000ec:	mov	qword ptr [rbp - 0x20], 0
0x4000f4:	mov	qword ptr [rbp - 0x18], 0
0x4000fc:	mov	dword ptr [rbp - 0x10], 0
0x400103:	lea	rax, [rbp - 0x70]
0x400107:	mov	qword ptr [rbp - 0x80], rax
0x40010b:	mov	rax, qword ptr [rbp - 0x80]
0x40010f:	mov	rdi, rax
0x400112:	call	0x500018
<Block for 0x400117, 23 bytes>
0x400117:	mov	qword ptr [rbp - 0x78], rax
0x40011b:	mov	eax, 0x64
0x400120:	sub	rax, qword ptr [rbp - 0x78]
0x400124:	cmp	rax, 1
0x400128:	jbe	0x4001ba
<Block for 0x4001ba, 12 bytes>
0x4001ba:	mov	rax, qword ptr [rbp - 0x80]
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x400000
<Block for 0x40012e, 44 bytes>
0x40012e:	mov	rax, qword ptr [rip + 0xffeeb]
0x400135:	mov	rdx, qword ptr [rbp - 0x78]
0x400139:	mov	ecx, 0x64
0x40013e:	sub	ecx, edx
0x400140:	mov	edx, ecx
0x400142:	mov	esi, edx
0x400144:	mov	rcx, qword ptr [rbp - 0x80]
0x400148:	mov	rdx, qword ptr [rbp - 0x78]
0x40014c:	add	rcx, rdx
0x40014f:	mov	rdx, rax
0x400152:	mov	rdi, rcx
0x400155:	call	0x500028
<Block for 0x4001c6, 16 bytes>
0x4001c6:	nop	
0x4001c7:	mov	rax, qword ptr [rbp - 8]
0x4001cb:	xor	rax, qword ptr fs:[0x28]
0x4001d4:	je	0x4001db
<Block for 0x40015a, 5 bytes>
0x40015a:	test	rax, rax
0x40015d:	je	0x4001a0
<Block for 0x4001db, 2 bytes>
0x4001db:	leave	
0x4001dc:	ret	
<Block for 0x4001d6, 5 bytes>
0x4001d6:	call	0x500010
<Block for 0x4001a0, 12 bytes>
0x4001a0:	lea	rdi, [rip + 0x37a]
0x4001a7:	call	0x500030
<Block for 0x40015f, 12 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x4001ac, 26 bytes>
0x4001ac:	mov	rdx, qword ptr [rbp - 0x80]
0x4001b0:	mov	rax, qword ptr [rbp - 0x78]
0x4001b4:	add	rax, rdx
0x4001b7:	mov	byte ptr [rax], 0
0x4001ba:	mov	rax, qword ptr [rbp - 0x80]
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x400000
<Block for 0x40016b, 11 bytes>
0x40016b:	mov	qword ptr [rbp - 0x78], rax
0x40016f:	cmp	qword ptr [rbp - 0x78], 0
0x400174:	je	0x4001ba
<Block for 0x400176, 22 bytes>
0x400176:	mov	rax, qword ptr [rbp - 0x78]
0x40017a:	lea	rdx, [rax - 1]
0x40017e:	mov	rax, qword ptr [rbp - 0x80]
0x400182:	add	rax, rdx
0x400185:	movzx	eax, byte ptr [rax]
0x400188:	cmp	al, 0xa
0x40018a:	jne	0x4001ba
<Block for 0x40018c, 20 bytes>
0x40018c:	mov	rax, qword ptr [rbp - 0x78]
0x400190:	lea	rdx, [rax - 1]
0x400194:	mov	rax, qword ptr [rbp - 0x80]
0x400198:	add	rax, rdx
0x40019b:	mov	byte ptr [rax], 0
0x40019e:	jmp	0x4001ba
