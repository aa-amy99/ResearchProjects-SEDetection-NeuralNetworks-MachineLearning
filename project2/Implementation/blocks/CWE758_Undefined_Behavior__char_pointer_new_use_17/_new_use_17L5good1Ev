<Block for 0x40005d, 25 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	sub	rsp, 0x20
0x400069:	mov	dword ptr [rbp - 0x1c], 0
0x400070:	cmp	dword ptr [rbp - 0x1c], 0
0x400074:	jg	0x4000cd
<Block for 0x400076, 21 bytes>
0x400076:	lea	rax, [rip + 0x63]
0x40007d:	mov	qword ptr [rbp - 0x18], rax
0x400081:	mov	edi, 8
0x400086:	call	0x500000
<Block for 0x4000cd, 3 bytes>
0x4000cd:	nop	
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x40008b, 38 bytes>
0x40008b:	mov	qword ptr [rbp - 0x10], rax
0x40008f:	mov	rax, qword ptr [rbp - 0x10]
0x400093:	mov	rdx, qword ptr [rbp - 0x18]
0x400097:	mov	qword ptr [rax], rdx
0x40009a:	mov	rax, qword ptr [rbp - 0x10]
0x40009e:	mov	rax, qword ptr [rax]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500010
<Block for 0x4000b1, 9 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 0x10]
0x4000b5:	test	rax, rax
0x4000b8:	je	0x4000c7
<Block for 0x4000c7, 6 bytes>
0x4000c7:	add	dword ptr [rbp - 0x1c], 1
0x4000cb:	jmp	0x400070
<Block for 0x4000ba, 13 bytes>
0x4000ba:	mov	esi, 8
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500008
<Block for 0x400070, 6 bytes>
0x400070:	cmp	dword ptr [rbp - 0x1c], 0
0x400074:	jg	0x4000cd
