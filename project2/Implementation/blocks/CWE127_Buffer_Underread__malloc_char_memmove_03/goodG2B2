<Block for 0x40018c, 45 bytes>
0x40018c:	endbr64	
0x400190:	push	rbp
0x400191:	mov	rbp, rsp
0x400194:	add	rsp, -0x80
0x400198:	mov	rax, qword ptr fs:[0x28]
0x4001a1:	mov	qword ptr [rbp - 8], rax
0x4001a5:	xor	eax, eax
0x4001a7:	mov	qword ptr [rbp - 0x80], 0
0x4001af:	mov	edi, 0x64
0x4001b4:	call	0x500000
<Block for 0x4001b9, 11 bytes>
0x4001b9:	mov	qword ptr [rbp - 0x78], rax
0x4001bd:	cmp	qword ptr [rbp - 0x78], 0
0x4001c2:	jne	0x4001ce
<Block for 0x4001c4, 10 bytes>
0x4001c4:	mov	edi, 0xffffffff
0x4001c9:	call	0x500008
<Block for 0x4001ce, 22 bytes>
0x4001ce:	mov	rax, qword ptr [rbp - 0x78]
0x4001d2:	mov	edx, 0x63
0x4001d7:	mov	esi, 0x41
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500010
<Block for 0x4001e4, 41 bytes>
0x4001e4:	mov	rax, qword ptr [rbp - 0x78]
0x4001e8:	add	rax, 0x63
0x4001ec:	mov	byte ptr [rax], 0
0x4001ef:	mov	rax, qword ptr [rbp - 0x78]
0x4001f3:	mov	qword ptr [rbp - 0x80], rax
0x4001f7:	lea	rax, [rbp - 0x70]
0x4001fb:	mov	edx, 0x63
0x400200:	mov	esi, 0x43
0x400205:	mov	rdi, rax
0x400208:	call	0x500010
<Block for 0x40020d, 28 bytes>
0x40020d:	mov	byte ptr [rbp - 0xd], 0
0x400211:	mov	rcx, qword ptr [rbp - 0x80]
0x400215:	lea	rax, [rbp - 0x70]
0x400219:	mov	edx, 0x64
0x40021e:	mov	rsi, rcx
0x400221:	mov	rdi, rax
0x400224:	call	0x500018
<Block for 0x400229, 16 bytes>
0x400229:	mov	byte ptr [rbp - 0xd], 0
0x40022d:	lea	rax, [rbp - 0x70]
0x400231:	mov	rdi, rax
0x400234:	call	0x500020
<Block for 0x400239, 16 bytes>
0x400239:	nop	
0x40023a:	mov	rax, qword ptr [rbp - 8]
0x40023e:	xor	rax, qword ptr fs:[0x28]
0x400247:	je	0x40024e
<Block for 0x40024e, 2 bytes>
0x40024e:	leave	
0x40024f:	ret	
<Block for 0x400249, 5 bytes>
0x400249:	call	0x500028
