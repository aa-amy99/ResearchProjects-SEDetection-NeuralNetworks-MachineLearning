<Block for 0x4001a1, 82 bytes>
0x4001a1:	endbr64	
0x4001a5:	push	rbp
0x4001a6:	mov	rbp, rsp
0x4001a9:	sub	rsp, 0x130
0x4001b0:	mov	rax, qword ptr fs:[0x28]
0x4001b9:	mov	qword ptr [rbp - 8], rax
0x4001bd:	xor	eax, eax
0x4001bf:	movabs	rax, 0x3d48544150
0x4001c9:	mov	edx, 0
0x4001ce:	mov	qword ptr [rbp - 0x110], rax
0x4001d5:	mov	qword ptr [rbp - 0x108], rdx
0x4001dc:	lea	rdx, [rbp - 0x100]
0x4001e3:	mov	eax, 0
0x4001e8:	mov	ecx, 0x1d
0x4001ed:	mov	rdi, rdx
0x4001f0:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001f3, 51 bytes>
0x4001f3:	mov	rdx, rdi
0x4001f6:	mov	word ptr [rdx], ax
0x4001f9:	add	rdx, 2
0x4001fd:	lea	rax, [rbp - 0x110]
0x400204:	mov	qword ptr [rbp - 0x120], rax
0x40020b:	mov	rax, qword ptr [rbp - 0x120]
0x400212:	mov	rcx, -1
0x400219:	mov	rdx, rax
0x40021c:	mov	eax, 0
0x400221:	mov	rdi, rdx
0x400224:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001f0, 3 bytes>
0x4001f0:	rep stosq	qword ptr [rdi], rax
<Block for 0x400226, 93 bytes>
0x400226:	mov	rax, rcx
0x400229:	not	rax
0x40022c:	lea	rdx, [rax - 1]
0x400230:	mov	rax, qword ptr [rbp - 0x120]
0x400237:	add	rax, rdx
0x40023a:	mov	dword ptr [rax], 0x6e69622f
0x400240:	mov	byte ptr [rax + 4], 0
0x400244:	lea	rax, [rip + 0xffdf5]
0x40024b:	mov	qword ptr [rbp - 0x128], rax
0x400252:	lea	rax, [rbp - 0x128]
0x400259:	mov	qword ptr [rbp - 0x118], rax
0x400260:	mov	rax, qword ptr [rbp - 0x118]
0x400267:	mov	rax, qword ptr [rax]
0x40026a:	mov	rcx, qword ptr [rax]
0x40026d:	mov	rdx, qword ptr [rbp - 0x120]
0x400274:	mov	rax, qword ptr [rbp - 0x118]
0x40027b:	mov	rsi, rdx
0x40027e:	mov	rdi, rax
0x400281:	call	rcx
<Block for 0x400224, 2 bytes>
0x400224:	repne scasb	al, byte ptr [rdi]
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500028
