<Block for 0x400122, 81 bytes>
0x400122:	endbr64	
0x400126:	push	rbp
0x400127:	mov	rbp, rsp
0x40012a:	add	rsp, -0x80
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	mov	eax, 0x10
0x400142:	sub	rax, 1
0x400146:	add	rax, 0x6c
0x40014a:	mov	ecx, 0x10
0x40014f:	mov	edx, 0
0x400154:	div	rcx
0x400157:	imul	rax, rax, 0x10
0x40015b:	mov	rdx, rax
0x40015e:	and	rdx, 0xfffffffffffff000
0x400165:	mov	rcx, rsp
0x400168:	sub	rcx, rdx
0x40016b:	mov	rdx, rcx
0x40016e:	cmp	rsp, rdx
0x400171:	je	0x400185
<Block for 0x400185, 26 bytes>
0x400185:	mov	rdx, rax
0x400188:	and	edx, 0xfff
0x40018e:	sub	rsp, rdx
0x400191:	mov	rdx, rax
0x400194:	and	edx, 0xfff
0x40019a:	test	rdx, rdx
0x40019d:	je	0x4001af
<Block for 0x400173, 18 bytes>
0x400173:	sub	rsp, 0x1000
0x40017a:	or	qword ptr [rsp + 0xff8], 0
0x400183:	jmp	0x40016e
<Block for 0x4001af, 41 bytes>
0x4001af:	mov	rax, rsp
0x4001b2:	add	rax, 0xf
0x4001b6:	shr	rax, 4
0x4001ba:	shl	rax, 4
0x4001be:	mov	qword ptr [rbp - 0x80], rax
0x4001c2:	mov	rax, qword ptr [rbp - 0x80]
0x4001c6:	mov	edx, 0x63
0x4001cb:	mov	esi, 0x41
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500000
<Block for 0x40019f, 57 bytes>
0x40019f:	and	eax, 0xfff
0x4001a4:	sub	rax, 8
0x4001a8:	add	rax, rsp
0x4001ab:	or	qword ptr [rax], 0
0x4001af:	mov	rax, rsp
0x4001b2:	add	rax, 0xf
0x4001b6:	shr	rax, 4
0x4001ba:	shl	rax, 4
0x4001be:	mov	qword ptr [rbp - 0x80], rax
0x4001c2:	mov	rax, qword ptr [rbp - 0x80]
0x4001c6:	mov	edx, 0x63
0x4001cb:	mov	esi, 0x41
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500000
<Block for 0x40016e, 5 bytes>
0x40016e:	cmp	rsp, rdx
0x400171:	je	0x400185
<Block for 0x4001d8, 46 bytes>
0x4001d8:	mov	rax, qword ptr [rbp - 0x80]
0x4001dc:	add	rax, 0x63
0x4001e0:	mov	byte ptr [rax], 0
0x4001e3:	nop	
0x4001e4:	endbr64	
0x4001e8:	mov	rax, qword ptr [rbp - 0x80]
0x4001ec:	mov	qword ptr [rbp - 0x78], rax
0x4001f0:	lea	rax, [rbp - 0x70]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x43
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500000
<Block for 0x400206, 23 bytes>
0x400206:	mov	byte ptr [rbp - 0xd], 0
0x40020a:	lea	rdx, [rbp - 0x70]
0x40020e:	mov	rax, qword ptr [rbp - 0x78]
0x400212:	mov	rsi, rdx
0x400215:	mov	rdi, rax
0x400218:	call	0x500008
<Block for 0x40021d, 12 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x78]
0x400221:	mov	rdi, rax
0x400224:	call	0x500010
<Block for 0x400229, 16 bytes>
0x400229:	nop	
0x40022a:	mov	rax, qword ptr [rbp - 8]
0x40022e:	xor	rax, qword ptr fs:[0x28]
0x400237:	je	0x40023e
<Block for 0x40023e, 2 bytes>
0x40023e:	leave	
0x40023f:	ret	
<Block for 0x400239, 5 bytes>
0x400239:	call	0x500018
