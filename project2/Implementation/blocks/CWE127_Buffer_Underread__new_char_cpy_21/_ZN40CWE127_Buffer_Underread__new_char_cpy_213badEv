<Block for 0x40005b, 66 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0xe0
0x40006a:	mov	rax, qword ptr fs:[0x28]
0x400073:	mov	qword ptr [rbp - 8], rax
0x400077:	xor	eax, eax
0x400079:	mov	qword ptr [rbp - 0xd8], 0
0x400084:	mov	dword ptr [rip + 0x28e], 1
0x40008e:	mov	rax, qword ptr [rbp - 0xd8]
0x400095:	mov	rdi, rax
0x400098:	call	0x400000
<Block for 0x40009d, 32 bytes>
0x40009d:	mov	qword ptr [rbp - 0xd8], rax
0x4000a4:	lea	rax, [rbp - 0xd0]
0x4000ab:	mov	edx, 0xc7
0x4000b0:	mov	esi, 0x43
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500008
<Block for 0x4000bd, 29 bytes>
0x4000bd:	mov	byte ptr [rbp - 9], 0
0x4000c1:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000c8:	lea	rax, [rbp - 0xd0]
0x4000cf:	mov	rsi, rdx
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500010
<Block for 0x4000da, 15 bytes>
0x4000da:	lea	rax, [rbp - 0xd0]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x4000e9, 16 bytes>
0x4000e9:	nop	
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	xor	rax, qword ptr fs:[0x28]
0x4000f7:	je	0x4000fe
<Block for 0x4000fe, 2 bytes>
0x4000fe:	leave	
0x4000ff:	ret	
<Block for 0x4000f9, 5 bytes>
0x4000f9:	call	0x500020
