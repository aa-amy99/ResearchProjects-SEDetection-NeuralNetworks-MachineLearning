<Block for 0x4001cb, 76 bytes>
0x4001cb:	endbr64	
0x4001cf:	push	rbp
0x4001d0:	mov	rbp, rsp
0x4001d3:	sub	rsp, 0x50
0x4001d7:	mov	dword ptr [rbp - 0x44], edi
0x4001da:	mov	rax, qword ptr fs:[0x28]
0x4001e3:	mov	qword ptr [rbp - 8], rax
0x4001e7:	xor	eax, eax
0x4001e9:	mov	qword ptr [rbp - 0x30], 0
0x4001f1:	mov	qword ptr [rbp - 0x28], 0
0x4001f9:	mov	qword ptr [rbp - 0x20], 0
0x400201:	mov	qword ptr [rbp - 0x18], 0
0x400209:	mov	qword ptr [rbp - 0x10], 0
0x400211:	cmp	dword ptr [rbp - 0x44], 0
0x400215:	js	0x40024f
<Block for 0x40024f, 12 bytes>
0x40024f:	lea	rdi, [rip + 0xca]
0x400256:	call	0x500008
<Block for 0x400217, 6 bytes>
0x400217:	cmp	dword ptr [rbp - 0x44], 9
0x40021b:	jg	0x40024f
<Block for 0x40025b, 16 bytes>
0x40025b:	nop	
0x40025c:	mov	rax, qword ptr [rbp - 8]
0x400260:	xor	rax, qword ptr fs:[0x28]
0x400269:	je	0x400270
<Block for 0x40021d, 22 bytes>
0x40021d:	mov	eax, dword ptr [rbp - 0x44]
0x400220:	cdqe	
0x400222:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40022a:	mov	dword ptr [rbp - 0x34], 0
0x400231:	jmp	0x400247
<Block for 0x400270, 2 bytes>
0x400270:	leave	
0x400271:	ret	
<Block for 0x40026b, 5 bytes>
0x40026b:	call	0x500010
<Block for 0x400247, 6 bytes>
0x400247:	cmp	dword ptr [rbp - 0x34], 9
0x40024b:	jle	0x400233
<Block for 0x400233, 16 bytes>
0x400233:	mov	eax, dword ptr [rbp - 0x34]
0x400236:	cdqe	
0x400238:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40023c:	mov	edi, eax
0x40023e:	call	0x500000
<Block for 0x40024d, 2 bytes>
0x40024d:	jmp	0x40025b
<Block for 0x400243, 10 bytes>
0x400243:	add	dword ptr [rbp - 0x34], 1
0x400247:	cmp	dword ptr [rbp - 0x34], 9
0x40024b:	jle	0x400233
