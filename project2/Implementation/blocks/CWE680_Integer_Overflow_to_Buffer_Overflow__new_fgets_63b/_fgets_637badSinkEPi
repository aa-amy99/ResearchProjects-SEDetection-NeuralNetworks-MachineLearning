<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	rax, qword ptr [rbp - 0x28]
0x400014:	mov	eax, dword ptr [rax]
0x400016:	mov	dword ptr [rbp - 0x1c], eax
0x400019:	mov	eax, dword ptr [rbp - 0x1c]
0x40001c:	cdqe	
0x40001e:	shl	rax, 2
0x400022:	mov	qword ptr [rbp - 0x10], rax
0x400026:	mov	rax, qword ptr [rbp - 0x10]
0x40002a:	mov	rdi, rax
0x40002d:	call	0x500000
<Block for 0x400032, 23 bytes>
0x400032:	mov	qword ptr [rbp - 8], rax
0x400036:	mov	qword ptr [rbp - 0x18], 0
0x40003e:	mov	eax, dword ptr [rbp - 0x1c]
0x400041:	cdqe	
0x400043:	cmp	qword ptr [rbp - 0x18], rax
0x400047:	jae	0x400069
<Block for 0x400049, 32 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x18]
0x40004d:	lea	rdx, [rax*4]
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	add	rax, rdx
0x40005c:	mov	dword ptr [rax], 0
0x400062:	add	qword ptr [rbp - 0x18], 1
0x400067:	jmp	0x40003e
<Block for 0x400069, 13 bytes>
0x400069:	mov	rax, qword ptr [rbp - 8]
0x40006d:	mov	eax, dword ptr [rax]
0x40006f:	mov	edi, eax
0x400071:	call	0x500008
<Block for 0x40003e, 11 bytes>
0x40003e:	mov	eax, dword ptr [rbp - 0x1c]
0x400041:	cdqe	
0x400043:	cmp	qword ptr [rbp - 0x18], rax
0x400047:	jae	0x400069
<Block for 0x400076, 7 bytes>
0x400076:	cmp	qword ptr [rbp - 8], 0
0x40007b:	je	0x400089
<Block for 0x400089, 3 bytes>
0x400089:	nop	
0x40008a:	leave	
0x40008b:	ret	
<Block for 0x40007d, 12 bytes>
0x40007d:	mov	rax, qword ptr [rbp - 8]
0x400081:	mov	rdi, rax
0x400084:	call	0x500010
