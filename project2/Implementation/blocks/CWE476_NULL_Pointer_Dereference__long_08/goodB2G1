<Block for 0x400060, 22 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x10
0x40006c:	mov	eax, 0
0x400071:	call	0x400000
<Block for 0x400076, 4 bytes>
0x400076:	test	eax, eax
0x400078:	je	0x400082
<Block for 0x400082, 10 bytes>
0x400082:	mov	eax, 0
0x400087:	call	0x40000f
<Block for 0x40007a, 18 bytes>
0x40007a:	mov	qword ptr [rbp - 8], 0
0x400082:	mov	eax, 0
0x400087:	call	0x40000f
<Block for 0x40008c, 4 bytes>
0x40008c:	test	eax, eax
0x40008e:	je	0x40009e
<Block for 0x40009e, 7 bytes>
0x40009e:	cmp	qword ptr [rbp - 8], 0
0x4000a3:	je	0x4000b6
<Block for 0x400090, 12 bytes>
0x400090:	lea	rdi, [rip + 0x1a0]
0x400097:	call	0x500008
<Block for 0x4000b6, 12 bytes>
0x4000b6:	lea	rdi, [rip + 0x18f]
0x4000bd:	call	0x500008
<Block for 0x4000a5, 15 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	rax, qword ptr [rax]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500000
<Block for 0x40009c, 2 bytes>
0x40009c:	jmp	0x4000c2
<Block for 0x4000c2, 3 bytes>
0x4000c2:	nop	
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x4000b4, 2 bytes>
0x4000b4:	jmp	0x4000c2
