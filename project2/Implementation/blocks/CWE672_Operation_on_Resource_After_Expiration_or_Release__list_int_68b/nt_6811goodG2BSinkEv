<Block for 0x40014a, 47 bytes>
0x40014a:	endbr64	
0x40014e:	push	rbp
0x40014f:	mov	rbp, rsp
0x400152:	push	rbx
0x400153:	sub	rsp, 0x38
0x400157:	mov	rax, qword ptr fs:[0x28]
0x400160:	mov	qword ptr [rbp - 0x18], rax
0x400164:	xor	eax, eax
0x400166:	lea	rax, [rbp - 0x30]
0x40016a:	lea	rsi, [rip + 0xffed7]
0x400171:	mov	rdi, rax
0x400174:	call	0x400512
<Block for 0x400179, 12 bytes>
0x400179:	lea	rax, [rbp - 0x40]
0x40017d:	mov	rdi, rax
0x400180:	call	0x40062a
<Block for 0x400185, 19 bytes>
0x400185:	lea	rsi, [rip + 0x2aa]
0x40018c:	lea	rdi, [rip + 0xffe75]
0x400193:	call	0x500010
<Block for 0x400198, 12 bytes>
0x400198:	lea	rax, [rbp - 0x30]
0x40019c:	mov	rdi, rax
0x40019f:	call	0x400644
<Block for 0x4001a4, 16 bytes>
0x4001a4:	mov	qword ptr [rbp - 0x40], rax
0x4001a8:	lea	rax, [rbp - 0x30]
0x4001ac:	mov	rdi, rax
0x4001af:	call	0x400694
<Block for 0x4001b4, 23 bytes>
0x4001b4:	mov	qword ptr [rbp - 0x38], rax
0x4001b8:	lea	rdx, [rbp - 0x38]
0x4001bc:	lea	rax, [rbp - 0x40]
0x4001c0:	mov	rsi, rdx
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x4006e0
<Block for 0x4001cb, 4 bytes>
0x4001cb:	test	al, al
0x4001cd:	je	0x400236
<Block for 0x400236, 22 bytes>
0x400236:	mov	rax, qword ptr [rip + 0xffdeb]
0x40023d:	mov	rsi, rax
0x400240:	lea	rdi, [rip + 0xffdc1]
0x400247:	call	0x500030
<Block for 0x4001cf, 12 bytes>
0x4001cf:	lea	rax, [rbp - 0x40]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x40075e
<Block for 0x40024c, 12 bytes>
0x40024c:	lea	rax, [rbp - 0x30]
0x400250:	mov	rdi, rax
0x400253:	call	0x4004a2
<Block for 0x4001db, 11 bytes>
0x4001db:	mov	eax, dword ptr [rax]
0x4001dd:	test	eax, eax
0x4001df:	sete	al
0x4001e2:	test	al, al
0x4001e4:	je	0x4001f2
<Block for 0x400258, 16 bytes>
0x400258:	nop	
0x400259:	mov	rax, qword ptr [rbp - 0x18]
0x40025d:	xor	rax, qword ptr fs:[0x28]
0x400266:	je	0x40028d
<Block for 0x4001f2, 19 bytes>
0x4001f2:	lea	rsi, [rip + 0x251]
0x4001f9:	lea	rdi, [rip + 0xffe08]
0x400200:	call	0x500010
<Block for 0x4001e6, 12 bytes>
0x4001e6:	lea	rax, [rbp - 0x30]
0x4001ea:	mov	rdi, rax
0x4001ed:	call	0x400780
<Block for 0x40028d, 7 bytes>
0x40028d:	add	rsp, 0x38
0x400291:	pop	rbx
0x400292:	pop	rbp
0x400293:	ret	
<Block for 0x400268, 2 bytes>
0x400268:	jmp	0x400288
<Block for 0x400205, 15 bytes>
0x400205:	mov	rbx, rax
0x400208:	lea	rax, [rbp - 0x40]
0x40020c:	mov	rdi, rax
0x40020f:	call	0x40075e
<Block for 0x400288, 5 bytes>
0x400288:	call	0x500040
<Block for 0x400214, 12 bytes>
0x400214:	mov	eax, dword ptr [rax]
0x400216:	mov	esi, eax
0x400218:	mov	rdi, rbx
0x40021b:	call	0x500018
<Block for 0x400220, 17 bytes>
0x400220:	lea	rax, [rbp - 0x40]
0x400224:	mov	esi, 0
0x400229:	mov	rdi, rax
0x40022c:	call	0x400706
<Block for 0x400231, 5 bytes>
0x400231:	jmp	0x4001a8
<Block for 0x4001a8, 12 bytes>
0x4001a8:	lea	rax, [rbp - 0x30]
0x4001ac:	mov	rdi, rax
0x4001af:	call	0x400694
