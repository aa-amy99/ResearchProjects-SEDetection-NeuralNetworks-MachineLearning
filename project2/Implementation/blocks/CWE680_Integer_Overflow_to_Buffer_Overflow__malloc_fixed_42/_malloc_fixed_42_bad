<Block for 0x400017, 29 bytes>
0x400017:	endbr64	
0x40001b:	push	rbp
0x40001c:	mov	rbp, rsp
0x40001f:	sub	rsp, 0x20
0x400023:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40002a:	mov	eax, dword ptr [rbp - 0x14]
0x40002d:	mov	edi, eax
0x40002f:	call	0x400000
<Block for 0x400034, 20 bytes>
0x400034:	mov	dword ptr [rbp - 0x14], eax
0x400037:	mov	eax, dword ptr [rbp - 0x14]
0x40003a:	cdqe	
0x40003c:	shl	rax, 2
0x400040:	mov	rdi, rax
0x400043:	call	0x500000
<Block for 0x400048, 11 bytes>
0x400048:	mov	qword ptr [rbp - 8], rax
0x40004c:	cmp	qword ptr [rbp - 8], 0
0x400051:	jne	0x40005d
<Block for 0x400053, 10 bytes>
0x400053:	mov	edi, 0xffffffff
0x400058:	call	0x500008
<Block for 0x40005d, 10 bytes>
0x40005d:	mov	qword ptr [rbp - 0x10], 0
0x400065:	jmp	0x400085
<Block for 0x400085, 11 bytes>
0x400085:	mov	eax, dword ptr [rbp - 0x14]
0x400088:	cdqe	
0x40008a:	cmp	qword ptr [rbp - 0x10], rax
0x40008e:	jb	0x400067
<Block for 0x400067, 41 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x10]
0x40006b:	lea	rdx, [rax*4]
0x400073:	mov	rax, qword ptr [rbp - 8]
0x400077:	add	rax, rdx
0x40007a:	mov	dword ptr [rax], 0
0x400080:	add	qword ptr [rbp - 0x10], 1
0x400085:	mov	eax, dword ptr [rbp - 0x14]
0x400088:	cdqe	
0x40008a:	cmp	qword ptr [rbp - 0x10], rax
0x40008e:	jb	0x400067
<Block for 0x400090, 13 bytes>
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	mov	eax, dword ptr [rax]
0x400096:	mov	edi, eax
0x400098:	call	0x500010
<Block for 0x40009d, 12 bytes>
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500018
<Block for 0x4000a9, 3 bytes>
0x4000a9:	nop	
0x4000aa:	leave	
0x4000ab:	ret	
