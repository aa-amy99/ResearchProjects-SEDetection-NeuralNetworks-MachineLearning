<Block for 0x40013e, 81 bytes>
0x40013e:	endbr64	
0x400142:	push	rbp
0x400143:	mov	rbp, rsp
0x400146:	add	rsp, -0x80
0x40014a:	mov	rax, qword ptr fs:[0x28]
0x400153:	mov	qword ptr [rbp - 8], rax
0x400157:	xor	eax, eax
0x400159:	mov	eax, 0x10
0x40015e:	sub	rax, 1
0x400162:	add	rax, 0x6c
0x400166:	mov	esi, 0x10
0x40016b:	mov	edx, 0
0x400170:	div	rsi
0x400173:	imul	rax, rax, 0x10
0x400177:	mov	rdx, rax
0x40017a:	and	rdx, 0xfffffffffffff000
0x400181:	mov	rcx, rsp
0x400184:	sub	rcx, rdx
0x400187:	mov	rdx, rcx
0x40018a:	cmp	rsp, rdx
0x40018d:	je	0x4001a1
<Block for 0x4001a1, 26 bytes>
0x4001a1:	mov	rdx, rax
0x4001a4:	and	edx, 0xfff
0x4001aa:	sub	rsp, rdx
0x4001ad:	mov	rdx, rax
0x4001b0:	and	edx, 0xfff
0x4001b6:	test	rdx, rdx
0x4001b9:	je	0x4001cb
<Block for 0x40018f, 18 bytes>
0x40018f:	sub	rsp, 0x1000
0x400196:	or	qword ptr [rsp + 0xff8], 0
0x40019f:	jmp	0x40018a
<Block for 0x4001cb, 41 bytes>
0x4001cb:	mov	rax, rsp
0x4001ce:	add	rax, 0xf
0x4001d2:	shr	rax, 4
0x4001d6:	shl	rax, 4
0x4001da:	mov	qword ptr [rbp - 0x78], rax
0x4001de:	mov	rax, qword ptr [rbp - 0x78]
0x4001e2:	mov	edx, 0x63
0x4001e7:	mov	esi, 0x41
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500000
<Block for 0x4001bb, 57 bytes>
0x4001bb:	and	eax, 0xfff
0x4001c0:	sub	rax, 8
0x4001c4:	add	rax, rsp
0x4001c7:	or	qword ptr [rax], 0
0x4001cb:	mov	rax, rsp
0x4001ce:	add	rax, 0xf
0x4001d2:	shr	rax, 4
0x4001d6:	shl	rax, 4
0x4001da:	mov	qword ptr [rbp - 0x78], rax
0x4001de:	mov	rax, qword ptr [rbp - 0x78]
0x4001e2:	mov	edx, 0x63
0x4001e7:	mov	esi, 0x41
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500000
<Block for 0x40018a, 5 bytes>
0x40018a:	cmp	rsp, rdx
0x40018d:	je	0x4001a1
<Block for 0x4001f4, 21 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	add	rax, 0x63
0x4001fc:	mov	byte ptr [rax], 0
0x4001ff:	mov	eax, 0
0x400204:	call	0x500030
<Block for 0x400209, 4 bytes>
0x400209:	test	eax, eax
0x40020b:	je	0x40021b
<Block for 0x40021b, 30 bytes>
0x40021b:	mov	rax, qword ptr [rbp - 0x78]
0x40021f:	mov	qword ptr [rbp - 0x80], rax
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x43
0x400231:	mov	rdi, rax
0x400234:	call	0x500000
<Block for 0x40020d, 12 bytes>
0x40020d:	lea	rdi, [rip + 0x1cb]
0x400214:	call	0x500020
<Block for 0x400239, 16 bytes>
0x400239:	mov	byte ptr [rbp - 0xd], 0
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	rdi, rax
0x400244:	call	0x500010
<Block for 0x400219, 2 bytes>
0x400219:	jmp	0x400223
<Block for 0x400249, 22 bytes>
0x400249:	mov	rdx, rax
0x40024c:	mov	rcx, qword ptr [rbp - 0x80]
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	rsi, rcx
0x400257:	mov	rdi, rax
0x40025a:	call	0x500018
<Block for 0x400223, 22 bytes>
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x43
0x400231:	mov	rdi, rax
0x400234:	call	0x500000
<Block for 0x40025f, 16 bytes>
0x40025f:	mov	byte ptr [rbp - 0xd], 0
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	mov	rdi, rax
0x40026a:	call	0x500020
<Block for 0x40026f, 16 bytes>
0x40026f:	nop	
0x400270:	mov	rax, qword ptr [rbp - 8]
0x400274:	xor	rax, qword ptr fs:[0x28]
0x40027d:	je	0x400284
<Block for 0x400284, 2 bytes>
0x400284:	leave	
0x400285:	ret	
<Block for 0x40027f, 5 bytes>
0x40027f:	call	0x500028
