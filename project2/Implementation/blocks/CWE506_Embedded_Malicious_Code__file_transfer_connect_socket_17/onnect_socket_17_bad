<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 34 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	mov	dword ptr [rbp - 0x10040], 0
0x40003f:	jmp	0x40019c
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x40019c, 13 bytes>
0x40019c:	cmp	dword ptr [rbp - 0x10040], 0
0x4001a3:	jle	0x400044
<Block for 0x400044, 29 bytes>
0x400044:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x40004e:	lea	rsi, [rip + 0x173]
0x400055:	lea	rdi, [rip + 0x16e]
0x40005c:	call	0x500000
<Block for 0x4001a9, 16 bytes>
0x4001a9:	nop	
0x4001aa:	mov	rax, qword ptr [rbp - 0x18]
0x4001ae:	xor	rax, qword ptr fs:[0x28]
0x4001b7:	je	0x4001be
<Block for 0x400061, 17 bytes>
0x400061:	mov	qword ptr [rbp - 0x10038], rax
0x400068:	cmp	qword ptr [rbp - 0x10038], 0
0x400070:	je	0x4000b4
<Block for 0x4001be, 10 bytes>
0x4001be:	add	rsp, 0x10038
0x4001c5:	pop	rbx
0x4001c6:	pop	rbp
0x4001c7:	ret	
<Block for 0x4001b9, 5 bytes>
0x4001b9:	call	0x500058
<Block for 0x4000b4, 20 bytes>
0x4000b4:	mov	edx, 6
0x4000b9:	mov	esi, 1
0x4000be:	mov	edi, 2
0x4000c3:	call	0x500020
<Block for 0x400072, 27 bytes>
0x400072:	mov	rdx, qword ptr [rbp - 0x10038]
0x400079:	lea	rax, [rbp - 0x10020]
0x400080:	mov	esi, 0xffff
0x400085:	mov	rdi, rax
0x400088:	call	0x500008
<Block for 0x4000c8, 19 bytes>
0x4000c8:	mov	dword ptr [rbp - 0x1003c], eax
0x4000ce:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000d5:	je	0x40017b
<Block for 0x40008d, 5 bytes>
0x40008d:	test	rax, rax
0x400090:	jne	0x4000a5
<Block for 0x40017b, 3 bytes>
0x40017b:	nop	
0x40017c:	jmp	0x40017f
<Block for 0x4000db, 25 bytes>
0x4000db:	lea	rax, [rbp - 0x10030]
0x4000e2:	mov	edx, 0x10
0x4000e7:	mov	esi, 0
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500028
<Block for 0x400092, 12 bytes>
0x400092:	lea	rdi, [rip + 0x13a]
0x400099:	call	0x500010
<Block for 0x4000a5, 15 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 0x10038]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500018
<Block for 0x40017f, 9 bytes>
0x40017f:	cmp	dword ptr [rbp - 0x1003c], -1
0x400186:	je	0x400195
<Block for 0x4000f4, 29 bytes>
0x4000f4:	mov	word ptr [rbp - 0x10030], 2
0x4000fd:	mov	dword ptr [rbp - 0x1002c], 0
0x400107:	mov	edi, 0x6987
0x40010c:	call	0x500030
<Block for 0x40009e, 22 bytes>
0x40009e:	mov	byte ptr [rbp - 0x10020], 0
0x4000a5:	mov	rax, qword ptr [rbp - 0x10038]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500018
<Block for 0x400195, 20 bytes>
0x400195:	add	dword ptr [rbp - 0x10040], 1
0x40019c:	cmp	dword ptr [rbp - 0x10040], 0
0x4001a3:	jle	0x400044
<Block for 0x400188, 13 bytes>
0x400188:	mov	eax, dword ptr [rbp - 0x1003c]
0x40018e:	mov	edi, eax
0x400190:	call	0x500050
<Block for 0x400111, 35 bytes>
0x400111:	mov	word ptr [rbp - 0x1002e], ax
0x400118:	lea	rcx, [rbp - 0x10030]
0x40011f:	mov	eax, dword ptr [rbp - 0x1003c]
0x400125:	mov	edx, 0x10
0x40012a:	mov	rsi, rcx
0x40012d:	mov	edi, eax
0x40012f:	call	0x500038
<Block for 0x400134, 5 bytes>
0x400134:	cmp	eax, -1
0x400137:	je	0x40017e
<Block for 0x400139, 15 bytes>
0x400139:	lea	rax, [rbp - 0x10020]
0x400140:	mov	rdi, rax
0x400143:	call	0x500040
<Block for 0x40017e, 1 bytes>
0x40017e:	nop	
<Block for 0x400148, 28 bytes>
0x400148:	mov	rdx, rax
0x40014b:	lea	rsi, [rbp - 0x10020]
0x400152:	mov	eax, dword ptr [rbp - 0x1003c]
0x400158:	mov	ecx, 0
0x40015d:	mov	edi, eax
0x40015f:	call	0x500048
<Block for 0x400164, 18 bytes>
0x400164:	mov	rbx, rax
0x400167:	lea	rax, [rbp - 0x10020]
0x40016e:	mov	rdi, rax
0x400171:	call	0x500040
<Block for 0x400176, 5 bytes>
0x400176:	cmp	rbx, rax
0x400179:	jmp	0x40017f
