<Block for 0x4001bc, 46 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	sub	rsp, 0x40
0x4001c8:	mov	rax, qword ptr fs:[0x28]
0x4001d1:	mov	qword ptr [rbp - 8], rax
0x4001d5:	xor	eax, eax
0x4001d7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001de:	lea	rax, [rbp - 0x34]
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x4001a3
<Block for 0x4001ea, 48 bytes>
0x4001ea:	mov	qword ptr [rbp - 0x30], 0
0x4001f2:	mov	qword ptr [rbp - 0x28], 0
0x4001fa:	mov	qword ptr [rbp - 0x20], 0
0x400202:	mov	qword ptr [rbp - 0x18], 0
0x40020a:	mov	qword ptr [rbp - 0x10], 0
0x400212:	mov	eax, dword ptr [rbp - 0x34]
0x400215:	cmp	eax, 9
0x400218:	jg	0x40022c
<Block for 0x40021a, 16 bytes>
0x40021a:	mov	eax, dword ptr [rbp - 0x34]
0x40021d:	cdqe	
0x40021f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400223:	mov	edi, eax
0x400225:	call	0x500048
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rdi, [rip + 0x1fd]
0x400233:	call	0x500050
<Block for 0x40022a, 2 bytes>
0x40022a:	jmp	0x400246
<Block for 0x400238, 2 bytes>
0x400238:	jmp	0x400246
<Block for 0x400246, 15 bytes>
0x400246:	mov	rax, qword ptr [rbp - 8]
0x40024a:	xor	rax, qword ptr fs:[0x28]
0x400253:	je	0x40025a
<Block for 0x40025a, 2 bytes>
0x40025a:	leave	
0x40025b:	ret	
<Block for 0x400255, 5 bytes>
0x400255:	call	0x500040
