<Block for 0x400088, 81 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x20
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	eax, 0x10
0x4000a8:	sub	rax, 1
0x4000ac:	add	rax, 0x6c
0x4000b0:	mov	esi, 0x10
0x4000b5:	mov	edx, 0
0x4000ba:	div	rsi
0x4000bd:	imul	rax, rax, 0x10
0x4000c1:	mov	rdx, rax
0x4000c4:	and	rdx, 0xfffffffffffff000
0x4000cb:	mov	rcx, rsp
0x4000ce:	sub	rcx, rdx
0x4000d1:	mov	rdx, rcx
0x4000d4:	cmp	rsp, rdx
0x4000d7:	je	0x4000eb
<Block for 0x4000eb, 26 bytes>
0x4000eb:	mov	rdx, rax
0x4000ee:	and	edx, 0xfff
0x4000f4:	sub	rsp, rdx
0x4000f7:	mov	rdx, rax
0x4000fa:	and	edx, 0xfff
0x400100:	test	rdx, rdx
0x400103:	je	0x400115
<Block for 0x4000d9, 18 bytes>
0x4000d9:	sub	rsp, 0x1000
0x4000e0:	or	qword ptr [rsp + 0xff8], 0
0x4000e9:	jmp	0x4000d4
<Block for 0x400115, 41 bytes>
0x400115:	mov	rax, rsp
0x400118:	add	rax, 0xf
0x40011c:	shr	rax, 4
0x400120:	shl	rax, 4
0x400124:	mov	qword ptr [rbp - 0x18], rax
0x400128:	mov	rax, qword ptr [rbp - 0x18]
0x40012c:	mov	edx, 0x63
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x400105, 57 bytes>
0x400105:	and	eax, 0xfff
0x40010a:	sub	rax, 8
0x40010e:	add	rax, rsp
0x400111:	or	qword ptr [rax], 0
0x400115:	mov	rax, rsp
0x400118:	add	rax, 0xf
0x40011c:	shr	rax, 4
0x400120:	shl	rax, 4
0x400124:	mov	qword ptr [rbp - 0x18], rax
0x400128:	mov	rax, qword ptr [rbp - 0x18]
0x40012c:	mov	edx, 0x63
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x4000d4, 5 bytes>
0x4000d4:	cmp	rsp, rdx
0x4000d7:	je	0x4000eb
<Block for 0x40013e, 44 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x18]
0x400142:	add	rax, 0x63
0x400146:	mov	byte ptr [rax], 0
0x400149:	mov	rax, qword ptr [rbp - 0x18]
0x40014d:	sub	rax, 8
0x400151:	mov	qword ptr [rbp - 0x10], rax
0x400155:	mov	rax, qword ptr [rbp - 0x10]
0x400159:	mov	qword ptr [rip + 0x1b8], rax
0x400160:	mov	eax, 0
0x400165:	call	0x400000
<Block for 0x40016a, 16 bytes>
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x40017f, 2 bytes>
0x40017f:	leave	
0x400180:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500018
