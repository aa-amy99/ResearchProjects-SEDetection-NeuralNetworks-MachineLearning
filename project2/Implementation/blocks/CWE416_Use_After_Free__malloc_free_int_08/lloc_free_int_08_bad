<Block for 0x40001e, 30 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	qword ptr [rbp - 0x10], 0
0x400032:	mov	eax, 0
0x400037:	call	0x400000
<Block for 0x40003c, 4 bytes>
0x40003c:	test	eax, eax
0x40003e:	je	0x40009a
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	eax, 0
0x40009f:	call	0x400000
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 0x190
0x400045:	call	0x500000
<Block for 0x4000a4, 4 bytes>
0x4000a4:	test	eax, eax
0x4000a6:	je	0x4000b5
<Block for 0x40004a, 11 bytes>
0x40004a:	mov	qword ptr [rbp - 0x10], rax
0x40004e:	cmp	qword ptr [rbp - 0x10], 0
0x400053:	jne	0x40005f
<Block for 0x4000b5, 3 bytes>
0x4000b5:	nop	
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000a8, 13 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0x10]
0x4000ac:	mov	eax, dword ptr [rax]
0x4000ae:	mov	edi, eax
0x4000b0:	call	0x500018
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0xffffffff
0x40005a:	call	0x500008
<Block for 0x40005f, 10 bytes>
0x40005f:	mov	qword ptr [rbp - 8], 0
0x400067:	jmp	0x400087
<Block for 0x400087, 7 bytes>
0x400087:	cmp	qword ptr [rbp - 8], 0x63
0x40008c:	jbe	0x400069
<Block for 0x400069, 37 bytes>
0x400069:	mov	rax, qword ptr [rbp - 8]
0x40006d:	lea	rdx, [rax*4]
0x400075:	mov	rax, qword ptr [rbp - 0x10]
0x400079:	add	rax, rdx
0x40007c:	mov	dword ptr [rax], 5
0x400082:	add	qword ptr [rbp - 8], 1
0x400087:	cmp	qword ptr [rbp - 8], 0x63
0x40008c:	jbe	0x400069
<Block for 0x40008e, 12 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 0x10]
0x400092:	mov	rdi, rax
0x400095:	call	0x500010
