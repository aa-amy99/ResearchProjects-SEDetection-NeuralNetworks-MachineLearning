<Block for 0x400151, 30 bytes>
0x400151:	endbr64	
0x400155:	push	rbp
0x400156:	mov	rbp, rsp
0x400159:	sub	rsp, 0x10
0x40015d:	mov	qword ptr [rbp - 8], 0
0x400165:	mov	eax, 0
0x40016a:	call	0x400000
<Block for 0x40016f, 4 bytes>
0x40016f:	test	eax, eax
0x400171:	je	0x4001cd
<Block for 0x4001cd, 10 bytes>
0x4001cd:	mov	eax, 0
0x4001d2:	call	0x400000
<Block for 0x400173, 10 bytes>
0x400173:	mov	edi, 0x190
0x400178:	call	0x500000
<Block for 0x4001d7, 3 bytes>
0x4001d7:	nop	
0x4001d8:	leave	
0x4001d9:	ret	
<Block for 0x40017d, 11 bytes>
0x40017d:	mov	qword ptr [rbp - 8], rax
0x400181:	cmp	qword ptr [rbp - 8], 0
0x400186:	jne	0x400192
<Block for 0x400188, 10 bytes>
0x400188:	mov	edi, 0xffffffff
0x40018d:	call	0x500008
<Block for 0x400192, 10 bytes>
0x400192:	mov	qword ptr [rbp - 0x10], 0
0x40019a:	jmp	0x4001ba
<Block for 0x4001ba, 7 bytes>
0x4001ba:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001bf:	jbe	0x40019c
<Block for 0x40019c, 37 bytes>
0x40019c:	mov	rax, qword ptr [rbp - 0x10]
0x4001a0:	lea	rdx, [rax*4]
0x4001a8:	mov	rax, qword ptr [rbp - 8]
0x4001ac:	add	rax, rdx
0x4001af:	mov	dword ptr [rax], 5
0x4001b5:	add	qword ptr [rbp - 0x10], 1
0x4001ba:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001bf:	jbe	0x40019c
<Block for 0x4001c1, 12 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 8]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500010
