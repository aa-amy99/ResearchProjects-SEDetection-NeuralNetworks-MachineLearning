<Block for 0x4000b8, 30 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0x10
0x4000c4:	mov	qword ptr [rbp - 8], 0
0x4000cc:	mov	eax, 0
0x4000d1:	call	0x400000
<Block for 0x4000d6, 4 bytes>
0x4000d6:	test	eax, eax
0x4000d8:	je	0x400134
<Block for 0x400134, 10 bytes>
0x400134:	mov	eax, 0
0x400139:	call	0x40000f
<Block for 0x4000da, 10 bytes>
0x4000da:	mov	edi, 0x190
0x4000df:	call	0x500000
<Block for 0x40013e, 4 bytes>
0x40013e:	test	eax, eax
0x400140:	je	0x40014e
<Block for 0x4000e4, 11 bytes>
0x4000e4:	mov	qword ptr [rbp - 8], rax
0x4000e8:	cmp	qword ptr [rbp - 8], 0
0x4000ed:	jne	0x4000f9
<Block for 0x40014e, 3 bytes>
0x40014e:	nop	
0x40014f:	leave	
0x400150:	ret	
<Block for 0x400142, 12 bytes>
0x400142:	lea	rdi, [rip + 0x1ee]
0x400149:	call	0x500020
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	edi, 0xffffffff
0x4000f4:	call	0x500008
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	qword ptr [rbp - 0x10], 0
0x400101:	jmp	0x400121
<Block for 0x400121, 7 bytes>
0x400121:	cmp	qword ptr [rbp - 0x10], 0x63
0x400126:	jbe	0x400103
<Block for 0x400103, 37 bytes>
0x400103:	mov	rax, qword ptr [rbp - 0x10]
0x400107:	lea	rdx, [rax*4]
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	add	rax, rdx
0x400116:	mov	dword ptr [rax], 5
0x40011c:	add	qword ptr [rbp - 0x10], 1
0x400121:	cmp	qword ptr [rbp - 0x10], 0x63
0x400126:	jbe	0x400103
<Block for 0x400128, 12 bytes>
0x400128:	mov	rax, qword ptr [rbp - 8]
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500010
