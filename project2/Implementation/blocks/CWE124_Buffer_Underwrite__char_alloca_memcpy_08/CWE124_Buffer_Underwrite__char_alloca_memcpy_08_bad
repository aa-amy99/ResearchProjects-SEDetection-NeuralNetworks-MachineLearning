<Block for 0x40001e, 85 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	push	rbx
0x400027:	sub	rsp, 0x88
0x40002e:	mov	rax, qword ptr fs:[0x28]
0x400037:	mov	qword ptr [rbp - 0x18], rax
0x40003b:	xor	eax, eax
0x40003d:	mov	eax, 0x10
0x400042:	sub	rax, 1
0x400046:	add	rax, 0x6c
0x40004a:	mov	esi, 0x10
0x40004f:	mov	edx, 0
0x400054:	div	rsi
0x400057:	imul	rax, rax, 0x10
0x40005b:	mov	rdx, rax
0x40005e:	and	rdx, 0xfffffffffffff000
0x400065:	mov	rbx, rsp
0x400068:	sub	rbx, rdx
0x40006b:	mov	rdx, rbx
0x40006e:	cmp	rsp, rdx
0x400071:	je	0x400085
<Block for 0x400085, 26 bytes>
0x400085:	mov	rdx, rax
0x400088:	and	edx, 0xfff
0x40008e:	sub	rsp, rdx
0x400091:	mov	rdx, rax
0x400094:	and	edx, 0xfff
0x40009a:	test	rdx, rdx
0x40009d:	je	0x4000af
<Block for 0x400073, 18 bytes>
0x400073:	sub	rsp, 0x1000
0x40007a:	or	qword ptr [rsp + 0xff8], 0
0x400083:	jmp	0x40006e
<Block for 0x4000af, 47 bytes>
0x4000af:	mov	rax, rsp
0x4000b2:	add	rax, 0xf
0x4000b6:	shr	rax, 4
0x4000ba:	shl	rax, 4
0x4000be:	mov	qword ptr [rbp - 0x88], rax
0x4000c5:	mov	rax, qword ptr [rbp - 0x88]
0x4000cc:	mov	edx, 0x63
0x4000d1:	mov	esi, 0x41
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500000
<Block for 0x40009f, 63 bytes>
0x40009f:	and	eax, 0xfff
0x4000a4:	sub	rax, 8
0x4000a8:	add	rax, rsp
0x4000ab:	or	qword ptr [rax], 0
0x4000af:	mov	rax, rsp
0x4000b2:	add	rax, 0xf
0x4000b6:	shr	rax, 4
0x4000ba:	shl	rax, 4
0x4000be:	mov	qword ptr [rbp - 0x88], rax
0x4000c5:	mov	rax, qword ptr [rbp - 0x88]
0x4000cc:	mov	edx, 0x63
0x4000d1:	mov	esi, 0x41
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500000
<Block for 0x40006e, 5 bytes>
0x40006e:	cmp	rsp, rdx
0x400071:	je	0x400085
<Block for 0x4000de, 24 bytes>
0x4000de:	mov	rax, qword ptr [rbp - 0x88]
0x4000e5:	add	rax, 0x63
0x4000e9:	mov	byte ptr [rax], 0
0x4000ec:	mov	eax, 0
0x4000f1:	call	0x400000
<Block for 0x4000f6, 4 bytes>
0x4000f6:	test	eax, eax
0x4000f8:	je	0x40010c
<Block for 0x40010c, 22 bytes>
0x40010c:	lea	rax, [rbp - 0x80]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x43
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x4000fa, 40 bytes>
0x4000fa:	mov	rax, qword ptr [rbp - 0x88]
0x400101:	sub	rax, 8
0x400105:	mov	qword ptr [rbp - 0x90], rax
0x40010c:	lea	rax, [rbp - 0x80]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x43
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x400122, 141 bytes>
0x400122:	mov	byte ptr [rbp - 0x1d], 0
0x400126:	mov	rax, qword ptr [rbp - 0x90]
0x40012d:	mov	rcx, qword ptr [rbp - 0x80]
0x400131:	mov	rbx, qword ptr [rbp - 0x78]
0x400135:	mov	qword ptr [rax], rcx
0x400138:	mov	qword ptr [rax + 8], rbx
0x40013c:	mov	rcx, qword ptr [rbp - 0x70]
0x400140:	mov	rbx, qword ptr [rbp - 0x68]
0x400144:	mov	qword ptr [rax + 0x10], rcx
0x400148:	mov	qword ptr [rax + 0x18], rbx
0x40014c:	mov	rcx, qword ptr [rbp - 0x60]
0x400150:	mov	rbx, qword ptr [rbp - 0x58]
0x400154:	mov	qword ptr [rax + 0x20], rcx
0x400158:	mov	qword ptr [rax + 0x28], rbx
0x40015c:	mov	rcx, qword ptr [rbp - 0x50]
0x400160:	mov	rbx, qword ptr [rbp - 0x48]
0x400164:	mov	qword ptr [rax + 0x30], rcx
0x400168:	mov	qword ptr [rax + 0x38], rbx
0x40016c:	mov	rcx, qword ptr [rbp - 0x40]
0x400170:	mov	rbx, qword ptr [rbp - 0x38]
0x400174:	mov	qword ptr [rax + 0x40], rcx
0x400178:	mov	qword ptr [rax + 0x48], rbx
0x40017c:	mov	rcx, qword ptr [rbp - 0x30]
0x400180:	mov	rbx, qword ptr [rbp - 0x28]
0x400184:	mov	qword ptr [rax + 0x50], rcx
0x400188:	mov	qword ptr [rax + 0x58], rbx
0x40018c:	mov	edx, dword ptr [rbp - 0x20]
0x40018f:	mov	dword ptr [rax + 0x60], edx
0x400192:	mov	rax, qword ptr [rbp - 0x90]
0x400199:	add	rax, 0x63
0x40019d:	mov	byte ptr [rax], 0
0x4001a0:	mov	rax, qword ptr [rbp - 0x90]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500008
<Block for 0x4001af, 16 bytes>
0x4001af:	nop	
0x4001b0:	mov	rax, qword ptr [rbp - 0x18]
0x4001b4:	xor	rax, qword ptr fs:[0x28]
0x4001bd:	je	0x4001c4
<Block for 0x4001c4, 6 bytes>
0x4001c4:	mov	rbx, qword ptr [rbp - 8]
0x4001c8:	leave	
0x4001c9:	ret	
<Block for 0x4001bf, 5 bytes>
0x4001bf:	call	0x500010
