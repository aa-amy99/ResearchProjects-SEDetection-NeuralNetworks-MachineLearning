<Block for 0x40056f, 44 bytes>
0x40056f:	endbr64	
0x400573:	push	rbp
0x400574:	mov	rbp, rsp
0x400577:	sub	rsp, 0x40
0x40057b:	mov	rax, qword ptr fs:[0x28]
0x400584:	mov	qword ptr [rbp - 8], rax
0x400588:	xor	eax, eax
0x40058a:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400591:	mov	eax, 0
0x400596:	call	0x40000f
<Block for 0x40059b, 4 bytes>
0x40059b:	test	eax, eax
0x40059d:	je	0x4005ad
<Block for 0x4005ad, 17 bytes>
0x4005ad:	mov	dword ptr [rbp - 0x34], 7
0x4005b4:	mov	eax, 0
0x4005b9:	call	0x400000
<Block for 0x40059f, 12 bytes>
0x40059f:	lea	rdi, [rip + 0x179]
0x4005a6:	call	0x500050
<Block for 0x4005be, 4 bytes>
0x4005be:	test	eax, eax
0x4005c0:	je	0x40060e
<Block for 0x4005ab, 2 bytes>
0x4005ab:	jmp	0x4005b4
<Block for 0x40060e, 16 bytes>
0x40060e:	nop	
0x40060f:	mov	rax, qword ptr [rbp - 8]
0x400613:	xor	rax, qword ptr fs:[0x28]
0x40061c:	je	0x400623
<Block for 0x4005c2, 46 bytes>
0x4005c2:	mov	qword ptr [rbp - 0x30], 0
0x4005ca:	mov	qword ptr [rbp - 0x28], 0
0x4005d2:	mov	qword ptr [rbp - 0x20], 0
0x4005da:	mov	qword ptr [rbp - 0x18], 0
0x4005e2:	mov	qword ptr [rbp - 0x10], 0
0x4005ea:	cmp	dword ptr [rbp - 0x34], 9
0x4005ee:	jg	0x400602
<Block for 0x4005b4, 10 bytes>
0x4005b4:	mov	eax, 0
0x4005b9:	call	0x400000
<Block for 0x400623, 2 bytes>
0x400623:	leave	
0x400624:	ret	
<Block for 0x40061e, 5 bytes>
0x40061e:	call	0x500058
<Block for 0x4005f0, 16 bytes>
0x4005f0:	mov	eax, dword ptr [rbp - 0x34]
0x4005f3:	cdqe	
0x4005f5:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4005f9:	mov	edi, eax
0x4005fb:	call	0x500048
<Block for 0x400602, 12 bytes>
0x400602:	lea	rdi, [rip + 0xf7]
0x400609:	call	0x500050
<Block for 0x400600, 2 bytes>
0x400600:	jmp	0x40060e
