<Block for 0x40020a, 31 bytes>
0x40020a:	endbr64	
0x40020e:	push	rbp
0x40020f:	mov	rbp, rsp
0x400212:	sub	rsp, 0x10
0x400216:	mov	qword ptr [rbp - 0x10], 0
0x40021e:	mov	eax, dword ptr [rip + 0xffddc]
0x400224:	cmp	eax, 5
0x400227:	jne	0x400266
<Block for 0x400229, 10 bytes>
0x400229:	mov	edi, 0x190
0x40022e:	call	0x500008
<Block for 0x400266, 11 bytes>
0x400266:	mov	eax, dword ptr [rip + 0xffd94]
0x40026c:	cmp	eax, 5
0x40026f:	jne	0x40027e
<Block for 0x400233, 19 bytes>
0x400233:	mov	qword ptr [rbp - 0x10], rax
0x400237:	mov	qword ptr [rbp - 8], 0
0x40023f:	cmp	qword ptr [rbp - 8], 0x63
0x400244:	ja	0x400266
<Block for 0x400271, 13 bytes>
0x400271:	mov	rax, qword ptr [rbp - 0x10]
0x400275:	mov	eax, dword ptr [rax]
0x400277:	mov	edi, eax
0x400279:	call	0x500018
<Block for 0x40027e, 3 bytes>
0x40027e:	nop	
0x40027f:	leave	
0x400280:	ret	
<Block for 0x400246, 32 bytes>
0x400246:	mov	rax, qword ptr [rbp - 8]
0x40024a:	lea	rdx, [rax*4]
0x400252:	mov	rax, qword ptr [rbp - 0x10]
0x400256:	add	rax, rdx
0x400259:	mov	dword ptr [rax], 5
0x40025f:	add	qword ptr [rbp - 8], 1
0x400264:	jmp	0x40023f
<Block for 0x40023f, 7 bytes>
0x40023f:	cmp	qword ptr [rbp - 8], 0x63
0x400244:	ja	0x400266
