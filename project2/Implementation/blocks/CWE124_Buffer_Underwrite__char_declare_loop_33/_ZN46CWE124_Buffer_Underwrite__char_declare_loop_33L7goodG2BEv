<Block for 0x4000fd, 69 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	sub	rsp, 0x100
0x40010c:	mov	rax, qword ptr fs:[0x28]
0x400115:	mov	qword ptr [rbp - 8], rax
0x400119:	xor	eax, eax
0x40011b:	lea	rax, [rbp - 0x100]
0x400122:	mov	qword ptr [rbp - 0xf0], rax
0x400129:	lea	rax, [rbp - 0xe0]
0x400130:	mov	edx, 0x63
0x400135:	mov	esi, 0x41
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500000
<Block for 0x400142, 57 bytes>
0x400142:	mov	byte ptr [rbp - 0x7d], 0
0x400146:	lea	rax, [rbp - 0xe0]
0x40014d:	mov	qword ptr [rbp - 0x100], rax
0x400154:	mov	rax, qword ptr [rbp - 0xf0]
0x40015b:	mov	rax, qword ptr [rax]
0x40015e:	mov	qword ptr [rbp - 0xe8], rax
0x400165:	lea	rax, [rbp - 0x70]
0x400169:	mov	edx, 0x63
0x40016e:	mov	esi, 0x43
0x400173:	mov	rdi, rax
0x400176:	call	0x500000
<Block for 0x40017b, 25 bytes>
0x40017b:	mov	byte ptr [rbp - 0xd], 0
0x40017f:	mov	qword ptr [rbp - 0xf8], 0
0x40018a:	cmp	qword ptr [rbp - 0xf8], 0x63
0x400192:	ja	0x4001c2
<Block for 0x400194, 46 bytes>
0x400194:	mov	rdx, qword ptr [rbp - 0xe8]
0x40019b:	mov	rax, qword ptr [rbp - 0xf8]
0x4001a2:	add	rdx, rax
0x4001a5:	lea	rcx, [rbp - 0x70]
0x4001a9:	mov	rax, qword ptr [rbp - 0xf8]
0x4001b0:	add	rax, rcx
0x4001b3:	movzx	eax, byte ptr [rax]
0x4001b6:	mov	byte ptr [rdx], al
0x4001b8:	add	qword ptr [rbp - 0xf8], 1
0x4001c0:	jmp	0x40018a
<Block for 0x4001c2, 29 bytes>
0x4001c2:	mov	rax, qword ptr [rbp - 0xe8]
0x4001c9:	add	rax, 0x63
0x4001cd:	mov	byte ptr [rax], 0
0x4001d0:	mov	rax, qword ptr [rbp - 0xe8]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500008
<Block for 0x40018a, 10 bytes>
0x40018a:	cmp	qword ptr [rbp - 0xf8], 0x63
0x400192:	ja	0x4001c2
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500010
