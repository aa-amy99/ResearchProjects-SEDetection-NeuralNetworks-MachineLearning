<Block for 0x400171, 166 bytes>
0x400171:	endbr64	
0x400175:	push	rbp
0x400176:	mov	rbp, rsp
0x400179:	add	rsp, -0x80
0x40017d:	mov	rax, qword ptr fs:[0x28]
0x400186:	mov	qword ptr [rbp - 8], rax
0x40018a:	xor	eax, eax
0x40018c:	nop	
0x40018d:	endbr64	
0x400191:	mov	qword ptr [rbp - 0x70], 0
0x400199:	mov	qword ptr [rbp - 0x68], 0
0x4001a1:	mov	qword ptr [rbp - 0x60], 0
0x4001a9:	mov	qword ptr [rbp - 0x58], 0
0x4001b1:	mov	qword ptr [rbp - 0x50], 0
0x4001b9:	mov	qword ptr [rbp - 0x48], 0
0x4001c1:	mov	qword ptr [rbp - 0x40], 0
0x4001c9:	mov	qword ptr [rbp - 0x38], 0
0x4001d1:	mov	qword ptr [rbp - 0x30], 0
0x4001d9:	mov	qword ptr [rbp - 0x28], 0
0x4001e1:	mov	qword ptr [rbp - 0x20], 0
0x4001e9:	mov	qword ptr [rbp - 0x18], 0
0x4001f1:	mov	dword ptr [rbp - 0x10], 0
0x4001f8:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x4001ff:	mov	rdx, qword ptr [rip + 0xffdfa]
0x400206:	lea	rax, [rbp - 0x70]
0x40020a:	mov	esi, 0x64
0x40020f:	mov	rdi, rax
0x400212:	call	0x500008
<Block for 0x400217, 5 bytes>
0x400217:	test	rax, rax
0x40021a:	jne	0x40022c
<Block for 0x40021c, 12 bytes>
0x40021c:	lea	rdi, [rip + 0xb4]
0x400223:	call	0x500010
<Block for 0x40022c, 11 bytes>
0x40022c:	lea	rax, [rbp - 0x70]
0x400230:	movzx	eax, byte ptr [rax]
0x400233:	test	al, al
0x400235:	je	0x40024c
<Block for 0x400228, 15 bytes>
0x400228:	mov	byte ptr [rbp - 0x70], 0
0x40022c:	lea	rax, [rbp - 0x70]
0x400230:	movzx	eax, byte ptr [rax]
0x400233:	test	al, al
0x400235:	je	0x40024c
<Block for 0x40024c, 22 bytes>
0x40024c:	lea	rax, [rbp - 0x70]
0x400250:	mov	esi, 2
0x400255:	mov	rdi, rax
0x400258:	mov	eax, 0
0x40025d:	call	0x500030
<Block for 0x400237, 12 bytes>
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500018
<Block for 0x400262, 9 bytes>
0x400262:	mov	dword ptr [rbp - 0x74], eax
0x400265:	cmp	dword ptr [rbp - 0x74], -1
0x400269:	jne	0x400275
<Block for 0x400243, 31 bytes>
0x400243:	sub	rax, 1
0x400247:	mov	byte ptr [rbp + rax - 0x70], 0
0x40024c:	lea	rax, [rbp - 0x70]
0x400250:	mov	esi, 2
0x400255:	mov	rdi, rax
0x400258:	mov	eax, 0
0x40025d:	call	0x500030
<Block for 0x40026b, 10 bytes>
0x40026b:	mov	edi, 1
0x400270:	call	0x500028
<Block for 0x400275, 22 bytes>
0x400275:	mov	eax, dword ptr [rbp - 0x74]
0x400278:	mov	edx, 0xc
0x40027d:	lea	rsi, [rip + 0x6e]
0x400284:	mov	edi, eax
0x400286:	call	0x500038
<Block for 0x40028b, 6 bytes>
0x40028b:	cmp	rax, -1
0x40028f:	jne	0x40029b
<Block for 0x400291, 10 bytes>
0x400291:	mov	edi, 1
0x400296:	call	0x500028
<Block for 0x40029b, 6 bytes>
0x40029b:	cmp	dword ptr [rbp - 0x74], -1
0x40029f:	je	0x4002ab
<Block for 0x4002ab, 16 bytes>
0x4002ab:	nop	
0x4002ac:	mov	rax, qword ptr [rbp - 8]
0x4002b0:	xor	rax, qword ptr fs:[0x28]
0x4002b9:	je	0x4002c0
<Block for 0x4002a1, 10 bytes>
0x4002a1:	mov	eax, dword ptr [rbp - 0x74]
0x4002a4:	mov	edi, eax
0x4002a6:	call	0x500040
<Block for 0x4002c0, 2 bytes>
0x4002c0:	leave	
0x4002c1:	ret	
<Block for 0x4002bb, 5 bytes>
0x4002bb:	call	0x500048
