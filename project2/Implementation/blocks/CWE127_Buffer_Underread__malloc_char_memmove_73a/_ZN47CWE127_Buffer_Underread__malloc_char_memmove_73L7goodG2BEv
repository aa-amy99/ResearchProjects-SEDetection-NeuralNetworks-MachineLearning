<Block for 0x40013d, 40 bytes>
0x40013d:	endbr64	
0x400141:	push	rbp
0x400142:	mov	rbp, rsp
0x400145:	push	rbx
0x400146:	sub	rsp, 0x58
0x40014a:	mov	rax, qword ptr fs:[0x28]
0x400153:	mov	qword ptr [rbp - 0x18], rax
0x400157:	xor	eax, eax
0x400159:	lea	rax, [rbp - 0x50]
0x40015d:	mov	rdi, rax
0x400160:	call	0x400334
<Block for 0x400165, 18 bytes>
0x400165:	mov	qword ptr [rbp - 0x60], 0
0x40016d:	mov	edi, 0x64
0x400172:	call	0x500000
<Block for 0x400177, 11 bytes>
0x400177:	mov	qword ptr [rbp - 0x58], rax
0x40017b:	cmp	qword ptr [rbp - 0x58], 0
0x400180:	jne	0x40018c
<Block for 0x400182, 10 bytes>
0x400182:	mov	edi, 0xffffffff
0x400187:	call	0x500008
<Block for 0x40018c, 22 bytes>
0x40018c:	mov	rax, qword ptr [rbp - 0x58]
0x400190:	mov	edx, 0x63
0x400195:	mov	esi, 0x41
0x40019a:	mov	rdi, rax
0x40019d:	call	0x500010
<Block for 0x4001a2, 38 bytes>
0x4001a2:	mov	rax, qword ptr [rbp - 0x58]
0x4001a6:	add	rax, 0x63
0x4001aa:	mov	byte ptr [rax], 0
0x4001ad:	mov	rax, qword ptr [rbp - 0x58]
0x4001b1:	mov	qword ptr [rbp - 0x60], rax
0x4001b5:	lea	rdx, [rbp - 0x60]
0x4001b9:	lea	rax, [rbp - 0x50]
0x4001bd:	mov	rsi, rdx
0x4001c0:	mov	rdi, rax
0x4001c3:	call	0x40042c
<Block for 0x4001c8, 19 bytes>
0x4001c8:	lea	rdx, [rbp - 0x60]
0x4001cc:	lea	rax, [rbp - 0x50]
0x4001d0:	mov	rsi, rdx
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x40042c
<Block for 0x4001db, 19 bytes>
0x4001db:	lea	rdx, [rbp - 0x60]
0x4001df:	lea	rax, [rbp - 0x50]
0x4001e3:	mov	rsi, rdx
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x40042c
<Block for 0x4001ee, 19 bytes>
0x4001ee:	lea	rdx, [rbp - 0x50]
0x4001f2:	lea	rax, [rbp - 0x30]
0x4001f6:	mov	rsi, rdx
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x400466
<Block for 0x400201, 12 bytes>
0x400201:	lea	rax, [rbp - 0x30]
0x400205:	mov	rdi, rax
0x400208:	call	0x500030
<Block for 0x40020d, 12 bytes>
0x40020d:	lea	rax, [rbp - 0x30]
0x400211:	mov	rdi, rax
0x400214:	call	0x400354
<Block for 0x400219, 12 bytes>
0x400219:	lea	rax, [rbp - 0x50]
0x40021d:	mov	rdi, rax
0x400220:	call	0x400354
<Block for 0x400225, 16 bytes>
0x400225:	nop	
0x400226:	mov	rax, qword ptr [rbp - 0x18]
0x40022a:	xor	rax, qword ptr fs:[0x28]
0x400233:	je	0x40026f
<Block for 0x40026f, 7 bytes>
0x40026f:	add	rsp, 0x58
0x400273:	pop	rbx
0x400274:	pop	rbp
0x400275:	ret	
<Block for 0x400235, 2 bytes>
0x400235:	jmp	0x40026a
<Block for 0x40026a, 5 bytes>
0x40026a:	call	0x500028
