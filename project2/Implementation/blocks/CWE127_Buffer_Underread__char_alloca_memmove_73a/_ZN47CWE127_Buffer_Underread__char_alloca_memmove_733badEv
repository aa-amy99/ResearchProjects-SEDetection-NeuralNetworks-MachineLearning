<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003ee
<Block for 0x400028, 54 bytes>
0x400028:	mov	eax, 0x10
0x40002d:	sub	rax, 1
0x400031:	add	rax, 0x6c
0x400035:	mov	ecx, 0x10
0x40003a:	mov	edx, 0
0x40003f:	div	rcx
0x400042:	imul	rax, rax, 0x10
0x400046:	mov	rdx, rax
0x400049:	and	rdx, 0xfffffffffffff000
0x400050:	mov	rcx, rsp
0x400053:	sub	rcx, rdx
0x400056:	mov	rdx, rcx
0x400059:	cmp	rsp, rdx
0x40005c:	je	0x400070
<Block for 0x400070, 26 bytes>
0x400070:	mov	rdx, rax
0x400073:	and	edx, 0xfff
0x400079:	sub	rsp, rdx
0x40007c:	mov	rdx, rax
0x40007f:	and	edx, 0xfff
0x400085:	test	rdx, rdx
0x400088:	je	0x40009a
<Block for 0x40005e, 18 bytes>
0x40005e:	sub	rsp, 0x1000
0x400065:	or	qword ptr [rsp + 0xff8], 0
0x40006e:	jmp	0x400059
<Block for 0x40009a, 41 bytes>
0x40009a:	mov	rax, rsp
0x40009d:	add	rax, 0xf
0x4000a1:	shr	rax, 4
0x4000a5:	shl	rax, 4
0x4000a9:	mov	qword ptr [rbp - 0x58], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x58]
0x4000b1:	mov	edx, 0x63
0x4000b6:	mov	esi, 0x41
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x40008a, 57 bytes>
0x40008a:	and	eax, 0xfff
0x40008f:	sub	rax, 8
0x400093:	add	rax, rsp
0x400096:	or	qword ptr [rax], 0
0x40009a:	mov	rax, rsp
0x40009d:	add	rax, 0xf
0x4000a1:	shr	rax, 4
0x4000a5:	shl	rax, 4
0x4000a9:	mov	qword ptr [rbp - 0x58], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x58]
0x4000b1:	mov	edx, 0x63
0x4000b6:	mov	esi, 0x41
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x400059, 5 bytes>
0x400059:	cmp	rsp, rdx
0x40005c:	je	0x400070
<Block for 0x4000c3, 42 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x58]
0x4000c7:	add	rax, 0x63
0x4000cb:	mov	byte ptr [rax], 0
0x4000ce:	mov	rax, qword ptr [rbp - 0x58]
0x4000d2:	sub	rax, 8
0x4000d6:	mov	qword ptr [rbp - 0x60], rax
0x4000da:	lea	rdx, [rbp - 0x60]
0x4000de:	lea	rax, [rbp - 0x50]
0x4000e2:	mov	rsi, rdx
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x4004e6
<Block for 0x4000ed, 19 bytes>
0x4000ed:	lea	rdx, [rbp - 0x60]
0x4000f1:	lea	rax, [rbp - 0x50]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x4004e6
<Block for 0x400100, 19 bytes>
0x400100:	lea	rdx, [rbp - 0x60]
0x400104:	lea	rax, [rbp - 0x50]
0x400108:	mov	rsi, rdx
0x40010b:	mov	rdi, rax
0x40010e:	call	0x4004e6
<Block for 0x400113, 19 bytes>
0x400113:	lea	rdx, [rbp - 0x50]
0x400117:	lea	rax, [rbp - 0x30]
0x40011b:	mov	rsi, rdx
0x40011e:	mov	rdi, rax
0x400121:	call	0x400520
<Block for 0x400126, 12 bytes>
0x400126:	lea	rax, [rbp - 0x30]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x400132, 12 bytes>
0x400132:	lea	rax, [rbp - 0x30]
0x400136:	mov	rdi, rax
0x400139:	call	0x40040e
<Block for 0x40013e, 12 bytes>
0x40013e:	lea	rax, [rbp - 0x50]
0x400142:	mov	rdi, rax
0x400145:	call	0x40040e
<Block for 0x40014a, 16 bytes>
0x40014a:	nop	
0x40014b:	mov	rax, qword ptr [rbp - 0x18]
0x40014f:	xor	rax, qword ptr fs:[0x28]
0x400158:	je	0x400194
<Block for 0x400194, 6 bytes>
0x400194:	mov	rbx, qword ptr [rbp - 8]
0x400198:	leave	
0x400199:	ret	
<Block for 0x40015a, 2 bytes>
0x40015a:	jmp	0x40018f
<Block for 0x40018f, 5 bytes>
0x40018f:	call	0x500018
