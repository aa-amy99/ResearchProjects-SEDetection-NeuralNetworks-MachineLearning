<Block for 0x400095, 60 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	add	rsp, -0x80
0x4000a1:	mov	rax, qword ptr fs:[0x28]
0x4000aa:	mov	qword ptr [rbp - 8], rax
0x4000ae:	xor	eax, eax
0x4000b0:	mov	rax, qword ptr [rip + 0xfff81]
0x4000b7:	mov	qword ptr [rbp - 0x78], rax
0x4000bb:	lea	rax, [rbp - 0x70]
0x4000bf:	mov	edx, 0x63
0x4000c4:	mov	esi, 0x43
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500008
<Block for 0x4000d1, 16 bytes>
0x4000d1:	mov	byte ptr [rbp - 0xd], 0
0x4000d5:	lea	rax, [rbp - 0x70]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500010
<Block for 0x4000e1, 22 bytes>
0x4000e1:	mov	rdx, rax
0x4000e4:	mov	rcx, qword ptr [rbp - 0x78]
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	rsi, rcx
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500018
<Block for 0x4000f7, 16 bytes>
0x4000f7:	mov	byte ptr [rbp - 0xd], 0
0x4000fb:	lea	rax, [rbp - 0x70]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500020
<Block for 0x400107, 12 bytes>
0x400107:	mov	rax, qword ptr [rbp - 0x78]
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500028
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x400128, 2 bytes>
0x400128:	leave	
0x400129:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500030
