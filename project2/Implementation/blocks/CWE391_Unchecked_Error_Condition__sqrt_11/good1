<Block for 0x400045, 22 bytes>
0x400045:	endbr64	
0x400049:	push	rbp
0x40004a:	mov	rbp, rsp
0x40004d:	sub	rsp, 0x10
0x400051:	mov	eax, 0
0x400056:	call	0x500018
<Block for 0x40005b, 4 bytes>
0x40005b:	test	eax, eax
0x40005d:	je	0x40006d
<Block for 0x40006d, 5 bytes>
0x40006d:	call	0x500028
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rdi, [rip + 0xf2]
0x400066:	call	0x500020
<Block for 0x400072, 23 bytes>
0x400072:	mov	dword ptr [rax], 0
0x400078:	mov	rax, qword ptr [rip + 0x101]
0x40007f:	movq	xmm0, rax
0x400084:	call	0x500008
<Block for 0x40006b, 2 bytes>
0x40006b:	jmp	0x4000c2
<Block for 0x400089, 14 bytes>
0x400089:	movq	rax, xmm0
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	call	0x500028
<Block for 0x4000c2, 3 bytes>
0x4000c2:	nop	
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x400097, 7 bytes>
0x400097:	mov	eax, dword ptr [rax]
0x400099:	cmp	eax, 0x21
0x40009c:	jne	0x4000b4
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0xc8]
0x4000a5:	call	0x500020
<Block for 0x4000b4, 14 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	movq	xmm0, rax
0x4000bd:	call	0x500010
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	edi, 1
0x4000af:	call	0x500030
