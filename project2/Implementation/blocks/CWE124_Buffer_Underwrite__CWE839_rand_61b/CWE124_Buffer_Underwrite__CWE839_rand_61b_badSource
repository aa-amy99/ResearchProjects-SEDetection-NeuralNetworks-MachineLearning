<Block for 0x400000, 21 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], edi
0x400010:	call	0x500000
<Block for 0x400015, 7 bytes>
0x400015:	and	eax, 1
0x400018:	test	eax, eax
0x40001a:	je	0x400039
<Block for 0x400039, 5 bytes>
0x400039:	call	0x500000
<Block for 0x40001c, 5 bytes>
0x40001c:	call	0x500000
<Block for 0x40003e, 10 bytes>
0x40003e:	shl	eax, 0x1e
0x400041:	mov	ebx, eax
0x400043:	call	0x500000
<Block for 0x400021, 10 bytes>
0x400021:	shl	eax, 0x1e
0x400024:	mov	ebx, eax
0x400026:	call	0x500000
<Block for 0x400048, 10 bytes>
0x400048:	shl	eax, 0xf
0x40004b:	xor	ebx, eax
0x40004d:	call	0x500000
<Block for 0x40002b, 10 bytes>
0x40002b:	shl	eax, 0xf
0x40002e:	xor	ebx, eax
0x400030:	call	0x500000
<Block for 0x400052, 17 bytes>
0x400052:	xor	eax, ebx
0x400054:	not	eax
0x400056:	mov	dword ptr [rbp - 0x14], eax
0x400059:	mov	eax, dword ptr [rbp - 0x14]
0x40005c:	add	rsp, 0x18
0x400060:	pop	rbx
0x400061:	pop	rbp
0x400062:	ret	
<Block for 0x400035, 4 bytes>
0x400035:	xor	eax, ebx
0x400037:	jmp	0x400056
<Block for 0x400056, 13 bytes>
0x400056:	mov	dword ptr [rbp - 0x14], eax
0x400059:	mov	eax, dword ptr [rbp - 0x14]
0x40005c:	add	rsp, 0x18
0x400060:	pop	rbx
0x400061:	pop	rbp
0x400062:	ret	
