<Block for 0x40007d, 32 bytes>
0x40007d:	endbr64	
0x400081:	push	rbp
0x400082:	mov	rbp, rsp
0x400085:	push	r12
0x400087:	push	rbx
0x400088:	sub	rsp, 0x10
0x40008c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400093:	mov	edi, 4
0x400098:	call	0x500000
<Block for 0x40009d, 16 bytes>
0x40009d:	mov	rbx, rax
0x4000a0:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a3:	mov	esi, eax
0x4000a5:	mov	rdi, rbx
0x4000a8:	call	0x500028
<Block for 0x4000ad, 13 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x18], rbx
0x4000b1:	mov	rbx, qword ptr [rbp - 0x18]
0x4000b5:	test	rbx, rbx
0x4000b8:	je	0x4000f0
<Block for 0x4000f0, 10 bytes>
0x4000f0:	nop	
0x4000f1:	add	rsp, 0x10
0x4000f5:	pop	rbx
0x4000f6:	pop	r12
0x4000f8:	pop	rbp
0x4000f9:	ret	
<Block for 0x4000ba, 8 bytes>
0x4000ba:	mov	rdi, rbx
0x4000bd:	call	0x500030
<Block for 0x4000c2, 13 bytes>
0x4000c2:	mov	esi, 4
0x4000c7:	mov	rdi, rbx
0x4000ca:	call	0x500018
<Block for 0x4000cf, 2 bytes>
0x4000cf:	jmp	0x4000f0
