<Block for 0x400118, 28 bytes>
0x400118:	endbr64	
0x40011c:	push	rbp
0x40011d:	mov	rbp, rsp
0x400120:	push	r13
0x400122:	push	r12
0x400124:	push	rbx
0x400125:	sub	rsp, 0x18
0x400129:	mov	eax, dword ptr [rip + 0xffed1]
0x40012f:	cmp	eax, 5
0x400132:	je	0x400145
<Block for 0x400145, 5 bytes>
0x400145:	call	0x500008
<Block for 0x400134, 12 bytes>
0x400134:	lea	rdi, [rip + 0x317]
0x40013b:	call	0x500060
<Block for 0x40014a, 12 bytes>
0x40014a:	and	eax, 1
0x40014d:	test	eax, eax
0x40014f:	sete	al
0x400152:	test	al, al
0x400154:	je	0x40018b
<Block for 0x400140, 5 bytes>
0x400140:	jmp	0x40029a
<Block for 0x40018b, 5 bytes>
0x40018b:	call	0x500008
<Block for 0x400156, 10 bytes>
0x400156:	mov	edi, 0x10
0x40015b:	call	0x500010
<Block for 0x40029a, 11 bytes>
0x40029a:	add	rsp, 0x18
0x40029e:	pop	rbx
0x40029f:	pop	r12
0x4002a1:	pop	r13
0x4002a3:	pop	rbp
0x4002a4:	ret	
<Block for 0x400190, 12 bytes>
0x400190:	and	eax, 1
0x400193:	test	eax, eax
0x400195:	sete	al
0x400198:	test	al, al
0x40019a:	je	0x4001d1
<Block for 0x400160, 18 bytes>
0x400160:	mov	rbx, rax
0x400163:	lea	rsi, [rip + 0x2d1]
0x40016a:	mov	rdi, rbx
0x40016d:	call	0x500018
<Block for 0x4001d1, 12 bytes>
0x4001d1:	lea	rdi, [rip + 0x26d]
0x4001d8:	call	0x500060
<Block for 0x40019c, 10 bytes>
0x40019c:	mov	edi, 0x10
0x4001a1:	call	0x500010
<Block for 0x400172, 25 bytes>
0x400172:	mov	rax, qword ptr [rip + 0xffeaf]
0x400179:	mov	rdx, rax
0x40017c:	lea	rsi, [rip + 0xffead]
0x400183:	mov	rdi, rbx
0x400186:	call	0x500038
<Block for 0x4001dd, 5 bytes>
0x4001dd:	jmp	0x40029a
<Block for 0x4001a6, 18 bytes>
0x4001a6:	mov	rbx, rax
0x4001a9:	lea	rsi, [rip + 0x290]
0x4001b0:	mov	rdi, rbx
0x4001b3:	call	0x500040
<Block for 0x4001b8, 25 bytes>
0x4001b8:	mov	rax, qword ptr [rip + 0xffe91]
0x4001bf:	mov	rdx, rax
0x4001c2:	lea	rsi, [rip + 0xffe8f]
0x4001c9:	mov	rdi, rbx
0x4001cc:	call	0x500038
