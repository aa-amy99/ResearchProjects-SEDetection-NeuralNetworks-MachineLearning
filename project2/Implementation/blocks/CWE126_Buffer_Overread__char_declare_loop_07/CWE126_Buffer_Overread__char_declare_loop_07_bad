<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x120]
0x400025:	mov	edx, 0x31
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 32 bytes>
0x400037:	mov	byte ptr [rbp - 0xef], 0
0x40003e:	lea	rax, [rbp - 0xe0]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400057, 15 bytes>
0x400057:	mov	byte ptr [rbp - 0x7d], 0
0x40005b:	mov	eax, dword ptr [rip + 0x2ff]
0x400061:	cmp	eax, 5
0x400064:	jne	0x400074
<Block for 0x400066, 36 bytes>
0x400066:	lea	rax, [rbp - 0x120]
0x40006d:	mov	qword ptr [rbp - 0x138], rax
0x400074:	lea	rax, [rbp - 0x70]
0x400078:	mov	edx, 0x63
0x40007d:	mov	esi, 0x43
0x400082:	mov	rdi, rax
0x400085:	call	0x500000
<Block for 0x400074, 22 bytes>
0x400074:	lea	rax, [rbp - 0x70]
0x400078:	mov	edx, 0x63
0x40007d:	mov	esi, 0x43
0x400082:	mov	rdi, rax
0x400085:	call	0x500000
<Block for 0x40008a, 16 bytes>
0x40008a:	mov	byte ptr [rbp - 0xd], 0
0x40008e:	lea	rax, [rbp - 0x70]
0x400092:	mov	rdi, rax
0x400095:	call	0x500008
<Block for 0x40009a, 20 bytes>
0x40009a:	mov	qword ptr [rbp - 0x128], rax
0x4000a1:	mov	qword ptr [rbp - 0x130], 0
0x4000ac:	jmp	0x4000da
<Block for 0x4000da, 16 bytes>
0x4000da:	mov	rax, qword ptr [rbp - 0x130]
0x4000e1:	cmp	rax, qword ptr [rbp - 0x128]
0x4000e8:	jb	0x4000ae
<Block for 0x4000ae, 60 bytes>
0x4000ae:	mov	rdx, qword ptr [rbp - 0x138]
0x4000b5:	mov	rax, qword ptr [rbp - 0x130]
0x4000bc:	add	rax, rdx
0x4000bf:	movzx	eax, byte ptr [rax]
0x4000c2:	lea	rcx, [rbp - 0x70]
0x4000c6:	mov	rdx, qword ptr [rbp - 0x130]
0x4000cd:	add	rdx, rcx
0x4000d0:	mov	byte ptr [rdx], al
0x4000d2:	add	qword ptr [rbp - 0x130], 1
0x4000da:	mov	rax, qword ptr [rbp - 0x130]
0x4000e1:	cmp	rax, qword ptr [rbp - 0x128]
0x4000e8:	jb	0x4000ae
<Block for 0x4000ea, 16 bytes>
0x4000ea:	mov	byte ptr [rbp - 0xd], 0
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x40010f
<Block for 0x40010f, 2 bytes>
0x40010f:	leave	
0x400110:	ret	
<Block for 0x40010a, 5 bytes>
0x40010a:	call	0x500018
