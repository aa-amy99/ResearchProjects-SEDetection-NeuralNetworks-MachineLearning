<Block for 0x400079, 97 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	sub	rsp, 0x30
0x400085:	mov	rax, qword ptr fs:[0x28]
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	xor	eax, eax
0x400094:	mov	dword ptr [rbp - 0x20], 1
0x40009b:	mov	dword ptr [rbp - 0x1c], 2
0x4000a2:	mov	dword ptr [rbp - 0x18], 3
0x4000a9:	mov	dword ptr [rbp - 0x14], 4
0x4000b0:	mov	dword ptr [rbp - 0x10], 5
0x4000b7:	lea	rax, [rbp - 0x20]
0x4000bb:	mov	qword ptr [rbp - 0x28], rax
0x4000bf:	mov	rax, qword ptr [rbp - 0x28]
0x4000c3:	add	rax, 8
0x4000c7:	movzx	eax, byte ptr [rax]
0x4000ca:	movsx	eax, al
0x4000cd:	mov	dword ptr [rbp - 0x2c], eax
0x4000d0:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d3:	mov	edi, eax
0x4000d5:	call	0x500000
<Block for 0x4000da, 17 bytes>
0x4000da:	nop	
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x4000f0
<Block for 0x4000f0, 2 bytes>
0x4000f0:	leave	
0x4000f1:	ret	
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500008
