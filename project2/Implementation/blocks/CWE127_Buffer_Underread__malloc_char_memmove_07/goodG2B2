<Block for 0x4001b0, 46 bytes>
0x4001b0:	endbr64	
0x4001b4:	push	rbp
0x4001b5:	mov	rbp, rsp
0x4001b8:	add	rsp, -0x80
0x4001bc:	mov	rax, qword ptr fs:[0x28]
0x4001c5:	mov	qword ptr [rbp - 8], rax
0x4001c9:	xor	eax, eax
0x4001cb:	mov	qword ptr [rbp - 0x80], 0
0x4001d3:	mov	eax, dword ptr [rip + 0xc7]
0x4001d9:	cmp	eax, 5
0x4001dc:	jne	0x400226
<Block for 0x4001de, 10 bytes>
0x4001de:	mov	edi, 0x64
0x4001e3:	call	0x500000
<Block for 0x400226, 22 bytes>
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500010
<Block for 0x4001e8, 11 bytes>
0x4001e8:	mov	qword ptr [rbp - 0x78], rax
0x4001ec:	cmp	qword ptr [rbp - 0x78], 0
0x4001f1:	jne	0x4001fd
<Block for 0x40023c, 28 bytes>
0x40023c:	mov	byte ptr [rbp - 0xd], 0
0x400240:	mov	rcx, qword ptr [rbp - 0x80]
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	edx, 0x64
0x40024d:	mov	rsi, rcx
0x400250:	mov	rdi, rax
0x400253:	call	0x500018
<Block for 0x4001f3, 10 bytes>
0x4001f3:	mov	edi, 0xffffffff
0x4001f8:	call	0x500008
<Block for 0x4001fd, 22 bytes>
0x4001fd:	mov	rax, qword ptr [rbp - 0x78]
0x400201:	mov	edx, 0x63
0x400206:	mov	esi, 0x41
0x40020b:	mov	rdi, rax
0x40020e:	call	0x500010
<Block for 0x400258, 16 bytes>
0x400258:	mov	byte ptr [rbp - 0xd], 0
0x40025c:	lea	rax, [rbp - 0x70]
0x400260:	mov	rdi, rax
0x400263:	call	0x500020
<Block for 0x400213, 41 bytes>
0x400213:	mov	rax, qword ptr [rbp - 0x78]
0x400217:	add	rax, 0x63
0x40021b:	mov	byte ptr [rax], 0
0x40021e:	mov	rax, qword ptr [rbp - 0x78]
0x400222:	mov	qword ptr [rbp - 0x80], rax
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500010
<Block for 0x400268, 16 bytes>
0x400268:	nop	
0x400269:	mov	rax, qword ptr [rbp - 8]
0x40026d:	xor	rax, qword ptr fs:[0x28]
0x400276:	je	0x40027d
<Block for 0x40027d, 2 bytes>
0x40027d:	leave	
0x40027e:	ret	
<Block for 0x400278, 5 bytes>
0x400278:	call	0x500028
