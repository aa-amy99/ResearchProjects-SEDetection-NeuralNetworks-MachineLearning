<Block for 0x4000d3, 46 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	add	rsp, -0x80
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	qword ptr [rbp - 0x80], 0
0x4000f6:	mov	eax, dword ptr [rip + 0x1a4]
0x4000fc:	cmp	eax, 5
0x4000ff:	je	0x40010f
<Block for 0x40010f, 10 bytes>
0x40010f:	mov	edi, 0x64
0x400114:	call	0x500000
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0x19c]
0x400108:	call	0x500020
<Block for 0x400119, 11 bytes>
0x400119:	mov	qword ptr [rbp - 0x78], rax
0x40011d:	cmp	qword ptr [rbp - 0x78], 0
0x400122:	jne	0x40012e
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x400157
<Block for 0x400124, 10 bytes>
0x400124:	mov	edi, 0xffffffff
0x400129:	call	0x500008
<Block for 0x40012e, 22 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x78]
0x400132:	mov	edx, 0x63
0x400137:	mov	esi, 0x41
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500010
<Block for 0x400157, 22 bytes>
0x400157:	lea	rax, [rbp - 0x70]
0x40015b:	mov	edx, 0x63
0x400160:	mov	esi, 0x43
0x400165:	mov	rdi, rax
0x400168:	call	0x500010
<Block for 0x400144, 41 bytes>
0x400144:	mov	rax, qword ptr [rbp - 0x78]
0x400148:	add	rax, 0x63
0x40014c:	mov	byte ptr [rax], 0
0x40014f:	mov	rax, qword ptr [rbp - 0x78]
0x400153:	mov	qword ptr [rbp - 0x80], rax
0x400157:	lea	rax, [rbp - 0x70]
0x40015b:	mov	edx, 0x63
0x400160:	mov	esi, 0x43
0x400165:	mov	rdi, rax
0x400168:	call	0x500010
<Block for 0x40016d, 28 bytes>
0x40016d:	mov	byte ptr [rbp - 0xd], 0
0x400171:	mov	rcx, qword ptr [rbp - 0x80]
0x400175:	lea	rax, [rbp - 0x70]
0x400179:	mov	edx, 0x64
0x40017e:	mov	rsi, rcx
0x400181:	mov	rdi, rax
0x400184:	call	0x500018
<Block for 0x400189, 16 bytes>
0x400189:	mov	byte ptr [rbp - 0xd], 0
0x40018d:	lea	rax, [rbp - 0x70]
0x400191:	mov	rdi, rax
0x400194:	call	0x500020
<Block for 0x400199, 16 bytes>
0x400199:	nop	
0x40019a:	mov	rax, qword ptr [rbp - 8]
0x40019e:	xor	rax, qword ptr fs:[0x28]
0x4001a7:	je	0x4001ae
<Block for 0x4001ae, 2 bytes>
0x4001ae:	leave	
0x4001af:	ret	
<Block for 0x4001a9, 5 bytes>
0x4001a9:	call	0x500028
