<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003ec
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	edi, 0x32
0x400035:	call	0x500000
<Block for 0x40003a, 13 bytes>
0x40003a:	mov	qword ptr [rbp - 0x60], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x60]
0x400042:	test	rax, rax
0x400045:	jne	0x400051
<Block for 0x400047, 10 bytes>
0x400047:	mov	edi, 0xffffffff
0x40004c:	call	0x500008
<Block for 0x400051, 22 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x60]
0x400055:	mov	edx, 0x31
0x40005a:	mov	esi, 0x41
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x400067, 23 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x60]
0x40006b:	add	rax, 0x31
0x40006f:	mov	byte ptr [rax], 0
0x400072:	lea	rax, [rbp - 0x50]
0x400076:	mov	rdi, rax
0x400079:	call	0x40057e
<Block for 0x40007e, 23 bytes>
0x40007e:	mov	qword ptr [rbp - 0x58], rax
0x400082:	lea	rdx, [rbp - 0x58]
0x400086:	lea	rax, [rbp - 0x30]
0x40008a:	mov	rsi, rdx
0x40008d:	mov	rdi, rax
0x400090:	call	0x4005ce
<Block for 0x400095, 28 bytes>
0x400095:	lea	rdx, [rbp - 0x60]
0x400099:	mov	rsi, qword ptr [rbp - 0x30]
0x40009d:	lea	rax, [rbp - 0x50]
0x4000a1:	mov	rcx, rdx
0x4000a4:	mov	edx, 1
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x4005fc
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rax, [rbp - 0x50]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x40057e
<Block for 0x4000bd, 23 bytes>
0x4000bd:	mov	qword ptr [rbp - 0x58], rax
0x4000c1:	lea	rdx, [rbp - 0x58]
0x4000c5:	lea	rax, [rbp - 0x30]
0x4000c9:	mov	rsi, rdx
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x4005ce
<Block for 0x4000d4, 28 bytes>
0x4000d4:	lea	rdx, [rbp - 0x60]
0x4000d8:	mov	rsi, qword ptr [rbp - 0x30]
0x4000dc:	lea	rax, [rbp - 0x50]
0x4000e0:	mov	rcx, rdx
0x4000e3:	mov	edx, 1
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x4005fc
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rax, [rbp - 0x50]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x40057e
<Block for 0x4000fc, 23 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x58], rax
0x400100:	lea	rdx, [rbp - 0x58]
0x400104:	lea	rax, [rbp - 0x30]
0x400108:	mov	rsi, rdx
0x40010b:	mov	rdi, rax
0x40010e:	call	0x4005ce
<Block for 0x400113, 28 bytes>
0x400113:	lea	rdx, [rbp - 0x60]
0x400117:	mov	rsi, qword ptr [rbp - 0x30]
0x40011b:	lea	rax, [rbp - 0x50]
0x40011f:	mov	rcx, rdx
0x400122:	mov	edx, 1
0x400127:	mov	rdi, rax
0x40012a:	call	0x4005fc
<Block for 0x40012f, 19 bytes>
0x40012f:	lea	rdx, [rbp - 0x50]
0x400133:	lea	rax, [rbp - 0x30]
0x400137:	mov	rsi, rdx
0x40013a:	mov	rdi, rax
0x40013d:	call	0x4006c2
<Block for 0x400142, 12 bytes>
0x400142:	lea	rax, [rbp - 0x30]
0x400146:	mov	rdi, rax
0x400149:	call	0x500018
<Block for 0x40014e, 12 bytes>
0x40014e:	lea	rax, [rbp - 0x30]
0x400152:	mov	rdi, rax
0x400155:	call	0x400536
<Block for 0x40015a, 12 bytes>
0x40015a:	lea	rax, [rbp - 0x50]
0x40015e:	mov	rdi, rax
0x400161:	call	0x400536
<Block for 0x400166, 16 bytes>
0x400166:	nop	
0x400167:	mov	rax, qword ptr [rbp - 0x18]
0x40016b:	xor	rax, qword ptr fs:[0x28]
0x400174:	je	0x4001b0
<Block for 0x4001b0, 7 bytes>
0x4001b0:	add	rsp, 0x58
0x4001b4:	pop	rbx
0x4001b5:	pop	rbp
0x4001b6:	ret	
<Block for 0x400176, 2 bytes>
0x400176:	jmp	0x4001ab
<Block for 0x4001ab, 5 bytes>
0x4001ab:	call	0x500028
