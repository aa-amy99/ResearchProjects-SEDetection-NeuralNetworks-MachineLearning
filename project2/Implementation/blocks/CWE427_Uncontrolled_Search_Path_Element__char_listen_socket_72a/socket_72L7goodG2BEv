<Block for 0x400421, 46 bytes>
0x400421:	endbr64	
0x400425:	push	rbp
0x400426:	mov	rbp, rsp
0x400429:	push	rbx
0x40042a:	sub	rsp, 0x168
0x400431:	mov	rax, qword ptr fs:[0x28]
0x40043a:	mov	qword ptr [rbp - 0x18], rax
0x40043e:	xor	eax, eax
0x400440:	lea	rax, [rbp - 0x160]
0x400447:	mov	rdi, rax
0x40044a:	call	0x4006ea
<Block for 0x40044f, 52 bytes>
0x40044f:	movabs	rax, 0x3d48544150
0x400459:	mov	edx, 0
0x40045e:	mov	qword ptr [rbp - 0x120], rax
0x400465:	mov	qword ptr [rbp - 0x118], rdx
0x40046c:	lea	rdx, [rbp - 0x110]
0x400473:	mov	eax, 0
0x400478:	mov	ecx, 0x1d
0x40047d:	mov	rdi, rdx
0x400480:	rep stosq	qword ptr [rdi], rax
<Block for 0x400483, 54 bytes>
0x400483:	mov	rdx, rdi
0x400486:	mov	word ptr [rdx], ax
0x400489:	add	rdx, 2
0x40048d:	lea	rax, [rbp - 0x120]
0x400494:	mov	qword ptr [rbp - 0x170], rax
0x40049b:	mov	rdx, qword ptr [rbp - 0x170]
0x4004a2:	mov	rax, rdx
0x4004a5:	mov	rcx, -1
0x4004ac:	mov	rsi, rax
0x4004af:	mov	eax, 0
0x4004b4:	mov	rdi, rsi
0x4004b7:	repne scasb	al, byte ptr [rdi]
<Block for 0x400480, 3 bytes>
0x400480:	rep stosq	qword ptr [rdi], rax
<Block for 0x4004b9, 38 bytes>
0x4004b9:	mov	rax, rcx
0x4004bc:	not	rax
0x4004bf:	sub	rax, 1
0x4004c3:	add	rax, rdx
0x4004c6:	mov	dword ptr [rax], 0x6e69622f
0x4004cc:	mov	byte ptr [rax + 4], 0
0x4004d0:	lea	rax, [rbp - 0x160]
0x4004d7:	mov	rdi, rax
0x4004da:	call	0x40087e
<Block for 0x4004b7, 2 bytes>
0x4004b7:	repne scasb	al, byte ptr [rdi]
<Block for 0x4004df, 32 bytes>
0x4004df:	mov	qword ptr [rbp - 0x168], rax
0x4004e6:	lea	rdx, [rbp - 0x168]
0x4004ed:	lea	rax, [rbp - 0x140]
0x4004f4:	mov	rsi, rdx
0x4004f7:	mov	rdi, rax
0x4004fa:	call	0x4008ce
<Block for 0x4004ff, 37 bytes>
0x4004ff:	lea	rdx, [rbp - 0x170]
0x400506:	mov	rsi, qword ptr [rbp - 0x140]
0x40050d:	lea	rax, [rbp - 0x160]
0x400514:	mov	rcx, rdx
0x400517:	mov	edx, 1
0x40051c:	mov	rdi, rax
0x40051f:	call	0x4008fc
<Block for 0x400524, 15 bytes>
0x400524:	lea	rax, [rbp - 0x160]
0x40052b:	mov	rdi, rax
0x40052e:	call	0x40087e
<Block for 0x400533, 32 bytes>
0x400533:	mov	qword ptr [rbp - 0x168], rax
0x40053a:	lea	rdx, [rbp - 0x168]
0x400541:	lea	rax, [rbp - 0x140]
0x400548:	mov	rsi, rdx
0x40054b:	mov	rdi, rax
0x40054e:	call	0x4008ce
<Block for 0x400553, 37 bytes>
0x400553:	lea	rdx, [rbp - 0x170]
0x40055a:	mov	rsi, qword ptr [rbp - 0x140]
0x400561:	lea	rax, [rbp - 0x160]
0x400568:	mov	rcx, rdx
0x40056b:	mov	edx, 1
0x400570:	mov	rdi, rax
0x400573:	call	0x4008fc
<Block for 0x400578, 15 bytes>
0x400578:	lea	rax, [rbp - 0x160]
0x40057f:	mov	rdi, rax
0x400582:	call	0x40087e
<Block for 0x400587, 32 bytes>
0x400587:	mov	qword ptr [rbp - 0x168], rax
0x40058e:	lea	rdx, [rbp - 0x168]
0x400595:	lea	rax, [rbp - 0x140]
0x40059c:	mov	rsi, rdx
0x40059f:	mov	rdi, rax
0x4005a2:	call	0x4008ce
<Block for 0x4005a7, 37 bytes>
0x4005a7:	lea	rdx, [rbp - 0x170]
0x4005ae:	mov	rsi, qword ptr [rbp - 0x140]
0x4005b5:	lea	rax, [rbp - 0x160]
0x4005bc:	mov	rcx, rdx
0x4005bf:	mov	edx, 1
0x4005c4:	mov	rdi, rax
0x4005c7:	call	0x4008fc
<Block for 0x4005cc, 25 bytes>
0x4005cc:	lea	rdx, [rbp - 0x160]
0x4005d3:	lea	rax, [rbp - 0x140]
0x4005da:	mov	rsi, rdx
0x4005dd:	mov	rdi, rax
0x4005e0:	call	0x4009c2
<Block for 0x4005e5, 15 bytes>
0x4005e5:	lea	rax, [rbp - 0x140]
0x4005ec:	mov	rdi, rax
0x4005ef:	call	0x500068
<Block for 0x4005f4, 15 bytes>
0x4005f4:	lea	rax, [rbp - 0x140]
0x4005fb:	mov	rdi, rax
0x4005fe:	call	0x400836
<Block for 0x400603, 15 bytes>
0x400603:	lea	rax, [rbp - 0x160]
0x40060a:	mov	rdi, rax
0x40060d:	call	0x400836
<Block for 0x400612, 16 bytes>
0x400612:	nop	
0x400613:	mov	rax, qword ptr [rbp - 0x18]
0x400617:	xor	rax, qword ptr fs:[0x28]
0x400620:	je	0x400662
<Block for 0x400662, 10 bytes>
0x400662:	add	rsp, 0x168
0x400669:	pop	rbx
0x40066a:	pop	rbp
0x40066b:	ret	
<Block for 0x400622, 2 bytes>
0x400622:	jmp	0x40065d
<Block for 0x40065d, 5 bytes>
0x40065d:	call	0x500060
