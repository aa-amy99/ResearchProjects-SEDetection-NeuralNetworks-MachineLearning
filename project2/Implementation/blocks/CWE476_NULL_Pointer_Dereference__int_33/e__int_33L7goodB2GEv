<Block for 0x4000bb, 61 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x20
0x4000c7:	mov	rax, qword ptr fs:[0x28]
0x4000d0:	mov	qword ptr [rbp - 8], rax
0x4000d4:	xor	eax, eax
0x4000d6:	lea	rax, [rbp - 0x20]
0x4000da:	mov	qword ptr [rbp - 0x18], rax
0x4000de:	mov	qword ptr [rbp - 0x20], 0
0x4000e6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ea:	mov	rax, qword ptr [rax]
0x4000ed:	mov	qword ptr [rbp - 0x10], rax
0x4000f1:	cmp	qword ptr [rbp - 0x10], 0
0x4000f6:	je	0x400107
<Block for 0x400107, 12 bytes>
0x400107:	lea	rdi, [rip + 0x31]
0x40010e:	call	0x500010
<Block for 0x4000f8, 13 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 0x10]
0x4000fc:	mov	eax, dword ptr [rax]
0x4000fe:	mov	edi, eax
0x400100:	call	0x500000
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x400105, 2 bytes>
0x400105:	jmp	0x400113
<Block for 0x400128, 2 bytes>
0x400128:	leave	
0x400129:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500008
