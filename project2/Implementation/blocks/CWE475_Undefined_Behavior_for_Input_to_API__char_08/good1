<Block for 0x400134, 37 bytes>
0x400134:	endbr64	
0x400138:	push	rbp
0x400139:	mov	rbp, rsp
0x40013c:	add	rsp, -0x80
0x400140:	mov	rax, qword ptr fs:[0x28]
0x400149:	mov	qword ptr [rbp - 8], rax
0x40014d:	xor	eax, eax
0x40014f:	mov	eax, 0
0x400154:	call	0x40000f
<Block for 0x400159, 4 bytes>
0x400159:	test	eax, eax
0x40015b:	je	0x40016e
<Block for 0x40016e, 198 bytes>
0x40016e:	mov	qword ptr [rbp - 0x70], 0
0x400176:	mov	qword ptr [rbp - 0x68], 0
0x40017e:	mov	qword ptr [rbp - 0x60], 0
0x400186:	mov	qword ptr [rbp - 0x58], 0
0x40018e:	mov	qword ptr [rbp - 0x50], 0
0x400196:	mov	qword ptr [rbp - 0x48], 0
0x40019e:	mov	qword ptr [rbp - 0x40], 0
0x4001a6:	mov	qword ptr [rbp - 0x38], 0
0x4001ae:	mov	qword ptr [rbp - 0x30], 0
0x4001b6:	mov	qword ptr [rbp - 0x28], 0
0x4001be:	mov	qword ptr [rbp - 0x20], 0
0x4001c6:	mov	qword ptr [rbp - 0x18], 0
0x4001ce:	mov	dword ptr [rbp - 0x10], 0
0x4001d5:	lea	rax, [rbp - 0x70]
0x4001d9:	mov	qword ptr [rbp - 0x78], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0x78]
0x4001e1:	movabs	rdx, 0x6867666564636261
0x4001eb:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4001f5:	mov	qword ptr [rax], rdx
0x4001f8:	mov	qword ptr [rax + 8], rcx
0x4001fc:	movabs	rsi, 0x7877767574737271
0x400206:	mov	qword ptr [rax + 0x10], rsi
0x40020a:	mov	word ptr [rax + 0x18], 0x7a79
0x400210:	mov	byte ptr [rax + 0x1a], 0
0x400214:	mov	rax, qword ptr [rbp - 0x78]
0x400218:	lea	rcx, [rax + 4]
0x40021c:	mov	rax, qword ptr [rbp - 0x78]
0x400220:	add	rax, 6
0x400224:	mov	edx, 0xa
0x400229:	mov	rsi, rcx
0x40022c:	mov	rdi, rax
0x40022f:	call	0x500018
<Block for 0x40015d, 12 bytes>
0x40015d:	lea	rdi, [rip + 0x228]
0x400164:	call	0x500008
<Block for 0x400234, 12 bytes>
0x400234:	mov	rax, qword ptr [rbp - 0x78]
0x400238:	mov	rdi, rax
0x40023b:	call	0x500008
<Block for 0x400169, 5 bytes>
0x400169:	jmp	0x400240
<Block for 0x400240, 16 bytes>
0x400240:	nop	
0x400241:	mov	rax, qword ptr [rbp - 8]
0x400245:	xor	rax, qword ptr fs:[0x28]
0x40024e:	je	0x400255
<Block for 0x400255, 2 bytes>
0x400255:	leave	
0x400256:	ret	
<Block for 0x400250, 5 bytes>
0x400250:	call	0x500010
