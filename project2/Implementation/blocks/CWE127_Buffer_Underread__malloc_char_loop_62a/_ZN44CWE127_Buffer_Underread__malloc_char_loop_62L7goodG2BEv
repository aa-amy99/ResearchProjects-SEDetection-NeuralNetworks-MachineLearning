<Block for 0x4000a1, 47 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	add	rsp, -0x80
0x4000ad:	mov	rax, qword ptr fs:[0x28]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	xor	eax, eax
0x4000bc:	mov	qword ptr [rbp - 0x80], 0
0x4000c4:	lea	rax, [rbp - 0x80]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500020
<Block for 0x4000d0, 22 bytes>
0x4000d0:	lea	rax, [rbp - 0x70]
0x4000d4:	mov	edx, 0x63
0x4000d9:	mov	esi, 0x43
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500008
<Block for 0x4000e6, 19 bytes>
0x4000e6:	mov	byte ptr [rbp - 0xd], 0
0x4000ea:	mov	qword ptr [rbp - 0x78], 0
0x4000f2:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000f7:	ja	0x40011b
<Block for 0x4000f9, 34 bytes>
0x4000f9:	mov	rdx, qword ptr [rbp - 0x80]
0x4000fd:	mov	rax, qword ptr [rbp - 0x78]
0x400101:	add	rax, rdx
0x400104:	movzx	eax, byte ptr [rax]
0x400107:	lea	rcx, [rbp - 0x70]
0x40010b:	mov	rdx, qword ptr [rbp - 0x78]
0x40010f:	add	rdx, rcx
0x400112:	mov	byte ptr [rdx], al
0x400114:	add	qword ptr [rbp - 0x78], 1
0x400119:	jmp	0x4000f2
<Block for 0x40011b, 16 bytes>
0x40011b:	mov	byte ptr [rbp - 0xd], 0
0x40011f:	lea	rax, [rbp - 0x70]
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x4000f2, 7 bytes>
0x4000f2:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000f7:	ja	0x40011b
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500018
