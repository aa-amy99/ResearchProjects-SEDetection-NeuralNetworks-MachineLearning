<Block for 0x400048, 22 bytes>
0x400048:	endbr64	
0x40004c:	push	rbp
0x40004d:	mov	rbp, rsp
0x400050:	sub	rsp, 0x10
0x400054:	mov	eax, 0
0x400059:	call	0x500018
<Block for 0x40005e, 4 bytes>
0x40005e:	test	eax, eax
0x400060:	je	0x400070
<Block for 0x400070, 27 bytes>
0x400070:	mov	qword ptr [rbp - 8], 0
0x400078:	lea	rsi, [rip + 0xc0]
0x40007f:	lea	rdi, [rip + 0xbc]
0x400086:	call	0x500008
<Block for 0x400062, 12 bytes>
0x400062:	lea	rdi, [rip + 0xe2]
0x400069:	call	0x500020
<Block for 0x40008b, 11 bytes>
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	cmp	qword ptr [rbp - 8], 0
0x400094:	jne	0x4000ac
<Block for 0x40006e, 2 bytes>
0x40006e:	jmp	0x4000b8
<Block for 0x400096, 12 bytes>
0x400096:	lea	rdi, [rip + 0xc3]
0x40009d:	call	0x500020
<Block for 0x4000ac, 12 bytes>
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500010
<Block for 0x4000b8, 3 bytes>
0x4000b8:	nop	
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000a2, 10 bytes>
0x4000a2:	mov	edi, 1
0x4000a7:	call	0x500028
