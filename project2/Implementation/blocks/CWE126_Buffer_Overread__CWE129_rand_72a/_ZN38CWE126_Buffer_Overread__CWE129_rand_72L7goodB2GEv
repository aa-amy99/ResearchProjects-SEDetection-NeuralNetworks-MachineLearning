<Block for 0x400338, 40 bytes>
0x400338:	endbr64	
0x40033c:	push	rbp
0x40033d:	mov	rbp, rsp
0x400340:	push	rbx
0x400341:	sub	rsp, 0x58
0x400345:	mov	rax, qword ptr fs:[0x28]
0x40034e:	mov	qword ptr [rbp - 0x18], rax
0x400352:	xor	eax, eax
0x400354:	lea	rax, [rbp - 0x50]
0x400358:	mov	rdi, rax
0x40035b:	call	0x400578
<Block for 0x400360, 12 bytes>
0x400360:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400367:	call	0x500000
<Block for 0x40036c, 7 bytes>
0x40036c:	and	eax, 1
0x40036f:	test	eax, eax
0x400371:	je	0x400390
<Block for 0x400390, 5 bytes>
0x400390:	call	0x500000
<Block for 0x400373, 5 bytes>
0x400373:	call	0x500000
<Block for 0x400395, 10 bytes>
0x400395:	shl	eax, 0x1e
0x400398:	mov	ebx, eax
0x40039a:	call	0x500000
<Block for 0x400378, 10 bytes>
0x400378:	shl	eax, 0x1e
0x40037b:	mov	ebx, eax
0x40037d:	call	0x500000
<Block for 0x40039f, 10 bytes>
0x40039f:	shl	eax, 0xf
0x4003a2:	xor	ebx, eax
0x4003a4:	call	0x500000
<Block for 0x400382, 10 bytes>
0x400382:	shl	eax, 0xf
0x400385:	xor	ebx, eax
0x400387:	call	0x500000
<Block for 0x4003a9, 19 bytes>
0x4003a9:	xor	eax, ebx
0x4003ab:	not	eax
0x4003ad:	mov	dword ptr [rbp - 0x5c], eax
0x4003b0:	lea	rax, [rbp - 0x50]
0x4003b4:	mov	rdi, rax
0x4003b7:	call	0x400722
<Block for 0x40038c, 4 bytes>
0x40038c:	xor	eax, ebx
0x40038e:	jmp	0x4003ad
<Block for 0x4003bc, 23 bytes>
0x4003bc:	mov	qword ptr [rbp - 0x58], rax
0x4003c0:	lea	rdx, [rbp - 0x58]
0x4003c4:	lea	rax, [rbp - 0x30]
0x4003c8:	mov	rsi, rdx
0x4003cb:	mov	rdi, rax
0x4003ce:	call	0x400772
<Block for 0x4003ad, 15 bytes>
0x4003ad:	mov	dword ptr [rbp - 0x5c], eax
0x4003b0:	lea	rax, [rbp - 0x50]
0x4003b4:	mov	rdi, rax
0x4003b7:	call	0x400722
<Block for 0x4003d3, 28 bytes>
0x4003d3:	lea	rdx, [rbp - 0x5c]
0x4003d7:	mov	rsi, qword ptr [rbp - 0x30]
0x4003db:	lea	rax, [rbp - 0x50]
0x4003df:	mov	rcx, rdx
0x4003e2:	mov	edx, 1
0x4003e7:	mov	rdi, rax
0x4003ea:	call	0x4007a0
<Block for 0x4003ef, 12 bytes>
0x4003ef:	lea	rax, [rbp - 0x50]
0x4003f3:	mov	rdi, rax
0x4003f6:	call	0x400722
<Block for 0x4003fb, 23 bytes>
0x4003fb:	mov	qword ptr [rbp - 0x58], rax
0x4003ff:	lea	rdx, [rbp - 0x58]
0x400403:	lea	rax, [rbp - 0x30]
0x400407:	mov	rsi, rdx
0x40040a:	mov	rdi, rax
0x40040d:	call	0x400772
<Block for 0x400412, 28 bytes>
0x400412:	lea	rdx, [rbp - 0x5c]
0x400416:	mov	rsi, qword ptr [rbp - 0x30]
0x40041a:	lea	rax, [rbp - 0x50]
0x40041e:	mov	rcx, rdx
0x400421:	mov	edx, 1
0x400426:	mov	rdi, rax
0x400429:	call	0x4007a0
<Block for 0x40042e, 12 bytes>
0x40042e:	lea	rax, [rbp - 0x50]
0x400432:	mov	rdi, rax
0x400435:	call	0x400722
<Block for 0x40043a, 23 bytes>
0x40043a:	mov	qword ptr [rbp - 0x58], rax
0x40043e:	lea	rdx, [rbp - 0x58]
0x400442:	lea	rax, [rbp - 0x30]
0x400446:	mov	rsi, rdx
0x400449:	mov	rdi, rax
0x40044c:	call	0x400772
<Block for 0x400451, 28 bytes>
0x400451:	lea	rdx, [rbp - 0x5c]
0x400455:	mov	rsi, qword ptr [rbp - 0x30]
0x400459:	lea	rax, [rbp - 0x50]
0x40045d:	mov	rcx, rdx
0x400460:	mov	edx, 1
0x400465:	mov	rdi, rax
0x400468:	call	0x4007a0
<Block for 0x40046d, 19 bytes>
0x40046d:	lea	rdx, [rbp - 0x50]
0x400471:	lea	rax, [rbp - 0x30]
0x400475:	mov	rsi, rdx
0x400478:	mov	rdi, rax
0x40047b:	call	0x400866
<Block for 0x400480, 12 bytes>
0x400480:	lea	rax, [rbp - 0x30]
0x400484:	mov	rdi, rax
0x400487:	call	0x500028
<Block for 0x40048c, 12 bytes>
0x40048c:	lea	rax, [rbp - 0x30]
0x400490:	mov	rdi, rax
0x400493:	call	0x4006da
<Block for 0x400498, 12 bytes>
0x400498:	lea	rax, [rbp - 0x50]
0x40049c:	mov	rdi, rax
0x40049f:	call	0x4006da
<Block for 0x4004a4, 16 bytes>
0x4004a4:	nop	
0x4004a5:	mov	rax, qword ptr [rbp - 0x18]
0x4004a9:	xor	rax, qword ptr fs:[0x28]
0x4004b2:	je	0x4004ee
<Block for 0x4004ee, 7 bytes>
0x4004ee:	add	rsp, 0x58
0x4004f2:	pop	rbx
0x4004f3:	pop	rbp
0x4004f4:	ret	
<Block for 0x4004b4, 2 bytes>
0x4004b4:	jmp	0x4004e9
<Block for 0x4004e9, 5 bytes>
0x4004e9:	call	0x500018
