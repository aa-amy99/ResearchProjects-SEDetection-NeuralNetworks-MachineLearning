<Block for 0x4000b4, 55 bytes>
0x4000b4:	endbr64	
0x4000b8:	push	rbp
0x4000b9:	mov	rbp, rsp
0x4000bc:	sub	rsp, 0xf0
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	lea	rax, [rbp - 0xe0]
0x4000d9:	mov	edx, 0x63
0x4000de:	mov	esi, 0x41
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500000
<Block for 0x4000eb, 15 bytes>
0x4000eb:	mov	byte ptr [rbp - 0x7d], 0
0x4000ef:	mov	eax, dword ptr [rip + 0xfff13]
0x4000f5:	cmp	eax, 5
0x4000f8:	je	0x400108
<Block for 0x400108, 36 bytes>
0x400108:	lea	rax, [rbp - 0xe0]
0x40010f:	mov	qword ptr [rbp - 0xe8], rax
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x140]
0x400101:	call	0x500018
<Block for 0x40012c, 31 bytes>
0x40012c:	mov	byte ptr [rbp - 0xd], 0
0x400130:	mov	rcx, qword ptr [rbp - 0xe8]
0x400137:	lea	rax, [rbp - 0x70]
0x40013b:	mov	edx, 0x64
0x400140:	mov	rsi, rcx
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x400116
<Block for 0x40014b, 16 bytes>
0x40014b:	mov	byte ptr [rbp - 0xd], 0
0x40014f:	lea	rax, [rbp - 0x70]
0x400153:	mov	rdi, rax
0x400156:	call	0x500018
<Block for 0x400116, 22 bytes>
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500020
