<Block for 0x400054, 18 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	mov	eax, 0
0x400061:	call	0x500000
<Block for 0x400066, 4 bytes>
0x400066:	test	eax, eax
0x400068:	je	0x400091
<Block for 0x400091, 20 bytes>
0x400091:	mov	rax, qword ptr [rip + 0xfff70]
0x400098:	mov	rsi, rax
0x40009b:	mov	edi, 0x41
0x4000a0:	call	0x500010
<Block for 0x40006a, 20 bytes>
0x40006a:	mov	rax, qword ptr [rip + 0xfff97]
0x400071:	mov	rsi, rax
0x400074:	mov	edi, 0x41
0x400079:	call	0x500010
<Block for 0x4000a5, 5 bytes>
0x4000a5:	cmp	eax, -1
0x4000a8:	jne	0x4000b6
<Block for 0x40007e, 5 bytes>
0x40007e:	cmp	eax, -1
0x400081:	jne	0x4000b6
<Block for 0x4000aa, 12 bytes>
0x4000aa:	lea	rdi, [rip + 0x1d]
0x4000b1:	call	0x500018
<Block for 0x4000b6, 3 bytes>
0x4000b6:	nop	
0x4000b7:	pop	rbp
0x4000b8:	ret	
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0x44]
0x40008a:	call	0x500018
<Block for 0x40008f, 2 bytes>
0x40008f:	jmp	0x4000b6
