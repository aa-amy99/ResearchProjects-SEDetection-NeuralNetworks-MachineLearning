<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	eax, dword ptr [rip + 0xfffd7]
0x400029:	cmp	eax, 5
0x40002c:	jne	0x400069
<Block for 0x40002e, 10 bytes>
0x40002e:	mov	edi, 0x64
0x400033:	call	0x500008
<Block for 0x400069, 22 bytes>
0x400069:	lea	rax, [rbp - 0x70]
0x40006d:	mov	edx, 0x63
0x400072:	mov	esi, 0x43
0x400077:	mov	rdi, rax
0x40007a:	call	0x500010
<Block for 0x400038, 26 bytes>
0x400038:	mov	qword ptr [rbp - 0x78], rax
0x40003c:	mov	rax, qword ptr [rbp - 0x78]
0x400040:	mov	edx, 0x63
0x400045:	mov	esi, 0x41
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500010
<Block for 0x40007f, 23 bytes>
0x40007f:	mov	byte ptr [rbp - 0xd], 0
0x400083:	lea	rdx, [rbp - 0x70]
0x400087:	mov	rax, qword ptr [rbp - 0x80]
0x40008b:	mov	rsi, rdx
0x40008e:	mov	rdi, rax
0x400091:	call	0x500018
<Block for 0x400052, 45 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x78]
0x400056:	add	rax, 0x63
0x40005a:	mov	byte ptr [rax], 0
0x40005d:	mov	rax, qword ptr [rbp - 0x78]
0x400061:	sub	rax, 8
0x400065:	mov	qword ptr [rbp - 0x80], rax
0x400069:	lea	rax, [rbp - 0x70]
0x40006d:	mov	edx, 0x63
0x400072:	mov	esi, 0x43
0x400077:	mov	rdi, rax
0x40007a:	call	0x500010
<Block for 0x400096, 12 bytes>
0x400096:	mov	rax, qword ptr [rbp - 0x80]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500020
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x4000b7, 2 bytes>
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500028
