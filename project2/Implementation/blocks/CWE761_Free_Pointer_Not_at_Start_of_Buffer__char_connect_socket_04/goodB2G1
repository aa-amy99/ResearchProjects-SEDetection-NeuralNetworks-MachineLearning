<Block for 0x4001d1, 37 bytes>
0x4001d1:	endbr64	
0x4001d5:	push	rbp
0x4001d6:	mov	rbp, rsp
0x4001d9:	sub	rsp, 0x50
0x4001dd:	mov	rax, qword ptr fs:[0x28]
0x4001e6:	mov	qword ptr [rbp - 8], rax
0x4001ea:	xor	eax, eax
0x4001ec:	mov	edi, 0x64
0x4001f1:	call	0x500000
<Block for 0x4001f6, 11 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x38], rax
0x4001fa:	cmp	qword ptr [rbp - 0x38], 0
0x4001ff:	jne	0x40020b
<Block for 0x400201, 10 bytes>
0x400201:	mov	edi, 0xffffffff
0x400206:	call	0x500008
<Block for 0x40020b, 26 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x38]
0x40020f:	mov	byte ptr [rax], 0
0x400212:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400219:	mov	rax, qword ptr [rbp - 0x38]
0x40021d:	mov	rdi, rax
0x400220:	call	0x500010
<Block for 0x400225, 24 bytes>
0x400225:	mov	qword ptr [rbp - 0x30], rax
0x400229:	mov	edx, 6
0x40022e:	mov	esi, 1
0x400233:	mov	edi, 2
0x400238:	call	0x500018
<Block for 0x40023d, 13 bytes>
0x40023d:	mov	dword ptr [rbp - 0x48], eax
0x400240:	cmp	dword ptr [rbp - 0x48], -1
0x400244:	je	0x400337
<Block for 0x400337, 3 bytes>
0x400337:	nop	
0x400338:	jmp	0x40033b
<Block for 0x40024a, 22 bytes>
0x40024a:	lea	rax, [rbp - 0x20]
0x40024e:	mov	edx, 0x10
0x400253:	mov	esi, 0
0x400258:	mov	rdi, rax
0x40025b:	call	0x500020
<Block for 0x40033b, 6 bytes>
0x40033b:	cmp	dword ptr [rbp - 0x48], -1
0x40033f:	je	0x40034b
<Block for 0x400260, 18 bytes>
0x400260:	mov	word ptr [rbp - 0x20], 2
0x400266:	lea	rdi, [rip + 0x367]
0x40026d:	call	0x500028
<Block for 0x40034b, 9 bytes>
0x40034b:	mov	eax, 0
0x400350:	test	eax, eax
0x400352:	je	0x400362
<Block for 0x400341, 10 bytes>
0x400341:	mov	eax, dword ptr [rbp - 0x48]
0x400344:	mov	edi, eax
0x400346:	call	0x500050
<Block for 0x400272, 13 bytes>
0x400272:	mov	dword ptr [rbp - 0x1c], eax
0x400275:	mov	edi, 0x6987
0x40027a:	call	0x500030
<Block for 0x400362, 10 bytes>
0x400362:	mov	qword ptr [rbp - 0x40], 0
0x40036a:	jmp	0x400391
<Block for 0x400354, 12 bytes>
0x400354:	lea	rdi, [rip + 0x294]
0x40035b:	call	0x500058
<Block for 0x40027f, 26 bytes>
0x40027f:	mov	word ptr [rbp - 0x1e], ax
0x400283:	lea	rcx, [rbp - 0x20]
0x400287:	mov	eax, dword ptr [rbp - 0x48]
0x40028a:	mov	edx, 0x10
0x40028f:	mov	rsi, rcx
0x400292:	mov	edi, eax
0x400294:	call	0x500038
<Block for 0x400391, 12 bytes>
0x400391:	mov	rax, qword ptr [rbp - 0x38]
0x400395:	mov	rdi, rax
0x400398:	call	0x500010
<Block for 0x400360, 2 bytes>
0x400360:	jmp	0x4003af
<Block for 0x400299, 9 bytes>
0x400299:	cmp	eax, -1
0x40029c:	je	0x40033a
<Block for 0x40039d, 6 bytes>
0x40039d:	cmp	qword ptr [rbp - 0x40], rax
0x4003a1:	jb	0x40036c
<Block for 0x4003af, 16 bytes>
0x4003af:	nop	
0x4003b0:	mov	rax, qword ptr [rbp - 8]
0x4003b4:	xor	rax, qword ptr fs:[0x28]
0x4003bd:	je	0x4003c4
<Block for 0x4002a2, 39 bytes>
0x4002a2:	mov	eax, 0x63
0x4002a7:	sub	rax, qword ptr [rbp - 0x30]
0x4002ab:	mov	rdx, rax
0x4002ae:	mov	rcx, qword ptr [rbp - 0x38]
0x4002b2:	mov	rax, qword ptr [rbp - 0x30]
0x4002b6:	lea	rsi, [rcx + rax]
0x4002ba:	mov	eax, dword ptr [rbp - 0x48]
0x4002bd:	mov	ecx, 0
0x4002c2:	mov	edi, eax
0x4002c4:	call	0x500040
<Block for 0x40033a, 1 bytes>
0x40033a:	nop	
<Block for 0x40036c, 18 bytes>
0x40036c:	mov	rdx, qword ptr [rbp - 0x38]
0x400370:	mov	rax, qword ptr [rbp - 0x40]
0x400374:	add	rax, rdx
0x400377:	movzx	eax, byte ptr [rax]
0x40037a:	cmp	al, 0x53
0x40037c:	jne	0x40038c
<Block for 0x4003a3, 12 bytes>
0x4003a3:	mov	rax, qword ptr [rbp - 0x38]
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x500060
<Block for 0x4003c4, 2 bytes>
0x4003c4:	leave	
0x4003c5:	ret	
<Block for 0x4003bf, 5 bytes>
0x4003bf:	call	0x500068
<Block for 0x4002c9, 9 bytes>
0x4002c9:	mov	dword ptr [rbp - 0x44], eax
0x4002cc:	cmp	dword ptr [rbp - 0x44], -1
0x4002d0:	je	0x40033b
<Block for 0x40037e, 12 bytes>
0x40037e:	lea	rdi, [rip + 0x259]
0x400385:	call	0x500058
<Block for 0x40038c, 17 bytes>
0x40038c:	add	qword ptr [rbp - 0x40], 1
0x400391:	mov	rax, qword ptr [rbp - 0x38]
0x400395:	mov	rdi, rax
0x400398:	call	0x500010
<Block for 0x4002d2, 6 bytes>
0x4002d2:	cmp	dword ptr [rbp - 0x44], 0
0x4002d6:	je	0x40033b
<Block for 0x40038a, 2 bytes>
0x40038a:	jmp	0x4003a3
<Block for 0x4002d8, 40 bytes>
0x4002d8:	mov	eax, dword ptr [rbp - 0x44]
0x4002db:	movsxd	rdx, eax
0x4002de:	mov	rax, qword ptr [rbp - 0x30]
0x4002e2:	add	rdx, rax
0x4002e5:	mov	rax, qword ptr [rbp - 0x38]
0x4002e9:	add	rax, rdx
0x4002ec:	mov	byte ptr [rax], 0
0x4002ef:	mov	rax, qword ptr [rbp - 0x38]
0x4002f3:	mov	esi, 0xd
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500048
<Block for 0x400300, 11 bytes>
0x400300:	mov	qword ptr [rbp - 0x28], rax
0x400304:	cmp	qword ptr [rbp - 0x28], 0
0x400309:	je	0x400312
<Block for 0x400312, 17 bytes>
0x400312:	mov	rax, qword ptr [rbp - 0x38]
0x400316:	mov	esi, 0xa
0x40031b:	mov	rdi, rax
0x40031e:	call	0x500048
<Block for 0x40030b, 24 bytes>
0x40030b:	mov	rax, qword ptr [rbp - 0x28]
0x40030f:	mov	byte ptr [rax], 0
0x400312:	mov	rax, qword ptr [rbp - 0x38]
0x400316:	mov	esi, 0xa
0x40031b:	mov	rdi, rax
0x40031e:	call	0x500048
<Block for 0x400323, 11 bytes>
0x400323:	mov	qword ptr [rbp - 0x28], rax
0x400327:	cmp	qword ptr [rbp - 0x28], 0
0x40032c:	je	0x40033b
<Block for 0x40032e, 9 bytes>
0x40032e:	mov	rax, qword ptr [rbp - 0x28]
0x400332:	mov	byte ptr [rax], 0
0x400335:	jmp	0x40033b
