<Block for 0x40021b, 37 bytes>
0x40021b:	endbr64	
0x40021f:	push	rbp
0x400220:	mov	rbp, rsp
0x400223:	sub	rsp, 0x50
0x400227:	mov	rax, qword ptr fs:[0x28]
0x400230:	mov	qword ptr [rbp - 8], rax
0x400234:	xor	eax, eax
0x400236:	mov	edi, 0x64
0x40023b:	call	0x500000
<Block for 0x400240, 11 bytes>
0x400240:	mov	qword ptr [rbp - 0x38], rax
0x400244:	cmp	qword ptr [rbp - 0x38], 0
0x400249:	jne	0x400255
<Block for 0x40024b, 10 bytes>
0x40024b:	mov	edi, 0xffffffff
0x400250:	call	0x500008
<Block for 0x400255, 33 bytes>
0x400255:	mov	rax, qword ptr [rbp - 0x38]
0x400259:	mov	byte ptr [rax], 0
0x40025c:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400263:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x40026a:	mov	rax, qword ptr [rbp - 0x38]
0x40026e:	mov	rdi, rax
0x400271:	call	0x500010
<Block for 0x400276, 24 bytes>
0x400276:	mov	qword ptr [rbp - 0x30], rax
0x40027a:	mov	edx, 6
0x40027f:	mov	esi, 1
0x400284:	mov	edi, 2
0x400289:	call	0x500018
<Block for 0x40028e, 13 bytes>
0x40028e:	mov	dword ptr [rbp - 0x48], eax
0x400291:	cmp	dword ptr [rbp - 0x48], -1
0x400295:	je	0x4003b9
<Block for 0x4003b9, 3 bytes>
0x4003b9:	nop	
0x4003ba:	jmp	0x4003c3
<Block for 0x40029b, 22 bytes>
0x40029b:	lea	rax, [rbp - 0x20]
0x40029f:	mov	edx, 0x10
0x4002a4:	mov	esi, 0
0x4002a9:	mov	rdi, rax
0x4002ac:	call	0x500020
<Block for 0x4003c3, 6 bytes>
0x4003c3:	cmp	dword ptr [rbp - 0x48], -1
0x4003c7:	je	0x4003d3
<Block for 0x4002b1, 23 bytes>
0x4002b1:	mov	word ptr [rbp - 0x20], 2
0x4002b7:	mov	dword ptr [rbp - 0x1c], 0
0x4002be:	mov	edi, 0x6987
0x4002c3:	call	0x500028
<Block for 0x4003d3, 6 bytes>
0x4003d3:	cmp	dword ptr [rbp - 0x4c], -1
0x4003d7:	je	0x4003e3
<Block for 0x4003c9, 10 bytes>
0x4003c9:	mov	eax, dword ptr [rbp - 0x48]
0x4003cc:	mov	edi, eax
0x4003ce:	call	0x500058
<Block for 0x4002c8, 26 bytes>
0x4002c8:	mov	word ptr [rbp - 0x1e], ax
0x4002cc:	lea	rcx, [rbp - 0x20]
0x4002d0:	mov	eax, dword ptr [rbp - 0x48]
0x4002d3:	mov	edx, 0x10
0x4002d8:	mov	rsi, rcx
0x4002db:	mov	edi, eax
0x4002dd:	call	0x500030
<Block for 0x4003e3, 15 bytes>
0x4003e3:	nop	
0x4003e4:	endbr64	
0x4003e8:	mov	qword ptr [rbp - 0x40], 0
0x4003f0:	jmp	0x400417
<Block for 0x4003d9, 10 bytes>
0x4003d9:	mov	eax, dword ptr [rbp - 0x4c]
0x4003dc:	mov	edi, eax
0x4003de:	call	0x500058
<Block for 0x4002e2, 9 bytes>
0x4002e2:	cmp	eax, -1
0x4002e5:	je	0x4003bc
<Block for 0x400417, 12 bytes>
0x400417:	mov	rax, qword ptr [rbp - 0x38]
0x40041b:	mov	rdi, rax
0x40041e:	call	0x500010
<Block for 0x4003bc, 3 bytes>
0x4003bc:	nop	
0x4003bd:	jmp	0x4003c3
<Block for 0x4002eb, 15 bytes>
0x4002eb:	mov	eax, dword ptr [rbp - 0x48]
0x4002ee:	mov	esi, 5
0x4002f3:	mov	edi, eax
0x4002f5:	call	0x500038
<Block for 0x400423, 6 bytes>
0x400423:	cmp	qword ptr [rbp - 0x40], rax
0x400427:	jb	0x4003f2
<Block for 0x4002fa, 9 bytes>
0x4002fa:	cmp	eax, -1
0x4002fd:	je	0x4003bf
<Block for 0x4003f2, 18 bytes>
0x4003f2:	mov	rdx, qword ptr [rbp - 0x38]
0x4003f6:	mov	rax, qword ptr [rbp - 0x40]
0x4003fa:	add	rax, rdx
0x4003fd:	movzx	eax, byte ptr [rax]
0x400400:	cmp	al, 0x53
0x400402:	jne	0x400412
<Block for 0x400429, 12 bytes>
0x400429:	mov	rax, qword ptr [rbp - 0x38]
0x40042d:	mov	rdi, rax
0x400430:	call	0x500068
<Block for 0x4003bf, 3 bytes>
0x4003bf:	nop	
0x4003c0:	jmp	0x4003c3
<Block for 0x400303, 20 bytes>
0x400303:	mov	eax, dword ptr [rbp - 0x48]
0x400306:	mov	edx, 0
0x40030b:	mov	esi, 0
0x400310:	mov	edi, eax
0x400312:	call	0x500040
<Block for 0x400404, 12 bytes>
0x400404:	lea	rdi, [rip + 0x56]
0x40040b:	call	0x500060
<Block for 0x400412, 17 bytes>
0x400412:	add	qword ptr [rbp - 0x40], 1
0x400417:	mov	rax, qword ptr [rbp - 0x38]
0x40041b:	mov	rdi, rax
0x40041e:	call	0x500010
<Block for 0x400435, 16 bytes>
0x400435:	nop	
0x400436:	mov	rax, qword ptr [rbp - 8]
0x40043a:	xor	rax, qword ptr fs:[0x28]
0x400443:	je	0x40044a
<Block for 0x400317, 13 bytes>
0x400317:	mov	dword ptr [rbp - 0x4c], eax
0x40031a:	cmp	dword ptr [rbp - 0x4c], -1
0x40031e:	je	0x4003c2
<Block for 0x400410, 2 bytes>
0x400410:	jmp	0x400429
<Block for 0x40044a, 2 bytes>
0x40044a:	leave	
0x40044b:	ret	
<Block for 0x400445, 5 bytes>
0x400445:	call	0x500070
<Block for 0x400324, 39 bytes>
0x400324:	mov	eax, 0x63
0x400329:	sub	rax, qword ptr [rbp - 0x30]
0x40032d:	mov	rdx, rax
0x400330:	mov	rcx, qword ptr [rbp - 0x38]
0x400334:	mov	rax, qword ptr [rbp - 0x30]
0x400338:	lea	rsi, [rcx + rax]
0x40033c:	mov	eax, dword ptr [rbp - 0x4c]
0x40033f:	mov	ecx, 0
0x400344:	mov	edi, eax
0x400346:	call	0x500048
<Block for 0x4003c2, 1 bytes>
0x4003c2:	nop	
<Block for 0x40034b, 9 bytes>
0x40034b:	mov	dword ptr [rbp - 0x44], eax
0x40034e:	cmp	dword ptr [rbp - 0x44], -1
0x400352:	je	0x4003c3
<Block for 0x400354, 6 bytes>
0x400354:	cmp	dword ptr [rbp - 0x44], 0
0x400358:	je	0x4003c3
<Block for 0x40035a, 40 bytes>
0x40035a:	mov	eax, dword ptr [rbp - 0x44]
0x40035d:	movsxd	rdx, eax
0x400360:	mov	rax, qword ptr [rbp - 0x30]
0x400364:	add	rdx, rax
0x400367:	mov	rax, qword ptr [rbp - 0x38]
0x40036b:	add	rax, rdx
0x40036e:	mov	byte ptr [rax], 0
0x400371:	mov	rax, qword ptr [rbp - 0x38]
0x400375:	mov	esi, 0xd
0x40037a:	mov	rdi, rax
0x40037d:	call	0x500050
<Block for 0x400382, 11 bytes>
0x400382:	mov	qword ptr [rbp - 0x28], rax
0x400386:	cmp	qword ptr [rbp - 0x28], 0
0x40038b:	je	0x400394
<Block for 0x400394, 17 bytes>
0x400394:	mov	rax, qword ptr [rbp - 0x38]
0x400398:	mov	esi, 0xa
0x40039d:	mov	rdi, rax
0x4003a0:	call	0x500050
<Block for 0x40038d, 24 bytes>
0x40038d:	mov	rax, qword ptr [rbp - 0x28]
0x400391:	mov	byte ptr [rax], 0
0x400394:	mov	rax, qword ptr [rbp - 0x38]
0x400398:	mov	esi, 0xa
0x40039d:	mov	rdi, rax
0x4003a0:	call	0x500050
<Block for 0x4003a5, 11 bytes>
0x4003a5:	mov	qword ptr [rbp - 0x28], rax
0x4003a9:	cmp	qword ptr [rbp - 0x28], 0
0x4003ae:	je	0x4003c3
<Block for 0x4003b0, 9 bytes>
0x4003b0:	mov	rax, qword ptr [rbp - 0x28]
0x4003b4:	mov	byte ptr [rax], 0
0x4003b7:	jmp	0x4003c3
