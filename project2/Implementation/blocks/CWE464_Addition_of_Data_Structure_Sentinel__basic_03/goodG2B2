<Block for 0x4000d3, 66 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	sub	rsp, 0x10
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	byte ptr [rbp - 0xd], 0x20
0x4000f2:	mov	byte ptr [rbp - 0xd], 0x61
0x4000f6:	mov	byte ptr [rbp - 0xc], 0x78
0x4000fa:	movzx	eax, byte ptr [rbp - 0xd]
0x4000fe:	mov	byte ptr [rbp - 0xb], al
0x400101:	mov	byte ptr [rbp - 0xa], 0x7a
0x400105:	mov	byte ptr [rbp - 9], 0
0x400109:	lea	rax, [rbp - 0xc]
0x40010d:	mov	rdi, rax
0x400110:	call	0x500018
<Block for 0x400115, 16 bytes>
0x400115:	nop	
0x400116:	mov	rax, qword ptr [rbp - 8]
0x40011a:	xor	rax, qword ptr fs:[0x28]
0x400123:	je	0x40012a
<Block for 0x40012a, 2 bytes>
0x40012a:	leave	
0x40012b:	ret	
<Block for 0x400125, 5 bytes>
0x400125:	call	0x500020
