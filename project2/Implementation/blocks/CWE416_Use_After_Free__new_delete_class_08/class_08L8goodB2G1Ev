<Block for 0x400097, 25 bytes>
0x400097:	endbr64	
0x40009b:	push	rbp
0x40009c:	mov	rbp, rsp
0x40009f:	sub	rsp, 0x10
0x4000a3:	mov	qword ptr [rbp - 8], 0
0x4000ab:	call	0x400000
<Block for 0x4000b0, 9 bytes>
0x4000b0:	test	eax, eax
0x4000b2:	setne	al
0x4000b5:	test	al, al
0x4000b7:	je	0x4000f2
<Block for 0x4000f2, 5 bytes>
0x4000f2:	call	0x40000f
<Block for 0x4000b9, 10 bytes>
0x4000b9:	mov	edi, 8
0x4000be:	call	0x500000
<Block for 0x4000f7, 9 bytes>
0x4000f7:	test	eax, eax
0x4000f9:	setne	al
0x4000fc:	test	al, al
0x4000fe:	je	0x40010c
<Block for 0x4000c3, 34 bytes>
0x4000c3:	mov	qword ptr [rbp - 8], rax
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	mov	dword ptr [rax], 1
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	mov	dword ptr [rax + 4], 2
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	test	rax, rax
0x4000e3:	je	0x4000f2
<Block for 0x40010c, 3 bytes>
0x40010c:	nop	
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x160]
0x400107:	call	0x500018
<Block for 0x4000e5, 13 bytes>
0x4000e5:	mov	esi, 8
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500008
