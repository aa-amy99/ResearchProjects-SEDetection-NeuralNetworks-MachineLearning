<Block for 0x400294, 84 bytes>
0x400294:	endbr64	
0x400298:	push	rbp
0x400299:	mov	rbp, rsp
0x40029c:	sub	rsp, 0xe0
0x4002a3:	mov	rax, qword ptr fs:[0x28]
0x4002ac:	mov	qword ptr [rbp - 8], rax
0x4002b0:	xor	eax, eax
0x4002b2:	mov	eax, 0x10
0x4002b7:	sub	rax, 1
0x4002bb:	add	rax, 0x6c
0x4002bf:	mov	ecx, 0x10
0x4002c4:	mov	edx, 0
0x4002c9:	div	rcx
0x4002cc:	imul	rax, rax, 0x10
0x4002d0:	mov	rdx, rax
0x4002d3:	and	rdx, 0xfffffffffffff000
0x4002da:	mov	rcx, rsp
0x4002dd:	sub	rcx, rdx
0x4002e0:	mov	rdx, rcx
0x4002e3:	cmp	rsp, rdx
0x4002e6:	je	0x4002fa
<Block for 0x4002fa, 26 bytes>
0x4002fa:	mov	rdx, rax
0x4002fd:	and	edx, 0xfff
0x400303:	sub	rsp, rdx
0x400306:	mov	rdx, rax
0x400309:	and	edx, 0xfff
0x40030f:	test	rdx, rdx
0x400312:	je	0x400324
<Block for 0x4002e8, 18 bytes>
0x4002e8:	sub	rsp, 0x1000
0x4002ef:	or	qword ptr [rsp + 0xff8], 0
0x4002f8:	jmp	0x4002e3
<Block for 0x400324, 47 bytes>
0x400324:	mov	rax, rsp
0x400327:	add	rax, 0xf
0x40032b:	shr	rax, 4
0x40032f:	shl	rax, 4
0x400333:	mov	qword ptr [rbp - 0xd8], rax
0x40033a:	mov	rax, qword ptr [rbp - 0xd8]
0x400341:	mov	edx, 0x63
0x400346:	mov	esi, 0x41
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500000
<Block for 0x400314, 63 bytes>
0x400314:	and	eax, 0xfff
0x400319:	sub	rax, 8
0x40031d:	add	rax, rsp
0x400320:	or	qword ptr [rax], 0
0x400324:	mov	rax, rsp
0x400327:	add	rax, 0xf
0x40032b:	shr	rax, 4
0x40032f:	shl	rax, 4
0x400333:	mov	qword ptr [rbp - 0xd8], rax
0x40033a:	mov	rax, qword ptr [rbp - 0xd8]
0x400341:	mov	edx, 0x63
0x400346:	mov	esi, 0x41
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500000
<Block for 0x4002e3, 5 bytes>
0x4002e3:	cmp	rsp, rdx
0x4002e6:	je	0x4002fa
<Block for 0x400353, 24 bytes>
0x400353:	mov	rax, qword ptr [rbp - 0xd8]
0x40035a:	add	rax, 0x63
0x40035e:	mov	byte ptr [rax], 0
0x400361:	mov	eax, dword ptr [rip + 0xffca1]
0x400367:	test	eax, eax
0x400369:	je	0x400379
<Block for 0x400379, 25 bytes>
0x400379:	lea	rax, [rbp - 0xd0]
0x400380:	mov	edx, 0xc7
0x400385:	mov	esi, 0x43
0x40038a:	mov	rdi, rax
0x40038d:	call	0x500000
<Block for 0x40036b, 39 bytes>
0x40036b:	mov	rax, qword ptr [rbp - 0xd8]
0x400372:	mov	qword ptr [rbp - 0xe0], rax
0x400379:	lea	rax, [rbp - 0xd0]
0x400380:	mov	edx, 0xc7
0x400385:	mov	esi, 0x43
0x40038a:	mov	rdi, rax
0x40038d:	call	0x500000
<Block for 0x400392, 29 bytes>
0x400392:	mov	byte ptr [rbp - 9], 0
0x400396:	mov	rdx, qword ptr [rbp - 0xe0]
0x40039d:	lea	rax, [rbp - 0xd0]
0x4003a4:	mov	rsi, rdx
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x500010
<Block for 0x4003af, 15 bytes>
0x4003af:	lea	rax, [rbp - 0xd0]
0x4003b6:	mov	rdi, rax
0x4003b9:	call	0x500018
<Block for 0x4003be, 16 bytes>
0x4003be:	nop	
0x4003bf:	mov	rax, qword ptr [rbp - 8]
0x4003c3:	xor	rax, qword ptr fs:[0x28]
0x4003cc:	je	0x4003d3
<Block for 0x4003d3, 2 bytes>
0x4003d3:	leave	
0x4003d4:	ret	
<Block for 0x4003ce, 5 bytes>
0x4003ce:	call	0x500020
