<Block for 0x400222, 56 bytes>
0x400222:	endbr64	
0x400226:	push	rbp
0x400227:	mov	rbp, rsp
0x40022a:	push	rbx
0x40022b:	sub	rsp, 0xf8
0x400232:	mov	rax, qword ptr fs:[0x28]
0x40023b:	mov	qword ptr [rbp - 0x18], rax
0x40023f:	xor	eax, eax
0x400241:	lea	rax, [rbp - 0xf0]
0x400248:	mov	edx, 0x63
0x40024d:	mov	esi, 0x41
0x400252:	mov	rdi, rax
0x400255:	call	0x500000
<Block for 0x40025a, 43 bytes>
0x40025a:	mov	byte ptr [rbp - 0x8d], 0
0x400261:	lea	rax, [rbp - 0xf0]
0x400268:	mov	qword ptr [rbp - 0xf8], rax
0x40026f:	lea	rax, [rbp - 0x80]
0x400273:	mov	edx, 0x63
0x400278:	mov	esi, 0x43
0x40027d:	mov	rdi, rax
0x400280:	call	0x500000
<Block for 0x400285, 141 bytes>
0x400285:	mov	byte ptr [rbp - 0x1d], 0
0x400289:	mov	rax, qword ptr [rbp - 0xf8]
0x400290:	mov	rcx, qword ptr [rbp - 0x80]
0x400294:	mov	rbx, qword ptr [rbp - 0x78]
0x400298:	mov	qword ptr [rax], rcx
0x40029b:	mov	qword ptr [rax + 8], rbx
0x40029f:	mov	rcx, qword ptr [rbp - 0x70]
0x4002a3:	mov	rbx, qword ptr [rbp - 0x68]
0x4002a7:	mov	qword ptr [rax + 0x10], rcx
0x4002ab:	mov	qword ptr [rax + 0x18], rbx
0x4002af:	mov	rcx, qword ptr [rbp - 0x60]
0x4002b3:	mov	rbx, qword ptr [rbp - 0x58]
0x4002b7:	mov	qword ptr [rax + 0x20], rcx
0x4002bb:	mov	qword ptr [rax + 0x28], rbx
0x4002bf:	mov	rcx, qword ptr [rbp - 0x50]
0x4002c3:	mov	rbx, qword ptr [rbp - 0x48]
0x4002c7:	mov	qword ptr [rax + 0x30], rcx
0x4002cb:	mov	qword ptr [rax + 0x38], rbx
0x4002cf:	mov	rcx, qword ptr [rbp - 0x40]
0x4002d3:	mov	rbx, qword ptr [rbp - 0x38]
0x4002d7:	mov	qword ptr [rax + 0x40], rcx
0x4002db:	mov	qword ptr [rax + 0x48], rbx
0x4002df:	mov	rcx, qword ptr [rbp - 0x30]
0x4002e3:	mov	rbx, qword ptr [rbp - 0x28]
0x4002e7:	mov	qword ptr [rax + 0x50], rcx
0x4002eb:	mov	qword ptr [rax + 0x58], rbx
0x4002ef:	mov	edx, dword ptr [rbp - 0x20]
0x4002f2:	mov	dword ptr [rax + 0x60], edx
0x4002f5:	mov	rax, qword ptr [rbp - 0xf8]
0x4002fc:	add	rax, 0x63
0x400300:	mov	byte ptr [rax], 0
0x400303:	mov	rax, qword ptr [rbp - 0xf8]
0x40030a:	mov	rdi, rax
0x40030d:	call	0x500008
<Block for 0x400312, 16 bytes>
0x400312:	nop	
0x400313:	mov	rax, qword ptr [rbp - 0x18]
0x400317:	xor	rax, qword ptr fs:[0x28]
0x400320:	je	0x400327
<Block for 0x400327, 10 bytes>
0x400327:	add	rsp, 0xf8
0x40032e:	pop	rbx
0x40032f:	pop	rbp
0x400330:	ret	
<Block for 0x400322, 5 bytes>
0x400322:	call	0x500010
