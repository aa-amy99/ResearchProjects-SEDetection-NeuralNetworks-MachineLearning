<Block for 0x400066, 36 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x70
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	mov	eax, 0
0x400086:	test	eax, eax
0x400088:	je	0x400098
<Block for 0x400098, 38 bytes>
0x400098:	lea	rax, [rbp - 0x70]
0x40009c:	lea	rcx, [rip + 0xd5]
0x4000a3:	lea	rdx, [rip + 0xce]
0x4000aa:	lea	rsi, [rip + 0xcb]
0x4000b1:	mov	rdi, rax
0x4000b4:	mov	eax, 0
0x4000b9:	call	0x500000
<Block for 0x40008a, 12 bytes>
0x40008a:	lea	rdi, [rip + 0xf1]
0x400091:	call	0x500008
<Block for 0x4000be, 12 bytes>
0x4000be:	lea	rax, [rbp - 0x70]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
<Block for 0x400096, 2 bytes>
0x400096:	jmp	0x4000ca
<Block for 0x4000ca, 16 bytes>
0x4000ca:	nop	
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	xor	rax, qword ptr fs:[0x28]
0x4000d8:	je	0x4000df
<Block for 0x4000df, 2 bytes>
0x4000df:	leave	
0x4000e0:	ret	
<Block for 0x4000da, 5 bytes>
0x4000da:	call	0x500010
