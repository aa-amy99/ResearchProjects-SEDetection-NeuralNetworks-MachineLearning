<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	rax, qword ptr [rip + 0xffff4]
0x400014:	mov	qword ptr [rbp - 0x18], rax
0x400018:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40001f:	call	0x500010
<Block for 0x400024, 7 bytes>
0x400024:	and	eax, 1
0x400027:	test	eax, eax
0x400029:	je	0x400048
<Block for 0x400048, 5 bytes>
0x400048:	call	0x500010
<Block for 0x40002b, 5 bytes>
0x40002b:	call	0x500010
<Block for 0x40004d, 10 bytes>
0x40004d:	shl	eax, 0x1e
0x400050:	mov	ebx, eax
0x400052:	call	0x500010
<Block for 0x400030, 10 bytes>
0x400030:	shl	eax, 0x1e
0x400033:	mov	ebx, eax
0x400035:	call	0x500010
<Block for 0x400057, 10 bytes>
0x400057:	shl	eax, 0xf
0x40005a:	xor	ebx, eax
0x40005c:	call	0x500010
<Block for 0x40003a, 10 bytes>
0x40003a:	shl	eax, 0xf
0x40003d:	xor	ebx, eax
0x40003f:	call	0x500010
<Block for 0x400061, 18 bytes>
0x400061:	xor	eax, ebx
0x400063:	not	eax
0x400065:	mov	dword ptr [rbp - 0x1c], eax
0x400068:	mov	eax, dword ptr [rbp - 0x1c]
0x40006b:	mov	rdx, qword ptr [rbp - 0x18]
0x40006f:	mov	edi, eax
0x400071:	call	rdx
<Block for 0x400044, 4 bytes>
0x400044:	xor	eax, ebx
0x400046:	jmp	0x400065
<Block for 0x400073, 8 bytes>
0x400073:	nop	
0x400074:	add	rsp, 0x18
0x400078:	pop	rbx
0x400079:	pop	rbp
0x40007a:	ret	
<Block for 0x400065, 14 bytes>
0x400065:	mov	dword ptr [rbp - 0x1c], eax
0x400068:	mov	eax, dword ptr [rbp - 0x1c]
0x40006b:	mov	rdx, qword ptr [rbp - 0x18]
0x40006f:	mov	edi, eax
0x400071:	call	rdx
