<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	nop	
0x400027:	endbr64	
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 26 bytes>
0x400035:	mov	qword ptr [rbp - 0x78], rax
0x400039:	mov	rax, qword ptr [rbp - 0x78]
0x40003d:	mov	edx, 0x63
0x400042:	mov	esi, 0x41
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 45 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 0x78]
0x400053:	add	rax, 0x63
0x400057:	mov	byte ptr [rax], 0
0x40005a:	mov	rax, qword ptr [rbp - 0x78]
0x40005e:	sub	rax, 8
0x400062:	mov	qword ptr [rbp - 0x80], rax
0x400066:	lea	rax, [rbp - 0x70]
0x40006a:	mov	edx, 0x63
0x40006f:	mov	esi, 0x43
0x400074:	mov	rdi, rax
0x400077:	call	0x500008
<Block for 0x40007c, 25 bytes>
0x40007c:	mov	byte ptr [rbp - 0xd], 0
0x400080:	mov	qword ptr [rbp - 0x88], 0
0x40008b:	cmp	qword ptr [rbp - 0x88], 0x63
0x400093:	ja	0x4000c0
<Block for 0x400095, 43 bytes>
0x400095:	mov	rdx, qword ptr [rbp - 0x80]
0x400099:	mov	rax, qword ptr [rbp - 0x88]
0x4000a0:	add	rdx, rax
0x4000a3:	lea	rcx, [rbp - 0x70]
0x4000a7:	mov	rax, qword ptr [rbp - 0x88]
0x4000ae:	add	rax, rcx
0x4000b1:	movzx	eax, byte ptr [rax]
0x4000b4:	mov	byte ptr [rdx], al
0x4000b6:	add	qword ptr [rbp - 0x88], 1
0x4000be:	jmp	0x40008b
<Block for 0x4000c0, 23 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x80]
0x4000c4:	add	rax, 0x63
0x4000c8:	mov	byte ptr [rax], 0
0x4000cb:	mov	rax, qword ptr [rbp - 0x80]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500010
<Block for 0x40008b, 10 bytes>
0x40008b:	cmp	qword ptr [rbp - 0x88], 0x63
0x400093:	ja	0x4000c0
<Block for 0x4000d7, 16 bytes>
0x4000d7:	nop	
0x4000d8:	mov	rax, qword ptr [rbp - 8]
0x4000dc:	xor	rax, qword ptr fs:[0x28]
0x4000e5:	je	0x4000ec
<Block for 0x4000ec, 2 bytes>
0x4000ec:	leave	
0x4000ed:	ret	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	call	0x500018
