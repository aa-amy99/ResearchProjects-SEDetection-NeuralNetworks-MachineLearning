<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	nop	
0x400027:	endbr64	
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 11 bytes>
0x400035:	mov	qword ptr [rbp - 0x78], rax
0x400039:	cmp	qword ptr [rbp - 0x78], 0
0x40003e:	jne	0x40004a
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 0xffffffff
0x400045:	call	0x500008
<Block for 0x40004a, 22 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 0x78]
0x40004e:	mov	edx, 0x63
0x400053:	mov	esi, 0x41
0x400058:	mov	rdi, rax
0x40005b:	call	0x500010
<Block for 0x400060, 45 bytes>
0x400060:	mov	rax, qword ptr [rbp - 0x78]
0x400064:	add	rax, 0x63
0x400068:	mov	byte ptr [rax], 0
0x40006b:	mov	rax, qword ptr [rbp - 0x78]
0x40006f:	sub	rax, 8
0x400073:	mov	qword ptr [rbp - 0x80], rax
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	edx, 0x63
0x400080:	mov	esi, 0x43
0x400085:	mov	rdi, rax
0x400088:	call	0x500010
<Block for 0x40008d, 17 bytes>
0x40008d:	mov	byte ptr [rbp - 0xd], 0
0x400091:	mov	qword ptr [rbp - 0x88], 0
0x40009c:	jmp	0x4000c7
<Block for 0x4000c7, 10 bytes>
0x4000c7:	cmp	qword ptr [rbp - 0x88], 0x63
0x4000cf:	jbe	0x40009e
<Block for 0x40009e, 51 bytes>
0x40009e:	mov	rdx, qword ptr [rbp - 0x80]
0x4000a2:	mov	rax, qword ptr [rbp - 0x88]
0x4000a9:	add	rdx, rax
0x4000ac:	lea	rcx, [rbp - 0x70]
0x4000b0:	mov	rax, qword ptr [rbp - 0x88]
0x4000b7:	add	rax, rcx
0x4000ba:	movzx	eax, byte ptr [rax]
0x4000bd:	mov	byte ptr [rdx], al
0x4000bf:	add	qword ptr [rbp - 0x88], 1
0x4000c7:	cmp	qword ptr [rbp - 0x88], 0x63
0x4000cf:	jbe	0x40009e
<Block for 0x4000d1, 23 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x80]
0x4000d5:	add	rax, 0x63
0x4000d9:	mov	byte ptr [rax], 0
0x4000dc:	mov	rax, qword ptr [rbp - 0x80]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500018
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 8]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x4000fd
<Block for 0x4000fd, 2 bytes>
0x4000fd:	leave	
0x4000fe:	ret	
<Block for 0x4000f8, 5 bytes>
0x4000f8:	call	0x500020
