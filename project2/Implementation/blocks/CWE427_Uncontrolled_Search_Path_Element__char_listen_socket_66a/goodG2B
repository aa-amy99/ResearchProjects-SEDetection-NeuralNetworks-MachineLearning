<Block for 0x40029f, 82 bytes>
0x40029f:	endbr64	
0x4002a3:	push	rbp
0x4002a4:	mov	rbp, rsp
0x4002a7:	sub	rsp, 0x150
0x4002ae:	mov	rax, qword ptr fs:[0x28]
0x4002b7:	mov	qword ptr [rbp - 8], rax
0x4002bb:	xor	eax, eax
0x4002bd:	movabs	rax, 0x3d48544150
0x4002c7:	mov	edx, 0
0x4002cc:	mov	qword ptr [rbp - 0x110], rax
0x4002d3:	mov	qword ptr [rbp - 0x108], rdx
0x4002da:	lea	rdx, [rbp - 0x100]
0x4002e1:	mov	eax, 0
0x4002e6:	mov	ecx, 0x1d
0x4002eb:	mov	rdi, rdx
0x4002ee:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002f1, 51 bytes>
0x4002f1:	mov	rdx, rdi
0x4002f4:	mov	word ptr [rdx], ax
0x4002f7:	add	rdx, 2
0x4002fb:	lea	rax, [rbp - 0x110]
0x400302:	mov	qword ptr [rbp - 0x148], rax
0x400309:	mov	rax, qword ptr [rbp - 0x148]
0x400310:	mov	rcx, -1
0x400317:	mov	rdx, rax
0x40031a:	mov	eax, 0
0x40031f:	mov	rdi, rdx
0x400322:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002ee, 3 bytes>
0x4002ee:	rep stosq	qword ptr [rdi], rax
<Block for 0x400324, 59 bytes>
0x400324:	mov	rax, rcx
0x400327:	not	rax
0x40032a:	lea	rdx, [rax - 1]
0x40032e:	mov	rax, qword ptr [rbp - 0x148]
0x400335:	add	rax, rdx
0x400338:	mov	dword ptr [rax], 0x6e69622f
0x40033e:	mov	byte ptr [rax + 4], 0
0x400342:	mov	rax, qword ptr [rbp - 0x148]
0x400349:	mov	qword ptr [rbp - 0x130], rax
0x400350:	lea	rax, [rbp - 0x140]
0x400357:	mov	rdi, rax
0x40035a:	call	0x500060
<Block for 0x400322, 2 bytes>
0x400322:	repne scasb	al, byte ptr [rdi]
<Block for 0x40035f, 16 bytes>
0x40035f:	nop	
0x400360:	mov	rax, qword ptr [rbp - 8]
0x400364:	xor	rax, qword ptr fs:[0x28]
0x40036d:	je	0x400374
<Block for 0x400374, 2 bytes>
0x400374:	leave	
0x400375:	ret	
<Block for 0x40036f, 5 bytes>
0x40036f:	call	0x500058
