<Block for 0x4001ae, 46 bytes>
0x4001ae:	endbr64	
0x4001b2:	push	rbp
0x4001b3:	mov	rbp, rsp
0x4001b6:	sub	rsp, 0x40
0x4001ba:	mov	rax, qword ptr fs:[0x28]
0x4001c3:	mov	qword ptr [rbp - 8], rax
0x4001c7:	xor	eax, eax
0x4001c9:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001d0:	lea	rax, [rbp - 0x34]
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x40017c
<Block for 0x4001dc, 47 bytes>
0x4001dc:	mov	qword ptr [rbp - 0x30], 0
0x4001e4:	mov	qword ptr [rbp - 0x28], 0
0x4001ec:	mov	qword ptr [rbp - 0x20], 0
0x4001f4:	mov	qword ptr [rbp - 0x18], 0
0x4001fc:	mov	qword ptr [rbp - 0x10], 0
0x400204:	mov	eax, dword ptr [rbp - 0x34]
0x400207:	test	eax, eax
0x400209:	js	0x400225
<Block for 0x400225, 12 bytes>
0x400225:	lea	rdi, [rip + 0x5c]
0x40022c:	call	0x500018
<Block for 0x40020b, 8 bytes>
0x40020b:	mov	eax, dword ptr [rbp - 0x34]
0x40020e:	cmp	eax, 9
0x400211:	jg	0x400225
<Block for 0x400231, 16 bytes>
0x400231:	nop	
0x400232:	mov	rax, qword ptr [rbp - 8]
0x400236:	xor	rax, qword ptr fs:[0x28]
0x40023f:	je	0x400246
<Block for 0x400213, 16 bytes>
0x400213:	mov	eax, dword ptr [rbp - 0x34]
0x400216:	cdqe	
0x400218:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40021c:	mov	edi, eax
0x40021e:	call	0x500010
<Block for 0x400246, 2 bytes>
0x400246:	leave	
0x400247:	ret	
<Block for 0x400241, 5 bytes>
0x400241:	call	0x500020
<Block for 0x400223, 2 bytes>
0x400223:	jmp	0x400231
