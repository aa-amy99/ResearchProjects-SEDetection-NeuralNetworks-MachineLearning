<Block for 0x40009c, 74 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	sub	rsp, 0x120
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	nop	
0x4000bb:	endbr64	
0x4000bf:	pxor	xmm0, xmm0
0x4000c3:	movsd	qword ptr [rbp - 0x118], xmm0
0x4000cb:	mov	rdx, qword ptr [rip + 0xfff2e]
0x4000d2:	lea	rax, [rbp - 0x110]
0x4000d9:	mov	esi, 0x100
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500008
<Block for 0x4000e6, 5 bytes>
0x4000e6:	test	rax, rax
0x4000e9:	je	0x400108
<Block for 0x400108, 12 bytes>
0x400108:	lea	rdi, [rip + 0x71]
0x40010f:	call	0x500018
<Block for 0x4000eb, 15 bytes>
0x4000eb:	lea	rax, [rbp - 0x110]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
<Block for 0x400114, 18 bytes>
0x400114:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40011c:	comisd	xmm0, xmmword ptr [rip + 0xac]
0x400124:	ja	0x400138
<Block for 0x4000fa, 14 bytes>
0x4000fa:	movq	rax, xmm0
0x4000ff:	mov	qword ptr [rbp - 0x118], rax
0x400106:	jmp	0x400114
<Block for 0x400126, 18 bytes>
0x400126:	movsd	xmm0, qword ptr [rip + 0xaa]
0x40012e:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400136:	jbe	0x400146
<Block for 0x400138, 12 bytes>
0x400138:	lea	rdi, [rip + 0x51]
0x40013f:	call	0x500018
<Block for 0x400146, 13 bytes>
0x400146:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x40014e:	call	0x500020
<Block for 0x400144, 2 bytes>
0x400144:	jmp	0x400153
<Block for 0x400153, 16 bytes>
0x400153:	nop	
0x400154:	mov	rax, qword ptr [rbp - 8]
0x400158:	xor	rax, qword ptr fs:[0x28]
0x400161:	je	0x400168
<Block for 0x400168, 2 bytes>
0x400168:	leave	
0x400169:	ret	
<Block for 0x400163, 5 bytes>
0x400163:	call	0x500028
