<Block for 0x400000, 74 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	nop	
0x40001f:	endbr64	
0x400023:	pxor	xmm0, xmm0
0x400027:	movsd	qword ptr [rbp - 0x118], xmm0
0x40002f:	mov	rdx, qword ptr [rip + 0xfffca]
0x400036:	lea	rax, [rbp - 0x110]
0x40003d:	mov	esi, 0x100
0x400042:	mov	rdi, rax
0x400045:	call	0x500008
<Block for 0x40004a, 5 bytes>
0x40004a:	test	rax, rax
0x40004d:	je	0x40006c
<Block for 0x40006c, 12 bytes>
0x40006c:	lea	rdi, [rip + 0x10d]
0x400073:	call	0x500018
<Block for 0x40004f, 15 bytes>
0x40004f:	lea	rax, [rbp - 0x110]
0x400056:	mov	rdi, rax
0x400059:	call	0x500010
<Block for 0x400078, 13 bytes>
0x400078:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x400080:	call	0x500020
<Block for 0x40005e, 14 bytes>
0x40005e:	movq	rax, xmm0
0x400063:	mov	qword ptr [rbp - 0x118], rax
0x40006a:	jmp	0x400078
<Block for 0x400085, 16 bytes>
0x400085:	nop	
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	xor	rax, qword ptr fs:[0x28]
0x400093:	je	0x40009a
<Block for 0x40009a, 2 bytes>
0x40009a:	leave	
0x40009b:	ret	
<Block for 0x400095, 5 bytes>
0x400095:	call	0x500028
