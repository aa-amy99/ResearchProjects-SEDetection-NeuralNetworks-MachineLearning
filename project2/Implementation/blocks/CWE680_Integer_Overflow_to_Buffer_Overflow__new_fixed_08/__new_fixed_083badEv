<Block for 0x40001e, 24 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x20
0x40002a:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400031:	call	0x400000
<Block for 0x400036, 9 bytes>
0x400036:	test	eax, eax
0x400038:	setne	al
0x40003b:	test	al, al
0x40003d:	je	0x400046
<Block for 0x400046, 25 bytes>
0x400046:	mov	eax, dword ptr [rbp - 0x1c]
0x400049:	cdqe	
0x40004b:	shl	rax, 2
0x40004f:	mov	qword ptr [rbp - 0x10], rax
0x400053:	mov	rax, qword ptr [rbp - 0x10]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500000
<Block for 0x40003f, 32 bytes>
0x40003f:	mov	dword ptr [rbp - 0x1c], 0x40000001
0x400046:	mov	eax, dword ptr [rbp - 0x1c]
0x400049:	cdqe	
0x40004b:	shl	rax, 2
0x40004f:	mov	qword ptr [rbp - 0x10], rax
0x400053:	mov	rax, qword ptr [rbp - 0x10]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500000
<Block for 0x40005f, 23 bytes>
0x40005f:	mov	qword ptr [rbp - 8], rax
0x400063:	mov	qword ptr [rbp - 0x18], 0
0x40006b:	mov	eax, dword ptr [rbp - 0x1c]
0x40006e:	cdqe	
0x400070:	cmp	qword ptr [rbp - 0x18], rax
0x400074:	jae	0x400096
<Block for 0x400076, 32 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0x18]
0x40007a:	lea	rdx, [rax*4]
0x400082:	mov	rax, qword ptr [rbp - 8]
0x400086:	add	rax, rdx
0x400089:	mov	dword ptr [rax], 0
0x40008f:	add	qword ptr [rbp - 0x18], 1
0x400094:	jmp	0x40006b
<Block for 0x400096, 13 bytes>
0x400096:	mov	rax, qword ptr [rbp - 8]
0x40009a:	mov	eax, dword ptr [rax]
0x40009c:	mov	edi, eax
0x40009e:	call	0x500008
<Block for 0x40006b, 11 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0x1c]
0x40006e:	cdqe	
0x400070:	cmp	qword ptr [rbp - 0x18], rax
0x400074:	jae	0x400096
<Block for 0x4000a3, 7 bytes>
0x4000a3:	cmp	qword ptr [rbp - 8], 0
0x4000a8:	je	0x4000b6
<Block for 0x4000b6, 3 bytes>
0x4000b6:	nop	
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000aa, 12 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500010
