<Block for 0x400000, 27 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	byte ptr [rbp - 0x19], 0x43
0x400011:	mov	edi, 8
0x400016:	call	0x500000
<Block for 0x40001b, 11 bytes>
0x40001b:	mov	rbx, rax
0x40001e:	mov	rdi, rbx
0x400021:	call	0x400162
<Block for 0x400026, 29 bytes>
0x400026:	mov	qword ptr [rbp - 0x18], rbx
0x40002a:	mov	rax, qword ptr [rbp - 0x18]
0x40002e:	mov	rax, qword ptr [rax]
0x400031:	mov	rcx, qword ptr [rax]
0x400034:	movsx	edx, byte ptr [rbp - 0x19]
0x400038:	mov	rax, qword ptr [rbp - 0x18]
0x40003c:	mov	esi, edx
0x40003e:	mov	rdi, rax
0x400041:	call	rcx
<Block for 0x400043, 9 bytes>
0x400043:	mov	rax, qword ptr [rbp - 0x18]
0x400047:	test	rax, rax
0x40004a:	je	0x400059
<Block for 0x400059, 8 bytes>
0x400059:	nop	
0x40005a:	add	rsp, 0x18
0x40005e:	pop	rbx
0x40005f:	pop	rbp
0x400060:	ret	
<Block for 0x40004c, 13 bytes>
0x40004c:	mov	esi, 8
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
