<Block for 0x400061, 28 bytes>
0x400061:	endbr64	
0x400065:	push	rbp
0x400066:	mov	rbp, rsp
0x400069:	push	rbx
0x40006a:	sub	rsp, 0x18
0x40006e:	mov	byte ptr [rbp - 0x19], 0x43
0x400072:	movsx	eax, byte ptr [rbp - 0x19]
0x400076:	mov	edi, eax
0x400078:	call	0x500010
<Block for 0x40007d, 10 bytes>
0x40007d:	mov	edi, 8
0x400082:	call	0x500000
<Block for 0x400087, 11 bytes>
0x400087:	mov	rbx, rax
0x40008a:	mov	rdi, rbx
0x40008d:	call	0x400190
<Block for 0x400092, 29 bytes>
0x400092:	mov	qword ptr [rbp - 0x18], rbx
0x400096:	mov	rax, qword ptr [rbp - 0x18]
0x40009a:	mov	rax, qword ptr [rax]
0x40009d:	mov	rcx, qword ptr [rax]
0x4000a0:	movsx	edx, byte ptr [rbp - 0x19]
0x4000a4:	mov	rax, qword ptr [rbp - 0x18]
0x4000a8:	mov	esi, edx
0x4000aa:	mov	rdi, rax
0x4000ad:	call	rcx
<Block for 0x4000af, 9 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 0x18]
0x4000b3:	test	rax, rax
0x4000b6:	je	0x4000c5
<Block for 0x4000c5, 8 bytes>
0x4000c5:	nop	
0x4000c6:	add	rsp, 0x18
0x4000ca:	pop	rbx
0x4000cb:	pop	rbp
0x4000cc:	ret	
<Block for 0x4000b8, 13 bytes>
0x4000b8:	mov	esi, 8
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500008
