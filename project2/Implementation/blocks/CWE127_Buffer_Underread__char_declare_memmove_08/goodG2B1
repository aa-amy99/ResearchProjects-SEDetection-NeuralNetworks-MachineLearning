<Block for 0x4000d5, 55 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0xf0
0x4000e4:	mov	rax, qword ptr fs:[0x28]
0x4000ed:	mov	qword ptr [rbp - 8], rax
0x4000f1:	xor	eax, eax
0x4000f3:	lea	rax, [rbp - 0xe0]
0x4000fa:	mov	edx, 0x63
0x4000ff:	mov	esi, 0x41
0x400104:	mov	rdi, rax
0x400107:	call	0x500000
<Block for 0x40010c, 14 bytes>
0x40010c:	mov	byte ptr [rbp - 0x7d], 0
0x400110:	mov	eax, 0
0x400115:	call	0x40000f
<Block for 0x40011a, 4 bytes>
0x40011a:	test	eax, eax
0x40011c:	je	0x40012c
<Block for 0x40012c, 36 bytes>
0x40012c:	lea	rax, [rbp - 0xe0]
0x400133:	mov	qword ptr [rbp - 0xe8], rax
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rdi, [rip + 0x143]
0x400125:	call	0x500010
<Block for 0x400150, 31 bytes>
0x400150:	mov	byte ptr [rbp - 0xd], 0
0x400154:	mov	rcx, qword ptr [rbp - 0xe8]
0x40015b:	lea	rax, [rbp - 0x70]
0x40015f:	mov	edx, 0x64
0x400164:	mov	rsi, rcx
0x400167:	mov	rdi, rax
0x40016a:	call	0x500008
<Block for 0x40012a, 2 bytes>
0x40012a:	jmp	0x40013a
<Block for 0x40016f, 16 bytes>
0x40016f:	mov	byte ptr [rbp - 0xd], 0
0x400173:	lea	rax, [rbp - 0x70]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500010
<Block for 0x40013a, 22 bytes>
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x40017f, 16 bytes>
0x40017f:	nop	
0x400180:	mov	rax, qword ptr [rbp - 8]
0x400184:	xor	rax, qword ptr fs:[0x28]
0x40018d:	je	0x400194
<Block for 0x400194, 2 bytes>
0x400194:	leave	
0x400195:	ret	
<Block for 0x40018f, 5 bytes>
0x40018f:	call	0x500018
