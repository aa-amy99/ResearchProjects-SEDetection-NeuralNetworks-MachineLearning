<Block for 0x40023e, 76 bytes>
0x40023e:	endbr64	
0x400242:	push	rbp
0x400243:	mov	rbp, rsp
0x400246:	sub	rsp, 0x40
0x40024a:	mov	dword ptr [rbp - 0x34], edi
0x40024d:	mov	rax, qword ptr fs:[0x28]
0x400256:	mov	qword ptr [rbp - 8], rax
0x40025a:	xor	eax, eax
0x40025c:	mov	qword ptr [rbp - 0x30], 0
0x400264:	mov	qword ptr [rbp - 0x28], 0
0x40026c:	mov	qword ptr [rbp - 0x20], 0
0x400274:	mov	qword ptr [rbp - 0x18], 0
0x40027c:	mov	qword ptr [rbp - 0x10], 0
0x400284:	cmp	dword ptr [rbp - 0x34], 0
0x400288:	js	0x4002a2
<Block for 0x4002a2, 12 bytes>
0x4002a2:	lea	rdi, [rip + 0x187]
0x4002a9:	call	0x500008
<Block for 0x40028a, 6 bytes>
0x40028a:	cmp	dword ptr [rbp - 0x34], 9
0x40028e:	jg	0x4002a2
<Block for 0x4002ae, 16 bytes>
0x4002ae:	nop	
0x4002af:	mov	rax, qword ptr [rbp - 8]
0x4002b3:	xor	rax, qword ptr fs:[0x28]
0x4002bc:	je	0x4002c3
<Block for 0x400290, 16 bytes>
0x400290:	mov	eax, dword ptr [rbp - 0x34]
0x400293:	cdqe	
0x400295:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400299:	mov	edi, eax
0x40029b:	call	0x500000
<Block for 0x4002c3, 2 bytes>
0x4002c3:	leave	
0x4002c4:	ret	
<Block for 0x4002be, 5 bytes>
0x4002be:	call	0x500010
<Block for 0x4002a0, 2 bytes>
0x4002a0:	jmp	0x4002ae
