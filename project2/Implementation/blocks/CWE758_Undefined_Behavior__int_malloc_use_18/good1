<Block for 0x400052, 27 bytes>
0x400052:	endbr64	
0x400056:	push	rbp
0x400057:	mov	rbp, rsp
0x40005a:	sub	rsp, 0x10
0x40005e:	nop	
0x40005f:	endbr64	
0x400063:	mov	edi, 4
0x400068:	call	0x500000
<Block for 0x40006d, 11 bytes>
0x40006d:	mov	qword ptr [rbp - 8], rax
0x400071:	cmp	qword ptr [rbp - 8], 0
0x400076:	jne	0x400082
<Block for 0x400078, 10 bytes>
0x400078:	mov	edi, 0xffffffff
0x40007d:	call	0x500008
<Block for 0x400082, 35 bytes>
0x400082:	mov	dword ptr [rbp - 0x10], 5
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	mov	edx, dword ptr [rbp - 0x10]
0x400090:	mov	dword ptr [rax], edx
0x400092:	mov	rax, qword ptr [rbp - 8]
0x400096:	mov	eax, dword ptr [rax]
0x400098:	mov	dword ptr [rbp - 0xc], eax
0x40009b:	mov	eax, dword ptr [rbp - 0xc]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500018
<Block for 0x4000a5, 12 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500010
<Block for 0x4000b1, 3 bytes>
0x4000b1:	nop	
0x4000b2:	leave	
0x4000b3:	ret	
