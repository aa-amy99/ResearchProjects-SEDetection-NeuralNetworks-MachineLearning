<Block for 0x4000b7, 33 bytes>
0x4000b7:	endbr64	
0x4000bb:	push	rbp
0x4000bc:	mov	rbp, rsp
0x4000bf:	sub	rsp, 0x10
0x4000c3:	mov	rax, qword ptr [rip + 0xde]
0x4000ca:	mov	qword ptr [rbp - 8], rax
0x4000ce:	mov	qword ptr [rbp - 0x10], 0
0x4000d6:	jmp	0x4000fd
<Block for 0x4000fd, 12 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	mov	rdi, rax
0x400104:	call	0x500020
<Block for 0x400109, 6 bytes>
0x400109:	cmp	qword ptr [rbp - 0x10], rax
0x40010d:	jb	0x4000d8
<Block for 0x4000d8, 18 bytes>
0x4000d8:	mov	rdx, qword ptr [rbp - 8]
0x4000dc:	mov	rax, qword ptr [rbp - 0x10]
0x4000e0:	add	rax, rdx
0x4000e3:	movzx	eax, byte ptr [rax]
0x4000e6:	cmp	al, 0x53
0x4000e8:	jne	0x4000f8
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500008
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0xbf]
0x4000f1:	call	0x500000
<Block for 0x4000f8, 17 bytes>
0x4000f8:	add	qword ptr [rbp - 0x10], 1
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	mov	rdi, rax
0x400104:	call	0x500020
<Block for 0x40011b, 3 bytes>
0x40011b:	nop	
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x4000f6, 2 bytes>
0x4000f6:	jmp	0x40010f
