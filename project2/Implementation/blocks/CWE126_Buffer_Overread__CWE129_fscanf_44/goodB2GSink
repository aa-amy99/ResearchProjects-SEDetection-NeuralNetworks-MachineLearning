<Block for 0x4001a3, 76 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	sub	rsp, 0x40
0x4001af:	mov	dword ptr [rbp - 0x34], edi
0x4001b2:	mov	rax, qword ptr fs:[0x28]
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	xor	eax, eax
0x4001c1:	mov	qword ptr [rbp - 0x30], 0
0x4001c9:	mov	qword ptr [rbp - 0x28], 0
0x4001d1:	mov	qword ptr [rbp - 0x20], 0
0x4001d9:	mov	qword ptr [rbp - 0x18], 0
0x4001e1:	mov	qword ptr [rbp - 0x10], 0
0x4001e9:	cmp	dword ptr [rbp - 0x34], 0
0x4001ed:	js	0x400207
<Block for 0x400207, 12 bytes>
0x400207:	lea	rdi, [rip + 0xd2]
0x40020e:	call	0x500008
<Block for 0x4001ef, 6 bytes>
0x4001ef:	cmp	dword ptr [rbp - 0x34], 9
0x4001f3:	jg	0x400207
<Block for 0x400213, 16 bytes>
0x400213:	nop	
0x400214:	mov	rax, qword ptr [rbp - 8]
0x400218:	xor	rax, qword ptr fs:[0x28]
0x400221:	je	0x400228
<Block for 0x4001f5, 16 bytes>
0x4001f5:	mov	eax, dword ptr [rbp - 0x34]
0x4001f8:	cdqe	
0x4001fa:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001fe:	mov	edi, eax
0x400200:	call	0x500000
<Block for 0x400228, 2 bytes>
0x400228:	leave	
0x400229:	ret	
<Block for 0x400223, 5 bytes>
0x400223:	call	0x500010
<Block for 0x400205, 2 bytes>
0x400205:	jmp	0x400213
