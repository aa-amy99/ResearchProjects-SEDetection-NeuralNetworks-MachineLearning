<Block for 0x40022a, 76 bytes>
0x40022a:	endbr64	
0x40022e:	push	rbp
0x40022f:	mov	rbp, rsp
0x400232:	sub	rsp, 0x20
0x400236:	mov	rax, qword ptr fs:[0x28]
0x40023f:	mov	qword ptr [rbp - 8], rax
0x400243:	xor	eax, eax
0x400245:	lea	rax, [rip - 0xa9]
0x40024c:	mov	qword ptr [rbp - 0x10], rax
0x400250:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400257:	mov	rax, qword ptr [rip + 0xffdba]
0x40025e:	lea	rdx, [rbp - 0x14]
0x400262:	lea	rsi, [rip + 0x6e]
0x400269:	mov	rdi, rax
0x40026c:	mov	eax, 0
0x400271:	call	0x500020
<Block for 0x400276, 11 bytes>
0x400276:	mov	eax, dword ptr [rbp - 0x14]
0x400279:	mov	rdx, qword ptr [rbp - 0x10]
0x40027d:	mov	edi, eax
0x40027f:	call	rdx
<Block for 0x400281, 16 bytes>
0x400281:	nop	
0x400282:	mov	rax, qword ptr [rbp - 8]
0x400286:	xor	rax, qword ptr fs:[0x28]
0x40028f:	je	0x400296
<Block for 0x400296, 2 bytes>
0x400296:	leave	
0x400297:	ret	
<Block for 0x400291, 5 bytes>
0x400291:	call	0x500010
