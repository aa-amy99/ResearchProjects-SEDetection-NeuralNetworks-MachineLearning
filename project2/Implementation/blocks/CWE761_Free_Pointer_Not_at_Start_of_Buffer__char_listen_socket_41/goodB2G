<Block for 0x400295, 37 bytes>
0x400295:	endbr64	
0x400299:	push	rbp
0x40029a:	mov	rbp, rsp
0x40029d:	sub	rsp, 0x50
0x4002a1:	mov	rax, qword ptr fs:[0x28]
0x4002aa:	mov	qword ptr [rbp - 8], rax
0x4002ae:	xor	eax, eax
0x4002b0:	mov	edi, 0x64
0x4002b5:	call	0x500010
<Block for 0x4002ba, 11 bytes>
0x4002ba:	mov	qword ptr [rbp - 0x38], rax
0x4002be:	cmp	qword ptr [rbp - 0x38], 0
0x4002c3:	jne	0x4002cf
<Block for 0x4002c5, 10 bytes>
0x4002c5:	mov	edi, 0xffffffff
0x4002ca:	call	0x500018
<Block for 0x4002cf, 33 bytes>
0x4002cf:	mov	rax, qword ptr [rbp - 0x38]
0x4002d3:	mov	byte ptr [rax], 0
0x4002d6:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4002dd:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4002e4:	mov	rax, qword ptr [rbp - 0x38]
0x4002e8:	mov	rdi, rax
0x4002eb:	call	0x500020
<Block for 0x4002f0, 24 bytes>
0x4002f0:	mov	qword ptr [rbp - 0x30], rax
0x4002f4:	mov	edx, 6
0x4002f9:	mov	esi, 1
0x4002fe:	mov	edi, 2
0x400303:	call	0x500028
<Block for 0x400308, 13 bytes>
0x400308:	mov	dword ptr [rbp - 0x40], eax
0x40030b:	cmp	dword ptr [rbp - 0x40], -1
0x40030f:	je	0x400433
<Block for 0x400433, 3 bytes>
0x400433:	nop	
0x400434:	jmp	0x40043d
<Block for 0x400315, 22 bytes>
0x400315:	lea	rax, [rbp - 0x20]
0x400319:	mov	edx, 0x10
0x40031e:	mov	esi, 0
0x400323:	mov	rdi, rax
0x400326:	call	0x500030
<Block for 0x40043d, 6 bytes>
0x40043d:	cmp	dword ptr [rbp - 0x40], -1
0x400441:	je	0x40044d
<Block for 0x40032b, 23 bytes>
0x40032b:	mov	word ptr [rbp - 0x20], 2
0x400331:	mov	dword ptr [rbp - 0x1c], 0
0x400338:	mov	edi, 0x6987
0x40033d:	call	0x500038
<Block for 0x40044d, 6 bytes>
0x40044d:	cmp	dword ptr [rbp - 0x44], -1
0x400451:	je	0x40045d
<Block for 0x400443, 10 bytes>
0x400443:	mov	eax, dword ptr [rbp - 0x40]
0x400446:	mov	edi, eax
0x400448:	call	0x500068
<Block for 0x400342, 26 bytes>
0x400342:	mov	word ptr [rbp - 0x1e], ax
0x400346:	lea	rcx, [rbp - 0x20]
0x40034a:	mov	eax, dword ptr [rbp - 0x40]
0x40034d:	mov	edx, 0x10
0x400352:	mov	rsi, rcx
0x400355:	mov	edi, eax
0x400357:	call	0x500040
<Block for 0x40045d, 12 bytes>
0x40045d:	mov	rax, qword ptr [rbp - 0x38]
0x400461:	mov	rdi, rax
0x400464:	call	0x400235
<Block for 0x400453, 10 bytes>
0x400453:	mov	eax, dword ptr [rbp - 0x44]
0x400456:	mov	edi, eax
0x400458:	call	0x500068
<Block for 0x40035c, 9 bytes>
0x40035c:	cmp	eax, -1
0x40035f:	je	0x400436
<Block for 0x400469, 16 bytes>
0x400469:	nop	
0x40046a:	mov	rax, qword ptr [rbp - 8]
0x40046e:	xor	rax, qword ptr fs:[0x28]
0x400477:	je	0x40047e
<Block for 0x400436, 3 bytes>
0x400436:	nop	
0x400437:	jmp	0x40043d
<Block for 0x400365, 15 bytes>
0x400365:	mov	eax, dword ptr [rbp - 0x40]
0x400368:	mov	esi, 5
0x40036d:	mov	edi, eax
0x40036f:	call	0x500048
<Block for 0x40047e, 2 bytes>
0x40047e:	leave	
0x40047f:	ret	
<Block for 0x400479, 5 bytes>
0x400479:	call	0x500070
<Block for 0x400374, 9 bytes>
0x400374:	cmp	eax, -1
0x400377:	je	0x400439
<Block for 0x400439, 3 bytes>
0x400439:	nop	
0x40043a:	jmp	0x40043d
<Block for 0x40037d, 20 bytes>
0x40037d:	mov	eax, dword ptr [rbp - 0x40]
0x400380:	mov	edx, 0
0x400385:	mov	esi, 0
0x40038a:	mov	edi, eax
0x40038c:	call	0x500050
<Block for 0x400391, 13 bytes>
0x400391:	mov	dword ptr [rbp - 0x44], eax
0x400394:	cmp	dword ptr [rbp - 0x44], -1
0x400398:	je	0x40043c
<Block for 0x40039e, 39 bytes>
0x40039e:	mov	eax, 0x63
0x4003a3:	sub	rax, qword ptr [rbp - 0x30]
0x4003a7:	mov	rdx, rax
0x4003aa:	mov	rcx, qword ptr [rbp - 0x38]
0x4003ae:	mov	rax, qword ptr [rbp - 0x30]
0x4003b2:	lea	rsi, [rcx + rax]
0x4003b6:	mov	eax, dword ptr [rbp - 0x44]
0x4003b9:	mov	ecx, 0
0x4003be:	mov	edi, eax
0x4003c0:	call	0x500058
<Block for 0x40043c, 1 bytes>
0x40043c:	nop	
<Block for 0x4003c5, 9 bytes>
0x4003c5:	mov	dword ptr [rbp - 0x3c], eax
0x4003c8:	cmp	dword ptr [rbp - 0x3c], -1
0x4003cc:	je	0x40043d
<Block for 0x4003ce, 6 bytes>
0x4003ce:	cmp	dword ptr [rbp - 0x3c], 0
0x4003d2:	je	0x40043d
<Block for 0x4003d4, 40 bytes>
0x4003d4:	mov	eax, dword ptr [rbp - 0x3c]
0x4003d7:	movsxd	rdx, eax
0x4003da:	mov	rax, qword ptr [rbp - 0x30]
0x4003de:	add	rdx, rax
0x4003e1:	mov	rax, qword ptr [rbp - 0x38]
0x4003e5:	add	rax, rdx
0x4003e8:	mov	byte ptr [rax], 0
0x4003eb:	mov	rax, qword ptr [rbp - 0x38]
0x4003ef:	mov	esi, 0xd
0x4003f4:	mov	rdi, rax
0x4003f7:	call	0x500060
<Block for 0x4003fc, 11 bytes>
0x4003fc:	mov	qword ptr [rbp - 0x28], rax
0x400400:	cmp	qword ptr [rbp - 0x28], 0
0x400405:	je	0x40040e
<Block for 0x40040e, 17 bytes>
0x40040e:	mov	rax, qword ptr [rbp - 0x38]
0x400412:	mov	esi, 0xa
0x400417:	mov	rdi, rax
0x40041a:	call	0x500060
<Block for 0x400407, 24 bytes>
0x400407:	mov	rax, qword ptr [rbp - 0x28]
0x40040b:	mov	byte ptr [rax], 0
0x40040e:	mov	rax, qword ptr [rbp - 0x38]
0x400412:	mov	esi, 0xa
0x400417:	mov	rdi, rax
0x40041a:	call	0x500060
<Block for 0x40041f, 11 bytes>
0x40041f:	mov	qword ptr [rbp - 0x28], rax
0x400423:	cmp	qword ptr [rbp - 0x28], 0
0x400428:	je	0x40043d
<Block for 0x40042a, 9 bytes>
0x40042a:	mov	rax, qword ptr [rbp - 0x28]
0x40042e:	mov	byte ptr [rax], 0
0x400431:	jmp	0x40043d
