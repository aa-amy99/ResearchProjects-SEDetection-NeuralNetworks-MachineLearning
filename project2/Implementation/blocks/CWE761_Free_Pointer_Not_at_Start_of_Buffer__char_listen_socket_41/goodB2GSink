<Block for 0x400235, 26 bytes>
0x400235:	endbr64	
0x400239:	push	rbp
0x40023a:	mov	rbp, rsp
0x40023d:	sub	rsp, 0x20
0x400241:	mov	qword ptr [rbp - 0x18], rdi
0x400245:	mov	qword ptr [rbp - 8], 0
0x40024d:	jmp	0x400274
<Block for 0x400274, 12 bytes>
0x400274:	mov	rax, qword ptr [rbp - 0x18]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500020
<Block for 0x400280, 6 bytes>
0x400280:	cmp	qword ptr [rbp - 8], rax
0x400284:	jb	0x40024f
<Block for 0x40024f, 18 bytes>
0x40024f:	mov	rdx, qword ptr [rbp - 0x18]
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	add	rax, rdx
0x40025a:	movzx	eax, byte ptr [rax]
0x40025d:	cmp	al, 0x53
0x40025f:	jne	0x40026f
<Block for 0x400286, 12 bytes>
0x400286:	mov	rax, qword ptr [rbp - 0x18]
0x40028a:	mov	rdi, rax
0x40028d:	call	0x500008
<Block for 0x400261, 12 bytes>
0x400261:	lea	rdi, [rip + 0x22d]
0x400268:	call	0x500000
<Block for 0x40026f, 17 bytes>
0x40026f:	add	qword ptr [rbp - 8], 1
0x400274:	mov	rax, qword ptr [rbp - 0x18]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500020
<Block for 0x400292, 3 bytes>
0x400292:	nop	
0x400293:	leave	
0x400294:	ret	
<Block for 0x40026d, 2 bytes>
0x40026d:	jmp	0x400286
