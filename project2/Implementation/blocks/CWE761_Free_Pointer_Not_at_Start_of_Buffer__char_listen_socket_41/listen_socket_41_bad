<Block for 0x40004a, 37 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x50
0x400056:	mov	rax, qword ptr fs:[0x28]
0x40005f:	mov	qword ptr [rbp - 8], rax
0x400063:	xor	eax, eax
0x400065:	mov	edi, 0x64
0x40006a:	call	0x500010
<Block for 0x40006f, 11 bytes>
0x40006f:	mov	qword ptr [rbp - 0x38], rax
0x400073:	cmp	qword ptr [rbp - 0x38], 0
0x400078:	jne	0x400084
<Block for 0x40007a, 10 bytes>
0x40007a:	mov	edi, 0xffffffff
0x40007f:	call	0x500018
<Block for 0x400084, 33 bytes>
0x400084:	mov	rax, qword ptr [rbp - 0x38]
0x400088:	mov	byte ptr [rax], 0
0x40008b:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400092:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400099:	mov	rax, qword ptr [rbp - 0x38]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500020
<Block for 0x4000a5, 24 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x30], rax
0x4000a9:	mov	edx, 6
0x4000ae:	mov	esi, 1
0x4000b3:	mov	edi, 2
0x4000b8:	call	0x500028
<Block for 0x4000bd, 13 bytes>
0x4000bd:	mov	dword ptr [rbp - 0x40], eax
0x4000c0:	cmp	dword ptr [rbp - 0x40], -1
0x4000c4:	je	0x4001e8
<Block for 0x4001e8, 3 bytes>
0x4001e8:	nop	
0x4001e9:	jmp	0x4001f2
<Block for 0x4000ca, 22 bytes>
0x4000ca:	lea	rax, [rbp - 0x20]
0x4000ce:	mov	edx, 0x10
0x4000d3:	mov	esi, 0
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500030
<Block for 0x4001f2, 6 bytes>
0x4001f2:	cmp	dword ptr [rbp - 0x40], -1
0x4001f6:	je	0x400202
<Block for 0x4000e0, 23 bytes>
0x4000e0:	mov	word ptr [rbp - 0x20], 2
0x4000e6:	mov	dword ptr [rbp - 0x1c], 0
0x4000ed:	mov	edi, 0x6987
0x4000f2:	call	0x500038
<Block for 0x400202, 6 bytes>
0x400202:	cmp	dword ptr [rbp - 0x44], -1
0x400206:	je	0x400212
<Block for 0x4001f8, 10 bytes>
0x4001f8:	mov	eax, dword ptr [rbp - 0x40]
0x4001fb:	mov	edi, eax
0x4001fd:	call	0x500068
<Block for 0x4000f7, 26 bytes>
0x4000f7:	mov	word ptr [rbp - 0x1e], ax
0x4000fb:	lea	rcx, [rbp - 0x20]
0x4000ff:	mov	eax, dword ptr [rbp - 0x40]
0x400102:	mov	edx, 0x10
0x400107:	mov	rsi, rcx
0x40010a:	mov	edi, eax
0x40010c:	call	0x500040
<Block for 0x400212, 12 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x38]
0x400216:	mov	rdi, rax
0x400219:	call	0x400000
<Block for 0x400208, 10 bytes>
0x400208:	mov	eax, dword ptr [rbp - 0x44]
0x40020b:	mov	edi, eax
0x40020d:	call	0x500068
<Block for 0x400111, 9 bytes>
0x400111:	cmp	eax, -1
0x400114:	je	0x4001eb
<Block for 0x40021e, 16 bytes>
0x40021e:	nop	
0x40021f:	mov	rax, qword ptr [rbp - 8]
0x400223:	xor	rax, qword ptr fs:[0x28]
0x40022c:	je	0x400233
<Block for 0x4001eb, 3 bytes>
0x4001eb:	nop	
0x4001ec:	jmp	0x4001f2
<Block for 0x40011a, 15 bytes>
0x40011a:	mov	eax, dword ptr [rbp - 0x40]
0x40011d:	mov	esi, 5
0x400122:	mov	edi, eax
0x400124:	call	0x500048
<Block for 0x400233, 2 bytes>
0x400233:	leave	
0x400234:	ret	
<Block for 0x40022e, 5 bytes>
0x40022e:	call	0x500070
<Block for 0x400129, 9 bytes>
0x400129:	cmp	eax, -1
0x40012c:	je	0x4001ee
<Block for 0x4001ee, 3 bytes>
0x4001ee:	nop	
0x4001ef:	jmp	0x4001f2
<Block for 0x400132, 20 bytes>
0x400132:	mov	eax, dword ptr [rbp - 0x40]
0x400135:	mov	edx, 0
0x40013a:	mov	esi, 0
0x40013f:	mov	edi, eax
0x400141:	call	0x500050
<Block for 0x400146, 13 bytes>
0x400146:	mov	dword ptr [rbp - 0x44], eax
0x400149:	cmp	dword ptr [rbp - 0x44], -1
0x40014d:	je	0x4001f1
<Block for 0x400153, 39 bytes>
0x400153:	mov	eax, 0x63
0x400158:	sub	rax, qword ptr [rbp - 0x30]
0x40015c:	mov	rdx, rax
0x40015f:	mov	rcx, qword ptr [rbp - 0x38]
0x400163:	mov	rax, qword ptr [rbp - 0x30]
0x400167:	lea	rsi, [rcx + rax]
0x40016b:	mov	eax, dword ptr [rbp - 0x44]
0x40016e:	mov	ecx, 0
0x400173:	mov	edi, eax
0x400175:	call	0x500058
<Block for 0x4001f1, 1 bytes>
0x4001f1:	nop	
<Block for 0x40017a, 9 bytes>
0x40017a:	mov	dword ptr [rbp - 0x3c], eax
0x40017d:	cmp	dword ptr [rbp - 0x3c], -1
0x400181:	je	0x4001f2
<Block for 0x400183, 6 bytes>
0x400183:	cmp	dword ptr [rbp - 0x3c], 0
0x400187:	je	0x4001f2
<Block for 0x400189, 40 bytes>
0x400189:	mov	eax, dword ptr [rbp - 0x3c]
0x40018c:	movsxd	rdx, eax
0x40018f:	mov	rax, qword ptr [rbp - 0x30]
0x400193:	add	rdx, rax
0x400196:	mov	rax, qword ptr [rbp - 0x38]
0x40019a:	add	rax, rdx
0x40019d:	mov	byte ptr [rax], 0
0x4001a0:	mov	rax, qword ptr [rbp - 0x38]
0x4001a4:	mov	esi, 0xd
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500060
<Block for 0x4001b1, 11 bytes>
0x4001b1:	mov	qword ptr [rbp - 0x28], rax
0x4001b5:	cmp	qword ptr [rbp - 0x28], 0
0x4001ba:	je	0x4001c3
<Block for 0x4001c3, 17 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x38]
0x4001c7:	mov	esi, 0xa
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500060
<Block for 0x4001bc, 24 bytes>
0x4001bc:	mov	rax, qword ptr [rbp - 0x28]
0x4001c0:	mov	byte ptr [rax], 0
0x4001c3:	mov	rax, qword ptr [rbp - 0x38]
0x4001c7:	mov	esi, 0xa
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500060
<Block for 0x4001d4, 11 bytes>
0x4001d4:	mov	qword ptr [rbp - 0x28], rax
0x4001d8:	cmp	qword ptr [rbp - 0x28], 0
0x4001dd:	je	0x4001f2
<Block for 0x4001df, 9 bytes>
0x4001df:	mov	rax, qword ptr [rbp - 0x28]
0x4001e3:	mov	byte ptr [rax], 0
0x4001e6:	jmp	0x4001f2
