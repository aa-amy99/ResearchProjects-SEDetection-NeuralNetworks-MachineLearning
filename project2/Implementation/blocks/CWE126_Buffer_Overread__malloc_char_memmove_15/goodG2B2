<Block for 0x4001a6, 45 bytes>
0x4001a6:	endbr64	
0x4001aa:	push	rbp
0x4001ab:	mov	rbp, rsp
0x4001ae:	add	rsp, -0x80
0x4001b2:	mov	rax, qword ptr fs:[0x28]
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	xor	eax, eax
0x4001c1:	mov	qword ptr [rbp - 0x78], 0
0x4001c9:	mov	edi, 0x64
0x4001ce:	call	0x500000
<Block for 0x4001d3, 11 bytes>
0x4001d3:	mov	qword ptr [rbp - 0x78], rax
0x4001d7:	cmp	qword ptr [rbp - 0x78], 0
0x4001dc:	jne	0x4001e8
<Block for 0x4001de, 10 bytes>
0x4001de:	mov	edi, 0xffffffff
0x4001e3:	call	0x500008
<Block for 0x4001e8, 22 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ec:	mov	edx, 0x63
0x4001f1:	mov	esi, 0x41
0x4001f6:	mov	rdi, rax
0x4001f9:	call	0x500010
<Block for 0x4001fe, 34 bytes>
0x4001fe:	mov	rax, qword ptr [rbp - 0x78]
0x400202:	add	rax, 0x63
0x400206:	mov	byte ptr [rax], 0
0x400209:	nop	
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	edx, 0x63
0x400213:	mov	esi, 0x43
0x400218:	mov	rdi, rax
0x40021b:	call	0x500010
<Block for 0x400220, 16 bytes>
0x400220:	mov	byte ptr [rbp - 0xd], 0
0x400224:	lea	rax, [rbp - 0x70]
0x400228:	mov	rdi, rax
0x40022b:	call	0x500018
<Block for 0x400230, 22 bytes>
0x400230:	mov	rdx, rax
0x400233:	mov	rcx, qword ptr [rbp - 0x78]
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rsi, rcx
0x40023e:	mov	rdi, rax
0x400241:	call	0x500020
<Block for 0x400246, 16 bytes>
0x400246:	mov	byte ptr [rbp - 0xd], 0
0x40024a:	lea	rax, [rbp - 0x70]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500028
<Block for 0x400256, 12 bytes>
0x400256:	mov	rax, qword ptr [rbp - 0x78]
0x40025a:	mov	rdi, rax
0x40025d:	call	0x500030
<Block for 0x400262, 16 bytes>
0x400262:	nop	
0x400263:	mov	rax, qword ptr [rbp - 8]
0x400267:	xor	rax, qword ptr fs:[0x28]
0x400270:	je	0x400277
<Block for 0x400277, 2 bytes>
0x400277:	leave	
0x400278:	ret	
<Block for 0x400272, 5 bytes>
0x400272:	call	0x500038
