<Block for 0x40008a, 72 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	sub	rsp, 0x30
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	nop	
0x4000a6:	endbr64	
0x4000aa:	movabs	rax, 0x6c69662f706d742f
0x4000b4:	movabs	rdx, 0x58585858585865
0x4000be:	mov	qword ptr [rbp - 0x20], rax
0x4000c2:	mov	qword ptr [rbp - 0x18], rdx
0x4000c6:	lea	rax, [rbp - 0x20]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500030
<Block for 0x4000d2, 15 bytes>
0x4000d2:	mov	dword ptr [rbp - 0x24], eax
0x4000d5:	lea	rax, [rbp - 0x20]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500010
<Block for 0x4000e1, 6 bytes>
0x4000e1:	cmp	dword ptr [rbp - 0x24], -1
0x4000e5:	je	0x4000fd
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rdi, [rip + 0x42]
0x4000ee:	call	0x500010
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500038
<Block for 0x4000f3, 10 bytes>
0x4000f3:	mov	eax, dword ptr [rbp - 0x24]
0x4000f6:	mov	edi, eax
0x4000f8:	call	0x500020
