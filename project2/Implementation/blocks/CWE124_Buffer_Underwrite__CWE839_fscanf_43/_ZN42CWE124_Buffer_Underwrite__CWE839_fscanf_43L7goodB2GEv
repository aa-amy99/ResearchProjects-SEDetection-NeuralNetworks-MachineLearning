<Block for 0x4001ed, 46 bytes>
0x4001ed:	endbr64	
0x4001f1:	push	rbp
0x4001f2:	mov	rbp, rsp
0x4001f5:	sub	rsp, 0x40
0x4001f9:	mov	rax, qword ptr fs:[0x28]
0x400202:	mov	qword ptr [rbp - 8], rax
0x400206:	xor	eax, eax
0x400208:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40020f:	lea	rax, [rbp - 0x38]
0x400213:	mov	rdi, rax
0x400216:	call	0x4001bb
<Block for 0x40021b, 47 bytes>
0x40021b:	mov	qword ptr [rbp - 0x30], 0
0x400223:	mov	qword ptr [rbp - 0x28], 0
0x40022b:	mov	qword ptr [rbp - 0x20], 0
0x400233:	mov	qword ptr [rbp - 0x18], 0
0x40023b:	mov	qword ptr [rbp - 0x10], 0
0x400243:	mov	eax, dword ptr [rbp - 0x38]
0x400246:	test	eax, eax
0x400248:	js	0x400282
<Block for 0x400282, 12 bytes>
0x400282:	lea	rdi, [rip + 0x5f]
0x400289:	call	0x500018
<Block for 0x40024a, 8 bytes>
0x40024a:	mov	eax, dword ptr [rbp - 0x38]
0x40024d:	cmp	eax, 9
0x400250:	jg	0x400282
<Block for 0x40028e, 2 bytes>
0x40028e:	jmp	0x400291
<Block for 0x400252, 26 bytes>
0x400252:	mov	eax, dword ptr [rbp - 0x38]
0x400255:	cdqe	
0x400257:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40025f:	mov	dword ptr [rbp - 0x34], 0
0x400266:	cmp	dword ptr [rbp - 0x34], 9
0x40026a:	jg	0x400290
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 8]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002a6
<Block for 0x40026c, 16 bytes>
0x40026c:	mov	eax, dword ptr [rbp - 0x34]
0x40026f:	cdqe	
0x400271:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400275:	mov	edi, eax
0x400277:	call	0x500010
<Block for 0x400290, 1 bytes>
0x400290:	nop	
<Block for 0x4002a6, 2 bytes>
0x4002a6:	leave	
0x4002a7:	ret	
<Block for 0x4002a1, 5 bytes>
0x4002a1:	call	0x500020
<Block for 0x40027c, 6 bytes>
0x40027c:	add	dword ptr [rbp - 0x34], 1
0x400280:	jmp	0x400266
<Block for 0x400266, 6 bytes>
0x400266:	cmp	dword ptr [rbp - 0x34], 9
0x40026a:	jg	0x400290
