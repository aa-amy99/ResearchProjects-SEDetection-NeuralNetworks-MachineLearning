<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x90], 0
0x400029:	mov	edi, 0x64
0x40002e:	call	0x500000
<Block for 0x400033, 17 bytes>
0x400033:	mov	qword ptr [rbp - 0x88], rax
0x40003a:	cmp	qword ptr [rbp - 0x88], 0
0x400042:	jne	0x40004e
<Block for 0x400044, 10 bytes>
0x400044:	mov	edi, 0xffffffff
0x400049:	call	0x500008
<Block for 0x40004e, 25 bytes>
0x40004e:	mov	rax, qword ptr [rbp - 0x88]
0x400055:	mov	edx, 0x63
0x40005a:	mov	esi, 0x41
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x400067, 73 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x88]
0x40006e:	add	rax, 0x63
0x400072:	mov	byte ptr [rax], 0
0x400075:	mov	rax, qword ptr [rbp - 0x88]
0x40007c:	sub	rax, 8
0x400080:	mov	qword ptr [rbp - 0x90], rax
0x400087:	mov	rax, qword ptr [rbp - 0x90]
0x40008e:	mov	qword ptr [rbp - 0x80], rax
0x400092:	mov	rax, qword ptr [rbp - 0x80]
0x400096:	mov	qword ptr [rbp - 0x78], rax
0x40009a:	lea	rax, [rbp - 0x70]
0x40009e:	mov	edx, 0x63
0x4000a3:	mov	esi, 0x43
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
<Block for 0x4000b0, 16 bytes>
0x4000b0:	mov	byte ptr [rbp - 0xd], 0
0x4000b4:	lea	rax, [rbp - 0x70]
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500018
<Block for 0x4000c0, 22 bytes>
0x4000c0:	mov	rdx, rax
0x4000c3:	mov	rcx, qword ptr [rbp - 0x78]
0x4000c7:	lea	rax, [rbp - 0x70]
0x4000cb:	mov	rsi, rcx
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500020
<Block for 0x4000d6, 16 bytes>
0x4000d6:	mov	byte ptr [rbp - 0xd], 0
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500028
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000fb, 2 bytes>
0x4000fb:	leave	
0x4000fc:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500030
