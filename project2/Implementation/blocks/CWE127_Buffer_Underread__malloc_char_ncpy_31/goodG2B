<Block for 0x4000fd, 51 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	sub	rsp, 0x90
0x40010c:	mov	rax, qword ptr fs:[0x28]
0x400115:	mov	qword ptr [rbp - 8], rax
0x400119:	xor	eax, eax
0x40011b:	mov	qword ptr [rbp - 0x90], 0
0x400126:	mov	edi, 0x64
0x40012b:	call	0x500000
<Block for 0x400130, 17 bytes>
0x400130:	mov	qword ptr [rbp - 0x88], rax
0x400137:	cmp	qword ptr [rbp - 0x88], 0
0x40013f:	jne	0x40014b
<Block for 0x400141, 10 bytes>
0x400141:	mov	edi, 0xffffffff
0x400146:	call	0x500008
<Block for 0x40014b, 25 bytes>
0x40014b:	mov	rax, qword ptr [rbp - 0x88]
0x400152:	mov	edx, 0x63
0x400157:	mov	esi, 0x41
0x40015c:	mov	rdi, rax
0x40015f:	call	0x500010
<Block for 0x400164, 69 bytes>
0x400164:	mov	rax, qword ptr [rbp - 0x88]
0x40016b:	add	rax, 0x63
0x40016f:	mov	byte ptr [rax], 0
0x400172:	mov	rax, qword ptr [rbp - 0x88]
0x400179:	mov	qword ptr [rbp - 0x90], rax
0x400180:	mov	rax, qword ptr [rbp - 0x90]
0x400187:	mov	qword ptr [rbp - 0x80], rax
0x40018b:	mov	rax, qword ptr [rbp - 0x80]
0x40018f:	mov	qword ptr [rbp - 0x78], rax
0x400193:	lea	rax, [rbp - 0x70]
0x400197:	mov	edx, 0x63
0x40019c:	mov	esi, 0x43
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500010
<Block for 0x4001a9, 16 bytes>
0x4001a9:	mov	byte ptr [rbp - 0xd], 0
0x4001ad:	lea	rax, [rbp - 0x70]
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500018
<Block for 0x4001b9, 22 bytes>
0x4001b9:	mov	rdx, rax
0x4001bc:	mov	rcx, qword ptr [rbp - 0x78]
0x4001c0:	lea	rax, [rbp - 0x70]
0x4001c4:	mov	rsi, rcx
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x500020
<Block for 0x4001cf, 16 bytes>
0x4001cf:	mov	byte ptr [rbp - 0xd], 0
0x4001d3:	lea	rax, [rbp - 0x70]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500028
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500030
