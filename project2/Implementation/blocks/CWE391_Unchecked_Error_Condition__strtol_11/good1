<Block for 0x40004f, 22 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x10
0x40005b:	mov	eax, 0
0x400060:	call	0x500018
<Block for 0x400065, 4 bytes>
0x400065:	test	eax, eax
0x400067:	je	0x400077
<Block for 0x400077, 5 bytes>
0x400077:	call	0x500028
<Block for 0x400069, 12 bytes>
0x400069:	lea	rdi, [rip + 0x115]
0x400070:	call	0x500020
<Block for 0x40007c, 28 bytes>
0x40007c:	mov	dword ptr [rax], 0
0x400082:	mov	edx, 0
0x400087:	mov	esi, 0
0x40008c:	lea	rdi, [rip + 0xe1]
0x400093:	call	0x500008
<Block for 0x400075, 2 bytes>
0x400075:	jmp	0x4000d6
<Block for 0x400098, 9 bytes>
0x400098:	mov	qword ptr [rbp - 8], rax
0x40009c:	call	0x500028
<Block for 0x4000d6, 3 bytes>
0x4000d6:	nop	
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000a1, 7 bytes>
0x4000a1:	mov	eax, dword ptr [rax]
0x4000a3:	cmp	eax, 0x22
0x4000a6:	jne	0x4000be
<Block for 0x4000a8, 12 bytes>
0x4000a8:	lea	rdi, [rip + 0xeb]
0x4000af:	call	0x500020
<Block for 0x4000be, 24 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	mov	rsi, rax
0x4000c5:	lea	rdi, [rip + 0xb4]
0x4000cc:	mov	eax, 0
0x4000d1:	call	0x500010
<Block for 0x4000b4, 10 bytes>
0x4000b4:	mov	edi, 1
0x4000b9:	call	0x500030
