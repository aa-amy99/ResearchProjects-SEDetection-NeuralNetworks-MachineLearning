<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	qword ptr [rbp - 0x90], rsi
0x40001d:	mov	rax, qword ptr fs:[0x28]
0x400026:	mov	qword ptr [rbp - 8], rax
0x40002a:	xor	eax, eax
0x40002c:	lea	rax, [rbp - 0x70]
0x400030:	mov	edx, 0x63
0x400035:	mov	esi, 0x43
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400042, 16 bytes>
0x400042:	mov	byte ptr [rbp - 0xd], 0
0x400046:	lea	rax, [rbp - 0x70]
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500008
<Block for 0x400052, 30 bytes>
0x400052:	mov	qword ptr [rbp - 0x78], rax
0x400056:	mov	rdx, qword ptr [rbp - 0x78]
0x40005a:	lea	rcx, [rbp - 0x70]
0x40005e:	mov	rax, qword ptr [rbp - 0x90]
0x400065:	mov	rsi, rcx
0x400068:	mov	rdi, rax
0x40006b:	call	0x500010
<Block for 0x400070, 15 bytes>
0x400070:	mov	rax, qword ptr [rbp - 0x90]
0x400077:	mov	rdi, rax
0x40007a:	call	0x500018
<Block for 0x40007f, 16 bytes>
0x40007f:	nop	
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	xor	rax, qword ptr fs:[0x28]
0x40008d:	je	0x400094
<Block for 0x400094, 2 bytes>
0x400094:	leave	
0x400095:	ret	
<Block for 0x40008f, 5 bytes>
0x40008f:	call	0x500020
