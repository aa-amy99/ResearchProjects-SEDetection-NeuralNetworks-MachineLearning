<Block for 0x4002d0, 48 bytes>
0x4002d0:	endbr64	
0x4002d4:	push	rbp
0x4002d5:	mov	rbp, rsp
0x4002d8:	push	r12
0x4002da:	push	rbx
0x4002db:	sub	rsp, 0xb0
0x4002e2:	mov	rax, qword ptr fs:[0x28]
0x4002eb:	mov	qword ptr [rbp - 0x18], rax
0x4002ef:	xor	eax, eax
0x4002f1:	lea	rax, [rbp - 0xb0]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x400562
<Block for 0x400300, 20 bytes>
0x400300:	lea	rax, [rbp - 0x90]
0x400307:	mov	ebx, 4
0x40030c:	mov	r12, rax
0x40030f:	test	rbx, rbx
0x400312:	js	0x400326
<Block for 0x400326, 35 bytes>
0x400326:	mov	dword ptr [rbp - 0xb4], 0x64
0x400330:	lea	rdx, [rbp - 0xb4]
0x400337:	lea	rax, [rbp - 0xb0]
0x40033e:	mov	rsi, rdx
0x400341:	mov	rdi, rax
0x400344:	call	0x400662
<Block for 0x400314, 8 bytes>
0x400314:	mov	rdi, r12
0x400317:	call	0x400562
<Block for 0x400349, 35 bytes>
0x400349:	mov	dword ptr [rbp - 0xb4], 0
0x400353:	lea	rdx, [rbp - 0xb4]
0x40035a:	lea	rax, [rbp - 0xb0]
0x400361:	mov	rsi, rdx
0x400364:	mov	rdi, rax
0x400367:	call	0x400662
<Block for 0x40031c, 10 bytes>
0x40031c:	add	r12, 0x18
0x400320:	sub	rbx, 1
0x400324:	jmp	0x40030f
<Block for 0x40036c, 29 bytes>
0x40036c:	lea	rax, [rbp - 0xb0]
0x400373:	lea	rdx, [rbp - 0x90]
0x40037a:	add	rdx, 0x30
0x40037e:	mov	rsi, rax
0x400381:	mov	rdi, rdx
0x400384:	call	0x4006ce
<Block for 0x40030f, 5 bytes>
0x40030f:	test	rbx, rbx
0x400312:	js	0x400326
<Block for 0x400389, 15 bytes>
0x400389:	lea	rax, [rbp - 0x90]
0x400390:	mov	rdi, rax
0x400393:	call	0x500020
<Block for 0x400398, 23 bytes>
0x400398:	lea	rbx, [rbp - 0x90]
0x40039f:	add	rbx, 0x78
0x4003a3:	lea	rax, [rbp - 0x90]
0x4003aa:	cmp	rbx, rax
0x4003ad:	je	0x4003bd
<Block for 0x4003bd, 15 bytes>
0x4003bd:	lea	rax, [rbp - 0xb0]
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x400582
<Block for 0x4003af, 12 bytes>
0x4003af:	sub	rbx, 0x18
0x4003b3:	mov	rdi, rbx
0x4003b6:	call	0x400582
<Block for 0x4003cc, 16 bytes>
0x4003cc:	nop	
0x4003cd:	mov	rax, qword ptr [rbp - 0x18]
0x4003d1:	xor	rax, qword ptr fs:[0x28]
0x4003da:	je	0x40042c
<Block for 0x4003bb, 2 bytes>
0x4003bb:	jmp	0x4003a3
<Block for 0x40042c, 12 bytes>
0x40042c:	add	rsp, 0xb0
0x400433:	pop	rbx
0x400434:	pop	r12
0x400436:	pop	rbp
0x400437:	ret	
<Block for 0x4003dc, 2 bytes>
0x4003dc:	jmp	0x400427
<Block for 0x4003a3, 12 bytes>
0x4003a3:	lea	rax, [rbp - 0x90]
0x4003aa:	cmp	rbx, rax
0x4003ad:	je	0x4003bd
<Block for 0x400427, 5 bytes>
0x400427:	call	0x500010
