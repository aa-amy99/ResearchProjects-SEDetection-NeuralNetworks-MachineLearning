<Block for 0x400168, 48 bytes>
0x400168:	endbr64	
0x40016c:	push	rbp
0x40016d:	mov	rbp, rsp
0x400170:	push	r12
0x400172:	push	rbx
0x400173:	sub	rsp, 0xb0
0x40017a:	mov	rax, qword ptr fs:[0x28]
0x400183:	mov	qword ptr [rbp - 0x18], rax
0x400187:	xor	eax, eax
0x400189:	lea	rax, [rbp - 0xb0]
0x400190:	mov	rdi, rax
0x400193:	call	0x400562
<Block for 0x400198, 20 bytes>
0x400198:	lea	rax, [rbp - 0x90]
0x40019f:	mov	ebx, 4
0x4001a4:	mov	r12, rax
0x4001a7:	test	rbx, rbx
0x4001aa:	js	0x4001be
<Block for 0x4001be, 35 bytes>
0x4001be:	mov	dword ptr [rbp - 0xb4], 0x64
0x4001c8:	lea	rdx, [rbp - 0xb4]
0x4001cf:	lea	rax, [rbp - 0xb0]
0x4001d6:	mov	rsi, rdx
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x400662
<Block for 0x4001ac, 8 bytes>
0x4001ac:	mov	rdi, r12
0x4001af:	call	0x400562
<Block for 0x4001e1, 35 bytes>
0x4001e1:	mov	dword ptr [rbp - 0xb4], 0xc8
0x4001eb:	lea	rdx, [rbp - 0xb4]
0x4001f2:	lea	rax, [rbp - 0xb0]
0x4001f9:	mov	rsi, rdx
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x400662
<Block for 0x4001b4, 10 bytes>
0x4001b4:	add	r12, 0x18
0x4001b8:	sub	rbx, 1
0x4001bc:	jmp	0x4001a7
<Block for 0x400204, 29 bytes>
0x400204:	lea	rax, [rbp - 0xb0]
0x40020b:	lea	rdx, [rbp - 0x90]
0x400212:	add	rdx, 0x30
0x400216:	mov	rsi, rax
0x400219:	mov	rdi, rdx
0x40021c:	call	0x4006ce
<Block for 0x4001a7, 5 bytes>
0x4001a7:	test	rbx, rbx
0x4001aa:	js	0x4001be
<Block for 0x400221, 15 bytes>
0x400221:	lea	rax, [rbp - 0x90]
0x400228:	mov	rdi, rax
0x40022b:	call	0x500018
<Block for 0x400230, 23 bytes>
0x400230:	lea	rbx, [rbp - 0x90]
0x400237:	add	rbx, 0x78
0x40023b:	lea	rax, [rbp - 0x90]
0x400242:	cmp	rbx, rax
0x400245:	je	0x400255
<Block for 0x400255, 15 bytes>
0x400255:	lea	rax, [rbp - 0xb0]
0x40025c:	mov	rdi, rax
0x40025f:	call	0x400582
<Block for 0x400247, 12 bytes>
0x400247:	sub	rbx, 0x18
0x40024b:	mov	rdi, rbx
0x40024e:	call	0x400582
<Block for 0x400264, 16 bytes>
0x400264:	nop	
0x400265:	mov	rax, qword ptr [rbp - 0x18]
0x400269:	xor	rax, qword ptr fs:[0x28]
0x400272:	je	0x4002c4
<Block for 0x400253, 2 bytes>
0x400253:	jmp	0x40023b
<Block for 0x4002c4, 12 bytes>
0x4002c4:	add	rsp, 0xb0
0x4002cb:	pop	rbx
0x4002cc:	pop	r12
0x4002ce:	pop	rbp
0x4002cf:	ret	
<Block for 0x400274, 2 bytes>
0x400274:	jmp	0x4002bf
<Block for 0x40023b, 12 bytes>
0x40023b:	lea	rax, [rbp - 0x90]
0x400242:	cmp	rbx, rax
0x400245:	je	0x400255
<Block for 0x4002bf, 5 bytes>
0x4002bf:	call	0x500010
