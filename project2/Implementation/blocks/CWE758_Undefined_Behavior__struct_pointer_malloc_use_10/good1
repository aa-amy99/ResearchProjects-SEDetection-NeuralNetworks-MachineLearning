<Block for 0x40006a, 22 bytes>
0x40006a:	endbr64	
0x40006e:	push	rbp
0x40006f:	mov	rbp, rsp
0x400072:	sub	rsp, 0x20
0x400076:	mov	eax, dword ptr [rip + 0xfffac]
0x40007c:	test	eax, eax
0x40007e:	je	0x400091
<Block for 0x400091, 10 bytes>
0x400091:	mov	edi, 8
0x400096:	call	0x500008
<Block for 0x400080, 12 bytes>
0x400080:	lea	rdi, [rip + 0x169]
0x400087:	call	0x500030
<Block for 0x40009b, 11 bytes>
0x40009b:	mov	qword ptr [rbp - 0x18], rax
0x40009f:	cmp	qword ptr [rbp - 0x18], 0
0x4000a4:	jne	0x4000b0
<Block for 0x40008c, 5 bytes>
0x40008c:	jmp	0x400121
<Block for 0x4000a6, 10 bytes>
0x4000a6:	mov	edi, 0xffffffff
0x4000ab:	call	0x500010
<Block for 0x4000b0, 10 bytes>
0x4000b0:	mov	edi, 8
0x4000b5:	call	0x500008
<Block for 0x400121, 3 bytes>
0x400121:	nop	
0x400122:	leave	
0x400123:	ret	
<Block for 0x4000ba, 11 bytes>
0x4000ba:	mov	qword ptr [rbp - 0x10], rax
0x4000be:	cmp	qword ptr [rbp - 0x10], 0
0x4000c3:	jne	0x4000cf
<Block for 0x4000c5, 10 bytes>
0x4000c5:	mov	edi, 0xffffffff
0x4000ca:	call	0x500010
<Block for 0x4000cf, 56 bytes>
0x4000cf:	mov	rax, qword ptr [rbp - 0x10]
0x4000d3:	mov	dword ptr [rax], 5
0x4000d9:	mov	rax, qword ptr [rbp - 0x10]
0x4000dd:	mov	dword ptr [rax + 4], 6
0x4000e4:	mov	rax, qword ptr [rbp - 0x18]
0x4000e8:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ec:	mov	qword ptr [rax], rdx
0x4000ef:	mov	rax, qword ptr [rbp - 0x18]
0x4000f3:	mov	rax, qword ptr [rax]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	mov	eax, dword ptr [rax]
0x400100:	mov	edi, eax
0x400102:	call	0x500020
<Block for 0x400107, 14 bytes>
0x400107:	mov	rax, qword ptr [rbp - 8]
0x40010b:	mov	eax, dword ptr [rax + 4]
0x40010e:	mov	edi, eax
0x400110:	call	0x500020
<Block for 0x400115, 12 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x18]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500018
