<Block for 0x40027e, 96 bytes>
0x40027e:	endbr64	
0x400282:	push	rbp
0x400283:	mov	rbp, rsp
0x400286:	sub	rsp, 0x120
0x40028d:	mov	rax, qword ptr fs:[0x28]
0x400296:	mov	qword ptr [rbp - 8], rax
0x40029a:	xor	eax, eax
0x40029c:	lea	rax, [rip - 0x44]
0x4002a3:	mov	qword ptr [rbp - 0x120], rax
0x4002aa:	movabs	rax, 0x3d48544150
0x4002b4:	mov	edx, 0
0x4002b9:	mov	qword ptr [rbp - 0x110], rax
0x4002c0:	mov	qword ptr [rbp - 0x108], rdx
0x4002c7:	lea	rdx, [rbp - 0x100]
0x4002ce:	mov	eax, 0
0x4002d3:	mov	ecx, 0x1d
0x4002d8:	mov	rdi, rdx
0x4002db:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002de, 51 bytes>
0x4002de:	mov	rdx, rdi
0x4002e1:	mov	word ptr [rdx], ax
0x4002e4:	add	rdx, 2
0x4002e8:	lea	rax, [rbp - 0x110]
0x4002ef:	mov	qword ptr [rbp - 0x118], rax
0x4002f6:	mov	rax, qword ptr [rbp - 0x118]
0x4002fd:	mov	rcx, -1
0x400304:	mov	rdx, rax
0x400307:	mov	eax, 0
0x40030c:	mov	rdi, rdx
0x40030f:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002db, 3 bytes>
0x4002db:	rep stosq	qword ptr [rdi], rax
<Block for 0x400311, 49 bytes>
0x400311:	mov	rax, rcx
0x400314:	not	rax
0x400317:	lea	rdx, [rax - 1]
0x40031b:	mov	rax, qword ptr [rbp - 0x118]
0x400322:	add	rax, rdx
0x400325:	mov	dword ptr [rax], 0x6e69622f
0x40032b:	mov	byte ptr [rax + 4], 0
0x40032f:	mov	rax, qword ptr [rbp - 0x118]
0x400336:	mov	rdx, qword ptr [rbp - 0x120]
0x40033d:	mov	rdi, rax
0x400340:	call	rdx
<Block for 0x40030f, 2 bytes>
0x40030f:	repne scasb	al, byte ptr [rdi]
<Block for 0x400342, 16 bytes>
0x400342:	nop	
0x400343:	mov	rax, qword ptr [rbp - 8]
0x400347:	xor	rax, qword ptr fs:[0x28]
0x400350:	je	0x400357
<Block for 0x400357, 2 bytes>
0x400357:	leave	
0x400358:	ret	
<Block for 0x400352, 5 bytes>
0x400352:	call	0x500050
