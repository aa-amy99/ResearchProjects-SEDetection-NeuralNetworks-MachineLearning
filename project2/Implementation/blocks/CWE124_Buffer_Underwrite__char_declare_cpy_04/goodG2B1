<Block for 0x4000ac, 55 bytes>
0x4000ac:	endbr64	
0x4000b0:	push	rbp
0x4000b1:	mov	rbp, rsp
0x4000b4:	sub	rsp, 0xf0
0x4000bb:	mov	rax, qword ptr fs:[0x28]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	xor	eax, eax
0x4000ca:	lea	rax, [rbp - 0xe0]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x41
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 13 bytes>
0x4000e3:	mov	byte ptr [rbp - 0x7d], 0
0x4000e7:	mov	eax, 0
0x4000ec:	test	eax, eax
0x4000ee:	je	0x4000fe
<Block for 0x4000fe, 36 bytes>
0x4000fe:	lea	rax, [rbp - 0xe0]
0x400105:	mov	qword ptr [rbp - 0xe8], rax
0x40010c:	lea	rax, [rbp - 0x70]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x43
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rdi, [rip + 0x13d]
0x4000f7:	call	0x500010
<Block for 0x400122, 26 bytes>
0x400122:	mov	byte ptr [rbp - 0xd], 0
0x400126:	lea	rdx, [rbp - 0x70]
0x40012a:	mov	rax, qword ptr [rbp - 0xe8]
0x400131:	mov	rsi, rdx
0x400134:	mov	rdi, rax
0x400137:	call	0x500008
<Block for 0x4000fc, 2 bytes>
0x4000fc:	jmp	0x40010c
<Block for 0x40013c, 15 bytes>
0x40013c:	mov	rax, qword ptr [rbp - 0xe8]
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x40010c, 22 bytes>
0x40010c:	lea	rax, [rbp - 0x70]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x43
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x40014b, 16 bytes>
0x40014b:	nop	
0x40014c:	mov	rax, qword ptr [rbp - 8]
0x400150:	xor	rax, qword ptr fs:[0x28]
0x400159:	je	0x400160
<Block for 0x400160, 2 bytes>
0x400160:	leave	
0x400161:	ret	
<Block for 0x40015b, 5 bytes>
0x40015b:	call	0x500018
