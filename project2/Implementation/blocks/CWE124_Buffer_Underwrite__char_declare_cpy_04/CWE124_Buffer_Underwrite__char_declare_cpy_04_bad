<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 13 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	mov	eax, 1
0x400040:	test	eax, eax
0x400042:	je	0x400056
<Block for 0x400056, 22 bytes>
0x400056:	lea	rax, [rbp - 0x70]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x43
0x400064:	mov	rdi, rax
0x400067:	call	0x500000
<Block for 0x400044, 40 bytes>
0x400044:	lea	rax, [rbp - 0xe0]
0x40004b:	sub	rax, 8
0x40004f:	mov	qword ptr [rbp - 0xe8], rax
0x400056:	lea	rax, [rbp - 0x70]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x43
0x400064:	mov	rdi, rax
0x400067:	call	0x500000
<Block for 0x40006c, 26 bytes>
0x40006c:	mov	byte ptr [rbp - 0xd], 0
0x400070:	lea	rdx, [rbp - 0x70]
0x400074:	mov	rax, qword ptr [rbp - 0xe8]
0x40007b:	mov	rsi, rdx
0x40007e:	mov	rdi, rax
0x400081:	call	0x500008
<Block for 0x400086, 15 bytes>
0x400086:	mov	rax, qword ptr [rbp - 0xe8]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500010
<Block for 0x400095, 16 bytes>
0x400095:	nop	
0x400096:	mov	rax, qword ptr [rbp - 8]
0x40009a:	xor	rax, qword ptr fs:[0x28]
0x4000a3:	je	0x4000aa
<Block for 0x4000aa, 2 bytes>
0x4000aa:	leave	
0x4000ab:	ret	
<Block for 0x4000a5, 5 bytes>
0x4000a5:	call	0x500018
