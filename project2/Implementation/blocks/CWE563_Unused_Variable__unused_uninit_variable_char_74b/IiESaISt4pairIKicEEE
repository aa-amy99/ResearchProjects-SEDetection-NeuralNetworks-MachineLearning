<Block for 0x400056, 57 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x20
0x400062:	mov	qword ptr [rbp - 0x18], rdi
0x400066:	mov	rax, qword ptr fs:[0x28]
0x40006f:	mov	qword ptr [rbp - 8], rax
0x400073:	xor	eax, eax
0x400075:	mov	dword ptr [rbp - 0xc], 2
0x40007c:	lea	rdx, [rbp - 0xc]
0x400080:	mov	rax, qword ptr [rbp - 0x18]
0x400084:	mov	rsi, rdx
0x400087:	mov	rdi, rax
0x40008a:	call	0x4000e8
<Block for 0x40008f, 21 bytes>
0x40008f:	movzx	eax, byte ptr [rax]
0x400092:	mov	byte ptr [rbp - 0xd], al
0x400095:	mov	byte ptr [rbp - 0xd], 0x43
0x400099:	movsx	eax, byte ptr [rbp - 0xd]
0x40009d:	mov	edi, eax
0x40009f:	call	0x500008
<Block for 0x4000a4, 16 bytes>
0x4000a4:	nop	
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	xor	rax, qword ptr fs:[0x28]
0x4000b2:	je	0x4000b9
<Block for 0x4000b9, 2 bytes>
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000b4, 5 bytes>
0x4000b4:	call	0x500000
