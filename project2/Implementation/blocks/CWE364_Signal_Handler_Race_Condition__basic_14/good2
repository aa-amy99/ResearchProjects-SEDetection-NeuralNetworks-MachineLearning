<Block for 0x40020d, 27 bytes>
0x40020d:	endbr64	
0x400211:	push	rbp
0x400212:	mov	rbp, rsp
0x400215:	sub	rsp, 0x10
0x400219:	mov	eax, dword ptr [rip + 0xffde1]
0x40021f:	cmp	eax, 5
0x400222:	jne	0x4002f3
<Block for 0x400228, 23 bytes>
0x400228:	mov	qword ptr [rbp - 8], 0
0x400230:	mov	esi, 0
0x400235:	mov	edi, 2
0x40023a:	call	0x500008
<Block for 0x4002f3, 3 bytes>
0x4002f3:	nop	
0x4002f4:	leave	
0x4002f5:	ret	
<Block for 0x40023f, 12 bytes>
0x40023f:	mov	rax, qword ptr [rip + 0xda]
0x400246:	test	rax, rax
0x400249:	je	0x400265
<Block for 0x400265, 10 bytes>
0x400265:	mov	edi, 4
0x40026a:	call	0x500018
<Block for 0x40024b, 15 bytes>
0x40024b:	mov	rax, qword ptr [rip + 0xce]
0x400252:	mov	rdi, rax
0x400255:	call	0x500010
<Block for 0x40026f, 11 bytes>
0x40026f:	mov	qword ptr [rbp - 8], rax
0x400273:	cmp	qword ptr [rbp - 8], 0
0x400278:	jne	0x400284
<Block for 0x40025a, 21 bytes>
0x40025a:	mov	qword ptr [rip + 0xbb], 0
0x400265:	mov	edi, 4
0x40026a:	call	0x500018
<Block for 0x40027a, 10 bytes>
0x40027a:	mov	edi, 0xffffffff
0x40027f:	call	0x500020
<Block for 0x400284, 41 bytes>
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	mov	qword ptr [rip + 0x91], rax
0x40028f:	mov	rax, qword ptr [rip + 0x8a]
0x400296:	mov	dword ptr [rax], 1
0x40029c:	lea	rsi, [rip - 0x27c]
0x4002a3:	mov	edi, 2
0x4002a8:	call	0x500008
<Block for 0x4002ad, 15 bytes>
0x4002ad:	mov	esi, 0
0x4002b2:	mov	edi, 2
0x4002b7:	call	0x500008
<Block for 0x4002bc, 12 bytes>
0x4002bc:	mov	rax, qword ptr [rip + 0x5d]
0x4002c3:	test	rax, rax
0x4002c6:	je	0x4002e2
<Block for 0x4002e2, 17 bytes>
0x4002e2:	lea	rsi, [rip - 0x2c2]
0x4002e9:	mov	edi, 2
0x4002ee:	call	0x500008
<Block for 0x4002c8, 15 bytes>
0x4002c8:	mov	rax, qword ptr [rip + 0x51]
0x4002cf:	mov	rdi, rax
0x4002d2:	call	0x500010
<Block for 0x4002d7, 28 bytes>
0x4002d7:	mov	qword ptr [rip + 0x3e], 0
0x4002e2:	lea	rsi, [rip - 0x2c2]
0x4002e9:	mov	edi, 2
0x4002ee:	call	0x500008
