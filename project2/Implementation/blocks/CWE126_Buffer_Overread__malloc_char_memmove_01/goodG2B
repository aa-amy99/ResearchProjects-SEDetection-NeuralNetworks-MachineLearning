<Block for 0x4000d2, 45 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	add	rsp, -0x80
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	qword ptr [rbp - 0x78], 0
0x4000f5:	mov	edi, 0x64
0x4000fa:	call	0x500000
<Block for 0x4000ff, 11 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x78], rax
0x400103:	cmp	qword ptr [rbp - 0x78], 0
0x400108:	jne	0x400114
<Block for 0x40010a, 10 bytes>
0x40010a:	mov	edi, 0xffffffff
0x40010f:	call	0x500008
<Block for 0x400114, 22 bytes>
0x400114:	mov	rax, qword ptr [rbp - 0x78]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x41
0x400122:	mov	rdi, rax
0x400125:	call	0x500010
<Block for 0x40012a, 33 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x78]
0x40012e:	add	rax, 0x63
0x400132:	mov	byte ptr [rax], 0
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	edx, 0x63
0x40013e:	mov	esi, 0x43
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x40014b, 16 bytes>
0x40014b:	mov	byte ptr [rbp - 0xd], 0
0x40014f:	lea	rax, [rbp - 0x70]
0x400153:	mov	rdi, rax
0x400156:	call	0x500018
<Block for 0x40015b, 22 bytes>
0x40015b:	mov	rdx, rax
0x40015e:	mov	rcx, qword ptr [rbp - 0x78]
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	rsi, rcx
0x400169:	mov	rdi, rax
0x40016c:	call	0x500020
<Block for 0x400171, 16 bytes>
0x400171:	mov	byte ptr [rbp - 0xd], 0
0x400175:	lea	rax, [rbp - 0x70]
0x400179:	mov	rdi, rax
0x40017c:	call	0x500028
<Block for 0x400181, 12 bytes>
0x400181:	mov	rax, qword ptr [rbp - 0x78]
0x400185:	mov	rdi, rax
0x400188:	call	0x500030
<Block for 0x40018d, 16 bytes>
0x40018d:	nop	
0x40018e:	mov	rax, qword ptr [rbp - 8]
0x400192:	xor	rax, qword ptr fs:[0x28]
0x40019b:	je	0x4001a2
<Block for 0x4001a2, 2 bytes>
0x4001a2:	leave	
0x4001a3:	ret	
<Block for 0x40019d, 5 bytes>
0x40019d:	call	0x500038
