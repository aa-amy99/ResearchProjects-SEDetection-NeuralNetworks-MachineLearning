<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x130
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x120]
0x400025:	mov	edx, 0x31
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 32 bytes>
0x400037:	mov	byte ptr [rbp - 0xef], 0
0x40003e:	lea	rax, [rbp - 0xe0]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400057, 41 bytes>
0x400057:	mov	byte ptr [rbp - 0x7d], 0
0x40005b:	lea	rax, [rbp - 0x120]
0x400062:	mov	qword ptr [rbp - 0x128], rax
0x400069:	nop	
0x40006a:	lea	rax, [rbp - 0x70]
0x40006e:	mov	edx, 0x63
0x400073:	mov	esi, 0x43
0x400078:	mov	rdi, rax
0x40007b:	call	0x500000
<Block for 0x400080, 16 bytes>
0x400080:	mov	byte ptr [rbp - 0xd], 0
0x400084:	lea	rax, [rbp - 0x70]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500008
<Block for 0x400090, 25 bytes>
0x400090:	mov	rdx, rax
0x400093:	mov	rcx, qword ptr [rbp - 0x128]
0x40009a:	lea	rax, [rbp - 0x70]
0x40009e:	mov	rsi, rcx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 16 bytes>
0x4000a9:	mov	byte ptr [rbp - 0xd], 0
0x4000ad:	lea	rax, [rbp - 0x70]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000b9, 16 bytes>
0x4000b9:	nop	
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	xor	rax, qword ptr fs:[0x28]
0x4000c7:	je	0x4000ce
<Block for 0x4000ce, 2 bytes>
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500020
