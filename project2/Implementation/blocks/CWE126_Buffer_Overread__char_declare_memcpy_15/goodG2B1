<Block for 0x4000d0, 55 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x130
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	lea	rax, [rbp - 0x120]
0x4000f5:	mov	edx, 0x31
0x4000fa:	mov	esi, 0x41
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500000
<Block for 0x400107, 32 bytes>
0x400107:	mov	byte ptr [rbp - 0xef], 0
0x40010e:	lea	rax, [rbp - 0xe0]
0x400115:	mov	edx, 0x63
0x40011a:	mov	esi, 0x41
0x40011f:	mov	rdi, rax
0x400122:	call	0x500000
<Block for 0x400127, 41 bytes>
0x400127:	mov	byte ptr [rbp - 0x7d], 0
0x40012b:	lea	rax, [rbp - 0xe0]
0x400132:	mov	qword ptr [rbp - 0x128], rax
0x400139:	nop	
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x400150, 16 bytes>
0x400150:	mov	byte ptr [rbp - 0xd], 0
0x400154:	lea	rax, [rbp - 0x70]
0x400158:	mov	rdi, rax
0x40015b:	call	0x500008
<Block for 0x400160, 25 bytes>
0x400160:	mov	rdx, rax
0x400163:	mov	rcx, qword ptr [rbp - 0x128]
0x40016a:	lea	rax, [rbp - 0x70]
0x40016e:	mov	rsi, rcx
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400179, 16 bytes>
0x400179:	mov	byte ptr [rbp - 0xd], 0
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	rdi, rax
0x400184:	call	0x500018
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500020
