<Block for 0x400000, 60 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	dword ptr [rip + 0x290], 1
0x400030:	mov	rax, qword ptr [rbp - 0x80]
0x400034:	mov	rdi, rax
0x400037:	call	0x500000
<Block for 0x40003c, 26 bytes>
0x40003c:	mov	qword ptr [rbp - 0x80], rax
0x400040:	lea	rax, [rbp - 0x70]
0x400044:	mov	edx, 0x63
0x400049:	mov	esi, 0x43
0x40004e:	mov	rdi, rax
0x400051:	call	0x500008
<Block for 0x400056, 16 bytes>
0x400056:	mov	byte ptr [rbp - 0xd], 0
0x40005a:	lea	rax, [rbp - 0x70]
0x40005e:	mov	rdi, rax
0x400061:	call	0x500010
<Block for 0x400066, 17 bytes>
0x400066:	mov	qword ptr [rbp - 0x78], rax
0x40006a:	mov	qword ptr [rbp - 0x88], 0
0x400075:	jmp	0x4000a0
<Block for 0x4000a0, 13 bytes>
0x4000a0:	mov	rax, qword ptr [rbp - 0x88]
0x4000a7:	cmp	rax, qword ptr [rbp - 0x78]
0x4000ab:	jb	0x400077
<Block for 0x400077, 54 bytes>
0x400077:	mov	rdx, qword ptr [rbp - 0x80]
0x40007b:	mov	rax, qword ptr [rbp - 0x88]
0x400082:	add	rax, rdx
0x400085:	movzx	eax, byte ptr [rax]
0x400088:	lea	rcx, [rbp - 0x70]
0x40008c:	mov	rdx, qword ptr [rbp - 0x88]
0x400093:	add	rdx, rcx
0x400096:	mov	byte ptr [rdx], al
0x400098:	add	qword ptr [rbp - 0x88], 1
0x4000a0:	mov	rax, qword ptr [rbp - 0x88]
0x4000a7:	cmp	rax, qword ptr [rbp - 0x78]
0x4000ab:	jb	0x400077
<Block for 0x4000ad, 16 bytes>
0x4000ad:	mov	byte ptr [rbp - 0xd], 0
0x4000b1:	lea	rax, [rbp - 0x70]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x4000bd, 12 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x80]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500020
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500028
