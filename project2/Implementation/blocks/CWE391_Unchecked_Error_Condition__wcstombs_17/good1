<Block for 0x400084, 36 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	add	rsp, -0x80
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	dword ptr [rbp - 0x7c], 0
0x4000a6:	jmp	0x400118
<Block for 0x400118, 6 bytes>
0x400118:	cmp	dword ptr [rbp - 0x7c], 0
0x40011c:	jle	0x4000a8
<Block for 0x4000a8, 17 bytes>
0x4000a8:	mov	qword ptr [rbp - 0x78], 0
0x4000b0:	mov	byte ptr [rbp - 0x70], 0
0x4000b4:	call	0x500020
<Block for 0x40011e, 16 bytes>
0x40011e:	nop	
0x40011f:	mov	rax, qword ptr [rbp - 8]
0x400123:	xor	rax, qword ptr fs:[0x28]
0x40012c:	je	0x400133
<Block for 0x4000b9, 30 bytes>
0x4000b9:	mov	dword ptr [rax], 0
0x4000bf:	lea	rax, [rbp - 0x70]
0x4000c3:	mov	edx, 0x64
0x4000c8:	lea	rsi, [rip + 0x7d]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500000
<Block for 0x400133, 2 bytes>
0x400133:	leave	
0x400134:	ret	
<Block for 0x40012e, 5 bytes>
0x40012e:	call	0x500018
<Block for 0x4000d7, 9 bytes>
0x4000d7:	mov	qword ptr [rbp - 0x78], rax
0x4000db:	call	0x500020
<Block for 0x4000e0, 7 bytes>
0x4000e0:	mov	eax, dword ptr [rax]
0x4000e2:	cmp	eax, 0x54
0x4000e5:	jne	0x4000fd
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rdi, [rip + 0x66]
0x4000ee:	call	0x500010
<Block for 0x4000fd, 11 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x78]
0x400101:	mov	edi, eax
0x400103:	call	0x500008
<Block for 0x4000f3, 10 bytes>
0x4000f3:	mov	edi, 1
0x4000f8:	call	0x500028
<Block for 0x400108, 12 bytes>
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500010
<Block for 0x400114, 10 bytes>
0x400114:	add	dword ptr [rbp - 0x7c], 1
0x400118:	cmp	dword ptr [rbp - 0x7c], 0
0x40011c:	jle	0x4000a8
