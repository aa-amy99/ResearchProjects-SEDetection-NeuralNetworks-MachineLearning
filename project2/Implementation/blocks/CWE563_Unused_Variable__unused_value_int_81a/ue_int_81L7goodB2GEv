<Block for 0x4000d2, 77 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	sub	rsp, 0x20
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	dword ptr [rbp - 0x1c], 5
0x4000f4:	lea	rax, [rip + 0xfff35]
0x4000fb:	mov	qword ptr [rbp - 0x18], rax
0x4000ff:	lea	rax, [rbp - 0x18]
0x400103:	mov	qword ptr [rbp - 0x10], rax
0x400107:	mov	rax, qword ptr [rbp - 0x10]
0x40010b:	mov	rax, qword ptr [rax]
0x40010e:	mov	rcx, qword ptr [rax]
0x400111:	mov	edx, dword ptr [rbp - 0x1c]
0x400114:	mov	rax, qword ptr [rbp - 0x10]
0x400118:	mov	esi, edx
0x40011a:	mov	rdi, rax
0x40011d:	call	rcx
<Block for 0x40011f, 16 bytes>
0x40011f:	nop	
0x400120:	mov	rax, qword ptr [rbp - 8]
0x400124:	xor	rax, qword ptr fs:[0x28]
0x40012d:	je	0x400134
<Block for 0x400134, 2 bytes>
0x400134:	leave	
0x400135:	ret	
<Block for 0x40012f, 5 bytes>
0x40012f:	call	0x500008
