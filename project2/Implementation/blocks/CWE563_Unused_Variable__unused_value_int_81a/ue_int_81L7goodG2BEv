<Block for 0x400064, 44 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x20
0x400070:	mov	rax, qword ptr fs:[0x28]
0x400079:	mov	qword ptr [rbp - 8], rax
0x40007d:	xor	eax, eax
0x40007f:	mov	dword ptr [rbp - 0x1c], 5
0x400086:	mov	eax, dword ptr [rbp - 0x1c]
0x400089:	mov	edi, eax
0x40008b:	call	0x500010
<Block for 0x400090, 43 bytes>
0x400090:	lea	rax, [rip + 0xfff91]
0x400097:	mov	qword ptr [rbp - 0x18], rax
0x40009b:	lea	rax, [rbp - 0x18]
0x40009f:	mov	qword ptr [rbp - 0x10], rax
0x4000a3:	mov	rax, qword ptr [rbp - 0x10]
0x4000a7:	mov	rax, qword ptr [rax]
0x4000aa:	mov	rcx, qword ptr [rax]
0x4000ad:	mov	edx, dword ptr [rbp - 0x1c]
0x4000b0:	mov	rax, qword ptr [rbp - 0x10]
0x4000b4:	mov	esi, edx
0x4000b6:	mov	rdi, rax
0x4000b9:	call	rcx
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500008
