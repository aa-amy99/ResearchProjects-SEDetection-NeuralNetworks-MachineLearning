<Block for 0x400000, 77 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 5
0x400022:	lea	rax, [rip + 0xfffe7]
0x400029:	mov	qword ptr [rbp - 0x18], rax
0x40002d:	lea	rax, [rbp - 0x18]
0x400031:	mov	qword ptr [rbp - 0x10], rax
0x400035:	mov	rax, qword ptr [rbp - 0x10]
0x400039:	mov	rax, qword ptr [rax]
0x40003c:	mov	rcx, qword ptr [rax]
0x40003f:	mov	edx, dword ptr [rbp - 0x1c]
0x400042:	mov	rax, qword ptr [rbp - 0x10]
0x400046:	mov	esi, edx
0x400048:	mov	rdi, rax
0x40004b:	call	rcx
<Block for 0x40004d, 16 bytes>
0x40004d:	nop	
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	xor	rax, qword ptr fs:[0x28]
0x40005b:	je	0x400062
<Block for 0x400062, 2 bytes>
0x400062:	leave	
0x400063:	ret	
<Block for 0x40005d, 5 bytes>
0x40005d:	call	0x500008
