<Block for 0x400069, 36 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	add	rsp, -0x80
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	eax, 0
0x400089:	test	eax, eax
0x40008b:	je	0x40009b
<Block for 0x40009b, 34 bytes>
0x40009b:	mov	dword ptr [rbp - 0x74], 5
0x4000a2:	mov	edx, dword ptr [rbp - 0x74]
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	lea	rsi, [rip + 0xd8]
0x4000b0:	mov	rdi, rax
0x4000b3:	mov	eax, 0
0x4000b8:	call	0x500000
<Block for 0x40008d, 12 bytes>
0x40008d:	lea	rdi, [rip + 0xdf]
0x400094:	call	0x500008
<Block for 0x4000bd, 12 bytes>
0x4000bd:	lea	rax, [rbp - 0x70]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
<Block for 0x400099, 2 bytes>
0x400099:	jmp	0x4000c9
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500010
