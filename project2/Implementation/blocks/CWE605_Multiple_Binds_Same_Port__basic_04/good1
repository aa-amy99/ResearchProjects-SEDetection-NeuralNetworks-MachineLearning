<Block for 0x4002cd, 39 bytes>
0x4002cd:	endbr64	
0x4002d1:	push	rbp
0x4002d2:	mov	rbp, rsp
0x4002d5:	sub	rsp, 0xa0
0x4002dc:	mov	rax, qword ptr fs:[0x28]
0x4002e5:	mov	qword ptr [rbp - 8], rax
0x4002e9:	xor	eax, eax
0x4002eb:	mov	eax, 0
0x4002f0:	test	eax, eax
0x4002f2:	je	0x400305
<Block for 0x400305, 135 bytes>
0x400305:	mov	qword ptr [rbp - 0x70], 0
0x40030d:	mov	qword ptr [rbp - 0x68], 0
0x400315:	mov	qword ptr [rbp - 0x60], 0
0x40031d:	mov	qword ptr [rbp - 0x58], 0
0x400325:	mov	qword ptr [rbp - 0x50], 0
0x40032d:	mov	qword ptr [rbp - 0x48], 0
0x400335:	mov	qword ptr [rbp - 0x40], 0
0x40033d:	mov	qword ptr [rbp - 0x38], 0
0x400345:	mov	qword ptr [rbp - 0x30], 0
0x40034d:	mov	qword ptr [rbp - 0x28], 0
0x400355:	mov	qword ptr [rbp - 0x20], 0
0x40035d:	mov	qword ptr [rbp - 0x18], 0
0x400365:	mov	dword ptr [rbp - 0x10], 0
0x40036c:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400376:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400380:	lea	rax, [rbp - 0x70]
0x400384:	mov	rdi, rax
0x400387:	call	0x500000
<Block for 0x4002f4, 12 bytes>
0x4002f4:	lea	rdi, [rip + 0x511]
0x4002fb:	call	0x500058
<Block for 0x40038c, 27 bytes>
0x40038c:	mov	qword ptr [rbp - 0x90], rax
0x400393:	mov	edx, 6
0x400398:	mov	esi, 1
0x40039d:	mov	edi, 2
0x4003a2:	call	0x500008
<Block for 0x400300, 5 bytes>
0x400300:	jmp	0x400547
<Block for 0x4003a7, 19 bytes>
0x4003a7:	mov	dword ptr [rbp - 0x98], eax
0x4003ad:	cmp	dword ptr [rbp - 0x98], -1
0x4003b4:	je	0x400505
<Block for 0x400547, 16 bytes>
0x400547:	nop	
0x400548:	mov	rax, qword ptr [rbp - 8]
0x40054c:	xor	rax, qword ptr fs:[0x28]
0x400555:	je	0x40055c
<Block for 0x400505, 3 bytes>
0x400505:	nop	
0x400506:	jmp	0x40050f
<Block for 0x4003ba, 22 bytes>
0x4003ba:	lea	rax, [rbp - 0x80]
0x4003be:	mov	edx, 0x10
0x4003c3:	mov	esi, 0
0x4003c8:	mov	rdi, rax
0x4003cb:	call	0x500018
<Block for 0x40055c, 2 bytes>
0x40055c:	leave	
0x40055d:	ret	
<Block for 0x400557, 5 bytes>
0x400557:	call	0x500060
<Block for 0x40050f, 9 bytes>
0x40050f:	cmp	dword ptr [rbp - 0x98], -1
0x400516:	je	0x400525
<Block for 0x4003d0, 23 bytes>
0x4003d0:	mov	word ptr [rbp - 0x80], 2
0x4003d6:	mov	dword ptr [rbp - 0x7c], 0
0x4003dd:	mov	edi, 0x6987
0x4003e2:	call	0x500020
<Block for 0x400525, 9 bytes>
0x400525:	cmp	dword ptr [rbp - 0x9c], -1
0x40052c:	je	0x40053b
<Block for 0x400518, 13 bytes>
0x400518:	mov	eax, dword ptr [rbp - 0x98]
0x40051e:	mov	edi, eax
0x400520:	call	0x500050
<Block for 0x4003e7, 29 bytes>
0x4003e7:	mov	word ptr [rbp - 0x7e], ax
0x4003eb:	lea	rcx, [rbp - 0x80]
0x4003ef:	mov	eax, dword ptr [rbp - 0x98]
0x4003f5:	mov	edx, 0x10
0x4003fa:	mov	rsi, rcx
0x4003fd:	mov	edi, eax
0x4003ff:	call	0x500028
<Block for 0x40053b, 12 bytes>
0x40053b:	lea	rax, [rbp - 0x70]
0x40053f:	mov	rdi, rax
0x400542:	call	0x500058
<Block for 0x40052e, 13 bytes>
0x40052e:	mov	eax, dword ptr [rbp - 0x9c]
0x400534:	mov	edi, eax
0x400536:	call	0x500050
<Block for 0x400404, 9 bytes>
0x400404:	cmp	eax, -1
0x400407:	je	0x400508
<Block for 0x400508, 3 bytes>
0x400508:	nop	
0x400509:	jmp	0x40050f
<Block for 0x40040d, 18 bytes>
0x40040d:	mov	eax, dword ptr [rbp - 0x98]
0x400413:	mov	esi, 5
0x400418:	mov	edi, eax
0x40041a:	call	0x500030
<Block for 0x40041f, 9 bytes>
0x40041f:	cmp	eax, -1
0x400422:	je	0x40050b
<Block for 0x40050b, 3 bytes>
0x40050b:	nop	
0x40050c:	jmp	0x40050f
<Block for 0x400428, 23 bytes>
0x400428:	mov	eax, dword ptr [rbp - 0x98]
0x40042e:	mov	edx, 0
0x400433:	mov	esi, 0
0x400438:	mov	edi, eax
0x40043a:	call	0x500038
<Block for 0x40043f, 19 bytes>
0x40043f:	mov	dword ptr [rbp - 0x9c], eax
0x400445:	cmp	dword ptr [rbp - 0x9c], -1
0x40044c:	je	0x40050e
<Block for 0x400452, 52 bytes>
0x400452:	mov	rax, qword ptr [rbp - 0x90]
0x400459:	mov	edx, 0x63
0x40045e:	sub	edx, eax
0x400460:	mov	eax, edx
0x400462:	movsxd	rdx, eax
0x400465:	lea	rcx, [rbp - 0x70]
0x400469:	mov	rax, qword ptr [rbp - 0x90]
0x400470:	lea	rsi, [rcx + rax]
0x400474:	mov	eax, dword ptr [rbp - 0x9c]
0x40047a:	mov	ecx, 0
0x40047f:	mov	edi, eax
0x400481:	call	0x500040
<Block for 0x40050e, 1 bytes>
0x40050e:	nop	
<Block for 0x400486, 15 bytes>
0x400486:	mov	dword ptr [rbp - 0x94], eax
0x40048c:	cmp	dword ptr [rbp - 0x94], -1
0x400493:	je	0x40050f
<Block for 0x400495, 9 bytes>
0x400495:	cmp	dword ptr [rbp - 0x94], 0
0x40049c:	je	0x40050f
<Block for 0x40049e, 30 bytes>
0x40049e:	mov	eax, dword ptr [rbp - 0x94]
0x4004a4:	cdqe	
0x4004a6:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004ab:	lea	rax, [rbp - 0x70]
0x4004af:	mov	esi, 0xd
0x4004b4:	mov	rdi, rax
0x4004b7:	call	0x500048
<Block for 0x4004bc, 17 bytes>
0x4004bc:	mov	qword ptr [rbp - 0x88], rax
0x4004c3:	cmp	qword ptr [rbp - 0x88], 0
0x4004cb:	je	0x4004d7
<Block for 0x4004d7, 17 bytes>
0x4004d7:	lea	rax, [rbp - 0x70]
0x4004db:	mov	esi, 0xa
0x4004e0:	mov	rdi, rax
0x4004e3:	call	0x500048
<Block for 0x4004cd, 27 bytes>
0x4004cd:	mov	rax, qword ptr [rbp - 0x88]
0x4004d4:	mov	byte ptr [rax], 0
0x4004d7:	lea	rax, [rbp - 0x70]
0x4004db:	mov	esi, 0xa
0x4004e0:	mov	rdi, rax
0x4004e3:	call	0x500048
<Block for 0x4004e8, 17 bytes>
0x4004e8:	mov	qword ptr [rbp - 0x88], rax
0x4004ef:	cmp	qword ptr [rbp - 0x88], 0
0x4004f7:	je	0x40050f
<Block for 0x4004f9, 12 bytes>
0x4004f9:	mov	rax, qword ptr [rbp - 0x88]
0x400500:	mov	byte ptr [rax], 0
0x400503:	jmp	0x40050f
