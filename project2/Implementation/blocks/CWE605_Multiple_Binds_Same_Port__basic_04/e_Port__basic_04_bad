<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x4002b6
<Block for 0x4002b6, 16 bytes>
0x4002b6:	nop	
0x4002b7:	mov	rax, qword ptr [rbp - 8]
0x4002bb:	xor	rax, qword ptr fs:[0x28]
0x4002c4:	je	0x4002cb
<Block for 0x40002b, 135 bytes>
0x40002b:	mov	qword ptr [rbp - 0x70], 0
0x400033:	mov	qword ptr [rbp - 0x68], 0
0x40003b:	mov	qword ptr [rbp - 0x60], 0
0x400043:	mov	qword ptr [rbp - 0x58], 0
0x40004b:	mov	qword ptr [rbp - 0x50], 0
0x400053:	mov	qword ptr [rbp - 0x48], 0
0x40005b:	mov	qword ptr [rbp - 0x40], 0
0x400063:	mov	qword ptr [rbp - 0x38], 0
0x40006b:	mov	qword ptr [rbp - 0x30], 0
0x400073:	mov	qword ptr [rbp - 0x28], 0
0x40007b:	mov	qword ptr [rbp - 0x20], 0
0x400083:	mov	qword ptr [rbp - 0x18], 0
0x40008b:	mov	dword ptr [rbp - 0x10], 0
0x400092:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40009c:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4000a6:	lea	rax, [rbp - 0x70]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500000
<Block for 0x4002cb, 2 bytes>
0x4002cb:	leave	
0x4002cc:	ret	
<Block for 0x4002c6, 5 bytes>
0x4002c6:	call	0x500060
<Block for 0x4000b2, 47 bytes>
0x4000b2:	mov	qword ptr [rbp - 0x90], rax
0x4000b9:	mov	dword ptr [rbp - 0xa4], 1
0x4000c3:	mov	dword ptr [rbp - 0x98], 4
0x4000cd:	mov	edx, 6
0x4000d2:	mov	esi, 1
0x4000d7:	mov	edi, 2
0x4000dc:	call	0x500008
<Block for 0x4000e1, 19 bytes>
0x4000e1:	mov	dword ptr [rbp - 0x9c], eax
0x4000e7:	cmp	dword ptr [rbp - 0x9c], -1
0x4000ee:	je	0x400271
<Block for 0x400271, 3 bytes>
0x400271:	nop	
0x400272:	jmp	0x40027e
<Block for 0x4000f4, 42 bytes>
0x4000f4:	mov	ecx, dword ptr [rbp - 0x98]
0x4000fa:	lea	rdx, [rbp - 0xa4]
0x400101:	mov	eax, dword ptr [rbp - 0x9c]
0x400107:	mov	r8d, ecx
0x40010a:	mov	rcx, rdx
0x40010d:	mov	edx, 2
0x400112:	mov	esi, 1
0x400117:	mov	edi, eax
0x400119:	call	0x500010
<Block for 0x40027e, 9 bytes>
0x40027e:	cmp	dword ptr [rbp - 0x9c], -1
0x400285:	je	0x400294
<Block for 0x40011e, 8 bytes>
0x40011e:	test	eax, eax
0x400120:	jne	0x400274
<Block for 0x400294, 9 bytes>
0x400294:	cmp	dword ptr [rbp - 0xa0], -1
0x40029b:	je	0x4002aa
<Block for 0x400287, 13 bytes>
0x400287:	mov	eax, dword ptr [rbp - 0x9c]
0x40028d:	mov	edi, eax
0x40028f:	call	0x500050
<Block for 0x400126, 22 bytes>
0x400126:	lea	rax, [rbp - 0x80]
0x40012a:	mov	edx, 0x10
0x40012f:	mov	esi, 0
0x400134:	mov	rdi, rax
0x400137:	call	0x500018
<Block for 0x400274, 3 bytes>
0x400274:	nop	
0x400275:	jmp	0x40027e
<Block for 0x4002aa, 12 bytes>
0x4002aa:	lea	rax, [rbp - 0x70]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x500058
<Block for 0x40029d, 13 bytes>
0x40029d:	mov	eax, dword ptr [rbp - 0xa0]
0x4002a3:	mov	edi, eax
0x4002a5:	call	0x500050
<Block for 0x40013c, 23 bytes>
0x40013c:	mov	word ptr [rbp - 0x80], 2
0x400142:	mov	dword ptr [rbp - 0x7c], 0
0x400149:	mov	edi, 0x6987
0x40014e:	call	0x500020
<Block for 0x400153, 29 bytes>
0x400153:	mov	word ptr [rbp - 0x7e], ax
0x400157:	lea	rcx, [rbp - 0x80]
0x40015b:	mov	eax, dword ptr [rbp - 0x9c]
0x400161:	mov	edx, 0x10
0x400166:	mov	rsi, rcx
0x400169:	mov	edi, eax
0x40016b:	call	0x500028
<Block for 0x400170, 9 bytes>
0x400170:	cmp	eax, -1
0x400173:	je	0x400277
<Block for 0x400277, 3 bytes>
0x400277:	nop	
0x400278:	jmp	0x40027e
<Block for 0x400179, 18 bytes>
0x400179:	mov	eax, dword ptr [rbp - 0x9c]
0x40017f:	mov	esi, 5
0x400184:	mov	edi, eax
0x400186:	call	0x500030
<Block for 0x40018b, 9 bytes>
0x40018b:	cmp	eax, -1
0x40018e:	je	0x40027a
<Block for 0x40027a, 3 bytes>
0x40027a:	nop	
0x40027b:	jmp	0x40027e
<Block for 0x400194, 23 bytes>
0x400194:	mov	eax, dword ptr [rbp - 0x9c]
0x40019a:	mov	edx, 0
0x40019f:	mov	esi, 0
0x4001a4:	mov	edi, eax
0x4001a6:	call	0x500038
<Block for 0x4001ab, 19 bytes>
0x4001ab:	mov	dword ptr [rbp - 0xa0], eax
0x4001b1:	cmp	dword ptr [rbp - 0xa0], -1
0x4001b8:	je	0x40027d
<Block for 0x4001be, 52 bytes>
0x4001be:	mov	rax, qword ptr [rbp - 0x90]
0x4001c5:	mov	edx, 0x63
0x4001ca:	sub	edx, eax
0x4001cc:	mov	eax, edx
0x4001ce:	movsxd	rdx, eax
0x4001d1:	lea	rcx, [rbp - 0x70]
0x4001d5:	mov	rax, qword ptr [rbp - 0x90]
0x4001dc:	lea	rsi, [rcx + rax]
0x4001e0:	mov	eax, dword ptr [rbp - 0xa0]
0x4001e6:	mov	ecx, 0
0x4001eb:	mov	edi, eax
0x4001ed:	call	0x500040
<Block for 0x40027d, 1 bytes>
0x40027d:	nop	
<Block for 0x4001f2, 15 bytes>
0x4001f2:	mov	dword ptr [rbp - 0x94], eax
0x4001f8:	cmp	dword ptr [rbp - 0x94], -1
0x4001ff:	je	0x40027e
<Block for 0x400201, 9 bytes>
0x400201:	cmp	dword ptr [rbp - 0x94], 0
0x400208:	je	0x40027e
<Block for 0x40020a, 30 bytes>
0x40020a:	mov	eax, dword ptr [rbp - 0x94]
0x400210:	cdqe	
0x400212:	mov	byte ptr [rbp + rax - 0x70], 0
0x400217:	lea	rax, [rbp - 0x70]
0x40021b:	mov	esi, 0xd
0x400220:	mov	rdi, rax
0x400223:	call	0x500048
<Block for 0x400228, 17 bytes>
0x400228:	mov	qword ptr [rbp - 0x88], rax
0x40022f:	cmp	qword ptr [rbp - 0x88], 0
0x400237:	je	0x400243
<Block for 0x400243, 17 bytes>
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	esi, 0xa
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500048
<Block for 0x400239, 27 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0x88]
0x400240:	mov	byte ptr [rax], 0
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	esi, 0xa
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500048
<Block for 0x400254, 17 bytes>
0x400254:	mov	qword ptr [rbp - 0x88], rax
0x40025b:	cmp	qword ptr [rbp - 0x88], 0
0x400263:	je	0x40027e
<Block for 0x400265, 12 bytes>
0x400265:	mov	rax, qword ptr [rbp - 0x88]
0x40026c:	mov	byte ptr [rax], 0
0x40026f:	jmp	0x40027e
