<Block for 0x40055e, 43 bytes>
0x40055e:	endbr64	
0x400562:	push	rbp
0x400563:	mov	rbp, rsp
0x400566:	sub	rsp, 0xa0
0x40056d:	mov	rax, qword ptr fs:[0x28]
0x400576:	mov	qword ptr [rbp - 8], rax
0x40057a:	xor	eax, eax
0x40057c:	mov	eax, 1
0x400581:	test	eax, eax
0x400583:	je	0x4007cb
<Block for 0x4007cb, 16 bytes>
0x4007cb:	nop	
0x4007cc:	mov	rax, qword ptr [rbp - 8]
0x4007d0:	xor	rax, qword ptr fs:[0x28]
0x4007d9:	je	0x4007e0
<Block for 0x400589, 135 bytes>
0x400589:	mov	qword ptr [rbp - 0x70], 0
0x400591:	mov	qword ptr [rbp - 0x68], 0
0x400599:	mov	qword ptr [rbp - 0x60], 0
0x4005a1:	mov	qword ptr [rbp - 0x58], 0
0x4005a9:	mov	qword ptr [rbp - 0x50], 0
0x4005b1:	mov	qword ptr [rbp - 0x48], 0
0x4005b9:	mov	qword ptr [rbp - 0x40], 0
0x4005c1:	mov	qword ptr [rbp - 0x38], 0
0x4005c9:	mov	qword ptr [rbp - 0x30], 0
0x4005d1:	mov	qword ptr [rbp - 0x28], 0
0x4005d9:	mov	qword ptr [rbp - 0x20], 0
0x4005e1:	mov	qword ptr [rbp - 0x18], 0
0x4005e9:	mov	dword ptr [rbp - 0x10], 0
0x4005f0:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005fa:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400604:	lea	rax, [rbp - 0x70]
0x400608:	mov	rdi, rax
0x40060b:	call	0x500000
<Block for 0x4007e0, 2 bytes>
0x4007e0:	leave	
0x4007e1:	ret	
<Block for 0x4007db, 5 bytes>
0x4007db:	call	0x500060
<Block for 0x400610, 27 bytes>
0x400610:	mov	qword ptr [rbp - 0x90], rax
0x400617:	mov	edx, 6
0x40061c:	mov	esi, 1
0x400621:	mov	edi, 2
0x400626:	call	0x500008
<Block for 0x40062b, 19 bytes>
0x40062b:	mov	dword ptr [rbp - 0x98], eax
0x400631:	cmp	dword ptr [rbp - 0x98], -1
0x400638:	je	0x400789
<Block for 0x400789, 3 bytes>
0x400789:	nop	
0x40078a:	jmp	0x400793
<Block for 0x40063e, 22 bytes>
0x40063e:	lea	rax, [rbp - 0x80]
0x400642:	mov	edx, 0x10
0x400647:	mov	esi, 0
0x40064c:	mov	rdi, rax
0x40064f:	call	0x500018
<Block for 0x400793, 9 bytes>
0x400793:	cmp	dword ptr [rbp - 0x98], -1
0x40079a:	je	0x4007a9
<Block for 0x400654, 23 bytes>
0x400654:	mov	word ptr [rbp - 0x80], 2
0x40065a:	mov	dword ptr [rbp - 0x7c], 0
0x400661:	mov	edi, 0x6987
0x400666:	call	0x500020
<Block for 0x4007a9, 9 bytes>
0x4007a9:	cmp	dword ptr [rbp - 0x9c], -1
0x4007b0:	je	0x4007bf
<Block for 0x40079c, 13 bytes>
0x40079c:	mov	eax, dword ptr [rbp - 0x98]
0x4007a2:	mov	edi, eax
0x4007a4:	call	0x500050
<Block for 0x40066b, 29 bytes>
0x40066b:	mov	word ptr [rbp - 0x7e], ax
0x40066f:	lea	rcx, [rbp - 0x80]
0x400673:	mov	eax, dword ptr [rbp - 0x98]
0x400679:	mov	edx, 0x10
0x40067e:	mov	rsi, rcx
0x400681:	mov	edi, eax
0x400683:	call	0x500028
<Block for 0x4007bf, 12 bytes>
0x4007bf:	lea	rax, [rbp - 0x70]
0x4007c3:	mov	rdi, rax
0x4007c6:	call	0x500058
<Block for 0x4007b2, 13 bytes>
0x4007b2:	mov	eax, dword ptr [rbp - 0x9c]
0x4007b8:	mov	edi, eax
0x4007ba:	call	0x500050
<Block for 0x400688, 9 bytes>
0x400688:	cmp	eax, -1
0x40068b:	je	0x40078c
<Block for 0x40078c, 3 bytes>
0x40078c:	nop	
0x40078d:	jmp	0x400793
<Block for 0x400691, 18 bytes>
0x400691:	mov	eax, dword ptr [rbp - 0x98]
0x400697:	mov	esi, 5
0x40069c:	mov	edi, eax
0x40069e:	call	0x500030
<Block for 0x4006a3, 9 bytes>
0x4006a3:	cmp	eax, -1
0x4006a6:	je	0x40078f
<Block for 0x40078f, 3 bytes>
0x40078f:	nop	
0x400790:	jmp	0x400793
<Block for 0x4006ac, 23 bytes>
0x4006ac:	mov	eax, dword ptr [rbp - 0x98]
0x4006b2:	mov	edx, 0
0x4006b7:	mov	esi, 0
0x4006bc:	mov	edi, eax
0x4006be:	call	0x500038
<Block for 0x4006c3, 19 bytes>
0x4006c3:	mov	dword ptr [rbp - 0x9c], eax
0x4006c9:	cmp	dword ptr [rbp - 0x9c], -1
0x4006d0:	je	0x400792
<Block for 0x4006d6, 52 bytes>
0x4006d6:	mov	rax, qword ptr [rbp - 0x90]
0x4006dd:	mov	edx, 0x63
0x4006e2:	sub	edx, eax
0x4006e4:	mov	eax, edx
0x4006e6:	movsxd	rdx, eax
0x4006e9:	lea	rcx, [rbp - 0x70]
0x4006ed:	mov	rax, qword ptr [rbp - 0x90]
0x4006f4:	lea	rsi, [rcx + rax]
0x4006f8:	mov	eax, dword ptr [rbp - 0x9c]
0x4006fe:	mov	ecx, 0
0x400703:	mov	edi, eax
0x400705:	call	0x500040
<Block for 0x400792, 1 bytes>
0x400792:	nop	
<Block for 0x40070a, 15 bytes>
0x40070a:	mov	dword ptr [rbp - 0x94], eax
0x400710:	cmp	dword ptr [rbp - 0x94], -1
0x400717:	je	0x400793
<Block for 0x400719, 9 bytes>
0x400719:	cmp	dword ptr [rbp - 0x94], 0
0x400720:	je	0x400793
<Block for 0x400722, 30 bytes>
0x400722:	mov	eax, dword ptr [rbp - 0x94]
0x400728:	cdqe	
0x40072a:	mov	byte ptr [rbp + rax - 0x70], 0
0x40072f:	lea	rax, [rbp - 0x70]
0x400733:	mov	esi, 0xd
0x400738:	mov	rdi, rax
0x40073b:	call	0x500048
<Block for 0x400740, 17 bytes>
0x400740:	mov	qword ptr [rbp - 0x88], rax
0x400747:	cmp	qword ptr [rbp - 0x88], 0
0x40074f:	je	0x40075b
<Block for 0x40075b, 17 bytes>
0x40075b:	lea	rax, [rbp - 0x70]
0x40075f:	mov	esi, 0xa
0x400764:	mov	rdi, rax
0x400767:	call	0x500048
<Block for 0x400751, 27 bytes>
0x400751:	mov	rax, qword ptr [rbp - 0x88]
0x400758:	mov	byte ptr [rax], 0
0x40075b:	lea	rax, [rbp - 0x70]
0x40075f:	mov	esi, 0xa
0x400764:	mov	rdi, rax
0x400767:	call	0x500048
<Block for 0x40076c, 17 bytes>
0x40076c:	mov	qword ptr [rbp - 0x88], rax
0x400773:	cmp	qword ptr [rbp - 0x88], 0
0x40077b:	je	0x400793
<Block for 0x40077d, 12 bytes>
0x40077d:	mov	rax, qword ptr [rbp - 0x88]
0x400784:	mov	byte ptr [rax], 0
0x400787:	jmp	0x400793
