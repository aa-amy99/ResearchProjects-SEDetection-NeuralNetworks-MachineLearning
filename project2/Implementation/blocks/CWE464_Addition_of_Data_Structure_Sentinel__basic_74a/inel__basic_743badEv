<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4003bc
<Block for 0x40002b, 22 bytes>
0x40002b:	mov	byte ptr [rbp - 0x81], 0x20
0x400032:	mov	rax, qword ptr [rip + 0xfffc7]
0x400039:	mov	rdi, rax
0x40003c:	call	0x500008
<Block for 0x400041, 19 bytes>
0x400041:	mov	byte ptr [rbp - 0x1a], al
0x400044:	mov	byte ptr [rbp - 0x19], 0
0x400048:	lea	rax, [rbp - 0x1a]
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500010
<Block for 0x400054, 32 bytes>
0x400054:	mov	byte ptr [rbp - 0x81], al
0x40005a:	mov	dword ptr [rbp - 0x50], 0
0x400061:	lea	rdx, [rbp - 0x50]
0x400065:	lea	rax, [rbp - 0x80]
0x400069:	mov	rsi, rdx
0x40006c:	mov	rdi, rax
0x40006f:	call	0x400576
<Block for 0x400074, 35 bytes>
0x400074:	movzx	edx, byte ptr [rbp - 0x81]
0x40007b:	mov	byte ptr [rax], dl
0x40007d:	mov	dword ptr [rbp - 0x50], 1
0x400084:	lea	rdx, [rbp - 0x50]
0x400088:	lea	rax, [rbp - 0x80]
0x40008c:	mov	rsi, rdx
0x40008f:	mov	rdi, rax
0x400092:	call	0x400576
<Block for 0x400097, 35 bytes>
0x400097:	movzx	edx, byte ptr [rbp - 0x81]
0x40009e:	mov	byte ptr [rax], dl
0x4000a0:	mov	dword ptr [rbp - 0x50], 2
0x4000a7:	lea	rdx, [rbp - 0x50]
0x4000ab:	lea	rax, [rbp - 0x80]
0x4000af:	mov	rsi, rdx
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x400576
<Block for 0x4000ba, 28 bytes>
0x4000ba:	movzx	edx, byte ptr [rbp - 0x81]
0x4000c1:	mov	byte ptr [rax], dl
0x4000c3:	lea	rdx, [rbp - 0x80]
0x4000c7:	lea	rax, [rbp - 0x50]
0x4000cb:	mov	rsi, rdx
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x4003fc
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rax, [rbp - 0x50]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500018
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rax, [rbp - 0x50]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x4003dc
<Block for 0x4000ee, 12 bytes>
0x4000ee:	lea	rax, [rbp - 0x80]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x4003dc
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x400144
<Block for 0x400144, 10 bytes>
0x400144:	add	rsp, 0x88
0x40014b:	pop	rbx
0x40014c:	pop	rbp
0x40014d:	ret	
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x40013f
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500028
