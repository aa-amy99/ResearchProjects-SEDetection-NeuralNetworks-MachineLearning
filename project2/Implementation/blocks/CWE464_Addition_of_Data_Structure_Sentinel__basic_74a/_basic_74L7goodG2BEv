<Block for 0x40014e, 43 bytes>
0x40014e:	endbr64	
0x400152:	push	rbp
0x400153:	mov	rbp, rsp
0x400156:	push	rbx
0x400157:	sub	rsp, 0x88
0x40015e:	mov	rax, qword ptr fs:[0x28]
0x400167:	mov	qword ptr [rbp - 0x18], rax
0x40016b:	xor	eax, eax
0x40016d:	lea	rax, [rbp - 0x80]
0x400171:	mov	rdi, rax
0x400174:	call	0x4003bc
<Block for 0x400179, 40 bytes>
0x400179:	mov	byte ptr [rbp - 0x81], 0x20
0x400180:	mov	byte ptr [rbp - 0x81], 0x61
0x400187:	mov	dword ptr [rbp - 0x50], 0
0x40018e:	lea	rdx, [rbp - 0x50]
0x400192:	lea	rax, [rbp - 0x80]
0x400196:	mov	rsi, rdx
0x400199:	mov	rdi, rax
0x40019c:	call	0x400576
<Block for 0x4001a1, 35 bytes>
0x4001a1:	movzx	edx, byte ptr [rbp - 0x81]
0x4001a8:	mov	byte ptr [rax], dl
0x4001aa:	mov	dword ptr [rbp - 0x50], 1
0x4001b1:	lea	rdx, [rbp - 0x50]
0x4001b5:	lea	rax, [rbp - 0x80]
0x4001b9:	mov	rsi, rdx
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x400576
<Block for 0x4001c4, 35 bytes>
0x4001c4:	movzx	edx, byte ptr [rbp - 0x81]
0x4001cb:	mov	byte ptr [rax], dl
0x4001cd:	mov	dword ptr [rbp - 0x50], 2
0x4001d4:	lea	rdx, [rbp - 0x50]
0x4001d8:	lea	rax, [rbp - 0x80]
0x4001dc:	mov	rsi, rdx
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x400576
<Block for 0x4001e7, 28 bytes>
0x4001e7:	movzx	edx, byte ptr [rbp - 0x81]
0x4001ee:	mov	byte ptr [rax], dl
0x4001f0:	lea	rdx, [rbp - 0x80]
0x4001f4:	lea	rax, [rbp - 0x50]
0x4001f8:	mov	rsi, rdx
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x4003fc
<Block for 0x400203, 12 bytes>
0x400203:	lea	rax, [rbp - 0x50]
0x400207:	mov	rdi, rax
0x40020a:	call	0x500030
<Block for 0x40020f, 12 bytes>
0x40020f:	lea	rax, [rbp - 0x50]
0x400213:	mov	rdi, rax
0x400216:	call	0x4003dc
<Block for 0x40021b, 12 bytes>
0x40021b:	lea	rax, [rbp - 0x80]
0x40021f:	mov	rdi, rax
0x400222:	call	0x4003dc
<Block for 0x400227, 16 bytes>
0x400227:	nop	
0x400228:	mov	rax, qword ptr [rbp - 0x18]
0x40022c:	xor	rax, qword ptr fs:[0x28]
0x400235:	je	0x400271
<Block for 0x400271, 10 bytes>
0x400271:	add	rsp, 0x88
0x400278:	pop	rbx
0x400279:	pop	rbp
0x40027a:	ret	
<Block for 0x400237, 2 bytes>
0x400237:	jmp	0x40026c
<Block for 0x40026c, 5 bytes>
0x40026c:	call	0x500028
