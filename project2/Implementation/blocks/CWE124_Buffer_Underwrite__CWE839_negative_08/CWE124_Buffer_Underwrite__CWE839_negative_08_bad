<Block for 0x40001e, 44 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x40
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400040:	mov	eax, 0
0x400045:	call	0x400000
<Block for 0x40004a, 4 bytes>
0x40004a:	test	eax, eax
0x40004c:	je	0x400055
<Block for 0x400055, 10 bytes>
0x400055:	mov	eax, 0
0x40005a:	call	0x400000
<Block for 0x40004e, 17 bytes>
0x40004e:	mov	dword ptr [rbp - 0x38], 0xfffffffb
0x400055:	mov	eax, 0
0x40005a:	call	0x400000
<Block for 0x40005f, 4 bytes>
0x40005f:	test	eax, eax
0x400061:	je	0x4000cf
<Block for 0x4000cf, 16 bytes>
0x4000cf:	nop	
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	xor	rax, qword ptr fs:[0x28]
0x4000dd:	je	0x4000e4
<Block for 0x400063, 46 bytes>
0x400063:	mov	qword ptr [rbp - 0x30], 0
0x40006b:	mov	qword ptr [rbp - 0x28], 0
0x400073:	mov	qword ptr [rbp - 0x20], 0
0x40007b:	mov	qword ptr [rbp - 0x18], 0
0x400083:	mov	qword ptr [rbp - 0x10], 0
0x40008b:	cmp	dword ptr [rbp - 0x38], 9
0x40008f:	jg	0x4000c3
<Block for 0x4000e4, 2 bytes>
0x4000e4:	leave	
0x4000e5:	ret	
<Block for 0x4000df, 5 bytes>
0x4000df:	call	0x500010
<Block for 0x400091, 22 bytes>
0x400091:	mov	eax, dword ptr [rbp - 0x38]
0x400094:	cdqe	
0x400096:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40009e:	mov	dword ptr [rbp - 0x34], 0
0x4000a5:	jmp	0x4000bb
<Block for 0x4000c3, 12 bytes>
0x4000c3:	lea	rdi, [rip + 0x39e]
0x4000ca:	call	0x500008
<Block for 0x4000bb, 6 bytes>
0x4000bb:	cmp	dword ptr [rbp - 0x34], 9
0x4000bf:	jle	0x4000a7
<Block for 0x4000a7, 16 bytes>
0x4000a7:	mov	eax, dword ptr [rbp - 0x34]
0x4000aa:	cdqe	
0x4000ac:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000b0:	mov	edi, eax
0x4000b2:	call	0x500000
<Block for 0x4000c1, 2 bytes>
0x4000c1:	jmp	0x4000cf
<Block for 0x4000b7, 10 bytes>
0x4000b7:	add	dword ptr [rbp - 0x34], 1
0x4000bb:	cmp	dword ptr [rbp - 0x34], 9
0x4000bf:	jle	0x4000a7
