<Block for 0x400262, 37 bytes>
0x400262:	endbr64	
0x400266:	push	rbp
0x400267:	mov	rbp, rsp
0x40026a:	sub	rsp, 0x30
0x40026e:	mov	rax, qword ptr fs:[0x28]
0x400277:	mov	qword ptr [rbp - 8], rax
0x40027b:	xor	eax, eax
0x40027d:	mov	eax, 0
0x400282:	call	0x40000f
<Block for 0x400287, 4 bytes>
0x400287:	test	eax, eax
0x400289:	je	0x40029c
<Block for 0x40029c, 34 bytes>
0x40029c:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4002a3:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4002aa:	mov	edx, 6
0x4002af:	mov	esi, 1
0x4002b4:	mov	edi, 2
0x4002b9:	call	0x500000
<Block for 0x40028b, 12 bytes>
0x40028b:	lea	rdi, [rip + 0x2c5]
0x400292:	call	0x500050
<Block for 0x4002be, 13 bytes>
0x4002be:	mov	dword ptr [rbp - 0x24], eax
0x4002c1:	cmp	dword ptr [rbp - 0x24], -1
0x4002c5:	je	0x400377
<Block for 0x400297, 5 bytes>
0x400297:	jmp	0x4003a1
<Block for 0x400377, 3 bytes>
0x400377:	nop	
0x400378:	jmp	0x400381
<Block for 0x4002cb, 22 bytes>
0x4002cb:	lea	rax, [rbp - 0x20]
0x4002cf:	mov	edx, 0x10
0x4002d4:	mov	esi, 0
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x500008
<Block for 0x4003a1, 16 bytes>
0x4003a1:	nop	
0x4003a2:	mov	rax, qword ptr [rbp - 8]
0x4003a6:	xor	rax, qword ptr fs:[0x28]
0x4003af:	je	0x4003b6
<Block for 0x400381, 6 bytes>
0x400381:	cmp	dword ptr [rbp - 0x24], -1
0x400385:	je	0x400391
<Block for 0x4002e1, 23 bytes>
0x4002e1:	mov	word ptr [rbp - 0x20], 2
0x4002e7:	mov	dword ptr [rbp - 0x1c], 0
0x4002ee:	mov	edi, 0x4e20
0x4002f3:	call	0x500010
<Block for 0x4003b6, 2 bytes>
0x4003b6:	leave	
0x4003b7:	ret	
<Block for 0x4003b1, 5 bytes>
0x4003b1:	call	0x500060
<Block for 0x400391, 6 bytes>
0x400391:	cmp	dword ptr [rbp - 0x28], -1
0x400395:	je	0x4003a1
<Block for 0x400387, 10 bytes>
0x400387:	mov	eax, dword ptr [rbp - 0x24]
0x40038a:	mov	edi, eax
0x40038c:	call	0x500058
<Block for 0x4002f8, 26 bytes>
0x4002f8:	mov	word ptr [rbp - 0x1e], ax
0x4002fc:	lea	rcx, [rbp - 0x20]
0x400300:	mov	eax, dword ptr [rbp - 0x24]
0x400303:	mov	edx, 0x10
0x400308:	mov	rsi, rcx
0x40030b:	mov	edi, eax
0x40030d:	call	0x500018
<Block for 0x400397, 10 bytes>
0x400397:	mov	eax, dword ptr [rbp - 0x28]
0x40039a:	mov	edi, eax
0x40039c:	call	0x500058
<Block for 0x400312, 5 bytes>
0x400312:	cmp	eax, -1
0x400315:	je	0x40037a
<Block for 0x40037a, 3 bytes>
0x40037a:	nop	
0x40037b:	jmp	0x400381
<Block for 0x400317, 15 bytes>
0x400317:	mov	eax, dword ptr [rbp - 0x24]
0x40031a:	mov	esi, 5
0x40031f:	mov	edi, eax
0x400321:	call	0x500020
<Block for 0x400326, 5 bytes>
0x400326:	cmp	eax, -1
0x400329:	je	0x40037d
<Block for 0x40037d, 3 bytes>
0x40037d:	nop	
0x40037e:	jmp	0x400381
<Block for 0x40032b, 20 bytes>
0x40032b:	mov	eax, dword ptr [rbp - 0x24]
0x40032e:	mov	edx, 0
0x400333:	mov	esi, 0
0x400338:	mov	edi, eax
0x40033a:	call	0x500028
<Block for 0x40033f, 9 bytes>
0x40033f:	mov	dword ptr [rbp - 0x28], eax
0x400342:	cmp	dword ptr [rbp - 0x28], -1
0x400346:	je	0x400380
<Block for 0x400348, 27 bytes>
0x400348:	mov	eax, dword ptr [rbp - 0x28]
0x40034b:	mov	ecx, 0
0x400350:	mov	edx, 8
0x400355:	lea	rsi, [rip + 0x1e5]
0x40035c:	mov	edi, eax
0x40035e:	call	0x500048
<Block for 0x400380, 1 bytes>
0x400380:	nop	
<Block for 0x400363, 6 bytes>
0x400363:	cmp	rax, -1
0x400367:	jne	0x400381
<Block for 0x400369, 12 bytes>
0x400369:	lea	rdi, [rip + 0x1da]
0x400370:	call	0x500050
<Block for 0x400375, 2 bytes>
0x400375:	jmp	0x400381
