<Block for 0x4003b8, 37 bytes>
0x4003b8:	endbr64	
0x4003bc:	push	rbp
0x4003bd:	mov	rbp, rsp
0x4003c0:	sub	rsp, 0x30
0x4003c4:	mov	rax, qword ptr fs:[0x28]
0x4003cd:	mov	qword ptr [rbp - 8], rax
0x4003d1:	xor	eax, eax
0x4003d3:	mov	eax, 0
0x4003d8:	call	0x400000
<Block for 0x4003dd, 8 bytes>
0x4003dd:	test	eax, eax
0x4003df:	je	0x4004ea
<Block for 0x4004ea, 16 bytes>
0x4004ea:	nop	
0x4004eb:	mov	rax, qword ptr [rbp - 8]
0x4004ef:	xor	rax, qword ptr fs:[0x28]
0x4004f8:	je	0x4004ff
<Block for 0x4003e5, 34 bytes>
0x4003e5:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4003ec:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4003f3:	mov	edx, 6
0x4003f8:	mov	esi, 1
0x4003fd:	mov	edi, 2
0x400402:	call	0x500000
<Block for 0x4004ff, 2 bytes>
0x4004ff:	leave	
0x400500:	ret	
<Block for 0x4004fa, 5 bytes>
0x4004fa:	call	0x500060
<Block for 0x400407, 13 bytes>
0x400407:	mov	dword ptr [rbp - 0x24], eax
0x40040a:	cmp	dword ptr [rbp - 0x24], -1
0x40040e:	je	0x4004c0
<Block for 0x4004c0, 3 bytes>
0x4004c0:	nop	
0x4004c1:	jmp	0x4004ca
<Block for 0x400414, 22 bytes>
0x400414:	lea	rax, [rbp - 0x20]
0x400418:	mov	edx, 0x10
0x40041d:	mov	esi, 0
0x400422:	mov	rdi, rax
0x400425:	call	0x500008
<Block for 0x4004ca, 6 bytes>
0x4004ca:	cmp	dword ptr [rbp - 0x24], -1
0x4004ce:	je	0x4004da
<Block for 0x40042a, 23 bytes>
0x40042a:	mov	word ptr [rbp - 0x20], 2
0x400430:	mov	dword ptr [rbp - 0x1c], 0
0x400437:	mov	edi, 0x4e20
0x40043c:	call	0x500010
<Block for 0x4004da, 6 bytes>
0x4004da:	cmp	dword ptr [rbp - 0x28], -1
0x4004de:	je	0x4004ea
<Block for 0x4004d0, 10 bytes>
0x4004d0:	mov	eax, dword ptr [rbp - 0x24]
0x4004d3:	mov	edi, eax
0x4004d5:	call	0x500058
<Block for 0x400441, 26 bytes>
0x400441:	mov	word ptr [rbp - 0x1e], ax
0x400445:	lea	rcx, [rbp - 0x20]
0x400449:	mov	eax, dword ptr [rbp - 0x24]
0x40044c:	mov	edx, 0x10
0x400451:	mov	rsi, rcx
0x400454:	mov	edi, eax
0x400456:	call	0x500018
<Block for 0x4004e0, 10 bytes>
0x4004e0:	mov	eax, dword ptr [rbp - 0x28]
0x4004e3:	mov	edi, eax
0x4004e5:	call	0x500058
<Block for 0x40045b, 5 bytes>
0x40045b:	cmp	eax, -1
0x40045e:	je	0x4004c3
<Block for 0x4004c3, 3 bytes>
0x4004c3:	nop	
0x4004c4:	jmp	0x4004ca
<Block for 0x400460, 15 bytes>
0x400460:	mov	eax, dword ptr [rbp - 0x24]
0x400463:	mov	esi, 5
0x400468:	mov	edi, eax
0x40046a:	call	0x500020
<Block for 0x40046f, 5 bytes>
0x40046f:	cmp	eax, -1
0x400472:	je	0x4004c6
<Block for 0x4004c6, 3 bytes>
0x4004c6:	nop	
0x4004c7:	jmp	0x4004ca
<Block for 0x400474, 20 bytes>
0x400474:	mov	eax, dword ptr [rbp - 0x24]
0x400477:	mov	edx, 0
0x40047c:	mov	esi, 0
0x400481:	mov	edi, eax
0x400483:	call	0x500028
<Block for 0x400488, 9 bytes>
0x400488:	mov	dword ptr [rbp - 0x28], eax
0x40048b:	cmp	dword ptr [rbp - 0x28], -1
0x40048f:	je	0x4004c9
<Block for 0x400491, 27 bytes>
0x400491:	mov	eax, dword ptr [rbp - 0x28]
0x400494:	mov	ecx, 0
0x400499:	mov	edx, 8
0x40049e:	lea	rsi, [rip + 0x9c]
0x4004a5:	mov	edi, eax
0x4004a7:	call	0x500048
<Block for 0x4004c9, 1 bytes>
0x4004c9:	nop	
<Block for 0x4004ac, 6 bytes>
0x4004ac:	cmp	rax, -1
0x4004b0:	jne	0x4004ca
<Block for 0x4004b2, 12 bytes>
0x4004b2:	lea	rdi, [rip + 0x91]
0x4004b9:	call	0x500050
<Block for 0x4004be, 2 bytes>
0x4004be:	jmp	0x4004ca
