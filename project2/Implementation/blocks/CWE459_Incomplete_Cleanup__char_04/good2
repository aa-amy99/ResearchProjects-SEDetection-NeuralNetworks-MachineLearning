<Block for 0x400170, 36 bytes>
0x400170:	endbr64	
0x400174:	push	rbp
0x400175:	mov	rbp, rsp
0x400178:	sub	rsp, 0x30
0x40017c:	mov	rax, qword ptr fs:[0x28]
0x400185:	mov	qword ptr [rbp - 8], rax
0x400189:	xor	eax, eax
0x40018b:	mov	eax, 1
0x400190:	test	eax, eax
0x400192:	je	0x400212
<Block for 0x400212, 16 bytes>
0x400212:	nop	
0x400213:	mov	rax, qword ptr [rbp - 8]
0x400217:	xor	rax, qword ptr fs:[0x28]
0x400220:	je	0x400227
<Block for 0x400194, 36 bytes>
0x400194:	movabs	rax, 0x58585858646f6f67
0x40019e:	mov	qword ptr [rbp - 0x13], rax
0x4001a2:	mov	word ptr [rbp - 0xb], 0x5858
0x4001a8:	mov	byte ptr [rbp - 9], 0
0x4001ac:	lea	rax, [rbp - 0x13]
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x500000
<Block for 0x400227, 2 bytes>
0x400227:	leave	
0x400228:	ret	
<Block for 0x400222, 5 bytes>
0x400222:	call	0x500020
<Block for 0x4001b8, 9 bytes>
0x4001b8:	mov	dword ptr [rbp - 0x24], eax
0x4001bb:	cmp	dword ptr [rbp - 0x24], -1
0x4001bf:	je	0x400212
<Block for 0x4001c1, 17 bytes>
0x4001c1:	mov	eax, dword ptr [rbp - 0x24]
0x4001c4:	lea	rsi, [rip + 0x85]
0x4001cb:	mov	edi, eax
0x4001cd:	call	0x500008
<Block for 0x4001d2, 11 bytes>
0x4001d2:	mov	qword ptr [rbp - 0x20], rax
0x4001d6:	cmp	qword ptr [rbp - 0x20], 0
0x4001db:	je	0x400212
<Block for 0x4001dd, 29 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x20]
0x4001e1:	mov	rcx, rax
0x4001e4:	mov	edx, 0xe
0x4001e9:	mov	esi, 1
0x4001ee:	lea	rdi, [rip + 0x5d]
0x4001f5:	call	0x500010
<Block for 0x4001fa, 12 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x20]
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500018
<Block for 0x400206, 12 bytes>
0x400206:	lea	rax, [rbp - 0x13]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500030
