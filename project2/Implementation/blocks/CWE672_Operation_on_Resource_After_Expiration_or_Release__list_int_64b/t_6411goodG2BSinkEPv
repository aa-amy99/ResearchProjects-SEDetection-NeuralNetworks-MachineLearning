<Block for 0x400156, 59 bytes>
0x400156:	endbr64	
0x40015a:	push	rbp
0x40015b:	mov	rbp, rsp
0x40015e:	push	rbx
0x40015f:	sub	rsp, 0x58
0x400163:	mov	qword ptr [rbp - 0x58], rdi
0x400167:	mov	rax, qword ptr fs:[0x28]
0x400170:	mov	qword ptr [rbp - 0x18], rax
0x400174:	xor	eax, eax
0x400176:	mov	rax, qword ptr [rbp - 0x58]
0x40017a:	mov	qword ptr [rbp - 0x38], rax
0x40017e:	mov	rdx, qword ptr [rbp - 0x38]
0x400182:	lea	rax, [rbp - 0x30]
0x400186:	mov	rsi, rdx
0x400189:	mov	rdi, rax
0x40018c:	call	0x400536
<Block for 0x400191, 12 bytes>
0x400191:	lea	rax, [rbp - 0x48]
0x400195:	mov	rdi, rax
0x400198:	call	0x40064e
<Block for 0x40019d, 19 bytes>
0x40019d:	lea	rsi, [rip + 0x2b6]
0x4001a4:	lea	rdi, [rip + 0xffe55]
0x4001ab:	call	0x500008
<Block for 0x4001b0, 12 bytes>
0x4001b0:	lea	rax, [rbp - 0x30]
0x4001b4:	mov	rdi, rax
0x4001b7:	call	0x400668
<Block for 0x4001bc, 16 bytes>
0x4001bc:	mov	qword ptr [rbp - 0x48], rax
0x4001c0:	lea	rax, [rbp - 0x30]
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x4006b8
<Block for 0x4001cc, 23 bytes>
0x4001cc:	mov	qword ptr [rbp - 0x40], rax
0x4001d0:	lea	rdx, [rbp - 0x40]
0x4001d4:	lea	rax, [rbp - 0x48]
0x4001d8:	mov	rsi, rdx
0x4001db:	mov	rdi, rax
0x4001de:	call	0x400704
<Block for 0x4001e3, 4 bytes>
0x4001e3:	test	al, al
0x4001e5:	je	0x40024e
<Block for 0x40024e, 22 bytes>
0x40024e:	mov	rax, qword ptr [rip + 0xffdcb]
0x400255:	mov	rsi, rax
0x400258:	lea	rdi, [rip + 0xffda1]
0x40025f:	call	0x500028
<Block for 0x4001e7, 12 bytes>
0x4001e7:	lea	rax, [rbp - 0x48]
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x400782
<Block for 0x400264, 12 bytes>
0x400264:	lea	rax, [rbp - 0x30]
0x400268:	mov	rdi, rax
0x40026b:	call	0x4004c6
<Block for 0x4001f3, 11 bytes>
0x4001f3:	mov	eax, dword ptr [rax]
0x4001f5:	test	eax, eax
0x4001f7:	sete	al
0x4001fa:	test	al, al
0x4001fc:	je	0x40020a
<Block for 0x400270, 16 bytes>
0x400270:	nop	
0x400271:	mov	rax, qword ptr [rbp - 0x18]
0x400275:	xor	rax, qword ptr fs:[0x28]
0x40027e:	je	0x4002a5
<Block for 0x40020a, 19 bytes>
0x40020a:	lea	rsi, [rip + 0x25d]
0x400211:	lea	rdi, [rip + 0xffde8]
0x400218:	call	0x500008
<Block for 0x4001fe, 12 bytes>
0x4001fe:	lea	rax, [rbp - 0x30]
0x400202:	mov	rdi, rax
0x400205:	call	0x4007a4
<Block for 0x4002a5, 7 bytes>
0x4002a5:	add	rsp, 0x58
0x4002a9:	pop	rbx
0x4002aa:	pop	rbp
0x4002ab:	ret	
<Block for 0x400280, 2 bytes>
0x400280:	jmp	0x4002a0
<Block for 0x40021d, 15 bytes>
0x40021d:	mov	rbx, rax
0x400220:	lea	rax, [rbp - 0x48]
0x400224:	mov	rdi, rax
0x400227:	call	0x400782
<Block for 0x4002a0, 5 bytes>
0x4002a0:	call	0x500038
<Block for 0x40022c, 12 bytes>
0x40022c:	mov	eax, dword ptr [rax]
0x40022e:	mov	esi, eax
0x400230:	mov	rdi, rbx
0x400233:	call	0x500010
<Block for 0x400238, 17 bytes>
0x400238:	lea	rax, [rbp - 0x48]
0x40023c:	mov	esi, 0
0x400241:	mov	rdi, rax
0x400244:	call	0x40072a
<Block for 0x400249, 5 bytes>
0x400249:	jmp	0x4001c0
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rax, [rbp - 0x30]
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x4006b8
