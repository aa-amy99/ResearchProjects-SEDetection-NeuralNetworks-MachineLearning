<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x70
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x58]
0x40001f:	mov	qword ptr [rbp - 0x48], rax
0x400023:	lea	rax, [rbp - 0x58]
0x400027:	mov	qword ptr [rbp - 0x40], rax
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 13 bytes>
0x400035:	mov	qword ptr [rbp - 0x58], rax
0x400039:	mov	rax, qword ptr [rbp - 0x58]
0x40003d:	test	rax, rax
0x400040:	jne	0x40004c
<Block for 0x400042, 10 bytes>
0x400042:	mov	edi, 0xffffffff
0x400047:	call	0x500008
<Block for 0x40004c, 44 bytes>
0x40004c:	mov	rax, qword ptr [rbp - 0x58]
0x400050:	mov	byte ptr [rax], 0
0x400053:	mov	rax, qword ptr [rbp - 0x48]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	mov	qword ptr [rbp - 0x38], rax
0x40005e:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x400065:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x40006c:	mov	rax, qword ptr [rbp - 0x38]
0x400070:	mov	rdi, rax
0x400073:	call	0x500010
<Block for 0x400078, 24 bytes>
0x400078:	mov	qword ptr [rbp - 0x30], rax
0x40007c:	mov	edx, 6
0x400081:	mov	esi, 1
0x400086:	mov	edi, 2
0x40008b:	call	0x500018
<Block for 0x400090, 13 bytes>
0x400090:	mov	dword ptr [rbp - 0x60], eax
0x400093:	cmp	dword ptr [rbp - 0x60], -1
0x400097:	je	0x4001bb
<Block for 0x4001bb, 3 bytes>
0x4001bb:	nop	
0x4001bc:	jmp	0x4001c5
<Block for 0x40009d, 22 bytes>
0x40009d:	lea	rax, [rbp - 0x20]
0x4000a1:	mov	edx, 0x10
0x4000a6:	mov	esi, 0
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500020
<Block for 0x4001c5, 6 bytes>
0x4001c5:	cmp	dword ptr [rbp - 0x60], -1
0x4001c9:	je	0x4001d5
<Block for 0x4000b3, 23 bytes>
0x4000b3:	mov	word ptr [rbp - 0x20], 2
0x4000b9:	mov	dword ptr [rbp - 0x1c], 0
0x4000c0:	mov	edi, 0x6987
0x4000c5:	call	0x500028
<Block for 0x4001d5, 6 bytes>
0x4001d5:	cmp	dword ptr [rbp - 0x64], -1
0x4001d9:	je	0x4001e5
<Block for 0x4001cb, 10 bytes>
0x4001cb:	mov	eax, dword ptr [rbp - 0x60]
0x4001ce:	mov	edi, eax
0x4001d0:	call	0x500058
<Block for 0x4000ca, 26 bytes>
0x4000ca:	mov	word ptr [rbp - 0x1e], ax
0x4000ce:	lea	rcx, [rbp - 0x20]
0x4000d2:	mov	eax, dword ptr [rbp - 0x60]
0x4000d5:	mov	edx, 0x10
0x4000da:	mov	rsi, rcx
0x4000dd:	mov	edi, eax
0x4000df:	call	0x500030
<Block for 0x4001e5, 24 bytes>
0x4001e5:	mov	rax, qword ptr [rbp - 0x48]
0x4001e9:	mov	rdx, qword ptr [rbp - 0x38]
0x4001ed:	mov	qword ptr [rax], rdx
0x4001f0:	mov	rax, qword ptr [rbp - 0x40]
0x4001f4:	mov	rax, qword ptr [rax]
0x4001f7:	mov	qword ptr [rbp - 0x50], rax
0x4001fb:	jmp	0x40021b
<Block for 0x4001db, 10 bytes>
0x4001db:	mov	eax, dword ptr [rbp - 0x64]
0x4001de:	mov	edi, eax
0x4001e0:	call	0x500058
<Block for 0x4000e4, 9 bytes>
0x4000e4:	cmp	eax, -1
0x4000e7:	je	0x4001be
<Block for 0x40021b, 11 bytes>
0x40021b:	mov	rax, qword ptr [rbp - 0x50]
0x40021f:	movzx	eax, byte ptr [rax]
0x400222:	test	al, al
0x400224:	jne	0x4001fd
<Block for 0x4001be, 3 bytes>
0x4001be:	nop	
0x4001bf:	jmp	0x4001c5
<Block for 0x4000ed, 15 bytes>
0x4000ed:	mov	eax, dword ptr [rbp - 0x60]
0x4000f0:	mov	esi, 5
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x500038
<Block for 0x400226, 12 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0x50]
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500068
<Block for 0x4001fd, 11 bytes>
0x4001fd:	mov	rax, qword ptr [rbp - 0x50]
0x400201:	movzx	eax, byte ptr [rax]
0x400204:	cmp	al, 0x53
0x400206:	jne	0x400216
<Block for 0x4000fc, 9 bytes>
0x4000fc:	cmp	eax, -1
0x4000ff:	je	0x4001c1
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x400208, 12 bytes>
0x400208:	lea	rdi, [rip + 0x2ae]
0x40020f:	call	0x500060
<Block for 0x400216, 16 bytes>
0x400216:	add	qword ptr [rbp - 0x50], 1
0x40021b:	mov	rax, qword ptr [rbp - 0x50]
0x40021f:	movzx	eax, byte ptr [rax]
0x400222:	test	al, al
0x400224:	jne	0x4001fd
<Block for 0x4001c1, 3 bytes>
0x4001c1:	nop	
0x4001c2:	jmp	0x4001c5
<Block for 0x400105, 20 bytes>
0x400105:	mov	eax, dword ptr [rbp - 0x60]
0x400108:	mov	edx, 0
0x40010d:	mov	esi, 0
0x400112:	mov	edi, eax
0x400114:	call	0x500040
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500070
<Block for 0x400214, 2 bytes>
0x400214:	jmp	0x400226
<Block for 0x400119, 13 bytes>
0x400119:	mov	dword ptr [rbp - 0x64], eax
0x40011c:	cmp	dword ptr [rbp - 0x64], -1
0x400120:	je	0x4001c4
<Block for 0x400126, 39 bytes>
0x400126:	mov	eax, 0x63
0x40012b:	sub	rax, qword ptr [rbp - 0x30]
0x40012f:	mov	rdx, rax
0x400132:	mov	rcx, qword ptr [rbp - 0x38]
0x400136:	mov	rax, qword ptr [rbp - 0x30]
0x40013a:	lea	rsi, [rcx + rax]
0x40013e:	mov	eax, dword ptr [rbp - 0x64]
0x400141:	mov	ecx, 0
0x400146:	mov	edi, eax
0x400148:	call	0x500048
<Block for 0x4001c4, 1 bytes>
0x4001c4:	nop	
<Block for 0x40014d, 9 bytes>
0x40014d:	mov	dword ptr [rbp - 0x5c], eax
0x400150:	cmp	dword ptr [rbp - 0x5c], -1
0x400154:	je	0x4001c5
<Block for 0x400156, 6 bytes>
0x400156:	cmp	dword ptr [rbp - 0x5c], 0
0x40015a:	je	0x4001c5
<Block for 0x40015c, 40 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x5c]
0x40015f:	movsxd	rdx, eax
0x400162:	mov	rax, qword ptr [rbp - 0x30]
0x400166:	add	rdx, rax
0x400169:	mov	rax, qword ptr [rbp - 0x38]
0x40016d:	add	rax, rdx
0x400170:	mov	byte ptr [rax], 0
0x400173:	mov	rax, qword ptr [rbp - 0x38]
0x400177:	mov	esi, 0xd
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500050
<Block for 0x400184, 11 bytes>
0x400184:	mov	qword ptr [rbp - 0x28], rax
0x400188:	cmp	qword ptr [rbp - 0x28], 0
0x40018d:	je	0x400196
<Block for 0x400196, 17 bytes>
0x400196:	mov	rax, qword ptr [rbp - 0x38]
0x40019a:	mov	esi, 0xa
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500050
<Block for 0x40018f, 24 bytes>
0x40018f:	mov	rax, qword ptr [rbp - 0x28]
0x400193:	mov	byte ptr [rax], 0
0x400196:	mov	rax, qword ptr [rbp - 0x38]
0x40019a:	mov	esi, 0xa
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500050
<Block for 0x4001a7, 11 bytes>
0x4001a7:	mov	qword ptr [rbp - 0x28], rax
0x4001ab:	cmp	qword ptr [rbp - 0x28], 0
0x4001b0:	je	0x4001c5
<Block for 0x4001b2, 9 bytes>
0x4001b2:	mov	rax, qword ptr [rbp - 0x28]
0x4001b6:	mov	byte ptr [rax], 0
0x4001b9:	jmp	0x4001c5
