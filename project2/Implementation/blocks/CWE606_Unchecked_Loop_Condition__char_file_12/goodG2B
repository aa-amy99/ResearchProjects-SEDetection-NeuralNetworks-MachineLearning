<Block for 0x400570, 151 bytes>
0x400570:	endbr64	
0x400574:	push	rbp
0x400575:	mov	rbp, rsp
0x400578:	sub	rsp, 0x90
0x40057f:	mov	rax, qword ptr fs:[0x28]
0x400588:	mov	qword ptr [rbp - 8], rax
0x40058c:	xor	eax, eax
0x40058e:	mov	qword ptr [rbp - 0x70], 0
0x400596:	mov	qword ptr [rbp - 0x68], 0
0x40059e:	mov	qword ptr [rbp - 0x60], 0
0x4005a6:	mov	qword ptr [rbp - 0x58], 0
0x4005ae:	mov	qword ptr [rbp - 0x50], 0
0x4005b6:	mov	qword ptr [rbp - 0x48], 0
0x4005be:	mov	qword ptr [rbp - 0x40], 0
0x4005c6:	mov	qword ptr [rbp - 0x38], 0
0x4005ce:	mov	qword ptr [rbp - 0x30], 0
0x4005d6:	mov	qword ptr [rbp - 0x28], 0
0x4005de:	mov	qword ptr [rbp - 0x20], 0
0x4005e6:	mov	qword ptr [rbp - 0x18], 0
0x4005ee:	mov	dword ptr [rbp - 0x10], 0
0x4005f5:	lea	rax, [rbp - 0x70]
0x4005f9:	mov	qword ptr [rbp - 0x78], rax
0x4005fd:	mov	eax, 0
0x400602:	call	0x500000
<Block for 0x400607, 4 bytes>
0x400607:	test	eax, eax
0x400609:	je	0x40061a
<Block for 0x40061a, 23 bytes>
0x40061a:	mov	rax, qword ptr [rbp - 0x78]
0x40061e:	mov	word ptr [rax], 0x3531
0x400623:	mov	byte ptr [rax + 2], 0
0x400627:	mov	eax, 0
0x40062c:	call	0x500000
<Block for 0x40060b, 15 bytes>
0x40060b:	mov	rax, qword ptr [rbp - 0x78]
0x40060f:	mov	word ptr [rax], 0x3531
0x400614:	mov	byte ptr [rax + 2], 0
0x400618:	jmp	0x400627
<Block for 0x400631, 4 bytes>
0x400631:	test	eax, eax
0x400633:	je	0x40069e
<Block for 0x400627, 10 bytes>
0x400627:	mov	eax, 0
0x40062c:	call	0x500000
<Block for 0x40069e, 31 bytes>
0x40069e:	lea	rdx, [rbp - 0x8c]
0x4006a5:	mov	rax, qword ptr [rbp - 0x78]
0x4006a9:	lea	rsi, [rip + 0x94]
0x4006b0:	mov	rdi, rax
0x4006b3:	mov	eax, 0
0x4006b8:	call	0x500030
<Block for 0x400635, 31 bytes>
0x400635:	lea	rdx, [rbp - 0x8c]
0x40063c:	mov	rax, qword ptr [rbp - 0x78]
0x400640:	lea	rsi, [rip + 0xfd]
0x400647:	mov	rdi, rax
0x40064a:	mov	eax, 0
0x40064f:	call	0x500030
<Block for 0x4006bd, 5 bytes>
0x4006bd:	cmp	eax, 1
0x4006c0:	jne	0x4006ef
<Block for 0x400654, 9 bytes>
0x400654:	cmp	eax, 1
0x400657:	jne	0x4006ef
<Block for 0x4006c2, 16 bytes>
0x4006c2:	mov	dword ptr [rbp - 0x7c], 0
0x4006c9:	mov	dword ptr [rbp - 0x80], 0
0x4006d0:	jmp	0x4006da
<Block for 0x4006ef, 16 bytes>
0x4006ef:	nop	
0x4006f0:	mov	rax, qword ptr [rbp - 8]
0x4006f4:	xor	rax, qword ptr fs:[0x28]
0x4006fd:	je	0x400704
<Block for 0x40065d, 22 bytes>
0x40065d:	mov	dword ptr [rbp - 0x84], 0
0x400667:	mov	dword ptr [rbp - 0x88], 0
0x400671:	jmp	0x400681
<Block for 0x4006da, 11 bytes>
0x4006da:	mov	eax, dword ptr [rbp - 0x8c]
0x4006e0:	cmp	dword ptr [rbp - 0x80], eax
0x4006e3:	jl	0x4006d2
<Block for 0x400704, 2 bytes>
0x400704:	leave	
0x400705:	ret	
<Block for 0x4006ff, 5 bytes>
0x4006ff:	call	0x500040
<Block for 0x400681, 14 bytes>
0x400681:	mov	eax, dword ptr [rbp - 0x8c]
0x400687:	cmp	dword ptr [rbp - 0x88], eax
0x40068d:	jl	0x400673
<Block for 0x4006d2, 19 bytes>
0x4006d2:	add	dword ptr [rbp - 0x7c], 1
0x4006d6:	add	dword ptr [rbp - 0x80], 1
0x4006da:	mov	eax, dword ptr [rbp - 0x8c]
0x4006e0:	cmp	dword ptr [rbp - 0x80], eax
0x4006e3:	jl	0x4006d2
<Block for 0x4006e5, 10 bytes>
0x4006e5:	mov	eax, dword ptr [rbp - 0x7c]
0x4006e8:	mov	edi, eax
0x4006ea:	call	0x500038
<Block for 0x400673, 28 bytes>
0x400673:	add	dword ptr [rbp - 0x84], 1
0x40067a:	add	dword ptr [rbp - 0x88], 1
0x400681:	mov	eax, dword ptr [rbp - 0x8c]
0x400687:	cmp	dword ptr [rbp - 0x88], eax
0x40068d:	jl	0x400673
<Block for 0x40068f, 13 bytes>
0x40068f:	mov	eax, dword ptr [rbp - 0x84]
0x400695:	mov	edi, eax
0x400697:	call	0x500038
<Block for 0x40069c, 2 bytes>
0x40069c:	jmp	0x4006ef
