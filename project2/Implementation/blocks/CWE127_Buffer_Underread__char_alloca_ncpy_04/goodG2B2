<Block for 0x40027c, 81 bytes>
0x40027c:	endbr64	
0x400280:	push	rbp
0x400281:	mov	rbp, rsp
0x400284:	add	rsp, -0x80
0x400288:	mov	rax, qword ptr fs:[0x28]
0x400291:	mov	qword ptr [rbp - 8], rax
0x400295:	xor	eax, eax
0x400297:	mov	eax, 0x10
0x40029c:	sub	rax, 1
0x4002a0:	add	rax, 0x6c
0x4002a4:	mov	esi, 0x10
0x4002a9:	mov	edx, 0
0x4002ae:	div	rsi
0x4002b1:	imul	rax, rax, 0x10
0x4002b5:	mov	rdx, rax
0x4002b8:	and	rdx, 0xfffffffffffff000
0x4002bf:	mov	rcx, rsp
0x4002c2:	sub	rcx, rdx
0x4002c5:	mov	rdx, rcx
0x4002c8:	cmp	rsp, rdx
0x4002cb:	je	0x4002df
<Block for 0x4002df, 26 bytes>
0x4002df:	mov	rdx, rax
0x4002e2:	and	edx, 0xfff
0x4002e8:	sub	rsp, rdx
0x4002eb:	mov	rdx, rax
0x4002ee:	and	edx, 0xfff
0x4002f4:	test	rdx, rdx
0x4002f7:	je	0x400309
<Block for 0x4002cd, 18 bytes>
0x4002cd:	sub	rsp, 0x1000
0x4002d4:	or	qword ptr [rsp + 0xff8], 0
0x4002dd:	jmp	0x4002c8
<Block for 0x400309, 41 bytes>
0x400309:	mov	rax, rsp
0x40030c:	add	rax, 0xf
0x400310:	shr	rax, 4
0x400314:	shl	rax, 4
0x400318:	mov	qword ptr [rbp - 0x78], rax
0x40031c:	mov	rax, qword ptr [rbp - 0x78]
0x400320:	mov	edx, 0x63
0x400325:	mov	esi, 0x41
0x40032a:	mov	rdi, rax
0x40032d:	call	0x500000
<Block for 0x4002f9, 57 bytes>
0x4002f9:	and	eax, 0xfff
0x4002fe:	sub	rax, 8
0x400302:	add	rax, rsp
0x400305:	or	qword ptr [rax], 0
0x400309:	mov	rax, rsp
0x40030c:	add	rax, 0xf
0x400310:	shr	rax, 4
0x400314:	shl	rax, 4
0x400318:	mov	qword ptr [rbp - 0x78], rax
0x40031c:	mov	rax, qword ptr [rbp - 0x78]
0x400320:	mov	edx, 0x63
0x400325:	mov	esi, 0x41
0x40032a:	mov	rdi, rax
0x40032d:	call	0x500000
<Block for 0x4002c8, 5 bytes>
0x4002c8:	cmp	rsp, rdx
0x4002cb:	je	0x4002df
<Block for 0x400332, 20 bytes>
0x400332:	mov	rax, qword ptr [rbp - 0x78]
0x400336:	add	rax, 0x63
0x40033a:	mov	byte ptr [rax], 0
0x40033d:	mov	eax, 1
0x400342:	test	eax, eax
0x400344:	je	0x40034e
<Block for 0x40034e, 22 bytes>
0x40034e:	lea	rax, [rbp - 0x70]
0x400352:	mov	edx, 0x63
0x400357:	mov	esi, 0x43
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500000
<Block for 0x400346, 30 bytes>
0x400346:	mov	rax, qword ptr [rbp - 0x78]
0x40034a:	mov	qword ptr [rbp - 0x80], rax
0x40034e:	lea	rax, [rbp - 0x70]
0x400352:	mov	edx, 0x63
0x400357:	mov	esi, 0x43
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500000
<Block for 0x400364, 16 bytes>
0x400364:	mov	byte ptr [rbp - 0xd], 0
0x400368:	lea	rax, [rbp - 0x70]
0x40036c:	mov	rdi, rax
0x40036f:	call	0x500008
<Block for 0x400374, 22 bytes>
0x400374:	mov	rdx, rax
0x400377:	mov	rcx, qword ptr [rbp - 0x80]
0x40037b:	lea	rax, [rbp - 0x70]
0x40037f:	mov	rsi, rcx
0x400382:	mov	rdi, rax
0x400385:	call	0x500010
<Block for 0x40038a, 16 bytes>
0x40038a:	mov	byte ptr [rbp - 0xd], 0
0x40038e:	lea	rax, [rbp - 0x70]
0x400392:	mov	rdi, rax
0x400395:	call	0x500018
<Block for 0x40039a, 16 bytes>
0x40039a:	nop	
0x40039b:	mov	rax, qword ptr [rbp - 8]
0x40039f:	xor	rax, qword ptr fs:[0x28]
0x4003a8:	je	0x4003af
<Block for 0x4003af, 2 bytes>
0x4003af:	leave	
0x4003b0:	ret	
<Block for 0x4003aa, 5 bytes>
0x4003aa:	call	0x500020
