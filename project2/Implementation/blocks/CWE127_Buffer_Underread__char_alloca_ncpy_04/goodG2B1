<Block for 0x400139, 81 bytes>
0x400139:	endbr64	
0x40013d:	push	rbp
0x40013e:	mov	rbp, rsp
0x400141:	add	rsp, -0x80
0x400145:	mov	rax, qword ptr fs:[0x28]
0x40014e:	mov	qword ptr [rbp - 8], rax
0x400152:	xor	eax, eax
0x400154:	mov	eax, 0x10
0x400159:	sub	rax, 1
0x40015d:	add	rax, 0x6c
0x400161:	mov	esi, 0x10
0x400166:	mov	edx, 0
0x40016b:	div	rsi
0x40016e:	imul	rax, rax, 0x10
0x400172:	mov	rdx, rax
0x400175:	and	rdx, 0xfffffffffffff000
0x40017c:	mov	rcx, rsp
0x40017f:	sub	rcx, rdx
0x400182:	mov	rdx, rcx
0x400185:	cmp	rsp, rdx
0x400188:	je	0x40019c
<Block for 0x40019c, 26 bytes>
0x40019c:	mov	rdx, rax
0x40019f:	and	edx, 0xfff
0x4001a5:	sub	rsp, rdx
0x4001a8:	mov	rdx, rax
0x4001ab:	and	edx, 0xfff
0x4001b1:	test	rdx, rdx
0x4001b4:	je	0x4001c6
<Block for 0x40018a, 18 bytes>
0x40018a:	sub	rsp, 0x1000
0x400191:	or	qword ptr [rsp + 0xff8], 0
0x40019a:	jmp	0x400185
<Block for 0x4001c6, 41 bytes>
0x4001c6:	mov	rax, rsp
0x4001c9:	add	rax, 0xf
0x4001cd:	shr	rax, 4
0x4001d1:	shl	rax, 4
0x4001d5:	mov	qword ptr [rbp - 0x78], rax
0x4001d9:	mov	rax, qword ptr [rbp - 0x78]
0x4001dd:	mov	edx, 0x63
0x4001e2:	mov	esi, 0x41
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500000
<Block for 0x4001b6, 57 bytes>
0x4001b6:	and	eax, 0xfff
0x4001bb:	sub	rax, 8
0x4001bf:	add	rax, rsp
0x4001c2:	or	qword ptr [rax], 0
0x4001c6:	mov	rax, rsp
0x4001c9:	add	rax, 0xf
0x4001cd:	shr	rax, 4
0x4001d1:	shl	rax, 4
0x4001d5:	mov	qword ptr [rbp - 0x78], rax
0x4001d9:	mov	rax, qword ptr [rbp - 0x78]
0x4001dd:	mov	edx, 0x63
0x4001e2:	mov	esi, 0x41
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500000
<Block for 0x400185, 5 bytes>
0x400185:	cmp	rsp, rdx
0x400188:	je	0x40019c
<Block for 0x4001ef, 20 bytes>
0x4001ef:	mov	rax, qword ptr [rbp - 0x78]
0x4001f3:	add	rax, 0x63
0x4001f7:	mov	byte ptr [rax], 0
0x4001fa:	mov	eax, 0
0x4001ff:	test	eax, eax
0x400201:	je	0x400211
<Block for 0x400211, 30 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x78]
0x400215:	mov	qword ptr [rbp - 0x80], rax
0x400219:	lea	rax, [rbp - 0x70]
0x40021d:	mov	edx, 0x63
0x400222:	mov	esi, 0x43
0x400227:	mov	rdi, rax
0x40022a:	call	0x500000
<Block for 0x400203, 12 bytes>
0x400203:	lea	rdi, [rip + 0x1ce]
0x40020a:	call	0x500018
<Block for 0x40022f, 16 bytes>
0x40022f:	mov	byte ptr [rbp - 0xd], 0
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	rdi, rax
0x40023a:	call	0x500008
<Block for 0x40020f, 2 bytes>
0x40020f:	jmp	0x400219
<Block for 0x40023f, 22 bytes>
0x40023f:	mov	rdx, rax
0x400242:	mov	rcx, qword ptr [rbp - 0x80]
0x400246:	lea	rax, [rbp - 0x70]
0x40024a:	mov	rsi, rcx
0x40024d:	mov	rdi, rax
0x400250:	call	0x500010
<Block for 0x400219, 22 bytes>
0x400219:	lea	rax, [rbp - 0x70]
0x40021d:	mov	edx, 0x63
0x400222:	mov	esi, 0x43
0x400227:	mov	rdi, rax
0x40022a:	call	0x500000
<Block for 0x400255, 16 bytes>
0x400255:	mov	byte ptr [rbp - 0xd], 0
0x400259:	lea	rax, [rbp - 0x70]
0x40025d:	mov	rdi, rax
0x400260:	call	0x500018
<Block for 0x400265, 16 bytes>
0x400265:	nop	
0x400266:	mov	rax, qword ptr [rbp - 8]
0x40026a:	xor	rax, qword ptr fs:[0x28]
0x400273:	je	0x40027a
<Block for 0x40027a, 2 bytes>
0x40027a:	leave	
0x40027b:	ret	
<Block for 0x400275, 5 bytes>
0x400275:	call	0x500020
