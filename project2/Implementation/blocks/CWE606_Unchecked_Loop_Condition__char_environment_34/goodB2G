<Block for 0x4002a9, 159 bytes>
0x4002a9:	endbr64	
0x4002ad:	push	rbp
0x4002ae:	mov	rbp, rsp
0x4002b1:	sub	rsp, 0xb0
0x4002b8:	mov	rax, qword ptr fs:[0x28]
0x4002c1:	mov	qword ptr [rbp - 8], rax
0x4002c5:	xor	eax, eax
0x4002c7:	mov	qword ptr [rbp - 0x70], 0
0x4002cf:	mov	qword ptr [rbp - 0x68], 0
0x4002d7:	mov	qword ptr [rbp - 0x60], 0
0x4002df:	mov	qword ptr [rbp - 0x58], 0
0x4002e7:	mov	qword ptr [rbp - 0x50], 0
0x4002ef:	mov	qword ptr [rbp - 0x48], 0
0x4002f7:	mov	qword ptr [rbp - 0x40], 0
0x4002ff:	mov	qword ptr [rbp - 0x38], 0
0x400307:	mov	qword ptr [rbp - 0x30], 0
0x40030f:	mov	qword ptr [rbp - 0x28], 0
0x400317:	mov	qword ptr [rbp - 0x20], 0
0x40031f:	mov	qword ptr [rbp - 0x18], 0
0x400327:	mov	dword ptr [rbp - 0x10], 0
0x40032e:	lea	rax, [rbp - 0x70]
0x400332:	mov	qword ptr [rbp - 0x90], rax
0x400339:	mov	rax, qword ptr [rbp - 0x90]
0x400340:	mov	rdi, rax
0x400343:	call	0x500000
<Block for 0x400348, 19 bytes>
0x400348:	mov	qword ptr [rbp - 0x88], rax
0x40034f:	lea	rdi, [rip + 0xfe]
0x400356:	call	0x500008
<Block for 0x40035b, 11 bytes>
0x40035b:	mov	qword ptr [rbp - 0x80], rax
0x40035f:	cmp	qword ptr [rbp - 0x80], 0
0x400364:	je	0x400395
<Block for 0x400395, 56 bytes>
0x400395:	mov	rax, qword ptr [rbp - 0x90]
0x40039c:	mov	qword ptr [rbp - 0x98], rax
0x4003a3:	mov	rax, qword ptr [rbp - 0x98]
0x4003aa:	mov	qword ptr [rbp - 0x78], rax
0x4003ae:	lea	rdx, [rbp - 0xa4]
0x4003b5:	mov	rax, qword ptr [rbp - 0x78]
0x4003b9:	lea	rsi, [rip + 0x98]
0x4003c0:	mov	rdi, rax
0x4003c3:	mov	eax, 0
0x4003c8:	call	0x500018
<Block for 0x400366, 47 bytes>
0x400366:	mov	eax, 0x63
0x40036b:	sub	rax, qword ptr [rbp - 0x88]
0x400372:	mov	rdx, rax
0x400375:	mov	rcx, qword ptr [rbp - 0x90]
0x40037c:	mov	rax, qword ptr [rbp - 0x88]
0x400383:	add	rcx, rax
0x400386:	mov	rax, qword ptr [rbp - 0x80]
0x40038a:	mov	rsi, rax
0x40038d:	mov	rdi, rcx
0x400390:	call	0x500010
<Block for 0x4003cd, 5 bytes>
0x4003cd:	cmp	eax, 1
0x4003d0:	jne	0x40041e
<Block for 0x4003d2, 13 bytes>
0x4003d2:	mov	eax, dword ptr [rbp - 0xa4]
0x4003d8:	cmp	eax, 0x270f
0x4003dd:	jg	0x40041e
<Block for 0x40041e, 16 bytes>
0x40041e:	nop	
0x40041f:	mov	rax, qword ptr [rbp - 8]
0x400423:	xor	rax, qword ptr fs:[0x28]
0x40042c:	je	0x400433
<Block for 0x4003df, 22 bytes>
0x4003df:	mov	dword ptr [rbp - 0x9c], 0
0x4003e9:	mov	dword ptr [rbp - 0xa0], 0
0x4003f3:	jmp	0x400403
<Block for 0x400433, 2 bytes>
0x400433:	leave	
0x400434:	ret	
<Block for 0x40042e, 5 bytes>
0x40042e:	call	0x500028
<Block for 0x400403, 14 bytes>
0x400403:	mov	eax, dword ptr [rbp - 0xa4]
0x400409:	cmp	dword ptr [rbp - 0xa0], eax
0x40040f:	jl	0x4003f5
<Block for 0x4003f5, 28 bytes>
0x4003f5:	add	dword ptr [rbp - 0x9c], 1
0x4003fc:	add	dword ptr [rbp - 0xa0], 1
0x400403:	mov	eax, dword ptr [rbp - 0xa4]
0x400409:	cmp	dword ptr [rbp - 0xa0], eax
0x40040f:	jl	0x4003f5
<Block for 0x400411, 13 bytes>
0x400411:	mov	eax, dword ptr [rbp - 0x9c]
0x400417:	mov	edi, eax
0x400419:	call	0x500020
