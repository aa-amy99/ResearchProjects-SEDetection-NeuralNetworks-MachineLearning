<Block for 0x400100, 69 bytes>
0x400100:	endbr64	
0x400104:	push	rbp
0x400105:	mov	rbp, rsp
0x400108:	sub	rsp, 0xe0
0x40010f:	mov	rax, qword ptr fs:[0x28]
0x400118:	mov	qword ptr [rbp - 8], rax
0x40011c:	xor	eax, eax
0x40011e:	mov	rax, qword ptr [rip + 0xfb]
0x400125:	mov	qword ptr [rbp - 0xd8], rax
0x40012c:	lea	rax, [rbp - 0xd0]
0x400133:	mov	edx, 0xc7
0x400138:	mov	esi, 0x43
0x40013d:	mov	rdi, rax
0x400140:	call	0x500000
<Block for 0x400145, 29 bytes>
0x400145:	mov	byte ptr [rbp - 9], 0
0x400149:	mov	rdx, qword ptr [rbp - 0xd8]
0x400150:	lea	rax, [rbp - 0xd0]
0x400157:	mov	rsi, rdx
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500008
<Block for 0x400162, 15 bytes>
0x400162:	lea	rax, [rbp - 0xd0]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500010
<Block for 0x400171, 16 bytes>
0x400171:	nop	
0x400172:	mov	rax, qword ptr [rbp - 8]
0x400176:	xor	rax, qword ptr fs:[0x28]
0x40017f:	je	0x400186
<Block for 0x400186, 2 bytes>
0x400186:	leave	
0x400187:	ret	
<Block for 0x400181, 5 bytes>
0x400181:	call	0x500018
