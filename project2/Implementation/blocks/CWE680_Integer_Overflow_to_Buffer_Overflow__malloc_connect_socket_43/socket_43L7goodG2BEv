<Block for 0x4001e0, 46 bytes>
0x4001e0:	endbr64	
0x4001e4:	push	rbp
0x4001e5:	mov	rbp, rsp
0x4001e8:	sub	rsp, 0x20
0x4001ec:	mov	rax, qword ptr fs:[0x28]
0x4001f5:	mov	qword ptr [rbp - 8], rax
0x4001f9:	xor	eax, eax
0x4001fb:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400202:	lea	rax, [rbp - 0x1c]
0x400206:	mov	rdi, rax
0x400209:	call	0x4001c7
<Block for 0x40020e, 17 bytes>
0x40020e:	mov	eax, dword ptr [rbp - 0x1c]
0x400211:	cdqe	
0x400213:	shl	rax, 2
0x400217:	mov	rdi, rax
0x40021a:	call	0x500048
<Block for 0x40021f, 11 bytes>
0x40021f:	mov	qword ptr [rbp - 0x10], rax
0x400223:	cmp	qword ptr [rbp - 0x10], 0
0x400228:	jne	0x400234
<Block for 0x40022a, 10 bytes>
0x40022a:	mov	edi, 0xffffffff
0x40022f:	call	0x500050
<Block for 0x400234, 19 bytes>
0x400234:	mov	qword ptr [rbp - 0x18], 0
0x40023c:	mov	eax, dword ptr [rbp - 0x1c]
0x40023f:	cdqe	
0x400241:	cmp	qword ptr [rbp - 0x18], rax
0x400245:	jae	0x400267
<Block for 0x400247, 32 bytes>
0x400247:	mov	rax, qword ptr [rbp - 0x18]
0x40024b:	lea	rdx, [rax*4]
0x400253:	mov	rax, qword ptr [rbp - 0x10]
0x400257:	add	rax, rdx
0x40025a:	mov	dword ptr [rax], 0
0x400260:	add	qword ptr [rbp - 0x18], 1
0x400265:	jmp	0x40023c
<Block for 0x400267, 13 bytes>
0x400267:	mov	rax, qword ptr [rbp - 0x10]
0x40026b:	mov	eax, dword ptr [rax]
0x40026d:	mov	edi, eax
0x40026f:	call	0x500058
<Block for 0x40023c, 11 bytes>
0x40023c:	mov	eax, dword ptr [rbp - 0x1c]
0x40023f:	cdqe	
0x400241:	cmp	qword ptr [rbp - 0x18], rax
0x400245:	jae	0x400267
<Block for 0x400274, 12 bytes>
0x400274:	mov	rax, qword ptr [rbp - 0x10]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500060
<Block for 0x400280, 16 bytes>
0x400280:	nop	
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	xor	rax, qword ptr fs:[0x28]
0x40028e:	je	0x400295
<Block for 0x400295, 2 bytes>
0x400295:	leave	
0x400296:	ret	
<Block for 0x400290, 5 bytes>
0x400290:	call	0x500040
