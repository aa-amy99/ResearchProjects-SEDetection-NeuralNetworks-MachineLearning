<Block for 0x400158, 52 bytes>
0x400158:	endbr64	
0x40015c:	push	rbp
0x40015d:	mov	rbp, rsp
0x400160:	push	rbx
0x400161:	sub	rsp, 0x88
0x400168:	mov	rax, qword ptr fs:[0x28]
0x400171:	mov	qword ptr [rbp - 0x18], rax
0x400175:	xor	eax, eax
0x400177:	mov	qword ptr [rbp - 0x90], 0
0x400182:	mov	eax, 0
0x400187:	call	0x500030
<Block for 0x40018c, 4 bytes>
0x40018c:	test	eax, eax
0x40018e:	je	0x40019e
<Block for 0x40019e, 10 bytes>
0x40019e:	mov	edi, 0x64
0x4001a3:	call	0x500008
<Block for 0x400190, 12 bytes>
0x400190:	lea	rdi, [rip + 0x296]
0x400197:	call	0x500020
<Block for 0x4001a8, 17 bytes>
0x4001a8:	mov	qword ptr [rbp - 0x88], rax
0x4001af:	cmp	qword ptr [rbp - 0x88], 0
0x4001b7:	jne	0x4001c3
<Block for 0x40019c, 2 bytes>
0x40019c:	jmp	0x4001f8
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	edi, 0xffffffff
0x4001be:	call	0x500010
<Block for 0x4001c3, 25 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x88]
0x4001ca:	mov	edx, 0x63
0x4001cf:	mov	esi, 0x41
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x500018
<Block for 0x4001f8, 22 bytes>
0x4001f8:	lea	rax, [rbp - 0x80]
0x4001fc:	mov	edx, 0x63
0x400201:	mov	esi, 0x43
0x400206:	mov	rdi, rax
0x400209:	call	0x500018
<Block for 0x4001dc, 50 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 0x88]
0x4001e3:	add	rax, 0x63
0x4001e7:	mov	byte ptr [rax], 0
0x4001ea:	mov	rax, qword ptr [rbp - 0x88]
0x4001f1:	mov	qword ptr [rbp - 0x90], rax
0x4001f8:	lea	rax, [rbp - 0x80]
0x4001fc:	mov	edx, 0x63
0x400201:	mov	esi, 0x43
0x400206:	mov	rdi, rax
0x400209:	call	0x500018
<Block for 0x40020e, 141 bytes>
0x40020e:	mov	byte ptr [rbp - 0x1d], 0
0x400212:	mov	rax, qword ptr [rbp - 0x90]
0x400219:	mov	rcx, qword ptr [rbp - 0x80]
0x40021d:	mov	rbx, qword ptr [rbp - 0x78]
0x400221:	mov	qword ptr [rax], rcx
0x400224:	mov	qword ptr [rax + 8], rbx
0x400228:	mov	rcx, qword ptr [rbp - 0x70]
0x40022c:	mov	rbx, qword ptr [rbp - 0x68]
0x400230:	mov	qword ptr [rax + 0x10], rcx
0x400234:	mov	qword ptr [rax + 0x18], rbx
0x400238:	mov	rcx, qword ptr [rbp - 0x60]
0x40023c:	mov	rbx, qword ptr [rbp - 0x58]
0x400240:	mov	qword ptr [rax + 0x20], rcx
0x400244:	mov	qword ptr [rax + 0x28], rbx
0x400248:	mov	rcx, qword ptr [rbp - 0x50]
0x40024c:	mov	rbx, qword ptr [rbp - 0x48]
0x400250:	mov	qword ptr [rax + 0x30], rcx
0x400254:	mov	qword ptr [rax + 0x38], rbx
0x400258:	mov	rcx, qword ptr [rbp - 0x40]
0x40025c:	mov	rbx, qword ptr [rbp - 0x38]
0x400260:	mov	qword ptr [rax + 0x40], rcx
0x400264:	mov	qword ptr [rax + 0x48], rbx
0x400268:	mov	rcx, qword ptr [rbp - 0x30]
0x40026c:	mov	rbx, qword ptr [rbp - 0x28]
0x400270:	mov	qword ptr [rax + 0x50], rcx
0x400274:	mov	qword ptr [rax + 0x58], rbx
0x400278:	mov	edx, dword ptr [rbp - 0x20]
0x40027b:	mov	dword ptr [rax + 0x60], edx
0x40027e:	mov	rax, qword ptr [rbp - 0x90]
0x400285:	add	rax, 0x63
0x400289:	mov	byte ptr [rax], 0
0x40028c:	mov	rax, qword ptr [rbp - 0x90]
0x400293:	mov	rdi, rax
0x400296:	call	0x500020
<Block for 0x40029b, 16 bytes>
0x40029b:	nop	
0x40029c:	mov	rax, qword ptr [rbp - 0x18]
0x4002a0:	xor	rax, qword ptr fs:[0x28]
0x4002a9:	je	0x4002b0
<Block for 0x4002b0, 10 bytes>
0x4002b0:	add	rsp, 0x88
0x4002b7:	pop	rbx
0x4002b8:	pop	rbp
0x4002b9:	ret	
<Block for 0x4002ab, 5 bytes>
0x4002ab:	call	0x500028
