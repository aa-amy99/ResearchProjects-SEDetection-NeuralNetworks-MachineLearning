<Block for 0x4002ba, 52 bytes>
0x4002ba:	endbr64	
0x4002be:	push	rbp
0x4002bf:	mov	rbp, rsp
0x4002c2:	push	rbx
0x4002c3:	sub	rsp, 0x88
0x4002ca:	mov	rax, qword ptr fs:[0x28]
0x4002d3:	mov	qword ptr [rbp - 0x18], rax
0x4002d7:	xor	eax, eax
0x4002d9:	mov	qword ptr [rbp - 0x90], 0
0x4002e4:	mov	eax, 0
0x4002e9:	call	0x500000
<Block for 0x4002ee, 4 bytes>
0x4002ee:	test	eax, eax
0x4002f0:	je	0x40034c
<Block for 0x40034c, 22 bytes>
0x40034c:	lea	rax, [rbp - 0x80]
0x400350:	mov	edx, 0x63
0x400355:	mov	esi, 0x43
0x40035a:	mov	rdi, rax
0x40035d:	call	0x500018
<Block for 0x4002f2, 10 bytes>
0x4002f2:	mov	edi, 0x64
0x4002f7:	call	0x500008
<Block for 0x400362, 141 bytes>
0x400362:	mov	byte ptr [rbp - 0x1d], 0
0x400366:	mov	rax, qword ptr [rbp - 0x90]
0x40036d:	mov	rcx, qword ptr [rbp - 0x80]
0x400371:	mov	rbx, qword ptr [rbp - 0x78]
0x400375:	mov	qword ptr [rax], rcx
0x400378:	mov	qword ptr [rax + 8], rbx
0x40037c:	mov	rcx, qword ptr [rbp - 0x70]
0x400380:	mov	rbx, qword ptr [rbp - 0x68]
0x400384:	mov	qword ptr [rax + 0x10], rcx
0x400388:	mov	qword ptr [rax + 0x18], rbx
0x40038c:	mov	rcx, qword ptr [rbp - 0x60]
0x400390:	mov	rbx, qword ptr [rbp - 0x58]
0x400394:	mov	qword ptr [rax + 0x20], rcx
0x400398:	mov	qword ptr [rax + 0x28], rbx
0x40039c:	mov	rcx, qword ptr [rbp - 0x50]
0x4003a0:	mov	rbx, qword ptr [rbp - 0x48]
0x4003a4:	mov	qword ptr [rax + 0x30], rcx
0x4003a8:	mov	qword ptr [rax + 0x38], rbx
0x4003ac:	mov	rcx, qword ptr [rbp - 0x40]
0x4003b0:	mov	rbx, qword ptr [rbp - 0x38]
0x4003b4:	mov	qword ptr [rax + 0x40], rcx
0x4003b8:	mov	qword ptr [rax + 0x48], rbx
0x4003bc:	mov	rcx, qword ptr [rbp - 0x30]
0x4003c0:	mov	rbx, qword ptr [rbp - 0x28]
0x4003c4:	mov	qword ptr [rax + 0x50], rcx
0x4003c8:	mov	qword ptr [rax + 0x58], rbx
0x4003cc:	mov	edx, dword ptr [rbp - 0x20]
0x4003cf:	mov	dword ptr [rax + 0x60], edx
0x4003d2:	mov	rax, qword ptr [rbp - 0x90]
0x4003d9:	add	rax, 0x63
0x4003dd:	mov	byte ptr [rax], 0
0x4003e0:	mov	rax, qword ptr [rbp - 0x90]
0x4003e7:	mov	rdi, rax
0x4003ea:	call	0x500020
<Block for 0x4002fc, 17 bytes>
0x4002fc:	mov	qword ptr [rbp - 0x88], rax
0x400303:	cmp	qword ptr [rbp - 0x88], 0
0x40030b:	jne	0x400317
<Block for 0x4003ef, 16 bytes>
0x4003ef:	nop	
0x4003f0:	mov	rax, qword ptr [rbp - 0x18]
0x4003f4:	xor	rax, qword ptr fs:[0x28]
0x4003fd:	je	0x400404
<Block for 0x40030d, 10 bytes>
0x40030d:	mov	edi, 0xffffffff
0x400312:	call	0x500010
<Block for 0x400317, 25 bytes>
0x400317:	mov	rax, qword ptr [rbp - 0x88]
0x40031e:	mov	edx, 0x63
0x400323:	mov	esi, 0x41
0x400328:	mov	rdi, rax
0x40032b:	call	0x500018
<Block for 0x400404, 10 bytes>
0x400404:	add	rsp, 0x88
0x40040b:	pop	rbx
0x40040c:	pop	rbp
0x40040d:	ret	
<Block for 0x4003ff, 5 bytes>
0x4003ff:	call	0x500028
<Block for 0x400330, 50 bytes>
0x400330:	mov	rax, qword ptr [rbp - 0x88]
0x400337:	add	rax, 0x63
0x40033b:	mov	byte ptr [rax], 0
0x40033e:	mov	rax, qword ptr [rbp - 0x88]
0x400345:	mov	qword ptr [rbp - 0x90], rax
0x40034c:	lea	rax, [rbp - 0x80]
0x400350:	mov	edx, 0x63
0x400355:	mov	esi, 0x43
0x40035a:	mov	rdi, rax
0x40035d:	call	0x500018
