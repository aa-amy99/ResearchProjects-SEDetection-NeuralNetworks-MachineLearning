<Block for 0x400088, 159 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x90
0x400097:	mov	rax, qword ptr fs:[0x28]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	xor	eax, eax
0x4000a6:	mov	qword ptr [rbp - 0x70], 0
0x4000ae:	mov	qword ptr [rbp - 0x68], 0
0x4000b6:	mov	qword ptr [rbp - 0x60], 0
0x4000be:	mov	qword ptr [rbp - 0x58], 0
0x4000c6:	mov	qword ptr [rbp - 0x50], 0
0x4000ce:	mov	qword ptr [rbp - 0x48], 0
0x4000d6:	mov	qword ptr [rbp - 0x40], 0
0x4000de:	mov	qword ptr [rbp - 0x38], 0
0x4000e6:	mov	qword ptr [rbp - 0x30], 0
0x4000ee:	mov	qword ptr [rbp - 0x28], 0
0x4000f6:	mov	qword ptr [rbp - 0x20], 0
0x4000fe:	mov	qword ptr [rbp - 0x18], 0
0x400106:	mov	dword ptr [rbp - 0x10], 0
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	qword ptr [rbp - 0x88], rax
0x400118:	mov	rax, qword ptr [rbp - 0x88]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500018
<Block for 0x400127, 16 bytes>
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	lea	rdi, [rip + 0x391]
0x400132:	call	0x500020
<Block for 0x400137, 11 bytes>
0x400137:	mov	qword ptr [rbp - 0x78], rax
0x40013b:	cmp	qword ptr [rbp - 0x78], 0
0x400140:	je	0x40016b
<Block for 0x40016b, 24 bytes>
0x40016b:	mov	rax, qword ptr [rbp - 0x88]
0x400172:	mov	qword ptr [rip + 0x32f], rax
0x400179:	mov	eax, 0
0x40017e:	call	0x400000
<Block for 0x400142, 41 bytes>
0x400142:	mov	eax, 0x63
0x400147:	sub	rax, qword ptr [rbp - 0x80]
0x40014b:	mov	rdx, rax
0x40014e:	mov	rcx, qword ptr [rbp - 0x88]
0x400155:	mov	rax, qword ptr [rbp - 0x80]
0x400159:	add	rcx, rax
0x40015c:	mov	rax, qword ptr [rbp - 0x78]
0x400160:	mov	rsi, rax
0x400163:	mov	rdi, rcx
0x400166:	call	0x500028
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500010
