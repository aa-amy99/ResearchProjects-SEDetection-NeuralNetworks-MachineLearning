<Block for 0x40019a, 66 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	sub	rsp, 0x20
0x4001a6:	mov	rax, qword ptr fs:[0x28]
0x4001af:	mov	qword ptr [rbp - 8], rax
0x4001b3:	xor	eax, eax
0x4001b5:	mov	rax, qword ptr [rip + 0x2f4]
0x4001bc:	mov	qword ptr [rbp - 0x10], rax
0x4001c0:	lea	rdx, [rbp - 0x1c]
0x4001c4:	mov	rax, qword ptr [rbp - 0x10]
0x4001c8:	lea	rsi, [rip + 0x2f1]
0x4001cf:	mov	rdi, rax
0x4001d2:	mov	eax, 0
0x4001d7:	call	0x500000
<Block for 0x4001dc, 5 bytes>
0x4001dc:	cmp	eax, 1
0x4001df:	jne	0x40020b
<Block for 0x4001e1, 16 bytes>
0x4001e1:	mov	dword ptr [rbp - 0x14], 0
0x4001e8:	mov	dword ptr [rbp - 0x18], 0
0x4001ef:	jmp	0x4001f9
<Block for 0x40020b, 16 bytes>
0x40020b:	nop	
0x40020c:	mov	rax, qword ptr [rbp - 8]
0x400210:	xor	rax, qword ptr fs:[0x28]
0x400219:	je	0x400220
<Block for 0x4001f9, 8 bytes>
0x4001f9:	mov	eax, dword ptr [rbp - 0x1c]
0x4001fc:	cmp	dword ptr [rbp - 0x18], eax
0x4001ff:	jl	0x4001f1
<Block for 0x400220, 2 bytes>
0x400220:	leave	
0x400221:	ret	
<Block for 0x40021b, 5 bytes>
0x40021b:	call	0x500010
<Block for 0x4001f1, 16 bytes>
0x4001f1:	add	dword ptr [rbp - 0x14], 1
0x4001f5:	add	dword ptr [rbp - 0x18], 1
0x4001f9:	mov	eax, dword ptr [rbp - 0x1c]
0x4001fc:	cmp	dword ptr [rbp - 0x18], eax
0x4001ff:	jl	0x4001f1
<Block for 0x400201, 10 bytes>
0x400201:	mov	eax, dword ptr [rbp - 0x14]
0x400204:	mov	edi, eax
0x400206:	call	0x500008
