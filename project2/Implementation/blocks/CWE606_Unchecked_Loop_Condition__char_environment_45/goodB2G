<Block for 0x400377, 159 bytes>
0x400377:	endbr64	
0x40037b:	push	rbp
0x40037c:	mov	rbp, rsp
0x40037f:	sub	rsp, 0x90
0x400386:	mov	rax, qword ptr fs:[0x28]
0x40038f:	mov	qword ptr [rbp - 8], rax
0x400393:	xor	eax, eax
0x400395:	mov	qword ptr [rbp - 0x70], 0
0x40039d:	mov	qword ptr [rbp - 0x68], 0
0x4003a5:	mov	qword ptr [rbp - 0x60], 0
0x4003ad:	mov	qword ptr [rbp - 0x58], 0
0x4003b5:	mov	qword ptr [rbp - 0x50], 0
0x4003bd:	mov	qword ptr [rbp - 0x48], 0
0x4003c5:	mov	qword ptr [rbp - 0x40], 0
0x4003cd:	mov	qword ptr [rbp - 0x38], 0
0x4003d5:	mov	qword ptr [rbp - 0x30], 0
0x4003dd:	mov	qword ptr [rbp - 0x28], 0
0x4003e5:	mov	qword ptr [rbp - 0x20], 0
0x4003ed:	mov	qword ptr [rbp - 0x18], 0
0x4003f5:	mov	dword ptr [rbp - 0x10], 0
0x4003fc:	lea	rax, [rbp - 0x70]
0x400400:	mov	qword ptr [rbp - 0x88], rax
0x400407:	mov	rax, qword ptr [rbp - 0x88]
0x40040e:	mov	rdi, rax
0x400411:	call	0x500018
<Block for 0x400416, 16 bytes>
0x400416:	mov	qword ptr [rbp - 0x80], rax
0x40041a:	lea	rdi, [rip + 0xa2]
0x400421:	call	0x500020
<Block for 0x400426, 11 bytes>
0x400426:	mov	qword ptr [rbp - 0x78], rax
0x40042a:	cmp	qword ptr [rbp - 0x78], 0
0x40042f:	je	0x40045a
<Block for 0x40045a, 24 bytes>
0x40045a:	mov	rax, qword ptr [rbp - 0x88]
0x400461:	mov	qword ptr [rip + 0x50], rax
0x400468:	mov	eax, 0
0x40046d:	call	0x4002e5
<Block for 0x400431, 41 bytes>
0x400431:	mov	eax, 0x63
0x400436:	sub	rax, qword ptr [rbp - 0x80]
0x40043a:	mov	rdx, rax
0x40043d:	mov	rcx, qword ptr [rbp - 0x88]
0x400444:	mov	rax, qword ptr [rbp - 0x80]
0x400448:	add	rcx, rax
0x40044b:	mov	rax, qword ptr [rbp - 0x78]
0x40044f:	mov	rsi, rax
0x400452:	mov	rdi, rcx
0x400455:	call	0x500028
<Block for 0x400472, 16 bytes>
0x400472:	nop	
0x400473:	mov	rax, qword ptr [rbp - 8]
0x400477:	xor	rax, qword ptr fs:[0x28]
0x400480:	je	0x400487
<Block for 0x400487, 2 bytes>
0x400487:	leave	
0x400488:	ret	
<Block for 0x400482, 5 bytes>
0x400482:	call	0x500010
