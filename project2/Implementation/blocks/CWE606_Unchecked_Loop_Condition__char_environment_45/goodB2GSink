<Block for 0x4002e5, 66 bytes>
0x4002e5:	endbr64	
0x4002e9:	push	rbp
0x4002ea:	mov	rbp, rsp
0x4002ed:	sub	rsp, 0x20
0x4002f1:	mov	rax, qword ptr fs:[0x28]
0x4002fa:	mov	qword ptr [rbp - 8], rax
0x4002fe:	xor	eax, eax
0x400300:	mov	rax, qword ptr [rip + 0x1b1]
0x400307:	mov	qword ptr [rbp - 0x10], rax
0x40030b:	lea	rdx, [rbp - 0x1c]
0x40030f:	mov	rax, qword ptr [rbp - 0x10]
0x400313:	lea	rsi, [rip + 0x1a6]
0x40031a:	mov	rdi, rax
0x40031d:	mov	eax, 0
0x400322:	call	0x500000
<Block for 0x400327, 5 bytes>
0x400327:	cmp	eax, 1
0x40032a:	jne	0x400360
<Block for 0x40032c, 10 bytes>
0x40032c:	mov	eax, dword ptr [rbp - 0x1c]
0x40032f:	cmp	eax, 0x270f
0x400334:	jg	0x400360
<Block for 0x400360, 16 bytes>
0x400360:	nop	
0x400361:	mov	rax, qword ptr [rbp - 8]
0x400365:	xor	rax, qword ptr fs:[0x28]
0x40036e:	je	0x400375
<Block for 0x400336, 16 bytes>
0x400336:	mov	dword ptr [rbp - 0x14], 0
0x40033d:	mov	dword ptr [rbp - 0x18], 0
0x400344:	jmp	0x40034e
<Block for 0x400375, 2 bytes>
0x400375:	leave	
0x400376:	ret	
<Block for 0x400370, 5 bytes>
0x400370:	call	0x500010
<Block for 0x40034e, 8 bytes>
0x40034e:	mov	eax, dword ptr [rbp - 0x1c]
0x400351:	cmp	dword ptr [rbp - 0x18], eax
0x400354:	jl	0x400346
<Block for 0x400346, 16 bytes>
0x400346:	add	dword ptr [rbp - 0x14], 1
0x40034a:	add	dword ptr [rbp - 0x18], 1
0x40034e:	mov	eax, dword ptr [rbp - 0x1c]
0x400351:	cmp	dword ptr [rbp - 0x18], eax
0x400354:	jl	0x400346
<Block for 0x400356, 10 bytes>
0x400356:	mov	eax, dword ptr [rbp - 0x14]
0x400359:	mov	edi, eax
0x40035b:	call	0x500008
