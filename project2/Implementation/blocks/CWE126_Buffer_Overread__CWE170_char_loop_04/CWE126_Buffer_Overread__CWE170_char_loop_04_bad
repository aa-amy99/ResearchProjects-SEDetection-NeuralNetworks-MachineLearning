<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x40008e
<Block for 0x40008e, 16 bytes>
0x40008e:	nop	
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	xor	rax, qword ptr fs:[0x28]
0x40009c:	je	0x4000a3
<Block for 0x400027, 25 bytes>
0x400027:	lea	rax, [rbp - 0xa0]
0x40002e:	mov	edx, 0x95
0x400033:	mov	esi, 0x41
0x400038:	mov	rdi, rax
0x40003b:	call	0x500000
<Block for 0x4000a3, 2 bytes>
0x4000a3:	leave	
0x4000a4:	ret	
<Block for 0x40009e, 5 bytes>
0x40009e:	call	0x500010
<Block for 0x400040, 16 bytes>
0x400040:	mov	byte ptr [rbp - 0xb], 0
0x400044:	mov	dword ptr [rbp - 0x114], 0
0x40004e:	jmp	0x400076
<Block for 0x400076, 9 bytes>
0x400076:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007d:	jle	0x400050
<Block for 0x400050, 47 bytes>
0x400050:	mov	eax, dword ptr [rbp - 0x114]
0x400056:	cdqe	
0x400058:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400060:	mov	eax, dword ptr [rbp - 0x114]
0x400066:	cdqe	
0x400068:	mov	byte ptr [rbp + rax - 0x110], dl
0x40006f:	add	dword ptr [rbp - 0x114], 1
0x400076:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007d:	jle	0x400050
<Block for 0x40007f, 15 bytes>
0x40007f:	lea	rax, [rbp - 0x110]
0x400086:	mov	rdi, rax
0x400089:	call	0x500008
