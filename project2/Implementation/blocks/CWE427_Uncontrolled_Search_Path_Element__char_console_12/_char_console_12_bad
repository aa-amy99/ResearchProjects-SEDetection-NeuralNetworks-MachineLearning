<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 34 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x120], rax
0x40006a:	mov	eax, 0
0x40006f:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400074, 8 bytes>
0x400074:	test	eax, eax
0x400076:	je	0x40015e
<Block for 0x40015e, 27 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0x120]
0x400165:	mov	rcx, -1
0x40016c:	mov	rdx, rax
0x40016f:	mov	eax, 0
0x400174:	mov	rdi, rdx
0x400177:	repne scasb	al, byte ptr [rdi]
<Block for 0x40007c, 15 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 0x120]
0x400083:	mov	rdi, rax
0x400086:	call	0x500008
<Block for 0x400179, 45 bytes>
0x400179:	mov	rax, rcx
0x40017c:	not	rax
0x40017f:	lea	rdx, [rax - 1]
0x400183:	mov	rax, qword ptr [rbp - 0x120]
0x40018a:	add	rax, rdx
0x40018d:	mov	dword ptr [rax], 0x6e69622f
0x400193:	mov	byte ptr [rax + 4], 0
0x400197:	mov	rax, qword ptr [rbp - 0x120]
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500028
<Block for 0x400177, 2 bytes>
0x400177:	repne scasb	al, byte ptr [rdi]
<Block for 0x40008b, 29 bytes>
0x40008b:	mov	qword ptr [rbp - 0x118], rax
0x400092:	mov	eax, 0xfa
0x400097:	sub	rax, qword ptr [rbp - 0x118]
0x40009e:	cmp	rax, 1
0x4000a2:	jbe	0x400197
<Block for 0x4001a6, 16 bytes>
0x4001a6:	nop	
0x4001a7:	mov	rax, qword ptr [rbp - 8]
0x4001ab:	xor	rax, qword ptr fs:[0x28]
0x4001b4:	je	0x4001bb
<Block for 0x400197, 15 bytes>
0x400197:	mov	rax, qword ptr [rbp - 0x120]
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500028
<Block for 0x4000a8, 53 bytes>
0x4000a8:	mov	rax, qword ptr [rip + 0xfff61]
0x4000af:	mov	rdx, qword ptr [rbp - 0x118]
0x4000b6:	mov	ecx, 0xfa
0x4000bb:	sub	ecx, edx
0x4000bd:	mov	edx, ecx
0x4000bf:	mov	esi, edx
0x4000c1:	mov	rcx, qword ptr [rbp - 0x120]
0x4000c8:	mov	rdx, qword ptr [rbp - 0x118]
0x4000cf:	add	rcx, rdx
0x4000d2:	mov	rdx, rax
0x4000d5:	mov	rdi, rcx
0x4000d8:	call	0x500018
<Block for 0x4001bb, 2 bytes>
0x4001bb:	leave	
0x4001bc:	ret	
<Block for 0x4001b6, 5 bytes>
0x4001b6:	call	0x500030
<Block for 0x4000dd, 5 bytes>
0x4000dd:	test	rax, rax
0x4000e0:	je	0x40013c
<Block for 0x40013c, 12 bytes>
0x40013c:	lea	rdi, [rip + 0x1a1]
0x400143:	call	0x500020
<Block for 0x4000e2, 15 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 0x120]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500008
<Block for 0x400148, 22 bytes>
0x400148:	mov	rdx, qword ptr [rbp - 0x120]
0x40014f:	mov	rax, qword ptr [rbp - 0x118]
0x400156:	add	rax, rdx
0x400159:	mov	byte ptr [rax], 0
0x40015c:	jmp	0x400197
<Block for 0x4000f1, 21 bytes>
0x4000f1:	mov	qword ptr [rbp - 0x118], rax
0x4000f8:	cmp	qword ptr [rbp - 0x118], 0
0x400100:	je	0x400197
<Block for 0x400106, 28 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x118]
0x40010d:	lea	rdx, [rax - 1]
0x400111:	mov	rax, qword ptr [rbp - 0x120]
0x400118:	add	rax, rdx
0x40011b:	movzx	eax, byte ptr [rax]
0x40011e:	cmp	al, 0xa
0x400120:	jne	0x400197
<Block for 0x400122, 26 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x118]
0x400129:	lea	rdx, [rax - 1]
0x40012d:	mov	rax, qword ptr [rbp - 0x120]
0x400134:	add	rax, rdx
0x400137:	mov	byte ptr [rax], 0
0x40013a:	jmp	0x400197
