<Block for 0x4001fc, 76 bytes>
0x4001fc:	endbr64	
0x400200:	push	rbp
0x400201:	mov	rbp, rsp
0x400204:	sub	rsp, 0x50
0x400208:	mov	dword ptr [rbp - 0x44], edi
0x40020b:	mov	rax, qword ptr fs:[0x28]
0x400214:	mov	qword ptr [rbp - 8], rax
0x400218:	xor	eax, eax
0x40021a:	mov	qword ptr [rbp - 0x30], 0
0x400222:	mov	qword ptr [rbp - 0x28], 0
0x40022a:	mov	qword ptr [rbp - 0x20], 0
0x400232:	mov	qword ptr [rbp - 0x18], 0
0x40023a:	mov	qword ptr [rbp - 0x10], 0
0x400242:	cmp	dword ptr [rbp - 0x44], 9
0x400246:	jg	0x40027a
<Block for 0x400248, 22 bytes>
0x400248:	mov	eax, dword ptr [rbp - 0x44]
0x40024b:	cdqe	
0x40024d:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400255:	mov	dword ptr [rbp - 0x34], 0
0x40025c:	jmp	0x400272
<Block for 0x40027a, 12 bytes>
0x40027a:	lea	rdi, [rip + 0x267]
0x400281:	call	0x500008
<Block for 0x400272, 6 bytes>
0x400272:	cmp	dword ptr [rbp - 0x34], 9
0x400276:	jle	0x40025e
<Block for 0x400286, 16 bytes>
0x400286:	nop	
0x400287:	mov	rax, qword ptr [rbp - 8]
0x40028b:	xor	rax, qword ptr fs:[0x28]
0x400294:	je	0x40029b
<Block for 0x40025e, 16 bytes>
0x40025e:	mov	eax, dword ptr [rbp - 0x34]
0x400261:	cdqe	
0x400263:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400267:	mov	edi, eax
0x400269:	call	0x500000
<Block for 0x400278, 2 bytes>
0x400278:	jmp	0x400286
<Block for 0x40029b, 2 bytes>
0x40029b:	leave	
0x40029c:	ret	
<Block for 0x400296, 5 bytes>
0x400296:	call	0x500010
<Block for 0x40026e, 10 bytes>
0x40026e:	add	dword ptr [rbp - 0x34], 1
0x400272:	cmp	dword ptr [rbp - 0x34], 9
0x400276:	jle	0x40025e
