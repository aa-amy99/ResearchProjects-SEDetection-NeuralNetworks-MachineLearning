<Block for 0x40036b, 68 bytes>
0x40036b:	endbr64	
0x40036f:	push	rbp
0x400370:	mov	rbp, rsp
0x400373:	sub	rsp, 0x40
0x400377:	mov	rax, qword ptr fs:[0x28]
0x400380:	mov	qword ptr [rbp - 8], rax
0x400384:	xor	eax, eax
0x400386:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40038d:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400394:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x40039b:	mov	edx, 6
0x4003a0:	mov	esi, 1
0x4003a5:	mov	edi, 2
0x4003aa:	call	0x500018
<Block for 0x4003af, 13 bytes>
0x4003af:	mov	dword ptr [rbp - 0x38], eax
0x4003b2:	cmp	dword ptr [rbp - 0x38], -1
0x4003b6:	je	0x40047b
<Block for 0x40047b, 3 bytes>
0x40047b:	nop	
0x40047c:	jmp	0x400485
<Block for 0x4003bc, 22 bytes>
0x4003bc:	lea	rax, [rbp - 0x30]
0x4003c0:	mov	edx, 0x10
0x4003c5:	mov	esi, 0
0x4003ca:	mov	rdi, rax
0x4003cd:	call	0x500020
<Block for 0x400485, 6 bytes>
0x400485:	cmp	dword ptr [rbp - 0x38], -1
0x400489:	je	0x400495
<Block for 0x4003d2, 23 bytes>
0x4003d2:	mov	word ptr [rbp - 0x30], 2
0x4003d8:	mov	dword ptr [rbp - 0x2c], 0
0x4003df:	mov	edi, 0x6987
0x4003e4:	call	0x500028
<Block for 0x400495, 6 bytes>
0x400495:	cmp	dword ptr [rbp - 0x3c], -1
0x400499:	je	0x4004a5
<Block for 0x40048b, 10 bytes>
0x40048b:	mov	eax, dword ptr [rbp - 0x38]
0x40048e:	mov	edi, eax
0x400490:	call	0x500058
<Block for 0x4003e9, 26 bytes>
0x4003e9:	mov	word ptr [rbp - 0x2e], ax
0x4003ed:	lea	rcx, [rbp - 0x30]
0x4003f1:	mov	eax, dword ptr [rbp - 0x38]
0x4003f4:	mov	edx, 0x10
0x4003f9:	mov	rsi, rcx
0x4003fc:	mov	edi, eax
0x4003fe:	call	0x500030
<Block for 0x4004a5, 10 bytes>
0x4004a5:	mov	eax, dword ptr [rbp - 0x40]
0x4004a8:	mov	edi, eax
0x4004aa:	call	0x4002c4
<Block for 0x40049b, 10 bytes>
0x40049b:	mov	eax, dword ptr [rbp - 0x3c]
0x40049e:	mov	edi, eax
0x4004a0:	call	0x500058
<Block for 0x400403, 5 bytes>
0x400403:	cmp	eax, -1
0x400406:	je	0x40047e
<Block for 0x4004af, 16 bytes>
0x4004af:	nop	
0x4004b0:	mov	rax, qword ptr [rbp - 8]
0x4004b4:	xor	rax, qword ptr fs:[0x28]
0x4004bd:	je	0x4004c4
<Block for 0x40047e, 3 bytes>
0x40047e:	nop	
0x40047f:	jmp	0x400485
<Block for 0x400408, 15 bytes>
0x400408:	mov	eax, dword ptr [rbp - 0x38]
0x40040b:	mov	esi, 5
0x400410:	mov	edi, eax
0x400412:	call	0x500038
<Block for 0x4004c4, 2 bytes>
0x4004c4:	leave	
0x4004c5:	ret	
<Block for 0x4004bf, 5 bytes>
0x4004bf:	call	0x500010
<Block for 0x400417, 5 bytes>
0x400417:	cmp	eax, -1
0x40041a:	je	0x400481
<Block for 0x400481, 3 bytes>
0x400481:	nop	
0x400482:	jmp	0x400485
<Block for 0x40041c, 20 bytes>
0x40041c:	mov	eax, dword ptr [rbp - 0x38]
0x40041f:	mov	edx, 0
0x400424:	mov	esi, 0
0x400429:	mov	edi, eax
0x40042b:	call	0x500040
<Block for 0x400430, 9 bytes>
0x400430:	mov	dword ptr [rbp - 0x3c], eax
0x400433:	cmp	dword ptr [rbp - 0x3c], -1
0x400437:	je	0x400484
<Block for 0x400439, 24 bytes>
0x400439:	lea	rsi, [rbp - 0x16]
0x40043d:	mov	eax, dword ptr [rbp - 0x3c]
0x400440:	mov	ecx, 0
0x400445:	mov	edx, 0xd
0x40044a:	mov	edi, eax
0x40044c:	call	0x500048
<Block for 0x400484, 1 bytes>
0x400484:	nop	
<Block for 0x400451, 9 bytes>
0x400451:	mov	dword ptr [rbp - 0x34], eax
0x400454:	cmp	dword ptr [rbp - 0x34], -1
0x400458:	je	0x400485
<Block for 0x40045a, 6 bytes>
0x40045a:	cmp	dword ptr [rbp - 0x34], 0
0x40045e:	je	0x400485
<Block for 0x400460, 22 bytes>
0x400460:	mov	eax, dword ptr [rbp - 0x34]
0x400463:	cdqe	
0x400465:	mov	byte ptr [rbp + rax - 0x16], 0
0x40046a:	lea	rax, [rbp - 0x16]
0x40046e:	mov	rdi, rax
0x400471:	call	0x500050
<Block for 0x400476, 5 bytes>
0x400476:	mov	dword ptr [rbp - 0x40], eax
0x400479:	jmp	0x400485
