<Block for 0x4000a1, 68 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x40
0x4000ad:	mov	rax, qword ptr fs:[0x28]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	xor	eax, eax
0x4000bc:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4000c3:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000ca:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4000d1:	mov	edx, 6
0x4000d6:	mov	esi, 1
0x4000db:	mov	edi, 2
0x4000e0:	call	0x500018
<Block for 0x4000e5, 13 bytes>
0x4000e5:	mov	dword ptr [rbp - 0x38], eax
0x4000e8:	cmp	dword ptr [rbp - 0x38], -1
0x4000ec:	je	0x4001b1
<Block for 0x4001b1, 3 bytes>
0x4001b1:	nop	
0x4001b2:	jmp	0x4001bb
<Block for 0x4000f2, 22 bytes>
0x4000f2:	lea	rax, [rbp - 0x30]
0x4000f6:	mov	edx, 0x10
0x4000fb:	mov	esi, 0
0x400100:	mov	rdi, rax
0x400103:	call	0x500020
<Block for 0x4001bb, 6 bytes>
0x4001bb:	cmp	dword ptr [rbp - 0x38], -1
0x4001bf:	je	0x4001cb
<Block for 0x400108, 23 bytes>
0x400108:	mov	word ptr [rbp - 0x30], 2
0x40010e:	mov	dword ptr [rbp - 0x2c], 0
0x400115:	mov	edi, 0x6987
0x40011a:	call	0x500028
<Block for 0x4001cb, 6 bytes>
0x4001cb:	cmp	dword ptr [rbp - 0x3c], -1
0x4001cf:	je	0x4001db
<Block for 0x4001c1, 10 bytes>
0x4001c1:	mov	eax, dword ptr [rbp - 0x38]
0x4001c4:	mov	edi, eax
0x4001c6:	call	0x500058
<Block for 0x40011f, 26 bytes>
0x40011f:	mov	word ptr [rbp - 0x2e], ax
0x400123:	lea	rcx, [rbp - 0x30]
0x400127:	mov	eax, dword ptr [rbp - 0x38]
0x40012a:	mov	edx, 0x10
0x40012f:	mov	rsi, rcx
0x400132:	mov	edi, eax
0x400134:	call	0x500030
<Block for 0x4001db, 10 bytes>
0x4001db:	mov	eax, dword ptr [rbp - 0x40]
0x4001de:	mov	edi, eax
0x4001e0:	call	0x400000
<Block for 0x4001d1, 10 bytes>
0x4001d1:	mov	eax, dword ptr [rbp - 0x3c]
0x4001d4:	mov	edi, eax
0x4001d6:	call	0x500058
<Block for 0x400139, 5 bytes>
0x400139:	cmp	eax, -1
0x40013c:	je	0x4001b4
<Block for 0x4001e5, 16 bytes>
0x4001e5:	nop	
0x4001e6:	mov	rax, qword ptr [rbp - 8]
0x4001ea:	xor	rax, qword ptr fs:[0x28]
0x4001f3:	je	0x4001fa
<Block for 0x4001b4, 3 bytes>
0x4001b4:	nop	
0x4001b5:	jmp	0x4001bb
<Block for 0x40013e, 15 bytes>
0x40013e:	mov	eax, dword ptr [rbp - 0x38]
0x400141:	mov	esi, 5
0x400146:	mov	edi, eax
0x400148:	call	0x500038
<Block for 0x4001fa, 2 bytes>
0x4001fa:	leave	
0x4001fb:	ret	
<Block for 0x4001f5, 5 bytes>
0x4001f5:	call	0x500010
<Block for 0x40014d, 5 bytes>
0x40014d:	cmp	eax, -1
0x400150:	je	0x4001b7
<Block for 0x4001b7, 3 bytes>
0x4001b7:	nop	
0x4001b8:	jmp	0x4001bb
<Block for 0x400152, 20 bytes>
0x400152:	mov	eax, dword ptr [rbp - 0x38]
0x400155:	mov	edx, 0
0x40015a:	mov	esi, 0
0x40015f:	mov	edi, eax
0x400161:	call	0x500040
<Block for 0x400166, 9 bytes>
0x400166:	mov	dword ptr [rbp - 0x3c], eax
0x400169:	cmp	dword ptr [rbp - 0x3c], -1
0x40016d:	je	0x4001ba
<Block for 0x40016f, 24 bytes>
0x40016f:	lea	rsi, [rbp - 0x16]
0x400173:	mov	eax, dword ptr [rbp - 0x3c]
0x400176:	mov	ecx, 0
0x40017b:	mov	edx, 0xd
0x400180:	mov	edi, eax
0x400182:	call	0x500048
<Block for 0x4001ba, 1 bytes>
0x4001ba:	nop	
<Block for 0x400187, 9 bytes>
0x400187:	mov	dword ptr [rbp - 0x34], eax
0x40018a:	cmp	dword ptr [rbp - 0x34], -1
0x40018e:	je	0x4001bb
<Block for 0x400190, 6 bytes>
0x400190:	cmp	dword ptr [rbp - 0x34], 0
0x400194:	je	0x4001bb
<Block for 0x400196, 22 bytes>
0x400196:	mov	eax, dword ptr [rbp - 0x34]
0x400199:	cdqe	
0x40019b:	mov	byte ptr [rbp + rax - 0x16], 0
0x4001a0:	lea	rax, [rbp - 0x16]
0x4001a4:	mov	rdi, rax
0x4001a7:	call	0x500050
<Block for 0x4001ac, 5 bytes>
0x4001ac:	mov	dword ptr [rbp - 0x40], eax
0x4001af:	jmp	0x4001bb
