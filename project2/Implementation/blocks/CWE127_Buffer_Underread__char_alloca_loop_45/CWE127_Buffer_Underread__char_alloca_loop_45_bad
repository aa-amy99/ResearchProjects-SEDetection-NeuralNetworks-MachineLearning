<Block for 0x400098, 81 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0x20
0x4000a4:	mov	rax, qword ptr fs:[0x28]
0x4000ad:	mov	qword ptr [rbp - 8], rax
0x4000b1:	xor	eax, eax
0x4000b3:	mov	eax, 0x10
0x4000b8:	sub	rax, 1
0x4000bc:	add	rax, 0x6c
0x4000c0:	mov	esi, 0x10
0x4000c5:	mov	edx, 0
0x4000ca:	div	rsi
0x4000cd:	imul	rax, rax, 0x10
0x4000d1:	mov	rdx, rax
0x4000d4:	and	rdx, 0xfffffffffffff000
0x4000db:	mov	rcx, rsp
0x4000de:	sub	rcx, rdx
0x4000e1:	mov	rdx, rcx
0x4000e4:	cmp	rsp, rdx
0x4000e7:	je	0x4000fb
<Block for 0x4000fb, 26 bytes>
0x4000fb:	mov	rdx, rax
0x4000fe:	and	edx, 0xfff
0x400104:	sub	rsp, rdx
0x400107:	mov	rdx, rax
0x40010a:	and	edx, 0xfff
0x400110:	test	rdx, rdx
0x400113:	je	0x400125
<Block for 0x4000e9, 18 bytes>
0x4000e9:	sub	rsp, 0x1000
0x4000f0:	or	qword ptr [rsp + 0xff8], 0
0x4000f9:	jmp	0x4000e4
<Block for 0x400125, 41 bytes>
0x400125:	mov	rax, rsp
0x400128:	add	rax, 0xf
0x40012c:	shr	rax, 4
0x400130:	shl	rax, 4
0x400134:	mov	qword ptr [rbp - 0x18], rax
0x400138:	mov	rax, qword ptr [rbp - 0x18]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x41
0x400146:	mov	rdi, rax
0x400149:	call	0x500000
<Block for 0x400115, 57 bytes>
0x400115:	and	eax, 0xfff
0x40011a:	sub	rax, 8
0x40011e:	add	rax, rsp
0x400121:	or	qword ptr [rax], 0
0x400125:	mov	rax, rsp
0x400128:	add	rax, 0xf
0x40012c:	shr	rax, 4
0x400130:	shl	rax, 4
0x400134:	mov	qword ptr [rbp - 0x18], rax
0x400138:	mov	rax, qword ptr [rbp - 0x18]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x41
0x400146:	mov	rdi, rax
0x400149:	call	0x500000
<Block for 0x4000e4, 5 bytes>
0x4000e4:	cmp	rsp, rdx
0x4000e7:	je	0x4000fb
<Block for 0x40014e, 44 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 0x18]
0x400152:	add	rax, 0x63
0x400156:	mov	byte ptr [rax], 0
0x400159:	mov	rax, qword ptr [rbp - 0x18]
0x40015d:	sub	rax, 8
0x400161:	mov	qword ptr [rbp - 0x10], rax
0x400165:	mov	rax, qword ptr [rbp - 0x10]
0x400169:	mov	qword ptr [rip + 0x1c8], rax
0x400170:	mov	eax, 0
0x400175:	call	0x400000
<Block for 0x40017a, 16 bytes>
0x40017a:	nop	
0x40017b:	mov	rax, qword ptr [rbp - 8]
0x40017f:	xor	rax, qword ptr fs:[0x28]
0x400188:	je	0x40018f
<Block for 0x40018f, 2 bytes>
0x40018f:	leave	
0x400190:	ret	
<Block for 0x40018a, 5 bytes>
0x40018a:	call	0x500010
