<Block for 0x400216, 37 bytes>
0x400216:	endbr64	
0x40021a:	push	rbp
0x40021b:	mov	rbp, rsp
0x40021e:	sub	rsp, 0x50
0x400222:	mov	rax, qword ptr fs:[0x28]
0x40022b:	mov	qword ptr [rbp - 8], rax
0x40022f:	xor	eax, eax
0x400231:	mov	edi, 0x64
0x400236:	call	0x500000
<Block for 0x40023b, 11 bytes>
0x40023b:	mov	qword ptr [rbp - 0x38], rax
0x40023f:	cmp	qword ptr [rbp - 0x38], 0
0x400244:	jne	0x400250
<Block for 0x400246, 10 bytes>
0x400246:	mov	edi, 0xffffffff
0x40024b:	call	0x500008
<Block for 0x400250, 33 bytes>
0x400250:	mov	rax, qword ptr [rbp - 0x38]
0x400254:	mov	byte ptr [rax], 0
0x400257:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40025e:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400265:	mov	rax, qword ptr [rbp - 0x38]
0x400269:	mov	rdi, rax
0x40026c:	call	0x500010
<Block for 0x400271, 24 bytes>
0x400271:	mov	qword ptr [rbp - 0x30], rax
0x400275:	mov	edx, 6
0x40027a:	mov	esi, 1
0x40027f:	mov	edi, 2
0x400284:	call	0x500018
<Block for 0x400289, 13 bytes>
0x400289:	mov	dword ptr [rbp - 0x48], eax
0x40028c:	cmp	dword ptr [rbp - 0x48], -1
0x400290:	je	0x4003b4
<Block for 0x4003b4, 3 bytes>
0x4003b4:	nop	
0x4003b5:	jmp	0x4003be
<Block for 0x400296, 22 bytes>
0x400296:	lea	rax, [rbp - 0x20]
0x40029a:	mov	edx, 0x10
0x40029f:	mov	esi, 0
0x4002a4:	mov	rdi, rax
0x4002a7:	call	0x500020
<Block for 0x4003be, 6 bytes>
0x4003be:	cmp	dword ptr [rbp - 0x48], -1
0x4003c2:	je	0x4003ce
<Block for 0x4002ac, 23 bytes>
0x4002ac:	mov	word ptr [rbp - 0x20], 2
0x4002b2:	mov	dword ptr [rbp - 0x1c], 0
0x4002b9:	mov	edi, 0x6987
0x4002be:	call	0x500028
<Block for 0x4003ce, 6 bytes>
0x4003ce:	cmp	dword ptr [rbp - 0x4c], -1
0x4003d2:	je	0x4003de
<Block for 0x4003c4, 10 bytes>
0x4003c4:	mov	eax, dword ptr [rbp - 0x48]
0x4003c7:	mov	edi, eax
0x4003c9:	call	0x500058
<Block for 0x4002c3, 26 bytes>
0x4002c3:	mov	word ptr [rbp - 0x1e], ax
0x4002c7:	lea	rcx, [rbp - 0x20]
0x4002cb:	mov	eax, dword ptr [rbp - 0x48]
0x4002ce:	mov	edx, 0x10
0x4002d3:	mov	rsi, rcx
0x4002d6:	mov	edi, eax
0x4002d8:	call	0x500030
<Block for 0x4003de, 10 bytes>
0x4003de:	mov	qword ptr [rbp - 0x40], 0
0x4003e6:	jmp	0x40040d
<Block for 0x4003d4, 10 bytes>
0x4003d4:	mov	eax, dword ptr [rbp - 0x4c]
0x4003d7:	mov	edi, eax
0x4003d9:	call	0x500058
<Block for 0x4002dd, 9 bytes>
0x4002dd:	cmp	eax, -1
0x4002e0:	je	0x4003b7
<Block for 0x40040d, 12 bytes>
0x40040d:	mov	rax, qword ptr [rbp - 0x38]
0x400411:	mov	rdi, rax
0x400414:	call	0x500010
<Block for 0x4003b7, 3 bytes>
0x4003b7:	nop	
0x4003b8:	jmp	0x4003be
<Block for 0x4002e6, 15 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x48]
0x4002e9:	mov	esi, 5
0x4002ee:	mov	edi, eax
0x4002f0:	call	0x500038
<Block for 0x400419, 6 bytes>
0x400419:	cmp	qword ptr [rbp - 0x40], rax
0x40041d:	jb	0x4003e8
<Block for 0x4002f5, 9 bytes>
0x4002f5:	cmp	eax, -1
0x4002f8:	je	0x4003ba
<Block for 0x4003e8, 18 bytes>
0x4003e8:	mov	rdx, qword ptr [rbp - 0x38]
0x4003ec:	mov	rax, qword ptr [rbp - 0x40]
0x4003f0:	add	rax, rdx
0x4003f3:	movzx	eax, byte ptr [rax]
0x4003f6:	cmp	al, 0x53
0x4003f8:	jne	0x400408
<Block for 0x40041f, 12 bytes>
0x40041f:	mov	rax, qword ptr [rbp - 0x38]
0x400423:	mov	rdi, rax
0x400426:	call	0x500068
<Block for 0x4003ba, 3 bytes>
0x4003ba:	nop	
0x4003bb:	jmp	0x4003be
<Block for 0x4002fe, 20 bytes>
0x4002fe:	mov	eax, dword ptr [rbp - 0x48]
0x400301:	mov	edx, 0
0x400306:	mov	esi, 0
0x40030b:	mov	edi, eax
0x40030d:	call	0x500040
<Block for 0x4003fa, 12 bytes>
0x4003fa:	lea	rdi, [rip + 0x28c]
0x400401:	call	0x500060
<Block for 0x400408, 17 bytes>
0x400408:	add	qword ptr [rbp - 0x40], 1
0x40040d:	mov	rax, qword ptr [rbp - 0x38]
0x400411:	mov	rdi, rax
0x400414:	call	0x500010
<Block for 0x40042b, 16 bytes>
0x40042b:	nop	
0x40042c:	mov	rax, qword ptr [rbp - 8]
0x400430:	xor	rax, qword ptr fs:[0x28]
0x400439:	je	0x400440
<Block for 0x400312, 13 bytes>
0x400312:	mov	dword ptr [rbp - 0x4c], eax
0x400315:	cmp	dword ptr [rbp - 0x4c], -1
0x400319:	je	0x4003bd
<Block for 0x400406, 2 bytes>
0x400406:	jmp	0x40041f
<Block for 0x400440, 2 bytes>
0x400440:	leave	
0x400441:	ret	
<Block for 0x40043b, 5 bytes>
0x40043b:	call	0x500070
<Block for 0x40031f, 39 bytes>
0x40031f:	mov	eax, 0x63
0x400324:	sub	rax, qword ptr [rbp - 0x30]
0x400328:	mov	rdx, rax
0x40032b:	mov	rcx, qword ptr [rbp - 0x38]
0x40032f:	mov	rax, qword ptr [rbp - 0x30]
0x400333:	lea	rsi, [rcx + rax]
0x400337:	mov	eax, dword ptr [rbp - 0x4c]
0x40033a:	mov	ecx, 0
0x40033f:	mov	edi, eax
0x400341:	call	0x500048
<Block for 0x4003bd, 1 bytes>
0x4003bd:	nop	
<Block for 0x400346, 9 bytes>
0x400346:	mov	dword ptr [rbp - 0x44], eax
0x400349:	cmp	dword ptr [rbp - 0x44], -1
0x40034d:	je	0x4003be
<Block for 0x40034f, 6 bytes>
0x40034f:	cmp	dword ptr [rbp - 0x44], 0
0x400353:	je	0x4003be
<Block for 0x400355, 40 bytes>
0x400355:	mov	eax, dword ptr [rbp - 0x44]
0x400358:	movsxd	rdx, eax
0x40035b:	mov	rax, qword ptr [rbp - 0x30]
0x40035f:	add	rdx, rax
0x400362:	mov	rax, qword ptr [rbp - 0x38]
0x400366:	add	rax, rdx
0x400369:	mov	byte ptr [rax], 0
0x40036c:	mov	rax, qword ptr [rbp - 0x38]
0x400370:	mov	esi, 0xd
0x400375:	mov	rdi, rax
0x400378:	call	0x500050
<Block for 0x40037d, 11 bytes>
0x40037d:	mov	qword ptr [rbp - 0x28], rax
0x400381:	cmp	qword ptr [rbp - 0x28], 0
0x400386:	je	0x40038f
<Block for 0x40038f, 17 bytes>
0x40038f:	mov	rax, qword ptr [rbp - 0x38]
0x400393:	mov	esi, 0xa
0x400398:	mov	rdi, rax
0x40039b:	call	0x500050
<Block for 0x400388, 24 bytes>
0x400388:	mov	rax, qword ptr [rbp - 0x28]
0x40038c:	mov	byte ptr [rax], 0
0x40038f:	mov	rax, qword ptr [rbp - 0x38]
0x400393:	mov	esi, 0xa
0x400398:	mov	rdi, rax
0x40039b:	call	0x500050
<Block for 0x4003a0, 11 bytes>
0x4003a0:	mov	qword ptr [rbp - 0x28], rax
0x4003a4:	cmp	qword ptr [rbp - 0x28], 0
0x4003a9:	je	0x4003be
<Block for 0x4003ab, 9 bytes>
0x4003ab:	mov	rax, qword ptr [rbp - 0x28]
0x4003af:	mov	byte ptr [rax], 0
0x4003b2:	jmp	0x4003be
