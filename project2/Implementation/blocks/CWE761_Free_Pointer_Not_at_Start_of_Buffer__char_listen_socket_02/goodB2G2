<Block for 0x400442, 37 bytes>
0x400442:	endbr64	
0x400446:	push	rbp
0x400447:	mov	rbp, rsp
0x40044a:	sub	rsp, 0x50
0x40044e:	mov	rax, qword ptr fs:[0x28]
0x400457:	mov	qword ptr [rbp - 8], rax
0x40045b:	xor	eax, eax
0x40045d:	mov	edi, 0x64
0x400462:	call	0x500000
<Block for 0x400467, 11 bytes>
0x400467:	mov	qword ptr [rbp - 0x38], rax
0x40046b:	cmp	qword ptr [rbp - 0x38], 0
0x400470:	jne	0x40047c
<Block for 0x400472, 10 bytes>
0x400472:	mov	edi, 0xffffffff
0x400477:	call	0x500008
<Block for 0x40047c, 33 bytes>
0x40047c:	mov	rax, qword ptr [rbp - 0x38]
0x400480:	mov	byte ptr [rax], 0
0x400483:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40048a:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400491:	mov	rax, qword ptr [rbp - 0x38]
0x400495:	mov	rdi, rax
0x400498:	call	0x500010
<Block for 0x40049d, 24 bytes>
0x40049d:	mov	qword ptr [rbp - 0x30], rax
0x4004a1:	mov	edx, 6
0x4004a6:	mov	esi, 1
0x4004ab:	mov	edi, 2
0x4004b0:	call	0x500018
<Block for 0x4004b5, 13 bytes>
0x4004b5:	mov	dword ptr [rbp - 0x48], eax
0x4004b8:	cmp	dword ptr [rbp - 0x48], -1
0x4004bc:	je	0x4005e0
<Block for 0x4005e0, 3 bytes>
0x4005e0:	nop	
0x4005e1:	jmp	0x4005ea
<Block for 0x4004c2, 22 bytes>
0x4004c2:	lea	rax, [rbp - 0x20]
0x4004c6:	mov	edx, 0x10
0x4004cb:	mov	esi, 0
0x4004d0:	mov	rdi, rax
0x4004d3:	call	0x500020
<Block for 0x4005ea, 6 bytes>
0x4005ea:	cmp	dword ptr [rbp - 0x48], -1
0x4005ee:	je	0x4005fa
<Block for 0x4004d8, 23 bytes>
0x4004d8:	mov	word ptr [rbp - 0x20], 2
0x4004de:	mov	dword ptr [rbp - 0x1c], 0
0x4004e5:	mov	edi, 0x6987
0x4004ea:	call	0x500028
<Block for 0x4005fa, 6 bytes>
0x4005fa:	cmp	dword ptr [rbp - 0x4c], -1
0x4005fe:	je	0x40060a
<Block for 0x4005f0, 10 bytes>
0x4005f0:	mov	eax, dword ptr [rbp - 0x48]
0x4005f3:	mov	edi, eax
0x4005f5:	call	0x500058
<Block for 0x4004ef, 26 bytes>
0x4004ef:	mov	word ptr [rbp - 0x1e], ax
0x4004f3:	lea	rcx, [rbp - 0x20]
0x4004f7:	mov	eax, dword ptr [rbp - 0x48]
0x4004fa:	mov	edx, 0x10
0x4004ff:	mov	rsi, rcx
0x400502:	mov	edi, eax
0x400504:	call	0x500030
<Block for 0x40060a, 10 bytes>
0x40060a:	mov	qword ptr [rbp - 0x40], 0
0x400612:	jmp	0x400639
<Block for 0x400600, 10 bytes>
0x400600:	mov	eax, dword ptr [rbp - 0x4c]
0x400603:	mov	edi, eax
0x400605:	call	0x500058
<Block for 0x400509, 9 bytes>
0x400509:	cmp	eax, -1
0x40050c:	je	0x4005e3
<Block for 0x400639, 12 bytes>
0x400639:	mov	rax, qword ptr [rbp - 0x38]
0x40063d:	mov	rdi, rax
0x400640:	call	0x500010
<Block for 0x4005e3, 3 bytes>
0x4005e3:	nop	
0x4005e4:	jmp	0x4005ea
<Block for 0x400512, 15 bytes>
0x400512:	mov	eax, dword ptr [rbp - 0x48]
0x400515:	mov	esi, 5
0x40051a:	mov	edi, eax
0x40051c:	call	0x500038
<Block for 0x400645, 6 bytes>
0x400645:	cmp	qword ptr [rbp - 0x40], rax
0x400649:	jb	0x400614
<Block for 0x400521, 9 bytes>
0x400521:	cmp	eax, -1
0x400524:	je	0x4005e6
<Block for 0x400614, 18 bytes>
0x400614:	mov	rdx, qword ptr [rbp - 0x38]
0x400618:	mov	rax, qword ptr [rbp - 0x40]
0x40061c:	add	rax, rdx
0x40061f:	movzx	eax, byte ptr [rax]
0x400622:	cmp	al, 0x53
0x400624:	jne	0x400634
<Block for 0x40064b, 12 bytes>
0x40064b:	mov	rax, qword ptr [rbp - 0x38]
0x40064f:	mov	rdi, rax
0x400652:	call	0x500068
<Block for 0x4005e6, 3 bytes>
0x4005e6:	nop	
0x4005e7:	jmp	0x4005ea
<Block for 0x40052a, 20 bytes>
0x40052a:	mov	eax, dword ptr [rbp - 0x48]
0x40052d:	mov	edx, 0
0x400532:	mov	esi, 0
0x400537:	mov	edi, eax
0x400539:	call	0x500040
<Block for 0x400626, 12 bytes>
0x400626:	lea	rdi, [rip + 0x60]
0x40062d:	call	0x500060
<Block for 0x400634, 17 bytes>
0x400634:	add	qword ptr [rbp - 0x40], 1
0x400639:	mov	rax, qword ptr [rbp - 0x38]
0x40063d:	mov	rdi, rax
0x400640:	call	0x500010
<Block for 0x400657, 16 bytes>
0x400657:	nop	
0x400658:	mov	rax, qword ptr [rbp - 8]
0x40065c:	xor	rax, qword ptr fs:[0x28]
0x400665:	je	0x40066c
<Block for 0x40053e, 13 bytes>
0x40053e:	mov	dword ptr [rbp - 0x4c], eax
0x400541:	cmp	dword ptr [rbp - 0x4c], -1
0x400545:	je	0x4005e9
<Block for 0x400632, 2 bytes>
0x400632:	jmp	0x40064b
<Block for 0x40066c, 2 bytes>
0x40066c:	leave	
0x40066d:	ret	
<Block for 0x400667, 5 bytes>
0x400667:	call	0x500070
<Block for 0x40054b, 39 bytes>
0x40054b:	mov	eax, 0x63
0x400550:	sub	rax, qword ptr [rbp - 0x30]
0x400554:	mov	rdx, rax
0x400557:	mov	rcx, qword ptr [rbp - 0x38]
0x40055b:	mov	rax, qword ptr [rbp - 0x30]
0x40055f:	lea	rsi, [rcx + rax]
0x400563:	mov	eax, dword ptr [rbp - 0x4c]
0x400566:	mov	ecx, 0
0x40056b:	mov	edi, eax
0x40056d:	call	0x500048
<Block for 0x4005e9, 1 bytes>
0x4005e9:	nop	
<Block for 0x400572, 9 bytes>
0x400572:	mov	dword ptr [rbp - 0x44], eax
0x400575:	cmp	dword ptr [rbp - 0x44], -1
0x400579:	je	0x4005ea
<Block for 0x40057b, 6 bytes>
0x40057b:	cmp	dword ptr [rbp - 0x44], 0
0x40057f:	je	0x4005ea
<Block for 0x400581, 40 bytes>
0x400581:	mov	eax, dword ptr [rbp - 0x44]
0x400584:	movsxd	rdx, eax
0x400587:	mov	rax, qword ptr [rbp - 0x30]
0x40058b:	add	rdx, rax
0x40058e:	mov	rax, qword ptr [rbp - 0x38]
0x400592:	add	rax, rdx
0x400595:	mov	byte ptr [rax], 0
0x400598:	mov	rax, qword ptr [rbp - 0x38]
0x40059c:	mov	esi, 0xd
0x4005a1:	mov	rdi, rax
0x4005a4:	call	0x500050
<Block for 0x4005a9, 11 bytes>
0x4005a9:	mov	qword ptr [rbp - 0x28], rax
0x4005ad:	cmp	qword ptr [rbp - 0x28], 0
0x4005b2:	je	0x4005bb
<Block for 0x4005bb, 17 bytes>
0x4005bb:	mov	rax, qword ptr [rbp - 0x38]
0x4005bf:	mov	esi, 0xa
0x4005c4:	mov	rdi, rax
0x4005c7:	call	0x500050
<Block for 0x4005b4, 24 bytes>
0x4005b4:	mov	rax, qword ptr [rbp - 0x28]
0x4005b8:	mov	byte ptr [rax], 0
0x4005bb:	mov	rax, qword ptr [rbp - 0x38]
0x4005bf:	mov	esi, 0xa
0x4005c4:	mov	rdi, rax
0x4005c7:	call	0x500050
<Block for 0x4005cc, 11 bytes>
0x4005cc:	mov	qword ptr [rbp - 0x28], rax
0x4005d0:	cmp	qword ptr [rbp - 0x28], 0
0x4005d5:	je	0x4005ea
<Block for 0x4005d7, 9 bytes>
0x4005d7:	mov	rax, qword ptr [rbp - 0x28]
0x4005db:	mov	byte ptr [rax], 0
0x4005de:	jmp	0x4005ea
