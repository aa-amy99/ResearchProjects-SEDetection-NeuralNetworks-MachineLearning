<Block for 0x400055, 44 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x20
0x400061:	mov	rax, qword ptr fs:[0x28]
0x40006a:	mov	qword ptr [rbp - 8], rax
0x40006e:	xor	eax, eax
0x400070:	mov	esi, 0xa
0x400075:	lea	rdi, [rip + 0xfff94]
0x40007c:	call	0x4001a8
<Block for 0x400081, 19 bytes>
0x400081:	lea	rax, [rbp - 0x12]
0x400085:	mov	rsi, rax
0x400088:	lea	rdi, [rip + 0xfff71]
0x40008f:	call	0x500008
<Block for 0x400094, 16 bytes>
0x400094:	mov	byte ptr [rbp - 9], 0
0x400098:	lea	rax, [rbp - 0x12]
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
<Block for 0x4000a4, 16 bytes>
0x4000a4:	nop	
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	xor	rax, qword ptr fs:[0x28]
0x4000b2:	je	0x4000b9
<Block for 0x4000b9, 2 bytes>
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000b4, 5 bytes>
0x4000b4:	call	0x500018
