<Block for 0x400089, 81 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x20
0x400095:	mov	rax, qword ptr fs:[0x28]
0x40009e:	mov	qword ptr [rbp - 8], rax
0x4000a2:	xor	eax, eax
0x4000a4:	mov	eax, 0x10
0x4000a9:	sub	rax, 1
0x4000ad:	add	rax, 0x6c
0x4000b1:	mov	esi, 0x10
0x4000b6:	mov	edx, 0
0x4000bb:	div	rsi
0x4000be:	imul	rax, rax, 0x10
0x4000c2:	mov	rdx, rax
0x4000c5:	and	rdx, 0xfffffffffffff000
0x4000cc:	mov	rcx, rsp
0x4000cf:	sub	rcx, rdx
0x4000d2:	mov	rdx, rcx
0x4000d5:	cmp	rsp, rdx
0x4000d8:	je	0x4000ec
<Block for 0x4000ec, 26 bytes>
0x4000ec:	mov	rdx, rax
0x4000ef:	and	edx, 0xfff
0x4000f5:	sub	rsp, rdx
0x4000f8:	mov	rdx, rax
0x4000fb:	and	edx, 0xfff
0x400101:	test	rdx, rdx
0x400104:	je	0x400116
<Block for 0x4000da, 18 bytes>
0x4000da:	sub	rsp, 0x1000
0x4000e1:	or	qword ptr [rsp + 0xff8], 0
0x4000ea:	jmp	0x4000d5
<Block for 0x400116, 41 bytes>
0x400116:	mov	rax, rsp
0x400119:	add	rax, 0xf
0x40011d:	shr	rax, 4
0x400121:	shl	rax, 4
0x400125:	mov	qword ptr [rbp - 0x18], rax
0x400129:	mov	rax, qword ptr [rbp - 0x18]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x41
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x400106, 57 bytes>
0x400106:	and	eax, 0xfff
0x40010b:	sub	rax, 8
0x40010f:	add	rax, rsp
0x400112:	or	qword ptr [rax], 0
0x400116:	mov	rax, rsp
0x400119:	add	rax, 0xf
0x40011d:	shr	rax, 4
0x400121:	shl	rax, 4
0x400125:	mov	qword ptr [rbp - 0x18], rax
0x400129:	mov	rax, qword ptr [rbp - 0x18]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x41
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x4000d5, 5 bytes>
0x4000d5:	cmp	rsp, rdx
0x4000d8:	je	0x4000ec
<Block for 0x40013f, 44 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x18]
0x400143:	add	rax, 0x63
0x400147:	mov	byte ptr [rax], 0
0x40014a:	mov	rax, qword ptr [rbp - 0x18]
0x40014e:	sub	rax, 8
0x400152:	mov	qword ptr [rbp - 0x10], rax
0x400156:	mov	rax, qword ptr [rbp - 0x10]
0x40015a:	mov	qword ptr [rip + 0x1b7], rax
0x400161:	mov	eax, 0
0x400166:	call	0x400000
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500020
