<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0xfffdf]
0x400021:	test	eax, eax
0x400023:	je	0x4000b2
<Block for 0x4000b2, 16 bytes>
0x4000b2:	nop	
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	xor	rax, qword ptr fs:[0x28]
0x4000c0:	je	0x4000c7
<Block for 0x400029, 27 bytes>
0x400029:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400030:	mov	edx, 6
0x400035:	mov	esi, 1
0x40003a:	mov	edi, 2
0x40003f:	call	0x500008
<Block for 0x4000c7, 2 bytes>
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500038
<Block for 0x400044, 9 bytes>
0x400044:	mov	dword ptr [rbp - 0x24], eax
0x400047:	cmp	dword ptr [rbp - 0x24], -1
0x40004b:	je	0x4000a1
<Block for 0x40004d, 22 bytes>
0x40004d:	lea	rax, [rbp - 0x20]
0x400051:	mov	edx, 0x10
0x400056:	mov	esi, 0
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
<Block for 0x4000a1, 1 bytes>
0x4000a1:	nop	
<Block for 0x400063, 18 bytes>
0x400063:	mov	word ptr [rbp - 0x20], 2
0x400069:	lea	rdi, [rip + 0x59]
0x400070:	call	0x500018
<Block for 0x4000a2, 6 bytes>
0x4000a2:	cmp	dword ptr [rbp - 0x24], -1
0x4000a6:	je	0x4000b2
<Block for 0x400075, 13 bytes>
0x400075:	mov	dword ptr [rbp - 0x1c], eax
0x400078:	mov	edi, 0x50
0x40007d:	call	0x500020
<Block for 0x4000a8, 10 bytes>
0x4000a8:	mov	eax, dword ptr [rbp - 0x24]
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500030
<Block for 0x400082, 26 bytes>
0x400082:	mov	word ptr [rbp - 0x1e], ax
0x400086:	lea	rcx, [rbp - 0x20]
0x40008a:	mov	eax, dword ptr [rbp - 0x24]
0x40008d:	mov	edx, 0x10
0x400092:	mov	rsi, rcx
0x400095:	mov	edi, eax
0x400097:	call	0x500028
<Block for 0x40009c, 5 bytes>
0x40009c:	cmp	eax, -1
0x40009f:	jmp	0x4000a2
