<Block for 0x400054, 17 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	sub	rsp, 0x10
0x400060:	call	0x500020
<Block for 0x400065, 9 bytes>
0x400065:	test	eax, eax
0x400067:	setne	al
0x40006a:	test	al, al
0x40006c:	je	0x40007c
<Block for 0x40007c, 17 bytes>
0x40007c:	mov	dword ptr [rbp - 0x10], 5
0x400083:	mov	edi, 4
0x400088:	call	0x500008
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rdi, [rip + 0xca]
0x400075:	call	0x500028
<Block for 0x40008d, 32 bytes>
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	mov	edx, dword ptr [rbp - 0x10]
0x400098:	mov	dword ptr [rax], edx
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	mov	eax, dword ptr [rax]
0x4000a0:	mov	dword ptr [rbp - 0xc], eax
0x4000a3:	mov	eax, dword ptr [rbp - 0xc]
0x4000a6:	mov	edi, eax
0x4000a8:	call	0x500018
<Block for 0x40007a, 2 bytes>
0x40007a:	jmp	0x4000c3
<Block for 0x4000ad, 9 bytes>
0x4000ad:	mov	rax, qword ptr [rbp - 8]
0x4000b1:	test	rax, rax
0x4000b4:	je	0x4000c3
<Block for 0x4000c3, 3 bytes>
0x4000c3:	nop	
0x4000c4:	leave	
0x4000c5:	ret	
<Block for 0x4000b6, 13 bytes>
0x4000b6:	mov	esi, 4
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500010
