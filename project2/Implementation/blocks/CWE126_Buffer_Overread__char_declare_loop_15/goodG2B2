<Block for 0x40020e, 55 bytes>
0x40020e:	endbr64	
0x400212:	push	rbp
0x400213:	mov	rbp, rsp
0x400216:	sub	rsp, 0x140
0x40021d:	mov	rax, qword ptr fs:[0x28]
0x400226:	mov	qword ptr [rbp - 8], rax
0x40022a:	xor	eax, eax
0x40022c:	lea	rax, [rbp - 0x120]
0x400233:	mov	edx, 0x31
0x400238:	mov	esi, 0x41
0x40023d:	mov	rdi, rax
0x400240:	call	0x500000
<Block for 0x400245, 32 bytes>
0x400245:	mov	byte ptr [rbp - 0xef], 0
0x40024c:	lea	rax, [rbp - 0xe0]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x41
0x40025d:	mov	rdi, rax
0x400260:	call	0x500000
<Block for 0x400265, 41 bytes>
0x400265:	mov	byte ptr [rbp - 0x7d], 0
0x400269:	lea	rax, [rbp - 0xe0]
0x400270:	mov	qword ptr [rbp - 0x130], rax
0x400277:	nop	
0x400278:	lea	rax, [rbp - 0x70]
0x40027c:	mov	edx, 0x63
0x400281:	mov	esi, 0x43
0x400286:	mov	rdi, rax
0x400289:	call	0x500000
<Block for 0x40028e, 16 bytes>
0x40028e:	mov	byte ptr [rbp - 0xd], 0
0x400292:	lea	rax, [rbp - 0x70]
0x400296:	mov	rdi, rax
0x400299:	call	0x500008
<Block for 0x40029e, 20 bytes>
0x40029e:	mov	qword ptr [rbp - 0x128], rax
0x4002a5:	mov	qword ptr [rbp - 0x138], 0
0x4002b0:	jmp	0x4002de
<Block for 0x4002de, 16 bytes>
0x4002de:	mov	rax, qword ptr [rbp - 0x138]
0x4002e5:	cmp	rax, qword ptr [rbp - 0x128]
0x4002ec:	jb	0x4002b2
<Block for 0x4002b2, 60 bytes>
0x4002b2:	mov	rdx, qword ptr [rbp - 0x130]
0x4002b9:	mov	rax, qword ptr [rbp - 0x138]
0x4002c0:	add	rax, rdx
0x4002c3:	movzx	eax, byte ptr [rax]
0x4002c6:	lea	rcx, [rbp - 0x70]
0x4002ca:	mov	rdx, qword ptr [rbp - 0x138]
0x4002d1:	add	rdx, rcx
0x4002d4:	mov	byte ptr [rdx], al
0x4002d6:	add	qword ptr [rbp - 0x138], 1
0x4002de:	mov	rax, qword ptr [rbp - 0x138]
0x4002e5:	cmp	rax, qword ptr [rbp - 0x128]
0x4002ec:	jb	0x4002b2
<Block for 0x4002ee, 16 bytes>
0x4002ee:	mov	byte ptr [rbp - 0xd], 0
0x4002f2:	lea	rax, [rbp - 0x70]
0x4002f6:	mov	rdi, rax
0x4002f9:	call	0x500010
<Block for 0x4002fe, 16 bytes>
0x4002fe:	nop	
0x4002ff:	mov	rax, qword ptr [rbp - 8]
0x400303:	xor	rax, qword ptr fs:[0x28]
0x40030c:	je	0x400313
<Block for 0x400313, 2 bytes>
0x400313:	leave	
0x400314:	ret	
<Block for 0x40030e, 5 bytes>
0x40030e:	call	0x500018
