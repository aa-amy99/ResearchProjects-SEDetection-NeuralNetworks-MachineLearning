<Block for 0x400273, 37 bytes>
0x400273:	endbr64	
0x400277:	push	rbp
0x400278:	mov	rbp, rsp
0x40027b:	sub	rsp, 0x60
0x40027f:	mov	rax, qword ptr fs:[0x28]
0x400288:	mov	qword ptr [rbp - 8], rax
0x40028c:	xor	eax, eax
0x40028e:	mov	edi, 0x64
0x400293:	call	0x500000
<Block for 0x400298, 11 bytes>
0x400298:	mov	qword ptr [rbp - 0x38], rax
0x40029c:	cmp	qword ptr [rbp - 0x38], 0
0x4002a1:	jne	0x4002ad
<Block for 0x4002a3, 10 bytes>
0x4002a3:	mov	edi, 0xffffffff
0x4002a8:	call	0x500008
<Block for 0x4002ad, 33 bytes>
0x4002ad:	mov	rax, qword ptr [rbp - 0x38]
0x4002b1:	mov	byte ptr [rax], 0
0x4002b4:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4002bb:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4002c2:	mov	rax, qword ptr [rbp - 0x38]
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x500010
<Block for 0x4002ce, 24 bytes>
0x4002ce:	mov	qword ptr [rbp - 0x30], rax
0x4002d2:	mov	edx, 6
0x4002d7:	mov	esi, 1
0x4002dc:	mov	edi, 2
0x4002e1:	call	0x500018
<Block for 0x4002e6, 13 bytes>
0x4002e6:	mov	dword ptr [rbp - 0x50], eax
0x4002e9:	cmp	dword ptr [rbp - 0x50], -1
0x4002ed:	je	0x400411
<Block for 0x400411, 3 bytes>
0x400411:	nop	
0x400412:	jmp	0x40041b
<Block for 0x4002f3, 22 bytes>
0x4002f3:	lea	rax, [rbp - 0x20]
0x4002f7:	mov	edx, 0x10
0x4002fc:	mov	esi, 0
0x400301:	mov	rdi, rax
0x400304:	call	0x500020
<Block for 0x40041b, 6 bytes>
0x40041b:	cmp	dword ptr [rbp - 0x50], -1
0x40041f:	je	0x40042b
<Block for 0x400309, 23 bytes>
0x400309:	mov	word ptr [rbp - 0x20], 2
0x40030f:	mov	dword ptr [rbp - 0x1c], 0
0x400316:	mov	edi, 0x6987
0x40031b:	call	0x500028
<Block for 0x40042b, 6 bytes>
0x40042b:	cmp	dword ptr [rbp - 0x54], -1
0x40042f:	je	0x40043b
<Block for 0x400421, 10 bytes>
0x400421:	mov	eax, dword ptr [rbp - 0x50]
0x400424:	mov	edi, eax
0x400426:	call	0x500058
<Block for 0x400320, 26 bytes>
0x400320:	mov	word ptr [rbp - 0x1e], ax
0x400324:	lea	rcx, [rbp - 0x20]
0x400328:	mov	eax, dword ptr [rbp - 0x50]
0x40032b:	mov	edx, 0x10
0x400330:	mov	rsi, rcx
0x400333:	mov	edi, eax
0x400335:	call	0x500030
<Block for 0x40043b, 10 bytes>
0x40043b:	mov	eax, 0
0x400440:	call	0x500060
<Block for 0x400431, 10 bytes>
0x400431:	mov	eax, dword ptr [rbp - 0x54]
0x400434:	mov	edi, eax
0x400436:	call	0x500058
<Block for 0x40033a, 9 bytes>
0x40033a:	cmp	eax, -1
0x40033d:	je	0x400414
<Block for 0x400445, 4 bytes>
0x400445:	test	eax, eax
0x400447:	je	0x400498
<Block for 0x400414, 3 bytes>
0x400414:	nop	
0x400415:	jmp	0x40041b
<Block for 0x400343, 15 bytes>
0x400343:	mov	eax, dword ptr [rbp - 0x50]
0x400346:	mov	esi, 5
0x40034b:	mov	edi, eax
0x40034d:	call	0x500038
<Block for 0x400498, 10 bytes>
0x400498:	mov	qword ptr [rbp - 0x40], 0
0x4004a0:	jmp	0x4004c7
<Block for 0x400449, 10 bytes>
0x400449:	mov	qword ptr [rbp - 0x48], 0
0x400451:	jmp	0x400478
<Block for 0x400352, 9 bytes>
0x400352:	cmp	eax, -1
0x400355:	je	0x400417
<Block for 0x4004c7, 12 bytes>
0x4004c7:	mov	rax, qword ptr [rbp - 0x38]
0x4004cb:	mov	rdi, rax
0x4004ce:	call	0x500010
<Block for 0x400478, 12 bytes>
0x400478:	mov	rax, qword ptr [rbp - 0x38]
0x40047c:	mov	rdi, rax
0x40047f:	call	0x500010
<Block for 0x400417, 3 bytes>
0x400417:	nop	
0x400418:	jmp	0x40041b
<Block for 0x40035b, 20 bytes>
0x40035b:	mov	eax, dword ptr [rbp - 0x50]
0x40035e:	mov	edx, 0
0x400363:	mov	esi, 0
0x400368:	mov	edi, eax
0x40036a:	call	0x500040
<Block for 0x4004d3, 6 bytes>
0x4004d3:	cmp	qword ptr [rbp - 0x40], rax
0x4004d7:	jb	0x4004a2
<Block for 0x400484, 6 bytes>
0x400484:	cmp	qword ptr [rbp - 0x48], rax
0x400488:	jb	0x400453
<Block for 0x40036f, 13 bytes>
0x40036f:	mov	dword ptr [rbp - 0x54], eax
0x400372:	cmp	dword ptr [rbp - 0x54], -1
0x400376:	je	0x40041a
<Block for 0x4004a2, 18 bytes>
0x4004a2:	mov	rdx, qword ptr [rbp - 0x38]
0x4004a6:	mov	rax, qword ptr [rbp - 0x40]
0x4004aa:	add	rax, rdx
0x4004ad:	movzx	eax, byte ptr [rax]
0x4004b0:	cmp	al, 0x53
0x4004b2:	jne	0x4004c2
<Block for 0x4004d9, 12 bytes>
0x4004d9:	mov	rax, qword ptr [rbp - 0x38]
0x4004dd:	mov	rdi, rax
0x4004e0:	call	0x500070
<Block for 0x400453, 18 bytes>
0x400453:	mov	rdx, qword ptr [rbp - 0x38]
0x400457:	mov	rax, qword ptr [rbp - 0x48]
0x40045b:	add	rax, rdx
0x40045e:	movzx	eax, byte ptr [rax]
0x400461:	cmp	al, 0x53
0x400463:	jne	0x400473
<Block for 0x40048a, 12 bytes>
0x40048a:	mov	rax, qword ptr [rbp - 0x38]
0x40048e:	mov	rdi, rax
0x400491:	call	0x500070
<Block for 0x40037c, 39 bytes>
0x40037c:	mov	eax, 0x63
0x400381:	sub	rax, qword ptr [rbp - 0x30]
0x400385:	mov	rdx, rax
0x400388:	mov	rcx, qword ptr [rbp - 0x38]
0x40038c:	mov	rax, qword ptr [rbp - 0x30]
0x400390:	lea	rsi, [rcx + rax]
0x400394:	mov	eax, dword ptr [rbp - 0x54]
0x400397:	mov	ecx, 0
0x40039c:	mov	edi, eax
0x40039e:	call	0x500048
<Block for 0x40041a, 1 bytes>
0x40041a:	nop	
<Block for 0x4004b4, 12 bytes>
0x4004b4:	lea	rdi, [rip + 0x56]
0x4004bb:	call	0x500068
<Block for 0x4004c2, 17 bytes>
0x4004c2:	add	qword ptr [rbp - 0x40], 1
0x4004c7:	mov	rax, qword ptr [rbp - 0x38]
0x4004cb:	mov	rdi, rax
0x4004ce:	call	0x500010
<Block for 0x4004e5, 16 bytes>
0x4004e5:	nop	
0x4004e6:	mov	rax, qword ptr [rbp - 8]
0x4004ea:	xor	rax, qword ptr fs:[0x28]
0x4004f3:	je	0x4004fa
<Block for 0x400465, 12 bytes>
0x400465:	lea	rdi, [rip + 0xa5]
0x40046c:	call	0x500068
<Block for 0x400473, 17 bytes>
0x400473:	add	qword ptr [rbp - 0x48], 1
0x400478:	mov	rax, qword ptr [rbp - 0x38]
0x40047c:	mov	rdi, rax
0x40047f:	call	0x500010
<Block for 0x400496, 2 bytes>
0x400496:	jmp	0x4004e5
<Block for 0x4003a3, 9 bytes>
0x4003a3:	mov	dword ptr [rbp - 0x4c], eax
0x4003a6:	cmp	dword ptr [rbp - 0x4c], -1
0x4003aa:	je	0x40041b
<Block for 0x4004c0, 2 bytes>
0x4004c0:	jmp	0x4004d9
<Block for 0x4004fa, 2 bytes>
0x4004fa:	leave	
0x4004fb:	ret	
<Block for 0x4004f5, 5 bytes>
0x4004f5:	call	0x500078
<Block for 0x400471, 2 bytes>
0x400471:	jmp	0x40048a
<Block for 0x4003ac, 6 bytes>
0x4003ac:	cmp	dword ptr [rbp - 0x4c], 0
0x4003b0:	je	0x40041b
<Block for 0x4003b2, 40 bytes>
0x4003b2:	mov	eax, dword ptr [rbp - 0x4c]
0x4003b5:	movsxd	rdx, eax
0x4003b8:	mov	rax, qword ptr [rbp - 0x30]
0x4003bc:	add	rdx, rax
0x4003bf:	mov	rax, qword ptr [rbp - 0x38]
0x4003c3:	add	rax, rdx
0x4003c6:	mov	byte ptr [rax], 0
0x4003c9:	mov	rax, qword ptr [rbp - 0x38]
0x4003cd:	mov	esi, 0xd
0x4003d2:	mov	rdi, rax
0x4003d5:	call	0x500050
<Block for 0x4003da, 11 bytes>
0x4003da:	mov	qword ptr [rbp - 0x28], rax
0x4003de:	cmp	qword ptr [rbp - 0x28], 0
0x4003e3:	je	0x4003ec
<Block for 0x4003ec, 17 bytes>
0x4003ec:	mov	rax, qword ptr [rbp - 0x38]
0x4003f0:	mov	esi, 0xa
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500050
<Block for 0x4003e5, 24 bytes>
0x4003e5:	mov	rax, qword ptr [rbp - 0x28]
0x4003e9:	mov	byte ptr [rax], 0
0x4003ec:	mov	rax, qword ptr [rbp - 0x38]
0x4003f0:	mov	esi, 0xa
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500050
<Block for 0x4003fd, 11 bytes>
0x4003fd:	mov	qword ptr [rbp - 0x28], rax
0x400401:	cmp	qword ptr [rbp - 0x28], 0
0x400406:	je	0x40041b
<Block for 0x400408, 9 bytes>
0x400408:	mov	rax, qword ptr [rbp - 0x28]
0x40040c:	mov	byte ptr [rax], 0
0x40040f:	jmp	0x40041b
