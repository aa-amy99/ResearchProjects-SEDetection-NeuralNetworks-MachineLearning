<Block for 0x4000f4, 21 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x10
0x400100:	mov	eax, 1
0x400105:	test	eax, eax
0x400107:	je	0x40016b
<Block for 0x40016b, 3 bytes>
0x40016b:	nop	
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500000
<Block for 0x40010e, 55 bytes>
0x40010e:	mov	edx, eax
0x400110:	movsxd	rax, edx
0x400113:	imul	rax, rax, 0x55555556
0x40011a:	shr	rax, 0x20
0x40011e:	mov	rcx, rax
0x400121:	mov	eax, edx
0x400123:	sar	eax, 0x1f
0x400126:	mov	esi, ecx
0x400128:	sub	esi, eax
0x40012a:	mov	eax, esi
0x40012c:	mov	dword ptr [rbp - 4], eax
0x40012f:	mov	ecx, dword ptr [rbp - 4]
0x400132:	mov	eax, ecx
0x400134:	add	eax, eax
0x400136:	add	eax, ecx
0x400138:	sub	edx, eax
0x40013a:	mov	eax, edx
0x40013c:	mov	dword ptr [rbp - 4], eax
0x40013f:	cmp	dword ptr [rbp - 4], 0
0x400143:	jne	0x400153
<Block for 0x400145, 12 bytes>
0x400145:	lea	rdi, [rip + 0x8c]
0x40014c:	call	0x500008
<Block for 0x400153, 12 bytes>
0x400153:	lea	rdi, [rip + 0x3e]
0x40015a:	call	0x500008
<Block for 0x400151, 2 bytes>
0x400151:	jmp	0x40015f
<Block for 0x40015f, 12 bytes>
0x40015f:	lea	rdi, [rip + 0x8a]
0x400166:	call	0x500008
