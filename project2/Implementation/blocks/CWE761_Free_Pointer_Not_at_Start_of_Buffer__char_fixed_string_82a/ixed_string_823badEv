<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	edi, 0x64
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	qword ptr [rbp - 0x20], rax
0x40001b:	cmp	qword ptr [rbp - 0x20], 0
0x400020:	jne	0x40002c
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0xffffffff
0x400027:	call	0x500008
<Block for 0x40002c, 45 bytes>
0x40002c:	mov	rax, qword ptr [rbp - 0x20]
0x400030:	mov	byte ptr [rax], 0
0x400033:	mov	rax, qword ptr [rbp - 0x20]
0x400037:	movabs	rdx, 0x7453206465786946
0x400041:	mov	qword ptr [rax], rdx
0x400044:	mov	dword ptr [rax + 8], 0x676e6972
0x40004b:	mov	byte ptr [rax + 0xc], 0
0x40004f:	mov	edi, 8
0x400054:	call	0x500010
<Block for 0x400059, 11 bytes>
0x400059:	mov	rbx, rax
0x40005c:	mov	rdi, rbx
0x40005f:	call	0x40016e
<Block for 0x400064, 30 bytes>
0x400064:	mov	qword ptr [rbp - 0x18], rbx
0x400068:	mov	rax, qword ptr [rbp - 0x18]
0x40006c:	mov	rax, qword ptr [rax]
0x40006f:	mov	rcx, qword ptr [rax]
0x400072:	mov	rdx, qword ptr [rbp - 0x20]
0x400076:	mov	rax, qword ptr [rbp - 0x18]
0x40007a:	mov	rsi, rdx
0x40007d:	mov	rdi, rax
0x400080:	call	rcx
<Block for 0x400082, 9 bytes>
0x400082:	mov	rax, qword ptr [rbp - 0x18]
0x400086:	test	rax, rax
0x400089:	je	0x400098
<Block for 0x400098, 8 bytes>
0x400098:	nop	
0x400099:	add	rsp, 0x18
0x40009d:	pop	rbx
0x40009e:	pop	rbp
0x40009f:	ret	
<Block for 0x40008b, 13 bytes>
0x40008b:	mov	esi, 8
0x400090:	mov	rdi, rax
0x400093:	call	0x500018
