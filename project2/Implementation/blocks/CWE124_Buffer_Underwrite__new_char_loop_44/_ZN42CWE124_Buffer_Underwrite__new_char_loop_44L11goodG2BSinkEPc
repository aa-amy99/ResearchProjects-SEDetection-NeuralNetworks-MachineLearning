<Block for 0x400111, 59 bytes>
0x400111:	endbr64	
0x400115:	push	rbp
0x400116:	mov	rbp, rsp
0x400119:	sub	rsp, 0x90
0x400120:	mov	qword ptr [rbp - 0x88], rdi
0x400127:	mov	rax, qword ptr fs:[0x28]
0x400130:	mov	qword ptr [rbp - 8], rax
0x400134:	xor	eax, eax
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	edx, 0x63
0x40013f:	mov	esi, 0x43
0x400144:	mov	rdi, rax
0x400147:	call	0x500000
<Block for 0x40014c, 19 bytes>
0x40014c:	mov	byte ptr [rbp - 0xd], 0
0x400150:	mov	qword ptr [rbp - 0x78], 0
0x400158:	cmp	qword ptr [rbp - 0x78], 0x63
0x40015d:	ja	0x400184
<Block for 0x40015f, 37 bytes>
0x40015f:	mov	rdx, qword ptr [rbp - 0x88]
0x400166:	mov	rax, qword ptr [rbp - 0x78]
0x40016a:	add	rdx, rax
0x40016d:	lea	rcx, [rbp - 0x70]
0x400171:	mov	rax, qword ptr [rbp - 0x78]
0x400175:	add	rax, rcx
0x400178:	movzx	eax, byte ptr [rax]
0x40017b:	mov	byte ptr [rdx], al
0x40017d:	add	qword ptr [rbp - 0x78], 1
0x400182:	jmp	0x400158
<Block for 0x400184, 29 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0x88]
0x40018b:	add	rax, 0x63
0x40018f:	mov	byte ptr [rax], 0
0x400192:	mov	rax, qword ptr [rbp - 0x88]
0x400199:	mov	rdi, rax
0x40019c:	call	0x500008
<Block for 0x400158, 7 bytes>
0x400158:	cmp	qword ptr [rbp - 0x78], 0x63
0x40015d:	ja	0x400184
<Block for 0x4001a1, 16 bytes>
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	xor	rax, qword ptr fs:[0x28]
0x4001af:	je	0x4001b6
<Block for 0x4001b6, 2 bytes>
0x4001b6:	leave	
0x4001b7:	ret	
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500010
