<Block for 0x400216, 88 bytes>
0x400216:	endbr64	
0x40021a:	push	rbp
0x40021b:	mov	rbp, rsp
0x40021e:	sub	rsp, 0x40
0x400222:	mov	rax, qword ptr fs:[0x28]
0x40022b:	mov	qword ptr [rbp - 8], rax
0x40022f:	xor	eax, eax
0x400231:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400238:	mov	dword ptr [rbp - 0x34], 7
0x40023f:	nop	
0x400240:	mov	qword ptr [rbp - 0x30], 0
0x400248:	mov	qword ptr [rbp - 0x28], 0
0x400250:	mov	qword ptr [rbp - 0x20], 0
0x400258:	mov	qword ptr [rbp - 0x18], 0
0x400260:	mov	qword ptr [rbp - 0x10], 0
0x400268:	cmp	dword ptr [rbp - 0x34], 9
0x40026c:	jg	0x4002a0
<Block for 0x40026e, 22 bytes>
0x40026e:	mov	eax, dword ptr [rbp - 0x34]
0x400271:	cdqe	
0x400273:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40027b:	mov	dword ptr [rbp - 0x38], 0
0x400282:	jmp	0x400298
<Block for 0x4002a0, 12 bytes>
0x4002a0:	lea	rdi, [rip + 0x101]
0x4002a7:	call	0x500008
<Block for 0x400298, 6 bytes>
0x400298:	cmp	dword ptr [rbp - 0x38], 9
0x40029c:	jle	0x400284
<Block for 0x4002ac, 17 bytes>
0x4002ac:	nop	
0x4002ad:	nop	
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	xor	rax, qword ptr fs:[0x28]
0x4002bb:	je	0x4002c2
<Block for 0x400284, 16 bytes>
0x400284:	mov	eax, dword ptr [rbp - 0x38]
0x400287:	cdqe	
0x400289:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40028d:	mov	edi, eax
0x40028f:	call	0x500000
<Block for 0x40029e, 2 bytes>
0x40029e:	jmp	0x4002ac
<Block for 0x4002c2, 2 bytes>
0x4002c2:	leave	
0x4002c3:	ret	
<Block for 0x4002bd, 5 bytes>
0x4002bd:	call	0x500010
<Block for 0x400294, 10 bytes>
0x400294:	add	dword ptr [rbp - 0x38], 1
0x400298:	cmp	dword ptr [rbp - 0x38], 9
0x40029c:	jle	0x400284
