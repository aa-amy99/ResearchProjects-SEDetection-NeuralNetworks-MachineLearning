<Block for 0x40027b, 46 bytes>
0x40027b:	endbr64	
0x40027f:	push	rbp
0x400280:	mov	rbp, rsp
0x400283:	push	rbx
0x400284:	sub	rsp, 0x168
0x40028b:	mov	rax, qword ptr fs:[0x28]
0x400294:	mov	qword ptr [rbp - 0x18], rax
0x400298:	xor	eax, eax
0x40029a:	lea	rax, [rbp - 0x160]
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x400548
<Block for 0x4002a9, 52 bytes>
0x4002a9:	movabs	rax, 0x3d48544150
0x4002b3:	mov	edx, 0
0x4002b8:	mov	qword ptr [rbp - 0x120], rax
0x4002bf:	mov	qword ptr [rbp - 0x118], rdx
0x4002c6:	lea	rdx, [rbp - 0x110]
0x4002cd:	mov	eax, 0
0x4002d2:	mov	ecx, 0x1d
0x4002d7:	mov	rdi, rdx
0x4002da:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002dd, 54 bytes>
0x4002dd:	mov	rdx, rdi
0x4002e0:	mov	word ptr [rdx], ax
0x4002e3:	add	rdx, 2
0x4002e7:	lea	rax, [rbp - 0x120]
0x4002ee:	mov	qword ptr [rbp - 0x170], rax
0x4002f5:	mov	rdx, qword ptr [rbp - 0x170]
0x4002fc:	mov	rax, rdx
0x4002ff:	mov	rcx, -1
0x400306:	mov	rsi, rax
0x400309:	mov	eax, 0
0x40030e:	mov	rdi, rsi
0x400311:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002da, 3 bytes>
0x4002da:	rep stosq	qword ptr [rdi], rax
<Block for 0x400313, 38 bytes>
0x400313:	mov	rax, rcx
0x400316:	not	rax
0x400319:	sub	rax, 1
0x40031d:	add	rax, rdx
0x400320:	mov	dword ptr [rax], 0x6e69622f
0x400326:	mov	byte ptr [rax + 4], 0
0x40032a:	lea	rax, [rbp - 0x160]
0x400331:	mov	rdi, rax
0x400334:	call	0x4006da
<Block for 0x400311, 2 bytes>
0x400311:	repne scasb	al, byte ptr [rdi]
<Block for 0x400339, 32 bytes>
0x400339:	mov	qword ptr [rbp - 0x168], rax
0x400340:	lea	rdx, [rbp - 0x168]
0x400347:	lea	rax, [rbp - 0x140]
0x40034e:	mov	rsi, rdx
0x400351:	mov	rdi, rax
0x400354:	call	0x40072a
<Block for 0x400359, 37 bytes>
0x400359:	lea	rdx, [rbp - 0x170]
0x400360:	mov	rsi, qword ptr [rbp - 0x140]
0x400367:	lea	rax, [rbp - 0x160]
0x40036e:	mov	rcx, rdx
0x400371:	mov	edx, 1
0x400376:	mov	rdi, rax
0x400379:	call	0x400758
<Block for 0x40037e, 15 bytes>
0x40037e:	lea	rax, [rbp - 0x160]
0x400385:	mov	rdi, rax
0x400388:	call	0x4006da
<Block for 0x40038d, 32 bytes>
0x40038d:	mov	qword ptr [rbp - 0x168], rax
0x400394:	lea	rdx, [rbp - 0x168]
0x40039b:	lea	rax, [rbp - 0x140]
0x4003a2:	mov	rsi, rdx
0x4003a5:	mov	rdi, rax
0x4003a8:	call	0x40072a
<Block for 0x4003ad, 37 bytes>
0x4003ad:	lea	rdx, [rbp - 0x170]
0x4003b4:	mov	rsi, qword ptr [rbp - 0x140]
0x4003bb:	lea	rax, [rbp - 0x160]
0x4003c2:	mov	rcx, rdx
0x4003c5:	mov	edx, 1
0x4003ca:	mov	rdi, rax
0x4003cd:	call	0x400758
<Block for 0x4003d2, 15 bytes>
0x4003d2:	lea	rax, [rbp - 0x160]
0x4003d9:	mov	rdi, rax
0x4003dc:	call	0x4006da
<Block for 0x4003e1, 32 bytes>
0x4003e1:	mov	qword ptr [rbp - 0x168], rax
0x4003e8:	lea	rdx, [rbp - 0x168]
0x4003ef:	lea	rax, [rbp - 0x140]
0x4003f6:	mov	rsi, rdx
0x4003f9:	mov	rdi, rax
0x4003fc:	call	0x40072a
<Block for 0x400401, 37 bytes>
0x400401:	lea	rdx, [rbp - 0x170]
0x400408:	mov	rsi, qword ptr [rbp - 0x140]
0x40040f:	lea	rax, [rbp - 0x160]
0x400416:	mov	rcx, rdx
0x400419:	mov	edx, 1
0x40041e:	mov	rdi, rax
0x400421:	call	0x400758
<Block for 0x400426, 25 bytes>
0x400426:	lea	rdx, [rbp - 0x160]
0x40042d:	lea	rax, [rbp - 0x140]
0x400434:	mov	rsi, rdx
0x400437:	mov	rdi, rax
0x40043a:	call	0x40081e
<Block for 0x40043f, 15 bytes>
0x40043f:	lea	rax, [rbp - 0x140]
0x400446:	mov	rdi, rax
0x400449:	call	0x500030
<Block for 0x40044e, 15 bytes>
0x40044e:	lea	rax, [rbp - 0x140]
0x400455:	mov	rdi, rax
0x400458:	call	0x400692
<Block for 0x40045d, 15 bytes>
0x40045d:	lea	rax, [rbp - 0x160]
0x400464:	mov	rdi, rax
0x400467:	call	0x400692
<Block for 0x40046c, 16 bytes>
0x40046c:	nop	
0x40046d:	mov	rax, qword ptr [rbp - 0x18]
0x400471:	xor	rax, qword ptr fs:[0x28]
0x40047a:	je	0x4004bc
<Block for 0x4004bc, 10 bytes>
0x4004bc:	add	rsp, 0x168
0x4004c3:	pop	rbx
0x4004c4:	pop	rbp
0x4004c5:	ret	
<Block for 0x40047c, 2 bytes>
0x40047c:	jmp	0x4004b7
<Block for 0x4004b7, 5 bytes>
0x4004b7:	call	0x500028
