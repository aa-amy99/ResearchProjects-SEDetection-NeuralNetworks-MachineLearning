<Block for 0x40007b, 69 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x20
0x400087:	mov	rax, qword ptr fs:[0x28]
0x400090:	mov	qword ptr [rbp - 8], rax
0x400094:	xor	eax, eax
0x400096:	lea	rax, [rbp - 0x18]
0x40009a:	mov	qword ptr [rbp - 0x10], rax
0x40009e:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x4000a5:	mov	edx, 0x180
0x4000aa:	mov	esi, 0x42
0x4000af:	lea	rdi, [rip + 0x4d]
0x4000b6:	mov	eax, 0
0x4000bb:	call	0x500000
<Block for 0x4000c0, 18 bytes>
0x4000c0:	mov	dword ptr [rbp - 0x18], eax
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	mov	eax, dword ptr [rax]
0x4000c9:	mov	dword ptr [rbp - 0x14], eax
0x4000cc:	cmp	dword ptr [rbp - 0x14], -1
0x4000d0:	je	0x4000dc
<Block for 0x4000dc, 16 bytes>
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 8]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x4000f1
<Block for 0x4000d2, 10 bytes>
0x4000d2:	mov	eax, dword ptr [rbp - 0x14]
0x4000d5:	mov	edi, eax
0x4000d7:	call	0x500018
<Block for 0x4000f1, 2 bytes>
0x4000f1:	leave	
0x4000f2:	ret	
<Block for 0x4000ec, 5 bytes>
0x4000ec:	call	0x500010
