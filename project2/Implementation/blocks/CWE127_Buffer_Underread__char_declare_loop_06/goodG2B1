<Block for 0x4000db, 55 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	sub	rsp, 0xf0
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	lea	rax, [rbp - 0xe0]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x41
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x400112, 14 bytes>
0x400112:	mov	byte ptr [rbp - 0x7d], 0
0x400116:	mov	eax, 5
0x40011b:	cmp	eax, 5
0x40011e:	je	0x40012e
<Block for 0x40012e, 36 bytes>
0x40012e:	lea	rax, [rbp - 0xe0]
0x400135:	mov	qword ptr [rbp - 0xf0], rax
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x43
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500000
<Block for 0x400120, 12 bytes>
0x400120:	lea	rdi, [rip + 0x195]
0x400127:	call	0x500008
<Block for 0x400152, 17 bytes>
0x400152:	mov	byte ptr [rbp - 0xd], 0
0x400156:	mov	qword ptr [rbp - 0xe8], 0
0x400161:	jmp	0x40018f
<Block for 0x40012c, 2 bytes>
0x40012c:	jmp	0x40013c
<Block for 0x40018f, 10 bytes>
0x40018f:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400197:	jbe	0x400163
<Block for 0x40013c, 22 bytes>
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x43
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500000
<Block for 0x400163, 54 bytes>
0x400163:	mov	rdx, qword ptr [rbp - 0xf0]
0x40016a:	mov	rax, qword ptr [rbp - 0xe8]
0x400171:	add	rax, rdx
0x400174:	movzx	eax, byte ptr [rax]
0x400177:	lea	rcx, [rbp - 0x70]
0x40017b:	mov	rdx, qword ptr [rbp - 0xe8]
0x400182:	add	rdx, rcx
0x400185:	mov	byte ptr [rdx], al
0x400187:	add	qword ptr [rbp - 0xe8], 1
0x40018f:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400197:	jbe	0x400163
<Block for 0x400199, 16 bytes>
0x400199:	mov	byte ptr [rbp - 0xd], 0
0x40019d:	lea	rax, [rbp - 0x70]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500008
<Block for 0x4001a9, 16 bytes>
0x4001a9:	nop	
0x4001aa:	mov	rax, qword ptr [rbp - 8]
0x4001ae:	xor	rax, qword ptr fs:[0x28]
0x4001b7:	je	0x4001be
<Block for 0x4001be, 2 bytes>
0x4001be:	leave	
0x4001bf:	ret	
<Block for 0x4001b9, 5 bytes>
0x4001b9:	call	0x500010
