<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	edi, 0x190
0x400028:	call	0x500000
<Block for 0x40002d, 19 bytes>
0x40002d:	mov	qword ptr [rbp - 0x18], rax
0x400031:	mov	qword ptr [rbp - 0x10], 0
0x400039:	cmp	qword ptr [rbp - 0x10], 0x63
0x40003e:	ja	0x40005c
<Block for 0x400040, 28 bytes>
0x400040:	mov	rax, qword ptr [rbp - 0x18]
0x400044:	mov	rdx, qword ptr [rbp - 0x10]
0x400048:	shl	rdx, 2
0x40004c:	add	rax, rdx
0x40004f:	mov	dword ptr [rax], 5
0x400055:	add	qword ptr [rbp - 0x10], 1
0x40005a:	jmp	0x400039
<Block for 0x40005c, 9 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0x18]
0x400060:	test	rax, rax
0x400063:	je	0x400071
<Block for 0x400039, 7 bytes>
0x400039:	cmp	qword ptr [rbp - 0x10], 0x63
0x40003e:	ja	0x40005c
<Block for 0x400071, 12 bytes>
0x400071:	lea	rax, [rbp - 0x18]
0x400075:	mov	rdi, rax
0x400078:	call	0x500010
<Block for 0x400065, 12 bytes>
0x400065:	mov	rax, qword ptr [rbp - 0x18]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500008
<Block for 0x40007d, 16 bytes>
0x40007d:	nop	
0x40007e:	mov	rax, qword ptr [rbp - 8]
0x400082:	xor	rax, qword ptr fs:[0x28]
0x40008b:	je	0x400092
<Block for 0x400092, 2 bytes>
0x400092:	leave	
0x400093:	ret	
<Block for 0x40008d, 5 bytes>
0x40008d:	call	0x500018
