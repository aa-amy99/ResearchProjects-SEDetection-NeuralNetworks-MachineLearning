<Block for 0x400094, 45 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0x20
0x4000a0:	mov	rax, qword ptr fs:[0x28]
0x4000a9:	mov	qword ptr [rbp - 8], rax
0x4000ad:	xor	eax, eax
0x4000af:	mov	qword ptr [rbp - 0x18], 0
0x4000b7:	mov	edi, 0x190
0x4000bc:	call	0x500000
<Block for 0x4000c1, 19 bytes>
0x4000c1:	mov	qword ptr [rbp - 0x18], rax
0x4000c5:	mov	qword ptr [rbp - 0x10], 0
0x4000cd:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d2:	ja	0x4000f0
<Block for 0x4000d4, 28 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0x18]
0x4000d8:	mov	rdx, qword ptr [rbp - 0x10]
0x4000dc:	shl	rdx, 2
0x4000e0:	add	rax, rdx
0x4000e3:	mov	dword ptr [rax], 5
0x4000e9:	add	qword ptr [rbp - 0x10], 1
0x4000ee:	jmp	0x4000cd
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rax, [rbp - 0x18]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500020
<Block for 0x4000cd, 7 bytes>
0x4000cd:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d2:	ja	0x4000f0
<Block for 0x4000fc, 16 bytes>
0x4000fc:	nop	
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	xor	rax, qword ptr fs:[0x28]
0x40010a:	je	0x400111
<Block for 0x400111, 2 bytes>
0x400111:	leave	
0x400112:	ret	
<Block for 0x40010c, 5 bytes>
0x40010c:	call	0x500018
