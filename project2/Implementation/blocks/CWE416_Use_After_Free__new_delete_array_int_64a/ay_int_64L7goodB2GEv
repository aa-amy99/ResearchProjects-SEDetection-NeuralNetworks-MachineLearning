<Block for 0x400113, 45 bytes>
0x400113:	endbr64	
0x400117:	push	rbp
0x400118:	mov	rbp, rsp
0x40011b:	sub	rsp, 0x20
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	mov	qword ptr [rbp - 0x18], 0
0x400136:	mov	edi, 0x190
0x40013b:	call	0x500000
<Block for 0x400140, 19 bytes>
0x400140:	mov	qword ptr [rbp - 0x18], rax
0x400144:	mov	qword ptr [rbp - 0x10], 0
0x40014c:	cmp	qword ptr [rbp - 0x10], 0x63
0x400151:	ja	0x40016f
<Block for 0x400153, 28 bytes>
0x400153:	mov	rax, qword ptr [rbp - 0x18]
0x400157:	mov	rdx, qword ptr [rbp - 0x10]
0x40015b:	shl	rdx, 2
0x40015f:	add	rax, rdx
0x400162:	mov	dword ptr [rax], 5
0x400168:	add	qword ptr [rbp - 0x10], 1
0x40016d:	jmp	0x40014c
<Block for 0x40016f, 9 bytes>
0x40016f:	mov	rax, qword ptr [rbp - 0x18]
0x400173:	test	rax, rax
0x400176:	je	0x400184
<Block for 0x40014c, 7 bytes>
0x40014c:	cmp	qword ptr [rbp - 0x10], 0x63
0x400151:	ja	0x40016f
<Block for 0x400184, 12 bytes>
0x400184:	lea	rax, [rbp - 0x18]
0x400188:	mov	rdi, rax
0x40018b:	call	0x500028
<Block for 0x400178, 12 bytes>
0x400178:	mov	rax, qword ptr [rbp - 0x18]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500008
<Block for 0x400190, 16 bytes>
0x400190:	nop	
0x400191:	mov	rax, qword ptr [rbp - 8]
0x400195:	xor	rax, qword ptr fs:[0x28]
0x40019e:	je	0x4001a5
<Block for 0x4001a5, 2 bytes>
0x4001a5:	leave	
0x4001a6:	ret	
<Block for 0x4001a0, 5 bytes>
0x4001a0:	call	0x500018
