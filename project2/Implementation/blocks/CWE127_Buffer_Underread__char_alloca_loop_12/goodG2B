<Block for 0x400163, 84 bytes>
0x400163:	endbr64	
0x400167:	push	rbp
0x400168:	mov	rbp, rsp
0x40016b:	sub	rsp, 0x90
0x400172:	mov	rax, qword ptr fs:[0x28]
0x40017b:	mov	qword ptr [rbp - 8], rax
0x40017f:	xor	eax, eax
0x400181:	mov	eax, 0x10
0x400186:	sub	rax, 1
0x40018a:	add	rax, 0x6c
0x40018e:	mov	esi, 0x10
0x400193:	mov	edx, 0
0x400198:	div	rsi
0x40019b:	imul	rax, rax, 0x10
0x40019f:	mov	rdx, rax
0x4001a2:	and	rdx, 0xfffffffffffff000
0x4001a9:	mov	rcx, rsp
0x4001ac:	sub	rcx, rdx
0x4001af:	mov	rdx, rcx
0x4001b2:	cmp	rsp, rdx
0x4001b5:	je	0x4001c9
<Block for 0x4001c9, 26 bytes>
0x4001c9:	mov	rdx, rax
0x4001cc:	and	edx, 0xfff
0x4001d2:	sub	rsp, rdx
0x4001d5:	mov	rdx, rax
0x4001d8:	and	edx, 0xfff
0x4001de:	test	rdx, rdx
0x4001e1:	je	0x4001f3
<Block for 0x4001b7, 18 bytes>
0x4001b7:	sub	rsp, 0x1000
0x4001be:	or	qword ptr [rsp + 0xff8], 0
0x4001c7:	jmp	0x4001b2
<Block for 0x4001f3, 41 bytes>
0x4001f3:	mov	rax, rsp
0x4001f6:	add	rax, 0xf
0x4001fa:	shr	rax, 4
0x4001fe:	shl	rax, 4
0x400202:	mov	qword ptr [rbp - 0x78], rax
0x400206:	mov	rax, qword ptr [rbp - 0x78]
0x40020a:	mov	edx, 0x63
0x40020f:	mov	esi, 0x41
0x400214:	mov	rdi, rax
0x400217:	call	0x500000
<Block for 0x4001e3, 57 bytes>
0x4001e3:	and	eax, 0xfff
0x4001e8:	sub	rax, 8
0x4001ec:	add	rax, rsp
0x4001ef:	or	qword ptr [rax], 0
0x4001f3:	mov	rax, rsp
0x4001f6:	add	rax, 0xf
0x4001fa:	shr	rax, 4
0x4001fe:	shl	rax, 4
0x400202:	mov	qword ptr [rbp - 0x78], rax
0x400206:	mov	rax, qword ptr [rbp - 0x78]
0x40020a:	mov	edx, 0x63
0x40020f:	mov	esi, 0x41
0x400214:	mov	rdi, rax
0x400217:	call	0x500000
<Block for 0x4001b2, 5 bytes>
0x4001b2:	cmp	rsp, rdx
0x4001b5:	je	0x4001c9
<Block for 0x40021c, 21 bytes>
0x40021c:	mov	rax, qword ptr [rbp - 0x78]
0x400220:	add	rax, 0x63
0x400224:	mov	byte ptr [rax], 0
0x400227:	mov	eax, 0
0x40022c:	call	0x500008
<Block for 0x400231, 4 bytes>
0x400231:	test	eax, eax
0x400233:	je	0x400242
<Block for 0x400242, 33 bytes>
0x400242:	mov	rax, qword ptr [rbp - 0x78]
0x400246:	mov	qword ptr [rbp - 0x88], rax
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x43
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500000
<Block for 0x400235, 13 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x78]
0x400239:	mov	qword ptr [rbp - 0x88], rax
0x400240:	jmp	0x40024d
<Block for 0x400263, 14 bytes>
0x400263:	mov	byte ptr [rbp - 0xd], 0
0x400267:	mov	qword ptr [rbp - 0x80], 0
0x40026f:	jmp	0x400294
<Block for 0x40024d, 22 bytes>
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x43
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500000
<Block for 0x400294, 7 bytes>
0x400294:	cmp	qword ptr [rbp - 0x80], 0x63
0x400299:	jbe	0x400271
<Block for 0x400271, 42 bytes>
0x400271:	mov	rdx, qword ptr [rbp - 0x88]
0x400278:	mov	rax, qword ptr [rbp - 0x80]
0x40027c:	add	rax, rdx
0x40027f:	movzx	eax, byte ptr [rax]
0x400282:	lea	rcx, [rbp - 0x70]
0x400286:	mov	rdx, qword ptr [rbp - 0x80]
0x40028a:	add	rdx, rcx
0x40028d:	mov	byte ptr [rdx], al
0x40028f:	add	qword ptr [rbp - 0x80], 1
0x400294:	cmp	qword ptr [rbp - 0x80], 0x63
0x400299:	jbe	0x400271
<Block for 0x40029b, 16 bytes>
0x40029b:	mov	byte ptr [rbp - 0xd], 0
0x40029f:	lea	rax, [rbp - 0x70]
0x4002a3:	mov	rdi, rax
0x4002a6:	call	0x500010
<Block for 0x4002ab, 16 bytes>
0x4002ab:	nop	
0x4002ac:	mov	rax, qword ptr [rbp - 8]
0x4002b0:	xor	rax, qword ptr fs:[0x28]
0x4002b9:	je	0x4002c0
<Block for 0x4002c0, 2 bytes>
0x4002c0:	leave	
0x4002c1:	ret	
<Block for 0x4002bb, 5 bytes>
0x4002bb:	call	0x500018
