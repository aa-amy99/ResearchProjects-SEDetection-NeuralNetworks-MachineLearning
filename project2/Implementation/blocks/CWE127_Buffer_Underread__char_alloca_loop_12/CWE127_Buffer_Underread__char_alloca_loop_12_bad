<Block for 0x400000, 84 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0x10
0x400023:	sub	rax, 1
0x400027:	add	rax, 0x6c
0x40002b:	mov	esi, 0x10
0x400030:	mov	edx, 0
0x400035:	div	rsi
0x400038:	imul	rax, rax, 0x10
0x40003c:	mov	rdx, rax
0x40003f:	and	rdx, 0xfffffffffffff000
0x400046:	mov	rcx, rsp
0x400049:	sub	rcx, rdx
0x40004c:	mov	rdx, rcx
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x400066, 26 bytes>
0x400066:	mov	rdx, rax
0x400069:	and	edx, 0xfff
0x40006f:	sub	rsp, rdx
0x400072:	mov	rdx, rax
0x400075:	and	edx, 0xfff
0x40007b:	test	rdx, rdx
0x40007e:	je	0x400090
<Block for 0x400054, 18 bytes>
0x400054:	sub	rsp, 0x1000
0x40005b:	or	qword ptr [rsp + 0xff8], 0
0x400064:	jmp	0x40004f
<Block for 0x400090, 41 bytes>
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x78], rax
0x4000a3:	mov	rax, qword ptr [rbp - 0x78]
0x4000a7:	mov	edx, 0x63
0x4000ac:	mov	esi, 0x41
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500000
<Block for 0x400080, 57 bytes>
0x400080:	and	eax, 0xfff
0x400085:	sub	rax, 8
0x400089:	add	rax, rsp
0x40008c:	or	qword ptr [rax], 0
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x78], rax
0x4000a3:	mov	rax, qword ptr [rbp - 0x78]
0x4000a7:	mov	edx, 0x63
0x4000ac:	mov	esi, 0x41
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500000
<Block for 0x40004f, 5 bytes>
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x4000b9, 21 bytes>
0x4000b9:	mov	rax, qword ptr [rbp - 0x78]
0x4000bd:	add	rax, 0x63
0x4000c1:	mov	byte ptr [rax], 0
0x4000c4:	mov	eax, 0
0x4000c9:	call	0x500008
<Block for 0x4000ce, 4 bytes>
0x4000ce:	test	eax, eax
0x4000d0:	je	0x4000e3
<Block for 0x4000e3, 33 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 0x78]
0x4000e7:	mov	qword ptr [rbp - 0x88], rax
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	edx, 0x63
0x4000f7:	mov	esi, 0x43
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500000
<Block for 0x4000d2, 17 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x78]
0x4000d6:	sub	rax, 8
0x4000da:	mov	qword ptr [rbp - 0x88], rax
0x4000e1:	jmp	0x4000ee
<Block for 0x400104, 14 bytes>
0x400104:	mov	byte ptr [rbp - 0xd], 0
0x400108:	mov	qword ptr [rbp - 0x80], 0
0x400110:	jmp	0x400135
<Block for 0x4000ee, 22 bytes>
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	edx, 0x63
0x4000f7:	mov	esi, 0x43
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500000
<Block for 0x400135, 7 bytes>
0x400135:	cmp	qword ptr [rbp - 0x80], 0x63
0x40013a:	jbe	0x400112
<Block for 0x400112, 42 bytes>
0x400112:	mov	rdx, qword ptr [rbp - 0x88]
0x400119:	mov	rax, qword ptr [rbp - 0x80]
0x40011d:	add	rax, rdx
0x400120:	movzx	eax, byte ptr [rax]
0x400123:	lea	rcx, [rbp - 0x70]
0x400127:	mov	rdx, qword ptr [rbp - 0x80]
0x40012b:	add	rdx, rcx
0x40012e:	mov	byte ptr [rdx], al
0x400130:	add	qword ptr [rbp - 0x80], 1
0x400135:	cmp	qword ptr [rbp - 0x80], 0x63
0x40013a:	jbe	0x400112
<Block for 0x40013c, 16 bytes>
0x40013c:	mov	byte ptr [rbp - 0xd], 0
0x400140:	lea	rax, [rbp - 0x70]
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x40014c, 16 bytes>
0x40014c:	nop	
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	xor	rax, qword ptr fs:[0x28]
0x40015a:	je	0x400161
<Block for 0x400161, 2 bytes>
0x400161:	leave	
0x400162:	ret	
<Block for 0x40015c, 5 bytes>
0x40015c:	call	0x500018
