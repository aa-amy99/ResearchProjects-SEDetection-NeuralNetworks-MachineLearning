<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 64 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	nop	
0x40006b:	endbr64	
0x40006f:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400079:	mov	dword ptr [rbp - 0x144], 0xffffffff
0x400083:	mov	rax, qword ptr [rbp - 0x138]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400092, 27 bytes>
0x400092:	mov	qword ptr [rbp - 0x130], rax
0x400099:	mov	edx, 6
0x40009e:	mov	esi, 1
0x4000a3:	mov	edi, 2
0x4000a8:	call	0x500008
<Block for 0x4000ad, 19 bytes>
0x4000ad:	mov	dword ptr [rbp - 0x140], eax
0x4000b3:	cmp	dword ptr [rbp - 0x140], -1
0x4000ba:	je	0x40023a
<Block for 0x40023a, 3 bytes>
0x40023a:	nop	
0x40023b:	jmp	0x400244
<Block for 0x4000c0, 25 bytes>
0x4000c0:	lea	rax, [rbp - 0x120]
0x4000c7:	mov	edx, 0x10
0x4000cc:	mov	esi, 0
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500010
<Block for 0x400244, 9 bytes>
0x400244:	cmp	dword ptr [rbp - 0x140], -1
0x40024b:	je	0x40025a
<Block for 0x4000d9, 29 bytes>
0x4000d9:	mov	word ptr [rbp - 0x120], 2
0x4000e2:	mov	dword ptr [rbp - 0x11c], 0
0x4000ec:	mov	edi, 0x6987
0x4000f1:	call	0x500018
<Block for 0x40025a, 9 bytes>
0x40025a:	cmp	dword ptr [rbp - 0x144], -1
0x400261:	je	0x400270
<Block for 0x40024d, 13 bytes>
0x40024d:	mov	eax, dword ptr [rbp - 0x140]
0x400253:	mov	edi, eax
0x400255:	call	0x500048
<Block for 0x4000f6, 35 bytes>
0x4000f6:	mov	word ptr [rbp - 0x11e], ax
0x4000fd:	lea	rcx, [rbp - 0x120]
0x400104:	mov	eax, dword ptr [rbp - 0x140]
0x40010a:	mov	edx, 0x10
0x40010f:	mov	rsi, rcx
0x400112:	mov	edi, eax
0x400114:	call	0x500020
<Block for 0x400270, 15 bytes>
0x400270:	mov	rax, qword ptr [rbp - 0x138]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500050
<Block for 0x400263, 13 bytes>
0x400263:	mov	eax, dword ptr [rbp - 0x144]
0x400269:	mov	edi, eax
0x40026b:	call	0x500048
<Block for 0x400119, 9 bytes>
0x400119:	cmp	eax, -1
0x40011c:	je	0x40023d
<Block for 0x40027f, 16 bytes>
0x40027f:	nop	
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	xor	rax, qword ptr fs:[0x28]
0x40028d:	je	0x400294
<Block for 0x40023d, 3 bytes>
0x40023d:	nop	
0x40023e:	jmp	0x400244
<Block for 0x400122, 18 bytes>
0x400122:	mov	eax, dword ptr [rbp - 0x140]
0x400128:	mov	esi, 5
0x40012d:	mov	edi, eax
0x40012f:	call	0x500028
<Block for 0x400294, 2 bytes>
0x400294:	leave	
0x400295:	ret	
<Block for 0x40028f, 5 bytes>
0x40028f:	call	0x500058
<Block for 0x400134, 9 bytes>
0x400134:	cmp	eax, -1
0x400137:	je	0x400240
<Block for 0x400240, 3 bytes>
0x400240:	nop	
0x400241:	jmp	0x400244
<Block for 0x40013d, 23 bytes>
0x40013d:	mov	eax, dword ptr [rbp - 0x140]
0x400143:	mov	edx, 0
0x400148:	mov	esi, 0
0x40014d:	mov	edi, eax
0x40014f:	call	0x500030
<Block for 0x400154, 19 bytes>
0x400154:	mov	dword ptr [rbp - 0x144], eax
0x40015a:	cmp	dword ptr [rbp - 0x144], -1
0x400161:	je	0x400243
<Block for 0x400167, 51 bytes>
0x400167:	mov	eax, 0xf9
0x40016c:	sub	rax, qword ptr [rbp - 0x130]
0x400173:	mov	rdx, rax
0x400176:	mov	rcx, qword ptr [rbp - 0x138]
0x40017d:	mov	rax, qword ptr [rbp - 0x130]
0x400184:	lea	rsi, [rcx + rax]
0x400188:	mov	eax, dword ptr [rbp - 0x144]
0x40018e:	mov	ecx, 0
0x400193:	mov	edi, eax
0x400195:	call	0x500038
<Block for 0x400243, 1 bytes>
0x400243:	nop	
<Block for 0x40019a, 19 bytes>
0x40019a:	mov	dword ptr [rbp - 0x13c], eax
0x4001a0:	cmp	dword ptr [rbp - 0x13c], -1
0x4001a7:	je	0x400244
<Block for 0x4001ad, 13 bytes>
0x4001ad:	cmp	dword ptr [rbp - 0x13c], 0
0x4001b4:	je	0x400244
<Block for 0x4001ba, 52 bytes>
0x4001ba:	mov	eax, dword ptr [rbp - 0x13c]
0x4001c0:	movsxd	rdx, eax
0x4001c3:	mov	rax, qword ptr [rbp - 0x130]
0x4001ca:	add	rdx, rax
0x4001cd:	mov	rax, qword ptr [rbp - 0x138]
0x4001d4:	add	rax, rdx
0x4001d7:	mov	byte ptr [rax], 0
0x4001da:	mov	rax, qword ptr [rbp - 0x138]
0x4001e1:	mov	esi, 0xd
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x500040
<Block for 0x4001ee, 17 bytes>
0x4001ee:	mov	qword ptr [rbp - 0x128], rax
0x4001f5:	cmp	qword ptr [rbp - 0x128], 0
0x4001fd:	je	0x400209
<Block for 0x400209, 20 bytes>
0x400209:	mov	rax, qword ptr [rbp - 0x138]
0x400210:	mov	esi, 0xa
0x400215:	mov	rdi, rax
0x400218:	call	0x500040
<Block for 0x4001ff, 30 bytes>
0x4001ff:	mov	rax, qword ptr [rbp - 0x128]
0x400206:	mov	byte ptr [rax], 0
0x400209:	mov	rax, qword ptr [rbp - 0x138]
0x400210:	mov	esi, 0xa
0x400215:	mov	rdi, rax
0x400218:	call	0x500040
<Block for 0x40021d, 17 bytes>
0x40021d:	mov	qword ptr [rbp - 0x128], rax
0x400224:	cmp	qword ptr [rbp - 0x128], 0
0x40022c:	je	0x400244
<Block for 0x40022e, 12 bytes>
0x40022e:	mov	rax, qword ptr [rbp - 0x128]
0x400235:	mov	byte ptr [rax], 0
0x400238:	jmp	0x400244
