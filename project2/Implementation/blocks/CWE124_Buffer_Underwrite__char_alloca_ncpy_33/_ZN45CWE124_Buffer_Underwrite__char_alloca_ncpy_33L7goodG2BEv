<Block for 0x40014f, 98 bytes>
0x40014f:	endbr64	
0x400153:	push	rbp
0x400154:	mov	rbp, rsp
0x400157:	sub	rsp, 0x90
0x40015e:	mov	rax, qword ptr fs:[0x28]
0x400167:	mov	qword ptr [rbp - 8], rax
0x40016b:	xor	eax, eax
0x40016d:	lea	rax, [rbp - 0x90]
0x400174:	mov	qword ptr [rbp - 0x88], rax
0x40017b:	mov	eax, 0x10
0x400180:	sub	rax, 1
0x400184:	add	rax, 0x6c
0x400188:	mov	esi, 0x10
0x40018d:	mov	edx, 0
0x400192:	div	rsi
0x400195:	imul	rax, rax, 0x10
0x400199:	mov	rdx, rax
0x40019c:	and	rdx, 0xfffffffffffff000
0x4001a3:	mov	rcx, rsp
0x4001a6:	sub	rcx, rdx
0x4001a9:	mov	rdx, rcx
0x4001ac:	cmp	rsp, rdx
0x4001af:	je	0x4001c3
<Block for 0x4001c3, 26 bytes>
0x4001c3:	mov	rdx, rax
0x4001c6:	and	edx, 0xfff
0x4001cc:	sub	rsp, rdx
0x4001cf:	mov	rdx, rax
0x4001d2:	and	edx, 0xfff
0x4001d8:	test	rdx, rdx
0x4001db:	je	0x4001ed
<Block for 0x4001b1, 18 bytes>
0x4001b1:	sub	rsp, 0x1000
0x4001b8:	or	qword ptr [rsp + 0xff8], 0
0x4001c1:	jmp	0x4001ac
<Block for 0x4001ed, 41 bytes>
0x4001ed:	mov	rax, rsp
0x4001f0:	add	rax, 0xf
0x4001f4:	shr	rax, 4
0x4001f8:	shl	rax, 4
0x4001fc:	mov	qword ptr [rbp - 0x80], rax
0x400200:	mov	rax, qword ptr [rbp - 0x80]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001dd, 57 bytes>
0x4001dd:	and	eax, 0xfff
0x4001e2:	sub	rax, 8
0x4001e6:	add	rax, rsp
0x4001e9:	or	qword ptr [rax], 0
0x4001ed:	mov	rax, rsp
0x4001f0:	add	rax, 0xf
0x4001f4:	shr	rax, 4
0x4001f8:	shl	rax, 4
0x4001fc:	mov	qword ptr [rbp - 0x80], rax
0x400200:	mov	rax, qword ptr [rbp - 0x80]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001ac, 5 bytes>
0x4001ac:	cmp	rsp, rdx
0x4001af:	je	0x4001c3
<Block for 0x400216, 58 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x80]
0x40021a:	add	rax, 0x63
0x40021e:	mov	byte ptr [rax], 0
0x400221:	mov	rax, qword ptr [rbp - 0x80]
0x400225:	mov	qword ptr [rbp - 0x90], rax
0x40022c:	mov	rax, qword ptr [rbp - 0x88]
0x400233:	mov	rax, qword ptr [rax]
0x400236:	mov	qword ptr [rbp - 0x78], rax
0x40023a:	lea	rax, [rbp - 0x70]
0x40023e:	mov	edx, 0x63
0x400243:	mov	esi, 0x43
0x400248:	mov	rdi, rax
0x40024b:	call	0x500000
<Block for 0x400250, 28 bytes>
0x400250:	mov	byte ptr [rbp - 0xd], 0
0x400254:	lea	rcx, [rbp - 0x70]
0x400258:	mov	rax, qword ptr [rbp - 0x78]
0x40025c:	mov	edx, 0x63
0x400261:	mov	rsi, rcx
0x400264:	mov	rdi, rax
0x400267:	call	0x500008
<Block for 0x40026c, 23 bytes>
0x40026c:	mov	rax, qword ptr [rbp - 0x78]
0x400270:	add	rax, 0x63
0x400274:	mov	byte ptr [rax], 0
0x400277:	mov	rax, qword ptr [rbp - 0x78]
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500010
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500018
