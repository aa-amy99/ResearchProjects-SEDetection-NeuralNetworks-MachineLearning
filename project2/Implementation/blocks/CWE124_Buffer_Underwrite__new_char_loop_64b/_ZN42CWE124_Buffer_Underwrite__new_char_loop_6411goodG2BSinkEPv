<Block for 0x4000c3, 81 bytes>
0x4000c3:	endbr64	
0x4000c7:	push	rbp
0x4000c8:	mov	rbp, rsp
0x4000cb:	sub	rsp, 0xa0
0x4000d2:	mov	qword ptr [rbp - 0x98], rdi
0x4000d9:	mov	rax, qword ptr fs:[0x28]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	xor	eax, eax
0x4000e8:	mov	rax, qword ptr [rbp - 0x98]
0x4000ef:	mov	qword ptr [rbp - 0x80], rax
0x4000f3:	mov	rax, qword ptr [rbp - 0x80]
0x4000f7:	mov	rax, qword ptr [rax]
0x4000fa:	mov	qword ptr [rbp - 0x78], rax
0x4000fe:	lea	rax, [rbp - 0x70]
0x400102:	mov	edx, 0x63
0x400107:	mov	esi, 0x43
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500000
<Block for 0x400114, 25 bytes>
0x400114:	mov	byte ptr [rbp - 0xd], 0
0x400118:	mov	qword ptr [rbp - 0x88], 0
0x400123:	cmp	qword ptr [rbp - 0x88], 0x63
0x40012b:	ja	0x400158
<Block for 0x40012d, 43 bytes>
0x40012d:	mov	rdx, qword ptr [rbp - 0x78]
0x400131:	mov	rax, qword ptr [rbp - 0x88]
0x400138:	add	rdx, rax
0x40013b:	lea	rcx, [rbp - 0x70]
0x40013f:	mov	rax, qword ptr [rbp - 0x88]
0x400146:	add	rax, rcx
0x400149:	movzx	eax, byte ptr [rax]
0x40014c:	mov	byte ptr [rdx], al
0x40014e:	add	qword ptr [rbp - 0x88], 1
0x400156:	jmp	0x400123
<Block for 0x400158, 23 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x78]
0x40015c:	add	rax, 0x63
0x400160:	mov	byte ptr [rax], 0
0x400163:	mov	rax, qword ptr [rbp - 0x78]
0x400167:	mov	rdi, rax
0x40016a:	call	0x500008
<Block for 0x400123, 10 bytes>
0x400123:	cmp	qword ptr [rbp - 0x88], 0x63
0x40012b:	ja	0x400158
<Block for 0x40016f, 16 bytes>
0x40016f:	nop	
0x400170:	mov	rax, qword ptr [rbp - 8]
0x400174:	xor	rax, qword ptr fs:[0x28]
0x40017d:	je	0x400184
<Block for 0x400184, 2 bytes>
0x400184:	leave	
0x400185:	ret	
<Block for 0x40017f, 5 bytes>
0x40017f:	call	0x500010
