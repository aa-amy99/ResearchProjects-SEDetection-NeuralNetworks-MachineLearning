<Block for 0x400081, 32 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x20
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	call	0x40000f
<Block for 0x4000a1, 9 bytes>
0x4000a1:	test	eax, eax
0x4000a3:	setne	al
0x4000a6:	test	al, al
0x4000a8:	je	0x4000b8
<Block for 0x4000b8, 17 bytes>
0x4000b8:	mov	esi, 0xa
0x4000bd:	lea	rdi, [rip + 0xfff4c]
0x4000c4:	call	0x40020a
<Block for 0x4000aa, 12 bytes>
0x4000aa:	lea	rdi, [rip + 0x143]
0x4000b1:	call	0x500010
<Block for 0x4000c9, 19 bytes>
0x4000c9:	lea	rax, [rbp - 0x12]
0x4000cd:	mov	rsi, rax
0x4000d0:	lea	rdi, [rip + 0xfff29]
0x4000d7:	call	0x500008
<Block for 0x4000b6, 2 bytes>
0x4000b6:	jmp	0x4000ec
<Block for 0x4000dc, 16 bytes>
0x4000dc:	mov	byte ptr [rbp - 9], 0
0x4000e0:	lea	rax, [rbp - 0x12]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500010
<Block for 0x4000ec, 16 bytes>
0x4000ec:	nop	
0x4000ed:	mov	rax, qword ptr [rbp - 8]
0x4000f1:	xor	rax, qword ptr fs:[0x28]
0x4000fa:	je	0x400101
<Block for 0x400101, 2 bytes>
0x400101:	leave	
0x400102:	ret	
<Block for 0x4000fc, 5 bytes>
0x4000fc:	call	0x500018
