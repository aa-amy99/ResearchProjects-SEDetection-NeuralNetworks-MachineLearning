<Block for 0x400103, 32 bytes>
0x400103:	endbr64	
0x400107:	push	rbp
0x400108:	mov	rbp, rsp
0x40010b:	sub	rsp, 0x20
0x40010f:	mov	rax, qword ptr fs:[0x28]
0x400118:	mov	qword ptr [rbp - 8], rax
0x40011c:	xor	eax, eax
0x40011e:	call	0x400000
<Block for 0x400123, 9 bytes>
0x400123:	test	eax, eax
0x400125:	setne	al
0x400128:	test	al, al
0x40012a:	je	0x400160
<Block for 0x400160, 16 bytes>
0x400160:	nop	
0x400161:	mov	rax, qword ptr [rbp - 8]
0x400165:	xor	rax, qword ptr fs:[0x28]
0x40016e:	je	0x400175
<Block for 0x40012c, 17 bytes>
0x40012c:	mov	esi, 0xa
0x400131:	lea	rdi, [rip + 0xffed8]
0x400138:	call	0x40020a
<Block for 0x400175, 2 bytes>
0x400175:	leave	
0x400176:	ret	
<Block for 0x400170, 5 bytes>
0x400170:	call	0x500018
<Block for 0x40013d, 19 bytes>
0x40013d:	lea	rax, [rbp - 0x12]
0x400141:	mov	rsi, rax
0x400144:	lea	rdi, [rip + 0xffeb5]
0x40014b:	call	0x500008
<Block for 0x400150, 16 bytes>
0x400150:	mov	byte ptr [rbp - 9], 0
0x400154:	lea	rax, [rbp - 0x12]
0x400158:	mov	rdi, rax
0x40015b:	call	0x500010
