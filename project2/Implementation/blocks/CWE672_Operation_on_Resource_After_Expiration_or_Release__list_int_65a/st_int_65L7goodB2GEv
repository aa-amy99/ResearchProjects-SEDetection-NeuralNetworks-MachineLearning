<Block for 0x4001e0, 40 bytes>
0x4001e0:	endbr64	
0x4001e4:	push	rbp
0x4001e5:	mov	rbp, rsp
0x4001e8:	push	rbx
0x4001e9:	sub	rsp, 0x58
0x4001ed:	mov	rax, qword ptr fs:[0x28]
0x4001f6:	mov	qword ptr [rbp - 0x18], rax
0x4001fa:	xor	eax, eax
0x4001fc:	lea	rax, [rbp - 0x50]
0x400200:	mov	rdi, rax
0x400203:	call	0x4003fa
<Block for 0x400208, 37 bytes>
0x400208:	mov	rax, qword ptr [rip + 0xffe29]
0x40020f:	mov	qword ptr [rbp - 0x58], rax
0x400213:	mov	dword ptr [rbp - 0x30], 0x64
0x40021a:	lea	rdx, [rbp - 0x30]
0x40021e:	lea	rax, [rbp - 0x50]
0x400222:	mov	rsi, rdx
0x400225:	mov	rdi, rax
0x400228:	call	0x400504
<Block for 0x40022d, 26 bytes>
0x40022d:	mov	dword ptr [rbp - 0x30], 0
0x400234:	lea	rdx, [rbp - 0x30]
0x400238:	lea	rax, [rbp - 0x50]
0x40023c:	mov	rsi, rdx
0x40023f:	mov	rdi, rax
0x400242:	call	0x400504
<Block for 0x400247, 19 bytes>
0x400247:	lea	rdx, [rbp - 0x50]
0x40024b:	lea	rax, [rbp - 0x30]
0x40024f:	mov	rsi, rdx
0x400252:	mov	rdi, rax
0x400255:	call	0x400552
<Block for 0x40025a, 13 bytes>
0x40025a:	lea	rax, [rbp - 0x30]
0x40025e:	mov	rdx, qword ptr [rbp - 0x58]
0x400262:	mov	rdi, rax
0x400265:	call	rdx
<Block for 0x400267, 12 bytes>
0x400267:	lea	rax, [rbp - 0x30]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x40041a
<Block for 0x400273, 12 bytes>
0x400273:	lea	rax, [rbp - 0x50]
0x400277:	mov	rdi, rax
0x40027a:	call	0x40041a
<Block for 0x40027f, 16 bytes>
0x40027f:	nop	
0x400280:	mov	rax, qword ptr [rbp - 0x18]
0x400284:	xor	rax, qword ptr fs:[0x28]
0x40028d:	je	0x4002c9
<Block for 0x4002c9, 7 bytes>
0x4002c9:	add	rsp, 0x58
0x4002cd:	pop	rbx
0x4002ce:	pop	rbp
0x4002cf:	ret	
<Block for 0x40028f, 2 bytes>
0x40028f:	jmp	0x4002c4
<Block for 0x4002c4, 5 bytes>
0x4002c4:	call	0x500018
