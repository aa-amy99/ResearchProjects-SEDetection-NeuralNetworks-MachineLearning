<Block for 0x4000f1, 51 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x20
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	rdx, qword ptr [rip + 0xfff0d]
0x400113:	lea	rax, [rbp - 0x12]
0x400117:	mov	esi, 0xa
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500028
<Block for 0x400124, 11 bytes>
0x400124:	mov	qword ptr [rbp - 0x20], rax
0x400128:	cmp	qword ptr [rbp - 0x20], 0
0x40012d:	jne	0x400145
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rdi, [rip + 0x5a]
0x400136:	call	0x500008
<Block for 0x400145, 16 bytes>
0x400145:	mov	byte ptr [rbp - 9], 0
0x400149:	lea	rax, [rbp - 0x12]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500008
<Block for 0x40013b, 10 bytes>
0x40013b:	mov	edi, 1
0x400140:	call	0x500010
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500018
