<Block for 0x4000d9, 60 bytes>
0x4000d9:	endbr64	
0x4000dd:	push	rbp
0x4000de:	mov	rbp, rsp
0x4000e1:	add	rsp, -0x80
0x4000e5:	mov	rax, qword ptr fs:[0x28]
0x4000ee:	mov	qword ptr [rbp - 8], rax
0x4000f2:	xor	eax, eax
0x4000f4:	mov	rax, qword ptr [rip + 0xdd]
0x4000fb:	mov	qword ptr [rbp - 0x80], rax
0x4000ff:	lea	rax, [rbp - 0x70]
0x400103:	mov	edx, 0x63
0x400108:	mov	esi, 0x43
0x40010d:	mov	rdi, rax
0x400110:	call	0x500000
<Block for 0x400115, 16 bytes>
0x400115:	mov	byte ptr [rbp - 0xd], 0
0x400119:	lea	rax, [rbp - 0x70]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500008
<Block for 0x400125, 27 bytes>
0x400125:	mov	qword ptr [rbp - 0x78], rax
0x400129:	mov	rdx, qword ptr [rbp - 0x78]
0x40012d:	lea	rcx, [rbp - 0x70]
0x400131:	mov	rax, qword ptr [rbp - 0x80]
0x400135:	mov	rsi, rcx
0x400138:	mov	rdi, rax
0x40013b:	call	0x500010
<Block for 0x400140, 12 bytes>
0x400140:	mov	rax, qword ptr [rbp - 0x80]
0x400144:	mov	rdi, rax
0x400147:	call	0x500018
<Block for 0x40014c, 16 bytes>
0x40014c:	nop	
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	xor	rax, qword ptr fs:[0x28]
0x40015a:	je	0x400161
<Block for 0x400161, 2 bytes>
0x400161:	leave	
0x400162:	ret	
<Block for 0x40015c, 5 bytes>
0x40015c:	call	0x500020
