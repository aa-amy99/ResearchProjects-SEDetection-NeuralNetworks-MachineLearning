<Block for 0x4003aa, 154 bytes>
0x4003aa:	endbr64	
0x4003ae:	push	rbp
0x4003af:	mov	rbp, rsp
0x4003b2:	sub	rsp, 0xe0
0x4003b9:	mov	rax, qword ptr fs:[0x28]
0x4003c2:	mov	qword ptr [rbp - 8], rax
0x4003c6:	xor	eax, eax
0x4003c8:	mov	qword ptr [rbp - 0x70], 0
0x4003d0:	mov	qword ptr [rbp - 0x68], 0
0x4003d8:	mov	qword ptr [rbp - 0x60], 0
0x4003e0:	mov	qword ptr [rbp - 0x58], 0
0x4003e8:	mov	qword ptr [rbp - 0x50], 0
0x4003f0:	mov	qword ptr [rbp - 0x48], 0
0x4003f8:	mov	qword ptr [rbp - 0x40], 0
0x400400:	mov	qword ptr [rbp - 0x38], 0
0x400408:	mov	qword ptr [rbp - 0x30], 0
0x400410:	mov	qword ptr [rbp - 0x28], 0
0x400418:	mov	qword ptr [rbp - 0x20], 0
0x400420:	mov	qword ptr [rbp - 0x18], 0
0x400428:	mov	dword ptr [rbp - 0x10], 0
0x40042f:	lea	rax, [rbp - 0x70]
0x400433:	mov	qword ptr [rbp - 0xa8], rax
0x40043a:	mov	eax, 0
0x40043f:	call	0x500000
<Block for 0x400444, 8 bytes>
0x400444:	test	eax, eax
0x400446:	je	0x400647
<Block for 0x400647, 35 bytes>
0x400647:	mov	dword ptr [rbp - 0xb8], 0xffffffff
0x400651:	mov	dword ptr [rbp - 0xcc], 0xffffffff
0x40065b:	mov	rax, qword ptr [rbp - 0xa8]
0x400662:	mov	rdi, rax
0x400665:	call	0x500008
<Block for 0x40044c, 35 bytes>
0x40044c:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400456:	mov	dword ptr [rbp - 0xd0], 0xffffffff
0x400460:	mov	rax, qword ptr [rbp - 0xa8]
0x400467:	mov	rdi, rax
0x40046a:	call	0x500008
<Block for 0x40066a, 27 bytes>
0x40066a:	mov	qword ptr [rbp - 0xa0], rax
0x400671:	mov	edx, 6
0x400676:	mov	esi, 1
0x40067b:	mov	edi, 2
0x400680:	call	0x500010
<Block for 0x40046f, 27 bytes>
0x40046f:	mov	qword ptr [rbp - 0x90], rax
0x400476:	mov	edx, 6
0x40047b:	mov	esi, 1
0x400480:	mov	edi, 2
0x400485:	call	0x500010
<Block for 0x400685, 19 bytes>
0x400685:	mov	dword ptr [rbp - 0xb8], eax
0x40068b:	cmp	dword ptr [rbp - 0xb8], -1
0x400692:	je	0x400803
<Block for 0x40048a, 19 bytes>
0x40048a:	mov	dword ptr [rbp - 0xb0], eax
0x400490:	cmp	dword ptr [rbp - 0xb0], -1
0x400497:	je	0x400608
<Block for 0x400803, 3 bytes>
0x400803:	nop	
0x400804:	jmp	0x40080d
<Block for 0x400698, 22 bytes>
0x400698:	lea	rax, [rbp - 0x80]
0x40069c:	mov	edx, 0x10
0x4006a1:	mov	esi, 0
0x4006a6:	mov	rdi, rax
0x4006a9:	call	0x500018
<Block for 0x400608, 3 bytes>
0x400608:	nop	
0x400609:	jmp	0x400612
<Block for 0x40049d, 22 bytes>
0x40049d:	lea	rax, [rbp - 0x80]
0x4004a1:	mov	edx, 0x10
0x4004a6:	mov	esi, 0
0x4004ab:	mov	rdi, rax
0x4004ae:	call	0x500018
<Block for 0x40080d, 9 bytes>
0x40080d:	cmp	dword ptr [rbp - 0xb8], -1
0x400814:	je	0x400823
<Block for 0x4006ae, 23 bytes>
0x4006ae:	mov	word ptr [rbp - 0x80], 2
0x4006b4:	mov	dword ptr [rbp - 0x7c], 0
0x4006bb:	mov	edi, 0x6987
0x4006c0:	call	0x500020
<Block for 0x400612, 9 bytes>
0x400612:	cmp	dword ptr [rbp - 0xb0], -1
0x400619:	je	0x400628
<Block for 0x4004b3, 23 bytes>
0x4004b3:	mov	word ptr [rbp - 0x80], 2
0x4004b9:	mov	dword ptr [rbp - 0x7c], 0
0x4004c0:	mov	edi, 0x6987
0x4004c5:	call	0x500020
<Block for 0x400823, 9 bytes>
0x400823:	cmp	dword ptr [rbp - 0xcc], -1
0x40082a:	je	0x400839
<Block for 0x400816, 13 bytes>
0x400816:	mov	eax, dword ptr [rbp - 0xb8]
0x40081c:	mov	edi, eax
0x40081e:	call	0x500050
<Block for 0x4006c5, 29 bytes>
0x4006c5:	mov	word ptr [rbp - 0x7e], ax
0x4006c9:	lea	rcx, [rbp - 0x80]
0x4006cd:	mov	eax, dword ptr [rbp - 0xb8]
0x4006d3:	mov	edx, 0x10
0x4006d8:	mov	rsi, rcx
0x4006db:	mov	edi, eax
0x4006dd:	call	0x500028
<Block for 0x400628, 13 bytes>
0x400628:	cmp	dword ptr [rbp - 0xd0], -1
0x40062f:	je	0x400839
<Block for 0x40061b, 13 bytes>
0x40061b:	mov	eax, dword ptr [rbp - 0xb0]
0x400621:	mov	edi, eax
0x400623:	call	0x500050
<Block for 0x4004ca, 29 bytes>
0x4004ca:	mov	word ptr [rbp - 0x7e], ax
0x4004ce:	lea	rcx, [rbp - 0x80]
0x4004d2:	mov	eax, dword ptr [rbp - 0xb0]
0x4004d8:	mov	edx, 0x10
0x4004dd:	mov	rsi, rcx
0x4004e0:	mov	edi, eax
0x4004e2:	call	0x500028
<Block for 0x400839, 10 bytes>
0x400839:	mov	eax, 0
0x40083e:	call	0x500000
<Block for 0x40082c, 13 bytes>
0x40082c:	mov	eax, dword ptr [rbp - 0xcc]
0x400832:	mov	edi, eax
0x400834:	call	0x500050
<Block for 0x4006e2, 9 bytes>
0x4006e2:	cmp	eax, -1
0x4006e5:	je	0x400806
<Block for 0x400635, 13 bytes>
0x400635:	mov	eax, dword ptr [rbp - 0xd0]
0x40063b:	mov	edi, eax
0x40063d:	call	0x500050
<Block for 0x4004e7, 9 bytes>
0x4004e7:	cmp	eax, -1
0x4004ea:	je	0x40060b
<Block for 0x400843, 4 bytes>
0x400843:	test	eax, eax
0x400845:	je	0x4008c4
<Block for 0x400806, 3 bytes>
0x400806:	nop	
0x400807:	jmp	0x40080d
<Block for 0x4006eb, 18 bytes>
0x4006eb:	mov	eax, dword ptr [rbp - 0xb8]
0x4006f1:	mov	esi, 5
0x4006f6:	mov	edi, eax
0x4006f8:	call	0x500030
<Block for 0x400642, 5 bytes>
0x400642:	jmp	0x400839
<Block for 0x40060b, 3 bytes>
0x40060b:	nop	
0x40060c:	jmp	0x400612
<Block for 0x4004f0, 18 bytes>
0x4004f0:	mov	eax, dword ptr [rbp - 0xb0]
0x4004f6:	mov	esi, 5
0x4004fb:	mov	edi, eax
0x4004fd:	call	0x500030
<Block for 0x4008c4, 34 bytes>
0x4008c4:	lea	rdx, [rbp - 0xd4]
0x4008cb:	mov	rax, qword ptr [rbp - 0xa8]
0x4008d2:	lea	rsi, [rip + 0x22a]
0x4008d9:	mov	rdi, rax
0x4008dc:	mov	eax, 0
0x4008e1:	call	0x500058
<Block for 0x400847, 34 bytes>
0x400847:	lea	rdx, [rbp - 0xd4]
0x40084e:	mov	rax, qword ptr [rbp - 0xa8]
0x400855:	lea	rsi, [rip + 0x2a7]
0x40085c:	mov	rdi, rax
0x40085f:	mov	eax, 0
0x400864:	call	0x500058
<Block for 0x4006fd, 9 bytes>
0x4006fd:	cmp	eax, -1
0x400700:	je	0x400809
<Block for 0x400502, 9 bytes>
0x400502:	cmp	eax, -1
0x400505:	je	0x40060e
<Block for 0x4008e6, 5 bytes>
0x4008e6:	cmp	eax, 1
0x4008e9:	jne	0x400937
<Block for 0x400869, 9 bytes>
0x400869:	cmp	eax, 1
0x40086c:	jne	0x400937
<Block for 0x400809, 3 bytes>
0x400809:	nop	
0x40080a:	jmp	0x40080d
<Block for 0x400706, 23 bytes>
0x400706:	mov	eax, dword ptr [rbp - 0xb8]
0x40070c:	mov	edx, 0
0x400711:	mov	esi, 0
0x400716:	mov	edi, eax
0x400718:	call	0x500038
<Block for 0x40060e, 3 bytes>
0x40060e:	nop	
0x40060f:	jmp	0x400612
<Block for 0x40050b, 23 bytes>
0x40050b:	mov	eax, dword ptr [rbp - 0xb0]
0x400511:	mov	edx, 0
0x400516:	mov	esi, 0
0x40051b:	mov	edi, eax
0x40051d:	call	0x500038
<Block for 0x4008eb, 13 bytes>
0x4008eb:	mov	eax, dword ptr [rbp - 0xd4]
0x4008f1:	cmp	eax, 0x270f
0x4008f6:	jg	0x400937
<Block for 0x400937, 16 bytes>
0x400937:	nop	
0x400938:	mov	rax, qword ptr [rbp - 8]
0x40093c:	xor	rax, qword ptr fs:[0x28]
0x400945:	je	0x40094c
<Block for 0x400872, 17 bytes>
0x400872:	mov	eax, dword ptr [rbp - 0xd4]
0x400878:	cmp	eax, 0x270f
0x40087d:	jg	0x400937
<Block for 0x40071d, 19 bytes>
0x40071d:	mov	dword ptr [rbp - 0xcc], eax
0x400723:	cmp	dword ptr [rbp - 0xcc], -1
0x40072a:	je	0x40080c
<Block for 0x400522, 19 bytes>
0x400522:	mov	dword ptr [rbp - 0xd0], eax
0x400528:	cmp	dword ptr [rbp - 0xd0], -1
0x40052f:	je	0x400611
<Block for 0x4008f8, 22 bytes>
0x4008f8:	mov	dword ptr [rbp - 0xbc], 0
0x400902:	mov	dword ptr [rbp - 0xc0], 0
0x40090c:	jmp	0x40091c
<Block for 0x40094c, 2 bytes>
0x40094c:	leave	
0x40094d:	ret	
<Block for 0x400947, 5 bytes>
0x400947:	call	0x500068
<Block for 0x400883, 22 bytes>
0x400883:	mov	dword ptr [rbp - 0xc4], 0
0x40088d:	mov	dword ptr [rbp - 0xc8], 0
0x400897:	jmp	0x4008a7
<Block for 0x400730, 51 bytes>
0x400730:	mov	eax, 0x63
0x400735:	sub	rax, qword ptr [rbp - 0xa0]
0x40073c:	mov	rdx, rax
0x40073f:	mov	rcx, qword ptr [rbp - 0xa8]
0x400746:	mov	rax, qword ptr [rbp - 0xa0]
0x40074d:	lea	rsi, [rcx + rax]
0x400751:	mov	eax, dword ptr [rbp - 0xcc]
0x400757:	mov	ecx, 0
0x40075c:	mov	edi, eax
0x40075e:	call	0x500040
<Block for 0x40080c, 1 bytes>
0x40080c:	nop	
<Block for 0x400535, 51 bytes>
0x400535:	mov	eax, 0x63
0x40053a:	sub	rax, qword ptr [rbp - 0x90]
0x400541:	mov	rdx, rax
0x400544:	mov	rcx, qword ptr [rbp - 0xa8]
0x40054b:	mov	rax, qword ptr [rbp - 0x90]
0x400552:	lea	rsi, [rcx + rax]
0x400556:	mov	eax, dword ptr [rbp - 0xd0]
0x40055c:	mov	ecx, 0
0x400561:	mov	edi, eax
0x400563:	call	0x500040
<Block for 0x400611, 1 bytes>
0x400611:	nop	
<Block for 0x40091c, 14 bytes>
0x40091c:	mov	eax, dword ptr [rbp - 0xd4]
0x400922:	cmp	dword ptr [rbp - 0xc0], eax
0x400928:	jl	0x40090e
<Block for 0x4008a7, 14 bytes>
0x4008a7:	mov	eax, dword ptr [rbp - 0xd4]
0x4008ad:	cmp	dword ptr [rbp - 0xc8], eax
0x4008b3:	jl	0x400899
<Block for 0x400763, 19 bytes>
0x400763:	mov	dword ptr [rbp - 0xb4], eax
0x400769:	cmp	dword ptr [rbp - 0xb4], -1
0x400770:	je	0x40080d
<Block for 0x400568, 19 bytes>
0x400568:	mov	dword ptr [rbp - 0xac], eax
0x40056e:	cmp	dword ptr [rbp - 0xac], -1
0x400575:	je	0x400612
<Block for 0x40090e, 28 bytes>
0x40090e:	add	dword ptr [rbp - 0xbc], 1
0x400915:	add	dword ptr [rbp - 0xc0], 1
0x40091c:	mov	eax, dword ptr [rbp - 0xd4]
0x400922:	cmp	dword ptr [rbp - 0xc0], eax
0x400928:	jl	0x40090e
<Block for 0x40092a, 13 bytes>
0x40092a:	mov	eax, dword ptr [rbp - 0xbc]
0x400930:	mov	edi, eax
0x400932:	call	0x500060
<Block for 0x400899, 28 bytes>
0x400899:	add	dword ptr [rbp - 0xc4], 1
0x4008a0:	add	dword ptr [rbp - 0xc8], 1
0x4008a7:	mov	eax, dword ptr [rbp - 0xd4]
0x4008ad:	cmp	dword ptr [rbp - 0xc8], eax
0x4008b3:	jl	0x400899
<Block for 0x4008b5, 13 bytes>
0x4008b5:	mov	eax, dword ptr [rbp - 0xc4]
0x4008bb:	mov	edi, eax
0x4008bd:	call	0x500060
<Block for 0x400776, 13 bytes>
0x400776:	cmp	dword ptr [rbp - 0xb4], 0
0x40077d:	je	0x40080d
<Block for 0x40057b, 13 bytes>
0x40057b:	cmp	dword ptr [rbp - 0xac], 0
0x400582:	je	0x400612
<Block for 0x4008c2, 2 bytes>
0x4008c2:	jmp	0x400937
<Block for 0x400783, 52 bytes>
0x400783:	mov	eax, dword ptr [rbp - 0xb4]
0x400789:	movsxd	rdx, eax
0x40078c:	mov	rax, qword ptr [rbp - 0xa0]
0x400793:	add	rdx, rax
0x400796:	mov	rax, qword ptr [rbp - 0xa8]
0x40079d:	add	rax, rdx
0x4007a0:	mov	byte ptr [rax], 0
0x4007a3:	mov	rax, qword ptr [rbp - 0xa8]
0x4007aa:	mov	esi, 0xd
0x4007af:	mov	rdi, rax
0x4007b2:	call	0x500048
<Block for 0x400588, 52 bytes>
0x400588:	mov	eax, dword ptr [rbp - 0xac]
0x40058e:	movsxd	rdx, eax
0x400591:	mov	rax, qword ptr [rbp - 0x90]
0x400598:	add	rdx, rax
0x40059b:	mov	rax, qword ptr [rbp - 0xa8]
0x4005a2:	add	rax, rdx
0x4005a5:	mov	byte ptr [rax], 0
0x4005a8:	mov	rax, qword ptr [rbp - 0xa8]
0x4005af:	mov	esi, 0xd
0x4005b4:	mov	rdi, rax
0x4005b7:	call	0x500048
<Block for 0x4007b7, 17 bytes>
0x4007b7:	mov	qword ptr [rbp - 0x98], rax
0x4007be:	cmp	qword ptr [rbp - 0x98], 0
0x4007c6:	je	0x4007d2
<Block for 0x4005bc, 17 bytes>
0x4005bc:	mov	qword ptr [rbp - 0x88], rax
0x4005c3:	cmp	qword ptr [rbp - 0x88], 0
0x4005cb:	je	0x4005d7
<Block for 0x4007d2, 20 bytes>
0x4007d2:	mov	rax, qword ptr [rbp - 0xa8]
0x4007d9:	mov	esi, 0xa
0x4007de:	mov	rdi, rax
0x4007e1:	call	0x500048
<Block for 0x4007c8, 30 bytes>
0x4007c8:	mov	rax, qword ptr [rbp - 0x98]
0x4007cf:	mov	byte ptr [rax], 0
0x4007d2:	mov	rax, qword ptr [rbp - 0xa8]
0x4007d9:	mov	esi, 0xa
0x4007de:	mov	rdi, rax
0x4007e1:	call	0x500048
<Block for 0x4005d7, 20 bytes>
0x4005d7:	mov	rax, qword ptr [rbp - 0xa8]
0x4005de:	mov	esi, 0xa
0x4005e3:	mov	rdi, rax
0x4005e6:	call	0x500048
<Block for 0x4005cd, 30 bytes>
0x4005cd:	mov	rax, qword ptr [rbp - 0x88]
0x4005d4:	mov	byte ptr [rax], 0
0x4005d7:	mov	rax, qword ptr [rbp - 0xa8]
0x4005de:	mov	esi, 0xa
0x4005e3:	mov	rdi, rax
0x4005e6:	call	0x500048
<Block for 0x4007e6, 17 bytes>
0x4007e6:	mov	qword ptr [rbp - 0x98], rax
0x4007ed:	cmp	qword ptr [rbp - 0x98], 0
0x4007f5:	je	0x40080d
<Block for 0x4005eb, 17 bytes>
0x4005eb:	mov	qword ptr [rbp - 0x88], rax
0x4005f2:	cmp	qword ptr [rbp - 0x88], 0
0x4005fa:	je	0x400612
<Block for 0x4007f7, 12 bytes>
0x4007f7:	mov	rax, qword ptr [rbp - 0x98]
0x4007fe:	mov	byte ptr [rax], 0
0x400801:	jmp	0x40080d
<Block for 0x4005fc, 12 bytes>
0x4005fc:	mov	rax, qword ptr [rbp - 0x88]
0x400603:	mov	byte ptr [rax], 0
0x400606:	jmp	0x400612
