<Block for 0x40094e, 151 bytes>
0x40094e:	endbr64	
0x400952:	push	rbp
0x400953:	mov	rbp, rsp
0x400956:	sub	rsp, 0x90
0x40095d:	mov	rax, qword ptr fs:[0x28]
0x400966:	mov	qword ptr [rbp - 8], rax
0x40096a:	xor	eax, eax
0x40096c:	mov	qword ptr [rbp - 0x70], 0
0x400974:	mov	qword ptr [rbp - 0x68], 0
0x40097c:	mov	qword ptr [rbp - 0x60], 0
0x400984:	mov	qword ptr [rbp - 0x58], 0
0x40098c:	mov	qword ptr [rbp - 0x50], 0
0x400994:	mov	qword ptr [rbp - 0x48], 0
0x40099c:	mov	qword ptr [rbp - 0x40], 0
0x4009a4:	mov	qword ptr [rbp - 0x38], 0
0x4009ac:	mov	qword ptr [rbp - 0x30], 0
0x4009b4:	mov	qword ptr [rbp - 0x28], 0
0x4009bc:	mov	qword ptr [rbp - 0x20], 0
0x4009c4:	mov	qword ptr [rbp - 0x18], 0
0x4009cc:	mov	dword ptr [rbp - 0x10], 0
0x4009d3:	lea	rax, [rbp - 0x70]
0x4009d7:	mov	qword ptr [rbp - 0x78], rax
0x4009db:	mov	eax, 0
0x4009e0:	call	0x500000
<Block for 0x4009e5, 4 bytes>
0x4009e5:	test	eax, eax
0x4009e7:	je	0x4009f8
<Block for 0x4009f8, 23 bytes>
0x4009f8:	mov	rax, qword ptr [rbp - 0x78]
0x4009fc:	mov	word ptr [rax], 0x3531
0x400a01:	mov	byte ptr [rax + 2], 0
0x400a05:	mov	eax, 0
0x400a0a:	call	0x500000
<Block for 0x4009e9, 15 bytes>
0x4009e9:	mov	rax, qword ptr [rbp - 0x78]
0x4009ed:	mov	word ptr [rax], 0x3531
0x4009f2:	mov	byte ptr [rax + 2], 0
0x4009f6:	jmp	0x400a05
<Block for 0x400a0f, 4 bytes>
0x400a0f:	test	eax, eax
0x400a11:	je	0x400a7c
<Block for 0x400a05, 10 bytes>
0x400a05:	mov	eax, 0
0x400a0a:	call	0x500000
<Block for 0x400a7c, 31 bytes>
0x400a7c:	lea	rdx, [rbp - 0x8c]
0x400a83:	mov	rax, qword ptr [rbp - 0x78]
0x400a87:	lea	rsi, [rip + 0x75]
0x400a8e:	mov	rdi, rax
0x400a91:	mov	eax, 0
0x400a96:	call	0x500058
<Block for 0x400a13, 31 bytes>
0x400a13:	lea	rdx, [rbp - 0x8c]
0x400a1a:	mov	rax, qword ptr [rbp - 0x78]
0x400a1e:	lea	rsi, [rip + 0xde]
0x400a25:	mov	rdi, rax
0x400a28:	mov	eax, 0
0x400a2d:	call	0x500058
<Block for 0x400a9b, 5 bytes>
0x400a9b:	cmp	eax, 1
0x400a9e:	jne	0x400acd
<Block for 0x400a32, 9 bytes>
0x400a32:	cmp	eax, 1
0x400a35:	jne	0x400acd
<Block for 0x400aa0, 16 bytes>
0x400aa0:	mov	dword ptr [rbp - 0x7c], 0
0x400aa7:	mov	dword ptr [rbp - 0x80], 0
0x400aae:	jmp	0x400ab8
<Block for 0x400acd, 16 bytes>
0x400acd:	nop	
0x400ace:	mov	rax, qword ptr [rbp - 8]
0x400ad2:	xor	rax, qword ptr fs:[0x28]
0x400adb:	je	0x400ae2
<Block for 0x400a3b, 22 bytes>
0x400a3b:	mov	dword ptr [rbp - 0x84], 0
0x400a45:	mov	dword ptr [rbp - 0x88], 0
0x400a4f:	jmp	0x400a5f
<Block for 0x400ab8, 11 bytes>
0x400ab8:	mov	eax, dword ptr [rbp - 0x8c]
0x400abe:	cmp	dword ptr [rbp - 0x80], eax
0x400ac1:	jl	0x400ab0
<Block for 0x400ae2, 2 bytes>
0x400ae2:	leave	
0x400ae3:	ret	
<Block for 0x400add, 5 bytes>
0x400add:	call	0x500068
<Block for 0x400a5f, 14 bytes>
0x400a5f:	mov	eax, dword ptr [rbp - 0x8c]
0x400a65:	cmp	dword ptr [rbp - 0x88], eax
0x400a6b:	jl	0x400a51
<Block for 0x400ab0, 19 bytes>
0x400ab0:	add	dword ptr [rbp - 0x7c], 1
0x400ab4:	add	dword ptr [rbp - 0x80], 1
0x400ab8:	mov	eax, dword ptr [rbp - 0x8c]
0x400abe:	cmp	dword ptr [rbp - 0x80], eax
0x400ac1:	jl	0x400ab0
<Block for 0x400ac3, 10 bytes>
0x400ac3:	mov	eax, dword ptr [rbp - 0x7c]
0x400ac6:	mov	edi, eax
0x400ac8:	call	0x500060
<Block for 0x400a51, 28 bytes>
0x400a51:	add	dword ptr [rbp - 0x84], 1
0x400a58:	add	dword ptr [rbp - 0x88], 1
0x400a5f:	mov	eax, dword ptr [rbp - 0x8c]
0x400a65:	cmp	dword ptr [rbp - 0x88], eax
0x400a6b:	jl	0x400a51
<Block for 0x400a6d, 13 bytes>
0x400a6d:	mov	eax, dword ptr [rbp - 0x84]
0x400a73:	mov	edi, eax
0x400a75:	call	0x500060
<Block for 0x400a7a, 2 bytes>
0x400a7a:	jmp	0x400acd
