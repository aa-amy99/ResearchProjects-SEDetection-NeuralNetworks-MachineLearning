<Block for 0x40004c, 23 bytes>
0x40004c:	endbr64	
0x400050:	push	rbp
0x400051:	mov	rbp, rsp
0x400054:	sub	rsp, 0x10
0x400058:	mov	eax, dword ptr [rip + 0x10e]
0x40005e:	cmp	eax, 5
0x400061:	je	0x400071
<Block for 0x400071, 5 bytes>
0x400071:	call	0x500018
<Block for 0x400063, 12 bytes>
0x400063:	lea	rdi, [rip + 0x117]
0x40006a:	call	0x500010
<Block for 0x400076, 28 bytes>
0x400076:	mov	dword ptr [rax], 0
0x40007c:	mov	edx, 0
0x400081:	mov	esi, 0
0x400086:	lea	rdi, [rip + 0xe3]
0x40008d:	call	0x500000
<Block for 0x40006f, 2 bytes>
0x40006f:	jmp	0x4000d0
<Block for 0x400092, 9 bytes>
0x400092:	mov	qword ptr [rbp - 8], rax
0x400096:	call	0x500018
<Block for 0x4000d0, 3 bytes>
0x4000d0:	nop	
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x40009b, 7 bytes>
0x40009b:	mov	eax, dword ptr [rax]
0x40009d:	cmp	eax, 0x22
0x4000a0:	jne	0x4000b8
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rdi, [rip + 0xed]
0x4000a9:	call	0x500010
<Block for 0x4000b8, 24 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	mov	rsi, rax
0x4000bf:	lea	rdi, [rip + 0xb6]
0x4000c6:	mov	eax, 0
0x4000cb:	call	0x500008
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 1
0x4000b3:	call	0x500020
