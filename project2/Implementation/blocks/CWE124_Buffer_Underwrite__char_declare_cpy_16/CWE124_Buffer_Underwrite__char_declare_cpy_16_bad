<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 45 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	lea	rax, [rbp - 0xe0]
0x400042:	sub	rax, 8
0x400046:	mov	qword ptr [rbp - 0xe8], rax
0x40004d:	nop	
0x40004e:	lea	rax, [rbp - 0x70]
0x400052:	mov	edx, 0x63
0x400057:	mov	esi, 0x43
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500000
<Block for 0x400064, 26 bytes>
0x400064:	mov	byte ptr [rbp - 0xd], 0
0x400068:	lea	rdx, [rbp - 0x70]
0x40006c:	mov	rax, qword ptr [rbp - 0xe8]
0x400073:	mov	rsi, rdx
0x400076:	mov	rdi, rax
0x400079:	call	0x500008
<Block for 0x40007e, 15 bytes>
0x40007e:	mov	rax, qword ptr [rbp - 0xe8]
0x400085:	mov	rdi, rax
0x400088:	call	0x500010
<Block for 0x40008d, 16 bytes>
0x40008d:	nop	
0x40008e:	mov	rax, qword ptr [rbp - 8]
0x400092:	xor	rax, qword ptr fs:[0x28]
0x40009b:	je	0x4000a2
<Block for 0x4000a2, 2 bytes>
0x4000a2:	leave	
0x4000a3:	ret	
<Block for 0x40009d, 5 bytes>
0x40009d:	call	0x500018
