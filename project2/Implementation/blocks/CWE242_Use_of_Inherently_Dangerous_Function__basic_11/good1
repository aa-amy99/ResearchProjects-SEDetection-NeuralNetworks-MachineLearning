<Block for 0x400084, 37 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x20
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	eax, 0
0x4000a4:	call	0x500028
<Block for 0x4000a9, 4 bytes>
0x4000a9:	test	eax, eax
0x4000ab:	je	0x4000bb
<Block for 0x4000bb, 24 bytes>
0x4000bb:	mov	rdx, qword ptr [rip + 0xfff6e]
0x4000c2:	lea	rax, [rbp - 0x12]
0x4000c6:	mov	esi, 0xa
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500038
<Block for 0x4000ad, 12 bytes>
0x4000ad:	lea	rdi, [rip + 0x151]
0x4000b4:	call	0x500010
<Block for 0x4000d3, 11 bytes>
0x4000d3:	mov	qword ptr [rbp - 0x20], rax
0x4000d7:	cmp	qword ptr [rbp - 0x20], 0
0x4000dc:	jne	0x4000f4
<Block for 0x4000b9, 2 bytes>
0x4000b9:	jmp	0x400104
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rdi, [rip + 0xe3]
0x4000e5:	call	0x500010
<Block for 0x4000f4, 16 bytes>
0x4000f4:	mov	byte ptr [rbp - 9], 0
0x4000f8:	lea	rax, [rbp - 0x12]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500010
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	edi, 1
0x4000ef:	call	0x500018
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500020
