<Block for 0x4000fc, 37 bytes>
0x4000fc:	endbr64	
0x400100:	push	rbp
0x400101:	mov	rbp, rsp
0x400104:	sub	rsp, 0x20
0x400108:	mov	rax, qword ptr fs:[0x28]
0x400111:	mov	qword ptr [rbp - 8], rax
0x400115:	xor	eax, eax
0x400117:	mov	eax, 0
0x40011c:	call	0x40000f
<Block for 0x400121, 4 bytes>
0x400121:	test	eax, eax
0x400123:	je	0x400136
<Block for 0x400136, 54 bytes>
0x400136:	mov	eax, 0x10
0x40013b:	sub	rax, 1
0x40013f:	add	rax, 9
0x400143:	mov	esi, 0x10
0x400148:	mov	edx, 0
0x40014d:	div	rsi
0x400150:	imul	rax, rax, 0x10
0x400154:	mov	rdx, rax
0x400157:	and	rdx, 0xfffffffffffff000
0x40015e:	mov	rcx, rsp
0x400161:	sub	rcx, rdx
0x400164:	mov	rdx, rcx
0x400167:	cmp	rsp, rdx
0x40016a:	je	0x40017e
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x1d4]
0x40012c:	call	0x500010
<Block for 0x40017e, 26 bytes>
0x40017e:	mov	rdx, rax
0x400181:	and	edx, 0xfff
0x400187:	sub	rsp, rdx
0x40018a:	mov	rdx, rax
0x40018d:	and	edx, 0xfff
0x400193:	test	rdx, rdx
0x400196:	je	0x4001a8
<Block for 0x40016c, 18 bytes>
0x40016c:	sub	rsp, 0x1000
0x400173:	or	qword ptr [rsp + 0xff8], 0
0x40017c:	jmp	0x400167
<Block for 0x400131, 5 bytes>
0x400131:	jmp	0x4001de
<Block for 0x4001a8, 54 bytes>
0x4001a8:	mov	rax, rsp
0x4001ab:	add	rax, 0xf
0x4001af:	shr	rax, 4
0x4001b3:	shl	rax, 4
0x4001b7:	mov	qword ptr [rbp - 0x10], rax
0x4001bb:	mov	byte ptr [rbp - 0x12], 5
0x4001bf:	mov	rax, qword ptr [rbp - 0x10]
0x4001c3:	movzx	edx, byte ptr [rbp - 0x12]
0x4001c7:	mov	byte ptr [rax], dl
0x4001c9:	mov	rax, qword ptr [rbp - 0x10]
0x4001cd:	movzx	eax, byte ptr [rax]
0x4001d0:	mov	byte ptr [rbp - 0x11], al
0x4001d3:	movsx	eax, byte ptr [rbp - 0x11]
0x4001d7:	mov	edi, eax
0x4001d9:	call	0x500000
<Block for 0x400198, 70 bytes>
0x400198:	and	eax, 0xfff
0x40019d:	sub	rax, 8
0x4001a1:	add	rax, rsp
0x4001a4:	or	qword ptr [rax], 0
0x4001a8:	mov	rax, rsp
0x4001ab:	add	rax, 0xf
0x4001af:	shr	rax, 4
0x4001b3:	shl	rax, 4
0x4001b7:	mov	qword ptr [rbp - 0x10], rax
0x4001bb:	mov	byte ptr [rbp - 0x12], 5
0x4001bf:	mov	rax, qword ptr [rbp - 0x10]
0x4001c3:	movzx	edx, byte ptr [rbp - 0x12]
0x4001c7:	mov	byte ptr [rax], dl
0x4001c9:	mov	rax, qword ptr [rbp - 0x10]
0x4001cd:	movzx	eax, byte ptr [rax]
0x4001d0:	mov	byte ptr [rbp - 0x11], al
0x4001d3:	movsx	eax, byte ptr [rbp - 0x11]
0x4001d7:	mov	edi, eax
0x4001d9:	call	0x500000
<Block for 0x400167, 5 bytes>
0x400167:	cmp	rsp, rdx
0x40016a:	je	0x40017e
<Block for 0x4001de, 16 bytes>
0x4001de:	nop	
0x4001df:	mov	rax, qword ptr [rbp - 8]
0x4001e3:	xor	rax, qword ptr fs:[0x28]
0x4001ec:	je	0x4001f3
<Block for 0x4001f3, 2 bytes>
0x4001f3:	leave	
0x4001f4:	ret	
<Block for 0x4001ee, 5 bytes>
0x4001ee:	call	0x500008
