<Block for 0x4001e1, 147 bytes>
0x4001e1:	endbr64	
0x4001e5:	push	rbp
0x4001e6:	mov	rbp, rsp
0x4001e9:	add	rsp, -0x80
0x4001ed:	mov	rax, qword ptr fs:[0x28]
0x4001f6:	mov	qword ptr [rbp - 8], rax
0x4001fa:	xor	eax, eax
0x4001fc:	mov	qword ptr [rbp - 0x70], 0
0x400204:	mov	qword ptr [rbp - 0x68], 0
0x40020c:	mov	qword ptr [rbp - 0x60], 0
0x400214:	mov	qword ptr [rbp - 0x58], 0
0x40021c:	mov	qword ptr [rbp - 0x50], 0
0x400224:	mov	qword ptr [rbp - 0x48], 0
0x40022c:	mov	qword ptr [rbp - 0x40], 0
0x400234:	mov	qword ptr [rbp - 0x38], 0
0x40023c:	mov	qword ptr [rbp - 0x30], 0
0x400244:	mov	qword ptr [rbp - 0x28], 0
0x40024c:	mov	qword ptr [rbp - 0x20], 0
0x400254:	mov	qword ptr [rbp - 0x18], 0
0x40025c:	mov	dword ptr [rbp - 0x10], 0
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	mov	qword ptr [rbp - 0x78], rax
0x40026b:	mov	eax, 1
0x400270:	test	eax, eax
0x400272:	je	0x400293
<Block for 0x400293, 12 bytes>
0x400293:	mov	rax, qword ptr [rbp - 0x78]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500000
<Block for 0x400274, 43 bytes>
0x400274:	mov	rax, qword ptr [rbp - 0x78]
0x400278:	movabs	rdx, 0x6e69622f7273752f
0x400282:	movabs	rcx, 0x616c2d20736c2f
0x40028c:	mov	qword ptr [rax], rdx
0x40028f:	mov	qword ptr [rax + 8], rcx
0x400293:	mov	rax, qword ptr [rbp - 0x78]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500000
<Block for 0x40029f, 4 bytes>
0x40029f:	test	eax, eax
0x4002a1:	jg	0x4002b9
<Block for 0x4002a3, 12 bytes>
0x4002a3:	lea	rdi, [rip + 0x4e]
0x4002aa:	call	0x500008
<Block for 0x4002b9, 16 bytes>
0x4002b9:	nop	
0x4002ba:	mov	rax, qword ptr [rbp - 8]
0x4002be:	xor	rax, qword ptr fs:[0x28]
0x4002c7:	je	0x4002ce
<Block for 0x4002af, 10 bytes>
0x4002af:	mov	edi, 1
0x4002b4:	call	0x500010
<Block for 0x4002ce, 2 bytes>
0x4002ce:	leave	
0x4002cf:	ret	
<Block for 0x4002c9, 5 bytes>
0x4002c9:	call	0x500018
