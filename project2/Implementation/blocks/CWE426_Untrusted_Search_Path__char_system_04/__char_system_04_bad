<Block for 0x400000, 147 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x70], 0
0x400023:	mov	qword ptr [rbp - 0x68], 0
0x40002b:	mov	qword ptr [rbp - 0x60], 0
0x400033:	mov	qword ptr [rbp - 0x58], 0
0x40003b:	mov	qword ptr [rbp - 0x50], 0
0x400043:	mov	qword ptr [rbp - 0x48], 0
0x40004b:	mov	qword ptr [rbp - 0x40], 0
0x400053:	mov	qword ptr [rbp - 0x38], 0
0x40005b:	mov	qword ptr [rbp - 0x30], 0
0x400063:	mov	qword ptr [rbp - 0x28], 0
0x40006b:	mov	qword ptr [rbp - 0x20], 0
0x400073:	mov	qword ptr [rbp - 0x18], 0
0x40007b:	mov	dword ptr [rbp - 0x10], 0
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	mov	qword ptr [rbp - 0x78], rax
0x40008a:	mov	eax, 1
0x40008f:	test	eax, eax
0x400091:	je	0x4000a7
<Block for 0x4000a7, 12 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x78]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x400093, 32 bytes>
0x400093:	mov	rax, qword ptr [rbp - 0x78]
0x400097:	mov	dword ptr [rax], 0x2d20736c
0x40009d:	mov	word ptr [rax + 4], 0x616c
0x4000a3:	mov	byte ptr [rax + 6], 0
0x4000a7:	mov	rax, qword ptr [rbp - 0x78]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x4000b3, 4 bytes>
0x4000b3:	test	eax, eax
0x4000b5:	jg	0x4000cd
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rdi, [rip + 0x23a]
0x4000be:	call	0x500008
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 8]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x4000e2
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	edi, 1
0x4000c8:	call	0x500010
<Block for 0x4000e2, 2 bytes>
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500018
