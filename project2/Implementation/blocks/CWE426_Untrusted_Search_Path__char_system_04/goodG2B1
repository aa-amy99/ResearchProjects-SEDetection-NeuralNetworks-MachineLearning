<Block for 0x4000e4, 147 bytes>
0x4000e4:	endbr64	
0x4000e8:	push	rbp
0x4000e9:	mov	rbp, rsp
0x4000ec:	add	rsp, -0x80
0x4000f0:	mov	rax, qword ptr fs:[0x28]
0x4000f9:	mov	qword ptr [rbp - 8], rax
0x4000fd:	xor	eax, eax
0x4000ff:	mov	qword ptr [rbp - 0x70], 0
0x400107:	mov	qword ptr [rbp - 0x68], 0
0x40010f:	mov	qword ptr [rbp - 0x60], 0
0x400117:	mov	qword ptr [rbp - 0x58], 0
0x40011f:	mov	qword ptr [rbp - 0x50], 0
0x400127:	mov	qword ptr [rbp - 0x48], 0
0x40012f:	mov	qword ptr [rbp - 0x40], 0
0x400137:	mov	qword ptr [rbp - 0x38], 0
0x40013f:	mov	qword ptr [rbp - 0x30], 0
0x400147:	mov	qword ptr [rbp - 0x28], 0
0x40014f:	mov	qword ptr [rbp - 0x20], 0
0x400157:	mov	qword ptr [rbp - 0x18], 0
0x40015f:	mov	dword ptr [rbp - 0x10], 0
0x400166:	lea	rax, [rbp - 0x70]
0x40016a:	mov	qword ptr [rbp - 0x78], rax
0x40016e:	mov	eax, 0
0x400173:	test	eax, eax
0x400175:	je	0x400185
<Block for 0x400185, 43 bytes>
0x400185:	mov	rax, qword ptr [rbp - 0x78]
0x400189:	movabs	rdx, 0x6e69622f7273752f
0x400193:	movabs	rcx, 0x616c2d20736c2f
0x40019d:	mov	qword ptr [rax], rdx
0x4001a0:	mov	qword ptr [rax + 8], rcx
0x4001a4:	mov	rax, qword ptr [rbp - 0x78]
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500000
<Block for 0x400177, 12 bytes>
0x400177:	lea	rdi, [rip + 0x194]
0x40017e:	call	0x500008
<Block for 0x4001b0, 4 bytes>
0x4001b0:	test	eax, eax
0x4001b2:	jg	0x4001ca
<Block for 0x400183, 2 bytes>
0x400183:	jmp	0x4001a4
<Block for 0x4001b4, 12 bytes>
0x4001b4:	lea	rdi, [rip + 0x13d]
0x4001bb:	call	0x500008
<Block for 0x4001ca, 16 bytes>
0x4001ca:	nop	
0x4001cb:	mov	rax, qword ptr [rbp - 8]
0x4001cf:	xor	rax, qword ptr fs:[0x28]
0x4001d8:	je	0x4001df
<Block for 0x4001a4, 12 bytes>
0x4001a4:	mov	rax, qword ptr [rbp - 0x78]
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500000
<Block for 0x4001c0, 10 bytes>
0x4001c0:	mov	edi, 1
0x4001c5:	call	0x500010
<Block for 0x4001df, 2 bytes>
0x4001df:	leave	
0x4001e0:	ret	
<Block for 0x4001da, 5 bytes>
0x4001da:	call	0x500018
