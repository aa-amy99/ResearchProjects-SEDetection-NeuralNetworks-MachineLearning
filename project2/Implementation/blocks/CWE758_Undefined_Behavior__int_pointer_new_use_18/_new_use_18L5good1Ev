<Block for 0x400050, 27 bytes>
0x400050:	endbr64	
0x400054:	push	rbp
0x400055:	mov	rbp, rsp
0x400058:	sub	rsp, 0x20
0x40005c:	nop	
0x40005d:	endbr64	
0x400061:	mov	edi, 4
0x400066:	call	0x500000
<Block for 0x40006b, 24 bytes>
0x40006b:	mov	qword ptr [rbp - 0x18], rax
0x40006f:	mov	rax, qword ptr [rbp - 0x18]
0x400073:	mov	dword ptr [rax], 5
0x400079:	mov	edi, 8
0x40007e:	call	0x500000
<Block for 0x400083, 39 bytes>
0x400083:	mov	qword ptr [rbp - 0x10], rax
0x400087:	mov	rax, qword ptr [rbp - 0x10]
0x40008b:	mov	rdx, qword ptr [rbp - 0x18]
0x40008f:	mov	qword ptr [rax], rdx
0x400092:	mov	rax, qword ptr [rbp - 0x10]
0x400096:	mov	rax, qword ptr [rax]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	mov	eax, dword ptr [rax]
0x4000a3:	mov	edi, eax
0x4000a5:	call	0x500010
<Block for 0x4000aa, 9 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 0x10]
0x4000ae:	test	rax, rax
0x4000b1:	je	0x4000c0
<Block for 0x4000c0, 3 bytes>
0x4000c0:	nop	
0x4000c1:	leave	
0x4000c2:	ret	
<Block for 0x4000b3, 13 bytes>
0x4000b3:	mov	esi, 8
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500008
