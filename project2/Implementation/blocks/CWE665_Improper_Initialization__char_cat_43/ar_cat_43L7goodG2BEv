<Block for 0x4000b9, 59 bytes>
0x4000b9:	endbr64	
0x4000bd:	push	rbp
0x4000be:	mov	rbp, rsp
0x4000c1:	sub	rsp, 0xf0
0x4000c8:	mov	rax, qword ptr fs:[0x28]
0x4000d1:	mov	qword ptr [rbp - 8], rax
0x4000d5:	xor	eax, eax
0x4000d7:	lea	rax, [rbp - 0xe0]
0x4000de:	mov	qword ptr [rbp - 0xe8], rax
0x4000e5:	lea	rax, [rbp - 0xe8]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x4000a0
<Block for 0x4000f4, 22 bytes>
0x4000f4:	lea	rax, [rbp - 0x70]
0x4000f8:	mov	edx, 0x63
0x4000fd:	mov	esi, 0x43
0x400102:	mov	rdi, rax
0x400105:	call	0x500000
<Block for 0x40010a, 26 bytes>
0x40010a:	mov	byte ptr [rbp - 0xd], 0
0x40010e:	mov	rax, qword ptr [rbp - 0xe8]
0x400115:	lea	rdx, [rbp - 0x70]
0x400119:	mov	rsi, rdx
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500008
<Block for 0x400124, 15 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0xe8]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500010
<Block for 0x400133, 16 bytes>
0x400133:	nop	
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	xor	rax, qword ptr fs:[0x28]
0x400141:	je	0x400148
<Block for 0x400148, 2 bytes>
0x400148:	leave	
0x400149:	ret	
<Block for 0x400143, 5 bytes>
0x400143:	call	0x500018
