<Block for 0x40008e, 30 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x10
0x40009a:	mov	qword ptr [rbp - 8], 0
0x4000a2:	mov	edi, 0x320
0x4000a7:	call	0x500000
<Block for 0x4000ac, 19 bytes>
0x4000ac:	mov	qword ptr [rbp - 8], rax
0x4000b0:	mov	qword ptr [rbp - 0x10], 0
0x4000b8:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000bd:	ja	0x4000f9
<Block for 0x4000bf, 58 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 0x10]
0x4000c3:	lea	rdx, [rax*8]
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	add	rax, rdx
0x4000d2:	mov	dword ptr [rax], 1
0x4000d8:	mov	rax, qword ptr [rbp - 0x10]
0x4000dc:	lea	rdx, [rax*8]
0x4000e4:	mov	rax, qword ptr [rbp - 8]
0x4000e8:	add	rax, rdx
0x4000eb:	mov	dword ptr [rax + 4], 2
0x4000f2:	add	qword ptr [rbp - 0x10], 1
0x4000f7:	jmp	0x4000b8
<Block for 0x4000f9, 7 bytes>
0x4000f9:	cmp	qword ptr [rbp - 8], 0
0x4000fe:	je	0x40010c
<Block for 0x4000b8, 7 bytes>
0x4000b8:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000bd:	ja	0x4000f9
<Block for 0x40010c, 3 bytes>
0x40010c:	nop	
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400100, 12 bytes>
0x400100:	mov	rax, qword ptr [rbp - 8]
0x400104:	mov	rdi, rax
0x400107:	call	0x500008
