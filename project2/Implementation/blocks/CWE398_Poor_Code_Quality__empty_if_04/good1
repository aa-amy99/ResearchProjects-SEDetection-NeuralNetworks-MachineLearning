<Block for 0x40006c, 21 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x10
0x400078:	mov	eax, 0
0x40007d:	test	eax, eax
0x40007f:	je	0x40008f
<Block for 0x40008f, 5 bytes>
0x40008f:	call	0x500000
<Block for 0x400081, 12 bytes>
0x400081:	lea	rdi, [rip + 0x13b]
0x400088:	call	0x500008
<Block for 0x400094, 55 bytes>
0x400094:	mov	edx, eax
0x400096:	movsxd	rax, edx
0x400099:	imul	rax, rax, 0x55555556
0x4000a0:	shr	rax, 0x20
0x4000a4:	mov	rcx, rax
0x4000a7:	mov	eax, edx
0x4000a9:	sar	eax, 0x1f
0x4000ac:	mov	esi, ecx
0x4000ae:	sub	esi, eax
0x4000b0:	mov	eax, esi
0x4000b2:	mov	dword ptr [rbp - 4], eax
0x4000b5:	mov	ecx, dword ptr [rbp - 4]
0x4000b8:	mov	eax, ecx
0x4000ba:	add	eax, eax
0x4000bc:	add	eax, ecx
0x4000be:	sub	edx, eax
0x4000c0:	mov	eax, edx
0x4000c2:	mov	dword ptr [rbp - 4], eax
0x4000c5:	cmp	dword ptr [rbp - 4], 0
0x4000c9:	jne	0x4000d9
<Block for 0x40008d, 2 bytes>
0x40008d:	jmp	0x4000f1
<Block for 0x4000cb, 12 bytes>
0x4000cb:	lea	rdi, [rip + 0x106]
0x4000d2:	call	0x500008
<Block for 0x4000d9, 12 bytes>
0x4000d9:	lea	rdi, [rip + 0xb8]
0x4000e0:	call	0x500008
<Block for 0x4000f1, 3 bytes>
0x4000f1:	nop	
0x4000f2:	leave	
0x4000f3:	ret	
<Block for 0x4000d7, 2 bytes>
0x4000d7:	jmp	0x4000e5
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rdi, [rip + 0x104]
0x4000ec:	call	0x500008
