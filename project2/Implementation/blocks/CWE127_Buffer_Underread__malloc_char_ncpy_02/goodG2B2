<Block for 0x4001a0, 45 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	add	rsp, -0x80
0x4001ac:	mov	rax, qword ptr fs:[0x28]
0x4001b5:	mov	qword ptr [rbp - 8], rax
0x4001b9:	xor	eax, eax
0x4001bb:	mov	qword ptr [rbp - 0x80], 0
0x4001c3:	mov	edi, 0x64
0x4001c8:	call	0x500000
<Block for 0x4001cd, 11 bytes>
0x4001cd:	mov	qword ptr [rbp - 0x78], rax
0x4001d1:	cmp	qword ptr [rbp - 0x78], 0
0x4001d6:	jne	0x4001e2
<Block for 0x4001d8, 10 bytes>
0x4001d8:	mov	edi, 0xffffffff
0x4001dd:	call	0x500008
<Block for 0x4001e2, 22 bytes>
0x4001e2:	mov	rax, qword ptr [rbp - 0x78]
0x4001e6:	mov	edx, 0x63
0x4001eb:	mov	esi, 0x41
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500010
<Block for 0x4001f8, 41 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0x78]
0x4001fc:	add	rax, 0x63
0x400200:	mov	byte ptr [rax], 0
0x400203:	mov	rax, qword ptr [rbp - 0x78]
0x400207:	mov	qword ptr [rbp - 0x80], rax
0x40020b:	lea	rax, [rbp - 0x70]
0x40020f:	mov	edx, 0x63
0x400214:	mov	esi, 0x43
0x400219:	mov	rdi, rax
0x40021c:	call	0x500010
<Block for 0x400221, 16 bytes>
0x400221:	mov	byte ptr [rbp - 0xd], 0
0x400225:	lea	rax, [rbp - 0x70]
0x400229:	mov	rdi, rax
0x40022c:	call	0x500018
<Block for 0x400231, 22 bytes>
0x400231:	mov	rdx, rax
0x400234:	mov	rcx, qword ptr [rbp - 0x80]
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	rsi, rcx
0x40023f:	mov	rdi, rax
0x400242:	call	0x500020
<Block for 0x400247, 16 bytes>
0x400247:	mov	byte ptr [rbp - 0xd], 0
0x40024b:	lea	rax, [rbp - 0x70]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500028
<Block for 0x400257, 16 bytes>
0x400257:	nop	
0x400258:	mov	rax, qword ptr [rbp - 8]
0x40025c:	xor	rax, qword ptr fs:[0x28]
0x400265:	je	0x40026c
<Block for 0x40026c, 2 bytes>
0x40026c:	leave	
0x40026d:	ret	
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500030
