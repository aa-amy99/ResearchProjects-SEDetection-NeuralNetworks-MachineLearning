<Block for 0x4000bf, 45 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	add	rsp, -0x80
0x4000cb:	mov	rax, qword ptr fs:[0x28]
0x4000d4:	mov	qword ptr [rbp - 8], rax
0x4000d8:	xor	eax, eax
0x4000da:	mov	qword ptr [rbp - 0x80], 0
0x4000e2:	mov	edi, 0x64
0x4000e7:	call	0x500000
<Block for 0x4000ec, 26 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x78], rax
0x4000f0:	mov	rax, qword ptr [rbp - 0x78]
0x4000f4:	mov	edx, 0x63
0x4000f9:	mov	esi, 0x41
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500008
<Block for 0x400106, 42 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x78]
0x40010a:	add	rax, 0x63
0x40010e:	mov	byte ptr [rax], 0
0x400111:	mov	rax, qword ptr [rbp - 0x78]
0x400115:	mov	qword ptr [rbp - 0x80], rax
0x400119:	nop	
0x40011a:	lea	rax, [rbp - 0x70]
0x40011e:	mov	edx, 0x63
0x400123:	mov	esi, 0x43
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x400130, 28 bytes>
0x400130:	mov	byte ptr [rbp - 0xd], 0
0x400134:	lea	rcx, [rbp - 0x70]
0x400138:	mov	rax, qword ptr [rbp - 0x80]
0x40013c:	mov	edx, 0x63
0x400141:	mov	rsi, rcx
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x40014c, 23 bytes>
0x40014c:	mov	rax, qword ptr [rbp - 0x80]
0x400150:	add	rax, 0x63
0x400154:	mov	byte ptr [rax], 0
0x400157:	mov	rax, qword ptr [rbp - 0x80]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500018
<Block for 0x400163, 16 bytes>
0x400163:	nop	
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	xor	rax, qword ptr fs:[0x28]
0x400171:	je	0x400178
<Block for 0x400178, 2 bytes>
0x400178:	leave	
0x400179:	ret	
<Block for 0x400173, 5 bytes>
0x400173:	call	0x500020
