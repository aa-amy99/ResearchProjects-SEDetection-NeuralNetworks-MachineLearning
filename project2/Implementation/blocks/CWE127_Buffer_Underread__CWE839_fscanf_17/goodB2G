<Block for 0x4000cc, 43 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x40
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4000ee:	mov	dword ptr [rbp - 0x38], 0
0x4000f5:	jmp	0x40011a
<Block for 0x40011a, 6 bytes>
0x40011a:	cmp	dword ptr [rbp - 0x38], 0
0x40011e:	jle	0x4000f7
<Block for 0x4000f7, 31 bytes>
0x4000f7:	mov	rax, qword ptr [rip + 0xfff02]
0x4000fe:	lea	rdx, [rbp - 0x3c]
0x400102:	lea	rsi, [rip + 0x167]
0x400109:	mov	rdi, rax
0x40010c:	mov	eax, 0
0x400111:	call	0x500008
<Block for 0x400120, 9 bytes>
0x400120:	mov	dword ptr [rbp - 0x34], 0
0x400127:	jmp	0x400182
<Block for 0x400116, 10 bytes>
0x400116:	add	dword ptr [rbp - 0x38], 1
0x40011a:	cmp	dword ptr [rbp - 0x38], 0
0x40011e:	jle	0x4000f7
<Block for 0x400182, 6 bytes>
0x400182:	cmp	dword ptr [rbp - 0x34], 0
0x400186:	jle	0x400129
<Block for 0x400129, 47 bytes>
0x400129:	mov	qword ptr [rbp - 0x30], 0
0x400131:	mov	qword ptr [rbp - 0x28], 0
0x400139:	mov	qword ptr [rbp - 0x20], 0
0x400141:	mov	qword ptr [rbp - 0x18], 0
0x400149:	mov	qword ptr [rbp - 0x10], 0
0x400151:	mov	eax, dword ptr [rbp - 0x3c]
0x400154:	test	eax, eax
0x400156:	js	0x400172
<Block for 0x400188, 16 bytes>
0x400188:	nop	
0x400189:	mov	rax, qword ptr [rbp - 8]
0x40018d:	xor	rax, qword ptr fs:[0x28]
0x400196:	je	0x40019d
<Block for 0x400172, 12 bytes>
0x400172:	lea	rdi, [rip + 0x11f]
0x400179:	call	0x500018
<Block for 0x400158, 8 bytes>
0x400158:	mov	eax, dword ptr [rbp - 0x3c]
0x40015b:	cmp	eax, 9
0x40015e:	jg	0x400172
<Block for 0x40019d, 2 bytes>
0x40019d:	leave	
0x40019e:	ret	
<Block for 0x400198, 5 bytes>
0x400198:	call	0x500020
<Block for 0x40017e, 10 bytes>
0x40017e:	add	dword ptr [rbp - 0x34], 1
0x400182:	cmp	dword ptr [rbp - 0x34], 0
0x400186:	jle	0x400129
<Block for 0x400160, 16 bytes>
0x400160:	mov	eax, dword ptr [rbp - 0x3c]
0x400163:	cdqe	
0x400165:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400169:	mov	edi, eax
0x40016b:	call	0x500010
<Block for 0x400170, 2 bytes>
0x400170:	jmp	0x40017e
