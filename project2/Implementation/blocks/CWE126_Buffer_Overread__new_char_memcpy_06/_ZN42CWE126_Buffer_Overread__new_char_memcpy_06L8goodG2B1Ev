<Block for 0x4000c8, 45 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	add	rsp, -0x80
0x4000d4:	mov	rax, qword ptr fs:[0x28]
0x4000dd:	mov	qword ptr [rbp - 8], rax
0x4000e1:	xor	eax, eax
0x4000e3:	mov	qword ptr [rbp - 0x78], 0
0x4000eb:	mov	edi, 0x64
0x4000f0:	call	0x500000
<Block for 0x4000f5, 26 bytes>
0x4000f5:	mov	qword ptr [rbp - 0x78], rax
0x4000f9:	mov	rax, qword ptr [rbp - 0x78]
0x4000fd:	mov	edx, 0x63
0x400102:	mov	esi, 0x41
0x400107:	mov	rdi, rax
0x40010a:	call	0x500008
<Block for 0x40010f, 33 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x78]
0x400113:	add	rax, 0x63
0x400117:	mov	byte ptr [rax], 0
0x40011a:	lea	rax, [rbp - 0x70]
0x40011e:	mov	edx, 0x63
0x400123:	mov	esi, 0x43
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x400130, 16 bytes>
0x400130:	mov	byte ptr [rbp - 0xd], 0
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	rdi, rax
0x40013b:	call	0x500010
<Block for 0x400140, 22 bytes>
0x400140:	mov	rdx, rax
0x400143:	mov	rcx, qword ptr [rbp - 0x78]
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	rsi, rcx
0x40014e:	mov	rdi, rax
0x400151:	call	0x500018
<Block for 0x400156, 16 bytes>
0x400156:	mov	byte ptr [rbp - 0xd], 0
0x40015a:	lea	rax, [rbp - 0x70]
0x40015e:	mov	rdi, rax
0x400161:	call	0x500020
<Block for 0x400166, 7 bytes>
0x400166:	cmp	qword ptr [rbp - 0x78], 0
0x40016b:	je	0x400179
<Block for 0x400179, 16 bytes>
0x400179:	nop	
0x40017a:	mov	rax, qword ptr [rbp - 8]
0x40017e:	xor	rax, qword ptr fs:[0x28]
0x400187:	je	0x40018e
<Block for 0x40016d, 12 bytes>
0x40016d:	mov	rax, qword ptr [rbp - 0x78]
0x400171:	mov	rdi, rax
0x400174:	call	0x500028
<Block for 0x40018e, 2 bytes>
0x40018e:	leave	
0x40018f:	ret	
<Block for 0x400189, 5 bytes>
0x400189:	call	0x500030
