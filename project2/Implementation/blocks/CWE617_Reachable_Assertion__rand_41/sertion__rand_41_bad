<Block for 0x400037, 25 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	push	rbx
0x400040:	sub	rsp, 0x18
0x400044:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40004b:	call	0x500008
<Block for 0x400050, 7 bytes>
0x400050:	and	eax, 1
0x400053:	test	eax, eax
0x400055:	je	0x400074
<Block for 0x400074, 5 bytes>
0x400074:	call	0x500008
<Block for 0x400057, 5 bytes>
0x400057:	call	0x500008
<Block for 0x400079, 10 bytes>
0x400079:	shl	eax, 0x1e
0x40007c:	mov	ebx, eax
0x40007e:	call	0x500008
<Block for 0x40005c, 10 bytes>
0x40005c:	shl	eax, 0x1e
0x40005f:	mov	ebx, eax
0x400061:	call	0x500008
<Block for 0x400083, 10 bytes>
0x400083:	shl	eax, 0xf
0x400086:	xor	ebx, eax
0x400088:	call	0x500008
<Block for 0x400066, 10 bytes>
0x400066:	shl	eax, 0xf
0x400069:	xor	ebx, eax
0x40006b:	call	0x500008
<Block for 0x40008d, 17 bytes>
0x40008d:	xor	eax, ebx
0x40008f:	not	eax
0x400091:	mov	dword ptr [rbp - 0x14], eax
0x400094:	mov	eax, dword ptr [rbp - 0x14]
0x400097:	mov	edi, eax
0x400099:	call	0x400000
<Block for 0x400070, 4 bytes>
0x400070:	xor	eax, ebx
0x400072:	jmp	0x400091
<Block for 0x40009e, 8 bytes>
0x40009e:	nop	
0x40009f:	add	rsp, 0x18
0x4000a3:	pop	rbx
0x4000a4:	pop	rbp
0x4000a5:	ret	
<Block for 0x400091, 13 bytes>
0x400091:	mov	dword ptr [rbp - 0x14], eax
0x400094:	mov	eax, dword ptr [rbp - 0x14]
0x400097:	mov	edi, eax
0x400099:	call	0x400000
