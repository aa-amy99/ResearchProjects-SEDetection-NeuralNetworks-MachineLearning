<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400014:	call	0x500000
<Block for 0x400019, 7 bytes>
0x400019:	and	eax, 1
0x40001c:	test	eax, eax
0x40001e:	je	0x40003d
<Block for 0x40003d, 5 bytes>
0x40003d:	call	0x500000
<Block for 0x400020, 5 bytes>
0x400020:	call	0x500000
<Block for 0x400042, 10 bytes>
0x400042:	shl	eax, 0x1e
0x400045:	mov	ebx, eax
0x400047:	call	0x500000
<Block for 0x400025, 10 bytes>
0x400025:	shl	eax, 0x1e
0x400028:	mov	ebx, eax
0x40002a:	call	0x500000
<Block for 0x40004c, 10 bytes>
0x40004c:	shl	eax, 0xf
0x40004f:	xor	ebx, eax
0x400051:	call	0x500000
<Block for 0x40002f, 10 bytes>
0x40002f:	shl	eax, 0xf
0x400032:	xor	ebx, eax
0x400034:	call	0x500000
<Block for 0x400056, 17 bytes>
0x400056:	xor	eax, ebx
0x400058:	not	eax
0x40005a:	mov	dword ptr [rbp - 0x1c], eax
0x40005d:	mov	edi, 8
0x400062:	call	0x500008
<Block for 0x400039, 4 bytes>
0x400039:	xor	eax, ebx
0x40003b:	jmp	0x40005a
<Block for 0x400067, 11 bytes>
0x400067:	mov	rbx, rax
0x40006a:	mov	rdi, rbx
0x40006d:	call	0x4001f6
<Block for 0x40005a, 13 bytes>
0x40005a:	mov	dword ptr [rbp - 0x1c], eax
0x40005d:	mov	edi, 8
0x400062:	call	0x500008
<Block for 0x400072, 28 bytes>
0x400072:	mov	qword ptr [rbp - 0x18], rbx
0x400076:	mov	rax, qword ptr [rbp - 0x18]
0x40007a:	mov	rax, qword ptr [rax]
0x40007d:	mov	rcx, qword ptr [rax]
0x400080:	mov	edx, dword ptr [rbp - 0x1c]
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	mov	esi, edx
0x400089:	mov	rdi, rax
0x40008c:	call	rcx
<Block for 0x40008e, 9 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 0x18]
0x400092:	test	rax, rax
0x400095:	je	0x4000a4
<Block for 0x4000a4, 8 bytes>
0x4000a4:	nop	
0x4000a5:	add	rsp, 0x18
0x4000a9:	pop	rbx
0x4000aa:	pop	rbp
0x4000ab:	ret	
<Block for 0x400097, 13 bytes>
0x400097:	mov	esi, 8
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
