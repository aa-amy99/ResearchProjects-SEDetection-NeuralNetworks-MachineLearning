<Block for 0x4000c4, 50 bytes>
0x4000c4:	endbr64	
0x4000c8:	push	rbp
0x4000c9:	mov	rbp, rsp
0x4000cc:	add	rsp, -0x80
0x4000d0:	mov	rax, qword ptr fs:[0x28]
0x4000d9:	mov	qword ptr [rbp - 8], rax
0x4000dd:	xor	eax, eax
0x4000df:	mov	qword ptr [rbp - 0x80], 0
0x4000e7:	nop	
0x4000e8:	endbr64	
0x4000ec:	mov	edi, 0x64
0x4000f1:	call	0x500000
<Block for 0x4000f6, 11 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x78], rax
0x4000fa:	cmp	qword ptr [rbp - 0x78], 0
0x4000ff:	jne	0x40010b
<Block for 0x400101, 10 bytes>
0x400101:	mov	edi, 0xffffffff
0x400106:	call	0x500008
<Block for 0x40010b, 22 bytes>
0x40010b:	mov	rax, qword ptr [rbp - 0x78]
0x40010f:	mov	edx, 0x63
0x400114:	mov	esi, 0x41
0x400119:	mov	rdi, rax
0x40011c:	call	0x500010
<Block for 0x400121, 41 bytes>
0x400121:	mov	rax, qword ptr [rbp - 0x78]
0x400125:	add	rax, 0x63
0x400129:	mov	byte ptr [rax], 0
0x40012c:	mov	rax, qword ptr [rbp - 0x78]
0x400130:	mov	qword ptr [rbp - 0x80], rax
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	edx, 0x63
0x40013d:	mov	esi, 0x43
0x400142:	mov	rdi, rax
0x400145:	call	0x500010
<Block for 0x40014a, 23 bytes>
0x40014a:	mov	byte ptr [rbp - 0xd], 0
0x40014e:	lea	rdx, [rbp - 0x70]
0x400152:	mov	rax, qword ptr [rbp - 0x80]
0x400156:	mov	rsi, rdx
0x400159:	mov	rdi, rax
0x40015c:	call	0x500018
<Block for 0x400161, 12 bytes>
0x400161:	mov	rax, qword ptr [rbp - 0x80]
0x400165:	mov	rdi, rax
0x400168:	call	0x500020
<Block for 0x40016d, 16 bytes>
0x40016d:	nop	
0x40016e:	mov	rax, qword ptr [rbp - 8]
0x400172:	xor	rax, qword ptr fs:[0x28]
0x40017b:	je	0x400182
<Block for 0x400182, 2 bytes>
0x400182:	leave	
0x400183:	ret	
<Block for 0x40017d, 5 bytes>
0x40017d:	call	0x500028
