<Block for 0x400174, 40 bytes>
0x400174:	endbr64	
0x400178:	push	rbp
0x400179:	mov	rbp, rsp
0x40017c:	push	rbx
0x40017d:	sub	rsp, 0x58
0x400181:	mov	rax, qword ptr fs:[0x28]
0x40018a:	mov	qword ptr [rbp - 0x18], rax
0x40018e:	xor	eax, eax
0x400190:	lea	rax, [rbp - 0x50]
0x400194:	mov	rdi, rax
0x400197:	call	0x400366
<Block for 0x40019c, 19 bytes>
0x40019c:	mov	dword ptr [rbp - 0x5c], 5
0x4001a3:	lea	rax, [rbp - 0x50]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x4004fa
<Block for 0x4001af, 23 bytes>
0x4001af:	mov	qword ptr [rbp - 0x58], rax
0x4001b3:	lea	rdx, [rbp - 0x58]
0x4001b7:	lea	rax, [rbp - 0x30]
0x4001bb:	mov	rsi, rdx
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x40054a
<Block for 0x4001c6, 28 bytes>
0x4001c6:	lea	rdx, [rbp - 0x5c]
0x4001ca:	mov	rsi, qword ptr [rbp - 0x30]
0x4001ce:	lea	rax, [rbp - 0x50]
0x4001d2:	mov	rcx, rdx
0x4001d5:	mov	edx, 1
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x400578
<Block for 0x4001e2, 12 bytes>
0x4001e2:	lea	rax, [rbp - 0x50]
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x4004fa
<Block for 0x4001ee, 23 bytes>
0x4001ee:	mov	qword ptr [rbp - 0x58], rax
0x4001f2:	lea	rdx, [rbp - 0x58]
0x4001f6:	lea	rax, [rbp - 0x30]
0x4001fa:	mov	rsi, rdx
0x4001fd:	mov	rdi, rax
0x400200:	call	0x40054a
<Block for 0x400205, 28 bytes>
0x400205:	lea	rdx, [rbp - 0x5c]
0x400209:	mov	rsi, qword ptr [rbp - 0x30]
0x40020d:	lea	rax, [rbp - 0x50]
0x400211:	mov	rcx, rdx
0x400214:	mov	edx, 1
0x400219:	mov	rdi, rax
0x40021c:	call	0x400578
<Block for 0x400221, 12 bytes>
0x400221:	lea	rax, [rbp - 0x50]
0x400225:	mov	rdi, rax
0x400228:	call	0x4004fa
<Block for 0x40022d, 23 bytes>
0x40022d:	mov	qword ptr [rbp - 0x58], rax
0x400231:	lea	rdx, [rbp - 0x58]
0x400235:	lea	rax, [rbp - 0x30]
0x400239:	mov	rsi, rdx
0x40023c:	mov	rdi, rax
0x40023f:	call	0x40054a
<Block for 0x400244, 28 bytes>
0x400244:	lea	rdx, [rbp - 0x5c]
0x400248:	mov	rsi, qword ptr [rbp - 0x30]
0x40024c:	lea	rax, [rbp - 0x50]
0x400250:	mov	rcx, rdx
0x400253:	mov	edx, 1
0x400258:	mov	rdi, rax
0x40025b:	call	0x400578
<Block for 0x400260, 19 bytes>
0x400260:	lea	rdx, [rbp - 0x50]
0x400264:	lea	rax, [rbp - 0x30]
0x400268:	mov	rsi, rdx
0x40026b:	mov	rdi, rax
0x40026e:	call	0x40063e
<Block for 0x400273, 12 bytes>
0x400273:	lea	rax, [rbp - 0x30]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500018
<Block for 0x40027f, 12 bytes>
0x40027f:	lea	rax, [rbp - 0x30]
0x400283:	mov	rdi, rax
0x400286:	call	0x4004b2
<Block for 0x40028b, 12 bytes>
0x40028b:	lea	rax, [rbp - 0x50]
0x40028f:	mov	rdi, rax
0x400292:	call	0x4004b2
<Block for 0x400297, 16 bytes>
0x400297:	nop	
0x400298:	mov	rax, qword ptr [rbp - 0x18]
0x40029c:	xor	rax, qword ptr fs:[0x28]
0x4002a5:	je	0x4002e1
<Block for 0x4002e1, 7 bytes>
0x4002e1:	add	rsp, 0x58
0x4002e5:	pop	rbx
0x4002e6:	pop	rbp
0x4002e7:	ret	
<Block for 0x4002a7, 2 bytes>
0x4002a7:	jmp	0x4002dc
<Block for 0x4002dc, 5 bytes>
0x4002dc:	call	0x500010
