<Block for 0x400000, 63 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	eax, edi
0x40000e:	mov	byte ptr [rbp - 0x14], al
0x400011:	mov	rax, qword ptr fs:[0x28]
0x40001a:	mov	qword ptr [rbp - 8], rax
0x40001e:	xor	eax, eax
0x400020:	mov	byte ptr [rbp - 0xc], 0x78
0x400024:	movzx	eax, byte ptr [rbp - 0x14]
0x400028:	mov	byte ptr [rbp - 0xb], al
0x40002b:	mov	byte ptr [rbp - 0xa], 0x7a
0x40002f:	mov	byte ptr [rbp - 9], 0
0x400033:	lea	rax, [rbp - 0xc]
0x400037:	mov	rdi, rax
0x40003a:	call	0x500000
<Block for 0x40003f, 16 bytes>
0x40003f:	nop	
0x400040:	mov	rax, qword ptr [rbp - 8]
0x400044:	xor	rax, qword ptr fs:[0x28]
0x40004d:	je	0x400054
<Block for 0x400054, 2 bytes>
0x400054:	leave	
0x400055:	ret	
<Block for 0x40004f, 5 bytes>
0x40004f:	call	0x500008
