<Block for 0x4000f1, 47 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	push	rbx
0x4000fa:	sub	rsp, 0x58
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 0x18], rax
0x40010b:	xor	eax, eax
0x40010d:	mov	dword ptr [rbp - 0x5c], 5
0x400114:	lea	rax, [rbp - 0x50]
0x400118:	mov	rdi, rax
0x40011b:	call	0x40039c
<Block for 0x400120, 27 bytes>
0x400120:	lea	rax, [rbp - 0x5c]
0x400124:	mov	qword ptr [rbp - 0x58], rax
0x400128:	lea	rdx, [rbp - 0x58]
0x40012c:	lea	rax, [rbp - 0x50]
0x400130:	mov	rsi, rdx
0x400133:	mov	rdi, rax
0x400136:	call	0x4004a6
<Block for 0x40013b, 19 bytes>
0x40013b:	lea	rdx, [rbp - 0x58]
0x40013f:	lea	rax, [rbp - 0x50]
0x400143:	mov	rsi, rdx
0x400146:	mov	rdi, rax
0x400149:	call	0x4004a6
<Block for 0x40014e, 19 bytes>
0x40014e:	lea	rdx, [rbp - 0x58]
0x400152:	lea	rax, [rbp - 0x50]
0x400156:	mov	rsi, rdx
0x400159:	mov	rdi, rax
0x40015c:	call	0x4004a6
<Block for 0x400161, 19 bytes>
0x400161:	lea	rdx, [rbp - 0x50]
0x400165:	lea	rax, [rbp - 0x30]
0x400169:	mov	rsi, rdx
0x40016c:	mov	rdi, rax
0x40016f:	call	0x4004e0
<Block for 0x400174, 12 bytes>
0x400174:	lea	rax, [rbp - 0x30]
0x400178:	mov	rdi, rax
0x40017b:	call	0x500018
<Block for 0x400180, 12 bytes>
0x400180:	lea	rax, [rbp - 0x30]
0x400184:	mov	rdi, rax
0x400187:	call	0x4003bc
<Block for 0x40018c, 12 bytes>
0x40018c:	lea	rax, [rbp - 0x50]
0x400190:	mov	rdi, rax
0x400193:	call	0x4003bc
<Block for 0x400198, 16 bytes>
0x400198:	nop	
0x400199:	mov	rax, qword ptr [rbp - 0x18]
0x40019d:	xor	rax, qword ptr fs:[0x28]
0x4001a6:	je	0x4001e2
<Block for 0x4001e2, 7 bytes>
0x4001e2:	add	rsp, 0x58
0x4001e6:	pop	rbx
0x4001e7:	pop	rbp
0x4001e8:	ret	
<Block for 0x4001a8, 2 bytes>
0x4001a8:	jmp	0x4001dd
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500010
