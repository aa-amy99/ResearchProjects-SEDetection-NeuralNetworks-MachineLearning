<Block for 0x400000, 76 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	dword ptr [rbp - 0x44], edi
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x30], 0
0x400026:	mov	qword ptr [rbp - 0x28], 0
0x40002e:	mov	qword ptr [rbp - 0x20], 0
0x400036:	mov	qword ptr [rbp - 0x18], 0
0x40003e:	mov	qword ptr [rbp - 0x10], 0
0x400046:	cmp	dword ptr [rbp - 0x44], 9
0x40004a:	jg	0x40007e
<Block for 0x40004c, 22 bytes>
0x40004c:	mov	eax, dword ptr [rbp - 0x44]
0x40004f:	cdqe	
0x400051:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400059:	mov	dword ptr [rbp - 0x34], 0
0x400060:	jmp	0x400076
<Block for 0x40007e, 12 bytes>
0x40007e:	lea	rdi, [rip + 0x1fb]
0x400085:	call	0x500008
<Block for 0x400076, 6 bytes>
0x400076:	cmp	dword ptr [rbp - 0x34], 9
0x40007a:	jle	0x400062
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x400062, 16 bytes>
0x400062:	mov	eax, dword ptr [rbp - 0x34]
0x400065:	cdqe	
0x400067:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40006b:	mov	edi, eax
0x40006d:	call	0x500000
<Block for 0x40007c, 2 bytes>
0x40007c:	jmp	0x40008a
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500010
<Block for 0x400072, 10 bytes>
0x400072:	add	dword ptr [rbp - 0x34], 1
0x400076:	cmp	dword ptr [rbp - 0x34], 9
0x40007a:	jle	0x400062
