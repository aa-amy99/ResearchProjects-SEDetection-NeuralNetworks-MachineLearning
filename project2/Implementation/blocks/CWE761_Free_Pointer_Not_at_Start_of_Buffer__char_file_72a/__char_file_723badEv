<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004f6
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x70], rax
0x400036:	mov	rax, qword ptr [rbp - 0x70]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x70]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x70]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 19 bytes>
0x40005c:	mov	qword ptr [rbp - 0x60], rax
0x400060:	mov	eax, 0x64
0x400065:	sub	rax, qword ptr [rbp - 0x60]
0x400069:	cmp	rax, 1
0x40006d:	jbe	0x4000e7
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rax, [rbp - 0x50]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x40068a
<Block for 0x40006f, 19 bytes>
0x40006f:	lea	rsi, [rip + 0x409]
0x400076:	lea	rdi, [rip + 0x404]
0x40007d:	call	0x500018
<Block for 0x4000f3, 23 bytes>
0x4000f3:	mov	qword ptr [rbp - 0x68], rax
0x4000f7:	lea	rdx, [rbp - 0x68]
0x4000fb:	lea	rax, [rbp - 0x30]
0x4000ff:	mov	rsi, rdx
0x400102:	mov	rdi, rax
0x400105:	call	0x4006da
<Block for 0x400082, 11 bytes>
0x400082:	mov	qword ptr [rbp - 0x58], rax
0x400086:	cmp	qword ptr [rbp - 0x58], 0
0x40008b:	je	0x4000e7
<Block for 0x40010a, 28 bytes>
0x40010a:	lea	rdx, [rbp - 0x70]
0x40010e:	mov	rsi, qword ptr [rbp - 0x30]
0x400112:	lea	rax, [rbp - 0x50]
0x400116:	mov	rcx, rdx
0x400119:	mov	edx, 1
0x40011e:	mov	rdi, rax
0x400121:	call	0x400708
<Block for 0x40008d, 42 bytes>
0x40008d:	mov	rax, qword ptr [rbp - 0x60]
0x400091:	mov	edx, 0x64
0x400096:	sub	edx, eax
0x400098:	mov	eax, edx
0x40009a:	mov	esi, eax
0x40009c:	mov	rdx, qword ptr [rbp - 0x70]
0x4000a0:	mov	rax, qword ptr [rbp - 0x60]
0x4000a4:	lea	rcx, [rdx + rax]
0x4000a8:	mov	rax, qword ptr [rbp - 0x58]
0x4000ac:	mov	rdx, rax
0x4000af:	mov	rdi, rcx
0x4000b2:	call	0x500020
<Block for 0x400126, 12 bytes>
0x400126:	lea	rax, [rbp - 0x50]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x40068a
<Block for 0x4000b7, 10 bytes>
0x4000b7:	test	rax, rax
0x4000ba:	sete	al
0x4000bd:	test	al, al
0x4000bf:	je	0x4000db
<Block for 0x400132, 23 bytes>
0x400132:	mov	qword ptr [rbp - 0x68], rax
0x400136:	lea	rdx, [rbp - 0x68]
0x40013a:	lea	rax, [rbp - 0x30]
0x40013e:	mov	rsi, rdx
0x400141:	mov	rdi, rax
0x400144:	call	0x4006da
<Block for 0x4000db, 12 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x58]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500030
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rdi, [rip + 0x3c7]
0x4000c8:	call	0x500028
<Block for 0x400149, 28 bytes>
0x400149:	lea	rdx, [rbp - 0x70]
0x40014d:	mov	rsi, qword ptr [rbp - 0x30]
0x400151:	lea	rax, [rbp - 0x50]
0x400155:	mov	rcx, rdx
0x400158:	mov	edx, 1
0x40015d:	mov	rdi, rax
0x400160:	call	0x400708
<Block for 0x4000cd, 26 bytes>
0x4000cd:	mov	rdx, qword ptr [rbp - 0x70]
0x4000d1:	mov	rax, qword ptr [rbp - 0x60]
0x4000d5:	add	rax, rdx
0x4000d8:	mov	byte ptr [rax], 0
0x4000db:	mov	rax, qword ptr [rbp - 0x58]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500030
<Block for 0x400165, 12 bytes>
0x400165:	lea	rax, [rbp - 0x50]
0x400169:	mov	rdi, rax
0x40016c:	call	0x40068a
<Block for 0x400171, 23 bytes>
0x400171:	mov	qword ptr [rbp - 0x68], rax
0x400175:	lea	rdx, [rbp - 0x68]
0x400179:	lea	rax, [rbp - 0x30]
0x40017d:	mov	rsi, rdx
0x400180:	mov	rdi, rax
0x400183:	call	0x4006da
<Block for 0x400188, 28 bytes>
0x400188:	lea	rdx, [rbp - 0x70]
0x40018c:	mov	rsi, qword ptr [rbp - 0x30]
0x400190:	lea	rax, [rbp - 0x50]
0x400194:	mov	rcx, rdx
0x400197:	mov	edx, 1
0x40019c:	mov	rdi, rax
0x40019f:	call	0x400708
<Block for 0x4001a4, 19 bytes>
0x4001a4:	lea	rdx, [rbp - 0x50]
0x4001a8:	lea	rax, [rbp - 0x30]
0x4001ac:	mov	rsi, rdx
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x4007ce
<Block for 0x4001b7, 12 bytes>
0x4001b7:	lea	rax, [rbp - 0x30]
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500038
<Block for 0x4001c3, 12 bytes>
0x4001c3:	lea	rax, [rbp - 0x30]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x400642
<Block for 0x4001cf, 12 bytes>
0x4001cf:	lea	rax, [rbp - 0x50]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x400642
<Block for 0x4001db, 16 bytes>
0x4001db:	nop	
0x4001dc:	mov	rax, qword ptr [rbp - 0x18]
0x4001e0:	xor	rax, qword ptr fs:[0x28]
0x4001e9:	je	0x400225
<Block for 0x400225, 7 bytes>
0x400225:	add	rsp, 0x68
0x400229:	pop	rbx
0x40022a:	pop	rbp
0x40022b:	ret	
<Block for 0x4001eb, 2 bytes>
0x4001eb:	jmp	0x400220
<Block for 0x400220, 5 bytes>
0x400220:	call	0x500048
