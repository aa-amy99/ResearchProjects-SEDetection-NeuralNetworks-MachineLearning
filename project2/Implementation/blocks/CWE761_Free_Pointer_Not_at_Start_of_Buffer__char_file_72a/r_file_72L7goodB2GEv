<Block for 0x40022c, 40 bytes>
0x40022c:	endbr64	
0x400230:	push	rbp
0x400231:	mov	rbp, rsp
0x400234:	push	rbx
0x400235:	sub	rsp, 0x68
0x400239:	mov	rax, qword ptr fs:[0x28]
0x400242:	mov	qword ptr [rbp - 0x18], rax
0x400246:	xor	eax, eax
0x400248:	lea	rax, [rbp - 0x50]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x4004f6
<Block for 0x400254, 10 bytes>
0x400254:	mov	edi, 0x64
0x400259:	call	0x500000
<Block for 0x40025e, 13 bytes>
0x40025e:	mov	qword ptr [rbp - 0x70], rax
0x400262:	mov	rax, qword ptr [rbp - 0x70]
0x400266:	test	rax, rax
0x400269:	jne	0x400275
<Block for 0x40026b, 10 bytes>
0x40026b:	mov	edi, 0xffffffff
0x400270:	call	0x500008
<Block for 0x400275, 19 bytes>
0x400275:	mov	rax, qword ptr [rbp - 0x70]
0x400279:	mov	byte ptr [rax], 0
0x40027c:	mov	rax, qword ptr [rbp - 0x70]
0x400280:	mov	rdi, rax
0x400283:	call	0x500010
<Block for 0x400288, 19 bytes>
0x400288:	mov	qword ptr [rbp - 0x60], rax
0x40028c:	mov	eax, 0x64
0x400291:	sub	rax, qword ptr [rbp - 0x60]
0x400295:	cmp	rax, 1
0x400299:	jbe	0x400313
<Block for 0x400313, 12 bytes>
0x400313:	lea	rax, [rbp - 0x50]
0x400317:	mov	rdi, rax
0x40031a:	call	0x40068a
<Block for 0x40029b, 19 bytes>
0x40029b:	lea	rsi, [rip + 0x1dd]
0x4002a2:	lea	rdi, [rip + 0x1d8]
0x4002a9:	call	0x500018
<Block for 0x40031f, 23 bytes>
0x40031f:	mov	qword ptr [rbp - 0x68], rax
0x400323:	lea	rdx, [rbp - 0x68]
0x400327:	lea	rax, [rbp - 0x30]
0x40032b:	mov	rsi, rdx
0x40032e:	mov	rdi, rax
0x400331:	call	0x4006da
<Block for 0x4002ae, 11 bytes>
0x4002ae:	mov	qword ptr [rbp - 0x58], rax
0x4002b2:	cmp	qword ptr [rbp - 0x58], 0
0x4002b7:	je	0x400313
<Block for 0x400336, 28 bytes>
0x400336:	lea	rdx, [rbp - 0x70]
0x40033a:	mov	rsi, qword ptr [rbp - 0x30]
0x40033e:	lea	rax, [rbp - 0x50]
0x400342:	mov	rcx, rdx
0x400345:	mov	edx, 1
0x40034a:	mov	rdi, rax
0x40034d:	call	0x400708
<Block for 0x4002b9, 42 bytes>
0x4002b9:	mov	rax, qword ptr [rbp - 0x60]
0x4002bd:	mov	edx, 0x64
0x4002c2:	sub	edx, eax
0x4002c4:	mov	eax, edx
0x4002c6:	mov	esi, eax
0x4002c8:	mov	rdx, qword ptr [rbp - 0x70]
0x4002cc:	mov	rax, qword ptr [rbp - 0x60]
0x4002d0:	lea	rcx, [rdx + rax]
0x4002d4:	mov	rax, qword ptr [rbp - 0x58]
0x4002d8:	mov	rdx, rax
0x4002db:	mov	rdi, rcx
0x4002de:	call	0x500020
<Block for 0x400352, 12 bytes>
0x400352:	lea	rax, [rbp - 0x50]
0x400356:	mov	rdi, rax
0x400359:	call	0x40068a
<Block for 0x4002e3, 10 bytes>
0x4002e3:	test	rax, rax
0x4002e6:	sete	al
0x4002e9:	test	al, al
0x4002eb:	je	0x400307
<Block for 0x40035e, 23 bytes>
0x40035e:	mov	qword ptr [rbp - 0x68], rax
0x400362:	lea	rdx, [rbp - 0x68]
0x400366:	lea	rax, [rbp - 0x30]
0x40036a:	mov	rsi, rdx
0x40036d:	mov	rdi, rax
0x400370:	call	0x4006da
<Block for 0x400307, 12 bytes>
0x400307:	mov	rax, qword ptr [rbp - 0x58]
0x40030b:	mov	rdi, rax
0x40030e:	call	0x500030
<Block for 0x4002ed, 12 bytes>
0x4002ed:	lea	rdi, [rip + 0x19b]
0x4002f4:	call	0x500028
<Block for 0x400375, 28 bytes>
0x400375:	lea	rdx, [rbp - 0x70]
0x400379:	mov	rsi, qword ptr [rbp - 0x30]
0x40037d:	lea	rax, [rbp - 0x50]
0x400381:	mov	rcx, rdx
0x400384:	mov	edx, 1
0x400389:	mov	rdi, rax
0x40038c:	call	0x400708
<Block for 0x4002f9, 26 bytes>
0x4002f9:	mov	rdx, qword ptr [rbp - 0x70]
0x4002fd:	mov	rax, qword ptr [rbp - 0x60]
0x400301:	add	rax, rdx
0x400304:	mov	byte ptr [rax], 0
0x400307:	mov	rax, qword ptr [rbp - 0x58]
0x40030b:	mov	rdi, rax
0x40030e:	call	0x500030
<Block for 0x400391, 12 bytes>
0x400391:	lea	rax, [rbp - 0x50]
0x400395:	mov	rdi, rax
0x400398:	call	0x40068a
<Block for 0x40039d, 23 bytes>
0x40039d:	mov	qword ptr [rbp - 0x68], rax
0x4003a1:	lea	rdx, [rbp - 0x68]
0x4003a5:	lea	rax, [rbp - 0x30]
0x4003a9:	mov	rsi, rdx
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x4006da
<Block for 0x4003b4, 28 bytes>
0x4003b4:	lea	rdx, [rbp - 0x70]
0x4003b8:	mov	rsi, qword ptr [rbp - 0x30]
0x4003bc:	lea	rax, [rbp - 0x50]
0x4003c0:	mov	rcx, rdx
0x4003c3:	mov	edx, 1
0x4003c8:	mov	rdi, rax
0x4003cb:	call	0x400708
<Block for 0x4003d0, 19 bytes>
0x4003d0:	lea	rdx, [rbp - 0x50]
0x4003d4:	lea	rax, [rbp - 0x30]
0x4003d8:	mov	rsi, rdx
0x4003db:	mov	rdi, rax
0x4003de:	call	0x4007ce
<Block for 0x4003e3, 12 bytes>
0x4003e3:	lea	rax, [rbp - 0x30]
0x4003e7:	mov	rdi, rax
0x4003ea:	call	0x500050
<Block for 0x4003ef, 12 bytes>
0x4003ef:	lea	rax, [rbp - 0x30]
0x4003f3:	mov	rdi, rax
0x4003f6:	call	0x400642
<Block for 0x4003fb, 12 bytes>
0x4003fb:	lea	rax, [rbp - 0x50]
0x4003ff:	mov	rdi, rax
0x400402:	call	0x400642
<Block for 0x400407, 16 bytes>
0x400407:	nop	
0x400408:	mov	rax, qword ptr [rbp - 0x18]
0x40040c:	xor	rax, qword ptr fs:[0x28]
0x400415:	je	0x400451
<Block for 0x400451, 7 bytes>
0x400451:	add	rsp, 0x68
0x400455:	pop	rbx
0x400456:	pop	rbp
0x400457:	ret	
<Block for 0x400417, 2 bytes>
0x400417:	jmp	0x40044c
<Block for 0x40044c, 5 bytes>
0x40044c:	call	0x500048
