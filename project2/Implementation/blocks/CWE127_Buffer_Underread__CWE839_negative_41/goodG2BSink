<Block for 0x4000a8, 76 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	sub	rsp, 0x40
0x4000b4:	mov	dword ptr [rbp - 0x34], edi
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	mov	qword ptr [rbp - 0x30], 0
0x4000ce:	mov	qword ptr [rbp - 0x28], 0
0x4000d6:	mov	qword ptr [rbp - 0x20], 0
0x4000de:	mov	qword ptr [rbp - 0x18], 0
0x4000e6:	mov	qword ptr [rbp - 0x10], 0
0x4000ee:	cmp	dword ptr [rbp - 0x34], 9
0x4000f2:	jg	0x400106
<Block for 0x4000f4, 16 bytes>
0x4000f4:	mov	eax, dword ptr [rbp - 0x34]
0x4000f7:	cdqe	
0x4000f9:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000fd:	mov	edi, eax
0x4000ff:	call	0x500000
<Block for 0x400106, 12 bytes>
0x400106:	lea	rdi, [rip + 0x113]
0x40010d:	call	0x500008
<Block for 0x400104, 2 bytes>
0x400104:	jmp	0x400112
<Block for 0x400112, 16 bytes>
0x400112:	nop	
0x400113:	mov	rax, qword ptr [rbp - 8]
0x400117:	xor	rax, qword ptr fs:[0x28]
0x400120:	je	0x400127
<Block for 0x400127, 2 bytes>
0x400127:	leave	
0x400128:	ret	
<Block for 0x400122, 5 bytes>
0x400122:	call	0x500010
