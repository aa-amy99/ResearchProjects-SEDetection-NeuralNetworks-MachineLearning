<Block for 0x400000, 17 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	call	0x500000
<Block for 0x400011, 9 bytes>
0x400011:	test	eax, eax
0x400013:	setne	al
0x400016:	test	al, al
0x400018:	je	0x400057
<Block for 0x400057, 18 bytes>
0x400057:	mov	qword ptr [rbp - 0x28], 5
0x40005f:	mov	edi, 8
0x400064:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x400069, 38 bytes>
0x400069:	mov	qword ptr [rbp - 0x20], rax
0x40006d:	mov	rax, qword ptr [rbp - 0x20]
0x400071:	mov	rdx, qword ptr [rbp - 0x28]
0x400075:	mov	qword ptr [rax], rdx
0x400078:	mov	rax, qword ptr [rbp - 0x20]
0x40007c:	mov	rax, qword ptr [rax]
0x40007f:	mov	qword ptr [rbp - 0x18], rax
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500018
<Block for 0x400024, 24 bytes>
0x400024:	mov	qword ptr [rbp - 0x10], rax
0x400028:	mov	rax, qword ptr [rbp - 0x10]
0x40002c:	mov	rax, qword ptr [rax]
0x40002f:	mov	qword ptr [rbp - 8], rax
0x400033:	mov	rax, qword ptr [rbp - 0x10]
0x400037:	test	rax, rax
0x40003a:	je	0x400049
<Block for 0x40008f, 9 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 0x20]
0x400093:	test	rax, rax
0x400096:	je	0x4000a5
<Block for 0x400049, 12 bytes>
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	mov	rdi, rax
0x400050:	call	0x500018
<Block for 0x40003c, 13 bytes>
0x40003c:	mov	esi, 8
0x400041:	mov	rdi, rax
0x400044:	call	0x500010
<Block for 0x4000a5, 3 bytes>
0x4000a5:	nop	
0x4000a6:	leave	
0x4000a7:	ret	
<Block for 0x400098, 13 bytes>
0x400098:	mov	esi, 8
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500010
<Block for 0x400055, 2 bytes>
0x400055:	jmp	0x4000a5
