<Block for 0x40019c, 46 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	add	rsp, -0x80
0x4001a8:	mov	rax, qword ptr fs:[0x28]
0x4001b1:	mov	qword ptr [rbp - 8], rax
0x4001b5:	xor	eax, eax
0x4001b7:	mov	qword ptr [rbp - 0x80], 0
0x4001bf:	mov	eax, dword ptr [rip + 0xb3]
0x4001c5:	cmp	eax, 5
0x4001c8:	jne	0x400201
<Block for 0x4001ca, 10 bytes>
0x4001ca:	mov	edi, 0x64
0x4001cf:	call	0x500000
<Block for 0x400201, 22 bytes>
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500008
<Block for 0x4001d4, 26 bytes>
0x4001d4:	mov	qword ptr [rbp - 0x78], rax
0x4001d8:	mov	rax, qword ptr [rbp - 0x78]
0x4001dc:	mov	edx, 0x63
0x4001e1:	mov	esi, 0x41
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x500008
<Block for 0x400217, 28 bytes>
0x400217:	mov	byte ptr [rbp - 0xd], 0
0x40021b:	lea	rcx, [rbp - 0x70]
0x40021f:	mov	rax, qword ptr [rbp - 0x80]
0x400223:	mov	edx, 0x63
0x400228:	mov	rsi, rcx
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500010
<Block for 0x4001ee, 41 bytes>
0x4001ee:	mov	rax, qword ptr [rbp - 0x78]
0x4001f2:	add	rax, 0x63
0x4001f6:	mov	byte ptr [rax], 0
0x4001f9:	mov	rax, qword ptr [rbp - 0x78]
0x4001fd:	mov	qword ptr [rbp - 0x80], rax
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500008
<Block for 0x400233, 23 bytes>
0x400233:	mov	rax, qword ptr [rbp - 0x80]
0x400237:	add	rax, 0x63
0x40023b:	mov	byte ptr [rax], 0
0x40023e:	mov	rax, qword ptr [rbp - 0x80]
0x400242:	mov	rdi, rax
0x400245:	call	0x500018
<Block for 0x40024a, 16 bytes>
0x40024a:	nop	
0x40024b:	mov	rax, qword ptr [rbp - 8]
0x40024f:	xor	rax, qword ptr fs:[0x28]
0x400258:	je	0x40025f
<Block for 0x40025f, 2 bytes>
0x40025f:	leave	
0x400260:	ret	
<Block for 0x40025a, 5 bytes>
0x40025a:	call	0x500020
