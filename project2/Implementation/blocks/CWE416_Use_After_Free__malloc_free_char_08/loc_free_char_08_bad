<Block for 0x40001e, 30 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	qword ptr [rbp - 8], 0
0x400032:	mov	eax, 0
0x400037:	call	0x400000
<Block for 0x40003c, 4 bytes>
0x40003c:	test	eax, eax
0x40003e:	je	0x40008c
<Block for 0x40008c, 10 bytes>
0x40008c:	mov	eax, 0
0x400091:	call	0x400000
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 0x64
0x400045:	call	0x500000
<Block for 0x400096, 4 bytes>
0x400096:	test	eax, eax
0x400098:	je	0x4000a6
<Block for 0x40004a, 11 bytes>
0x40004a:	mov	qword ptr [rbp - 8], rax
0x40004e:	cmp	qword ptr [rbp - 8], 0
0x400053:	jne	0x40005f
<Block for 0x4000a6, 3 bytes>
0x4000a6:	nop	
0x4000a7:	leave	
0x4000a8:	ret	
<Block for 0x40009a, 12 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500020
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0xffffffff
0x40005a:	call	0x500008
<Block for 0x40005f, 22 bytes>
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	mov	edx, 0x63
0x400068:	mov	esi, 0x41
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
<Block for 0x400075, 23 bytes>
0x400075:	mov	rax, qword ptr [rbp - 8]
0x400079:	add	rax, 0x63
0x40007d:	mov	byte ptr [rax], 0
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	mov	rdi, rax
0x400087:	call	0x500018
