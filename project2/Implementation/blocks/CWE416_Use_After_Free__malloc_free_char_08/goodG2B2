<Block for 0x40023c, 30 bytes>
0x40023c:	endbr64	
0x400240:	push	rbp
0x400241:	mov	rbp, rsp
0x400244:	sub	rsp, 0x10
0x400248:	mov	qword ptr [rbp - 8], 0
0x400250:	mov	eax, 0
0x400255:	call	0x400000
<Block for 0x40025a, 4 bytes>
0x40025a:	test	eax, eax
0x40025c:	je	0x40029e
<Block for 0x40029e, 10 bytes>
0x40029e:	mov	eax, 0
0x4002a3:	call	0x400000
<Block for 0x40025e, 10 bytes>
0x40025e:	mov	edi, 0x64
0x400263:	call	0x500000
<Block for 0x4002a8, 4 bytes>
0x4002a8:	test	eax, eax
0x4002aa:	je	0x4002b8
<Block for 0x400268, 11 bytes>
0x400268:	mov	qword ptr [rbp - 8], rax
0x40026c:	cmp	qword ptr [rbp - 8], 0
0x400271:	jne	0x40027d
<Block for 0x4002b8, 3 bytes>
0x4002b8:	nop	
0x4002b9:	leave	
0x4002ba:	ret	
<Block for 0x4002ac, 12 bytes>
0x4002ac:	mov	rax, qword ptr [rbp - 8]
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x500020
<Block for 0x400273, 10 bytes>
0x400273:	mov	edi, 0xffffffff
0x400278:	call	0x500008
<Block for 0x40027d, 22 bytes>
0x40027d:	mov	rax, qword ptr [rbp - 8]
0x400281:	mov	edx, 0x63
0x400286:	mov	esi, 0x41
0x40028b:	mov	rdi, rax
0x40028e:	call	0x500010
<Block for 0x400293, 21 bytes>
0x400293:	mov	rax, qword ptr [rbp - 8]
0x400297:	add	rax, 0x63
0x40029b:	mov	byte ptr [rax], 0
0x40029e:	mov	eax, 0
0x4002a3:	call	0x400000
