<Block for 0x4000f0, 45 bytes>
0x4000f0:	endbr64	
0x4000f4:	push	rbp
0x4000f5:	mov	rbp, rsp
0x4000f8:	push	rbx
0x4000f9:	sub	rsp, 0x48
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 0x18], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400113:	mov	eax, 0
0x400118:	call	0x500000
<Block for 0x40011d, 4 bytes>
0x40011d:	test	eax, eax
0x40011f:	je	0x40016a
<Block for 0x40016a, 10 bytes>
0x40016a:	mov	eax, 0
0x40016f:	call	0x500028
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500008
<Block for 0x400174, 4 bytes>
0x400174:	test	eax, eax
0x400176:	je	0x400186
<Block for 0x400126, 7 bytes>
0x400126:	and	eax, 1
0x400129:	test	eax, eax
0x40012b:	je	0x40014a
<Block for 0x400186, 46 bytes>
0x400186:	mov	qword ptr [rbp - 0x40], 0
0x40018e:	mov	qword ptr [rbp - 0x38], 0
0x400196:	mov	qword ptr [rbp - 0x30], 0
0x40019e:	mov	qword ptr [rbp - 0x28], 0
0x4001a6:	mov	qword ptr [rbp - 0x20], 0
0x4001ae:	cmp	dword ptr [rbp - 0x44], 0
0x4001b2:	js	0x4001cc
<Block for 0x400178, 12 bytes>
0x400178:	lea	rdi, [rip + 0x320]
0x40017f:	call	0x500018
<Block for 0x40014a, 5 bytes>
0x40014a:	call	0x500008
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500008
<Block for 0x4001cc, 12 bytes>
0x4001cc:	lea	rdi, [rip + 0x2e5]
0x4001d3:	call	0x500018
<Block for 0x4001b4, 6 bytes>
0x4001b4:	cmp	dword ptr [rbp - 0x44], 9
0x4001b8:	jg	0x4001cc
<Block for 0x400184, 2 bytes>
0x400184:	jmp	0x4001d8
<Block for 0x40014f, 10 bytes>
0x40014f:	shl	eax, 0x1e
0x400152:	mov	ebx, eax
0x400154:	call	0x500008
<Block for 0x400132, 10 bytes>
0x400132:	shl	eax, 0x1e
0x400135:	mov	ebx, eax
0x400137:	call	0x500008
<Block for 0x4001d8, 16 bytes>
0x4001d8:	nop	
0x4001d9:	mov	rax, qword ptr [rbp - 0x18]
0x4001dd:	xor	rax, qword ptr fs:[0x28]
0x4001e6:	je	0x4001ed
<Block for 0x4001ba, 16 bytes>
0x4001ba:	mov	eax, dword ptr [rbp - 0x44]
0x4001bd:	cdqe	
0x4001bf:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001c3:	mov	edi, eax
0x4001c5:	call	0x500010
<Block for 0x400159, 10 bytes>
0x400159:	shl	eax, 0xf
0x40015c:	xor	ebx, eax
0x40015e:	call	0x500008
<Block for 0x40013c, 10 bytes>
0x40013c:	shl	eax, 0xf
0x40013f:	xor	ebx, eax
0x400141:	call	0x500008
<Block for 0x4001ed, 7 bytes>
0x4001ed:	add	rsp, 0x48
0x4001f1:	pop	rbx
0x4001f2:	pop	rbp
0x4001f3:	ret	
<Block for 0x4001e8, 5 bytes>
0x4001e8:	call	0x500020
<Block for 0x4001ca, 2 bytes>
0x4001ca:	jmp	0x4001d8
<Block for 0x400163, 17 bytes>
0x400163:	xor	eax, ebx
0x400165:	not	eax
0x400167:	mov	dword ptr [rbp - 0x44], eax
0x40016a:	mov	eax, 0
0x40016f:	call	0x500028
<Block for 0x400146, 4 bytes>
0x400146:	xor	eax, ebx
0x400148:	jmp	0x400167
<Block for 0x400167, 13 bytes>
0x400167:	mov	dword ptr [rbp - 0x44], eax
0x40016a:	mov	eax, 0
0x40016f:	call	0x500028
