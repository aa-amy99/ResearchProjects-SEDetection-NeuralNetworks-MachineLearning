<Block for 0x400067, 37 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x30
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	edi, 8
0x400087:	call	0x500010
<Block for 0x40008c, 78 bytes>
0x40008c:	mov	qword ptr [rbp - 0x20], rax
0x400090:	mov	rax, qword ptr [rbp - 0x20]
0x400094:	mov	dword ptr [rax], 0
0x40009a:	mov	rax, qword ptr [rbp - 0x20]
0x40009e:	mov	dword ptr [rax + 4], 0
0x4000a5:	mov	rax, qword ptr [rbp - 0x20]
0x4000a9:	mov	qword ptr [rbp - 0x18], rax
0x4000ad:	lea	rax, [rip + 0xfff74]
0x4000b4:	mov	qword ptr [rbp - 0x28], rax
0x4000b8:	lea	rax, [rbp - 0x28]
0x4000bc:	mov	qword ptr [rbp - 0x10], rax
0x4000c0:	mov	rax, qword ptr [rbp - 0x10]
0x4000c4:	mov	rax, qword ptr [rax]
0x4000c7:	mov	rcx, qword ptr [rax]
0x4000ca:	mov	rdx, qword ptr [rbp - 0x18]
0x4000ce:	mov	rax, qword ptr [rbp - 0x10]
0x4000d2:	mov	rsi, rdx
0x4000d5:	mov	rdi, rax
0x4000d8:	call	rcx
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x4000ef, 2 bytes>
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500008
