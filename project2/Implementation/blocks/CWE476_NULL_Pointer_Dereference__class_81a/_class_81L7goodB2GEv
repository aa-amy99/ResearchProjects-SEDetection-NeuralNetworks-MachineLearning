<Block for 0x4000f1, 80 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x20
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	qword ptr [rbp - 0x18], 0
0x400114:	lea	rax, [rip + 0xfff15]
0x40011b:	mov	qword ptr [rbp - 0x20], rax
0x40011f:	lea	rax, [rbp - 0x20]
0x400123:	mov	qword ptr [rbp - 0x10], rax
0x400127:	mov	rax, qword ptr [rbp - 0x10]
0x40012b:	mov	rax, qword ptr [rax]
0x40012e:	mov	rcx, qword ptr [rax]
0x400131:	mov	rdx, qword ptr [rbp - 0x18]
0x400135:	mov	rax, qword ptr [rbp - 0x10]
0x400139:	mov	rsi, rdx
0x40013c:	mov	rdi, rax
0x40013f:	call	rcx
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500008
