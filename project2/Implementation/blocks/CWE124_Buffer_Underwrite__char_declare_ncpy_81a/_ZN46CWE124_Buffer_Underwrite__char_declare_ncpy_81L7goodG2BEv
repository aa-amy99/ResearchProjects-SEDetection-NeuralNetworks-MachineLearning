<Block for 0x40008e, 52 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x90
0x40009d:	mov	rax, qword ptr fs:[0x28]
0x4000a6:	mov	qword ptr [rbp - 8], rax
0x4000aa:	xor	eax, eax
0x4000ac:	lea	rax, [rbp - 0x70]
0x4000b0:	mov	edx, 0x63
0x4000b5:	mov	esi, 0x41
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x500000
<Block for 0x4000c2, 63 bytes>
0x4000c2:	mov	byte ptr [rbp - 0xd], 0
0x4000c6:	lea	rax, [rbp - 0x70]
0x4000ca:	mov	qword ptr [rbp - 0x80], rax
0x4000ce:	lea	rax, [rip + 0xfff53]
0x4000d5:	mov	qword ptr [rbp - 0x88], rax
0x4000dc:	lea	rax, [rbp - 0x88]
0x4000e3:	mov	qword ptr [rbp - 0x78], rax
0x4000e7:	mov	rax, qword ptr [rbp - 0x78]
0x4000eb:	mov	rax, qword ptr [rax]
0x4000ee:	mov	rcx, qword ptr [rax]
0x4000f1:	mov	rdx, qword ptr [rbp - 0x80]
0x4000f5:	mov	rax, qword ptr [rbp - 0x78]
0x4000f9:	mov	rsi, rdx
0x4000fc:	mov	rdi, rax
0x4000ff:	call	rcx
<Block for 0x400101, 16 bytes>
0x400101:	nop	
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	xor	rax, qword ptr fs:[0x28]
0x40010f:	je	0x400116
<Block for 0x400116, 2 bytes>
0x400116:	leave	
0x400117:	ret	
<Block for 0x400111, 5 bytes>
0x400111:	call	0x500010
