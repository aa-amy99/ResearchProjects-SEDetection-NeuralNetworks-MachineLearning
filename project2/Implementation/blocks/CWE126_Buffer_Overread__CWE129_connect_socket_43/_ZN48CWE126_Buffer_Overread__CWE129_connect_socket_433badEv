<Block for 0x400110, 46 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0x40
0x40011c:	mov	rax, qword ptr fs:[0x28]
0x400125:	mov	qword ptr [rbp - 8], rax
0x400129:	xor	eax, eax
0x40012b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400132:	lea	rax, [rbp - 0x34]
0x400136:	mov	rdi, rax
0x400139:	call	0x400000
<Block for 0x40013e, 47 bytes>
0x40013e:	mov	qword ptr [rbp - 0x30], 0
0x400146:	mov	qword ptr [rbp - 0x28], 0
0x40014e:	mov	qword ptr [rbp - 0x20], 0
0x400156:	mov	qword ptr [rbp - 0x18], 0
0x40015e:	mov	qword ptr [rbp - 0x10], 0
0x400166:	mov	eax, dword ptr [rbp - 0x34]
0x400169:	test	eax, eax
0x40016b:	js	0x40017f
<Block for 0x40017f, 12 bytes>
0x40017f:	lea	rdi, [rip + 0x2aa]
0x400186:	call	0x500050
<Block for 0x40016d, 16 bytes>
0x40016d:	mov	eax, dword ptr [rbp - 0x34]
0x400170:	cdqe	
0x400172:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400176:	mov	edi, eax
0x400178:	call	0x500048
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 8]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001a0
<Block for 0x40017d, 2 bytes>
0x40017d:	jmp	0x40018b
<Block for 0x4001a0, 2 bytes>
0x4001a0:	leave	
0x4001a1:	ret	
<Block for 0x40019b, 5 bytes>
0x40019b:	call	0x500040
