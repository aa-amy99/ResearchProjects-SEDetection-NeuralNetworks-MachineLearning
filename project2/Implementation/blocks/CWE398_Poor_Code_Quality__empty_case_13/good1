<Block for 0x400060, 23 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x10
0x40006c:	mov	eax, dword ptr [rip + 0xfff8e]
0x400072:	cmp	eax, 5
0x400075:	je	0x400085
<Block for 0x400085, 5 bytes>
0x400085:	call	0x500008
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0xfe]
0x40007e:	call	0x500010
<Block for 0x40008a, 55 bytes>
0x40008a:	mov	edx, eax
0x40008c:	movsxd	rax, edx
0x40008f:	imul	rax, rax, 0x55555556
0x400096:	shr	rax, 0x20
0x40009a:	mov	rcx, rax
0x40009d:	mov	eax, edx
0x40009f:	sar	eax, 0x1f
0x4000a2:	mov	esi, ecx
0x4000a4:	sub	esi, eax
0x4000a6:	mov	eax, esi
0x4000a8:	mov	dword ptr [rbp - 4], eax
0x4000ab:	mov	ecx, dword ptr [rbp - 4]
0x4000ae:	mov	eax, ecx
0x4000b0:	add	eax, eax
0x4000b2:	add	eax, ecx
0x4000b4:	sub	edx, eax
0x4000b6:	mov	eax, edx
0x4000b8:	mov	dword ptr [rbp - 4], eax
0x4000bb:	cmp	dword ptr [rbp - 4], 0
0x4000bf:	jne	0x4000ce
<Block for 0x400083, 2 bytes>
0x400083:	jmp	0x4000da
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rdi, [rip + 0xc9]
0x4000c8:	call	0x500010
<Block for 0x4000ce, 12 bytes>
0x4000ce:	lea	rdi, [rip + 0xd6]
0x4000d5:	call	0x500010
<Block for 0x4000da, 3 bytes>
0x4000da:	nop	
0x4000db:	leave	
0x4000dc:	ret	
<Block for 0x4000cd, 1 bytes>
0x4000cd:	nop	
