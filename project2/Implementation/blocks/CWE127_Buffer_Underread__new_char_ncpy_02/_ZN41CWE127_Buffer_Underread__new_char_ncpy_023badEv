<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 26 bytes>
0x40002d:	mov	qword ptr [rbp - 0x78], rax
0x400031:	mov	rax, qword ptr [rbp - 0x78]
0x400035:	mov	edx, 0x63
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x400047, 45 bytes>
0x400047:	mov	rax, qword ptr [rbp - 0x78]
0x40004b:	add	rax, 0x63
0x40004f:	mov	byte ptr [rax], 0
0x400052:	mov	rax, qword ptr [rbp - 0x78]
0x400056:	sub	rax, 8
0x40005a:	mov	qword ptr [rbp - 0x80], rax
0x40005e:	lea	rax, [rbp - 0x70]
0x400062:	mov	edx, 0x63
0x400067:	mov	esi, 0x43
0x40006c:	mov	rdi, rax
0x40006f:	call	0x500008
<Block for 0x400074, 16 bytes>
0x400074:	mov	byte ptr [rbp - 0xd], 0
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500010
<Block for 0x400084, 22 bytes>
0x400084:	mov	rdx, rax
0x400087:	mov	rcx, qword ptr [rbp - 0x80]
0x40008b:	lea	rax, [rbp - 0x70]
0x40008f:	mov	rsi, rcx
0x400092:	mov	rdi, rax
0x400095:	call	0x500018
<Block for 0x40009a, 16 bytes>
0x40009a:	mov	byte ptr [rbp - 0xd], 0
0x40009e:	lea	rax, [rbp - 0x70]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500020
<Block for 0x4000aa, 16 bytes>
0x4000aa:	nop	
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	xor	rax, qword ptr fs:[0x28]
0x4000b8:	je	0x4000bf
<Block for 0x4000bf, 2 bytes>
0x4000bf:	leave	
0x4000c0:	ret	
<Block for 0x4000ba, 5 bytes>
0x4000ba:	call	0x500028
