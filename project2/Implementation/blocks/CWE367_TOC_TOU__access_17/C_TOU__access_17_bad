<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x78], 0
0x400022:	jmp	0x400165
<Block for 0x400165, 10 bytes>
0x400165:	cmp	dword ptr [rbp - 0x78], 0
0x400169:	jle	0x400027
<Block for 0x400027, 134 bytes>
0x400027:	mov	qword ptr [rbp - 0x70], 0
0x40002f:	mov	qword ptr [rbp - 0x68], 0
0x400037:	mov	qword ptr [rbp - 0x60], 0
0x40003f:	mov	qword ptr [rbp - 0x58], 0
0x400047:	mov	qword ptr [rbp - 0x50], 0
0x40004f:	mov	qword ptr [rbp - 0x48], 0
0x400057:	mov	qword ptr [rbp - 0x40], 0
0x40005f:	mov	qword ptr [rbp - 0x38], 0
0x400067:	mov	qword ptr [rbp - 0x30], 0
0x40006f:	mov	qword ptr [rbp - 0x28], 0
0x400077:	mov	qword ptr [rbp - 0x20], 0
0x40007f:	mov	qword ptr [rbp - 0x18], 0
0x400087:	mov	dword ptr [rbp - 0x10], 0
0x40008e:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400095:	mov	rdx, qword ptr [rip + 0xfff64]
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	esi, 0x64
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500008
<Block for 0x40016f, 16 bytes>
0x40016f:	nop	
0x400170:	mov	rax, qword ptr [rbp - 8]
0x400174:	xor	rax, qword ptr fs:[0x28]
0x40017d:	je	0x400184
<Block for 0x4000ad, 5 bytes>
0x4000ad:	test	rax, rax
0x4000b0:	jne	0x4000c2
<Block for 0x400184, 2 bytes>
0x400184:	leave	
0x400185:	ret	
<Block for 0x40017f, 5 bytes>
0x40017f:	call	0x500048
<Block for 0x4000b2, 12 bytes>
0x4000b2:	lea	rdi, [rip + 0x248]
0x4000b9:	call	0x500010
<Block for 0x4000c2, 11 bytes>
0x4000c2:	lea	rax, [rbp - 0x70]
0x4000c6:	movzx	eax, byte ptr [rax]
0x4000c9:	test	al, al
0x4000cb:	je	0x4000e2
<Block for 0x4000be, 15 bytes>
0x4000be:	mov	byte ptr [rbp - 0x70], 0
0x4000c2:	lea	rax, [rbp - 0x70]
0x4000c6:	movzx	eax, byte ptr [rax]
0x4000c9:	test	al, al
0x4000cb:	je	0x4000e2
<Block for 0x4000e2, 17 bytes>
0x4000e2:	lea	rax, [rbp - 0x70]
0x4000e6:	mov	esi, 2
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500020
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500018
<Block for 0x4000f3, 5 bytes>
0x4000f3:	cmp	eax, -1
0x4000f6:	jne	0x400102
<Block for 0x4000d9, 26 bytes>
0x4000d9:	sub	rax, 1
0x4000dd:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000e2:	lea	rax, [rbp - 0x70]
0x4000e6:	mov	esi, 2
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500020
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	edi, 1
0x4000fd:	call	0x500028
<Block for 0x400102, 22 bytes>
0x400102:	lea	rax, [rbp - 0x70]
0x400106:	mov	esi, 2
0x40010b:	mov	rdi, rax
0x40010e:	mov	eax, 0
0x400113:	call	0x500030
<Block for 0x400118, 9 bytes>
0x400118:	mov	dword ptr [rbp - 0x74], eax
0x40011b:	cmp	dword ptr [rbp - 0x74], -1
0x40011f:	jne	0x40012b
<Block for 0x400121, 10 bytes>
0x400121:	mov	edi, 1
0x400126:	call	0x500028
<Block for 0x40012b, 22 bytes>
0x40012b:	mov	eax, dword ptr [rbp - 0x74]
0x40012e:	mov	edx, 0xb
0x400133:	lea	rsi, [rip + 0x1d6]
0x40013a:	mov	edi, eax
0x40013c:	call	0x500038
<Block for 0x400141, 6 bytes>
0x400141:	cmp	rax, -1
0x400145:	jne	0x400151
<Block for 0x400147, 10 bytes>
0x400147:	mov	edi, 1
0x40014c:	call	0x500028
<Block for 0x400151, 6 bytes>
0x400151:	cmp	dword ptr [rbp - 0x74], -1
0x400155:	je	0x400161
<Block for 0x400161, 14 bytes>
0x400161:	add	dword ptr [rbp - 0x78], 1
0x400165:	cmp	dword ptr [rbp - 0x78], 0
0x400169:	jle	0x400027
<Block for 0x400157, 10 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x74]
0x40015a:	mov	edi, eax
0x40015c:	call	0x500040
