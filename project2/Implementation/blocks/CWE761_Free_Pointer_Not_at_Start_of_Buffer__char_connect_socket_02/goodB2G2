<Block for 0x4003a6, 37 bytes>
0x4003a6:	endbr64	
0x4003aa:	push	rbp
0x4003ab:	mov	rbp, rsp
0x4003ae:	sub	rsp, 0x50
0x4003b2:	mov	rax, qword ptr fs:[0x28]
0x4003bb:	mov	qword ptr [rbp - 8], rax
0x4003bf:	xor	eax, eax
0x4003c1:	mov	edi, 0x64
0x4003c6:	call	0x500000
<Block for 0x4003cb, 11 bytes>
0x4003cb:	mov	qword ptr [rbp - 0x38], rax
0x4003cf:	cmp	qword ptr [rbp - 0x38], 0
0x4003d4:	jne	0x4003e0
<Block for 0x4003d6, 10 bytes>
0x4003d6:	mov	edi, 0xffffffff
0x4003db:	call	0x500008
<Block for 0x4003e0, 26 bytes>
0x4003e0:	mov	rax, qword ptr [rbp - 0x38]
0x4003e4:	mov	byte ptr [rax], 0
0x4003e7:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4003ee:	mov	rax, qword ptr [rbp - 0x38]
0x4003f2:	mov	rdi, rax
0x4003f5:	call	0x500010
<Block for 0x4003fa, 24 bytes>
0x4003fa:	mov	qword ptr [rbp - 0x30], rax
0x4003fe:	mov	edx, 6
0x400403:	mov	esi, 1
0x400408:	mov	edi, 2
0x40040d:	call	0x500018
<Block for 0x400412, 13 bytes>
0x400412:	mov	dword ptr [rbp - 0x48], eax
0x400415:	cmp	dword ptr [rbp - 0x48], -1
0x400419:	je	0x40050c
<Block for 0x40050c, 3 bytes>
0x40050c:	nop	
0x40050d:	jmp	0x400510
<Block for 0x40041f, 22 bytes>
0x40041f:	lea	rax, [rbp - 0x20]
0x400423:	mov	edx, 0x10
0x400428:	mov	esi, 0
0x40042d:	mov	rdi, rax
0x400430:	call	0x500020
<Block for 0x400510, 6 bytes>
0x400510:	cmp	dword ptr [rbp - 0x48], -1
0x400514:	je	0x400520
<Block for 0x400435, 18 bytes>
0x400435:	mov	word ptr [rbp - 0x20], 2
0x40043b:	lea	rdi, [rip + 0x161]
0x400442:	call	0x500028
<Block for 0x400520, 10 bytes>
0x400520:	mov	qword ptr [rbp - 0x40], 0
0x400528:	jmp	0x40054f
<Block for 0x400516, 10 bytes>
0x400516:	mov	eax, dword ptr [rbp - 0x48]
0x400519:	mov	edi, eax
0x40051b:	call	0x500050
<Block for 0x400447, 13 bytes>
0x400447:	mov	dword ptr [rbp - 0x1c], eax
0x40044a:	mov	edi, 0x6987
0x40044f:	call	0x500030
<Block for 0x40054f, 12 bytes>
0x40054f:	mov	rax, qword ptr [rbp - 0x38]
0x400553:	mov	rdi, rax
0x400556:	call	0x500010
<Block for 0x400454, 26 bytes>
0x400454:	mov	word ptr [rbp - 0x1e], ax
0x400458:	lea	rcx, [rbp - 0x20]
0x40045c:	mov	eax, dword ptr [rbp - 0x48]
0x40045f:	mov	edx, 0x10
0x400464:	mov	rsi, rcx
0x400467:	mov	edi, eax
0x400469:	call	0x500038
<Block for 0x40055b, 6 bytes>
0x40055b:	cmp	qword ptr [rbp - 0x40], rax
0x40055f:	jb	0x40052a
<Block for 0x40046e, 9 bytes>
0x40046e:	cmp	eax, -1
0x400471:	je	0x40050f
<Block for 0x40052a, 18 bytes>
0x40052a:	mov	rdx, qword ptr [rbp - 0x38]
0x40052e:	mov	rax, qword ptr [rbp - 0x40]
0x400532:	add	rax, rdx
0x400535:	movzx	eax, byte ptr [rax]
0x400538:	cmp	al, 0x53
0x40053a:	jne	0x40054a
<Block for 0x400561, 12 bytes>
0x400561:	mov	rax, qword ptr [rbp - 0x38]
0x400565:	mov	rdi, rax
0x400568:	call	0x500060
<Block for 0x400477, 39 bytes>
0x400477:	mov	eax, 0x63
0x40047c:	sub	rax, qword ptr [rbp - 0x30]
0x400480:	mov	rdx, rax
0x400483:	mov	rcx, qword ptr [rbp - 0x38]
0x400487:	mov	rax, qword ptr [rbp - 0x30]
0x40048b:	lea	rsi, [rcx + rax]
0x40048f:	mov	eax, dword ptr [rbp - 0x48]
0x400492:	mov	ecx, 0
0x400497:	mov	edi, eax
0x400499:	call	0x500040
<Block for 0x40050f, 1 bytes>
0x40050f:	nop	
<Block for 0x40053c, 12 bytes>
0x40053c:	lea	rdi, [rip + 0x6a]
0x400543:	call	0x500058
<Block for 0x40054a, 17 bytes>
0x40054a:	add	qword ptr [rbp - 0x40], 1
0x40054f:	mov	rax, qword ptr [rbp - 0x38]
0x400553:	mov	rdi, rax
0x400556:	call	0x500010
<Block for 0x40056d, 16 bytes>
0x40056d:	nop	
0x40056e:	mov	rax, qword ptr [rbp - 8]
0x400572:	xor	rax, qword ptr fs:[0x28]
0x40057b:	je	0x400582
<Block for 0x40049e, 9 bytes>
0x40049e:	mov	dword ptr [rbp - 0x44], eax
0x4004a1:	cmp	dword ptr [rbp - 0x44], -1
0x4004a5:	je	0x400510
<Block for 0x400548, 2 bytes>
0x400548:	jmp	0x400561
<Block for 0x400582, 2 bytes>
0x400582:	leave	
0x400583:	ret	
<Block for 0x40057d, 5 bytes>
0x40057d:	call	0x500068
<Block for 0x4004a7, 6 bytes>
0x4004a7:	cmp	dword ptr [rbp - 0x44], 0
0x4004ab:	je	0x400510
<Block for 0x4004ad, 40 bytes>
0x4004ad:	mov	eax, dword ptr [rbp - 0x44]
0x4004b0:	movsxd	rdx, eax
0x4004b3:	mov	rax, qword ptr [rbp - 0x30]
0x4004b7:	add	rdx, rax
0x4004ba:	mov	rax, qword ptr [rbp - 0x38]
0x4004be:	add	rax, rdx
0x4004c1:	mov	byte ptr [rax], 0
0x4004c4:	mov	rax, qword ptr [rbp - 0x38]
0x4004c8:	mov	esi, 0xd
0x4004cd:	mov	rdi, rax
0x4004d0:	call	0x500048
<Block for 0x4004d5, 11 bytes>
0x4004d5:	mov	qword ptr [rbp - 0x28], rax
0x4004d9:	cmp	qword ptr [rbp - 0x28], 0
0x4004de:	je	0x4004e7
<Block for 0x4004e7, 17 bytes>
0x4004e7:	mov	rax, qword ptr [rbp - 0x38]
0x4004eb:	mov	esi, 0xa
0x4004f0:	mov	rdi, rax
0x4004f3:	call	0x500048
<Block for 0x4004e0, 24 bytes>
0x4004e0:	mov	rax, qword ptr [rbp - 0x28]
0x4004e4:	mov	byte ptr [rax], 0
0x4004e7:	mov	rax, qword ptr [rbp - 0x38]
0x4004eb:	mov	esi, 0xa
0x4004f0:	mov	rdi, rax
0x4004f3:	call	0x500048
<Block for 0x4004f8, 11 bytes>
0x4004f8:	mov	qword ptr [rbp - 0x28], rax
0x4004fc:	cmp	qword ptr [rbp - 0x28], 0
0x400501:	je	0x400510
<Block for 0x400503, 9 bytes>
0x400503:	mov	rax, qword ptr [rbp - 0x28]
0x400507:	mov	byte ptr [rax], 0
0x40050a:	jmp	0x400510
