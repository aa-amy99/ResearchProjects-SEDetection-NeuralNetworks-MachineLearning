<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	test	eax, eax
0x40001c:	je	0x400060
<Block for 0x400060, 10 bytes>
0x400060:	mov	eax, dword ptr [rip + 0xfff9a]
0x400066:	test	eax, eax
0x400068:	je	0x400076
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 0x64
0x400023:	call	0x500008
<Block for 0x400076, 3 bytes>
0x400076:	nop	
0x400077:	leave	
0x400078:	ret	
<Block for 0x40006a, 12 bytes>
0x40006a:	mov	rax, qword ptr [rbp - 8]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500020
<Block for 0x400028, 26 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	mov	rax, qword ptr [rbp - 8]
0x400030:	mov	edx, 0x63
0x400035:	mov	esi, 0x41
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500010
<Block for 0x400042, 18 bytes>
0x400042:	mov	rax, qword ptr [rbp - 8]
0x400046:	add	rax, 0x63
0x40004a:	mov	byte ptr [rax], 0
0x40004d:	cmp	qword ptr [rbp - 8], 0
0x400052:	je	0x400060
<Block for 0x400054, 12 bytes>
0x400054:	mov	rax, qword ptr [rbp - 8]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500018
