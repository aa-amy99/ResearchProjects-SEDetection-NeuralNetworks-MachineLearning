<Block for 0x400073, 95 bytes>
0x400073:	endbr64	
0x400077:	push	rbp
0x400078:	mov	rbp, rsp
0x40007b:	sub	rsp, 0x20
0x40007f:	mov	rax, qword ptr fs:[0x28]
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	xor	eax, eax
0x40008e:	mov	qword ptr [rbp - 0x18], 0
0x400096:	mov	dword ptr [rbp - 0x20], 8
0x40009d:	lea	rax, [rbp - 0x20]
0x4000a1:	mov	qword ptr [rbp - 0x18], rax
0x4000a5:	lea	rax, [rip + 0xfff74]
0x4000ac:	mov	qword ptr [rbp - 0x20], rax
0x4000b0:	lea	rax, [rbp - 0x20]
0x4000b4:	mov	qword ptr [rbp - 0x10], rax
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	mov	rax, qword ptr [rax]
0x4000bf:	mov	rcx, qword ptr [rax]
0x4000c2:	mov	rdx, qword ptr [rbp - 0x18]
0x4000c6:	mov	rax, qword ptr [rbp - 0x10]
0x4000ca:	mov	rsi, rdx
0x4000cd:	mov	rdi, rax
0x4000d0:	call	rcx
<Block for 0x4000d2, 16 bytes>
0x4000d2:	nop	
0x4000d3:	mov	rax, qword ptr [rbp - 8]
0x4000d7:	xor	rax, qword ptr fs:[0x28]
0x4000e0:	je	0x4000e7
<Block for 0x4000e7, 2 bytes>
0x4000e7:	leave	
0x4000e8:	ret	
<Block for 0x4000e2, 5 bytes>
0x4000e2:	call	0x500008
