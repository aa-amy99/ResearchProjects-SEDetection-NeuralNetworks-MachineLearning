<Block for 0x400000, 92 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	byte ptr [rbp - 0x20], 0x61
0x400027:	lea	rax, [rbp - 0x20]
0x40002b:	mov	qword ptr [rbp - 0x18], rax
0x40002f:	lea	rax, [rip + 0xfffda]
0x400036:	mov	qword ptr [rbp - 0x20], rax
0x40003a:	lea	rax, [rbp - 0x20]
0x40003e:	mov	qword ptr [rbp - 0x10], rax
0x400042:	mov	rax, qword ptr [rbp - 0x10]
0x400046:	mov	rax, qword ptr [rax]
0x400049:	mov	rcx, qword ptr [rax]
0x40004c:	mov	rdx, qword ptr [rbp - 0x18]
0x400050:	mov	rax, qword ptr [rbp - 0x10]
0x400054:	mov	rsi, rdx
0x400057:	mov	rdi, rax
0x40005a:	call	rcx
<Block for 0x40005c, 16 bytes>
0x40005c:	nop	
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	xor	rax, qword ptr fs:[0x28]
0x40006a:	je	0x400071
<Block for 0x400071, 2 bytes>
0x400071:	leave	
0x400072:	ret	
<Block for 0x40006c, 5 bytes>
0x40006c:	call	0x500008
