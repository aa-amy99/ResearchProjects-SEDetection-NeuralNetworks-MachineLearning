<Block for 0x400163, 22 bytes>
0x400163:	endbr64	
0x400167:	push	rbp
0x400168:	mov	rbp, rsp
0x40016b:	push	r13
0x40016d:	push	r12
0x40016f:	push	rbx
0x400170:	sub	rsp, 0x18
0x400174:	call	0x40000f
<Block for 0x400179, 9 bytes>
0x400179:	test	eax, eax
0x40017b:	setne	al
0x40017e:	test	al, al
0x400180:	je	0x400193
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500000
<Block for 0x400182, 12 bytes>
0x400182:	lea	rdi, [rip + 0x31a]
0x400189:	call	0x500058
<Block for 0x400198, 12 bytes>
0x400198:	and	eax, 1
0x40019b:	test	eax, eax
0x40019d:	sete	al
0x4001a0:	test	al, al
0x4001a2:	je	0x4001d9
<Block for 0x40018e, 5 bytes>
0x40018e:	jmp	0x4002e8
<Block for 0x4001d9, 5 bytes>
0x4001d9:	call	0x500000
<Block for 0x4001a4, 10 bytes>
0x4001a4:	mov	edi, 0x10
0x4001a9:	call	0x500008
<Block for 0x4002e8, 11 bytes>
0x4002e8:	add	rsp, 0x18
0x4002ec:	pop	rbx
0x4002ed:	pop	r12
0x4002ef:	pop	r13
0x4002f1:	pop	rbp
0x4002f2:	ret	
<Block for 0x4001de, 12 bytes>
0x4001de:	and	eax, 1
0x4001e1:	test	eax, eax
0x4001e3:	sete	al
0x4001e6:	test	al, al
0x4001e8:	je	0x40021f
<Block for 0x4001ae, 18 bytes>
0x4001ae:	mov	rbx, rax
0x4001b1:	lea	rsi, [rip + 0x2d4]
0x4001b8:	mov	rdi, rbx
0x4001bb:	call	0x500010
<Block for 0x40021f, 12 bytes>
0x40021f:	lea	rdi, [rip + 0x270]
0x400226:	call	0x500058
<Block for 0x4001ea, 10 bytes>
0x4001ea:	mov	edi, 0x10
0x4001ef:	call	0x500008
<Block for 0x4001c0, 25 bytes>
0x4001c0:	mov	rax, qword ptr [rip + 0xffe59]
0x4001c7:	mov	rdx, rax
0x4001ca:	lea	rsi, [rip + 0xffe57]
0x4001d1:	mov	rdi, rbx
0x4001d4:	call	0x500030
<Block for 0x40022b, 5 bytes>
0x40022b:	jmp	0x4002e8
<Block for 0x4001f4, 18 bytes>
0x4001f4:	mov	rbx, rax
0x4001f7:	lea	rsi, [rip + 0x293]
0x4001fe:	mov	rdi, rbx
0x400201:	call	0x500038
<Block for 0x400206, 25 bytes>
0x400206:	mov	rax, qword ptr [rip + 0xffe3b]
0x40020d:	mov	rdx, rax
0x400210:	lea	rsi, [rip + 0xffe39]
0x400217:	mov	rdi, rbx
0x40021a:	call	0x500030
