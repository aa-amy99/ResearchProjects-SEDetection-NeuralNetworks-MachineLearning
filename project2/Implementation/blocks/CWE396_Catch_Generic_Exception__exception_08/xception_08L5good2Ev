<Block for 0x4002f3, 22 bytes>
0x4002f3:	endbr64	
0x4002f7:	push	rbp
0x4002f8:	mov	rbp, rsp
0x4002fb:	push	r13
0x4002fd:	push	r12
0x4002ff:	push	rbx
0x400300:	sub	rsp, 0x18
0x400304:	call	0x400000
<Block for 0x400309, 13 bytes>
0x400309:	test	eax, eax
0x40030b:	setne	al
0x40030e:	test	al, al
0x400310:	je	0x40046b
<Block for 0x40046b, 11 bytes>
0x40046b:	add	rsp, 0x18
0x40046f:	pop	rbx
0x400470:	pop	r12
0x400472:	pop	r13
0x400474:	pop	rbp
0x400475:	ret	
<Block for 0x400316, 5 bytes>
0x400316:	call	0x500000
<Block for 0x40031b, 12 bytes>
0x40031b:	and	eax, 1
0x40031e:	test	eax, eax
0x400320:	sete	al
0x400323:	test	al, al
0x400325:	je	0x40035c
<Block for 0x40035c, 5 bytes>
0x40035c:	call	0x500000
<Block for 0x400327, 10 bytes>
0x400327:	mov	edi, 0x10
0x40032c:	call	0x500008
<Block for 0x400361, 12 bytes>
0x400361:	and	eax, 1
0x400364:	test	eax, eax
0x400366:	sete	al
0x400369:	test	al, al
0x40036b:	je	0x4003a2
<Block for 0x400331, 18 bytes>
0x400331:	mov	rbx, rax
0x400334:	lea	rsi, [rip + 0x151]
0x40033b:	mov	rdi, rbx
0x40033e:	call	0x500010
<Block for 0x4003a2, 12 bytes>
0x4003a2:	lea	rdi, [rip + 0xed]
0x4003a9:	call	0x500058
<Block for 0x40036d, 10 bytes>
0x40036d:	mov	edi, 0x10
0x400372:	call	0x500008
<Block for 0x400343, 25 bytes>
0x400343:	mov	rax, qword ptr [rip + 0xffcd6]
0x40034a:	mov	rdx, rax
0x40034d:	lea	rsi, [rip + 0xffcd4]
0x400354:	mov	rdi, rbx
0x400357:	call	0x500030
<Block for 0x4003ae, 5 bytes>
0x4003ae:	jmp	0x40046b
<Block for 0x400377, 18 bytes>
0x400377:	mov	rbx, rax
0x40037a:	lea	rsi, [rip + 0x110]
0x400381:	mov	rdi, rbx
0x400384:	call	0x500038
<Block for 0x400389, 25 bytes>
0x400389:	mov	rax, qword ptr [rip + 0xffcb8]
0x400390:	mov	rdx, rax
0x400393:	lea	rsi, [rip + 0xffcb6]
0x40039a:	mov	rdi, rbx
0x40039d:	call	0x500030
