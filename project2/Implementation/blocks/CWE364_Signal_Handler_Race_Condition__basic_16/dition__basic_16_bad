<Block for 0x40004e, 35 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	sub	rsp, 0x10
0x40005a:	mov	qword ptr [rbp - 8], 0
0x400062:	mov	esi, 0
0x400067:	mov	edi, 2
0x40006c:	call	0x500000
<Block for 0x400071, 12 bytes>
0x400071:	mov	rax, qword ptr [rip + 0x188]
0x400078:	test	rax, rax
0x40007b:	je	0x400097
<Block for 0x400097, 10 bytes>
0x400097:	mov	edi, 4
0x40009c:	call	0x500010
<Block for 0x40007d, 15 bytes>
0x40007d:	mov	rax, qword ptr [rip + 0x17c]
0x400084:	mov	rdi, rax
0x400087:	call	0x500008
<Block for 0x4000a1, 11 bytes>
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	cmp	qword ptr [rbp - 8], 0
0x4000aa:	jne	0x4000b6
<Block for 0x40008c, 21 bytes>
0x40008c:	mov	qword ptr [rip + 0x169], 0
0x400097:	mov	edi, 4
0x40009c:	call	0x500010
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	edi, 0xffffffff
0x4000b1:	call	0x500018
<Block for 0x4000b6, 41 bytes>
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	mov	qword ptr [rip + 0x13f], rax
0x4000c1:	mov	rax, qword ptr [rip + 0x138]
0x4000c8:	mov	dword ptr [rax], 1
0x4000ce:	lea	rsi, [rip - 0xd5]
0x4000d5:	mov	edi, 2
0x4000da:	call	0x500000
<Block for 0x4000df, 12 bytes>
0x4000df:	mov	rax, qword ptr [rip + 0x11a]
0x4000e6:	test	rax, rax
0x4000e9:	je	0x400105
<Block for 0x400105, 4 bytes>
0x400105:	nop	
0x400106:	nop	
0x400107:	leave	
0x400108:	ret	
<Block for 0x4000eb, 15 bytes>
0x4000eb:	mov	rax, qword ptr [rip + 0x10e]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500008
<Block for 0x4000fa, 15 bytes>
0x4000fa:	mov	qword ptr [rip + 0xfb], 0
0x400105:	nop	
0x400106:	nop	
0x400107:	leave	
0x400108:	ret	
