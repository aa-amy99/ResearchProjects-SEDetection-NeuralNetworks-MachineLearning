<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x40], 0
0x400022:	jmp	0x40008a
<Block for 0x40008a, 6 bytes>
0x40008a:	cmp	dword ptr [rbp - 0x40], 0
0x40008e:	jle	0x400024
<Block for 0x400024, 98 bytes>
0x400024:	mov	dword ptr [rbp - 0x30], 1
0x40002b:	mov	dword ptr [rbp - 0x2c], 2
0x400032:	mov	dword ptr [rbp - 0x28], 3
0x400039:	mov	dword ptr [rbp - 0x24], 4
0x400040:	mov	dword ptr [rbp - 0x20], 5
0x400047:	mov	dword ptr [rbp - 0x1c], 6
0x40004e:	mov	dword ptr [rbp - 0x18], 7
0x400055:	mov	dword ptr [rbp - 0x14], 8
0x40005c:	mov	dword ptr [rbp - 0x10], 9
0x400063:	mov	dword ptr [rbp - 0xc], 0xa
0x40006a:	lea	rax, [rbp - 0x30]
0x40006e:	mov	qword ptr [rbp - 0x38], rax
0x400072:	mov	rax, qword ptr [rbp - 0x38]
0x400076:	mov	eax, dword ptr [rax + 0x20]
0x400079:	mov	dword ptr [rbp - 0x3c], eax
0x40007c:	mov	eax, dword ptr [rbp - 0x3c]
0x40007f:	mov	edi, eax
0x400081:	call	0x500000
<Block for 0x400090, 16 bytes>
0x400090:	nop	
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	xor	rax, qword ptr fs:[0x28]
0x40009e:	je	0x4000a5
<Block for 0x400086, 10 bytes>
0x400086:	add	dword ptr [rbp - 0x40], 1
0x40008a:	cmp	dword ptr [rbp - 0x40], 0
0x40008e:	jle	0x400024
<Block for 0x4000a5, 2 bytes>
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x4000a0, 5 bytes>
0x4000a0:	call	0x500008
