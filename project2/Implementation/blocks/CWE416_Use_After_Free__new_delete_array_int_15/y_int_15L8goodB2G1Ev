<Block for 0x400076, 30 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x10
0x400082:	mov	qword ptr [rbp - 8], 0
0x40008a:	mov	edi, 0x190
0x40008f:	call	0x500000
<Block for 0x400094, 19 bytes>
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	mov	qword ptr [rbp - 0x10], 0
0x4000a0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a5:	ja	0x4000c7
<Block for 0x4000a7, 32 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x10]
0x4000ab:	lea	rdx, [rax*4]
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	add	rax, rdx
0x4000ba:	mov	dword ptr [rax], 5
0x4000c0:	add	qword ptr [rbp - 0x10], 1
0x4000c5:	jmp	0x4000a0
<Block for 0x4000c7, 7 bytes>
0x4000c7:	cmp	qword ptr [rbp - 8], 0
0x4000cc:	je	0x4000da
<Block for 0x4000a0, 7 bytes>
0x4000a0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a5:	ja	0x4000c7
<Block for 0x4000da, 5 bytes>
0x4000da:	nop	
0x4000db:	nop	
0x4000dc:	nop	
0x4000dd:	leave	
0x4000de:	ret	
<Block for 0x4000ce, 12 bytes>
0x4000ce:	mov	rax, qword ptr [rbp - 8]
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500008
