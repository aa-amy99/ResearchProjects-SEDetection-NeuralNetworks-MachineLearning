<Block for 0x400201, 44 bytes>
0x400201:	endbr64	
0x400205:	push	rbp
0x400206:	mov	rbp, rsp
0x400209:	sub	rsp, 0x40
0x40020d:	mov	rax, qword ptr fs:[0x28]
0x400216:	mov	qword ptr [rbp - 8], rax
0x40021a:	xor	eax, eax
0x40021c:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400223:	mov	eax, dword ptr [rbp - 0x34]
0x400226:	mov	edi, eax
0x400228:	call	0x40019e
<Block for 0x40022d, 49 bytes>
0x40022d:	mov	dword ptr [rbp - 0x34], eax
0x400230:	mov	qword ptr [rbp - 0x30], 0
0x400238:	mov	qword ptr [rbp - 0x28], 0
0x400240:	mov	qword ptr [rbp - 0x20], 0
0x400248:	mov	qword ptr [rbp - 0x18], 0
0x400250:	mov	qword ptr [rbp - 0x10], 0
0x400258:	cmp	dword ptr [rbp - 0x34], 0
0x40025c:	js	0x400276
<Block for 0x400276, 12 bytes>
0x400276:	lea	rdi, [rip + 0x5b]
0x40027d:	call	0x500010
<Block for 0x40025e, 6 bytes>
0x40025e:	cmp	dword ptr [rbp - 0x34], 9
0x400262:	jg	0x400276
<Block for 0x400282, 16 bytes>
0x400282:	nop	
0x400283:	mov	rax, qword ptr [rbp - 8]
0x400287:	xor	rax, qword ptr fs:[0x28]
0x400290:	je	0x400297
<Block for 0x400264, 16 bytes>
0x400264:	mov	eax, dword ptr [rbp - 0x34]
0x400267:	cdqe	
0x400269:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40026d:	mov	edi, eax
0x40026f:	call	0x500008
<Block for 0x400297, 2 bytes>
0x400297:	leave	
0x400298:	ret	
<Block for 0x400292, 5 bytes>
0x400292:	call	0x500018
<Block for 0x400274, 2 bytes>
0x400274:	jmp	0x400282
