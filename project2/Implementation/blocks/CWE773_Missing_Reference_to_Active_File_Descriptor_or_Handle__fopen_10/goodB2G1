<Block for 0x400062, 39 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x10
0x40006e:	mov	qword ptr [rbp - 8], 0
0x400076:	lea	rsi, [rip + 0xfc]
0x40007d:	lea	rdi, [rip + 0xf8]
0x400084:	call	0x500000
<Block for 0x400089, 14 bytes>
0x400089:	mov	qword ptr [rbp - 8], rax
0x40008d:	mov	eax, dword ptr [rip + 0xfff85]
0x400093:	test	eax, eax
0x400095:	je	0x4000a5
<Block for 0x4000a5, 7 bytes>
0x4000a5:	cmp	qword ptr [rbp - 8], 0
0x4000aa:	je	0x4000b8
<Block for 0x400097, 12 bytes>
0x400097:	lea	rdi, [rip + 0x104]
0x40009e:	call	0x500020
<Block for 0x4000b8, 19 bytes>
0x4000b8:	lea	rsi, [rip + 0xba]
0x4000bf:	lea	rdi, [rip + 0xf1]
0x4000c6:	call	0x500000
<Block for 0x4000ac, 12 bytes>
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500010
<Block for 0x4000a3, 2 bytes>
0x4000a3:	jmp	0x4000e2
<Block for 0x4000cb, 11 bytes>
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	cmp	qword ptr [rbp - 8], 0
0x4000d4:	je	0x4000e2
<Block for 0x4000e2, 3 bytes>
0x4000e2:	nop	
0x4000e3:	leave	
0x4000e4:	ret	
<Block for 0x4000d6, 12 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500010
