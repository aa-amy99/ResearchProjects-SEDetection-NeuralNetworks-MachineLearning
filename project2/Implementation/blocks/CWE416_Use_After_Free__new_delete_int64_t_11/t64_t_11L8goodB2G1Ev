<Block for 0x400071, 25 bytes>
0x400071:	endbr64	
0x400075:	push	rbp
0x400076:	mov	rbp, rsp
0x400079:	sub	rsp, 0x10
0x40007d:	mov	qword ptr [rbp - 8], 0
0x400085:	call	0x500000
<Block for 0x40008a, 9 bytes>
0x40008a:	test	eax, eax
0x40008c:	setne	al
0x40008f:	test	al, al
0x400091:	je	0x4000c2
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500020
<Block for 0x400093, 10 bytes>
0x400093:	mov	edi, 8
0x400098:	call	0x500008
<Block for 0x4000c7, 9 bytes>
0x4000c7:	test	eax, eax
0x4000c9:	setne	al
0x4000cc:	test	al, al
0x4000ce:	je	0x4000dc
<Block for 0x40009d, 24 bytes>
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	mov	qword ptr [rax], 5
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	test	rax, rax
0x4000b3:	je	0x4000c2
<Block for 0x4000dc, 3 bytes>
0x4000dc:	nop	
0x4000dd:	leave	
0x4000de:	ret	
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rdi, [rip + 0x146]
0x4000d7:	call	0x500028
<Block for 0x4000b5, 13 bytes>
0x4000b5:	mov	esi, 8
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x500010
