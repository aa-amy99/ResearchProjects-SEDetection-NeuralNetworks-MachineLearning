<Block for 0x4000b1, 55 bytes>
0x4000b1:	endbr64	
0x4000b5:	push	rbp
0x4000b6:	mov	rbp, rsp
0x4000b9:	sub	rsp, 0xf0
0x4000c0:	mov	rax, qword ptr fs:[0x28]
0x4000c9:	mov	qword ptr [rbp - 8], rax
0x4000cd:	xor	eax, eax
0x4000cf:	lea	rax, [rbp - 0xe0]
0x4000d6:	mov	edx, 0x63
0x4000db:	mov	esi, 0x41
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500000
<Block for 0x4000e8, 14 bytes>
0x4000e8:	mov	byte ptr [rbp - 0x7d], 0
0x4000ec:	mov	eax, 0
0x4000f1:	call	0x500028
<Block for 0x4000f6, 4 bytes>
0x4000f6:	test	eax, eax
0x4000f8:	je	0x400108
<Block for 0x400108, 36 bytes>
0x400108:	lea	rax, [rbp - 0xe0]
0x40010f:	mov	qword ptr [rbp - 0xe8], rax
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x137]
0x400101:	call	0x500018
<Block for 0x40012c, 26 bytes>
0x40012c:	mov	byte ptr [rbp - 0xd], 0
0x400130:	lea	rdx, [rbp - 0x70]
0x400134:	mov	rax, qword ptr [rbp - 0xe8]
0x40013b:	mov	rsi, rdx
0x40013e:	mov	rdi, rax
0x400141:	call	0x500010
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x400116
<Block for 0x400146, 15 bytes>
0x400146:	mov	rax, qword ptr [rbp - 0xe8]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500018
<Block for 0x400116, 22 bytes>
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500020
