<Block for 0x400093, 40 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	push	rbx
0x40009c:	sub	rsp, 0x18
0x4000a0:	mov	qword ptr [rbp - 0x20], 0
0x4000a8:	lea	rsi, [rip + 0x154]
0x4000af:	lea	rdi, [rip + 0x166]
0x4000b6:	call	0x500028
<Block for 0x4000bb, 14 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x20], rax
0x4000bf:	mov	edi, 8
0x4000c4:	call	0x500018
<Block for 0x4000c9, 11 bytes>
0x4000c9:	mov	rbx, rax
0x4000cc:	mov	rdi, rbx
0x4000cf:	call	0x400232
<Block for 0x4000d4, 30 bytes>
0x4000d4:	mov	qword ptr [rbp - 0x18], rbx
0x4000d8:	mov	rax, qword ptr [rbp - 0x18]
0x4000dc:	mov	rax, qword ptr [rax]
0x4000df:	mov	rcx, qword ptr [rax]
0x4000e2:	mov	rdx, qword ptr [rbp - 0x20]
0x4000e6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ea:	mov	rsi, rdx
0x4000ed:	mov	rdi, rax
0x4000f0:	call	rcx
<Block for 0x4000f2, 9 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x18]
0x4000f6:	test	rax, rax
0x4000f9:	je	0x400108
<Block for 0x400108, 8 bytes>
0x400108:	nop	
0x400109:	add	rsp, 0x18
0x40010d:	pop	rbx
0x40010e:	pop	rbp
0x40010f:	ret	
<Block for 0x4000fb, 13 bytes>
0x4000fb:	mov	esi, 8
0x400100:	mov	rdi, rax
0x400103:	call	0x500020
