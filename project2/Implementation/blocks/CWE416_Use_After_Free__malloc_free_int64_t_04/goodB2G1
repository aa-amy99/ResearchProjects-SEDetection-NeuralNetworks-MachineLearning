<Block for 0x400093, 29 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0x10
0x40009f:	mov	qword ptr [rbp - 8], 0
0x4000a7:	mov	eax, 1
0x4000ac:	test	eax, eax
0x4000ae:	je	0x40010b
<Block for 0x40010b, 9 bytes>
0x40010b:	mov	eax, 0
0x400110:	test	eax, eax
0x400112:	je	0x400120
<Block for 0x4000b0, 10 bytes>
0x4000b0:	mov	edi, 0x320
0x4000b5:	call	0x500000
<Block for 0x400120, 3 bytes>
0x400120:	nop	
0x400121:	leave	
0x400122:	ret	
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0x1dd]
0x40011b:	call	0x500020
<Block for 0x4000ba, 11 bytes>
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	cmp	qword ptr [rbp - 8], 0
0x4000c3:	jne	0x4000cf
<Block for 0x4000c5, 10 bytes>
0x4000c5:	mov	edi, 0xffffffff
0x4000ca:	call	0x500008
<Block for 0x4000cf, 10 bytes>
0x4000cf:	mov	qword ptr [rbp - 0x10], 0
0x4000d7:	jmp	0x4000f8
<Block for 0x4000f8, 7 bytes>
0x4000f8:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000fd:	jbe	0x4000d9
<Block for 0x4000d9, 38 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 0x10]
0x4000dd:	lea	rdx, [rax*8]
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	add	rax, rdx
0x4000ec:	mov	qword ptr [rax], 5
0x4000f3:	add	qword ptr [rbp - 0x10], 1
0x4000f8:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000fd:	jbe	0x4000d9
<Block for 0x4000ff, 12 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	mov	rdi, rax
0x400106:	call	0x500010
