<Block for 0x400211, 30 bytes>
0x400211:	endbr64	
0x400215:	push	rbp
0x400216:	mov	rbp, rsp
0x400219:	sub	rsp, 0x10
0x40021d:	mov	qword ptr [rbp - 8], 0
0x400225:	mov	edi, 0x320
0x40022a:	call	0x500000
<Block for 0x40022f, 19 bytes>
0x40022f:	mov	qword ptr [rbp - 8], rax
0x400233:	mov	qword ptr [rbp - 0x10], 0
0x40023b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400240:	ja	0x40027c
<Block for 0x400242, 58 bytes>
0x400242:	mov	rax, qword ptr [rbp - 0x10]
0x400246:	lea	rdx, [rax*8]
0x40024e:	mov	rax, qword ptr [rbp - 8]
0x400252:	add	rax, rdx
0x400255:	mov	dword ptr [rax], 1
0x40025b:	mov	rax, qword ptr [rbp - 0x10]
0x40025f:	lea	rdx, [rax*8]
0x400267:	mov	rax, qword ptr [rbp - 8]
0x40026b:	add	rax, rdx
0x40026e:	mov	dword ptr [rax + 4], 2
0x400275:	add	qword ptr [rbp - 0x10], 1
0x40027a:	jmp	0x40023b
<Block for 0x40027c, 13 bytes>
0x40027c:	nop	
0x40027d:	mov	rax, qword ptr [rbp - 8]
0x400281:	mov	rdi, rax
0x400284:	call	0x500010
<Block for 0x40023b, 7 bytes>
0x40023b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400240:	ja	0x40027c
<Block for 0x400289, 4 bytes>
0x400289:	nop	
0x40028a:	nop	
0x40028b:	leave	
0x40028c:	ret	
