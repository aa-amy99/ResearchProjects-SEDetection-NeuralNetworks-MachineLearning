<Block for 0x4001a2, 76 bytes>
0x4001a2:	endbr64	
0x4001a6:	push	rbp
0x4001a7:	mov	rbp, rsp
0x4001aa:	sub	rsp, 0x40
0x4001ae:	mov	dword ptr [rbp - 0x34], edi
0x4001b1:	mov	rax, qword ptr fs:[0x28]
0x4001ba:	mov	qword ptr [rbp - 8], rax
0x4001be:	xor	eax, eax
0x4001c0:	mov	qword ptr [rbp - 0x30], 0
0x4001c8:	mov	qword ptr [rbp - 0x28], 0
0x4001d0:	mov	qword ptr [rbp - 0x20], 0
0x4001d8:	mov	qword ptr [rbp - 0x18], 0
0x4001e0:	mov	qword ptr [rbp - 0x10], 0
0x4001e8:	cmp	dword ptr [rbp - 0x34], 9
0x4001ec:	jg	0x400200
<Block for 0x4001ee, 16 bytes>
0x4001ee:	mov	eax, dword ptr [rbp - 0x34]
0x4001f1:	cdqe	
0x4001f3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001f7:	mov	edi, eax
0x4001f9:	call	0x500000
<Block for 0x400200, 12 bytes>
0x400200:	lea	rdi, [rip + 0x219]
0x400207:	call	0x500008
<Block for 0x4001fe, 2 bytes>
0x4001fe:	jmp	0x40020c
<Block for 0x40020c, 16 bytes>
0x40020c:	nop	
0x40020d:	mov	rax, qword ptr [rbp - 8]
0x400211:	xor	rax, qword ptr fs:[0x28]
0x40021a:	je	0x400221
<Block for 0x400221, 2 bytes>
0x400221:	leave	
0x400222:	ret	
<Block for 0x40021c, 5 bytes>
0x40021c:	call	0x500010
