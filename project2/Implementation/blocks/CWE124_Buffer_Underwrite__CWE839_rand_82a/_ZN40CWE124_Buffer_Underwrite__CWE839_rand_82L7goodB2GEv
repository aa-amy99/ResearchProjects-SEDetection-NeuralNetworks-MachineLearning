<Block for 0x400116, 25 bytes>
0x400116:	endbr64	
0x40011a:	push	rbp
0x40011b:	mov	rbp, rsp
0x40011e:	push	rbx
0x40011f:	sub	rsp, 0x18
0x400123:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40012a:	call	0x500000
<Block for 0x40012f, 7 bytes>
0x40012f:	and	eax, 1
0x400132:	test	eax, eax
0x400134:	je	0x400153
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500000
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500000
<Block for 0x400158, 10 bytes>
0x400158:	shl	eax, 0x1e
0x40015b:	mov	ebx, eax
0x40015d:	call	0x500000
<Block for 0x40013b, 10 bytes>
0x40013b:	shl	eax, 0x1e
0x40013e:	mov	ebx, eax
0x400140:	call	0x500000
<Block for 0x400162, 10 bytes>
0x400162:	shl	eax, 0xf
0x400165:	xor	ebx, eax
0x400167:	call	0x500000
<Block for 0x400145, 10 bytes>
0x400145:	shl	eax, 0xf
0x400148:	xor	ebx, eax
0x40014a:	call	0x500000
<Block for 0x40016c, 17 bytes>
0x40016c:	xor	eax, ebx
0x40016e:	not	eax
0x400170:	mov	dword ptr [rbp - 0x1c], eax
0x400173:	mov	edi, 8
0x400178:	call	0x500008
<Block for 0x40014f, 4 bytes>
0x40014f:	xor	eax, ebx
0x400151:	jmp	0x400170
<Block for 0x40017d, 11 bytes>
0x40017d:	mov	rbx, rax
0x400180:	mov	rdi, rbx
0x400183:	call	0x400252
<Block for 0x400170, 13 bytes>
0x400170:	mov	dword ptr [rbp - 0x1c], eax
0x400173:	mov	edi, 8
0x400178:	call	0x500008
<Block for 0x400188, 28 bytes>
0x400188:	mov	qword ptr [rbp - 0x18], rbx
0x40018c:	mov	rax, qword ptr [rbp - 0x18]
0x400190:	mov	rax, qword ptr [rax]
0x400193:	mov	rcx, qword ptr [rax]
0x400196:	mov	edx, dword ptr [rbp - 0x1c]
0x400199:	mov	rax, qword ptr [rbp - 0x18]
0x40019d:	mov	esi, edx
0x40019f:	mov	rdi, rax
0x4001a2:	call	rcx
<Block for 0x4001a4, 9 bytes>
0x4001a4:	mov	rax, qword ptr [rbp - 0x18]
0x4001a8:	test	rax, rax
0x4001ab:	je	0x4001ba
<Block for 0x4001ba, 8 bytes>
0x4001ba:	nop	
0x4001bb:	add	rsp, 0x18
0x4001bf:	pop	rbx
0x4001c0:	pop	rbp
0x4001c1:	ret	
<Block for 0x4001ad, 13 bytes>
0x4001ad:	mov	esi, 8
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500010
