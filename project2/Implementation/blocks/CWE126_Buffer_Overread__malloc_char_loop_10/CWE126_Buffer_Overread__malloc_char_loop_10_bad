<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, dword ptr [rip + 0xfffd1]
0x40002f:	test	eax, eax
0x400031:	je	0x40007f
<Block for 0x40007f, 22 bytes>
0x40007f:	lea	rax, [rbp - 0x70]
0x400083:	mov	edx, 0x63
0x400088:	mov	esi, 0x43
0x40008d:	mov	rdi, rax
0x400090:	call	0x500018
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x32
0x400038:	call	0x500008
<Block for 0x400095, 16 bytes>
0x400095:	mov	byte ptr [rbp - 0xd], 0
0x400099:	lea	rax, [rbp - 0x70]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500020
<Block for 0x40003d, 17 bytes>
0x40003d:	mov	qword ptr [rbp - 0x88], rax
0x400044:	cmp	qword ptr [rbp - 0x88], 0
0x40004c:	jne	0x400058
<Block for 0x4000a5, 14 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x78], rax
0x4000a9:	mov	qword ptr [rbp - 0x80], 0
0x4000b1:	jmp	0x4000d6
<Block for 0x40004e, 10 bytes>
0x40004e:	mov	edi, 0xffffffff
0x400053:	call	0x500010
<Block for 0x400058, 25 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0x88]
0x40005f:	mov	edx, 0x31
0x400064:	mov	esi, 0x41
0x400069:	mov	rdi, rax
0x40006c:	call	0x500018
<Block for 0x4000d6, 10 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x80]
0x4000da:	cmp	rax, qword ptr [rbp - 0x78]
0x4000de:	jb	0x4000b3
<Block for 0x400071, 36 bytes>
0x400071:	mov	rax, qword ptr [rbp - 0x88]
0x400078:	add	rax, 0x31
0x40007c:	mov	byte ptr [rax], 0
0x40007f:	lea	rax, [rbp - 0x70]
0x400083:	mov	edx, 0x63
0x400088:	mov	esi, 0x43
0x40008d:	mov	rdi, rax
0x400090:	call	0x500018
<Block for 0x4000b3, 45 bytes>
0x4000b3:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ba:	mov	rax, qword ptr [rbp - 0x80]
0x4000be:	add	rax, rdx
0x4000c1:	movzx	eax, byte ptr [rax]
0x4000c4:	lea	rcx, [rbp - 0x70]
0x4000c8:	mov	rdx, qword ptr [rbp - 0x80]
0x4000cc:	add	rdx, rcx
0x4000cf:	mov	byte ptr [rdx], al
0x4000d1:	add	qword ptr [rbp - 0x80], 1
0x4000d6:	mov	rax, qword ptr [rbp - 0x80]
0x4000da:	cmp	rax, qword ptr [rbp - 0x78]
0x4000de:	jb	0x4000b3
<Block for 0x4000e0, 16 bytes>
0x4000e0:	mov	byte ptr [rbp - 0xd], 0
0x4000e4:	lea	rax, [rbp - 0x70]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500028
<Block for 0x4000f0, 15 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x88]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500030
<Block for 0x4000ff, 16 bytes>
0x4000ff:	nop	
0x400100:	mov	rax, qword ptr [rbp - 8]
0x400104:	xor	rax, qword ptr fs:[0x28]
0x40010d:	je	0x400114
<Block for 0x400114, 2 bytes>
0x400114:	leave	
0x400115:	ret	
<Block for 0x40010f, 5 bytes>
0x40010f:	call	0x500038
