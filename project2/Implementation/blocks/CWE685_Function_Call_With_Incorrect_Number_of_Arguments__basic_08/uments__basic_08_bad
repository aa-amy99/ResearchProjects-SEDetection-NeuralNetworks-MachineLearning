<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x70
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 4 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x400072
<Block for 0x400072, 16 bytes>
0x400072:	nop	
0x400073:	mov	rax, qword ptr [rbp - 8]
0x400077:	xor	rax, qword ptr fs:[0x28]
0x400080:	je	0x400087
<Block for 0x400047, 31 bytes>
0x400047:	lea	rax, [rbp - 0x70]
0x40004b:	lea	rdx, [rip + 0x148]
0x400052:	lea	rsi, [rip + 0x145]
0x400059:	mov	rdi, rax
0x40005c:	mov	eax, 0
0x400061:	call	0x500000
<Block for 0x400087, 2 bytes>
0x400087:	leave	
0x400088:	ret	
<Block for 0x400082, 5 bytes>
0x400082:	call	0x500010
<Block for 0x400066, 12 bytes>
0x400066:	lea	rax, [rbp - 0x70]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500008
