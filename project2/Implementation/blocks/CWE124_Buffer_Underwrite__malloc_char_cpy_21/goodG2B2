<Block for 0x400264, 57 bytes>
0x400264:	endbr64	
0x400268:	push	rbp
0x400269:	mov	rbp, rsp
0x40026c:	add	rsp, -0x80
0x400270:	mov	rax, qword ptr fs:[0x28]
0x400279:	mov	qword ptr [rbp - 8], rax
0x40027d:	xor	eax, eax
0x40027f:	mov	qword ptr [rbp - 0x78], 0
0x400287:	mov	dword ptr [rip + 0x87], 1
0x400291:	mov	rax, qword ptr [rbp - 0x78]
0x400295:	mov	rdi, rax
0x400298:	call	0x4001fc
<Block for 0x40029d, 26 bytes>
0x40029d:	mov	qword ptr [rbp - 0x78], rax
0x4002a1:	lea	rax, [rbp - 0x70]
0x4002a5:	mov	edx, 0x63
0x4002aa:	mov	esi, 0x43
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x500010
<Block for 0x4002b7, 23 bytes>
0x4002b7:	mov	byte ptr [rbp - 0xd], 0
0x4002bb:	lea	rdx, [rbp - 0x70]
0x4002bf:	mov	rax, qword ptr [rbp - 0x78]
0x4002c3:	mov	rsi, rdx
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x500018
<Block for 0x4002ce, 12 bytes>
0x4002ce:	mov	rax, qword ptr [rbp - 0x78]
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x500020
<Block for 0x4002da, 16 bytes>
0x4002da:	nop	
0x4002db:	mov	rax, qword ptr [rbp - 8]
0x4002df:	xor	rax, qword ptr fs:[0x28]
0x4002e8:	je	0x4002ef
<Block for 0x4002ef, 2 bytes>
0x4002ef:	leave	
0x4002f0:	ret	
<Block for 0x4002ea, 5 bytes>
0x4002ea:	call	0x500028
