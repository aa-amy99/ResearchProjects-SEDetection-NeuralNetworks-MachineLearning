<Block for 0x4001a9, 85 bytes>
0x4001a9:	endbr64	
0x4001ad:	push	rbp
0x4001ae:	mov	rbp, rsp
0x4001b1:	push	rbx
0x4001b2:	sub	rsp, 0x88
0x4001b9:	mov	rax, qword ptr fs:[0x28]
0x4001c2:	mov	qword ptr [rbp - 0x18], rax
0x4001c6:	xor	eax, eax
0x4001c8:	mov	eax, 0x10
0x4001cd:	sub	rax, 1
0x4001d1:	add	rax, 0x6c
0x4001d5:	mov	esi, 0x10
0x4001da:	mov	edx, 0
0x4001df:	div	rsi
0x4001e2:	imul	rax, rax, 0x10
0x4001e6:	mov	rdx, rax
0x4001e9:	and	rdx, 0xfffffffffffff000
0x4001f0:	mov	rbx, rsp
0x4001f3:	sub	rbx, rdx
0x4001f6:	mov	rdx, rbx
0x4001f9:	cmp	rsp, rdx
0x4001fc:	je	0x400210
<Block for 0x400210, 26 bytes>
0x400210:	mov	rdx, rax
0x400213:	and	edx, 0xfff
0x400219:	sub	rsp, rdx
0x40021c:	mov	rdx, rax
0x40021f:	and	edx, 0xfff
0x400225:	test	rdx, rdx
0x400228:	je	0x40023a
<Block for 0x4001fe, 18 bytes>
0x4001fe:	sub	rsp, 0x1000
0x400205:	or	qword ptr [rsp + 0xff8], 0
0x40020e:	jmp	0x4001f9
<Block for 0x40023a, 47 bytes>
0x40023a:	mov	rax, rsp
0x40023d:	add	rax, 0xf
0x400241:	shr	rax, 4
0x400245:	shl	rax, 4
0x400249:	mov	qword ptr [rbp - 0x88], rax
0x400250:	mov	rax, qword ptr [rbp - 0x88]
0x400257:	mov	edx, 0x63
0x40025c:	mov	esi, 0x41
0x400261:	mov	rdi, rax
0x400264:	call	0x500000
<Block for 0x40022a, 63 bytes>
0x40022a:	and	eax, 0xfff
0x40022f:	sub	rax, 8
0x400233:	add	rax, rsp
0x400236:	or	qword ptr [rax], 0
0x40023a:	mov	rax, rsp
0x40023d:	add	rax, 0xf
0x400241:	shr	rax, 4
0x400245:	shl	rax, 4
0x400249:	mov	qword ptr [rbp - 0x88], rax
0x400250:	mov	rax, qword ptr [rbp - 0x88]
0x400257:	mov	edx, 0x63
0x40025c:	mov	esi, 0x41
0x400261:	mov	rdi, rax
0x400264:	call	0x500000
<Block for 0x4001f9, 5 bytes>
0x4001f9:	cmp	rsp, rdx
0x4001fc:	je	0x400210
<Block for 0x400269, 25 bytes>
0x400269:	mov	rax, qword ptr [rbp - 0x88]
0x400270:	add	rax, 0x63
0x400274:	mov	byte ptr [rax], 0
0x400277:	mov	eax, dword ptr [rip + 0x2a3]
0x40027d:	cmp	eax, 5
0x400280:	je	0x400290
<Block for 0x400290, 36 bytes>
0x400290:	mov	rax, qword ptr [rbp - 0x88]
0x400297:	mov	qword ptr [rbp - 0x90], rax
0x40029e:	lea	rax, [rbp - 0x80]
0x4002a2:	mov	edx, 0x63
0x4002a7:	mov	esi, 0x43
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500000
<Block for 0x400282, 12 bytes>
0x400282:	lea	rdi, [rip + 0x29b]
0x400289:	call	0x500008
<Block for 0x4002b4, 141 bytes>
0x4002b4:	mov	byte ptr [rbp - 0x1d], 0
0x4002b8:	mov	rax, qword ptr [rbp - 0x90]
0x4002bf:	mov	rcx, qword ptr [rbp - 0x80]
0x4002c3:	mov	rbx, qword ptr [rbp - 0x78]
0x4002c7:	mov	qword ptr [rax], rcx
0x4002ca:	mov	qword ptr [rax + 8], rbx
0x4002ce:	mov	rcx, qword ptr [rbp - 0x70]
0x4002d2:	mov	rbx, qword ptr [rbp - 0x68]
0x4002d6:	mov	qword ptr [rax + 0x10], rcx
0x4002da:	mov	qword ptr [rax + 0x18], rbx
0x4002de:	mov	rcx, qword ptr [rbp - 0x60]
0x4002e2:	mov	rbx, qword ptr [rbp - 0x58]
0x4002e6:	mov	qword ptr [rax + 0x20], rcx
0x4002ea:	mov	qword ptr [rax + 0x28], rbx
0x4002ee:	mov	rcx, qword ptr [rbp - 0x50]
0x4002f2:	mov	rbx, qword ptr [rbp - 0x48]
0x4002f6:	mov	qword ptr [rax + 0x30], rcx
0x4002fa:	mov	qword ptr [rax + 0x38], rbx
0x4002fe:	mov	rcx, qword ptr [rbp - 0x40]
0x400302:	mov	rbx, qword ptr [rbp - 0x38]
0x400306:	mov	qword ptr [rax + 0x40], rcx
0x40030a:	mov	qword ptr [rax + 0x48], rbx
0x40030e:	mov	rcx, qword ptr [rbp - 0x30]
0x400312:	mov	rbx, qword ptr [rbp - 0x28]
0x400316:	mov	qword ptr [rax + 0x50], rcx
0x40031a:	mov	qword ptr [rax + 0x58], rbx
0x40031e:	mov	edx, dword ptr [rbp - 0x20]
0x400321:	mov	dword ptr [rax + 0x60], edx
0x400324:	mov	rax, qword ptr [rbp - 0x90]
0x40032b:	add	rax, 0x63
0x40032f:	mov	byte ptr [rax], 0
0x400332:	mov	rax, qword ptr [rbp - 0x90]
0x400339:	mov	rdi, rax
0x40033c:	call	0x500008
<Block for 0x40028e, 2 bytes>
0x40028e:	jmp	0x40029e
<Block for 0x400341, 16 bytes>
0x400341:	nop	
0x400342:	mov	rax, qword ptr [rbp - 0x18]
0x400346:	xor	rax, qword ptr fs:[0x28]
0x40034f:	je	0x400356
<Block for 0x40029e, 22 bytes>
0x40029e:	lea	rax, [rbp - 0x80]
0x4002a2:	mov	edx, 0x63
0x4002a7:	mov	esi, 0x43
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500000
<Block for 0x400356, 6 bytes>
0x400356:	mov	rbx, qword ptr [rbp - 8]
0x40035a:	leave	
0x40035b:	ret	
<Block for 0x400351, 5 bytes>
0x400351:	call	0x500010
