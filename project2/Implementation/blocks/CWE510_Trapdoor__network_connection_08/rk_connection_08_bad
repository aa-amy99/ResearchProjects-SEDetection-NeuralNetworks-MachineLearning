<Block for 0x40000f, 37 bytes>
0x40000f:	endbr64	
0x400013:	push	rbp
0x400014:	mov	rbp, rsp
0x400017:	sub	rsp, 0x30
0x40001b:	mov	rax, qword ptr fs:[0x28]
0x400024:	mov	qword ptr [rbp - 8], rax
0x400028:	xor	eax, eax
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 8 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x4000c5
<Block for 0x4000c5, 16 bytes>
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x40003c, 27 bytes>
0x40003c:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400043:	mov	edx, 6
0x400048:	mov	esi, 1
0x40004d:	mov	edi, 2
0x400052:	call	0x500000
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500030
<Block for 0x400057, 9 bytes>
0x400057:	mov	dword ptr [rbp - 0x24], eax
0x40005a:	cmp	dword ptr [rbp - 0x24], -1
0x40005e:	je	0x4000b4
<Block for 0x400060, 22 bytes>
0x400060:	lea	rax, [rbp - 0x20]
0x400064:	mov	edx, 0x10
0x400069:	mov	esi, 0
0x40006e:	mov	rdi, rax
0x400071:	call	0x500008
<Block for 0x4000b4, 1 bytes>
0x4000b4:	nop	
<Block for 0x400076, 18 bytes>
0x400076:	mov	word ptr [rbp - 0x20], 2
0x40007c:	lea	rdi, [rip + 0x59]
0x400083:	call	0x500010
<Block for 0x4000b5, 6 bytes>
0x4000b5:	cmp	dword ptr [rbp - 0x24], -1
0x4000b9:	je	0x4000c5
<Block for 0x400088, 13 bytes>
0x400088:	mov	dword ptr [rbp - 0x1c], eax
0x40008b:	mov	edi, 0x50
0x400090:	call	0x500018
<Block for 0x4000bb, 10 bytes>
0x4000bb:	mov	eax, dword ptr [rbp - 0x24]
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500028
<Block for 0x400095, 26 bytes>
0x400095:	mov	word ptr [rbp - 0x1e], ax
0x400099:	lea	rcx, [rbp - 0x20]
0x40009d:	mov	eax, dword ptr [rbp - 0x24]
0x4000a0:	mov	edx, 0x10
0x4000a5:	mov	rsi, rcx
0x4000a8:	mov	edi, eax
0x4000aa:	call	0x500020
<Block for 0x4000af, 5 bytes>
0x4000af:	cmp	eax, -1
0x4000b2:	jmp	0x4000b5
