<Block for 0x4000ab, 43 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x20
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	mov	dword ptr [rbp - 0x1c], 5
0x4000cd:	mov	dword ptr [rbp - 0x18], 0
0x4000d4:	jmp	0x4000e2
<Block for 0x4000e2, 6 bytes>
0x4000e2:	cmp	dword ptr [rbp - 0x18], 0
0x4000e6:	jle	0x4000d6
<Block for 0x4000d6, 18 bytes>
0x4000d6:	lea	rax, [rbp - 0x1c]
0x4000da:	mov	qword ptr [rbp - 0x10], rax
0x4000de:	add	dword ptr [rbp - 0x18], 1
0x4000e2:	cmp	dword ptr [rbp - 0x18], 0
0x4000e6:	jle	0x4000d6
<Block for 0x4000e8, 9 bytes>
0x4000e8:	mov	dword ptr [rbp - 0x14], 0
0x4000ef:	jmp	0x400102
<Block for 0x400102, 6 bytes>
0x400102:	cmp	dword ptr [rbp - 0x14], 0
0x400106:	jle	0x4000f1
<Block for 0x4000f1, 13 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x10]
0x4000f5:	mov	eax, dword ptr [rax]
0x4000f7:	mov	edi, eax
0x4000f9:	call	0x500000
<Block for 0x400108, 16 bytes>
0x400108:	nop	
0x400109:	mov	rax, qword ptr [rbp - 8]
0x40010d:	xor	rax, qword ptr fs:[0x28]
0x400116:	je	0x40011d
<Block for 0x4000fe, 10 bytes>
0x4000fe:	add	dword ptr [rbp - 0x14], 1
0x400102:	cmp	dword ptr [rbp - 0x14], 0
0x400106:	jle	0x4000f1
<Block for 0x40011d, 2 bytes>
0x40011d:	leave	
0x40011e:	ret	
<Block for 0x400118, 5 bytes>
0x400118:	call	0x500010
