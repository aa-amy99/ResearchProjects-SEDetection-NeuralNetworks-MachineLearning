<Block for 0x400315, 81 bytes>
0x400315:	endbr64	
0x400319:	push	rbp
0x40031a:	mov	rbp, rsp
0x40031d:	sub	rsp, 0x20
0x400321:	mov	rax, qword ptr fs:[0x28]
0x40032a:	mov	qword ptr [rbp - 8], rax
0x40032e:	xor	eax, eax
0x400330:	mov	eax, 0x10
0x400335:	sub	rax, 1
0x400339:	add	rax, 0x3a
0x40033d:	mov	edi, 0x10
0x400342:	mov	edx, 0
0x400347:	div	rdi
0x40034a:	imul	rax, rax, 0x10
0x40034e:	mov	rdx, rax
0x400351:	and	rdx, 0xfffffffffffff000
0x400358:	mov	rcx, rsp
0x40035b:	sub	rcx, rdx
0x40035e:	mov	rdx, rcx
0x400361:	cmp	rsp, rdx
0x400364:	je	0x400378
<Block for 0x400378, 26 bytes>
0x400378:	mov	rdx, rax
0x40037b:	and	edx, 0xfff
0x400381:	sub	rsp, rdx
0x400384:	mov	rdx, rax
0x400387:	and	edx, 0xfff
0x40038d:	test	rdx, rdx
0x400390:	je	0x4003a2
<Block for 0x400366, 18 bytes>
0x400366:	sub	rsp, 0x1000
0x40036d:	or	qword ptr [rsp + 0xff8], 0
0x400376:	jmp	0x400361
<Block for 0x4003a2, 73 bytes>
0x4003a2:	mov	rax, rsp
0x4003a5:	add	rax, 0xf
0x4003a9:	shr	rax, 4
0x4003ad:	shl	rax, 4
0x4003b1:	mov	qword ptr [rbp - 0x20], rax
0x4003b5:	mov	eax, 0x10
0x4003ba:	sub	rax, 1
0x4003be:	add	rax, 0x6c
0x4003c2:	mov	ecx, 0x10
0x4003c7:	mov	edx, 0
0x4003cc:	div	rcx
0x4003cf:	imul	rax, rax, 0x10
0x4003d3:	mov	rdx, rax
0x4003d6:	and	rdx, 0xfffffffffffff000
0x4003dd:	mov	rsi, rsp
0x4003e0:	sub	rsi, rdx
0x4003e3:	mov	rdx, rsi
0x4003e6:	cmp	rsp, rdx
0x4003e9:	je	0x4003fd
<Block for 0x400392, 89 bytes>
0x400392:	and	eax, 0xfff
0x400397:	sub	rax, 8
0x40039b:	add	rax, rsp
0x40039e:	or	qword ptr [rax], 0
0x4003a2:	mov	rax, rsp
0x4003a5:	add	rax, 0xf
0x4003a9:	shr	rax, 4
0x4003ad:	shl	rax, 4
0x4003b1:	mov	qword ptr [rbp - 0x20], rax
0x4003b5:	mov	eax, 0x10
0x4003ba:	sub	rax, 1
0x4003be:	add	rax, 0x6c
0x4003c2:	mov	ecx, 0x10
0x4003c7:	mov	edx, 0
0x4003cc:	div	rcx
0x4003cf:	imul	rax, rax, 0x10
0x4003d3:	mov	rdx, rax
0x4003d6:	and	rdx, 0xfffffffffffff000
0x4003dd:	mov	rsi, rsp
0x4003e0:	sub	rsi, rdx
0x4003e3:	mov	rdx, rsi
0x4003e6:	cmp	rsp, rdx
0x4003e9:	je	0x4003fd
<Block for 0x400361, 5 bytes>
0x400361:	cmp	rsp, rdx
0x400364:	je	0x400378
<Block for 0x4003fd, 26 bytes>
0x4003fd:	mov	rdx, rax
0x400400:	and	edx, 0xfff
0x400406:	sub	rsp, rdx
0x400409:	mov	rdx, rax
0x40040c:	and	edx, 0xfff
0x400412:	test	rdx, rdx
0x400415:	je	0x400427
<Block for 0x4003eb, 18 bytes>
0x4003eb:	sub	rsp, 0x1000
0x4003f2:	or	qword ptr [rsp + 0xff8], 0
0x4003fb:	jmp	0x4003e6
<Block for 0x400427, 41 bytes>
0x400427:	mov	rax, rsp
0x40042a:	add	rax, 0xf
0x40042e:	shr	rax, 4
0x400432:	shl	rax, 4
0x400436:	mov	qword ptr [rbp - 0x18], rax
0x40043a:	mov	rax, qword ptr [rbp - 0x20]
0x40043e:	mov	edx, 0x31
0x400443:	mov	esi, 0x41
0x400448:	mov	rdi, rax
0x40044b:	call	0x500000
<Block for 0x400417, 57 bytes>
0x400417:	and	eax, 0xfff
0x40041c:	sub	rax, 8
0x400420:	add	rax, rsp
0x400423:	or	qword ptr [rax], 0
0x400427:	mov	rax, rsp
0x40042a:	add	rax, 0xf
0x40042e:	shr	rax, 4
0x400432:	shl	rax, 4
0x400436:	mov	qword ptr [rbp - 0x18], rax
0x40043a:	mov	rax, qword ptr [rbp - 0x20]
0x40043e:	mov	edx, 0x31
0x400443:	mov	esi, 0x41
0x400448:	mov	rdi, rax
0x40044b:	call	0x500000
<Block for 0x4003e6, 5 bytes>
0x4003e6:	cmp	rsp, rdx
0x4003e9:	je	0x4003fd
<Block for 0x400450, 33 bytes>
0x400450:	mov	rax, qword ptr [rbp - 0x20]
0x400454:	add	rax, 0x31
0x400458:	mov	byte ptr [rax], 0
0x40045b:	mov	rax, qword ptr [rbp - 0x18]
0x40045f:	mov	edx, 0x63
0x400464:	mov	esi, 0x41
0x400469:	mov	rdi, rax
0x40046c:	call	0x500000
<Block for 0x400471, 40 bytes>
0x400471:	mov	rax, qword ptr [rbp - 0x18]
0x400475:	add	rax, 0x63
0x400479:	mov	byte ptr [rax], 0
0x40047c:	mov	rax, qword ptr [rbp - 0x18]
0x400480:	mov	qword ptr [rbp - 0x10], rax
0x400484:	mov	rax, qword ptr [rbp - 0x10]
0x400488:	mov	qword ptr [rip + 0x41], rax
0x40048f:	mov	eax, 0
0x400494:	call	0x400258
<Block for 0x400499, 16 bytes>
0x400499:	nop	
0x40049a:	mov	rax, qword ptr [rbp - 8]
0x40049e:	xor	rax, qword ptr fs:[0x28]
0x4004a7:	je	0x4004ae
<Block for 0x4004ae, 2 bytes>
0x4004ae:	leave	
0x4004af:	ret	
<Block for 0x4004a9, 5 bytes>
0x4004a9:	call	0x500018
