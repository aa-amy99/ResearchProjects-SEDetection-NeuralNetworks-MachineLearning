<Block for 0x4000bd, 81 bytes>
0x4000bd:	endbr64	
0x4000c1:	push	rbp
0x4000c2:	mov	rbp, rsp
0x4000c5:	sub	rsp, 0x20
0x4000c9:	mov	rax, qword ptr fs:[0x28]
0x4000d2:	mov	qword ptr [rbp - 8], rax
0x4000d6:	xor	eax, eax
0x4000d8:	mov	eax, 0x10
0x4000dd:	sub	rax, 1
0x4000e1:	add	rax, 0x3a
0x4000e5:	mov	edi, 0x10
0x4000ea:	mov	edx, 0
0x4000ef:	div	rdi
0x4000f2:	imul	rax, rax, 0x10
0x4000f6:	mov	rdx, rax
0x4000f9:	and	rdx, 0xfffffffffffff000
0x400100:	mov	rcx, rsp
0x400103:	sub	rcx, rdx
0x400106:	mov	rdx, rcx
0x400109:	cmp	rsp, rdx
0x40010c:	je	0x400120
<Block for 0x400120, 26 bytes>
0x400120:	mov	rdx, rax
0x400123:	and	edx, 0xfff
0x400129:	sub	rsp, rdx
0x40012c:	mov	rdx, rax
0x40012f:	and	edx, 0xfff
0x400135:	test	rdx, rdx
0x400138:	je	0x40014a
<Block for 0x40010e, 18 bytes>
0x40010e:	sub	rsp, 0x1000
0x400115:	or	qword ptr [rsp + 0xff8], 0
0x40011e:	jmp	0x400109
<Block for 0x40014a, 73 bytes>
0x40014a:	mov	rax, rsp
0x40014d:	add	rax, 0xf
0x400151:	shr	rax, 4
0x400155:	shl	rax, 4
0x400159:	mov	qword ptr [rbp - 0x20], rax
0x40015d:	mov	eax, 0x10
0x400162:	sub	rax, 1
0x400166:	add	rax, 0x6c
0x40016a:	mov	ecx, 0x10
0x40016f:	mov	edx, 0
0x400174:	div	rcx
0x400177:	imul	rax, rax, 0x10
0x40017b:	mov	rdx, rax
0x40017e:	and	rdx, 0xfffffffffffff000
0x400185:	mov	rsi, rsp
0x400188:	sub	rsi, rdx
0x40018b:	mov	rdx, rsi
0x40018e:	cmp	rsp, rdx
0x400191:	je	0x4001a5
<Block for 0x40013a, 89 bytes>
0x40013a:	and	eax, 0xfff
0x40013f:	sub	rax, 8
0x400143:	add	rax, rsp
0x400146:	or	qword ptr [rax], 0
0x40014a:	mov	rax, rsp
0x40014d:	add	rax, 0xf
0x400151:	shr	rax, 4
0x400155:	shl	rax, 4
0x400159:	mov	qword ptr [rbp - 0x20], rax
0x40015d:	mov	eax, 0x10
0x400162:	sub	rax, 1
0x400166:	add	rax, 0x6c
0x40016a:	mov	ecx, 0x10
0x40016f:	mov	edx, 0
0x400174:	div	rcx
0x400177:	imul	rax, rax, 0x10
0x40017b:	mov	rdx, rax
0x40017e:	and	rdx, 0xfffffffffffff000
0x400185:	mov	rsi, rsp
0x400188:	sub	rsi, rdx
0x40018b:	mov	rdx, rsi
0x40018e:	cmp	rsp, rdx
0x400191:	je	0x4001a5
<Block for 0x400109, 5 bytes>
0x400109:	cmp	rsp, rdx
0x40010c:	je	0x400120
<Block for 0x4001a5, 26 bytes>
0x4001a5:	mov	rdx, rax
0x4001a8:	and	edx, 0xfff
0x4001ae:	sub	rsp, rdx
0x4001b1:	mov	rdx, rax
0x4001b4:	and	edx, 0xfff
0x4001ba:	test	rdx, rdx
0x4001bd:	je	0x4001cf
<Block for 0x400193, 18 bytes>
0x400193:	sub	rsp, 0x1000
0x40019a:	or	qword ptr [rsp + 0xff8], 0
0x4001a3:	jmp	0x40018e
<Block for 0x4001cf, 41 bytes>
0x4001cf:	mov	rax, rsp
0x4001d2:	add	rax, 0xf
0x4001d6:	shr	rax, 4
0x4001da:	shl	rax, 4
0x4001de:	mov	qword ptr [rbp - 0x18], rax
0x4001e2:	mov	rax, qword ptr [rbp - 0x20]
0x4001e6:	mov	edx, 0x31
0x4001eb:	mov	esi, 0x41
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500000
<Block for 0x4001bf, 57 bytes>
0x4001bf:	and	eax, 0xfff
0x4001c4:	sub	rax, 8
0x4001c8:	add	rax, rsp
0x4001cb:	or	qword ptr [rax], 0
0x4001cf:	mov	rax, rsp
0x4001d2:	add	rax, 0xf
0x4001d6:	shr	rax, 4
0x4001da:	shl	rax, 4
0x4001de:	mov	qword ptr [rbp - 0x18], rax
0x4001e2:	mov	rax, qword ptr [rbp - 0x20]
0x4001e6:	mov	edx, 0x31
0x4001eb:	mov	esi, 0x41
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500000
<Block for 0x40018e, 5 bytes>
0x40018e:	cmp	rsp, rdx
0x400191:	je	0x4001a5
<Block for 0x4001f8, 33 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0x20]
0x4001fc:	add	rax, 0x31
0x400200:	mov	byte ptr [rax], 0
0x400203:	mov	rax, qword ptr [rbp - 0x18]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x400219, 40 bytes>
0x400219:	mov	rax, qword ptr [rbp - 0x18]
0x40021d:	add	rax, 0x63
0x400221:	mov	byte ptr [rax], 0
0x400224:	mov	rax, qword ptr [rbp - 0x20]
0x400228:	mov	qword ptr [rbp - 0x10], rax
0x40022c:	mov	rax, qword ptr [rbp - 0x10]
0x400230:	mov	qword ptr [rip + 0x291], rax
0x400237:	mov	eax, 0
0x40023c:	call	0x400000
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500018
