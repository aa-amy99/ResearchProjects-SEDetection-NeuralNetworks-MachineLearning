<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xc8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400432
<Block for 0x40002e, 26 bytes>
0x40002e:	lea	rax, [rbp - 0x80]
0x400032:	mov	qword ptr [rbp - 0xd0], rax
0x400039:	lea	rax, [rbp - 0xc0]
0x400040:	mov	rdi, rax
0x400043:	call	0x4005c6
<Block for 0x400048, 32 bytes>
0x400048:	mov	qword ptr [rbp - 0xc8], rax
0x40004f:	lea	rdx, [rbp - 0xc8]
0x400056:	lea	rax, [rbp - 0xa0]
0x40005d:	mov	rsi, rdx
0x400060:	mov	rdi, rax
0x400063:	call	0x400616
<Block for 0x400068, 37 bytes>
0x400068:	lea	rdx, [rbp - 0xd0]
0x40006f:	mov	rsi, qword ptr [rbp - 0xa0]
0x400076:	lea	rax, [rbp - 0xc0]
0x40007d:	mov	rcx, rdx
0x400080:	mov	edx, 1
0x400085:	mov	rdi, rax
0x400088:	call	0x400644
<Block for 0x40008d, 15 bytes>
0x40008d:	lea	rax, [rbp - 0xc0]
0x400094:	mov	rdi, rax
0x400097:	call	0x4005c6
<Block for 0x40009c, 32 bytes>
0x40009c:	mov	qword ptr [rbp - 0xc8], rax
0x4000a3:	lea	rdx, [rbp - 0xc8]
0x4000aa:	lea	rax, [rbp - 0xa0]
0x4000b1:	mov	rsi, rdx
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x400616
<Block for 0x4000bc, 37 bytes>
0x4000bc:	lea	rdx, [rbp - 0xd0]
0x4000c3:	mov	rsi, qword ptr [rbp - 0xa0]
0x4000ca:	lea	rax, [rbp - 0xc0]
0x4000d1:	mov	rcx, rdx
0x4000d4:	mov	edx, 1
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x400644
<Block for 0x4000e1, 15 bytes>
0x4000e1:	lea	rax, [rbp - 0xc0]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x4005c6
<Block for 0x4000f0, 32 bytes>
0x4000f0:	mov	qword ptr [rbp - 0xc8], rax
0x4000f7:	lea	rdx, [rbp - 0xc8]
0x4000fe:	lea	rax, [rbp - 0xa0]
0x400105:	mov	rsi, rdx
0x400108:	mov	rdi, rax
0x40010b:	call	0x400616
<Block for 0x400110, 37 bytes>
0x400110:	lea	rdx, [rbp - 0xd0]
0x400117:	mov	rsi, qword ptr [rbp - 0xa0]
0x40011e:	lea	rax, [rbp - 0xc0]
0x400125:	mov	rcx, rdx
0x400128:	mov	edx, 1
0x40012d:	mov	rdi, rax
0x400130:	call	0x400644
<Block for 0x400135, 25 bytes>
0x400135:	lea	rdx, [rbp - 0xc0]
0x40013c:	lea	rax, [rbp - 0xa0]
0x400143:	mov	rsi, rdx
0x400146:	mov	rdi, rax
0x400149:	call	0x40070a
<Block for 0x40014e, 15 bytes>
0x40014e:	lea	rax, [rbp - 0xa0]
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40015d, 15 bytes>
0x40015d:	lea	rax, [rbp - 0xa0]
0x400164:	mov	rdi, rax
0x400167:	call	0x40057e
<Block for 0x40016c, 15 bytes>
0x40016c:	lea	rax, [rbp - 0xc0]
0x400173:	mov	rdi, rax
0x400176:	call	0x40057e
<Block for 0x40017b, 16 bytes>
0x40017b:	nop	
0x40017c:	mov	rax, qword ptr [rbp - 0x18]
0x400180:	xor	rax, qword ptr fs:[0x28]
0x400189:	je	0x4001cb
<Block for 0x4001cb, 10 bytes>
0x4001cb:	add	rsp, 0xc8
0x4001d2:	pop	rbx
0x4001d3:	pop	rbp
0x4001d4:	ret	
<Block for 0x40018b, 2 bytes>
0x40018b:	jmp	0x4001c6
<Block for 0x4001c6, 5 bytes>
0x4001c6:	call	0x500010
