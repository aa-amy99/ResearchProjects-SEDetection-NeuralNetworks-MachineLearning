<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x20
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 4 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x400079
<Block for 0x400079, 16 bytes>
0x400079:	nop	
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	xor	rax, qword ptr fs:[0x28]
0x400087:	je	0x40008e
<Block for 0x400047, 40 bytes>
0x400047:	mov	byte ptr [rbp - 0x10], 1
0x40004b:	lea	rax, [rbp - 0x10]
0x40004f:	mov	qword ptr [rbp - 0x18], rax
0x400053:	mov	rax, qword ptr [rbp - 0x18]
0x400057:	add	rax, 4
0x40005b:	mov	dword ptr [rax], 5
0x400061:	movzx	eax, byte ptr [rbp - 0x10]
0x400065:	movsx	eax, al
0x400068:	mov	edi, eax
0x40006a:	call	0x500000
<Block for 0x40008e, 2 bytes>
0x40008e:	leave	
0x40008f:	ret	
<Block for 0x400089, 5 bytes>
0x400089:	call	0x500008
<Block for 0x40006f, 10 bytes>
0x40006f:	mov	eax, dword ptr [rbp - 0xc]
0x400072:	mov	edi, eax
0x400074:	call	0x500000
