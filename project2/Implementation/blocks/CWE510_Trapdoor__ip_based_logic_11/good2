<Block for 0x40030d, 37 bytes>
0x40030d:	endbr64	
0x400311:	push	rbp
0x400312:	mov	rbp, rsp
0x400315:	sub	rsp, 0x30
0x400319:	mov	rax, qword ptr fs:[0x28]
0x400322:	mov	qword ptr [rbp - 8], rax
0x400326:	xor	eax, eax
0x400328:	mov	eax, 0
0x40032d:	call	0x500000
<Block for 0x400332, 8 bytes>
0x400332:	test	eax, eax
0x400334:	je	0x40043f
<Block for 0x40043f, 16 bytes>
0x40043f:	nop	
0x400440:	mov	rax, qword ptr [rbp - 8]
0x400444:	xor	rax, qword ptr fs:[0x28]
0x40044d:	je	0x400454
<Block for 0x40033a, 34 bytes>
0x40033a:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400341:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400348:	mov	edx, 6
0x40034d:	mov	esi, 1
0x400352:	mov	edi, 2
0x400357:	call	0x500008
<Block for 0x400454, 2 bytes>
0x400454:	leave	
0x400455:	ret	
<Block for 0x40044f, 5 bytes>
0x40044f:	call	0x500068
<Block for 0x40035c, 13 bytes>
0x40035c:	mov	dword ptr [rbp - 0x24], eax
0x40035f:	cmp	dword ptr [rbp - 0x24], -1
0x400363:	je	0x400415
<Block for 0x400415, 3 bytes>
0x400415:	nop	
0x400416:	jmp	0x40041f
<Block for 0x400369, 22 bytes>
0x400369:	lea	rax, [rbp - 0x20]
0x40036d:	mov	edx, 0x10
0x400372:	mov	esi, 0
0x400377:	mov	rdi, rax
0x40037a:	call	0x500010
<Block for 0x40041f, 6 bytes>
0x40041f:	cmp	dword ptr [rbp - 0x24], -1
0x400423:	je	0x40042f
<Block for 0x40037f, 23 bytes>
0x40037f:	mov	word ptr [rbp - 0x20], 2
0x400385:	mov	dword ptr [rbp - 0x1c], 0
0x40038c:	mov	edi, 0x4e20
0x400391:	call	0x500018
<Block for 0x40042f, 6 bytes>
0x40042f:	cmp	dword ptr [rbp - 0x28], -1
0x400433:	je	0x40043f
<Block for 0x400425, 10 bytes>
0x400425:	mov	eax, dword ptr [rbp - 0x24]
0x400428:	mov	edi, eax
0x40042a:	call	0x500060
<Block for 0x400396, 26 bytes>
0x400396:	mov	word ptr [rbp - 0x1e], ax
0x40039a:	lea	rcx, [rbp - 0x20]
0x40039e:	mov	eax, dword ptr [rbp - 0x24]
0x4003a1:	mov	edx, 0x10
0x4003a6:	mov	rsi, rcx
0x4003a9:	mov	edi, eax
0x4003ab:	call	0x500020
<Block for 0x400435, 10 bytes>
0x400435:	mov	eax, dword ptr [rbp - 0x28]
0x400438:	mov	edi, eax
0x40043a:	call	0x500060
<Block for 0x4003b0, 5 bytes>
0x4003b0:	cmp	eax, -1
0x4003b3:	je	0x400418
<Block for 0x400418, 3 bytes>
0x400418:	nop	
0x400419:	jmp	0x40041f
<Block for 0x4003b5, 15 bytes>
0x4003b5:	mov	eax, dword ptr [rbp - 0x24]
0x4003b8:	mov	esi, 5
0x4003bd:	mov	edi, eax
0x4003bf:	call	0x500028
<Block for 0x4003c4, 5 bytes>
0x4003c4:	cmp	eax, -1
0x4003c7:	je	0x40041b
<Block for 0x40041b, 3 bytes>
0x40041b:	nop	
0x40041c:	jmp	0x40041f
<Block for 0x4003c9, 20 bytes>
0x4003c9:	mov	eax, dword ptr [rbp - 0x24]
0x4003cc:	mov	edx, 0
0x4003d1:	mov	esi, 0
0x4003d6:	mov	edi, eax
0x4003d8:	call	0x500030
<Block for 0x4003dd, 9 bytes>
0x4003dd:	mov	dword ptr [rbp - 0x28], eax
0x4003e0:	cmp	dword ptr [rbp - 0x28], -1
0x4003e4:	je	0x40041e
<Block for 0x4003e6, 27 bytes>
0x4003e6:	mov	eax, dword ptr [rbp - 0x28]
0x4003e9:	mov	ecx, 0
0x4003ee:	mov	edx, 8
0x4003f3:	lea	rsi, [rip + 0x9a]
0x4003fa:	mov	edi, eax
0x4003fc:	call	0x500050
<Block for 0x40041e, 1 bytes>
0x40041e:	nop	
<Block for 0x400401, 6 bytes>
0x400401:	cmp	rax, -1
0x400405:	jne	0x40041f
<Block for 0x400407, 12 bytes>
0x400407:	lea	rdi, [rip + 0x8f]
0x40040e:	call	0x500058
<Block for 0x400413, 2 bytes>
0x400413:	jmp	0x40041f
