<Block for 0x4001b7, 37 bytes>
0x4001b7:	endbr64	
0x4001bb:	push	rbp
0x4001bc:	mov	rbp, rsp
0x4001bf:	sub	rsp, 0x30
0x4001c3:	mov	rax, qword ptr fs:[0x28]
0x4001cc:	mov	qword ptr [rbp - 8], rax
0x4001d0:	xor	eax, eax
0x4001d2:	mov	eax, 0
0x4001d7:	call	0x500070
<Block for 0x4001dc, 4 bytes>
0x4001dc:	test	eax, eax
0x4001de:	je	0x4001f1
<Block for 0x4001f1, 34 bytes>
0x4001f1:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001f8:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001ff:	mov	edx, 6
0x400204:	mov	esi, 1
0x400209:	mov	edi, 2
0x40020e:	call	0x500008
<Block for 0x4001e0, 12 bytes>
0x4001e0:	lea	rdi, [rip + 0x2c3]
0x4001e7:	call	0x500058
<Block for 0x400213, 13 bytes>
0x400213:	mov	dword ptr [rbp - 0x24], eax
0x400216:	cmp	dword ptr [rbp - 0x24], -1
0x40021a:	je	0x4002cc
<Block for 0x4001ec, 5 bytes>
0x4001ec:	jmp	0x4002f6
<Block for 0x4002cc, 3 bytes>
0x4002cc:	nop	
0x4002cd:	jmp	0x4002d6
<Block for 0x400220, 22 bytes>
0x400220:	lea	rax, [rbp - 0x20]
0x400224:	mov	edx, 0x10
0x400229:	mov	esi, 0
0x40022e:	mov	rdi, rax
0x400231:	call	0x500010
<Block for 0x4002f6, 16 bytes>
0x4002f6:	nop	
0x4002f7:	mov	rax, qword ptr [rbp - 8]
0x4002fb:	xor	rax, qword ptr fs:[0x28]
0x400304:	je	0x40030b
<Block for 0x4002d6, 6 bytes>
0x4002d6:	cmp	dword ptr [rbp - 0x24], -1
0x4002da:	je	0x4002e6
<Block for 0x400236, 23 bytes>
0x400236:	mov	word ptr [rbp - 0x20], 2
0x40023c:	mov	dword ptr [rbp - 0x1c], 0
0x400243:	mov	edi, 0x4e20
0x400248:	call	0x500018
<Block for 0x40030b, 2 bytes>
0x40030b:	leave	
0x40030c:	ret	
<Block for 0x400306, 5 bytes>
0x400306:	call	0x500068
<Block for 0x4002e6, 6 bytes>
0x4002e6:	cmp	dword ptr [rbp - 0x28], -1
0x4002ea:	je	0x4002f6
<Block for 0x4002dc, 10 bytes>
0x4002dc:	mov	eax, dword ptr [rbp - 0x24]
0x4002df:	mov	edi, eax
0x4002e1:	call	0x500060
<Block for 0x40024d, 26 bytes>
0x40024d:	mov	word ptr [rbp - 0x1e], ax
0x400251:	lea	rcx, [rbp - 0x20]
0x400255:	mov	eax, dword ptr [rbp - 0x24]
0x400258:	mov	edx, 0x10
0x40025d:	mov	rsi, rcx
0x400260:	mov	edi, eax
0x400262:	call	0x500020
<Block for 0x4002ec, 10 bytes>
0x4002ec:	mov	eax, dword ptr [rbp - 0x28]
0x4002ef:	mov	edi, eax
0x4002f1:	call	0x500060
<Block for 0x400267, 5 bytes>
0x400267:	cmp	eax, -1
0x40026a:	je	0x4002cf
<Block for 0x4002cf, 3 bytes>
0x4002cf:	nop	
0x4002d0:	jmp	0x4002d6
<Block for 0x40026c, 15 bytes>
0x40026c:	mov	eax, dword ptr [rbp - 0x24]
0x40026f:	mov	esi, 5
0x400274:	mov	edi, eax
0x400276:	call	0x500028
<Block for 0x40027b, 5 bytes>
0x40027b:	cmp	eax, -1
0x40027e:	je	0x4002d2
<Block for 0x4002d2, 3 bytes>
0x4002d2:	nop	
0x4002d3:	jmp	0x4002d6
<Block for 0x400280, 20 bytes>
0x400280:	mov	eax, dword ptr [rbp - 0x24]
0x400283:	mov	edx, 0
0x400288:	mov	esi, 0
0x40028d:	mov	edi, eax
0x40028f:	call	0x500030
<Block for 0x400294, 9 bytes>
0x400294:	mov	dword ptr [rbp - 0x28], eax
0x400297:	cmp	dword ptr [rbp - 0x28], -1
0x40029b:	je	0x4002d5
<Block for 0x40029d, 27 bytes>
0x40029d:	mov	eax, dword ptr [rbp - 0x28]
0x4002a0:	mov	ecx, 0
0x4002a5:	mov	edx, 8
0x4002aa:	lea	rsi, [rip + 0x1e3]
0x4002b1:	mov	edi, eax
0x4002b3:	call	0x500050
<Block for 0x4002d5, 1 bytes>
0x4002d5:	nop	
<Block for 0x4002b8, 6 bytes>
0x4002b8:	cmp	rax, -1
0x4002bc:	jne	0x4002d6
<Block for 0x4002be, 12 bytes>
0x4002be:	lea	rdi, [rip + 0x1d8]
0x4002c5:	call	0x500058
<Block for 0x4002ca, 2 bytes>
0x4002ca:	jmp	0x4002d6
