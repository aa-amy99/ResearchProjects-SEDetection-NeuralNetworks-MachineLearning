<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 16 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	mov	dword ptr [rbp - 0xec], 0
0x400045:	jmp	0x400060
<Block for 0x400060, 9 bytes>
0x400060:	cmp	dword ptr [rbp - 0xec], 0
0x400067:	jle	0x400047
<Block for 0x400047, 34 bytes>
0x400047:	lea	rax, [rbp - 0xe0]
0x40004e:	sub	rax, 8
0x400052:	mov	qword ptr [rbp - 0xe8], rax
0x400059:	add	dword ptr [rbp - 0xec], 1
0x400060:	cmp	dword ptr [rbp - 0xec], 0
0x400067:	jle	0x400047
<Block for 0x400069, 22 bytes>
0x400069:	lea	rax, [rbp - 0x70]
0x40006d:	mov	edx, 0x63
0x400072:	mov	esi, 0x43
0x400077:	mov	rdi, rax
0x40007a:	call	0x500000
<Block for 0x40007f, 26 bytes>
0x40007f:	mov	byte ptr [rbp - 0xd], 0
0x400083:	lea	rdx, [rbp - 0x70]
0x400087:	mov	rax, qword ptr [rbp - 0xe8]
0x40008e:	mov	rsi, rdx
0x400091:	mov	rdi, rax
0x400094:	call	0x500008
<Block for 0x400099, 15 bytes>
0x400099:	mov	rax, qword ptr [rbp - 0xe8]
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500010
<Block for 0x4000a8, 16 bytes>
0x4000a8:	nop	
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	xor	rax, qword ptr fs:[0x28]
0x4000b6:	je	0x4000bd
<Block for 0x4000bd, 2 bytes>
0x4000bd:	leave	
0x4000be:	ret	
<Block for 0x4000b8, 5 bytes>
0x4000b8:	call	0x500018
