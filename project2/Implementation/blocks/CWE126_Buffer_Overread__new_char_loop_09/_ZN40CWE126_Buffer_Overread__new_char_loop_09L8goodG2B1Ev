<Block for 0x40010c, 51 bytes>
0x40010c:	endbr64	
0x400110:	push	rbp
0x400111:	mov	rbp, rsp
0x400114:	sub	rsp, 0x90
0x40011b:	mov	rax, qword ptr fs:[0x28]
0x400124:	mov	qword ptr [rbp - 8], rax
0x400128:	xor	eax, eax
0x40012a:	mov	qword ptr [rbp - 0x88], 0
0x400135:	mov	eax, dword ptr [rip + 0xffefd]
0x40013b:	test	eax, eax
0x40013d:	je	0x40014d
<Block for 0x40014d, 10 bytes>
0x40014d:	mov	edi, 0x64
0x400152:	call	0x500008
<Block for 0x40013f, 12 bytes>
0x40013f:	lea	rdi, [rip + 0x201]
0x400146:	call	0x500020
<Block for 0x400157, 32 bytes>
0x400157:	mov	qword ptr [rbp - 0x88], rax
0x40015e:	mov	rax, qword ptr [rbp - 0x88]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x41
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x400185
<Block for 0x400177, 36 bytes>
0x400177:	mov	rax, qword ptr [rbp - 0x88]
0x40017e:	add	rax, 0x63
0x400182:	mov	byte ptr [rax], 0
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	edx, 0x63
0x40018e:	mov	esi, 0x43
0x400193:	mov	rdi, rax
0x400196:	call	0x500010
<Block for 0x400185, 22 bytes>
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	edx, 0x63
0x40018e:	mov	esi, 0x43
0x400193:	mov	rdi, rax
0x400196:	call	0x500010
<Block for 0x40019b, 16 bytes>
0x40019b:	mov	byte ptr [rbp - 0xd], 0
0x40019f:	lea	rax, [rbp - 0x70]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500018
<Block for 0x4001ab, 22 bytes>
0x4001ab:	mov	qword ptr [rbp - 0x78], rax
0x4001af:	mov	qword ptr [rbp - 0x80], 0
0x4001b7:	mov	rax, qword ptr [rbp - 0x80]
0x4001bb:	cmp	rax, qword ptr [rbp - 0x78]
0x4001bf:	jae	0x4001e6
<Block for 0x4001c1, 37 bytes>
0x4001c1:	mov	rdx, qword ptr [rbp - 0x88]
0x4001c8:	mov	rax, qword ptr [rbp - 0x80]
0x4001cc:	add	rax, rdx
0x4001cf:	movzx	eax, byte ptr [rax]
0x4001d2:	lea	rcx, [rbp - 0x70]
0x4001d6:	mov	rdx, qword ptr [rbp - 0x80]
0x4001da:	add	rdx, rcx
0x4001dd:	mov	byte ptr [rdx], al
0x4001df:	add	qword ptr [rbp - 0x80], 1
0x4001e4:	jmp	0x4001b7
<Block for 0x4001e6, 16 bytes>
0x4001e6:	mov	byte ptr [rbp - 0xd], 0
0x4001ea:	lea	rax, [rbp - 0x70]
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x500020
<Block for 0x4001b7, 10 bytes>
0x4001b7:	mov	rax, qword ptr [rbp - 0x80]
0x4001bb:	cmp	rax, qword ptr [rbp - 0x78]
0x4001bf:	jae	0x4001e6
<Block for 0x4001f6, 10 bytes>
0x4001f6:	cmp	qword ptr [rbp - 0x88], 0
0x4001fe:	je	0x40020f
<Block for 0x40020f, 16 bytes>
0x40020f:	nop	
0x400210:	mov	rax, qword ptr [rbp - 8]
0x400214:	xor	rax, qword ptr fs:[0x28]
0x40021d:	je	0x400224
<Block for 0x400200, 15 bytes>
0x400200:	mov	rax, qword ptr [rbp - 0x88]
0x400207:	mov	rdi, rax
0x40020a:	call	0x500028
<Block for 0x400224, 2 bytes>
0x400224:	leave	
0x400225:	ret	
<Block for 0x40021f, 5 bytes>
0x40021f:	call	0x500030
