<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr [rip + 0xffff5]
0x400013:	mov	qword ptr [rbp - 0x20], rax
0x400017:	mov	edi, 0x64
0x40001c:	call	0x500010
<Block for 0x400021, 11 bytes>
0x400021:	mov	qword ptr [rbp - 0x18], rax
0x400025:	cmp	qword ptr [rbp - 0x18], 0
0x40002a:	jne	0x400036
<Block for 0x40002c, 10 bytes>
0x40002c:	mov	edi, 0xffffffff
0x400031:	call	0x500018
<Block for 0x400036, 19 bytes>
0x400036:	mov	rax, qword ptr [rbp - 0x18]
0x40003a:	mov	byte ptr [rax], 0
0x40003d:	mov	rax, qword ptr [rbp - 0x18]
0x400041:	mov	rdi, rax
0x400044:	call	0x500020
<Block for 0x400049, 16 bytes>
0x400049:	mov	qword ptr [rbp - 0x10], rax
0x40004d:	lea	rdi, [rip + 0xf5]
0x400054:	call	0x500028
<Block for 0x400059, 11 bytes>
0x400059:	mov	qword ptr [rbp - 8], rax
0x40005d:	cmp	qword ptr [rbp - 8], 0
0x400062:	je	0x40008a
<Block for 0x40008a, 13 bytes>
0x40008a:	mov	rax, qword ptr [rbp - 0x18]
0x40008e:	mov	rdx, qword ptr [rbp - 0x20]
0x400092:	mov	rdi, rax
0x400095:	call	rdx
<Block for 0x400064, 38 bytes>
0x400064:	mov	eax, 0x63
0x400069:	sub	rax, qword ptr [rbp - 0x10]
0x40006d:	mov	rdx, rax
0x400070:	mov	rcx, qword ptr [rbp - 0x18]
0x400074:	mov	rax, qword ptr [rbp - 0x10]
0x400078:	add	rcx, rax
0x40007b:	mov	rax, qword ptr [rbp - 8]
0x40007f:	mov	rsi, rax
0x400082:	mov	rdi, rcx
0x400085:	call	0x500030
<Block for 0x400097, 3 bytes>
0x400097:	nop	
0x400098:	leave	
0x400099:	ret	
