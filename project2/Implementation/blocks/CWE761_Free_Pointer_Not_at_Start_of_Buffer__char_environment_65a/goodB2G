<Block for 0x40009a, 33 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x20
0x4000a6:	mov	rax, qword ptr [rip + 0xfff93]
0x4000ad:	mov	qword ptr [rbp - 0x20], rax
0x4000b1:	mov	edi, 0x64
0x4000b6:	call	0x500010
<Block for 0x4000bb, 11 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x18], rax
0x4000bf:	cmp	qword ptr [rbp - 0x18], 0
0x4000c4:	jne	0x4000d0
<Block for 0x4000c6, 10 bytes>
0x4000c6:	mov	edi, 0xffffffff
0x4000cb:	call	0x500018
<Block for 0x4000d0, 19 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x18]
0x4000d4:	mov	byte ptr [rax], 0
0x4000d7:	mov	rax, qword ptr [rbp - 0x18]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500020
<Block for 0x4000e3, 16 bytes>
0x4000e3:	mov	qword ptr [rbp - 0x10], rax
0x4000e7:	lea	rdi, [rip + 0x5b]
0x4000ee:	call	0x500028
<Block for 0x4000f3, 11 bytes>
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	cmp	qword ptr [rbp - 8], 0
0x4000fc:	je	0x400124
<Block for 0x400124, 13 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0x18]
0x400128:	mov	rdx, qword ptr [rbp - 0x20]
0x40012c:	mov	rdi, rax
0x40012f:	call	rdx
<Block for 0x4000fe, 38 bytes>
0x4000fe:	mov	eax, 0x63
0x400103:	sub	rax, qword ptr [rbp - 0x10]
0x400107:	mov	rdx, rax
0x40010a:	mov	rcx, qword ptr [rbp - 0x18]
0x40010e:	mov	rax, qword ptr [rbp - 0x10]
0x400112:	add	rcx, rax
0x400115:	mov	rax, qword ptr [rbp - 8]
0x400119:	mov	rsi, rax
0x40011c:	mov	rdi, rcx
0x40011f:	call	0x500030
<Block for 0x400131, 3 bytes>
0x400131:	nop	
0x400132:	leave	
0x400133:	ret	
