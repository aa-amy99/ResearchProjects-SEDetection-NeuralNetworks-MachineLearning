<Block for 0x400290, 81 bytes>
0x400290:	endbr64	
0x400294:	push	rbp
0x400295:	mov	rbp, rsp
0x400298:	add	rsp, -0x80
0x40029c:	mov	rax, qword ptr fs:[0x28]
0x4002a5:	mov	qword ptr [rbp - 8], rax
0x4002a9:	xor	eax, eax
0x4002ab:	mov	eax, 0x10
0x4002b0:	sub	rax, 1
0x4002b4:	add	rax, 0x6c
0x4002b8:	mov	esi, 0x10
0x4002bd:	mov	edx, 0
0x4002c2:	div	rsi
0x4002c5:	imul	rax, rax, 0x10
0x4002c9:	mov	rdx, rax
0x4002cc:	and	rdx, 0xfffffffffffff000
0x4002d3:	mov	rcx, rsp
0x4002d6:	sub	rcx, rdx
0x4002d9:	mov	rdx, rcx
0x4002dc:	cmp	rsp, rdx
0x4002df:	je	0x4002f3
<Block for 0x4002f3, 26 bytes>
0x4002f3:	mov	rdx, rax
0x4002f6:	and	edx, 0xfff
0x4002fc:	sub	rsp, rdx
0x4002ff:	mov	rdx, rax
0x400302:	and	edx, 0xfff
0x400308:	test	rdx, rdx
0x40030b:	je	0x40031d
<Block for 0x4002e1, 18 bytes>
0x4002e1:	sub	rsp, 0x1000
0x4002e8:	or	qword ptr [rsp + 0xff8], 0
0x4002f1:	jmp	0x4002dc
<Block for 0x40031d, 41 bytes>
0x40031d:	mov	rax, rsp
0x400320:	add	rax, 0xf
0x400324:	shr	rax, 4
0x400328:	shl	rax, 4
0x40032c:	mov	qword ptr [rbp - 0x78], rax
0x400330:	mov	rax, qword ptr [rbp - 0x78]
0x400334:	mov	edx, 0x63
0x400339:	mov	esi, 0x41
0x40033e:	mov	rdi, rax
0x400341:	call	0x500000
<Block for 0x40030d, 57 bytes>
0x40030d:	and	eax, 0xfff
0x400312:	sub	rax, 8
0x400316:	add	rax, rsp
0x400319:	or	qword ptr [rax], 0
0x40031d:	mov	rax, rsp
0x400320:	add	rax, 0xf
0x400324:	shr	rax, 4
0x400328:	shl	rax, 4
0x40032c:	mov	qword ptr [rbp - 0x78], rax
0x400330:	mov	rax, qword ptr [rbp - 0x78]
0x400334:	mov	edx, 0x63
0x400339:	mov	esi, 0x41
0x40033e:	mov	rdi, rax
0x400341:	call	0x500000
<Block for 0x4002dc, 5 bytes>
0x4002dc:	cmp	rsp, rdx
0x4002df:	je	0x4002f3
<Block for 0x400346, 21 bytes>
0x400346:	mov	rax, qword ptr [rbp - 0x78]
0x40034a:	add	rax, 0x63
0x40034e:	mov	byte ptr [rax], 0
0x400351:	mov	eax, 0
0x400356:	call	0x400000
<Block for 0x40035b, 4 bytes>
0x40035b:	test	eax, eax
0x40035d:	je	0x400367
<Block for 0x400367, 22 bytes>
0x400367:	lea	rax, [rbp - 0x70]
0x40036b:	mov	edx, 0x63
0x400370:	mov	esi, 0x43
0x400375:	mov	rdi, rax
0x400378:	call	0x500000
<Block for 0x40035f, 30 bytes>
0x40035f:	mov	rax, qword ptr [rbp - 0x78]
0x400363:	mov	qword ptr [rbp - 0x80], rax
0x400367:	lea	rax, [rbp - 0x70]
0x40036b:	mov	edx, 0x63
0x400370:	mov	esi, 0x43
0x400375:	mov	rdi, rax
0x400378:	call	0x500000
<Block for 0x40037d, 28 bytes>
0x40037d:	mov	byte ptr [rbp - 0xd], 0
0x400381:	mov	rcx, qword ptr [rbp - 0x80]
0x400385:	lea	rax, [rbp - 0x70]
0x400389:	mov	edx, 0x64
0x40038e:	mov	rsi, rcx
0x400391:	mov	rdi, rax
0x400394:	call	0x500008
<Block for 0x400399, 16 bytes>
0x400399:	mov	byte ptr [rbp - 0xd], 0
0x40039d:	lea	rax, [rbp - 0x70]
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500010
<Block for 0x4003a9, 16 bytes>
0x4003a9:	nop	
0x4003aa:	mov	rax, qword ptr [rbp - 8]
0x4003ae:	xor	rax, qword ptr fs:[0x28]
0x4003b7:	je	0x4003be
<Block for 0x4003be, 2 bytes>
0x4003be:	leave	
0x4003bf:	ret	
<Block for 0x4003b9, 5 bytes>
0x4003b9:	call	0x500018
