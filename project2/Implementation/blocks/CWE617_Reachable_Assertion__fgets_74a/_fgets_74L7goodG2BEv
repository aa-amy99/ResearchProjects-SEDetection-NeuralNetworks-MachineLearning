<Block for 0x400192, 43 bytes>
0x400192:	endbr64	
0x400196:	push	rbp
0x400197:	mov	rbp, rsp
0x40019a:	push	rbx
0x40019b:	sub	rsp, 0x88
0x4001a2:	mov	rax, qword ptr fs:[0x28]
0x4001ab:	mov	qword ptr [rbp - 0x18], rax
0x4001af:	xor	eax, eax
0x4001b1:	lea	rax, [rbp - 0x80]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x400412
<Block for 0x4001bd, 46 bytes>
0x4001bd:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x4001c7:	mov	dword ptr [rbp - 0x84], 6
0x4001d1:	mov	dword ptr [rbp - 0x50], 0
0x4001d8:	lea	rdx, [rbp - 0x50]
0x4001dc:	lea	rax, [rbp - 0x80]
0x4001e0:	mov	rsi, rdx
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x4005ca
<Block for 0x4001eb, 34 bytes>
0x4001eb:	mov	edx, dword ptr [rbp - 0x84]
0x4001f1:	mov	dword ptr [rax], edx
0x4001f3:	mov	dword ptr [rbp - 0x50], 1
0x4001fa:	lea	rdx, [rbp - 0x50]
0x4001fe:	lea	rax, [rbp - 0x80]
0x400202:	mov	rsi, rdx
0x400205:	mov	rdi, rax
0x400208:	call	0x4005ca
<Block for 0x40020d, 34 bytes>
0x40020d:	mov	edx, dword ptr [rbp - 0x84]
0x400213:	mov	dword ptr [rax], edx
0x400215:	mov	dword ptr [rbp - 0x50], 2
0x40021c:	lea	rdx, [rbp - 0x50]
0x400220:	lea	rax, [rbp - 0x80]
0x400224:	mov	rsi, rdx
0x400227:	mov	rdi, rax
0x40022a:	call	0x4005ca
<Block for 0x40022f, 27 bytes>
0x40022f:	mov	edx, dword ptr [rbp - 0x84]
0x400235:	mov	dword ptr [rax], edx
0x400237:	lea	rdx, [rbp - 0x80]
0x40023b:	lea	rax, [rbp - 0x50]
0x40023f:	mov	rsi, rdx
0x400242:	mov	rdi, rax
0x400245:	call	0x400452
<Block for 0x40024a, 12 bytes>
0x40024a:	lea	rax, [rbp - 0x50]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500038
<Block for 0x400256, 12 bytes>
0x400256:	lea	rax, [rbp - 0x50]
0x40025a:	mov	rdi, rax
0x40025d:	call	0x400432
<Block for 0x400262, 12 bytes>
0x400262:	lea	rax, [rbp - 0x80]
0x400266:	mov	rdi, rax
0x400269:	call	0x400432
<Block for 0x40026e, 16 bytes>
0x40026e:	nop	
0x40026f:	mov	rax, qword ptr [rbp - 0x18]
0x400273:	xor	rax, qword ptr fs:[0x28]
0x40027c:	je	0x4002b8
<Block for 0x4002b8, 10 bytes>
0x4002b8:	add	rsp, 0x88
0x4002bf:	pop	rbx
0x4002c0:	pop	rbp
0x4002c1:	ret	
<Block for 0x40027e, 2 bytes>
0x40027e:	jmp	0x4002b3
<Block for 0x4002b3, 5 bytes>
0x4002b3:	call	0x500030
