<Block for 0x4001f6, 104 bytes>
0x4001f6:	endbr64	
0x4001fa:	push	rbp
0x4001fb:	mov	rbp, rsp
0x4001fe:	sub	rsp, 0x60
0x400202:	mov	rax, qword ptr fs:[0x28]
0x40020b:	mov	qword ptr [rbp - 8], rax
0x40020f:	xor	eax, eax
0x400211:	lea	rax, [rbp - 0x60]
0x400215:	mov	qword ptr [rbp - 0x50], rax
0x400219:	lea	rax, [rbp - 0x60]
0x40021d:	mov	qword ptr [rbp - 0x48], rax
0x400221:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x400228:	mov	rax, qword ptr [rbp - 0x50]
0x40022c:	mov	eax, dword ptr [rax]
0x40022e:	mov	dword ptr [rbp - 0x5c], eax
0x400231:	mov	qword ptr [rbp - 0x16], 0
0x400239:	mov	dword ptr [rbp - 0xe], 0
0x400240:	mov	word ptr [rbp - 0xa], 0
0x400246:	mov	rdx, qword ptr [rip + 0xffdb3]
0x40024d:	lea	rax, [rbp - 0x16]
0x400251:	mov	esi, 0xe
0x400256:	mov	rdi, rax
0x400259:	call	0x500008
<Block for 0x40025e, 5 bytes>
0x40025e:	test	rax, rax
0x400261:	je	0x400274
<Block for 0x400274, 12 bytes>
0x400274:	lea	rdi, [rip + 0xc5]
0x40027b:	call	0x500018
<Block for 0x400263, 12 bytes>
0x400263:	lea	rax, [rbp - 0x16]
0x400267:	mov	rdi, rax
0x40026a:	call	0x500010
<Block for 0x400280, 64 bytes>
0x400280:	mov	rax, qword ptr [rbp - 0x50]
0x400284:	mov	edx, dword ptr [rbp - 0x5c]
0x400287:	mov	dword ptr [rax], edx
0x400289:	mov	rax, qword ptr [rbp - 0x48]
0x40028d:	mov	eax, dword ptr [rax]
0x40028f:	mov	dword ptr [rbp - 0x54], eax
0x400292:	mov	qword ptr [rbp - 0x40], 0
0x40029a:	mov	qword ptr [rbp - 0x38], 0
0x4002a2:	mov	qword ptr [rbp - 0x30], 0
0x4002aa:	mov	qword ptr [rbp - 0x28], 0
0x4002b2:	mov	qword ptr [rbp - 0x20], 0
0x4002ba:	cmp	dword ptr [rbp - 0x54], 0
0x4002be:	js	0x4002f8
<Block for 0x40026f, 5 bytes>
0x40026f:	mov	dword ptr [rbp - 0x5c], eax
0x400272:	jmp	0x400280
<Block for 0x4002f8, 12 bytes>
0x4002f8:	lea	rdi, [rip + 0x71]
0x4002ff:	call	0x500018
<Block for 0x4002c0, 6 bytes>
0x4002c0:	cmp	dword ptr [rbp - 0x54], 9
0x4002c4:	jg	0x4002f8
<Block for 0x400304, 16 bytes>
0x400304:	nop	
0x400305:	mov	rax, qword ptr [rbp - 8]
0x400309:	xor	rax, qword ptr fs:[0x28]
0x400312:	je	0x400319
<Block for 0x4002c6, 22 bytes>
0x4002c6:	mov	eax, dword ptr [rbp - 0x54]
0x4002c9:	cdqe	
0x4002cb:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002d3:	mov	dword ptr [rbp - 0x58], 0
0x4002da:	jmp	0x4002f0
<Block for 0x400319, 2 bytes>
0x400319:	leave	
0x40031a:	ret	
<Block for 0x400314, 5 bytes>
0x400314:	call	0x500028
<Block for 0x4002f0, 6 bytes>
0x4002f0:	cmp	dword ptr [rbp - 0x58], 9
0x4002f4:	jle	0x4002dc
<Block for 0x4002dc, 16 bytes>
0x4002dc:	mov	eax, dword ptr [rbp - 0x58]
0x4002df:	cdqe	
0x4002e1:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002e5:	mov	edi, eax
0x4002e7:	call	0x500020
<Block for 0x4002f6, 2 bytes>
0x4002f6:	jmp	0x400304
<Block for 0x4002ec, 10 bytes>
0x4002ec:	add	dword ptr [rbp - 0x58], 1
0x4002f0:	cmp	dword ptr [rbp - 0x58], 9
0x4002f4:	jle	0x4002dc
