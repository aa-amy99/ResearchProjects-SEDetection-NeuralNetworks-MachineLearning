<Block for 0x40001e, 55 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x150
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	lea	rax, [rbp - 0x140]
0x400043:	mov	edx, 0x63
0x400048:	mov	esi, 0x41
0x40004d:	mov	rdi, rax
0x400050:	call	0x500000
<Block for 0x400055, 17 bytes>
0x400055:	mov	byte ptr [rbp - 0xdd], 0
0x40005c:	mov	eax, 0
0x400061:	call	0x400000
<Block for 0x400066, 4 bytes>
0x400066:	test	eax, eax
0x400068:	je	0x40007c
<Block for 0x40007c, 25 bytes>
0x40007c:	lea	rax, [rbp - 0xd0]
0x400083:	mov	edx, 0xc7
0x400088:	mov	esi, 0x43
0x40008d:	mov	rdi, rax
0x400090:	call	0x500000
<Block for 0x40006a, 43 bytes>
0x40006a:	lea	rax, [rbp - 0x140]
0x400071:	sub	rax, 8
0x400075:	mov	qword ptr [rbp - 0x148], rax
0x40007c:	lea	rax, [rbp - 0xd0]
0x400083:	mov	edx, 0xc7
0x400088:	mov	esi, 0x43
0x40008d:	mov	rdi, rax
0x400090:	call	0x500000
<Block for 0x400095, 29 bytes>
0x400095:	mov	byte ptr [rbp - 9], 0
0x400099:	mov	rdx, qword ptr [rbp - 0x148]
0x4000a0:	lea	rax, [rbp - 0xd0]
0x4000a7:	mov	rsi, rdx
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500008
<Block for 0x4000b2, 15 bytes>
0x4000b2:	lea	rax, [rbp - 0xd0]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500010
<Block for 0x4000c1, 16 bytes>
0x4000c1:	nop	
0x4000c2:	mov	rax, qword ptr [rbp - 8]
0x4000c6:	xor	rax, qword ptr fs:[0x28]
0x4000cf:	je	0x4000d6
<Block for 0x4000d6, 2 bytes>
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000d1, 5 bytes>
0x4000d1:	call	0x500018
