<Block for 0x40019c, 55 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	sub	rsp, 0x150
0x4001ab:	mov	rax, qword ptr fs:[0x28]
0x4001b4:	mov	qword ptr [rbp - 8], rax
0x4001b8:	xor	eax, eax
0x4001ba:	lea	rax, [rbp - 0x140]
0x4001c1:	mov	edx, 0x63
0x4001c6:	mov	esi, 0x41
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x500000
<Block for 0x4001d3, 17 bytes>
0x4001d3:	mov	byte ptr [rbp - 0xdd], 0
0x4001da:	mov	eax, 0
0x4001df:	call	0x400000
<Block for 0x4001e4, 4 bytes>
0x4001e4:	test	eax, eax
0x4001e6:	je	0x4001f6
<Block for 0x4001f6, 25 bytes>
0x4001f6:	lea	rax, [rbp - 0xd0]
0x4001fd:	mov	edx, 0xc7
0x400202:	mov	esi, 0x43
0x400207:	mov	rdi, rax
0x40020a:	call	0x500000
<Block for 0x4001e8, 39 bytes>
0x4001e8:	lea	rax, [rbp - 0x140]
0x4001ef:	mov	qword ptr [rbp - 0x148], rax
0x4001f6:	lea	rax, [rbp - 0xd0]
0x4001fd:	mov	edx, 0xc7
0x400202:	mov	esi, 0x43
0x400207:	mov	rdi, rax
0x40020a:	call	0x500000
<Block for 0x40020f, 29 bytes>
0x40020f:	mov	byte ptr [rbp - 9], 0
0x400213:	mov	rdx, qword ptr [rbp - 0x148]
0x40021a:	lea	rax, [rbp - 0xd0]
0x400221:	mov	rsi, rdx
0x400224:	mov	rdi, rax
0x400227:	call	0x500008
<Block for 0x40022c, 15 bytes>
0x40022c:	lea	rax, [rbp - 0xd0]
0x400233:	mov	rdi, rax
0x400236:	call	0x500010
<Block for 0x40023b, 16 bytes>
0x40023b:	nop	
0x40023c:	mov	rax, qword ptr [rbp - 8]
0x400240:	xor	rax, qword ptr fs:[0x28]
0x400249:	je	0x400250
<Block for 0x400250, 2 bytes>
0x400250:	leave	
0x400251:	ret	
<Block for 0x40024b, 5 bytes>
0x40024b:	call	0x500018
