<Block for 0x4000d8, 55 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	sub	rsp, 0x150
0x4000e7:	mov	rax, qword ptr fs:[0x28]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	xor	eax, eax
0x4000f6:	lea	rax, [rbp - 0x140]
0x4000fd:	mov	edx, 0x63
0x400102:	mov	esi, 0x41
0x400107:	mov	rdi, rax
0x40010a:	call	0x500000
<Block for 0x40010f, 17 bytes>
0x40010f:	mov	byte ptr [rbp - 0xdd], 0
0x400116:	mov	eax, 0
0x40011b:	call	0x40000f
<Block for 0x400120, 4 bytes>
0x400120:	test	eax, eax
0x400122:	je	0x400132
<Block for 0x400132, 39 bytes>
0x400132:	lea	rax, [rbp - 0x140]
0x400139:	mov	qword ptr [rbp - 0x148], rax
0x400140:	lea	rax, [rbp - 0xd0]
0x400147:	mov	edx, 0xc7
0x40014c:	mov	esi, 0x43
0x400151:	mov	rdi, rax
0x400154:	call	0x500000
<Block for 0x400124, 12 bytes>
0x400124:	lea	rdi, [rip + 0x146]
0x40012b:	call	0x500010
<Block for 0x400159, 29 bytes>
0x400159:	mov	byte ptr [rbp - 9], 0
0x40015d:	mov	rdx, qword ptr [rbp - 0x148]
0x400164:	lea	rax, [rbp - 0xd0]
0x40016b:	mov	rsi, rdx
0x40016e:	mov	rdi, rax
0x400171:	call	0x500008
<Block for 0x400130, 2 bytes>
0x400130:	jmp	0x400140
<Block for 0x400176, 15 bytes>
0x400176:	lea	rax, [rbp - 0xd0]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500010
<Block for 0x400140, 25 bytes>
0x400140:	lea	rax, [rbp - 0xd0]
0x400147:	mov	edx, 0xc7
0x40014c:	mov	esi, 0x43
0x400151:	mov	rdi, rax
0x400154:	call	0x500000
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500018
