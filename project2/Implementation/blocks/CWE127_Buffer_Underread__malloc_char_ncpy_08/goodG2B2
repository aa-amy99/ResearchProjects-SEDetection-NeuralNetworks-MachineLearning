<Block for 0x4001e8, 45 bytes>
0x4001e8:	endbr64	
0x4001ec:	push	rbp
0x4001ed:	mov	rbp, rsp
0x4001f0:	add	rsp, -0x80
0x4001f4:	mov	rax, qword ptr fs:[0x28]
0x4001fd:	mov	qword ptr [rbp - 8], rax
0x400201:	xor	eax, eax
0x400203:	mov	qword ptr [rbp - 0x80], 0
0x40020b:	mov	eax, 0
0x400210:	call	0x400000
<Block for 0x400215, 4 bytes>
0x400215:	test	eax, eax
0x400217:	je	0x400261
<Block for 0x400261, 22 bytes>
0x400261:	lea	rax, [rbp - 0x70]
0x400265:	mov	edx, 0x63
0x40026a:	mov	esi, 0x43
0x40026f:	mov	rdi, rax
0x400272:	call	0x500010
<Block for 0x400219, 10 bytes>
0x400219:	mov	edi, 0x64
0x40021e:	call	0x500000
<Block for 0x400277, 16 bytes>
0x400277:	mov	byte ptr [rbp - 0xd], 0
0x40027b:	lea	rax, [rbp - 0x70]
0x40027f:	mov	rdi, rax
0x400282:	call	0x500018
<Block for 0x400223, 11 bytes>
0x400223:	mov	qword ptr [rbp - 0x78], rax
0x400227:	cmp	qword ptr [rbp - 0x78], 0
0x40022c:	jne	0x400238
<Block for 0x400287, 22 bytes>
0x400287:	mov	rdx, rax
0x40028a:	mov	rcx, qword ptr [rbp - 0x80]
0x40028e:	lea	rax, [rbp - 0x70]
0x400292:	mov	rsi, rcx
0x400295:	mov	rdi, rax
0x400298:	call	0x500020
<Block for 0x40022e, 10 bytes>
0x40022e:	mov	edi, 0xffffffff
0x400233:	call	0x500008
<Block for 0x400238, 22 bytes>
0x400238:	mov	rax, qword ptr [rbp - 0x78]
0x40023c:	mov	edx, 0x63
0x400241:	mov	esi, 0x41
0x400246:	mov	rdi, rax
0x400249:	call	0x500010
<Block for 0x40029d, 16 bytes>
0x40029d:	mov	byte ptr [rbp - 0xd], 0
0x4002a1:	lea	rax, [rbp - 0x70]
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500028
<Block for 0x40024e, 41 bytes>
0x40024e:	mov	rax, qword ptr [rbp - 0x78]
0x400252:	add	rax, 0x63
0x400256:	mov	byte ptr [rax], 0
0x400259:	mov	rax, qword ptr [rbp - 0x78]
0x40025d:	mov	qword ptr [rbp - 0x80], rax
0x400261:	lea	rax, [rbp - 0x70]
0x400265:	mov	edx, 0x63
0x40026a:	mov	esi, 0x43
0x40026f:	mov	rdi, rax
0x400272:	call	0x500010
<Block for 0x4002ad, 16 bytes>
0x4002ad:	nop	
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	xor	rax, qword ptr fs:[0x28]
0x4002bb:	je	0x4002c2
<Block for 0x4002c2, 2 bytes>
0x4002c2:	leave	
0x4002c3:	ret	
<Block for 0x4002bd, 5 bytes>
0x4002bd:	call	0x500030
