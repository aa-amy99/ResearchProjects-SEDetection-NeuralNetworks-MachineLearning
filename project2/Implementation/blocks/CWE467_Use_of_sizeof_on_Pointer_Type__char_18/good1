<Block for 0x40005f, 35 bytes>
0x40005f:	endbr64	
0x400063:	push	rbp
0x400064:	mov	rbp, rsp
0x400067:	sub	rsp, 0x10
0x40006b:	nop	
0x40006c:	endbr64	
0x400070:	mov	qword ptr [rbp - 8], 0
0x400078:	mov	edi, 1
0x40007d:	call	0x500000
<Block for 0x400082, 11 bytes>
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	cmp	qword ptr [rbp - 8], 0
0x40008b:	jne	0x400097
<Block for 0x40008d, 10 bytes>
0x40008d:	mov	edi, 0xffffffff
0x400092:	call	0x500008
<Block for 0x400097, 24 bytes>
0x400097:	mov	rax, qword ptr [rbp - 8]
0x40009b:	mov	byte ptr [rax], 0x47
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	movzx	eax, byte ptr [rax]
0x4000a5:	movsx	eax, al
0x4000a8:	mov	edi, eax
0x4000aa:	call	0x500010
<Block for 0x4000af, 12 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500018
<Block for 0x4000bb, 3 bytes>
0x4000bb:	nop	
0x4000bc:	leave	
0x4000bd:	ret	
