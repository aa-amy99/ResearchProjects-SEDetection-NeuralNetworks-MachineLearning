<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0
0x400023:	call	0x500000
<Block for 0x400028, 4 bytes>
0x400028:	test	eax, eax
0x40002a:	je	0x400095
<Block for 0x400095, 25 bytes>
0x400095:	lea	rax, [rbp - 0xa0]
0x40009c:	mov	edx, 0x95
0x4000a1:	mov	esi, 0x41
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500008
<Block for 0x40002c, 25 bytes>
0x40002c:	lea	rax, [rbp - 0xa0]
0x400033:	mov	edx, 0x95
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x4000ae, 16 bytes>
0x4000ae:	mov	byte ptr [rbp - 0xb], 0
0x4000b2:	mov	dword ptr [rbp - 0x114], 0
0x4000bc:	jmp	0x4000e4
<Block for 0x400045, 16 bytes>
0x400045:	mov	byte ptr [rbp - 0xb], 0
0x400049:	mov	dword ptr [rbp - 0x118], 0
0x400053:	jmp	0x40007b
<Block for 0x4000e4, 9 bytes>
0x4000e4:	cmp	dword ptr [rbp - 0x114], 0x62
0x4000eb:	jle	0x4000be
<Block for 0x40007b, 9 bytes>
0x40007b:	cmp	dword ptr [rbp - 0x118], 0x62
0x400082:	jle	0x400055
<Block for 0x4000be, 47 bytes>
0x4000be:	mov	eax, dword ptr [rbp - 0x114]
0x4000c4:	cdqe	
0x4000c6:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x4000ce:	mov	eax, dword ptr [rbp - 0x114]
0x4000d4:	cdqe	
0x4000d6:	mov	byte ptr [rbp + rax - 0x110], dl
0x4000dd:	add	dword ptr [rbp - 0x114], 1
0x4000e4:	cmp	dword ptr [rbp - 0x114], 0x62
0x4000eb:	jle	0x4000be
<Block for 0x4000ed, 22 bytes>
0x4000ed:	mov	byte ptr [rbp - 0xad], 0
0x4000f4:	lea	rax, [rbp - 0x110]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500010
<Block for 0x400055, 47 bytes>
0x400055:	mov	eax, dword ptr [rbp - 0x118]
0x40005b:	cdqe	
0x40005d:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400065:	mov	eax, dword ptr [rbp - 0x118]
0x40006b:	cdqe	
0x40006d:	mov	byte ptr [rbp + rax - 0x110], dl
0x400074:	add	dword ptr [rbp - 0x118], 1
0x40007b:	cmp	dword ptr [rbp - 0x118], 0x62
0x400082:	jle	0x400055
<Block for 0x400084, 15 bytes>
0x400084:	lea	rax, [rbp - 0x110]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500010
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x400093, 2 bytes>
0x400093:	jmp	0x400103
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500018
