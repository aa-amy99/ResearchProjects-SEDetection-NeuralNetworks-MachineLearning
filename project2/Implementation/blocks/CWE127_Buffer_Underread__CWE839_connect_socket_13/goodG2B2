<Block for 0x40051d, 45 bytes>
0x40051d:	endbr64	
0x400521:	push	rbp
0x400522:	mov	rbp, rsp
0x400525:	sub	rsp, 0x40
0x400529:	mov	rax, qword ptr fs:[0x28]
0x400532:	mov	qword ptr [rbp - 8], rax
0x400536:	xor	eax, eax
0x400538:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40053f:	mov	eax, dword ptr [rip + 0xffabb]
0x400545:	cmp	eax, 5
0x400548:	jne	0x400551
<Block for 0x40054a, 18 bytes>
0x40054a:	mov	dword ptr [rbp - 0x34], 7
0x400551:	mov	eax, dword ptr [rip + 0xffaa9]
0x400557:	cmp	eax, 5
0x40055a:	jne	0x4005a8
<Block for 0x400551, 11 bytes>
0x400551:	mov	eax, dword ptr [rip + 0xffaa9]
0x400557:	cmp	eax, 5
0x40055a:	jne	0x4005a8
<Block for 0x40055c, 46 bytes>
0x40055c:	mov	qword ptr [rbp - 0x30], 0
0x400564:	mov	qword ptr [rbp - 0x28], 0
0x40056c:	mov	qword ptr [rbp - 0x20], 0
0x400574:	mov	qword ptr [rbp - 0x18], 0
0x40057c:	mov	qword ptr [rbp - 0x10], 0
0x400584:	cmp	dword ptr [rbp - 0x34], 9
0x400588:	jg	0x40059c
<Block for 0x4005a8, 16 bytes>
0x4005a8:	nop	
0x4005a9:	mov	rax, qword ptr [rbp - 8]
0x4005ad:	xor	rax, qword ptr fs:[0x28]
0x4005b6:	je	0x4005bd
<Block for 0x40058a, 16 bytes>
0x40058a:	mov	eax, dword ptr [rbp - 0x34]
0x40058d:	cdqe	
0x40058f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400593:	mov	edi, eax
0x400595:	call	0x500048
<Block for 0x40059c, 12 bytes>
0x40059c:	lea	rdi, [rip + 0x65]
0x4005a3:	call	0x500050
<Block for 0x4005bd, 2 bytes>
0x4005bd:	leave	
0x4005be:	ret	
<Block for 0x4005b8, 5 bytes>
0x4005b8:	call	0x500058
<Block for 0x40059a, 2 bytes>
0x40059a:	jmp	0x4005a8
