<Block for 0x400000, 62 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	movabs	rax, 0x5858585858586e66
0x40002a:	mov	qword ptr [rbp - 0x11], rax
0x40002e:	mov	byte ptr [rbp - 9], 0
0x400032:	lea	rax, [rbp - 0x11]
0x400036:	mov	rdi, rax
0x400039:	call	0x500000
<Block for 0x40003e, 11 bytes>
0x40003e:	mov	qword ptr [rbp - 0x20], rax
0x400042:	cmp	qword ptr [rbp - 0x20], 0
0x400047:	jne	0x400053
<Block for 0x400049, 10 bytes>
0x400049:	mov	edi, 1
0x40004e:	call	0x500008
<Block for 0x400053, 12 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0x20]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500010
<Block for 0x40005f, 27 bytes>
0x40005f:	mov	rax, qword ptr [rbp - 0x20]
0x400063:	mov	edx, 0x180
0x400068:	mov	esi, 0x42
0x40006d:	mov	rdi, rax
0x400070:	mov	eax, 0
0x400075:	call	0x500018
<Block for 0x40007a, 9 bytes>
0x40007a:	mov	dword ptr [rbp - 0x24], eax
0x40007d:	cmp	dword ptr [rbp - 0x24], -1
0x400081:	je	0x400099
<Block for 0x400099, 16 bytes>
0x400099:	nop	
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	xor	rax, qword ptr fs:[0x28]
0x4000a7:	je	0x4000ae
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0xc6]
0x40008a:	call	0x500010
<Block for 0x4000ae, 2 bytes>
0x4000ae:	leave	
0x4000af:	ret	
<Block for 0x4000a9, 5 bytes>
0x4000a9:	call	0x500028
<Block for 0x40008f, 10 bytes>
0x40008f:	mov	eax, dword ptr [rbp - 0x24]
0x400092:	mov	edi, eax
0x400094:	call	0x500020
