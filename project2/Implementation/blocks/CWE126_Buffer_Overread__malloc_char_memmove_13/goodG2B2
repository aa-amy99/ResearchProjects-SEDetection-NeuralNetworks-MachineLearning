<Block for 0x4001c8, 46 bytes>
0x4001c8:	endbr64	
0x4001cc:	push	rbp
0x4001cd:	mov	rbp, rsp
0x4001d0:	add	rsp, -0x80
0x4001d4:	mov	rax, qword ptr fs:[0x28]
0x4001dd:	mov	qword ptr [rbp - 8], rax
0x4001e1:	xor	eax, eax
0x4001e3:	mov	qword ptr [rbp - 0x78], 0
0x4001eb:	mov	eax, dword ptr [rip + 0xffe0f]
0x4001f1:	cmp	eax, 5
0x4001f4:	jne	0x400236
<Block for 0x4001f6, 10 bytes>
0x4001f6:	mov	edi, 0x64
0x4001fb:	call	0x500008
<Block for 0x400236, 22 bytes>
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	edx, 0x63
0x40023f:	mov	esi, 0x43
0x400244:	mov	rdi, rax
0x400247:	call	0x500018
<Block for 0x400200, 11 bytes>
0x400200:	mov	qword ptr [rbp - 0x78], rax
0x400204:	cmp	qword ptr [rbp - 0x78], 0
0x400209:	jne	0x400215
<Block for 0x40024c, 16 bytes>
0x40024c:	mov	byte ptr [rbp - 0xd], 0
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	rdi, rax
0x400257:	call	0x500020
<Block for 0x40020b, 10 bytes>
0x40020b:	mov	edi, 0xffffffff
0x400210:	call	0x500010
<Block for 0x400215, 22 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x78]
0x400219:	mov	edx, 0x63
0x40021e:	mov	esi, 0x41
0x400223:	mov	rdi, rax
0x400226:	call	0x500018
<Block for 0x40025c, 22 bytes>
0x40025c:	mov	rdx, rax
0x40025f:	mov	rcx, qword ptr [rbp - 0x78]
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	mov	rsi, rcx
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500028
<Block for 0x40022b, 33 bytes>
0x40022b:	mov	rax, qword ptr [rbp - 0x78]
0x40022f:	add	rax, 0x63
0x400233:	mov	byte ptr [rax], 0
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	edx, 0x63
0x40023f:	mov	esi, 0x43
0x400244:	mov	rdi, rax
0x400247:	call	0x500018
<Block for 0x400272, 16 bytes>
0x400272:	mov	byte ptr [rbp - 0xd], 0
0x400276:	lea	rax, [rbp - 0x70]
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500030
<Block for 0x400282, 12 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0x78]
0x400286:	mov	rdi, rax
0x400289:	call	0x500038
<Block for 0x40028e, 16 bytes>
0x40028e:	nop	
0x40028f:	mov	rax, qword ptr [rbp - 8]
0x400293:	xor	rax, qword ptr fs:[0x28]
0x40029c:	je	0x4002a3
<Block for 0x4002a3, 2 bytes>
0x4002a3:	leave	
0x4002a4:	ret	
<Block for 0x40029e, 5 bytes>
0x40029e:	call	0x500040
