<Block for 0x400222, 26 bytes>
0x400222:	endbr64	
0x400226:	push	rbp
0x400227:	mov	rbp, rsp
0x40022a:	sub	rsp, 0x20
0x40022e:	mov	qword ptr [rbp - 0x18], rdi
0x400232:	mov	eax, dword ptr [rip + 0x11c]
0x400238:	test	eax, eax
0x40023a:	je	0x400284
<Block for 0x400284, 6 bytes>
0x400284:	mov	rax, qword ptr [rbp - 0x18]
0x400288:	leave	
0x400289:	ret	
<Block for 0x40023c, 10 bytes>
0x40023c:	mov	edi, 0x64
0x400241:	call	0x500000
<Block for 0x400246, 11 bytes>
0x400246:	mov	qword ptr [rbp - 8], rax
0x40024a:	cmp	qword ptr [rbp - 8], 0
0x40024f:	jne	0x40025b
<Block for 0x400251, 10 bytes>
0x400251:	mov	edi, 0xffffffff
0x400256:	call	0x500008
<Block for 0x40025b, 22 bytes>
0x40025b:	mov	rax, qword ptr [rbp - 8]
0x40025f:	mov	edx, 0x63
0x400264:	mov	esi, 0x41
0x400269:	mov	rdi, rax
0x40026c:	call	0x500010
<Block for 0x400271, 25 bytes>
0x400271:	mov	rax, qword ptr [rbp - 8]
0x400275:	add	rax, 0x63
0x400279:	mov	byte ptr [rax], 0
0x40027c:	mov	rax, qword ptr [rbp - 8]
0x400280:	mov	qword ptr [rbp - 0x18], rax
0x400284:	mov	rax, qword ptr [rbp - 0x18]
0x400288:	leave	
0x400289:	ret	
