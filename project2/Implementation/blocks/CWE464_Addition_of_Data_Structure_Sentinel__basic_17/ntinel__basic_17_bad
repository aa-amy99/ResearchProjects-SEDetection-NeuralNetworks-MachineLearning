<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0x11], 0x20
0x40001f:	mov	dword ptr [rbp - 0x10], 0
0x400026:	jmp	0x400051
<Block for 0x400051, 6 bytes>
0x400051:	cmp	dword ptr [rbp - 0x10], 0
0x400055:	jle	0x400028
<Block for 0x400028, 15 bytes>
0x400028:	mov	rax, qword ptr [rip + 0xfffd1]
0x40002f:	mov	rdi, rax
0x400032:	call	0x500008
<Block for 0x400057, 31 bytes>
0x400057:	mov	byte ptr [rbp - 0xc], 0x78
0x40005b:	movzx	eax, byte ptr [rbp - 0x11]
0x40005f:	mov	byte ptr [rbp - 0xb], al
0x400062:	mov	byte ptr [rbp - 0xa], 0x7a
0x400066:	mov	byte ptr [rbp - 9], 0
0x40006a:	lea	rax, [rbp - 0xc]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500018
<Block for 0x400037, 19 bytes>
0x400037:	mov	byte ptr [rbp - 0xc], al
0x40003a:	mov	byte ptr [rbp - 0xb], 0
0x40003e:	lea	rax, [rbp - 0xc]
0x400042:	mov	rdi, rax
0x400045:	call	0x500010
<Block for 0x400076, 16 bytes>
0x400076:	nop	
0x400077:	mov	rax, qword ptr [rbp - 8]
0x40007b:	xor	rax, qword ptr fs:[0x28]
0x400084:	je	0x40008b
<Block for 0x40004a, 13 bytes>
0x40004a:	mov	byte ptr [rbp - 0x11], al
0x40004d:	add	dword ptr [rbp - 0x10], 1
0x400051:	cmp	dword ptr [rbp - 0x10], 0
0x400055:	jle	0x400028
<Block for 0x40008b, 2 bytes>
0x40008b:	leave	
0x40008c:	ret	
<Block for 0x400086, 5 bytes>
0x400086:	call	0x500020
