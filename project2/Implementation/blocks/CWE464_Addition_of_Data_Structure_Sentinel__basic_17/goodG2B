<Block for 0x40008d, 40 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x20
0x400099:	mov	rax, qword ptr fs:[0x28]
0x4000a2:	mov	qword ptr [rbp - 8], rax
0x4000a6:	xor	eax, eax
0x4000a8:	mov	byte ptr [rbp - 0x11], 0x20
0x4000ac:	mov	dword ptr [rbp - 0x10], 0
0x4000b3:	jmp	0x4000bd
<Block for 0x4000bd, 6 bytes>
0x4000bd:	cmp	dword ptr [rbp - 0x10], 0
0x4000c1:	jle	0x4000b5
<Block for 0x4000b5, 14 bytes>
0x4000b5:	mov	byte ptr [rbp - 0x11], 0x61
0x4000b9:	add	dword ptr [rbp - 0x10], 1
0x4000bd:	cmp	dword ptr [rbp - 0x10], 0
0x4000c1:	jle	0x4000b5
<Block for 0x4000c3, 31 bytes>
0x4000c3:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c7:	movzx	eax, byte ptr [rbp - 0x11]
0x4000cb:	mov	byte ptr [rbp - 0xb], al
0x4000ce:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d2:	mov	byte ptr [rbp - 9], 0
0x4000d6:	lea	rax, [rbp - 0xc]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500018
<Block for 0x4000e2, 16 bytes>
0x4000e2:	nop	
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	xor	rax, qword ptr fs:[0x28]
0x4000f0:	je	0x4000f7
<Block for 0x4000f7, 2 bytes>
0x4000f7:	leave	
0x4000f8:	ret	
<Block for 0x4000f2, 5 bytes>
0x4000f2:	call	0x500020
