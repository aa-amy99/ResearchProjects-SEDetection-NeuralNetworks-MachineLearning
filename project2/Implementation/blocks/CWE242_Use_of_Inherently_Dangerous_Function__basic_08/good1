<Block for 0x4000a2, 37 bytes>
0x4000a2:	endbr64	
0x4000a6:	push	rbp
0x4000a7:	mov	rbp, rsp
0x4000aa:	sub	rsp, 0x20
0x4000ae:	mov	rax, qword ptr fs:[0x28]
0x4000b7:	mov	qword ptr [rbp - 8], rax
0x4000bb:	xor	eax, eax
0x4000bd:	mov	eax, 0
0x4000c2:	call	0x40000f
<Block for 0x4000c7, 4 bytes>
0x4000c7:	test	eax, eax
0x4000c9:	je	0x4000d9
<Block for 0x4000d9, 24 bytes>
0x4000d9:	mov	rdx, qword ptr [rip + 0xfff40]
0x4000e0:	lea	rax, [rbp - 0x12]
0x4000e4:	mov	esi, 0xa
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500028
<Block for 0x4000cb, 12 bytes>
0x4000cb:	lea	rdi, [rip + 0x153]
0x4000d2:	call	0x500008
<Block for 0x4000f1, 11 bytes>
0x4000f1:	mov	qword ptr [rbp - 0x20], rax
0x4000f5:	cmp	qword ptr [rbp - 0x20], 0
0x4000fa:	jne	0x400112
<Block for 0x4000d7, 2 bytes>
0x4000d7:	jmp	0x400122
<Block for 0x4000fc, 12 bytes>
0x4000fc:	lea	rdi, [rip + 0xe5]
0x400103:	call	0x500008
<Block for 0x400112, 16 bytes>
0x400112:	mov	byte ptr [rbp - 9], 0
0x400116:	lea	rax, [rbp - 0x12]
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500008
<Block for 0x400122, 16 bytes>
0x400122:	nop	
0x400123:	mov	rax, qword ptr [rbp - 8]
0x400127:	xor	rax, qword ptr fs:[0x28]
0x400130:	je	0x400137
<Block for 0x400108, 10 bytes>
0x400108:	mov	edi, 1
0x40010d:	call	0x500010
<Block for 0x400137, 2 bytes>
0x400137:	leave	
0x400138:	ret	
<Block for 0x400132, 5 bytes>
0x400132:	call	0x500018
