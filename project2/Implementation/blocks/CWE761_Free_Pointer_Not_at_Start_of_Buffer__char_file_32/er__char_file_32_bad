<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x40]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x40]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 13 bytes>
0x400035:	mov	qword ptr [rbp - 0x40], rax
0x400039:	mov	rax, qword ptr [rbp - 0x40]
0x40003d:	test	rax, rax
0x400040:	jne	0x40004c
<Block for 0x400042, 10 bytes>
0x400042:	mov	edi, 0xffffffff
0x400047:	call	0x500008
<Block for 0x40004c, 30 bytes>
0x40004c:	mov	rax, qword ptr [rbp - 0x40]
0x400050:	mov	byte ptr [rax], 0
0x400053:	mov	rax, qword ptr [rbp - 0x30]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	mov	qword ptr [rbp - 0x20], rax
0x40005e:	mov	rax, qword ptr [rbp - 0x20]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40006a, 19 bytes>
0x40006a:	mov	qword ptr [rbp - 0x18], rax
0x40006e:	mov	eax, 0x64
0x400073:	sub	rax, qword ptr [rbp - 0x18]
0x400077:	cmp	rax, 1
0x40007b:	jbe	0x4000f0
<Block for 0x4000f0, 24 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x30]
0x4000f4:	mov	rdx, qword ptr [rbp - 0x20]
0x4000f8:	mov	qword ptr [rax], rdx
0x4000fb:	mov	rax, qword ptr [rbp - 0x28]
0x4000ff:	mov	rax, qword ptr [rax]
0x400102:	mov	qword ptr [rbp - 0x38], rax
0x400106:	jmp	0x400126
<Block for 0x40007d, 19 bytes>
0x40007d:	lea	rsi, [rip + 0x24f]
0x400084:	lea	rdi, [rip + 0x24a]
0x40008b:	call	0x500018
<Block for 0x400126, 11 bytes>
0x400126:	mov	rax, qword ptr [rbp - 0x38]
0x40012a:	movzx	eax, byte ptr [rax]
0x40012d:	test	al, al
0x40012f:	jne	0x400108
<Block for 0x400090, 11 bytes>
0x400090:	mov	qword ptr [rbp - 0x10], rax
0x400094:	cmp	qword ptr [rbp - 0x10], 0
0x400099:	je	0x4000f0
<Block for 0x400131, 12 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x38]
0x400135:	mov	rdi, rax
0x400138:	call	0x500038
<Block for 0x400108, 11 bytes>
0x400108:	mov	rax, qword ptr [rbp - 0x38]
0x40010c:	movzx	eax, byte ptr [rax]
0x40010f:	cmp	al, 0x53
0x400111:	jne	0x400121
<Block for 0x40009b, 42 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x18]
0x40009f:	mov	edx, 0x64
0x4000a4:	sub	edx, eax
0x4000a6:	mov	eax, edx
0x4000a8:	mov	esi, eax
0x4000aa:	mov	rdx, qword ptr [rbp - 0x20]
0x4000ae:	mov	rax, qword ptr [rbp - 0x18]
0x4000b2:	lea	rcx, [rdx + rax]
0x4000b6:	mov	rax, qword ptr [rbp - 0x10]
0x4000ba:	mov	rdx, rax
0x4000bd:	mov	rdi, rcx
0x4000c0:	call	0x500020
<Block for 0x40013d, 16 bytes>
0x40013d:	nop	
0x40013e:	mov	rax, qword ptr [rbp - 8]
0x400142:	xor	rax, qword ptr fs:[0x28]
0x40014b:	je	0x400152
<Block for 0x400113, 12 bytes>
0x400113:	lea	rdi, [rip + 0x1d8]
0x40011a:	call	0x500028
<Block for 0x400121, 16 bytes>
0x400121:	add	qword ptr [rbp - 0x38], 1
0x400126:	mov	rax, qword ptr [rbp - 0x38]
0x40012a:	movzx	eax, byte ptr [rax]
0x40012d:	test	al, al
0x40012f:	jne	0x400108
<Block for 0x4000c5, 5 bytes>
0x4000c5:	test	rax, rax
0x4000c8:	jne	0x4000e4
<Block for 0x400152, 2 bytes>
0x400152:	leave	
0x400153:	ret	
<Block for 0x40014d, 5 bytes>
0x40014d:	call	0x500040
<Block for 0x40011f, 2 bytes>
0x40011f:	jmp	0x400131
<Block for 0x4000ca, 12 bytes>
0x4000ca:	lea	rdi, [rip + 0x212]
0x4000d1:	call	0x500028
<Block for 0x4000e4, 12 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x10]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500030
<Block for 0x4000d6, 26 bytes>
0x4000d6:	mov	rdx, qword ptr [rbp - 0x20]
0x4000da:	mov	rax, qword ptr [rbp - 0x18]
0x4000de:	add	rax, rdx
0x4000e1:	mov	byte ptr [rax], 0
0x4000e4:	mov	rax, qword ptr [rbp - 0x10]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500030
