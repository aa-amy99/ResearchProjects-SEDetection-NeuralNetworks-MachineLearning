<Block for 0x400154, 53 bytes>
0x400154:	endbr64	
0x400158:	push	rbp
0x400159:	mov	rbp, rsp
0x40015c:	sub	rsp, 0x50
0x400160:	mov	rax, qword ptr fs:[0x28]
0x400169:	mov	qword ptr [rbp - 8], rax
0x40016d:	xor	eax, eax
0x40016f:	lea	rax, [rbp - 0x48]
0x400173:	mov	qword ptr [rbp - 0x38], rax
0x400177:	lea	rax, [rbp - 0x48]
0x40017b:	mov	qword ptr [rbp - 0x30], rax
0x40017f:	mov	edi, 0x64
0x400184:	call	0x500000
<Block for 0x400189, 13 bytes>
0x400189:	mov	qword ptr [rbp - 0x48], rax
0x40018d:	mov	rax, qword ptr [rbp - 0x48]
0x400191:	test	rax, rax
0x400194:	jne	0x4001a0
<Block for 0x400196, 10 bytes>
0x400196:	mov	edi, 0xffffffff
0x40019b:	call	0x500008
<Block for 0x4001a0, 30 bytes>
0x4001a0:	mov	rax, qword ptr [rbp - 0x48]
0x4001a4:	mov	byte ptr [rax], 0
0x4001a7:	mov	rax, qword ptr [rbp - 0x38]
0x4001ab:	mov	rax, qword ptr [rax]
0x4001ae:	mov	qword ptr [rbp - 0x28], rax
0x4001b2:	mov	rax, qword ptr [rbp - 0x28]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x500010
<Block for 0x4001be, 19 bytes>
0x4001be:	mov	qword ptr [rbp - 0x20], rax
0x4001c2:	mov	eax, 0x64
0x4001c7:	sub	rax, qword ptr [rbp - 0x20]
0x4001cb:	cmp	rax, 1
0x4001cf:	jbe	0x400244
<Block for 0x400244, 32 bytes>
0x400244:	mov	rax, qword ptr [rbp - 0x38]
0x400248:	mov	rdx, qword ptr [rbp - 0x28]
0x40024c:	mov	qword ptr [rax], rdx
0x40024f:	mov	rax, qword ptr [rbp - 0x30]
0x400253:	mov	rax, qword ptr [rax]
0x400256:	mov	qword ptr [rbp - 0x10], rax
0x40025a:	mov	qword ptr [rbp - 0x40], 0
0x400262:	jmp	0x400289
<Block for 0x4001d1, 19 bytes>
0x4001d1:	lea	rsi, [rip + 0xfb]
0x4001d8:	lea	rdi, [rip + 0xf6]
0x4001df:	call	0x500018
<Block for 0x400289, 12 bytes>
0x400289:	mov	rax, qword ptr [rbp - 0x10]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500010
<Block for 0x4001e4, 11 bytes>
0x4001e4:	mov	qword ptr [rbp - 0x18], rax
0x4001e8:	cmp	qword ptr [rbp - 0x18], 0
0x4001ed:	je	0x400244
<Block for 0x400295, 6 bytes>
0x400295:	cmp	qword ptr [rbp - 0x40], rax
0x400299:	jb	0x400264
<Block for 0x4001ef, 42 bytes>
0x4001ef:	mov	rax, qword ptr [rbp - 0x20]
0x4001f3:	mov	edx, 0x64
0x4001f8:	sub	edx, eax
0x4001fa:	mov	eax, edx
0x4001fc:	mov	esi, eax
0x4001fe:	mov	rdx, qword ptr [rbp - 0x28]
0x400202:	mov	rax, qword ptr [rbp - 0x20]
0x400206:	lea	rcx, [rdx + rax]
0x40020a:	mov	rax, qword ptr [rbp - 0x18]
0x40020e:	mov	rdx, rax
0x400211:	mov	rdi, rcx
0x400214:	call	0x500020
<Block for 0x400264, 18 bytes>
0x400264:	mov	rdx, qword ptr [rbp - 0x10]
0x400268:	mov	rax, qword ptr [rbp - 0x40]
0x40026c:	add	rax, rdx
0x40026f:	movzx	eax, byte ptr [rax]
0x400272:	cmp	al, 0x53
0x400274:	jne	0x400284
<Block for 0x40029b, 12 bytes>
0x40029b:	mov	rax, qword ptr [rbp - 0x10]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500038
<Block for 0x400219, 5 bytes>
0x400219:	test	rax, rax
0x40021c:	jne	0x400238
<Block for 0x400276, 12 bytes>
0x400276:	lea	rdi, [rip + 0x75]
0x40027d:	call	0x500028
<Block for 0x400284, 17 bytes>
0x400284:	add	qword ptr [rbp - 0x40], 1
0x400289:	mov	rax, qword ptr [rbp - 0x10]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500010
<Block for 0x4002a7, 16 bytes>
0x4002a7:	nop	
0x4002a8:	mov	rax, qword ptr [rbp - 8]
0x4002ac:	xor	rax, qword ptr fs:[0x28]
0x4002b5:	je	0x4002bc
<Block for 0x40021e, 12 bytes>
0x40021e:	lea	rdi, [rip + 0xbe]
0x400225:	call	0x500028
<Block for 0x400238, 12 bytes>
0x400238:	mov	rax, qword ptr [rbp - 0x18]
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500030
<Block for 0x400282, 2 bytes>
0x400282:	jmp	0x40029b
<Block for 0x4002bc, 2 bytes>
0x4002bc:	leave	
0x4002bd:	ret	
<Block for 0x4002b7, 5 bytes>
0x4002b7:	call	0x500040
<Block for 0x40022a, 26 bytes>
0x40022a:	mov	rdx, qword ptr [rbp - 0x28]
0x40022e:	mov	rax, qword ptr [rbp - 0x20]
0x400232:	add	rax, rdx
0x400235:	mov	byte ptr [rax], 0
0x400238:	mov	rax, qword ptr [rbp - 0x18]
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500030
