<Block for 0x400108, 22 bytes>
0x400108:	endbr64	
0x40010c:	push	rbp
0x40010d:	mov	rbp, rsp
0x400110:	push	r13
0x400112:	push	r12
0x400114:	push	rbx
0x400115:	sub	rsp, 0x18
0x400119:	call	0x500000
<Block for 0x40011e, 12 bytes>
0x40011e:	and	eax, 1
0x400121:	test	eax, eax
0x400123:	sete	al
0x400126:	test	al, al
0x400128:	je	0x40015f
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500000
<Block for 0x40012a, 10 bytes>
0x40012a:	mov	edi, 0x10
0x40012f:	call	0x500008
<Block for 0x400164, 12 bytes>
0x400164:	and	eax, 1
0x400167:	test	eax, eax
0x400169:	sete	al
0x40016c:	test	al, al
0x40016e:	je	0x4001a5
<Block for 0x400134, 18 bytes>
0x400134:	mov	rbx, rax
0x400137:	lea	rsi, [rip + 0x2c3]
0x40013e:	mov	rdi, rbx
0x400141:	call	0x500010
<Block for 0x4001a5, 12 bytes>
0x4001a5:	lea	rdi, [rip + 0x25f]
0x4001ac:	call	0x500058
<Block for 0x400170, 10 bytes>
0x400170:	mov	edi, 0x10
0x400175:	call	0x500008
<Block for 0x400146, 25 bytes>
0x400146:	mov	rax, qword ptr [rip + 0xffed3]
0x40014d:	mov	rdx, rax
0x400150:	lea	rsi, [rip + 0xffed1]
0x400157:	mov	rdi, rbx
0x40015a:	call	0x500030
<Block for 0x4001b1, 5 bytes>
0x4001b1:	jmp	0x40026e
<Block for 0x40017a, 18 bytes>
0x40017a:	mov	rbx, rax
0x40017d:	lea	rsi, [rip + 0x282]
0x400184:	mov	rdi, rbx
0x400187:	call	0x500038
<Block for 0x40026e, 11 bytes>
0x40026e:	add	rsp, 0x18
0x400272:	pop	rbx
0x400273:	pop	r12
0x400275:	pop	r13
0x400277:	pop	rbp
0x400278:	ret	
<Block for 0x40018c, 25 bytes>
0x40018c:	mov	rax, qword ptr [rip + 0xffeb5]
0x400193:	mov	rdx, rax
0x400196:	lea	rsi, [rip + 0xffeb3]
0x40019d:	mov	rdi, rbx
0x4001a0:	call	0x500030
