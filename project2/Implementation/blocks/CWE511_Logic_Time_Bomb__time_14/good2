<Block for 0x4000d0, 38 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x10
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	eax, dword ptr [rip + 0xfff0f]
0x4000f1:	cmp	eax, 5
0x4000f4:	jne	0x40011a
<Block for 0x4000f6, 12 bytes>
0x4000f6:	lea	rax, [rbp - 0x10]
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500008
<Block for 0x40011a, 16 bytes>
0x40011a:	nop	
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	xor	rax, qword ptr fs:[0x28]
0x400128:	je	0x40012f
<Block for 0x400102, 12 bytes>
0x400102:	mov	rax, qword ptr [rbp - 0x10]
0x400106:	cmp	rax, 0x4779c8d0
0x40010c:	jle	0x40011a
<Block for 0x40012f, 2 bytes>
0x40012f:	leave	
0x400130:	ret	
<Block for 0x40012a, 5 bytes>
0x40012a:	call	0x500018
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0x63]
0x400115:	call	0x500020
