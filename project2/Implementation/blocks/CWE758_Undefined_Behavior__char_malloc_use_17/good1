<Block for 0x400063, 21 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	mov	dword ptr [rbp - 0xc], 0
0x400076:	jmp	0x4000ca
<Block for 0x4000ca, 6 bytes>
0x4000ca:	cmp	dword ptr [rbp - 0xc], 0
0x4000ce:	jle	0x400078
<Block for 0x400078, 10 bytes>
0x400078:	mov	edi, 1
0x40007d:	call	0x500000
<Block for 0x4000d0, 4 bytes>
0x4000d0:	nop	
0x4000d1:	nop	
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x400082, 11 bytes>
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	cmp	qword ptr [rbp - 8], 0
0x40008b:	jne	0x400097
<Block for 0x40008d, 10 bytes>
0x40008d:	mov	edi, 0xffffffff
0x400092:	call	0x500008
<Block for 0x400097, 35 bytes>
0x400097:	mov	byte ptr [rbp - 0xe], 5
0x40009b:	mov	rax, qword ptr [rbp - 8]
0x40009f:	movzx	edx, byte ptr [rbp - 0xe]
0x4000a3:	mov	byte ptr [rax], dl
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	movzx	eax, byte ptr [rax]
0x4000ac:	mov	byte ptr [rbp - 0xd], al
0x4000af:	movsx	eax, byte ptr [rbp - 0xd]
0x4000b3:	mov	edi, eax
0x4000b5:	call	0x500018
<Block for 0x4000ba, 12 bytes>
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500010
<Block for 0x4000c6, 10 bytes>
0x4000c6:	add	dword ptr [rbp - 0xc], 1
0x4000ca:	cmp	dword ptr [rbp - 0xc], 0
0x4000ce:	jle	0x400078
