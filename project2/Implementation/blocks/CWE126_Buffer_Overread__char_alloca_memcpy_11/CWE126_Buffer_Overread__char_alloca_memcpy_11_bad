<Block for 0x400000, 84 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0x10
0x400023:	sub	rax, 1
0x400027:	add	rax, 0x3a
0x40002b:	mov	ecx, 0x10
0x400030:	mov	edx, 0
0x400035:	div	rcx
0x400038:	imul	rax, rax, 0x10
0x40003c:	mov	rdx, rax
0x40003f:	and	rdx, 0xfffffffffffff000
0x400046:	mov	rcx, rsp
0x400049:	sub	rcx, rdx
0x40004c:	mov	rdx, rcx
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x400066, 26 bytes>
0x400066:	mov	rdx, rax
0x400069:	and	edx, 0xfff
0x40006f:	sub	rsp, rdx
0x400072:	mov	rdx, rax
0x400075:	and	edx, 0xfff
0x40007b:	test	rdx, rdx
0x40007e:	je	0x400090
<Block for 0x400054, 18 bytes>
0x400054:	sub	rsp, 0x1000
0x40005b:	or	qword ptr [rsp + 0xff8], 0
0x400064:	jmp	0x40004f
<Block for 0x400090, 73 bytes>
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x80], rax
0x4000a3:	mov	eax, 0x10
0x4000a8:	sub	rax, 1
0x4000ac:	add	rax, 0x6c
0x4000b0:	mov	edi, 0x10
0x4000b5:	mov	edx, 0
0x4000ba:	div	rdi
0x4000bd:	imul	rax, rax, 0x10
0x4000c1:	mov	rdx, rax
0x4000c4:	and	rdx, 0xfffffffffffff000
0x4000cb:	mov	rsi, rsp
0x4000ce:	sub	rsi, rdx
0x4000d1:	mov	rdx, rsi
0x4000d4:	cmp	rsp, rdx
0x4000d7:	je	0x4000eb
<Block for 0x400080, 89 bytes>
0x400080:	and	eax, 0xfff
0x400085:	sub	rax, 8
0x400089:	add	rax, rsp
0x40008c:	or	qword ptr [rax], 0
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x80], rax
0x4000a3:	mov	eax, 0x10
0x4000a8:	sub	rax, 1
0x4000ac:	add	rax, 0x6c
0x4000b0:	mov	edi, 0x10
0x4000b5:	mov	edx, 0
0x4000ba:	div	rdi
0x4000bd:	imul	rax, rax, 0x10
0x4000c1:	mov	rdx, rax
0x4000c4:	and	rdx, 0xfffffffffffff000
0x4000cb:	mov	rsi, rsp
0x4000ce:	sub	rsi, rdx
0x4000d1:	mov	rdx, rsi
0x4000d4:	cmp	rsp, rdx
0x4000d7:	je	0x4000eb
<Block for 0x40004f, 5 bytes>
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x4000eb, 26 bytes>
0x4000eb:	mov	rdx, rax
0x4000ee:	and	edx, 0xfff
0x4000f4:	sub	rsp, rdx
0x4000f7:	mov	rdx, rax
0x4000fa:	and	edx, 0xfff
0x400100:	test	rdx, rdx
0x400103:	je	0x400115
<Block for 0x4000d9, 18 bytes>
0x4000d9:	sub	rsp, 0x1000
0x4000e0:	or	qword ptr [rsp + 0xff8], 0
0x4000e9:	jmp	0x4000d4
<Block for 0x400115, 41 bytes>
0x400115:	mov	rax, rsp
0x400118:	add	rax, 0xf
0x40011c:	shr	rax, 4
0x400120:	shl	rax, 4
0x400124:	mov	qword ptr [rbp - 0x78], rax
0x400128:	mov	rax, qword ptr [rbp - 0x80]
0x40012c:	mov	edx, 0x31
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x400105, 57 bytes>
0x400105:	and	eax, 0xfff
0x40010a:	sub	rax, 8
0x40010e:	add	rax, rsp
0x400111:	or	qword ptr [rax], 0
0x400115:	mov	rax, rsp
0x400118:	add	rax, 0xf
0x40011c:	shr	rax, 4
0x400120:	shl	rax, 4
0x400124:	mov	qword ptr [rbp - 0x78], rax
0x400128:	mov	rax, qword ptr [rbp - 0x80]
0x40012c:	mov	edx, 0x31
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x4000d4, 5 bytes>
0x4000d4:	cmp	rsp, rdx
0x4000d7:	je	0x4000eb
<Block for 0x40013e, 33 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x80]
0x400142:	add	rax, 0x31
0x400146:	mov	byte ptr [rax], 0
0x400149:	mov	rax, qword ptr [rbp - 0x78]
0x40014d:	mov	edx, 0x63
0x400152:	mov	esi, 0x41
0x400157:	mov	rdi, rax
0x40015a:	call	0x500000
<Block for 0x40015f, 21 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 0x78]
0x400163:	add	rax, 0x63
0x400167:	mov	byte ptr [rax], 0
0x40016a:	mov	eax, 0
0x40016f:	call	0x500008
<Block for 0x400174, 4 bytes>
0x400174:	test	eax, eax
0x400176:	je	0x400183
<Block for 0x400183, 22 bytes>
0x400183:	lea	rax, [rbp - 0x70]
0x400187:	mov	edx, 0x63
0x40018c:	mov	esi, 0x43
0x400191:	mov	rdi, rax
0x400194:	call	0x500000
<Block for 0x400178, 33 bytes>
0x400178:	mov	rax, qword ptr [rbp - 0x80]
0x40017c:	mov	qword ptr [rbp - 0x88], rax
0x400183:	lea	rax, [rbp - 0x70]
0x400187:	mov	edx, 0x63
0x40018c:	mov	esi, 0x43
0x400191:	mov	rdi, rax
0x400194:	call	0x500000
<Block for 0x400199, 16 bytes>
0x400199:	mov	byte ptr [rbp - 0xd], 0
0x40019d:	lea	rax, [rbp - 0x70]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500010
<Block for 0x4001a9, 25 bytes>
0x4001a9:	mov	rdx, rax
0x4001ac:	mov	rcx, qword ptr [rbp - 0x88]
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rsi, rcx
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500018
<Block for 0x4001c2, 16 bytes>
0x4001c2:	mov	byte ptr [rbp - 0xd], 0
0x4001c6:	lea	rax, [rbp - 0x70]
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x500020
<Block for 0x4001d2, 16 bytes>
0x4001d2:	nop	
0x4001d3:	mov	rax, qword ptr [rbp - 8]
0x4001d7:	xor	rax, qword ptr fs:[0x28]
0x4001e0:	je	0x4001e7
<Block for 0x4001e7, 2 bytes>
0x4001e7:	leave	
0x4001e8:	ret	
<Block for 0x4001e2, 5 bytes>
0x4001e2:	call	0x500028
