<Block for 0x40005a, 23 bytes>
0x40005a:	endbr64	
0x40005e:	push	rbp
0x40005f:	mov	rbp, rsp
0x400062:	sub	rsp, 0x20
0x400066:	mov	eax, dword ptr [rip + 0x118]
0x40006c:	cmp	eax, 5
0x40006f:	je	0x40007f
<Block for 0x40007f, 10 bytes>
0x40007f:	mov	edi, 8
0x400084:	call	0x500000
<Block for 0x400071, 12 bytes>
0x400071:	lea	rdi, [rip + 0x110]
0x400078:	call	0x500018
<Block for 0x400089, 30 bytes>
0x400089:	mov	qword ptr [rbp - 0x18], rax
0x40008d:	mov	rax, qword ptr [rbp - 0x18]
0x400091:	movsd	xmm0, qword ptr [rip + 0x107]
0x400099:	movsd	qword ptr [rax], xmm0
0x40009d:	mov	edi, 8
0x4000a2:	call	0x500000
<Block for 0x40007d, 2 bytes>
0x40007d:	jmp	0x4000e8
<Block for 0x4000a7, 43 bytes>
0x4000a7:	mov	qword ptr [rbp - 0x10], rax
0x4000ab:	mov	rax, qword ptr [rbp - 0x10]
0x4000af:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b3:	mov	qword ptr [rax], rdx
0x4000b6:	mov	rax, qword ptr [rbp - 0x10]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 8], rax
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	mov	rax, qword ptr [rax]
0x4000c8:	movq	xmm0, rax
0x4000cd:	call	0x500010
<Block for 0x4000e8, 3 bytes>
0x4000e8:	nop	
0x4000e9:	leave	
0x4000ea:	ret	
<Block for 0x4000d2, 9 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x10]
0x4000d6:	test	rax, rax
0x4000d9:	je	0x4000e8
<Block for 0x4000db, 13 bytes>
0x4000db:	mov	esi, 8
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500008
