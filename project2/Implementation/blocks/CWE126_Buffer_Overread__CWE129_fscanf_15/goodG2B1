<Block for 0x400205, 88 bytes>
0x400205:	endbr64	
0x400209:	push	rbp
0x40020a:	mov	rbp, rsp
0x40020d:	sub	rsp, 0x40
0x400211:	mov	rax, qword ptr fs:[0x28]
0x40021a:	mov	qword ptr [rbp - 8], rax
0x40021e:	xor	eax, eax
0x400220:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400227:	mov	dword ptr [rbp - 0x34], 7
0x40022e:	nop	
0x40022f:	mov	qword ptr [rbp - 0x30], 0
0x400237:	mov	qword ptr [rbp - 0x28], 0
0x40023f:	mov	qword ptr [rbp - 0x20], 0
0x400247:	mov	qword ptr [rbp - 0x18], 0
0x40024f:	mov	qword ptr [rbp - 0x10], 0
0x400257:	cmp	dword ptr [rbp - 0x34], 0
0x40025b:	js	0x40026f
<Block for 0x40026f, 12 bytes>
0x40026f:	lea	rdi, [rip + 0xea]
0x400276:	call	0x500018
<Block for 0x40025d, 16 bytes>
0x40025d:	mov	eax, dword ptr [rbp - 0x34]
0x400260:	cdqe	
0x400262:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400266:	mov	edi, eax
0x400268:	call	0x500010
<Block for 0x40027b, 17 bytes>
0x40027b:	nop	
0x40027c:	nop	
0x40027d:	mov	rax, qword ptr [rbp - 8]
0x400281:	xor	rax, qword ptr fs:[0x28]
0x40028a:	je	0x400291
<Block for 0x40026d, 2 bytes>
0x40026d:	jmp	0x40027b
<Block for 0x400291, 2 bytes>
0x400291:	leave	
0x400292:	ret	
<Block for 0x40028c, 5 bytes>
0x40028c:	call	0x500020
