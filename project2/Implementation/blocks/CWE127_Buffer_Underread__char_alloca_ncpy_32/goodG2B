<Block for 0x400185, 112 bytes>
0x400185:	endbr64	
0x400189:	push	rbp
0x40018a:	mov	rbp, rsp
0x40018d:	sub	rsp, 0xa0
0x400194:	mov	rax, qword ptr fs:[0x28]
0x40019d:	mov	qword ptr [rbp - 8], rax
0x4001a1:	xor	eax, eax
0x4001a3:	lea	rax, [rbp - 0xa0]
0x4001aa:	mov	qword ptr [rbp - 0x98], rax
0x4001b1:	lea	rax, [rbp - 0xa0]
0x4001b8:	mov	qword ptr [rbp - 0x90], rax
0x4001bf:	mov	eax, 0x10
0x4001c4:	sub	rax, 1
0x4001c8:	add	rax, 0x6c
0x4001cc:	mov	esi, 0x10
0x4001d1:	mov	edx, 0
0x4001d6:	div	rsi
0x4001d9:	imul	rax, rax, 0x10
0x4001dd:	mov	rdx, rax
0x4001e0:	and	rdx, 0xfffffffffffff000
0x4001e7:	mov	rcx, rsp
0x4001ea:	sub	rcx, rdx
0x4001ed:	mov	rdx, rcx
0x4001f0:	cmp	rsp, rdx
0x4001f3:	je	0x400207
<Block for 0x400207, 26 bytes>
0x400207:	mov	rdx, rax
0x40020a:	and	edx, 0xfff
0x400210:	sub	rsp, rdx
0x400213:	mov	rdx, rax
0x400216:	and	edx, 0xfff
0x40021c:	test	rdx, rdx
0x40021f:	je	0x400231
<Block for 0x4001f5, 18 bytes>
0x4001f5:	sub	rsp, 0x1000
0x4001fc:	or	qword ptr [rsp + 0xff8], 0
0x400205:	jmp	0x4001f0
<Block for 0x400231, 47 bytes>
0x400231:	mov	rax, rsp
0x400234:	add	rax, 0xf
0x400238:	shr	rax, 4
0x40023c:	shl	rax, 4
0x400240:	mov	qword ptr [rbp - 0x88], rax
0x400247:	mov	rax, qword ptr [rbp - 0x88]
0x40024e:	mov	edx, 0x63
0x400253:	mov	esi, 0x41
0x400258:	mov	rdi, rax
0x40025b:	call	0x500000
<Block for 0x400221, 63 bytes>
0x400221:	and	eax, 0xfff
0x400226:	sub	rax, 8
0x40022a:	add	rax, rsp
0x40022d:	or	qword ptr [rax], 0
0x400231:	mov	rax, rsp
0x400234:	add	rax, 0xf
0x400238:	shr	rax, 4
0x40023c:	shl	rax, 4
0x400240:	mov	qword ptr [rbp - 0x88], rax
0x400247:	mov	rax, qword ptr [rbp - 0x88]
0x40024e:	mov	edx, 0x63
0x400253:	mov	esi, 0x41
0x400258:	mov	rdi, rax
0x40025b:	call	0x500000
<Block for 0x4001f0, 5 bytes>
0x4001f0:	cmp	rsp, rdx
0x4001f3:	je	0x400207
<Block for 0x400260, 89 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x88]
0x400267:	add	rax, 0x63
0x40026b:	mov	byte ptr [rax], 0
0x40026e:	mov	rax, qword ptr [rbp - 0x98]
0x400275:	mov	rax, qword ptr [rax]
0x400278:	mov	qword ptr [rbp - 0x80], rax
0x40027c:	mov	rax, qword ptr [rbp - 0x88]
0x400283:	mov	qword ptr [rbp - 0x80], rax
0x400287:	mov	rax, qword ptr [rbp - 0x98]
0x40028e:	mov	rdx, qword ptr [rbp - 0x80]
0x400292:	mov	qword ptr [rax], rdx
0x400295:	mov	rax, qword ptr [rbp - 0x90]
0x40029c:	mov	rax, qword ptr [rax]
0x40029f:	mov	qword ptr [rbp - 0x78], rax
0x4002a3:	lea	rax, [rbp - 0x70]
0x4002a7:	mov	edx, 0x63
0x4002ac:	mov	esi, 0x43
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500000
<Block for 0x4002b9, 16 bytes>
0x4002b9:	mov	byte ptr [rbp - 0xd], 0
0x4002bd:	lea	rax, [rbp - 0x70]
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x500008
<Block for 0x4002c9, 22 bytes>
0x4002c9:	mov	rdx, rax
0x4002cc:	mov	rcx, qword ptr [rbp - 0x78]
0x4002d0:	lea	rax, [rbp - 0x70]
0x4002d4:	mov	rsi, rcx
0x4002d7:	mov	rdi, rax
0x4002da:	call	0x500010
<Block for 0x4002df, 16 bytes>
0x4002df:	mov	byte ptr [rbp - 0xd], 0
0x4002e3:	lea	rax, [rbp - 0x70]
0x4002e7:	mov	rdi, rax
0x4002ea:	call	0x500018
<Block for 0x4002ef, 16 bytes>
0x4002ef:	nop	
0x4002f0:	mov	rax, qword ptr [rbp - 8]
0x4002f4:	xor	rax, qword ptr fs:[0x28]
0x4002fd:	je	0x400304
<Block for 0x400304, 2 bytes>
0x400304:	leave	
0x400305:	ret	
<Block for 0x4002ff, 5 bytes>
0x4002ff:	call	0x500020
