<Block for 0x40008d, 22 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	edi, 0x64
0x40009e:	call	0x500000
<Block for 0x4000a3, 11 bytes>
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	cmp	qword ptr [rbp - 8], 0
0x4000ac:	jne	0x4000b8
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 0xffffffff
0x4000b3:	call	0x500008
<Block for 0x4000b8, 50 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	mov	byte ptr [rax], 0
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	movabs	rcx, 0x7453206465786946
0x4000cd:	mov	qword ptr [rax], rcx
0x4000d0:	mov	dword ptr [rax + 8], 0x676e6972
0x4000d7:	mov	byte ptr [rax + 0xc], 0
0x4000db:	nop	
0x4000dc:	endbr64	
0x4000e0:	mov	qword ptr [rbp - 0x10], 0
0x4000e8:	jmp	0x40010f
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500020
<Block for 0x40011b, 6 bytes>
0x40011b:	cmp	qword ptr [rbp - 0x10], rax
0x40011f:	jb	0x4000ea
<Block for 0x4000ea, 18 bytes>
0x4000ea:	mov	rdx, qword ptr [rbp - 8]
0x4000ee:	mov	rax, qword ptr [rbp - 0x10]
0x4000f2:	add	rax, rdx
0x4000f5:	movzx	eax, byte ptr [rax]
0x4000f8:	cmp	al, 0x53
0x4000fa:	jne	0x40010a
<Block for 0x400121, 12 bytes>
0x400121:	mov	rax, qword ptr [rbp - 8]
0x400125:	mov	rdi, rax
0x400128:	call	0x500018
<Block for 0x4000fc, 12 bytes>
0x4000fc:	lea	rdi, [rip + 0x42]
0x400103:	call	0x500010
<Block for 0x40010a, 17 bytes>
0x40010a:	add	qword ptr [rbp - 0x10], 1
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500020
<Block for 0x40012d, 3 bytes>
0x40012d:	nop	
0x40012e:	leave	
0x40012f:	ret	
<Block for 0x400108, 2 bytes>
0x400108:	jmp	0x400121
