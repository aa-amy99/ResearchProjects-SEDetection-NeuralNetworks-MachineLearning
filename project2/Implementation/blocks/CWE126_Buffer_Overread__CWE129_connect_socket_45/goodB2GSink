<Block for 0x40025c, 82 bytes>
0x40025c:	endbr64	
0x400260:	push	rbp
0x400261:	mov	rbp, rsp
0x400264:	sub	rsp, 0x40
0x400268:	mov	rax, qword ptr fs:[0x28]
0x400271:	mov	qword ptr [rbp - 8], rax
0x400275:	xor	eax, eax
0x400277:	mov	eax, dword ptr [rip + 0x1b3]
0x40027d:	mov	dword ptr [rbp - 0x34], eax
0x400280:	mov	qword ptr [rbp - 0x30], 0
0x400288:	mov	qword ptr [rbp - 0x28], 0
0x400290:	mov	qword ptr [rbp - 0x20], 0
0x400298:	mov	qword ptr [rbp - 0x18], 0
0x4002a0:	mov	qword ptr [rbp - 0x10], 0
0x4002a8:	cmp	dword ptr [rbp - 0x34], 0
0x4002ac:	js	0x4002c6
<Block for 0x4002c6, 12 bytes>
0x4002c6:	lea	rdi, [rip + 0x19b]
0x4002cd:	call	0x500008
<Block for 0x4002ae, 6 bytes>
0x4002ae:	cmp	dword ptr [rbp - 0x34], 9
0x4002b2:	jg	0x4002c6
<Block for 0x4002d2, 16 bytes>
0x4002d2:	nop	
0x4002d3:	mov	rax, qword ptr [rbp - 8]
0x4002d7:	xor	rax, qword ptr fs:[0x28]
0x4002e0:	je	0x4002e7
<Block for 0x4002b4, 16 bytes>
0x4002b4:	mov	eax, dword ptr [rbp - 0x34]
0x4002b7:	cdqe	
0x4002b9:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002bd:	mov	edi, eax
0x4002bf:	call	0x500000
<Block for 0x4002e7, 2 bytes>
0x4002e7:	leave	
0x4002e8:	ret	
<Block for 0x4002e2, 5 bytes>
0x4002e2:	call	0x500010
<Block for 0x4002c4, 2 bytes>
0x4002c4:	jmp	0x4002d2
