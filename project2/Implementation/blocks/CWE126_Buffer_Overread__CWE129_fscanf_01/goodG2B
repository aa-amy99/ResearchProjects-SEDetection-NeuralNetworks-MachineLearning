<Block for 0x4000a5, 87 bytes>
0x4000a5:	endbr64	
0x4000a9:	push	rbp
0x4000aa:	mov	rbp, rsp
0x4000ad:	sub	rsp, 0x40
0x4000b1:	mov	rax, qword ptr fs:[0x28]
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	xor	eax, eax
0x4000c0:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000c7:	mov	dword ptr [rbp - 0x34], 7
0x4000ce:	mov	qword ptr [rbp - 0x30], 0
0x4000d6:	mov	qword ptr [rbp - 0x28], 0
0x4000de:	mov	qword ptr [rbp - 0x20], 0
0x4000e6:	mov	qword ptr [rbp - 0x18], 0
0x4000ee:	mov	qword ptr [rbp - 0x10], 0
0x4000f6:	cmp	dword ptr [rbp - 0x34], 0
0x4000fa:	js	0x40010e
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0xf3]
0x400115:	call	0x500018
<Block for 0x4000fc, 16 bytes>
0x4000fc:	mov	eax, dword ptr [rbp - 0x34]
0x4000ff:	cdqe	
0x400101:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400105:	mov	edi, eax
0x400107:	call	0x500010
<Block for 0x40011a, 16 bytes>
0x40011a:	nop	
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	xor	rax, qword ptr fs:[0x28]
0x400128:	je	0x40012f
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x40011a
<Block for 0x40012f, 2 bytes>
0x40012f:	leave	
0x400130:	ret	
<Block for 0x40012a, 5 bytes>
0x40012a:	call	0x500020
