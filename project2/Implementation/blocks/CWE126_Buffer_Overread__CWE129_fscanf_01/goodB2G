<Block for 0x400131, 65 bytes>
0x400131:	endbr64	
0x400135:	push	rbp
0x400136:	mov	rbp, rsp
0x400139:	sub	rsp, 0x40
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 8], rax
0x40014a:	xor	eax, eax
0x40014c:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400153:	mov	rax, qword ptr [rip + 0xffea6]
0x40015a:	lea	rdx, [rbp - 0x34]
0x40015e:	lea	rsi, [rip + 0x9b]
0x400165:	mov	rdi, rax
0x400168:	mov	eax, 0
0x40016d:	call	0x500008
<Block for 0x400172, 47 bytes>
0x400172:	mov	qword ptr [rbp - 0x30], 0
0x40017a:	mov	qword ptr [rbp - 0x28], 0
0x400182:	mov	qword ptr [rbp - 0x20], 0
0x40018a:	mov	qword ptr [rbp - 0x18], 0
0x400192:	mov	qword ptr [rbp - 0x10], 0
0x40019a:	mov	eax, dword ptr [rbp - 0x34]
0x40019d:	test	eax, eax
0x40019f:	js	0x4001bb
<Block for 0x4001bb, 12 bytes>
0x4001bb:	lea	rdi, [rip + 0x66]
0x4001c2:	call	0x500018
<Block for 0x4001a1, 8 bytes>
0x4001a1:	mov	eax, dword ptr [rbp - 0x34]
0x4001a4:	cmp	eax, 9
0x4001a7:	jg	0x4001bb
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x4001a9, 16 bytes>
0x4001a9:	mov	eax, dword ptr [rbp - 0x34]
0x4001ac:	cdqe	
0x4001ae:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001b2:	mov	edi, eax
0x4001b4:	call	0x500010
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500020
<Block for 0x4001b9, 2 bytes>
0x4001b9:	jmp	0x4001c7
