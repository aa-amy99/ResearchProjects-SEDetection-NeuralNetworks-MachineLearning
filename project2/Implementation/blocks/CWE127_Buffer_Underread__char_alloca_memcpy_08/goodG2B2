<Block for 0x400366, 85 bytes>
0x400366:	endbr64	
0x40036a:	push	rbp
0x40036b:	mov	rbp, rsp
0x40036e:	push	rbx
0x40036f:	sub	rsp, 0x88
0x400376:	mov	rax, qword ptr fs:[0x28]
0x40037f:	mov	qword ptr [rbp - 0x18], rax
0x400383:	xor	eax, eax
0x400385:	mov	eax, 0x10
0x40038a:	sub	rax, 1
0x40038e:	add	rax, 0x6c
0x400392:	mov	esi, 0x10
0x400397:	mov	edx, 0
0x40039c:	div	rsi
0x40039f:	imul	rax, rax, 0x10
0x4003a3:	mov	rdx, rax
0x4003a6:	and	rdx, 0xfffffffffffff000
0x4003ad:	mov	rbx, rsp
0x4003b0:	sub	rbx, rdx
0x4003b3:	mov	rdx, rbx
0x4003b6:	cmp	rsp, rdx
0x4003b9:	je	0x4003cd
<Block for 0x4003cd, 26 bytes>
0x4003cd:	mov	rdx, rax
0x4003d0:	and	edx, 0xfff
0x4003d6:	sub	rsp, rdx
0x4003d9:	mov	rdx, rax
0x4003dc:	and	edx, 0xfff
0x4003e2:	test	rdx, rdx
0x4003e5:	je	0x4003f7
<Block for 0x4003bb, 18 bytes>
0x4003bb:	sub	rsp, 0x1000
0x4003c2:	or	qword ptr [rsp + 0xff8], 0
0x4003cb:	jmp	0x4003b6
<Block for 0x4003f7, 47 bytes>
0x4003f7:	mov	rax, rsp
0x4003fa:	add	rax, 0xf
0x4003fe:	shr	rax, 4
0x400402:	shl	rax, 4
0x400406:	mov	qword ptr [rbp - 0x88], rax
0x40040d:	mov	rax, qword ptr [rbp - 0x88]
0x400414:	mov	edx, 0x63
0x400419:	mov	esi, 0x41
0x40041e:	mov	rdi, rax
0x400421:	call	0x500000
<Block for 0x4003e7, 63 bytes>
0x4003e7:	and	eax, 0xfff
0x4003ec:	sub	rax, 8
0x4003f0:	add	rax, rsp
0x4003f3:	or	qword ptr [rax], 0
0x4003f7:	mov	rax, rsp
0x4003fa:	add	rax, 0xf
0x4003fe:	shr	rax, 4
0x400402:	shl	rax, 4
0x400406:	mov	qword ptr [rbp - 0x88], rax
0x40040d:	mov	rax, qword ptr [rbp - 0x88]
0x400414:	mov	edx, 0x63
0x400419:	mov	esi, 0x41
0x40041e:	mov	rdi, rax
0x400421:	call	0x500000
<Block for 0x4003b6, 5 bytes>
0x4003b6:	cmp	rsp, rdx
0x4003b9:	je	0x4003cd
<Block for 0x400426, 24 bytes>
0x400426:	mov	rax, qword ptr [rbp - 0x88]
0x40042d:	add	rax, 0x63
0x400431:	mov	byte ptr [rax], 0
0x400434:	mov	eax, 0
0x400439:	call	0x400000
<Block for 0x40043e, 4 bytes>
0x40043e:	test	eax, eax
0x400440:	je	0x400450
<Block for 0x400450, 22 bytes>
0x400450:	lea	rax, [rbp - 0x80]
0x400454:	mov	edx, 0x63
0x400459:	mov	esi, 0x43
0x40045e:	mov	rdi, rax
0x400461:	call	0x500000
<Block for 0x400442, 36 bytes>
0x400442:	mov	rax, qword ptr [rbp - 0x88]
0x400449:	mov	qword ptr [rbp - 0x90], rax
0x400450:	lea	rax, [rbp - 0x80]
0x400454:	mov	edx, 0x63
0x400459:	mov	esi, 0x43
0x40045e:	mov	rdi, rax
0x400461:	call	0x500000
<Block for 0x400466, 128 bytes>
0x400466:	mov	byte ptr [rbp - 0x1d], 0
0x40046a:	mov	rax, qword ptr [rbp - 0x90]
0x400471:	mov	rcx, qword ptr [rax]
0x400474:	mov	rbx, qword ptr [rax + 8]
0x400478:	mov	qword ptr [rbp - 0x80], rcx
0x40047c:	mov	qword ptr [rbp - 0x78], rbx
0x400480:	mov	rcx, qword ptr [rax + 0x10]
0x400484:	mov	rbx, qword ptr [rax + 0x18]
0x400488:	mov	qword ptr [rbp - 0x70], rcx
0x40048c:	mov	qword ptr [rbp - 0x68], rbx
0x400490:	mov	rcx, qword ptr [rax + 0x20]
0x400494:	mov	rbx, qword ptr [rax + 0x28]
0x400498:	mov	qword ptr [rbp - 0x60], rcx
0x40049c:	mov	qword ptr [rbp - 0x58], rbx
0x4004a0:	mov	rcx, qword ptr [rax + 0x30]
0x4004a4:	mov	rbx, qword ptr [rax + 0x38]
0x4004a8:	mov	qword ptr [rbp - 0x50], rcx
0x4004ac:	mov	qword ptr [rbp - 0x48], rbx
0x4004b0:	mov	rcx, qword ptr [rax + 0x40]
0x4004b4:	mov	rbx, qword ptr [rax + 0x48]
0x4004b8:	mov	qword ptr [rbp - 0x40], rcx
0x4004bc:	mov	qword ptr [rbp - 0x38], rbx
0x4004c0:	mov	rcx, qword ptr [rax + 0x50]
0x4004c4:	mov	rbx, qword ptr [rax + 0x58]
0x4004c8:	mov	qword ptr [rbp - 0x30], rcx
0x4004cc:	mov	qword ptr [rbp - 0x28], rbx
0x4004d0:	mov	eax, dword ptr [rax + 0x60]
0x4004d3:	mov	dword ptr [rbp - 0x20], eax
0x4004d6:	mov	byte ptr [rbp - 0x1d], 0
0x4004da:	lea	rax, [rbp - 0x80]
0x4004de:	mov	rdi, rax
0x4004e1:	call	0x500008
<Block for 0x4004e6, 16 bytes>
0x4004e6:	nop	
0x4004e7:	mov	rax, qword ptr [rbp - 0x18]
0x4004eb:	xor	rax, qword ptr fs:[0x28]
0x4004f4:	je	0x4004fb
<Block for 0x4004fb, 6 bytes>
0x4004fb:	mov	rbx, qword ptr [rbp - 8]
0x4004ff:	leave	
0x400500:	ret	
<Block for 0x4004f6, 5 bytes>
0x4004f6:	call	0x500010
