<Block for 0x4001bd, 85 bytes>
0x4001bd:	endbr64	
0x4001c1:	push	rbp
0x4001c2:	mov	rbp, rsp
0x4001c5:	push	rbx
0x4001c6:	sub	rsp, 0x88
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 0x18], rax
0x4001da:	xor	eax, eax
0x4001dc:	mov	eax, 0x10
0x4001e1:	sub	rax, 1
0x4001e5:	add	rax, 0x6c
0x4001e9:	mov	esi, 0x10
0x4001ee:	mov	edx, 0
0x4001f3:	div	rsi
0x4001f6:	imul	rax, rax, 0x10
0x4001fa:	mov	rdx, rax
0x4001fd:	and	rdx, 0xfffffffffffff000
0x400204:	mov	rbx, rsp
0x400207:	sub	rbx, rdx
0x40020a:	mov	rdx, rbx
0x40020d:	cmp	rsp, rdx
0x400210:	je	0x400224
<Block for 0x400224, 26 bytes>
0x400224:	mov	rdx, rax
0x400227:	and	edx, 0xfff
0x40022d:	sub	rsp, rdx
0x400230:	mov	rdx, rax
0x400233:	and	edx, 0xfff
0x400239:	test	rdx, rdx
0x40023c:	je	0x40024e
<Block for 0x400212, 18 bytes>
0x400212:	sub	rsp, 0x1000
0x400219:	or	qword ptr [rsp + 0xff8], 0
0x400222:	jmp	0x40020d
<Block for 0x40024e, 47 bytes>
0x40024e:	mov	rax, rsp
0x400251:	add	rax, 0xf
0x400255:	shr	rax, 4
0x400259:	shl	rax, 4
0x40025d:	mov	qword ptr [rbp - 0x88], rax
0x400264:	mov	rax, qword ptr [rbp - 0x88]
0x40026b:	mov	edx, 0x63
0x400270:	mov	esi, 0x41
0x400275:	mov	rdi, rax
0x400278:	call	0x500000
<Block for 0x40023e, 63 bytes>
0x40023e:	and	eax, 0xfff
0x400243:	sub	rax, 8
0x400247:	add	rax, rsp
0x40024a:	or	qword ptr [rax], 0
0x40024e:	mov	rax, rsp
0x400251:	add	rax, 0xf
0x400255:	shr	rax, 4
0x400259:	shl	rax, 4
0x40025d:	mov	qword ptr [rbp - 0x88], rax
0x400264:	mov	rax, qword ptr [rbp - 0x88]
0x40026b:	mov	edx, 0x63
0x400270:	mov	esi, 0x41
0x400275:	mov	rdi, rax
0x400278:	call	0x500000
<Block for 0x40020d, 5 bytes>
0x40020d:	cmp	rsp, rdx
0x400210:	je	0x400224
<Block for 0x40027d, 24 bytes>
0x40027d:	mov	rax, qword ptr [rbp - 0x88]
0x400284:	add	rax, 0x63
0x400288:	mov	byte ptr [rax], 0
0x40028b:	mov	eax, 0
0x400290:	call	0x40000f
<Block for 0x400295, 4 bytes>
0x400295:	test	eax, eax
0x400297:	je	0x4002a7
<Block for 0x4002a7, 36 bytes>
0x4002a7:	mov	rax, qword ptr [rbp - 0x88]
0x4002ae:	mov	qword ptr [rbp - 0x90], rax
0x4002b5:	lea	rax, [rbp - 0x80]
0x4002b9:	mov	edx, 0x63
0x4002be:	mov	esi, 0x43
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500000
<Block for 0x400299, 12 bytes>
0x400299:	lea	rdi, [rip + 0x280]
0x4002a0:	call	0x500008
<Block for 0x4002cb, 128 bytes>
0x4002cb:	mov	byte ptr [rbp - 0x1d], 0
0x4002cf:	mov	rax, qword ptr [rbp - 0x90]
0x4002d6:	mov	rcx, qword ptr [rax]
0x4002d9:	mov	rbx, qword ptr [rax + 8]
0x4002dd:	mov	qword ptr [rbp - 0x80], rcx
0x4002e1:	mov	qword ptr [rbp - 0x78], rbx
0x4002e5:	mov	rcx, qword ptr [rax + 0x10]
0x4002e9:	mov	rbx, qword ptr [rax + 0x18]
0x4002ed:	mov	qword ptr [rbp - 0x70], rcx
0x4002f1:	mov	qword ptr [rbp - 0x68], rbx
0x4002f5:	mov	rcx, qword ptr [rax + 0x20]
0x4002f9:	mov	rbx, qword ptr [rax + 0x28]
0x4002fd:	mov	qword ptr [rbp - 0x60], rcx
0x400301:	mov	qword ptr [rbp - 0x58], rbx
0x400305:	mov	rcx, qword ptr [rax + 0x30]
0x400309:	mov	rbx, qword ptr [rax + 0x38]
0x40030d:	mov	qword ptr [rbp - 0x50], rcx
0x400311:	mov	qword ptr [rbp - 0x48], rbx
0x400315:	mov	rcx, qword ptr [rax + 0x40]
0x400319:	mov	rbx, qword ptr [rax + 0x48]
0x40031d:	mov	qword ptr [rbp - 0x40], rcx
0x400321:	mov	qword ptr [rbp - 0x38], rbx
0x400325:	mov	rcx, qword ptr [rax + 0x50]
0x400329:	mov	rbx, qword ptr [rax + 0x58]
0x40032d:	mov	qword ptr [rbp - 0x30], rcx
0x400331:	mov	qword ptr [rbp - 0x28], rbx
0x400335:	mov	eax, dword ptr [rax + 0x60]
0x400338:	mov	dword ptr [rbp - 0x20], eax
0x40033b:	mov	byte ptr [rbp - 0x1d], 0
0x40033f:	lea	rax, [rbp - 0x80]
0x400343:	mov	rdi, rax
0x400346:	call	0x500008
<Block for 0x4002a5, 2 bytes>
0x4002a5:	jmp	0x4002b5
<Block for 0x40034b, 16 bytes>
0x40034b:	nop	
0x40034c:	mov	rax, qword ptr [rbp - 0x18]
0x400350:	xor	rax, qword ptr fs:[0x28]
0x400359:	je	0x400360
<Block for 0x4002b5, 22 bytes>
0x4002b5:	lea	rax, [rbp - 0x80]
0x4002b9:	mov	edx, 0x63
0x4002be:	mov	esi, 0x43
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500000
<Block for 0x400360, 6 bytes>
0x400360:	mov	rbx, qword ptr [rbp - 8]
0x400364:	leave	
0x400365:	ret	
<Block for 0x40035b, 5 bytes>
0x40035b:	call	0x500010
