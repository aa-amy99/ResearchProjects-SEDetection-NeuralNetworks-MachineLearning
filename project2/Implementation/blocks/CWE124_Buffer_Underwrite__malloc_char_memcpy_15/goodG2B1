<Block for 0x40014b, 52 bytes>
0x40014b:	endbr64	
0x40014f:	push	rbp
0x400150:	mov	rbp, rsp
0x400153:	push	rbx
0x400154:	sub	rsp, 0x88
0x40015b:	mov	rax, qword ptr fs:[0x28]
0x400164:	mov	qword ptr [rbp - 0x18], rax
0x400168:	xor	eax, eax
0x40016a:	mov	qword ptr [rbp - 0x90], 0
0x400175:	mov	edi, 0x64
0x40017a:	call	0x500000
<Block for 0x40017f, 17 bytes>
0x40017f:	mov	qword ptr [rbp - 0x88], rax
0x400186:	cmp	qword ptr [rbp - 0x88], 0
0x40018e:	jne	0x40019a
<Block for 0x400190, 10 bytes>
0x400190:	mov	edi, 0xffffffff
0x400195:	call	0x500008
<Block for 0x40019a, 25 bytes>
0x40019a:	mov	rax, qword ptr [rbp - 0x88]
0x4001a1:	mov	edx, 0x63
0x4001a6:	mov	esi, 0x41
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500010
<Block for 0x4001b3, 51 bytes>
0x4001b3:	mov	rax, qword ptr [rbp - 0x88]
0x4001ba:	add	rax, 0x63
0x4001be:	mov	byte ptr [rax], 0
0x4001c1:	mov	rax, qword ptr [rbp - 0x88]
0x4001c8:	mov	qword ptr [rbp - 0x90], rax
0x4001cf:	nop	
0x4001d0:	lea	rax, [rbp - 0x80]
0x4001d4:	mov	edx, 0x63
0x4001d9:	mov	esi, 0x43
0x4001de:	mov	rdi, rax
0x4001e1:	call	0x500010
<Block for 0x4001e6, 141 bytes>
0x4001e6:	mov	byte ptr [rbp - 0x1d], 0
0x4001ea:	mov	rax, qword ptr [rbp - 0x90]
0x4001f1:	mov	rcx, qword ptr [rbp - 0x80]
0x4001f5:	mov	rbx, qword ptr [rbp - 0x78]
0x4001f9:	mov	qword ptr [rax], rcx
0x4001fc:	mov	qword ptr [rax + 8], rbx
0x400200:	mov	rcx, qword ptr [rbp - 0x70]
0x400204:	mov	rbx, qword ptr [rbp - 0x68]
0x400208:	mov	qword ptr [rax + 0x10], rcx
0x40020c:	mov	qword ptr [rax + 0x18], rbx
0x400210:	mov	rcx, qword ptr [rbp - 0x60]
0x400214:	mov	rbx, qword ptr [rbp - 0x58]
0x400218:	mov	qword ptr [rax + 0x20], rcx
0x40021c:	mov	qword ptr [rax + 0x28], rbx
0x400220:	mov	rcx, qword ptr [rbp - 0x50]
0x400224:	mov	rbx, qword ptr [rbp - 0x48]
0x400228:	mov	qword ptr [rax + 0x30], rcx
0x40022c:	mov	qword ptr [rax + 0x38], rbx
0x400230:	mov	rcx, qword ptr [rbp - 0x40]
0x400234:	mov	rbx, qword ptr [rbp - 0x38]
0x400238:	mov	qword ptr [rax + 0x40], rcx
0x40023c:	mov	qword ptr [rax + 0x48], rbx
0x400240:	mov	rcx, qword ptr [rbp - 0x30]
0x400244:	mov	rbx, qword ptr [rbp - 0x28]
0x400248:	mov	qword ptr [rax + 0x50], rcx
0x40024c:	mov	qword ptr [rax + 0x58], rbx
0x400250:	mov	edx, dword ptr [rbp - 0x20]
0x400253:	mov	dword ptr [rax + 0x60], edx
0x400256:	mov	rax, qword ptr [rbp - 0x90]
0x40025d:	add	rax, 0x63
0x400261:	mov	byte ptr [rax], 0
0x400264:	mov	rax, qword ptr [rbp - 0x90]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500018
<Block for 0x400273, 16 bytes>
0x400273:	nop	
0x400274:	mov	rax, qword ptr [rbp - 0x18]
0x400278:	xor	rax, qword ptr fs:[0x28]
0x400281:	je	0x400288
<Block for 0x400288, 10 bytes>
0x400288:	add	rsp, 0x88
0x40028f:	pop	rbx
0x400290:	pop	rbp
0x400291:	ret	
<Block for 0x400283, 5 bytes>
0x400283:	call	0x500020
