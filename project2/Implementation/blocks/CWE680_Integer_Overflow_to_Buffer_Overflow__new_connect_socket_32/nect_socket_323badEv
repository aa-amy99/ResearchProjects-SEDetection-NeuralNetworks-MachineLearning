<Block for 0x400000, 86 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x70
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x6c]
0x40001f:	mov	qword ptr [rbp - 0x50], rax
0x400023:	lea	rax, [rbp - 0x6c]
0x400027:	mov	qword ptr [rbp - 0x48], rax
0x40002b:	mov	dword ptr [rbp - 0x6c], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x50]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x68], eax
0x40003b:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x400042:	mov	edx, 6
0x400047:	mov	esi, 1
0x40004c:	mov	edi, 2
0x400051:	call	0x500000
<Block for 0x400056, 13 bytes>
0x400056:	mov	dword ptr [rbp - 0x64], eax
0x400059:	cmp	dword ptr [rbp - 0x64], -1
0x40005d:	je	0x4000fe
<Block for 0x4000fe, 3 bytes>
0x4000fe:	nop	
0x4000ff:	jmp	0x400102
<Block for 0x400063, 22 bytes>
0x400063:	lea	rax, [rbp - 0x30]
0x400067:	mov	edx, 0x10
0x40006c:	mov	esi, 0
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x400102, 6 bytes>
0x400102:	cmp	dword ptr [rbp - 0x64], -1
0x400106:	je	0x400112
<Block for 0x400079, 18 bytes>
0x400079:	mov	word ptr [rbp - 0x30], 2
0x40007f:	lea	rdi, [rip + 0x210]
0x400086:	call	0x500010
<Block for 0x400112, 43 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x50]
0x400116:	mov	edx, dword ptr [rbp - 0x68]
0x400119:	mov	dword ptr [rax], edx
0x40011b:	mov	rax, qword ptr [rbp - 0x48]
0x40011f:	mov	eax, dword ptr [rax]
0x400121:	mov	dword ptr [rbp - 0x5c], eax
0x400124:	mov	eax, dword ptr [rbp - 0x5c]
0x400127:	cdqe	
0x400129:	shl	rax, 2
0x40012d:	mov	qword ptr [rbp - 0x40], rax
0x400131:	mov	rax, qword ptr [rbp - 0x40]
0x400135:	mov	rdi, rax
0x400138:	call	0x500040
<Block for 0x400108, 10 bytes>
0x400108:	mov	eax, dword ptr [rbp - 0x64]
0x40010b:	mov	edi, eax
0x40010d:	call	0x500038
<Block for 0x40008b, 13 bytes>
0x40008b:	mov	dword ptr [rbp - 0x2c], eax
0x40008e:	mov	edi, 0x6987
0x400093:	call	0x500018
<Block for 0x40013d, 23 bytes>
0x40013d:	mov	qword ptr [rbp - 0x38], rax
0x400141:	mov	qword ptr [rbp - 0x58], 0
0x400149:	mov	eax, dword ptr [rbp - 0x5c]
0x40014c:	cdqe	
0x40014e:	cmp	qword ptr [rbp - 0x58], rax
0x400152:	jae	0x400174
<Block for 0x400098, 26 bytes>
0x400098:	mov	word ptr [rbp - 0x2e], ax
0x40009c:	lea	rcx, [rbp - 0x30]
0x4000a0:	mov	eax, dword ptr [rbp - 0x64]
0x4000a3:	mov	edx, 0x10
0x4000a8:	mov	rsi, rcx
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500020
<Block for 0x400154, 32 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x58]
0x400158:	lea	rdx, [rax*4]
0x400160:	mov	rax, qword ptr [rbp - 0x38]
0x400164:	add	rax, rdx
0x400167:	mov	dword ptr [rax], 0
0x40016d:	add	qword ptr [rbp - 0x58], 1
0x400172:	jmp	0x400149
<Block for 0x400174, 13 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0x38]
0x400178:	mov	eax, dword ptr [rax]
0x40017a:	mov	edi, eax
0x40017c:	call	0x500048
<Block for 0x4000b2, 10 bytes>
0x4000b2:	cmp	eax, -1
0x4000b5:	sete	al
0x4000b8:	test	al, al
0x4000ba:	jne	0x400101
<Block for 0x400149, 11 bytes>
0x400149:	mov	eax, dword ptr [rbp - 0x5c]
0x40014c:	cdqe	
0x40014e:	cmp	qword ptr [rbp - 0x58], rax
0x400152:	jae	0x400174
<Block for 0x400181, 7 bytes>
0x400181:	cmp	qword ptr [rbp - 0x38], 0
0x400186:	je	0x400194
<Block for 0x4000bc, 24 bytes>
0x4000bc:	lea	rsi, [rbp - 0x16]
0x4000c0:	mov	eax, dword ptr [rbp - 0x64]
0x4000c3:	mov	ecx, 0
0x4000c8:	mov	edx, 0xd
0x4000cd:	mov	edi, eax
0x4000cf:	call	0x500028
<Block for 0x400101, 1 bytes>
0x400101:	nop	
<Block for 0x400194, 16 bytes>
0x400194:	nop	
0x400195:	mov	rax, qword ptr [rbp - 8]
0x400199:	xor	rax, qword ptr fs:[0x28]
0x4001a2:	je	0x4001a9
<Block for 0x400188, 12 bytes>
0x400188:	mov	rax, qword ptr [rbp - 0x38]
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500050
<Block for 0x4000d4, 9 bytes>
0x4000d4:	mov	dword ptr [rbp - 0x60], eax
0x4000d7:	cmp	dword ptr [rbp - 0x60], -1
0x4000db:	je	0x400102
<Block for 0x4001a9, 2 bytes>
0x4001a9:	leave	
0x4001aa:	ret	
<Block for 0x4001a4, 5 bytes>
0x4001a4:	call	0x500058
<Block for 0x4000dd, 6 bytes>
0x4000dd:	cmp	dword ptr [rbp - 0x60], 0
0x4000e1:	je	0x400102
<Block for 0x4000e3, 22 bytes>
0x4000e3:	mov	eax, dword ptr [rbp - 0x60]
0x4000e6:	cdqe	
0x4000e8:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000ed:	lea	rax, [rbp - 0x16]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500030
<Block for 0x4000f9, 5 bytes>
0x4000f9:	mov	dword ptr [rbp - 0x68], eax
0x4000fc:	jmp	0x400102
