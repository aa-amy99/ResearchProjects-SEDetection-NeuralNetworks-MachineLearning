<Block for 0x4000bb, 45 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x40
0x4000c7:	mov	rax, qword ptr fs:[0x28]
0x4000d0:	mov	qword ptr [rbp - 8], rax
0x4000d4:	xor	eax, eax
0x4000d6:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000dd:	mov	eax, dword ptr [rip + 0x2f1]
0x4000e3:	cmp	eax, 5
0x4000e6:	jne	0x400107
<Block for 0x4000e8, 31 bytes>
0x4000e8:	mov	rax, qword ptr [rip + 0xfff11]
0x4000ef:	lea	rdx, [rbp - 0x34]
0x4000f3:	lea	rsi, [rip + 0x2de]
0x4000fa:	mov	rdi, rax
0x4000fd:	mov	eax, 0
0x400102:	call	0x500008
<Block for 0x400107, 11 bytes>
0x400107:	mov	eax, dword ptr [rip + 0x2c7]
0x40010d:	cmp	eax, 5
0x400110:	je	0x400120
<Block for 0x400120, 47 bytes>
0x400120:	mov	qword ptr [rbp - 0x30], 0
0x400128:	mov	qword ptr [rbp - 0x28], 0
0x400130:	mov	qword ptr [rbp - 0x20], 0
0x400138:	mov	qword ptr [rbp - 0x18], 0
0x400140:	mov	qword ptr [rbp - 0x10], 0
0x400148:	mov	eax, dword ptr [rbp - 0x34]
0x40014b:	test	eax, eax
0x40014d:	js	0x400169
<Block for 0x400112, 12 bytes>
0x400112:	lea	rdi, [rip + 0x2e6]
0x400119:	call	0x500018
<Block for 0x400169, 12 bytes>
0x400169:	lea	rdi, [rip + 0x2a8]
0x400170:	call	0x500018
<Block for 0x40014f, 8 bytes>
0x40014f:	mov	eax, dword ptr [rbp - 0x34]
0x400152:	cmp	eax, 9
0x400155:	jg	0x400169
<Block for 0x40011e, 2 bytes>
0x40011e:	jmp	0x400175
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x400157, 16 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x34]
0x40015a:	cdqe	
0x40015c:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400160:	mov	edi, eax
0x400162:	call	0x500010
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500020
<Block for 0x400167, 2 bytes>
0x400167:	jmp	0x400175
