<Block for 0x40012d, 43 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	rbx
0x400136:	sub	rsp, 0x88
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 0x18], rax
0x40014a:	xor	eax, eax
0x40014c:	lea	rax, [rbp - 0x80]
0x400150:	mov	rdi, rax
0x400153:	call	0x4004d4
<Block for 0x400158, 40 bytes>
0x400158:	lea	rax, [rip + 0x26c]
0x40015f:	mov	qword ptr [rbp - 0x88], rax
0x400166:	mov	dword ptr [rbp - 0x50], 0
0x40016d:	lea	rdx, [rbp - 0x50]
0x400171:	lea	rax, [rbp - 0x80]
0x400175:	mov	rsi, rdx
0x400178:	mov	rdi, rax
0x40017b:	call	0x40069e
<Block for 0x400180, 36 bytes>
0x400180:	mov	rdx, qword ptr [rbp - 0x88]
0x400187:	mov	qword ptr [rax], rdx
0x40018a:	mov	dword ptr [rbp - 0x50], 1
0x400191:	lea	rdx, [rbp - 0x50]
0x400195:	lea	rax, [rbp - 0x80]
0x400199:	mov	rsi, rdx
0x40019c:	mov	rdi, rax
0x40019f:	call	0x40069e
<Block for 0x4001a4, 36 bytes>
0x4001a4:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ab:	mov	qword ptr [rax], rdx
0x4001ae:	mov	dword ptr [rbp - 0x50], 2
0x4001b5:	lea	rdx, [rbp - 0x50]
0x4001b9:	lea	rax, [rbp - 0x80]
0x4001bd:	mov	rsi, rdx
0x4001c0:	mov	rdi, rax
0x4001c3:	call	0x40069e
<Block for 0x4001c8, 29 bytes>
0x4001c8:	mov	rdx, qword ptr [rbp - 0x88]
0x4001cf:	mov	qword ptr [rax], rdx
0x4001d2:	lea	rdx, [rbp - 0x80]
0x4001d6:	lea	rax, [rbp - 0x50]
0x4001da:	mov	rsi, rdx
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x400514
<Block for 0x4001e5, 12 bytes>
0x4001e5:	lea	rax, [rbp - 0x50]
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500018
<Block for 0x4001f1, 12 bytes>
0x4001f1:	lea	rax, [rbp - 0x50]
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x4004f4
<Block for 0x4001fd, 12 bytes>
0x4001fd:	lea	rax, [rbp - 0x80]
0x400201:	mov	rdi, rax
0x400204:	call	0x4004f4
<Block for 0x400209, 16 bytes>
0x400209:	nop	
0x40020a:	mov	rax, qword ptr [rbp - 0x18]
0x40020e:	xor	rax, qword ptr fs:[0x28]
0x400217:	je	0x400253
<Block for 0x400253, 10 bytes>
0x400253:	add	rsp, 0x88
0x40025a:	pop	rbx
0x40025b:	pop	rbp
0x40025c:	ret	
<Block for 0x400219, 2 bytes>
0x400219:	jmp	0x40024e
<Block for 0x40024e, 5 bytes>
0x40024e:	call	0x500010
