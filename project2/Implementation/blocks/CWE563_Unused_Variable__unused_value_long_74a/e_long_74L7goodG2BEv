<Block for 0x40012d, 43 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	rbx
0x400136:	sub	rsp, 0x88
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 0x18], rax
0x40014a:	xor	eax, eax
0x40014c:	lea	rax, [rbp - 0x80]
0x400150:	mov	rdi, rax
0x400153:	call	0x4004dc
<Block for 0x400158, 26 bytes>
0x400158:	mov	qword ptr [rbp - 0x88], 5
0x400163:	mov	rax, qword ptr [rbp - 0x88]
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500018
<Block for 0x400172, 26 bytes>
0x400172:	mov	dword ptr [rbp - 0x50], 0
0x400179:	lea	rdx, [rbp - 0x50]
0x40017d:	lea	rax, [rbp - 0x80]
0x400181:	mov	rsi, rdx
0x400184:	mov	rdi, rax
0x400187:	call	0x4006aa
<Block for 0x40018c, 36 bytes>
0x40018c:	mov	rdx, qword ptr [rbp - 0x88]
0x400193:	mov	qword ptr [rax], rdx
0x400196:	mov	dword ptr [rbp - 0x50], 1
0x40019d:	lea	rdx, [rbp - 0x50]
0x4001a1:	lea	rax, [rbp - 0x80]
0x4001a5:	mov	rsi, rdx
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x4006aa
<Block for 0x4001b0, 36 bytes>
0x4001b0:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b7:	mov	qword ptr [rax], rdx
0x4001ba:	mov	dword ptr [rbp - 0x50], 2
0x4001c1:	lea	rdx, [rbp - 0x50]
0x4001c5:	lea	rax, [rbp - 0x80]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x4006aa
<Block for 0x4001d4, 29 bytes>
0x4001d4:	mov	rdx, qword ptr [rbp - 0x88]
0x4001db:	mov	qword ptr [rax], rdx
0x4001de:	lea	rdx, [rbp - 0x80]
0x4001e2:	lea	rax, [rbp - 0x50]
0x4001e6:	mov	rsi, rdx
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x40051c
<Block for 0x4001f1, 12 bytes>
0x4001f1:	lea	rax, [rbp - 0x50]
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x500020
<Block for 0x4001fd, 12 bytes>
0x4001fd:	lea	rax, [rbp - 0x50]
0x400201:	mov	rdi, rax
0x400204:	call	0x4004fc
<Block for 0x400209, 12 bytes>
0x400209:	lea	rax, [rbp - 0x80]
0x40020d:	mov	rdi, rax
0x400210:	call	0x4004fc
<Block for 0x400215, 16 bytes>
0x400215:	nop	
0x400216:	mov	rax, qword ptr [rbp - 0x18]
0x40021a:	xor	rax, qword ptr fs:[0x28]
0x400223:	je	0x40025f
<Block for 0x40025f, 10 bytes>
0x40025f:	add	rsp, 0x88
0x400266:	pop	rbx
0x400267:	pop	rbp
0x400268:	ret	
<Block for 0x400225, 2 bytes>
0x400225:	jmp	0x40025a
<Block for 0x40025a, 5 bytes>
0x40025a:	call	0x500010
