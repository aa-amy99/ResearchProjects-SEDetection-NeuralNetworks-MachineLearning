<Block for 0x400693, 46 bytes>
0x400693:	endbr64	
0x400697:	push	rbp
0x400698:	mov	rbp, rsp
0x40069b:	push	rbx
0x40069c:	sub	rsp, 0xf8
0x4006a3:	mov	rax, qword ptr fs:[0x28]
0x4006ac:	mov	qword ptr [rbp - 0x18], rax
0x4006b0:	xor	eax, eax
0x4006b2:	lea	rax, [rbp - 0xd0]
0x4006b9:	mov	rdi, rax
0x4006bc:	call	0x400b5e
<Block for 0x4006c1, 149 bytes>
0x4006c1:	mov	qword ptr [rbp - 0x80], 0
0x4006c9:	mov	qword ptr [rbp - 0x78], 0
0x4006d1:	mov	qword ptr [rbp - 0x70], 0
0x4006d9:	mov	qword ptr [rbp - 0x68], 0
0x4006e1:	mov	qword ptr [rbp - 0x60], 0
0x4006e9:	mov	qword ptr [rbp - 0x58], 0
0x4006f1:	mov	qword ptr [rbp - 0x50], 0
0x4006f9:	mov	qword ptr [rbp - 0x48], 0
0x400701:	mov	qword ptr [rbp - 0x40], 0
0x400709:	mov	qword ptr [rbp - 0x38], 0
0x400711:	mov	qword ptr [rbp - 0x30], 0
0x400719:	mov	qword ptr [rbp - 0x28], 0
0x400721:	mov	dword ptr [rbp - 0x20], 0
0x400728:	lea	rax, [rbp - 0x80]
0x40072c:	mov	qword ptr [rbp - 0xf0], rax
0x400733:	mov	dword ptr [rbp - 0xf8], 0xffffffff
0x40073d:	mov	dword ptr [rbp - 0xfc], 0xffffffff
0x400747:	mov	rax, qword ptr [rbp - 0xf0]
0x40074e:	mov	rdi, rax
0x400751:	call	0x500000
<Block for 0x400756, 27 bytes>
0x400756:	mov	qword ptr [rbp - 0xe0], rax
0x40075d:	mov	edx, 6
0x400762:	mov	esi, 1
0x400767:	mov	edi, 2
0x40076c:	call	0x500008
<Block for 0x400771, 19 bytes>
0x400771:	mov	dword ptr [rbp - 0xf8], eax
0x400777:	cmp	dword ptr [rbp - 0xf8], -1
0x40077e:	je	0x400908
<Block for 0x400908, 3 bytes>
0x400908:	nop	
0x400909:	jmp	0x400912
<Block for 0x400784, 25 bytes>
0x400784:	lea	rax, [rbp - 0x90]
0x40078b:	mov	edx, 0x10
0x400790:	mov	esi, 0
0x400795:	mov	rdi, rax
0x400798:	call	0x500010
<Block for 0x400912, 9 bytes>
0x400912:	cmp	dword ptr [rbp - 0xf8], -1
0x400919:	je	0x400928
<Block for 0x40079d, 29 bytes>
0x40079d:	mov	word ptr [rbp - 0x90], 2
0x4007a6:	mov	dword ptr [rbp - 0x8c], 0
0x4007b0:	mov	edi, 0x6987
0x4007b5:	call	0x500018
<Block for 0x400928, 9 bytes>
0x400928:	cmp	dword ptr [rbp - 0xfc], -1
0x40092f:	je	0x40093e
<Block for 0x40091b, 13 bytes>
0x40091b:	mov	eax, dword ptr [rbp - 0xf8]
0x400921:	mov	edi, eax
0x400923:	call	0x500048
<Block for 0x4007ba, 35 bytes>
0x4007ba:	mov	word ptr [rbp - 0x8e], ax
0x4007c1:	lea	rcx, [rbp - 0x90]
0x4007c8:	mov	eax, dword ptr [rbp - 0xf8]
0x4007ce:	mov	edx, 0x10
0x4007d3:	mov	rsi, rcx
0x4007d6:	mov	edi, eax
0x4007d8:	call	0x500020
<Block for 0x40093e, 15 bytes>
0x40093e:	lea	rax, [rbp - 0xd0]
0x400945:	mov	rdi, rax
0x400948:	call	0x400d0a
<Block for 0x400931, 13 bytes>
0x400931:	mov	eax, dword ptr [rbp - 0xfc]
0x400937:	mov	edi, eax
0x400939:	call	0x500048
<Block for 0x4007dd, 14 bytes>
0x4007dd:	cmp	eax, -1
0x4007e0:	sete	al
0x4007e3:	test	al, al
0x4007e5:	jne	0x40090b
<Block for 0x40094d, 32 bytes>
0x40094d:	mov	qword ptr [rbp - 0xe8], rax
0x400954:	lea	rdx, [rbp - 0xe8]
0x40095b:	lea	rax, [rbp - 0xb0]
0x400962:	mov	rsi, rdx
0x400965:	mov	rdi, rax
0x400968:	call	0x400d5a
<Block for 0x4007eb, 18 bytes>
0x4007eb:	mov	eax, dword ptr [rbp - 0xf8]
0x4007f1:	mov	esi, 5
0x4007f6:	mov	edi, eax
0x4007f8:	call	0x500028
<Block for 0x40090b, 3 bytes>
0x40090b:	nop	
0x40090c:	jmp	0x400912
<Block for 0x40096d, 37 bytes>
0x40096d:	lea	rdx, [rbp - 0xf0]
0x400974:	mov	rsi, qword ptr [rbp - 0xb0]
0x40097b:	lea	rax, [rbp - 0xd0]
0x400982:	mov	rcx, rdx
0x400985:	mov	edx, 1
0x40098a:	mov	rdi, rax
0x40098d:	call	0x400d88
<Block for 0x4007fd, 14 bytes>
0x4007fd:	cmp	eax, -1
0x400800:	sete	al
0x400803:	test	al, al
0x400805:	jne	0x40090e
<Block for 0x400992, 15 bytes>
0x400992:	lea	rax, [rbp - 0xd0]
0x400999:	mov	rdi, rax
0x40099c:	call	0x400d0a
<Block for 0x40080b, 23 bytes>
0x40080b:	mov	eax, dword ptr [rbp - 0xf8]
0x400811:	mov	edx, 0
0x400816:	mov	esi, 0
0x40081b:	mov	edi, eax
0x40081d:	call	0x500030
<Block for 0x40090e, 3 bytes>
0x40090e:	nop	
0x40090f:	jmp	0x400912
<Block for 0x4009a1, 32 bytes>
0x4009a1:	mov	qword ptr [rbp - 0xe8], rax
0x4009a8:	lea	rdx, [rbp - 0xe8]
0x4009af:	lea	rax, [rbp - 0xb0]
0x4009b6:	mov	rsi, rdx
0x4009b9:	mov	rdi, rax
0x4009bc:	call	0x400d5a
<Block for 0x400822, 19 bytes>
0x400822:	mov	dword ptr [rbp - 0xfc], eax
0x400828:	cmp	dword ptr [rbp - 0xfc], -1
0x40082f:	je	0x400911
<Block for 0x4009c1, 37 bytes>
0x4009c1:	lea	rdx, [rbp - 0xf0]
0x4009c8:	mov	rsi, qword ptr [rbp - 0xb0]
0x4009cf:	lea	rax, [rbp - 0xd0]
0x4009d6:	mov	rcx, rdx
0x4009d9:	mov	edx, 1
0x4009de:	mov	rdi, rax
0x4009e1:	call	0x400d88
<Block for 0x400835, 51 bytes>
0x400835:	mov	eax, 0x63
0x40083a:	sub	rax, qword ptr [rbp - 0xe0]
0x400841:	mov	rdx, rax
0x400844:	mov	rcx, qword ptr [rbp - 0xf0]
0x40084b:	mov	rax, qword ptr [rbp - 0xe0]
0x400852:	lea	rsi, [rcx + rax]
0x400856:	mov	eax, dword ptr [rbp - 0xfc]
0x40085c:	mov	ecx, 0
0x400861:	mov	edi, eax
0x400863:	call	0x500038
<Block for 0x400911, 1 bytes>
0x400911:	nop	
<Block for 0x4009e6, 15 bytes>
0x4009e6:	lea	rax, [rbp - 0xd0]
0x4009ed:	mov	rdi, rax
0x4009f0:	call	0x400d0a
<Block for 0x400868, 19 bytes>
0x400868:	mov	dword ptr [rbp - 0xf4], eax
0x40086e:	cmp	dword ptr [rbp - 0xf4], -1
0x400875:	je	0x400912
<Block for 0x4009f5, 32 bytes>
0x4009f5:	mov	qword ptr [rbp - 0xe8], rax
0x4009fc:	lea	rdx, [rbp - 0xe8]
0x400a03:	lea	rax, [rbp - 0xb0]
0x400a0a:	mov	rsi, rdx
0x400a0d:	mov	rdi, rax
0x400a10:	call	0x400d5a
<Block for 0x40087b, 13 bytes>
0x40087b:	cmp	dword ptr [rbp - 0xf4], 0
0x400882:	je	0x400912
<Block for 0x400a15, 37 bytes>
0x400a15:	lea	rdx, [rbp - 0xf0]
0x400a1c:	mov	rsi, qword ptr [rbp - 0xb0]
0x400a23:	lea	rax, [rbp - 0xd0]
0x400a2a:	mov	rcx, rdx
0x400a2d:	mov	edx, 1
0x400a32:	mov	rdi, rax
0x400a35:	call	0x400d88
<Block for 0x400888, 52 bytes>
0x400888:	mov	rax, qword ptr [rbp - 0xf0]
0x40088f:	mov	edx, dword ptr [rbp - 0xf4]
0x400895:	movsxd	rcx, edx
0x400898:	mov	rdx, qword ptr [rbp - 0xe0]
0x40089f:	add	rdx, rcx
0x4008a2:	add	rax, rdx
0x4008a5:	mov	byte ptr [rax], 0
0x4008a8:	mov	rax, qword ptr [rbp - 0xf0]
0x4008af:	mov	esi, 0xd
0x4008b4:	mov	rdi, rax
0x4008b7:	call	0x500040
<Block for 0x400a3a, 25 bytes>
0x400a3a:	lea	rdx, [rbp - 0xd0]
0x400a41:	lea	rax, [rbp - 0xb0]
0x400a48:	mov	rsi, rdx
0x400a4b:	mov	rdi, rax
0x400a4e:	call	0x400e4e
<Block for 0x4008bc, 17 bytes>
0x4008bc:	mov	qword ptr [rbp - 0xd8], rax
0x4008c3:	cmp	qword ptr [rbp - 0xd8], 0
0x4008cb:	je	0x4008d7
<Block for 0x400a53, 15 bytes>
0x400a53:	lea	rax, [rbp - 0xb0]
0x400a5a:	mov	rdi, rax
0x400a5d:	call	0x500070
<Block for 0x4008d7, 20 bytes>
0x4008d7:	mov	rax, qword ptr [rbp - 0xf0]
0x4008de:	mov	esi, 0xa
0x4008e3:	mov	rdi, rax
0x4008e6:	call	0x500040
<Block for 0x4008cd, 30 bytes>
0x4008cd:	mov	rax, qword ptr [rbp - 0xd8]
0x4008d4:	mov	byte ptr [rax], 0
0x4008d7:	mov	rax, qword ptr [rbp - 0xf0]
0x4008de:	mov	esi, 0xa
0x4008e3:	mov	rdi, rax
0x4008e6:	call	0x500040
<Block for 0x400a62, 15 bytes>
0x400a62:	lea	rax, [rbp - 0xb0]
0x400a69:	mov	rdi, rax
0x400a6c:	call	0x400cc2
<Block for 0x4008eb, 17 bytes>
0x4008eb:	mov	qword ptr [rbp - 0xd8], rax
0x4008f2:	cmp	qword ptr [rbp - 0xd8], 0
0x4008fa:	je	0x400912
<Block for 0x400a71, 15 bytes>
0x400a71:	lea	rax, [rbp - 0xd0]
0x400a78:	mov	rdi, rax
0x400a7b:	call	0x400cc2
<Block for 0x4008fc, 12 bytes>
0x4008fc:	mov	rax, qword ptr [rbp - 0xd8]
0x400903:	mov	byte ptr [rax], 0
0x400906:	jmp	0x400912
<Block for 0x400a80, 16 bytes>
0x400a80:	nop	
0x400a81:	mov	rax, qword ptr [rbp - 0x18]
0x400a85:	xor	rax, qword ptr fs:[0x28]
0x400a8e:	je	0x400ad0
<Block for 0x400ad0, 10 bytes>
0x400ad0:	add	rsp, 0xf8
0x400ad7:	pop	rbx
0x400ad8:	pop	rbp
0x400ad9:	ret	
<Block for 0x400a90, 2 bytes>
0x400a90:	jmp	0x400acb
<Block for 0x400acb, 5 bytes>
0x400acb:	call	0x500060
