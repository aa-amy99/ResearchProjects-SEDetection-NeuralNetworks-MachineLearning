<Block for 0x400447, 46 bytes>
0x400447:	endbr64	
0x40044b:	push	rbp
0x40044c:	mov	rbp, rsp
0x40044f:	push	rbx
0x400450:	sub	rsp, 0xc8
0x400457:	mov	rax, qword ptr fs:[0x28]
0x400460:	mov	qword ptr [rbp - 0x18], rax
0x400464:	xor	eax, eax
0x400466:	lea	rax, [rbp - 0xc0]
0x40046d:	mov	rdi, rax
0x400470:	call	0x400b5e
<Block for 0x400475, 145 bytes>
0x400475:	mov	qword ptr [rbp - 0x80], 0
0x40047d:	mov	qword ptr [rbp - 0x78], 0
0x400485:	mov	qword ptr [rbp - 0x70], 0
0x40048d:	mov	qword ptr [rbp - 0x68], 0
0x400495:	mov	qword ptr [rbp - 0x60], 0
0x40049d:	mov	qword ptr [rbp - 0x58], 0
0x4004a5:	mov	qword ptr [rbp - 0x50], 0
0x4004ad:	mov	qword ptr [rbp - 0x48], 0
0x4004b5:	mov	qword ptr [rbp - 0x40], 0
0x4004bd:	mov	qword ptr [rbp - 0x38], 0
0x4004c5:	mov	qword ptr [rbp - 0x30], 0
0x4004cd:	mov	qword ptr [rbp - 0x28], 0
0x4004d5:	mov	dword ptr [rbp - 0x20], 0
0x4004dc:	lea	rax, [rbp - 0x80]
0x4004e0:	mov	qword ptr [rbp - 0xd0], rax
0x4004e7:	mov	rax, qword ptr [rbp - 0xd0]
0x4004ee:	mov	word ptr [rax], 0x3531
0x4004f3:	mov	byte ptr [rax + 2], 0
0x4004f7:	lea	rax, [rbp - 0xc0]
0x4004fe:	mov	rdi, rax
0x400501:	call	0x400d0a
<Block for 0x400506, 32 bytes>
0x400506:	mov	qword ptr [rbp - 0xc8], rax
0x40050d:	lea	rdx, [rbp - 0xc8]
0x400514:	lea	rax, [rbp - 0xa0]
0x40051b:	mov	rsi, rdx
0x40051e:	mov	rdi, rax
0x400521:	call	0x400d5a
<Block for 0x400526, 37 bytes>
0x400526:	lea	rdx, [rbp - 0xd0]
0x40052d:	mov	rsi, qword ptr [rbp - 0xa0]
0x400534:	lea	rax, [rbp - 0xc0]
0x40053b:	mov	rcx, rdx
0x40053e:	mov	edx, 1
0x400543:	mov	rdi, rax
0x400546:	call	0x400d88
<Block for 0x40054b, 15 bytes>
0x40054b:	lea	rax, [rbp - 0xc0]
0x400552:	mov	rdi, rax
0x400555:	call	0x400d0a
<Block for 0x40055a, 32 bytes>
0x40055a:	mov	qword ptr [rbp - 0xc8], rax
0x400561:	lea	rdx, [rbp - 0xc8]
0x400568:	lea	rax, [rbp - 0xa0]
0x40056f:	mov	rsi, rdx
0x400572:	mov	rdi, rax
0x400575:	call	0x400d5a
<Block for 0x40057a, 37 bytes>
0x40057a:	lea	rdx, [rbp - 0xd0]
0x400581:	mov	rsi, qword ptr [rbp - 0xa0]
0x400588:	lea	rax, [rbp - 0xc0]
0x40058f:	mov	rcx, rdx
0x400592:	mov	edx, 1
0x400597:	mov	rdi, rax
0x40059a:	call	0x400d88
<Block for 0x40059f, 15 bytes>
0x40059f:	lea	rax, [rbp - 0xc0]
0x4005a6:	mov	rdi, rax
0x4005a9:	call	0x400d0a
<Block for 0x4005ae, 32 bytes>
0x4005ae:	mov	qword ptr [rbp - 0xc8], rax
0x4005b5:	lea	rdx, [rbp - 0xc8]
0x4005bc:	lea	rax, [rbp - 0xa0]
0x4005c3:	mov	rsi, rdx
0x4005c6:	mov	rdi, rax
0x4005c9:	call	0x400d5a
<Block for 0x4005ce, 37 bytes>
0x4005ce:	lea	rdx, [rbp - 0xd0]
0x4005d5:	mov	rsi, qword ptr [rbp - 0xa0]
0x4005dc:	lea	rax, [rbp - 0xc0]
0x4005e3:	mov	rcx, rdx
0x4005e6:	mov	edx, 1
0x4005eb:	mov	rdi, rax
0x4005ee:	call	0x400d88
<Block for 0x4005f3, 25 bytes>
0x4005f3:	lea	rdx, [rbp - 0xc0]
0x4005fa:	lea	rax, [rbp - 0xa0]
0x400601:	mov	rsi, rdx
0x400604:	mov	rdi, rax
0x400607:	call	0x400e4e
<Block for 0x40060c, 15 bytes>
0x40060c:	lea	rax, [rbp - 0xa0]
0x400613:	mov	rdi, rax
0x400616:	call	0x500068
<Block for 0x40061b, 15 bytes>
0x40061b:	lea	rax, [rbp - 0xa0]
0x400622:	mov	rdi, rax
0x400625:	call	0x400cc2
<Block for 0x40062a, 15 bytes>
0x40062a:	lea	rax, [rbp - 0xc0]
0x400631:	mov	rdi, rax
0x400634:	call	0x400cc2
<Block for 0x400639, 16 bytes>
0x400639:	nop	
0x40063a:	mov	rax, qword ptr [rbp - 0x18]
0x40063e:	xor	rax, qword ptr fs:[0x28]
0x400647:	je	0x400689
<Block for 0x400689, 10 bytes>
0x400689:	add	rsp, 0xc8
0x400690:	pop	rbx
0x400691:	pop	rbp
0x400692:	ret	
<Block for 0x400649, 2 bytes>
0x400649:	jmp	0x400684
<Block for 0x400684, 5 bytes>
0x400684:	call	0x500060
