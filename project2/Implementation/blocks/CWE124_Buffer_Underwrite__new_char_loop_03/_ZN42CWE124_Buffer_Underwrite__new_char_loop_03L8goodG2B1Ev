<Block for 0x4000e9, 48 bytes>
0x4000e9:	endbr64	
0x4000ed:	push	rbp
0x4000ee:	mov	rbp, rsp
0x4000f1:	sub	rsp, 0x90
0x4000f8:	mov	rax, qword ptr fs:[0x28]
0x400101:	mov	qword ptr [rbp - 8], rax
0x400105:	xor	eax, eax
0x400107:	mov	qword ptr [rbp - 0x80], 0
0x40010f:	mov	edi, 0x64
0x400114:	call	0x500000
<Block for 0x400119, 26 bytes>
0x400119:	mov	qword ptr [rbp - 0x78], rax
0x40011d:	mov	rax, qword ptr [rbp - 0x78]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x41
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500008
<Block for 0x400133, 41 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x78]
0x400137:	add	rax, 0x63
0x40013b:	mov	byte ptr [rax], 0
0x40013e:	mov	rax, qword ptr [rbp - 0x78]
0x400142:	mov	qword ptr [rbp - 0x80], rax
0x400146:	lea	rax, [rbp - 0x70]
0x40014a:	mov	edx, 0x63
0x40014f:	mov	esi, 0x43
0x400154:	mov	rdi, rax
0x400157:	call	0x500008
<Block for 0x40015c, 25 bytes>
0x40015c:	mov	byte ptr [rbp - 0xd], 0
0x400160:	mov	qword ptr [rbp - 0x88], 0
0x40016b:	cmp	qword ptr [rbp - 0x88], 0x63
0x400173:	ja	0x4001a0
<Block for 0x400175, 43 bytes>
0x400175:	mov	rdx, qword ptr [rbp - 0x80]
0x400179:	mov	rax, qword ptr [rbp - 0x88]
0x400180:	add	rdx, rax
0x400183:	lea	rcx, [rbp - 0x70]
0x400187:	mov	rax, qword ptr [rbp - 0x88]
0x40018e:	add	rax, rcx
0x400191:	movzx	eax, byte ptr [rax]
0x400194:	mov	byte ptr [rdx], al
0x400196:	add	qword ptr [rbp - 0x88], 1
0x40019e:	jmp	0x40016b
<Block for 0x4001a0, 23 bytes>
0x4001a0:	mov	rax, qword ptr [rbp - 0x80]
0x4001a4:	add	rax, 0x63
0x4001a8:	mov	byte ptr [rax], 0
0x4001ab:	mov	rax, qword ptr [rbp - 0x80]
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500010
<Block for 0x40016b, 10 bytes>
0x40016b:	cmp	qword ptr [rbp - 0x88], 0x63
0x400173:	ja	0x4001a0
<Block for 0x4001b7, 16 bytes>
0x4001b7:	nop	
0x4001b8:	mov	rax, qword ptr [rbp - 8]
0x4001bc:	xor	rax, qword ptr fs:[0x28]
0x4001c5:	je	0x4001cc
<Block for 0x4001cc, 2 bytes>
0x4001cc:	leave	
0x4001cd:	ret	
<Block for 0x4001c7, 5 bytes>
0x4001c7:	call	0x500018
