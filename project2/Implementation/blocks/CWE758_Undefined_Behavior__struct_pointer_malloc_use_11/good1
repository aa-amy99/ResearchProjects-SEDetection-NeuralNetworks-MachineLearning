<Block for 0x40006e, 22 bytes>
0x40006e:	endbr64	
0x400072:	push	rbp
0x400073:	mov	rbp, rsp
0x400076:	sub	rsp, 0x20
0x40007a:	mov	eax, 0
0x40007f:	call	0x500028
<Block for 0x400084, 4 bytes>
0x400084:	test	eax, eax
0x400086:	je	0x400099
<Block for 0x400099, 10 bytes>
0x400099:	mov	edi, 8
0x40009e:	call	0x500008
<Block for 0x400088, 12 bytes>
0x400088:	lea	rdi, [rip + 0x16d]
0x40008f:	call	0x500030
<Block for 0x4000a3, 11 bytes>
0x4000a3:	mov	qword ptr [rbp - 0x18], rax
0x4000a7:	cmp	qword ptr [rbp - 0x18], 0
0x4000ac:	jne	0x4000b8
<Block for 0x400094, 5 bytes>
0x400094:	jmp	0x400129
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 0xffffffff
0x4000b3:	call	0x500010
<Block for 0x4000b8, 10 bytes>
0x4000b8:	mov	edi, 8
0x4000bd:	call	0x500008
<Block for 0x400129, 3 bytes>
0x400129:	nop	
0x40012a:	leave	
0x40012b:	ret	
<Block for 0x4000c2, 11 bytes>
0x4000c2:	mov	qword ptr [rbp - 0x10], rax
0x4000c6:	cmp	qword ptr [rbp - 0x10], 0
0x4000cb:	jne	0x4000d7
<Block for 0x4000cd, 10 bytes>
0x4000cd:	mov	edi, 0xffffffff
0x4000d2:	call	0x500010
<Block for 0x4000d7, 56 bytes>
0x4000d7:	mov	rax, qword ptr [rbp - 0x10]
0x4000db:	mov	dword ptr [rax], 5
0x4000e1:	mov	rax, qword ptr [rbp - 0x10]
0x4000e5:	mov	dword ptr [rax + 4], 6
0x4000ec:	mov	rax, qword ptr [rbp - 0x18]
0x4000f0:	mov	rdx, qword ptr [rbp - 0x10]
0x4000f4:	mov	qword ptr [rax], rdx
0x4000f7:	mov	rax, qword ptr [rbp - 0x18]
0x4000fb:	mov	rax, qword ptr [rax]
0x4000fe:	mov	qword ptr [rbp - 8], rax
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	mov	eax, dword ptr [rax]
0x400108:	mov	edi, eax
0x40010a:	call	0x500020
<Block for 0x40010f, 14 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	eax, dword ptr [rax + 4]
0x400116:	mov	edi, eax
0x400118:	call	0x500020
<Block for 0x40011d, 12 bytes>
0x40011d:	mov	rax, qword ptr [rbp - 0x18]
0x400121:	mov	rdi, rax
0x400124:	call	0x500018
