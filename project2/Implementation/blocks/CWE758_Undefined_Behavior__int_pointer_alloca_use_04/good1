<Block for 0x4000dc, 36 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x20
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	eax, 0
0x4000fc:	test	eax, eax
0x4000fe:	je	0x400111
<Block for 0x400111, 54 bytes>
0x400111:	mov	eax, 0x10
0x400116:	sub	rax, 1
0x40011a:	add	rax, 0x10
0x40011e:	mov	esi, 0x10
0x400123:	mov	edx, 0
0x400128:	div	rsi
0x40012b:	imul	rax, rax, 0x10
0x40012f:	mov	rdx, rax
0x400132:	and	rdx, 0xfffffffffffff000
0x400139:	mov	rcx, rsp
0x40013c:	sub	rcx, rdx
0x40013f:	mov	rdx, rcx
0x400142:	cmp	rsp, rdx
0x400145:	je	0x400159
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x229]
0x400107:	call	0x500010
<Block for 0x400159, 26 bytes>
0x400159:	mov	rdx, rax
0x40015c:	and	edx, 0xfff
0x400162:	sub	rsp, rdx
0x400165:	mov	rdx, rax
0x400168:	and	edx, 0xfff
0x40016e:	test	rdx, rdx
0x400171:	je	0x400183
<Block for 0x400147, 18 bytes>
0x400147:	sub	rsp, 0x1000
0x40014e:	or	qword ptr [rsp + 0xff8], 0
0x400157:	jmp	0x400142
<Block for 0x40010c, 5 bytes>
0x40010c:	jmp	0x4001e2
<Block for 0x400183, 29 bytes>
0x400183:	mov	rax, rsp
0x400186:	add	rax, 0xf
0x40018a:	shr	rax, 4
0x40018e:	shl	rax, 4
0x400192:	mov	qword ptr [rbp - 0x20], rax
0x400196:	mov	edi, 4
0x40019b:	call	0x500018
<Block for 0x400173, 45 bytes>
0x400173:	and	eax, 0xfff
0x400178:	sub	rax, 8
0x40017c:	add	rax, rsp
0x40017f:	or	qword ptr [rax], 0
0x400183:	mov	rax, rsp
0x400186:	add	rax, 0xf
0x40018a:	shr	rax, 4
0x40018e:	shl	rax, 4
0x400192:	mov	qword ptr [rbp - 0x20], rax
0x400196:	mov	edi, 4
0x40019b:	call	0x500018
<Block for 0x400142, 5 bytes>
0x400142:	cmp	rsp, rdx
0x400145:	je	0x400159
<Block for 0x4001e2, 16 bytes>
0x4001e2:	nop	
0x4001e3:	mov	rax, qword ptr [rbp - 8]
0x4001e7:	xor	rax, qword ptr fs:[0x28]
0x4001f0:	je	0x4001f7
<Block for 0x4001a0, 11 bytes>
0x4001a0:	mov	qword ptr [rbp - 0x18], rax
0x4001a4:	cmp	qword ptr [rbp - 0x18], 0
0x4001a9:	jne	0x4001b5
<Block for 0x4001f7, 2 bytes>
0x4001f7:	leave	
0x4001f8:	ret	
<Block for 0x4001f2, 5 bytes>
0x4001f2:	call	0x500008
<Block for 0x4001ab, 10 bytes>
0x4001ab:	mov	edi, 0xffffffff
0x4001b0:	call	0x500020
<Block for 0x4001b5, 45 bytes>
0x4001b5:	mov	rax, qword ptr [rbp - 0x18]
0x4001b9:	mov	dword ptr [rax], 5
0x4001bf:	mov	rax, qword ptr [rbp - 0x20]
0x4001c3:	mov	rdx, qword ptr [rbp - 0x18]
0x4001c7:	mov	qword ptr [rax], rdx
0x4001ca:	mov	rax, qword ptr [rbp - 0x20]
0x4001ce:	mov	rax, qword ptr [rax]
0x4001d1:	mov	qword ptr [rbp - 0x10], rax
0x4001d5:	mov	rax, qword ptr [rbp - 0x10]
0x4001d9:	mov	eax, dword ptr [rax]
0x4001db:	mov	edi, eax
0x4001dd:	call	0x500000
