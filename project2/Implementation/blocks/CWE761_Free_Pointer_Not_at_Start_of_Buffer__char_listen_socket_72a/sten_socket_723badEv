<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x70]
0x400023:	mov	rdi, rax
0x400026:	call	0x4007a8
<Block for 0x40002b, 10 bytes>
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 19 bytes>
0x400035:	mov	qword ptr [rbp - 0x90], rax
0x40003c:	mov	rax, qword ptr [rbp - 0x90]
0x400043:	test	rax, rax
0x400046:	jne	0x400052
<Block for 0x400048, 10 bytes>
0x400048:	mov	edi, 0xffffffff
0x40004d:	call	0x500008
<Block for 0x400052, 45 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x90]
0x400059:	mov	byte ptr [rax], 0
0x40005c:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400066:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400070:	mov	rax, qword ptr [rbp - 0x90]
0x400077:	mov	rdi, rax
0x40007a:	call	0x500010
<Block for 0x40007f, 24 bytes>
0x40007f:	mov	qword ptr [rbp - 0x80], rax
0x400083:	mov	edx, 6
0x400088:	mov	esi, 1
0x40008d:	mov	edi, 2
0x400092:	call	0x500018
<Block for 0x400097, 19 bytes>
0x400097:	mov	dword ptr [rbp - 0x98], eax
0x40009d:	cmp	dword ptr [rbp - 0x98], -1
0x4000a4:	je	0x4001fc
<Block for 0x4001fc, 3 bytes>
0x4001fc:	nop	
0x4001fd:	jmp	0x400206
<Block for 0x4000aa, 22 bytes>
0x4000aa:	lea	rax, [rbp - 0x30]
0x4000ae:	mov	edx, 0x10
0x4000b3:	mov	esi, 0
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500020
<Block for 0x400206, 9 bytes>
0x400206:	cmp	dword ptr [rbp - 0x98], -1
0x40020d:	je	0x40021c
<Block for 0x4000c0, 23 bytes>
0x4000c0:	mov	word ptr [rbp - 0x30], 2
0x4000c6:	mov	dword ptr [rbp - 0x2c], 0
0x4000cd:	mov	edi, 0x6987
0x4000d2:	call	0x500028
<Block for 0x40021c, 9 bytes>
0x40021c:	cmp	dword ptr [rbp - 0x9c], -1
0x400223:	je	0x400232
<Block for 0x40020f, 13 bytes>
0x40020f:	mov	eax, dword ptr [rbp - 0x98]
0x400215:	mov	edi, eax
0x400217:	call	0x500058
<Block for 0x4000d7, 29 bytes>
0x4000d7:	mov	word ptr [rbp - 0x2e], ax
0x4000db:	lea	rcx, [rbp - 0x30]
0x4000df:	mov	eax, dword ptr [rbp - 0x98]
0x4000e5:	mov	edx, 0x10
0x4000ea:	mov	rsi, rcx
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500030
<Block for 0x400232, 12 bytes>
0x400232:	lea	rax, [rbp - 0x70]
0x400236:	mov	rdi, rax
0x400239:	call	0x40093a
<Block for 0x400225, 13 bytes>
0x400225:	mov	eax, dword ptr [rbp - 0x9c]
0x40022b:	mov	edi, eax
0x40022d:	call	0x500058
<Block for 0x4000f4, 14 bytes>
0x4000f4:	cmp	eax, -1
0x4000f7:	sete	al
0x4000fa:	test	al, al
0x4000fc:	jne	0x4001ff
<Block for 0x40023e, 29 bytes>
0x40023e:	mov	qword ptr [rbp - 0x88], rax
0x400245:	lea	rdx, [rbp - 0x88]
0x40024c:	lea	rax, [rbp - 0x50]
0x400250:	mov	rsi, rdx
0x400253:	mov	rdi, rax
0x400256:	call	0x40098a
<Block for 0x400102, 18 bytes>
0x400102:	mov	eax, dword ptr [rbp - 0x98]
0x400108:	mov	esi, 5
0x40010d:	mov	edi, eax
0x40010f:	call	0x500038
<Block for 0x4001ff, 3 bytes>
0x4001ff:	nop	
0x400200:	jmp	0x400206
<Block for 0x40025b, 31 bytes>
0x40025b:	lea	rdx, [rbp - 0x90]
0x400262:	mov	rsi, qword ptr [rbp - 0x50]
0x400266:	lea	rax, [rbp - 0x70]
0x40026a:	mov	rcx, rdx
0x40026d:	mov	edx, 1
0x400272:	mov	rdi, rax
0x400275:	call	0x4009b8
<Block for 0x400114, 14 bytes>
0x400114:	cmp	eax, -1
0x400117:	sete	al
0x40011a:	test	al, al
0x40011c:	jne	0x400202
<Block for 0x40027a, 12 bytes>
0x40027a:	lea	rax, [rbp - 0x70]
0x40027e:	mov	rdi, rax
0x400281:	call	0x40093a
<Block for 0x400122, 23 bytes>
0x400122:	mov	eax, dword ptr [rbp - 0x98]
0x400128:	mov	edx, 0
0x40012d:	mov	esi, 0
0x400132:	mov	edi, eax
0x400134:	call	0x500040
<Block for 0x400202, 3 bytes>
0x400202:	nop	
0x400203:	jmp	0x400206
<Block for 0x400286, 29 bytes>
0x400286:	mov	qword ptr [rbp - 0x88], rax
0x40028d:	lea	rdx, [rbp - 0x88]
0x400294:	lea	rax, [rbp - 0x50]
0x400298:	mov	rsi, rdx
0x40029b:	mov	rdi, rax
0x40029e:	call	0x40098a
<Block for 0x400139, 19 bytes>
0x400139:	mov	dword ptr [rbp - 0x9c], eax
0x40013f:	cmp	dword ptr [rbp - 0x9c], -1
0x400146:	je	0x400205
<Block for 0x4002a3, 31 bytes>
0x4002a3:	lea	rdx, [rbp - 0x90]
0x4002aa:	mov	rsi, qword ptr [rbp - 0x50]
0x4002ae:	lea	rax, [rbp - 0x70]
0x4002b2:	mov	rcx, rdx
0x4002b5:	mov	edx, 1
0x4002ba:	mov	rdi, rax
0x4002bd:	call	0x4009b8
<Block for 0x40014c, 45 bytes>
0x40014c:	mov	eax, 0x63
0x400151:	sub	rax, qword ptr [rbp - 0x80]
0x400155:	mov	rdx, rax
0x400158:	mov	rcx, qword ptr [rbp - 0x90]
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	lea	rsi, [rcx + rax]
0x400167:	mov	eax, dword ptr [rbp - 0x9c]
0x40016d:	mov	ecx, 0
0x400172:	mov	edi, eax
0x400174:	call	0x500048
<Block for 0x400205, 1 bytes>
0x400205:	nop	
<Block for 0x4002c2, 12 bytes>
0x4002c2:	lea	rax, [rbp - 0x70]
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x40093a
<Block for 0x400179, 15 bytes>
0x400179:	mov	dword ptr [rbp - 0x94], eax
0x40017f:	cmp	dword ptr [rbp - 0x94], -1
0x400186:	je	0x400206
<Block for 0x4002ce, 29 bytes>
0x4002ce:	mov	qword ptr [rbp - 0x88], rax
0x4002d5:	lea	rdx, [rbp - 0x88]
0x4002dc:	lea	rax, [rbp - 0x50]
0x4002e0:	mov	rsi, rdx
0x4002e3:	mov	rdi, rax
0x4002e6:	call	0x40098a
<Block for 0x400188, 9 bytes>
0x400188:	cmp	dword ptr [rbp - 0x94], 0
0x40018f:	je	0x400206
<Block for 0x4002eb, 31 bytes>
0x4002eb:	lea	rdx, [rbp - 0x90]
0x4002f2:	mov	rsi, qword ptr [rbp - 0x50]
0x4002f6:	lea	rax, [rbp - 0x70]
0x4002fa:	mov	rcx, rdx
0x4002fd:	mov	edx, 1
0x400302:	mov	rdi, rax
0x400305:	call	0x4009b8
<Block for 0x400191, 49 bytes>
0x400191:	mov	rax, qword ptr [rbp - 0x90]
0x400198:	mov	edx, dword ptr [rbp - 0x94]
0x40019e:	movsxd	rcx, edx
0x4001a1:	mov	rdx, qword ptr [rbp - 0x80]
0x4001a5:	add	rdx, rcx
0x4001a8:	add	rax, rdx
0x4001ab:	mov	byte ptr [rax], 0
0x4001ae:	mov	rax, qword ptr [rbp - 0x90]
0x4001b5:	mov	esi, 0xd
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500050
<Block for 0x40030a, 19 bytes>
0x40030a:	lea	rdx, [rbp - 0x70]
0x40030e:	lea	rax, [rbp - 0x50]
0x400312:	mov	rsi, rdx
0x400315:	mov	rdi, rax
0x400318:	call	0x400a7e
<Block for 0x4001c2, 11 bytes>
0x4001c2:	mov	qword ptr [rbp - 0x78], rax
0x4001c6:	cmp	qword ptr [rbp - 0x78], 0
0x4001cb:	je	0x4001d4
<Block for 0x40031d, 12 bytes>
0x40031d:	lea	rax, [rbp - 0x50]
0x400321:	mov	rdi, rax
0x400324:	call	0x500060
<Block for 0x4001d4, 20 bytes>
0x4001d4:	mov	rax, qword ptr [rbp - 0x90]
0x4001db:	mov	esi, 0xa
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500050
<Block for 0x4001cd, 27 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x78]
0x4001d1:	mov	byte ptr [rax], 0
0x4001d4:	mov	rax, qword ptr [rbp - 0x90]
0x4001db:	mov	esi, 0xa
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500050
<Block for 0x400329, 12 bytes>
0x400329:	lea	rax, [rbp - 0x50]
0x40032d:	mov	rdi, rax
0x400330:	call	0x4008f2
<Block for 0x4001e8, 11 bytes>
0x4001e8:	mov	qword ptr [rbp - 0x78], rax
0x4001ec:	cmp	qword ptr [rbp - 0x78], 0
0x4001f1:	je	0x400206
<Block for 0x400335, 12 bytes>
0x400335:	lea	rax, [rbp - 0x70]
0x400339:	mov	rdi, rax
0x40033c:	call	0x4008f2
<Block for 0x4001f3, 9 bytes>
0x4001f3:	mov	rax, qword ptr [rbp - 0x78]
0x4001f7:	mov	byte ptr [rax], 0
0x4001fa:	jmp	0x400206
<Block for 0x400341, 16 bytes>
0x400341:	nop	
0x400342:	mov	rax, qword ptr [rbp - 0x18]
0x400346:	xor	rax, qword ptr fs:[0x28]
0x40034f:	je	0x40038b
<Block for 0x40038b, 10 bytes>
0x40038b:	add	rsp, 0x98
0x400392:	pop	rbx
0x400393:	pop	rbp
0x400394:	ret	
<Block for 0x400351, 2 bytes>
0x400351:	jmp	0x400386
<Block for 0x400386, 5 bytes>
0x400386:	call	0x500070
