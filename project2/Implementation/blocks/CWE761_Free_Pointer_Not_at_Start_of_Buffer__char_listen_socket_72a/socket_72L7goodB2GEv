<Block for 0x400395, 43 bytes>
0x400395:	endbr64	
0x400399:	push	rbp
0x40039a:	mov	rbp, rsp
0x40039d:	push	rbx
0x40039e:	sub	rsp, 0x98
0x4003a5:	mov	rax, qword ptr fs:[0x28]
0x4003ae:	mov	qword ptr [rbp - 0x18], rax
0x4003b2:	xor	eax, eax
0x4003b4:	lea	rax, [rbp - 0x70]
0x4003b8:	mov	rdi, rax
0x4003bb:	call	0x4007a8
<Block for 0x4003c0, 10 bytes>
0x4003c0:	mov	edi, 0x64
0x4003c5:	call	0x500000
<Block for 0x4003ca, 19 bytes>
0x4003ca:	mov	qword ptr [rbp - 0x90], rax
0x4003d1:	mov	rax, qword ptr [rbp - 0x90]
0x4003d8:	test	rax, rax
0x4003db:	jne	0x4003e7
<Block for 0x4003dd, 10 bytes>
0x4003dd:	mov	edi, 0xffffffff
0x4003e2:	call	0x500008
<Block for 0x4003e7, 45 bytes>
0x4003e7:	mov	rax, qword ptr [rbp - 0x90]
0x4003ee:	mov	byte ptr [rax], 0
0x4003f1:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4003fb:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400405:	mov	rax, qword ptr [rbp - 0x90]
0x40040c:	mov	rdi, rax
0x40040f:	call	0x500010
<Block for 0x400414, 24 bytes>
0x400414:	mov	qword ptr [rbp - 0x80], rax
0x400418:	mov	edx, 6
0x40041d:	mov	esi, 1
0x400422:	mov	edi, 2
0x400427:	call	0x500018
<Block for 0x40042c, 19 bytes>
0x40042c:	mov	dword ptr [rbp - 0x98], eax
0x400432:	cmp	dword ptr [rbp - 0x98], -1
0x400439:	je	0x400591
<Block for 0x400591, 3 bytes>
0x400591:	nop	
0x400592:	jmp	0x40059b
<Block for 0x40043f, 22 bytes>
0x40043f:	lea	rax, [rbp - 0x30]
0x400443:	mov	edx, 0x10
0x400448:	mov	esi, 0
0x40044d:	mov	rdi, rax
0x400450:	call	0x500020
<Block for 0x40059b, 9 bytes>
0x40059b:	cmp	dword ptr [rbp - 0x98], -1
0x4005a2:	je	0x4005b1
<Block for 0x400455, 23 bytes>
0x400455:	mov	word ptr [rbp - 0x30], 2
0x40045b:	mov	dword ptr [rbp - 0x2c], 0
0x400462:	mov	edi, 0x6987
0x400467:	call	0x500028
<Block for 0x4005b1, 9 bytes>
0x4005b1:	cmp	dword ptr [rbp - 0x9c], -1
0x4005b8:	je	0x4005c7
<Block for 0x4005a4, 13 bytes>
0x4005a4:	mov	eax, dword ptr [rbp - 0x98]
0x4005aa:	mov	edi, eax
0x4005ac:	call	0x500058
<Block for 0x40046c, 29 bytes>
0x40046c:	mov	word ptr [rbp - 0x2e], ax
0x400470:	lea	rcx, [rbp - 0x30]
0x400474:	mov	eax, dword ptr [rbp - 0x98]
0x40047a:	mov	edx, 0x10
0x40047f:	mov	rsi, rcx
0x400482:	mov	edi, eax
0x400484:	call	0x500030
<Block for 0x4005c7, 12 bytes>
0x4005c7:	lea	rax, [rbp - 0x70]
0x4005cb:	mov	rdi, rax
0x4005ce:	call	0x40093a
<Block for 0x4005ba, 13 bytes>
0x4005ba:	mov	eax, dword ptr [rbp - 0x9c]
0x4005c0:	mov	edi, eax
0x4005c2:	call	0x500058
<Block for 0x400489, 14 bytes>
0x400489:	cmp	eax, -1
0x40048c:	sete	al
0x40048f:	test	al, al
0x400491:	jne	0x400594
<Block for 0x4005d3, 29 bytes>
0x4005d3:	mov	qword ptr [rbp - 0x88], rax
0x4005da:	lea	rdx, [rbp - 0x88]
0x4005e1:	lea	rax, [rbp - 0x50]
0x4005e5:	mov	rsi, rdx
0x4005e8:	mov	rdi, rax
0x4005eb:	call	0x40098a
<Block for 0x400497, 18 bytes>
0x400497:	mov	eax, dword ptr [rbp - 0x98]
0x40049d:	mov	esi, 5
0x4004a2:	mov	edi, eax
0x4004a4:	call	0x500038
<Block for 0x400594, 3 bytes>
0x400594:	nop	
0x400595:	jmp	0x40059b
<Block for 0x4005f0, 31 bytes>
0x4005f0:	lea	rdx, [rbp - 0x90]
0x4005f7:	mov	rsi, qword ptr [rbp - 0x50]
0x4005fb:	lea	rax, [rbp - 0x70]
0x4005ff:	mov	rcx, rdx
0x400602:	mov	edx, 1
0x400607:	mov	rdi, rax
0x40060a:	call	0x4009b8
<Block for 0x4004a9, 14 bytes>
0x4004a9:	cmp	eax, -1
0x4004ac:	sete	al
0x4004af:	test	al, al
0x4004b1:	jne	0x400597
<Block for 0x40060f, 12 bytes>
0x40060f:	lea	rax, [rbp - 0x70]
0x400613:	mov	rdi, rax
0x400616:	call	0x40093a
<Block for 0x4004b7, 23 bytes>
0x4004b7:	mov	eax, dword ptr [rbp - 0x98]
0x4004bd:	mov	edx, 0
0x4004c2:	mov	esi, 0
0x4004c7:	mov	edi, eax
0x4004c9:	call	0x500040
<Block for 0x400597, 3 bytes>
0x400597:	nop	
0x400598:	jmp	0x40059b
<Block for 0x40061b, 29 bytes>
0x40061b:	mov	qword ptr [rbp - 0x88], rax
0x400622:	lea	rdx, [rbp - 0x88]
0x400629:	lea	rax, [rbp - 0x50]
0x40062d:	mov	rsi, rdx
0x400630:	mov	rdi, rax
0x400633:	call	0x40098a
<Block for 0x4004ce, 19 bytes>
0x4004ce:	mov	dword ptr [rbp - 0x9c], eax
0x4004d4:	cmp	dword ptr [rbp - 0x9c], -1
0x4004db:	je	0x40059a
<Block for 0x400638, 31 bytes>
0x400638:	lea	rdx, [rbp - 0x90]
0x40063f:	mov	rsi, qword ptr [rbp - 0x50]
0x400643:	lea	rax, [rbp - 0x70]
0x400647:	mov	rcx, rdx
0x40064a:	mov	edx, 1
0x40064f:	mov	rdi, rax
0x400652:	call	0x4009b8
<Block for 0x4004e1, 45 bytes>
0x4004e1:	mov	eax, 0x63
0x4004e6:	sub	rax, qword ptr [rbp - 0x80]
0x4004ea:	mov	rdx, rax
0x4004ed:	mov	rcx, qword ptr [rbp - 0x90]
0x4004f4:	mov	rax, qword ptr [rbp - 0x80]
0x4004f8:	lea	rsi, [rcx + rax]
0x4004fc:	mov	eax, dword ptr [rbp - 0x9c]
0x400502:	mov	ecx, 0
0x400507:	mov	edi, eax
0x400509:	call	0x500048
<Block for 0x40059a, 1 bytes>
0x40059a:	nop	
<Block for 0x400657, 12 bytes>
0x400657:	lea	rax, [rbp - 0x70]
0x40065b:	mov	rdi, rax
0x40065e:	call	0x40093a
<Block for 0x40050e, 15 bytes>
0x40050e:	mov	dword ptr [rbp - 0x94], eax
0x400514:	cmp	dword ptr [rbp - 0x94], -1
0x40051b:	je	0x40059b
<Block for 0x400663, 29 bytes>
0x400663:	mov	qword ptr [rbp - 0x88], rax
0x40066a:	lea	rdx, [rbp - 0x88]
0x400671:	lea	rax, [rbp - 0x50]
0x400675:	mov	rsi, rdx
0x400678:	mov	rdi, rax
0x40067b:	call	0x40098a
<Block for 0x40051d, 9 bytes>
0x40051d:	cmp	dword ptr [rbp - 0x94], 0
0x400524:	je	0x40059b
<Block for 0x400680, 31 bytes>
0x400680:	lea	rdx, [rbp - 0x90]
0x400687:	mov	rsi, qword ptr [rbp - 0x50]
0x40068b:	lea	rax, [rbp - 0x70]
0x40068f:	mov	rcx, rdx
0x400692:	mov	edx, 1
0x400697:	mov	rdi, rax
0x40069a:	call	0x4009b8
<Block for 0x400526, 49 bytes>
0x400526:	mov	rax, qword ptr [rbp - 0x90]
0x40052d:	mov	edx, dword ptr [rbp - 0x94]
0x400533:	movsxd	rcx, edx
0x400536:	mov	rdx, qword ptr [rbp - 0x80]
0x40053a:	add	rdx, rcx
0x40053d:	add	rax, rdx
0x400540:	mov	byte ptr [rax], 0
0x400543:	mov	rax, qword ptr [rbp - 0x90]
0x40054a:	mov	esi, 0xd
0x40054f:	mov	rdi, rax
0x400552:	call	0x500050
<Block for 0x40069f, 19 bytes>
0x40069f:	lea	rdx, [rbp - 0x70]
0x4006a3:	lea	rax, [rbp - 0x50]
0x4006a7:	mov	rsi, rdx
0x4006aa:	mov	rdi, rax
0x4006ad:	call	0x400a7e
<Block for 0x400557, 11 bytes>
0x400557:	mov	qword ptr [rbp - 0x78], rax
0x40055b:	cmp	qword ptr [rbp - 0x78], 0
0x400560:	je	0x400569
<Block for 0x4006b2, 12 bytes>
0x4006b2:	lea	rax, [rbp - 0x50]
0x4006b6:	mov	rdi, rax
0x4006b9:	call	0x500078
<Block for 0x400569, 20 bytes>
0x400569:	mov	rax, qword ptr [rbp - 0x90]
0x400570:	mov	esi, 0xa
0x400575:	mov	rdi, rax
0x400578:	call	0x500050
<Block for 0x400562, 27 bytes>
0x400562:	mov	rax, qword ptr [rbp - 0x78]
0x400566:	mov	byte ptr [rax], 0
0x400569:	mov	rax, qword ptr [rbp - 0x90]
0x400570:	mov	esi, 0xa
0x400575:	mov	rdi, rax
0x400578:	call	0x500050
<Block for 0x4006be, 12 bytes>
0x4006be:	lea	rax, [rbp - 0x50]
0x4006c2:	mov	rdi, rax
0x4006c5:	call	0x4008f2
<Block for 0x40057d, 11 bytes>
0x40057d:	mov	qword ptr [rbp - 0x78], rax
0x400581:	cmp	qword ptr [rbp - 0x78], 0
0x400586:	je	0x40059b
<Block for 0x4006ca, 12 bytes>
0x4006ca:	lea	rax, [rbp - 0x70]
0x4006ce:	mov	rdi, rax
0x4006d1:	call	0x4008f2
<Block for 0x400588, 9 bytes>
0x400588:	mov	rax, qword ptr [rbp - 0x78]
0x40058c:	mov	byte ptr [rax], 0
0x40058f:	jmp	0x40059b
<Block for 0x4006d6, 16 bytes>
0x4006d6:	nop	
0x4006d7:	mov	rax, qword ptr [rbp - 0x18]
0x4006db:	xor	rax, qword ptr fs:[0x28]
0x4006e4:	je	0x400720
<Block for 0x400720, 10 bytes>
0x400720:	add	rsp, 0x98
0x400727:	pop	rbx
0x400728:	pop	rbp
0x400729:	ret	
<Block for 0x4006e6, 2 bytes>
0x4006e6:	jmp	0x40071b
<Block for 0x40071b, 5 bytes>
0x40071b:	call	0x500070
