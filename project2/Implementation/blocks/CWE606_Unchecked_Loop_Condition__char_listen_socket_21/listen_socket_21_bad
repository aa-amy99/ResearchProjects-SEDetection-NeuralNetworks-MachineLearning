<Block for 0x40008b, 179 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0xb0
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	qword ptr [rbp - 0x70], 0
0x4000b1:	mov	qword ptr [rbp - 0x68], 0
0x4000b9:	mov	qword ptr [rbp - 0x60], 0
0x4000c1:	mov	qword ptr [rbp - 0x58], 0
0x4000c9:	mov	qword ptr [rbp - 0x50], 0
0x4000d1:	mov	qword ptr [rbp - 0x48], 0
0x4000d9:	mov	qword ptr [rbp - 0x40], 0
0x4000e1:	mov	qword ptr [rbp - 0x38], 0
0x4000e9:	mov	qword ptr [rbp - 0x30], 0
0x4000f1:	mov	qword ptr [rbp - 0x28], 0
0x4000f9:	mov	qword ptr [rbp - 0x20], 0
0x400101:	mov	qword ptr [rbp - 0x18], 0
0x400109:	mov	dword ptr [rbp - 0x10], 0
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	qword ptr [rbp - 0x98], rax
0x40011b:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400125:	mov	dword ptr [rbp - 0xa4], 0xffffffff
0x40012f:	mov	rax, qword ptr [rbp - 0x98]
0x400136:	mov	rdi, rax
0x400139:	call	0x500018
<Block for 0x40013e, 27 bytes>
0x40013e:	mov	qword ptr [rbp - 0x90], rax
0x400145:	mov	edx, 6
0x40014a:	mov	esi, 1
0x40014f:	mov	edi, 2
0x400154:	call	0x500020
<Block for 0x400159, 19 bytes>
0x400159:	mov	dword ptr [rbp - 0xa0], eax
0x40015f:	cmp	dword ptr [rbp - 0xa0], -1
0x400166:	je	0x4002d7
<Block for 0x4002d7, 3 bytes>
0x4002d7:	nop	
0x4002d8:	jmp	0x4002e1
<Block for 0x40016c, 22 bytes>
0x40016c:	lea	rax, [rbp - 0x80]
0x400170:	mov	edx, 0x10
0x400175:	mov	esi, 0
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500028
<Block for 0x4002e1, 9 bytes>
0x4002e1:	cmp	dword ptr [rbp - 0xa0], -1
0x4002e8:	je	0x4002f7
<Block for 0x400182, 23 bytes>
0x400182:	mov	word ptr [rbp - 0x80], 2
0x400188:	mov	dword ptr [rbp - 0x7c], 0
0x40018f:	mov	edi, 0x6987
0x400194:	call	0x500030
<Block for 0x4002f7, 9 bytes>
0x4002f7:	cmp	dword ptr [rbp - 0xa4], -1
0x4002fe:	je	0x40030d
<Block for 0x4002ea, 13 bytes>
0x4002ea:	mov	eax, dword ptr [rbp - 0xa0]
0x4002f0:	mov	edi, eax
0x4002f2:	call	0x500060
<Block for 0x400199, 29 bytes>
0x400199:	mov	word ptr [rbp - 0x7e], ax
0x40019d:	lea	rcx, [rbp - 0x80]
0x4001a1:	mov	eax, dword ptr [rbp - 0xa0]
0x4001a7:	mov	edx, 0x10
0x4001ac:	mov	rsi, rcx
0x4001af:	mov	edi, eax
0x4001b1:	call	0x500038
<Block for 0x40030d, 25 bytes>
0x40030d:	mov	dword ptr [rip + 0x83d], 1
0x400317:	mov	rax, qword ptr [rbp - 0x98]
0x40031e:	mov	rdi, rax
0x400321:	call	0x400000
<Block for 0x400300, 13 bytes>
0x400300:	mov	eax, dword ptr [rbp - 0xa4]
0x400306:	mov	edi, eax
0x400308:	call	0x500060
<Block for 0x4001b6, 9 bytes>
0x4001b6:	cmp	eax, -1
0x4001b9:	je	0x4002da
<Block for 0x400326, 16 bytes>
0x400326:	nop	
0x400327:	mov	rax, qword ptr [rbp - 8]
0x40032b:	xor	rax, qword ptr fs:[0x28]
0x400334:	je	0x40033b
<Block for 0x4002da, 3 bytes>
0x4002da:	nop	
0x4002db:	jmp	0x4002e1
<Block for 0x4001bf, 18 bytes>
0x4001bf:	mov	eax, dword ptr [rbp - 0xa0]
0x4001c5:	mov	esi, 5
0x4001ca:	mov	edi, eax
0x4001cc:	call	0x500040
<Block for 0x40033b, 2 bytes>
0x40033b:	leave	
0x40033c:	ret	
<Block for 0x400336, 5 bytes>
0x400336:	call	0x500010
<Block for 0x4001d1, 9 bytes>
0x4001d1:	cmp	eax, -1
0x4001d4:	je	0x4002dd
<Block for 0x4002dd, 3 bytes>
0x4002dd:	nop	
0x4002de:	jmp	0x4002e1
<Block for 0x4001da, 23 bytes>
0x4001da:	mov	eax, dword ptr [rbp - 0xa0]
0x4001e0:	mov	edx, 0
0x4001e5:	mov	esi, 0
0x4001ea:	mov	edi, eax
0x4001ec:	call	0x500048
<Block for 0x4001f1, 19 bytes>
0x4001f1:	mov	dword ptr [rbp - 0xa4], eax
0x4001f7:	cmp	dword ptr [rbp - 0xa4], -1
0x4001fe:	je	0x4002e0
<Block for 0x400204, 51 bytes>
0x400204:	mov	eax, 0x63
0x400209:	sub	rax, qword ptr [rbp - 0x90]
0x400210:	mov	rdx, rax
0x400213:	mov	rcx, qword ptr [rbp - 0x98]
0x40021a:	mov	rax, qword ptr [rbp - 0x90]
0x400221:	lea	rsi, [rcx + rax]
0x400225:	mov	eax, dword ptr [rbp - 0xa4]
0x40022b:	mov	ecx, 0
0x400230:	mov	edi, eax
0x400232:	call	0x500050
<Block for 0x4002e0, 1 bytes>
0x4002e0:	nop	
<Block for 0x400237, 19 bytes>
0x400237:	mov	dword ptr [rbp - 0x9c], eax
0x40023d:	cmp	dword ptr [rbp - 0x9c], -1
0x400244:	je	0x4002e1
<Block for 0x40024a, 13 bytes>
0x40024a:	cmp	dword ptr [rbp - 0x9c], 0
0x400251:	je	0x4002e1
<Block for 0x400257, 52 bytes>
0x400257:	mov	eax, dword ptr [rbp - 0x9c]
0x40025d:	movsxd	rdx, eax
0x400260:	mov	rax, qword ptr [rbp - 0x90]
0x400267:	add	rdx, rax
0x40026a:	mov	rax, qword ptr [rbp - 0x98]
0x400271:	add	rax, rdx
0x400274:	mov	byte ptr [rax], 0
0x400277:	mov	rax, qword ptr [rbp - 0x98]
0x40027e:	mov	esi, 0xd
0x400283:	mov	rdi, rax
0x400286:	call	0x500058
<Block for 0x40028b, 17 bytes>
0x40028b:	mov	qword ptr [rbp - 0x88], rax
0x400292:	cmp	qword ptr [rbp - 0x88], 0
0x40029a:	je	0x4002a6
<Block for 0x4002a6, 20 bytes>
0x4002a6:	mov	rax, qword ptr [rbp - 0x98]
0x4002ad:	mov	esi, 0xa
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500058
<Block for 0x40029c, 30 bytes>
0x40029c:	mov	rax, qword ptr [rbp - 0x88]
0x4002a3:	mov	byte ptr [rax], 0
0x4002a6:	mov	rax, qword ptr [rbp - 0x98]
0x4002ad:	mov	esi, 0xa
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500058
<Block for 0x4002ba, 17 bytes>
0x4002ba:	mov	qword ptr [rbp - 0x88], rax
0x4002c1:	cmp	qword ptr [rbp - 0x88], 0
0x4002c9:	je	0x4002e1
<Block for 0x4002cb, 12 bytes>
0x4002cb:	mov	rax, qword ptr [rbp - 0x88]
0x4002d2:	mov	byte ptr [rax], 0
0x4002d5:	jmp	0x4002e1
