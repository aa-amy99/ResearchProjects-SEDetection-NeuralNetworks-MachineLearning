<Block for 0x4009d9, 41 bytes>
0x4009d9:	endbr64	
0x4009dd:	push	rbp
0x4009de:	mov	rbp, rsp
0x4009e1:	sub	rsp, 0x30
0x4009e5:	mov	qword ptr [rbp - 0x28], rdi
0x4009e9:	mov	rax, qword ptr fs:[0x28]
0x4009f2:	mov	qword ptr [rbp - 8], rax
0x4009f6:	xor	eax, eax
0x4009f8:	mov	eax, dword ptr [rip + 0x162]
0x4009fe:	test	eax, eax
0x400a00:	je	0x400a4d
<Block for 0x400a4d, 16 bytes>
0x400a4d:	nop	
0x400a4e:	mov	rax, qword ptr [rbp - 8]
0x400a52:	xor	rax, qword ptr fs:[0x28]
0x400a5b:	je	0x400a62
<Block for 0x400a02, 28 bytes>
0x400a02:	lea	rdx, [rbp - 0x14]
0x400a06:	mov	rax, qword ptr [rbp - 0x28]
0x400a0a:	lea	rsi, [rip + 0x153]
0x400a11:	mov	rdi, rax
0x400a14:	mov	eax, 0
0x400a19:	call	0x500000
<Block for 0x400a62, 2 bytes>
0x400a62:	leave	
0x400a63:	ret	
<Block for 0x400a5d, 5 bytes>
0x400a5d:	call	0x500010
<Block for 0x400a1e, 5 bytes>
0x400a1e:	cmp	eax, 1
0x400a21:	jne	0x400a4d
<Block for 0x400a23, 16 bytes>
0x400a23:	mov	dword ptr [rbp - 0xc], 0
0x400a2a:	mov	dword ptr [rbp - 0x10], 0
0x400a31:	jmp	0x400a3b
<Block for 0x400a3b, 8 bytes>
0x400a3b:	mov	eax, dword ptr [rbp - 0x14]
0x400a3e:	cmp	dword ptr [rbp - 0x10], eax
0x400a41:	jl	0x400a33
<Block for 0x400a33, 16 bytes>
0x400a33:	add	dword ptr [rbp - 0xc], 1
0x400a37:	add	dword ptr [rbp - 0x10], 1
0x400a3b:	mov	eax, dword ptr [rbp - 0x14]
0x400a3e:	cmp	dword ptr [rbp - 0x10], eax
0x400a41:	jl	0x400a33
<Block for 0x400a43, 10 bytes>
0x400a43:	mov	eax, dword ptr [rbp - 0xc]
0x400a46:	mov	edi, eax
0x400a48:	call	0x500008
