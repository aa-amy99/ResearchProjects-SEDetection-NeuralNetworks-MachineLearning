<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 45 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	lea	rax, [rbp - 0xe0]
0x400042:	sub	rax, 8
0x400046:	mov	qword ptr [rbp - 0xe8], rax
0x40004d:	nop	
0x40004e:	lea	rax, [rbp - 0x70]
0x400052:	mov	edx, 0x63
0x400057:	mov	esi, 0x43
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500000
<Block for 0x400064, 17 bytes>
0x400064:	mov	byte ptr [rbp - 0xd], 0
0x400068:	mov	qword ptr [rbp - 0xf0], 0
0x400073:	jmp	0x4000a1
<Block for 0x4000a1, 10 bytes>
0x4000a1:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000a9:	jbe	0x400075
<Block for 0x400075, 54 bytes>
0x400075:	mov	rdx, qword ptr [rbp - 0xe8]
0x40007c:	mov	rax, qword ptr [rbp - 0xf0]
0x400083:	add	rax, rdx
0x400086:	movzx	eax, byte ptr [rax]
0x400089:	lea	rcx, [rbp - 0x70]
0x40008d:	mov	rdx, qword ptr [rbp - 0xf0]
0x400094:	add	rdx, rcx
0x400097:	mov	byte ptr [rdx], al
0x400099:	add	qword ptr [rbp - 0xf0], 1
0x4000a1:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000a9:	jbe	0x400075
<Block for 0x4000ab, 16 bytes>
0x4000ab:	mov	byte ptr [rbp - 0xd], 0
0x4000af:	lea	rax, [rbp - 0x70]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500008
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500010
