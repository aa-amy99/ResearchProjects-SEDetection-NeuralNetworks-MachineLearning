<Block for 0x4002ad, 44 bytes>
0x4002ad:	endbr64	
0x4002b1:	push	rbp
0x4002b2:	mov	rbp, rsp
0x4002b5:	push	r12
0x4002b7:	push	rbx
0x4002b8:	sub	rsp, 0x60
0x4002bc:	mov	rax, qword ptr fs:[0x28]
0x4002c5:	mov	qword ptr [rbp - 0x18], rax
0x4002c9:	xor	eax, eax
0x4002cb:	mov	eax, dword ptr [rip + 0x1bf]
0x4002d1:	test	eax, eax
0x4002d3:	je	0x4003f5
<Block for 0x4003f5, 16 bytes>
0x4003f5:	nop	
0x4003f6:	mov	rax, qword ptr [rbp - 0x18]
0x4003fa:	xor	rax, qword ptr fs:[0x28]
0x400403:	je	0x40040a
<Block for 0x4002d9, 12 bytes>
0x4002d9:	lea	rax, [rbp - 0x69]
0x4002dd:	mov	rdi, rax
0x4002e0:	call	0x500000
<Block for 0x40040a, 9 bytes>
0x40040a:	add	rsp, 0x60
0x40040e:	pop	rbx
0x40040f:	pop	r12
0x400411:	pop	rbp
0x400412:	ret	
<Block for 0x400405, 5 bytes>
0x400405:	call	0x500058
<Block for 0x4002e5, 23 bytes>
0x4002e5:	lea	rdx, [rbp - 0x69]
0x4002e9:	lea	rax, [rbp - 0x60]
0x4002ed:	lea	rsi, [rip + 0x1a9]
0x4002f4:	mov	rdi, rax
0x4002f7:	call	0x500008
<Block for 0x4002fc, 12 bytes>
0x4002fc:	lea	rax, [rbp - 0x69]
0x400300:	mov	rdi, rax
0x400303:	call	0x500010
<Block for 0x400308, 5 bytes>
0x400308:	call	0x500018
<Block for 0x40030d, 8 bytes>
0x40030d:	movsxd	rbx, eax
0x400310:	call	0x500018
<Block for 0x400315, 22 bytes>
0x400315:	movsxd	rdx, eax
0x400318:	lea	rax, [rbp - 0x40]
0x40031c:	lea	rsi, [rbp - 0x60]
0x400320:	mov	rcx, rbx
0x400323:	mov	rdi, rax
0x400326:	call	0x500020
<Block for 0x40032b, 12 bytes>
0x40032b:	lea	rax, [rbp - 0x40]
0x40032f:	mov	rdi, rax
0x400332:	call	0x500028
<Block for 0x400337, 8 bytes>
0x400337:	mov	rdi, rax
0x40033a:	call	0x500030
<Block for 0x40033f, 12 bytes>
0x40033f:	lea	rax, [rbp - 0x40]
0x400343:	mov	rdi, rax
0x400346:	call	0x500038
<Block for 0x40034b, 12 bytes>
0x40034b:	lea	rax, [rbp - 0x60]
0x40034f:	mov	rdi, rax
0x400352:	call	0x500038
<Block for 0x400357, 5 bytes>
0x400357:	jmp	0x4003f5
