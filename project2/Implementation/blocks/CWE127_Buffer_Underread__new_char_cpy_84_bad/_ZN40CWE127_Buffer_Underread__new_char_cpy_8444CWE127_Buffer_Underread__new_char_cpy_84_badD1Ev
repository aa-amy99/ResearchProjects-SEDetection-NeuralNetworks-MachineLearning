<Block for 0x400060, 62 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0xe0
0x40006f:	mov	qword ptr [rbp - 0xd8], rdi
0x400076:	mov	rax, qword ptr fs:[0x28]
0x40007f:	mov	qword ptr [rbp - 8], rax
0x400083:	xor	eax, eax
0x400085:	lea	rax, [rbp - 0xd0]
0x40008c:	mov	edx, 0xc7
0x400091:	mov	esi, 0x43
0x400096:	mov	rdi, rax
0x400099:	call	0x500008
<Block for 0x40009e, 32 bytes>
0x40009e:	mov	byte ptr [rbp - 9], 0
0x4000a2:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a9:	mov	rdx, qword ptr [rax]
0x4000ac:	lea	rax, [rbp - 0xd0]
0x4000b3:	mov	rsi, rdx
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x500010
<Block for 0x4000be, 15 bytes>
0x4000be:	lea	rax, [rbp - 0xd0]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500018
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 8]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x4000e2
<Block for 0x4000e2, 2 bytes>
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500020
