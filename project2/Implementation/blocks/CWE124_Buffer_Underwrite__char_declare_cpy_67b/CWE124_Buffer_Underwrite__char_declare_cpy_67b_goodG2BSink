<Block for 0x400080, 70 bytes>
0x400080:	endbr64	
0x400084:	push	rbp
0x400085:	mov	rbp, rsp
0x400088:	sub	rsp, 0x90
0x40008f:	mov	qword ptr [rbp - 0x88], rdi
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	rax, qword ptr [rbp - 0x88]
0x4000ac:	mov	qword ptr [rbp - 0x78], rax
0x4000b0:	lea	rax, [rbp - 0x70]
0x4000b4:	mov	edx, 0x63
0x4000b9:	mov	esi, 0x43
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500000
<Block for 0x4000c6, 23 bytes>
0x4000c6:	mov	byte ptr [rbp - 0xd], 0
0x4000ca:	lea	rdx, [rbp - 0x70]
0x4000ce:	mov	rax, qword ptr [rbp - 0x78]
0x4000d2:	mov	rsi, rdx
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500008
<Block for 0x4000dd, 12 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x78]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500010
<Block for 0x4000e9, 16 bytes>
0x4000e9:	nop	
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	xor	rax, qword ptr fs:[0x28]
0x4000f7:	je	0x4000fe
<Block for 0x4000fe, 2 bytes>
0x4000fe:	leave	
0x4000ff:	ret	
<Block for 0x4000f9, 5 bytes>
0x4000f9:	call	0x500018
