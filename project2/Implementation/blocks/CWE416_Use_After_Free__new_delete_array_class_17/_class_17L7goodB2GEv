<Block for 0x4000b4, 33 bytes>
0x4000b4:	endbr64	
0x4000b8:	push	rbp
0x4000b9:	mov	rbp, rsp
0x4000bc:	sub	rsp, 0x20
0x4000c0:	mov	qword ptr [rbp - 8], 0
0x4000c8:	mov	dword ptr [rbp - 0x18], 0
0x4000cf:	cmp	dword ptr [rbp - 0x18], 0
0x4000d3:	jg	0x400145
<Block for 0x4000d5, 10 bytes>
0x4000d5:	mov	edi, 0x320
0x4000da:	call	0x500000
<Block for 0x400145, 13 bytes>
0x400145:	mov	dword ptr [rbp - 0x14], 0
0x40014c:	cmp	dword ptr [rbp - 0x14], 0
0x400150:	jg	0x400158
<Block for 0x4000df, 19 bytes>
0x4000df:	mov	qword ptr [rbp - 8], rax
0x4000e3:	mov	qword ptr [rbp - 0x10], 0
0x4000eb:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000f0:	ja	0x40012c
<Block for 0x400152, 6 bytes>
0x400152:	add	dword ptr [rbp - 0x14], 1
0x400156:	jmp	0x40014c
<Block for 0x400158, 3 bytes>
0x400158:	nop	
0x400159:	leave	
0x40015a:	ret	
<Block for 0x4000f2, 58 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x10]
0x4000f6:	lea	rdx, [rax*8]
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	add	rax, rdx
0x400105:	mov	dword ptr [rax], 1
0x40010b:	mov	rax, qword ptr [rbp - 0x10]
0x40010f:	lea	rdx, [rax*8]
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	add	rax, rdx
0x40011e:	mov	dword ptr [rax + 4], 2
0x400125:	add	qword ptr [rbp - 0x10], 1
0x40012a:	jmp	0x4000eb
<Block for 0x40012c, 7 bytes>
0x40012c:	cmp	qword ptr [rbp - 8], 0
0x400131:	je	0x40013f
<Block for 0x40014c, 6 bytes>
0x40014c:	cmp	dword ptr [rbp - 0x14], 0
0x400150:	jg	0x400158
<Block for 0x4000eb, 7 bytes>
0x4000eb:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000f0:	ja	0x40012c
<Block for 0x40013f, 6 bytes>
0x40013f:	add	dword ptr [rbp - 0x18], 1
0x400143:	jmp	0x4000cf
<Block for 0x400133, 12 bytes>
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	mov	rdi, rax
0x40013a:	call	0x500008
<Block for 0x4000cf, 6 bytes>
0x4000cf:	cmp	dword ptr [rbp - 0x18], 0
0x4000d3:	jg	0x400145
