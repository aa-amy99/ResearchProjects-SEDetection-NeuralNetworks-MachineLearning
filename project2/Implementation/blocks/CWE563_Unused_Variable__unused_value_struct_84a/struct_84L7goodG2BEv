<Block for 0x4000a9, 48 bytes>
0x4000a9:	endbr64	
0x4000ad:	push	rbp
0x4000ae:	mov	rbp, rsp
0x4000b1:	push	r12
0x4000b3:	push	rbx
0x4000b4:	sub	rsp, 0x20
0x4000b8:	mov	rax, qword ptr fs:[0x28]
0x4000c1:	mov	qword ptr [rbp - 0x18], rax
0x4000c5:	xor	eax, eax
0x4000c7:	mov	rax, qword ptr [rbp - 0x28]
0x4000cb:	mov	qword ptr [rbp - 0x20], rax
0x4000cf:	mov	edi, 8
0x4000d4:	call	0x500000
<Block for 0x4000d9, 18 bytes>
0x4000d9:	mov	rbx, rax
0x4000dc:	mov	rax, qword ptr [rbp - 0x20]
0x4000e0:	mov	rsi, rax
0x4000e3:	mov	rdi, rbx
0x4000e6:	call	0x500030
<Block for 0x4000eb, 13 bytes>
0x4000eb:	mov	qword ptr [rbp - 0x30], rbx
0x4000ef:	mov	rbx, qword ptr [rbp - 0x30]
0x4000f3:	test	rbx, rbx
0x4000f6:	je	0x400134
<Block for 0x400134, 16 bytes>
0x400134:	nop	
0x400135:	mov	rax, qword ptr [rbp - 0x18]
0x400139:	xor	rax, qword ptr fs:[0x28]
0x400142:	je	0x400149
<Block for 0x4000f8, 8 bytes>
0x4000f8:	mov	rdi, rbx
0x4000fb:	call	0x500038
<Block for 0x400149, 9 bytes>
0x400149:	add	rsp, 0x20
0x40014d:	pop	rbx
0x40014e:	pop	r12
0x400150:	pop	rbp
0x400151:	ret	
<Block for 0x400144, 5 bytes>
0x400144:	call	0x500028
<Block for 0x400100, 13 bytes>
0x400100:	mov	esi, 8
0x400105:	mov	rdi, rbx
0x400108:	call	0x500018
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x400134
