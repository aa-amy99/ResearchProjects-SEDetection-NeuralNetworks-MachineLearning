<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	sub	rsp, 0x20
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 0x18], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	rax, qword ptr [rbp - 0x28]
0x400022:	mov	qword ptr [rbp - 0x20], rax
0x400026:	mov	edi, 8
0x40002b:	call	0x500000
<Block for 0x400030, 18 bytes>
0x400030:	mov	rbx, rax
0x400033:	mov	rax, qword ptr [rbp - 0x20]
0x400037:	mov	rsi, rax
0x40003a:	mov	rdi, rbx
0x40003d:	call	0x500008
<Block for 0x400042, 13 bytes>
0x400042:	mov	qword ptr [rbp - 0x30], rbx
0x400046:	mov	rbx, qword ptr [rbp - 0x30]
0x40004a:	test	rbx, rbx
0x40004d:	je	0x40008b
<Block for 0x40008b, 16 bytes>
0x40008b:	nop	
0x40008c:	mov	rax, qword ptr [rbp - 0x18]
0x400090:	xor	rax, qword ptr fs:[0x28]
0x400099:	je	0x4000a0
<Block for 0x40004f, 8 bytes>
0x40004f:	mov	rdi, rbx
0x400052:	call	0x500010
<Block for 0x4000a0, 9 bytes>
0x4000a0:	add	rsp, 0x20
0x4000a4:	pop	rbx
0x4000a5:	pop	r12
0x4000a7:	pop	rbp
0x4000a8:	ret	
<Block for 0x40009b, 5 bytes>
0x40009b:	call	0x500028
<Block for 0x400057, 13 bytes>
0x400057:	mov	esi, 8
0x40005c:	mov	rdi, rbx
0x40005f:	call	0x500018
<Block for 0x400064, 2 bytes>
0x400064:	jmp	0x40008b
