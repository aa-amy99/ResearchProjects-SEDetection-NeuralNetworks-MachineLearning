<Block for 0x400152, 48 bytes>
0x400152:	endbr64	
0x400156:	push	rbp
0x400157:	mov	rbp, rsp
0x40015a:	push	r12
0x40015c:	push	rbx
0x40015d:	sub	rsp, 0x20
0x400161:	mov	rax, qword ptr fs:[0x28]
0x40016a:	mov	qword ptr [rbp - 0x18], rax
0x40016e:	xor	eax, eax
0x400170:	mov	rax, qword ptr [rbp - 0x28]
0x400174:	mov	qword ptr [rbp - 0x20], rax
0x400178:	mov	edi, 8
0x40017d:	call	0x500000
<Block for 0x400182, 18 bytes>
0x400182:	mov	rbx, rax
0x400185:	mov	rax, qword ptr [rbp - 0x20]
0x400189:	mov	rsi, rax
0x40018c:	mov	rdi, rbx
0x40018f:	call	0x500040
<Block for 0x400194, 13 bytes>
0x400194:	mov	qword ptr [rbp - 0x30], rbx
0x400198:	mov	rbx, qword ptr [rbp - 0x30]
0x40019c:	test	rbx, rbx
0x40019f:	je	0x4001dd
<Block for 0x4001dd, 16 bytes>
0x4001dd:	nop	
0x4001de:	mov	rax, qword ptr [rbp - 0x18]
0x4001e2:	xor	rax, qword ptr fs:[0x28]
0x4001eb:	je	0x4001f2
<Block for 0x4001a1, 8 bytes>
0x4001a1:	mov	rdi, rbx
0x4001a4:	call	0x500048
<Block for 0x4001f2, 9 bytes>
0x4001f2:	add	rsp, 0x20
0x4001f6:	pop	rbx
0x4001f7:	pop	r12
0x4001f9:	pop	rbp
0x4001fa:	ret	
<Block for 0x4001ed, 5 bytes>
0x4001ed:	call	0x500028
<Block for 0x4001a9, 13 bytes>
0x4001a9:	mov	esi, 8
0x4001ae:	mov	rdi, rbx
0x4001b1:	call	0x500018
<Block for 0x4001b6, 2 bytes>
0x4001b6:	jmp	0x4001dd
