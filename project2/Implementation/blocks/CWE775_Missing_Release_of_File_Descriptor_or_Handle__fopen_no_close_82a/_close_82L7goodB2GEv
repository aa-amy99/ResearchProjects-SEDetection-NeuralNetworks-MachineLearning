<Block for 0x40007d, 40 bytes>
0x40007d:	endbr64	
0x400081:	push	rbp
0x400082:	mov	rbp, rsp
0x400085:	push	rbx
0x400086:	sub	rsp, 0x18
0x40008a:	mov	qword ptr [rbp - 0x20], 0
0x400092:	lea	rsi, [rip + 0xbc]
0x400099:	lea	rdi, [rip + 0xb8]
0x4000a0:	call	0x500000
<Block for 0x4000a5, 14 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x20], rax
0x4000a9:	mov	edi, 8
0x4000ae:	call	0x500008
<Block for 0x4000b3, 11 bytes>
0x4000b3:	mov	rbx, rax
0x4000b6:	mov	rdi, rbx
0x4000b9:	call	0x40016c
<Block for 0x4000be, 30 bytes>
0x4000be:	mov	qword ptr [rbp - 0x18], rbx
0x4000c2:	mov	rax, qword ptr [rbp - 0x18]
0x4000c6:	mov	rax, qword ptr [rax]
0x4000c9:	mov	rcx, qword ptr [rax]
0x4000cc:	mov	rdx, qword ptr [rbp - 0x20]
0x4000d0:	mov	rax, qword ptr [rbp - 0x18]
0x4000d4:	mov	rsi, rdx
0x4000d7:	mov	rdi, rax
0x4000da:	call	rcx
<Block for 0x4000dc, 9 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x18]
0x4000e0:	test	rax, rax
0x4000e3:	je	0x4000f2
<Block for 0x4000f2, 8 bytes>
0x4000f2:	nop	
0x4000f3:	add	rsp, 0x18
0x4000f7:	pop	rbx
0x4000f8:	pop	rbp
0x4000f9:	ret	
<Block for 0x4000e5, 13 bytes>
0x4000e5:	mov	esi, 8
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500010
