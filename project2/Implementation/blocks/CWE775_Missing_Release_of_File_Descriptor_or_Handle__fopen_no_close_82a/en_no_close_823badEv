<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	qword ptr [rbp - 0x20], 0
0x400015:	lea	rsi, [rip + 0x139]
0x40001c:	lea	rdi, [rip + 0x135]
0x400023:	call	0x500000
<Block for 0x400028, 14 bytes>
0x400028:	mov	qword ptr [rbp - 0x20], rax
0x40002c:	mov	edi, 8
0x400031:	call	0x500008
<Block for 0x400036, 11 bytes>
0x400036:	mov	rbx, rax
0x400039:	mov	rdi, rbx
0x40003c:	call	0x400128
<Block for 0x400041, 30 bytes>
0x400041:	mov	qword ptr [rbp - 0x18], rbx
0x400045:	mov	rax, qword ptr [rbp - 0x18]
0x400049:	mov	rax, qword ptr [rax]
0x40004c:	mov	rcx, qword ptr [rax]
0x40004f:	mov	rdx, qword ptr [rbp - 0x20]
0x400053:	mov	rax, qword ptr [rbp - 0x18]
0x400057:	mov	rsi, rdx
0x40005a:	mov	rdi, rax
0x40005d:	call	rcx
<Block for 0x40005f, 9 bytes>
0x40005f:	mov	rax, qword ptr [rbp - 0x18]
0x400063:	test	rax, rax
0x400066:	je	0x400075
<Block for 0x400075, 8 bytes>
0x400075:	nop	
0x400076:	add	rsp, 0x18
0x40007a:	pop	rbx
0x40007b:	pop	rbp
0x40007c:	ret	
<Block for 0x400068, 13 bytes>
0x400068:	mov	esi, 8
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
