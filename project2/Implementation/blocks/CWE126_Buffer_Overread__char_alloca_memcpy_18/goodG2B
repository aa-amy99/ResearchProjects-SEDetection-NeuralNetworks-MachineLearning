<Block for 0x4001e6, 84 bytes>
0x4001e6:	endbr64	
0x4001ea:	push	rbp
0x4001eb:	mov	rbp, rsp
0x4001ee:	sub	rsp, 0x90
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	xor	eax, eax
0x400204:	mov	eax, 0x10
0x400209:	sub	rax, 1
0x40020d:	add	rax, 0x3a
0x400211:	mov	ecx, 0x10
0x400216:	mov	edx, 0
0x40021b:	div	rcx
0x40021e:	imul	rax, rax, 0x10
0x400222:	mov	rdx, rax
0x400225:	and	rdx, 0xfffffffffffff000
0x40022c:	mov	rcx, rsp
0x40022f:	sub	rcx, rdx
0x400232:	mov	rdx, rcx
0x400235:	cmp	rsp, rdx
0x400238:	je	0x40024c
<Block for 0x40024c, 26 bytes>
0x40024c:	mov	rdx, rax
0x40024f:	and	edx, 0xfff
0x400255:	sub	rsp, rdx
0x400258:	mov	rdx, rax
0x40025b:	and	edx, 0xfff
0x400261:	test	rdx, rdx
0x400264:	je	0x400276
<Block for 0x40023a, 18 bytes>
0x40023a:	sub	rsp, 0x1000
0x400241:	or	qword ptr [rsp + 0xff8], 0
0x40024a:	jmp	0x400235
<Block for 0x400276, 76 bytes>
0x400276:	mov	rax, rsp
0x400279:	add	rax, 0xf
0x40027d:	shr	rax, 4
0x400281:	shl	rax, 4
0x400285:	mov	qword ptr [rbp - 0x88], rax
0x40028c:	mov	eax, 0x10
0x400291:	sub	rax, 1
0x400295:	add	rax, 0x6c
0x400299:	mov	edi, 0x10
0x40029e:	mov	edx, 0
0x4002a3:	div	rdi
0x4002a6:	imul	rax, rax, 0x10
0x4002aa:	mov	rdx, rax
0x4002ad:	and	rdx, 0xfffffffffffff000
0x4002b4:	mov	rsi, rsp
0x4002b7:	sub	rsi, rdx
0x4002ba:	mov	rdx, rsi
0x4002bd:	cmp	rsp, rdx
0x4002c0:	je	0x4002d4
<Block for 0x400266, 92 bytes>
0x400266:	and	eax, 0xfff
0x40026b:	sub	rax, 8
0x40026f:	add	rax, rsp
0x400272:	or	qword ptr [rax], 0
0x400276:	mov	rax, rsp
0x400279:	add	rax, 0xf
0x40027d:	shr	rax, 4
0x400281:	shl	rax, 4
0x400285:	mov	qword ptr [rbp - 0x88], rax
0x40028c:	mov	eax, 0x10
0x400291:	sub	rax, 1
0x400295:	add	rax, 0x6c
0x400299:	mov	edi, 0x10
0x40029e:	mov	edx, 0
0x4002a3:	div	rdi
0x4002a6:	imul	rax, rax, 0x10
0x4002aa:	mov	rdx, rax
0x4002ad:	and	rdx, 0xfffffffffffff000
0x4002b4:	mov	rsi, rsp
0x4002b7:	sub	rsi, rdx
0x4002ba:	mov	rdx, rsi
0x4002bd:	cmp	rsp, rdx
0x4002c0:	je	0x4002d4
<Block for 0x400235, 5 bytes>
0x400235:	cmp	rsp, rdx
0x400238:	je	0x40024c
<Block for 0x4002d4, 26 bytes>
0x4002d4:	mov	rdx, rax
0x4002d7:	and	edx, 0xfff
0x4002dd:	sub	rsp, rdx
0x4002e0:	mov	rdx, rax
0x4002e3:	and	edx, 0xfff
0x4002e9:	test	rdx, rdx
0x4002ec:	je	0x4002fe
<Block for 0x4002c2, 18 bytes>
0x4002c2:	sub	rsp, 0x1000
0x4002c9:	or	qword ptr [rsp + 0xff8], 0
0x4002d2:	jmp	0x4002bd
<Block for 0x4002fe, 44 bytes>
0x4002fe:	mov	rax, rsp
0x400301:	add	rax, 0xf
0x400305:	shr	rax, 4
0x400309:	shl	rax, 4
0x40030d:	mov	qword ptr [rbp - 0x80], rax
0x400311:	mov	rax, qword ptr [rbp - 0x88]
0x400318:	mov	edx, 0x31
0x40031d:	mov	esi, 0x41
0x400322:	mov	rdi, rax
0x400325:	call	0x500000
<Block for 0x4002ee, 60 bytes>
0x4002ee:	and	eax, 0xfff
0x4002f3:	sub	rax, 8
0x4002f7:	add	rax, rsp
0x4002fa:	or	qword ptr [rax], 0
0x4002fe:	mov	rax, rsp
0x400301:	add	rax, 0xf
0x400305:	shr	rax, 4
0x400309:	shl	rax, 4
0x40030d:	mov	qword ptr [rbp - 0x80], rax
0x400311:	mov	rax, qword ptr [rbp - 0x88]
0x400318:	mov	edx, 0x31
0x40031d:	mov	esi, 0x41
0x400322:	mov	rdi, rax
0x400325:	call	0x500000
<Block for 0x4002bd, 5 bytes>
0x4002bd:	cmp	rsp, rdx
0x4002c0:	je	0x4002d4
<Block for 0x40032a, 36 bytes>
0x40032a:	mov	rax, qword ptr [rbp - 0x88]
0x400331:	add	rax, 0x31
0x400335:	mov	byte ptr [rax], 0
0x400338:	mov	rax, qword ptr [rbp - 0x80]
0x40033c:	mov	edx, 0x63
0x400341:	mov	esi, 0x41
0x400346:	mov	rdi, rax
0x400349:	call	0x500000
<Block for 0x40034e, 46 bytes>
0x40034e:	mov	rax, qword ptr [rbp - 0x80]
0x400352:	add	rax, 0x63
0x400356:	mov	byte ptr [rax], 0
0x400359:	nop	
0x40035a:	endbr64	
0x40035e:	mov	rax, qword ptr [rbp - 0x80]
0x400362:	mov	qword ptr [rbp - 0x78], rax
0x400366:	lea	rax, [rbp - 0x70]
0x40036a:	mov	edx, 0x63
0x40036f:	mov	esi, 0x43
0x400374:	mov	rdi, rax
0x400377:	call	0x500000
<Block for 0x40037c, 16 bytes>
0x40037c:	mov	byte ptr [rbp - 0xd], 0
0x400380:	lea	rax, [rbp - 0x70]
0x400384:	mov	rdi, rax
0x400387:	call	0x500008
<Block for 0x40038c, 22 bytes>
0x40038c:	mov	rdx, rax
0x40038f:	mov	rcx, qword ptr [rbp - 0x78]
0x400393:	lea	rax, [rbp - 0x70]
0x400397:	mov	rsi, rcx
0x40039a:	mov	rdi, rax
0x40039d:	call	0x500010
<Block for 0x4003a2, 16 bytes>
0x4003a2:	mov	byte ptr [rbp - 0xd], 0
0x4003a6:	lea	rax, [rbp - 0x70]
0x4003aa:	mov	rdi, rax
0x4003ad:	call	0x500018
<Block for 0x4003b2, 16 bytes>
0x4003b2:	nop	
0x4003b3:	mov	rax, qword ptr [rbp - 8]
0x4003b7:	xor	rax, qword ptr fs:[0x28]
0x4003c0:	je	0x4003c7
<Block for 0x4003c7, 2 bytes>
0x4003c7:	leave	
0x4003c8:	ret	
<Block for 0x4003c2, 5 bytes>
0x4003c2:	call	0x500020
