<Block for 0x400136, 43 bytes>
0x400136:	endbr64	
0x40013a:	push	rbp
0x40013b:	mov	rbp, rsp
0x40013e:	push	rbx
0x40013f:	sub	rsp, 0x88
0x400146:	mov	rax, qword ptr fs:[0x28]
0x40014f:	mov	qword ptr [rbp - 0x18], rax
0x400153:	xor	eax, eax
0x400155:	lea	rax, [rbp - 0x80]
0x400159:	mov	rdi, rax
0x40015c:	call	0x4003ac
<Block for 0x400161, 46 bytes>
0x400161:	mov	dword ptr [rbp - 0x88], 0
0x40016b:	mov	dword ptr [rbp - 0x84], 0
0x400175:	mov	dword ptr [rbp - 0x50], 0
0x40017c:	lea	rdx, [rbp - 0x50]
0x400180:	lea	rax, [rbp - 0x80]
0x400184:	mov	rsi, rdx
0x400187:	mov	rdi, rax
0x40018a:	call	0x400562
<Block for 0x40018f, 36 bytes>
0x40018f:	mov	rdx, qword ptr [rbp - 0x88]
0x400196:	mov	qword ptr [rax], rdx
0x400199:	mov	dword ptr [rbp - 0x50], 1
0x4001a0:	lea	rdx, [rbp - 0x50]
0x4001a4:	lea	rax, [rbp - 0x80]
0x4001a8:	mov	rsi, rdx
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x400562
<Block for 0x4001b3, 36 bytes>
0x4001b3:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ba:	mov	qword ptr [rax], rdx
0x4001bd:	mov	dword ptr [rbp - 0x50], 2
0x4001c4:	lea	rdx, [rbp - 0x50]
0x4001c8:	lea	rax, [rbp - 0x80]
0x4001cc:	mov	rsi, rdx
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x400562
<Block for 0x4001d7, 29 bytes>
0x4001d7:	mov	rdx, qword ptr [rbp - 0x88]
0x4001de:	mov	qword ptr [rax], rdx
0x4001e1:	lea	rdx, [rbp - 0x80]
0x4001e5:	lea	rax, [rbp - 0x50]
0x4001e9:	mov	rsi, rdx
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x4003ec
<Block for 0x4001f4, 12 bytes>
0x4001f4:	lea	rax, [rbp - 0x50]
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500018
<Block for 0x400200, 12 bytes>
0x400200:	lea	rax, [rbp - 0x50]
0x400204:	mov	rdi, rax
0x400207:	call	0x4003cc
<Block for 0x40020c, 12 bytes>
0x40020c:	lea	rax, [rbp - 0x80]
0x400210:	mov	rdi, rax
0x400213:	call	0x4003cc
<Block for 0x400218, 16 bytes>
0x400218:	nop	
0x400219:	mov	rax, qword ptr [rbp - 0x18]
0x40021d:	xor	rax, qword ptr fs:[0x28]
0x400226:	je	0x400262
<Block for 0x400262, 10 bytes>
0x400262:	add	rsp, 0x88
0x400269:	pop	rbx
0x40026a:	pop	rbp
0x40026b:	ret	
<Block for 0x400228, 2 bytes>
0x400228:	jmp	0x40025d
<Block for 0x40025d, 5 bytes>
0x40025d:	call	0x500010
