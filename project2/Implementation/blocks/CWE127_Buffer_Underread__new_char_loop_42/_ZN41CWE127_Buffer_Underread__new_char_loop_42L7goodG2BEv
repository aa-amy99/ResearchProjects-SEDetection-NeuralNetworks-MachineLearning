<Block for 0x400143, 47 bytes>
0x400143:	endbr64	
0x400147:	push	rbp
0x400148:	mov	rbp, rsp
0x40014b:	add	rsp, -0x80
0x40014f:	mov	rax, qword ptr fs:[0x28]
0x400158:	mov	qword ptr [rbp - 8], rax
0x40015c:	xor	eax, eax
0x40015e:	mov	qword ptr [rbp - 0x78], 0
0x400166:	mov	rax, qword ptr [rbp - 0x78]
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4000f6
<Block for 0x400172, 26 bytes>
0x400172:	mov	qword ptr [rbp - 0x78], rax
0x400176:	lea	rax, [rbp - 0x70]
0x40017a:	mov	edx, 0x63
0x40017f:	mov	esi, 0x43
0x400184:	mov	rdi, rax
0x400187:	call	0x500008
<Block for 0x40018c, 19 bytes>
0x40018c:	mov	byte ptr [rbp - 0xd], 0
0x400190:	mov	qword ptr [rbp - 0x80], 0
0x400198:	cmp	qword ptr [rbp - 0x80], 0x63
0x40019d:	ja	0x4001c1
<Block for 0x40019f, 34 bytes>
0x40019f:	mov	rdx, qword ptr [rbp - 0x78]
0x4001a3:	mov	rax, qword ptr [rbp - 0x80]
0x4001a7:	add	rax, rdx
0x4001aa:	movzx	eax, byte ptr [rax]
0x4001ad:	lea	rcx, [rbp - 0x70]
0x4001b1:	mov	rdx, qword ptr [rbp - 0x80]
0x4001b5:	add	rdx, rcx
0x4001b8:	mov	byte ptr [rdx], al
0x4001ba:	add	qword ptr [rbp - 0x80], 1
0x4001bf:	jmp	0x400198
<Block for 0x4001c1, 16 bytes>
0x4001c1:	mov	byte ptr [rbp - 0xd], 0
0x4001c5:	lea	rax, [rbp - 0x70]
0x4001c9:	mov	rdi, rax
0x4001cc:	call	0x500010
<Block for 0x400198, 7 bytes>
0x400198:	cmp	qword ptr [rbp - 0x80], 0x63
0x40019d:	ja	0x4001c1
<Block for 0x4001d1, 16 bytes>
0x4001d1:	nop	
0x4001d2:	mov	rax, qword ptr [rbp - 8]
0x4001d6:	xor	rax, qword ptr fs:[0x28]
0x4001df:	je	0x4001e6
<Block for 0x4001e6, 2 bytes>
0x4001e6:	leave	
0x4001e7:	ret	
<Block for 0x4001e1, 5 bytes>
0x4001e1:	call	0x500018
