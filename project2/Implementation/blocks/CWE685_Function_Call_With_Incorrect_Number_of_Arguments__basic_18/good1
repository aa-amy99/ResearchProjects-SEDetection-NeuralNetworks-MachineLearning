<Block for 0x400062, 70 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x70
0x40006e:	mov	rax, qword ptr fs:[0x28]
0x400077:	mov	qword ptr [rbp - 8], rax
0x40007b:	xor	eax, eax
0x40007d:	nop	
0x40007e:	endbr64	
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	lea	rcx, [rip + 0x53]
0x40008d:	lea	rdx, [rip + 0x4c]
0x400094:	lea	rsi, [rip + 0x49]
0x40009b:	mov	rdi, rax
0x40009e:	mov	eax, 0
0x4000a3:	call	0x500000
<Block for 0x4000a8, 12 bytes>
0x4000a8:	lea	rax, [rbp - 0x70]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500008
<Block for 0x4000b4, 16 bytes>
0x4000b4:	nop	
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	xor	rax, qword ptr fs:[0x28]
0x4000c2:	je	0x4000c9
<Block for 0x4000c9, 2 bytes>
0x4000c9:	leave	
0x4000ca:	ret	
<Block for 0x4000c4, 5 bytes>
0x4000c4:	call	0x500010
