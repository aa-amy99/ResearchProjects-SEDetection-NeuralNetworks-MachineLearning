<Block for 0x400000, 81 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0x10
0x400020:	sub	rax, 1
0x400024:	add	rax, 0x6c
0x400028:	mov	esi, 0x10
0x40002d:	mov	edx, 0
0x400032:	div	rsi
0x400035:	imul	rax, rax, 0x10
0x400039:	mov	rdx, rax
0x40003c:	and	rdx, 0xfffffffffffff000
0x400043:	mov	rcx, rsp
0x400046:	sub	rcx, rdx
0x400049:	mov	rdx, rcx
0x40004c:	cmp	rsp, rdx
0x40004f:	je	0x400063
<Block for 0x400063, 26 bytes>
0x400063:	mov	rdx, rax
0x400066:	and	edx, 0xfff
0x40006c:	sub	rsp, rdx
0x40006f:	mov	rdx, rax
0x400072:	and	edx, 0xfff
0x400078:	test	rdx, rdx
0x40007b:	je	0x40008d
<Block for 0x400051, 18 bytes>
0x400051:	sub	rsp, 0x1000
0x400058:	or	qword ptr [rsp + 0xff8], 0
0x400061:	jmp	0x40004c
<Block for 0x40008d, 41 bytes>
0x40008d:	mov	rax, rsp
0x400090:	add	rax, 0xf
0x400094:	shr	rax, 4
0x400098:	shl	rax, 4
0x40009c:	mov	qword ptr [rbp - 0x80], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0x80]
0x4000a4:	mov	edx, 0x63
0x4000a9:	mov	esi, 0x41
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500000
<Block for 0x40007d, 57 bytes>
0x40007d:	and	eax, 0xfff
0x400082:	sub	rax, 8
0x400086:	add	rax, rsp
0x400089:	or	qword ptr [rax], 0
0x40008d:	mov	rax, rsp
0x400090:	add	rax, 0xf
0x400094:	shr	rax, 4
0x400098:	shl	rax, 4
0x40009c:	mov	qword ptr [rbp - 0x80], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0x80]
0x4000a4:	mov	edx, 0x63
0x4000a9:	mov	esi, 0x41
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500000
<Block for 0x40004c, 5 bytes>
0x40004c:	cmp	rsp, rdx
0x40004f:	je	0x400063
<Block for 0x4000b6, 45 bytes>
0x4000b6:	mov	rax, qword ptr [rbp - 0x80]
0x4000ba:	add	rax, 0x63
0x4000be:	mov	byte ptr [rax], 0
0x4000c1:	mov	rax, qword ptr [rbp - 0x80]
0x4000c5:	sub	rax, 8
0x4000c9:	mov	qword ptr [rbp - 0x78], rax
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x43
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 28 bytes>
0x4000e3:	mov	byte ptr [rbp - 0xd], 0
0x4000e7:	lea	rcx, [rbp - 0x70]
0x4000eb:	mov	rax, qword ptr [rbp - 0x78]
0x4000ef:	mov	edx, 0x64
0x4000f4:	mov	rsi, rcx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x4000ff, 23 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0x78]
0x400103:	add	rax, 0x63
0x400107:	mov	byte ptr [rax], 0
0x40010a:	mov	rax, qword ptr [rbp - 0x78]
0x40010e:	mov	rdi, rax
0x400111:	call	0x500010
<Block for 0x400116, 16 bytes>
0x400116:	nop	
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	xor	rax, qword ptr fs:[0x28]
0x400124:	je	0x40012b
<Block for 0x40012b, 2 bytes>
0x40012b:	leave	
0x40012c:	ret	
<Block for 0x400126, 5 bytes>
0x400126:	call	0x500018
