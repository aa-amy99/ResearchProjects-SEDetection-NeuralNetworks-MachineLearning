<Block for 0x40027a, 81 bytes>
0x40027a:	endbr64	
0x40027e:	push	rbp
0x40027f:	mov	rbp, rsp
0x400282:	add	rsp, -0x80
0x400286:	mov	rax, qword ptr fs:[0x28]
0x40028f:	mov	qword ptr [rbp - 8], rax
0x400293:	xor	eax, eax
0x400295:	mov	eax, 0x10
0x40029a:	sub	rax, 1
0x40029e:	add	rax, 0x6c
0x4002a2:	mov	esi, 0x10
0x4002a7:	mov	edx, 0
0x4002ac:	div	rsi
0x4002af:	imul	rax, rax, 0x10
0x4002b3:	mov	rdx, rax
0x4002b6:	and	rdx, 0xfffffffffffff000
0x4002bd:	mov	rcx, rsp
0x4002c0:	sub	rcx, rdx
0x4002c3:	mov	rdx, rcx
0x4002c6:	cmp	rsp, rdx
0x4002c9:	je	0x4002dd
<Block for 0x4002dd, 26 bytes>
0x4002dd:	mov	rdx, rax
0x4002e0:	and	edx, 0xfff
0x4002e6:	sub	rsp, rdx
0x4002e9:	mov	rdx, rax
0x4002ec:	and	edx, 0xfff
0x4002f2:	test	rdx, rdx
0x4002f5:	je	0x400307
<Block for 0x4002cb, 18 bytes>
0x4002cb:	sub	rsp, 0x1000
0x4002d2:	or	qword ptr [rsp + 0xff8], 0
0x4002db:	jmp	0x4002c6
<Block for 0x400307, 41 bytes>
0x400307:	mov	rax, rsp
0x40030a:	add	rax, 0xf
0x40030e:	shr	rax, 4
0x400312:	shl	rax, 4
0x400316:	mov	qword ptr [rbp - 0x78], rax
0x40031a:	mov	rax, qword ptr [rbp - 0x78]
0x40031e:	mov	edx, 0x63
0x400323:	mov	esi, 0x41
0x400328:	mov	rdi, rax
0x40032b:	call	0x500000
<Block for 0x4002f7, 57 bytes>
0x4002f7:	and	eax, 0xfff
0x4002fc:	sub	rax, 8
0x400300:	add	rax, rsp
0x400303:	or	qword ptr [rax], 0
0x400307:	mov	rax, rsp
0x40030a:	add	rax, 0xf
0x40030e:	shr	rax, 4
0x400312:	shl	rax, 4
0x400316:	mov	qword ptr [rbp - 0x78], rax
0x40031a:	mov	rax, qword ptr [rbp - 0x78]
0x40031e:	mov	edx, 0x63
0x400323:	mov	esi, 0x41
0x400328:	mov	rdi, rax
0x40032b:	call	0x500000
<Block for 0x4002c6, 5 bytes>
0x4002c6:	cmp	rsp, rdx
0x4002c9:	je	0x4002dd
<Block for 0x400330, 22 bytes>
0x400330:	mov	rax, qword ptr [rbp - 0x78]
0x400334:	add	rax, 0x63
0x400338:	mov	byte ptr [rax], 0
0x40033b:	mov	eax, dword ptr [rip + 0xffcc7]
0x400341:	cmp	eax, 5
0x400344:	jne	0x40034e
<Block for 0x400346, 30 bytes>
0x400346:	mov	rax, qword ptr [rbp - 0x78]
0x40034a:	mov	qword ptr [rbp - 0x80], rax
0x40034e:	lea	rax, [rbp - 0x70]
0x400352:	mov	edx, 0x63
0x400357:	mov	esi, 0x43
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500000
<Block for 0x40034e, 22 bytes>
0x40034e:	lea	rax, [rbp - 0x70]
0x400352:	mov	edx, 0x63
0x400357:	mov	esi, 0x43
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500000
<Block for 0x400364, 28 bytes>
0x400364:	mov	byte ptr [rbp - 0xd], 0
0x400368:	lea	rcx, [rbp - 0x70]
0x40036c:	mov	rax, qword ptr [rbp - 0x80]
0x400370:	mov	edx, 0x63
0x400375:	mov	rsi, rcx
0x400378:	mov	rdi, rax
0x40037b:	call	0x500010
<Block for 0x400380, 23 bytes>
0x400380:	mov	rax, qword ptr [rbp - 0x80]
0x400384:	add	rax, 0x63
0x400388:	mov	byte ptr [rax], 0
0x40038b:	mov	rax, qword ptr [rbp - 0x80]
0x40038f:	mov	rdi, rax
0x400392:	call	0x500018
<Block for 0x400397, 16 bytes>
0x400397:	nop	
0x400398:	mov	rax, qword ptr [rbp - 8]
0x40039c:	xor	rax, qword ptr fs:[0x28]
0x4003a5:	je	0x4003ac
<Block for 0x4003ac, 2 bytes>
0x4003ac:	leave	
0x4003ad:	ret	
<Block for 0x4003a7, 5 bytes>
0x4003a7:	call	0x500020
