<Block for 0x400153, 84 bytes>
0x400153:	endbr64	
0x400157:	push	rbp
0x400158:	mov	rbp, rsp
0x40015b:	sub	rsp, 0x90
0x400162:	mov	rax, qword ptr fs:[0x28]
0x40016b:	mov	qword ptr [rbp - 8], rax
0x40016f:	xor	eax, eax
0x400171:	mov	eax, 0x10
0x400176:	sub	rax, 1
0x40017a:	add	rax, 0x6c
0x40017e:	mov	esi, 0x10
0x400183:	mov	edx, 0
0x400188:	div	rsi
0x40018b:	imul	rax, rax, 0x10
0x40018f:	mov	rdx, rax
0x400192:	and	rdx, 0xfffffffffffff000
0x400199:	mov	rcx, rsp
0x40019c:	sub	rcx, rdx
0x40019f:	mov	rdx, rcx
0x4001a2:	cmp	rsp, rdx
0x4001a5:	je	0x4001b9
<Block for 0x4001b9, 26 bytes>
0x4001b9:	mov	rdx, rax
0x4001bc:	and	edx, 0xfff
0x4001c2:	sub	rsp, rdx
0x4001c5:	mov	rdx, rax
0x4001c8:	and	edx, 0xfff
0x4001ce:	test	rdx, rdx
0x4001d1:	je	0x4001e3
<Block for 0x4001a7, 18 bytes>
0x4001a7:	sub	rsp, 0x1000
0x4001ae:	or	qword ptr [rsp + 0xff8], 0
0x4001b7:	jmp	0x4001a2
<Block for 0x4001e3, 41 bytes>
0x4001e3:	mov	rax, rsp
0x4001e6:	add	rax, 0xf
0x4001ea:	shr	rax, 4
0x4001ee:	shl	rax, 4
0x4001f2:	mov	qword ptr [rbp - 0x78], rax
0x4001f6:	mov	rax, qword ptr [rbp - 0x78]
0x4001fa:	mov	edx, 0x63
0x4001ff:	mov	esi, 0x41
0x400204:	mov	rdi, rax
0x400207:	call	0x500000
<Block for 0x4001d3, 57 bytes>
0x4001d3:	and	eax, 0xfff
0x4001d8:	sub	rax, 8
0x4001dc:	add	rax, rsp
0x4001df:	or	qword ptr [rax], 0
0x4001e3:	mov	rax, rsp
0x4001e6:	add	rax, 0xf
0x4001ea:	shr	rax, 4
0x4001ee:	shl	rax, 4
0x4001f2:	mov	qword ptr [rbp - 0x78], rax
0x4001f6:	mov	rax, qword ptr [rbp - 0x78]
0x4001fa:	mov	edx, 0x63
0x4001ff:	mov	esi, 0x41
0x400204:	mov	rdi, rax
0x400207:	call	0x500000
<Block for 0x4001a2, 5 bytes>
0x4001a2:	cmp	rsp, rdx
0x4001a5:	je	0x4001b9
<Block for 0x40020c, 22 bytes>
0x40020c:	mov	rax, qword ptr [rbp - 0x78]
0x400210:	add	rax, 0x63
0x400214:	mov	byte ptr [rax], 0
0x400217:	mov	eax, dword ptr [rip + 0xffdeb]
0x40021d:	cmp	eax, 5
0x400220:	je	0x400230
<Block for 0x400230, 33 bytes>
0x400230:	mov	rax, qword ptr [rbp - 0x78]
0x400234:	mov	qword ptr [rbp - 0x88], rax
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x400222, 12 bytes>
0x400222:	lea	rdi, [rip + 0x1f5]
0x400229:	call	0x500010
<Block for 0x400251, 14 bytes>
0x400251:	mov	byte ptr [rbp - 0xd], 0
0x400255:	mov	qword ptr [rbp - 0x80], 0
0x40025d:	jmp	0x400282
<Block for 0x40022e, 2 bytes>
0x40022e:	jmp	0x40023b
<Block for 0x400282, 7 bytes>
0x400282:	cmp	qword ptr [rbp - 0x80], 0x63
0x400287:	jbe	0x40025f
<Block for 0x40023b, 22 bytes>
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500000
<Block for 0x40025f, 42 bytes>
0x40025f:	mov	rdx, qword ptr [rbp - 0x88]
0x400266:	mov	rax, qword ptr [rbp - 0x80]
0x40026a:	add	rax, rdx
0x40026d:	movzx	eax, byte ptr [rax]
0x400270:	lea	rcx, [rbp - 0x70]
0x400274:	mov	rdx, qword ptr [rbp - 0x80]
0x400278:	add	rdx, rcx
0x40027b:	mov	byte ptr [rdx], al
0x40027d:	add	qword ptr [rbp - 0x80], 1
0x400282:	cmp	qword ptr [rbp - 0x80], 0x63
0x400287:	jbe	0x40025f
<Block for 0x400289, 16 bytes>
0x400289:	mov	byte ptr [rbp - 0xd], 0
0x40028d:	lea	rax, [rbp - 0x70]
0x400291:	mov	rdi, rax
0x400294:	call	0x500010
<Block for 0x400299, 16 bytes>
0x400299:	nop	
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	xor	rax, qword ptr fs:[0x28]
0x4002a7:	je	0x4002ae
<Block for 0x4002ae, 2 bytes>
0x4002ae:	leave	
0x4002af:	ret	
<Block for 0x4002a9, 5 bytes>
0x4002a9:	call	0x500018
