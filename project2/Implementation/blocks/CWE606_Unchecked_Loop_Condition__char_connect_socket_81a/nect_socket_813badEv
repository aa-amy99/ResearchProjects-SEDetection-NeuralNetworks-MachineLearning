<Block for 0x400000, 169 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0xa0], rax
0x400090:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x40009a:	mov	rax, qword ptr [rbp - 0xa0]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500000
<Block for 0x4000a9, 27 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x98], rax
0x4000b0:	mov	edx, 6
0x4000b5:	mov	esi, 1
0x4000ba:	mov	edi, 2
0x4000bf:	call	0x500008
<Block for 0x4000c4, 19 bytes>
0x4000c4:	mov	dword ptr [rbp - 0xb0], eax
0x4000ca:	cmp	dword ptr [rbp - 0xb0], -1
0x4000d1:	je	0x40020a
<Block for 0x40020a, 3 bytes>
0x40020a:	nop	
0x40020b:	jmp	0x40020e
<Block for 0x4000d7, 22 bytes>
0x4000d7:	lea	rax, [rbp - 0x80]
0x4000db:	mov	edx, 0x10
0x4000e0:	mov	esi, 0
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500010
<Block for 0x40020e, 9 bytes>
0x40020e:	cmp	dword ptr [rbp - 0xb0], -1
0x400215:	je	0x400224
<Block for 0x4000ed, 18 bytes>
0x4000ed:	mov	word ptr [rbp - 0x80], 2
0x4000f3:	lea	rdi, [rip + 0x4f3]
0x4000fa:	call	0x500018
<Block for 0x400224, 63 bytes>
0x400224:	lea	rax, [rip + 0xffe2d]
0x40022b:	mov	qword ptr [rbp - 0xa8], rax
0x400232:	lea	rax, [rbp - 0xa8]
0x400239:	mov	qword ptr [rbp - 0x88], rax
0x400240:	mov	rax, qword ptr [rbp - 0x88]
0x400247:	mov	rax, qword ptr [rax]
0x40024a:	mov	rcx, qword ptr [rax]
0x40024d:	mov	rdx, qword ptr [rbp - 0xa0]
0x400254:	mov	rax, qword ptr [rbp - 0x88]
0x40025b:	mov	rsi, rdx
0x40025e:	mov	rdi, rax
0x400261:	call	rcx
<Block for 0x400217, 13 bytes>
0x400217:	mov	eax, dword ptr [rbp - 0xb0]
0x40021d:	mov	edi, eax
0x40021f:	call	0x500040
<Block for 0x4000ff, 13 bytes>
0x4000ff:	mov	dword ptr [rbp - 0x7c], eax
0x400102:	mov	edi, 0x6987
0x400107:	call	0x500020
<Block for 0x400263, 16 bytes>
0x400263:	nop	
0x400264:	mov	rax, qword ptr [rbp - 8]
0x400268:	xor	rax, qword ptr fs:[0x28]
0x400271:	je	0x400278
<Block for 0x40010c, 29 bytes>
0x40010c:	mov	word ptr [rbp - 0x7e], ax
0x400110:	lea	rcx, [rbp - 0x80]
0x400114:	mov	eax, dword ptr [rbp - 0xb0]
0x40011a:	mov	edx, 0x10
0x40011f:	mov	rsi, rcx
0x400122:	mov	edi, eax
0x400124:	call	0x500028
<Block for 0x400278, 2 bytes>
0x400278:	leave	
0x400279:	ret	
<Block for 0x400273, 5 bytes>
0x400273:	call	0x500050
<Block for 0x400129, 14 bytes>
0x400129:	cmp	eax, -1
0x40012c:	sete	al
0x40012f:	test	al, al
0x400131:	jne	0x40020d
<Block for 0x400137, 51 bytes>
0x400137:	mov	eax, 0x63
0x40013c:	sub	rax, qword ptr [rbp - 0x98]
0x400143:	mov	rdx, rax
0x400146:	mov	rcx, qword ptr [rbp - 0xa0]
0x40014d:	mov	rax, qword ptr [rbp - 0x98]
0x400154:	lea	rsi, [rcx + rax]
0x400158:	mov	eax, dword ptr [rbp - 0xb0]
0x40015e:	mov	ecx, 0
0x400163:	mov	edi, eax
0x400165:	call	0x500030
<Block for 0x40020d, 1 bytes>
0x40020d:	nop	
<Block for 0x40016a, 19 bytes>
0x40016a:	mov	dword ptr [rbp - 0xac], eax
0x400170:	cmp	dword ptr [rbp - 0xac], -1
0x400177:	je	0x40020e
<Block for 0x40017d, 13 bytes>
0x40017d:	cmp	dword ptr [rbp - 0xac], 0
0x400184:	je	0x40020e
<Block for 0x40018a, 52 bytes>
0x40018a:	mov	eax, dword ptr [rbp - 0xac]
0x400190:	movsxd	rdx, eax
0x400193:	mov	rax, qword ptr [rbp - 0x98]
0x40019a:	add	rdx, rax
0x40019d:	mov	rax, qword ptr [rbp - 0xa0]
0x4001a4:	add	rax, rdx
0x4001a7:	mov	byte ptr [rax], 0
0x4001aa:	mov	rax, qword ptr [rbp - 0xa0]
0x4001b1:	mov	esi, 0xd
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x500038
<Block for 0x4001be, 17 bytes>
0x4001be:	mov	qword ptr [rbp - 0x90], rax
0x4001c5:	cmp	qword ptr [rbp - 0x90], 0
0x4001cd:	je	0x4001d9
<Block for 0x4001d9, 20 bytes>
0x4001d9:	mov	rax, qword ptr [rbp - 0xa0]
0x4001e0:	mov	esi, 0xa
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500038
<Block for 0x4001cf, 30 bytes>
0x4001cf:	mov	rax, qword ptr [rbp - 0x90]
0x4001d6:	mov	byte ptr [rax], 0
0x4001d9:	mov	rax, qword ptr [rbp - 0xa0]
0x4001e0:	mov	esi, 0xa
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500038
<Block for 0x4001ed, 17 bytes>
0x4001ed:	mov	qword ptr [rbp - 0x90], rax
0x4001f4:	cmp	qword ptr [rbp - 0x90], 0
0x4001fc:	je	0x40020e
<Block for 0x4001fe, 12 bytes>
0x4001fe:	mov	rax, qword ptr [rbp - 0x90]
0x400205:	mov	byte ptr [rax], 0
0x400208:	jmp	0x40020e
