<Block for 0x40014e, 55 bytes>
0x40014e:	endbr64	
0x400152:	push	rbp
0x400153:	mov	rbp, rsp
0x400156:	sub	rsp, 0xf0
0x40015d:	mov	rax, qword ptr fs:[0x28]
0x400166:	mov	qword ptr [rbp - 8], rax
0x40016a:	xor	eax, eax
0x40016c:	lea	rax, [rbp - 0xe0]
0x400173:	mov	edx, 0x63
0x400178:	mov	esi, 0x41
0x40017d:	mov	rdi, rax
0x400180:	call	0x500000
<Block for 0x400185, 40 bytes>
0x400185:	mov	byte ptr [rbp - 0x7d], 0
0x400189:	lea	rax, [rbp - 0xe0]
0x400190:	mov	qword ptr [rbp - 0xe8], rax
0x400197:	lea	rax, [rbp - 0x70]
0x40019b:	mov	edx, 0x63
0x4001a0:	mov	esi, 0x43
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500000
<Block for 0x4001ad, 31 bytes>
0x4001ad:	mov	byte ptr [rbp - 0xd], 0
0x4001b1:	mov	rcx, qword ptr [rbp - 0xe8]
0x4001b8:	lea	rax, [rbp - 0x70]
0x4001bc:	mov	edx, 0x64
0x4001c1:	mov	rsi, rcx
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x500008
<Block for 0x4001cc, 16 bytes>
0x4001cc:	mov	byte ptr [rbp - 0xd], 0
0x4001d0:	lea	rax, [rbp - 0x70]
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x500010
<Block for 0x4001dc, 16 bytes>
0x4001dc:	nop	
0x4001dd:	mov	rax, qword ptr [rbp - 8]
0x4001e1:	xor	rax, qword ptr fs:[0x28]
0x4001ea:	je	0x4001f1
<Block for 0x4001f1, 2 bytes>
0x4001f1:	leave	
0x4001f2:	ret	
<Block for 0x4001ec, 5 bytes>
0x4001ec:	call	0x500018
