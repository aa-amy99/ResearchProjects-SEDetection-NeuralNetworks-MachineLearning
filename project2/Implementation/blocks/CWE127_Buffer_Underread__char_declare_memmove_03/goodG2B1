<Block for 0x4000a9, 55 bytes>
0x4000a9:	endbr64	
0x4000ad:	push	rbp
0x4000ae:	mov	rbp, rsp
0x4000b1:	sub	rsp, 0xf0
0x4000b8:	mov	rax, qword ptr fs:[0x28]
0x4000c1:	mov	qword ptr [rbp - 8], rax
0x4000c5:	xor	eax, eax
0x4000c7:	lea	rax, [rbp - 0xe0]
0x4000ce:	mov	edx, 0x63
0x4000d3:	mov	esi, 0x41
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500000
<Block for 0x4000e0, 40 bytes>
0x4000e0:	mov	byte ptr [rbp - 0x7d], 0
0x4000e4:	lea	rax, [rbp - 0xe0]
0x4000eb:	mov	qword ptr [rbp - 0xe8], rax
0x4000f2:	lea	rax, [rbp - 0x70]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x43
0x400100:	mov	rdi, rax
0x400103:	call	0x500000
<Block for 0x400108, 31 bytes>
0x400108:	mov	byte ptr [rbp - 0xd], 0
0x40010c:	mov	rcx, qword ptr [rbp - 0xe8]
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	edx, 0x64
0x40011c:	mov	rsi, rcx
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x400127, 16 bytes>
0x400127:	mov	byte ptr [rbp - 0xd], 0
0x40012b:	lea	rax, [rbp - 0x70]
0x40012f:	mov	rdi, rax
0x400132:	call	0x500010
<Block for 0x400137, 16 bytes>
0x400137:	nop	
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	xor	rax, qword ptr fs:[0x28]
0x400145:	je	0x40014c
<Block for 0x40014c, 2 bytes>
0x40014c:	leave	
0x40014d:	ret	
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500018
