<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400358
<Block for 0x400028, 12 bytes>
0x400028:	lea	rax, [rbp - 0x50]
0x40002c:	mov	rdi, rax
0x40002f:	call	0x4004ea
<Block for 0x400034, 23 bytes>
0x400034:	mov	qword ptr [rbp - 0x58], rax
0x400038:	lea	rdx, [rbp - 0x58]
0x40003c:	lea	rax, [rbp - 0x30]
0x400040:	mov	rsi, rdx
0x400043:	mov	rdi, rax
0x400046:	call	0x40053a
<Block for 0x40004b, 28 bytes>
0x40004b:	lea	rdx, [rbp - 0x5c]
0x40004f:	mov	rsi, qword ptr [rbp - 0x30]
0x400053:	lea	rax, [rbp - 0x50]
0x400057:	mov	rcx, rdx
0x40005a:	mov	edx, 1
0x40005f:	mov	rdi, rax
0x400062:	call	0x400568
<Block for 0x400067, 12 bytes>
0x400067:	lea	rax, [rbp - 0x50]
0x40006b:	mov	rdi, rax
0x40006e:	call	0x4004ea
<Block for 0x400073, 23 bytes>
0x400073:	mov	qword ptr [rbp - 0x58], rax
0x400077:	lea	rdx, [rbp - 0x58]
0x40007b:	lea	rax, [rbp - 0x30]
0x40007f:	mov	rsi, rdx
0x400082:	mov	rdi, rax
0x400085:	call	0x40053a
<Block for 0x40008a, 28 bytes>
0x40008a:	lea	rdx, [rbp - 0x5c]
0x40008e:	mov	rsi, qword ptr [rbp - 0x30]
0x400092:	lea	rax, [rbp - 0x50]
0x400096:	mov	rcx, rdx
0x400099:	mov	edx, 1
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x400568
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rax, [rbp - 0x50]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x4004ea
<Block for 0x4000b2, 23 bytes>
0x4000b2:	mov	qword ptr [rbp - 0x58], rax
0x4000b6:	lea	rdx, [rbp - 0x58]
0x4000ba:	lea	rax, [rbp - 0x30]
0x4000be:	mov	rsi, rdx
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x40053a
<Block for 0x4000c9, 28 bytes>
0x4000c9:	lea	rdx, [rbp - 0x5c]
0x4000cd:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d1:	lea	rax, [rbp - 0x50]
0x4000d5:	mov	rcx, rdx
0x4000d8:	mov	edx, 1
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x400568
<Block for 0x4000e5, 19 bytes>
0x4000e5:	lea	rdx, [rbp - 0x50]
0x4000e9:	lea	rax, [rbp - 0x30]
0x4000ed:	mov	rsi, rdx
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x40062e
<Block for 0x4000f8, 12 bytes>
0x4000f8:	lea	rax, [rbp - 0x30]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500000
<Block for 0x400104, 12 bytes>
0x400104:	lea	rax, [rbp - 0x30]
0x400108:	mov	rdi, rax
0x40010b:	call	0x4004a2
<Block for 0x400110, 12 bytes>
0x400110:	lea	rax, [rbp - 0x50]
0x400114:	mov	rdi, rax
0x400117:	call	0x4004a2
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 0x18]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400166
<Block for 0x400166, 7 bytes>
0x400166:	add	rsp, 0x58
0x40016a:	pop	rbx
0x40016b:	pop	rbp
0x40016c:	ret	
<Block for 0x40012c, 2 bytes>
0x40012c:	jmp	0x400161
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500010
