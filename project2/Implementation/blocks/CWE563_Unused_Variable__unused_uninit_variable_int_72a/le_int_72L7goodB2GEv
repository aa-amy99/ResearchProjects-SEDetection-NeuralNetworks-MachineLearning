<Block for 0x40016d, 40 bytes>
0x40016d:	endbr64	
0x400171:	push	rbp
0x400172:	mov	rbp, rsp
0x400175:	push	rbx
0x400176:	sub	rsp, 0x58
0x40017a:	mov	rax, qword ptr fs:[0x28]
0x400183:	mov	qword ptr [rbp - 0x18], rax
0x400187:	xor	eax, eax
0x400189:	lea	rax, [rbp - 0x50]
0x40018d:	mov	rdi, rax
0x400190:	call	0x400358
<Block for 0x400195, 12 bytes>
0x400195:	lea	rax, [rbp - 0x50]
0x400199:	mov	rdi, rax
0x40019c:	call	0x4004ea
<Block for 0x4001a1, 23 bytes>
0x4001a1:	mov	qword ptr [rbp - 0x58], rax
0x4001a5:	lea	rdx, [rbp - 0x58]
0x4001a9:	lea	rax, [rbp - 0x30]
0x4001ad:	mov	rsi, rdx
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x40053a
<Block for 0x4001b8, 28 bytes>
0x4001b8:	lea	rdx, [rbp - 0x5c]
0x4001bc:	mov	rsi, qword ptr [rbp - 0x30]
0x4001c0:	lea	rax, [rbp - 0x50]
0x4001c4:	mov	rcx, rdx
0x4001c7:	mov	edx, 1
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x400568
<Block for 0x4001d4, 12 bytes>
0x4001d4:	lea	rax, [rbp - 0x50]
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x4004ea
<Block for 0x4001e0, 23 bytes>
0x4001e0:	mov	qword ptr [rbp - 0x58], rax
0x4001e4:	lea	rdx, [rbp - 0x58]
0x4001e8:	lea	rax, [rbp - 0x30]
0x4001ec:	mov	rsi, rdx
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x40053a
<Block for 0x4001f7, 28 bytes>
0x4001f7:	lea	rdx, [rbp - 0x5c]
0x4001fb:	mov	rsi, qword ptr [rbp - 0x30]
0x4001ff:	lea	rax, [rbp - 0x50]
0x400203:	mov	rcx, rdx
0x400206:	mov	edx, 1
0x40020b:	mov	rdi, rax
0x40020e:	call	0x400568
<Block for 0x400213, 12 bytes>
0x400213:	lea	rax, [rbp - 0x50]
0x400217:	mov	rdi, rax
0x40021a:	call	0x4004ea
<Block for 0x40021f, 23 bytes>
0x40021f:	mov	qword ptr [rbp - 0x58], rax
0x400223:	lea	rdx, [rbp - 0x58]
0x400227:	lea	rax, [rbp - 0x30]
0x40022b:	mov	rsi, rdx
0x40022e:	mov	rdi, rax
0x400231:	call	0x40053a
<Block for 0x400236, 28 bytes>
0x400236:	lea	rdx, [rbp - 0x5c]
0x40023a:	mov	rsi, qword ptr [rbp - 0x30]
0x40023e:	lea	rax, [rbp - 0x50]
0x400242:	mov	rcx, rdx
0x400245:	mov	edx, 1
0x40024a:	mov	rdi, rax
0x40024d:	call	0x400568
<Block for 0x400252, 19 bytes>
0x400252:	lea	rdx, [rbp - 0x50]
0x400256:	lea	rax, [rbp - 0x30]
0x40025a:	mov	rsi, rdx
0x40025d:	mov	rdi, rax
0x400260:	call	0x40062e
<Block for 0x400265, 12 bytes>
0x400265:	lea	rax, [rbp - 0x30]
0x400269:	mov	rdi, rax
0x40026c:	call	0x500018
<Block for 0x400271, 12 bytes>
0x400271:	lea	rax, [rbp - 0x30]
0x400275:	mov	rdi, rax
0x400278:	call	0x4004a2
<Block for 0x40027d, 12 bytes>
0x40027d:	lea	rax, [rbp - 0x50]
0x400281:	mov	rdi, rax
0x400284:	call	0x4004a2
<Block for 0x400289, 16 bytes>
0x400289:	nop	
0x40028a:	mov	rax, qword ptr [rbp - 0x18]
0x40028e:	xor	rax, qword ptr fs:[0x28]
0x400297:	je	0x4002d3
<Block for 0x4002d3, 7 bytes>
0x4002d3:	add	rsp, 0x58
0x4002d7:	pop	rbx
0x4002d8:	pop	rbp
0x4002d9:	ret	
<Block for 0x400299, 2 bytes>
0x400299:	jmp	0x4002ce
<Block for 0x4002ce, 5 bytes>
0x4002ce:	call	0x500010
