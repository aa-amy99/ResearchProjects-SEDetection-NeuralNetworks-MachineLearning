<Block for 0x4004cf, 40 bytes>
0x4004cf:	endbr64	
0x4004d3:	push	rbp
0x4004d4:	mov	rbp, rsp
0x4004d7:	push	rbx
0x4004d8:	sub	rsp, 0x48
0x4004dc:	mov	rax, qword ptr fs:[0x28]
0x4004e5:	mov	qword ptr [rbp - 0x18], rax
0x4004e9:	xor	eax, eax
0x4004eb:	lea	rax, [rbp - 0x50]
0x4004ef:	mov	rdi, rax
0x4004f2:	call	0x4006f2
<Block for 0x4004f7, 26 bytes>
0x4004f7:	mov	dword ptr [rbp - 0x30], 0x64
0x4004fe:	lea	rdx, [rbp - 0x30]
0x400502:	lea	rax, [rbp - 0x50]
0x400506:	mov	rsi, rdx
0x400509:	mov	rdi, rax
0x40050c:	call	0x40097c
<Block for 0x400511, 26 bytes>
0x400511:	mov	dword ptr [rbp - 0x30], 0
0x400518:	lea	rdx, [rbp - 0x30]
0x40051c:	lea	rax, [rbp - 0x50]
0x400520:	mov	rsi, rdx
0x400523:	mov	rdi, rax
0x400526:	call	0x40097c
<Block for 0x40052b, 19 bytes>
0x40052b:	lea	rdx, [rbp - 0x50]
0x40052f:	lea	rax, [rbp - 0x30]
0x400533:	mov	rsi, rdx
0x400536:	mov	rdi, rax
0x400539:	call	0x4009ca
<Block for 0x40053e, 12 bytes>
0x40053e:	lea	rax, [rbp - 0x30]
0x400542:	mov	rdi, rax
0x400545:	call	0x4003e6
<Block for 0x40054a, 12 bytes>
0x40054a:	lea	rax, [rbp - 0x30]
0x40054e:	mov	rdi, rax
0x400551:	call	0x400712
<Block for 0x400556, 12 bytes>
0x400556:	lea	rax, [rbp - 0x50]
0x40055a:	mov	rdi, rax
0x40055d:	call	0x400712
<Block for 0x400562, 16 bytes>
0x400562:	nop	
0x400563:	mov	rax, qword ptr [rbp - 0x18]
0x400567:	xor	rax, qword ptr fs:[0x28]
0x400570:	je	0x4005ac
<Block for 0x4005ac, 7 bytes>
0x4005ac:	add	rsp, 0x48
0x4005b0:	pop	rbx
0x4005b1:	pop	rbp
0x4005b2:	ret	
<Block for 0x400572, 2 bytes>
0x400572:	jmp	0x4005a7
<Block for 0x4005a7, 5 bytes>
0x4005a7:	call	0x500030
