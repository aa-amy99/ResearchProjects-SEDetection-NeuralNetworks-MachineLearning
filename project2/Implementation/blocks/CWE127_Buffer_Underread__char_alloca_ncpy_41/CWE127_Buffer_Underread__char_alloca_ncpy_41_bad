<Block for 0x400082, 81 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	eax, 0x10
0x4000a2:	sub	rax, 1
0x4000a6:	add	rax, 0x6c
0x4000aa:	mov	esi, 0x10
0x4000af:	mov	edx, 0
0x4000b4:	div	rsi
0x4000b7:	imul	rax, rax, 0x10
0x4000bb:	mov	rdx, rax
0x4000be:	and	rdx, 0xfffffffffffff000
0x4000c5:	mov	rcx, rsp
0x4000c8:	sub	rcx, rdx
0x4000cb:	mov	rdx, rcx
0x4000ce:	cmp	rsp, rdx
0x4000d1:	je	0x4000e5
<Block for 0x4000e5, 26 bytes>
0x4000e5:	mov	rdx, rax
0x4000e8:	and	edx, 0xfff
0x4000ee:	sub	rsp, rdx
0x4000f1:	mov	rdx, rax
0x4000f4:	and	edx, 0xfff
0x4000fa:	test	rdx, rdx
0x4000fd:	je	0x40010f
<Block for 0x4000d3, 18 bytes>
0x4000d3:	sub	rsp, 0x1000
0x4000da:	or	qword ptr [rsp + 0xff8], 0
0x4000e3:	jmp	0x4000ce
<Block for 0x40010f, 41 bytes>
0x40010f:	mov	rax, rsp
0x400112:	add	rax, 0xf
0x400116:	shr	rax, 4
0x40011a:	shl	rax, 4
0x40011e:	mov	qword ptr [rbp - 0x18], rax
0x400122:	mov	rax, qword ptr [rbp - 0x18]
0x400126:	mov	edx, 0x63
0x40012b:	mov	esi, 0x41
0x400130:	mov	rdi, rax
0x400133:	call	0x500000
<Block for 0x4000ff, 57 bytes>
0x4000ff:	and	eax, 0xfff
0x400104:	sub	rax, 8
0x400108:	add	rax, rsp
0x40010b:	or	qword ptr [rax], 0
0x40010f:	mov	rax, rsp
0x400112:	add	rax, 0xf
0x400116:	shr	rax, 4
0x40011a:	shl	rax, 4
0x40011e:	mov	qword ptr [rbp - 0x18], rax
0x400122:	mov	rax, qword ptr [rbp - 0x18]
0x400126:	mov	edx, 0x63
0x40012b:	mov	esi, 0x41
0x400130:	mov	rdi, rax
0x400133:	call	0x500000
<Block for 0x4000ce, 5 bytes>
0x4000ce:	cmp	rsp, rdx
0x4000d1:	je	0x4000e5
<Block for 0x400138, 35 bytes>
0x400138:	mov	rax, qword ptr [rbp - 0x18]
0x40013c:	add	rax, 0x63
0x400140:	mov	byte ptr [rax], 0
0x400143:	mov	rax, qword ptr [rbp - 0x18]
0x400147:	sub	rax, 8
0x40014b:	mov	qword ptr [rbp - 0x10], rax
0x40014f:	mov	rax, qword ptr [rbp - 0x10]
0x400153:	mov	rdi, rax
0x400156:	call	0x400000
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500020
