<Block for 0x4000d4, 79 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0x50
0x4000e0:	mov	rax, qword ptr fs:[0x28]
0x4000e9:	mov	qword ptr [rbp - 8], rax
0x4000ed:	xor	eax, eax
0x4000ef:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4000f6:	mov	qword ptr [rbp - 0x16], 0
0x4000fe:	mov	dword ptr [rbp - 0xe], 0
0x400105:	mov	word ptr [rbp - 0xa], 0
0x40010b:	mov	rdx, qword ptr [rip + 0xffeee]
0x400112:	lea	rax, [rbp - 0x16]
0x400116:	mov	esi, 0xe
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x400123, 5 bytes>
0x400123:	test	rax, rax
0x400126:	je	0x400139
<Block for 0x400139, 12 bytes>
0x400139:	lea	rdi, [rip + 0x298]
0x400140:	call	0x500018
<Block for 0x400128, 12 bytes>
0x400128:	lea	rax, [rbp - 0x16]
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500010
<Block for 0x400145, 46 bytes>
0x400145:	mov	qword ptr [rbp - 0x40], 0
0x40014d:	mov	qword ptr [rbp - 0x38], 0
0x400155:	mov	qword ptr [rbp - 0x30], 0
0x40015d:	mov	qword ptr [rbp - 0x28], 0
0x400165:	mov	qword ptr [rbp - 0x20], 0
0x40016d:	cmp	dword ptr [rbp - 0x44], 0
0x400171:	js	0x40018b
<Block for 0x400134, 5 bytes>
0x400134:	mov	dword ptr [rbp - 0x44], eax
0x400137:	jmp	0x400145
<Block for 0x40018b, 12 bytes>
0x40018b:	lea	rdi, [rip + 0x276]
0x400192:	call	0x500018
<Block for 0x400173, 6 bytes>
0x400173:	cmp	dword ptr [rbp - 0x44], 9
0x400177:	jg	0x40018b
<Block for 0x400197, 16 bytes>
0x400197:	nop	
0x400198:	mov	rax, qword ptr [rbp - 8]
0x40019c:	xor	rax, qword ptr fs:[0x28]
0x4001a5:	je	0x4001ac
<Block for 0x400179, 16 bytes>
0x400179:	mov	eax, dword ptr [rbp - 0x44]
0x40017c:	cdqe	
0x40017e:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400182:	mov	edi, eax
0x400184:	call	0x500020
<Block for 0x4001ac, 2 bytes>
0x4001ac:	leave	
0x4001ad:	ret	
<Block for 0x4001a7, 5 bytes>
0x4001a7:	call	0x500028
<Block for 0x400189, 2 bytes>
0x400189:	jmp	0x400197
