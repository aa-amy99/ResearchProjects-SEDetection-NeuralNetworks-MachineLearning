<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400013:	mov	eax, dword ptr [rip + 0xfffe7]
0x400019:	test	eax, eax
0x40001b:	je	0x400024
<Block for 0x400024, 25 bytes>
0x400024:	mov	eax, dword ptr [rbp - 0x1c]
0x400027:	cdqe	
0x400029:	shl	rax, 2
0x40002d:	mov	qword ptr [rbp - 0x10], rax
0x400031:	mov	rax, qword ptr [rbp - 0x10]
0x400035:	mov	rdi, rax
0x400038:	call	0x500008
<Block for 0x40001d, 32 bytes>
0x40001d:	mov	dword ptr [rbp - 0x1c], 0x40000001
0x400024:	mov	eax, dword ptr [rbp - 0x1c]
0x400027:	cdqe	
0x400029:	shl	rax, 2
0x40002d:	mov	qword ptr [rbp - 0x10], rax
0x400031:	mov	rax, qword ptr [rbp - 0x10]
0x400035:	mov	rdi, rax
0x400038:	call	0x500008
<Block for 0x40003d, 23 bytes>
0x40003d:	mov	qword ptr [rbp - 8], rax
0x400041:	mov	qword ptr [rbp - 0x18], 0
0x400049:	mov	eax, dword ptr [rbp - 0x1c]
0x40004c:	cdqe	
0x40004e:	cmp	qword ptr [rbp - 0x18], rax
0x400052:	jae	0x400074
<Block for 0x400054, 32 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x18]
0x400058:	lea	rdx, [rax*4]
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	add	rax, rdx
0x400067:	mov	dword ptr [rax], 0
0x40006d:	add	qword ptr [rbp - 0x18], 1
0x400072:	jmp	0x400049
<Block for 0x400074, 13 bytes>
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	mov	edi, eax
0x40007c:	call	0x500010
<Block for 0x400049, 11 bytes>
0x400049:	mov	eax, dword ptr [rbp - 0x1c]
0x40004c:	cdqe	
0x40004e:	cmp	qword ptr [rbp - 0x18], rax
0x400052:	jae	0x400074
<Block for 0x400081, 7 bytes>
0x400081:	cmp	qword ptr [rbp - 8], 0
0x400086:	je	0x400094
<Block for 0x400094, 3 bytes>
0x400094:	nop	
0x400095:	leave	
0x400096:	ret	
<Block for 0x400088, 12 bytes>
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500018
