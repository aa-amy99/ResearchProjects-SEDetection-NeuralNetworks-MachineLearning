<Block for 0x40007b, 56 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x20
0x400087:	mov	rax, qword ptr fs:[0x28]
0x400090:	mov	qword ptr [rbp - 8], rax
0x400094:	xor	eax, eax
0x400096:	nop	
0x400097:	endbr64	
0x40009b:	mov	rdx, qword ptr [rip + 0xfff7e]
0x4000a2:	lea	rax, [rbp - 0x12]
0x4000a6:	mov	esi, 0xa
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500028
<Block for 0x4000b3, 11 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x20], rax
0x4000b7:	cmp	qword ptr [rbp - 0x20], 0
0x4000bc:	jne	0x4000d4
<Block for 0x4000be, 12 bytes>
0x4000be:	lea	rdi, [rip + 0x4b]
0x4000c5:	call	0x500008
<Block for 0x4000d4, 16 bytes>
0x4000d4:	mov	byte ptr [rbp - 9], 0
0x4000d8:	lea	rax, [rbp - 0x12]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500008
<Block for 0x4000ca, 10 bytes>
0x4000ca:	mov	edi, 1
0x4000cf:	call	0x500010
<Block for 0x4000e4, 16 bytes>
0x4000e4:	nop	
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	xor	rax, qword ptr fs:[0x28]
0x4000f2:	je	0x4000f9
<Block for 0x4000f9, 2 bytes>
0x4000f9:	leave	
0x4000fa:	ret	
<Block for 0x4000f4, 5 bytes>
0x4000f4:	call	0x500018
