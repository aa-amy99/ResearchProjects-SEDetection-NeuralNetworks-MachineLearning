<Block for 0x400126, 43 bytes>
0x400126:	endbr64	
0x40012a:	push	rbp
0x40012b:	mov	rbp, rsp
0x40012e:	push	rbx
0x40012f:	sub	rsp, 0x88
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 0x18], rax
0x400143:	xor	eax, eax
0x400145:	lea	rax, [rbp - 0x80]
0x400149:	mov	rdi, rax
0x40014c:	call	0x4004c4
<Block for 0x400151, 23 bytes>
0x400151:	mov	dword ptr [rbp - 0x84], 5
0x40015b:	mov	eax, dword ptr [rbp - 0x84]
0x400161:	mov	edi, eax
0x400163:	call	0x500018
<Block for 0x400168, 26 bytes>
0x400168:	mov	dword ptr [rbp - 0x50], 0
0x40016f:	lea	rdx, [rbp - 0x50]
0x400173:	lea	rax, [rbp - 0x80]
0x400177:	mov	rsi, rdx
0x40017a:	mov	rdi, rax
0x40017d:	call	0x40068e
<Block for 0x400182, 34 bytes>
0x400182:	mov	edx, dword ptr [rbp - 0x84]
0x400188:	mov	dword ptr [rax], edx
0x40018a:	mov	dword ptr [rbp - 0x50], 1
0x400191:	lea	rdx, [rbp - 0x50]
0x400195:	lea	rax, [rbp - 0x80]
0x400199:	mov	rsi, rdx
0x40019c:	mov	rdi, rax
0x40019f:	call	0x40068e
<Block for 0x4001a4, 34 bytes>
0x4001a4:	mov	edx, dword ptr [rbp - 0x84]
0x4001aa:	mov	dword ptr [rax], edx
0x4001ac:	mov	dword ptr [rbp - 0x50], 2
0x4001b3:	lea	rdx, [rbp - 0x50]
0x4001b7:	lea	rax, [rbp - 0x80]
0x4001bb:	mov	rsi, rdx
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x40068e
<Block for 0x4001c6, 27 bytes>
0x4001c6:	mov	edx, dword ptr [rbp - 0x84]
0x4001cc:	mov	dword ptr [rax], edx
0x4001ce:	lea	rdx, [rbp - 0x80]
0x4001d2:	lea	rax, [rbp - 0x50]
0x4001d6:	mov	rsi, rdx
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x400504
<Block for 0x4001e1, 12 bytes>
0x4001e1:	lea	rax, [rbp - 0x50]
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500020
<Block for 0x4001ed, 12 bytes>
0x4001ed:	lea	rax, [rbp - 0x50]
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x4004e4
<Block for 0x4001f9, 12 bytes>
0x4001f9:	lea	rax, [rbp - 0x80]
0x4001fd:	mov	rdi, rax
0x400200:	call	0x4004e4
<Block for 0x400205, 16 bytes>
0x400205:	nop	
0x400206:	mov	rax, qword ptr [rbp - 0x18]
0x40020a:	xor	rax, qword ptr fs:[0x28]
0x400213:	je	0x40024f
<Block for 0x40024f, 10 bytes>
0x40024f:	add	rsp, 0x88
0x400256:	pop	rbx
0x400257:	pop	rbp
0x400258:	ret	
<Block for 0x400215, 2 bytes>
0x400215:	jmp	0x40024a
<Block for 0x40024a, 5 bytes>
0x40024a:	call	0x500010
