<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xe8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xd0]
0x400026:	mov	rdi, rax
0x400029:	call	0x4008c4
<Block for 0x40002e, 139 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xe8], rax
0x4000a0:	mov	dword ptr [rbp - 0xf0], 0xffffffff
0x4000aa:	mov	rax, qword ptr [rbp - 0xe8]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500000
<Block for 0x4000b9, 27 bytes>
0x4000b9:	mov	qword ptr [rbp - 0xe0], rax
0x4000c0:	mov	edx, 6
0x4000c5:	mov	esi, 1
0x4000ca:	mov	edi, 2
0x4000cf:	call	0x500008
<Block for 0x4000d4, 19 bytes>
0x4000d4:	mov	dword ptr [rbp - 0xf0], eax
0x4000da:	cmp	dword ptr [rbp - 0xf0], -1
0x4000e1:	je	0x400229
<Block for 0x400229, 3 bytes>
0x400229:	nop	
0x40022a:	jmp	0x40022d
<Block for 0x4000e7, 25 bytes>
0x4000e7:	lea	rax, [rbp - 0x90]
0x4000ee:	mov	edx, 0x10
0x4000f3:	mov	esi, 0
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500010
<Block for 0x40022d, 9 bytes>
0x40022d:	cmp	dword ptr [rbp - 0xf0], -1
0x400234:	je	0x400243
<Block for 0x400100, 21 bytes>
0x400100:	mov	word ptr [rbp - 0x90], 2
0x400109:	lea	rdi, [rip + 0x713]
0x400110:	call	0x500018
<Block for 0x400243, 25 bytes>
0x400243:	lea	rdx, [rbp - 0xe8]
0x40024a:	lea	rax, [rbp - 0xd0]
0x400251:	mov	rsi, rdx
0x400254:	mov	rdi, rax
0x400257:	call	0x4009d4
<Block for 0x400236, 13 bytes>
0x400236:	mov	eax, dword ptr [rbp - 0xf0]
0x40023c:	mov	edi, eax
0x40023e:	call	0x500040
<Block for 0x400115, 16 bytes>
0x400115:	mov	dword ptr [rbp - 0x8c], eax
0x40011b:	mov	edi, 0x6987
0x400120:	call	0x500020
<Block for 0x40025c, 25 bytes>
0x40025c:	lea	rdx, [rbp - 0xe8]
0x400263:	lea	rax, [rbp - 0xd0]
0x40026a:	mov	rsi, rdx
0x40026d:	mov	rdi, rax
0x400270:	call	0x4009d4
<Block for 0x400125, 35 bytes>
0x400125:	mov	word ptr [rbp - 0x8e], ax
0x40012c:	lea	rcx, [rbp - 0x90]
0x400133:	mov	eax, dword ptr [rbp - 0xf0]
0x400139:	mov	edx, 0x10
0x40013e:	mov	rsi, rcx
0x400141:	mov	edi, eax
0x400143:	call	0x500028
<Block for 0x400275, 25 bytes>
0x400275:	lea	rdx, [rbp - 0xe8]
0x40027c:	lea	rax, [rbp - 0xd0]
0x400283:	mov	rsi, rdx
0x400286:	mov	rdi, rax
0x400289:	call	0x4009d4
<Block for 0x400148, 14 bytes>
0x400148:	cmp	eax, -1
0x40014b:	sete	al
0x40014e:	test	al, al
0x400150:	jne	0x40022c
<Block for 0x40028e, 25 bytes>
0x40028e:	lea	rdx, [rbp - 0xd0]
0x400295:	lea	rax, [rbp - 0xb0]
0x40029c:	mov	rsi, rdx
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x400a0e
<Block for 0x400156, 51 bytes>
0x400156:	mov	eax, 0x63
0x40015b:	sub	rax, qword ptr [rbp - 0xe0]
0x400162:	mov	rdx, rax
0x400165:	mov	rcx, qword ptr [rbp - 0xe8]
0x40016c:	mov	rax, qword ptr [rbp - 0xe0]
0x400173:	lea	rsi, [rcx + rax]
0x400177:	mov	eax, dword ptr [rbp - 0xf0]
0x40017d:	mov	ecx, 0
0x400182:	mov	edi, eax
0x400184:	call	0x500030
<Block for 0x40022c, 1 bytes>
0x40022c:	nop	
<Block for 0x4002a7, 15 bytes>
0x4002a7:	lea	rax, [rbp - 0xb0]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x500048
<Block for 0x400189, 19 bytes>
0x400189:	mov	dword ptr [rbp - 0xec], eax
0x40018f:	cmp	dword ptr [rbp - 0xec], -1
0x400196:	je	0x40022d
<Block for 0x4002b6, 15 bytes>
0x4002b6:	lea	rax, [rbp - 0xb0]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x4008e4
<Block for 0x40019c, 13 bytes>
0x40019c:	cmp	dword ptr [rbp - 0xec], 0
0x4001a3:	je	0x40022d
<Block for 0x4002c5, 15 bytes>
0x4002c5:	lea	rax, [rbp - 0xd0]
0x4002cc:	mov	rdi, rax
0x4002cf:	call	0x4008e4
<Block for 0x4001a9, 52 bytes>
0x4001a9:	mov	rax, qword ptr [rbp - 0xe8]
0x4001b0:	mov	edx, dword ptr [rbp - 0xec]
0x4001b6:	movsxd	rcx, edx
0x4001b9:	mov	rdx, qword ptr [rbp - 0xe0]
0x4001c0:	add	rdx, rcx
0x4001c3:	add	rax, rdx
0x4001c6:	mov	byte ptr [rax], 0
0x4001c9:	mov	rax, qword ptr [rbp - 0xe8]
0x4001d0:	mov	esi, 0xd
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500038
<Block for 0x4002d4, 16 bytes>
0x4002d4:	nop	
0x4002d5:	mov	rax, qword ptr [rbp - 0x18]
0x4002d9:	xor	rax, qword ptr fs:[0x28]
0x4002e2:	je	0x400324
<Block for 0x4001dd, 17 bytes>
0x4001dd:	mov	qword ptr [rbp - 0xd8], rax
0x4001e4:	cmp	qword ptr [rbp - 0xd8], 0
0x4001ec:	je	0x4001f8
<Block for 0x400324, 10 bytes>
0x400324:	add	rsp, 0xe8
0x40032b:	pop	rbx
0x40032c:	pop	rbp
0x40032d:	ret	
<Block for 0x4002e4, 2 bytes>
0x4002e4:	jmp	0x40031f
<Block for 0x4001f8, 20 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0xe8]
0x4001ff:	mov	esi, 0xa
0x400204:	mov	rdi, rax
0x400207:	call	0x500038
<Block for 0x4001ee, 30 bytes>
0x4001ee:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f5:	mov	byte ptr [rax], 0
0x4001f8:	mov	rax, qword ptr [rbp - 0xe8]
0x4001ff:	mov	esi, 0xa
0x400204:	mov	rdi, rax
0x400207:	call	0x500038
<Block for 0x40031f, 5 bytes>
0x40031f:	call	0x500058
<Block for 0x40020c, 17 bytes>
0x40020c:	mov	qword ptr [rbp - 0xd8], rax
0x400213:	cmp	qword ptr [rbp - 0xd8], 0
0x40021b:	je	0x40022d
<Block for 0x40021d, 12 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0xd8]
0x400224:	mov	byte ptr [rax], 0
0x400227:	jmp	0x40022d
