<Block for 0x4004c9, 46 bytes>
0x4004c9:	endbr64	
0x4004cd:	push	rbp
0x4004ce:	mov	rbp, rsp
0x4004d1:	push	rbx
0x4004d2:	sub	rsp, 0xe8
0x4004d9:	mov	rax, qword ptr fs:[0x28]
0x4004e2:	mov	qword ptr [rbp - 0x18], rax
0x4004e6:	xor	eax, eax
0x4004e8:	lea	rax, [rbp - 0xd0]
0x4004ef:	mov	rdi, rax
0x4004f2:	call	0x4008c4
<Block for 0x4004f7, 139 bytes>
0x4004f7:	mov	qword ptr [rbp - 0x80], 0
0x4004ff:	mov	qword ptr [rbp - 0x78], 0
0x400507:	mov	qword ptr [rbp - 0x70], 0
0x40050f:	mov	qword ptr [rbp - 0x68], 0
0x400517:	mov	qword ptr [rbp - 0x60], 0
0x40051f:	mov	qword ptr [rbp - 0x58], 0
0x400527:	mov	qword ptr [rbp - 0x50], 0
0x40052f:	mov	qword ptr [rbp - 0x48], 0
0x400537:	mov	qword ptr [rbp - 0x40], 0
0x40053f:	mov	qword ptr [rbp - 0x38], 0
0x400547:	mov	qword ptr [rbp - 0x30], 0
0x40054f:	mov	qword ptr [rbp - 0x28], 0
0x400557:	mov	dword ptr [rbp - 0x20], 0
0x40055e:	lea	rax, [rbp - 0x80]
0x400562:	mov	qword ptr [rbp - 0xe8], rax
0x400569:	mov	dword ptr [rbp - 0xf0], 0xffffffff
0x400573:	mov	rax, qword ptr [rbp - 0xe8]
0x40057a:	mov	rdi, rax
0x40057d:	call	0x500000
<Block for 0x400582, 27 bytes>
0x400582:	mov	qword ptr [rbp - 0xe0], rax
0x400589:	mov	edx, 6
0x40058e:	mov	esi, 1
0x400593:	mov	edi, 2
0x400598:	call	0x500008
<Block for 0x40059d, 19 bytes>
0x40059d:	mov	dword ptr [rbp - 0xf0], eax
0x4005a3:	cmp	dword ptr [rbp - 0xf0], -1
0x4005aa:	je	0x4006f2
<Block for 0x4006f2, 3 bytes>
0x4006f2:	nop	
0x4006f3:	jmp	0x4006f6
<Block for 0x4005b0, 25 bytes>
0x4005b0:	lea	rax, [rbp - 0x90]
0x4005b7:	mov	edx, 0x10
0x4005bc:	mov	esi, 0
0x4005c1:	mov	rdi, rax
0x4005c4:	call	0x500010
<Block for 0x4006f6, 9 bytes>
0x4006f6:	cmp	dword ptr [rbp - 0xf0], -1
0x4006fd:	je	0x40070c
<Block for 0x4005c9, 21 bytes>
0x4005c9:	mov	word ptr [rbp - 0x90], 2
0x4005d2:	lea	rdi, [rip + 0x24a]
0x4005d9:	call	0x500018
<Block for 0x40070c, 25 bytes>
0x40070c:	lea	rdx, [rbp - 0xe8]
0x400713:	lea	rax, [rbp - 0xd0]
0x40071a:	mov	rsi, rdx
0x40071d:	mov	rdi, rax
0x400720:	call	0x4009d4
<Block for 0x4006ff, 13 bytes>
0x4006ff:	mov	eax, dword ptr [rbp - 0xf0]
0x400705:	mov	edi, eax
0x400707:	call	0x500040
<Block for 0x4005de, 16 bytes>
0x4005de:	mov	dword ptr [rbp - 0x8c], eax
0x4005e4:	mov	edi, 0x6987
0x4005e9:	call	0x500020
<Block for 0x400725, 25 bytes>
0x400725:	lea	rdx, [rbp - 0xe8]
0x40072c:	lea	rax, [rbp - 0xd0]
0x400733:	mov	rsi, rdx
0x400736:	mov	rdi, rax
0x400739:	call	0x4009d4
<Block for 0x4005ee, 35 bytes>
0x4005ee:	mov	word ptr [rbp - 0x8e], ax
0x4005f5:	lea	rcx, [rbp - 0x90]
0x4005fc:	mov	eax, dword ptr [rbp - 0xf0]
0x400602:	mov	edx, 0x10
0x400607:	mov	rsi, rcx
0x40060a:	mov	edi, eax
0x40060c:	call	0x500028
<Block for 0x40073e, 25 bytes>
0x40073e:	lea	rdx, [rbp - 0xe8]
0x400745:	lea	rax, [rbp - 0xd0]
0x40074c:	mov	rsi, rdx
0x40074f:	mov	rdi, rax
0x400752:	call	0x4009d4
<Block for 0x400611, 14 bytes>
0x400611:	cmp	eax, -1
0x400614:	sete	al
0x400617:	test	al, al
0x400619:	jne	0x4006f5
<Block for 0x400757, 25 bytes>
0x400757:	lea	rdx, [rbp - 0xd0]
0x40075e:	lea	rax, [rbp - 0xb0]
0x400765:	mov	rsi, rdx
0x400768:	mov	rdi, rax
0x40076b:	call	0x400a0e
<Block for 0x40061f, 51 bytes>
0x40061f:	mov	eax, 0x63
0x400624:	sub	rax, qword ptr [rbp - 0xe0]
0x40062b:	mov	rdx, rax
0x40062e:	mov	rcx, qword ptr [rbp - 0xe8]
0x400635:	mov	rax, qword ptr [rbp - 0xe0]
0x40063c:	lea	rsi, [rcx + rax]
0x400640:	mov	eax, dword ptr [rbp - 0xf0]
0x400646:	mov	ecx, 0
0x40064b:	mov	edi, eax
0x40064d:	call	0x500030
<Block for 0x4006f5, 1 bytes>
0x4006f5:	nop	
<Block for 0x400770, 15 bytes>
0x400770:	lea	rax, [rbp - 0xb0]
0x400777:	mov	rdi, rax
0x40077a:	call	0x500068
<Block for 0x400652, 19 bytes>
0x400652:	mov	dword ptr [rbp - 0xec], eax
0x400658:	cmp	dword ptr [rbp - 0xec], -1
0x40065f:	je	0x4006f6
<Block for 0x40077f, 15 bytes>
0x40077f:	lea	rax, [rbp - 0xb0]
0x400786:	mov	rdi, rax
0x400789:	call	0x4008e4
<Block for 0x400665, 13 bytes>
0x400665:	cmp	dword ptr [rbp - 0xec], 0
0x40066c:	je	0x4006f6
<Block for 0x40078e, 15 bytes>
0x40078e:	lea	rax, [rbp - 0xd0]
0x400795:	mov	rdi, rax
0x400798:	call	0x4008e4
<Block for 0x400672, 52 bytes>
0x400672:	mov	rax, qword ptr [rbp - 0xe8]
0x400679:	mov	edx, dword ptr [rbp - 0xec]
0x40067f:	movsxd	rcx, edx
0x400682:	mov	rdx, qword ptr [rbp - 0xe0]
0x400689:	add	rdx, rcx
0x40068c:	add	rax, rdx
0x40068f:	mov	byte ptr [rax], 0
0x400692:	mov	rax, qword ptr [rbp - 0xe8]
0x400699:	mov	esi, 0xd
0x40069e:	mov	rdi, rax
0x4006a1:	call	0x500038
<Block for 0x40079d, 16 bytes>
0x40079d:	nop	
0x40079e:	mov	rax, qword ptr [rbp - 0x18]
0x4007a2:	xor	rax, qword ptr fs:[0x28]
0x4007ab:	je	0x4007ed
<Block for 0x4006a6, 17 bytes>
0x4006a6:	mov	qword ptr [rbp - 0xd8], rax
0x4006ad:	cmp	qword ptr [rbp - 0xd8], 0
0x4006b5:	je	0x4006c1
<Block for 0x4007ed, 10 bytes>
0x4007ed:	add	rsp, 0xe8
0x4007f4:	pop	rbx
0x4007f5:	pop	rbp
0x4007f6:	ret	
<Block for 0x4007ad, 2 bytes>
0x4007ad:	jmp	0x4007e8
<Block for 0x4006c1, 20 bytes>
0x4006c1:	mov	rax, qword ptr [rbp - 0xe8]
0x4006c8:	mov	esi, 0xa
0x4006cd:	mov	rdi, rax
0x4006d0:	call	0x500038
<Block for 0x4006b7, 30 bytes>
0x4006b7:	mov	rax, qword ptr [rbp - 0xd8]
0x4006be:	mov	byte ptr [rax], 0
0x4006c1:	mov	rax, qword ptr [rbp - 0xe8]
0x4006c8:	mov	esi, 0xa
0x4006cd:	mov	rdi, rax
0x4006d0:	call	0x500038
<Block for 0x4007e8, 5 bytes>
0x4007e8:	call	0x500058
<Block for 0x4006d5, 17 bytes>
0x4006d5:	mov	qword ptr [rbp - 0xd8], rax
0x4006dc:	cmp	qword ptr [rbp - 0xd8], 0
0x4006e4:	je	0x4006f6
<Block for 0x4006e6, 12 bytes>
0x4006e6:	mov	rax, qword ptr [rbp - 0xd8]
0x4006ed:	mov	byte ptr [rax], 0
0x4006f0:	jmp	0x4006f6
