<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	dword ptr [rbp - 0x3c], 2
0x400026:	lea	rdx, [rbp - 0x3c]
0x40002a:	mov	rax, qword ptr [rbp - 0x48]
0x40002e:	mov	rsi, rdx
0x400031:	mov	rdi, rax
0x400034:	call	0x4002bc
<Block for 0x400039, 51 bytes>
0x400039:	mov	eax, dword ptr [rax]
0x40003b:	mov	dword ptr [rbp - 0x34], eax
0x40003e:	mov	qword ptr [rbp - 0x30], 0
0x400046:	mov	qword ptr [rbp - 0x28], 0
0x40004e:	mov	qword ptr [rbp - 0x20], 0
0x400056:	mov	qword ptr [rbp - 0x18], 0
0x40005e:	mov	qword ptr [rbp - 0x10], 0
0x400066:	cmp	dword ptr [rbp - 0x34], 9
0x40006a:	jg	0x40009c
<Block for 0x40006c, 26 bytes>
0x40006c:	mov	eax, dword ptr [rbp - 0x34]
0x40006f:	cdqe	
0x400071:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400079:	mov	dword ptr [rbp - 0x38], 0
0x400080:	cmp	dword ptr [rbp - 0x38], 9
0x400084:	jg	0x4000a8
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rdi, [rip + 0x1d5]
0x4000a3:	call	0x500008
<Block for 0x400086, 16 bytes>
0x400086:	mov	eax, dword ptr [rbp - 0x38]
0x400089:	cdqe	
0x40008b:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40008f:	mov	edi, eax
0x400091:	call	0x500000
<Block for 0x4000a8, 16 bytes>
0x4000a8:	nop	
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	xor	rax, qword ptr fs:[0x28]
0x4000b6:	je	0x4000bd
<Block for 0x400096, 6 bytes>
0x400096:	add	dword ptr [rbp - 0x38], 1
0x40009a:	jmp	0x400080
<Block for 0x4000bd, 2 bytes>
0x4000bd:	leave	
0x4000be:	ret	
<Block for 0x4000b8, 5 bytes>
0x4000b8:	call	0x500010
<Block for 0x400080, 6 bytes>
0x400080:	cmp	dword ptr [rbp - 0x38], 9
0x400084:	jg	0x4000a8
