<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x40056c
<Block for 0x400028, 27 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	lea	rsi, [rip + 0x4b1]
0x400037:	lea	rdi, [rip + 0x4ad]
0x40003e:	call	0x500000
<Block for 0x400043, 16 bytes>
0x400043:	mov	qword ptr [rbp - 0x60], rax
0x400047:	mov	rax, qword ptr [rbp - 0x60]
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 12 bytes>
0x400053:	lea	rax, [rbp - 0x50]
0x400057:	mov	rdi, rax
0x40005a:	call	0x400712
<Block for 0x40005f, 23 bytes>
0x40005f:	mov	qword ptr [rbp - 0x58], rax
0x400063:	lea	rdx, [rbp - 0x58]
0x400067:	lea	rax, [rbp - 0x30]
0x40006b:	mov	rsi, rdx
0x40006e:	mov	rdi, rax
0x400071:	call	0x400762
<Block for 0x400076, 28 bytes>
0x400076:	lea	rdx, [rbp - 0x60]
0x40007a:	mov	rsi, qword ptr [rbp - 0x30]
0x40007e:	lea	rax, [rbp - 0x50]
0x400082:	mov	rcx, rdx
0x400085:	mov	edx, 1
0x40008a:	mov	rdi, rax
0x40008d:	call	0x400790
<Block for 0x400092, 12 bytes>
0x400092:	lea	rax, [rbp - 0x50]
0x400096:	mov	rdi, rax
0x400099:	call	0x400712
<Block for 0x40009e, 23 bytes>
0x40009e:	mov	qword ptr [rbp - 0x58], rax
0x4000a2:	lea	rdx, [rbp - 0x58]
0x4000a6:	lea	rax, [rbp - 0x30]
0x4000aa:	mov	rsi, rdx
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x400762
<Block for 0x4000b5, 28 bytes>
0x4000b5:	lea	rdx, [rbp - 0x60]
0x4000b9:	mov	rsi, qword ptr [rbp - 0x30]
0x4000bd:	lea	rax, [rbp - 0x50]
0x4000c1:	mov	rcx, rdx
0x4000c4:	mov	edx, 1
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x400790
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rax, [rbp - 0x50]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x400712
<Block for 0x4000dd, 23 bytes>
0x4000dd:	mov	qword ptr [rbp - 0x58], rax
0x4000e1:	lea	rdx, [rbp - 0x58]
0x4000e5:	lea	rax, [rbp - 0x30]
0x4000e9:	mov	rsi, rdx
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x400762
<Block for 0x4000f4, 28 bytes>
0x4000f4:	lea	rdx, [rbp - 0x60]
0x4000f8:	mov	rsi, qword ptr [rbp - 0x30]
0x4000fc:	lea	rax, [rbp - 0x50]
0x400100:	mov	rcx, rdx
0x400103:	mov	edx, 1
0x400108:	mov	rdi, rax
0x40010b:	call	0x400790
<Block for 0x400110, 19 bytes>
0x400110:	lea	rdx, [rbp - 0x50]
0x400114:	lea	rax, [rbp - 0x30]
0x400118:	mov	rsi, rdx
0x40011b:	mov	rdi, rax
0x40011e:	call	0x400856
<Block for 0x400123, 12 bytes>
0x400123:	lea	rax, [rbp - 0x30]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500010
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rax, [rbp - 0x30]
0x400133:	mov	rdi, rax
0x400136:	call	0x4006ca
<Block for 0x40013b, 12 bytes>
0x40013b:	lea	rax, [rbp - 0x50]
0x40013f:	mov	rdi, rax
0x400142:	call	0x4006ca
<Block for 0x400147, 16 bytes>
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 0x18]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x400191
<Block for 0x400191, 7 bytes>
0x400191:	add	rsp, 0x58
0x400195:	pop	rbx
0x400196:	pop	rbp
0x400197:	ret	
<Block for 0x400157, 2 bytes>
0x400157:	jmp	0x40018c
<Block for 0x40018c, 5 bytes>
0x40018c:	call	0x500020
