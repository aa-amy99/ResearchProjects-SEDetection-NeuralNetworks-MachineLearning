<Block for 0x400324, 40 bytes>
0x400324:	endbr64	
0x400328:	push	rbp
0x400329:	mov	rbp, rsp
0x40032c:	push	rbx
0x40032d:	sub	rsp, 0x58
0x400331:	mov	rax, qword ptr fs:[0x28]
0x40033a:	mov	qword ptr [rbp - 0x18], rax
0x40033e:	xor	eax, eax
0x400340:	lea	rax, [rbp - 0x50]
0x400344:	mov	rdi, rax
0x400347:	call	0x40056c
<Block for 0x40034c, 27 bytes>
0x40034c:	mov	qword ptr [rbp - 0x60], 0
0x400354:	lea	rsi, [rip + 0x18d]
0x40035b:	lea	rdi, [rip + 0x189]
0x400362:	call	0x500000
<Block for 0x400367, 16 bytes>
0x400367:	mov	qword ptr [rbp - 0x60], rax
0x40036b:	mov	rax, qword ptr [rbp - 0x60]
0x40036f:	mov	rdi, rax
0x400372:	call	0x500008
<Block for 0x400377, 12 bytes>
0x400377:	lea	rax, [rbp - 0x50]
0x40037b:	mov	rdi, rax
0x40037e:	call	0x400712
<Block for 0x400383, 23 bytes>
0x400383:	mov	qword ptr [rbp - 0x58], rax
0x400387:	lea	rdx, [rbp - 0x58]
0x40038b:	lea	rax, [rbp - 0x30]
0x40038f:	mov	rsi, rdx
0x400392:	mov	rdi, rax
0x400395:	call	0x400762
<Block for 0x40039a, 28 bytes>
0x40039a:	lea	rdx, [rbp - 0x60]
0x40039e:	mov	rsi, qword ptr [rbp - 0x30]
0x4003a2:	lea	rax, [rbp - 0x50]
0x4003a6:	mov	rcx, rdx
0x4003a9:	mov	edx, 1
0x4003ae:	mov	rdi, rax
0x4003b1:	call	0x400790
<Block for 0x4003b6, 12 bytes>
0x4003b6:	lea	rax, [rbp - 0x50]
0x4003ba:	mov	rdi, rax
0x4003bd:	call	0x400712
<Block for 0x4003c2, 23 bytes>
0x4003c2:	mov	qword ptr [rbp - 0x58], rax
0x4003c6:	lea	rdx, [rbp - 0x58]
0x4003ca:	lea	rax, [rbp - 0x30]
0x4003ce:	mov	rsi, rdx
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x400762
<Block for 0x4003d9, 28 bytes>
0x4003d9:	lea	rdx, [rbp - 0x60]
0x4003dd:	mov	rsi, qword ptr [rbp - 0x30]
0x4003e1:	lea	rax, [rbp - 0x50]
0x4003e5:	mov	rcx, rdx
0x4003e8:	mov	edx, 1
0x4003ed:	mov	rdi, rax
0x4003f0:	call	0x400790
<Block for 0x4003f5, 12 bytes>
0x4003f5:	lea	rax, [rbp - 0x50]
0x4003f9:	mov	rdi, rax
0x4003fc:	call	0x400712
<Block for 0x400401, 23 bytes>
0x400401:	mov	qword ptr [rbp - 0x58], rax
0x400405:	lea	rdx, [rbp - 0x58]
0x400409:	lea	rax, [rbp - 0x30]
0x40040d:	mov	rsi, rdx
0x400410:	mov	rdi, rax
0x400413:	call	0x400762
<Block for 0x400418, 28 bytes>
0x400418:	lea	rdx, [rbp - 0x60]
0x40041c:	mov	rsi, qword ptr [rbp - 0x30]
0x400420:	lea	rax, [rbp - 0x50]
0x400424:	mov	rcx, rdx
0x400427:	mov	edx, 1
0x40042c:	mov	rdi, rax
0x40042f:	call	0x400790
<Block for 0x400434, 19 bytes>
0x400434:	lea	rdx, [rbp - 0x50]
0x400438:	lea	rax, [rbp - 0x30]
0x40043c:	mov	rsi, rdx
0x40043f:	mov	rdi, rax
0x400442:	call	0x400856
<Block for 0x400447, 12 bytes>
0x400447:	lea	rax, [rbp - 0x30]
0x40044b:	mov	rdi, rax
0x40044e:	call	0x500030
<Block for 0x400453, 12 bytes>
0x400453:	lea	rax, [rbp - 0x30]
0x400457:	mov	rdi, rax
0x40045a:	call	0x4006ca
<Block for 0x40045f, 12 bytes>
0x40045f:	lea	rax, [rbp - 0x50]
0x400463:	mov	rdi, rax
0x400466:	call	0x4006ca
<Block for 0x40046b, 16 bytes>
0x40046b:	nop	
0x40046c:	mov	rax, qword ptr [rbp - 0x18]
0x400470:	xor	rax, qword ptr fs:[0x28]
0x400479:	je	0x4004b5
<Block for 0x4004b5, 7 bytes>
0x4004b5:	add	rsp, 0x58
0x4004b9:	pop	rbx
0x4004ba:	pop	rbp
0x4004bb:	ret	
<Block for 0x40047b, 2 bytes>
0x40047b:	jmp	0x4004b0
<Block for 0x4004b0, 5 bytes>
0x4004b0:	call	0x500020
