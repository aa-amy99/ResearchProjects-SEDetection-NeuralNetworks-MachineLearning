<Block for 0x4000ea, 104 bytes>
0x4000ea:	endbr64	
0x4000ee:	push	rbp
0x4000ef:	mov	rbp, rsp
0x4000f2:	sub	rsp, 0x40
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	lea	rax, [rbp - 0x40]
0x400109:	mov	qword ptr [rbp - 0x38], rax
0x40010d:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400114:	mov	dword ptr [rbp - 0x40], 7
0x40011b:	mov	rax, qword ptr [rbp - 0x38]
0x40011f:	mov	eax, dword ptr [rax]
0x400121:	mov	dword ptr [rbp - 0x3c], eax
0x400124:	mov	qword ptr [rbp - 0x30], 0
0x40012c:	mov	qword ptr [rbp - 0x28], 0
0x400134:	mov	qword ptr [rbp - 0x20], 0
0x40013c:	mov	qword ptr [rbp - 0x18], 0
0x400144:	mov	qword ptr [rbp - 0x10], 0
0x40014c:	cmp	dword ptr [rbp - 0x3c], 9
0x400150:	jg	0x400164
<Block for 0x400152, 16 bytes>
0x400152:	mov	eax, dword ptr [rbp - 0x3c]
0x400155:	cdqe	
0x400157:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40015b:	mov	edi, eax
0x40015d:	call	0x500020
<Block for 0x400164, 12 bytes>
0x400164:	lea	rdi, [rip + 0x145]
0x40016b:	call	0x500018
<Block for 0x400162, 2 bytes>
0x400162:	jmp	0x40017e
<Block for 0x400170, 2 bytes>
0x400170:	jmp	0x40017e
<Block for 0x40017e, 15 bytes>
0x40017e:	mov	rax, qword ptr [rbp - 8]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x400192
<Block for 0x400192, 2 bytes>
0x400192:	leave	
0x400193:	ret	
<Block for 0x40018d, 5 bytes>
0x40018d:	call	0x500028
