<Block for 0x400170, 84 bytes>
0x400170:	endbr64	
0x400174:	push	rbp
0x400175:	mov	rbp, rsp
0x400178:	sub	rsp, 0x90
0x40017f:	mov	rax, qword ptr fs:[0x28]
0x400188:	mov	qword ptr [rbp - 8], rax
0x40018c:	xor	eax, eax
0x40018e:	mov	eax, 0x10
0x400193:	sub	rax, 1
0x400197:	add	rax, 0x6c
0x40019b:	mov	esi, 0x10
0x4001a0:	mov	edx, 0
0x4001a5:	div	rsi
0x4001a8:	imul	rax, rax, 0x10
0x4001ac:	mov	rdx, rax
0x4001af:	and	rdx, 0xfffffffffffff000
0x4001b6:	mov	rcx, rsp
0x4001b9:	sub	rcx, rdx
0x4001bc:	mov	rdx, rcx
0x4001bf:	cmp	rsp, rdx
0x4001c2:	je	0x4001d6
<Block for 0x4001d6, 26 bytes>
0x4001d6:	mov	rdx, rax
0x4001d9:	and	edx, 0xfff
0x4001df:	sub	rsp, rdx
0x4001e2:	mov	rdx, rax
0x4001e5:	and	edx, 0xfff
0x4001eb:	test	rdx, rdx
0x4001ee:	je	0x400200
<Block for 0x4001c4, 18 bytes>
0x4001c4:	sub	rsp, 0x1000
0x4001cb:	or	qword ptr [rsp + 0xff8], 0
0x4001d4:	jmp	0x4001bf
<Block for 0x400200, 41 bytes>
0x400200:	mov	rax, rsp
0x400203:	add	rax, 0xf
0x400207:	shr	rax, 4
0x40020b:	shl	rax, 4
0x40020f:	mov	qword ptr [rbp - 0x78], rax
0x400213:	mov	rax, qword ptr [rbp - 0x78]
0x400217:	mov	edx, 0x63
0x40021c:	mov	esi, 0x41
0x400221:	mov	rdi, rax
0x400224:	call	0x500000
<Block for 0x4001f0, 57 bytes>
0x4001f0:	and	eax, 0xfff
0x4001f5:	sub	rax, 8
0x4001f9:	add	rax, rsp
0x4001fc:	or	qword ptr [rax], 0
0x400200:	mov	rax, rsp
0x400203:	add	rax, 0xf
0x400207:	shr	rax, 4
0x40020b:	shl	rax, 4
0x40020f:	mov	qword ptr [rbp - 0x78], rax
0x400213:	mov	rax, qword ptr [rbp - 0x78]
0x400217:	mov	edx, 0x63
0x40021c:	mov	esi, 0x41
0x400221:	mov	rdi, rax
0x400224:	call	0x500000
<Block for 0x4001bf, 5 bytes>
0x4001bf:	cmp	rsp, rdx
0x4001c2:	je	0x4001d6
<Block for 0x400229, 21 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0x78]
0x40022d:	add	rax, 0x63
0x400231:	mov	byte ptr [rax], 0
0x400234:	mov	eax, 0
0x400239:	call	0x500008
<Block for 0x40023e, 4 bytes>
0x40023e:	test	eax, eax
0x400240:	je	0x40024f
<Block for 0x40024f, 33 bytes>
0x40024f:	mov	rax, qword ptr [rbp - 0x78]
0x400253:	mov	qword ptr [rbp - 0x88], rax
0x40025a:	lea	rax, [rbp - 0x70]
0x40025e:	mov	edx, 0x63
0x400263:	mov	esi, 0x43
0x400268:	mov	rdi, rax
0x40026b:	call	0x500000
<Block for 0x400242, 13 bytes>
0x400242:	mov	rax, qword ptr [rbp - 0x78]
0x400246:	mov	qword ptr [rbp - 0x88], rax
0x40024d:	jmp	0x40025a
<Block for 0x400270, 14 bytes>
0x400270:	mov	byte ptr [rbp - 0xd], 0
0x400274:	mov	qword ptr [rbp - 0x80], 0
0x40027c:	jmp	0x4002a1
<Block for 0x40025a, 22 bytes>
0x40025a:	lea	rax, [rbp - 0x70]
0x40025e:	mov	edx, 0x63
0x400263:	mov	esi, 0x43
0x400268:	mov	rdi, rax
0x40026b:	call	0x500000
<Block for 0x4002a1, 7 bytes>
0x4002a1:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002a6:	jbe	0x40027e
<Block for 0x40027e, 42 bytes>
0x40027e:	mov	rdx, qword ptr [rbp - 0x88]
0x400285:	mov	rax, qword ptr [rbp - 0x80]
0x400289:	add	rdx, rax
0x40028c:	lea	rcx, [rbp - 0x70]
0x400290:	mov	rax, qword ptr [rbp - 0x80]
0x400294:	add	rax, rcx
0x400297:	movzx	eax, byte ptr [rax]
0x40029a:	mov	byte ptr [rdx], al
0x40029c:	add	qword ptr [rbp - 0x80], 1
0x4002a1:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002a6:	jbe	0x40027e
<Block for 0x4002a8, 29 bytes>
0x4002a8:	mov	rax, qword ptr [rbp - 0x88]
0x4002af:	add	rax, 0x63
0x4002b3:	mov	byte ptr [rax], 0
0x4002b6:	mov	rax, qword ptr [rbp - 0x88]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500010
<Block for 0x4002c5, 16 bytes>
0x4002c5:	nop	
0x4002c6:	mov	rax, qword ptr [rbp - 8]
0x4002ca:	xor	rax, qword ptr fs:[0x28]
0x4002d3:	je	0x4002da
<Block for 0x4002da, 2 bytes>
0x4002da:	leave	
0x4002db:	ret	
<Block for 0x4002d5, 5 bytes>
0x4002d5:	call	0x500018
