<Block for 0x4000d8, 26 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	sub	rsp, 0x20
0x4000e4:	mov	qword ptr [rbp - 0x18], rdi
0x4000e8:	mov	qword ptr [rbp - 8], 0
0x4000f0:	jmp	0x400117
<Block for 0x400117, 12 bytes>
0x400117:	mov	rax, qword ptr [rbp - 0x18]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500020
<Block for 0x400123, 6 bytes>
0x400123:	cmp	qword ptr [rbp - 8], rax
0x400127:	jb	0x4000f2
<Block for 0x4000f2, 18 bytes>
0x4000f2:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f6:	mov	rax, qword ptr [rbp - 8]
0x4000fa:	add	rax, rdx
0x4000fd:	movzx	eax, byte ptr [rax]
0x400100:	cmp	al, 0x53
0x400102:	jne	0x400112
<Block for 0x400129, 12 bytes>
0x400129:	mov	rax, qword ptr [rbp - 0x18]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500008
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0xd0]
0x40010b:	call	0x500000
<Block for 0x400112, 17 bytes>
0x400112:	add	qword ptr [rbp - 8], 1
0x400117:	mov	rax, qword ptr [rbp - 0x18]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500020
<Block for 0x400135, 3 bytes>
0x400135:	nop	
0x400136:	leave	
0x400137:	ret	
<Block for 0x400110, 2 bytes>
0x400110:	jmp	0x400129
