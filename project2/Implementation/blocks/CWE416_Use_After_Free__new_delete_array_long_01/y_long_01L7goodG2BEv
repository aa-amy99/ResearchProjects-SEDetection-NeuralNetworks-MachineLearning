<Block for 0x400077, 30 bytes>
0x400077:	endbr64	
0x40007b:	push	rbp
0x40007c:	mov	rbp, rsp
0x40007f:	sub	rsp, 0x10
0x400083:	mov	qword ptr [rbp - 8], 0
0x40008b:	mov	edi, 0x320
0x400090:	call	0x500000
<Block for 0x400095, 19 bytes>
0x400095:	mov	qword ptr [rbp - 8], rax
0x400099:	mov	qword ptr [rbp - 0x10], 0
0x4000a1:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a6:	ja	0x4000c9
<Block for 0x4000a8, 33 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0x10]
0x4000ac:	lea	rdx, [rax*8]
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	add	rax, rdx
0x4000bb:	mov	qword ptr [rax], 5
0x4000c2:	add	qword ptr [rbp - 0x10], 1
0x4000c7:	jmp	0x4000a1
<Block for 0x4000c9, 15 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 8]
0x4000cd:	mov	rax, qword ptr [rax]
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500010
<Block for 0x4000a1, 7 bytes>
0x4000a1:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a6:	ja	0x4000c9
<Block for 0x4000d8, 3 bytes>
0x4000d8:	nop	
0x4000d9:	leave	
0x4000da:	ret	
