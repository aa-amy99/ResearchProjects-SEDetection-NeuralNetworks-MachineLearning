<Block for 0x4000db, 30 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	sub	rsp, 0x10
0x4000e7:	mov	qword ptr [rbp - 8], 0
0x4000ef:	mov	edi, 0x320
0x4000f4:	call	0x500000
<Block for 0x4000f9, 19 bytes>
0x4000f9:	mov	qword ptr [rbp - 8], rax
0x4000fd:	mov	qword ptr [rbp - 0x10], 0
0x400105:	cmp	qword ptr [rbp - 0x10], 0x63
0x40010a:	ja	0x40012d
<Block for 0x40010c, 33 bytes>
0x40010c:	mov	rax, qword ptr [rbp - 0x10]
0x400110:	lea	rdx, [rax*8]
0x400118:	mov	rax, qword ptr [rbp - 8]
0x40011c:	add	rax, rdx
0x40011f:	mov	qword ptr [rax], 5
0x400126:	add	qword ptr [rbp - 0x10], 1
0x40012b:	jmp	0x400105
<Block for 0x40012d, 7 bytes>
0x40012d:	cmp	qword ptr [rbp - 8], 0
0x400132:	je	0x400140
<Block for 0x400105, 7 bytes>
0x400105:	cmp	qword ptr [rbp - 0x10], 0x63
0x40010a:	ja	0x40012d
<Block for 0x400140, 3 bytes>
0x400140:	nop	
0x400141:	leave	
0x400142:	ret	
<Block for 0x400134, 12 bytes>
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	mov	rdi, rax
0x40013b:	call	0x500008
