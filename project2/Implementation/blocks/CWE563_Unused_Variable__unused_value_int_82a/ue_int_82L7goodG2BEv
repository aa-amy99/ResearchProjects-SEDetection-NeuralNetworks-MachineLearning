<Block for 0x400063, 30 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	push	rbx
0x40006c:	sub	rsp, 0x18
0x400070:	mov	dword ptr [rbp - 0x1c], 5
0x400077:	mov	eax, dword ptr [rbp - 0x1c]
0x40007a:	mov	edi, eax
0x40007c:	call	0x500010
<Block for 0x400081, 10 bytes>
0x400081:	mov	edi, 8
0x400086:	call	0x500000
<Block for 0x40008b, 11 bytes>
0x40008b:	mov	rbx, rax
0x40008e:	mov	rdi, rbx
0x400091:	call	0x400194
<Block for 0x400096, 28 bytes>
0x400096:	mov	qword ptr [rbp - 0x18], rbx
0x40009a:	mov	rax, qword ptr [rbp - 0x18]
0x40009e:	mov	rax, qword ptr [rax]
0x4000a1:	mov	rcx, qword ptr [rax]
0x4000a4:	mov	edx, dword ptr [rbp - 0x1c]
0x4000a7:	mov	rax, qword ptr [rbp - 0x18]
0x4000ab:	mov	esi, edx
0x4000ad:	mov	rdi, rax
0x4000b0:	call	rcx
<Block for 0x4000b2, 9 bytes>
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	test	rax, rax
0x4000b9:	je	0x4000c8
<Block for 0x4000c8, 8 bytes>
0x4000c8:	nop	
0x4000c9:	add	rsp, 0x18
0x4000cd:	pop	rbx
0x4000ce:	pop	rbp
0x4000cf:	ret	
<Block for 0x4000bb, 13 bytes>
0x4000bb:	mov	esi, 8
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500008
