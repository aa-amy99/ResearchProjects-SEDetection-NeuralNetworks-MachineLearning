<Block for 0x40009f, 25 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x10
0x4000ab:	mov	qword ptr [rbp - 8], 0
0x4000b3:	call	0x400000
<Block for 0x4000b8, 9 bytes>
0x4000b8:	test	eax, eax
0x4000ba:	setne	al
0x4000bd:	test	al, al
0x4000bf:	je	0x400103
<Block for 0x400103, 5 bytes>
0x400103:	call	0x40000f
<Block for 0x4000c1, 10 bytes>
0x4000c1:	mov	edi, 0x64
0x4000c6:	call	0x500000
<Block for 0x400108, 9 bytes>
0x400108:	test	eax, eax
0x40010a:	setne	al
0x40010d:	test	al, al
0x40010f:	je	0x40011d
<Block for 0x4000cb, 26 bytes>
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	mov	rax, qword ptr [rbp - 8]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x41
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500008
<Block for 0x40011d, 3 bytes>
0x40011d:	nop	
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x400111, 12 bytes>
0x400111:	lea	rdi, [rip + 0x17f]
0x400118:	call	0x500018
<Block for 0x4000e5, 18 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	add	rax, 0x63
0x4000ed:	mov	byte ptr [rax], 0
0x4000f0:	cmp	qword ptr [rbp - 8], 0
0x4000f5:	je	0x400103
<Block for 0x4000f7, 12 bytes>
0x4000f7:	mov	rax, qword ptr [rbp - 8]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500010
