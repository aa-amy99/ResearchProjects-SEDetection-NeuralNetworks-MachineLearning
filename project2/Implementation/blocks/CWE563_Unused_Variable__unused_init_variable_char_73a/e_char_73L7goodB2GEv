<Block for 0x4000ed, 40 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	push	rbx
0x4000f6:	sub	rsp, 0x58
0x4000fa:	mov	rax, qword ptr fs:[0x28]
0x400103:	mov	qword ptr [rbp - 0x18], rax
0x400107:	xor	eax, eax
0x400109:	lea	rax, [rbp - 0x50]
0x40010d:	mov	rdi, rax
0x400110:	call	0x400298
<Block for 0x400115, 23 bytes>
0x400115:	mov	byte ptr [rbp - 0x51], 0x43
0x400119:	lea	rdx, [rbp - 0x51]
0x40011d:	lea	rax, [rbp - 0x50]
0x400121:	mov	rsi, rdx
0x400124:	mov	rdi, rax
0x400127:	call	0x40038c
<Block for 0x40012c, 19 bytes>
0x40012c:	lea	rdx, [rbp - 0x51]
0x400130:	lea	rax, [rbp - 0x50]
0x400134:	mov	rsi, rdx
0x400137:	mov	rdi, rax
0x40013a:	call	0x40038c
<Block for 0x40013f, 19 bytes>
0x40013f:	lea	rdx, [rbp - 0x51]
0x400143:	lea	rax, [rbp - 0x50]
0x400147:	mov	rsi, rdx
0x40014a:	mov	rdi, rax
0x40014d:	call	0x40038c
<Block for 0x400152, 19 bytes>
0x400152:	lea	rdx, [rbp - 0x50]
0x400156:	lea	rax, [rbp - 0x30]
0x40015a:	mov	rsi, rdx
0x40015d:	mov	rdi, rax
0x400160:	call	0x4003c6
<Block for 0x400165, 12 bytes>
0x400165:	lea	rax, [rbp - 0x30]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500018
<Block for 0x400171, 12 bytes>
0x400171:	lea	rax, [rbp - 0x30]
0x400175:	mov	rdi, rax
0x400178:	call	0x4002b8
<Block for 0x40017d, 12 bytes>
0x40017d:	lea	rax, [rbp - 0x50]
0x400181:	mov	rdi, rax
0x400184:	call	0x4002b8
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 0x18]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x4001d3
<Block for 0x4001d3, 7 bytes>
0x4001d3:	add	rsp, 0x58
0x4001d7:	pop	rbx
0x4001d8:	pop	rbp
0x4001d9:	ret	
<Block for 0x400199, 2 bytes>
0x400199:	jmp	0x4001ce
<Block for 0x4001ce, 5 bytes>
0x4001ce:	call	0x500010
