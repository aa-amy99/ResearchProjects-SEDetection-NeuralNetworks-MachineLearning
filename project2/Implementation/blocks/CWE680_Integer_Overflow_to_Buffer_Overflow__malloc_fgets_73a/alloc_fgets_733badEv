<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x60]
0x400020:	mov	rdi, rax
0x400023:	call	0x400308
<Block for 0x400028, 52 bytes>
0x400028:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x40002f:	mov	qword ptr [rbp - 0x26], 0
0x400037:	mov	dword ptr [rbp - 0x1e], 0
0x40003e:	mov	word ptr [rbp - 0x1a], 0
0x400044:	mov	rdx, qword ptr [rip + 0xfffb5]
0x40004b:	lea	rax, [rbp - 0x26]
0x40004f:	mov	esi, 0xe
0x400054:	mov	rdi, rax
0x400057:	call	0x500008
<Block for 0x40005c, 10 bytes>
0x40005c:	test	rax, rax
0x40005f:	setne	al
0x400062:	test	al, al
0x400064:	je	0x400077
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0x1e4]
0x40007e:	call	0x500018
<Block for 0x400066, 12 bytes>
0x400066:	lea	rax, [rbp - 0x26]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400083, 19 bytes>
0x400083:	lea	rdx, [rbp - 0x64]
0x400087:	lea	rax, [rbp - 0x60]
0x40008b:	mov	rsi, rdx
0x40008e:	mov	rdi, rax
0x400091:	call	0x4003fe
<Block for 0x400072, 5 bytes>
0x400072:	mov	dword ptr [rbp - 0x64], eax
0x400075:	jmp	0x400083
<Block for 0x400096, 19 bytes>
0x400096:	lea	rdx, [rbp - 0x64]
0x40009a:	lea	rax, [rbp - 0x60]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x4003fe
<Block for 0x4000a9, 19 bytes>
0x4000a9:	lea	rdx, [rbp - 0x64]
0x4000ad:	lea	rax, [rbp - 0x60]
0x4000b1:	mov	rsi, rdx
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x4003fe
<Block for 0x4000bc, 19 bytes>
0x4000bc:	lea	rdx, [rbp - 0x60]
0x4000c0:	lea	rax, [rbp - 0x40]
0x4000c4:	mov	rsi, rdx
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x400438
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rax, [rbp - 0x40]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500020
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rax, [rbp - 0x40]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x400328
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rax, [rbp - 0x60]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x400328
<Block for 0x4000f3, 16 bytes>
0x4000f3:	nop	
0x4000f4:	mov	rax, qword ptr [rbp - 0x18]
0x4000f8:	xor	rax, qword ptr fs:[0x28]
0x400101:	je	0x40013d
<Block for 0x40013d, 7 bytes>
0x40013d:	add	rsp, 0x68
0x400141:	pop	rbx
0x400142:	pop	rbp
0x400143:	ret	
<Block for 0x400103, 2 bytes>
0x400103:	jmp	0x400138
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500030
