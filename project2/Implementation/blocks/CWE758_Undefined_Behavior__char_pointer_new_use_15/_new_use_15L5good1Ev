<Block for 0x40004b, 33 bytes>
0x40004b:	endbr64	
0x40004f:	push	rbp
0x400050:	mov	rbp, rsp
0x400053:	sub	rsp, 0x20
0x400057:	lea	rax, [rip + 0xc4]
0x40005e:	mov	qword ptr [rbp - 0x18], rax
0x400062:	mov	edi, 8
0x400067:	call	0x500000
<Block for 0x40006c, 38 bytes>
0x40006c:	mov	qword ptr [rbp - 0x10], rax
0x400070:	mov	rax, qword ptr [rbp - 0x10]
0x400074:	mov	rdx, qword ptr [rbp - 0x18]
0x400078:	mov	qword ptr [rax], rdx
0x40007b:	mov	rax, qword ptr [rbp - 0x10]
0x40007f:	mov	rax, qword ptr [rax]
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500010
<Block for 0x400092, 9 bytes>
0x400092:	mov	rax, qword ptr [rbp - 0x10]
0x400096:	test	rax, rax
0x400099:	je	0x4000a8
<Block for 0x4000a8, 4 bytes>
0x4000a8:	nop	
0x4000a9:	nop	
0x4000aa:	leave	
0x4000ab:	ret	
<Block for 0x40009b, 13 bytes>
0x40009b:	mov	esi, 8
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500008
