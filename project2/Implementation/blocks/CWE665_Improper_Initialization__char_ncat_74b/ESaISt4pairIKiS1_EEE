<Block for 0x4000b3, 72 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0xa0
0x4000c2:	mov	qword ptr [rbp - 0x98], rdi
0x4000c9:	mov	rax, qword ptr fs:[0x28]
0x4000d2:	mov	qword ptr [rbp - 8], rax
0x4000d6:	xor	eax, eax
0x4000d8:	mov	dword ptr [rbp - 0x84], 2
0x4000e2:	lea	rdx, [rbp - 0x84]
0x4000e9:	mov	rax, qword ptr [rbp - 0x98]
0x4000f0:	mov	rsi, rdx
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x400192
<Block for 0x4000fb, 29 bytes>
0x4000fb:	mov	rax, qword ptr [rax]
0x4000fe:	mov	qword ptr [rbp - 0x80], rax
0x400102:	lea	rax, [rbp - 0x70]
0x400106:	mov	edx, 0x63
0x40010b:	mov	esi, 0x43
0x400110:	mov	rdi, rax
0x400113:	call	0x500000
<Block for 0x400118, 16 bytes>
0x400118:	mov	byte ptr [rbp - 0xd], 0
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	rdi, rax
0x400123:	call	0x500008
<Block for 0x400128, 27 bytes>
0x400128:	mov	qword ptr [rbp - 0x78], rax
0x40012c:	mov	rdx, qword ptr [rbp - 0x78]
0x400130:	lea	rcx, [rbp - 0x70]
0x400134:	mov	rax, qword ptr [rbp - 0x80]
0x400138:	mov	rsi, rcx
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500010
<Block for 0x400143, 12 bytes>
0x400143:	mov	rax, qword ptr [rbp - 0x80]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500018
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500020
