<Block for 0x40019e, 55 bytes>
0x40019e:	endbr64	
0x4001a2:	push	rbp
0x4001a3:	mov	rbp, rsp
0x4001a6:	sub	rsp, 0xf0
0x4001ad:	mov	rax, qword ptr fs:[0x28]
0x4001b6:	mov	qword ptr [rbp - 8], rax
0x4001ba:	xor	eax, eax
0x4001bc:	lea	rax, [rbp - 0xe0]
0x4001c3:	mov	edx, 0x63
0x4001c8:	mov	esi, 0x41
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500000
<Block for 0x4001d5, 40 bytes>
0x4001d5:	mov	byte ptr [rbp - 0x7d], 0
0x4001d9:	lea	rax, [rbp - 0xe0]
0x4001e0:	mov	qword ptr [rbp - 0xe8], rax
0x4001e7:	lea	rax, [rbp - 0x70]
0x4001eb:	mov	edx, 0x63
0x4001f0:	mov	esi, 0x43
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x500000
<Block for 0x4001fd, 17 bytes>
0x4001fd:	mov	byte ptr [rbp - 0xd], 0
0x400201:	mov	qword ptr [rbp - 0xf0], 0
0x40020c:	jmp	0x40023a
<Block for 0x40023a, 10 bytes>
0x40023a:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400242:	jbe	0x40020e
<Block for 0x40020e, 54 bytes>
0x40020e:	mov	rdx, qword ptr [rbp - 0xe8]
0x400215:	mov	rax, qword ptr [rbp - 0xf0]
0x40021c:	add	rax, rdx
0x40021f:	movzx	eax, byte ptr [rax]
0x400222:	lea	rcx, [rbp - 0x70]
0x400226:	mov	rdx, qword ptr [rbp - 0xf0]
0x40022d:	add	rdx, rcx
0x400230:	mov	byte ptr [rdx], al
0x400232:	add	qword ptr [rbp - 0xf0], 1
0x40023a:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400242:	jbe	0x40020e
<Block for 0x400244, 16 bytes>
0x400244:	mov	byte ptr [rbp - 0xd], 0
0x400248:	lea	rax, [rbp - 0x70]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500008
<Block for 0x400254, 16 bytes>
0x400254:	nop	
0x400255:	mov	rax, qword ptr [rbp - 8]
0x400259:	xor	rax, qword ptr fs:[0x28]
0x400262:	je	0x400269
<Block for 0x400269, 2 bytes>
0x400269:	leave	
0x40026a:	ret	
<Block for 0x400264, 5 bytes>
0x400264:	call	0x500010
