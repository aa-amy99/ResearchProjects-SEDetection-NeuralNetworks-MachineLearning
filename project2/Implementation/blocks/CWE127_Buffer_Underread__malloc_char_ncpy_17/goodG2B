<Block for 0x4000f1, 50 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x90
0x400100:	mov	rax, qword ptr fs:[0x28]
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	xor	eax, eax
0x40010f:	mov	qword ptr [rbp - 0x80], 0
0x400117:	mov	dword ptr [rbp - 0x84], 0
0x400121:	jmp	0x400172
<Block for 0x400172, 9 bytes>
0x400172:	cmp	dword ptr [rbp - 0x84], 0
0x400179:	jle	0x400123
<Block for 0x400123, 10 bytes>
0x400123:	mov	edi, 0x64
0x400128:	call	0x500000
<Block for 0x40017b, 22 bytes>
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	edx, 0x63
0x400184:	mov	esi, 0x43
0x400189:	mov	rdi, rax
0x40018c:	call	0x500010
<Block for 0x40012d, 11 bytes>
0x40012d:	mov	qword ptr [rbp - 0x78], rax
0x400131:	cmp	qword ptr [rbp - 0x78], 0
0x400136:	jne	0x400142
<Block for 0x400191, 16 bytes>
0x400191:	mov	byte ptr [rbp - 0xd], 0
0x400195:	lea	rax, [rbp - 0x70]
0x400199:	mov	rdi, rax
0x40019c:	call	0x500018
<Block for 0x400138, 10 bytes>
0x400138:	mov	edi, 0xffffffff
0x40013d:	call	0x500008
<Block for 0x400142, 22 bytes>
0x400142:	mov	rax, qword ptr [rbp - 0x78]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x41
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x4001a1, 22 bytes>
0x4001a1:	mov	rdx, rax
0x4001a4:	mov	rcx, qword ptr [rbp - 0x80]
0x4001a8:	lea	rax, [rbp - 0x70]
0x4001ac:	mov	rsi, rcx
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500020
<Block for 0x400158, 35 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x78]
0x40015c:	add	rax, 0x63
0x400160:	mov	byte ptr [rax], 0
0x400163:	mov	rax, qword ptr [rbp - 0x78]
0x400167:	mov	qword ptr [rbp - 0x80], rax
0x40016b:	add	dword ptr [rbp - 0x84], 1
0x400172:	cmp	dword ptr [rbp - 0x84], 0
0x400179:	jle	0x400123
<Block for 0x4001b7, 16 bytes>
0x4001b7:	mov	byte ptr [rbp - 0xd], 0
0x4001bb:	lea	rax, [rbp - 0x70]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500028
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500030
