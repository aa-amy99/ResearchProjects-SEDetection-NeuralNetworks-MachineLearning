<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	dword ptr [rbp - 0x84], 0
0x400030:	jmp	0x400085
<Block for 0x400085, 9 bytes>
0x400085:	cmp	dword ptr [rbp - 0x84], 0
0x40008c:	jle	0x400032
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0x64
0x400037:	call	0x500000
<Block for 0x40008e, 22 bytes>
0x40008e:	lea	rax, [rbp - 0x70]
0x400092:	mov	edx, 0x63
0x400097:	mov	esi, 0x43
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
<Block for 0x40003c, 11 bytes>
0x40003c:	mov	qword ptr [rbp - 0x78], rax
0x400040:	cmp	qword ptr [rbp - 0x78], 0
0x400045:	jne	0x400051
<Block for 0x4000a4, 16 bytes>
0x4000a4:	mov	byte ptr [rbp - 0xd], 0
0x4000a8:	lea	rax, [rbp - 0x70]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500018
<Block for 0x400047, 10 bytes>
0x400047:	mov	edi, 0xffffffff
0x40004c:	call	0x500008
<Block for 0x400051, 22 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	mov	edx, 0x63
0x40005a:	mov	esi, 0x41
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x4000b4, 22 bytes>
0x4000b4:	mov	rdx, rax
0x4000b7:	mov	rcx, qword ptr [rbp - 0x80]
0x4000bb:	lea	rax, [rbp - 0x70]
0x4000bf:	mov	rsi, rcx
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500020
<Block for 0x400067, 39 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x78]
0x40006b:	add	rax, 0x63
0x40006f:	mov	byte ptr [rax], 0
0x400072:	mov	rax, qword ptr [rbp - 0x78]
0x400076:	sub	rax, 8
0x40007a:	mov	qword ptr [rbp - 0x80], rax
0x40007e:	add	dword ptr [rbp - 0x84], 1
0x400085:	cmp	dword ptr [rbp - 0x84], 0
0x40008c:	jle	0x400032
<Block for 0x4000ca, 16 bytes>
0x4000ca:	mov	byte ptr [rbp - 0xd], 0
0x4000ce:	lea	rax, [rbp - 0x70]
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500028
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x4000ef, 2 bytes>
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500030
