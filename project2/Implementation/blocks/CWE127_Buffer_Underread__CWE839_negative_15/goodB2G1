<Block for 0x40008e, 88 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x40
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000b0:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000b7:	nop	
0x4000b8:	mov	qword ptr [rbp - 0x30], 0
0x4000c0:	mov	qword ptr [rbp - 0x28], 0
0x4000c8:	mov	qword ptr [rbp - 0x20], 0
0x4000d0:	mov	qword ptr [rbp - 0x18], 0
0x4000d8:	mov	qword ptr [rbp - 0x10], 0
0x4000e0:	cmp	dword ptr [rbp - 0x34], 0
0x4000e4:	js	0x4000fe
<Block for 0x4000fe, 12 bytes>
0x4000fe:	lea	rdi, [rip + 0x223]
0x400105:	call	0x500008
<Block for 0x4000e6, 6 bytes>
0x4000e6:	cmp	dword ptr [rbp - 0x34], 9
0x4000ea:	jg	0x4000fe
<Block for 0x40010a, 17 bytes>
0x40010a:	nop	
0x40010b:	nop	
0x40010c:	mov	rax, qword ptr [rbp - 8]
0x400110:	xor	rax, qword ptr fs:[0x28]
0x400119:	je	0x400120
<Block for 0x4000ec, 16 bytes>
0x4000ec:	mov	eax, dword ptr [rbp - 0x34]
0x4000ef:	cdqe	
0x4000f1:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x500000
<Block for 0x400120, 2 bytes>
0x400120:	leave	
0x400121:	ret	
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500010
<Block for 0x4000fc, 2 bytes>
0x4000fc:	jmp	0x40010a
