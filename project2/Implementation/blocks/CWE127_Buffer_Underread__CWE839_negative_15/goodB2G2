<Block for 0x400122, 88 bytes>
0x400122:	endbr64	
0x400126:	push	rbp
0x400127:	mov	rbp, rsp
0x40012a:	sub	rsp, 0x40
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400144:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x40014b:	nop	
0x40014c:	mov	qword ptr [rbp - 0x30], 0
0x400154:	mov	qword ptr [rbp - 0x28], 0
0x40015c:	mov	qword ptr [rbp - 0x20], 0
0x400164:	mov	qword ptr [rbp - 0x18], 0
0x40016c:	mov	qword ptr [rbp - 0x10], 0
0x400174:	cmp	dword ptr [rbp - 0x34], 0
0x400178:	js	0x400192
<Block for 0x400192, 12 bytes>
0x400192:	lea	rdi, [rip + 0x18f]
0x400199:	call	0x500008
<Block for 0x40017a, 6 bytes>
0x40017a:	cmp	dword ptr [rbp - 0x34], 9
0x40017e:	jg	0x400192
<Block for 0x40019e, 17 bytes>
0x40019e:	nop	
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x400180, 16 bytes>
0x400180:	mov	eax, dword ptr [rbp - 0x34]
0x400183:	cdqe	
0x400185:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400189:	mov	edi, eax
0x40018b:	call	0x500000
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500010
<Block for 0x400190, 2 bytes>
0x400190:	jmp	0x40019e
