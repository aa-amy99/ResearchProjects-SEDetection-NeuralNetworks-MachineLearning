<Block for 0x4000e4, 53 bytes>
0x4000e4:	endbr64	
0x4000e8:	push	rbp
0x4000e9:	mov	rbp, rsp
0x4000ec:	sub	rsp, 0x20
0x4000f0:	mov	rax, qword ptr fs:[0x28]
0x4000f9:	mov	qword ptr [rbp - 8], rax
0x4000fd:	xor	eax, eax
0x4000ff:	mov	dword ptr [rbp - 0x1c], 0x64
0x400106:	mov	dword ptr [rbp - 0x10], 0
0x40010d:	mov	dword ptr [rbp - 0xc], 0
0x400114:	call	0x500000
<Block for 0x400119, 9 bytes>
0x400119:	test	eax, eax
0x40011b:	setne	al
0x40011e:	test	al, al
0x400120:	je	0x40012a
<Block for 0x40012a, 14 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x18]
0x40012e:	mov	eax, dword ptr [rax + 4]
0x400131:	mov	edi, eax
0x400133:	call	0x500008
<Block for 0x400122, 22 bytes>
0x400122:	lea	rax, [rbp - 0x10]
0x400126:	mov	qword ptr [rbp - 0x18], rax
0x40012a:	mov	rax, qword ptr [rbp - 0x18]
0x40012e:	mov	eax, dword ptr [rax + 4]
0x400131:	mov	edi, eax
0x400133:	call	0x500008
<Block for 0x400138, 16 bytes>
0x400138:	nop	
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	xor	rax, qword ptr fs:[0x28]
0x400146:	je	0x40014d
<Block for 0x40014d, 2 bytes>
0x40014d:	leave	
0x40014e:	ret	
<Block for 0x400148, 5 bytes>
0x400148:	call	0x500010
