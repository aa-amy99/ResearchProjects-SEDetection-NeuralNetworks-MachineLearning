<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0x64
0x400022:	mov	dword ptr [rbp - 0x10], 0
0x400029:	mov	dword ptr [rbp - 0xc], 0
0x400030:	call	0x500000
<Block for 0x400035, 9 bytes>
0x400035:	test	eax, eax
0x400037:	setne	al
0x40003a:	test	al, al
0x40003c:	je	0x400046
<Block for 0x400046, 14 bytes>
0x400046:	mov	rax, qword ptr [rbp - 0x18]
0x40004a:	mov	eax, dword ptr [rax + 4]
0x40004d:	mov	edi, eax
0x40004f:	call	0x500008
<Block for 0x40003e, 22 bytes>
0x40003e:	lea	rax, [rbp - 0x1c]
0x400042:	mov	qword ptr [rbp - 0x18], rax
0x400046:	mov	rax, qword ptr [rbp - 0x18]
0x40004a:	mov	eax, dword ptr [rax + 4]
0x40004d:	mov	edi, eax
0x40004f:	call	0x500008
<Block for 0x400054, 16 bytes>
0x400054:	nop	
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	xor	rax, qword ptr fs:[0x28]
0x400062:	je	0x400069
<Block for 0x400069, 2 bytes>
0x400069:	leave	
0x40006a:	ret	
<Block for 0x400064, 5 bytes>
0x400064:	call	0x500010
