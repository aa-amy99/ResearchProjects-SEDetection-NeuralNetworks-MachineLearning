<Block for 0x400208, 225 bytes>
0x400208:	endbr64	
0x40020c:	push	rbp
0x40020d:	mov	rbp, rsp
0x400210:	add	rsp, -0x80
0x400214:	mov	rax, qword ptr fs:[0x28]
0x40021d:	mov	qword ptr [rbp - 8], rax
0x400221:	xor	eax, eax
0x400223:	mov	qword ptr [rbp - 0x70], 0
0x40022b:	mov	qword ptr [rbp - 0x68], 0
0x400233:	mov	qword ptr [rbp - 0x60], 0
0x40023b:	mov	qword ptr [rbp - 0x58], 0
0x400243:	mov	qword ptr [rbp - 0x50], 0
0x40024b:	mov	qword ptr [rbp - 0x48], 0
0x400253:	mov	qword ptr [rbp - 0x40], 0
0x40025b:	mov	qword ptr [rbp - 0x38], 0
0x400263:	mov	qword ptr [rbp - 0x30], 0
0x40026b:	mov	qword ptr [rbp - 0x28], 0
0x400273:	mov	qword ptr [rbp - 0x20], 0
0x40027b:	mov	qword ptr [rbp - 0x18], 0
0x400283:	mov	dword ptr [rbp - 0x10], 0
0x40028a:	lea	rax, [rbp - 0x70]
0x40028e:	mov	qword ptr [rbp - 0x78], rax
0x400292:	mov	rax, qword ptr [rbp - 0x78]
0x400296:	movabs	rdx, 0x6867666564636261
0x4002a0:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4002aa:	mov	qword ptr [rax], rdx
0x4002ad:	mov	qword ptr [rax + 8], rcx
0x4002b1:	movabs	rsi, 0x7877767574737271
0x4002bb:	mov	qword ptr [rax + 0x10], rsi
0x4002bf:	mov	word ptr [rax + 0x18], 0x7a79
0x4002c5:	mov	byte ptr [rax + 0x1a], 0
0x4002c9:	mov	rax, qword ptr [rbp - 0x78]
0x4002cd:	lea	rcx, [rax + 4]
0x4002d1:	mov	rax, qword ptr [rbp - 0x78]
0x4002d5:	add	rax, 6
0x4002d9:	mov	edx, 0xa
0x4002de:	mov	rsi, rcx
0x4002e1:	mov	rdi, rax
0x4002e4:	call	0x500018
<Block for 0x4002e9, 12 bytes>
0x4002e9:	mov	rax, qword ptr [rbp - 0x78]
0x4002ed:	mov	rdi, rax
0x4002f0:	call	0x500008
<Block for 0x4002f5, 16 bytes>
0x4002f5:	nop	
0x4002f6:	mov	rax, qword ptr [rbp - 8]
0x4002fa:	xor	rax, qword ptr fs:[0x28]
0x400303:	je	0x40030a
<Block for 0x40030a, 2 bytes>
0x40030a:	leave	
0x40030b:	ret	
<Block for 0x400305, 5 bytes>
0x400305:	call	0x500010
