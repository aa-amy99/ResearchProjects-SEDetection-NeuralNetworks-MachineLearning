<Block for 0x4000de, 36 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	add	rsp, -0x80
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	mov	eax, 0
0x4000fe:	test	eax, eax
0x400100:	je	0x400113
<Block for 0x400113, 123 bytes>
0x400113:	mov	qword ptr [rbp - 0x70], 0
0x40011b:	mov	qword ptr [rbp - 0x68], 0
0x400123:	mov	qword ptr [rbp - 0x60], 0
0x40012b:	mov	qword ptr [rbp - 0x58], 0
0x400133:	mov	qword ptr [rbp - 0x50], 0
0x40013b:	mov	qword ptr [rbp - 0x48], 0
0x400143:	mov	qword ptr [rbp - 0x40], 0
0x40014b:	mov	qword ptr [rbp - 0x38], 0
0x400153:	mov	qword ptr [rbp - 0x30], 0
0x40015b:	mov	qword ptr [rbp - 0x28], 0
0x400163:	mov	qword ptr [rbp - 0x20], 0
0x40016b:	mov	qword ptr [rbp - 0x18], 0
0x400173:	mov	dword ptr [rbp - 0x10], 0
0x40017a:	lea	rax, [rbp - 0x70]
0x40017e:	mov	qword ptr [rbp - 0x78], rax
0x400182:	lea	rdi, [rip + 0x17b]
0x400189:	call	0x500000
<Block for 0x400102, 12 bytes>
0x400102:	lea	rdi, [rip + 0x213]
0x400109:	call	0x500000
<Block for 0x40018e, 24 bytes>
0x40018e:	mov	rdx, qword ptr [rip + 0xffe73]
0x400195:	mov	rax, qword ptr [rbp - 0x78]
0x400199:	mov	esi, 0x64
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500010
<Block for 0x40010e, 5 bytes>
0x40010e:	jmp	0x4001cd
<Block for 0x4001a6, 5 bytes>
0x4001a6:	test	rax, rax
0x4001a9:	jne	0x4001c1
<Block for 0x4001cd, 16 bytes>
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x4001ab, 12 bytes>
0x4001ab:	lea	rdi, [rip + 0x17f]
0x4001b2:	call	0x500000
<Block for 0x4001c1, 12 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 0x78]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500000
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500018
<Block for 0x4001b7, 10 bytes>
0x4001b7:	mov	edi, 1
0x4001bc:	call	0x500020
