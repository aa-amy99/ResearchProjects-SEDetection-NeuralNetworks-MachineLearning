<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400081
<Block for 0x400081, 17 bytes>
0x400081:	mov	dword ptr [rbp - 0x44], 7
0x400088:	mov	eax, 0
0x40008d:	call	0x500000
<Block for 0x400030, 45 bytes>
0x400030:	mov	qword ptr [rbp - 0x16], 0
0x400038:	mov	dword ptr [rbp - 0xe], 0
0x40003f:	mov	word ptr [rbp - 0xa], 0
0x400045:	mov	rdx, qword ptr [rip + 0xfffbc]
0x40004c:	lea	rax, [rbp - 0x16]
0x400050:	mov	esi, 0xe
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x400092, 4 bytes>
0x400092:	test	eax, eax
0x400094:	je	0x4000e4
<Block for 0x40005d, 5 bytes>
0x40005d:	test	rax, rax
0x400060:	je	0x400073
<Block for 0x4000e4, 46 bytes>
0x4000e4:	mov	qword ptr [rbp - 0x40], 0
0x4000ec:	mov	qword ptr [rbp - 0x38], 0
0x4000f4:	mov	qword ptr [rbp - 0x30], 0
0x4000fc:	mov	qword ptr [rbp - 0x28], 0
0x400104:	mov	qword ptr [rbp - 0x20], 0
0x40010c:	cmp	dword ptr [rbp - 0x44], 0
0x400110:	js	0x40012a
<Block for 0x400096, 46 bytes>
0x400096:	mov	qword ptr [rbp - 0x40], 0
0x40009e:	mov	qword ptr [rbp - 0x38], 0
0x4000a6:	mov	qword ptr [rbp - 0x30], 0
0x4000ae:	mov	qword ptr [rbp - 0x28], 0
0x4000b6:	mov	qword ptr [rbp - 0x20], 0
0x4000be:	cmp	dword ptr [rbp - 0x44], 0
0x4000c2:	js	0x4000d6
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x38e]
0x40007a:	call	0x500020
<Block for 0x400062, 12 bytes>
0x400062:	lea	rax, [rbp - 0x16]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x40012a, 12 bytes>
0x40012a:	lea	rdi, [rip + 0x307]
0x400131:	call	0x500020
<Block for 0x400112, 6 bytes>
0x400112:	cmp	dword ptr [rbp - 0x44], 9
0x400116:	jg	0x40012a
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0x33b]
0x4000dd:	call	0x500020
<Block for 0x4000c4, 16 bytes>
0x4000c4:	mov	eax, dword ptr [rbp - 0x44]
0x4000c7:	cdqe	
0x4000c9:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000cd:	mov	edi, eax
0x4000cf:	call	0x500028
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x400088
<Block for 0x40006e, 5 bytes>
0x40006e:	mov	dword ptr [rbp - 0x44], eax
0x400071:	jmp	0x400088
<Block for 0x400136, 16 bytes>
0x400136:	nop	
0x400137:	mov	rax, qword ptr [rbp - 8]
0x40013b:	xor	rax, qword ptr fs:[0x28]
0x400144:	je	0x40014b
<Block for 0x400118, 16 bytes>
0x400118:	mov	eax, dword ptr [rbp - 0x44]
0x40011b:	cdqe	
0x40011d:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400121:	mov	edi, eax
0x400123:	call	0x500028
<Block for 0x4000e2, 2 bytes>
0x4000e2:	jmp	0x400136
<Block for 0x4000d4, 2 bytes>
0x4000d4:	jmp	0x400136
<Block for 0x400088, 10 bytes>
0x400088:	mov	eax, 0
0x40008d:	call	0x500000
<Block for 0x40014b, 2 bytes>
0x40014b:	leave	
0x40014c:	ret	
<Block for 0x400146, 5 bytes>
0x400146:	call	0x500030
<Block for 0x400128, 2 bytes>
0x400128:	jmp	0x400136
