<Block for 0x400112, 22 bytes>
0x400112:	endbr64	
0x400116:	push	rbp
0x400117:	mov	rbp, rsp
0x40011a:	sub	rsp, 0x10
0x40011e:	mov	eax, 0
0x400123:	call	0x500000
<Block for 0x400128, 4 bytes>
0x400128:	test	eax, eax
0x40012a:	je	0x400194
<Block for 0x400194, 3 bytes>
0x400194:	nop	
0x400195:	leave	
0x400196:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500008
<Block for 0x400131, 62 bytes>
0x400131:	mov	edx, eax
0x400133:	movsxd	rax, edx
0x400136:	imul	rax, rax, 0x55555556
0x40013d:	shr	rax, 0x20
0x400141:	mov	rcx, rax
0x400144:	mov	eax, edx
0x400146:	sar	eax, 0x1f
0x400149:	mov	esi, ecx
0x40014b:	sub	esi, eax
0x40014d:	mov	eax, esi
0x40014f:	mov	dword ptr [rbp - 4], eax
0x400152:	mov	ecx, dword ptr [rbp - 4]
0x400155:	mov	eax, ecx
0x400157:	add	eax, eax
0x400159:	add	eax, ecx
0x40015b:	sub	edx, eax
0x40015d:	mov	eax, edx
0x40015f:	mov	dword ptr [rbp - 4], eax
0x400162:	mov	dword ptr [rbp - 8], 0
0x400169:	cmp	dword ptr [rbp - 4], 0
0x40016d:	jne	0x400182
<Block for 0x40016f, 12 bytes>
0x40016f:	lea	rdi, [rip + 0x40]
0x400176:	call	0x500010
<Block for 0x400182, 6 bytes>
0x400182:	cmp	dword ptr [rbp - 8], 0
0x400186:	je	0x400194
<Block for 0x40017b, 13 bytes>
0x40017b:	mov	dword ptr [rbp - 8], 1
0x400182:	cmp	dword ptr [rbp - 8], 0
0x400186:	je	0x400194
<Block for 0x400188, 12 bytes>
0x400188:	lea	rdi, [rip + 0x2e]
0x40018f:	call	0x500010
