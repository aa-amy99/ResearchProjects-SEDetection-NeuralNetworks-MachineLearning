<Block for 0x4001ec, 51 bytes>
0x4001ec:	endbr64	
0x4001f0:	push	rbp
0x4001f1:	mov	rbp, rsp
0x4001f4:	sub	rsp, 0xe0
0x4001fb:	mov	rax, qword ptr fs:[0x28]
0x400204:	mov	qword ptr [rbp - 8], rax
0x400208:	xor	eax, eax
0x40020a:	mov	qword ptr [rbp - 0xe0], 0
0x400215:	mov	eax, 0
0x40021a:	call	0x500000
<Block for 0x40021f, 4 bytes>
0x40021f:	test	eax, eax
0x400221:	je	0x40027d
<Block for 0x40027d, 25 bytes>
0x40027d:	lea	rax, [rbp - 0xd0]
0x400284:	mov	edx, 0xc7
0x400289:	mov	esi, 0x43
0x40028e:	mov	rdi, rax
0x400291:	call	0x500018
<Block for 0x400223, 10 bytes>
0x400223:	mov	edi, 0x64
0x400228:	call	0x500008
<Block for 0x400296, 29 bytes>
0x400296:	mov	byte ptr [rbp - 9], 0
0x40029a:	mov	rdx, qword ptr [rbp - 0xe0]
0x4002a1:	lea	rax, [rbp - 0xd0]
0x4002a8:	mov	rsi, rdx
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x500020
<Block for 0x40022d, 17 bytes>
0x40022d:	mov	qword ptr [rbp - 0xd8], rax
0x400234:	cmp	qword ptr [rbp - 0xd8], 0
0x40023c:	jne	0x400248
<Block for 0x4002b3, 15 bytes>
0x4002b3:	lea	rax, [rbp - 0xd0]
0x4002ba:	mov	rdi, rax
0x4002bd:	call	0x500028
<Block for 0x40023e, 10 bytes>
0x40023e:	mov	edi, 0xffffffff
0x400243:	call	0x500010
<Block for 0x400248, 25 bytes>
0x400248:	mov	rax, qword ptr [rbp - 0xd8]
0x40024f:	mov	edx, 0x63
0x400254:	mov	esi, 0x41
0x400259:	mov	rdi, rax
0x40025c:	call	0x500018
<Block for 0x4002c2, 16 bytes>
0x4002c2:	nop	
0x4002c3:	mov	rax, qword ptr [rbp - 8]
0x4002c7:	xor	rax, qword ptr fs:[0x28]
0x4002d0:	je	0x4002d7
<Block for 0x400261, 53 bytes>
0x400261:	mov	rax, qword ptr [rbp - 0xd8]
0x400268:	add	rax, 0x63
0x40026c:	mov	byte ptr [rax], 0
0x40026f:	mov	rax, qword ptr [rbp - 0xd8]
0x400276:	mov	qword ptr [rbp - 0xe0], rax
0x40027d:	lea	rax, [rbp - 0xd0]
0x400284:	mov	edx, 0xc7
0x400289:	mov	esi, 0x43
0x40028e:	mov	rdi, rax
0x400291:	call	0x500018
<Block for 0x4002d7, 2 bytes>
0x4002d7:	leave	
0x4002d8:	ret	
<Block for 0x4002d2, 5 bytes>
0x4002d2:	call	0x500030
