<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, 0
0x40002e:	call	0x500000
<Block for 0x400033, 4 bytes>
0x400033:	test	eax, eax
0x400035:	je	0x400095
<Block for 0x400095, 25 bytes>
0x400095:	lea	rax, [rbp - 0xd0]
0x40009c:	mov	edx, 0xc7
0x4000a1:	mov	esi, 0x43
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500018
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500008
<Block for 0x4000ae, 29 bytes>
0x4000ae:	mov	byte ptr [rbp - 9], 0
0x4000b2:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b9:	lea	rax, [rbp - 0xd0]
0x4000c0:	mov	rsi, rdx
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500020
<Block for 0x400041, 17 bytes>
0x400041:	mov	qword ptr [rbp - 0xd8], rax
0x400048:	cmp	qword ptr [rbp - 0xd8], 0
0x400050:	jne	0x40005c
<Block for 0x4000cb, 15 bytes>
0x4000cb:	lea	rax, [rbp - 0xd0]
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500028
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 0xffffffff
0x400057:	call	0x500010
<Block for 0x40005c, 25 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0xd8]
0x400063:	mov	edx, 0x63
0x400068:	mov	esi, 0x41
0x40006d:	mov	rdi, rax
0x400070:	call	0x500018
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x400075, 57 bytes>
0x400075:	mov	rax, qword ptr [rbp - 0xd8]
0x40007c:	add	rax, 0x63
0x400080:	mov	byte ptr [rax], 0
0x400083:	mov	rax, qword ptr [rbp - 0xd8]
0x40008a:	sub	rax, 8
0x40008e:	mov	qword ptr [rbp - 0xe0], rax
0x400095:	lea	rax, [rbp - 0xd0]
0x40009c:	mov	edx, 0xc7
0x4000a1:	mov	esi, 0x43
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500018
<Block for 0x4000ef, 2 bytes>
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500030
