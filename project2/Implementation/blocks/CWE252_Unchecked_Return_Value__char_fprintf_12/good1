<Block for 0x40006f, 18 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	mov	eax, 0
0x40007c:	call	0x500000
<Block for 0x400081, 4 bytes>
0x400081:	test	eax, eax
0x400083:	je	0x4000b9
<Block for 0x4000b9, 34 bytes>
0x4000b9:	mov	rax, qword ptr [rip + 0xfff48]
0x4000c0:	lea	rdx, [rip + 0x3c]
0x4000c7:	lea	rsi, [rip + 0x3c]
0x4000ce:	mov	rdi, rax
0x4000d1:	mov	eax, 0
0x4000d6:	call	0x500010
<Block for 0x400085, 34 bytes>
0x400085:	mov	rax, qword ptr [rip + 0xfff7c]
0x40008c:	lea	rdx, [rip + 0x70]
0x400093:	lea	rsi, [rip + 0x70]
0x40009a:	mov	rdi, rax
0x40009d:	mov	eax, 0
0x4000a2:	call	0x500010
<Block for 0x4000db, 4 bytes>
0x4000db:	test	eax, eax
0x4000dd:	jns	0x4000eb
<Block for 0x4000a7, 4 bytes>
0x4000a7:	test	eax, eax
0x4000a9:	jns	0x4000eb
<Block for 0x4000df, 12 bytes>
0x4000df:	lea	rdi, [rip + 0x28]
0x4000e6:	call	0x500018
<Block for 0x4000eb, 3 bytes>
0x4000eb:	nop	
0x4000ec:	pop	rbp
0x4000ed:	ret	
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x5c]
0x4000b2:	call	0x500018
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x4000eb
