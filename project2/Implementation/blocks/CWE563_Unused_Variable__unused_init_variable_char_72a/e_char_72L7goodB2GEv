<Block for 0x400171, 40 bytes>
0x400171:	endbr64	
0x400175:	push	rbp
0x400176:	mov	rbp, rsp
0x400179:	push	rbx
0x40017a:	sub	rsp, 0x58
0x40017e:	mov	rax, qword ptr fs:[0x28]
0x400187:	mov	qword ptr [rbp - 0x18], rax
0x40018b:	xor	eax, eax
0x40018d:	lea	rax, [rbp - 0x50]
0x400191:	mov	rdi, rax
0x400194:	call	0x400360
<Block for 0x400199, 16 bytes>
0x400199:	mov	byte ptr [rbp - 0x59], 0x43
0x40019d:	lea	rax, [rbp - 0x50]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4004ce
<Block for 0x4001a9, 23 bytes>
0x4001a9:	mov	qword ptr [rbp - 0x58], rax
0x4001ad:	lea	rdx, [rbp - 0x58]
0x4001b1:	lea	rax, [rbp - 0x30]
0x4001b5:	mov	rsi, rdx
0x4001b8:	mov	rdi, rax
0x4001bb:	call	0x40051e
<Block for 0x4001c0, 28 bytes>
0x4001c0:	lea	rdx, [rbp - 0x59]
0x4001c4:	mov	rsi, qword ptr [rbp - 0x30]
0x4001c8:	lea	rax, [rbp - 0x50]
0x4001cc:	mov	rcx, rdx
0x4001cf:	mov	edx, 1
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x40054c
<Block for 0x4001dc, 12 bytes>
0x4001dc:	lea	rax, [rbp - 0x50]
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x4004ce
<Block for 0x4001e8, 23 bytes>
0x4001e8:	mov	qword ptr [rbp - 0x58], rax
0x4001ec:	lea	rdx, [rbp - 0x58]
0x4001f0:	lea	rax, [rbp - 0x30]
0x4001f4:	mov	rsi, rdx
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x40051e
<Block for 0x4001ff, 28 bytes>
0x4001ff:	lea	rdx, [rbp - 0x59]
0x400203:	mov	rsi, qword ptr [rbp - 0x30]
0x400207:	lea	rax, [rbp - 0x50]
0x40020b:	mov	rcx, rdx
0x40020e:	mov	edx, 1
0x400213:	mov	rdi, rax
0x400216:	call	0x40054c
<Block for 0x40021b, 12 bytes>
0x40021b:	lea	rax, [rbp - 0x50]
0x40021f:	mov	rdi, rax
0x400222:	call	0x4004ce
<Block for 0x400227, 23 bytes>
0x400227:	mov	qword ptr [rbp - 0x58], rax
0x40022b:	lea	rdx, [rbp - 0x58]
0x40022f:	lea	rax, [rbp - 0x30]
0x400233:	mov	rsi, rdx
0x400236:	mov	rdi, rax
0x400239:	call	0x40051e
<Block for 0x40023e, 28 bytes>
0x40023e:	lea	rdx, [rbp - 0x59]
0x400242:	mov	rsi, qword ptr [rbp - 0x30]
0x400246:	lea	rax, [rbp - 0x50]
0x40024a:	mov	rcx, rdx
0x40024d:	mov	edx, 1
0x400252:	mov	rdi, rax
0x400255:	call	0x40054c
<Block for 0x40025a, 19 bytes>
0x40025a:	lea	rdx, [rbp - 0x50]
0x40025e:	lea	rax, [rbp - 0x30]
0x400262:	mov	rsi, rdx
0x400265:	mov	rdi, rax
0x400268:	call	0x400612
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rax, [rbp - 0x30]
0x400271:	mov	rdi, rax
0x400274:	call	0x500018
<Block for 0x400279, 12 bytes>
0x400279:	lea	rax, [rbp - 0x30]
0x40027d:	mov	rdi, rax
0x400280:	call	0x400486
<Block for 0x400285, 12 bytes>
0x400285:	lea	rax, [rbp - 0x50]
0x400289:	mov	rdi, rax
0x40028c:	call	0x400486
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 0x18]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002db
<Block for 0x4002db, 7 bytes>
0x4002db:	add	rsp, 0x58
0x4002df:	pop	rbx
0x4002e0:	pop	rbp
0x4002e1:	ret	
<Block for 0x4002a1, 2 bytes>
0x4002a1:	jmp	0x4002d6
<Block for 0x4002d6, 5 bytes>
0x4002d6:	call	0x500010
