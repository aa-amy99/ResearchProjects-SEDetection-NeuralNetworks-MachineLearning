<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400360
<Block for 0x400028, 16 bytes>
0x400028:	mov	byte ptr [rbp - 0x59], 0x43
0x40002c:	lea	rax, [rbp - 0x50]
0x400030:	mov	rdi, rax
0x400033:	call	0x4004ce
<Block for 0x400038, 23 bytes>
0x400038:	mov	qword ptr [rbp - 0x58], rax
0x40003c:	lea	rdx, [rbp - 0x58]
0x400040:	lea	rax, [rbp - 0x30]
0x400044:	mov	rsi, rdx
0x400047:	mov	rdi, rax
0x40004a:	call	0x40051e
<Block for 0x40004f, 28 bytes>
0x40004f:	lea	rdx, [rbp - 0x59]
0x400053:	mov	rsi, qword ptr [rbp - 0x30]
0x400057:	lea	rax, [rbp - 0x50]
0x40005b:	mov	rcx, rdx
0x40005e:	mov	edx, 1
0x400063:	mov	rdi, rax
0x400066:	call	0x40054c
<Block for 0x40006b, 12 bytes>
0x40006b:	lea	rax, [rbp - 0x50]
0x40006f:	mov	rdi, rax
0x400072:	call	0x4004ce
<Block for 0x400077, 23 bytes>
0x400077:	mov	qword ptr [rbp - 0x58], rax
0x40007b:	lea	rdx, [rbp - 0x58]
0x40007f:	lea	rax, [rbp - 0x30]
0x400083:	mov	rsi, rdx
0x400086:	mov	rdi, rax
0x400089:	call	0x40051e
<Block for 0x40008e, 28 bytes>
0x40008e:	lea	rdx, [rbp - 0x59]
0x400092:	mov	rsi, qword ptr [rbp - 0x30]
0x400096:	lea	rax, [rbp - 0x50]
0x40009a:	mov	rcx, rdx
0x40009d:	mov	edx, 1
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x40054c
<Block for 0x4000aa, 12 bytes>
0x4000aa:	lea	rax, [rbp - 0x50]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x4004ce
<Block for 0x4000b6, 23 bytes>
0x4000b6:	mov	qword ptr [rbp - 0x58], rax
0x4000ba:	lea	rdx, [rbp - 0x58]
0x4000be:	lea	rax, [rbp - 0x30]
0x4000c2:	mov	rsi, rdx
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x40051e
<Block for 0x4000cd, 28 bytes>
0x4000cd:	lea	rdx, [rbp - 0x59]
0x4000d1:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d5:	lea	rax, [rbp - 0x50]
0x4000d9:	mov	rcx, rdx
0x4000dc:	mov	edx, 1
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x40054c
<Block for 0x4000e9, 19 bytes>
0x4000e9:	lea	rdx, [rbp - 0x50]
0x4000ed:	lea	rax, [rbp - 0x30]
0x4000f1:	mov	rsi, rdx
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x400612
<Block for 0x4000fc, 12 bytes>
0x4000fc:	lea	rax, [rbp - 0x30]
0x400100:	mov	rdi, rax
0x400103:	call	0x500000
<Block for 0x400108, 12 bytes>
0x400108:	lea	rax, [rbp - 0x30]
0x40010c:	mov	rdi, rax
0x40010f:	call	0x400486
<Block for 0x400114, 12 bytes>
0x400114:	lea	rax, [rbp - 0x50]
0x400118:	mov	rdi, rax
0x40011b:	call	0x400486
<Block for 0x400120, 16 bytes>
0x400120:	nop	
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	xor	rax, qword ptr fs:[0x28]
0x40012e:	je	0x40016a
<Block for 0x40016a, 7 bytes>
0x40016a:	add	rsp, 0x58
0x40016e:	pop	rbx
0x40016f:	pop	rbp
0x400170:	ret	
<Block for 0x400130, 2 bytes>
0x400130:	jmp	0x400165
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500010
