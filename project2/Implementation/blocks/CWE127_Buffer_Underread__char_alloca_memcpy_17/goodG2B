<Block for 0x4001ad, 85 bytes>
0x4001ad:	endbr64	
0x4001b1:	push	rbp
0x4001b2:	mov	rbp, rsp
0x4001b5:	push	rbx
0x4001b6:	sub	rsp, 0x98
0x4001bd:	mov	rax, qword ptr fs:[0x28]
0x4001c6:	mov	qword ptr [rbp - 0x18], rax
0x4001ca:	xor	eax, eax
0x4001cc:	mov	eax, 0x10
0x4001d1:	sub	rax, 1
0x4001d5:	add	rax, 0x6c
0x4001d9:	mov	esi, 0x10
0x4001de:	mov	edx, 0
0x4001e3:	div	rsi
0x4001e6:	imul	rax, rax, 0x10
0x4001ea:	mov	rdx, rax
0x4001ed:	and	rdx, 0xfffffffffffff000
0x4001f4:	mov	rbx, rsp
0x4001f7:	sub	rbx, rdx
0x4001fa:	mov	rdx, rbx
0x4001fd:	cmp	rsp, rdx
0x400200:	je	0x400214
<Block for 0x400214, 26 bytes>
0x400214:	mov	rdx, rax
0x400217:	and	edx, 0xfff
0x40021d:	sub	rsp, rdx
0x400220:	mov	rdx, rax
0x400223:	and	edx, 0xfff
0x400229:	test	rdx, rdx
0x40022c:	je	0x40023e
<Block for 0x400202, 18 bytes>
0x400202:	sub	rsp, 0x1000
0x400209:	or	qword ptr [rsp + 0xff8], 0
0x400212:	jmp	0x4001fd
<Block for 0x40023e, 47 bytes>
0x40023e:	mov	rax, rsp
0x400241:	add	rax, 0xf
0x400245:	shr	rax, 4
0x400249:	shl	rax, 4
0x40024d:	mov	qword ptr [rbp - 0x88], rax
0x400254:	mov	rax, qword ptr [rbp - 0x88]
0x40025b:	mov	edx, 0x63
0x400260:	mov	esi, 0x41
0x400265:	mov	rdi, rax
0x400268:	call	0x500000
<Block for 0x40022e, 63 bytes>
0x40022e:	and	eax, 0xfff
0x400233:	sub	rax, 8
0x400237:	add	rax, rsp
0x40023a:	or	qword ptr [rax], 0
0x40023e:	mov	rax, rsp
0x400241:	add	rax, 0xf
0x400245:	shr	rax, 4
0x400249:	shl	rax, 4
0x40024d:	mov	qword ptr [rbp - 0x88], rax
0x400254:	mov	rax, qword ptr [rbp - 0x88]
0x40025b:	mov	edx, 0x63
0x400260:	mov	esi, 0x41
0x400265:	mov	rdi, rax
0x400268:	call	0x500000
<Block for 0x4001fd, 5 bytes>
0x4001fd:	cmp	rsp, rdx
0x400200:	je	0x400214
<Block for 0x40026d, 26 bytes>
0x40026d:	mov	rax, qword ptr [rbp - 0x88]
0x400274:	add	rax, 0x63
0x400278:	mov	byte ptr [rax], 0
0x40027b:	mov	dword ptr [rbp - 0x94], 0
0x400285:	jmp	0x40029c
<Block for 0x40029c, 9 bytes>
0x40029c:	cmp	dword ptr [rbp - 0x94], 0
0x4002a3:	jle	0x400287
<Block for 0x400287, 30 bytes>
0x400287:	mov	rax, qword ptr [rbp - 0x88]
0x40028e:	mov	qword ptr [rbp - 0x90], rax
0x400295:	add	dword ptr [rbp - 0x94], 1
0x40029c:	cmp	dword ptr [rbp - 0x94], 0
0x4002a3:	jle	0x400287
<Block for 0x4002a5, 22 bytes>
0x4002a5:	lea	rax, [rbp - 0x80]
0x4002a9:	mov	edx, 0x63
0x4002ae:	mov	esi, 0x43
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x500000
<Block for 0x4002bb, 128 bytes>
0x4002bb:	mov	byte ptr [rbp - 0x1d], 0
0x4002bf:	mov	rax, qword ptr [rbp - 0x90]
0x4002c6:	mov	rcx, qword ptr [rax]
0x4002c9:	mov	rbx, qword ptr [rax + 8]
0x4002cd:	mov	qword ptr [rbp - 0x80], rcx
0x4002d1:	mov	qword ptr [rbp - 0x78], rbx
0x4002d5:	mov	rcx, qword ptr [rax + 0x10]
0x4002d9:	mov	rbx, qword ptr [rax + 0x18]
0x4002dd:	mov	qword ptr [rbp - 0x70], rcx
0x4002e1:	mov	qword ptr [rbp - 0x68], rbx
0x4002e5:	mov	rcx, qword ptr [rax + 0x20]
0x4002e9:	mov	rbx, qword ptr [rax + 0x28]
0x4002ed:	mov	qword ptr [rbp - 0x60], rcx
0x4002f1:	mov	qword ptr [rbp - 0x58], rbx
0x4002f5:	mov	rcx, qword ptr [rax + 0x30]
0x4002f9:	mov	rbx, qword ptr [rax + 0x38]
0x4002fd:	mov	qword ptr [rbp - 0x50], rcx
0x400301:	mov	qword ptr [rbp - 0x48], rbx
0x400305:	mov	rcx, qword ptr [rax + 0x40]
0x400309:	mov	rbx, qword ptr [rax + 0x48]
0x40030d:	mov	qword ptr [rbp - 0x40], rcx
0x400311:	mov	qword ptr [rbp - 0x38], rbx
0x400315:	mov	rcx, qword ptr [rax + 0x50]
0x400319:	mov	rbx, qword ptr [rax + 0x58]
0x40031d:	mov	qword ptr [rbp - 0x30], rcx
0x400321:	mov	qword ptr [rbp - 0x28], rbx
0x400325:	mov	eax, dword ptr [rax + 0x60]
0x400328:	mov	dword ptr [rbp - 0x20], eax
0x40032b:	mov	byte ptr [rbp - 0x1d], 0
0x40032f:	lea	rax, [rbp - 0x80]
0x400333:	mov	rdi, rax
0x400336:	call	0x500008
<Block for 0x40033b, 16 bytes>
0x40033b:	nop	
0x40033c:	mov	rax, qword ptr [rbp - 0x18]
0x400340:	xor	rax, qword ptr fs:[0x28]
0x400349:	je	0x400350
<Block for 0x400350, 6 bytes>
0x400350:	mov	rbx, qword ptr [rbp - 8]
0x400354:	leave	
0x400355:	ret	
<Block for 0x40034b, 5 bytes>
0x40034b:	call	0x500010
