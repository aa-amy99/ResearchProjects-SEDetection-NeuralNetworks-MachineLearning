<Block for 0x40026a, 112 bytes>
0x40026a:	endbr64	
0x40026e:	push	rbp
0x40026f:	mov	rbp, rsp
0x400272:	sub	rsp, 0xc0
0x400279:	mov	rax, qword ptr fs:[0x28]
0x400282:	mov	qword ptr [rbp - 8], rax
0x400286:	xor	eax, eax
0x400288:	lea	rax, [rbp - 0xb8]
0x40028f:	mov	qword ptr [rbp - 0xa8], rax
0x400296:	lea	rax, [rbp - 0xb8]
0x40029d:	mov	qword ptr [rbp - 0xa0], rax
0x4002a4:	mov	eax, 0x10
0x4002a9:	sub	rax, 1
0x4002ad:	add	rax, 0x3a
0x4002b1:	mov	ecx, 0x10
0x4002b6:	mov	edx, 0
0x4002bb:	div	rcx
0x4002be:	imul	rax, rax, 0x10
0x4002c2:	mov	rdx, rax
0x4002c5:	and	rdx, 0xfffffffffffff000
0x4002cc:	mov	rcx, rsp
0x4002cf:	sub	rcx, rdx
0x4002d2:	mov	rdx, rcx
0x4002d5:	cmp	rsp, rdx
0x4002d8:	je	0x4002ec
<Block for 0x4002ec, 26 bytes>
0x4002ec:	mov	rdx, rax
0x4002ef:	and	edx, 0xfff
0x4002f5:	sub	rsp, rdx
0x4002f8:	mov	rdx, rax
0x4002fb:	and	edx, 0xfff
0x400301:	test	rdx, rdx
0x400304:	je	0x400316
<Block for 0x4002da, 18 bytes>
0x4002da:	sub	rsp, 0x1000
0x4002e1:	or	qword ptr [rsp + 0xff8], 0
0x4002ea:	jmp	0x4002d5
<Block for 0x400316, 76 bytes>
0x400316:	mov	rax, rsp
0x400319:	add	rax, 0xf
0x40031d:	shr	rax, 4
0x400321:	shl	rax, 4
0x400325:	mov	qword ptr [rbp - 0x98], rax
0x40032c:	mov	eax, 0x10
0x400331:	sub	rax, 1
0x400335:	add	rax, 0x6c
0x400339:	mov	edi, 0x10
0x40033e:	mov	edx, 0
0x400343:	div	rdi
0x400346:	imul	rax, rax, 0x10
0x40034a:	mov	rdx, rax
0x40034d:	and	rdx, 0xfffffffffffff000
0x400354:	mov	rsi, rsp
0x400357:	sub	rsi, rdx
0x40035a:	mov	rdx, rsi
0x40035d:	cmp	rsp, rdx
0x400360:	je	0x400374
<Block for 0x400306, 92 bytes>
0x400306:	and	eax, 0xfff
0x40030b:	sub	rax, 8
0x40030f:	add	rax, rsp
0x400312:	or	qword ptr [rax], 0
0x400316:	mov	rax, rsp
0x400319:	add	rax, 0xf
0x40031d:	shr	rax, 4
0x400321:	shl	rax, 4
0x400325:	mov	qword ptr [rbp - 0x98], rax
0x40032c:	mov	eax, 0x10
0x400331:	sub	rax, 1
0x400335:	add	rax, 0x6c
0x400339:	mov	edi, 0x10
0x40033e:	mov	edx, 0
0x400343:	div	rdi
0x400346:	imul	rax, rax, 0x10
0x40034a:	mov	rdx, rax
0x40034d:	and	rdx, 0xfffffffffffff000
0x400354:	mov	rsi, rsp
0x400357:	sub	rsi, rdx
0x40035a:	mov	rdx, rsi
0x40035d:	cmp	rsp, rdx
0x400360:	je	0x400374
<Block for 0x4002d5, 5 bytes>
0x4002d5:	cmp	rsp, rdx
0x4002d8:	je	0x4002ec
<Block for 0x400374, 26 bytes>
0x400374:	mov	rdx, rax
0x400377:	and	edx, 0xfff
0x40037d:	sub	rsp, rdx
0x400380:	mov	rdx, rax
0x400383:	and	edx, 0xfff
0x400389:	test	rdx, rdx
0x40038c:	je	0x40039e
<Block for 0x400362, 18 bytes>
0x400362:	sub	rsp, 0x1000
0x400369:	or	qword ptr [rsp + 0xff8], 0
0x400372:	jmp	0x40035d
<Block for 0x40039e, 47 bytes>
0x40039e:	mov	rax, rsp
0x4003a1:	add	rax, 0xf
0x4003a5:	shr	rax, 4
0x4003a9:	shl	rax, 4
0x4003ad:	mov	qword ptr [rbp - 0x90], rax
0x4003b4:	mov	rax, qword ptr [rbp - 0x98]
0x4003bb:	mov	edx, 0x31
0x4003c0:	mov	esi, 0x41
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x500000
<Block for 0x40038e, 63 bytes>
0x40038e:	and	eax, 0xfff
0x400393:	sub	rax, 8
0x400397:	add	rax, rsp
0x40039a:	or	qword ptr [rax], 0
0x40039e:	mov	rax, rsp
0x4003a1:	add	rax, 0xf
0x4003a5:	shr	rax, 4
0x4003a9:	shl	rax, 4
0x4003ad:	mov	qword ptr [rbp - 0x90], rax
0x4003b4:	mov	rax, qword ptr [rbp - 0x98]
0x4003bb:	mov	edx, 0x31
0x4003c0:	mov	esi, 0x41
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x500000
<Block for 0x40035d, 5 bytes>
0x40035d:	cmp	rsp, rdx
0x400360:	je	0x400374
<Block for 0x4003cd, 39 bytes>
0x4003cd:	mov	rax, qword ptr [rbp - 0x98]
0x4003d4:	add	rax, 0x31
0x4003d8:	mov	byte ptr [rax], 0
0x4003db:	mov	rax, qword ptr [rbp - 0x90]
0x4003e2:	mov	edx, 0x63
0x4003e7:	mov	esi, 0x41
0x4003ec:	mov	rdi, rax
0x4003ef:	call	0x500000
<Block for 0x4003f4, 98 bytes>
0x4003f4:	mov	rax, qword ptr [rbp - 0x90]
0x4003fb:	add	rax, 0x63
0x4003ff:	mov	byte ptr [rax], 0
0x400402:	mov	rax, qword ptr [rbp - 0xa8]
0x400409:	mov	rax, qword ptr [rax]
0x40040c:	mov	qword ptr [rbp - 0x88], rax
0x400413:	mov	rax, qword ptr [rbp - 0x90]
0x40041a:	mov	qword ptr [rbp - 0x88], rax
0x400421:	mov	rax, qword ptr [rbp - 0xa8]
0x400428:	mov	rdx, qword ptr [rbp - 0x88]
0x40042f:	mov	qword ptr [rax], rdx
0x400432:	mov	rax, qword ptr [rbp - 0xa0]
0x400439:	mov	rax, qword ptr [rax]
0x40043c:	mov	qword ptr [rbp - 0x80], rax
0x400440:	lea	rax, [rbp - 0x70]
0x400444:	mov	edx, 0x63
0x400449:	mov	esi, 0x43
0x40044e:	mov	rdi, rax
0x400451:	call	0x500000
<Block for 0x400456, 16 bytes>
0x400456:	mov	byte ptr [rbp - 0xd], 0
0x40045a:	lea	rax, [rbp - 0x70]
0x40045e:	mov	rdi, rax
0x400461:	call	0x500008
<Block for 0x400466, 17 bytes>
0x400466:	mov	qword ptr [rbp - 0x78], rax
0x40046a:	mov	qword ptr [rbp - 0xb0], 0
0x400475:	jmp	0x4004a0
<Block for 0x4004a0, 13 bytes>
0x4004a0:	mov	rax, qword ptr [rbp - 0xb0]
0x4004a7:	cmp	rax, qword ptr [rbp - 0x78]
0x4004ab:	jb	0x400477
<Block for 0x400477, 54 bytes>
0x400477:	mov	rdx, qword ptr [rbp - 0x80]
0x40047b:	mov	rax, qword ptr [rbp - 0xb0]
0x400482:	add	rax, rdx
0x400485:	movzx	eax, byte ptr [rax]
0x400488:	lea	rcx, [rbp - 0x70]
0x40048c:	mov	rdx, qword ptr [rbp - 0xb0]
0x400493:	add	rdx, rcx
0x400496:	mov	byte ptr [rdx], al
0x400498:	add	qword ptr [rbp - 0xb0], 1
0x4004a0:	mov	rax, qword ptr [rbp - 0xb0]
0x4004a7:	cmp	rax, qword ptr [rbp - 0x78]
0x4004ab:	jb	0x400477
<Block for 0x4004ad, 16 bytes>
0x4004ad:	mov	byte ptr [rbp - 0xd], 0
0x4004b1:	lea	rax, [rbp - 0x70]
0x4004b5:	mov	rdi, rax
0x4004b8:	call	0x500010
<Block for 0x4004bd, 16 bytes>
0x4004bd:	nop	
0x4004be:	mov	rax, qword ptr [rbp - 8]
0x4004c2:	xor	rax, qword ptr fs:[0x28]
0x4004cb:	je	0x4004d2
<Block for 0x4004d2, 2 bytes>
0x4004d2:	leave	
0x4004d3:	ret	
<Block for 0x4004cd, 5 bytes>
0x4004cd:	call	0x500018
