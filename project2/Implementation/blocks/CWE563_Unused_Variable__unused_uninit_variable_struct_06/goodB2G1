<Block for 0x40000b, 37 bytes>
0x40000b:	endbr64	
0x40000f:	push	rbp
0x400010:	mov	rbp, rsp
0x400013:	sub	rsp, 0x10
0x400017:	mov	rax, qword ptr fs:[0x28]
0x400020:	mov	qword ptr [rbp - 8], rax
0x400024:	xor	eax, eax
0x400026:	mov	eax, 5
0x40002b:	cmp	eax, 5
0x40002e:	je	0x40003e
<Block for 0x40003e, 26 bytes>
0x40003e:	mov	dword ptr [rbp - 0x10], 0
0x400045:	mov	dword ptr [rbp - 0xc], 0
0x40004c:	lea	rax, [rbp - 0x10]
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400030, 12 bytes>
0x400030:	lea	rdi, [rip + 0xb1]
0x400037:	call	0x500000
<Block for 0x400058, 16 bytes>
0x400058:	nop	
0x400059:	mov	rax, qword ptr [rbp - 8]
0x40005d:	xor	rax, qword ptr fs:[0x28]
0x400066:	je	0x40006d
<Block for 0x40003c, 2 bytes>
0x40003c:	jmp	0x400058
<Block for 0x40006d, 2 bytes>
0x40006d:	leave	
0x40006e:	ret	
<Block for 0x400068, 5 bytes>
0x400068:	call	0x500010
