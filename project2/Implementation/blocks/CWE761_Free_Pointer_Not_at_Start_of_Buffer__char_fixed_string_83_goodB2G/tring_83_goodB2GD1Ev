<Block for 0x40003e, 39 bytes>
0x40003e:	endbr64	
0x400042:	push	rbp
0x400043:	mov	rbp, rsp
0x400046:	sub	rsp, 0x20
0x40004a:	mov	qword ptr [rbp - 0x18], rdi
0x40004e:	mov	qword ptr [rbp - 8], 0
0x400056:	mov	rax, qword ptr [rbp - 0x18]
0x40005a:	mov	rax, qword ptr [rax]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500000
<Block for 0x400065, 6 bytes>
0x400065:	cmp	qword ptr [rbp - 8], rax
0x400069:	jae	0x400095
<Block for 0x40006b, 21 bytes>
0x40006b:	mov	rax, qword ptr [rbp - 0x18]
0x40006f:	mov	rdx, qword ptr [rax]
0x400072:	mov	rax, qword ptr [rbp - 8]
0x400076:	add	rax, rdx
0x400079:	movzx	eax, byte ptr [rax]
0x40007c:	cmp	al, 0x53
0x40007e:	jne	0x40008e
<Block for 0x400095, 15 bytes>
0x400095:	mov	rax, qword ptr [rbp - 0x18]
0x400099:	mov	rax, qword ptr [rax]
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
<Block for 0x400080, 12 bytes>
0x400080:	lea	rdi, [rip + 0x20]
0x400087:	call	0x500008
<Block for 0x40008e, 7 bytes>
0x40008e:	add	qword ptr [rbp - 8], 1
0x400093:	jmp	0x400056
<Block for 0x4000a4, 3 bytes>
0x4000a4:	nop	
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x40008c, 2 bytes>
0x40008c:	jmp	0x400095
<Block for 0x400056, 15 bytes>
0x400056:	mov	rax, qword ptr [rbp - 0x18]
0x40005a:	mov	rax, qword ptr [rax]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500000
