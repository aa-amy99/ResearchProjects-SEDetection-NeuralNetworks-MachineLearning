<Block for 0x40013e, 43 bytes>
0x40013e:	endbr64	
0x400142:	push	rbp
0x400143:	mov	rbp, rsp
0x400146:	push	rbx
0x400147:	sub	rsp, 0x88
0x40014e:	mov	rax, qword ptr fs:[0x28]
0x400157:	mov	qword ptr [rbp - 0x18], rax
0x40015b:	xor	eax, eax
0x40015d:	lea	rax, [rbp - 0x80]
0x400161:	mov	rdi, rax
0x400164:	call	0x4003be
<Block for 0x400169, 55 bytes>
0x400169:	mov	qword ptr [rbp - 0x88], 0
0x400174:	mov	dword ptr [rbp - 0x50], 8
0x40017b:	lea	rax, [rbp - 0x50]
0x40017f:	mov	qword ptr [rbp - 0x88], rax
0x400186:	mov	dword ptr [rbp - 0x50], 0
0x40018d:	lea	rdx, [rbp - 0x50]
0x400191:	lea	rax, [rbp - 0x80]
0x400195:	mov	rsi, rdx
0x400198:	mov	rdi, rax
0x40019b:	call	0x400572
<Block for 0x4001a0, 36 bytes>
0x4001a0:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a7:	mov	qword ptr [rax], rdx
0x4001aa:	mov	dword ptr [rbp - 0x50], 1
0x4001b1:	lea	rdx, [rbp - 0x50]
0x4001b5:	lea	rax, [rbp - 0x80]
0x4001b9:	mov	rsi, rdx
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x400572
<Block for 0x4001c4, 36 bytes>
0x4001c4:	mov	rdx, qword ptr [rbp - 0x88]
0x4001cb:	mov	qword ptr [rax], rdx
0x4001ce:	mov	dword ptr [rbp - 0x50], 2
0x4001d5:	lea	rdx, [rbp - 0x50]
0x4001d9:	lea	rax, [rbp - 0x80]
0x4001dd:	mov	rsi, rdx
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x400572
<Block for 0x4001e8, 29 bytes>
0x4001e8:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ef:	mov	qword ptr [rax], rdx
0x4001f2:	lea	rdx, [rbp - 0x80]
0x4001f6:	lea	rax, [rbp - 0x50]
0x4001fa:	mov	rsi, rdx
0x4001fd:	mov	rdi, rax
0x400200:	call	0x4003fe
<Block for 0x400205, 12 bytes>
0x400205:	lea	rax, [rbp - 0x50]
0x400209:	mov	rdi, rax
0x40020c:	call	0x500018
<Block for 0x400211, 12 bytes>
0x400211:	lea	rax, [rbp - 0x50]
0x400215:	mov	rdi, rax
0x400218:	call	0x4003de
<Block for 0x40021d, 12 bytes>
0x40021d:	lea	rax, [rbp - 0x80]
0x400221:	mov	rdi, rax
0x400224:	call	0x4003de
<Block for 0x400229, 16 bytes>
0x400229:	nop	
0x40022a:	mov	rax, qword ptr [rbp - 0x18]
0x40022e:	xor	rax, qword ptr fs:[0x28]
0x400237:	je	0x400273
<Block for 0x400273, 10 bytes>
0x400273:	add	rsp, 0x88
0x40027a:	pop	rbx
0x40027b:	pop	rbp
0x40027c:	ret	
<Block for 0x400239, 2 bytes>
0x400239:	jmp	0x40026e
<Block for 0x40026e, 5 bytes>
0x40026e:	call	0x500010
