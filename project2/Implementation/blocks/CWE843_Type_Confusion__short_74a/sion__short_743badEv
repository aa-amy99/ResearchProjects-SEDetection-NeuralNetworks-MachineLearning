<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4003be
<Block for 0x40002b, 54 bytes>
0x40002b:	mov	qword ptr [rbp - 0x88], 0
0x400036:	mov	word ptr [rbp - 0x50], 8
0x40003c:	lea	rax, [rbp - 0x50]
0x400040:	mov	qword ptr [rbp - 0x88], rax
0x400047:	mov	dword ptr [rbp - 0x50], 0
0x40004e:	lea	rdx, [rbp - 0x50]
0x400052:	lea	rax, [rbp - 0x80]
0x400056:	mov	rsi, rdx
0x400059:	mov	rdi, rax
0x40005c:	call	0x400572
<Block for 0x400061, 36 bytes>
0x400061:	mov	rdx, qword ptr [rbp - 0x88]
0x400068:	mov	qword ptr [rax], rdx
0x40006b:	mov	dword ptr [rbp - 0x50], 1
0x400072:	lea	rdx, [rbp - 0x50]
0x400076:	lea	rax, [rbp - 0x80]
0x40007a:	mov	rsi, rdx
0x40007d:	mov	rdi, rax
0x400080:	call	0x400572
<Block for 0x400085, 36 bytes>
0x400085:	mov	rdx, qword ptr [rbp - 0x88]
0x40008c:	mov	qword ptr [rax], rdx
0x40008f:	mov	dword ptr [rbp - 0x50], 2
0x400096:	lea	rdx, [rbp - 0x50]
0x40009a:	lea	rax, [rbp - 0x80]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x400572
<Block for 0x4000a9, 29 bytes>
0x4000a9:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b0:	mov	qword ptr [rax], rdx
0x4000b3:	lea	rdx, [rbp - 0x80]
0x4000b7:	lea	rax, [rbp - 0x50]
0x4000bb:	mov	rsi, rdx
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x4003fe
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rax, [rbp - 0x50]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500000
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rax, [rbp - 0x50]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x4003de
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rax, [rbp - 0x80]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x4003de
<Block for 0x4000ea, 16 bytes>
0x4000ea:	nop	
0x4000eb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ef:	xor	rax, qword ptr fs:[0x28]
0x4000f8:	je	0x400134
<Block for 0x400134, 10 bytes>
0x400134:	add	rsp, 0x88
0x40013b:	pop	rbx
0x40013c:	pop	rbp
0x40013d:	ret	
<Block for 0x4000fa, 2 bytes>
0x4000fa:	jmp	0x40012f
<Block for 0x40012f, 5 bytes>
0x40012f:	call	0x500010
