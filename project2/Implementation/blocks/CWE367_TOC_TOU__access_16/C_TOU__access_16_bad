<Block for 0x400000, 161 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x70], 0
0x400023:	mov	qword ptr [rbp - 0x68], 0
0x40002b:	mov	qword ptr [rbp - 0x60], 0
0x400033:	mov	qword ptr [rbp - 0x58], 0
0x40003b:	mov	qword ptr [rbp - 0x50], 0
0x400043:	mov	qword ptr [rbp - 0x48], 0
0x40004b:	mov	qword ptr [rbp - 0x40], 0
0x400053:	mov	qword ptr [rbp - 0x38], 0
0x40005b:	mov	qword ptr [rbp - 0x30], 0
0x400063:	mov	qword ptr [rbp - 0x28], 0
0x40006b:	mov	qword ptr [rbp - 0x20], 0
0x400073:	mov	qword ptr [rbp - 0x18], 0
0x40007b:	mov	dword ptr [rbp - 0x10], 0
0x400082:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400089:	mov	rdx, qword ptr [rip + 0xfff70]
0x400090:	lea	rax, [rbp - 0x70]
0x400094:	mov	esi, 0x64
0x400099:	mov	rdi, rax
0x40009c:	call	0x500008
<Block for 0x4000a1, 5 bytes>
0x4000a1:	test	rax, rax
0x4000a4:	jne	0x4000b6
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rdi, [rip + 0x222]
0x4000ad:	call	0x500010
<Block for 0x4000b6, 11 bytes>
0x4000b6:	lea	rax, [rbp - 0x70]
0x4000ba:	movzx	eax, byte ptr [rax]
0x4000bd:	test	al, al
0x4000bf:	je	0x4000d6
<Block for 0x4000b2, 15 bytes>
0x4000b2:	mov	byte ptr [rbp - 0x70], 0
0x4000b6:	lea	rax, [rbp - 0x70]
0x4000ba:	movzx	eax, byte ptr [rax]
0x4000bd:	test	al, al
0x4000bf:	je	0x4000d6
<Block for 0x4000d6, 17 bytes>
0x4000d6:	lea	rax, [rbp - 0x70]
0x4000da:	mov	esi, 2
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500020
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500018
<Block for 0x4000e7, 5 bytes>
0x4000e7:	cmp	eax, -1
0x4000ea:	jne	0x4000f6
<Block for 0x4000cd, 26 bytes>
0x4000cd:	sub	rax, 1
0x4000d1:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000d6:	lea	rax, [rbp - 0x70]
0x4000da:	mov	esi, 2
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500020
<Block for 0x4000ec, 10 bytes>
0x4000ec:	mov	edi, 1
0x4000f1:	call	0x500028
<Block for 0x4000f6, 22 bytes>
0x4000f6:	lea	rax, [rbp - 0x70]
0x4000fa:	mov	esi, 2
0x4000ff:	mov	rdi, rax
0x400102:	mov	eax, 0
0x400107:	call	0x500030
<Block for 0x40010c, 9 bytes>
0x40010c:	mov	dword ptr [rbp - 0x74], eax
0x40010f:	cmp	dword ptr [rbp - 0x74], -1
0x400113:	jne	0x40011f
<Block for 0x400115, 10 bytes>
0x400115:	mov	edi, 1
0x40011a:	call	0x500028
<Block for 0x40011f, 22 bytes>
0x40011f:	mov	eax, dword ptr [rbp - 0x74]
0x400122:	mov	edx, 0xb
0x400127:	lea	rsi, [rip + 0x1b0]
0x40012e:	mov	edi, eax
0x400130:	call	0x500038
<Block for 0x400135, 6 bytes>
0x400135:	cmp	rax, -1
0x400139:	jne	0x400145
<Block for 0x40013b, 10 bytes>
0x40013b:	mov	edi, 1
0x400140:	call	0x500028
<Block for 0x400145, 6 bytes>
0x400145:	cmp	dword ptr [rbp - 0x74], -1
0x400149:	je	0x400155
<Block for 0x400155, 17 bytes>
0x400155:	nop	
0x400156:	nop	
0x400157:	mov	rax, qword ptr [rbp - 8]
0x40015b:	xor	rax, qword ptr fs:[0x28]
0x400164:	je	0x40016b
<Block for 0x40014b, 10 bytes>
0x40014b:	mov	eax, dword ptr [rbp - 0x74]
0x40014e:	mov	edi, eax
0x400150:	call	0x500040
<Block for 0x40016b, 2 bytes>
0x40016b:	leave	
0x40016c:	ret	
<Block for 0x400166, 5 bytes>
0x400166:	call	0x500048
