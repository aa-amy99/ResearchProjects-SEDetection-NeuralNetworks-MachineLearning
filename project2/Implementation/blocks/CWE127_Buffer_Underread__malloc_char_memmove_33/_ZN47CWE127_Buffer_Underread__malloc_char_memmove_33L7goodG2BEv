<Block for 0x4000ed, 65 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	sub	rsp, 0x90
0x4000fc:	mov	rax, qword ptr fs:[0x28]
0x400105:	mov	qword ptr [rbp - 8], rax
0x400109:	xor	eax, eax
0x40010b:	lea	rax, [rbp - 0x90]
0x400112:	mov	qword ptr [rbp - 0x88], rax
0x400119:	mov	qword ptr [rbp - 0x90], 0
0x400124:	mov	edi, 0x64
0x400129:	call	0x500000
<Block for 0x40012e, 11 bytes>
0x40012e:	mov	qword ptr [rbp - 0x80], rax
0x400132:	cmp	qword ptr [rbp - 0x80], 0
0x400137:	jne	0x400143
<Block for 0x400139, 10 bytes>
0x400139:	mov	edi, 0xffffffff
0x40013e:	call	0x500008
<Block for 0x400143, 22 bytes>
0x400143:	mov	rax, qword ptr [rbp - 0x80]
0x400147:	mov	edx, 0x63
0x40014c:	mov	esi, 0x41
0x400151:	mov	rdi, rax
0x400154:	call	0x500010
<Block for 0x400159, 58 bytes>
0x400159:	mov	rax, qword ptr [rbp - 0x80]
0x40015d:	add	rax, 0x63
0x400161:	mov	byte ptr [rax], 0
0x400164:	mov	rax, qword ptr [rbp - 0x80]
0x400168:	mov	qword ptr [rbp - 0x90], rax
0x40016f:	mov	rax, qword ptr [rbp - 0x88]
0x400176:	mov	rax, qword ptr [rax]
0x400179:	mov	qword ptr [rbp - 0x78], rax
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	edx, 0x63
0x400186:	mov	esi, 0x43
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500010
<Block for 0x400193, 28 bytes>
0x400193:	mov	byte ptr [rbp - 0xd], 0
0x400197:	mov	rcx, qword ptr [rbp - 0x78]
0x40019b:	lea	rax, [rbp - 0x70]
0x40019f:	mov	edx, 0x64
0x4001a4:	mov	rsi, rcx
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500018
<Block for 0x4001af, 16 bytes>
0x4001af:	mov	byte ptr [rbp - 0xd], 0
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500020
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 8]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x4001d4
<Block for 0x4001d4, 2 bytes>
0x4001d4:	leave	
0x4001d5:	ret	
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500028
