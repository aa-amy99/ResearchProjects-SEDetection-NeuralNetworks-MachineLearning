<Block for 0x400206, 47 bytes>
0x400206:	endbr64	
0x40020a:	push	rbp
0x40020b:	mov	rbp, rsp
0x40020e:	push	rbx
0x40020f:	sub	rsp, 0x38
0x400213:	mov	rax, qword ptr fs:[0x28]
0x40021c:	mov	qword ptr [rbp - 0x18], rax
0x400220:	xor	eax, eax
0x400222:	lea	rax, [rbp - 0x30]
0x400226:	lea	rsi, [rip + 0x4f3]
0x40022d:	mov	rdi, rax
0x400230:	call	0x400968
<Block for 0x400235, 12 bytes>
0x400235:	lea	rax, [rbp - 0x40]
0x400239:	mov	rdi, rax
0x40023c:	call	0x400a34
<Block for 0x400241, 19 bytes>
0x400241:	lea	rsi, [rip + 0x527]
0x400248:	lea	rdi, [rip + 0xffdb1]
0x40024f:	call	0x500008
<Block for 0x400254, 12 bytes>
0x400254:	lea	rax, [rbp - 0x30]
0x400258:	mov	rdi, rax
0x40025b:	call	0x400a4e
<Block for 0x400260, 16 bytes>
0x400260:	mov	qword ptr [rbp - 0x40], rax
0x400264:	lea	rax, [rbp - 0x30]
0x400268:	mov	rdi, rax
0x40026b:	call	0x400a9e
<Block for 0x400270, 23 bytes>
0x400270:	mov	qword ptr [rbp - 0x38], rax
0x400274:	lea	rdx, [rbp - 0x38]
0x400278:	lea	rax, [rbp - 0x40]
0x40027c:	mov	rsi, rdx
0x40027f:	mov	rdi, rax
0x400282:	call	0x400aea
<Block for 0x400287, 4 bytes>
0x400287:	test	al, al
0x400289:	je	0x4002f2
<Block for 0x4002f2, 22 bytes>
0x4002f2:	mov	rax, qword ptr [rip + 0xffd27]
0x4002f9:	mov	rsi, rax
0x4002fc:	lea	rdi, [rip + 0xffcfd]
0x400303:	call	0x500028
<Block for 0x40028b, 12 bytes>
0x40028b:	lea	rax, [rbp - 0x40]
0x40028f:	mov	rdi, rax
0x400292:	call	0x400b68
<Block for 0x400308, 12 bytes>
0x400308:	lea	rax, [rbp - 0x30]
0x40030c:	mov	rdi, rax
0x40030f:	call	0x40083c
<Block for 0x400297, 11 bytes>
0x400297:	mov	eax, dword ptr [rax]
0x400299:	test	eax, eax
0x40029b:	sete	al
0x40029e:	test	al, al
0x4002a0:	je	0x4002ae
<Block for 0x400314, 16 bytes>
0x400314:	nop	
0x400315:	mov	rax, qword ptr [rbp - 0x18]
0x400319:	xor	rax, qword ptr fs:[0x28]
0x400322:	je	0x400349
<Block for 0x4002ae, 19 bytes>
0x4002ae:	lea	rsi, [rip + 0x4ce]
0x4002b5:	lea	rdi, [rip + 0xffd44]
0x4002bc:	call	0x500008
<Block for 0x4002a2, 12 bytes>
0x4002a2:	lea	rax, [rbp - 0x30]
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x400b8a
<Block for 0x400349, 7 bytes>
0x400349:	add	rsp, 0x38
0x40034d:	pop	rbx
0x40034e:	pop	rbp
0x40034f:	ret	
<Block for 0x400324, 2 bytes>
0x400324:	jmp	0x400344
<Block for 0x4002c1, 15 bytes>
0x4002c1:	mov	rbx, rax
0x4002c4:	lea	rax, [rbp - 0x40]
0x4002c8:	mov	rdi, rax
0x4002cb:	call	0x400b68
<Block for 0x400344, 5 bytes>
0x400344:	call	0x500038
<Block for 0x4002d0, 12 bytes>
0x4002d0:	mov	eax, dword ptr [rax]
0x4002d2:	mov	esi, eax
0x4002d4:	mov	rdi, rbx
0x4002d7:	call	0x500010
<Block for 0x4002dc, 17 bytes>
0x4002dc:	lea	rax, [rbp - 0x40]
0x4002e0:	mov	esi, 0
0x4002e5:	mov	rdi, rax
0x4002e8:	call	0x400b10
<Block for 0x4002ed, 5 bytes>
0x4002ed:	jmp	0x400264
<Block for 0x400264, 12 bytes>
0x400264:	lea	rax, [rbp - 0x30]
0x400268:	mov	rdi, rax
0x40026b:	call	0x400a9e
