<Block for 0x400530, 40 bytes>
0x400530:	endbr64	
0x400534:	push	rbp
0x400535:	mov	rbp, rsp
0x400538:	push	rbx
0x400539:	sub	rsp, 0x38
0x40053d:	mov	rax, qword ptr fs:[0x28]
0x400546:	mov	qword ptr [rbp - 0x18], rax
0x40054a:	xor	eax, eax
0x40054c:	lea	rax, [rbp - 0x30]
0x400550:	mov	rdi, rax
0x400553:	call	0x40081c
<Block for 0x400558, 26 bytes>
0x400558:	mov	dword ptr [rbp - 0x34], 0x64
0x40055f:	lea	rdx, [rbp - 0x34]
0x400563:	lea	rax, [rbp - 0x30]
0x400567:	mov	rsi, rdx
0x40056a:	mov	rdi, rax
0x40056d:	call	0x400bb6
<Block for 0x400572, 26 bytes>
0x400572:	mov	dword ptr [rbp - 0x34], 0
0x400579:	lea	rdx, [rbp - 0x34]
0x40057d:	lea	rax, [rbp - 0x30]
0x400581:	mov	rsi, rdx
0x400584:	mov	rdi, rax
0x400587:	call	0x400bb6
<Block for 0x40058c, 19 bytes>
0x40058c:	lea	rax, [rbp - 0x30]
0x400590:	mov	rsi, rax
0x400593:	lea	rdi, [rip + 0x1a6]
0x40059a:	call	0x400c22
<Block for 0x40059f, 5 bytes>
0x40059f:	call	0x40040c
<Block for 0x4005a4, 12 bytes>
0x4005a4:	lea	rax, [rbp - 0x30]
0x4005a8:	mov	rdi, rax
0x4005ab:	call	0x40083c
<Block for 0x4005b0, 16 bytes>
0x4005b0:	nop	
0x4005b1:	mov	rax, qword ptr [rbp - 0x18]
0x4005b5:	xor	rax, qword ptr fs:[0x28]
0x4005be:	je	0x4005e5
<Block for 0x4005e5, 7 bytes>
0x4005e5:	add	rsp, 0x38
0x4005e9:	pop	rbx
0x4005ea:	pop	rbp
0x4005eb:	ret	
<Block for 0x4005c0, 2 bytes>
0x4005c0:	jmp	0x4005e0
<Block for 0x4005e0, 5 bytes>
0x4005e0:	call	0x500038
