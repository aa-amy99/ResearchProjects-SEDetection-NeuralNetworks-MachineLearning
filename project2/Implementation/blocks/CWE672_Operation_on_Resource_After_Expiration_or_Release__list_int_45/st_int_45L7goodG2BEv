<Block for 0x400350, 40 bytes>
0x400350:	endbr64	
0x400354:	push	rbp
0x400355:	mov	rbp, rsp
0x400358:	push	rbx
0x400359:	sub	rsp, 0x38
0x40035d:	mov	rax, qword ptr fs:[0x28]
0x400366:	mov	qword ptr [rbp - 0x18], rax
0x40036a:	xor	eax, eax
0x40036c:	lea	rax, [rbp - 0x30]
0x400370:	mov	rdi, rax
0x400373:	call	0x40081c
<Block for 0x400378, 26 bytes>
0x400378:	mov	dword ptr [rbp - 0x34], 0x64
0x40037f:	lea	rdx, [rbp - 0x34]
0x400383:	lea	rax, [rbp - 0x30]
0x400387:	mov	rsi, rdx
0x40038a:	mov	rdi, rax
0x40038d:	call	0x400bb6
<Block for 0x400392, 26 bytes>
0x400392:	mov	dword ptr [rbp - 0x34], 0xc8
0x400399:	lea	rdx, [rbp - 0x34]
0x40039d:	lea	rax, [rbp - 0x30]
0x4003a1:	mov	rsi, rdx
0x4003a4:	mov	rdi, rax
0x4003a7:	call	0x400bb6
<Block for 0x4003ac, 19 bytes>
0x4003ac:	lea	rax, [rbp - 0x30]
0x4003b0:	mov	rsi, rax
0x4003b3:	lea	rdi, [rip + 0x366]
0x4003ba:	call	0x400c22
<Block for 0x4003bf, 5 bytes>
0x4003bf:	call	0x400206
<Block for 0x4003c4, 12 bytes>
0x4003c4:	lea	rax, [rbp - 0x30]
0x4003c8:	mov	rdi, rax
0x4003cb:	call	0x40083c
<Block for 0x4003d0, 16 bytes>
0x4003d0:	nop	
0x4003d1:	mov	rax, qword ptr [rbp - 0x18]
0x4003d5:	xor	rax, qword ptr fs:[0x28]
0x4003de:	je	0x400405
<Block for 0x400405, 7 bytes>
0x400405:	add	rsp, 0x38
0x400409:	pop	rbx
0x40040a:	pop	rbp
0x40040b:	ret	
<Block for 0x4003e0, 2 bytes>
0x4003e0:	jmp	0x400400
<Block for 0x400400, 5 bytes>
0x400400:	call	0x500038
