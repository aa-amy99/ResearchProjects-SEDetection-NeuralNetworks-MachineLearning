<Block for 0x40004b, 34 bytes>
0x40004b:	endbr64	
0x40004f:	push	rbp
0x400050:	mov	rbp, rsp
0x400053:	sub	rsp, 0x10
0x400057:	nop	
0x400058:	endbr64	
0x40005c:	mov	dword ptr [rbp - 0x10], 5
0x400063:	mov	edi, 4
0x400068:	call	0x500000
<Block for 0x40006d, 32 bytes>
0x40006d:	mov	qword ptr [rbp - 8], rax
0x400071:	mov	rax, qword ptr [rbp - 8]
0x400075:	mov	edx, dword ptr [rbp - 0x10]
0x400078:	mov	dword ptr [rax], edx
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	mov	eax, dword ptr [rax]
0x400080:	mov	dword ptr [rbp - 0xc], eax
0x400083:	mov	eax, dword ptr [rbp - 0xc]
0x400086:	mov	edi, eax
0x400088:	call	0x500010
<Block for 0x40008d, 9 bytes>
0x40008d:	mov	rax, qword ptr [rbp - 8]
0x400091:	test	rax, rax
0x400094:	je	0x4000a3
<Block for 0x4000a3, 3 bytes>
0x4000a3:	nop	
0x4000a4:	leave	
0x4000a5:	ret	
<Block for 0x400096, 13 bytes>
0x400096:	mov	esi, 4
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500008
