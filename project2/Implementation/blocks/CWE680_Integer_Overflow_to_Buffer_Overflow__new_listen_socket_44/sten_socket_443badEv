<Block for 0x400082, 79 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x50
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	lea	rax, [rip - 0xa4]
0x4000a4:	mov	qword ptr [rbp - 0x38], rax
0x4000a8:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4000af:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4000b6:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4000bd:	mov	edx, 6
0x4000c2:	mov	esi, 1
0x4000c7:	mov	edi, 2
0x4000cc:	call	0x500018
<Block for 0x4000d1, 13 bytes>
0x4000d1:	mov	dword ptr [rbp - 0x40], eax
0x4000d4:	cmp	dword ptr [rbp - 0x40], -1
0x4000d8:	je	0x4001a7
<Block for 0x4001a7, 3 bytes>
0x4001a7:	nop	
0x4001a8:	jmp	0x4001b1
<Block for 0x4000de, 22 bytes>
0x4000de:	lea	rax, [rbp - 0x30]
0x4000e2:	mov	edx, 0x10
0x4000e7:	mov	esi, 0
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500020
<Block for 0x4001b1, 6 bytes>
0x4001b1:	cmp	dword ptr [rbp - 0x40], -1
0x4001b5:	je	0x4001c1
<Block for 0x4000f4, 23 bytes>
0x4000f4:	mov	word ptr [rbp - 0x30], 2
0x4000fa:	mov	dword ptr [rbp - 0x2c], 0
0x400101:	mov	edi, 0x6987
0x400106:	call	0x500028
<Block for 0x4001c1, 6 bytes>
0x4001c1:	cmp	dword ptr [rbp - 0x44], -1
0x4001c5:	je	0x4001d1
<Block for 0x4001b7, 10 bytes>
0x4001b7:	mov	eax, dword ptr [rbp - 0x40]
0x4001ba:	mov	edi, eax
0x4001bc:	call	0x500058
<Block for 0x40010b, 26 bytes>
0x40010b:	mov	word ptr [rbp - 0x2e], ax
0x40010f:	lea	rcx, [rbp - 0x30]
0x400113:	mov	eax, dword ptr [rbp - 0x40]
0x400116:	mov	edx, 0x10
0x40011b:	mov	rsi, rcx
0x40011e:	mov	edi, eax
0x400120:	call	0x500030
<Block for 0x4001d1, 11 bytes>
0x4001d1:	mov	eax, dword ptr [rbp - 0x48]
0x4001d4:	mov	rdx, qword ptr [rbp - 0x38]
0x4001d8:	mov	edi, eax
0x4001da:	call	rdx
<Block for 0x4001c7, 10 bytes>
0x4001c7:	mov	eax, dword ptr [rbp - 0x44]
0x4001ca:	mov	edi, eax
0x4001cc:	call	0x500058
<Block for 0x400125, 10 bytes>
0x400125:	cmp	eax, -1
0x400128:	sete	al
0x40012b:	test	al, al
0x40012d:	jne	0x4001aa
<Block for 0x4001dc, 16 bytes>
0x4001dc:	nop	
0x4001dd:	mov	rax, qword ptr [rbp - 8]
0x4001e1:	xor	rax, qword ptr fs:[0x28]
0x4001ea:	je	0x4001f1
<Block for 0x40012f, 15 bytes>
0x40012f:	mov	eax, dword ptr [rbp - 0x40]
0x400132:	mov	esi, 5
0x400137:	mov	edi, eax
0x400139:	call	0x500038
<Block for 0x4001aa, 3 bytes>
0x4001aa:	nop	
0x4001ab:	jmp	0x4001b1
<Block for 0x4001f1, 2 bytes>
0x4001f1:	leave	
0x4001f2:	ret	
<Block for 0x4001ec, 5 bytes>
0x4001ec:	call	0x500060
<Block for 0x40013e, 10 bytes>
0x40013e:	cmp	eax, -1
0x400141:	sete	al
0x400144:	test	al, al
0x400146:	jne	0x4001ad
<Block for 0x400148, 20 bytes>
0x400148:	mov	eax, dword ptr [rbp - 0x40]
0x40014b:	mov	edx, 0
0x400150:	mov	esi, 0
0x400155:	mov	edi, eax
0x400157:	call	0x500040
<Block for 0x4001ad, 3 bytes>
0x4001ad:	nop	
0x4001ae:	jmp	0x4001b1
<Block for 0x40015c, 9 bytes>
0x40015c:	mov	dword ptr [rbp - 0x44], eax
0x40015f:	cmp	dword ptr [rbp - 0x44], -1
0x400163:	je	0x4001b0
<Block for 0x400165, 24 bytes>
0x400165:	lea	rsi, [rbp - 0x16]
0x400169:	mov	eax, dword ptr [rbp - 0x44]
0x40016c:	mov	ecx, 0
0x400171:	mov	edx, 0xd
0x400176:	mov	edi, eax
0x400178:	call	0x500048
<Block for 0x4001b0, 1 bytes>
0x4001b0:	nop	
<Block for 0x40017d, 9 bytes>
0x40017d:	mov	dword ptr [rbp - 0x3c], eax
0x400180:	cmp	dword ptr [rbp - 0x3c], -1
0x400184:	je	0x4001b1
<Block for 0x400186, 6 bytes>
0x400186:	cmp	dword ptr [rbp - 0x3c], 0
0x40018a:	je	0x4001b1
<Block for 0x40018c, 22 bytes>
0x40018c:	mov	eax, dword ptr [rbp - 0x3c]
0x40018f:	cdqe	
0x400191:	mov	byte ptr [rbp + rax - 0x16], 0
0x400196:	lea	rax, [rbp - 0x16]
0x40019a:	mov	rdi, rax
0x40019d:	call	0x500050
<Block for 0x4001a2, 5 bytes>
0x4001a2:	mov	dword ptr [rbp - 0x48], eax
0x4001a5:	jmp	0x4001b1
