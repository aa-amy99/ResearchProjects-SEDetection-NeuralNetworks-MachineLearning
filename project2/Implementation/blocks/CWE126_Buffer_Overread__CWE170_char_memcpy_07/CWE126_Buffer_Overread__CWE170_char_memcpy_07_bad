<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0x1b8]
0x400024:	cmp	eax, 5
0x400027:	jne	0x400073
<Block for 0x400029, 25 bytes>
0x400029:	lea	rax, [rbp - 0xa0]
0x400030:	mov	edx, 0x95
0x400035:	mov	esi, 0x41
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400073, 16 bytes>
0x400073:	nop	
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	xor	rax, qword ptr fs:[0x28]
0x400081:	je	0x400088
<Block for 0x400042, 34 bytes>
0x400042:	mov	byte ptr [rbp - 0xb], 0
0x400046:	lea	rcx, [rbp - 0xa0]
0x40004d:	lea	rax, [rbp - 0x110]
0x400054:	mov	edx, 0x63
0x400059:	mov	rsi, rcx
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500008
<Block for 0x400088, 2 bytes>
0x400088:	leave	
0x400089:	ret	
<Block for 0x400083, 5 bytes>
0x400083:	call	0x500018
<Block for 0x400064, 15 bytes>
0x400064:	lea	rax, [rbp - 0x110]
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500010
