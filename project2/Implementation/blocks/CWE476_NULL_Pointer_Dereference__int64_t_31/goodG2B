<Block for 0x400036, 74 bytes>
0x400036:	endbr64	
0x40003a:	push	rbp
0x40003b:	mov	rbp, rsp
0x40003e:	sub	rsp, 0x30
0x400042:	mov	rax, qword ptr fs:[0x28]
0x40004b:	mov	qword ptr [rbp - 8], rax
0x40004f:	xor	eax, eax
0x400051:	mov	qword ptr [rbp - 0x28], 5
0x400059:	lea	rax, [rbp - 0x28]
0x40005d:	mov	qword ptr [rbp - 0x20], rax
0x400061:	mov	rax, qword ptr [rbp - 0x20]
0x400065:	mov	qword ptr [rbp - 0x18], rax
0x400069:	mov	rax, qword ptr [rbp - 0x18]
0x40006d:	mov	qword ptr [rbp - 0x10], rax
0x400071:	mov	rax, qword ptr [rbp - 0x10]
0x400075:	mov	rax, qword ptr [rax]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500000
<Block for 0x400080, 16 bytes>
0x400080:	nop	
0x400081:	mov	rax, qword ptr [rbp - 8]
0x400085:	xor	rax, qword ptr fs:[0x28]
0x40008e:	je	0x400095
<Block for 0x400095, 2 bytes>
0x400095:	leave	
0x400096:	ret	
<Block for 0x400090, 5 bytes>
0x400090:	call	0x500008
