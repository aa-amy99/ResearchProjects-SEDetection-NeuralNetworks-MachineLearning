<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 49 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	nop	
0x40003c:	endbr64	
0x400040:	lea	rax, [rbp - 0xe0]
0x400047:	sub	rax, 8
0x40004b:	mov	qword ptr [rbp - 0xe8], rax
0x400052:	lea	rax, [rbp - 0x70]
0x400056:	mov	edx, 0x63
0x40005b:	mov	esi, 0x43
0x400060:	mov	rdi, rax
0x400063:	call	0x500000
<Block for 0x400068, 17 bytes>
0x400068:	mov	byte ptr [rbp - 0xd], 0
0x40006c:	mov	qword ptr [rbp - 0xf0], 0
0x400077:	jmp	0x4000a5
<Block for 0x4000a5, 10 bytes>
0x4000a5:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000ad:	jbe	0x400079
<Block for 0x400079, 54 bytes>
0x400079:	mov	rdx, qword ptr [rbp - 0xe8]
0x400080:	mov	rax, qword ptr [rbp - 0xf0]
0x400087:	add	rax, rdx
0x40008a:	movzx	eax, byte ptr [rax]
0x40008d:	lea	rcx, [rbp - 0x70]
0x400091:	mov	rdx, qword ptr [rbp - 0xf0]
0x400098:	add	rdx, rcx
0x40009b:	mov	byte ptr [rdx], al
0x40009d:	add	qword ptr [rbp - 0xf0], 1
0x4000a5:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000ad:	jbe	0x400079
<Block for 0x4000af, 16 bytes>
0x4000af:	mov	byte ptr [rbp - 0xd], 0
0x4000b3:	lea	rax, [rbp - 0x70]
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500008
<Block for 0x4000bf, 16 bytes>
0x4000bf:	nop	
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	xor	rax, qword ptr fs:[0x28]
0x4000cd:	je	0x4000d4
<Block for 0x4000d4, 2 bytes>
0x4000d4:	leave	
0x4000d5:	ret	
<Block for 0x4000cf, 5 bytes>
0x4000cf:	call	0x500010
