<Block for 0x40008a, 60 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	add	rsp, -0x80
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	rax, qword ptr [rip + 0xfff84]
0x4000ac:	mov	qword ptr [rbp - 0x80], rax
0x4000b0:	lea	rax, [rbp - 0x70]
0x4000b4:	mov	edx, 0x63
0x4000b9:	mov	esi, 0x43
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500008
<Block for 0x4000c6, 16 bytes>
0x4000c6:	mov	byte ptr [rbp - 0xd], 0
0x4000ca:	lea	rax, [rbp - 0x70]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500010
<Block for 0x4000d6, 27 bytes>
0x4000d6:	mov	qword ptr [rbp - 0x78], rax
0x4000da:	mov	rdx, qword ptr [rbp - 0x78]
0x4000de:	lea	rcx, [rbp - 0x70]
0x4000e2:	mov	rax, qword ptr [rbp - 0x80]
0x4000e6:	mov	rsi, rcx
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500018
<Block for 0x4000f1, 12 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x80]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500020
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500028
