<Block for 0x400000, 154 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	eax, 5
0x400095:	cmp	eax, 5
0x400098:	jne	0x4000ed
<Block for 0x40009a, 15 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 0x88]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500000
<Block for 0x4000ed, 10 bytes>
0x4000ed:	mov	eax, 5
0x4000f2:	cmp	eax, 5
0x4000f5:	jne	0x40015d
<Block for 0x4000a9, 16 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x80], rax
0x4000ad:	lea	rdi, [rip + 0x644]
0x4000b4:	call	0x500008
<Block for 0x4000f7, 34 bytes>
0x4000f7:	lea	rdx, [rbp - 0x94]
0x4000fe:	mov	rax, qword ptr [rbp - 0x88]
0x400105:	lea	rsi, [rip + 0x5f0]
0x40010c:	mov	rdi, rax
0x40010f:	mov	eax, 0
0x400114:	call	0x500018
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x4000b9, 11 bytes>
0x4000b9:	mov	qword ptr [rbp - 0x78], rax
0x4000bd:	cmp	qword ptr [rbp - 0x78], 0
0x4000c2:	je	0x4000ed
<Block for 0x400119, 5 bytes>
0x400119:	cmp	eax, 1
0x40011c:	jne	0x40015d
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500028
<Block for 0x4000c4, 41 bytes>
0x4000c4:	mov	eax, 0x63
0x4000c9:	sub	rax, qword ptr [rbp - 0x80]
0x4000cd:	mov	rdx, rax
0x4000d0:	mov	rcx, qword ptr [rbp - 0x88]
0x4000d7:	mov	rax, qword ptr [rbp - 0x80]
0x4000db:	add	rcx, rax
0x4000de:	mov	rax, qword ptr [rbp - 0x78]
0x4000e2:	mov	rsi, rax
0x4000e5:	mov	rdi, rcx
0x4000e8:	call	0x500010
<Block for 0x40011e, 22 bytes>
0x40011e:	mov	dword ptr [rbp - 0x8c], 0
0x400128:	mov	dword ptr [rbp - 0x90], 0
0x400132:	jmp	0x400142
<Block for 0x400142, 14 bytes>
0x400142:	mov	eax, dword ptr [rbp - 0x94]
0x400148:	cmp	dword ptr [rbp - 0x90], eax
0x40014e:	jl	0x400134
<Block for 0x400134, 28 bytes>
0x400134:	add	dword ptr [rbp - 0x8c], 1
0x40013b:	add	dword ptr [rbp - 0x90], 1
0x400142:	mov	eax, dword ptr [rbp - 0x94]
0x400148:	cmp	dword ptr [rbp - 0x90], eax
0x40014e:	jl	0x400134
<Block for 0x400150, 13 bytes>
0x400150:	mov	eax, dword ptr [rbp - 0x8c]
0x400156:	mov	edi, eax
0x400158:	call	0x500020
