<Block for 0x400174, 154 bytes>
0x400174:	endbr64	
0x400178:	push	rbp
0x400179:	mov	rbp, rsp
0x40017c:	sub	rsp, 0xa0
0x400183:	mov	rax, qword ptr fs:[0x28]
0x40018c:	mov	qword ptr [rbp - 8], rax
0x400190:	xor	eax, eax
0x400192:	mov	qword ptr [rbp - 0x70], 0
0x40019a:	mov	qword ptr [rbp - 0x68], 0
0x4001a2:	mov	qword ptr [rbp - 0x60], 0
0x4001aa:	mov	qword ptr [rbp - 0x58], 0
0x4001b2:	mov	qword ptr [rbp - 0x50], 0
0x4001ba:	mov	qword ptr [rbp - 0x48], 0
0x4001c2:	mov	qword ptr [rbp - 0x40], 0
0x4001ca:	mov	qword ptr [rbp - 0x38], 0
0x4001d2:	mov	qword ptr [rbp - 0x30], 0
0x4001da:	mov	qword ptr [rbp - 0x28], 0
0x4001e2:	mov	qword ptr [rbp - 0x20], 0
0x4001ea:	mov	qword ptr [rbp - 0x18], 0
0x4001f2:	mov	dword ptr [rbp - 0x10], 0
0x4001f9:	lea	rax, [rbp - 0x70]
0x4001fd:	mov	qword ptr [rbp - 0x88], rax
0x400204:	mov	eax, 5
0x400209:	cmp	eax, 5
0x40020c:	jne	0x400261
<Block for 0x40020e, 15 bytes>
0x40020e:	mov	rax, qword ptr [rbp - 0x88]
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x400261, 10 bytes>
0x400261:	mov	eax, 5
0x400266:	cmp	eax, 5
0x400269:	je	0x400279
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	qword ptr [rbp - 0x80], rax
0x400221:	lea	rdi, [rip + 0x4d0]
0x400228:	call	0x500008
<Block for 0x400279, 34 bytes>
0x400279:	lea	rdx, [rbp - 0x94]
0x400280:	mov	rax, qword ptr [rbp - 0x88]
0x400287:	lea	rsi, [rip + 0x46e]
0x40028e:	mov	rdi, rax
0x400291:	mov	eax, 0
0x400296:	call	0x500018
<Block for 0x40026b, 12 bytes>
0x40026b:	lea	rdi, [rip + 0x48d]
0x400272:	call	0x500030
<Block for 0x40022d, 11 bytes>
0x40022d:	mov	qword ptr [rbp - 0x78], rax
0x400231:	cmp	qword ptr [rbp - 0x78], 0
0x400236:	je	0x400261
<Block for 0x40029b, 5 bytes>
0x40029b:	cmp	eax, 1
0x40029e:	jne	0x4002ec
<Block for 0x400277, 2 bytes>
0x400277:	jmp	0x4002ec
<Block for 0x400238, 41 bytes>
0x400238:	mov	eax, 0x63
0x40023d:	sub	rax, qword ptr [rbp - 0x80]
0x400241:	mov	rdx, rax
0x400244:	mov	rcx, qword ptr [rbp - 0x88]
0x40024b:	mov	rax, qword ptr [rbp - 0x80]
0x40024f:	add	rcx, rax
0x400252:	mov	rax, qword ptr [rbp - 0x78]
0x400256:	mov	rsi, rax
0x400259:	mov	rdi, rcx
0x40025c:	call	0x500010
<Block for 0x4002a0, 13 bytes>
0x4002a0:	mov	eax, dword ptr [rbp - 0x94]
0x4002a6:	cmp	eax, 0x270f
0x4002ab:	jg	0x4002ec
<Block for 0x4002ec, 16 bytes>
0x4002ec:	nop	
0x4002ed:	mov	rax, qword ptr [rbp - 8]
0x4002f1:	xor	rax, qword ptr fs:[0x28]
0x4002fa:	je	0x400301
<Block for 0x4002ad, 22 bytes>
0x4002ad:	mov	dword ptr [rbp - 0x8c], 0
0x4002b7:	mov	dword ptr [rbp - 0x90], 0
0x4002c1:	jmp	0x4002d1
<Block for 0x400301, 2 bytes>
0x400301:	leave	
0x400302:	ret	
<Block for 0x4002fc, 5 bytes>
0x4002fc:	call	0x500028
<Block for 0x4002d1, 14 bytes>
0x4002d1:	mov	eax, dword ptr [rbp - 0x94]
0x4002d7:	cmp	dword ptr [rbp - 0x90], eax
0x4002dd:	jl	0x4002c3
<Block for 0x4002c3, 28 bytes>
0x4002c3:	add	dword ptr [rbp - 0x8c], 1
0x4002ca:	add	dword ptr [rbp - 0x90], 1
0x4002d1:	mov	eax, dword ptr [rbp - 0x94]
0x4002d7:	cmp	dword ptr [rbp - 0x90], eax
0x4002dd:	jl	0x4002c3
<Block for 0x4002df, 13 bytes>
0x4002df:	mov	eax, dword ptr [rbp - 0x8c]
0x4002e5:	mov	edi, eax
0x4002e7:	call	0x500020
