<Block for 0x40006c, 66 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0xe0
0x40007b:	mov	rax, qword ptr fs:[0x28]
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	xor	eax, eax
0x40008a:	mov	qword ptr [rbp - 0xd8], 0
0x400095:	mov	dword ptr [rip + 0x2b9], 1
0x40009f:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x400000
<Block for 0x4000ae, 32 bytes>
0x4000ae:	mov	qword ptr [rbp - 0xd8], rax
0x4000b5:	lea	rax, [rbp - 0xd0]
0x4000bc:	mov	edx, 0xc7
0x4000c1:	mov	esi, 0x43
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500010
<Block for 0x4000ce, 29 bytes>
0x4000ce:	mov	byte ptr [rbp - 9], 0
0x4000d2:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000d9:	lea	rax, [rbp - 0xd0]
0x4000e0:	mov	rsi, rdx
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500018
<Block for 0x4000eb, 15 bytes>
0x4000eb:	lea	rax, [rbp - 0xd0]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500020
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x40010f
<Block for 0x40010f, 2 bytes>
0x40010f:	leave	
0x400110:	ret	
<Block for 0x40010a, 5 bytes>
0x40010a:	call	0x500028
