<Block for 0x40022c, 26 bytes>
0x40022c:	endbr64	
0x400230:	push	rbp
0x400231:	mov	rbp, rsp
0x400234:	sub	rsp, 0x20
0x400238:	mov	qword ptr [rbp - 0x18], rdi
0x40023c:	mov	eax, dword ptr [rip + 0x11e]
0x400242:	test	eax, eax
0x400244:	je	0x40028e
<Block for 0x40028e, 6 bytes>
0x40028e:	mov	rax, qword ptr [rbp - 0x18]
0x400292:	leave	
0x400293:	ret	
<Block for 0x400246, 10 bytes>
0x400246:	mov	edi, 0x64
0x40024b:	call	0x500000
<Block for 0x400250, 11 bytes>
0x400250:	mov	qword ptr [rbp - 8], rax
0x400254:	cmp	qword ptr [rbp - 8], 0
0x400259:	jne	0x400265
<Block for 0x40025b, 10 bytes>
0x40025b:	mov	edi, 0xffffffff
0x400260:	call	0x500008
<Block for 0x400265, 22 bytes>
0x400265:	mov	rax, qword ptr [rbp - 8]
0x400269:	mov	edx, 0x63
0x40026e:	mov	esi, 0x41
0x400273:	mov	rdi, rax
0x400276:	call	0x500010
<Block for 0x40027b, 25 bytes>
0x40027b:	mov	rax, qword ptr [rbp - 8]
0x40027f:	add	rax, 0x63
0x400283:	mov	byte ptr [rax], 0
0x400286:	mov	rax, qword ptr [rbp - 8]
0x40028a:	mov	qword ptr [rbp - 0x18], rax
0x40028e:	mov	rax, qword ptr [rbp - 0x18]
0x400292:	leave	
0x400293:	ret	
