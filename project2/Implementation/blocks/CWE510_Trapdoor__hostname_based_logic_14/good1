<Block for 0x400241, 38 bytes>
0x400241:	endbr64	
0x400245:	push	rbp
0x400246:	mov	rbp, rsp
0x400249:	sub	rsp, 0x30
0x40024d:	mov	rax, qword ptr fs:[0x28]
0x400256:	mov	qword ptr [rbp - 8], rax
0x40025a:	xor	eax, eax
0x40025c:	mov	eax, dword ptr [rip + 0xffd9e]
0x400262:	cmp	eax, 5
0x400265:	je	0x400278
<Block for 0x400278, 34 bytes>
0x400278:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40027f:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400286:	mov	edx, 6
0x40028b:	mov	esi, 1
0x400290:	mov	edi, 2
0x400295:	call	0x500008
<Block for 0x400267, 12 bytes>
0x400267:	lea	rdi, [rip + 0x2c2]
0x40026e:	call	0x500058
<Block for 0x40029a, 13 bytes>
0x40029a:	mov	dword ptr [rbp - 0x24], eax
0x40029d:	cmp	dword ptr [rbp - 0x24], -1
0x4002a1:	je	0x400353
<Block for 0x400273, 5 bytes>
0x400273:	jmp	0x40037d
<Block for 0x400353, 3 bytes>
0x400353:	nop	
0x400354:	jmp	0x40035d
<Block for 0x4002a7, 22 bytes>
0x4002a7:	lea	rax, [rbp - 0x20]
0x4002ab:	mov	edx, 0x10
0x4002b0:	mov	esi, 0
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x500010
<Block for 0x40037d, 16 bytes>
0x40037d:	nop	
0x40037e:	mov	rax, qword ptr [rbp - 8]
0x400382:	xor	rax, qword ptr fs:[0x28]
0x40038b:	je	0x400392
<Block for 0x40035d, 6 bytes>
0x40035d:	cmp	dword ptr [rbp - 0x24], -1
0x400361:	je	0x40036d
<Block for 0x4002bd, 23 bytes>
0x4002bd:	mov	word ptr [rbp - 0x20], 2
0x4002c3:	mov	dword ptr [rbp - 0x1c], 0
0x4002ca:	mov	edi, 0x4e20
0x4002cf:	call	0x500018
<Block for 0x400392, 2 bytes>
0x400392:	leave	
0x400393:	ret	
<Block for 0x40038d, 5 bytes>
0x40038d:	call	0x500068
<Block for 0x40036d, 6 bytes>
0x40036d:	cmp	dword ptr [rbp - 0x28], -1
0x400371:	je	0x40037d
<Block for 0x400363, 10 bytes>
0x400363:	mov	eax, dword ptr [rbp - 0x24]
0x400366:	mov	edi, eax
0x400368:	call	0x500060
<Block for 0x4002d4, 26 bytes>
0x4002d4:	mov	word ptr [rbp - 0x1e], ax
0x4002d8:	lea	rcx, [rbp - 0x20]
0x4002dc:	mov	eax, dword ptr [rbp - 0x24]
0x4002df:	mov	edx, 0x10
0x4002e4:	mov	rsi, rcx
0x4002e7:	mov	edi, eax
0x4002e9:	call	0x500020
<Block for 0x400373, 10 bytes>
0x400373:	mov	eax, dword ptr [rbp - 0x28]
0x400376:	mov	edi, eax
0x400378:	call	0x500060
<Block for 0x4002ee, 5 bytes>
0x4002ee:	cmp	eax, -1
0x4002f1:	je	0x400356
<Block for 0x400356, 3 bytes>
0x400356:	nop	
0x400357:	jmp	0x40035d
<Block for 0x4002f3, 15 bytes>
0x4002f3:	mov	eax, dword ptr [rbp - 0x24]
0x4002f6:	mov	esi, 5
0x4002fb:	mov	edi, eax
0x4002fd:	call	0x500028
<Block for 0x400302, 5 bytes>
0x400302:	cmp	eax, -1
0x400305:	je	0x400359
<Block for 0x400359, 3 bytes>
0x400359:	nop	
0x40035a:	jmp	0x40035d
<Block for 0x400307, 20 bytes>
0x400307:	mov	eax, dword ptr [rbp - 0x24]
0x40030a:	mov	edx, 0
0x40030f:	mov	esi, 0
0x400314:	mov	edi, eax
0x400316:	call	0x500030
<Block for 0x40031b, 9 bytes>
0x40031b:	mov	dword ptr [rbp - 0x28], eax
0x40031e:	cmp	dword ptr [rbp - 0x28], -1
0x400322:	je	0x40035c
<Block for 0x400324, 27 bytes>
0x400324:	mov	eax, dword ptr [rbp - 0x28]
0x400327:	mov	ecx, 0
0x40032c:	mov	edx, 8
0x400331:	lea	rsi, [rip + 0x1e2]
0x400338:	mov	edi, eax
0x40033a:	call	0x500050
<Block for 0x40035c, 1 bytes>
0x40035c:	nop	
<Block for 0x40033f, 6 bytes>
0x40033f:	cmp	rax, -1
0x400343:	jne	0x40035d
<Block for 0x400345, 12 bytes>
0x400345:	lea	rdi, [rip + 0x1d7]
0x40034c:	call	0x500058
<Block for 0x400351, 2 bytes>
0x400351:	jmp	0x40035d
