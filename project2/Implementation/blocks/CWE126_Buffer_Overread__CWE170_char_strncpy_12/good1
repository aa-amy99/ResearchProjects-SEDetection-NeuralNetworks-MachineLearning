<Block for 0x4000e0, 40 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x110
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	eax, 0
0x400103:	call	0x500000
<Block for 0x400108, 4 bytes>
0x400108:	test	eax, eax
0x40010a:	je	0x40015f
<Block for 0x40015f, 25 bytes>
0x40015f:	lea	rax, [rbp - 0xa0]
0x400166:	mov	edx, 0x95
0x40016b:	mov	esi, 0x41
0x400170:	mov	rdi, rax
0x400173:	call	0x500008
<Block for 0x40010c, 25 bytes>
0x40010c:	lea	rax, [rbp - 0xa0]
0x400113:	mov	edx, 0x95
0x400118:	mov	esi, 0x41
0x40011d:	mov	rdi, rax
0x400120:	call	0x500008
<Block for 0x400178, 34 bytes>
0x400178:	mov	byte ptr [rbp - 0xb], 0
0x40017c:	lea	rcx, [rbp - 0xa0]
0x400183:	lea	rax, [rbp - 0x110]
0x40018a:	mov	edx, 0x63
0x40018f:	mov	rsi, rcx
0x400192:	mov	rdi, rax
0x400195:	call	0x500010
<Block for 0x400125, 34 bytes>
0x400125:	mov	byte ptr [rbp - 0xb], 0
0x400129:	lea	rcx, [rbp - 0xa0]
0x400130:	lea	rax, [rbp - 0x110]
0x400137:	mov	edx, 0x63
0x40013c:	mov	rsi, rcx
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x40019a, 22 bytes>
0x40019a:	mov	byte ptr [rbp - 0xad], 0
0x4001a1:	lea	rax, [rbp - 0x110]
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500018
<Block for 0x400147, 22 bytes>
0x400147:	mov	byte ptr [rbp - 0xad], 0
0x40014e:	lea	rax, [rbp - 0x110]
0x400155:	mov	rdi, rax
0x400158:	call	0x500018
<Block for 0x4001b0, 16 bytes>
0x4001b0:	nop	
0x4001b1:	mov	rax, qword ptr [rbp - 8]
0x4001b5:	xor	rax, qword ptr fs:[0x28]
0x4001be:	je	0x4001c5
<Block for 0x40015d, 2 bytes>
0x40015d:	jmp	0x4001b0
<Block for 0x4001c5, 2 bytes>
0x4001c5:	leave	
0x4001c6:	ret	
<Block for 0x4001c0, 5 bytes>
0x4001c0:	call	0x500020
