<Block for 0x400212, 46 bytes>
0x400212:	endbr64	
0x400216:	push	rbp
0x400217:	mov	rbp, rsp
0x40021a:	push	rbx
0x40021b:	sub	rsp, 0x108
0x400222:	mov	rax, qword ptr fs:[0x28]
0x40022b:	mov	qword ptr [rbp - 0x18], rax
0x40022f:	xor	eax, eax
0x400231:	lea	rax, [rbp - 0x100]
0x400238:	mov	rdi, rax
0x40023b:	call	0x4004a0
<Block for 0x400240, 25 bytes>
0x400240:	lea	rax, [rbp - 0xc0]
0x400247:	mov	edx, 0x31
0x40024c:	mov	esi, 0x41
0x400251:	mov	rdi, rax
0x400254:	call	0x500000
<Block for 0x400259, 29 bytes>
0x400259:	mov	byte ptr [rbp - 0x8f], 0
0x400260:	lea	rax, [rbp - 0x80]
0x400264:	mov	edx, 0x63
0x400269:	mov	esi, 0x41
0x40026e:	mov	rdi, rax
0x400271:	call	0x500000
<Block for 0x400276, 30 bytes>
0x400276:	mov	byte ptr [rbp - 0x1d], 0
0x40027a:	lea	rax, [rbp - 0x80]
0x40027e:	mov	qword ptr [rbp - 0x110], rax
0x400285:	lea	rax, [rbp - 0x100]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x400632
<Block for 0x400294, 32 bytes>
0x400294:	mov	qword ptr [rbp - 0x108], rax
0x40029b:	lea	rdx, [rbp - 0x108]
0x4002a2:	lea	rax, [rbp - 0xe0]
0x4002a9:	mov	rsi, rdx
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x400682
<Block for 0x4002b4, 37 bytes>
0x4002b4:	lea	rdx, [rbp - 0x110]
0x4002bb:	mov	rsi, qword ptr [rbp - 0xe0]
0x4002c2:	lea	rax, [rbp - 0x100]
0x4002c9:	mov	rcx, rdx
0x4002cc:	mov	edx, 1
0x4002d1:	mov	rdi, rax
0x4002d4:	call	0x4006b0
<Block for 0x4002d9, 15 bytes>
0x4002d9:	lea	rax, [rbp - 0x100]
0x4002e0:	mov	rdi, rax
0x4002e3:	call	0x400632
<Block for 0x4002e8, 32 bytes>
0x4002e8:	mov	qword ptr [rbp - 0x108], rax
0x4002ef:	lea	rdx, [rbp - 0x108]
0x4002f6:	lea	rax, [rbp - 0xe0]
0x4002fd:	mov	rsi, rdx
0x400300:	mov	rdi, rax
0x400303:	call	0x400682
<Block for 0x400308, 37 bytes>
0x400308:	lea	rdx, [rbp - 0x110]
0x40030f:	mov	rsi, qword ptr [rbp - 0xe0]
0x400316:	lea	rax, [rbp - 0x100]
0x40031d:	mov	rcx, rdx
0x400320:	mov	edx, 1
0x400325:	mov	rdi, rax
0x400328:	call	0x4006b0
<Block for 0x40032d, 15 bytes>
0x40032d:	lea	rax, [rbp - 0x100]
0x400334:	mov	rdi, rax
0x400337:	call	0x400632
<Block for 0x40033c, 32 bytes>
0x40033c:	mov	qword ptr [rbp - 0x108], rax
0x400343:	lea	rdx, [rbp - 0x108]
0x40034a:	lea	rax, [rbp - 0xe0]
0x400351:	mov	rsi, rdx
0x400354:	mov	rdi, rax
0x400357:	call	0x400682
<Block for 0x40035c, 37 bytes>
0x40035c:	lea	rdx, [rbp - 0x110]
0x400363:	mov	rsi, qword ptr [rbp - 0xe0]
0x40036a:	lea	rax, [rbp - 0x100]
0x400371:	mov	rcx, rdx
0x400374:	mov	edx, 1
0x400379:	mov	rdi, rax
0x40037c:	call	0x4006b0
<Block for 0x400381, 25 bytes>
0x400381:	lea	rdx, [rbp - 0x100]
0x400388:	lea	rax, [rbp - 0xe0]
0x40038f:	mov	rsi, rdx
0x400392:	mov	rdi, rax
0x400395:	call	0x400776
<Block for 0x40039a, 15 bytes>
0x40039a:	lea	rax, [rbp - 0xe0]
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500020
<Block for 0x4003a9, 15 bytes>
0x4003a9:	lea	rax, [rbp - 0xe0]
0x4003b0:	mov	rdi, rax
0x4003b3:	call	0x4005ea
<Block for 0x4003b8, 15 bytes>
0x4003b8:	lea	rax, [rbp - 0x100]
0x4003bf:	mov	rdi, rax
0x4003c2:	call	0x4005ea
<Block for 0x4003c7, 16 bytes>
0x4003c7:	nop	
0x4003c8:	mov	rax, qword ptr [rbp - 0x18]
0x4003cc:	xor	rax, qword ptr fs:[0x28]
0x4003d5:	je	0x400417
<Block for 0x400417, 10 bytes>
0x400417:	add	rsp, 0x108
0x40041e:	pop	rbx
0x40041f:	pop	rbp
0x400420:	ret	
<Block for 0x4003d7, 2 bytes>
0x4003d7:	jmp	0x400412
<Block for 0x400412, 5 bytes>
0x400412:	call	0x500018
