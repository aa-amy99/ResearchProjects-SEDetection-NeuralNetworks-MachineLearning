<Block for 0x40009a, 70 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x30
0x4000a6:	mov	rax, qword ptr fs:[0x28]
0x4000af:	mov	qword ptr [rbp - 8], rax
0x4000b3:	xor	eax, eax
0x4000b5:	nop	
0x4000b6:	endbr64	
0x4000ba:	movabs	rax, 0x7271706f2f636261
0x4000c4:	mov	qword ptr [rbp - 0x14], rax
0x4000c8:	mov	dword ptr [rbp - 0xc], 0x757473
0x4000cf:	lea	rax, [rbp - 0x14]
0x4000d3:	mov	esi, 0x2f
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500000
<Block for 0x4000e0, 11 bytes>
0x4000e0:	mov	qword ptr [rbp - 0x28], rax
0x4000e4:	cmp	qword ptr [rbp - 0x28], 0
0x4000e9:	jne	0x4000f5
<Block for 0x4000eb, 10 bytes>
0x4000eb:	mov	edi, 1
0x4000f0:	call	0x500008
<Block for 0x4000f5, 29 bytes>
0x4000f5:	lea	rax, [rbp - 0x14]
0x4000f9:	mov	rdx, qword ptr [rbp - 0x28]
0x4000fd:	sub	rdx, rax
0x400100:	mov	rax, rdx
0x400103:	mov	qword ptr [rbp - 0x20], rax
0x400107:	mov	rax, qword ptr [rbp - 0x20]
0x40010b:	mov	edi, eax
0x40010d:	call	0x500010
<Block for 0x400112, 16 bytes>
0x400112:	nop	
0x400113:	mov	rax, qword ptr [rbp - 8]
0x400117:	xor	rax, qword ptr fs:[0x28]
0x400120:	je	0x400127
<Block for 0x400127, 2 bytes>
0x400127:	leave	
0x400128:	ret	
<Block for 0x400122, 5 bytes>
0x400122:	call	0x500018
