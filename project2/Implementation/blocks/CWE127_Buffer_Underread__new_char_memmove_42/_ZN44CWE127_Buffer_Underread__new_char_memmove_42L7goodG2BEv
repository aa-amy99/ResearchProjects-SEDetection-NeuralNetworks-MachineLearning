<Block for 0x40012a, 47 bytes>
0x40012a:	endbr64	
0x40012e:	push	rbp
0x40012f:	mov	rbp, rsp
0x400132:	add	rsp, -0x80
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 8], rax
0x400143:	xor	eax, eax
0x400145:	mov	qword ptr [rbp - 0x78], 0
0x40014d:	mov	rax, qword ptr [rbp - 0x78]
0x400151:	mov	rdi, rax
0x400154:	call	0x4000dd
<Block for 0x400159, 26 bytes>
0x400159:	mov	qword ptr [rbp - 0x78], rax
0x40015d:	lea	rax, [rbp - 0x70]
0x400161:	mov	edx, 0x63
0x400166:	mov	esi, 0x43
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500008
<Block for 0x400173, 28 bytes>
0x400173:	mov	byte ptr [rbp - 0xd], 0
0x400177:	mov	rcx, qword ptr [rbp - 0x78]
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	edx, 0x64
0x400184:	mov	rsi, rcx
0x400187:	mov	rdi, rax
0x40018a:	call	0x500010
<Block for 0x40018f, 16 bytes>
0x40018f:	mov	byte ptr [rbp - 0xd], 0
0x400193:	lea	rax, [rbp - 0x70]
0x400197:	mov	rdi, rax
0x40019a:	call	0x500018
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500020
