<Block for 0x400060, 26 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x10
0x40006c:	mov	qword ptr [rbp - 8], rdi
0x400070:	mov	eax, dword ptr [rip + 0xfffaa]
0x400076:	test	eax, eax
0x400078:	je	0x400088
<Block for 0x400088, 10 bytes>
0x400088:	mov	edi, 0x64
0x40008d:	call	0x500008
<Block for 0x40007a, 12 bytes>
0x40007a:	lea	rdi, [rip + 0xad]
0x400081:	call	0x500028
<Block for 0x400092, 11 bytes>
0x400092:	mov	qword ptr [rbp - 8], rax
0x400096:	cmp	qword ptr [rbp - 8], 0
0x40009b:	jne	0x4000a7
<Block for 0x400086, 2 bytes>
0x400086:	jmp	0x4000c8
<Block for 0x40009d, 10 bytes>
0x40009d:	mov	edi, 0xffffffff
0x4000a2:	call	0x500010
<Block for 0x4000a7, 22 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	mov	edx, 0x63
0x4000b0:	mov	esi, 0x41
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x4000c8, 6 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000bd, 17 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	add	rax, 0x63
0x4000c5:	mov	byte ptr [rax], 0
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	leave	
0x4000cd:	ret	
