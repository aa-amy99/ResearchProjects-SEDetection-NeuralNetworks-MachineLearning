<Block for 0x40007a, 21 bytes>
0x40007a:	endbr64	
0x40007e:	push	rbp
0x40007f:	mov	rbp, rsp
0x400082:	push	rbx
0x400083:	sub	rsp, 0x18
0x400087:	mov	dword ptr [rbp - 0x14], edi
0x40008a:	call	0x500000
<Block for 0x40008f, 7 bytes>
0x40008f:	and	eax, 1
0x400092:	test	eax, eax
0x400094:	je	0x4000b3
<Block for 0x4000b3, 5 bytes>
0x4000b3:	call	0x500000
<Block for 0x400096, 5 bytes>
0x400096:	call	0x500000
<Block for 0x4000b8, 10 bytes>
0x4000b8:	shl	eax, 0x1e
0x4000bb:	mov	ebx, eax
0x4000bd:	call	0x500000
<Block for 0x40009b, 10 bytes>
0x40009b:	shl	eax, 0x1e
0x40009e:	mov	ebx, eax
0x4000a0:	call	0x500000
<Block for 0x4000c2, 10 bytes>
0x4000c2:	shl	eax, 0xf
0x4000c5:	xor	ebx, eax
0x4000c7:	call	0x500000
<Block for 0x4000a5, 10 bytes>
0x4000a5:	shl	eax, 0xf
0x4000a8:	xor	ebx, eax
0x4000aa:	call	0x500000
<Block for 0x4000cc, 17 bytes>
0x4000cc:	xor	eax, ebx
0x4000ce:	not	eax
0x4000d0:	mov	dword ptr [rbp - 0x14], eax
0x4000d3:	mov	eax, dword ptr [rbp - 0x14]
0x4000d6:	add	rsp, 0x18
0x4000da:	pop	rbx
0x4000db:	pop	rbp
0x4000dc:	ret	
<Block for 0x4000af, 4 bytes>
0x4000af:	xor	eax, ebx
0x4000b1:	jmp	0x4000d0
<Block for 0x4000d0, 13 bytes>
0x4000d0:	mov	dword ptr [rbp - 0x14], eax
0x4000d3:	mov	eax, dword ptr [rbp - 0x14]
0x4000d6:	add	rsp, 0x18
0x4000da:	pop	rbx
0x4000db:	pop	rbp
0x4000dc:	ret	
