<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, dword ptr [rip + 0xfffd1]
0x40002f:	cmp	eax, 5
0x400032:	jne	0x400080
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x32
0x400039:	call	0x500008
<Block for 0x400080, 22 bytes>
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	edx, 0x63
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500018
<Block for 0x40003e, 17 bytes>
0x40003e:	mov	qword ptr [rbp - 0x88], rax
0x400045:	cmp	qword ptr [rbp - 0x88], 0
0x40004d:	jne	0x400059
<Block for 0x400096, 16 bytes>
0x400096:	mov	byte ptr [rbp - 0xd], 0
0x40009a:	lea	rax, [rbp - 0x70]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500020
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 0xffffffff
0x400054:	call	0x500010
<Block for 0x400059, 25 bytes>
0x400059:	mov	rax, qword ptr [rbp - 0x88]
0x400060:	mov	edx, 0x31
0x400065:	mov	esi, 0x41
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500018
<Block for 0x4000a6, 14 bytes>
0x4000a6:	mov	qword ptr [rbp - 0x78], rax
0x4000aa:	mov	qword ptr [rbp - 0x80], 0
0x4000b2:	jmp	0x4000d7
<Block for 0x400072, 36 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0x88]
0x400079:	add	rax, 0x31
0x40007d:	mov	byte ptr [rax], 0
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	edx, 0x63
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500018
<Block for 0x4000d7, 10 bytes>
0x4000d7:	mov	rax, qword ptr [rbp - 0x80]
0x4000db:	cmp	rax, qword ptr [rbp - 0x78]
0x4000df:	jb	0x4000b4
<Block for 0x4000b4, 45 bytes>
0x4000b4:	mov	rdx, qword ptr [rbp - 0x88]
0x4000bb:	mov	rax, qword ptr [rbp - 0x80]
0x4000bf:	add	rax, rdx
0x4000c2:	movzx	eax, byte ptr [rax]
0x4000c5:	lea	rcx, [rbp - 0x70]
0x4000c9:	mov	rdx, qword ptr [rbp - 0x80]
0x4000cd:	add	rdx, rcx
0x4000d0:	mov	byte ptr [rdx], al
0x4000d2:	add	qword ptr [rbp - 0x80], 1
0x4000d7:	mov	rax, qword ptr [rbp - 0x80]
0x4000db:	cmp	rax, qword ptr [rbp - 0x78]
0x4000df:	jb	0x4000b4
<Block for 0x4000e1, 16 bytes>
0x4000e1:	mov	byte ptr [rbp - 0xd], 0
0x4000e5:	lea	rax, [rbp - 0x70]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500028
<Block for 0x4000f1, 15 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x88]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500030
<Block for 0x400100, 16 bytes>
0x400100:	nop	
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	xor	rax, qword ptr fs:[0x28]
0x40010e:	je	0x400115
<Block for 0x400115, 2 bytes>
0x400115:	leave	
0x400116:	ret	
<Block for 0x400110, 5 bytes>
0x400110:	call	0x500038
