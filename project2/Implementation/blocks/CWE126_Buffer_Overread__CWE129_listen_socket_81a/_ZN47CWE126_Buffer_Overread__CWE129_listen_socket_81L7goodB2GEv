<Block for 0x4001f1, 68 bytes>
0x4001f1:	endbr64	
0x4001f5:	push	rbp
0x4001f6:	mov	rbp, rsp
0x4001f9:	sub	rsp, 0x50
0x4001fd:	mov	rax, qword ptr fs:[0x28]
0x400206:	mov	qword ptr [rbp - 8], rax
0x40020a:	xor	eax, eax
0x40020c:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400213:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40021a:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400221:	mov	edx, 6
0x400226:	mov	esi, 1
0x40022b:	mov	edi, 2
0x400230:	call	0x500000
<Block for 0x400235, 13 bytes>
0x400235:	mov	dword ptr [rbp - 0x48], eax
0x400238:	cmp	dword ptr [rbp - 0x48], -1
0x40023c:	je	0x40030b
<Block for 0x40030b, 3 bytes>
0x40030b:	nop	
0x40030c:	jmp	0x400315
<Block for 0x400242, 22 bytes>
0x400242:	lea	rax, [rbp - 0x30]
0x400246:	mov	edx, 0x10
0x40024b:	mov	esi, 0
0x400250:	mov	rdi, rax
0x400253:	call	0x500008
<Block for 0x400315, 6 bytes>
0x400315:	cmp	dword ptr [rbp - 0x48], -1
0x400319:	je	0x400325
<Block for 0x400258, 23 bytes>
0x400258:	mov	word ptr [rbp - 0x30], 2
0x40025e:	mov	dword ptr [rbp - 0x2c], 0
0x400265:	mov	edi, 0x6987
0x40026a:	call	0x500010
<Block for 0x400325, 6 bytes>
0x400325:	cmp	dword ptr [rbp - 0x4c], -1
0x400329:	je	0x400335
<Block for 0x40031b, 10 bytes>
0x40031b:	mov	eax, dword ptr [rbp - 0x48]
0x40031e:	mov	edi, eax
0x400320:	call	0x500040
<Block for 0x40026f, 26 bytes>
0x40026f:	mov	word ptr [rbp - 0x2e], ax
0x400273:	lea	rcx, [rbp - 0x30]
0x400277:	mov	eax, dword ptr [rbp - 0x48]
0x40027a:	mov	edx, 0x10
0x40027f:	mov	rsi, rcx
0x400282:	mov	edi, eax
0x400284:	call	0x500018
<Block for 0x400335, 43 bytes>
0x400335:	lea	rax, [rip + 0xffd34]
0x40033c:	mov	qword ptr [rbp - 0x40], rax
0x400340:	lea	rax, [rbp - 0x40]
0x400344:	mov	qword ptr [rbp - 0x38], rax
0x400348:	mov	rax, qword ptr [rbp - 0x38]
0x40034c:	mov	rax, qword ptr [rax]
0x40034f:	mov	rcx, qword ptr [rax]
0x400352:	mov	edx, dword ptr [rbp - 0x50]
0x400355:	mov	rax, qword ptr [rbp - 0x38]
0x400359:	mov	esi, edx
0x40035b:	mov	rdi, rax
0x40035e:	call	rcx
<Block for 0x40032b, 10 bytes>
0x40032b:	mov	eax, dword ptr [rbp - 0x4c]
0x40032e:	mov	edi, eax
0x400330:	call	0x500040
<Block for 0x400289, 10 bytes>
0x400289:	cmp	eax, -1
0x40028c:	sete	al
0x40028f:	test	al, al
0x400291:	jne	0x40030e
<Block for 0x400360, 16 bytes>
0x400360:	nop	
0x400361:	mov	rax, qword ptr [rbp - 8]
0x400365:	xor	rax, qword ptr fs:[0x28]
0x40036e:	je	0x400375
<Block for 0x400293, 15 bytes>
0x400293:	mov	eax, dword ptr [rbp - 0x48]
0x400296:	mov	esi, 5
0x40029b:	mov	edi, eax
0x40029d:	call	0x500020
<Block for 0x40030e, 3 bytes>
0x40030e:	nop	
0x40030f:	jmp	0x400315
<Block for 0x400375, 2 bytes>
0x400375:	leave	
0x400376:	ret	
<Block for 0x400370, 5 bytes>
0x400370:	call	0x500050
<Block for 0x4002a2, 10 bytes>
0x4002a2:	cmp	eax, -1
0x4002a5:	sete	al
0x4002a8:	test	al, al
0x4002aa:	jne	0x400311
<Block for 0x4002ac, 20 bytes>
0x4002ac:	mov	eax, dword ptr [rbp - 0x48]
0x4002af:	mov	edx, 0
0x4002b4:	mov	esi, 0
0x4002b9:	mov	edi, eax
0x4002bb:	call	0x500028
<Block for 0x400311, 3 bytes>
0x400311:	nop	
0x400312:	jmp	0x400315
<Block for 0x4002c0, 9 bytes>
0x4002c0:	mov	dword ptr [rbp - 0x4c], eax
0x4002c3:	cmp	dword ptr [rbp - 0x4c], -1
0x4002c7:	je	0x400314
<Block for 0x4002c9, 24 bytes>
0x4002c9:	lea	rsi, [rbp - 0x16]
0x4002cd:	mov	eax, dword ptr [rbp - 0x4c]
0x4002d0:	mov	ecx, 0
0x4002d5:	mov	edx, 0xd
0x4002da:	mov	edi, eax
0x4002dc:	call	0x500030
<Block for 0x400314, 1 bytes>
0x400314:	nop	
<Block for 0x4002e1, 9 bytes>
0x4002e1:	mov	dword ptr [rbp - 0x44], eax
0x4002e4:	cmp	dword ptr [rbp - 0x44], -1
0x4002e8:	je	0x400315
<Block for 0x4002ea, 6 bytes>
0x4002ea:	cmp	dword ptr [rbp - 0x44], 0
0x4002ee:	je	0x400315
<Block for 0x4002f0, 22 bytes>
0x4002f0:	mov	eax, dword ptr [rbp - 0x44]
0x4002f3:	cdqe	
0x4002f5:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002fa:	lea	rax, [rbp - 0x16]
0x4002fe:	mov	rdi, rax
0x400301:	call	0x500038
<Block for 0x400306, 5 bytes>
0x400306:	mov	dword ptr [rbp - 0x50], eax
0x400309:	jmp	0x400315
