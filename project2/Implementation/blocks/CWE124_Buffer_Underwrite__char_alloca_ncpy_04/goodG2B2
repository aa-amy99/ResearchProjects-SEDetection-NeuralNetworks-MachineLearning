<Block for 0x400276, 81 bytes>
0x400276:	endbr64	
0x40027a:	push	rbp
0x40027b:	mov	rbp, rsp
0x40027e:	add	rsp, -0x80
0x400282:	mov	rax, qword ptr fs:[0x28]
0x40028b:	mov	qword ptr [rbp - 8], rax
0x40028f:	xor	eax, eax
0x400291:	mov	eax, 0x10
0x400296:	sub	rax, 1
0x40029a:	add	rax, 0x6c
0x40029e:	mov	esi, 0x10
0x4002a3:	mov	edx, 0
0x4002a8:	div	rsi
0x4002ab:	imul	rax, rax, 0x10
0x4002af:	mov	rdx, rax
0x4002b2:	and	rdx, 0xfffffffffffff000
0x4002b9:	mov	rcx, rsp
0x4002bc:	sub	rcx, rdx
0x4002bf:	mov	rdx, rcx
0x4002c2:	cmp	rsp, rdx
0x4002c5:	je	0x4002d9
<Block for 0x4002d9, 26 bytes>
0x4002d9:	mov	rdx, rax
0x4002dc:	and	edx, 0xfff
0x4002e2:	sub	rsp, rdx
0x4002e5:	mov	rdx, rax
0x4002e8:	and	edx, 0xfff
0x4002ee:	test	rdx, rdx
0x4002f1:	je	0x400303
<Block for 0x4002c7, 18 bytes>
0x4002c7:	sub	rsp, 0x1000
0x4002ce:	or	qword ptr [rsp + 0xff8], 0
0x4002d7:	jmp	0x4002c2
<Block for 0x400303, 41 bytes>
0x400303:	mov	rax, rsp
0x400306:	add	rax, 0xf
0x40030a:	shr	rax, 4
0x40030e:	shl	rax, 4
0x400312:	mov	qword ptr [rbp - 0x78], rax
0x400316:	mov	rax, qword ptr [rbp - 0x78]
0x40031a:	mov	edx, 0x63
0x40031f:	mov	esi, 0x41
0x400324:	mov	rdi, rax
0x400327:	call	0x500000
<Block for 0x4002f3, 57 bytes>
0x4002f3:	and	eax, 0xfff
0x4002f8:	sub	rax, 8
0x4002fc:	add	rax, rsp
0x4002ff:	or	qword ptr [rax], 0
0x400303:	mov	rax, rsp
0x400306:	add	rax, 0xf
0x40030a:	shr	rax, 4
0x40030e:	shl	rax, 4
0x400312:	mov	qword ptr [rbp - 0x78], rax
0x400316:	mov	rax, qword ptr [rbp - 0x78]
0x40031a:	mov	edx, 0x63
0x40031f:	mov	esi, 0x41
0x400324:	mov	rdi, rax
0x400327:	call	0x500000
<Block for 0x4002c2, 5 bytes>
0x4002c2:	cmp	rsp, rdx
0x4002c5:	je	0x4002d9
<Block for 0x40032c, 20 bytes>
0x40032c:	mov	rax, qword ptr [rbp - 0x78]
0x400330:	add	rax, 0x63
0x400334:	mov	byte ptr [rax], 0
0x400337:	mov	eax, 1
0x40033c:	test	eax, eax
0x40033e:	je	0x400348
<Block for 0x400348, 22 bytes>
0x400348:	lea	rax, [rbp - 0x70]
0x40034c:	mov	edx, 0x63
0x400351:	mov	esi, 0x43
0x400356:	mov	rdi, rax
0x400359:	call	0x500000
<Block for 0x400340, 30 bytes>
0x400340:	mov	rax, qword ptr [rbp - 0x78]
0x400344:	mov	qword ptr [rbp - 0x80], rax
0x400348:	lea	rax, [rbp - 0x70]
0x40034c:	mov	edx, 0x63
0x400351:	mov	esi, 0x43
0x400356:	mov	rdi, rax
0x400359:	call	0x500000
<Block for 0x40035e, 28 bytes>
0x40035e:	mov	byte ptr [rbp - 0xd], 0
0x400362:	lea	rcx, [rbp - 0x70]
0x400366:	mov	rax, qword ptr [rbp - 0x80]
0x40036a:	mov	edx, 0x63
0x40036f:	mov	rsi, rcx
0x400372:	mov	rdi, rax
0x400375:	call	0x500008
<Block for 0x40037a, 23 bytes>
0x40037a:	mov	rax, qword ptr [rbp - 0x80]
0x40037e:	add	rax, 0x63
0x400382:	mov	byte ptr [rax], 0
0x400385:	mov	rax, qword ptr [rbp - 0x80]
0x400389:	mov	rdi, rax
0x40038c:	call	0x500010
<Block for 0x400391, 16 bytes>
0x400391:	nop	
0x400392:	mov	rax, qword ptr [rbp - 8]
0x400396:	xor	rax, qword ptr fs:[0x28]
0x40039f:	je	0x4003a6
<Block for 0x4003a6, 2 bytes>
0x4003a6:	leave	
0x4003a7:	ret	
<Block for 0x4003a1, 5 bytes>
0x4003a1:	call	0x500018
