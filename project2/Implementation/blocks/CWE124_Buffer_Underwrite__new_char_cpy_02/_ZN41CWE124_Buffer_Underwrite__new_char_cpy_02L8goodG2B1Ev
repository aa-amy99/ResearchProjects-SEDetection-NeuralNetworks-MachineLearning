<Block for 0x4000ae, 45 bytes>
0x4000ae:	endbr64	
0x4000b2:	push	rbp
0x4000b3:	mov	rbp, rsp
0x4000b6:	add	rsp, -0x80
0x4000ba:	mov	rax, qword ptr fs:[0x28]
0x4000c3:	mov	qword ptr [rbp - 8], rax
0x4000c7:	xor	eax, eax
0x4000c9:	mov	qword ptr [rbp - 0x80], 0
0x4000d1:	mov	edi, 0x64
0x4000d6:	call	0x500000
<Block for 0x4000db, 26 bytes>
0x4000db:	mov	qword ptr [rbp - 0x78], rax
0x4000df:	mov	rax, qword ptr [rbp - 0x78]
0x4000e3:	mov	edx, 0x63
0x4000e8:	mov	esi, 0x41
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500008
<Block for 0x4000f5, 41 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 0x78]
0x4000f9:	add	rax, 0x63
0x4000fd:	mov	byte ptr [rax], 0
0x400100:	mov	rax, qword ptr [rbp - 0x78]
0x400104:	mov	qword ptr [rbp - 0x80], rax
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x43
0x400116:	mov	rdi, rax
0x400119:	call	0x500008
<Block for 0x40011e, 23 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0
0x400122:	lea	rdx, [rbp - 0x70]
0x400126:	mov	rax, qword ptr [rbp - 0x80]
0x40012a:	mov	rsi, rdx
0x40012d:	mov	rdi, rax
0x400130:	call	0x500010
<Block for 0x400135, 12 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x80]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500018
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500020
