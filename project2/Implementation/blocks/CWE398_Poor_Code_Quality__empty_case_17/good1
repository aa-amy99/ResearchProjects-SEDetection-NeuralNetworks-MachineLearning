<Block for 0x400069, 21 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x10
0x400075:	mov	dword ptr [rbp - 8], 0
0x40007c:	jmp	0x4000d7
<Block for 0x4000d7, 6 bytes>
0x4000d7:	cmp	dword ptr [rbp - 8], 0
0x4000db:	jle	0x40007e
<Block for 0x40007e, 5 bytes>
0x40007e:	call	0x500000
<Block for 0x4000dd, 4 bytes>
0x4000dd:	nop	
0x4000de:	nop	
0x4000df:	leave	
0x4000e0:	ret	
<Block for 0x400083, 55 bytes>
0x400083:	mov	edx, eax
0x400085:	movsxd	rax, edx
0x400088:	imul	rax, rax, 0x55555556
0x40008f:	shr	rax, 0x20
0x400093:	mov	rcx, rax
0x400096:	mov	eax, edx
0x400098:	sar	eax, 0x1f
0x40009b:	mov	esi, ecx
0x40009d:	sub	esi, eax
0x40009f:	mov	eax, esi
0x4000a1:	mov	dword ptr [rbp - 4], eax
0x4000a4:	mov	ecx, dword ptr [rbp - 4]
0x4000a7:	mov	eax, ecx
0x4000a9:	add	eax, eax
0x4000ab:	add	eax, ecx
0x4000ad:	sub	edx, eax
0x4000af:	mov	eax, edx
0x4000b1:	mov	dword ptr [rbp - 4], eax
0x4000b4:	cmp	dword ptr [rbp - 4], 0
0x4000b8:	jne	0x4000c7
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0x46]
0x4000c1:	call	0x500008
<Block for 0x4000c7, 12 bytes>
0x4000c7:	lea	rdi, [rip + 0x53]
0x4000ce:	call	0x500008
<Block for 0x4000c6, 1 bytes>
0x4000c6:	nop	
<Block for 0x4000d3, 10 bytes>
0x4000d3:	add	dword ptr [rbp - 8], 1
0x4000d7:	cmp	dword ptr [rbp - 8], 0
0x4000db:	jle	0x40007e
