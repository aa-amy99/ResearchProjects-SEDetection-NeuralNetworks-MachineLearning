<Block for 0x400243, 57 bytes>
0x400243:	endbr64	
0x400247:	push	rbp
0x400248:	mov	rbp, rsp
0x40024b:	add	rsp, -0x80
0x40024f:	mov	rax, qword ptr fs:[0x28]
0x400258:	mov	qword ptr [rbp - 8], rax
0x40025c:	xor	eax, eax
0x40025e:	mov	qword ptr [rbp - 0x78], 0
0x400266:	mov	dword ptr [rip + 0x88], 1
0x400270:	mov	rax, qword ptr [rbp - 0x78]
0x400274:	mov	rdi, rax
0x400277:	call	0x4001ec
<Block for 0x40027c, 26 bytes>
0x40027c:	mov	qword ptr [rbp - 0x78], rax
0x400280:	lea	rax, [rbp - 0x70]
0x400284:	mov	edx, 0x63
0x400289:	mov	esi, 0x43
0x40028e:	mov	rdi, rax
0x400291:	call	0x500008
<Block for 0x400296, 28 bytes>
0x400296:	mov	byte ptr [rbp - 0xd], 0
0x40029a:	mov	rcx, qword ptr [rbp - 0x78]
0x40029e:	lea	rax, [rbp - 0x70]
0x4002a2:	mov	edx, 0x64
0x4002a7:	mov	rsi, rcx
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x500010
<Block for 0x4002b2, 16 bytes>
0x4002b2:	mov	byte ptr [rbp - 0xd], 0
0x4002b6:	lea	rax, [rbp - 0x70]
0x4002ba:	mov	rdi, rax
0x4002bd:	call	0x500018
<Block for 0x4002c2, 16 bytes>
0x4002c2:	nop	
0x4002c3:	mov	rax, qword ptr [rbp - 8]
0x4002c7:	xor	rax, qword ptr fs:[0x28]
0x4002d0:	je	0x4002d7
<Block for 0x4002d7, 2 bytes>
0x4002d7:	leave	
0x4002d8:	ret	
<Block for 0x4002d2, 5 bytes>
0x4002d2:	call	0x500020
