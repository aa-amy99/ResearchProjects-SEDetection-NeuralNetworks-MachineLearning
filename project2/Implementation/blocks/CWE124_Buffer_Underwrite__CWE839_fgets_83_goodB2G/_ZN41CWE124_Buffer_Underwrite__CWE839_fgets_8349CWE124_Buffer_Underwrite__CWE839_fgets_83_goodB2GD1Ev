<Block for 0x40009a, 81 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x50
0x4000a6:	mov	qword ptr [rbp - 0x48], rdi
0x4000aa:	mov	rax, qword ptr fs:[0x28]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	xor	eax, eax
0x4000b9:	mov	qword ptr [rbp - 0x30], 0
0x4000c1:	mov	qword ptr [rbp - 0x28], 0
0x4000c9:	mov	qword ptr [rbp - 0x20], 0
0x4000d1:	mov	qword ptr [rbp - 0x18], 0
0x4000d9:	mov	qword ptr [rbp - 0x10], 0
0x4000e1:	mov	rax, qword ptr [rbp - 0x48]
0x4000e5:	mov	eax, dword ptr [rax]
0x4000e7:	test	eax, eax
0x4000e9:	js	0x400129
<Block for 0x400129, 12 bytes>
0x400129:	lea	rdi, [rip + 0x30]
0x400130:	call	0x500018
<Block for 0x4000eb, 11 bytes>
0x4000eb:	mov	rax, qword ptr [rbp - 0x48]
0x4000ef:	mov	eax, dword ptr [rax]
0x4000f1:	cmp	eax, 9
0x4000f4:	jg	0x400129
<Block for 0x400135, 2 bytes>
0x400135:	jmp	0x400138
<Block for 0x4000f6, 29 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0x48]
0x4000fa:	mov	eax, dword ptr [rax]
0x4000fc:	cdqe	
0x4000fe:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400106:	mov	dword ptr [rbp - 0x34], 0
0x40010d:	cmp	dword ptr [rbp - 0x34], 9
0x400111:	jg	0x400137
<Block for 0x400138, 16 bytes>
0x400138:	nop	
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	xor	rax, qword ptr fs:[0x28]
0x400146:	je	0x40014d
<Block for 0x400113, 16 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0x34]
0x400116:	cdqe	
0x400118:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40011c:	mov	edi, eax
0x40011e:	call	0x500028
<Block for 0x400137, 1 bytes>
0x400137:	nop	
<Block for 0x40014d, 2 bytes>
0x40014d:	leave	
0x40014e:	ret	
<Block for 0x400148, 5 bytes>
0x400148:	call	0x500020
<Block for 0x400123, 6 bytes>
0x400123:	add	dword ptr [rbp - 0x34], 1
0x400127:	jmp	0x40010d
<Block for 0x40010d, 6 bytes>
0x40010d:	cmp	dword ptr [rbp - 0x34], 9
0x400111:	jg	0x400137
