<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x14], 0
0x400013:	cmp	dword ptr [rbp - 0x14], 0
0x400017:	jg	0x400069
<Block for 0x400019, 10 bytes>
0x400019:	mov	edi, 8
0x40001e:	call	0x500000
<Block for 0x400069, 3 bytes>
0x400069:	nop	
0x40006a:	leave	
0x40006b:	ret	
<Block for 0x400023, 24 bytes>
0x400023:	mov	qword ptr [rbp - 0x10], rax
0x400027:	mov	rax, qword ptr [rbp - 0x10]
0x40002b:	mov	rax, qword ptr [rax]
0x40002e:	mov	qword ptr [rbp - 8], rax
0x400032:	mov	rax, qword ptr [rbp - 0x10]
0x400036:	test	rax, rax
0x400039:	je	0x400048
<Block for 0x400048, 13 bytes>
0x400048:	mov	rax, qword ptr [rbp - 8]
0x40004c:	mov	eax, dword ptr [rax]
0x40004e:	mov	edi, eax
0x400050:	call	0x500010
<Block for 0x40003b, 13 bytes>
0x40003b:	mov	esi, 8
0x400040:	mov	rdi, rax
0x400043:	call	0x500008
<Block for 0x400055, 14 bytes>
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	mov	eax, dword ptr [rax + 4]
0x40005c:	mov	edi, eax
0x40005e:	call	0x500010
<Block for 0x400063, 6 bytes>
0x400063:	add	dword ptr [rbp - 0x14], 1
0x400067:	jmp	0x400013
<Block for 0x400013, 6 bytes>
0x400013:	cmp	dword ptr [rbp - 0x14], 0
0x400017:	jg	0x400069
