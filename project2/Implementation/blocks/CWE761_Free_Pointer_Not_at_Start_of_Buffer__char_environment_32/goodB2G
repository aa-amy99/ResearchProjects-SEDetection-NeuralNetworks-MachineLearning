<Block for 0x40010f, 53 bytes>
0x40010f:	endbr64	
0x400113:	push	rbp
0x400114:	mov	rbp, rsp
0x400117:	sub	rsp, 0x50
0x40011b:	mov	rax, qword ptr fs:[0x28]
0x400124:	mov	qword ptr [rbp - 8], rax
0x400128:	xor	eax, eax
0x40012a:	lea	rax, [rbp - 0x48]
0x40012e:	mov	qword ptr [rbp - 0x38], rax
0x400132:	lea	rax, [rbp - 0x48]
0x400136:	mov	qword ptr [rbp - 0x30], rax
0x40013a:	mov	edi, 0x64
0x40013f:	call	0x500000
<Block for 0x400144, 13 bytes>
0x400144:	mov	qword ptr [rbp - 0x48], rax
0x400148:	mov	rax, qword ptr [rbp - 0x48]
0x40014c:	test	rax, rax
0x40014f:	jne	0x40015b
<Block for 0x400151, 10 bytes>
0x400151:	mov	edi, 0xffffffff
0x400156:	call	0x500008
<Block for 0x40015b, 30 bytes>
0x40015b:	mov	rax, qword ptr [rbp - 0x48]
0x40015f:	mov	byte ptr [rax], 0
0x400162:	mov	rax, qword ptr [rbp - 0x38]
0x400166:	mov	rax, qword ptr [rax]
0x400169:	mov	qword ptr [rbp - 0x28], rax
0x40016d:	mov	rax, qword ptr [rbp - 0x28]
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400179, 16 bytes>
0x400179:	mov	qword ptr [rbp - 0x20], rax
0x40017d:	lea	rdi, [rip + 0xc5]
0x400184:	call	0x500018
<Block for 0x400189, 11 bytes>
0x400189:	mov	qword ptr [rbp - 0x18], rax
0x40018d:	cmp	qword ptr [rbp - 0x18], 0
0x400192:	je	0x4001ba
<Block for 0x4001ba, 32 bytes>
0x4001ba:	mov	rax, qword ptr [rbp - 0x38]
0x4001be:	mov	rdx, qword ptr [rbp - 0x28]
0x4001c2:	mov	qword ptr [rax], rdx
0x4001c5:	mov	rax, qword ptr [rbp - 0x30]
0x4001c9:	mov	rax, qword ptr [rax]
0x4001cc:	mov	qword ptr [rbp - 0x10], rax
0x4001d0:	mov	qword ptr [rbp - 0x40], 0
0x4001d8:	jmp	0x4001ff
<Block for 0x400194, 38 bytes>
0x400194:	mov	eax, 0x63
0x400199:	sub	rax, qword ptr [rbp - 0x20]
0x40019d:	mov	rdx, rax
0x4001a0:	mov	rcx, qword ptr [rbp - 0x28]
0x4001a4:	mov	rax, qword ptr [rbp - 0x20]
0x4001a8:	add	rcx, rax
0x4001ab:	mov	rax, qword ptr [rbp - 0x18]
0x4001af:	mov	rsi, rax
0x4001b2:	mov	rdi, rcx
0x4001b5:	call	0x500020
<Block for 0x4001ff, 12 bytes>
0x4001ff:	mov	rax, qword ptr [rbp - 0x10]
0x400203:	mov	rdi, rax
0x400206:	call	0x500010
<Block for 0x40020b, 6 bytes>
0x40020b:	cmp	qword ptr [rbp - 0x40], rax
0x40020f:	jb	0x4001da
<Block for 0x4001da, 18 bytes>
0x4001da:	mov	rdx, qword ptr [rbp - 0x10]
0x4001de:	mov	rax, qword ptr [rbp - 0x40]
0x4001e2:	add	rax, rdx
0x4001e5:	movzx	eax, byte ptr [rax]
0x4001e8:	cmp	al, 0x53
0x4001ea:	jne	0x4001fa
<Block for 0x400211, 12 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x10]
0x400215:	mov	rdi, rax
0x400218:	call	0x500030
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rdi, [rip + 0x5a]
0x4001f3:	call	0x500028
<Block for 0x4001fa, 17 bytes>
0x4001fa:	add	qword ptr [rbp - 0x40], 1
0x4001ff:	mov	rax, qword ptr [rbp - 0x10]
0x400203:	mov	rdi, rax
0x400206:	call	0x500010
<Block for 0x40021d, 16 bytes>
0x40021d:	nop	
0x40021e:	mov	rax, qword ptr [rbp - 8]
0x400222:	xor	rax, qword ptr fs:[0x28]
0x40022b:	je	0x400232
<Block for 0x4001f8, 2 bytes>
0x4001f8:	jmp	0x400211
<Block for 0x400232, 2 bytes>
0x400232:	leave	
0x400233:	ret	
<Block for 0x40022d, 5 bytes>
0x40022d:	call	0x500038
