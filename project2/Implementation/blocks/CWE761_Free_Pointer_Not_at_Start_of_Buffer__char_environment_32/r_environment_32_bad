<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x40]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x40]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 13 bytes>
0x400035:	mov	qword ptr [rbp - 0x40], rax
0x400039:	mov	rax, qword ptr [rbp - 0x40]
0x40003d:	test	rax, rax
0x400040:	jne	0x40004c
<Block for 0x400042, 10 bytes>
0x400042:	mov	edi, 0xffffffff
0x400047:	call	0x500008
<Block for 0x40004c, 30 bytes>
0x40004c:	mov	rax, qword ptr [rbp - 0x40]
0x400050:	mov	byte ptr [rax], 0
0x400053:	mov	rax, qword ptr [rbp - 0x30]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	mov	qword ptr [rbp - 0x20], rax
0x40005e:	mov	rax, qword ptr [rbp - 0x20]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40006a, 16 bytes>
0x40006a:	mov	qword ptr [rbp - 0x18], rax
0x40006e:	lea	rdi, [rip + 0x1d4]
0x400075:	call	0x500018
<Block for 0x40007a, 11 bytes>
0x40007a:	mov	qword ptr [rbp - 0x10], rax
0x40007e:	cmp	qword ptr [rbp - 0x10], 0
0x400083:	je	0x4000ab
<Block for 0x4000ab, 24 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 0x30]
0x4000af:	mov	rdx, qword ptr [rbp - 0x20]
0x4000b3:	mov	qword ptr [rax], rdx
0x4000b6:	mov	rax, qword ptr [rbp - 0x28]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 0x38], rax
0x4000c1:	jmp	0x4000e1
<Block for 0x400085, 38 bytes>
0x400085:	mov	eax, 0x63
0x40008a:	sub	rax, qword ptr [rbp - 0x18]
0x40008e:	mov	rdx, rax
0x400091:	mov	rcx, qword ptr [rbp - 0x20]
0x400095:	mov	rax, qword ptr [rbp - 0x18]
0x400099:	add	rcx, rax
0x40009c:	mov	rax, qword ptr [rbp - 0x10]
0x4000a0:	mov	rsi, rax
0x4000a3:	mov	rdi, rcx
0x4000a6:	call	0x500020
<Block for 0x4000e1, 11 bytes>
0x4000e1:	mov	rax, qword ptr [rbp - 0x38]
0x4000e5:	movzx	eax, byte ptr [rax]
0x4000e8:	test	al, al
0x4000ea:	jne	0x4000c3
<Block for 0x4000ec, 12 bytes>
0x4000ec:	mov	rax, qword ptr [rbp - 0x38]
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500030
<Block for 0x4000c3, 11 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x38]
0x4000c7:	movzx	eax, byte ptr [rax]
0x4000ca:	cmp	al, 0x53
0x4000cc:	jne	0x4000dc
<Block for 0x4000f8, 16 bytes>
0x4000f8:	nop	
0x4000f9:	mov	rax, qword ptr [rbp - 8]
0x4000fd:	xor	rax, qword ptr fs:[0x28]
0x400106:	je	0x40010d
<Block for 0x4000ce, 12 bytes>
0x4000ce:	lea	rdi, [rip + 0x178]
0x4000d5:	call	0x500028
<Block for 0x4000dc, 16 bytes>
0x4000dc:	add	qword ptr [rbp - 0x38], 1
0x4000e1:	mov	rax, qword ptr [rbp - 0x38]
0x4000e5:	movzx	eax, byte ptr [rax]
0x4000e8:	test	al, al
0x4000ea:	jne	0x4000c3
<Block for 0x40010d, 2 bytes>
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400108, 5 bytes>
0x400108:	call	0x500038
<Block for 0x4000da, 2 bytes>
0x4000da:	jmp	0x4000ec
