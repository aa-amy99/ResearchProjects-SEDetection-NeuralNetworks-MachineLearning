<Block for 0x40043f, 46 bytes>
0x40043f:	endbr64	
0x400443:	push	rbp
0x400444:	mov	rbp, rsp
0x400447:	sub	rsp, 0x40
0x40044b:	mov	rax, qword ptr fs:[0x28]
0x400454:	mov	qword ptr [rbp - 8], rax
0x400458:	xor	eax, eax
0x40045a:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400461:	lea	rax, [rbp - 0x38]
0x400465:	mov	rdi, rax
0x400468:	call	0x4002e4
<Block for 0x40046d, 47 bytes>
0x40046d:	mov	qword ptr [rbp - 0x30], 0
0x400475:	mov	qword ptr [rbp - 0x28], 0
0x40047d:	mov	qword ptr [rbp - 0x20], 0
0x400485:	mov	qword ptr [rbp - 0x18], 0
0x40048d:	mov	qword ptr [rbp - 0x10], 0
0x400495:	mov	eax, dword ptr [rbp - 0x38]
0x400498:	test	eax, eax
0x40049a:	js	0x4004d4
<Block for 0x4004d4, 12 bytes>
0x4004d4:	lea	rdi, [rip + 0x55]
0x4004db:	call	0x500058
<Block for 0x40049c, 8 bytes>
0x40049c:	mov	eax, dword ptr [rbp - 0x38]
0x40049f:	cmp	eax, 9
0x4004a2:	jg	0x4004d4
<Block for 0x4004e0, 2 bytes>
0x4004e0:	jmp	0x4004e3
<Block for 0x4004a4, 26 bytes>
0x4004a4:	mov	eax, dword ptr [rbp - 0x38]
0x4004a7:	cdqe	
0x4004a9:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4004b1:	mov	dword ptr [rbp - 0x34], 0
0x4004b8:	cmp	dword ptr [rbp - 0x34], 9
0x4004bc:	jg	0x4004e2
<Block for 0x4004e3, 16 bytes>
0x4004e3:	nop	
0x4004e4:	mov	rax, qword ptr [rbp - 8]
0x4004e8:	xor	rax, qword ptr fs:[0x28]
0x4004f1:	je	0x4004f8
<Block for 0x4004be, 16 bytes>
0x4004be:	mov	eax, dword ptr [rbp - 0x34]
0x4004c1:	cdqe	
0x4004c3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4004c7:	mov	edi, eax
0x4004c9:	call	0x500050
<Block for 0x4004e2, 1 bytes>
0x4004e2:	nop	
<Block for 0x4004f8, 2 bytes>
0x4004f8:	leave	
0x4004f9:	ret	
<Block for 0x4004f3, 5 bytes>
0x4004f3:	call	0x500048
<Block for 0x4004ce, 6 bytes>
0x4004ce:	add	dword ptr [rbp - 0x34], 1
0x4004d2:	jmp	0x4004b8
<Block for 0x4004b8, 6 bytes>
0x4004b8:	cmp	dword ptr [rbp - 0x34], 9
0x4004bc:	jg	0x4004e2
