<Block for 0x4000e8, 45 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	push	rbx
0x4000f1:	sub	rsp, 0x48
0x4000f5:	mov	rax, qword ptr fs:[0x28]
0x4000fe:	mov	qword ptr [rbp - 0x18], rax
0x400102:	xor	eax, eax
0x400104:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40010b:	mov	eax, dword ptr [rip + 0xffeef]
0x400111:	test	eax, eax
0x400113:	je	0x40015e
<Block for 0x40015e, 10 bytes>
0x40015e:	mov	eax, dword ptr [rip + 0xffec4]
0x400164:	test	eax, eax
0x400166:	je	0x400176
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500008
<Block for 0x400176, 46 bytes>
0x400176:	mov	qword ptr [rbp - 0x40], 0
0x40017e:	mov	qword ptr [rbp - 0x38], 0
0x400186:	mov	qword ptr [rbp - 0x30], 0
0x40018e:	mov	qword ptr [rbp - 0x28], 0
0x400196:	mov	qword ptr [rbp - 0x20], 0
0x40019e:	cmp	dword ptr [rbp - 0x44], 0
0x4001a2:	js	0x4001bc
<Block for 0x400168, 12 bytes>
0x400168:	lea	rdi, [rip + 0x308]
0x40016f:	call	0x500018
<Block for 0x40011a, 7 bytes>
0x40011a:	and	eax, 1
0x40011d:	test	eax, eax
0x40011f:	je	0x40013e
<Block for 0x4001bc, 12 bytes>
0x4001bc:	lea	rdi, [rip + 0x2cd]
0x4001c3:	call	0x500018
<Block for 0x4001a4, 6 bytes>
0x4001a4:	cmp	dword ptr [rbp - 0x44], 9
0x4001a8:	jg	0x4001bc
<Block for 0x400174, 2 bytes>
0x400174:	jmp	0x4001c8
<Block for 0x40013e, 5 bytes>
0x40013e:	call	0x500008
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500008
<Block for 0x4001c8, 16 bytes>
0x4001c8:	nop	
0x4001c9:	mov	rax, qword ptr [rbp - 0x18]
0x4001cd:	xor	rax, qword ptr fs:[0x28]
0x4001d6:	je	0x4001dd
<Block for 0x4001aa, 16 bytes>
0x4001aa:	mov	eax, dword ptr [rbp - 0x44]
0x4001ad:	cdqe	
0x4001af:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001b3:	mov	edi, eax
0x4001b5:	call	0x500010
<Block for 0x400143, 10 bytes>
0x400143:	shl	eax, 0x1e
0x400146:	mov	ebx, eax
0x400148:	call	0x500008
<Block for 0x400126, 10 bytes>
0x400126:	shl	eax, 0x1e
0x400129:	mov	ebx, eax
0x40012b:	call	0x500008
<Block for 0x4001dd, 7 bytes>
0x4001dd:	add	rsp, 0x48
0x4001e1:	pop	rbx
0x4001e2:	pop	rbp
0x4001e3:	ret	
<Block for 0x4001d8, 5 bytes>
0x4001d8:	call	0x500020
<Block for 0x4001ba, 2 bytes>
0x4001ba:	jmp	0x4001c8
<Block for 0x40014d, 10 bytes>
0x40014d:	shl	eax, 0xf
0x400150:	xor	ebx, eax
0x400152:	call	0x500008
<Block for 0x400130, 10 bytes>
0x400130:	shl	eax, 0xf
0x400133:	xor	ebx, eax
0x400135:	call	0x500008
<Block for 0x400157, 17 bytes>
0x400157:	xor	eax, ebx
0x400159:	not	eax
0x40015b:	mov	dword ptr [rbp - 0x44], eax
0x40015e:	mov	eax, dword ptr [rip + 0xffec4]
0x400164:	test	eax, eax
0x400166:	je	0x400176
<Block for 0x40013a, 4 bytes>
0x40013a:	xor	eax, ebx
0x40013c:	jmp	0x40015b
<Block for 0x40015b, 13 bytes>
0x40015b:	mov	dword ptr [rbp - 0x44], eax
0x40015e:	mov	eax, dword ptr [rip + 0xffec4]
0x400164:	test	eax, eax
0x400166:	je	0x400176
