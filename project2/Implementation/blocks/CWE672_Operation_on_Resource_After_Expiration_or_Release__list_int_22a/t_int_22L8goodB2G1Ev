<Block for 0x4000ee, 40 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	push	rbx
0x4000f7:	sub	rsp, 0x48
0x4000fb:	mov	rax, qword ptr fs:[0x28]
0x400104:	mov	qword ptr [rbp - 0x18], rax
0x400108:	xor	eax, eax
0x40010a:	lea	rax, [rbp - 0x50]
0x40010e:	mov	rdi, rax
0x400111:	call	0x4004f6
<Block for 0x400116, 26 bytes>
0x400116:	mov	dword ptr [rbp - 0x30], 0x64
0x40011d:	lea	rdx, [rbp - 0x30]
0x400121:	lea	rax, [rbp - 0x50]
0x400125:	mov	rsi, rdx
0x400128:	mov	rdi, rax
0x40012b:	call	0x400614
<Block for 0x400130, 26 bytes>
0x400130:	mov	dword ptr [rbp - 0x30], 0
0x400137:	lea	rdx, [rbp - 0x30]
0x40013b:	lea	rax, [rbp - 0x50]
0x40013f:	mov	rsi, rdx
0x400142:	mov	rdi, rax
0x400145:	call	0x400614
<Block for 0x40014a, 29 bytes>
0x40014a:	mov	dword ptr [rip + 0x2e8], 0
0x400154:	lea	rdx, [rbp - 0x50]
0x400158:	lea	rax, [rbp - 0x30]
0x40015c:	mov	rsi, rdx
0x40015f:	mov	rdi, rax
0x400162:	call	0x400662
<Block for 0x400167, 12 bytes>
0x400167:	lea	rax, [rbp - 0x30]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500018
<Block for 0x400173, 12 bytes>
0x400173:	lea	rax, [rbp - 0x30]
0x400177:	mov	rdi, rax
0x40017a:	call	0x400516
<Block for 0x40017f, 12 bytes>
0x40017f:	lea	rax, [rbp - 0x50]
0x400183:	mov	rdi, rax
0x400186:	call	0x400516
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 0x18]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001d5
<Block for 0x4001d5, 7 bytes>
0x4001d5:	add	rsp, 0x48
0x4001d9:	pop	rbx
0x4001da:	pop	rbp
0x4001db:	ret	
<Block for 0x40019b, 2 bytes>
0x40019b:	jmp	0x4001d0
<Block for 0x4001d0, 5 bytes>
0x4001d0:	call	0x500010
