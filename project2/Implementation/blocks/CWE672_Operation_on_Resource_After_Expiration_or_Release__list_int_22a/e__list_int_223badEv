<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004f6
<Block for 0x400028, 26 bytes>
0x400028:	mov	dword ptr [rbp - 0x30], 0x64
0x40002f:	lea	rdx, [rbp - 0x30]
0x400033:	lea	rax, [rbp - 0x50]
0x400037:	mov	rsi, rdx
0x40003a:	mov	rdi, rax
0x40003d:	call	0x400614
<Block for 0x400042, 26 bytes>
0x400042:	mov	dword ptr [rbp - 0x30], 0
0x400049:	lea	rdx, [rbp - 0x30]
0x40004d:	lea	rax, [rbp - 0x50]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	0x400614
<Block for 0x40005c, 29 bytes>
0x40005c:	mov	dword ptr [rip + 0x3d2], 1
0x400066:	lea	rdx, [rbp - 0x50]
0x40006a:	lea	rax, [rbp - 0x30]
0x40006e:	mov	rsi, rdx
0x400071:	mov	rdi, rax
0x400074:	call	0x400662
<Block for 0x400079, 12 bytes>
0x400079:	lea	rax, [rbp - 0x30]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500000
<Block for 0x400085, 12 bytes>
0x400085:	lea	rax, [rbp - 0x30]
0x400089:	mov	rdi, rax
0x40008c:	call	0x400516
<Block for 0x400091, 12 bytes>
0x400091:	lea	rax, [rbp - 0x50]
0x400095:	mov	rdi, rax
0x400098:	call	0x400516
<Block for 0x40009d, 16 bytes>
0x40009d:	nop	
0x40009e:	mov	rax, qword ptr [rbp - 0x18]
0x4000a2:	xor	rax, qword ptr fs:[0x28]
0x4000ab:	je	0x4000e7
<Block for 0x4000e7, 7 bytes>
0x4000e7:	add	rsp, 0x48
0x4000eb:	pop	rbx
0x4000ec:	pop	rbp
0x4000ed:	ret	
<Block for 0x4000ad, 2 bytes>
0x4000ad:	jmp	0x4000e2
<Block for 0x4000e2, 5 bytes>
0x4000e2:	call	0x500010
