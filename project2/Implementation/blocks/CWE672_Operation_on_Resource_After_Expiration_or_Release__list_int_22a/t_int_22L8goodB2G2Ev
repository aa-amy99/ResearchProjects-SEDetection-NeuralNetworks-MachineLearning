<Block for 0x4001dc, 40 bytes>
0x4001dc:	endbr64	
0x4001e0:	push	rbp
0x4001e1:	mov	rbp, rsp
0x4001e4:	push	rbx
0x4001e5:	sub	rsp, 0x48
0x4001e9:	mov	rax, qword ptr fs:[0x28]
0x4001f2:	mov	qword ptr [rbp - 0x18], rax
0x4001f6:	xor	eax, eax
0x4001f8:	lea	rax, [rbp - 0x50]
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x4004f6
<Block for 0x400204, 26 bytes>
0x400204:	mov	dword ptr [rbp - 0x30], 0x64
0x40020b:	lea	rdx, [rbp - 0x30]
0x40020f:	lea	rax, [rbp - 0x50]
0x400213:	mov	rsi, rdx
0x400216:	mov	rdi, rax
0x400219:	call	0x400614
<Block for 0x40021e, 26 bytes>
0x40021e:	mov	dword ptr [rbp - 0x30], 0
0x400225:	lea	rdx, [rbp - 0x30]
0x400229:	lea	rax, [rbp - 0x50]
0x40022d:	mov	rsi, rdx
0x400230:	mov	rdi, rax
0x400233:	call	0x400614
<Block for 0x400238, 29 bytes>
0x400238:	mov	dword ptr [rip + 0x1fe], 1
0x400242:	lea	rdx, [rbp - 0x50]
0x400246:	lea	rax, [rbp - 0x30]
0x40024a:	mov	rsi, rdx
0x40024d:	mov	rdi, rax
0x400250:	call	0x400662
<Block for 0x400255, 12 bytes>
0x400255:	lea	rax, [rbp - 0x30]
0x400259:	mov	rdi, rax
0x40025c:	call	0x500020
<Block for 0x400261, 12 bytes>
0x400261:	lea	rax, [rbp - 0x30]
0x400265:	mov	rdi, rax
0x400268:	call	0x400516
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rax, [rbp - 0x50]
0x400271:	mov	rdi, rax
0x400274:	call	0x400516
<Block for 0x400279, 16 bytes>
0x400279:	nop	
0x40027a:	mov	rax, qword ptr [rbp - 0x18]
0x40027e:	xor	rax, qword ptr fs:[0x28]
0x400287:	je	0x4002c3
<Block for 0x4002c3, 7 bytes>
0x4002c3:	add	rsp, 0x48
0x4002c7:	pop	rbx
0x4002c8:	pop	rbp
0x4002c9:	ret	
<Block for 0x400289, 2 bytes>
0x400289:	jmp	0x4002be
<Block for 0x4002be, 5 bytes>
0x4002be:	call	0x500010
