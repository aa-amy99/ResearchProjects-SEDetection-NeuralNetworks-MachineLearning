<Block for 0x4000d2, 55 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	sub	rsp, 0xf0
0x4000e1:	mov	rax, qword ptr fs:[0x28]
0x4000ea:	mov	qword ptr [rbp - 8], rax
0x4000ee:	xor	eax, eax
0x4000f0:	lea	rax, [rbp - 0xe0]
0x4000f7:	mov	edx, 0x63
0x4000fc:	mov	esi, 0x41
0x400101:	mov	rdi, rax
0x400104:	call	0x500000
<Block for 0x400109, 41 bytes>
0x400109:	mov	byte ptr [rbp - 0x7d], 0
0x40010d:	lea	rax, [rbp - 0xe0]
0x400114:	mov	qword ptr [rbp - 0xe8], rax
0x40011b:	nop	
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x400132, 17 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	mov	qword ptr [rbp - 0xf0], 0
0x400141:	jmp	0x40016f
<Block for 0x40016f, 10 bytes>
0x40016f:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400177:	jbe	0x400143
<Block for 0x400143, 54 bytes>
0x400143:	mov	rdx, qword ptr [rbp - 0xe8]
0x40014a:	mov	rax, qword ptr [rbp - 0xf0]
0x400151:	add	rax, rdx
0x400154:	movzx	eax, byte ptr [rax]
0x400157:	lea	rcx, [rbp - 0x70]
0x40015b:	mov	rdx, qword ptr [rbp - 0xf0]
0x400162:	add	rdx, rcx
0x400165:	mov	byte ptr [rdx], al
0x400167:	add	qword ptr [rbp - 0xf0], 1
0x40016f:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400177:	jbe	0x400143
<Block for 0x400179, 16 bytes>
0x400179:	mov	byte ptr [rbp - 0xd], 0
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	rdi, rax
0x400184:	call	0x500008
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500010
