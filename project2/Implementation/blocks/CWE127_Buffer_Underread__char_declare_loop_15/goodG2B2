<Block for 0x4001a0, 55 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	sub	rsp, 0xf0
0x4001af:	mov	rax, qword ptr fs:[0x28]
0x4001b8:	mov	qword ptr [rbp - 8], rax
0x4001bc:	xor	eax, eax
0x4001be:	lea	rax, [rbp - 0xe0]
0x4001c5:	mov	edx, 0x63
0x4001ca:	mov	esi, 0x41
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500000
<Block for 0x4001d7, 41 bytes>
0x4001d7:	mov	byte ptr [rbp - 0x7d], 0
0x4001db:	lea	rax, [rbp - 0xe0]
0x4001e2:	mov	qword ptr [rbp - 0xe8], rax
0x4001e9:	nop	
0x4001ea:	lea	rax, [rbp - 0x70]
0x4001ee:	mov	edx, 0x63
0x4001f3:	mov	esi, 0x43
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500000
<Block for 0x400200, 17 bytes>
0x400200:	mov	byte ptr [rbp - 0xd], 0
0x400204:	mov	qword ptr [rbp - 0xf0], 0
0x40020f:	jmp	0x40023d
<Block for 0x40023d, 10 bytes>
0x40023d:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400245:	jbe	0x400211
<Block for 0x400211, 54 bytes>
0x400211:	mov	rdx, qword ptr [rbp - 0xe8]
0x400218:	mov	rax, qword ptr [rbp - 0xf0]
0x40021f:	add	rax, rdx
0x400222:	movzx	eax, byte ptr [rax]
0x400225:	lea	rcx, [rbp - 0x70]
0x400229:	mov	rdx, qword ptr [rbp - 0xf0]
0x400230:	add	rdx, rcx
0x400233:	mov	byte ptr [rdx], al
0x400235:	add	qword ptr [rbp - 0xf0], 1
0x40023d:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400245:	jbe	0x400211
<Block for 0x400247, 16 bytes>
0x400247:	mov	byte ptr [rbp - 0xd], 0
0x40024b:	lea	rax, [rbp - 0x70]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500008
<Block for 0x400257, 16 bytes>
0x400257:	nop	
0x400258:	mov	rax, qword ptr [rbp - 8]
0x40025c:	xor	rax, qword ptr fs:[0x28]
0x400265:	je	0x40026c
<Block for 0x40026c, 2 bytes>
0x40026c:	leave	
0x40026d:	ret	
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500010
