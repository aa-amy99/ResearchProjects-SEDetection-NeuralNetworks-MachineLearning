<Block for 0x400063, 79 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x30
0x40006f:	mov	rax, qword ptr fs:[0x28]
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	xor	eax, eax
0x40007e:	mov	qword ptr [rbp - 0x20], 0
0x400086:	mov	dword ptr [rbp - 0x24], 8
0x40008d:	lea	rax, [rbp - 0x24]
0x400091:	mov	qword ptr [rbp - 0x20], rax
0x400095:	mov	rax, qword ptr [rbp - 0x20]
0x400099:	mov	qword ptr [rbp - 0x18], rax
0x40009d:	mov	rax, qword ptr [rbp - 0x18]
0x4000a1:	mov	qword ptr [rbp - 0x10], rax
0x4000a5:	mov	rax, qword ptr [rbp - 0x10]
0x4000a9:	mov	eax, dword ptr [rax]
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500000
<Block for 0x4000b2, 16 bytes>
0x4000b2:	nop	
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	xor	rax, qword ptr fs:[0x28]
0x4000c0:	je	0x4000c7
<Block for 0x4000c7, 2 bytes>
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500008
