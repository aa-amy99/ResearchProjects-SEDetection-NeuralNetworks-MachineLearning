<Block for 0x4001d8, 76 bytes>
0x4001d8:	endbr64	
0x4001dc:	push	rbp
0x4001dd:	mov	rbp, rsp
0x4001e0:	sub	rsp, 0x50
0x4001e4:	mov	dword ptr [rbp - 0x44], edi
0x4001e7:	mov	rax, qword ptr fs:[0x28]
0x4001f0:	mov	qword ptr [rbp - 8], rax
0x4001f4:	xor	eax, eax
0x4001f6:	mov	qword ptr [rbp - 0x30], 0
0x4001fe:	mov	qword ptr [rbp - 0x28], 0
0x400206:	mov	qword ptr [rbp - 0x20], 0
0x40020e:	mov	qword ptr [rbp - 0x18], 0
0x400216:	mov	qword ptr [rbp - 0x10], 0
0x40021e:	cmp	dword ptr [rbp - 0x44], 0
0x400222:	js	0x40025c
<Block for 0x40025c, 12 bytes>
0x40025c:	lea	rdi, [rip + 0xcd]
0x400263:	call	0x500008
<Block for 0x400224, 6 bytes>
0x400224:	cmp	dword ptr [rbp - 0x44], 9
0x400228:	jg	0x40025c
<Block for 0x400268, 16 bytes>
0x400268:	nop	
0x400269:	mov	rax, qword ptr [rbp - 8]
0x40026d:	xor	rax, qword ptr fs:[0x28]
0x400276:	je	0x40027d
<Block for 0x40022a, 22 bytes>
0x40022a:	mov	eax, dword ptr [rbp - 0x44]
0x40022d:	cdqe	
0x40022f:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400237:	mov	dword ptr [rbp - 0x34], 0
0x40023e:	jmp	0x400254
<Block for 0x40027d, 2 bytes>
0x40027d:	leave	
0x40027e:	ret	
<Block for 0x400278, 5 bytes>
0x400278:	call	0x500010
<Block for 0x400254, 6 bytes>
0x400254:	cmp	dword ptr [rbp - 0x34], 9
0x400258:	jle	0x400240
<Block for 0x400240, 16 bytes>
0x400240:	mov	eax, dword ptr [rbp - 0x34]
0x400243:	cdqe	
0x400245:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400249:	mov	edi, eax
0x40024b:	call	0x500000
<Block for 0x40025a, 2 bytes>
0x40025a:	jmp	0x400268
<Block for 0x400250, 10 bytes>
0x400250:	add	dword ptr [rbp - 0x34], 1
0x400254:	cmp	dword ptr [rbp - 0x34], 9
0x400258:	jle	0x400240
