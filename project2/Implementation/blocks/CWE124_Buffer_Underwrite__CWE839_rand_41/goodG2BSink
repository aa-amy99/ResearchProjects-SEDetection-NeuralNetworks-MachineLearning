<Block for 0x400110, 76 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0x50
0x40011c:	mov	dword ptr [rbp - 0x44], edi
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	mov	qword ptr [rbp - 0x30], 0
0x400136:	mov	qword ptr [rbp - 0x28], 0
0x40013e:	mov	qword ptr [rbp - 0x20], 0
0x400146:	mov	qword ptr [rbp - 0x18], 0
0x40014e:	mov	qword ptr [rbp - 0x10], 0
0x400156:	cmp	dword ptr [rbp - 0x44], 9
0x40015a:	jg	0x40018e
<Block for 0x40015c, 22 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x44]
0x40015f:	cdqe	
0x400161:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400169:	mov	dword ptr [rbp - 0x34], 0
0x400170:	jmp	0x400186
<Block for 0x40018e, 12 bytes>
0x40018e:	lea	rdi, [rip + 0x17b]
0x400195:	call	0x500008
<Block for 0x400186, 6 bytes>
0x400186:	cmp	dword ptr [rbp - 0x34], 9
0x40018a:	jle	0x400172
<Block for 0x40019a, 16 bytes>
0x40019a:	nop	
0x40019b:	mov	rax, qword ptr [rbp - 8]
0x40019f:	xor	rax, qword ptr fs:[0x28]
0x4001a8:	je	0x4001af
<Block for 0x400172, 16 bytes>
0x400172:	mov	eax, dword ptr [rbp - 0x34]
0x400175:	cdqe	
0x400177:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40017b:	mov	edi, eax
0x40017d:	call	0x500000
<Block for 0x40018c, 2 bytes>
0x40018c:	jmp	0x40019a
<Block for 0x4001af, 2 bytes>
0x4001af:	leave	
0x4001b0:	ret	
<Block for 0x4001aa, 5 bytes>
0x4001aa:	call	0x500010
<Block for 0x400182, 10 bytes>
0x400182:	add	dword ptr [rbp - 0x34], 1
0x400186:	cmp	dword ptr [rbp - 0x34], 9
0x40018a:	jle	0x400172
