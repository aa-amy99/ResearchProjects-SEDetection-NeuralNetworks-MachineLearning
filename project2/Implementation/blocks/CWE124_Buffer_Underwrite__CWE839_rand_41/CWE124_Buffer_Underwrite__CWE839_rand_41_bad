<Block for 0x4000a1, 25 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	push	rbx
0x4000aa:	sub	rsp, 0x18
0x4000ae:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000b5:	call	0x500018
<Block for 0x4000ba, 7 bytes>
0x4000ba:	and	eax, 1
0x4000bd:	test	eax, eax
0x4000bf:	je	0x4000de
<Block for 0x4000de, 5 bytes>
0x4000de:	call	0x500018
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500018
<Block for 0x4000e3, 10 bytes>
0x4000e3:	shl	eax, 0x1e
0x4000e6:	mov	ebx, eax
0x4000e8:	call	0x500018
<Block for 0x4000c6, 10 bytes>
0x4000c6:	shl	eax, 0x1e
0x4000c9:	mov	ebx, eax
0x4000cb:	call	0x500018
<Block for 0x4000ed, 10 bytes>
0x4000ed:	shl	eax, 0xf
0x4000f0:	xor	ebx, eax
0x4000f2:	call	0x500018
<Block for 0x4000d0, 10 bytes>
0x4000d0:	shl	eax, 0xf
0x4000d3:	xor	ebx, eax
0x4000d5:	call	0x500018
<Block for 0x4000f7, 17 bytes>
0x4000f7:	xor	eax, ebx
0x4000f9:	not	eax
0x4000fb:	mov	dword ptr [rbp - 0x14], eax
0x4000fe:	mov	eax, dword ptr [rbp - 0x14]
0x400101:	mov	edi, eax
0x400103:	call	0x400000
<Block for 0x4000da, 4 bytes>
0x4000da:	xor	eax, ebx
0x4000dc:	jmp	0x4000fb
<Block for 0x400108, 8 bytes>
0x400108:	nop	
0x400109:	add	rsp, 0x18
0x40010d:	pop	rbx
0x40010e:	pop	rbp
0x40010f:	ret	
<Block for 0x4000fb, 13 bytes>
0x4000fb:	mov	dword ptr [rbp - 0x14], eax
0x4000fe:	mov	eax, dword ptr [rbp - 0x14]
0x400101:	mov	edi, eax
0x400103:	call	0x400000
