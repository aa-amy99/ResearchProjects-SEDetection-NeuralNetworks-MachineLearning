<Block for 0x4002f8, 44 bytes>
0x4002f8:	endbr64	
0x4002fc:	push	rbp
0x4002fd:	mov	rbp, rsp
0x400300:	sub	rsp, 0x40
0x400304:	mov	rax, qword ptr fs:[0x28]
0x40030d:	mov	qword ptr [rbp - 8], rax
0x400311:	xor	eax, eax
0x400313:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40031a:	mov	eax, dword ptr [rip + 0xac]
0x400320:	test	eax, eax
0x400322:	je	0x40032b
<Block for 0x40032b, 10 bytes>
0x40032b:	mov	eax, dword ptr [rip + 0x9b]
0x400331:	test	eax, eax
0x400333:	je	0x400381
<Block for 0x400324, 17 bytes>
0x400324:	mov	dword ptr [rbp - 0x34], 7
0x40032b:	mov	eax, dword ptr [rip + 0x9b]
0x400331:	test	eax, eax
0x400333:	je	0x400381
<Block for 0x400381, 16 bytes>
0x400381:	nop	
0x400382:	mov	rax, qword ptr [rbp - 8]
0x400386:	xor	rax, qword ptr fs:[0x28]
0x40038f:	je	0x400396
<Block for 0x400335, 46 bytes>
0x400335:	mov	qword ptr [rbp - 0x30], 0
0x40033d:	mov	qword ptr [rbp - 0x28], 0
0x400345:	mov	qword ptr [rbp - 0x20], 0
0x40034d:	mov	qword ptr [rbp - 0x18], 0
0x400355:	mov	qword ptr [rbp - 0x10], 0
0x40035d:	cmp	dword ptr [rbp - 0x34], 9
0x400361:	jg	0x400375
<Block for 0x400396, 2 bytes>
0x400396:	leave	
0x400397:	ret	
<Block for 0x400391, 5 bytes>
0x400391:	call	0x500020
<Block for 0x400363, 16 bytes>
0x400363:	mov	eax, dword ptr [rbp - 0x34]
0x400366:	cdqe	
0x400368:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40036c:	mov	edi, eax
0x40036e:	call	0x500010
<Block for 0x400375, 12 bytes>
0x400375:	lea	rdi, [rip + 0x64]
0x40037c:	call	0x500018
<Block for 0x400373, 2 bytes>
0x400373:	jmp	0x400381
