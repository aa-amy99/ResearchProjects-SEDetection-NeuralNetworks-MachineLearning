<Block for 0x400274, 159 bytes>
0x400274:	endbr64	
0x400278:	push	rbp
0x400279:	mov	rbp, rsp
0x40027c:	sub	rsp, 0xb0
0x400283:	mov	rax, qword ptr fs:[0x28]
0x40028c:	mov	qword ptr [rbp - 8], rax
0x400290:	xor	eax, eax
0x400292:	mov	qword ptr [rbp - 0x70], 0
0x40029a:	mov	qword ptr [rbp - 0x68], 0
0x4002a2:	mov	qword ptr [rbp - 0x60], 0
0x4002aa:	mov	qword ptr [rbp - 0x58], 0
0x4002b2:	mov	qword ptr [rbp - 0x50], 0
0x4002ba:	mov	qword ptr [rbp - 0x48], 0
0x4002c2:	mov	qword ptr [rbp - 0x40], 0
0x4002ca:	mov	qword ptr [rbp - 0x38], 0
0x4002d2:	mov	qword ptr [rbp - 0x30], 0
0x4002da:	mov	qword ptr [rbp - 0x28], 0
0x4002e2:	mov	qword ptr [rbp - 0x20], 0
0x4002ea:	mov	qword ptr [rbp - 0x18], 0
0x4002f2:	mov	dword ptr [rbp - 0x10], 0
0x4002f9:	lea	rax, [rbp - 0x70]
0x4002fd:	mov	qword ptr [rbp - 0xb0], rax
0x400304:	mov	rax, qword ptr [rbp - 0xb0]
0x40030b:	mov	rdi, rax
0x40030e:	call	0x500000
<Block for 0x400313, 29 bytes>
0x400313:	mov	qword ptr [rbp - 0xa8], rax
0x40031a:	mov	eax, 0x64
0x40031f:	sub	rax, qword ptr [rbp - 0xa8]
0x400326:	cmp	rax, 1
0x40032a:	jbe	0x4003e0
<Block for 0x4003e0, 29 bytes>
0x4003e0:	mov	rax, qword ptr [rbp - 0xb0]
0x4003e7:	mov	qword ptr [rbp - 0x90], rax
0x4003ee:	lea	rax, [rbp - 0xa0]
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500038
<Block for 0x400330, 53 bytes>
0x400330:	mov	rax, qword ptr [rip + 0xffcd1]
0x400337:	mov	rdx, qword ptr [rbp - 0xa8]
0x40033e:	mov	ecx, 0x64
0x400343:	sub	ecx, edx
0x400345:	mov	edx, ecx
0x400347:	mov	esi, edx
0x400349:	mov	rcx, qword ptr [rbp - 0xb0]
0x400350:	mov	rdx, qword ptr [rbp - 0xa8]
0x400357:	add	rcx, rdx
0x40035a:	mov	rdx, rax
0x40035d:	mov	rdi, rcx
0x400360:	call	0x500010
<Block for 0x4003fd, 16 bytes>
0x4003fd:	nop	
0x4003fe:	mov	rax, qword ptr [rbp - 8]
0x400402:	xor	rax, qword ptr fs:[0x28]
0x40040b:	je	0x400412
<Block for 0x400365, 5 bytes>
0x400365:	test	rax, rax
0x400368:	je	0x4003c0
<Block for 0x400412, 2 bytes>
0x400412:	leave	
0x400413:	ret	
<Block for 0x40040d, 5 bytes>
0x40040d:	call	0x500028
<Block for 0x4003c0, 12 bytes>
0x4003c0:	lea	rdi, [rip + 0x6c]
0x4003c7:	call	0x500018
<Block for 0x40036a, 15 bytes>
0x40036a:	mov	rax, qword ptr [rbp - 0xb0]
0x400371:	mov	rdi, rax
0x400374:	call	0x500000
<Block for 0x4003cc, 49 bytes>
0x4003cc:	mov	rdx, qword ptr [rbp - 0xb0]
0x4003d3:	mov	rax, qword ptr [rbp - 0xa8]
0x4003da:	add	rax, rdx
0x4003dd:	mov	byte ptr [rax], 0
0x4003e0:	mov	rax, qword ptr [rbp - 0xb0]
0x4003e7:	mov	qword ptr [rbp - 0x90], rax
0x4003ee:	lea	rax, [rbp - 0xa0]
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500038
<Block for 0x400379, 17 bytes>
0x400379:	mov	qword ptr [rbp - 0xa8], rax
0x400380:	cmp	qword ptr [rbp - 0xa8], 0
0x400388:	je	0x4003e0
<Block for 0x40038a, 28 bytes>
0x40038a:	mov	rax, qword ptr [rbp - 0xa8]
0x400391:	lea	rdx, [rax - 1]
0x400395:	mov	rax, qword ptr [rbp - 0xb0]
0x40039c:	add	rax, rdx
0x40039f:	movzx	eax, byte ptr [rax]
0x4003a2:	cmp	al, 0xa
0x4003a4:	jne	0x4003e0
<Block for 0x4003a6, 26 bytes>
0x4003a6:	mov	rax, qword ptr [rbp - 0xa8]
0x4003ad:	lea	rdx, [rax - 1]
0x4003b1:	mov	rax, qword ptr [rbp - 0xb0]
0x4003b8:	add	rax, rdx
0x4003bb:	mov	byte ptr [rax], 0
0x4003be:	jmp	0x4003e0
