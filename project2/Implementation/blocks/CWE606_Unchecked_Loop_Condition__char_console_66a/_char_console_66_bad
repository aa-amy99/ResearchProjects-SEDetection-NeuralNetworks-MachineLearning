<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0xb0], rax
0x400090:	mov	rax, qword ptr [rbp - 0xb0]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 29 bytes>
0x40009f:	mov	qword ptr [rbp - 0xa8], rax
0x4000a6:	mov	eax, 0x64
0x4000ab:	sub	rax, qword ptr [rbp - 0xa8]
0x4000b2:	cmp	rax, 1
0x4000b6:	jbe	0x40016c
<Block for 0x40016c, 29 bytes>
0x40016c:	mov	rax, qword ptr [rbp - 0xb0]
0x400173:	mov	qword ptr [rbp - 0x90], rax
0x40017a:	lea	rax, [rbp - 0xa0]
0x400181:	mov	rdi, rax
0x400184:	call	0x500020
<Block for 0x4000bc, 53 bytes>
0x4000bc:	mov	rax, qword ptr [rip + 0xfff45]
0x4000c3:	mov	rdx, qword ptr [rbp - 0xa8]
0x4000ca:	mov	ecx, 0x64
0x4000cf:	sub	ecx, edx
0x4000d1:	mov	edx, ecx
0x4000d3:	mov	esi, edx
0x4000d5:	mov	rcx, qword ptr [rbp - 0xb0]
0x4000dc:	mov	rdx, qword ptr [rbp - 0xa8]
0x4000e3:	add	rcx, rdx
0x4000e6:	mov	rdx, rax
0x4000e9:	mov	rdi, rcx
0x4000ec:	call	0x500010
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x4000f1, 5 bytes>
0x4000f1:	test	rax, rax
0x4000f4:	je	0x40014c
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500028
<Block for 0x40014c, 12 bytes>
0x40014c:	lea	rdi, [rip + 0x2e0]
0x400153:	call	0x500018
<Block for 0x4000f6, 15 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0xb0]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500000
<Block for 0x400158, 49 bytes>
0x400158:	mov	rdx, qword ptr [rbp - 0xb0]
0x40015f:	mov	rax, qword ptr [rbp - 0xa8]
0x400166:	add	rax, rdx
0x400169:	mov	byte ptr [rax], 0
0x40016c:	mov	rax, qword ptr [rbp - 0xb0]
0x400173:	mov	qword ptr [rbp - 0x90], rax
0x40017a:	lea	rax, [rbp - 0xa0]
0x400181:	mov	rdi, rax
0x400184:	call	0x500020
<Block for 0x400105, 17 bytes>
0x400105:	mov	qword ptr [rbp - 0xa8], rax
0x40010c:	cmp	qword ptr [rbp - 0xa8], 0
0x400114:	je	0x40016c
<Block for 0x400116, 28 bytes>
0x400116:	mov	rax, qword ptr [rbp - 0xa8]
0x40011d:	lea	rdx, [rax - 1]
0x400121:	mov	rax, qword ptr [rbp - 0xb0]
0x400128:	add	rax, rdx
0x40012b:	movzx	eax, byte ptr [rax]
0x40012e:	cmp	al, 0xa
0x400130:	jne	0x40016c
<Block for 0x400132, 26 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0xa8]
0x400139:	lea	rdx, [rax - 1]
0x40013d:	mov	rax, qword ptr [rbp - 0xb0]
0x400144:	add	rax, rdx
0x400147:	mov	byte ptr [rax], 0
0x40014a:	jmp	0x40016c
