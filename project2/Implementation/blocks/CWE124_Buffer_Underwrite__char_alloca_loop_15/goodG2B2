<Block for 0x4002ae, 84 bytes>
0x4002ae:	endbr64	
0x4002b2:	push	rbp
0x4002b3:	mov	rbp, rsp
0x4002b6:	sub	rsp, 0x90
0x4002bd:	mov	rax, qword ptr fs:[0x28]
0x4002c6:	mov	qword ptr [rbp - 8], rax
0x4002ca:	xor	eax, eax
0x4002cc:	mov	eax, 0x10
0x4002d1:	sub	rax, 1
0x4002d5:	add	rax, 0x6c
0x4002d9:	mov	esi, 0x10
0x4002de:	mov	edx, 0
0x4002e3:	div	rsi
0x4002e6:	imul	rax, rax, 0x10
0x4002ea:	mov	rdx, rax
0x4002ed:	and	rdx, 0xfffffffffffff000
0x4002f4:	mov	rcx, rsp
0x4002f7:	sub	rcx, rdx
0x4002fa:	mov	rdx, rcx
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x400314, 26 bytes>
0x400314:	mov	rdx, rax
0x400317:	and	edx, 0xfff
0x40031d:	sub	rsp, rdx
0x400320:	mov	rdx, rax
0x400323:	and	edx, 0xfff
0x400329:	test	rdx, rdx
0x40032c:	je	0x40033e
<Block for 0x400302, 18 bytes>
0x400302:	sub	rsp, 0x1000
0x400309:	or	qword ptr [rsp + 0xff8], 0
0x400312:	jmp	0x4002fd
<Block for 0x40033e, 41 bytes>
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x80], rax
0x400351:	mov	rax, qword ptr [rbp - 0x80]
0x400355:	mov	edx, 0x63
0x40035a:	mov	esi, 0x41
0x40035f:	mov	rdi, rax
0x400362:	call	0x500000
<Block for 0x40032e, 57 bytes>
0x40032e:	and	eax, 0xfff
0x400333:	sub	rax, 8
0x400337:	add	rax, rsp
0x40033a:	or	qword ptr [rax], 0
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x80], rax
0x400351:	mov	rax, qword ptr [rbp - 0x80]
0x400355:	mov	edx, 0x63
0x40035a:	mov	esi, 0x41
0x40035f:	mov	rdi, rax
0x400362:	call	0x500000
<Block for 0x4002fd, 5 bytes>
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x400367, 42 bytes>
0x400367:	mov	rax, qword ptr [rbp - 0x80]
0x40036b:	add	rax, 0x63
0x40036f:	mov	byte ptr [rax], 0
0x400372:	mov	rax, qword ptr [rbp - 0x80]
0x400376:	mov	qword ptr [rbp - 0x78], rax
0x40037a:	nop	
0x40037b:	lea	rax, [rbp - 0x70]
0x40037f:	mov	edx, 0x63
0x400384:	mov	esi, 0x43
0x400389:	mov	rdi, rax
0x40038c:	call	0x500000
<Block for 0x400391, 17 bytes>
0x400391:	mov	byte ptr [rbp - 0xd], 0
0x400395:	mov	qword ptr [rbp - 0x88], 0
0x4003a0:	jmp	0x4003cb
<Block for 0x4003cb, 10 bytes>
0x4003cb:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003d3:	jbe	0x4003a2
<Block for 0x4003a2, 51 bytes>
0x4003a2:	mov	rdx, qword ptr [rbp - 0x78]
0x4003a6:	mov	rax, qword ptr [rbp - 0x88]
0x4003ad:	add	rdx, rax
0x4003b0:	lea	rcx, [rbp - 0x70]
0x4003b4:	mov	rax, qword ptr [rbp - 0x88]
0x4003bb:	add	rax, rcx
0x4003be:	movzx	eax, byte ptr [rax]
0x4003c1:	mov	byte ptr [rdx], al
0x4003c3:	add	qword ptr [rbp - 0x88], 1
0x4003cb:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003d3:	jbe	0x4003a2
<Block for 0x4003d5, 23 bytes>
0x4003d5:	mov	rax, qword ptr [rbp - 0x78]
0x4003d9:	add	rax, 0x63
0x4003dd:	mov	byte ptr [rax], 0
0x4003e0:	mov	rax, qword ptr [rbp - 0x78]
0x4003e4:	mov	rdi, rax
0x4003e7:	call	0x500008
<Block for 0x4003ec, 16 bytes>
0x4003ec:	nop	
0x4003ed:	mov	rax, qword ptr [rbp - 8]
0x4003f1:	xor	rax, qword ptr fs:[0x28]
0x4003fa:	je	0x400401
<Block for 0x400401, 2 bytes>
0x400401:	leave	
0x400402:	ret	
<Block for 0x4003fc, 5 bytes>
0x4003fc:	call	0x500010
