<Block for 0x4000e6, 51 bytes>
0x4000e6:	endbr64	
0x4000ea:	push	rbp
0x4000eb:	mov	rbp, rsp
0x4000ee:	sub	rsp, 0x90
0x4000f5:	mov	rax, qword ptr fs:[0x28]
0x4000fe:	mov	qword ptr [rbp - 8], rax
0x400102:	xor	eax, eax
0x400104:	mov	qword ptr [rbp - 0x88], 0
0x40010f:	mov	eax, dword ptr [rip + 0x1bf]
0x400115:	test	eax, eax
0x400117:	je	0x400127
<Block for 0x400127, 10 bytes>
0x400127:	mov	edi, 0x64
0x40012c:	call	0x500000
<Block for 0x400119, 12 bytes>
0x400119:	lea	rdi, [rip + 0x1b8]
0x400120:	call	0x500010
<Block for 0x400131, 26 bytes>
0x400131:	mov	qword ptr [rbp - 0x78], rax
0x400135:	mov	rax, qword ptr [rbp - 0x78]
0x400139:	mov	edx, 0x63
0x40013e:	mov	esi, 0x41
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x400125, 2 bytes>
0x400125:	jmp	0x400161
<Block for 0x40014b, 44 bytes>
0x40014b:	mov	rax, qword ptr [rbp - 0x78]
0x40014f:	add	rax, 0x63
0x400153:	mov	byte ptr [rax], 0
0x400156:	mov	rax, qword ptr [rbp - 0x78]
0x40015a:	mov	qword ptr [rbp - 0x88], rax
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500008
<Block for 0x400161, 22 bytes>
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500008
<Block for 0x400177, 19 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	mov	qword ptr [rbp - 0x80], 0
0x400183:	cmp	qword ptr [rbp - 0x80], 0x63
0x400188:	ja	0x4001af
<Block for 0x40018a, 37 bytes>
0x40018a:	mov	rdx, qword ptr [rbp - 0x88]
0x400191:	mov	rax, qword ptr [rbp - 0x80]
0x400195:	add	rax, rdx
0x400198:	movzx	eax, byte ptr [rax]
0x40019b:	lea	rcx, [rbp - 0x70]
0x40019f:	mov	rdx, qword ptr [rbp - 0x80]
0x4001a3:	add	rdx, rcx
0x4001a6:	mov	byte ptr [rdx], al
0x4001a8:	add	qword ptr [rbp - 0x80], 1
0x4001ad:	jmp	0x400183
<Block for 0x4001af, 16 bytes>
0x4001af:	mov	byte ptr [rbp - 0xd], 0
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500010
<Block for 0x400183, 7 bytes>
0x400183:	cmp	qword ptr [rbp - 0x80], 0x63
0x400188:	ja	0x4001af
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 8]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x4001d4
<Block for 0x4001d4, 2 bytes>
0x4001d4:	leave	
0x4001d5:	ret	
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500018
