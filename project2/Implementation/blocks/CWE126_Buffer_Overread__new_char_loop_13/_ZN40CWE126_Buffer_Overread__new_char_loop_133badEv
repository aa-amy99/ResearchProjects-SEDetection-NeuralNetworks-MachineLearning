<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, dword ptr [rip + 0xfffd1]
0x40002f:	cmp	eax, 5
0x400032:	jne	0x40006c
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x32
0x400039:	call	0x500008
<Block for 0x40006c, 22 bytes>
0x40006c:	lea	rax, [rbp - 0x70]
0x400070:	mov	edx, 0x63
0x400075:	mov	esi, 0x43
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500010
<Block for 0x40003e, 32 bytes>
0x40003e:	mov	qword ptr [rbp - 0x88], rax
0x400045:	mov	rax, qword ptr [rbp - 0x88]
0x40004c:	mov	edx, 0x31
0x400051:	mov	esi, 0x41
0x400056:	mov	rdi, rax
0x400059:	call	0x500010
<Block for 0x400082, 16 bytes>
0x400082:	mov	byte ptr [rbp - 0xd], 0
0x400086:	lea	rax, [rbp - 0x70]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500018
<Block for 0x40005e, 36 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x88]
0x400065:	add	rax, 0x31
0x400069:	mov	byte ptr [rax], 0
0x40006c:	lea	rax, [rbp - 0x70]
0x400070:	mov	edx, 0x63
0x400075:	mov	esi, 0x43
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500010
<Block for 0x400092, 22 bytes>
0x400092:	mov	qword ptr [rbp - 0x78], rax
0x400096:	mov	qword ptr [rbp - 0x80], 0
0x40009e:	mov	rax, qword ptr [rbp - 0x80]
0x4000a2:	cmp	rax, qword ptr [rbp - 0x78]
0x4000a6:	jae	0x4000cd
<Block for 0x4000a8, 37 bytes>
0x4000a8:	mov	rdx, qword ptr [rbp - 0x88]
0x4000af:	mov	rax, qword ptr [rbp - 0x80]
0x4000b3:	add	rax, rdx
0x4000b6:	movzx	eax, byte ptr [rax]
0x4000b9:	lea	rcx, [rbp - 0x70]
0x4000bd:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c1:	add	rdx, rcx
0x4000c4:	mov	byte ptr [rdx], al
0x4000c6:	add	qword ptr [rbp - 0x80], 1
0x4000cb:	jmp	0x40009e
<Block for 0x4000cd, 16 bytes>
0x4000cd:	mov	byte ptr [rbp - 0xd], 0
0x4000d1:	lea	rax, [rbp - 0x70]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500020
<Block for 0x40009e, 10 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0x80]
0x4000a2:	cmp	rax, qword ptr [rbp - 0x78]
0x4000a6:	jae	0x4000cd
<Block for 0x4000dd, 10 bytes>
0x4000dd:	cmp	qword ptr [rbp - 0x88], 0
0x4000e5:	je	0x4000f6
<Block for 0x4000f6, 16 bytes>
0x4000f6:	nop	
0x4000f7:	mov	rax, qword ptr [rbp - 8]
0x4000fb:	xor	rax, qword ptr fs:[0x28]
0x400104:	je	0x40010b
<Block for 0x4000e7, 15 bytes>
0x4000e7:	mov	rax, qword ptr [rbp - 0x88]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500028
<Block for 0x40010b, 2 bytes>
0x40010b:	leave	
0x40010c:	ret	
<Block for 0x400106, 5 bytes>
0x400106:	call	0x500030
