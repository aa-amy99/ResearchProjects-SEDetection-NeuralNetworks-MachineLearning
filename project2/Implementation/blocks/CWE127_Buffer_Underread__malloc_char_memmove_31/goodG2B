<Block for 0x4000f3, 51 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x90
0x400102:	mov	rax, qword ptr fs:[0x28]
0x40010b:	mov	qword ptr [rbp - 8], rax
0x40010f:	xor	eax, eax
0x400111:	mov	qword ptr [rbp - 0x90], 0
0x40011c:	mov	edi, 0x64
0x400121:	call	0x500000
<Block for 0x400126, 17 bytes>
0x400126:	mov	qword ptr [rbp - 0x88], rax
0x40012d:	cmp	qword ptr [rbp - 0x88], 0
0x400135:	jne	0x400141
<Block for 0x400137, 10 bytes>
0x400137:	mov	edi, 0xffffffff
0x40013c:	call	0x500008
<Block for 0x400141, 25 bytes>
0x400141:	mov	rax, qword ptr [rbp - 0x88]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x41
0x400152:	mov	rdi, rax
0x400155:	call	0x500010
<Block for 0x40015a, 69 bytes>
0x40015a:	mov	rax, qword ptr [rbp - 0x88]
0x400161:	add	rax, 0x63
0x400165:	mov	byte ptr [rax], 0
0x400168:	mov	rax, qword ptr [rbp - 0x88]
0x40016f:	mov	qword ptr [rbp - 0x90], rax
0x400176:	mov	rax, qword ptr [rbp - 0x90]
0x40017d:	mov	qword ptr [rbp - 0x80], rax
0x400181:	mov	rax, qword ptr [rbp - 0x80]
0x400185:	mov	qword ptr [rbp - 0x78], rax
0x400189:	lea	rax, [rbp - 0x70]
0x40018d:	mov	edx, 0x63
0x400192:	mov	esi, 0x43
0x400197:	mov	rdi, rax
0x40019a:	call	0x500010
<Block for 0x40019f, 28 bytes>
0x40019f:	mov	byte ptr [rbp - 0xd], 0
0x4001a3:	mov	rcx, qword ptr [rbp - 0x78]
0x4001a7:	lea	rax, [rbp - 0x70]
0x4001ab:	mov	edx, 0x64
0x4001b0:	mov	rsi, rcx
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500018
<Block for 0x4001bb, 16 bytes>
0x4001bb:	mov	byte ptr [rbp - 0xd], 0
0x4001bf:	lea	rax, [rbp - 0x70]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500020
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500028
