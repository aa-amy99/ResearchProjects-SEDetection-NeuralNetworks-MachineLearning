<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	eax, dword ptr [rip + 0xfffea]
0x400016:	test	eax, eax
0x400018:	je	0x4000b0
<Block for 0x4000b0, 6 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 0x18]
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x40001e, 12 bytes>
0x40001e:	mov	rax, qword ptr [rbp - 0x18]
0x400022:	mov	rdi, rax
0x400025:	call	0x500008
<Block for 0x40002a, 19 bytes>
0x40002a:	mov	qword ptr [rbp - 0x10], rax
0x40002e:	mov	eax, 0xfa
0x400033:	sub	rax, qword ptr [rbp - 0x10]
0x400037:	cmp	rax, 1
0x40003b:	jbe	0x4000b0
<Block for 0x40003d, 19 bytes>
0x40003d:	lea	rsi, [rip + 0x122]
0x400044:	lea	rdi, [rip + 0x11d]
0x40004b:	call	0x500010
<Block for 0x400050, 11 bytes>
0x400050:	mov	qword ptr [rbp - 8], rax
0x400054:	cmp	qword ptr [rbp - 8], 0
0x400059:	je	0x4000b0
<Block for 0x40005b, 42 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 0x10]
0x40005f:	mov	edx, 0xfa
0x400064:	sub	edx, eax
0x400066:	mov	eax, edx
0x400068:	mov	esi, eax
0x40006a:	mov	rdx, qword ptr [rbp - 0x18]
0x40006e:	mov	rax, qword ptr [rbp - 0x10]
0x400072:	lea	rcx, [rdx + rax]
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	mov	rdx, rax
0x40007d:	mov	rdi, rcx
0x400080:	call	0x500018
<Block for 0x400085, 5 bytes>
0x400085:	test	rax, rax
0x400088:	jne	0x4000a4
<Block for 0x40008a, 12 bytes>
0x40008a:	lea	rdi, [rip + 0xe5]
0x400091:	call	0x500020
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500028
<Block for 0x400096, 26 bytes>
0x400096:	mov	rdx, qword ptr [rbp - 0x18]
0x40009a:	mov	rax, qword ptr [rbp - 0x10]
0x40009e:	add	rax, rdx
0x4000a1:	mov	byte ptr [rax], 0
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500028
