<Block for 0x400195, 40 bytes>
0x400195:	endbr64	
0x400199:	push	rbp
0x40019a:	mov	rbp, rsp
0x40019d:	sub	rsp, 0x120
0x4001a4:	mov	rax, qword ptr fs:[0x28]
0x4001ad:	mov	qword ptr [rbp - 8], rax
0x4001b1:	xor	eax, eax
0x4001b3:	mov	eax, 0
0x4001b8:	call	0x500000
<Block for 0x4001bd, 8 bytes>
0x4001bd:	test	eax, eax
0x4001bf:	je	0x400252
<Block for 0x400252, 16 bytes>
0x400252:	nop	
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	xor	rax, qword ptr fs:[0x28]
0x400260:	je	0x400267
<Block for 0x4001c5, 39 bytes>
0x4001c5:	pxor	xmm0, xmm0
0x4001c9:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001d1:	mov	rdx, qword ptr [rip + 0xffe30]
0x4001d8:	lea	rax, [rbp - 0x110]
0x4001df:	mov	esi, 0x100
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x500010
<Block for 0x400267, 2 bytes>
0x400267:	leave	
0x400268:	ret	
<Block for 0x400262, 5 bytes>
0x400262:	call	0x500038
<Block for 0x4001ec, 5 bytes>
0x4001ec:	test	rax, rax
0x4001ef:	je	0x40020e
<Block for 0x40020e, 12 bytes>
0x40020e:	lea	rdi, [rip + 0x73]
0x400215:	call	0x500020
<Block for 0x4001f1, 15 bytes>
0x4001f1:	lea	rax, [rbp - 0x110]
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500018
<Block for 0x40021a, 14 bytes>
0x40021a:	pxor	xmm0, xmm0
0x40021e:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400226:	jbe	0x400236
<Block for 0x400200, 14 bytes>
0x400200:	movq	rax, xmm0
0x400205:	mov	qword ptr [rbp - 0x118], rax
0x40020c:	jmp	0x40021a
<Block for 0x400236, 17 bytes>
0x400236:	mov	rax, qword ptr [rbp - 0x118]
0x40023d:	movq	xmm0, rax
0x400242:	call	0x500028
<Block for 0x400228, 12 bytes>
0x400228:	lea	rdi, [rip + 0x7e]
0x40022f:	call	0x500020
<Block for 0x400247, 11 bytes>
0x400247:	cvttsd2si	eax, xmm0
0x40024b:	mov	edi, eax
0x40024d:	call	0x500030
<Block for 0x400234, 2 bytes>
0x400234:	jmp	0x400252
