<Block for 0x4000c8, 74 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0xa0
0x4000d7:	mov	qword ptr [rbp - 0x98], rdi
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	rax, qword ptr [rbp - 0x98]
0x4000f4:	mov	rax, qword ptr [rax + 0x10]
0x4000f8:	mov	qword ptr [rbp - 0x80], rax
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x43
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x400112, 16 bytes>
0x400112:	mov	byte ptr [rbp - 0xd], 0
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500008
<Block for 0x400122, 17 bytes>
0x400122:	mov	qword ptr [rbp - 0x78], rax
0x400126:	mov	qword ptr [rbp - 0x88], 0
0x400131:	jmp	0x40015c
<Block for 0x40015c, 13 bytes>
0x40015c:	mov	rax, qword ptr [rbp - 0x88]
0x400163:	cmp	rax, qword ptr [rbp - 0x78]
0x400167:	jb	0x400133
<Block for 0x400133, 54 bytes>
0x400133:	mov	rdx, qword ptr [rbp - 0x80]
0x400137:	mov	rax, qword ptr [rbp - 0x88]
0x40013e:	add	rax, rdx
0x400141:	movzx	eax, byte ptr [rax]
0x400144:	lea	rcx, [rbp - 0x70]
0x400148:	mov	rdx, qword ptr [rbp - 0x88]
0x40014f:	add	rdx, rcx
0x400152:	mov	byte ptr [rdx], al
0x400154:	add	qword ptr [rbp - 0x88], 1
0x40015c:	mov	rax, qword ptr [rbp - 0x88]
0x400163:	cmp	rax, qword ptr [rbp - 0x78]
0x400167:	jb	0x400133
<Block for 0x400169, 16 bytes>
0x400169:	mov	byte ptr [rbp - 0xd], 0
0x40016d:	lea	rax, [rbp - 0x70]
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400179, 16 bytes>
0x400179:	nop	
0x40017a:	mov	rax, qword ptr [rbp - 8]
0x40017e:	xor	rax, qword ptr fs:[0x28]
0x400187:	je	0x40018e
<Block for 0x40018e, 2 bytes>
0x40018e:	leave	
0x40018f:	ret	
<Block for 0x400189, 5 bytes>
0x400189:	call	0x500018
