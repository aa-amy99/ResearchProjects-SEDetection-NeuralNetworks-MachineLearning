<Block for 0x400000, 74 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	qword ptr [rbp - 0x98], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x98]
0x40002c:	mov	rax, qword ptr [rax + 0x10]
0x400030:	mov	qword ptr [rbp - 0x80], rax
0x400034:	lea	rax, [rbp - 0x70]
0x400038:	mov	edx, 0x63
0x40003d:	mov	esi, 0x43
0x400042:	mov	rdi, rax
0x400045:	call	0x500000
<Block for 0x40004a, 16 bytes>
0x40004a:	mov	byte ptr [rbp - 0xd], 0
0x40004e:	lea	rax, [rbp - 0x70]
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40005a, 17 bytes>
0x40005a:	mov	qword ptr [rbp - 0x78], rax
0x40005e:	mov	qword ptr [rbp - 0x88], 0
0x400069:	jmp	0x400094
<Block for 0x400094, 13 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x88]
0x40009b:	cmp	rax, qword ptr [rbp - 0x78]
0x40009f:	jb	0x40006b
<Block for 0x40006b, 54 bytes>
0x40006b:	mov	rdx, qword ptr [rbp - 0x80]
0x40006f:	mov	rax, qword ptr [rbp - 0x88]
0x400076:	add	rax, rdx
0x400079:	movzx	eax, byte ptr [rax]
0x40007c:	lea	rcx, [rbp - 0x70]
0x400080:	mov	rdx, qword ptr [rbp - 0x88]
0x400087:	add	rdx, rcx
0x40008a:	mov	byte ptr [rdx], al
0x40008c:	add	qword ptr [rbp - 0x88], 1
0x400094:	mov	rax, qword ptr [rbp - 0x88]
0x40009b:	cmp	rax, qword ptr [rbp - 0x78]
0x40009f:	jb	0x40006b
<Block for 0x4000a1, 16 bytes>
0x4000a1:	mov	byte ptr [rbp - 0xd], 0
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500010
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500018
