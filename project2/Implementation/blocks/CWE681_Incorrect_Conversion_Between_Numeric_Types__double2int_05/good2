<Block for 0x400191, 44 bytes>
0x400191:	endbr64	
0x400195:	push	rbp
0x400196:	mov	rbp, rsp
0x400199:	sub	rsp, 0x120
0x4001a0:	mov	rax, qword ptr fs:[0x28]
0x4001a9:	mov	qword ptr [rbp - 8], rax
0x4001ad:	xor	eax, eax
0x4001af:	mov	eax, dword ptr [rip + 0xdb]
0x4001b5:	test	eax, eax
0x4001b7:	je	0x400257
<Block for 0x400257, 16 bytes>
0x400257:	nop	
0x400258:	mov	rax, qword ptr [rbp - 8]
0x40025c:	xor	rax, qword ptr fs:[0x28]
0x400265:	je	0x40026c
<Block for 0x4001bd, 39 bytes>
0x4001bd:	pxor	xmm0, xmm0
0x4001c1:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001c9:	mov	rdx, qword ptr [rip + 0xffe30]
0x4001d0:	lea	rax, [rbp - 0x110]
0x4001d7:	mov	esi, 0x100
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500008
<Block for 0x40026c, 2 bytes>
0x40026c:	leave	
0x40026d:	ret	
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500028
<Block for 0x4001e4, 5 bytes>
0x4001e4:	test	rax, rax
0x4001e7:	je	0x400206
<Block for 0x400206, 12 bytes>
0x400206:	lea	rdi, [rip + 0x8b]
0x40020d:	call	0x500018
<Block for 0x4001e9, 15 bytes>
0x4001e9:	lea	rax, [rbp - 0x110]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500010
<Block for 0x400212, 18 bytes>
0x400212:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40021a:	comisd	xmm0, xmmword ptr [rip + 0xd6]
0x400222:	ja	0x400236
<Block for 0x4001f8, 14 bytes>
0x4001f8:	movq	rax, xmm0
0x4001fd:	mov	qword ptr [rbp - 0x118], rax
0x400204:	jmp	0x400212
<Block for 0x400224, 18 bytes>
0x400224:	movsd	xmm0, qword ptr [rip + 0xd4]
0x40022c:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400234:	jbe	0x400244
<Block for 0x400236, 12 bytes>
0x400236:	lea	rdi, [rip + 0x83]
0x40023d:	call	0x500018
<Block for 0x400244, 19 bytes>
0x400244:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40024c:	cvttsd2si	eax, xmm0
0x400250:	mov	edi, eax
0x400252:	call	0x500020
<Block for 0x400242, 2 bytes>
0x400242:	jmp	0x400257
