<Block for 0x40014a, 44 bytes>
0x40014a:	endbr64	
0x40014e:	push	rbp
0x40014f:	mov	rbp, rsp
0x400152:	sub	rsp, 0x40
0x400156:	mov	rax, qword ptr fs:[0x28]
0x40015f:	mov	qword ptr [rbp - 8], rax
0x400163:	xor	eax, eax
0x400165:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x40016c:	mov	eax, 0
0x400171:	call	0x500000
<Block for 0x400176, 4 bytes>
0x400176:	test	eax, eax
0x400178:	je	0x400183
<Block for 0x400183, 17 bytes>
0x400183:	mov	dword ptr [rbp - 0x3c], 0xfffffffb
0x40018a:	mov	eax, 0
0x40018f:	call	0x500000
<Block for 0x40017a, 9 bytes>
0x40017a:	mov	dword ptr [rbp - 0x3c], 0xfffffffb
0x400181:	jmp	0x40018a
<Block for 0x400194, 4 bytes>
0x400194:	test	eax, eax
0x400196:	je	0x40020f
<Block for 0x40018a, 10 bytes>
0x40018a:	mov	eax, 0
0x40018f:	call	0x500000
<Block for 0x40020f, 46 bytes>
0x40020f:	mov	qword ptr [rbp - 0x30], 0
0x400217:	mov	qword ptr [rbp - 0x28], 0
0x40021f:	mov	qword ptr [rbp - 0x20], 0
0x400227:	mov	qword ptr [rbp - 0x18], 0
0x40022f:	mov	qword ptr [rbp - 0x10], 0
0x400237:	cmp	dword ptr [rbp - 0x3c], 0
0x40023b:	js	0x400275
<Block for 0x400198, 46 bytes>
0x400198:	mov	qword ptr [rbp - 0x30], 0
0x4001a0:	mov	qword ptr [rbp - 0x28], 0
0x4001a8:	mov	qword ptr [rbp - 0x20], 0
0x4001b0:	mov	qword ptr [rbp - 0x18], 0
0x4001b8:	mov	qword ptr [rbp - 0x10], 0
0x4001c0:	cmp	dword ptr [rbp - 0x3c], 0
0x4001c4:	js	0x400201
<Block for 0x400275, 12 bytes>
0x400275:	lea	rdi, [rip + 0x19c]
0x40027c:	call	0x500010
<Block for 0x40023d, 6 bytes>
0x40023d:	cmp	dword ptr [rbp - 0x3c], 9
0x400241:	jg	0x400275
<Block for 0x400201, 12 bytes>
0x400201:	lea	rdi, [rip + 0x210]
0x400208:	call	0x500010
<Block for 0x4001c6, 6 bytes>
0x4001c6:	cmp	dword ptr [rbp - 0x3c], 9
0x4001ca:	jg	0x400201
<Block for 0x400281, 2 bytes>
0x400281:	jmp	0x400283
<Block for 0x400243, 22 bytes>
0x400243:	mov	eax, dword ptr [rbp - 0x3c]
0x400246:	cdqe	
0x400248:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400250:	mov	dword ptr [rbp - 0x34], 0
0x400257:	jmp	0x40026d
<Block for 0x40020d, 2 bytes>
0x40020d:	jmp	0x400283
<Block for 0x4001cc, 22 bytes>
0x4001cc:	mov	eax, dword ptr [rbp - 0x3c]
0x4001cf:	cdqe	
0x4001d1:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4001d9:	mov	dword ptr [rbp - 0x38], 0
0x4001e0:	jmp	0x4001f6
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x40026d, 6 bytes>
0x40026d:	cmp	dword ptr [rbp - 0x34], 9
0x400271:	jle	0x400259
<Block for 0x4001f6, 6 bytes>
0x4001f6:	cmp	dword ptr [rbp - 0x38], 9
0x4001fa:	jle	0x4001e2
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500018
<Block for 0x400259, 16 bytes>
0x400259:	mov	eax, dword ptr [rbp - 0x34]
0x40025c:	cdqe	
0x40025e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400262:	mov	edi, eax
0x400264:	call	0x500008
<Block for 0x400273, 2 bytes>
0x400273:	jmp	0x400283
<Block for 0x4001e2, 16 bytes>
0x4001e2:	mov	eax, dword ptr [rbp - 0x38]
0x4001e5:	cdqe	
0x4001e7:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001eb:	mov	edi, eax
0x4001ed:	call	0x500008
<Block for 0x4001fc, 5 bytes>
0x4001fc:	jmp	0x400283
<Block for 0x400269, 10 bytes>
0x400269:	add	dword ptr [rbp - 0x34], 1
0x40026d:	cmp	dword ptr [rbp - 0x34], 9
0x400271:	jle	0x400259
<Block for 0x4001f2, 10 bytes>
0x4001f2:	add	dword ptr [rbp - 0x38], 1
0x4001f6:	cmp	dword ptr [rbp - 0x38], 9
0x4001fa:	jle	0x4001e2
