<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400039
<Block for 0x400039, 17 bytes>
0x400039:	mov	dword ptr [rbp - 0x3c], 7
0x400040:	mov	eax, 0
0x400045:	call	0x500000
<Block for 0x400030, 9 bytes>
0x400030:	mov	dword ptr [rbp - 0x3c], 0xfffffffb
0x400037:	jmp	0x400040
<Block for 0x40004a, 4 bytes>
0x40004a:	test	eax, eax
0x40004c:	je	0x4000bf
<Block for 0x400040, 10 bytes>
0x400040:	mov	eax, 0
0x400045:	call	0x500000
<Block for 0x4000bf, 46 bytes>
0x4000bf:	mov	qword ptr [rbp - 0x30], 0
0x4000c7:	mov	qword ptr [rbp - 0x28], 0
0x4000cf:	mov	qword ptr [rbp - 0x20], 0
0x4000d7:	mov	qword ptr [rbp - 0x18], 0
0x4000df:	mov	qword ptr [rbp - 0x10], 0
0x4000e7:	cmp	dword ptr [rbp - 0x3c], 0
0x4000eb:	js	0x400125
<Block for 0x40004e, 46 bytes>
0x40004e:	mov	qword ptr [rbp - 0x30], 0
0x400056:	mov	qword ptr [rbp - 0x28], 0
0x40005e:	mov	qword ptr [rbp - 0x20], 0
0x400066:	mov	qword ptr [rbp - 0x18], 0
0x40006e:	mov	qword ptr [rbp - 0x10], 0
0x400076:	cmp	dword ptr [rbp - 0x3c], 9
0x40007a:	jg	0x4000b1
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x2ec]
0x40012c:	call	0x500010
<Block for 0x4000ed, 6 bytes>
0x4000ed:	cmp	dword ptr [rbp - 0x3c], 9
0x4000f1:	jg	0x400125
<Block for 0x40007c, 22 bytes>
0x40007c:	mov	eax, dword ptr [rbp - 0x3c]
0x40007f:	cdqe	
0x400081:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400089:	mov	dword ptr [rbp - 0x38], 0
0x400090:	jmp	0x4000a6
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rdi, [rip + 0x340]
0x4000b8:	call	0x500010
<Block for 0x400131, 2 bytes>
0x400131:	jmp	0x400133
<Block for 0x4000f3, 22 bytes>
0x4000f3:	mov	eax, dword ptr [rbp - 0x3c]
0x4000f6:	cdqe	
0x4000f8:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400100:	mov	dword ptr [rbp - 0x34], 0
0x400107:	jmp	0x40011d
<Block for 0x4000a6, 6 bytes>
0x4000a6:	cmp	dword ptr [rbp - 0x38], 9
0x4000aa:	jle	0x400092
<Block for 0x4000bd, 2 bytes>
0x4000bd:	jmp	0x400133
<Block for 0x400133, 16 bytes>
0x400133:	nop	
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	xor	rax, qword ptr fs:[0x28]
0x400141:	je	0x400148
<Block for 0x40011d, 6 bytes>
0x40011d:	cmp	dword ptr [rbp - 0x34], 9
0x400121:	jle	0x400109
<Block for 0x400092, 16 bytes>
0x400092:	mov	eax, dword ptr [rbp - 0x38]
0x400095:	cdqe	
0x400097:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40009b:	mov	edi, eax
0x40009d:	call	0x500008
<Block for 0x4000ac, 5 bytes>
0x4000ac:	jmp	0x400133
<Block for 0x400148, 2 bytes>
0x400148:	leave	
0x400149:	ret	
<Block for 0x400143, 5 bytes>
0x400143:	call	0x500018
<Block for 0x400109, 16 bytes>
0x400109:	mov	eax, dword ptr [rbp - 0x34]
0x40010c:	cdqe	
0x40010e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400112:	mov	edi, eax
0x400114:	call	0x500008
<Block for 0x400123, 2 bytes>
0x400123:	jmp	0x400133
<Block for 0x4000a2, 10 bytes>
0x4000a2:	add	dword ptr [rbp - 0x38], 1
0x4000a6:	cmp	dword ptr [rbp - 0x38], 9
0x4000aa:	jle	0x400092
<Block for 0x400119, 10 bytes>
0x400119:	add	dword ptr [rbp - 0x34], 1
0x40011d:	cmp	dword ptr [rbp - 0x34], 9
0x400121:	jle	0x400109
