<Block for 0x400040, 21 bytes>
0x400040:	endbr64	
0x400044:	push	rbp
0x400045:	mov	rbp, rsp
0x400048:	sub	rsp, 0x10
0x40004c:	mov	eax, 0
0x400051:	test	eax, eax
0x400053:	je	0x400063
<Block for 0x400063, 5 bytes>
0x400063:	call	0x500018
<Block for 0x400055, 12 bytes>
0x400055:	lea	rdi, [rip + 0xf4]
0x40005c:	call	0x500010
<Block for 0x400068, 23 bytes>
0x400068:	mov	dword ptr [rax], 0
0x40006e:	mov	rax, qword ptr [rip + 0x103]
0x400075:	movq	xmm0, rax
0x40007a:	call	0x500000
<Block for 0x400061, 2 bytes>
0x400061:	jmp	0x4000b8
<Block for 0x40007f, 14 bytes>
0x40007f:	movq	rax, xmm0
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	call	0x500018
<Block for 0x4000b8, 3 bytes>
0x4000b8:	nop	
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x40008d, 7 bytes>
0x40008d:	mov	eax, dword ptr [rax]
0x40008f:	cmp	eax, 0x21
0x400092:	jne	0x4000aa
<Block for 0x400094, 12 bytes>
0x400094:	lea	rdi, [rip + 0xca]
0x40009b:	call	0x500010
<Block for 0x4000aa, 14 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	movq	xmm0, rax
0x4000b3:	call	0x500008
<Block for 0x4000a0, 10 bytes>
0x4000a0:	mov	edi, 1
0x4000a5:	call	0x500020
