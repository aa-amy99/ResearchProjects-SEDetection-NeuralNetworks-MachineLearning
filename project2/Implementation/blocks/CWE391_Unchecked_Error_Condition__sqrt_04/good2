<Block for 0x4000bb, 21 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x10
0x4000c7:	mov	eax, 1
0x4000cc:	test	eax, eax
0x4000ce:	je	0x400125
<Block for 0x400125, 3 bytes>
0x400125:	nop	
0x400126:	leave	
0x400127:	ret	
<Block for 0x4000d0, 5 bytes>
0x4000d0:	call	0x500018
<Block for 0x4000d5, 23 bytes>
0x4000d5:	mov	dword ptr [rax], 0
0x4000db:	mov	rax, qword ptr [rip + 0x96]
0x4000e2:	movq	xmm0, rax
0x4000e7:	call	0x500000
<Block for 0x4000ec, 14 bytes>
0x4000ec:	movq	rax, xmm0
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	call	0x500018
<Block for 0x4000fa, 7 bytes>
0x4000fa:	mov	eax, dword ptr [rax]
0x4000fc:	cmp	eax, 0x21
0x4000ff:	jne	0x400117
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0x5d]
0x400108:	call	0x500010
<Block for 0x400117, 14 bytes>
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	movq	xmm0, rax
0x400120:	call	0x500008
<Block for 0x40010d, 10 bytes>
0x40010d:	mov	edi, 1
0x400112:	call	0x500020
