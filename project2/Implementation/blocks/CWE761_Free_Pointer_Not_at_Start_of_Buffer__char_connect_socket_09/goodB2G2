<Block for 0x4003c8, 37 bytes>
0x4003c8:	endbr64	
0x4003cc:	push	rbp
0x4003cd:	mov	rbp, rsp
0x4003d0:	sub	rsp, 0x50
0x4003d4:	mov	rax, qword ptr fs:[0x28]
0x4003dd:	mov	qword ptr [rbp - 8], rax
0x4003e1:	xor	eax, eax
0x4003e3:	mov	edi, 0x64
0x4003e8:	call	0x500000
<Block for 0x4003ed, 11 bytes>
0x4003ed:	mov	qword ptr [rbp - 0x38], rax
0x4003f1:	cmp	qword ptr [rbp - 0x38], 0
0x4003f6:	jne	0x400402
<Block for 0x4003f8, 10 bytes>
0x4003f8:	mov	edi, 0xffffffff
0x4003fd:	call	0x500008
<Block for 0x400402, 26 bytes>
0x400402:	mov	rax, qword ptr [rbp - 0x38]
0x400406:	mov	byte ptr [rax], 0
0x400409:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400410:	mov	rax, qword ptr [rbp - 0x38]
0x400414:	mov	rdi, rax
0x400417:	call	0x500010
<Block for 0x40041c, 24 bytes>
0x40041c:	mov	qword ptr [rbp - 0x30], rax
0x400420:	mov	edx, 6
0x400425:	mov	esi, 1
0x40042a:	mov	edi, 2
0x40042f:	call	0x500018
<Block for 0x400434, 13 bytes>
0x400434:	mov	dword ptr [rbp - 0x48], eax
0x400437:	cmp	dword ptr [rbp - 0x48], -1
0x40043b:	je	0x40052e
<Block for 0x40052e, 3 bytes>
0x40052e:	nop	
0x40052f:	jmp	0x400532
<Block for 0x400441, 22 bytes>
0x400441:	lea	rax, [rbp - 0x20]
0x400445:	mov	edx, 0x10
0x40044a:	mov	esi, 0
0x40044f:	mov	rdi, rax
0x400452:	call	0x500020
<Block for 0x400532, 6 bytes>
0x400532:	cmp	dword ptr [rbp - 0x48], -1
0x400536:	je	0x400542
<Block for 0x400457, 18 bytes>
0x400457:	mov	word ptr [rbp - 0x20], 2
0x40045d:	lea	rdi, [rip + 0x16b]
0x400464:	call	0x500028
<Block for 0x400542, 10 bytes>
0x400542:	mov	eax, dword ptr [rip + 0xffb10]
0x400548:	test	eax, eax
0x40054a:	je	0x400599
<Block for 0x400538, 10 bytes>
0x400538:	mov	eax, dword ptr [rbp - 0x48]
0x40053b:	mov	edi, eax
0x40053d:	call	0x500050
<Block for 0x400469, 13 bytes>
0x400469:	mov	dword ptr [rbp - 0x1c], eax
0x40046c:	mov	edi, 0x6987
0x400471:	call	0x500030
<Block for 0x400599, 16 bytes>
0x400599:	nop	
0x40059a:	mov	rax, qword ptr [rbp - 8]
0x40059e:	xor	rax, qword ptr fs:[0x28]
0x4005a7:	je	0x4005ae
<Block for 0x40054c, 10 bytes>
0x40054c:	mov	qword ptr [rbp - 0x40], 0
0x400554:	jmp	0x40057b
<Block for 0x400476, 26 bytes>
0x400476:	mov	word ptr [rbp - 0x1e], ax
0x40047a:	lea	rcx, [rbp - 0x20]
0x40047e:	mov	eax, dword ptr [rbp - 0x48]
0x400481:	mov	edx, 0x10
0x400486:	mov	rsi, rcx
0x400489:	mov	edi, eax
0x40048b:	call	0x500038
<Block for 0x4005ae, 2 bytes>
0x4005ae:	leave	
0x4005af:	ret	
<Block for 0x4005a9, 5 bytes>
0x4005a9:	call	0x500070
<Block for 0x40057b, 12 bytes>
0x40057b:	mov	rax, qword ptr [rbp - 0x38]
0x40057f:	mov	rdi, rax
0x400582:	call	0x500010
<Block for 0x400490, 9 bytes>
0x400490:	cmp	eax, -1
0x400493:	je	0x400531
<Block for 0x400587, 6 bytes>
0x400587:	cmp	qword ptr [rbp - 0x40], rax
0x40058b:	jb	0x400556
<Block for 0x400499, 39 bytes>
0x400499:	mov	eax, 0x63
0x40049e:	sub	rax, qword ptr [rbp - 0x30]
0x4004a2:	mov	rdx, rax
0x4004a5:	mov	rcx, qword ptr [rbp - 0x38]
0x4004a9:	mov	rax, qword ptr [rbp - 0x30]
0x4004ad:	lea	rsi, [rcx + rax]
0x4004b1:	mov	eax, dword ptr [rbp - 0x48]
0x4004b4:	mov	ecx, 0
0x4004b9:	mov	edi, eax
0x4004bb:	call	0x500040
<Block for 0x400531, 1 bytes>
0x400531:	nop	
<Block for 0x400556, 18 bytes>
0x400556:	mov	rdx, qword ptr [rbp - 0x38]
0x40055a:	mov	rax, qword ptr [rbp - 0x40]
0x40055e:	add	rax, rdx
0x400561:	movzx	eax, byte ptr [rax]
0x400564:	cmp	al, 0x53
0x400566:	jne	0x400576
<Block for 0x40058d, 12 bytes>
0x40058d:	mov	rax, qword ptr [rbp - 0x38]
0x400591:	mov	rdi, rax
0x400594:	call	0x500068
<Block for 0x4004c0, 9 bytes>
0x4004c0:	mov	dword ptr [rbp - 0x44], eax
0x4004c3:	cmp	dword ptr [rbp - 0x44], -1
0x4004c7:	je	0x400532
<Block for 0x400568, 12 bytes>
0x400568:	lea	rdi, [rip + 0x6a]
0x40056f:	call	0x500060
<Block for 0x400576, 17 bytes>
0x400576:	add	qword ptr [rbp - 0x40], 1
0x40057b:	mov	rax, qword ptr [rbp - 0x38]
0x40057f:	mov	rdi, rax
0x400582:	call	0x500010
<Block for 0x4004c9, 6 bytes>
0x4004c9:	cmp	dword ptr [rbp - 0x44], 0
0x4004cd:	je	0x400532
<Block for 0x400574, 2 bytes>
0x400574:	jmp	0x40058d
<Block for 0x4004cf, 40 bytes>
0x4004cf:	mov	eax, dword ptr [rbp - 0x44]
0x4004d2:	movsxd	rdx, eax
0x4004d5:	mov	rax, qword ptr [rbp - 0x30]
0x4004d9:	add	rdx, rax
0x4004dc:	mov	rax, qword ptr [rbp - 0x38]
0x4004e0:	add	rax, rdx
0x4004e3:	mov	byte ptr [rax], 0
0x4004e6:	mov	rax, qword ptr [rbp - 0x38]
0x4004ea:	mov	esi, 0xd
0x4004ef:	mov	rdi, rax
0x4004f2:	call	0x500048
<Block for 0x4004f7, 11 bytes>
0x4004f7:	mov	qword ptr [rbp - 0x28], rax
0x4004fb:	cmp	qword ptr [rbp - 0x28], 0
0x400500:	je	0x400509
<Block for 0x400509, 17 bytes>
0x400509:	mov	rax, qword ptr [rbp - 0x38]
0x40050d:	mov	esi, 0xa
0x400512:	mov	rdi, rax
0x400515:	call	0x500048
<Block for 0x400502, 24 bytes>
0x400502:	mov	rax, qword ptr [rbp - 0x28]
0x400506:	mov	byte ptr [rax], 0
0x400509:	mov	rax, qword ptr [rbp - 0x38]
0x40050d:	mov	esi, 0xa
0x400512:	mov	rdi, rax
0x400515:	call	0x500048
<Block for 0x40051a, 11 bytes>
0x40051a:	mov	qword ptr [rbp - 0x28], rax
0x40051e:	cmp	qword ptr [rbp - 0x28], 0
0x400523:	je	0x400532
<Block for 0x400525, 9 bytes>
0x400525:	mov	rax, qword ptr [rbp - 0x28]
0x400529:	mov	byte ptr [rax], 0
0x40052c:	jmp	0x400532
