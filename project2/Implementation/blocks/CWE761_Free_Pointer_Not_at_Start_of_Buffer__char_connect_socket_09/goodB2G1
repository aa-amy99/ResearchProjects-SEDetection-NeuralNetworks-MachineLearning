<Block for 0x4001d2, 37 bytes>
0x4001d2:	endbr64	
0x4001d6:	push	rbp
0x4001d7:	mov	rbp, rsp
0x4001da:	sub	rsp, 0x50
0x4001de:	mov	rax, qword ptr fs:[0x28]
0x4001e7:	mov	qword ptr [rbp - 8], rax
0x4001eb:	xor	eax, eax
0x4001ed:	mov	edi, 0x64
0x4001f2:	call	0x500000
<Block for 0x4001f7, 11 bytes>
0x4001f7:	mov	qword ptr [rbp - 0x38], rax
0x4001fb:	cmp	qword ptr [rbp - 0x38], 0
0x400200:	jne	0x40020c
<Block for 0x400202, 10 bytes>
0x400202:	mov	edi, 0xffffffff
0x400207:	call	0x500008
<Block for 0x40020c, 26 bytes>
0x40020c:	mov	rax, qword ptr [rbp - 0x38]
0x400210:	mov	byte ptr [rax], 0
0x400213:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40021a:	mov	rax, qword ptr [rbp - 0x38]
0x40021e:	mov	rdi, rax
0x400221:	call	0x500010
<Block for 0x400226, 24 bytes>
0x400226:	mov	qword ptr [rbp - 0x30], rax
0x40022a:	mov	edx, 6
0x40022f:	mov	esi, 1
0x400234:	mov	edi, 2
0x400239:	call	0x500018
<Block for 0x40023e, 13 bytes>
0x40023e:	mov	dword ptr [rbp - 0x48], eax
0x400241:	cmp	dword ptr [rbp - 0x48], -1
0x400245:	je	0x400338
<Block for 0x400338, 3 bytes>
0x400338:	nop	
0x400339:	jmp	0x40033c
<Block for 0x40024b, 22 bytes>
0x40024b:	lea	rax, [rbp - 0x20]
0x40024f:	mov	edx, 0x10
0x400254:	mov	esi, 0
0x400259:	mov	rdi, rax
0x40025c:	call	0x500020
<Block for 0x40033c, 6 bytes>
0x40033c:	cmp	dword ptr [rbp - 0x48], -1
0x400340:	je	0x40034c
<Block for 0x400261, 18 bytes>
0x400261:	mov	word ptr [rbp - 0x20], 2
0x400267:	lea	rdi, [rip + 0x361]
0x40026e:	call	0x500028
<Block for 0x40034c, 10 bytes>
0x40034c:	mov	eax, dword ptr [rip + 0xffd26]
0x400352:	test	eax, eax
0x400354:	je	0x400364
<Block for 0x400342, 10 bytes>
0x400342:	mov	eax, dword ptr [rbp - 0x48]
0x400345:	mov	edi, eax
0x400347:	call	0x500050
<Block for 0x400273, 13 bytes>
0x400273:	mov	dword ptr [rbp - 0x1c], eax
0x400276:	mov	edi, 0x6987
0x40027b:	call	0x500030
<Block for 0x400364, 10 bytes>
0x400364:	mov	qword ptr [rbp - 0x40], 0
0x40036c:	jmp	0x400393
<Block for 0x400356, 12 bytes>
0x400356:	lea	rdi, [rip + 0x28d]
0x40035d:	call	0x500060
<Block for 0x400280, 26 bytes>
0x400280:	mov	word ptr [rbp - 0x1e], ax
0x400284:	lea	rcx, [rbp - 0x20]
0x400288:	mov	eax, dword ptr [rbp - 0x48]
0x40028b:	mov	edx, 0x10
0x400290:	mov	rsi, rcx
0x400293:	mov	edi, eax
0x400295:	call	0x500038
<Block for 0x400393, 12 bytes>
0x400393:	mov	rax, qword ptr [rbp - 0x38]
0x400397:	mov	rdi, rax
0x40039a:	call	0x500010
<Block for 0x400362, 2 bytes>
0x400362:	jmp	0x4003b1
<Block for 0x40029a, 9 bytes>
0x40029a:	cmp	eax, -1
0x40029d:	je	0x40033b
<Block for 0x40039f, 6 bytes>
0x40039f:	cmp	qword ptr [rbp - 0x40], rax
0x4003a3:	jb	0x40036e
<Block for 0x4003b1, 16 bytes>
0x4003b1:	nop	
0x4003b2:	mov	rax, qword ptr [rbp - 8]
0x4003b6:	xor	rax, qword ptr fs:[0x28]
0x4003bf:	je	0x4003c6
<Block for 0x4002a3, 39 bytes>
0x4002a3:	mov	eax, 0x63
0x4002a8:	sub	rax, qword ptr [rbp - 0x30]
0x4002ac:	mov	rdx, rax
0x4002af:	mov	rcx, qword ptr [rbp - 0x38]
0x4002b3:	mov	rax, qword ptr [rbp - 0x30]
0x4002b7:	lea	rsi, [rcx + rax]
0x4002bb:	mov	eax, dword ptr [rbp - 0x48]
0x4002be:	mov	ecx, 0
0x4002c3:	mov	edi, eax
0x4002c5:	call	0x500040
<Block for 0x40033b, 1 bytes>
0x40033b:	nop	
<Block for 0x40036e, 18 bytes>
0x40036e:	mov	rdx, qword ptr [rbp - 0x38]
0x400372:	mov	rax, qword ptr [rbp - 0x40]
0x400376:	add	rax, rdx
0x400379:	movzx	eax, byte ptr [rax]
0x40037c:	cmp	al, 0x53
0x40037e:	jne	0x40038e
<Block for 0x4003a5, 12 bytes>
0x4003a5:	mov	rax, qword ptr [rbp - 0x38]
0x4003a9:	mov	rdi, rax
0x4003ac:	call	0x500068
<Block for 0x4003c6, 2 bytes>
0x4003c6:	leave	
0x4003c7:	ret	
<Block for 0x4003c1, 5 bytes>
0x4003c1:	call	0x500070
<Block for 0x4002ca, 9 bytes>
0x4002ca:	mov	dword ptr [rbp - 0x44], eax
0x4002cd:	cmp	dword ptr [rbp - 0x44], -1
0x4002d1:	je	0x40033c
<Block for 0x400380, 12 bytes>
0x400380:	lea	rdi, [rip + 0x252]
0x400387:	call	0x500060
<Block for 0x40038e, 17 bytes>
0x40038e:	add	qword ptr [rbp - 0x40], 1
0x400393:	mov	rax, qword ptr [rbp - 0x38]
0x400397:	mov	rdi, rax
0x40039a:	call	0x500010
<Block for 0x4002d3, 6 bytes>
0x4002d3:	cmp	dword ptr [rbp - 0x44], 0
0x4002d7:	je	0x40033c
<Block for 0x40038c, 2 bytes>
0x40038c:	jmp	0x4003a5
<Block for 0x4002d9, 40 bytes>
0x4002d9:	mov	eax, dword ptr [rbp - 0x44]
0x4002dc:	movsxd	rdx, eax
0x4002df:	mov	rax, qword ptr [rbp - 0x30]
0x4002e3:	add	rdx, rax
0x4002e6:	mov	rax, qword ptr [rbp - 0x38]
0x4002ea:	add	rax, rdx
0x4002ed:	mov	byte ptr [rax], 0
0x4002f0:	mov	rax, qword ptr [rbp - 0x38]
0x4002f4:	mov	esi, 0xd
0x4002f9:	mov	rdi, rax
0x4002fc:	call	0x500048
<Block for 0x400301, 11 bytes>
0x400301:	mov	qword ptr [rbp - 0x28], rax
0x400305:	cmp	qword ptr [rbp - 0x28], 0
0x40030a:	je	0x400313
<Block for 0x400313, 17 bytes>
0x400313:	mov	rax, qword ptr [rbp - 0x38]
0x400317:	mov	esi, 0xa
0x40031c:	mov	rdi, rax
0x40031f:	call	0x500048
<Block for 0x40030c, 24 bytes>
0x40030c:	mov	rax, qword ptr [rbp - 0x28]
0x400310:	mov	byte ptr [rax], 0
0x400313:	mov	rax, qword ptr [rbp - 0x38]
0x400317:	mov	esi, 0xa
0x40031c:	mov	rdi, rax
0x40031f:	call	0x500048
<Block for 0x400324, 11 bytes>
0x400324:	mov	qword ptr [rbp - 0x28], rax
0x400328:	cmp	qword ptr [rbp - 0x28], 0
0x40032d:	je	0x40033c
<Block for 0x40032f, 9 bytes>
0x40032f:	mov	rax, qword ptr [rbp - 0x28]
0x400333:	mov	byte ptr [rax], 0
0x400336:	jmp	0x40033c
