<Block for 0x400060, 43 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x10
0x40006c:	mov	rax, qword ptr fs:[0x28]
0x400075:	mov	qword ptr [rbp - 8], rax
0x400079:	xor	eax, eax
0x40007b:	mov	byte ptr [rbp - 0xd], 0x20
0x40007f:	lea	rax, [rbp - 0xd]
0x400083:	mov	rdi, rax
0x400086:	call	0x400000
<Block for 0x40008b, 31 bytes>
0x40008b:	mov	byte ptr [rbp - 0xc], 0x78
0x40008f:	movzx	eax, byte ptr [rbp - 0xd]
0x400093:	mov	byte ptr [rbp - 0xb], al
0x400096:	mov	byte ptr [rbp - 0xa], 0x7a
0x40009a:	mov	byte ptr [rbp - 9], 0
0x40009e:	lea	rax, [rbp - 0xc]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500020
<Block for 0x4000aa, 16 bytes>
0x4000aa:	nop	
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	xor	rax, qword ptr fs:[0x28]
0x4000b8:	je	0x4000bf
<Block for 0x4000bf, 2 bytes>
0x4000bf:	leave	
0x4000c0:	ret	
<Block for 0x4000ba, 5 bytes>
0x4000ba:	call	0x500018
