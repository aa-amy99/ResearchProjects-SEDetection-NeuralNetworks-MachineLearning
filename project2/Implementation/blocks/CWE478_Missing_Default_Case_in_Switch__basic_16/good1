<Block for 0x400084, 28 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x10
0x400090:	lea	rax, [rip + 0x85]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	call	0x500000
<Block for 0x4000a0, 55 bytes>
0x4000a0:	mov	edx, eax
0x4000a2:	movsxd	rax, edx
0x4000a5:	imul	rax, rax, 0x55555556
0x4000ac:	shr	rax, 0x20
0x4000b0:	mov	rcx, rax
0x4000b3:	mov	eax, edx
0x4000b5:	sar	eax, 0x1f
0x4000b8:	mov	esi, ecx
0x4000ba:	sub	esi, eax
0x4000bc:	mov	eax, esi
0x4000be:	mov	dword ptr [rbp - 0xc], eax
0x4000c1:	mov	ecx, dword ptr [rbp - 0xc]
0x4000c4:	mov	eax, ecx
0x4000c6:	add	eax, eax
0x4000c8:	add	eax, ecx
0x4000ca:	sub	edx, eax
0x4000cc:	mov	eax, edx
0x4000ce:	mov	dword ptr [rbp - 0xc], eax
0x4000d1:	cmp	dword ptr [rbp - 0xc], 0
0x4000d5:	je	0x4000df
<Block for 0x4000df, 13 bytes>
0x4000df:	lea	rax, [rip + 0x4f]
0x4000e6:	mov	qword ptr [rbp - 8], rax
0x4000ea:	jmp	0x4000f8
<Block for 0x4000d7, 6 bytes>
0x4000d7:	cmp	dword ptr [rbp - 0xc], 1
0x4000db:	je	0x4000ec
<Block for 0x4000f8, 12 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 8]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500008
<Block for 0x4000ec, 24 bytes>
0x4000ec:	lea	rax, [rip + 0x44]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	nop	
0x4000f8:	mov	rax, qword ptr [rbp - 8]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500008
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x400105
<Block for 0x400104, 1 bytes>
0x400104:	nop	
<Block for 0x400105, 2 bytes>
0x400105:	leave	
0x400106:	ret	
