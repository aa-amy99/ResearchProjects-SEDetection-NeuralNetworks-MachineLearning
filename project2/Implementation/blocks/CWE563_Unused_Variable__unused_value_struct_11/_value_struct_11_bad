<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400037
<Block for 0x400037, 10 bytes>
0x400037:	mov	eax, 0
0x40003c:	call	0x500000
<Block for 0x400029, 24 bytes>
0x400029:	mov	dword ptr [rbp - 0x10], 0
0x400030:	mov	dword ptr [rbp - 0xc], 0
0x400037:	mov	eax, 0
0x40003c:	call	0x500000
<Block for 0x400041, 4 bytes>
0x400041:	test	eax, eax
0x400043:	je	0x40005f
<Block for 0x40005f, 16 bytes>
0x40005f:	nop	
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	xor	rax, qword ptr fs:[0x28]
0x40006d:	je	0x400074
<Block for 0x400045, 26 bytes>
0x400045:	mov	dword ptr [rbp - 0x10], 1
0x40004c:	mov	dword ptr [rbp - 0xc], 1
0x400053:	lea	rax, [rbp - 0x10]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500008
<Block for 0x400074, 2 bytes>
0x400074:	leave	
0x400075:	ret	
<Block for 0x40006f, 5 bytes>
0x40006f:	call	0x500010
