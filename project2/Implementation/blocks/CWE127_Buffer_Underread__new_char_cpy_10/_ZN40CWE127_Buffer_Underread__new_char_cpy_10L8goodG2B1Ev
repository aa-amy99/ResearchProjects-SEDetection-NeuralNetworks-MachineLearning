<Block for 0x4000d9, 51 bytes>
0x4000d9:	endbr64	
0x4000dd:	push	rbp
0x4000de:	mov	rbp, rsp
0x4000e1:	sub	rsp, 0xe0
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	qword ptr [rbp - 0xe0], 0
0x400102:	mov	eax, dword ptr [rip + 0xfff28]
0x400108:	test	eax, eax
0x40010a:	je	0x40011a
<Block for 0x40011a, 10 bytes>
0x40011a:	mov	edi, 0x64
0x40011f:	call	0x500008
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rdi, [rip + 0x193]
0x400113:	call	0x500020
<Block for 0x400124, 32 bytes>
0x400124:	mov	qword ptr [rbp - 0xd8], rax
0x40012b:	mov	rax, qword ptr [rbp - 0xd8]
0x400132:	mov	edx, 0x63
0x400137:	mov	esi, 0x41
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500010
<Block for 0x400118, 2 bytes>
0x400118:	jmp	0x400160
<Block for 0x400144, 53 bytes>
0x400144:	mov	rax, qword ptr [rbp - 0xd8]
0x40014b:	add	rax, 0x63
0x40014f:	mov	byte ptr [rax], 0
0x400152:	mov	rax, qword ptr [rbp - 0xd8]
0x400159:	mov	qword ptr [rbp - 0xe0], rax
0x400160:	lea	rax, [rbp - 0xd0]
0x400167:	mov	edx, 0xc7
0x40016c:	mov	esi, 0x43
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400160, 25 bytes>
0x400160:	lea	rax, [rbp - 0xd0]
0x400167:	mov	edx, 0xc7
0x40016c:	mov	esi, 0x43
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400179, 29 bytes>
0x400179:	mov	byte ptr [rbp - 9], 0
0x40017d:	mov	rdx, qword ptr [rbp - 0xe0]
0x400184:	lea	rax, [rbp - 0xd0]
0x40018b:	mov	rsi, rdx
0x40018e:	mov	rdi, rax
0x400191:	call	0x500018
<Block for 0x400196, 15 bytes>
0x400196:	lea	rax, [rbp - 0xd0]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500020
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x4001ba, 2 bytes>
0x4001ba:	leave	
0x4001bb:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500028
