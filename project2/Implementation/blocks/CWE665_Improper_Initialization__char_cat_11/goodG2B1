<Block for 0x40008c, 54 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0xf0
0x40009b:	mov	rax, qword ptr fs:[0x28]
0x4000a4:	mov	qword ptr [rbp - 8], rax
0x4000a8:	xor	eax, eax
0x4000aa:	lea	rax, [rbp - 0xe0]
0x4000b1:	mov	qword ptr [rbp - 0xe8], rax
0x4000b8:	mov	eax, 0
0x4000bd:	call	0x500028
<Block for 0x4000c2, 4 bytes>
0x4000c2:	test	eax, eax
0x4000c4:	je	0x4000d4
<Block for 0x4000d4, 32 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0xe8]
0x4000db:	mov	byte ptr [rax], 0
0x4000de:	lea	rax, [rbp - 0x70]
0x4000e2:	mov	edx, 0x63
0x4000e7:	mov	esi, 0x43
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500008
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rdi, [rip + 0x120]
0x4000cd:	call	0x500018
<Block for 0x4000f4, 26 bytes>
0x4000f4:	mov	byte ptr [rbp - 0xd], 0
0x4000f8:	lea	rdx, [rbp - 0x70]
0x4000fc:	mov	rax, qword ptr [rbp - 0xe8]
0x400103:	mov	rsi, rdx
0x400106:	mov	rdi, rax
0x400109:	call	0x500010
<Block for 0x4000d2, 2 bytes>
0x4000d2:	jmp	0x4000de
<Block for 0x40010e, 15 bytes>
0x40010e:	mov	rax, qword ptr [rbp - 0xe8]
0x400115:	mov	rdi, rax
0x400118:	call	0x500018
<Block for 0x4000de, 22 bytes>
0x4000de:	lea	rax, [rbp - 0x70]
0x4000e2:	mov	edx, 0x63
0x4000e7:	mov	esi, 0x43
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500008
<Block for 0x40011d, 16 bytes>
0x40011d:	nop	
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	xor	rax, qword ptr fs:[0x28]
0x40012b:	je	0x400132
<Block for 0x400132, 2 bytes>
0x400132:	leave	
0x400133:	ret	
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500020
