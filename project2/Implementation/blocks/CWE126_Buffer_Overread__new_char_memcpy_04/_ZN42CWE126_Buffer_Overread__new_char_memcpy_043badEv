<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	edi, 0x32
0x400028:	call	0x500000
<Block for 0x40002d, 26 bytes>
0x40002d:	mov	qword ptr [rbp - 0x78], rax
0x400031:	mov	rax, qword ptr [rbp - 0x78]
0x400035:	mov	edx, 0x31
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x400047, 33 bytes>
0x400047:	mov	rax, qword ptr [rbp - 0x78]
0x40004b:	add	rax, 0x31
0x40004f:	mov	byte ptr [rax], 0
0x400052:	lea	rax, [rbp - 0x70]
0x400056:	mov	edx, 0x63
0x40005b:	mov	esi, 0x43
0x400060:	mov	rdi, rax
0x400063:	call	0x500008
<Block for 0x400068, 16 bytes>
0x400068:	mov	byte ptr [rbp - 0xd], 0
0x40006c:	lea	rax, [rbp - 0x70]
0x400070:	mov	rdi, rax
0x400073:	call	0x500010
<Block for 0x400078, 22 bytes>
0x400078:	mov	rdx, rax
0x40007b:	mov	rcx, qword ptr [rbp - 0x78]
0x40007f:	lea	rax, [rbp - 0x70]
0x400083:	mov	rsi, rcx
0x400086:	mov	rdi, rax
0x400089:	call	0x500018
<Block for 0x40008e, 16 bytes>
0x40008e:	mov	byte ptr [rbp - 0xd], 0
0x400092:	lea	rax, [rbp - 0x70]
0x400096:	mov	rdi, rax
0x400099:	call	0x500020
<Block for 0x40009e, 7 bytes>
0x40009e:	cmp	qword ptr [rbp - 0x78], 0
0x4000a3:	je	0x4000b1
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000a5, 12 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 0x78]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500028
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500030
