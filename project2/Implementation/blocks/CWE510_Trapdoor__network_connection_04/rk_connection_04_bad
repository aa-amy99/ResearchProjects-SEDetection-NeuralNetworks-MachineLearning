<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 1
0x400020:	test	eax, eax
0x400022:	je	0x4000b1
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x400028, 27 bytes>
0x400028:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40002f:	mov	edx, 6
0x400034:	mov	esi, 1
0x400039:	mov	edi, 2
0x40003e:	call	0x500000
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500030
<Block for 0x400043, 9 bytes>
0x400043:	mov	dword ptr [rbp - 0x24], eax
0x400046:	cmp	dword ptr [rbp - 0x24], -1
0x40004a:	je	0x4000a0
<Block for 0x40004c, 22 bytes>
0x40004c:	lea	rax, [rbp - 0x20]
0x400050:	mov	edx, 0x10
0x400055:	mov	esi, 0
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500008
<Block for 0x4000a0, 1 bytes>
0x4000a0:	nop	
<Block for 0x400062, 18 bytes>
0x400062:	mov	word ptr [rbp - 0x20], 2
0x400068:	lea	rdi, [rip + 0x5d]
0x40006f:	call	0x500010
<Block for 0x4000a1, 6 bytes>
0x4000a1:	cmp	dword ptr [rbp - 0x24], -1
0x4000a5:	je	0x4000b1
<Block for 0x400074, 13 bytes>
0x400074:	mov	dword ptr [rbp - 0x1c], eax
0x400077:	mov	edi, 0x50
0x40007c:	call	0x500018
<Block for 0x4000a7, 10 bytes>
0x4000a7:	mov	eax, dword ptr [rbp - 0x24]
0x4000aa:	mov	edi, eax
0x4000ac:	call	0x500028
<Block for 0x400081, 26 bytes>
0x400081:	mov	word ptr [rbp - 0x1e], ax
0x400085:	lea	rcx, [rbp - 0x20]
0x400089:	mov	eax, dword ptr [rbp - 0x24]
0x40008c:	mov	edx, 0x10
0x400091:	mov	rsi, rcx
0x400094:	mov	edi, eax
0x400096:	call	0x500020
<Block for 0x40009b, 5 bytes>
0x40009b:	cmp	eax, -1
0x40009e:	jmp	0x4000a1
