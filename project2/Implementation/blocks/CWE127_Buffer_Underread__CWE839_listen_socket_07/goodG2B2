<Block for 0x4005ef, 45 bytes>
0x4005ef:	endbr64	
0x4005f3:	push	rbp
0x4005f4:	mov	rbp, rsp
0x4005f7:	sub	rsp, 0x40
0x4005fb:	mov	rax, qword ptr fs:[0x28]
0x400604:	mov	qword ptr [rbp - 8], rax
0x400608:	xor	eax, eax
0x40060a:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400611:	mov	eax, dword ptr [rip + 0xad]
0x400617:	cmp	eax, 5
0x40061a:	jne	0x400623
<Block for 0x40061c, 18 bytes>
0x40061c:	mov	dword ptr [rbp - 0x34], 7
0x400623:	mov	eax, dword ptr [rip + 0x9b]
0x400629:	cmp	eax, 5
0x40062c:	jne	0x40067a
<Block for 0x400623, 11 bytes>
0x400623:	mov	eax, dword ptr [rip + 0x9b]
0x400629:	cmp	eax, 5
0x40062c:	jne	0x40067a
<Block for 0x40062e, 46 bytes>
0x40062e:	mov	qword ptr [rbp - 0x30], 0
0x400636:	mov	qword ptr [rbp - 0x28], 0
0x40063e:	mov	qword ptr [rbp - 0x20], 0
0x400646:	mov	qword ptr [rbp - 0x18], 0
0x40064e:	mov	qword ptr [rbp - 0x10], 0
0x400656:	cmp	dword ptr [rbp - 0x34], 9
0x40065a:	jg	0x40066e
<Block for 0x40067a, 16 bytes>
0x40067a:	nop	
0x40067b:	mov	rax, qword ptr [rbp - 8]
0x40067f:	xor	rax, qword ptr fs:[0x28]
0x400688:	je	0x40068f
<Block for 0x40065c, 16 bytes>
0x40065c:	mov	eax, dword ptr [rbp - 0x34]
0x40065f:	cdqe	
0x400661:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400665:	mov	edi, eax
0x400667:	call	0x500048
<Block for 0x40066e, 12 bytes>
0x40066e:	lea	rdi, [rip + 0x53]
0x400675:	call	0x500050
<Block for 0x40068f, 2 bytes>
0x40068f:	leave	
0x400690:	ret	
<Block for 0x40068a, 5 bytes>
0x40068a:	call	0x500058
<Block for 0x40066c, 2 bytes>
0x40066c:	jmp	0x40067a
