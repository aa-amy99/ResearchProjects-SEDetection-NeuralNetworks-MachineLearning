<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, dword ptr [rip + 0x27d]
0x40002f:	cmp	eax, 5
0x400032:	jne	0x40007e
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x64
0x400039:	call	0x500000
<Block for 0x40007e, 25 bytes>
0x40007e:	lea	rax, [rbp - 0xd0]
0x400085:	mov	edx, 0xc7
0x40008a:	mov	esi, 0x43
0x40008f:	mov	rdi, rax
0x400092:	call	0x500008
<Block for 0x40003e, 32 bytes>
0x40003e:	mov	qword ptr [rbp - 0xd8], rax
0x400045:	mov	rax, qword ptr [rbp - 0xd8]
0x40004c:	mov	edx, 0x63
0x400051:	mov	esi, 0x41
0x400056:	mov	rdi, rax
0x400059:	call	0x500008
<Block for 0x400097, 29 bytes>
0x400097:	mov	byte ptr [rbp - 9], 0
0x40009b:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000a2:	lea	rax, [rbp - 0xd0]
0x4000a9:	mov	rsi, rdx
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500010
<Block for 0x40005e, 57 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0xd8]
0x400065:	add	rax, 0x63
0x400069:	mov	byte ptr [rax], 0
0x40006c:	mov	rax, qword ptr [rbp - 0xd8]
0x400073:	sub	rax, 8
0x400077:	mov	qword ptr [rbp - 0xe0], rax
0x40007e:	lea	rax, [rbp - 0xd0]
0x400085:	mov	edx, 0xc7
0x40008a:	mov	esi, 0x43
0x40008f:	mov	rdi, rax
0x400092:	call	0x500008
<Block for 0x4000b4, 15 bytes>
0x4000b4:	lea	rax, [rbp - 0xd0]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500018
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500020
