<Block for 0x4000f6, 22 bytes>
0x4000f6:	endbr64	
0x4000fa:	push	rbp
0x4000fb:	mov	rbp, rsp
0x4000fe:	sub	rsp, 0x10
0x400102:	mov	eax, 5
0x400107:	cmp	eax, 5
0x40010a:	jne	0x40016e
<Block for 0x40010c, 5 bytes>
0x40010c:	call	0x500000
<Block for 0x40016e, 3 bytes>
0x40016e:	nop	
0x40016f:	leave	
0x400170:	ret	
<Block for 0x400111, 55 bytes>
0x400111:	mov	edx, eax
0x400113:	movsxd	rax, edx
0x400116:	imul	rax, rax, 0x55555556
0x40011d:	shr	rax, 0x20
0x400121:	mov	rcx, rax
0x400124:	mov	eax, edx
0x400126:	sar	eax, 0x1f
0x400129:	mov	esi, ecx
0x40012b:	sub	esi, eax
0x40012d:	mov	eax, esi
0x40012f:	mov	dword ptr [rbp - 4], eax
0x400132:	mov	ecx, dword ptr [rbp - 4]
0x400135:	mov	eax, ecx
0x400137:	add	eax, eax
0x400139:	add	eax, ecx
0x40013b:	sub	edx, eax
0x40013d:	mov	eax, edx
0x40013f:	mov	dword ptr [rbp - 4], eax
0x400142:	cmp	dword ptr [rbp - 4], 0
0x400146:	jne	0x400156
<Block for 0x400148, 12 bytes>
0x400148:	lea	rdi, [rip + 0x85]
0x40014f:	call	0x500008
<Block for 0x400156, 12 bytes>
0x400156:	lea	rdi, [rip + 0x37]
0x40015d:	call	0x500008
<Block for 0x400154, 2 bytes>
0x400154:	jmp	0x400162
<Block for 0x400162, 12 bytes>
0x400162:	lea	rdi, [rip + 0x83]
0x400169:	call	0x500008
