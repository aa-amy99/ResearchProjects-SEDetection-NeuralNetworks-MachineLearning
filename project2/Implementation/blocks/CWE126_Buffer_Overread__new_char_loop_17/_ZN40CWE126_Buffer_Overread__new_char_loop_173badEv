<Block for 0x400000, 60 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	dword ptr [rbp - 0x8c], 0
0x400033:	cmp	dword ptr [rbp - 0x8c], 0
0x40003a:	jg	0x40007d
<Block for 0x40003c, 10 bytes>
0x40003c:	mov	edi, 0x32
0x400041:	call	0x500000
<Block for 0x40007d, 22 bytes>
0x40007d:	lea	rax, [rbp - 0x70]
0x400081:	mov	edx, 0x63
0x400086:	mov	esi, 0x43
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500008
<Block for 0x400046, 32 bytes>
0x400046:	mov	qword ptr [rbp - 0x88], rax
0x40004d:	mov	rax, qword ptr [rbp - 0x88]
0x400054:	mov	edx, 0x31
0x400059:	mov	esi, 0x41
0x40005e:	mov	rdi, rax
0x400061:	call	0x500008
<Block for 0x400093, 16 bytes>
0x400093:	mov	byte ptr [rbp - 0xd], 0
0x400097:	lea	rax, [rbp - 0x70]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500010
<Block for 0x400066, 23 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0x88]
0x40006d:	add	rax, 0x31
0x400071:	mov	byte ptr [rax], 0
0x400074:	add	dword ptr [rbp - 0x8c], 1
0x40007b:	jmp	0x400033
<Block for 0x4000a3, 22 bytes>
0x4000a3:	mov	qword ptr [rbp - 0x78], rax
0x4000a7:	mov	qword ptr [rbp - 0x80], 0
0x4000af:	mov	rax, qword ptr [rbp - 0x80]
0x4000b3:	cmp	rax, qword ptr [rbp - 0x78]
0x4000b7:	jae	0x4000de
<Block for 0x400033, 9 bytes>
0x400033:	cmp	dword ptr [rbp - 0x8c], 0
0x40003a:	jg	0x40007d
<Block for 0x4000b9, 37 bytes>
0x4000b9:	mov	rdx, qword ptr [rbp - 0x88]
0x4000c0:	mov	rax, qword ptr [rbp - 0x80]
0x4000c4:	add	rax, rdx
0x4000c7:	movzx	eax, byte ptr [rax]
0x4000ca:	lea	rcx, [rbp - 0x70]
0x4000ce:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d2:	add	rdx, rcx
0x4000d5:	mov	byte ptr [rdx], al
0x4000d7:	add	qword ptr [rbp - 0x80], 1
0x4000dc:	jmp	0x4000af
<Block for 0x4000de, 16 bytes>
0x4000de:	mov	byte ptr [rbp - 0xd], 0
0x4000e2:	lea	rax, [rbp - 0x70]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500018
<Block for 0x4000af, 10 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 0x80]
0x4000b3:	cmp	rax, qword ptr [rbp - 0x78]
0x4000b7:	jae	0x4000de
<Block for 0x4000ee, 10 bytes>
0x4000ee:	cmp	qword ptr [rbp - 0x88], 0
0x4000f6:	je	0x400107
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x4000f8, 15 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 0x88]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500020
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500028
