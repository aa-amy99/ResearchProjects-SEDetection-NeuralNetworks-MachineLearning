<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x400093
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 0x320
0x400024:	call	0x500008
<Block for 0x400093, 11 bytes>
0x400093:	mov	eax, dword ptr [rip + 0xfff67]
0x400099:	cmp	eax, 5
0x40009c:	jne	0x4000aa
<Block for 0x400029, 11 bytes>
0x400029:	mov	qword ptr [rbp - 0x10], rax
0x40002d:	cmp	qword ptr [rbp - 0x10], 0
0x400032:	jne	0x40003e
<Block for 0x40009e, 12 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0x10]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500020
<Block for 0x4000aa, 3 bytes>
0x4000aa:	nop	
0x4000ab:	leave	
0x4000ac:	ret	
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0xffffffff
0x400039:	call	0x500010
<Block for 0x40003e, 10 bytes>
0x40003e:	mov	qword ptr [rbp - 8], 0
0x400046:	jmp	0x400080
<Block for 0x400080, 7 bytes>
0x400080:	cmp	qword ptr [rbp - 8], 0x63
0x400085:	jbe	0x400048
<Block for 0x400048, 63 bytes>
0x400048:	mov	rax, qword ptr [rbp - 8]
0x40004c:	lea	rdx, [rax*8]
0x400054:	mov	rax, qword ptr [rbp - 0x10]
0x400058:	add	rax, rdx
0x40005b:	mov	dword ptr [rax], 1
0x400061:	mov	rax, qword ptr [rbp - 8]
0x400065:	lea	rdx, [rax*8]
0x40006d:	mov	rax, qword ptr [rbp - 0x10]
0x400071:	add	rax, rdx
0x400074:	mov	dword ptr [rax + 4], 2
0x40007b:	add	qword ptr [rbp - 8], 1
0x400080:	cmp	qword ptr [rbp - 8], 0x63
0x400085:	jbe	0x400048
<Block for 0x400087, 12 bytes>
0x400087:	mov	rax, qword ptr [rbp - 0x10]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500018
