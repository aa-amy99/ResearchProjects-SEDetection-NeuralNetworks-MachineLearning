<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x120]
0x400025:	mov	edx, 0x31
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 32 bytes>
0x400037:	mov	byte ptr [rbp - 0xef], 0
0x40003e:	lea	rax, [rbp - 0xe0]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400057, 14 bytes>
0x400057:	mov	byte ptr [rbp - 0x7d], 0
0x40005b:	mov	eax, 0
0x400060:	call	0x500008
<Block for 0x400065, 4 bytes>
0x400065:	test	eax, eax
0x400067:	je	0x400077
<Block for 0x400077, 22 bytes>
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	edx, 0x63
0x400080:	mov	esi, 0x43
0x400085:	mov	rdi, rax
0x400088:	call	0x500000
<Block for 0x400069, 36 bytes>
0x400069:	lea	rax, [rbp - 0x120]
0x400070:	mov	qword ptr [rbp - 0x138], rax
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	edx, 0x63
0x400080:	mov	esi, 0x43
0x400085:	mov	rdi, rax
0x400088:	call	0x500000
<Block for 0x40008d, 16 bytes>
0x40008d:	mov	byte ptr [rbp - 0xd], 0
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	rdi, rax
0x400098:	call	0x500010
<Block for 0x40009d, 20 bytes>
0x40009d:	mov	qword ptr [rbp - 0x128], rax
0x4000a4:	mov	qword ptr [rbp - 0x130], 0
0x4000af:	jmp	0x4000dd
<Block for 0x4000dd, 16 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x130]
0x4000e4:	cmp	rax, qword ptr [rbp - 0x128]
0x4000eb:	jb	0x4000b1
<Block for 0x4000b1, 60 bytes>
0x4000b1:	mov	rdx, qword ptr [rbp - 0x138]
0x4000b8:	mov	rax, qword ptr [rbp - 0x130]
0x4000bf:	add	rax, rdx
0x4000c2:	movzx	eax, byte ptr [rax]
0x4000c5:	lea	rcx, [rbp - 0x70]
0x4000c9:	mov	rdx, qword ptr [rbp - 0x130]
0x4000d0:	add	rdx, rcx
0x4000d3:	mov	byte ptr [rdx], al
0x4000d5:	add	qword ptr [rbp - 0x130], 1
0x4000dd:	mov	rax, qword ptr [rbp - 0x130]
0x4000e4:	cmp	rax, qword ptr [rbp - 0x128]
0x4000eb:	jb	0x4000b1
<Block for 0x4000ed, 16 bytes>
0x4000ed:	mov	byte ptr [rbp - 0xd], 0
0x4000f1:	lea	rax, [rbp - 0x70]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500018
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500020
