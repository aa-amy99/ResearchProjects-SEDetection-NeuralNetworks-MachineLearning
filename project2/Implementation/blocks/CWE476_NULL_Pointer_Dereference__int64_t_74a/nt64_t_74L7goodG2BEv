<Block for 0x40012d, 54 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	rbx
0x400136:	sub	rsp, 0x88
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 0x18], rax
0x40014a:	xor	eax, eax
0x40014c:	mov	qword ptr [rbp - 0x90], 5
0x400157:	lea	rax, [rbp - 0x80]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x4004da
<Block for 0x400163, 40 bytes>
0x400163:	lea	rax, [rbp - 0x90]
0x40016a:	mov	qword ptr [rbp - 0x88], rax
0x400171:	mov	dword ptr [rbp - 0x50], 0
0x400178:	lea	rdx, [rbp - 0x50]
0x40017c:	lea	rax, [rbp - 0x80]
0x400180:	mov	rsi, rdx
0x400183:	mov	rdi, rax
0x400186:	call	0x4006a2
<Block for 0x40018b, 36 bytes>
0x40018b:	mov	rdx, qword ptr [rbp - 0x88]
0x400192:	mov	qword ptr [rax], rdx
0x400195:	mov	dword ptr [rbp - 0x50], 1
0x40019c:	lea	rdx, [rbp - 0x50]
0x4001a0:	lea	rax, [rbp - 0x80]
0x4001a4:	mov	rsi, rdx
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x4006a2
<Block for 0x4001af, 36 bytes>
0x4001af:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b6:	mov	qword ptr [rax], rdx
0x4001b9:	mov	dword ptr [rbp - 0x50], 2
0x4001c0:	lea	rdx, [rbp - 0x50]
0x4001c4:	lea	rax, [rbp - 0x80]
0x4001c8:	mov	rsi, rdx
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x4006a2
<Block for 0x4001d3, 29 bytes>
0x4001d3:	mov	rdx, qword ptr [rbp - 0x88]
0x4001da:	mov	qword ptr [rax], rdx
0x4001dd:	lea	rdx, [rbp - 0x80]
0x4001e1:	lea	rax, [rbp - 0x50]
0x4001e5:	mov	rsi, rdx
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x40051a
<Block for 0x4001f0, 12 bytes>
0x4001f0:	lea	rax, [rbp - 0x50]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x500018
<Block for 0x4001fc, 12 bytes>
0x4001fc:	lea	rax, [rbp - 0x50]
0x400200:	mov	rdi, rax
0x400203:	call	0x4004fa
<Block for 0x400208, 12 bytes>
0x400208:	lea	rax, [rbp - 0x80]
0x40020c:	mov	rdi, rax
0x40020f:	call	0x4004fa
<Block for 0x400214, 16 bytes>
0x400214:	nop	
0x400215:	mov	rax, qword ptr [rbp - 0x18]
0x400219:	xor	rax, qword ptr fs:[0x28]
0x400222:	je	0x40025e
<Block for 0x40025e, 10 bytes>
0x40025e:	add	rsp, 0x88
0x400265:	pop	rbx
0x400266:	pop	rbp
0x400267:	ret	
<Block for 0x400224, 2 bytes>
0x400224:	jmp	0x400259
<Block for 0x400259, 5 bytes>
0x400259:	call	0x500010
