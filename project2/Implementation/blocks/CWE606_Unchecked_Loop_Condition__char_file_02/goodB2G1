<Block for 0x4001a8, 159 bytes>
0x4001a8:	endbr64	
0x4001ac:	push	rbp
0x4001ad:	mov	rbp, rsp
0x4001b0:	sub	rsp, 0xa0
0x4001b7:	mov	rax, qword ptr fs:[0x28]
0x4001c0:	mov	qword ptr [rbp - 8], rax
0x4001c4:	xor	eax, eax
0x4001c6:	mov	qword ptr [rbp - 0x70], 0
0x4001ce:	mov	qword ptr [rbp - 0x68], 0
0x4001d6:	mov	qword ptr [rbp - 0x60], 0
0x4001de:	mov	qword ptr [rbp - 0x58], 0
0x4001e6:	mov	qword ptr [rbp - 0x50], 0
0x4001ee:	mov	qword ptr [rbp - 0x48], 0
0x4001f6:	mov	qword ptr [rbp - 0x40], 0
0x4001fe:	mov	qword ptr [rbp - 0x38], 0
0x400206:	mov	qword ptr [rbp - 0x30], 0
0x40020e:	mov	qword ptr [rbp - 0x28], 0
0x400216:	mov	qword ptr [rbp - 0x20], 0
0x40021e:	mov	qword ptr [rbp - 0x18], 0
0x400226:	mov	dword ptr [rbp - 0x10], 0
0x40022d:	lea	rax, [rbp - 0x70]
0x400231:	mov	qword ptr [rbp - 0x88], rax
0x400238:	mov	rax, qword ptr [rbp - 0x88]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500000
<Block for 0x400247, 19 bytes>
0x400247:	mov	qword ptr [rbp - 0x80], rax
0x40024b:	mov	eax, 0x64
0x400250:	sub	rax, qword ptr [rbp - 0x80]
0x400254:	cmp	rax, 1
0x400258:	jbe	0x4002d3
<Block for 0x4002d3, 34 bytes>
0x4002d3:	lea	rdx, [rbp - 0x94]
0x4002da:	mov	rax, qword ptr [rbp - 0x88]
0x4002e1:	lea	rsi, [rip + 0x480]
0x4002e8:	mov	rdi, rax
0x4002eb:	mov	eax, 0
0x4002f0:	call	0x500028
<Block for 0x40025a, 19 bytes>
0x40025a:	lea	rsi, [rip + 0x4e8]
0x400261:	lea	rdi, [rip + 0x4e3]
0x400268:	call	0x500008
<Block for 0x4002f5, 5 bytes>
0x4002f5:	cmp	eax, 1
0x4002f8:	jne	0x400346
<Block for 0x40026d, 11 bytes>
0x40026d:	mov	qword ptr [rbp - 0x78], rax
0x400271:	cmp	qword ptr [rbp - 0x78], 0
0x400276:	je	0x4002d3
<Block for 0x4002fa, 13 bytes>
0x4002fa:	mov	eax, dword ptr [rbp - 0x94]
0x400300:	cmp	eax, 0x270f
0x400305:	jg	0x400346
<Block for 0x400346, 16 bytes>
0x400346:	nop	
0x400347:	mov	rax, qword ptr [rbp - 8]
0x40034b:	xor	rax, qword ptr fs:[0x28]
0x400354:	je	0x40035b
<Block for 0x400278, 45 bytes>
0x400278:	mov	rax, qword ptr [rbp - 0x80]
0x40027c:	mov	edx, 0x64
0x400281:	sub	edx, eax
0x400283:	mov	eax, edx
0x400285:	mov	esi, eax
0x400287:	mov	rdx, qword ptr [rbp - 0x88]
0x40028e:	mov	rax, qword ptr [rbp - 0x80]
0x400292:	lea	rcx, [rdx + rax]
0x400296:	mov	rax, qword ptr [rbp - 0x78]
0x40029a:	mov	rdx, rax
0x40029d:	mov	rdi, rcx
0x4002a0:	call	0x500010
<Block for 0x400307, 22 bytes>
0x400307:	mov	dword ptr [rbp - 0x8c], 0
0x400311:	mov	dword ptr [rbp - 0x90], 0
0x40031b:	jmp	0x40032b
<Block for 0x40035b, 2 bytes>
0x40035b:	leave	
0x40035c:	ret	
<Block for 0x400356, 5 bytes>
0x400356:	call	0x500038
<Block for 0x4002a5, 5 bytes>
0x4002a5:	test	rax, rax
0x4002a8:	jne	0x4002c7
<Block for 0x40032b, 14 bytes>
0x40032b:	mov	eax, dword ptr [rbp - 0x94]
0x400331:	cmp	dword ptr [rbp - 0x90], eax
0x400337:	jl	0x40031d
<Block for 0x4002aa, 12 bytes>
0x4002aa:	lea	rdi, [rip + 0x4a8]
0x4002b1:	call	0x500018
<Block for 0x4002c7, 12 bytes>
0x4002c7:	mov	rax, qword ptr [rbp - 0x78]
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x500020
<Block for 0x40031d, 28 bytes>
0x40031d:	add	dword ptr [rbp - 0x8c], 1
0x400324:	add	dword ptr [rbp - 0x90], 1
0x40032b:	mov	eax, dword ptr [rbp - 0x94]
0x400331:	cmp	dword ptr [rbp - 0x90], eax
0x400337:	jl	0x40031d
<Block for 0x400339, 13 bytes>
0x400339:	mov	eax, dword ptr [rbp - 0x8c]
0x40033f:	mov	edi, eax
0x400341:	call	0x500030
<Block for 0x4002b6, 29 bytes>
0x4002b6:	mov	rdx, qword ptr [rbp - 0x88]
0x4002bd:	mov	rax, qword ptr [rbp - 0x80]
0x4002c1:	add	rax, rdx
0x4002c4:	mov	byte ptr [rax], 0
0x4002c7:	mov	rax, qword ptr [rbp - 0x78]
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x500020
