<Block for 0x40035d, 159 bytes>
0x40035d:	endbr64	
0x400361:	push	rbp
0x400362:	mov	rbp, rsp
0x400365:	sub	rsp, 0xa0
0x40036c:	mov	rax, qword ptr fs:[0x28]
0x400375:	mov	qword ptr [rbp - 8], rax
0x400379:	xor	eax, eax
0x40037b:	mov	qword ptr [rbp - 0x70], 0
0x400383:	mov	qword ptr [rbp - 0x68], 0
0x40038b:	mov	qword ptr [rbp - 0x60], 0
0x400393:	mov	qword ptr [rbp - 0x58], 0
0x40039b:	mov	qword ptr [rbp - 0x50], 0
0x4003a3:	mov	qword ptr [rbp - 0x48], 0
0x4003ab:	mov	qword ptr [rbp - 0x40], 0
0x4003b3:	mov	qword ptr [rbp - 0x38], 0
0x4003bb:	mov	qword ptr [rbp - 0x30], 0
0x4003c3:	mov	qword ptr [rbp - 0x28], 0
0x4003cb:	mov	qword ptr [rbp - 0x20], 0
0x4003d3:	mov	qword ptr [rbp - 0x18], 0
0x4003db:	mov	dword ptr [rbp - 0x10], 0
0x4003e2:	lea	rax, [rbp - 0x70]
0x4003e6:	mov	qword ptr [rbp - 0x88], rax
0x4003ed:	mov	rax, qword ptr [rbp - 0x88]
0x4003f4:	mov	rdi, rax
0x4003f7:	call	0x500000
<Block for 0x4003fc, 19 bytes>
0x4003fc:	mov	qword ptr [rbp - 0x80], rax
0x400400:	mov	eax, 0x64
0x400405:	sub	rax, qword ptr [rbp - 0x80]
0x400409:	cmp	rax, 1
0x40040d:	jbe	0x400488
<Block for 0x400488, 34 bytes>
0x400488:	lea	rdx, [rbp - 0x94]
0x40048f:	mov	rax, qword ptr [rbp - 0x88]
0x400496:	lea	rsi, [rip + 0x2cb]
0x40049d:	mov	rdi, rax
0x4004a0:	mov	eax, 0
0x4004a5:	call	0x500028
<Block for 0x40040f, 19 bytes>
0x40040f:	lea	rsi, [rip + 0x333]
0x400416:	lea	rdi, [rip + 0x32e]
0x40041d:	call	0x500008
<Block for 0x4004aa, 5 bytes>
0x4004aa:	cmp	eax, 1
0x4004ad:	jne	0x4004fb
<Block for 0x400422, 11 bytes>
0x400422:	mov	qword ptr [rbp - 0x78], rax
0x400426:	cmp	qword ptr [rbp - 0x78], 0
0x40042b:	je	0x400488
<Block for 0x4004af, 13 bytes>
0x4004af:	mov	eax, dword ptr [rbp - 0x94]
0x4004b5:	cmp	eax, 0x270f
0x4004ba:	jg	0x4004fb
<Block for 0x4004fb, 16 bytes>
0x4004fb:	nop	
0x4004fc:	mov	rax, qword ptr [rbp - 8]
0x400500:	xor	rax, qword ptr fs:[0x28]
0x400509:	je	0x400510
<Block for 0x40042d, 45 bytes>
0x40042d:	mov	rax, qword ptr [rbp - 0x80]
0x400431:	mov	edx, 0x64
0x400436:	sub	edx, eax
0x400438:	mov	eax, edx
0x40043a:	mov	esi, eax
0x40043c:	mov	rdx, qword ptr [rbp - 0x88]
0x400443:	mov	rax, qword ptr [rbp - 0x80]
0x400447:	lea	rcx, [rdx + rax]
0x40044b:	mov	rax, qword ptr [rbp - 0x78]
0x40044f:	mov	rdx, rax
0x400452:	mov	rdi, rcx
0x400455:	call	0x500010
<Block for 0x4004bc, 22 bytes>
0x4004bc:	mov	dword ptr [rbp - 0x8c], 0
0x4004c6:	mov	dword ptr [rbp - 0x90], 0
0x4004d0:	jmp	0x4004e0
<Block for 0x400510, 2 bytes>
0x400510:	leave	
0x400511:	ret	
<Block for 0x40050b, 5 bytes>
0x40050b:	call	0x500038
<Block for 0x40045a, 5 bytes>
0x40045a:	test	rax, rax
0x40045d:	jne	0x40047c
<Block for 0x4004e0, 14 bytes>
0x4004e0:	mov	eax, dword ptr [rbp - 0x94]
0x4004e6:	cmp	dword ptr [rbp - 0x90], eax
0x4004ec:	jl	0x4004d2
<Block for 0x40045f, 12 bytes>
0x40045f:	lea	rdi, [rip + 0x2f3]
0x400466:	call	0x500018
<Block for 0x40047c, 12 bytes>
0x40047c:	mov	rax, qword ptr [rbp - 0x78]
0x400480:	mov	rdi, rax
0x400483:	call	0x500020
<Block for 0x4004d2, 28 bytes>
0x4004d2:	add	dword ptr [rbp - 0x8c], 1
0x4004d9:	add	dword ptr [rbp - 0x90], 1
0x4004e0:	mov	eax, dword ptr [rbp - 0x94]
0x4004e6:	cmp	dword ptr [rbp - 0x90], eax
0x4004ec:	jl	0x4004d2
<Block for 0x4004ee, 13 bytes>
0x4004ee:	mov	eax, dword ptr [rbp - 0x8c]
0x4004f4:	mov	edi, eax
0x4004f6:	call	0x500030
<Block for 0x40046b, 29 bytes>
0x40046b:	mov	rdx, qword ptr [rbp - 0x88]
0x400472:	mov	rax, qword ptr [rbp - 0x80]
0x400476:	add	rax, rdx
0x400479:	mov	byte ptr [rax], 0
0x40047c:	mov	rax, qword ptr [rbp - 0x78]
0x400480:	mov	rdi, rax
0x400483:	call	0x500020
