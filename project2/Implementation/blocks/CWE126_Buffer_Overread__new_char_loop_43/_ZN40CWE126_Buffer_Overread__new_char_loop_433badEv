<Block for 0x40004e, 56 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	sub	rsp, 0x90
0x40005d:	mov	rax, qword ptr fs:[0x28]
0x400066:	mov	qword ptr [rbp - 8], rax
0x40006a:	xor	eax, eax
0x40006c:	mov	qword ptr [rbp - 0x88], 0
0x400077:	lea	rax, [rbp - 0x88]
0x40007e:	mov	rdi, rax
0x400081:	call	0x400000
<Block for 0x400086, 22 bytes>
0x400086:	lea	rax, [rbp - 0x70]
0x40008a:	mov	edx, 0x63
0x40008f:	mov	esi, 0x43
0x400094:	mov	rdi, rax
0x400097:	call	0x500008
<Block for 0x40009c, 16 bytes>
0x40009c:	mov	byte ptr [rbp - 0xd], 0
0x4000a0:	lea	rax, [rbp - 0x70]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500010
<Block for 0x4000ac, 22 bytes>
0x4000ac:	mov	qword ptr [rbp - 0x78], rax
0x4000b0:	mov	qword ptr [rbp - 0x80], 0
0x4000b8:	mov	rax, qword ptr [rbp - 0x80]
0x4000bc:	cmp	rax, qword ptr [rbp - 0x78]
0x4000c0:	jae	0x4000e7
<Block for 0x4000c2, 37 bytes>
0x4000c2:	mov	rdx, qword ptr [rbp - 0x88]
0x4000c9:	mov	rax, qword ptr [rbp - 0x80]
0x4000cd:	add	rax, rdx
0x4000d0:	movzx	eax, byte ptr [rax]
0x4000d3:	lea	rcx, [rbp - 0x70]
0x4000d7:	mov	rdx, qword ptr [rbp - 0x80]
0x4000db:	add	rdx, rcx
0x4000de:	mov	byte ptr [rdx], al
0x4000e0:	add	qword ptr [rbp - 0x80], 1
0x4000e5:	jmp	0x4000b8
<Block for 0x4000e7, 16 bytes>
0x4000e7:	mov	byte ptr [rbp - 0xd], 0
0x4000eb:	lea	rax, [rbp - 0x70]
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500018
<Block for 0x4000b8, 10 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x80]
0x4000bc:	cmp	rax, qword ptr [rbp - 0x78]
0x4000c0:	jae	0x4000e7
<Block for 0x4000f7, 12 bytes>
0x4000f7:	mov	rax, qword ptr [rbp - 0x88]
0x4000fe:	test	rax, rax
0x400101:	je	0x400112
<Block for 0x400112, 16 bytes>
0x400112:	nop	
0x400113:	mov	rax, qword ptr [rbp - 8]
0x400117:	xor	rax, qword ptr fs:[0x28]
0x400120:	je	0x400127
<Block for 0x400103, 15 bytes>
0x400103:	mov	rax, qword ptr [rbp - 0x88]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500020
<Block for 0x400127, 2 bytes>
0x400127:	leave	
0x400128:	ret	
<Block for 0x400122, 5 bytes>
0x400122:	call	0x500028
