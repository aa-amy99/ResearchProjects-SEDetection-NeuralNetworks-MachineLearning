<Block for 0x400068, 18 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	mov	eax, 0
0x400075:	call	0x500000
<Block for 0x40007a, 4 bytes>
0x40007a:	test	eax, eax
0x40007c:	je	0x4000a7
<Block for 0x4000a7, 22 bytes>
0x4000a7:	mov	rax, qword ptr [rip + 0xfff5a]
0x4000ae:	mov	rsi, rax
0x4000b1:	lea	rdi, [rip + 0x2e]
0x4000b8:	call	0x500010
<Block for 0x40007e, 22 bytes>
0x40007e:	mov	rax, qword ptr [rip + 0xfff83]
0x400085:	mov	rsi, rax
0x400088:	lea	rdi, [rip + 0x57]
0x40008f:	call	0x500010
<Block for 0x4000bd, 5 bytes>
0x4000bd:	cmp	eax, -1
0x4000c0:	jne	0x4000ce
<Block for 0x400094, 5 bytes>
0x400094:	cmp	eax, -1
0x400097:	jne	0x4000ce
<Block for 0x4000c2, 12 bytes>
0x4000c2:	lea	rdi, [rip + 0x24]
0x4000c9:	call	0x500018
<Block for 0x4000ce, 3 bytes>
0x4000ce:	nop	
0x4000cf:	pop	rbp
0x4000d0:	ret	
<Block for 0x400099, 12 bytes>
0x400099:	lea	rdi, [rip + 0x4d]
0x4000a0:	call	0x500018
<Block for 0x4000a5, 2 bytes>
0x4000a5:	jmp	0x4000ce
