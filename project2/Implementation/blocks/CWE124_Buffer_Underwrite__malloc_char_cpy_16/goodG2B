<Block for 0x4000c0, 45 bytes>
0x4000c0:	endbr64	
0x4000c4:	push	rbp
0x4000c5:	mov	rbp, rsp
0x4000c8:	add	rsp, -0x80
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	mov	qword ptr [rbp - 0x80], 0
0x4000e3:	mov	edi, 0x64
0x4000e8:	call	0x500000
<Block for 0x4000ed, 11 bytes>
0x4000ed:	mov	qword ptr [rbp - 0x78], rax
0x4000f1:	cmp	qword ptr [rbp - 0x78], 0
0x4000f6:	jne	0x400102
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	edi, 0xffffffff
0x4000fd:	call	0x500008
<Block for 0x400102, 22 bytes>
0x400102:	mov	rax, qword ptr [rbp - 0x78]
0x400106:	mov	edx, 0x63
0x40010b:	mov	esi, 0x41
0x400110:	mov	rdi, rax
0x400113:	call	0x500010
<Block for 0x400118, 42 bytes>
0x400118:	mov	rax, qword ptr [rbp - 0x78]
0x40011c:	add	rax, 0x63
0x400120:	mov	byte ptr [rax], 0
0x400123:	mov	rax, qword ptr [rbp - 0x78]
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	nop	
0x40012c:	lea	rax, [rbp - 0x70]
0x400130:	mov	edx, 0x63
0x400135:	mov	esi, 0x43
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500010
<Block for 0x400142, 23 bytes>
0x400142:	mov	byte ptr [rbp - 0xd], 0
0x400146:	lea	rdx, [rbp - 0x70]
0x40014a:	mov	rax, qword ptr [rbp - 0x80]
0x40014e:	mov	rsi, rdx
0x400151:	mov	rdi, rax
0x400154:	call	0x500018
<Block for 0x400159, 12 bytes>
0x400159:	mov	rax, qword ptr [rbp - 0x80]
0x40015d:	mov	rdi, rax
0x400160:	call	0x500020
<Block for 0x400165, 16 bytes>
0x400165:	nop	
0x400166:	mov	rax, qword ptr [rbp - 8]
0x40016a:	xor	rax, qword ptr fs:[0x28]
0x400173:	je	0x40017a
<Block for 0x40017a, 2 bytes>
0x40017a:	leave	
0x40017b:	ret	
<Block for 0x400175, 5 bytes>
0x400175:	call	0x500028
