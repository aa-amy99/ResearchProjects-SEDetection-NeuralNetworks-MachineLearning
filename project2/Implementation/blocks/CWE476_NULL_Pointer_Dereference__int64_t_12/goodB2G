<Block for 0x40009d, 22 bytes>
0x40009d:	endbr64	
0x4000a1:	push	rbp
0x4000a2:	mov	rbp, rsp
0x4000a5:	sub	rsp, 0x10
0x4000a9:	mov	eax, 0
0x4000ae:	call	0x500000
<Block for 0x4000b3, 4 bytes>
0x4000b3:	test	eax, eax
0x4000b5:	je	0x4000c1
<Block for 0x4000c1, 18 bytes>
0x4000c1:	mov	qword ptr [rbp - 8], 0
0x4000c9:	mov	eax, 0
0x4000ce:	call	0x500000
<Block for 0x4000b7, 10 bytes>
0x4000b7:	mov	qword ptr [rbp - 8], 0
0x4000bf:	jmp	0x4000c9
<Block for 0x4000d3, 4 bytes>
0x4000d3:	test	eax, eax
0x4000d5:	je	0x4000fd
<Block for 0x4000c9, 10 bytes>
0x4000c9:	mov	eax, 0
0x4000ce:	call	0x500000
<Block for 0x4000fd, 7 bytes>
0x4000fd:	cmp	qword ptr [rbp - 8], 0
0x400102:	je	0x400115
<Block for 0x4000d7, 7 bytes>
0x4000d7:	cmp	qword ptr [rbp - 8], 0
0x4000dc:	je	0x4000ef
<Block for 0x400115, 12 bytes>
0x400115:	lea	rdi, [rip + 0xaf]
0x40011c:	call	0x500010
<Block for 0x400104, 15 bytes>
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	mov	rax, qword ptr [rax]
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500008
<Block for 0x4000ef, 12 bytes>
0x4000ef:	lea	rdi, [rip + 0xd5]
0x4000f6:	call	0x500010
<Block for 0x4000de, 15 bytes>
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	rax, qword ptr [rax]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500008
<Block for 0x400121, 3 bytes>
0x400121:	nop	
0x400122:	leave	
0x400123:	ret	
<Block for 0x400113, 2 bytes>
0x400113:	jmp	0x400121
<Block for 0x4000fb, 2 bytes>
0x4000fb:	jmp	0x400121
<Block for 0x4000ed, 2 bytes>
0x4000ed:	jmp	0x400121
