<Block for 0x400072, 31 bytes>
0x400072:	endbr64	
0x400076:	push	rbp
0x400077:	mov	rbp, rsp
0x40007a:	sub	rsp, 0x10
0x40007e:	mov	qword ptr [rbp - 8], 0
0x400086:	mov	eax, dword ptr [rip + 0x198]
0x40008c:	cmp	eax, 5
0x40008f:	jne	0x4000ca
<Block for 0x400091, 10 bytes>
0x400091:	mov	edi, 8
0x400096:	call	0x500000
<Block for 0x4000ca, 11 bytes>
0x4000ca:	mov	eax, dword ptr [rip + 0x154]
0x4000d0:	cmp	eax, 5
0x4000d3:	je	0x4000e1
<Block for 0x40009b, 34 bytes>
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	dword ptr [rax], 1
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	mov	dword ptr [rax + 4], 2
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	test	rax, rax
0x4000bb:	je	0x4000ca
<Block for 0x4000e1, 3 bytes>
0x4000e1:	nop	
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rdi, [rip + 0x14c]
0x4000dc:	call	0x500018
<Block for 0x4000bd, 13 bytes>
0x4000bd:	mov	esi, 8
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
