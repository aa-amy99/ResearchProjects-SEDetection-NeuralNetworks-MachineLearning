<Block for 0x4001b2, 40 bytes>
0x4001b2:	endbr64	
0x4001b6:	push	rbp
0x4001b7:	mov	rbp, rsp
0x4001ba:	add	rsp, -0x80
0x4001be:	mov	rax, qword ptr fs:[0x28]
0x4001c7:	mov	qword ptr [rbp - 8], rax
0x4001cb:	xor	eax, eax
0x4001cd:	mov	qword ptr [rbp - 0x80], 0
0x4001d5:	call	0x400000
<Block for 0x4001da, 9 bytes>
0x4001da:	test	eax, eax
0x4001dc:	setne	al
0x4001df:	test	al, al
0x4001e1:	je	0x40021a
<Block for 0x40021a, 22 bytes>
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	edx, 0x63
0x400223:	mov	esi, 0x43
0x400228:	mov	rdi, rax
0x40022b:	call	0x500008
<Block for 0x4001e3, 10 bytes>
0x4001e3:	mov	edi, 0x64
0x4001e8:	call	0x500000
<Block for 0x400230, 28 bytes>
0x400230:	mov	byte ptr [rbp - 0xd], 0
0x400234:	mov	rcx, qword ptr [rbp - 0x80]
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	edx, 0x64
0x400241:	mov	rsi, rcx
0x400244:	mov	rdi, rax
0x400247:	call	0x500010
<Block for 0x4001ed, 26 bytes>
0x4001ed:	mov	qword ptr [rbp - 0x78], rax
0x4001f1:	mov	rax, qword ptr [rbp - 0x78]
0x4001f5:	mov	edx, 0x63
0x4001fa:	mov	esi, 0x41
0x4001ff:	mov	rdi, rax
0x400202:	call	0x500008
<Block for 0x40024c, 16 bytes>
0x40024c:	mov	byte ptr [rbp - 0xd], 0
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	rdi, rax
0x400257:	call	0x500018
<Block for 0x400207, 41 bytes>
0x400207:	mov	rax, qword ptr [rbp - 0x78]
0x40020b:	add	rax, 0x63
0x40020f:	mov	byte ptr [rax], 0
0x400212:	mov	rax, qword ptr [rbp - 0x78]
0x400216:	mov	qword ptr [rbp - 0x80], rax
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	edx, 0x63
0x400223:	mov	esi, 0x43
0x400228:	mov	rdi, rax
0x40022b:	call	0x500008
<Block for 0x40025c, 16 bytes>
0x40025c:	nop	
0x40025d:	mov	rax, qword ptr [rbp - 8]
0x400261:	xor	rax, qword ptr fs:[0x28]
0x40026a:	je	0x400271
<Block for 0x400271, 2 bytes>
0x400271:	leave	
0x400272:	ret	
<Block for 0x40026c, 5 bytes>
0x40026c:	call	0x500020
