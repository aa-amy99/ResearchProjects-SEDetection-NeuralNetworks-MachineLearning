<Block for 0x4000e3, 40 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	add	rsp, -0x80
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	qword ptr [rbp - 0x80], 0
0x400106:	call	0x40000f
<Block for 0x40010b, 9 bytes>
0x40010b:	test	eax, eax
0x40010d:	setne	al
0x400110:	test	al, al
0x400112:	je	0x400122
<Block for 0x400122, 10 bytes>
0x400122:	mov	edi, 0x64
0x400127:	call	0x500000
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0x16d]
0x40011b:	call	0x500018
<Block for 0x40012c, 26 bytes>
0x40012c:	mov	qword ptr [rbp - 0x78], rax
0x400130:	mov	rax, qword ptr [rbp - 0x78]
0x400134:	mov	edx, 0x63
0x400139:	mov	esi, 0x41
0x40013e:	mov	rdi, rax
0x400141:	call	0x500008
<Block for 0x400120, 2 bytes>
0x400120:	jmp	0x400159
<Block for 0x400146, 41 bytes>
0x400146:	mov	rax, qword ptr [rbp - 0x78]
0x40014a:	add	rax, 0x63
0x40014e:	mov	byte ptr [rax], 0
0x400151:	mov	rax, qword ptr [rbp - 0x78]
0x400155:	mov	qword ptr [rbp - 0x80], rax
0x400159:	lea	rax, [rbp - 0x70]
0x40015d:	mov	edx, 0x63
0x400162:	mov	esi, 0x43
0x400167:	mov	rdi, rax
0x40016a:	call	0x500008
<Block for 0x400159, 22 bytes>
0x400159:	lea	rax, [rbp - 0x70]
0x40015d:	mov	edx, 0x63
0x400162:	mov	esi, 0x43
0x400167:	mov	rdi, rax
0x40016a:	call	0x500008
<Block for 0x40016f, 28 bytes>
0x40016f:	mov	byte ptr [rbp - 0xd], 0
0x400173:	mov	rcx, qword ptr [rbp - 0x80]
0x400177:	lea	rax, [rbp - 0x70]
0x40017b:	mov	edx, 0x64
0x400180:	mov	rsi, rcx
0x400183:	mov	rdi, rax
0x400186:	call	0x500010
<Block for 0x40018b, 16 bytes>
0x40018b:	mov	byte ptr [rbp - 0xd], 0
0x40018f:	lea	rax, [rbp - 0x70]
0x400193:	mov	rdi, rax
0x400196:	call	0x500018
<Block for 0x40019b, 16 bytes>
0x40019b:	nop	
0x40019c:	mov	rax, qword ptr [rbp - 8]
0x4001a0:	xor	rax, qword ptr fs:[0x28]
0x4001a9:	je	0x4001b0
<Block for 0x4001b0, 2 bytes>
0x4001b0:	leave	
0x4001b1:	ret	
<Block for 0x4001ab, 5 bytes>
0x4001ab:	call	0x500020
