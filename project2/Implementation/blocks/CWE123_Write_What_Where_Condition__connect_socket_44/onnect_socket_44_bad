<Block for 0x400055, 113 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x50
0x400061:	mov	rax, qword ptr fs:[0x28]
0x40006a:	mov	qword ptr [rbp - 8], rax
0x40006e:	xor	eax, eax
0x400070:	lea	rax, [rip - 0x77]
0x400077:	mov	qword ptr [rbp - 0x48], rax
0x40007b:	lea	rax, [rbp - 0x30]
0x40007f:	mov	qword ptr [rbp - 0x30], rax
0x400083:	lea	rax, [rbp - 0x30]
0x400087:	mov	qword ptr [rbp - 0x28], rax
0x40008b:	mov	rax, qword ptr [rbp - 0x30]
0x40008f:	mov	qword ptr [rbp - 0x40], rax
0x400093:	mov	rax, qword ptr [rbp - 0x28]
0x400097:	mov	qword ptr [rbp - 0x38], rax
0x40009b:	lea	rax, [rbp - 0x40]
0x40009f:	mov	qword ptr [rbp - 0x30], rax
0x4000a3:	lea	rax, [rbp - 0x40]
0x4000a7:	mov	qword ptr [rbp - 0x28], rax
0x4000ab:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4000b2:	mov	edx, 6
0x4000b7:	mov	esi, 1
0x4000bc:	mov	edi, 2
0x4000c1:	call	0x500000
<Block for 0x4000c6, 9 bytes>
0x4000c6:	mov	dword ptr [rbp - 0x50], eax
0x4000c9:	cmp	dword ptr [rbp - 0x50], -1
0x4000cd:	je	0x400140
<Block for 0x400140, 3 bytes>
0x400140:	nop	
0x400141:	jmp	0x400144
<Block for 0x4000cf, 22 bytes>
0x4000cf:	lea	rax, [rbp - 0x20]
0x4000d3:	mov	edx, 0x10
0x4000d8:	mov	esi, 0
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500008
<Block for 0x400144, 6 bytes>
0x400144:	cmp	dword ptr [rbp - 0x50], -1
0x400148:	je	0x400154
<Block for 0x4000e5, 18 bytes>
0x4000e5:	mov	word ptr [rbp - 0x20], 2
0x4000eb:	lea	rdi, [rip + 0x18e]
0x4000f2:	call	0x500010
<Block for 0x400154, 20 bytes>
0x400154:	mov	rdx, qword ptr [rbp - 0x40]
0x400158:	mov	rax, qword ptr [rbp - 0x38]
0x40015c:	mov	rcx, qword ptr [rbp - 0x48]
0x400160:	mov	rdi, rdx
0x400163:	mov	rsi, rax
0x400166:	call	rcx
<Block for 0x40014a, 10 bytes>
0x40014a:	mov	eax, dword ptr [rbp - 0x50]
0x40014d:	mov	edi, eax
0x40014f:	call	0x500030
<Block for 0x4000f7, 13 bytes>
0x4000f7:	mov	dword ptr [rbp - 0x1c], eax
0x4000fa:	mov	edi, 0x6987
0x4000ff:	call	0x500018
<Block for 0x400168, 16 bytes>
0x400168:	nop	
0x400169:	mov	rax, qword ptr [rbp - 8]
0x40016d:	xor	rax, qword ptr fs:[0x28]
0x400176:	je	0x40017d
<Block for 0x400104, 26 bytes>
0x400104:	mov	word ptr [rbp - 0x1e], ax
0x400108:	lea	rcx, [rbp - 0x20]
0x40010c:	mov	eax, dword ptr [rbp - 0x50]
0x40010f:	mov	edx, 0x10
0x400114:	mov	rsi, rcx
0x400117:	mov	edi, eax
0x400119:	call	0x500020
<Block for 0x40017d, 2 bytes>
0x40017d:	leave	
0x40017e:	ret	
<Block for 0x400178, 5 bytes>
0x400178:	call	0x500038
<Block for 0x40011e, 5 bytes>
0x40011e:	cmp	eax, -1
0x400121:	je	0x400143
<Block for 0x400123, 24 bytes>
0x400123:	lea	rsi, [rbp - 0x40]
0x400127:	mov	eax, dword ptr [rbp - 0x50]
0x40012a:	mov	ecx, 0
0x40012f:	mov	edx, 0x10
0x400134:	mov	edi, eax
0x400136:	call	0x500028
<Block for 0x400143, 1 bytes>
0x400143:	nop	
<Block for 0x40013b, 5 bytes>
0x40013b:	mov	dword ptr [rbp - 0x4c], eax
0x40013e:	jmp	0x400144
