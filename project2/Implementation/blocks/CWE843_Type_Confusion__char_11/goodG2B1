<Block for 0x400061, 45 bytes>
0x400061:	endbr64	
0x400065:	push	rbp
0x400066:	mov	rbp, rsp
0x400069:	sub	rsp, 0x20
0x40006d:	mov	rax, qword ptr fs:[0x28]
0x400076:	mov	qword ptr [rbp - 8], rax
0x40007a:	xor	eax, eax
0x40007c:	mov	qword ptr [rbp - 0x10], 0
0x400084:	mov	eax, 0
0x400089:	call	0x500018
<Block for 0x40008e, 4 bytes>
0x40008e:	test	eax, eax
0x400090:	je	0x4000a0
<Block for 0x4000a0, 28 bytes>
0x4000a0:	mov	dword ptr [rbp - 0x14], 8
0x4000a7:	lea	rax, [rbp - 0x14]
0x4000ab:	mov	qword ptr [rbp - 0x10], rax
0x4000af:	mov	rax, qword ptr [rbp - 0x10]
0x4000b3:	mov	eax, dword ptr [rax]
0x4000b5:	mov	edi, eax
0x4000b7:	call	0x500008
<Block for 0x400092, 12 bytes>
0x400092:	lea	rdi, [rip + 0xbd]
0x400099:	call	0x500020
<Block for 0x4000bc, 16 bytes>
0x4000bc:	nop	
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	xor	rax, qword ptr fs:[0x28]
0x4000ca:	je	0x4000d1
<Block for 0x40009e, 2 bytes>
0x40009e:	jmp	0x4000af
<Block for 0x4000d1, 2 bytes>
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x4000cc, 5 bytes>
0x4000cc:	call	0x500010
<Block for 0x4000af, 13 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 0x10]
0x4000b3:	mov	eax, dword ptr [rax]
0x4000b5:	mov	edi, eax
0x4000b7:	call	0x500008
