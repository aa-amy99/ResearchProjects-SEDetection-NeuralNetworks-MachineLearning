<Block for 0x4001c0, 44 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	add	rsp, -0x80
0x4001cc:	mov	rax, qword ptr fs:[0x28]
0x4001d5:	mov	qword ptr [rbp - 8], rax
0x4001d9:	xor	eax, eax
0x4001db:	mov	qword ptr [rbp - 0x80], 0
0x4001e3:	mov	eax, 1
0x4001e8:	test	eax, eax
0x4001ea:	je	0x400234
<Block for 0x400234, 22 bytes>
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	edx, 0x63
0x40023d:	mov	esi, 0x43
0x400242:	mov	rdi, rax
0x400245:	call	0x500010
<Block for 0x4001ec, 10 bytes>
0x4001ec:	mov	edi, 0x64
0x4001f1:	call	0x500000
<Block for 0x40024a, 16 bytes>
0x40024a:	mov	byte ptr [rbp - 0xd], 0
0x40024e:	lea	rax, [rbp - 0x70]
0x400252:	mov	rdi, rax
0x400255:	call	0x500018
<Block for 0x4001f6, 11 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x78], rax
0x4001fa:	cmp	qword ptr [rbp - 0x78], 0
0x4001ff:	jne	0x40020b
<Block for 0x40025a, 22 bytes>
0x40025a:	mov	rdx, rax
0x40025d:	mov	rcx, qword ptr [rbp - 0x80]
0x400261:	lea	rax, [rbp - 0x70]
0x400265:	mov	rsi, rcx
0x400268:	mov	rdi, rax
0x40026b:	call	0x500020
<Block for 0x400201, 10 bytes>
0x400201:	mov	edi, 0xffffffff
0x400206:	call	0x500008
<Block for 0x40020b, 22 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x78]
0x40020f:	mov	edx, 0x63
0x400214:	mov	esi, 0x41
0x400219:	mov	rdi, rax
0x40021c:	call	0x500010
<Block for 0x400270, 16 bytes>
0x400270:	mov	byte ptr [rbp - 0xd], 0
0x400274:	lea	rax, [rbp - 0x70]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500028
<Block for 0x400221, 41 bytes>
0x400221:	mov	rax, qword ptr [rbp - 0x78]
0x400225:	add	rax, 0x63
0x400229:	mov	byte ptr [rax], 0
0x40022c:	mov	rax, qword ptr [rbp - 0x78]
0x400230:	mov	qword ptr [rbp - 0x80], rax
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	edx, 0x63
0x40023d:	mov	esi, 0x43
0x400242:	mov	rdi, rax
0x400245:	call	0x500010
<Block for 0x400280, 16 bytes>
0x400280:	nop	
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	xor	rax, qword ptr fs:[0x28]
0x40028e:	je	0x400295
<Block for 0x400295, 2 bytes>
0x400295:	leave	
0x400296:	ret	
<Block for 0x400290, 5 bytes>
0x400290:	call	0x500030
