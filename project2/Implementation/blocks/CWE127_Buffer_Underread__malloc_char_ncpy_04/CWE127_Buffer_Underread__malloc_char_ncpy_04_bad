<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	eax, 1
0x400028:	test	eax, eax
0x40002a:	je	0x400078
<Block for 0x400078, 22 bytes>
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	edx, 0x63
0x400081:	mov	esi, 0x43
0x400086:	mov	rdi, rax
0x400089:	call	0x500010
<Block for 0x40002c, 10 bytes>
0x40002c:	mov	edi, 0x64
0x400031:	call	0x500000
<Block for 0x40008e, 16 bytes>
0x40008e:	mov	byte ptr [rbp - 0xd], 0
0x400092:	lea	rax, [rbp - 0x70]
0x400096:	mov	rdi, rax
0x400099:	call	0x500018
<Block for 0x400036, 11 bytes>
0x400036:	mov	qword ptr [rbp - 0x78], rax
0x40003a:	cmp	qword ptr [rbp - 0x78], 0
0x40003f:	jne	0x40004b
<Block for 0x40009e, 22 bytes>
0x40009e:	mov	rdx, rax
0x4000a1:	mov	rcx, qword ptr [rbp - 0x80]
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	mov	rsi, rcx
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500020
<Block for 0x400041, 10 bytes>
0x400041:	mov	edi, 0xffffffff
0x400046:	call	0x500008
<Block for 0x40004b, 22 bytes>
0x40004b:	mov	rax, qword ptr [rbp - 0x78]
0x40004f:	mov	edx, 0x63
0x400054:	mov	esi, 0x41
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x4000b4, 16 bytes>
0x4000b4:	mov	byte ptr [rbp - 0xd], 0
0x4000b8:	lea	rax, [rbp - 0x70]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500028
<Block for 0x400061, 45 bytes>
0x400061:	mov	rax, qword ptr [rbp - 0x78]
0x400065:	add	rax, 0x63
0x400069:	mov	byte ptr [rax], 0
0x40006c:	mov	rax, qword ptr [rbp - 0x78]
0x400070:	sub	rax, 8
0x400074:	mov	qword ptr [rbp - 0x80], rax
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	edx, 0x63
0x400081:	mov	esi, 0x43
0x400086:	mov	rdi, rax
0x400089:	call	0x500010
<Block for 0x4000c4, 16 bytes>
0x4000c4:	nop	
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	xor	rax, qword ptr fs:[0x28]
0x4000d2:	je	0x4000d9
<Block for 0x4000d9, 2 bytes>
0x4000d9:	leave	
0x4000da:	ret	
<Block for 0x4000d4, 5 bytes>
0x4000d4:	call	0x500030
