<Block for 0x400085, 22 bytes>
0x400085:	endbr64	
0x400089:	push	rbp
0x40008a:	mov	rbp, rsp
0x40008d:	sub	rsp, 0x10
0x400091:	mov	eax, 0
0x400096:	call	0x40000f
<Block for 0x40009b, 4 bytes>
0x40009b:	test	eax, eax
0x40009d:	je	0x4000ad
<Block for 0x4000ad, 18 bytes>
0x4000ad:	mov	qword ptr [rbp - 8], 0
0x4000b5:	mov	edi, 4
0x4000ba:	call	0x500000
<Block for 0x40009f, 12 bytes>
0x40009f:	lea	rdi, [rip + 0xda]
0x4000a6:	call	0x500020
<Block for 0x4000bf, 11 bytes>
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	cmp	qword ptr [rbp - 8], 0
0x4000c8:	jne	0x4000d4
<Block for 0x4000ab, 2 bytes>
0x4000ab:	jmp	0x4000f7
<Block for 0x4000ca, 10 bytes>
0x4000ca:	mov	edi, 0xffffffff
0x4000cf:	call	0x500008
<Block for 0x4000d4, 23 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	mov	dword ptr [rax], 6
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	eax, dword ptr [rax]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x500010
<Block for 0x4000f7, 3 bytes>
0x4000f7:	nop	
0x4000f8:	leave	
0x4000f9:	ret	
<Block for 0x4000eb, 12 bytes>
0x4000eb:	mov	rax, qword ptr [rbp - 8]
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500018
