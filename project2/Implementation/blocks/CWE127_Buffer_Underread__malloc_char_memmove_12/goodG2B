<Block for 0x40012f, 51 bytes>
0x40012f:	endbr64	
0x400133:	push	rbp
0x400134:	mov	rbp, rsp
0x400137:	sub	rsp, 0x90
0x40013e:	mov	rax, qword ptr fs:[0x28]
0x400147:	mov	qword ptr [rbp - 8], rax
0x40014b:	xor	eax, eax
0x40014d:	mov	qword ptr [rbp - 0x88], 0
0x400158:	mov	eax, 0
0x40015d:	call	0x500000
<Block for 0x400162, 4 bytes>
0x400162:	test	eax, eax
0x400164:	je	0x4001b3
<Block for 0x4001b3, 10 bytes>
0x4001b3:	mov	edi, 0x64
0x4001b8:	call	0x500008
<Block for 0x400166, 10 bytes>
0x400166:	mov	edi, 0x64
0x40016b:	call	0x500008
<Block for 0x4001bd, 11 bytes>
0x4001bd:	mov	qword ptr [rbp - 0x80], rax
0x4001c1:	cmp	qword ptr [rbp - 0x80], 0
0x4001c6:	jne	0x4001d2
<Block for 0x400170, 11 bytes>
0x400170:	mov	qword ptr [rbp - 0x78], rax
0x400174:	cmp	qword ptr [rbp - 0x78], 0
0x400179:	jne	0x400185
<Block for 0x4001c8, 10 bytes>
0x4001c8:	mov	edi, 0xffffffff
0x4001cd:	call	0x500010
<Block for 0x4001d2, 22 bytes>
0x4001d2:	mov	rax, qword ptr [rbp - 0x80]
0x4001d6:	mov	edx, 0x63
0x4001db:	mov	esi, 0x41
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500018
<Block for 0x40017b, 10 bytes>
0x40017b:	mov	edi, 0xffffffff
0x400180:	call	0x500010
<Block for 0x400185, 22 bytes>
0x400185:	mov	rax, qword ptr [rbp - 0x78]
0x400189:	mov	edx, 0x63
0x40018e:	mov	esi, 0x41
0x400193:	mov	rdi, rax
0x400196:	call	0x500018
<Block for 0x4001e8, 44 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 0x80]
0x4001ec:	add	rax, 0x63
0x4001f0:	mov	byte ptr [rax], 0
0x4001f3:	mov	rax, qword ptr [rbp - 0x80]
0x4001f7:	mov	qword ptr [rbp - 0x88], rax
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x43
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500018
<Block for 0x40019b, 24 bytes>
0x40019b:	mov	rax, qword ptr [rbp - 0x78]
0x40019f:	add	rax, 0x63
0x4001a3:	mov	byte ptr [rax], 0
0x4001a6:	mov	rax, qword ptr [rbp - 0x78]
0x4001aa:	mov	qword ptr [rbp - 0x88], rax
0x4001b1:	jmp	0x4001fe
<Block for 0x400214, 31 bytes>
0x400214:	mov	byte ptr [rbp - 0xd], 0
0x400218:	mov	rcx, qword ptr [rbp - 0x88]
0x40021f:	lea	rax, [rbp - 0x70]
0x400223:	mov	edx, 0x64
0x400228:	mov	rsi, rcx
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500020
<Block for 0x4001fe, 22 bytes>
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x43
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500018
<Block for 0x400233, 16 bytes>
0x400233:	mov	byte ptr [rbp - 0xd], 0
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500028
<Block for 0x400243, 16 bytes>
0x400243:	nop	
0x400244:	mov	rax, qword ptr [rbp - 8]
0x400248:	xor	rax, qword ptr fs:[0x28]
0x400251:	je	0x400258
<Block for 0x400258, 2 bytes>
0x400258:	leave	
0x400259:	ret	
<Block for 0x400253, 5 bytes>
0x400253:	call	0x500030
