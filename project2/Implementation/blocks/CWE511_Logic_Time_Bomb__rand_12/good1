<Block for 0x40006d, 18 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	mov	eax, 0
0x40007a:	call	0x500000
<Block for 0x40007f, 4 bytes>
0x40007f:	test	eax, eax
0x400081:	je	0x4000ae
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 0
0x4000b3:	call	0x500008
<Block for 0x400083, 10 bytes>
0x400083:	mov	edi, 0
0x400088:	call	0x500008
<Block for 0x4000b8, 7 bytes>
0x4000b8:	mov	edi, eax
0x4000ba:	call	0x500010
<Block for 0x40008d, 7 bytes>
0x40008d:	mov	edi, eax
0x40008f:	call	0x500010
<Block for 0x4000bf, 5 bytes>
0x4000bf:	call	0x500018
<Block for 0x400094, 5 bytes>
0x400094:	call	0x500018
<Block for 0x4000c4, 7 bytes>
0x4000c4:	cmp	eax, 0x4e20
0x4000c9:	jne	0x4000d7
<Block for 0x400099, 7 bytes>
0x400099:	cmp	eax, 0x4e20
0x40009e:	jne	0x4000d7
<Block for 0x4000cb, 12 bytes>
0x4000cb:	lea	rdi, [rip + 0x30]
0x4000d2:	call	0x500028
<Block for 0x4000d7, 3 bytes>
0x4000d7:	nop	
0x4000d8:	pop	rbp
0x4000d9:	ret	
<Block for 0x4000a0, 12 bytes>
0x4000a0:	lea	rdi, [rip + 0x5b]
0x4000a7:	call	0x500028
<Block for 0x4000ac, 2 bytes>
0x4000ac:	jmp	0x4000d7
