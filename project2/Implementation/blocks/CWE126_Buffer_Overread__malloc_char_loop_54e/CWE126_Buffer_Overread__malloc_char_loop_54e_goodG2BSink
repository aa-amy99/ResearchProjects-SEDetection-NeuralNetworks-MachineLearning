<Block for 0x4000bc, 59 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	sub	rsp, 0x90
0x4000cb:	mov	qword ptr [rbp - 0x88], rdi
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	lea	rax, [rbp - 0x70]
0x4000e5:	mov	edx, 0x63
0x4000ea:	mov	esi, 0x43
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500000
<Block for 0x4000f7, 16 bytes>
0x4000f7:	mov	byte ptr [rbp - 0xd], 0
0x4000fb:	lea	rax, [rbp - 0x70]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500008
<Block for 0x400107, 14 bytes>
0x400107:	mov	qword ptr [rbp - 0x78], rax
0x40010b:	mov	qword ptr [rbp - 0x80], 0
0x400113:	jmp	0x400138
<Block for 0x400138, 10 bytes>
0x400138:	mov	rax, qword ptr [rbp - 0x80]
0x40013c:	cmp	rax, qword ptr [rbp - 0x78]
0x400140:	jb	0x400115
<Block for 0x400115, 45 bytes>
0x400115:	mov	rdx, qword ptr [rbp - 0x88]
0x40011c:	mov	rax, qword ptr [rbp - 0x80]
0x400120:	add	rax, rdx
0x400123:	movzx	eax, byte ptr [rax]
0x400126:	lea	rcx, [rbp - 0x70]
0x40012a:	mov	rdx, qword ptr [rbp - 0x80]
0x40012e:	add	rdx, rcx
0x400131:	mov	byte ptr [rdx], al
0x400133:	add	qword ptr [rbp - 0x80], 1
0x400138:	mov	rax, qword ptr [rbp - 0x80]
0x40013c:	cmp	rax, qword ptr [rbp - 0x78]
0x400140:	jb	0x400115
<Block for 0x400142, 16 bytes>
0x400142:	mov	byte ptr [rbp - 0xd], 0
0x400146:	lea	rax, [rbp - 0x70]
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500010
<Block for 0x400152, 15 bytes>
0x400152:	mov	rax, qword ptr [rbp - 0x88]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500018
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500020
