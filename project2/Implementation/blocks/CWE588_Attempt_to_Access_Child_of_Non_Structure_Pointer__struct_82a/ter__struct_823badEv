<Block for 0x400000, 67 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x38
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x34], 0x64
0x400023:	mov	dword ptr [rbp - 0x20], 0
0x40002a:	mov	dword ptr [rbp - 0x1c], 0
0x400031:	lea	rax, [rbp - 0x34]
0x400035:	mov	qword ptr [rbp - 0x30], rax
0x400039:	mov	edi, 8
0x40003e:	call	0x500000
<Block for 0x400043, 11 bytes>
0x400043:	mov	rbx, rax
0x400046:	mov	rdi, rbx
0x400049:	call	0x40016a
<Block for 0x40004e, 30 bytes>
0x40004e:	mov	qword ptr [rbp - 0x28], rbx
0x400052:	mov	rax, qword ptr [rbp - 0x28]
0x400056:	mov	rax, qword ptr [rax]
0x400059:	mov	rcx, qword ptr [rax]
0x40005c:	mov	rdx, qword ptr [rbp - 0x30]
0x400060:	mov	rax, qword ptr [rbp - 0x28]
0x400064:	mov	rsi, rdx
0x400067:	mov	rdi, rax
0x40006a:	call	rcx
<Block for 0x40006c, 9 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 0x28]
0x400070:	test	rax, rax
0x400073:	je	0x400082
<Block for 0x400082, 16 bytes>
0x400082:	nop	
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	xor	rax, qword ptr fs:[0x28]
0x400090:	je	0x400097
<Block for 0x400075, 13 bytes>
0x400075:	mov	esi, 8
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500008
<Block for 0x400097, 7 bytes>
0x400097:	add	rsp, 0x38
0x40009b:	pop	rbx
0x40009c:	pop	rbp
0x40009d:	ret	
<Block for 0x400092, 5 bytes>
0x400092:	call	0x500010
