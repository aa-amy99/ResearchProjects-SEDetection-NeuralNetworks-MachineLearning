<Block for 0x4000dd, 53 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	add	rsp, -0x80
0x4000e9:	mov	qword ptr [rbp - 0x78], rdi
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	xor	eax, eax
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x43
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x400112, 28 bytes>
0x400112:	mov	byte ptr [rbp - 0xd], 0
0x400116:	lea	rcx, [rbp - 0x70]
0x40011a:	mov	rax, qword ptr [rbp - 0x78]
0x40011e:	mov	edx, 0x64
0x400123:	mov	rsi, rcx
0x400126:	mov	rdi, rax
0x400129:	call	0x500008
<Block for 0x40012e, 23 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x78]
0x400132:	add	rax, 0x63
0x400136:	mov	byte ptr [rax], 0
0x400139:	mov	rax, qword ptr [rbp - 0x78]
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x400145, 16 bytes>
0x400145:	nop	
0x400146:	mov	rax, qword ptr [rbp - 8]
0x40014a:	xor	rax, qword ptr fs:[0x28]
0x400153:	je	0x40015a
<Block for 0x40015a, 2 bytes>
0x40015a:	leave	
0x40015b:	ret	
<Block for 0x400155, 5 bytes>
0x400155:	call	0x500018
