<Block for 0x400086, 81 bytes>
0x400086:	endbr64	
0x40008a:	push	rbp
0x40008b:	mov	rbp, rsp
0x40008e:	sub	rsp, 0x20
0x400092:	mov	rax, qword ptr fs:[0x28]
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	xor	eax, eax
0x4000a1:	mov	eax, 0x10
0x4000a6:	sub	rax, 1
0x4000aa:	add	rax, 0x6c
0x4000ae:	mov	esi, 0x10
0x4000b3:	mov	edx, 0
0x4000b8:	div	rsi
0x4000bb:	imul	rax, rax, 0x10
0x4000bf:	mov	rdx, rax
0x4000c2:	and	rdx, 0xfffffffffffff000
0x4000c9:	mov	rcx, rsp
0x4000cc:	sub	rcx, rdx
0x4000cf:	mov	rdx, rcx
0x4000d2:	cmp	rsp, rdx
0x4000d5:	je	0x4000e9
<Block for 0x4000e9, 26 bytes>
0x4000e9:	mov	rdx, rax
0x4000ec:	and	edx, 0xfff
0x4000f2:	sub	rsp, rdx
0x4000f5:	mov	rdx, rax
0x4000f8:	and	edx, 0xfff
0x4000fe:	test	rdx, rdx
0x400101:	je	0x400113
<Block for 0x4000d7, 18 bytes>
0x4000d7:	sub	rsp, 0x1000
0x4000de:	or	qword ptr [rsp + 0xff8], 0
0x4000e7:	jmp	0x4000d2
<Block for 0x400113, 41 bytes>
0x400113:	mov	rax, rsp
0x400116:	add	rax, 0xf
0x40011a:	shr	rax, 4
0x40011e:	shl	rax, 4
0x400122:	mov	qword ptr [rbp - 0x18], rax
0x400126:	mov	rax, qword ptr [rbp - 0x18]
0x40012a:	mov	edx, 0x63
0x40012f:	mov	esi, 0x41
0x400134:	mov	rdi, rax
0x400137:	call	0x500000
<Block for 0x400103, 57 bytes>
0x400103:	and	eax, 0xfff
0x400108:	sub	rax, 8
0x40010c:	add	rax, rsp
0x40010f:	or	qword ptr [rax], 0
0x400113:	mov	rax, rsp
0x400116:	add	rax, 0xf
0x40011a:	shr	rax, 4
0x40011e:	shl	rax, 4
0x400122:	mov	qword ptr [rbp - 0x18], rax
0x400126:	mov	rax, qword ptr [rbp - 0x18]
0x40012a:	mov	edx, 0x63
0x40012f:	mov	esi, 0x41
0x400134:	mov	rdi, rax
0x400137:	call	0x500000
<Block for 0x4000d2, 5 bytes>
0x4000d2:	cmp	rsp, rdx
0x4000d5:	je	0x4000e9
<Block for 0x40013c, 44 bytes>
0x40013c:	mov	rax, qword ptr [rbp - 0x18]
0x400140:	add	rax, 0x63
0x400144:	mov	byte ptr [rax], 0
0x400147:	mov	rax, qword ptr [rbp - 0x18]
0x40014b:	sub	rax, 8
0x40014f:	mov	qword ptr [rbp - 0x10], rax
0x400153:	mov	rax, qword ptr [rbp - 0x10]
0x400157:	mov	qword ptr [rip + 0x1b2], rax
0x40015e:	mov	eax, 0
0x400163:	call	0x400000
<Block for 0x400168, 16 bytes>
0x400168:	nop	
0x400169:	mov	rax, qword ptr [rbp - 8]
0x40016d:	xor	rax, qword ptr fs:[0x28]
0x400176:	je	0x40017d
<Block for 0x40017d, 2 bytes>
0x40017d:	leave	
0x40017e:	ret	
<Block for 0x400178, 5 bytes>
0x400178:	call	0x500018
