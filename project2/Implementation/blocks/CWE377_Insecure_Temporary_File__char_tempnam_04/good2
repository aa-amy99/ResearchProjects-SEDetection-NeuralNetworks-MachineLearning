<Block for 0x40012a, 36 bytes>
0x40012a:	endbr64	
0x40012e:	push	rbp
0x40012f:	mov	rbp, rsp
0x400132:	sub	rsp, 0x30
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 8], rax
0x400143:	xor	eax, eax
0x400145:	mov	eax, 1
0x40014a:	test	eax, eax
0x40014c:	je	0x4001a1
<Block for 0x4001a1, 16 bytes>
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	xor	rax, qword ptr fs:[0x28]
0x4001af:	je	0x4001b6
<Block for 0x40014e, 40 bytes>
0x40014e:	movabs	rax, 0x6c69662f706d742f
0x400158:	movabs	rdx, 0x58585858585865
0x400162:	mov	qword ptr [rbp - 0x20], rax
0x400166:	mov	qword ptr [rbp - 0x18], rdx
0x40016a:	lea	rax, [rbp - 0x20]
0x40016e:	mov	rdi, rax
0x400171:	call	0x500030
<Block for 0x4001b6, 2 bytes>
0x4001b6:	leave	
0x4001b7:	ret	
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500038
<Block for 0x400176, 15 bytes>
0x400176:	mov	dword ptr [rbp - 0x24], eax
0x400179:	lea	rax, [rbp - 0x20]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500010
<Block for 0x400185, 6 bytes>
0x400185:	cmp	dword ptr [rbp - 0x24], -1
0x400189:	je	0x4001a1
<Block for 0x40018b, 12 bytes>
0x40018b:	lea	rdi, [rip + 0x4e]
0x400192:	call	0x500010
<Block for 0x400197, 10 bytes>
0x400197:	mov	eax, dword ptr [rbp - 0x24]
0x40019a:	mov	edi, eax
0x40019c:	call	0x500020
