<Block for 0x40008e, 36 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x30
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	eax, 0
0x4000ae:	test	eax, eax
0x4000b0:	je	0x4000c0
<Block for 0x4000c0, 40 bytes>
0x4000c0:	movabs	rax, 0x6c69662f706d742f
0x4000ca:	movabs	rdx, 0x58585858585865
0x4000d4:	mov	qword ptr [rbp - 0x20], rax
0x4000d8:	mov	qword ptr [rbp - 0x18], rdx
0x4000dc:	lea	rax, [rbp - 0x20]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500030
<Block for 0x4000b2, 12 bytes>
0x4000b2:	lea	rdi, [rip + 0x154]
0x4000b9:	call	0x500010
<Block for 0x4000e8, 15 bytes>
0x4000e8:	mov	dword ptr [rbp - 0x24], eax
0x4000eb:	lea	rax, [rbp - 0x20]
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500010
<Block for 0x4000be, 2 bytes>
0x4000be:	jmp	0x400113
<Block for 0x4000f7, 6 bytes>
0x4000f7:	cmp	dword ptr [rbp - 0x24], -1
0x4000fb:	je	0x400113
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x4000fd, 12 bytes>
0x4000fd:	lea	rdi, [rip + 0xdc]
0x400104:	call	0x500010
<Block for 0x400128, 2 bytes>
0x400128:	leave	
0x400129:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500038
<Block for 0x400109, 10 bytes>
0x400109:	mov	eax, dword ptr [rbp - 0x24]
0x40010c:	mov	edi, eax
0x40010e:	call	0x500020
