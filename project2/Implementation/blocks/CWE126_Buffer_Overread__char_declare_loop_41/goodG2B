<Block for 0x4001e3, 55 bytes>
0x4001e3:	endbr64	
0x4001e7:	push	rbp
0x4001e8:	mov	rbp, rsp
0x4001eb:	sub	rsp, 0xc0
0x4001f2:	mov	rax, qword ptr fs:[0x28]
0x4001fb:	mov	qword ptr [rbp - 8], rax
0x4001ff:	xor	eax, eax
0x400201:	lea	rax, [rbp - 0xb0]
0x400208:	mov	edx, 0x31
0x40020d:	mov	esi, 0x41
0x400212:	mov	rdi, rax
0x400215:	call	0x500000
<Block for 0x40021a, 26 bytes>
0x40021a:	mov	byte ptr [rbp - 0x7f], 0
0x40021e:	lea	rax, [rbp - 0x70]
0x400222:	mov	edx, 0x63
0x400227:	mov	esi, 0x41
0x40022c:	mov	rdi, rax
0x40022f:	call	0x500000
<Block for 0x400234, 30 bytes>
0x400234:	mov	byte ptr [rbp - 0xd], 0
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	qword ptr [rbp - 0xb8], rax
0x400243:	mov	rax, qword ptr [rbp - 0xb8]
0x40024a:	mov	rdi, rax
0x40024d:	call	0x400136
<Block for 0x400252, 16 bytes>
0x400252:	nop	
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	xor	rax, qword ptr fs:[0x28]
0x400260:	je	0x400267
<Block for 0x400267, 2 bytes>
0x400267:	leave	
0x400268:	ret	
<Block for 0x400262, 5 bytes>
0x400262:	call	0x500018
