<Block for 0x4000ad, 55 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0xc0
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	lea	rax, [rbp - 0xb0]
0x4000d2:	mov	edx, 0x31
0x4000d7:	mov	esi, 0x41
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500000
<Block for 0x4000e4, 26 bytes>
0x4000e4:	mov	byte ptr [rbp - 0x7f], 0
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	edx, 0x63
0x4000f1:	mov	esi, 0x41
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500000
<Block for 0x4000fe, 33 bytes>
0x4000fe:	mov	byte ptr [rbp - 0xd], 0
0x400102:	lea	rax, [rbp - 0xb0]
0x400109:	mov	qword ptr [rbp - 0xb8], rax
0x400110:	mov	rax, qword ptr [rbp - 0xb8]
0x400117:	mov	rdi, rax
0x40011a:	call	0x400000
<Block for 0x40011f, 16 bytes>
0x40011f:	nop	
0x400120:	mov	rax, qword ptr [rbp - 8]
0x400124:	xor	rax, qword ptr fs:[0x28]
0x40012d:	je	0x400134
<Block for 0x400134, 2 bytes>
0x400134:	leave	
0x400135:	ret	
<Block for 0x40012f, 5 bytes>
0x40012f:	call	0x500018
