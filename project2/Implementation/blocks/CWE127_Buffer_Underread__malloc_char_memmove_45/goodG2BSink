<Block for 0x4000f7, 60 bytes>
0x4000f7:	endbr64	
0x4000fb:	push	rbp
0x4000fc:	mov	rbp, rsp
0x4000ff:	add	rsp, -0x80
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	mov	rax, qword ptr [rip + 0xef]
0x400119:	mov	qword ptr [rbp - 0x78], rax
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x400133, 28 bytes>
0x400133:	mov	byte ptr [rbp - 0xd], 0
0x400137:	mov	rcx, qword ptr [rbp - 0x78]
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	edx, 0x64
0x400144:	mov	rsi, rcx
0x400147:	mov	rdi, rax
0x40014a:	call	0x500008
<Block for 0x40014f, 16 bytes>
0x40014f:	mov	byte ptr [rbp - 0xd], 0
0x400153:	lea	rax, [rbp - 0x70]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500010
<Block for 0x40015f, 16 bytes>
0x40015f:	nop	
0x400160:	mov	rax, qword ptr [rbp - 8]
0x400164:	xor	rax, qword ptr fs:[0x28]
0x40016d:	je	0x400174
<Block for 0x400174, 2 bytes>
0x400174:	leave	
0x400175:	ret	
<Block for 0x40016f, 5 bytes>
0x40016f:	call	0x500018
