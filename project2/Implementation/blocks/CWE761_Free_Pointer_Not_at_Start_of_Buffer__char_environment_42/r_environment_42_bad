<Block for 0x400063, 22 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	mov	edi, 0x64
0x400074:	call	0x500018
<Block for 0x400079, 11 bytes>
0x400079:	mov	qword ptr [rbp - 8], rax
0x40007d:	cmp	qword ptr [rbp - 8], 0
0x400082:	jne	0x40008e
<Block for 0x400084, 10 bytes>
0x400084:	mov	edi, 0xffffffff
0x400089:	call	0x500020
<Block for 0x40008e, 19 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 8]
0x400092:	mov	byte ptr [rax], 0
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	mov	rdi, rax
0x40009c:	call	0x400000
<Block for 0x4000a1, 6 bytes>
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	jmp	0x4000c5
<Block for 0x4000c5, 11 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	movzx	eax, byte ptr [rax]
0x4000cc:	test	al, al
0x4000ce:	jne	0x4000a7
<Block for 0x4000d0, 12 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500030
<Block for 0x4000a7, 11 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	movzx	eax, byte ptr [rax]
0x4000ae:	cmp	al, 0x53
0x4000b0:	jne	0x4000c0
<Block for 0x4000dc, 3 bytes>
0x4000dc:	nop	
0x4000dd:	leave	
0x4000de:	ret	
<Block for 0x4000b2, 12 bytes>
0x4000b2:	lea	rdi, [rip + 0x134]
0x4000b9:	call	0x500028
<Block for 0x4000c0, 16 bytes>
0x4000c0:	add	qword ptr [rbp - 8], 1
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	movzx	eax, byte ptr [rax]
0x4000cc:	test	al, al
0x4000ce:	jne	0x4000a7
<Block for 0x4000be, 2 bytes>
0x4000be:	jmp	0x4000d0
