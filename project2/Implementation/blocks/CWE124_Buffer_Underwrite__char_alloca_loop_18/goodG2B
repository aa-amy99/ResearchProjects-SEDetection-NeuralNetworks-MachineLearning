<Block for 0x40015d, 84 bytes>
0x40015d:	endbr64	
0x400161:	push	rbp
0x400162:	mov	rbp, rsp
0x400165:	sub	rsp, 0x90
0x40016c:	mov	rax, qword ptr fs:[0x28]
0x400175:	mov	qword ptr [rbp - 8], rax
0x400179:	xor	eax, eax
0x40017b:	mov	eax, 0x10
0x400180:	sub	rax, 1
0x400184:	add	rax, 0x6c
0x400188:	mov	esi, 0x10
0x40018d:	mov	edx, 0
0x400192:	div	rsi
0x400195:	imul	rax, rax, 0x10
0x400199:	mov	rdx, rax
0x40019c:	and	rdx, 0xfffffffffffff000
0x4001a3:	mov	rcx, rsp
0x4001a6:	sub	rcx, rdx
0x4001a9:	mov	rdx, rcx
0x4001ac:	cmp	rsp, rdx
0x4001af:	je	0x4001c3
<Block for 0x4001c3, 26 bytes>
0x4001c3:	mov	rdx, rax
0x4001c6:	and	edx, 0xfff
0x4001cc:	sub	rsp, rdx
0x4001cf:	mov	rdx, rax
0x4001d2:	and	edx, 0xfff
0x4001d8:	test	rdx, rdx
0x4001db:	je	0x4001ed
<Block for 0x4001b1, 18 bytes>
0x4001b1:	sub	rsp, 0x1000
0x4001b8:	or	qword ptr [rsp + 0xff8], 0
0x4001c1:	jmp	0x4001ac
<Block for 0x4001ed, 41 bytes>
0x4001ed:	mov	rax, rsp
0x4001f0:	add	rax, 0xf
0x4001f4:	shr	rax, 4
0x4001f8:	shl	rax, 4
0x4001fc:	mov	qword ptr [rbp - 0x80], rax
0x400200:	mov	rax, qword ptr [rbp - 0x80]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001dd, 57 bytes>
0x4001dd:	and	eax, 0xfff
0x4001e2:	sub	rax, 8
0x4001e6:	add	rax, rsp
0x4001e9:	or	qword ptr [rax], 0
0x4001ed:	mov	rax, rsp
0x4001f0:	add	rax, 0xf
0x4001f4:	shr	rax, 4
0x4001f8:	shl	rax, 4
0x4001fc:	mov	qword ptr [rbp - 0x80], rax
0x400200:	mov	rax, qword ptr [rbp - 0x80]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001ac, 5 bytes>
0x4001ac:	cmp	rsp, rdx
0x4001af:	je	0x4001c3
<Block for 0x400216, 46 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x80]
0x40021a:	add	rax, 0x63
0x40021e:	mov	byte ptr [rax], 0
0x400221:	nop	
0x400222:	endbr64	
0x400226:	mov	rax, qword ptr [rbp - 0x80]
0x40022a:	mov	qword ptr [rbp - 0x78], rax
0x40022e:	lea	rax, [rbp - 0x70]
0x400232:	mov	edx, 0x63
0x400237:	mov	esi, 0x43
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500000
<Block for 0x400244, 17 bytes>
0x400244:	mov	byte ptr [rbp - 0xd], 0
0x400248:	mov	qword ptr [rbp - 0x88], 0
0x400253:	jmp	0x40027e
<Block for 0x40027e, 10 bytes>
0x40027e:	cmp	qword ptr [rbp - 0x88], 0x63
0x400286:	jbe	0x400255
<Block for 0x400255, 51 bytes>
0x400255:	mov	rdx, qword ptr [rbp - 0x78]
0x400259:	mov	rax, qword ptr [rbp - 0x88]
0x400260:	add	rdx, rax
0x400263:	lea	rcx, [rbp - 0x70]
0x400267:	mov	rax, qword ptr [rbp - 0x88]
0x40026e:	add	rax, rcx
0x400271:	movzx	eax, byte ptr [rax]
0x400274:	mov	byte ptr [rdx], al
0x400276:	add	qword ptr [rbp - 0x88], 1
0x40027e:	cmp	qword ptr [rbp - 0x88], 0x63
0x400286:	jbe	0x400255
<Block for 0x400288, 23 bytes>
0x400288:	mov	rax, qword ptr [rbp - 0x78]
0x40028c:	add	rax, 0x63
0x400290:	mov	byte ptr [rax], 0
0x400293:	mov	rax, qword ptr [rbp - 0x78]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500008
<Block for 0x40029f, 16 bytes>
0x40029f:	nop	
0x4002a0:	mov	rax, qword ptr [rbp - 8]
0x4002a4:	xor	rax, qword ptr fs:[0x28]
0x4002ad:	je	0x4002b4
<Block for 0x4002b4, 2 bytes>
0x4002b4:	leave	
0x4002b5:	ret	
<Block for 0x4002af, 5 bytes>
0x4002af:	call	0x500010
