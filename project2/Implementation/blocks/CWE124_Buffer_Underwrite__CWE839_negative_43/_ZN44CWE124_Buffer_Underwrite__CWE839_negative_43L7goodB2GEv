<Block for 0x4001c9, 46 bytes>
0x4001c9:	endbr64	
0x4001cd:	push	rbp
0x4001ce:	mov	rbp, rsp
0x4001d1:	sub	rsp, 0x40
0x4001d5:	mov	rax, qword ptr fs:[0x28]
0x4001de:	mov	qword ptr [rbp - 8], rax
0x4001e2:	xor	eax, eax
0x4001e4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001eb:	lea	rax, [rbp - 0x38]
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x4001b0
<Block for 0x4001f7, 47 bytes>
0x4001f7:	mov	qword ptr [rbp - 0x30], 0
0x4001ff:	mov	qword ptr [rbp - 0x28], 0
0x400207:	mov	qword ptr [rbp - 0x20], 0
0x40020f:	mov	qword ptr [rbp - 0x18], 0
0x400217:	mov	qword ptr [rbp - 0x10], 0
0x40021f:	mov	eax, dword ptr [rbp - 0x38]
0x400222:	test	eax, eax
0x400224:	js	0x40025e
<Block for 0x40025e, 12 bytes>
0x40025e:	lea	rdi, [rip + 0x63]
0x400265:	call	0x500008
<Block for 0x400226, 8 bytes>
0x400226:	mov	eax, dword ptr [rbp - 0x38]
0x400229:	cmp	eax, 9
0x40022c:	jg	0x40025e
<Block for 0x40026a, 2 bytes>
0x40026a:	jmp	0x40027b
<Block for 0x40022e, 26 bytes>
0x40022e:	mov	eax, dword ptr [rbp - 0x38]
0x400231:	cdqe	
0x400233:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40023b:	mov	dword ptr [rbp - 0x34], 0
0x400242:	cmp	dword ptr [rbp - 0x34], 9
0x400246:	jg	0x40026c
<Block for 0x40027b, 15 bytes>
0x40027b:	mov	rax, qword ptr [rbp - 8]
0x40027f:	xor	rax, qword ptr fs:[0x28]
0x400288:	je	0x40028f
<Block for 0x400248, 16 bytes>
0x400248:	mov	eax, dword ptr [rbp - 0x34]
0x40024b:	cdqe	
0x40024d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400251:	mov	edi, eax
0x400253:	call	0x500000
<Block for 0x40026c, 3 bytes>
0x40026c:	nop	
0x40026d:	jmp	0x40027b
<Block for 0x40028f, 2 bytes>
0x40028f:	leave	
0x400290:	ret	
<Block for 0x40028a, 5 bytes>
0x40028a:	call	0x500018
<Block for 0x400258, 6 bytes>
0x400258:	add	dword ptr [rbp - 0x34], 1
0x40025c:	jmp	0x400242
<Block for 0x400242, 6 bytes>
0x400242:	cmp	dword ptr [rbp - 0x34], 9
0x400246:	jg	0x40026c
