<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	rax, qword ptr [rbp - 0x88]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 19 bytes>
0x40009f:	mov	qword ptr [rbp - 0x80], rax
0x4000a3:	mov	eax, 0x64
0x4000a8:	sub	rax, qword ptr [rbp - 0x80]
0x4000ac:	cmp	rax, 1
0x4000b0:	jbe	0x40012b
<Block for 0x40012b, 35 bytes>
0x40012b:	nop	
0x40012c:	lea	rdx, [rbp - 0x94]
0x400133:	mov	rax, qword ptr [rbp - 0x88]
0x40013a:	lea	rsi, [rip + 0x362]
0x400141:	mov	rdi, rax
0x400144:	mov	eax, 0
0x400149:	call	0x500028
<Block for 0x4000b2, 19 bytes>
0x4000b2:	lea	rsi, [rip + 0x3cb]
0x4000b9:	lea	rdi, [rip + 0x3c6]
0x4000c0:	call	0x500008
<Block for 0x40014e, 5 bytes>
0x40014e:	cmp	eax, 1
0x400151:	jne	0x400192
<Block for 0x4000c5, 11 bytes>
0x4000c5:	mov	qword ptr [rbp - 0x78], rax
0x4000c9:	cmp	qword ptr [rbp - 0x78], 0
0x4000ce:	je	0x40012b
<Block for 0x400153, 22 bytes>
0x400153:	mov	dword ptr [rbp - 0x8c], 0
0x40015d:	mov	dword ptr [rbp - 0x90], 0
0x400167:	jmp	0x400177
<Block for 0x400192, 17 bytes>
0x400192:	nop	
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4000d0, 45 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x80]
0x4000d4:	mov	edx, 0x64
0x4000d9:	sub	edx, eax
0x4000db:	mov	eax, edx
0x4000dd:	mov	esi, eax
0x4000df:	mov	rdx, qword ptr [rbp - 0x88]
0x4000e6:	mov	rax, qword ptr [rbp - 0x80]
0x4000ea:	lea	rcx, [rdx + rax]
0x4000ee:	mov	rax, qword ptr [rbp - 0x78]
0x4000f2:	mov	rdx, rax
0x4000f5:	mov	rdi, rcx
0x4000f8:	call	0x500010
<Block for 0x400177, 14 bytes>
0x400177:	mov	eax, dword ptr [rbp - 0x94]
0x40017d:	cmp	dword ptr [rbp - 0x90], eax
0x400183:	jl	0x400169
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500038
<Block for 0x4000fd, 5 bytes>
0x4000fd:	test	rax, rax
0x400100:	jne	0x40011f
<Block for 0x400169, 28 bytes>
0x400169:	add	dword ptr [rbp - 0x8c], 1
0x400170:	add	dword ptr [rbp - 0x90], 1
0x400177:	mov	eax, dword ptr [rbp - 0x94]
0x40017d:	cmp	dword ptr [rbp - 0x90], eax
0x400183:	jl	0x400169
<Block for 0x400185, 13 bytes>
0x400185:	mov	eax, dword ptr [rbp - 0x8c]
0x40018b:	mov	edi, eax
0x40018d:	call	0x500030
<Block for 0x400102, 12 bytes>
0x400102:	lea	rdi, [rip + 0x38b]
0x400109:	call	0x500018
<Block for 0x40011f, 12 bytes>
0x40011f:	mov	rax, qword ptr [rbp - 0x78]
0x400123:	mov	rdi, rax
0x400126:	call	0x500020
<Block for 0x40010e, 29 bytes>
0x40010e:	mov	rdx, qword ptr [rbp - 0x88]
0x400115:	mov	rax, qword ptr [rbp - 0x80]
0x400119:	add	rax, rdx
0x40011c:	mov	byte ptr [rax], 0
0x40011f:	mov	rax, qword ptr [rbp - 0x78]
0x400123:	mov	rdi, rax
0x400126:	call	0x500020
