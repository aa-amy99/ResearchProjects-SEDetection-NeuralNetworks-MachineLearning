<Block for 0x4000c8, 72 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0xa0
0x4000d7:	mov	qword ptr [rbp - 0x98], rdi
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	dword ptr [rbp - 0x84], 2
0x4000f7:	lea	rdx, [rbp - 0x84]
0x4000fe:	mov	rax, qword ptr [rbp - 0x98]
0x400105:	mov	rsi, rdx
0x400108:	mov	rdi, rax
0x40010b:	call	0x4001bc
<Block for 0x400110, 29 bytes>
0x400110:	mov	rax, qword ptr [rax]
0x400113:	mov	qword ptr [rbp - 0x78], rax
0x400117:	lea	rax, [rbp - 0x70]
0x40011b:	mov	edx, 0x63
0x400120:	mov	esi, 0x43
0x400125:	mov	rdi, rax
0x400128:	call	0x500000
<Block for 0x40012d, 19 bytes>
0x40012d:	mov	byte ptr [rbp - 0xd], 0
0x400131:	mov	qword ptr [rbp - 0x80], 0
0x400139:	cmp	qword ptr [rbp - 0x80], 0x63
0x40013e:	ja	0x400162
<Block for 0x400140, 34 bytes>
0x400140:	mov	rdx, qword ptr [rbp - 0x78]
0x400144:	mov	rax, qword ptr [rbp - 0x80]
0x400148:	add	rdx, rax
0x40014b:	lea	rcx, [rbp - 0x70]
0x40014f:	mov	rax, qword ptr [rbp - 0x80]
0x400153:	add	rax, rcx
0x400156:	movzx	eax, byte ptr [rax]
0x400159:	mov	byte ptr [rdx], al
0x40015b:	add	qword ptr [rbp - 0x80], 1
0x400160:	jmp	0x400139
<Block for 0x400162, 23 bytes>
0x400162:	mov	rax, qword ptr [rbp - 0x78]
0x400166:	add	rax, 0x63
0x40016a:	mov	byte ptr [rax], 0
0x40016d:	mov	rax, qword ptr [rbp - 0x78]
0x400171:	mov	rdi, rax
0x400174:	call	0x500008
<Block for 0x400139, 7 bytes>
0x400139:	cmp	qword ptr [rbp - 0x80], 0x63
0x40013e:	ja	0x400162
<Block for 0x400179, 16 bytes>
0x400179:	nop	
0x40017a:	mov	rax, qword ptr [rbp - 8]
0x40017e:	xor	rax, qword ptr fs:[0x28]
0x400187:	je	0x40018e
<Block for 0x40018e, 2 bytes>
0x40018e:	leave	
0x40018f:	ret	
<Block for 0x400189, 5 bytes>
0x400189:	call	0x500010
