<Block for 0x4000dc, 37 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x20
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	eax, 0
0x4000fc:	call	0x500018
<Block for 0x400101, 4 bytes>
0x400101:	test	eax, eax
0x400103:	je	0x400116
<Block for 0x400116, 54 bytes>
0x400116:	mov	eax, 0x10
0x40011b:	sub	rax, 1
0x40011f:	add	rax, 0xc
0x400123:	mov	esi, 0x10
0x400128:	mov	edx, 0
0x40012d:	div	rsi
0x400130:	imul	rax, rax, 0x10
0x400134:	mov	rdx, rax
0x400137:	and	rdx, 0xfffffffffffff000
0x40013e:	mov	rcx, rsp
0x400141:	sub	rcx, rdx
0x400144:	mov	rdx, rcx
0x400147:	cmp	rsp, rdx
0x40014a:	je	0x40015e
<Block for 0x400105, 12 bytes>
0x400105:	lea	rdi, [rip + 0x1d4]
0x40010c:	call	0x500020
<Block for 0x40015e, 26 bytes>
0x40015e:	mov	rdx, rax
0x400161:	and	edx, 0xfff
0x400167:	sub	rsp, rdx
0x40016a:	mov	rdx, rax
0x40016d:	and	edx, 0xfff
0x400173:	test	rdx, rdx
0x400176:	je	0x400188
<Block for 0x40014c, 18 bytes>
0x40014c:	sub	rsp, 0x1000
0x400153:	or	qword ptr [rsp + 0xff8], 0
0x40015c:	jmp	0x400147
<Block for 0x400111, 5 bytes>
0x400111:	jmp	0x4001be
<Block for 0x400188, 54 bytes>
0x400188:	mov	rax, rsp
0x40018b:	add	rax, 0xf
0x40018f:	shr	rax, 4
0x400193:	shl	rax, 4
0x400197:	mov	qword ptr [rbp - 0x10], rax
0x40019b:	mov	dword ptr [rbp - 0x18], 5
0x4001a2:	mov	rax, qword ptr [rbp - 0x10]
0x4001a6:	mov	edx, dword ptr [rbp - 0x18]
0x4001a9:	mov	dword ptr [rax], edx
0x4001ab:	mov	rax, qword ptr [rbp - 0x10]
0x4001af:	mov	eax, dword ptr [rax]
0x4001b1:	mov	dword ptr [rbp - 0x14], eax
0x4001b4:	mov	eax, dword ptr [rbp - 0x14]
0x4001b7:	mov	edi, eax
0x4001b9:	call	0x500008
<Block for 0x400178, 70 bytes>
0x400178:	and	eax, 0xfff
0x40017d:	sub	rax, 8
0x400181:	add	rax, rsp
0x400184:	or	qword ptr [rax], 0
0x400188:	mov	rax, rsp
0x40018b:	add	rax, 0xf
0x40018f:	shr	rax, 4
0x400193:	shl	rax, 4
0x400197:	mov	qword ptr [rbp - 0x10], rax
0x40019b:	mov	dword ptr [rbp - 0x18], 5
0x4001a2:	mov	rax, qword ptr [rbp - 0x10]
0x4001a6:	mov	edx, dword ptr [rbp - 0x18]
0x4001a9:	mov	dword ptr [rax], edx
0x4001ab:	mov	rax, qword ptr [rbp - 0x10]
0x4001af:	mov	eax, dword ptr [rax]
0x4001b1:	mov	dword ptr [rbp - 0x14], eax
0x4001b4:	mov	eax, dword ptr [rbp - 0x14]
0x4001b7:	mov	edi, eax
0x4001b9:	call	0x500008
<Block for 0x400147, 5 bytes>
0x400147:	cmp	rsp, rdx
0x40014a:	je	0x40015e
<Block for 0x4001be, 16 bytes>
0x4001be:	nop	
0x4001bf:	mov	rax, qword ptr [rbp - 8]
0x4001c3:	xor	rax, qword ptr fs:[0x28]
0x4001cc:	je	0x4001d3
<Block for 0x4001d3, 2 bytes>
0x4001d3:	leave	
0x4001d4:	ret	
<Block for 0x4001ce, 5 bytes>
0x4001ce:	call	0x500010
