<Block for 0x40015d, 22 bytes>
0x40015d:	endbr64	
0x400161:	push	rbp
0x400162:	mov	rbp, rsp
0x400165:	sub	rsp, 0x10
0x400169:	mov	eax, 0
0x40016e:	call	0x500000
<Block for 0x400173, 8 bytes>
0x400173:	test	eax, eax
0x400175:	je	0x400203
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500008
<Block for 0x400203, 1 bytes>
0x400203:	nop	
<Block for 0x400180, 55 bytes>
0x400180:	mov	edx, eax
0x400182:	movsxd	rax, edx
0x400185:	imul	rax, rax, 0x55555556
0x40018c:	shr	rax, 0x20
0x400190:	mov	rcx, rax
0x400193:	mov	eax, edx
0x400195:	sar	eax, 0x1f
0x400198:	mov	esi, ecx
0x40019a:	sub	esi, eax
0x40019c:	mov	eax, esi
0x40019e:	mov	dword ptr [rbp - 4], eax
0x4001a1:	mov	ecx, dword ptr [rbp - 4]
0x4001a4:	mov	eax, ecx
0x4001a6:	add	eax, eax
0x4001a8:	add	eax, ecx
0x4001aa:	sub	edx, eax
0x4001ac:	mov	eax, edx
0x4001ae:	mov	dword ptr [rbp - 4], eax
0x4001b1:	cmp	dword ptr [rbp - 4], 2
0x4001b5:	je	0x4001e7
<Block for 0x400204, 3 bytes>
0x400204:	nop	
0x400205:	leave	
0x400206:	ret	
<Block for 0x4001e7, 12 bytes>
0x4001e7:	lea	rdi, [rip + 0x3c]
0x4001ee:	call	0x500010
<Block for 0x4001b7, 6 bytes>
0x4001b7:	cmp	dword ptr [rbp - 4], 2
0x4001bb:	jg	0x4001f5
<Block for 0x4001f3, 2 bytes>
0x4001f3:	jmp	0x400204
<Block for 0x4001bd, 6 bytes>
0x4001bd:	cmp	dword ptr [rbp - 4], 0
0x4001c1:	je	0x4001cb
<Block for 0x4001f5, 12 bytes>
0x4001f5:	lea	rdi, [rip + 0x30]
0x4001fc:	call	0x500010
<Block for 0x4001cb, 12 bytes>
0x4001cb:	lea	rdi, [rip + 0x54]
0x4001d2:	call	0x500010
<Block for 0x4001c3, 6 bytes>
0x4001c3:	cmp	dword ptr [rbp - 4], 1
0x4001c7:	je	0x4001d9
<Block for 0x400201, 2 bytes>
0x400201:	jmp	0x400204
<Block for 0x4001d7, 2 bytes>
0x4001d7:	jmp	0x400204
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rdi, [rip + 0x48]
0x4001e0:	call	0x500010
<Block for 0x4001c9, 2 bytes>
0x4001c9:	jmp	0x4001f5
<Block for 0x4001e5, 2 bytes>
0x4001e5:	jmp	0x400204
