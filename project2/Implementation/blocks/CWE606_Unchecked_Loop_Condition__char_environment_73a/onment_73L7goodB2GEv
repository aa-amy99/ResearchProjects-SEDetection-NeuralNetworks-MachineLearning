<Block for 0x40038b, 46 bytes>
0x40038b:	endbr64	
0x40038f:	push	rbp
0x400390:	mov	rbp, rsp
0x400393:	push	rbx
0x400394:	sub	rsp, 0xd8
0x40039b:	mov	rax, qword ptr fs:[0x28]
0x4003a4:	mov	qword ptr [rbp - 0x18], rax
0x4003a8:	xor	eax, eax
0x4003aa:	lea	rax, [rbp - 0xc0]
0x4003b1:	mov	rdi, rax
0x4003b4:	call	0x400642
<Block for 0x4003b9, 129 bytes>
0x4003b9:	mov	qword ptr [rbp - 0x80], 0
0x4003c1:	mov	qword ptr [rbp - 0x78], 0
0x4003c9:	mov	qword ptr [rbp - 0x70], 0
0x4003d1:	mov	qword ptr [rbp - 0x68], 0
0x4003d9:	mov	qword ptr [rbp - 0x60], 0
0x4003e1:	mov	qword ptr [rbp - 0x58], 0
0x4003e9:	mov	qword ptr [rbp - 0x50], 0
0x4003f1:	mov	qword ptr [rbp - 0x48], 0
0x4003f9:	mov	qword ptr [rbp - 0x40], 0
0x400401:	mov	qword ptr [rbp - 0x38], 0
0x400409:	mov	qword ptr [rbp - 0x30], 0
0x400411:	mov	qword ptr [rbp - 0x28], 0
0x400419:	mov	dword ptr [rbp - 0x20], 0
0x400420:	lea	rax, [rbp - 0x80]
0x400424:	mov	qword ptr [rbp - 0xd8], rax
0x40042b:	mov	rax, qword ptr [rbp - 0xd8]
0x400432:	mov	rdi, rax
0x400435:	call	0x500000
<Block for 0x40043a, 19 bytes>
0x40043a:	mov	qword ptr [rbp - 0xd0], rax
0x400441:	lea	rdi, [rip + 0x15f]
0x400448:	call	0x500008
<Block for 0x40044d, 17 bytes>
0x40044d:	mov	qword ptr [rbp - 0xc8], rax
0x400454:	cmp	qword ptr [rbp - 0xc8], 0
0x40045c:	je	0x400490
<Block for 0x400490, 25 bytes>
0x400490:	lea	rdx, [rbp - 0xd8]
0x400497:	lea	rax, [rbp - 0xc0]
0x40049e:	mov	rsi, rdx
0x4004a1:	mov	rdi, rax
0x4004a4:	call	0x400750
<Block for 0x40045e, 50 bytes>
0x40045e:	mov	eax, 0x63
0x400463:	sub	rax, qword ptr [rbp - 0xd0]
0x40046a:	mov	rdx, rax
0x40046d:	mov	rcx, qword ptr [rbp - 0xd8]
0x400474:	mov	rax, qword ptr [rbp - 0xd0]
0x40047b:	add	rcx, rax
0x40047e:	mov	rax, qword ptr [rbp - 0xc8]
0x400485:	mov	rsi, rax
0x400488:	mov	rdi, rcx
0x40048b:	call	0x500010
<Block for 0x4004a9, 25 bytes>
0x4004a9:	lea	rdx, [rbp - 0xd8]
0x4004b0:	lea	rax, [rbp - 0xc0]
0x4004b7:	mov	rsi, rdx
0x4004ba:	mov	rdi, rax
0x4004bd:	call	0x400750
<Block for 0x4004c2, 25 bytes>
0x4004c2:	lea	rdx, [rbp - 0xd8]
0x4004c9:	lea	rax, [rbp - 0xc0]
0x4004d0:	mov	rsi, rdx
0x4004d3:	mov	rdi, rax
0x4004d6:	call	0x400750
<Block for 0x4004db, 25 bytes>
0x4004db:	lea	rdx, [rbp - 0xc0]
0x4004e2:	lea	rax, [rbp - 0xa0]
0x4004e9:	mov	rsi, rdx
0x4004ec:	mov	rdi, rax
0x4004ef:	call	0x40078a
<Block for 0x4004f4, 15 bytes>
0x4004f4:	lea	rax, [rbp - 0xa0]
0x4004fb:	mov	rdi, rax
0x4004fe:	call	0x500038
<Block for 0x400503, 15 bytes>
0x400503:	lea	rax, [rbp - 0xa0]
0x40050a:	mov	rdi, rax
0x40050d:	call	0x400662
<Block for 0x400512, 15 bytes>
0x400512:	lea	rax, [rbp - 0xc0]
0x400519:	mov	rdi, rax
0x40051c:	call	0x400662
<Block for 0x400521, 16 bytes>
0x400521:	nop	
0x400522:	mov	rax, qword ptr [rbp - 0x18]
0x400526:	xor	rax, qword ptr fs:[0x28]
0x40052f:	je	0x400571
<Block for 0x400571, 10 bytes>
0x400571:	add	rsp, 0xd8
0x400578:	pop	rbx
0x400579:	pop	rbp
0x40057a:	ret	
<Block for 0x400531, 2 bytes>
0x400531:	jmp	0x40056c
<Block for 0x40056c, 5 bytes>
0x40056c:	call	0x500028
