<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xd8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400642
<Block for 0x40002e, 129 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xd8], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500000
<Block for 0x4000af, 19 bytes>
0x4000af:	mov	qword ptr [rbp - 0xd0], rax
0x4000b6:	lea	rdi, [rip + 0x4ea]
0x4000bd:	call	0x500008
<Block for 0x4000c2, 17 bytes>
0x4000c2:	mov	qword ptr [rbp - 0xc8], rax
0x4000c9:	cmp	qword ptr [rbp - 0xc8], 0
0x4000d1:	je	0x400105
<Block for 0x400105, 25 bytes>
0x400105:	lea	rdx, [rbp - 0xd8]
0x40010c:	lea	rax, [rbp - 0xc0]
0x400113:	mov	rsi, rdx
0x400116:	mov	rdi, rax
0x400119:	call	0x400750
<Block for 0x4000d3, 50 bytes>
0x4000d3:	mov	eax, 0x63
0x4000d8:	sub	rax, qword ptr [rbp - 0xd0]
0x4000df:	mov	rdx, rax
0x4000e2:	mov	rcx, qword ptr [rbp - 0xd8]
0x4000e9:	mov	rax, qword ptr [rbp - 0xd0]
0x4000f0:	add	rcx, rax
0x4000f3:	mov	rax, qword ptr [rbp - 0xc8]
0x4000fa:	mov	rsi, rax
0x4000fd:	mov	rdi, rcx
0x400100:	call	0x500010
<Block for 0x40011e, 25 bytes>
0x40011e:	lea	rdx, [rbp - 0xd8]
0x400125:	lea	rax, [rbp - 0xc0]
0x40012c:	mov	rsi, rdx
0x40012f:	mov	rdi, rax
0x400132:	call	0x400750
<Block for 0x400137, 25 bytes>
0x400137:	lea	rdx, [rbp - 0xd8]
0x40013e:	lea	rax, [rbp - 0xc0]
0x400145:	mov	rsi, rdx
0x400148:	mov	rdi, rax
0x40014b:	call	0x400750
<Block for 0x400150, 25 bytes>
0x400150:	lea	rdx, [rbp - 0xc0]
0x400157:	lea	rax, [rbp - 0xa0]
0x40015e:	mov	rsi, rdx
0x400161:	mov	rdi, rax
0x400164:	call	0x40078a
<Block for 0x400169, 15 bytes>
0x400169:	lea	rax, [rbp - 0xa0]
0x400170:	mov	rdi, rax
0x400173:	call	0x500018
<Block for 0x400178, 15 bytes>
0x400178:	lea	rax, [rbp - 0xa0]
0x40017f:	mov	rdi, rax
0x400182:	call	0x400662
<Block for 0x400187, 15 bytes>
0x400187:	lea	rax, [rbp - 0xc0]
0x40018e:	mov	rdi, rax
0x400191:	call	0x400662
<Block for 0x400196, 16 bytes>
0x400196:	nop	
0x400197:	mov	rax, qword ptr [rbp - 0x18]
0x40019b:	xor	rax, qword ptr fs:[0x28]
0x4001a4:	je	0x4001e6
<Block for 0x4001e6, 10 bytes>
0x4001e6:	add	rsp, 0xd8
0x4001ed:	pop	rbx
0x4001ee:	pop	rbp
0x4001ef:	ret	
<Block for 0x4001a6, 2 bytes>
0x4001a6:	jmp	0x4001e1
<Block for 0x4001e1, 5 bytes>
0x4001e1:	call	0x500028
