<Block for 0x400078, 97 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x30
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	mov	dword ptr [rbp - 0x20], 1
0x40009a:	mov	dword ptr [rbp - 0x1c], 2
0x4000a1:	mov	dword ptr [rbp - 0x18], 3
0x4000a8:	mov	dword ptr [rbp - 0x14], 4
0x4000af:	mov	dword ptr [rbp - 0x10], 5
0x4000b6:	lea	rax, [rbp - 0x20]
0x4000ba:	mov	qword ptr [rbp - 0x28], rax
0x4000be:	mov	rax, qword ptr [rbp - 0x28]
0x4000c2:	add	rax, 8
0x4000c6:	movzx	eax, byte ptr [rax]
0x4000c9:	movsx	eax, al
0x4000cc:	mov	dword ptr [rbp - 0x2c], eax
0x4000cf:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d2:	mov	edi, eax
0x4000d4:	call	0x500000
<Block for 0x4000d9, 16 bytes>
0x4000d9:	nop	
0x4000da:	mov	rax, qword ptr [rbp - 8]
0x4000de:	xor	rax, qword ptr fs:[0x28]
0x4000e7:	je	0x4000ee
<Block for 0x4000ee, 2 bytes>
0x4000ee:	leave	
0x4000ef:	ret	
<Block for 0x4000e9, 5 bytes>
0x4000e9:	call	0x500008
