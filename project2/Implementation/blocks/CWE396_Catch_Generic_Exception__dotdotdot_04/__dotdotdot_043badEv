<Block for 0x400000, 16 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	call	0x500000
<Block for 0x400010, 12 bytes>
0x400010:	and	eax, 1
0x400013:	test	eax, eax
0x400015:	sete	al
0x400018:	test	al, al
0x40001a:	je	0x400051
<Block for 0x400051, 5 bytes>
0x400051:	call	0x500000
<Block for 0x40001c, 10 bytes>
0x40001c:	mov	edi, 0x10
0x400021:	call	0x500008
<Block for 0x400056, 12 bytes>
0x400056:	and	eax, 1
0x400059:	test	eax, eax
0x40005b:	sete	al
0x40005e:	test	al, al
0x400060:	je	0x400097
<Block for 0x400026, 18 bytes>
0x400026:	mov	rbx, rax
0x400029:	lea	rsi, [rip + 0x3dc]
0x400030:	mov	rdi, rbx
0x400033:	call	0x500010
<Block for 0x400097, 12 bytes>
0x400097:	lea	rdi, [rip + 0x378]
0x40009e:	call	0x500058
<Block for 0x400062, 10 bytes>
0x400062:	mov	edi, 0x10
0x400067:	call	0x500008
<Block for 0x400038, 25 bytes>
0x400038:	mov	rax, qword ptr [rip + 0xfffe1]
0x40003f:	mov	rdx, rax
0x400042:	lea	rsi, [rip + 0xfffdf]
0x400049:	mov	rdi, rbx
0x40004c:	call	0x500030
<Block for 0x4000a3, 2 bytes>
0x4000a3:	jmp	0x400103
<Block for 0x40006c, 18 bytes>
0x40006c:	mov	rbx, rax
0x40006f:	lea	rsi, [rip + 0x39b]
0x400076:	mov	rdi, rbx
0x400079:	call	0x500038
<Block for 0x400103, 5 bytes>
0x400103:	pop	rbx
0x400104:	pop	r12
0x400106:	pop	rbp
0x400107:	ret	
<Block for 0x40007e, 25 bytes>
0x40007e:	mov	rax, qword ptr [rip + 0xfffc3]
0x400085:	mov	rdx, rax
0x400088:	lea	rsi, [rip + 0xfffc1]
0x40008f:	mov	rdi, rbx
0x400092:	call	0x500030
