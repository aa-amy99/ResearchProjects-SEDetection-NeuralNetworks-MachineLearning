<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000ca
<Block for 0x4000ca, 54 bytes>
0x4000ca:	mov	eax, 0x10
0x4000cf:	sub	rax, 1
0x4000d3:	add	rax, 0xc
0x4000d7:	mov	ecx, 0x10
0x4000dc:	mov	edx, 0
0x4000e1:	div	rcx
0x4000e4:	imul	rax, rax, 0x10
0x4000e8:	mov	rdx, rax
0x4000eb:	and	rdx, 0xfffffffffffff000
0x4000f2:	mov	rsi, rsp
0x4000f5:	sub	rsi, rdx
0x4000f8:	mov	rdx, rsi
0x4000fb:	cmp	rsp, rdx
0x4000fe:	je	0x400112
<Block for 0x40002d, 54 bytes>
0x40002d:	mov	eax, 0x10
0x400032:	sub	rax, 1
0x400036:	add	rax, 0xc
0x40003a:	mov	edi, 0x10
0x40003f:	mov	edx, 0
0x400044:	div	rdi
0x400047:	imul	rax, rax, 0x10
0x40004b:	mov	rdx, rax
0x40004e:	and	rdx, 0xfffffffffffff000
0x400055:	mov	rcx, rsp
0x400058:	sub	rcx, rdx
0x40005b:	mov	rdx, rcx
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400112, 26 bytes>
0x400112:	mov	rdx, rax
0x400115:	and	edx, 0xfff
0x40011b:	sub	rsp, rdx
0x40011e:	mov	rdx, rax
0x400121:	and	edx, 0xfff
0x400127:	test	rdx, rdx
0x40012a:	je	0x40013c
<Block for 0x400100, 18 bytes>
0x400100:	sub	rsp, 0x1000
0x400107:	or	qword ptr [rsp + 0xff8], 0
0x400110:	jmp	0x4000fb
<Block for 0x400075, 26 bytes>
0x400075:	mov	rdx, rax
0x400078:	and	edx, 0xfff
0x40007e:	sub	rsp, rdx
0x400081:	mov	rdx, rax
0x400084:	and	edx, 0xfff
0x40008a:	test	rdx, rdx
0x40008d:	je	0x40009f
<Block for 0x400063, 18 bytes>
0x400063:	sub	rsp, 0x1000
0x40006a:	or	qword ptr [rsp + 0xff8], 0
0x400073:	jmp	0x40005e
<Block for 0x40013c, 54 bytes>
0x40013c:	mov	rax, rsp
0x40013f:	add	rax, 0xf
0x400143:	shr	rax, 4
0x400147:	shl	rax, 4
0x40014b:	mov	qword ptr [rbp - 0x18], rax
0x40014f:	mov	dword ptr [rbp - 0x24], 5
0x400156:	mov	rax, qword ptr [rbp - 0x18]
0x40015a:	mov	edx, dword ptr [rbp - 0x24]
0x40015d:	mov	dword ptr [rax], edx
0x40015f:	mov	rax, qword ptr [rbp - 0x18]
0x400163:	mov	eax, dword ptr [rax]
0x400165:	mov	dword ptr [rbp - 0x20], eax
0x400168:	mov	eax, dword ptr [rbp - 0x20]
0x40016b:	mov	edi, eax
0x40016d:	call	0x500008
<Block for 0x40012c, 70 bytes>
0x40012c:	and	eax, 0xfff
0x400131:	sub	rax, 8
0x400135:	add	rax, rsp
0x400138:	or	qword ptr [rax], 0
0x40013c:	mov	rax, rsp
0x40013f:	add	rax, 0xf
0x400143:	shr	rax, 4
0x400147:	shl	rax, 4
0x40014b:	mov	qword ptr [rbp - 0x18], rax
0x40014f:	mov	dword ptr [rbp - 0x24], 5
0x400156:	mov	rax, qword ptr [rbp - 0x18]
0x40015a:	mov	edx, dword ptr [rbp - 0x24]
0x40015d:	mov	dword ptr [rax], edx
0x40015f:	mov	rax, qword ptr [rbp - 0x18]
0x400163:	mov	eax, dword ptr [rax]
0x400165:	mov	dword ptr [rbp - 0x20], eax
0x400168:	mov	eax, dword ptr [rbp - 0x20]
0x40016b:	mov	edi, eax
0x40016d:	call	0x500008
<Block for 0x4000fb, 5 bytes>
0x4000fb:	cmp	rsp, rdx
0x4000fe:	je	0x400112
<Block for 0x40009f, 38 bytes>
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x10], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	mov	eax, dword ptr [rax]
0x4000b8:	mov	dword ptr [rbp - 0x1c], eax
0x4000bb:	mov	eax, dword ptr [rbp - 0x1c]
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500008
<Block for 0x40008f, 54 bytes>
0x40008f:	and	eax, 0xfff
0x400094:	sub	rax, 8
0x400098:	add	rax, rsp
0x40009b:	or	qword ptr [rax], 0
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x10], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	mov	eax, dword ptr [rax]
0x4000b8:	mov	dword ptr [rbp - 0x1c], eax
0x4000bb:	mov	eax, dword ptr [rbp - 0x1c]
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500008
<Block for 0x40005e, 5 bytes>
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400172, 16 bytes>
0x400172:	nop	
0x400173:	mov	rax, qword ptr [rbp - 8]
0x400177:	xor	rax, qword ptr fs:[0x28]
0x400180:	je	0x400187
<Block for 0x4000c5, 5 bytes>
0x4000c5:	jmp	0x400172
<Block for 0x400187, 2 bytes>
0x400187:	leave	
0x400188:	ret	
<Block for 0x400182, 5 bytes>
0x400182:	call	0x500010
