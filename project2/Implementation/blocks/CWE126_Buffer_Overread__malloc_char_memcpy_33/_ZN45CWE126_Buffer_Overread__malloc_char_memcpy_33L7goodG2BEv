<Block for 0x4000fc, 62 bytes>
0x4000fc:	endbr64	
0x400100:	push	rbp
0x400101:	mov	rbp, rsp
0x400104:	sub	rsp, 0x90
0x40010b:	mov	rax, qword ptr fs:[0x28]
0x400114:	mov	qword ptr [rbp - 8], rax
0x400118:	xor	eax, eax
0x40011a:	lea	rax, [rbp - 0x88]
0x400121:	mov	qword ptr [rbp - 0x80], rax
0x400125:	mov	qword ptr [rbp - 0x88], 0
0x400130:	mov	edi, 0x64
0x400135:	call	0x500000
<Block for 0x40013a, 19 bytes>
0x40013a:	mov	qword ptr [rbp - 0x88], rax
0x400141:	mov	rax, qword ptr [rbp - 0x88]
0x400148:	test	rax, rax
0x40014b:	jne	0x400157
<Block for 0x40014d, 10 bytes>
0x40014d:	mov	edi, 0xffffffff
0x400152:	call	0x500008
<Block for 0x400157, 25 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x88]
0x40015e:	mov	edx, 0x63
0x400163:	mov	esi, 0x41
0x400168:	mov	rdi, rax
0x40016b:	call	0x500010
<Block for 0x400170, 47 bytes>
0x400170:	mov	rax, qword ptr [rbp - 0x88]
0x400177:	add	rax, 0x63
0x40017b:	mov	byte ptr [rax], 0
0x40017e:	mov	rax, qword ptr [rbp - 0x80]
0x400182:	mov	rax, qword ptr [rax]
0x400185:	mov	qword ptr [rbp - 0x78], rax
0x400189:	lea	rax, [rbp - 0x70]
0x40018d:	mov	edx, 0x63
0x400192:	mov	esi, 0x43
0x400197:	mov	rdi, rax
0x40019a:	call	0x500010
<Block for 0x40019f, 16 bytes>
0x40019f:	mov	byte ptr [rbp - 0xd], 0
0x4001a3:	lea	rax, [rbp - 0x70]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500018
<Block for 0x4001af, 22 bytes>
0x4001af:	mov	rdx, rax
0x4001b2:	mov	rcx, qword ptr [rbp - 0x78]
0x4001b6:	lea	rax, [rbp - 0x70]
0x4001ba:	mov	rsi, rcx
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500020
<Block for 0x4001c5, 16 bytes>
0x4001c5:	mov	byte ptr [rbp - 0xd], 0
0x4001c9:	lea	rax, [rbp - 0x70]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500028
<Block for 0x4001d5, 12 bytes>
0x4001d5:	mov	rax, qword ptr [rbp - 0x78]
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x500030
<Block for 0x4001e1, 16 bytes>
0x4001e1:	nop	
0x4001e2:	mov	rax, qword ptr [rbp - 8]
0x4001e6:	xor	rax, qword ptr fs:[0x28]
0x4001ef:	je	0x4001f6
<Block for 0x4001f6, 2 bytes>
0x4001f6:	leave	
0x4001f7:	ret	
<Block for 0x4001f1, 5 bytes>
0x4001f1:	call	0x500038
