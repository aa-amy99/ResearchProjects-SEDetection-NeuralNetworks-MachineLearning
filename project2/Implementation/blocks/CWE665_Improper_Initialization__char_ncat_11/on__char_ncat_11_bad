<Block for 0x400000, 54 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	mov	eax, 0
0x400031:	call	0x500000
<Block for 0x400036, 22 bytes>
0x400036:	lea	rax, [rbp - 0x70]
0x40003a:	mov	edx, 0x63
0x40003f:	mov	esi, 0x43
0x400044:	mov	rdi, rax
0x400047:	call	0x500008
<Block for 0x40004c, 16 bytes>
0x40004c:	mov	byte ptr [rbp - 0xd], 0
0x400050:	lea	rax, [rbp - 0x70]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 36 bytes>
0x40005c:	mov	qword ptr [rbp - 0xe8], rax
0x400063:	mov	rdx, qword ptr [rbp - 0xe8]
0x40006a:	lea	rcx, [rbp - 0x70]
0x40006e:	mov	rax, qword ptr [rbp - 0xf0]
0x400075:	mov	rsi, rcx
0x400078:	mov	rdi, rax
0x40007b:	call	0x500018
<Block for 0x400080, 15 bytes>
0x400080:	mov	rax, qword ptr [rbp - 0xf0]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500020
<Block for 0x40008f, 16 bytes>
0x40008f:	nop	
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	xor	rax, qword ptr fs:[0x28]
0x40009d:	je	0x4000a4
<Block for 0x4000a4, 2 bytes>
0x4000a4:	leave	
0x4000a5:	ret	
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500028
