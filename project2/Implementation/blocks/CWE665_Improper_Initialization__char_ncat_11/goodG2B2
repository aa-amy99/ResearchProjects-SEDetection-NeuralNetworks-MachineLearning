<Block for 0x400168, 54 bytes>
0x400168:	endbr64	
0x40016c:	push	rbp
0x40016d:	mov	rbp, rsp
0x400170:	sub	rsp, 0xf0
0x400177:	mov	rax, qword ptr fs:[0x28]
0x400180:	mov	qword ptr [rbp - 8], rax
0x400184:	xor	eax, eax
0x400186:	lea	rax, [rbp - 0xe0]
0x40018d:	mov	qword ptr [rbp - 0xf0], rax
0x400194:	mov	eax, 0
0x400199:	call	0x500000
<Block for 0x40019e, 4 bytes>
0x40019e:	test	eax, eax
0x4001a0:	je	0x4001ac
<Block for 0x4001ac, 22 bytes>
0x4001ac:	lea	rax, [rbp - 0x70]
0x4001b0:	mov	edx, 0x63
0x4001b5:	mov	esi, 0x43
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500008
<Block for 0x4001a2, 32 bytes>
0x4001a2:	mov	rax, qword ptr [rbp - 0xf0]
0x4001a9:	mov	byte ptr [rax], 0
0x4001ac:	lea	rax, [rbp - 0x70]
0x4001b0:	mov	edx, 0x63
0x4001b5:	mov	esi, 0x43
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500008
<Block for 0x4001c2, 16 bytes>
0x4001c2:	mov	byte ptr [rbp - 0xd], 0
0x4001c6:	lea	rax, [rbp - 0x70]
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x500010
<Block for 0x4001d2, 36 bytes>
0x4001d2:	mov	qword ptr [rbp - 0xe8], rax
0x4001d9:	mov	rdx, qword ptr [rbp - 0xe8]
0x4001e0:	lea	rcx, [rbp - 0x70]
0x4001e4:	mov	rax, qword ptr [rbp - 0xf0]
0x4001eb:	mov	rsi, rcx
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x500018
<Block for 0x4001f6, 15 bytes>
0x4001f6:	mov	rax, qword ptr [rbp - 0xf0]
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500020
<Block for 0x400205, 16 bytes>
0x400205:	nop	
0x400206:	mov	rax, qword ptr [rbp - 8]
0x40020a:	xor	rax, qword ptr fs:[0x28]
0x400213:	je	0x40021a
<Block for 0x40021a, 2 bytes>
0x40021a:	leave	
0x40021b:	ret	
<Block for 0x400215, 5 bytes>
0x400215:	call	0x500028
