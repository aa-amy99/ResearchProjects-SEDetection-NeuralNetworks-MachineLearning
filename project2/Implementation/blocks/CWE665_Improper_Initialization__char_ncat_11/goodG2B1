<Block for 0x4000a6, 54 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0xf0
0x4000b5:	mov	rax, qword ptr fs:[0x28]
0x4000be:	mov	qword ptr [rbp - 8], rax
0x4000c2:	xor	eax, eax
0x4000c4:	lea	rax, [rbp - 0xe0]
0x4000cb:	mov	qword ptr [rbp - 0xf0], rax
0x4000d2:	mov	eax, 0
0x4000d7:	call	0x500030
<Block for 0x4000dc, 4 bytes>
0x4000dc:	test	eax, eax
0x4000de:	je	0x4000ee
<Block for 0x4000ee, 32 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0xf0]
0x4000f5:	mov	byte ptr [rax], 0
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	edx, 0x63
0x400101:	mov	esi, 0x43
0x400106:	mov	rdi, rax
0x400109:	call	0x500008
<Block for 0x4000e0, 12 bytes>
0x4000e0:	lea	rdi, [rip + 0x154]
0x4000e7:	call	0x500020
<Block for 0x40010e, 16 bytes>
0x40010e:	mov	byte ptr [rbp - 0xd], 0
0x400112:	lea	rax, [rbp - 0x70]
0x400116:	mov	rdi, rax
0x400119:	call	0x500010
<Block for 0x4000ec, 2 bytes>
0x4000ec:	jmp	0x4000f8
<Block for 0x40011e, 36 bytes>
0x40011e:	mov	qword ptr [rbp - 0xe8], rax
0x400125:	mov	rdx, qword ptr [rbp - 0xe8]
0x40012c:	lea	rcx, [rbp - 0x70]
0x400130:	mov	rax, qword ptr [rbp - 0xf0]
0x400137:	mov	rsi, rcx
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500018
<Block for 0x4000f8, 22 bytes>
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	edx, 0x63
0x400101:	mov	esi, 0x43
0x400106:	mov	rdi, rax
0x400109:	call	0x500008
<Block for 0x400142, 15 bytes>
0x400142:	mov	rax, qword ptr [rbp - 0xf0]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500020
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x400166
<Block for 0x400166, 2 bytes>
0x400166:	leave	
0x400167:	ret	
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500028
