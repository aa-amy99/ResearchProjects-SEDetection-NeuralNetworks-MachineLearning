<Block for 0x40003c, 22 bytes>
0x40003c:	endbr64	
0x400040:	push	rbp
0x400041:	mov	rbp, rsp
0x400044:	sub	rsp, 0x10
0x400048:	nop	
0x400049:	endbr64	
0x40004d:	call	0x500010
<Block for 0x400052, 23 bytes>
0x400052:	mov	dword ptr [rax], 0
0x400058:	mov	rax, qword ptr [rip + 0x71]
0x40005f:	movq	xmm0, rax
0x400064:	call	0x500000
<Block for 0x400069, 14 bytes>
0x400069:	movq	rax, xmm0
0x40006e:	mov	qword ptr [rbp - 8], rax
0x400072:	call	0x500010
<Block for 0x400077, 7 bytes>
0x400077:	mov	eax, dword ptr [rax]
0x400079:	cmp	eax, 0x21
0x40007c:	jne	0x400094
<Block for 0x40007e, 12 bytes>
0x40007e:	lea	rdi, [rip + 0x3b]
0x400085:	call	0x500018
<Block for 0x400094, 14 bytes>
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	movq	xmm0, rax
0x40009d:	call	0x500008
<Block for 0x40008a, 10 bytes>
0x40008a:	mov	edi, 1
0x40008f:	call	0x500020
<Block for 0x4000a2, 3 bytes>
0x4000a2:	nop	
0x4000a3:	leave	
0x4000a4:	ret	
