<Block for 0x400000, 154 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	add	rsp, -0x80
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 0x18], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	qword ptr [rbp - 0x78], 0
0x40002e:	mov	qword ptr [rbp - 0x70], 0
0x400036:	mov	qword ptr [rbp - 0x68], 0
0x40003e:	mov	qword ptr [rbp - 0x60], 0
0x400046:	mov	qword ptr [rbp - 0x58], 0
0x40004e:	mov	qword ptr [rbp - 0x50], 0
0x400056:	mov	qword ptr [rbp - 0x48], 0
0x40005e:	mov	qword ptr [rbp - 0x40], 0
0x400066:	mov	qword ptr [rbp - 0x38], 0
0x40006e:	mov	qword ptr [rbp - 0x30], 0
0x400076:	mov	qword ptr [rbp - 0x28], 0
0x40007e:	mov	dword ptr [rbp - 0x20], 0
0x400085:	lea	rax, [rbp - 0x80]
0x400089:	mov	qword ptr [rbp - 0x90], rax
0x400090:	mov	edi, 8
0x400095:	call	0x500000
<Block for 0x40009a, 21 bytes>
0x40009a:	mov	rbx, rax
0x40009d:	mov	rax, qword ptr [rbp - 0x90]
0x4000a4:	mov	rsi, rax
0x4000a7:	mov	rdi, rbx
0x4000aa:	call	0x500008
<Block for 0x4000af, 19 bytes>
0x4000af:	mov	qword ptr [rbp - 0x88], rbx
0x4000b6:	mov	rbx, qword ptr [rbp - 0x88]
0x4000bd:	test	rbx, rbx
0x4000c0:	je	0x4000f8
<Block for 0x4000f8, 16 bytes>
0x4000f8:	nop	
0x4000f9:	mov	rax, qword ptr [rbp - 0x18]
0x4000fd:	xor	rax, qword ptr fs:[0x28]
0x400106:	je	0x40010d
<Block for 0x4000c2, 8 bytes>
0x4000c2:	mov	rdi, rbx
0x4000c5:	call	0x500010
<Block for 0x40010d, 9 bytes>
0x40010d:	sub	rsp, -0x80
0x400111:	pop	rbx
0x400112:	pop	r12
0x400114:	pop	rbp
0x400115:	ret	
<Block for 0x400108, 5 bytes>
0x400108:	call	0x500028
<Block for 0x4000ca, 13 bytes>
0x4000ca:	mov	esi, 8
0x4000cf:	mov	rdi, rbx
0x4000d2:	call	0x500018
<Block for 0x4000d7, 2 bytes>
0x4000d7:	jmp	0x4000f8
