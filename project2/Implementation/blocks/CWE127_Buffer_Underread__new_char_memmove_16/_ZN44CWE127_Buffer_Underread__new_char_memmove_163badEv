<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 26 bytes>
0x40002d:	mov	qword ptr [rbp - 0x78], rax
0x400031:	mov	rax, qword ptr [rbp - 0x78]
0x400035:	mov	edx, 0x63
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x400047, 46 bytes>
0x400047:	mov	rax, qword ptr [rbp - 0x78]
0x40004b:	add	rax, 0x63
0x40004f:	mov	byte ptr [rax], 0
0x400052:	mov	rax, qword ptr [rbp - 0x78]
0x400056:	sub	rax, 8
0x40005a:	mov	qword ptr [rbp - 0x80], rax
0x40005e:	nop	
0x40005f:	lea	rax, [rbp - 0x70]
0x400063:	mov	edx, 0x63
0x400068:	mov	esi, 0x43
0x40006d:	mov	rdi, rax
0x400070:	call	0x500008
<Block for 0x400075, 28 bytes>
0x400075:	mov	byte ptr [rbp - 0xd], 0
0x400079:	mov	rcx, qword ptr [rbp - 0x80]
0x40007d:	lea	rax, [rbp - 0x70]
0x400081:	mov	edx, 0x64
0x400086:	mov	rsi, rcx
0x400089:	mov	rdi, rax
0x40008c:	call	0x500010
<Block for 0x400091, 16 bytes>
0x400091:	mov	byte ptr [rbp - 0xd], 0
0x400095:	lea	rax, [rbp - 0x70]
0x400099:	mov	rdi, rax
0x40009c:	call	0x500018
<Block for 0x4000a1, 16 bytes>
0x4000a1:	nop	
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	xor	rax, qword ptr fs:[0x28]
0x4000af:	je	0x4000b6
<Block for 0x4000b6, 2 bytes>
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000b1, 5 bytes>
0x4000b1:	call	0x500020
