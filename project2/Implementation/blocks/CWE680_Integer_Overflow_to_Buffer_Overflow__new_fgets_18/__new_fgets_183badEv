<Block for 0x400000, 84 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	nop	
0x400023:	endbr64	
0x400027:	mov	qword ptr [rbp - 0x16], 0
0x40002f:	mov	dword ptr [rbp - 0xe], 0
0x400036:	mov	word ptr [rbp - 0xa], 0
0x40003c:	mov	rdx, qword ptr [rip + 0xfffbd]
0x400043:	lea	rax, [rbp - 0x16]
0x400047:	mov	esi, 0xe
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 10 bytes>
0x400054:	test	rax, rax
0x400057:	setne	al
0x40005a:	test	al, al
0x40005c:	je	0x40006f
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0x12e]
0x400076:	call	0x500018
<Block for 0x40005e, 12 bytes>
0x40005e:	lea	rax, [rbp - 0x16]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40007b, 25 bytes>
0x40007b:	mov	eax, dword ptr [rbp - 0x34]
0x40007e:	cdqe	
0x400080:	shl	rax, 2
0x400084:	mov	qword ptr [rbp - 0x28], rax
0x400088:	mov	rax, qword ptr [rbp - 0x28]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500020
<Block for 0x40006a, 5 bytes>
0x40006a:	mov	dword ptr [rbp - 0x34], eax
0x40006d:	jmp	0x40007b
<Block for 0x400094, 23 bytes>
0x400094:	mov	qword ptr [rbp - 0x20], rax
0x400098:	mov	qword ptr [rbp - 0x30], 0
0x4000a0:	mov	eax, dword ptr [rbp - 0x34]
0x4000a3:	cdqe	
0x4000a5:	cmp	qword ptr [rbp - 0x30], rax
0x4000a9:	jae	0x4000cb
<Block for 0x4000ab, 32 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 0x30]
0x4000af:	lea	rdx, [rax*4]
0x4000b7:	mov	rax, qword ptr [rbp - 0x20]
0x4000bb:	add	rax, rdx
0x4000be:	mov	dword ptr [rax], 0
0x4000c4:	add	qword ptr [rbp - 0x30], 1
0x4000c9:	jmp	0x4000a0
<Block for 0x4000cb, 13 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 0x20]
0x4000cf:	mov	eax, dword ptr [rax]
0x4000d1:	mov	edi, eax
0x4000d3:	call	0x500028
<Block for 0x4000a0, 11 bytes>
0x4000a0:	mov	eax, dword ptr [rbp - 0x34]
0x4000a3:	cdqe	
0x4000a5:	cmp	qword ptr [rbp - 0x30], rax
0x4000a9:	jae	0x4000cb
<Block for 0x4000d8, 7 bytes>
0x4000d8:	cmp	qword ptr [rbp - 0x20], 0
0x4000dd:	je	0x4000eb
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x4000df, 12 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x20]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500030
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500038
