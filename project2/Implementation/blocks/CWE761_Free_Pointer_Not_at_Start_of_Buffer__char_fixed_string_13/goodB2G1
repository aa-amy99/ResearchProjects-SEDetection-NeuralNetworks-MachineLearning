<Block for 0x400093, 22 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0x10
0x40009f:	mov	edi, 0x64
0x4000a4:	call	0x500000
<Block for 0x4000a9, 11 bytes>
0x4000a9:	mov	qword ptr [rbp - 8], rax
0x4000ad:	cmp	qword ptr [rbp - 8], 0
0x4000b2:	jne	0x4000be
<Block for 0x4000b4, 10 bytes>
0x4000b4:	mov	edi, 0xffffffff
0x4000b9:	call	0x500008
<Block for 0x4000be, 46 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	mov	byte ptr [rax], 0
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	movabs	rcx, 0x7453206465786946
0x4000d3:	mov	qword ptr [rax], rcx
0x4000d6:	mov	dword ptr [rax + 8], 0x676e6972
0x4000dd:	mov	byte ptr [rax + 0xc], 0
0x4000e1:	mov	eax, dword ptr [rip + 0xfff29]
0x4000e7:	cmp	eax, 5
0x4000ea:	je	0x4000fa
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	qword ptr [rbp - 0x10], 0
0x400102:	jmp	0x400129
<Block for 0x4000ec, 12 bytes>
0x4000ec:	lea	rdi, [rip + 0x130]
0x4000f3:	call	0x500018
<Block for 0x400129, 12 bytes>
0x400129:	mov	rax, qword ptr [rbp - 8]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500028
<Block for 0x4000f8, 2 bytes>
0x4000f8:	jmp	0x400147
<Block for 0x400135, 6 bytes>
0x400135:	cmp	qword ptr [rbp - 0x10], rax
0x400139:	jb	0x400104
<Block for 0x400147, 3 bytes>
0x400147:	nop	
0x400148:	leave	
0x400149:	ret	
<Block for 0x400104, 18 bytes>
0x400104:	mov	rdx, qword ptr [rbp - 8]
0x400108:	mov	rax, qword ptr [rbp - 0x10]
0x40010c:	add	rax, rdx
0x40010f:	movzx	eax, byte ptr [rax]
0x400112:	cmp	al, 0x53
0x400114:	jne	0x400124
<Block for 0x40013b, 12 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 8]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500020
<Block for 0x400116, 12 bytes>
0x400116:	lea	rdi, [rip + 0xf5]
0x40011d:	call	0x500018
<Block for 0x400124, 17 bytes>
0x400124:	add	qword ptr [rbp - 0x10], 1
0x400129:	mov	rax, qword ptr [rbp - 8]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500028
<Block for 0x400122, 2 bytes>
0x400122:	jmp	0x40013b
