<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	call	0x500000
<Block for 0x400019, 9 bytes>
0x400019:	test	eax, eax
0x40001b:	setne	al
0x40001e:	test	al, al
0x400020:	je	0x40005d
<Block for 0x40005d, 10 bytes>
0x40005d:	mov	edi, 8
0x400062:	call	0x500008
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 8
0x400027:	call	0x500008
<Block for 0x400067, 30 bytes>
0x400067:	mov	qword ptr [rbp - 8], rax
0x40006b:	mov	rax, qword ptr [rbp - 8]
0x40006f:	mov	dword ptr [rax], 1
0x400075:	mov	rax, qword ptr [rbp - 8]
0x400079:	mov	dword ptr [rax + 4], 2
0x400080:	call	0x500000
<Block for 0x40002c, 34 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	mov	rax, qword ptr [rbp - 8]
0x400034:	mov	dword ptr [rax], 1
0x40003a:	mov	rax, qword ptr [rbp - 8]
0x40003e:	mov	dword ptr [rax + 4], 2
0x400045:	mov	rax, qword ptr [rbp - 8]
0x400049:	test	rax, rax
0x40004c:	je	0x400080
<Block for 0x400085, 9 bytes>
0x400085:	test	eax, eax
0x400087:	setne	al
0x40008a:	test	al, al
0x40008c:	je	0x40009b
<Block for 0x400080, 5 bytes>
0x400080:	call	0x500000
<Block for 0x40004e, 13 bytes>
0x40004e:	mov	esi, 8
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40009b, 3 bytes>
0x40009b:	nop	
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x40008e, 13 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 8]
0x400092:	mov	eax, dword ptr [rax]
0x400094:	mov	edi, eax
0x400096:	call	0x500018
<Block for 0x40005b, 2 bytes>
0x40005b:	jmp	0x400080
