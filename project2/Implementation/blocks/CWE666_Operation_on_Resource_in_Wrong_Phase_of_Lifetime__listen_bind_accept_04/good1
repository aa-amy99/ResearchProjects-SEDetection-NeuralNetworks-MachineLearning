<Block for 0x400284, 39 bytes>
0x400284:	endbr64	
0x400288:	push	rbp
0x400289:	mov	rbp, rsp
0x40028c:	sub	rsp, 0xa0
0x400293:	mov	rax, qword ptr fs:[0x28]
0x40029c:	mov	qword ptr [rbp - 8], rax
0x4002a0:	xor	eax, eax
0x4002a2:	mov	eax, 0
0x4002a7:	test	eax, eax
0x4002a9:	je	0x4002bc
<Block for 0x4002bc, 135 bytes>
0x4002bc:	mov	qword ptr [rbp - 0x70], 0
0x4002c4:	mov	qword ptr [rbp - 0x68], 0
0x4002cc:	mov	qword ptr [rbp - 0x60], 0
0x4002d4:	mov	qword ptr [rbp - 0x58], 0
0x4002dc:	mov	qword ptr [rbp - 0x50], 0
0x4002e4:	mov	qword ptr [rbp - 0x48], 0
0x4002ec:	mov	qword ptr [rbp - 0x40], 0
0x4002f4:	mov	qword ptr [rbp - 0x38], 0
0x4002fc:	mov	qword ptr [rbp - 0x30], 0
0x400304:	mov	qword ptr [rbp - 0x28], 0
0x40030c:	mov	qword ptr [rbp - 0x20], 0
0x400314:	mov	qword ptr [rbp - 0x18], 0
0x40031c:	mov	dword ptr [rbp - 0x10], 0
0x400323:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x40032d:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400337:	lea	rax, [rbp - 0x70]
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500000
<Block for 0x4002ab, 12 bytes>
0x4002ab:	lea	rdi, [rip + 0x50e]
0x4002b2:	call	0x500050
<Block for 0x400343, 27 bytes>
0x400343:	mov	qword ptr [rbp - 0x90], rax
0x40034a:	mov	edx, 6
0x40034f:	mov	esi, 1
0x400354:	mov	edi, 2
0x400359:	call	0x500008
<Block for 0x4002b7, 5 bytes>
0x4002b7:	jmp	0x4004fe
<Block for 0x40035e, 19 bytes>
0x40035e:	mov	dword ptr [rbp - 0x98], eax
0x400364:	cmp	dword ptr [rbp - 0x98], -1
0x40036b:	je	0x4004bc
<Block for 0x4004fe, 16 bytes>
0x4004fe:	nop	
0x4004ff:	mov	rax, qword ptr [rbp - 8]
0x400503:	xor	rax, qword ptr fs:[0x28]
0x40050c:	je	0x400513
<Block for 0x4004bc, 3 bytes>
0x4004bc:	nop	
0x4004bd:	jmp	0x4004c6
<Block for 0x400371, 22 bytes>
0x400371:	lea	rax, [rbp - 0x80]
0x400375:	mov	edx, 0x10
0x40037a:	mov	esi, 0
0x40037f:	mov	rdi, rax
0x400382:	call	0x500010
<Block for 0x400513, 2 bytes>
0x400513:	leave	
0x400514:	ret	
<Block for 0x40050e, 5 bytes>
0x40050e:	call	0x500058
<Block for 0x4004c6, 9 bytes>
0x4004c6:	cmp	dword ptr [rbp - 0x98], -1
0x4004cd:	je	0x4004dc
<Block for 0x400387, 23 bytes>
0x400387:	mov	word ptr [rbp - 0x80], 2
0x40038d:	mov	dword ptr [rbp - 0x7c], 0
0x400394:	mov	edi, 0x6987
0x400399:	call	0x500018
<Block for 0x4004dc, 9 bytes>
0x4004dc:	cmp	dword ptr [rbp - 0x9c], -1
0x4004e3:	je	0x4004f2
<Block for 0x4004cf, 13 bytes>
0x4004cf:	mov	eax, dword ptr [rbp - 0x98]
0x4004d5:	mov	edi, eax
0x4004d7:	call	0x500048
<Block for 0x40039e, 29 bytes>
0x40039e:	mov	word ptr [rbp - 0x7e], ax
0x4003a2:	lea	rcx, [rbp - 0x80]
0x4003a6:	mov	eax, dword ptr [rbp - 0x98]
0x4003ac:	mov	edx, 0x10
0x4003b1:	mov	rsi, rcx
0x4003b4:	mov	edi, eax
0x4003b6:	call	0x500028
<Block for 0x4004f2, 12 bytes>
0x4004f2:	lea	rax, [rbp - 0x70]
0x4004f6:	mov	rdi, rax
0x4004f9:	call	0x500050
<Block for 0x4004e5, 13 bytes>
0x4004e5:	mov	eax, dword ptr [rbp - 0x9c]
0x4004eb:	mov	edi, eax
0x4004ed:	call	0x500048
<Block for 0x4003bb, 9 bytes>
0x4003bb:	cmp	eax, -1
0x4003be:	je	0x4004bf
<Block for 0x4004bf, 3 bytes>
0x4004bf:	nop	
0x4004c0:	jmp	0x4004c6
<Block for 0x4003c4, 18 bytes>
0x4003c4:	mov	eax, dword ptr [rbp - 0x98]
0x4003ca:	mov	esi, 5
0x4003cf:	mov	edi, eax
0x4003d1:	call	0x500020
<Block for 0x4003d6, 9 bytes>
0x4003d6:	cmp	eax, -1
0x4003d9:	je	0x4004c2
<Block for 0x4004c2, 3 bytes>
0x4004c2:	nop	
0x4004c3:	jmp	0x4004c6
<Block for 0x4003df, 23 bytes>
0x4003df:	mov	eax, dword ptr [rbp - 0x98]
0x4003e5:	mov	edx, 0
0x4003ea:	mov	esi, 0
0x4003ef:	mov	edi, eax
0x4003f1:	call	0x500030
<Block for 0x4003f6, 19 bytes>
0x4003f6:	mov	dword ptr [rbp - 0x9c], eax
0x4003fc:	cmp	dword ptr [rbp - 0x9c], -1
0x400403:	je	0x4004c5
<Block for 0x400409, 52 bytes>
0x400409:	mov	rax, qword ptr [rbp - 0x90]
0x400410:	mov	edx, 0x63
0x400415:	sub	edx, eax
0x400417:	mov	eax, edx
0x400419:	movsxd	rdx, eax
0x40041c:	lea	rcx, [rbp - 0x70]
0x400420:	mov	rax, qword ptr [rbp - 0x90]
0x400427:	lea	rsi, [rcx + rax]
0x40042b:	mov	eax, dword ptr [rbp - 0x9c]
0x400431:	mov	ecx, 0
0x400436:	mov	edi, eax
0x400438:	call	0x500038
<Block for 0x4004c5, 1 bytes>
0x4004c5:	nop	
<Block for 0x40043d, 15 bytes>
0x40043d:	mov	dword ptr [rbp - 0x94], eax
0x400443:	cmp	dword ptr [rbp - 0x94], -1
0x40044a:	je	0x4004c6
<Block for 0x40044c, 9 bytes>
0x40044c:	cmp	dword ptr [rbp - 0x94], 0
0x400453:	je	0x4004c6
<Block for 0x400455, 30 bytes>
0x400455:	mov	eax, dword ptr [rbp - 0x94]
0x40045b:	cdqe	
0x40045d:	mov	byte ptr [rbp + rax - 0x70], 0
0x400462:	lea	rax, [rbp - 0x70]
0x400466:	mov	esi, 0xd
0x40046b:	mov	rdi, rax
0x40046e:	call	0x500040
<Block for 0x400473, 17 bytes>
0x400473:	mov	qword ptr [rbp - 0x88], rax
0x40047a:	cmp	qword ptr [rbp - 0x88], 0
0x400482:	je	0x40048e
<Block for 0x40048e, 17 bytes>
0x40048e:	lea	rax, [rbp - 0x70]
0x400492:	mov	esi, 0xa
0x400497:	mov	rdi, rax
0x40049a:	call	0x500040
<Block for 0x400484, 27 bytes>
0x400484:	mov	rax, qword ptr [rbp - 0x88]
0x40048b:	mov	byte ptr [rax], 0
0x40048e:	lea	rax, [rbp - 0x70]
0x400492:	mov	esi, 0xa
0x400497:	mov	rdi, rax
0x40049a:	call	0x500040
<Block for 0x40049f, 17 bytes>
0x40049f:	mov	qword ptr [rbp - 0x88], rax
0x4004a6:	cmp	qword ptr [rbp - 0x88], 0
0x4004ae:	je	0x4004c6
<Block for 0x4004b0, 12 bytes>
0x4004b0:	mov	rax, qword ptr [rbp - 0x88]
0x4004b7:	mov	byte ptr [rax], 0
0x4004ba:	jmp	0x4004c6
