<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0xfffee]
0x400012:	cmp	eax, 5
0x400015:	jne	0x400062
<Block for 0x400017, 18 bytes>
0x400017:	mov	qword ptr [rbp - 8], 0
0x40001f:	mov	edi, 8
0x400024:	call	0x500008
<Block for 0x400062, 3 bytes>
0x400062:	nop	
0x400063:	leave	
0x400064:	ret	
<Block for 0x400029, 11 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	cmp	qword ptr [rbp - 8], 0
0x400032:	jne	0x40003e
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0xffffffff
0x400039:	call	0x500010
<Block for 0x40003e, 24 bytes>
0x40003e:	mov	rax, qword ptr [rbp - 8]
0x400042:	mov	byte ptr [rax], 0x42
0x400045:	mov	rax, qword ptr [rbp - 8]
0x400049:	movzx	eax, byte ptr [rax]
0x40004c:	movsx	eax, al
0x40004f:	mov	edi, eax
0x400051:	call	0x500018
<Block for 0x400056, 12 bytes>
0x400056:	mov	rax, qword ptr [rbp - 8]
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500020
