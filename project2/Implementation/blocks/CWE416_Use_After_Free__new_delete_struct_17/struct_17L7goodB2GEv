<Block for 0x400082, 33 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x10
0x40008e:	mov	qword ptr [rbp - 8], 0
0x400096:	mov	dword ptr [rbp - 0x10], 0
0x40009d:	cmp	dword ptr [rbp - 0x10], 0
0x4000a1:	jg	0x4000e2
<Block for 0x4000a3, 10 bytes>
0x4000a3:	mov	edi, 8
0x4000a8:	call	0x500000
<Block for 0x4000e2, 13 bytes>
0x4000e2:	mov	dword ptr [rbp - 0xc], 0
0x4000e9:	cmp	dword ptr [rbp - 0xc], 0
0x4000ed:	jg	0x4000f5
<Block for 0x4000ad, 34 bytes>
0x4000ad:	mov	qword ptr [rbp - 8], rax
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	dword ptr [rax], 1
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	mov	dword ptr [rax + 4], 2
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	test	rax, rax
0x4000cd:	je	0x4000dc
<Block for 0x4000ef, 6 bytes>
0x4000ef:	add	dword ptr [rbp - 0xc], 1
0x4000f3:	jmp	0x4000e9
<Block for 0x4000f5, 3 bytes>
0x4000f5:	nop	
0x4000f6:	leave	
0x4000f7:	ret	
<Block for 0x4000dc, 6 bytes>
0x4000dc:	add	dword ptr [rbp - 0x10], 1
0x4000e0:	jmp	0x40009d
<Block for 0x4000cf, 13 bytes>
0x4000cf:	mov	esi, 8
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500008
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0xc], 0
0x4000ed:	jg	0x4000f5
<Block for 0x40009d, 6 bytes>
0x40009d:	cmp	dword ptr [rbp - 0x10], 0
0x4000a1:	jg	0x4000e2
