<Block for 0x40003d, 39 bytes>
0x40003d:	endbr64	
0x400041:	push	rbp
0x400042:	mov	rbp, rsp
0x400045:	sub	rsp, 0x20
0x400049:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400050:	mov	dword ptr [rip + 0x236], 1
0x40005a:	mov	eax, dword ptr [rbp - 0x14]
0x40005d:	mov	edi, eax
0x40005f:	call	0x400000
<Block for 0x400064, 20 bytes>
0x400064:	mov	dword ptr [rbp - 0x14], eax
0x400067:	mov	eax, dword ptr [rbp - 0x14]
0x40006a:	cdqe	
0x40006c:	shl	rax, 2
0x400070:	mov	rdi, rax
0x400073:	call	0x500010
<Block for 0x400078, 11 bytes>
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	cmp	qword ptr [rbp - 8], 0
0x400081:	jne	0x40008d
<Block for 0x400083, 10 bytes>
0x400083:	mov	edi, 0xffffffff
0x400088:	call	0x500018
<Block for 0x40008d, 10 bytes>
0x40008d:	mov	qword ptr [rbp - 0x10], 0
0x400095:	jmp	0x4000b5
<Block for 0x4000b5, 11 bytes>
0x4000b5:	mov	eax, dword ptr [rbp - 0x14]
0x4000b8:	cdqe	
0x4000ba:	cmp	qword ptr [rbp - 0x10], rax
0x4000be:	jb	0x400097
<Block for 0x400097, 41 bytes>
0x400097:	mov	rax, qword ptr [rbp - 0x10]
0x40009b:	lea	rdx, [rax*4]
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	add	rax, rdx
0x4000aa:	mov	dword ptr [rax], 0
0x4000b0:	add	qword ptr [rbp - 0x10], 1
0x4000b5:	mov	eax, dword ptr [rbp - 0x14]
0x4000b8:	cdqe	
0x4000ba:	cmp	qword ptr [rbp - 0x10], rax
0x4000be:	jb	0x400097
<Block for 0x4000c0, 13 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	mov	eax, dword ptr [rax]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x500020
<Block for 0x4000cd, 12 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500028
<Block for 0x4000d9, 3 bytes>
0x4000d9:	nop	
0x4000da:	leave	
0x4000db:	ret	
