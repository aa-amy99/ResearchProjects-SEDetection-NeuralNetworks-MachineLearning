<Block for 0x400065, 22 bytes>
0x400065:	endbr64	
0x400069:	push	rbp
0x40006a:	mov	rbp, rsp
0x40006d:	sub	rsp, 0x10
0x400071:	mov	edi, 0x64
0x400076:	call	0x500000
<Block for 0x40007b, 11 bytes>
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	cmp	qword ptr [rbp - 8], 0
0x400084:	jne	0x400090
<Block for 0x400086, 10 bytes>
0x400086:	mov	edi, 0xffffffff
0x40008b:	call	0x500008
<Block for 0x400090, 55 bytes>
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	mov	byte ptr [rax], 0
0x400097:	mov	rax, qword ptr [rbp - 8]
0x40009b:	movabs	rdx, 0x7453206465786946
0x4000a5:	mov	qword ptr [rax], rdx
0x4000a8:	mov	dword ptr [rax + 8], 0x676e6972
0x4000af:	mov	byte ptr [rax + 0xc], 0
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	mov	qword ptr [rbp - 0x10], rax
0x4000bb:	mov	rax, qword ptr [rbp - 0x10]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500018
<Block for 0x4000c7, 3 bytes>
0x4000c7:	nop	
0x4000c8:	leave	
0x4000c9:	ret	
