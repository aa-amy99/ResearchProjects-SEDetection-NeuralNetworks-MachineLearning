<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x40005a
<Block for 0x40005a, 10 bytes>
0x40005a:	mov	edi, 4
0x40005f:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 4
0x40001f:	call	0x500008
<Block for 0x400064, 11 bytes>
0x400064:	mov	qword ptr [rbp - 0x10], rax
0x400068:	cmp	qword ptr [rbp - 0x10], 0
0x40006d:	jne	0x400079
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 8], rax
0x400028:	cmp	qword ptr [rbp - 8], 0
0x40002d:	jne	0x400039
<Block for 0x40006f, 10 bytes>
0x40006f:	mov	edi, 0xffffffff
0x400074:	call	0x500010
<Block for 0x400079, 35 bytes>
0x400079:	mov	dword ptr [rbp - 0x1c], 5
0x400080:	mov	rax, qword ptr [rbp - 0x10]
0x400084:	mov	edx, dword ptr [rbp - 0x1c]
0x400087:	mov	dword ptr [rax], edx
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	mov	eax, dword ptr [rax]
0x40008f:	mov	dword ptr [rbp - 0x18], eax
0x400092:	mov	eax, dword ptr [rbp - 0x18]
0x400095:	mov	edi, eax
0x400097:	call	0x500020
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 21 bytes>
0x400039:	mov	rax, qword ptr [rbp - 8]
0x40003d:	mov	eax, dword ptr [rax]
0x40003f:	mov	dword ptr [rbp - 0x14], eax
0x400042:	mov	rax, qword ptr [rbp - 8]
0x400046:	mov	rdi, rax
0x400049:	call	0x500018
<Block for 0x40009c, 12 bytes>
0x40009c:	mov	rax, qword ptr [rbp - 0x10]
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500018
<Block for 0x40004e, 10 bytes>
0x40004e:	mov	eax, dword ptr [rbp - 0x14]
0x400051:	mov	edi, eax
0x400053:	call	0x500020
<Block for 0x4000a8, 3 bytes>
0x4000a8:	nop	
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x400058, 2 bytes>
0x400058:	jmp	0x4000a8
