<Block for 0x400061, 27 bytes>
0x400061:	endbr64	
0x400065:	push	rbp
0x400066:	mov	rbp, rsp
0x400069:	push	rbx
0x40006a:	sub	rsp, 0x18
0x40006e:	mov	byte ptr [rbp - 0x19], 0x43
0x400072:	mov	edi, 8
0x400077:	call	0x500000
<Block for 0x40007c, 11 bytes>
0x40007c:	mov	rbx, rax
0x40007f:	mov	rdi, rbx
0x400082:	call	0x40011e
<Block for 0x400087, 29 bytes>
0x400087:	mov	qword ptr [rbp - 0x18], rbx
0x40008b:	mov	rax, qword ptr [rbp - 0x18]
0x40008f:	mov	rax, qword ptr [rax]
0x400092:	mov	rcx, qword ptr [rax]
0x400095:	movsx	edx, byte ptr [rbp - 0x19]
0x400099:	mov	rax, qword ptr [rbp - 0x18]
0x40009d:	mov	esi, edx
0x40009f:	mov	rdi, rax
0x4000a2:	call	rcx
<Block for 0x4000a4, 9 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x18]
0x4000a8:	test	rax, rax
0x4000ab:	je	0x4000ba
<Block for 0x4000ba, 8 bytes>
0x4000ba:	nop	
0x4000bb:	add	rsp, 0x18
0x4000bf:	pop	rbx
0x4000c0:	pop	rbp
0x4000c1:	ret	
<Block for 0x4000ad, 13 bytes>
0x4000ad:	mov	esi, 8
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500008
