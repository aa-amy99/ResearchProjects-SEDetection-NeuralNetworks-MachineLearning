<Block for 0x400118, 87 bytes>
0x400118:	endbr64	
0x40011c:	push	rbp
0x40011d:	mov	rbp, rsp
0x400120:	sub	rsp, 0x40
0x400124:	mov	rax, qword ptr fs:[0x28]
0x40012d:	mov	qword ptr [rbp - 8], rax
0x400131:	xor	eax, eax
0x400133:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40013a:	mov	dword ptr [rbp - 0x34], 0xa
0x400141:	mov	qword ptr [rbp - 0x30], 0
0x400149:	mov	qword ptr [rbp - 0x28], 0
0x400151:	mov	qword ptr [rbp - 0x20], 0
0x400159:	mov	qword ptr [rbp - 0x18], 0
0x400161:	mov	qword ptr [rbp - 0x10], 0
0x400169:	cmp	dword ptr [rbp - 0x34], 0
0x40016d:	js	0x400187
<Block for 0x400187, 12 bytes>
0x400187:	lea	rdi, [rip + 0x62]
0x40018e:	call	0x500008
<Block for 0x40016f, 6 bytes>
0x40016f:	cmp	dword ptr [rbp - 0x34], 9
0x400173:	jg	0x400187
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x400175, 16 bytes>
0x400175:	mov	eax, dword ptr [rbp - 0x34]
0x400178:	cdqe	
0x40017a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40017e:	mov	edi, eax
0x400180:	call	0x500000
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500010
<Block for 0x400185, 2 bytes>
0x400185:	jmp	0x400193
