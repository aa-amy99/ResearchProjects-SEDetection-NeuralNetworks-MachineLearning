<Block for 0x4000d6, 36 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	add	rsp, -0x80
0x4000e2:	mov	rax, qword ptr fs:[0x28]
0x4000eb:	mov	qword ptr [rbp - 8], rax
0x4000ef:	xor	eax, eax
0x4000f1:	mov	eax, 0
0x4000f6:	test	eax, eax
0x4000f8:	je	0x40010b
<Block for 0x40010b, 135 bytes>
0x40010b:	mov	qword ptr [rbp - 0x70], 0
0x400113:	mov	qword ptr [rbp - 0x68], 0
0x40011b:	mov	qword ptr [rbp - 0x60], 0
0x400123:	mov	qword ptr [rbp - 0x58], 0
0x40012b:	mov	qword ptr [rbp - 0x50], 0
0x400133:	mov	qword ptr [rbp - 0x48], 0
0x40013b:	mov	qword ptr [rbp - 0x40], 0
0x400143:	mov	qword ptr [rbp - 0x38], 0
0x40014b:	mov	qword ptr [rbp - 0x30], 0
0x400153:	mov	qword ptr [rbp - 0x28], 0
0x40015b:	mov	qword ptr [rbp - 0x20], 0
0x400163:	mov	qword ptr [rbp - 0x18], 0
0x40016b:	mov	dword ptr [rbp - 0x10], 0
0x400172:	lea	rax, [rbp - 0x70]
0x400176:	mov	qword ptr [rbp - 0x78], rax
0x40017a:	mov	rax, qword ptr [rbp - 0x78]
0x40017e:	mov	rsi, rax
0x400181:	lea	rdi, [rip + 0x130]
0x400188:	mov	eax, 0
0x40018d:	call	0x500000
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x1cb]
0x400101:	call	0x500008
<Block for 0x400192, 5 bytes>
0x400192:	cmp	eax, -1
0x400195:	jne	0x4001a3
<Block for 0x400106, 5 bytes>
0x400106:	jmp	0x4001a3
<Block for 0x400197, 12 bytes>
0x400197:	lea	rdi, [rip + 0x120]
0x40019e:	call	0x500008
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500010
