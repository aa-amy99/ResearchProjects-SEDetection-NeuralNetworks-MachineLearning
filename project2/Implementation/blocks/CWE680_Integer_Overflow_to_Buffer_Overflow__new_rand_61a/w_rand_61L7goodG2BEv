<Block for 0x400093, 29 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0x20
0x40009f:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a6:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a9:	mov	edi, eax
0x4000ab:	call	0x500020
<Block for 0x4000b0, 28 bytes>
0x4000b0:	mov	dword ptr [rbp - 0x1c], eax
0x4000b3:	mov	eax, dword ptr [rbp - 0x1c]
0x4000b6:	cdqe	
0x4000b8:	shl	rax, 2
0x4000bc:	mov	qword ptr [rbp - 0x10], rax
0x4000c0:	mov	rax, qword ptr [rbp - 0x10]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500008
<Block for 0x4000cc, 23 bytes>
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	mov	qword ptr [rbp - 0x18], 0
0x4000d8:	mov	eax, dword ptr [rbp - 0x1c]
0x4000db:	cdqe	
0x4000dd:	cmp	qword ptr [rbp - 0x18], rax
0x4000e1:	jae	0x400103
<Block for 0x4000e3, 32 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 0x18]
0x4000e7:	lea	rdx, [rax*4]
0x4000ef:	mov	rax, qword ptr [rbp - 8]
0x4000f3:	add	rax, rdx
0x4000f6:	mov	dword ptr [rax], 0
0x4000fc:	add	qword ptr [rbp - 0x18], 1
0x400101:	jmp	0x4000d8
<Block for 0x400103, 13 bytes>
0x400103:	mov	rax, qword ptr [rbp - 8]
0x400107:	mov	eax, dword ptr [rax]
0x400109:	mov	edi, eax
0x40010b:	call	0x500010
<Block for 0x4000d8, 11 bytes>
0x4000d8:	mov	eax, dword ptr [rbp - 0x1c]
0x4000db:	cdqe	
0x4000dd:	cmp	qword ptr [rbp - 0x18], rax
0x4000e1:	jae	0x400103
<Block for 0x400110, 7 bytes>
0x400110:	cmp	qword ptr [rbp - 8], 0
0x400115:	je	0x400123
<Block for 0x400123, 3 bytes>
0x400123:	nop	
0x400124:	leave	
0x400125:	ret	
<Block for 0x400117, 12 bytes>
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500018
