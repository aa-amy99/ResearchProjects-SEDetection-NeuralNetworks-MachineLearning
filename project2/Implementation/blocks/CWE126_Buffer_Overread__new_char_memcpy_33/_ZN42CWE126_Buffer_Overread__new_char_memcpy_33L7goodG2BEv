<Block for 0x4000ed, 62 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	sub	rsp, 0x90
0x4000fc:	mov	rax, qword ptr fs:[0x28]
0x400105:	mov	qword ptr [rbp - 8], rax
0x400109:	xor	eax, eax
0x40010b:	lea	rax, [rbp - 0x88]
0x400112:	mov	qword ptr [rbp - 0x80], rax
0x400116:	mov	qword ptr [rbp - 0x88], 0
0x400121:	mov	edi, 0x64
0x400126:	call	0x500000
<Block for 0x40012b, 32 bytes>
0x40012b:	mov	qword ptr [rbp - 0x88], rax
0x400132:	mov	rax, qword ptr [rbp - 0x88]
0x400139:	mov	edx, 0x63
0x40013e:	mov	esi, 0x41
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x40014b, 47 bytes>
0x40014b:	mov	rax, qword ptr [rbp - 0x88]
0x400152:	add	rax, 0x63
0x400156:	mov	byte ptr [rax], 0
0x400159:	mov	rax, qword ptr [rbp - 0x80]
0x40015d:	mov	rax, qword ptr [rax]
0x400160:	mov	qword ptr [rbp - 0x78], rax
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	edx, 0x63
0x40016d:	mov	esi, 0x43
0x400172:	mov	rdi, rax
0x400175:	call	0x500008
<Block for 0x40017a, 16 bytes>
0x40017a:	mov	byte ptr [rbp - 0xd], 0
0x40017e:	lea	rax, [rbp - 0x70]
0x400182:	mov	rdi, rax
0x400185:	call	0x500010
<Block for 0x40018a, 22 bytes>
0x40018a:	mov	rdx, rax
0x40018d:	mov	rcx, qword ptr [rbp - 0x78]
0x400191:	lea	rax, [rbp - 0x70]
0x400195:	mov	rsi, rcx
0x400198:	mov	rdi, rax
0x40019b:	call	0x500018
<Block for 0x4001a0, 16 bytes>
0x4001a0:	mov	byte ptr [rbp - 0xd], 0
0x4001a4:	lea	rax, [rbp - 0x70]
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500020
<Block for 0x4001b0, 7 bytes>
0x4001b0:	cmp	qword ptr [rbp - 0x78], 0
0x4001b5:	je	0x4001c3
<Block for 0x4001c3, 16 bytes>
0x4001c3:	nop	
0x4001c4:	mov	rax, qword ptr [rbp - 8]
0x4001c8:	xor	rax, qword ptr fs:[0x28]
0x4001d1:	je	0x4001d8
<Block for 0x4001b7, 12 bytes>
0x4001b7:	mov	rax, qword ptr [rbp - 0x78]
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500028
<Block for 0x4001d8, 2 bytes>
0x4001d8:	leave	
0x4001d9:	ret	
<Block for 0x4001d3, 5 bytes>
0x4001d3:	call	0x500030
