<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 44 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	lea	rax, [rbp - 0xe0]
0x400042:	sub	rax, 8
0x400046:	mov	qword ptr [rbp - 0xe8], rax
0x40004d:	lea	rax, [rbp - 0x70]
0x400051:	mov	edx, 0x63
0x400056:	mov	esi, 0x43
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500000
<Block for 0x400063, 17 bytes>
0x400063:	mov	byte ptr [rbp - 0xd], 0
0x400067:	mov	qword ptr [rbp - 0xf0], 0
0x400072:	jmp	0x4000a0
<Block for 0x4000a0, 10 bytes>
0x4000a0:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000a8:	jbe	0x400074
<Block for 0x400074, 54 bytes>
0x400074:	mov	rdx, qword ptr [rbp - 0xe8]
0x40007b:	mov	rax, qword ptr [rbp - 0xf0]
0x400082:	add	rdx, rax
0x400085:	lea	rcx, [rbp - 0x70]
0x400089:	mov	rax, qword ptr [rbp - 0xf0]
0x400090:	add	rax, rcx
0x400093:	movzx	eax, byte ptr [rax]
0x400096:	mov	byte ptr [rdx], al
0x400098:	add	qword ptr [rbp - 0xf0], 1
0x4000a0:	cmp	qword ptr [rbp - 0xf0], 0x63
0x4000a8:	jbe	0x400074
<Block for 0x4000aa, 29 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 0xe8]
0x4000b1:	add	rax, 0x63
0x4000b5:	mov	byte ptr [rax], 0
0x4000b8:	mov	rax, qword ptr [rbp - 0xe8]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500008
<Block for 0x4000c7, 16 bytes>
0x4000c7:	nop	
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	xor	rax, qword ptr fs:[0x28]
0x4000d5:	je	0x4000dc
<Block for 0x4000dc, 2 bytes>
0x4000dc:	leave	
0x4000dd:	ret	
<Block for 0x4000d7, 5 bytes>
0x4000d7:	call	0x500010
