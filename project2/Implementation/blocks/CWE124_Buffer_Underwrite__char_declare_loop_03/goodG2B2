<Block for 0x4001b8, 55 bytes>
0x4001b8:	endbr64	
0x4001bc:	push	rbp
0x4001bd:	mov	rbp, rsp
0x4001c0:	sub	rsp, 0xf0
0x4001c7:	mov	rax, qword ptr fs:[0x28]
0x4001d0:	mov	qword ptr [rbp - 8], rax
0x4001d4:	xor	eax, eax
0x4001d6:	lea	rax, [rbp - 0xe0]
0x4001dd:	mov	edx, 0x63
0x4001e2:	mov	esi, 0x41
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500000
<Block for 0x4001ef, 40 bytes>
0x4001ef:	mov	byte ptr [rbp - 0x7d], 0
0x4001f3:	lea	rax, [rbp - 0xe0]
0x4001fa:	mov	qword ptr [rbp - 0xe8], rax
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x400217, 17 bytes>
0x400217:	mov	byte ptr [rbp - 0xd], 0
0x40021b:	mov	qword ptr [rbp - 0xf0], 0
0x400226:	jmp	0x400254
<Block for 0x400254, 10 bytes>
0x400254:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40025c:	jbe	0x400228
<Block for 0x400228, 54 bytes>
0x400228:	mov	rdx, qword ptr [rbp - 0xe8]
0x40022f:	mov	rax, qword ptr [rbp - 0xf0]
0x400236:	add	rdx, rax
0x400239:	lea	rcx, [rbp - 0x70]
0x40023d:	mov	rax, qword ptr [rbp - 0xf0]
0x400244:	add	rax, rcx
0x400247:	movzx	eax, byte ptr [rax]
0x40024a:	mov	byte ptr [rdx], al
0x40024c:	add	qword ptr [rbp - 0xf0], 1
0x400254:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40025c:	jbe	0x400228
<Block for 0x40025e, 29 bytes>
0x40025e:	mov	rax, qword ptr [rbp - 0xe8]
0x400265:	add	rax, 0x63
0x400269:	mov	byte ptr [rax], 0
0x40026c:	mov	rax, qword ptr [rbp - 0xe8]
0x400273:	mov	rdi, rax
0x400276:	call	0x500008
<Block for 0x40027b, 16 bytes>
0x40027b:	nop	
0x40027c:	mov	rax, qword ptr [rbp - 8]
0x400280:	xor	rax, qword ptr fs:[0x28]
0x400289:	je	0x400290
<Block for 0x400290, 2 bytes>
0x400290:	leave	
0x400291:	ret	
<Block for 0x40028b, 5 bytes>
0x40028b:	call	0x500010
