<Block for 0x4001e2, 50 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0xe0
0x4001f1:	mov	rax, qword ptr fs:[0x28]
0x4001fa:	mov	qword ptr [rbp - 8], rax
0x4001fe:	xor	eax, eax
0x400200:	mov	qword ptr [rbp - 0xe0], 0
0x40020b:	mov	eax, 1
0x400210:	test	eax, eax
0x400212:	je	0x40026e
<Block for 0x40026e, 25 bytes>
0x40026e:	lea	rax, [rbp - 0xd0]
0x400275:	mov	edx, 0xc7
0x40027a:	mov	esi, 0x43
0x40027f:	mov	rdi, rax
0x400282:	call	0x500010
<Block for 0x400214, 10 bytes>
0x400214:	mov	edi, 0x64
0x400219:	call	0x500000
<Block for 0x400287, 29 bytes>
0x400287:	mov	byte ptr [rbp - 9], 0
0x40028b:	mov	rdx, qword ptr [rbp - 0xe0]
0x400292:	lea	rax, [rbp - 0xd0]
0x400299:	mov	rsi, rdx
0x40029c:	mov	rdi, rax
0x40029f:	call	0x500018
<Block for 0x40021e, 17 bytes>
0x40021e:	mov	qword ptr [rbp - 0xd8], rax
0x400225:	cmp	qword ptr [rbp - 0xd8], 0
0x40022d:	jne	0x400239
<Block for 0x4002a4, 15 bytes>
0x4002a4:	lea	rax, [rbp - 0xd0]
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x500020
<Block for 0x40022f, 10 bytes>
0x40022f:	mov	edi, 0xffffffff
0x400234:	call	0x500008
<Block for 0x400239, 25 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0xd8]
0x400240:	mov	edx, 0x63
0x400245:	mov	esi, 0x41
0x40024a:	mov	rdi, rax
0x40024d:	call	0x500010
<Block for 0x4002b3, 16 bytes>
0x4002b3:	nop	
0x4002b4:	mov	rax, qword ptr [rbp - 8]
0x4002b8:	xor	rax, qword ptr fs:[0x28]
0x4002c1:	je	0x4002c8
<Block for 0x400252, 53 bytes>
0x400252:	mov	rax, qword ptr [rbp - 0xd8]
0x400259:	add	rax, 0x63
0x40025d:	mov	byte ptr [rax], 0
0x400260:	mov	rax, qword ptr [rbp - 0xd8]
0x400267:	mov	qword ptr [rbp - 0xe0], rax
0x40026e:	lea	rax, [rbp - 0xd0]
0x400275:	mov	edx, 0xc7
0x40027a:	mov	esi, 0x43
0x40027f:	mov	rdi, rax
0x400282:	call	0x500010
<Block for 0x4002c8, 2 bytes>
0x4002c8:	leave	
0x4002c9:	ret	
<Block for 0x4002c3, 5 bytes>
0x4002c3:	call	0x500028
