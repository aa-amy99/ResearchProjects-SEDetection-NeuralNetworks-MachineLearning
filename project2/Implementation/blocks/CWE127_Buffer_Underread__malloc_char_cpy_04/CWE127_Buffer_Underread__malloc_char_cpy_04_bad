<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, 1
0x40002e:	test	eax, eax
0x400030:	je	0x400090
<Block for 0x400090, 25 bytes>
0x400090:	lea	rax, [rbp - 0xd0]
0x400097:	mov	edx, 0xc7
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0x64
0x400037:	call	0x500000
<Block for 0x4000a9, 29 bytes>
0x4000a9:	mov	byte ptr [rbp - 9], 0
0x4000ad:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b4:	lea	rax, [rbp - 0xd0]
0x4000bb:	mov	rsi, rdx
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x40003c, 17 bytes>
0x40003c:	mov	qword ptr [rbp - 0xd8], rax
0x400043:	cmp	qword ptr [rbp - 0xd8], 0
0x40004b:	jne	0x400057
<Block for 0x4000c6, 15 bytes>
0x4000c6:	lea	rax, [rbp - 0xd0]
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500020
<Block for 0x40004d, 10 bytes>
0x40004d:	mov	edi, 0xffffffff
0x400052:	call	0x500008
<Block for 0x400057, 25 bytes>
0x400057:	mov	rax, qword ptr [rbp - 0xd8]
0x40005e:	mov	edx, 0x63
0x400063:	mov	esi, 0x41
0x400068:	mov	rdi, rax
0x40006b:	call	0x500010
<Block for 0x4000d5, 16 bytes>
0x4000d5:	nop	
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	xor	rax, qword ptr fs:[0x28]
0x4000e3:	je	0x4000ea
<Block for 0x400070, 57 bytes>
0x400070:	mov	rax, qword ptr [rbp - 0xd8]
0x400077:	add	rax, 0x63
0x40007b:	mov	byte ptr [rax], 0
0x40007e:	mov	rax, qword ptr [rbp - 0xd8]
0x400085:	sub	rax, 8
0x400089:	mov	qword ptr [rbp - 0xe0], rax
0x400090:	lea	rax, [rbp - 0xd0]
0x400097:	mov	edx, 0xc7
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000ea, 2 bytes>
0x4000ea:	leave	
0x4000eb:	ret	
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500028
