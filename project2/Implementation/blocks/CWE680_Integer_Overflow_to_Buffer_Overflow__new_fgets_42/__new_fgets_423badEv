<Block for 0x40008b, 29 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x20
0x400097:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40009e:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a1:	mov	edi, eax
0x4000a3:	call	0x400000
<Block for 0x4000a8, 28 bytes>
0x4000a8:	mov	dword ptr [rbp - 0x1c], eax
0x4000ab:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ae:	cdqe	
0x4000b0:	shl	rax, 2
0x4000b4:	mov	qword ptr [rbp - 0x10], rax
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500028
<Block for 0x4000c4, 23 bytes>
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	mov	qword ptr [rbp - 0x18], 0
0x4000d0:	mov	eax, dword ptr [rbp - 0x1c]
0x4000d3:	cdqe	
0x4000d5:	cmp	qword ptr [rbp - 0x18], rax
0x4000d9:	jae	0x4000fb
<Block for 0x4000db, 32 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	lea	rdx, [rax*4]
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	add	rax, rdx
0x4000ee:	mov	dword ptr [rax], 0
0x4000f4:	add	qword ptr [rbp - 0x18], 1
0x4000f9:	jmp	0x4000d0
<Block for 0x4000fb, 13 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	mov	eax, dword ptr [rax]
0x400101:	mov	edi, eax
0x400103:	call	0x500030
<Block for 0x4000d0, 11 bytes>
0x4000d0:	mov	eax, dword ptr [rbp - 0x1c]
0x4000d3:	cdqe	
0x4000d5:	cmp	qword ptr [rbp - 0x18], rax
0x4000d9:	jae	0x4000fb
<Block for 0x400108, 7 bytes>
0x400108:	cmp	qword ptr [rbp - 8], 0
0x40010d:	je	0x40011b
<Block for 0x40011b, 3 bytes>
0x40011b:	nop	
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500038
