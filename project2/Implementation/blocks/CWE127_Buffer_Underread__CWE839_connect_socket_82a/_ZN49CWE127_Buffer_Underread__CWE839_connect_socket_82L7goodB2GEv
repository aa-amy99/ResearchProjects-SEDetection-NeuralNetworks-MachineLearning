<Block for 0x4001c7, 62 bytes>
0x4001c7:	endbr64	
0x4001cb:	push	rbp
0x4001cc:	mov	rbp, rsp
0x4001cf:	push	rbx
0x4001d0:	sub	rsp, 0x58
0x4001d4:	mov	rax, qword ptr fs:[0x28]
0x4001dd:	mov	qword ptr [rbp - 0x18], rax
0x4001e1:	xor	eax, eax
0x4001e3:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4001ea:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4001f1:	mov	edx, 6
0x4001f6:	mov	esi, 1
0x4001fb:	mov	edi, 2
0x400200:	call	0x500000
<Block for 0x400205, 13 bytes>
0x400205:	mov	dword ptr [rbp - 0x50], eax
0x400208:	cmp	dword ptr [rbp - 0x50], -1
0x40020c:	je	0x4002ad
<Block for 0x4002ad, 3 bytes>
0x4002ad:	nop	
0x4002ae:	jmp	0x4002b1
<Block for 0x400212, 22 bytes>
0x400212:	lea	rax, [rbp - 0x40]
0x400216:	mov	edx, 0x10
0x40021b:	mov	esi, 0
0x400220:	mov	rdi, rax
0x400223:	call	0x500008
<Block for 0x4002b1, 6 bytes>
0x4002b1:	cmp	dword ptr [rbp - 0x50], -1
0x4002b5:	je	0x4002c1
<Block for 0x400228, 18 bytes>
0x400228:	mov	word ptr [rbp - 0x40], 2
0x40022e:	lea	rdi, [rip + 0x150]
0x400235:	call	0x500010
<Block for 0x4002c1, 10 bytes>
0x4002c1:	mov	edi, 8
0x4002c6:	call	0x500040
<Block for 0x4002b7, 10 bytes>
0x4002b7:	mov	eax, dword ptr [rbp - 0x50]
0x4002ba:	mov	edi, eax
0x4002bc:	call	0x500038
<Block for 0x40023a, 13 bytes>
0x40023a:	mov	dword ptr [rbp - 0x3c], eax
0x40023d:	mov	edi, 0x6987
0x400242:	call	0x500018
<Block for 0x4002cb, 11 bytes>
0x4002cb:	mov	rbx, rax
0x4002ce:	mov	rdi, rbx
0x4002d1:	call	0x4003be
<Block for 0x400247, 26 bytes>
0x400247:	mov	word ptr [rbp - 0x3e], ax
0x40024b:	lea	rcx, [rbp - 0x40]
0x40024f:	mov	eax, dword ptr [rbp - 0x50]
0x400252:	mov	edx, 0x10
0x400257:	mov	rsi, rcx
0x40025a:	mov	edi, eax
0x40025c:	call	0x500020
<Block for 0x4002d6, 28 bytes>
0x4002d6:	mov	qword ptr [rbp - 0x48], rbx
0x4002da:	mov	rax, qword ptr [rbp - 0x48]
0x4002de:	mov	rax, qword ptr [rax]
0x4002e1:	mov	rcx, qword ptr [rax]
0x4002e4:	mov	edx, dword ptr [rbp - 0x54]
0x4002e7:	mov	rax, qword ptr [rbp - 0x48]
0x4002eb:	mov	esi, edx
0x4002ed:	mov	rdi, rax
0x4002f0:	call	rcx
<Block for 0x400261, 10 bytes>
0x400261:	cmp	eax, -1
0x400264:	sete	al
0x400267:	test	al, al
0x400269:	jne	0x4002b0
<Block for 0x4002f2, 9 bytes>
0x4002f2:	mov	rax, qword ptr [rbp - 0x48]
0x4002f6:	test	rax, rax
0x4002f9:	je	0x400308
<Block for 0x40026b, 24 bytes>
0x40026b:	lea	rsi, [rbp - 0x26]
0x40026f:	mov	eax, dword ptr [rbp - 0x50]
0x400272:	mov	ecx, 0
0x400277:	mov	edx, 0xd
0x40027c:	mov	edi, eax
0x40027e:	call	0x500028
<Block for 0x4002b0, 1 bytes>
0x4002b0:	nop	
<Block for 0x400308, 16 bytes>
0x400308:	nop	
0x400309:	mov	rax, qword ptr [rbp - 0x18]
0x40030d:	xor	rax, qword ptr fs:[0x28]
0x400316:	je	0x40031d
<Block for 0x4002fb, 13 bytes>
0x4002fb:	mov	esi, 8
0x400300:	mov	rdi, rax
0x400303:	call	0x500048
<Block for 0x400283, 9 bytes>
0x400283:	mov	dword ptr [rbp - 0x4c], eax
0x400286:	cmp	dword ptr [rbp - 0x4c], -1
0x40028a:	je	0x4002b1
<Block for 0x40031d, 7 bytes>
0x40031d:	add	rsp, 0x58
0x400321:	pop	rbx
0x400322:	pop	rbp
0x400323:	ret	
<Block for 0x400318, 5 bytes>
0x400318:	call	0x500050
<Block for 0x40028c, 6 bytes>
0x40028c:	cmp	dword ptr [rbp - 0x4c], 0
0x400290:	je	0x4002b1
<Block for 0x400292, 22 bytes>
0x400292:	mov	eax, dword ptr [rbp - 0x4c]
0x400295:	cdqe	
0x400297:	mov	byte ptr [rbp + rax - 0x26], 0
0x40029c:	lea	rax, [rbp - 0x26]
0x4002a0:	mov	rdi, rax
0x4002a3:	call	0x500030
<Block for 0x4002a8, 5 bytes>
0x4002a8:	mov	dword ptr [rbp - 0x54], eax
0x4002ab:	jmp	0x4002b1
