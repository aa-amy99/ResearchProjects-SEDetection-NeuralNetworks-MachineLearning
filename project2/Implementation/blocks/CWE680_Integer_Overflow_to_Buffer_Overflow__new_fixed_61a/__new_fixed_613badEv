<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400013:	mov	eax, dword ptr [rbp - 0x1c]
0x400016:	mov	edi, eax
0x400018:	call	0x500000
<Block for 0x40001d, 28 bytes>
0x40001d:	mov	dword ptr [rbp - 0x1c], eax
0x400020:	mov	eax, dword ptr [rbp - 0x1c]
0x400023:	cdqe	
0x400025:	shl	rax, 2
0x400029:	mov	qword ptr [rbp - 0x10], rax
0x40002d:	mov	rax, qword ptr [rbp - 0x10]
0x400031:	mov	rdi, rax
0x400034:	call	0x500008
<Block for 0x400039, 23 bytes>
0x400039:	mov	qword ptr [rbp - 8], rax
0x40003d:	mov	qword ptr [rbp - 0x18], 0
0x400045:	mov	eax, dword ptr [rbp - 0x1c]
0x400048:	cdqe	
0x40004a:	cmp	qword ptr [rbp - 0x18], rax
0x40004e:	jae	0x400070
<Block for 0x400050, 32 bytes>
0x400050:	mov	rax, qword ptr [rbp - 0x18]
0x400054:	lea	rdx, [rax*4]
0x40005c:	mov	rax, qword ptr [rbp - 8]
0x400060:	add	rax, rdx
0x400063:	mov	dword ptr [rax], 0
0x400069:	add	qword ptr [rbp - 0x18], 1
0x40006e:	jmp	0x400045
<Block for 0x400070, 13 bytes>
0x400070:	mov	rax, qword ptr [rbp - 8]
0x400074:	mov	eax, dword ptr [rax]
0x400076:	mov	edi, eax
0x400078:	call	0x500010
<Block for 0x400045, 11 bytes>
0x400045:	mov	eax, dword ptr [rbp - 0x1c]
0x400048:	cdqe	
0x40004a:	cmp	qword ptr [rbp - 0x18], rax
0x40004e:	jae	0x400070
<Block for 0x40007d, 7 bytes>
0x40007d:	cmp	qword ptr [rbp - 8], 0
0x400082:	je	0x400090
<Block for 0x400090, 3 bytes>
0x400090:	nop	
0x400091:	leave	
0x400092:	ret	
<Block for 0x400084, 12 bytes>
0x400084:	mov	rax, qword ptr [rbp - 8]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500018
