<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x40006f
<Block for 0x40006f, 24 bytes>
0x40006f:	mov	rdx, qword ptr [rip + 0xfffaa]
0x400076:	lea	rax, [rbp - 0x12]
0x40007a:	mov	esi, 0xa
0x40007f:	mov	rdi, rax
0x400082:	call	0x500028
<Block for 0x400029, 17 bytes>
0x400029:	lea	rax, [rbp - 0x12]
0x40002d:	mov	rdi, rax
0x400030:	mov	eax, 0
0x400035:	call	0x500008
<Block for 0x400087, 11 bytes>
0x400087:	mov	qword ptr [rbp - 0x28], rax
0x40008b:	cmp	qword ptr [rbp - 0x28], 0
0x400090:	jne	0x4000a8
<Block for 0x40003a, 13 bytes>
0x40003a:	cdqe	
0x40003c:	mov	qword ptr [rbp - 0x20], rax
0x400040:	cmp	qword ptr [rbp - 0x20], 0
0x400045:	jne	0x40005d
<Block for 0x400092, 12 bytes>
0x400092:	lea	rdi, [rip + 0x11f]
0x400099:	call	0x500010
<Block for 0x4000a8, 16 bytes>
0x4000a8:	mov	byte ptr [rbp - 9], 0
0x4000ac:	lea	rax, [rbp - 0x12]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500010
<Block for 0x400047, 12 bytes>
0x400047:	lea	rdi, [rip + 0x16a]
0x40004e:	call	0x500010
<Block for 0x40005d, 16 bytes>
0x40005d:	mov	byte ptr [rbp - 9], 0
0x400061:	lea	rax, [rbp - 0x12]
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x40009e, 10 bytes>
0x40009e:	mov	edi, 1
0x4000a3:	call	0x500018
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x400053, 10 bytes>
0x400053:	mov	edi, 1
0x400058:	call	0x500018
<Block for 0x40006d, 2 bytes>
0x40006d:	jmp	0x4000b8
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500030
