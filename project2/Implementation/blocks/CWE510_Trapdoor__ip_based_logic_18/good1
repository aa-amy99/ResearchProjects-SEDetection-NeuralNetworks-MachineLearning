<Block for 0x4001aa, 66 bytes>
0x4001aa:	endbr64	
0x4001ae:	push	rbp
0x4001af:	mov	rbp, rsp
0x4001b2:	sub	rsp, 0x30
0x4001b6:	mov	rax, qword ptr fs:[0x28]
0x4001bf:	mov	qword ptr [rbp - 8], rax
0x4001c3:	xor	eax, eax
0x4001c5:	nop	
0x4001c6:	endbr64	
0x4001ca:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001d1:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001d8:	mov	edx, 6
0x4001dd:	mov	esi, 1
0x4001e2:	mov	edi, 2
0x4001e7:	call	0x500000
<Block for 0x4001ec, 13 bytes>
0x4001ec:	mov	dword ptr [rbp - 0x24], eax
0x4001ef:	cmp	dword ptr [rbp - 0x24], -1
0x4001f3:	je	0x4002a5
<Block for 0x4002a5, 3 bytes>
0x4002a5:	nop	
0x4002a6:	jmp	0x4002af
<Block for 0x4001f9, 22 bytes>
0x4001f9:	lea	rax, [rbp - 0x20]
0x4001fd:	mov	edx, 0x10
0x400202:	mov	esi, 0
0x400207:	mov	rdi, rax
0x40020a:	call	0x500008
<Block for 0x4002af, 6 bytes>
0x4002af:	cmp	dword ptr [rbp - 0x24], -1
0x4002b3:	je	0x4002bf
<Block for 0x40020f, 23 bytes>
0x40020f:	mov	word ptr [rbp - 0x20], 2
0x400215:	mov	dword ptr [rbp - 0x1c], 0
0x40021c:	mov	edi, 0x4e20
0x400221:	call	0x500010
<Block for 0x4002bf, 6 bytes>
0x4002bf:	cmp	dword ptr [rbp - 0x28], -1
0x4002c3:	je	0x4002cf
<Block for 0x4002b5, 10 bytes>
0x4002b5:	mov	eax, dword ptr [rbp - 0x24]
0x4002b8:	mov	edi, eax
0x4002ba:	call	0x500058
<Block for 0x400226, 26 bytes>
0x400226:	mov	word ptr [rbp - 0x1e], ax
0x40022a:	lea	rcx, [rbp - 0x20]
0x40022e:	mov	eax, dword ptr [rbp - 0x24]
0x400231:	mov	edx, 0x10
0x400236:	mov	rsi, rcx
0x400239:	mov	edi, eax
0x40023b:	call	0x500018
<Block for 0x4002cf, 16 bytes>
0x4002cf:	nop	
0x4002d0:	mov	rax, qword ptr [rbp - 8]
0x4002d4:	xor	rax, qword ptr fs:[0x28]
0x4002dd:	je	0x4002e4
<Block for 0x4002c5, 10 bytes>
0x4002c5:	mov	eax, dword ptr [rbp - 0x28]
0x4002c8:	mov	edi, eax
0x4002ca:	call	0x500058
<Block for 0x400240, 5 bytes>
0x400240:	cmp	eax, -1
0x400243:	je	0x4002a8
<Block for 0x4002e4, 2 bytes>
0x4002e4:	leave	
0x4002e5:	ret	
<Block for 0x4002df, 5 bytes>
0x4002df:	call	0x500060
<Block for 0x4002a8, 3 bytes>
0x4002a8:	nop	
0x4002a9:	jmp	0x4002af
<Block for 0x400245, 15 bytes>
0x400245:	mov	eax, dword ptr [rbp - 0x24]
0x400248:	mov	esi, 5
0x40024d:	mov	edi, eax
0x40024f:	call	0x500020
<Block for 0x400254, 5 bytes>
0x400254:	cmp	eax, -1
0x400257:	je	0x4002ab
<Block for 0x4002ab, 3 bytes>
0x4002ab:	nop	
0x4002ac:	jmp	0x4002af
<Block for 0x400259, 20 bytes>
0x400259:	mov	eax, dword ptr [rbp - 0x24]
0x40025c:	mov	edx, 0
0x400261:	mov	esi, 0
0x400266:	mov	edi, eax
0x400268:	call	0x500028
<Block for 0x40026d, 9 bytes>
0x40026d:	mov	dword ptr [rbp - 0x28], eax
0x400270:	cmp	dword ptr [rbp - 0x28], -1
0x400274:	je	0x4002ae
<Block for 0x400276, 27 bytes>
0x400276:	mov	eax, dword ptr [rbp - 0x28]
0x400279:	mov	ecx, 0
0x40027e:	mov	edx, 8
0x400283:	lea	rsi, [rip + 0x90]
0x40028a:	mov	edi, eax
0x40028c:	call	0x500048
<Block for 0x4002ae, 1 bytes>
0x4002ae:	nop	
<Block for 0x400291, 6 bytes>
0x400291:	cmp	rax, -1
0x400295:	jne	0x4002af
<Block for 0x400297, 12 bytes>
0x400297:	lea	rdi, [rip + 0x85]
0x40029e:	call	0x500050
<Block for 0x4002a3, 2 bytes>
0x4002a3:	jmp	0x4002af
