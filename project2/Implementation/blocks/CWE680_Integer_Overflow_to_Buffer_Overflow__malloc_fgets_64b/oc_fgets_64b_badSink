<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	rax, qword ptr [rbp - 0x28]
0x400014:	mov	qword ptr [rbp - 0x10], rax
0x400018:	mov	rax, qword ptr [rbp - 0x10]
0x40001c:	mov	eax, dword ptr [rax]
0x40001e:	mov	dword ptr [rbp - 0x1c], eax
0x400021:	mov	eax, dword ptr [rbp - 0x1c]
0x400024:	cdqe	
0x400026:	shl	rax, 2
0x40002a:	mov	rdi, rax
0x40002d:	call	0x500000
<Block for 0x400032, 11 bytes>
0x400032:	mov	qword ptr [rbp - 8], rax
0x400036:	cmp	qword ptr [rbp - 8], 0
0x40003b:	jne	0x400047
<Block for 0x40003d, 10 bytes>
0x40003d:	mov	edi, 0xffffffff
0x400042:	call	0x500008
<Block for 0x400047, 10 bytes>
0x400047:	mov	qword ptr [rbp - 0x18], 0
0x40004f:	jmp	0x40006f
<Block for 0x40006f, 11 bytes>
0x40006f:	mov	eax, dword ptr [rbp - 0x1c]
0x400072:	cdqe	
0x400074:	cmp	qword ptr [rbp - 0x18], rax
0x400078:	jb	0x400051
<Block for 0x400051, 41 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x18]
0x400055:	lea	rdx, [rax*4]
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	add	rax, rdx
0x400064:	mov	dword ptr [rax], 0
0x40006a:	add	qword ptr [rbp - 0x18], 1
0x40006f:	mov	eax, dword ptr [rbp - 0x1c]
0x400072:	cdqe	
0x400074:	cmp	qword ptr [rbp - 0x18], rax
0x400078:	jb	0x400051
<Block for 0x40007a, 13 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	mov	eax, dword ptr [rax]
0x400080:	mov	edi, eax
0x400082:	call	0x500010
<Block for 0x400087, 12 bytes>
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500018
<Block for 0x400093, 3 bytes>
0x400093:	nop	
0x400094:	leave	
0x400095:	ret	
