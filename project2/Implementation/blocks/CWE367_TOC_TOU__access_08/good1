<Block for 0x40019c, 37 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	add	rsp, -0x80
0x4001a8:	mov	rax, qword ptr fs:[0x28]
0x4001b1:	mov	qword ptr [rbp - 8], rax
0x4001b5:	xor	eax, eax
0x4001b7:	mov	eax, 0
0x4001bc:	call	0x40000f
<Block for 0x4001c1, 4 bytes>
0x4001c1:	test	eax, eax
0x4001c3:	je	0x4001d6
<Block for 0x4001d6, 134 bytes>
0x4001d6:	mov	qword ptr [rbp - 0x70], 0
0x4001de:	mov	qword ptr [rbp - 0x68], 0
0x4001e6:	mov	qword ptr [rbp - 0x60], 0
0x4001ee:	mov	qword ptr [rbp - 0x58], 0
0x4001f6:	mov	qword ptr [rbp - 0x50], 0
0x4001fe:	mov	qword ptr [rbp - 0x48], 0
0x400206:	mov	qword ptr [rbp - 0x40], 0
0x40020e:	mov	qword ptr [rbp - 0x38], 0
0x400216:	mov	qword ptr [rbp - 0x30], 0
0x40021e:	mov	qword ptr [rbp - 0x28], 0
0x400226:	mov	qword ptr [rbp - 0x20], 0
0x40022e:	mov	qword ptr [rbp - 0x18], 0
0x400236:	mov	dword ptr [rbp - 0x10], 0
0x40023d:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400244:	mov	rdx, qword ptr [rip + 0xffdb5]
0x40024b:	lea	rax, [rbp - 0x70]
0x40024f:	mov	esi, 0x64
0x400254:	mov	rdi, rax
0x400257:	call	0x500008
<Block for 0x4001c5, 12 bytes>
0x4001c5:	lea	rdi, [rip + 0x2d3]
0x4001cc:	call	0x500010
<Block for 0x40025c, 5 bytes>
0x40025c:	test	rax, rax
0x40025f:	jne	0x400271
<Block for 0x4001d1, 5 bytes>
0x4001d1:	jmp	0x4002f0
<Block for 0x400261, 12 bytes>
0x400261:	lea	rdi, [rip + 0x21c]
0x400268:	call	0x500010
<Block for 0x400271, 11 bytes>
0x400271:	lea	rax, [rbp - 0x70]
0x400275:	movzx	eax, byte ptr [rax]
0x400278:	test	al, al
0x40027a:	je	0x400291
<Block for 0x4002f0, 16 bytes>
0x4002f0:	nop	
0x4002f1:	mov	rax, qword ptr [rbp - 8]
0x4002f5:	xor	rax, qword ptr fs:[0x28]
0x4002fe:	je	0x400305
<Block for 0x40026d, 15 bytes>
0x40026d:	mov	byte ptr [rbp - 0x70], 0
0x400271:	lea	rax, [rbp - 0x70]
0x400275:	movzx	eax, byte ptr [rax]
0x400278:	test	al, al
0x40027a:	je	0x400291
<Block for 0x400291, 22 bytes>
0x400291:	lea	rax, [rbp - 0x70]
0x400295:	mov	esi, 2
0x40029a:	mov	rdi, rax
0x40029d:	mov	eax, 0
0x4002a2:	call	0x500030
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rax, [rbp - 0x70]
0x400280:	mov	rdi, rax
0x400283:	call	0x500018
<Block for 0x400305, 2 bytes>
0x400305:	leave	
0x400306:	ret	
<Block for 0x400300, 5 bytes>
0x400300:	call	0x500048
<Block for 0x4002a7, 9 bytes>
0x4002a7:	mov	dword ptr [rbp - 0x74], eax
0x4002aa:	cmp	dword ptr [rbp - 0x74], -1
0x4002ae:	jne	0x4002ba
<Block for 0x400288, 31 bytes>
0x400288:	sub	rax, 1
0x40028c:	mov	byte ptr [rbp + rax - 0x70], 0
0x400291:	lea	rax, [rbp - 0x70]
0x400295:	mov	esi, 2
0x40029a:	mov	rdi, rax
0x40029d:	mov	eax, 0
0x4002a2:	call	0x500030
<Block for 0x4002b0, 10 bytes>
0x4002b0:	mov	edi, 1
0x4002b5:	call	0x500028
<Block for 0x4002ba, 22 bytes>
0x4002ba:	mov	eax, dword ptr [rbp - 0x74]
0x4002bd:	mov	edx, 0xc
0x4002c2:	lea	rsi, [rip + 0x1eb]
0x4002c9:	mov	edi, eax
0x4002cb:	call	0x500038
<Block for 0x4002d0, 6 bytes>
0x4002d0:	cmp	rax, -1
0x4002d4:	jne	0x4002e0
<Block for 0x4002d6, 10 bytes>
0x4002d6:	mov	edi, 1
0x4002db:	call	0x500028
<Block for 0x4002e0, 6 bytes>
0x4002e0:	cmp	dword ptr [rbp - 0x74], -1
0x4002e4:	je	0x4002f0
<Block for 0x4002e6, 10 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x74]
0x4002e9:	mov	edi, eax
0x4002eb:	call	0x500040
