<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	add	rsp, -0x80
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 8 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x400185
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x40004b, 134 bytes>
0x40004b:	mov	qword ptr [rbp - 0x70], 0
0x400053:	mov	qword ptr [rbp - 0x68], 0
0x40005b:	mov	qword ptr [rbp - 0x60], 0
0x400063:	mov	qword ptr [rbp - 0x58], 0
0x40006b:	mov	qword ptr [rbp - 0x50], 0
0x400073:	mov	qword ptr [rbp - 0x48], 0
0x40007b:	mov	qword ptr [rbp - 0x40], 0
0x400083:	mov	qword ptr [rbp - 0x38], 0
0x40008b:	mov	qword ptr [rbp - 0x30], 0
0x400093:	mov	qword ptr [rbp - 0x28], 0
0x40009b:	mov	qword ptr [rbp - 0x20], 0
0x4000a3:	mov	qword ptr [rbp - 0x18], 0
0x4000ab:	mov	dword ptr [rbp - 0x10], 0
0x4000b2:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x4000b9:	mov	rdx, qword ptr [rip + 0xfff40]
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	esi, 0x64
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500008
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500048
<Block for 0x4000d1, 5 bytes>
0x4000d1:	test	rax, rax
0x4000d4:	jne	0x4000e6
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0x3a7]
0x4000dd:	call	0x500010
<Block for 0x4000e6, 11 bytes>
0x4000e6:	lea	rax, [rbp - 0x70]
0x4000ea:	movzx	eax, byte ptr [rax]
0x4000ed:	test	al, al
0x4000ef:	je	0x400106
<Block for 0x4000e2, 15 bytes>
0x4000e2:	mov	byte ptr [rbp - 0x70], 0
0x4000e6:	lea	rax, [rbp - 0x70]
0x4000ea:	movzx	eax, byte ptr [rax]
0x4000ed:	test	al, al
0x4000ef:	je	0x400106
<Block for 0x400106, 17 bytes>
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	esi, 2
0x40010f:	mov	rdi, rax
0x400112:	call	0x500020
<Block for 0x4000f1, 12 bytes>
0x4000f1:	lea	rax, [rbp - 0x70]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500018
<Block for 0x400117, 5 bytes>
0x400117:	cmp	eax, -1
0x40011a:	jne	0x400126
<Block for 0x4000fd, 26 bytes>
0x4000fd:	sub	rax, 1
0x400101:	mov	byte ptr [rbp + rax - 0x70], 0
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	esi, 2
0x40010f:	mov	rdi, rax
0x400112:	call	0x500020
<Block for 0x40011c, 10 bytes>
0x40011c:	mov	edi, 1
0x400121:	call	0x500028
<Block for 0x400126, 22 bytes>
0x400126:	lea	rax, [rbp - 0x70]
0x40012a:	mov	esi, 2
0x40012f:	mov	rdi, rax
0x400132:	mov	eax, 0
0x400137:	call	0x500030
<Block for 0x40013c, 9 bytes>
0x40013c:	mov	dword ptr [rbp - 0x74], eax
0x40013f:	cmp	dword ptr [rbp - 0x74], -1
0x400143:	jne	0x40014f
<Block for 0x400145, 10 bytes>
0x400145:	mov	edi, 1
0x40014a:	call	0x500028
<Block for 0x40014f, 22 bytes>
0x40014f:	mov	eax, dword ptr [rbp - 0x74]
0x400152:	mov	edx, 0xb
0x400157:	lea	rsi, [rip + 0x335]
0x40015e:	mov	edi, eax
0x400160:	call	0x500038
<Block for 0x400165, 6 bytes>
0x400165:	cmp	rax, -1
0x400169:	jne	0x400175
<Block for 0x40016b, 10 bytes>
0x40016b:	mov	edi, 1
0x400170:	call	0x500028
<Block for 0x400175, 6 bytes>
0x400175:	cmp	dword ptr [rbp - 0x74], -1
0x400179:	je	0x400185
<Block for 0x40017b, 10 bytes>
0x40017b:	mov	eax, dword ptr [rbp - 0x74]
0x40017e:	mov	edi, eax
0x400180:	call	0x500040
