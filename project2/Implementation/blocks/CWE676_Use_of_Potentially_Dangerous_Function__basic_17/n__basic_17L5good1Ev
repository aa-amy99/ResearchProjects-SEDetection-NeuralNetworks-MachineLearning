<Block for 0x400068, 40 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	rax, qword ptr fs:[0x28]
0x40007d:	mov	qword ptr [rbp - 8], rax
0x400081:	xor	eax, eax
0x400083:	mov	dword ptr [rbp - 0x18], 0
0x40008a:	cmp	dword ptr [rbp - 0x18], 0
0x40008e:	jg	0x4000ca
<Block for 0x400090, 17 bytes>
0x400090:	mov	esi, 0xa
0x400095:	lea	rdi, [rip + 0xfff74]
0x40009c:	call	0x40015a
<Block for 0x4000ca, 16 bytes>
0x4000ca:	nop	
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	xor	rax, qword ptr fs:[0x28]
0x4000d8:	je	0x4000df
<Block for 0x4000a1, 19 bytes>
0x4000a1:	lea	rax, [rbp - 0x12]
0x4000a5:	mov	rsi, rax
0x4000a8:	lea	rdi, [rip + 0xfff51]
0x4000af:	call	0x500008
<Block for 0x4000df, 2 bytes>
0x4000df:	leave	
0x4000e0:	ret	
<Block for 0x4000da, 5 bytes>
0x4000da:	call	0x500018
<Block for 0x4000b4, 16 bytes>
0x4000b4:	mov	byte ptr [rbp - 9], 0
0x4000b8:	lea	rax, [rbp - 0x12]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500010
<Block for 0x4000c4, 6 bytes>
0x4000c4:	add	dword ptr [rbp - 0x18], 1
0x4000c8:	jmp	0x40008a
<Block for 0x40008a, 6 bytes>
0x40008a:	cmp	dword ptr [rbp - 0x18], 0
0x40008e:	jg	0x4000ca
