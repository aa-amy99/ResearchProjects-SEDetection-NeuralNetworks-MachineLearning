<Block for 0x400000, 72 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	qword ptr [rbp - 0x98], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	dword ptr [rbp - 0x84], 2
0x40002f:	lea	rdx, [rbp - 0x84]
0x400036:	mov	rax, qword ptr [rbp - 0x98]
0x40003d:	mov	rsi, rdx
0x400040:	mov	rdi, rax
0x400043:	call	0x4001bc
<Block for 0x400048, 29 bytes>
0x400048:	mov	rax, qword ptr [rax]
0x40004b:	mov	qword ptr [rbp - 0x78], rax
0x40004f:	lea	rax, [rbp - 0x70]
0x400053:	mov	edx, 0x63
0x400058:	mov	esi, 0x43
0x40005d:	mov	rdi, rax
0x400060:	call	0x500000
<Block for 0x400065, 19 bytes>
0x400065:	mov	byte ptr [rbp - 0xd], 0
0x400069:	mov	qword ptr [rbp - 0x80], 0
0x400071:	cmp	qword ptr [rbp - 0x80], 0x63
0x400076:	ja	0x40009a
<Block for 0x400078, 34 bytes>
0x400078:	mov	rdx, qword ptr [rbp - 0x78]
0x40007c:	mov	rax, qword ptr [rbp - 0x80]
0x400080:	add	rdx, rax
0x400083:	lea	rcx, [rbp - 0x70]
0x400087:	mov	rax, qword ptr [rbp - 0x80]
0x40008b:	add	rax, rcx
0x40008e:	movzx	eax, byte ptr [rax]
0x400091:	mov	byte ptr [rdx], al
0x400093:	add	qword ptr [rbp - 0x80], 1
0x400098:	jmp	0x400071
<Block for 0x40009a, 23 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 0x78]
0x40009e:	add	rax, 0x63
0x4000a2:	mov	byte ptr [rax], 0
0x4000a5:	mov	rax, qword ptr [rbp - 0x78]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500008
<Block for 0x400071, 7 bytes>
0x400071:	cmp	qword ptr [rbp - 0x80], 0x63
0x400076:	ja	0x40009a
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500010
