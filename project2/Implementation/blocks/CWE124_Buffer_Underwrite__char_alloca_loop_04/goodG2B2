<Block for 0x4002c6, 84 bytes>
0x4002c6:	endbr64	
0x4002ca:	push	rbp
0x4002cb:	mov	rbp, rsp
0x4002ce:	sub	rsp, 0x90
0x4002d5:	mov	rax, qword ptr fs:[0x28]
0x4002de:	mov	qword ptr [rbp - 8], rax
0x4002e2:	xor	eax, eax
0x4002e4:	mov	eax, 0x10
0x4002e9:	sub	rax, 1
0x4002ed:	add	rax, 0x6c
0x4002f1:	mov	esi, 0x10
0x4002f6:	mov	edx, 0
0x4002fb:	div	rsi
0x4002fe:	imul	rax, rax, 0x10
0x400302:	mov	rdx, rax
0x400305:	and	rdx, 0xfffffffffffff000
0x40030c:	mov	rcx, rsp
0x40030f:	sub	rcx, rdx
0x400312:	mov	rdx, rcx
0x400315:	cmp	rsp, rdx
0x400318:	je	0x40032c
<Block for 0x40032c, 26 bytes>
0x40032c:	mov	rdx, rax
0x40032f:	and	edx, 0xfff
0x400335:	sub	rsp, rdx
0x400338:	mov	rdx, rax
0x40033b:	and	edx, 0xfff
0x400341:	test	rdx, rdx
0x400344:	je	0x400356
<Block for 0x40031a, 18 bytes>
0x40031a:	sub	rsp, 0x1000
0x400321:	or	qword ptr [rsp + 0xff8], 0
0x40032a:	jmp	0x400315
<Block for 0x400356, 41 bytes>
0x400356:	mov	rax, rsp
0x400359:	add	rax, 0xf
0x40035d:	shr	rax, 4
0x400361:	shl	rax, 4
0x400365:	mov	qword ptr [rbp - 0x78], rax
0x400369:	mov	rax, qword ptr [rbp - 0x78]
0x40036d:	mov	edx, 0x63
0x400372:	mov	esi, 0x41
0x400377:	mov	rdi, rax
0x40037a:	call	0x500000
<Block for 0x400346, 57 bytes>
0x400346:	and	eax, 0xfff
0x40034b:	sub	rax, 8
0x40034f:	add	rax, rsp
0x400352:	or	qword ptr [rax], 0
0x400356:	mov	rax, rsp
0x400359:	add	rax, 0xf
0x40035d:	shr	rax, 4
0x400361:	shl	rax, 4
0x400365:	mov	qword ptr [rbp - 0x78], rax
0x400369:	mov	rax, qword ptr [rbp - 0x78]
0x40036d:	mov	edx, 0x63
0x400372:	mov	esi, 0x41
0x400377:	mov	rdi, rax
0x40037a:	call	0x500000
<Block for 0x400315, 5 bytes>
0x400315:	cmp	rsp, rdx
0x400318:	je	0x40032c
<Block for 0x40037f, 20 bytes>
0x40037f:	mov	rax, qword ptr [rbp - 0x78]
0x400383:	add	rax, 0x63
0x400387:	mov	byte ptr [rax], 0
0x40038a:	mov	eax, 1
0x40038f:	test	eax, eax
0x400391:	je	0x40039e
<Block for 0x40039e, 22 bytes>
0x40039e:	lea	rax, [rbp - 0x70]
0x4003a2:	mov	edx, 0x63
0x4003a7:	mov	esi, 0x43
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x500000
<Block for 0x400393, 33 bytes>
0x400393:	mov	rax, qword ptr [rbp - 0x78]
0x400397:	mov	qword ptr [rbp - 0x88], rax
0x40039e:	lea	rax, [rbp - 0x70]
0x4003a2:	mov	edx, 0x63
0x4003a7:	mov	esi, 0x43
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x500000
<Block for 0x4003b4, 14 bytes>
0x4003b4:	mov	byte ptr [rbp - 0xd], 0
0x4003b8:	mov	qword ptr [rbp - 0x80], 0
0x4003c0:	jmp	0x4003e5
<Block for 0x4003e5, 7 bytes>
0x4003e5:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003ea:	jbe	0x4003c2
<Block for 0x4003c2, 42 bytes>
0x4003c2:	mov	rdx, qword ptr [rbp - 0x88]
0x4003c9:	mov	rax, qword ptr [rbp - 0x80]
0x4003cd:	add	rdx, rax
0x4003d0:	lea	rcx, [rbp - 0x70]
0x4003d4:	mov	rax, qword ptr [rbp - 0x80]
0x4003d8:	add	rax, rcx
0x4003db:	movzx	eax, byte ptr [rax]
0x4003de:	mov	byte ptr [rdx], al
0x4003e0:	add	qword ptr [rbp - 0x80], 1
0x4003e5:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003ea:	jbe	0x4003c2
<Block for 0x4003ec, 29 bytes>
0x4003ec:	mov	rax, qword ptr [rbp - 0x88]
0x4003f3:	add	rax, 0x63
0x4003f7:	mov	byte ptr [rax], 0
0x4003fa:	mov	rax, qword ptr [rbp - 0x88]
0x400401:	mov	rdi, rax
0x400404:	call	0x500008
<Block for 0x400409, 16 bytes>
0x400409:	nop	
0x40040a:	mov	rax, qword ptr [rbp - 8]
0x40040e:	xor	rax, qword ptr fs:[0x28]
0x400417:	je	0x40041e
<Block for 0x40041e, 2 bytes>
0x40041e:	leave	
0x40041f:	ret	
<Block for 0x400419, 5 bytes>
0x400419:	call	0x500010
