<Block for 0x40015e, 84 bytes>
0x40015e:	endbr64	
0x400162:	push	rbp
0x400163:	mov	rbp, rsp
0x400166:	sub	rsp, 0x90
0x40016d:	mov	rax, qword ptr fs:[0x28]
0x400176:	mov	qword ptr [rbp - 8], rax
0x40017a:	xor	eax, eax
0x40017c:	mov	eax, 0x10
0x400181:	sub	rax, 1
0x400185:	add	rax, 0x6c
0x400189:	mov	esi, 0x10
0x40018e:	mov	edx, 0
0x400193:	div	rsi
0x400196:	imul	rax, rax, 0x10
0x40019a:	mov	rdx, rax
0x40019d:	and	rdx, 0xfffffffffffff000
0x4001a4:	mov	rcx, rsp
0x4001a7:	sub	rcx, rdx
0x4001aa:	mov	rdx, rcx
0x4001ad:	cmp	rsp, rdx
0x4001b0:	je	0x4001c4
<Block for 0x4001c4, 26 bytes>
0x4001c4:	mov	rdx, rax
0x4001c7:	and	edx, 0xfff
0x4001cd:	sub	rsp, rdx
0x4001d0:	mov	rdx, rax
0x4001d3:	and	edx, 0xfff
0x4001d9:	test	rdx, rdx
0x4001dc:	je	0x4001ee
<Block for 0x4001b2, 18 bytes>
0x4001b2:	sub	rsp, 0x1000
0x4001b9:	or	qword ptr [rsp + 0xff8], 0
0x4001c2:	jmp	0x4001ad
<Block for 0x4001ee, 41 bytes>
0x4001ee:	mov	rax, rsp
0x4001f1:	add	rax, 0xf
0x4001f5:	shr	rax, 4
0x4001f9:	shl	rax, 4
0x4001fd:	mov	qword ptr [rbp - 0x78], rax
0x400201:	mov	rax, qword ptr [rbp - 0x78]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x41
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x4001de, 57 bytes>
0x4001de:	and	eax, 0xfff
0x4001e3:	sub	rax, 8
0x4001e7:	add	rax, rsp
0x4001ea:	or	qword ptr [rax], 0
0x4001ee:	mov	rax, rsp
0x4001f1:	add	rax, 0xf
0x4001f5:	shr	rax, 4
0x4001f9:	shl	rax, 4
0x4001fd:	mov	qword ptr [rbp - 0x78], rax
0x400201:	mov	rax, qword ptr [rbp - 0x78]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x41
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x4001ad, 5 bytes>
0x4001ad:	cmp	rsp, rdx
0x4001b0:	je	0x4001c4
<Block for 0x400217, 20 bytes>
0x400217:	mov	rax, qword ptr [rbp - 0x78]
0x40021b:	add	rax, 0x63
0x40021f:	mov	byte ptr [rax], 0
0x400222:	mov	eax, 0
0x400227:	test	eax, eax
0x400229:	je	0x400239
<Block for 0x400239, 33 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0x78]
0x40023d:	mov	qword ptr [rbp - 0x88], rax
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	edx, 0x63
0x40024d:	mov	esi, 0x43
0x400252:	mov	rdi, rax
0x400255:	call	0x500000
<Block for 0x40022b, 12 bytes>
0x40022b:	lea	rdi, [rip + 0x216]
0x400232:	call	0x500008
<Block for 0x40025a, 14 bytes>
0x40025a:	mov	byte ptr [rbp - 0xd], 0
0x40025e:	mov	qword ptr [rbp - 0x80], 0
0x400266:	jmp	0x40028b
<Block for 0x400237, 2 bytes>
0x400237:	jmp	0x400244
<Block for 0x40028b, 7 bytes>
0x40028b:	cmp	qword ptr [rbp - 0x80], 0x63
0x400290:	jbe	0x400268
<Block for 0x400244, 22 bytes>
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	edx, 0x63
0x40024d:	mov	esi, 0x43
0x400252:	mov	rdi, rax
0x400255:	call	0x500000
<Block for 0x400268, 42 bytes>
0x400268:	mov	rdx, qword ptr [rbp - 0x88]
0x40026f:	mov	rax, qword ptr [rbp - 0x80]
0x400273:	add	rdx, rax
0x400276:	lea	rcx, [rbp - 0x70]
0x40027a:	mov	rax, qword ptr [rbp - 0x80]
0x40027e:	add	rax, rcx
0x400281:	movzx	eax, byte ptr [rax]
0x400284:	mov	byte ptr [rdx], al
0x400286:	add	qword ptr [rbp - 0x80], 1
0x40028b:	cmp	qword ptr [rbp - 0x80], 0x63
0x400290:	jbe	0x400268
<Block for 0x400292, 29 bytes>
0x400292:	mov	rax, qword ptr [rbp - 0x88]
0x400299:	add	rax, 0x63
0x40029d:	mov	byte ptr [rax], 0
0x4002a0:	mov	rax, qword ptr [rbp - 0x88]
0x4002a7:	mov	rdi, rax
0x4002aa:	call	0x500008
<Block for 0x4002af, 16 bytes>
0x4002af:	nop	
0x4002b0:	mov	rax, qword ptr [rbp - 8]
0x4002b4:	xor	rax, qword ptr fs:[0x28]
0x4002bd:	je	0x4002c4
<Block for 0x4002c4, 2 bytes>
0x4002c4:	leave	
0x4002c5:	ret	
<Block for 0x4002bf, 5 bytes>
0x4002bf:	call	0x500010
