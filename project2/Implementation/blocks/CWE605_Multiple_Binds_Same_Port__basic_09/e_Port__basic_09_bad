<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0xfffdc]
0x400024:	test	eax, eax
0x400026:	je	0x4002b7
<Block for 0x4002b7, 16 bytes>
0x4002b7:	nop	
0x4002b8:	mov	rax, qword ptr [rbp - 8]
0x4002bc:	xor	rax, qword ptr fs:[0x28]
0x4002c5:	je	0x4002cc
<Block for 0x40002c, 135 bytes>
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40009d:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4000a7:	lea	rax, [rbp - 0x70]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500008
<Block for 0x4002cc, 2 bytes>
0x4002cc:	leave	
0x4002cd:	ret	
<Block for 0x4002c7, 5 bytes>
0x4002c7:	call	0x500068
<Block for 0x4000b3, 47 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x90], rax
0x4000ba:	mov	dword ptr [rbp - 0xa4], 1
0x4000c4:	mov	dword ptr [rbp - 0x98], 4
0x4000ce:	mov	edx, 6
0x4000d3:	mov	esi, 1
0x4000d8:	mov	edi, 2
0x4000dd:	call	0x500010
<Block for 0x4000e2, 19 bytes>
0x4000e2:	mov	dword ptr [rbp - 0x9c], eax
0x4000e8:	cmp	dword ptr [rbp - 0x9c], -1
0x4000ef:	je	0x400272
<Block for 0x400272, 3 bytes>
0x400272:	nop	
0x400273:	jmp	0x40027f
<Block for 0x4000f5, 42 bytes>
0x4000f5:	mov	ecx, dword ptr [rbp - 0x98]
0x4000fb:	lea	rdx, [rbp - 0xa4]
0x400102:	mov	eax, dword ptr [rbp - 0x9c]
0x400108:	mov	r8d, ecx
0x40010b:	mov	rcx, rdx
0x40010e:	mov	edx, 2
0x400113:	mov	esi, 1
0x400118:	mov	edi, eax
0x40011a:	call	0x500018
<Block for 0x40027f, 9 bytes>
0x40027f:	cmp	dword ptr [rbp - 0x9c], -1
0x400286:	je	0x400295
<Block for 0x40011f, 8 bytes>
0x40011f:	test	eax, eax
0x400121:	jne	0x400275
<Block for 0x400295, 9 bytes>
0x400295:	cmp	dword ptr [rbp - 0xa0], -1
0x40029c:	je	0x4002ab
<Block for 0x400288, 13 bytes>
0x400288:	mov	eax, dword ptr [rbp - 0x9c]
0x40028e:	mov	edi, eax
0x400290:	call	0x500058
<Block for 0x400127, 22 bytes>
0x400127:	lea	rax, [rbp - 0x80]
0x40012b:	mov	edx, 0x10
0x400130:	mov	esi, 0
0x400135:	mov	rdi, rax
0x400138:	call	0x500020
<Block for 0x400275, 3 bytes>
0x400275:	nop	
0x400276:	jmp	0x40027f
<Block for 0x4002ab, 12 bytes>
0x4002ab:	lea	rax, [rbp - 0x70]
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x500060
<Block for 0x40029e, 13 bytes>
0x40029e:	mov	eax, dword ptr [rbp - 0xa0]
0x4002a4:	mov	edi, eax
0x4002a6:	call	0x500058
<Block for 0x40013d, 23 bytes>
0x40013d:	mov	word ptr [rbp - 0x80], 2
0x400143:	mov	dword ptr [rbp - 0x7c], 0
0x40014a:	mov	edi, 0x6987
0x40014f:	call	0x500028
<Block for 0x400154, 29 bytes>
0x400154:	mov	word ptr [rbp - 0x7e], ax
0x400158:	lea	rcx, [rbp - 0x80]
0x40015c:	mov	eax, dword ptr [rbp - 0x9c]
0x400162:	mov	edx, 0x10
0x400167:	mov	rsi, rcx
0x40016a:	mov	edi, eax
0x40016c:	call	0x500030
<Block for 0x400171, 9 bytes>
0x400171:	cmp	eax, -1
0x400174:	je	0x400278
<Block for 0x400278, 3 bytes>
0x400278:	nop	
0x400279:	jmp	0x40027f
<Block for 0x40017a, 18 bytes>
0x40017a:	mov	eax, dword ptr [rbp - 0x9c]
0x400180:	mov	esi, 5
0x400185:	mov	edi, eax
0x400187:	call	0x500038
<Block for 0x40018c, 9 bytes>
0x40018c:	cmp	eax, -1
0x40018f:	je	0x40027b
<Block for 0x40027b, 3 bytes>
0x40027b:	nop	
0x40027c:	jmp	0x40027f
<Block for 0x400195, 23 bytes>
0x400195:	mov	eax, dword ptr [rbp - 0x9c]
0x40019b:	mov	edx, 0
0x4001a0:	mov	esi, 0
0x4001a5:	mov	edi, eax
0x4001a7:	call	0x500040
<Block for 0x4001ac, 19 bytes>
0x4001ac:	mov	dword ptr [rbp - 0xa0], eax
0x4001b2:	cmp	dword ptr [rbp - 0xa0], -1
0x4001b9:	je	0x40027e
<Block for 0x4001bf, 52 bytes>
0x4001bf:	mov	rax, qword ptr [rbp - 0x90]
0x4001c6:	mov	edx, 0x63
0x4001cb:	sub	edx, eax
0x4001cd:	mov	eax, edx
0x4001cf:	movsxd	rdx, eax
0x4001d2:	lea	rcx, [rbp - 0x70]
0x4001d6:	mov	rax, qword ptr [rbp - 0x90]
0x4001dd:	lea	rsi, [rcx + rax]
0x4001e1:	mov	eax, dword ptr [rbp - 0xa0]
0x4001e7:	mov	ecx, 0
0x4001ec:	mov	edi, eax
0x4001ee:	call	0x500048
<Block for 0x40027e, 1 bytes>
0x40027e:	nop	
<Block for 0x4001f3, 15 bytes>
0x4001f3:	mov	dword ptr [rbp - 0x94], eax
0x4001f9:	cmp	dword ptr [rbp - 0x94], -1
0x400200:	je	0x40027f
<Block for 0x400202, 9 bytes>
0x400202:	cmp	dword ptr [rbp - 0x94], 0
0x400209:	je	0x40027f
<Block for 0x40020b, 30 bytes>
0x40020b:	mov	eax, dword ptr [rbp - 0x94]
0x400211:	cdqe	
0x400213:	mov	byte ptr [rbp + rax - 0x70], 0
0x400218:	lea	rax, [rbp - 0x70]
0x40021c:	mov	esi, 0xd
0x400221:	mov	rdi, rax
0x400224:	call	0x500050
<Block for 0x400229, 17 bytes>
0x400229:	mov	qword ptr [rbp - 0x88], rax
0x400230:	cmp	qword ptr [rbp - 0x88], 0
0x400238:	je	0x400244
<Block for 0x400244, 17 bytes>
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	esi, 0xa
0x40024d:	mov	rdi, rax
0x400250:	call	0x500050
<Block for 0x40023a, 27 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 0x88]
0x400241:	mov	byte ptr [rax], 0
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	esi, 0xa
0x40024d:	mov	rdi, rax
0x400250:	call	0x500050
<Block for 0x400255, 17 bytes>
0x400255:	mov	qword ptr [rbp - 0x88], rax
0x40025c:	cmp	qword ptr [rbp - 0x88], 0
0x400264:	je	0x40027f
<Block for 0x400266, 12 bytes>
0x400266:	mov	rax, qword ptr [rbp - 0x88]
0x40026d:	mov	byte ptr [rax], 0
0x400270:	jmp	0x40027f
