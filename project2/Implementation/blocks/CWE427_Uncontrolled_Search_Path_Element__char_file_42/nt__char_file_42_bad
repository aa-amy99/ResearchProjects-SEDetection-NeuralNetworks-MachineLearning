<Block for 0x4000a8, 82 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	sub	rsp, 0x120
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	movabs	rax, 0x3d48544150
0x4000d0:	mov	edx, 0
0x4000d5:	mov	qword ptr [rbp - 0x110], rax
0x4000dc:	mov	qword ptr [rbp - 0x108], rdx
0x4000e3:	lea	rdx, [rbp - 0x100]
0x4000ea:	mov	eax, 0
0x4000ef:	mov	ecx, 0x1d
0x4000f4:	mov	rdi, rdx
0x4000f7:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000fa, 39 bytes>
0x4000fa:	mov	rdx, rdi
0x4000fd:	mov	word ptr [rdx], ax
0x400100:	add	rdx, 2
0x400104:	lea	rax, [rbp - 0x110]
0x40010b:	mov	qword ptr [rbp - 0x118], rax
0x400112:	mov	rax, qword ptr [rbp - 0x118]
0x400119:	mov	rdi, rax
0x40011c:	call	0x400000
<Block for 0x4000f7, 3 bytes>
0x4000f7:	rep stosq	qword ptr [rdi], rax
<Block for 0x400121, 22 bytes>
0x400121:	mov	qword ptr [rbp - 0x118], rax
0x400128:	mov	rax, qword ptr [rbp - 0x118]
0x40012f:	mov	rdi, rax
0x400132:	call	0x500028
<Block for 0x400137, 16 bytes>
0x400137:	nop	
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	xor	rax, qword ptr fs:[0x28]
0x400145:	je	0x40014c
<Block for 0x40014c, 2 bytes>
0x40014c:	leave	
0x40014d:	ret	
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500030
