<Block for 0x4000c1, 55 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	sub	rsp, 0xf0
0x4000d0:	mov	rax, qword ptr fs:[0x28]
0x4000d9:	mov	qword ptr [rbp - 8], rax
0x4000dd:	xor	eax, eax
0x4000df:	lea	rax, [rbp - 0xe0]
0x4000e6:	mov	edx, 0x63
0x4000eb:	mov	esi, 0x41
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500000
<Block for 0x4000f8, 14 bytes>
0x4000f8:	mov	byte ptr [rbp - 0x7d], 0
0x4000fc:	mov	eax, 0
0x400101:	call	0x500008
<Block for 0x400106, 4 bytes>
0x400106:	test	eax, eax
0x400108:	je	0x40011a
<Block for 0x40011a, 36 bytes>
0x40011a:	lea	rax, [rbp - 0xe0]
0x400121:	mov	qword ptr [rbp - 0xe8], rax
0x400128:	lea	rax, [rbp - 0x70]
0x40012c:	mov	edx, 0x63
0x400131:	mov	esi, 0x43
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x40010a, 16 bytes>
0x40010a:	lea	rax, [rbp - 0xe0]
0x400111:	mov	qword ptr [rbp - 0xe8], rax
0x400118:	jmp	0x400128
<Block for 0x40013e, 26 bytes>
0x40013e:	mov	byte ptr [rbp - 0xd], 0
0x400142:	lea	rdx, [rbp - 0x70]
0x400146:	mov	rax, qword ptr [rbp - 0xe8]
0x40014d:	mov	rsi, rdx
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400128, 22 bytes>
0x400128:	lea	rax, [rbp - 0x70]
0x40012c:	mov	edx, 0x63
0x400131:	mov	esi, 0x43
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x400158, 15 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0xe8]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500018
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500020
