<Block for 0x4002f8, 88 bytes>
0x4002f8:	endbr64	
0x4002fc:	push	rbp
0x4002fd:	mov	rbp, rsp
0x400300:	sub	rsp, 0x40
0x400304:	mov	rax, qword ptr fs:[0x28]
0x40030d:	mov	qword ptr [rbp - 8], rax
0x400311:	xor	eax, eax
0x400313:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40031a:	mov	dword ptr [rbp - 0x34], 7
0x400321:	nop	
0x400322:	mov	qword ptr [rbp - 0x30], 0
0x40032a:	mov	qword ptr [rbp - 0x28], 0
0x400332:	mov	qword ptr [rbp - 0x20], 0
0x40033a:	mov	qword ptr [rbp - 0x18], 0
0x400342:	mov	qword ptr [rbp - 0x10], 0
0x40034a:	cmp	dword ptr [rbp - 0x34], 9
0x40034e:	jg	0x400382
<Block for 0x400350, 22 bytes>
0x400350:	mov	eax, dword ptr [rbp - 0x34]
0x400353:	cdqe	
0x400355:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40035d:	mov	dword ptr [rbp - 0x38], 0
0x400364:	jmp	0x40037a
<Block for 0x400382, 12 bytes>
0x400382:	lea	rdi, [rip + 0x4f]
0x400389:	call	0x500048
<Block for 0x40037a, 6 bytes>
0x40037a:	cmp	dword ptr [rbp - 0x38], 9
0x40037e:	jle	0x400366
<Block for 0x40038e, 17 bytes>
0x40038e:	nop	
0x40038f:	nop	
0x400390:	mov	rax, qword ptr [rbp - 8]
0x400394:	xor	rax, qword ptr fs:[0x28]
0x40039d:	je	0x4003a4
<Block for 0x400366, 16 bytes>
0x400366:	mov	eax, dword ptr [rbp - 0x38]
0x400369:	cdqe	
0x40036b:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40036f:	mov	edi, eax
0x400371:	call	0x500040
<Block for 0x400380, 2 bytes>
0x400380:	jmp	0x40038e
<Block for 0x4003a4, 2 bytes>
0x4003a4:	leave	
0x4003a5:	ret	
<Block for 0x40039f, 5 bytes>
0x40039f:	call	0x500050
<Block for 0x400376, 10 bytes>
0x400376:	add	dword ptr [rbp - 0x38], 1
0x40037a:	cmp	dword ptr [rbp - 0x38], 9
0x40037e:	jle	0x400366
