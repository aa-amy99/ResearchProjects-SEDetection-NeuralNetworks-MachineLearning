<Block for 0x400179, 61 bytes>
0x400179:	endbr64	
0x40017d:	push	rbp
0x40017e:	mov	rbp, rsp
0x400181:	sub	rsp, 0x50
0x400185:	mov	rax, qword ptr fs:[0x28]
0x40018e:	mov	qword ptr [rbp - 8], rax
0x400192:	xor	eax, eax
0x400194:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40019b:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001a2:	mov	edx, 6
0x4001a7:	mov	esi, 1
0x4001ac:	mov	edi, 2
0x4001b1:	call	0x500000
<Block for 0x4001b6, 13 bytes>
0x4001b6:	mov	dword ptr [rbp - 0x48], eax
0x4001b9:	cmp	dword ptr [rbp - 0x48], -1
0x4001bd:	je	0x400259
<Block for 0x400259, 3 bytes>
0x400259:	nop	
0x40025a:	jmp	0x40025d
<Block for 0x4001c3, 22 bytes>
0x4001c3:	lea	rax, [rbp - 0x40]
0x4001c7:	mov	edx, 0x10
0x4001cc:	mov	esi, 0
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500008
<Block for 0x40025d, 6 bytes>
0x40025d:	cmp	dword ptr [rbp - 0x48], -1
0x400261:	je	0x40026d
<Block for 0x4001d9, 18 bytes>
0x4001d9:	mov	word ptr [rbp - 0x40], 2
0x4001df:	lea	rdi, [rip + 0x1e2]
0x4001e6:	call	0x500010
<Block for 0x40026d, 47 bytes>
0x40026d:	nop	
0x40026e:	mov	qword ptr [rbp - 0x40], 0
0x400276:	mov	qword ptr [rbp - 0x38], 0
0x40027e:	mov	qword ptr [rbp - 0x30], 0
0x400286:	mov	qword ptr [rbp - 0x28], 0
0x40028e:	mov	qword ptr [rbp - 0x20], 0
0x400296:	cmp	dword ptr [rbp - 0x50], 0
0x40029a:	js	0x4002d4
<Block for 0x400263, 10 bytes>
0x400263:	mov	eax, dword ptr [rbp - 0x48]
0x400266:	mov	edi, eax
0x400268:	call	0x500038
<Block for 0x4001eb, 13 bytes>
0x4001eb:	mov	dword ptr [rbp - 0x3c], eax
0x4001ee:	mov	edi, 0x6987
0x4001f3:	call	0x500018
<Block for 0x4002d4, 12 bytes>
0x4002d4:	lea	rdi, [rip + 0x11d]
0x4002db:	call	0x500048
<Block for 0x40029c, 6 bytes>
0x40029c:	cmp	dword ptr [rbp - 0x50], 9
0x4002a0:	jg	0x4002d4
<Block for 0x4001f8, 26 bytes>
0x4001f8:	mov	word ptr [rbp - 0x3e], ax
0x4001fc:	lea	rcx, [rbp - 0x40]
0x400200:	mov	eax, dword ptr [rbp - 0x48]
0x400203:	mov	edx, 0x10
0x400208:	mov	rsi, rcx
0x40020b:	mov	edi, eax
0x40020d:	call	0x500020
<Block for 0x4002e0, 17 bytes>
0x4002e0:	nop	
0x4002e1:	nop	
0x4002e2:	mov	rax, qword ptr [rbp - 8]
0x4002e6:	xor	rax, qword ptr fs:[0x28]
0x4002ef:	je	0x4002f6
<Block for 0x4002a2, 22 bytes>
0x4002a2:	mov	eax, dword ptr [rbp - 0x50]
0x4002a5:	cdqe	
0x4002a7:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002af:	mov	dword ptr [rbp - 0x4c], 0
0x4002b6:	jmp	0x4002cc
<Block for 0x400212, 5 bytes>
0x400212:	cmp	eax, -1
0x400215:	je	0x40025c
<Block for 0x4002f6, 2 bytes>
0x4002f6:	leave	
0x4002f7:	ret	
<Block for 0x4002f1, 5 bytes>
0x4002f1:	call	0x500050
<Block for 0x4002cc, 6 bytes>
0x4002cc:	cmp	dword ptr [rbp - 0x4c], 9
0x4002d0:	jle	0x4002b8
<Block for 0x400217, 24 bytes>
0x400217:	lea	rsi, [rbp - 0x16]
0x40021b:	mov	eax, dword ptr [rbp - 0x48]
0x40021e:	mov	ecx, 0
0x400223:	mov	edx, 0xd
0x400228:	mov	edi, eax
0x40022a:	call	0x500028
<Block for 0x40025c, 1 bytes>
0x40025c:	nop	
<Block for 0x4002b8, 16 bytes>
0x4002b8:	mov	eax, dword ptr [rbp - 0x4c]
0x4002bb:	cdqe	
0x4002bd:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002c1:	mov	edi, eax
0x4002c3:	call	0x500040
<Block for 0x4002d2, 2 bytes>
0x4002d2:	jmp	0x4002e0
<Block for 0x40022f, 9 bytes>
0x40022f:	mov	dword ptr [rbp - 0x44], eax
0x400232:	cmp	dword ptr [rbp - 0x44], -1
0x400236:	je	0x40025d
<Block for 0x4002c8, 10 bytes>
0x4002c8:	add	dword ptr [rbp - 0x4c], 1
0x4002cc:	cmp	dword ptr [rbp - 0x4c], 9
0x4002d0:	jle	0x4002b8
<Block for 0x400238, 6 bytes>
0x400238:	cmp	dword ptr [rbp - 0x44], 0
0x40023c:	je	0x40025d
<Block for 0x40023e, 22 bytes>
0x40023e:	mov	eax, dword ptr [rbp - 0x44]
0x400241:	cdqe	
0x400243:	mov	byte ptr [rbp + rax - 0x16], 0
0x400248:	lea	rax, [rbp - 0x16]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500030
<Block for 0x400254, 5 bytes>
0x400254:	mov	dword ptr [rbp - 0x50], eax
0x400257:	jmp	0x40025d
