<Block for 0x400177, 27 bytes>
0x400177:	endbr64	
0x40017b:	push	rbp
0x40017c:	mov	rbp, rsp
0x40017f:	push	r13
0x400181:	push	r12
0x400183:	push	rbx
0x400184:	sub	rsp, 0x18
0x400188:	nop	
0x400189:	endbr64	
0x40018d:	call	0x500000
<Block for 0x400192, 12 bytes>
0x400192:	and	eax, 1
0x400195:	test	eax, eax
0x400197:	sete	al
0x40019a:	test	al, al
0x40019c:	je	0x4001d3
<Block for 0x4001d3, 5 bytes>
0x4001d3:	call	0x500000
<Block for 0x40019e, 10 bytes>
0x40019e:	mov	edi, 0x10
0x4001a3:	call	0x500008
<Block for 0x4001d8, 12 bytes>
0x4001d8:	and	eax, 1
0x4001db:	test	eax, eax
0x4001dd:	sete	al
0x4001e0:	test	al, al
0x4001e2:	je	0x400219
<Block for 0x4001a8, 18 bytes>
0x4001a8:	mov	rbx, rax
0x4001ab:	lea	rsi, [rip + 0x14d]
0x4001b2:	mov	rdi, rbx
0x4001b5:	call	0x500010
<Block for 0x400219, 12 bytes>
0x400219:	lea	rdi, [rip + 0xe9]
0x400220:	call	0x500058
<Block for 0x4001e4, 10 bytes>
0x4001e4:	mov	edi, 0x10
0x4001e9:	call	0x500008
<Block for 0x4001ba, 25 bytes>
0x4001ba:	mov	rax, qword ptr [rip + 0xffe5f]
0x4001c1:	mov	rdx, rax
0x4001c4:	lea	rsi, [rip + 0xffe5d]
0x4001cb:	mov	rdi, rbx
0x4001ce:	call	0x500030
<Block for 0x400225, 5 bytes>
0x400225:	jmp	0x4002e3
<Block for 0x4001ee, 18 bytes>
0x4001ee:	mov	rbx, rax
0x4001f1:	lea	rsi, [rip + 0x10c]
0x4001f8:	mov	rdi, rbx
0x4001fb:	call	0x500038
<Block for 0x4002e3, 11 bytes>
0x4002e3:	add	rsp, 0x18
0x4002e7:	pop	rbx
0x4002e8:	pop	r12
0x4002ea:	pop	r13
0x4002ec:	pop	rbp
0x4002ed:	ret	
<Block for 0x400200, 25 bytes>
0x400200:	mov	rax, qword ptr [rip + 0xffe41]
0x400207:	mov	rdx, rax
0x40020a:	lea	rsi, [rip + 0xffe3f]
0x400211:	mov	rdi, rbx
0x400214:	call	0x500030
