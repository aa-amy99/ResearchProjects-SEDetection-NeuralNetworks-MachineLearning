<Block for 0x4000ff, 53 bytes>
0x4000ff:	endbr64	
0x400103:	push	rbp
0x400104:	mov	rbp, rsp
0x400107:	sub	rsp, 0xf0
0x40010e:	mov	rax, qword ptr fs:[0x28]
0x400117:	mov	qword ptr [rbp - 8], rax
0x40011b:	xor	eax, eax
0x40011d:	mov	qword ptr [rbp - 0xe0], 0
0x400128:	mov	dword ptr [rbp - 0xe4], 0
0x400132:	jmp	0x400195
<Block for 0x400195, 9 bytes>
0x400195:	cmp	dword ptr [rbp - 0xe4], 0
0x40019c:	jle	0x400134
<Block for 0x400134, 10 bytes>
0x400134:	mov	edi, 0x64
0x400139:	call	0x500000
<Block for 0x40019e, 25 bytes>
0x40019e:	lea	rax, [rbp - 0xd0]
0x4001a5:	mov	edx, 0xc7
0x4001aa:	mov	esi, 0x43
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500010
<Block for 0x40013e, 17 bytes>
0x40013e:	mov	qword ptr [rbp - 0xd8], rax
0x400145:	cmp	qword ptr [rbp - 0xd8], 0
0x40014d:	jne	0x400159
<Block for 0x4001b7, 29 bytes>
0x4001b7:	mov	byte ptr [rbp - 9], 0
0x4001bb:	mov	rdx, qword ptr [rbp - 0xe0]
0x4001c2:	lea	rax, [rbp - 0xd0]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500018
<Block for 0x40014f, 10 bytes>
0x40014f:	mov	edi, 0xffffffff
0x400154:	call	0x500008
<Block for 0x400159, 25 bytes>
0x400159:	mov	rax, qword ptr [rbp - 0xd8]
0x400160:	mov	edx, 0x63
0x400165:	mov	esi, 0x41
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500010
<Block for 0x4001d4, 15 bytes>
0x4001d4:	lea	rax, [rbp - 0xd0]
0x4001db:	mov	rdi, rax
0x4001de:	call	0x500020
<Block for 0x400172, 44 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0xd8]
0x400179:	add	rax, 0x63
0x40017d:	mov	byte ptr [rax], 0
0x400180:	mov	rax, qword ptr [rbp - 0xd8]
0x400187:	mov	qword ptr [rbp - 0xe0], rax
0x40018e:	add	dword ptr [rbp - 0xe4], 1
0x400195:	cmp	dword ptr [rbp - 0xe4], 0
0x40019c:	jle	0x400134
<Block for 0x4001e3, 16 bytes>
0x4001e3:	nop	
0x4001e4:	mov	rax, qword ptr [rbp - 8]
0x4001e8:	xor	rax, qword ptr fs:[0x28]
0x4001f1:	je	0x4001f8
<Block for 0x4001f8, 2 bytes>
0x4001f8:	leave	
0x4001f9:	ret	
<Block for 0x4001f3, 5 bytes>
0x4001f3:	call	0x500028
