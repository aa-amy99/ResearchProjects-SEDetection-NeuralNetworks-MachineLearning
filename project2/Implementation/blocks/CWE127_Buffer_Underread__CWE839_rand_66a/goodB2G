<Block for 0x4000ec, 40 bytes>
0x4000ec:	endbr64	
0x4000f0:	push	rbp
0x4000f1:	mov	rbp, rsp
0x4000f4:	push	rbx
0x4000f5:	sub	rsp, 0x38
0x4000f9:	mov	rax, qword ptr fs:[0x28]
0x400102:	mov	qword ptr [rbp - 0x18], rax
0x400106:	xor	eax, eax
0x400108:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40010f:	call	0x500000
<Block for 0x400114, 7 bytes>
0x400114:	and	eax, 1
0x400117:	test	eax, eax
0x400119:	je	0x400138
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500000
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500000
<Block for 0x40013d, 10 bytes>
0x40013d:	shl	eax, 0x1e
0x400140:	mov	ebx, eax
0x400142:	call	0x500000
<Block for 0x400120, 10 bytes>
0x400120:	shl	eax, 0x1e
0x400123:	mov	ebx, eax
0x400125:	call	0x500000
<Block for 0x400147, 10 bytes>
0x400147:	shl	eax, 0xf
0x40014a:	xor	ebx, eax
0x40014c:	call	0x500000
<Block for 0x40012a, 10 bytes>
0x40012a:	shl	eax, 0xf
0x40012d:	xor	ebx, eax
0x40012f:	call	0x500000
<Block for 0x400151, 25 bytes>
0x400151:	xor	eax, ebx
0x400153:	not	eax
0x400155:	mov	dword ptr [rbp - 0x34], eax
0x400158:	mov	eax, dword ptr [rbp - 0x34]
0x40015b:	mov	dword ptr [rbp - 0x28], eax
0x40015e:	lea	rax, [rbp - 0x30]
0x400162:	mov	rdi, rax
0x400165:	call	0x500020
<Block for 0x400134, 4 bytes>
0x400134:	xor	eax, ebx
0x400136:	jmp	0x400155
<Block for 0x40016a, 16 bytes>
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 0x18]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x400155, 21 bytes>
0x400155:	mov	dword ptr [rbp - 0x34], eax
0x400158:	mov	eax, dword ptr [rbp - 0x34]
0x40015b:	mov	dword ptr [rbp - 0x28], eax
0x40015e:	lea	rax, [rbp - 0x30]
0x400162:	mov	rdi, rax
0x400165:	call	0x500020
<Block for 0x40017f, 7 bytes>
0x40017f:	add	rsp, 0x38
0x400183:	pop	rbx
0x400184:	pop	rbp
0x400185:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500010
