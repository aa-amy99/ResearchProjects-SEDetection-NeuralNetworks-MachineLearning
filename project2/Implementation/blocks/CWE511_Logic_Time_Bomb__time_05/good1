<Block for 0x400060, 37 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x10
0x40006c:	mov	rax, qword ptr fs:[0x28]
0x400075:	mov	qword ptr [rbp - 8], rax
0x400079:	xor	eax, eax
0x40007b:	mov	eax, dword ptr [rip + 0xd3]
0x400081:	test	eax, eax
0x400083:	je	0x400093
<Block for 0x400093, 12 bytes>
0x400093:	lea	rax, [rbp - 0x10]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x400085, 12 bytes>
0x400085:	lea	rdi, [rip + 0xdf]
0x40008c:	call	0x500018
<Block for 0x40009f, 12 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 0x10]
0x4000a3:	cmp	rax, 0x4779c8d0
0x4000a9:	jle	0x4000b7
<Block for 0x400091, 2 bytes>
0x400091:	jmp	0x4000b7
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0xce]
0x4000b2:	call	0x500018
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500010
