<Block for 0x40012b, 59 bytes>
0x40012b:	endbr64	
0x40012f:	push	rbp
0x400130:	mov	rbp, rsp
0x400133:	sub	rsp, 0x90
0x40013a:	mov	qword ptr [rbp - 0x88], rdi
0x400141:	mov	rax, qword ptr fs:[0x28]
0x40014a:	mov	qword ptr [rbp - 8], rax
0x40014e:	xor	eax, eax
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	edx, 0x63
0x400159:	mov	esi, 0x43
0x40015e:	mov	rdi, rax
0x400161:	call	0x500000
<Block for 0x400166, 16 bytes>
0x400166:	mov	byte ptr [rbp - 0xd], 0
0x40016a:	lea	rax, [rbp - 0x70]
0x40016e:	mov	rdi, rax
0x400171:	call	0x500008
<Block for 0x400176, 14 bytes>
0x400176:	mov	qword ptr [rbp - 0x78], rax
0x40017a:	mov	qword ptr [rbp - 0x80], 0
0x400182:	jmp	0x4001a7
<Block for 0x4001a7, 10 bytes>
0x4001a7:	mov	rax, qword ptr [rbp - 0x80]
0x4001ab:	cmp	rax, qword ptr [rbp - 0x78]
0x4001af:	jb	0x400184
<Block for 0x400184, 45 bytes>
0x400184:	mov	rdx, qword ptr [rbp - 0x88]
0x40018b:	mov	rax, qword ptr [rbp - 0x80]
0x40018f:	add	rax, rdx
0x400192:	movzx	eax, byte ptr [rax]
0x400195:	lea	rcx, [rbp - 0x70]
0x400199:	mov	rdx, qword ptr [rbp - 0x80]
0x40019d:	add	rdx, rcx
0x4001a0:	mov	byte ptr [rdx], al
0x4001a2:	add	qword ptr [rbp - 0x80], 1
0x4001a7:	mov	rax, qword ptr [rbp - 0x80]
0x4001ab:	cmp	rax, qword ptr [rbp - 0x78]
0x4001af:	jb	0x400184
<Block for 0x4001b1, 16 bytes>
0x4001b1:	mov	byte ptr [rbp - 0xd], 0
0x4001b5:	lea	rax, [rbp - 0x70]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500010
<Block for 0x4001c1, 15 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 0x88]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500018
<Block for 0x4001d0, 16 bytes>
0x4001d0:	nop	
0x4001d1:	mov	rax, qword ptr [rbp - 8]
0x4001d5:	xor	rax, qword ptr fs:[0x28]
0x4001de:	je	0x4001e5
<Block for 0x4001e5, 2 bytes>
0x4001e5:	leave	
0x4001e6:	ret	
<Block for 0x4001e0, 5 bytes>
0x4001e0:	call	0x500020
