<Block for 0x4000af, 45 bytes>
0x4000af:	endbr64	
0x4000b3:	push	rbp
0x4000b4:	mov	rbp, rsp
0x4000b7:	add	rsp, -0x80
0x4000bb:	mov	rax, qword ptr fs:[0x28]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	xor	eax, eax
0x4000ca:	mov	qword ptr [rbp - 0x80], 0
0x4000d2:	mov	edi, 0x64
0x4000d7:	call	0x500000
<Block for 0x4000dc, 26 bytes>
0x4000dc:	mov	qword ptr [rbp - 0x78], rax
0x4000e0:	mov	rax, qword ptr [rbp - 0x78]
0x4000e4:	mov	edx, 0x63
0x4000e9:	mov	esi, 0x41
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500008
<Block for 0x4000f6, 42 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0x78]
0x4000fa:	add	rax, 0x63
0x4000fe:	mov	byte ptr [rax], 0
0x400101:	mov	rax, qword ptr [rbp - 0x78]
0x400105:	mov	qword ptr [rbp - 0x80], rax
0x400109:	nop	
0x40010a:	lea	rax, [rbp - 0x70]
0x40010e:	mov	edx, 0x63
0x400113:	mov	esi, 0x43
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x400120, 23 bytes>
0x400120:	mov	byte ptr [rbp - 0xd], 0
0x400124:	lea	rdx, [rbp - 0x70]
0x400128:	mov	rax, qword ptr [rbp - 0x80]
0x40012c:	mov	rsi, rdx
0x40012f:	mov	rdi, rax
0x400132:	call	0x500010
<Block for 0x400137, 12 bytes>
0x400137:	mov	rax, qword ptr [rbp - 0x80]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500018
<Block for 0x400143, 16 bytes>
0x400143:	nop	
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	xor	rax, qword ptr fs:[0x28]
0x400151:	je	0x400158
<Block for 0x400158, 2 bytes>
0x400158:	leave	
0x400159:	ret	
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500020
