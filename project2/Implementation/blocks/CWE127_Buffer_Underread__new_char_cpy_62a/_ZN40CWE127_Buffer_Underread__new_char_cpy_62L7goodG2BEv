<Block for 0x400094, 56 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0xe0
0x4000a3:	mov	rax, qword ptr fs:[0x28]
0x4000ac:	mov	qword ptr [rbp - 8], rax
0x4000b0:	xor	eax, eax
0x4000b2:	mov	qword ptr [rbp - 0xd8], 0
0x4000bd:	lea	rax, [rbp - 0xd8]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500028
<Block for 0x4000cc, 25 bytes>
0x4000cc:	lea	rax, [rbp - 0xd0]
0x4000d3:	mov	edx, 0xc7
0x4000d8:	mov	esi, 0x43
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500008
<Block for 0x4000e5, 29 bytes>
0x4000e5:	mov	byte ptr [rbp - 9], 0
0x4000e9:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000f0:	lea	rax, [rbp - 0xd0]
0x4000f7:	mov	rsi, rdx
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500010
<Block for 0x400102, 15 bytes>
0x400102:	lea	rax, [rbp - 0xd0]
0x400109:	mov	rdi, rax
0x40010c:	call	0x500018
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500020
