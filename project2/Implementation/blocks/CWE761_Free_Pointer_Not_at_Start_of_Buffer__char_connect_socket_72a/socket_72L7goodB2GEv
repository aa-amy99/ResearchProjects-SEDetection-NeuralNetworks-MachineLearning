<Block for 0x40032d, 43 bytes>
0x40032d:	endbr64	
0x400331:	push	rbp
0x400332:	mov	rbp, rsp
0x400335:	push	rbx
0x400336:	sub	rsp, 0x98
0x40033d:	mov	rax, qword ptr fs:[0x28]
0x400346:	mov	qword ptr [rbp - 0x18], rax
0x40034a:	xor	eax, eax
0x40034c:	lea	rax, [rbp - 0x70]
0x400350:	mov	rdi, rax
0x400353:	call	0x4006e2
<Block for 0x400358, 10 bytes>
0x400358:	mov	edi, 0x64
0x40035d:	call	0x500000
<Block for 0x400362, 19 bytes>
0x400362:	mov	qword ptr [rbp - 0x90], rax
0x400369:	mov	rax, qword ptr [rbp - 0x90]
0x400370:	test	rax, rax
0x400373:	jne	0x40037f
<Block for 0x400375, 10 bytes>
0x400375:	mov	edi, 0xffffffff
0x40037a:	call	0x500008
<Block for 0x40037f, 35 bytes>
0x40037f:	mov	rax, qword ptr [rbp - 0x90]
0x400386:	mov	byte ptr [rax], 0
0x400389:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400393:	mov	rax, qword ptr [rbp - 0x90]
0x40039a:	mov	rdi, rax
0x40039d:	call	0x500010
<Block for 0x4003a2, 24 bytes>
0x4003a2:	mov	qword ptr [rbp - 0x80], rax
0x4003a6:	mov	edx, 6
0x4003ab:	mov	esi, 1
0x4003b0:	mov	edi, 2
0x4003b5:	call	0x500018
<Block for 0x4003ba, 19 bytes>
0x4003ba:	mov	dword ptr [rbp - 0x98], eax
0x4003c0:	cmp	dword ptr [rbp - 0x98], -1
0x4003c7:	je	0x4004dd
<Block for 0x4004dd, 3 bytes>
0x4004dd:	nop	
0x4004de:	jmp	0x4004e1
<Block for 0x4003cd, 22 bytes>
0x4003cd:	lea	rax, [rbp - 0x30]
0x4003d1:	mov	edx, 0x10
0x4003d6:	mov	esi, 0
0x4003db:	mov	rdi, rax
0x4003de:	call	0x500020
<Block for 0x4004e1, 9 bytes>
0x4004e1:	cmp	dword ptr [rbp - 0x98], -1
0x4004e8:	je	0x4004f7
<Block for 0x4003e3, 18 bytes>
0x4003e3:	mov	word ptr [rbp - 0x30], 2
0x4003e9:	lea	rdi, [rip + 0x291]
0x4003f0:	call	0x500028
<Block for 0x4004f7, 12 bytes>
0x4004f7:	lea	rax, [rbp - 0x70]
0x4004fb:	mov	rdi, rax
0x4004fe:	call	0x400876
<Block for 0x4004ea, 13 bytes>
0x4004ea:	mov	eax, dword ptr [rbp - 0x98]
0x4004f0:	mov	edi, eax
0x4004f2:	call	0x500050
<Block for 0x4003f5, 13 bytes>
0x4003f5:	mov	dword ptr [rbp - 0x2c], eax
0x4003f8:	mov	edi, 0x6987
0x4003fd:	call	0x500030
<Block for 0x400503, 29 bytes>
0x400503:	mov	qword ptr [rbp - 0x88], rax
0x40050a:	lea	rdx, [rbp - 0x88]
0x400511:	lea	rax, [rbp - 0x50]
0x400515:	mov	rsi, rdx
0x400518:	mov	rdi, rax
0x40051b:	call	0x4008c6
<Block for 0x400402, 29 bytes>
0x400402:	mov	word ptr [rbp - 0x2e], ax
0x400406:	lea	rcx, [rbp - 0x30]
0x40040a:	mov	eax, dword ptr [rbp - 0x98]
0x400410:	mov	edx, 0x10
0x400415:	mov	rsi, rcx
0x400418:	mov	edi, eax
0x40041a:	call	0x500038
<Block for 0x400520, 31 bytes>
0x400520:	lea	rdx, [rbp - 0x90]
0x400527:	mov	rsi, qword ptr [rbp - 0x50]
0x40052b:	lea	rax, [rbp - 0x70]
0x40052f:	mov	rcx, rdx
0x400532:	mov	edx, 1
0x400537:	mov	rdi, rax
0x40053a:	call	0x4008f4
<Block for 0x40041f, 14 bytes>
0x40041f:	cmp	eax, -1
0x400422:	sete	al
0x400425:	test	al, al
0x400427:	jne	0x4004e0
<Block for 0x40053f, 12 bytes>
0x40053f:	lea	rax, [rbp - 0x70]
0x400543:	mov	rdi, rax
0x400546:	call	0x400876
<Block for 0x40042d, 45 bytes>
0x40042d:	mov	eax, 0x63
0x400432:	sub	rax, qword ptr [rbp - 0x80]
0x400436:	mov	rdx, rax
0x400439:	mov	rcx, qword ptr [rbp - 0x90]
0x400440:	mov	rax, qword ptr [rbp - 0x80]
0x400444:	lea	rsi, [rcx + rax]
0x400448:	mov	eax, dword ptr [rbp - 0x98]
0x40044e:	mov	ecx, 0
0x400453:	mov	edi, eax
0x400455:	call	0x500040
<Block for 0x4004e0, 1 bytes>
0x4004e0:	nop	
<Block for 0x40054b, 29 bytes>
0x40054b:	mov	qword ptr [rbp - 0x88], rax
0x400552:	lea	rdx, [rbp - 0x88]
0x400559:	lea	rax, [rbp - 0x50]
0x40055d:	mov	rsi, rdx
0x400560:	mov	rdi, rax
0x400563:	call	0x4008c6
<Block for 0x40045a, 15 bytes>
0x40045a:	mov	dword ptr [rbp - 0x94], eax
0x400460:	cmp	dword ptr [rbp - 0x94], -1
0x400467:	je	0x4004e1
<Block for 0x400568, 31 bytes>
0x400568:	lea	rdx, [rbp - 0x90]
0x40056f:	mov	rsi, qword ptr [rbp - 0x50]
0x400573:	lea	rax, [rbp - 0x70]
0x400577:	mov	rcx, rdx
0x40057a:	mov	edx, 1
0x40057f:	mov	rdi, rax
0x400582:	call	0x4008f4
<Block for 0x400469, 9 bytes>
0x400469:	cmp	dword ptr [rbp - 0x94], 0
0x400470:	je	0x4004e1
<Block for 0x400587, 12 bytes>
0x400587:	lea	rax, [rbp - 0x70]
0x40058b:	mov	rdi, rax
0x40058e:	call	0x400876
<Block for 0x400472, 49 bytes>
0x400472:	mov	rax, qword ptr [rbp - 0x90]
0x400479:	mov	edx, dword ptr [rbp - 0x94]
0x40047f:	movsxd	rcx, edx
0x400482:	mov	rdx, qword ptr [rbp - 0x80]
0x400486:	add	rdx, rcx
0x400489:	add	rax, rdx
0x40048c:	mov	byte ptr [rax], 0
0x40048f:	mov	rax, qword ptr [rbp - 0x90]
0x400496:	mov	esi, 0xd
0x40049b:	mov	rdi, rax
0x40049e:	call	0x500048
<Block for 0x400593, 29 bytes>
0x400593:	mov	qword ptr [rbp - 0x88], rax
0x40059a:	lea	rdx, [rbp - 0x88]
0x4005a1:	lea	rax, [rbp - 0x50]
0x4005a5:	mov	rsi, rdx
0x4005a8:	mov	rdi, rax
0x4005ab:	call	0x4008c6
<Block for 0x4004a3, 11 bytes>
0x4004a3:	mov	qword ptr [rbp - 0x78], rax
0x4004a7:	cmp	qword ptr [rbp - 0x78], 0
0x4004ac:	je	0x4004b5
<Block for 0x4005b0, 31 bytes>
0x4005b0:	lea	rdx, [rbp - 0x90]
0x4005b7:	mov	rsi, qword ptr [rbp - 0x50]
0x4005bb:	lea	rax, [rbp - 0x70]
0x4005bf:	mov	rcx, rdx
0x4005c2:	mov	edx, 1
0x4005c7:	mov	rdi, rax
0x4005ca:	call	0x4008f4
<Block for 0x4004b5, 20 bytes>
0x4004b5:	mov	rax, qword ptr [rbp - 0x90]
0x4004bc:	mov	esi, 0xa
0x4004c1:	mov	rdi, rax
0x4004c4:	call	0x500048
<Block for 0x4004ae, 27 bytes>
0x4004ae:	mov	rax, qword ptr [rbp - 0x78]
0x4004b2:	mov	byte ptr [rax], 0
0x4004b5:	mov	rax, qword ptr [rbp - 0x90]
0x4004bc:	mov	esi, 0xa
0x4004c1:	mov	rdi, rax
0x4004c4:	call	0x500048
<Block for 0x4005cf, 19 bytes>
0x4005cf:	lea	rdx, [rbp - 0x70]
0x4005d3:	lea	rax, [rbp - 0x50]
0x4005d7:	mov	rsi, rdx
0x4005da:	mov	rdi, rax
0x4005dd:	call	0x4009ba
<Block for 0x4004c9, 11 bytes>
0x4004c9:	mov	qword ptr [rbp - 0x78], rax
0x4004cd:	cmp	qword ptr [rbp - 0x78], 0
0x4004d2:	je	0x4004e1
<Block for 0x4005e2, 12 bytes>
0x4005e2:	lea	rax, [rbp - 0x50]
0x4005e6:	mov	rdi, rax
0x4005e9:	call	0x500070
<Block for 0x4004d4, 9 bytes>
0x4004d4:	mov	rax, qword ptr [rbp - 0x78]
0x4004d8:	mov	byte ptr [rax], 0
0x4004db:	jmp	0x4004e1
<Block for 0x4005ee, 12 bytes>
0x4005ee:	lea	rax, [rbp - 0x50]
0x4005f2:	mov	rdi, rax
0x4005f5:	call	0x40082e
<Block for 0x4005fa, 12 bytes>
0x4005fa:	lea	rax, [rbp - 0x70]
0x4005fe:	mov	rdi, rax
0x400601:	call	0x40082e
<Block for 0x400606, 16 bytes>
0x400606:	nop	
0x400607:	mov	rax, qword ptr [rbp - 0x18]
0x40060b:	xor	rax, qword ptr fs:[0x28]
0x400614:	je	0x400650
<Block for 0x400650, 10 bytes>
0x400650:	add	rsp, 0x98
0x400657:	pop	rbx
0x400658:	pop	rbp
0x400659:	ret	
<Block for 0x400616, 2 bytes>
0x400616:	jmp	0x40064b
<Block for 0x40064b, 5 bytes>
0x40064b:	call	0x500068
