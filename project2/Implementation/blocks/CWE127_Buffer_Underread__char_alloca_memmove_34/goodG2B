<Block for 0x40014b, 84 bytes>
0x40014b:	endbr64	
0x40014f:	push	rbp
0x400150:	mov	rbp, rsp
0x400153:	sub	rsp, 0x90
0x40015a:	mov	rax, qword ptr fs:[0x28]
0x400163:	mov	qword ptr [rbp - 8], rax
0x400167:	xor	eax, eax
0x400169:	mov	eax, 0x10
0x40016e:	sub	rax, 1
0x400172:	add	rax, 0x6c
0x400176:	mov	esi, 0x10
0x40017b:	mov	edx, 0
0x400180:	div	rsi
0x400183:	imul	rax, rax, 0x10
0x400187:	mov	rdx, rax
0x40018a:	and	rdx, 0xfffffffffffff000
0x400191:	mov	rcx, rsp
0x400194:	sub	rcx, rdx
0x400197:	mov	rdx, rcx
0x40019a:	cmp	rsp, rdx
0x40019d:	je	0x4001b1
<Block for 0x4001b1, 26 bytes>
0x4001b1:	mov	rdx, rax
0x4001b4:	and	edx, 0xfff
0x4001ba:	sub	rsp, rdx
0x4001bd:	mov	rdx, rax
0x4001c0:	and	edx, 0xfff
0x4001c6:	test	rdx, rdx
0x4001c9:	je	0x4001db
<Block for 0x40019f, 18 bytes>
0x40019f:	sub	rsp, 0x1000
0x4001a6:	or	qword ptr [rsp + 0xff8], 0
0x4001af:	jmp	0x40019a
<Block for 0x4001db, 47 bytes>
0x4001db:	mov	rax, rsp
0x4001de:	add	rax, 0xf
0x4001e2:	shr	rax, 4
0x4001e6:	shl	rax, 4
0x4001ea:	mov	qword ptr [rbp - 0x88], rax
0x4001f1:	mov	rax, qword ptr [rbp - 0x88]
0x4001f8:	mov	edx, 0x63
0x4001fd:	mov	esi, 0x41
0x400202:	mov	rdi, rax
0x400205:	call	0x500000
<Block for 0x4001cb, 63 bytes>
0x4001cb:	and	eax, 0xfff
0x4001d0:	sub	rax, 8
0x4001d4:	add	rax, rsp
0x4001d7:	or	qword ptr [rax], 0
0x4001db:	mov	rax, rsp
0x4001de:	add	rax, 0xf
0x4001e2:	shr	rax, 4
0x4001e6:	shl	rax, 4
0x4001ea:	mov	qword ptr [rbp - 0x88], rax
0x4001f1:	mov	rax, qword ptr [rbp - 0x88]
0x4001f8:	mov	edx, 0x63
0x4001fd:	mov	esi, 0x41
0x400202:	mov	rdi, rax
0x400205:	call	0x500000
<Block for 0x40019a, 5 bytes>
0x40019a:	cmp	rsp, rdx
0x40019d:	je	0x4001b1
<Block for 0x40020a, 69 bytes>
0x40020a:	mov	rax, qword ptr [rbp - 0x88]
0x400211:	add	rax, 0x63
0x400215:	mov	byte ptr [rax], 0
0x400218:	mov	rax, qword ptr [rbp - 0x88]
0x40021f:	mov	qword ptr [rbp - 0x80], rax
0x400223:	mov	rax, qword ptr [rbp - 0x80]
0x400227:	mov	qword ptr [rbp - 0x90], rax
0x40022e:	mov	rax, qword ptr [rbp - 0x90]
0x400235:	mov	qword ptr [rbp - 0x78], rax
0x400239:	lea	rax, [rbp - 0x70]
0x40023d:	mov	edx, 0x63
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500000
<Block for 0x40024f, 28 bytes>
0x40024f:	mov	byte ptr [rbp - 0xd], 0
0x400253:	mov	rcx, qword ptr [rbp - 0x78]
0x400257:	lea	rax, [rbp - 0x70]
0x40025b:	mov	edx, 0x64
0x400260:	mov	rsi, rcx
0x400263:	mov	rdi, rax
0x400266:	call	0x500008
<Block for 0x40026b, 16 bytes>
0x40026b:	mov	byte ptr [rbp - 0xd], 0
0x40026f:	lea	rax, [rbp - 0x70]
0x400273:	mov	rdi, rax
0x400276:	call	0x500010
<Block for 0x40027b, 16 bytes>
0x40027b:	nop	
0x40027c:	mov	rax, qword ptr [rbp - 8]
0x400280:	xor	rax, qword ptr fs:[0x28]
0x400289:	je	0x400290
<Block for 0x400290, 2 bytes>
0x400290:	leave	
0x400291:	ret	
<Block for 0x40028b, 5 bytes>
0x40028b:	call	0x500018
