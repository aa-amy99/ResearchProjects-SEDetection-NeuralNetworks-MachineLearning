<Block for 0x40011e, 83 bytes>
0x40011e:	endbr64	
0x400122:	push	rbp
0x400123:	mov	rbp, rsp
0x400126:	sub	rsp, 0x150
0x40012d:	mov	rax, qword ptr fs:[0x28]
0x400136:	mov	qword ptr [rbp - 8], rax
0x40013a:	xor	eax, eax
0x40013c:	lea	rax, [rbp - 0x148]
0x400143:	mov	qword ptr [rbp - 0x140], rax
0x40014a:	lea	rax, [rbp - 0x148]
0x400151:	mov	qword ptr [rbp - 0x138], rax
0x400158:	lea	rax, [rbp - 0x120]
0x40015f:	mov	edx, 0x31
0x400164:	mov	esi, 0x41
0x400169:	mov	rdi, rax
0x40016c:	call	0x500000
<Block for 0x400171, 32 bytes>
0x400171:	mov	byte ptr [rbp - 0xef], 0
0x400178:	lea	rax, [rbp - 0xe0]
0x40017f:	mov	edx, 0x63
0x400184:	mov	esi, 0x41
0x400189:	mov	rdi, rax
0x40018c:	call	0x500000
<Block for 0x400191, 91 bytes>
0x400191:	mov	byte ptr [rbp - 0x7d], 0
0x400195:	mov	rax, qword ptr [rbp - 0x140]
0x40019c:	mov	rax, qword ptr [rax]
0x40019f:	mov	qword ptr [rbp - 0x130], rax
0x4001a6:	lea	rax, [rbp - 0xe0]
0x4001ad:	mov	qword ptr [rbp - 0x130], rax
0x4001b4:	mov	rax, qword ptr [rbp - 0x140]
0x4001bb:	mov	rdx, qword ptr [rbp - 0x130]
0x4001c2:	mov	qword ptr [rax], rdx
0x4001c5:	mov	rax, qword ptr [rbp - 0x138]
0x4001cc:	mov	rax, qword ptr [rax]
0x4001cf:	mov	qword ptr [rbp - 0x128], rax
0x4001d6:	lea	rax, [rbp - 0x70]
0x4001da:	mov	edx, 0x63
0x4001df:	mov	esi, 0x43
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x500000
<Block for 0x4001ec, 16 bytes>
0x4001ec:	mov	byte ptr [rbp - 0xd], 0
0x4001f0:	lea	rax, [rbp - 0x70]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x500008
<Block for 0x4001fc, 25 bytes>
0x4001fc:	mov	rdx, rax
0x4001ff:	mov	rcx, qword ptr [rbp - 0x128]
0x400206:	lea	rax, [rbp - 0x70]
0x40020a:	mov	rsi, rcx
0x40020d:	mov	rdi, rax
0x400210:	call	0x500010
<Block for 0x400215, 16 bytes>
0x400215:	mov	byte ptr [rbp - 0xd], 0
0x400219:	lea	rax, [rbp - 0x70]
0x40021d:	mov	rdi, rax
0x400220:	call	0x500018
<Block for 0x400225, 16 bytes>
0x400225:	nop	
0x400226:	mov	rax, qword ptr [rbp - 8]
0x40022a:	xor	rax, qword ptr fs:[0x28]
0x400233:	je	0x40023a
<Block for 0x40023a, 2 bytes>
0x40023a:	leave	
0x40023b:	ret	
<Block for 0x400235, 5 bytes>
0x400235:	call	0x500020
