<Block for 0x400075, 46 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x10
0x400081:	mov	rax, qword ptr fs:[0x28]
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	xor	eax, eax
0x400090:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400097:	lea	rax, [rbp - 0xc]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500020
<Block for 0x4000a3, 8 bytes>
0x4000a3:	mov	eax, dword ptr [rbp - 0xc]
0x4000a6:	cmp	eax, -1
0x4000a9:	je	0x4000b5
<Block for 0x4000b5, 27 bytes>
0x4000b5:	mov	edx, 0x180
0x4000ba:	mov	esi, 0x42
0x4000bf:	lea	rdi, [rip + 0x57]
0x4000c6:	mov	eax, 0
0x4000cb:	call	0x500008
<Block for 0x4000ab, 10 bytes>
0x4000ab:	mov	eax, dword ptr [rbp - 0xc]
0x4000ae:	mov	edi, eax
0x4000b0:	call	0x500010
<Block for 0x4000d0, 11 bytes>
0x4000d0:	mov	dword ptr [rbp - 0xc], eax
0x4000d3:	mov	eax, dword ptr [rbp - 0xc]
0x4000d6:	cmp	eax, -1
0x4000d9:	je	0x4000e5
<Block for 0x4000e5, 16 bytes>
0x4000e5:	nop	
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	xor	rax, qword ptr fs:[0x28]
0x4000f3:	je	0x4000fa
<Block for 0x4000db, 10 bytes>
0x4000db:	mov	eax, dword ptr [rbp - 0xc]
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500010
<Block for 0x4000fa, 2 bytes>
0x4000fa:	leave	
0x4000fb:	ret	
<Block for 0x4000f5, 5 bytes>
0x4000f5:	call	0x500018
