<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	lea	rax, [rbp - 0xc]
0x400026:	mov	rdi, rax
0x400029:	call	0x500000
<Block for 0x40002e, 27 bytes>
0x40002e:	mov	edx, 0x180
0x400033:	mov	esi, 0x42
0x400038:	lea	rdi, [rip + 0xcd]
0x40003f:	mov	eax, 0
0x400044:	call	0x500008
<Block for 0x400049, 11 bytes>
0x400049:	mov	dword ptr [rbp - 0xc], eax
0x40004c:	mov	eax, dword ptr [rbp - 0xc]
0x40004f:	cmp	eax, -1
0x400052:	je	0x40005e
<Block for 0x40005e, 16 bytes>
0x40005e:	nop	
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	xor	rax, qword ptr fs:[0x28]
0x40006c:	je	0x400073
<Block for 0x400054, 10 bytes>
0x400054:	mov	eax, dword ptr [rbp - 0xc]
0x400057:	mov	edi, eax
0x400059:	call	0x500010
<Block for 0x400073, 2 bytes>
0x400073:	leave	
0x400074:	ret	
<Block for 0x40006e, 5 bytes>
0x40006e:	call	0x500018
