<Block for 0x40026b, 30 bytes>
0x40026b:	endbr64	
0x40026f:	push	rbp
0x400270:	mov	rbp, rsp
0x400273:	sub	rsp, 0x10
0x400277:	mov	qword ptr [rbp - 0x10], 0
0x40027f:	mov	eax, dword ptr [rip + 0x97]
0x400285:	test	eax, eax
0x400287:	je	0x4002e0
<Block for 0x4002e0, 10 bytes>
0x4002e0:	mov	eax, dword ptr [rip + 0x36]
0x4002e6:	test	eax, eax
0x4002e8:	je	0x4002f7
<Block for 0x400289, 10 bytes>
0x400289:	mov	edi, 0x320
0x40028e:	call	0x500000
<Block for 0x4002f7, 3 bytes>
0x4002f7:	nop	
0x4002f8:	leave	
0x4002f9:	ret	
<Block for 0x4002ea, 13 bytes>
0x4002ea:	mov	rax, qword ptr [rbp - 0x10]
0x4002ee:	mov	eax, dword ptr [rax]
0x4002f0:	mov	edi, eax
0x4002f2:	call	0x500010
<Block for 0x400293, 19 bytes>
0x400293:	mov	qword ptr [rbp - 0x10], rax
0x400297:	mov	qword ptr [rbp - 8], 0
0x40029f:	cmp	qword ptr [rbp - 8], 0x63
0x4002a4:	ja	0x4002e0
<Block for 0x4002a6, 58 bytes>
0x4002a6:	mov	rax, qword ptr [rbp - 8]
0x4002aa:	lea	rdx, [rax*8]
0x4002b2:	mov	rax, qword ptr [rbp - 0x10]
0x4002b6:	add	rax, rdx
0x4002b9:	mov	dword ptr [rax], 1
0x4002bf:	mov	rax, qword ptr [rbp - 8]
0x4002c3:	lea	rdx, [rax*8]
0x4002cb:	mov	rax, qword ptr [rbp - 0x10]
0x4002cf:	add	rax, rdx
0x4002d2:	mov	dword ptr [rax + 4], 2
0x4002d9:	add	qword ptr [rbp - 8], 1
0x4002de:	jmp	0x40029f
<Block for 0x40029f, 7 bytes>
0x40029f:	cmp	qword ptr [rbp - 8], 0x63
0x4002a4:	ja	0x4002e0
