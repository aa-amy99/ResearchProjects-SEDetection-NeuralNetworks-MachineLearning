<Block for 0x400103, 37 bytes>
0x400103:	endbr64	
0x400107:	push	rbp
0x400108:	mov	rbp, rsp
0x40010b:	sub	rsp, 0x20
0x40010f:	mov	rax, qword ptr fs:[0x28]
0x400118:	mov	qword ptr [rbp - 8], rax
0x40011c:	xor	eax, eax
0x40011e:	mov	eax, 0
0x400123:	call	0x40000f
<Block for 0x400128, 4 bytes>
0x400128:	test	eax, eax
0x40012a:	je	0x40013d
<Block for 0x40013d, 54 bytes>
0x40013d:	mov	eax, 0x10
0x400142:	sub	rax, 1
0x400146:	add	rax, 0x10
0x40014a:	mov	esi, 0x10
0x40014f:	mov	edx, 0
0x400154:	div	rsi
0x400157:	imul	rax, rax, 0x10
0x40015b:	mov	rdx, rax
0x40015e:	and	rdx, 0xfffffffffffff000
0x400165:	mov	rcx, rsp
0x400168:	sub	rcx, rdx
0x40016b:	mov	rdx, rcx
0x40016e:	cmp	rsp, rdx
0x400171:	je	0x400185
<Block for 0x40012c, 12 bytes>
0x40012c:	lea	rdi, [rip + 0x23d]
0x400133:	call	0x500010
<Block for 0x400185, 26 bytes>
0x400185:	mov	rdx, rax
0x400188:	and	edx, 0xfff
0x40018e:	sub	rsp, rdx
0x400191:	mov	rdx, rax
0x400194:	and	edx, 0xfff
0x40019a:	test	rdx, rdx
0x40019d:	je	0x4001af
<Block for 0x400173, 18 bytes>
0x400173:	sub	rsp, 0x1000
0x40017a:	or	qword ptr [rsp + 0xff8], 0
0x400183:	jmp	0x40016e
<Block for 0x400138, 5 bytes>
0x400138:	jmp	0x400218
<Block for 0x4001af, 29 bytes>
0x4001af:	mov	rax, rsp
0x4001b2:	add	rax, 0xf
0x4001b6:	shr	rax, 4
0x4001ba:	shl	rax, 4
0x4001be:	mov	qword ptr [rbp - 0x20], rax
0x4001c2:	mov	edi, 8
0x4001c7:	call	0x500018
<Block for 0x40019f, 45 bytes>
0x40019f:	and	eax, 0xfff
0x4001a4:	sub	rax, 8
0x4001a8:	add	rax, rsp
0x4001ab:	or	qword ptr [rax], 0
0x4001af:	mov	rax, rsp
0x4001b2:	add	rax, 0xf
0x4001b6:	shr	rax, 4
0x4001ba:	shl	rax, 4
0x4001be:	mov	qword ptr [rbp - 0x20], rax
0x4001c2:	mov	edi, 8
0x4001c7:	call	0x500018
<Block for 0x40016e, 5 bytes>
0x40016e:	cmp	rsp, rdx
0x400171:	je	0x400185
<Block for 0x400218, 16 bytes>
0x400218:	nop	
0x400219:	mov	rax, qword ptr [rbp - 8]
0x40021d:	xor	rax, qword ptr fs:[0x28]
0x400226:	je	0x40022d
<Block for 0x4001cc, 11 bytes>
0x4001cc:	mov	qword ptr [rbp - 0x18], rax
0x4001d0:	cmp	qword ptr [rbp - 0x18], 0
0x4001d5:	jne	0x4001e1
<Block for 0x40022d, 2 bytes>
0x40022d:	leave	
0x40022e:	ret	
<Block for 0x400228, 5 bytes>
0x400228:	call	0x500008
<Block for 0x4001d7, 10 bytes>
0x4001d7:	mov	edi, 0xffffffff
0x4001dc:	call	0x500020
<Block for 0x4001e1, 55 bytes>
0x4001e1:	mov	rax, qword ptr [rbp - 0x18]
0x4001e5:	movsd	xmm0, qword ptr [rip + 0x19b]
0x4001ed:	movsd	qword ptr [rax], xmm0
0x4001f1:	mov	rax, qword ptr [rbp - 0x20]
0x4001f5:	mov	rdx, qword ptr [rbp - 0x18]
0x4001f9:	mov	qword ptr [rax], rdx
0x4001fc:	mov	rax, qword ptr [rbp - 0x20]
0x400200:	mov	rax, qword ptr [rax]
0x400203:	mov	qword ptr [rbp - 0x10], rax
0x400207:	mov	rax, qword ptr [rbp - 0x10]
0x40020b:	mov	rax, qword ptr [rax]
0x40020e:	movq	xmm0, rax
0x400213:	call	0x500000
