<Block for 0x400033, 38 bytes>
0x400033:	endbr64	
0x400037:	push	rbp
0x400038:	mov	rbp, rsp
0x40003b:	sub	rsp, 0x20
0x40003f:	mov	rax, qword ptr fs:[0x28]
0x400048:	mov	qword ptr [rbp - 8], rax
0x40004c:	xor	eax, eax
0x40004e:	mov	eax, dword ptr [rip + 0xc0]
0x400054:	cmp	eax, 5
0x400057:	je	0x400067
<Block for 0x400067, 29 bytes>
0x400067:	mov	byte ptr [rbp - 0x11], 0x61
0x40006b:	lea	rax, [rbp - 0x11]
0x40006f:	mov	qword ptr [rbp - 0x10], rax
0x400073:	mov	rax, qword ptr [rbp - 0x10]
0x400077:	movzx	eax, byte ptr [rax]
0x40007a:	movsx	eax, al
0x40007d:	mov	edi, eax
0x40007f:	call	0x500000
<Block for 0x400059, 12 bytes>
0x400059:	lea	rdi, [rip + 0xb8]
0x400060:	call	0x500008
<Block for 0x400084, 16 bytes>
0x400084:	nop	
0x400085:	mov	rax, qword ptr [rbp - 8]
0x400089:	xor	rax, qword ptr fs:[0x28]
0x400092:	je	0x400099
<Block for 0x400065, 2 bytes>
0x400065:	jmp	0x400084
<Block for 0x400099, 2 bytes>
0x400099:	leave	
0x40009a:	ret	
<Block for 0x400094, 5 bytes>
0x400094:	call	0x500010
