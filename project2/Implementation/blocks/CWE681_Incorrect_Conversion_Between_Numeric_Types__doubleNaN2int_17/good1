<Block for 0x4000c6, 45 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	sub	rsp, 0x120
0x4000d5:	mov	rax, qword ptr fs:[0x28]
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	xor	eax, eax
0x4000e4:	mov	dword ptr [rbp - 0x11c], 0
0x4000ee:	jmp	0x400187
<Block for 0x400187, 13 bytes>
0x400187:	cmp	dword ptr [rbp - 0x11c], 0
0x40018e:	jle	0x4000f3
<Block for 0x4000f3, 39 bytes>
0x4000f3:	pxor	xmm0, xmm0
0x4000f7:	movsd	qword ptr [rbp - 0x118], xmm0
0x4000ff:	mov	rdx, qword ptr [rip + 0xffefa]
0x400106:	lea	rax, [rbp - 0x110]
0x40010d:	mov	esi, 0x100
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x400194, 16 bytes>
0x400194:	nop	
0x400195:	mov	rax, qword ptr [rbp - 8]
0x400199:	xor	rax, qword ptr fs:[0x28]
0x4001a2:	je	0x4001a9
<Block for 0x40011a, 5 bytes>
0x40011a:	test	rax, rax
0x40011d:	je	0x40013c
<Block for 0x4001a9, 2 bytes>
0x4001a9:	leave	
0x4001aa:	ret	
<Block for 0x4001a4, 5 bytes>
0x4001a4:	call	0x500030
<Block for 0x40013c, 12 bytes>
0x40013c:	lea	rdi, [rip + 0x7d]
0x400143:	call	0x500018
<Block for 0x40011f, 15 bytes>
0x40011f:	lea	rax, [rbp - 0x110]
0x400126:	mov	rdi, rax
0x400129:	call	0x500010
<Block for 0x400148, 14 bytes>
0x400148:	pxor	xmm0, xmm0
0x40014c:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400154:	jbe	0x400164
<Block for 0x40012e, 14 bytes>
0x40012e:	movq	rax, xmm0
0x400133:	mov	qword ptr [rbp - 0x118], rax
0x40013a:	jmp	0x400148
<Block for 0x400164, 17 bytes>
0x400164:	mov	rax, qword ptr [rbp - 0x118]
0x40016b:	movq	xmm0, rax
0x400170:	call	0x500020
<Block for 0x400156, 12 bytes>
0x400156:	lea	rdi, [rip + 0x73]
0x40015d:	call	0x500018
<Block for 0x400175, 11 bytes>
0x400175:	cvttsd2si	eax, xmm0
0x400179:	mov	edi, eax
0x40017b:	call	0x500028
<Block for 0x400162, 2 bytes>
0x400162:	jmp	0x400180
<Block for 0x400180, 20 bytes>
0x400180:	add	dword ptr [rbp - 0x11c], 1
0x400187:	cmp	dword ptr [rbp - 0x11c], 0
0x40018e:	jle	0x4000f3
