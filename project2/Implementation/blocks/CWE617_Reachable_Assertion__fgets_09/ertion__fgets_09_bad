<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0xfffd8]
0x400028:	test	eax, eax
0x40002a:	je	0x40007b
<Block for 0x40007b, 6 bytes>
0x40007b:	cmp	dword ptr [rbp - 0x1c], 5
0x40007f:	jg	0x4000a0
<Block for 0x40002c, 45 bytes>
0x40002c:	mov	qword ptr [rbp - 0x16], 0
0x400034:	mov	dword ptr [rbp - 0xe], 0
0x40003b:	mov	word ptr [rbp - 0xa], 0
0x400041:	mov	rdx, qword ptr [rip + 0xfffc0]
0x400048:	lea	rax, [rbp - 0x16]
0x40004c:	mov	esi, 0xe
0x400051:	mov	rdi, rax
0x400054:	call	0x500010
<Block for 0x400081, 31 bytes>
0x400081:	lea	rcx, [rip + 0x158]
0x400088:	mov	edx, 0x31
0x40008d:	lea	rsi, [rip + 0xfc]
0x400094:	lea	rdi, [rip + 0x11c]
0x40009b:	call	0x500028
<Block for 0x4000a0, 16 bytes>
0x4000a0:	nop	
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	xor	rax, qword ptr fs:[0x28]
0x4000ae:	je	0x4000b5
<Block for 0x400059, 5 bytes>
0x400059:	test	rax, rax
0x40005c:	je	0x40006f
<Block for 0x4000b5, 2 bytes>
0x4000b5:	leave	
0x4000b6:	ret	
<Block for 0x4000b0, 5 bytes>
0x4000b0:	call	0x500030
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0x10a]
0x400076:	call	0x500020
<Block for 0x40005e, 12 bytes>
0x40005e:	lea	rax, [rbp - 0x16]
0x400062:	mov	rdi, rax
0x400065:	call	0x500018
<Block for 0x40006a, 5 bytes>
0x40006a:	mov	dword ptr [rbp - 0x1c], eax
0x40006d:	jmp	0x40007b
