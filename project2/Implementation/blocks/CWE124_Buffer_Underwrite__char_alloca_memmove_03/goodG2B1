<Block for 0x40012d, 81 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	add	rsp, -0x80
0x400139:	mov	rax, qword ptr fs:[0x28]
0x400142:	mov	qword ptr [rbp - 8], rax
0x400146:	xor	eax, eax
0x400148:	mov	eax, 0x10
0x40014d:	sub	rax, 1
0x400151:	add	rax, 0x6c
0x400155:	mov	esi, 0x10
0x40015a:	mov	edx, 0
0x40015f:	div	rsi
0x400162:	imul	rax, rax, 0x10
0x400166:	mov	rdx, rax
0x400169:	and	rdx, 0xfffffffffffff000
0x400170:	mov	rcx, rsp
0x400173:	sub	rcx, rdx
0x400176:	mov	rdx, rcx
0x400179:	cmp	rsp, rdx
0x40017c:	je	0x400190
<Block for 0x400190, 26 bytes>
0x400190:	mov	rdx, rax
0x400193:	and	edx, 0xfff
0x400199:	sub	rsp, rdx
0x40019c:	mov	rdx, rax
0x40019f:	and	edx, 0xfff
0x4001a5:	test	rdx, rdx
0x4001a8:	je	0x4001ba
<Block for 0x40017e, 18 bytes>
0x40017e:	sub	rsp, 0x1000
0x400185:	or	qword ptr [rsp + 0xff8], 0
0x40018e:	jmp	0x400179
<Block for 0x4001ba, 41 bytes>
0x4001ba:	mov	rax, rsp
0x4001bd:	add	rax, 0xf
0x4001c1:	shr	rax, 4
0x4001c5:	shl	rax, 4
0x4001c9:	mov	qword ptr [rbp - 0x80], rax
0x4001cd:	mov	rax, qword ptr [rbp - 0x80]
0x4001d1:	mov	edx, 0x63
0x4001d6:	mov	esi, 0x41
0x4001db:	mov	rdi, rax
0x4001de:	call	0x500000
<Block for 0x4001aa, 57 bytes>
0x4001aa:	and	eax, 0xfff
0x4001af:	sub	rax, 8
0x4001b3:	add	rax, rsp
0x4001b6:	or	qword ptr [rax], 0
0x4001ba:	mov	rax, rsp
0x4001bd:	add	rax, 0xf
0x4001c1:	shr	rax, 4
0x4001c5:	shl	rax, 4
0x4001c9:	mov	qword ptr [rbp - 0x80], rax
0x4001cd:	mov	rax, qword ptr [rbp - 0x80]
0x4001d1:	mov	edx, 0x63
0x4001d6:	mov	esi, 0x41
0x4001db:	mov	rdi, rax
0x4001de:	call	0x500000
<Block for 0x400179, 5 bytes>
0x400179:	cmp	rsp, rdx
0x40017c:	je	0x400190
<Block for 0x4001e3, 41 bytes>
0x4001e3:	mov	rax, qword ptr [rbp - 0x80]
0x4001e7:	add	rax, 0x63
0x4001eb:	mov	byte ptr [rax], 0
0x4001ee:	mov	rax, qword ptr [rbp - 0x80]
0x4001f2:	mov	qword ptr [rbp - 0x78], rax
0x4001f6:	lea	rax, [rbp - 0x70]
0x4001fa:	mov	edx, 0x63
0x4001ff:	mov	esi, 0x43
0x400204:	mov	rdi, rax
0x400207:	call	0x500000
<Block for 0x40020c, 28 bytes>
0x40020c:	mov	byte ptr [rbp - 0xd], 0
0x400210:	lea	rcx, [rbp - 0x70]
0x400214:	mov	rax, qword ptr [rbp - 0x78]
0x400218:	mov	edx, 0x64
0x40021d:	mov	rsi, rcx
0x400220:	mov	rdi, rax
0x400223:	call	0x500008
<Block for 0x400228, 23 bytes>
0x400228:	mov	rax, qword ptr [rbp - 0x78]
0x40022c:	add	rax, 0x63
0x400230:	mov	byte ptr [rax], 0
0x400233:	mov	rax, qword ptr [rbp - 0x78]
0x400237:	mov	rdi, rax
0x40023a:	call	0x500010
<Block for 0x40023f, 16 bytes>
0x40023f:	nop	
0x400240:	mov	rax, qword ptr [rbp - 8]
0x400244:	xor	rax, qword ptr fs:[0x28]
0x40024d:	je	0x400254
<Block for 0x400254, 2 bytes>
0x400254:	leave	
0x400255:	ret	
<Block for 0x40024f, 5 bytes>
0x40024f:	call	0x500018
