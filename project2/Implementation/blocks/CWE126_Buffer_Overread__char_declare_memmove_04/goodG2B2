<Block for 0x4001be, 55 bytes>
0x4001be:	endbr64	
0x4001c2:	push	rbp
0x4001c3:	mov	rbp, rsp
0x4001c6:	sub	rsp, 0x130
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 8], rax
0x4001da:	xor	eax, eax
0x4001dc:	lea	rax, [rbp - 0x120]
0x4001e3:	mov	edx, 0x31
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500000
<Block for 0x4001f5, 32 bytes>
0x4001f5:	mov	byte ptr [rbp - 0xef], 0
0x4001fc:	lea	rax, [rbp - 0xe0]
0x400203:	mov	edx, 0x63
0x400208:	mov	esi, 0x41
0x40020d:	mov	rdi, rax
0x400210:	call	0x500000
<Block for 0x400215, 13 bytes>
0x400215:	mov	byte ptr [rbp - 0x7d], 0
0x400219:	mov	eax, 1
0x40021e:	test	eax, eax
0x400220:	je	0x400230
<Block for 0x400230, 22 bytes>
0x400230:	lea	rax, [rbp - 0x70]
0x400234:	mov	edx, 0x63
0x400239:	mov	esi, 0x43
0x40023e:	mov	rdi, rax
0x400241:	call	0x500000
<Block for 0x400222, 36 bytes>
0x400222:	lea	rax, [rbp - 0xe0]
0x400229:	mov	qword ptr [rbp - 0x128], rax
0x400230:	lea	rax, [rbp - 0x70]
0x400234:	mov	edx, 0x63
0x400239:	mov	esi, 0x43
0x40023e:	mov	rdi, rax
0x400241:	call	0x500000
<Block for 0x400246, 16 bytes>
0x400246:	mov	byte ptr [rbp - 0xd], 0
0x40024a:	lea	rax, [rbp - 0x70]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500008
<Block for 0x400256, 25 bytes>
0x400256:	mov	rdx, rax
0x400259:	mov	rcx, qword ptr [rbp - 0x128]
0x400260:	lea	rax, [rbp - 0x70]
0x400264:	mov	rsi, rcx
0x400267:	mov	rdi, rax
0x40026a:	call	0x500010
<Block for 0x40026f, 16 bytes>
0x40026f:	mov	byte ptr [rbp - 0xd], 0
0x400273:	lea	rax, [rbp - 0x70]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500018
<Block for 0x40027f, 16 bytes>
0x40027f:	nop	
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	xor	rax, qword ptr fs:[0x28]
0x40028d:	je	0x400294
<Block for 0x400294, 2 bytes>
0x400294:	leave	
0x400295:	ret	
<Block for 0x40028f, 5 bytes>
0x40028f:	call	0x500020
