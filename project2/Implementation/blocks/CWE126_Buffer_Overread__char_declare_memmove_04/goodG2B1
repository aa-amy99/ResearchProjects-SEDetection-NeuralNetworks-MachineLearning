<Block for 0x4000d8, 55 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	sub	rsp, 0x130
0x4000e7:	mov	rax, qword ptr fs:[0x28]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	xor	eax, eax
0x4000f6:	lea	rax, [rbp - 0x120]
0x4000fd:	mov	edx, 0x31
0x400102:	mov	esi, 0x41
0x400107:	mov	rdi, rax
0x40010a:	call	0x500000
<Block for 0x40010f, 32 bytes>
0x40010f:	mov	byte ptr [rbp - 0xef], 0
0x400116:	lea	rax, [rbp - 0xe0]
0x40011d:	mov	edx, 0x63
0x400122:	mov	esi, 0x41
0x400127:	mov	rdi, rax
0x40012a:	call	0x500000
<Block for 0x40012f, 13 bytes>
0x40012f:	mov	byte ptr [rbp - 0x7d], 0
0x400133:	mov	eax, 0
0x400138:	test	eax, eax
0x40013a:	je	0x40014a
<Block for 0x40014a, 36 bytes>
0x40014a:	lea	rax, [rbp - 0xe0]
0x400151:	mov	qword ptr [rbp - 0x128], rax
0x400158:	lea	rax, [rbp - 0x70]
0x40015c:	mov	edx, 0x63
0x400161:	mov	esi, 0x43
0x400166:	mov	rdi, rax
0x400169:	call	0x500000
<Block for 0x40013c, 12 bytes>
0x40013c:	lea	rdi, [rip + 0x17d]
0x400143:	call	0x500018
<Block for 0x40016e, 16 bytes>
0x40016e:	mov	byte ptr [rbp - 0xd], 0
0x400172:	lea	rax, [rbp - 0x70]
0x400176:	mov	rdi, rax
0x400179:	call	0x500008
<Block for 0x400148, 2 bytes>
0x400148:	jmp	0x400158
<Block for 0x40017e, 25 bytes>
0x40017e:	mov	rdx, rax
0x400181:	mov	rcx, qword ptr [rbp - 0x128]
0x400188:	lea	rax, [rbp - 0x70]
0x40018c:	mov	rsi, rcx
0x40018f:	mov	rdi, rax
0x400192:	call	0x500010
<Block for 0x400158, 22 bytes>
0x400158:	lea	rax, [rbp - 0x70]
0x40015c:	mov	edx, 0x63
0x400161:	mov	esi, 0x43
0x400166:	mov	rdi, rax
0x400169:	call	0x500000
<Block for 0x400197, 16 bytes>
0x400197:	mov	byte ptr [rbp - 0xd], 0
0x40019b:	lea	rax, [rbp - 0x70]
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500018
<Block for 0x4001a7, 16 bytes>
0x4001a7:	nop	
0x4001a8:	mov	rax, qword ptr [rbp - 8]
0x4001ac:	xor	rax, qword ptr fs:[0x28]
0x4001b5:	je	0x4001bc
<Block for 0x4001bc, 2 bytes>
0x4001bc:	leave	
0x4001bd:	ret	
<Block for 0x4001b7, 5 bytes>
0x4001b7:	call	0x500020
