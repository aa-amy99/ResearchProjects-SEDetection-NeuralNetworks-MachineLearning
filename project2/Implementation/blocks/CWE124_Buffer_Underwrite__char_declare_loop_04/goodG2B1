<Block for 0x4000e7, 55 bytes>
0x4000e7:	endbr64	
0x4000eb:	push	rbp
0x4000ec:	mov	rbp, rsp
0x4000ef:	sub	rsp, 0xf0
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	lea	rax, [rbp - 0xe0]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x41
0x400116:	mov	rdi, rax
0x400119:	call	0x500000
<Block for 0x40011e, 13 bytes>
0x40011e:	mov	byte ptr [rbp - 0x7d], 0
0x400122:	mov	eax, 0
0x400127:	test	eax, eax
0x400129:	je	0x400139
<Block for 0x400139, 36 bytes>
0x400139:	lea	rax, [rbp - 0xe0]
0x400140:	mov	qword ptr [rbp - 0xf0], rax
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40012b, 12 bytes>
0x40012b:	lea	rdi, [rip + 0x1b2]
0x400132:	call	0x500008
<Block for 0x40015d, 17 bytes>
0x40015d:	mov	byte ptr [rbp - 0xd], 0
0x400161:	mov	qword ptr [rbp - 0xe8], 0
0x40016c:	jmp	0x40019a
<Block for 0x400137, 2 bytes>
0x400137:	jmp	0x400147
<Block for 0x40019a, 10 bytes>
0x40019a:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001a2:	jbe	0x40016e
<Block for 0x400147, 22 bytes>
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40016e, 54 bytes>
0x40016e:	mov	rdx, qword ptr [rbp - 0xf0]
0x400175:	mov	rax, qword ptr [rbp - 0xe8]
0x40017c:	add	rdx, rax
0x40017f:	lea	rcx, [rbp - 0x70]
0x400183:	mov	rax, qword ptr [rbp - 0xe8]
0x40018a:	add	rax, rcx
0x40018d:	movzx	eax, byte ptr [rax]
0x400190:	mov	byte ptr [rdx], al
0x400192:	add	qword ptr [rbp - 0xe8], 1
0x40019a:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001a2:	jbe	0x40016e
<Block for 0x4001a4, 29 bytes>
0x4001a4:	mov	rax, qword ptr [rbp - 0xf0]
0x4001ab:	add	rax, 0x63
0x4001af:	mov	byte ptr [rax], 0
0x4001b2:	mov	rax, qword ptr [rbp - 0xf0]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500008
<Block for 0x4001c1, 16 bytes>
0x4001c1:	nop	
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	xor	rax, qword ptr fs:[0x28]
0x4001cf:	je	0x4001d6
<Block for 0x4001d6, 2 bytes>
0x4001d6:	leave	
0x4001d7:	ret	
<Block for 0x4001d1, 5 bytes>
0x4001d1:	call	0x500010
