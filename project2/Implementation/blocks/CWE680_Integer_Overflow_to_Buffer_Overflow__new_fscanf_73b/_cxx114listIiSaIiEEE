<Block for 0x400094, 28 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0x30
0x4000a0:	mov	qword ptr [rbp - 0x28], rdi
0x4000a4:	mov	rax, qword ptr [rbp - 0x28]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x40012a
<Block for 0x4000b0, 30 bytes>
0x4000b0:	mov	eax, dword ptr [rax]
0x4000b2:	mov	dword ptr [rbp - 0x1c], eax
0x4000b5:	mov	eax, dword ptr [rbp - 0x1c]
0x4000b8:	cdqe	
0x4000ba:	shl	rax, 2
0x4000be:	mov	qword ptr [rbp - 0x10], rax
0x4000c2:	mov	rax, qword ptr [rbp - 0x10]
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500000
<Block for 0x4000ce, 23 bytes>
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	mov	qword ptr [rbp - 0x18], 0
0x4000da:	mov	eax, dword ptr [rbp - 0x1c]
0x4000dd:	cdqe	
0x4000df:	cmp	qword ptr [rbp - 0x18], rax
0x4000e3:	jae	0x400105
<Block for 0x4000e5, 32 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 0x18]
0x4000e9:	lea	rdx, [rax*4]
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	add	rax, rdx
0x4000f8:	mov	dword ptr [rax], 0
0x4000fe:	add	qword ptr [rbp - 0x18], 1
0x400103:	jmp	0x4000da
<Block for 0x400105, 13 bytes>
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	mov	eax, dword ptr [rax]
0x40010b:	mov	edi, eax
0x40010d:	call	0x500008
<Block for 0x4000da, 11 bytes>
0x4000da:	mov	eax, dword ptr [rbp - 0x1c]
0x4000dd:	cdqe	
0x4000df:	cmp	qword ptr [rbp - 0x18], rax
0x4000e3:	jae	0x400105
<Block for 0x400112, 7 bytes>
0x400112:	cmp	qword ptr [rbp - 8], 0
0x400117:	je	0x400125
<Block for 0x400125, 3 bytes>
0x400125:	nop	
0x400126:	leave	
0x400127:	ret	
<Block for 0x400119, 12 bytes>
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500010
