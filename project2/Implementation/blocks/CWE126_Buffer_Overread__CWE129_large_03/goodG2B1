<Block for 0x4001b0, 87 bytes>
0x4001b0:	endbr64	
0x4001b4:	push	rbp
0x4001b5:	mov	rbp, rsp
0x4001b8:	sub	rsp, 0x40
0x4001bc:	mov	rax, qword ptr fs:[0x28]
0x4001c5:	mov	qword ptr [rbp - 8], rax
0x4001c9:	xor	eax, eax
0x4001cb:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001d2:	mov	dword ptr [rbp - 0x34], 7
0x4001d9:	mov	qword ptr [rbp - 0x30], 0
0x4001e1:	mov	qword ptr [rbp - 0x28], 0
0x4001e9:	mov	qword ptr [rbp - 0x20], 0
0x4001f1:	mov	qword ptr [rbp - 0x18], 0
0x4001f9:	mov	qword ptr [rbp - 0x10], 0
0x400201:	cmp	dword ptr [rbp - 0x34], 0
0x400205:	js	0x400219
<Block for 0x400219, 12 bytes>
0x400219:	lea	rdi, [rip + 0xe0]
0x400220:	call	0x500008
<Block for 0x400207, 16 bytes>
0x400207:	mov	eax, dword ptr [rbp - 0x34]
0x40020a:	cdqe	
0x40020c:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400210:	mov	edi, eax
0x400212:	call	0x500000
<Block for 0x400225, 16 bytes>
0x400225:	nop	
0x400226:	mov	rax, qword ptr [rbp - 8]
0x40022a:	xor	rax, qword ptr fs:[0x28]
0x400233:	je	0x40023a
<Block for 0x400217, 2 bytes>
0x400217:	jmp	0x400225
<Block for 0x40023a, 2 bytes>
0x40023a:	leave	
0x40023b:	ret	
<Block for 0x400235, 5 bytes>
0x400235:	call	0x500010
