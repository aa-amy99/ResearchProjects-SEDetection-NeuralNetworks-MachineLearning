<Block for 0x4000c8, 57 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0x30
0x4000d4:	mov	qword ptr [rbp - 0x28], rdi
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	dword ptr [rbp - 0x14], 2
0x4000ee:	lea	rdx, [rbp - 0x14]
0x4000f2:	mov	rax, qword ptr [rbp - 0x28]
0x4000f6:	mov	rsi, rdx
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x40017a
<Block for 0x400101, 14 bytes>
0x400101:	mov	rax, qword ptr [rax]
0x400104:	mov	qword ptr [rbp - 0x10], rax
0x400108:	cmp	qword ptr [rbp - 0x10], 0
0x40010d:	je	0x40011e
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rdi, [rip + 0x48]
0x400125:	call	0x500010
<Block for 0x40010f, 13 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x10]
0x400113:	mov	eax, dword ptr [rax]
0x400115:	mov	edi, eax
0x400117:	call	0x500000
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x40011c, 2 bytes>
0x40011c:	jmp	0x40012a
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500008
