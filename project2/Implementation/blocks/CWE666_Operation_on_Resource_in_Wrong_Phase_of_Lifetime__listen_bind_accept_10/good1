<Block for 0x400285, 40 bytes>
0x400285:	endbr64	
0x400289:	push	rbp
0x40028a:	mov	rbp, rsp
0x40028d:	sub	rsp, 0xa0
0x400294:	mov	rax, qword ptr fs:[0x28]
0x40029d:	mov	qword ptr [rbp - 8], rax
0x4002a1:	xor	eax, eax
0x4002a3:	mov	eax, dword ptr [rip + 0xffdbf]
0x4002a9:	test	eax, eax
0x4002ab:	je	0x4002be
<Block for 0x4002be, 135 bytes>
0x4002be:	mov	qword ptr [rbp - 0x70], 0
0x4002c6:	mov	qword ptr [rbp - 0x68], 0
0x4002ce:	mov	qword ptr [rbp - 0x60], 0
0x4002d6:	mov	qword ptr [rbp - 0x58], 0
0x4002de:	mov	qword ptr [rbp - 0x50], 0
0x4002e6:	mov	qword ptr [rbp - 0x48], 0
0x4002ee:	mov	qword ptr [rbp - 0x40], 0
0x4002f6:	mov	qword ptr [rbp - 0x38], 0
0x4002fe:	mov	qword ptr [rbp - 0x30], 0
0x400306:	mov	qword ptr [rbp - 0x28], 0
0x40030e:	mov	qword ptr [rbp - 0x20], 0
0x400316:	mov	qword ptr [rbp - 0x18], 0
0x40031e:	mov	dword ptr [rbp - 0x10], 0
0x400325:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x40032f:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400339:	lea	rax, [rbp - 0x70]
0x40033d:	mov	rdi, rax
0x400340:	call	0x500008
<Block for 0x4002ad, 12 bytes>
0x4002ad:	lea	rdi, [rip + 0x507]
0x4002b4:	call	0x500058
<Block for 0x400345, 27 bytes>
0x400345:	mov	qword ptr [rbp - 0x90], rax
0x40034c:	mov	edx, 6
0x400351:	mov	esi, 1
0x400356:	mov	edi, 2
0x40035b:	call	0x500010
<Block for 0x4002b9, 5 bytes>
0x4002b9:	jmp	0x400500
<Block for 0x400360, 19 bytes>
0x400360:	mov	dword ptr [rbp - 0x98], eax
0x400366:	cmp	dword ptr [rbp - 0x98], -1
0x40036d:	je	0x4004be
<Block for 0x400500, 16 bytes>
0x400500:	nop	
0x400501:	mov	rax, qword ptr [rbp - 8]
0x400505:	xor	rax, qword ptr fs:[0x28]
0x40050e:	je	0x400515
<Block for 0x4004be, 3 bytes>
0x4004be:	nop	
0x4004bf:	jmp	0x4004c8
<Block for 0x400373, 22 bytes>
0x400373:	lea	rax, [rbp - 0x80]
0x400377:	mov	edx, 0x10
0x40037c:	mov	esi, 0
0x400381:	mov	rdi, rax
0x400384:	call	0x500018
<Block for 0x400515, 2 bytes>
0x400515:	leave	
0x400516:	ret	
<Block for 0x400510, 5 bytes>
0x400510:	call	0x500060
<Block for 0x4004c8, 9 bytes>
0x4004c8:	cmp	dword ptr [rbp - 0x98], -1
0x4004cf:	je	0x4004de
<Block for 0x400389, 23 bytes>
0x400389:	mov	word ptr [rbp - 0x80], 2
0x40038f:	mov	dword ptr [rbp - 0x7c], 0
0x400396:	mov	edi, 0x6987
0x40039b:	call	0x500020
<Block for 0x4004de, 9 bytes>
0x4004de:	cmp	dword ptr [rbp - 0x9c], -1
0x4004e5:	je	0x4004f4
<Block for 0x4004d1, 13 bytes>
0x4004d1:	mov	eax, dword ptr [rbp - 0x98]
0x4004d7:	mov	edi, eax
0x4004d9:	call	0x500050
<Block for 0x4003a0, 29 bytes>
0x4003a0:	mov	word ptr [rbp - 0x7e], ax
0x4003a4:	lea	rcx, [rbp - 0x80]
0x4003a8:	mov	eax, dword ptr [rbp - 0x98]
0x4003ae:	mov	edx, 0x10
0x4003b3:	mov	rsi, rcx
0x4003b6:	mov	edi, eax
0x4003b8:	call	0x500030
<Block for 0x4004f4, 12 bytes>
0x4004f4:	lea	rax, [rbp - 0x70]
0x4004f8:	mov	rdi, rax
0x4004fb:	call	0x500058
<Block for 0x4004e7, 13 bytes>
0x4004e7:	mov	eax, dword ptr [rbp - 0x9c]
0x4004ed:	mov	edi, eax
0x4004ef:	call	0x500050
<Block for 0x4003bd, 9 bytes>
0x4003bd:	cmp	eax, -1
0x4003c0:	je	0x4004c1
<Block for 0x4004c1, 3 bytes>
0x4004c1:	nop	
0x4004c2:	jmp	0x4004c8
<Block for 0x4003c6, 18 bytes>
0x4003c6:	mov	eax, dword ptr [rbp - 0x98]
0x4003cc:	mov	esi, 5
0x4003d1:	mov	edi, eax
0x4003d3:	call	0x500028
<Block for 0x4003d8, 9 bytes>
0x4003d8:	cmp	eax, -1
0x4003db:	je	0x4004c4
<Block for 0x4004c4, 3 bytes>
0x4004c4:	nop	
0x4004c5:	jmp	0x4004c8
<Block for 0x4003e1, 23 bytes>
0x4003e1:	mov	eax, dword ptr [rbp - 0x98]
0x4003e7:	mov	edx, 0
0x4003ec:	mov	esi, 0
0x4003f1:	mov	edi, eax
0x4003f3:	call	0x500038
<Block for 0x4003f8, 19 bytes>
0x4003f8:	mov	dword ptr [rbp - 0x9c], eax
0x4003fe:	cmp	dword ptr [rbp - 0x9c], -1
0x400405:	je	0x4004c7
<Block for 0x40040b, 52 bytes>
0x40040b:	mov	rax, qword ptr [rbp - 0x90]
0x400412:	mov	edx, 0x63
0x400417:	sub	edx, eax
0x400419:	mov	eax, edx
0x40041b:	movsxd	rdx, eax
0x40041e:	lea	rcx, [rbp - 0x70]
0x400422:	mov	rax, qword ptr [rbp - 0x90]
0x400429:	lea	rsi, [rcx + rax]
0x40042d:	mov	eax, dword ptr [rbp - 0x9c]
0x400433:	mov	ecx, 0
0x400438:	mov	edi, eax
0x40043a:	call	0x500040
<Block for 0x4004c7, 1 bytes>
0x4004c7:	nop	
<Block for 0x40043f, 15 bytes>
0x40043f:	mov	dword ptr [rbp - 0x94], eax
0x400445:	cmp	dword ptr [rbp - 0x94], -1
0x40044c:	je	0x4004c8
<Block for 0x40044e, 9 bytes>
0x40044e:	cmp	dword ptr [rbp - 0x94], 0
0x400455:	je	0x4004c8
<Block for 0x400457, 30 bytes>
0x400457:	mov	eax, dword ptr [rbp - 0x94]
0x40045d:	cdqe	
0x40045f:	mov	byte ptr [rbp + rax - 0x70], 0
0x400464:	lea	rax, [rbp - 0x70]
0x400468:	mov	esi, 0xd
0x40046d:	mov	rdi, rax
0x400470:	call	0x500048
<Block for 0x400475, 17 bytes>
0x400475:	mov	qword ptr [rbp - 0x88], rax
0x40047c:	cmp	qword ptr [rbp - 0x88], 0
0x400484:	je	0x400490
<Block for 0x400490, 17 bytes>
0x400490:	lea	rax, [rbp - 0x70]
0x400494:	mov	esi, 0xa
0x400499:	mov	rdi, rax
0x40049c:	call	0x500048
<Block for 0x400486, 27 bytes>
0x400486:	mov	rax, qword ptr [rbp - 0x88]
0x40048d:	mov	byte ptr [rax], 0
0x400490:	lea	rax, [rbp - 0x70]
0x400494:	mov	esi, 0xa
0x400499:	mov	rdi, rax
0x40049c:	call	0x500048
<Block for 0x4004a1, 17 bytes>
0x4004a1:	mov	qword ptr [rbp - 0x88], rax
0x4004a8:	cmp	qword ptr [rbp - 0x88], 0
0x4004b0:	je	0x4004c8
<Block for 0x4004b2, 12 bytes>
0x4004b2:	mov	rax, qword ptr [rbp - 0x88]
0x4004b9:	mov	byte ptr [rax], 0
0x4004bc:	jmp	0x4004c8
