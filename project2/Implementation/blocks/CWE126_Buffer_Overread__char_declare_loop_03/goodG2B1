<Block for 0x400106, 55 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	sub	rsp, 0x140
0x400115:	mov	rax, qword ptr fs:[0x28]
0x40011e:	mov	qword ptr [rbp - 8], rax
0x400122:	xor	eax, eax
0x400124:	lea	rax, [rbp - 0x120]
0x40012b:	mov	edx, 0x31
0x400130:	mov	esi, 0x41
0x400135:	mov	rdi, rax
0x400138:	call	0x500000
<Block for 0x40013d, 32 bytes>
0x40013d:	mov	byte ptr [rbp - 0xef], 0
0x400144:	lea	rax, [rbp - 0xe0]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x41
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40015d, 40 bytes>
0x40015d:	mov	byte ptr [rbp - 0x7d], 0
0x400161:	lea	rax, [rbp - 0xe0]
0x400168:	mov	qword ptr [rbp - 0x130], rax
0x40016f:	lea	rax, [rbp - 0x70]
0x400173:	mov	edx, 0x63
0x400178:	mov	esi, 0x43
0x40017d:	mov	rdi, rax
0x400180:	call	0x500000
<Block for 0x400185, 16 bytes>
0x400185:	mov	byte ptr [rbp - 0xd], 0
0x400189:	lea	rax, [rbp - 0x70]
0x40018d:	mov	rdi, rax
0x400190:	call	0x500008
<Block for 0x400195, 20 bytes>
0x400195:	mov	qword ptr [rbp - 0x128], rax
0x40019c:	mov	qword ptr [rbp - 0x138], 0
0x4001a7:	jmp	0x4001d5
<Block for 0x4001d5, 16 bytes>
0x4001d5:	mov	rax, qword ptr [rbp - 0x138]
0x4001dc:	cmp	rax, qword ptr [rbp - 0x128]
0x4001e3:	jb	0x4001a9
<Block for 0x4001a9, 60 bytes>
0x4001a9:	mov	rdx, qword ptr [rbp - 0x130]
0x4001b0:	mov	rax, qword ptr [rbp - 0x138]
0x4001b7:	add	rax, rdx
0x4001ba:	movzx	eax, byte ptr [rax]
0x4001bd:	lea	rcx, [rbp - 0x70]
0x4001c1:	mov	rdx, qword ptr [rbp - 0x138]
0x4001c8:	add	rdx, rcx
0x4001cb:	mov	byte ptr [rdx], al
0x4001cd:	add	qword ptr [rbp - 0x138], 1
0x4001d5:	mov	rax, qword ptr [rbp - 0x138]
0x4001dc:	cmp	rax, qword ptr [rbp - 0x128]
0x4001e3:	jb	0x4001a9
<Block for 0x4001e5, 16 bytes>
0x4001e5:	mov	byte ptr [rbp - 0xd], 0
0x4001e9:	lea	rax, [rbp - 0x70]
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500010
<Block for 0x4001f5, 16 bytes>
0x4001f5:	nop	
0x4001f6:	mov	rax, qword ptr [rbp - 8]
0x4001fa:	xor	rax, qword ptr fs:[0x28]
0x400203:	je	0x40020a
<Block for 0x40020a, 2 bytes>
0x40020a:	leave	
0x40020b:	ret	
<Block for 0x400205, 5 bytes>
0x400205:	call	0x500018
