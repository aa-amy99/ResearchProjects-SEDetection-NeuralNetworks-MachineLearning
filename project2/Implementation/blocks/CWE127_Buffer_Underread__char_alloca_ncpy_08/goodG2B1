<Block for 0x40015c, 81 bytes>
0x40015c:	endbr64	
0x400160:	push	rbp
0x400161:	mov	rbp, rsp
0x400164:	add	rsp, -0x80
0x400168:	mov	rax, qword ptr fs:[0x28]
0x400171:	mov	qword ptr [rbp - 8], rax
0x400175:	xor	eax, eax
0x400177:	mov	eax, 0x10
0x40017c:	sub	rax, 1
0x400180:	add	rax, 0x6c
0x400184:	mov	esi, 0x10
0x400189:	mov	edx, 0
0x40018e:	div	rsi
0x400191:	imul	rax, rax, 0x10
0x400195:	mov	rdx, rax
0x400198:	and	rdx, 0xfffffffffffff000
0x40019f:	mov	rcx, rsp
0x4001a2:	sub	rcx, rdx
0x4001a5:	mov	rdx, rcx
0x4001a8:	cmp	rsp, rdx
0x4001ab:	je	0x4001bf
<Block for 0x4001bf, 26 bytes>
0x4001bf:	mov	rdx, rax
0x4001c2:	and	edx, 0xfff
0x4001c8:	sub	rsp, rdx
0x4001cb:	mov	rdx, rax
0x4001ce:	and	edx, 0xfff
0x4001d4:	test	rdx, rdx
0x4001d7:	je	0x4001e9
<Block for 0x4001ad, 18 bytes>
0x4001ad:	sub	rsp, 0x1000
0x4001b4:	or	qword ptr [rsp + 0xff8], 0
0x4001bd:	jmp	0x4001a8
<Block for 0x4001e9, 41 bytes>
0x4001e9:	mov	rax, rsp
0x4001ec:	add	rax, 0xf
0x4001f0:	shr	rax, 4
0x4001f4:	shl	rax, 4
0x4001f8:	mov	qword ptr [rbp - 0x78], rax
0x4001fc:	mov	rax, qword ptr [rbp - 0x78]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x41
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500000
<Block for 0x4001d9, 57 bytes>
0x4001d9:	and	eax, 0xfff
0x4001de:	sub	rax, 8
0x4001e2:	add	rax, rsp
0x4001e5:	or	qword ptr [rax], 0
0x4001e9:	mov	rax, rsp
0x4001ec:	add	rax, 0xf
0x4001f0:	shr	rax, 4
0x4001f4:	shl	rax, 4
0x4001f8:	mov	qword ptr [rbp - 0x78], rax
0x4001fc:	mov	rax, qword ptr [rbp - 0x78]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x41
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500000
<Block for 0x4001a8, 5 bytes>
0x4001a8:	cmp	rsp, rdx
0x4001ab:	je	0x4001bf
<Block for 0x400212, 21 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x78]
0x400216:	add	rax, 0x63
0x40021a:	mov	byte ptr [rax], 0
0x40021d:	mov	eax, 0
0x400222:	call	0x40000f
<Block for 0x400227, 4 bytes>
0x400227:	test	eax, eax
0x400229:	je	0x400239
<Block for 0x400239, 30 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0x78]
0x40023d:	mov	qword ptr [rbp - 0x80], rax
0x400241:	lea	rax, [rbp - 0x70]
0x400245:	mov	edx, 0x63
0x40024a:	mov	esi, 0x43
0x40024f:	mov	rdi, rax
0x400252:	call	0x500000
<Block for 0x40022b, 12 bytes>
0x40022b:	lea	rdi, [rip + 0x1cb]
0x400232:	call	0x500018
<Block for 0x400257, 16 bytes>
0x400257:	mov	byte ptr [rbp - 0xd], 0
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	rdi, rax
0x400262:	call	0x500008
<Block for 0x400237, 2 bytes>
0x400237:	jmp	0x400241
<Block for 0x400267, 22 bytes>
0x400267:	mov	rdx, rax
0x40026a:	mov	rcx, qword ptr [rbp - 0x80]
0x40026e:	lea	rax, [rbp - 0x70]
0x400272:	mov	rsi, rcx
0x400275:	mov	rdi, rax
0x400278:	call	0x500010
<Block for 0x400241, 22 bytes>
0x400241:	lea	rax, [rbp - 0x70]
0x400245:	mov	edx, 0x63
0x40024a:	mov	esi, 0x43
0x40024f:	mov	rdi, rax
0x400252:	call	0x500000
<Block for 0x40027d, 16 bytes>
0x40027d:	mov	byte ptr [rbp - 0xd], 0
0x400281:	lea	rax, [rbp - 0x70]
0x400285:	mov	rdi, rax
0x400288:	call	0x500018
<Block for 0x40028d, 16 bytes>
0x40028d:	nop	
0x40028e:	mov	rax, qword ptr [rbp - 8]
0x400292:	xor	rax, qword ptr fs:[0x28]
0x40029b:	je	0x4002a2
<Block for 0x4002a2, 2 bytes>
0x4002a2:	leave	
0x4002a3:	ret	
<Block for 0x40029d, 5 bytes>
0x40029d:	call	0x500020
