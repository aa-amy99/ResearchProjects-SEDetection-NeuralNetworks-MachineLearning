<Block for 0x40006a, 24 bytes>
0x40006a:	endbr64	
0x40006e:	push	rbp
0x40006f:	mov	rbp, rsp
0x400072:	sub	rsp, 0x20
0x400076:	mov	dword ptr [rbp - 0x1c], 0
0x40007d:	jmp	0x400107
<Block for 0x400107, 10 bytes>
0x400107:	cmp	dword ptr [rbp - 0x1c], 0
0x40010b:	jle	0x400082
<Block for 0x400082, 10 bytes>
0x400082:	mov	edi, 8
0x400087:	call	0x500000
<Block for 0x400111, 4 bytes>
0x400111:	nop	
0x400112:	nop	
0x400113:	leave	
0x400114:	ret	
<Block for 0x40008c, 11 bytes>
0x40008c:	mov	qword ptr [rbp - 0x18], rax
0x400090:	cmp	qword ptr [rbp - 0x18], 0
0x400095:	jne	0x4000a1
<Block for 0x400097, 10 bytes>
0x400097:	mov	edi, 0xffffffff
0x40009c:	call	0x500008
<Block for 0x4000a1, 10 bytes>
0x4000a1:	mov	edi, 8
0x4000a6:	call	0x500000
<Block for 0x4000ab, 11 bytes>
0x4000ab:	mov	qword ptr [rbp - 0x10], rax
0x4000af:	cmp	qword ptr [rbp - 0x10], 0
0x4000b4:	jne	0x4000c0
<Block for 0x4000b6, 10 bytes>
0x4000b6:	mov	edi, 0xffffffff
0x4000bb:	call	0x500008
<Block for 0x4000c0, 55 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x10]
0x4000c4:	movsd	xmm0, qword ptr [rip + 0x64]
0x4000cc:	movsd	qword ptr [rax], xmm0
0x4000d0:	mov	rax, qword ptr [rbp - 0x18]
0x4000d4:	mov	rdx, qword ptr [rbp - 0x10]
0x4000d8:	mov	qword ptr [rax], rdx
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	mov	rax, qword ptr [rax]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	mov	rax, qword ptr [rax]
0x4000ed:	movq	xmm0, rax
0x4000f2:	call	0x500018
<Block for 0x4000f7, 12 bytes>
0x4000f7:	mov	rax, qword ptr [rbp - 0x18]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500010
<Block for 0x400103, 14 bytes>
0x400103:	add	dword ptr [rbp - 0x1c], 1
0x400107:	cmp	dword ptr [rbp - 0x1c], 0
0x40010b:	jle	0x400082
