<Block for 0x400088, 45 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x10
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	qword ptr [rbp - 0x10], 0
0x4000ab:	mov	edi, 0x64
0x4000b0:	call	0x500000
<Block for 0x4000b5, 13 bytes>
0x4000b5:	mov	qword ptr [rbp - 0x10], rax
0x4000b9:	mov	rax, qword ptr [rbp - 0x10]
0x4000bd:	test	rax, rax
0x4000c0:	jne	0x4000cc
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500008
<Block for 0x4000cc, 22 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 0x10]
0x4000d0:	mov	edx, 0x63
0x4000d5:	mov	esi, 0x41
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500010
<Block for 0x4000e2, 23 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 0x10]
0x4000e6:	add	rax, 0x63
0x4000ea:	mov	byte ptr [rax], 0
0x4000ed:	lea	rax, [rbp - 0x10]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500028
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500020
