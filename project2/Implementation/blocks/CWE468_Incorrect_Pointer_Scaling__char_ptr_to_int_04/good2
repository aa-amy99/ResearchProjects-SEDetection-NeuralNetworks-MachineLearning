<Block for 0x400110, 36 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0x30
0x40011c:	mov	rax, qword ptr fs:[0x28]
0x400125:	mov	qword ptr [rbp - 8], rax
0x400129:	xor	eax, eax
0x40012b:	mov	eax, 1
0x400130:	test	eax, eax
0x400132:	je	0x40017a
<Block for 0x40017a, 16 bytes>
0x40017a:	nop	
0x40017b:	mov	rax, qword ptr [rbp - 8]
0x40017f:	xor	rax, qword ptr fs:[0x28]
0x400188:	je	0x40018f
<Block for 0x400134, 70 bytes>
0x400134:	mov	dword ptr [rbp - 0x20], 1
0x40013b:	mov	dword ptr [rbp - 0x1c], 2
0x400142:	mov	dword ptr [rbp - 0x18], 3
0x400149:	mov	dword ptr [rbp - 0x14], 4
0x400150:	mov	dword ptr [rbp - 0x10], 5
0x400157:	lea	rax, [rbp - 0x20]
0x40015b:	mov	qword ptr [rbp - 0x28], rax
0x40015f:	mov	rax, qword ptr [rbp - 0x28]
0x400163:	add	rax, 8
0x400167:	movzx	eax, byte ptr [rax]
0x40016a:	movsx	eax, al
0x40016d:	mov	dword ptr [rbp - 0x2c], eax
0x400170:	mov	eax, dword ptr [rbp - 0x2c]
0x400173:	mov	edi, eax
0x400175:	call	0x500000
<Block for 0x40018f, 2 bytes>
0x40018f:	leave	
0x400190:	ret	
<Block for 0x40018a, 5 bytes>
0x40018a:	call	0x500008
