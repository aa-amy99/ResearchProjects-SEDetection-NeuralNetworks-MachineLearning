<Block for 0x400081, 36 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x30
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	mov	eax, 0
0x4000a1:	test	eax, eax
0x4000a3:	je	0x4000b3
<Block for 0x4000b3, 70 bytes>
0x4000b3:	mov	dword ptr [rbp - 0x20], 1
0x4000ba:	mov	dword ptr [rbp - 0x1c], 2
0x4000c1:	mov	dword ptr [rbp - 0x18], 3
0x4000c8:	mov	dword ptr [rbp - 0x14], 4
0x4000cf:	mov	dword ptr [rbp - 0x10], 5
0x4000d6:	lea	rax, [rbp - 0x20]
0x4000da:	mov	qword ptr [rbp - 0x28], rax
0x4000de:	mov	rax, qword ptr [rbp - 0x28]
0x4000e2:	add	rax, 8
0x4000e6:	movzx	eax, byte ptr [rax]
0x4000e9:	movsx	eax, al
0x4000ec:	mov	dword ptr [rbp - 0x2c], eax
0x4000ef:	mov	eax, dword ptr [rbp - 0x2c]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500000
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x10c]
0x4000ac:	call	0x500010
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x4000b1, 2 bytes>
0x4000b1:	jmp	0x4000f9
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500008
