<Block for 0x400000, 96 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x160
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x148]
0x400025:	mov	qword ptr [rbp - 0x140], rax
0x40002c:	movabs	rax, 0x3d48544150
0x400036:	mov	edx, 0
0x40003b:	mov	qword ptr [rbp - 0x110], rax
0x400042:	mov	qword ptr [rbp - 0x108], rdx
0x400049:	lea	rdx, [rbp - 0x100]
0x400050:	mov	eax, 0
0x400055:	mov	ecx, 0x1d
0x40005a:	mov	rdi, rdx
0x40005d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400060, 59 bytes>
0x400060:	mov	rdx, rdi
0x400063:	mov	word ptr [rdx], ax
0x400066:	add	rdx, 2
0x40006a:	lea	rax, [rbp - 0x110]
0x400071:	mov	qword ptr [rbp - 0x148], rax
0x400078:	mov	dword ptr [rbp - 0x150], 0xffffffff
0x400082:	mov	dword ptr [rbp - 0x154], 0xffffffff
0x40008c:	mov	rax, qword ptr [rbp - 0x148]
0x400093:	mov	rdi, rax
0x400096:	call	0x500000
<Block for 0x40005d, 3 bytes>
0x40005d:	rep stosq	qword ptr [rdi], rax
<Block for 0x40009b, 27 bytes>
0x40009b:	mov	qword ptr [rbp - 0x138], rax
0x4000a2:	mov	edx, 6
0x4000a7:	mov	esi, 1
0x4000ac:	mov	edi, 2
0x4000b1:	call	0x500008
<Block for 0x4000b6, 19 bytes>
0x4000b6:	mov	dword ptr [rbp - 0x150], eax
0x4000bc:	cmp	dword ptr [rbp - 0x150], -1
0x4000c3:	je	0x40024d
<Block for 0x40024d, 3 bytes>
0x40024d:	nop	
0x40024e:	jmp	0x400257
<Block for 0x4000c9, 25 bytes>
0x4000c9:	lea	rax, [rbp - 0x120]
0x4000d0:	mov	edx, 0x10
0x4000d5:	mov	esi, 0
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500010
<Block for 0x400257, 9 bytes>
0x400257:	cmp	dword ptr [rbp - 0x150], -1
0x40025e:	je	0x40026d
<Block for 0x4000e2, 29 bytes>
0x4000e2:	mov	word ptr [rbp - 0x120], 2
0x4000eb:	mov	dword ptr [rbp - 0x11c], 0
0x4000f5:	mov	edi, 0x6987
0x4000fa:	call	0x500018
<Block for 0x40026d, 9 bytes>
0x40026d:	cmp	dword ptr [rbp - 0x154], -1
0x400274:	je	0x400283
<Block for 0x400260, 13 bytes>
0x400260:	mov	eax, dword ptr [rbp - 0x150]
0x400266:	mov	edi, eax
0x400268:	call	0x500048
<Block for 0x4000ff, 35 bytes>
0x4000ff:	mov	word ptr [rbp - 0x11e], ax
0x400106:	lea	rcx, [rbp - 0x120]
0x40010d:	mov	eax, dword ptr [rbp - 0x150]
0x400113:	mov	edx, 0x10
0x400118:	mov	rsi, rcx
0x40011b:	mov	edi, eax
0x40011d:	call	0x500020
<Block for 0x400283, 32 bytes>
0x400283:	mov	rax, qword ptr [rbp - 0x140]
0x40028a:	mov	rax, qword ptr [rax]
0x40028d:	mov	qword ptr [rbp - 0x128], rax
0x400294:	mov	rax, qword ptr [rbp - 0x128]
0x40029b:	mov	rdi, rax
0x40029e:	call	0x500050
<Block for 0x400276, 13 bytes>
0x400276:	mov	eax, dword ptr [rbp - 0x154]
0x40027c:	mov	edi, eax
0x40027e:	call	0x500048
<Block for 0x400122, 14 bytes>
0x400122:	cmp	eax, -1
0x400125:	sete	al
0x400128:	test	al, al
0x40012a:	jne	0x400250
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002c6
<Block for 0x400130, 18 bytes>
0x400130:	mov	eax, dword ptr [rbp - 0x150]
0x400136:	mov	esi, 5
0x40013b:	mov	edi, eax
0x40013d:	call	0x500028
<Block for 0x400250, 3 bytes>
0x400250:	nop	
0x400251:	jmp	0x400257
<Block for 0x4002c6, 2 bytes>
0x4002c6:	leave	
0x4002c7:	ret	
<Block for 0x4002b3, 2 bytes>
0x4002b3:	jmp	0x4002c1
<Block for 0x400142, 14 bytes>
0x400142:	cmp	eax, -1
0x400145:	sete	al
0x400148:	test	al, al
0x40014a:	jne	0x400253
<Block for 0x4002c1, 5 bytes>
0x4002c1:	call	0x500060
<Block for 0x400150, 23 bytes>
0x400150:	mov	eax, dword ptr [rbp - 0x150]
0x400156:	mov	edx, 0
0x40015b:	mov	esi, 0
0x400160:	mov	edi, eax
0x400162:	call	0x500030
<Block for 0x400253, 3 bytes>
0x400253:	nop	
0x400254:	jmp	0x400257
<Block for 0x400167, 19 bytes>
0x400167:	mov	dword ptr [rbp - 0x154], eax
0x40016d:	cmp	dword ptr [rbp - 0x154], -1
0x400174:	je	0x400256
<Block for 0x40017a, 51 bytes>
0x40017a:	mov	eax, 0xf9
0x40017f:	sub	rax, qword ptr [rbp - 0x138]
0x400186:	mov	rdx, rax
0x400189:	mov	rcx, qword ptr [rbp - 0x148]
0x400190:	mov	rax, qword ptr [rbp - 0x138]
0x400197:	lea	rsi, [rcx + rax]
0x40019b:	mov	eax, dword ptr [rbp - 0x154]
0x4001a1:	mov	ecx, 0
0x4001a6:	mov	edi, eax
0x4001a8:	call	0x500038
<Block for 0x400256, 1 bytes>
0x400256:	nop	
<Block for 0x4001ad, 19 bytes>
0x4001ad:	mov	dword ptr [rbp - 0x14c], eax
0x4001b3:	cmp	dword ptr [rbp - 0x14c], -1
0x4001ba:	je	0x400257
<Block for 0x4001c0, 13 bytes>
0x4001c0:	cmp	dword ptr [rbp - 0x14c], 0
0x4001c7:	je	0x400257
<Block for 0x4001cd, 52 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x148]
0x4001d4:	mov	edx, dword ptr [rbp - 0x14c]
0x4001da:	movsxd	rcx, edx
0x4001dd:	mov	rdx, qword ptr [rbp - 0x138]
0x4001e4:	add	rdx, rcx
0x4001e7:	add	rax, rdx
0x4001ea:	mov	byte ptr [rax], 0
0x4001ed:	mov	rax, qword ptr [rbp - 0x148]
0x4001f4:	mov	esi, 0xd
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500040
<Block for 0x400201, 17 bytes>
0x400201:	mov	qword ptr [rbp - 0x130], rax
0x400208:	cmp	qword ptr [rbp - 0x130], 0
0x400210:	je	0x40021c
<Block for 0x40021c, 20 bytes>
0x40021c:	mov	rax, qword ptr [rbp - 0x148]
0x400223:	mov	esi, 0xa
0x400228:	mov	rdi, rax
0x40022b:	call	0x500040
<Block for 0x400212, 30 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x130]
0x400219:	mov	byte ptr [rax], 0
0x40021c:	mov	rax, qword ptr [rbp - 0x148]
0x400223:	mov	esi, 0xa
0x400228:	mov	rdi, rax
0x40022b:	call	0x500040
<Block for 0x400230, 17 bytes>
0x400230:	mov	qword ptr [rbp - 0x130], rax
0x400237:	cmp	qword ptr [rbp - 0x130], 0
0x40023f:	je	0x400257
<Block for 0x400241, 12 bytes>
0x400241:	mov	rax, qword ptr [rbp - 0x130]
0x400248:	mov	byte ptr [rax], 0
0x40024b:	jmp	0x400257
