<Block for 0x400132, 81 bytes>
0x400132:	endbr64	
0x400136:	push	rbp
0x400137:	mov	rbp, rsp
0x40013a:	add	rsp, -0x80
0x40013e:	mov	rax, qword ptr fs:[0x28]
0x400147:	mov	qword ptr [rbp - 8], rax
0x40014b:	xor	eax, eax
0x40014d:	mov	eax, 0x10
0x400152:	sub	rax, 1
0x400156:	add	rax, 0x6c
0x40015a:	mov	esi, 0x10
0x40015f:	mov	edx, 0
0x400164:	div	rsi
0x400167:	imul	rax, rax, 0x10
0x40016b:	mov	rdx, rax
0x40016e:	and	rdx, 0xfffffffffffff000
0x400175:	mov	rcx, rsp
0x400178:	sub	rcx, rdx
0x40017b:	mov	rdx, rcx
0x40017e:	cmp	rsp, rdx
0x400181:	je	0x400195
<Block for 0x400195, 26 bytes>
0x400195:	mov	rdx, rax
0x400198:	and	edx, 0xfff
0x40019e:	sub	rsp, rdx
0x4001a1:	mov	rdx, rax
0x4001a4:	and	edx, 0xfff
0x4001aa:	test	rdx, rdx
0x4001ad:	je	0x4001bf
<Block for 0x400183, 18 bytes>
0x400183:	sub	rsp, 0x1000
0x40018a:	or	qword ptr [rsp + 0xff8], 0
0x400193:	jmp	0x40017e
<Block for 0x4001bf, 41 bytes>
0x4001bf:	mov	rax, rsp
0x4001c2:	add	rax, 0xf
0x4001c6:	shr	rax, 4
0x4001ca:	shl	rax, 4
0x4001ce:	mov	qword ptr [rbp - 0x80], rax
0x4001d2:	mov	rax, qword ptr [rbp - 0x80]
0x4001d6:	mov	edx, 0x63
0x4001db:	mov	esi, 0x41
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500000
<Block for 0x4001af, 57 bytes>
0x4001af:	and	eax, 0xfff
0x4001b4:	sub	rax, 8
0x4001b8:	add	rax, rsp
0x4001bb:	or	qword ptr [rax], 0
0x4001bf:	mov	rax, rsp
0x4001c2:	add	rax, 0xf
0x4001c6:	shr	rax, 4
0x4001ca:	shl	rax, 4
0x4001ce:	mov	qword ptr [rbp - 0x80], rax
0x4001d2:	mov	rax, qword ptr [rbp - 0x80]
0x4001d6:	mov	edx, 0x63
0x4001db:	mov	esi, 0x41
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500000
<Block for 0x40017e, 5 bytes>
0x40017e:	cmp	rsp, rdx
0x400181:	je	0x400195
<Block for 0x4001e8, 46 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 0x80]
0x4001ec:	add	rax, 0x63
0x4001f0:	mov	byte ptr [rax], 0
0x4001f3:	nop	
0x4001f4:	endbr64	
0x4001f8:	mov	rax, qword ptr [rbp - 0x80]
0x4001fc:	mov	qword ptr [rbp - 0x78], rax
0x400200:	lea	rax, [rbp - 0x70]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x43
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x400216, 28 bytes>
0x400216:	mov	byte ptr [rbp - 0xd], 0
0x40021a:	lea	rcx, [rbp - 0x70]
0x40021e:	mov	rax, qword ptr [rbp - 0x78]
0x400222:	mov	edx, 0x63
0x400227:	mov	rsi, rcx
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500008
<Block for 0x400232, 23 bytes>
0x400232:	mov	rax, qword ptr [rbp - 0x78]
0x400236:	add	rax, 0x63
0x40023a:	mov	byte ptr [rax], 0
0x40023d:	mov	rax, qword ptr [rbp - 0x78]
0x400241:	mov	rdi, rax
0x400244:	call	0x500010
<Block for 0x400249, 16 bytes>
0x400249:	nop	
0x40024a:	mov	rax, qword ptr [rbp - 8]
0x40024e:	xor	rax, qword ptr fs:[0x28]
0x400257:	je	0x40025e
<Block for 0x40025e, 2 bytes>
0x40025e:	leave	
0x40025f:	ret	
<Block for 0x400259, 5 bytes>
0x400259:	call	0x500018
