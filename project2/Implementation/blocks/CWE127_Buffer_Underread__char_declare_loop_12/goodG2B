<Block for 0x4000ef, 55 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0xf0
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	xor	eax, eax
0x40010d:	lea	rax, [rbp - 0xe0]
0x400114:	mov	edx, 0x63
0x400119:	mov	esi, 0x41
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x400126, 14 bytes>
0x400126:	mov	byte ptr [rbp - 0x7d], 0
0x40012a:	mov	eax, 0
0x40012f:	call	0x500008
<Block for 0x400134, 4 bytes>
0x400134:	test	eax, eax
0x400136:	je	0x400148
<Block for 0x400148, 36 bytes>
0x400148:	lea	rax, [rbp - 0xe0]
0x40014f:	mov	qword ptr [rbp - 0xf0], rax
0x400156:	lea	rax, [rbp - 0x70]
0x40015a:	mov	edx, 0x63
0x40015f:	mov	esi, 0x43
0x400164:	mov	rdi, rax
0x400167:	call	0x500000
<Block for 0x400138, 16 bytes>
0x400138:	lea	rax, [rbp - 0xe0]
0x40013f:	mov	qword ptr [rbp - 0xf0], rax
0x400146:	jmp	0x400156
<Block for 0x40016c, 17 bytes>
0x40016c:	mov	byte ptr [rbp - 0xd], 0
0x400170:	mov	qword ptr [rbp - 0xe8], 0
0x40017b:	jmp	0x4001a9
<Block for 0x400156, 22 bytes>
0x400156:	lea	rax, [rbp - 0x70]
0x40015a:	mov	edx, 0x63
0x40015f:	mov	esi, 0x43
0x400164:	mov	rdi, rax
0x400167:	call	0x500000
<Block for 0x4001a9, 10 bytes>
0x4001a9:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001b1:	jbe	0x40017d
<Block for 0x40017d, 54 bytes>
0x40017d:	mov	rdx, qword ptr [rbp - 0xf0]
0x400184:	mov	rax, qword ptr [rbp - 0xe8]
0x40018b:	add	rax, rdx
0x40018e:	movzx	eax, byte ptr [rax]
0x400191:	lea	rcx, [rbp - 0x70]
0x400195:	mov	rdx, qword ptr [rbp - 0xe8]
0x40019c:	add	rdx, rcx
0x40019f:	mov	byte ptr [rdx], al
0x4001a1:	add	qword ptr [rbp - 0xe8], 1
0x4001a9:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001b1:	jbe	0x40017d
<Block for 0x4001b3, 16 bytes>
0x4001b3:	mov	byte ptr [rbp - 0xd], 0
0x4001b7:	lea	rax, [rbp - 0x70]
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500010
<Block for 0x4001c3, 16 bytes>
0x4001c3:	nop	
0x4001c4:	mov	rax, qword ptr [rbp - 8]
0x4001c8:	xor	rax, qword ptr fs:[0x28]
0x4001d1:	je	0x4001d8
<Block for 0x4001d8, 2 bytes>
0x4001d8:	leave	
0x4001d9:	ret	
<Block for 0x4001d3, 5 bytes>
0x4001d3:	call	0x500018
