<Block for 0x4000da, 55 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0xf0
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	lea	rax, [rbp - 0xe0]
0x4000ff:	mov	edx, 0x63
0x400104:	mov	esi, 0x41
0x400109:	mov	rdi, rax
0x40010c:	call	0x500000
<Block for 0x400111, 13 bytes>
0x400111:	mov	byte ptr [rbp - 0x7d], 0
0x400115:	mov	eax, 0
0x40011a:	test	eax, eax
0x40011c:	je	0x40012c
<Block for 0x40012c, 36 bytes>
0x40012c:	lea	rax, [rbp - 0xe0]
0x400133:	mov	qword ptr [rbp - 0xf0], rax
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rdi, [rip + 0x197]
0x400125:	call	0x500008
<Block for 0x400150, 17 bytes>
0x400150:	mov	byte ptr [rbp - 0xd], 0
0x400154:	mov	qword ptr [rbp - 0xe8], 0
0x40015f:	jmp	0x40018d
<Block for 0x40012a, 2 bytes>
0x40012a:	jmp	0x40013a
<Block for 0x40018d, 10 bytes>
0x40018d:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400195:	jbe	0x400161
<Block for 0x40013a, 22 bytes>
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500000
<Block for 0x400161, 54 bytes>
0x400161:	mov	rdx, qword ptr [rbp - 0xf0]
0x400168:	mov	rax, qword ptr [rbp - 0xe8]
0x40016f:	add	rax, rdx
0x400172:	movzx	eax, byte ptr [rax]
0x400175:	lea	rcx, [rbp - 0x70]
0x400179:	mov	rdx, qword ptr [rbp - 0xe8]
0x400180:	add	rdx, rcx
0x400183:	mov	byte ptr [rdx], al
0x400185:	add	qword ptr [rbp - 0xe8], 1
0x40018d:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400195:	jbe	0x400161
<Block for 0x400197, 16 bytes>
0x400197:	mov	byte ptr [rbp - 0xd], 0
0x40019b:	lea	rax, [rbp - 0x70]
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500008
<Block for 0x4001a7, 16 bytes>
0x4001a7:	nop	
0x4001a8:	mov	rax, qword ptr [rbp - 8]
0x4001ac:	xor	rax, qword ptr fs:[0x28]
0x4001b5:	je	0x4001bc
<Block for 0x4001bc, 2 bytes>
0x4001bc:	leave	
0x4001bd:	ret	
<Block for 0x4001b7, 5 bytes>
0x4001b7:	call	0x500010
