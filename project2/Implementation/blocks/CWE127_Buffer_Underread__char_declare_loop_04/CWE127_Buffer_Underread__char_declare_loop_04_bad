<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 13 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	mov	eax, 1
0x400040:	test	eax, eax
0x400042:	je	0x400056
<Block for 0x400056, 22 bytes>
0x400056:	lea	rax, [rbp - 0x70]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x43
0x400064:	mov	rdi, rax
0x400067:	call	0x500000
<Block for 0x400044, 40 bytes>
0x400044:	lea	rax, [rbp - 0xe0]
0x40004b:	sub	rax, 8
0x40004f:	mov	qword ptr [rbp - 0xf0], rax
0x400056:	lea	rax, [rbp - 0x70]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x43
0x400064:	mov	rdi, rax
0x400067:	call	0x500000
<Block for 0x40006c, 17 bytes>
0x40006c:	mov	byte ptr [rbp - 0xd], 0
0x400070:	mov	qword ptr [rbp - 0xe8], 0
0x40007b:	jmp	0x4000a9
<Block for 0x4000a9, 10 bytes>
0x4000a9:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4000b1:	jbe	0x40007d
<Block for 0x40007d, 54 bytes>
0x40007d:	mov	rdx, qword ptr [rbp - 0xf0]
0x400084:	mov	rax, qword ptr [rbp - 0xe8]
0x40008b:	add	rax, rdx
0x40008e:	movzx	eax, byte ptr [rax]
0x400091:	lea	rcx, [rbp - 0x70]
0x400095:	mov	rdx, qword ptr [rbp - 0xe8]
0x40009c:	add	rdx, rcx
0x40009f:	mov	byte ptr [rdx], al
0x4000a1:	add	qword ptr [rbp - 0xe8], 1
0x4000a9:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4000b1:	jbe	0x40007d
<Block for 0x4000b3, 16 bytes>
0x4000b3:	mov	byte ptr [rbp - 0xd], 0
0x4000b7:	lea	rax, [rbp - 0x70]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500008
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500010
