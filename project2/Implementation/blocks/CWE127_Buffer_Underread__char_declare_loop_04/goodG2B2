<Block for 0x4001be, 55 bytes>
0x4001be:	endbr64	
0x4001c2:	push	rbp
0x4001c3:	mov	rbp, rsp
0x4001c6:	sub	rsp, 0xf0
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 8], rax
0x4001da:	xor	eax, eax
0x4001dc:	lea	rax, [rbp - 0xe0]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500000
<Block for 0x4001f5, 13 bytes>
0x4001f5:	mov	byte ptr [rbp - 0x7d], 0
0x4001f9:	mov	eax, 1
0x4001fe:	test	eax, eax
0x400200:	je	0x400210
<Block for 0x400210, 22 bytes>
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x400202, 36 bytes>
0x400202:	lea	rax, [rbp - 0xe0]
0x400209:	mov	qword ptr [rbp - 0xf0], rax
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x400226, 17 bytes>
0x400226:	mov	byte ptr [rbp - 0xd], 0
0x40022a:	mov	qword ptr [rbp - 0xe8], 0
0x400235:	jmp	0x400263
<Block for 0x400263, 10 bytes>
0x400263:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40026b:	jbe	0x400237
<Block for 0x400237, 54 bytes>
0x400237:	mov	rdx, qword ptr [rbp - 0xf0]
0x40023e:	mov	rax, qword ptr [rbp - 0xe8]
0x400245:	add	rax, rdx
0x400248:	movzx	eax, byte ptr [rax]
0x40024b:	lea	rcx, [rbp - 0x70]
0x40024f:	mov	rdx, qword ptr [rbp - 0xe8]
0x400256:	add	rdx, rcx
0x400259:	mov	byte ptr [rdx], al
0x40025b:	add	qword ptr [rbp - 0xe8], 1
0x400263:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40026b:	jbe	0x400237
<Block for 0x40026d, 16 bytes>
0x40026d:	mov	byte ptr [rbp - 0xd], 0
0x400271:	lea	rax, [rbp - 0x70]
0x400275:	mov	rdi, rax
0x400278:	call	0x500008
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500010
