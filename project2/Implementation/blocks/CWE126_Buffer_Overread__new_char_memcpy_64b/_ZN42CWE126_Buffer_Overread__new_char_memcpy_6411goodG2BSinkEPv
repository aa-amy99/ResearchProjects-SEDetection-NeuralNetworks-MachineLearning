<Block for 0x4000b1, 81 bytes>
0x4000b1:	endbr64	
0x4000b5:	push	rbp
0x4000b6:	mov	rbp, rsp
0x4000b9:	sub	rsp, 0x90
0x4000c0:	mov	qword ptr [rbp - 0x88], rdi
0x4000c7:	mov	rax, qword ptr fs:[0x28]
0x4000d0:	mov	qword ptr [rbp - 8], rax
0x4000d4:	xor	eax, eax
0x4000d6:	mov	rax, qword ptr [rbp - 0x88]
0x4000dd:	mov	qword ptr [rbp - 0x80], rax
0x4000e1:	mov	rax, qword ptr [rbp - 0x80]
0x4000e5:	mov	rax, qword ptr [rax]
0x4000e8:	mov	qword ptr [rbp - 0x78], rax
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	mov	edx, 0x63
0x4000f5:	mov	esi, 0x43
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500000
<Block for 0x400102, 16 bytes>
0x400102:	mov	byte ptr [rbp - 0xd], 0
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500008
<Block for 0x400112, 22 bytes>
0x400112:	mov	rdx, rax
0x400115:	mov	rcx, qword ptr [rbp - 0x78]
0x400119:	lea	rax, [rbp - 0x70]
0x40011d:	mov	rsi, rcx
0x400120:	mov	rdi, rax
0x400123:	call	0x500010
<Block for 0x400128, 16 bytes>
0x400128:	mov	byte ptr [rbp - 0xd], 0
0x40012c:	lea	rax, [rbp - 0x70]
0x400130:	mov	rdi, rax
0x400133:	call	0x500018
<Block for 0x400138, 7 bytes>
0x400138:	cmp	qword ptr [rbp - 0x78], 0
0x40013d:	je	0x40014b
<Block for 0x40014b, 16 bytes>
0x40014b:	nop	
0x40014c:	mov	rax, qword ptr [rbp - 8]
0x400150:	xor	rax, qword ptr fs:[0x28]
0x400159:	je	0x400160
<Block for 0x40013f, 12 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x78]
0x400143:	mov	rdi, rax
0x400146:	call	0x500020
<Block for 0x400160, 2 bytes>
0x400160:	leave	
0x400161:	ret	
<Block for 0x40015b, 5 bytes>
0x40015b:	call	0x500028
