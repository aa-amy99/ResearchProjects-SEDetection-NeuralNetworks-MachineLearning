<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x40004f
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	eax, 0
0x400054:	call	0x500000
<Block for 0x400030, 31 bytes>
0x400030:	mov	rax, qword ptr [rip + 0xfffd1]
0x400037:	lea	rdx, [rbp - 0x34]
0x40003b:	lea	rsi, [rip + 0x3b6]
0x400042:	mov	rdi, rax
0x400045:	mov	eax, 0
0x40004a:	call	0x500010
<Block for 0x400059, 4 bytes>
0x400059:	test	eax, eax
0x40005b:	je	0x4000aa
<Block for 0x4000aa, 16 bytes>
0x4000aa:	nop	
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	xor	rax, qword ptr fs:[0x28]
0x4000b8:	je	0x4000bf
<Block for 0x40005d, 47 bytes>
0x40005d:	mov	qword ptr [rbp - 0x30], 0
0x400065:	mov	qword ptr [rbp - 0x28], 0
0x40006d:	mov	qword ptr [rbp - 0x20], 0
0x400075:	mov	qword ptr [rbp - 0x18], 0
0x40007d:	mov	qword ptr [rbp - 0x10], 0
0x400085:	mov	eax, dword ptr [rbp - 0x34]
0x400088:	test	eax, eax
0x40008a:	js	0x40009e
<Block for 0x4000bf, 2 bytes>
0x4000bf:	leave	
0x4000c0:	ret	
<Block for 0x4000ba, 5 bytes>
0x4000ba:	call	0x500028
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0x35b]
0x4000a5:	call	0x500020
<Block for 0x40008c, 16 bytes>
0x40008c:	mov	eax, dword ptr [rbp - 0x34]
0x40008f:	cdqe	
0x400091:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400095:	mov	edi, eax
0x400097:	call	0x500018
<Block for 0x40009c, 2 bytes>
0x40009c:	jmp	0x4000aa
