<Block for 0x400315, 157 bytes>
0x400315:	endbr64	
0x400319:	push	rbp
0x40031a:	mov	rbp, rsp
0x40031d:	sub	rsp, 0xb0
0x400324:	mov	rax, qword ptr fs:[0x28]
0x40032d:	mov	qword ptr [rbp - 8], rax
0x400331:	xor	eax, eax
0x400333:	mov	qword ptr [rbp - 0x70], 0
0x40033b:	mov	qword ptr [rbp - 0x68], 0
0x400343:	mov	qword ptr [rbp - 0x60], 0
0x40034b:	mov	qword ptr [rbp - 0x58], 0
0x400353:	mov	qword ptr [rbp - 0x50], 0
0x40035b:	mov	qword ptr [rbp - 0x48], 0
0x400363:	mov	qword ptr [rbp - 0x40], 0
0x40036b:	mov	qword ptr [rbp - 0x38], 0
0x400373:	mov	qword ptr [rbp - 0x30], 0
0x40037b:	mov	qword ptr [rbp - 0x28], 0
0x400383:	mov	qword ptr [rbp - 0x20], 0
0x40038b:	mov	qword ptr [rbp - 0x18], 0
0x400393:	mov	dword ptr [rbp - 0x10], 0
0x40039a:	lea	rax, [rbp - 0x70]
0x40039e:	mov	qword ptr [rbp - 0x98], rax
0x4003a5:	mov	eax, 1
0x4003aa:	test	eax, eax
0x4003ac:	je	0x4005a4
<Block for 0x4005a4, 9 bytes>
0x4005a4:	mov	eax, 0
0x4005a9:	test	eax, eax
0x4005ab:	je	0x4005bb
<Block for 0x4003b2, 35 bytes>
0x4003b2:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4003bc:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x4003c6:	mov	rax, qword ptr [rbp - 0x98]
0x4003cd:	mov	rdi, rax
0x4003d0:	call	0x500000
<Block for 0x4005bb, 34 bytes>
0x4005bb:	lea	rdx, [rbp - 0xb0]
0x4005c2:	mov	rax, qword ptr [rbp - 0x98]
0x4005c9:	lea	rsi, [rip + 0x608]
0x4005d0:	mov	rdi, rax
0x4005d3:	mov	eax, 0
0x4005d8:	call	0x500050
<Block for 0x4005ad, 12 bytes>
0x4005ad:	lea	rdi, [rip + 0x627]
0x4005b4:	call	0x500068
<Block for 0x4003d5, 27 bytes>
0x4003d5:	mov	qword ptr [rbp - 0x90], rax
0x4003dc:	mov	edx, 6
0x4003e1:	mov	esi, 1
0x4003e6:	mov	edi, 2
0x4003eb:	call	0x500008
<Block for 0x4005dd, 5 bytes>
0x4005dd:	cmp	eax, 1
0x4005e0:	jne	0x40062e
<Block for 0x4005b9, 2 bytes>
0x4005b9:	jmp	0x40062e
<Block for 0x4003f0, 19 bytes>
0x4003f0:	mov	dword ptr [rbp - 0xa0], eax
0x4003f6:	cmp	dword ptr [rbp - 0xa0], -1
0x4003fd:	je	0x40056e
<Block for 0x4005e2, 13 bytes>
0x4005e2:	mov	eax, dword ptr [rbp - 0xb0]
0x4005e8:	cmp	eax, 0x270f
0x4005ed:	jg	0x40062e
<Block for 0x40062e, 16 bytes>
0x40062e:	nop	
0x40062f:	mov	rax, qword ptr [rbp - 8]
0x400633:	xor	rax, qword ptr fs:[0x28]
0x40063c:	je	0x400643
<Block for 0x40056e, 3 bytes>
0x40056e:	nop	
0x40056f:	jmp	0x400578
<Block for 0x400403, 22 bytes>
0x400403:	lea	rax, [rbp - 0x80]
0x400407:	mov	edx, 0x10
0x40040c:	mov	esi, 0
0x400411:	mov	rdi, rax
0x400414:	call	0x500010
<Block for 0x4005ef, 22 bytes>
0x4005ef:	mov	dword ptr [rbp - 0xa4], 0
0x4005f9:	mov	dword ptr [rbp - 0xa8], 0
0x400603:	jmp	0x400613
<Block for 0x400643, 2 bytes>
0x400643:	leave	
0x400644:	ret	
<Block for 0x40063e, 5 bytes>
0x40063e:	call	0x500060
<Block for 0x400578, 9 bytes>
0x400578:	cmp	dword ptr [rbp - 0xa0], -1
0x40057f:	je	0x40058e
<Block for 0x400419, 23 bytes>
0x400419:	mov	word ptr [rbp - 0x80], 2
0x40041f:	mov	dword ptr [rbp - 0x7c], 0
0x400426:	mov	edi, 0x6987
0x40042b:	call	0x500018
<Block for 0x400613, 14 bytes>
0x400613:	mov	eax, dword ptr [rbp - 0xb0]
0x400619:	cmp	dword ptr [rbp - 0xa8], eax
0x40061f:	jl	0x400605
<Block for 0x40058e, 9 bytes>
0x40058e:	cmp	dword ptr [rbp - 0xac], -1
0x400595:	je	0x4005a4
<Block for 0x400581, 13 bytes>
0x400581:	mov	eax, dword ptr [rbp - 0xa0]
0x400587:	mov	edi, eax
0x400589:	call	0x500048
<Block for 0x400430, 29 bytes>
0x400430:	mov	word ptr [rbp - 0x7e], ax
0x400434:	lea	rcx, [rbp - 0x80]
0x400438:	mov	eax, dword ptr [rbp - 0xa0]
0x40043e:	mov	edx, 0x10
0x400443:	mov	rsi, rcx
0x400446:	mov	edi, eax
0x400448:	call	0x500020
<Block for 0x400605, 28 bytes>
0x400605:	add	dword ptr [rbp - 0xa4], 1
0x40060c:	add	dword ptr [rbp - 0xa8], 1
0x400613:	mov	eax, dword ptr [rbp - 0xb0]
0x400619:	cmp	dword ptr [rbp - 0xa8], eax
0x40061f:	jl	0x400605
<Block for 0x400621, 13 bytes>
0x400621:	mov	eax, dword ptr [rbp - 0xa4]
0x400627:	mov	edi, eax
0x400629:	call	0x500058
<Block for 0x400597, 13 bytes>
0x400597:	mov	eax, dword ptr [rbp - 0xac]
0x40059d:	mov	edi, eax
0x40059f:	call	0x500048
<Block for 0x40044d, 9 bytes>
0x40044d:	cmp	eax, -1
0x400450:	je	0x400571
<Block for 0x400571, 3 bytes>
0x400571:	nop	
0x400572:	jmp	0x400578
<Block for 0x400456, 18 bytes>
0x400456:	mov	eax, dword ptr [rbp - 0xa0]
0x40045c:	mov	esi, 5
0x400461:	mov	edi, eax
0x400463:	call	0x500028
<Block for 0x400468, 9 bytes>
0x400468:	cmp	eax, -1
0x40046b:	je	0x400574
<Block for 0x400574, 3 bytes>
0x400574:	nop	
0x400575:	jmp	0x400578
<Block for 0x400471, 23 bytes>
0x400471:	mov	eax, dword ptr [rbp - 0xa0]
0x400477:	mov	edx, 0
0x40047c:	mov	esi, 0
0x400481:	mov	edi, eax
0x400483:	call	0x500030
<Block for 0x400488, 19 bytes>
0x400488:	mov	dword ptr [rbp - 0xac], eax
0x40048e:	cmp	dword ptr [rbp - 0xac], -1
0x400495:	je	0x400577
<Block for 0x40049b, 51 bytes>
0x40049b:	mov	eax, 0x63
0x4004a0:	sub	rax, qword ptr [rbp - 0x90]
0x4004a7:	mov	rdx, rax
0x4004aa:	mov	rcx, qword ptr [rbp - 0x98]
0x4004b1:	mov	rax, qword ptr [rbp - 0x90]
0x4004b8:	lea	rsi, [rcx + rax]
0x4004bc:	mov	eax, dword ptr [rbp - 0xac]
0x4004c2:	mov	ecx, 0
0x4004c7:	mov	edi, eax
0x4004c9:	call	0x500038
<Block for 0x400577, 1 bytes>
0x400577:	nop	
<Block for 0x4004ce, 19 bytes>
0x4004ce:	mov	dword ptr [rbp - 0x9c], eax
0x4004d4:	cmp	dword ptr [rbp - 0x9c], -1
0x4004db:	je	0x400578
<Block for 0x4004e1, 13 bytes>
0x4004e1:	cmp	dword ptr [rbp - 0x9c], 0
0x4004e8:	je	0x400578
<Block for 0x4004ee, 52 bytes>
0x4004ee:	mov	eax, dword ptr [rbp - 0x9c]
0x4004f4:	movsxd	rdx, eax
0x4004f7:	mov	rax, qword ptr [rbp - 0x90]
0x4004fe:	add	rdx, rax
0x400501:	mov	rax, qword ptr [rbp - 0x98]
0x400508:	add	rax, rdx
0x40050b:	mov	byte ptr [rax], 0
0x40050e:	mov	rax, qword ptr [rbp - 0x98]
0x400515:	mov	esi, 0xd
0x40051a:	mov	rdi, rax
0x40051d:	call	0x500040
<Block for 0x400522, 17 bytes>
0x400522:	mov	qword ptr [rbp - 0x88], rax
0x400529:	cmp	qword ptr [rbp - 0x88], 0
0x400531:	je	0x40053d
<Block for 0x40053d, 20 bytes>
0x40053d:	mov	rax, qword ptr [rbp - 0x98]
0x400544:	mov	esi, 0xa
0x400549:	mov	rdi, rax
0x40054c:	call	0x500040
<Block for 0x400533, 30 bytes>
0x400533:	mov	rax, qword ptr [rbp - 0x88]
0x40053a:	mov	byte ptr [rax], 0
0x40053d:	mov	rax, qword ptr [rbp - 0x98]
0x400544:	mov	esi, 0xa
0x400549:	mov	rdi, rax
0x40054c:	call	0x500040
<Block for 0x400551, 17 bytes>
0x400551:	mov	qword ptr [rbp - 0x88], rax
0x400558:	cmp	qword ptr [rbp - 0x88], 0
0x400560:	je	0x400578
<Block for 0x400562, 12 bytes>
0x400562:	mov	rax, qword ptr [rbp - 0x88]
0x400569:	mov	byte ptr [rax], 0
0x40056c:	jmp	0x400578
