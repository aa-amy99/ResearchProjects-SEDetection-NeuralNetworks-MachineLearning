<Block for 0x400172, 65 bytes>
0x400172:	endbr64	
0x400176:	push	rbp
0x400177:	mov	rbp, rsp
0x40017a:	sub	rsp, 0x40
0x40017e:	mov	rax, qword ptr fs:[0x28]
0x400187:	mov	qword ptr [rbp - 8], rax
0x40018b:	xor	eax, eax
0x40018d:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400194:	mov	rax, qword ptr [rip + 0xffe65]
0x40019b:	lea	rdx, [rbp - 0x38]
0x40019f:	lea	rsi, [rip + 0xba]
0x4001a6:	mov	rdi, rax
0x4001a9:	mov	eax, 0
0x4001ae:	call	0x500008
<Block for 0x4001b3, 47 bytes>
0x4001b3:	mov	qword ptr [rbp - 0x30], 0
0x4001bb:	mov	qword ptr [rbp - 0x28], 0
0x4001c3:	mov	qword ptr [rbp - 0x20], 0
0x4001cb:	mov	qword ptr [rbp - 0x18], 0
0x4001d3:	mov	qword ptr [rbp - 0x10], 0
0x4001db:	mov	eax, dword ptr [rbp - 0x38]
0x4001de:	test	eax, eax
0x4001e0:	js	0x40021c
<Block for 0x40021c, 12 bytes>
0x40021c:	lea	rdi, [rip + 0x65]
0x400223:	call	0x500018
<Block for 0x4001e2, 8 bytes>
0x4001e2:	mov	eax, dword ptr [rbp - 0x38]
0x4001e5:	cmp	eax, 9
0x4001e8:	jg	0x40021c
<Block for 0x400228, 16 bytes>
0x400228:	nop	
0x400229:	mov	rax, qword ptr [rbp - 8]
0x40022d:	xor	rax, qword ptr fs:[0x28]
0x400236:	je	0x40023d
<Block for 0x4001ea, 22 bytes>
0x4001ea:	mov	eax, dword ptr [rbp - 0x38]
0x4001ed:	cdqe	
0x4001ef:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4001f7:	mov	dword ptr [rbp - 0x34], 0
0x4001fe:	jmp	0x400214
<Block for 0x40023d, 2 bytes>
0x40023d:	leave	
0x40023e:	ret	
<Block for 0x400238, 5 bytes>
0x400238:	call	0x500020
<Block for 0x400214, 6 bytes>
0x400214:	cmp	dword ptr [rbp - 0x34], 9
0x400218:	jle	0x400200
<Block for 0x400200, 16 bytes>
0x400200:	mov	eax, dword ptr [rbp - 0x34]
0x400203:	cdqe	
0x400205:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400209:	mov	edi, eax
0x40020b:	call	0x500010
<Block for 0x40021a, 2 bytes>
0x40021a:	jmp	0x400228
<Block for 0x400210, 10 bytes>
0x400210:	add	dword ptr [rbp - 0x34], 1
0x400214:	cmp	dword ptr [rbp - 0x34], 9
0x400218:	jle	0x400200
