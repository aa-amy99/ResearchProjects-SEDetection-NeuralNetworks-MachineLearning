<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000a8
<Block for 0x4000a8, 30 bytes>
0x4000a8:	movabs	rax, 0x5858585858586e66
0x4000b2:	mov	qword ptr [rbp - 0x11], rax
0x4000b6:	mov	byte ptr [rbp - 9], 0
0x4000ba:	lea	rax, [rbp - 0x11]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500008
<Block for 0x400029, 30 bytes>
0x400029:	movabs	rax, 0x5858585858586e66
0x400033:	mov	qword ptr [rbp - 0x11], rax
0x400037:	mov	byte ptr [rbp - 9], 0
0x40003b:	lea	rax, [rbp - 0x11]
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x4000c6, 11 bytes>
0x4000c6:	mov	qword ptr [rbp - 0x28], rax
0x4000ca:	cmp	qword ptr [rbp - 0x28], 0
0x4000cf:	jne	0x4000db
<Block for 0x400047, 11 bytes>
0x400047:	mov	qword ptr [rbp - 0x20], rax
0x40004b:	cmp	qword ptr [rbp - 0x20], 0
0x400050:	jne	0x40005c
<Block for 0x4000d1, 10 bytes>
0x4000d1:	mov	edi, 1
0x4000d6:	call	0x500010
<Block for 0x4000db, 12 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x28]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500018
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 1
0x400057:	call	0x500010
<Block for 0x40005c, 12 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0x20]
0x400060:	mov	rdi, rax
0x400063:	call	0x500018
<Block for 0x4000e7, 27 bytes>
0x4000e7:	mov	rax, qword ptr [rbp - 0x28]
0x4000eb:	mov	edx, 0x180
0x4000f0:	mov	esi, 0xc2
0x4000f5:	mov	rdi, rax
0x4000f8:	mov	eax, 0
0x4000fd:	call	0x500020
<Block for 0x400068, 27 bytes>
0x400068:	mov	rax, qword ptr [rbp - 0x20]
0x40006c:	mov	edx, 0x180
0x400071:	mov	esi, 0x42
0x400076:	mov	rdi, rax
0x400079:	mov	eax, 0
0x40007e:	call	0x500020
<Block for 0x400102, 9 bytes>
0x400102:	mov	dword ptr [rbp - 0x30], eax
0x400105:	cmp	dword ptr [rbp - 0x30], -1
0x400109:	je	0x400121
<Block for 0x400083, 13 bytes>
0x400083:	mov	dword ptr [rbp - 0x2c], eax
0x400086:	cmp	dword ptr [rbp - 0x2c], -1
0x40008a:	je	0x400121
<Block for 0x400121, 16 bytes>
0x400121:	nop	
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	xor	rax, qword ptr fs:[0x28]
0x40012f:	je	0x400136
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x126]
0x400112:	call	0x500018
<Block for 0x400090, 12 bytes>
0x400090:	lea	rdi, [rip + 0x1a1]
0x400097:	call	0x500018
<Block for 0x400136, 2 bytes>
0x400136:	leave	
0x400137:	ret	
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500030
<Block for 0x400117, 10 bytes>
0x400117:	mov	eax, dword ptr [rbp - 0x30]
0x40011a:	mov	edi, eax
0x40011c:	call	0x500028
<Block for 0x40009c, 10 bytes>
0x40009c:	mov	eax, dword ptr [rbp - 0x2c]
0x40009f:	mov	edi, eax
0x4000a1:	call	0x500028
<Block for 0x4000a6, 2 bytes>
0x4000a6:	jmp	0x400121
