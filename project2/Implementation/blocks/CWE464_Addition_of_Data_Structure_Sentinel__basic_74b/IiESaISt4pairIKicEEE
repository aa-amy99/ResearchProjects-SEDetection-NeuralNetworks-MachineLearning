<Block for 0x400075, 57 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x30
0x400081:	mov	qword ptr [rbp - 0x28], rdi
0x400085:	mov	rax, qword ptr fs:[0x28]
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	xor	eax, eax
0x400094:	mov	dword ptr [rbp - 0x10], 2
0x40009b:	lea	rdx, [rbp - 0x10]
0x40009f:	mov	rax, qword ptr [rbp - 0x28]
0x4000a3:	mov	rsi, rdx
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x400116
<Block for 0x4000ae, 37 bytes>
0x4000ae:	movzx	eax, byte ptr [rax]
0x4000b1:	mov	byte ptr [rbp - 0x11], al
0x4000b4:	mov	byte ptr [rbp - 0xc], 0x78
0x4000b8:	movzx	eax, byte ptr [rbp - 0x11]
0x4000bc:	mov	byte ptr [rbp - 0xb], al
0x4000bf:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000c3:	mov	byte ptr [rbp - 9], 0
0x4000c7:	lea	rax, [rbp - 0xc]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500000
<Block for 0x4000d3, 16 bytes>
0x4000d3:	nop	
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	xor	rax, qword ptr fs:[0x28]
0x4000e1:	je	0x4000e8
<Block for 0x4000e8, 2 bytes>
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000e3, 5 bytes>
0x4000e3:	call	0x500008
