<Block for 0x400112, 82 bytes>
0x400112:	endbr64	
0x400116:	push	rbp
0x400117:	mov	rbp, rsp
0x40011a:	sub	rsp, 0x40
0x40011e:	mov	rax, qword ptr fs:[0x28]
0x400127:	mov	qword ptr [rbp - 8], rax
0x40012b:	xor	eax, eax
0x40012d:	mov	eax, dword ptr [rip + 0x1f1]
0x400133:	mov	dword ptr [rbp - 0x34], eax
0x400136:	mov	qword ptr [rbp - 0x30], 0
0x40013e:	mov	qword ptr [rbp - 0x28], 0
0x400146:	mov	qword ptr [rbp - 0x20], 0
0x40014e:	mov	qword ptr [rbp - 0x18], 0
0x400156:	mov	qword ptr [rbp - 0x10], 0
0x40015e:	cmp	dword ptr [rbp - 0x34], 9
0x400162:	jg	0x400196
<Block for 0x400164, 22 bytes>
0x400164:	mov	eax, dword ptr [rbp - 0x34]
0x400167:	cdqe	
0x400169:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400171:	mov	dword ptr [rbp - 0x38], 0
0x400178:	jmp	0x40018e
<Block for 0x400196, 12 bytes>
0x400196:	lea	rdi, [rip + 0x193]
0x40019d:	call	0x500008
<Block for 0x40018e, 6 bytes>
0x40018e:	cmp	dword ptr [rbp - 0x38], 9
0x400192:	jle	0x40017a
<Block for 0x4001a2, 16 bytes>
0x4001a2:	nop	
0x4001a3:	mov	rax, qword ptr [rbp - 8]
0x4001a7:	xor	rax, qword ptr fs:[0x28]
0x4001b0:	je	0x4001b7
<Block for 0x40017a, 16 bytes>
0x40017a:	mov	eax, dword ptr [rbp - 0x38]
0x40017d:	cdqe	
0x40017f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400183:	mov	edi, eax
0x400185:	call	0x500000
<Block for 0x400194, 2 bytes>
0x400194:	jmp	0x4001a2
<Block for 0x4001b7, 2 bytes>
0x4001b7:	leave	
0x4001b8:	ret	
<Block for 0x4001b2, 5 bytes>
0x4001b2:	call	0x500010
<Block for 0x40018a, 10 bytes>
0x40018a:	add	dword ptr [rbp - 0x38], 1
0x40018e:	cmp	dword ptr [rbp - 0x38], 9
0x400192:	jle	0x40017a
