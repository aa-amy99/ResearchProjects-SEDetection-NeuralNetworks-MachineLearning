<Block for 0x40005a, 49 bytes>
0x40005a:	endbr64	
0x40005e:	push	rbp
0x40005f:	mov	rbp, rsp
0x400062:	sub	rsp, 0x20
0x400066:	mov	rax, qword ptr fs:[0x28]
0x40006f:	mov	qword ptr [rbp - 8], rax
0x400073:	xor	eax, eax
0x400075:	nop	
0x400076:	endbr64	
0x40007a:	mov	esi, 0xa
0x40007f:	lea	rdi, [rip + 0xfff8a]
0x400086:	call	0x40013e
<Block for 0x40008b, 19 bytes>
0x40008b:	lea	rax, [rbp - 0x12]
0x40008f:	mov	rsi, rax
0x400092:	lea	rdi, [rip + 0xfff67]
0x400099:	call	0x500008
<Block for 0x40009e, 16 bytes>
0x40009e:	mov	byte ptr [rbp - 9], 0
0x4000a2:	lea	rax, [rbp - 0x12]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500010
<Block for 0x4000ae, 16 bytes>
0x4000ae:	nop	
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	xor	rax, qword ptr fs:[0x28]
0x4000bc:	je	0x4000c3
<Block for 0x4000c3, 2 bytes>
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x4000be, 5 bytes>
0x4000be:	call	0x500018
