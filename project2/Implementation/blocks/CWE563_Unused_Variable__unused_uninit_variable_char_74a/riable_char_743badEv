<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x40037e
<Block for 0x40002b, 26 bytes>
0x40002b:	mov	dword ptr [rbp - 0x50], 0
0x400032:	lea	rdx, [rbp - 0x50]
0x400036:	lea	rax, [rbp - 0x80]
0x40003a:	mov	rsi, rdx
0x40003d:	mov	rdi, rax
0x400040:	call	0x400532
<Block for 0x400045, 35 bytes>
0x400045:	movzx	edx, byte ptr [rbp - 0x81]
0x40004c:	mov	byte ptr [rax], dl
0x40004e:	mov	dword ptr [rbp - 0x50], 1
0x400055:	lea	rdx, [rbp - 0x50]
0x400059:	lea	rax, [rbp - 0x80]
0x40005d:	mov	rsi, rdx
0x400060:	mov	rdi, rax
0x400063:	call	0x400532
<Block for 0x400068, 35 bytes>
0x400068:	movzx	edx, byte ptr [rbp - 0x81]
0x40006f:	mov	byte ptr [rax], dl
0x400071:	mov	dword ptr [rbp - 0x50], 2
0x400078:	lea	rdx, [rbp - 0x50]
0x40007c:	lea	rax, [rbp - 0x80]
0x400080:	mov	rsi, rdx
0x400083:	mov	rdi, rax
0x400086:	call	0x400532
<Block for 0x40008b, 28 bytes>
0x40008b:	movzx	edx, byte ptr [rbp - 0x81]
0x400092:	mov	byte ptr [rax], dl
0x400094:	lea	rdx, [rbp - 0x80]
0x400098:	lea	rax, [rbp - 0x50]
0x40009c:	mov	rsi, rdx
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x4003be
<Block for 0x4000a7, 12 bytes>
0x4000a7:	lea	rax, [rbp - 0x50]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x4000b3, 12 bytes>
0x4000b3:	lea	rax, [rbp - 0x50]
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x40039e
<Block for 0x4000bf, 12 bytes>
0x4000bf:	lea	rax, [rbp - 0x80]
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x40039e
<Block for 0x4000cb, 16 bytes>
0x4000cb:	nop	
0x4000cc:	mov	rax, qword ptr [rbp - 0x18]
0x4000d0:	xor	rax, qword ptr fs:[0x28]
0x4000d9:	je	0x400115
<Block for 0x400115, 10 bytes>
0x400115:	add	rsp, 0x88
0x40011c:	pop	rbx
0x40011d:	pop	rbp
0x40011e:	ret	
<Block for 0x4000db, 2 bytes>
0x4000db:	jmp	0x400110
<Block for 0x400110, 5 bytes>
0x400110:	call	0x500010
