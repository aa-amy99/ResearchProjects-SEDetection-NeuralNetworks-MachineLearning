<Block for 0x4000a7, 60 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	add	rsp, -0x80
0x4000b3:	mov	rax, qword ptr fs:[0x28]
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	xor	eax, eax
0x4000c2:	lea	rax, [rip - 0xc9]
0x4000c9:	mov	qword ptr [rbp - 0x80], rax
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x41
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 29 bytes>
0x4000e3:	mov	byte ptr [rbp - 0xd], 0
0x4000e7:	lea	rax, [rbp - 0x70]
0x4000eb:	sub	rax, 8
0x4000ef:	mov	qword ptr [rbp - 0x78], rax
0x4000f3:	mov	rax, qword ptr [rbp - 0x78]
0x4000f7:	mov	rdx, qword ptr [rbp - 0x80]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	rdx
<Block for 0x400100, 16 bytes>
0x400100:	nop	
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	xor	rax, qword ptr fs:[0x28]
0x40010e:	je	0x400115
<Block for 0x400115, 2 bytes>
0x400115:	leave	
0x400116:	ret	
<Block for 0x400110, 5 bytes>
0x400110:	call	0x500010
