<Block for 0x4002d5, 46 bytes>
0x4002d5:	endbr64	
0x4002d9:	push	rbp
0x4002da:	mov	rbp, rsp
0x4002dd:	push	rbx
0x4002de:	sub	rsp, 0x168
0x4002e5:	mov	rax, qword ptr fs:[0x28]
0x4002ee:	mov	qword ptr [rbp - 0x18], rax
0x4002f2:	xor	eax, eax
0x4002f4:	lea	rax, [rbp - 0x160]
0x4002fb:	mov	rdi, rax
0x4002fe:	call	0x4005be
<Block for 0x400303, 52 bytes>
0x400303:	movabs	rax, 0x3d48544150
0x40030d:	mov	edx, 0
0x400312:	mov	qword ptr [rbp - 0x120], rax
0x400319:	mov	qword ptr [rbp - 0x118], rdx
0x400320:	lea	rdx, [rbp - 0x110]
0x400327:	mov	eax, 0
0x40032c:	mov	ecx, 0x1d
0x400331:	mov	rdi, rdx
0x400334:	rep stosq	qword ptr [rdi], rax
<Block for 0x400337, 54 bytes>
0x400337:	mov	rdx, rdi
0x40033a:	mov	word ptr [rdx], ax
0x40033d:	add	rdx, 2
0x400341:	lea	rax, [rbp - 0x120]
0x400348:	mov	qword ptr [rbp - 0x170], rax
0x40034f:	mov	rdx, qword ptr [rbp - 0x170]
0x400356:	mov	rax, rdx
0x400359:	mov	rcx, -1
0x400360:	mov	rsi, rax
0x400363:	mov	eax, 0
0x400368:	mov	rdi, rsi
0x40036b:	repne scasb	al, byte ptr [rdi]
<Block for 0x400334, 3 bytes>
0x400334:	rep stosq	qword ptr [rdi], rax
<Block for 0x40036d, 38 bytes>
0x40036d:	mov	rax, rcx
0x400370:	not	rax
0x400373:	sub	rax, 1
0x400377:	add	rax, rdx
0x40037a:	mov	dword ptr [rax], 0x6e69622f
0x400380:	mov	byte ptr [rax + 4], 0
0x400384:	lea	rax, [rbp - 0x160]
0x40038b:	mov	rdi, rax
0x40038e:	call	0x400752
<Block for 0x40036b, 2 bytes>
0x40036b:	repne scasb	al, byte ptr [rdi]
<Block for 0x400393, 32 bytes>
0x400393:	mov	qword ptr [rbp - 0x168], rax
0x40039a:	lea	rdx, [rbp - 0x168]
0x4003a1:	lea	rax, [rbp - 0x140]
0x4003a8:	mov	rsi, rdx
0x4003ab:	mov	rdi, rax
0x4003ae:	call	0x4007a2
<Block for 0x4003b3, 37 bytes>
0x4003b3:	lea	rdx, [rbp - 0x170]
0x4003ba:	mov	rsi, qword ptr [rbp - 0x140]
0x4003c1:	lea	rax, [rbp - 0x160]
0x4003c8:	mov	rcx, rdx
0x4003cb:	mov	edx, 1
0x4003d0:	mov	rdi, rax
0x4003d3:	call	0x4007d0
<Block for 0x4003d8, 15 bytes>
0x4003d8:	lea	rax, [rbp - 0x160]
0x4003df:	mov	rdi, rax
0x4003e2:	call	0x400752
<Block for 0x4003e7, 32 bytes>
0x4003e7:	mov	qword ptr [rbp - 0x168], rax
0x4003ee:	lea	rdx, [rbp - 0x168]
0x4003f5:	lea	rax, [rbp - 0x140]
0x4003fc:	mov	rsi, rdx
0x4003ff:	mov	rdi, rax
0x400402:	call	0x4007a2
<Block for 0x400407, 37 bytes>
0x400407:	lea	rdx, [rbp - 0x170]
0x40040e:	mov	rsi, qword ptr [rbp - 0x140]
0x400415:	lea	rax, [rbp - 0x160]
0x40041c:	mov	rcx, rdx
0x40041f:	mov	edx, 1
0x400424:	mov	rdi, rax
0x400427:	call	0x4007d0
<Block for 0x40042c, 15 bytes>
0x40042c:	lea	rax, [rbp - 0x160]
0x400433:	mov	rdi, rax
0x400436:	call	0x400752
<Block for 0x40043b, 32 bytes>
0x40043b:	mov	qword ptr [rbp - 0x168], rax
0x400442:	lea	rdx, [rbp - 0x168]
0x400449:	lea	rax, [rbp - 0x140]
0x400450:	mov	rsi, rdx
0x400453:	mov	rdi, rax
0x400456:	call	0x4007a2
<Block for 0x40045b, 37 bytes>
0x40045b:	lea	rdx, [rbp - 0x170]
0x400462:	mov	rsi, qword ptr [rbp - 0x140]
0x400469:	lea	rax, [rbp - 0x160]
0x400470:	mov	rcx, rdx
0x400473:	mov	edx, 1
0x400478:	mov	rdi, rax
0x40047b:	call	0x4007d0
<Block for 0x400480, 25 bytes>
0x400480:	lea	rdx, [rbp - 0x160]
0x400487:	lea	rax, [rbp - 0x140]
0x40048e:	mov	rsi, rdx
0x400491:	mov	rdi, rax
0x400494:	call	0x400896
<Block for 0x400499, 15 bytes>
0x400499:	lea	rax, [rbp - 0x140]
0x4004a0:	mov	rdi, rax
0x4004a3:	call	0x500040
<Block for 0x4004a8, 15 bytes>
0x4004a8:	lea	rax, [rbp - 0x140]
0x4004af:	mov	rdi, rax
0x4004b2:	call	0x40070a
<Block for 0x4004b7, 15 bytes>
0x4004b7:	lea	rax, [rbp - 0x160]
0x4004be:	mov	rdi, rax
0x4004c1:	call	0x40070a
<Block for 0x4004c6, 16 bytes>
0x4004c6:	nop	
0x4004c7:	mov	rax, qword ptr [rbp - 0x18]
0x4004cb:	xor	rax, qword ptr fs:[0x28]
0x4004d4:	je	0x400516
<Block for 0x400516, 10 bytes>
0x400516:	add	rsp, 0x168
0x40051d:	pop	rbx
0x40051e:	pop	rbp
0x40051f:	ret	
<Block for 0x4004d6, 2 bytes>
0x4004d6:	jmp	0x400511
<Block for 0x400511, 5 bytes>
0x400511:	call	0x500038
