<Block for 0x400124, 46 bytes>
0x400124:	endbr64	
0x400128:	push	rbp
0x400129:	mov	rbp, rsp
0x40012c:	push	rbx
0x40012d:	sub	rsp, 0xc8
0x400134:	mov	rax, qword ptr fs:[0x28]
0x40013d:	mov	qword ptr [rbp - 0x18], rax
0x400141:	xor	eax, eax
0x400143:	lea	rax, [rbp - 0xc0]
0x40014a:	mov	rdi, rax
0x40014d:	call	0x400310
<Block for 0x400152, 46 bytes>
0x400152:	lea	rax, [rbp - 0x80]
0x400156:	mov	qword ptr [rbp - 0xc8], rax
0x40015d:	mov	rax, qword ptr [rbp - 0xc8]
0x400164:	mov	byte ptr [rax], 0
0x400167:	lea	rdx, [rbp - 0xc8]
0x40016e:	lea	rax, [rbp - 0xc0]
0x400175:	mov	rsi, rdx
0x400178:	mov	rdi, rax
0x40017b:	call	0x400406
<Block for 0x400180, 25 bytes>
0x400180:	lea	rdx, [rbp - 0xc8]
0x400187:	lea	rax, [rbp - 0xc0]
0x40018e:	mov	rsi, rdx
0x400191:	mov	rdi, rax
0x400194:	call	0x400406
<Block for 0x400199, 25 bytes>
0x400199:	lea	rdx, [rbp - 0xc8]
0x4001a0:	lea	rax, [rbp - 0xc0]
0x4001a7:	mov	rsi, rdx
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x400406
<Block for 0x4001b2, 25 bytes>
0x4001b2:	lea	rdx, [rbp - 0xc0]
0x4001b9:	lea	rax, [rbp - 0xa0]
0x4001c0:	mov	rsi, rdx
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x400440
<Block for 0x4001cb, 15 bytes>
0x4001cb:	lea	rax, [rbp - 0xa0]
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x500018
<Block for 0x4001da, 15 bytes>
0x4001da:	lea	rax, [rbp - 0xa0]
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x400330
<Block for 0x4001e9, 15 bytes>
0x4001e9:	lea	rax, [rbp - 0xc0]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x400330
<Block for 0x4001f8, 16 bytes>
0x4001f8:	nop	
0x4001f9:	mov	rax, qword ptr [rbp - 0x18]
0x4001fd:	xor	rax, qword ptr fs:[0x28]
0x400206:	je	0x400248
<Block for 0x400248, 10 bytes>
0x400248:	add	rsp, 0xc8
0x40024f:	pop	rbx
0x400250:	pop	rbp
0x400251:	ret	
<Block for 0x400208, 2 bytes>
0x400208:	jmp	0x400243
<Block for 0x400243, 5 bytes>
0x400243:	call	0x500010
