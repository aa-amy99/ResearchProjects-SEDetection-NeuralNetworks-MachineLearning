<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xc8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400310
<Block for 0x40002e, 36 bytes>
0x40002e:	lea	rax, [rbp - 0x80]
0x400032:	mov	qword ptr [rbp - 0xc8], rax
0x400039:	lea	rdx, [rbp - 0xc8]
0x400040:	lea	rax, [rbp - 0xc0]
0x400047:	mov	rsi, rdx
0x40004a:	mov	rdi, rax
0x40004d:	call	0x400406
<Block for 0x400052, 25 bytes>
0x400052:	lea	rdx, [rbp - 0xc8]
0x400059:	lea	rax, [rbp - 0xc0]
0x400060:	mov	rsi, rdx
0x400063:	mov	rdi, rax
0x400066:	call	0x400406
<Block for 0x40006b, 25 bytes>
0x40006b:	lea	rdx, [rbp - 0xc8]
0x400072:	lea	rax, [rbp - 0xc0]
0x400079:	mov	rsi, rdx
0x40007c:	mov	rdi, rax
0x40007f:	call	0x400406
<Block for 0x400084, 25 bytes>
0x400084:	lea	rdx, [rbp - 0xc0]
0x40008b:	lea	rax, [rbp - 0xa0]
0x400092:	mov	rsi, rdx
0x400095:	mov	rdi, rax
0x400098:	call	0x400440
<Block for 0x40009d, 15 bytes>
0x40009d:	lea	rax, [rbp - 0xa0]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500000
<Block for 0x4000ac, 15 bytes>
0x4000ac:	lea	rax, [rbp - 0xa0]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x400330
<Block for 0x4000bb, 15 bytes>
0x4000bb:	lea	rax, [rbp - 0xc0]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x400330
<Block for 0x4000ca, 16 bytes>
0x4000ca:	nop	
0x4000cb:	mov	rax, qword ptr [rbp - 0x18]
0x4000cf:	xor	rax, qword ptr fs:[0x28]
0x4000d8:	je	0x40011a
<Block for 0x40011a, 10 bytes>
0x40011a:	add	rsp, 0xc8
0x400121:	pop	rbx
0x400122:	pop	rbp
0x400123:	ret	
<Block for 0x4000da, 2 bytes>
0x4000da:	jmp	0x400115
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500010
