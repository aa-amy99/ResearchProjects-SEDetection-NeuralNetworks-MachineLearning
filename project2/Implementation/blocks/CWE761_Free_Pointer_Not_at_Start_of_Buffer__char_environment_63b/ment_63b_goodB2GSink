<Block for 0x400055, 37 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x20
0x400061:	mov	qword ptr [rbp - 0x18], rdi
0x400065:	mov	rax, qword ptr [rbp - 0x18]
0x400069:	mov	rax, qword ptr [rax]
0x40006c:	mov	qword ptr [rbp - 8], rax
0x400070:	mov	qword ptr [rbp - 0x10], 0
0x400078:	jmp	0x40009f
<Block for 0x40009f, 12 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500010
<Block for 0x4000ab, 6 bytes>
0x4000ab:	cmp	qword ptr [rbp - 0x10], rax
0x4000af:	jb	0x40007a
<Block for 0x40007a, 18 bytes>
0x40007a:	mov	rdx, qword ptr [rbp - 8]
0x40007e:	mov	rax, qword ptr [rbp - 0x10]
0x400082:	add	rax, rdx
0x400085:	movzx	eax, byte ptr [rax]
0x400088:	cmp	al, 0x53
0x40008a:	jne	0x40009a
<Block for 0x4000b1, 12 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500008
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0x2d]
0x400093:	call	0x500000
<Block for 0x40009a, 17 bytes>
0x40009a:	add	qword ptr [rbp - 0x10], 1
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500010
<Block for 0x4000bd, 3 bytes>
0x4000bd:	nop	
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x400098, 2 bytes>
0x400098:	jmp	0x4000b1
