<Block for 0x400102, 53 bytes>
0x400102:	endbr64	
0x400106:	push	rbp
0x400107:	mov	rbp, rsp
0x40010a:	sub	rsp, 0x20
0x40010e:	mov	rax, qword ptr fs:[0x28]
0x400117:	mov	qword ptr [rbp - 8], rax
0x40011b:	xor	eax, eax
0x40011d:	mov	dword ptr [rbp - 0x1c], 0x64
0x400124:	mov	dword ptr [rbp - 0x10], 0
0x40012b:	mov	dword ptr [rbp - 0xc], 0
0x400132:	call	0x400000
<Block for 0x400137, 9 bytes>
0x400137:	test	eax, eax
0x400139:	setne	al
0x40013c:	test	al, al
0x40013e:	je	0x400148
<Block for 0x400148, 14 bytes>
0x400148:	mov	rax, qword ptr [rbp - 0x18]
0x40014c:	mov	eax, dword ptr [rax + 4]
0x40014f:	mov	edi, eax
0x400151:	call	0x500000
<Block for 0x400140, 22 bytes>
0x400140:	lea	rax, [rbp - 0x10]
0x400144:	mov	qword ptr [rbp - 0x18], rax
0x400148:	mov	rax, qword ptr [rbp - 0x18]
0x40014c:	mov	eax, dword ptr [rax + 4]
0x40014f:	mov	edi, eax
0x400151:	call	0x500000
<Block for 0x400156, 16 bytes>
0x400156:	nop	
0x400157:	mov	rax, qword ptr [rbp - 8]
0x40015b:	xor	rax, qword ptr fs:[0x28]
0x400164:	je	0x40016b
<Block for 0x40016b, 2 bytes>
0x40016b:	leave	
0x40016c:	ret	
<Block for 0x400166, 5 bytes>
0x400166:	call	0x500008
