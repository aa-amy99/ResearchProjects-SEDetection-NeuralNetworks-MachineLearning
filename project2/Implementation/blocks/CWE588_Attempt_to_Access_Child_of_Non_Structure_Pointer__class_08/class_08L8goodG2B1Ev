<Block for 0x400089, 53 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x20
0x400095:	mov	rax, qword ptr fs:[0x28]
0x40009e:	mov	qword ptr [rbp - 8], rax
0x4000a2:	xor	eax, eax
0x4000a4:	mov	dword ptr [rbp - 0x1c], 0x64
0x4000ab:	mov	dword ptr [rbp - 0x10], 0
0x4000b2:	mov	dword ptr [rbp - 0xc], 0
0x4000b9:	call	0x40000f
<Block for 0x4000be, 9 bytes>
0x4000be:	test	eax, eax
0x4000c0:	setne	al
0x4000c3:	test	al, al
0x4000c5:	je	0x4000d5
<Block for 0x4000d5, 22 bytes>
0x4000d5:	lea	rax, [rbp - 0x10]
0x4000d9:	mov	qword ptr [rbp - 0x18], rax
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	mov	eax, dword ptr [rax + 4]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x500000
<Block for 0x4000c7, 12 bytes>
0x4000c7:	lea	rdi, [rip + 0xb4]
0x4000ce:	call	0x500010
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x4000d3, 2 bytes>
0x4000d3:	jmp	0x4000dd
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500008
<Block for 0x4000dd, 14 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	mov	eax, dword ptr [rax + 4]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x500000
