<Block for 0x400320, 44 bytes>
0x400320:	endbr64	
0x400324:	push	rbp
0x400325:	mov	rbp, rsp
0x400328:	sub	rsp, 0x50
0x40032c:	mov	rax, qword ptr fs:[0x28]
0x400335:	mov	qword ptr [rbp - 8], rax
0x400339:	xor	eax, eax
0x40033b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400342:	mov	eax, 0
0x400347:	call	0x400000
<Block for 0x40034c, 8 bytes>
0x40034c:	test	eax, eax
0x40034e:	je	0x400426
<Block for 0x400426, 10 bytes>
0x400426:	mov	eax, 0
0x40042b:	call	0x400000
<Block for 0x400354, 27 bytes>
0x400354:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40035b:	mov	edx, 6
0x400360:	mov	esi, 1
0x400365:	mov	edi, 2
0x40036a:	call	0x500000
<Block for 0x400430, 4 bytes>
0x400430:	test	eax, eax
0x400432:	je	0x400486
<Block for 0x40036f, 13 bytes>
0x40036f:	mov	dword ptr [rbp - 0x48], eax
0x400372:	cmp	dword ptr [rbp - 0x48], -1
0x400376:	je	0x400412
<Block for 0x400486, 16 bytes>
0x400486:	nop	
0x400487:	mov	rax, qword ptr [rbp - 8]
0x40048b:	xor	rax, qword ptr fs:[0x28]
0x400494:	je	0x40049b
<Block for 0x400434, 46 bytes>
0x400434:	mov	qword ptr [rbp - 0x40], 0
0x40043c:	mov	qword ptr [rbp - 0x38], 0
0x400444:	mov	qword ptr [rbp - 0x30], 0
0x40044c:	mov	qword ptr [rbp - 0x28], 0
0x400454:	mov	qword ptr [rbp - 0x20], 0
0x40045c:	cmp	dword ptr [rbp - 0x4c], 0
0x400460:	js	0x40047a
<Block for 0x400412, 3 bytes>
0x400412:	nop	
0x400413:	jmp	0x400416
<Block for 0x40037c, 22 bytes>
0x40037c:	lea	rax, [rbp - 0x40]
0x400380:	mov	edx, 0x10
0x400385:	mov	esi, 0
0x40038a:	mov	rdi, rax
0x40038d:	call	0x500008
<Block for 0x40049b, 2 bytes>
0x40049b:	leave	
0x40049c:	ret	
<Block for 0x400496, 5 bytes>
0x400496:	call	0x500050
<Block for 0x40047a, 12 bytes>
0x40047a:	lea	rdi, [rip + 0x1f7]
0x400481:	call	0x500048
<Block for 0x400462, 6 bytes>
0x400462:	cmp	dword ptr [rbp - 0x4c], 9
0x400466:	jg	0x40047a
<Block for 0x400416, 6 bytes>
0x400416:	cmp	dword ptr [rbp - 0x48], -1
0x40041a:	je	0x400426
<Block for 0x400392, 18 bytes>
0x400392:	mov	word ptr [rbp - 0x40], 2
0x400398:	lea	rdi, [rip + 0x291]
0x40039f:	call	0x500010
<Block for 0x400468, 16 bytes>
0x400468:	mov	eax, dword ptr [rbp - 0x4c]
0x40046b:	cdqe	
0x40046d:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400471:	mov	edi, eax
0x400473:	call	0x500040
<Block for 0x40041c, 10 bytes>
0x40041c:	mov	eax, dword ptr [rbp - 0x48]
0x40041f:	mov	edi, eax
0x400421:	call	0x500038
<Block for 0x4003a4, 13 bytes>
0x4003a4:	mov	dword ptr [rbp - 0x3c], eax
0x4003a7:	mov	edi, 0x6987
0x4003ac:	call	0x500018
<Block for 0x400478, 2 bytes>
0x400478:	jmp	0x400486
<Block for 0x4003b1, 26 bytes>
0x4003b1:	mov	word ptr [rbp - 0x3e], ax
0x4003b5:	lea	rcx, [rbp - 0x40]
0x4003b9:	mov	eax, dword ptr [rbp - 0x48]
0x4003bc:	mov	edx, 0x10
0x4003c1:	mov	rsi, rcx
0x4003c4:	mov	edi, eax
0x4003c6:	call	0x500020
<Block for 0x4003cb, 5 bytes>
0x4003cb:	cmp	eax, -1
0x4003ce:	je	0x400415
<Block for 0x4003d0, 24 bytes>
0x4003d0:	lea	rsi, [rbp - 0x16]
0x4003d4:	mov	eax, dword ptr [rbp - 0x48]
0x4003d7:	mov	ecx, 0
0x4003dc:	mov	edx, 0xd
0x4003e1:	mov	edi, eax
0x4003e3:	call	0x500028
<Block for 0x400415, 1 bytes>
0x400415:	nop	
<Block for 0x4003e8, 9 bytes>
0x4003e8:	mov	dword ptr [rbp - 0x44], eax
0x4003eb:	cmp	dword ptr [rbp - 0x44], -1
0x4003ef:	je	0x400416
<Block for 0x4003f1, 6 bytes>
0x4003f1:	cmp	dword ptr [rbp - 0x44], 0
0x4003f5:	je	0x400416
<Block for 0x4003f7, 22 bytes>
0x4003f7:	mov	eax, dword ptr [rbp - 0x44]
0x4003fa:	cdqe	
0x4003fc:	mov	byte ptr [rbp + rax - 0x16], 0
0x400401:	lea	rax, [rbp - 0x16]
0x400405:	mov	rdi, rax
0x400408:	call	0x500030
<Block for 0x40040d, 5 bytes>
0x40040d:	mov	dword ptr [rbp - 0x4c], eax
0x400410:	jmp	0x400416
