<Block for 0x400026, 36 bytes>
0x400026:	endbr64	
0x40002a:	push	rbp
0x40002b:	mov	rbp, rsp
0x40002e:	sub	rsp, 0x20
0x400032:	mov	qword ptr [rbp - 0x18], rdi
0x400036:	mov	rax, qword ptr [rbp - 0x18]
0x40003a:	mov	eax, dword ptr [rax]
0x40003c:	cdqe	
0x40003e:	shl	rax, 2
0x400042:	mov	rdi, rax
0x400045:	call	0x500000
<Block for 0x40004a, 11 bytes>
0x40004a:	mov	qword ptr [rbp - 8], rax
0x40004e:	cmp	qword ptr [rbp - 8], 0
0x400053:	jne	0x40005f
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0xffffffff
0x40005a:	call	0x500008
<Block for 0x40005f, 22 bytes>
0x40005f:	mov	qword ptr [rbp - 0x10], 0
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	mov	eax, dword ptr [rax]
0x40006d:	cdqe	
0x40006f:	cmp	qword ptr [rbp - 0x10], rax
0x400073:	jae	0x400095
<Block for 0x400075, 32 bytes>
0x400075:	mov	rax, qword ptr [rbp - 0x10]
0x400079:	lea	rdx, [rax*4]
0x400081:	mov	rax, qword ptr [rbp - 8]
0x400085:	add	rax, rdx
0x400088:	mov	dword ptr [rax], 0
0x40008e:	add	qword ptr [rbp - 0x10], 1
0x400093:	jmp	0x400067
<Block for 0x400095, 13 bytes>
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	mov	eax, dword ptr [rax]
0x40009b:	mov	edi, eax
0x40009d:	call	0x500010
<Block for 0x400067, 14 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	mov	eax, dword ptr [rax]
0x40006d:	cdqe	
0x40006f:	cmp	qword ptr [rbp - 0x10], rax
0x400073:	jae	0x400095
<Block for 0x4000a2, 12 bytes>
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500018
<Block for 0x4000ae, 3 bytes>
0x4000ae:	nop	
0x4000af:	leave	
0x4000b0:	ret	
