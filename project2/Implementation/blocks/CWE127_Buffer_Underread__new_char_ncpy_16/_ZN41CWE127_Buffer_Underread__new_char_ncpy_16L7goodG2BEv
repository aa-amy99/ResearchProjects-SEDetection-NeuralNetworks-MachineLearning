<Block for 0x4000c2, 45 bytes>
0x4000c2:	endbr64	
0x4000c6:	push	rbp
0x4000c7:	mov	rbp, rsp
0x4000ca:	add	rsp, -0x80
0x4000ce:	mov	rax, qword ptr fs:[0x28]
0x4000d7:	mov	qword ptr [rbp - 8], rax
0x4000db:	xor	eax, eax
0x4000dd:	mov	qword ptr [rbp - 0x80], 0
0x4000e5:	mov	edi, 0x64
0x4000ea:	call	0x500000
<Block for 0x4000ef, 26 bytes>
0x4000ef:	mov	qword ptr [rbp - 0x78], rax
0x4000f3:	mov	rax, qword ptr [rbp - 0x78]
0x4000f7:	mov	edx, 0x63
0x4000fc:	mov	esi, 0x41
0x400101:	mov	rdi, rax
0x400104:	call	0x500008
<Block for 0x400109, 42 bytes>
0x400109:	mov	rax, qword ptr [rbp - 0x78]
0x40010d:	add	rax, 0x63
0x400111:	mov	byte ptr [rax], 0
0x400114:	mov	rax, qword ptr [rbp - 0x78]
0x400118:	mov	qword ptr [rbp - 0x80], rax
0x40011c:	nop	
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500008
<Block for 0x400133, 16 bytes>
0x400133:	mov	byte ptr [rbp - 0xd], 0
0x400137:	lea	rax, [rbp - 0x70]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500010
<Block for 0x400143, 22 bytes>
0x400143:	mov	rdx, rax
0x400146:	mov	rcx, qword ptr [rbp - 0x80]
0x40014a:	lea	rax, [rbp - 0x70]
0x40014e:	mov	rsi, rcx
0x400151:	mov	rdi, rax
0x400154:	call	0x500018
<Block for 0x400159, 16 bytes>
0x400159:	mov	byte ptr [rbp - 0xd], 0
0x40015d:	lea	rax, [rbp - 0x70]
0x400161:	mov	rdi, rax
0x400164:	call	0x500020
<Block for 0x400169, 16 bytes>
0x400169:	nop	
0x40016a:	mov	rax, qword ptr [rbp - 8]
0x40016e:	xor	rax, qword ptr fs:[0x28]
0x400177:	je	0x40017e
<Block for 0x40017e, 2 bytes>
0x40017e:	leave	
0x40017f:	ret	
<Block for 0x400179, 5 bytes>
0x400179:	call	0x500028
