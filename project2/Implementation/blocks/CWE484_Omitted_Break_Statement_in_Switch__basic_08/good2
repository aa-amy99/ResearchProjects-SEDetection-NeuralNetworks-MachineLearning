<Block for 0x40017b, 22 bytes>
0x40017b:	endbr64	
0x40017f:	push	rbp
0x400180:	mov	rbp, rsp
0x400183:	sub	rsp, 0x10
0x400187:	mov	eax, 0
0x40018c:	call	0x400000
<Block for 0x400191, 8 bytes>
0x400191:	test	eax, eax
0x400193:	je	0x400221
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500000
<Block for 0x400221, 1 bytes>
0x400221:	nop	
<Block for 0x40019e, 55 bytes>
0x40019e:	mov	edx, eax
0x4001a0:	movsxd	rax, edx
0x4001a3:	imul	rax, rax, 0x55555556
0x4001aa:	shr	rax, 0x20
0x4001ae:	mov	rcx, rax
0x4001b1:	mov	eax, edx
0x4001b3:	sar	eax, 0x1f
0x4001b6:	mov	esi, ecx
0x4001b8:	sub	esi, eax
0x4001ba:	mov	eax, esi
0x4001bc:	mov	dword ptr [rbp - 4], eax
0x4001bf:	mov	ecx, dword ptr [rbp - 4]
0x4001c2:	mov	eax, ecx
0x4001c4:	add	eax, eax
0x4001c6:	add	eax, ecx
0x4001c8:	sub	edx, eax
0x4001ca:	mov	eax, edx
0x4001cc:	mov	dword ptr [rbp - 4], eax
0x4001cf:	cmp	dword ptr [rbp - 4], 2
0x4001d3:	je	0x400205
<Block for 0x400222, 3 bytes>
0x400222:	nop	
0x400223:	leave	
0x400224:	ret	
<Block for 0x400205, 12 bytes>
0x400205:	lea	rdi, [rip + 0x3c]
0x40020c:	call	0x500008
<Block for 0x4001d5, 6 bytes>
0x4001d5:	cmp	dword ptr [rbp - 4], 2
0x4001d9:	jg	0x400213
<Block for 0x400211, 2 bytes>
0x400211:	jmp	0x400222
<Block for 0x4001db, 6 bytes>
0x4001db:	cmp	dword ptr [rbp - 4], 0
0x4001df:	je	0x4001e9
<Block for 0x400213, 12 bytes>
0x400213:	lea	rdi, [rip + 0x30]
0x40021a:	call	0x500008
<Block for 0x4001e9, 12 bytes>
0x4001e9:	lea	rdi, [rip + 0x54]
0x4001f0:	call	0x500008
<Block for 0x4001e1, 6 bytes>
0x4001e1:	cmp	dword ptr [rbp - 4], 1
0x4001e5:	je	0x4001f7
<Block for 0x40021f, 2 bytes>
0x40021f:	jmp	0x400222
<Block for 0x4001f5, 2 bytes>
0x4001f5:	jmp	0x400222
<Block for 0x4001f7, 12 bytes>
0x4001f7:	lea	rdi, [rip + 0x48]
0x4001fe:	call	0x500008
<Block for 0x4001e7, 2 bytes>
0x4001e7:	jmp	0x400213
<Block for 0x400203, 2 bytes>
0x400203:	jmp	0x400222
