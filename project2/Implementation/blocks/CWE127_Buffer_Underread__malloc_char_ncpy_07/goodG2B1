<Block for 0x4000dd, 46 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	add	rsp, -0x80
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	qword ptr [rbp - 0x80], 0
0x400100:	mov	eax, dword ptr [rip + 0x1b6]
0x400106:	cmp	eax, 5
0x400109:	je	0x400119
<Block for 0x400119, 10 bytes>
0x400119:	mov	edi, 0x64
0x40011e:	call	0x500000
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x1ae]
0x400112:	call	0x500028
<Block for 0x400123, 11 bytes>
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	cmp	qword ptr [rbp - 0x78], 0
0x40012c:	jne	0x400138
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x400161
<Block for 0x40012e, 10 bytes>
0x40012e:	mov	edi, 0xffffffff
0x400133:	call	0x500008
<Block for 0x400138, 22 bytes>
0x400138:	mov	rax, qword ptr [rbp - 0x78]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x41
0x400146:	mov	rdi, rax
0x400149:	call	0x500010
<Block for 0x400161, 22 bytes>
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x40014e, 41 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 0x78]
0x400152:	add	rax, 0x63
0x400156:	mov	byte ptr [rax], 0
0x400159:	mov	rax, qword ptr [rbp - 0x78]
0x40015d:	mov	qword ptr [rbp - 0x80], rax
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x400177, 16 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	rdi, rax
0x400182:	call	0x500018
<Block for 0x400187, 22 bytes>
0x400187:	mov	rdx, rax
0x40018a:	mov	rcx, qword ptr [rbp - 0x80]
0x40018e:	lea	rax, [rbp - 0x70]
0x400192:	mov	rsi, rcx
0x400195:	mov	rdi, rax
0x400198:	call	0x500020
<Block for 0x40019d, 16 bytes>
0x40019d:	mov	byte ptr [rbp - 0xd], 0
0x4001a1:	lea	rax, [rbp - 0x70]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500028
<Block for 0x4001ad, 16 bytes>
0x4001ad:	nop	
0x4001ae:	mov	rax, qword ptr [rbp - 8]
0x4001b2:	xor	rax, qword ptr fs:[0x28]
0x4001bb:	je	0x4001c2
<Block for 0x4001c2, 2 bytes>
0x4001c2:	leave	
0x4001c3:	ret	
<Block for 0x4001bd, 5 bytes>
0x4001bd:	call	0x500030
