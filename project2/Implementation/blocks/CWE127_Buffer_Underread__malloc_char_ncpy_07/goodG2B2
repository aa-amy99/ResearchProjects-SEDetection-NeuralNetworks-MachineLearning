<Block for 0x4001c4, 46 bytes>
0x4001c4:	endbr64	
0x4001c8:	push	rbp
0x4001c9:	mov	rbp, rsp
0x4001cc:	add	rsp, -0x80
0x4001d0:	mov	rax, qword ptr fs:[0x28]
0x4001d9:	mov	qword ptr [rbp - 8], rax
0x4001dd:	xor	eax, eax
0x4001df:	mov	qword ptr [rbp - 0x80], 0
0x4001e7:	mov	eax, dword ptr [rip + 0xcf]
0x4001ed:	cmp	eax, 5
0x4001f0:	jne	0x40023a
<Block for 0x4001f2, 10 bytes>
0x4001f2:	mov	edi, 0x64
0x4001f7:	call	0x500000
<Block for 0x40023a, 22 bytes>
0x40023a:	lea	rax, [rbp - 0x70]
0x40023e:	mov	edx, 0x63
0x400243:	mov	esi, 0x43
0x400248:	mov	rdi, rax
0x40024b:	call	0x500010
<Block for 0x4001fc, 11 bytes>
0x4001fc:	mov	qword ptr [rbp - 0x78], rax
0x400200:	cmp	qword ptr [rbp - 0x78], 0
0x400205:	jne	0x400211
<Block for 0x400250, 16 bytes>
0x400250:	mov	byte ptr [rbp - 0xd], 0
0x400254:	lea	rax, [rbp - 0x70]
0x400258:	mov	rdi, rax
0x40025b:	call	0x500018
<Block for 0x400207, 10 bytes>
0x400207:	mov	edi, 0xffffffff
0x40020c:	call	0x500008
<Block for 0x400211, 22 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x78]
0x400215:	mov	edx, 0x63
0x40021a:	mov	esi, 0x41
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x400260, 22 bytes>
0x400260:	mov	rdx, rax
0x400263:	mov	rcx, qword ptr [rbp - 0x80]
0x400267:	lea	rax, [rbp - 0x70]
0x40026b:	mov	rsi, rcx
0x40026e:	mov	rdi, rax
0x400271:	call	0x500020
<Block for 0x400227, 41 bytes>
0x400227:	mov	rax, qword ptr [rbp - 0x78]
0x40022b:	add	rax, 0x63
0x40022f:	mov	byte ptr [rax], 0
0x400232:	mov	rax, qword ptr [rbp - 0x78]
0x400236:	mov	qword ptr [rbp - 0x80], rax
0x40023a:	lea	rax, [rbp - 0x70]
0x40023e:	mov	edx, 0x63
0x400243:	mov	esi, 0x43
0x400248:	mov	rdi, rax
0x40024b:	call	0x500010
<Block for 0x400276, 16 bytes>
0x400276:	mov	byte ptr [rbp - 0xd], 0
0x40027a:	lea	rax, [rbp - 0x70]
0x40027e:	mov	rdi, rax
0x400281:	call	0x500028
<Block for 0x400286, 16 bytes>
0x400286:	nop	
0x400287:	mov	rax, qword ptr [rbp - 8]
0x40028b:	xor	rax, qword ptr fs:[0x28]
0x400294:	je	0x40029b
<Block for 0x40029b, 2 bytes>
0x40029b:	leave	
0x40029c:	ret	
<Block for 0x400296, 5 bytes>
0x400296:	call	0x500030
