<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	dword ptr [rbp - 0x44], edi
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0x338]
0x400024:	test	eax, eax
0x400026:	je	0x400103
<Block for 0x400103, 18 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x44]
0x400106:	mov	rcx, qword ptr [rbp - 8]
0x40010a:	xor	rcx, qword ptr fs:[0x28]
0x400113:	je	0x40011a
<Block for 0x40002c, 27 bytes>
0x40002c:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400033:	mov	edx, 6
0x400038:	mov	esi, 1
0x40003d:	mov	edi, 2
0x400042:	call	0x500000
<Block for 0x40011a, 2 bytes>
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500040
<Block for 0x400047, 13 bytes>
0x400047:	mov	dword ptr [rbp - 0x38], eax
0x40004a:	cmp	dword ptr [rbp - 0x38], -1
0x40004e:	je	0x4000ef
<Block for 0x4000ef, 3 bytes>
0x4000ef:	nop	
0x4000f0:	jmp	0x4000f3
<Block for 0x400054, 22 bytes>
0x400054:	lea	rax, [rbp - 0x30]
0x400058:	mov	edx, 0x10
0x40005d:	mov	esi, 0
0x400062:	mov	rdi, rax
0x400065:	call	0x500008
<Block for 0x4000f3, 6 bytes>
0x4000f3:	cmp	dword ptr [rbp - 0x38], -1
0x4000f7:	je	0x400103
<Block for 0x40006a, 18 bytes>
0x40006a:	mov	word ptr [rbp - 0x30], 2
0x400070:	lea	rdi, [rip + 0x2f1]
0x400077:	call	0x500010
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	eax, dword ptr [rbp - 0x38]
0x4000fc:	mov	edi, eax
0x4000fe:	call	0x500038
<Block for 0x40007c, 13 bytes>
0x40007c:	mov	dword ptr [rbp - 0x2c], eax
0x40007f:	mov	edi, 0x6987
0x400084:	call	0x500018
<Block for 0x400089, 26 bytes>
0x400089:	mov	word ptr [rbp - 0x2e], ax
0x40008d:	lea	rcx, [rbp - 0x30]
0x400091:	mov	eax, dword ptr [rbp - 0x38]
0x400094:	mov	edx, 0x10
0x400099:	mov	rsi, rcx
0x40009c:	mov	edi, eax
0x40009e:	call	0x500020
<Block for 0x4000a3, 10 bytes>
0x4000a3:	cmp	eax, -1
0x4000a6:	sete	al
0x4000a9:	test	al, al
0x4000ab:	jne	0x4000f2
<Block for 0x4000ad, 24 bytes>
0x4000ad:	lea	rsi, [rbp - 0x16]
0x4000b1:	mov	eax, dword ptr [rbp - 0x38]
0x4000b4:	mov	ecx, 0
0x4000b9:	mov	edx, 0xd
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500028
<Block for 0x4000f2, 1 bytes>
0x4000f2:	nop	
<Block for 0x4000c5, 9 bytes>
0x4000c5:	mov	dword ptr [rbp - 0x34], eax
0x4000c8:	cmp	dword ptr [rbp - 0x34], -1
0x4000cc:	je	0x4000f3
<Block for 0x4000ce, 6 bytes>
0x4000ce:	cmp	dword ptr [rbp - 0x34], 0
0x4000d2:	je	0x4000f3
<Block for 0x4000d4, 22 bytes>
0x4000d4:	mov	eax, dword ptr [rbp - 0x34]
0x4000d7:	cdqe	
0x4000d9:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000de:	lea	rax, [rbp - 0x16]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500030
<Block for 0x4000ea, 5 bytes>
0x4000ea:	mov	dword ptr [rbp - 0x44], eax
0x4000ed:	jmp	0x4000f3
