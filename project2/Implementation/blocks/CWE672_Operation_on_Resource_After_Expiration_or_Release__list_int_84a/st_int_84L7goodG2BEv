<Block for 0x4000ff, 42 bytes>
0x4000ff:	endbr64	
0x400103:	push	rbp
0x400104:	mov	rbp, rsp
0x400107:	push	r12
0x400109:	push	rbx
0x40010a:	sub	rsp, 0x50
0x40010e:	mov	rax, qword ptr fs:[0x28]
0x400117:	mov	qword ptr [rbp - 0x18], rax
0x40011b:	xor	eax, eax
0x40011d:	lea	rax, [rbp - 0x50]
0x400121:	mov	rdi, rax
0x400124:	call	0x400426
<Block for 0x400129, 19 bytes>
0x400129:	lea	rdx, [rbp - 0x50]
0x40012d:	lea	rax, [rbp - 0x30]
0x400131:	mov	rsi, rdx
0x400134:	mov	rdi, rax
0x400137:	call	0x40053c
<Block for 0x40013c, 14 bytes>
0x40013c:	lea	r12, [rbp - 0x30]
0x400140:	mov	edi, 0x18
0x400145:	call	0x500000
<Block for 0x40014a, 14 bytes>
0x40014a:	mov	rbx, rax
0x40014d:	mov	rsi, r12
0x400150:	mov	rdi, rbx
0x400153:	call	0x500030
<Block for 0x400158, 16 bytes>
0x400158:	mov	qword ptr [rbp - 0x58], rbx
0x40015c:	lea	rax, [rbp - 0x30]
0x400160:	mov	rdi, rax
0x400163:	call	0x400446
<Block for 0x400168, 9 bytes>
0x400168:	mov	rbx, qword ptr [rbp - 0x58]
0x40016c:	test	rbx, rbx
0x40016f:	je	0x400186
<Block for 0x400186, 12 bytes>
0x400186:	lea	rax, [rbp - 0x50]
0x40018a:	mov	rdi, rax
0x40018d:	call	0x400446
<Block for 0x400171, 8 bytes>
0x400171:	mov	rdi, rbx
0x400174:	call	0x500038
<Block for 0x400192, 16 bytes>
0x400192:	nop	
0x400193:	mov	rax, qword ptr [rbp - 0x18]
0x400197:	xor	rax, qword ptr fs:[0x28]
0x4001a0:	je	0x4001f5
<Block for 0x400179, 13 bytes>
0x400179:	mov	esi, 0x18
0x40017e:	mov	rdi, rbx
0x400181:	call	0x500018
<Block for 0x4001f5, 9 bytes>
0x4001f5:	add	rsp, 0x50
0x4001f9:	pop	rbx
0x4001fa:	pop	r12
0x4001fc:	pop	rbp
0x4001fd:	ret	
<Block for 0x4001a2, 2 bytes>
0x4001a2:	jmp	0x4001f0
<Block for 0x4001f0, 5 bytes>
0x4001f0:	call	0x500028
