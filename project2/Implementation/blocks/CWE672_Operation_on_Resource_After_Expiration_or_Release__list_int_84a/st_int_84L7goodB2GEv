<Block for 0x4001fe, 42 bytes>
0x4001fe:	endbr64	
0x400202:	push	rbp
0x400203:	mov	rbp, rsp
0x400206:	push	r12
0x400208:	push	rbx
0x400209:	sub	rsp, 0x50
0x40020d:	mov	rax, qword ptr fs:[0x28]
0x400216:	mov	qword ptr [rbp - 0x18], rax
0x40021a:	xor	eax, eax
0x40021c:	lea	rax, [rbp - 0x50]
0x400220:	mov	rdi, rax
0x400223:	call	0x400426
<Block for 0x400228, 19 bytes>
0x400228:	lea	rdx, [rbp - 0x50]
0x40022c:	lea	rax, [rbp - 0x30]
0x400230:	mov	rsi, rdx
0x400233:	mov	rdi, rax
0x400236:	call	0x40053c
<Block for 0x40023b, 14 bytes>
0x40023b:	lea	r12, [rbp - 0x30]
0x40023f:	mov	edi, 0x18
0x400244:	call	0x500000
<Block for 0x400249, 14 bytes>
0x400249:	mov	rbx, rax
0x40024c:	mov	rsi, r12
0x40024f:	mov	rdi, rbx
0x400252:	call	0x500040
<Block for 0x400257, 16 bytes>
0x400257:	mov	qword ptr [rbp - 0x58], rbx
0x40025b:	lea	rax, [rbp - 0x30]
0x40025f:	mov	rdi, rax
0x400262:	call	0x400446
<Block for 0x400267, 9 bytes>
0x400267:	mov	rbx, qword ptr [rbp - 0x58]
0x40026b:	test	rbx, rbx
0x40026e:	je	0x400285
<Block for 0x400285, 12 bytes>
0x400285:	lea	rax, [rbp - 0x50]
0x400289:	mov	rdi, rax
0x40028c:	call	0x400446
<Block for 0x400270, 8 bytes>
0x400270:	mov	rdi, rbx
0x400273:	call	0x500048
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 0x18]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002f4
<Block for 0x400278, 13 bytes>
0x400278:	mov	esi, 0x18
0x40027d:	mov	rdi, rbx
0x400280:	call	0x500018
<Block for 0x4002f4, 9 bytes>
0x4002f4:	add	rsp, 0x50
0x4002f8:	pop	rbx
0x4002f9:	pop	r12
0x4002fb:	pop	rbp
0x4002fc:	ret	
<Block for 0x4002a1, 2 bytes>
0x4002a1:	jmp	0x4002ef
<Block for 0x4002ef, 5 bytes>
0x4002ef:	call	0x500028
