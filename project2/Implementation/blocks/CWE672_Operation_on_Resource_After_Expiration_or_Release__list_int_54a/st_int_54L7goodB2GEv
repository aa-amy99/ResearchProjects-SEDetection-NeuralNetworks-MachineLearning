<Block for 0x4001c8, 40 bytes>
0x4001c8:	endbr64	
0x4001cc:	push	rbp
0x4001cd:	mov	rbp, rsp
0x4001d0:	push	rbx
0x4001d1:	sub	rsp, 0x48
0x4001d5:	mov	rax, qword ptr fs:[0x28]
0x4001de:	mov	qword ptr [rbp - 0x18], rax
0x4001e2:	xor	eax, eax
0x4001e4:	lea	rax, [rbp - 0x50]
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x4003d6
<Block for 0x4001f0, 26 bytes>
0x4001f0:	mov	dword ptr [rbp - 0x30], 0x64
0x4001f7:	lea	rdx, [rbp - 0x30]
0x4001fb:	lea	rax, [rbp - 0x50]
0x4001ff:	mov	rsi, rdx
0x400202:	mov	rdi, rax
0x400205:	call	0x4004de
<Block for 0x40020a, 26 bytes>
0x40020a:	mov	dword ptr [rbp - 0x30], 0
0x400211:	lea	rdx, [rbp - 0x30]
0x400215:	lea	rax, [rbp - 0x50]
0x400219:	mov	rsi, rdx
0x40021c:	mov	rdi, rax
0x40021f:	call	0x4004de
<Block for 0x400224, 19 bytes>
0x400224:	lea	rdx, [rbp - 0x50]
0x400228:	lea	rax, [rbp - 0x30]
0x40022c:	mov	rsi, rdx
0x40022f:	mov	rdi, rax
0x400232:	call	0x40052c
<Block for 0x400237, 12 bytes>
0x400237:	lea	rax, [rbp - 0x30]
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500020
<Block for 0x400243, 12 bytes>
0x400243:	lea	rax, [rbp - 0x30]
0x400247:	mov	rdi, rax
0x40024a:	call	0x4003f6
<Block for 0x40024f, 12 bytes>
0x40024f:	lea	rax, [rbp - 0x50]
0x400253:	mov	rdi, rax
0x400256:	call	0x4003f6
<Block for 0x40025b, 16 bytes>
0x40025b:	nop	
0x40025c:	mov	rax, qword ptr [rbp - 0x18]
0x400260:	xor	rax, qword ptr fs:[0x28]
0x400269:	je	0x4002a5
<Block for 0x4002a5, 7 bytes>
0x4002a5:	add	rsp, 0x48
0x4002a9:	pop	rbx
0x4002aa:	pop	rbp
0x4002ab:	ret	
<Block for 0x40026b, 2 bytes>
0x40026b:	jmp	0x4002a0
<Block for 0x4002a0, 5 bytes>
0x4002a0:	call	0x500010
