<Block for 0x400262, 35 bytes>
0x400262:	endbr64	
0x400266:	push	rbp
0x400267:	mov	rbp, rsp
0x40026a:	push	r12
0x40026c:	push	rbx
0x40026d:	sub	rsp, 0x70
0x400271:	mov	rax, qword ptr fs:[0x28]
0x40027a:	mov	qword ptr [rbp - 0x18], rax
0x40027e:	xor	eax, eax
0x400280:	call	0x500000
<Block for 0x400285, 13 bytes>
0x400285:	test	eax, eax
0x400287:	setne	al
0x40028a:	test	al, al
0x40028c:	je	0x400315
<Block for 0x400315, 12 bytes>
0x400315:	lea	rax, [rbp - 0x71]
0x400319:	mov	rdi, rax
0x40031c:	call	0x500008
<Block for 0x400292, 12 bytes>
0x400292:	lea	rax, [rbp - 0x71]
0x400296:	mov	rdi, rax
0x400299:	call	0x500008
<Block for 0x400321, 23 bytes>
0x400321:	lea	rdx, [rbp - 0x71]
0x400325:	lea	rax, [rbp - 0x60]
0x400329:	lea	rsi, [rip + 0x22f]
0x400330:	mov	rdi, rax
0x400333:	call	0x500010
<Block for 0x40029e, 23 bytes>
0x40029e:	lea	rdx, [rbp - 0x71]
0x4002a2:	lea	rax, [rbp - 0x60]
0x4002a6:	lea	rsi, [rip + 0x2b2]
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x500010
<Block for 0x400338, 12 bytes>
0x400338:	lea	rax, [rbp - 0x71]
0x40033c:	mov	rdi, rax
0x40033f:	call	0x500018
<Block for 0x4002b5, 12 bytes>
0x4002b5:	lea	rax, [rbp - 0x71]
0x4002b9:	mov	rdi, rax
0x4002bc:	call	0x500018
<Block for 0x400344, 5 bytes>
0x400344:	call	0x500020
<Block for 0x4002c1, 5 bytes>
0x4002c1:	call	0x500020
<Block for 0x400349, 8 bytes>
0x400349:	movsxd	rbx, eax
0x40034c:	call	0x500020
<Block for 0x4002c6, 8 bytes>
0x4002c6:	movsxd	rbx, eax
0x4002c9:	call	0x500020
<Block for 0x400351, 22 bytes>
0x400351:	movsxd	rdx, eax
0x400354:	lea	rax, [rbp - 0x40]
0x400358:	lea	rsi, [rbp - 0x60]
0x40035c:	mov	rcx, rbx
0x40035f:	mov	rdi, rax
0x400362:	call	0x500028
<Block for 0x4002ce, 22 bytes>
0x4002ce:	movsxd	rdx, eax
0x4002d1:	lea	rax, [rbp - 0x40]
0x4002d5:	lea	rsi, [rbp - 0x60]
0x4002d9:	mov	rcx, rbx
0x4002dc:	mov	rdi, rax
0x4002df:	call	0x500028
<Block for 0x400367, 12 bytes>
0x400367:	lea	rax, [rbp - 0x40]
0x40036b:	mov	rdi, rax
0x40036e:	call	0x500030
<Block for 0x4002e4, 12 bytes>
0x4002e4:	lea	rax, [rbp - 0x40]
0x4002e8:	mov	rdi, rax
0x4002eb:	call	0x500030
<Block for 0x400373, 8 bytes>
0x400373:	mov	rdi, rax
0x400376:	call	0x500038
<Block for 0x4002f0, 8 bytes>
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500038
<Block for 0x40037b, 12 bytes>
0x40037b:	lea	rax, [rbp - 0x40]
0x40037f:	mov	rdi, rax
0x400382:	call	0x500040
<Block for 0x4002f8, 12 bytes>
0x4002f8:	lea	rax, [rbp - 0x40]
0x4002fc:	mov	rdi, rax
0x4002ff:	call	0x500040
<Block for 0x400387, 12 bytes>
0x400387:	lea	rax, [rbp - 0x60]
0x40038b:	mov	rdi, rax
0x40038e:	call	0x500040
<Block for 0x400304, 12 bytes>
0x400304:	lea	rax, [rbp - 0x60]
0x400308:	mov	rdi, rax
0x40030b:	call	0x500040
<Block for 0x400393, 5 bytes>
0x400393:	jmp	0x4004ca
<Block for 0x400310, 5 bytes>
0x400310:	jmp	0x4004ca
<Block for 0x4004ca, 15 bytes>
0x4004ca:	mov	rax, qword ptr [rbp - 0x18]
0x4004ce:	xor	rax, qword ptr fs:[0x28]
0x4004d7:	je	0x4004de
<Block for 0x4004de, 9 bytes>
0x4004de:	add	rsp, 0x70
0x4004e2:	pop	rbx
0x4004e3:	pop	r12
0x4004e5:	pop	rbp
0x4004e6:	ret	
<Block for 0x4004d9, 5 bytes>
0x4004d9:	call	0x500068
