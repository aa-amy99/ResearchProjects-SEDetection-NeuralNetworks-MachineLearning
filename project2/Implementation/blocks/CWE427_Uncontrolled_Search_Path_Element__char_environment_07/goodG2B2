<Block for 0x4001e2, 82 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0x120
0x4001f1:	mov	rax, qword ptr fs:[0x28]
0x4001fa:	mov	qword ptr [rbp - 8], rax
0x4001fe:	xor	eax, eax
0x400200:	movabs	rax, 0x3d48544150
0x40020a:	mov	edx, 0
0x40020f:	mov	qword ptr [rbp - 0x110], rax
0x400216:	mov	qword ptr [rbp - 0x108], rdx
0x40021d:	lea	rdx, [rbp - 0x100]
0x400224:	mov	eax, 0
0x400229:	mov	ecx, 0x1d
0x40022e:	mov	rdi, rdx
0x400231:	rep stosq	qword ptr [rdi], rax
<Block for 0x400234, 35 bytes>
0x400234:	mov	rdx, rdi
0x400237:	mov	word ptr [rdx], ax
0x40023a:	add	rdx, 2
0x40023e:	lea	rax, [rbp - 0x110]
0x400245:	mov	qword ptr [rbp - 0x118], rax
0x40024c:	mov	eax, dword ptr [rip + 0x86]
0x400252:	cmp	eax, 5
0x400255:	jne	0x400290
<Block for 0x400231, 3 bytes>
0x400231:	rep stosq	qword ptr [rdi], rax
<Block for 0x400257, 27 bytes>
0x400257:	mov	rax, qword ptr [rbp - 0x118]
0x40025e:	mov	rcx, -1
0x400265:	mov	rdx, rax
0x400268:	mov	eax, 0
0x40026d:	mov	rdi, rdx
0x400270:	repne scasb	al, byte ptr [rdi]
<Block for 0x400290, 15 bytes>
0x400290:	mov	rax, qword ptr [rbp - 0x118]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500018
<Block for 0x400272, 45 bytes>
0x400272:	mov	rax, rcx
0x400275:	not	rax
0x400278:	lea	rdx, [rax - 1]
0x40027c:	mov	rax, qword ptr [rbp - 0x118]
0x400283:	add	rax, rdx
0x400286:	mov	dword ptr [rax], 0x6e69622f
0x40028c:	mov	byte ptr [rax + 4], 0
0x400290:	mov	rax, qword ptr [rbp - 0x118]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500018
<Block for 0x400270, 2 bytes>
0x400270:	repne scasb	al, byte ptr [rdi]
<Block for 0x40029f, 16 bytes>
0x40029f:	nop	
0x4002a0:	mov	rax, qword ptr [rbp - 8]
0x4002a4:	xor	rax, qword ptr fs:[0x28]
0x4002ad:	je	0x4002b4
<Block for 0x4002b4, 2 bytes>
0x4002b4:	leave	
0x4002b5:	ret	
<Block for 0x4002af, 5 bytes>
0x4002af:	call	0x500020
