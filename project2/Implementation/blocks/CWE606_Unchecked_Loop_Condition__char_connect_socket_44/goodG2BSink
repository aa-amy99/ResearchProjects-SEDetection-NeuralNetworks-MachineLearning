<Block for 0x4002d8, 59 bytes>
0x4002d8:	endbr64	
0x4002dc:	push	rbp
0x4002dd:	mov	rbp, rsp
0x4002e0:	sub	rsp, 0x30
0x4002e4:	mov	qword ptr [rbp - 0x28], rdi
0x4002e8:	mov	rax, qword ptr fs:[0x28]
0x4002f1:	mov	qword ptr [rbp - 8], rax
0x4002f5:	xor	eax, eax
0x4002f7:	lea	rdx, [rbp - 0x14]
0x4002fb:	mov	rax, qword ptr [rbp - 0x28]
0x4002ff:	lea	rsi, [rip + 0x41a]
0x400306:	mov	rdi, rax
0x400309:	mov	eax, 0
0x40030e:	call	0x500000
<Block for 0x400313, 5 bytes>
0x400313:	cmp	eax, 1
0x400316:	jne	0x400342
<Block for 0x400318, 16 bytes>
0x400318:	mov	dword ptr [rbp - 0xc], 0
0x40031f:	mov	dword ptr [rbp - 0x10], 0
0x400326:	jmp	0x400330
<Block for 0x400342, 16 bytes>
0x400342:	nop	
0x400343:	mov	rax, qword ptr [rbp - 8]
0x400347:	xor	rax, qword ptr fs:[0x28]
0x400350:	je	0x400357
<Block for 0x400330, 8 bytes>
0x400330:	mov	eax, dword ptr [rbp - 0x14]
0x400333:	cmp	dword ptr [rbp - 0x10], eax
0x400336:	jl	0x400328
<Block for 0x400357, 2 bytes>
0x400357:	leave	
0x400358:	ret	
<Block for 0x400352, 5 bytes>
0x400352:	call	0x500010
<Block for 0x400328, 16 bytes>
0x400328:	add	dword ptr [rbp - 0xc], 1
0x40032c:	add	dword ptr [rbp - 0x10], 1
0x400330:	mov	eax, dword ptr [rbp - 0x14]
0x400333:	cmp	dword ptr [rbp - 0x10], eax
0x400336:	jl	0x400328
<Block for 0x400338, 10 bytes>
0x400338:	mov	eax, dword ptr [rbp - 0xc]
0x40033b:	mov	edi, eax
0x40033d:	call	0x500008
