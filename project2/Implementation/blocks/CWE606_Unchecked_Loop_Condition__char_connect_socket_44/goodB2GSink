<Block for 0x40041f, 59 bytes>
0x40041f:	endbr64	
0x400423:	push	rbp
0x400424:	mov	rbp, rsp
0x400427:	sub	rsp, 0x30
0x40042b:	mov	qword ptr [rbp - 0x28], rdi
0x40042f:	mov	rax, qword ptr fs:[0x28]
0x400438:	mov	qword ptr [rbp - 8], rax
0x40043c:	xor	eax, eax
0x40043e:	lea	rdx, [rbp - 0x14]
0x400442:	mov	rax, qword ptr [rbp - 0x28]
0x400446:	lea	rsi, [rip + 0x2d3]
0x40044d:	mov	rdi, rax
0x400450:	mov	eax, 0
0x400455:	call	0x500000
<Block for 0x40045a, 5 bytes>
0x40045a:	cmp	eax, 1
0x40045d:	jne	0x400493
<Block for 0x40045f, 10 bytes>
0x40045f:	mov	eax, dword ptr [rbp - 0x14]
0x400462:	cmp	eax, 0x270f
0x400467:	jg	0x400493
<Block for 0x400493, 16 bytes>
0x400493:	nop	
0x400494:	mov	rax, qword ptr [rbp - 8]
0x400498:	xor	rax, qword ptr fs:[0x28]
0x4004a1:	je	0x4004a8
<Block for 0x400469, 16 bytes>
0x400469:	mov	dword ptr [rbp - 0xc], 0
0x400470:	mov	dword ptr [rbp - 0x10], 0
0x400477:	jmp	0x400481
<Block for 0x4004a8, 2 bytes>
0x4004a8:	leave	
0x4004a9:	ret	
<Block for 0x4004a3, 5 bytes>
0x4004a3:	call	0x500010
<Block for 0x400481, 8 bytes>
0x400481:	mov	eax, dword ptr [rbp - 0x14]
0x400484:	cmp	dword ptr [rbp - 0x10], eax
0x400487:	jl	0x400479
<Block for 0x400479, 16 bytes>
0x400479:	add	dword ptr [rbp - 0xc], 1
0x40047d:	add	dword ptr [rbp - 0x10], 1
0x400481:	mov	eax, dword ptr [rbp - 0x14]
0x400484:	cmp	dword ptr [rbp - 0x10], eax
0x400487:	jl	0x400479
<Block for 0x400489, 10 bytes>
0x400489:	mov	eax, dword ptr [rbp - 0xc]
0x40048c:	mov	edi, eax
0x40048e:	call	0x500008
