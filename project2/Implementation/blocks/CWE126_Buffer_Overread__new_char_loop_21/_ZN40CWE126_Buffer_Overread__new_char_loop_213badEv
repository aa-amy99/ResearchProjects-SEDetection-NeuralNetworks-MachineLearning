<Block for 0x40004f, 60 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x90
0x40005e:	mov	rax, qword ptr fs:[0x28]
0x400067:	mov	qword ptr [rbp - 8], rax
0x40006b:	xor	eax, eax
0x40006d:	mov	qword ptr [rbp - 0x80], 0
0x400075:	mov	dword ptr [rip + 0x349], 1
0x40007f:	mov	rax, qword ptr [rbp - 0x80]
0x400083:	mov	rdi, rax
0x400086:	call	0x400000
<Block for 0x40008b, 26 bytes>
0x40008b:	mov	qword ptr [rbp - 0x80], rax
0x40008f:	lea	rax, [rbp - 0x70]
0x400093:	mov	edx, 0x63
0x400098:	mov	esi, 0x43
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500008
<Block for 0x4000a5, 16 bytes>
0x4000a5:	mov	byte ptr [rbp - 0xd], 0
0x4000a9:	lea	rax, [rbp - 0x70]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500010
<Block for 0x4000b5, 28 bytes>
0x4000b5:	mov	qword ptr [rbp - 0x78], rax
0x4000b9:	mov	qword ptr [rbp - 0x88], 0
0x4000c4:	mov	rax, qword ptr [rbp - 0x88]
0x4000cb:	cmp	rax, qword ptr [rbp - 0x78]
0x4000cf:	jae	0x4000fc
<Block for 0x4000d1, 43 bytes>
0x4000d1:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d5:	mov	rax, qword ptr [rbp - 0x88]
0x4000dc:	add	rax, rdx
0x4000df:	movzx	eax, byte ptr [rax]
0x4000e2:	lea	rcx, [rbp - 0x70]
0x4000e6:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ed:	add	rdx, rcx
0x4000f0:	mov	byte ptr [rdx], al
0x4000f2:	add	qword ptr [rbp - 0x88], 1
0x4000fa:	jmp	0x4000c4
<Block for 0x4000fc, 16 bytes>
0x4000fc:	mov	byte ptr [rbp - 0xd], 0
0x400100:	lea	rax, [rbp - 0x70]
0x400104:	mov	rdi, rax
0x400107:	call	0x500018
<Block for 0x4000c4, 13 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x88]
0x4000cb:	cmp	rax, qword ptr [rbp - 0x78]
0x4000cf:	jae	0x4000fc
<Block for 0x40010c, 7 bytes>
0x40010c:	cmp	qword ptr [rbp - 0x80], 0
0x400111:	je	0x40011f
<Block for 0x40011f, 16 bytes>
0x40011f:	nop	
0x400120:	mov	rax, qword ptr [rbp - 8]
0x400124:	xor	rax, qword ptr fs:[0x28]
0x40012d:	je	0x400134
<Block for 0x400113, 12 bytes>
0x400113:	mov	rax, qword ptr [rbp - 0x80]
0x400117:	mov	rdi, rax
0x40011a:	call	0x500020
<Block for 0x400134, 2 bytes>
0x400134:	leave	
0x400135:	ret	
<Block for 0x40012f, 5 bytes>
0x40012f:	call	0x500028
