<Block for 0x4002c9, 60 bytes>
0x4002c9:	endbr64	
0x4002cd:	push	rbp
0x4002ce:	mov	rbp, rsp
0x4002d1:	sub	rsp, 0x90
0x4002d8:	mov	rax, qword ptr fs:[0x28]
0x4002e1:	mov	qword ptr [rbp - 8], rax
0x4002e5:	xor	eax, eax
0x4002e7:	mov	qword ptr [rbp - 0x80], 0
0x4002ef:	mov	dword ptr [rip + 0xd7], 1
0x4002f9:	mov	rax, qword ptr [rbp - 0x80]
0x4002fd:	mov	rdi, rax
0x400300:	call	0x40027a
<Block for 0x400305, 26 bytes>
0x400305:	mov	qword ptr [rbp - 0x80], rax
0x400309:	lea	rax, [rbp - 0x70]
0x40030d:	mov	edx, 0x63
0x400312:	mov	esi, 0x43
0x400317:	mov	rdi, rax
0x40031a:	call	0x500008
<Block for 0x40031f, 16 bytes>
0x40031f:	mov	byte ptr [rbp - 0xd], 0
0x400323:	lea	rax, [rbp - 0x70]
0x400327:	mov	rdi, rax
0x40032a:	call	0x500010
<Block for 0x40032f, 28 bytes>
0x40032f:	mov	qword ptr [rbp - 0x78], rax
0x400333:	mov	qword ptr [rbp - 0x88], 0
0x40033e:	mov	rax, qword ptr [rbp - 0x88]
0x400345:	cmp	rax, qword ptr [rbp - 0x78]
0x400349:	jae	0x400376
<Block for 0x40034b, 43 bytes>
0x40034b:	mov	rdx, qword ptr [rbp - 0x80]
0x40034f:	mov	rax, qword ptr [rbp - 0x88]
0x400356:	add	rax, rdx
0x400359:	movzx	eax, byte ptr [rax]
0x40035c:	lea	rcx, [rbp - 0x70]
0x400360:	mov	rdx, qword ptr [rbp - 0x88]
0x400367:	add	rdx, rcx
0x40036a:	mov	byte ptr [rdx], al
0x40036c:	add	qword ptr [rbp - 0x88], 1
0x400374:	jmp	0x40033e
<Block for 0x400376, 16 bytes>
0x400376:	mov	byte ptr [rbp - 0xd], 0
0x40037a:	lea	rax, [rbp - 0x70]
0x40037e:	mov	rdi, rax
0x400381:	call	0x500018
<Block for 0x40033e, 13 bytes>
0x40033e:	mov	rax, qword ptr [rbp - 0x88]
0x400345:	cmp	rax, qword ptr [rbp - 0x78]
0x400349:	jae	0x400376
<Block for 0x400386, 7 bytes>
0x400386:	cmp	qword ptr [rbp - 0x80], 0
0x40038b:	je	0x400399
<Block for 0x400399, 16 bytes>
0x400399:	nop	
0x40039a:	mov	rax, qword ptr [rbp - 8]
0x40039e:	xor	rax, qword ptr fs:[0x28]
0x4003a7:	je	0x4003ae
<Block for 0x40038d, 12 bytes>
0x40038d:	mov	rax, qword ptr [rbp - 0x80]
0x400391:	mov	rdi, rax
0x400394:	call	0x500020
<Block for 0x4003ae, 2 bytes>
0x4003ae:	leave	
0x4003af:	ret	
<Block for 0x4003a9, 5 bytes>
0x4003a9:	call	0x500028
