<Block for 0x400193, 60 bytes>
0x400193:	endbr64	
0x400197:	push	rbp
0x400198:	mov	rbp, rsp
0x40019b:	sub	rsp, 0x90
0x4001a2:	mov	rax, qword ptr fs:[0x28]
0x4001ab:	mov	qword ptr [rbp - 8], rax
0x4001af:	xor	eax, eax
0x4001b1:	mov	qword ptr [rbp - 0x80], 0
0x4001b9:	mov	dword ptr [rip + 0x209], 0
0x4001c3:	mov	rax, qword ptr [rbp - 0x80]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x400136
<Block for 0x4001cf, 26 bytes>
0x4001cf:	mov	qword ptr [rbp - 0x80], rax
0x4001d3:	lea	rax, [rbp - 0x70]
0x4001d7:	mov	edx, 0x63
0x4001dc:	mov	esi, 0x43
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500008
<Block for 0x4001e9, 16 bytes>
0x4001e9:	mov	byte ptr [rbp - 0xd], 0
0x4001ed:	lea	rax, [rbp - 0x70]
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500010
<Block for 0x4001f9, 28 bytes>
0x4001f9:	mov	qword ptr [rbp - 0x78], rax
0x4001fd:	mov	qword ptr [rbp - 0x88], 0
0x400208:	mov	rax, qword ptr [rbp - 0x88]
0x40020f:	cmp	rax, qword ptr [rbp - 0x78]
0x400213:	jae	0x400240
<Block for 0x400215, 43 bytes>
0x400215:	mov	rdx, qword ptr [rbp - 0x80]
0x400219:	mov	rax, qword ptr [rbp - 0x88]
0x400220:	add	rax, rdx
0x400223:	movzx	eax, byte ptr [rax]
0x400226:	lea	rcx, [rbp - 0x70]
0x40022a:	mov	rdx, qword ptr [rbp - 0x88]
0x400231:	add	rdx, rcx
0x400234:	mov	byte ptr [rdx], al
0x400236:	add	qword ptr [rbp - 0x88], 1
0x40023e:	jmp	0x400208
<Block for 0x400240, 16 bytes>
0x400240:	mov	byte ptr [rbp - 0xd], 0
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500018
<Block for 0x400208, 13 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0x88]
0x40020f:	cmp	rax, qword ptr [rbp - 0x78]
0x400213:	jae	0x400240
<Block for 0x400250, 7 bytes>
0x400250:	cmp	qword ptr [rbp - 0x80], 0
0x400255:	je	0x400263
<Block for 0x400263, 16 bytes>
0x400263:	nop	
0x400264:	mov	rax, qword ptr [rbp - 8]
0x400268:	xor	rax, qword ptr fs:[0x28]
0x400271:	je	0x400278
<Block for 0x400257, 12 bytes>
0x400257:	mov	rax, qword ptr [rbp - 0x80]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500020
<Block for 0x400278, 2 bytes>
0x400278:	leave	
0x400279:	ret	
<Block for 0x400273, 5 bytes>
0x400273:	call	0x500028
