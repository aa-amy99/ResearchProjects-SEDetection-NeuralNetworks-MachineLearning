<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0x25c]
0x400024:	cmp	eax, 5
0x400027:	jne	0x40008b
<Block for 0x400029, 39 bytes>
0x400029:	pxor	xmm0, xmm0
0x40002d:	movsd	qword ptr [rbp - 0x118], xmm0
0x400035:	mov	rdx, qword ptr [rip + 0xfffc4]
0x40003c:	lea	rax, [rbp - 0x110]
0x400043:	mov	esi, 0x100
0x400048:	mov	rdi, rax
0x40004b:	call	0x500008
<Block for 0x40008b, 16 bytes>
0x40008b:	nop	
0x40008c:	mov	rax, qword ptr [rbp - 8]
0x400090:	xor	rax, qword ptr fs:[0x28]
0x400099:	je	0x4000a0
<Block for 0x400050, 5 bytes>
0x400050:	test	rax, rax
0x400053:	je	0x400072
<Block for 0x4000a0, 2 bytes>
0x4000a0:	leave	
0x4000a1:	ret	
<Block for 0x40009b, 5 bytes>
0x40009b:	call	0x500028
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0x20f]
0x400079:	call	0x500018
<Block for 0x400055, 15 bytes>
0x400055:	lea	rax, [rbp - 0x110]
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500010
<Block for 0x40007e, 13 bytes>
0x40007e:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x400086:	call	0x500020
<Block for 0x400064, 14 bytes>
0x400064:	movq	rax, xmm0
0x400069:	mov	qword ptr [rbp - 0x118], rax
0x400070:	jmp	0x40007e
