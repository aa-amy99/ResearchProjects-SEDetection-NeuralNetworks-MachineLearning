<Block for 0x40004c, 22 bytes>
0x40004c:	endbr64	
0x400050:	push	rbp
0x400051:	mov	rbp, rsp
0x400054:	sub	rsp, 0x20
0x400058:	mov	edi, 4
0x40005d:	call	0x500000
<Block for 0x400062, 24 bytes>
0x400062:	mov	qword ptr [rbp - 0x18], rax
0x400066:	mov	rax, qword ptr [rbp - 0x18]
0x40006a:	mov	dword ptr [rax], 5
0x400070:	mov	edi, 8
0x400075:	call	0x500000
<Block for 0x40007a, 39 bytes>
0x40007a:	mov	qword ptr [rbp - 0x10], rax
0x40007e:	mov	rax, qword ptr [rbp - 0x10]
0x400082:	mov	rdx, qword ptr [rbp - 0x18]
0x400086:	mov	qword ptr [rax], rdx
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	mov	rax, qword ptr [rax]
0x400090:	mov	qword ptr [rbp - 8], rax
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	mov	eax, dword ptr [rax]
0x40009a:	mov	edi, eax
0x40009c:	call	0x500010
<Block for 0x4000a1, 9 bytes>
0x4000a1:	mov	rax, qword ptr [rbp - 0x10]
0x4000a5:	test	rax, rax
0x4000a8:	je	0x4000b7
<Block for 0x4000b7, 4 bytes>
0x4000b7:	nop	
0x4000b8:	nop	
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000aa, 13 bytes>
0x4000aa:	mov	esi, 8
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500008
