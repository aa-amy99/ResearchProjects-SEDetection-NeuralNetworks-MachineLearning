<Block for 0x4000d8, 44 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	add	rsp, -0x80
0x4000e4:	mov	rax, qword ptr fs:[0x28]
0x4000ed:	mov	qword ptr [rbp - 8], rax
0x4000f1:	xor	eax, eax
0x4000f3:	mov	qword ptr [rbp - 0x80], 0
0x4000fb:	mov	eax, 0
0x400100:	test	eax, eax
0x400102:	je	0x400112
<Block for 0x400112, 10 bytes>
0x400112:	mov	edi, 0x64
0x400117:	call	0x500000
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x1ad]
0x40010b:	call	0x500020
<Block for 0x40011c, 11 bytes>
0x40011c:	mov	qword ptr [rbp - 0x78], rax
0x400120:	cmp	qword ptr [rbp - 0x78], 0
0x400125:	jne	0x400131
<Block for 0x400110, 2 bytes>
0x400110:	jmp	0x40015a
<Block for 0x400127, 10 bytes>
0x400127:	mov	edi, 0xffffffff
0x40012c:	call	0x500008
<Block for 0x400131, 22 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x78]
0x400135:	mov	edx, 0x63
0x40013a:	mov	esi, 0x41
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x40015a, 22 bytes>
0x40015a:	lea	rax, [rbp - 0x70]
0x40015e:	mov	edx, 0x63
0x400163:	mov	esi, 0x43
0x400168:	mov	rdi, rax
0x40016b:	call	0x500010
<Block for 0x400147, 41 bytes>
0x400147:	mov	rax, qword ptr [rbp - 0x78]
0x40014b:	add	rax, 0x63
0x40014f:	mov	byte ptr [rax], 0
0x400152:	mov	rax, qword ptr [rbp - 0x78]
0x400156:	mov	qword ptr [rbp - 0x80], rax
0x40015a:	lea	rax, [rbp - 0x70]
0x40015e:	mov	edx, 0x63
0x400163:	mov	esi, 0x43
0x400168:	mov	rdi, rax
0x40016b:	call	0x500010
<Block for 0x400170, 28 bytes>
0x400170:	mov	byte ptr [rbp - 0xd], 0
0x400174:	lea	rcx, [rbp - 0x70]
0x400178:	mov	rax, qword ptr [rbp - 0x80]
0x40017c:	mov	edx, 0x64
0x400181:	mov	rsi, rcx
0x400184:	mov	rdi, rax
0x400187:	call	0x500018
<Block for 0x40018c, 23 bytes>
0x40018c:	mov	rax, qword ptr [rbp - 0x80]
0x400190:	add	rax, 0x63
0x400194:	mov	byte ptr [rax], 0
0x400197:	mov	rax, qword ptr [rbp - 0x80]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500020
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500028
