<Block for 0x4000f1, 48 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	push	rbx
0x4000fa:	sub	rsp, 0x58
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 0x18], rax
0x40010b:	xor	eax, eax
0x40010d:	mov	qword ptr [rbp - 0x58], 5
0x400115:	lea	rax, [rbp - 0x50]
0x400119:	mov	rdi, rax
0x40011c:	call	0x40039e
<Block for 0x400121, 27 bytes>
0x400121:	lea	rax, [rbp - 0x58]
0x400125:	mov	qword ptr [rbp - 0x60], rax
0x400129:	lea	rdx, [rbp - 0x60]
0x40012d:	lea	rax, [rbp - 0x50]
0x400131:	mov	rsi, rdx
0x400134:	mov	rdi, rax
0x400137:	call	0x4004a8
<Block for 0x40013c, 19 bytes>
0x40013c:	lea	rdx, [rbp - 0x60]
0x400140:	lea	rax, [rbp - 0x50]
0x400144:	mov	rsi, rdx
0x400147:	mov	rdi, rax
0x40014a:	call	0x4004a8
<Block for 0x40014f, 19 bytes>
0x40014f:	lea	rdx, [rbp - 0x60]
0x400153:	lea	rax, [rbp - 0x50]
0x400157:	mov	rsi, rdx
0x40015a:	mov	rdi, rax
0x40015d:	call	0x4004a8
<Block for 0x400162, 19 bytes>
0x400162:	lea	rdx, [rbp - 0x50]
0x400166:	lea	rax, [rbp - 0x30]
0x40016a:	mov	rsi, rdx
0x40016d:	mov	rdi, rax
0x400170:	call	0x4004e2
<Block for 0x400175, 12 bytes>
0x400175:	lea	rax, [rbp - 0x30]
0x400179:	mov	rdi, rax
0x40017c:	call	0x500018
<Block for 0x400181, 12 bytes>
0x400181:	lea	rax, [rbp - 0x30]
0x400185:	mov	rdi, rax
0x400188:	call	0x4003be
<Block for 0x40018d, 12 bytes>
0x40018d:	lea	rax, [rbp - 0x50]
0x400191:	mov	rdi, rax
0x400194:	call	0x4003be
<Block for 0x400199, 16 bytes>
0x400199:	nop	
0x40019a:	mov	rax, qword ptr [rbp - 0x18]
0x40019e:	xor	rax, qword ptr fs:[0x28]
0x4001a7:	je	0x4001e3
<Block for 0x4001e3, 7 bytes>
0x4001e3:	add	rsp, 0x58
0x4001e7:	pop	rbx
0x4001e8:	pop	rbp
0x4001e9:	ret	
<Block for 0x4001a9, 2 bytes>
0x4001a9:	jmp	0x4001de
<Block for 0x4001de, 5 bytes>
0x4001de:	call	0x500010
