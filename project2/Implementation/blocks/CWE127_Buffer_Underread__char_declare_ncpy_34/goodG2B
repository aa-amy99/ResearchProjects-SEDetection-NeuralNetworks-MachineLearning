<Block for 0x4000cf, 55 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	sub	rsp, 0x100
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	lea	rax, [rbp - 0xe0]
0x4000f4:	mov	edx, 0x63
0x4000f9:	mov	esi, 0x41
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500000
<Block for 0x400106, 68 bytes>
0x400106:	mov	byte ptr [rbp - 0x7d], 0
0x40010a:	lea	rax, [rbp - 0xe0]
0x400111:	mov	qword ptr [rbp - 0xf0], rax
0x400118:	mov	rax, qword ptr [rbp - 0xf0]
0x40011f:	mov	qword ptr [rbp - 0xf8], rax
0x400126:	mov	rax, qword ptr [rbp - 0xf8]
0x40012d:	mov	qword ptr [rbp - 0xe8], rax
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	edx, 0x63
0x40013d:	mov	esi, 0x43
0x400142:	mov	rdi, rax
0x400145:	call	0x500000
<Block for 0x40014a, 16 bytes>
0x40014a:	mov	byte ptr [rbp - 0xd], 0
0x40014e:	lea	rax, [rbp - 0x70]
0x400152:	mov	rdi, rax
0x400155:	call	0x500008
<Block for 0x40015a, 25 bytes>
0x40015a:	mov	rdx, rax
0x40015d:	mov	rcx, qword ptr [rbp - 0xe8]
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	rsi, rcx
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500010
<Block for 0x400173, 16 bytes>
0x400173:	mov	byte ptr [rbp - 0xd], 0
0x400177:	lea	rax, [rbp - 0x70]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500018
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500020
