<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	lea	rax, [rbp - 0x1c]
0x400026:	mov	rdi, rax
0x400029:	call	0x500000
<Block for 0x40002e, 17 bytes>
0x40002e:	mov	eax, dword ptr [rbp - 0x1c]
0x400031:	cdqe	
0x400033:	shl	rax, 2
0x400037:	mov	rdi, rax
0x40003a:	call	0x500008
<Block for 0x40003f, 11 bytes>
0x40003f:	mov	qword ptr [rbp - 0x10], rax
0x400043:	cmp	qword ptr [rbp - 0x10], 0
0x400048:	jne	0x400054
<Block for 0x40004a, 10 bytes>
0x40004a:	mov	edi, 0xffffffff
0x40004f:	call	0x500010
<Block for 0x400054, 19 bytes>
0x400054:	mov	qword ptr [rbp - 0x18], 0
0x40005c:	mov	eax, dword ptr [rbp - 0x1c]
0x40005f:	cdqe	
0x400061:	cmp	qword ptr [rbp - 0x18], rax
0x400065:	jae	0x400087
<Block for 0x400067, 32 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	lea	rdx, [rax*4]
0x400073:	mov	rax, qword ptr [rbp - 0x10]
0x400077:	add	rax, rdx
0x40007a:	mov	dword ptr [rax], 0
0x400080:	add	qword ptr [rbp - 0x18], 1
0x400085:	jmp	0x40005c
<Block for 0x400087, 13 bytes>
0x400087:	mov	rax, qword ptr [rbp - 0x10]
0x40008b:	mov	eax, dword ptr [rax]
0x40008d:	mov	edi, eax
0x40008f:	call	0x500018
<Block for 0x40005c, 11 bytes>
0x40005c:	mov	eax, dword ptr [rbp - 0x1c]
0x40005f:	cdqe	
0x400061:	cmp	qword ptr [rbp - 0x18], rax
0x400065:	jae	0x400087
<Block for 0x400094, 12 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x10]
0x400098:	mov	rdi, rax
0x40009b:	call	0x500020
<Block for 0x4000a0, 16 bytes>
0x4000a0:	nop	
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	xor	rax, qword ptr fs:[0x28]
0x4000ae:	je	0x4000b5
<Block for 0x4000b5, 2 bytes>
0x4000b5:	leave	
0x4000b6:	ret	
<Block for 0x4000b0, 5 bytes>
0x4000b0:	call	0x500028
