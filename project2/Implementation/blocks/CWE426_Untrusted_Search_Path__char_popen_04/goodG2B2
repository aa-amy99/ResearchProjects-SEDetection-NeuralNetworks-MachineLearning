<Block for 0x4001e9, 147 bytes>
0x4001e9:	endbr64	
0x4001ed:	push	rbp
0x4001ee:	mov	rbp, rsp
0x4001f1:	add	rsp, -0x80
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	xor	eax, eax
0x400204:	mov	qword ptr [rbp - 0x70], 0
0x40020c:	mov	qword ptr [rbp - 0x68], 0
0x400214:	mov	qword ptr [rbp - 0x60], 0
0x40021c:	mov	qword ptr [rbp - 0x58], 0
0x400224:	mov	qword ptr [rbp - 0x50], 0
0x40022c:	mov	qword ptr [rbp - 0x48], 0
0x400234:	mov	qword ptr [rbp - 0x40], 0
0x40023c:	mov	qword ptr [rbp - 0x38], 0
0x400244:	mov	qword ptr [rbp - 0x30], 0
0x40024c:	mov	qword ptr [rbp - 0x28], 0
0x400254:	mov	qword ptr [rbp - 0x20], 0
0x40025c:	mov	qword ptr [rbp - 0x18], 0
0x400264:	mov	dword ptr [rbp - 0x10], 0
0x40026b:	lea	rax, [rbp - 0x70]
0x40026f:	mov	qword ptr [rbp - 0x80], rax
0x400273:	mov	eax, 1
0x400278:	test	eax, eax
0x40027a:	je	0x40029b
<Block for 0x40029b, 19 bytes>
0x40029b:	mov	rax, qword ptr [rbp - 0x80]
0x40029f:	lea	rsi, [rip + 0x5e]
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x500000
<Block for 0x40027c, 50 bytes>
0x40027c:	mov	rax, qword ptr [rbp - 0x80]
0x400280:	movabs	rdx, 0x6e69622f7273752f
0x40028a:	movabs	rcx, 0x616c2d20736c2f
0x400294:	mov	qword ptr [rax], rdx
0x400297:	mov	qword ptr [rax + 8], rcx
0x40029b:	mov	rax, qword ptr [rbp - 0x80]
0x40029f:	lea	rsi, [rip + 0x5e]
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x500000
<Block for 0x4002ae, 11 bytes>
0x4002ae:	mov	qword ptr [rbp - 0x78], rax
0x4002b2:	cmp	qword ptr [rbp - 0x78], 0
0x4002b7:	je	0x4002c5
<Block for 0x4002c5, 16 bytes>
0x4002c5:	nop	
0x4002c6:	mov	rax, qword ptr [rbp - 8]
0x4002ca:	xor	rax, qword ptr fs:[0x28]
0x4002d3:	je	0x4002da
<Block for 0x4002b9, 12 bytes>
0x4002b9:	mov	rax, qword ptr [rbp - 0x78]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500008
<Block for 0x4002da, 2 bytes>
0x4002da:	leave	
0x4002db:	ret	
<Block for 0x4002d5, 5 bytes>
0x4002d5:	call	0x500010
