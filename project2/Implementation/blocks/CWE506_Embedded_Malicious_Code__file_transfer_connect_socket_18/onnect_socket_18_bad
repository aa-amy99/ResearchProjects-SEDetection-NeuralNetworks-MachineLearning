<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 53 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	nop	
0x400036:	endbr64	
0x40003a:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x400044:	lea	rsi, [rip + 0x15f]
0x40004b:	lea	rdi, [rip + 0x15a]
0x400052:	call	0x500000
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400057, 17 bytes>
0x400057:	mov	qword ptr [rbp - 0x10038], rax
0x40005e:	cmp	qword ptr [rbp - 0x10038], 0
0x400066:	je	0x4000aa
<Block for 0x4000aa, 20 bytes>
0x4000aa:	mov	edx, 6
0x4000af:	mov	esi, 1
0x4000b4:	mov	edi, 2
0x4000b9:	call	0x500020
<Block for 0x400068, 27 bytes>
0x400068:	mov	rdx, qword ptr [rbp - 0x10038]
0x40006f:	lea	rax, [rbp - 0x10020]
0x400076:	mov	esi, 0xffff
0x40007b:	mov	rdi, rax
0x40007e:	call	0x500008
<Block for 0x4000be, 19 bytes>
0x4000be:	mov	dword ptr [rbp - 0x1003c], eax
0x4000c4:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000cb:	je	0x400171
<Block for 0x400083, 5 bytes>
0x400083:	test	rax, rax
0x400086:	jne	0x40009b
<Block for 0x400171, 3 bytes>
0x400171:	nop	
0x400172:	jmp	0x400175
<Block for 0x4000d1, 25 bytes>
0x4000d1:	lea	rax, [rbp - 0x10030]
0x4000d8:	mov	edx, 0x10
0x4000dd:	mov	esi, 0
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500028
<Block for 0x400088, 12 bytes>
0x400088:	lea	rdi, [rip + 0x126]
0x40008f:	call	0x500010
<Block for 0x40009b, 15 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x10038]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500018
<Block for 0x400175, 9 bytes>
0x400175:	cmp	dword ptr [rbp - 0x1003c], -1
0x40017c:	je	0x40018b
<Block for 0x4000ea, 29 bytes>
0x4000ea:	mov	word ptr [rbp - 0x10030], 2
0x4000f3:	mov	dword ptr [rbp - 0x1002c], 0
0x4000fd:	mov	edi, 0x6987
0x400102:	call	0x500030
<Block for 0x400094, 22 bytes>
0x400094:	mov	byte ptr [rbp - 0x10020], 0
0x40009b:	mov	rax, qword ptr [rbp - 0x10038]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500018
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 0x18]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001a0
<Block for 0x40017e, 13 bytes>
0x40017e:	mov	eax, dword ptr [rbp - 0x1003c]
0x400184:	mov	edi, eax
0x400186:	call	0x500050
<Block for 0x400107, 35 bytes>
0x400107:	mov	word ptr [rbp - 0x1002e], ax
0x40010e:	lea	rcx, [rbp - 0x10030]
0x400115:	mov	eax, dword ptr [rbp - 0x1003c]
0x40011b:	mov	edx, 0x10
0x400120:	mov	rsi, rcx
0x400123:	mov	edi, eax
0x400125:	call	0x500038
<Block for 0x4001a0, 10 bytes>
0x4001a0:	add	rsp, 0x10038
0x4001a7:	pop	rbx
0x4001a8:	pop	rbp
0x4001a9:	ret	
<Block for 0x40019b, 5 bytes>
0x40019b:	call	0x500058
<Block for 0x40012a, 5 bytes>
0x40012a:	cmp	eax, -1
0x40012d:	je	0x400174
<Block for 0x40012f, 15 bytes>
0x40012f:	lea	rax, [rbp - 0x10020]
0x400136:	mov	rdi, rax
0x400139:	call	0x500040
<Block for 0x400174, 1 bytes>
0x400174:	nop	
<Block for 0x40013e, 28 bytes>
0x40013e:	mov	rdx, rax
0x400141:	lea	rsi, [rbp - 0x10020]
0x400148:	mov	eax, dword ptr [rbp - 0x1003c]
0x40014e:	mov	ecx, 0
0x400153:	mov	edi, eax
0x400155:	call	0x500048
<Block for 0x40015a, 18 bytes>
0x40015a:	mov	rbx, rax
0x40015d:	lea	rax, [rbp - 0x10020]
0x400164:	mov	rdi, rax
0x400167:	call	0x500040
<Block for 0x40016c, 5 bytes>
0x40016c:	cmp	rbx, rax
0x40016f:	jmp	0x400175
