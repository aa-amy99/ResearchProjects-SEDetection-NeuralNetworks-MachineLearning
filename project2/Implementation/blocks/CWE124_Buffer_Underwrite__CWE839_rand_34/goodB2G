<Block for 0x4001b8, 40 bytes>
0x4001b8:	endbr64	
0x4001bc:	push	rbp
0x4001bd:	mov	rbp, rsp
0x4001c0:	push	rbx
0x4001c1:	sub	rsp, 0x48
0x4001c5:	mov	rax, qword ptr fs:[0x28]
0x4001ce:	mov	qword ptr [rbp - 0x18], rax
0x4001d2:	xor	eax, eax
0x4001d4:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001db:	call	0x500000
<Block for 0x4001e0, 7 bytes>
0x4001e0:	and	eax, 1
0x4001e3:	test	eax, eax
0x4001e5:	je	0x400204
<Block for 0x400204, 5 bytes>
0x400204:	call	0x500000
<Block for 0x4001e7, 5 bytes>
0x4001e7:	call	0x500000
<Block for 0x400209, 10 bytes>
0x400209:	shl	eax, 0x1e
0x40020c:	mov	ebx, eax
0x40020e:	call	0x500000
<Block for 0x4001ec, 10 bytes>
0x4001ec:	shl	eax, 0x1e
0x4001ef:	mov	ebx, eax
0x4001f1:	call	0x500000
<Block for 0x400213, 10 bytes>
0x400213:	shl	eax, 0xf
0x400216:	xor	ebx, eax
0x400218:	call	0x500000
<Block for 0x4001f6, 10 bytes>
0x4001f6:	shl	eax, 0xf
0x4001f9:	xor	ebx, eax
0x4001fb:	call	0x500000
<Block for 0x40021d, 65 bytes>
0x40021d:	xor	eax, ebx
0x40021f:	not	eax
0x400221:	mov	dword ptr [rbp - 0x48], eax
0x400224:	mov	eax, dword ptr [rbp - 0x48]
0x400227:	mov	dword ptr [rbp - 0x50], eax
0x40022a:	mov	eax, dword ptr [rbp - 0x50]
0x40022d:	mov	dword ptr [rbp - 0x44], eax
0x400230:	mov	qword ptr [rbp - 0x40], 0
0x400238:	mov	qword ptr [rbp - 0x38], 0
0x400240:	mov	qword ptr [rbp - 0x30], 0
0x400248:	mov	qword ptr [rbp - 0x28], 0
0x400250:	mov	qword ptr [rbp - 0x20], 0
0x400258:	cmp	dword ptr [rbp - 0x44], 0
0x40025c:	js	0x400296
<Block for 0x400200, 4 bytes>
0x400200:	xor	eax, ebx
0x400202:	jmp	0x400221
<Block for 0x400296, 12 bytes>
0x400296:	lea	rdi, [rip + 0x63]
0x40029d:	call	0x500010
<Block for 0x40025e, 6 bytes>
0x40025e:	cmp	dword ptr [rbp - 0x44], 9
0x400262:	jg	0x400296
<Block for 0x400221, 61 bytes>
0x400221:	mov	dword ptr [rbp - 0x48], eax
0x400224:	mov	eax, dword ptr [rbp - 0x48]
0x400227:	mov	dword ptr [rbp - 0x50], eax
0x40022a:	mov	eax, dword ptr [rbp - 0x50]
0x40022d:	mov	dword ptr [rbp - 0x44], eax
0x400230:	mov	qword ptr [rbp - 0x40], 0
0x400238:	mov	qword ptr [rbp - 0x38], 0
0x400240:	mov	qword ptr [rbp - 0x30], 0
0x400248:	mov	qword ptr [rbp - 0x28], 0
0x400250:	mov	qword ptr [rbp - 0x20], 0
0x400258:	cmp	dword ptr [rbp - 0x44], 0
0x40025c:	js	0x400296
<Block for 0x4002a2, 16 bytes>
0x4002a2:	nop	
0x4002a3:	mov	rax, qword ptr [rbp - 0x18]
0x4002a7:	xor	rax, qword ptr fs:[0x28]
0x4002b0:	je	0x4002b7
<Block for 0x400264, 22 bytes>
0x400264:	mov	eax, dword ptr [rbp - 0x44]
0x400267:	cdqe	
0x400269:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400271:	mov	dword ptr [rbp - 0x4c], 0
0x400278:	jmp	0x40028e
<Block for 0x4002b7, 7 bytes>
0x4002b7:	add	rsp, 0x48
0x4002bb:	pop	rbx
0x4002bc:	pop	rbp
0x4002bd:	ret	
<Block for 0x4002b2, 5 bytes>
0x4002b2:	call	0x500018
<Block for 0x40028e, 6 bytes>
0x40028e:	cmp	dword ptr [rbp - 0x4c], 9
0x400292:	jle	0x40027a
<Block for 0x40027a, 16 bytes>
0x40027a:	mov	eax, dword ptr [rbp - 0x4c]
0x40027d:	cdqe	
0x40027f:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400283:	mov	edi, eax
0x400285:	call	0x500008
<Block for 0x400294, 2 bytes>
0x400294:	jmp	0x4002a2
<Block for 0x40028a, 10 bytes>
0x40028a:	add	dword ptr [rbp - 0x4c], 1
0x40028e:	cmp	dword ptr [rbp - 0x4c], 9
0x400292:	jle	0x40027a
