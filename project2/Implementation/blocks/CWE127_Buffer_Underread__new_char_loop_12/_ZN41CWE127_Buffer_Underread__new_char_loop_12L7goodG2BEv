<Block for 0x400135, 46 bytes>
0x400135:	endbr64	
0x400139:	push	rbp
0x40013a:	mov	rbp, rsp
0x40013d:	sub	rsp, 0x90
0x400144:	mov	rax, qword ptr fs:[0x28]
0x40014d:	mov	qword ptr [rbp - 8], rax
0x400151:	xor	eax, eax
0x400153:	mov	qword ptr [rbp - 0x90], 0
0x40015e:	call	0x500000
<Block for 0x400163, 9 bytes>
0x400163:	test	eax, eax
0x400165:	setne	al
0x400168:	test	al, al
0x40016a:	je	0x4001a8
<Block for 0x4001a8, 10 bytes>
0x4001a8:	mov	edi, 0x64
0x4001ad:	call	0x500008
<Block for 0x40016c, 10 bytes>
0x40016c:	mov	edi, 0x64
0x400171:	call	0x500008
<Block for 0x4001b2, 26 bytes>
0x4001b2:	mov	qword ptr [rbp - 0x80], rax
0x4001b6:	mov	rax, qword ptr [rbp - 0x80]
0x4001ba:	mov	edx, 0x63
0x4001bf:	mov	esi, 0x41
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x500010
<Block for 0x400176, 26 bytes>
0x400176:	mov	qword ptr [rbp - 0x78], rax
0x40017a:	mov	rax, qword ptr [rbp - 0x78]
0x40017e:	mov	edx, 0x63
0x400183:	mov	esi, 0x41
0x400188:	mov	rdi, rax
0x40018b:	call	0x500010
<Block for 0x4001cc, 44 bytes>
0x4001cc:	mov	rax, qword ptr [rbp - 0x80]
0x4001d0:	add	rax, 0x63
0x4001d4:	mov	byte ptr [rax], 0
0x4001d7:	mov	rax, qword ptr [rbp - 0x80]
0x4001db:	mov	qword ptr [rbp - 0x90], rax
0x4001e2:	lea	rax, [rbp - 0x70]
0x4001e6:	mov	edx, 0x63
0x4001eb:	mov	esi, 0x43
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500010
<Block for 0x400190, 24 bytes>
0x400190:	mov	rax, qword ptr [rbp - 0x78]
0x400194:	add	rax, 0x63
0x400198:	mov	byte ptr [rax], 0
0x40019b:	mov	rax, qword ptr [rbp - 0x78]
0x40019f:	mov	qword ptr [rbp - 0x90], rax
0x4001a6:	jmp	0x4001e2
<Block for 0x4001f8, 25 bytes>
0x4001f8:	mov	byte ptr [rbp - 0xd], 0
0x4001fc:	mov	qword ptr [rbp - 0x88], 0
0x400207:	cmp	qword ptr [rbp - 0x88], 0x63
0x40020f:	ja	0x40023f
<Block for 0x4001e2, 22 bytes>
0x4001e2:	lea	rax, [rbp - 0x70]
0x4001e6:	mov	edx, 0x63
0x4001eb:	mov	esi, 0x43
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500010
<Block for 0x400211, 46 bytes>
0x400211:	mov	rdx, qword ptr [rbp - 0x90]
0x400218:	mov	rax, qword ptr [rbp - 0x88]
0x40021f:	add	rax, rdx
0x400222:	movzx	eax, byte ptr [rax]
0x400225:	lea	rcx, [rbp - 0x70]
0x400229:	mov	rdx, qword ptr [rbp - 0x88]
0x400230:	add	rdx, rcx
0x400233:	mov	byte ptr [rdx], al
0x400235:	add	qword ptr [rbp - 0x88], 1
0x40023d:	jmp	0x400207
<Block for 0x40023f, 16 bytes>
0x40023f:	mov	byte ptr [rbp - 0xd], 0
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	rdi, rax
0x40024a:	call	0x500018
<Block for 0x400207, 10 bytes>
0x400207:	cmp	qword ptr [rbp - 0x88], 0x63
0x40020f:	ja	0x40023f
<Block for 0x40024f, 16 bytes>
0x40024f:	nop	
0x400250:	mov	rax, qword ptr [rbp - 8]
0x400254:	xor	rax, qword ptr fs:[0x28]
0x40025d:	je	0x400264
<Block for 0x400264, 2 bytes>
0x400264:	leave	
0x400265:	ret	
<Block for 0x40025f, 5 bytes>
0x40025f:	call	0x500020
