<Block for 0x40030e, 40 bytes>
0x40030e:	endbr64	
0x400312:	push	rbp
0x400313:	mov	rbp, rsp
0x400316:	push	rbx
0x400317:	sub	rsp, 0x58
0x40031b:	mov	rax, qword ptr fs:[0x28]
0x400324:	mov	qword ptr [rbp - 0x18], rax
0x400328:	xor	eax, eax
0x40032a:	lea	rax, [rbp - 0x50]
0x40032e:	mov	rdi, rax
0x400331:	call	0x400528
<Block for 0x400336, 38 bytes>
0x400336:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40033d:	mov	rax, qword ptr [rip + 0xffcbc]
0x400344:	lea	rdx, [rbp - 0x5c]
0x400348:	lea	rsi, [rip + 0x17e]
0x40034f:	mov	rdi, rax
0x400352:	mov	eax, 0
0x400357:	call	0x500008
<Block for 0x40035c, 12 bytes>
0x40035c:	lea	rax, [rbp - 0x50]
0x400360:	mov	rdi, rax
0x400363:	call	0x4006ce
<Block for 0x400368, 23 bytes>
0x400368:	mov	qword ptr [rbp - 0x58], rax
0x40036c:	lea	rdx, [rbp - 0x58]
0x400370:	lea	rax, [rbp - 0x30]
0x400374:	mov	rsi, rdx
0x400377:	mov	rdi, rax
0x40037a:	call	0x40071e
<Block for 0x40037f, 28 bytes>
0x40037f:	lea	rdx, [rbp - 0x5c]
0x400383:	mov	rsi, qword ptr [rbp - 0x30]
0x400387:	lea	rax, [rbp - 0x50]
0x40038b:	mov	rcx, rdx
0x40038e:	mov	edx, 1
0x400393:	mov	rdi, rax
0x400396:	call	0x40074c
<Block for 0x40039b, 12 bytes>
0x40039b:	lea	rax, [rbp - 0x50]
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x4006ce
<Block for 0x4003a7, 23 bytes>
0x4003a7:	mov	qword ptr [rbp - 0x58], rax
0x4003ab:	lea	rdx, [rbp - 0x58]
0x4003af:	lea	rax, [rbp - 0x30]
0x4003b3:	mov	rsi, rdx
0x4003b6:	mov	rdi, rax
0x4003b9:	call	0x40071e
<Block for 0x4003be, 28 bytes>
0x4003be:	lea	rdx, [rbp - 0x5c]
0x4003c2:	mov	rsi, qword ptr [rbp - 0x30]
0x4003c6:	lea	rax, [rbp - 0x50]
0x4003ca:	mov	rcx, rdx
0x4003cd:	mov	edx, 1
0x4003d2:	mov	rdi, rax
0x4003d5:	call	0x40074c
<Block for 0x4003da, 12 bytes>
0x4003da:	lea	rax, [rbp - 0x50]
0x4003de:	mov	rdi, rax
0x4003e1:	call	0x4006ce
<Block for 0x4003e6, 23 bytes>
0x4003e6:	mov	qword ptr [rbp - 0x58], rax
0x4003ea:	lea	rdx, [rbp - 0x58]
0x4003ee:	lea	rax, [rbp - 0x30]
0x4003f2:	mov	rsi, rdx
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x40071e
<Block for 0x4003fd, 28 bytes>
0x4003fd:	lea	rdx, [rbp - 0x5c]
0x400401:	mov	rsi, qword ptr [rbp - 0x30]
0x400405:	lea	rax, [rbp - 0x50]
0x400409:	mov	rcx, rdx
0x40040c:	mov	edx, 1
0x400411:	mov	rdi, rax
0x400414:	call	0x40074c
<Block for 0x400419, 19 bytes>
0x400419:	lea	rdx, [rbp - 0x50]
0x40041d:	lea	rax, [rbp - 0x30]
0x400421:	mov	rsi, rdx
0x400424:	mov	rdi, rax
0x400427:	call	0x400812
<Block for 0x40042c, 12 bytes>
0x40042c:	lea	rax, [rbp - 0x30]
0x400430:	mov	rdi, rax
0x400433:	call	0x500030
<Block for 0x400438, 12 bytes>
0x400438:	lea	rax, [rbp - 0x30]
0x40043c:	mov	rdi, rax
0x40043f:	call	0x400686
<Block for 0x400444, 12 bytes>
0x400444:	lea	rax, [rbp - 0x50]
0x400448:	mov	rdi, rax
0x40044b:	call	0x400686
<Block for 0x400450, 16 bytes>
0x400450:	nop	
0x400451:	mov	rax, qword ptr [rbp - 0x18]
0x400455:	xor	rax, qword ptr fs:[0x28]
0x40045e:	je	0x40049a
<Block for 0x40049a, 7 bytes>
0x40049a:	add	rsp, 0x58
0x40049e:	pop	rbx
0x40049f:	pop	rbp
0x4004a0:	ret	
<Block for 0x400460, 2 bytes>
0x400460:	jmp	0x400495
<Block for 0x400495, 5 bytes>
0x400495:	call	0x500020
