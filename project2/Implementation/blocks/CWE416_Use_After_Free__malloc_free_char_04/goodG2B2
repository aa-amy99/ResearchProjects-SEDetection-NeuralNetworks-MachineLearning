<Block for 0x4001f1, 29 bytes>
0x4001f1:	endbr64	
0x4001f5:	push	rbp
0x4001f6:	mov	rbp, rsp
0x4001f9:	sub	rsp, 0x10
0x4001fd:	mov	qword ptr [rbp - 8], 0
0x400205:	mov	eax, 1
0x40020a:	test	eax, eax
0x40020c:	je	0x40024e
<Block for 0x40024e, 9 bytes>
0x40024e:	mov	eax, 1
0x400253:	test	eax, eax
0x400255:	je	0x400263
<Block for 0x40020e, 10 bytes>
0x40020e:	mov	edi, 0x64
0x400213:	call	0x500000
<Block for 0x400263, 3 bytes>
0x400263:	nop	
0x400264:	leave	
0x400265:	ret	
<Block for 0x400257, 12 bytes>
0x400257:	mov	rax, qword ptr [rbp - 8]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500020
<Block for 0x400218, 11 bytes>
0x400218:	mov	qword ptr [rbp - 8], rax
0x40021c:	cmp	qword ptr [rbp - 8], 0
0x400221:	jne	0x40022d
<Block for 0x400223, 10 bytes>
0x400223:	mov	edi, 0xffffffff
0x400228:	call	0x500008
<Block for 0x40022d, 22 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 8]
0x400231:	mov	edx, 0x63
0x400236:	mov	esi, 0x41
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500010
<Block for 0x400243, 20 bytes>
0x400243:	mov	rax, qword ptr [rbp - 8]
0x400247:	add	rax, 0x63
0x40024b:	mov	byte ptr [rax], 0
0x40024e:	mov	eax, 1
0x400253:	test	eax, eax
0x400255:	je	0x400263
