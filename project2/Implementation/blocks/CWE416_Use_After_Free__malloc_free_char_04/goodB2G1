<Block for 0x400081, 29 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x10
0x40008d:	mov	qword ptr [rbp - 8], 0
0x400095:	mov	eax, 1
0x40009a:	test	eax, eax
0x40009c:	je	0x4000ea
<Block for 0x4000ea, 9 bytes>
0x4000ea:	mov	eax, 0
0x4000ef:	test	eax, eax
0x4000f1:	je	0x4000ff
<Block for 0x40009e, 10 bytes>
0x40009e:	mov	edi, 0x64
0x4000a3:	call	0x500000
<Block for 0x4000ff, 3 bytes>
0x4000ff:	nop	
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000f3, 12 bytes>
0x4000f3:	lea	rdi, [rip + 0x1aa]
0x4000fa:	call	0x500020
<Block for 0x4000a8, 11 bytes>
0x4000a8:	mov	qword ptr [rbp - 8], rax
0x4000ac:	cmp	qword ptr [rbp - 8], 0
0x4000b1:	jne	0x4000bd
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	edi, 0xffffffff
0x4000b8:	call	0x500008
<Block for 0x4000bd, 22 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	mov	edx, 0x63
0x4000c6:	mov	esi, 0x41
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500010
<Block for 0x4000d3, 23 bytes>
0x4000d3:	mov	rax, qword ptr [rbp - 8]
0x4000d7:	add	rax, 0x63
0x4000db:	mov	byte ptr [rax], 0
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500018
