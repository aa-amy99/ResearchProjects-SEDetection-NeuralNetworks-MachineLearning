<Block for 0x400250, 52 bytes>
0x400250:	endbr64	
0x400254:	push	rbp
0x400255:	mov	rbp, rsp
0x400258:	push	rbx
0x400259:	sub	rsp, 0x88
0x400260:	mov	rax, qword ptr fs:[0x28]
0x400269:	mov	qword ptr [rbp - 0x18], rax
0x40026d:	xor	eax, eax
0x40026f:	mov	qword ptr [rbp - 0x90], 0
0x40027a:	mov	edi, 0x64
0x40027f:	call	0x500000
<Block for 0x400284, 32 bytes>
0x400284:	mov	qword ptr [rbp - 0x88], rax
0x40028b:	mov	rax, qword ptr [rbp - 0x88]
0x400292:	mov	edx, 0x63
0x400297:	mov	esi, 0x41
0x40029c:	mov	rdi, rax
0x40029f:	call	0x500008
<Block for 0x4002a4, 51 bytes>
0x4002a4:	mov	rax, qword ptr [rbp - 0x88]
0x4002ab:	add	rax, 0x63
0x4002af:	mov	byte ptr [rax], 0
0x4002b2:	mov	rax, qword ptr [rbp - 0x88]
0x4002b9:	mov	qword ptr [rbp - 0x90], rax
0x4002c0:	nop	
0x4002c1:	lea	rax, [rbp - 0x80]
0x4002c5:	mov	edx, 0x63
0x4002ca:	mov	esi, 0x43
0x4002cf:	mov	rdi, rax
0x4002d2:	call	0x500008
<Block for 0x4002d7, 128 bytes>
0x4002d7:	mov	byte ptr [rbp - 0x1d], 0
0x4002db:	mov	rax, qword ptr [rbp - 0x90]
0x4002e2:	mov	rcx, qword ptr [rax]
0x4002e5:	mov	rbx, qword ptr [rax + 8]
0x4002e9:	mov	qword ptr [rbp - 0x80], rcx
0x4002ed:	mov	qword ptr [rbp - 0x78], rbx
0x4002f1:	mov	rcx, qword ptr [rax + 0x10]
0x4002f5:	mov	rbx, qword ptr [rax + 0x18]
0x4002f9:	mov	qword ptr [rbp - 0x70], rcx
0x4002fd:	mov	qword ptr [rbp - 0x68], rbx
0x400301:	mov	rcx, qword ptr [rax + 0x20]
0x400305:	mov	rbx, qword ptr [rax + 0x28]
0x400309:	mov	qword ptr [rbp - 0x60], rcx
0x40030d:	mov	qword ptr [rbp - 0x58], rbx
0x400311:	mov	rcx, qword ptr [rax + 0x30]
0x400315:	mov	rbx, qword ptr [rax + 0x38]
0x400319:	mov	qword ptr [rbp - 0x50], rcx
0x40031d:	mov	qword ptr [rbp - 0x48], rbx
0x400321:	mov	rcx, qword ptr [rax + 0x40]
0x400325:	mov	rbx, qword ptr [rax + 0x48]
0x400329:	mov	qword ptr [rbp - 0x40], rcx
0x40032d:	mov	qword ptr [rbp - 0x38], rbx
0x400331:	mov	rcx, qword ptr [rax + 0x50]
0x400335:	mov	rbx, qword ptr [rax + 0x58]
0x400339:	mov	qword ptr [rbp - 0x30], rcx
0x40033d:	mov	qword ptr [rbp - 0x28], rbx
0x400341:	mov	eax, dword ptr [rax + 0x60]
0x400344:	mov	dword ptr [rbp - 0x20], eax
0x400347:	mov	byte ptr [rbp - 0x1d], 0
0x40034b:	lea	rax, [rbp - 0x80]
0x40034f:	mov	rdi, rax
0x400352:	call	0x500010
<Block for 0x400357, 16 bytes>
0x400357:	nop	
0x400358:	mov	rax, qword ptr [rbp - 0x18]
0x40035c:	xor	rax, qword ptr fs:[0x28]
0x400365:	je	0x40036c
<Block for 0x40036c, 10 bytes>
0x40036c:	add	rsp, 0x88
0x400373:	pop	rbx
0x400374:	pop	rbp
0x400375:	ret	
<Block for 0x400367, 5 bytes>
0x400367:	call	0x500018
