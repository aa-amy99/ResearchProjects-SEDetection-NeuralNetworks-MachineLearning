<Block for 0x400243, 43 bytes>
0x400243:	endbr64	
0x400247:	push	rbp
0x400248:	mov	rbp, rsp
0x40024b:	sub	rsp, 0x40
0x40024f:	mov	rax, qword ptr fs:[0x28]
0x400258:	mov	qword ptr [rbp - 8], rax
0x40025c:	xor	eax, eax
0x40025e:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400265:	mov	eax, 0
0x40026a:	test	eax, eax
0x40026c:	je	0x40027c
<Block for 0x40027c, 16 bytes>
0x40027c:	mov	dword ptr [rbp - 0x34], 7
0x400283:	mov	eax, 1
0x400288:	test	eax, eax
0x40028a:	je	0x4002d8
<Block for 0x40026e, 12 bytes>
0x40026e:	lea	rdi, [rip + 0x17a]
0x400275:	call	0x500018
<Block for 0x4002d8, 16 bytes>
0x4002d8:	nop	
0x4002d9:	mov	rax, qword ptr [rbp - 8]
0x4002dd:	xor	rax, qword ptr fs:[0x28]
0x4002e6:	je	0x4002ed
<Block for 0x40028c, 46 bytes>
0x40028c:	mov	qword ptr [rbp - 0x30], 0
0x400294:	mov	qword ptr [rbp - 0x28], 0
0x40029c:	mov	qword ptr [rbp - 0x20], 0
0x4002a4:	mov	qword ptr [rbp - 0x18], 0
0x4002ac:	mov	qword ptr [rbp - 0x10], 0
0x4002b4:	cmp	dword ptr [rbp - 0x34], 0
0x4002b8:	js	0x4002cc
<Block for 0x40027a, 2 bytes>
0x40027a:	jmp	0x400283
<Block for 0x4002ed, 2 bytes>
0x4002ed:	leave	
0x4002ee:	ret	
<Block for 0x4002e8, 5 bytes>
0x4002e8:	call	0x500020
<Block for 0x4002cc, 12 bytes>
0x4002cc:	lea	rdi, [rip + 0xfd]
0x4002d3:	call	0x500018
<Block for 0x4002ba, 16 bytes>
0x4002ba:	mov	eax, dword ptr [rbp - 0x34]
0x4002bd:	cdqe	
0x4002bf:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002c3:	mov	edi, eax
0x4002c5:	call	0x500010
<Block for 0x400283, 9 bytes>
0x400283:	mov	eax, 1
0x400288:	test	eax, eax
0x40028a:	je	0x4002d8
<Block for 0x4002ca, 2 bytes>
0x4002ca:	jmp	0x4002d8
