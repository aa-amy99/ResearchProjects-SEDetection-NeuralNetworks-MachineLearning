<Block for 0x4000b7, 43 bytes>
0x4000b7:	endbr64	
0x4000bb:	push	rbp
0x4000bc:	mov	rbp, rsp
0x4000bf:	sub	rsp, 0x40
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000d9:	mov	eax, 1
0x4000de:	test	eax, eax
0x4000e0:	je	0x400101
<Block for 0x400101, 9 bytes>
0x400101:	mov	eax, 0
0x400106:	test	eax, eax
0x400108:	je	0x400118
<Block for 0x4000e2, 31 bytes>
0x4000e2:	mov	rax, qword ptr [rip + 0xfff17]
0x4000e9:	lea	rdx, [rbp - 0x34]
0x4000ed:	lea	rsi, [rip + 0x2d4]
0x4000f4:	mov	rdi, rax
0x4000f7:	mov	eax, 0
0x4000fc:	call	0x500008
<Block for 0x400118, 47 bytes>
0x400118:	mov	qword ptr [rbp - 0x30], 0
0x400120:	mov	qword ptr [rbp - 0x28], 0
0x400128:	mov	qword ptr [rbp - 0x20], 0
0x400130:	mov	qword ptr [rbp - 0x18], 0
0x400138:	mov	qword ptr [rbp - 0x10], 0
0x400140:	mov	eax, dword ptr [rbp - 0x34]
0x400143:	test	eax, eax
0x400145:	js	0x400161
<Block for 0x40010a, 12 bytes>
0x40010a:	lea	rdi, [rip + 0x2de]
0x400111:	call	0x500018
<Block for 0x400161, 12 bytes>
0x400161:	lea	rdi, [rip + 0x2a0]
0x400168:	call	0x500018
<Block for 0x400147, 8 bytes>
0x400147:	mov	eax, dword ptr [rbp - 0x34]
0x40014a:	cmp	eax, 9
0x40014d:	jg	0x400161
<Block for 0x400116, 2 bytes>
0x400116:	jmp	0x40016d
<Block for 0x40016d, 16 bytes>
0x40016d:	nop	
0x40016e:	mov	rax, qword ptr [rbp - 8]
0x400172:	xor	rax, qword ptr fs:[0x28]
0x40017b:	je	0x400182
<Block for 0x40014f, 16 bytes>
0x40014f:	mov	eax, dword ptr [rbp - 0x34]
0x400152:	cdqe	
0x400154:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400158:	mov	edi, eax
0x40015a:	call	0x500010
<Block for 0x400182, 2 bytes>
0x400182:	leave	
0x400183:	ret	
<Block for 0x40017d, 5 bytes>
0x40017d:	call	0x500020
<Block for 0x40015f, 2 bytes>
0x40015f:	jmp	0x40016d
