<Block for 0x400062, 18 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	mov	eax, 0
0x40006f:	call	0x500000
<Block for 0x400074, 4 bytes>
0x400074:	test	eax, eax
0x400076:	je	0x4000a1
<Block for 0x4000a1, 22 bytes>
0x4000a1:	mov	rax, qword ptr [rip + 0xfff60]
0x4000a8:	mov	rsi, rax
0x4000ab:	lea	rdi, [rip + 0x2e]
0x4000b2:	call	0x500018
<Block for 0x400078, 22 bytes>
0x400078:	mov	rax, qword ptr [rip + 0xfff89]
0x40007f:	mov	rsi, rax
0x400082:	lea	rdi, [rip + 0x57]
0x400089:	call	0x500018
<Block for 0x4000b7, 5 bytes>
0x4000b7:	cmp	eax, -1
0x4000ba:	jne	0x4000c8
<Block for 0x40008e, 5 bytes>
0x40008e:	cmp	eax, -1
0x400091:	jne	0x4000c8
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rdi, [rip + 0x24]
0x4000c3:	call	0x500020
<Block for 0x4000c8, 3 bytes>
0x4000c8:	nop	
0x4000c9:	pop	rbp
0x4000ca:	ret	
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0x4d]
0x40009a:	call	0x500020
<Block for 0x40009f, 2 bytes>
0x40009f:	jmp	0x4000c8
