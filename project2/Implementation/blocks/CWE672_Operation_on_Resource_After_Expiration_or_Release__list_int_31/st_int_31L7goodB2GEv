<Block for 0x4003be, 40 bytes>
0x4003be:	endbr64	
0x4003c2:	push	rbp
0x4003c3:	mov	rbp, rsp
0x4003c6:	push	rbx
0x4003c7:	sub	rsp, 0x78
0x4003cb:	mov	rax, qword ptr fs:[0x28]
0x4003d4:	mov	qword ptr [rbp - 0x18], rax
0x4003d8:	xor	eax, eax
0x4003da:	lea	rax, [rbp - 0x70]
0x4003de:	mov	rdi, rax
0x4003e1:	call	0x4006b6
<Block for 0x4003e6, 26 bytes>
0x4003e6:	mov	dword ptr [rbp - 0x30], 0x64
0x4003ed:	lea	rdx, [rbp - 0x30]
0x4003f1:	lea	rax, [rbp - 0x70]
0x4003f5:	mov	rsi, rdx
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x4007d2
<Block for 0x400400, 26 bytes>
0x400400:	mov	dword ptr [rbp - 0x30], 0
0x400407:	lea	rdx, [rbp - 0x30]
0x40040b:	lea	rax, [rbp - 0x70]
0x40040f:	mov	rsi, rdx
0x400412:	mov	rdi, rax
0x400415:	call	0x4007d2
<Block for 0x40041a, 19 bytes>
0x40041a:	lea	rdx, [rbp - 0x70]
0x40041e:	lea	rax, [rbp - 0x50]
0x400422:	mov	rsi, rdx
0x400425:	mov	rdi, rax
0x400428:	call	0x400820
<Block for 0x40042d, 19 bytes>
0x40042d:	lea	rdx, [rbp - 0x50]
0x400431:	lea	rax, [rbp - 0x30]
0x400435:	mov	rsi, rdx
0x400438:	mov	rdi, rax
0x40043b:	call	0x400820
<Block for 0x400440, 12 bytes>
0x400440:	lea	rax, [rbp - 0x80]
0x400444:	mov	rdi, rax
0x400447:	call	0x4008ec
<Block for 0x40044c, 19 bytes>
0x40044c:	lea	rsi, [rip + 0x1b7]
0x400453:	lea	rdi, [rip + 0xffba6]
0x40045a:	call	0x500008
<Block for 0x40045f, 12 bytes>
0x40045f:	lea	rax, [rbp - 0x30]
0x400463:	mov	rdi, rax
0x400466:	call	0x400906
<Block for 0x40046b, 16 bytes>
0x40046b:	mov	qword ptr [rbp - 0x80], rax
0x40046f:	lea	rax, [rbp - 0x30]
0x400473:	mov	rdi, rax
0x400476:	call	0x400956
<Block for 0x40047b, 23 bytes>
0x40047b:	mov	qword ptr [rbp - 0x78], rax
0x40047f:	lea	rdx, [rbp - 0x78]
0x400483:	lea	rax, [rbp - 0x80]
0x400487:	mov	rsi, rdx
0x40048a:	mov	rdi, rax
0x40048d:	call	0x4009a2
<Block for 0x400492, 4 bytes>
0x400492:	test	al, al
0x400494:	je	0x4004d7
<Block for 0x4004d7, 22 bytes>
0x4004d7:	mov	rax, qword ptr [rip + 0xffb42]
0x4004de:	mov	rsi, rax
0x4004e1:	lea	rdi, [rip + 0xffb18]
0x4004e8:	call	0x500028
<Block for 0x400496, 19 bytes>
0x400496:	lea	rsi, [rip + 0x181]
0x40049d:	lea	rdi, [rip + 0xffb5c]
0x4004a4:	call	0x500008
<Block for 0x4004ed, 12 bytes>
0x4004ed:	lea	rax, [rbp - 0x30]
0x4004f1:	mov	rdi, rax
0x4004f4:	call	0x4006d6
<Block for 0x4004a9, 15 bytes>
0x4004a9:	mov	rbx, rax
0x4004ac:	lea	rax, [rbp - 0x80]
0x4004b0:	mov	rdi, rax
0x4004b3:	call	0x400a20
<Block for 0x4004f9, 12 bytes>
0x4004f9:	lea	rax, [rbp - 0x50]
0x4004fd:	mov	rdi, rax
0x400500:	call	0x4006d6
<Block for 0x4004b8, 12 bytes>
0x4004b8:	mov	eax, dword ptr [rax]
0x4004ba:	mov	esi, eax
0x4004bc:	mov	rdi, rbx
0x4004bf:	call	0x500010
<Block for 0x400505, 12 bytes>
0x400505:	lea	rax, [rbp - 0x70]
0x400509:	mov	rdi, rax
0x40050c:	call	0x4006d6
<Block for 0x4004c4, 17 bytes>
0x4004c4:	lea	rax, [rbp - 0x80]
0x4004c8:	mov	esi, 0
0x4004cd:	mov	rdi, rax
0x4004d0:	call	0x4009c8
<Block for 0x400511, 16 bytes>
0x400511:	nop	
0x400512:	mov	rax, qword ptr [rbp - 0x18]
0x400516:	xor	rax, qword ptr fs:[0x28]
0x40051f:	je	0x400570
<Block for 0x4004d5, 2 bytes>
0x4004d5:	jmp	0x40046f
<Block for 0x400570, 7 bytes>
0x400570:	add	rsp, 0x78
0x400574:	pop	rbx
0x400575:	pop	rbp
0x400576:	ret	
<Block for 0x400521, 2 bytes>
0x400521:	jmp	0x40056b
<Block for 0x40046f, 12 bytes>
0x40046f:	lea	rax, [rbp - 0x30]
0x400473:	mov	rdi, rax
0x400476:	call	0x400956
<Block for 0x40056b, 5 bytes>
0x40056b:	call	0x500038
