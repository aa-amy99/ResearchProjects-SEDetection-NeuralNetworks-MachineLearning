<Block for 0x4001df, 40 bytes>
0x4001df:	endbr64	
0x4001e3:	push	rbp
0x4001e4:	mov	rbp, rsp
0x4001e7:	push	rbx
0x4001e8:	sub	rsp, 0x78
0x4001ec:	mov	rax, qword ptr fs:[0x28]
0x4001f5:	mov	qword ptr [rbp - 0x18], rax
0x4001f9:	xor	eax, eax
0x4001fb:	lea	rax, [rbp - 0x70]
0x4001ff:	mov	rdi, rax
0x400202:	call	0x4006b6
<Block for 0x400207, 26 bytes>
0x400207:	mov	dword ptr [rbp - 0x30], 0x64
0x40020e:	lea	rdx, [rbp - 0x30]
0x400212:	lea	rax, [rbp - 0x70]
0x400216:	mov	rsi, rdx
0x400219:	mov	rdi, rax
0x40021c:	call	0x4007d2
<Block for 0x400221, 26 bytes>
0x400221:	mov	dword ptr [rbp - 0x30], 0xc8
0x400228:	lea	rdx, [rbp - 0x30]
0x40022c:	lea	rax, [rbp - 0x70]
0x400230:	mov	rsi, rdx
0x400233:	mov	rdi, rax
0x400236:	call	0x4007d2
<Block for 0x40023b, 19 bytes>
0x40023b:	lea	rdx, [rbp - 0x70]
0x40023f:	lea	rax, [rbp - 0x50]
0x400243:	mov	rsi, rdx
0x400246:	mov	rdi, rax
0x400249:	call	0x400820
<Block for 0x40024e, 19 bytes>
0x40024e:	lea	rdx, [rbp - 0x50]
0x400252:	lea	rax, [rbp - 0x30]
0x400256:	mov	rsi, rdx
0x400259:	mov	rdi, rax
0x40025c:	call	0x400820
<Block for 0x400261, 12 bytes>
0x400261:	lea	rax, [rbp - 0x80]
0x400265:	mov	rdi, rax
0x400268:	call	0x4008ec
<Block for 0x40026d, 19 bytes>
0x40026d:	lea	rsi, [rip + 0x396]
0x400274:	lea	rdi, [rip + 0xffd85]
0x40027b:	call	0x500008
<Block for 0x400280, 12 bytes>
0x400280:	lea	rax, [rbp - 0x30]
0x400284:	mov	rdi, rax
0x400287:	call	0x400906
<Block for 0x40028c, 16 bytes>
0x40028c:	mov	qword ptr [rbp - 0x80], rax
0x400290:	lea	rax, [rbp - 0x30]
0x400294:	mov	rdi, rax
0x400297:	call	0x400956
<Block for 0x40029c, 23 bytes>
0x40029c:	mov	qword ptr [rbp - 0x78], rax
0x4002a0:	lea	rdx, [rbp - 0x78]
0x4002a4:	lea	rax, [rbp - 0x80]
0x4002a8:	mov	rsi, rdx
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x4009a2
<Block for 0x4002b3, 4 bytes>
0x4002b3:	test	al, al
0x4002b5:	je	0x40031e
<Block for 0x40031e, 22 bytes>
0x40031e:	mov	rax, qword ptr [rip + 0xffcfb]
0x400325:	mov	rsi, rax
0x400328:	lea	rdi, [rip + 0xffcd1]
0x40032f:	call	0x500028
<Block for 0x4002b7, 12 bytes>
0x4002b7:	lea	rax, [rbp - 0x80]
0x4002bb:	mov	rdi, rax
0x4002be:	call	0x400a20
<Block for 0x400334, 12 bytes>
0x400334:	lea	rax, [rbp - 0x30]
0x400338:	mov	rdi, rax
0x40033b:	call	0x4006d6
<Block for 0x4002c3, 11 bytes>
0x4002c3:	mov	eax, dword ptr [rax]
0x4002c5:	test	eax, eax
0x4002c7:	sete	al
0x4002ca:	test	al, al
0x4002cc:	je	0x4002da
<Block for 0x400340, 12 bytes>
0x400340:	lea	rax, [rbp - 0x50]
0x400344:	mov	rdi, rax
0x400347:	call	0x4006d6
<Block for 0x4002da, 19 bytes>
0x4002da:	lea	rsi, [rip + 0x33d]
0x4002e1:	lea	rdi, [rip + 0xffd18]
0x4002e8:	call	0x500008
<Block for 0x4002ce, 12 bytes>
0x4002ce:	lea	rax, [rbp - 0x30]
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x400a42
<Block for 0x40034c, 12 bytes>
0x40034c:	lea	rax, [rbp - 0x70]
0x400350:	mov	rdi, rax
0x400353:	call	0x4006d6
<Block for 0x4002ed, 15 bytes>
0x4002ed:	mov	rbx, rax
0x4002f0:	lea	rax, [rbp - 0x80]
0x4002f4:	mov	rdi, rax
0x4002f7:	call	0x400a20
<Block for 0x400358, 16 bytes>
0x400358:	nop	
0x400359:	mov	rax, qword ptr [rbp - 0x18]
0x40035d:	xor	rax, qword ptr fs:[0x28]
0x400366:	je	0x4003b7
<Block for 0x4002fc, 12 bytes>
0x4002fc:	mov	eax, dword ptr [rax]
0x4002fe:	mov	esi, eax
0x400300:	mov	rdi, rbx
0x400303:	call	0x500010
<Block for 0x4003b7, 7 bytes>
0x4003b7:	add	rsp, 0x78
0x4003bb:	pop	rbx
0x4003bc:	pop	rbp
0x4003bd:	ret	
<Block for 0x400368, 2 bytes>
0x400368:	jmp	0x4003b2
<Block for 0x400308, 17 bytes>
0x400308:	lea	rax, [rbp - 0x80]
0x40030c:	mov	esi, 0
0x400311:	mov	rdi, rax
0x400314:	call	0x4009c8
<Block for 0x4003b2, 5 bytes>
0x4003b2:	call	0x500038
<Block for 0x400319, 5 bytes>
0x400319:	jmp	0x400290
<Block for 0x400290, 12 bytes>
0x400290:	lea	rax, [rbp - 0x30]
0x400294:	mov	rdi, rax
0x400297:	call	0x400956
