<Block for 0x400109, 59 bytes>
0x400109:	endbr64	
0x40010d:	push	rbp
0x40010e:	mov	rbp, rsp
0x400111:	sub	rsp, 0x90
0x400118:	mov	qword ptr [rbp - 0x88], rdi
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	lea	rax, [rbp - 0x70]
0x400132:	mov	edx, 0x63
0x400137:	mov	esi, 0x43
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500000
<Block for 0x400144, 14 bytes>
0x400144:	mov	byte ptr [rbp - 0xd], 0
0x400148:	mov	qword ptr [rbp - 0x78], 0
0x400150:	jmp	0x400175
<Block for 0x400175, 7 bytes>
0x400175:	cmp	qword ptr [rbp - 0x78], 0x63
0x40017a:	jbe	0x400152
<Block for 0x400152, 42 bytes>
0x400152:	mov	rdx, qword ptr [rbp - 0x88]
0x400159:	mov	rax, qword ptr [rbp - 0x78]
0x40015d:	add	rax, rdx
0x400160:	movzx	eax, byte ptr [rax]
0x400163:	lea	rcx, [rbp - 0x70]
0x400167:	mov	rdx, qword ptr [rbp - 0x78]
0x40016b:	add	rdx, rcx
0x40016e:	mov	byte ptr [rdx], al
0x400170:	add	qword ptr [rbp - 0x78], 1
0x400175:	cmp	qword ptr [rbp - 0x78], 0x63
0x40017a:	jbe	0x400152
<Block for 0x40017c, 16 bytes>
0x40017c:	mov	byte ptr [rbp - 0xd], 0
0x400180:	lea	rax, [rbp - 0x70]
0x400184:	mov	rdi, rax
0x400187:	call	0x500008
<Block for 0x40018c, 16 bytes>
0x40018c:	nop	
0x40018d:	mov	rax, qword ptr [rbp - 8]
0x400191:	xor	rax, qword ptr fs:[0x28]
0x40019a:	je	0x4001a1
<Block for 0x4001a1, 2 bytes>
0x4001a1:	leave	
0x4001a2:	ret	
<Block for 0x40019c, 5 bytes>
0x40019c:	call	0x500010
