<Block for 0x40009a, 30 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x10
0x4000a6:	mov	qword ptr [rbp - 0x10], 0
0x4000ae:	mov	edi, 0x64
0x4000b3:	call	0x500018
<Block for 0x4000b8, 11 bytes>
0x4000b8:	mov	qword ptr [rbp - 8], rax
0x4000bc:	cmp	qword ptr [rbp - 8], 0
0x4000c1:	jne	0x4000cd
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	edi, 0xffffffff
0x4000c8:	call	0x500020
<Block for 0x4000cd, 22 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x41
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 35 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	add	rax, 0x63
0x4000eb:	mov	byte ptr [rax], 0
0x4000ee:	mov	rax, qword ptr [rbp - 8]
0x4000f2:	sub	rax, 8
0x4000f6:	mov	qword ptr [rbp - 0x10], rax
0x4000fa:	mov	rax, qword ptr [rbp - 0x10]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x400000
<Block for 0x400106, 3 bytes>
0x400106:	nop	
0x400107:	leave	
0x400108:	ret	
