<Block for 0x400057, 53 bytes>
0x400057:	endbr64	
0x40005b:	push	rbp
0x40005c:	mov	rbp, rsp
0x40005f:	sub	rsp, 0x20
0x400063:	mov	rax, qword ptr fs:[0x28]
0x40006c:	mov	qword ptr [rbp - 8], rax
0x400070:	xor	eax, eax
0x400072:	lea	rax, [rbp - 0x12]
0x400076:	mov	qword ptr [rbp - 0x10], rax
0x40007a:	mov	byte ptr [rbp - 0x12], 0x43
0x40007e:	movzx	eax, byte ptr [rbp - 0x12]
0x400082:	movsx	eax, al
0x400085:	mov	edi, eax
0x400087:	call	0x500000
<Block for 0x40008c, 25 bytes>
0x40008c:	mov	rax, qword ptr [rbp - 0x10]
0x400090:	movzx	eax, byte ptr [rax]
0x400093:	mov	byte ptr [rbp - 0x11], al
0x400096:	mov	byte ptr [rbp - 0x11], 0x5a
0x40009a:	movsx	eax, byte ptr [rbp - 0x11]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500000
<Block for 0x4000a5, 16 bytes>
0x4000a5:	nop	
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	xor	rax, qword ptr fs:[0x28]
0x4000b3:	je	0x4000ba
<Block for 0x4000ba, 2 bytes>
0x4000ba:	leave	
0x4000bb:	ret	
<Block for 0x4000b5, 5 bytes>
0x4000b5:	call	0x500008
