<Block for 0x4000b8, 45 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	add	rsp, -0x80
0x4000c4:	mov	rax, qword ptr fs:[0x28]
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	xor	eax, eax
0x4000d3:	mov	qword ptr [rbp - 0x80], 0
0x4000db:	mov	edi, 0x64
0x4000e0:	call	0x500000
<Block for 0x4000e5, 26 bytes>
0x4000e5:	mov	qword ptr [rbp - 0x78], rax
0x4000e9:	mov	rax, qword ptr [rbp - 0x78]
0x4000ed:	mov	edx, 0x63
0x4000f2:	mov	esi, 0x41
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x4000ff, 42 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0x78]
0x400103:	add	rax, 0x63
0x400107:	mov	byte ptr [rax], 0
0x40010a:	mov	rax, qword ptr [rbp - 0x78]
0x40010e:	mov	qword ptr [rbp - 0x80], rax
0x400112:	nop	
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	edx, 0x63
0x40011c:	mov	esi, 0x43
0x400121:	mov	rdi, rax
0x400124:	call	0x500008
<Block for 0x400129, 28 bytes>
0x400129:	mov	byte ptr [rbp - 0xd], 0
0x40012d:	mov	rcx, qword ptr [rbp - 0x80]
0x400131:	lea	rax, [rbp - 0x70]
0x400135:	mov	edx, 0x64
0x40013a:	mov	rsi, rcx
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x400145, 16 bytes>
0x400145:	mov	byte ptr [rbp - 0xd], 0
0x400149:	lea	rax, [rbp - 0x70]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500018
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500020
