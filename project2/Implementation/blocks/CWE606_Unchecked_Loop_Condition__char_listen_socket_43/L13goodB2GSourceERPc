<Block for 0x400401, 60 bytes>
0x400401:	endbr64	
0x400405:	push	rbp
0x400406:	mov	rbp, rsp
0x400409:	sub	rsp, 0x50
0x40040d:	mov	qword ptr [rbp - 0x48], rdi
0x400411:	mov	rax, qword ptr fs:[0x28]
0x40041a:	mov	qword ptr [rbp - 8], rax
0x40041e:	xor	eax, eax
0x400420:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400427:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x40042e:	mov	rax, qword ptr [rbp - 0x48]
0x400432:	mov	rax, qword ptr [rax]
0x400435:	mov	rdi, rax
0x400438:	call	0x500000
<Block for 0x40043d, 24 bytes>
0x40043d:	mov	qword ptr [rbp - 0x30], rax
0x400441:	mov	edx, 6
0x400446:	mov	esi, 1
0x40044b:	mov	edi, 2
0x400450:	call	0x500008
<Block for 0x400455, 13 bytes>
0x400455:	mov	dword ptr [rbp - 0x38], eax
0x400458:	cmp	dword ptr [rbp - 0x38], -1
0x40045c:	je	0x400596
<Block for 0x400596, 3 bytes>
0x400596:	nop	
0x400597:	jmp	0x4005a0
<Block for 0x400462, 22 bytes>
0x400462:	lea	rax, [rbp - 0x20]
0x400466:	mov	edx, 0x10
0x40046b:	mov	esi, 0
0x400470:	mov	rdi, rax
0x400473:	call	0x500010
<Block for 0x4005a0, 6 bytes>
0x4005a0:	cmp	dword ptr [rbp - 0x38], -1
0x4005a4:	je	0x4005b0
<Block for 0x400478, 23 bytes>
0x400478:	mov	word ptr [rbp - 0x20], 2
0x40047e:	mov	dword ptr [rbp - 0x1c], 0
0x400485:	mov	edi, 0x6987
0x40048a:	call	0x500018
<Block for 0x4005b0, 6 bytes>
0x4005b0:	cmp	dword ptr [rbp - 0x3c], -1
0x4005b4:	je	0x4005c0
<Block for 0x4005a6, 10 bytes>
0x4005a6:	mov	eax, dword ptr [rbp - 0x38]
0x4005a9:	mov	edi, eax
0x4005ab:	call	0x500048
<Block for 0x40048f, 26 bytes>
0x40048f:	mov	word ptr [rbp - 0x1e], ax
0x400493:	lea	rcx, [rbp - 0x20]
0x400497:	mov	eax, dword ptr [rbp - 0x38]
0x40049a:	mov	edx, 0x10
0x40049f:	mov	rsi, rcx
0x4004a2:	mov	edi, eax
0x4004a4:	call	0x500020
<Block for 0x4005c0, 16 bytes>
0x4005c0:	nop	
0x4005c1:	mov	rax, qword ptr [rbp - 8]
0x4005c5:	xor	rax, qword ptr fs:[0x28]
0x4005ce:	je	0x4005d5
<Block for 0x4005b6, 10 bytes>
0x4005b6:	mov	eax, dword ptr [rbp - 0x3c]
0x4005b9:	mov	edi, eax
0x4005bb:	call	0x500048
<Block for 0x4004a9, 14 bytes>
0x4004a9:	cmp	eax, -1
0x4004ac:	sete	al
0x4004af:	test	al, al
0x4004b1:	jne	0x400599
<Block for 0x4005d5, 2 bytes>
0x4005d5:	leave	
0x4005d6:	ret	
<Block for 0x4005d0, 5 bytes>
0x4005d0:	call	0x500050
<Block for 0x4004b7, 15 bytes>
0x4004b7:	mov	eax, dword ptr [rbp - 0x38]
0x4004ba:	mov	esi, 5
0x4004bf:	mov	edi, eax
0x4004c1:	call	0x500028
<Block for 0x400599, 3 bytes>
0x400599:	nop	
0x40059a:	jmp	0x4005a0
<Block for 0x4004c6, 14 bytes>
0x4004c6:	cmp	eax, -1
0x4004c9:	sete	al
0x4004cc:	test	al, al
0x4004ce:	jne	0x40059c
<Block for 0x4004d4, 20 bytes>
0x4004d4:	mov	eax, dword ptr [rbp - 0x38]
0x4004d7:	mov	edx, 0
0x4004dc:	mov	esi, 0
0x4004e1:	mov	edi, eax
0x4004e3:	call	0x500030
<Block for 0x40059c, 3 bytes>
0x40059c:	nop	
0x40059d:	jmp	0x4005a0
<Block for 0x4004e8, 13 bytes>
0x4004e8:	mov	dword ptr [rbp - 0x3c], eax
0x4004eb:	cmp	dword ptr [rbp - 0x3c], -1
0x4004ef:	je	0x40059f
<Block for 0x4004f5, 42 bytes>
0x4004f5:	mov	eax, 0x63
0x4004fa:	sub	rax, qword ptr [rbp - 0x30]
0x4004fe:	mov	rdx, rax
0x400501:	mov	rax, qword ptr [rbp - 0x48]
0x400505:	mov	rcx, qword ptr [rax]
0x400508:	mov	rax, qword ptr [rbp - 0x30]
0x40050c:	lea	rsi, [rcx + rax]
0x400510:	mov	eax, dword ptr [rbp - 0x3c]
0x400513:	mov	ecx, 0
0x400518:	mov	edi, eax
0x40051a:	call	0x500038
<Block for 0x40059f, 1 bytes>
0x40059f:	nop	
<Block for 0x40051f, 9 bytes>
0x40051f:	mov	dword ptr [rbp - 0x34], eax
0x400522:	cmp	dword ptr [rbp - 0x34], -1
0x400526:	je	0x4005a0
<Block for 0x400528, 6 bytes>
0x400528:	cmp	dword ptr [rbp - 0x34], 0
0x40052c:	je	0x4005a0
<Block for 0x40052e, 46 bytes>
0x40052e:	mov	rax, qword ptr [rbp - 0x48]
0x400532:	mov	rax, qword ptr [rax]
0x400535:	mov	edx, dword ptr [rbp - 0x34]
0x400538:	movsxd	rcx, edx
0x40053b:	mov	rdx, qword ptr [rbp - 0x30]
0x40053f:	add	rdx, rcx
0x400542:	add	rax, rdx
0x400545:	mov	byte ptr [rax], 0
0x400548:	mov	rax, qword ptr [rbp - 0x48]
0x40054c:	mov	rax, qword ptr [rax]
0x40054f:	mov	esi, 0xd
0x400554:	mov	rdi, rax
0x400557:	call	0x500040
<Block for 0x40055c, 11 bytes>
0x40055c:	mov	qword ptr [rbp - 0x28], rax
0x400560:	cmp	qword ptr [rbp - 0x28], 0
0x400565:	je	0x40056e
<Block for 0x40056e, 20 bytes>
0x40056e:	mov	rax, qword ptr [rbp - 0x48]
0x400572:	mov	rax, qword ptr [rax]
0x400575:	mov	esi, 0xa
0x40057a:	mov	rdi, rax
0x40057d:	call	0x500040
<Block for 0x400567, 27 bytes>
0x400567:	mov	rax, qword ptr [rbp - 0x28]
0x40056b:	mov	byte ptr [rax], 0
0x40056e:	mov	rax, qword ptr [rbp - 0x48]
0x400572:	mov	rax, qword ptr [rax]
0x400575:	mov	esi, 0xa
0x40057a:	mov	rdi, rax
0x40057d:	call	0x500040
<Block for 0x400582, 11 bytes>
0x400582:	mov	qword ptr [rbp - 0x28], rax
0x400586:	cmp	qword ptr [rbp - 0x28], 0
0x40058b:	je	0x4005a0
<Block for 0x40058d, 9 bytes>
0x40058d:	mov	rax, qword ptr [rbp - 0x28]
0x400591:	mov	byte ptr [rax], 0
0x400594:	jmp	0x4005a0
