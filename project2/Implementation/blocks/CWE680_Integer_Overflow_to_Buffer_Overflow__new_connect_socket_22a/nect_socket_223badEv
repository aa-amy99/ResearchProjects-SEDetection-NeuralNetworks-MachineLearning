<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400013:	mov	dword ptr [rip + 0x1cf], 1
0x40001d:	mov	eax, dword ptr [rbp - 0x1c]
0x400020:	mov	edi, eax
0x400022:	call	0x500000
<Block for 0x400027, 28 bytes>
0x400027:	mov	dword ptr [rbp - 0x1c], eax
0x40002a:	mov	eax, dword ptr [rbp - 0x1c]
0x40002d:	cdqe	
0x40002f:	shl	rax, 2
0x400033:	mov	qword ptr [rbp - 0x10], rax
0x400037:	mov	rax, qword ptr [rbp - 0x10]
0x40003b:	mov	rdi, rax
0x40003e:	call	0x500008
<Block for 0x400043, 23 bytes>
0x400043:	mov	qword ptr [rbp - 8], rax
0x400047:	mov	qword ptr [rbp - 0x18], 0
0x40004f:	mov	eax, dword ptr [rbp - 0x1c]
0x400052:	cdqe	
0x400054:	cmp	qword ptr [rbp - 0x18], rax
0x400058:	jae	0x40007a
<Block for 0x40005a, 32 bytes>
0x40005a:	mov	rax, qword ptr [rbp - 0x18]
0x40005e:	lea	rdx, [rax*4]
0x400066:	mov	rax, qword ptr [rbp - 8]
0x40006a:	add	rax, rdx
0x40006d:	mov	dword ptr [rax], 0
0x400073:	add	qword ptr [rbp - 0x18], 1
0x400078:	jmp	0x40004f
<Block for 0x40007a, 13 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	mov	eax, dword ptr [rax]
0x400080:	mov	edi, eax
0x400082:	call	0x500010
<Block for 0x40004f, 11 bytes>
0x40004f:	mov	eax, dword ptr [rbp - 0x1c]
0x400052:	cdqe	
0x400054:	cmp	qword ptr [rbp - 0x18], rax
0x400058:	jae	0x40007a
<Block for 0x400087, 7 bytes>
0x400087:	cmp	qword ptr [rbp - 8], 0
0x40008c:	je	0x40009a
<Block for 0x40009a, 3 bytes>
0x40009a:	nop	
0x40009b:	leave	
0x40009c:	ret	
<Block for 0x40008e, 12 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 8]
0x400092:	mov	rdi, rax
0x400095:	call	0x500018
