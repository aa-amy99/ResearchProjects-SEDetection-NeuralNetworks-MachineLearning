<Block for 0x4003ce, 46 bytes>
0x4003ce:	endbr64	
0x4003d2:	push	rbp
0x4003d3:	mov	rbp, rsp
0x4003d6:	push	rbx
0x4003d7:	sub	rsp, 0xa8
0x4003de:	mov	rax, qword ptr fs:[0x28]
0x4003e7:	mov	qword ptr [rbp - 0x18], rax
0x4003eb:	xor	eax, eax
0x4003ed:	lea	rax, [rbp - 0xa0]
0x4003f4:	mov	rdi, rax
0x4003f7:	call	0x4007b2
<Block for 0x4003fc, 50 bytes>
0x4003fc:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400406:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x400410:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x40041a:	mov	edx, 6
0x40041f:	mov	esi, 1
0x400424:	mov	edi, 2
0x400429:	call	0x500000
<Block for 0x40042e, 19 bytes>
0x40042e:	mov	dword ptr [rbp - 0xa8], eax
0x400434:	cmp	dword ptr [rbp - 0xa8], -1
0x40043b:	je	0x400533
<Block for 0x400533, 3 bytes>
0x400533:	nop	
0x400534:	jmp	0x40053d
<Block for 0x400441, 22 bytes>
0x400441:	lea	rax, [rbp - 0x40]
0x400445:	mov	edx, 0x10
0x40044a:	mov	esi, 0
0x40044f:	mov	rdi, rax
0x400452:	call	0x500008
<Block for 0x40053d, 9 bytes>
0x40053d:	cmp	dword ptr [rbp - 0xa8], -1
0x400544:	je	0x400553
<Block for 0x400457, 23 bytes>
0x400457:	mov	word ptr [rbp - 0x40], 2
0x40045d:	mov	dword ptr [rbp - 0x3c], 0
0x400464:	mov	edi, 0x6987
0x400469:	call	0x500010
<Block for 0x400553, 9 bytes>
0x400553:	cmp	dword ptr [rbp - 0xac], -1
0x40055a:	je	0x400569
<Block for 0x400546, 13 bytes>
0x400546:	mov	eax, dword ptr [rbp - 0xa8]
0x40054c:	mov	edi, eax
0x40054e:	call	0x500040
<Block for 0x40046e, 29 bytes>
0x40046e:	mov	word ptr [rbp - 0x3e], ax
0x400472:	lea	rcx, [rbp - 0x40]
0x400476:	mov	eax, dword ptr [rbp - 0xa8]
0x40047c:	mov	edx, 0x10
0x400481:	mov	rsi, rcx
0x400484:	mov	edi, eax
0x400486:	call	0x500018
<Block for 0x400569, 29 bytes>
0x400569:	mov	dword ptr [rbp - 0x70], 0
0x400570:	lea	rdx, [rbp - 0x70]
0x400574:	lea	rax, [rbp - 0xa0]
0x40057b:	mov	rsi, rdx
0x40057e:	mov	rdi, rax
0x400581:	call	0x40097e
<Block for 0x40055c, 13 bytes>
0x40055c:	mov	eax, dword ptr [rbp - 0xac]
0x400562:	mov	edi, eax
0x400564:	call	0x500040
<Block for 0x40048b, 14 bytes>
0x40048b:	cmp	eax, -1
0x40048e:	sete	al
0x400491:	test	al, al
0x400493:	jne	0x400536
<Block for 0x400586, 37 bytes>
0x400586:	mov	edx, dword ptr [rbp - 0xb0]
0x40058c:	mov	dword ptr [rax], edx
0x40058e:	mov	dword ptr [rbp - 0x70], 1
0x400595:	lea	rdx, [rbp - 0x70]
0x400599:	lea	rax, [rbp - 0xa0]
0x4005a0:	mov	rsi, rdx
0x4005a3:	mov	rdi, rax
0x4005a6:	call	0x40097e
<Block for 0x400499, 18 bytes>
0x400499:	mov	eax, dword ptr [rbp - 0xa8]
0x40049f:	mov	esi, 5
0x4004a4:	mov	edi, eax
0x4004a6:	call	0x500020
<Block for 0x400536, 3 bytes>
0x400536:	nop	
0x400537:	jmp	0x40053d
<Block for 0x4005ab, 37 bytes>
0x4005ab:	mov	edx, dword ptr [rbp - 0xb0]
0x4005b1:	mov	dword ptr [rax], edx
0x4005b3:	mov	dword ptr [rbp - 0x70], 2
0x4005ba:	lea	rdx, [rbp - 0x70]
0x4005be:	lea	rax, [rbp - 0xa0]
0x4005c5:	mov	rsi, rdx
0x4005c8:	mov	rdi, rax
0x4005cb:	call	0x40097e
<Block for 0x4004ab, 14 bytes>
0x4004ab:	cmp	eax, -1
0x4004ae:	sete	al
0x4004b1:	test	al, al
0x4004b3:	jne	0x400539
<Block for 0x4005d0, 30 bytes>
0x4005d0:	mov	edx, dword ptr [rbp - 0xb0]
0x4005d6:	mov	dword ptr [rax], edx
0x4005d8:	lea	rdx, [rbp - 0xa0]
0x4005df:	lea	rax, [rbp - 0x70]
0x4005e3:	mov	rsi, rdx
0x4005e6:	mov	rdi, rax
0x4005e9:	call	0x4007f2
<Block for 0x4004b9, 23 bytes>
0x4004b9:	mov	eax, dword ptr [rbp - 0xa8]
0x4004bf:	mov	edx, 0
0x4004c4:	mov	esi, 0
0x4004c9:	mov	edi, eax
0x4004cb:	call	0x500028
<Block for 0x400539, 3 bytes>
0x400539:	nop	
0x40053a:	jmp	0x40053d
<Block for 0x4005ee, 12 bytes>
0x4005ee:	lea	rax, [rbp - 0x70]
0x4005f2:	mov	rdi, rax
0x4005f5:	call	0x500068
<Block for 0x4004d0, 15 bytes>
0x4004d0:	mov	dword ptr [rbp - 0xac], eax
0x4004d6:	cmp	dword ptr [rbp - 0xac], -1
0x4004dd:	je	0x40053c
<Block for 0x4005fa, 12 bytes>
0x4005fa:	lea	rax, [rbp - 0x70]
0x4005fe:	mov	rdi, rax
0x400601:	call	0x4007d2
<Block for 0x4004df, 27 bytes>
0x4004df:	lea	rsi, [rbp - 0x26]
0x4004e3:	mov	eax, dword ptr [rbp - 0xac]
0x4004e9:	mov	ecx, 0
0x4004ee:	mov	edx, 0xd
0x4004f3:	mov	edi, eax
0x4004f5:	call	0x500030
<Block for 0x40053c, 1 bytes>
0x40053c:	nop	
<Block for 0x400606, 15 bytes>
0x400606:	lea	rax, [rbp - 0xa0]
0x40060d:	mov	rdi, rax
0x400610:	call	0x4007d2
<Block for 0x4004fa, 15 bytes>
0x4004fa:	mov	dword ptr [rbp - 0xa4], eax
0x400500:	cmp	dword ptr [rbp - 0xa4], -1
0x400507:	je	0x40053d
<Block for 0x400615, 16 bytes>
0x400615:	nop	
0x400616:	mov	rax, qword ptr [rbp - 0x18]
0x40061a:	xor	rax, qword ptr fs:[0x28]
0x400623:	je	0x400662
<Block for 0x400509, 9 bytes>
0x400509:	cmp	dword ptr [rbp - 0xa4], 0
0x400510:	je	0x40053d
<Block for 0x400662, 10 bytes>
0x400662:	add	rsp, 0xa8
0x400669:	pop	rbx
0x40066a:	pop	rbp
0x40066b:	ret	
<Block for 0x400625, 2 bytes>
0x400625:	jmp	0x40065d
<Block for 0x400512, 25 bytes>
0x400512:	mov	eax, dword ptr [rbp - 0xa4]
0x400518:	cdqe	
0x40051a:	mov	byte ptr [rbp + rax - 0x26], 0
0x40051f:	lea	rax, [rbp - 0x26]
0x400523:	mov	rdi, rax
0x400526:	call	0x500038
<Block for 0x40065d, 5 bytes>
0x40065d:	call	0x500058
<Block for 0x40052b, 8 bytes>
0x40052b:	mov	dword ptr [rbp - 0xb0], eax
0x400531:	jmp	0x40053d
