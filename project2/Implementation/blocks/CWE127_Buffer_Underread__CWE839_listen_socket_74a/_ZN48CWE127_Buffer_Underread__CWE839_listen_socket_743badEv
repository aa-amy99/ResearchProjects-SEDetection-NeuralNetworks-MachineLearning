<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xa8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xa0]
0x400026:	mov	rdi, rax
0x400029:	call	0x4007b2
<Block for 0x40002e, 50 bytes>
0x40002e:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400038:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x400042:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x40004c:	mov	edx, 6
0x400051:	mov	esi, 1
0x400056:	mov	edi, 2
0x40005b:	call	0x500000
<Block for 0x400060, 19 bytes>
0x400060:	mov	dword ptr [rbp - 0xa8], eax
0x400066:	cmp	dword ptr [rbp - 0xa8], -1
0x40006d:	je	0x400165
<Block for 0x400165, 3 bytes>
0x400165:	nop	
0x400166:	jmp	0x40016f
<Block for 0x400073, 22 bytes>
0x400073:	lea	rax, [rbp - 0x40]
0x400077:	mov	edx, 0x10
0x40007c:	mov	esi, 0
0x400081:	mov	rdi, rax
0x400084:	call	0x500008
<Block for 0x40016f, 9 bytes>
0x40016f:	cmp	dword ptr [rbp - 0xa8], -1
0x400176:	je	0x400185
<Block for 0x400089, 23 bytes>
0x400089:	mov	word ptr [rbp - 0x40], 2
0x40008f:	mov	dword ptr [rbp - 0x3c], 0
0x400096:	mov	edi, 0x6987
0x40009b:	call	0x500010
<Block for 0x400185, 9 bytes>
0x400185:	cmp	dword ptr [rbp - 0xac], -1
0x40018c:	je	0x40019b
<Block for 0x400178, 13 bytes>
0x400178:	mov	eax, dword ptr [rbp - 0xa8]
0x40017e:	mov	edi, eax
0x400180:	call	0x500040
<Block for 0x4000a0, 29 bytes>
0x4000a0:	mov	word ptr [rbp - 0x3e], ax
0x4000a4:	lea	rcx, [rbp - 0x40]
0x4000a8:	mov	eax, dword ptr [rbp - 0xa8]
0x4000ae:	mov	edx, 0x10
0x4000b3:	mov	rsi, rcx
0x4000b6:	mov	edi, eax
0x4000b8:	call	0x500018
<Block for 0x40019b, 29 bytes>
0x40019b:	mov	dword ptr [rbp - 0x70], 0
0x4001a2:	lea	rdx, [rbp - 0x70]
0x4001a6:	lea	rax, [rbp - 0xa0]
0x4001ad:	mov	rsi, rdx
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x40097e
<Block for 0x40018e, 13 bytes>
0x40018e:	mov	eax, dword ptr [rbp - 0xac]
0x400194:	mov	edi, eax
0x400196:	call	0x500040
<Block for 0x4000bd, 14 bytes>
0x4000bd:	cmp	eax, -1
0x4000c0:	sete	al
0x4000c3:	test	al, al
0x4000c5:	jne	0x400168
<Block for 0x4001b8, 37 bytes>
0x4001b8:	mov	edx, dword ptr [rbp - 0xb0]
0x4001be:	mov	dword ptr [rax], edx
0x4001c0:	mov	dword ptr [rbp - 0x70], 1
0x4001c7:	lea	rdx, [rbp - 0x70]
0x4001cb:	lea	rax, [rbp - 0xa0]
0x4001d2:	mov	rsi, rdx
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x40097e
<Block for 0x4000cb, 18 bytes>
0x4000cb:	mov	eax, dword ptr [rbp - 0xa8]
0x4000d1:	mov	esi, 5
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500020
<Block for 0x400168, 3 bytes>
0x400168:	nop	
0x400169:	jmp	0x40016f
<Block for 0x4001dd, 37 bytes>
0x4001dd:	mov	edx, dword ptr [rbp - 0xb0]
0x4001e3:	mov	dword ptr [rax], edx
0x4001e5:	mov	dword ptr [rbp - 0x70], 2
0x4001ec:	lea	rdx, [rbp - 0x70]
0x4001f0:	lea	rax, [rbp - 0xa0]
0x4001f7:	mov	rsi, rdx
0x4001fa:	mov	rdi, rax
0x4001fd:	call	0x40097e
<Block for 0x4000dd, 14 bytes>
0x4000dd:	cmp	eax, -1
0x4000e0:	sete	al
0x4000e3:	test	al, al
0x4000e5:	jne	0x40016b
<Block for 0x400202, 30 bytes>
0x400202:	mov	edx, dword ptr [rbp - 0xb0]
0x400208:	mov	dword ptr [rax], edx
0x40020a:	lea	rdx, [rbp - 0xa0]
0x400211:	lea	rax, [rbp - 0x70]
0x400215:	mov	rsi, rdx
0x400218:	mov	rdi, rax
0x40021b:	call	0x4007f2
<Block for 0x4000eb, 23 bytes>
0x4000eb:	mov	eax, dword ptr [rbp - 0xa8]
0x4000f1:	mov	edx, 0
0x4000f6:	mov	esi, 0
0x4000fb:	mov	edi, eax
0x4000fd:	call	0x500028
<Block for 0x40016b, 3 bytes>
0x40016b:	nop	
0x40016c:	jmp	0x40016f
<Block for 0x400220, 12 bytes>
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	rdi, rax
0x400227:	call	0x500048
<Block for 0x400102, 15 bytes>
0x400102:	mov	dword ptr [rbp - 0xac], eax
0x400108:	cmp	dword ptr [rbp - 0xac], -1
0x40010f:	je	0x40016e
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rax, [rbp - 0x70]
0x400230:	mov	rdi, rax
0x400233:	call	0x4007d2
<Block for 0x400111, 27 bytes>
0x400111:	lea	rsi, [rbp - 0x26]
0x400115:	mov	eax, dword ptr [rbp - 0xac]
0x40011b:	mov	ecx, 0
0x400120:	mov	edx, 0xd
0x400125:	mov	edi, eax
0x400127:	call	0x500030
<Block for 0x40016e, 1 bytes>
0x40016e:	nop	
<Block for 0x400238, 15 bytes>
0x400238:	lea	rax, [rbp - 0xa0]
0x40023f:	mov	rdi, rax
0x400242:	call	0x4007d2
<Block for 0x40012c, 15 bytes>
0x40012c:	mov	dword ptr [rbp - 0xa4], eax
0x400132:	cmp	dword ptr [rbp - 0xa4], -1
0x400139:	je	0x40016f
<Block for 0x400247, 16 bytes>
0x400247:	nop	
0x400248:	mov	rax, qword ptr [rbp - 0x18]
0x40024c:	xor	rax, qword ptr fs:[0x28]
0x400255:	je	0x400294
<Block for 0x40013b, 9 bytes>
0x40013b:	cmp	dword ptr [rbp - 0xa4], 0
0x400142:	je	0x40016f
<Block for 0x400294, 10 bytes>
0x400294:	add	rsp, 0xa8
0x40029b:	pop	rbx
0x40029c:	pop	rbp
0x40029d:	ret	
<Block for 0x400257, 2 bytes>
0x400257:	jmp	0x40028f
<Block for 0x400144, 25 bytes>
0x400144:	mov	eax, dword ptr [rbp - 0xa4]
0x40014a:	cdqe	
0x40014c:	mov	byte ptr [rbp + rax - 0x26], 0
0x400151:	lea	rax, [rbp - 0x26]
0x400155:	mov	rdi, rax
0x400158:	call	0x500038
<Block for 0x40028f, 5 bytes>
0x40028f:	call	0x500058
<Block for 0x40015d, 8 bytes>
0x40015d:	mov	dword ptr [rbp - 0xb0], eax
0x400163:	jmp	0x40016f
