<Block for 0x40029e, 43 bytes>
0x40029e:	endbr64	
0x4002a2:	push	rbp
0x4002a3:	mov	rbp, rsp
0x4002a6:	push	rbx
0x4002a7:	sub	rsp, 0x88
0x4002ae:	mov	rax, qword ptr fs:[0x28]
0x4002b7:	mov	qword ptr [rbp - 0x18], rax
0x4002bb:	xor	eax, eax
0x4002bd:	lea	rax, [rbp - 0x80]
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x4007b2
<Block for 0x4002c9, 46 bytes>
0x4002c9:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x4002d3:	mov	dword ptr [rbp - 0x84], 7
0x4002dd:	mov	dword ptr [rbp - 0x50], 0
0x4002e4:	lea	rdx, [rbp - 0x50]
0x4002e8:	lea	rax, [rbp - 0x80]
0x4002ec:	mov	rsi, rdx
0x4002ef:	mov	rdi, rax
0x4002f2:	call	0x40097e
<Block for 0x4002f7, 34 bytes>
0x4002f7:	mov	edx, dword ptr [rbp - 0x84]
0x4002fd:	mov	dword ptr [rax], edx
0x4002ff:	mov	dword ptr [rbp - 0x50], 1
0x400306:	lea	rdx, [rbp - 0x50]
0x40030a:	lea	rax, [rbp - 0x80]
0x40030e:	mov	rsi, rdx
0x400311:	mov	rdi, rax
0x400314:	call	0x40097e
<Block for 0x400319, 34 bytes>
0x400319:	mov	edx, dword ptr [rbp - 0x84]
0x40031f:	mov	dword ptr [rax], edx
0x400321:	mov	dword ptr [rbp - 0x50], 2
0x400328:	lea	rdx, [rbp - 0x50]
0x40032c:	lea	rax, [rbp - 0x80]
0x400330:	mov	rsi, rdx
0x400333:	mov	rdi, rax
0x400336:	call	0x40097e
<Block for 0x40033b, 27 bytes>
0x40033b:	mov	edx, dword ptr [rbp - 0x84]
0x400341:	mov	dword ptr [rax], edx
0x400343:	lea	rdx, [rbp - 0x80]
0x400347:	lea	rax, [rbp - 0x50]
0x40034b:	mov	rsi, rdx
0x40034e:	mov	rdi, rax
0x400351:	call	0x4007f2
<Block for 0x400356, 12 bytes>
0x400356:	lea	rax, [rbp - 0x50]
0x40035a:	mov	rdi, rax
0x40035d:	call	0x500060
<Block for 0x400362, 12 bytes>
0x400362:	lea	rax, [rbp - 0x50]
0x400366:	mov	rdi, rax
0x400369:	call	0x4007d2
<Block for 0x40036e, 12 bytes>
0x40036e:	lea	rax, [rbp - 0x80]
0x400372:	mov	rdi, rax
0x400375:	call	0x4007d2
<Block for 0x40037a, 16 bytes>
0x40037a:	nop	
0x40037b:	mov	rax, qword ptr [rbp - 0x18]
0x40037f:	xor	rax, qword ptr fs:[0x28]
0x400388:	je	0x4003c4
<Block for 0x4003c4, 10 bytes>
0x4003c4:	add	rsp, 0x88
0x4003cb:	pop	rbx
0x4003cc:	pop	rbp
0x4003cd:	ret	
<Block for 0x40038a, 2 bytes>
0x40038a:	jmp	0x4003bf
<Block for 0x4003bf, 5 bytes>
0x4003bf:	call	0x500058
