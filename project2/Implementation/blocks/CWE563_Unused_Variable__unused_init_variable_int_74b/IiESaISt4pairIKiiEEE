<Block for 0x400055, 57 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x20
0x400061:	mov	qword ptr [rbp - 0x18], rdi
0x400065:	mov	rax, qword ptr fs:[0x28]
0x40006e:	mov	qword ptr [rbp - 8], rax
0x400072:	xor	eax, eax
0x400074:	mov	dword ptr [rbp - 0x10], 2
0x40007b:	lea	rdx, [rbp - 0x10]
0x40007f:	mov	rax, qword ptr [rbp - 0x18]
0x400083:	mov	rsi, rdx
0x400086:	mov	rdi, rax
0x400089:	call	0x4000e0
<Block for 0x40008e, 15 bytes>
0x40008e:	mov	eax, dword ptr [rax]
0x400090:	mov	dword ptr [rbp - 0xc], eax
0x400093:	mov	eax, dword ptr [rbp - 0xc]
0x400096:	mov	edi, eax
0x400098:	call	0x500008
<Block for 0x40009d, 16 bytes>
0x40009d:	nop	
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	xor	rax, qword ptr fs:[0x28]
0x4000ab:	je	0x4000b2
<Block for 0x4000b2, 2 bytes>
0x4000b2:	leave	
0x4000b3:	ret	
<Block for 0x4000ad, 5 bytes>
0x4000ad:	call	0x500000
