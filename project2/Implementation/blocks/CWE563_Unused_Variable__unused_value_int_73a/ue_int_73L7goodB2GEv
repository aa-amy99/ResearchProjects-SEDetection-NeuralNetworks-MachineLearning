<Block for 0x4001ea, 40 bytes>
0x4001ea:	endbr64	
0x4001ee:	push	rbp
0x4001ef:	mov	rbp, rsp
0x4001f2:	push	rbx
0x4001f3:	sub	rsp, 0x58
0x4001f7:	mov	rax, qword ptr fs:[0x28]
0x400200:	mov	qword ptr [rbp - 0x18], rax
0x400204:	xor	eax, eax
0x400206:	lea	rax, [rbp - 0x50]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x40039c
<Block for 0x400212, 26 bytes>
0x400212:	mov	dword ptr [rbp - 0x54], 5
0x400219:	lea	rdx, [rbp - 0x54]
0x40021d:	lea	rax, [rbp - 0x50]
0x400221:	mov	rsi, rdx
0x400224:	mov	rdi, rax
0x400227:	call	0x4004a6
<Block for 0x40022c, 19 bytes>
0x40022c:	lea	rdx, [rbp - 0x54]
0x400230:	lea	rax, [rbp - 0x50]
0x400234:	mov	rsi, rdx
0x400237:	mov	rdi, rax
0x40023a:	call	0x4004a6
<Block for 0x40023f, 19 bytes>
0x40023f:	lea	rdx, [rbp - 0x54]
0x400243:	lea	rax, [rbp - 0x50]
0x400247:	mov	rsi, rdx
0x40024a:	mov	rdi, rax
0x40024d:	call	0x4004a6
<Block for 0x400252, 19 bytes>
0x400252:	lea	rdx, [rbp - 0x50]
0x400256:	lea	rax, [rbp - 0x30]
0x40025a:	mov	rsi, rdx
0x40025d:	mov	rdi, rax
0x400260:	call	0x4004e0
<Block for 0x400265, 12 bytes>
0x400265:	lea	rax, [rbp - 0x30]
0x400269:	mov	rdi, rax
0x40026c:	call	0x500028
<Block for 0x400271, 12 bytes>
0x400271:	lea	rax, [rbp - 0x30]
0x400275:	mov	rdi, rax
0x400278:	call	0x4003bc
<Block for 0x40027d, 12 bytes>
0x40027d:	lea	rax, [rbp - 0x50]
0x400281:	mov	rdi, rax
0x400284:	call	0x4003bc
<Block for 0x400289, 16 bytes>
0x400289:	nop	
0x40028a:	mov	rax, qword ptr [rbp - 0x18]
0x40028e:	xor	rax, qword ptr fs:[0x28]
0x400297:	je	0x4002d3
<Block for 0x4002d3, 7 bytes>
0x4002d3:	add	rsp, 0x58
0x4002d7:	pop	rbx
0x4002d8:	pop	rbp
0x4002d9:	ret	
<Block for 0x400299, 2 bytes>
0x400299:	jmp	0x4002ce
<Block for 0x4002ce, 5 bytes>
0x4002ce:	call	0x500010
