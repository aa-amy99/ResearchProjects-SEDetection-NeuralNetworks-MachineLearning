<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x40039c
<Block for 0x400028, 26 bytes>
0x400028:	mov	dword ptr [rbp - 0x54], 5
0x40002f:	lea	rdx, [rbp - 0x54]
0x400033:	lea	rax, [rbp - 0x50]
0x400037:	mov	rsi, rdx
0x40003a:	mov	rdi, rax
0x40003d:	call	0x4004a6
<Block for 0x400042, 19 bytes>
0x400042:	lea	rdx, [rbp - 0x54]
0x400046:	lea	rax, [rbp - 0x50]
0x40004a:	mov	rsi, rdx
0x40004d:	mov	rdi, rax
0x400050:	call	0x4004a6
<Block for 0x400055, 19 bytes>
0x400055:	lea	rdx, [rbp - 0x54]
0x400059:	lea	rax, [rbp - 0x50]
0x40005d:	mov	rsi, rdx
0x400060:	mov	rdi, rax
0x400063:	call	0x4004a6
<Block for 0x400068, 19 bytes>
0x400068:	lea	rdx, [rbp - 0x50]
0x40006c:	lea	rax, [rbp - 0x30]
0x400070:	mov	rsi, rdx
0x400073:	mov	rdi, rax
0x400076:	call	0x4004e0
<Block for 0x40007b, 12 bytes>
0x40007b:	lea	rax, [rbp - 0x30]
0x40007f:	mov	rdi, rax
0x400082:	call	0x500000
<Block for 0x400087, 12 bytes>
0x400087:	lea	rax, [rbp - 0x30]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x4003bc
<Block for 0x400093, 12 bytes>
0x400093:	lea	rax, [rbp - 0x50]
0x400097:	mov	rdi, rax
0x40009a:	call	0x4003bc
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 0x18]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000e9
<Block for 0x4000e9, 7 bytes>
0x4000e9:	add	rsp, 0x58
0x4000ed:	pop	rbx
0x4000ee:	pop	rbp
0x4000ef:	ret	
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x4000e4
<Block for 0x4000e4, 5 bytes>
0x4000e4:	call	0x500010
