<Block for 0x4000b5, 55 bytes>
0x4000b5:	endbr64	
0x4000b9:	push	rbp
0x4000ba:	mov	rbp, rsp
0x4000bd:	sub	rsp, 0x150
0x4000c4:	mov	rax, qword ptr fs:[0x28]
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	xor	eax, eax
0x4000d3:	lea	rax, [rbp - 0x140]
0x4000da:	mov	edx, 0x63
0x4000df:	mov	esi, 0x41
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500000
<Block for 0x4000ec, 16 bytes>
0x4000ec:	mov	byte ptr [rbp - 0xdd], 0
0x4000f3:	mov	eax, 0
0x4000f8:	test	eax, eax
0x4000fa:	je	0x40010a
<Block for 0x40010a, 39 bytes>
0x40010a:	lea	rax, [rbp - 0x140]
0x400111:	mov	qword ptr [rbp - 0x148], rax
0x400118:	lea	rax, [rbp - 0xd0]
0x40011f:	mov	edx, 0xc7
0x400124:	mov	esi, 0x43
0x400129:	mov	rdi, rax
0x40012c:	call	0x500000
<Block for 0x4000fc, 12 bytes>
0x4000fc:	lea	rdi, [rip + 0x149]
0x400103:	call	0x500010
<Block for 0x400131, 29 bytes>
0x400131:	mov	byte ptr [rbp - 9], 0
0x400135:	mov	rdx, qword ptr [rbp - 0x148]
0x40013c:	lea	rax, [rbp - 0xd0]
0x400143:	mov	rsi, rdx
0x400146:	mov	rdi, rax
0x400149:	call	0x500008
<Block for 0x400108, 2 bytes>
0x400108:	jmp	0x400118
<Block for 0x40014e, 15 bytes>
0x40014e:	lea	rax, [rbp - 0xd0]
0x400155:	mov	rdi, rax
0x400158:	call	0x500010
<Block for 0x400118, 25 bytes>
0x400118:	lea	rax, [rbp - 0xd0]
0x40011f:	mov	edx, 0xc7
0x400124:	mov	esi, 0x43
0x400129:	mov	rdi, rax
0x40012c:	call	0x500000
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500018
