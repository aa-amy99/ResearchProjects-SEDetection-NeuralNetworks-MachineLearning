<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	edi, 0x190
0x400015:	call	0x500000
<Block for 0x40001a, 25 bytes>
0x40001a:	mov	rdx, rax
0x40001d:	mov	rax, qword ptr [rbp - 0x18]
0x400021:	mov	qword ptr [rax], rdx
0x400024:	mov	qword ptr [rbp - 8], 0
0x40002c:	cmp	qword ptr [rbp - 8], 0x63
0x400031:	ja	0x400052
<Block for 0x400033, 31 bytes>
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	rax, qword ptr [rax]
0x40003a:	mov	rdx, qword ptr [rbp - 8]
0x40003e:	shl	rdx, 2
0x400042:	add	rax, rdx
0x400045:	mov	dword ptr [rax], 5
0x40004b:	add	qword ptr [rbp - 8], 1
0x400050:	jmp	0x40002c
<Block for 0x400052, 12 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x18]
0x400056:	mov	rax, qword ptr [rax]
0x400059:	test	rax, rax
0x40005c:	je	0x40006d
<Block for 0x40002c, 7 bytes>
0x40002c:	cmp	qword ptr [rbp - 8], 0x63
0x400031:	ja	0x400052
<Block for 0x40006d, 3 bytes>
0x40006d:	nop	
0x40006e:	leave	
0x40006f:	ret	
<Block for 0x40005e, 15 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x18]
0x400062:	mov	rax, qword ptr [rax]
0x400065:	mov	rdi, rax
0x400068:	call	0x500008
