<Block for 0x400146, 84 bytes>
0x400146:	endbr64	
0x40014a:	push	rbp
0x40014b:	mov	rbp, rsp
0x40014e:	sub	rsp, 0xe0
0x400155:	mov	rax, qword ptr fs:[0x28]
0x40015e:	mov	qword ptr [rbp - 8], rax
0x400162:	xor	eax, eax
0x400164:	mov	eax, 0x10
0x400169:	sub	rax, 1
0x40016d:	add	rax, 0x6c
0x400171:	mov	ecx, 0x10
0x400176:	mov	edx, 0
0x40017b:	div	rcx
0x40017e:	imul	rax, rax, 0x10
0x400182:	mov	rdx, rax
0x400185:	and	rdx, 0xfffffffffffff000
0x40018c:	mov	rcx, rsp
0x40018f:	sub	rcx, rdx
0x400192:	mov	rdx, rcx
0x400195:	cmp	rsp, rdx
0x400198:	je	0x4001ac
<Block for 0x4001ac, 26 bytes>
0x4001ac:	mov	rdx, rax
0x4001af:	and	edx, 0xfff
0x4001b5:	sub	rsp, rdx
0x4001b8:	mov	rdx, rax
0x4001bb:	and	edx, 0xfff
0x4001c1:	test	rdx, rdx
0x4001c4:	je	0x4001d6
<Block for 0x40019a, 18 bytes>
0x40019a:	sub	rsp, 0x1000
0x4001a1:	or	qword ptr [rsp + 0xff8], 0
0x4001aa:	jmp	0x400195
<Block for 0x4001d6, 47 bytes>
0x4001d6:	mov	rax, rsp
0x4001d9:	add	rax, 0xf
0x4001dd:	shr	rax, 4
0x4001e1:	shl	rax, 4
0x4001e5:	mov	qword ptr [rbp - 0xd8], rax
0x4001ec:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f3:	mov	edx, 0x63
0x4001f8:	mov	esi, 0x41
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500000
<Block for 0x4001c6, 63 bytes>
0x4001c6:	and	eax, 0xfff
0x4001cb:	sub	rax, 8
0x4001cf:	add	rax, rsp
0x4001d2:	or	qword ptr [rax], 0
0x4001d6:	mov	rax, rsp
0x4001d9:	add	rax, 0xf
0x4001dd:	shr	rax, 4
0x4001e1:	shl	rax, 4
0x4001e5:	mov	qword ptr [rbp - 0xd8], rax
0x4001ec:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f3:	mov	edx, 0x63
0x4001f8:	mov	esi, 0x41
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500000
<Block for 0x400195, 5 bytes>
0x400195:	cmp	rsp, rdx
0x400198:	je	0x4001ac
<Block for 0x400205, 25 bytes>
0x400205:	mov	rax, qword ptr [rbp - 0xd8]
0x40020c:	add	rax, 0x63
0x400210:	mov	byte ptr [rax], 0
0x400213:	mov	eax, dword ptr [rip + 0xffdef]
0x400219:	cmp	eax, 5
0x40021c:	je	0x40022c
<Block for 0x40022c, 39 bytes>
0x40022c:	mov	rax, qword ptr [rbp - 0xd8]
0x400233:	mov	qword ptr [rbp - 0xe0], rax
0x40023a:	lea	rax, [rbp - 0xd0]
0x400241:	mov	edx, 0xc7
0x400246:	mov	esi, 0x43
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500000
<Block for 0x40021e, 12 bytes>
0x40021e:	lea	rdi, [rip + 0x1d2]
0x400225:	call	0x500018
<Block for 0x400253, 29 bytes>
0x400253:	mov	byte ptr [rbp - 9], 0
0x400257:	mov	rdx, qword ptr [rbp - 0xe0]
0x40025e:	lea	rax, [rbp - 0xd0]
0x400265:	mov	rsi, rdx
0x400268:	mov	rdi, rax
0x40026b:	call	0x500010
<Block for 0x40022a, 2 bytes>
0x40022a:	jmp	0x40023a
<Block for 0x400270, 15 bytes>
0x400270:	lea	rax, [rbp - 0xd0]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500018
<Block for 0x40023a, 25 bytes>
0x40023a:	lea	rax, [rbp - 0xd0]
0x400241:	mov	edx, 0xc7
0x400246:	mov	esi, 0x43
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500000
<Block for 0x40027f, 16 bytes>
0x40027f:	nop	
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	xor	rax, qword ptr fs:[0x28]
0x40028d:	je	0x400294
<Block for 0x400294, 2 bytes>
0x400294:	leave	
0x400295:	ret	
<Block for 0x40028f, 5 bytes>
0x40028f:	call	0x500020
