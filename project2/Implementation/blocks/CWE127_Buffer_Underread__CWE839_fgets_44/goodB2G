<Block for 0x40025a, 90 bytes>
0x40025a:	endbr64	
0x40025e:	push	rbp
0x40025f:	mov	rbp, rsp
0x400262:	sub	rsp, 0x30
0x400266:	mov	rax, qword ptr fs:[0x28]
0x40026f:	mov	qword ptr [rbp - 8], rax
0x400273:	xor	eax, eax
0x400275:	lea	rax, [rip - 0xa9]
0x40027c:	mov	qword ptr [rbp - 0x20], rax
0x400280:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400287:	mov	qword ptr [rbp - 0x16], 0
0x40028f:	mov	dword ptr [rbp - 0xe], 0
0x400296:	mov	word ptr [rbp - 0xa], 0
0x40029c:	mov	rdx, qword ptr [rip + 0xffd75]
0x4002a3:	lea	rax, [rbp - 0x16]
0x4002a7:	mov	esi, 0xe
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500020
<Block for 0x4002b4, 5 bytes>
0x4002b4:	test	rax, rax
0x4002b7:	je	0x4002ca
<Block for 0x4002ca, 12 bytes>
0x4002ca:	lea	rdi, [rip + 0x66]
0x4002d1:	call	0x500008
<Block for 0x4002b9, 12 bytes>
0x4002b9:	lea	rax, [rbp - 0x16]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500028
<Block for 0x4002d6, 11 bytes>
0x4002d6:	mov	eax, dword ptr [rbp - 0x24]
0x4002d9:	mov	rdx, qword ptr [rbp - 0x20]
0x4002dd:	mov	edi, eax
0x4002df:	call	rdx
<Block for 0x4002c5, 5 bytes>
0x4002c5:	mov	dword ptr [rbp - 0x24], eax
0x4002c8:	jmp	0x4002d6
<Block for 0x4002e1, 16 bytes>
0x4002e1:	nop	
0x4002e2:	mov	rax, qword ptr [rbp - 8]
0x4002e6:	xor	rax, qword ptr fs:[0x28]
0x4002ef:	je	0x4002f6
<Block for 0x4002f6, 2 bytes>
0x4002f6:	leave	
0x4002f7:	ret	
<Block for 0x4002f1, 5 bytes>
0x4002f1:	call	0x500010
