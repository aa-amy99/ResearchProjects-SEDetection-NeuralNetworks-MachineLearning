<Block for 0x40011f, 76 bytes>
0x40011f:	endbr64	
0x400123:	push	rbp
0x400124:	mov	rbp, rsp
0x400127:	sub	rsp, 0x40
0x40012b:	mov	dword ptr [rbp - 0x34], edi
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	mov	qword ptr [rbp - 0x30], 0
0x400145:	mov	qword ptr [rbp - 0x28], 0
0x40014d:	mov	qword ptr [rbp - 0x20], 0
0x400155:	mov	qword ptr [rbp - 0x18], 0
0x40015d:	mov	qword ptr [rbp - 0x10], 0
0x400165:	cmp	dword ptr [rbp - 0x34], 9
0x400169:	jg	0x40017d
<Block for 0x40016b, 16 bytes>
0x40016b:	mov	eax, dword ptr [rbp - 0x34]
0x40016e:	cdqe	
0x400170:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400174:	mov	edi, eax
0x400176:	call	0x500000
<Block for 0x40017d, 12 bytes>
0x40017d:	lea	rdi, [rip + 0x194]
0x400184:	call	0x500008
<Block for 0x40017b, 2 bytes>
0x40017b:	jmp	0x400189
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500010
