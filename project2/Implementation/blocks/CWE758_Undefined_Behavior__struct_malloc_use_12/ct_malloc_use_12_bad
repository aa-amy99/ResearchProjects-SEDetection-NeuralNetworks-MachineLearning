<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400066
<Block for 0x400066, 10 bytes>
0x400066:	mov	edi, 8
0x40006b:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x400070, 11 bytes>
0x400070:	mov	qword ptr [rbp - 0x20], rax
0x400074:	cmp	qword ptr [rbp - 0x20], 0
0x400079:	jne	0x400085
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 0x18], rax
0x400028:	cmp	qword ptr [rbp - 0x18], 0
0x40002d:	jne	0x400039
<Block for 0x40007b, 10 bytes>
0x40007b:	mov	edi, 0xffffffff
0x400080:	call	0x500010
<Block for 0x400085, 46 bytes>
0x400085:	mov	dword ptr [rbp - 0x10], 1
0x40008c:	mov	dword ptr [rbp - 0xc], 2
0x400093:	mov	rax, qword ptr [rbp - 0x20]
0x400097:	mov	rdx, qword ptr [rbp - 0x10]
0x40009b:	mov	qword ptr [rax], rdx
0x40009e:	mov	rax, qword ptr [rbp - 0x20]
0x4000a2:	mov	rax, qword ptr [rax]
0x4000a5:	mov	qword ptr [rbp - 8], rax
0x4000a9:	mov	eax, dword ptr [rbp - 8]
0x4000ac:	mov	edi, eax
0x4000ae:	call	0x500020
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 23 bytes>
0x400039:	mov	rax, qword ptr [rbp - 0x18]
0x40003d:	mov	rax, qword ptr [rax]
0x400040:	mov	qword ptr [rbp - 8], rax
0x400044:	mov	rax, qword ptr [rbp - 0x18]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500018
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 4]
0x4000b6:	mov	edi, eax
0x4000b8:	call	0x500020
<Block for 0x400050, 10 bytes>
0x400050:	mov	eax, dword ptr [rbp - 8]
0x400053:	mov	edi, eax
0x400055:	call	0x500020
<Block for 0x4000bd, 12 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x20]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x40005a, 10 bytes>
0x40005a:	mov	eax, dword ptr [rbp - 4]
0x40005d:	mov	edi, eax
0x40005f:	call	0x500020
<Block for 0x4000c9, 3 bytes>
0x4000c9:	nop	
0x4000ca:	leave	
0x4000cb:	ret	
<Block for 0x400064, 2 bytes>
0x400064:	jmp	0x4000c9
