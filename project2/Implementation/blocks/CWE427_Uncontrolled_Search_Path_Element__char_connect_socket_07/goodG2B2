<Block for 0x40031f, 82 bytes>
0x40031f:	endbr64	
0x400323:	push	rbp
0x400324:	mov	rbp, rsp
0x400327:	sub	rsp, 0x120
0x40032e:	mov	rax, qword ptr fs:[0x28]
0x400337:	mov	qword ptr [rbp - 8], rax
0x40033b:	xor	eax, eax
0x40033d:	movabs	rax, 0x3d48544150
0x400347:	mov	edx, 0
0x40034c:	mov	qword ptr [rbp - 0x110], rax
0x400353:	mov	qword ptr [rbp - 0x108], rdx
0x40035a:	lea	rdx, [rbp - 0x100]
0x400361:	mov	eax, 0
0x400366:	mov	ecx, 0x1d
0x40036b:	mov	rdi, rdx
0x40036e:	rep stosq	qword ptr [rdi], rax
<Block for 0x400371, 35 bytes>
0x400371:	mov	rdx, rdi
0x400374:	mov	word ptr [rdx], ax
0x400377:	add	rdx, 2
0x40037b:	lea	rax, [rbp - 0x110]
0x400382:	mov	qword ptr [rbp - 0x118], rax
0x400389:	mov	eax, dword ptr [rip + 0x85]
0x40038f:	cmp	eax, 5
0x400392:	jne	0x4003cd
<Block for 0x40036e, 3 bytes>
0x40036e:	rep stosq	qword ptr [rdi], rax
<Block for 0x400394, 27 bytes>
0x400394:	mov	rax, qword ptr [rbp - 0x118]
0x40039b:	mov	rcx, -1
0x4003a2:	mov	rdx, rax
0x4003a5:	mov	eax, 0
0x4003aa:	mov	rdi, rdx
0x4003ad:	repne scasb	al, byte ptr [rdi]
<Block for 0x4003cd, 15 bytes>
0x4003cd:	mov	rax, qword ptr [rbp - 0x118]
0x4003d4:	mov	rdi, rax
0x4003d7:	call	0x500048
<Block for 0x4003af, 45 bytes>
0x4003af:	mov	rax, rcx
0x4003b2:	not	rax
0x4003b5:	lea	rdx, [rax - 1]
0x4003b9:	mov	rax, qword ptr [rbp - 0x118]
0x4003c0:	add	rax, rdx
0x4003c3:	mov	dword ptr [rax], 0x6e69622f
0x4003c9:	mov	byte ptr [rax + 4], 0
0x4003cd:	mov	rax, qword ptr [rbp - 0x118]
0x4003d4:	mov	rdi, rax
0x4003d7:	call	0x500048
<Block for 0x4003ad, 2 bytes>
0x4003ad:	repne scasb	al, byte ptr [rdi]
<Block for 0x4003dc, 16 bytes>
0x4003dc:	nop	
0x4003dd:	mov	rax, qword ptr [rbp - 8]
0x4003e1:	xor	rax, qword ptr fs:[0x28]
0x4003ea:	je	0x4003f1
<Block for 0x4003f1, 2 bytes>
0x4003f1:	leave	
0x4003f2:	ret	
<Block for 0x4003ec, 5 bytes>
0x4003ec:	call	0x500050
