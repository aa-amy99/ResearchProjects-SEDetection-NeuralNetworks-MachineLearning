<Block for 0x4000bc, 69 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	sub	rsp, 0xf0
0x4000cb:	mov	rax, qword ptr fs:[0x28]
0x4000d4:	mov	qword ptr [rbp - 8], rax
0x4000d8:	xor	eax, eax
0x4000da:	lea	rax, [rbp - 0xe0]
0x4000e1:	mov	qword ptr [rbp - 0xf0], rax
0x4000e8:	mov	dword ptr [rip + 0x166], 0
0x4000f2:	mov	rax, qword ptr [rbp - 0xf0]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500030
<Block for 0x400101, 29 bytes>
0x400101:	mov	qword ptr [rbp - 0xf0], rax
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x43
0x400116:	mov	rdi, rax
0x400119:	call	0x500008
<Block for 0x40011e, 16 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0
0x400122:	lea	rax, [rbp - 0x70]
0x400126:	mov	rdi, rax
0x400129:	call	0x500010
<Block for 0x40012e, 36 bytes>
0x40012e:	mov	qword ptr [rbp - 0xe8], rax
0x400135:	mov	rdx, qword ptr [rbp - 0xe8]
0x40013c:	lea	rcx, [rbp - 0x70]
0x400140:	mov	rax, qword ptr [rbp - 0xf0]
0x400147:	mov	rsi, rcx
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500018
<Block for 0x400152, 15 bytes>
0x400152:	mov	rax, qword ptr [rbp - 0xf0]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500020
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500028
