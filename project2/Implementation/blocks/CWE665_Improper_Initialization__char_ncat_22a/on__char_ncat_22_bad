<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	mov	dword ptr [rip + 0x21e], 1
0x400036:	mov	rax, qword ptr [rbp - 0xf0]
0x40003d:	mov	rdi, rax
0x400040:	call	0x500000
<Block for 0x400045, 29 bytes>
0x400045:	mov	qword ptr [rbp - 0xf0], rax
0x40004c:	lea	rax, [rbp - 0x70]
0x400050:	mov	edx, 0x63
0x400055:	mov	esi, 0x43
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500008
<Block for 0x400062, 16 bytes>
0x400062:	mov	byte ptr [rbp - 0xd], 0
0x400066:	lea	rax, [rbp - 0x70]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400072, 36 bytes>
0x400072:	mov	qword ptr [rbp - 0xe8], rax
0x400079:	mov	rdx, qword ptr [rbp - 0xe8]
0x400080:	lea	rcx, [rbp - 0x70]
0x400084:	mov	rax, qword ptr [rbp - 0xf0]
0x40008b:	mov	rsi, rcx
0x40008e:	mov	rdi, rax
0x400091:	call	0x500018
<Block for 0x400096, 15 bytes>
0x400096:	mov	rax, qword ptr [rbp - 0xf0]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500020
<Block for 0x4000a5, 16 bytes>
0x4000a5:	nop	
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	xor	rax, qword ptr fs:[0x28]
0x4000b3:	je	0x4000ba
<Block for 0x4000ba, 2 bytes>
0x4000ba:	leave	
0x4000bb:	ret	
<Block for 0x4000b5, 5 bytes>
0x4000b5:	call	0x500028
