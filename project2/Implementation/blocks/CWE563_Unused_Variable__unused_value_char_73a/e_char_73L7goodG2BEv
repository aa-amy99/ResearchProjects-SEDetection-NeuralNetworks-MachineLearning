<Block for 0x4000ed, 40 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	push	rbx
0x4000f6:	sub	rsp, 0x58
0x4000fa:	mov	rax, qword ptr fs:[0x28]
0x400103:	mov	qword ptr [rbp - 0x18], rax
0x400107:	xor	eax, eax
0x400109:	lea	rax, [rbp - 0x50]
0x40010d:	mov	rdi, rax
0x400110:	call	0x400398
<Block for 0x400115, 18 bytes>
0x400115:	mov	byte ptr [rbp - 0x51], 0x43
0x400119:	movzx	eax, byte ptr [rbp - 0x51]
0x40011d:	movsx	eax, al
0x400120:	mov	edi, eax
0x400122:	call	0x500018
<Block for 0x400127, 19 bytes>
0x400127:	lea	rdx, [rbp - 0x51]
0x40012b:	lea	rax, [rbp - 0x50]
0x40012f:	mov	rsi, rdx
0x400132:	mov	rdi, rax
0x400135:	call	0x4004a0
<Block for 0x40013a, 19 bytes>
0x40013a:	lea	rdx, [rbp - 0x51]
0x40013e:	lea	rax, [rbp - 0x50]
0x400142:	mov	rsi, rdx
0x400145:	mov	rdi, rax
0x400148:	call	0x4004a0
<Block for 0x40014d, 19 bytes>
0x40014d:	lea	rdx, [rbp - 0x51]
0x400151:	lea	rax, [rbp - 0x50]
0x400155:	mov	rsi, rdx
0x400158:	mov	rdi, rax
0x40015b:	call	0x4004a0
<Block for 0x400160, 19 bytes>
0x400160:	lea	rdx, [rbp - 0x50]
0x400164:	lea	rax, [rbp - 0x30]
0x400168:	mov	rsi, rdx
0x40016b:	mov	rdi, rax
0x40016e:	call	0x4004da
<Block for 0x400173, 12 bytes>
0x400173:	lea	rax, [rbp - 0x30]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500020
<Block for 0x40017f, 12 bytes>
0x40017f:	lea	rax, [rbp - 0x30]
0x400183:	mov	rdi, rax
0x400186:	call	0x4003b8
<Block for 0x40018b, 12 bytes>
0x40018b:	lea	rax, [rbp - 0x50]
0x40018f:	mov	rdi, rax
0x400192:	call	0x4003b8
<Block for 0x400197, 16 bytes>
0x400197:	nop	
0x400198:	mov	rax, qword ptr [rbp - 0x18]
0x40019c:	xor	rax, qword ptr fs:[0x28]
0x4001a5:	je	0x4001e1
<Block for 0x4001e1, 7 bytes>
0x4001e1:	add	rsp, 0x58
0x4001e5:	pop	rbx
0x4001e6:	pop	rbp
0x4001e7:	ret	
<Block for 0x4001a7, 2 bytes>
0x4001a7:	jmp	0x4001dc
<Block for 0x4001dc, 5 bytes>
0x4001dc:	call	0x500010
