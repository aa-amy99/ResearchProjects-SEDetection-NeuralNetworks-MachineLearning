<Block for 0x4001e8, 40 bytes>
0x4001e8:	endbr64	
0x4001ec:	push	rbp
0x4001ed:	mov	rbp, rsp
0x4001f0:	push	rbx
0x4001f1:	sub	rsp, 0x58
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 0x18], rax
0x400202:	xor	eax, eax
0x400204:	lea	rax, [rbp - 0x50]
0x400208:	mov	rdi, rax
0x40020b:	call	0x400398
<Block for 0x400210, 23 bytes>
0x400210:	mov	byte ptr [rbp - 0x51], 0x43
0x400214:	lea	rdx, [rbp - 0x51]
0x400218:	lea	rax, [rbp - 0x50]
0x40021c:	mov	rsi, rdx
0x40021f:	mov	rdi, rax
0x400222:	call	0x4004a0
<Block for 0x400227, 19 bytes>
0x400227:	lea	rdx, [rbp - 0x51]
0x40022b:	lea	rax, [rbp - 0x50]
0x40022f:	mov	rsi, rdx
0x400232:	mov	rdi, rax
0x400235:	call	0x4004a0
<Block for 0x40023a, 19 bytes>
0x40023a:	lea	rdx, [rbp - 0x51]
0x40023e:	lea	rax, [rbp - 0x50]
0x400242:	mov	rsi, rdx
0x400245:	mov	rdi, rax
0x400248:	call	0x4004a0
<Block for 0x40024d, 19 bytes>
0x40024d:	lea	rdx, [rbp - 0x50]
0x400251:	lea	rax, [rbp - 0x30]
0x400255:	mov	rsi, rdx
0x400258:	mov	rdi, rax
0x40025b:	call	0x4004da
<Block for 0x400260, 12 bytes>
0x400260:	lea	rax, [rbp - 0x30]
0x400264:	mov	rdi, rax
0x400267:	call	0x500028
<Block for 0x40026c, 12 bytes>
0x40026c:	lea	rax, [rbp - 0x30]
0x400270:	mov	rdi, rax
0x400273:	call	0x4003b8
<Block for 0x400278, 12 bytes>
0x400278:	lea	rax, [rbp - 0x50]
0x40027c:	mov	rdi, rax
0x40027f:	call	0x4003b8
<Block for 0x400284, 16 bytes>
0x400284:	nop	
0x400285:	mov	rax, qword ptr [rbp - 0x18]
0x400289:	xor	rax, qword ptr fs:[0x28]
0x400292:	je	0x4002ce
<Block for 0x4002ce, 7 bytes>
0x4002ce:	add	rsp, 0x58
0x4002d2:	pop	rbx
0x4002d3:	pop	rbp
0x4002d4:	ret	
<Block for 0x400294, 2 bytes>
0x400294:	jmp	0x4002c9
<Block for 0x4002c9, 5 bytes>
0x4002c9:	call	0x500010
