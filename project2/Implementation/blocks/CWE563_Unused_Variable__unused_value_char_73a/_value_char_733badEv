<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400398
<Block for 0x400028, 23 bytes>
0x400028:	mov	byte ptr [rbp - 0x51], 0x43
0x40002c:	lea	rdx, [rbp - 0x51]
0x400030:	lea	rax, [rbp - 0x50]
0x400034:	mov	rsi, rdx
0x400037:	mov	rdi, rax
0x40003a:	call	0x4004a0
<Block for 0x40003f, 19 bytes>
0x40003f:	lea	rdx, [rbp - 0x51]
0x400043:	lea	rax, [rbp - 0x50]
0x400047:	mov	rsi, rdx
0x40004a:	mov	rdi, rax
0x40004d:	call	0x4004a0
<Block for 0x400052, 19 bytes>
0x400052:	lea	rdx, [rbp - 0x51]
0x400056:	lea	rax, [rbp - 0x50]
0x40005a:	mov	rsi, rdx
0x40005d:	mov	rdi, rax
0x400060:	call	0x4004a0
<Block for 0x400065, 19 bytes>
0x400065:	lea	rdx, [rbp - 0x50]
0x400069:	lea	rax, [rbp - 0x30]
0x40006d:	mov	rsi, rdx
0x400070:	mov	rdi, rax
0x400073:	call	0x4004da
<Block for 0x400078, 12 bytes>
0x400078:	lea	rax, [rbp - 0x30]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500000
<Block for 0x400084, 12 bytes>
0x400084:	lea	rax, [rbp - 0x30]
0x400088:	mov	rdi, rax
0x40008b:	call	0x4003b8
<Block for 0x400090, 12 bytes>
0x400090:	lea	rax, [rbp - 0x50]
0x400094:	mov	rdi, rax
0x400097:	call	0x4003b8
<Block for 0x40009c, 16 bytes>
0x40009c:	nop	
0x40009d:	mov	rax, qword ptr [rbp - 0x18]
0x4000a1:	xor	rax, qword ptr fs:[0x28]
0x4000aa:	je	0x4000e6
<Block for 0x4000e6, 7 bytes>
0x4000e6:	add	rsp, 0x58
0x4000ea:	pop	rbx
0x4000eb:	pop	rbp
0x4000ec:	ret	
<Block for 0x4000ac, 2 bytes>
0x4000ac:	jmp	0x4000e1
<Block for 0x4000e1, 5 bytes>
0x4000e1:	call	0x500010
