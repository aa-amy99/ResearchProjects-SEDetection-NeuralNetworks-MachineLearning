<Block for 0x40030b, 68 bytes>
0x40030b:	endbr64	
0x40030f:	push	rbp
0x400310:	mov	rbp, rsp
0x400313:	sub	rsp, 0x40
0x400317:	mov	rax, qword ptr fs:[0x28]
0x400320:	mov	qword ptr [rbp - 8], rax
0x400324:	xor	eax, eax
0x400326:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40032d:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400334:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x40033b:	mov	edx, 6
0x400340:	mov	esi, 1
0x400345:	mov	edi, 2
0x40034a:	call	0x500018
<Block for 0x40034f, 13 bytes>
0x40034f:	mov	dword ptr [rbp - 0x38], eax
0x400352:	cmp	dword ptr [rbp - 0x38], -1
0x400356:	je	0x40041b
<Block for 0x40041b, 3 bytes>
0x40041b:	nop	
0x40041c:	jmp	0x400425
<Block for 0x40035c, 22 bytes>
0x40035c:	lea	rax, [rbp - 0x30]
0x400360:	mov	edx, 0x10
0x400365:	mov	esi, 0
0x40036a:	mov	rdi, rax
0x40036d:	call	0x500020
<Block for 0x400425, 6 bytes>
0x400425:	cmp	dword ptr [rbp - 0x38], -1
0x400429:	je	0x400435
<Block for 0x400372, 23 bytes>
0x400372:	mov	word ptr [rbp - 0x30], 2
0x400378:	mov	dword ptr [rbp - 0x2c], 0
0x40037f:	mov	edi, 0x6987
0x400384:	call	0x500028
<Block for 0x400435, 6 bytes>
0x400435:	cmp	dword ptr [rbp - 0x3c], -1
0x400439:	je	0x400445
<Block for 0x40042b, 10 bytes>
0x40042b:	mov	eax, dword ptr [rbp - 0x38]
0x40042e:	mov	edi, eax
0x400430:	call	0x500058
<Block for 0x400389, 26 bytes>
0x400389:	mov	word ptr [rbp - 0x2e], ax
0x40038d:	lea	rcx, [rbp - 0x30]
0x400391:	mov	eax, dword ptr [rbp - 0x38]
0x400394:	mov	edx, 0x10
0x400399:	mov	rsi, rcx
0x40039c:	mov	edi, eax
0x40039e:	call	0x500030
<Block for 0x400445, 10 bytes>
0x400445:	mov	eax, dword ptr [rbp - 0x40]
0x400448:	mov	edi, eax
0x40044a:	call	0x400284
<Block for 0x40043b, 10 bytes>
0x40043b:	mov	eax, dword ptr [rbp - 0x3c]
0x40043e:	mov	edi, eax
0x400440:	call	0x500058
<Block for 0x4003a3, 5 bytes>
0x4003a3:	cmp	eax, -1
0x4003a6:	je	0x40041e
<Block for 0x40044f, 16 bytes>
0x40044f:	nop	
0x400450:	mov	rax, qword ptr [rbp - 8]
0x400454:	xor	rax, qword ptr fs:[0x28]
0x40045d:	je	0x400464
<Block for 0x40041e, 3 bytes>
0x40041e:	nop	
0x40041f:	jmp	0x400425
<Block for 0x4003a8, 15 bytes>
0x4003a8:	mov	eax, dword ptr [rbp - 0x38]
0x4003ab:	mov	esi, 5
0x4003b0:	mov	edi, eax
0x4003b2:	call	0x500038
<Block for 0x400464, 2 bytes>
0x400464:	leave	
0x400465:	ret	
<Block for 0x40045f, 5 bytes>
0x40045f:	call	0x500010
<Block for 0x4003b7, 5 bytes>
0x4003b7:	cmp	eax, -1
0x4003ba:	je	0x400421
<Block for 0x400421, 3 bytes>
0x400421:	nop	
0x400422:	jmp	0x400425
<Block for 0x4003bc, 20 bytes>
0x4003bc:	mov	eax, dword ptr [rbp - 0x38]
0x4003bf:	mov	edx, 0
0x4003c4:	mov	esi, 0
0x4003c9:	mov	edi, eax
0x4003cb:	call	0x500040
<Block for 0x4003d0, 9 bytes>
0x4003d0:	mov	dword ptr [rbp - 0x3c], eax
0x4003d3:	cmp	dword ptr [rbp - 0x3c], -1
0x4003d7:	je	0x400424
<Block for 0x4003d9, 24 bytes>
0x4003d9:	lea	rsi, [rbp - 0x16]
0x4003dd:	mov	eax, dword ptr [rbp - 0x3c]
0x4003e0:	mov	ecx, 0
0x4003e5:	mov	edx, 0xd
0x4003ea:	mov	edi, eax
0x4003ec:	call	0x500048
<Block for 0x400424, 1 bytes>
0x400424:	nop	
<Block for 0x4003f1, 9 bytes>
0x4003f1:	mov	dword ptr [rbp - 0x34], eax
0x4003f4:	cmp	dword ptr [rbp - 0x34], -1
0x4003f8:	je	0x400425
<Block for 0x4003fa, 6 bytes>
0x4003fa:	cmp	dword ptr [rbp - 0x34], 0
0x4003fe:	je	0x400425
<Block for 0x400400, 22 bytes>
0x400400:	mov	eax, dword ptr [rbp - 0x34]
0x400403:	cdqe	
0x400405:	mov	byte ptr [rbp + rax - 0x16], 0
0x40040a:	lea	rax, [rbp - 0x16]
0x40040e:	mov	rdi, rax
0x400411:	call	0x500050
<Block for 0x400416, 5 bytes>
0x400416:	mov	dword ptr [rbp - 0x40], eax
0x400419:	jmp	0x400425
