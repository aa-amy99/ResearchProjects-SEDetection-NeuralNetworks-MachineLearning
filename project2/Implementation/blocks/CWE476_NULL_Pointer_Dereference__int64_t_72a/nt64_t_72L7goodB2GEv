<Block for 0x4002f2, 40 bytes>
0x4002f2:	endbr64	
0x4002f6:	push	rbp
0x4002f7:	mov	rbp, rsp
0x4002fa:	push	rbx
0x4002fb:	sub	rsp, 0x58
0x4002ff:	mov	rax, qword ptr fs:[0x28]
0x400308:	mov	qword ptr [rbp - 0x18], rax
0x40030c:	xor	eax, eax
0x40030e:	lea	rax, [rbp - 0x50]
0x400312:	mov	rdi, rax
0x400315:	call	0x4004ea
<Block for 0x40031a, 20 bytes>
0x40031a:	mov	qword ptr [rbp - 0x60], 0
0x400322:	lea	rax, [rbp - 0x50]
0x400326:	mov	rdi, rax
0x400329:	call	0x400692
<Block for 0x40032e, 23 bytes>
0x40032e:	mov	qword ptr [rbp - 0x58], rax
0x400332:	lea	rdx, [rbp - 0x58]
0x400336:	lea	rax, [rbp - 0x30]
0x40033a:	mov	rsi, rdx
0x40033d:	mov	rdi, rax
0x400340:	call	0x4006e2
<Block for 0x400345, 28 bytes>
0x400345:	lea	rdx, [rbp - 0x60]
0x400349:	mov	rsi, qword ptr [rbp - 0x30]
0x40034d:	lea	rax, [rbp - 0x50]
0x400351:	mov	rcx, rdx
0x400354:	mov	edx, 1
0x400359:	mov	rdi, rax
0x40035c:	call	0x400710
<Block for 0x400361, 12 bytes>
0x400361:	lea	rax, [rbp - 0x50]
0x400365:	mov	rdi, rax
0x400368:	call	0x400692
<Block for 0x40036d, 23 bytes>
0x40036d:	mov	qword ptr [rbp - 0x58], rax
0x400371:	lea	rdx, [rbp - 0x58]
0x400375:	lea	rax, [rbp - 0x30]
0x400379:	mov	rsi, rdx
0x40037c:	mov	rdi, rax
0x40037f:	call	0x4006e2
<Block for 0x400384, 28 bytes>
0x400384:	lea	rdx, [rbp - 0x60]
0x400388:	mov	rsi, qword ptr [rbp - 0x30]
0x40038c:	lea	rax, [rbp - 0x50]
0x400390:	mov	rcx, rdx
0x400393:	mov	edx, 1
0x400398:	mov	rdi, rax
0x40039b:	call	0x400710
<Block for 0x4003a0, 12 bytes>
0x4003a0:	lea	rax, [rbp - 0x50]
0x4003a4:	mov	rdi, rax
0x4003a7:	call	0x400692
<Block for 0x4003ac, 23 bytes>
0x4003ac:	mov	qword ptr [rbp - 0x58], rax
0x4003b0:	lea	rdx, [rbp - 0x58]
0x4003b4:	lea	rax, [rbp - 0x30]
0x4003b8:	mov	rsi, rdx
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x4006e2
<Block for 0x4003c3, 28 bytes>
0x4003c3:	lea	rdx, [rbp - 0x60]
0x4003c7:	mov	rsi, qword ptr [rbp - 0x30]
0x4003cb:	lea	rax, [rbp - 0x50]
0x4003cf:	mov	rcx, rdx
0x4003d2:	mov	edx, 1
0x4003d7:	mov	rdi, rax
0x4003da:	call	0x400710
<Block for 0x4003df, 19 bytes>
0x4003df:	lea	rdx, [rbp - 0x50]
0x4003e3:	lea	rax, [rbp - 0x30]
0x4003e7:	mov	rsi, rdx
0x4003ea:	mov	rdi, rax
0x4003ed:	call	0x4007d6
<Block for 0x4003f2, 12 bytes>
0x4003f2:	lea	rax, [rbp - 0x30]
0x4003f6:	mov	rdi, rax
0x4003f9:	call	0x500020
<Block for 0x4003fe, 12 bytes>
0x4003fe:	lea	rax, [rbp - 0x30]
0x400402:	mov	rdi, rax
0x400405:	call	0x40064a
<Block for 0x40040a, 12 bytes>
0x40040a:	lea	rax, [rbp - 0x50]
0x40040e:	mov	rdi, rax
0x400411:	call	0x40064a
<Block for 0x400416, 16 bytes>
0x400416:	nop	
0x400417:	mov	rax, qword ptr [rbp - 0x18]
0x40041b:	xor	rax, qword ptr fs:[0x28]
0x400424:	je	0x400460
<Block for 0x400460, 7 bytes>
0x400460:	add	rsp, 0x58
0x400464:	pop	rbx
0x400465:	pop	rbp
0x400466:	ret	
<Block for 0x400426, 2 bytes>
0x400426:	jmp	0x40045b
<Block for 0x40045b, 5 bytes>
0x40045b:	call	0x500010
