<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400022:	mov	qword ptr [rbp - 0x16], 0
0x40002a:	mov	dword ptr [rbp - 0xe], 0
0x400031:	mov	word ptr [rbp - 0xa], 0
0x400037:	mov	rdx, qword ptr [rip + 0xfffc2]
0x40003e:	lea	rax, [rbp - 0x16]
0x400042:	mov	esi, 0xe
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 10 bytes>
0x40004f:	test	rax, rax
0x400052:	setne	al
0x400055:	test	al, al
0x400057:	je	0x40006a
<Block for 0x40006a, 12 bytes>
0x40006a:	lea	rdi, [rip + 0xc2]
0x400071:	call	0x500018
<Block for 0x400059, 12 bytes>
0x400059:	lea	rax, [rbp - 0x16]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x400076, 43 bytes>
0x400076:	lea	rax, [rip + 0xfffb3]
0x40007d:	mov	qword ptr [rbp - 0x28], rax
0x400081:	lea	rax, [rbp - 0x28]
0x400085:	mov	qword ptr [rbp - 0x20], rax
0x400089:	mov	rax, qword ptr [rbp - 0x20]
0x40008d:	mov	rax, qword ptr [rax]
0x400090:	mov	rcx, qword ptr [rax]
0x400093:	mov	edx, dword ptr [rbp - 0x2c]
0x400096:	mov	rax, qword ptr [rbp - 0x20]
0x40009a:	mov	esi, edx
0x40009c:	mov	rdi, rax
0x40009f:	call	rcx
<Block for 0x400065, 5 bytes>
0x400065:	mov	dword ptr [rbp - 0x2c], eax
0x400068:	jmp	0x400076
<Block for 0x4000a1, 16 bytes>
0x4000a1:	nop	
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	xor	rax, qword ptr fs:[0x28]
0x4000af:	je	0x4000b6
<Block for 0x4000b6, 2 bytes>
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000b1, 5 bytes>
0x4000b1:	call	0x500028
