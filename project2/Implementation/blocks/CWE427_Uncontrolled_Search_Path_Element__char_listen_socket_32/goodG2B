<Block for 0x4002e0, 110 bytes>
0x4002e0:	endbr64	
0x4002e4:	push	rbp
0x4002e5:	mov	rbp, rsp
0x4002e8:	sub	rsp, 0x140
0x4002ef:	mov	rax, qword ptr fs:[0x28]
0x4002f8:	mov	qword ptr [rbp - 8], rax
0x4002fc:	xor	eax, eax
0x4002fe:	lea	rax, [rbp - 0x138]
0x400305:	mov	qword ptr [rbp - 0x130], rax
0x40030c:	lea	rax, [rbp - 0x138]
0x400313:	mov	qword ptr [rbp - 0x128], rax
0x40031a:	movabs	rax, 0x3d48544150
0x400324:	mov	edx, 0
0x400329:	mov	qword ptr [rbp - 0x110], rax
0x400330:	mov	qword ptr [rbp - 0x108], rdx
0x400337:	lea	rdx, [rbp - 0x100]
0x40033e:	mov	eax, 0
0x400343:	mov	ecx, 0x1d
0x400348:	mov	rdi, rdx
0x40034b:	rep stosq	qword ptr [rdi], rax
<Block for 0x40034e, 68 bytes>
0x40034e:	mov	rdx, rdi
0x400351:	mov	word ptr [rdx], ax
0x400354:	add	rdx, 2
0x400358:	lea	rax, [rbp - 0x110]
0x40035f:	mov	qword ptr [rbp - 0x138], rax
0x400366:	mov	rax, qword ptr [rbp - 0x130]
0x40036d:	mov	rax, qword ptr [rax]
0x400370:	mov	qword ptr [rbp - 0x120], rax
0x400377:	mov	rax, qword ptr [rbp - 0x120]
0x40037e:	mov	rcx, -1
0x400385:	mov	rdx, rax
0x400388:	mov	eax, 0
0x40038d:	mov	rdi, rdx
0x400390:	repne scasb	al, byte ptr [rdi]
<Block for 0x40034b, 3 bytes>
0x40034b:	rep stosq	qword ptr [rdi], rax
<Block for 0x400392, 79 bytes>
0x400392:	mov	rax, rcx
0x400395:	not	rax
0x400398:	lea	rdx, [rax - 1]
0x40039c:	mov	rax, qword ptr [rbp - 0x120]
0x4003a3:	add	rax, rdx
0x4003a6:	mov	dword ptr [rax], 0x6e69622f
0x4003ac:	mov	byte ptr [rax + 4], 0
0x4003b0:	mov	rax, qword ptr [rbp - 0x130]
0x4003b7:	mov	rdx, qword ptr [rbp - 0x120]
0x4003be:	mov	qword ptr [rax], rdx
0x4003c1:	mov	rax, qword ptr [rbp - 0x128]
0x4003c8:	mov	rax, qword ptr [rax]
0x4003cb:	mov	qword ptr [rbp - 0x118], rax
0x4003d2:	mov	rax, qword ptr [rbp - 0x118]
0x4003d9:	mov	rdi, rax
0x4003dc:	call	0x500050
<Block for 0x400390, 2 bytes>
0x400390:	repne scasb	al, byte ptr [rdi]
<Block for 0x4003e1, 16 bytes>
0x4003e1:	nop	
0x4003e2:	mov	rax, qword ptr [rbp - 8]
0x4003e6:	xor	rax, qword ptr fs:[0x28]
0x4003ef:	je	0x4003f6
<Block for 0x4003f6, 2 bytes>
0x4003f6:	leave	
0x4003f7:	ret	
<Block for 0x4003f1, 5 bytes>
0x4003f1:	call	0x500058
