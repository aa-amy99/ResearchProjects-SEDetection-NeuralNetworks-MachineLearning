<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x1c], 5
0x400014:	mov	edi, 8
0x400019:	call	0x500000
<Block for 0x40001e, 11 bytes>
0x40001e:	mov	rbx, rax
0x400021:	mov	rdi, rbx
0x400024:	call	0x4000f4
<Block for 0x400029, 28 bytes>
0x400029:	mov	qword ptr [rbp - 0x18], rbx
0x40002d:	mov	rax, qword ptr [rbp - 0x18]
0x400031:	mov	rax, qword ptr [rax]
0x400034:	mov	rcx, qword ptr [rax]
0x400037:	mov	edx, dword ptr [rbp - 0x1c]
0x40003a:	mov	rax, qword ptr [rbp - 0x18]
0x40003e:	mov	esi, edx
0x400040:	mov	rdi, rax
0x400043:	call	rcx
<Block for 0x400045, 9 bytes>
0x400045:	mov	rax, qword ptr [rbp - 0x18]
0x400049:	test	rax, rax
0x40004c:	je	0x40005b
<Block for 0x40005b, 8 bytes>
0x40005b:	nop	
0x40005c:	add	rsp, 0x18
0x400060:	pop	rbx
0x400061:	pop	rbp
0x400062:	ret	
<Block for 0x40004e, 13 bytes>
0x40004e:	mov	esi, 8
0x400053:	mov	rdi, rax
0x400056:	call	0x500008
