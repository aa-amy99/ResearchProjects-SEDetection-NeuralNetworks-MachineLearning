<Block for 0x4001da, 26 bytes>
0x4001da:	endbr64	
0x4001de:	push	rbp
0x4001df:	mov	rbp, rsp
0x4001e2:	sub	rsp, 0x20
0x4001e6:	mov	qword ptr [rbp - 0x18], rdi
0x4001ea:	mov	eax, dword ptr [rip + 0xec]
0x4001f0:	test	eax, eax
0x4001f2:	je	0x40022b
<Block for 0x40022b, 6 bytes>
0x40022b:	mov	rax, qword ptr [rbp - 0x18]
0x40022f:	leave	
0x400230:	ret	
<Block for 0x4001f4, 10 bytes>
0x4001f4:	mov	edi, 0x64
0x4001f9:	call	0x500000
<Block for 0x4001fe, 26 bytes>
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	mov	rax, qword ptr [rbp - 8]
0x400206:	mov	edx, 0x63
0x40020b:	mov	esi, 0x41
0x400210:	mov	rdi, rax
0x400213:	call	0x500008
<Block for 0x400218, 25 bytes>
0x400218:	mov	rax, qword ptr [rbp - 8]
0x40021c:	add	rax, 0x63
0x400220:	mov	byte ptr [rax], 0
0x400223:	mov	rax, qword ptr [rbp - 8]
0x400227:	mov	qword ptr [rbp - 0x18], rax
0x40022b:	mov	rax, qword ptr [rbp - 0x18]
0x40022f:	leave	
0x400230:	ret	
