<Block for 0x4000e8, 26 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x20
0x4000f4:	mov	qword ptr [rbp - 0x18], rdi
0x4000f8:	mov	eax, dword ptr [rip + 0x1da]
0x4000fe:	test	eax, eax
0x400100:	je	0x400110
<Block for 0x400110, 10 bytes>
0x400110:	mov	edi, 0x64
0x400115:	call	0x500000
<Block for 0x400102, 12 bytes>
0x400102:	lea	rdi, [rip + 0x1d7]
0x400109:	call	0x500018
<Block for 0x40011a, 26 bytes>
0x40011a:	mov	qword ptr [rbp - 8], rax
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x41
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x40010e, 2 bytes>
0x40010e:	jmp	0x400147
<Block for 0x400134, 25 bytes>
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	add	rax, 0x63
0x40013c:	mov	byte ptr [rax], 0
0x40013f:	mov	rax, qword ptr [rbp - 8]
0x400143:	mov	qword ptr [rbp - 0x18], rax
0x400147:	mov	rax, qword ptr [rbp - 0x18]
0x40014b:	leave	
0x40014c:	ret	
<Block for 0x400147, 6 bytes>
0x400147:	mov	rax, qword ptr [rbp - 0x18]
0x40014b:	leave	
0x40014c:	ret	
