<Block for 0x400231, 57 bytes>
0x400231:	endbr64	
0x400235:	push	rbp
0x400236:	mov	rbp, rsp
0x400239:	add	rsp, -0x80
0x40023d:	mov	rax, qword ptr fs:[0x28]
0x400246:	mov	qword ptr [rbp - 8], rax
0x40024a:	xor	eax, eax
0x40024c:	mov	qword ptr [rbp - 0x78], 0
0x400254:	mov	dword ptr [rip + 0x7e], 1
0x40025e:	mov	rax, qword ptr [rbp - 0x78]
0x400262:	mov	rdi, rax
0x400265:	call	0x4001da
<Block for 0x40026a, 26 bytes>
0x40026a:	mov	qword ptr [rbp - 0x78], rax
0x40026e:	lea	rax, [rbp - 0x70]
0x400272:	mov	edx, 0x63
0x400277:	mov	esi, 0x43
0x40027c:	mov	rdi, rax
0x40027f:	call	0x500008
<Block for 0x400284, 23 bytes>
0x400284:	mov	byte ptr [rbp - 0xd], 0
0x400288:	lea	rdx, [rbp - 0x70]
0x40028c:	mov	rax, qword ptr [rbp - 0x78]
0x400290:	mov	rsi, rdx
0x400293:	mov	rdi, rax
0x400296:	call	0x500010
<Block for 0x40029b, 12 bytes>
0x40029b:	mov	rax, qword ptr [rbp - 0x78]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500018
<Block for 0x4002a7, 16 bytes>
0x4002a7:	nop	
0x4002a8:	mov	rax, qword ptr [rbp - 8]
0x4002ac:	xor	rax, qword ptr fs:[0x28]
0x4002b5:	je	0x4002bc
<Block for 0x4002bc, 2 bytes>
0x4002bc:	leave	
0x4002bd:	ret	
<Block for 0x4002b7, 5 bytes>
0x4002b7:	call	0x500020
