<Block for 0x40030d, 32 bytes>
0x40030d:	endbr64	
0x400311:	push	rbp
0x400312:	mov	rbp, rsp
0x400315:	push	r13
0x400317:	push	r12
0x400319:	push	rbx
0x40031a:	sub	rsp, 0x18
0x40031e:	mov	eax, dword ptr [rip + 0xffcdc]
0x400324:	cmp	eax, 5
0x400327:	jne	0x400482
<Block for 0x40032d, 5 bytes>
0x40032d:	call	0x500008
<Block for 0x400482, 11 bytes>
0x400482:	add	rsp, 0x18
0x400486:	pop	rbx
0x400487:	pop	r12
0x400489:	pop	r13
0x40048b:	pop	rbp
0x40048c:	ret	
<Block for 0x400332, 12 bytes>
0x400332:	and	eax, 1
0x400335:	test	eax, eax
0x400337:	sete	al
0x40033a:	test	al, al
0x40033c:	je	0x400373
<Block for 0x400373, 5 bytes>
0x400373:	call	0x500008
<Block for 0x40033e, 10 bytes>
0x40033e:	mov	edi, 0x10
0x400343:	call	0x500010
<Block for 0x400378, 12 bytes>
0x400378:	and	eax, 1
0x40037b:	test	eax, eax
0x40037d:	sete	al
0x400380:	test	al, al
0x400382:	je	0x4003b9
<Block for 0x400348, 18 bytes>
0x400348:	mov	rbx, rax
0x40034b:	lea	rsi, [rip + 0x151]
0x400352:	mov	rdi, rbx
0x400355:	call	0x500018
<Block for 0x4003b9, 12 bytes>
0x4003b9:	lea	rdi, [rip + 0xed]
0x4003c0:	call	0x500060
<Block for 0x400384, 10 bytes>
0x400384:	mov	edi, 0x10
0x400389:	call	0x500010
<Block for 0x40035a, 25 bytes>
0x40035a:	mov	rax, qword ptr [rip + 0xffcc7]
0x400361:	mov	rdx, rax
0x400364:	lea	rsi, [rip + 0xffcc5]
0x40036b:	mov	rdi, rbx
0x40036e:	call	0x500038
<Block for 0x4003c5, 5 bytes>
0x4003c5:	jmp	0x400482
<Block for 0x40038e, 18 bytes>
0x40038e:	mov	rbx, rax
0x400391:	lea	rsi, [rip + 0x110]
0x400398:	mov	rdi, rbx
0x40039b:	call	0x500040
<Block for 0x4003a0, 25 bytes>
0x4003a0:	mov	rax, qword ptr [rip + 0xffca9]
0x4003a7:	mov	rdx, rax
0x4003aa:	lea	rsi, [rip + 0xffca7]
0x4003b1:	mov	rdi, rbx
0x4003b4:	call	0x500038
