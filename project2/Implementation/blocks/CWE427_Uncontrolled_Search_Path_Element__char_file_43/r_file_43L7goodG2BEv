<Block for 0x400196, 82 bytes>
0x400196:	endbr64	
0x40019a:	push	rbp
0x40019b:	mov	rbp, rsp
0x40019e:	sub	rsp, 0x120
0x4001a5:	mov	rax, qword ptr fs:[0x28]
0x4001ae:	mov	qword ptr [rbp - 8], rax
0x4001b2:	xor	eax, eax
0x4001b4:	movabs	rax, 0x3d48544150
0x4001be:	mov	edx, 0
0x4001c3:	mov	qword ptr [rbp - 0x110], rax
0x4001ca:	mov	qword ptr [rbp - 0x108], rdx
0x4001d1:	lea	rdx, [rbp - 0x100]
0x4001d8:	mov	eax, 0
0x4001dd:	mov	ecx, 0x1d
0x4001e2:	mov	rdi, rdx
0x4001e5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001e8, 39 bytes>
0x4001e8:	mov	rdx, rdi
0x4001eb:	mov	word ptr [rdx], ax
0x4001ee:	add	rdx, 2
0x4001f2:	lea	rax, [rbp - 0x110]
0x4001f9:	mov	qword ptr [rbp - 0x118], rax
0x400200:	lea	rax, [rbp - 0x118]
0x400207:	mov	rdi, rax
0x40020a:	call	0x400152
<Block for 0x4001e5, 3 bytes>
0x4001e5:	rep stosq	qword ptr [rdi], rax
<Block for 0x40020f, 15 bytes>
0x40020f:	mov	rax, qword ptr [rbp - 0x118]
0x400216:	mov	rdi, rax
0x400219:	call	0x500028
<Block for 0x40021e, 16 bytes>
0x40021e:	nop	
0x40021f:	mov	rax, qword ptr [rbp - 8]
0x400223:	xor	rax, qword ptr fs:[0x28]
0x40022c:	je	0x400233
<Block for 0x400233, 2 bytes>
0x400233:	leave	
0x400234:	ret	
<Block for 0x40022e, 5 bytes>
0x40022e:	call	0x500030
