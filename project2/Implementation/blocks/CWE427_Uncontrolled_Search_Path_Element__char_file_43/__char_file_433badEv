<Block for 0x4000b3, 82 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0x120
0x4000c2:	mov	rax, qword ptr fs:[0x28]
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	xor	eax, eax
0x4000d1:	movabs	rax, 0x3d48544150
0x4000db:	mov	edx, 0
0x4000e0:	mov	qword ptr [rbp - 0x110], rax
0x4000e7:	mov	qword ptr [rbp - 0x108], rdx
0x4000ee:	lea	rdx, [rbp - 0x100]
0x4000f5:	mov	eax, 0
0x4000fa:	mov	ecx, 0x1d
0x4000ff:	mov	rdi, rdx
0x400102:	rep stosq	qword ptr [rdi], rax
<Block for 0x400105, 39 bytes>
0x400105:	mov	rdx, rdi
0x400108:	mov	word ptr [rdx], ax
0x40010b:	add	rdx, 2
0x40010f:	lea	rax, [rbp - 0x110]
0x400116:	mov	qword ptr [rbp - 0x118], rax
0x40011d:	lea	rax, [rbp - 0x118]
0x400124:	mov	rdi, rax
0x400127:	call	0x400000
<Block for 0x400102, 3 bytes>
0x400102:	rep stosq	qword ptr [rdi], rax
<Block for 0x40012c, 15 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0x118]
0x400133:	mov	rdi, rax
0x400136:	call	0x500028
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500030
