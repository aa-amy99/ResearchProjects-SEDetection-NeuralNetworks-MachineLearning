<Block for 0x4000b3, 50 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	add	rsp, -0x80
0x4000bf:	mov	rax, qword ptr fs:[0x28]
0x4000c8:	mov	qword ptr [rbp - 8], rax
0x4000cc:	xor	eax, eax
0x4000ce:	mov	qword ptr [rbp - 0x80], 0
0x4000d6:	nop	
0x4000d7:	endbr64	
0x4000db:	mov	edi, 0x64
0x4000e0:	call	0x500000
<Block for 0x4000e5, 26 bytes>
0x4000e5:	mov	qword ptr [rbp - 0x78], rax
0x4000e9:	mov	rax, qword ptr [rbp - 0x78]
0x4000ed:	mov	edx, 0x63
0x4000f2:	mov	esi, 0x41
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x4000ff, 41 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0x78]
0x400103:	add	rax, 0x63
0x400107:	mov	byte ptr [rax], 0
0x40010a:	mov	rax, qword ptr [rbp - 0x78]
0x40010e:	mov	qword ptr [rbp - 0x80], rax
0x400112:	lea	rax, [rbp - 0x70]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x43
0x400120:	mov	rdi, rax
0x400123:	call	0x500008
<Block for 0x400128, 23 bytes>
0x400128:	mov	byte ptr [rbp - 0xd], 0
0x40012c:	lea	rdx, [rbp - 0x70]
0x400130:	mov	rax, qword ptr [rbp - 0x80]
0x400134:	mov	rsi, rdx
0x400137:	mov	rdi, rax
0x40013a:	call	0x500010
<Block for 0x40013f, 12 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x80]
0x400143:	mov	rdi, rax
0x400146:	call	0x500018
<Block for 0x40014b, 16 bytes>
0x40014b:	nop	
0x40014c:	mov	rax, qword ptr [rbp - 8]
0x400150:	xor	rax, qword ptr fs:[0x28]
0x400159:	je	0x400160
<Block for 0x400160, 2 bytes>
0x400160:	leave	
0x400161:	ret	
<Block for 0x40015b, 5 bytes>
0x40015b:	call	0x500020
