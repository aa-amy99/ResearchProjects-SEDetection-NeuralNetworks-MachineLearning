<Block for 0x4000e3, 48 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0x90
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	mov	qword ptr [rbp - 0x80], 0
0x400109:	mov	edi, 0x64
0x40010e:	call	0x500000
<Block for 0x400113, 26 bytes>
0x400113:	mov	qword ptr [rbp - 0x78], rax
0x400117:	mov	rax, qword ptr [rbp - 0x78]
0x40011b:	mov	edx, 0x63
0x400120:	mov	esi, 0x41
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
<Block for 0x40012d, 42 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x78]
0x400131:	add	rax, 0x63
0x400135:	mov	byte ptr [rax], 0
0x400138:	mov	rax, qword ptr [rbp - 0x78]
0x40013c:	mov	qword ptr [rbp - 0x80], rax
0x400140:	nop	
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	edx, 0x63
0x40014a:	mov	esi, 0x43
0x40014f:	mov	rdi, rax
0x400152:	call	0x500008
<Block for 0x400157, 25 bytes>
0x400157:	mov	byte ptr [rbp - 0xd], 0
0x40015b:	mov	qword ptr [rbp - 0x88], 0
0x400166:	cmp	qword ptr [rbp - 0x88], 0x63
0x40016e:	ja	0x40019b
<Block for 0x400170, 43 bytes>
0x400170:	mov	rdx, qword ptr [rbp - 0x80]
0x400174:	mov	rax, qword ptr [rbp - 0x88]
0x40017b:	add	rax, rdx
0x40017e:	movzx	eax, byte ptr [rax]
0x400181:	lea	rcx, [rbp - 0x70]
0x400185:	mov	rdx, qword ptr [rbp - 0x88]
0x40018c:	add	rdx, rcx
0x40018f:	mov	byte ptr [rdx], al
0x400191:	add	qword ptr [rbp - 0x88], 1
0x400199:	jmp	0x400166
<Block for 0x40019b, 16 bytes>
0x40019b:	mov	byte ptr [rbp - 0xd], 0
0x40019f:	lea	rax, [rbp - 0x70]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500010
<Block for 0x400166, 10 bytes>
0x400166:	cmp	qword ptr [rbp - 0x88], 0x63
0x40016e:	ja	0x40019b
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500018
