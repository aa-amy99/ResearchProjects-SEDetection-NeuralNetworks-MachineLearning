<Block for 0x4001c2, 48 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	sub	rsp, 0x90
0x4001d1:	mov	rax, qword ptr fs:[0x28]
0x4001da:	mov	qword ptr [rbp - 8], rax
0x4001de:	xor	eax, eax
0x4001e0:	mov	qword ptr [rbp - 0x80], 0
0x4001e8:	mov	edi, 0x64
0x4001ed:	call	0x500000
<Block for 0x4001f2, 26 bytes>
0x4001f2:	mov	qword ptr [rbp - 0x78], rax
0x4001f6:	mov	rax, qword ptr [rbp - 0x78]
0x4001fa:	mov	edx, 0x63
0x4001ff:	mov	esi, 0x41
0x400204:	mov	rdi, rax
0x400207:	call	0x500008
<Block for 0x40020c, 42 bytes>
0x40020c:	mov	rax, qword ptr [rbp - 0x78]
0x400210:	add	rax, 0x63
0x400214:	mov	byte ptr [rax], 0
0x400217:	mov	rax, qword ptr [rbp - 0x78]
0x40021b:	mov	qword ptr [rbp - 0x80], rax
0x40021f:	nop	
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	edx, 0x63
0x400229:	mov	esi, 0x43
0x40022e:	mov	rdi, rax
0x400231:	call	0x500008
<Block for 0x400236, 25 bytes>
0x400236:	mov	byte ptr [rbp - 0xd], 0
0x40023a:	mov	qword ptr [rbp - 0x88], 0
0x400245:	cmp	qword ptr [rbp - 0x88], 0x63
0x40024d:	ja	0x40027a
<Block for 0x40024f, 43 bytes>
0x40024f:	mov	rdx, qword ptr [rbp - 0x80]
0x400253:	mov	rax, qword ptr [rbp - 0x88]
0x40025a:	add	rax, rdx
0x40025d:	movzx	eax, byte ptr [rax]
0x400260:	lea	rcx, [rbp - 0x70]
0x400264:	mov	rdx, qword ptr [rbp - 0x88]
0x40026b:	add	rdx, rcx
0x40026e:	mov	byte ptr [rdx], al
0x400270:	add	qword ptr [rbp - 0x88], 1
0x400278:	jmp	0x400245
<Block for 0x40027a, 16 bytes>
0x40027a:	mov	byte ptr [rbp - 0xd], 0
0x40027e:	lea	rax, [rbp - 0x70]
0x400282:	mov	rdi, rax
0x400285:	call	0x500010
<Block for 0x400245, 10 bytes>
0x400245:	cmp	qword ptr [rbp - 0x88], 0x63
0x40024d:	ja	0x40027a
<Block for 0x40028a, 16 bytes>
0x40028a:	nop	
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	xor	rax, qword ptr fs:[0x28]
0x400298:	je	0x40029f
<Block for 0x40029f, 2 bytes>
0x40029f:	leave	
0x4002a0:	ret	
<Block for 0x40029a, 5 bytes>
0x40029a:	call	0x500018
