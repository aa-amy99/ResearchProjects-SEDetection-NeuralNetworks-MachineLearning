<Block for 0x400185, 44 bytes>
0x400185:	endbr64	
0x400189:	push	rbp
0x40018a:	mov	rbp, rsp
0x40018d:	sub	rsp, 0x120
0x400194:	mov	rax, qword ptr fs:[0x28]
0x40019d:	mov	qword ptr [rbp - 8], rax
0x4001a1:	xor	eax, eax
0x4001a3:	mov	eax, dword ptr [rip + 0xd3]
0x4001a9:	test	eax, eax
0x4001ab:	je	0x400245
<Block for 0x400245, 16 bytes>
0x400245:	nop	
0x400246:	mov	rax, qword ptr [rbp - 8]
0x40024a:	xor	rax, qword ptr fs:[0x28]
0x400253:	je	0x40025a
<Block for 0x4001b1, 39 bytes>
0x4001b1:	pxor	xmm0, xmm0
0x4001b5:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001bd:	mov	rdx, qword ptr [rip + 0xffe3c]
0x4001c4:	lea	rax, [rbp - 0x110]
0x4001cb:	mov	esi, 0x100
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500008
<Block for 0x40025a, 2 bytes>
0x40025a:	leave	
0x40025b:	ret	
<Block for 0x400255, 5 bytes>
0x400255:	call	0x500028
<Block for 0x4001d8, 5 bytes>
0x4001d8:	test	rax, rax
0x4001db:	je	0x4001fa
<Block for 0x4001fa, 12 bytes>
0x4001fa:	lea	rdi, [rip + 0x87]
0x400201:	call	0x500018
<Block for 0x4001dd, 15 bytes>
0x4001dd:	lea	rax, [rbp - 0x110]
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x500010
<Block for 0x400206, 18 bytes>
0x400206:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40020e:	comisd	xmm0, xmmword ptr [rip + 0xda]
0x400216:	ja	0x40022a
<Block for 0x4001ec, 14 bytes>
0x4001ec:	movq	rax, xmm0
0x4001f1:	mov	qword ptr [rbp - 0x118], rax
0x4001f8:	jmp	0x400206
<Block for 0x400218, 18 bytes>
0x400218:	movsd	xmm0, qword ptr [rip + 0xd8]
0x400220:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400228:	jbe	0x400238
<Block for 0x40022a, 12 bytes>
0x40022a:	lea	rdi, [rip + 0x7f]
0x400231:	call	0x500018
<Block for 0x400238, 13 bytes>
0x400238:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x400240:	call	0x500020
<Block for 0x400236, 2 bytes>
0x400236:	jmp	0x400245
