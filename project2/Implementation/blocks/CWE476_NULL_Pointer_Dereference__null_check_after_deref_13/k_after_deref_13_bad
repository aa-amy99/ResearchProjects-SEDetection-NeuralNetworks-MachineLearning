<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0xfffee]
0x400012:	cmp	eax, 5
0x400015:	jne	0x400062
<Block for 0x400017, 18 bytes>
0x400017:	mov	qword ptr [rbp - 8], 0
0x40001f:	mov	edi, 4
0x400024:	call	0x500008
<Block for 0x400062, 3 bytes>
0x400062:	nop	
0x400063:	leave	
0x400064:	ret	
<Block for 0x400029, 27 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	mov	rax, qword ptr [rbp - 8]
0x400031:	mov	dword ptr [rax], 5
0x400037:	mov	rax, qword ptr [rbp - 8]
0x40003b:	mov	eax, dword ptr [rax]
0x40003d:	mov	edi, eax
0x40003f:	call	0x500010
<Block for 0x400044, 7 bytes>
0x400044:	cmp	qword ptr [rbp - 8], 0
0x400049:	je	0x400055
<Block for 0x400055, 13 bytes>
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	mov	eax, dword ptr [rax]
0x40005b:	mov	edi, eax
0x40005d:	call	0x500010
<Block for 0x40004b, 23 bytes>
0x40004b:	mov	rax, qword ptr [rbp - 8]
0x40004f:	mov	dword ptr [rax], 0xa
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	mov	eax, dword ptr [rax]
0x40005b:	mov	edi, eax
0x40005d:	call	0x500010
