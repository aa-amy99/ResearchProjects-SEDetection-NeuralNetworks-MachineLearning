<Block for 0x4000e0, 79 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x20
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400102:	mov	qword ptr [rbp - 0x16], 0
0x40010a:	mov	dword ptr [rbp - 0xe], 0
0x400111:	mov	word ptr [rbp - 0xa], 0
0x400117:	mov	rdx, qword ptr [rip + 0xffee2]
0x40011e:	lea	rax, [rbp - 0x16]
0x400122:	mov	esi, 0xe
0x400127:	mov	rdi, rax
0x40012a:	call	0x500008
<Block for 0x40012f, 5 bytes>
0x40012f:	test	rax, rax
0x400132:	je	0x400145
<Block for 0x400145, 12 bytes>
0x400145:	lea	rdi, [rip + 0x47]
0x40014c:	call	0x500018
<Block for 0x400134, 12 bytes>
0x400134:	lea	rax, [rbp - 0x16]
0x400138:	mov	rdi, rax
0x40013b:	call	0x500010
<Block for 0x400151, 12 bytes>
0x400151:	lea	rax, [rbp - 0x1c]
0x400155:	mov	rdi, rax
0x400158:	call	0x500038
<Block for 0x400140, 5 bytes>
0x400140:	mov	dword ptr [rbp - 0x1c], eax
0x400143:	jmp	0x400151
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500028
