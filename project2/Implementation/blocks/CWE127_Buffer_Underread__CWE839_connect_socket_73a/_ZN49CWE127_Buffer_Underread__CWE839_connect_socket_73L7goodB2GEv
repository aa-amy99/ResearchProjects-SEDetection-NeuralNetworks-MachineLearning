<Block for 0x4002f4, 43 bytes>
0x4002f4:	endbr64	
0x4002f8:	push	rbp
0x4002f9:	mov	rbp, rsp
0x4002fc:	push	rbx
0x4002fd:	sub	rsp, 0x88
0x400304:	mov	rax, qword ptr fs:[0x28]
0x40030d:	mov	qword ptr [rbp - 0x18], rax
0x400311:	xor	eax, eax
0x400313:	lea	rax, [rbp - 0x80]
0x400317:	mov	rdi, rax
0x40031a:	call	0x4005be
<Block for 0x40031f, 40 bytes>
0x40031f:	mov	dword ptr [rbp - 0x8c], 0xffffffff
0x400329:	mov	dword ptr [rbp - 0x88], 0xffffffff
0x400333:	mov	edx, 6
0x400338:	mov	esi, 1
0x40033d:	mov	edi, 2
0x400342:	call	0x500000
<Block for 0x400347, 19 bytes>
0x400347:	mov	dword ptr [rbp - 0x88], eax
0x40034d:	cmp	dword ptr [rbp - 0x88], -1
0x400354:	je	0x40040a
<Block for 0x40040a, 3 bytes>
0x40040a:	nop	
0x40040b:	jmp	0x40040e
<Block for 0x40035a, 22 bytes>
0x40035a:	lea	rax, [rbp - 0x40]
0x40035e:	mov	edx, 0x10
0x400363:	mov	esi, 0
0x400368:	mov	rdi, rax
0x40036b:	call	0x500008
<Block for 0x40040e, 9 bytes>
0x40040e:	cmp	dword ptr [rbp - 0x88], -1
0x400415:	je	0x400424
<Block for 0x400370, 18 bytes>
0x400370:	mov	word ptr [rbp - 0x40], 2
0x400376:	lea	rdi, [rip + 0x1a0]
0x40037d:	call	0x500010
<Block for 0x400424, 22 bytes>
0x400424:	lea	rdx, [rbp - 0x8c]
0x40042b:	lea	rax, [rbp - 0x80]
0x40042f:	mov	rsi, rdx
0x400432:	mov	rdi, rax
0x400435:	call	0x4006cc
<Block for 0x400417, 13 bytes>
0x400417:	mov	eax, dword ptr [rbp - 0x88]
0x40041d:	mov	edi, eax
0x40041f:	call	0x500038
<Block for 0x400382, 13 bytes>
0x400382:	mov	dword ptr [rbp - 0x3c], eax
0x400385:	mov	edi, 0x6987
0x40038a:	call	0x500018
<Block for 0x40043a, 22 bytes>
0x40043a:	lea	rdx, [rbp - 0x8c]
0x400441:	lea	rax, [rbp - 0x80]
0x400445:	mov	rsi, rdx
0x400448:	mov	rdi, rax
0x40044b:	call	0x4006cc
<Block for 0x40038f, 29 bytes>
0x40038f:	mov	word ptr [rbp - 0x3e], ax
0x400393:	lea	rcx, [rbp - 0x40]
0x400397:	mov	eax, dword ptr [rbp - 0x88]
0x40039d:	mov	edx, 0x10
0x4003a2:	mov	rsi, rcx
0x4003a5:	mov	edi, eax
0x4003a7:	call	0x500020
<Block for 0x400450, 22 bytes>
0x400450:	lea	rdx, [rbp - 0x8c]
0x400457:	lea	rax, [rbp - 0x80]
0x40045b:	mov	rsi, rdx
0x40045e:	mov	rdi, rax
0x400461:	call	0x4006cc
<Block for 0x4003ac, 10 bytes>
0x4003ac:	cmp	eax, -1
0x4003af:	sete	al
0x4003b2:	test	al, al
0x4003b4:	jne	0x40040d
<Block for 0x400466, 19 bytes>
0x400466:	lea	rdx, [rbp - 0x80]
0x40046a:	lea	rax, [rbp - 0x60]
0x40046e:	mov	rsi, rdx
0x400471:	mov	rdi, rax
0x400474:	call	0x400706
<Block for 0x4003b6, 27 bytes>
0x4003b6:	lea	rsi, [rbp - 0x26]
0x4003ba:	mov	eax, dword ptr [rbp - 0x88]
0x4003c0:	mov	ecx, 0
0x4003c5:	mov	edx, 0xd
0x4003ca:	mov	edi, eax
0x4003cc:	call	0x500028
<Block for 0x40040d, 1 bytes>
0x40040d:	nop	
<Block for 0x400479, 12 bytes>
0x400479:	lea	rax, [rbp - 0x60]
0x40047d:	mov	rdi, rax
0x400480:	call	0x500060
<Block for 0x4003d1, 15 bytes>
0x4003d1:	mov	dword ptr [rbp - 0x84], eax
0x4003d7:	cmp	dword ptr [rbp - 0x84], -1
0x4003de:	je	0x40040e
<Block for 0x400485, 12 bytes>
0x400485:	lea	rax, [rbp - 0x60]
0x400489:	mov	rdi, rax
0x40048c:	call	0x4005de
<Block for 0x4003e0, 9 bytes>
0x4003e0:	cmp	dword ptr [rbp - 0x84], 0
0x4003e7:	je	0x40040e
<Block for 0x400491, 12 bytes>
0x400491:	lea	rax, [rbp - 0x80]
0x400495:	mov	rdi, rax
0x400498:	call	0x4005de
<Block for 0x4003e9, 25 bytes>
0x4003e9:	mov	eax, dword ptr [rbp - 0x84]
0x4003ef:	cdqe	
0x4003f1:	mov	byte ptr [rbp + rax - 0x26], 0
0x4003f6:	lea	rax, [rbp - 0x26]
0x4003fa:	mov	rdi, rax
0x4003fd:	call	0x500030
<Block for 0x40049d, 16 bytes>
0x40049d:	nop	
0x40049e:	mov	rax, qword ptr [rbp - 0x18]
0x4004a2:	xor	rax, qword ptr fs:[0x28]
0x4004ab:	je	0x4004e7
<Block for 0x400402, 8 bytes>
0x400402:	mov	dword ptr [rbp - 0x8c], eax
0x400408:	jmp	0x40040e
<Block for 0x4004e7, 10 bytes>
0x4004e7:	add	rsp, 0x88
0x4004ee:	pop	rbx
0x4004ef:	pop	rbp
0x4004f0:	ret	
<Block for 0x4004ad, 2 bytes>
0x4004ad:	jmp	0x4004e2
<Block for 0x4004e2, 5 bytes>
0x4004e2:	call	0x500050
