<Block for 0x400062, 75 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x20
0x40006e:	mov	rax, qword ptr fs:[0x28]
0x400077:	mov	qword ptr [rbp - 8], rax
0x40007b:	xor	eax, eax
0x40007d:	mov	byte ptr [rbp - 0x19], 0x43
0x400081:	lea	rax, [rip + 0xfff98]
0x400088:	mov	qword ptr [rbp - 0x18], rax
0x40008c:	lea	rax, [rbp - 0x18]
0x400090:	mov	qword ptr [rbp - 0x10], rax
0x400094:	mov	rax, qword ptr [rbp - 0x10]
0x400098:	mov	rax, qword ptr [rax]
0x40009b:	mov	rcx, qword ptr [rax]
0x40009e:	movsx	edx, byte ptr [rbp - 0x19]
0x4000a2:	mov	rax, qword ptr [rbp - 0x10]
0x4000a6:	mov	esi, edx
0x4000a8:	mov	rdi, rax
0x4000ab:	call	rcx
<Block for 0x4000ad, 16 bytes>
0x4000ad:	nop	
0x4000ae:	mov	rax, qword ptr [rbp - 8]
0x4000b2:	xor	rax, qword ptr fs:[0x28]
0x4000bb:	je	0x4000c2
<Block for 0x4000c2, 2 bytes>
0x4000c2:	leave	
0x4000c3:	ret	
<Block for 0x4000bd, 5 bytes>
0x4000bd:	call	0x500008
