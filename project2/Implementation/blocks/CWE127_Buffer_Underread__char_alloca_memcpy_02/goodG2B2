<Block for 0x40031e, 85 bytes>
0x40031e:	endbr64	
0x400322:	push	rbp
0x400323:	mov	rbp, rsp
0x400326:	push	rbx
0x400327:	sub	rsp, 0x88
0x40032e:	mov	rax, qword ptr fs:[0x28]
0x400337:	mov	qword ptr [rbp - 0x18], rax
0x40033b:	xor	eax, eax
0x40033d:	mov	eax, 0x10
0x400342:	sub	rax, 1
0x400346:	add	rax, 0x6c
0x40034a:	mov	esi, 0x10
0x40034f:	mov	edx, 0
0x400354:	div	rsi
0x400357:	imul	rax, rax, 0x10
0x40035b:	mov	rdx, rax
0x40035e:	and	rdx, 0xfffffffffffff000
0x400365:	mov	rbx, rsp
0x400368:	sub	rbx, rdx
0x40036b:	mov	rdx, rbx
0x40036e:	cmp	rsp, rdx
0x400371:	je	0x400385
<Block for 0x400385, 26 bytes>
0x400385:	mov	rdx, rax
0x400388:	and	edx, 0xfff
0x40038e:	sub	rsp, rdx
0x400391:	mov	rdx, rax
0x400394:	and	edx, 0xfff
0x40039a:	test	rdx, rdx
0x40039d:	je	0x4003af
<Block for 0x400373, 18 bytes>
0x400373:	sub	rsp, 0x1000
0x40037a:	or	qword ptr [rsp + 0xff8], 0
0x400383:	jmp	0x40036e
<Block for 0x4003af, 47 bytes>
0x4003af:	mov	rax, rsp
0x4003b2:	add	rax, 0xf
0x4003b6:	shr	rax, 4
0x4003ba:	shl	rax, 4
0x4003be:	mov	qword ptr [rbp - 0x90], rax
0x4003c5:	mov	rax, qword ptr [rbp - 0x90]
0x4003cc:	mov	edx, 0x63
0x4003d1:	mov	esi, 0x41
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x500000
<Block for 0x40039f, 63 bytes>
0x40039f:	and	eax, 0xfff
0x4003a4:	sub	rax, 8
0x4003a8:	add	rax, rsp
0x4003ab:	or	qword ptr [rax], 0
0x4003af:	mov	rax, rsp
0x4003b2:	add	rax, 0xf
0x4003b6:	shr	rax, 4
0x4003ba:	shl	rax, 4
0x4003be:	mov	qword ptr [rbp - 0x90], rax
0x4003c5:	mov	rax, qword ptr [rbp - 0x90]
0x4003cc:	mov	edx, 0x63
0x4003d1:	mov	esi, 0x41
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x500000
<Block for 0x40036e, 5 bytes>
0x40036e:	cmp	rsp, rdx
0x400371:	je	0x400385
<Block for 0x4003de, 50 bytes>
0x4003de:	mov	rax, qword ptr [rbp - 0x90]
0x4003e5:	add	rax, 0x63
0x4003e9:	mov	byte ptr [rax], 0
0x4003ec:	mov	rax, qword ptr [rbp - 0x90]
0x4003f3:	mov	qword ptr [rbp - 0x88], rax
0x4003fa:	lea	rax, [rbp - 0x80]
0x4003fe:	mov	edx, 0x63
0x400403:	mov	esi, 0x43
0x400408:	mov	rdi, rax
0x40040b:	call	0x500000
<Block for 0x400410, 128 bytes>
0x400410:	mov	byte ptr [rbp - 0x1d], 0
0x400414:	mov	rax, qword ptr [rbp - 0x88]
0x40041b:	mov	rcx, qword ptr [rax]
0x40041e:	mov	rbx, qword ptr [rax + 8]
0x400422:	mov	qword ptr [rbp - 0x80], rcx
0x400426:	mov	qword ptr [rbp - 0x78], rbx
0x40042a:	mov	rcx, qword ptr [rax + 0x10]
0x40042e:	mov	rbx, qword ptr [rax + 0x18]
0x400432:	mov	qword ptr [rbp - 0x70], rcx
0x400436:	mov	qword ptr [rbp - 0x68], rbx
0x40043a:	mov	rcx, qword ptr [rax + 0x20]
0x40043e:	mov	rbx, qword ptr [rax + 0x28]
0x400442:	mov	qword ptr [rbp - 0x60], rcx
0x400446:	mov	qword ptr [rbp - 0x58], rbx
0x40044a:	mov	rcx, qword ptr [rax + 0x30]
0x40044e:	mov	rbx, qword ptr [rax + 0x38]
0x400452:	mov	qword ptr [rbp - 0x50], rcx
0x400456:	mov	qword ptr [rbp - 0x48], rbx
0x40045a:	mov	rcx, qword ptr [rax + 0x40]
0x40045e:	mov	rbx, qword ptr [rax + 0x48]
0x400462:	mov	qword ptr [rbp - 0x40], rcx
0x400466:	mov	qword ptr [rbp - 0x38], rbx
0x40046a:	mov	rcx, qword ptr [rax + 0x50]
0x40046e:	mov	rbx, qword ptr [rax + 0x58]
0x400472:	mov	qword ptr [rbp - 0x30], rcx
0x400476:	mov	qword ptr [rbp - 0x28], rbx
0x40047a:	mov	eax, dword ptr [rax + 0x60]
0x40047d:	mov	dword ptr [rbp - 0x20], eax
0x400480:	mov	byte ptr [rbp - 0x1d], 0
0x400484:	lea	rax, [rbp - 0x80]
0x400488:	mov	rdi, rax
0x40048b:	call	0x500008
<Block for 0x400490, 16 bytes>
0x400490:	nop	
0x400491:	mov	rax, qword ptr [rbp - 0x18]
0x400495:	xor	rax, qword ptr fs:[0x28]
0x40049e:	je	0x4004a5
<Block for 0x4004a5, 6 bytes>
0x4004a5:	mov	rbx, qword ptr [rbp - 8]
0x4004a9:	leave	
0x4004aa:	ret	
<Block for 0x4004a0, 5 bytes>
0x4004a0:	call	0x500010
