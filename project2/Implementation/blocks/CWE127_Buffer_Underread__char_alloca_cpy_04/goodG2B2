<Block for 0x400292, 84 bytes>
0x400292:	endbr64	
0x400296:	push	rbp
0x400297:	mov	rbp, rsp
0x40029a:	sub	rsp, 0xe0
0x4002a1:	mov	rax, qword ptr fs:[0x28]
0x4002aa:	mov	qword ptr [rbp - 8], rax
0x4002ae:	xor	eax, eax
0x4002b0:	mov	eax, 0x10
0x4002b5:	sub	rax, 1
0x4002b9:	add	rax, 0x6c
0x4002bd:	mov	ecx, 0x10
0x4002c2:	mov	edx, 0
0x4002c7:	div	rcx
0x4002ca:	imul	rax, rax, 0x10
0x4002ce:	mov	rdx, rax
0x4002d1:	and	rdx, 0xfffffffffffff000
0x4002d8:	mov	rcx, rsp
0x4002db:	sub	rcx, rdx
0x4002de:	mov	rdx, rcx
0x4002e1:	cmp	rsp, rdx
0x4002e4:	je	0x4002f8
<Block for 0x4002f8, 26 bytes>
0x4002f8:	mov	rdx, rax
0x4002fb:	and	edx, 0xfff
0x400301:	sub	rsp, rdx
0x400304:	mov	rdx, rax
0x400307:	and	edx, 0xfff
0x40030d:	test	rdx, rdx
0x400310:	je	0x400322
<Block for 0x4002e6, 18 bytes>
0x4002e6:	sub	rsp, 0x1000
0x4002ed:	or	qword ptr [rsp + 0xff8], 0
0x4002f6:	jmp	0x4002e1
<Block for 0x400322, 47 bytes>
0x400322:	mov	rax, rsp
0x400325:	add	rax, 0xf
0x400329:	shr	rax, 4
0x40032d:	shl	rax, 4
0x400331:	mov	qword ptr [rbp - 0xd8], rax
0x400338:	mov	rax, qword ptr [rbp - 0xd8]
0x40033f:	mov	edx, 0x63
0x400344:	mov	esi, 0x41
0x400349:	mov	rdi, rax
0x40034c:	call	0x500000
<Block for 0x400312, 63 bytes>
0x400312:	and	eax, 0xfff
0x400317:	sub	rax, 8
0x40031b:	add	rax, rsp
0x40031e:	or	qword ptr [rax], 0
0x400322:	mov	rax, rsp
0x400325:	add	rax, 0xf
0x400329:	shr	rax, 4
0x40032d:	shl	rax, 4
0x400331:	mov	qword ptr [rbp - 0xd8], rax
0x400338:	mov	rax, qword ptr [rbp - 0xd8]
0x40033f:	mov	edx, 0x63
0x400344:	mov	esi, 0x41
0x400349:	mov	rdi, rax
0x40034c:	call	0x500000
<Block for 0x4002e1, 5 bytes>
0x4002e1:	cmp	rsp, rdx
0x4002e4:	je	0x4002f8
<Block for 0x400351, 23 bytes>
0x400351:	mov	rax, qword ptr [rbp - 0xd8]
0x400358:	add	rax, 0x63
0x40035c:	mov	byte ptr [rax], 0
0x40035f:	mov	eax, 1
0x400364:	test	eax, eax
0x400366:	je	0x400376
<Block for 0x400376, 25 bytes>
0x400376:	lea	rax, [rbp - 0xd0]
0x40037d:	mov	edx, 0xc7
0x400382:	mov	esi, 0x43
0x400387:	mov	rdi, rax
0x40038a:	call	0x500000
<Block for 0x400368, 39 bytes>
0x400368:	mov	rax, qword ptr [rbp - 0xd8]
0x40036f:	mov	qword ptr [rbp - 0xe0], rax
0x400376:	lea	rax, [rbp - 0xd0]
0x40037d:	mov	edx, 0xc7
0x400382:	mov	esi, 0x43
0x400387:	mov	rdi, rax
0x40038a:	call	0x500000
<Block for 0x40038f, 29 bytes>
0x40038f:	mov	byte ptr [rbp - 9], 0
0x400393:	mov	rdx, qword ptr [rbp - 0xe0]
0x40039a:	lea	rax, [rbp - 0xd0]
0x4003a1:	mov	rsi, rdx
0x4003a4:	mov	rdi, rax
0x4003a7:	call	0x500008
<Block for 0x4003ac, 15 bytes>
0x4003ac:	lea	rax, [rbp - 0xd0]
0x4003b3:	mov	rdi, rax
0x4003b6:	call	0x500010
<Block for 0x4003bb, 16 bytes>
0x4003bb:	nop	
0x4003bc:	mov	rax, qword ptr [rbp - 8]
0x4003c0:	xor	rax, qword ptr fs:[0x28]
0x4003c9:	je	0x4003d0
<Block for 0x4003d0, 2 bytes>
0x4003d0:	leave	
0x4003d1:	ret	
<Block for 0x4003cb, 5 bytes>
0x4003cb:	call	0x500018
