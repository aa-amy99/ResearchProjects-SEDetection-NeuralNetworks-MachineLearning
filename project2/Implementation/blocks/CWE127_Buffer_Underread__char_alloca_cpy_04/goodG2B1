<Block for 0x400144, 84 bytes>
0x400144:	endbr64	
0x400148:	push	rbp
0x400149:	mov	rbp, rsp
0x40014c:	sub	rsp, 0xe0
0x400153:	mov	rax, qword ptr fs:[0x28]
0x40015c:	mov	qword ptr [rbp - 8], rax
0x400160:	xor	eax, eax
0x400162:	mov	eax, 0x10
0x400167:	sub	rax, 1
0x40016b:	add	rax, 0x6c
0x40016f:	mov	ecx, 0x10
0x400174:	mov	edx, 0
0x400179:	div	rcx
0x40017c:	imul	rax, rax, 0x10
0x400180:	mov	rdx, rax
0x400183:	and	rdx, 0xfffffffffffff000
0x40018a:	mov	rcx, rsp
0x40018d:	sub	rcx, rdx
0x400190:	mov	rdx, rcx
0x400193:	cmp	rsp, rdx
0x400196:	je	0x4001aa
<Block for 0x4001aa, 26 bytes>
0x4001aa:	mov	rdx, rax
0x4001ad:	and	edx, 0xfff
0x4001b3:	sub	rsp, rdx
0x4001b6:	mov	rdx, rax
0x4001b9:	and	edx, 0xfff
0x4001bf:	test	rdx, rdx
0x4001c2:	je	0x4001d4
<Block for 0x400198, 18 bytes>
0x400198:	sub	rsp, 0x1000
0x40019f:	or	qword ptr [rsp + 0xff8], 0
0x4001a8:	jmp	0x400193
<Block for 0x4001d4, 47 bytes>
0x4001d4:	mov	rax, rsp
0x4001d7:	add	rax, 0xf
0x4001db:	shr	rax, 4
0x4001df:	shl	rax, 4
0x4001e3:	mov	qword ptr [rbp - 0xd8], rax
0x4001ea:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f1:	mov	edx, 0x63
0x4001f6:	mov	esi, 0x41
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x500000
<Block for 0x4001c4, 63 bytes>
0x4001c4:	and	eax, 0xfff
0x4001c9:	sub	rax, 8
0x4001cd:	add	rax, rsp
0x4001d0:	or	qword ptr [rax], 0
0x4001d4:	mov	rax, rsp
0x4001d7:	add	rax, 0xf
0x4001db:	shr	rax, 4
0x4001df:	shl	rax, 4
0x4001e3:	mov	qword ptr [rbp - 0xd8], rax
0x4001ea:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f1:	mov	edx, 0x63
0x4001f6:	mov	esi, 0x41
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x500000
<Block for 0x400193, 5 bytes>
0x400193:	cmp	rsp, rdx
0x400196:	je	0x4001aa
<Block for 0x400203, 23 bytes>
0x400203:	mov	rax, qword ptr [rbp - 0xd8]
0x40020a:	add	rax, 0x63
0x40020e:	mov	byte ptr [rax], 0
0x400211:	mov	eax, 0
0x400216:	test	eax, eax
0x400218:	je	0x400228
<Block for 0x400228, 39 bytes>
0x400228:	mov	rax, qword ptr [rbp - 0xd8]
0x40022f:	mov	qword ptr [rbp - 0xe0], rax
0x400236:	lea	rax, [rbp - 0xd0]
0x40023d:	mov	edx, 0xc7
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500000
<Block for 0x40021a, 12 bytes>
0x40021a:	lea	rdi, [rip + 0x1db]
0x400221:	call	0x500010
<Block for 0x40024f, 29 bytes>
0x40024f:	mov	byte ptr [rbp - 9], 0
0x400253:	mov	rdx, qword ptr [rbp - 0xe0]
0x40025a:	lea	rax, [rbp - 0xd0]
0x400261:	mov	rsi, rdx
0x400264:	mov	rdi, rax
0x400267:	call	0x500008
<Block for 0x400226, 2 bytes>
0x400226:	jmp	0x400236
<Block for 0x40026c, 15 bytes>
0x40026c:	lea	rax, [rbp - 0xd0]
0x400273:	mov	rdi, rax
0x400276:	call	0x500010
<Block for 0x400236, 25 bytes>
0x400236:	lea	rax, [rbp - 0xd0]
0x40023d:	mov	edx, 0xc7
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500000
<Block for 0x40027b, 16 bytes>
0x40027b:	nop	
0x40027c:	mov	rax, qword ptr [rbp - 8]
0x400280:	xor	rax, qword ptr fs:[0x28]
0x400289:	je	0x400290
<Block for 0x400290, 2 bytes>
0x400290:	leave	
0x400291:	ret	
<Block for 0x40028b, 5 bytes>
0x40028b:	call	0x500018
