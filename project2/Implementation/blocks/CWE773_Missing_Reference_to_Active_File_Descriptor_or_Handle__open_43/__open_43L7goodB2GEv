<Block for 0x4000dd, 46 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0x10
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x4000ff:	lea	rax, [rbp - 0xc]
0x400103:	mov	rdi, rax
0x400106:	call	0x4000a9
<Block for 0x40010b, 8 bytes>
0x40010b:	mov	eax, dword ptr [rbp - 0xc]
0x40010e:	cmp	eax, -1
0x400111:	je	0x40011d
<Block for 0x40011d, 27 bytes>
0x40011d:	mov	edx, 0x180
0x400122:	mov	esi, 0x42
0x400127:	lea	rdi, [rip + 0x6a]
0x40012e:	mov	eax, 0
0x400133:	call	0x500000
<Block for 0x400113, 10 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0xc]
0x400116:	mov	edi, eax
0x400118:	call	0x500008
<Block for 0x400138, 11 bytes>
0x400138:	mov	dword ptr [rbp - 0xc], eax
0x40013b:	mov	eax, dword ptr [rbp - 0xc]
0x40013e:	cmp	eax, -1
0x400141:	je	0x40014d
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x400143, 10 bytes>
0x400143:	mov	eax, dword ptr [rbp - 0xc]
0x400146:	mov	edi, eax
0x400148:	call	0x500008
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500010
