<Block for 0x400034, 46 bytes>
0x400034:	endbr64	
0x400038:	push	rbp
0x400039:	mov	rbp, rsp
0x40003c:	sub	rsp, 0x10
0x400040:	mov	rax, qword ptr fs:[0x28]
0x400049:	mov	qword ptr [rbp - 8], rax
0x40004d:	xor	eax, eax
0x40004f:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400056:	lea	rax, [rbp - 0xc]
0x40005a:	mov	rdi, rax
0x40005d:	call	0x400000
<Block for 0x400062, 27 bytes>
0x400062:	mov	edx, 0x180
0x400067:	mov	esi, 0x42
0x40006c:	lea	rdi, [rip + 0x114]
0x400073:	mov	eax, 0
0x400078:	call	0x500000
<Block for 0x40007d, 11 bytes>
0x40007d:	mov	dword ptr [rbp - 0xc], eax
0x400080:	mov	eax, dword ptr [rbp - 0xc]
0x400083:	cmp	eax, -1
0x400086:	je	0x400092
<Block for 0x400092, 16 bytes>
0x400092:	nop	
0x400093:	mov	rax, qword ptr [rbp - 8]
0x400097:	xor	rax, qword ptr fs:[0x28]
0x4000a0:	je	0x4000a7
<Block for 0x400088, 10 bytes>
0x400088:	mov	eax, dword ptr [rbp - 0xc]
0x40008b:	mov	edi, eax
0x40008d:	call	0x500008
<Block for 0x4000a7, 2 bytes>
0x4000a7:	leave	
0x4000a8:	ret	
<Block for 0x4000a2, 5 bytes>
0x4000a2:	call	0x500010
