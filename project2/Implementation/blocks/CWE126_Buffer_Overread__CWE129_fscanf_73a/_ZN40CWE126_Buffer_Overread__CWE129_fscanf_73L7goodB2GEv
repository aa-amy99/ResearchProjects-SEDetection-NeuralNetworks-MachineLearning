<Block for 0x400206, 40 bytes>
0x400206:	endbr64	
0x40020a:	push	rbp
0x40020b:	mov	rbp, rsp
0x40020e:	push	rbx
0x40020f:	sub	rsp, 0x58
0x400213:	mov	rax, qword ptr fs:[0x28]
0x40021c:	mov	qword ptr [rbp - 0x18], rax
0x400220:	xor	eax, eax
0x400222:	lea	rax, [rbp - 0x50]
0x400226:	mov	rdi, rax
0x400229:	call	0x4003da
<Block for 0x40022e, 38 bytes>
0x40022e:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400235:	mov	rax, qword ptr [rip + 0xffdc4]
0x40023c:	lea	rdx, [rbp - 0x54]
0x400240:	lea	rsi, [rip + 0xfa]
0x400247:	mov	rdi, rax
0x40024a:	mov	eax, 0
0x40024f:	call	0x500008
<Block for 0x400254, 19 bytes>
0x400254:	lea	rdx, [rbp - 0x54]
0x400258:	lea	rax, [rbp - 0x50]
0x40025c:	mov	rsi, rdx
0x40025f:	mov	rdi, rax
0x400262:	call	0x4004e4
<Block for 0x400267, 19 bytes>
0x400267:	lea	rdx, [rbp - 0x54]
0x40026b:	lea	rax, [rbp - 0x50]
0x40026f:	mov	rsi, rdx
0x400272:	mov	rdi, rax
0x400275:	call	0x4004e4
<Block for 0x40027a, 19 bytes>
0x40027a:	lea	rdx, [rbp - 0x54]
0x40027e:	lea	rax, [rbp - 0x50]
0x400282:	mov	rsi, rdx
0x400285:	mov	rdi, rax
0x400288:	call	0x4004e4
<Block for 0x40028d, 19 bytes>
0x40028d:	lea	rdx, [rbp - 0x50]
0x400291:	lea	rax, [rbp - 0x30]
0x400295:	mov	rsi, rdx
0x400298:	mov	rdi, rax
0x40029b:	call	0x40051e
<Block for 0x4002a0, 12 bytes>
0x4002a0:	lea	rax, [rbp - 0x30]
0x4002a4:	mov	rdi, rax
0x4002a7:	call	0x500030
<Block for 0x4002ac, 12 bytes>
0x4002ac:	lea	rax, [rbp - 0x30]
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x4003fa
<Block for 0x4002b8, 12 bytes>
0x4002b8:	lea	rax, [rbp - 0x50]
0x4002bc:	mov	rdi, rax
0x4002bf:	call	0x4003fa
<Block for 0x4002c4, 16 bytes>
0x4002c4:	nop	
0x4002c5:	mov	rax, qword ptr [rbp - 0x18]
0x4002c9:	xor	rax, qword ptr fs:[0x28]
0x4002d2:	je	0x40030e
<Block for 0x40030e, 7 bytes>
0x40030e:	add	rsp, 0x58
0x400312:	pop	rbx
0x400313:	pop	rbp
0x400314:	ret	
<Block for 0x4002d4, 2 bytes>
0x4002d4:	jmp	0x400309
<Block for 0x400309, 5 bytes>
0x400309:	call	0x500020
