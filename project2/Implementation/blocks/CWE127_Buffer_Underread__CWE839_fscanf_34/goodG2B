<Block for 0x4000b0, 99 bytes>
0x4000b0:	endbr64	
0x4000b4:	push	rbp
0x4000b5:	mov	rbp, rsp
0x4000b8:	sub	rsp, 0x40
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000d2:	mov	dword ptr [rbp - 0x38], 7
0x4000d9:	mov	eax, dword ptr [rbp - 0x38]
0x4000dc:	mov	dword ptr [rbp - 0x3c], eax
0x4000df:	mov	eax, dword ptr [rbp - 0x3c]
0x4000e2:	mov	dword ptr [rbp - 0x34], eax
0x4000e5:	mov	qword ptr [rbp - 0x30], 0
0x4000ed:	mov	qword ptr [rbp - 0x28], 0
0x4000f5:	mov	qword ptr [rbp - 0x20], 0
0x4000fd:	mov	qword ptr [rbp - 0x18], 0
0x400105:	mov	qword ptr [rbp - 0x10], 0
0x40010d:	cmp	dword ptr [rbp - 0x34], 9
0x400111:	jg	0x400125
<Block for 0x400113, 16 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0x34]
0x400116:	cdqe	
0x400118:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40011c:	mov	edi, eax
0x40011e:	call	0x500010
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0xfc]
0x40012c:	call	0x500018
<Block for 0x400123, 2 bytes>
0x400123:	jmp	0x400131
<Block for 0x400131, 16 bytes>
0x400131:	nop	
0x400132:	mov	rax, qword ptr [rbp - 8]
0x400136:	xor	rax, qword ptr fs:[0x28]
0x40013f:	je	0x400146
<Block for 0x400146, 2 bytes>
0x400146:	leave	
0x400147:	ret	
<Block for 0x400141, 5 bytes>
0x400141:	call	0x500020
