<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, dword ptr [rip + 0xfffd1]
0x40002f:	cmp	eax, 5
0x400032:	jne	0x400092
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x64
0x400039:	call	0x500008
<Block for 0x400092, 25 bytes>
0x400092:	lea	rax, [rbp - 0xd0]
0x400099:	mov	edx, 0xc7
0x40009e:	mov	esi, 0x43
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500018
<Block for 0x40003e, 17 bytes>
0x40003e:	mov	qword ptr [rbp - 0xd8], rax
0x400045:	cmp	qword ptr [rbp - 0xd8], 0
0x40004d:	jne	0x400059
<Block for 0x4000ab, 29 bytes>
0x4000ab:	mov	byte ptr [rbp - 9], 0
0x4000af:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b6:	lea	rax, [rbp - 0xd0]
0x4000bd:	mov	rsi, rdx
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500020
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 0xffffffff
0x400054:	call	0x500010
<Block for 0x400059, 25 bytes>
0x400059:	mov	rax, qword ptr [rbp - 0xd8]
0x400060:	mov	edx, 0x63
0x400065:	mov	esi, 0x41
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500018
<Block for 0x4000c8, 15 bytes>
0x4000c8:	lea	rax, [rbp - 0xd0]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500028
<Block for 0x400072, 57 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0xd8]
0x400079:	add	rax, 0x63
0x40007d:	mov	byte ptr [rax], 0
0x400080:	mov	rax, qword ptr [rbp - 0xd8]
0x400087:	sub	rax, 8
0x40008b:	mov	qword ptr [rbp - 0xe0], rax
0x400092:	lea	rax, [rbp - 0xd0]
0x400099:	mov	edx, 0xc7
0x40009e:	mov	esi, 0x43
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500018
<Block for 0x4000d7, 16 bytes>
0x4000d7:	nop	
0x4000d8:	mov	rax, qword ptr [rbp - 8]
0x4000dc:	xor	rax, qword ptr fs:[0x28]
0x4000e5:	je	0x4000ec
<Block for 0x4000ec, 2 bytes>
0x4000ec:	leave	
0x4000ed:	ret	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	call	0x500030
