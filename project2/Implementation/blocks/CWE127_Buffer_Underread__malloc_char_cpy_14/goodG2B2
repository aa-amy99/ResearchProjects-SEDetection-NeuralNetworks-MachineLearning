<Block for 0x4001e6, 52 bytes>
0x4001e6:	endbr64	
0x4001ea:	push	rbp
0x4001eb:	mov	rbp, rsp
0x4001ee:	sub	rsp, 0xe0
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	xor	eax, eax
0x400204:	mov	qword ptr [rbp - 0xe0], 0
0x40020f:	mov	eax, dword ptr [rip + 0xffdeb]
0x400215:	cmp	eax, 5
0x400218:	jne	0x400274
<Block for 0x40021a, 10 bytes>
0x40021a:	mov	edi, 0x64
0x40021f:	call	0x500008
<Block for 0x400274, 25 bytes>
0x400274:	lea	rax, [rbp - 0xd0]
0x40027b:	mov	edx, 0xc7
0x400280:	mov	esi, 0x43
0x400285:	mov	rdi, rax
0x400288:	call	0x500018
<Block for 0x400224, 17 bytes>
0x400224:	mov	qword ptr [rbp - 0xd8], rax
0x40022b:	cmp	qword ptr [rbp - 0xd8], 0
0x400233:	jne	0x40023f
<Block for 0x40028d, 29 bytes>
0x40028d:	mov	byte ptr [rbp - 9], 0
0x400291:	mov	rdx, qword ptr [rbp - 0xe0]
0x400298:	lea	rax, [rbp - 0xd0]
0x40029f:	mov	rsi, rdx
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x500020
<Block for 0x400235, 10 bytes>
0x400235:	mov	edi, 0xffffffff
0x40023a:	call	0x500010
<Block for 0x40023f, 25 bytes>
0x40023f:	mov	rax, qword ptr [rbp - 0xd8]
0x400246:	mov	edx, 0x63
0x40024b:	mov	esi, 0x41
0x400250:	mov	rdi, rax
0x400253:	call	0x500018
<Block for 0x4002aa, 15 bytes>
0x4002aa:	lea	rax, [rbp - 0xd0]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500028
<Block for 0x400258, 53 bytes>
0x400258:	mov	rax, qword ptr [rbp - 0xd8]
0x40025f:	add	rax, 0x63
0x400263:	mov	byte ptr [rax], 0
0x400266:	mov	rax, qword ptr [rbp - 0xd8]
0x40026d:	mov	qword ptr [rbp - 0xe0], rax
0x400274:	lea	rax, [rbp - 0xd0]
0x40027b:	mov	edx, 0xc7
0x400280:	mov	esi, 0x43
0x400285:	mov	rdi, rax
0x400288:	call	0x500018
<Block for 0x4002b9, 16 bytes>
0x4002b9:	nop	
0x4002ba:	mov	rax, qword ptr [rbp - 8]
0x4002be:	xor	rax, qword ptr fs:[0x28]
0x4002c7:	je	0x4002ce
<Block for 0x4002ce, 2 bytes>
0x4002ce:	leave	
0x4002cf:	ret	
<Block for 0x4002c9, 5 bytes>
0x4002c9:	call	0x500030
