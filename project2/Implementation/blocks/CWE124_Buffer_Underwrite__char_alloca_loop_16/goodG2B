<Block for 0x400159, 84 bytes>
0x400159:	endbr64	
0x40015d:	push	rbp
0x40015e:	mov	rbp, rsp
0x400161:	sub	rsp, 0x90
0x400168:	mov	rax, qword ptr fs:[0x28]
0x400171:	mov	qword ptr [rbp - 8], rax
0x400175:	xor	eax, eax
0x400177:	mov	eax, 0x10
0x40017c:	sub	rax, 1
0x400180:	add	rax, 0x6c
0x400184:	mov	esi, 0x10
0x400189:	mov	edx, 0
0x40018e:	div	rsi
0x400191:	imul	rax, rax, 0x10
0x400195:	mov	rdx, rax
0x400198:	and	rdx, 0xfffffffffffff000
0x40019f:	mov	rcx, rsp
0x4001a2:	sub	rcx, rdx
0x4001a5:	mov	rdx, rcx
0x4001a8:	cmp	rsp, rdx
0x4001ab:	je	0x4001bf
<Block for 0x4001bf, 26 bytes>
0x4001bf:	mov	rdx, rax
0x4001c2:	and	edx, 0xfff
0x4001c8:	sub	rsp, rdx
0x4001cb:	mov	rdx, rax
0x4001ce:	and	edx, 0xfff
0x4001d4:	test	rdx, rdx
0x4001d7:	je	0x4001e9
<Block for 0x4001ad, 18 bytes>
0x4001ad:	sub	rsp, 0x1000
0x4001b4:	or	qword ptr [rsp + 0xff8], 0
0x4001bd:	jmp	0x4001a8
<Block for 0x4001e9, 41 bytes>
0x4001e9:	mov	rax, rsp
0x4001ec:	add	rax, 0xf
0x4001f0:	shr	rax, 4
0x4001f4:	shl	rax, 4
0x4001f8:	mov	qword ptr [rbp - 0x80], rax
0x4001fc:	mov	rax, qword ptr [rbp - 0x80]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x41
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500000
<Block for 0x4001d9, 57 bytes>
0x4001d9:	and	eax, 0xfff
0x4001de:	sub	rax, 8
0x4001e2:	add	rax, rsp
0x4001e5:	or	qword ptr [rax], 0
0x4001e9:	mov	rax, rsp
0x4001ec:	add	rax, 0xf
0x4001f0:	shr	rax, 4
0x4001f4:	shl	rax, 4
0x4001f8:	mov	qword ptr [rbp - 0x80], rax
0x4001fc:	mov	rax, qword ptr [rbp - 0x80]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x41
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500000
<Block for 0x4001a8, 5 bytes>
0x4001a8:	cmp	rsp, rdx
0x4001ab:	je	0x4001bf
<Block for 0x400212, 42 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x80]
0x400216:	add	rax, 0x63
0x40021a:	mov	byte ptr [rax], 0
0x40021d:	mov	rax, qword ptr [rbp - 0x80]
0x400221:	mov	qword ptr [rbp - 0x78], rax
0x400225:	nop	
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500000
<Block for 0x40023c, 17 bytes>
0x40023c:	mov	byte ptr [rbp - 0xd], 0
0x400240:	mov	qword ptr [rbp - 0x88], 0
0x40024b:	jmp	0x400276
<Block for 0x400276, 10 bytes>
0x400276:	cmp	qword ptr [rbp - 0x88], 0x63
0x40027e:	jbe	0x40024d
<Block for 0x40024d, 51 bytes>
0x40024d:	mov	rdx, qword ptr [rbp - 0x78]
0x400251:	mov	rax, qword ptr [rbp - 0x88]
0x400258:	add	rdx, rax
0x40025b:	lea	rcx, [rbp - 0x70]
0x40025f:	mov	rax, qword ptr [rbp - 0x88]
0x400266:	add	rax, rcx
0x400269:	movzx	eax, byte ptr [rax]
0x40026c:	mov	byte ptr [rdx], al
0x40026e:	add	qword ptr [rbp - 0x88], 1
0x400276:	cmp	qword ptr [rbp - 0x88], 0x63
0x40027e:	jbe	0x40024d
<Block for 0x400280, 23 bytes>
0x400280:	mov	rax, qword ptr [rbp - 0x78]
0x400284:	add	rax, 0x63
0x400288:	mov	byte ptr [rax], 0
0x40028b:	mov	rax, qword ptr [rbp - 0x78]
0x40028f:	mov	rdi, rax
0x400292:	call	0x500008
<Block for 0x400297, 16 bytes>
0x400297:	nop	
0x400298:	mov	rax, qword ptr [rbp - 8]
0x40029c:	xor	rax, qword ptr fs:[0x28]
0x4002a5:	je	0x4002ac
<Block for 0x4002ac, 2 bytes>
0x4002ac:	leave	
0x4002ad:	ret	
<Block for 0x4002a7, 5 bytes>
0x4002a7:	call	0x500010
