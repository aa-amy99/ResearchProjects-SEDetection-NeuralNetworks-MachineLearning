<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x20
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40008b:	lea	rax, [rbp - 0x1c]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 17 bytes>
0x400097:	mov	eax, dword ptr [rbp - 0x1c]
0x40009a:	cdqe	
0x40009c:	shl	rax, 2
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500008
<Block for 0x4000a8, 11 bytes>
0x4000a8:	mov	qword ptr [rbp - 0x10], rax
0x4000ac:	cmp	qword ptr [rbp - 0x10], 0
0x4000b1:	jne	0x4000bd
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	edi, 0xffffffff
0x4000b8:	call	0x500010
<Block for 0x4000bd, 19 bytes>
0x4000bd:	mov	qword ptr [rbp - 0x18], 0
0x4000c5:	mov	eax, dword ptr [rbp - 0x1c]
0x4000c8:	cdqe	
0x4000ca:	cmp	qword ptr [rbp - 0x18], rax
0x4000ce:	jae	0x4000f0
<Block for 0x4000d0, 32 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x18]
0x4000d4:	lea	rdx, [rax*4]
0x4000dc:	mov	rax, qword ptr [rbp - 0x10]
0x4000e0:	add	rax, rdx
0x4000e3:	mov	dword ptr [rax], 0
0x4000e9:	add	qword ptr [rbp - 0x18], 1
0x4000ee:	jmp	0x4000c5
<Block for 0x4000f0, 13 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x10]
0x4000f4:	mov	eax, dword ptr [rax]
0x4000f6:	mov	edi, eax
0x4000f8:	call	0x500018
<Block for 0x4000c5, 11 bytes>
0x4000c5:	mov	eax, dword ptr [rbp - 0x1c]
0x4000c8:	cdqe	
0x4000ca:	cmp	qword ptr [rbp - 0x18], rax
0x4000ce:	jae	0x4000f0
<Block for 0x4000fd, 12 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x10]
0x400101:	mov	rdi, rax
0x400104:	call	0x500020
<Block for 0x400109, 16 bytes>
0x400109:	nop	
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	xor	rax, qword ptr fs:[0x28]
0x400117:	je	0x40011e
<Block for 0x40011e, 2 bytes>
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x400119, 5 bytes>
0x400119:	call	0x500028
