<Block for 0x4000b6, 48 bytes>
0x4000b6:	endbr64	
0x4000ba:	push	rbp
0x4000bb:	mov	rbp, rsp
0x4000be:	sub	rsp, 0x50
0x4000c2:	mov	qword ptr [rbp - 0x48], rdi
0x4000c6:	mov	rax, qword ptr fs:[0x28]
0x4000cf:	mov	qword ptr [rbp - 8], rax
0x4000d3:	xor	eax, eax
0x4000d5:	mov	rax, qword ptr [rbp - 0x48]
0x4000d9:	mov	esi, 2
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x40027c
<Block for 0x4000e6, 51 bytes>
0x4000e6:	mov	eax, dword ptr [rax]
0x4000e8:	mov	dword ptr [rbp - 0x34], eax
0x4000eb:	mov	qword ptr [rbp - 0x30], 0
0x4000f3:	mov	qword ptr [rbp - 0x28], 0
0x4000fb:	mov	qword ptr [rbp - 0x20], 0
0x400103:	mov	qword ptr [rbp - 0x18], 0
0x40010b:	mov	qword ptr [rbp - 0x10], 0
0x400113:	cmp	dword ptr [rbp - 0x34], 9
0x400117:	jg	0x400149
<Block for 0x400119, 26 bytes>
0x400119:	mov	eax, dword ptr [rbp - 0x34]
0x40011c:	cdqe	
0x40011e:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400126:	mov	dword ptr [rbp - 0x38], 0
0x40012d:	cmp	dword ptr [rbp - 0x38], 9
0x400131:	jg	0x400155
<Block for 0x400149, 12 bytes>
0x400149:	lea	rdi, [rip + 0xe8]
0x400150:	call	0x500008
<Block for 0x400133, 16 bytes>
0x400133:	mov	eax, dword ptr [rbp - 0x38]
0x400136:	cdqe	
0x400138:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40013c:	mov	edi, eax
0x40013e:	call	0x500000
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x400143, 6 bytes>
0x400143:	add	dword ptr [rbp - 0x38], 1
0x400147:	jmp	0x40012d
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500010
<Block for 0x40012d, 6 bytes>
0x40012d:	cmp	dword ptr [rbp - 0x38], 9
0x400131:	jg	0x400155
