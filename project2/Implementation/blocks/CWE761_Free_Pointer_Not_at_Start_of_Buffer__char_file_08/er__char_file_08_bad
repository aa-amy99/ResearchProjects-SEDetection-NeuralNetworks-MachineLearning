<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x20
0x40002a:	mov	edi, 0x64
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	qword ptr [rbp - 0x18], rax
0x400038:	cmp	qword ptr [rbp - 0x18], 0
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x18]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x18]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 19 bytes>
0x40005c:	mov	qword ptr [rbp - 0x10], rax
0x400060:	mov	eax, 0x64
0x400065:	sub	rax, qword ptr [rbp - 0x10]
0x400069:	cmp	rax, 1
0x40006d:	jbe	0x4000e2
<Block for 0x4000e2, 10 bytes>
0x4000e2:	mov	eax, 0
0x4000e7:	call	0x400000
<Block for 0x40006f, 19 bytes>
0x40006f:	lea	rsi, [rip + 0x325]
0x400076:	lea	rdi, [rip + 0x320]
0x40007d:	call	0x500018
<Block for 0x4000ec, 4 bytes>
0x4000ec:	test	eax, eax
0x4000ee:	je	0x400127
<Block for 0x400082, 11 bytes>
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	cmp	qword ptr [rbp - 8], 0
0x40008b:	je	0x4000e2
<Block for 0x400127, 3 bytes>
0x400127:	nop	
0x400128:	leave	
0x400129:	ret	
<Block for 0x4000f0, 2 bytes>
0x4000f0:	jmp	0x400110
<Block for 0x40008d, 42 bytes>
0x40008d:	mov	rax, qword ptr [rbp - 0x10]
0x400091:	mov	edx, 0x64
0x400096:	sub	edx, eax
0x400098:	mov	eax, edx
0x40009a:	mov	esi, eax
0x40009c:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a0:	mov	rax, qword ptr [rbp - 0x10]
0x4000a4:	lea	rcx, [rdx + rax]
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	mov	rdx, rax
0x4000af:	mov	rdi, rcx
0x4000b2:	call	0x500020
<Block for 0x400110, 11 bytes>
0x400110:	mov	rax, qword ptr [rbp - 0x18]
0x400114:	movzx	eax, byte ptr [rax]
0x400117:	test	al, al
0x400119:	jne	0x4000f2
<Block for 0x4000b7, 5 bytes>
0x4000b7:	test	rax, rax
0x4000ba:	jne	0x4000d6
<Block for 0x40011b, 12 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 0x18]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500038
<Block for 0x4000f2, 11 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x18]
0x4000f6:	movzx	eax, byte ptr [rax]
0x4000f9:	cmp	al, 0x53
0x4000fb:	jne	0x40010b
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rdi, [rip + 0x2e8]
0x4000c3:	call	0x500028
<Block for 0x4000d6, 12 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500030
<Block for 0x4000fd, 12 bytes>
0x4000fd:	lea	rdi, [rip + 0x2b6]
0x400104:	call	0x500028
<Block for 0x40010b, 16 bytes>
0x40010b:	add	qword ptr [rbp - 0x18], 1
0x400110:	mov	rax, qword ptr [rbp - 0x18]
0x400114:	movzx	eax, byte ptr [rax]
0x400117:	test	al, al
0x400119:	jne	0x4000f2
<Block for 0x4000c8, 26 bytes>
0x4000c8:	mov	rdx, qword ptr [rbp - 0x18]
0x4000cc:	mov	rax, qword ptr [rbp - 0x10]
0x4000d0:	add	rax, rdx
0x4000d3:	mov	byte ptr [rax], 0
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500030
<Block for 0x400109, 2 bytes>
0x400109:	jmp	0x40011b
