<Block for 0x40025a, 22 bytes>
0x40025a:	endbr64	
0x40025e:	push	rbp
0x40025f:	mov	rbp, rsp
0x400262:	sub	rsp, 0x20
0x400266:	mov	edi, 0x64
0x40026b:	call	0x500000
<Block for 0x400270, 11 bytes>
0x400270:	mov	qword ptr [rbp - 0x18], rax
0x400274:	cmp	qword ptr [rbp - 0x18], 0
0x400279:	jne	0x400285
<Block for 0x40027b, 10 bytes>
0x40027b:	mov	edi, 0xffffffff
0x400280:	call	0x500008
<Block for 0x400285, 19 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x18]
0x400289:	mov	byte ptr [rax], 0
0x40028c:	mov	rax, qword ptr [rbp - 0x18]
0x400290:	mov	rdi, rax
0x400293:	call	0x500010
<Block for 0x400298, 19 bytes>
0x400298:	mov	qword ptr [rbp - 0x10], rax
0x40029c:	mov	eax, 0x64
0x4002a1:	sub	rax, qword ptr [rbp - 0x10]
0x4002a5:	cmp	rax, 1
0x4002a9:	jbe	0x40031e
<Block for 0x40031e, 10 bytes>
0x40031e:	mov	eax, 0
0x400323:	call	0x400000
<Block for 0x4002ab, 19 bytes>
0x4002ab:	lea	rsi, [rip + 0xe9]
0x4002b2:	lea	rdi, [rip + 0xe4]
0x4002b9:	call	0x500018
<Block for 0x400328, 4 bytes>
0x400328:	test	eax, eax
0x40032a:	je	0x400379
<Block for 0x4002be, 11 bytes>
0x4002be:	mov	qword ptr [rbp - 8], rax
0x4002c2:	cmp	qword ptr [rbp - 8], 0
0x4002c7:	je	0x40031e
<Block for 0x400379, 3 bytes>
0x400379:	nop	
0x40037a:	leave	
0x40037b:	ret	
<Block for 0x40032c, 10 bytes>
0x40032c:	mov	qword ptr [rbp - 0x20], 0
0x400334:	jmp	0x40035b
<Block for 0x4002c9, 42 bytes>
0x4002c9:	mov	rax, qword ptr [rbp - 0x10]
0x4002cd:	mov	edx, 0x64
0x4002d2:	sub	edx, eax
0x4002d4:	mov	eax, edx
0x4002d6:	mov	esi, eax
0x4002d8:	mov	rdx, qword ptr [rbp - 0x18]
0x4002dc:	mov	rax, qword ptr [rbp - 0x10]
0x4002e0:	lea	rcx, [rdx + rax]
0x4002e4:	mov	rax, qword ptr [rbp - 8]
0x4002e8:	mov	rdx, rax
0x4002eb:	mov	rdi, rcx
0x4002ee:	call	0x500020
<Block for 0x40035b, 12 bytes>
0x40035b:	mov	rax, qword ptr [rbp - 0x18]
0x40035f:	mov	rdi, rax
0x400362:	call	0x500010
<Block for 0x4002f3, 5 bytes>
0x4002f3:	test	rax, rax
0x4002f6:	jne	0x400312
<Block for 0x400367, 6 bytes>
0x400367:	cmp	qword ptr [rbp - 0x20], rax
0x40036b:	jb	0x400336
<Block for 0x4002f8, 12 bytes>
0x4002f8:	lea	rdi, [rip + 0xac]
0x4002ff:	call	0x500028
<Block for 0x400312, 12 bytes>
0x400312:	mov	rax, qword ptr [rbp - 8]
0x400316:	mov	rdi, rax
0x400319:	call	0x500030
<Block for 0x400336, 18 bytes>
0x400336:	mov	rdx, qword ptr [rbp - 0x18]
0x40033a:	mov	rax, qword ptr [rbp - 0x20]
0x40033e:	add	rax, rdx
0x400341:	movzx	eax, byte ptr [rax]
0x400344:	cmp	al, 0x53
0x400346:	jne	0x400356
<Block for 0x40036d, 12 bytes>
0x40036d:	mov	rax, qword ptr [rbp - 0x18]
0x400371:	mov	rdi, rax
0x400374:	call	0x500038
<Block for 0x400304, 26 bytes>
0x400304:	mov	rdx, qword ptr [rbp - 0x18]
0x400308:	mov	rax, qword ptr [rbp - 0x10]
0x40030c:	add	rax, rdx
0x40030f:	mov	byte ptr [rax], 0
0x400312:	mov	rax, qword ptr [rbp - 8]
0x400316:	mov	rdi, rax
0x400319:	call	0x500030
<Block for 0x400348, 12 bytes>
0x400348:	lea	rdi, [rip + 0x6b]
0x40034f:	call	0x500028
<Block for 0x400356, 17 bytes>
0x400356:	add	qword ptr [rbp - 0x20], 1
0x40035b:	mov	rax, qword ptr [rbp - 0x18]
0x40035f:	mov	rdi, rax
0x400362:	call	0x500010
<Block for 0x400354, 2 bytes>
0x400354:	jmp	0x40036d
