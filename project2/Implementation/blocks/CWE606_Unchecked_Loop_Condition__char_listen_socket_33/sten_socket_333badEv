<Block for 0x400000, 193 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xa8]
0x400025:	mov	qword ptr [rbp - 0xa0], rax
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	qword ptr [rbp - 0xa8], rax
0x40009e:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x4000a8:	mov	dword ptr [rbp - 0xbc], 0xffffffff
0x4000b2:	mov	rax, qword ptr [rbp - 0xa8]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500000
<Block for 0x4000c1, 27 bytes>
0x4000c1:	mov	qword ptr [rbp - 0x98], rax
0x4000c8:	mov	edx, 6
0x4000cd:	mov	esi, 1
0x4000d2:	mov	edi, 2
0x4000d7:	call	0x500008
<Block for 0x4000dc, 19 bytes>
0x4000dc:	mov	dword ptr [rbp - 0xb0], eax
0x4000e2:	cmp	dword ptr [rbp - 0xb0], -1
0x4000e9:	je	0x400264
<Block for 0x400264, 3 bytes>
0x400264:	nop	
0x400265:	jmp	0x40026e
<Block for 0x4000ef, 22 bytes>
0x4000ef:	lea	rax, [rbp - 0x80]
0x4000f3:	mov	edx, 0x10
0x4000f8:	mov	esi, 0
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500010
<Block for 0x40026e, 9 bytes>
0x40026e:	cmp	dword ptr [rbp - 0xb0], -1
0x400275:	je	0x400284
<Block for 0x400105, 23 bytes>
0x400105:	mov	word ptr [rbp - 0x80], 2
0x40010b:	mov	dword ptr [rbp - 0x7c], 0
0x400112:	mov	edi, 0x6987
0x400117:	call	0x500018
<Block for 0x400284, 9 bytes>
0x400284:	cmp	dword ptr [rbp - 0xbc], -1
0x40028b:	je	0x40029a
<Block for 0x400277, 13 bytes>
0x400277:	mov	eax, dword ptr [rbp - 0xb0]
0x40027d:	mov	edi, eax
0x40027f:	call	0x500048
<Block for 0x40011c, 29 bytes>
0x40011c:	mov	word ptr [rbp - 0x7e], ax
0x400120:	lea	rcx, [rbp - 0x80]
0x400124:	mov	eax, dword ptr [rbp - 0xb0]
0x40012a:	mov	edx, 0x10
0x40012f:	mov	rsi, rcx
0x400132:	mov	edi, eax
0x400134:	call	0x500020
<Block for 0x40029a, 51 bytes>
0x40029a:	mov	rax, qword ptr [rbp - 0xa0]
0x4002a1:	mov	rax, qword ptr [rax]
0x4002a4:	mov	qword ptr [rbp - 0x88], rax
0x4002ab:	lea	rdx, [rbp - 0xc0]
0x4002b2:	mov	rax, qword ptr [rbp - 0x88]
0x4002b9:	lea	rsi, [rip + 0x4f1]
0x4002c0:	mov	rdi, rax
0x4002c3:	mov	eax, 0
0x4002c8:	call	0x500050
<Block for 0x40028d, 13 bytes>
0x40028d:	mov	eax, dword ptr [rbp - 0xbc]
0x400293:	mov	edi, eax
0x400295:	call	0x500048
<Block for 0x400139, 14 bytes>
0x400139:	cmp	eax, -1
0x40013c:	sete	al
0x40013f:	test	al, al
0x400141:	jne	0x400267
<Block for 0x4002cd, 10 bytes>
0x4002cd:	cmp	eax, 1
0x4002d0:	sete	al
0x4002d3:	test	al, al
0x4002d5:	je	0x400316
<Block for 0x400147, 18 bytes>
0x400147:	mov	eax, dword ptr [rbp - 0xb0]
0x40014d:	mov	esi, 5
0x400152:	mov	edi, eax
0x400154:	call	0x500028
<Block for 0x400267, 3 bytes>
0x400267:	nop	
0x400268:	jmp	0x40026e
<Block for 0x400316, 16 bytes>
0x400316:	nop	
0x400317:	mov	rax, qword ptr [rbp - 8]
0x40031b:	xor	rax, qword ptr fs:[0x28]
0x400324:	je	0x40032b
<Block for 0x4002d7, 34 bytes>
0x4002d7:	mov	dword ptr [rbp - 0xb4], 0
0x4002e1:	mov	dword ptr [rbp - 0xb8], 0
0x4002eb:	mov	eax, dword ptr [rbp - 0xc0]
0x4002f1:	cmp	dword ptr [rbp - 0xb8], eax
0x4002f7:	jge	0x400309
<Block for 0x400159, 14 bytes>
0x400159:	cmp	eax, -1
0x40015c:	sete	al
0x40015f:	test	al, al
0x400161:	jne	0x40026a
<Block for 0x40032b, 2 bytes>
0x40032b:	leave	
0x40032c:	ret	
<Block for 0x400326, 5 bytes>
0x400326:	call	0x500060
<Block for 0x4002f9, 16 bytes>
0x4002f9:	add	dword ptr [rbp - 0xb4], 1
0x400300:	add	dword ptr [rbp - 0xb8], 1
0x400307:	jmp	0x4002eb
<Block for 0x400309, 13 bytes>
0x400309:	mov	eax, dword ptr [rbp - 0xb4]
0x40030f:	mov	edi, eax
0x400311:	call	0x500058
<Block for 0x400167, 23 bytes>
0x400167:	mov	eax, dword ptr [rbp - 0xb0]
0x40016d:	mov	edx, 0
0x400172:	mov	esi, 0
0x400177:	mov	edi, eax
0x400179:	call	0x500030
<Block for 0x40026a, 3 bytes>
0x40026a:	nop	
0x40026b:	jmp	0x40026e
<Block for 0x4002eb, 14 bytes>
0x4002eb:	mov	eax, dword ptr [rbp - 0xc0]
0x4002f1:	cmp	dword ptr [rbp - 0xb8], eax
0x4002f7:	jge	0x400309
<Block for 0x40017e, 19 bytes>
0x40017e:	mov	dword ptr [rbp - 0xbc], eax
0x400184:	cmp	dword ptr [rbp - 0xbc], -1
0x40018b:	je	0x40026d
<Block for 0x400191, 51 bytes>
0x400191:	mov	eax, 0x63
0x400196:	sub	rax, qword ptr [rbp - 0x98]
0x40019d:	mov	rdx, rax
0x4001a0:	mov	rcx, qword ptr [rbp - 0xa8]
0x4001a7:	mov	rax, qword ptr [rbp - 0x98]
0x4001ae:	lea	rsi, [rcx + rax]
0x4001b2:	mov	eax, dword ptr [rbp - 0xbc]
0x4001b8:	mov	ecx, 0
0x4001bd:	mov	edi, eax
0x4001bf:	call	0x500038
<Block for 0x40026d, 1 bytes>
0x40026d:	nop	
<Block for 0x4001c4, 19 bytes>
0x4001c4:	mov	dword ptr [rbp - 0xac], eax
0x4001ca:	cmp	dword ptr [rbp - 0xac], -1
0x4001d1:	je	0x40026e
<Block for 0x4001d7, 13 bytes>
0x4001d7:	cmp	dword ptr [rbp - 0xac], 0
0x4001de:	je	0x40026e
<Block for 0x4001e4, 52 bytes>
0x4001e4:	mov	rax, qword ptr [rbp - 0xa8]
0x4001eb:	mov	edx, dword ptr [rbp - 0xac]
0x4001f1:	movsxd	rcx, edx
0x4001f4:	mov	rdx, qword ptr [rbp - 0x98]
0x4001fb:	add	rdx, rcx
0x4001fe:	add	rax, rdx
0x400201:	mov	byte ptr [rax], 0
0x400204:	mov	rax, qword ptr [rbp - 0xa8]
0x40020b:	mov	esi, 0xd
0x400210:	mov	rdi, rax
0x400213:	call	0x500040
<Block for 0x400218, 17 bytes>
0x400218:	mov	qword ptr [rbp - 0x90], rax
0x40021f:	cmp	qword ptr [rbp - 0x90], 0
0x400227:	je	0x400233
<Block for 0x400233, 20 bytes>
0x400233:	mov	rax, qword ptr [rbp - 0xa8]
0x40023a:	mov	esi, 0xa
0x40023f:	mov	rdi, rax
0x400242:	call	0x500040
<Block for 0x400229, 30 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0x90]
0x400230:	mov	byte ptr [rax], 0
0x400233:	mov	rax, qword ptr [rbp - 0xa8]
0x40023a:	mov	esi, 0xa
0x40023f:	mov	rdi, rax
0x400242:	call	0x500040
<Block for 0x400247, 17 bytes>
0x400247:	mov	qword ptr [rbp - 0x90], rax
0x40024e:	cmp	qword ptr [rbp - 0x90], 0
0x400256:	je	0x40026e
<Block for 0x400258, 12 bytes>
0x400258:	mov	rax, qword ptr [rbp - 0x90]
0x40025f:	mov	byte ptr [rax], 0
0x400262:	jmp	0x40026e
