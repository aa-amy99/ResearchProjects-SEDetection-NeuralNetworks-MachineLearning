<Block for 0x400066, 39 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x10
0x400072:	mov	qword ptr [rbp - 8], 0
0x40007a:	lea	rsi, [rip + 0x104]
0x400081:	lea	rdi, [rip + 0x100]
0x400088:	call	0x500000
<Block for 0x40008d, 14 bytes>
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	mov	eax, 0
0x400096:	call	0x500018
<Block for 0x40009b, 4 bytes>
0x40009b:	test	eax, eax
0x40009d:	je	0x4000ad
<Block for 0x4000ad, 7 bytes>
0x4000ad:	cmp	qword ptr [rbp - 8], 0
0x4000b2:	je	0x4000c0
<Block for 0x40009f, 12 bytes>
0x40009f:	lea	rdi, [rip + 0x108]
0x4000a6:	call	0x500020
<Block for 0x4000c0, 19 bytes>
0x4000c0:	lea	rsi, [rip + 0xbe]
0x4000c7:	lea	rdi, [rip + 0xf5]
0x4000ce:	call	0x500000
<Block for 0x4000b4, 12 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500010
<Block for 0x4000ab, 2 bytes>
0x4000ab:	jmp	0x4000ea
<Block for 0x4000d3, 11 bytes>
0x4000d3:	mov	qword ptr [rbp - 8], rax
0x4000d7:	cmp	qword ptr [rbp - 8], 0
0x4000dc:	je	0x4000ea
<Block for 0x4000ea, 3 bytes>
0x4000ea:	nop	
0x4000eb:	leave	
0x4000ec:	ret	
<Block for 0x4000de, 12 bytes>
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500010
