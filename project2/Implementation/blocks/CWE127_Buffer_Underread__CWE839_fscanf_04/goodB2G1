<Block for 0x4000b8, 43 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0x40
0x4000c4:	mov	rax, qword ptr fs:[0x28]
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	xor	eax, eax
0x4000d3:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000da:	mov	eax, 1
0x4000df:	test	eax, eax
0x4000e1:	je	0x400102
<Block for 0x400102, 9 bytes>
0x400102:	mov	eax, 0
0x400107:	test	eax, eax
0x400109:	je	0x400119
<Block for 0x4000e3, 31 bytes>
0x4000e3:	mov	rax, qword ptr [rip + 0xfff16]
0x4000ea:	lea	rdx, [rbp - 0x34]
0x4000ee:	lea	rsi, [rip + 0x2db]
0x4000f5:	mov	rdi, rax
0x4000f8:	mov	eax, 0
0x4000fd:	call	0x500008
<Block for 0x400119, 47 bytes>
0x400119:	mov	qword ptr [rbp - 0x30], 0
0x400121:	mov	qword ptr [rbp - 0x28], 0
0x400129:	mov	qword ptr [rbp - 0x20], 0
0x400131:	mov	qword ptr [rbp - 0x18], 0
0x400139:	mov	qword ptr [rbp - 0x10], 0
0x400141:	mov	eax, dword ptr [rbp - 0x34]
0x400144:	test	eax, eax
0x400146:	js	0x400162
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x2e5]
0x400112:	call	0x500018
<Block for 0x400162, 12 bytes>
0x400162:	lea	rdi, [rip + 0x2a7]
0x400169:	call	0x500018
<Block for 0x400148, 8 bytes>
0x400148:	mov	eax, dword ptr [rbp - 0x34]
0x40014b:	cmp	eax, 9
0x40014e:	jg	0x400162
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x40016e
<Block for 0x40016e, 16 bytes>
0x40016e:	nop	
0x40016f:	mov	rax, qword ptr [rbp - 8]
0x400173:	xor	rax, qword ptr fs:[0x28]
0x40017c:	je	0x400183
<Block for 0x400150, 16 bytes>
0x400150:	mov	eax, dword ptr [rbp - 0x34]
0x400153:	cdqe	
0x400155:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400159:	mov	edi, eax
0x40015b:	call	0x500010
<Block for 0x400183, 2 bytes>
0x400183:	leave	
0x400184:	ret	
<Block for 0x40017e, 5 bytes>
0x40017e:	call	0x500020
<Block for 0x400160, 2 bytes>
0x400160:	jmp	0x40016e
