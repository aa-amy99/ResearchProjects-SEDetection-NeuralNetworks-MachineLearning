<Block for 0x400106, 22 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	sub	rsp, 0x20
0x400112:	mov	eax, 0
0x400117:	call	0x500000
<Block for 0x40011c, 4 bytes>
0x40011c:	test	eax, eax
0x40011e:	je	0x400199
<Block for 0x400199, 16 bytes>
0x400199:	lea	rax, [rip + 0x84]
0x4001a0:	mov	qword ptr [rbp - 8], rax
0x4001a4:	call	0x500008
<Block for 0x400120, 16 bytes>
0x400120:	lea	rax, [rip + 0xfd]
0x400127:	mov	qword ptr [rbp - 0x10], rax
0x40012b:	call	0x500008
<Block for 0x4001a9, 55 bytes>
0x4001a9:	mov	edx, eax
0x4001ab:	movsxd	rax, edx
0x4001ae:	imul	rax, rax, 0x55555556
0x4001b5:	shr	rax, 0x20
0x4001b9:	mov	rcx, rax
0x4001bc:	mov	eax, edx
0x4001be:	sar	eax, 0x1f
0x4001c1:	mov	edi, ecx
0x4001c3:	sub	edi, eax
0x4001c5:	mov	eax, edi
0x4001c7:	mov	dword ptr [rbp - 0x18], eax
0x4001ca:	mov	ecx, dword ptr [rbp - 0x18]
0x4001cd:	mov	eax, ecx
0x4001cf:	add	eax, eax
0x4001d1:	add	eax, ecx
0x4001d3:	sub	edx, eax
0x4001d5:	mov	eax, edx
0x4001d7:	mov	dword ptr [rbp - 0x18], eax
0x4001da:	cmp	dword ptr [rbp - 0x18], 0
0x4001de:	je	0x4001e8
<Block for 0x400130, 55 bytes>
0x400130:	mov	edx, eax
0x400132:	movsxd	rax, edx
0x400135:	imul	rax, rax, 0x55555556
0x40013c:	shr	rax, 0x20
0x400140:	mov	rcx, rax
0x400143:	mov	eax, edx
0x400145:	sar	eax, 0x1f
0x400148:	mov	esi, ecx
0x40014a:	sub	esi, eax
0x40014c:	mov	eax, esi
0x40014e:	mov	dword ptr [rbp - 0x14], eax
0x400151:	mov	ecx, dword ptr [rbp - 0x14]
0x400154:	mov	eax, ecx
0x400156:	add	eax, eax
0x400158:	add	eax, ecx
0x40015a:	sub	edx, eax
0x40015c:	mov	eax, edx
0x40015e:	mov	dword ptr [rbp - 0x14], eax
0x400161:	cmp	dword ptr [rbp - 0x14], 0
0x400165:	je	0x400172
<Block for 0x4001e8, 13 bytes>
0x4001e8:	lea	rax, [rip + 0x4e]
0x4001ef:	mov	qword ptr [rbp - 8], rax
0x4001f3:	jmp	0x400201
<Block for 0x4001e0, 6 bytes>
0x4001e0:	cmp	dword ptr [rbp - 0x18], 1
0x4001e4:	je	0x4001f5
<Block for 0x400172, 13 bytes>
0x400172:	lea	rax, [rip + 0xc4]
0x400179:	mov	qword ptr [rbp - 0x10], rax
0x40017d:	jmp	0x40018b
<Block for 0x400167, 6 bytes>
0x400167:	cmp	dword ptr [rbp - 0x14], 1
0x40016b:	je	0x40017f
<Block for 0x400201, 12 bytes>
0x400201:	mov	rax, qword ptr [rbp - 8]
0x400205:	mov	rdi, rax
0x400208:	call	0x500010
<Block for 0x4001f5, 24 bytes>
0x4001f5:	lea	rax, [rip + 0x43]
0x4001fc:	mov	qword ptr [rbp - 8], rax
0x400200:	nop	
0x400201:	mov	rax, qword ptr [rbp - 8]
0x400205:	mov	rdi, rax
0x400208:	call	0x500010
<Block for 0x4001e6, 2 bytes>
0x4001e6:	jmp	0x40020d
<Block for 0x40018b, 12 bytes>
0x40018b:	mov	rax, qword ptr [rbp - 0x10]
0x40018f:	mov	rdi, rax
0x400192:	call	0x500010
<Block for 0x40017f, 24 bytes>
0x40017f:	lea	rax, [rip + 0xb9]
0x400186:	mov	qword ptr [rbp - 0x10], rax
0x40018a:	nop	
0x40018b:	mov	rax, qword ptr [rbp - 0x10]
0x40018f:	mov	rdi, rax
0x400192:	call	0x500010
<Block for 0x40016d, 5 bytes>
0x40016d:	jmp	0x40020d
<Block for 0x40020d, 2 bytes>
0x40020d:	leave	
0x40020e:	ret	
<Block for 0x400197, 2 bytes>
0x400197:	jmp	0x40020d
