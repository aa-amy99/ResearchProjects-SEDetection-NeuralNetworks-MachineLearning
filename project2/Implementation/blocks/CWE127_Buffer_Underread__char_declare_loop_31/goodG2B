<Block for 0x4000ed, 55 bytes>
0x4000ed:	endbr64	
0x4000f1:	push	rbp
0x4000f2:	mov	rbp, rsp
0x4000f5:	sub	rsp, 0x100
0x4000fc:	mov	rax, qword ptr fs:[0x28]
0x400105:	mov	qword ptr [rbp - 8], rax
0x400109:	xor	eax, eax
0x40010b:	lea	rax, [rbp - 0xe0]
0x400112:	mov	edx, 0x63
0x400117:	mov	esi, 0x41
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x400124, 68 bytes>
0x400124:	mov	byte ptr [rbp - 0x7d], 0
0x400128:	lea	rax, [rbp - 0xe0]
0x40012f:	mov	qword ptr [rbp - 0xf8], rax
0x400136:	mov	rax, qword ptr [rbp - 0xf8]
0x40013d:	mov	qword ptr [rbp - 0xf0], rax
0x400144:	mov	rax, qword ptr [rbp - 0xf0]
0x40014b:	mov	qword ptr [rbp - 0xe8], rax
0x400152:	lea	rax, [rbp - 0x70]
0x400156:	mov	edx, 0x63
0x40015b:	mov	esi, 0x43
0x400160:	mov	rdi, rax
0x400163:	call	0x500000
<Block for 0x400168, 17 bytes>
0x400168:	mov	byte ptr [rbp - 0xd], 0
0x40016c:	mov	qword ptr [rbp - 0x100], 0
0x400177:	jmp	0x4001a5
<Block for 0x4001a5, 10 bytes>
0x4001a5:	cmp	qword ptr [rbp - 0x100], 0x63
0x4001ad:	jbe	0x400179
<Block for 0x400179, 54 bytes>
0x400179:	mov	rdx, qword ptr [rbp - 0xe8]
0x400180:	mov	rax, qword ptr [rbp - 0x100]
0x400187:	add	rax, rdx
0x40018a:	movzx	eax, byte ptr [rax]
0x40018d:	lea	rcx, [rbp - 0x70]
0x400191:	mov	rdx, qword ptr [rbp - 0x100]
0x400198:	add	rdx, rcx
0x40019b:	mov	byte ptr [rdx], al
0x40019d:	add	qword ptr [rbp - 0x100], 1
0x4001a5:	cmp	qword ptr [rbp - 0x100], 0x63
0x4001ad:	jbe	0x400179
<Block for 0x4001af, 16 bytes>
0x4001af:	mov	byte ptr [rbp - 0xd], 0
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500008
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 8]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x4001d4
<Block for 0x4001d4, 2 bytes>
0x4001d4:	leave	
0x4001d5:	ret	
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500010
