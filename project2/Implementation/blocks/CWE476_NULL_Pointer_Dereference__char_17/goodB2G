<Block for 0x40004f, 21 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x10
0x40005b:	mov	dword ptr [rbp - 0x10], 0
0x400062:	jmp	0x400070
<Block for 0x400070, 6 bytes>
0x400070:	cmp	dword ptr [rbp - 0x10], 0
0x400074:	jle	0x400064
<Block for 0x400064, 18 bytes>
0x400064:	mov	qword ptr [rbp - 8], 0
0x40006c:	add	dword ptr [rbp - 0x10], 1
0x400070:	cmp	dword ptr [rbp - 0x10], 0
0x400074:	jle	0x400064
<Block for 0x400076, 9 bytes>
0x400076:	mov	dword ptr [rbp - 0xc], 0
0x40007d:	jmp	0x4000a9
<Block for 0x4000a9, 6 bytes>
0x4000a9:	cmp	dword ptr [rbp - 0xc], 0
0x4000ad:	jle	0x40007f
<Block for 0x40007f, 7 bytes>
0x40007f:	cmp	qword ptr [rbp - 8], 0
0x400084:	je	0x400099
<Block for 0x4000af, 4 bytes>
0x4000af:	nop	
0x4000b0:	nop	
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x400099, 12 bytes>
0x400099:	lea	rdi, [rip + 0x84]
0x4000a0:	call	0x500008
<Block for 0x400086, 17 bytes>
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	movzx	eax, byte ptr [rax]
0x40008d:	movsx	eax, al
0x400090:	mov	edi, eax
0x400092:	call	0x500000
<Block for 0x4000a5, 10 bytes>
0x4000a5:	add	dword ptr [rbp - 0xc], 1
0x4000a9:	cmp	dword ptr [rbp - 0xc], 0
0x4000ad:	jle	0x40007f
<Block for 0x400097, 2 bytes>
0x400097:	jmp	0x4000a5
