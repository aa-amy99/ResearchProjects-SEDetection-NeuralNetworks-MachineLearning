<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x78], 0
0x400022:	jmp	0x400056
<Block for 0x400056, 6 bytes>
0x400056:	cmp	dword ptr [rbp - 0x78], 0
0x40005a:	jle	0x400024
<Block for 0x400024, 34 bytes>
0x400024:	mov	dword ptr [rbp - 0x74], 5
0x40002b:	mov	edx, dword ptr [rbp - 0x74]
0x40002e:	lea	rax, [rbp - 0x70]
0x400032:	lea	rsi, [rip + 0xc2]
0x400039:	mov	rdi, rax
0x40003c:	mov	eax, 0
0x400041:	call	0x500000
<Block for 0x40005c, 16 bytes>
0x40005c:	nop	
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	xor	rax, qword ptr fs:[0x28]
0x40006a:	je	0x400071
<Block for 0x400046, 12 bytes>
0x400046:	lea	rax, [rbp - 0x70]
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500008
<Block for 0x400071, 2 bytes>
0x400071:	leave	
0x400072:	ret	
<Block for 0x40006c, 5 bytes>
0x40006c:	call	0x500010
<Block for 0x400052, 10 bytes>
0x400052:	add	dword ptr [rbp - 0x78], 1
0x400056:	cmp	dword ptr [rbp - 0x78], 0
0x40005a:	jle	0x400024
