<Block for 0x400064, 47 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	add	rsp, -0x80
0x400070:	mov	rax, qword ptr fs:[0x28]
0x400079:	mov	qword ptr [rbp - 8], rax
0x40007d:	xor	eax, eax
0x40007f:	mov	qword ptr [rbp - 0x78], 0
0x400087:	lea	rax, [rbp - 0x78]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x400000
<Block for 0x400093, 22 bytes>
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	edx, 0x63
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 16 bytes>
0x4000a9:	mov	byte ptr [rbp - 0xd], 0
0x4000ad:	lea	rax, [rbp - 0x70]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000b9, 22 bytes>
0x4000b9:	mov	rdx, rax
0x4000bc:	mov	rcx, qword ptr [rbp - 0x78]
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	rsi, rcx
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x500020
<Block for 0x4000cf, 16 bytes>
0x4000cf:	mov	byte ptr [rbp - 0xd], 0
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500028
<Block for 0x4000df, 12 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x78]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500030
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500038
