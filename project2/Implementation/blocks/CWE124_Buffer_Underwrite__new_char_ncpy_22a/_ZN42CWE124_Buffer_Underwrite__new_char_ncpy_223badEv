<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	dword ptr [rip + 0x1bf], 1
0x40002d:	mov	rax, qword ptr [rbp - 0x78]
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 26 bytes>
0x400039:	mov	qword ptr [rbp - 0x78], rax
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x43
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 28 bytes>
0x400053:	mov	byte ptr [rbp - 0xd], 0
0x400057:	lea	rcx, [rbp - 0x70]
0x40005b:	mov	rax, qword ptr [rbp - 0x78]
0x40005f:	mov	edx, 0x63
0x400064:	mov	rsi, rcx
0x400067:	mov	rdi, rax
0x40006a:	call	0x500010
<Block for 0x40006f, 23 bytes>
0x40006f:	mov	rax, qword ptr [rbp - 0x78]
0x400073:	add	rax, 0x63
0x400077:	mov	byte ptr [rax], 0
0x40007a:	mov	rax, qword ptr [rbp - 0x78]
0x40007e:	mov	rdi, rax
0x400081:	call	0x500018
<Block for 0x400086, 16 bytes>
0x400086:	nop	
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	xor	rax, qword ptr fs:[0x28]
0x400094:	je	0x40009b
<Block for 0x40009b, 2 bytes>
0x40009b:	leave	
0x40009c:	ret	
<Block for 0x400096, 5 bytes>
0x400096:	call	0x500020
