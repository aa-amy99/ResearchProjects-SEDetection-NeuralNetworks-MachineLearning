<Block for 0x40019a, 45 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	add	rsp, -0x80
0x4001a6:	mov	rax, qword ptr fs:[0x28]
0x4001af:	mov	qword ptr [rbp - 8], rax
0x4001b3:	xor	eax, eax
0x4001b5:	mov	qword ptr [rbp - 0x80], 0
0x4001bd:	mov	eax, dword ptr [rip + 0xffe3d]
0x4001c3:	test	eax, eax
0x4001c5:	je	0x4001fe
<Block for 0x4001fe, 22 bytes>
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x43
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500010
<Block for 0x4001c7, 10 bytes>
0x4001c7:	mov	edi, 0x64
0x4001cc:	call	0x500008
<Block for 0x400214, 28 bytes>
0x400214:	mov	byte ptr [rbp - 0xd], 0
0x400218:	lea	rcx, [rbp - 0x70]
0x40021c:	mov	rax, qword ptr [rbp - 0x80]
0x400220:	mov	edx, 0x63
0x400225:	mov	rsi, rcx
0x400228:	mov	rdi, rax
0x40022b:	call	0x500018
<Block for 0x4001d1, 26 bytes>
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	mov	rax, qword ptr [rbp - 0x78]
0x4001d9:	mov	edx, 0x63
0x4001de:	mov	esi, 0x41
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500010
<Block for 0x400230, 23 bytes>
0x400230:	mov	rax, qword ptr [rbp - 0x80]
0x400234:	add	rax, 0x63
0x400238:	mov	byte ptr [rax], 0
0x40023b:	mov	rax, qword ptr [rbp - 0x80]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500020
<Block for 0x4001eb, 41 bytes>
0x4001eb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ef:	add	rax, 0x63
0x4001f3:	mov	byte ptr [rax], 0
0x4001f6:	mov	rax, qword ptr [rbp - 0x78]
0x4001fa:	mov	qword ptr [rbp - 0x80], rax
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x43
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500010
<Block for 0x400247, 16 bytes>
0x400247:	nop	
0x400248:	mov	rax, qword ptr [rbp - 8]
0x40024c:	xor	rax, qword ptr fs:[0x28]
0x400255:	je	0x40025c
<Block for 0x40025c, 2 bytes>
0x40025c:	leave	
0x40025d:	ret	
<Block for 0x400257, 5 bytes>
0x400257:	call	0x500028
