<Block for 0x400094, 78 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0x40
0x4000a0:	mov	qword ptr [rbp - 0x38], rdi
0x4000a4:	mov	rax, qword ptr fs:[0x28]
0x4000ad:	mov	qword ptr [rbp - 8], rax
0x4000b1:	xor	eax, eax
0x4000b3:	mov	rax, qword ptr [rbp - 0x38]
0x4000b7:	mov	qword ptr [rbp - 0x18], rax
0x4000bb:	mov	rax, qword ptr [rbp - 0x18]
0x4000bf:	mov	rax, qword ptr [rax]
0x4000c2:	mov	qword ptr [rbp - 0x10], rax
0x4000c6:	lea	rdx, [rbp - 0x24]
0x4000ca:	mov	rax, qword ptr [rbp - 0x10]
0x4000ce:	lea	rsi, [rip + 0xf1]
0x4000d5:	mov	rdi, rax
0x4000d8:	mov	eax, 0
0x4000dd:	call	0x500000
<Block for 0x4000e2, 5 bytes>
0x4000e2:	cmp	eax, 1
0x4000e5:	jne	0x400111
<Block for 0x4000e7, 16 bytes>
0x4000e7:	mov	dword ptr [rbp - 0x1c], 0
0x4000ee:	mov	dword ptr [rbp - 0x20], 0
0x4000f5:	jmp	0x4000ff
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x4000ff, 8 bytes>
0x4000ff:	mov	eax, dword ptr [rbp - 0x24]
0x400102:	cmp	dword ptr [rbp - 0x20], eax
0x400105:	jl	0x4000f7
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500010
<Block for 0x4000f7, 16 bytes>
0x4000f7:	add	dword ptr [rbp - 0x1c], 1
0x4000fb:	add	dword ptr [rbp - 0x20], 1
0x4000ff:	mov	eax, dword ptr [rbp - 0x24]
0x400102:	cmp	dword ptr [rbp - 0x20], eax
0x400105:	jl	0x4000f7
<Block for 0x400107, 10 bytes>
0x400107:	mov	eax, dword ptr [rbp - 0x1c]
0x40010a:	mov	edi, eax
0x40010c:	call	0x500008
