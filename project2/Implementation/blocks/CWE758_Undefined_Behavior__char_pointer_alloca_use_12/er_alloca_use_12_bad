<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000ce
<Block for 0x4000ce, 54 bytes>
0x4000ce:	mov	eax, 0x10
0x4000d3:	sub	rax, 1
0x4000d7:	add	rax, 0x10
0x4000db:	mov	ecx, 0x10
0x4000e0:	mov	edx, 0
0x4000e5:	div	rcx
0x4000e8:	imul	rax, rax, 0x10
0x4000ec:	mov	rdx, rax
0x4000ef:	and	rdx, 0xfffffffffffff000
0x4000f6:	mov	rsi, rsp
0x4000f9:	sub	rsi, rdx
0x4000fc:	mov	rdx, rsi
0x4000ff:	cmp	rsp, rdx
0x400102:	je	0x400116
<Block for 0x40002d, 54 bytes>
0x40002d:	mov	eax, 0x10
0x400032:	sub	rax, 1
0x400036:	add	rax, 0x10
0x40003a:	mov	edi, 0x10
0x40003f:	mov	edx, 0
0x400044:	div	rdi
0x400047:	imul	rax, rax, 0x10
0x40004b:	mov	rdx, rax
0x40004e:	and	rdx, 0xfffffffffffff000
0x400055:	mov	rcx, rsp
0x400058:	sub	rcx, rdx
0x40005b:	mov	rdx, rcx
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400116, 26 bytes>
0x400116:	mov	rdx, rax
0x400119:	and	edx, 0xfff
0x40011f:	sub	rsp, rdx
0x400122:	mov	rdx, rax
0x400125:	and	edx, 0xfff
0x40012b:	test	rdx, rdx
0x40012e:	je	0x400140
<Block for 0x400104, 18 bytes>
0x400104:	sub	rsp, 0x1000
0x40010b:	or	qword ptr [rsp + 0xff8], 0
0x400114:	jmp	0x4000ff
<Block for 0x400075, 26 bytes>
0x400075:	mov	rdx, rax
0x400078:	and	edx, 0xfff
0x40007e:	sub	rsp, rdx
0x400081:	mov	rdx, rax
0x400084:	and	edx, 0xfff
0x40008a:	test	rdx, rdx
0x40008d:	je	0x40009f
<Block for 0x400063, 18 bytes>
0x400063:	sub	rsp, 0x1000
0x40006a:	or	qword ptr [rsp + 0xff8], 0
0x400073:	jmp	0x40005e
<Block for 0x400140, 64 bytes>
0x400140:	mov	rax, rsp
0x400143:	add	rax, 0xf
0x400147:	shr	rax, 4
0x40014b:	shl	rax, 4
0x40014f:	mov	qword ptr [rbp - 0x30], rax
0x400153:	lea	rax, [rip + 0x1ff]
0x40015a:	mov	qword ptr [rbp - 0x28], rax
0x40015e:	mov	rax, qword ptr [rbp - 0x30]
0x400162:	mov	rdx, qword ptr [rbp - 0x28]
0x400166:	mov	qword ptr [rax], rdx
0x400169:	mov	rax, qword ptr [rbp - 0x30]
0x40016d:	mov	rax, qword ptr [rax]
0x400170:	mov	qword ptr [rbp - 0x20], rax
0x400174:	mov	rax, qword ptr [rbp - 0x20]
0x400178:	mov	rdi, rax
0x40017b:	call	0x500008
<Block for 0x400130, 80 bytes>
0x400130:	and	eax, 0xfff
0x400135:	sub	rax, 8
0x400139:	add	rax, rsp
0x40013c:	or	qword ptr [rax], 0
0x400140:	mov	rax, rsp
0x400143:	add	rax, 0xf
0x400147:	shr	rax, 4
0x40014b:	shl	rax, 4
0x40014f:	mov	qword ptr [rbp - 0x30], rax
0x400153:	lea	rax, [rip + 0x1ff]
0x40015a:	mov	qword ptr [rbp - 0x28], rax
0x40015e:	mov	rax, qword ptr [rbp - 0x30]
0x400162:	mov	rdx, qword ptr [rbp - 0x28]
0x400166:	mov	qword ptr [rax], rdx
0x400169:	mov	rax, qword ptr [rbp - 0x30]
0x40016d:	mov	rax, qword ptr [rax]
0x400170:	mov	qword ptr [rbp - 0x20], rax
0x400174:	mov	rax, qword ptr [rbp - 0x20]
0x400178:	mov	rdi, rax
0x40017b:	call	0x500008
<Block for 0x4000ff, 5 bytes>
0x4000ff:	cmp	rsp, rdx
0x400102:	je	0x400116
<Block for 0x40009f, 42 bytes>
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x18], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x10]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
<Block for 0x40008f, 58 bytes>
0x40008f:	and	eax, 0xfff
0x400094:	sub	rax, 8
0x400098:	add	rax, rsp
0x40009b:	or	qword ptr [rax], 0
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x18], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x10]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
<Block for 0x40005e, 5 bytes>
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400180, 16 bytes>
0x400180:	nop	
0x400181:	mov	rax, qword ptr [rbp - 8]
0x400185:	xor	rax, qword ptr fs:[0x28]
0x40018e:	je	0x400195
<Block for 0x4000c9, 5 bytes>
0x4000c9:	jmp	0x400180
<Block for 0x400195, 2 bytes>
0x400195:	leave	
0x400196:	ret	
<Block for 0x400190, 5 bytes>
0x400190:	call	0x500010
