<Block for 0x40009c, 60 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	add	rsp, -0x80
0x4000a8:	mov	rax, qword ptr fs:[0x28]
0x4000b1:	mov	qword ptr [rbp - 8], rax
0x4000b5:	xor	eax, eax
0x4000b7:	mov	rax, qword ptr [rip + 0xfff7a]
0x4000be:	mov	qword ptr [rbp - 0x78], rax
0x4000c2:	lea	rax, [rbp - 0x70]
0x4000c6:	mov	edx, 0x63
0x4000cb:	mov	esi, 0x43
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500008
<Block for 0x4000d8, 16 bytes>
0x4000d8:	mov	byte ptr [rbp - 0xd], 0
0x4000dc:	lea	rax, [rbp - 0x70]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500010
<Block for 0x4000e8, 22 bytes>
0x4000e8:	mov	rdx, rax
0x4000eb:	mov	rcx, qword ptr [rbp - 0x78]
0x4000ef:	lea	rax, [rbp - 0x70]
0x4000f3:	mov	rsi, rcx
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500018
<Block for 0x4000fe, 16 bytes>
0x4000fe:	mov	byte ptr [rbp - 0xd], 0
0x400102:	lea	rax, [rbp - 0x70]
0x400106:	mov	rdi, rax
0x400109:	call	0x500020
<Block for 0x40010e, 7 bytes>
0x40010e:	cmp	qword ptr [rbp - 0x78], 0
0x400113:	je	0x400121
<Block for 0x400121, 16 bytes>
0x400121:	nop	
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	xor	rax, qword ptr fs:[0x28]
0x40012f:	je	0x400136
<Block for 0x400115, 12 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x78]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500028
<Block for 0x400136, 2 bytes>
0x400136:	leave	
0x400137:	ret	
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500030
