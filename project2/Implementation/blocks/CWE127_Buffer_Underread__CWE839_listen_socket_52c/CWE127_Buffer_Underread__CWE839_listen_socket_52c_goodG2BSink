<Block for 0x400081, 76 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x40
0x40008d:	mov	dword ptr [rbp - 0x34], edi
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	qword ptr [rbp - 0x30], 0
0x4000a7:	mov	qword ptr [rbp - 0x28], 0
0x4000af:	mov	qword ptr [rbp - 0x20], 0
0x4000b7:	mov	qword ptr [rbp - 0x18], 0
0x4000bf:	mov	qword ptr [rbp - 0x10], 0
0x4000c7:	cmp	dword ptr [rbp - 0x34], 9
0x4000cb:	jg	0x4000df
<Block for 0x4000cd, 16 bytes>
0x4000cd:	mov	eax, dword ptr [rbp - 0x34]
0x4000d0:	cdqe	
0x4000d2:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500000
<Block for 0x4000df, 12 bytes>
0x4000df:	lea	rdi, [rip + 0xaa]
0x4000e6:	call	0x500008
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x4000eb
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500010
