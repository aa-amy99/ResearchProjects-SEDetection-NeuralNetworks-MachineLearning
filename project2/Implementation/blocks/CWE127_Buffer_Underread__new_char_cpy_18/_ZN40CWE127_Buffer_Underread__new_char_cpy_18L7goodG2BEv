<Block for 0x4000d4, 56 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0xe0
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	mov	qword ptr [rbp - 0xe0], 0
0x4000fd:	nop	
0x4000fe:	endbr64	
0x400102:	mov	edi, 0x64
0x400107:	call	0x500000
<Block for 0x40010c, 32 bytes>
0x40010c:	mov	qword ptr [rbp - 0xd8], rax
0x400113:	mov	rax, qword ptr [rbp - 0xd8]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x41
0x400124:	mov	rdi, rax
0x400127:	call	0x500008
<Block for 0x40012c, 53 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0xd8]
0x400133:	add	rax, 0x63
0x400137:	mov	byte ptr [rax], 0
0x40013a:	mov	rax, qword ptr [rbp - 0xd8]
0x400141:	mov	qword ptr [rbp - 0xe0], rax
0x400148:	lea	rax, [rbp - 0xd0]
0x40014f:	mov	edx, 0xc7
0x400154:	mov	esi, 0x43
0x400159:	mov	rdi, rax
0x40015c:	call	0x500008
<Block for 0x400161, 29 bytes>
0x400161:	mov	byte ptr [rbp - 9], 0
0x400165:	mov	rdx, qword ptr [rbp - 0xe0]
0x40016c:	lea	rax, [rbp - 0xd0]
0x400173:	mov	rsi, rdx
0x400176:	mov	rdi, rax
0x400179:	call	0x500010
<Block for 0x40017e, 15 bytes>
0x40017e:	lea	rax, [rbp - 0xd0]
0x400185:	mov	rdi, rax
0x400188:	call	0x500018
<Block for 0x40018d, 16 bytes>
0x40018d:	nop	
0x40018e:	mov	rax, qword ptr [rbp - 8]
0x400192:	xor	rax, qword ptr fs:[0x28]
0x40019b:	je	0x4001a2
<Block for 0x4001a2, 2 bytes>
0x4001a2:	leave	
0x4001a3:	ret	
<Block for 0x40019d, 5 bytes>
0x40019d:	call	0x500020
