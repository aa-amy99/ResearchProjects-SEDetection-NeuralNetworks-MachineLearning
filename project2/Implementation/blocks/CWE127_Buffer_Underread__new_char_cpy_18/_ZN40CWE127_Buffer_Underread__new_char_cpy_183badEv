<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	nop	
0x40002a:	endbr64	
0x40002e:	mov	edi, 0x64
0x400033:	call	0x500000
<Block for 0x400038, 32 bytes>
0x400038:	mov	qword ptr [rbp - 0xd8], rax
0x40003f:	mov	rax, qword ptr [rbp - 0xd8]
0x400046:	mov	edx, 0x63
0x40004b:	mov	esi, 0x41
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400058, 57 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0xd8]
0x40005f:	add	rax, 0x63
0x400063:	mov	byte ptr [rax], 0
0x400066:	mov	rax, qword ptr [rbp - 0xd8]
0x40006d:	sub	rax, 8
0x400071:	mov	qword ptr [rbp - 0xe0], rax
0x400078:	lea	rax, [rbp - 0xd0]
0x40007f:	mov	edx, 0xc7
0x400084:	mov	esi, 0x43
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x400091, 29 bytes>
0x400091:	mov	byte ptr [rbp - 9], 0
0x400095:	mov	rdx, qword ptr [rbp - 0xe0]
0x40009c:	lea	rax, [rbp - 0xd0]
0x4000a3:	mov	rsi, rdx
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500010
<Block for 0x4000ae, 15 bytes>
0x4000ae:	lea	rax, [rbp - 0xd0]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x4000bd, 16 bytes>
0x4000bd:	nop	
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	xor	rax, qword ptr fs:[0x28]
0x4000cb:	je	0x4000d2
<Block for 0x4000d2, 2 bytes>
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x4000cd, 5 bytes>
0x4000cd:	call	0x500020
