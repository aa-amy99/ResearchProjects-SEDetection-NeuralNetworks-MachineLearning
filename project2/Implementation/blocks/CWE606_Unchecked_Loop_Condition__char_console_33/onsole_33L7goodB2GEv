<Block for 0x400326, 173 bytes>
0x400326:	endbr64	
0x40032a:	push	rbp
0x40032b:	mov	rbp, rsp
0x40032e:	sub	rsp, 0xa0
0x400335:	mov	rax, qword ptr fs:[0x28]
0x40033e:	mov	qword ptr [rbp - 8], rax
0x400342:	xor	eax, eax
0x400344:	lea	rax, [rbp - 0x90]
0x40034b:	mov	qword ptr [rbp - 0x88], rax
0x400352:	mov	qword ptr [rbp - 0x70], 0
0x40035a:	mov	qword ptr [rbp - 0x68], 0
0x400362:	mov	qword ptr [rbp - 0x60], 0
0x40036a:	mov	qword ptr [rbp - 0x58], 0
0x400372:	mov	qword ptr [rbp - 0x50], 0
0x40037a:	mov	qword ptr [rbp - 0x48], 0
0x400382:	mov	qword ptr [rbp - 0x40], 0
0x40038a:	mov	qword ptr [rbp - 0x38], 0
0x400392:	mov	qword ptr [rbp - 0x30], 0
0x40039a:	mov	qword ptr [rbp - 0x28], 0
0x4003a2:	mov	qword ptr [rbp - 0x20], 0
0x4003aa:	mov	qword ptr [rbp - 0x18], 0
0x4003b2:	mov	dword ptr [rbp - 0x10], 0
0x4003b9:	lea	rax, [rbp - 0x70]
0x4003bd:	mov	qword ptr [rbp - 0x90], rax
0x4003c4:	mov	rax, qword ptr [rbp - 0x90]
0x4003cb:	mov	rdi, rax
0x4003ce:	call	0x500000
<Block for 0x4003d3, 23 bytes>
0x4003d3:	mov	qword ptr [rbp - 0x80], rax
0x4003d7:	mov	eax, 0x64
0x4003dc:	sub	rax, qword ptr [rbp - 0x80]
0x4003e0:	cmp	rax, 1
0x4003e4:	jbe	0x40048a
<Block for 0x40048a, 45 bytes>
0x40048a:	mov	rax, qword ptr [rbp - 0x88]
0x400491:	mov	rax, qword ptr [rax]
0x400494:	mov	qword ptr [rbp - 0x78], rax
0x400498:	lea	rdx, [rbp - 0x9c]
0x40049f:	mov	rax, qword ptr [rbp - 0x78]
0x4004a3:	lea	rsi, [rip + 0x9e]
0x4004aa:	mov	rdi, rax
0x4004ad:	mov	eax, 0
0x4004b2:	call	0x500020
<Block for 0x4003ea, 47 bytes>
0x4003ea:	mov	rax, qword ptr [rip + 0xffc17]
0x4003f1:	mov	rdx, qword ptr [rbp - 0x80]
0x4003f5:	mov	ecx, 0x64
0x4003fa:	sub	ecx, edx
0x4003fc:	mov	edx, ecx
0x4003fe:	mov	esi, edx
0x400400:	mov	rcx, qword ptr [rbp - 0x90]
0x400407:	mov	rdx, qword ptr [rbp - 0x80]
0x40040b:	add	rcx, rdx
0x40040e:	mov	rdx, rax
0x400411:	mov	rdi, rcx
0x400414:	call	0x500010
<Block for 0x4004b7, 10 bytes>
0x4004b7:	cmp	eax, 1
0x4004ba:	sete	al
0x4004bd:	test	al, al
0x4004bf:	je	0x40050d
<Block for 0x400419, 10 bytes>
0x400419:	test	rax, rax
0x40041c:	setne	al
0x40041f:	test	al, al
0x400421:	je	0x40046d
<Block for 0x40050d, 16 bytes>
0x40050d:	nop	
0x40050e:	mov	rax, qword ptr [rbp - 8]
0x400512:	xor	rax, qword ptr fs:[0x28]
0x40051b:	je	0x400522
<Block for 0x4004c1, 13 bytes>
0x4004c1:	mov	eax, dword ptr [rbp - 0x9c]
0x4004c7:	cmp	eax, 0x270f
0x4004cc:	jg	0x40050d
<Block for 0x40046d, 12 bytes>
0x40046d:	lea	rdi, [rip + 0xc5]
0x400474:	call	0x500018
<Block for 0x400423, 15 bytes>
0x400423:	mov	rax, qword ptr [rbp - 0x90]
0x40042a:	mov	rdi, rax
0x40042d:	call	0x500000
<Block for 0x400522, 2 bytes>
0x400522:	leave	
0x400523:	ret	
<Block for 0x40051d, 5 bytes>
0x40051d:	call	0x500030
<Block for 0x4004ce, 34 bytes>
0x4004ce:	mov	dword ptr [rbp - 0x94], 0
0x4004d8:	mov	dword ptr [rbp - 0x98], 0
0x4004e2:	mov	eax, dword ptr [rbp - 0x9c]
0x4004e8:	cmp	dword ptr [rbp - 0x98], eax
0x4004ee:	jge	0x400500
<Block for 0x400479, 62 bytes>
0x400479:	mov	rdx, qword ptr [rbp - 0x90]
0x400480:	mov	rax, qword ptr [rbp - 0x80]
0x400484:	add	rax, rdx
0x400487:	mov	byte ptr [rax], 0
0x40048a:	mov	rax, qword ptr [rbp - 0x88]
0x400491:	mov	rax, qword ptr [rax]
0x400494:	mov	qword ptr [rbp - 0x78], rax
0x400498:	lea	rdx, [rbp - 0x9c]
0x40049f:	mov	rax, qword ptr [rbp - 0x78]
0x4004a3:	lea	rsi, [rip + 0x9e]
0x4004aa:	mov	rdi, rax
0x4004ad:	mov	eax, 0
0x4004b2:	call	0x500020
<Block for 0x400432, 11 bytes>
0x400432:	mov	qword ptr [rbp - 0x80], rax
0x400436:	cmp	qword ptr [rbp - 0x80], 0
0x40043b:	je	0x40048a
<Block for 0x4004f0, 16 bytes>
0x4004f0:	add	dword ptr [rbp - 0x94], 1
0x4004f7:	add	dword ptr [rbp - 0x98], 1
0x4004fe:	jmp	0x4004e2
<Block for 0x400500, 13 bytes>
0x400500:	mov	eax, dword ptr [rbp - 0x94]
0x400506:	mov	edi, eax
0x400508:	call	0x500028
<Block for 0x40043d, 25 bytes>
0x40043d:	mov	rax, qword ptr [rbp - 0x90]
0x400444:	mov	rdx, qword ptr [rbp - 0x80]
0x400448:	sub	rdx, 1
0x40044c:	add	rax, rdx
0x40044f:	movzx	eax, byte ptr [rax]
0x400452:	cmp	al, 0xa
0x400454:	jne	0x40048a
<Block for 0x4004e2, 14 bytes>
0x4004e2:	mov	eax, dword ptr [rbp - 0x9c]
0x4004e8:	cmp	dword ptr [rbp - 0x98], eax
0x4004ee:	jge	0x400500
<Block for 0x400456, 23 bytes>
0x400456:	mov	rax, qword ptr [rbp - 0x90]
0x40045d:	mov	rdx, qword ptr [rbp - 0x80]
0x400461:	sub	rdx, 1
0x400465:	add	rax, rdx
0x400468:	mov	byte ptr [rax], 0
0x40046b:	jmp	0x40048a
