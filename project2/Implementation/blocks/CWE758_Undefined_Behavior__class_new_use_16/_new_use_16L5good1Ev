<Block for 0x400053, 51 bytes>
0x400053:	endbr64	
0x400057:	push	rbp
0x400058:	mov	rbp, rsp
0x40005b:	sub	rsp, 0x20
0x40005f:	mov	rax, qword ptr fs:[0x28]
0x400068:	mov	qword ptr [rbp - 8], rax
0x40006c:	xor	eax, eax
0x40006e:	mov	dword ptr [rbp - 0x18], 1
0x400075:	mov	dword ptr [rbp - 0x14], 2
0x40007c:	mov	edi, 8
0x400081:	call	0x500000
<Block for 0x400086, 36 bytes>
0x400086:	mov	qword ptr [rbp - 0x20], rax
0x40008a:	mov	rax, qword ptr [rbp - 0x20]
0x40008e:	mov	rdx, qword ptr [rbp - 0x18]
0x400092:	mov	qword ptr [rax], rdx
0x400095:	mov	rax, qword ptr [rbp - 0x20]
0x400099:	mov	rax, qword ptr [rax]
0x40009c:	mov	qword ptr [rbp - 0x10], rax
0x4000a0:	mov	eax, dword ptr [rbp - 0x10]
0x4000a3:	mov	edi, eax
0x4000a5:	call	0x500010
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	eax, dword ptr [rbp - 0xc]
0x4000ad:	mov	edi, eax
0x4000af:	call	0x500010
<Block for 0x4000b4, 9 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 0x20]
0x4000b8:	test	rax, rax
0x4000bb:	je	0x4000ca
<Block for 0x4000ca, 17 bytes>
0x4000ca:	nop	
0x4000cb:	nop	
0x4000cc:	mov	rax, qword ptr [rbp - 8]
0x4000d0:	xor	rax, qword ptr fs:[0x28]
0x4000d9:	je	0x4000e0
<Block for 0x4000bd, 13 bytes>
0x4000bd:	mov	esi, 8
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
<Block for 0x4000e0, 2 bytes>
0x4000e0:	leave	
0x4000e1:	ret	
<Block for 0x4000db, 5 bytes>
0x4000db:	call	0x500018
