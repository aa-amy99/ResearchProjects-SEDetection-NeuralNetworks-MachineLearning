<Block for 0x400122, 46 bytes>
0x400122:	endbr64	
0x400126:	push	rbp
0x400127:	mov	rbp, rsp
0x40012a:	sub	rsp, 0x40
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400144:	lea	rax, [rbp - 0x34]
0x400148:	mov	rdi, rax
0x40014b:	call	0x400109
<Block for 0x400150, 48 bytes>
0x400150:	mov	qword ptr [rbp - 0x30], 0
0x400158:	mov	qword ptr [rbp - 0x28], 0
0x400160:	mov	qword ptr [rbp - 0x20], 0
0x400168:	mov	qword ptr [rbp - 0x18], 0
0x400170:	mov	qword ptr [rbp - 0x10], 0
0x400178:	mov	eax, dword ptr [rbp - 0x34]
0x40017b:	cmp	eax, 9
0x40017e:	jg	0x400192
<Block for 0x400180, 16 bytes>
0x400180:	mov	eax, dword ptr [rbp - 0x34]
0x400183:	cdqe	
0x400185:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400189:	mov	edi, eax
0x40018b:	call	0x500008
<Block for 0x400192, 12 bytes>
0x400192:	lea	rdi, [rip + 0x157]
0x400199:	call	0x500010
<Block for 0x400190, 2 bytes>
0x400190:	jmp	0x4001ac
<Block for 0x40019e, 2 bytes>
0x40019e:	jmp	0x4001ac
<Block for 0x4001ac, 15 bytes>
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500020
