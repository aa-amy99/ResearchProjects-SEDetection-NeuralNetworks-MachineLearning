<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x40
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40008b:	lea	rax, [rbp - 0x34]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 48 bytes>
0x400097:	mov	qword ptr [rbp - 0x30], 0
0x40009f:	mov	qword ptr [rbp - 0x28], 0
0x4000a7:	mov	qword ptr [rbp - 0x20], 0
0x4000af:	mov	qword ptr [rbp - 0x18], 0
0x4000b7:	mov	qword ptr [rbp - 0x10], 0
0x4000bf:	mov	eax, dword ptr [rbp - 0x34]
0x4000c2:	cmp	eax, 9
0x4000c5:	jg	0x4000d9
<Block for 0x4000c7, 16 bytes>
0x4000c7:	mov	eax, dword ptr [rbp - 0x34]
0x4000ca:	cdqe	
0x4000cc:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000d0:	mov	edi, eax
0x4000d2:	call	0x500008
<Block for 0x4000d9, 12 bytes>
0x4000d9:	lea	rdi, [rip + 0x210]
0x4000e0:	call	0x500010
<Block for 0x4000d7, 2 bytes>
0x4000d7:	jmp	0x4000f3
<Block for 0x4000e5, 2 bytes>
0x4000e5:	jmp	0x4000f3
<Block for 0x4000f3, 15 bytes>
0x4000f3:	mov	rax, qword ptr [rbp - 8]
0x4000f7:	xor	rax, qword ptr fs:[0x28]
0x400100:	je	0x400107
<Block for 0x400107, 2 bytes>
0x400107:	leave	
0x400108:	ret	
<Block for 0x400102, 5 bytes>
0x400102:	call	0x500020
