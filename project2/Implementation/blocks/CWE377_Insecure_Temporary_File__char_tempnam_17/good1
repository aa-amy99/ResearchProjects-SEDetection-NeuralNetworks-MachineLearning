<Block for 0x400099, 36 bytes>
0x400099:	endbr64	
0x40009d:	push	rbp
0x40009e:	mov	rbp, rsp
0x4000a1:	sub	rsp, 0x30
0x4000a5:	mov	rax, qword ptr fs:[0x28]
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	xor	eax, eax
0x4000b4:	mov	dword ptr [rbp - 0x28], 0
0x4000bb:	jmp	0x400114
<Block for 0x400114, 6 bytes>
0x400114:	cmp	dword ptr [rbp - 0x28], 0
0x400118:	jle	0x4000bd
<Block for 0x4000bd, 40 bytes>
0x4000bd:	movabs	rax, 0x6c69662f706d742f
0x4000c7:	movabs	rdx, 0x58585858585865
0x4000d1:	mov	qword ptr [rbp - 0x20], rax
0x4000d5:	mov	qword ptr [rbp - 0x18], rdx
0x4000d9:	lea	rax, [rbp - 0x20]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500030
<Block for 0x40011a, 16 bytes>
0x40011a:	nop	
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	xor	rax, qword ptr fs:[0x28]
0x400128:	je	0x40012f
<Block for 0x4000e5, 15 bytes>
0x4000e5:	mov	dword ptr [rbp - 0x24], eax
0x4000e8:	lea	rax, [rbp - 0x20]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500010
<Block for 0x40012f, 2 bytes>
0x40012f:	leave	
0x400130:	ret	
<Block for 0x40012a, 5 bytes>
0x40012a:	call	0x500038
<Block for 0x4000f4, 6 bytes>
0x4000f4:	cmp	dword ptr [rbp - 0x24], -1
0x4000f8:	je	0x400110
<Block for 0x400110, 10 bytes>
0x400110:	add	dword ptr [rbp - 0x28], 1
0x400114:	cmp	dword ptr [rbp - 0x28], 0
0x400118:	jle	0x4000bd
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x47]
0x400101:	call	0x500010
<Block for 0x400106, 10 bytes>
0x400106:	mov	eax, dword ptr [rbp - 0x24]
0x400109:	mov	edi, eax
0x40010b:	call	0x500020
