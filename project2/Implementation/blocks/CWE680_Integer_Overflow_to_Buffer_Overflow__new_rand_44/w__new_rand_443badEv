<Block for 0x400082, 36 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	push	rbx
0x40008b:	sub	rsp, 0x18
0x40008f:	lea	rax, [rip - 0x96]
0x400096:	mov	qword ptr [rbp - 0x18], rax
0x40009a:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a1:	call	0x500018
<Block for 0x4000a6, 7 bytes>
0x4000a6:	and	eax, 1
0x4000a9:	test	eax, eax
0x4000ab:	je	0x4000ca
<Block for 0x4000ca, 5 bytes>
0x4000ca:	call	0x500018
<Block for 0x4000ad, 5 bytes>
0x4000ad:	call	0x500018
<Block for 0x4000cf, 10 bytes>
0x4000cf:	shl	eax, 0x1e
0x4000d2:	mov	ebx, eax
0x4000d4:	call	0x500018
<Block for 0x4000b2, 10 bytes>
0x4000b2:	shl	eax, 0x1e
0x4000b5:	mov	ebx, eax
0x4000b7:	call	0x500018
<Block for 0x4000d9, 10 bytes>
0x4000d9:	shl	eax, 0xf
0x4000dc:	xor	ebx, eax
0x4000de:	call	0x500018
<Block for 0x4000bc, 10 bytes>
0x4000bc:	shl	eax, 0xf
0x4000bf:	xor	ebx, eax
0x4000c1:	call	0x500018
<Block for 0x4000e3, 18 bytes>
0x4000e3:	xor	eax, ebx
0x4000e5:	not	eax
0x4000e7:	mov	dword ptr [rbp - 0x1c], eax
0x4000ea:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ed:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f1:	mov	edi, eax
0x4000f3:	call	rdx
<Block for 0x4000c6, 4 bytes>
0x4000c6:	xor	eax, ebx
0x4000c8:	jmp	0x4000e7
<Block for 0x4000f5, 8 bytes>
0x4000f5:	nop	
0x4000f6:	add	rsp, 0x18
0x4000fa:	pop	rbx
0x4000fb:	pop	rbp
0x4000fc:	ret	
<Block for 0x4000e7, 14 bytes>
0x4000e7:	mov	dword ptr [rbp - 0x1c], eax
0x4000ea:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ed:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f1:	mov	edi, eax
0x4000f3:	call	rdx
