<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x108
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x100]
0x400026:	mov	rdi, rax
0x400029:	call	0x4004a0
<Block for 0x40002e, 25 bytes>
0x40002e:	lea	rax, [rbp - 0xc0]
0x400035:	mov	edx, 0x31
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500000
<Block for 0x400047, 29 bytes>
0x400047:	mov	byte ptr [rbp - 0x8f], 0
0x40004e:	lea	rax, [rbp - 0x80]
0x400052:	mov	edx, 0x63
0x400057:	mov	esi, 0x41
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500000
<Block for 0x400064, 33 bytes>
0x400064:	mov	byte ptr [rbp - 0x1d], 0
0x400068:	lea	rax, [rbp - 0xc0]
0x40006f:	mov	qword ptr [rbp - 0x110], rax
0x400076:	lea	rax, [rbp - 0x100]
0x40007d:	mov	rdi, rax
0x400080:	call	0x400632
<Block for 0x400085, 32 bytes>
0x400085:	mov	qword ptr [rbp - 0x108], rax
0x40008c:	lea	rdx, [rbp - 0x108]
0x400093:	lea	rax, [rbp - 0xe0]
0x40009a:	mov	rsi, rdx
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x400682
<Block for 0x4000a5, 37 bytes>
0x4000a5:	lea	rdx, [rbp - 0x110]
0x4000ac:	mov	rsi, qword ptr [rbp - 0xe0]
0x4000b3:	lea	rax, [rbp - 0x100]
0x4000ba:	mov	rcx, rdx
0x4000bd:	mov	edx, 1
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x4006b0
<Block for 0x4000ca, 15 bytes>
0x4000ca:	lea	rax, [rbp - 0x100]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x400632
<Block for 0x4000d9, 32 bytes>
0x4000d9:	mov	qword ptr [rbp - 0x108], rax
0x4000e0:	lea	rdx, [rbp - 0x108]
0x4000e7:	lea	rax, [rbp - 0xe0]
0x4000ee:	mov	rsi, rdx
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x400682
<Block for 0x4000f9, 37 bytes>
0x4000f9:	lea	rdx, [rbp - 0x110]
0x400100:	mov	rsi, qword ptr [rbp - 0xe0]
0x400107:	lea	rax, [rbp - 0x100]
0x40010e:	mov	rcx, rdx
0x400111:	mov	edx, 1
0x400116:	mov	rdi, rax
0x400119:	call	0x4006b0
<Block for 0x40011e, 15 bytes>
0x40011e:	lea	rax, [rbp - 0x100]
0x400125:	mov	rdi, rax
0x400128:	call	0x400632
<Block for 0x40012d, 32 bytes>
0x40012d:	mov	qword ptr [rbp - 0x108], rax
0x400134:	lea	rdx, [rbp - 0x108]
0x40013b:	lea	rax, [rbp - 0xe0]
0x400142:	mov	rsi, rdx
0x400145:	mov	rdi, rax
0x400148:	call	0x400682
<Block for 0x40014d, 37 bytes>
0x40014d:	lea	rdx, [rbp - 0x110]
0x400154:	mov	rsi, qword ptr [rbp - 0xe0]
0x40015b:	lea	rax, [rbp - 0x100]
0x400162:	mov	rcx, rdx
0x400165:	mov	edx, 1
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4006b0
<Block for 0x400172, 25 bytes>
0x400172:	lea	rdx, [rbp - 0x100]
0x400179:	lea	rax, [rbp - 0xe0]
0x400180:	mov	rsi, rdx
0x400183:	mov	rdi, rax
0x400186:	call	0x400776
<Block for 0x40018b, 15 bytes>
0x40018b:	lea	rax, [rbp - 0xe0]
0x400192:	mov	rdi, rax
0x400195:	call	0x500008
<Block for 0x40019a, 15 bytes>
0x40019a:	lea	rax, [rbp - 0xe0]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4005ea
<Block for 0x4001a9, 15 bytes>
0x4001a9:	lea	rax, [rbp - 0x100]
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x4005ea
<Block for 0x4001b8, 16 bytes>
0x4001b8:	nop	
0x4001b9:	mov	rax, qword ptr [rbp - 0x18]
0x4001bd:	xor	rax, qword ptr fs:[0x28]
0x4001c6:	je	0x400208
<Block for 0x400208, 10 bytes>
0x400208:	add	rsp, 0x108
0x40020f:	pop	rbx
0x400210:	pop	rbp
0x400211:	ret	
<Block for 0x4001c8, 2 bytes>
0x4001c8:	jmp	0x400203
<Block for 0x400203, 5 bytes>
0x400203:	call	0x500018
