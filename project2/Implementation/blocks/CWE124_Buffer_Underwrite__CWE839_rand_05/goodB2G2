<Block for 0x400226, 45 bytes>
0x400226:	endbr64	
0x40022a:	push	rbp
0x40022b:	mov	rbp, rsp
0x40022e:	push	rbx
0x40022f:	sub	rsp, 0x48
0x400233:	mov	rax, qword ptr fs:[0x28]
0x40023c:	mov	qword ptr [rbp - 0x18], rax
0x400240:	xor	eax, eax
0x400242:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400249:	mov	eax, dword ptr [rip + 0x2a9]
0x40024f:	test	eax, eax
0x400251:	je	0x40029c
<Block for 0x40029c, 10 bytes>
0x40029c:	mov	eax, dword ptr [rip + 0x256]
0x4002a2:	test	eax, eax
0x4002a4:	je	0x40031a
<Block for 0x400253, 5 bytes>
0x400253:	call	0x500000
<Block for 0x40031a, 16 bytes>
0x40031a:	nop	
0x40031b:	mov	rax, qword ptr [rbp - 0x18]
0x40031f:	xor	rax, qword ptr fs:[0x28]
0x400328:	je	0x40032f
<Block for 0x4002a6, 46 bytes>
0x4002a6:	mov	qword ptr [rbp - 0x40], 0
0x4002ae:	mov	qword ptr [rbp - 0x38], 0
0x4002b6:	mov	qword ptr [rbp - 0x30], 0
0x4002be:	mov	qword ptr [rbp - 0x28], 0
0x4002c6:	mov	qword ptr [rbp - 0x20], 0
0x4002ce:	cmp	dword ptr [rbp - 0x48], 0
0x4002d2:	js	0x40030c
<Block for 0x400258, 7 bytes>
0x400258:	and	eax, 1
0x40025b:	test	eax, eax
0x40025d:	je	0x40027c
<Block for 0x40032f, 7 bytes>
0x40032f:	add	rsp, 0x48
0x400333:	pop	rbx
0x400334:	pop	rbp
0x400335:	ret	
<Block for 0x40032a, 5 bytes>
0x40032a:	call	0x500018
<Block for 0x40030c, 12 bytes>
0x40030c:	lea	rdi, [rip + 0x225]
0x400313:	call	0x500010
<Block for 0x4002d4, 6 bytes>
0x4002d4:	cmp	dword ptr [rbp - 0x48], 9
0x4002d8:	jg	0x40030c
<Block for 0x40027c, 5 bytes>
0x40027c:	call	0x500000
<Block for 0x40025f, 5 bytes>
0x40025f:	call	0x500000
<Block for 0x400318, 2 bytes>
0x400318:	jmp	0x40031a
<Block for 0x4002da, 22 bytes>
0x4002da:	mov	eax, dword ptr [rbp - 0x48]
0x4002dd:	cdqe	
0x4002df:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002e7:	mov	dword ptr [rbp - 0x44], 0
0x4002ee:	jmp	0x400304
<Block for 0x400281, 10 bytes>
0x400281:	shl	eax, 0x1e
0x400284:	mov	ebx, eax
0x400286:	call	0x500000
<Block for 0x400264, 10 bytes>
0x400264:	shl	eax, 0x1e
0x400267:	mov	ebx, eax
0x400269:	call	0x500000
<Block for 0x400304, 6 bytes>
0x400304:	cmp	dword ptr [rbp - 0x44], 9
0x400308:	jle	0x4002f0
<Block for 0x40028b, 10 bytes>
0x40028b:	shl	eax, 0xf
0x40028e:	xor	ebx, eax
0x400290:	call	0x500000
<Block for 0x40026e, 10 bytes>
0x40026e:	shl	eax, 0xf
0x400271:	xor	ebx, eax
0x400273:	call	0x500000
<Block for 0x4002f0, 16 bytes>
0x4002f0:	mov	eax, dword ptr [rbp - 0x44]
0x4002f3:	cdqe	
0x4002f5:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002f9:	mov	edi, eax
0x4002fb:	call	0x500008
<Block for 0x40030a, 2 bytes>
0x40030a:	jmp	0x40031a
<Block for 0x400295, 17 bytes>
0x400295:	xor	eax, ebx
0x400297:	not	eax
0x400299:	mov	dword ptr [rbp - 0x48], eax
0x40029c:	mov	eax, dword ptr [rip + 0x256]
0x4002a2:	test	eax, eax
0x4002a4:	je	0x40031a
<Block for 0x400278, 4 bytes>
0x400278:	xor	eax, ebx
0x40027a:	jmp	0x400299
<Block for 0x400300, 10 bytes>
0x400300:	add	dword ptr [rbp - 0x44], 1
0x400304:	cmp	dword ptr [rbp - 0x44], 9
0x400308:	jle	0x4002f0
<Block for 0x400299, 13 bytes>
0x400299:	mov	dword ptr [rbp - 0x48], eax
0x40029c:	mov	eax, dword ptr [rip + 0x256]
0x4002a2:	test	eax, eax
0x4002a4:	je	0x40031a
