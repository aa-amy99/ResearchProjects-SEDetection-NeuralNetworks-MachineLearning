<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003c6
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	edi, 0x32
0x400035:	call	0x500000
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	qword ptr [rbp - 0x60], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x60]
0x400042:	mov	edx, 0x31
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 23 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x60]
0x400058:	add	rax, 0x31
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	lea	rax, [rbp - 0x50]
0x400063:	mov	rdi, rax
0x400066:	call	0x40055a
<Block for 0x40006b, 23 bytes>
0x40006b:	mov	qword ptr [rbp - 0x58], rax
0x40006f:	lea	rdx, [rbp - 0x58]
0x400073:	lea	rax, [rbp - 0x30]
0x400077:	mov	rsi, rdx
0x40007a:	mov	rdi, rax
0x40007d:	call	0x4005aa
<Block for 0x400082, 28 bytes>
0x400082:	lea	rdx, [rbp - 0x60]
0x400086:	mov	rsi, qword ptr [rbp - 0x30]
0x40008a:	lea	rax, [rbp - 0x50]
0x40008e:	mov	rcx, rdx
0x400091:	mov	edx, 1
0x400096:	mov	rdi, rax
0x400099:	call	0x4005d8
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rax, [rbp - 0x50]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x40055a
<Block for 0x4000aa, 23 bytes>
0x4000aa:	mov	qword ptr [rbp - 0x58], rax
0x4000ae:	lea	rdx, [rbp - 0x58]
0x4000b2:	lea	rax, [rbp - 0x30]
0x4000b6:	mov	rsi, rdx
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x4005aa
<Block for 0x4000c1, 28 bytes>
0x4000c1:	lea	rdx, [rbp - 0x60]
0x4000c5:	mov	rsi, qword ptr [rbp - 0x30]
0x4000c9:	lea	rax, [rbp - 0x50]
0x4000cd:	mov	rcx, rdx
0x4000d0:	mov	edx, 1
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x4005d8
<Block for 0x4000dd, 12 bytes>
0x4000dd:	lea	rax, [rbp - 0x50]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x40055a
<Block for 0x4000e9, 23 bytes>
0x4000e9:	mov	qword ptr [rbp - 0x58], rax
0x4000ed:	lea	rdx, [rbp - 0x58]
0x4000f1:	lea	rax, [rbp - 0x30]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x4005aa
<Block for 0x400100, 28 bytes>
0x400100:	lea	rdx, [rbp - 0x60]
0x400104:	mov	rsi, qword ptr [rbp - 0x30]
0x400108:	lea	rax, [rbp - 0x50]
0x40010c:	mov	rcx, rdx
0x40010f:	mov	edx, 1
0x400114:	mov	rdi, rax
0x400117:	call	0x4005d8
<Block for 0x40011c, 19 bytes>
0x40011c:	lea	rdx, [rbp - 0x50]
0x400120:	lea	rax, [rbp - 0x30]
0x400124:	mov	rsi, rdx
0x400127:	mov	rdi, rax
0x40012a:	call	0x40069e
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rax, [rbp - 0x30]
0x400133:	mov	rdi, rax
0x400136:	call	0x500010
<Block for 0x40013b, 12 bytes>
0x40013b:	lea	rax, [rbp - 0x30]
0x40013f:	mov	rdi, rax
0x400142:	call	0x400512
<Block for 0x400147, 12 bytes>
0x400147:	lea	rax, [rbp - 0x50]
0x40014b:	mov	rdi, rax
0x40014e:	call	0x400512
<Block for 0x400153, 16 bytes>
0x400153:	nop	
0x400154:	mov	rax, qword ptr [rbp - 0x18]
0x400158:	xor	rax, qword ptr fs:[0x28]
0x400161:	je	0x40019d
<Block for 0x40019d, 7 bytes>
0x40019d:	add	rsp, 0x58
0x4001a1:	pop	rbx
0x4001a2:	pop	rbp
0x4001a3:	ret	
<Block for 0x400163, 2 bytes>
0x400163:	jmp	0x400198
<Block for 0x400198, 5 bytes>
0x400198:	call	0x500020
