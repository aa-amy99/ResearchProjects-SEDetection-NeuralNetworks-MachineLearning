<Block for 0x400000, 74 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	rax, qword ptr [rax + 0x10]
0x400030:	mov	qword ptr [rbp - 0x78], rax
0x400034:	lea	rax, [rbp - 0x70]
0x400038:	mov	edx, 0x63
0x40003d:	mov	esi, 0x43
0x400042:	mov	rdi, rax
0x400045:	call	0x500000
<Block for 0x40004a, 19 bytes>
0x40004a:	mov	byte ptr [rbp - 0xd], 0
0x40004e:	mov	qword ptr [rbp - 0x80], 0
0x400056:	cmp	qword ptr [rbp - 0x80], 0x63
0x40005b:	ja	0x40007f
<Block for 0x40005d, 34 bytes>
0x40005d:	mov	rdx, qword ptr [rbp - 0x78]
0x400061:	mov	rax, qword ptr [rbp - 0x80]
0x400065:	add	rax, rdx
0x400068:	movzx	eax, byte ptr [rax]
0x40006b:	lea	rcx, [rbp - 0x70]
0x40006f:	mov	rdx, qword ptr [rbp - 0x80]
0x400073:	add	rdx, rcx
0x400076:	mov	byte ptr [rdx], al
0x400078:	add	qword ptr [rbp - 0x80], 1
0x40007d:	jmp	0x400056
<Block for 0x40007f, 16 bytes>
0x40007f:	mov	byte ptr [rbp - 0xd], 0
0x400083:	lea	rax, [rbp - 0x70]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500008
<Block for 0x400056, 7 bytes>
0x400056:	cmp	qword ptr [rbp - 0x80], 0x63
0x40005b:	ja	0x40007f
<Block for 0x40008f, 16 bytes>
0x40008f:	nop	
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	xor	rax, qword ptr fs:[0x28]
0x40009d:	je	0x4000a4
<Block for 0x4000a4, 2 bytes>
0x4000a4:	leave	
0x4000a5:	ret	
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500010
