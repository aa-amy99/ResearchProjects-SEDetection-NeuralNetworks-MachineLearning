<Block for 0x4000dc, 80 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x20
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	qword ptr [rbp - 0x18], 0
0x4000ff:	lea	rax, [rip + 0xfff22]
0x400106:	mov	qword ptr [rbp - 0x20], rax
0x40010a:	lea	rax, [rbp - 0x20]
0x40010e:	mov	qword ptr [rbp - 0x10], rax
0x400112:	mov	rax, qword ptr [rbp - 0x10]
0x400116:	mov	rax, qword ptr [rax]
0x400119:	mov	rcx, qword ptr [rax]
0x40011c:	mov	rdx, qword ptr [rbp - 0x18]
0x400120:	mov	rax, qword ptr [rbp - 0x10]
0x400124:	mov	rsi, rdx
0x400127:	mov	rdi, rax
0x40012a:	call	rcx
<Block for 0x40012c, 16 bytes>
0x40012c:	nop	
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	xor	rax, qword ptr fs:[0x28]
0x40013a:	je	0x400141
<Block for 0x400141, 2 bytes>
0x400141:	leave	
0x400142:	ret	
<Block for 0x40013c, 5 bytes>
0x40013c:	call	0x500008
