<Block for 0x400070, 60 bytes>
0x400070:	endbr64	
0x400074:	push	rbp
0x400075:	mov	rbp, rsp
0x400078:	add	rsp, -0x80
0x40007c:	mov	rax, qword ptr fs:[0x28]
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	xor	eax, eax
0x40008b:	mov	rax, qword ptr [rip + 0xfff96]
0x400092:	mov	qword ptr [rbp - 0x80], rax
0x400096:	lea	rax, [rbp - 0x70]
0x40009a:	mov	edx, 0x63
0x40009f:	mov	esi, 0x41
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500010
<Block for 0x4000ac, 25 bytes>
0x4000ac:	mov	byte ptr [rbp - 0xd], 0
0x4000b0:	lea	rax, [rbp - 0x70]
0x4000b4:	mov	qword ptr [rbp - 0x78], rax
0x4000b8:	mov	rax, qword ptr [rbp - 0x78]
0x4000bc:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	rdx
<Block for 0x4000c5, 16 bytes>
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500018
