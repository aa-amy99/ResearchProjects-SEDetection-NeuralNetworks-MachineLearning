<Block for 0x4000dd, 55 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0x130
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	lea	rax, [rbp - 0x120]
0x400102:	mov	edx, 0x31
0x400107:	mov	esi, 0x41
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500000
<Block for 0x400114, 32 bytes>
0x400114:	mov	byte ptr [rbp - 0xef], 0
0x40011b:	lea	rax, [rbp - 0xe0]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x41
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500000
<Block for 0x400134, 14 bytes>
0x400134:	mov	byte ptr [rbp - 0x7d], 0
0x400138:	mov	eax, 0
0x40013d:	call	0x500030
<Block for 0x400142, 4 bytes>
0x400142:	test	eax, eax
0x400144:	je	0x400154
<Block for 0x400154, 36 bytes>
0x400154:	lea	rax, [rbp - 0xe0]
0x40015b:	mov	qword ptr [rbp - 0x128], rax
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500000
<Block for 0x400146, 12 bytes>
0x400146:	lea	rdi, [rip + 0x177]
0x40014d:	call	0x500020
<Block for 0x400178, 16 bytes>
0x400178:	mov	byte ptr [rbp - 0xd], 0
0x40017c:	lea	rax, [rbp - 0x70]
0x400180:	mov	rdi, rax
0x400183:	call	0x500010
<Block for 0x400152, 2 bytes>
0x400152:	jmp	0x400162
<Block for 0x400188, 25 bytes>
0x400188:	mov	rdx, rax
0x40018b:	mov	rcx, qword ptr [rbp - 0x128]
0x400192:	lea	rax, [rbp - 0x70]
0x400196:	mov	rsi, rcx
0x400199:	mov	rdi, rax
0x40019c:	call	0x500018
<Block for 0x400162, 22 bytes>
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500000
<Block for 0x4001a1, 16 bytes>
0x4001a1:	mov	byte ptr [rbp - 0xd], 0
0x4001a5:	lea	rax, [rbp - 0x70]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500020
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500028
