<Block for 0x4001a4, 40 bytes>
0x4001a4:	endbr64	
0x4001a8:	push	rbp
0x4001a9:	mov	rbp, rsp
0x4001ac:	push	rbx
0x4001ad:	sub	rsp, 0x58
0x4001b1:	mov	rax, qword ptr fs:[0x28]
0x4001ba:	mov	qword ptr [rbp - 0x18], rax
0x4001be:	xor	eax, eax
0x4001c0:	lea	rax, [rbp - 0x50]
0x4001c4:	mov	rdi, rax
0x4001c7:	call	0x4003c6
<Block for 0x4001cc, 18 bytes>
0x4001cc:	mov	qword ptr [rbp - 0x60], 0
0x4001d4:	mov	edi, 0x64
0x4001d9:	call	0x500000
<Block for 0x4001de, 26 bytes>
0x4001de:	mov	qword ptr [rbp - 0x60], rax
0x4001e2:	mov	rax, qword ptr [rbp - 0x60]
0x4001e6:	mov	edx, 0x63
0x4001eb:	mov	esi, 0x41
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500008
<Block for 0x4001f8, 23 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0x60]
0x4001fc:	add	rax, 0x63
0x400200:	mov	byte ptr [rax], 0
0x400203:	lea	rax, [rbp - 0x50]
0x400207:	mov	rdi, rax
0x40020a:	call	0x40055a
<Block for 0x40020f, 23 bytes>
0x40020f:	mov	qword ptr [rbp - 0x58], rax
0x400213:	lea	rdx, [rbp - 0x58]
0x400217:	lea	rax, [rbp - 0x30]
0x40021b:	mov	rsi, rdx
0x40021e:	mov	rdi, rax
0x400221:	call	0x4005aa
<Block for 0x400226, 28 bytes>
0x400226:	lea	rdx, [rbp - 0x60]
0x40022a:	mov	rsi, qword ptr [rbp - 0x30]
0x40022e:	lea	rax, [rbp - 0x50]
0x400232:	mov	rcx, rdx
0x400235:	mov	edx, 1
0x40023a:	mov	rdi, rax
0x40023d:	call	0x4005d8
<Block for 0x400242, 12 bytes>
0x400242:	lea	rax, [rbp - 0x50]
0x400246:	mov	rdi, rax
0x400249:	call	0x40055a
<Block for 0x40024e, 23 bytes>
0x40024e:	mov	qword ptr [rbp - 0x58], rax
0x400252:	lea	rdx, [rbp - 0x58]
0x400256:	lea	rax, [rbp - 0x30]
0x40025a:	mov	rsi, rdx
0x40025d:	mov	rdi, rax
0x400260:	call	0x4005aa
<Block for 0x400265, 28 bytes>
0x400265:	lea	rdx, [rbp - 0x60]
0x400269:	mov	rsi, qword ptr [rbp - 0x30]
0x40026d:	lea	rax, [rbp - 0x50]
0x400271:	mov	rcx, rdx
0x400274:	mov	edx, 1
0x400279:	mov	rdi, rax
0x40027c:	call	0x4005d8
<Block for 0x400281, 12 bytes>
0x400281:	lea	rax, [rbp - 0x50]
0x400285:	mov	rdi, rax
0x400288:	call	0x40055a
<Block for 0x40028d, 23 bytes>
0x40028d:	mov	qword ptr [rbp - 0x58], rax
0x400291:	lea	rdx, [rbp - 0x58]
0x400295:	lea	rax, [rbp - 0x30]
0x400299:	mov	rsi, rdx
0x40029c:	mov	rdi, rax
0x40029f:	call	0x4005aa
<Block for 0x4002a4, 28 bytes>
0x4002a4:	lea	rdx, [rbp - 0x60]
0x4002a8:	mov	rsi, qword ptr [rbp - 0x30]
0x4002ac:	lea	rax, [rbp - 0x50]
0x4002b0:	mov	rcx, rdx
0x4002b3:	mov	edx, 1
0x4002b8:	mov	rdi, rax
0x4002bb:	call	0x4005d8
<Block for 0x4002c0, 19 bytes>
0x4002c0:	lea	rdx, [rbp - 0x50]
0x4002c4:	lea	rax, [rbp - 0x30]
0x4002c8:	mov	rsi, rdx
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x40069e
<Block for 0x4002d3, 12 bytes>
0x4002d3:	lea	rax, [rbp - 0x30]
0x4002d7:	mov	rdi, rax
0x4002da:	call	0x500028
<Block for 0x4002df, 12 bytes>
0x4002df:	lea	rax, [rbp - 0x30]
0x4002e3:	mov	rdi, rax
0x4002e6:	call	0x400512
<Block for 0x4002eb, 12 bytes>
0x4002eb:	lea	rax, [rbp - 0x50]
0x4002ef:	mov	rdi, rax
0x4002f2:	call	0x400512
<Block for 0x4002f7, 16 bytes>
0x4002f7:	nop	
0x4002f8:	mov	rax, qword ptr [rbp - 0x18]
0x4002fc:	xor	rax, qword ptr fs:[0x28]
0x400305:	je	0x400341
<Block for 0x400341, 7 bytes>
0x400341:	add	rsp, 0x58
0x400345:	pop	rbx
0x400346:	pop	rbp
0x400347:	ret	
<Block for 0x400307, 2 bytes>
0x400307:	jmp	0x40033c
<Block for 0x40033c, 5 bytes>
0x40033c:	call	0x500020
