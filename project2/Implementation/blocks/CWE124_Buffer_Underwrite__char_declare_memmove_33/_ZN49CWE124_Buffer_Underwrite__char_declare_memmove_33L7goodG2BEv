<Block for 0x4000d5, 69 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0x100
0x4000e4:	mov	rax, qword ptr fs:[0x28]
0x4000ed:	mov	qword ptr [rbp - 8], rax
0x4000f1:	xor	eax, eax
0x4000f3:	lea	rax, [rbp - 0xf8]
0x4000fa:	mov	qword ptr [rbp - 0xf0], rax
0x400101:	lea	rax, [rbp - 0xe0]
0x400108:	mov	edx, 0x63
0x40010d:	mov	esi, 0x41
0x400112:	mov	rdi, rax
0x400115:	call	0x500000
<Block for 0x40011a, 57 bytes>
0x40011a:	mov	byte ptr [rbp - 0x7d], 0
0x40011e:	lea	rax, [rbp - 0xe0]
0x400125:	mov	qword ptr [rbp - 0xf8], rax
0x40012c:	mov	rax, qword ptr [rbp - 0xf0]
0x400133:	mov	rax, qword ptr [rax]
0x400136:	mov	qword ptr [rbp - 0xe8], rax
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	edx, 0x63
0x400146:	mov	esi, 0x43
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500000
<Block for 0x400153, 31 bytes>
0x400153:	mov	byte ptr [rbp - 0xd], 0
0x400157:	lea	rcx, [rbp - 0x70]
0x40015b:	mov	rax, qword ptr [rbp - 0xe8]
0x400162:	mov	edx, 0x64
0x400167:	mov	rsi, rcx
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500008
<Block for 0x400172, 29 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0xe8]
0x400179:	add	rax, 0x63
0x40017d:	mov	byte ptr [rax], 0
0x400180:	mov	rax, qword ptr [rbp - 0xe8]
0x400187:	mov	rdi, rax
0x40018a:	call	0x500010
<Block for 0x40018f, 16 bytes>
0x40018f:	nop	
0x400190:	mov	rax, qword ptr [rbp - 8]
0x400194:	xor	rax, qword ptr fs:[0x28]
0x40019d:	je	0x4001a4
<Block for 0x4001a4, 2 bytes>
0x4001a4:	leave	
0x4001a5:	ret	
<Block for 0x40019f, 5 bytes>
0x40019f:	call	0x500018
