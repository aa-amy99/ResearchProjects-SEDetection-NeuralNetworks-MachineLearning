<Block for 0x40038f, 40 bytes>
0x40038f:	endbr64	
0x400393:	push	rbp
0x400394:	mov	rbp, rsp
0x400397:	sub	rsp, 0x40
0x40039b:	mov	dword ptr [rbp - 0x34], edi
0x40039e:	mov	rax, qword ptr fs:[0x28]
0x4003a7:	mov	qword ptr [rbp - 8], rax
0x4003ab:	xor	eax, eax
0x4003ad:	mov	eax, dword ptr [rip + 0xcd]
0x4003b3:	test	eax, eax
0x4003b5:	je	0x400403
<Block for 0x400403, 16 bytes>
0x400403:	nop	
0x400404:	mov	rax, qword ptr [rbp - 8]
0x400408:	xor	rax, qword ptr fs:[0x28]
0x400411:	je	0x400418
<Block for 0x4003b7, 46 bytes>
0x4003b7:	mov	qword ptr [rbp - 0x30], 0
0x4003bf:	mov	qword ptr [rbp - 0x28], 0
0x4003c7:	mov	qword ptr [rbp - 0x20], 0
0x4003cf:	mov	qword ptr [rbp - 0x18], 0
0x4003d7:	mov	qword ptr [rbp - 0x10], 0
0x4003df:	cmp	dword ptr [rbp - 0x34], 0
0x4003e3:	js	0x4003f7
<Block for 0x400418, 2 bytes>
0x400418:	leave	
0x400419:	ret	
<Block for 0x400413, 5 bytes>
0x400413:	call	0x500010
<Block for 0x4003f7, 12 bytes>
0x4003f7:	lea	rdi, [rip + 0x8a]
0x4003fe:	call	0x500008
<Block for 0x4003e5, 16 bytes>
0x4003e5:	mov	eax, dword ptr [rbp - 0x34]
0x4003e8:	cdqe	
0x4003ea:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003ee:	mov	edi, eax
0x4003f0:	call	0x500000
<Block for 0x4003f5, 2 bytes>
0x4003f5:	jmp	0x400403
