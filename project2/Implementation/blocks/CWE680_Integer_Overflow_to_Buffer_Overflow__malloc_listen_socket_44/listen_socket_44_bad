<Block for 0x400084, 79 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x50
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	lea	rax, [rip - 0xa6]
0x4000a6:	mov	qword ptr [rbp - 0x38], rax
0x4000aa:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4000b1:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4000b8:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4000bf:	mov	edx, 6
0x4000c4:	mov	esi, 1
0x4000c9:	mov	edi, 2
0x4000ce:	call	0x500020
<Block for 0x4000d3, 13 bytes>
0x4000d3:	mov	dword ptr [rbp - 0x40], eax
0x4000d6:	cmp	dword ptr [rbp - 0x40], -1
0x4000da:	je	0x40019f
<Block for 0x40019f, 3 bytes>
0x40019f:	nop	
0x4001a0:	jmp	0x4001a9
<Block for 0x4000e0, 22 bytes>
0x4000e0:	lea	rax, [rbp - 0x30]
0x4000e4:	mov	edx, 0x10
0x4000e9:	mov	esi, 0
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500028
<Block for 0x4001a9, 6 bytes>
0x4001a9:	cmp	dword ptr [rbp - 0x40], -1
0x4001ad:	je	0x4001b9
<Block for 0x4000f6, 23 bytes>
0x4000f6:	mov	word ptr [rbp - 0x30], 2
0x4000fc:	mov	dword ptr [rbp - 0x2c], 0
0x400103:	mov	edi, 0x6987
0x400108:	call	0x500030
<Block for 0x4001b9, 6 bytes>
0x4001b9:	cmp	dword ptr [rbp - 0x44], -1
0x4001bd:	je	0x4001c9
<Block for 0x4001af, 10 bytes>
0x4001af:	mov	eax, dword ptr [rbp - 0x40]
0x4001b2:	mov	edi, eax
0x4001b4:	call	0x500060
<Block for 0x40010d, 26 bytes>
0x40010d:	mov	word ptr [rbp - 0x2e], ax
0x400111:	lea	rcx, [rbp - 0x30]
0x400115:	mov	eax, dword ptr [rbp - 0x40]
0x400118:	mov	edx, 0x10
0x40011d:	mov	rsi, rcx
0x400120:	mov	edi, eax
0x400122:	call	0x500038
<Block for 0x4001c9, 11 bytes>
0x4001c9:	mov	eax, dword ptr [rbp - 0x48]
0x4001cc:	mov	rdx, qword ptr [rbp - 0x38]
0x4001d0:	mov	edi, eax
0x4001d2:	call	rdx
<Block for 0x4001bf, 10 bytes>
0x4001bf:	mov	eax, dword ptr [rbp - 0x44]
0x4001c2:	mov	edi, eax
0x4001c4:	call	0x500060
<Block for 0x400127, 5 bytes>
0x400127:	cmp	eax, -1
0x40012a:	je	0x4001a2
<Block for 0x4001d4, 16 bytes>
0x4001d4:	nop	
0x4001d5:	mov	rax, qword ptr [rbp - 8]
0x4001d9:	xor	rax, qword ptr fs:[0x28]
0x4001e2:	je	0x4001e9
<Block for 0x4001a2, 3 bytes>
0x4001a2:	nop	
0x4001a3:	jmp	0x4001a9
<Block for 0x40012c, 15 bytes>
0x40012c:	mov	eax, dword ptr [rbp - 0x40]
0x40012f:	mov	esi, 5
0x400134:	mov	edi, eax
0x400136:	call	0x500040
<Block for 0x4001e9, 2 bytes>
0x4001e9:	leave	
0x4001ea:	ret	
<Block for 0x4001e4, 5 bytes>
0x4001e4:	call	0x500068
<Block for 0x40013b, 5 bytes>
0x40013b:	cmp	eax, -1
0x40013e:	je	0x4001a5
<Block for 0x4001a5, 3 bytes>
0x4001a5:	nop	
0x4001a6:	jmp	0x4001a9
<Block for 0x400140, 20 bytes>
0x400140:	mov	eax, dword ptr [rbp - 0x40]
0x400143:	mov	edx, 0
0x400148:	mov	esi, 0
0x40014d:	mov	edi, eax
0x40014f:	call	0x500048
<Block for 0x400154, 9 bytes>
0x400154:	mov	dword ptr [rbp - 0x44], eax
0x400157:	cmp	dword ptr [rbp - 0x44], -1
0x40015b:	je	0x4001a8
<Block for 0x40015d, 24 bytes>
0x40015d:	lea	rsi, [rbp - 0x16]
0x400161:	mov	eax, dword ptr [rbp - 0x44]
0x400164:	mov	ecx, 0
0x400169:	mov	edx, 0xd
0x40016e:	mov	edi, eax
0x400170:	call	0x500050
<Block for 0x4001a8, 1 bytes>
0x4001a8:	nop	
<Block for 0x400175, 9 bytes>
0x400175:	mov	dword ptr [rbp - 0x3c], eax
0x400178:	cmp	dword ptr [rbp - 0x3c], -1
0x40017c:	je	0x4001a9
<Block for 0x40017e, 6 bytes>
0x40017e:	cmp	dword ptr [rbp - 0x3c], 0
0x400182:	je	0x4001a9
<Block for 0x400184, 22 bytes>
0x400184:	mov	eax, dword ptr [rbp - 0x3c]
0x400187:	cdqe	
0x400189:	mov	byte ptr [rbp + rax - 0x16], 0
0x40018e:	lea	rax, [rbp - 0x16]
0x400192:	mov	rdi, rax
0x400195:	call	0x500058
<Block for 0x40019a, 5 bytes>
0x40019a:	mov	dword ptr [rbp - 0x48], eax
0x40019d:	jmp	0x4001a9
