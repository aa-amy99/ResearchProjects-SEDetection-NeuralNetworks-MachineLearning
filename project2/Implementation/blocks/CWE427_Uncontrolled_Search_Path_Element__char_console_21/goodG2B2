<Block for 0x4002e3, 82 bytes>
0x4002e3:	endbr64	
0x4002e7:	push	rbp
0x4002e8:	mov	rbp, rsp
0x4002eb:	sub	rsp, 0x120
0x4002f2:	mov	rax, qword ptr fs:[0x28]
0x4002fb:	mov	qword ptr [rbp - 8], rax
0x4002ff:	xor	eax, eax
0x400301:	movabs	rax, 0x3d48544150
0x40030b:	mov	edx, 0
0x400310:	mov	qword ptr [rbp - 0x110], rax
0x400317:	mov	qword ptr [rbp - 0x108], rdx
0x40031e:	lea	rdx, [rbp - 0x100]
0x400325:	mov	eax, 0
0x40032a:	mov	ecx, 0x1d
0x40032f:	mov	rdi, rdx
0x400332:	rep stosq	qword ptr [rdi], rax
<Block for 0x400335, 49 bytes>
0x400335:	mov	rdx, rdi
0x400338:	mov	word ptr [rdx], ax
0x40033b:	add	rdx, 2
0x40033f:	lea	rax, [rbp - 0x110]
0x400346:	mov	qword ptr [rbp - 0x118], rax
0x40034d:	mov	dword ptr [rip + 0x65], 1
0x400357:	mov	rax, qword ptr [rbp - 0x118]
0x40035e:	mov	rdi, rax
0x400361:	call	0x400294
<Block for 0x400332, 3 bytes>
0x400332:	rep stosq	qword ptr [rdi], rax
<Block for 0x400366, 22 bytes>
0x400366:	mov	qword ptr [rbp - 0x118], rax
0x40036d:	mov	rax, qword ptr [rbp - 0x118]
0x400374:	mov	rdi, rax
0x400377:	call	0x500020
<Block for 0x40037c, 16 bytes>
0x40037c:	nop	
0x40037d:	mov	rax, qword ptr [rbp - 8]
0x400381:	xor	rax, qword ptr fs:[0x28]
0x40038a:	je	0x400391
<Block for 0x400391, 2 bytes>
0x400391:	leave	
0x400392:	ret	
<Block for 0x40038c, 5 bytes>
0x40038c:	call	0x500028
