<Block for 0x4001e4, 82 bytes>
0x4001e4:	endbr64	
0x4001e8:	push	rbp
0x4001e9:	mov	rbp, rsp
0x4001ec:	sub	rsp, 0x120
0x4001f3:	mov	rax, qword ptr fs:[0x28]
0x4001fc:	mov	qword ptr [rbp - 8], rax
0x400200:	xor	eax, eax
0x400202:	movabs	rax, 0x3d48544150
0x40020c:	mov	edx, 0
0x400211:	mov	qword ptr [rbp - 0x110], rax
0x400218:	mov	qword ptr [rbp - 0x108], rdx
0x40021f:	lea	rdx, [rbp - 0x100]
0x400226:	mov	eax, 0
0x40022b:	mov	ecx, 0x1d
0x400230:	mov	rdi, rdx
0x400233:	rep stosq	qword ptr [rdi], rax
<Block for 0x400236, 49 bytes>
0x400236:	mov	rdx, rdi
0x400239:	mov	word ptr [rdx], ax
0x40023c:	add	rdx, 2
0x400240:	lea	rax, [rbp - 0x110]
0x400247:	mov	qword ptr [rbp - 0x118], rax
0x40024e:	mov	dword ptr [rip + 0x160], 0
0x400258:	mov	rax, qword ptr [rbp - 0x118]
0x40025f:	mov	rdi, rax
0x400262:	call	0x400183
<Block for 0x400233, 3 bytes>
0x400233:	rep stosq	qword ptr [rdi], rax
<Block for 0x400267, 22 bytes>
0x400267:	mov	qword ptr [rbp - 0x118], rax
0x40026e:	mov	rax, qword ptr [rbp - 0x118]
0x400275:	mov	rdi, rax
0x400278:	call	0x500020
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500028
