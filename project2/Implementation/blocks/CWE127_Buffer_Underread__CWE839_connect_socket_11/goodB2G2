<Block for 0x400302, 44 bytes>
0x400302:	endbr64	
0x400306:	push	rbp
0x400307:	mov	rbp, rsp
0x40030a:	sub	rsp, 0x50
0x40030e:	mov	rax, qword ptr fs:[0x28]
0x400317:	mov	qword ptr [rbp - 8], rax
0x40031b:	xor	eax, eax
0x40031d:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400324:	mov	eax, 0
0x400329:	call	0x500000
<Block for 0x40032e, 8 bytes>
0x40032e:	test	eax, eax
0x400330:	je	0x400408
<Block for 0x400408, 10 bytes>
0x400408:	mov	eax, 0
0x40040d:	call	0x500000
<Block for 0x400336, 27 bytes>
0x400336:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40033d:	mov	edx, 6
0x400342:	mov	esi, 1
0x400347:	mov	edi, 2
0x40034c:	call	0x500008
<Block for 0x400412, 4 bytes>
0x400412:	test	eax, eax
0x400414:	je	0x400468
<Block for 0x400351, 13 bytes>
0x400351:	mov	dword ptr [rbp - 0x48], eax
0x400354:	cmp	dword ptr [rbp - 0x48], -1
0x400358:	je	0x4003f4
<Block for 0x400468, 16 bytes>
0x400468:	nop	
0x400469:	mov	rax, qword ptr [rbp - 8]
0x40046d:	xor	rax, qword ptr fs:[0x28]
0x400476:	je	0x40047d
<Block for 0x400416, 46 bytes>
0x400416:	mov	qword ptr [rbp - 0x40], 0
0x40041e:	mov	qword ptr [rbp - 0x38], 0
0x400426:	mov	qword ptr [rbp - 0x30], 0
0x40042e:	mov	qword ptr [rbp - 0x28], 0
0x400436:	mov	qword ptr [rbp - 0x20], 0
0x40043e:	cmp	dword ptr [rbp - 0x4c], 0
0x400442:	js	0x40045c
<Block for 0x4003f4, 3 bytes>
0x4003f4:	nop	
0x4003f5:	jmp	0x4003f8
<Block for 0x40035e, 22 bytes>
0x40035e:	lea	rax, [rbp - 0x40]
0x400362:	mov	edx, 0x10
0x400367:	mov	esi, 0
0x40036c:	mov	rdi, rax
0x40036f:	call	0x500010
<Block for 0x40047d, 2 bytes>
0x40047d:	leave	
0x40047e:	ret	
<Block for 0x400478, 5 bytes>
0x400478:	call	0x500058
<Block for 0x40045c, 12 bytes>
0x40045c:	lea	rdi, [rip + 0x1f5]
0x400463:	call	0x500050
<Block for 0x400444, 6 bytes>
0x400444:	cmp	dword ptr [rbp - 0x4c], 9
0x400448:	jg	0x40045c
<Block for 0x4003f8, 6 bytes>
0x4003f8:	cmp	dword ptr [rbp - 0x48], -1
0x4003fc:	je	0x400408
<Block for 0x400374, 18 bytes>
0x400374:	mov	word ptr [rbp - 0x40], 2
0x40037a:	lea	rdi, [rip + 0x28f]
0x400381:	call	0x500018
<Block for 0x40044a, 16 bytes>
0x40044a:	mov	eax, dword ptr [rbp - 0x4c]
0x40044d:	cdqe	
0x40044f:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400453:	mov	edi, eax
0x400455:	call	0x500048
<Block for 0x4003fe, 10 bytes>
0x4003fe:	mov	eax, dword ptr [rbp - 0x48]
0x400401:	mov	edi, eax
0x400403:	call	0x500040
<Block for 0x400386, 13 bytes>
0x400386:	mov	dword ptr [rbp - 0x3c], eax
0x400389:	mov	edi, 0x6987
0x40038e:	call	0x500020
<Block for 0x40045a, 2 bytes>
0x40045a:	jmp	0x400468
<Block for 0x400393, 26 bytes>
0x400393:	mov	word ptr [rbp - 0x3e], ax
0x400397:	lea	rcx, [rbp - 0x40]
0x40039b:	mov	eax, dword ptr [rbp - 0x48]
0x40039e:	mov	edx, 0x10
0x4003a3:	mov	rsi, rcx
0x4003a6:	mov	edi, eax
0x4003a8:	call	0x500028
<Block for 0x4003ad, 5 bytes>
0x4003ad:	cmp	eax, -1
0x4003b0:	je	0x4003f7
<Block for 0x4003b2, 24 bytes>
0x4003b2:	lea	rsi, [rbp - 0x16]
0x4003b6:	mov	eax, dword ptr [rbp - 0x48]
0x4003b9:	mov	ecx, 0
0x4003be:	mov	edx, 0xd
0x4003c3:	mov	edi, eax
0x4003c5:	call	0x500030
<Block for 0x4003f7, 1 bytes>
0x4003f7:	nop	
<Block for 0x4003ca, 9 bytes>
0x4003ca:	mov	dword ptr [rbp - 0x44], eax
0x4003cd:	cmp	dword ptr [rbp - 0x44], -1
0x4003d1:	je	0x4003f8
<Block for 0x4003d3, 6 bytes>
0x4003d3:	cmp	dword ptr [rbp - 0x44], 0
0x4003d7:	je	0x4003f8
<Block for 0x4003d9, 22 bytes>
0x4003d9:	mov	eax, dword ptr [rbp - 0x44]
0x4003dc:	cdqe	
0x4003de:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003e3:	lea	rax, [rbp - 0x16]
0x4003e7:	mov	rdi, rax
0x4003ea:	call	0x500038
<Block for 0x4003ef, 5 bytes>
0x4003ef:	mov	dword ptr [rbp - 0x4c], eax
0x4003f2:	jmp	0x4003f8
