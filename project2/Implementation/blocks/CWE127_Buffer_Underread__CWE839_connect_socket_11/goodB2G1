<Block for 0x400177, 44 bytes>
0x400177:	endbr64	
0x40017b:	push	rbp
0x40017c:	mov	rbp, rsp
0x40017f:	sub	rsp, 0x50
0x400183:	mov	rax, qword ptr fs:[0x28]
0x40018c:	mov	qword ptr [rbp - 8], rax
0x400190:	xor	eax, eax
0x400192:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400199:	mov	eax, 0
0x40019e:	call	0x500000
<Block for 0x4001a3, 8 bytes>
0x4001a3:	test	eax, eax
0x4001a5:	je	0x40027d
<Block for 0x40027d, 10 bytes>
0x40027d:	mov	eax, 0
0x400282:	call	0x500060
<Block for 0x4001ab, 27 bytes>
0x4001ab:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001b2:	mov	edx, 6
0x4001b7:	mov	esi, 1
0x4001bc:	mov	edi, 2
0x4001c1:	call	0x500008
<Block for 0x400287, 4 bytes>
0x400287:	test	eax, eax
0x400289:	je	0x400299
<Block for 0x4001c6, 13 bytes>
0x4001c6:	mov	dword ptr [rbp - 0x48], eax
0x4001c9:	cmp	dword ptr [rbp - 0x48], -1
0x4001cd:	je	0x400269
<Block for 0x400299, 46 bytes>
0x400299:	mov	qword ptr [rbp - 0x40], 0
0x4002a1:	mov	qword ptr [rbp - 0x38], 0
0x4002a9:	mov	qword ptr [rbp - 0x30], 0
0x4002b1:	mov	qword ptr [rbp - 0x28], 0
0x4002b9:	mov	qword ptr [rbp - 0x20], 0
0x4002c1:	cmp	dword ptr [rbp - 0x4c], 0
0x4002c5:	js	0x4002df
<Block for 0x40028b, 12 bytes>
0x40028b:	lea	rdi, [rip + 0x3ad]
0x400292:	call	0x500050
<Block for 0x400269, 3 bytes>
0x400269:	nop	
0x40026a:	jmp	0x40026d
<Block for 0x4001d3, 22 bytes>
0x4001d3:	lea	rax, [rbp - 0x40]
0x4001d7:	mov	edx, 0x10
0x4001dc:	mov	esi, 0
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500010
<Block for 0x4002df, 12 bytes>
0x4002df:	lea	rdi, [rip + 0x372]
0x4002e6:	call	0x500050
<Block for 0x4002c7, 6 bytes>
0x4002c7:	cmp	dword ptr [rbp - 0x4c], 9
0x4002cb:	jg	0x4002df
<Block for 0x400297, 2 bytes>
0x400297:	jmp	0x4002eb
<Block for 0x40026d, 6 bytes>
0x40026d:	cmp	dword ptr [rbp - 0x48], -1
0x400271:	je	0x40027d
<Block for 0x4001e9, 18 bytes>
0x4001e9:	mov	word ptr [rbp - 0x40], 2
0x4001ef:	lea	rdi, [rip + 0x41a]
0x4001f6:	call	0x500018
<Block for 0x4002eb, 16 bytes>
0x4002eb:	nop	
0x4002ec:	mov	rax, qword ptr [rbp - 8]
0x4002f0:	xor	rax, qword ptr fs:[0x28]
0x4002f9:	je	0x400300
<Block for 0x4002cd, 16 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0x4c]
0x4002d0:	cdqe	
0x4002d2:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002d6:	mov	edi, eax
0x4002d8:	call	0x500048
<Block for 0x400273, 10 bytes>
0x400273:	mov	eax, dword ptr [rbp - 0x48]
0x400276:	mov	edi, eax
0x400278:	call	0x500040
<Block for 0x4001fb, 13 bytes>
0x4001fb:	mov	dword ptr [rbp - 0x3c], eax
0x4001fe:	mov	edi, 0x6987
0x400203:	call	0x500020
<Block for 0x400300, 2 bytes>
0x400300:	leave	
0x400301:	ret	
<Block for 0x4002fb, 5 bytes>
0x4002fb:	call	0x500058
<Block for 0x4002dd, 2 bytes>
0x4002dd:	jmp	0x4002eb
<Block for 0x400208, 26 bytes>
0x400208:	mov	word ptr [rbp - 0x3e], ax
0x40020c:	lea	rcx, [rbp - 0x40]
0x400210:	mov	eax, dword ptr [rbp - 0x48]
0x400213:	mov	edx, 0x10
0x400218:	mov	rsi, rcx
0x40021b:	mov	edi, eax
0x40021d:	call	0x500028
<Block for 0x400222, 5 bytes>
0x400222:	cmp	eax, -1
0x400225:	je	0x40026c
<Block for 0x400227, 24 bytes>
0x400227:	lea	rsi, [rbp - 0x16]
0x40022b:	mov	eax, dword ptr [rbp - 0x48]
0x40022e:	mov	ecx, 0
0x400233:	mov	edx, 0xd
0x400238:	mov	edi, eax
0x40023a:	call	0x500030
<Block for 0x40026c, 1 bytes>
0x40026c:	nop	
<Block for 0x40023f, 9 bytes>
0x40023f:	mov	dword ptr [rbp - 0x44], eax
0x400242:	cmp	dword ptr [rbp - 0x44], -1
0x400246:	je	0x40026d
<Block for 0x400248, 6 bytes>
0x400248:	cmp	dword ptr [rbp - 0x44], 0
0x40024c:	je	0x40026d
<Block for 0x40024e, 22 bytes>
0x40024e:	mov	eax, dword ptr [rbp - 0x44]
0x400251:	cdqe	
0x400253:	mov	byte ptr [rbp + rax - 0x16], 0
0x400258:	lea	rax, [rbp - 0x16]
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500038
<Block for 0x400264, 5 bytes>
0x400264:	mov	dword ptr [rbp - 0x4c], eax
0x400267:	jmp	0x40026d
