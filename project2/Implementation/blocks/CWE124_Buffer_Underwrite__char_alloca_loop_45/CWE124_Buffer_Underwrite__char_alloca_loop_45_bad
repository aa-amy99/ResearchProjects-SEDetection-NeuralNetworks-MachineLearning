<Block for 0x40009f, 81 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x20
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	mov	eax, 0x10
0x4000bf:	sub	rax, 1
0x4000c3:	add	rax, 0x6c
0x4000c7:	mov	esi, 0x10
0x4000cc:	mov	edx, 0
0x4000d1:	div	rsi
0x4000d4:	imul	rax, rax, 0x10
0x4000d8:	mov	rdx, rax
0x4000db:	and	rdx, 0xfffffffffffff000
0x4000e2:	mov	rcx, rsp
0x4000e5:	sub	rcx, rdx
0x4000e8:	mov	rdx, rcx
0x4000eb:	cmp	rsp, rdx
0x4000ee:	je	0x400102
<Block for 0x400102, 26 bytes>
0x400102:	mov	rdx, rax
0x400105:	and	edx, 0xfff
0x40010b:	sub	rsp, rdx
0x40010e:	mov	rdx, rax
0x400111:	and	edx, 0xfff
0x400117:	test	rdx, rdx
0x40011a:	je	0x40012c
<Block for 0x4000f0, 18 bytes>
0x4000f0:	sub	rsp, 0x1000
0x4000f7:	or	qword ptr [rsp + 0xff8], 0
0x400100:	jmp	0x4000eb
<Block for 0x40012c, 41 bytes>
0x40012c:	mov	rax, rsp
0x40012f:	add	rax, 0xf
0x400133:	shr	rax, 4
0x400137:	shl	rax, 4
0x40013b:	mov	qword ptr [rbp - 0x18], rax
0x40013f:	mov	rax, qword ptr [rbp - 0x18]
0x400143:	mov	edx, 0x63
0x400148:	mov	esi, 0x41
0x40014d:	mov	rdi, rax
0x400150:	call	0x500000
<Block for 0x40011c, 57 bytes>
0x40011c:	and	eax, 0xfff
0x400121:	sub	rax, 8
0x400125:	add	rax, rsp
0x400128:	or	qword ptr [rax], 0
0x40012c:	mov	rax, rsp
0x40012f:	add	rax, 0xf
0x400133:	shr	rax, 4
0x400137:	shl	rax, 4
0x40013b:	mov	qword ptr [rbp - 0x18], rax
0x40013f:	mov	rax, qword ptr [rbp - 0x18]
0x400143:	mov	edx, 0x63
0x400148:	mov	esi, 0x41
0x40014d:	mov	rdi, rax
0x400150:	call	0x500000
<Block for 0x4000eb, 5 bytes>
0x4000eb:	cmp	rsp, rdx
0x4000ee:	je	0x400102
<Block for 0x400155, 44 bytes>
0x400155:	mov	rax, qword ptr [rbp - 0x18]
0x400159:	add	rax, 0x63
0x40015d:	mov	byte ptr [rax], 0
0x400160:	mov	rax, qword ptr [rbp - 0x18]
0x400164:	sub	rax, 8
0x400168:	mov	qword ptr [rbp - 0x10], rax
0x40016c:	mov	rax, qword ptr [rbp - 0x10]
0x400170:	mov	qword ptr [rip + 0x1d1], rax
0x400177:	mov	eax, 0
0x40017c:	call	0x400000
<Block for 0x400181, 16 bytes>
0x400181:	nop	
0x400182:	mov	rax, qword ptr [rbp - 8]
0x400186:	xor	rax, qword ptr fs:[0x28]
0x40018f:	je	0x400196
<Block for 0x400196, 2 bytes>
0x400196:	leave	
0x400197:	ret	
<Block for 0x400191, 5 bytes>
0x400191:	call	0x500010
