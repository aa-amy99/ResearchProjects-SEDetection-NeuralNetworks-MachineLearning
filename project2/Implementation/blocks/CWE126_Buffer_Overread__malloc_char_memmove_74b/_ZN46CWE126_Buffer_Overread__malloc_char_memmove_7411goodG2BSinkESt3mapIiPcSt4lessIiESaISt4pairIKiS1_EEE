<Block for 0x4000b8, 66 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0x90
0x4000c7:	mov	qword ptr [rbp - 0x88], rdi
0x4000ce:	mov	rax, qword ptr fs:[0x28]
0x4000d7:	mov	qword ptr [rbp - 8], rax
0x4000db:	xor	eax, eax
0x4000dd:	mov	dword ptr [rbp - 0x7c], 2
0x4000e4:	lea	rdx, [rbp - 0x7c]
0x4000e8:	mov	rax, qword ptr [rbp - 0x88]
0x4000ef:	mov	rsi, rdx
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x40019c
<Block for 0x4000fa, 29 bytes>
0x4000fa:	mov	rax, qword ptr [rax]
0x4000fd:	mov	qword ptr [rbp - 0x78], rax
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	edx, 0x63
0x40010a:	mov	esi, 0x43
0x40010f:	mov	rdi, rax
0x400112:	call	0x500000
<Block for 0x400117, 16 bytes>
0x400117:	mov	byte ptr [rbp - 0xd], 0
0x40011b:	lea	rax, [rbp - 0x70]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x400127, 22 bytes>
0x400127:	mov	rdx, rax
0x40012a:	mov	rcx, qword ptr [rbp - 0x78]
0x40012e:	lea	rax, [rbp - 0x70]
0x400132:	mov	rsi, rcx
0x400135:	mov	rdi, rax
0x400138:	call	0x500010
<Block for 0x40013d, 16 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	rdi, rax
0x400148:	call	0x500018
<Block for 0x40014d, 12 bytes>
0x40014d:	mov	rax, qword ptr [rbp - 0x78]
0x400151:	mov	rdi, rax
0x400154:	call	0x500020
<Block for 0x400159, 16 bytes>
0x400159:	nop	
0x40015a:	mov	rax, qword ptr [rbp - 8]
0x40015e:	xor	rax, qword ptr fs:[0x28]
0x400167:	je	0x40016e
<Block for 0x40016e, 2 bytes>
0x40016e:	leave	
0x40016f:	ret	
<Block for 0x400169, 5 bytes>
0x400169:	call	0x500028
