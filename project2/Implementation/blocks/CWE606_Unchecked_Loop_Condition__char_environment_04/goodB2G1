<Block for 0x400172, 153 bytes>
0x400172:	endbr64	
0x400176:	push	rbp
0x400177:	mov	rbp, rsp
0x40017a:	sub	rsp, 0xa0
0x400181:	mov	rax, qword ptr fs:[0x28]
0x40018a:	mov	qword ptr [rbp - 8], rax
0x40018e:	xor	eax, eax
0x400190:	mov	qword ptr [rbp - 0x70], 0
0x400198:	mov	qword ptr [rbp - 0x68], 0
0x4001a0:	mov	qword ptr [rbp - 0x60], 0
0x4001a8:	mov	qword ptr [rbp - 0x58], 0
0x4001b0:	mov	qword ptr [rbp - 0x50], 0
0x4001b8:	mov	qword ptr [rbp - 0x48], 0
0x4001c0:	mov	qword ptr [rbp - 0x40], 0
0x4001c8:	mov	qword ptr [rbp - 0x38], 0
0x4001d0:	mov	qword ptr [rbp - 0x30], 0
0x4001d8:	mov	qword ptr [rbp - 0x28], 0
0x4001e0:	mov	qword ptr [rbp - 0x20], 0
0x4001e8:	mov	qword ptr [rbp - 0x18], 0
0x4001f0:	mov	dword ptr [rbp - 0x10], 0
0x4001f7:	lea	rax, [rbp - 0x70]
0x4001fb:	mov	qword ptr [rbp - 0x88], rax
0x400202:	mov	eax, 1
0x400207:	test	eax, eax
0x400209:	je	0x40025e
<Block for 0x40025e, 9 bytes>
0x40025e:	mov	eax, 0
0x400263:	test	eax, eax
0x400265:	je	0x400275
<Block for 0x40020b, 15 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x88]
0x400212:	mov	rdi, rax
0x400215:	call	0x500000
<Block for 0x400275, 34 bytes>
0x400275:	lea	rdx, [rbp - 0x94]
0x40027c:	mov	rax, qword ptr [rbp - 0x88]
0x400283:	lea	rsi, [rip + 0x46a]
0x40028a:	mov	rdi, rax
0x40028d:	mov	eax, 0
0x400292:	call	0x500018
<Block for 0x400267, 12 bytes>
0x400267:	lea	rdi, [rip + 0x489]
0x40026e:	call	0x500030
<Block for 0x40021a, 16 bytes>
0x40021a:	mov	qword ptr [rbp - 0x80], rax
0x40021e:	lea	rdi, [rip + 0x4cb]
0x400225:	call	0x500008
<Block for 0x400297, 5 bytes>
0x400297:	cmp	eax, 1
0x40029a:	jne	0x4002e8
<Block for 0x400273, 2 bytes>
0x400273:	jmp	0x4002e8
<Block for 0x40022a, 11 bytes>
0x40022a:	mov	qword ptr [rbp - 0x78], rax
0x40022e:	cmp	qword ptr [rbp - 0x78], 0
0x400233:	je	0x40025e
<Block for 0x40029c, 13 bytes>
0x40029c:	mov	eax, dword ptr [rbp - 0x94]
0x4002a2:	cmp	eax, 0x270f
0x4002a7:	jg	0x4002e8
<Block for 0x4002e8, 16 bytes>
0x4002e8:	nop	
0x4002e9:	mov	rax, qword ptr [rbp - 8]
0x4002ed:	xor	rax, qword ptr fs:[0x28]
0x4002f6:	je	0x4002fd
<Block for 0x400235, 41 bytes>
0x400235:	mov	eax, 0x63
0x40023a:	sub	rax, qword ptr [rbp - 0x80]
0x40023e:	mov	rdx, rax
0x400241:	mov	rcx, qword ptr [rbp - 0x88]
0x400248:	mov	rax, qword ptr [rbp - 0x80]
0x40024c:	add	rcx, rax
0x40024f:	mov	rax, qword ptr [rbp - 0x78]
0x400253:	mov	rsi, rax
0x400256:	mov	rdi, rcx
0x400259:	call	0x500010
<Block for 0x4002a9, 22 bytes>
0x4002a9:	mov	dword ptr [rbp - 0x8c], 0
0x4002b3:	mov	dword ptr [rbp - 0x90], 0
0x4002bd:	jmp	0x4002cd
<Block for 0x4002fd, 2 bytes>
0x4002fd:	leave	
0x4002fe:	ret	
<Block for 0x4002f8, 5 bytes>
0x4002f8:	call	0x500028
<Block for 0x4002cd, 14 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0x94]
0x4002d3:	cmp	dword ptr [rbp - 0x90], eax
0x4002d9:	jl	0x4002bf
<Block for 0x4002bf, 28 bytes>
0x4002bf:	add	dword ptr [rbp - 0x8c], 1
0x4002c6:	add	dword ptr [rbp - 0x90], 1
0x4002cd:	mov	eax, dword ptr [rbp - 0x94]
0x4002d3:	cmp	dword ptr [rbp - 0x90], eax
0x4002d9:	jl	0x4002bf
<Block for 0x4002db, 13 bytes>
0x4002db:	mov	eax, dword ptr [rbp - 0x8c]
0x4002e1:	mov	edi, eax
0x4002e3:	call	0x500020
