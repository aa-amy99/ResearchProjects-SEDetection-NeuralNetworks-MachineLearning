<Block for 0x400000, 153 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	eax, 1
0x400095:	test	eax, eax
0x400097:	je	0x4000ec
<Block for 0x4000ec, 9 bytes>
0x4000ec:	mov	eax, 1
0x4000f1:	test	eax, eax
0x4000f3:	je	0x40015b
<Block for 0x400099, 15 bytes>
0x400099:	mov	rax, qword ptr [rbp - 0x88]
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500000
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x4000f5, 34 bytes>
0x4000f5:	lea	rdx, [rbp - 0x94]
0x4000fc:	mov	rax, qword ptr [rbp - 0x88]
0x400103:	lea	rsi, [rip + 0x5ea]
0x40010a:	mov	rdi, rax
0x40010d:	mov	eax, 0
0x400112:	call	0x500018
<Block for 0x4000a8, 16 bytes>
0x4000a8:	mov	qword ptr [rbp - 0x80], rax
0x4000ac:	lea	rdi, [rip + 0x63d]
0x4000b3:	call	0x500008
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500028
<Block for 0x400117, 5 bytes>
0x400117:	cmp	eax, 1
0x40011a:	jne	0x40015b
<Block for 0x4000b8, 11 bytes>
0x4000b8:	mov	qword ptr [rbp - 0x78], rax
0x4000bc:	cmp	qword ptr [rbp - 0x78], 0
0x4000c1:	je	0x4000ec
<Block for 0x40011c, 22 bytes>
0x40011c:	mov	dword ptr [rbp - 0x8c], 0
0x400126:	mov	dword ptr [rbp - 0x90], 0
0x400130:	jmp	0x400140
<Block for 0x4000c3, 41 bytes>
0x4000c3:	mov	eax, 0x63
0x4000c8:	sub	rax, qword ptr [rbp - 0x80]
0x4000cc:	mov	rdx, rax
0x4000cf:	mov	rcx, qword ptr [rbp - 0x88]
0x4000d6:	mov	rax, qword ptr [rbp - 0x80]
0x4000da:	add	rcx, rax
0x4000dd:	mov	rax, qword ptr [rbp - 0x78]
0x4000e1:	mov	rsi, rax
0x4000e4:	mov	rdi, rcx
0x4000e7:	call	0x500010
<Block for 0x400140, 14 bytes>
0x400140:	mov	eax, dword ptr [rbp - 0x94]
0x400146:	cmp	dword ptr [rbp - 0x90], eax
0x40014c:	jl	0x400132
<Block for 0x400132, 28 bytes>
0x400132:	add	dword ptr [rbp - 0x8c], 1
0x400139:	add	dword ptr [rbp - 0x90], 1
0x400140:	mov	eax, dword ptr [rbp - 0x94]
0x400146:	cmp	dword ptr [rbp - 0x90], eax
0x40014c:	jl	0x400132
<Block for 0x40014e, 13 bytes>
0x40014e:	mov	eax, dword ptr [rbp - 0x8c]
0x400154:	mov	edi, eax
0x400156:	call	0x500020
