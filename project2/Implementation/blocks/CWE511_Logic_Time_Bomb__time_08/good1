<Block for 0x400082, 37 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x10
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	eax, 0
0x4000a2:	call	0x40000f
<Block for 0x4000a7, 4 bytes>
0x4000a7:	test	eax, eax
0x4000a9:	je	0x4000b9
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rax, [rbp - 0x10]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500000
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0xd8]
0x4000b2:	call	0x500018
<Block for 0x4000c5, 12 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 0x10]
0x4000c9:	cmp	rax, 0x4779c8d0
0x4000cf:	jle	0x4000dd
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x4000dd
<Block for 0x4000dd, 16 bytes>
0x4000dd:	nop	
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	xor	rax, qword ptr fs:[0x28]
0x4000eb:	je	0x4000f2
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rdi, [rip + 0xc7]
0x4000d8:	call	0x500018
<Block for 0x4000f2, 2 bytes>
0x4000f2:	leave	
0x4000f3:	ret	
<Block for 0x4000ed, 5 bytes>
0x4000ed:	call	0x500010
