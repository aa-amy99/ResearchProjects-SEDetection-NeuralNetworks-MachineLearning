<Block for 0x4002ee, 88 bytes>
0x4002ee:	endbr64	
0x4002f2:	push	rbp
0x4002f3:	mov	rbp, rsp
0x4002f6:	sub	rsp, 0x40
0x4002fa:	mov	rax, qword ptr fs:[0x28]
0x400303:	mov	qword ptr [rbp - 8], rax
0x400307:	xor	eax, eax
0x400309:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400310:	mov	dword ptr [rbp - 0x34], 7
0x400317:	nop	
0x400318:	mov	qword ptr [rbp - 0x30], 0
0x400320:	mov	qword ptr [rbp - 0x28], 0
0x400328:	mov	qword ptr [rbp - 0x20], 0
0x400330:	mov	qword ptr [rbp - 0x18], 0
0x400338:	mov	qword ptr [rbp - 0x10], 0
0x400340:	cmp	dword ptr [rbp - 0x34], 9
0x400344:	jg	0x400378
<Block for 0x400346, 22 bytes>
0x400346:	mov	eax, dword ptr [rbp - 0x34]
0x400349:	cdqe	
0x40034b:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400353:	mov	dword ptr [rbp - 0x38], 0
0x40035a:	jmp	0x400370
<Block for 0x400378, 12 bytes>
0x400378:	lea	rdi, [rip + 0x111]
0x40037f:	call	0x500018
<Block for 0x400370, 6 bytes>
0x400370:	cmp	dword ptr [rbp - 0x38], 9
0x400374:	jle	0x40035c
<Block for 0x400384, 17 bytes>
0x400384:	nop	
0x400385:	nop	
0x400386:	mov	rax, qword ptr [rbp - 8]
0x40038a:	xor	rax, qword ptr fs:[0x28]
0x400393:	je	0x40039a
<Block for 0x40035c, 16 bytes>
0x40035c:	mov	eax, dword ptr [rbp - 0x38]
0x40035f:	cdqe	
0x400361:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400365:	mov	edi, eax
0x400367:	call	0x500020
<Block for 0x400376, 2 bytes>
0x400376:	jmp	0x400384
<Block for 0x40039a, 2 bytes>
0x40039a:	leave	
0x40039b:	ret	
<Block for 0x400395, 5 bytes>
0x400395:	call	0x500028
<Block for 0x40036c, 10 bytes>
0x40036c:	add	dword ptr [rbp - 0x38], 1
0x400370:	cmp	dword ptr [rbp - 0x38], 9
0x400374:	jle	0x40035c
