<Block for 0x400000, 64 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x18]
0x40001f:	mov	qword ptr [rbp - 0x10], rax
0x400023:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x40002a:	mov	dword ptr [rbp - 0x18], 4
0x400031:	mov	rax, qword ptr [rbp - 0x10]
0x400035:	mov	eax, dword ptr [rax]
0x400037:	mov	dword ptr [rbp - 0x14], eax
0x40003a:	cmp	dword ptr [rbp - 0x14], 5
0x40003e:	jg	0x40005f
<Block for 0x400040, 31 bytes>
0x400040:	lea	rcx, [rip + 0xb9]
0x400047:	mov	edx, 0x27
0x40004c:	lea	rsi, [rip + 0xe5]
0x400053:	lea	rdi, [rip + 0x107]
0x40005a:	call	0x500000
<Block for 0x40005f, 16 bytes>
0x40005f:	nop	
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	xor	rax, qword ptr fs:[0x28]
0x40006d:	je	0x400074
<Block for 0x400074, 2 bytes>
0x400074:	leave	
0x400075:	ret	
<Block for 0x40006f, 5 bytes>
0x40006f:	call	0x500008
