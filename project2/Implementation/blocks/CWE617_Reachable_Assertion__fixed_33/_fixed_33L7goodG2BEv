<Block for 0x400076, 64 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x20
0x400082:	mov	rax, qword ptr fs:[0x28]
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	xor	eax, eax
0x400091:	lea	rax, [rbp - 0x18]
0x400095:	mov	qword ptr [rbp - 0x10], rax
0x400099:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x4000a0:	mov	dword ptr [rbp - 0x18], 6
0x4000a7:	mov	rax, qword ptr [rbp - 0x10]
0x4000ab:	mov	eax, dword ptr [rax]
0x4000ad:	mov	dword ptr [rbp - 0x14], eax
0x4000b0:	cmp	dword ptr [rbp - 0x14], 5
0x4000b4:	jg	0x4000d5
<Block for 0x4000b6, 31 bytes>
0x4000b6:	lea	rcx, [rip + 0xbb]
0x4000bd:	mov	edx, 0x3b
0x4000c2:	lea	rsi, [rip + 0x6f]
0x4000c9:	lea	rdi, [rip + 0x91]
0x4000d0:	call	0x500000
<Block for 0x4000d5, 16 bytes>
0x4000d5:	nop	
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	xor	rax, qword ptr fs:[0x28]
0x4000e3:	je	0x4000ea
<Block for 0x4000ea, 2 bytes>
0x4000ea:	leave	
0x4000eb:	ret	
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500008
