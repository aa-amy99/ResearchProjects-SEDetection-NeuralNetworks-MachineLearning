<Block for 0x4002f7, 46 bytes>
0x4002f7:	endbr64	
0x4002fb:	push	rbp
0x4002fc:	mov	rbp, rsp
0x4002ff:	push	rbx
0x400300:	sub	rsp, 0x168
0x400307:	mov	rax, qword ptr fs:[0x28]
0x400310:	mov	qword ptr [rbp - 0x18], rax
0x400314:	xor	eax, eax
0x400316:	lea	rax, [rbp - 0x160]
0x40031d:	mov	rdi, rax
0x400320:	call	0x4005d0
<Block for 0x400325, 52 bytes>
0x400325:	movabs	rax, 0x3d48544150
0x40032f:	mov	edx, 0
0x400334:	mov	qword ptr [rbp - 0x120], rax
0x40033b:	mov	qword ptr [rbp - 0x118], rdx
0x400342:	lea	rdx, [rbp - 0x110]
0x400349:	mov	eax, 0
0x40034e:	mov	ecx, 0x1d
0x400353:	mov	rdi, rdx
0x400356:	rep stosq	qword ptr [rdi], rax
<Block for 0x400359, 54 bytes>
0x400359:	mov	rdx, rdi
0x40035c:	mov	word ptr [rdx], ax
0x40035f:	add	rdx, 2
0x400363:	lea	rax, [rbp - 0x120]
0x40036a:	mov	qword ptr [rbp - 0x170], rax
0x400371:	mov	rdx, qword ptr [rbp - 0x170]
0x400378:	mov	rax, rdx
0x40037b:	mov	rcx, -1
0x400382:	mov	rsi, rax
0x400385:	mov	eax, 0
0x40038a:	mov	rdi, rsi
0x40038d:	repne scasb	al, byte ptr [rdi]
<Block for 0x400356, 3 bytes>
0x400356:	rep stosq	qword ptr [rdi], rax
<Block for 0x40038f, 38 bytes>
0x40038f:	mov	rax, rcx
0x400392:	not	rax
0x400395:	sub	rax, 1
0x400399:	add	rax, rdx
0x40039c:	mov	dword ptr [rax], 0x6e69622f
0x4003a2:	mov	byte ptr [rax + 4], 0
0x4003a6:	lea	rax, [rbp - 0x160]
0x4003ad:	mov	rdi, rax
0x4003b0:	call	0x400762
<Block for 0x40038d, 2 bytes>
0x40038d:	repne scasb	al, byte ptr [rdi]
<Block for 0x4003b5, 32 bytes>
0x4003b5:	mov	qword ptr [rbp - 0x168], rax
0x4003bc:	lea	rdx, [rbp - 0x168]
0x4003c3:	lea	rax, [rbp - 0x140]
0x4003ca:	mov	rsi, rdx
0x4003cd:	mov	rdi, rax
0x4003d0:	call	0x4007b2
<Block for 0x4003d5, 37 bytes>
0x4003d5:	lea	rdx, [rbp - 0x170]
0x4003dc:	mov	rsi, qword ptr [rbp - 0x140]
0x4003e3:	lea	rax, [rbp - 0x160]
0x4003ea:	mov	rcx, rdx
0x4003ed:	mov	edx, 1
0x4003f2:	mov	rdi, rax
0x4003f5:	call	0x4007e0
<Block for 0x4003fa, 15 bytes>
0x4003fa:	lea	rax, [rbp - 0x160]
0x400401:	mov	rdi, rax
0x400404:	call	0x400762
<Block for 0x400409, 32 bytes>
0x400409:	mov	qword ptr [rbp - 0x168], rax
0x400410:	lea	rdx, [rbp - 0x168]
0x400417:	lea	rax, [rbp - 0x140]
0x40041e:	mov	rsi, rdx
0x400421:	mov	rdi, rax
0x400424:	call	0x4007b2
<Block for 0x400429, 37 bytes>
0x400429:	lea	rdx, [rbp - 0x170]
0x400430:	mov	rsi, qword ptr [rbp - 0x140]
0x400437:	lea	rax, [rbp - 0x160]
0x40043e:	mov	rcx, rdx
0x400441:	mov	edx, 1
0x400446:	mov	rdi, rax
0x400449:	call	0x4007e0
<Block for 0x40044e, 15 bytes>
0x40044e:	lea	rax, [rbp - 0x160]
0x400455:	mov	rdi, rax
0x400458:	call	0x400762
<Block for 0x40045d, 32 bytes>
0x40045d:	mov	qword ptr [rbp - 0x168], rax
0x400464:	lea	rdx, [rbp - 0x168]
0x40046b:	lea	rax, [rbp - 0x140]
0x400472:	mov	rsi, rdx
0x400475:	mov	rdi, rax
0x400478:	call	0x4007b2
<Block for 0x40047d, 37 bytes>
0x40047d:	lea	rdx, [rbp - 0x170]
0x400484:	mov	rsi, qword ptr [rbp - 0x140]
0x40048b:	lea	rax, [rbp - 0x160]
0x400492:	mov	rcx, rdx
0x400495:	mov	edx, 1
0x40049a:	mov	rdi, rax
0x40049d:	call	0x4007e0
<Block for 0x4004a2, 25 bytes>
0x4004a2:	lea	rdx, [rbp - 0x160]
0x4004a9:	lea	rax, [rbp - 0x140]
0x4004b0:	mov	rsi, rdx
0x4004b3:	mov	rdi, rax
0x4004b6:	call	0x4008a6
<Block for 0x4004bb, 15 bytes>
0x4004bb:	lea	rax, [rbp - 0x140]
0x4004c2:	mov	rdi, rax
0x4004c5:	call	0x500038
<Block for 0x4004ca, 15 bytes>
0x4004ca:	lea	rax, [rbp - 0x140]
0x4004d1:	mov	rdi, rax
0x4004d4:	call	0x40071a
<Block for 0x4004d9, 15 bytes>
0x4004d9:	lea	rax, [rbp - 0x160]
0x4004e0:	mov	rdi, rax
0x4004e3:	call	0x40071a
<Block for 0x4004e8, 16 bytes>
0x4004e8:	nop	
0x4004e9:	mov	rax, qword ptr [rbp - 0x18]
0x4004ed:	xor	rax, qword ptr fs:[0x28]
0x4004f6:	je	0x400538
<Block for 0x400538, 10 bytes>
0x400538:	add	rsp, 0x168
0x40053f:	pop	rbx
0x400540:	pop	rbp
0x400541:	ret	
<Block for 0x4004f8, 2 bytes>
0x4004f8:	jmp	0x400533
<Block for 0x400533, 5 bytes>
0x400533:	call	0x500030
