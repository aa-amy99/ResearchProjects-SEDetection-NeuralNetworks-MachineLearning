<Block for 0x400144, 110 bytes>
0x400144:	endbr64	
0x400148:	push	rbp
0x400149:	mov	rbp, rsp
0x40014c:	sub	rsp, 0x140
0x400153:	mov	rax, qword ptr fs:[0x28]
0x40015c:	mov	qword ptr [rbp - 8], rax
0x400160:	xor	eax, eax
0x400162:	lea	rax, [rbp - 0x138]
0x400169:	mov	qword ptr [rbp - 0x130], rax
0x400170:	lea	rax, [rbp - 0x138]
0x400177:	mov	qword ptr [rbp - 0x128], rax
0x40017e:	movabs	rax, 0x3d48544150
0x400188:	mov	edx, 0
0x40018d:	mov	qword ptr [rbp - 0x110], rax
0x400194:	mov	qword ptr [rbp - 0x108], rdx
0x40019b:	lea	rdx, [rbp - 0x100]
0x4001a2:	mov	eax, 0
0x4001a7:	mov	ecx, 0x1d
0x4001ac:	mov	rdi, rdx
0x4001af:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001b2, 68 bytes>
0x4001b2:	mov	rdx, rdi
0x4001b5:	mov	word ptr [rdx], ax
0x4001b8:	add	rdx, 2
0x4001bc:	lea	rax, [rbp - 0x110]
0x4001c3:	mov	qword ptr [rbp - 0x138], rax
0x4001ca:	mov	rax, qword ptr [rbp - 0x130]
0x4001d1:	mov	rax, qword ptr [rax]
0x4001d4:	mov	qword ptr [rbp - 0x120], rax
0x4001db:	mov	rax, qword ptr [rbp - 0x120]
0x4001e2:	mov	rcx, -1
0x4001e9:	mov	rdx, rax
0x4001ec:	mov	eax, 0
0x4001f1:	mov	rdi, rdx
0x4001f4:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001af, 3 bytes>
0x4001af:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001f6, 79 bytes>
0x4001f6:	mov	rax, rcx
0x4001f9:	not	rax
0x4001fc:	lea	rdx, [rax - 1]
0x400200:	mov	rax, qword ptr [rbp - 0x120]
0x400207:	add	rax, rdx
0x40020a:	mov	dword ptr [rax], 0x6e69622f
0x400210:	mov	byte ptr [rax + 4], 0
0x400214:	mov	rax, qword ptr [rbp - 0x130]
0x40021b:	mov	rdx, qword ptr [rbp - 0x120]
0x400222:	mov	qword ptr [rax], rdx
0x400225:	mov	rax, qword ptr [rbp - 0x128]
0x40022c:	mov	rax, qword ptr [rax]
0x40022f:	mov	qword ptr [rbp - 0x118], rax
0x400236:	mov	rax, qword ptr [rbp - 0x118]
0x40023d:	mov	rdi, rax
0x400240:	call	0x500018
<Block for 0x4001f4, 2 bytes>
0x4001f4:	repne scasb	al, byte ptr [rdi]
<Block for 0x400245, 16 bytes>
0x400245:	nop	
0x400246:	mov	rax, qword ptr [rbp - 8]
0x40024a:	xor	rax, qword ptr fs:[0x28]
0x400253:	je	0x40025a
<Block for 0x40025a, 2 bytes>
0x40025a:	leave	
0x40025b:	ret	
<Block for 0x400255, 5 bytes>
0x400255:	call	0x500020
