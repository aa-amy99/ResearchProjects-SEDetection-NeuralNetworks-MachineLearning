<Block for 0x400063, 42 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	mov	rax, qword ptr fs:[0x28]
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	xor	eax, eax
0x40007e:	mov	byte ptr [rbp - 0xd], 0x20
0x400082:	movsx	eax, byte ptr [rbp - 0xd]
0x400086:	mov	edi, eax
0x400088:	call	0x500018
<Block for 0x40008d, 34 bytes>
0x40008d:	mov	byte ptr [rbp - 0xd], al
0x400090:	mov	byte ptr [rbp - 0xc], 0x78
0x400094:	movzx	eax, byte ptr [rbp - 0xd]
0x400098:	mov	byte ptr [rbp - 0xb], al
0x40009b:	mov	byte ptr [rbp - 0xa], 0x7a
0x40009f:	mov	byte ptr [rbp - 9], 0
0x4000a3:	lea	rax, [rbp - 0xc]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500008
<Block for 0x4000af, 16 bytes>
0x4000af:	nop	
0x4000b0:	mov	rax, qword ptr [rbp - 8]
0x4000b4:	xor	rax, qword ptr fs:[0x28]
0x4000bd:	je	0x4000c4
<Block for 0x4000c4, 2 bytes>
0x4000c4:	leave	
0x4000c5:	ret	
<Block for 0x4000bf, 5 bytes>
0x4000bf:	call	0x500010
