<Block for 0x400155, 47 bytes>
0x400155:	endbr64	
0x400159:	push	rbp
0x40015a:	mov	rbp, rsp
0x40015d:	push	rbx
0x40015e:	sub	rsp, 0x88
0x400165:	mov	rax, qword ptr fs:[0x28]
0x40016e:	mov	qword ptr [rbp - 0x18], rax
0x400172:	xor	eax, eax
0x400174:	mov	qword ptr [rbp - 0x90], 0
0x40017f:	call	0x40000f
<Block for 0x400184, 9 bytes>
0x400184:	test	eax, eax
0x400186:	setne	al
0x400189:	test	al, al
0x40018b:	je	0x40019b
<Block for 0x40019b, 10 bytes>
0x40019b:	mov	edi, 0x64
0x4001a0:	call	0x500000
<Block for 0x40018d, 12 bytes>
0x40018d:	lea	rdi, [rip + 0x24a]
0x400194:	call	0x500010
<Block for 0x4001a5, 32 bytes>
0x4001a5:	mov	qword ptr [rbp - 0x88], rax
0x4001ac:	mov	rax, qword ptr [rbp - 0x88]
0x4001b3:	mov	edx, 0x63
0x4001b8:	mov	esi, 0x41
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500008
<Block for 0x400199, 2 bytes>
0x400199:	jmp	0x4001e1
<Block for 0x4001c5, 50 bytes>
0x4001c5:	mov	rax, qword ptr [rbp - 0x88]
0x4001cc:	add	rax, 0x63
0x4001d0:	mov	byte ptr [rax], 0
0x4001d3:	mov	rax, qword ptr [rbp - 0x88]
0x4001da:	mov	qword ptr [rbp - 0x90], rax
0x4001e1:	lea	rax, [rbp - 0x80]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500008
<Block for 0x4001e1, 22 bytes>
0x4001e1:	lea	rax, [rbp - 0x80]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500008
<Block for 0x4001f7, 128 bytes>
0x4001f7:	mov	byte ptr [rbp - 0x1d], 0
0x4001fb:	mov	rax, qword ptr [rbp - 0x90]
0x400202:	mov	rcx, qword ptr [rax]
0x400205:	mov	rbx, qword ptr [rax + 8]
0x400209:	mov	qword ptr [rbp - 0x80], rcx
0x40020d:	mov	qword ptr [rbp - 0x78], rbx
0x400211:	mov	rcx, qword ptr [rax + 0x10]
0x400215:	mov	rbx, qword ptr [rax + 0x18]
0x400219:	mov	qword ptr [rbp - 0x70], rcx
0x40021d:	mov	qword ptr [rbp - 0x68], rbx
0x400221:	mov	rcx, qword ptr [rax + 0x20]
0x400225:	mov	rbx, qword ptr [rax + 0x28]
0x400229:	mov	qword ptr [rbp - 0x60], rcx
0x40022d:	mov	qword ptr [rbp - 0x58], rbx
0x400231:	mov	rcx, qword ptr [rax + 0x30]
0x400235:	mov	rbx, qword ptr [rax + 0x38]
0x400239:	mov	qword ptr [rbp - 0x50], rcx
0x40023d:	mov	qword ptr [rbp - 0x48], rbx
0x400241:	mov	rcx, qword ptr [rax + 0x40]
0x400245:	mov	rbx, qword ptr [rax + 0x48]
0x400249:	mov	qword ptr [rbp - 0x40], rcx
0x40024d:	mov	qword ptr [rbp - 0x38], rbx
0x400251:	mov	rcx, qword ptr [rax + 0x50]
0x400255:	mov	rbx, qword ptr [rax + 0x58]
0x400259:	mov	qword ptr [rbp - 0x30], rcx
0x40025d:	mov	qword ptr [rbp - 0x28], rbx
0x400261:	mov	eax, dword ptr [rax + 0x60]
0x400264:	mov	dword ptr [rbp - 0x20], eax
0x400267:	mov	byte ptr [rbp - 0x1d], 0
0x40026b:	lea	rax, [rbp - 0x80]
0x40026f:	mov	rdi, rax
0x400272:	call	0x500010
<Block for 0x400277, 16 bytes>
0x400277:	nop	
0x400278:	mov	rax, qword ptr [rbp - 0x18]
0x40027c:	xor	rax, qword ptr fs:[0x28]
0x400285:	je	0x40028c
<Block for 0x40028c, 10 bytes>
0x40028c:	add	rsp, 0x88
0x400293:	pop	rbx
0x400294:	pop	rbp
0x400295:	ret	
<Block for 0x400287, 5 bytes>
0x400287:	call	0x500018
