<Block for 0x400296, 47 bytes>
0x400296:	endbr64	
0x40029a:	push	rbp
0x40029b:	mov	rbp, rsp
0x40029e:	push	rbx
0x40029f:	sub	rsp, 0x88
0x4002a6:	mov	rax, qword ptr fs:[0x28]
0x4002af:	mov	qword ptr [rbp - 0x18], rax
0x4002b3:	xor	eax, eax
0x4002b5:	mov	qword ptr [rbp - 0x90], 0
0x4002c0:	call	0x400000
<Block for 0x4002c5, 9 bytes>
0x4002c5:	test	eax, eax
0x4002c7:	setne	al
0x4002ca:	test	al, al
0x4002cc:	je	0x400314
<Block for 0x400314, 22 bytes>
0x400314:	lea	rax, [rbp - 0x80]
0x400318:	mov	edx, 0x63
0x40031d:	mov	esi, 0x43
0x400322:	mov	rdi, rax
0x400325:	call	0x500008
<Block for 0x4002ce, 10 bytes>
0x4002ce:	mov	edi, 0x64
0x4002d3:	call	0x500000
<Block for 0x40032a, 128 bytes>
0x40032a:	mov	byte ptr [rbp - 0x1d], 0
0x40032e:	mov	rax, qword ptr [rbp - 0x90]
0x400335:	mov	rcx, qword ptr [rax]
0x400338:	mov	rbx, qword ptr [rax + 8]
0x40033c:	mov	qword ptr [rbp - 0x80], rcx
0x400340:	mov	qword ptr [rbp - 0x78], rbx
0x400344:	mov	rcx, qword ptr [rax + 0x10]
0x400348:	mov	rbx, qword ptr [rax + 0x18]
0x40034c:	mov	qword ptr [rbp - 0x70], rcx
0x400350:	mov	qword ptr [rbp - 0x68], rbx
0x400354:	mov	rcx, qword ptr [rax + 0x20]
0x400358:	mov	rbx, qword ptr [rax + 0x28]
0x40035c:	mov	qword ptr [rbp - 0x60], rcx
0x400360:	mov	qword ptr [rbp - 0x58], rbx
0x400364:	mov	rcx, qword ptr [rax + 0x30]
0x400368:	mov	rbx, qword ptr [rax + 0x38]
0x40036c:	mov	qword ptr [rbp - 0x50], rcx
0x400370:	mov	qword ptr [rbp - 0x48], rbx
0x400374:	mov	rcx, qword ptr [rax + 0x40]
0x400378:	mov	rbx, qword ptr [rax + 0x48]
0x40037c:	mov	qword ptr [rbp - 0x40], rcx
0x400380:	mov	qword ptr [rbp - 0x38], rbx
0x400384:	mov	rcx, qword ptr [rax + 0x50]
0x400388:	mov	rbx, qword ptr [rax + 0x58]
0x40038c:	mov	qword ptr [rbp - 0x30], rcx
0x400390:	mov	qword ptr [rbp - 0x28], rbx
0x400394:	mov	eax, dword ptr [rax + 0x60]
0x400397:	mov	dword ptr [rbp - 0x20], eax
0x40039a:	mov	byte ptr [rbp - 0x1d], 0
0x40039e:	lea	rax, [rbp - 0x80]
0x4003a2:	mov	rdi, rax
0x4003a5:	call	0x500010
<Block for 0x4002d8, 32 bytes>
0x4002d8:	mov	qword ptr [rbp - 0x88], rax
0x4002df:	mov	rax, qword ptr [rbp - 0x88]
0x4002e6:	mov	edx, 0x63
0x4002eb:	mov	esi, 0x41
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500008
<Block for 0x4003aa, 16 bytes>
0x4003aa:	nop	
0x4003ab:	mov	rax, qword ptr [rbp - 0x18]
0x4003af:	xor	rax, qword ptr fs:[0x28]
0x4003b8:	je	0x4003bf
<Block for 0x4002f8, 50 bytes>
0x4002f8:	mov	rax, qword ptr [rbp - 0x88]
0x4002ff:	add	rax, 0x63
0x400303:	mov	byte ptr [rax], 0
0x400306:	mov	rax, qword ptr [rbp - 0x88]
0x40030d:	mov	qword ptr [rbp - 0x90], rax
0x400314:	lea	rax, [rbp - 0x80]
0x400318:	mov	edx, 0x63
0x40031d:	mov	esi, 0x43
0x400322:	mov	rdi, rax
0x400325:	call	0x500008
<Block for 0x4003bf, 10 bytes>
0x4003bf:	add	rsp, 0x88
0x4003c6:	pop	rbx
0x4003c7:	pop	rbp
0x4003c8:	ret	
<Block for 0x4003ba, 5 bytes>
0x4003ba:	call	0x500018
