<Block for 0x4001ac, 85 bytes>
0x4001ac:	endbr64	
0x4001b0:	push	rbp
0x4001b1:	mov	rbp, rsp
0x4001b4:	push	rbx
0x4001b5:	sub	rsp, 0x88
0x4001bc:	mov	rax, qword ptr fs:[0x28]
0x4001c5:	mov	qword ptr [rbp - 0x18], rax
0x4001c9:	xor	eax, eax
0x4001cb:	mov	eax, 0x10
0x4001d0:	sub	rax, 1
0x4001d4:	add	rax, 0x6c
0x4001d8:	mov	esi, 0x10
0x4001dd:	mov	edx, 0
0x4001e2:	div	rsi
0x4001e5:	imul	rax, rax, 0x10
0x4001e9:	mov	rdx, rax
0x4001ec:	and	rdx, 0xfffffffffffff000
0x4001f3:	mov	rbx, rsp
0x4001f6:	sub	rbx, rdx
0x4001f9:	mov	rdx, rbx
0x4001fc:	cmp	rsp, rdx
0x4001ff:	je	0x400213
<Block for 0x400213, 26 bytes>
0x400213:	mov	rdx, rax
0x400216:	and	edx, 0xfff
0x40021c:	sub	rsp, rdx
0x40021f:	mov	rdx, rax
0x400222:	and	edx, 0xfff
0x400228:	test	rdx, rdx
0x40022b:	je	0x40023d
<Block for 0x400201, 18 bytes>
0x400201:	sub	rsp, 0x1000
0x400208:	or	qword ptr [rsp + 0xff8], 0
0x400211:	jmp	0x4001fc
<Block for 0x40023d, 47 bytes>
0x40023d:	mov	rax, rsp
0x400240:	add	rax, 0xf
0x400244:	shr	rax, 4
0x400248:	shl	rax, 4
0x40024c:	mov	qword ptr [rbp - 0x88], rax
0x400253:	mov	rax, qword ptr [rbp - 0x88]
0x40025a:	mov	edx, 0x63
0x40025f:	mov	esi, 0x41
0x400264:	mov	rdi, rax
0x400267:	call	0x500000
<Block for 0x40022d, 63 bytes>
0x40022d:	and	eax, 0xfff
0x400232:	sub	rax, 8
0x400236:	add	rax, rsp
0x400239:	or	qword ptr [rax], 0
0x40023d:	mov	rax, rsp
0x400240:	add	rax, 0xf
0x400244:	shr	rax, 4
0x400248:	shl	rax, 4
0x40024c:	mov	qword ptr [rbp - 0x88], rax
0x400253:	mov	rax, qword ptr [rbp - 0x88]
0x40025a:	mov	edx, 0x63
0x40025f:	mov	esi, 0x41
0x400264:	mov	rdi, rax
0x400267:	call	0x500000
<Block for 0x4001fc, 5 bytes>
0x4001fc:	cmp	rsp, rdx
0x4001ff:	je	0x400213
<Block for 0x40026c, 24 bytes>
0x40026c:	mov	rax, qword ptr [rbp - 0x88]
0x400273:	add	rax, 0x63
0x400277:	mov	byte ptr [rax], 0
0x40027a:	mov	eax, 0
0x40027f:	call	0x500020
<Block for 0x400284, 4 bytes>
0x400284:	test	eax, eax
0x400286:	je	0x400296
<Block for 0x400296, 36 bytes>
0x400296:	mov	rax, qword ptr [rbp - 0x88]
0x40029d:	mov	qword ptr [rbp - 0x90], rax
0x4002a4:	lea	rax, [rbp - 0x80]
0x4002a8:	mov	edx, 0x63
0x4002ad:	mov	esi, 0x43
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500000
<Block for 0x400288, 12 bytes>
0x400288:	lea	rdi, [rip + 0x29a]
0x40028f:	call	0x500010
<Block for 0x4002ba, 141 bytes>
0x4002ba:	mov	byte ptr [rbp - 0x1d], 0
0x4002be:	mov	rax, qword ptr [rbp - 0x90]
0x4002c5:	mov	rcx, qword ptr [rbp - 0x80]
0x4002c9:	mov	rbx, qword ptr [rbp - 0x78]
0x4002cd:	mov	qword ptr [rax], rcx
0x4002d0:	mov	qword ptr [rax + 8], rbx
0x4002d4:	mov	rcx, qword ptr [rbp - 0x70]
0x4002d8:	mov	rbx, qword ptr [rbp - 0x68]
0x4002dc:	mov	qword ptr [rax + 0x10], rcx
0x4002e0:	mov	qword ptr [rax + 0x18], rbx
0x4002e4:	mov	rcx, qword ptr [rbp - 0x60]
0x4002e8:	mov	rbx, qword ptr [rbp - 0x58]
0x4002ec:	mov	qword ptr [rax + 0x20], rcx
0x4002f0:	mov	qword ptr [rax + 0x28], rbx
0x4002f4:	mov	rcx, qword ptr [rbp - 0x50]
0x4002f8:	mov	rbx, qword ptr [rbp - 0x48]
0x4002fc:	mov	qword ptr [rax + 0x30], rcx
0x400300:	mov	qword ptr [rax + 0x38], rbx
0x400304:	mov	rcx, qword ptr [rbp - 0x40]
0x400308:	mov	rbx, qword ptr [rbp - 0x38]
0x40030c:	mov	qword ptr [rax + 0x40], rcx
0x400310:	mov	qword ptr [rax + 0x48], rbx
0x400314:	mov	rcx, qword ptr [rbp - 0x30]
0x400318:	mov	rbx, qword ptr [rbp - 0x28]
0x40031c:	mov	qword ptr [rax + 0x50], rcx
0x400320:	mov	qword ptr [rax + 0x58], rbx
0x400324:	mov	edx, dword ptr [rbp - 0x20]
0x400327:	mov	dword ptr [rax + 0x60], edx
0x40032a:	mov	rax, qword ptr [rbp - 0x90]
0x400331:	add	rax, 0x63
0x400335:	mov	byte ptr [rax], 0
0x400338:	mov	rax, qword ptr [rbp - 0x90]
0x40033f:	mov	rdi, rax
0x400342:	call	0x500010
<Block for 0x400294, 2 bytes>
0x400294:	jmp	0x4002a4
<Block for 0x400347, 16 bytes>
0x400347:	nop	
0x400348:	mov	rax, qword ptr [rbp - 0x18]
0x40034c:	xor	rax, qword ptr fs:[0x28]
0x400355:	je	0x40035c
<Block for 0x4002a4, 22 bytes>
0x4002a4:	lea	rax, [rbp - 0x80]
0x4002a8:	mov	edx, 0x63
0x4002ad:	mov	esi, 0x43
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500000
<Block for 0x40035c, 6 bytes>
0x40035c:	mov	rbx, qword ptr [rbp - 8]
0x400360:	leave	
0x400361:	ret	
<Block for 0x400357, 5 bytes>
0x400357:	call	0x500018
