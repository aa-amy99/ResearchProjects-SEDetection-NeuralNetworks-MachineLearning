<Block for 0x400362, 85 bytes>
0x400362:	endbr64	
0x400366:	push	rbp
0x400367:	mov	rbp, rsp
0x40036a:	push	rbx
0x40036b:	sub	rsp, 0x88
0x400372:	mov	rax, qword ptr fs:[0x28]
0x40037b:	mov	qword ptr [rbp - 0x18], rax
0x40037f:	xor	eax, eax
0x400381:	mov	eax, 0x10
0x400386:	sub	rax, 1
0x40038a:	add	rax, 0x6c
0x40038e:	mov	esi, 0x10
0x400393:	mov	edx, 0
0x400398:	div	rsi
0x40039b:	imul	rax, rax, 0x10
0x40039f:	mov	rdx, rax
0x4003a2:	and	rdx, 0xfffffffffffff000
0x4003a9:	mov	rbx, rsp
0x4003ac:	sub	rbx, rdx
0x4003af:	mov	rdx, rbx
0x4003b2:	cmp	rsp, rdx
0x4003b5:	je	0x4003c9
<Block for 0x4003c9, 26 bytes>
0x4003c9:	mov	rdx, rax
0x4003cc:	and	edx, 0xfff
0x4003d2:	sub	rsp, rdx
0x4003d5:	mov	rdx, rax
0x4003d8:	and	edx, 0xfff
0x4003de:	test	rdx, rdx
0x4003e1:	je	0x4003f3
<Block for 0x4003b7, 18 bytes>
0x4003b7:	sub	rsp, 0x1000
0x4003be:	or	qword ptr [rsp + 0xff8], 0
0x4003c7:	jmp	0x4003b2
<Block for 0x4003f3, 47 bytes>
0x4003f3:	mov	rax, rsp
0x4003f6:	add	rax, 0xf
0x4003fa:	shr	rax, 4
0x4003fe:	shl	rax, 4
0x400402:	mov	qword ptr [rbp - 0x88], rax
0x400409:	mov	rax, qword ptr [rbp - 0x88]
0x400410:	mov	edx, 0x63
0x400415:	mov	esi, 0x41
0x40041a:	mov	rdi, rax
0x40041d:	call	0x500000
<Block for 0x4003e3, 63 bytes>
0x4003e3:	and	eax, 0xfff
0x4003e8:	sub	rax, 8
0x4003ec:	add	rax, rsp
0x4003ef:	or	qword ptr [rax], 0
0x4003f3:	mov	rax, rsp
0x4003f6:	add	rax, 0xf
0x4003fa:	shr	rax, 4
0x4003fe:	shl	rax, 4
0x400402:	mov	qword ptr [rbp - 0x88], rax
0x400409:	mov	rax, qword ptr [rbp - 0x88]
0x400410:	mov	edx, 0x63
0x400415:	mov	esi, 0x41
0x40041a:	mov	rdi, rax
0x40041d:	call	0x500000
<Block for 0x4003b2, 5 bytes>
0x4003b2:	cmp	rsp, rdx
0x4003b5:	je	0x4003c9
<Block for 0x400422, 24 bytes>
0x400422:	mov	rax, qword ptr [rbp - 0x88]
0x400429:	add	rax, 0x63
0x40042d:	mov	byte ptr [rax], 0
0x400430:	mov	eax, 0
0x400435:	call	0x500008
<Block for 0x40043a, 4 bytes>
0x40043a:	test	eax, eax
0x40043c:	je	0x40044c
<Block for 0x40044c, 22 bytes>
0x40044c:	lea	rax, [rbp - 0x80]
0x400450:	mov	edx, 0x63
0x400455:	mov	esi, 0x43
0x40045a:	mov	rdi, rax
0x40045d:	call	0x500000
<Block for 0x40043e, 36 bytes>
0x40043e:	mov	rax, qword ptr [rbp - 0x88]
0x400445:	mov	qword ptr [rbp - 0x90], rax
0x40044c:	lea	rax, [rbp - 0x80]
0x400450:	mov	edx, 0x63
0x400455:	mov	esi, 0x43
0x40045a:	mov	rdi, rax
0x40045d:	call	0x500000
<Block for 0x400462, 141 bytes>
0x400462:	mov	byte ptr [rbp - 0x1d], 0
0x400466:	mov	rax, qword ptr [rbp - 0x90]
0x40046d:	mov	rcx, qword ptr [rbp - 0x80]
0x400471:	mov	rbx, qword ptr [rbp - 0x78]
0x400475:	mov	qword ptr [rax], rcx
0x400478:	mov	qword ptr [rax + 8], rbx
0x40047c:	mov	rcx, qword ptr [rbp - 0x70]
0x400480:	mov	rbx, qword ptr [rbp - 0x68]
0x400484:	mov	qword ptr [rax + 0x10], rcx
0x400488:	mov	qword ptr [rax + 0x18], rbx
0x40048c:	mov	rcx, qword ptr [rbp - 0x60]
0x400490:	mov	rbx, qword ptr [rbp - 0x58]
0x400494:	mov	qword ptr [rax + 0x20], rcx
0x400498:	mov	qword ptr [rax + 0x28], rbx
0x40049c:	mov	rcx, qword ptr [rbp - 0x50]
0x4004a0:	mov	rbx, qword ptr [rbp - 0x48]
0x4004a4:	mov	qword ptr [rax + 0x30], rcx
0x4004a8:	mov	qword ptr [rax + 0x38], rbx
0x4004ac:	mov	rcx, qword ptr [rbp - 0x40]
0x4004b0:	mov	rbx, qword ptr [rbp - 0x38]
0x4004b4:	mov	qword ptr [rax + 0x40], rcx
0x4004b8:	mov	qword ptr [rax + 0x48], rbx
0x4004bc:	mov	rcx, qword ptr [rbp - 0x30]
0x4004c0:	mov	rbx, qword ptr [rbp - 0x28]
0x4004c4:	mov	qword ptr [rax + 0x50], rcx
0x4004c8:	mov	qword ptr [rax + 0x58], rbx
0x4004cc:	mov	edx, dword ptr [rbp - 0x20]
0x4004cf:	mov	dword ptr [rax + 0x60], edx
0x4004d2:	mov	rax, qword ptr [rbp - 0x90]
0x4004d9:	add	rax, 0x63
0x4004dd:	mov	byte ptr [rax], 0
0x4004e0:	mov	rax, qword ptr [rbp - 0x90]
0x4004e7:	mov	rdi, rax
0x4004ea:	call	0x500010
<Block for 0x4004ef, 16 bytes>
0x4004ef:	nop	
0x4004f0:	mov	rax, qword ptr [rbp - 0x18]
0x4004f4:	xor	rax, qword ptr fs:[0x28]
0x4004fd:	je	0x400504
<Block for 0x400504, 6 bytes>
0x400504:	mov	rbx, qword ptr [rbp - 8]
0x400508:	leave	
0x400509:	ret	
<Block for 0x4004ff, 5 bytes>
0x4004ff:	call	0x500018
