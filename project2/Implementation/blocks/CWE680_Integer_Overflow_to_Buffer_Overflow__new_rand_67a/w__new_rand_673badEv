<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400023:	call	0x500000
<Block for 0x400028, 7 bytes>
0x400028:	and	eax, 1
0x40002b:	test	eax, eax
0x40002d:	je	0x40004c
<Block for 0x40004c, 5 bytes>
0x40004c:	call	0x500000
<Block for 0x40002f, 5 bytes>
0x40002f:	call	0x500000
<Block for 0x400051, 10 bytes>
0x400051:	shl	eax, 0x1e
0x400054:	mov	ebx, eax
0x400056:	call	0x500000
<Block for 0x400034, 10 bytes>
0x400034:	shl	eax, 0x1e
0x400037:	mov	ebx, eax
0x400039:	call	0x500000
<Block for 0x40005b, 10 bytes>
0x40005b:	shl	eax, 0xf
0x40005e:	xor	ebx, eax
0x400060:	call	0x500000
<Block for 0x40003e, 10 bytes>
0x40003e:	shl	eax, 0xf
0x400041:	xor	ebx, eax
0x400043:	call	0x500000
<Block for 0x400065, 23 bytes>
0x400065:	xor	eax, ebx
0x400067:	not	eax
0x400069:	mov	dword ptr [rbp - 0x1c], eax
0x40006c:	mov	eax, dword ptr [rbp - 0x1c]
0x40006f:	mov	dword ptr [rbp - 0x20], eax
0x400072:	mov	eax, dword ptr [rbp - 0x20]
0x400075:	mov	edi, eax
0x400077:	call	0x500008
<Block for 0x400048, 4 bytes>
0x400048:	xor	eax, ebx
0x40004a:	jmp	0x400069
<Block for 0x40007c, 16 bytes>
0x40007c:	nop	
0x40007d:	mov	rax, qword ptr [rbp - 0x18]
0x400081:	xor	rax, qword ptr fs:[0x28]
0x40008a:	je	0x400091
<Block for 0x400069, 19 bytes>
0x400069:	mov	dword ptr [rbp - 0x1c], eax
0x40006c:	mov	eax, dword ptr [rbp - 0x1c]
0x40006f:	mov	dword ptr [rbp - 0x20], eax
0x400072:	mov	eax, dword ptr [rbp - 0x20]
0x400075:	mov	edi, eax
0x400077:	call	0x500008
<Block for 0x400091, 7 bytes>
0x400091:	add	rsp, 0x18
0x400095:	pop	rbx
0x400096:	pop	rbp
0x400097:	ret	
<Block for 0x40008c, 5 bytes>
0x40008c:	call	0x500010
