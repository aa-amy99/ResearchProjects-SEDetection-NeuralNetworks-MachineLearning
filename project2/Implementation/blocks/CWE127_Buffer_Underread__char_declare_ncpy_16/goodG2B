<Block for 0x4000b4, 55 bytes>
0x4000b4:	endbr64	
0x4000b8:	push	rbp
0x4000b9:	mov	rbp, rsp
0x4000bc:	sub	rsp, 0xf0
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	lea	rax, [rbp - 0xe0]
0x4000d9:	mov	edx, 0x63
0x4000de:	mov	esi, 0x41
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500000
<Block for 0x4000eb, 41 bytes>
0x4000eb:	mov	byte ptr [rbp - 0x7d], 0
0x4000ef:	lea	rax, [rbp - 0xe0]
0x4000f6:	mov	qword ptr [rbp - 0xe8], rax
0x4000fd:	nop	
0x4000fe:	lea	rax, [rbp - 0x70]
0x400102:	mov	edx, 0x63
0x400107:	mov	esi, 0x43
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500000
<Block for 0x400114, 16 bytes>
0x400114:	mov	byte ptr [rbp - 0xd], 0
0x400118:	lea	rax, [rbp - 0x70]
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500008
<Block for 0x400124, 25 bytes>
0x400124:	mov	rdx, rax
0x400127:	mov	rcx, qword ptr [rbp - 0xe8]
0x40012e:	lea	rax, [rbp - 0x70]
0x400132:	mov	rsi, rcx
0x400135:	mov	rdi, rax
0x400138:	call	0x500010
<Block for 0x40013d, 16 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	rdi, rax
0x400148:	call	0x500018
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500020
