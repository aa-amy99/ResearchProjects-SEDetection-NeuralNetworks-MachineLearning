<Block for 0x400286, 26 bytes>
0x400286:	endbr64	
0x40028a:	push	rbp
0x40028b:	mov	rbp, rsp
0x40028e:	sub	rsp, 0x20
0x400292:	mov	qword ptr [rbp - 0x18], rdi
0x400296:	mov	eax, dword ptr [rip + 0x158]
0x40029c:	test	eax, eax
0x40029e:	je	0x4002ed
<Block for 0x4002ed, 3 bytes>
0x4002ed:	nop	
0x4002ee:	leave	
0x4002ef:	ret	
<Block for 0x4002a0, 10 bytes>
0x4002a0:	mov	qword ptr [rbp - 8], 0
0x4002a8:	jmp	0x4002cf
<Block for 0x4002cf, 12 bytes>
0x4002cf:	mov	rax, qword ptr [rbp - 0x18]
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x500020
<Block for 0x4002db, 6 bytes>
0x4002db:	cmp	qword ptr [rbp - 8], rax
0x4002df:	jb	0x4002aa
<Block for 0x4002aa, 18 bytes>
0x4002aa:	mov	rdx, qword ptr [rbp - 0x18]
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	add	rax, rdx
0x4002b5:	movzx	eax, byte ptr [rax]
0x4002b8:	cmp	al, 0x53
0x4002ba:	jne	0x4002ca
<Block for 0x4002e1, 12 bytes>
0x4002e1:	mov	rax, qword ptr [rbp - 0x18]
0x4002e5:	mov	rdi, rax
0x4002e8:	call	0x500008
<Block for 0x4002bc, 12 bytes>
0x4002bc:	lea	rdi, [rip + 0x135]
0x4002c3:	call	0x500000
<Block for 0x4002ca, 17 bytes>
0x4002ca:	add	qword ptr [rbp - 8], 1
0x4002cf:	mov	rax, qword ptr [rbp - 0x18]
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x500020
<Block for 0x4002c8, 2 bytes>
0x4002c8:	jmp	0x4002e1
