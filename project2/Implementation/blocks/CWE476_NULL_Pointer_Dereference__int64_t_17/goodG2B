<Block for 0x4000af, 44 bytes>
0x4000af:	endbr64	
0x4000b3:	push	rbp
0x4000b4:	mov	rbp, rsp
0x4000b7:	sub	rsp, 0x20
0x4000bb:	mov	rax, qword ptr fs:[0x28]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	xor	eax, eax
0x4000ca:	mov	qword ptr [rbp - 0x18], 5
0x4000d2:	mov	dword ptr [rbp - 0x20], 0
0x4000d9:	jmp	0x4000e7
<Block for 0x4000e7, 6 bytes>
0x4000e7:	cmp	dword ptr [rbp - 0x20], 0
0x4000eb:	jle	0x4000db
<Block for 0x4000db, 18 bytes>
0x4000db:	lea	rax, [rbp - 0x18]
0x4000df:	mov	qword ptr [rbp - 0x10], rax
0x4000e3:	add	dword ptr [rbp - 0x20], 1
0x4000e7:	cmp	dword ptr [rbp - 0x20], 0
0x4000eb:	jle	0x4000db
<Block for 0x4000ed, 9 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x1c], 0
0x4000f4:	jmp	0x400109
<Block for 0x400109, 6 bytes>
0x400109:	cmp	dword ptr [rbp - 0x1c], 0
0x40010d:	jle	0x4000f6
<Block for 0x4000f6, 15 bytes>
0x4000f6:	mov	rax, qword ptr [rbp - 0x10]
0x4000fa:	mov	rax, qword ptr [rax]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500000
<Block for 0x40010f, 16 bytes>
0x40010f:	nop	
0x400110:	mov	rax, qword ptr [rbp - 8]
0x400114:	xor	rax, qword ptr fs:[0x28]
0x40011d:	je	0x400124
<Block for 0x400105, 10 bytes>
0x400105:	add	dword ptr [rbp - 0x1c], 1
0x400109:	cmp	dword ptr [rbp - 0x1c], 0
0x40010d:	jle	0x4000f6
<Block for 0x400124, 2 bytes>
0x400124:	leave	
0x400125:	ret	
<Block for 0x40011f, 5 bytes>
0x40011f:	call	0x500010
