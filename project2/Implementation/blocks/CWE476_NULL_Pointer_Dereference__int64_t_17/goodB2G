<Block for 0x40004d, 21 bytes>
0x40004d:	endbr64	
0x400051:	push	rbp
0x400052:	mov	rbp, rsp
0x400055:	sub	rsp, 0x10
0x400059:	mov	dword ptr [rbp - 0x10], 0
0x400060:	jmp	0x40006e
<Block for 0x40006e, 6 bytes>
0x40006e:	cmp	dword ptr [rbp - 0x10], 0
0x400072:	jle	0x400062
<Block for 0x400062, 18 bytes>
0x400062:	mov	qword ptr [rbp - 8], 0
0x40006a:	add	dword ptr [rbp - 0x10], 1
0x40006e:	cmp	dword ptr [rbp - 0x10], 0
0x400072:	jle	0x400062
<Block for 0x400074, 9 bytes>
0x400074:	mov	dword ptr [rbp - 0xc], 0
0x40007b:	jmp	0x4000a5
<Block for 0x4000a5, 6 bytes>
0x4000a5:	cmp	dword ptr [rbp - 0xc], 0
0x4000a9:	jle	0x40007d
<Block for 0x40007d, 7 bytes>
0x40007d:	cmp	qword ptr [rbp - 8], 0
0x400082:	je	0x400095
<Block for 0x4000ab, 4 bytes>
0x4000ab:	nop	
0x4000ac:	nop	
0x4000ad:	leave	
0x4000ae:	ret	
<Block for 0x400095, 12 bytes>
0x400095:	lea	rdi, [rip + 0xa9]
0x40009c:	call	0x500008
<Block for 0x400084, 15 bytes>
0x400084:	mov	rax, qword ptr [rbp - 8]
0x400088:	mov	rax, qword ptr [rax]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500000
<Block for 0x4000a1, 10 bytes>
0x4000a1:	add	dword ptr [rbp - 0xc], 1
0x4000a5:	cmp	dword ptr [rbp - 0xc], 0
0x4000a9:	jle	0x40007d
<Block for 0x400093, 2 bytes>
0x400093:	jmp	0x4000a1
