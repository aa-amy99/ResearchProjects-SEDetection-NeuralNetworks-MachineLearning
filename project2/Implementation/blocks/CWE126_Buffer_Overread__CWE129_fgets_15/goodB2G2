<Block for 0x4001b2, 79 bytes>
0x4001b2:	endbr64	
0x4001b6:	push	rbp
0x4001b7:	mov	rbp, rsp
0x4001ba:	sub	rsp, 0x50
0x4001be:	mov	rax, qword ptr fs:[0x28]
0x4001c7:	mov	qword ptr [rbp - 8], rax
0x4001cb:	xor	eax, eax
0x4001cd:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4001d4:	mov	qword ptr [rbp - 0x16], 0
0x4001dc:	mov	dword ptr [rbp - 0xe], 0
0x4001e3:	mov	word ptr [rbp - 0xa], 0
0x4001e9:	mov	rdx, qword ptr [rip + 0xffe10]
0x4001f0:	lea	rax, [rbp - 0x16]
0x4001f4:	mov	esi, 0xe
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500008
<Block for 0x400201, 5 bytes>
0x400201:	test	rax, rax
0x400204:	je	0x400217
<Block for 0x400217, 12 bytes>
0x400217:	lea	rdi, [rip + 0x1c2]
0x40021e:	call	0x500018
<Block for 0x400206, 12 bytes>
0x400206:	lea	rax, [rbp - 0x16]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500010
<Block for 0x400223, 47 bytes>
0x400223:	nop	
0x400224:	mov	qword ptr [rbp - 0x40], 0
0x40022c:	mov	qword ptr [rbp - 0x38], 0
0x400234:	mov	qword ptr [rbp - 0x30], 0
0x40023c:	mov	qword ptr [rbp - 0x28], 0
0x400244:	mov	qword ptr [rbp - 0x20], 0
0x40024c:	cmp	dword ptr [rbp - 0x44], 0
0x400250:	js	0x40026a
<Block for 0x400212, 5 bytes>
0x400212:	mov	dword ptr [rbp - 0x44], eax
0x400215:	jmp	0x400223
<Block for 0x40026a, 12 bytes>
0x40026a:	lea	rdi, [rip + 0x19f]
0x400271:	call	0x500018
<Block for 0x400252, 6 bytes>
0x400252:	cmp	dword ptr [rbp - 0x44], 9
0x400256:	jg	0x40026a
<Block for 0x400276, 17 bytes>
0x400276:	nop	
0x400277:	nop	
0x400278:	mov	rax, qword ptr [rbp - 8]
0x40027c:	xor	rax, qword ptr fs:[0x28]
0x400285:	je	0x40028c
<Block for 0x400258, 16 bytes>
0x400258:	mov	eax, dword ptr [rbp - 0x44]
0x40025b:	cdqe	
0x40025d:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400261:	mov	edi, eax
0x400263:	call	0x500020
<Block for 0x40028c, 2 bytes>
0x40028c:	leave	
0x40028d:	ret	
<Block for 0x400287, 5 bytes>
0x400287:	call	0x500028
<Block for 0x400268, 2 bytes>
0x400268:	jmp	0x400276
