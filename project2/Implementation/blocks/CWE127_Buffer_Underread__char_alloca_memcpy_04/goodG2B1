<Block for 0x40019a, 85 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	push	rbx
0x4001a3:	sub	rsp, 0x88
0x4001aa:	mov	rax, qword ptr fs:[0x28]
0x4001b3:	mov	qword ptr [rbp - 0x18], rax
0x4001b7:	xor	eax, eax
0x4001b9:	mov	eax, 0x10
0x4001be:	sub	rax, 1
0x4001c2:	add	rax, 0x6c
0x4001c6:	mov	esi, 0x10
0x4001cb:	mov	edx, 0
0x4001d0:	div	rsi
0x4001d3:	imul	rax, rax, 0x10
0x4001d7:	mov	rdx, rax
0x4001da:	and	rdx, 0xfffffffffffff000
0x4001e1:	mov	rbx, rsp
0x4001e4:	sub	rbx, rdx
0x4001e7:	mov	rdx, rbx
0x4001ea:	cmp	rsp, rdx
0x4001ed:	je	0x400201
<Block for 0x400201, 26 bytes>
0x400201:	mov	rdx, rax
0x400204:	and	edx, 0xfff
0x40020a:	sub	rsp, rdx
0x40020d:	mov	rdx, rax
0x400210:	and	edx, 0xfff
0x400216:	test	rdx, rdx
0x400219:	je	0x40022b
<Block for 0x4001ef, 18 bytes>
0x4001ef:	sub	rsp, 0x1000
0x4001f6:	or	qword ptr [rsp + 0xff8], 0
0x4001ff:	jmp	0x4001ea
<Block for 0x40022b, 47 bytes>
0x40022b:	mov	rax, rsp
0x40022e:	add	rax, 0xf
0x400232:	shr	rax, 4
0x400236:	shl	rax, 4
0x40023a:	mov	qword ptr [rbp - 0x88], rax
0x400241:	mov	rax, qword ptr [rbp - 0x88]
0x400248:	mov	edx, 0x63
0x40024d:	mov	esi, 0x41
0x400252:	mov	rdi, rax
0x400255:	call	0x500000
<Block for 0x40021b, 63 bytes>
0x40021b:	and	eax, 0xfff
0x400220:	sub	rax, 8
0x400224:	add	rax, rsp
0x400227:	or	qword ptr [rax], 0
0x40022b:	mov	rax, rsp
0x40022e:	add	rax, 0xf
0x400232:	shr	rax, 4
0x400236:	shl	rax, 4
0x40023a:	mov	qword ptr [rbp - 0x88], rax
0x400241:	mov	rax, qword ptr [rbp - 0x88]
0x400248:	mov	edx, 0x63
0x40024d:	mov	esi, 0x41
0x400252:	mov	rdi, rax
0x400255:	call	0x500000
<Block for 0x4001ea, 5 bytes>
0x4001ea:	cmp	rsp, rdx
0x4001ed:	je	0x400201
<Block for 0x40025a, 23 bytes>
0x40025a:	mov	rax, qword ptr [rbp - 0x88]
0x400261:	add	rax, 0x63
0x400265:	mov	byte ptr [rax], 0
0x400268:	mov	eax, 0
0x40026d:	test	eax, eax
0x40026f:	je	0x40027f
<Block for 0x40027f, 36 bytes>
0x40027f:	mov	rax, qword ptr [rbp - 0x88]
0x400286:	mov	qword ptr [rbp - 0x90], rax
0x40028d:	lea	rax, [rbp - 0x80]
0x400291:	mov	edx, 0x63
0x400296:	mov	esi, 0x43
0x40029b:	mov	rdi, rax
0x40029e:	call	0x500000
<Block for 0x400271, 12 bytes>
0x400271:	lea	rdi, [rip + 0x284]
0x400278:	call	0x500008
<Block for 0x4002a3, 128 bytes>
0x4002a3:	mov	byte ptr [rbp - 0x1d], 0
0x4002a7:	mov	rax, qword ptr [rbp - 0x90]
0x4002ae:	mov	rcx, qword ptr [rax]
0x4002b1:	mov	rbx, qword ptr [rax + 8]
0x4002b5:	mov	qword ptr [rbp - 0x80], rcx
0x4002b9:	mov	qword ptr [rbp - 0x78], rbx
0x4002bd:	mov	rcx, qword ptr [rax + 0x10]
0x4002c1:	mov	rbx, qword ptr [rax + 0x18]
0x4002c5:	mov	qword ptr [rbp - 0x70], rcx
0x4002c9:	mov	qword ptr [rbp - 0x68], rbx
0x4002cd:	mov	rcx, qword ptr [rax + 0x20]
0x4002d1:	mov	rbx, qword ptr [rax + 0x28]
0x4002d5:	mov	qword ptr [rbp - 0x60], rcx
0x4002d9:	mov	qword ptr [rbp - 0x58], rbx
0x4002dd:	mov	rcx, qword ptr [rax + 0x30]
0x4002e1:	mov	rbx, qword ptr [rax + 0x38]
0x4002e5:	mov	qword ptr [rbp - 0x50], rcx
0x4002e9:	mov	qword ptr [rbp - 0x48], rbx
0x4002ed:	mov	rcx, qword ptr [rax + 0x40]
0x4002f1:	mov	rbx, qword ptr [rax + 0x48]
0x4002f5:	mov	qword ptr [rbp - 0x40], rcx
0x4002f9:	mov	qword ptr [rbp - 0x38], rbx
0x4002fd:	mov	rcx, qword ptr [rax + 0x50]
0x400301:	mov	rbx, qword ptr [rax + 0x58]
0x400305:	mov	qword ptr [rbp - 0x30], rcx
0x400309:	mov	qword ptr [rbp - 0x28], rbx
0x40030d:	mov	eax, dword ptr [rax + 0x60]
0x400310:	mov	dword ptr [rbp - 0x20], eax
0x400313:	mov	byte ptr [rbp - 0x1d], 0
0x400317:	lea	rax, [rbp - 0x80]
0x40031b:	mov	rdi, rax
0x40031e:	call	0x500008
<Block for 0x40027d, 2 bytes>
0x40027d:	jmp	0x40028d
<Block for 0x400323, 16 bytes>
0x400323:	nop	
0x400324:	mov	rax, qword ptr [rbp - 0x18]
0x400328:	xor	rax, qword ptr fs:[0x28]
0x400331:	je	0x400338
<Block for 0x40028d, 22 bytes>
0x40028d:	lea	rax, [rbp - 0x80]
0x400291:	mov	edx, 0x63
0x400296:	mov	esi, 0x43
0x40029b:	mov	rdi, rax
0x40029e:	call	0x500000
<Block for 0x400338, 6 bytes>
0x400338:	mov	rbx, qword ptr [rbp - 8]
0x40033c:	leave	
0x40033d:	ret	
<Block for 0x400333, 5 bytes>
0x400333:	call	0x500010
