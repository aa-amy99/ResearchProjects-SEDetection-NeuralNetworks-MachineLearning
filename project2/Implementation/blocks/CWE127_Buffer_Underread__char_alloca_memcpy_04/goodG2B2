<Block for 0x40033e, 85 bytes>
0x40033e:	endbr64	
0x400342:	push	rbp
0x400343:	mov	rbp, rsp
0x400346:	push	rbx
0x400347:	sub	rsp, 0x88
0x40034e:	mov	rax, qword ptr fs:[0x28]
0x400357:	mov	qword ptr [rbp - 0x18], rax
0x40035b:	xor	eax, eax
0x40035d:	mov	eax, 0x10
0x400362:	sub	rax, 1
0x400366:	add	rax, 0x6c
0x40036a:	mov	esi, 0x10
0x40036f:	mov	edx, 0
0x400374:	div	rsi
0x400377:	imul	rax, rax, 0x10
0x40037b:	mov	rdx, rax
0x40037e:	and	rdx, 0xfffffffffffff000
0x400385:	mov	rbx, rsp
0x400388:	sub	rbx, rdx
0x40038b:	mov	rdx, rbx
0x40038e:	cmp	rsp, rdx
0x400391:	je	0x4003a5
<Block for 0x4003a5, 26 bytes>
0x4003a5:	mov	rdx, rax
0x4003a8:	and	edx, 0xfff
0x4003ae:	sub	rsp, rdx
0x4003b1:	mov	rdx, rax
0x4003b4:	and	edx, 0xfff
0x4003ba:	test	rdx, rdx
0x4003bd:	je	0x4003cf
<Block for 0x400393, 18 bytes>
0x400393:	sub	rsp, 0x1000
0x40039a:	or	qword ptr [rsp + 0xff8], 0
0x4003a3:	jmp	0x40038e
<Block for 0x4003cf, 47 bytes>
0x4003cf:	mov	rax, rsp
0x4003d2:	add	rax, 0xf
0x4003d6:	shr	rax, 4
0x4003da:	shl	rax, 4
0x4003de:	mov	qword ptr [rbp - 0x88], rax
0x4003e5:	mov	rax, qword ptr [rbp - 0x88]
0x4003ec:	mov	edx, 0x63
0x4003f1:	mov	esi, 0x41
0x4003f6:	mov	rdi, rax
0x4003f9:	call	0x500000
<Block for 0x4003bf, 63 bytes>
0x4003bf:	and	eax, 0xfff
0x4003c4:	sub	rax, 8
0x4003c8:	add	rax, rsp
0x4003cb:	or	qword ptr [rax], 0
0x4003cf:	mov	rax, rsp
0x4003d2:	add	rax, 0xf
0x4003d6:	shr	rax, 4
0x4003da:	shl	rax, 4
0x4003de:	mov	qword ptr [rbp - 0x88], rax
0x4003e5:	mov	rax, qword ptr [rbp - 0x88]
0x4003ec:	mov	edx, 0x63
0x4003f1:	mov	esi, 0x41
0x4003f6:	mov	rdi, rax
0x4003f9:	call	0x500000
<Block for 0x40038e, 5 bytes>
0x40038e:	cmp	rsp, rdx
0x400391:	je	0x4003a5
<Block for 0x4003fe, 23 bytes>
0x4003fe:	mov	rax, qword ptr [rbp - 0x88]
0x400405:	add	rax, 0x63
0x400409:	mov	byte ptr [rax], 0
0x40040c:	mov	eax, 1
0x400411:	test	eax, eax
0x400413:	je	0x400423
<Block for 0x400423, 22 bytes>
0x400423:	lea	rax, [rbp - 0x80]
0x400427:	mov	edx, 0x63
0x40042c:	mov	esi, 0x43
0x400431:	mov	rdi, rax
0x400434:	call	0x500000
<Block for 0x400415, 36 bytes>
0x400415:	mov	rax, qword ptr [rbp - 0x88]
0x40041c:	mov	qword ptr [rbp - 0x90], rax
0x400423:	lea	rax, [rbp - 0x80]
0x400427:	mov	edx, 0x63
0x40042c:	mov	esi, 0x43
0x400431:	mov	rdi, rax
0x400434:	call	0x500000
<Block for 0x400439, 128 bytes>
0x400439:	mov	byte ptr [rbp - 0x1d], 0
0x40043d:	mov	rax, qword ptr [rbp - 0x90]
0x400444:	mov	rcx, qword ptr [rax]
0x400447:	mov	rbx, qword ptr [rax + 8]
0x40044b:	mov	qword ptr [rbp - 0x80], rcx
0x40044f:	mov	qword ptr [rbp - 0x78], rbx
0x400453:	mov	rcx, qword ptr [rax + 0x10]
0x400457:	mov	rbx, qword ptr [rax + 0x18]
0x40045b:	mov	qword ptr [rbp - 0x70], rcx
0x40045f:	mov	qword ptr [rbp - 0x68], rbx
0x400463:	mov	rcx, qword ptr [rax + 0x20]
0x400467:	mov	rbx, qword ptr [rax + 0x28]
0x40046b:	mov	qword ptr [rbp - 0x60], rcx
0x40046f:	mov	qword ptr [rbp - 0x58], rbx
0x400473:	mov	rcx, qword ptr [rax + 0x30]
0x400477:	mov	rbx, qword ptr [rax + 0x38]
0x40047b:	mov	qword ptr [rbp - 0x50], rcx
0x40047f:	mov	qword ptr [rbp - 0x48], rbx
0x400483:	mov	rcx, qword ptr [rax + 0x40]
0x400487:	mov	rbx, qword ptr [rax + 0x48]
0x40048b:	mov	qword ptr [rbp - 0x40], rcx
0x40048f:	mov	qword ptr [rbp - 0x38], rbx
0x400493:	mov	rcx, qword ptr [rax + 0x50]
0x400497:	mov	rbx, qword ptr [rax + 0x58]
0x40049b:	mov	qword ptr [rbp - 0x30], rcx
0x40049f:	mov	qword ptr [rbp - 0x28], rbx
0x4004a3:	mov	eax, dword ptr [rax + 0x60]
0x4004a6:	mov	dword ptr [rbp - 0x20], eax
0x4004a9:	mov	byte ptr [rbp - 0x1d], 0
0x4004ad:	lea	rax, [rbp - 0x80]
0x4004b1:	mov	rdi, rax
0x4004b4:	call	0x500008
<Block for 0x4004b9, 16 bytes>
0x4004b9:	nop	
0x4004ba:	mov	rax, qword ptr [rbp - 0x18]
0x4004be:	xor	rax, qword ptr fs:[0x28]
0x4004c7:	je	0x4004ce
<Block for 0x4004ce, 6 bytes>
0x4004ce:	mov	rbx, qword ptr [rbp - 8]
0x4004d2:	leave	
0x4004d3:	ret	
<Block for 0x4004c9, 5 bytes>
0x4004c9:	call	0x500010
