<Block for 0x400245, 33 bytes>
0x400245:	endbr64	
0x400249:	push	rbp
0x40024a:	mov	rbp, rsp
0x40024d:	sub	rsp, 0x10
0x400251:	mov	rax, qword ptr [rip + 0x268]
0x400258:	mov	qword ptr [rbp - 8], rax
0x40025c:	mov	qword ptr [rbp - 0x10], 0
0x400264:	jmp	0x40028b
<Block for 0x40028b, 12 bytes>
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	mov	rdi, rax
0x400292:	call	0x500020
<Block for 0x400297, 6 bytes>
0x400297:	cmp	qword ptr [rbp - 0x10], rax
0x40029b:	jb	0x400266
<Block for 0x400266, 18 bytes>
0x400266:	mov	rdx, qword ptr [rbp - 8]
0x40026a:	mov	rax, qword ptr [rbp - 0x10]
0x40026e:	add	rax, rdx
0x400271:	movzx	eax, byte ptr [rax]
0x400274:	cmp	al, 0x53
0x400276:	jne	0x400286
<Block for 0x40029d, 12 bytes>
0x40029d:	mov	rax, qword ptr [rbp - 8]
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x500008
<Block for 0x400278, 12 bytes>
0x400278:	lea	rdi, [rip + 0x249]
0x40027f:	call	0x500000
<Block for 0x400286, 17 bytes>
0x400286:	add	qword ptr [rbp - 0x10], 1
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	mov	rdi, rax
0x400292:	call	0x500020
<Block for 0x4002a9, 3 bytes>
0x4002a9:	nop	
0x4002aa:	leave	
0x4002ab:	ret	
<Block for 0x400284, 2 bytes>
0x400284:	jmp	0x40029d
