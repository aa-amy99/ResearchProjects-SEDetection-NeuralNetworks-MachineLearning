<Block for 0x40008d, 40 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x110
0x40009c:	mov	rax, qword ptr fs:[0x28]
0x4000a5:	mov	qword ptr [rbp - 8], rax
0x4000a9:	xor	eax, eax
0x4000ab:	mov	eax, 0
0x4000b0:	call	0x500028
<Block for 0x4000b5, 4 bytes>
0x4000b5:	test	eax, eax
0x4000b7:	je	0x4000c7
<Block for 0x4000c7, 25 bytes>
0x4000c7:	lea	rax, [rbp - 0xa0]
0x4000ce:	mov	edx, 0x95
0x4000d3:	mov	esi, 0x41
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500008
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rdi, [rip + 0x122]
0x4000c0:	call	0x500018
<Block for 0x4000e0, 34 bytes>
0x4000e0:	mov	byte ptr [rbp - 0xb], 0
0x4000e4:	lea	rcx, [rbp - 0xa0]
0x4000eb:	lea	rax, [rbp - 0x110]
0x4000f2:	mov	edx, 0x63
0x4000f7:	mov	rsi, rcx
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500010
<Block for 0x4000c5, 2 bytes>
0x4000c5:	jmp	0x400118
<Block for 0x400102, 22 bytes>
0x400102:	mov	byte ptr [rbp - 0xad], 0
0x400109:	lea	rax, [rbp - 0x110]
0x400110:	mov	rdi, rax
0x400113:	call	0x500018
<Block for 0x400118, 16 bytes>
0x400118:	nop	
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	xor	rax, qword ptr fs:[0x28]
0x400126:	je	0x40012d
<Block for 0x40012d, 2 bytes>
0x40012d:	leave	
0x40012e:	ret	
<Block for 0x400128, 5 bytes>
0x400128:	call	0x500020
