<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	edi, 0x320
0x400028:	call	0x500000
<Block for 0x40002d, 13 bytes>
0x40002d:	mov	qword ptr [rbp - 0x18], rax
0x400031:	mov	rax, qword ptr [rbp - 0x18]
0x400035:	test	rax, rax
0x400038:	jne	0x400044
<Block for 0x40003a, 10 bytes>
0x40003a:	mov	edi, 0xffffffff
0x40003f:	call	0x500008
<Block for 0x400044, 10 bytes>
0x400044:	mov	qword ptr [rbp - 0x10], 0
0x40004c:	jmp	0x400069
<Block for 0x400069, 7 bytes>
0x400069:	cmp	qword ptr [rbp - 0x10], 0x63
0x40006e:	jbe	0x40004e
<Block for 0x40004e, 34 bytes>
0x40004e:	mov	rax, qword ptr [rbp - 0x18]
0x400052:	mov	rdx, qword ptr [rbp - 0x10]
0x400056:	shl	rdx, 3
0x40005a:	add	rax, rdx
0x40005d:	mov	qword ptr [rax], 5
0x400064:	add	qword ptr [rbp - 0x10], 1
0x400069:	cmp	qword ptr [rbp - 0x10], 0x63
0x40006e:	jbe	0x40004e
<Block for 0x400070, 12 bytes>
0x400070:	mov	rax, qword ptr [rbp - 0x18]
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rax, [rbp - 0x18]
0x400080:	mov	rdi, rax
0x400083:	call	0x500018
<Block for 0x400088, 16 bytes>
0x400088:	nop	
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	xor	rax, qword ptr fs:[0x28]
0x400096:	je	0x40009d
<Block for 0x40009d, 2 bytes>
0x40009d:	leave	
0x40009e:	ret	
<Block for 0x400098, 5 bytes>
0x400098:	call	0x500020
