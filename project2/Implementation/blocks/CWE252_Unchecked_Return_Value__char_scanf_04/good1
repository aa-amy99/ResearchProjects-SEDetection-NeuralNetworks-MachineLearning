<Block for 0x4000c6, 36 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	add	rsp, -0x80
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	mov	eax, 0
0x4000e6:	test	eax, eax
0x4000e8:	je	0x4000fb
<Block for 0x4000fb, 135 bytes>
0x4000fb:	mov	qword ptr [rbp - 0x70], 0
0x400103:	mov	qword ptr [rbp - 0x68], 0
0x40010b:	mov	qword ptr [rbp - 0x60], 0
0x400113:	mov	qword ptr [rbp - 0x58], 0
0x40011b:	mov	qword ptr [rbp - 0x50], 0
0x400123:	mov	qword ptr [rbp - 0x48], 0
0x40012b:	mov	qword ptr [rbp - 0x40], 0
0x400133:	mov	qword ptr [rbp - 0x38], 0
0x40013b:	mov	qword ptr [rbp - 0x30], 0
0x400143:	mov	qword ptr [rbp - 0x28], 0
0x40014b:	mov	qword ptr [rbp - 0x20], 0
0x400153:	mov	qword ptr [rbp - 0x18], 0
0x40015b:	mov	dword ptr [rbp - 0x10], 0
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	qword ptr [rbp - 0x78], rax
0x40016a:	mov	rax, qword ptr [rbp - 0x78]
0x40016e:	mov	rsi, rax
0x400171:	lea	rdi, [rip + 0x130]
0x400178:	mov	eax, 0
0x40017d:	call	0x500000
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0x1bd]
0x4000f1:	call	0x500010
<Block for 0x400182, 5 bytes>
0x400182:	cmp	eax, -1
0x400185:	jne	0x400193
<Block for 0x4000f6, 5 bytes>
0x4000f6:	jmp	0x400193
<Block for 0x400187, 12 bytes>
0x400187:	lea	rdi, [rip + 0x135]
0x40018e:	call	0x500010
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500008
