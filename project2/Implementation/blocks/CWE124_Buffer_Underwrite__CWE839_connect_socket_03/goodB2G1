<Block for 0x400177, 61 bytes>
0x400177:	endbr64	
0x40017b:	push	rbp
0x40017c:	mov	rbp, rsp
0x40017f:	sub	rsp, 0x50
0x400183:	mov	rax, qword ptr fs:[0x28]
0x40018c:	mov	qword ptr [rbp - 8], rax
0x400190:	xor	eax, eax
0x400192:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400199:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001a0:	mov	edx, 6
0x4001a5:	mov	esi, 1
0x4001aa:	mov	edi, 2
0x4001af:	call	0x500000
<Block for 0x4001b4, 13 bytes>
0x4001b4:	mov	dword ptr [rbp - 0x48], eax
0x4001b7:	cmp	dword ptr [rbp - 0x48], -1
0x4001bb:	je	0x400257
<Block for 0x400257, 3 bytes>
0x400257:	nop	
0x400258:	jmp	0x40025b
<Block for 0x4001c1, 22 bytes>
0x4001c1:	lea	rax, [rbp - 0x40]
0x4001c5:	mov	edx, 0x10
0x4001ca:	mov	esi, 0
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500008
<Block for 0x40025b, 6 bytes>
0x40025b:	cmp	dword ptr [rbp - 0x48], -1
0x40025f:	je	0x40026b
<Block for 0x4001d7, 18 bytes>
0x4001d7:	mov	word ptr [rbp - 0x40], 2
0x4001dd:	lea	rdi, [rip + 0x41c]
0x4001e4:	call	0x500010
<Block for 0x40026b, 46 bytes>
0x40026b:	mov	qword ptr [rbp - 0x40], 0
0x400273:	mov	qword ptr [rbp - 0x38], 0
0x40027b:	mov	qword ptr [rbp - 0x30], 0
0x400283:	mov	qword ptr [rbp - 0x28], 0
0x40028b:	mov	qword ptr [rbp - 0x20], 0
0x400293:	cmp	dword ptr [rbp - 0x50], 0
0x400297:	js	0x4002d1
<Block for 0x400261, 10 bytes>
0x400261:	mov	eax, dword ptr [rbp - 0x48]
0x400264:	mov	edi, eax
0x400266:	call	0x500038
<Block for 0x4001e9, 13 bytes>
0x4001e9:	mov	dword ptr [rbp - 0x3c], eax
0x4001ec:	mov	edi, 0x6987
0x4001f1:	call	0x500018
<Block for 0x4002d1, 12 bytes>
0x4002d1:	lea	rdi, [rip + 0x358]
0x4002d8:	call	0x500048
<Block for 0x400299, 6 bytes>
0x400299:	cmp	dword ptr [rbp - 0x50], 9
0x40029d:	jg	0x4002d1
<Block for 0x4001f6, 26 bytes>
0x4001f6:	mov	word ptr [rbp - 0x3e], ax
0x4001fa:	lea	rcx, [rbp - 0x40]
0x4001fe:	mov	eax, dword ptr [rbp - 0x48]
0x400201:	mov	edx, 0x10
0x400206:	mov	rsi, rcx
0x400209:	mov	edi, eax
0x40020b:	call	0x500020
<Block for 0x4002dd, 16 bytes>
0x4002dd:	nop	
0x4002de:	mov	rax, qword ptr [rbp - 8]
0x4002e2:	xor	rax, qword ptr fs:[0x28]
0x4002eb:	je	0x4002f2
<Block for 0x40029f, 22 bytes>
0x40029f:	mov	eax, dword ptr [rbp - 0x50]
0x4002a2:	cdqe	
0x4002a4:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002ac:	mov	dword ptr [rbp - 0x4c], 0
0x4002b3:	jmp	0x4002c9
<Block for 0x400210, 5 bytes>
0x400210:	cmp	eax, -1
0x400213:	je	0x40025a
<Block for 0x4002f2, 2 bytes>
0x4002f2:	leave	
0x4002f3:	ret	
<Block for 0x4002ed, 5 bytes>
0x4002ed:	call	0x500050
<Block for 0x4002c9, 6 bytes>
0x4002c9:	cmp	dword ptr [rbp - 0x4c], 9
0x4002cd:	jle	0x4002b5
<Block for 0x400215, 24 bytes>
0x400215:	lea	rsi, [rbp - 0x16]
0x400219:	mov	eax, dword ptr [rbp - 0x48]
0x40021c:	mov	ecx, 0
0x400221:	mov	edx, 0xd
0x400226:	mov	edi, eax
0x400228:	call	0x500028
<Block for 0x40025a, 1 bytes>
0x40025a:	nop	
<Block for 0x4002b5, 16 bytes>
0x4002b5:	mov	eax, dword ptr [rbp - 0x4c]
0x4002b8:	cdqe	
0x4002ba:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002be:	mov	edi, eax
0x4002c0:	call	0x500040
<Block for 0x4002cf, 2 bytes>
0x4002cf:	jmp	0x4002dd
<Block for 0x40022d, 9 bytes>
0x40022d:	mov	dword ptr [rbp - 0x44], eax
0x400230:	cmp	dword ptr [rbp - 0x44], -1
0x400234:	je	0x40025b
<Block for 0x4002c5, 10 bytes>
0x4002c5:	add	dword ptr [rbp - 0x4c], 1
0x4002c9:	cmp	dword ptr [rbp - 0x4c], 9
0x4002cd:	jle	0x4002b5
<Block for 0x400236, 6 bytes>
0x400236:	cmp	dword ptr [rbp - 0x44], 0
0x40023a:	je	0x40025b
<Block for 0x40023c, 22 bytes>
0x40023c:	mov	eax, dword ptr [rbp - 0x44]
0x40023f:	cdqe	
0x400241:	mov	byte ptr [rbp + rax - 0x16], 0
0x400246:	lea	rax, [rbp - 0x16]
0x40024a:	mov	rdi, rax
0x40024d:	call	0x500030
<Block for 0x400252, 5 bytes>
0x400252:	mov	dword ptr [rbp - 0x50], eax
0x400255:	jmp	0x40025b
