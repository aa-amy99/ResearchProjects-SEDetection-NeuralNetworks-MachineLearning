<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, 5
0x40002e:	cmp	eax, 5
0x400031:	jne	0x400091
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x64
0x400038:	call	0x500000
<Block for 0x400091, 25 bytes>
0x400091:	lea	rax, [rbp - 0xd0]
0x400098:	mov	edx, 0xc7
0x40009d:	mov	esi, 0x43
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500010
<Block for 0x40003d, 17 bytes>
0x40003d:	mov	qword ptr [rbp - 0xd8], rax
0x400044:	cmp	qword ptr [rbp - 0xd8], 0
0x40004c:	jne	0x400058
<Block for 0x4000aa, 29 bytes>
0x4000aa:	mov	byte ptr [rbp - 9], 0
0x4000ae:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b5:	lea	rax, [rbp - 0xd0]
0x4000bc:	mov	rsi, rdx
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500018
<Block for 0x40004e, 10 bytes>
0x40004e:	mov	edi, 0xffffffff
0x400053:	call	0x500008
<Block for 0x400058, 25 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0xd8]
0x40005f:	mov	edx, 0x63
0x400064:	mov	esi, 0x41
0x400069:	mov	rdi, rax
0x40006c:	call	0x500010
<Block for 0x4000c7, 15 bytes>
0x4000c7:	lea	rax, [rbp - 0xd0]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500020
<Block for 0x400071, 57 bytes>
0x400071:	mov	rax, qword ptr [rbp - 0xd8]
0x400078:	add	rax, 0x63
0x40007c:	mov	byte ptr [rax], 0
0x40007f:	mov	rax, qword ptr [rbp - 0xd8]
0x400086:	sub	rax, 8
0x40008a:	mov	qword ptr [rbp - 0xe0], rax
0x400091:	lea	rax, [rbp - 0xd0]
0x400098:	mov	edx, 0xc7
0x40009d:	mov	esi, 0x43
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500010
<Block for 0x4000d6, 16 bytes>
0x4000d6:	nop	
0x4000d7:	mov	rax, qword ptr [rbp - 8]
0x4000db:	xor	rax, qword ptr fs:[0x28]
0x4000e4:	je	0x4000eb
<Block for 0x4000eb, 2 bytes>
0x4000eb:	leave	
0x4000ec:	ret	
<Block for 0x4000e6, 5 bytes>
0x4000e6:	call	0x500028
