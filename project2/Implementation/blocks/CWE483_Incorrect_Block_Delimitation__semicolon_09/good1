<Block for 0x40007b, 22 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x10
0x400087:	mov	eax, dword ptr [rip + 0xfff8b]
0x40008d:	test	eax, eax
0x40008f:	je	0x40009f
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500008
<Block for 0x400091, 12 bytes>
0x400091:	lea	rdi, [rip + 0x122]
0x400098:	call	0x500010
<Block for 0x4000a4, 62 bytes>
0x4000a4:	mov	edx, eax
0x4000a6:	movsxd	rax, edx
0x4000a9:	imul	rax, rax, 0x55555556
0x4000b0:	shr	rax, 0x20
0x4000b4:	mov	rcx, rax
0x4000b7:	mov	eax, edx
0x4000b9:	sar	eax, 0x1f
0x4000bc:	mov	esi, ecx
0x4000be:	sub	esi, eax
0x4000c0:	mov	eax, esi
0x4000c2:	mov	dword ptr [rbp - 4], eax
0x4000c5:	mov	ecx, dword ptr [rbp - 4]
0x4000c8:	mov	eax, ecx
0x4000ca:	add	eax, eax
0x4000cc:	add	eax, ecx
0x4000ce:	sub	edx, eax
0x4000d0:	mov	eax, edx
0x4000d2:	mov	dword ptr [rbp - 4], eax
0x4000d5:	mov	dword ptr [rbp - 8], 0
0x4000dc:	cmp	dword ptr [rbp - 4], 0
0x4000e0:	jne	0x4000f5
<Block for 0x40009d, 2 bytes>
0x40009d:	jmp	0x400107
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rdi, [rip + 0xc1]
0x4000e9:	call	0x500010
<Block for 0x4000f5, 6 bytes>
0x4000f5:	cmp	dword ptr [rbp - 8], 0
0x4000f9:	je	0x400107
<Block for 0x400107, 3 bytes>
0x400107:	nop	
0x400108:	leave	
0x400109:	ret	
<Block for 0x4000ee, 13 bytes>
0x4000ee:	mov	dword ptr [rbp - 8], 1
0x4000f5:	cmp	dword ptr [rbp - 8], 0
0x4000f9:	je	0x400107
<Block for 0x4000fb, 12 bytes>
0x4000fb:	lea	rdi, [rip + 0xaf]
0x400102:	call	0x500010
