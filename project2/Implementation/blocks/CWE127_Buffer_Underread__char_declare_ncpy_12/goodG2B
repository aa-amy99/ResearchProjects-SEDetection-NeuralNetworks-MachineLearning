<Block for 0x4000d1, 55 bytes>
0x4000d1:	endbr64	
0x4000d5:	push	rbp
0x4000d6:	mov	rbp, rsp
0x4000d9:	sub	rsp, 0xf0
0x4000e0:	mov	rax, qword ptr fs:[0x28]
0x4000e9:	mov	qword ptr [rbp - 8], rax
0x4000ed:	xor	eax, eax
0x4000ef:	lea	rax, [rbp - 0xe0]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x41
0x400100:	mov	rdi, rax
0x400103:	call	0x500000
<Block for 0x400108, 14 bytes>
0x400108:	mov	byte ptr [rbp - 0x7d], 0
0x40010c:	mov	eax, 0
0x400111:	call	0x500008
<Block for 0x400116, 4 bytes>
0x400116:	test	eax, eax
0x400118:	je	0x40012a
<Block for 0x40012a, 36 bytes>
0x40012a:	lea	rax, [rbp - 0xe0]
0x400131:	mov	qword ptr [rbp - 0xe8], rax
0x400138:	lea	rax, [rbp - 0x70]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x43
0x400146:	mov	rdi, rax
0x400149:	call	0x500000
<Block for 0x40011a, 16 bytes>
0x40011a:	lea	rax, [rbp - 0xe0]
0x400121:	mov	qword ptr [rbp - 0xe8], rax
0x400128:	jmp	0x400138
<Block for 0x40014e, 16 bytes>
0x40014e:	mov	byte ptr [rbp - 0xd], 0
0x400152:	lea	rax, [rbp - 0x70]
0x400156:	mov	rdi, rax
0x400159:	call	0x500010
<Block for 0x400138, 22 bytes>
0x400138:	lea	rax, [rbp - 0x70]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x43
0x400146:	mov	rdi, rax
0x400149:	call	0x500000
<Block for 0x40015e, 25 bytes>
0x40015e:	mov	rdx, rax
0x400161:	mov	rcx, qword ptr [rbp - 0xe8]
0x400168:	lea	rax, [rbp - 0x70]
0x40016c:	mov	rsi, rcx
0x40016f:	mov	rdi, rax
0x400172:	call	0x500018
<Block for 0x400177, 16 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	lea	rax, [rbp - 0x70]
0x40017f:	mov	rdi, rax
0x400182:	call	0x500020
<Block for 0x400187, 16 bytes>
0x400187:	nop	
0x400188:	mov	rax, qword ptr [rbp - 8]
0x40018c:	xor	rax, qword ptr fs:[0x28]
0x400195:	je	0x40019c
<Block for 0x40019c, 2 bytes>
0x40019c:	leave	
0x40019d:	ret	
<Block for 0x400197, 5 bytes>
0x400197:	call	0x500028
