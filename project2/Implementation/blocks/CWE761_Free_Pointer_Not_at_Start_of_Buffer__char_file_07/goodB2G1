<Block for 0x400109, 22 bytes>
0x400109:	endbr64	
0x40010d:	push	rbp
0x40010e:	mov	rbp, rsp
0x400111:	sub	rsp, 0x20
0x400115:	mov	edi, 0x64
0x40011a:	call	0x500000
<Block for 0x40011f, 11 bytes>
0x40011f:	mov	qword ptr [rbp - 0x18], rax
0x400123:	cmp	qword ptr [rbp - 0x18], 0
0x400128:	jne	0x400134
<Block for 0x40012a, 10 bytes>
0x40012a:	mov	edi, 0xffffffff
0x40012f:	call	0x500008
<Block for 0x400134, 19 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0x18]
0x400138:	mov	byte ptr [rax], 0
0x40013b:	mov	rax, qword ptr [rbp - 0x18]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x400147, 19 bytes>
0x400147:	mov	qword ptr [rbp - 0x10], rax
0x40014b:	mov	eax, 0x64
0x400150:	sub	rax, qword ptr [rbp - 0x10]
0x400154:	cmp	rax, 1
0x400158:	jbe	0x4001cd
<Block for 0x4001cd, 11 bytes>
0x4001cd:	mov	eax, dword ptr [rip + 0x1a1]
0x4001d3:	cmp	eax, 5
0x4001d6:	je	0x4001e6
<Block for 0x40015a, 19 bytes>
0x40015a:	lea	rsi, [rip + 0x217]
0x400161:	lea	rdi, [rip + 0x212]
0x400168:	call	0x500018
<Block for 0x4001e6, 10 bytes>
0x4001e6:	mov	qword ptr [rbp - 0x20], 0
0x4001ee:	jmp	0x400215
<Block for 0x4001d8, 12 bytes>
0x4001d8:	lea	rdi, [rip + 0x1c9]
0x4001df:	call	0x500028
<Block for 0x40016d, 11 bytes>
0x40016d:	mov	qword ptr [rbp - 8], rax
0x400171:	cmp	qword ptr [rbp - 8], 0
0x400176:	je	0x4001cd
<Block for 0x400215, 12 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x18]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500010
<Block for 0x4001e4, 2 bytes>
0x4001e4:	jmp	0x400233
<Block for 0x400178, 42 bytes>
0x400178:	mov	rax, qword ptr [rbp - 0x10]
0x40017c:	mov	edx, 0x64
0x400181:	sub	edx, eax
0x400183:	mov	eax, edx
0x400185:	mov	esi, eax
0x400187:	mov	rdx, qword ptr [rbp - 0x18]
0x40018b:	mov	rax, qword ptr [rbp - 0x10]
0x40018f:	lea	rcx, [rdx + rax]
0x400193:	mov	rax, qword ptr [rbp - 8]
0x400197:	mov	rdx, rax
0x40019a:	mov	rdi, rcx
0x40019d:	call	0x500020
<Block for 0x400221, 6 bytes>
0x400221:	cmp	qword ptr [rbp - 0x20], rax
0x400225:	jb	0x4001f0
<Block for 0x400233, 3 bytes>
0x400233:	nop	
0x400234:	leave	
0x400235:	ret	
<Block for 0x4001a2, 5 bytes>
0x4001a2:	test	rax, rax
0x4001a5:	jne	0x4001c1
<Block for 0x4001f0, 18 bytes>
0x4001f0:	mov	rdx, qword ptr [rbp - 0x18]
0x4001f4:	mov	rax, qword ptr [rbp - 0x20]
0x4001f8:	add	rax, rdx
0x4001fb:	movzx	eax, byte ptr [rax]
0x4001fe:	cmp	al, 0x53
0x400200:	jne	0x400210
<Block for 0x400227, 12 bytes>
0x400227:	mov	rax, qword ptr [rbp - 0x18]
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500038
<Block for 0x4001a7, 12 bytes>
0x4001a7:	lea	rdi, [rip + 0x1da]
0x4001ae:	call	0x500028
<Block for 0x4001c1, 12 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 8]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500030
<Block for 0x400202, 12 bytes>
0x400202:	lea	rdi, [rip + 0x18e]
0x400209:	call	0x500028
<Block for 0x400210, 17 bytes>
0x400210:	add	qword ptr [rbp - 0x20], 1
0x400215:	mov	rax, qword ptr [rbp - 0x18]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500010
<Block for 0x4001b3, 26 bytes>
0x4001b3:	mov	rdx, qword ptr [rbp - 0x18]
0x4001b7:	mov	rax, qword ptr [rbp - 0x10]
0x4001bb:	add	rax, rdx
0x4001be:	mov	byte ptr [rax], 0
0x4001c1:	mov	rax, qword ptr [rbp - 8]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500030
<Block for 0x40020e, 2 bytes>
0x40020e:	jmp	0x400227
