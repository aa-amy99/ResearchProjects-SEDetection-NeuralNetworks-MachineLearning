<Block for 0x4001a4, 55 bytes>
0x4001a4:	endbr64	
0x4001a8:	push	rbp
0x4001a9:	mov	rbp, rsp
0x4001ac:	sub	rsp, 0xc0
0x4001b3:	mov	rax, qword ptr fs:[0x28]
0x4001bc:	mov	qword ptr [rbp - 8], rax
0x4001c0:	xor	eax, eax
0x4001c2:	lea	rax, [rbp - 0xb0]
0x4001c9:	mov	edx, 0x31
0x4001ce:	mov	esi, 0x41
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x500000
<Block for 0x4001db, 26 bytes>
0x4001db:	mov	byte ptr [rbp - 0x7f], 0
0x4001df:	lea	rax, [rbp - 0x70]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500000
<Block for 0x4001f5, 39 bytes>
0x4001f5:	mov	byte ptr [rbp - 0xd], 0
0x4001f9:	lea	rax, [rbp - 0x70]
0x4001fd:	mov	qword ptr [rbp - 0xb8], rax
0x400204:	mov	rax, qword ptr [rbp - 0xb8]
0x40020b:	mov	qword ptr [rip + 0x3e], rax
0x400212:	mov	eax, 0
0x400217:	call	0x40011b
<Block for 0x40021c, 16 bytes>
0x40021c:	nop	
0x40021d:	mov	rax, qword ptr [rbp - 8]
0x400221:	xor	rax, qword ptr fs:[0x28]
0x40022a:	je	0x400231
<Block for 0x400231, 2 bytes>
0x400231:	leave	
0x400232:	ret	
<Block for 0x40022c, 5 bytes>
0x40022c:	call	0x500020
