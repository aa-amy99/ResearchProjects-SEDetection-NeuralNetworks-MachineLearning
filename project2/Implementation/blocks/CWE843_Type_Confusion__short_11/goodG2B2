<Block for 0x4000d5, 45 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0x20
0x4000e1:	mov	rax, qword ptr fs:[0x28]
0x4000ea:	mov	qword ptr [rbp - 8], rax
0x4000ee:	xor	eax, eax
0x4000f0:	mov	qword ptr [rbp - 0x10], 0
0x4000f8:	mov	eax, 0
0x4000fd:	call	0x500000
<Block for 0x400102, 4 bytes>
0x400102:	test	eax, eax
0x400104:	je	0x400115
<Block for 0x400115, 13 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x10]
0x400119:	mov	eax, dword ptr [rax]
0x40011b:	mov	edi, eax
0x40011d:	call	0x500008
<Block for 0x400106, 28 bytes>
0x400106:	mov	dword ptr [rbp - 0x14], 8
0x40010d:	lea	rax, [rbp - 0x14]
0x400111:	mov	qword ptr [rbp - 0x10], rax
0x400115:	mov	rax, qword ptr [rbp - 0x10]
0x400119:	mov	eax, dword ptr [rax]
0x40011b:	mov	edi, eax
0x40011d:	call	0x500008
<Block for 0x400122, 16 bytes>
0x400122:	nop	
0x400123:	mov	rax, qword ptr [rbp - 8]
0x400127:	xor	rax, qword ptr fs:[0x28]
0x400130:	je	0x400137
<Block for 0x400137, 2 bytes>
0x400137:	leave	
0x400138:	ret	
<Block for 0x400132, 5 bytes>
0x400132:	call	0x500010
