<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x10], 0
0x400023:	mov	eax, 0
0x400028:	call	0x500000
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	je	0x40003f
<Block for 0x40003f, 13 bytes>
0x40003f:	mov	rax, qword ptr [rbp - 0x10]
0x400043:	mov	eax, dword ptr [rax]
0x400045:	mov	edi, eax
0x400047:	call	0x500008
<Block for 0x400031, 27 bytes>
0x400031:	mov	word ptr [rbp - 0x12], 8
0x400037:	lea	rax, [rbp - 0x12]
0x40003b:	mov	qword ptr [rbp - 0x10], rax
0x40003f:	mov	rax, qword ptr [rbp - 0x10]
0x400043:	mov	eax, dword ptr [rax]
0x400045:	mov	edi, eax
0x400047:	call	0x500008
<Block for 0x40004c, 16 bytes>
0x40004c:	nop	
0x40004d:	mov	rax, qword ptr [rbp - 8]
0x400051:	xor	rax, qword ptr fs:[0x28]
0x40005a:	je	0x400061
<Block for 0x400061, 2 bytes>
0x400061:	leave	
0x400062:	ret	
<Block for 0x40005c, 5 bytes>
0x40005c:	call	0x500010
