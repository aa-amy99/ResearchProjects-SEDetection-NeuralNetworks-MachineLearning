<Block for 0x400063, 45 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x20
0x40006f:	mov	rax, qword ptr fs:[0x28]
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	xor	eax, eax
0x40007e:	mov	qword ptr [rbp - 0x10], 0
0x400086:	mov	eax, 0
0x40008b:	call	0x500018
<Block for 0x400090, 4 bytes>
0x400090:	test	eax, eax
0x400092:	je	0x4000a2
<Block for 0x4000a2, 28 bytes>
0x4000a2:	mov	dword ptr [rbp - 0x14], 8
0x4000a9:	lea	rax, [rbp - 0x14]
0x4000ad:	mov	qword ptr [rbp - 0x10], rax
0x4000b1:	mov	rax, qword ptr [rbp - 0x10]
0x4000b5:	mov	eax, dword ptr [rax]
0x4000b7:	mov	edi, eax
0x4000b9:	call	0x500008
<Block for 0x400094, 12 bytes>
0x400094:	lea	rdi, [rip + 0xbd]
0x40009b:	call	0x500020
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x4000d3
<Block for 0x4000a0, 2 bytes>
0x4000a0:	jmp	0x4000b1
<Block for 0x4000d3, 2 bytes>
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000ce, 5 bytes>
0x4000ce:	call	0x500010
<Block for 0x4000b1, 13 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 0x10]
0x4000b5:	mov	eax, dword ptr [rax]
0x4000b7:	mov	edi, eax
0x4000b9:	call	0x500008
