<Block for 0x4000bf, 53 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	push	rbx
0x4000c8:	sub	rsp, 0x88
0x4000cf:	mov	rax, qword ptr fs:[0x28]
0x4000d8:	mov	qword ptr [rbp - 0x18], rax
0x4000dc:	xor	eax, eax
0x4000de:	lea	rax, [rbp - 0x80]
0x4000e2:	mov	edx, 0x63
0x4000e7:	mov	esi, 0x41
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000f4, 25 bytes>
0x4000f4:	mov	byte ptr [rbp - 0x1d], 0
0x4000f8:	lea	rax, [rbp - 0x80]
0x4000fc:	mov	qword ptr [rbp - 0x90], rax
0x400103:	mov	edi, 8
0x400108:	call	0x500008
<Block for 0x40010d, 11 bytes>
0x40010d:	mov	rbx, rax
0x400110:	mov	rdi, rbx
0x400113:	call	0x4001d6
<Block for 0x400118, 42 bytes>
0x400118:	mov	qword ptr [rbp - 0x88], rbx
0x40011f:	mov	rax, qword ptr [rbp - 0x88]
0x400126:	mov	rax, qword ptr [rax]
0x400129:	mov	rcx, qword ptr [rax]
0x40012c:	mov	rdx, qword ptr [rbp - 0x90]
0x400133:	mov	rax, qword ptr [rbp - 0x88]
0x40013a:	mov	rsi, rdx
0x40013d:	mov	rdi, rax
0x400140:	call	rcx
<Block for 0x400142, 12 bytes>
0x400142:	mov	rax, qword ptr [rbp - 0x88]
0x400149:	test	rax, rax
0x40014c:	je	0x40015b
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 0x18]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x40014e, 13 bytes>
0x40014e:	mov	esi, 8
0x400153:	mov	rdi, rax
0x400156:	call	0x500010
<Block for 0x400170, 10 bytes>
0x400170:	add	rsp, 0x88
0x400177:	pop	rbx
0x400178:	pop	rbp
0x400179:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500018
