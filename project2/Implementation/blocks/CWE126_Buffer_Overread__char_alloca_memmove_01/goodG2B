<Block for 0x4001e1, 84 bytes>
0x4001e1:	endbr64	
0x4001e5:	push	rbp
0x4001e6:	mov	rbp, rsp
0x4001e9:	sub	rsp, 0x90
0x4001f0:	mov	rax, qword ptr fs:[0x28]
0x4001f9:	mov	qword ptr [rbp - 8], rax
0x4001fd:	xor	eax, eax
0x4001ff:	mov	eax, 0x10
0x400204:	sub	rax, 1
0x400208:	add	rax, 0x3a
0x40020c:	mov	ecx, 0x10
0x400211:	mov	edx, 0
0x400216:	div	rcx
0x400219:	imul	rax, rax, 0x10
0x40021d:	mov	rdx, rax
0x400220:	and	rdx, 0xfffffffffffff000
0x400227:	mov	rcx, rsp
0x40022a:	sub	rcx, rdx
0x40022d:	mov	rdx, rcx
0x400230:	cmp	rsp, rdx
0x400233:	je	0x400247
<Block for 0x400247, 26 bytes>
0x400247:	mov	rdx, rax
0x40024a:	and	edx, 0xfff
0x400250:	sub	rsp, rdx
0x400253:	mov	rdx, rax
0x400256:	and	edx, 0xfff
0x40025c:	test	rdx, rdx
0x40025f:	je	0x400271
<Block for 0x400235, 18 bytes>
0x400235:	sub	rsp, 0x1000
0x40023c:	or	qword ptr [rsp + 0xff8], 0
0x400245:	jmp	0x400230
<Block for 0x400271, 76 bytes>
0x400271:	mov	rax, rsp
0x400274:	add	rax, 0xf
0x400278:	shr	rax, 4
0x40027c:	shl	rax, 4
0x400280:	mov	qword ptr [rbp - 0x88], rax
0x400287:	mov	eax, 0x10
0x40028c:	sub	rax, 1
0x400290:	add	rax, 0x6c
0x400294:	mov	edi, 0x10
0x400299:	mov	edx, 0
0x40029e:	div	rdi
0x4002a1:	imul	rax, rax, 0x10
0x4002a5:	mov	rdx, rax
0x4002a8:	and	rdx, 0xfffffffffffff000
0x4002af:	mov	rsi, rsp
0x4002b2:	sub	rsi, rdx
0x4002b5:	mov	rdx, rsi
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400261, 92 bytes>
0x400261:	and	eax, 0xfff
0x400266:	sub	rax, 8
0x40026a:	add	rax, rsp
0x40026d:	or	qword ptr [rax], 0
0x400271:	mov	rax, rsp
0x400274:	add	rax, 0xf
0x400278:	shr	rax, 4
0x40027c:	shl	rax, 4
0x400280:	mov	qword ptr [rbp - 0x88], rax
0x400287:	mov	eax, 0x10
0x40028c:	sub	rax, 1
0x400290:	add	rax, 0x6c
0x400294:	mov	edi, 0x10
0x400299:	mov	edx, 0
0x40029e:	div	rdi
0x4002a1:	imul	rax, rax, 0x10
0x4002a5:	mov	rdx, rax
0x4002a8:	and	rdx, 0xfffffffffffff000
0x4002af:	mov	rsi, rsp
0x4002b2:	sub	rsi, rdx
0x4002b5:	mov	rdx, rsi
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400230, 5 bytes>
0x400230:	cmp	rsp, rdx
0x400233:	je	0x400247
<Block for 0x4002cf, 26 bytes>
0x4002cf:	mov	rdx, rax
0x4002d2:	and	edx, 0xfff
0x4002d8:	sub	rsp, rdx
0x4002db:	mov	rdx, rax
0x4002de:	and	edx, 0xfff
0x4002e4:	test	rdx, rdx
0x4002e7:	je	0x4002f9
<Block for 0x4002bd, 18 bytes>
0x4002bd:	sub	rsp, 0x1000
0x4002c4:	or	qword ptr [rsp + 0xff8], 0
0x4002cd:	jmp	0x4002b8
<Block for 0x4002f9, 44 bytes>
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x80], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x88]
0x400313:	mov	edx, 0x31
0x400318:	mov	esi, 0x41
0x40031d:	mov	rdi, rax
0x400320:	call	0x500000
<Block for 0x4002e9, 60 bytes>
0x4002e9:	and	eax, 0xfff
0x4002ee:	sub	rax, 8
0x4002f2:	add	rax, rsp
0x4002f5:	or	qword ptr [rax], 0
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x80], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x88]
0x400313:	mov	edx, 0x31
0x400318:	mov	esi, 0x41
0x40031d:	mov	rdi, rax
0x400320:	call	0x500000
<Block for 0x4002b8, 5 bytes>
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400325, 36 bytes>
0x400325:	mov	rax, qword ptr [rbp - 0x88]
0x40032c:	add	rax, 0x31
0x400330:	mov	byte ptr [rax], 0
0x400333:	mov	rax, qword ptr [rbp - 0x80]
0x400337:	mov	edx, 0x63
0x40033c:	mov	esi, 0x41
0x400341:	mov	rdi, rax
0x400344:	call	0x500000
<Block for 0x400349, 41 bytes>
0x400349:	mov	rax, qword ptr [rbp - 0x80]
0x40034d:	add	rax, 0x63
0x400351:	mov	byte ptr [rax], 0
0x400354:	mov	rax, qword ptr [rbp - 0x80]
0x400358:	mov	qword ptr [rbp - 0x78], rax
0x40035c:	lea	rax, [rbp - 0x70]
0x400360:	mov	edx, 0x63
0x400365:	mov	esi, 0x43
0x40036a:	mov	rdi, rax
0x40036d:	call	0x500000
<Block for 0x400372, 16 bytes>
0x400372:	mov	byte ptr [rbp - 0xd], 0
0x400376:	lea	rax, [rbp - 0x70]
0x40037a:	mov	rdi, rax
0x40037d:	call	0x500008
<Block for 0x400382, 22 bytes>
0x400382:	mov	rdx, rax
0x400385:	mov	rcx, qword ptr [rbp - 0x78]
0x400389:	lea	rax, [rbp - 0x70]
0x40038d:	mov	rsi, rcx
0x400390:	mov	rdi, rax
0x400393:	call	0x500010
<Block for 0x400398, 16 bytes>
0x400398:	mov	byte ptr [rbp - 0xd], 0
0x40039c:	lea	rax, [rbp - 0x70]
0x4003a0:	mov	rdi, rax
0x4003a3:	call	0x500018
<Block for 0x4003a8, 16 bytes>
0x4003a8:	nop	
0x4003a9:	mov	rax, qword ptr [rbp - 8]
0x4003ad:	xor	rax, qword ptr fs:[0x28]
0x4003b6:	je	0x4003bd
<Block for 0x4003bd, 2 bytes>
0x4003bd:	leave	
0x4003be:	ret	
<Block for 0x4003b8, 5 bytes>
0x4003b8:	call	0x500020
