<Block for 0x40013b, 81 bytes>
0x40013b:	endbr64	
0x40013f:	push	rbp
0x400140:	mov	rbp, rsp
0x400143:	add	rsp, -0x80
0x400147:	mov	rax, qword ptr fs:[0x28]
0x400150:	mov	qword ptr [rbp - 8], rax
0x400154:	xor	eax, eax
0x400156:	mov	eax, 0x10
0x40015b:	sub	rax, 1
0x40015f:	add	rax, 0x6c
0x400163:	mov	esi, 0x10
0x400168:	mov	edx, 0
0x40016d:	div	rsi
0x400170:	imul	rax, rax, 0x10
0x400174:	mov	rdx, rax
0x400177:	and	rdx, 0xfffffffffffff000
0x40017e:	mov	rcx, rsp
0x400181:	sub	rcx, rdx
0x400184:	mov	rdx, rcx
0x400187:	cmp	rsp, rdx
0x40018a:	je	0x40019e
<Block for 0x40019e, 26 bytes>
0x40019e:	mov	rdx, rax
0x4001a1:	and	edx, 0xfff
0x4001a7:	sub	rsp, rdx
0x4001aa:	mov	rdx, rax
0x4001ad:	and	edx, 0xfff
0x4001b3:	test	rdx, rdx
0x4001b6:	je	0x4001c8
<Block for 0x40018c, 18 bytes>
0x40018c:	sub	rsp, 0x1000
0x400193:	or	qword ptr [rsp + 0xff8], 0
0x40019c:	jmp	0x400187
<Block for 0x4001c8, 41 bytes>
0x4001c8:	mov	rax, rsp
0x4001cb:	add	rax, 0xf
0x4001cf:	shr	rax, 4
0x4001d3:	shl	rax, 4
0x4001d7:	mov	qword ptr [rbp - 0x78], rax
0x4001db:	mov	rax, qword ptr [rbp - 0x78]
0x4001df:	mov	edx, 0x63
0x4001e4:	mov	esi, 0x41
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500000
<Block for 0x4001b8, 57 bytes>
0x4001b8:	and	eax, 0xfff
0x4001bd:	sub	rax, 8
0x4001c1:	add	rax, rsp
0x4001c4:	or	qword ptr [rax], 0
0x4001c8:	mov	rax, rsp
0x4001cb:	add	rax, 0xf
0x4001cf:	shr	rax, 4
0x4001d3:	shl	rax, 4
0x4001d7:	mov	qword ptr [rbp - 0x78], rax
0x4001db:	mov	rax, qword ptr [rbp - 0x78]
0x4001df:	mov	edx, 0x63
0x4001e4:	mov	esi, 0x41
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500000
<Block for 0x400187, 5 bytes>
0x400187:	cmp	rsp, rdx
0x40018a:	je	0x40019e
<Block for 0x4001f1, 22 bytes>
0x4001f1:	mov	rax, qword ptr [rbp - 0x78]
0x4001f5:	add	rax, 0x63
0x4001f9:	mov	byte ptr [rax], 0
0x4001fc:	mov	eax, dword ptr [rip + 0x1d6]
0x400202:	cmp	eax, 5
0x400205:	je	0x400215
<Block for 0x400215, 30 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x78]
0x400219:	mov	qword ptr [rbp - 0x80], rax
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	edx, 0x63
0x400226:	mov	esi, 0x43
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500000
<Block for 0x400207, 12 bytes>
0x400207:	lea	rdi, [rip + 0x1ce]
0x40020e:	call	0x500018
<Block for 0x400233, 16 bytes>
0x400233:	mov	byte ptr [rbp - 0xd], 0
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500008
<Block for 0x400213, 2 bytes>
0x400213:	jmp	0x40021d
<Block for 0x400243, 22 bytes>
0x400243:	mov	rdx, rax
0x400246:	mov	rcx, qword ptr [rbp - 0x80]
0x40024a:	lea	rax, [rbp - 0x70]
0x40024e:	mov	rsi, rcx
0x400251:	mov	rdi, rax
0x400254:	call	0x500010
<Block for 0x40021d, 22 bytes>
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	edx, 0x63
0x400226:	mov	esi, 0x43
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500000
<Block for 0x400259, 16 bytes>
0x400259:	mov	byte ptr [rbp - 0xd], 0
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	rdi, rax
0x400264:	call	0x500018
<Block for 0x400269, 16 bytes>
0x400269:	nop	
0x40026a:	mov	rax, qword ptr [rbp - 8]
0x40026e:	xor	rax, qword ptr fs:[0x28]
0x400277:	je	0x40027e
<Block for 0x40027e, 2 bytes>
0x40027e:	leave	
0x40027f:	ret	
<Block for 0x400279, 5 bytes>
0x400279:	call	0x500020
