<Block for 0x40001e, 25 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	qword ptr [rbp - 8], 0
0x400032:	call	0x400000
<Block for 0x400037, 9 bytes>
0x400037:	test	eax, eax
0x400039:	setne	al
0x40003c:	test	al, al
0x40003e:	je	0x400079
<Block for 0x400079, 5 bytes>
0x400079:	call	0x400000
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 8
0x400045:	call	0x500000
<Block for 0x40007e, 9 bytes>
0x40007e:	test	eax, eax
0x400080:	setne	al
0x400083:	test	al, al
0x400085:	je	0x400093
<Block for 0x40004a, 34 bytes>
0x40004a:	mov	qword ptr [rbp - 8], rax
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	mov	dword ptr [rax], 1
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	dword ptr [rax + 4], 2
0x400063:	mov	rax, qword ptr [rbp - 8]
0x400067:	test	rax, rax
0x40006a:	je	0x400079
<Block for 0x400093, 3 bytes>
0x400093:	nop	
0x400094:	leave	
0x400095:	ret	
<Block for 0x400087, 12 bytes>
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500010
<Block for 0x40006c, 13 bytes>
0x40006c:	mov	esi, 8
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
