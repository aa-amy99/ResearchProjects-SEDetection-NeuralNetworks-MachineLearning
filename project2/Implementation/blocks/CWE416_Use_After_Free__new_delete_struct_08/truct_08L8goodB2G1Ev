<Block for 0x400096, 25 bytes>
0x400096:	endbr64	
0x40009a:	push	rbp
0x40009b:	mov	rbp, rsp
0x40009e:	sub	rsp, 0x10
0x4000a2:	mov	qword ptr [rbp - 8], 0
0x4000aa:	call	0x400000
<Block for 0x4000af, 9 bytes>
0x4000af:	test	eax, eax
0x4000b1:	setne	al
0x4000b4:	test	al, al
0x4000b6:	je	0x4000f1
<Block for 0x4000f1, 5 bytes>
0x4000f1:	call	0x40000f
<Block for 0x4000b8, 10 bytes>
0x4000b8:	mov	edi, 8
0x4000bd:	call	0x500000
<Block for 0x4000f6, 9 bytes>
0x4000f6:	test	eax, eax
0x4000f8:	setne	al
0x4000fb:	test	al, al
0x4000fd:	je	0x40010b
<Block for 0x4000c2, 34 bytes>
0x4000c2:	mov	qword ptr [rbp - 8], rax
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	mov	dword ptr [rax], 1
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	mov	dword ptr [rax + 4], 2
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	test	rax, rax
0x4000e2:	je	0x4000f1
<Block for 0x40010b, 3 bytes>
0x40010b:	nop	
0x40010c:	leave	
0x40010d:	ret	
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rdi, [rip + 0x15e]
0x400106:	call	0x500018
<Block for 0x4000e4, 13 bytes>
0x4000e4:	mov	esi, 8
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500008
