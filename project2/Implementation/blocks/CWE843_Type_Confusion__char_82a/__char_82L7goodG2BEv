<Block for 0x400095, 61 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	push	rbx
0x40009e:	sub	rsp, 0x28
0x4000a2:	mov	rax, qword ptr fs:[0x28]
0x4000ab:	mov	qword ptr [rbp - 0x18], rax
0x4000af:	xor	eax, eax
0x4000b1:	mov	qword ptr [rbp - 0x28], 0
0x4000b9:	mov	dword ptr [rbp - 0x2c], 8
0x4000c0:	lea	rax, [rbp - 0x2c]
0x4000c4:	mov	qword ptr [rbp - 0x28], rax
0x4000c8:	mov	edi, 8
0x4000cd:	call	0x500000
<Block for 0x4000d2, 11 bytes>
0x4000d2:	mov	rbx, rax
0x4000d5:	mov	rdi, rbx
0x4000d8:	call	0x40018a
<Block for 0x4000dd, 30 bytes>
0x4000dd:	mov	qword ptr [rbp - 0x20], rbx
0x4000e1:	mov	rax, qword ptr [rbp - 0x20]
0x4000e5:	mov	rax, qword ptr [rax]
0x4000e8:	mov	rcx, qword ptr [rax]
0x4000eb:	mov	rdx, qword ptr [rbp - 0x28]
0x4000ef:	mov	rax, qword ptr [rbp - 0x20]
0x4000f3:	mov	rsi, rdx
0x4000f6:	mov	rdi, rax
0x4000f9:	call	rcx
<Block for 0x4000fb, 9 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x20]
0x4000ff:	test	rax, rax
0x400102:	je	0x400111
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x400104, 13 bytes>
0x400104:	mov	esi, 8
0x400109:	mov	rdi, rax
0x40010c:	call	0x500008
<Block for 0x400126, 7 bytes>
0x400126:	add	rsp, 0x28
0x40012a:	pop	rbx
0x40012b:	pop	rbp
0x40012c:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500010
