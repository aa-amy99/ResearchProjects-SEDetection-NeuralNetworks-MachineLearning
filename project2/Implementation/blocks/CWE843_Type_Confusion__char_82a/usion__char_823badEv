<Block for 0x400000, 58 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	qword ptr [rbp - 0x28], 0
0x400024:	mov	byte ptr [rbp - 0x29], 0x61
0x400028:	lea	rax, [rbp - 0x29]
0x40002c:	mov	qword ptr [rbp - 0x28], rax
0x400030:	mov	edi, 8
0x400035:	call	0x500000
<Block for 0x40003a, 11 bytes>
0x40003a:	mov	rbx, rax
0x40003d:	mov	rdi, rbx
0x400040:	call	0x40015c
<Block for 0x400045, 30 bytes>
0x400045:	mov	qword ptr [rbp - 0x20], rbx
0x400049:	mov	rax, qword ptr [rbp - 0x20]
0x40004d:	mov	rax, qword ptr [rax]
0x400050:	mov	rcx, qword ptr [rax]
0x400053:	mov	rdx, qword ptr [rbp - 0x28]
0x400057:	mov	rax, qword ptr [rbp - 0x20]
0x40005b:	mov	rsi, rdx
0x40005e:	mov	rdi, rax
0x400061:	call	rcx
<Block for 0x400063, 9 bytes>
0x400063:	mov	rax, qword ptr [rbp - 0x20]
0x400067:	test	rax, rax
0x40006a:	je	0x400079
<Block for 0x400079, 16 bytes>
0x400079:	nop	
0x40007a:	mov	rax, qword ptr [rbp - 0x18]
0x40007e:	xor	rax, qword ptr fs:[0x28]
0x400087:	je	0x40008e
<Block for 0x40006c, 13 bytes>
0x40006c:	mov	esi, 8
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x40008e, 7 bytes>
0x40008e:	add	rsp, 0x28
0x400092:	pop	rbx
0x400093:	pop	rbp
0x400094:	ret	
<Block for 0x400089, 5 bytes>
0x400089:	call	0x500010
