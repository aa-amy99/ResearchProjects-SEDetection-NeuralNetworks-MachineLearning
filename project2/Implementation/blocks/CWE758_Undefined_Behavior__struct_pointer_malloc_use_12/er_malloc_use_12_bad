<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400070
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 8
0x400075:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x40007a, 11 bytes>
0x40007a:	mov	qword ptr [rbp - 0x28], rax
0x40007e:	cmp	qword ptr [rbp - 0x28], 0
0x400083:	jne	0x40008f
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 0x10], rax
0x400028:	cmp	qword ptr [rbp - 0x10], 0
0x40002d:	jne	0x400039
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 0xffffffff
0x40008a:	call	0x500010
<Block for 0x40008f, 10 bytes>
0x40008f:	mov	edi, 8
0x400094:	call	0x500008
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 23 bytes>
0x400039:	mov	rax, qword ptr [rbp - 0x10]
0x40003d:	mov	rax, qword ptr [rax]
0x400040:	mov	qword ptr [rbp - 8], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500018
<Block for 0x400099, 11 bytes>
0x400099:	mov	qword ptr [rbp - 0x20], rax
0x40009d:	cmp	qword ptr [rbp - 0x20], 0
0x4000a2:	jne	0x4000ae
<Block for 0x400050, 13 bytes>
0x400050:	mov	rax, qword ptr [rbp - 8]
0x400054:	mov	eax, dword ptr [rax]
0x400056:	mov	edi, eax
0x400058:	call	0x500020
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 0xffffffff
0x4000a9:	call	0x500010
<Block for 0x4000ae, 56 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x20]
0x4000b2:	mov	dword ptr [rax], 5
0x4000b8:	mov	rax, qword ptr [rbp - 0x20]
0x4000bc:	mov	dword ptr [rax + 4], 6
0x4000c3:	mov	rax, qword ptr [rbp - 0x28]
0x4000c7:	mov	rdx, qword ptr [rbp - 0x20]
0x4000cb:	mov	qword ptr [rax], rdx
0x4000ce:	mov	rax, qword ptr [rbp - 0x28]
0x4000d2:	mov	rax, qword ptr [rax]
0x4000d5:	mov	qword ptr [rbp - 0x18], rax
0x4000d9:	mov	rax, qword ptr [rbp - 0x18]
0x4000dd:	mov	eax, dword ptr [rax]
0x4000df:	mov	edi, eax
0x4000e1:	call	0x500020
<Block for 0x40005d, 14 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	mov	eax, dword ptr [rax + 4]
0x400064:	mov	edi, eax
0x400066:	call	0x500020
<Block for 0x4000e6, 14 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ea:	mov	eax, dword ptr [rax + 4]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500020
<Block for 0x40006b, 5 bytes>
0x40006b:	jmp	0x400100
<Block for 0x4000f4, 12 bytes>
0x4000f4:	mov	rax, qword ptr [rbp - 0x28]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500018
<Block for 0x400100, 3 bytes>
0x400100:	nop	
0x400101:	leave	
0x400102:	ret	
