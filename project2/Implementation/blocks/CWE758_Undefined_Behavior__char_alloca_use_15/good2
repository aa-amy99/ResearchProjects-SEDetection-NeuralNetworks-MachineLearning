<Block for 0x4001a8, 81 bytes>
0x4001a8:	endbr64	
0x4001ac:	push	rbp
0x4001ad:	mov	rbp, rsp
0x4001b0:	sub	rsp, 0x20
0x4001b4:	mov	rax, qword ptr fs:[0x28]
0x4001bd:	mov	qword ptr [rbp - 8], rax
0x4001c1:	xor	eax, eax
0x4001c3:	mov	eax, 0x10
0x4001c8:	sub	rax, 1
0x4001cc:	add	rax, 9
0x4001d0:	mov	esi, 0x10
0x4001d5:	mov	edx, 0
0x4001da:	div	rsi
0x4001dd:	imul	rax, rax, 0x10
0x4001e1:	mov	rdx, rax
0x4001e4:	and	rdx, 0xfffffffffffff000
0x4001eb:	mov	rcx, rsp
0x4001ee:	sub	rcx, rdx
0x4001f1:	mov	rdx, rcx
0x4001f4:	cmp	rsp, rdx
0x4001f7:	je	0x40020b
<Block for 0x40020b, 26 bytes>
0x40020b:	mov	rdx, rax
0x40020e:	and	edx, 0xfff
0x400214:	sub	rsp, rdx
0x400217:	mov	rdx, rax
0x40021a:	and	edx, 0xfff
0x400220:	test	rdx, rdx
0x400223:	je	0x400235
<Block for 0x4001f9, 18 bytes>
0x4001f9:	sub	rsp, 0x1000
0x400200:	or	qword ptr [rsp + 0xff8], 0
0x400209:	jmp	0x4001f4
<Block for 0x400235, 54 bytes>
0x400235:	mov	rax, rsp
0x400238:	add	rax, 0xf
0x40023c:	shr	rax, 4
0x400240:	shl	rax, 4
0x400244:	mov	qword ptr [rbp - 0x10], rax
0x400248:	mov	byte ptr [rbp - 0x12], 5
0x40024c:	mov	rax, qword ptr [rbp - 0x10]
0x400250:	movzx	edx, byte ptr [rbp - 0x12]
0x400254:	mov	byte ptr [rax], dl
0x400256:	mov	rax, qword ptr [rbp - 0x10]
0x40025a:	movzx	eax, byte ptr [rax]
0x40025d:	mov	byte ptr [rbp - 0x11], al
0x400260:	movsx	eax, byte ptr [rbp - 0x11]
0x400264:	mov	edi, eax
0x400266:	call	0x500000
<Block for 0x400225, 70 bytes>
0x400225:	and	eax, 0xfff
0x40022a:	sub	rax, 8
0x40022e:	add	rax, rsp
0x400231:	or	qword ptr [rax], 0
0x400235:	mov	rax, rsp
0x400238:	add	rax, 0xf
0x40023c:	shr	rax, 4
0x400240:	shl	rax, 4
0x400244:	mov	qword ptr [rbp - 0x10], rax
0x400248:	mov	byte ptr [rbp - 0x12], 5
0x40024c:	mov	rax, qword ptr [rbp - 0x10]
0x400250:	movzx	edx, byte ptr [rbp - 0x12]
0x400254:	mov	byte ptr [rax], dl
0x400256:	mov	rax, qword ptr [rbp - 0x10]
0x40025a:	movzx	eax, byte ptr [rax]
0x40025d:	mov	byte ptr [rbp - 0x11], al
0x400260:	movsx	eax, byte ptr [rbp - 0x11]
0x400264:	mov	edi, eax
0x400266:	call	0x500000
<Block for 0x4001f4, 5 bytes>
0x4001f4:	cmp	rsp, rdx
0x4001f7:	je	0x40020b
<Block for 0x40026b, 17 bytes>
0x40026b:	nop	
0x40026c:	nop	
0x40026d:	mov	rax, qword ptr [rbp - 8]
0x400271:	xor	rax, qword ptr fs:[0x28]
0x40027a:	je	0x400281
<Block for 0x400281, 2 bytes>
0x400281:	leave	
0x400282:	ret	
<Block for 0x40027c, 5 bytes>
0x40027c:	call	0x500008
