<Block for 0x4000c7, 28 bytes>
0x4000c7:	endbr64	
0x4000cb:	push	rbp
0x4000cc:	mov	rbp, rsp
0x4000cf:	sub	rsp, 0x20
0x4000d3:	mov	qword ptr [rbp - 0x18], rdi
0x4000d7:	mov	rax, qword ptr [rbp - 0x18]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 19 bytes>
0x4000e3:	mov	qword ptr [rbp - 0x10], rax
0x4000e7:	mov	eax, 0x64
0x4000ec:	sub	rax, qword ptr [rbp - 0x10]
0x4000f0:	cmp	rax, 1
0x4000f4:	jbe	0x400169
<Block for 0x400169, 6 bytes>
0x400169:	mov	rax, qword ptr [rbp - 0x18]
0x40016d:	leave	
0x40016e:	ret	
<Block for 0x4000f6, 19 bytes>
0x4000f6:	lea	rsi, [rip + 0x72]
0x4000fd:	lea	rdi, [rip + 0x6d]
0x400104:	call	0x500008
<Block for 0x400109, 11 bytes>
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	cmp	qword ptr [rbp - 8], 0
0x400112:	je	0x400169
<Block for 0x400114, 42 bytes>
0x400114:	mov	rax, qword ptr [rbp - 0x10]
0x400118:	mov	edx, 0x64
0x40011d:	sub	edx, eax
0x40011f:	mov	eax, edx
0x400121:	mov	esi, eax
0x400123:	mov	rdx, qword ptr [rbp - 0x18]
0x400127:	mov	rax, qword ptr [rbp - 0x10]
0x40012b:	lea	rcx, [rdx + rax]
0x40012f:	mov	rax, qword ptr [rbp - 8]
0x400133:	mov	rdx, rax
0x400136:	mov	rdi, rcx
0x400139:	call	0x500010
<Block for 0x40013e, 5 bytes>
0x40013e:	test	rax, rax
0x400141:	jne	0x40015d
<Block for 0x400143, 12 bytes>
0x400143:	lea	rdi, [rip + 0x35]
0x40014a:	call	0x500018
<Block for 0x40015d, 12 bytes>
0x40015d:	mov	rax, qword ptr [rbp - 8]
0x400161:	mov	rdi, rax
0x400164:	call	0x500020
<Block for 0x40014f, 26 bytes>
0x40014f:	mov	rdx, qword ptr [rbp - 0x18]
0x400153:	mov	rax, qword ptr [rbp - 0x10]
0x400157:	add	rax, rdx
0x40015a:	mov	byte ptr [rax], 0
0x40015d:	mov	rax, qword ptr [rbp - 8]
0x400161:	mov	rdi, rax
0x400164:	call	0x500020
