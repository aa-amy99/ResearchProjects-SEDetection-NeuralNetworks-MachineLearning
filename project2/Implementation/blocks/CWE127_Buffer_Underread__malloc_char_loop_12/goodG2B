<Block for 0x400157, 51 bytes>
0x400157:	endbr64	
0x40015b:	push	rbp
0x40015c:	mov	rbp, rsp
0x40015f:	sub	rsp, 0x90
0x400166:	mov	rax, qword ptr fs:[0x28]
0x40016f:	mov	qword ptr [rbp - 8], rax
0x400173:	xor	eax, eax
0x400175:	mov	qword ptr [rbp - 0x90], 0
0x400180:	mov	eax, 0
0x400185:	call	0x500000
<Block for 0x40018a, 4 bytes>
0x40018a:	test	eax, eax
0x40018c:	je	0x4001db
<Block for 0x4001db, 10 bytes>
0x4001db:	mov	edi, 0x64
0x4001e0:	call	0x500008
<Block for 0x40018e, 10 bytes>
0x40018e:	mov	edi, 0x64
0x400193:	call	0x500008
<Block for 0x4001e5, 11 bytes>
0x4001e5:	mov	qword ptr [rbp - 0x80], rax
0x4001e9:	cmp	qword ptr [rbp - 0x80], 0
0x4001ee:	jne	0x4001fa
<Block for 0x400198, 11 bytes>
0x400198:	mov	qword ptr [rbp - 0x78], rax
0x40019c:	cmp	qword ptr [rbp - 0x78], 0
0x4001a1:	jne	0x4001ad
<Block for 0x4001f0, 10 bytes>
0x4001f0:	mov	edi, 0xffffffff
0x4001f5:	call	0x500010
<Block for 0x4001fa, 22 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x80]
0x4001fe:	mov	edx, 0x63
0x400203:	mov	esi, 0x41
0x400208:	mov	rdi, rax
0x40020b:	call	0x500018
<Block for 0x4001a3, 10 bytes>
0x4001a3:	mov	edi, 0xffffffff
0x4001a8:	call	0x500010
<Block for 0x4001ad, 22 bytes>
0x4001ad:	mov	rax, qword ptr [rbp - 0x78]
0x4001b1:	mov	edx, 0x63
0x4001b6:	mov	esi, 0x41
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500018
<Block for 0x400210, 44 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0x80]
0x400214:	add	rax, 0x63
0x400218:	mov	byte ptr [rax], 0
0x40021b:	mov	rax, qword ptr [rbp - 0x80]
0x40021f:	mov	qword ptr [rbp - 0x90], rax
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500018
<Block for 0x4001c3, 24 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x78]
0x4001c7:	add	rax, 0x63
0x4001cb:	mov	byte ptr [rax], 0
0x4001ce:	mov	rax, qword ptr [rbp - 0x78]
0x4001d2:	mov	qword ptr [rbp - 0x90], rax
0x4001d9:	jmp	0x400226
<Block for 0x40023c, 17 bytes>
0x40023c:	mov	byte ptr [rbp - 0xd], 0
0x400240:	mov	qword ptr [rbp - 0x88], 0
0x40024b:	jmp	0x400279
<Block for 0x400226, 22 bytes>
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500018
<Block for 0x400279, 10 bytes>
0x400279:	cmp	qword ptr [rbp - 0x88], 0x63
0x400281:	jbe	0x40024d
<Block for 0x40024d, 54 bytes>
0x40024d:	mov	rdx, qword ptr [rbp - 0x90]
0x400254:	mov	rax, qword ptr [rbp - 0x88]
0x40025b:	add	rax, rdx
0x40025e:	movzx	eax, byte ptr [rax]
0x400261:	lea	rcx, [rbp - 0x70]
0x400265:	mov	rdx, qword ptr [rbp - 0x88]
0x40026c:	add	rdx, rcx
0x40026f:	mov	byte ptr [rdx], al
0x400271:	add	qword ptr [rbp - 0x88], 1
0x400279:	cmp	qword ptr [rbp - 0x88], 0x63
0x400281:	jbe	0x40024d
<Block for 0x400283, 16 bytes>
0x400283:	mov	byte ptr [rbp - 0xd], 0
0x400287:	lea	rax, [rbp - 0x70]
0x40028b:	mov	rdi, rax
0x40028e:	call	0x500020
<Block for 0x400293, 16 bytes>
0x400293:	nop	
0x400294:	mov	rax, qword ptr [rbp - 8]
0x400298:	xor	rax, qword ptr fs:[0x28]
0x4002a1:	je	0x4002a8
<Block for 0x4002a8, 2 bytes>
0x4002a8:	leave	
0x4002a9:	ret	
<Block for 0x4002a3, 5 bytes>
0x4002a3:	call	0x500028
