<Block for 0x400258, 81 bytes>
0x400258:	endbr64	
0x40025c:	push	rbp
0x40025d:	mov	rbp, rsp
0x400260:	add	rsp, -0x80
0x400264:	mov	rax, qword ptr fs:[0x28]
0x40026d:	mov	qword ptr [rbp - 8], rax
0x400271:	xor	eax, eax
0x400273:	mov	eax, 0x10
0x400278:	sub	rax, 1
0x40027c:	add	rax, 0x6c
0x400280:	mov	ecx, 0x10
0x400285:	mov	edx, 0
0x40028a:	div	rcx
0x40028d:	imul	rax, rax, 0x10
0x400291:	mov	rdx, rax
0x400294:	and	rdx, 0xfffffffffffff000
0x40029b:	mov	rcx, rsp
0x40029e:	sub	rcx, rdx
0x4002a1:	mov	rdx, rcx
0x4002a4:	cmp	rsp, rdx
0x4002a7:	je	0x4002bb
<Block for 0x4002bb, 26 bytes>
0x4002bb:	mov	rdx, rax
0x4002be:	and	edx, 0xfff
0x4002c4:	sub	rsp, rdx
0x4002c7:	mov	rdx, rax
0x4002ca:	and	edx, 0xfff
0x4002d0:	test	rdx, rdx
0x4002d3:	je	0x4002e5
<Block for 0x4002a9, 18 bytes>
0x4002a9:	sub	rsp, 0x1000
0x4002b0:	or	qword ptr [rsp + 0xff8], 0
0x4002b9:	jmp	0x4002a4
<Block for 0x4002e5, 41 bytes>
0x4002e5:	mov	rax, rsp
0x4002e8:	add	rax, 0xf
0x4002ec:	shr	rax, 4
0x4002f0:	shl	rax, 4
0x4002f4:	mov	qword ptr [rbp - 0x78], rax
0x4002f8:	mov	rax, qword ptr [rbp - 0x78]
0x4002fc:	mov	edx, 0x63
0x400301:	mov	esi, 0x41
0x400306:	mov	rdi, rax
0x400309:	call	0x500000
<Block for 0x4002d5, 57 bytes>
0x4002d5:	and	eax, 0xfff
0x4002da:	sub	rax, 8
0x4002de:	add	rax, rsp
0x4002e1:	or	qword ptr [rax], 0
0x4002e5:	mov	rax, rsp
0x4002e8:	add	rax, 0xf
0x4002ec:	shr	rax, 4
0x4002f0:	shl	rax, 4
0x4002f4:	mov	qword ptr [rbp - 0x78], rax
0x4002f8:	mov	rax, qword ptr [rbp - 0x78]
0x4002fc:	mov	edx, 0x63
0x400301:	mov	esi, 0x41
0x400306:	mov	rdi, rax
0x400309:	call	0x500000
<Block for 0x4002a4, 5 bytes>
0x4002a4:	cmp	rsp, rdx
0x4002a7:	je	0x4002bb
<Block for 0x40030e, 21 bytes>
0x40030e:	mov	rax, qword ptr [rbp - 0x78]
0x400312:	add	rax, 0x63
0x400316:	mov	byte ptr [rax], 0
0x400319:	mov	eax, 5
0x40031e:	cmp	eax, 5
0x400321:	jne	0x40032b
<Block for 0x400323, 30 bytes>
0x400323:	mov	rax, qword ptr [rbp - 0x78]
0x400327:	mov	qword ptr [rbp - 0x80], rax
0x40032b:	lea	rax, [rbp - 0x70]
0x40032f:	mov	edx, 0x63
0x400334:	mov	esi, 0x43
0x400339:	mov	rdi, rax
0x40033c:	call	0x500000
<Block for 0x40032b, 22 bytes>
0x40032b:	lea	rax, [rbp - 0x70]
0x40032f:	mov	edx, 0x63
0x400334:	mov	esi, 0x43
0x400339:	mov	rdi, rax
0x40033c:	call	0x500000
<Block for 0x400341, 23 bytes>
0x400341:	mov	byte ptr [rbp - 0xd], 0
0x400345:	lea	rdx, [rbp - 0x70]
0x400349:	mov	rax, qword ptr [rbp - 0x80]
0x40034d:	mov	rsi, rdx
0x400350:	mov	rdi, rax
0x400353:	call	0x500008
<Block for 0x400358, 12 bytes>
0x400358:	mov	rax, qword ptr [rbp - 0x80]
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500010
<Block for 0x400364, 16 bytes>
0x400364:	nop	
0x400365:	mov	rax, qword ptr [rbp - 8]
0x400369:	xor	rax, qword ptr fs:[0x28]
0x400372:	je	0x400379
<Block for 0x400379, 2 bytes>
0x400379:	leave	
0x40037a:	ret	
<Block for 0x400374, 5 bytes>
0x400374:	call	0x500018
