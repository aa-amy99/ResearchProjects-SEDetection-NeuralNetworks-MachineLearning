<Block for 0x4000b8, 55 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0xf0
0x4000c7:	mov	rax, qword ptr fs:[0x28]
0x4000d0:	mov	qword ptr [rbp - 8], rax
0x4000d4:	xor	eax, eax
0x4000d6:	lea	rax, [rbp - 0xe0]
0x4000dd:	mov	edx, 0x63
0x4000e2:	mov	esi, 0x41
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500000
<Block for 0x4000ef, 45 bytes>
0x4000ef:	mov	byte ptr [rbp - 0x7d], 0
0x4000f3:	nop	
0x4000f4:	endbr64	
0x4000f8:	lea	rax, [rbp - 0xe0]
0x4000ff:	mov	qword ptr [rbp - 0xe8], rax
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	edx, 0x63
0x40010f:	mov	esi, 0x43
0x400114:	mov	rdi, rax
0x400117:	call	0x500000
<Block for 0x40011c, 16 bytes>
0x40011c:	mov	byte ptr [rbp - 0xd], 0
0x400120:	lea	rax, [rbp - 0x70]
0x400124:	mov	rdi, rax
0x400127:	call	0x500008
<Block for 0x40012c, 25 bytes>
0x40012c:	mov	rdx, rax
0x40012f:	mov	rcx, qword ptr [rbp - 0xe8]
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	rsi, rcx
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x400145, 16 bytes>
0x400145:	mov	byte ptr [rbp - 0xd], 0
0x400149:	lea	rax, [rbp - 0x70]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500018
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500020
