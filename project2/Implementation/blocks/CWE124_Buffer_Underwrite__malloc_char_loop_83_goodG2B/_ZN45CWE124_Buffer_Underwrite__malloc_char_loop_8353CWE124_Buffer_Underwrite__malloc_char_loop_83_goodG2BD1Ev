<Block for 0x40006e, 59 bytes>
0x40006e:	endbr64	
0x400072:	push	rbp
0x400073:	mov	rbp, rsp
0x400076:	sub	rsp, 0x90
0x40007d:	mov	qword ptr [rbp - 0x88], rdi
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	edx, 0x63
0x40009c:	mov	esi, 0x43
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 19 bytes>
0x4000a9:	mov	byte ptr [rbp - 0xd], 0
0x4000ad:	mov	qword ptr [rbp - 0x78], 0
0x4000b5:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000ba:	ja	0x4000e4
<Block for 0x4000bc, 40 bytes>
0x4000bc:	mov	rax, qword ptr [rbp - 0x88]
0x4000c3:	mov	rdx, qword ptr [rax]
0x4000c6:	mov	rax, qword ptr [rbp - 0x78]
0x4000ca:	add	rdx, rax
0x4000cd:	lea	rcx, [rbp - 0x70]
0x4000d1:	mov	rax, qword ptr [rbp - 0x78]
0x4000d5:	add	rax, rcx
0x4000d8:	movzx	eax, byte ptr [rax]
0x4000db:	mov	byte ptr [rdx], al
0x4000dd:	add	qword ptr [rbp - 0x78], 1
0x4000e2:	jmp	0x4000b5
<Block for 0x4000e4, 35 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x88]
0x4000eb:	mov	rax, qword ptr [rax]
0x4000ee:	add	rax, 0x63
0x4000f2:	mov	byte ptr [rax], 0
0x4000f5:	mov	rax, qword ptr [rbp - 0x88]
0x4000fc:	mov	rax, qword ptr [rax]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
<Block for 0x4000b5, 7 bytes>
0x4000b5:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000ba:	ja	0x4000e4
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500020
