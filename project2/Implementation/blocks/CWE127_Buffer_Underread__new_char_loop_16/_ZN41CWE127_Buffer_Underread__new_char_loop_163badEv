<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	edi, 0x64
0x40002b:	call	0x500000
<Block for 0x400030, 26 bytes>
0x400030:	mov	qword ptr [rbp - 0x78], rax
0x400034:	mov	rax, qword ptr [rbp - 0x78]
0x400038:	mov	edx, 0x63
0x40003d:	mov	esi, 0x41
0x400042:	mov	rdi, rax
0x400045:	call	0x500008
<Block for 0x40004a, 46 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 0x78]
0x40004e:	add	rax, 0x63
0x400052:	mov	byte ptr [rax], 0
0x400055:	mov	rax, qword ptr [rbp - 0x78]
0x400059:	sub	rax, 8
0x40005d:	mov	qword ptr [rbp - 0x80], rax
0x400061:	nop	
0x400062:	lea	rax, [rbp - 0x70]
0x400066:	mov	edx, 0x63
0x40006b:	mov	esi, 0x43
0x400070:	mov	rdi, rax
0x400073:	call	0x500008
<Block for 0x400078, 25 bytes>
0x400078:	mov	byte ptr [rbp - 0xd], 0
0x40007c:	mov	qword ptr [rbp - 0x88], 0
0x400087:	cmp	qword ptr [rbp - 0x88], 0x63
0x40008f:	ja	0x4000bc
<Block for 0x400091, 43 bytes>
0x400091:	mov	rdx, qword ptr [rbp - 0x80]
0x400095:	mov	rax, qword ptr [rbp - 0x88]
0x40009c:	add	rax, rdx
0x40009f:	movzx	eax, byte ptr [rax]
0x4000a2:	lea	rcx, [rbp - 0x70]
0x4000a6:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ad:	add	rdx, rcx
0x4000b0:	mov	byte ptr [rdx], al
0x4000b2:	add	qword ptr [rbp - 0x88], 1
0x4000ba:	jmp	0x400087
<Block for 0x4000bc, 16 bytes>
0x4000bc:	mov	byte ptr [rbp - 0xd], 0
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500010
<Block for 0x400087, 10 bytes>
0x400087:	cmp	qword ptr [rbp - 0x88], 0x63
0x40008f:	ja	0x4000bc
<Block for 0x4000cc, 16 bytes>
0x4000cc:	nop	
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	xor	rax, qword ptr fs:[0x28]
0x4000da:	je	0x4000e1
<Block for 0x4000e1, 2 bytes>
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000dc, 5 bytes>
0x4000dc:	call	0x500018
