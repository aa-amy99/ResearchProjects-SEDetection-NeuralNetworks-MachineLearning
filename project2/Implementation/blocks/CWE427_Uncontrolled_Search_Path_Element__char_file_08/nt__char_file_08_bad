<Block for 0x40001e, 82 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x130
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	movabs	rax, 0x3d48544150
0x400046:	mov	edx, 0
0x40004b:	mov	qword ptr [rbp - 0x110], rax
0x400052:	mov	qword ptr [rbp - 0x108], rdx
0x400059:	lea	rdx, [rbp - 0x100]
0x400060:	mov	eax, 0
0x400065:	mov	ecx, 0x1d
0x40006a:	mov	rdi, rdx
0x40006d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400070, 34 bytes>
0x400070:	mov	rdx, rdi
0x400073:	mov	word ptr [rdx], ax
0x400076:	add	rdx, 2
0x40007a:	lea	rax, [rbp - 0x110]
0x400081:	mov	qword ptr [rbp - 0x128], rax
0x400088:	mov	eax, 0
0x40008d:	call	0x400000
<Block for 0x40006d, 3 bytes>
0x40006d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400092, 8 bytes>
0x400092:	test	eax, eax
0x400094:	je	0x400154
<Block for 0x400154, 15 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x128]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500028
<Block for 0x40009a, 15 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 0x128]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500000
<Block for 0x400163, 16 bytes>
0x400163:	nop	
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	xor	rax, qword ptr fs:[0x28]
0x400171:	je	0x400178
<Block for 0x4000a9, 29 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x120], rax
0x4000b0:	mov	eax, 0xfa
0x4000b5:	sub	rax, qword ptr [rbp - 0x120]
0x4000bc:	cmp	rax, 1
0x4000c0:	jbe	0x400154
<Block for 0x400178, 2 bytes>
0x400178:	leave	
0x400179:	ret	
<Block for 0x400173, 5 bytes>
0x400173:	call	0x500030
<Block for 0x4000c6, 19 bytes>
0x4000c6:	lea	rsi, [rip + 0x288]
0x4000cd:	lea	rdi, [rip + 0x283]
0x4000d4:	call	0x500008
<Block for 0x4000d9, 17 bytes>
0x4000d9:	mov	qword ptr [rbp - 0x118], rax
0x4000e0:	cmp	qword ptr [rbp - 0x118], 0
0x4000e8:	je	0x400154
<Block for 0x4000ea, 54 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 0x120]
0x4000f1:	mov	edx, 0xfa
0x4000f6:	sub	edx, eax
0x4000f8:	mov	eax, edx
0x4000fa:	mov	esi, eax
0x4000fc:	mov	rdx, qword ptr [rbp - 0x128]
0x400103:	mov	rax, qword ptr [rbp - 0x120]
0x40010a:	lea	rcx, [rdx + rax]
0x40010e:	mov	rax, qword ptr [rbp - 0x118]
0x400115:	mov	rdx, rax
0x400118:	mov	rdi, rcx
0x40011b:	call	0x500010
<Block for 0x400120, 5 bytes>
0x400120:	test	rax, rax
0x400123:	jne	0x400145
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x239]
0x40012c:	call	0x500018
<Block for 0x400145, 15 bytes>
0x400145:	mov	rax, qword ptr [rbp - 0x118]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500020
<Block for 0x400131, 35 bytes>
0x400131:	mov	rdx, qword ptr [rbp - 0x128]
0x400138:	mov	rax, qword ptr [rbp - 0x120]
0x40013f:	add	rax, rdx
0x400142:	mov	byte ptr [rax], 0
0x400145:	mov	rax, qword ptr [rbp - 0x118]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500020
