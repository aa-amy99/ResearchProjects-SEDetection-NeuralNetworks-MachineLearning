<Block for 0x40017b, 112 bytes>
0x40017b:	endbr64	
0x40017f:	push	rbp
0x400180:	mov	rbp, rsp
0x400183:	sub	rsp, 0xa0
0x40018a:	mov	rax, qword ptr fs:[0x28]
0x400193:	mov	qword ptr [rbp - 8], rax
0x400197:	xor	eax, eax
0x400199:	lea	rax, [rbp - 0xa0]
0x4001a0:	mov	qword ptr [rbp - 0x98], rax
0x4001a7:	lea	rax, [rbp - 0xa0]
0x4001ae:	mov	qword ptr [rbp - 0x90], rax
0x4001b5:	mov	eax, 0x10
0x4001ba:	sub	rax, 1
0x4001be:	add	rax, 0x6c
0x4001c2:	mov	esi, 0x10
0x4001c7:	mov	edx, 0
0x4001cc:	div	rsi
0x4001cf:	imul	rax, rax, 0x10
0x4001d3:	mov	rdx, rax
0x4001d6:	and	rdx, 0xfffffffffffff000
0x4001dd:	mov	rcx, rsp
0x4001e0:	sub	rcx, rdx
0x4001e3:	mov	rdx, rcx
0x4001e6:	cmp	rsp, rdx
0x4001e9:	je	0x4001fd
<Block for 0x4001fd, 26 bytes>
0x4001fd:	mov	rdx, rax
0x400200:	and	edx, 0xfff
0x400206:	sub	rsp, rdx
0x400209:	mov	rdx, rax
0x40020c:	and	edx, 0xfff
0x400212:	test	rdx, rdx
0x400215:	je	0x400227
<Block for 0x4001eb, 18 bytes>
0x4001eb:	sub	rsp, 0x1000
0x4001f2:	or	qword ptr [rsp + 0xff8], 0
0x4001fb:	jmp	0x4001e6
<Block for 0x400227, 47 bytes>
0x400227:	mov	rax, rsp
0x40022a:	add	rax, 0xf
0x40022e:	shr	rax, 4
0x400232:	shl	rax, 4
0x400236:	mov	qword ptr [rbp - 0x88], rax
0x40023d:	mov	rax, qword ptr [rbp - 0x88]
0x400244:	mov	edx, 0x63
0x400249:	mov	esi, 0x41
0x40024e:	mov	rdi, rax
0x400251:	call	0x500000
<Block for 0x400217, 63 bytes>
0x400217:	and	eax, 0xfff
0x40021c:	sub	rax, 8
0x400220:	add	rax, rsp
0x400223:	or	qword ptr [rax], 0
0x400227:	mov	rax, rsp
0x40022a:	add	rax, 0xf
0x40022e:	shr	rax, 4
0x400232:	shl	rax, 4
0x400236:	mov	qword ptr [rbp - 0x88], rax
0x40023d:	mov	rax, qword ptr [rbp - 0x88]
0x400244:	mov	edx, 0x63
0x400249:	mov	esi, 0x41
0x40024e:	mov	rdi, rax
0x400251:	call	0x500000
<Block for 0x4001e6, 5 bytes>
0x4001e6:	cmp	rsp, rdx
0x4001e9:	je	0x4001fd
<Block for 0x400256, 89 bytes>
0x400256:	mov	rax, qword ptr [rbp - 0x88]
0x40025d:	add	rax, 0x63
0x400261:	mov	byte ptr [rax], 0
0x400264:	mov	rax, qword ptr [rbp - 0x98]
0x40026b:	mov	rax, qword ptr [rax]
0x40026e:	mov	qword ptr [rbp - 0x80], rax
0x400272:	mov	rax, qword ptr [rbp - 0x88]
0x400279:	mov	qword ptr [rbp - 0x80], rax
0x40027d:	mov	rax, qword ptr [rbp - 0x98]
0x400284:	mov	rdx, qword ptr [rbp - 0x80]
0x400288:	mov	qword ptr [rax], rdx
0x40028b:	mov	rax, qword ptr [rbp - 0x90]
0x400292:	mov	rax, qword ptr [rax]
0x400295:	mov	qword ptr [rbp - 0x78], rax
0x400299:	lea	rax, [rbp - 0x70]
0x40029d:	mov	edx, 0x63
0x4002a2:	mov	esi, 0x43
0x4002a7:	mov	rdi, rax
0x4002aa:	call	0x500000
<Block for 0x4002af, 28 bytes>
0x4002af:	mov	byte ptr [rbp - 0xd], 0
0x4002b3:	mov	rcx, qword ptr [rbp - 0x78]
0x4002b7:	lea	rax, [rbp - 0x70]
0x4002bb:	mov	edx, 0x64
0x4002c0:	mov	rsi, rcx
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500008
<Block for 0x4002cb, 16 bytes>
0x4002cb:	mov	byte ptr [rbp - 0xd], 0
0x4002cf:	lea	rax, [rbp - 0x70]
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x500010
<Block for 0x4002db, 16 bytes>
0x4002db:	nop	
0x4002dc:	mov	rax, qword ptr [rbp - 8]
0x4002e0:	xor	rax, qword ptr fs:[0x28]
0x4002e9:	je	0x4002f0
<Block for 0x4002f0, 2 bytes>
0x4002f0:	leave	
0x4002f1:	ret	
<Block for 0x4002eb, 5 bytes>
0x4002eb:	call	0x500018
