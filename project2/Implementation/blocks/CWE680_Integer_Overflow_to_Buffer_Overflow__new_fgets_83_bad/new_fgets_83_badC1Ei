<Block for 0x400000, 88 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	dword ptr [rbp - 0x2c], esi
0x400013:	mov	rax, qword ptr fs:[0x28]
0x40001c:	mov	qword ptr [rbp - 8], rax
0x400020:	xor	eax, eax
0x400022:	mov	rax, qword ptr [rbp - 0x28]
0x400026:	mov	edx, dword ptr [rbp - 0x2c]
0x400029:	mov	dword ptr [rax], edx
0x40002b:	mov	qword ptr [rbp - 0x16], 0
0x400033:	mov	dword ptr [rbp - 0xe], 0
0x40003a:	mov	word ptr [rbp - 0xa], 0
0x400040:	mov	rdx, qword ptr [rip + 0xfffb9]
0x400047:	lea	rax, [rbp - 0x16]
0x40004b:	mov	esi, 0xe
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400058, 10 bytes>
0x400058:	test	rax, rax
0x40005b:	setne	al
0x40005e:	test	al, al
0x400060:	je	0x400076
<Block for 0x400076, 12 bytes>
0x400076:	lea	rdi, [rip + 0xa6]
0x40007d:	call	0x500018
<Block for 0x400062, 12 bytes>
0x400062:	lea	rax, [rbp - 0x16]
0x400066:	mov	rdi, rax
0x400069:	call	0x500010
<Block for 0x400082, 16 bytes>
0x400082:	nop	
0x400083:	mov	rax, qword ptr [rbp - 8]
0x400087:	xor	rax, qword ptr fs:[0x28]
0x400090:	je	0x400097
<Block for 0x40006e, 8 bytes>
0x40006e:	mov	rdx, qword ptr [rbp - 0x28]
0x400072:	mov	dword ptr [rdx], eax
0x400074:	jmp	0x400082
<Block for 0x400097, 2 bytes>
0x400097:	leave	
0x400098:	ret	
<Block for 0x400092, 5 bytes>
0x400092:	call	0x500020
