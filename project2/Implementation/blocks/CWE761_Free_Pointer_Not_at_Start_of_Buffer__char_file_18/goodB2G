<Block for 0x400103, 22 bytes>
0x400103:	endbr64	
0x400107:	push	rbp
0x400108:	mov	rbp, rsp
0x40010b:	sub	rsp, 0x20
0x40010f:	mov	edi, 0x64
0x400114:	call	0x500000
<Block for 0x400119, 11 bytes>
0x400119:	mov	qword ptr [rbp - 0x18], rax
0x40011d:	cmp	qword ptr [rbp - 0x18], 0
0x400122:	jne	0x40012e
<Block for 0x400124, 10 bytes>
0x400124:	mov	edi, 0xffffffff
0x400129:	call	0x500008
<Block for 0x40012e, 19 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x18]
0x400132:	mov	byte ptr [rax], 0
0x400135:	mov	rax, qword ptr [rbp - 0x18]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500010
<Block for 0x400141, 19 bytes>
0x400141:	mov	qword ptr [rbp - 0x10], rax
0x400145:	mov	eax, 0x64
0x40014a:	sub	rax, qword ptr [rbp - 0x10]
0x40014e:	cmp	rax, 1
0x400152:	jbe	0x4001c7
<Block for 0x4001c7, 15 bytes>
0x4001c7:	nop	
0x4001c8:	endbr64	
0x4001cc:	mov	qword ptr [rbp - 0x20], 0
0x4001d4:	jmp	0x4001fb
<Block for 0x400154, 19 bytes>
0x400154:	lea	rsi, [rip + 0xd6]
0x40015b:	lea	rdi, [rip + 0xd1]
0x400162:	call	0x500018
<Block for 0x4001fb, 12 bytes>
0x4001fb:	mov	rax, qword ptr [rbp - 0x18]
0x4001ff:	mov	rdi, rax
0x400202:	call	0x500010
<Block for 0x400167, 11 bytes>
0x400167:	mov	qword ptr [rbp - 8], rax
0x40016b:	cmp	qword ptr [rbp - 8], 0
0x400170:	je	0x4001c7
<Block for 0x400207, 6 bytes>
0x400207:	cmp	qword ptr [rbp - 0x20], rax
0x40020b:	jb	0x4001d6
<Block for 0x400172, 42 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0x10]
0x400176:	mov	edx, 0x64
0x40017b:	sub	edx, eax
0x40017d:	mov	eax, edx
0x40017f:	mov	esi, eax
0x400181:	mov	rdx, qword ptr [rbp - 0x18]
0x400185:	mov	rax, qword ptr [rbp - 0x10]
0x400189:	lea	rcx, [rdx + rax]
0x40018d:	mov	rax, qword ptr [rbp - 8]
0x400191:	mov	rdx, rax
0x400194:	mov	rdi, rcx
0x400197:	call	0x500020
<Block for 0x4001d6, 18 bytes>
0x4001d6:	mov	rdx, qword ptr [rbp - 0x18]
0x4001da:	mov	rax, qword ptr [rbp - 0x20]
0x4001de:	add	rax, rdx
0x4001e1:	movzx	eax, byte ptr [rax]
0x4001e4:	cmp	al, 0x53
0x4001e6:	jne	0x4001f6
<Block for 0x40020d, 12 bytes>
0x40020d:	mov	rax, qword ptr [rbp - 0x18]
0x400211:	mov	rdi, rax
0x400214:	call	0x500038
<Block for 0x40019c, 5 bytes>
0x40019c:	test	rax, rax
0x40019f:	jne	0x4001bb
<Block for 0x4001e8, 12 bytes>
0x4001e8:	lea	rdi, [rip + 0x61]
0x4001ef:	call	0x500028
<Block for 0x4001f6, 17 bytes>
0x4001f6:	add	qword ptr [rbp - 0x20], 1
0x4001fb:	mov	rax, qword ptr [rbp - 0x18]
0x4001ff:	mov	rdi, rax
0x400202:	call	0x500010
<Block for 0x400219, 3 bytes>
0x400219:	nop	
0x40021a:	leave	
0x40021b:	ret	
<Block for 0x4001a1, 12 bytes>
0x4001a1:	lea	rdi, [rip + 0x99]
0x4001a8:	call	0x500028
<Block for 0x4001bb, 12 bytes>
0x4001bb:	mov	rax, qword ptr [rbp - 8]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500030
<Block for 0x4001f4, 2 bytes>
0x4001f4:	jmp	0x40020d
<Block for 0x4001ad, 26 bytes>
0x4001ad:	mov	rdx, qword ptr [rbp - 0x18]
0x4001b1:	mov	rax, qword ptr [rbp - 0x10]
0x4001b5:	add	rax, rdx
0x4001b8:	mov	byte ptr [rax], 0
0x4001bb:	mov	rax, qword ptr [rbp - 8]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500030
