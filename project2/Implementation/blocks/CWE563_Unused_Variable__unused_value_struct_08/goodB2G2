<Block for 0x40010a, 37 bytes>
0x40010a:	endbr64	
0x40010e:	push	rbp
0x40010f:	mov	rbp, rsp
0x400112:	sub	rsp, 0x10
0x400116:	mov	rax, qword ptr fs:[0x28]
0x40011f:	mov	qword ptr [rbp - 8], rax
0x400123:	xor	eax, eax
0x400125:	mov	eax, 0
0x40012a:	call	0x400000
<Block for 0x40012f, 4 bytes>
0x40012f:	test	eax, eax
0x400131:	je	0x400141
<Block for 0x400141, 10 bytes>
0x400141:	mov	eax, 0
0x400146:	call	0x400000
<Block for 0x400133, 24 bytes>
0x400133:	mov	dword ptr [rbp - 0x10], 0
0x40013a:	mov	dword ptr [rbp - 0xc], 0
0x400141:	mov	eax, 0
0x400146:	call	0x400000
<Block for 0x40014b, 4 bytes>
0x40014b:	test	eax, eax
0x40014d:	je	0x40015b
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x40014f, 12 bytes>
0x40014f:	lea	rax, [rbp - 0x10]
0x400153:	mov	rdi, rax
0x400156:	call	0x500000
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500008
