<Block for 0x4000e2, 49 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	add	rsp, -0x80
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	lea	rax, [rbp - 0x70]
0x400101:	mov	edx, 0x63
0x400106:	mov	esi, 0x41
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500000
<Block for 0x400113, 37 bytes>
0x400113:	mov	byte ptr [rbp - 0xd], 0
0x400117:	lea	rax, [rbp - 0x70]
0x40011b:	sub	rax, 8
0x40011f:	mov	qword ptr [rbp - 0x78], rax
0x400123:	mov	rax, qword ptr [rbp - 0x78]
0x400127:	mov	qword ptr [rip + 0x182], rax
0x40012e:	mov	eax, 0
0x400133:	call	0x400000
<Block for 0x400138, 16 bytes>
0x400138:	nop	
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	xor	rax, qword ptr fs:[0x28]
0x400146:	je	0x40014d
<Block for 0x40014d, 2 bytes>
0x40014d:	leave	
0x40014e:	ret	
<Block for 0x400148, 5 bytes>
0x400148:	call	0x500010
