<Block for 0x400000, 83 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x148]
0x400025:	mov	qword ptr [rbp - 0x140], rax
0x40002c:	lea	rax, [rbp - 0x148]
0x400033:	mov	qword ptr [rbp - 0x138], rax
0x40003a:	lea	rax, [rbp - 0x120]
0x400041:	mov	edx, 0x31
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500000
<Block for 0x400053, 32 bytes>
0x400053:	mov	byte ptr [rbp - 0xef], 0
0x40005a:	lea	rax, [rbp - 0xe0]
0x400061:	mov	edx, 0x63
0x400066:	mov	esi, 0x41
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500000
<Block for 0x400073, 91 bytes>
0x400073:	mov	byte ptr [rbp - 0x7d], 0
0x400077:	mov	rax, qword ptr [rbp - 0x140]
0x40007e:	mov	rax, qword ptr [rax]
0x400081:	mov	qword ptr [rbp - 0x130], rax
0x400088:	lea	rax, [rbp - 0x120]
0x40008f:	mov	qword ptr [rbp - 0x130], rax
0x400096:	mov	rax, qword ptr [rbp - 0x140]
0x40009d:	mov	rdx, qword ptr [rbp - 0x130]
0x4000a4:	mov	qword ptr [rax], rdx
0x4000a7:	mov	rax, qword ptr [rbp - 0x138]
0x4000ae:	mov	rax, qword ptr [rax]
0x4000b1:	mov	qword ptr [rbp - 0x128], rax
0x4000b8:	lea	rax, [rbp - 0x70]
0x4000bc:	mov	edx, 0x63
0x4000c1:	mov	esi, 0x43
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500000
<Block for 0x4000ce, 16 bytes>
0x4000ce:	mov	byte ptr [rbp - 0xd], 0
0x4000d2:	lea	rax, [rbp - 0x70]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500008
<Block for 0x4000de, 25 bytes>
0x4000de:	mov	rdx, rax
0x4000e1:	mov	rcx, qword ptr [rbp - 0x128]
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	rsi, rcx
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500010
<Block for 0x4000f7, 16 bytes>
0x4000f7:	mov	byte ptr [rbp - 0xd], 0
0x4000fb:	lea	rax, [rbp - 0x70]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500020
