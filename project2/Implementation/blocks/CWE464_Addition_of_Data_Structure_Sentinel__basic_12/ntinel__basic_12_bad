<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	eax, 0
0x400024:	call	0x500000
<Block for 0x400029, 4 bytes>
0x400029:	test	eax, eax
0x40002b:	je	0x400054
<Block for 0x400054, 35 bytes>
0x400054:	mov	byte ptr [rbp - 0xd], 0x61
0x400058:	mov	byte ptr [rbp - 0xc], 0x78
0x40005c:	movzx	eax, byte ptr [rbp - 0xd]
0x400060:	mov	byte ptr [rbp - 0xb], al
0x400063:	mov	byte ptr [rbp - 0xa], 0x7a
0x400067:	mov	byte ptr [rbp - 9], 0
0x40006b:	lea	rax, [rbp - 0xc]
0x40006f:	mov	rdi, rax
0x400072:	call	0x500020
<Block for 0x40002d, 15 bytes>
0x40002d:	mov	rax, qword ptr [rip + 0xfffd4]
0x400034:	mov	rdi, rax
0x400037:	call	0x500010
<Block for 0x400077, 16 bytes>
0x400077:	nop	
0x400078:	mov	rax, qword ptr [rbp - 8]
0x40007c:	xor	rax, qword ptr fs:[0x28]
0x400085:	je	0x40008c
<Block for 0x40003c, 19 bytes>
0x40003c:	mov	byte ptr [rbp - 0xc], al
0x40003f:	mov	byte ptr [rbp - 0xb], 0
0x400043:	lea	rax, [rbp - 0xc]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500018
<Block for 0x40008c, 2 bytes>
0x40008c:	leave	
0x40008d:	ret	
<Block for 0x400087, 5 bytes>
0x400087:	call	0x500028
<Block for 0x40004f, 5 bytes>
0x40004f:	mov	byte ptr [rbp - 0xd], al
0x400052:	jmp	0x400058
<Block for 0x400058, 31 bytes>
0x400058:	mov	byte ptr [rbp - 0xc], 0x78
0x40005c:	movzx	eax, byte ptr [rbp - 0xd]
0x400060:	mov	byte ptr [rbp - 0xb], al
0x400063:	mov	byte ptr [rbp - 0xa], 0x7a
0x400067:	mov	byte ptr [rbp - 9], 0
0x40006b:	lea	rax, [rbp - 0xc]
0x40006f:	mov	rdi, rax
0x400072:	call	0x500020
