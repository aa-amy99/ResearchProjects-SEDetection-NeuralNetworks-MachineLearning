<Block for 0x40008e, 41 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x10
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	byte ptr [rbp - 0xd], 0x20
0x4000ad:	mov	eax, 0
0x4000b2:	call	0x500000
<Block for 0x4000b7, 4 bytes>
0x4000b7:	test	eax, eax
0x4000b9:	je	0x4000c1
<Block for 0x4000c1, 35 bytes>
0x4000c1:	mov	byte ptr [rbp - 0xd], 0x61
0x4000c5:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c9:	movzx	eax, byte ptr [rbp - 0xd]
0x4000cd:	mov	byte ptr [rbp - 0xb], al
0x4000d0:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d4:	mov	byte ptr [rbp - 9], 0
0x4000d8:	lea	rax, [rbp - 0xc]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500020
<Block for 0x4000bb, 6 bytes>
0x4000bb:	mov	byte ptr [rbp - 0xd], 0x61
0x4000bf:	jmp	0x4000c5
<Block for 0x4000e4, 16 bytes>
0x4000e4:	nop	
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	xor	rax, qword ptr fs:[0x28]
0x4000f2:	je	0x4000f9
<Block for 0x4000c5, 31 bytes>
0x4000c5:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c9:	movzx	eax, byte ptr [rbp - 0xd]
0x4000cd:	mov	byte ptr [rbp - 0xb], al
0x4000d0:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d4:	mov	byte ptr [rbp - 9], 0
0x4000d8:	lea	rax, [rbp - 0xc]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500020
<Block for 0x4000f9, 2 bytes>
0x4000f9:	leave	
0x4000fa:	ret	
<Block for 0x4000f4, 5 bytes>
0x4000f4:	call	0x500028
