<Block for 0x400081, 25 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	push	rbx
0x40008a:	sub	rsp, 0x18
0x40008e:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400095:	call	0x500018
<Block for 0x40009a, 7 bytes>
0x40009a:	and	eax, 1
0x40009d:	test	eax, eax
0x40009f:	je	0x4000be
<Block for 0x4000be, 5 bytes>
0x4000be:	call	0x500018
<Block for 0x4000a1, 5 bytes>
0x4000a1:	call	0x500018
<Block for 0x4000c3, 10 bytes>
0x4000c3:	shl	eax, 0x1e
0x4000c6:	mov	ebx, eax
0x4000c8:	call	0x500018
<Block for 0x4000a6, 10 bytes>
0x4000a6:	shl	eax, 0x1e
0x4000a9:	mov	ebx, eax
0x4000ab:	call	0x500018
<Block for 0x4000cd, 10 bytes>
0x4000cd:	shl	eax, 0xf
0x4000d0:	xor	ebx, eax
0x4000d2:	call	0x500018
<Block for 0x4000b0, 10 bytes>
0x4000b0:	shl	eax, 0xf
0x4000b3:	xor	ebx, eax
0x4000b5:	call	0x500018
<Block for 0x4000d7, 17 bytes>
0x4000d7:	xor	eax, ebx
0x4000d9:	not	eax
0x4000db:	mov	dword ptr [rbp - 0x14], eax
0x4000de:	mov	eax, dword ptr [rbp - 0x14]
0x4000e1:	mov	edi, eax
0x4000e3:	call	0x400000
<Block for 0x4000ba, 4 bytes>
0x4000ba:	xor	eax, ebx
0x4000bc:	jmp	0x4000db
<Block for 0x4000e8, 8 bytes>
0x4000e8:	nop	
0x4000e9:	add	rsp, 0x18
0x4000ed:	pop	rbx
0x4000ee:	pop	rbp
0x4000ef:	ret	
<Block for 0x4000db, 13 bytes>
0x4000db:	mov	dword ptr [rbp - 0x14], eax
0x4000de:	mov	eax, dword ptr [rbp - 0x14]
0x4000e1:	mov	edi, eax
0x4000e3:	call	0x400000
