<Block for 0x400198, 76 bytes>
0x400198:	endbr64	
0x40019c:	push	rbp
0x40019d:	mov	rbp, rsp
0x4001a0:	sub	rsp, 0x40
0x4001a4:	mov	dword ptr [rbp - 0x34], edi
0x4001a7:	mov	rax, qword ptr fs:[0x28]
0x4001b0:	mov	qword ptr [rbp - 8], rax
0x4001b4:	xor	eax, eax
0x4001b6:	mov	qword ptr [rbp - 0x30], 0
0x4001be:	mov	qword ptr [rbp - 0x28], 0
0x4001c6:	mov	qword ptr [rbp - 0x20], 0
0x4001ce:	mov	qword ptr [rbp - 0x18], 0
0x4001d6:	mov	qword ptr [rbp - 0x10], 0
0x4001de:	cmp	dword ptr [rbp - 0x34], 0
0x4001e2:	js	0x4001fc
<Block for 0x4001fc, 12 bytes>
0x4001fc:	lea	rdi, [rip + 0xcd]
0x400203:	call	0x500008
<Block for 0x4001e4, 6 bytes>
0x4001e4:	cmp	dword ptr [rbp - 0x34], 9
0x4001e8:	jg	0x4001fc
<Block for 0x400208, 16 bytes>
0x400208:	nop	
0x400209:	mov	rax, qword ptr [rbp - 8]
0x40020d:	xor	rax, qword ptr fs:[0x28]
0x400216:	je	0x40021d
<Block for 0x4001ea, 16 bytes>
0x4001ea:	mov	eax, dword ptr [rbp - 0x34]
0x4001ed:	cdqe	
0x4001ef:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001f3:	mov	edi, eax
0x4001f5:	call	0x500000
<Block for 0x40021d, 2 bytes>
0x40021d:	leave	
0x40021e:	ret	
<Block for 0x400218, 5 bytes>
0x400218:	call	0x500010
<Block for 0x4001fa, 2 bytes>
0x4001fa:	jmp	0x400208
