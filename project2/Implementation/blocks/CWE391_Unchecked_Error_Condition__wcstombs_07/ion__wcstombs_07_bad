<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0x1db]
0x400021:	cmp	eax, 5
0x400024:	jne	0x400065
<Block for 0x400026, 36 bytes>
0x400026:	mov	qword ptr [rbp - 0x78], 0
0x40002e:	mov	byte ptr [rbp - 0x70], 0
0x400032:	lea	rax, [rbp - 0x70]
0x400036:	mov	edx, 0x64
0x40003b:	lea	rsi, [rip + 0x1be]
0x400042:	mov	rdi, rax
0x400045:	call	0x500000
<Block for 0x400065, 16 bytes>
0x400065:	nop	
0x400066:	mov	rax, qword ptr [rbp - 8]
0x40006a:	xor	rax, qword ptr fs:[0x28]
0x400073:	je	0x40007a
<Block for 0x40004a, 15 bytes>
0x40004a:	mov	qword ptr [rbp - 0x78], rax
0x40004e:	mov	rax, qword ptr [rbp - 0x78]
0x400052:	mov	edi, eax
0x400054:	call	0x500008
<Block for 0x40007a, 2 bytes>
0x40007a:	leave	
0x40007b:	ret	
<Block for 0x400075, 5 bytes>
0x400075:	call	0x500018
<Block for 0x400059, 12 bytes>
0x400059:	lea	rax, [rbp - 0x70]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
