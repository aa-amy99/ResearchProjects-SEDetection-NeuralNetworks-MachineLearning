<Block for 0x40007c, 38 bytes>
0x40007c:	endbr64	
0x400080:	push	rbp
0x400081:	mov	rbp, rsp
0x400084:	add	rsp, -0x80
0x400088:	mov	rax, qword ptr fs:[0x28]
0x400091:	mov	qword ptr [rbp - 8], rax
0x400095:	xor	eax, eax
0x400097:	mov	eax, dword ptr [rip + 0x15f]
0x40009d:	cmp	eax, 5
0x4000a0:	je	0x4000b0
<Block for 0x4000b0, 17 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x78], 0
0x4000b8:	mov	byte ptr [rbp - 0x70], 0
0x4000bc:	call	0x500020
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rdi, [rip + 0x15f]
0x4000a9:	call	0x500010
<Block for 0x4000c1, 30 bytes>
0x4000c1:	mov	dword ptr [rax], 0
0x4000c7:	lea	rax, [rbp - 0x70]
0x4000cb:	mov	edx, 0x64
0x4000d0:	lea	rsi, [rip + 0x129]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500000
<Block for 0x4000ae, 2 bytes>
0x4000ae:	jmp	0x40011c
<Block for 0x4000df, 9 bytes>
0x4000df:	mov	qword ptr [rbp - 0x78], rax
0x4000e3:	call	0x500020
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400131
<Block for 0x4000e8, 7 bytes>
0x4000e8:	mov	eax, dword ptr [rax]
0x4000ea:	cmp	eax, 0x54
0x4000ed:	jne	0x400105
<Block for 0x400131, 2 bytes>
0x400131:	leave	
0x400132:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500018
<Block for 0x4000ef, 12 bytes>
0x4000ef:	lea	rdi, [rip + 0x127]
0x4000f6:	call	0x500010
<Block for 0x400105, 11 bytes>
0x400105:	mov	rax, qword ptr [rbp - 0x78]
0x400109:	mov	edi, eax
0x40010b:	call	0x500008
<Block for 0x4000fb, 10 bytes>
0x4000fb:	mov	edi, 1
0x400100:	call	0x500028
<Block for 0x400110, 12 bytes>
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	rdi, rax
0x400117:	call	0x500010
