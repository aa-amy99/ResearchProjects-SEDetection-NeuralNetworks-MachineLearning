<Block for 0x4000dd, 37 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0x20
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	eax, dword ptr [rip + 0xfff02]
0x4000fe:	test	eax, eax
0x400100:	je	0x400136
<Block for 0x400136, 16 bytes>
0x400136:	nop	
0x400137:	mov	rax, qword ptr [rbp - 8]
0x40013b:	xor	rax, qword ptr fs:[0x28]
0x400144:	je	0x40014b
<Block for 0x400102, 17 bytes>
0x400102:	mov	esi, 0xa
0x400107:	lea	rdi, [rip + 0xfff0a]
0x40010e:	call	0x4001e0
<Block for 0x40014b, 2 bytes>
0x40014b:	leave	
0x40014c:	ret	
<Block for 0x400146, 5 bytes>
0x400146:	call	0x500020
<Block for 0x400113, 19 bytes>
0x400113:	lea	rax, [rbp - 0x12]
0x400117:	mov	rsi, rax
0x40011a:	lea	rdi, [rip + 0xffee7]
0x400121:	call	0x500010
<Block for 0x400126, 16 bytes>
0x400126:	mov	byte ptr [rbp - 9], 0
0x40012a:	lea	rax, [rbp - 0x12]
0x40012e:	mov	rdi, rax
0x400131:	call	0x500018
