<Block for 0x4000ef, 81 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0x20
0x4000fb:	mov	rax, qword ptr fs:[0x28]
0x400104:	mov	qword ptr [rbp - 8], rax
0x400108:	xor	eax, eax
0x40010a:	mov	eax, 0x10
0x40010f:	sub	rax, 1
0x400113:	add	rax, 0x6c
0x400117:	mov	esi, 0x10
0x40011c:	mov	edx, 0
0x400121:	div	rsi
0x400124:	imul	rax, rax, 0x10
0x400128:	mov	rdx, rax
0x40012b:	and	rdx, 0xfffffffffffff000
0x400132:	mov	rcx, rsp
0x400135:	sub	rcx, rdx
0x400138:	mov	rdx, rcx
0x40013b:	cmp	rsp, rdx
0x40013e:	je	0x400152
<Block for 0x400152, 26 bytes>
0x400152:	mov	rdx, rax
0x400155:	and	edx, 0xfff
0x40015b:	sub	rsp, rdx
0x40015e:	mov	rdx, rax
0x400161:	and	edx, 0xfff
0x400167:	test	rdx, rdx
0x40016a:	je	0x40017c
<Block for 0x400140, 18 bytes>
0x400140:	sub	rsp, 0x1000
0x400147:	or	qword ptr [rsp + 0xff8], 0
0x400150:	jmp	0x40013b
<Block for 0x40017c, 41 bytes>
0x40017c:	mov	rax, rsp
0x40017f:	add	rax, 0xf
0x400183:	shr	rax, 4
0x400187:	shl	rax, 4
0x40018b:	mov	qword ptr [rbp - 0x18], rax
0x40018f:	mov	rax, qword ptr [rbp - 0x18]
0x400193:	mov	edx, 0x63
0x400198:	mov	esi, 0x41
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500000
<Block for 0x40016c, 57 bytes>
0x40016c:	and	eax, 0xfff
0x400171:	sub	rax, 8
0x400175:	add	rax, rsp
0x400178:	or	qword ptr [rax], 0
0x40017c:	mov	rax, rsp
0x40017f:	add	rax, 0xf
0x400183:	shr	rax, 4
0x400187:	shl	rax, 4
0x40018b:	mov	qword ptr [rbp - 0x18], rax
0x40018f:	mov	rax, qword ptr [rbp - 0x18]
0x400193:	mov	edx, 0x63
0x400198:	mov	esi, 0x41
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500000
<Block for 0x40013b, 5 bytes>
0x40013b:	cmp	rsp, rdx
0x40013e:	je	0x400152
<Block for 0x4001a5, 44 bytes>
0x4001a5:	mov	rax, qword ptr [rbp - 0x18]
0x4001a9:	add	rax, 0x63
0x4001ad:	mov	byte ptr [rax], 0
0x4001b0:	mov	rax, qword ptr [rbp - 0x18]
0x4001b4:	sub	rax, 8
0x4001b8:	mov	qword ptr [rbp - 0x10], rax
0x4001bc:	mov	rax, qword ptr [rbp - 0x10]
0x4001c0:	mov	qword ptr [rip + 0x221], rax
0x4001c7:	mov	eax, 0
0x4001cc:	call	0x400000
<Block for 0x4001d1, 16 bytes>
0x4001d1:	nop	
0x4001d2:	mov	rax, qword ptr [rbp - 8]
0x4001d6:	xor	rax, qword ptr fs:[0x28]
0x4001df:	je	0x4001e6
<Block for 0x4001e6, 2 bytes>
0x4001e6:	leave	
0x4001e7:	ret	
<Block for 0x4001e1, 5 bytes>
0x4001e1:	call	0x500010
