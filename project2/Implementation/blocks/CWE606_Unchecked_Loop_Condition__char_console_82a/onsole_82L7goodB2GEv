<Block for 0x400301, 160 bytes>
0x400301:	endbr64	
0x400305:	push	rbp
0x400306:	mov	rbp, rsp
0x400309:	push	rbx
0x40030a:	sub	rsp, 0x98
0x400311:	mov	rax, qword ptr fs:[0x28]
0x40031a:	mov	qword ptr [rbp - 0x18], rax
0x40031e:	xor	eax, eax
0x400320:	mov	qword ptr [rbp - 0x80], 0
0x400328:	mov	qword ptr [rbp - 0x78], 0
0x400330:	mov	qword ptr [rbp - 0x70], 0
0x400338:	mov	qword ptr [rbp - 0x68], 0
0x400340:	mov	qword ptr [rbp - 0x60], 0
0x400348:	mov	qword ptr [rbp - 0x58], 0
0x400350:	mov	qword ptr [rbp - 0x50], 0
0x400358:	mov	qword ptr [rbp - 0x48], 0
0x400360:	mov	qword ptr [rbp - 0x40], 0
0x400368:	mov	qword ptr [rbp - 0x38], 0
0x400370:	mov	qword ptr [rbp - 0x30], 0
0x400378:	mov	qword ptr [rbp - 0x28], 0
0x400380:	mov	dword ptr [rbp - 0x20], 0
0x400387:	lea	rax, [rbp - 0x80]
0x40038b:	mov	qword ptr [rbp - 0x98], rax
0x400392:	mov	rax, qword ptr [rbp - 0x98]
0x400399:	mov	rdi, rax
0x40039c:	call	0x500000
<Block for 0x4003a1, 29 bytes>
0x4003a1:	mov	qword ptr [rbp - 0x90], rax
0x4003a8:	mov	eax, 0x64
0x4003ad:	sub	rax, qword ptr [rbp - 0x90]
0x4003b4:	cmp	rax, 1
0x4003b8:	jbe	0x400473
<Block for 0x400473, 10 bytes>
0x400473:	mov	edi, 8
0x400478:	call	0x500020
<Block for 0x4003be, 53 bytes>
0x4003be:	mov	rax, qword ptr [rip + 0xffc43]
0x4003c5:	mov	rdx, qword ptr [rbp - 0x90]
0x4003cc:	mov	ecx, 0x64
0x4003d1:	sub	ecx, edx
0x4003d3:	mov	edx, ecx
0x4003d5:	mov	esi, edx
0x4003d7:	mov	rcx, qword ptr [rbp - 0x98]
0x4003de:	mov	rdx, qword ptr [rbp - 0x90]
0x4003e5:	add	rcx, rdx
0x4003e8:	mov	rdx, rax
0x4003eb:	mov	rdi, rcx
0x4003ee:	call	0x500010
<Block for 0x40047d, 11 bytes>
0x40047d:	mov	rbx, rax
0x400480:	mov	rdi, rbx
0x400483:	call	0x400588
<Block for 0x4003f3, 10 bytes>
0x4003f3:	test	rax, rax
0x4003f6:	setne	al
0x4003f9:	test	al, al
0x4003fb:	je	0x400453
<Block for 0x400488, 42 bytes>
0x400488:	mov	qword ptr [rbp - 0x88], rbx
0x40048f:	mov	rax, qword ptr [rbp - 0x88]
0x400496:	mov	rax, qword ptr [rax]
0x400499:	mov	rcx, qword ptr [rax]
0x40049c:	mov	rdx, qword ptr [rbp - 0x98]
0x4004a3:	mov	rax, qword ptr [rbp - 0x88]
0x4004aa:	mov	rsi, rdx
0x4004ad:	mov	rdi, rax
0x4004b0:	call	rcx
<Block for 0x400453, 12 bytes>
0x400453:	lea	rdi, [rip + 0xf1]
0x40045a:	call	0x500018
<Block for 0x4003fd, 15 bytes>
0x4003fd:	mov	rax, qword ptr [rbp - 0x98]
0x400404:	mov	rdi, rax
0x400407:	call	0x500000
<Block for 0x4004b2, 12 bytes>
0x4004b2:	mov	rax, qword ptr [rbp - 0x88]
0x4004b9:	test	rax, rax
0x4004bc:	je	0x4004cb
<Block for 0x40045f, 30 bytes>
0x40045f:	mov	rdx, qword ptr [rbp - 0x98]
0x400466:	mov	rax, qword ptr [rbp - 0x90]
0x40046d:	add	rax, rdx
0x400470:	mov	byte ptr [rax], 0
0x400473:	mov	edi, 8
0x400478:	call	0x500020
<Block for 0x40040c, 17 bytes>
0x40040c:	mov	qword ptr [rbp - 0x90], rax
0x400413:	cmp	qword ptr [rbp - 0x90], 0
0x40041b:	je	0x400473
<Block for 0x4004cb, 16 bytes>
0x4004cb:	nop	
0x4004cc:	mov	rax, qword ptr [rbp - 0x18]
0x4004d0:	xor	rax, qword ptr fs:[0x28]
0x4004d9:	je	0x4004e0
<Block for 0x4004be, 13 bytes>
0x4004be:	mov	esi, 8
0x4004c3:	mov	rdi, rax
0x4004c6:	call	0x500028
<Block for 0x40041d, 28 bytes>
0x40041d:	mov	rax, qword ptr [rbp - 0x90]
0x400424:	lea	rdx, [rax - 1]
0x400428:	mov	rax, qword ptr [rbp - 0x98]
0x40042f:	add	rax, rdx
0x400432:	movzx	eax, byte ptr [rax]
0x400435:	cmp	al, 0xa
0x400437:	jne	0x400473
<Block for 0x4004e0, 10 bytes>
0x4004e0:	add	rsp, 0x98
0x4004e7:	pop	rbx
0x4004e8:	pop	rbp
0x4004e9:	ret	
<Block for 0x4004db, 5 bytes>
0x4004db:	call	0x500030
<Block for 0x400439, 26 bytes>
0x400439:	mov	rax, qword ptr [rbp - 0x90]
0x400440:	lea	rdx, [rax - 1]
0x400444:	mov	rax, qword ptr [rbp - 0x98]
0x40044b:	add	rax, rdx
0x40044e:	mov	byte ptr [rax], 0
0x400451:	jmp	0x400473
