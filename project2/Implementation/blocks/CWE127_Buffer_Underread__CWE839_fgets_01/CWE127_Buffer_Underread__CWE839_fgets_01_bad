<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400022:	mov	qword ptr [rbp - 0x16], 0
0x40002a:	mov	dword ptr [rbp - 0xe], 0
0x400031:	mov	word ptr [rbp - 0xa], 0
0x400037:	mov	rdx, qword ptr [rip + 0xfffc2]
0x40003e:	lea	rax, [rbp - 0x16]
0x400042:	mov	esi, 0xe
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 5 bytes>
0x40004f:	test	rax, rax
0x400052:	je	0x400065
<Block for 0x400065, 12 bytes>
0x400065:	lea	rdi, [rip + 0x1f4]
0x40006c:	call	0x500018
<Block for 0x400054, 12 bytes>
0x400054:	lea	rax, [rbp - 0x16]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500010
<Block for 0x400071, 46 bytes>
0x400071:	mov	qword ptr [rbp - 0x40], 0
0x400079:	mov	qword ptr [rbp - 0x38], 0
0x400081:	mov	qword ptr [rbp - 0x30], 0
0x400089:	mov	qword ptr [rbp - 0x28], 0
0x400091:	mov	qword ptr [rbp - 0x20], 0
0x400099:	cmp	dword ptr [rbp - 0x44], 9
0x40009d:	jg	0x4000b1
<Block for 0x400060, 5 bytes>
0x400060:	mov	dword ptr [rbp - 0x44], eax
0x400063:	jmp	0x400071
<Block for 0x40009f, 16 bytes>
0x40009f:	mov	eax, dword ptr [rbp - 0x44]
0x4000a2:	cdqe	
0x4000a4:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000a8:	mov	edi, eax
0x4000aa:	call	0x500020
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rdi, [rip + 0x1b8]
0x4000b8:	call	0x500018
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x4000bd
<Block for 0x4000bd, 16 bytes>
0x4000bd:	nop	
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	xor	rax, qword ptr fs:[0x28]
0x4000cb:	je	0x4000d2
<Block for 0x4000d2, 2 bytes>
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x4000cd, 5 bytes>
0x4000cd:	call	0x500028
