<Block for 0x400168, 53 bytes>
0x400168:	endbr64	
0x40016c:	push	rbp
0x40016d:	mov	rbp, rsp
0x400170:	add	rsp, -0x80
0x400174:	mov	qword ptr [rbp - 0x78], rdi
0x400178:	mov	rax, qword ptr fs:[0x28]
0x400181:	mov	qword ptr [rbp - 8], rax
0x400185:	xor	eax, eax
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x43
0x400195:	mov	rdi, rax
0x400198:	call	0x500000
<Block for 0x40019d, 28 bytes>
0x40019d:	mov	byte ptr [rbp - 0xd], 0
0x4001a1:	mov	rcx, qword ptr [rbp - 0x78]
0x4001a5:	lea	rax, [rbp - 0x70]
0x4001a9:	mov	edx, 0x64
0x4001ae:	mov	rsi, rcx
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500008
<Block for 0x4001b9, 16 bytes>
0x4001b9:	mov	byte ptr [rbp - 0xd], 0
0x4001bd:	lea	rax, [rbp - 0x70]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500010
<Block for 0x4001c9, 16 bytes>
0x4001c9:	nop	
0x4001ca:	mov	rax, qword ptr [rbp - 8]
0x4001ce:	xor	rax, qword ptr fs:[0x28]
0x4001d7:	je	0x4001de
<Block for 0x4001de, 2 bytes>
0x4001de:	leave	
0x4001df:	ret	
<Block for 0x4001d9, 5 bytes>
0x4001d9:	call	0x500018
