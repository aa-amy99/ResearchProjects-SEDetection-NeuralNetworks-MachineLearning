<Block for 0x400078, 81 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x20
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	mov	eax, 0x10
0x400098:	sub	rax, 1
0x40009c:	add	rax, 0x6c
0x4000a0:	mov	esi, 0x10
0x4000a5:	mov	edx, 0
0x4000aa:	div	rsi
0x4000ad:	imul	rax, rax, 0x10
0x4000b1:	mov	rdx, rax
0x4000b4:	and	rdx, 0xfffffffffffff000
0x4000bb:	mov	rcx, rsp
0x4000be:	sub	rcx, rdx
0x4000c1:	mov	rdx, rcx
0x4000c4:	cmp	rsp, rdx
0x4000c7:	je	0x4000db
<Block for 0x4000db, 26 bytes>
0x4000db:	mov	rdx, rax
0x4000de:	and	edx, 0xfff
0x4000e4:	sub	rsp, rdx
0x4000e7:	mov	rdx, rax
0x4000ea:	and	edx, 0xfff
0x4000f0:	test	rdx, rdx
0x4000f3:	je	0x400105
<Block for 0x4000c9, 18 bytes>
0x4000c9:	sub	rsp, 0x1000
0x4000d0:	or	qword ptr [rsp + 0xff8], 0
0x4000d9:	jmp	0x4000c4
<Block for 0x400105, 41 bytes>
0x400105:	mov	rax, rsp
0x400108:	add	rax, 0xf
0x40010c:	shr	rax, 4
0x400110:	shl	rax, 4
0x400114:	mov	qword ptr [rbp - 0x18], rax
0x400118:	mov	rax, qword ptr [rbp - 0x18]
0x40011c:	mov	edx, 0x63
0x400121:	mov	esi, 0x41
0x400126:	mov	rdi, rax
0x400129:	call	0x500000
<Block for 0x4000f5, 57 bytes>
0x4000f5:	and	eax, 0xfff
0x4000fa:	sub	rax, 8
0x4000fe:	add	rax, rsp
0x400101:	or	qword ptr [rax], 0
0x400105:	mov	rax, rsp
0x400108:	add	rax, 0xf
0x40010c:	shr	rax, 4
0x400110:	shl	rax, 4
0x400114:	mov	qword ptr [rbp - 0x18], rax
0x400118:	mov	rax, qword ptr [rbp - 0x18]
0x40011c:	mov	edx, 0x63
0x400121:	mov	esi, 0x41
0x400126:	mov	rdi, rax
0x400129:	call	0x500000
<Block for 0x4000c4, 5 bytes>
0x4000c4:	cmp	rsp, rdx
0x4000c7:	je	0x4000db
<Block for 0x40012e, 35 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x18]
0x400132:	add	rax, 0x63
0x400136:	mov	byte ptr [rax], 0
0x400139:	mov	rax, qword ptr [rbp - 0x18]
0x40013d:	sub	rax, 8
0x400141:	mov	qword ptr [rbp - 0x10], rax
0x400145:	mov	rax, qword ptr [rbp - 0x10]
0x400149:	mov	rdi, rax
0x40014c:	call	0x400000
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x400166
<Block for 0x400166, 2 bytes>
0x400166:	leave	
0x400167:	ret	
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500018
