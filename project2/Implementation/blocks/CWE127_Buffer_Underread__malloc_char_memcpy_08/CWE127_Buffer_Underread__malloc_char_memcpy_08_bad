<Block for 0x40001e, 52 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	push	rbx
0x400027:	sub	rsp, 0x88
0x40002e:	mov	rax, qword ptr fs:[0x28]
0x400037:	mov	qword ptr [rbp - 0x18], rax
0x40003b:	xor	eax, eax
0x40003d:	mov	qword ptr [rbp - 0x90], 0
0x400048:	mov	eax, 0
0x40004d:	call	0x400000
<Block for 0x400052, 4 bytes>
0x400052:	test	eax, eax
0x400054:	je	0x4000b4
<Block for 0x4000b4, 22 bytes>
0x4000b4:	lea	rax, [rbp - 0x80]
0x4000b8:	mov	edx, 0x63
0x4000bd:	mov	esi, 0x43
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500010
<Block for 0x400056, 10 bytes>
0x400056:	mov	edi, 0x64
0x40005b:	call	0x500000
<Block for 0x4000ca, 128 bytes>
0x4000ca:	mov	byte ptr [rbp - 0x1d], 0
0x4000ce:	mov	rax, qword ptr [rbp - 0x90]
0x4000d5:	mov	rcx, qword ptr [rax]
0x4000d8:	mov	rbx, qword ptr [rax + 8]
0x4000dc:	mov	qword ptr [rbp - 0x80], rcx
0x4000e0:	mov	qword ptr [rbp - 0x78], rbx
0x4000e4:	mov	rcx, qword ptr [rax + 0x10]
0x4000e8:	mov	rbx, qword ptr [rax + 0x18]
0x4000ec:	mov	qword ptr [rbp - 0x70], rcx
0x4000f0:	mov	qword ptr [rbp - 0x68], rbx
0x4000f4:	mov	rcx, qword ptr [rax + 0x20]
0x4000f8:	mov	rbx, qword ptr [rax + 0x28]
0x4000fc:	mov	qword ptr [rbp - 0x60], rcx
0x400100:	mov	qword ptr [rbp - 0x58], rbx
0x400104:	mov	rcx, qword ptr [rax + 0x30]
0x400108:	mov	rbx, qword ptr [rax + 0x38]
0x40010c:	mov	qword ptr [rbp - 0x50], rcx
0x400110:	mov	qword ptr [rbp - 0x48], rbx
0x400114:	mov	rcx, qword ptr [rax + 0x40]
0x400118:	mov	rbx, qword ptr [rax + 0x48]
0x40011c:	mov	qword ptr [rbp - 0x40], rcx
0x400120:	mov	qword ptr [rbp - 0x38], rbx
0x400124:	mov	rcx, qword ptr [rax + 0x50]
0x400128:	mov	rbx, qword ptr [rax + 0x58]
0x40012c:	mov	qword ptr [rbp - 0x30], rcx
0x400130:	mov	qword ptr [rbp - 0x28], rbx
0x400134:	mov	eax, dword ptr [rax + 0x60]
0x400137:	mov	dword ptr [rbp - 0x20], eax
0x40013a:	mov	byte ptr [rbp - 0x1d], 0
0x40013e:	lea	rax, [rbp - 0x80]
0x400142:	mov	rdi, rax
0x400145:	call	0x500018
<Block for 0x400060, 17 bytes>
0x400060:	mov	qword ptr [rbp - 0x88], rax
0x400067:	cmp	qword ptr [rbp - 0x88], 0
0x40006f:	jne	0x40007b
<Block for 0x40014a, 16 bytes>
0x40014a:	nop	
0x40014b:	mov	rax, qword ptr [rbp - 0x18]
0x40014f:	xor	rax, qword ptr fs:[0x28]
0x400158:	je	0x40015f
<Block for 0x400071, 10 bytes>
0x400071:	mov	edi, 0xffffffff
0x400076:	call	0x500008
<Block for 0x40007b, 25 bytes>
0x40007b:	mov	rax, qword ptr [rbp - 0x88]
0x400082:	mov	edx, 0x63
0x400087:	mov	esi, 0x41
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x40015f, 10 bytes>
0x40015f:	add	rsp, 0x88
0x400166:	pop	rbx
0x400167:	pop	rbp
0x400168:	ret	
<Block for 0x40015a, 5 bytes>
0x40015a:	call	0x500020
<Block for 0x400094, 54 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x88]
0x40009b:	add	rax, 0x63
0x40009f:	mov	byte ptr [rax], 0
0x4000a2:	mov	rax, qword ptr [rbp - 0x88]
0x4000a9:	sub	rax, 8
0x4000ad:	mov	qword ptr [rbp - 0x90], rax
0x4000b4:	lea	rax, [rbp - 0x80]
0x4000b8:	mov	edx, 0x63
0x4000bd:	mov	esi, 0x43
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500010
