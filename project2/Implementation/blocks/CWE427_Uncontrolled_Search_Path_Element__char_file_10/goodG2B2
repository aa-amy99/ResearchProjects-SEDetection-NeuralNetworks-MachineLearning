<Block for 0x400239, 82 bytes>
0x400239:	endbr64	
0x40023d:	push	rbp
0x40023e:	mov	rbp, rsp
0x400241:	sub	rsp, 0x120
0x400248:	mov	rax, qword ptr fs:[0x28]
0x400251:	mov	qword ptr [rbp - 8], rax
0x400255:	xor	eax, eax
0x400257:	movabs	rax, 0x3d48544150
0x400261:	mov	edx, 0
0x400266:	mov	qword ptr [rbp - 0x110], rax
0x40026d:	mov	qword ptr [rbp - 0x108], rdx
0x400274:	lea	rdx, [rbp - 0x100]
0x40027b:	mov	eax, 0
0x400280:	mov	ecx, 0x1d
0x400285:	mov	rdi, rdx
0x400288:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028b, 34 bytes>
0x40028b:	mov	rdx, rdi
0x40028e:	mov	word ptr [rdx], ax
0x400291:	add	rdx, 2
0x400295:	lea	rax, [rbp - 0x110]
0x40029c:	mov	qword ptr [rbp - 0x118], rax
0x4002a3:	mov	eax, dword ptr [rip + 0xffd57]
0x4002a9:	test	eax, eax
0x4002ab:	je	0x4002e6
<Block for 0x400288, 3 bytes>
0x400288:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002e6, 15 bytes>
0x4002e6:	mov	rax, qword ptr [rbp - 0x118]
0x4002ed:	mov	rdi, rax
0x4002f0:	call	0x500030
<Block for 0x4002ad, 27 bytes>
0x4002ad:	mov	rax, qword ptr [rbp - 0x118]
0x4002b4:	mov	rcx, -1
0x4002bb:	mov	rdx, rax
0x4002be:	mov	eax, 0
0x4002c3:	mov	rdi, rdx
0x4002c6:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002f5, 16 bytes>
0x4002f5:	nop	
0x4002f6:	mov	rax, qword ptr [rbp - 8]
0x4002fa:	xor	rax, qword ptr fs:[0x28]
0x400303:	je	0x40030a
<Block for 0x4002c8, 45 bytes>
0x4002c8:	mov	rax, rcx
0x4002cb:	not	rax
0x4002ce:	lea	rdx, [rax - 1]
0x4002d2:	mov	rax, qword ptr [rbp - 0x118]
0x4002d9:	add	rax, rdx
0x4002dc:	mov	dword ptr [rax], 0x6e69622f
0x4002e2:	mov	byte ptr [rax + 4], 0
0x4002e6:	mov	rax, qword ptr [rbp - 0x118]
0x4002ed:	mov	rdi, rax
0x4002f0:	call	0x500030
<Block for 0x4002c6, 2 bytes>
0x4002c6:	repne scasb	al, byte ptr [rdi]
<Block for 0x40030a, 2 bytes>
0x40030a:	leave	
0x40030b:	ret	
<Block for 0x400305, 5 bytes>
0x400305:	call	0x500038
