<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x130
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 38 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x128], rax
0x40006a:	mov	eax, dword ptr [rip + 0xfff90]
0x400070:	test	eax, eax
0x400072:	je	0x400132
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400132, 15 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x128]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500030
<Block for 0x400078, 15 bytes>
0x400078:	mov	rax, qword ptr [rbp - 0x128]
0x40007f:	mov	rdi, rax
0x400082:	call	0x500008
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400087, 29 bytes>
0x400087:	mov	qword ptr [rbp - 0x120], rax
0x40008e:	mov	eax, 0xfa
0x400093:	sub	rax, qword ptr [rbp - 0x120]
0x40009a:	cmp	rax, 1
0x40009e:	jbe	0x400132
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500038
<Block for 0x4000a4, 19 bytes>
0x4000a4:	lea	rsi, [rip + 0x280]
0x4000ab:	lea	rdi, [rip + 0x27b]
0x4000b2:	call	0x500010
<Block for 0x4000b7, 17 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x118], rax
0x4000be:	cmp	qword ptr [rbp - 0x118], 0
0x4000c6:	je	0x400132
<Block for 0x4000c8, 54 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 0x120]
0x4000cf:	mov	edx, 0xfa
0x4000d4:	sub	edx, eax
0x4000d6:	mov	eax, edx
0x4000d8:	mov	esi, eax
0x4000da:	mov	rdx, qword ptr [rbp - 0x128]
0x4000e1:	mov	rax, qword ptr [rbp - 0x120]
0x4000e8:	lea	rcx, [rdx + rax]
0x4000ec:	mov	rax, qword ptr [rbp - 0x118]
0x4000f3:	mov	rdx, rax
0x4000f6:	mov	rdi, rcx
0x4000f9:	call	0x500018
<Block for 0x4000fe, 5 bytes>
0x4000fe:	test	rax, rax
0x400101:	jne	0x400123
<Block for 0x400103, 12 bytes>
0x400103:	lea	rdi, [rip + 0x231]
0x40010a:	call	0x500020
<Block for 0x400123, 15 bytes>
0x400123:	mov	rax, qword ptr [rbp - 0x118]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500028
<Block for 0x40010f, 35 bytes>
0x40010f:	mov	rdx, qword ptr [rbp - 0x128]
0x400116:	mov	rax, qword ptr [rbp - 0x120]
0x40011d:	add	rax, rdx
0x400120:	mov	byte ptr [rax], 0
0x400123:	mov	rax, qword ptr [rbp - 0x118]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500028
