<Block for 0x40019b, 25 bytes>
0x40019b:	endbr64	
0x40019f:	push	rbp
0x4001a0:	mov	rbp, rsp
0x4001a3:	sub	rsp, 0x10
0x4001a7:	mov	qword ptr [rbp - 0x10], 0
0x4001af:	call	0x500020
<Block for 0x4001b4, 9 bytes>
0x4001b4:	test	eax, eax
0x4001b6:	setne	al
0x4001b9:	test	al, al
0x4001bb:	je	0x4001cb
<Block for 0x4001cb, 10 bytes>
0x4001cb:	mov	edi, 0x190
0x4001d0:	call	0x500008
<Block for 0x4001bd, 12 bytes>
0x4001bd:	lea	rdi, [rip + 0xfe]
0x4001c4:	call	0x500028
<Block for 0x4001d5, 19 bytes>
0x4001d5:	mov	qword ptr [rbp - 0x10], rax
0x4001d9:	mov	qword ptr [rbp - 8], 0
0x4001e1:	cmp	qword ptr [rbp - 8], 0x63
0x4001e6:	ja	0x400208
<Block for 0x4001c9, 2 bytes>
0x4001c9:	jmp	0x400208
<Block for 0x4001e8, 32 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 8]
0x4001ec:	lea	rdx, [rax*4]
0x4001f4:	mov	rax, qword ptr [rbp - 0x10]
0x4001f8:	add	rax, rdx
0x4001fb:	mov	dword ptr [rax], 5
0x400201:	add	qword ptr [rbp - 8], 1
0x400206:	jmp	0x4001e1
<Block for 0x400208, 5 bytes>
0x400208:	call	0x500000
<Block for 0x4001e1, 7 bytes>
0x4001e1:	cmp	qword ptr [rbp - 8], 0x63
0x4001e6:	ja	0x400208
<Block for 0x40020d, 9 bytes>
0x40020d:	test	eax, eax
0x40020f:	setne	al
0x400212:	test	al, al
0x400214:	je	0x400223
<Block for 0x400223, 3 bytes>
0x400223:	nop	
0x400224:	leave	
0x400225:	ret	
<Block for 0x400216, 13 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x10]
0x40021a:	mov	eax, dword ptr [rax]
0x40021c:	mov	edi, eax
0x40021e:	call	0x500018
