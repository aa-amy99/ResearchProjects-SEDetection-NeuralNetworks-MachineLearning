<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	call	0x500000
<Block for 0x400019, 9 bytes>
0x400019:	test	eax, eax
0x40001b:	setne	al
0x40001e:	test	al, al
0x400020:	je	0x400072
<Block for 0x400072, 5 bytes>
0x400072:	call	0x500000
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0x190
0x400027:	call	0x500008
<Block for 0x400077, 9 bytes>
0x400077:	test	eax, eax
0x400079:	setne	al
0x40007c:	test	al, al
0x40007e:	je	0x40008d
<Block for 0x40002c, 19 bytes>
0x40002c:	mov	qword ptr [rbp - 0x10], rax
0x400030:	mov	qword ptr [rbp - 8], 0
0x400038:	cmp	qword ptr [rbp - 8], 0x63
0x40003d:	ja	0x40005f
<Block for 0x40008d, 3 bytes>
0x40008d:	nop	
0x40008e:	leave	
0x40008f:	ret	
<Block for 0x400080, 13 bytes>
0x400080:	mov	rax, qword ptr [rbp - 0x10]
0x400084:	mov	eax, dword ptr [rax]
0x400086:	mov	edi, eax
0x400088:	call	0x500018
<Block for 0x40003f, 32 bytes>
0x40003f:	mov	rax, qword ptr [rbp - 8]
0x400043:	lea	rdx, [rax*4]
0x40004b:	mov	rax, qword ptr [rbp - 0x10]
0x40004f:	add	rax, rdx
0x400052:	mov	dword ptr [rax], 5
0x400058:	add	qword ptr [rbp - 8], 1
0x40005d:	jmp	0x400038
<Block for 0x40005f, 7 bytes>
0x40005f:	cmp	qword ptr [rbp - 0x10], 0
0x400064:	je	0x400072
<Block for 0x400038, 7 bytes>
0x400038:	cmp	qword ptr [rbp - 8], 0x63
0x40003d:	ja	0x40005f
<Block for 0x400066, 12 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0x10]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
