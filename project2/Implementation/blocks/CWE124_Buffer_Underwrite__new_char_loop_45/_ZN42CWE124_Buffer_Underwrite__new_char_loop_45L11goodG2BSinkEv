<Block for 0x400101, 60 bytes>
0x400101:	endbr64	
0x400105:	push	rbp
0x400106:	mov	rbp, rsp
0x400109:	add	rsp, -0x80
0x40010d:	mov	rax, qword ptr fs:[0x28]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	xor	eax, eax
0x40011c:	mov	rax, qword ptr [rip + 0xf5]
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	lea	rax, [rbp - 0x70]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x43
0x400135:	mov	rdi, rax
0x400138:	call	0x500000
<Block for 0x40013d, 19 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	mov	qword ptr [rbp - 0x80], 0
0x400149:	cmp	qword ptr [rbp - 0x80], 0x63
0x40014e:	ja	0x400172
<Block for 0x400150, 34 bytes>
0x400150:	mov	rdx, qword ptr [rbp - 0x78]
0x400154:	mov	rax, qword ptr [rbp - 0x80]
0x400158:	add	rdx, rax
0x40015b:	lea	rcx, [rbp - 0x70]
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	add	rax, rcx
0x400166:	movzx	eax, byte ptr [rax]
0x400169:	mov	byte ptr [rdx], al
0x40016b:	add	qword ptr [rbp - 0x80], 1
0x400170:	jmp	0x400149
<Block for 0x400172, 23 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0x78]
0x400176:	add	rax, 0x63
0x40017a:	mov	byte ptr [rax], 0
0x40017d:	mov	rax, qword ptr [rbp - 0x78]
0x400181:	mov	rdi, rax
0x400184:	call	0x500008
<Block for 0x400149, 7 bytes>
0x400149:	cmp	qword ptr [rbp - 0x80], 0x63
0x40014e:	ja	0x400172
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500010
