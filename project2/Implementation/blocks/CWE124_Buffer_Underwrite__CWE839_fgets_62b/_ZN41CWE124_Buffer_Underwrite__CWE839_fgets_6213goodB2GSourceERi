<Block for 0x4000a6, 76 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x30
0x4000b2:	mov	qword ptr [rbp - 0x28], rdi
0x4000b6:	mov	rax, qword ptr fs:[0x28]
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	xor	eax, eax
0x4000c5:	mov	qword ptr [rbp - 0x16], 0
0x4000cd:	mov	dword ptr [rbp - 0xe], 0
0x4000d4:	mov	word ptr [rbp - 0xa], 0
0x4000da:	mov	rdx, qword ptr [rip + 0xfff1f]
0x4000e1:	lea	rax, [rbp - 0x16]
0x4000e5:	mov	esi, 0xe
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500008
<Block for 0x4000f2, 10 bytes>
0x4000f2:	test	rax, rax
0x4000f5:	setne	al
0x4000f8:	test	al, al
0x4000fa:	je	0x400110
<Block for 0x400110, 12 bytes>
0x400110:	lea	rdi, [rip + 0x1c]
0x400117:	call	0x500018
<Block for 0x4000fc, 12 bytes>
0x4000fc:	lea	rax, [rbp - 0x16]
0x400100:	mov	rdi, rax
0x400103:	call	0x500010
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400131
<Block for 0x400108, 8 bytes>
0x400108:	mov	rdx, qword ptr [rbp - 0x28]
0x40010c:	mov	dword ptr [rdx], eax
0x40010e:	jmp	0x40011c
<Block for 0x400131, 2 bytes>
0x400131:	leave	
0x400132:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500020
