<Block for 0x4000d4, 55 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0xf0
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	lea	rax, [rbp - 0xe0]
0x4000f9:	mov	edx, 0x63
0x4000fe:	mov	esi, 0x41
0x400103:	mov	rdi, rax
0x400106:	call	0x500000
<Block for 0x40010b, 14 bytes>
0x40010b:	mov	byte ptr [rbp - 0x7d], 0
0x40010f:	mov	eax, 0
0x400114:	call	0x500008
<Block for 0x400119, 4 bytes>
0x400119:	test	eax, eax
0x40011b:	je	0x40012d
<Block for 0x40012d, 36 bytes>
0x40012d:	lea	rax, [rbp - 0xe0]
0x400134:	mov	qword ptr [rbp - 0xe8], rax
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	edx, 0x63
0x400144:	mov	esi, 0x43
0x400149:	mov	rdi, rax
0x40014c:	call	0x500000
<Block for 0x40011d, 16 bytes>
0x40011d:	lea	rax, [rbp - 0xe0]
0x400124:	mov	qword ptr [rbp - 0xe8], rax
0x40012b:	jmp	0x40013b
<Block for 0x400151, 31 bytes>
0x400151:	mov	byte ptr [rbp - 0xd], 0
0x400155:	lea	rcx, [rbp - 0x70]
0x400159:	mov	rax, qword ptr [rbp - 0xe8]
0x400160:	mov	edx, 0x63
0x400165:	mov	rsi, rcx
0x400168:	mov	rdi, rax
0x40016b:	call	0x500010
<Block for 0x40013b, 22 bytes>
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	edx, 0x63
0x400144:	mov	esi, 0x43
0x400149:	mov	rdi, rax
0x40014c:	call	0x500000
<Block for 0x400170, 29 bytes>
0x400170:	mov	rax, qword ptr [rbp - 0xe8]
0x400177:	add	rax, 0x63
0x40017b:	mov	byte ptr [rax], 0
0x40017e:	mov	rax, qword ptr [rbp - 0xe8]
0x400185:	mov	rdi, rax
0x400188:	call	0x500018
<Block for 0x40018d, 16 bytes>
0x40018d:	nop	
0x40018e:	mov	rax, qword ptr [rbp - 8]
0x400192:	xor	rax, qword ptr fs:[0x28]
0x40019b:	je	0x4001a2
<Block for 0x4001a2, 2 bytes>
0x4001a2:	leave	
0x4001a3:	ret	
<Block for 0x40019d, 5 bytes>
0x40019d:	call	0x500020
