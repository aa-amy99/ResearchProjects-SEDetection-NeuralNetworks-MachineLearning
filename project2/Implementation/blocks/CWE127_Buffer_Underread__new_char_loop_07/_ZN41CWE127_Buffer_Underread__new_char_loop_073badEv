<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, dword ptr [rip + 0x2a1]
0x40002f:	cmp	eax, 5
0x400032:	jne	0x400072
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x64
0x400039:	call	0x500000
<Block for 0x400072, 22 bytes>
0x400072:	lea	rax, [rbp - 0x70]
0x400076:	mov	edx, 0x63
0x40007b:	mov	esi, 0x43
0x400080:	mov	rdi, rax
0x400083:	call	0x500008
<Block for 0x40003e, 26 bytes>
0x40003e:	mov	qword ptr [rbp - 0x78], rax
0x400042:	mov	rax, qword ptr [rbp - 0x78]
0x400046:	mov	edx, 0x63
0x40004b:	mov	esi, 0x41
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400088, 19 bytes>
0x400088:	mov	byte ptr [rbp - 0xd], 0
0x40008c:	mov	qword ptr [rbp - 0x80], 0
0x400094:	cmp	qword ptr [rbp - 0x80], 0x63
0x400099:	ja	0x4000c0
<Block for 0x400058, 48 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0x78]
0x40005c:	add	rax, 0x63
0x400060:	mov	byte ptr [rax], 0
0x400063:	mov	rax, qword ptr [rbp - 0x78]
0x400067:	sub	rax, 8
0x40006b:	mov	qword ptr [rbp - 0x88], rax
0x400072:	lea	rax, [rbp - 0x70]
0x400076:	mov	edx, 0x63
0x40007b:	mov	esi, 0x43
0x400080:	mov	rdi, rax
0x400083:	call	0x500008
<Block for 0x40009b, 37 bytes>
0x40009b:	mov	rdx, qword ptr [rbp - 0x88]
0x4000a2:	mov	rax, qword ptr [rbp - 0x80]
0x4000a6:	add	rax, rdx
0x4000a9:	movzx	eax, byte ptr [rax]
0x4000ac:	lea	rcx, [rbp - 0x70]
0x4000b0:	mov	rdx, qword ptr [rbp - 0x80]
0x4000b4:	add	rdx, rcx
0x4000b7:	mov	byte ptr [rdx], al
0x4000b9:	add	qword ptr [rbp - 0x80], 1
0x4000be:	jmp	0x400094
<Block for 0x4000c0, 16 bytes>
0x4000c0:	mov	byte ptr [rbp - 0xd], 0
0x4000c4:	lea	rax, [rbp - 0x70]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500010
<Block for 0x400094, 7 bytes>
0x400094:	cmp	qword ptr [rbp - 0x80], 0x63
0x400099:	ja	0x4000c0
<Block for 0x4000d0, 16 bytes>
0x4000d0:	nop	
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	xor	rax, qword ptr fs:[0x28]
0x4000de:	je	0x4000e5
<Block for 0x4000e5, 2 bytes>
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	call	0x500018
