<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	qword ptr [rbp - 0x78], rdi
0x400010:	mov	qword ptr [rbp - 0x80], rsi
0x400014:	mov	rax, qword ptr fs:[0x28]
0x40001d:	mov	qword ptr [rbp - 8], rax
0x400021:	xor	eax, eax
0x400023:	lea	rax, [rbp - 0x70]
0x400027:	mov	edx, 0x63
0x40002c:	mov	esi, 0x43
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 16 bytes>
0x400039:	mov	byte ptr [rbp - 0xd], 0
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	rdi, rax
0x400044:	call	0x500008
<Block for 0x400049, 22 bytes>
0x400049:	mov	rdx, rax
0x40004c:	mov	rcx, qword ptr [rbp - 0x80]
0x400050:	lea	rax, [rbp - 0x70]
0x400054:	mov	rsi, rcx
0x400057:	mov	rdi, rax
0x40005a:	call	0x500010
<Block for 0x40005f, 16 bytes>
0x40005f:	mov	byte ptr [rbp - 0xd], 0
0x400063:	lea	rax, [rbp - 0x70]
0x400067:	mov	rdi, rax
0x40006a:	call	0x500018
<Block for 0x40006f, 7 bytes>
0x40006f:	cmp	qword ptr [rbp - 0x80], 0
0x400074:	je	0x400082
<Block for 0x400082, 16 bytes>
0x400082:	nop	
0x400083:	mov	rax, qword ptr [rbp - 8]
0x400087:	xor	rax, qword ptr fs:[0x28]
0x400090:	je	0x400097
<Block for 0x400076, 12 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0x80]
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500020
<Block for 0x400097, 2 bytes>
0x400097:	leave	
0x400098:	ret	
<Block for 0x400092, 5 bytes>
0x400092:	call	0x500028
