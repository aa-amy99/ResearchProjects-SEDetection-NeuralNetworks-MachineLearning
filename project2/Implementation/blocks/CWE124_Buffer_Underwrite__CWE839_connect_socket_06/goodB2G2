<Block for 0x400334, 48 bytes>
0x400334:	endbr64	
0x400338:	push	rbp
0x400339:	mov	rbp, rsp
0x40033c:	sub	rsp, 0x50
0x400340:	mov	rax, qword ptr fs:[0x28]
0x400349:	mov	qword ptr [rbp - 8], rax
0x40034d:	xor	eax, eax
0x40034f:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400356:	mov	eax, 5
0x40035b:	cmp	eax, 5
0x40035e:	jne	0x400436
<Block for 0x400364, 27 bytes>
0x400364:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40036b:	mov	edx, 6
0x400370:	mov	esi, 1
0x400375:	mov	edi, 2
0x40037a:	call	0x500000
<Block for 0x400436, 10 bytes>
0x400436:	mov	eax, 5
0x40043b:	cmp	eax, 5
0x40043e:	jne	0x4004b4
<Block for 0x40037f, 13 bytes>
0x40037f:	mov	dword ptr [rbp - 0x48], eax
0x400382:	cmp	dword ptr [rbp - 0x48], -1
0x400386:	je	0x400422
<Block for 0x400440, 46 bytes>
0x400440:	mov	qword ptr [rbp - 0x40], 0
0x400448:	mov	qword ptr [rbp - 0x38], 0
0x400450:	mov	qword ptr [rbp - 0x30], 0
0x400458:	mov	qword ptr [rbp - 0x28], 0
0x400460:	mov	qword ptr [rbp - 0x20], 0
0x400468:	cmp	dword ptr [rbp - 0x50], 0
0x40046c:	js	0x4004a6
<Block for 0x4004b4, 16 bytes>
0x4004b4:	nop	
0x4004b5:	mov	rax, qword ptr [rbp - 8]
0x4004b9:	xor	rax, qword ptr fs:[0x28]
0x4004c2:	je	0x4004c9
<Block for 0x400422, 3 bytes>
0x400422:	nop	
0x400423:	jmp	0x400426
<Block for 0x40038c, 22 bytes>
0x40038c:	lea	rax, [rbp - 0x40]
0x400390:	mov	edx, 0x10
0x400395:	mov	esi, 0
0x40039a:	mov	rdi, rax
0x40039d:	call	0x500008
<Block for 0x4004a6, 12 bytes>
0x4004a6:	lea	rdi, [rip + 0x22b]
0x4004ad:	call	0x500048
<Block for 0x40046e, 6 bytes>
0x40046e:	cmp	dword ptr [rbp - 0x50], 9
0x400472:	jg	0x4004a6
<Block for 0x4004c9, 2 bytes>
0x4004c9:	leave	
0x4004ca:	ret	
<Block for 0x4004c4, 5 bytes>
0x4004c4:	call	0x500050
<Block for 0x400426, 6 bytes>
0x400426:	cmp	dword ptr [rbp - 0x48], -1
0x40042a:	je	0x400436
<Block for 0x4003a2, 18 bytes>
0x4003a2:	mov	word ptr [rbp - 0x40], 2
0x4003a8:	lea	rdi, [rip + 0x2e5]
0x4003af:	call	0x500010
<Block for 0x4004b2, 2 bytes>
0x4004b2:	jmp	0x4004b4
<Block for 0x400474, 22 bytes>
0x400474:	mov	eax, dword ptr [rbp - 0x50]
0x400477:	cdqe	
0x400479:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400481:	mov	dword ptr [rbp - 0x4c], 0
0x400488:	jmp	0x40049e
<Block for 0x40042c, 10 bytes>
0x40042c:	mov	eax, dword ptr [rbp - 0x48]
0x40042f:	mov	edi, eax
0x400431:	call	0x500038
<Block for 0x4003b4, 13 bytes>
0x4003b4:	mov	dword ptr [rbp - 0x3c], eax
0x4003b7:	mov	edi, 0x6987
0x4003bc:	call	0x500018
<Block for 0x40049e, 6 bytes>
0x40049e:	cmp	dword ptr [rbp - 0x4c], 9
0x4004a2:	jle	0x40048a
<Block for 0x4003c1, 26 bytes>
0x4003c1:	mov	word ptr [rbp - 0x3e], ax
0x4003c5:	lea	rcx, [rbp - 0x40]
0x4003c9:	mov	eax, dword ptr [rbp - 0x48]
0x4003cc:	mov	edx, 0x10
0x4003d1:	mov	rsi, rcx
0x4003d4:	mov	edi, eax
0x4003d6:	call	0x500020
<Block for 0x40048a, 16 bytes>
0x40048a:	mov	eax, dword ptr [rbp - 0x4c]
0x40048d:	cdqe	
0x40048f:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400493:	mov	edi, eax
0x400495:	call	0x500040
<Block for 0x4004a4, 2 bytes>
0x4004a4:	jmp	0x4004b4
<Block for 0x4003db, 5 bytes>
0x4003db:	cmp	eax, -1
0x4003de:	je	0x400425
<Block for 0x40049a, 10 bytes>
0x40049a:	add	dword ptr [rbp - 0x4c], 1
0x40049e:	cmp	dword ptr [rbp - 0x4c], 9
0x4004a2:	jle	0x40048a
<Block for 0x4003e0, 24 bytes>
0x4003e0:	lea	rsi, [rbp - 0x16]
0x4003e4:	mov	eax, dword ptr [rbp - 0x48]
0x4003e7:	mov	ecx, 0
0x4003ec:	mov	edx, 0xd
0x4003f1:	mov	edi, eax
0x4003f3:	call	0x500028
<Block for 0x400425, 1 bytes>
0x400425:	nop	
<Block for 0x4003f8, 9 bytes>
0x4003f8:	mov	dword ptr [rbp - 0x44], eax
0x4003fb:	cmp	dword ptr [rbp - 0x44], -1
0x4003ff:	je	0x400426
<Block for 0x400401, 6 bytes>
0x400401:	cmp	dword ptr [rbp - 0x44], 0
0x400405:	je	0x400426
<Block for 0x400407, 22 bytes>
0x400407:	mov	eax, dword ptr [rbp - 0x44]
0x40040a:	cdqe	
0x40040c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400411:	lea	rax, [rbp - 0x16]
0x400415:	mov	rdi, rax
0x400418:	call	0x500030
<Block for 0x40041d, 5 bytes>
0x40041d:	mov	dword ptr [rbp - 0x50], eax
0x400420:	jmp	0x400426
