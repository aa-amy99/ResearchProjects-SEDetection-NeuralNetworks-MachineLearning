<Block for 0x40012b, 81 bytes>
0x40012b:	endbr64	
0x40012f:	push	rbp
0x400130:	mov	rbp, rsp
0x400133:	add	rsp, -0x80
0x400137:	mov	rax, qword ptr fs:[0x28]
0x400140:	mov	qword ptr [rbp - 8], rax
0x400144:	xor	eax, eax
0x400146:	mov	eax, 0x10
0x40014b:	sub	rax, 1
0x40014f:	add	rax, 0x6c
0x400153:	mov	ecx, 0x10
0x400158:	mov	edx, 0
0x40015d:	div	rcx
0x400160:	imul	rax, rax, 0x10
0x400164:	mov	rdx, rax
0x400167:	and	rdx, 0xfffffffffffff000
0x40016e:	mov	rcx, rsp
0x400171:	sub	rcx, rdx
0x400174:	mov	rdx, rcx
0x400177:	cmp	rsp, rdx
0x40017a:	je	0x40018e
<Block for 0x40018e, 26 bytes>
0x40018e:	mov	rdx, rax
0x400191:	and	edx, 0xfff
0x400197:	sub	rsp, rdx
0x40019a:	mov	rdx, rax
0x40019d:	and	edx, 0xfff
0x4001a3:	test	rdx, rdx
0x4001a6:	je	0x4001b8
<Block for 0x40017c, 18 bytes>
0x40017c:	sub	rsp, 0x1000
0x400183:	or	qword ptr [rsp + 0xff8], 0
0x40018c:	jmp	0x400177
<Block for 0x4001b8, 41 bytes>
0x4001b8:	mov	rax, rsp
0x4001bb:	add	rax, 0xf
0x4001bf:	shr	rax, 4
0x4001c3:	shl	rax, 4
0x4001c7:	mov	qword ptr [rbp - 0x78], rax
0x4001cb:	mov	rax, qword ptr [rbp - 0x78]
0x4001cf:	mov	edx, 0x63
0x4001d4:	mov	esi, 0x41
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x500000
<Block for 0x4001a8, 57 bytes>
0x4001a8:	and	eax, 0xfff
0x4001ad:	sub	rax, 8
0x4001b1:	add	rax, rsp
0x4001b4:	or	qword ptr [rax], 0
0x4001b8:	mov	rax, rsp
0x4001bb:	add	rax, 0xf
0x4001bf:	shr	rax, 4
0x4001c3:	shl	rax, 4
0x4001c7:	mov	qword ptr [rbp - 0x78], rax
0x4001cb:	mov	rax, qword ptr [rbp - 0x78]
0x4001cf:	mov	edx, 0x63
0x4001d4:	mov	esi, 0x41
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x500000
<Block for 0x400177, 5 bytes>
0x400177:	cmp	rsp, rdx
0x40017a:	je	0x40018e
<Block for 0x4001e1, 21 bytes>
0x4001e1:	mov	rax, qword ptr [rbp - 0x78]
0x4001e5:	add	rax, 0x63
0x4001e9:	mov	byte ptr [rax], 0
0x4001ec:	mov	eax, 0
0x4001f1:	call	0x500028
<Block for 0x4001f6, 4 bytes>
0x4001f6:	test	eax, eax
0x4001f8:	je	0x400208
<Block for 0x400208, 30 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0x78]
0x40020c:	mov	qword ptr [rbp - 0x80], rax
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x4001fa, 12 bytes>
0x4001fa:	lea	rdi, [rip + 0x1a5]
0x400201:	call	0x500018
<Block for 0x400226, 23 bytes>
0x400226:	mov	byte ptr [rbp - 0xd], 0
0x40022a:	lea	rdx, [rbp - 0x70]
0x40022e:	mov	rax, qword ptr [rbp - 0x80]
0x400232:	mov	rsi, rdx
0x400235:	mov	rdi, rax
0x400238:	call	0x500010
<Block for 0x400206, 2 bytes>
0x400206:	jmp	0x400210
<Block for 0x40023d, 12 bytes>
0x40023d:	mov	rax, qword ptr [rbp - 0x80]
0x400241:	mov	rdi, rax
0x400244:	call	0x500018
<Block for 0x400210, 22 bytes>
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x43
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x400249, 16 bytes>
0x400249:	nop	
0x40024a:	mov	rax, qword ptr [rbp - 8]
0x40024e:	xor	rax, qword ptr fs:[0x28]
0x400257:	je	0x40025e
<Block for 0x40025e, 2 bytes>
0x40025e:	leave	
0x40025f:	ret	
<Block for 0x400259, 5 bytes>
0x400259:	call	0x500020
