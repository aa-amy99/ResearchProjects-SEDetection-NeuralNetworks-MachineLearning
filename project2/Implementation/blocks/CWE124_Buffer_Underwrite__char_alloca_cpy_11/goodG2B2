<Block for 0x400260, 81 bytes>
0x400260:	endbr64	
0x400264:	push	rbp
0x400265:	mov	rbp, rsp
0x400268:	add	rsp, -0x80
0x40026c:	mov	rax, qword ptr fs:[0x28]
0x400275:	mov	qword ptr [rbp - 8], rax
0x400279:	xor	eax, eax
0x40027b:	mov	eax, 0x10
0x400280:	sub	rax, 1
0x400284:	add	rax, 0x6c
0x400288:	mov	ecx, 0x10
0x40028d:	mov	edx, 0
0x400292:	div	rcx
0x400295:	imul	rax, rax, 0x10
0x400299:	mov	rdx, rax
0x40029c:	and	rdx, 0xfffffffffffff000
0x4002a3:	mov	rcx, rsp
0x4002a6:	sub	rcx, rdx
0x4002a9:	mov	rdx, rcx
0x4002ac:	cmp	rsp, rdx
0x4002af:	je	0x4002c3
<Block for 0x4002c3, 26 bytes>
0x4002c3:	mov	rdx, rax
0x4002c6:	and	edx, 0xfff
0x4002cc:	sub	rsp, rdx
0x4002cf:	mov	rdx, rax
0x4002d2:	and	edx, 0xfff
0x4002d8:	test	rdx, rdx
0x4002db:	je	0x4002ed
<Block for 0x4002b1, 18 bytes>
0x4002b1:	sub	rsp, 0x1000
0x4002b8:	or	qword ptr [rsp + 0xff8], 0
0x4002c1:	jmp	0x4002ac
<Block for 0x4002ed, 41 bytes>
0x4002ed:	mov	rax, rsp
0x4002f0:	add	rax, 0xf
0x4002f4:	shr	rax, 4
0x4002f8:	shl	rax, 4
0x4002fc:	mov	qword ptr [rbp - 0x78], rax
0x400300:	mov	rax, qword ptr [rbp - 0x78]
0x400304:	mov	edx, 0x63
0x400309:	mov	esi, 0x41
0x40030e:	mov	rdi, rax
0x400311:	call	0x500000
<Block for 0x4002dd, 57 bytes>
0x4002dd:	and	eax, 0xfff
0x4002e2:	sub	rax, 8
0x4002e6:	add	rax, rsp
0x4002e9:	or	qword ptr [rax], 0
0x4002ed:	mov	rax, rsp
0x4002f0:	add	rax, 0xf
0x4002f4:	shr	rax, 4
0x4002f8:	shl	rax, 4
0x4002fc:	mov	qword ptr [rbp - 0x78], rax
0x400300:	mov	rax, qword ptr [rbp - 0x78]
0x400304:	mov	edx, 0x63
0x400309:	mov	esi, 0x41
0x40030e:	mov	rdi, rax
0x400311:	call	0x500000
<Block for 0x4002ac, 5 bytes>
0x4002ac:	cmp	rsp, rdx
0x4002af:	je	0x4002c3
<Block for 0x400316, 21 bytes>
0x400316:	mov	rax, qword ptr [rbp - 0x78]
0x40031a:	add	rax, 0x63
0x40031e:	mov	byte ptr [rax], 0
0x400321:	mov	eax, 0
0x400326:	call	0x500008
<Block for 0x40032b, 4 bytes>
0x40032b:	test	eax, eax
0x40032d:	je	0x400337
<Block for 0x400337, 22 bytes>
0x400337:	lea	rax, [rbp - 0x70]
0x40033b:	mov	edx, 0x63
0x400340:	mov	esi, 0x43
0x400345:	mov	rdi, rax
0x400348:	call	0x500000
<Block for 0x40032f, 30 bytes>
0x40032f:	mov	rax, qword ptr [rbp - 0x78]
0x400333:	mov	qword ptr [rbp - 0x80], rax
0x400337:	lea	rax, [rbp - 0x70]
0x40033b:	mov	edx, 0x63
0x400340:	mov	esi, 0x43
0x400345:	mov	rdi, rax
0x400348:	call	0x500000
<Block for 0x40034d, 23 bytes>
0x40034d:	mov	byte ptr [rbp - 0xd], 0
0x400351:	lea	rdx, [rbp - 0x70]
0x400355:	mov	rax, qword ptr [rbp - 0x80]
0x400359:	mov	rsi, rdx
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500010
<Block for 0x400364, 12 bytes>
0x400364:	mov	rax, qword ptr [rbp - 0x80]
0x400368:	mov	rdi, rax
0x40036b:	call	0x500018
<Block for 0x400370, 16 bytes>
0x400370:	nop	
0x400371:	mov	rax, qword ptr [rbp - 8]
0x400375:	xor	rax, qword ptr fs:[0x28]
0x40037e:	je	0x400385
<Block for 0x400385, 2 bytes>
0x400385:	leave	
0x400386:	ret	
<Block for 0x400380, 5 bytes>
0x400380:	call	0x500020
