<Block for 0x4001f6, 37 bytes>
0x4001f6:	endbr64	
0x4001fa:	push	rbp
0x4001fb:	mov	rbp, rsp
0x4001fe:	sub	rsp, 0x20
0x400202:	mov	rax, qword ptr fs:[0x28]
0x40020b:	mov	qword ptr [rbp - 8], rax
0x40020f:	xor	eax, eax
0x400211:	mov	eax, 0
0x400216:	call	0x500000
<Block for 0x40021b, 8 bytes>
0x40021b:	test	eax, eax
0x40021d:	je	0x4002e0
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x400223, 54 bytes>
0x400223:	mov	eax, 0x10
0x400228:	sub	rax, 1
0x40022c:	add	rax, 0x10
0x400230:	mov	esi, 0x10
0x400235:	mov	edx, 0
0x40023a:	div	rsi
0x40023d:	imul	rax, rax, 0x10
0x400241:	mov	rdx, rax
0x400244:	and	rdx, 0xfffffffffffff000
0x40024b:	mov	rcx, rsp
0x40024e:	sub	rcx, rdx
0x400251:	mov	rdx, rcx
0x400254:	cmp	rsp, rdx
0x400257:	je	0x40026b
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500010
<Block for 0x40026b, 26 bytes>
0x40026b:	mov	rdx, rax
0x40026e:	and	edx, 0xfff
0x400274:	sub	rsp, rdx
0x400277:	mov	rdx, rax
0x40027a:	and	edx, 0xfff
0x400280:	test	rdx, rdx
0x400283:	je	0x400295
<Block for 0x400259, 18 bytes>
0x400259:	sub	rsp, 0x1000
0x400260:	or	qword ptr [rsp + 0xff8], 0
0x400269:	jmp	0x400254
<Block for 0x400295, 65 bytes>
0x400295:	mov	rax, rsp
0x400298:	add	rax, 0xf
0x40029c:	shr	rax, 4
0x4002a0:	shl	rax, 4
0x4002a4:	mov	qword ptr [rbp - 0x20], rax
0x4002a8:	mov	dword ptr [rbp - 0x18], 1
0x4002af:	mov	dword ptr [rbp - 0x14], 2
0x4002b6:	mov	rax, qword ptr [rbp - 0x20]
0x4002ba:	mov	rdx, qword ptr [rbp - 0x18]
0x4002be:	mov	qword ptr [rax], rdx
0x4002c1:	mov	rax, qword ptr [rbp - 0x20]
0x4002c5:	mov	rax, qword ptr [rax]
0x4002c8:	mov	qword ptr [rbp - 0x10], rax
0x4002cc:	mov	eax, dword ptr [rbp - 0x10]
0x4002cf:	mov	edi, eax
0x4002d1:	call	0x500008
<Block for 0x400285, 81 bytes>
0x400285:	and	eax, 0xfff
0x40028a:	sub	rax, 8
0x40028e:	add	rax, rsp
0x400291:	or	qword ptr [rax], 0
0x400295:	mov	rax, rsp
0x400298:	add	rax, 0xf
0x40029c:	shr	rax, 4
0x4002a0:	shl	rax, 4
0x4002a4:	mov	qword ptr [rbp - 0x20], rax
0x4002a8:	mov	dword ptr [rbp - 0x18], 1
0x4002af:	mov	dword ptr [rbp - 0x14], 2
0x4002b6:	mov	rax, qword ptr [rbp - 0x20]
0x4002ba:	mov	rdx, qword ptr [rbp - 0x18]
0x4002be:	mov	qword ptr [rax], rdx
0x4002c1:	mov	rax, qword ptr [rbp - 0x20]
0x4002c5:	mov	rax, qword ptr [rax]
0x4002c8:	mov	qword ptr [rbp - 0x10], rax
0x4002cc:	mov	eax, dword ptr [rbp - 0x10]
0x4002cf:	mov	edi, eax
0x4002d1:	call	0x500008
<Block for 0x400254, 5 bytes>
0x400254:	cmp	rsp, rdx
0x400257:	je	0x40026b
<Block for 0x4002d6, 10 bytes>
0x4002d6:	mov	eax, dword ptr [rbp - 0xc]
0x4002d9:	mov	edi, eax
0x4002db:	call	0x500008
