<Block for 0x4000e8, 37 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x20
0x4000f4:	mov	rax, qword ptr fs:[0x28]
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	xor	eax, eax
0x400103:	mov	eax, 0
0x400108:	call	0x500018
<Block for 0x40010d, 4 bytes>
0x40010d:	test	eax, eax
0x40010f:	je	0x400122
<Block for 0x400122, 54 bytes>
0x400122:	mov	eax, 0x10
0x400127:	sub	rax, 1
0x40012b:	add	rax, 0x10
0x40012f:	mov	esi, 0x10
0x400134:	mov	edx, 0
0x400139:	div	rsi
0x40013c:	imul	rax, rax, 0x10
0x400140:	mov	rdx, rax
0x400143:	and	rdx, 0xfffffffffffff000
0x40014a:	mov	rcx, rsp
0x40014d:	sub	rcx, rdx
0x400150:	mov	rdx, rcx
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x400111, 12 bytes>
0x400111:	lea	rdi, [rip + 0x1fe]
0x400118:	call	0x500020
<Block for 0x40016a, 26 bytes>
0x40016a:	mov	rdx, rax
0x40016d:	and	edx, 0xfff
0x400173:	sub	rsp, rdx
0x400176:	mov	rdx, rax
0x400179:	and	edx, 0xfff
0x40017f:	test	rdx, rdx
0x400182:	je	0x400194
<Block for 0x400158, 18 bytes>
0x400158:	sub	rsp, 0x1000
0x40015f:	or	qword ptr [rsp + 0xff8], 0
0x400168:	jmp	0x400153
<Block for 0x40011d, 5 bytes>
0x40011d:	jmp	0x4001df
<Block for 0x400194, 65 bytes>
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x20], rax
0x4001a7:	mov	dword ptr [rbp - 0x18], 1
0x4001ae:	mov	dword ptr [rbp - 0x14], 2
0x4001b5:	mov	rax, qword ptr [rbp - 0x20]
0x4001b9:	mov	rdx, qword ptr [rbp - 0x18]
0x4001bd:	mov	qword ptr [rax], rdx
0x4001c0:	mov	rax, qword ptr [rbp - 0x20]
0x4001c4:	mov	rax, qword ptr [rax]
0x4001c7:	mov	qword ptr [rbp - 0x10], rax
0x4001cb:	mov	eax, dword ptr [rbp - 0x10]
0x4001ce:	mov	edi, eax
0x4001d0:	call	0x500008
<Block for 0x400184, 81 bytes>
0x400184:	and	eax, 0xfff
0x400189:	sub	rax, 8
0x40018d:	add	rax, rsp
0x400190:	or	qword ptr [rax], 0
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x20], rax
0x4001a7:	mov	dword ptr [rbp - 0x18], 1
0x4001ae:	mov	dword ptr [rbp - 0x14], 2
0x4001b5:	mov	rax, qword ptr [rbp - 0x20]
0x4001b9:	mov	rdx, qword ptr [rbp - 0x18]
0x4001bd:	mov	qword ptr [rax], rdx
0x4001c0:	mov	rax, qword ptr [rbp - 0x20]
0x4001c4:	mov	rax, qword ptr [rax]
0x4001c7:	mov	qword ptr [rbp - 0x10], rax
0x4001cb:	mov	eax, dword ptr [rbp - 0x10]
0x4001ce:	mov	edi, eax
0x4001d0:	call	0x500008
<Block for 0x400153, 5 bytes>
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001d5, 10 bytes>
0x4001d5:	mov	eax, dword ptr [rbp - 0xc]
0x4001d8:	mov	edi, eax
0x4001da:	call	0x500008
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500010
