<Block for 0x400084, 39 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x10
0x400090:	mov	qword ptr [rbp - 8], 0
0x400098:	lea	rsi, [rip + 0x104]
0x40009f:	lea	rdi, [rip + 0x100]
0x4000a6:	call	0x500000
<Block for 0x4000ab, 14 bytes>
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	mov	eax, 0
0x4000b4:	call	0x40000f
<Block for 0x4000b9, 4 bytes>
0x4000b9:	test	eax, eax
0x4000bb:	je	0x4000cb
<Block for 0x4000cb, 7 bytes>
0x4000cb:	cmp	qword ptr [rbp - 8], 0
0x4000d0:	je	0x4000de
<Block for 0x4000bd, 12 bytes>
0x4000bd:	lea	rdi, [rip + 0x108]
0x4000c4:	call	0x500010
<Block for 0x4000de, 19 bytes>
0x4000de:	lea	rsi, [rip + 0xbe]
0x4000e5:	lea	rdi, [rip + 0xf5]
0x4000ec:	call	0x500000
<Block for 0x4000d2, 12 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500008
<Block for 0x4000c9, 2 bytes>
0x4000c9:	jmp	0x400108
<Block for 0x4000f1, 11 bytes>
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	cmp	qword ptr [rbp - 8], 0
0x4000fa:	je	0x400108
<Block for 0x400108, 3 bytes>
0x400108:	nop	
0x400109:	leave	
0x40010a:	ret	
<Block for 0x4000fc, 12 bytes>
0x4000fc:	mov	rax, qword ptr [rbp - 8]
0x400100:	mov	rdi, rax
0x400103:	call	0x500008
