<Block for 0x4005cc, 41 bytes>
0x4005cc:	endbr64	
0x4005d0:	push	rbp
0x4005d1:	mov	rbp, rsp
0x4005d4:	sub	rsp, 0x30
0x4005d8:	mov	qword ptr [rbp - 0x28], rdi
0x4005dc:	mov	rax, qword ptr fs:[0x28]
0x4005e5:	mov	qword ptr [rbp - 8], rax
0x4005e9:	xor	eax, eax
0x4005eb:	mov	eax, dword ptr [rip + 0x43f]
0x4005f1:	test	eax, eax
0x4005f3:	je	0x40064a
<Block for 0x40064a, 16 bytes>
0x40064a:	nop	
0x40064b:	mov	rax, qword ptr [rbp - 8]
0x40064f:	xor	rax, qword ptr fs:[0x28]
0x400658:	je	0x40065f
<Block for 0x4005f5, 28 bytes>
0x4005f5:	lea	rdx, [rbp - 0x14]
0x4005f9:	mov	rax, qword ptr [rbp - 0x28]
0x4005fd:	lea	rsi, [rip + 0x434]
0x400604:	mov	rdi, rax
0x400607:	mov	eax, 0
0x40060c:	call	0x500000
<Block for 0x40065f, 2 bytes>
0x40065f:	leave	
0x400660:	ret	
<Block for 0x40065a, 5 bytes>
0x40065a:	call	0x500010
<Block for 0x400611, 5 bytes>
0x400611:	cmp	eax, 1
0x400614:	jne	0x40064a
<Block for 0x400616, 10 bytes>
0x400616:	mov	eax, dword ptr [rbp - 0x14]
0x400619:	cmp	eax, 0x270f
0x40061e:	jg	0x40064a
<Block for 0x400620, 16 bytes>
0x400620:	mov	dword ptr [rbp - 0xc], 0
0x400627:	mov	dword ptr [rbp - 0x10], 0
0x40062e:	jmp	0x400638
<Block for 0x400638, 8 bytes>
0x400638:	mov	eax, dword ptr [rbp - 0x14]
0x40063b:	cmp	dword ptr [rbp - 0x10], eax
0x40063e:	jl	0x400630
<Block for 0x400630, 16 bytes>
0x400630:	add	dword ptr [rbp - 0xc], 1
0x400634:	add	dword ptr [rbp - 0x10], 1
0x400638:	mov	eax, dword ptr [rbp - 0x14]
0x40063b:	cmp	dword ptr [rbp - 0x10], eax
0x40063e:	jl	0x400630
<Block for 0x400640, 10 bytes>
0x400640:	mov	eax, dword ptr [rbp - 0xc]
0x400643:	mov	edi, eax
0x400645:	call	0x500008
