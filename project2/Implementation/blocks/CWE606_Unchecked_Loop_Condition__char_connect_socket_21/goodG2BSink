<Block for 0x4008b0, 41 bytes>
0x4008b0:	endbr64	
0x4008b4:	push	rbp
0x4008b5:	mov	rbp, rsp
0x4008b8:	sub	rsp, 0x30
0x4008bc:	mov	qword ptr [rbp - 0x28], rdi
0x4008c0:	mov	rax, qword ptr fs:[0x28]
0x4008c9:	mov	qword ptr [rbp - 8], rax
0x4008cd:	xor	eax, eax
0x4008cf:	mov	eax, dword ptr [rip + 0x15f]
0x4008d5:	test	eax, eax
0x4008d7:	je	0x400924
<Block for 0x400924, 16 bytes>
0x400924:	nop	
0x400925:	mov	rax, qword ptr [rbp - 8]
0x400929:	xor	rax, qword ptr fs:[0x28]
0x400932:	je	0x400939
<Block for 0x4008d9, 28 bytes>
0x4008d9:	lea	rdx, [rbp - 0x14]
0x4008dd:	mov	rax, qword ptr [rbp - 0x28]
0x4008e1:	lea	rsi, [rip + 0x150]
0x4008e8:	mov	rdi, rax
0x4008eb:	mov	eax, 0
0x4008f0:	call	0x500000
<Block for 0x400939, 2 bytes>
0x400939:	leave	
0x40093a:	ret	
<Block for 0x400934, 5 bytes>
0x400934:	call	0x500010
<Block for 0x4008f5, 5 bytes>
0x4008f5:	cmp	eax, 1
0x4008f8:	jne	0x400924
<Block for 0x4008fa, 16 bytes>
0x4008fa:	mov	dword ptr [rbp - 0xc], 0
0x400901:	mov	dword ptr [rbp - 0x10], 0
0x400908:	jmp	0x400912
<Block for 0x400912, 8 bytes>
0x400912:	mov	eax, dword ptr [rbp - 0x14]
0x400915:	cmp	dword ptr [rbp - 0x10], eax
0x400918:	jl	0x40090a
<Block for 0x40090a, 16 bytes>
0x40090a:	add	dword ptr [rbp - 0xc], 1
0x40090e:	add	dword ptr [rbp - 0x10], 1
0x400912:	mov	eax, dword ptr [rbp - 0x14]
0x400915:	cmp	dword ptr [rbp - 0x10], eax
0x400918:	jl	0x40090a
<Block for 0x40091a, 10 bytes>
0x40091a:	mov	eax, dword ptr [rbp - 0xc]
0x40091d:	mov	edi, eax
0x40091f:	call	0x500008
