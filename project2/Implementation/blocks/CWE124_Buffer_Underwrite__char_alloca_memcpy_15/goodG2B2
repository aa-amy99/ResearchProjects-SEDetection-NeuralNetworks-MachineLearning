<Block for 0x40033a, 85 bytes>
0x40033a:	endbr64	
0x40033e:	push	rbp
0x40033f:	mov	rbp, rsp
0x400342:	push	rbx
0x400343:	sub	rsp, 0x88
0x40034a:	mov	rax, qword ptr fs:[0x28]
0x400353:	mov	qword ptr [rbp - 0x18], rax
0x400357:	xor	eax, eax
0x400359:	mov	eax, 0x10
0x40035e:	sub	rax, 1
0x400362:	add	rax, 0x6c
0x400366:	mov	esi, 0x10
0x40036b:	mov	edx, 0
0x400370:	div	rsi
0x400373:	imul	rax, rax, 0x10
0x400377:	mov	rdx, rax
0x40037a:	and	rdx, 0xfffffffffffff000
0x400381:	mov	rbx, rsp
0x400384:	sub	rbx, rdx
0x400387:	mov	rdx, rbx
0x40038a:	cmp	rsp, rdx
0x40038d:	je	0x4003a1
<Block for 0x4003a1, 26 bytes>
0x4003a1:	mov	rdx, rax
0x4003a4:	and	edx, 0xfff
0x4003aa:	sub	rsp, rdx
0x4003ad:	mov	rdx, rax
0x4003b0:	and	edx, 0xfff
0x4003b6:	test	rdx, rdx
0x4003b9:	je	0x4003cb
<Block for 0x40038f, 18 bytes>
0x40038f:	sub	rsp, 0x1000
0x400396:	or	qword ptr [rsp + 0xff8], 0
0x40039f:	jmp	0x40038a
<Block for 0x4003cb, 47 bytes>
0x4003cb:	mov	rax, rsp
0x4003ce:	add	rax, 0xf
0x4003d2:	shr	rax, 4
0x4003d6:	shl	rax, 4
0x4003da:	mov	qword ptr [rbp - 0x90], rax
0x4003e1:	mov	rax, qword ptr [rbp - 0x90]
0x4003e8:	mov	edx, 0x63
0x4003ed:	mov	esi, 0x41
0x4003f2:	mov	rdi, rax
0x4003f5:	call	0x500000
<Block for 0x4003bb, 63 bytes>
0x4003bb:	and	eax, 0xfff
0x4003c0:	sub	rax, 8
0x4003c4:	add	rax, rsp
0x4003c7:	or	qword ptr [rax], 0
0x4003cb:	mov	rax, rsp
0x4003ce:	add	rax, 0xf
0x4003d2:	shr	rax, 4
0x4003d6:	shl	rax, 4
0x4003da:	mov	qword ptr [rbp - 0x90], rax
0x4003e1:	mov	rax, qword ptr [rbp - 0x90]
0x4003e8:	mov	edx, 0x63
0x4003ed:	mov	esi, 0x41
0x4003f2:	mov	rdi, rax
0x4003f5:	call	0x500000
<Block for 0x40038a, 5 bytes>
0x40038a:	cmp	rsp, rdx
0x40038d:	je	0x4003a1
<Block for 0x4003fa, 51 bytes>
0x4003fa:	mov	rax, qword ptr [rbp - 0x90]
0x400401:	add	rax, 0x63
0x400405:	mov	byte ptr [rax], 0
0x400408:	mov	rax, qword ptr [rbp - 0x90]
0x40040f:	mov	qword ptr [rbp - 0x88], rax
0x400416:	nop	
0x400417:	lea	rax, [rbp - 0x80]
0x40041b:	mov	edx, 0x63
0x400420:	mov	esi, 0x43
0x400425:	mov	rdi, rax
0x400428:	call	0x500000
<Block for 0x40042d, 141 bytes>
0x40042d:	mov	byte ptr [rbp - 0x1d], 0
0x400431:	mov	rax, qword ptr [rbp - 0x88]
0x400438:	mov	rcx, qword ptr [rbp - 0x80]
0x40043c:	mov	rbx, qword ptr [rbp - 0x78]
0x400440:	mov	qword ptr [rax], rcx
0x400443:	mov	qword ptr [rax + 8], rbx
0x400447:	mov	rcx, qword ptr [rbp - 0x70]
0x40044b:	mov	rbx, qword ptr [rbp - 0x68]
0x40044f:	mov	qword ptr [rax + 0x10], rcx
0x400453:	mov	qword ptr [rax + 0x18], rbx
0x400457:	mov	rcx, qword ptr [rbp - 0x60]
0x40045b:	mov	rbx, qword ptr [rbp - 0x58]
0x40045f:	mov	qword ptr [rax + 0x20], rcx
0x400463:	mov	qword ptr [rax + 0x28], rbx
0x400467:	mov	rcx, qword ptr [rbp - 0x50]
0x40046b:	mov	rbx, qword ptr [rbp - 0x48]
0x40046f:	mov	qword ptr [rax + 0x30], rcx
0x400473:	mov	qword ptr [rax + 0x38], rbx
0x400477:	mov	rcx, qword ptr [rbp - 0x40]
0x40047b:	mov	rbx, qword ptr [rbp - 0x38]
0x40047f:	mov	qword ptr [rax + 0x40], rcx
0x400483:	mov	qword ptr [rax + 0x48], rbx
0x400487:	mov	rcx, qword ptr [rbp - 0x30]
0x40048b:	mov	rbx, qword ptr [rbp - 0x28]
0x40048f:	mov	qword ptr [rax + 0x50], rcx
0x400493:	mov	qword ptr [rax + 0x58], rbx
0x400497:	mov	edx, dword ptr [rbp - 0x20]
0x40049a:	mov	dword ptr [rax + 0x60], edx
0x40049d:	mov	rax, qword ptr [rbp - 0x88]
0x4004a4:	add	rax, 0x63
0x4004a8:	mov	byte ptr [rax], 0
0x4004ab:	mov	rax, qword ptr [rbp - 0x88]
0x4004b2:	mov	rdi, rax
0x4004b5:	call	0x500008
<Block for 0x4004ba, 16 bytes>
0x4004ba:	nop	
0x4004bb:	mov	rax, qword ptr [rbp - 0x18]
0x4004bf:	xor	rax, qword ptr fs:[0x28]
0x4004c8:	je	0x4004cf
<Block for 0x4004cf, 6 bytes>
0x4004cf:	mov	rbx, qword ptr [rbp - 8]
0x4004d3:	leave	
0x4004d4:	ret	
<Block for 0x4004ca, 5 bytes>
0x4004ca:	call	0x500010
