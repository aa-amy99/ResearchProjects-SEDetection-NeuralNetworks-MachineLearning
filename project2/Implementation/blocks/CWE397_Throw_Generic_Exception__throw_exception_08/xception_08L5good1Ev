<Block for 0x40006f, 16 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	push	r12
0x400079:	push	rbx
0x40007a:	call	0x40000f
<Block for 0x40007f, 9 bytes>
0x40007f:	test	eax, eax
0x400081:	setne	al
0x400084:	test	al, al
0x400086:	je	0x400096
<Block for 0x400096, 10 bytes>
0x400096:	mov	edi, 0x10
0x40009b:	call	0x500000
<Block for 0x400088, 12 bytes>
0x400088:	lea	rdi, [rip + 0x163]
0x40008f:	call	0x500028
<Block for 0x4000a0, 18 bytes>
0x4000a0:	mov	rbx, rax
0x4000a3:	lea	rsi, [rip + 0x15d]
0x4000aa:	mov	rdi, rbx
0x4000ad:	call	0x500030
<Block for 0x400094, 2 bytes>
0x400094:	jmp	0x4000e5
<Block for 0x4000b2, 25 bytes>
0x4000b2:	mov	rax, qword ptr [rip + 0xfff87]
0x4000b9:	mov	rdx, rax
0x4000bc:	lea	rsi, [rip + 0xfff85]
0x4000c3:	mov	rdi, rbx
0x4000c6:	call	0x500020
<Block for 0x4000e5, 5 bytes>
0x4000e5:	pop	rbx
0x4000e6:	pop	r12
0x4000e8:	pop	rbp
0x4000e9:	ret	
<Block for 0x4000cb, 15 bytes>
0x4000cb:	endbr64	
0x4000cf:	mov	r12, rax
0x4000d2:	mov	rdi, rbx
0x4000d5:	call	0x500050
<Block for 0x4000da, 11 bytes>
0x4000da:	mov	rax, r12
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500058
