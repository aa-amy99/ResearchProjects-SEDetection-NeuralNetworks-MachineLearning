<Block for 0x400166, 82 bytes>
0x400166:	endbr64	
0x40016a:	push	rbp
0x40016b:	mov	rbp, rsp
0x40016e:	sub	rsp, 0x130
0x400175:	mov	rax, qword ptr fs:[0x28]
0x40017e:	mov	qword ptr [rbp - 8], rax
0x400182:	xor	eax, eax
0x400184:	movabs	rax, 0x3d48544150
0x40018e:	mov	edx, 0
0x400193:	mov	qword ptr [rbp - 0x110], rax
0x40019a:	mov	qword ptr [rbp - 0x108], rdx
0x4001a1:	lea	rdx, [rbp - 0x100]
0x4001a8:	mov	eax, 0
0x4001ad:	mov	ecx, 0x1d
0x4001b2:	mov	rdi, rdx
0x4001b5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001b8, 51 bytes>
0x4001b8:	mov	rdx, rdi
0x4001bb:	mov	word ptr [rdx], ax
0x4001be:	add	rdx, 2
0x4001c2:	lea	rax, [rbp - 0x110]
0x4001c9:	mov	qword ptr [rbp - 0x128], rax
0x4001d0:	mov	rax, qword ptr [rbp - 0x128]
0x4001d7:	mov	rcx, -1
0x4001de:	mov	rdx, rax
0x4001e1:	mov	eax, 0
0x4001e6:	mov	rdi, rdx
0x4001e9:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001b5, 3 bytes>
0x4001b5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001eb, 73 bytes>
0x4001eb:	mov	rax, rcx
0x4001ee:	not	rax
0x4001f1:	lea	rdx, [rax - 1]
0x4001f5:	mov	rax, qword ptr [rbp - 0x128]
0x4001fc:	add	rax, rdx
0x4001ff:	mov	dword ptr [rax], 0x6e69622f
0x400205:	mov	byte ptr [rax + 4], 0
0x400209:	mov	rax, qword ptr [rbp - 0x128]
0x400210:	mov	qword ptr [rbp - 0x120], rax
0x400217:	mov	rax, qword ptr [rbp - 0x120]
0x40021e:	mov	qword ptr [rbp - 0x118], rax
0x400225:	mov	rax, qword ptr [rbp - 0x118]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x500028
<Block for 0x4001e9, 2 bytes>
0x4001e9:	repne scasb	al, byte ptr [rdi]
<Block for 0x400234, 16 bytes>
0x400234:	nop	
0x400235:	mov	rax, qword ptr [rbp - 8]
0x400239:	xor	rax, qword ptr fs:[0x28]
0x400242:	je	0x400249
<Block for 0x400249, 2 bytes>
0x400249:	leave	
0x40024a:	ret	
<Block for 0x400244, 5 bytes>
0x400244:	call	0x500030
