<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400022:	mov	rax, qword ptr [rip + 0xfffd7]
0x400029:	lea	rdx, [rbp - 0x38]
0x40002d:	lea	rsi, [rip + 0x3c4]
0x400034:	mov	rdi, rax
0x400037:	mov	eax, 0
0x40003c:	call	0x500008
<Block for 0x400041, 49 bytes>
0x400041:	nop	
0x400042:	mov	qword ptr [rbp - 0x30], 0
0x40004a:	mov	qword ptr [rbp - 0x28], 0
0x400052:	mov	qword ptr [rbp - 0x20], 0
0x40005a:	mov	qword ptr [rbp - 0x18], 0
0x400062:	mov	qword ptr [rbp - 0x10], 0
0x40006a:	mov	eax, dword ptr [rbp - 0x38]
0x40006d:	cmp	eax, 9
0x400070:	jg	0x4000a4
<Block for 0x400072, 22 bytes>
0x400072:	mov	eax, dword ptr [rbp - 0x38]
0x400075:	cdqe	
0x400077:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40007f:	mov	dword ptr [rbp - 0x34], 0
0x400086:	jmp	0x40009c
<Block for 0x4000a4, 12 bytes>
0x4000a4:	lea	rdi, [rip + 0x355]
0x4000ab:	call	0x500018
<Block for 0x40009c, 6 bytes>
0x40009c:	cmp	dword ptr [rbp - 0x34], 9
0x4000a0:	jle	0x400088
<Block for 0x4000b0, 17 bytes>
0x4000b0:	nop	
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x400088, 16 bytes>
0x400088:	mov	eax, dword ptr [rbp - 0x34]
0x40008b:	cdqe	
0x40008d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400091:	mov	edi, eax
0x400093:	call	0x500010
<Block for 0x4000a2, 2 bytes>
0x4000a2:	jmp	0x4000b0
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500020
<Block for 0x400098, 10 bytes>
0x400098:	add	dword ptr [rbp - 0x34], 1
0x40009c:	cmp	dword ptr [rbp - 0x34], 9
0x4000a0:	jle	0x400088
