<Block for 0x4000a5, 66 bytes>
0x4000a5:	endbr64	
0x4000a9:	push	rbp
0x4000aa:	mov	rbp, rsp
0x4000ad:	sub	rsp, 0xe0
0x4000b4:	mov	rax, qword ptr fs:[0x28]
0x4000bd:	mov	qword ptr [rbp - 8], rax
0x4000c1:	xor	eax, eax
0x4000c3:	mov	qword ptr [rbp - 0xd8], 0
0x4000ce:	mov	dword ptr [rip + 0x13c], 0
0x4000d8:	mov	rax, qword ptr [rbp - 0xd8]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500028
<Block for 0x4000e7, 32 bytes>
0x4000e7:	mov	qword ptr [rbp - 0xd8], rax
0x4000ee:	lea	rax, [rbp - 0xd0]
0x4000f5:	mov	edx, 0xc7
0x4000fa:	mov	esi, 0x43
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500008
<Block for 0x400107, 29 bytes>
0x400107:	mov	byte ptr [rbp - 9], 0
0x40010b:	mov	rdx, qword ptr [rbp - 0xd8]
0x400112:	lea	rax, [rbp - 0xd0]
0x400119:	mov	rsi, rdx
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500010
<Block for 0x400124, 15 bytes>
0x400124:	lea	rax, [rbp - 0xd0]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500018
<Block for 0x400133, 16 bytes>
0x400133:	nop	
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	xor	rax, qword ptr fs:[0x28]
0x400141:	je	0x400148
<Block for 0x400148, 2 bytes>
0x400148:	leave	
0x400149:	ret	
<Block for 0x400143, 5 bytes>
0x400143:	call	0x500020
