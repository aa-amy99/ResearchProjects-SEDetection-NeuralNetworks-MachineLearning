<Block for 0x400000, 61 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	mov	dword ptr [rbp - 0x94], 0
0x400034:	cmp	dword ptr [rbp - 0x94], 0
0x40003b:	jg	0x400090
<Block for 0x40003d, 10 bytes>
0x40003d:	mov	edi, 0x64
0x400042:	call	0x500000
<Block for 0x400090, 22 bytes>
0x400090:	lea	rax, [rbp - 0x80]
0x400094:	mov	edx, 0x63
0x400099:	mov	esi, 0x43
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500008
<Block for 0x400047, 32 bytes>
0x400047:	mov	qword ptr [rbp - 0x88], rax
0x40004e:	mov	rax, qword ptr [rbp - 0x88]
0x400055:	mov	edx, 0x63
0x40005a:	mov	esi, 0x41
0x40005f:	mov	rdi, rax
0x400062:	call	0x500008
<Block for 0x4000a6, 141 bytes>
0x4000a6:	mov	byte ptr [rbp - 0x1d], 0
0x4000aa:	mov	rax, qword ptr [rbp - 0x90]
0x4000b1:	mov	rcx, qword ptr [rbp - 0x80]
0x4000b5:	mov	rbx, qword ptr [rbp - 0x78]
0x4000b9:	mov	qword ptr [rax], rcx
0x4000bc:	mov	qword ptr [rax + 8], rbx
0x4000c0:	mov	rcx, qword ptr [rbp - 0x70]
0x4000c4:	mov	rbx, qword ptr [rbp - 0x68]
0x4000c8:	mov	qword ptr [rax + 0x10], rcx
0x4000cc:	mov	qword ptr [rax + 0x18], rbx
0x4000d0:	mov	rcx, qword ptr [rbp - 0x60]
0x4000d4:	mov	rbx, qword ptr [rbp - 0x58]
0x4000d8:	mov	qword ptr [rax + 0x20], rcx
0x4000dc:	mov	qword ptr [rax + 0x28], rbx
0x4000e0:	mov	rcx, qword ptr [rbp - 0x50]
0x4000e4:	mov	rbx, qword ptr [rbp - 0x48]
0x4000e8:	mov	qword ptr [rax + 0x30], rcx
0x4000ec:	mov	qword ptr [rax + 0x38], rbx
0x4000f0:	mov	rcx, qword ptr [rbp - 0x40]
0x4000f4:	mov	rbx, qword ptr [rbp - 0x38]
0x4000f8:	mov	qword ptr [rax + 0x40], rcx
0x4000fc:	mov	qword ptr [rax + 0x48], rbx
0x400100:	mov	rcx, qword ptr [rbp - 0x30]
0x400104:	mov	rbx, qword ptr [rbp - 0x28]
0x400108:	mov	qword ptr [rax + 0x50], rcx
0x40010c:	mov	qword ptr [rax + 0x58], rbx
0x400110:	mov	edx, dword ptr [rbp - 0x20]
0x400113:	mov	dword ptr [rax + 0x60], edx
0x400116:	mov	rax, qword ptr [rbp - 0x90]
0x40011d:	add	rax, 0x63
0x400121:	mov	byte ptr [rax], 0
0x400124:	mov	rax, qword ptr [rbp - 0x90]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500010
<Block for 0x400067, 41 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x88]
0x40006e:	add	rax, 0x63
0x400072:	mov	byte ptr [rax], 0
0x400075:	mov	rax, qword ptr [rbp - 0x88]
0x40007c:	sub	rax, 8
0x400080:	mov	qword ptr [rbp - 0x90], rax
0x400087:	add	dword ptr [rbp - 0x94], 1
0x40008e:	jmp	0x400034
<Block for 0x400133, 16 bytes>
0x400133:	nop	
0x400134:	mov	rax, qword ptr [rbp - 0x18]
0x400138:	xor	rax, qword ptr fs:[0x28]
0x400141:	je	0x400148
<Block for 0x400034, 9 bytes>
0x400034:	cmp	dword ptr [rbp - 0x94], 0
0x40003b:	jg	0x400090
<Block for 0x400148, 10 bytes>
0x400148:	add	rsp, 0x98
0x40014f:	pop	rbx
0x400150:	pop	rbp
0x400151:	ret	
<Block for 0x400143, 5 bytes>
0x400143:	call	0x500018
