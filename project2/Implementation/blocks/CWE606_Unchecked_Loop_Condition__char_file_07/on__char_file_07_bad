<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	eax, dword ptr [rip + 0x74a]
0x400096:	cmp	eax, 5
0x400099:	jne	0x40013a
<Block for 0x40009f, 15 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 0x88]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500000
<Block for 0x40013a, 11 bytes>
0x40013a:	mov	eax, dword ptr [rip + 0x6a0]
0x400140:	cmp	eax, 5
0x400143:	jne	0x4001ab
<Block for 0x4000ae, 19 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x80], rax
0x4000b2:	mov	eax, 0x64
0x4000b7:	sub	rax, qword ptr [rbp - 0x80]
0x4000bb:	cmp	rax, 1
0x4000bf:	jbe	0x40013a
<Block for 0x400145, 34 bytes>
0x400145:	lea	rdx, [rbp - 0x94]
0x40014c:	mov	rax, qword ptr [rbp - 0x88]
0x400153:	lea	rsi, [rip + 0x6a9]
0x40015a:	mov	rdi, rax
0x40015d:	mov	eax, 0
0x400162:	call	0x500028
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4000c1, 19 bytes>
0x4000c1:	lea	rsi, [rip + 0x71c]
0x4000c8:	lea	rdi, [rip + 0x717]
0x4000cf:	call	0x500008
<Block for 0x400167, 5 bytes>
0x400167:	cmp	eax, 1
0x40016a:	jne	0x4001ab
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500038
<Block for 0x4000d4, 11 bytes>
0x4000d4:	mov	qword ptr [rbp - 0x78], rax
0x4000d8:	cmp	qword ptr [rbp - 0x78], 0
0x4000dd:	je	0x40013a
<Block for 0x40016c, 22 bytes>
0x40016c:	mov	dword ptr [rbp - 0x8c], 0
0x400176:	mov	dword ptr [rbp - 0x90], 0
0x400180:	jmp	0x400190
<Block for 0x4000df, 45 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x80]
0x4000e3:	mov	edx, 0x64
0x4000e8:	sub	edx, eax
0x4000ea:	mov	eax, edx
0x4000ec:	mov	esi, eax
0x4000ee:	mov	rdx, qword ptr [rbp - 0x88]
0x4000f5:	mov	rax, qword ptr [rbp - 0x80]
0x4000f9:	lea	rcx, [rdx + rax]
0x4000fd:	mov	rax, qword ptr [rbp - 0x78]
0x400101:	mov	rdx, rax
0x400104:	mov	rdi, rcx
0x400107:	call	0x500010
<Block for 0x400190, 14 bytes>
0x400190:	mov	eax, dword ptr [rbp - 0x94]
0x400196:	cmp	dword ptr [rbp - 0x90], eax
0x40019c:	jl	0x400182
<Block for 0x40010c, 5 bytes>
0x40010c:	test	rax, rax
0x40010f:	jne	0x40012e
<Block for 0x400182, 28 bytes>
0x400182:	add	dword ptr [rbp - 0x8c], 1
0x400189:	add	dword ptr [rbp - 0x90], 1
0x400190:	mov	eax, dword ptr [rbp - 0x94]
0x400196:	cmp	dword ptr [rbp - 0x90], eax
0x40019c:	jl	0x400182
<Block for 0x40019e, 13 bytes>
0x40019e:	mov	eax, dword ptr [rbp - 0x8c]
0x4001a4:	mov	edi, eax
0x4001a6:	call	0x500030
<Block for 0x400111, 12 bytes>
0x400111:	lea	rdi, [rip + 0x6dc]
0x400118:	call	0x500018
<Block for 0x40012e, 12 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x78]
0x400132:	mov	rdi, rax
0x400135:	call	0x500020
<Block for 0x40011d, 29 bytes>
0x40011d:	mov	rdx, qword ptr [rbp - 0x88]
0x400124:	mov	rax, qword ptr [rbp - 0x80]
0x400128:	add	rax, rdx
0x40012b:	mov	byte ptr [rax], 0
0x40012e:	mov	rax, qword ptr [rbp - 0x78]
0x400132:	mov	rdi, rax
0x400135:	call	0x500020
