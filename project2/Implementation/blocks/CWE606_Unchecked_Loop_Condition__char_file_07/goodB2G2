<Block for 0x40039f, 159 bytes>
0x40039f:	endbr64	
0x4003a3:	push	rbp
0x4003a4:	mov	rbp, rsp
0x4003a7:	sub	rsp, 0xa0
0x4003ae:	mov	rax, qword ptr fs:[0x28]
0x4003b7:	mov	qword ptr [rbp - 8], rax
0x4003bb:	xor	eax, eax
0x4003bd:	mov	qword ptr [rbp - 0x70], 0
0x4003c5:	mov	qword ptr [rbp - 0x68], 0
0x4003cd:	mov	qword ptr [rbp - 0x60], 0
0x4003d5:	mov	qword ptr [rbp - 0x58], 0
0x4003dd:	mov	qword ptr [rbp - 0x50], 0
0x4003e5:	mov	qword ptr [rbp - 0x48], 0
0x4003ed:	mov	qword ptr [rbp - 0x40], 0
0x4003f5:	mov	qword ptr [rbp - 0x38], 0
0x4003fd:	mov	qword ptr [rbp - 0x30], 0
0x400405:	mov	qword ptr [rbp - 0x28], 0
0x40040d:	mov	qword ptr [rbp - 0x20], 0
0x400415:	mov	qword ptr [rbp - 0x18], 0
0x40041d:	mov	dword ptr [rbp - 0x10], 0
0x400424:	lea	rax, [rbp - 0x70]
0x400428:	mov	qword ptr [rbp - 0x88], rax
0x40042f:	mov	eax, dword ptr [rip + 0x3ab]
0x400435:	cmp	eax, 5
0x400438:	jne	0x4004d9
<Block for 0x40043e, 15 bytes>
0x40043e:	mov	rax, qword ptr [rbp - 0x88]
0x400445:	mov	rdi, rax
0x400448:	call	0x500000
<Block for 0x4004d9, 11 bytes>
0x4004d9:	mov	eax, dword ptr [rip + 0x301]
0x4004df:	cmp	eax, 5
0x4004e2:	jne	0x400557
<Block for 0x40044d, 19 bytes>
0x40044d:	mov	qword ptr [rbp - 0x80], rax
0x400451:	mov	eax, 0x64
0x400456:	sub	rax, qword ptr [rbp - 0x80]
0x40045a:	cmp	rax, 1
0x40045e:	jbe	0x4004d9
<Block for 0x4004e4, 34 bytes>
0x4004e4:	lea	rdx, [rbp - 0x94]
0x4004eb:	mov	rax, qword ptr [rbp - 0x88]
0x4004f2:	lea	rsi, [rip + 0x30a]
0x4004f9:	mov	rdi, rax
0x4004fc:	mov	eax, 0
0x400501:	call	0x500028
<Block for 0x400557, 16 bytes>
0x400557:	nop	
0x400558:	mov	rax, qword ptr [rbp - 8]
0x40055c:	xor	rax, qword ptr fs:[0x28]
0x400565:	je	0x40056c
<Block for 0x400460, 19 bytes>
0x400460:	lea	rsi, [rip + 0x37d]
0x400467:	lea	rdi, [rip + 0x378]
0x40046e:	call	0x500008
<Block for 0x400506, 5 bytes>
0x400506:	cmp	eax, 1
0x400509:	jne	0x400557
<Block for 0x40056c, 2 bytes>
0x40056c:	leave	
0x40056d:	ret	
<Block for 0x400567, 5 bytes>
0x400567:	call	0x500038
<Block for 0x400473, 11 bytes>
0x400473:	mov	qword ptr [rbp - 0x78], rax
0x400477:	cmp	qword ptr [rbp - 0x78], 0
0x40047c:	je	0x4004d9
<Block for 0x40050b, 13 bytes>
0x40050b:	mov	eax, dword ptr [rbp - 0x94]
0x400511:	cmp	eax, 0x270f
0x400516:	jg	0x400557
<Block for 0x40047e, 45 bytes>
0x40047e:	mov	rax, qword ptr [rbp - 0x80]
0x400482:	mov	edx, 0x64
0x400487:	sub	edx, eax
0x400489:	mov	eax, edx
0x40048b:	mov	esi, eax
0x40048d:	mov	rdx, qword ptr [rbp - 0x88]
0x400494:	mov	rax, qword ptr [rbp - 0x80]
0x400498:	lea	rcx, [rdx + rax]
0x40049c:	mov	rax, qword ptr [rbp - 0x78]
0x4004a0:	mov	rdx, rax
0x4004a3:	mov	rdi, rcx
0x4004a6:	call	0x500010
<Block for 0x400518, 22 bytes>
0x400518:	mov	dword ptr [rbp - 0x8c], 0
0x400522:	mov	dword ptr [rbp - 0x90], 0
0x40052c:	jmp	0x40053c
<Block for 0x4004ab, 5 bytes>
0x4004ab:	test	rax, rax
0x4004ae:	jne	0x4004cd
<Block for 0x40053c, 14 bytes>
0x40053c:	mov	eax, dword ptr [rbp - 0x94]
0x400542:	cmp	dword ptr [rbp - 0x90], eax
0x400548:	jl	0x40052e
<Block for 0x4004b0, 12 bytes>
0x4004b0:	lea	rdi, [rip + 0x33d]
0x4004b7:	call	0x500018
<Block for 0x4004cd, 12 bytes>
0x4004cd:	mov	rax, qword ptr [rbp - 0x78]
0x4004d1:	mov	rdi, rax
0x4004d4:	call	0x500020
<Block for 0x40052e, 28 bytes>
0x40052e:	add	dword ptr [rbp - 0x8c], 1
0x400535:	add	dword ptr [rbp - 0x90], 1
0x40053c:	mov	eax, dword ptr [rbp - 0x94]
0x400542:	cmp	dword ptr [rbp - 0x90], eax
0x400548:	jl	0x40052e
<Block for 0x40054a, 13 bytes>
0x40054a:	mov	eax, dword ptr [rbp - 0x8c]
0x400550:	mov	edi, eax
0x400552:	call	0x500030
<Block for 0x4004bc, 29 bytes>
0x4004bc:	mov	rdx, qword ptr [rbp - 0x88]
0x4004c3:	mov	rax, qword ptr [rbp - 0x80]
0x4004c7:	add	rax, rdx
0x4004ca:	mov	byte ptr [rax], 0
0x4004cd:	mov	rax, qword ptr [rbp - 0x78]
0x4004d1:	mov	rdi, rax
0x4004d4:	call	0x500020
