<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002bc
<Block for 0x400028, 41 bytes>
0x400028:	mov	qword ptr [rbp - 0x58], 0
0x400030:	mov	word ptr [rbp - 0x30], 8
0x400036:	lea	rax, [rbp - 0x30]
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	lea	rdx, [rbp - 0x58]
0x400042:	lea	rax, [rbp - 0x50]
0x400046:	mov	rsi, rdx
0x400049:	mov	rdi, rax
0x40004c:	call	0x4003b2
<Block for 0x400051, 19 bytes>
0x400051:	lea	rdx, [rbp - 0x58]
0x400055:	lea	rax, [rbp - 0x50]
0x400059:	mov	rsi, rdx
0x40005c:	mov	rdi, rax
0x40005f:	call	0x4003b2
<Block for 0x400064, 19 bytes>
0x400064:	lea	rdx, [rbp - 0x58]
0x400068:	lea	rax, [rbp - 0x50]
0x40006c:	mov	rsi, rdx
0x40006f:	mov	rdi, rax
0x400072:	call	0x4003b2
<Block for 0x400077, 19 bytes>
0x400077:	lea	rdx, [rbp - 0x50]
0x40007b:	lea	rax, [rbp - 0x30]
0x40007f:	mov	rsi, rdx
0x400082:	mov	rdi, rax
0x400085:	call	0x4003ec
<Block for 0x40008a, 12 bytes>
0x40008a:	lea	rax, [rbp - 0x30]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500000
<Block for 0x400096, 12 bytes>
0x400096:	lea	rax, [rbp - 0x30]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x4002dc
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rax, [rbp - 0x50]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x4002dc
<Block for 0x4000ae, 16 bytes>
0x4000ae:	nop	
0x4000af:	mov	rax, qword ptr [rbp - 0x18]
0x4000b3:	xor	rax, qword ptr fs:[0x28]
0x4000bc:	je	0x4000f8
<Block for 0x4000f8, 7 bytes>
0x4000f8:	add	rsp, 0x58
0x4000fc:	pop	rbx
0x4000fd:	pop	rbp
0x4000fe:	ret	
<Block for 0x4000be, 2 bytes>
0x4000be:	jmp	0x4000f3
<Block for 0x4000f3, 5 bytes>
0x4000f3:	call	0x500010
