<Block for 0x40013b, 84 bytes>
0x40013b:	endbr64	
0x40013f:	push	rbp
0x400140:	mov	rbp, rsp
0x400143:	sub	rsp, 0xe0
0x40014a:	mov	rax, qword ptr fs:[0x28]
0x400153:	mov	qword ptr [rbp - 8], rax
0x400157:	xor	eax, eax
0x400159:	mov	eax, 0x10
0x40015e:	sub	rax, 1
0x400162:	add	rax, 0x6c
0x400166:	mov	ecx, 0x10
0x40016b:	mov	edx, 0
0x400170:	div	rcx
0x400173:	imul	rax, rax, 0x10
0x400177:	mov	rdx, rax
0x40017a:	and	rdx, 0xfffffffffffff000
0x400181:	mov	rcx, rsp
0x400184:	sub	rcx, rdx
0x400187:	mov	rdx, rcx
0x40018a:	cmp	rsp, rdx
0x40018d:	je	0x4001a1
<Block for 0x4001a1, 26 bytes>
0x4001a1:	mov	rdx, rax
0x4001a4:	and	edx, 0xfff
0x4001aa:	sub	rsp, rdx
0x4001ad:	mov	rdx, rax
0x4001b0:	and	edx, 0xfff
0x4001b6:	test	rdx, rdx
0x4001b9:	je	0x4001cb
<Block for 0x40018f, 18 bytes>
0x40018f:	sub	rsp, 0x1000
0x400196:	or	qword ptr [rsp + 0xff8], 0
0x40019f:	jmp	0x40018a
<Block for 0x4001cb, 47 bytes>
0x4001cb:	mov	rax, rsp
0x4001ce:	add	rax, 0xf
0x4001d2:	shr	rax, 4
0x4001d6:	shl	rax, 4
0x4001da:	mov	qword ptr [rbp - 0xe0], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0xe0]
0x4001e8:	mov	edx, 0x63
0x4001ed:	mov	esi, 0x41
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500000
<Block for 0x4001bb, 63 bytes>
0x4001bb:	and	eax, 0xfff
0x4001c0:	sub	rax, 8
0x4001c4:	add	rax, rsp
0x4001c7:	or	qword ptr [rax], 0
0x4001cb:	mov	rax, rsp
0x4001ce:	add	rax, 0xf
0x4001d2:	shr	rax, 4
0x4001d6:	shl	rax, 4
0x4001da:	mov	qword ptr [rbp - 0xe0], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0xe0]
0x4001e8:	mov	edx, 0x63
0x4001ed:	mov	esi, 0x41
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500000
<Block for 0x40018a, 5 bytes>
0x40018a:	cmp	rsp, rdx
0x40018d:	je	0x4001a1
<Block for 0x4001fa, 53 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0xe0]
0x400201:	add	rax, 0x63
0x400205:	mov	byte ptr [rax], 0
0x400208:	mov	rax, qword ptr [rbp - 0xe0]
0x40020f:	mov	qword ptr [rbp - 0xd8], rax
0x400216:	lea	rax, [rbp - 0xd0]
0x40021d:	mov	edx, 0xc7
0x400222:	mov	esi, 0x43
0x400227:	mov	rdi, rax
0x40022a:	call	0x500000
<Block for 0x40022f, 29 bytes>
0x40022f:	mov	byte ptr [rbp - 9], 0
0x400233:	mov	rdx, qword ptr [rbp - 0xd8]
0x40023a:	lea	rax, [rbp - 0xd0]
0x400241:	mov	rsi, rdx
0x400244:	mov	rdi, rax
0x400247:	call	0x500008
<Block for 0x40024c, 15 bytes>
0x40024c:	lea	rax, [rbp - 0xd0]
0x400253:	mov	rdi, rax
0x400256:	call	0x500010
<Block for 0x40025b, 16 bytes>
0x40025b:	nop	
0x40025c:	mov	rax, qword ptr [rbp - 8]
0x400260:	xor	rax, qword ptr fs:[0x28]
0x400269:	je	0x400270
<Block for 0x400270, 2 bytes>
0x400270:	leave	
0x400271:	ret	
<Block for 0x40026b, 5 bytes>
0x40026b:	call	0x500018
