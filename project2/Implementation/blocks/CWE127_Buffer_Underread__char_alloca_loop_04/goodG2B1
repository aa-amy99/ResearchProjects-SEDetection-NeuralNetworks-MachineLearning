<Block for 0x400151, 84 bytes>
0x400151:	endbr64	
0x400155:	push	rbp
0x400156:	mov	rbp, rsp
0x400159:	sub	rsp, 0x90
0x400160:	mov	rax, qword ptr fs:[0x28]
0x400169:	mov	qword ptr [rbp - 8], rax
0x40016d:	xor	eax, eax
0x40016f:	mov	eax, 0x10
0x400174:	sub	rax, 1
0x400178:	add	rax, 0x6c
0x40017c:	mov	esi, 0x10
0x400181:	mov	edx, 0
0x400186:	div	rsi
0x400189:	imul	rax, rax, 0x10
0x40018d:	mov	rdx, rax
0x400190:	and	rdx, 0xfffffffffffff000
0x400197:	mov	rcx, rsp
0x40019a:	sub	rcx, rdx
0x40019d:	mov	rdx, rcx
0x4001a0:	cmp	rsp, rdx
0x4001a3:	je	0x4001b7
<Block for 0x4001b7, 26 bytes>
0x4001b7:	mov	rdx, rax
0x4001ba:	and	edx, 0xfff
0x4001c0:	sub	rsp, rdx
0x4001c3:	mov	rdx, rax
0x4001c6:	and	edx, 0xfff
0x4001cc:	test	rdx, rdx
0x4001cf:	je	0x4001e1
<Block for 0x4001a5, 18 bytes>
0x4001a5:	sub	rsp, 0x1000
0x4001ac:	or	qword ptr [rsp + 0xff8], 0
0x4001b5:	jmp	0x4001a0
<Block for 0x4001e1, 41 bytes>
0x4001e1:	mov	rax, rsp
0x4001e4:	add	rax, 0xf
0x4001e8:	shr	rax, 4
0x4001ec:	shl	rax, 4
0x4001f0:	mov	qword ptr [rbp - 0x78], rax
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	mov	edx, 0x63
0x4001fd:	mov	esi, 0x41
0x400202:	mov	rdi, rax
0x400205:	call	0x500000
<Block for 0x4001d1, 57 bytes>
0x4001d1:	and	eax, 0xfff
0x4001d6:	sub	rax, 8
0x4001da:	add	rax, rsp
0x4001dd:	or	qword ptr [rax], 0
0x4001e1:	mov	rax, rsp
0x4001e4:	add	rax, 0xf
0x4001e8:	shr	rax, 4
0x4001ec:	shl	rax, 4
0x4001f0:	mov	qword ptr [rbp - 0x78], rax
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	mov	edx, 0x63
0x4001fd:	mov	esi, 0x41
0x400202:	mov	rdi, rax
0x400205:	call	0x500000
<Block for 0x4001a0, 5 bytes>
0x4001a0:	cmp	rsp, rdx
0x4001a3:	je	0x4001b7
<Block for 0x40020a, 20 bytes>
0x40020a:	mov	rax, qword ptr [rbp - 0x78]
0x40020e:	add	rax, 0x63
0x400212:	mov	byte ptr [rax], 0
0x400215:	mov	eax, 0
0x40021a:	test	eax, eax
0x40021c:	je	0x40022c
<Block for 0x40022c, 33 bytes>
0x40022c:	mov	rax, qword ptr [rbp - 0x78]
0x400230:	mov	qword ptr [rbp - 0x88], rax
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x43
0x400245:	mov	rdi, rax
0x400248:	call	0x500000
<Block for 0x40021e, 12 bytes>
0x40021e:	lea	rdi, [rip + 0x1fb]
0x400225:	call	0x500008
<Block for 0x40024d, 14 bytes>
0x40024d:	mov	byte ptr [rbp - 0xd], 0
0x400251:	mov	qword ptr [rbp - 0x80], 0
0x400259:	jmp	0x40027e
<Block for 0x40022a, 2 bytes>
0x40022a:	jmp	0x400237
<Block for 0x40027e, 7 bytes>
0x40027e:	cmp	qword ptr [rbp - 0x80], 0x63
0x400283:	jbe	0x40025b
<Block for 0x400237, 22 bytes>
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x43
0x400245:	mov	rdi, rax
0x400248:	call	0x500000
<Block for 0x40025b, 42 bytes>
0x40025b:	mov	rdx, qword ptr [rbp - 0x88]
0x400262:	mov	rax, qword ptr [rbp - 0x80]
0x400266:	add	rax, rdx
0x400269:	movzx	eax, byte ptr [rax]
0x40026c:	lea	rcx, [rbp - 0x70]
0x400270:	mov	rdx, qword ptr [rbp - 0x80]
0x400274:	add	rdx, rcx
0x400277:	mov	byte ptr [rdx], al
0x400279:	add	qword ptr [rbp - 0x80], 1
0x40027e:	cmp	qword ptr [rbp - 0x80], 0x63
0x400283:	jbe	0x40025b
<Block for 0x400285, 16 bytes>
0x400285:	mov	byte ptr [rbp - 0xd], 0
0x400289:	lea	rax, [rbp - 0x70]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500008
<Block for 0x400295, 16 bytes>
0x400295:	nop	
0x400296:	mov	rax, qword ptr [rbp - 8]
0x40029a:	xor	rax, qword ptr fs:[0x28]
0x4002a3:	je	0x4002aa
<Block for 0x4002aa, 2 bytes>
0x4002aa:	leave	
0x4002ab:	ret	
<Block for 0x4002a5, 5 bytes>
0x4002a5:	call	0x500010
