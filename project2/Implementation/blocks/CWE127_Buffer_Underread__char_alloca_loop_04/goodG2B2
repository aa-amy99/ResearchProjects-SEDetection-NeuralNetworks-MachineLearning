<Block for 0x4002ac, 84 bytes>
0x4002ac:	endbr64	
0x4002b0:	push	rbp
0x4002b1:	mov	rbp, rsp
0x4002b4:	sub	rsp, 0x90
0x4002bb:	mov	rax, qword ptr fs:[0x28]
0x4002c4:	mov	qword ptr [rbp - 8], rax
0x4002c8:	xor	eax, eax
0x4002ca:	mov	eax, 0x10
0x4002cf:	sub	rax, 1
0x4002d3:	add	rax, 0x6c
0x4002d7:	mov	esi, 0x10
0x4002dc:	mov	edx, 0
0x4002e1:	div	rsi
0x4002e4:	imul	rax, rax, 0x10
0x4002e8:	mov	rdx, rax
0x4002eb:	and	rdx, 0xfffffffffffff000
0x4002f2:	mov	rcx, rsp
0x4002f5:	sub	rcx, rdx
0x4002f8:	mov	rdx, rcx
0x4002fb:	cmp	rsp, rdx
0x4002fe:	je	0x400312
<Block for 0x400312, 26 bytes>
0x400312:	mov	rdx, rax
0x400315:	and	edx, 0xfff
0x40031b:	sub	rsp, rdx
0x40031e:	mov	rdx, rax
0x400321:	and	edx, 0xfff
0x400327:	test	rdx, rdx
0x40032a:	je	0x40033c
<Block for 0x400300, 18 bytes>
0x400300:	sub	rsp, 0x1000
0x400307:	or	qword ptr [rsp + 0xff8], 0
0x400310:	jmp	0x4002fb
<Block for 0x40033c, 41 bytes>
0x40033c:	mov	rax, rsp
0x40033f:	add	rax, 0xf
0x400343:	shr	rax, 4
0x400347:	shl	rax, 4
0x40034b:	mov	qword ptr [rbp - 0x78], rax
0x40034f:	mov	rax, qword ptr [rbp - 0x78]
0x400353:	mov	edx, 0x63
0x400358:	mov	esi, 0x41
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x40032c, 57 bytes>
0x40032c:	and	eax, 0xfff
0x400331:	sub	rax, 8
0x400335:	add	rax, rsp
0x400338:	or	qword ptr [rax], 0
0x40033c:	mov	rax, rsp
0x40033f:	add	rax, 0xf
0x400343:	shr	rax, 4
0x400347:	shl	rax, 4
0x40034b:	mov	qword ptr [rbp - 0x78], rax
0x40034f:	mov	rax, qword ptr [rbp - 0x78]
0x400353:	mov	edx, 0x63
0x400358:	mov	esi, 0x41
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x4002fb, 5 bytes>
0x4002fb:	cmp	rsp, rdx
0x4002fe:	je	0x400312
<Block for 0x400365, 20 bytes>
0x400365:	mov	rax, qword ptr [rbp - 0x78]
0x400369:	add	rax, 0x63
0x40036d:	mov	byte ptr [rax], 0
0x400370:	mov	eax, 1
0x400375:	test	eax, eax
0x400377:	je	0x400384
<Block for 0x400384, 22 bytes>
0x400384:	lea	rax, [rbp - 0x70]
0x400388:	mov	edx, 0x63
0x40038d:	mov	esi, 0x43
0x400392:	mov	rdi, rax
0x400395:	call	0x500000
<Block for 0x400379, 33 bytes>
0x400379:	mov	rax, qword ptr [rbp - 0x78]
0x40037d:	mov	qword ptr [rbp - 0x88], rax
0x400384:	lea	rax, [rbp - 0x70]
0x400388:	mov	edx, 0x63
0x40038d:	mov	esi, 0x43
0x400392:	mov	rdi, rax
0x400395:	call	0x500000
<Block for 0x40039a, 14 bytes>
0x40039a:	mov	byte ptr [rbp - 0xd], 0
0x40039e:	mov	qword ptr [rbp - 0x80], 0
0x4003a6:	jmp	0x4003cb
<Block for 0x4003cb, 7 bytes>
0x4003cb:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d0:	jbe	0x4003a8
<Block for 0x4003a8, 42 bytes>
0x4003a8:	mov	rdx, qword ptr [rbp - 0x88]
0x4003af:	mov	rax, qword ptr [rbp - 0x80]
0x4003b3:	add	rax, rdx
0x4003b6:	movzx	eax, byte ptr [rax]
0x4003b9:	lea	rcx, [rbp - 0x70]
0x4003bd:	mov	rdx, qword ptr [rbp - 0x80]
0x4003c1:	add	rdx, rcx
0x4003c4:	mov	byte ptr [rdx], al
0x4003c6:	add	qword ptr [rbp - 0x80], 1
0x4003cb:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d0:	jbe	0x4003a8
<Block for 0x4003d2, 16 bytes>
0x4003d2:	mov	byte ptr [rbp - 0xd], 0
0x4003d6:	lea	rax, [rbp - 0x70]
0x4003da:	mov	rdi, rax
0x4003dd:	call	0x500008
<Block for 0x4003e2, 16 bytes>
0x4003e2:	nop	
0x4003e3:	mov	rax, qword ptr [rbp - 8]
0x4003e7:	xor	rax, qword ptr fs:[0x28]
0x4003f0:	je	0x4003f7
<Block for 0x4003f7, 2 bytes>
0x4003f7:	leave	
0x4003f8:	ret	
<Block for 0x4003f2, 5 bytes>
0x4003f2:	call	0x500010
