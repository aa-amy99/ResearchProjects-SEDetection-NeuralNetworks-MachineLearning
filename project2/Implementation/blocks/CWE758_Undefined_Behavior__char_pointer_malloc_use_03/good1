<Block for 0x400051, 22 bytes>
0x400051:	endbr64	
0x400055:	push	rbp
0x400056:	mov	rbp, rsp
0x400059:	sub	rsp, 0x20
0x40005d:	mov	edi, 8
0x400062:	call	0x500000
<Block for 0x400067, 11 bytes>
0x400067:	mov	qword ptr [rbp - 0x18], rax
0x40006b:	cmp	qword ptr [rbp - 0x18], 0
0x400070:	jne	0x40007c
<Block for 0x400072, 10 bytes>
0x400072:	mov	edi, 0xffffffff
0x400077:	call	0x500008
<Block for 0x40007c, 45 bytes>
0x40007c:	lea	rax, [rip + 0xbb]
0x400083:	mov	qword ptr [rbp - 0x10], rax
0x400087:	mov	rax, qword ptr [rbp - 0x18]
0x40008b:	mov	rdx, qword ptr [rbp - 0x10]
0x40008f:	mov	qword ptr [rax], rdx
0x400092:	mov	rax, qword ptr [rbp - 0x18]
0x400096:	mov	rax, qword ptr [rax]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500018
<Block for 0x4000a9, 12 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 0x18]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500010
<Block for 0x4000b5, 3 bytes>
0x4000b5:	nop	
0x4000b6:	leave	
0x4000b7:	ret	
