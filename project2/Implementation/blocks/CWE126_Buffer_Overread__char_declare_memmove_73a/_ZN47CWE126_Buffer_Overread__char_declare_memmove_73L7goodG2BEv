<Block for 0x400161, 46 bytes>
0x400161:	endbr64	
0x400165:	push	rbp
0x400166:	mov	rbp, rsp
0x400169:	push	rbx
0x40016a:	sub	rsp, 0x108
0x400171:	mov	rax, qword ptr fs:[0x28]
0x40017a:	mov	qword ptr [rbp - 0x18], rax
0x40017e:	xor	eax, eax
0x400180:	lea	rax, [rbp - 0x100]
0x400187:	mov	rdi, rax
0x40018a:	call	0x40037c
<Block for 0x40018f, 25 bytes>
0x40018f:	lea	rax, [rbp - 0xc0]
0x400196:	mov	edx, 0x31
0x40019b:	mov	esi, 0x41
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x500000
<Block for 0x4001a8, 29 bytes>
0x4001a8:	mov	byte ptr [rbp - 0x8f], 0
0x4001af:	lea	rax, [rbp - 0x80]
0x4001b3:	mov	edx, 0x63
0x4001b8:	mov	esi, 0x41
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500000
<Block for 0x4001c5, 40 bytes>
0x4001c5:	mov	byte ptr [rbp - 0x1d], 0
0x4001c9:	lea	rax, [rbp - 0x80]
0x4001cd:	mov	qword ptr [rbp - 0x108], rax
0x4001d4:	lea	rdx, [rbp - 0x108]
0x4001db:	lea	rax, [rbp - 0x100]
0x4001e2:	mov	rsi, rdx
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x400474
<Block for 0x4001ed, 25 bytes>
0x4001ed:	lea	rdx, [rbp - 0x108]
0x4001f4:	lea	rax, [rbp - 0x100]
0x4001fb:	mov	rsi, rdx
0x4001fe:	mov	rdi, rax
0x400201:	call	0x400474
<Block for 0x400206, 25 bytes>
0x400206:	lea	rdx, [rbp - 0x108]
0x40020d:	lea	rax, [rbp - 0x100]
0x400214:	mov	rsi, rdx
0x400217:	mov	rdi, rax
0x40021a:	call	0x400474
<Block for 0x40021f, 25 bytes>
0x40021f:	lea	rdx, [rbp - 0x100]
0x400226:	lea	rax, [rbp - 0xe0]
0x40022d:	mov	rsi, rdx
0x400230:	mov	rdi, rax
0x400233:	call	0x4004ae
<Block for 0x400238, 15 bytes>
0x400238:	lea	rax, [rbp - 0xe0]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500020
<Block for 0x400247, 15 bytes>
0x400247:	lea	rax, [rbp - 0xe0]
0x40024e:	mov	rdi, rax
0x400251:	call	0x40039c
<Block for 0x400256, 15 bytes>
0x400256:	lea	rax, [rbp - 0x100]
0x40025d:	mov	rdi, rax
0x400260:	call	0x40039c
<Block for 0x400265, 16 bytes>
0x400265:	nop	
0x400266:	mov	rax, qword ptr [rbp - 0x18]
0x40026a:	xor	rax, qword ptr fs:[0x28]
0x400273:	je	0x4002b5
<Block for 0x4002b5, 10 bytes>
0x4002b5:	add	rsp, 0x108
0x4002bc:	pop	rbx
0x4002bd:	pop	rbp
0x4002be:	ret	
<Block for 0x400275, 2 bytes>
0x400275:	jmp	0x4002b0
<Block for 0x4002b0, 5 bytes>
0x4002b0:	call	0x500018
