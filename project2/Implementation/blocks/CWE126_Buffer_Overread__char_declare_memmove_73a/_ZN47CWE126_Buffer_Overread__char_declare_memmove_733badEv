<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x108
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x100]
0x400026:	mov	rdi, rax
0x400029:	call	0x40037c
<Block for 0x40002e, 25 bytes>
0x40002e:	lea	rax, [rbp - 0xc0]
0x400035:	mov	edx, 0x31
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500000
<Block for 0x400047, 29 bytes>
0x400047:	mov	byte ptr [rbp - 0x8f], 0
0x40004e:	lea	rax, [rbp - 0x80]
0x400052:	mov	edx, 0x63
0x400057:	mov	esi, 0x41
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500000
<Block for 0x400064, 43 bytes>
0x400064:	mov	byte ptr [rbp - 0x1d], 0
0x400068:	lea	rax, [rbp - 0xc0]
0x40006f:	mov	qword ptr [rbp - 0x108], rax
0x400076:	lea	rdx, [rbp - 0x108]
0x40007d:	lea	rax, [rbp - 0x100]
0x400084:	mov	rsi, rdx
0x400087:	mov	rdi, rax
0x40008a:	call	0x400474
<Block for 0x40008f, 25 bytes>
0x40008f:	lea	rdx, [rbp - 0x108]
0x400096:	lea	rax, [rbp - 0x100]
0x40009d:	mov	rsi, rdx
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x400474
<Block for 0x4000a8, 25 bytes>
0x4000a8:	lea	rdx, [rbp - 0x108]
0x4000af:	lea	rax, [rbp - 0x100]
0x4000b6:	mov	rsi, rdx
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x400474
<Block for 0x4000c1, 25 bytes>
0x4000c1:	lea	rdx, [rbp - 0x100]
0x4000c8:	lea	rax, [rbp - 0xe0]
0x4000cf:	mov	rsi, rdx
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x4004ae
<Block for 0x4000da, 15 bytes>
0x4000da:	lea	rax, [rbp - 0xe0]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500008
<Block for 0x4000e9, 15 bytes>
0x4000e9:	lea	rax, [rbp - 0xe0]
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x40039c
<Block for 0x4000f8, 15 bytes>
0x4000f8:	lea	rax, [rbp - 0x100]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x40039c
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 0x18]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x400157
<Block for 0x400157, 10 bytes>
0x400157:	add	rsp, 0x108
0x40015e:	pop	rbx
0x40015f:	pop	rbp
0x400160:	ret	
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x400152
<Block for 0x400152, 5 bytes>
0x400152:	call	0x500018
