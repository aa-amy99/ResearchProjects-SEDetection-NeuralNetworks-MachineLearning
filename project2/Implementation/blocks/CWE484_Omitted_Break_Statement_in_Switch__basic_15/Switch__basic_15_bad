<Block for 0x400000, 17 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	call	0x500000
<Block for 0x400011, 55 bytes>
0x400011:	mov	edx, eax
0x400013:	movsxd	rax, edx
0x400016:	imul	rax, rax, 0x55555556
0x40001d:	shr	rax, 0x20
0x400021:	mov	rcx, rax
0x400024:	mov	eax, edx
0x400026:	sar	eax, 0x1f
0x400029:	mov	esi, ecx
0x40002b:	sub	esi, eax
0x40002d:	mov	eax, esi
0x40002f:	mov	dword ptr [rbp - 4], eax
0x400032:	mov	ecx, dword ptr [rbp - 4]
0x400035:	mov	eax, ecx
0x400037:	add	eax, eax
0x400039:	add	eax, ecx
0x40003b:	sub	edx, eax
0x40003d:	mov	eax, edx
0x40003f:	mov	dword ptr [rbp - 4], eax
0x400042:	cmp	dword ptr [rbp - 4], 2
0x400046:	je	0x400076
<Block for 0x400076, 12 bytes>
0x400076:	lea	rdi, [rip + 0x169]
0x40007d:	call	0x500008
<Block for 0x400048, 6 bytes>
0x400048:	cmp	dword ptr [rbp - 4], 2
0x40004c:	jg	0x400084
<Block for 0x400082, 2 bytes>
0x400082:	jmp	0x400091
<Block for 0x40004e, 6 bytes>
0x40004e:	cmp	dword ptr [rbp - 4], 0
0x400052:	je	0x40005c
<Block for 0x400084, 12 bytes>
0x400084:	lea	rdi, [rip + 0x15d]
0x40008b:	call	0x500008
<Block for 0x400091, 4 bytes>
0x400091:	nop	
0x400092:	nop	
0x400093:	leave	
0x400094:	ret	
<Block for 0x40005c, 12 bytes>
0x40005c:	lea	rdi, [rip + 0x17f]
0x400063:	call	0x500008
<Block for 0x400054, 6 bytes>
0x400054:	cmp	dword ptr [rbp - 4], 1
0x400058:	je	0x400068
<Block for 0x400090, 1 bytes>
0x400090:	nop	
<Block for 0x400068, 12 bytes>
0x400068:	lea	rdi, [rip + 0x175]
0x40006f:	call	0x500008
<Block for 0x40005a, 2 bytes>
0x40005a:	jmp	0x400084
<Block for 0x400074, 2 bytes>
0x400074:	jmp	0x400091
