<Block for 0x40008c, 84 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0x20
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	lea	rax, [rbp - 0x1a]
0x4000ab:	mov	qword ptr [rbp - 0x18], rax
0x4000af:	mov	byte ptr [rbp - 0x1a], 0x20
0x4000b3:	mov	byte ptr [rbp - 0x1a], 0x61
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	movzx	eax, byte ptr [rax]
0x4000be:	mov	byte ptr [rbp - 0x19], al
0x4000c1:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c5:	movzx	eax, byte ptr [rbp - 0x19]
0x4000c9:	mov	byte ptr [rbp - 0xb], al
0x4000cc:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d0:	mov	byte ptr [rbp - 9], 0
0x4000d4:	lea	rax, [rbp - 0xc]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500018
<Block for 0x4000e0, 16 bytes>
0x4000e0:	nop	
0x4000e1:	mov	rax, qword ptr [rbp - 8]
0x4000e5:	xor	rax, qword ptr fs:[0x28]
0x4000ee:	je	0x4000f5
<Block for 0x4000f5, 2 bytes>
0x4000f5:	leave	
0x4000f6:	ret	
<Block for 0x4000f0, 5 bytes>
0x4000f0:	call	0x500020
