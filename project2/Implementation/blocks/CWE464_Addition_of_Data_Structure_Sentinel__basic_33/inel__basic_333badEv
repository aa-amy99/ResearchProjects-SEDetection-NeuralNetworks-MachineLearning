<Block for 0x400000, 54 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x1a]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	byte ptr [rbp - 0x1a], 0x20
0x400027:	mov	rax, qword ptr [rip + 0xfffd2]
0x40002e:	mov	rdi, rax
0x400031:	call	0x500008
<Block for 0x400036, 19 bytes>
0x400036:	mov	byte ptr [rbp - 0xc], al
0x400039:	mov	byte ptr [rbp - 0xb], 0
0x40003d:	lea	rax, [rbp - 0xc]
0x400041:	mov	rdi, rax
0x400044:	call	0x500010
<Block for 0x400049, 44 bytes>
0x400049:	mov	byte ptr [rbp - 0x1a], al
0x40004c:	mov	rax, qword ptr [rbp - 0x18]
0x400050:	movzx	eax, byte ptr [rax]
0x400053:	mov	byte ptr [rbp - 0x19], al
0x400056:	mov	byte ptr [rbp - 0xc], 0x78
0x40005a:	movzx	eax, byte ptr [rbp - 0x19]
0x40005e:	mov	byte ptr [rbp - 0xb], al
0x400061:	mov	byte ptr [rbp - 0xa], 0x7a
0x400065:	mov	byte ptr [rbp - 9], 0
0x400069:	lea	rax, [rbp - 0xc]
0x40006d:	mov	rdi, rax
0x400070:	call	0x500018
<Block for 0x400075, 16 bytes>
0x400075:	nop	
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	xor	rax, qword ptr fs:[0x28]
0x400083:	je	0x40008a
<Block for 0x40008a, 2 bytes>
0x40008a:	leave	
0x40008b:	ret	
<Block for 0x400085, 5 bytes>
0x400085:	call	0x500020
