<Block for 0x400182, 112 bytes>
0x400182:	endbr64	
0x400186:	push	rbp
0x400187:	mov	rbp, rsp
0x40018a:	sub	rsp, 0xa0
0x400191:	mov	rax, qword ptr fs:[0x28]
0x40019a:	mov	qword ptr [rbp - 8], rax
0x40019e:	xor	eax, eax
0x4001a0:	lea	rax, [rbp - 0xa0]
0x4001a7:	mov	qword ptr [rbp - 0x98], rax
0x4001ae:	lea	rax, [rbp - 0xa0]
0x4001b5:	mov	qword ptr [rbp - 0x90], rax
0x4001bc:	mov	eax, 0x10
0x4001c1:	sub	rax, 1
0x4001c5:	add	rax, 0x6c
0x4001c9:	mov	esi, 0x10
0x4001ce:	mov	edx, 0
0x4001d3:	div	rsi
0x4001d6:	imul	rax, rax, 0x10
0x4001da:	mov	rdx, rax
0x4001dd:	and	rdx, 0xfffffffffffff000
0x4001e4:	mov	rcx, rsp
0x4001e7:	sub	rcx, rdx
0x4001ea:	mov	rdx, rcx
0x4001ed:	cmp	rsp, rdx
0x4001f0:	je	0x400204
<Block for 0x400204, 26 bytes>
0x400204:	mov	rdx, rax
0x400207:	and	edx, 0xfff
0x40020d:	sub	rsp, rdx
0x400210:	mov	rdx, rax
0x400213:	and	edx, 0xfff
0x400219:	test	rdx, rdx
0x40021c:	je	0x40022e
<Block for 0x4001f2, 18 bytes>
0x4001f2:	sub	rsp, 0x1000
0x4001f9:	or	qword ptr [rsp + 0xff8], 0
0x400202:	jmp	0x4001ed
<Block for 0x40022e, 47 bytes>
0x40022e:	mov	rax, rsp
0x400231:	add	rax, 0xf
0x400235:	shr	rax, 4
0x400239:	shl	rax, 4
0x40023d:	mov	qword ptr [rbp - 0x88], rax
0x400244:	mov	rax, qword ptr [rbp - 0x88]
0x40024b:	mov	edx, 0x63
0x400250:	mov	esi, 0x41
0x400255:	mov	rdi, rax
0x400258:	call	0x500000
<Block for 0x40021e, 63 bytes>
0x40021e:	and	eax, 0xfff
0x400223:	sub	rax, 8
0x400227:	add	rax, rsp
0x40022a:	or	qword ptr [rax], 0
0x40022e:	mov	rax, rsp
0x400231:	add	rax, 0xf
0x400235:	shr	rax, 4
0x400239:	shl	rax, 4
0x40023d:	mov	qword ptr [rbp - 0x88], rax
0x400244:	mov	rax, qword ptr [rbp - 0x88]
0x40024b:	mov	edx, 0x63
0x400250:	mov	esi, 0x41
0x400255:	mov	rdi, rax
0x400258:	call	0x500000
<Block for 0x4001ed, 5 bytes>
0x4001ed:	cmp	rsp, rdx
0x4001f0:	je	0x400204
<Block for 0x40025d, 89 bytes>
0x40025d:	mov	rax, qword ptr [rbp - 0x88]
0x400264:	add	rax, 0x63
0x400268:	mov	byte ptr [rax], 0
0x40026b:	mov	rax, qword ptr [rbp - 0x98]
0x400272:	mov	rax, qword ptr [rax]
0x400275:	mov	qword ptr [rbp - 0x80], rax
0x400279:	mov	rax, qword ptr [rbp - 0x88]
0x400280:	mov	qword ptr [rbp - 0x80], rax
0x400284:	mov	rax, qword ptr [rbp - 0x98]
0x40028b:	mov	rdx, qword ptr [rbp - 0x80]
0x40028f:	mov	qword ptr [rax], rdx
0x400292:	mov	rax, qword ptr [rbp - 0x90]
0x400299:	mov	rax, qword ptr [rax]
0x40029c:	mov	qword ptr [rbp - 0x78], rax
0x4002a0:	lea	rax, [rbp - 0x70]
0x4002a4:	mov	edx, 0x63
0x4002a9:	mov	esi, 0x43
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x500000
<Block for 0x4002b6, 28 bytes>
0x4002b6:	mov	byte ptr [rbp - 0xd], 0
0x4002ba:	lea	rcx, [rbp - 0x70]
0x4002be:	mov	rax, qword ptr [rbp - 0x78]
0x4002c2:	mov	edx, 0x63
0x4002c7:	mov	rsi, rcx
0x4002ca:	mov	rdi, rax
0x4002cd:	call	0x500008
<Block for 0x4002d2, 23 bytes>
0x4002d2:	mov	rax, qword ptr [rbp - 0x78]
0x4002d6:	add	rax, 0x63
0x4002da:	mov	byte ptr [rax], 0
0x4002dd:	mov	rax, qword ptr [rbp - 0x78]
0x4002e1:	mov	rdi, rax
0x4002e4:	call	0x500010
<Block for 0x4002e9, 16 bytes>
0x4002e9:	nop	
0x4002ea:	mov	rax, qword ptr [rbp - 8]
0x4002ee:	xor	rax, qword ptr fs:[0x28]
0x4002f7:	je	0x4002fe
<Block for 0x4002fe, 2 bytes>
0x4002fe:	leave	
0x4002ff:	ret	
<Block for 0x4002f9, 5 bytes>
0x4002f9:	call	0x500018
