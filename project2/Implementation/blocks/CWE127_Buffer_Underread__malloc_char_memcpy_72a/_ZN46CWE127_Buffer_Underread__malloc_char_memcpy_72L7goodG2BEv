<Block for 0x4001c1, 40 bytes>
0x4001c1:	endbr64	
0x4001c5:	push	rbp
0x4001c6:	mov	rbp, rsp
0x4001c9:	push	rbx
0x4001ca:	sub	rsp, 0x68
0x4001ce:	mov	rax, qword ptr fs:[0x28]
0x4001d7:	mov	qword ptr [rbp - 0x18], rax
0x4001db:	xor	eax, eax
0x4001dd:	lea	rax, [rbp - 0x50]
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x4003fc
<Block for 0x4001e9, 18 bytes>
0x4001e9:	mov	qword ptr [rbp - 0x68], 0
0x4001f1:	mov	edi, 0x64
0x4001f6:	call	0x500000
<Block for 0x4001fb, 11 bytes>
0x4001fb:	mov	qword ptr [rbp - 0x58], rax
0x4001ff:	cmp	qword ptr [rbp - 0x58], 0
0x400204:	jne	0x400210
<Block for 0x400206, 10 bytes>
0x400206:	mov	edi, 0xffffffff
0x40020b:	call	0x500008
<Block for 0x400210, 22 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0x58]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x41
0x40021e:	mov	rdi, rax
0x400221:	call	0x500010
<Block for 0x400226, 31 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0x58]
0x40022a:	add	rax, 0x63
0x40022e:	mov	byte ptr [rax], 0
0x400231:	mov	rax, qword ptr [rbp - 0x58]
0x400235:	mov	qword ptr [rbp - 0x68], rax
0x400239:	lea	rax, [rbp - 0x50]
0x40023d:	mov	rdi, rax
0x400240:	call	0x40058e
<Block for 0x400245, 23 bytes>
0x400245:	mov	qword ptr [rbp - 0x60], rax
0x400249:	lea	rdx, [rbp - 0x60]
0x40024d:	lea	rax, [rbp - 0x30]
0x400251:	mov	rsi, rdx
0x400254:	mov	rdi, rax
0x400257:	call	0x4005de
<Block for 0x40025c, 28 bytes>
0x40025c:	lea	rdx, [rbp - 0x68]
0x400260:	mov	rsi, qword ptr [rbp - 0x30]
0x400264:	lea	rax, [rbp - 0x50]
0x400268:	mov	rcx, rdx
0x40026b:	mov	edx, 1
0x400270:	mov	rdi, rax
0x400273:	call	0x40060c
<Block for 0x400278, 12 bytes>
0x400278:	lea	rax, [rbp - 0x50]
0x40027c:	mov	rdi, rax
0x40027f:	call	0x40058e
<Block for 0x400284, 23 bytes>
0x400284:	mov	qword ptr [rbp - 0x60], rax
0x400288:	lea	rdx, [rbp - 0x60]
0x40028c:	lea	rax, [rbp - 0x30]
0x400290:	mov	rsi, rdx
0x400293:	mov	rdi, rax
0x400296:	call	0x4005de
<Block for 0x40029b, 28 bytes>
0x40029b:	lea	rdx, [rbp - 0x68]
0x40029f:	mov	rsi, qword ptr [rbp - 0x30]
0x4002a3:	lea	rax, [rbp - 0x50]
0x4002a7:	mov	rcx, rdx
0x4002aa:	mov	edx, 1
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x40060c
<Block for 0x4002b7, 12 bytes>
0x4002b7:	lea	rax, [rbp - 0x50]
0x4002bb:	mov	rdi, rax
0x4002be:	call	0x40058e
<Block for 0x4002c3, 23 bytes>
0x4002c3:	mov	qword ptr [rbp - 0x60], rax
0x4002c7:	lea	rdx, [rbp - 0x60]
0x4002cb:	lea	rax, [rbp - 0x30]
0x4002cf:	mov	rsi, rdx
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x4005de
<Block for 0x4002da, 28 bytes>
0x4002da:	lea	rdx, [rbp - 0x68]
0x4002de:	mov	rsi, qword ptr [rbp - 0x30]
0x4002e2:	lea	rax, [rbp - 0x50]
0x4002e6:	mov	rcx, rdx
0x4002e9:	mov	edx, 1
0x4002ee:	mov	rdi, rax
0x4002f1:	call	0x40060c
<Block for 0x4002f6, 19 bytes>
0x4002f6:	lea	rdx, [rbp - 0x50]
0x4002fa:	lea	rax, [rbp - 0x30]
0x4002fe:	mov	rsi, rdx
0x400301:	mov	rdi, rax
0x400304:	call	0x4006d2
<Block for 0x400309, 12 bytes>
0x400309:	lea	rax, [rbp - 0x30]
0x40030d:	mov	rdi, rax
0x400310:	call	0x500030
<Block for 0x400315, 12 bytes>
0x400315:	lea	rax, [rbp - 0x30]
0x400319:	mov	rdi, rax
0x40031c:	call	0x400546
<Block for 0x400321, 12 bytes>
0x400321:	lea	rax, [rbp - 0x50]
0x400325:	mov	rdi, rax
0x400328:	call	0x400546
<Block for 0x40032d, 16 bytes>
0x40032d:	nop	
0x40032e:	mov	rax, qword ptr [rbp - 0x18]
0x400332:	xor	rax, qword ptr fs:[0x28]
0x40033b:	je	0x400377
<Block for 0x400377, 7 bytes>
0x400377:	add	rsp, 0x68
0x40037b:	pop	rbx
0x40037c:	pop	rbp
0x40037d:	ret	
<Block for 0x40033d, 2 bytes>
0x40033d:	jmp	0x400372
<Block for 0x400372, 5 bytes>
0x400372:	call	0x500028
