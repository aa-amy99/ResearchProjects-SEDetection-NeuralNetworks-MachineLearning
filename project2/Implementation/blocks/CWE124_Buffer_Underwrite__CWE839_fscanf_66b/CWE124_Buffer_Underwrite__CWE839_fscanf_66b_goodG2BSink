<Block for 0x4000ac, 87 bytes>
0x4000ac:	endbr64	
0x4000b0:	push	rbp
0x4000b1:	mov	rbp, rsp
0x4000b4:	sub	rsp, 0x50
0x4000b8:	mov	qword ptr [rbp - 0x48], rdi
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	mov	rax, qword ptr [rbp - 0x48]
0x4000cf:	mov	eax, dword ptr [rax + 8]
0x4000d2:	mov	dword ptr [rbp - 0x34], eax
0x4000d5:	mov	qword ptr [rbp - 0x30], 0
0x4000dd:	mov	qword ptr [rbp - 0x28], 0
0x4000e5:	mov	qword ptr [rbp - 0x20], 0
0x4000ed:	mov	qword ptr [rbp - 0x18], 0
0x4000f5:	mov	qword ptr [rbp - 0x10], 0
0x4000fd:	cmp	dword ptr [rbp - 0x34], 9
0x400101:	jg	0x400135
<Block for 0x400103, 22 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x34]
0x400106:	cdqe	
0x400108:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400110:	mov	dword ptr [rbp - 0x38], 0
0x400117:	jmp	0x40012d
<Block for 0x400135, 12 bytes>
0x400135:	lea	rdi, [rip + 0xd4]
0x40013c:	call	0x500008
<Block for 0x40012d, 6 bytes>
0x40012d:	cmp	dword ptr [rbp - 0x38], 9
0x400131:	jle	0x400119
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400119, 16 bytes>
0x400119:	mov	eax, dword ptr [rbp - 0x38]
0x40011c:	cdqe	
0x40011e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400122:	mov	edi, eax
0x400124:	call	0x500000
<Block for 0x400133, 2 bytes>
0x400133:	jmp	0x400141
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500010
<Block for 0x400129, 10 bytes>
0x400129:	add	dword ptr [rbp - 0x38], 1
0x40012d:	cmp	dword ptr [rbp - 0x38], 9
0x400131:	jle	0x400119
