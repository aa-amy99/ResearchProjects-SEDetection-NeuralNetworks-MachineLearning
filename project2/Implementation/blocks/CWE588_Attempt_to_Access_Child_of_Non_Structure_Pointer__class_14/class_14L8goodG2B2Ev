<Block for 0x4000de, 59 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	sub	rsp, 0x20
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	mov	dword ptr [rbp - 0x1c], 0x64
0x400100:	mov	dword ptr [rbp - 0x10], 0
0x400107:	mov	dword ptr [rbp - 0xc], 0
0x40010e:	mov	eax, dword ptr [rip + 0xffeec]
0x400114:	cmp	eax, 5
0x400117:	jne	0x400121
<Block for 0x400119, 22 bytes>
0x400119:	lea	rax, [rbp - 0x10]
0x40011d:	mov	qword ptr [rbp - 0x18], rax
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	mov	eax, dword ptr [rax + 4]
0x400128:	mov	edi, eax
0x40012a:	call	0x500008
<Block for 0x400121, 14 bytes>
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	mov	eax, dword ptr [rax + 4]
0x400128:	mov	edi, eax
0x40012a:	call	0x500008
<Block for 0x40012f, 16 bytes>
0x40012f:	nop	
0x400130:	mov	rax, qword ptr [rbp - 8]
0x400134:	xor	rax, qword ptr fs:[0x28]
0x40013d:	je	0x400144
<Block for 0x400144, 2 bytes>
0x400144:	leave	
0x400145:	ret	
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500010
