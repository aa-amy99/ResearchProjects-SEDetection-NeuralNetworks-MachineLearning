<Block for 0x4002a3, 22 bytes>
0x4002a3:	endbr64	
0x4002a7:	push	rbp
0x4002a8:	mov	rbp, rsp
0x4002ab:	push	r13
0x4002ad:	push	r12
0x4002af:	push	rbx
0x4002b0:	sub	rsp, 0x18
0x4002b4:	call	0x500000
<Block for 0x4002b9, 12 bytes>
0x4002b9:	and	eax, 1
0x4002bc:	test	eax, eax
0x4002be:	sete	al
0x4002c1:	test	al, al
0x4002c3:	je	0x4002fa
<Block for 0x4002fa, 5 bytes>
0x4002fa:	call	0x500000
<Block for 0x4002c5, 10 bytes>
0x4002c5:	mov	edi, 0x10
0x4002ca:	call	0x500008
<Block for 0x4002ff, 12 bytes>
0x4002ff:	and	eax, 1
0x400302:	test	eax, eax
0x400304:	sete	al
0x400307:	test	al, al
0x400309:	je	0x400340
<Block for 0x4002cf, 18 bytes>
0x4002cf:	mov	rbx, rax
0x4002d2:	lea	rsi, [rip + 0x15b]
0x4002d9:	mov	rdi, rbx
0x4002dc:	call	0x500010
<Block for 0x400340, 12 bytes>
0x400340:	lea	rdi, [rip + 0xf7]
0x400347:	call	0x500058
<Block for 0x40030b, 10 bytes>
0x40030b:	mov	edi, 0x10
0x400310:	call	0x500008
<Block for 0x4002e1, 25 bytes>
0x4002e1:	mov	rax, qword ptr [rip + 0xffd38]
0x4002e8:	mov	rdx, rax
0x4002eb:	lea	rsi, [rip + 0xffd36]
0x4002f2:	mov	rdi, rbx
0x4002f5:	call	0x500030
<Block for 0x40034c, 5 bytes>
0x40034c:	jmp	0x40040a
<Block for 0x400315, 18 bytes>
0x400315:	mov	rbx, rax
0x400318:	lea	rsi, [rip + 0x11a]
0x40031f:	mov	rdi, rbx
0x400322:	call	0x500038
<Block for 0x40040a, 11 bytes>
0x40040a:	add	rsp, 0x18
0x40040e:	pop	rbx
0x40040f:	pop	r12
0x400411:	pop	r13
0x400413:	pop	rbp
0x400414:	ret	
<Block for 0x400327, 25 bytes>
0x400327:	mov	rax, qword ptr [rip + 0xffd1a]
0x40032e:	mov	rdx, rax
0x400331:	lea	rsi, [rip + 0xffd18]
0x400338:	mov	rdi, rbx
0x40033b:	call	0x500030
