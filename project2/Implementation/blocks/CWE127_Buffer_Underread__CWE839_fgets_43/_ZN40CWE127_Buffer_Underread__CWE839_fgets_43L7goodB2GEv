<Block for 0x400266, 46 bytes>
0x400266:	endbr64	
0x40026a:	push	rbp
0x40026b:	mov	rbp, rsp
0x40026e:	sub	rsp, 0x40
0x400272:	mov	rax, qword ptr fs:[0x28]
0x40027b:	mov	qword ptr [rbp - 8], rax
0x40027f:	xor	eax, eax
0x400281:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400288:	lea	rax, [rbp - 0x34]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x4001d9
<Block for 0x400294, 47 bytes>
0x400294:	mov	qword ptr [rbp - 0x30], 0
0x40029c:	mov	qword ptr [rbp - 0x28], 0
0x4002a4:	mov	qword ptr [rbp - 0x20], 0
0x4002ac:	mov	qword ptr [rbp - 0x18], 0
0x4002b4:	mov	qword ptr [rbp - 0x10], 0
0x4002bc:	mov	eax, dword ptr [rbp - 0x34]
0x4002bf:	test	eax, eax
0x4002c1:	js	0x4002dd
<Block for 0x4002dd, 12 bytes>
0x4002dd:	lea	rdi, [rip + 0x64]
0x4002e4:	call	0x500018
<Block for 0x4002c3, 8 bytes>
0x4002c3:	mov	eax, dword ptr [rbp - 0x34]
0x4002c6:	cmp	eax, 9
0x4002c9:	jg	0x4002dd
<Block for 0x4002e9, 16 bytes>
0x4002e9:	nop	
0x4002ea:	mov	rax, qword ptr [rbp - 8]
0x4002ee:	xor	rax, qword ptr fs:[0x28]
0x4002f7:	je	0x4002fe
<Block for 0x4002cb, 16 bytes>
0x4002cb:	mov	eax, dword ptr [rbp - 0x34]
0x4002ce:	cdqe	
0x4002d0:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002d4:	mov	edi, eax
0x4002d6:	call	0x500028
<Block for 0x4002fe, 2 bytes>
0x4002fe:	leave	
0x4002ff:	ret	
<Block for 0x4002f9, 5 bytes>
0x4002f9:	call	0x500020
<Block for 0x4002db, 2 bytes>
0x4002db:	jmp	0x4002e9
