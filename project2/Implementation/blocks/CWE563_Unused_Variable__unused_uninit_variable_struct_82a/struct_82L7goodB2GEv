<Block for 0x400081, 38 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	push	rbx
0x40008a:	sub	rsp, 0x28
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 0x18], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	edi, 8
0x4000a2:	call	0x500000
<Block for 0x4000a7, 11 bytes>
0x4000a7:	mov	rbx, rax
0x4000aa:	mov	rdi, rbx
0x4000ad:	call	0x40015e
<Block for 0x4000b2, 30 bytes>
0x4000b2:	mov	qword ptr [rbp - 0x28], rbx
0x4000b6:	mov	rax, qword ptr [rbp - 0x28]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	rcx, qword ptr [rax]
0x4000c0:	mov	rdx, qword ptr [rbp - 0x20]
0x4000c4:	mov	rax, qword ptr [rbp - 0x28]
0x4000c8:	mov	rsi, rdx
0x4000cb:	mov	rdi, rax
0x4000ce:	call	rcx
<Block for 0x4000d0, 9 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x28]
0x4000d4:	test	rax, rax
0x4000d7:	je	0x4000e6
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 0x18]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000d9, 13 bytes>
0x4000d9:	mov	esi, 8
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500008
<Block for 0x4000fb, 7 bytes>
0x4000fb:	add	rsp, 0x28
0x4000ff:	pop	rbx
0x400100:	pop	rbp
0x400101:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500010
