<Block for 0x400149, 81 bytes>
0x400149:	endbr64	
0x40014d:	push	rbp
0x40014e:	mov	rbp, rsp
0x400151:	add	rsp, -0x80
0x400155:	mov	rax, qword ptr fs:[0x28]
0x40015e:	mov	qword ptr [rbp - 8], rax
0x400162:	xor	eax, eax
0x400164:	mov	eax, 0x10
0x400169:	sub	rax, 1
0x40016d:	add	rax, 0x6c
0x400171:	mov	ecx, 0x10
0x400176:	mov	edx, 0
0x40017b:	div	rcx
0x40017e:	imul	rax, rax, 0x10
0x400182:	mov	rdx, rax
0x400185:	and	rdx, 0xfffffffffffff000
0x40018c:	mov	rcx, rsp
0x40018f:	sub	rcx, rdx
0x400192:	mov	rdx, rcx
0x400195:	cmp	rsp, rdx
0x400198:	je	0x4001ac
<Block for 0x4001ac, 26 bytes>
0x4001ac:	mov	rdx, rax
0x4001af:	and	edx, 0xfff
0x4001b5:	sub	rsp, rdx
0x4001b8:	mov	rdx, rax
0x4001bb:	and	edx, 0xfff
0x4001c1:	test	rdx, rdx
0x4001c4:	je	0x4001d6
<Block for 0x40019a, 18 bytes>
0x40019a:	sub	rsp, 0x1000
0x4001a1:	or	qword ptr [rsp + 0xff8], 0
0x4001aa:	jmp	0x400195
<Block for 0x4001d6, 41 bytes>
0x4001d6:	mov	rax, rsp
0x4001d9:	add	rax, 0xf
0x4001dd:	shr	rax, 4
0x4001e1:	shl	rax, 4
0x4001e5:	mov	qword ptr [rbp - 0x78], rax
0x4001e9:	mov	rax, qword ptr [rbp - 0x78]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x4001c6, 57 bytes>
0x4001c6:	and	eax, 0xfff
0x4001cb:	sub	rax, 8
0x4001cf:	add	rax, rsp
0x4001d2:	or	qword ptr [rax], 0
0x4001d6:	mov	rax, rsp
0x4001d9:	add	rax, 0xf
0x4001dd:	shr	rax, 4
0x4001e1:	shl	rax, 4
0x4001e5:	mov	qword ptr [rbp - 0x78], rax
0x4001e9:	mov	rax, qword ptr [rbp - 0x78]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x400195, 5 bytes>
0x400195:	cmp	rsp, rdx
0x400198:	je	0x4001ac
<Block for 0x4001ff, 21 bytes>
0x4001ff:	mov	rax, qword ptr [rbp - 0x78]
0x400203:	add	rax, 0x63
0x400207:	mov	byte ptr [rax], 0
0x40020a:	mov	eax, 0
0x40020f:	call	0x40000f
<Block for 0x400214, 4 bytes>
0x400214:	test	eax, eax
0x400216:	je	0x400226
<Block for 0x400226, 30 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0x78]
0x40022a:	mov	qword ptr [rbp - 0x80], rax
0x40022e:	lea	rax, [rbp - 0x70]
0x400232:	mov	edx, 0x63
0x400237:	mov	esi, 0x43
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500000
<Block for 0x400218, 12 bytes>
0x400218:	lea	rdi, [rip + 0x1a5]
0x40021f:	call	0x500010
<Block for 0x400244, 23 bytes>
0x400244:	mov	byte ptr [rbp - 0xd], 0
0x400248:	lea	rdx, [rbp - 0x70]
0x40024c:	mov	rax, qword ptr [rbp - 0x80]
0x400250:	mov	rsi, rdx
0x400253:	mov	rdi, rax
0x400256:	call	0x500008
<Block for 0x400224, 2 bytes>
0x400224:	jmp	0x40022e
<Block for 0x40025b, 12 bytes>
0x40025b:	mov	rax, qword ptr [rbp - 0x80]
0x40025f:	mov	rdi, rax
0x400262:	call	0x500010
<Block for 0x40022e, 22 bytes>
0x40022e:	lea	rax, [rbp - 0x70]
0x400232:	mov	edx, 0x63
0x400237:	mov	esi, 0x43
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500000
<Block for 0x400267, 16 bytes>
0x400267:	nop	
0x400268:	mov	rax, qword ptr [rbp - 8]
0x40026c:	xor	rax, qword ptr fs:[0x28]
0x400275:	je	0x40027c
<Block for 0x40027c, 2 bytes>
0x40027c:	leave	
0x40027d:	ret	
<Block for 0x400277, 5 bytes>
0x400277:	call	0x500018
