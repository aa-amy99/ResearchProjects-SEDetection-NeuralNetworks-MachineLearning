<Block for 0x400569, 46 bytes>
0x400569:	endbr64	
0x40056d:	push	rbp
0x40056e:	mov	rbp, rsp
0x400571:	push	rbx
0x400572:	sub	rsp, 0xd8
0x400579:	mov	rax, qword ptr fs:[0x28]
0x400582:	mov	qword ptr [rbp - 0x18], rax
0x400586:	xor	eax, eax
0x400588:	lea	rax, [rbp - 0xc0]
0x40058f:	mov	rdi, rax
0x400592:	call	0x400918
<Block for 0x400597, 129 bytes>
0x400597:	mov	qword ptr [rbp - 0x80], 0
0x40059f:	mov	qword ptr [rbp - 0x78], 0
0x4005a7:	mov	qword ptr [rbp - 0x70], 0
0x4005af:	mov	qword ptr [rbp - 0x68], 0
0x4005b7:	mov	qword ptr [rbp - 0x60], 0
0x4005bf:	mov	qword ptr [rbp - 0x58], 0
0x4005c7:	mov	qword ptr [rbp - 0x50], 0
0x4005cf:	mov	qword ptr [rbp - 0x48], 0
0x4005d7:	mov	qword ptr [rbp - 0x40], 0
0x4005df:	mov	qword ptr [rbp - 0x38], 0
0x4005e7:	mov	qword ptr [rbp - 0x30], 0
0x4005ef:	mov	qword ptr [rbp - 0x28], 0
0x4005f7:	mov	dword ptr [rbp - 0x20], 0
0x4005fe:	lea	rax, [rbp - 0x80]
0x400602:	mov	qword ptr [rbp - 0xd8], rax
0x400609:	mov	rax, qword ptr [rbp - 0xd8]
0x400610:	mov	rdi, rax
0x400613:	call	0x500000
<Block for 0x400618, 29 bytes>
0x400618:	mov	qword ptr [rbp - 0xc8], rax
0x40061f:	mov	eax, 0x64
0x400624:	sub	rax, qword ptr [rbp - 0xc8]
0x40062b:	cmp	rax, 1
0x40062f:	jbe	0x4006ea
<Block for 0x4006ea, 15 bytes>
0x4006ea:	lea	rax, [rbp - 0xc0]
0x4006f1:	mov	rdi, rax
0x4006f4:	call	0x400ac2
<Block for 0x400635, 53 bytes>
0x400635:	mov	rax, qword ptr [rip + 0xff9cc]
0x40063c:	mov	rdx, qword ptr [rbp - 0xc8]
0x400643:	mov	ecx, 0x64
0x400648:	sub	ecx, edx
0x40064a:	mov	edx, ecx
0x40064c:	mov	esi, edx
0x40064e:	mov	rcx, qword ptr [rbp - 0xd8]
0x400655:	mov	rdx, qword ptr [rbp - 0xc8]
0x40065c:	add	rcx, rdx
0x40065f:	mov	rdx, rax
0x400662:	mov	rdi, rcx
0x400665:	call	0x500010
<Block for 0x4006f9, 32 bytes>
0x4006f9:	mov	qword ptr [rbp - 0xd0], rax
0x400700:	lea	rdx, [rbp - 0xd0]
0x400707:	lea	rax, [rbp - 0xa0]
0x40070e:	mov	rsi, rdx
0x400711:	mov	rdi, rax
0x400714:	call	0x400b12
<Block for 0x40066a, 10 bytes>
0x40066a:	test	rax, rax
0x40066d:	setne	al
0x400670:	test	al, al
0x400672:	je	0x4006ca
<Block for 0x400719, 37 bytes>
0x400719:	lea	rdx, [rbp - 0xd8]
0x400720:	mov	rsi, qword ptr [rbp - 0xa0]
0x400727:	lea	rax, [rbp - 0xc0]
0x40072e:	mov	rcx, rdx
0x400731:	mov	edx, 1
0x400736:	mov	rdi, rax
0x400739:	call	0x400b40
<Block for 0x4006ca, 12 bytes>
0x4006ca:	lea	rdi, [rip + 0x1e1]
0x4006d1:	call	0x500018
<Block for 0x400674, 15 bytes>
0x400674:	mov	rax, qword ptr [rbp - 0xd8]
0x40067b:	mov	rdi, rax
0x40067e:	call	0x500000
<Block for 0x40073e, 15 bytes>
0x40073e:	lea	rax, [rbp - 0xc0]
0x400745:	mov	rdi, rax
0x400748:	call	0x400ac2
<Block for 0x4006d6, 35 bytes>
0x4006d6:	mov	rdx, qword ptr [rbp - 0xd8]
0x4006dd:	mov	rax, qword ptr [rbp - 0xc8]
0x4006e4:	add	rax, rdx
0x4006e7:	mov	byte ptr [rax], 0
0x4006ea:	lea	rax, [rbp - 0xc0]
0x4006f1:	mov	rdi, rax
0x4006f4:	call	0x400ac2
<Block for 0x400683, 17 bytes>
0x400683:	mov	qword ptr [rbp - 0xc8], rax
0x40068a:	cmp	qword ptr [rbp - 0xc8], 0
0x400692:	je	0x4006ea
<Block for 0x40074d, 32 bytes>
0x40074d:	mov	qword ptr [rbp - 0xd0], rax
0x400754:	lea	rdx, [rbp - 0xd0]
0x40075b:	lea	rax, [rbp - 0xa0]
0x400762:	mov	rsi, rdx
0x400765:	mov	rdi, rax
0x400768:	call	0x400b12
<Block for 0x400694, 28 bytes>
0x400694:	mov	rax, qword ptr [rbp - 0xd8]
0x40069b:	mov	rdx, qword ptr [rbp - 0xc8]
0x4006a2:	sub	rdx, 1
0x4006a6:	add	rax, rdx
0x4006a9:	movzx	eax, byte ptr [rax]
0x4006ac:	cmp	al, 0xa
0x4006ae:	jne	0x4006ea
<Block for 0x40076d, 37 bytes>
0x40076d:	lea	rdx, [rbp - 0xd8]
0x400774:	mov	rsi, qword ptr [rbp - 0xa0]
0x40077b:	lea	rax, [rbp - 0xc0]
0x400782:	mov	rcx, rdx
0x400785:	mov	edx, 1
0x40078a:	mov	rdi, rax
0x40078d:	call	0x400b40
<Block for 0x4006b0, 26 bytes>
0x4006b0:	mov	rax, qword ptr [rbp - 0xd8]
0x4006b7:	mov	rdx, qword ptr [rbp - 0xc8]
0x4006be:	sub	rdx, 1
0x4006c2:	add	rax, rdx
0x4006c5:	mov	byte ptr [rax], 0
0x4006c8:	jmp	0x4006ea
<Block for 0x400792, 15 bytes>
0x400792:	lea	rax, [rbp - 0xc0]
0x400799:	mov	rdi, rax
0x40079c:	call	0x400ac2
<Block for 0x4007a1, 32 bytes>
0x4007a1:	mov	qword ptr [rbp - 0xd0], rax
0x4007a8:	lea	rdx, [rbp - 0xd0]
0x4007af:	lea	rax, [rbp - 0xa0]
0x4007b6:	mov	rsi, rdx
0x4007b9:	mov	rdi, rax
0x4007bc:	call	0x400b12
<Block for 0x4007c1, 37 bytes>
0x4007c1:	lea	rdx, [rbp - 0xd8]
0x4007c8:	mov	rsi, qword ptr [rbp - 0xa0]
0x4007cf:	lea	rax, [rbp - 0xc0]
0x4007d6:	mov	rcx, rdx
0x4007d9:	mov	edx, 1
0x4007de:	mov	rdi, rax
0x4007e1:	call	0x400b40
<Block for 0x4007e6, 25 bytes>
0x4007e6:	lea	rdx, [rbp - 0xc0]
0x4007ed:	lea	rax, [rbp - 0xa0]
0x4007f4:	mov	rsi, rdx
0x4007f7:	mov	rdi, rax
0x4007fa:	call	0x400c06
<Block for 0x4007ff, 15 bytes>
0x4007ff:	lea	rax, [rbp - 0xa0]
0x400806:	mov	rdi, rax
0x400809:	call	0x500040
<Block for 0x40080e, 15 bytes>
0x40080e:	lea	rax, [rbp - 0xa0]
0x400815:	mov	rdi, rax
0x400818:	call	0x400a7a
<Block for 0x40081d, 15 bytes>
0x40081d:	lea	rax, [rbp - 0xc0]
0x400824:	mov	rdi, rax
0x400827:	call	0x400a7a
<Block for 0x40082c, 16 bytes>
0x40082c:	nop	
0x40082d:	mov	rax, qword ptr [rbp - 0x18]
0x400831:	xor	rax, qword ptr fs:[0x28]
0x40083a:	je	0x40087c
<Block for 0x40087c, 10 bytes>
0x40087c:	add	rsp, 0xd8
0x400883:	pop	rbx
0x400884:	pop	rbp
0x400885:	ret	
<Block for 0x40083c, 2 bytes>
0x40083c:	jmp	0x400877
<Block for 0x400877, 5 bytes>
0x400877:	call	0x500030
