<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xd8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400918
<Block for 0x40002e, 129 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xd8], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500000
<Block for 0x4000af, 29 bytes>
0x4000af:	mov	qword ptr [rbp - 0xc8], rax
0x4000b6:	mov	eax, 0x64
0x4000bb:	sub	rax, qword ptr [rbp - 0xc8]
0x4000c2:	cmp	rax, 1
0x4000c6:	jbe	0x400181
<Block for 0x400181, 15 bytes>
0x400181:	lea	rax, [rbp - 0xc0]
0x400188:	mov	rdi, rax
0x40018b:	call	0x400ac2
<Block for 0x4000cc, 53 bytes>
0x4000cc:	mov	rax, qword ptr [rip + 0xfff35]
0x4000d3:	mov	rdx, qword ptr [rbp - 0xc8]
0x4000da:	mov	ecx, 0x64
0x4000df:	sub	ecx, edx
0x4000e1:	mov	edx, ecx
0x4000e3:	mov	esi, edx
0x4000e5:	mov	rcx, qword ptr [rbp - 0xd8]
0x4000ec:	mov	rdx, qword ptr [rbp - 0xc8]
0x4000f3:	add	rcx, rdx
0x4000f6:	mov	rdx, rax
0x4000f9:	mov	rdi, rcx
0x4000fc:	call	0x500010
<Block for 0x400190, 32 bytes>
0x400190:	mov	qword ptr [rbp - 0xd0], rax
0x400197:	lea	rdx, [rbp - 0xd0]
0x40019e:	lea	rax, [rbp - 0xa0]
0x4001a5:	mov	rsi, rdx
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x400b12
<Block for 0x400101, 10 bytes>
0x400101:	test	rax, rax
0x400104:	setne	al
0x400107:	test	al, al
0x400109:	je	0x400161
<Block for 0x4001b0, 37 bytes>
0x4001b0:	lea	rdx, [rbp - 0xd8]
0x4001b7:	mov	rsi, qword ptr [rbp - 0xa0]
0x4001be:	lea	rax, [rbp - 0xc0]
0x4001c5:	mov	rcx, rdx
0x4001c8:	mov	edx, 1
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x400b40
<Block for 0x400161, 12 bytes>
0x400161:	lea	rdi, [rip + 0x74a]
0x400168:	call	0x500018
<Block for 0x40010b, 15 bytes>
0x40010b:	mov	rax, qword ptr [rbp - 0xd8]
0x400112:	mov	rdi, rax
0x400115:	call	0x500000
<Block for 0x4001d5, 15 bytes>
0x4001d5:	lea	rax, [rbp - 0xc0]
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x400ac2
<Block for 0x40016d, 35 bytes>
0x40016d:	mov	rdx, qword ptr [rbp - 0xd8]
0x400174:	mov	rax, qword ptr [rbp - 0xc8]
0x40017b:	add	rax, rdx
0x40017e:	mov	byte ptr [rax], 0
0x400181:	lea	rax, [rbp - 0xc0]
0x400188:	mov	rdi, rax
0x40018b:	call	0x400ac2
<Block for 0x40011a, 17 bytes>
0x40011a:	mov	qword ptr [rbp - 0xc8], rax
0x400121:	cmp	qword ptr [rbp - 0xc8], 0
0x400129:	je	0x400181
<Block for 0x4001e4, 32 bytes>
0x4001e4:	mov	qword ptr [rbp - 0xd0], rax
0x4001eb:	lea	rdx, [rbp - 0xd0]
0x4001f2:	lea	rax, [rbp - 0xa0]
0x4001f9:	mov	rsi, rdx
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x400b12
<Block for 0x40012b, 28 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0xd8]
0x400132:	mov	rdx, qword ptr [rbp - 0xc8]
0x400139:	sub	rdx, 1
0x40013d:	add	rax, rdx
0x400140:	movzx	eax, byte ptr [rax]
0x400143:	cmp	al, 0xa
0x400145:	jne	0x400181
<Block for 0x400204, 37 bytes>
0x400204:	lea	rdx, [rbp - 0xd8]
0x40020b:	mov	rsi, qword ptr [rbp - 0xa0]
0x400212:	lea	rax, [rbp - 0xc0]
0x400219:	mov	rcx, rdx
0x40021c:	mov	edx, 1
0x400221:	mov	rdi, rax
0x400224:	call	0x400b40
<Block for 0x400147, 26 bytes>
0x400147:	mov	rax, qword ptr [rbp - 0xd8]
0x40014e:	mov	rdx, qword ptr [rbp - 0xc8]
0x400155:	sub	rdx, 1
0x400159:	add	rax, rdx
0x40015c:	mov	byte ptr [rax], 0
0x40015f:	jmp	0x400181
<Block for 0x400229, 15 bytes>
0x400229:	lea	rax, [rbp - 0xc0]
0x400230:	mov	rdi, rax
0x400233:	call	0x400ac2
<Block for 0x400238, 32 bytes>
0x400238:	mov	qword ptr [rbp - 0xd0], rax
0x40023f:	lea	rdx, [rbp - 0xd0]
0x400246:	lea	rax, [rbp - 0xa0]
0x40024d:	mov	rsi, rdx
0x400250:	mov	rdi, rax
0x400253:	call	0x400b12
<Block for 0x400258, 37 bytes>
0x400258:	lea	rdx, [rbp - 0xd8]
0x40025f:	mov	rsi, qword ptr [rbp - 0xa0]
0x400266:	lea	rax, [rbp - 0xc0]
0x40026d:	mov	rcx, rdx
0x400270:	mov	edx, 1
0x400275:	mov	rdi, rax
0x400278:	call	0x400b40
<Block for 0x40027d, 25 bytes>
0x40027d:	lea	rdx, [rbp - 0xc0]
0x400284:	lea	rax, [rbp - 0xa0]
0x40028b:	mov	rsi, rdx
0x40028e:	mov	rdi, rax
0x400291:	call	0x400c06
<Block for 0x400296, 15 bytes>
0x400296:	lea	rax, [rbp - 0xa0]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500020
<Block for 0x4002a5, 15 bytes>
0x4002a5:	lea	rax, [rbp - 0xa0]
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x400a7a
<Block for 0x4002b4, 15 bytes>
0x4002b4:	lea	rax, [rbp - 0xc0]
0x4002bb:	mov	rdi, rax
0x4002be:	call	0x400a7a
<Block for 0x4002c3, 16 bytes>
0x4002c3:	nop	
0x4002c4:	mov	rax, qword ptr [rbp - 0x18]
0x4002c8:	xor	rax, qword ptr fs:[0x28]
0x4002d1:	je	0x400313
<Block for 0x400313, 10 bytes>
0x400313:	add	rsp, 0xd8
0x40031a:	pop	rbx
0x40031b:	pop	rbp
0x40031c:	ret	
<Block for 0x4002d3, 2 bytes>
0x4002d3:	jmp	0x40030e
<Block for 0x40030e, 5 bytes>
0x40030e:	call	0x500030
