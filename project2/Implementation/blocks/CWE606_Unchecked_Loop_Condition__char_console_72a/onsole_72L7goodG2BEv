<Block for 0x40031d, 46 bytes>
0x40031d:	endbr64	
0x400321:	push	rbp
0x400322:	mov	rbp, rsp
0x400325:	push	rbx
0x400326:	sub	rsp, 0xc8
0x40032d:	mov	rax, qword ptr fs:[0x28]
0x400336:	mov	qword ptr [rbp - 0x18], rax
0x40033a:	xor	eax, eax
0x40033c:	lea	rax, [rbp - 0xc0]
0x400343:	mov	rdi, rax
0x400346:	call	0x400918
<Block for 0x40034b, 145 bytes>
0x40034b:	mov	qword ptr [rbp - 0x80], 0
0x400353:	mov	qword ptr [rbp - 0x78], 0
0x40035b:	mov	qword ptr [rbp - 0x70], 0
0x400363:	mov	qword ptr [rbp - 0x68], 0
0x40036b:	mov	qword ptr [rbp - 0x60], 0
0x400373:	mov	qword ptr [rbp - 0x58], 0
0x40037b:	mov	qword ptr [rbp - 0x50], 0
0x400383:	mov	qword ptr [rbp - 0x48], 0
0x40038b:	mov	qword ptr [rbp - 0x40], 0
0x400393:	mov	qword ptr [rbp - 0x38], 0
0x40039b:	mov	qword ptr [rbp - 0x30], 0
0x4003a3:	mov	qword ptr [rbp - 0x28], 0
0x4003ab:	mov	dword ptr [rbp - 0x20], 0
0x4003b2:	lea	rax, [rbp - 0x80]
0x4003b6:	mov	qword ptr [rbp - 0xd0], rax
0x4003bd:	mov	rax, qword ptr [rbp - 0xd0]
0x4003c4:	mov	word ptr [rax], 0x3531
0x4003c9:	mov	byte ptr [rax + 2], 0
0x4003cd:	lea	rax, [rbp - 0xc0]
0x4003d4:	mov	rdi, rax
0x4003d7:	call	0x400ac2
<Block for 0x4003dc, 32 bytes>
0x4003dc:	mov	qword ptr [rbp - 0xc8], rax
0x4003e3:	lea	rdx, [rbp - 0xc8]
0x4003ea:	lea	rax, [rbp - 0xa0]
0x4003f1:	mov	rsi, rdx
0x4003f4:	mov	rdi, rax
0x4003f7:	call	0x400b12
<Block for 0x4003fc, 37 bytes>
0x4003fc:	lea	rdx, [rbp - 0xd0]
0x400403:	mov	rsi, qword ptr [rbp - 0xa0]
0x40040a:	lea	rax, [rbp - 0xc0]
0x400411:	mov	rcx, rdx
0x400414:	mov	edx, 1
0x400419:	mov	rdi, rax
0x40041c:	call	0x400b40
<Block for 0x400421, 15 bytes>
0x400421:	lea	rax, [rbp - 0xc0]
0x400428:	mov	rdi, rax
0x40042b:	call	0x400ac2
<Block for 0x400430, 32 bytes>
0x400430:	mov	qword ptr [rbp - 0xc8], rax
0x400437:	lea	rdx, [rbp - 0xc8]
0x40043e:	lea	rax, [rbp - 0xa0]
0x400445:	mov	rsi, rdx
0x400448:	mov	rdi, rax
0x40044b:	call	0x400b12
<Block for 0x400450, 37 bytes>
0x400450:	lea	rdx, [rbp - 0xd0]
0x400457:	mov	rsi, qword ptr [rbp - 0xa0]
0x40045e:	lea	rax, [rbp - 0xc0]
0x400465:	mov	rcx, rdx
0x400468:	mov	edx, 1
0x40046d:	mov	rdi, rax
0x400470:	call	0x400b40
<Block for 0x400475, 15 bytes>
0x400475:	lea	rax, [rbp - 0xc0]
0x40047c:	mov	rdi, rax
0x40047f:	call	0x400ac2
<Block for 0x400484, 32 bytes>
0x400484:	mov	qword ptr [rbp - 0xc8], rax
0x40048b:	lea	rdx, [rbp - 0xc8]
0x400492:	lea	rax, [rbp - 0xa0]
0x400499:	mov	rsi, rdx
0x40049c:	mov	rdi, rax
0x40049f:	call	0x400b12
<Block for 0x4004a4, 37 bytes>
0x4004a4:	lea	rdx, [rbp - 0xd0]
0x4004ab:	mov	rsi, qword ptr [rbp - 0xa0]
0x4004b2:	lea	rax, [rbp - 0xc0]
0x4004b9:	mov	rcx, rdx
0x4004bc:	mov	edx, 1
0x4004c1:	mov	rdi, rax
0x4004c4:	call	0x400b40
<Block for 0x4004c9, 25 bytes>
0x4004c9:	lea	rdx, [rbp - 0xc0]
0x4004d0:	lea	rax, [rbp - 0xa0]
0x4004d7:	mov	rsi, rdx
0x4004da:	mov	rdi, rax
0x4004dd:	call	0x400c06
<Block for 0x4004e2, 15 bytes>
0x4004e2:	lea	rax, [rbp - 0xa0]
0x4004e9:	mov	rdi, rax
0x4004ec:	call	0x500038
<Block for 0x4004f1, 15 bytes>
0x4004f1:	lea	rax, [rbp - 0xa0]
0x4004f8:	mov	rdi, rax
0x4004fb:	call	0x400a7a
<Block for 0x400500, 15 bytes>
0x400500:	lea	rax, [rbp - 0xc0]
0x400507:	mov	rdi, rax
0x40050a:	call	0x400a7a
<Block for 0x40050f, 16 bytes>
0x40050f:	nop	
0x400510:	mov	rax, qword ptr [rbp - 0x18]
0x400514:	xor	rax, qword ptr fs:[0x28]
0x40051d:	je	0x40055f
<Block for 0x40055f, 10 bytes>
0x40055f:	add	rsp, 0xc8
0x400566:	pop	rbx
0x400567:	pop	rbp
0x400568:	ret	
<Block for 0x40051f, 2 bytes>
0x40051f:	jmp	0x40055a
<Block for 0x40055a, 5 bytes>
0x40055a:	call	0x500030
