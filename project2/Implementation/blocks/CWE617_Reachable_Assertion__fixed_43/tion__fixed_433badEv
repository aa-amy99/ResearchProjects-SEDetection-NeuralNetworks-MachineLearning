<Block for 0x400019, 46 bytes>
0x400019:	endbr64	
0x40001d:	push	rbp
0x40001e:	mov	rbp, rsp
0x400021:	sub	rsp, 0x10
0x400025:	mov	rax, qword ptr fs:[0x28]
0x40002e:	mov	qword ptr [rbp - 8], rax
0x400032:	xor	eax, eax
0x400034:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x40003b:	lea	rax, [rbp - 0xc]
0x40003f:	mov	rdi, rax
0x400042:	call	0x400000
<Block for 0x400047, 8 bytes>
0x400047:	mov	eax, dword ptr [rbp - 0xc]
0x40004a:	cmp	eax, 5
0x40004d:	jg	0x40006e
<Block for 0x40004f, 31 bytes>
0x40004f:	lea	rcx, [rip + 0xca]
0x400056:	mov	edx, 0x29
0x40005b:	lea	rsi, [rip + 0xf6]
0x400062:	lea	rdi, [rip + 0x118]
0x400069:	call	0x500000
<Block for 0x40006e, 16 bytes>
0x40006e:	nop	
0x40006f:	mov	rax, qword ptr [rbp - 8]
0x400073:	xor	rax, qword ptr fs:[0x28]
0x40007c:	je	0x400083
<Block for 0x400083, 2 bytes>
0x400083:	leave	
0x400084:	ret	
<Block for 0x40007e, 5 bytes>
0x40007e:	call	0x500008
