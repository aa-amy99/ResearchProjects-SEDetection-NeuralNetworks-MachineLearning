<Block for 0x400089, 67 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x30
0x400095:	mov	qword ptr [rbp - 0x28], rdi
0x400099:	mov	rax, qword ptr fs:[0x28]
0x4000a2:	mov	qword ptr [rbp - 8], rax
0x4000a6:	xor	eax, eax
0x4000a8:	mov	rax, qword ptr [rbp - 0x28]
0x4000ac:	mov	qword ptr [rbp - 0x10], rax
0x4000b0:	lea	rdx, [rbp - 0x1c]
0x4000b4:	mov	rax, qword ptr [rbp - 0x10]
0x4000b8:	lea	rsi, [rip + 0xe6]
0x4000bf:	mov	rdi, rax
0x4000c2:	mov	eax, 0
0x4000c7:	call	0x500000
<Block for 0x4000cc, 5 bytes>
0x4000cc:	cmp	eax, 1
0x4000cf:	jne	0x4000fb
<Block for 0x4000d1, 16 bytes>
0x4000d1:	mov	dword ptr [rbp - 0x14], 0
0x4000d8:	mov	dword ptr [rbp - 0x18], 0
0x4000df:	jmp	0x4000e9
<Block for 0x4000fb, 16 bytes>
0x4000fb:	nop	
0x4000fc:	mov	rax, qword ptr [rbp - 8]
0x400100:	xor	rax, qword ptr fs:[0x28]
0x400109:	je	0x400110
<Block for 0x4000e9, 8 bytes>
0x4000e9:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ec:	cmp	dword ptr [rbp - 0x18], eax
0x4000ef:	jl	0x4000e1
<Block for 0x400110, 2 bytes>
0x400110:	leave	
0x400111:	ret	
<Block for 0x40010b, 5 bytes>
0x40010b:	call	0x500010
<Block for 0x4000e1, 16 bytes>
0x4000e1:	add	dword ptr [rbp - 0x14], 1
0x4000e5:	add	dword ptr [rbp - 0x18], 1
0x4000e9:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ec:	cmp	dword ptr [rbp - 0x18], eax
0x4000ef:	jl	0x4000e1
<Block for 0x4000f1, 10 bytes>
0x4000f1:	mov	eax, dword ptr [rbp - 0x14]
0x4000f4:	mov	edi, eax
0x4000f6:	call	0x500008
