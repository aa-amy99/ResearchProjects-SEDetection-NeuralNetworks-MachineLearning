<Block for 0x4000df, 55 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0xf0
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	lea	rax, [rbp - 0xe0]
0x400104:	mov	edx, 0x63
0x400109:	mov	esi, 0x41
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 41 bytes>
0x400116:	mov	byte ptr [rbp - 0x7d], 0
0x40011a:	lea	rax, [rbp - 0xe0]
0x400121:	mov	qword ptr [rbp - 0xe8], rax
0x400128:	nop	
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x43
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x40013f, 17 bytes>
0x40013f:	mov	byte ptr [rbp - 0xd], 0
0x400143:	mov	qword ptr [rbp - 0xf0], 0
0x40014e:	jmp	0x40017c
<Block for 0x40017c, 10 bytes>
0x40017c:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400184:	jbe	0x400150
<Block for 0x400150, 54 bytes>
0x400150:	mov	rdx, qword ptr [rbp - 0xe8]
0x400157:	mov	rax, qword ptr [rbp - 0xf0]
0x40015e:	add	rdx, rax
0x400161:	lea	rcx, [rbp - 0x70]
0x400165:	mov	rax, qword ptr [rbp - 0xf0]
0x40016c:	add	rax, rcx
0x40016f:	movzx	eax, byte ptr [rax]
0x400172:	mov	byte ptr [rdx], al
0x400174:	add	qword ptr [rbp - 0xf0], 1
0x40017c:	cmp	qword ptr [rbp - 0xf0], 0x63
0x400184:	jbe	0x400150
<Block for 0x400186, 29 bytes>
0x400186:	mov	rax, qword ptr [rbp - 0xe8]
0x40018d:	add	rax, 0x63
0x400191:	mov	byte ptr [rax], 0
0x400194:	mov	rax, qword ptr [rbp - 0xe8]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500008
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500010
