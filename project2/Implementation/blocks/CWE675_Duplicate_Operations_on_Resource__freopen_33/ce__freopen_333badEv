<Block for 0x400000, 72 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	qword ptr [rbp - 0x20], 0
0x40002b:	mov	rax, qword ptr [rip + 0xfffce]
0x400032:	mov	rdx, rax
0x400035:	lea	rsi, [rip + 0x149]
0x40003c:	lea	rdi, [rip + 0x145]
0x400043:	call	0x500008
<Block for 0x400048, 16 bytes>
0x400048:	mov	qword ptr [rbp - 0x20], rax
0x40004c:	mov	rax, qword ptr [rbp - 0x20]
0x400050:	mov	rdi, rax
0x400053:	call	0x500010
<Block for 0x400058, 23 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0x18]
0x40005c:	mov	rax, qword ptr [rax]
0x40005f:	mov	qword ptr [rbp - 0x10], rax
0x400063:	mov	rax, qword ptr [rbp - 0x10]
0x400067:	mov	rdi, rax
0x40006a:	call	0x500010
<Block for 0x40006f, 16 bytes>
0x40006f:	nop	
0x400070:	mov	rax, qword ptr [rbp - 8]
0x400074:	xor	rax, qword ptr fs:[0x28]
0x40007d:	je	0x400084
<Block for 0x400084, 2 bytes>
0x400084:	leave	
0x400085:	ret	
<Block for 0x40007f, 5 bytes>
0x40007f:	call	0x500018
