<Block for 0x400086, 62 bytes>
0x400086:	endbr64	
0x40008a:	push	rbp
0x40008b:	mov	rbp, rsp
0x40008e:	sub	rsp, 0x20
0x400092:	mov	rax, qword ptr fs:[0x28]
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	xor	eax, eax
0x4000a1:	lea	rax, [rbp - 0x20]
0x4000a5:	mov	qword ptr [rbp - 0x18], rax
0x4000a9:	mov	qword ptr [rbp - 0x20], 0
0x4000b1:	lea	rsi, [rip + 0xcd]
0x4000b8:	lea	rdi, [rip + 0xdf]
0x4000bf:	call	0x500020
<Block for 0x4000c4, 27 bytes>
0x4000c4:	mov	qword ptr [rbp - 0x20], rax
0x4000c8:	mov	rax, qword ptr [rbp - 0x18]
0x4000cc:	mov	rax, qword ptr [rax]
0x4000cf:	mov	qword ptr [rbp - 0x10], rax
0x4000d3:	mov	rax, qword ptr [rbp - 0x10]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500010
<Block for 0x4000df, 16 bytes>
0x4000df:	nop	
0x4000e0:	mov	rax, qword ptr [rbp - 8]
0x4000e4:	xor	rax, qword ptr fs:[0x28]
0x4000ed:	je	0x4000f4
<Block for 0x4000f4, 2 bytes>
0x4000f4:	leave	
0x4000f5:	ret	
<Block for 0x4000ef, 5 bytes>
0x4000ef:	call	0x500018
