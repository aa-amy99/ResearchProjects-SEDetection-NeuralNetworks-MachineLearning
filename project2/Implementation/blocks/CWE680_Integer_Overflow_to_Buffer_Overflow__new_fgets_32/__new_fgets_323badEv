<Block for 0x400000, 104 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x4c]
0x40001f:	mov	qword ptr [rbp - 0x38], rax
0x400023:	lea	rax, [rbp - 0x4c]
0x400027:	mov	qword ptr [rbp - 0x30], rax
0x40002b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x38]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x48], eax
0x40003b:	mov	qword ptr [rbp - 0x16], 0
0x400043:	mov	dword ptr [rbp - 0xe], 0
0x40004a:	mov	word ptr [rbp - 0xa], 0
0x400050:	mov	rdx, qword ptr [rip + 0xfffa9]
0x400057:	lea	rax, [rbp - 0x16]
0x40005b:	mov	esi, 0xe
0x400060:	mov	rdi, rax
0x400063:	call	0x500008
<Block for 0x400068, 10 bytes>
0x400068:	test	rax, rax
0x40006b:	setne	al
0x40006e:	test	al, al
0x400070:	je	0x400083
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0x189]
0x40008a:	call	0x500018
<Block for 0x400072, 12 bytes>
0x400072:	lea	rax, [rbp - 0x16]
0x400076:	mov	rdi, rax
0x400079:	call	0x500010
<Block for 0x40008f, 43 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 0x38]
0x400093:	mov	edx, dword ptr [rbp - 0x48]
0x400096:	mov	dword ptr [rax], edx
0x400098:	mov	rax, qword ptr [rbp - 0x30]
0x40009c:	mov	eax, dword ptr [rax]
0x40009e:	mov	dword ptr [rbp - 0x44], eax
0x4000a1:	mov	eax, dword ptr [rbp - 0x44]
0x4000a4:	cdqe	
0x4000a6:	shl	rax, 2
0x4000aa:	mov	qword ptr [rbp - 0x28], rax
0x4000ae:	mov	rax, qword ptr [rbp - 0x28]
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500020
<Block for 0x40007e, 5 bytes>
0x40007e:	mov	dword ptr [rbp - 0x48], eax
0x400081:	jmp	0x40008f
<Block for 0x4000ba, 23 bytes>
0x4000ba:	mov	qword ptr [rbp - 0x20], rax
0x4000be:	mov	qword ptr [rbp - 0x40], 0
0x4000c6:	mov	eax, dword ptr [rbp - 0x44]
0x4000c9:	cdqe	
0x4000cb:	cmp	qword ptr [rbp - 0x40], rax
0x4000cf:	jae	0x4000f1
<Block for 0x4000d1, 32 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x40]
0x4000d5:	lea	rdx, [rax*4]
0x4000dd:	mov	rax, qword ptr [rbp - 0x20]
0x4000e1:	add	rax, rdx
0x4000e4:	mov	dword ptr [rax], 0
0x4000ea:	add	qword ptr [rbp - 0x40], 1
0x4000ef:	jmp	0x4000c6
<Block for 0x4000f1, 13 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x20]
0x4000f5:	mov	eax, dword ptr [rax]
0x4000f7:	mov	edi, eax
0x4000f9:	call	0x500028
<Block for 0x4000c6, 11 bytes>
0x4000c6:	mov	eax, dword ptr [rbp - 0x44]
0x4000c9:	cdqe	
0x4000cb:	cmp	qword ptr [rbp - 0x40], rax
0x4000cf:	jae	0x4000f1
<Block for 0x4000fe, 7 bytes>
0x4000fe:	cmp	qword ptr [rbp - 0x20], 0
0x400103:	je	0x400111
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x400105, 12 bytes>
0x400105:	mov	rax, qword ptr [rbp - 0x20]
0x400109:	mov	rdi, rax
0x40010c:	call	0x500030
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500038
