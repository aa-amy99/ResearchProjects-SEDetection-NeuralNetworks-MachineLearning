<Block for 0x400177, 98 bytes>
0x400177:	endbr64	
0x40017b:	push	rbp
0x40017c:	mov	rbp, rsp
0x40017f:	sub	rsp, 0xa0
0x400186:	mov	rax, qword ptr fs:[0x28]
0x40018f:	mov	qword ptr [rbp - 8], rax
0x400193:	xor	eax, eax
0x400195:	lea	rax, [rbp - 0x98]
0x40019c:	mov	qword ptr [rbp - 0x88], rax
0x4001a3:	mov	eax, 0x10
0x4001a8:	sub	rax, 1
0x4001ac:	add	rax, 0x6c
0x4001b0:	mov	esi, 0x10
0x4001b5:	mov	edx, 0
0x4001ba:	div	rsi
0x4001bd:	imul	rax, rax, 0x10
0x4001c1:	mov	rdx, rax
0x4001c4:	and	rdx, 0xfffffffffffff000
0x4001cb:	mov	rcx, rsp
0x4001ce:	sub	rcx, rdx
0x4001d1:	mov	rdx, rcx
0x4001d4:	cmp	rsp, rdx
0x4001d7:	je	0x4001eb
<Block for 0x4001eb, 26 bytes>
0x4001eb:	mov	rdx, rax
0x4001ee:	and	edx, 0xfff
0x4001f4:	sub	rsp, rdx
0x4001f7:	mov	rdx, rax
0x4001fa:	and	edx, 0xfff
0x400200:	test	rdx, rdx
0x400203:	je	0x400215
<Block for 0x4001d9, 18 bytes>
0x4001d9:	sub	rsp, 0x1000
0x4001e0:	or	qword ptr [rsp + 0xff8], 0
0x4001e9:	jmp	0x4001d4
<Block for 0x400215, 41 bytes>
0x400215:	mov	rax, rsp
0x400218:	add	rax, 0xf
0x40021c:	shr	rax, 4
0x400220:	shl	rax, 4
0x400224:	mov	qword ptr [rbp - 0x80], rax
0x400228:	mov	rax, qword ptr [rbp - 0x80]
0x40022c:	mov	edx, 0x63
0x400231:	mov	esi, 0x41
0x400236:	mov	rdi, rax
0x400239:	call	0x500000
<Block for 0x400205, 57 bytes>
0x400205:	and	eax, 0xfff
0x40020a:	sub	rax, 8
0x40020e:	add	rax, rsp
0x400211:	or	qword ptr [rax], 0
0x400215:	mov	rax, rsp
0x400218:	add	rax, 0xf
0x40021c:	shr	rax, 4
0x400220:	shl	rax, 4
0x400224:	mov	qword ptr [rbp - 0x80], rax
0x400228:	mov	rax, qword ptr [rbp - 0x80]
0x40022c:	mov	edx, 0x63
0x400231:	mov	esi, 0x41
0x400236:	mov	rdi, rax
0x400239:	call	0x500000
<Block for 0x4001d4, 5 bytes>
0x4001d4:	cmp	rsp, rdx
0x4001d7:	je	0x4001eb
<Block for 0x40023e, 58 bytes>
0x40023e:	mov	rax, qword ptr [rbp - 0x80]
0x400242:	add	rax, 0x63
0x400246:	mov	byte ptr [rax], 0
0x400249:	mov	rax, qword ptr [rbp - 0x80]
0x40024d:	mov	qword ptr [rbp - 0x98], rax
0x400254:	mov	rax, qword ptr [rbp - 0x88]
0x40025b:	mov	rax, qword ptr [rax]
0x40025e:	mov	qword ptr [rbp - 0x78], rax
0x400262:	lea	rax, [rbp - 0x70]
0x400266:	mov	edx, 0x63
0x40026b:	mov	esi, 0x43
0x400270:	mov	rdi, rax
0x400273:	call	0x500000
<Block for 0x400278, 25 bytes>
0x400278:	mov	byte ptr [rbp - 0xd], 0
0x40027c:	mov	qword ptr [rbp - 0x90], 0
0x400287:	cmp	qword ptr [rbp - 0x90], 0x63
0x40028f:	ja	0x4002bc
<Block for 0x400291, 43 bytes>
0x400291:	mov	rdx, qword ptr [rbp - 0x78]
0x400295:	mov	rax, qword ptr [rbp - 0x90]
0x40029c:	add	rdx, rax
0x40029f:	lea	rcx, [rbp - 0x70]
0x4002a3:	mov	rax, qword ptr [rbp - 0x90]
0x4002aa:	add	rax, rcx
0x4002ad:	movzx	eax, byte ptr [rax]
0x4002b0:	mov	byte ptr [rdx], al
0x4002b2:	add	qword ptr [rbp - 0x90], 1
0x4002ba:	jmp	0x400287
<Block for 0x4002bc, 23 bytes>
0x4002bc:	mov	rax, qword ptr [rbp - 0x78]
0x4002c0:	add	rax, 0x63
0x4002c4:	mov	byte ptr [rax], 0
0x4002c7:	mov	rax, qword ptr [rbp - 0x78]
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x500008
<Block for 0x400287, 10 bytes>
0x400287:	cmp	qword ptr [rbp - 0x90], 0x63
0x40028f:	ja	0x4002bc
<Block for 0x4002d3, 16 bytes>
0x4002d3:	nop	
0x4002d4:	mov	rax, qword ptr [rbp - 8]
0x4002d8:	xor	rax, qword ptr fs:[0x28]
0x4002e1:	je	0x4002e8
<Block for 0x4002e8, 2 bytes>
0x4002e8:	leave	
0x4002e9:	ret	
<Block for 0x4002e3, 5 bytes>
0x4002e3:	call	0x500010
