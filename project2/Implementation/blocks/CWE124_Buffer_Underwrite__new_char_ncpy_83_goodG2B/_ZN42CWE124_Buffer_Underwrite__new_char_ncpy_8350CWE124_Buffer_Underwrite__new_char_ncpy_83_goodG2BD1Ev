<Block for 0x40005c, 53 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	add	rsp, -0x80
0x400068:	mov	qword ptr [rbp - 0x78], rdi
0x40006c:	mov	rax, qword ptr fs:[0x28]
0x400075:	mov	qword ptr [rbp - 8], rax
0x400079:	xor	eax, eax
0x40007b:	lea	rax, [rbp - 0x70]
0x40007f:	mov	edx, 0x63
0x400084:	mov	esi, 0x43
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x400091, 31 bytes>
0x400091:	mov	byte ptr [rbp - 0xd], 0
0x400095:	mov	rax, qword ptr [rbp - 0x78]
0x400099:	mov	rax, qword ptr [rax]
0x40009c:	lea	rcx, [rbp - 0x70]
0x4000a0:	mov	edx, 0x63
0x4000a5:	mov	rsi, rcx
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
<Block for 0x4000b0, 29 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 0x78]
0x4000b4:	mov	rax, qword ptr [rax]
0x4000b7:	add	rax, 0x63
0x4000bb:	mov	byte ptr [rax], 0
0x4000be:	mov	rax, qword ptr [rbp - 0x78]
0x4000c2:	mov	rax, qword ptr [rax]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500018
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 8]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x4000e2
<Block for 0x4000e2, 2 bytes>
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500020
