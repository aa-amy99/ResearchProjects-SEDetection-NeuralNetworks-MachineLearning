<Block for 0x400050, 22 bytes>
0x400050:	endbr64	
0x400054:	push	rbp
0x400055:	mov	rbp, rsp
0x400058:	sub	rsp, 0x10
0x40005c:	mov	eax, dword ptr [rip + 0xd6]
0x400062:	test	eax, eax
0x400064:	je	0x400074
<Block for 0x400074, 17 bytes>
0x400074:	mov	dword ptr [rbp - 0x10], 5
0x40007b:	mov	edi, 4
0x400080:	call	0x500000
<Block for 0x400066, 12 bytes>
0x400066:	lea	rdi, [rip + 0xcf]
0x40006d:	call	0x500018
<Block for 0x400085, 32 bytes>
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	mov	edx, dword ptr [rbp - 0x10]
0x400090:	mov	dword ptr [rax], edx
0x400092:	mov	rax, qword ptr [rbp - 8]
0x400096:	mov	eax, dword ptr [rax]
0x400098:	mov	dword ptr [rbp - 0xc], eax
0x40009b:	mov	eax, dword ptr [rbp - 0xc]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500010
<Block for 0x400072, 2 bytes>
0x400072:	jmp	0x4000bb
<Block for 0x4000a5, 9 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	test	rax, rax
0x4000ac:	je	0x4000bb
<Block for 0x4000bb, 3 bytes>
0x4000bb:	nop	
0x4000bc:	leave	
0x4000bd:	ret	
<Block for 0x4000ae, 13 bytes>
0x4000ae:	mov	esi, 4
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500008
