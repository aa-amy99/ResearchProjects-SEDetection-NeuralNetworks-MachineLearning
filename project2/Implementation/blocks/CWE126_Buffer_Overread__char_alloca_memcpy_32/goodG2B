<Block for 0x400230, 112 bytes>
0x400230:	endbr64	
0x400234:	push	rbp
0x400235:	mov	rbp, rsp
0x400238:	sub	rsp, 0xb0
0x40023f:	mov	rax, qword ptr fs:[0x28]
0x400248:	mov	qword ptr [rbp - 8], rax
0x40024c:	xor	eax, eax
0x40024e:	lea	rax, [rbp - 0xa8]
0x400255:	mov	qword ptr [rbp - 0xa0], rax
0x40025c:	lea	rax, [rbp - 0xa8]
0x400263:	mov	qword ptr [rbp - 0x98], rax
0x40026a:	mov	eax, 0x10
0x40026f:	sub	rax, 1
0x400273:	add	rax, 0x3a
0x400277:	mov	ecx, 0x10
0x40027c:	mov	edx, 0
0x400281:	div	rcx
0x400284:	imul	rax, rax, 0x10
0x400288:	mov	rdx, rax
0x40028b:	and	rdx, 0xfffffffffffff000
0x400292:	mov	rcx, rsp
0x400295:	sub	rcx, rdx
0x400298:	mov	rdx, rcx
0x40029b:	cmp	rsp, rdx
0x40029e:	je	0x4002b2
<Block for 0x4002b2, 26 bytes>
0x4002b2:	mov	rdx, rax
0x4002b5:	and	edx, 0xfff
0x4002bb:	sub	rsp, rdx
0x4002be:	mov	rdx, rax
0x4002c1:	and	edx, 0xfff
0x4002c7:	test	rdx, rdx
0x4002ca:	je	0x4002dc
<Block for 0x4002a0, 18 bytes>
0x4002a0:	sub	rsp, 0x1000
0x4002a7:	or	qword ptr [rsp + 0xff8], 0
0x4002b0:	jmp	0x40029b
<Block for 0x4002dc, 76 bytes>
0x4002dc:	mov	rax, rsp
0x4002df:	add	rax, 0xf
0x4002e3:	shr	rax, 4
0x4002e7:	shl	rax, 4
0x4002eb:	mov	qword ptr [rbp - 0x90], rax
0x4002f2:	mov	eax, 0x10
0x4002f7:	sub	rax, 1
0x4002fb:	add	rax, 0x6c
0x4002ff:	mov	edi, 0x10
0x400304:	mov	edx, 0
0x400309:	div	rdi
0x40030c:	imul	rax, rax, 0x10
0x400310:	mov	rdx, rax
0x400313:	and	rdx, 0xfffffffffffff000
0x40031a:	mov	rsi, rsp
0x40031d:	sub	rsi, rdx
0x400320:	mov	rdx, rsi
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x4002cc, 92 bytes>
0x4002cc:	and	eax, 0xfff
0x4002d1:	sub	rax, 8
0x4002d5:	add	rax, rsp
0x4002d8:	or	qword ptr [rax], 0
0x4002dc:	mov	rax, rsp
0x4002df:	add	rax, 0xf
0x4002e3:	shr	rax, 4
0x4002e7:	shl	rax, 4
0x4002eb:	mov	qword ptr [rbp - 0x90], rax
0x4002f2:	mov	eax, 0x10
0x4002f7:	sub	rax, 1
0x4002fb:	add	rax, 0x6c
0x4002ff:	mov	edi, 0x10
0x400304:	mov	edx, 0
0x400309:	div	rdi
0x40030c:	imul	rax, rax, 0x10
0x400310:	mov	rdx, rax
0x400313:	and	rdx, 0xfffffffffffff000
0x40031a:	mov	rsi, rsp
0x40031d:	sub	rsi, rdx
0x400320:	mov	rdx, rsi
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x40029b, 5 bytes>
0x40029b:	cmp	rsp, rdx
0x40029e:	je	0x4002b2
<Block for 0x40033a, 26 bytes>
0x40033a:	mov	rdx, rax
0x40033d:	and	edx, 0xfff
0x400343:	sub	rsp, rdx
0x400346:	mov	rdx, rax
0x400349:	and	edx, 0xfff
0x40034f:	test	rdx, rdx
0x400352:	je	0x400364
<Block for 0x400328, 18 bytes>
0x400328:	sub	rsp, 0x1000
0x40032f:	or	qword ptr [rsp + 0xff8], 0
0x400338:	jmp	0x400323
<Block for 0x400364, 47 bytes>
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x88], rax
0x40037a:	mov	rax, qword ptr [rbp - 0x90]
0x400381:	mov	edx, 0x31
0x400386:	mov	esi, 0x41
0x40038b:	mov	rdi, rax
0x40038e:	call	0x500000
<Block for 0x400354, 63 bytes>
0x400354:	and	eax, 0xfff
0x400359:	sub	rax, 8
0x40035d:	add	rax, rsp
0x400360:	or	qword ptr [rax], 0
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x88], rax
0x40037a:	mov	rax, qword ptr [rbp - 0x90]
0x400381:	mov	edx, 0x31
0x400386:	mov	esi, 0x41
0x40038b:	mov	rdi, rax
0x40038e:	call	0x500000
<Block for 0x400323, 5 bytes>
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x400393, 39 bytes>
0x400393:	mov	rax, qword ptr [rbp - 0x90]
0x40039a:	add	rax, 0x31
0x40039e:	mov	byte ptr [rax], 0
0x4003a1:	mov	rax, qword ptr [rbp - 0x88]
0x4003a8:	mov	edx, 0x63
0x4003ad:	mov	esi, 0x41
0x4003b2:	mov	rdi, rax
0x4003b5:	call	0x500000
<Block for 0x4003ba, 89 bytes>
0x4003ba:	mov	rax, qword ptr [rbp - 0x88]
0x4003c1:	add	rax, 0x63
0x4003c5:	mov	byte ptr [rax], 0
0x4003c8:	mov	rax, qword ptr [rbp - 0xa0]
0x4003cf:	mov	rax, qword ptr [rax]
0x4003d2:	mov	qword ptr [rbp - 0x80], rax
0x4003d6:	mov	rax, qword ptr [rbp - 0x88]
0x4003dd:	mov	qword ptr [rbp - 0x80], rax
0x4003e1:	mov	rax, qword ptr [rbp - 0xa0]
0x4003e8:	mov	rdx, qword ptr [rbp - 0x80]
0x4003ec:	mov	qword ptr [rax], rdx
0x4003ef:	mov	rax, qword ptr [rbp - 0x98]
0x4003f6:	mov	rax, qword ptr [rax]
0x4003f9:	mov	qword ptr [rbp - 0x78], rax
0x4003fd:	lea	rax, [rbp - 0x70]
0x400401:	mov	edx, 0x63
0x400406:	mov	esi, 0x43
0x40040b:	mov	rdi, rax
0x40040e:	call	0x500000
<Block for 0x400413, 16 bytes>
0x400413:	mov	byte ptr [rbp - 0xd], 0
0x400417:	lea	rax, [rbp - 0x70]
0x40041b:	mov	rdi, rax
0x40041e:	call	0x500008
<Block for 0x400423, 22 bytes>
0x400423:	mov	rdx, rax
0x400426:	mov	rcx, qword ptr [rbp - 0x78]
0x40042a:	lea	rax, [rbp - 0x70]
0x40042e:	mov	rsi, rcx
0x400431:	mov	rdi, rax
0x400434:	call	0x500010
<Block for 0x400439, 16 bytes>
0x400439:	mov	byte ptr [rbp - 0xd], 0
0x40043d:	lea	rax, [rbp - 0x70]
0x400441:	mov	rdi, rax
0x400444:	call	0x500018
<Block for 0x400449, 16 bytes>
0x400449:	nop	
0x40044a:	mov	rax, qword ptr [rbp - 8]
0x40044e:	xor	rax, qword ptr fs:[0x28]
0x400457:	je	0x40045e
<Block for 0x40045e, 2 bytes>
0x40045e:	leave	
0x40045f:	ret	
<Block for 0x400459, 5 bytes>
0x400459:	call	0x500020
