<Block for 0x4000a6, 65 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x40
0x4000b2:	mov	rax, qword ptr fs:[0x28]
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	xor	eax, eax
0x4000c1:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000c8:	mov	rax, qword ptr [rip + 0xfff31]
0x4000cf:	lea	rdx, [rbp - 0x34]
0x4000d3:	lea	rsi, [rip + 0x276]
0x4000da:	mov	rdi, rax
0x4000dd:	mov	eax, 0
0x4000e2:	call	0x500008
<Block for 0x4000e7, 47 bytes>
0x4000e7:	mov	qword ptr [rbp - 0x30], 0
0x4000ef:	mov	qword ptr [rbp - 0x28], 0
0x4000f7:	mov	qword ptr [rbp - 0x20], 0
0x4000ff:	mov	qword ptr [rbp - 0x18], 0
0x400107:	mov	qword ptr [rbp - 0x10], 0
0x40010f:	mov	eax, dword ptr [rbp - 0x34]
0x400112:	test	eax, eax
0x400114:	js	0x400130
<Block for 0x400130, 12 bytes>
0x400130:	lea	rdi, [rip + 0x241]
0x400137:	call	0x500018
<Block for 0x400116, 8 bytes>
0x400116:	mov	eax, dword ptr [rbp - 0x34]
0x400119:	cmp	eax, 9
0x40011c:	jg	0x400130
<Block for 0x40013c, 16 bytes>
0x40013c:	nop	
0x40013d:	mov	rax, qword ptr [rbp - 8]
0x400141:	xor	rax, qword ptr fs:[0x28]
0x40014a:	je	0x400151
<Block for 0x40011e, 16 bytes>
0x40011e:	mov	eax, dword ptr [rbp - 0x34]
0x400121:	cdqe	
0x400123:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400127:	mov	edi, eax
0x400129:	call	0x500010
<Block for 0x400151, 2 bytes>
0x400151:	leave	
0x400152:	ret	
<Block for 0x40014c, 5 bytes>
0x40014c:	call	0x500020
<Block for 0x40012e, 2 bytes>
0x40012e:	jmp	0x40013c
