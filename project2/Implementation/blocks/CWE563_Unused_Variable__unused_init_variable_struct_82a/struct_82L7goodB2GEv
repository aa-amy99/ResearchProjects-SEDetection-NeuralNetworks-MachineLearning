<Block for 0x40008f, 52 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	push	rbx
0x400098:	sub	rsp, 0x28
0x40009c:	mov	rax, qword ptr fs:[0x28]
0x4000a5:	mov	qword ptr [rbp - 0x18], rax
0x4000a9:	xor	eax, eax
0x4000ab:	mov	dword ptr [rbp - 0x20], 0
0x4000b2:	mov	dword ptr [rbp - 0x1c], 0
0x4000b9:	mov	edi, 8
0x4000be:	call	0x500000
<Block for 0x4000c3, 11 bytes>
0x4000c3:	mov	rbx, rax
0x4000c6:	mov	rdi, rbx
0x4000c9:	call	0x40017a
<Block for 0x4000ce, 30 bytes>
0x4000ce:	mov	qword ptr [rbp - 0x28], rbx
0x4000d2:	mov	rax, qword ptr [rbp - 0x28]
0x4000d6:	mov	rax, qword ptr [rax]
0x4000d9:	mov	rcx, qword ptr [rax]
0x4000dc:	mov	rdx, qword ptr [rbp - 0x20]
0x4000e0:	mov	rax, qword ptr [rbp - 0x28]
0x4000e4:	mov	rsi, rdx
0x4000e7:	mov	rdi, rax
0x4000ea:	call	rcx
<Block for 0x4000ec, 9 bytes>
0x4000ec:	mov	rax, qword ptr [rbp - 0x28]
0x4000f0:	test	rax, rax
0x4000f3:	je	0x400102
<Block for 0x400102, 16 bytes>
0x400102:	nop	
0x400103:	mov	rax, qword ptr [rbp - 0x18]
0x400107:	xor	rax, qword ptr fs:[0x28]
0x400110:	je	0x400117
<Block for 0x4000f5, 13 bytes>
0x4000f5:	mov	esi, 8
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500008
<Block for 0x400117, 7 bytes>
0x400117:	add	rsp, 0x28
0x40011b:	pop	rbx
0x40011c:	pop	rbp
0x40011d:	ret	
<Block for 0x400112, 5 bytes>
0x400112:	call	0x500010
