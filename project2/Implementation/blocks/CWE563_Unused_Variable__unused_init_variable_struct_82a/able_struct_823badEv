<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x20], 0
0x400023:	mov	dword ptr [rbp - 0x1c], 0
0x40002a:	mov	edi, 8
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	rbx, rax
0x400037:	mov	rdi, rbx
0x40003a:	call	0x40014c
<Block for 0x40003f, 30 bytes>
0x40003f:	mov	qword ptr [rbp - 0x28], rbx
0x400043:	mov	rax, qword ptr [rbp - 0x28]
0x400047:	mov	rax, qword ptr [rax]
0x40004a:	mov	rcx, qword ptr [rax]
0x40004d:	mov	rdx, qword ptr [rbp - 0x20]
0x400051:	mov	rax, qword ptr [rbp - 0x28]
0x400055:	mov	rsi, rdx
0x400058:	mov	rdi, rax
0x40005b:	call	rcx
<Block for 0x40005d, 9 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0x28]
0x400061:	test	rax, rax
0x400064:	je	0x400073
<Block for 0x400073, 16 bytes>
0x400073:	nop	
0x400074:	mov	rax, qword ptr [rbp - 0x18]
0x400078:	xor	rax, qword ptr fs:[0x28]
0x400081:	je	0x400088
<Block for 0x400066, 13 bytes>
0x400066:	mov	esi, 8
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500008
<Block for 0x400088, 7 bytes>
0x400088:	add	rsp, 0x28
0x40008c:	pop	rbx
0x40008d:	pop	rbp
0x40008e:	ret	
<Block for 0x400083, 5 bytes>
0x400083:	call	0x500010
