<Block for 0x40025f, 44 bytes>
0x40025f:	endbr64	
0x400263:	push	rbp
0x400264:	mov	rbp, rsp
0x400267:	sub	rsp, 0x70
0x40026b:	mov	rax, qword ptr fs:[0x28]
0x400274:	mov	qword ptr [rbp - 8], rax
0x400278:	xor	eax, eax
0x40027a:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x400281:	mov	eax, 0
0x400286:	call	0x500000
<Block for 0x40028b, 8 bytes>
0x40028b:	test	eax, eax
0x40028d:	je	0x4003b4
<Block for 0x4003b4, 34 bytes>
0x4003b4:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4003bb:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4003c2:	mov	edx, 6
0x4003c7:	mov	esi, 1
0x4003cc:	mov	edi, 2
0x4003d1:	call	0x500008
<Block for 0x400293, 34 bytes>
0x400293:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40029a:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x4002a1:	mov	edx, 6
0x4002a6:	mov	esi, 1
0x4002ab:	mov	edi, 2
0x4002b0:	call	0x500008
<Block for 0x4003d6, 13 bytes>
0x4003d6:	mov	dword ptr [rbp - 0x50], eax
0x4003d9:	cmp	dword ptr [rbp - 0x50], -1
0x4003dd:	je	0x4004a2
<Block for 0x4002b5, 13 bytes>
0x4002b5:	mov	dword ptr [rbp - 0x48], eax
0x4002b8:	cmp	dword ptr [rbp - 0x48], -1
0x4002bc:	je	0x400381
<Block for 0x4004a2, 3 bytes>
0x4004a2:	nop	
0x4004a3:	jmp	0x4004ac
<Block for 0x4003e3, 22 bytes>
0x4003e3:	lea	rax, [rbp - 0x40]
0x4003e7:	mov	edx, 0x10
0x4003ec:	mov	esi, 0
0x4003f1:	mov	rdi, rax
0x4003f4:	call	0x500010
<Block for 0x400381, 3 bytes>
0x400381:	nop	
0x400382:	jmp	0x40038b
<Block for 0x4002c2, 22 bytes>
0x4002c2:	lea	rax, [rbp - 0x40]
0x4002c6:	mov	edx, 0x10
0x4002cb:	mov	esi, 0
0x4002d0:	mov	rdi, rax
0x4002d3:	call	0x500010
<Block for 0x4004ac, 6 bytes>
0x4004ac:	cmp	dword ptr [rbp - 0x50], -1
0x4004b0:	je	0x4004bc
<Block for 0x4003f9, 23 bytes>
0x4003f9:	mov	word ptr [rbp - 0x40], 2
0x4003ff:	mov	dword ptr [rbp - 0x3c], 0
0x400406:	mov	edi, 0x6987
0x40040b:	call	0x500018
<Block for 0x40038b, 6 bytes>
0x40038b:	cmp	dword ptr [rbp - 0x48], -1
0x40038f:	je	0x40039b
<Block for 0x4002d8, 23 bytes>
0x4002d8:	mov	word ptr [rbp - 0x40], 2
0x4002de:	mov	dword ptr [rbp - 0x3c], 0
0x4002e5:	mov	edi, 0x6987
0x4002ea:	call	0x500018
<Block for 0x4004bc, 6 bytes>
0x4004bc:	cmp	dword ptr [rbp - 0x5c], -1
0x4004c0:	je	0x4004cc
<Block for 0x4004b2, 10 bytes>
0x4004b2:	mov	eax, dword ptr [rbp - 0x50]
0x4004b5:	mov	edi, eax
0x4004b7:	call	0x500048
<Block for 0x400410, 26 bytes>
0x400410:	mov	word ptr [rbp - 0x3e], ax
0x400414:	lea	rcx, [rbp - 0x40]
0x400418:	mov	eax, dword ptr [rbp - 0x50]
0x40041b:	mov	edx, 0x10
0x400420:	mov	rsi, rcx
0x400423:	mov	edi, eax
0x400425:	call	0x500020
<Block for 0x40039b, 10 bytes>
0x40039b:	cmp	dword ptr [rbp - 0x60], -1
0x40039f:	je	0x4004cc
<Block for 0x400391, 10 bytes>
0x400391:	mov	eax, dword ptr [rbp - 0x48]
0x400394:	mov	edi, eax
0x400396:	call	0x500048
<Block for 0x4002ef, 26 bytes>
0x4002ef:	mov	word ptr [rbp - 0x3e], ax
0x4002f3:	lea	rcx, [rbp - 0x40]
0x4002f7:	mov	eax, dword ptr [rbp - 0x48]
0x4002fa:	mov	edx, 0x10
0x4002ff:	mov	rsi, rcx
0x400302:	mov	edi, eax
0x400304:	call	0x500020
<Block for 0x4004cc, 10 bytes>
0x4004cc:	mov	eax, 0
0x4004d1:	call	0x500000
<Block for 0x4004c2, 10 bytes>
0x4004c2:	mov	eax, dword ptr [rbp - 0x5c]
0x4004c5:	mov	edi, eax
0x4004c7:	call	0x500048
<Block for 0x40042a, 5 bytes>
0x40042a:	cmp	eax, -1
0x40042d:	je	0x4004a5
<Block for 0x4003a5, 10 bytes>
0x4003a5:	mov	eax, dword ptr [rbp - 0x60]
0x4003a8:	mov	edi, eax
0x4003aa:	call	0x500048
<Block for 0x400309, 5 bytes>
0x400309:	cmp	eax, -1
0x40030c:	je	0x400384
<Block for 0x4004d6, 4 bytes>
0x4004d6:	test	eax, eax
0x4004d8:	je	0x400551
<Block for 0x4004a5, 3 bytes>
0x4004a5:	nop	
0x4004a6:	jmp	0x4004ac
<Block for 0x40042f, 15 bytes>
0x40042f:	mov	eax, dword ptr [rbp - 0x50]
0x400432:	mov	esi, 5
0x400437:	mov	edi, eax
0x400439:	call	0x500028
<Block for 0x4003af, 5 bytes>
0x4003af:	jmp	0x4004cc
<Block for 0x400384, 3 bytes>
0x400384:	nop	
0x400385:	jmp	0x40038b
<Block for 0x40030e, 15 bytes>
0x40030e:	mov	eax, dword ptr [rbp - 0x48]
0x400311:	mov	esi, 5
0x400316:	mov	edi, eax
0x400318:	call	0x500028
<Block for 0x400551, 46 bytes>
0x400551:	mov	qword ptr [rbp - 0x40], 0
0x400559:	mov	qword ptr [rbp - 0x38], 0
0x400561:	mov	qword ptr [rbp - 0x30], 0
0x400569:	mov	qword ptr [rbp - 0x28], 0
0x400571:	mov	qword ptr [rbp - 0x20], 0
0x400579:	cmp	dword ptr [rbp - 0x64], 0
0x40057d:	js	0x4005b7
<Block for 0x4004da, 46 bytes>
0x4004da:	mov	qword ptr [rbp - 0x40], 0
0x4004e2:	mov	qword ptr [rbp - 0x38], 0
0x4004ea:	mov	qword ptr [rbp - 0x30], 0
0x4004f2:	mov	qword ptr [rbp - 0x28], 0
0x4004fa:	mov	qword ptr [rbp - 0x20], 0
0x400502:	cmp	dword ptr [rbp - 0x64], 0
0x400506:	js	0x400543
<Block for 0x40043e, 5 bytes>
0x40043e:	cmp	eax, -1
0x400441:	je	0x4004a8
<Block for 0x40031d, 5 bytes>
0x40031d:	cmp	eax, -1
0x400320:	je	0x400387
<Block for 0x4005b7, 12 bytes>
0x4005b7:	lea	rdi, [rip + 0x1a2]
0x4005be:	call	0x500058
<Block for 0x40057f, 6 bytes>
0x40057f:	cmp	dword ptr [rbp - 0x64], 9
0x400583:	jg	0x4005b7
<Block for 0x400543, 12 bytes>
0x400543:	lea	rdi, [rip + 0x216]
0x40054a:	call	0x500058
<Block for 0x400508, 6 bytes>
0x400508:	cmp	dword ptr [rbp - 0x64], 9
0x40050c:	jg	0x400543
<Block for 0x4004a8, 3 bytes>
0x4004a8:	nop	
0x4004a9:	jmp	0x4004ac
<Block for 0x400443, 20 bytes>
0x400443:	mov	eax, dword ptr [rbp - 0x50]
0x400446:	mov	edx, 0
0x40044b:	mov	esi, 0
0x400450:	mov	edi, eax
0x400452:	call	0x500030
<Block for 0x400387, 3 bytes>
0x400387:	nop	
0x400388:	jmp	0x40038b
<Block for 0x400322, 20 bytes>
0x400322:	mov	eax, dword ptr [rbp - 0x48]
0x400325:	mov	edx, 0
0x40032a:	mov	esi, 0
0x40032f:	mov	edi, eax
0x400331:	call	0x500030
<Block for 0x4005c3, 2 bytes>
0x4005c3:	jmp	0x4005c5
<Block for 0x400585, 22 bytes>
0x400585:	mov	eax, dword ptr [rbp - 0x64]
0x400588:	cdqe	
0x40058a:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400592:	mov	dword ptr [rbp - 0x54], 0
0x400599:	jmp	0x4005af
<Block for 0x40054f, 2 bytes>
0x40054f:	jmp	0x4005c5
<Block for 0x40050e, 22 bytes>
0x40050e:	mov	eax, dword ptr [rbp - 0x64]
0x400511:	cdqe	
0x400513:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40051b:	mov	dword ptr [rbp - 0x58], 0
0x400522:	jmp	0x400538
<Block for 0x400457, 9 bytes>
0x400457:	mov	dword ptr [rbp - 0x5c], eax
0x40045a:	cmp	dword ptr [rbp - 0x5c], -1
0x40045e:	je	0x4004ab
<Block for 0x400336, 9 bytes>
0x400336:	mov	dword ptr [rbp - 0x60], eax
0x400339:	cmp	dword ptr [rbp - 0x60], -1
0x40033d:	je	0x40038a
<Block for 0x4005c5, 16 bytes>
0x4005c5:	nop	
0x4005c6:	mov	rax, qword ptr [rbp - 8]
0x4005ca:	xor	rax, qword ptr fs:[0x28]
0x4005d3:	je	0x4005da
<Block for 0x4005af, 6 bytes>
0x4005af:	cmp	dword ptr [rbp - 0x54], 9
0x4005b3:	jle	0x40059b
<Block for 0x400538, 6 bytes>
0x400538:	cmp	dword ptr [rbp - 0x58], 9
0x40053c:	jle	0x400524
<Block for 0x400460, 24 bytes>
0x400460:	lea	rsi, [rbp - 0x16]
0x400464:	mov	eax, dword ptr [rbp - 0x5c]
0x400467:	mov	ecx, 0
0x40046c:	mov	edx, 0xd
0x400471:	mov	edi, eax
0x400473:	call	0x500038
<Block for 0x4004ab, 1 bytes>
0x4004ab:	nop	
<Block for 0x40033f, 24 bytes>
0x40033f:	lea	rsi, [rbp - 0x16]
0x400343:	mov	eax, dword ptr [rbp - 0x60]
0x400346:	mov	ecx, 0
0x40034b:	mov	edx, 0xd
0x400350:	mov	edi, eax
0x400352:	call	0x500038
<Block for 0x40038a, 1 bytes>
0x40038a:	nop	
<Block for 0x4005da, 2 bytes>
0x4005da:	leave	
0x4005db:	ret	
<Block for 0x4005d5, 5 bytes>
0x4005d5:	call	0x500060
<Block for 0x40059b, 16 bytes>
0x40059b:	mov	eax, dword ptr [rbp - 0x54]
0x40059e:	cdqe	
0x4005a0:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4005a4:	mov	edi, eax
0x4005a6:	call	0x500050
<Block for 0x4005b5, 2 bytes>
0x4005b5:	jmp	0x4005c5
<Block for 0x400524, 16 bytes>
0x400524:	mov	eax, dword ptr [rbp - 0x58]
0x400527:	cdqe	
0x400529:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40052d:	mov	edi, eax
0x40052f:	call	0x500050
<Block for 0x40053e, 5 bytes>
0x40053e:	jmp	0x4005c5
<Block for 0x400478, 9 bytes>
0x400478:	mov	dword ptr [rbp - 0x4c], eax
0x40047b:	cmp	dword ptr [rbp - 0x4c], -1
0x40047f:	je	0x4004ac
<Block for 0x400357, 9 bytes>
0x400357:	mov	dword ptr [rbp - 0x44], eax
0x40035a:	cmp	dword ptr [rbp - 0x44], -1
0x40035e:	je	0x40038b
<Block for 0x4005ab, 10 bytes>
0x4005ab:	add	dword ptr [rbp - 0x54], 1
0x4005af:	cmp	dword ptr [rbp - 0x54], 9
0x4005b3:	jle	0x40059b
<Block for 0x400534, 10 bytes>
0x400534:	add	dword ptr [rbp - 0x58], 1
0x400538:	cmp	dword ptr [rbp - 0x58], 9
0x40053c:	jle	0x400524
<Block for 0x400481, 6 bytes>
0x400481:	cmp	dword ptr [rbp - 0x4c], 0
0x400485:	je	0x4004ac
<Block for 0x400360, 6 bytes>
0x400360:	cmp	dword ptr [rbp - 0x44], 0
0x400364:	je	0x40038b
<Block for 0x400487, 22 bytes>
0x400487:	mov	eax, dword ptr [rbp - 0x4c]
0x40048a:	cdqe	
0x40048c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400491:	lea	rax, [rbp - 0x16]
0x400495:	mov	rdi, rax
0x400498:	call	0x500040
<Block for 0x400366, 22 bytes>
0x400366:	mov	eax, dword ptr [rbp - 0x44]
0x400369:	cdqe	
0x40036b:	mov	byte ptr [rbp + rax - 0x16], 0
0x400370:	lea	rax, [rbp - 0x16]
0x400374:	mov	rdi, rax
0x400377:	call	0x500040
<Block for 0x40049d, 5 bytes>
0x40049d:	mov	dword ptr [rbp - 0x64], eax
0x4004a0:	jmp	0x4004ac
<Block for 0x40037c, 5 bytes>
0x40037c:	mov	dword ptr [rbp - 0x64], eax
0x40037f:	jmp	0x40038b
