<Block for 0x40017b, 40 bytes>
0x40017b:	endbr64	
0x40017f:	push	rbp
0x400180:	mov	rbp, rsp
0x400183:	push	rbx
0x400184:	sub	rsp, 0x58
0x400188:	mov	rax, qword ptr fs:[0x28]
0x400191:	mov	qword ptr [rbp - 0x18], rax
0x400195:	xor	eax, eax
0x400197:	lea	rax, [rbp - 0x50]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x400374
<Block for 0x4001a3, 26 bytes>
0x4001a3:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4001aa:	mov	dword ptr [rbp - 0x5c], 6
0x4001b1:	lea	rax, [rbp - 0x50]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x400506
<Block for 0x4001bd, 23 bytes>
0x4001bd:	mov	qword ptr [rbp - 0x58], rax
0x4001c1:	lea	rdx, [rbp - 0x58]
0x4001c5:	lea	rax, [rbp - 0x30]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x400556
<Block for 0x4001d4, 28 bytes>
0x4001d4:	lea	rdx, [rbp - 0x5c]
0x4001d8:	mov	rsi, qword ptr [rbp - 0x30]
0x4001dc:	lea	rax, [rbp - 0x50]
0x4001e0:	mov	rcx, rdx
0x4001e3:	mov	edx, 1
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x400584
<Block for 0x4001f0, 12 bytes>
0x4001f0:	lea	rax, [rbp - 0x50]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x400506
<Block for 0x4001fc, 23 bytes>
0x4001fc:	mov	qword ptr [rbp - 0x58], rax
0x400200:	lea	rdx, [rbp - 0x58]
0x400204:	lea	rax, [rbp - 0x30]
0x400208:	mov	rsi, rdx
0x40020b:	mov	rdi, rax
0x40020e:	call	0x400556
<Block for 0x400213, 28 bytes>
0x400213:	lea	rdx, [rbp - 0x5c]
0x400217:	mov	rsi, qword ptr [rbp - 0x30]
0x40021b:	lea	rax, [rbp - 0x50]
0x40021f:	mov	rcx, rdx
0x400222:	mov	edx, 1
0x400227:	mov	rdi, rax
0x40022a:	call	0x400584
<Block for 0x40022f, 12 bytes>
0x40022f:	lea	rax, [rbp - 0x50]
0x400233:	mov	rdi, rax
0x400236:	call	0x400506
<Block for 0x40023b, 23 bytes>
0x40023b:	mov	qword ptr [rbp - 0x58], rax
0x40023f:	lea	rdx, [rbp - 0x58]
0x400243:	lea	rax, [rbp - 0x30]
0x400247:	mov	rsi, rdx
0x40024a:	mov	rdi, rax
0x40024d:	call	0x400556
<Block for 0x400252, 28 bytes>
0x400252:	lea	rdx, [rbp - 0x5c]
0x400256:	mov	rsi, qword ptr [rbp - 0x30]
0x40025a:	lea	rax, [rbp - 0x50]
0x40025e:	mov	rcx, rdx
0x400261:	mov	edx, 1
0x400266:	mov	rdi, rax
0x400269:	call	0x400584
<Block for 0x40026e, 19 bytes>
0x40026e:	lea	rdx, [rbp - 0x50]
0x400272:	lea	rax, [rbp - 0x30]
0x400276:	mov	rsi, rdx
0x400279:	mov	rdi, rax
0x40027c:	call	0x40064a
<Block for 0x400281, 12 bytes>
0x400281:	lea	rax, [rbp - 0x30]
0x400285:	mov	rdi, rax
0x400288:	call	0x500018
<Block for 0x40028d, 12 bytes>
0x40028d:	lea	rax, [rbp - 0x30]
0x400291:	mov	rdi, rax
0x400294:	call	0x4004be
<Block for 0x400299, 12 bytes>
0x400299:	lea	rax, [rbp - 0x50]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x4004be
<Block for 0x4002a5, 16 bytes>
0x4002a5:	nop	
0x4002a6:	mov	rax, qword ptr [rbp - 0x18]
0x4002aa:	xor	rax, qword ptr fs:[0x28]
0x4002b3:	je	0x4002ef
<Block for 0x4002ef, 7 bytes>
0x4002ef:	add	rsp, 0x58
0x4002f3:	pop	rbx
0x4002f4:	pop	rbp
0x4002f5:	ret	
<Block for 0x4002b5, 2 bytes>
0x4002b5:	jmp	0x4002ea
<Block for 0x4002ea, 5 bytes>
0x4002ea:	call	0x500010
