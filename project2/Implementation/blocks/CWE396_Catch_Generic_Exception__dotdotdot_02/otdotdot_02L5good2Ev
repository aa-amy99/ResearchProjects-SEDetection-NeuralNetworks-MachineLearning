<Block for 0x400279, 22 bytes>
0x400279:	endbr64	
0x40027d:	push	rbp
0x40027e:	mov	rbp, rsp
0x400281:	push	r13
0x400283:	push	r12
0x400285:	push	rbx
0x400286:	sub	rsp, 0x18
0x40028a:	call	0x500000
<Block for 0x40028f, 12 bytes>
0x40028f:	and	eax, 1
0x400292:	test	eax, eax
0x400294:	sete	al
0x400297:	test	al, al
0x400299:	je	0x4002d0
<Block for 0x4002d0, 5 bytes>
0x4002d0:	call	0x500000
<Block for 0x40029b, 10 bytes>
0x40029b:	mov	edi, 0x10
0x4002a0:	call	0x500008
<Block for 0x4002d5, 12 bytes>
0x4002d5:	and	eax, 1
0x4002d8:	test	eax, eax
0x4002da:	sete	al
0x4002dd:	test	al, al
0x4002df:	je	0x400316
<Block for 0x4002a5, 18 bytes>
0x4002a5:	mov	rbx, rax
0x4002a8:	lea	rsi, [rip + 0x152]
0x4002af:	mov	rdi, rbx
0x4002b2:	call	0x500010
<Block for 0x400316, 12 bytes>
0x400316:	lea	rdi, [rip + 0xee]
0x40031d:	call	0x500058
<Block for 0x4002e1, 10 bytes>
0x4002e1:	mov	edi, 0x10
0x4002e6:	call	0x500008
<Block for 0x4002b7, 25 bytes>
0x4002b7:	mov	rax, qword ptr [rip + 0xffd62]
0x4002be:	mov	rdx, rax
0x4002c1:	lea	rsi, [rip + 0xffd60]
0x4002c8:	mov	rdi, rbx
0x4002cb:	call	0x500030
<Block for 0x400322, 5 bytes>
0x400322:	jmp	0x4003e0
<Block for 0x4002eb, 18 bytes>
0x4002eb:	mov	rbx, rax
0x4002ee:	lea	rsi, [rip + 0x111]
0x4002f5:	mov	rdi, rbx
0x4002f8:	call	0x500038
<Block for 0x4003e0, 11 bytes>
0x4003e0:	add	rsp, 0x18
0x4003e4:	pop	rbx
0x4003e5:	pop	r12
0x4003e7:	pop	r13
0x4003e9:	pop	rbp
0x4003ea:	ret	
<Block for 0x4002fd, 25 bytes>
0x4002fd:	mov	rax, qword ptr [rip + 0xffd44]
0x400304:	mov	rdx, rax
0x400307:	lea	rsi, [rip + 0xffd42]
0x40030e:	mov	rdi, rbx
0x400311:	call	0x500030
