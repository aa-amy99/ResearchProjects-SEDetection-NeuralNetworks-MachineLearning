<Block for 0x4003d0, 37 bytes>
0x4003d0:	endbr64	
0x4003d4:	push	rbp
0x4003d5:	mov	rbp, rsp
0x4003d8:	sub	rsp, 0x50
0x4003dc:	mov	rax, qword ptr fs:[0x28]
0x4003e5:	mov	qword ptr [rbp - 8], rax
0x4003e9:	xor	eax, eax
0x4003eb:	mov	edi, 0x64
0x4003f0:	call	0x500000
<Block for 0x4003f5, 11 bytes>
0x4003f5:	mov	qword ptr [rbp - 0x38], rax
0x4003f9:	cmp	qword ptr [rbp - 0x38], 0
0x4003fe:	jne	0x40040a
<Block for 0x400400, 10 bytes>
0x400400:	mov	edi, 0xffffffff
0x400405:	call	0x500008
<Block for 0x40040a, 26 bytes>
0x40040a:	mov	rax, qword ptr [rbp - 0x38]
0x40040e:	mov	byte ptr [rax], 0
0x400411:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400418:	mov	rax, qword ptr [rbp - 0x38]
0x40041c:	mov	rdi, rax
0x40041f:	call	0x500010
<Block for 0x400424, 24 bytes>
0x400424:	mov	qword ptr [rbp - 0x30], rax
0x400428:	mov	edx, 6
0x40042d:	mov	esi, 1
0x400432:	mov	edi, 2
0x400437:	call	0x500018
<Block for 0x40043c, 13 bytes>
0x40043c:	mov	dword ptr [rbp - 0x48], eax
0x40043f:	cmp	dword ptr [rbp - 0x48], -1
0x400443:	je	0x400536
<Block for 0x400536, 3 bytes>
0x400536:	nop	
0x400537:	jmp	0x40053a
<Block for 0x400449, 22 bytes>
0x400449:	lea	rax, [rbp - 0x20]
0x40044d:	mov	edx, 0x10
0x400452:	mov	esi, 0
0x400457:	mov	rdi, rax
0x40045a:	call	0x500020
<Block for 0x40053a, 6 bytes>
0x40053a:	cmp	dword ptr [rbp - 0x48], -1
0x40053e:	je	0x40054a
<Block for 0x40045f, 18 bytes>
0x40045f:	mov	word ptr [rbp - 0x20], 2
0x400465:	lea	rdi, [rip + 0x16f]
0x40046c:	call	0x500028
<Block for 0x40054a, 10 bytes>
0x40054a:	mov	eax, 0
0x40054f:	call	0x500058
<Block for 0x400540, 10 bytes>
0x400540:	mov	eax, dword ptr [rbp - 0x48]
0x400543:	mov	edi, eax
0x400545:	call	0x500050
<Block for 0x400471, 13 bytes>
0x400471:	mov	dword ptr [rbp - 0x1c], eax
0x400474:	mov	edi, 0x6987
0x400479:	call	0x500030
<Block for 0x400554, 4 bytes>
0x400554:	test	eax, eax
0x400556:	je	0x4005a5
<Block for 0x40047e, 26 bytes>
0x40047e:	mov	word ptr [rbp - 0x1e], ax
0x400482:	lea	rcx, [rbp - 0x20]
0x400486:	mov	eax, dword ptr [rbp - 0x48]
0x400489:	mov	edx, 0x10
0x40048e:	mov	rsi, rcx
0x400491:	mov	edi, eax
0x400493:	call	0x500038
<Block for 0x4005a5, 16 bytes>
0x4005a5:	nop	
0x4005a6:	mov	rax, qword ptr [rbp - 8]
0x4005aa:	xor	rax, qword ptr fs:[0x28]
0x4005b3:	je	0x4005ba
<Block for 0x400558, 10 bytes>
0x400558:	mov	qword ptr [rbp - 0x40], 0
0x400560:	jmp	0x400587
<Block for 0x400498, 9 bytes>
0x400498:	cmp	eax, -1
0x40049b:	je	0x400539
<Block for 0x4005ba, 2 bytes>
0x4005ba:	leave	
0x4005bb:	ret	
<Block for 0x4005b5, 5 bytes>
0x4005b5:	call	0x500070
<Block for 0x400587, 12 bytes>
0x400587:	mov	rax, qword ptr [rbp - 0x38]
0x40058b:	mov	rdi, rax
0x40058e:	call	0x500010
<Block for 0x4004a1, 39 bytes>
0x4004a1:	mov	eax, 0x63
0x4004a6:	sub	rax, qword ptr [rbp - 0x30]
0x4004aa:	mov	rdx, rax
0x4004ad:	mov	rcx, qword ptr [rbp - 0x38]
0x4004b1:	mov	rax, qword ptr [rbp - 0x30]
0x4004b5:	lea	rsi, [rcx + rax]
0x4004b9:	mov	eax, dword ptr [rbp - 0x48]
0x4004bc:	mov	ecx, 0
0x4004c1:	mov	edi, eax
0x4004c3:	call	0x500040
<Block for 0x400539, 1 bytes>
0x400539:	nop	
<Block for 0x400593, 6 bytes>
0x400593:	cmp	qword ptr [rbp - 0x40], rax
0x400597:	jb	0x400562
<Block for 0x4004c8, 9 bytes>
0x4004c8:	mov	dword ptr [rbp - 0x44], eax
0x4004cb:	cmp	dword ptr [rbp - 0x44], -1
0x4004cf:	je	0x40053a
<Block for 0x400562, 18 bytes>
0x400562:	mov	rdx, qword ptr [rbp - 0x38]
0x400566:	mov	rax, qword ptr [rbp - 0x40]
0x40056a:	add	rax, rdx
0x40056d:	movzx	eax, byte ptr [rax]
0x400570:	cmp	al, 0x53
0x400572:	jne	0x400582
<Block for 0x400599, 12 bytes>
0x400599:	mov	rax, qword ptr [rbp - 0x38]
0x40059d:	mov	rdi, rax
0x4005a0:	call	0x500068
<Block for 0x4004d1, 6 bytes>
0x4004d1:	cmp	dword ptr [rbp - 0x44], 0
0x4004d5:	je	0x40053a
<Block for 0x400574, 12 bytes>
0x400574:	lea	rdi, [rip + 0x6a]
0x40057b:	call	0x500060
<Block for 0x400582, 17 bytes>
0x400582:	add	qword ptr [rbp - 0x40], 1
0x400587:	mov	rax, qword ptr [rbp - 0x38]
0x40058b:	mov	rdi, rax
0x40058e:	call	0x500010
<Block for 0x4004d7, 40 bytes>
0x4004d7:	mov	eax, dword ptr [rbp - 0x44]
0x4004da:	movsxd	rdx, eax
0x4004dd:	mov	rax, qword ptr [rbp - 0x30]
0x4004e1:	add	rdx, rax
0x4004e4:	mov	rax, qword ptr [rbp - 0x38]
0x4004e8:	add	rax, rdx
0x4004eb:	mov	byte ptr [rax], 0
0x4004ee:	mov	rax, qword ptr [rbp - 0x38]
0x4004f2:	mov	esi, 0xd
0x4004f7:	mov	rdi, rax
0x4004fa:	call	0x500048
<Block for 0x400580, 2 bytes>
0x400580:	jmp	0x400599
<Block for 0x4004ff, 11 bytes>
0x4004ff:	mov	qword ptr [rbp - 0x28], rax
0x400503:	cmp	qword ptr [rbp - 0x28], 0
0x400508:	je	0x400511
<Block for 0x400511, 17 bytes>
0x400511:	mov	rax, qword ptr [rbp - 0x38]
0x400515:	mov	esi, 0xa
0x40051a:	mov	rdi, rax
0x40051d:	call	0x500048
<Block for 0x40050a, 24 bytes>
0x40050a:	mov	rax, qword ptr [rbp - 0x28]
0x40050e:	mov	byte ptr [rax], 0
0x400511:	mov	rax, qword ptr [rbp - 0x38]
0x400515:	mov	esi, 0xa
0x40051a:	mov	rdi, rax
0x40051d:	call	0x500048
<Block for 0x400522, 11 bytes>
0x400522:	mov	qword ptr [rbp - 0x28], rax
0x400526:	cmp	qword ptr [rbp - 0x28], 0
0x40052b:	je	0x40053a
<Block for 0x40052d, 9 bytes>
0x40052d:	mov	rax, qword ptr [rbp - 0x28]
0x400531:	mov	byte ptr [rax], 0
0x400534:	jmp	0x40053a
