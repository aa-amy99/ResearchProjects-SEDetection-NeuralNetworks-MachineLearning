<Block for 0x4001d6, 37 bytes>
0x4001d6:	endbr64	
0x4001da:	push	rbp
0x4001db:	mov	rbp, rsp
0x4001de:	sub	rsp, 0x50
0x4001e2:	mov	rax, qword ptr fs:[0x28]
0x4001eb:	mov	qword ptr [rbp - 8], rax
0x4001ef:	xor	eax, eax
0x4001f1:	mov	edi, 0x64
0x4001f6:	call	0x500000
<Block for 0x4001fb, 11 bytes>
0x4001fb:	mov	qword ptr [rbp - 0x38], rax
0x4001ff:	cmp	qword ptr [rbp - 0x38], 0
0x400204:	jne	0x400210
<Block for 0x400206, 10 bytes>
0x400206:	mov	edi, 0xffffffff
0x40020b:	call	0x500008
<Block for 0x400210, 26 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0x38]
0x400214:	mov	byte ptr [rax], 0
0x400217:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40021e:	mov	rax, qword ptr [rbp - 0x38]
0x400222:	mov	rdi, rax
0x400225:	call	0x500010
<Block for 0x40022a, 24 bytes>
0x40022a:	mov	qword ptr [rbp - 0x30], rax
0x40022e:	mov	edx, 6
0x400233:	mov	esi, 1
0x400238:	mov	edi, 2
0x40023d:	call	0x500018
<Block for 0x400242, 13 bytes>
0x400242:	mov	dword ptr [rbp - 0x48], eax
0x400245:	cmp	dword ptr [rbp - 0x48], -1
0x400249:	je	0x40033c
<Block for 0x40033c, 3 bytes>
0x40033c:	nop	
0x40033d:	jmp	0x400340
<Block for 0x40024f, 22 bytes>
0x40024f:	lea	rax, [rbp - 0x20]
0x400253:	mov	edx, 0x10
0x400258:	mov	esi, 0
0x40025d:	mov	rdi, rax
0x400260:	call	0x500020
<Block for 0x400340, 6 bytes>
0x400340:	cmp	dword ptr [rbp - 0x48], -1
0x400344:	je	0x400350
<Block for 0x400265, 18 bytes>
0x400265:	mov	word ptr [rbp - 0x20], 2
0x40026b:	lea	rdi, [rip + 0x369]
0x400272:	call	0x500028
<Block for 0x400350, 10 bytes>
0x400350:	mov	eax, 0
0x400355:	call	0x500078
<Block for 0x400346, 10 bytes>
0x400346:	mov	eax, dword ptr [rbp - 0x48]
0x400349:	mov	edi, eax
0x40034b:	call	0x500050
<Block for 0x400277, 13 bytes>
0x400277:	mov	dword ptr [rbp - 0x1c], eax
0x40027a:	mov	edi, 0x6987
0x40027f:	call	0x500030
<Block for 0x40035a, 4 bytes>
0x40035a:	test	eax, eax
0x40035c:	je	0x40036c
<Block for 0x400284, 26 bytes>
0x400284:	mov	word ptr [rbp - 0x1e], ax
0x400288:	lea	rcx, [rbp - 0x20]
0x40028c:	mov	eax, dword ptr [rbp - 0x48]
0x40028f:	mov	edx, 0x10
0x400294:	mov	rsi, rcx
0x400297:	mov	edi, eax
0x400299:	call	0x500038
<Block for 0x40036c, 10 bytes>
0x40036c:	mov	qword ptr [rbp - 0x40], 0
0x400374:	jmp	0x40039b
<Block for 0x40035e, 12 bytes>
0x40035e:	lea	rdi, [rip + 0x291]
0x400365:	call	0x500060
<Block for 0x40029e, 9 bytes>
0x40029e:	cmp	eax, -1
0x4002a1:	je	0x40033f
<Block for 0x40039b, 12 bytes>
0x40039b:	mov	rax, qword ptr [rbp - 0x38]
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x500010
<Block for 0x40036a, 2 bytes>
0x40036a:	jmp	0x4003b9
<Block for 0x4002a7, 39 bytes>
0x4002a7:	mov	eax, 0x63
0x4002ac:	sub	rax, qword ptr [rbp - 0x30]
0x4002b0:	mov	rdx, rax
0x4002b3:	mov	rcx, qword ptr [rbp - 0x38]
0x4002b7:	mov	rax, qword ptr [rbp - 0x30]
0x4002bb:	lea	rsi, [rcx + rax]
0x4002bf:	mov	eax, dword ptr [rbp - 0x48]
0x4002c2:	mov	ecx, 0
0x4002c7:	mov	edi, eax
0x4002c9:	call	0x500040
<Block for 0x40033f, 1 bytes>
0x40033f:	nop	
<Block for 0x4003a7, 6 bytes>
0x4003a7:	cmp	qword ptr [rbp - 0x40], rax
0x4003ab:	jb	0x400376
<Block for 0x4003b9, 16 bytes>
0x4003b9:	nop	
0x4003ba:	mov	rax, qword ptr [rbp - 8]
0x4003be:	xor	rax, qword ptr fs:[0x28]
0x4003c7:	je	0x4003ce
<Block for 0x4002ce, 9 bytes>
0x4002ce:	mov	dword ptr [rbp - 0x44], eax
0x4002d1:	cmp	dword ptr [rbp - 0x44], -1
0x4002d5:	je	0x400340
<Block for 0x400376, 18 bytes>
0x400376:	mov	rdx, qword ptr [rbp - 0x38]
0x40037a:	mov	rax, qword ptr [rbp - 0x40]
0x40037e:	add	rax, rdx
0x400381:	movzx	eax, byte ptr [rax]
0x400384:	cmp	al, 0x53
0x400386:	jne	0x400396
<Block for 0x4003ad, 12 bytes>
0x4003ad:	mov	rax, qword ptr [rbp - 0x38]
0x4003b1:	mov	rdi, rax
0x4003b4:	call	0x500068
<Block for 0x4003ce, 2 bytes>
0x4003ce:	leave	
0x4003cf:	ret	
<Block for 0x4003c9, 5 bytes>
0x4003c9:	call	0x500070
<Block for 0x4002d7, 6 bytes>
0x4002d7:	cmp	dword ptr [rbp - 0x44], 0
0x4002db:	je	0x400340
<Block for 0x400388, 12 bytes>
0x400388:	lea	rdi, [rip + 0x256]
0x40038f:	call	0x500060
<Block for 0x400396, 17 bytes>
0x400396:	add	qword ptr [rbp - 0x40], 1
0x40039b:	mov	rax, qword ptr [rbp - 0x38]
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x500010
<Block for 0x4002dd, 40 bytes>
0x4002dd:	mov	eax, dword ptr [rbp - 0x44]
0x4002e0:	movsxd	rdx, eax
0x4002e3:	mov	rax, qword ptr [rbp - 0x30]
0x4002e7:	add	rdx, rax
0x4002ea:	mov	rax, qword ptr [rbp - 0x38]
0x4002ee:	add	rax, rdx
0x4002f1:	mov	byte ptr [rax], 0
0x4002f4:	mov	rax, qword ptr [rbp - 0x38]
0x4002f8:	mov	esi, 0xd
0x4002fd:	mov	rdi, rax
0x400300:	call	0x500048
<Block for 0x400394, 2 bytes>
0x400394:	jmp	0x4003ad
<Block for 0x400305, 11 bytes>
0x400305:	mov	qword ptr [rbp - 0x28], rax
0x400309:	cmp	qword ptr [rbp - 0x28], 0
0x40030e:	je	0x400317
<Block for 0x400317, 17 bytes>
0x400317:	mov	rax, qword ptr [rbp - 0x38]
0x40031b:	mov	esi, 0xa
0x400320:	mov	rdi, rax
0x400323:	call	0x500048
<Block for 0x400310, 24 bytes>
0x400310:	mov	rax, qword ptr [rbp - 0x28]
0x400314:	mov	byte ptr [rax], 0
0x400317:	mov	rax, qword ptr [rbp - 0x38]
0x40031b:	mov	esi, 0xa
0x400320:	mov	rdi, rax
0x400323:	call	0x500048
<Block for 0x400328, 11 bytes>
0x400328:	mov	qword ptr [rbp - 0x28], rax
0x40032c:	cmp	qword ptr [rbp - 0x28], 0
0x400331:	je	0x400340
<Block for 0x400333, 9 bytes>
0x400333:	mov	rax, qword ptr [rbp - 0x28]
0x400337:	mov	byte ptr [rax], 0
0x40033a:	jmp	0x400340
