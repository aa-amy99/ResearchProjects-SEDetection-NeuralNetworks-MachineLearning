<Block for 0x400153, 25 bytes>
0x400153:	endbr64	
0x400157:	push	rbp
0x400158:	mov	rbp, rsp
0x40015b:	sub	rsp, 0x10
0x40015f:	mov	qword ptr [rbp - 8], 0
0x400167:	call	0x500000
<Block for 0x40016c, 9 bytes>
0x40016c:	test	eax, eax
0x40016e:	setne	al
0x400171:	test	al, al
0x400173:	je	0x4001df
<Block for 0x4001df, 5 bytes>
0x4001df:	call	0x500000
<Block for 0x400175, 10 bytes>
0x400175:	mov	edi, 0x320
0x40017a:	call	0x500008
<Block for 0x4001e4, 5 bytes>
0x4001e4:	test	eax, eax
0x4001e6:	nop	
0x4001e7:	leave	
0x4001e8:	ret	
<Block for 0x40017f, 19 bytes>
0x40017f:	mov	qword ptr [rbp - 8], rax
0x400183:	mov	qword ptr [rbp - 0x10], 0
0x40018b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400190:	ja	0x4001cc
<Block for 0x400192, 58 bytes>
0x400192:	mov	rax, qword ptr [rbp - 0x10]
0x400196:	lea	rdx, [rax*8]
0x40019e:	mov	rax, qword ptr [rbp - 8]
0x4001a2:	add	rax, rdx
0x4001a5:	mov	dword ptr [rax], 1
0x4001ab:	mov	rax, qword ptr [rbp - 0x10]
0x4001af:	lea	rdx, [rax*8]
0x4001b7:	mov	rax, qword ptr [rbp - 8]
0x4001bb:	add	rax, rdx
0x4001be:	mov	dword ptr [rax + 4], 2
0x4001c5:	add	qword ptr [rbp - 0x10], 1
0x4001ca:	jmp	0x40018b
<Block for 0x4001cc, 7 bytes>
0x4001cc:	cmp	qword ptr [rbp - 8], 0
0x4001d1:	je	0x4001df
<Block for 0x40018b, 7 bytes>
0x40018b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400190:	ja	0x4001cc
<Block for 0x4001d3, 12 bytes>
0x4001d3:	mov	rax, qword ptr [rbp - 8]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
