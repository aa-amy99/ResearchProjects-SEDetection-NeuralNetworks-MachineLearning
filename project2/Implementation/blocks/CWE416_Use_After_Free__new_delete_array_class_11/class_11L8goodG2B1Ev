<Block for 0x4001e9, 25 bytes>
0x4001e9:	endbr64	
0x4001ed:	push	rbp
0x4001ee:	mov	rbp, rsp
0x4001f1:	sub	rsp, 0x10
0x4001f5:	mov	qword ptr [rbp - 0x10], 0
0x4001fd:	call	0x500020
<Block for 0x400202, 9 bytes>
0x400202:	test	eax, eax
0x400204:	setne	al
0x400207:	test	al, al
0x400209:	je	0x400219
<Block for 0x400219, 10 bytes>
0x400219:	mov	edi, 0x320
0x40021e:	call	0x500008
<Block for 0x40020b, 12 bytes>
0x40020b:	lea	rdi, [rip + 0x132]
0x400212:	call	0x500028
<Block for 0x400223, 19 bytes>
0x400223:	mov	qword ptr [rbp - 0x10], rax
0x400227:	mov	qword ptr [rbp - 8], 0
0x40022f:	cmp	qword ptr [rbp - 8], 0x63
0x400234:	ja	0x400270
<Block for 0x400217, 2 bytes>
0x400217:	jmp	0x400270
<Block for 0x400236, 58 bytes>
0x400236:	mov	rax, qword ptr [rbp - 8]
0x40023a:	lea	rdx, [rax*8]
0x400242:	mov	rax, qword ptr [rbp - 0x10]
0x400246:	add	rax, rdx
0x400249:	mov	dword ptr [rax], 1
0x40024f:	mov	rax, qword ptr [rbp - 8]
0x400253:	lea	rdx, [rax*8]
0x40025b:	mov	rax, qword ptr [rbp - 0x10]
0x40025f:	add	rax, rdx
0x400262:	mov	dword ptr [rax + 4], 2
0x400269:	add	qword ptr [rbp - 8], 1
0x40026e:	jmp	0x40022f
<Block for 0x400270, 5 bytes>
0x400270:	call	0x500000
<Block for 0x40022f, 7 bytes>
0x40022f:	cmp	qword ptr [rbp - 8], 0x63
0x400234:	ja	0x400270
<Block for 0x400275, 9 bytes>
0x400275:	test	eax, eax
0x400277:	setne	al
0x40027a:	test	al, al
0x40027c:	je	0x40028b
<Block for 0x40028b, 3 bytes>
0x40028b:	nop	
0x40028c:	leave	
0x40028d:	ret	
<Block for 0x40027e, 13 bytes>
0x40027e:	mov	rax, qword ptr [rbp - 0x10]
0x400282:	mov	eax, dword ptr [rax]
0x400284:	mov	edi, eax
0x400286:	call	0x500018
