<Block for 0x40028e, 25 bytes>
0x40028e:	endbr64	
0x400292:	push	rbp
0x400293:	mov	rbp, rsp
0x400296:	sub	rsp, 0x10
0x40029a:	mov	qword ptr [rbp - 0x10], 0
0x4002a2:	call	0x500000
<Block for 0x4002a7, 9 bytes>
0x4002a7:	test	eax, eax
0x4002a9:	setne	al
0x4002ac:	test	al, al
0x4002ae:	je	0x400307
<Block for 0x400307, 5 bytes>
0x400307:	call	0x500000
<Block for 0x4002b0, 10 bytes>
0x4002b0:	mov	edi, 0x320
0x4002b5:	call	0x500008
<Block for 0x40030c, 9 bytes>
0x40030c:	test	eax, eax
0x40030e:	setne	al
0x400311:	test	al, al
0x400313:	je	0x400322
<Block for 0x4002ba, 19 bytes>
0x4002ba:	mov	qword ptr [rbp - 0x10], rax
0x4002be:	mov	qword ptr [rbp - 8], 0
0x4002c6:	cmp	qword ptr [rbp - 8], 0x63
0x4002cb:	ja	0x400307
<Block for 0x400322, 3 bytes>
0x400322:	nop	
0x400323:	leave	
0x400324:	ret	
<Block for 0x400315, 13 bytes>
0x400315:	mov	rax, qword ptr [rbp - 0x10]
0x400319:	mov	eax, dword ptr [rax]
0x40031b:	mov	edi, eax
0x40031d:	call	0x500018
<Block for 0x4002cd, 58 bytes>
0x4002cd:	mov	rax, qword ptr [rbp - 8]
0x4002d1:	lea	rdx, [rax*8]
0x4002d9:	mov	rax, qword ptr [rbp - 0x10]
0x4002dd:	add	rax, rdx
0x4002e0:	mov	dword ptr [rax], 1
0x4002e6:	mov	rax, qword ptr [rbp - 8]
0x4002ea:	lea	rdx, [rax*8]
0x4002f2:	mov	rax, qword ptr [rbp - 0x10]
0x4002f6:	add	rax, rdx
0x4002f9:	mov	dword ptr [rax + 4], 2
0x400300:	add	qword ptr [rbp - 8], 1
0x400305:	jmp	0x4002c6
<Block for 0x4002c6, 7 bytes>
0x4002c6:	cmp	qword ptr [rbp - 8], 0x63
0x4002cb:	ja	0x400307
