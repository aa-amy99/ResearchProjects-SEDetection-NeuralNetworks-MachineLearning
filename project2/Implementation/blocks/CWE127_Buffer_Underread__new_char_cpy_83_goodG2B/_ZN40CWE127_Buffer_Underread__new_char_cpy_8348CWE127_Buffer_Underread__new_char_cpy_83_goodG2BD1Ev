<Block for 0x40005c, 62 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	sub	rsp, 0xe0
0x40006b:	mov	qword ptr [rbp - 0xd8], rdi
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	lea	rax, [rbp - 0xd0]
0x400088:	mov	edx, 0xc7
0x40008d:	mov	esi, 0x43
0x400092:	mov	rdi, rax
0x400095:	call	0x500008
<Block for 0x40009a, 32 bytes>
0x40009a:	mov	byte ptr [rbp - 9], 0
0x40009e:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a5:	mov	rdx, qword ptr [rax]
0x4000a8:	lea	rax, [rbp - 0xd0]
0x4000af:	mov	rsi, rdx
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500010
<Block for 0x4000ba, 15 bytes>
0x4000ba:	lea	rax, [rbp - 0xd0]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500020
