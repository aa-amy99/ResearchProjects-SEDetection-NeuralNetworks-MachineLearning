<Block for 0x40004f, 39 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x10
0x40005b:	mov	qword ptr [rbp - 8], 0
0x400063:	lea	rsi, [rip + 0x5e]
0x40006a:	lea	rdi, [rip + 0x5a]
0x400071:	call	0x500000
<Block for 0x400076, 14 bytes>
0x400076:	mov	qword ptr [rbp - 8], rax
0x40007a:	mov	eax, 0
0x40007f:	call	0x500008
<Block for 0x400084, 4 bytes>
0x400084:	test	eax, eax
0x400086:	je	0x40009d
<Block for 0x40009d, 7 bytes>
0x40009d:	cmp	qword ptr [rbp - 8], 0
0x4000a2:	je	0x4000b0
<Block for 0x400088, 7 bytes>
0x400088:	cmp	qword ptr [rbp - 8], 0
0x40008d:	je	0x4000b0
<Block for 0x4000b0, 3 bytes>
0x4000b0:	nop	
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
<Block for 0x40008f, 12 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	mov	rdi, rax
0x400096:	call	0x500010
<Block for 0x40009b, 2 bytes>
0x40009b:	jmp	0x4000b0
