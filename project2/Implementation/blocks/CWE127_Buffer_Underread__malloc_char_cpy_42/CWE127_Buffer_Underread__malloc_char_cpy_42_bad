<Block for 0x400062, 56 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0xe0
0x400071:	mov	rax, qword ptr fs:[0x28]
0x40007a:	mov	qword ptr [rbp - 8], rax
0x40007e:	xor	eax, eax
0x400080:	mov	qword ptr [rbp - 0xd8], 0
0x40008b:	mov	rax, qword ptr [rbp - 0xd8]
0x400092:	mov	rdi, rax
0x400095:	call	0x400000
<Block for 0x40009a, 32 bytes>
0x40009a:	mov	qword ptr [rbp - 0xd8], rax
0x4000a1:	lea	rax, [rbp - 0xd0]
0x4000a8:	mov	edx, 0xc7
0x4000ad:	mov	esi, 0x43
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500010
<Block for 0x4000ba, 29 bytes>
0x4000ba:	mov	byte ptr [rbp - 9], 0
0x4000be:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000c5:	lea	rax, [rbp - 0xd0]
0x4000cc:	mov	rsi, rdx
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500018
<Block for 0x4000d7, 15 bytes>
0x4000d7:	lea	rax, [rbp - 0xd0]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500020
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000fb, 2 bytes>
0x4000fb:	leave	
0x4000fc:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500028
