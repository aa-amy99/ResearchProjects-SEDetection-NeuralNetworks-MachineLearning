<Block for 0x40015b, 56 bytes>
0x40015b:	endbr64	
0x40015f:	push	rbp
0x400160:	mov	rbp, rsp
0x400163:	sub	rsp, 0xe0
0x40016a:	mov	rax, qword ptr fs:[0x28]
0x400173:	mov	qword ptr [rbp - 8], rax
0x400177:	xor	eax, eax
0x400179:	mov	qword ptr [rbp - 0xd8], 0
0x400184:	mov	rax, qword ptr [rbp - 0xd8]
0x40018b:	mov	rdi, rax
0x40018e:	call	0x4000fd
<Block for 0x400193, 32 bytes>
0x400193:	mov	qword ptr [rbp - 0xd8], rax
0x40019a:	lea	rax, [rbp - 0xd0]
0x4001a1:	mov	edx, 0xc7
0x4001a6:	mov	esi, 0x43
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500010
<Block for 0x4001b3, 29 bytes>
0x4001b3:	mov	byte ptr [rbp - 9], 0
0x4001b7:	mov	rdx, qword ptr [rbp - 0xd8]
0x4001be:	lea	rax, [rbp - 0xd0]
0x4001c5:	mov	rsi, rdx
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500018
<Block for 0x4001d0, 15 bytes>
0x4001d0:	lea	rax, [rbp - 0xd0]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500020
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500028
