<Block for 0x40007e, 37 bytes>
0x40007e:	endbr64	
0x400082:	push	rbp
0x400083:	mov	rbp, rsp
0x400086:	sub	rsp, 0x30
0x40008a:	mov	rax, qword ptr fs:[0x28]
0x400093:	mov	qword ptr [rbp - 8], rax
0x400097:	xor	eax, eax
0x400099:	mov	eax, 5
0x40009e:	cmp	eax, 5
0x4000a1:	je	0x4000b1
<Block for 0x4000b1, 40 bytes>
0x4000b1:	movabs	rax, 0x6c69662f706d742f
0x4000bb:	movabs	rdx, 0x58585858585865
0x4000c5:	mov	qword ptr [rbp - 0x20], rax
0x4000c9:	mov	qword ptr [rbp - 0x18], rdx
0x4000cd:	lea	rax, [rbp - 0x20]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500028
<Block for 0x4000a3, 12 bytes>
0x4000a3:	lea	rdi, [rip + 0x15b]
0x4000aa:	call	0x500010
<Block for 0x4000d9, 15 bytes>
0x4000d9:	mov	dword ptr [rbp - 0x24], eax
0x4000dc:	lea	rax, [rbp - 0x20]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500010
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x400104
<Block for 0x4000e8, 6 bytes>
0x4000e8:	cmp	dword ptr [rbp - 0x24], -1
0x4000ec:	je	0x400104
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x4000ee, 12 bytes>
0x4000ee:	lea	rdi, [rip + 0xe3]
0x4000f5:	call	0x500010
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500030
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	eax, dword ptr [rbp - 0x24]
0x4000fd:	mov	edi, eax
0x4000ff:	call	0x500020
