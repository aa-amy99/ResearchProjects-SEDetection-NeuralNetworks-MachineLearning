<Block for 0x40001e, 44 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400040:	mov	eax, 0
0x400045:	call	0x400000
<Block for 0x40004a, 4 bytes>
0x40004a:	test	eax, eax
0x40004c:	je	0x40006d
<Block for 0x40006d, 8 bytes>
0x40006d:	mov	eax, dword ptr [rbp - 0xc]
0x400070:	cmp	eax, 5
0x400073:	jg	0x400094
<Block for 0x40004e, 31 bytes>
0x40004e:	mov	rax, qword ptr [rip + 0xfffab]
0x400055:	lea	rdx, [rbp - 0xc]
0x400059:	lea	rsi, [rip + 0x120]
0x400060:	mov	rdi, rax
0x400063:	mov	eax, 0
0x400068:	call	0x500008
<Block for 0x400075, 31 bytes>
0x400075:	lea	rcx, [rip + 0x164]
0x40007c:	mov	edx, 0x32
0x400081:	lea	rsi, [rip + 0x100]
0x400088:	lea	rdi, [rip + 0x121]
0x40008f:	call	0x500010
<Block for 0x400094, 16 bytes>
0x400094:	nop	
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	xor	rax, qword ptr fs:[0x28]
0x4000a2:	je	0x4000a9
<Block for 0x4000a9, 2 bytes>
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500018
