<Block for 0x4000de, 56 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	push	rbx
0x4000e7:	sub	rsp, 0xc8
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 0x18], rax
0x4000fb:	xor	eax, eax
0x4000fd:	lea	rax, [rbp - 0xc0]
0x400104:	mov	edx, 0x31
0x400109:	mov	esi, 0x41
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 29 bytes>
0x400116:	mov	byte ptr [rbp - 0x8f], 0
0x40011d:	lea	rax, [rbp - 0x80]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x41
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x400133, 25 bytes>
0x400133:	mov	byte ptr [rbp - 0x1d], 0
0x400137:	lea	rax, [rbp - 0x80]
0x40013b:	mov	qword ptr [rbp - 0xd0], rax
0x400142:	mov	edi, 8
0x400147:	call	0x500008
<Block for 0x40014c, 11 bytes>
0x40014c:	mov	rbx, rax
0x40014f:	mov	rdi, rbx
0x400152:	call	0x400216
<Block for 0x400157, 42 bytes>
0x400157:	mov	qword ptr [rbp - 0xc8], rbx
0x40015e:	mov	rax, qword ptr [rbp - 0xc8]
0x400165:	mov	rax, qword ptr [rax]
0x400168:	mov	rcx, qword ptr [rax]
0x40016b:	mov	rdx, qword ptr [rbp - 0xd0]
0x400172:	mov	rax, qword ptr [rbp - 0xc8]
0x400179:	mov	rsi, rdx
0x40017c:	mov	rdi, rax
0x40017f:	call	rcx
<Block for 0x400181, 12 bytes>
0x400181:	mov	rax, qword ptr [rbp - 0xc8]
0x400188:	test	rax, rax
0x40018b:	je	0x40019a
<Block for 0x40019a, 16 bytes>
0x40019a:	nop	
0x40019b:	mov	rax, qword ptr [rbp - 0x18]
0x40019f:	xor	rax, qword ptr fs:[0x28]
0x4001a8:	je	0x4001af
<Block for 0x40018d, 13 bytes>
0x40018d:	mov	esi, 8
0x400192:	mov	rdi, rax
0x400195:	call	0x500010
<Block for 0x4001af, 10 bytes>
0x4001af:	add	rsp, 0xc8
0x4001b6:	pop	rbx
0x4001b7:	pop	rbp
0x4001b8:	ret	
<Block for 0x4001aa, 5 bytes>
0x4001aa:	call	0x500018
