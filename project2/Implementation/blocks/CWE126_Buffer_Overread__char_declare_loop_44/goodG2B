<Block for 0x4001f5, 69 bytes>
0x4001f5:	endbr64	
0x4001f9:	push	rbp
0x4001fa:	mov	rbp, rsp
0x4001fd:	sub	rsp, 0xc0
0x400204:	mov	rax, qword ptr fs:[0x28]
0x40020d:	mov	qword ptr [rbp - 8], rax
0x400211:	xor	eax, eax
0x400213:	lea	rax, [rip - 0xd2]
0x40021a:	mov	qword ptr [rbp - 0xc0], rax
0x400221:	lea	rax, [rbp - 0xb0]
0x400228:	mov	edx, 0x31
0x40022d:	mov	esi, 0x41
0x400232:	mov	rdi, rax
0x400235:	call	0x500000
<Block for 0x40023a, 26 bytes>
0x40023a:	mov	byte ptr [rbp - 0x7f], 0
0x40023e:	lea	rax, [rbp - 0x70]
0x400242:	mov	edx, 0x63
0x400247:	mov	esi, 0x41
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500000
<Block for 0x400254, 34 bytes>
0x400254:	mov	byte ptr [rbp - 0xd], 0
0x400258:	lea	rax, [rbp - 0x70]
0x40025c:	mov	qword ptr [rbp - 0xb8], rax
0x400263:	mov	rax, qword ptr [rbp - 0xb8]
0x40026a:	mov	rdx, qword ptr [rbp - 0xc0]
0x400271:	mov	rdi, rax
0x400274:	call	rdx
<Block for 0x400276, 16 bytes>
0x400276:	nop	
0x400277:	mov	rax, qword ptr [rbp - 8]
0x40027b:	xor	rax, qword ptr fs:[0x28]
0x400284:	je	0x40028b
<Block for 0x40028b, 2 bytes>
0x40028b:	leave	
0x40028c:	ret	
<Block for 0x400286, 5 bytes>
0x400286:	call	0x500018
