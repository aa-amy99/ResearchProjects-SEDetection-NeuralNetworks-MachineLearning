<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xc8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400460
<Block for 0x40002e, 22 bytes>
0x40002e:	lea	rax, [rbp - 0x80]
0x400032:	mov	edx, 0x63
0x400037:	mov	esi, 0x41
0x40003c:	mov	rdi, rax
0x40003f:	call	0x500000
<Block for 0x400044, 34 bytes>
0x400044:	mov	byte ptr [rbp - 0x1d], 0
0x400048:	lea	rax, [rbp - 0x80]
0x40004c:	sub	rax, 8
0x400050:	mov	qword ptr [rbp - 0xd0], rax
0x400057:	lea	rax, [rbp - 0xc0]
0x40005e:	mov	rdi, rax
0x400061:	call	0x4005f2
<Block for 0x400066, 32 bytes>
0x400066:	mov	qword ptr [rbp - 0xc8], rax
0x40006d:	lea	rdx, [rbp - 0xc8]
0x400074:	lea	rax, [rbp - 0xa0]
0x40007b:	mov	rsi, rdx
0x40007e:	mov	rdi, rax
0x400081:	call	0x400642
<Block for 0x400086, 37 bytes>
0x400086:	lea	rdx, [rbp - 0xd0]
0x40008d:	mov	rsi, qword ptr [rbp - 0xa0]
0x400094:	lea	rax, [rbp - 0xc0]
0x40009b:	mov	rcx, rdx
0x40009e:	mov	edx, 1
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x400670
<Block for 0x4000ab, 15 bytes>
0x4000ab:	lea	rax, [rbp - 0xc0]
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x4005f2
<Block for 0x4000ba, 32 bytes>
0x4000ba:	mov	qword ptr [rbp - 0xc8], rax
0x4000c1:	lea	rdx, [rbp - 0xc8]
0x4000c8:	lea	rax, [rbp - 0xa0]
0x4000cf:	mov	rsi, rdx
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x400642
<Block for 0x4000da, 37 bytes>
0x4000da:	lea	rdx, [rbp - 0xd0]
0x4000e1:	mov	rsi, qword ptr [rbp - 0xa0]
0x4000e8:	lea	rax, [rbp - 0xc0]
0x4000ef:	mov	rcx, rdx
0x4000f2:	mov	edx, 1
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x400670
<Block for 0x4000ff, 15 bytes>
0x4000ff:	lea	rax, [rbp - 0xc0]
0x400106:	mov	rdi, rax
0x400109:	call	0x4005f2
<Block for 0x40010e, 32 bytes>
0x40010e:	mov	qword ptr [rbp - 0xc8], rax
0x400115:	lea	rdx, [rbp - 0xc8]
0x40011c:	lea	rax, [rbp - 0xa0]
0x400123:	mov	rsi, rdx
0x400126:	mov	rdi, rax
0x400129:	call	0x400642
<Block for 0x40012e, 37 bytes>
0x40012e:	lea	rdx, [rbp - 0xd0]
0x400135:	mov	rsi, qword ptr [rbp - 0xa0]
0x40013c:	lea	rax, [rbp - 0xc0]
0x400143:	mov	rcx, rdx
0x400146:	mov	edx, 1
0x40014b:	mov	rdi, rax
0x40014e:	call	0x400670
<Block for 0x400153, 25 bytes>
0x400153:	lea	rdx, [rbp - 0xc0]
0x40015a:	lea	rax, [rbp - 0xa0]
0x400161:	mov	rsi, rdx
0x400164:	mov	rdi, rax
0x400167:	call	0x400736
<Block for 0x40016c, 15 bytes>
0x40016c:	lea	rax, [rbp - 0xa0]
0x400173:	mov	rdi, rax
0x400176:	call	0x500008
<Block for 0x40017b, 15 bytes>
0x40017b:	lea	rax, [rbp - 0xa0]
0x400182:	mov	rdi, rax
0x400185:	call	0x4005aa
<Block for 0x40018a, 15 bytes>
0x40018a:	lea	rax, [rbp - 0xc0]
0x400191:	mov	rdi, rax
0x400194:	call	0x4005aa
<Block for 0x400199, 16 bytes>
0x400199:	nop	
0x40019a:	mov	rax, qword ptr [rbp - 0x18]
0x40019e:	xor	rax, qword ptr fs:[0x28]
0x4001a7:	je	0x4001e9
<Block for 0x4001e9, 10 bytes>
0x4001e9:	add	rsp, 0xc8
0x4001f0:	pop	rbx
0x4001f1:	pop	rbp
0x4001f2:	ret	
<Block for 0x4001a9, 2 bytes>
0x4001a9:	jmp	0x4001e4
<Block for 0x4001e4, 5 bytes>
0x4001e4:	call	0x500018
