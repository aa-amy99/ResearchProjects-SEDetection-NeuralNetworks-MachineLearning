<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4004fa
<Block for 0x40002b, 54 bytes>
0x40002b:	mov	eax, 0x10
0x400030:	sub	rax, 1
0x400034:	add	rax, 0x6c
0x400038:	mov	ecx, 0x10
0x40003d:	mov	edx, 0
0x400042:	div	rcx
0x400045:	imul	rax, rax, 0x10
0x400049:	mov	rdx, rax
0x40004c:	and	rdx, 0xfffffffffffff000
0x400053:	mov	rcx, rsp
0x400056:	sub	rcx, rdx
0x400059:	mov	rdx, rcx
0x40005c:	cmp	rsp, rdx
0x40005f:	je	0x400073
<Block for 0x400073, 26 bytes>
0x400073:	mov	rdx, rax
0x400076:	and	edx, 0xfff
0x40007c:	sub	rsp, rdx
0x40007f:	mov	rdx, rax
0x400082:	and	edx, 0xfff
0x400088:	test	rdx, rdx
0x40008b:	je	0x40009d
<Block for 0x400061, 18 bytes>
0x400061:	sub	rsp, 0x1000
0x400068:	or	qword ptr [rsp + 0xff8], 0
0x400071:	jmp	0x40005c
<Block for 0x40009d, 47 bytes>
0x40009d:	mov	rax, rsp
0x4000a0:	add	rax, 0xf
0x4000a4:	shr	rax, 4
0x4000a8:	shl	rax, 4
0x4000ac:	mov	qword ptr [rbp - 0x90], rax
0x4000b3:	mov	rax, qword ptr [rbp - 0x90]
0x4000ba:	mov	edx, 0x63
0x4000bf:	mov	esi, 0x41
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500000
<Block for 0x40008d, 63 bytes>
0x40008d:	and	eax, 0xfff
0x400092:	sub	rax, 8
0x400096:	add	rax, rsp
0x400099:	or	qword ptr [rax], 0
0x40009d:	mov	rax, rsp
0x4000a0:	add	rax, 0xf
0x4000a4:	shr	rax, 4
0x4000a8:	shl	rax, 4
0x4000ac:	mov	qword ptr [rbp - 0x90], rax
0x4000b3:	mov	rax, qword ptr [rbp - 0x90]
0x4000ba:	mov	edx, 0x63
0x4000bf:	mov	esi, 0x41
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500000
<Block for 0x40005c, 5 bytes>
0x40005c:	cmp	rsp, rdx
0x40005f:	je	0x400073
<Block for 0x4000cc, 58 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 0x90]
0x4000d3:	add	rax, 0x63
0x4000d7:	mov	byte ptr [rax], 0
0x4000da:	mov	rax, qword ptr [rbp - 0x90]
0x4000e1:	sub	rax, 8
0x4000e5:	mov	qword ptr [rbp - 0x88], rax
0x4000ec:	mov	dword ptr [rbp - 0x50], 0
0x4000f3:	lea	rdx, [rbp - 0x50]
0x4000f7:	lea	rax, [rbp - 0x80]
0x4000fb:	mov	rsi, rdx
0x4000fe:	mov	rdi, rax
0x400101:	call	0x4006b2
<Block for 0x400106, 36 bytes>
0x400106:	mov	rdx, qword ptr [rbp - 0x88]
0x40010d:	mov	qword ptr [rax], rdx
0x400110:	mov	dword ptr [rbp - 0x50], 1
0x400117:	lea	rdx, [rbp - 0x50]
0x40011b:	lea	rax, [rbp - 0x80]
0x40011f:	mov	rsi, rdx
0x400122:	mov	rdi, rax
0x400125:	call	0x4006b2
<Block for 0x40012a, 36 bytes>
0x40012a:	mov	rdx, qword ptr [rbp - 0x88]
0x400131:	mov	qword ptr [rax], rdx
0x400134:	mov	dword ptr [rbp - 0x50], 2
0x40013b:	lea	rdx, [rbp - 0x50]
0x40013f:	lea	rax, [rbp - 0x80]
0x400143:	mov	rsi, rdx
0x400146:	mov	rdi, rax
0x400149:	call	0x4006b2
<Block for 0x40014e, 29 bytes>
0x40014e:	mov	rdx, qword ptr [rbp - 0x88]
0x400155:	mov	qword ptr [rax], rdx
0x400158:	lea	rdx, [rbp - 0x80]
0x40015c:	lea	rax, [rbp - 0x50]
0x400160:	mov	rsi, rdx
0x400163:	mov	rdi, rax
0x400166:	call	0x40053a
<Block for 0x40016b, 12 bytes>
0x40016b:	lea	rax, [rbp - 0x50]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500008
<Block for 0x400177, 12 bytes>
0x400177:	lea	rax, [rbp - 0x50]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x40051a
<Block for 0x400183, 12 bytes>
0x400183:	lea	rax, [rbp - 0x80]
0x400187:	mov	rdi, rax
0x40018a:	call	0x40051a
<Block for 0x40018f, 16 bytes>
0x40018f:	nop	
0x400190:	mov	rax, qword ptr [rbp - 0x18]
0x400194:	xor	rax, qword ptr fs:[0x28]
0x40019d:	je	0x4001d9
<Block for 0x4001d9, 6 bytes>
0x4001d9:	mov	rbx, qword ptr [rbp - 8]
0x4001dd:	leave	
0x4001de:	ret	
<Block for 0x40019f, 2 bytes>
0x40019f:	jmp	0x4001d4
<Block for 0x4001d4, 5 bytes>
0x4001d4:	call	0x500018
