<Block for 0x4000dd, 57 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0x90
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	qword ptr [rbp - 0x80], 0
0x400103:	mov	dword ptr [rbp - 0x84], 0
0x40010d:	cmp	dword ptr [rbp - 0x84], 0
0x400114:	jg	0x400156
<Block for 0x400116, 10 bytes>
0x400116:	mov	edi, 0x64
0x40011b:	call	0x500000
<Block for 0x400156, 22 bytes>
0x400156:	lea	rax, [rbp - 0x70]
0x40015a:	mov	edx, 0x63
0x40015f:	mov	esi, 0x43
0x400164:	mov	rdi, rax
0x400167:	call	0x500008
<Block for 0x400120, 26 bytes>
0x400120:	mov	qword ptr [rbp - 0x78], rax
0x400124:	mov	rax, qword ptr [rbp - 0x78]
0x400128:	mov	edx, 0x63
0x40012d:	mov	esi, 0x41
0x400132:	mov	rdi, rax
0x400135:	call	0x500008
<Block for 0x40016c, 28 bytes>
0x40016c:	mov	byte ptr [rbp - 0xd], 0
0x400170:	lea	rcx, [rbp - 0x70]
0x400174:	mov	rax, qword ptr [rbp - 0x80]
0x400178:	mov	edx, 0x64
0x40017d:	mov	rsi, rcx
0x400180:	mov	rdi, rax
0x400183:	call	0x500010
<Block for 0x40013a, 28 bytes>
0x40013a:	mov	rax, qword ptr [rbp - 0x78]
0x40013e:	add	rax, 0x63
0x400142:	mov	byte ptr [rax], 0
0x400145:	mov	rax, qword ptr [rbp - 0x78]
0x400149:	mov	qword ptr [rbp - 0x80], rax
0x40014d:	add	dword ptr [rbp - 0x84], 1
0x400154:	jmp	0x40010d
<Block for 0x400188, 23 bytes>
0x400188:	mov	rax, qword ptr [rbp - 0x80]
0x40018c:	add	rax, 0x63
0x400190:	mov	byte ptr [rax], 0
0x400193:	mov	rax, qword ptr [rbp - 0x80]
0x400197:	mov	rdi, rax
0x40019a:	call	0x500018
<Block for 0x40010d, 9 bytes>
0x40010d:	cmp	dword ptr [rbp - 0x84], 0
0x400114:	jg	0x400156
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500020
