<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x100
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	mov	dword ptr [rbp - 0xf4], 0
0x400036:	jmp	0x40003f
<Block for 0x40003f, 9 bytes>
0x40003f:	cmp	dword ptr [rbp - 0xf4], 0
0x400046:	jle	0x400038
<Block for 0x400038, 16 bytes>
0x400038:	add	dword ptr [rbp - 0xf4], 1
0x40003f:	cmp	dword ptr [rbp - 0xf4], 0
0x400046:	jle	0x400038
<Block for 0x400048, 22 bytes>
0x400048:	lea	rax, [rbp - 0x70]
0x40004c:	mov	edx, 0x63
0x400051:	mov	esi, 0x43
0x400056:	mov	rdi, rax
0x400059:	call	0x500000
<Block for 0x40005e, 16 bytes>
0x40005e:	mov	byte ptr [rbp - 0xd], 0
0x400062:	lea	rax, [rbp - 0x70]
0x400066:	mov	rdi, rax
0x400069:	call	0x500008
<Block for 0x40006e, 36 bytes>
0x40006e:	mov	qword ptr [rbp - 0xe8], rax
0x400075:	mov	rdx, qword ptr [rbp - 0xe8]
0x40007c:	lea	rcx, [rbp - 0x70]
0x400080:	mov	rax, qword ptr [rbp - 0xf0]
0x400087:	mov	rsi, rcx
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500010
<Block for 0x400092, 15 bytes>
0x400092:	mov	rax, qword ptr [rbp - 0xf0]
0x400099:	mov	rdi, rax
0x40009c:	call	0x500018
<Block for 0x4000a1, 16 bytes>
0x4000a1:	nop	
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	xor	rax, qword ptr fs:[0x28]
0x4000af:	je	0x4000b6
<Block for 0x4000b6, 2 bytes>
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000b1, 5 bytes>
0x4000b1:	call	0x500020
