<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 59 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400074:	mov	dword ptr [rbp - 0x144], 0xffffffff
0x40007e:	mov	rax, qword ptr [rbp - 0x138]
0x400085:	mov	rdi, rax
0x400088:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x40008d, 27 bytes>
0x40008d:	mov	qword ptr [rbp - 0x130], rax
0x400094:	mov	edx, 6
0x400099:	mov	esi, 1
0x40009e:	mov	edi, 2
0x4000a3:	call	0x500008
<Block for 0x4000a8, 19 bytes>
0x4000a8:	mov	dword ptr [rbp - 0x140], eax
0x4000ae:	cmp	dword ptr [rbp - 0x140], -1
0x4000b5:	je	0x400235
<Block for 0x400235, 3 bytes>
0x400235:	nop	
0x400236:	jmp	0x40023f
<Block for 0x4000bb, 25 bytes>
0x4000bb:	lea	rax, [rbp - 0x120]
0x4000c2:	mov	edx, 0x10
0x4000c7:	mov	esi, 0
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500010
<Block for 0x40023f, 9 bytes>
0x40023f:	cmp	dword ptr [rbp - 0x140], -1
0x400246:	je	0x400255
<Block for 0x4000d4, 29 bytes>
0x4000d4:	mov	word ptr [rbp - 0x120], 2
0x4000dd:	mov	dword ptr [rbp - 0x11c], 0
0x4000e7:	mov	edi, 0x6987
0x4000ec:	call	0x500018
<Block for 0x400255, 9 bytes>
0x400255:	cmp	dword ptr [rbp - 0x144], -1
0x40025c:	je	0x40026b
<Block for 0x400248, 13 bytes>
0x400248:	mov	eax, dword ptr [rbp - 0x140]
0x40024e:	mov	edi, eax
0x400250:	call	0x500048
<Block for 0x4000f1, 35 bytes>
0x4000f1:	mov	word ptr [rbp - 0x11e], ax
0x4000f8:	lea	rcx, [rbp - 0x120]
0x4000ff:	mov	eax, dword ptr [rbp - 0x140]
0x400105:	mov	edx, 0x10
0x40010a:	mov	rsi, rcx
0x40010d:	mov	edi, eax
0x40010f:	call	0x500020
<Block for 0x40026b, 24 bytes>
0x40026b:	mov	rax, qword ptr [rbp - 0x138]
0x400272:	mov	qword ptr [rip - 0x271], rax
0x400279:	mov	eax, 0
0x40027e:	call	0x500050
<Block for 0x40025e, 13 bytes>
0x40025e:	mov	eax, dword ptr [rbp - 0x144]
0x400264:	mov	edi, eax
0x400266:	call	0x500048
<Block for 0x400114, 9 bytes>
0x400114:	cmp	eax, -1
0x400117:	je	0x400238
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x400238, 3 bytes>
0x400238:	nop	
0x400239:	jmp	0x40023f
<Block for 0x40011d, 18 bytes>
0x40011d:	mov	eax, dword ptr [rbp - 0x140]
0x400123:	mov	esi, 5
0x400128:	mov	edi, eax
0x40012a:	call	0x500028
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500058
<Block for 0x40012f, 9 bytes>
0x40012f:	cmp	eax, -1
0x400132:	je	0x40023b
<Block for 0x40023b, 3 bytes>
0x40023b:	nop	
0x40023c:	jmp	0x40023f
<Block for 0x400138, 23 bytes>
0x400138:	mov	eax, dword ptr [rbp - 0x140]
0x40013e:	mov	edx, 0
0x400143:	mov	esi, 0
0x400148:	mov	edi, eax
0x40014a:	call	0x500030
<Block for 0x40014f, 19 bytes>
0x40014f:	mov	dword ptr [rbp - 0x144], eax
0x400155:	cmp	dword ptr [rbp - 0x144], -1
0x40015c:	je	0x40023e
<Block for 0x400162, 51 bytes>
0x400162:	mov	eax, 0xf9
0x400167:	sub	rax, qword ptr [rbp - 0x130]
0x40016e:	mov	rdx, rax
0x400171:	mov	rcx, qword ptr [rbp - 0x138]
0x400178:	mov	rax, qword ptr [rbp - 0x130]
0x40017f:	lea	rsi, [rcx + rax]
0x400183:	mov	eax, dword ptr [rbp - 0x144]
0x400189:	mov	ecx, 0
0x40018e:	mov	edi, eax
0x400190:	call	0x500038
<Block for 0x40023e, 1 bytes>
0x40023e:	nop	
<Block for 0x400195, 19 bytes>
0x400195:	mov	dword ptr [rbp - 0x13c], eax
0x40019b:	cmp	dword ptr [rbp - 0x13c], -1
0x4001a2:	je	0x40023f
<Block for 0x4001a8, 13 bytes>
0x4001a8:	cmp	dword ptr [rbp - 0x13c], 0
0x4001af:	je	0x40023f
<Block for 0x4001b5, 52 bytes>
0x4001b5:	mov	eax, dword ptr [rbp - 0x13c]
0x4001bb:	movsxd	rdx, eax
0x4001be:	mov	rax, qword ptr [rbp - 0x130]
0x4001c5:	add	rdx, rax
0x4001c8:	mov	rax, qword ptr [rbp - 0x138]
0x4001cf:	add	rax, rdx
0x4001d2:	mov	byte ptr [rax], 0
0x4001d5:	mov	rax, qword ptr [rbp - 0x138]
0x4001dc:	mov	esi, 0xd
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500040
<Block for 0x4001e9, 17 bytes>
0x4001e9:	mov	qword ptr [rbp - 0x128], rax
0x4001f0:	cmp	qword ptr [rbp - 0x128], 0
0x4001f8:	je	0x400204
<Block for 0x400204, 20 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0x138]
0x40020b:	mov	esi, 0xa
0x400210:	mov	rdi, rax
0x400213:	call	0x500040
<Block for 0x4001fa, 30 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x128]
0x400201:	mov	byte ptr [rax], 0
0x400204:	mov	rax, qword ptr [rbp - 0x138]
0x40020b:	mov	esi, 0xa
0x400210:	mov	rdi, rax
0x400213:	call	0x500040
<Block for 0x400218, 17 bytes>
0x400218:	mov	qword ptr [rbp - 0x128], rax
0x40021f:	cmp	qword ptr [rbp - 0x128], 0
0x400227:	je	0x40023f
<Block for 0x400229, 12 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0x128]
0x400230:	mov	byte ptr [rax], 0
0x400233:	jmp	0x40023f
