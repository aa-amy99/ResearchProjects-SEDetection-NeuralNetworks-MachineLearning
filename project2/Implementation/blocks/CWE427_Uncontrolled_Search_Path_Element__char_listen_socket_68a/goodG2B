<Block for 0x40029a, 82 bytes>
0x40029a:	endbr64	
0x40029e:	push	rbp
0x40029f:	mov	rbp, rsp
0x4002a2:	sub	rsp, 0x120
0x4002a9:	mov	rax, qword ptr fs:[0x28]
0x4002b2:	mov	qword ptr [rbp - 8], rax
0x4002b6:	xor	eax, eax
0x4002b8:	movabs	rax, 0x3d48544150
0x4002c2:	mov	edx, 0
0x4002c7:	mov	qword ptr [rbp - 0x110], rax
0x4002ce:	mov	qword ptr [rbp - 0x108], rdx
0x4002d5:	lea	rdx, [rbp - 0x100]
0x4002dc:	mov	eax, 0
0x4002e1:	mov	ecx, 0x1d
0x4002e6:	mov	rdi, rdx
0x4002e9:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002ec, 51 bytes>
0x4002ec:	mov	rdx, rdi
0x4002ef:	mov	word ptr [rdx], ax
0x4002f2:	add	rdx, 2
0x4002f6:	lea	rax, [rbp - 0x110]
0x4002fd:	mov	qword ptr [rbp - 0x118], rax
0x400304:	mov	rax, qword ptr [rbp - 0x118]
0x40030b:	mov	rcx, -1
0x400312:	mov	rdx, rax
0x400315:	mov	eax, 0
0x40031a:	mov	rdi, rdx
0x40031d:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002e9, 3 bytes>
0x4002e9:	rep stosq	qword ptr [rdi], rax
<Block for 0x40031f, 54 bytes>
0x40031f:	mov	rax, rcx
0x400322:	not	rax
0x400325:	lea	rdx, [rax - 1]
0x400329:	mov	rax, qword ptr [rbp - 0x118]
0x400330:	add	rax, rdx
0x400333:	mov	dword ptr [rax], 0x6e69622f
0x400339:	mov	byte ptr [rax + 4], 0
0x40033d:	mov	rax, qword ptr [rbp - 0x118]
0x400344:	mov	qword ptr [rip - 0x343], rax
0x40034b:	mov	eax, 0
0x400350:	call	0x500060
<Block for 0x40031d, 2 bytes>
0x40031d:	repne scasb	al, byte ptr [rdi]
<Block for 0x400355, 16 bytes>
0x400355:	nop	
0x400356:	mov	rax, qword ptr [rbp - 8]
0x40035a:	xor	rax, qword ptr fs:[0x28]
0x400363:	je	0x40036a
<Block for 0x40036a, 2 bytes>
0x40036a:	leave	
0x40036b:	ret	
<Block for 0x400365, 5 bytes>
0x400365:	call	0x500058
