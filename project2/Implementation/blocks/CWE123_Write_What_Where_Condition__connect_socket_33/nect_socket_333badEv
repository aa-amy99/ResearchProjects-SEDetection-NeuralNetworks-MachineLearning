<Block for 0x400000, 110 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x50]
0x40001f:	mov	qword ptr [rbp - 0x58], rax
0x400023:	lea	rax, [rbp - 0x40]
0x400027:	mov	qword ptr [rbp - 0x40], rax
0x40002b:	lea	rax, [rbp - 0x40]
0x40002f:	mov	qword ptr [rbp - 0x38], rax
0x400033:	mov	rax, qword ptr [rbp - 0x40]
0x400037:	mov	qword ptr [rbp - 0x50], rax
0x40003b:	mov	rax, qword ptr [rbp - 0x38]
0x40003f:	mov	qword ptr [rbp - 0x48], rax
0x400043:	lea	rax, [rbp - 0x50]
0x400047:	mov	qword ptr [rbp - 0x40], rax
0x40004b:	lea	rax, [rbp - 0x50]
0x40004f:	mov	qword ptr [rbp - 0x38], rax
0x400053:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x40005a:	mov	edx, 6
0x40005f:	mov	esi, 1
0x400064:	mov	edi, 2
0x400069:	call	0x500000
<Block for 0x40006e, 9 bytes>
0x40006e:	mov	dword ptr [rbp - 0x60], eax
0x400071:	cmp	dword ptr [rbp - 0x60], -1
0x400075:	je	0x4000ed
<Block for 0x4000ed, 3 bytes>
0x4000ed:	nop	
0x4000ee:	jmp	0x4000f1
<Block for 0x400077, 22 bytes>
0x400077:	lea	rax, [rbp - 0x20]
0x40007b:	mov	edx, 0x10
0x400080:	mov	esi, 0
0x400085:	mov	rdi, rax
0x400088:	call	0x500008
<Block for 0x4000f1, 6 bytes>
0x4000f1:	cmp	dword ptr [rbp - 0x60], -1
0x4000f5:	je	0x400101
<Block for 0x40008d, 18 bytes>
0x40008d:	mov	word ptr [rbp - 0x20], 2
0x400093:	lea	rdi, [rip + 0x1ae]
0x40009a:	call	0x500010
<Block for 0x400101, 92 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0x58]
0x400105:	mov	rdx, qword ptr [rax + 8]
0x400109:	mov	rax, qword ptr [rax]
0x40010c:	mov	qword ptr [rbp - 0x30], rax
0x400110:	mov	qword ptr [rbp - 0x28], rdx
0x400114:	mov	rax, qword ptr [rbp - 0x28]
0x400118:	mov	qword ptr [rip + 0x119], rax
0x40011f:	mov	rax, qword ptr [rbp - 0x30]
0x400123:	mov	qword ptr [rip + 0x116], rax
0x40012a:	mov	rax, qword ptr [rip + 0x107]
0x400131:	mov	rdx, qword ptr [rip + 0x108]
0x400138:	mov	qword ptr [rax], rdx
0x40013b:	mov	rax, qword ptr [rip + 0xfe]
0x400142:	mov	rdx, qword ptr [rip + 0xef]
0x400149:	mov	qword ptr [rax + 8], rdx
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400170
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	eax, dword ptr [rbp - 0x60]
0x4000fa:	mov	edi, eax
0x4000fc:	call	0x500030
<Block for 0x40009f, 13 bytes>
0x40009f:	mov	dword ptr [rbp - 0x1c], eax
0x4000a2:	mov	edi, 0x6987
0x4000a7:	call	0x500018
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40015d, 2 bytes>
0x40015d:	jmp	0x40016b
<Block for 0x4000ac, 26 bytes>
0x4000ac:	mov	word ptr [rbp - 0x1e], ax
0x4000b0:	lea	rcx, [rbp - 0x20]
0x4000b4:	mov	eax, dword ptr [rbp - 0x60]
0x4000b7:	mov	edx, 0x10
0x4000bc:	mov	rsi, rcx
0x4000bf:	mov	edi, eax
0x4000c1:	call	0x500020
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500040
<Block for 0x4000c6, 10 bytes>
0x4000c6:	cmp	eax, -1
0x4000c9:	sete	al
0x4000cc:	test	al, al
0x4000ce:	jne	0x4000f0
<Block for 0x4000d0, 24 bytes>
0x4000d0:	lea	rsi, [rbp - 0x50]
0x4000d4:	mov	eax, dword ptr [rbp - 0x60]
0x4000d7:	mov	ecx, 0
0x4000dc:	mov	edx, 0x10
0x4000e1:	mov	edi, eax
0x4000e3:	call	0x500028
<Block for 0x4000f0, 1 bytes>
0x4000f0:	nop	
<Block for 0x4000e8, 5 bytes>
0x4000e8:	mov	dword ptr [rbp - 0x5c], eax
0x4000eb:	jmp	0x4000f1
