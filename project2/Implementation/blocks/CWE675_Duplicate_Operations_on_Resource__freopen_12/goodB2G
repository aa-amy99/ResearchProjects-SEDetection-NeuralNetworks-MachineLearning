<Block for 0x400085, 30 bytes>
0x400085:	endbr64	
0x400089:	push	rbp
0x40008a:	mov	rbp, rsp
0x40008d:	sub	rsp, 0x10
0x400091:	mov	qword ptr [rbp - 8], 0
0x400099:	mov	eax, 0
0x40009e:	call	0x500000
<Block for 0x4000a3, 4 bytes>
0x4000a3:	test	eax, eax
0x4000a5:	je	0x4000d6
<Block for 0x4000d6, 29 bytes>
0x4000d6:	mov	rax, qword ptr [rip + 0xfff2b]
0x4000dd:	mov	rdx, rax
0x4000e0:	lea	rsi, [rip + 0xc5]
0x4000e7:	lea	rdi, [rip + 0xc1]
0x4000ee:	call	0x500010
<Block for 0x4000a7, 29 bytes>
0x4000a7:	mov	rax, qword ptr [rip + 0xfff5a]
0x4000ae:	mov	rdx, rax
0x4000b1:	lea	rsi, [rip + 0xf4]
0x4000b8:	lea	rdi, [rip + 0xf0]
0x4000bf:	call	0x500010
<Block for 0x4000f3, 16 bytes>
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	mov	rax, qword ptr [rbp - 8]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500018
<Block for 0x4000c4, 16 bytes>
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500018
<Block for 0x400103, 10 bytes>
0x400103:	mov	eax, 0
0x400108:	call	0x500000
<Block for 0x4000d4, 2 bytes>
0x4000d4:	jmp	0x400103
<Block for 0x40010d, 3 bytes>
0x40010d:	nop	
0x40010e:	leave	
0x40010f:	ret	
