<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x40006b
<Block for 0x40006b, 6 bytes>
0x40006b:	cmp	dword ptr [rbp - 0x14], 5
0x40006f:	jg	0x400090
<Block for 0x400022, 5 bytes>
0x400022:	call	0x500008
<Block for 0x400071, 31 bytes>
0x400071:	lea	rcx, [rip + 0x168]
0x400078:	mov	edx, 0x24
0x40007d:	lea	rsi, [rip + 0xfc]
0x400084:	lea	rdi, [rip + 0x11b]
0x40008b:	call	0x500010
<Block for 0x400090, 8 bytes>
0x400090:	nop	
0x400091:	add	rsp, 0x18
0x400095:	pop	rbx
0x400096:	pop	rbp
0x400097:	ret	
<Block for 0x400027, 7 bytes>
0x400027:	and	eax, 1
0x40002a:	test	eax, eax
0x40002c:	je	0x40004b
<Block for 0x40004b, 5 bytes>
0x40004b:	call	0x500008
<Block for 0x40002e, 5 bytes>
0x40002e:	call	0x500008
<Block for 0x400050, 10 bytes>
0x400050:	shl	eax, 0x1e
0x400053:	mov	ebx, eax
0x400055:	call	0x500008
<Block for 0x400033, 10 bytes>
0x400033:	shl	eax, 0x1e
0x400036:	mov	ebx, eax
0x400038:	call	0x500008
<Block for 0x40005a, 10 bytes>
0x40005a:	shl	eax, 0xf
0x40005d:	xor	ebx, eax
0x40005f:	call	0x500008
<Block for 0x40003d, 10 bytes>
0x40003d:	shl	eax, 0xf
0x400040:	xor	ebx, eax
0x400042:	call	0x500008
<Block for 0x400064, 13 bytes>
0x400064:	xor	eax, ebx
0x400066:	not	eax
0x400068:	mov	dword ptr [rbp - 0x14], eax
0x40006b:	cmp	dword ptr [rbp - 0x14], 5
0x40006f:	jg	0x400090
<Block for 0x400047, 4 bytes>
0x400047:	xor	eax, ebx
0x400049:	jmp	0x400068
<Block for 0x400068, 9 bytes>
0x400068:	mov	dword ptr [rbp - 0x14], eax
0x40006b:	cmp	dword ptr [rbp - 0x14], 5
0x40006f:	jg	0x400090
