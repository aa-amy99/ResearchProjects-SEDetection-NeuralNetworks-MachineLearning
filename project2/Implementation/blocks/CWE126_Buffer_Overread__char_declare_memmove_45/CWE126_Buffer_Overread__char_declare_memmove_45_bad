<Block for 0x400089, 55 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0xc0
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	lea	rax, [rbp - 0xb0]
0x4000ae:	mov	edx, 0x31
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500000
<Block for 0x4000c0, 26 bytes>
0x4000c0:	mov	byte ptr [rbp - 0x7f], 0
0x4000c4:	lea	rax, [rbp - 0x70]
0x4000c8:	mov	edx, 0x63
0x4000cd:	mov	esi, 0x41
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500000
<Block for 0x4000da, 42 bytes>
0x4000da:	mov	byte ptr [rbp - 0xd], 0
0x4000de:	lea	rax, [rbp - 0xb0]
0x4000e5:	mov	qword ptr [rbp - 0xb8], rax
0x4000ec:	mov	rax, qword ptr [rbp - 0xb8]
0x4000f3:	mov	qword ptr [rip + 0x14e], rax
0x4000fa:	mov	eax, 0
0x4000ff:	call	0x400000
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500020
