<Block for 0x400120, 40 bytes>
0x400120:	endbr64	
0x400124:	push	rbp
0x400125:	mov	rbp, rsp
0x400128:	push	rbx
0x400129:	sub	rsp, 0x58
0x40012d:	mov	rax, qword ptr fs:[0x28]
0x400136:	mov	qword ptr [rbp - 0x18], rax
0x40013a:	xor	eax, eax
0x40013c:	lea	rax, [rbp - 0x50]
0x400140:	mov	rdi, rax
0x400143:	call	0x4002fe
<Block for 0x400148, 18 bytes>
0x400148:	mov	qword ptr [rbp - 0x58], 0
0x400150:	mov	edi, 0x64
0x400155:	call	0x500000
<Block for 0x40015a, 26 bytes>
0x40015a:	mov	qword ptr [rbp - 0x58], rax
0x40015e:	mov	rax, qword ptr [rbp - 0x58]
0x400162:	mov	edx, 0x63
0x400167:	mov	esi, 0x41
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500008
<Block for 0x400174, 30 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0x58]
0x400178:	add	rax, 0x63
0x40017c:	mov	byte ptr [rax], 0
0x40017f:	lea	rdx, [rbp - 0x58]
0x400183:	lea	rax, [rbp - 0x50]
0x400187:	mov	rsi, rdx
0x40018a:	mov	rdi, rax
0x40018d:	call	0x4003f4
<Block for 0x400192, 19 bytes>
0x400192:	lea	rdx, [rbp - 0x58]
0x400196:	lea	rax, [rbp - 0x50]
0x40019a:	mov	rsi, rdx
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x4003f4
<Block for 0x4001a5, 19 bytes>
0x4001a5:	lea	rdx, [rbp - 0x58]
0x4001a9:	lea	rax, [rbp - 0x50]
0x4001ad:	mov	rsi, rdx
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x4003f4
<Block for 0x4001b8, 19 bytes>
0x4001b8:	lea	rdx, [rbp - 0x50]
0x4001bc:	lea	rax, [rbp - 0x30]
0x4001c0:	mov	rsi, rdx
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x40042e
<Block for 0x4001cb, 12 bytes>
0x4001cb:	lea	rax, [rbp - 0x30]
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500028
<Block for 0x4001d7, 12 bytes>
0x4001d7:	lea	rax, [rbp - 0x30]
0x4001db:	mov	rdi, rax
0x4001de:	call	0x40031e
<Block for 0x4001e3, 12 bytes>
0x4001e3:	lea	rax, [rbp - 0x50]
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x40031e
<Block for 0x4001ef, 16 bytes>
0x4001ef:	nop	
0x4001f0:	mov	rax, qword ptr [rbp - 0x18]
0x4001f4:	xor	rax, qword ptr fs:[0x28]
0x4001fd:	je	0x400239
<Block for 0x400239, 7 bytes>
0x400239:	add	rsp, 0x58
0x40023d:	pop	rbx
0x40023e:	pop	rbp
0x40023f:	ret	
<Block for 0x4001ff, 2 bytes>
0x4001ff:	jmp	0x400234
<Block for 0x400234, 5 bytes>
0x400234:	call	0x500020
