<Block for 0x400278, 81 bytes>
0x400278:	endbr64	
0x40027c:	push	rbp
0x40027d:	mov	rbp, rsp
0x400280:	add	rsp, -0x80
0x400284:	mov	rax, qword ptr fs:[0x28]
0x40028d:	mov	qword ptr [rbp - 8], rax
0x400291:	xor	eax, eax
0x400293:	mov	eax, 0x10
0x400298:	sub	rax, 1
0x40029c:	add	rax, 0x6c
0x4002a0:	mov	esi, 0x10
0x4002a5:	mov	edx, 0
0x4002aa:	div	rsi
0x4002ad:	imul	rax, rax, 0x10
0x4002b1:	mov	rdx, rax
0x4002b4:	and	rdx, 0xfffffffffffff000
0x4002bb:	mov	rcx, rsp
0x4002be:	sub	rcx, rdx
0x4002c1:	mov	rdx, rcx
0x4002c4:	cmp	rsp, rdx
0x4002c7:	je	0x4002db
<Block for 0x4002db, 26 bytes>
0x4002db:	mov	rdx, rax
0x4002de:	and	edx, 0xfff
0x4002e4:	sub	rsp, rdx
0x4002e7:	mov	rdx, rax
0x4002ea:	and	edx, 0xfff
0x4002f0:	test	rdx, rdx
0x4002f3:	je	0x400305
<Block for 0x4002c9, 18 bytes>
0x4002c9:	sub	rsp, 0x1000
0x4002d0:	or	qword ptr [rsp + 0xff8], 0
0x4002d9:	jmp	0x4002c4
<Block for 0x400305, 41 bytes>
0x400305:	mov	rax, rsp
0x400308:	add	rax, 0xf
0x40030c:	shr	rax, 4
0x400310:	shl	rax, 4
0x400314:	mov	qword ptr [rbp - 0x78], rax
0x400318:	mov	rax, qword ptr [rbp - 0x78]
0x40031c:	mov	edx, 0x63
0x400321:	mov	esi, 0x41
0x400326:	mov	rdi, rax
0x400329:	call	0x500000
<Block for 0x4002f5, 57 bytes>
0x4002f5:	and	eax, 0xfff
0x4002fa:	sub	rax, 8
0x4002fe:	add	rax, rsp
0x400301:	or	qword ptr [rax], 0
0x400305:	mov	rax, rsp
0x400308:	add	rax, 0xf
0x40030c:	shr	rax, 4
0x400310:	shl	rax, 4
0x400314:	mov	qword ptr [rbp - 0x78], rax
0x400318:	mov	rax, qword ptr [rbp - 0x78]
0x40031c:	mov	edx, 0x63
0x400321:	mov	esi, 0x41
0x400326:	mov	rdi, rax
0x400329:	call	0x500000
<Block for 0x4002c4, 5 bytes>
0x4002c4:	cmp	rsp, rdx
0x4002c7:	je	0x4002db
<Block for 0x40032e, 21 bytes>
0x40032e:	mov	rax, qword ptr [rbp - 0x78]
0x400332:	add	rax, 0x63
0x400336:	mov	byte ptr [rax], 0
0x400339:	mov	eax, dword ptr [rip + 0x8d]
0x40033f:	test	eax, eax
0x400341:	je	0x40034b
<Block for 0x40034b, 22 bytes>
0x40034b:	lea	rax, [rbp - 0x70]
0x40034f:	mov	edx, 0x63
0x400354:	mov	esi, 0x43
0x400359:	mov	rdi, rax
0x40035c:	call	0x500000
<Block for 0x400343, 30 bytes>
0x400343:	mov	rax, qword ptr [rbp - 0x78]
0x400347:	mov	qword ptr [rbp - 0x80], rax
0x40034b:	lea	rax, [rbp - 0x70]
0x40034f:	mov	edx, 0x63
0x400354:	mov	esi, 0x43
0x400359:	mov	rdi, rax
0x40035c:	call	0x500000
<Block for 0x400361, 28 bytes>
0x400361:	mov	byte ptr [rbp - 0xd], 0
0x400365:	lea	rcx, [rbp - 0x70]
0x400369:	mov	rax, qword ptr [rbp - 0x80]
0x40036d:	mov	edx, 0x63
0x400372:	mov	rsi, rcx
0x400375:	mov	rdi, rax
0x400378:	call	0x500008
<Block for 0x40037d, 23 bytes>
0x40037d:	mov	rax, qword ptr [rbp - 0x80]
0x400381:	add	rax, 0x63
0x400385:	mov	byte ptr [rax], 0
0x400388:	mov	rax, qword ptr [rbp - 0x80]
0x40038c:	mov	rdi, rax
0x40038f:	call	0x500010
<Block for 0x400394, 16 bytes>
0x400394:	nop	
0x400395:	mov	rax, qword ptr [rbp - 8]
0x400399:	xor	rax, qword ptr fs:[0x28]
0x4003a2:	je	0x4003a9
<Block for 0x4003a9, 2 bytes>
0x4003a9:	leave	
0x4003aa:	ret	
<Block for 0x4003a4, 5 bytes>
0x4003a4:	call	0x500018
