<Block for 0x40009a, 30 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x20
0x4000a6:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000ad:	mov	eax, dword ptr [rip + 0xfff4d]
0x4000b3:	cmp	eax, 5
0x4000b6:	je	0x4000c6
<Block for 0x4000c6, 24 bytes>
0x4000c6:	mov	dword ptr [rbp - 0x14], 0x14
0x4000cd:	mov	eax, dword ptr [rbp - 0x14]
0x4000d0:	cdqe	
0x4000d2:	shl	rax, 2
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500008
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rdi, [rip + 0x13c]
0x4000bf:	call	0x500028
<Block for 0x4000de, 11 bytes>
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	cmp	qword ptr [rbp - 8], 0
0x4000e7:	jne	0x4000f3
<Block for 0x4000c4, 2 bytes>
0x4000c4:	jmp	0x4000cd
<Block for 0x4000e9, 10 bytes>
0x4000e9:	mov	edi, 0xffffffff
0x4000ee:	call	0x500010
<Block for 0x4000f3, 10 bytes>
0x4000f3:	mov	qword ptr [rbp - 0x10], 0
0x4000fb:	jmp	0x40011b
<Block for 0x4000cd, 17 bytes>
0x4000cd:	mov	eax, dword ptr [rbp - 0x14]
0x4000d0:	cdqe	
0x4000d2:	shl	rax, 2
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500008
<Block for 0x40011b, 11 bytes>
0x40011b:	mov	eax, dword ptr [rbp - 0x14]
0x40011e:	cdqe	
0x400120:	cmp	qword ptr [rbp - 0x10], rax
0x400124:	jb	0x4000fd
<Block for 0x4000fd, 41 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x10]
0x400101:	lea	rdx, [rax*4]
0x400109:	mov	rax, qword ptr [rbp - 8]
0x40010d:	add	rax, rdx
0x400110:	mov	dword ptr [rax], 0
0x400116:	add	qword ptr [rbp - 0x10], 1
0x40011b:	mov	eax, dword ptr [rbp - 0x14]
0x40011e:	cdqe	
0x400120:	cmp	qword ptr [rbp - 0x10], rax
0x400124:	jb	0x4000fd
<Block for 0x400126, 13 bytes>
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	mov	eax, dword ptr [rax]
0x40012c:	mov	edi, eax
0x40012e:	call	0x500018
<Block for 0x400133, 12 bytes>
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	mov	rdi, rax
0x40013a:	call	0x500020
<Block for 0x40013f, 3 bytes>
0x40013f:	nop	
0x400140:	leave	
0x400141:	ret	
