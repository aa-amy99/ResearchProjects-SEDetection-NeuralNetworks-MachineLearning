<Block for 0x4000e8, 53 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	add	rsp, -0x80
0x4000f4:	mov	qword ptr [rbp - 0x78], rdi
0x4000f8:	mov	rax, qword ptr fs:[0x28]
0x400101:	mov	qword ptr [rbp - 8], rax
0x400105:	xor	eax, eax
0x400107:	lea	rax, [rbp - 0x70]
0x40010b:	mov	edx, 0x63
0x400110:	mov	esi, 0x43
0x400115:	mov	rdi, rax
0x400118:	call	0x500000
<Block for 0x40011d, 28 bytes>
0x40011d:	mov	byte ptr [rbp - 0xd], 0
0x400121:	mov	rcx, qword ptr [rbp - 0x78]
0x400125:	lea	rax, [rbp - 0x70]
0x400129:	mov	edx, 0x64
0x40012e:	mov	rsi, rcx
0x400131:	mov	rdi, rax
0x400134:	call	0x500008
<Block for 0x400139, 16 bytes>
0x400139:	mov	byte ptr [rbp - 0xd], 0
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	rdi, rax
0x400144:	call	0x500010
<Block for 0x400149, 16 bytes>
0x400149:	nop	
0x40014a:	mov	rax, qword ptr [rbp - 8]
0x40014e:	xor	rax, qword ptr fs:[0x28]
0x400157:	je	0x40015e
<Block for 0x40015e, 2 bytes>
0x40015e:	leave	
0x40015f:	ret	
<Block for 0x400159, 5 bytes>
0x400159:	call	0x500018
