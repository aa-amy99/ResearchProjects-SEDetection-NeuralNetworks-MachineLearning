<Block for 0x40004e, 47 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	add	rsp, -0x80
0x40005a:	mov	rax, qword ptr fs:[0x28]
0x400063:	mov	qword ptr [rbp - 8], rax
0x400067:	xor	eax, eax
0x400069:	mov	qword ptr [rbp - 0x78], 0
0x400071:	lea	rax, [rbp - 0x78]
0x400075:	mov	rdi, rax
0x400078:	call	0x400000
<Block for 0x40007d, 22 bytes>
0x40007d:	lea	rax, [rbp - 0x70]
0x400081:	mov	edx, 0x63
0x400086:	mov	esi, 0x43
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500008
<Block for 0x400093, 16 bytes>
0x400093:	mov	byte ptr [rbp - 0xd], 0
0x400097:	lea	rax, [rbp - 0x70]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500010
<Block for 0x4000a3, 22 bytes>
0x4000a3:	mov	rdx, rax
0x4000a6:	mov	rcx, qword ptr [rbp - 0x78]
0x4000aa:	lea	rax, [rbp - 0x70]
0x4000ae:	mov	rsi, rcx
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000b9, 16 bytes>
0x4000b9:	mov	byte ptr [rbp - 0xd], 0
0x4000bd:	lea	rax, [rbp - 0x70]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500020
<Block for 0x4000c9, 9 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 0x78]
0x4000cd:	test	rax, rax
0x4000d0:	je	0x4000de
<Block for 0x4000de, 16 bytes>
0x4000de:	nop	
0x4000df:	mov	rax, qword ptr [rbp - 8]
0x4000e3:	xor	rax, qword ptr fs:[0x28]
0x4000ec:	je	0x4000f3
<Block for 0x4000d2, 12 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x78]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500028
<Block for 0x4000f3, 2 bytes>
0x4000f3:	leave	
0x4000f4:	ret	
<Block for 0x4000ee, 5 bytes>
0x4000ee:	call	0x500030
