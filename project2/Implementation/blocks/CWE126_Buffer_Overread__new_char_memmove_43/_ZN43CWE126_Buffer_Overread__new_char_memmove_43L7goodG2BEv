<Block for 0x400143, 47 bytes>
0x400143:	endbr64	
0x400147:	push	rbp
0x400148:	mov	rbp, rsp
0x40014b:	add	rsp, -0x80
0x40014f:	mov	rax, qword ptr fs:[0x28]
0x400158:	mov	qword ptr [rbp - 8], rax
0x40015c:	xor	eax, eax
0x40015e:	mov	qword ptr [rbp - 0x78], 0
0x400166:	lea	rax, [rbp - 0x78]
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4000f5
<Block for 0x400172, 22 bytes>
0x400172:	lea	rax, [rbp - 0x70]
0x400176:	mov	edx, 0x63
0x40017b:	mov	esi, 0x43
0x400180:	mov	rdi, rax
0x400183:	call	0x500008
<Block for 0x400188, 16 bytes>
0x400188:	mov	byte ptr [rbp - 0xd], 0
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	rdi, rax
0x400193:	call	0x500010
<Block for 0x400198, 22 bytes>
0x400198:	mov	rdx, rax
0x40019b:	mov	rcx, qword ptr [rbp - 0x78]
0x40019f:	lea	rax, [rbp - 0x70]
0x4001a3:	mov	rsi, rcx
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500018
<Block for 0x4001ae, 16 bytes>
0x4001ae:	mov	byte ptr [rbp - 0xd], 0
0x4001b2:	lea	rax, [rbp - 0x70]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x500020
<Block for 0x4001be, 9 bytes>
0x4001be:	mov	rax, qword ptr [rbp - 0x78]
0x4001c2:	test	rax, rax
0x4001c5:	je	0x4001d3
<Block for 0x4001d3, 16 bytes>
0x4001d3:	nop	
0x4001d4:	mov	rax, qword ptr [rbp - 8]
0x4001d8:	xor	rax, qword ptr fs:[0x28]
0x4001e1:	je	0x4001e8
<Block for 0x4001c7, 12 bytes>
0x4001c7:	mov	rax, qword ptr [rbp - 0x78]
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x500028
<Block for 0x4001e8, 2 bytes>
0x4001e8:	leave	
0x4001e9:	ret	
<Block for 0x4001e3, 5 bytes>
0x4001e3:	call	0x500030
