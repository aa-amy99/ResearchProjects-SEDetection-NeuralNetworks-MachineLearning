<Block for 0x4001a0, 55 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	sub	rsp, 0x130
0x4001af:	mov	rax, qword ptr fs:[0x28]
0x4001b8:	mov	qword ptr [rbp - 8], rax
0x4001bc:	xor	eax, eax
0x4001be:	lea	rax, [rbp - 0x120]
0x4001c5:	mov	edx, 0x31
0x4001ca:	mov	esi, 0x41
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500000
<Block for 0x4001d7, 32 bytes>
0x4001d7:	mov	byte ptr [rbp - 0xef], 0
0x4001de:	lea	rax, [rbp - 0xe0]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x41
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500000
<Block for 0x4001f7, 41 bytes>
0x4001f7:	mov	byte ptr [rbp - 0x7d], 0
0x4001fb:	lea	rax, [rbp - 0xe0]
0x400202:	mov	qword ptr [rbp - 0x128], rax
0x400209:	nop	
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	edx, 0x63
0x400213:	mov	esi, 0x43
0x400218:	mov	rdi, rax
0x40021b:	call	0x500000
<Block for 0x400220, 16 bytes>
0x400220:	mov	byte ptr [rbp - 0xd], 0
0x400224:	lea	rax, [rbp - 0x70]
0x400228:	mov	rdi, rax
0x40022b:	call	0x500008
<Block for 0x400230, 25 bytes>
0x400230:	mov	rdx, rax
0x400233:	mov	rcx, qword ptr [rbp - 0x128]
0x40023a:	lea	rax, [rbp - 0x70]
0x40023e:	mov	rsi, rcx
0x400241:	mov	rdi, rax
0x400244:	call	0x500010
<Block for 0x400249, 16 bytes>
0x400249:	mov	byte ptr [rbp - 0xd], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	rdi, rax
0x400254:	call	0x500018
<Block for 0x400259, 16 bytes>
0x400259:	nop	
0x40025a:	mov	rax, qword ptr [rbp - 8]
0x40025e:	xor	rax, qword ptr fs:[0x28]
0x400267:	je	0x40026e
<Block for 0x40026e, 2 bytes>
0x40026e:	leave	
0x40026f:	ret	
<Block for 0x400269, 5 bytes>
0x400269:	call	0x500020
