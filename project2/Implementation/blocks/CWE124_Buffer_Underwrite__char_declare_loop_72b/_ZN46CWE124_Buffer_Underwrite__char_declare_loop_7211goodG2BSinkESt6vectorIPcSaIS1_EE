<Block for 0x4000b9, 57 bytes>
0x4000b9:	endbr64	
0x4000bd:	push	rbp
0x4000be:	mov	rbp, rsp
0x4000c1:	sub	rsp, 0x90
0x4000c8:	mov	qword ptr [rbp - 0x88], rdi
0x4000cf:	mov	rax, qword ptr fs:[0x28]
0x4000d8:	mov	qword ptr [rbp - 8], rax
0x4000dc:	xor	eax, eax
0x4000de:	mov	rax, qword ptr [rbp - 0x88]
0x4000e5:	mov	esi, 2
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x400174
<Block for 0x4000f2, 29 bytes>
0x4000f2:	mov	rax, qword ptr [rax]
0x4000f5:	mov	qword ptr [rbp - 0x78], rax
0x4000f9:	lea	rax, [rbp - 0x70]
0x4000fd:	mov	edx, 0x63
0x400102:	mov	esi, 0x43
0x400107:	mov	rdi, rax
0x40010a:	call	0x500000
<Block for 0x40010f, 19 bytes>
0x40010f:	mov	byte ptr [rbp - 0xd], 0
0x400113:	mov	qword ptr [rbp - 0x80], 0
0x40011b:	cmp	qword ptr [rbp - 0x80], 0x63
0x400120:	ja	0x400144
<Block for 0x400122, 34 bytes>
0x400122:	mov	rdx, qword ptr [rbp - 0x78]
0x400126:	mov	rax, qword ptr [rbp - 0x80]
0x40012a:	add	rdx, rax
0x40012d:	lea	rcx, [rbp - 0x70]
0x400131:	mov	rax, qword ptr [rbp - 0x80]
0x400135:	add	rax, rcx
0x400138:	movzx	eax, byte ptr [rax]
0x40013b:	mov	byte ptr [rdx], al
0x40013d:	add	qword ptr [rbp - 0x80], 1
0x400142:	jmp	0x40011b
<Block for 0x400144, 23 bytes>
0x400144:	mov	rax, qword ptr [rbp - 0x78]
0x400148:	add	rax, 0x63
0x40014c:	mov	byte ptr [rax], 0
0x40014f:	mov	rax, qword ptr [rbp - 0x78]
0x400153:	mov	rdi, rax
0x400156:	call	0x500008
<Block for 0x40011b, 7 bytes>
0x40011b:	cmp	qword ptr [rbp - 0x80], 0x63
0x400120:	ja	0x400144
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500010
