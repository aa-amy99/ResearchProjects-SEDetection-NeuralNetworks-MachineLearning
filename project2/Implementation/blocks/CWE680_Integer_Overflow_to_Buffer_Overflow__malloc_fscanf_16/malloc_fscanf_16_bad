<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	rax, qword ptr [rip + 0xfffd7]
0x400029:	lea	rdx, [rbp - 0x1c]
0x40002d:	lea	rsi, [rip + 0x13c]
0x400034:	mov	rdi, rax
0x400037:	mov	eax, 0
0x40003c:	call	0x500008
<Block for 0x400041, 18 bytes>
0x400041:	nop	
0x400042:	mov	eax, dword ptr [rbp - 0x1c]
0x400045:	cdqe	
0x400047:	shl	rax, 2
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500010
<Block for 0x400053, 11 bytes>
0x400053:	mov	qword ptr [rbp - 0x10], rax
0x400057:	cmp	qword ptr [rbp - 0x10], 0
0x40005c:	jne	0x400068
<Block for 0x40005e, 10 bytes>
0x40005e:	mov	edi, 0xffffffff
0x400063:	call	0x500018
<Block for 0x400068, 10 bytes>
0x400068:	mov	qword ptr [rbp - 0x18], 0
0x400070:	jmp	0x400090
<Block for 0x400090, 11 bytes>
0x400090:	mov	eax, dword ptr [rbp - 0x1c]
0x400093:	cdqe	
0x400095:	cmp	qword ptr [rbp - 0x18], rax
0x400099:	jb	0x400072
<Block for 0x400072, 41 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0x18]
0x400076:	lea	rdx, [rax*4]
0x40007e:	mov	rax, qword ptr [rbp - 0x10]
0x400082:	add	rax, rdx
0x400085:	mov	dword ptr [rax], 0
0x40008b:	add	qword ptr [rbp - 0x18], 1
0x400090:	mov	eax, dword ptr [rbp - 0x1c]
0x400093:	cdqe	
0x400095:	cmp	qword ptr [rbp - 0x18], rax
0x400099:	jb	0x400072
<Block for 0x40009b, 13 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x10]
0x40009f:	mov	eax, dword ptr [rax]
0x4000a1:	mov	edi, eax
0x4000a3:	call	0x500020
<Block for 0x4000a8, 12 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0x10]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500028
<Block for 0x4000b4, 16 bytes>
0x4000b4:	nop	
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	xor	rax, qword ptr fs:[0x28]
0x4000c2:	je	0x4000c9
<Block for 0x4000c9, 2 bytes>
0x4000c9:	leave	
0x4000ca:	ret	
<Block for 0x4000c4, 5 bytes>
0x4000c4:	call	0x500030
