<Block for 0x400000, 64 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	movabs	rax, 0x5858585858646162
0x40002a:	mov	qword ptr [rbp - 0x12], rax
0x40002e:	mov	word ptr [rbp - 0xa], 0x58
0x400034:	lea	rax, [rbp - 0x12]
0x400038:	mov	rdi, rax
0x40003b:	call	0x500000
<Block for 0x400040, 9 bytes>
0x400040:	mov	dword ptr [rbp - 0x24], eax
0x400043:	cmp	dword ptr [rbp - 0x24], -1
0x400047:	je	0x40008e
<Block for 0x40008e, 16 bytes>
0x40008e:	nop	
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	xor	rax, qword ptr fs:[0x28]
0x40009c:	je	0x4000a3
<Block for 0x400049, 17 bytes>
0x400049:	mov	eax, dword ptr [rbp - 0x24]
0x40004c:	lea	rsi, [rip + 0x11c]
0x400053:	mov	edi, eax
0x400055:	call	0x500008
<Block for 0x4000a3, 2 bytes>
0x4000a3:	leave	
0x4000a4:	ret	
<Block for 0x40009e, 5 bytes>
0x40009e:	call	0x500020
<Block for 0x40005a, 11 bytes>
0x40005a:	mov	qword ptr [rbp - 0x20], rax
0x40005e:	cmp	qword ptr [rbp - 0x20], 0
0x400063:	je	0x40008e
<Block for 0x400065, 29 bytes>
0x400065:	mov	rax, qword ptr [rbp - 0x20]
0x400069:	mov	rcx, rax
0x40006c:	mov	edx, 0xe
0x400071:	mov	esi, 1
0x400076:	lea	rdi, [rip + 0xf4]
0x40007d:	call	0x500010
<Block for 0x400082, 12 bytes>
0x400082:	mov	rax, qword ptr [rbp - 0x20]
0x400086:	mov	rdi, rax
0x400089:	call	0x500018
