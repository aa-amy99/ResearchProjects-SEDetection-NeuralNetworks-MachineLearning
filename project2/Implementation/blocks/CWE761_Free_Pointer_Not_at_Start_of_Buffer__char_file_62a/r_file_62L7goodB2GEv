<Block for 0x4000a4, 37 bytes>
0x4000a4:	endbr64	
0x4000a8:	push	rbp
0x4000a9:	mov	rbp, rsp
0x4000ac:	sub	rsp, 0x20
0x4000b0:	mov	rax, qword ptr fs:[0x28]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	xor	eax, eax
0x4000bf:	mov	edi, 0x64
0x4000c4:	call	0x500000
<Block for 0x4000c9, 13 bytes>
0x4000c9:	mov	qword ptr [rbp - 0x18], rax
0x4000cd:	mov	rax, qword ptr [rbp - 0x18]
0x4000d1:	test	rax, rax
0x4000d4:	jne	0x4000e0
<Block for 0x4000d6, 10 bytes>
0x4000d6:	mov	edi, 0xffffffff
0x4000db:	call	0x500008
<Block for 0x4000e0, 19 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 0x18]
0x4000e4:	mov	byte ptr [rax], 0
0x4000e7:	lea	rax, [rbp - 0x18]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500030
<Block for 0x4000f3, 20 bytes>
0x4000f3:	mov	qword ptr [rbp - 0x10], 0
0x4000fb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500038
<Block for 0x400107, 6 bytes>
0x400107:	cmp	qword ptr [rbp - 0x10], rax
0x40010b:	jae	0x400134
<Block for 0x40010d, 18 bytes>
0x40010d:	mov	rdx, qword ptr [rbp - 0x18]
0x400111:	mov	rax, qword ptr [rbp - 0x10]
0x400115:	add	rax, rdx
0x400118:	movzx	eax, byte ptr [rax]
0x40011b:	cmp	al, 0x53
0x40011d:	jne	0x40012d
<Block for 0x400134, 12 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0x18]
0x400138:	mov	rdi, rax
0x40013b:	call	0x500020
<Block for 0x40011f, 12 bytes>
0x40011f:	lea	rdi, [rip + 0x41]
0x400126:	call	0x500018
<Block for 0x40012d, 7 bytes>
0x40012d:	add	qword ptr [rbp - 0x10], 1
0x400132:	jmp	0x4000fb
<Block for 0x400140, 16 bytes>
0x400140:	nop	
0x400141:	mov	rax, qword ptr [rbp - 8]
0x400145:	xor	rax, qword ptr fs:[0x28]
0x40014e:	je	0x400155
<Block for 0x40012b, 2 bytes>
0x40012b:	jmp	0x400134
<Block for 0x4000fb, 12 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500038
<Block for 0x400155, 2 bytes>
0x400155:	leave	
0x400156:	ret	
<Block for 0x400150, 5 bytes>
0x400150:	call	0x500028
