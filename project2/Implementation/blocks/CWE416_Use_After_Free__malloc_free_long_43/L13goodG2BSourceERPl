<Block for 0x4000d0, 26 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x20
0x4000dc:	mov	qword ptr [rbp - 0x18], rdi
0x4000e0:	mov	edi, 0x320
0x4000e5:	call	0x500000
<Block for 0x4000ea, 22 bytes>
0x4000ea:	mov	rdx, rax
0x4000ed:	mov	rax, qword ptr [rbp - 0x18]
0x4000f1:	mov	qword ptr [rax], rdx
0x4000f4:	mov	rax, qword ptr [rbp - 0x18]
0x4000f8:	mov	rax, qword ptr [rax]
0x4000fb:	test	rax, rax
0x4000fe:	jne	0x40010a
<Block for 0x400100, 10 bytes>
0x400100:	mov	edi, 0xffffffff
0x400105:	call	0x500008
<Block for 0x40010a, 15 bytes>
0x40010a:	mov	qword ptr [rbp - 8], 0
0x400112:	cmp	qword ptr [rbp - 8], 0x63
0x400117:	ja	0x400139
<Block for 0x400119, 32 bytes>
0x400119:	mov	rax, qword ptr [rbp - 0x18]
0x40011d:	mov	rax, qword ptr [rax]
0x400120:	mov	rdx, qword ptr [rbp - 8]
0x400124:	shl	rdx, 3
0x400128:	add	rax, rdx
0x40012b:	mov	qword ptr [rax], 5
0x400132:	add	qword ptr [rbp - 8], 1
0x400137:	jmp	0x400112
<Block for 0x400139, 3 bytes>
0x400139:	nop	
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x400112, 7 bytes>
0x400112:	cmp	qword ptr [rbp - 8], 0x63
0x400117:	ja	0x400139
