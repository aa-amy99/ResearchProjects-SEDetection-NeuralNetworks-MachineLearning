<Block for 0x40023a, 30 bytes>
0x40023a:	endbr64	
0x40023e:	push	rbp
0x40023f:	mov	rbp, rsp
0x400242:	sub	rsp, 0x10
0x400246:	mov	qword ptr [rbp - 0x10], 0
0x40024e:	mov	eax, dword ptr [rip + 0xffdac]
0x400254:	test	eax, eax
0x400256:	je	0x4002a7
<Block for 0x4002a7, 10 bytes>
0x4002a7:	mov	eax, dword ptr [rip + 0xffd53]
0x4002ad:	test	eax, eax
0x4002af:	je	0x4002c0
<Block for 0x400258, 10 bytes>
0x400258:	mov	edi, 0x320
0x40025d:	call	0x500008
<Block for 0x4002c0, 3 bytes>
0x4002c0:	nop	
0x4002c1:	leave	
0x4002c2:	ret	
<Block for 0x4002b1, 15 bytes>
0x4002b1:	mov	rax, qword ptr [rbp - 0x10]
0x4002b5:	mov	rax, qword ptr [rax]
0x4002b8:	mov	rdi, rax
0x4002bb:	call	0x500020
<Block for 0x400262, 11 bytes>
0x400262:	mov	qword ptr [rbp - 0x10], rax
0x400266:	cmp	qword ptr [rbp - 0x10], 0
0x40026b:	jne	0x400277
<Block for 0x40026d, 10 bytes>
0x40026d:	mov	edi, 0xffffffff
0x400272:	call	0x500010
<Block for 0x400277, 10 bytes>
0x400277:	mov	qword ptr [rbp - 8], 0
0x40027f:	jmp	0x4002a0
<Block for 0x4002a0, 7 bytes>
0x4002a0:	cmp	qword ptr [rbp - 8], 0x63
0x4002a5:	jbe	0x400281
<Block for 0x400281, 38 bytes>
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	lea	rdx, [rax*8]
0x40028d:	mov	rax, qword ptr [rbp - 0x10]
0x400291:	add	rax, rdx
0x400294:	mov	qword ptr [rax], 5
0x40029b:	add	qword ptr [rbp - 8], 1
0x4002a0:	cmp	qword ptr [rbp - 8], 0x63
0x4002a5:	jbe	0x400281
