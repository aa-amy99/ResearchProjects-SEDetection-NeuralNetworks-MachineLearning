<Block for 0x400057, 56 bytes>
0x400057:	endbr64	
0x40005b:	push	rbp
0x40005c:	mov	rbp, rsp
0x40005f:	sub	rsp, 0x20
0x400063:	mov	rax, qword ptr fs:[0x28]
0x40006c:	mov	qword ptr [rbp - 8], rax
0x400070:	xor	eax, eax
0x400072:	nop	
0x400073:	endbr64	
0x400077:	mov	dword ptr [rbp - 0x18], 1
0x40007e:	mov	dword ptr [rbp - 0x14], 2
0x400085:	mov	edi, 8
0x40008a:	call	0x500000
<Block for 0x40008f, 36 bytes>
0x40008f:	mov	qword ptr [rbp - 0x20], rax
0x400093:	mov	rax, qword ptr [rbp - 0x20]
0x400097:	mov	rdx, qword ptr [rbp - 0x18]
0x40009b:	mov	qword ptr [rax], rdx
0x40009e:	mov	rax, qword ptr [rbp - 0x20]
0x4000a2:	mov	rax, qword ptr [rax]
0x4000a5:	mov	qword ptr [rbp - 0x10], rax
0x4000a9:	mov	eax, dword ptr [rbp - 0x10]
0x4000ac:	mov	edi, eax
0x4000ae:	call	0x500010
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 0xc]
0x4000b6:	mov	edi, eax
0x4000b8:	call	0x500010
<Block for 0x4000bd, 9 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x20]
0x4000c1:	test	rax, rax
0x4000c4:	je	0x4000d3
<Block for 0x4000d3, 16 bytes>
0x4000d3:	nop	
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	xor	rax, qword ptr fs:[0x28]
0x4000e1:	je	0x4000e8
<Block for 0x4000c6, 13 bytes>
0x4000c6:	mov	esi, 8
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500008
<Block for 0x4000e8, 2 bytes>
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000e3, 5 bytes>
0x4000e3:	call	0x500018
