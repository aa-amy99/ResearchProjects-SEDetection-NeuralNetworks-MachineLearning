<Block for 0x4000bb, 30 bytes>
0x4000bb:	endbr64	
0x4000bf:	push	rbp
0x4000c0:	mov	rbp, rsp
0x4000c3:	sub	rsp, 0x10
0x4000c7:	mov	qword ptr [rbp - 8], 0
0x4000cf:	mov	eax, 0
0x4000d4:	call	0x400000
<Block for 0x4000d9, 4 bytes>
0x4000d9:	test	eax, eax
0x4000db:	je	0x400138
<Block for 0x400138, 10 bytes>
0x400138:	mov	eax, 0
0x40013d:	call	0x40000f
<Block for 0x4000dd, 10 bytes>
0x4000dd:	mov	edi, 0x320
0x4000e2:	call	0x500000
<Block for 0x400142, 4 bytes>
0x400142:	test	eax, eax
0x400144:	je	0x400152
<Block for 0x4000e7, 11 bytes>
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	cmp	qword ptr [rbp - 8], 0
0x4000f0:	jne	0x4000fc
<Block for 0x400152, 3 bytes>
0x400152:	nop	
0x400153:	leave	
0x400154:	ret	
<Block for 0x400146, 12 bytes>
0x400146:	lea	rdi, [rip + 0x1f5]
0x40014d:	call	0x500020
<Block for 0x4000f2, 10 bytes>
0x4000f2:	mov	edi, 0xffffffff
0x4000f7:	call	0x500008
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x10], 0
0x400104:	jmp	0x400125
<Block for 0x400125, 7 bytes>
0x400125:	cmp	qword ptr [rbp - 0x10], 0x63
0x40012a:	jbe	0x400106
<Block for 0x400106, 38 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x10]
0x40010a:	lea	rdx, [rax*8]
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	add	rax, rdx
0x400119:	mov	qword ptr [rax], 5
0x400120:	add	qword ptr [rbp - 0x10], 1
0x400125:	cmp	qword ptr [rbp - 0x10], 0x63
0x40012a:	jbe	0x400106
<Block for 0x40012c, 12 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	mov	rdi, rax
0x400133:	call	0x500010
