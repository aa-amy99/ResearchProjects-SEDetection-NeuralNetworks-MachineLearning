<Block for 0x4001df, 30 bytes>
0x4001df:	endbr64	
0x4001e3:	push	rbp
0x4001e4:	mov	rbp, rsp
0x4001e7:	sub	rsp, 0x10
0x4001eb:	mov	qword ptr [rbp - 0x10], 0
0x4001f3:	mov	eax, 0
0x4001f8:	call	0x40000f
<Block for 0x4001fd, 4 bytes>
0x4001fd:	test	eax, eax
0x4001ff:	je	0x40020f
<Block for 0x40020f, 10 bytes>
0x40020f:	mov	edi, 0x320
0x400214:	call	0x500000
<Block for 0x400201, 12 bytes>
0x400201:	lea	rdi, [rip + 0x13a]
0x400208:	call	0x500020
<Block for 0x400219, 11 bytes>
0x400219:	mov	qword ptr [rbp - 0x10], rax
0x40021d:	cmp	qword ptr [rbp - 0x10], 0
0x400222:	jne	0x40022e
<Block for 0x40020d, 2 bytes>
0x40020d:	jmp	0x40025e
<Block for 0x400224, 10 bytes>
0x400224:	mov	edi, 0xffffffff
0x400229:	call	0x500008
<Block for 0x40022e, 10 bytes>
0x40022e:	mov	qword ptr [rbp - 8], 0
0x400236:	jmp	0x400257
<Block for 0x40025e, 10 bytes>
0x40025e:	mov	eax, 0
0x400263:	call	0x400000
<Block for 0x400257, 7 bytes>
0x400257:	cmp	qword ptr [rbp - 8], 0x63
0x40025c:	jbe	0x400238
<Block for 0x400268, 4 bytes>
0x400268:	test	eax, eax
0x40026a:	je	0x40027b
<Block for 0x400238, 38 bytes>
0x400238:	mov	rax, qword ptr [rbp - 8]
0x40023c:	lea	rdx, [rax*8]
0x400244:	mov	rax, qword ptr [rbp - 0x10]
0x400248:	add	rax, rdx
0x40024b:	mov	qword ptr [rax], 5
0x400252:	add	qword ptr [rbp - 8], 1
0x400257:	cmp	qword ptr [rbp - 8], 0x63
0x40025c:	jbe	0x400238
<Block for 0x40027b, 3 bytes>
0x40027b:	nop	
0x40027c:	leave	
0x40027d:	ret	
<Block for 0x40026c, 15 bytes>
0x40026c:	mov	rax, qword ptr [rbp - 0x10]
0x400270:	mov	rax, qword ptr [rax]
0x400273:	mov	rdi, rax
0x400276:	call	0x500018
