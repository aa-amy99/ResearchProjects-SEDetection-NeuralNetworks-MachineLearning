<Block for 0x4002ee, 47 bytes>
0x4002ee:	endbr64	
0x4002f2:	push	rbp
0x4002f3:	mov	rbp, rsp
0x4002f6:	sub	rsp, 0x50
0x4002fa:	mov	rax, qword ptr fs:[0x28]
0x400303:	mov	qword ptr [rbp - 8], rax
0x400307:	xor	eax, eax
0x400309:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400310:	mov	eax, 1
0x400315:	test	eax, eax
0x400317:	je	0x4003ef
<Block for 0x4003ef, 9 bytes>
0x4003ef:	mov	eax, 1
0x4003f4:	test	eax, eax
0x4003f6:	je	0x40044a
<Block for 0x40031d, 27 bytes>
0x40031d:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400324:	mov	edx, 6
0x400329:	mov	esi, 1
0x40032e:	mov	edi, 2
0x400333:	call	0x500000
<Block for 0x40044a, 16 bytes>
0x40044a:	nop	
0x40044b:	mov	rax, qword ptr [rbp - 8]
0x40044f:	xor	rax, qword ptr fs:[0x28]
0x400458:	je	0x40045f
<Block for 0x4003f8, 46 bytes>
0x4003f8:	mov	qword ptr [rbp - 0x40], 0
0x400400:	mov	qword ptr [rbp - 0x38], 0
0x400408:	mov	qword ptr [rbp - 0x30], 0
0x400410:	mov	qword ptr [rbp - 0x28], 0
0x400418:	mov	qword ptr [rbp - 0x20], 0
0x400420:	cmp	dword ptr [rbp - 0x4c], 0
0x400424:	js	0x40043e
<Block for 0x400338, 13 bytes>
0x400338:	mov	dword ptr [rbp - 0x48], eax
0x40033b:	cmp	dword ptr [rbp - 0x48], -1
0x40033f:	je	0x4003db
<Block for 0x40045f, 2 bytes>
0x40045f:	leave	
0x400460:	ret	
<Block for 0x40045a, 5 bytes>
0x40045a:	call	0x500050
<Block for 0x40043e, 12 bytes>
0x40043e:	lea	rdi, [rip + 0x1eb]
0x400445:	call	0x500048
<Block for 0x400426, 6 bytes>
0x400426:	cmp	dword ptr [rbp - 0x4c], 9
0x40042a:	jg	0x40043e
<Block for 0x4003db, 3 bytes>
0x4003db:	nop	
0x4003dc:	jmp	0x4003df
<Block for 0x400345, 22 bytes>
0x400345:	lea	rax, [rbp - 0x40]
0x400349:	mov	edx, 0x10
0x40034e:	mov	esi, 0
0x400353:	mov	rdi, rax
0x400356:	call	0x500008
<Block for 0x40042c, 16 bytes>
0x40042c:	mov	eax, dword ptr [rbp - 0x4c]
0x40042f:	cdqe	
0x400431:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400435:	mov	edi, eax
0x400437:	call	0x500040
<Block for 0x4003df, 6 bytes>
0x4003df:	cmp	dword ptr [rbp - 0x48], -1
0x4003e3:	je	0x4003ef
<Block for 0x40035b, 18 bytes>
0x40035b:	mov	word ptr [rbp - 0x40], 2
0x400361:	lea	rdi, [rip + 0x280]
0x400368:	call	0x500010
<Block for 0x40043c, 2 bytes>
0x40043c:	jmp	0x40044a
<Block for 0x4003e5, 10 bytes>
0x4003e5:	mov	eax, dword ptr [rbp - 0x48]
0x4003e8:	mov	edi, eax
0x4003ea:	call	0x500038
<Block for 0x40036d, 13 bytes>
0x40036d:	mov	dword ptr [rbp - 0x3c], eax
0x400370:	mov	edi, 0x6987
0x400375:	call	0x500018
<Block for 0x40037a, 26 bytes>
0x40037a:	mov	word ptr [rbp - 0x3e], ax
0x40037e:	lea	rcx, [rbp - 0x40]
0x400382:	mov	eax, dword ptr [rbp - 0x48]
0x400385:	mov	edx, 0x10
0x40038a:	mov	rsi, rcx
0x40038d:	mov	edi, eax
0x40038f:	call	0x500020
<Block for 0x400394, 5 bytes>
0x400394:	cmp	eax, -1
0x400397:	je	0x4003de
<Block for 0x400399, 24 bytes>
0x400399:	lea	rsi, [rbp - 0x16]
0x40039d:	mov	eax, dword ptr [rbp - 0x48]
0x4003a0:	mov	ecx, 0
0x4003a5:	mov	edx, 0xd
0x4003aa:	mov	edi, eax
0x4003ac:	call	0x500028
<Block for 0x4003de, 1 bytes>
0x4003de:	nop	
<Block for 0x4003b1, 9 bytes>
0x4003b1:	mov	dword ptr [rbp - 0x44], eax
0x4003b4:	cmp	dword ptr [rbp - 0x44], -1
0x4003b8:	je	0x4003df
<Block for 0x4003ba, 6 bytes>
0x4003ba:	cmp	dword ptr [rbp - 0x44], 0
0x4003be:	je	0x4003df
<Block for 0x4003c0, 22 bytes>
0x4003c0:	mov	eax, dword ptr [rbp - 0x44]
0x4003c3:	cdqe	
0x4003c5:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003ca:	lea	rax, [rbp - 0x16]
0x4003ce:	mov	rdi, rax
0x4003d1:	call	0x500030
<Block for 0x4003d6, 5 bytes>
0x4003d6:	mov	dword ptr [rbp - 0x4c], eax
0x4003d9:	jmp	0x4003df
