<Block for 0x4001c2, 45 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	add	rsp, -0x80
0x4001ce:	mov	rax, qword ptr fs:[0x28]
0x4001d7:	mov	qword ptr [rbp - 8], rax
0x4001db:	xor	eax, eax
0x4001dd:	mov	qword ptr [rbp - 0x80], 0
0x4001e5:	mov	eax, 0
0x4001ea:	call	0x400000
<Block for 0x4001ef, 4 bytes>
0x4001ef:	test	eax, eax
0x4001f1:	je	0x40023b
<Block for 0x40023b, 22 bytes>
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500010
<Block for 0x4001f3, 10 bytes>
0x4001f3:	mov	edi, 0x64
0x4001f8:	call	0x500000
<Block for 0x400251, 23 bytes>
0x400251:	mov	byte ptr [rbp - 0xd], 0
0x400255:	lea	rdx, [rbp - 0x70]
0x400259:	mov	rax, qword ptr [rbp - 0x80]
0x40025d:	mov	rsi, rdx
0x400260:	mov	rdi, rax
0x400263:	call	0x500018
<Block for 0x4001fd, 11 bytes>
0x4001fd:	mov	qword ptr [rbp - 0x78], rax
0x400201:	cmp	qword ptr [rbp - 0x78], 0
0x400206:	jne	0x400212
<Block for 0x400268, 12 bytes>
0x400268:	mov	rax, qword ptr [rbp - 0x80]
0x40026c:	mov	rdi, rax
0x40026f:	call	0x500020
<Block for 0x400208, 10 bytes>
0x400208:	mov	edi, 0xffffffff
0x40020d:	call	0x500008
<Block for 0x400212, 22 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x78]
0x400216:	mov	edx, 0x63
0x40021b:	mov	esi, 0x41
0x400220:	mov	rdi, rax
0x400223:	call	0x500010
<Block for 0x400274, 16 bytes>
0x400274:	nop	
0x400275:	mov	rax, qword ptr [rbp - 8]
0x400279:	xor	rax, qword ptr fs:[0x28]
0x400282:	je	0x400289
<Block for 0x400228, 41 bytes>
0x400228:	mov	rax, qword ptr [rbp - 0x78]
0x40022c:	add	rax, 0x63
0x400230:	mov	byte ptr [rax], 0
0x400233:	mov	rax, qword ptr [rbp - 0x78]
0x400237:	mov	qword ptr [rbp - 0x80], rax
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	edx, 0x63
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500010
<Block for 0x400289, 2 bytes>
0x400289:	leave	
0x40028a:	ret	
<Block for 0x400284, 5 bytes>
0x400284:	call	0x500028
