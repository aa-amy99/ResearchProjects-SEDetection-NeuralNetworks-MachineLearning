<Block for 0x400074, 30 bytes>
0x400074:	endbr64	
0x400078:	push	rbp
0x400079:	mov	rbp, rsp
0x40007c:	sub	rsp, 0x10
0x400080:	mov	qword ptr [rbp - 8], 0
0x400088:	mov	edi, 0x190
0x40008d:	call	0x500000
<Block for 0x400092, 19 bytes>
0x400092:	mov	qword ptr [rbp - 8], rax
0x400096:	mov	qword ptr [rbp - 0x10], 0
0x40009e:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a3:	ja	0x4000c5
<Block for 0x4000a5, 32 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 0x10]
0x4000a9:	lea	rdx, [rax*4]
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	add	rax, rdx
0x4000b8:	mov	dword ptr [rax], 5
0x4000be:	add	qword ptr [rbp - 0x10], 1
0x4000c3:	jmp	0x40009e
<Block for 0x4000c5, 13 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	mov	eax, dword ptr [rax]
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500010
<Block for 0x40009e, 7 bytes>
0x40009e:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a3:	ja	0x4000c5
<Block for 0x4000d2, 3 bytes>
0x4000d2:	nop	
0x4000d3:	leave	
0x4000d4:	ret	
