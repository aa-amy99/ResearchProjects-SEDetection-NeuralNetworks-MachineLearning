<Block for 0x4000d5, 30 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0x10
0x4000e1:	mov	qword ptr [rbp - 8], 0
0x4000e9:	mov	edi, 0x190
0x4000ee:	call	0x500000
<Block for 0x4000f3, 19 bytes>
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	mov	qword ptr [rbp - 0x10], 0
0x4000ff:	cmp	qword ptr [rbp - 0x10], 0x63
0x400104:	ja	0x400126
<Block for 0x400106, 32 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x10]
0x40010a:	lea	rdx, [rax*4]
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	add	rax, rdx
0x400119:	mov	dword ptr [rax], 5
0x40011f:	add	qword ptr [rbp - 0x10], 1
0x400124:	jmp	0x4000ff
<Block for 0x400126, 7 bytes>
0x400126:	cmp	qword ptr [rbp - 8], 0
0x40012b:	je	0x400139
<Block for 0x4000ff, 7 bytes>
0x4000ff:	cmp	qword ptr [rbp - 0x10], 0x63
0x400104:	ja	0x400126
<Block for 0x400139, 3 bytes>
0x400139:	nop	
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x40012d, 12 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	mov	rdi, rax
0x400134:	call	0x500008
