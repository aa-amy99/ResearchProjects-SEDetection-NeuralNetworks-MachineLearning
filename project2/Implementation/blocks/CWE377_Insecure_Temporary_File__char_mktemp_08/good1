<Block for 0x4000d7, 37 bytes>
0x4000d7:	endbr64	
0x4000db:	push	rbp
0x4000dc:	mov	rbp, rsp
0x4000df:	sub	rsp, 0x30
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	mov	eax, 0
0x4000f7:	call	0x40000f
<Block for 0x4000fc, 4 bytes>
0x4000fc:	test	eax, eax
0x4000fe:	je	0x40010e
<Block for 0x40010e, 40 bytes>
0x40010e:	movabs	rax, 0x6c69662f706d742f
0x400118:	movabs	rdx, 0x58585858585865
0x400122:	mov	qword ptr [rbp - 0x20], rax
0x400126:	mov	qword ptr [rbp - 0x18], rdx
0x40012a:	lea	rax, [rbp - 0x20]
0x40012e:	mov	rdi, rax
0x400131:	call	0x500030
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x156]
0x400107:	call	0x500010
<Block for 0x400136, 15 bytes>
0x400136:	mov	dword ptr [rbp - 0x24], eax
0x400139:	lea	rax, [rbp - 0x20]
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x400161
<Block for 0x400145, 6 bytes>
0x400145:	cmp	dword ptr [rbp - 0x24], -1
0x400149:	je	0x400161
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x40014b, 12 bytes>
0x40014b:	lea	rdi, [rip + 0xde]
0x400152:	call	0x500010
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500028
<Block for 0x400157, 10 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x24]
0x40015a:	mov	edi, eax
0x40015c:	call	0x500020
