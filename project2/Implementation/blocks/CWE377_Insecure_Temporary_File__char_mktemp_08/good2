<Block for 0x400178, 37 bytes>
0x400178:	endbr64	
0x40017c:	push	rbp
0x40017d:	mov	rbp, rsp
0x400180:	sub	rsp, 0x30
0x400184:	mov	rax, qword ptr fs:[0x28]
0x40018d:	mov	qword ptr [rbp - 8], rax
0x400191:	xor	eax, eax
0x400193:	mov	eax, 0
0x400198:	call	0x400000
<Block for 0x40019d, 4 bytes>
0x40019d:	test	eax, eax
0x40019f:	je	0x4001f4
<Block for 0x4001f4, 16 bytes>
0x4001f4:	nop	
0x4001f5:	mov	rax, qword ptr [rbp - 8]
0x4001f9:	xor	rax, qword ptr fs:[0x28]
0x400202:	je	0x400209
<Block for 0x4001a1, 40 bytes>
0x4001a1:	movabs	rax, 0x6c69662f706d742f
0x4001ab:	movabs	rdx, 0x58585858585865
0x4001b5:	mov	qword ptr [rbp - 0x20], rax
0x4001b9:	mov	qword ptr [rbp - 0x18], rdx
0x4001bd:	lea	rax, [rbp - 0x20]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500030
<Block for 0x400209, 2 bytes>
0x400209:	leave	
0x40020a:	ret	
<Block for 0x400204, 5 bytes>
0x400204:	call	0x500028
<Block for 0x4001c9, 15 bytes>
0x4001c9:	mov	dword ptr [rbp - 0x24], eax
0x4001cc:	lea	rax, [rbp - 0x20]
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500010
<Block for 0x4001d8, 6 bytes>
0x4001d8:	cmp	dword ptr [rbp - 0x24], -1
0x4001dc:	je	0x4001f4
<Block for 0x4001de, 12 bytes>
0x4001de:	lea	rdi, [rip + 0x4b]
0x4001e5:	call	0x500010
<Block for 0x4001ea, 10 bytes>
0x4001ea:	mov	eax, dword ptr [rbp - 0x24]
0x4001ed:	mov	edi, eax
0x4001ef:	call	0x500020
