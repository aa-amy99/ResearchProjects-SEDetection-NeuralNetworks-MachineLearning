<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x30
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 4 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x4000c0
<Block for 0x4000c0, 16 bytes>
0x4000c0:	nop	
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	xor	rax, qword ptr fs:[0x28]
0x4000ce:	je	0x4000d5
<Block for 0x400047, 30 bytes>
0x400047:	movabs	rax, 0x5858585858586e66
0x400051:	mov	qword ptr [rbp - 0x11], rax
0x400055:	mov	byte ptr [rbp - 9], 0
0x400059:	lea	rax, [rbp - 0x11]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500000
<Block for 0x4000d5, 2 bytes>
0x4000d5:	leave	
0x4000d6:	ret	
<Block for 0x4000d0, 5 bytes>
0x4000d0:	call	0x500028
<Block for 0x400065, 11 bytes>
0x400065:	mov	qword ptr [rbp - 0x20], rax
0x400069:	cmp	qword ptr [rbp - 0x20], 0
0x40006e:	jne	0x40007a
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 1
0x400075:	call	0x500008
<Block for 0x40007a, 12 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 0x20]
0x40007e:	mov	rdi, rax
0x400081:	call	0x500010
<Block for 0x400086, 27 bytes>
0x400086:	mov	rax, qword ptr [rbp - 0x20]
0x40008a:	mov	edx, 0x180
0x40008f:	mov	esi, 0x42
0x400094:	mov	rdi, rax
0x400097:	mov	eax, 0
0x40009c:	call	0x500018
<Block for 0x4000a1, 9 bytes>
0x4000a1:	mov	dword ptr [rbp - 0x24], eax
0x4000a4:	cmp	dword ptr [rbp - 0x24], -1
0x4000a8:	je	0x4000c0
<Block for 0x4000aa, 12 bytes>
0x4000aa:	lea	rdi, [rip + 0x17f]
0x4000b1:	call	0x500010
<Block for 0x4000b6, 10 bytes>
0x4000b6:	mov	eax, dword ptr [rbp - 0x24]
0x4000b9:	mov	edi, eax
0x4000bb:	call	0x500020
