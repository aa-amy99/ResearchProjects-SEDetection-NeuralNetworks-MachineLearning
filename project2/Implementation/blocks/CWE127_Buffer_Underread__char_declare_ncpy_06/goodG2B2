<Block for 0x400184, 55 bytes>
0x400184:	endbr64	
0x400188:	push	rbp
0x400189:	mov	rbp, rsp
0x40018c:	sub	rsp, 0xf0
0x400193:	mov	rax, qword ptr fs:[0x28]
0x40019c:	mov	qword ptr [rbp - 8], rax
0x4001a0:	xor	eax, eax
0x4001a2:	lea	rax, [rbp - 0xe0]
0x4001a9:	mov	edx, 0x63
0x4001ae:	mov	esi, 0x41
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500000
<Block for 0x4001bb, 14 bytes>
0x4001bb:	mov	byte ptr [rbp - 0x7d], 0
0x4001bf:	mov	eax, 5
0x4001c4:	cmp	eax, 5
0x4001c7:	jne	0x4001d7
<Block for 0x4001c9, 36 bytes>
0x4001c9:	lea	rax, [rbp - 0xe0]
0x4001d0:	mov	qword ptr [rbp - 0xe8], rax
0x4001d7:	lea	rax, [rbp - 0x70]
0x4001db:	mov	edx, 0x63
0x4001e0:	mov	esi, 0x43
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500000
<Block for 0x4001d7, 22 bytes>
0x4001d7:	lea	rax, [rbp - 0x70]
0x4001db:	mov	edx, 0x63
0x4001e0:	mov	esi, 0x43
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500000
<Block for 0x4001ed, 16 bytes>
0x4001ed:	mov	byte ptr [rbp - 0xd], 0
0x4001f1:	lea	rax, [rbp - 0x70]
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x500008
<Block for 0x4001fd, 25 bytes>
0x4001fd:	mov	rdx, rax
0x400200:	mov	rcx, qword ptr [rbp - 0xe8]
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	rsi, rcx
0x40020e:	mov	rdi, rax
0x400211:	call	0x500010
<Block for 0x400216, 16 bytes>
0x400216:	mov	byte ptr [rbp - 0xd], 0
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	rdi, rax
0x400221:	call	0x500018
<Block for 0x400226, 16 bytes>
0x400226:	nop	
0x400227:	mov	rax, qword ptr [rbp - 8]
0x40022b:	xor	rax, qword ptr fs:[0x28]
0x400234:	je	0x40023b
<Block for 0x40023b, 2 bytes>
0x40023b:	leave	
0x40023c:	ret	
<Block for 0x400236, 5 bytes>
0x400236:	call	0x500020
