<Block for 0x400058, 17 bytes>
0x400058:	endbr64	
0x40005c:	push	rbp
0x40005d:	mov	rbp, rsp
0x400060:	sub	rsp, 0x20
0x400064:	call	0x500020
<Block for 0x400069, 9 bytes>
0x400069:	test	eax, eax
0x40006b:	setne	al
0x40006e:	test	al, al
0x400070:	je	0x400080
<Block for 0x400080, 21 bytes>
0x400080:	lea	rax, [rip + 0xe5]
0x400087:	mov	qword ptr [rbp - 0x18], rax
0x40008b:	mov	edi, 8
0x400090:	call	0x500008
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0xde]
0x400079:	call	0x500018
<Block for 0x400095, 38 bytes>
0x400095:	mov	qword ptr [rbp - 0x10], rax
0x400099:	mov	rax, qword ptr [rbp - 0x10]
0x40009d:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a1:	mov	qword ptr [rax], rdx
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	rax, qword ptr [rax]
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500018
<Block for 0x40007e, 2 bytes>
0x40007e:	jmp	0x4000d1
<Block for 0x4000bb, 9 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x10]
0x4000bf:	test	rax, rax
0x4000c2:	je	0x4000d1
<Block for 0x4000d1, 3 bytes>
0x4000d1:	nop	
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x4000c4, 13 bytes>
0x4000c4:	mov	esi, 8
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500010
