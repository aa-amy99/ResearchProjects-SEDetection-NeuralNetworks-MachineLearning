<Block for 0x40005b, 46 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0x10
0x400067:	mov	rax, qword ptr fs:[0x28]
0x400070:	mov	qword ptr [rbp - 8], rax
0x400074:	xor	eax, eax
0x400076:	mov	byte ptr [rbp - 0xb], 0x20
0x40007a:	mov	rax, qword ptr [rip + 0xfff8f]
0x400081:	mov	rdi, rax
0x400084:	call	0x500018
<Block for 0x400089, 19 bytes>
0x400089:	mov	byte ptr [rbp - 0xa], al
0x40008c:	mov	byte ptr [rbp - 9], 0
0x400090:	lea	rax, [rbp - 0xa]
0x400094:	mov	rdi, rax
0x400097:	call	0x500020
<Block for 0x40009c, 23 bytes>
0x40009c:	mov	byte ptr [rbp - 0xb], al
0x40009f:	movzx	eax, byte ptr [rbp - 0xb]
0x4000a3:	mov	byte ptr [rip + 0xbc], al
0x4000a9:	mov	eax, 0
0x4000ae:	call	0x400000
<Block for 0x4000b3, 16 bytes>
0x4000b3:	nop	
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	xor	rax, qword ptr fs:[0x28]
0x4000c1:	je	0x4000c8
<Block for 0x4000c8, 2 bytes>
0x4000c8:	leave	
0x4000c9:	ret	
<Block for 0x4000c3, 5 bytes>
0x4000c3:	call	0x500008
