<Block for 0x400067, 30 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x10
0x400073:	mov	qword ptr [rbp - 8], 0
0x40007b:	mov	eax, dword ptr [rip + 0xfff7f]
0x400081:	test	eax, eax
0x400083:	je	0x4000b0
<Block for 0x4000b0, 10 bytes>
0x4000b0:	mov	eax, dword ptr [rip + 0xfff6a]
0x4000b6:	test	eax, eax
0x4000b8:	je	0x4000c6
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 1
0x40008a:	call	0x500008
<Block for 0x4000c6, 3 bytes>
0x4000c6:	nop	
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0x123]
0x4000c1:	call	0x500028
<Block for 0x40008f, 20 bytes>
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	mov	rax, qword ptr [rbp - 8]
0x400097:	mov	byte ptr [rax], 0x41
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	test	rax, rax
0x4000a1:	je	0x4000b0
<Block for 0x4000a3, 13 bytes>
0x4000a3:	mov	esi, 1
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
