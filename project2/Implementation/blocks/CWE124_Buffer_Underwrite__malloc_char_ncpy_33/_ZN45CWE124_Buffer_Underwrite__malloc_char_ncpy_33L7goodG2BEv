<Block for 0x4000f4, 65 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x90
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	lea	rax, [rbp - 0x90]
0x400119:	mov	qword ptr [rbp - 0x88], rax
0x400120:	mov	qword ptr [rbp - 0x90], 0
0x40012b:	mov	edi, 0x64
0x400130:	call	0x500000
<Block for 0x400135, 11 bytes>
0x400135:	mov	qword ptr [rbp - 0x80], rax
0x400139:	cmp	qword ptr [rbp - 0x80], 0
0x40013e:	jne	0x40014a
<Block for 0x400140, 10 bytes>
0x400140:	mov	edi, 0xffffffff
0x400145:	call	0x500008
<Block for 0x40014a, 22 bytes>
0x40014a:	mov	rax, qword ptr [rbp - 0x80]
0x40014e:	mov	edx, 0x63
0x400153:	mov	esi, 0x41
0x400158:	mov	rdi, rax
0x40015b:	call	0x500010
<Block for 0x400160, 58 bytes>
0x400160:	mov	rax, qword ptr [rbp - 0x80]
0x400164:	add	rax, 0x63
0x400168:	mov	byte ptr [rax], 0
0x40016b:	mov	rax, qword ptr [rbp - 0x80]
0x40016f:	mov	qword ptr [rbp - 0x90], rax
0x400176:	mov	rax, qword ptr [rbp - 0x88]
0x40017d:	mov	rax, qword ptr [rax]
0x400180:	mov	qword ptr [rbp - 0x78], rax
0x400184:	lea	rax, [rbp - 0x70]
0x400188:	mov	edx, 0x63
0x40018d:	mov	esi, 0x43
0x400192:	mov	rdi, rax
0x400195:	call	0x500010
<Block for 0x40019a, 28 bytes>
0x40019a:	mov	byte ptr [rbp - 0xd], 0
0x40019e:	lea	rcx, [rbp - 0x70]
0x4001a2:	mov	rax, qword ptr [rbp - 0x78]
0x4001a6:	mov	edx, 0x63
0x4001ab:	mov	rsi, rcx
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x500018
<Block for 0x4001b6, 23 bytes>
0x4001b6:	mov	rax, qword ptr [rbp - 0x78]
0x4001ba:	add	rax, 0x63
0x4001be:	mov	byte ptr [rax], 0
0x4001c1:	mov	rax, qword ptr [rbp - 0x78]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500020
<Block for 0x4001cd, 16 bytes>
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500028
