<Block for 0x40012d, 43 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	rbx
0x400136:	sub	rsp, 0x88
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 0x18], rax
0x40014a:	xor	eax, eax
0x40014c:	lea	rax, [rbp - 0x80]
0x400150:	mov	rdi, rax
0x400153:	call	0x4004e4
<Block for 0x400158, 60 bytes>
0x400158:	mov	dword ptr [rbp - 0x88], 0
0x400162:	mov	dword ptr [rbp - 0x84], 0
0x40016c:	lea	rax, [rbp - 0x88]
0x400173:	mov	qword ptr [rbp - 0x90], rax
0x40017a:	mov	dword ptr [rbp - 0x50], 0
0x400181:	lea	rdx, [rbp - 0x50]
0x400185:	lea	rax, [rbp - 0x80]
0x400189:	mov	rsi, rdx
0x40018c:	mov	rdi, rax
0x40018f:	call	0x4006ae
<Block for 0x400194, 36 bytes>
0x400194:	mov	rdx, qword ptr [rbp - 0x90]
0x40019b:	mov	qword ptr [rax], rdx
0x40019e:	mov	dword ptr [rbp - 0x50], 1
0x4001a5:	lea	rdx, [rbp - 0x50]
0x4001a9:	lea	rax, [rbp - 0x80]
0x4001ad:	mov	rsi, rdx
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x4006ae
<Block for 0x4001b8, 36 bytes>
0x4001b8:	mov	rdx, qword ptr [rbp - 0x90]
0x4001bf:	mov	qword ptr [rax], rdx
0x4001c2:	mov	dword ptr [rbp - 0x50], 2
0x4001c9:	lea	rdx, [rbp - 0x50]
0x4001cd:	lea	rax, [rbp - 0x80]
0x4001d1:	mov	rsi, rdx
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x4006ae
<Block for 0x4001dc, 29 bytes>
0x4001dc:	mov	rdx, qword ptr [rbp - 0x90]
0x4001e3:	mov	qword ptr [rax], rdx
0x4001e6:	lea	rdx, [rbp - 0x80]
0x4001ea:	lea	rax, [rbp - 0x50]
0x4001ee:	mov	rsi, rdx
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x400524
<Block for 0x4001f9, 12 bytes>
0x4001f9:	lea	rax, [rbp - 0x50]
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500018
<Block for 0x400205, 12 bytes>
0x400205:	lea	rax, [rbp - 0x50]
0x400209:	mov	rdi, rax
0x40020c:	call	0x400504
<Block for 0x400211, 12 bytes>
0x400211:	lea	rax, [rbp - 0x80]
0x400215:	mov	rdi, rax
0x400218:	call	0x400504
<Block for 0x40021d, 16 bytes>
0x40021d:	nop	
0x40021e:	mov	rax, qword ptr [rbp - 0x18]
0x400222:	xor	rax, qword ptr fs:[0x28]
0x40022b:	je	0x400267
<Block for 0x400267, 10 bytes>
0x400267:	add	rsp, 0x88
0x40026e:	pop	rbx
0x40026f:	pop	rbp
0x400270:	ret	
<Block for 0x40022d, 2 bytes>
0x40022d:	jmp	0x400262
<Block for 0x400262, 5 bytes>
0x400262:	call	0x500010
