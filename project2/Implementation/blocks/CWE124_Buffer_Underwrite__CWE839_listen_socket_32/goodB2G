<Block for 0x4002bf, 93 bytes>
0x4002bf:	endbr64	
0x4002c3:	push	rbp
0x4002c4:	mov	rbp, rsp
0x4002c7:	sub	rsp, 0x70
0x4002cb:	mov	rax, qword ptr fs:[0x28]
0x4002d4:	mov	qword ptr [rbp - 8], rax
0x4002d8:	xor	eax, eax
0x4002da:	lea	rax, [rbp - 0x6c]
0x4002de:	mov	qword ptr [rbp - 0x50], rax
0x4002e2:	lea	rax, [rbp - 0x6c]
0x4002e6:	mov	qword ptr [rbp - 0x48], rax
0x4002ea:	mov	dword ptr [rbp - 0x6c], 0xffffffff
0x4002f1:	mov	rax, qword ptr [rbp - 0x50]
0x4002f5:	mov	eax, dword ptr [rax]
0x4002f7:	mov	dword ptr [rbp - 0x68], eax
0x4002fa:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400301:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x400308:	mov	edx, 6
0x40030d:	mov	esi, 1
0x400312:	mov	edi, 2
0x400317:	call	0x500000
<Block for 0x40031c, 13 bytes>
0x40031c:	mov	dword ptr [rbp - 0x5c], eax
0x40031f:	cmp	dword ptr [rbp - 0x5c], -1
0x400323:	je	0x4003e8
<Block for 0x4003e8, 3 bytes>
0x4003e8:	nop	
0x4003e9:	jmp	0x4003f2
<Block for 0x400329, 22 bytes>
0x400329:	lea	rax, [rbp - 0x40]
0x40032d:	mov	edx, 0x10
0x400332:	mov	esi, 0
0x400337:	mov	rdi, rax
0x40033a:	call	0x500008
<Block for 0x4003f2, 6 bytes>
0x4003f2:	cmp	dword ptr [rbp - 0x5c], -1
0x4003f6:	je	0x400402
<Block for 0x40033f, 23 bytes>
0x40033f:	mov	word ptr [rbp - 0x40], 2
0x400345:	mov	dword ptr [rbp - 0x3c], 0
0x40034c:	mov	edi, 0x6987
0x400351:	call	0x500010
<Block for 0x400402, 6 bytes>
0x400402:	cmp	dword ptr [rbp - 0x64], -1
0x400406:	je	0x400412
<Block for 0x4003f8, 10 bytes>
0x4003f8:	mov	eax, dword ptr [rbp - 0x5c]
0x4003fb:	mov	edi, eax
0x4003fd:	call	0x500040
<Block for 0x400356, 26 bytes>
0x400356:	mov	word ptr [rbp - 0x3e], ax
0x40035a:	lea	rcx, [rbp - 0x40]
0x40035e:	mov	eax, dword ptr [rbp - 0x5c]
0x400361:	mov	edx, 0x10
0x400366:	mov	rsi, rcx
0x400369:	mov	edi, eax
0x40036b:	call	0x500018
<Block for 0x400412, 64 bytes>
0x400412:	mov	rax, qword ptr [rbp - 0x50]
0x400416:	mov	edx, dword ptr [rbp - 0x68]
0x400419:	mov	dword ptr [rax], edx
0x40041b:	mov	rax, qword ptr [rbp - 0x48]
0x40041f:	mov	eax, dword ptr [rax]
0x400421:	mov	dword ptr [rbp - 0x54], eax
0x400424:	mov	qword ptr [rbp - 0x40], 0
0x40042c:	mov	qword ptr [rbp - 0x38], 0
0x400434:	mov	qword ptr [rbp - 0x30], 0
0x40043c:	mov	qword ptr [rbp - 0x28], 0
0x400444:	mov	qword ptr [rbp - 0x20], 0
0x40044c:	cmp	dword ptr [rbp - 0x54], 0
0x400450:	js	0x40048a
<Block for 0x400408, 10 bytes>
0x400408:	mov	eax, dword ptr [rbp - 0x64]
0x40040b:	mov	edi, eax
0x40040d:	call	0x500040
<Block for 0x400370, 5 bytes>
0x400370:	cmp	eax, -1
0x400373:	je	0x4003eb
<Block for 0x40048a, 12 bytes>
0x40048a:	lea	rdi, [rip + 0x5f]
0x400491:	call	0x500050
<Block for 0x400452, 6 bytes>
0x400452:	cmp	dword ptr [rbp - 0x54], 9
0x400456:	jg	0x40048a
<Block for 0x4003eb, 3 bytes>
0x4003eb:	nop	
0x4003ec:	jmp	0x4003f2
<Block for 0x400375, 15 bytes>
0x400375:	mov	eax, dword ptr [rbp - 0x5c]
0x400378:	mov	esi, 5
0x40037d:	mov	edi, eax
0x40037f:	call	0x500020
<Block for 0x400496, 16 bytes>
0x400496:	nop	
0x400497:	mov	rax, qword ptr [rbp - 8]
0x40049b:	xor	rax, qword ptr fs:[0x28]
0x4004a4:	je	0x4004ab
<Block for 0x400458, 22 bytes>
0x400458:	mov	eax, dword ptr [rbp - 0x54]
0x40045b:	cdqe	
0x40045d:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400465:	mov	dword ptr [rbp - 0x60], 0
0x40046c:	jmp	0x400482
<Block for 0x400384, 5 bytes>
0x400384:	cmp	eax, -1
0x400387:	je	0x4003ee
<Block for 0x4004ab, 2 bytes>
0x4004ab:	leave	
0x4004ac:	ret	
<Block for 0x4004a6, 5 bytes>
0x4004a6:	call	0x500058
<Block for 0x400482, 6 bytes>
0x400482:	cmp	dword ptr [rbp - 0x60], 9
0x400486:	jle	0x40046e
<Block for 0x4003ee, 3 bytes>
0x4003ee:	nop	
0x4003ef:	jmp	0x4003f2
<Block for 0x400389, 20 bytes>
0x400389:	mov	eax, dword ptr [rbp - 0x5c]
0x40038c:	mov	edx, 0
0x400391:	mov	esi, 0
0x400396:	mov	edi, eax
0x400398:	call	0x500028
<Block for 0x40046e, 16 bytes>
0x40046e:	mov	eax, dword ptr [rbp - 0x60]
0x400471:	cdqe	
0x400473:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400477:	mov	edi, eax
0x400479:	call	0x500048
<Block for 0x400488, 2 bytes>
0x400488:	jmp	0x400496
<Block for 0x40039d, 9 bytes>
0x40039d:	mov	dword ptr [rbp - 0x64], eax
0x4003a0:	cmp	dword ptr [rbp - 0x64], -1
0x4003a4:	je	0x4003f1
<Block for 0x40047e, 10 bytes>
0x40047e:	add	dword ptr [rbp - 0x60], 1
0x400482:	cmp	dword ptr [rbp - 0x60], 9
0x400486:	jle	0x40046e
<Block for 0x4003a6, 24 bytes>
0x4003a6:	lea	rsi, [rbp - 0x16]
0x4003aa:	mov	eax, dword ptr [rbp - 0x64]
0x4003ad:	mov	ecx, 0
0x4003b2:	mov	edx, 0xd
0x4003b7:	mov	edi, eax
0x4003b9:	call	0x500030
<Block for 0x4003f1, 1 bytes>
0x4003f1:	nop	
<Block for 0x4003be, 9 bytes>
0x4003be:	mov	dword ptr [rbp - 0x58], eax
0x4003c1:	cmp	dword ptr [rbp - 0x58], -1
0x4003c5:	je	0x4003f2
<Block for 0x4003c7, 6 bytes>
0x4003c7:	cmp	dword ptr [rbp - 0x58], 0
0x4003cb:	je	0x4003f2
<Block for 0x4003cd, 22 bytes>
0x4003cd:	mov	eax, dword ptr [rbp - 0x58]
0x4003d0:	cdqe	
0x4003d2:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003d7:	lea	rax, [rbp - 0x16]
0x4003db:	mov	rdi, rax
0x4003de:	call	0x500038
<Block for 0x4003e3, 5 bytes>
0x4003e3:	mov	dword ptr [rbp - 0x68], eax
0x4003e6:	jmp	0x4003f2
