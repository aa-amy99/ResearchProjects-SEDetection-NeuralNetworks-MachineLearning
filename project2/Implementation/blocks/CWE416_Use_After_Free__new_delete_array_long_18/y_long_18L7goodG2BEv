<Block for 0x4000f3, 35 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x10
0x4000ff:	mov	qword ptr [rbp - 8], 0
0x400107:	nop	
0x400108:	endbr64	
0x40010c:	mov	edi, 0x320
0x400111:	call	0x500000
<Block for 0x400116, 19 bytes>
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	mov	qword ptr [rbp - 0x10], 0
0x400122:	cmp	qword ptr [rbp - 0x10], 0x63
0x400127:	ja	0x40014a
<Block for 0x400129, 33 bytes>
0x400129:	mov	rax, qword ptr [rbp - 0x10]
0x40012d:	lea	rdx, [rax*8]
0x400135:	mov	rax, qword ptr [rbp - 8]
0x400139:	add	rax, rdx
0x40013c:	mov	qword ptr [rax], 5
0x400143:	add	qword ptr [rbp - 0x10], 1
0x400148:	jmp	0x400122
<Block for 0x40014a, 20 bytes>
0x40014a:	nop	
0x40014b:	endbr64	
0x40014f:	mov	rax, qword ptr [rbp - 8]
0x400153:	mov	rax, qword ptr [rax]
0x400156:	mov	rdi, rax
0x400159:	call	0x500010
<Block for 0x400122, 7 bytes>
0x400122:	cmp	qword ptr [rbp - 0x10], 0x63
0x400127:	ja	0x40014a
<Block for 0x40015e, 3 bytes>
0x40015e:	nop	
0x40015f:	leave	
0x400160:	ret	
