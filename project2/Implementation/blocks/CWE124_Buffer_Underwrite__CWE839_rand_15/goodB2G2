<Block for 0x4001f2, 40 bytes>
0x4001f2:	endbr64	
0x4001f6:	push	rbp
0x4001f7:	mov	rbp, rsp
0x4001fa:	push	rbx
0x4001fb:	sub	rsp, 0x48
0x4001ff:	mov	rax, qword ptr fs:[0x28]
0x400208:	mov	qword ptr [rbp - 0x18], rax
0x40020c:	xor	eax, eax
0x40020e:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400215:	call	0x500000
<Block for 0x40021a, 7 bytes>
0x40021a:	and	eax, 1
0x40021d:	test	eax, eax
0x40021f:	je	0x40023e
<Block for 0x40023e, 5 bytes>
0x40023e:	call	0x500000
<Block for 0x400221, 5 bytes>
0x400221:	call	0x500000
<Block for 0x400243, 10 bytes>
0x400243:	shl	eax, 0x1e
0x400246:	mov	ebx, eax
0x400248:	call	0x500000
<Block for 0x400226, 10 bytes>
0x400226:	shl	eax, 0x1e
0x400229:	mov	ebx, eax
0x40022b:	call	0x500000
<Block for 0x40024d, 10 bytes>
0x40024d:	shl	eax, 0xf
0x400250:	xor	ebx, eax
0x400252:	call	0x500000
<Block for 0x400230, 10 bytes>
0x400230:	shl	eax, 0xf
0x400233:	xor	ebx, eax
0x400235:	call	0x500000
<Block for 0x400257, 54 bytes>
0x400257:	xor	eax, ebx
0x400259:	not	eax
0x40025b:	mov	dword ptr [rbp - 0x44], eax
0x40025e:	nop	
0x40025f:	mov	qword ptr [rbp - 0x40], 0
0x400267:	mov	qword ptr [rbp - 0x38], 0
0x40026f:	mov	qword ptr [rbp - 0x30], 0
0x400277:	mov	qword ptr [rbp - 0x28], 0
0x40027f:	mov	qword ptr [rbp - 0x20], 0
0x400287:	cmp	dword ptr [rbp - 0x44], 0
0x40028b:	js	0x4002c5
<Block for 0x40023a, 4 bytes>
0x40023a:	xor	eax, ebx
0x40023c:	jmp	0x40025b
<Block for 0x4002c5, 12 bytes>
0x4002c5:	lea	rdi, [rip + 0x1d4]
0x4002cc:	call	0x500010
<Block for 0x40028d, 6 bytes>
0x40028d:	cmp	dword ptr [rbp - 0x44], 9
0x400291:	jg	0x4002c5
<Block for 0x40025b, 50 bytes>
0x40025b:	mov	dword ptr [rbp - 0x44], eax
0x40025e:	nop	
0x40025f:	mov	qword ptr [rbp - 0x40], 0
0x400267:	mov	qword ptr [rbp - 0x38], 0
0x40026f:	mov	qword ptr [rbp - 0x30], 0
0x400277:	mov	qword ptr [rbp - 0x28], 0
0x40027f:	mov	qword ptr [rbp - 0x20], 0
0x400287:	cmp	dword ptr [rbp - 0x44], 0
0x40028b:	js	0x4002c5
<Block for 0x4002d1, 17 bytes>
0x4002d1:	nop	
0x4002d2:	nop	
0x4002d3:	mov	rax, qword ptr [rbp - 0x18]
0x4002d7:	xor	rax, qword ptr fs:[0x28]
0x4002e0:	je	0x4002e7
<Block for 0x400293, 22 bytes>
0x400293:	mov	eax, dword ptr [rbp - 0x44]
0x400296:	cdqe	
0x400298:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002a0:	mov	dword ptr [rbp - 0x48], 0
0x4002a7:	jmp	0x4002bd
<Block for 0x4002e7, 7 bytes>
0x4002e7:	add	rsp, 0x48
0x4002eb:	pop	rbx
0x4002ec:	pop	rbp
0x4002ed:	ret	
<Block for 0x4002e2, 5 bytes>
0x4002e2:	call	0x500018
<Block for 0x4002bd, 6 bytes>
0x4002bd:	cmp	dword ptr [rbp - 0x48], 9
0x4002c1:	jle	0x4002a9
<Block for 0x4002a9, 16 bytes>
0x4002a9:	mov	eax, dword ptr [rbp - 0x48]
0x4002ac:	cdqe	
0x4002ae:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002b2:	mov	edi, eax
0x4002b4:	call	0x500008
<Block for 0x4002c3, 2 bytes>
0x4002c3:	jmp	0x4002d1
<Block for 0x4002b9, 10 bytes>
0x4002b9:	add	dword ptr [rbp - 0x48], 1
0x4002bd:	cmp	dword ptr [rbp - 0x48], 9
0x4002c1:	jle	0x4002a9
