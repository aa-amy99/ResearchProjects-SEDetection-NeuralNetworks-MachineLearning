<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x140]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 17 bytes>
0x400037:	mov	byte ptr [rbp - 0xdd], 0
0x40003e:	mov	eax, 0
0x400043:	call	0x500008
<Block for 0x400048, 4 bytes>
0x400048:	test	eax, eax
0x40004a:	je	0x400060
<Block for 0x400060, 39 bytes>
0x400060:	lea	rax, [rbp - 0x140]
0x400067:	mov	qword ptr [rbp - 0x148], rax
0x40006e:	lea	rax, [rbp - 0xd0]
0x400075:	mov	edx, 0xc7
0x40007a:	mov	esi, 0x43
0x40007f:	mov	rdi, rax
0x400082:	call	0x500000
<Block for 0x40004c, 20 bytes>
0x40004c:	lea	rax, [rbp - 0x140]
0x400053:	sub	rax, 8
0x400057:	mov	qword ptr [rbp - 0x148], rax
0x40005e:	jmp	0x40006e
<Block for 0x400087, 29 bytes>
0x400087:	mov	byte ptr [rbp - 9], 0
0x40008b:	mov	rdx, qword ptr [rbp - 0x148]
0x400092:	lea	rax, [rbp - 0xd0]
0x400099:	mov	rsi, rdx
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500010
<Block for 0x40006e, 25 bytes>
0x40006e:	lea	rax, [rbp - 0xd0]
0x400075:	mov	edx, 0xc7
0x40007a:	mov	esi, 0x43
0x40007f:	mov	rdi, rax
0x400082:	call	0x500000
<Block for 0x4000a4, 15 bytes>
0x4000a4:	lea	rax, [rbp - 0xd0]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500018
<Block for 0x4000b3, 16 bytes>
0x4000b3:	nop	
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	xor	rax, qword ptr fs:[0x28]
0x4000c1:	je	0x4000c8
<Block for 0x4000c8, 2 bytes>
0x4000c8:	leave	
0x4000c9:	ret	
<Block for 0x4000c3, 5 bytes>
0x4000c3:	call	0x500020
