<Block for 0x4000ca, 55 bytes>
0x4000ca:	endbr64	
0x4000ce:	push	rbp
0x4000cf:	mov	rbp, rsp
0x4000d2:	sub	rsp, 0x150
0x4000d9:	mov	rax, qword ptr fs:[0x28]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	xor	eax, eax
0x4000e8:	lea	rax, [rbp - 0x140]
0x4000ef:	mov	edx, 0x63
0x4000f4:	mov	esi, 0x41
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500000
<Block for 0x400101, 17 bytes>
0x400101:	mov	byte ptr [rbp - 0xdd], 0
0x400108:	mov	eax, 0
0x40010d:	call	0x500008
<Block for 0x400112, 4 bytes>
0x400112:	test	eax, eax
0x400114:	je	0x400126
<Block for 0x400126, 39 bytes>
0x400126:	lea	rax, [rbp - 0x140]
0x40012d:	mov	qword ptr [rbp - 0x148], rax
0x400134:	lea	rax, [rbp - 0xd0]
0x40013b:	mov	edx, 0xc7
0x400140:	mov	esi, 0x43
0x400145:	mov	rdi, rax
0x400148:	call	0x500000
<Block for 0x400116, 16 bytes>
0x400116:	lea	rax, [rbp - 0x140]
0x40011d:	mov	qword ptr [rbp - 0x148], rax
0x400124:	jmp	0x400134
<Block for 0x40014d, 29 bytes>
0x40014d:	mov	byte ptr [rbp - 9], 0
0x400151:	mov	rdx, qword ptr [rbp - 0x148]
0x400158:	lea	rax, [rbp - 0xd0]
0x40015f:	mov	rsi, rdx
0x400162:	mov	rdi, rax
0x400165:	call	0x500010
<Block for 0x400134, 25 bytes>
0x400134:	lea	rax, [rbp - 0xd0]
0x40013b:	mov	edx, 0xc7
0x400140:	mov	esi, 0x43
0x400145:	mov	rdi, rax
0x400148:	call	0x500000
<Block for 0x40016a, 15 bytes>
0x40016a:	lea	rax, [rbp - 0xd0]
0x400171:	mov	rdi, rax
0x400174:	call	0x500018
<Block for 0x400179, 16 bytes>
0x400179:	nop	
0x40017a:	mov	rax, qword ptr [rbp - 8]
0x40017e:	xor	rax, qword ptr fs:[0x28]
0x400187:	je	0x40018e
<Block for 0x40018e, 2 bytes>
0x40018e:	leave	
0x40018f:	ret	
<Block for 0x400189, 5 bytes>
0x400189:	call	0x500020
