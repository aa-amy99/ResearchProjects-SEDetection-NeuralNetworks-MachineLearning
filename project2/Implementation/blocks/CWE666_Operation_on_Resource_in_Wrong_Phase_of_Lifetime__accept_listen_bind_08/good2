<Block for 0x40053d, 40 bytes>
0x40053d:	endbr64	
0x400541:	push	rbp
0x400542:	mov	rbp, rsp
0x400545:	sub	rsp, 0xa0
0x40054c:	mov	rax, qword ptr fs:[0x28]
0x400555:	mov	qword ptr [rbp - 8], rax
0x400559:	xor	eax, eax
0x40055b:	mov	eax, 0
0x400560:	call	0x400000
<Block for 0x400565, 8 bytes>
0x400565:	test	eax, eax
0x400567:	je	0x4007af
<Block for 0x4007af, 16 bytes>
0x4007af:	nop	
0x4007b0:	mov	rax, qword ptr [rbp - 8]
0x4007b4:	xor	rax, qword ptr fs:[0x28]
0x4007bd:	je	0x4007c4
<Block for 0x40056d, 135 bytes>
0x40056d:	mov	qword ptr [rbp - 0x70], 0
0x400575:	mov	qword ptr [rbp - 0x68], 0
0x40057d:	mov	qword ptr [rbp - 0x60], 0
0x400585:	mov	qword ptr [rbp - 0x58], 0
0x40058d:	mov	qword ptr [rbp - 0x50], 0
0x400595:	mov	qword ptr [rbp - 0x48], 0
0x40059d:	mov	qword ptr [rbp - 0x40], 0
0x4005a5:	mov	qword ptr [rbp - 0x38], 0
0x4005ad:	mov	qword ptr [rbp - 0x30], 0
0x4005b5:	mov	qword ptr [rbp - 0x28], 0
0x4005bd:	mov	qword ptr [rbp - 0x20], 0
0x4005c5:	mov	qword ptr [rbp - 0x18], 0
0x4005cd:	mov	dword ptr [rbp - 0x10], 0
0x4005d4:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005de:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4005e8:	lea	rax, [rbp - 0x70]
0x4005ec:	mov	rdi, rax
0x4005ef:	call	0x500000
<Block for 0x4007c4, 2 bytes>
0x4007c4:	leave	
0x4007c5:	ret	
<Block for 0x4007bf, 5 bytes>
0x4007bf:	call	0x500058
<Block for 0x4005f4, 27 bytes>
0x4005f4:	mov	qword ptr [rbp - 0x90], rax
0x4005fb:	mov	edx, 6
0x400600:	mov	esi, 1
0x400605:	mov	edi, 2
0x40060a:	call	0x500008
<Block for 0x40060f, 19 bytes>
0x40060f:	mov	dword ptr [rbp - 0x98], eax
0x400615:	cmp	dword ptr [rbp - 0x98], -1
0x40061c:	je	0x40076d
<Block for 0x40076d, 3 bytes>
0x40076d:	nop	
0x40076e:	jmp	0x400777
<Block for 0x400622, 22 bytes>
0x400622:	lea	rax, [rbp - 0x80]
0x400626:	mov	edx, 0x10
0x40062b:	mov	esi, 0
0x400630:	mov	rdi, rax
0x400633:	call	0x500010
<Block for 0x400777, 9 bytes>
0x400777:	cmp	dword ptr [rbp - 0x98], -1
0x40077e:	je	0x40078d
<Block for 0x400638, 23 bytes>
0x400638:	mov	word ptr [rbp - 0x80], 2
0x40063e:	mov	dword ptr [rbp - 0x7c], 0
0x400645:	mov	edi, 0x6987
0x40064a:	call	0x500018
<Block for 0x40078d, 9 bytes>
0x40078d:	cmp	dword ptr [rbp - 0x9c], -1
0x400794:	je	0x4007a3
<Block for 0x400780, 13 bytes>
0x400780:	mov	eax, dword ptr [rbp - 0x98]
0x400786:	mov	edi, eax
0x400788:	call	0x500048
<Block for 0x40064f, 29 bytes>
0x40064f:	mov	word ptr [rbp - 0x7e], ax
0x400653:	lea	rcx, [rbp - 0x80]
0x400657:	mov	eax, dword ptr [rbp - 0x98]
0x40065d:	mov	edx, 0x10
0x400662:	mov	rsi, rcx
0x400665:	mov	edi, eax
0x400667:	call	0x500030
<Block for 0x4007a3, 12 bytes>
0x4007a3:	lea	rax, [rbp - 0x70]
0x4007a7:	mov	rdi, rax
0x4007aa:	call	0x500050
<Block for 0x400796, 13 bytes>
0x400796:	mov	eax, dword ptr [rbp - 0x9c]
0x40079c:	mov	edi, eax
0x40079e:	call	0x500048
<Block for 0x40066c, 9 bytes>
0x40066c:	cmp	eax, -1
0x40066f:	je	0x400770
<Block for 0x400770, 3 bytes>
0x400770:	nop	
0x400771:	jmp	0x400777
<Block for 0x400675, 18 bytes>
0x400675:	mov	eax, dword ptr [rbp - 0x98]
0x40067b:	mov	esi, 5
0x400680:	mov	edi, eax
0x400682:	call	0x500028
<Block for 0x400687, 9 bytes>
0x400687:	cmp	eax, -1
0x40068a:	je	0x400773
<Block for 0x400773, 3 bytes>
0x400773:	nop	
0x400774:	jmp	0x400777
<Block for 0x400690, 23 bytes>
0x400690:	mov	eax, dword ptr [rbp - 0x98]
0x400696:	mov	edx, 0
0x40069b:	mov	esi, 0
0x4006a0:	mov	edi, eax
0x4006a2:	call	0x500020
<Block for 0x4006a7, 19 bytes>
0x4006a7:	mov	dword ptr [rbp - 0x9c], eax
0x4006ad:	cmp	dword ptr [rbp - 0x9c], -1
0x4006b4:	je	0x400776
<Block for 0x4006ba, 52 bytes>
0x4006ba:	mov	rax, qword ptr [rbp - 0x90]
0x4006c1:	mov	edx, 0x63
0x4006c6:	sub	edx, eax
0x4006c8:	mov	eax, edx
0x4006ca:	movsxd	rdx, eax
0x4006cd:	lea	rcx, [rbp - 0x70]
0x4006d1:	mov	rax, qword ptr [rbp - 0x90]
0x4006d8:	lea	rsi, [rcx + rax]
0x4006dc:	mov	eax, dword ptr [rbp - 0x9c]
0x4006e2:	mov	ecx, 0
0x4006e7:	mov	edi, eax
0x4006e9:	call	0x500038
<Block for 0x400776, 1 bytes>
0x400776:	nop	
<Block for 0x4006ee, 15 bytes>
0x4006ee:	mov	dword ptr [rbp - 0x94], eax
0x4006f4:	cmp	dword ptr [rbp - 0x94], -1
0x4006fb:	je	0x400777
<Block for 0x4006fd, 9 bytes>
0x4006fd:	cmp	dword ptr [rbp - 0x94], 0
0x400704:	je	0x400777
<Block for 0x400706, 30 bytes>
0x400706:	mov	eax, dword ptr [rbp - 0x94]
0x40070c:	cdqe	
0x40070e:	mov	byte ptr [rbp + rax - 0x70], 0
0x400713:	lea	rax, [rbp - 0x70]
0x400717:	mov	esi, 0xd
0x40071c:	mov	rdi, rax
0x40071f:	call	0x500040
<Block for 0x400724, 17 bytes>
0x400724:	mov	qword ptr [rbp - 0x88], rax
0x40072b:	cmp	qword ptr [rbp - 0x88], 0
0x400733:	je	0x40073f
<Block for 0x40073f, 17 bytes>
0x40073f:	lea	rax, [rbp - 0x70]
0x400743:	mov	esi, 0xa
0x400748:	mov	rdi, rax
0x40074b:	call	0x500040
<Block for 0x400735, 27 bytes>
0x400735:	mov	rax, qword ptr [rbp - 0x88]
0x40073c:	mov	byte ptr [rax], 0
0x40073f:	lea	rax, [rbp - 0x70]
0x400743:	mov	esi, 0xa
0x400748:	mov	rdi, rax
0x40074b:	call	0x500040
<Block for 0x400750, 17 bytes>
0x400750:	mov	qword ptr [rbp - 0x88], rax
0x400757:	cmp	qword ptr [rbp - 0x88], 0
0x40075f:	je	0x400777
<Block for 0x400761, 12 bytes>
0x400761:	mov	rax, qword ptr [rbp - 0x88]
0x400768:	mov	byte ptr [rax], 0
0x40076b:	jmp	0x400777
