<Block for 0x40017b, 40 bytes>
0x40017b:	endbr64	
0x40017f:	push	rbp
0x400180:	mov	rbp, rsp
0x400183:	push	rbx
0x400184:	sub	rsp, 0x58
0x400188:	mov	rax, qword ptr fs:[0x28]
0x400191:	mov	qword ptr [rbp - 0x18], rax
0x400195:	xor	eax, eax
0x400197:	lea	rax, [rbp - 0x50]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x400500
<Block for 0x4001a3, 26 bytes>
0x4001a3:	mov	dword ptr [rbp - 0x58], 0
0x4001aa:	mov	dword ptr [rbp - 0x54], 0
0x4001b1:	lea	rax, [rbp - 0x58]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500018
<Block for 0x4001bd, 12 bytes>
0x4001bd:	lea	rax, [rbp - 0x50]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x4006a6
<Block for 0x4001c9, 23 bytes>
0x4001c9:	mov	qword ptr [rbp - 0x60], rax
0x4001cd:	lea	rdx, [rbp - 0x60]
0x4001d1:	lea	rax, [rbp - 0x30]
0x4001d5:	mov	rsi, rdx
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x4006f6
<Block for 0x4001e0, 28 bytes>
0x4001e0:	lea	rdx, [rbp - 0x58]
0x4001e4:	mov	rsi, qword ptr [rbp - 0x30]
0x4001e8:	lea	rax, [rbp - 0x50]
0x4001ec:	mov	rcx, rdx
0x4001ef:	mov	edx, 1
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x400724
<Block for 0x4001fc, 12 bytes>
0x4001fc:	lea	rax, [rbp - 0x50]
0x400200:	mov	rdi, rax
0x400203:	call	0x4006a6
<Block for 0x400208, 23 bytes>
0x400208:	mov	qword ptr [rbp - 0x60], rax
0x40020c:	lea	rdx, [rbp - 0x60]
0x400210:	lea	rax, [rbp - 0x30]
0x400214:	mov	rsi, rdx
0x400217:	mov	rdi, rax
0x40021a:	call	0x4006f6
<Block for 0x40021f, 28 bytes>
0x40021f:	lea	rdx, [rbp - 0x58]
0x400223:	mov	rsi, qword ptr [rbp - 0x30]
0x400227:	lea	rax, [rbp - 0x50]
0x40022b:	mov	rcx, rdx
0x40022e:	mov	edx, 1
0x400233:	mov	rdi, rax
0x400236:	call	0x400724
<Block for 0x40023b, 12 bytes>
0x40023b:	lea	rax, [rbp - 0x50]
0x40023f:	mov	rdi, rax
0x400242:	call	0x4006a6
<Block for 0x400247, 23 bytes>
0x400247:	mov	qword ptr [rbp - 0x60], rax
0x40024b:	lea	rdx, [rbp - 0x60]
0x40024f:	lea	rax, [rbp - 0x30]
0x400253:	mov	rsi, rdx
0x400256:	mov	rdi, rax
0x400259:	call	0x4006f6
<Block for 0x40025e, 28 bytes>
0x40025e:	lea	rdx, [rbp - 0x58]
0x400262:	mov	rsi, qword ptr [rbp - 0x30]
0x400266:	lea	rax, [rbp - 0x50]
0x40026a:	mov	rcx, rdx
0x40026d:	mov	edx, 1
0x400272:	mov	rdi, rax
0x400275:	call	0x400724
<Block for 0x40027a, 19 bytes>
0x40027a:	lea	rdx, [rbp - 0x50]
0x40027e:	lea	rax, [rbp - 0x30]
0x400282:	mov	rsi, rdx
0x400285:	mov	rdi, rax
0x400288:	call	0x4007ea
<Block for 0x40028d, 12 bytes>
0x40028d:	lea	rax, [rbp - 0x30]
0x400291:	mov	rdi, rax
0x400294:	call	0x500020
<Block for 0x400299, 12 bytes>
0x400299:	lea	rax, [rbp - 0x30]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x40065e
<Block for 0x4002a5, 12 bytes>
0x4002a5:	lea	rax, [rbp - 0x50]
0x4002a9:	mov	rdi, rax
0x4002ac:	call	0x40065e
<Block for 0x4002b1, 16 bytes>
0x4002b1:	nop	
0x4002b2:	mov	rax, qword ptr [rbp - 0x18]
0x4002b6:	xor	rax, qword ptr fs:[0x28]
0x4002bf:	je	0x4002fb
<Block for 0x4002fb, 7 bytes>
0x4002fb:	add	rsp, 0x58
0x4002ff:	pop	rbx
0x400300:	pop	rbp
0x400301:	ret	
<Block for 0x4002c1, 2 bytes>
0x4002c1:	jmp	0x4002f6
<Block for 0x4002f6, 5 bytes>
0x4002f6:	call	0x500010
