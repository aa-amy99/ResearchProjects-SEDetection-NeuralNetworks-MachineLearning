<Block for 0x400302, 40 bytes>
0x400302:	endbr64	
0x400306:	push	rbp
0x400307:	mov	rbp, rsp
0x40030a:	push	rbx
0x40030b:	sub	rsp, 0x58
0x40030f:	mov	rax, qword ptr fs:[0x28]
0x400318:	mov	qword ptr [rbp - 0x18], rax
0x40031c:	xor	eax, eax
0x40031e:	lea	rax, [rbp - 0x50]
0x400322:	mov	rdi, rax
0x400325:	call	0x400500
<Block for 0x40032a, 26 bytes>
0x40032a:	mov	dword ptr [rbp - 0x58], 0
0x400331:	mov	dword ptr [rbp - 0x54], 0
0x400338:	lea	rax, [rbp - 0x50]
0x40033c:	mov	rdi, rax
0x40033f:	call	0x4006a6
<Block for 0x400344, 23 bytes>
0x400344:	mov	qword ptr [rbp - 0x60], rax
0x400348:	lea	rdx, [rbp - 0x60]
0x40034c:	lea	rax, [rbp - 0x30]
0x400350:	mov	rsi, rdx
0x400353:	mov	rdi, rax
0x400356:	call	0x4006f6
<Block for 0x40035b, 28 bytes>
0x40035b:	lea	rdx, [rbp - 0x58]
0x40035f:	mov	rsi, qword ptr [rbp - 0x30]
0x400363:	lea	rax, [rbp - 0x50]
0x400367:	mov	rcx, rdx
0x40036a:	mov	edx, 1
0x40036f:	mov	rdi, rax
0x400372:	call	0x400724
<Block for 0x400377, 12 bytes>
0x400377:	lea	rax, [rbp - 0x50]
0x40037b:	mov	rdi, rax
0x40037e:	call	0x4006a6
<Block for 0x400383, 23 bytes>
0x400383:	mov	qword ptr [rbp - 0x60], rax
0x400387:	lea	rdx, [rbp - 0x60]
0x40038b:	lea	rax, [rbp - 0x30]
0x40038f:	mov	rsi, rdx
0x400392:	mov	rdi, rax
0x400395:	call	0x4006f6
<Block for 0x40039a, 28 bytes>
0x40039a:	lea	rdx, [rbp - 0x58]
0x40039e:	mov	rsi, qword ptr [rbp - 0x30]
0x4003a2:	lea	rax, [rbp - 0x50]
0x4003a6:	mov	rcx, rdx
0x4003a9:	mov	edx, 1
0x4003ae:	mov	rdi, rax
0x4003b1:	call	0x400724
<Block for 0x4003b6, 12 bytes>
0x4003b6:	lea	rax, [rbp - 0x50]
0x4003ba:	mov	rdi, rax
0x4003bd:	call	0x4006a6
<Block for 0x4003c2, 23 bytes>
0x4003c2:	mov	qword ptr [rbp - 0x60], rax
0x4003c6:	lea	rdx, [rbp - 0x60]
0x4003ca:	lea	rax, [rbp - 0x30]
0x4003ce:	mov	rsi, rdx
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x4006f6
<Block for 0x4003d9, 28 bytes>
0x4003d9:	lea	rdx, [rbp - 0x58]
0x4003dd:	mov	rsi, qword ptr [rbp - 0x30]
0x4003e1:	lea	rax, [rbp - 0x50]
0x4003e5:	mov	rcx, rdx
0x4003e8:	mov	edx, 1
0x4003ed:	mov	rdi, rax
0x4003f0:	call	0x400724
<Block for 0x4003f5, 19 bytes>
0x4003f5:	lea	rdx, [rbp - 0x50]
0x4003f9:	lea	rax, [rbp - 0x30]
0x4003fd:	mov	rsi, rdx
0x400400:	mov	rdi, rax
0x400403:	call	0x4007ea
<Block for 0x400408, 12 bytes>
0x400408:	lea	rax, [rbp - 0x30]
0x40040c:	mov	rdi, rax
0x40040f:	call	0x500028
<Block for 0x400414, 12 bytes>
0x400414:	lea	rax, [rbp - 0x30]
0x400418:	mov	rdi, rax
0x40041b:	call	0x40065e
<Block for 0x400420, 12 bytes>
0x400420:	lea	rax, [rbp - 0x50]
0x400424:	mov	rdi, rax
0x400427:	call	0x40065e
<Block for 0x40042c, 16 bytes>
0x40042c:	nop	
0x40042d:	mov	rax, qword ptr [rbp - 0x18]
0x400431:	xor	rax, qword ptr fs:[0x28]
0x40043a:	je	0x400476
<Block for 0x400476, 7 bytes>
0x400476:	add	rsp, 0x58
0x40047a:	pop	rbx
0x40047b:	pop	rbp
0x40047c:	ret	
<Block for 0x40043c, 2 bytes>
0x40043c:	jmp	0x400471
<Block for 0x400471, 5 bytes>
0x400471:	call	0x500010
