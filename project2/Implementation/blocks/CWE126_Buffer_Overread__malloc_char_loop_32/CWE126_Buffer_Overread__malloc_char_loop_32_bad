<Block for 0x400000, 96 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xa8]
0x400025:	mov	qword ptr [rbp - 0x98], rax
0x40002c:	lea	rax, [rbp - 0xa8]
0x400033:	mov	qword ptr [rbp - 0x90], rax
0x40003a:	mov	qword ptr [rbp - 0xa8], 0
0x400045:	mov	rax, qword ptr [rbp - 0x98]
0x40004c:	mov	rax, qword ptr [rax]
0x40004f:	mov	qword ptr [rbp - 0x88], rax
0x400056:	mov	edi, 0x32
0x40005b:	call	0x500000
<Block for 0x400060, 17 bytes>
0x400060:	mov	qword ptr [rbp - 0x88], rax
0x400067:	cmp	qword ptr [rbp - 0x88], 0
0x40006f:	jne	0x40007b
<Block for 0x400071, 10 bytes>
0x400071:	mov	edi, 0xffffffff
0x400076:	call	0x500008
<Block for 0x40007b, 25 bytes>
0x40007b:	mov	rax, qword ptr [rbp - 0x88]
0x400082:	mov	edx, 0x31
0x400087:	mov	esi, 0x41
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400094, 67 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x88]
0x40009b:	add	rax, 0x31
0x40009f:	mov	byte ptr [rax], 0
0x4000a2:	mov	rax, qword ptr [rbp - 0x98]
0x4000a9:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b0:	mov	qword ptr [rax], rdx
0x4000b3:	mov	rax, qword ptr [rbp - 0x90]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 0x80], rax
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	mov	edx, 0x63
0x4000ca:	mov	esi, 0x43
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500010
<Block for 0x4000d7, 16 bytes>
0x4000d7:	mov	byte ptr [rbp - 0xd], 0
0x4000db:	lea	rax, [rbp - 0x70]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500018
<Block for 0x4000e7, 17 bytes>
0x4000e7:	mov	qword ptr [rbp - 0x78], rax
0x4000eb:	mov	qword ptr [rbp - 0xa0], 0
0x4000f6:	jmp	0x400121
<Block for 0x400121, 13 bytes>
0x400121:	mov	rax, qword ptr [rbp - 0xa0]
0x400128:	cmp	rax, qword ptr [rbp - 0x78]
0x40012c:	jb	0x4000f8
<Block for 0x4000f8, 54 bytes>
0x4000f8:	mov	rdx, qword ptr [rbp - 0x80]
0x4000fc:	mov	rax, qword ptr [rbp - 0xa0]
0x400103:	add	rax, rdx
0x400106:	movzx	eax, byte ptr [rax]
0x400109:	lea	rcx, [rbp - 0x70]
0x40010d:	mov	rdx, qword ptr [rbp - 0xa0]
0x400114:	add	rdx, rcx
0x400117:	mov	byte ptr [rdx], al
0x400119:	add	qword ptr [rbp - 0xa0], 1
0x400121:	mov	rax, qword ptr [rbp - 0xa0]
0x400128:	cmp	rax, qword ptr [rbp - 0x78]
0x40012c:	jb	0x4000f8
<Block for 0x40012e, 16 bytes>
0x40012e:	mov	byte ptr [rbp - 0xd], 0
0x400132:	lea	rax, [rbp - 0x70]
0x400136:	mov	rdi, rax
0x400139:	call	0x500020
<Block for 0x40013e, 12 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x80]
0x400142:	mov	rdi, rax
0x400145:	call	0x500028
<Block for 0x40014a, 16 bytes>
0x40014a:	nop	
0x40014b:	mov	rax, qword ptr [rbp - 8]
0x40014f:	xor	rax, qword ptr fs:[0x28]
0x400158:	je	0x40015f
<Block for 0x40015f, 2 bytes>
0x40015f:	leave	
0x400160:	ret	
<Block for 0x40015a, 5 bytes>
0x40015a:	call	0x500030
