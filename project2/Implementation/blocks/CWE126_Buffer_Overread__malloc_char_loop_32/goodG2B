<Block for 0x400161, 96 bytes>
0x400161:	endbr64	
0x400165:	push	rbp
0x400166:	mov	rbp, rsp
0x400169:	sub	rsp, 0xb0
0x400170:	mov	rax, qword ptr fs:[0x28]
0x400179:	mov	qword ptr [rbp - 8], rax
0x40017d:	xor	eax, eax
0x40017f:	lea	rax, [rbp - 0xa8]
0x400186:	mov	qword ptr [rbp - 0x98], rax
0x40018d:	lea	rax, [rbp - 0xa8]
0x400194:	mov	qword ptr [rbp - 0x90], rax
0x40019b:	mov	qword ptr [rbp - 0xa8], 0
0x4001a6:	mov	rax, qword ptr [rbp - 0x98]
0x4001ad:	mov	rax, qword ptr [rax]
0x4001b0:	mov	qword ptr [rbp - 0x88], rax
0x4001b7:	mov	edi, 0x64
0x4001bc:	call	0x500000
<Block for 0x4001c1, 17 bytes>
0x4001c1:	mov	qword ptr [rbp - 0x88], rax
0x4001c8:	cmp	qword ptr [rbp - 0x88], 0
0x4001d0:	jne	0x4001dc
<Block for 0x4001d2, 10 bytes>
0x4001d2:	mov	edi, 0xffffffff
0x4001d7:	call	0x500008
<Block for 0x4001dc, 25 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 0x88]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500010
<Block for 0x4001f5, 67 bytes>
0x4001f5:	mov	rax, qword ptr [rbp - 0x88]
0x4001fc:	add	rax, 0x63
0x400200:	mov	byte ptr [rax], 0
0x400203:	mov	rax, qword ptr [rbp - 0x98]
0x40020a:	mov	rdx, qword ptr [rbp - 0x88]
0x400211:	mov	qword ptr [rax], rdx
0x400214:	mov	rax, qword ptr [rbp - 0x90]
0x40021b:	mov	rax, qword ptr [rax]
0x40021e:	mov	qword ptr [rbp - 0x80], rax
0x400222:	lea	rax, [rbp - 0x70]
0x400226:	mov	edx, 0x63
0x40022b:	mov	esi, 0x43
0x400230:	mov	rdi, rax
0x400233:	call	0x500010
<Block for 0x400238, 16 bytes>
0x400238:	mov	byte ptr [rbp - 0xd], 0
0x40023c:	lea	rax, [rbp - 0x70]
0x400240:	mov	rdi, rax
0x400243:	call	0x500018
<Block for 0x400248, 17 bytes>
0x400248:	mov	qword ptr [rbp - 0x78], rax
0x40024c:	mov	qword ptr [rbp - 0xa0], 0
0x400257:	jmp	0x400282
<Block for 0x400282, 13 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0xa0]
0x400289:	cmp	rax, qword ptr [rbp - 0x78]
0x40028d:	jb	0x400259
<Block for 0x400259, 54 bytes>
0x400259:	mov	rdx, qword ptr [rbp - 0x80]
0x40025d:	mov	rax, qword ptr [rbp - 0xa0]
0x400264:	add	rax, rdx
0x400267:	movzx	eax, byte ptr [rax]
0x40026a:	lea	rcx, [rbp - 0x70]
0x40026e:	mov	rdx, qword ptr [rbp - 0xa0]
0x400275:	add	rdx, rcx
0x400278:	mov	byte ptr [rdx], al
0x40027a:	add	qword ptr [rbp - 0xa0], 1
0x400282:	mov	rax, qword ptr [rbp - 0xa0]
0x400289:	cmp	rax, qword ptr [rbp - 0x78]
0x40028d:	jb	0x400259
<Block for 0x40028f, 16 bytes>
0x40028f:	mov	byte ptr [rbp - 0xd], 0
0x400293:	lea	rax, [rbp - 0x70]
0x400297:	mov	rdi, rax
0x40029a:	call	0x500020
<Block for 0x40029f, 12 bytes>
0x40029f:	mov	rax, qword ptr [rbp - 0x80]
0x4002a3:	mov	rdi, rax
0x4002a6:	call	0x500028
<Block for 0x4002ab, 16 bytes>
0x4002ab:	nop	
0x4002ac:	mov	rax, qword ptr [rbp - 8]
0x4002b0:	xor	rax, qword ptr fs:[0x28]
0x4002b9:	je	0x4002c0
<Block for 0x4002c0, 2 bytes>
0x4002c0:	leave	
0x4002c1:	ret	
<Block for 0x4002bb, 5 bytes>
0x4002bb:	call	0x500030
