<Block for 0x4002f0, 40 bytes>
0x4002f0:	endbr64	
0x4002f4:	push	rbp
0x4002f5:	mov	rbp, rsp
0x4002f8:	sub	rsp, 0xa0
0x4002ff:	mov	rax, qword ptr fs:[0x28]
0x400308:	mov	qword ptr [rbp - 8], rax
0x40030c:	xor	eax, eax
0x40030e:	mov	eax, 0
0x400313:	call	0x40000f
<Block for 0x400318, 4 bytes>
0x400318:	test	eax, eax
0x40031a:	je	0x40032d
<Block for 0x40032d, 135 bytes>
0x40032d:	mov	qword ptr [rbp - 0x70], 0
0x400335:	mov	qword ptr [rbp - 0x68], 0
0x40033d:	mov	qword ptr [rbp - 0x60], 0
0x400345:	mov	qword ptr [rbp - 0x58], 0
0x40034d:	mov	qword ptr [rbp - 0x50], 0
0x400355:	mov	qword ptr [rbp - 0x48], 0
0x40035d:	mov	qword ptr [rbp - 0x40], 0
0x400365:	mov	qword ptr [rbp - 0x38], 0
0x40036d:	mov	qword ptr [rbp - 0x30], 0
0x400375:	mov	qword ptr [rbp - 0x28], 0
0x40037d:	mov	qword ptr [rbp - 0x20], 0
0x400385:	mov	qword ptr [rbp - 0x18], 0
0x40038d:	mov	dword ptr [rbp - 0x10], 0
0x400394:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x40039e:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4003a8:	lea	rax, [rbp - 0x70]
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x500000
<Block for 0x40031c, 12 bytes>
0x40031c:	lea	rdi, [rip + 0x50b]
0x400323:	call	0x500058
<Block for 0x4003b4, 27 bytes>
0x4003b4:	mov	qword ptr [rbp - 0x90], rax
0x4003bb:	mov	edx, 6
0x4003c0:	mov	esi, 1
0x4003c5:	mov	edi, 2
0x4003ca:	call	0x500008
<Block for 0x400328, 5 bytes>
0x400328:	jmp	0x40056f
<Block for 0x4003cf, 19 bytes>
0x4003cf:	mov	dword ptr [rbp - 0x98], eax
0x4003d5:	cmp	dword ptr [rbp - 0x98], -1
0x4003dc:	je	0x40052d
<Block for 0x40056f, 16 bytes>
0x40056f:	nop	
0x400570:	mov	rax, qword ptr [rbp - 8]
0x400574:	xor	rax, qword ptr fs:[0x28]
0x40057d:	je	0x400584
<Block for 0x40052d, 3 bytes>
0x40052d:	nop	
0x40052e:	jmp	0x400537
<Block for 0x4003e2, 22 bytes>
0x4003e2:	lea	rax, [rbp - 0x80]
0x4003e6:	mov	edx, 0x10
0x4003eb:	mov	esi, 0
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x500018
<Block for 0x400584, 2 bytes>
0x400584:	leave	
0x400585:	ret	
<Block for 0x40057f, 5 bytes>
0x40057f:	call	0x500060
<Block for 0x400537, 9 bytes>
0x400537:	cmp	dword ptr [rbp - 0x98], -1
0x40053e:	je	0x40054d
<Block for 0x4003f8, 23 bytes>
0x4003f8:	mov	word ptr [rbp - 0x80], 2
0x4003fe:	mov	dword ptr [rbp - 0x7c], 0
0x400405:	mov	edi, 0x6987
0x40040a:	call	0x500020
<Block for 0x40054d, 9 bytes>
0x40054d:	cmp	dword ptr [rbp - 0x9c], -1
0x400554:	je	0x400563
<Block for 0x400540, 13 bytes>
0x400540:	mov	eax, dword ptr [rbp - 0x98]
0x400546:	mov	edi, eax
0x400548:	call	0x500050
<Block for 0x40040f, 29 bytes>
0x40040f:	mov	word ptr [rbp - 0x7e], ax
0x400413:	lea	rcx, [rbp - 0x80]
0x400417:	mov	eax, dword ptr [rbp - 0x98]
0x40041d:	mov	edx, 0x10
0x400422:	mov	rsi, rcx
0x400425:	mov	edi, eax
0x400427:	call	0x500028
<Block for 0x400563, 12 bytes>
0x400563:	lea	rax, [rbp - 0x70]
0x400567:	mov	rdi, rax
0x40056a:	call	0x500058
<Block for 0x400556, 13 bytes>
0x400556:	mov	eax, dword ptr [rbp - 0x9c]
0x40055c:	mov	edi, eax
0x40055e:	call	0x500050
<Block for 0x40042c, 9 bytes>
0x40042c:	cmp	eax, -1
0x40042f:	je	0x400530
<Block for 0x400530, 3 bytes>
0x400530:	nop	
0x400531:	jmp	0x400537
<Block for 0x400435, 18 bytes>
0x400435:	mov	eax, dword ptr [rbp - 0x98]
0x40043b:	mov	esi, 5
0x400440:	mov	edi, eax
0x400442:	call	0x500030
<Block for 0x400447, 9 bytes>
0x400447:	cmp	eax, -1
0x40044a:	je	0x400533
<Block for 0x400533, 3 bytes>
0x400533:	nop	
0x400534:	jmp	0x400537
<Block for 0x400450, 23 bytes>
0x400450:	mov	eax, dword ptr [rbp - 0x98]
0x400456:	mov	edx, 0
0x40045b:	mov	esi, 0
0x400460:	mov	edi, eax
0x400462:	call	0x500038
<Block for 0x400467, 19 bytes>
0x400467:	mov	dword ptr [rbp - 0x9c], eax
0x40046d:	cmp	dword ptr [rbp - 0x9c], -1
0x400474:	je	0x400536
<Block for 0x40047a, 52 bytes>
0x40047a:	mov	rax, qword ptr [rbp - 0x90]
0x400481:	mov	edx, 0x63
0x400486:	sub	edx, eax
0x400488:	mov	eax, edx
0x40048a:	movsxd	rdx, eax
0x40048d:	lea	rcx, [rbp - 0x70]
0x400491:	mov	rax, qword ptr [rbp - 0x90]
0x400498:	lea	rsi, [rcx + rax]
0x40049c:	mov	eax, dword ptr [rbp - 0x9c]
0x4004a2:	mov	ecx, 0
0x4004a7:	mov	edi, eax
0x4004a9:	call	0x500040
<Block for 0x400536, 1 bytes>
0x400536:	nop	
<Block for 0x4004ae, 15 bytes>
0x4004ae:	mov	dword ptr [rbp - 0x94], eax
0x4004b4:	cmp	dword ptr [rbp - 0x94], -1
0x4004bb:	je	0x400537
<Block for 0x4004bd, 9 bytes>
0x4004bd:	cmp	dword ptr [rbp - 0x94], 0
0x4004c4:	je	0x400537
<Block for 0x4004c6, 30 bytes>
0x4004c6:	mov	eax, dword ptr [rbp - 0x94]
0x4004cc:	cdqe	
0x4004ce:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004d3:	lea	rax, [rbp - 0x70]
0x4004d7:	mov	esi, 0xd
0x4004dc:	mov	rdi, rax
0x4004df:	call	0x500048
<Block for 0x4004e4, 17 bytes>
0x4004e4:	mov	qword ptr [rbp - 0x88], rax
0x4004eb:	cmp	qword ptr [rbp - 0x88], 0
0x4004f3:	je	0x4004ff
<Block for 0x4004ff, 17 bytes>
0x4004ff:	lea	rax, [rbp - 0x70]
0x400503:	mov	esi, 0xa
0x400508:	mov	rdi, rax
0x40050b:	call	0x500048
<Block for 0x4004f5, 27 bytes>
0x4004f5:	mov	rax, qword ptr [rbp - 0x88]
0x4004fc:	mov	byte ptr [rax], 0
0x4004ff:	lea	rax, [rbp - 0x70]
0x400503:	mov	esi, 0xa
0x400508:	mov	rdi, rax
0x40050b:	call	0x500048
<Block for 0x400510, 17 bytes>
0x400510:	mov	qword ptr [rbp - 0x88], rax
0x400517:	cmp	qword ptr [rbp - 0x88], 0
0x40051f:	je	0x400537
<Block for 0x400521, 12 bytes>
0x400521:	mov	rax, qword ptr [rbp - 0x88]
0x400528:	mov	byte ptr [rax], 0
0x40052b:	jmp	0x400537
