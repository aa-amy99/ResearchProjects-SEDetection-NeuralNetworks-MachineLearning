<Block for 0x400586, 40 bytes>
0x400586:	endbr64	
0x40058a:	push	rbp
0x40058b:	mov	rbp, rsp
0x40058e:	sub	rsp, 0xa0
0x400595:	mov	rax, qword ptr fs:[0x28]
0x40059e:	mov	qword ptr [rbp - 8], rax
0x4005a2:	xor	eax, eax
0x4005a4:	mov	eax, 0
0x4005a9:	call	0x400000
<Block for 0x4005ae, 8 bytes>
0x4005ae:	test	eax, eax
0x4005b0:	je	0x4007f8
<Block for 0x4007f8, 16 bytes>
0x4007f8:	nop	
0x4007f9:	mov	rax, qword ptr [rbp - 8]
0x4007fd:	xor	rax, qword ptr fs:[0x28]
0x400806:	je	0x40080d
<Block for 0x4005b6, 135 bytes>
0x4005b6:	mov	qword ptr [rbp - 0x70], 0
0x4005be:	mov	qword ptr [rbp - 0x68], 0
0x4005c6:	mov	qword ptr [rbp - 0x60], 0
0x4005ce:	mov	qword ptr [rbp - 0x58], 0
0x4005d6:	mov	qword ptr [rbp - 0x50], 0
0x4005de:	mov	qword ptr [rbp - 0x48], 0
0x4005e6:	mov	qword ptr [rbp - 0x40], 0
0x4005ee:	mov	qword ptr [rbp - 0x38], 0
0x4005f6:	mov	qword ptr [rbp - 0x30], 0
0x4005fe:	mov	qword ptr [rbp - 0x28], 0
0x400606:	mov	qword ptr [rbp - 0x20], 0
0x40060e:	mov	qword ptr [rbp - 0x18], 0
0x400616:	mov	dword ptr [rbp - 0x10], 0
0x40061d:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400627:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400631:	lea	rax, [rbp - 0x70]
0x400635:	mov	rdi, rax
0x400638:	call	0x500000
<Block for 0x40080d, 2 bytes>
0x40080d:	leave	
0x40080e:	ret	
<Block for 0x400808, 5 bytes>
0x400808:	call	0x500060
<Block for 0x40063d, 27 bytes>
0x40063d:	mov	qword ptr [rbp - 0x90], rax
0x400644:	mov	edx, 6
0x400649:	mov	esi, 1
0x40064e:	mov	edi, 2
0x400653:	call	0x500008
<Block for 0x400658, 19 bytes>
0x400658:	mov	dword ptr [rbp - 0x98], eax
0x40065e:	cmp	dword ptr [rbp - 0x98], -1
0x400665:	je	0x4007b6
<Block for 0x4007b6, 3 bytes>
0x4007b6:	nop	
0x4007b7:	jmp	0x4007c0
<Block for 0x40066b, 22 bytes>
0x40066b:	lea	rax, [rbp - 0x80]
0x40066f:	mov	edx, 0x10
0x400674:	mov	esi, 0
0x400679:	mov	rdi, rax
0x40067c:	call	0x500018
<Block for 0x4007c0, 9 bytes>
0x4007c0:	cmp	dword ptr [rbp - 0x98], -1
0x4007c7:	je	0x4007d6
<Block for 0x400681, 23 bytes>
0x400681:	mov	word ptr [rbp - 0x80], 2
0x400687:	mov	dword ptr [rbp - 0x7c], 0
0x40068e:	mov	edi, 0x6987
0x400693:	call	0x500020
<Block for 0x4007d6, 9 bytes>
0x4007d6:	cmp	dword ptr [rbp - 0x9c], -1
0x4007dd:	je	0x4007ec
<Block for 0x4007c9, 13 bytes>
0x4007c9:	mov	eax, dword ptr [rbp - 0x98]
0x4007cf:	mov	edi, eax
0x4007d1:	call	0x500050
<Block for 0x400698, 29 bytes>
0x400698:	mov	word ptr [rbp - 0x7e], ax
0x40069c:	lea	rcx, [rbp - 0x80]
0x4006a0:	mov	eax, dword ptr [rbp - 0x98]
0x4006a6:	mov	edx, 0x10
0x4006ab:	mov	rsi, rcx
0x4006ae:	mov	edi, eax
0x4006b0:	call	0x500028
<Block for 0x4007ec, 12 bytes>
0x4007ec:	lea	rax, [rbp - 0x70]
0x4007f0:	mov	rdi, rax
0x4007f3:	call	0x500058
<Block for 0x4007df, 13 bytes>
0x4007df:	mov	eax, dword ptr [rbp - 0x9c]
0x4007e5:	mov	edi, eax
0x4007e7:	call	0x500050
<Block for 0x4006b5, 9 bytes>
0x4006b5:	cmp	eax, -1
0x4006b8:	je	0x4007b9
<Block for 0x4007b9, 3 bytes>
0x4007b9:	nop	
0x4007ba:	jmp	0x4007c0
<Block for 0x4006be, 18 bytes>
0x4006be:	mov	eax, dword ptr [rbp - 0x98]
0x4006c4:	mov	esi, 5
0x4006c9:	mov	edi, eax
0x4006cb:	call	0x500030
<Block for 0x4006d0, 9 bytes>
0x4006d0:	cmp	eax, -1
0x4006d3:	je	0x4007bc
<Block for 0x4007bc, 3 bytes>
0x4007bc:	nop	
0x4007bd:	jmp	0x4007c0
<Block for 0x4006d9, 23 bytes>
0x4006d9:	mov	eax, dword ptr [rbp - 0x98]
0x4006df:	mov	edx, 0
0x4006e4:	mov	esi, 0
0x4006e9:	mov	edi, eax
0x4006eb:	call	0x500038
<Block for 0x4006f0, 19 bytes>
0x4006f0:	mov	dword ptr [rbp - 0x9c], eax
0x4006f6:	cmp	dword ptr [rbp - 0x9c], -1
0x4006fd:	je	0x4007bf
<Block for 0x400703, 52 bytes>
0x400703:	mov	rax, qword ptr [rbp - 0x90]
0x40070a:	mov	edx, 0x63
0x40070f:	sub	edx, eax
0x400711:	mov	eax, edx
0x400713:	movsxd	rdx, eax
0x400716:	lea	rcx, [rbp - 0x70]
0x40071a:	mov	rax, qword ptr [rbp - 0x90]
0x400721:	lea	rsi, [rcx + rax]
0x400725:	mov	eax, dword ptr [rbp - 0x9c]
0x40072b:	mov	ecx, 0
0x400730:	mov	edi, eax
0x400732:	call	0x500040
<Block for 0x4007bf, 1 bytes>
0x4007bf:	nop	
<Block for 0x400737, 15 bytes>
0x400737:	mov	dword ptr [rbp - 0x94], eax
0x40073d:	cmp	dword ptr [rbp - 0x94], -1
0x400744:	je	0x4007c0
<Block for 0x400746, 9 bytes>
0x400746:	cmp	dword ptr [rbp - 0x94], 0
0x40074d:	je	0x4007c0
<Block for 0x40074f, 30 bytes>
0x40074f:	mov	eax, dword ptr [rbp - 0x94]
0x400755:	cdqe	
0x400757:	mov	byte ptr [rbp + rax - 0x70], 0
0x40075c:	lea	rax, [rbp - 0x70]
0x400760:	mov	esi, 0xd
0x400765:	mov	rdi, rax
0x400768:	call	0x500048
<Block for 0x40076d, 17 bytes>
0x40076d:	mov	qword ptr [rbp - 0x88], rax
0x400774:	cmp	qword ptr [rbp - 0x88], 0
0x40077c:	je	0x400788
<Block for 0x400788, 17 bytes>
0x400788:	lea	rax, [rbp - 0x70]
0x40078c:	mov	esi, 0xa
0x400791:	mov	rdi, rax
0x400794:	call	0x500048
<Block for 0x40077e, 27 bytes>
0x40077e:	mov	rax, qword ptr [rbp - 0x88]
0x400785:	mov	byte ptr [rax], 0
0x400788:	lea	rax, [rbp - 0x70]
0x40078c:	mov	esi, 0xa
0x400791:	mov	rdi, rax
0x400794:	call	0x500048
<Block for 0x400799, 17 bytes>
0x400799:	mov	qword ptr [rbp - 0x88], rax
0x4007a0:	cmp	qword ptr [rbp - 0x88], 0
0x4007a8:	je	0x4007c0
<Block for 0x4007aa, 12 bytes>
0x4007aa:	mov	rax, qword ptr [rbp - 0x88]
0x4007b1:	mov	byte ptr [rax], 0
0x4007b4:	jmp	0x4007c0
