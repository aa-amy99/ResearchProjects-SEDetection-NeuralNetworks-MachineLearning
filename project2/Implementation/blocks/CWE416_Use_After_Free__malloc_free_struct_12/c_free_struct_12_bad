<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], 0
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x400098
<Block for 0x400098, 10 bytes>
0x400098:	mov	edi, 0x320
0x40009d:	call	0x500008
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0x320
0x400027:	call	0x500008
<Block for 0x4000a2, 11 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x18], rax
0x4000a6:	cmp	qword ptr [rbp - 0x18], 0
0x4000ab:	jne	0x4000b7
<Block for 0x40002c, 11 bytes>
0x40002c:	mov	qword ptr [rbp - 0x18], rax
0x400030:	cmp	qword ptr [rbp - 0x18], 0
0x400035:	jne	0x400041
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 0xffffffff
0x4000b2:	call	0x500010
<Block for 0x4000b7, 10 bytes>
0x4000b7:	mov	qword ptr [rbp - 8], 0
0x4000bf:	jmp	0x4000f9
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0xffffffff
0x40003c:	call	0x500010
<Block for 0x400041, 10 bytes>
0x400041:	mov	qword ptr [rbp - 0x10], 0
0x400049:	jmp	0x400083
<Block for 0x4000f9, 7 bytes>
0x4000f9:	cmp	qword ptr [rbp - 8], 0x63
0x4000fe:	jbe	0x4000c1
<Block for 0x400083, 7 bytes>
0x400083:	cmp	qword ptr [rbp - 0x10], 0x63
0x400088:	jbe	0x40004b
<Block for 0x4000c1, 63 bytes>
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	lea	rdx, [rax*8]
0x4000cd:	mov	rax, qword ptr [rbp - 0x18]
0x4000d1:	add	rax, rdx
0x4000d4:	mov	dword ptr [rax], 1
0x4000da:	mov	rax, qword ptr [rbp - 8]
0x4000de:	lea	rdx, [rax*8]
0x4000e6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ea:	add	rax, rdx
0x4000ed:	mov	dword ptr [rax + 4], 2
0x4000f4:	add	qword ptr [rbp - 8], 1
0x4000f9:	cmp	qword ptr [rbp - 8], 0x63
0x4000fe:	jbe	0x4000c1
<Block for 0x400100, 10 bytes>
0x400100:	mov	eax, 0
0x400105:	call	0x500000
<Block for 0x40004b, 63 bytes>
0x40004b:	mov	rax, qword ptr [rbp - 0x10]
0x40004f:	lea	rdx, [rax*8]
0x400057:	mov	rax, qword ptr [rbp - 0x18]
0x40005b:	add	rax, rdx
0x40005e:	mov	dword ptr [rax], 1
0x400064:	mov	rax, qword ptr [rbp - 0x10]
0x400068:	lea	rdx, [rax*8]
0x400070:	mov	rax, qword ptr [rbp - 0x18]
0x400074:	add	rax, rdx
0x400077:	mov	dword ptr [rax + 4], 2
0x40007e:	add	qword ptr [rbp - 0x10], 1
0x400083:	cmp	qword ptr [rbp - 0x10], 0x63
0x400088:	jbe	0x40004b
<Block for 0x40008a, 12 bytes>
0x40008a:	mov	rax, qword ptr [rbp - 0x18]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500018
<Block for 0x40010a, 4 bytes>
0x40010a:	test	eax, eax
0x40010c:	je	0x40011a
<Block for 0x400096, 2 bytes>
0x400096:	jmp	0x400100
<Block for 0x40011a, 3 bytes>
0x40011a:	nop	
0x40011b:	leave	
0x40011c:	ret	
<Block for 0x40010e, 12 bytes>
0x40010e:	mov	rax, qword ptr [rbp - 0x18]
0x400112:	mov	rdi, rax
0x400115:	call	0x500020
