<Block for 0x400236, 30 bytes>
0x400236:	endbr64	
0x40023a:	push	rbp
0x40023b:	mov	rbp, rsp
0x40023e:	sub	rsp, 0x20
0x400242:	mov	qword ptr [rbp - 0x18], 0
0x40024a:	mov	eax, 0
0x40024f:	call	0x500000
<Block for 0x400254, 4 bytes>
0x400254:	test	eax, eax
0x400256:	je	0x4002c2
<Block for 0x4002c2, 10 bytes>
0x4002c2:	mov	edi, 0x320
0x4002c7:	call	0x500008
<Block for 0x400258, 10 bytes>
0x400258:	mov	edi, 0x320
0x40025d:	call	0x500008
<Block for 0x4002cc, 11 bytes>
0x4002cc:	mov	qword ptr [rbp - 0x18], rax
0x4002d0:	cmp	qword ptr [rbp - 0x18], 0
0x4002d5:	jne	0x4002e1
<Block for 0x400262, 11 bytes>
0x400262:	mov	qword ptr [rbp - 0x18], rax
0x400266:	cmp	qword ptr [rbp - 0x18], 0
0x40026b:	jne	0x400277
<Block for 0x4002d7, 10 bytes>
0x4002d7:	mov	edi, 0xffffffff
0x4002dc:	call	0x500010
<Block for 0x4002e1, 10 bytes>
0x4002e1:	mov	qword ptr [rbp - 8], 0
0x4002e9:	jmp	0x400323
<Block for 0x40026d, 10 bytes>
0x40026d:	mov	edi, 0xffffffff
0x400272:	call	0x500010
<Block for 0x400277, 10 bytes>
0x400277:	mov	qword ptr [rbp - 0x10], 0
0x40027f:	jmp	0x4002b9
<Block for 0x400323, 7 bytes>
0x400323:	cmp	qword ptr [rbp - 8], 0x63
0x400328:	jbe	0x4002eb
<Block for 0x4002b9, 7 bytes>
0x4002b9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4002be:	jbe	0x400281
<Block for 0x4002eb, 63 bytes>
0x4002eb:	mov	rax, qword ptr [rbp - 8]
0x4002ef:	lea	rdx, [rax*8]
0x4002f7:	mov	rax, qword ptr [rbp - 0x18]
0x4002fb:	add	rax, rdx
0x4002fe:	mov	dword ptr [rax], 1
0x400304:	mov	rax, qword ptr [rbp - 8]
0x400308:	lea	rdx, [rax*8]
0x400310:	mov	rax, qword ptr [rbp - 0x18]
0x400314:	add	rax, rdx
0x400317:	mov	dword ptr [rax + 4], 2
0x40031e:	add	qword ptr [rbp - 8], 1
0x400323:	cmp	qword ptr [rbp - 8], 0x63
0x400328:	jbe	0x4002eb
<Block for 0x40032a, 10 bytes>
0x40032a:	mov	eax, 0
0x40032f:	call	0x500000
<Block for 0x400281, 63 bytes>
0x400281:	mov	rax, qword ptr [rbp - 0x10]
0x400285:	lea	rdx, [rax*8]
0x40028d:	mov	rax, qword ptr [rbp - 0x18]
0x400291:	add	rax, rdx
0x400294:	mov	dword ptr [rax], 1
0x40029a:	mov	rax, qword ptr [rbp - 0x10]
0x40029e:	lea	rdx, [rax*8]
0x4002a6:	mov	rax, qword ptr [rbp - 0x18]
0x4002aa:	add	rax, rdx
0x4002ad:	mov	dword ptr [rax + 4], 2
0x4002b4:	add	qword ptr [rbp - 0x10], 1
0x4002b9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4002be:	jbe	0x400281
<Block for 0x4002c0, 2 bytes>
0x4002c0:	jmp	0x40032a
<Block for 0x400334, 4 bytes>
0x400334:	test	eax, eax
0x400336:	je	0x400346
<Block for 0x400346, 12 bytes>
0x400346:	mov	rax, qword ptr [rbp - 0x18]
0x40034a:	mov	rdi, rax
0x40034d:	call	0x500020
<Block for 0x400338, 12 bytes>
0x400338:	mov	rax, qword ptr [rbp - 0x18]
0x40033c:	mov	rdi, rax
0x40033f:	call	0x500020
<Block for 0x400352, 3 bytes>
0x400352:	nop	
0x400353:	leave	
0x400354:	ret	
<Block for 0x400344, 2 bytes>
0x400344:	jmp	0x400352
