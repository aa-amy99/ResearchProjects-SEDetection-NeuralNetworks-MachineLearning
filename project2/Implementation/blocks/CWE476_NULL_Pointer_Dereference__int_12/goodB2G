<Block for 0x400098, 22 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0x10
0x4000a4:	mov	eax, 0
0x4000a9:	call	0x500000
<Block for 0x4000ae, 4 bytes>
0x4000ae:	test	eax, eax
0x4000b0:	je	0x4000bc
<Block for 0x4000bc, 18 bytes>
0x4000bc:	mov	qword ptr [rbp - 8], 0
0x4000c4:	mov	eax, 0
0x4000c9:	call	0x500000
<Block for 0x4000b2, 10 bytes>
0x4000b2:	mov	qword ptr [rbp - 8], 0
0x4000ba:	jmp	0x4000c4
<Block for 0x4000ce, 4 bytes>
0x4000ce:	test	eax, eax
0x4000d0:	je	0x4000f6
<Block for 0x4000c4, 10 bytes>
0x4000c4:	mov	eax, 0
0x4000c9:	call	0x500000
<Block for 0x4000f6, 7 bytes>
0x4000f6:	cmp	qword ptr [rbp - 8], 0
0x4000fb:	je	0x40010c
<Block for 0x4000d2, 7 bytes>
0x4000d2:	cmp	qword ptr [rbp - 8], 0
0x4000d7:	je	0x4000e8
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rdi, [rip + 0xaa]
0x400113:	call	0x500010
<Block for 0x4000fd, 13 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	mov	eax, dword ptr [rax]
0x400103:	mov	edi, eax
0x400105:	call	0x500008
<Block for 0x4000e8, 12 bytes>
0x4000e8:	lea	rdi, [rip + 0xce]
0x4000ef:	call	0x500010
<Block for 0x4000d9, 13 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	mov	eax, dword ptr [rax]
0x4000df:	mov	edi, eax
0x4000e1:	call	0x500008
<Block for 0x400118, 3 bytes>
0x400118:	nop	
0x400119:	leave	
0x40011a:	ret	
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x400118
<Block for 0x4000f4, 2 bytes>
0x4000f4:	jmp	0x400118
<Block for 0x4000e6, 2 bytes>
0x4000e6:	jmp	0x400118
