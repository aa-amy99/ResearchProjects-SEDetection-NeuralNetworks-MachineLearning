<Block for 0x40027f, 40 bytes>
0x40027f:	endbr64	
0x400283:	push	rbp
0x400284:	mov	rbp, rsp
0x400287:	push	rbx
0x400288:	sub	rsp, 0x38
0x40028c:	mov	rax, qword ptr fs:[0x28]
0x400295:	mov	qword ptr [rbp - 0x18], rax
0x400299:	xor	eax, eax
0x40029b:	lea	rax, [rbp - 0x30]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x4008bc
<Block for 0x4002a7, 5 bytes>
0x4002a7:	call	0x500000
<Block for 0x4002ac, 9 bytes>
0x4002ac:	test	eax, eax
0x4002ae:	setne	al
0x4002b1:	test	al, al
0x4002b3:	je	0x4002eb
<Block for 0x4002eb, 26 bytes>
0x4002eb:	mov	dword ptr [rbp - 0x38], 0x64
0x4002f2:	lea	rdx, [rbp - 0x38]
0x4002f6:	lea	rax, [rbp - 0x30]
0x4002fa:	mov	rsi, rdx
0x4002fd:	mov	rdi, rax
0x400300:	call	0x4009a4
<Block for 0x4002b5, 26 bytes>
0x4002b5:	mov	dword ptr [rbp - 0x38], 0x64
0x4002bc:	lea	rdx, [rbp - 0x38]
0x4002c0:	lea	rax, [rbp - 0x30]
0x4002c4:	mov	rsi, rdx
0x4002c7:	mov	rdi, rax
0x4002ca:	call	0x4009a4
<Block for 0x400305, 26 bytes>
0x400305:	mov	dword ptr [rbp - 0x38], 0
0x40030c:	lea	rdx, [rbp - 0x38]
0x400310:	lea	rax, [rbp - 0x30]
0x400314:	mov	rsi, rdx
0x400317:	mov	rdi, rax
0x40031a:	call	0x4009a4
<Block for 0x4002cf, 26 bytes>
0x4002cf:	mov	dword ptr [rbp - 0x38], 0
0x4002d6:	lea	rdx, [rbp - 0x38]
0x4002da:	lea	rax, [rbp - 0x30]
0x4002de:	mov	rsi, rdx
0x4002e1:	mov	rdi, rax
0x4002e4:	call	0x4009a4
<Block for 0x40031f, 5 bytes>
0x40031f:	call	0x500000
<Block for 0x4002e9, 2 bytes>
0x4002e9:	jmp	0x40031f
<Block for 0x400324, 13 bytes>
0x400324:	test	eax, eax
0x400326:	setne	al
0x400329:	test	al, al
0x40032b:	je	0x4003e3
<Block for 0x4003e3, 12 bytes>
0x4003e3:	lea	rax, [rbp - 0x40]
0x4003e7:	mov	rdi, rax
0x4003ea:	call	0x4009f2
<Block for 0x400331, 12 bytes>
0x400331:	lea	rax, [rbp - 0x40]
0x400335:	mov	rdi, rax
0x400338:	call	0x4009f2
<Block for 0x4003ef, 19 bytes>
0x4003ef:	lea	rsi, [rip + 0x41a]
0x4003f6:	lea	rdi, [rip + 0xffc0b]
0x4003fd:	call	0x500010
<Block for 0x40033d, 19 bytes>
0x40033d:	lea	rsi, [rip + 0x4cc]
0x400344:	lea	rdi, [rip + 0xffcbd]
0x40034b:	call	0x500010
<Block for 0x400402, 12 bytes>
0x400402:	lea	rax, [rbp - 0x30]
0x400406:	mov	rdi, rax
0x400409:	call	0x400a0c
<Block for 0x400350, 12 bytes>
0x400350:	lea	rax, [rbp - 0x30]
0x400354:	mov	rdi, rax
0x400357:	call	0x400a0c
<Block for 0x40040e, 16 bytes>
0x40040e:	mov	qword ptr [rbp - 0x40], rax
0x400412:	lea	rax, [rbp - 0x30]
0x400416:	mov	rdi, rax
0x400419:	call	0x400a5c
<Block for 0x40035c, 16 bytes>
0x40035c:	mov	qword ptr [rbp - 0x40], rax
0x400360:	lea	rax, [rbp - 0x30]
0x400364:	mov	rdi, rax
0x400367:	call	0x400a5c
<Block for 0x40041e, 23 bytes>
0x40041e:	mov	qword ptr [rbp - 0x38], rax
0x400422:	lea	rdx, [rbp - 0x38]
0x400426:	lea	rax, [rbp - 0x40]
0x40042a:	mov	rsi, rdx
0x40042d:	mov	rdi, rax
0x400430:	call	0x400aa8
<Block for 0x40036c, 23 bytes>
0x40036c:	mov	qword ptr [rbp - 0x38], rax
0x400370:	lea	rdx, [rbp - 0x38]
0x400374:	lea	rax, [rbp - 0x40]
0x400378:	mov	rsi, rdx
0x40037b:	mov	rdi, rax
0x40037e:	call	0x400aa8
<Block for 0x400435, 4 bytes>
0x400435:	test	al, al
0x400437:	je	0x40047a
<Block for 0x400383, 4 bytes>
0x400383:	test	al, al
0x400385:	je	0x4003c8
<Block for 0x40047a, 22 bytes>
0x40047a:	mov	rax, qword ptr [rip + 0xffba7]
0x400481:	mov	rsi, rax
0x400484:	lea	rdi, [rip + 0xffb7d]
0x40048b:	call	0x500030
<Block for 0x400439, 19 bytes>
0x400439:	lea	rsi, [rip + 0x3e4]
0x400440:	lea	rdi, [rip + 0xffbc1]
0x400447:	call	0x500010
<Block for 0x4003c8, 22 bytes>
0x4003c8:	mov	rax, qword ptr [rip + 0xffc59]
0x4003cf:	mov	rsi, rax
0x4003d2:	lea	rdi, [rip + 0xffc2f]
0x4003d9:	call	0x500030
<Block for 0x400387, 19 bytes>
0x400387:	lea	rsi, [rip + 0x496]
0x40038e:	lea	rdi, [rip + 0xffc73]
0x400395:	call	0x500010
<Block for 0x400490, 12 bytes>
0x400490:	lea	rax, [rbp - 0x30]
0x400494:	mov	rdi, rax
0x400497:	call	0x4008dc
<Block for 0x40044c, 15 bytes>
0x40044c:	mov	rbx, rax
0x40044f:	lea	rax, [rbp - 0x40]
0x400453:	mov	rdi, rax
0x400456:	call	0x400b26
<Block for 0x4003de, 5 bytes>
0x4003de:	jmp	0x400490
<Block for 0x40039a, 15 bytes>
0x40039a:	mov	rbx, rax
0x40039d:	lea	rax, [rbp - 0x40]
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x400b26
<Block for 0x40049c, 16 bytes>
0x40049c:	nop	
0x40049d:	mov	rax, qword ptr [rbp - 0x18]
0x4004a1:	xor	rax, qword ptr fs:[0x28]
0x4004aa:	je	0x4004d1
<Block for 0x40045b, 12 bytes>
0x40045b:	mov	eax, dword ptr [rax]
0x40045d:	mov	esi, eax
0x40045f:	mov	rdi, rbx
0x400462:	call	0x500018
<Block for 0x4003a9, 12 bytes>
0x4003a9:	mov	eax, dword ptr [rax]
0x4003ab:	mov	esi, eax
0x4003ad:	mov	rdi, rbx
0x4003b0:	call	0x500018
<Block for 0x4004d1, 7 bytes>
0x4004d1:	add	rsp, 0x38
0x4004d5:	pop	rbx
0x4004d6:	pop	rbp
0x4004d7:	ret	
<Block for 0x4004ac, 2 bytes>
0x4004ac:	jmp	0x4004cc
<Block for 0x400467, 17 bytes>
0x400467:	lea	rax, [rbp - 0x40]
0x40046b:	mov	esi, 0
0x400470:	mov	rdi, rax
0x400473:	call	0x400ace
<Block for 0x4003b5, 17 bytes>
0x4003b5:	lea	rax, [rbp - 0x40]
0x4003b9:	mov	esi, 0
0x4003be:	mov	rdi, rax
0x4003c1:	call	0x400ace
<Block for 0x4004cc, 5 bytes>
0x4004cc:	call	0x500040
<Block for 0x400478, 2 bytes>
0x400478:	jmp	0x400412
<Block for 0x4003c6, 2 bytes>
0x4003c6:	jmp	0x400360
<Block for 0x400412, 12 bytes>
0x400412:	lea	rax, [rbp - 0x30]
0x400416:	mov	rdi, rax
0x400419:	call	0x400a5c
<Block for 0x400360, 12 bytes>
0x400360:	lea	rax, [rbp - 0x30]
0x400364:	mov	rdi, rax
0x400367:	call	0x400a5c
