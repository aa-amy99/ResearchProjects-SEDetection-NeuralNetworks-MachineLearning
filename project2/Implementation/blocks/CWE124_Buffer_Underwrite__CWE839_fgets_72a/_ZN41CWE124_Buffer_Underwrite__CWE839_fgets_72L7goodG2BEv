<Block for 0x4001c8, 40 bytes>
0x4001c8:	endbr64	
0x4001cc:	push	rbp
0x4001cd:	mov	rbp, rsp
0x4001d0:	push	rbx
0x4001d1:	sub	rsp, 0x58
0x4001d5:	mov	rax, qword ptr fs:[0x28]
0x4001de:	mov	qword ptr [rbp - 0x18], rax
0x4001e2:	xor	eax, eax
0x4001e4:	lea	rax, [rbp - 0x50]
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x40059e
<Block for 0x4001f0, 26 bytes>
0x4001f0:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4001f7:	mov	dword ptr [rbp - 0x5c], 7
0x4001fe:	lea	rax, [rbp - 0x50]
0x400202:	mov	rdi, rax
0x400205:	call	0x400746
<Block for 0x40020a, 23 bytes>
0x40020a:	mov	qword ptr [rbp - 0x58], rax
0x40020e:	lea	rdx, [rbp - 0x58]
0x400212:	lea	rax, [rbp - 0x30]
0x400216:	mov	rsi, rdx
0x400219:	mov	rdi, rax
0x40021c:	call	0x400796
<Block for 0x400221, 28 bytes>
0x400221:	lea	rdx, [rbp - 0x5c]
0x400225:	mov	rsi, qword ptr [rbp - 0x30]
0x400229:	lea	rax, [rbp - 0x50]
0x40022d:	mov	rcx, rdx
0x400230:	mov	edx, 1
0x400235:	mov	rdi, rax
0x400238:	call	0x4007c4
<Block for 0x40023d, 12 bytes>
0x40023d:	lea	rax, [rbp - 0x50]
0x400241:	mov	rdi, rax
0x400244:	call	0x400746
<Block for 0x400249, 23 bytes>
0x400249:	mov	qword ptr [rbp - 0x58], rax
0x40024d:	lea	rdx, [rbp - 0x58]
0x400251:	lea	rax, [rbp - 0x30]
0x400255:	mov	rsi, rdx
0x400258:	mov	rdi, rax
0x40025b:	call	0x400796
<Block for 0x400260, 28 bytes>
0x400260:	lea	rdx, [rbp - 0x5c]
0x400264:	mov	rsi, qword ptr [rbp - 0x30]
0x400268:	lea	rax, [rbp - 0x50]
0x40026c:	mov	rcx, rdx
0x40026f:	mov	edx, 1
0x400274:	mov	rdi, rax
0x400277:	call	0x4007c4
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rax, [rbp - 0x50]
0x400280:	mov	rdi, rax
0x400283:	call	0x400746
<Block for 0x400288, 23 bytes>
0x400288:	mov	qword ptr [rbp - 0x58], rax
0x40028c:	lea	rdx, [rbp - 0x58]
0x400290:	lea	rax, [rbp - 0x30]
0x400294:	mov	rsi, rdx
0x400297:	mov	rdi, rax
0x40029a:	call	0x400796
<Block for 0x40029f, 28 bytes>
0x40029f:	lea	rdx, [rbp - 0x5c]
0x4002a3:	mov	rsi, qword ptr [rbp - 0x30]
0x4002a7:	lea	rax, [rbp - 0x50]
0x4002ab:	mov	rcx, rdx
0x4002ae:	mov	edx, 1
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x4007c4
<Block for 0x4002bb, 19 bytes>
0x4002bb:	lea	rdx, [rbp - 0x50]
0x4002bf:	lea	rax, [rbp - 0x30]
0x4002c3:	mov	rsi, rdx
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x40088a
<Block for 0x4002ce, 12 bytes>
0x4002ce:	lea	rax, [rbp - 0x30]
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x500038
<Block for 0x4002da, 12 bytes>
0x4002da:	lea	rax, [rbp - 0x30]
0x4002de:	mov	rdi, rax
0x4002e1:	call	0x4006fe
<Block for 0x4002e6, 12 bytes>
0x4002e6:	lea	rax, [rbp - 0x50]
0x4002ea:	mov	rdi, rax
0x4002ed:	call	0x4006fe
<Block for 0x4002f2, 16 bytes>
0x4002f2:	nop	
0x4002f3:	mov	rax, qword ptr [rbp - 0x18]
0x4002f7:	xor	rax, qword ptr fs:[0x28]
0x400300:	je	0x40033c
<Block for 0x40033c, 7 bytes>
0x40033c:	add	rsp, 0x58
0x400340:	pop	rbx
0x400341:	pop	rbp
0x400342:	ret	
<Block for 0x400302, 2 bytes>
0x400302:	jmp	0x400337
<Block for 0x400337, 5 bytes>
0x400337:	call	0x500030
