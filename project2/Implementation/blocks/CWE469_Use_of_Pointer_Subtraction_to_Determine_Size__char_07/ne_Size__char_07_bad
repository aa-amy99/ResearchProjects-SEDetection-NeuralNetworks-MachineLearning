<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0x1d7]
0x400021:	cmp	eax, 5
0x400024:	jne	0x400089
<Block for 0x400026, 49 bytes>
0x400026:	movabs	rax, 0x7271706f2f636261
0x400030:	mov	qword ptr [rbp - 0x20], rax
0x400034:	mov	dword ptr [rbp - 0x18], 0x757473
0x40003b:	mov	qword ptr [rbp - 0x14], rax
0x40003f:	mov	dword ptr [rbp - 0xc], 0x757473
0x400046:	lea	rax, [rbp - 0x20]
0x40004a:	mov	esi, 0x2f
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x400057, 11 bytes>
0x400057:	mov	qword ptr [rbp - 0x30], rax
0x40005b:	cmp	qword ptr [rbp - 0x30], 0
0x400060:	jne	0x40006c
<Block for 0x40009e, 2 bytes>
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500018
<Block for 0x400062, 10 bytes>
0x400062:	mov	edi, 1
0x400067:	call	0x500008
<Block for 0x40006c, 29 bytes>
0x40006c:	lea	rax, [rbp - 0x14]
0x400070:	mov	rdx, qword ptr [rbp - 0x30]
0x400074:	sub	rdx, rax
0x400077:	mov	rax, rdx
0x40007a:	mov	qword ptr [rbp - 0x28], rax
0x40007e:	mov	rax, qword ptr [rbp - 0x28]
0x400082:	mov	edi, eax
0x400084:	call	0x500010
