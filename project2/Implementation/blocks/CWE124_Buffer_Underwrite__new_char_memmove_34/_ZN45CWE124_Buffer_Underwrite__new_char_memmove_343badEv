<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	edi, 0x64
0x40002e:	call	0x500000
<Block for 0x400033, 26 bytes>
0x400033:	mov	qword ptr [rbp - 0x80], rax
0x400037:	mov	rax, qword ptr [rbp - 0x80]
0x40003b:	mov	edx, 0x63
0x400040:	mov	esi, 0x41
0x400045:	mov	rdi, rax
0x400048:	call	0x500008
<Block for 0x40004d, 73 bytes>
0x40004d:	mov	rax, qword ptr [rbp - 0x80]
0x400051:	add	rax, 0x63
0x400055:	mov	byte ptr [rax], 0
0x400058:	mov	rax, qword ptr [rbp - 0x80]
0x40005c:	sub	rax, 8
0x400060:	mov	qword ptr [rbp - 0x88], rax
0x400067:	mov	rax, qword ptr [rbp - 0x88]
0x40006e:	mov	qword ptr [rbp - 0x90], rax
0x400075:	mov	rax, qword ptr [rbp - 0x90]
0x40007c:	mov	qword ptr [rbp - 0x78], rax
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	edx, 0x63
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x400096, 28 bytes>
0x400096:	mov	byte ptr [rbp - 0xd], 0
0x40009a:	lea	rcx, [rbp - 0x70]
0x40009e:	mov	rax, qword ptr [rbp - 0x78]
0x4000a2:	mov	edx, 0x64
0x4000a7:	mov	rsi, rcx
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500010
<Block for 0x4000b2, 23 bytes>
0x4000b2:	mov	rax, qword ptr [rbp - 0x78]
0x4000b6:	add	rax, 0x63
0x4000ba:	mov	byte ptr [rax], 0
0x4000bd:	mov	rax, qword ptr [rbp - 0x78]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500020
