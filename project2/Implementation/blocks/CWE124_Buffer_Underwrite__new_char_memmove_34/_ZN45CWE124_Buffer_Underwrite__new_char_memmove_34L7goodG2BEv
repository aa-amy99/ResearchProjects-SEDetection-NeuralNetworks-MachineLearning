<Block for 0x4000e0, 51 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x90
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	qword ptr [rbp - 0x88], 0
0x400109:	mov	edi, 0x64
0x40010e:	call	0x500000
<Block for 0x400113, 26 bytes>
0x400113:	mov	qword ptr [rbp - 0x80], rax
0x400117:	mov	rax, qword ptr [rbp - 0x80]
0x40011b:	mov	edx, 0x63
0x400120:	mov	esi, 0x41
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
<Block for 0x40012d, 69 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x80]
0x400131:	add	rax, 0x63
0x400135:	mov	byte ptr [rax], 0
0x400138:	mov	rax, qword ptr [rbp - 0x80]
0x40013c:	mov	qword ptr [rbp - 0x88], rax
0x400143:	mov	rax, qword ptr [rbp - 0x88]
0x40014a:	mov	qword ptr [rbp - 0x90], rax
0x400151:	mov	rax, qword ptr [rbp - 0x90]
0x400158:	mov	qword ptr [rbp - 0x78], rax
0x40015c:	lea	rax, [rbp - 0x70]
0x400160:	mov	edx, 0x63
0x400165:	mov	esi, 0x43
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500008
<Block for 0x400172, 28 bytes>
0x400172:	mov	byte ptr [rbp - 0xd], 0
0x400176:	lea	rcx, [rbp - 0x70]
0x40017a:	mov	rax, qword ptr [rbp - 0x78]
0x40017e:	mov	edx, 0x64
0x400183:	mov	rsi, rcx
0x400186:	mov	rdi, rax
0x400189:	call	0x500010
<Block for 0x40018e, 23 bytes>
0x40018e:	mov	rax, qword ptr [rbp - 0x78]
0x400192:	add	rax, 0x63
0x400196:	mov	byte ptr [rax], 0
0x400199:	mov	rax, qword ptr [rbp - 0x78]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500018
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x4001ba, 2 bytes>
0x4001ba:	leave	
0x4001bb:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500020
