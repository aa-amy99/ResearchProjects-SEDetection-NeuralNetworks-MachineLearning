<Block for 0x40005b, 25 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0x10
0x400067:	mov	dword ptr [rbp - 0xc], 0
0x40006e:	cmp	dword ptr [rbp - 0xc], 0
0x400072:	jg	0x4000c1
<Block for 0x400074, 14 bytes>
0x400074:	mov	byte ptr [rbp - 0xe], 5
0x400078:	mov	edi, 1
0x40007d:	call	0x500000
<Block for 0x4000c1, 3 bytes>
0x4000c1:	nop	
0x4000c2:	leave	
0x4000c3:	ret	
<Block for 0x400082, 35 bytes>
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	movzx	edx, byte ptr [rbp - 0xe]
0x40008e:	mov	byte ptr [rax], dl
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	movzx	eax, byte ptr [rax]
0x400097:	mov	byte ptr [rbp - 0xd], al
0x40009a:	movsx	eax, byte ptr [rbp - 0xd]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500010
<Block for 0x4000a5, 9 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	test	rax, rax
0x4000ac:	je	0x4000bb
<Block for 0x4000bb, 6 bytes>
0x4000bb:	add	dword ptr [rbp - 0xc], 1
0x4000bf:	jmp	0x40006e
<Block for 0x4000ae, 13 bytes>
0x4000ae:	mov	esi, 1
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500008
<Block for 0x40006e, 6 bytes>
0x40006e:	cmp	dword ptr [rbp - 0xc], 0
0x400072:	jg	0x4000c1
