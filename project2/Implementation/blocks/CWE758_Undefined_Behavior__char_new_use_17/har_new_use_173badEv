<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 0xc], 0
0x400013:	cmp	dword ptr [rbp - 0xc], 0
0x400017:	jg	0x400058
<Block for 0x400019, 10 bytes>
0x400019:	mov	edi, 1
0x40001e:	call	0x500000
<Block for 0x400058, 3 bytes>
0x400058:	nop	
0x400059:	leave	
0x40005a:	ret	
<Block for 0x400023, 23 bytes>
0x400023:	mov	qword ptr [rbp - 8], rax
0x400027:	mov	rax, qword ptr [rbp - 8]
0x40002b:	movzx	eax, byte ptr [rax]
0x40002e:	mov	byte ptr [rbp - 0xd], al
0x400031:	mov	rax, qword ptr [rbp - 8]
0x400035:	test	rax, rax
0x400038:	je	0x400047
<Block for 0x400047, 11 bytes>
0x400047:	movsx	eax, byte ptr [rbp - 0xd]
0x40004b:	mov	edi, eax
0x40004d:	call	0x500010
<Block for 0x40003a, 13 bytes>
0x40003a:	mov	esi, 1
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x400052, 6 bytes>
0x400052:	add	dword ptr [rbp - 0xc], 1
0x400056:	jmp	0x400013
<Block for 0x400013, 6 bytes>
0x400013:	cmp	dword ptr [rbp - 0xc], 0
0x400017:	jg	0x400058
