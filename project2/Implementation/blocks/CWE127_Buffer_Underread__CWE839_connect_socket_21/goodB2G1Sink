<Block for 0x4001aa, 40 bytes>
0x4001aa:	endbr64	
0x4001ae:	push	rbp
0x4001af:	mov	rbp, rsp
0x4001b2:	sub	rsp, 0x40
0x4001b6:	mov	dword ptr [rbp - 0x34], edi
0x4001b9:	mov	rax, qword ptr fs:[0x28]
0x4001c2:	mov	qword ptr [rbp - 8], rax
0x4001c6:	xor	eax, eax
0x4001c8:	mov	eax, dword ptr [rip + 0x436]
0x4001ce:	test	eax, eax
0x4001d0:	je	0x4001e0
<Block for 0x4001e0, 46 bytes>
0x4001e0:	mov	qword ptr [rbp - 0x30], 0
0x4001e8:	mov	qword ptr [rbp - 0x28], 0
0x4001f0:	mov	qword ptr [rbp - 0x20], 0
0x4001f8:	mov	qword ptr [rbp - 0x18], 0
0x400200:	mov	qword ptr [rbp - 0x10], 0
0x400208:	cmp	dword ptr [rbp - 0x34], 0
0x40020c:	js	0x400226
<Block for 0x4001d2, 12 bytes>
0x4001d2:	lea	rdi, [rip + 0x460]
0x4001d9:	call	0x500008
<Block for 0x400226, 12 bytes>
0x400226:	lea	rdi, [rip + 0x423]
0x40022d:	call	0x500008
<Block for 0x40020e, 6 bytes>
0x40020e:	cmp	dword ptr [rbp - 0x34], 9
0x400212:	jg	0x400226
<Block for 0x4001de, 2 bytes>
0x4001de:	jmp	0x400232
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x400214, 16 bytes>
0x400214:	mov	eax, dword ptr [rbp - 0x34]
0x400217:	cdqe	
0x400219:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40021d:	mov	edi, eax
0x40021f:	call	0x500000
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500010
<Block for 0x400224, 2 bytes>
0x400224:	jmp	0x400232
