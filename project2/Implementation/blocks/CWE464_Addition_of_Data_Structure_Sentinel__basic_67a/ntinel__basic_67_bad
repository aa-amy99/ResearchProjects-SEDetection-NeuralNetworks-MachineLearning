<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xb], 0x20
0x40001f:	mov	rax, qword ptr [rip + 0xfffda]
0x400026:	mov	rdi, rax
0x400029:	call	0x500008
<Block for 0x40002e, 19 bytes>
0x40002e:	mov	byte ptr [rbp - 0xa], al
0x400031:	mov	byte ptr [rbp - 9], 0
0x400035:	lea	rax, [rbp - 0xa]
0x400039:	mov	rdi, rax
0x40003c:	call	0x500010
<Block for 0x400041, 21 bytes>
0x400041:	mov	byte ptr [rbp - 0xb], al
0x400044:	movzx	eax, byte ptr [rbp - 0xb]
0x400048:	mov	byte ptr [rbp - 0xc], al
0x40004b:	movzx	eax, byte ptr [rbp - 0xc]
0x40004f:	mov	edi, eax
0x400051:	call	0x500018
<Block for 0x400056, 16 bytes>
0x400056:	nop	
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	xor	rax, qword ptr fs:[0x28]
0x400064:	je	0x40006b
<Block for 0x40006b, 2 bytes>
0x40006b:	leave	
0x40006c:	ret	
<Block for 0x400066, 5 bytes>
0x400066:	call	0x500020
