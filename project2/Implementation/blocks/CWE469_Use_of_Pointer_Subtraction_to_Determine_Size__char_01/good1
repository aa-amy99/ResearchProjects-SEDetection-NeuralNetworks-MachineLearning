<Block for 0x400095, 65 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	sub	rsp, 0x30
0x4000a1:	mov	rax, qword ptr fs:[0x28]
0x4000aa:	mov	qword ptr [rbp - 8], rax
0x4000ae:	xor	eax, eax
0x4000b0:	movabs	rax, 0x7271706f2f636261
0x4000ba:	mov	qword ptr [rbp - 0x14], rax
0x4000be:	mov	dword ptr [rbp - 0xc], 0x757473
0x4000c5:	lea	rax, [rbp - 0x14]
0x4000c9:	mov	esi, 0x2f
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500000
<Block for 0x4000d6, 11 bytes>
0x4000d6:	mov	qword ptr [rbp - 0x28], rax
0x4000da:	cmp	qword ptr [rbp - 0x28], 0
0x4000df:	jne	0x4000eb
<Block for 0x4000e1, 10 bytes>
0x4000e1:	mov	edi, 1
0x4000e6:	call	0x500008
<Block for 0x4000eb, 29 bytes>
0x4000eb:	lea	rax, [rbp - 0x14]
0x4000ef:	mov	rdx, qword ptr [rbp - 0x28]
0x4000f3:	sub	rdx, rax
0x4000f6:	mov	rax, rdx
0x4000f9:	mov	qword ptr [rbp - 0x20], rax
0x4000fd:	mov	rax, qword ptr [rbp - 0x20]
0x400101:	mov	edi, eax
0x400103:	call	0x500010
<Block for 0x400108, 16 bytes>
0x400108:	nop	
0x400109:	mov	rax, qword ptr [rbp - 8]
0x40010d:	xor	rax, qword ptr fs:[0x28]
0x400116:	je	0x40011d
<Block for 0x40011d, 2 bytes>
0x40011d:	leave	
0x40011e:	ret	
<Block for 0x400118, 5 bytes>
0x400118:	call	0x500018
