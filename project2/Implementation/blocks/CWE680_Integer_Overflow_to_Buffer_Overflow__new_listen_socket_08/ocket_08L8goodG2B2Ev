<Block for 0x4002a4, 24 bytes>
0x4002a4:	endbr64	
0x4002a8:	push	rbp
0x4002a9:	mov	rbp, rsp
0x4002ac:	sub	rsp, 0x20
0x4002b0:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4002b7:	call	0x400000
<Block for 0x4002bc, 9 bytes>
0x4002bc:	test	eax, eax
0x4002be:	setne	al
0x4002c1:	test	al, al
0x4002c3:	je	0x4002cc
<Block for 0x4002cc, 25 bytes>
0x4002cc:	mov	eax, dword ptr [rbp - 0x1c]
0x4002cf:	cdqe	
0x4002d1:	shl	rax, 2
0x4002d5:	mov	qword ptr [rbp - 0x10], rax
0x4002d9:	mov	rax, qword ptr [rbp - 0x10]
0x4002dd:	mov	rdi, rax
0x4002e0:	call	0x500048
<Block for 0x4002c5, 32 bytes>
0x4002c5:	mov	dword ptr [rbp - 0x1c], 0x14
0x4002cc:	mov	eax, dword ptr [rbp - 0x1c]
0x4002cf:	cdqe	
0x4002d1:	shl	rax, 2
0x4002d5:	mov	qword ptr [rbp - 0x10], rax
0x4002d9:	mov	rax, qword ptr [rbp - 0x10]
0x4002dd:	mov	rdi, rax
0x4002e0:	call	0x500048
<Block for 0x4002e5, 23 bytes>
0x4002e5:	mov	qword ptr [rbp - 8], rax
0x4002e9:	mov	qword ptr [rbp - 0x18], 0
0x4002f1:	mov	eax, dword ptr [rbp - 0x1c]
0x4002f4:	cdqe	
0x4002f6:	cmp	qword ptr [rbp - 0x18], rax
0x4002fa:	jae	0x40031c
<Block for 0x4002fc, 32 bytes>
0x4002fc:	mov	rax, qword ptr [rbp - 0x18]
0x400300:	lea	rdx, [rax*4]
0x400308:	mov	rax, qword ptr [rbp - 8]
0x40030c:	add	rax, rdx
0x40030f:	mov	dword ptr [rax], 0
0x400315:	add	qword ptr [rbp - 0x18], 1
0x40031a:	jmp	0x4002f1
<Block for 0x40031c, 13 bytes>
0x40031c:	mov	rax, qword ptr [rbp - 8]
0x400320:	mov	eax, dword ptr [rax]
0x400322:	mov	edi, eax
0x400324:	call	0x500050
<Block for 0x4002f1, 11 bytes>
0x4002f1:	mov	eax, dword ptr [rbp - 0x1c]
0x4002f4:	cdqe	
0x4002f6:	cmp	qword ptr [rbp - 0x18], rax
0x4002fa:	jae	0x40031c
<Block for 0x400329, 7 bytes>
0x400329:	cmp	qword ptr [rbp - 8], 0
0x40032e:	je	0x40033c
<Block for 0x40033c, 3 bytes>
0x40033c:	nop	
0x40033d:	leave	
0x40033e:	ret	
<Block for 0x400330, 12 bytes>
0x400330:	mov	rax, qword ptr [rbp - 8]
0x400334:	mov	rdi, rax
0x400337:	call	0x500058
