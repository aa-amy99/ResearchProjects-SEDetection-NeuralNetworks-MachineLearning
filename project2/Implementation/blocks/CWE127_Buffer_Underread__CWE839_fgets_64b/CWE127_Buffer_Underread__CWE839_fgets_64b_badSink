<Block for 0x400000, 94 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x48]
0x400023:	mov	qword ptr [rbp - 0x38], rax
0x400027:	mov	rax, qword ptr [rbp - 0x38]
0x40002b:	mov	eax, dword ptr [rax]
0x40002d:	mov	dword ptr [rbp - 0x3c], eax
0x400030:	mov	qword ptr [rbp - 0x30], 0
0x400038:	mov	qword ptr [rbp - 0x28], 0
0x400040:	mov	qword ptr [rbp - 0x20], 0
0x400048:	mov	qword ptr [rbp - 0x18], 0
0x400050:	mov	qword ptr [rbp - 0x10], 0
0x400058:	cmp	dword ptr [rbp - 0x3c], 9
0x40005c:	jg	0x400070
<Block for 0x40005e, 16 bytes>
0x40005e:	mov	eax, dword ptr [rbp - 0x3c]
0x400061:	cdqe	
0x400063:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400067:	mov	edi, eax
0x400069:	call	0x500000
<Block for 0x400070, 12 bytes>
0x400070:	lea	rdi, [rip + 0x149]
0x400077:	call	0x500008
<Block for 0x40006e, 2 bytes>
0x40006e:	jmp	0x40007c
<Block for 0x40007c, 16 bytes>
0x40007c:	nop	
0x40007d:	mov	rax, qword ptr [rbp - 8]
0x400081:	xor	rax, qword ptr fs:[0x28]
0x40008a:	je	0x400091
<Block for 0x400091, 2 bytes>
0x400091:	leave	
0x400092:	ret	
<Block for 0x40008c, 5 bytes>
0x40008c:	call	0x500010
