<Block for 0x400102, 76 bytes>
0x400102:	endbr64	
0x400106:	push	rbp
0x400107:	mov	rbp, rsp
0x40010a:	sub	rsp, 0x40
0x40010e:	mov	dword ptr [rbp - 0x34], edi
0x400111:	mov	rax, qword ptr fs:[0x28]
0x40011a:	mov	qword ptr [rbp - 8], rax
0x40011e:	xor	eax, eax
0x400120:	mov	qword ptr [rbp - 0x30], 0
0x400128:	mov	qword ptr [rbp - 0x28], 0
0x400130:	mov	qword ptr [rbp - 0x20], 0
0x400138:	mov	qword ptr [rbp - 0x18], 0
0x400140:	mov	qword ptr [rbp - 0x10], 0
0x400148:	cmp	dword ptr [rbp - 0x34], 0
0x40014c:	js	0x400166
<Block for 0x400166, 12 bytes>
0x400166:	lea	rdi, [rip + 0x43]
0x40016d:	call	0x500008
<Block for 0x40014e, 6 bytes>
0x40014e:	cmp	dword ptr [rbp - 0x34], 9
0x400152:	jg	0x400166
<Block for 0x400172, 16 bytes>
0x400172:	nop	
0x400173:	mov	rax, qword ptr [rbp - 8]
0x400177:	xor	rax, qword ptr fs:[0x28]
0x400180:	je	0x400187
<Block for 0x400154, 16 bytes>
0x400154:	mov	eax, dword ptr [rbp - 0x34]
0x400157:	cdqe	
0x400159:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40015d:	mov	edi, eax
0x40015f:	call	0x500000
<Block for 0x400187, 2 bytes>
0x400187:	leave	
0x400188:	ret	
<Block for 0x400182, 5 bytes>
0x400182:	call	0x500010
<Block for 0x400164, 2 bytes>
0x400164:	jmp	0x400172
