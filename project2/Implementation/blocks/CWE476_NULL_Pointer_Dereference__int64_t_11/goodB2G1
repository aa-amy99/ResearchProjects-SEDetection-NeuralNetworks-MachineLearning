<Block for 0x400042, 22 bytes>
0x400042:	endbr64	
0x400046:	push	rbp
0x400047:	mov	rbp, rsp
0x40004a:	sub	rsp, 0x10
0x40004e:	mov	eax, 0
0x400053:	call	0x500000
<Block for 0x400058, 4 bytes>
0x400058:	test	eax, eax
0x40005a:	je	0x400064
<Block for 0x400064, 10 bytes>
0x400064:	mov	eax, 0
0x400069:	call	0x500010
<Block for 0x40005c, 18 bytes>
0x40005c:	mov	qword ptr [rbp - 8], 0
0x400064:	mov	eax, 0
0x400069:	call	0x500010
<Block for 0x40006e, 4 bytes>
0x40006e:	test	eax, eax
0x400070:	je	0x400080
<Block for 0x400080, 7 bytes>
0x400080:	cmp	qword ptr [rbp - 8], 0
0x400085:	je	0x400098
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0x1a0]
0x400079:	call	0x500018
<Block for 0x400098, 12 bytes>
0x400098:	lea	rdi, [rip + 0x18f]
0x40009f:	call	0x500018
<Block for 0x400087, 15 bytes>
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	mov	rax, qword ptr [rax]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x40007e, 2 bytes>
0x40007e:	jmp	0x4000a4
<Block for 0x4000a4, 3 bytes>
0x4000a4:	nop	
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x400096, 2 bytes>
0x400096:	jmp	0x4000a4
