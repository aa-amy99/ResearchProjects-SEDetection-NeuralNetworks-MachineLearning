<Block for 0x4001e5, 40 bytes>
0x4001e5:	endbr64	
0x4001e9:	push	rbp
0x4001ea:	mov	rbp, rsp
0x4001ed:	push	rbx
0x4001ee:	sub	rsp, 0x58
0x4001f2:	mov	rax, qword ptr fs:[0x28]
0x4001fb:	mov	qword ptr [rbp - 0x18], rax
0x4001ff:	xor	eax, eax
0x400201:	lea	rax, [rbp - 0x50]
0x400205:	mov	rdi, rax
0x400208:	call	0x40039e
<Block for 0x40020d, 27 bytes>
0x40020d:	mov	qword ptr [rbp - 0x58], 0
0x400215:	lea	rdx, [rbp - 0x58]
0x400219:	lea	rax, [rbp - 0x50]
0x40021d:	mov	rsi, rdx
0x400220:	mov	rdi, rax
0x400223:	call	0x4004a8
<Block for 0x400228, 19 bytes>
0x400228:	lea	rdx, [rbp - 0x58]
0x40022c:	lea	rax, [rbp - 0x50]
0x400230:	mov	rsi, rdx
0x400233:	mov	rdi, rax
0x400236:	call	0x4004a8
<Block for 0x40023b, 19 bytes>
0x40023b:	lea	rdx, [rbp - 0x58]
0x40023f:	lea	rax, [rbp - 0x50]
0x400243:	mov	rsi, rdx
0x400246:	mov	rdi, rax
0x400249:	call	0x4004a8
<Block for 0x40024e, 19 bytes>
0x40024e:	lea	rdx, [rbp - 0x50]
0x400252:	lea	rax, [rbp - 0x30]
0x400256:	mov	rsi, rdx
0x400259:	mov	rdi, rax
0x40025c:	call	0x4004e2
<Block for 0x400261, 12 bytes>
0x400261:	lea	rax, [rbp - 0x30]
0x400265:	mov	rdi, rax
0x400268:	call	0x500020
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rax, [rbp - 0x30]
0x400271:	mov	rdi, rax
0x400274:	call	0x4003be
<Block for 0x400279, 12 bytes>
0x400279:	lea	rax, [rbp - 0x50]
0x40027d:	mov	rdi, rax
0x400280:	call	0x4003be
<Block for 0x400285, 16 bytes>
0x400285:	nop	
0x400286:	mov	rax, qword ptr [rbp - 0x18]
0x40028a:	xor	rax, qword ptr fs:[0x28]
0x400293:	je	0x4002cf
<Block for 0x4002cf, 7 bytes>
0x4002cf:	add	rsp, 0x58
0x4002d3:	pop	rbx
0x4002d4:	pop	rbp
0x4002d5:	ret	
<Block for 0x400295, 2 bytes>
0x400295:	jmp	0x4002ca
<Block for 0x4002ca, 5 bytes>
0x4002ca:	call	0x500010
