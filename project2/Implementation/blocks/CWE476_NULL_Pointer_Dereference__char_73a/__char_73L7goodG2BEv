<Block for 0x4000f1, 40 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	push	rbx
0x4000fa:	sub	rsp, 0x58
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 0x18], rax
0x40010b:	xor	eax, eax
0x40010d:	lea	rax, [rbp - 0x50]
0x400111:	mov	rdi, rax
0x400114:	call	0x40039e
<Block for 0x400119, 30 bytes>
0x400119:	lea	rax, [rip + 0x1e2]
0x400120:	mov	qword ptr [rbp - 0x58], rax
0x400124:	lea	rdx, [rbp - 0x58]
0x400128:	lea	rax, [rbp - 0x50]
0x40012c:	mov	rsi, rdx
0x40012f:	mov	rdi, rax
0x400132:	call	0x4004a8
<Block for 0x400137, 19 bytes>
0x400137:	lea	rdx, [rbp - 0x58]
0x40013b:	lea	rax, [rbp - 0x50]
0x40013f:	mov	rsi, rdx
0x400142:	mov	rdi, rax
0x400145:	call	0x4004a8
<Block for 0x40014a, 19 bytes>
0x40014a:	lea	rdx, [rbp - 0x58]
0x40014e:	lea	rax, [rbp - 0x50]
0x400152:	mov	rsi, rdx
0x400155:	mov	rdi, rax
0x400158:	call	0x4004a8
<Block for 0x40015d, 19 bytes>
0x40015d:	lea	rdx, [rbp - 0x50]
0x400161:	lea	rax, [rbp - 0x30]
0x400165:	mov	rsi, rdx
0x400168:	mov	rdi, rax
0x40016b:	call	0x4004e2
<Block for 0x400170, 12 bytes>
0x400170:	lea	rax, [rbp - 0x30]
0x400174:	mov	rdi, rax
0x400177:	call	0x500018
<Block for 0x40017c, 12 bytes>
0x40017c:	lea	rax, [rbp - 0x30]
0x400180:	mov	rdi, rax
0x400183:	call	0x4003be
<Block for 0x400188, 12 bytes>
0x400188:	lea	rax, [rbp - 0x50]
0x40018c:	mov	rdi, rax
0x40018f:	call	0x4003be
<Block for 0x400194, 16 bytes>
0x400194:	nop	
0x400195:	mov	rax, qword ptr [rbp - 0x18]
0x400199:	xor	rax, qword ptr fs:[0x28]
0x4001a2:	je	0x4001de
<Block for 0x4001de, 7 bytes>
0x4001de:	add	rsp, 0x58
0x4001e2:	pop	rbx
0x4001e3:	pop	rbp
0x4001e4:	ret	
<Block for 0x4001a4, 2 bytes>
0x4001a4:	jmp	0x4001d9
<Block for 0x4001d9, 5 bytes>
0x4001d9:	call	0x500010
