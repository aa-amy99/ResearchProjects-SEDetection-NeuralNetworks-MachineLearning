<Block for 0x400000, 204 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xa8]
0x400025:	mov	qword ptr [rbp - 0xa0], rax
0x40002c:	lea	rax, [rbp - 0xa8]
0x400033:	mov	qword ptr [rbp - 0x98], rax
0x40003a:	mov	qword ptr [rbp - 0x70], 0
0x400042:	mov	qword ptr [rbp - 0x68], 0
0x40004a:	mov	qword ptr [rbp - 0x60], 0
0x400052:	mov	qword ptr [rbp - 0x58], 0
0x40005a:	mov	qword ptr [rbp - 0x50], 0
0x400062:	mov	qword ptr [rbp - 0x48], 0
0x40006a:	mov	qword ptr [rbp - 0x40], 0
0x400072:	mov	qword ptr [rbp - 0x38], 0
0x40007a:	mov	qword ptr [rbp - 0x30], 0
0x400082:	mov	qword ptr [rbp - 0x28], 0
0x40008a:	mov	qword ptr [rbp - 0x20], 0
0x400092:	mov	qword ptr [rbp - 0x18], 0
0x40009a:	mov	dword ptr [rbp - 0x10], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	qword ptr [rbp - 0xa8], rax
0x4000ac:	mov	rax, qword ptr [rbp - 0xa0]
0x4000b3:	mov	rax, qword ptr [rax]
0x4000b6:	mov	qword ptr [rbp - 0x90], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x90]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500000
<Block for 0x4000cc, 29 bytes>
0x4000cc:	mov	qword ptr [rbp - 0x88], rax
0x4000d3:	mov	eax, 0x64
0x4000d8:	sub	rax, qword ptr [rbp - 0x88]
0x4000df:	cmp	rax, 1
0x4000e3:	jbe	0x40016b
<Block for 0x40016b, 62 bytes>
0x40016b:	mov	rax, qword ptr [rbp - 0xa0]
0x400172:	mov	rdx, qword ptr [rbp - 0x90]
0x400179:	mov	qword ptr [rax], rdx
0x40017c:	mov	rax, qword ptr [rbp - 0x98]
0x400183:	mov	rax, qword ptr [rax]
0x400186:	mov	qword ptr [rbp - 0x78], rax
0x40018a:	lea	rdx, [rbp - 0xb4]
0x400191:	mov	rax, qword ptr [rbp - 0x78]
0x400195:	lea	rsi, [rip + 0x414]
0x40019c:	mov	rdi, rax
0x40019f:	mov	eax, 0
0x4001a4:	call	0x500028
<Block for 0x4000e9, 19 bytes>
0x4000e9:	lea	rsi, [rip + 0x4a1]
0x4000f0:	lea	rdi, [rip + 0x49c]
0x4000f7:	call	0x500008
<Block for 0x4001a9, 5 bytes>
0x4001a9:	cmp	eax, 1
0x4001ac:	jne	0x4001ed
<Block for 0x4000fc, 11 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x80], rax
0x400100:	cmp	qword ptr [rbp - 0x80], 0
0x400105:	je	0x40016b
<Block for 0x4001ae, 22 bytes>
0x4001ae:	mov	dword ptr [rbp - 0xac], 0
0x4001b8:	mov	dword ptr [rbp - 0xb0], 0
0x4001c2:	jmp	0x4001d2
<Block for 0x4001ed, 16 bytes>
0x4001ed:	nop	
0x4001ee:	mov	rax, qword ptr [rbp - 8]
0x4001f2:	xor	rax, qword ptr fs:[0x28]
0x4001fb:	je	0x400202
<Block for 0x400107, 51 bytes>
0x400107:	mov	rax, qword ptr [rbp - 0x88]
0x40010e:	mov	edx, 0x64
0x400113:	sub	edx, eax
0x400115:	mov	eax, edx
0x400117:	mov	esi, eax
0x400119:	mov	rdx, qword ptr [rbp - 0x90]
0x400120:	mov	rax, qword ptr [rbp - 0x88]
0x400127:	lea	rcx, [rdx + rax]
0x40012b:	mov	rax, qword ptr [rbp - 0x80]
0x40012f:	mov	rdx, rax
0x400132:	mov	rdi, rcx
0x400135:	call	0x500010
<Block for 0x4001d2, 14 bytes>
0x4001d2:	mov	eax, dword ptr [rbp - 0xb4]
0x4001d8:	cmp	dword ptr [rbp - 0xb0], eax
0x4001de:	jl	0x4001c4
<Block for 0x400202, 2 bytes>
0x400202:	leave	
0x400203:	ret	
<Block for 0x4001fd, 5 bytes>
0x4001fd:	call	0x500038
<Block for 0x40013a, 5 bytes>
0x40013a:	test	rax, rax
0x40013d:	jne	0x40015f
<Block for 0x4001c4, 28 bytes>
0x4001c4:	add	dword ptr [rbp - 0xac], 1
0x4001cb:	add	dword ptr [rbp - 0xb0], 1
0x4001d2:	mov	eax, dword ptr [rbp - 0xb4]
0x4001d8:	cmp	dword ptr [rbp - 0xb0], eax
0x4001de:	jl	0x4001c4
<Block for 0x4001e0, 13 bytes>
0x4001e0:	mov	eax, dword ptr [rbp - 0xac]
0x4001e6:	mov	edi, eax
0x4001e8:	call	0x500030
<Block for 0x40013f, 12 bytes>
0x40013f:	lea	rdi, [rip + 0x45b]
0x400146:	call	0x500018
<Block for 0x40015f, 12 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	mov	rdi, rax
0x400166:	call	0x500020
<Block for 0x40014b, 32 bytes>
0x40014b:	mov	rdx, qword ptr [rbp - 0x90]
0x400152:	mov	rax, qword ptr [rbp - 0x88]
0x400159:	add	rax, rdx
0x40015c:	mov	byte ptr [rax], 0
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	mov	rdi, rax
0x400166:	call	0x500020
