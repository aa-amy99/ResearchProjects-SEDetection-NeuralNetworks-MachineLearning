<Block for 0x40008c, 47 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	add	rsp, -0x80
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	mov	qword ptr [rbp - 0x78], 0
0x4000af:	mov	rax, qword ptr [rbp - 0x78]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500028
<Block for 0x4000bb, 26 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x78], rax
0x4000bf:	lea	rax, [rbp - 0x70]
0x4000c3:	mov	edx, 0x63
0x4000c8:	mov	esi, 0x43
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500008
<Block for 0x4000d5, 28 bytes>
0x4000d5:	mov	byte ptr [rbp - 0xd], 0
0x4000d9:	mov	rcx, qword ptr [rbp - 0x78]
0x4000dd:	lea	rax, [rbp - 0x70]
0x4000e1:	mov	edx, 0x64
0x4000e6:	mov	rsi, rcx
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500010
<Block for 0x4000f1, 16 bytes>
0x4000f1:	mov	byte ptr [rbp - 0xd], 0
0x4000f5:	lea	rax, [rbp - 0x70]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500018
<Block for 0x400101, 16 bytes>
0x400101:	nop	
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	xor	rax, qword ptr fs:[0x28]
0x40010f:	je	0x400116
<Block for 0x400116, 2 bytes>
0x400116:	leave	
0x400117:	ret	
<Block for 0x400111, 5 bytes>
0x400111:	call	0x500020
