<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	edi, 0x64
0x400011:	call	0x500000
<Block for 0x400016, 11 bytes>
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	cmp	qword ptr [rbp - 0x18], 0
0x40001f:	jne	0x40002b
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 0xffffffff
0x400026:	call	0x500008
<Block for 0x40002b, 19 bytes>
0x40002b:	mov	rax, qword ptr [rbp - 0x18]
0x40002f:	mov	byte ptr [rax], 0
0x400032:	mov	rax, qword ptr [rbp - 0x18]
0x400036:	mov	rdi, rax
0x400039:	call	0x500010
<Block for 0x40003e, 23 bytes>
0x40003e:	mov	qword ptr [rbp - 0x10], rax
0x400042:	mov	eax, 0x64
0x400047:	sub	rax, qword ptr [rbp - 0x10]
0x40004b:	cmp	rax, 1
0x40004f:	jbe	0x4000e8
<Block for 0x4000e8, 11 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x18]
0x4000ec:	movzx	eax, byte ptr [rax]
0x4000ef:	test	al, al
0x4000f1:	jne	0x4000ca
<Block for 0x400055, 19 bytes>
0x400055:	lea	rsi, [rip + 0x1cf]
0x40005c:	lea	rdi, [rip + 0x1ca]
0x400063:	call	0x500018
<Block for 0x4000f3, 12 bytes>
0x4000f3:	mov	rax, qword ptr [rbp - 0x18]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500038
<Block for 0x4000ca, 11 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 0x18]
0x4000ce:	movzx	eax, byte ptr [rax]
0x4000d1:	cmp	al, 0x53
0x4000d3:	jne	0x4000e3
<Block for 0x400068, 11 bytes>
0x400068:	mov	qword ptr [rbp - 8], rax
0x40006c:	cmp	qword ptr [rbp - 8], 0
0x400071:	je	0x4000e8
<Block for 0x4000ff, 3 bytes>
0x4000ff:	nop	
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rdi, [rip + 0x16e]
0x4000dc:	call	0x500028
<Block for 0x4000e3, 16 bytes>
0x4000e3:	add	qword ptr [rbp - 0x18], 1
0x4000e8:	mov	rax, qword ptr [rbp - 0x18]
0x4000ec:	movzx	eax, byte ptr [rax]
0x4000ef:	test	al, al
0x4000f1:	jne	0x4000ca
<Block for 0x400073, 42 bytes>
0x400073:	mov	rax, qword ptr [rbp - 0x10]
0x400077:	mov	edx, 0x64
0x40007c:	sub	edx, eax
0x40007e:	mov	eax, edx
0x400080:	mov	esi, eax
0x400082:	mov	rdx, qword ptr [rbp - 0x18]
0x400086:	mov	rax, qword ptr [rbp - 0x10]
0x40008a:	lea	rcx, [rdx + rax]
0x40008e:	mov	rax, qword ptr [rbp - 8]
0x400092:	mov	rdx, rax
0x400095:	mov	rdi, rcx
0x400098:	call	0x500020
<Block for 0x4000e1, 2 bytes>
0x4000e1:	jmp	0x4000f3
<Block for 0x40009d, 5 bytes>
0x40009d:	test	rax, rax
0x4000a0:	jne	0x4000bc
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rdi, [rip + 0x192]
0x4000a9:	call	0x500028
<Block for 0x4000bc, 12 bytes>
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500030
<Block for 0x4000ae, 26 bytes>
0x4000ae:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	add	rax, rdx
0x4000b9:	mov	byte ptr [rax], 0
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500030
<Block for 0x4000c8, 2 bytes>
0x4000c8:	jmp	0x4000e8
