<Block for 0x400138, 37 bytes>
0x400138:	endbr64	
0x40013c:	push	rbp
0x40013d:	mov	rbp, rsp
0x400140:	sub	rsp, 0x30
0x400144:	mov	rax, qword ptr fs:[0x28]
0x40014d:	mov	qword ptr [rbp - 8], rax
0x400151:	xor	eax, eax
0x400153:	mov	eax, 0
0x400158:	call	0x400000
<Block for 0x40015d, 4 bytes>
0x40015d:	test	eax, eax
0x40015f:	je	0x4001a7
<Block for 0x4001a7, 16 bytes>
0x4001a7:	nop	
0x4001a8:	mov	rax, qword ptr [rbp - 8]
0x4001ac:	xor	rax, qword ptr fs:[0x28]
0x4001b5:	je	0x4001bc
<Block for 0x400161, 70 bytes>
0x400161:	mov	dword ptr [rbp - 0x20], 1
0x400168:	mov	dword ptr [rbp - 0x1c], 2
0x40016f:	mov	dword ptr [rbp - 0x18], 3
0x400176:	mov	dword ptr [rbp - 0x14], 4
0x40017d:	mov	dword ptr [rbp - 0x10], 5
0x400184:	lea	rax, [rbp - 0x20]
0x400188:	mov	qword ptr [rbp - 0x28], rax
0x40018c:	mov	rax, qword ptr [rbp - 0x28]
0x400190:	add	rax, 8
0x400194:	movzx	eax, byte ptr [rax]
0x400197:	movsx	eax, al
0x40019a:	mov	dword ptr [rbp - 0x2c], eax
0x40019d:	mov	eax, dword ptr [rbp - 0x2c]
0x4001a0:	mov	edi, eax
0x4001a2:	call	0x500000
<Block for 0x4001bc, 2 bytes>
0x4001bc:	leave	
0x4001bd:	ret	
<Block for 0x4001b7, 5 bytes>
0x4001b7:	call	0x500008
