<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x40004f
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	eax, 0
0x400054:	call	0x500000
<Block for 0x400022, 29 bytes>
0x400022:	mov	rax, qword ptr [rip + 0xfffdf]
0x400029:	mov	rdx, rax
0x40002c:	lea	rsi, [rip + 0x1ee]
0x400033:	lea	rdi, [rip + 0x1ea]
0x40003a:	call	0x500010
<Block for 0x400059, 4 bytes>
0x400059:	test	eax, eax
0x40005b:	je	0x400069
<Block for 0x40003f, 16 bytes>
0x40003f:	mov	qword ptr [rbp - 8], rax
0x400043:	mov	rax, qword ptr [rbp - 8]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500018
<Block for 0x400069, 3 bytes>
0x400069:	nop	
0x40006a:	leave	
0x40006b:	ret	
<Block for 0x40005d, 12 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	mov	rdi, rax
0x400064:	call	0x500018
