<Block for 0x40003c, 22 bytes>
0x40003c:	endbr64	
0x400040:	push	rbp
0x400041:	mov	rbp, rsp
0x400044:	sub	rsp, 0x10
0x400048:	mov	eax, dword ptr [rip + 0xfffb2]
0x40004e:	test	eax, eax
0x400050:	je	0x40005a
<Block for 0x40005a, 10 bytes>
0x40005a:	mov	eax, dword ptr [rip + 0xfffb0]
0x400060:	test	eax, eax
0x400062:	je	0x400072
<Block for 0x400052, 18 bytes>
0x400052:	mov	qword ptr [rbp - 8], 0
0x40005a:	mov	eax, dword ptr [rip + 0xfffb0]
0x400060:	test	eax, eax
0x400062:	je	0x400072
<Block for 0x400072, 7 bytes>
0x400072:	cmp	qword ptr [rbp - 8], 0
0x400077:	je	0x40008c
<Block for 0x400064, 12 bytes>
0x400064:	lea	rdi, [rip + 0x140]
0x40006b:	call	0x500018
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0x12d]
0x400093:	call	0x500018
<Block for 0x400079, 17 bytes>
0x400079:	mov	rax, qword ptr [rbp - 8]
0x40007d:	movzx	eax, byte ptr [rax]
0x400080:	movsx	eax, al
0x400083:	mov	edi, eax
0x400085:	call	0x500008
<Block for 0x400070, 2 bytes>
0x400070:	jmp	0x400098
<Block for 0x400098, 3 bytes>
0x400098:	nop	
0x400099:	leave	
0x40009a:	ret	
<Block for 0x40008a, 2 bytes>
0x40008a:	jmp	0x400098
