<Block for 0x400082, 55 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0xf0
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	lea	rax, [rbp - 0xe0]
0x4000a7:	mov	qword ptr [rbp - 0xe8], rax
0x4000ae:	mov	eax, dword ptr [rip + 0xfff6c]
0x4000b4:	cmp	eax, 5
0x4000b7:	je	0x4000c7
<Block for 0x4000c7, 32 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0xe8]
0x4000ce:	mov	byte ptr [rax], 0
0x4000d1:	lea	rax, [rbp - 0x70]
0x4000d5:	mov	edx, 0x63
0x4000da:	mov	esi, 0x43
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500000
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rdi, [rip + 0x11d]
0x4000c0:	call	0x500010
<Block for 0x4000e7, 26 bytes>
0x4000e7:	mov	byte ptr [rbp - 0xd], 0
0x4000eb:	lea	rdx, [rbp - 0x70]
0x4000ef:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f6:	mov	rsi, rdx
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500008
<Block for 0x4000c5, 2 bytes>
0x4000c5:	jmp	0x4000d1
<Block for 0x400101, 15 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0xe8]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500010
<Block for 0x4000d1, 22 bytes>
0x4000d1:	lea	rax, [rbp - 0x70]
0x4000d5:	mov	edx, 0x63
0x4000da:	mov	esi, 0x43
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500000
<Block for 0x400110, 16 bytes>
0x400110:	nop	
0x400111:	mov	rax, qword ptr [rbp - 8]
0x400115:	xor	rax, qword ptr fs:[0x28]
0x40011e:	je	0x400125
<Block for 0x400125, 2 bytes>
0x400125:	leave	
0x400126:	ret	
<Block for 0x400120, 5 bytes>
0x400120:	call	0x500018
