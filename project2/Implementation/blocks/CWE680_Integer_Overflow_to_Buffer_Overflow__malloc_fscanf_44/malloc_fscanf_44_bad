<Block for 0x400084, 76 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x20
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	lea	rax, [rip - 0xa6]
0x4000a6:	mov	qword ptr [rbp - 0x10], rax
0x4000aa:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000b1:	mov	rax, qword ptr [rip + 0xfff68]
0x4000b8:	lea	rdx, [rbp - 0x14]
0x4000bc:	lea	rsi, [rip + 0xfb]
0x4000c3:	mov	rdi, rax
0x4000c6:	mov	eax, 0
0x4000cb:	call	0x500028
<Block for 0x4000d0, 11 bytes>
0x4000d0:	mov	eax, dword ptr [rbp - 0x14]
0x4000d3:	mov	rdx, qword ptr [rbp - 0x10]
0x4000d7:	mov	edi, eax
0x4000d9:	call	rdx
<Block for 0x4000db, 16 bytes>
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x4000f0
<Block for 0x4000f0, 2 bytes>
0x4000f0:	leave	
0x4000f1:	ret	
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500030
