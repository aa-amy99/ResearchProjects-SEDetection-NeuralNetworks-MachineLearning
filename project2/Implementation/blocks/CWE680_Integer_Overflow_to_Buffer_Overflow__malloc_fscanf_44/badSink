<Block for 0x400000, 32 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x14], edi
0x40000f:	mov	eax, dword ptr [rbp - 0x14]
0x400012:	cdqe	
0x400014:	shl	rax, 2
0x400018:	mov	rdi, rax
0x40001b:	call	0x500000
<Block for 0x400020, 11 bytes>
0x400020:	mov	qword ptr [rbp - 8], rax
0x400024:	cmp	qword ptr [rbp - 8], 0
0x400029:	jne	0x400035
<Block for 0x40002b, 10 bytes>
0x40002b:	mov	edi, 0xffffffff
0x400030:	call	0x500008
<Block for 0x400035, 10 bytes>
0x400035:	mov	qword ptr [rbp - 0x10], 0
0x40003d:	jmp	0x40005d
<Block for 0x40005d, 11 bytes>
0x40005d:	mov	eax, dword ptr [rbp - 0x14]
0x400060:	cdqe	
0x400062:	cmp	qword ptr [rbp - 0x10], rax
0x400066:	jb	0x40003f
<Block for 0x40003f, 41 bytes>
0x40003f:	mov	rax, qword ptr [rbp - 0x10]
0x400043:	lea	rdx, [rax*4]
0x40004b:	mov	rax, qword ptr [rbp - 8]
0x40004f:	add	rax, rdx
0x400052:	mov	dword ptr [rax], 0
0x400058:	add	qword ptr [rbp - 0x10], 1
0x40005d:	mov	eax, dword ptr [rbp - 0x14]
0x400060:	cdqe	
0x400062:	cmp	qword ptr [rbp - 0x10], rax
0x400066:	jb	0x40003f
<Block for 0x400068, 13 bytes>
0x400068:	mov	rax, qword ptr [rbp - 8]
0x40006c:	mov	eax, dword ptr [rax]
0x40006e:	mov	edi, eax
0x400070:	call	0x500010
<Block for 0x400075, 12 bytes>
0x400075:	mov	rax, qword ptr [rbp - 8]
0x400079:	mov	rdi, rax
0x40007c:	call	0x500018
<Block for 0x400081, 3 bytes>
0x400081:	nop	
0x400082:	leave	
0x400083:	ret	
