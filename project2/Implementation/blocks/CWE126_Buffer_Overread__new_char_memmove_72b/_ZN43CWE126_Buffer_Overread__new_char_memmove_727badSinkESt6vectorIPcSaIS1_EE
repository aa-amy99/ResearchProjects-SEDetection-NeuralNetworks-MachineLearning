<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	esi, 2
0x400031:	mov	rdi, rax
0x400034:	call	0x40016e
<Block for 0x400039, 29 bytes>
0x400039:	mov	rax, qword ptr [rax]
0x40003c:	mov	qword ptr [rbp - 0x78], rax
0x400040:	lea	rax, [rbp - 0x70]
0x400044:	mov	edx, 0x63
0x400049:	mov	esi, 0x43
0x40004e:	mov	rdi, rax
0x400051:	call	0x500000
<Block for 0x400056, 16 bytes>
0x400056:	mov	byte ptr [rbp - 0xd], 0
0x40005a:	lea	rax, [rbp - 0x70]
0x40005e:	mov	rdi, rax
0x400061:	call	0x500008
<Block for 0x400066, 22 bytes>
0x400066:	mov	rdx, rax
0x400069:	mov	rcx, qword ptr [rbp - 0x78]
0x40006d:	lea	rax, [rbp - 0x70]
0x400071:	mov	rsi, rcx
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 16 bytes>
0x40007c:	mov	byte ptr [rbp - 0xd], 0
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	rdi, rax
0x400087:	call	0x500018
<Block for 0x40008c, 7 bytes>
0x40008c:	cmp	qword ptr [rbp - 0x78], 0
0x400091:	je	0x40009f
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000b4
<Block for 0x400093, 12 bytes>
0x400093:	mov	rax, qword ptr [rbp - 0x78]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500020
<Block for 0x4000b4, 2 bytes>
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500028
