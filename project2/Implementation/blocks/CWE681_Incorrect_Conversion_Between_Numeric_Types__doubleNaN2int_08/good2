<Block for 0x4001b3, 40 bytes>
0x4001b3:	endbr64	
0x4001b7:	push	rbp
0x4001b8:	mov	rbp, rsp
0x4001bb:	sub	rsp, 0x120
0x4001c2:	mov	rax, qword ptr fs:[0x28]
0x4001cb:	mov	qword ptr [rbp - 8], rax
0x4001cf:	xor	eax, eax
0x4001d1:	mov	eax, 0
0x4001d6:	call	0x400000
<Block for 0x4001db, 8 bytes>
0x4001db:	test	eax, eax
0x4001dd:	je	0x400270
<Block for 0x400270, 16 bytes>
0x400270:	nop	
0x400271:	mov	rax, qword ptr [rbp - 8]
0x400275:	xor	rax, qword ptr fs:[0x28]
0x40027e:	je	0x400285
<Block for 0x4001e3, 39 bytes>
0x4001e3:	pxor	xmm0, xmm0
0x4001e7:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001ef:	mov	rdx, qword ptr [rip + 0xffe0a]
0x4001f6:	lea	rax, [rbp - 0x110]
0x4001fd:	mov	esi, 0x100
0x400202:	mov	rdi, rax
0x400205:	call	0x500008
<Block for 0x400285, 2 bytes>
0x400285:	leave	
0x400286:	ret	
<Block for 0x400280, 5 bytes>
0x400280:	call	0x500030
<Block for 0x40020a, 5 bytes>
0x40020a:	test	rax, rax
0x40020d:	je	0x40022c
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rdi, [rip + 0x73]
0x400233:	call	0x500018
<Block for 0x40020f, 15 bytes>
0x40020f:	lea	rax, [rbp - 0x110]
0x400216:	mov	rdi, rax
0x400219:	call	0x500010
<Block for 0x400238, 14 bytes>
0x400238:	pxor	xmm0, xmm0
0x40023c:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400244:	jbe	0x400254
<Block for 0x40021e, 14 bytes>
0x40021e:	movq	rax, xmm0
0x400223:	mov	qword ptr [rbp - 0x118], rax
0x40022a:	jmp	0x400238
<Block for 0x400254, 17 bytes>
0x400254:	mov	rax, qword ptr [rbp - 0x118]
0x40025b:	movq	xmm0, rax
0x400260:	call	0x500020
<Block for 0x400246, 12 bytes>
0x400246:	lea	rdi, [rip + 0x7e]
0x40024d:	call	0x500018
<Block for 0x400265, 11 bytes>
0x400265:	cvttsd2si	eax, xmm0
0x400269:	mov	edi, eax
0x40026b:	call	0x500028
<Block for 0x400252, 2 bytes>
0x400252:	jmp	0x400270
