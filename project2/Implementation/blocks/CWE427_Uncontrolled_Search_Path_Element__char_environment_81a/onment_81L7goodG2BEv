<Block for 0x400125, 82 bytes>
0x400125:	endbr64	
0x400129:	push	rbp
0x40012a:	mov	rbp, rsp
0x40012d:	sub	rsp, 0x130
0x400134:	mov	rax, qword ptr fs:[0x28]
0x40013d:	mov	qword ptr [rbp - 8], rax
0x400141:	xor	eax, eax
0x400143:	movabs	rax, 0x3d48544150
0x40014d:	mov	edx, 0
0x400152:	mov	qword ptr [rbp - 0x110], rax
0x400159:	mov	qword ptr [rbp - 0x108], rdx
0x400160:	lea	rdx, [rbp - 0x100]
0x400167:	mov	eax, 0
0x40016c:	mov	ecx, 0x1d
0x400171:	mov	rdi, rdx
0x400174:	rep stosq	qword ptr [rdi], rax
<Block for 0x400177, 51 bytes>
0x400177:	mov	rdx, rdi
0x40017a:	mov	word ptr [rdx], ax
0x40017d:	add	rdx, 2
0x400181:	lea	rax, [rbp - 0x110]
0x400188:	mov	qword ptr [rbp - 0x120], rax
0x40018f:	mov	rax, qword ptr [rbp - 0x120]
0x400196:	mov	rcx, -1
0x40019d:	mov	rdx, rax
0x4001a0:	mov	eax, 0
0x4001a5:	mov	rdi, rdx
0x4001a8:	repne scasb	al, byte ptr [rdi]
<Block for 0x400174, 3 bytes>
0x400174:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001aa, 93 bytes>
0x4001aa:	mov	rax, rcx
0x4001ad:	not	rax
0x4001b0:	lea	rdx, [rax - 1]
0x4001b4:	mov	rax, qword ptr [rbp - 0x120]
0x4001bb:	add	rax, rdx
0x4001be:	mov	dword ptr [rax], 0x6e69622f
0x4001c4:	mov	byte ptr [rax + 4], 0
0x4001c8:	lea	rax, [rip + 0xffe69]
0x4001cf:	mov	qword ptr [rbp - 0x128], rax
0x4001d6:	lea	rax, [rbp - 0x128]
0x4001dd:	mov	qword ptr [rbp - 0x118], rax
0x4001e4:	mov	rax, qword ptr [rbp - 0x118]
0x4001eb:	mov	rax, qword ptr [rax]
0x4001ee:	mov	rcx, qword ptr [rax]
0x4001f1:	mov	rdx, qword ptr [rbp - 0x120]
0x4001f8:	mov	rax, qword ptr [rbp - 0x118]
0x4001ff:	mov	rsi, rdx
0x400202:	mov	rdi, rax
0x400205:	call	rcx
<Block for 0x4001a8, 2 bytes>
0x4001a8:	repne scasb	al, byte ptr [rdi]
<Block for 0x400207, 16 bytes>
0x400207:	nop	
0x400208:	mov	rax, qword ptr [rbp - 8]
0x40020c:	xor	rax, qword ptr fs:[0x28]
0x400215:	je	0x40021c
<Block for 0x40021c, 2 bytes>
0x40021c:	leave	
0x40021d:	ret	
<Block for 0x400217, 5 bytes>
0x400217:	call	0x500020
