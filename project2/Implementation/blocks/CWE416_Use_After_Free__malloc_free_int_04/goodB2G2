<Block for 0x40011f, 29 bytes>
0x40011f:	endbr64	
0x400123:	push	rbp
0x400124:	mov	rbp, rsp
0x400127:	sub	rsp, 0x10
0x40012b:	mov	qword ptr [rbp - 8], 0
0x400133:	mov	eax, 1
0x400138:	test	eax, eax
0x40013a:	je	0x400196
<Block for 0x400196, 3 bytes>
0x400196:	nop	
0x400197:	leave	
0x400198:	ret	
<Block for 0x40013c, 10 bytes>
0x40013c:	mov	edi, 0x190
0x400141:	call	0x500000
<Block for 0x400146, 11 bytes>
0x400146:	mov	qword ptr [rbp - 8], rax
0x40014a:	cmp	qword ptr [rbp - 8], 0
0x40014f:	jne	0x40015b
<Block for 0x400151, 10 bytes>
0x400151:	mov	edi, 0xffffffff
0x400156:	call	0x500008
<Block for 0x40015b, 10 bytes>
0x40015b:	mov	qword ptr [rbp - 0x10], 0
0x400163:	jmp	0x400183
<Block for 0x400183, 7 bytes>
0x400183:	cmp	qword ptr [rbp - 0x10], 0x63
0x400188:	jbe	0x400165
<Block for 0x400165, 37 bytes>
0x400165:	mov	rax, qword ptr [rbp - 0x10]
0x400169:	lea	rdx, [rax*4]
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	add	rax, rdx
0x400178:	mov	dword ptr [rax], 5
0x40017e:	add	qword ptr [rbp - 0x10], 1
0x400183:	cmp	qword ptr [rbp - 0x10], 0x63
0x400188:	jbe	0x400165
<Block for 0x40018a, 12 bytes>
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	mov	rdi, rax
0x400191:	call	0x500010
