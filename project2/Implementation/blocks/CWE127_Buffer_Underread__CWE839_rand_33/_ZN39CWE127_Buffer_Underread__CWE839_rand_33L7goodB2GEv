<Block for 0x40019c, 48 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	push	rbx
0x4001a5:	sub	rsp, 0x48
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 0x18], rax
0x4001b6:	xor	eax, eax
0x4001b8:	lea	rax, [rbp - 0x50]
0x4001bc:	mov	qword ptr [rbp - 0x48], rax
0x4001c0:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4001c7:	call	0x500000
<Block for 0x4001cc, 7 bytes>
0x4001cc:	and	eax, 1
0x4001cf:	test	eax, eax
0x4001d1:	je	0x4001f0
<Block for 0x4001f0, 5 bytes>
0x4001f0:	call	0x500000
<Block for 0x4001d3, 5 bytes>
0x4001d3:	call	0x500000
<Block for 0x4001f5, 10 bytes>
0x4001f5:	shl	eax, 0x1e
0x4001f8:	mov	ebx, eax
0x4001fa:	call	0x500000
<Block for 0x4001d8, 10 bytes>
0x4001d8:	shl	eax, 0x1e
0x4001db:	mov	ebx, eax
0x4001dd:	call	0x500000
<Block for 0x4001ff, 10 bytes>
0x4001ff:	shl	eax, 0xf
0x400202:	xor	ebx, eax
0x400204:	call	0x500000
<Block for 0x4001e2, 10 bytes>
0x4001e2:	shl	eax, 0xf
0x4001e5:	xor	ebx, eax
0x4001e7:	call	0x500000
<Block for 0x400209, 62 bytes>
0x400209:	xor	eax, ebx
0x40020b:	not	eax
0x40020d:	mov	dword ptr [rbp - 0x50], eax
0x400210:	mov	rax, qword ptr [rbp - 0x48]
0x400214:	mov	eax, dword ptr [rax]
0x400216:	mov	dword ptr [rbp - 0x4c], eax
0x400219:	mov	qword ptr [rbp - 0x40], 0
0x400221:	mov	qword ptr [rbp - 0x38], 0
0x400229:	mov	qword ptr [rbp - 0x30], 0
0x400231:	mov	qword ptr [rbp - 0x28], 0
0x400239:	mov	qword ptr [rbp - 0x20], 0
0x400241:	cmp	dword ptr [rbp - 0x4c], 0
0x400245:	js	0x40025f
<Block for 0x4001ec, 4 bytes>
0x4001ec:	xor	eax, ebx
0x4001ee:	jmp	0x40020d
<Block for 0x40025f, 12 bytes>
0x40025f:	lea	rdi, [rip + 0x6a]
0x400266:	call	0x500010
<Block for 0x400247, 6 bytes>
0x400247:	cmp	dword ptr [rbp - 0x4c], 9
0x40024b:	jg	0x40025f
<Block for 0x40020d, 58 bytes>
0x40020d:	mov	dword ptr [rbp - 0x50], eax
0x400210:	mov	rax, qword ptr [rbp - 0x48]
0x400214:	mov	eax, dword ptr [rax]
0x400216:	mov	dword ptr [rbp - 0x4c], eax
0x400219:	mov	qword ptr [rbp - 0x40], 0
0x400221:	mov	qword ptr [rbp - 0x38], 0
0x400229:	mov	qword ptr [rbp - 0x30], 0
0x400231:	mov	qword ptr [rbp - 0x28], 0
0x400239:	mov	qword ptr [rbp - 0x20], 0
0x400241:	cmp	dword ptr [rbp - 0x4c], 0
0x400245:	js	0x40025f
<Block for 0x40026b, 2 bytes>
0x40026b:	jmp	0x40027b
<Block for 0x40024d, 16 bytes>
0x40024d:	mov	eax, dword ptr [rbp - 0x4c]
0x400250:	cdqe	
0x400252:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400256:	mov	edi, eax
0x400258:	call	0x500008
<Block for 0x40027b, 15 bytes>
0x40027b:	mov	rax, qword ptr [rbp - 0x18]
0x40027f:	xor	rax, qword ptr fs:[0x28]
0x400288:	je	0x40028f
<Block for 0x40025d, 2 bytes>
0x40025d:	jmp	0x40026d
<Block for 0x40028f, 7 bytes>
0x40028f:	add	rsp, 0x48
0x400293:	pop	rbx
0x400294:	pop	rbp
0x400295:	ret	
<Block for 0x40028a, 5 bytes>
0x40028a:	call	0x500020
<Block for 0x40026d, 2 bytes>
0x40026d:	jmp	0x40027b
