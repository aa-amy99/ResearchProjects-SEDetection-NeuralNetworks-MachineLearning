<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003b6
<Block for 0x400028, 12 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002f:	call	0x500000
<Block for 0x400034, 7 bytes>
0x400034:	and	eax, 1
0x400037:	test	eax, eax
0x400039:	je	0x400058
<Block for 0x400058, 5 bytes>
0x400058:	call	0x500000
<Block for 0x40003b, 5 bytes>
0x40003b:	call	0x500000
<Block for 0x40005d, 10 bytes>
0x40005d:	shl	eax, 0x1e
0x400060:	mov	ebx, eax
0x400062:	call	0x500000
<Block for 0x400040, 10 bytes>
0x400040:	shl	eax, 0x1e
0x400043:	mov	ebx, eax
0x400045:	call	0x500000
<Block for 0x400067, 10 bytes>
0x400067:	shl	eax, 0xf
0x40006a:	xor	ebx, eax
0x40006c:	call	0x500000
<Block for 0x40004a, 10 bytes>
0x40004a:	shl	eax, 0xf
0x40004d:	xor	ebx, eax
0x40004f:	call	0x500000
<Block for 0x400071, 19 bytes>
0x400071:	xor	eax, ebx
0x400073:	not	eax
0x400075:	mov	dword ptr [rbp - 0x5c], eax
0x400078:	lea	rax, [rbp - 0x50]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x40054a
<Block for 0x400054, 4 bytes>
0x400054:	xor	eax, ebx
0x400056:	jmp	0x400075
<Block for 0x400084, 23 bytes>
0x400084:	mov	qword ptr [rbp - 0x58], rax
0x400088:	lea	rdx, [rbp - 0x58]
0x40008c:	lea	rax, [rbp - 0x30]
0x400090:	mov	rsi, rdx
0x400093:	mov	rdi, rax
0x400096:	call	0x40059a
<Block for 0x400075, 15 bytes>
0x400075:	mov	dword ptr [rbp - 0x5c], eax
0x400078:	lea	rax, [rbp - 0x50]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x40054a
<Block for 0x40009b, 28 bytes>
0x40009b:	lea	rdx, [rbp - 0x5c]
0x40009f:	mov	rsi, qword ptr [rbp - 0x30]
0x4000a3:	lea	rax, [rbp - 0x50]
0x4000a7:	mov	rcx, rdx
0x4000aa:	mov	edx, 1
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x4005c8
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rax, [rbp - 0x50]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x40054a
<Block for 0x4000c3, 23 bytes>
0x4000c3:	mov	qword ptr [rbp - 0x58], rax
0x4000c7:	lea	rdx, [rbp - 0x58]
0x4000cb:	lea	rax, [rbp - 0x30]
0x4000cf:	mov	rsi, rdx
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x40059a
<Block for 0x4000da, 28 bytes>
0x4000da:	lea	rdx, [rbp - 0x5c]
0x4000de:	mov	rsi, qword ptr [rbp - 0x30]
0x4000e2:	lea	rax, [rbp - 0x50]
0x4000e6:	mov	rcx, rdx
0x4000e9:	mov	edx, 1
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x4005c8
<Block for 0x4000f6, 12 bytes>
0x4000f6:	lea	rax, [rbp - 0x50]
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x40054a
<Block for 0x400102, 23 bytes>
0x400102:	mov	qword ptr [rbp - 0x58], rax
0x400106:	lea	rdx, [rbp - 0x58]
0x40010a:	lea	rax, [rbp - 0x30]
0x40010e:	mov	rsi, rdx
0x400111:	mov	rdi, rax
0x400114:	call	0x40059a
<Block for 0x400119, 28 bytes>
0x400119:	lea	rdx, [rbp - 0x5c]
0x40011d:	mov	rsi, qword ptr [rbp - 0x30]
0x400121:	lea	rax, [rbp - 0x50]
0x400125:	mov	rcx, rdx
0x400128:	mov	edx, 1
0x40012d:	mov	rdi, rax
0x400130:	call	0x4005c8
<Block for 0x400135, 19 bytes>
0x400135:	lea	rdx, [rbp - 0x50]
0x400139:	lea	rax, [rbp - 0x30]
0x40013d:	mov	rsi, rdx
0x400140:	mov	rdi, rax
0x400143:	call	0x40068e
<Block for 0x400148, 12 bytes>
0x400148:	lea	rax, [rbp - 0x30]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500008
<Block for 0x400154, 12 bytes>
0x400154:	lea	rax, [rbp - 0x30]
0x400158:	mov	rdi, rax
0x40015b:	call	0x400502
<Block for 0x400160, 12 bytes>
0x400160:	lea	rax, [rbp - 0x50]
0x400164:	mov	rdi, rax
0x400167:	call	0x400502
<Block for 0x40016c, 16 bytes>
0x40016c:	nop	
0x40016d:	mov	rax, qword ptr [rbp - 0x18]
0x400171:	xor	rax, qword ptr fs:[0x28]
0x40017a:	je	0x4001b6
<Block for 0x4001b6, 7 bytes>
0x4001b6:	add	rsp, 0x58
0x4001ba:	pop	rbx
0x4001bb:	pop	rbp
0x4001bc:	ret	
<Block for 0x40017c, 2 bytes>
0x40017c:	jmp	0x4001b1
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500018
