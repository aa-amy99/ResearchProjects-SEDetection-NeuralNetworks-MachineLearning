<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x400014:	call	0x500000
<Block for 0x400019, 7 bytes>
0x400019:	and	eax, 1
0x40001c:	test	eax, eax
0x40001e:	je	0x40003d
<Block for 0x40003d, 5 bytes>
0x40003d:	call	0x500000
<Block for 0x400020, 5 bytes>
0x400020:	call	0x500000
<Block for 0x400042, 10 bytes>
0x400042:	shl	eax, 0x1e
0x400045:	mov	ebx, eax
0x400047:	call	0x500000
<Block for 0x400025, 10 bytes>
0x400025:	shl	eax, 0x1e
0x400028:	mov	ebx, eax
0x40002a:	call	0x500000
<Block for 0x40004c, 10 bytes>
0x40004c:	shl	eax, 0xf
0x40004f:	xor	ebx, eax
0x400051:	call	0x500000
<Block for 0x40002f, 10 bytes>
0x40002f:	shl	eax, 0xf
0x400032:	xor	ebx, eax
0x400034:	call	0x500000
<Block for 0x400056, 25 bytes>
0x400056:	xor	eax, ebx
0x400058:	not	eax
0x40005a:	mov	dword ptr [rbp - 0x18], eax
0x40005d:	mov	eax, dword ptr [rbp - 0x18]
0x400060:	mov	dword ptr [rbp - 0x1c], eax
0x400063:	mov	eax, dword ptr [rbp - 0x1c]
0x400066:	mov	dword ptr [rbp - 0x14], eax
0x400069:	cmp	dword ptr [rbp - 0x14], 5
0x40006d:	jg	0x40008e
<Block for 0x400039, 4 bytes>
0x400039:	xor	eax, ebx
0x40003b:	jmp	0x40005a
<Block for 0x40006f, 31 bytes>
0x40006f:	lea	rcx, [rip + 0xca]
0x400076:	mov	edx, 0x2b
0x40007b:	lea	rsi, [rip + 0x7e]
0x400082:	lea	rdi, [rip + 0x9d]
0x400089:	call	0x500008
<Block for 0x40008e, 8 bytes>
0x40008e:	nop	
0x40008f:	add	rsp, 0x18
0x400093:	pop	rbx
0x400094:	pop	rbp
0x400095:	ret	
<Block for 0x40005a, 21 bytes>
0x40005a:	mov	dword ptr [rbp - 0x18], eax
0x40005d:	mov	eax, dword ptr [rbp - 0x18]
0x400060:	mov	dword ptr [rbp - 0x1c], eax
0x400063:	mov	eax, dword ptr [rbp - 0x1c]
0x400066:	mov	dword ptr [rbp - 0x14], eax
0x400069:	cmp	dword ptr [rbp - 0x14], 5
0x40006d:	jg	0x40008e
