<Block for 0x4005b9, 44 bytes>
0x4005b9:	endbr64	
0x4005bd:	push	rbp
0x4005be:	mov	rbp, rsp
0x4005c1:	sub	rsp, 0x40
0x4005c5:	mov	rax, qword ptr fs:[0x28]
0x4005ce:	mov	qword ptr [rbp - 8], rax
0x4005d2:	xor	eax, eax
0x4005d4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4005db:	mov	eax, 0
0x4005e0:	call	0x500000
<Block for 0x4005e5, 4 bytes>
0x4005e5:	test	eax, eax
0x4005e7:	je	0x4005f0
<Block for 0x4005f0, 10 bytes>
0x4005f0:	mov	eax, 0
0x4005f5:	call	0x500000
<Block for 0x4005e9, 17 bytes>
0x4005e9:	mov	dword ptr [rbp - 0x38], 7
0x4005f0:	mov	eax, 0
0x4005f5:	call	0x500000
<Block for 0x4005fa, 4 bytes>
0x4005fa:	test	eax, eax
0x4005fc:	je	0x40066a
<Block for 0x40066a, 16 bytes>
0x40066a:	nop	
0x40066b:	mov	rax, qword ptr [rbp - 8]
0x40066f:	xor	rax, qword ptr fs:[0x28]
0x400678:	je	0x40067f
<Block for 0x4005fe, 46 bytes>
0x4005fe:	mov	qword ptr [rbp - 0x30], 0
0x400606:	mov	qword ptr [rbp - 0x28], 0
0x40060e:	mov	qword ptr [rbp - 0x20], 0
0x400616:	mov	qword ptr [rbp - 0x18], 0
0x40061e:	mov	qword ptr [rbp - 0x10], 0
0x400626:	cmp	dword ptr [rbp - 0x38], 9
0x40062a:	jg	0x40065e
<Block for 0x40067f, 2 bytes>
0x40067f:	leave	
0x400680:	ret	
<Block for 0x40067a, 5 bytes>
0x40067a:	call	0x500058
<Block for 0x40062c, 22 bytes>
0x40062c:	mov	eax, dword ptr [rbp - 0x38]
0x40062f:	cdqe	
0x400631:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400639:	mov	dword ptr [rbp - 0x34], 0
0x400640:	jmp	0x400656
<Block for 0x40065e, 12 bytes>
0x40065e:	lea	rdi, [rip + 0x63]
0x400665:	call	0x500050
<Block for 0x400656, 6 bytes>
0x400656:	cmp	dword ptr [rbp - 0x34], 9
0x40065a:	jle	0x400642
<Block for 0x400642, 16 bytes>
0x400642:	mov	eax, dword ptr [rbp - 0x34]
0x400645:	cdqe	
0x400647:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40064b:	mov	edi, eax
0x40064d:	call	0x500048
<Block for 0x40065c, 2 bytes>
0x40065c:	jmp	0x40066a
<Block for 0x400652, 10 bytes>
0x400652:	add	dword ptr [rbp - 0x34], 1
0x400656:	cmp	dword ptr [rbp - 0x34], 9
0x40065a:	jle	0x400642
