<Block for 0x400197, 44 bytes>
0x400197:	endbr64	
0x40019b:	push	rbp
0x40019c:	mov	rbp, rsp
0x40019f:	sub	rsp, 0x50
0x4001a3:	mov	rax, qword ptr fs:[0x28]
0x4001ac:	mov	qword ptr [rbp - 8], rax
0x4001b0:	xor	eax, eax
0x4001b2:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4001b9:	mov	eax, 0
0x4001be:	call	0x500000
<Block for 0x4001c3, 8 bytes>
0x4001c3:	test	eax, eax
0x4001c5:	je	0x40029d
<Block for 0x40029d, 10 bytes>
0x40029d:	mov	eax, 0
0x4002a2:	call	0x500060
<Block for 0x4001cb, 27 bytes>
0x4001cb:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001d2:	mov	edx, 6
0x4001d7:	mov	esi, 1
0x4001dc:	mov	edi, 2
0x4001e1:	call	0x500008
<Block for 0x4002a7, 4 bytes>
0x4002a7:	test	eax, eax
0x4002a9:	je	0x4002b9
<Block for 0x4001e6, 13 bytes>
0x4001e6:	mov	dword ptr [rbp - 0x48], eax
0x4001e9:	cmp	dword ptr [rbp - 0x48], -1
0x4001ed:	je	0x400289
<Block for 0x4002b9, 46 bytes>
0x4002b9:	mov	qword ptr [rbp - 0x40], 0
0x4002c1:	mov	qword ptr [rbp - 0x38], 0
0x4002c9:	mov	qword ptr [rbp - 0x30], 0
0x4002d1:	mov	qword ptr [rbp - 0x28], 0
0x4002d9:	mov	qword ptr [rbp - 0x20], 0
0x4002e1:	cmp	dword ptr [rbp - 0x50], 0
0x4002e5:	js	0x40031f
<Block for 0x4002ab, 12 bytes>
0x4002ab:	lea	rdi, [rip + 0x436]
0x4002b2:	call	0x500050
<Block for 0x400289, 3 bytes>
0x400289:	nop	
0x40028a:	jmp	0x40028d
<Block for 0x4001f3, 22 bytes>
0x4001f3:	lea	rax, [rbp - 0x40]
0x4001f7:	mov	edx, 0x10
0x4001fc:	mov	esi, 0
0x400201:	mov	rdi, rax
0x400204:	call	0x500010
<Block for 0x40031f, 12 bytes>
0x40031f:	lea	rdi, [rip + 0x3da]
0x400326:	call	0x500050
<Block for 0x4002e7, 6 bytes>
0x4002e7:	cmp	dword ptr [rbp - 0x50], 9
0x4002eb:	jg	0x40031f
<Block for 0x4002b7, 2 bytes>
0x4002b7:	jmp	0x40032d
<Block for 0x40028d, 6 bytes>
0x40028d:	cmp	dword ptr [rbp - 0x48], -1
0x400291:	je	0x40029d
<Block for 0x400209, 18 bytes>
0x400209:	mov	word ptr [rbp - 0x40], 2
0x40020f:	lea	rdi, [rip + 0x4a2]
0x400216:	call	0x500018
<Block for 0x40032b, 2 bytes>
0x40032b:	jmp	0x40032d
<Block for 0x4002ed, 22 bytes>
0x4002ed:	mov	eax, dword ptr [rbp - 0x50]
0x4002f0:	cdqe	
0x4002f2:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002fa:	mov	dword ptr [rbp - 0x4c], 0
0x400301:	jmp	0x400317
<Block for 0x40032d, 16 bytes>
0x40032d:	nop	
0x40032e:	mov	rax, qword ptr [rbp - 8]
0x400332:	xor	rax, qword ptr fs:[0x28]
0x40033b:	je	0x400342
<Block for 0x400293, 10 bytes>
0x400293:	mov	eax, dword ptr [rbp - 0x48]
0x400296:	mov	edi, eax
0x400298:	call	0x500040
<Block for 0x40021b, 13 bytes>
0x40021b:	mov	dword ptr [rbp - 0x3c], eax
0x40021e:	mov	edi, 0x6987
0x400223:	call	0x500020
<Block for 0x400317, 6 bytes>
0x400317:	cmp	dword ptr [rbp - 0x4c], 9
0x40031b:	jle	0x400303
<Block for 0x400342, 2 bytes>
0x400342:	leave	
0x400343:	ret	
<Block for 0x40033d, 5 bytes>
0x40033d:	call	0x500058
<Block for 0x400228, 26 bytes>
0x400228:	mov	word ptr [rbp - 0x3e], ax
0x40022c:	lea	rcx, [rbp - 0x40]
0x400230:	mov	eax, dword ptr [rbp - 0x48]
0x400233:	mov	edx, 0x10
0x400238:	mov	rsi, rcx
0x40023b:	mov	edi, eax
0x40023d:	call	0x500028
<Block for 0x400303, 16 bytes>
0x400303:	mov	eax, dword ptr [rbp - 0x4c]
0x400306:	cdqe	
0x400308:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40030c:	mov	edi, eax
0x40030e:	call	0x500048
<Block for 0x40031d, 2 bytes>
0x40031d:	jmp	0x40032d
<Block for 0x400242, 5 bytes>
0x400242:	cmp	eax, -1
0x400245:	je	0x40028c
<Block for 0x400313, 10 bytes>
0x400313:	add	dword ptr [rbp - 0x4c], 1
0x400317:	cmp	dword ptr [rbp - 0x4c], 9
0x40031b:	jle	0x400303
<Block for 0x400247, 24 bytes>
0x400247:	lea	rsi, [rbp - 0x16]
0x40024b:	mov	eax, dword ptr [rbp - 0x48]
0x40024e:	mov	ecx, 0
0x400253:	mov	edx, 0xd
0x400258:	mov	edi, eax
0x40025a:	call	0x500030
<Block for 0x40028c, 1 bytes>
0x40028c:	nop	
<Block for 0x40025f, 9 bytes>
0x40025f:	mov	dword ptr [rbp - 0x44], eax
0x400262:	cmp	dword ptr [rbp - 0x44], -1
0x400266:	je	0x40028d
<Block for 0x400268, 6 bytes>
0x400268:	cmp	dword ptr [rbp - 0x44], 0
0x40026c:	je	0x40028d
<Block for 0x40026e, 22 bytes>
0x40026e:	mov	eax, dword ptr [rbp - 0x44]
0x400271:	cdqe	
0x400273:	mov	byte ptr [rbp + rax - 0x16], 0
0x400278:	lea	rax, [rbp - 0x16]
0x40027c:	mov	rdi, rax
0x40027f:	call	0x500038
<Block for 0x400284, 5 bytes>
0x400284:	mov	dword ptr [rbp - 0x50], eax
0x400287:	jmp	0x40028d
