<Block for 0x4000c9, 45 bytes>
0x4000c9:	endbr64	
0x4000cd:	push	rbp
0x4000ce:	mov	rbp, rsp
0x4000d1:	add	rsp, -0x80
0x4000d5:	mov	rax, qword ptr fs:[0x28]
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	xor	eax, eax
0x4000e4:	mov	qword ptr [rbp - 0x78], 0
0x4000ec:	mov	edi, 0x64
0x4000f1:	call	0x500000
<Block for 0x4000f6, 26 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x78], rax
0x4000fa:	mov	rax, qword ptr [rbp - 0x78]
0x4000fe:	mov	edx, 0x63
0x400103:	mov	esi, 0x41
0x400108:	mov	rdi, rax
0x40010b:	call	0x500008
<Block for 0x400110, 34 bytes>
0x400110:	mov	rax, qword ptr [rbp - 0x78]
0x400114:	add	rax, 0x63
0x400118:	mov	byte ptr [rax], 0
0x40011b:	nop	
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x400132, 16 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500010
<Block for 0x400142, 22 bytes>
0x400142:	mov	rdx, rax
0x400145:	mov	rcx, qword ptr [rbp - 0x78]
0x400149:	lea	rax, [rbp - 0x70]
0x40014d:	mov	rsi, rcx
0x400150:	mov	rdi, rax
0x400153:	call	0x500018
<Block for 0x400158, 16 bytes>
0x400158:	mov	byte ptr [rbp - 0xd], 0
0x40015c:	lea	rax, [rbp - 0x70]
0x400160:	mov	rdi, rax
0x400163:	call	0x500020
<Block for 0x400168, 7 bytes>
0x400168:	cmp	qword ptr [rbp - 0x78], 0
0x40016d:	je	0x40017b
<Block for 0x40017b, 16 bytes>
0x40017b:	nop	
0x40017c:	mov	rax, qword ptr [rbp - 8]
0x400180:	xor	rax, qword ptr fs:[0x28]
0x400189:	je	0x400190
<Block for 0x40016f, 12 bytes>
0x40016f:	mov	rax, qword ptr [rbp - 0x78]
0x400173:	mov	rdi, rax
0x400176:	call	0x500028
<Block for 0x400190, 2 bytes>
0x400190:	leave	
0x400191:	ret	
<Block for 0x40018b, 5 bytes>
0x40018b:	call	0x500030
