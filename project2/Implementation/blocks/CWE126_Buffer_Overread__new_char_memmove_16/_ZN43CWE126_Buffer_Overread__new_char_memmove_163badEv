<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	edi, 0x32
0x400028:	call	0x500000
<Block for 0x40002d, 26 bytes>
0x40002d:	mov	qword ptr [rbp - 0x78], rax
0x400031:	mov	rax, qword ptr [rbp - 0x78]
0x400035:	mov	edx, 0x31
0x40003a:	mov	esi, 0x41
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x400047, 34 bytes>
0x400047:	mov	rax, qword ptr [rbp - 0x78]
0x40004b:	add	rax, 0x31
0x40004f:	mov	byte ptr [rax], 0
0x400052:	nop	
0x400053:	lea	rax, [rbp - 0x70]
0x400057:	mov	edx, 0x63
0x40005c:	mov	esi, 0x43
0x400061:	mov	rdi, rax
0x400064:	call	0x500008
<Block for 0x400069, 16 bytes>
0x400069:	mov	byte ptr [rbp - 0xd], 0
0x40006d:	lea	rax, [rbp - 0x70]
0x400071:	mov	rdi, rax
0x400074:	call	0x500010
<Block for 0x400079, 22 bytes>
0x400079:	mov	rdx, rax
0x40007c:	mov	rcx, qword ptr [rbp - 0x78]
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	rsi, rcx
0x400087:	mov	rdi, rax
0x40008a:	call	0x500018
<Block for 0x40008f, 16 bytes>
0x40008f:	mov	byte ptr [rbp - 0xd], 0
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500020
<Block for 0x40009f, 7 bytes>
0x40009f:	cmp	qword ptr [rbp - 0x78], 0
0x4000a4:	je	0x4000b2
<Block for 0x4000b2, 16 bytes>
0x4000b2:	nop	
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	xor	rax, qword ptr fs:[0x28]
0x4000c0:	je	0x4000c7
<Block for 0x4000a6, 12 bytes>
0x4000a6:	mov	rax, qword ptr [rbp - 0x78]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500028
<Block for 0x4000c7, 2 bytes>
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500030
