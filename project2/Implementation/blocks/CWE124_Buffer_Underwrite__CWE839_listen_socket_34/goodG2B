<Block for 0x4001c9, 99 bytes>
0x4001c9:	endbr64	
0x4001cd:	push	rbp
0x4001ce:	mov	rbp, rsp
0x4001d1:	sub	rsp, 0x40
0x4001d5:	mov	rax, qword ptr fs:[0x28]
0x4001de:	mov	qword ptr [rbp - 8], rax
0x4001e2:	xor	eax, eax
0x4001e4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001eb:	mov	dword ptr [rbp - 0x38], 7
0x4001f2:	mov	eax, dword ptr [rbp - 0x38]
0x4001f5:	mov	dword ptr [rbp - 0x40], eax
0x4001f8:	mov	eax, dword ptr [rbp - 0x40]
0x4001fb:	mov	dword ptr [rbp - 0x34], eax
0x4001fe:	mov	qword ptr [rbp - 0x30], 0
0x400206:	mov	qword ptr [rbp - 0x28], 0
0x40020e:	mov	qword ptr [rbp - 0x20], 0
0x400216:	mov	qword ptr [rbp - 0x18], 0
0x40021e:	mov	qword ptr [rbp - 0x10], 0
0x400226:	cmp	dword ptr [rbp - 0x34], 9
0x40022a:	jg	0x40025e
<Block for 0x40022c, 22 bytes>
0x40022c:	mov	eax, dword ptr [rbp - 0x34]
0x40022f:	cdqe	
0x400231:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400239:	mov	dword ptr [rbp - 0x3c], 0
0x400240:	jmp	0x400256
<Block for 0x40025e, 12 bytes>
0x40025e:	lea	rdi, [rip + 0x20b]
0x400265:	call	0x500050
<Block for 0x400256, 6 bytes>
0x400256:	cmp	dword ptr [rbp - 0x3c], 9
0x40025a:	jle	0x400242
<Block for 0x40026a, 16 bytes>
0x40026a:	nop	
0x40026b:	mov	rax, qword ptr [rbp - 8]
0x40026f:	xor	rax, qword ptr fs:[0x28]
0x400278:	je	0x40027f
<Block for 0x400242, 16 bytes>
0x400242:	mov	eax, dword ptr [rbp - 0x3c]
0x400245:	cdqe	
0x400247:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40024b:	mov	edi, eax
0x40024d:	call	0x500048
<Block for 0x40025c, 2 bytes>
0x40025c:	jmp	0x40026a
<Block for 0x40027f, 2 bytes>
0x40027f:	leave	
0x400280:	ret	
<Block for 0x40027a, 5 bytes>
0x40027a:	call	0x500058
<Block for 0x400252, 10 bytes>
0x400252:	add	dword ptr [rbp - 0x3c], 1
0x400256:	cmp	dword ptr [rbp - 0x3c], 9
0x40025a:	jle	0x400242
