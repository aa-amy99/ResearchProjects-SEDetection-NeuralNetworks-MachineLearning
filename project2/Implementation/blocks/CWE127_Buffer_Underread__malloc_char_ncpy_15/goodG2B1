<Block for 0x4000d3, 45 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	add	rsp, -0x80
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	qword ptr [rbp - 0x80], 0
0x4000f6:	mov	edi, 0x64
0x4000fb:	call	0x500000
<Block for 0x400100, 11 bytes>
0x400100:	mov	qword ptr [rbp - 0x78], rax
0x400104:	cmp	qword ptr [rbp - 0x78], 0
0x400109:	jne	0x400115
<Block for 0x40010b, 10 bytes>
0x40010b:	mov	edi, 0xffffffff
0x400110:	call	0x500008
<Block for 0x400115, 22 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x78]
0x400119:	mov	edx, 0x63
0x40011e:	mov	esi, 0x41
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x40012b, 42 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0x78]
0x40012f:	add	rax, 0x63
0x400133:	mov	byte ptr [rax], 0
0x400136:	mov	rax, qword ptr [rbp - 0x78]
0x40013a:	mov	qword ptr [rbp - 0x80], rax
0x40013e:	nop	
0x40013f:	lea	rax, [rbp - 0x70]
0x400143:	mov	edx, 0x63
0x400148:	mov	esi, 0x43
0x40014d:	mov	rdi, rax
0x400150:	call	0x500010
<Block for 0x400155, 16 bytes>
0x400155:	mov	byte ptr [rbp - 0xd], 0
0x400159:	lea	rax, [rbp - 0x70]
0x40015d:	mov	rdi, rax
0x400160:	call	0x500018
<Block for 0x400165, 22 bytes>
0x400165:	mov	rdx, rax
0x400168:	mov	rcx, qword ptr [rbp - 0x80]
0x40016c:	lea	rax, [rbp - 0x70]
0x400170:	mov	rsi, rcx
0x400173:	mov	rdi, rax
0x400176:	call	0x500020
<Block for 0x40017b, 16 bytes>
0x40017b:	mov	byte ptr [rbp - 0xd], 0
0x40017f:	lea	rax, [rbp - 0x70]
0x400183:	mov	rdi, rax
0x400186:	call	0x500028
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 8]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001a0
<Block for 0x4001a0, 2 bytes>
0x4001a0:	leave	
0x4001a1:	ret	
<Block for 0x40019b, 5 bytes>
0x40019b:	call	0x500030
