<Block for 0x4001a2, 45 bytes>
0x4001a2:	endbr64	
0x4001a6:	push	rbp
0x4001a7:	mov	rbp, rsp
0x4001aa:	add	rsp, -0x80
0x4001ae:	mov	rax, qword ptr fs:[0x28]
0x4001b7:	mov	qword ptr [rbp - 8], rax
0x4001bb:	xor	eax, eax
0x4001bd:	mov	qword ptr [rbp - 0x80], 0
0x4001c5:	mov	edi, 0x64
0x4001ca:	call	0x500000
<Block for 0x4001cf, 11 bytes>
0x4001cf:	mov	qword ptr [rbp - 0x78], rax
0x4001d3:	cmp	qword ptr [rbp - 0x78], 0
0x4001d8:	jne	0x4001e4
<Block for 0x4001da, 10 bytes>
0x4001da:	mov	edi, 0xffffffff
0x4001df:	call	0x500008
<Block for 0x4001e4, 22 bytes>
0x4001e4:	mov	rax, qword ptr [rbp - 0x78]
0x4001e8:	mov	edx, 0x63
0x4001ed:	mov	esi, 0x41
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500010
<Block for 0x4001fa, 42 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x78]
0x4001fe:	add	rax, 0x63
0x400202:	mov	byte ptr [rax], 0
0x400205:	mov	rax, qword ptr [rbp - 0x78]
0x400209:	mov	qword ptr [rbp - 0x80], rax
0x40020d:	nop	
0x40020e:	lea	rax, [rbp - 0x70]
0x400212:	mov	edx, 0x63
0x400217:	mov	esi, 0x43
0x40021c:	mov	rdi, rax
0x40021f:	call	0x500010
<Block for 0x400224, 16 bytes>
0x400224:	mov	byte ptr [rbp - 0xd], 0
0x400228:	lea	rax, [rbp - 0x70]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x500018
<Block for 0x400234, 22 bytes>
0x400234:	mov	rdx, rax
0x400237:	mov	rcx, qword ptr [rbp - 0x80]
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	rsi, rcx
0x400242:	mov	rdi, rax
0x400245:	call	0x500020
<Block for 0x40024a, 16 bytes>
0x40024a:	mov	byte ptr [rbp - 0xd], 0
0x40024e:	lea	rax, [rbp - 0x70]
0x400252:	mov	rdi, rax
0x400255:	call	0x500028
<Block for 0x40025a, 16 bytes>
0x40025a:	nop	
0x40025b:	mov	rax, qword ptr [rbp - 8]
0x40025f:	xor	rax, qword ptr fs:[0x28]
0x400268:	je	0x40026f
<Block for 0x40026f, 2 bytes>
0x40026f:	leave	
0x400270:	ret	
<Block for 0x40026a, 5 bytes>
0x40026a:	call	0x500030
