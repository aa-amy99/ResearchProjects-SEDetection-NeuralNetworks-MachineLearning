<Block for 0x40014a, 46 bytes>
0x40014a:	endbr64	
0x40014e:	push	rbp
0x40014f:	mov	rbp, rsp
0x400152:	sub	rsp, 0x90
0x400159:	mov	rax, qword ptr fs:[0x28]
0x400162:	mov	qword ptr [rbp - 8], rax
0x400166:	xor	eax, eax
0x400168:	mov	qword ptr [rbp - 0x88], 0
0x400173:	call	0x500000
<Block for 0x400178, 9 bytes>
0x400178:	test	eax, eax
0x40017a:	setne	al
0x40017d:	test	al, al
0x40017f:	je	0x4001bb
<Block for 0x4001bb, 10 bytes>
0x4001bb:	mov	edi, 0x64
0x4001c0:	call	0x500008
<Block for 0x400181, 10 bytes>
0x400181:	mov	edi, 0x64
0x400186:	call	0x500008
<Block for 0x4001c5, 32 bytes>
0x4001c5:	mov	qword ptr [rbp - 0x88], rax
0x4001cc:	mov	rax, qword ptr [rbp - 0x88]
0x4001d3:	mov	edx, 0x63
0x4001d8:	mov	esi, 0x41
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x500010
<Block for 0x40018b, 32 bytes>
0x40018b:	mov	qword ptr [rbp - 0x88], rax
0x400192:	mov	rax, qword ptr [rbp - 0x88]
0x400199:	mov	edx, 0x63
0x40019e:	mov	esi, 0x41
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500010
<Block for 0x4001e5, 36 bytes>
0x4001e5:	mov	rax, qword ptr [rbp - 0x88]
0x4001ec:	add	rax, 0x63
0x4001f0:	mov	byte ptr [rax], 0
0x4001f3:	lea	rax, [rbp - 0x70]
0x4001f7:	mov	edx, 0x63
0x4001fc:	mov	esi, 0x43
0x400201:	mov	rdi, rax
0x400204:	call	0x500010
<Block for 0x4001ab, 16 bytes>
0x4001ab:	mov	rax, qword ptr [rbp - 0x88]
0x4001b2:	add	rax, 0x63
0x4001b6:	mov	byte ptr [rax], 0
0x4001b9:	jmp	0x4001f3
<Block for 0x400209, 16 bytes>
0x400209:	mov	byte ptr [rbp - 0xd], 0
0x40020d:	lea	rax, [rbp - 0x70]
0x400211:	mov	rdi, rax
0x400214:	call	0x500018
<Block for 0x4001f3, 22 bytes>
0x4001f3:	lea	rax, [rbp - 0x70]
0x4001f7:	mov	edx, 0x63
0x4001fc:	mov	esi, 0x43
0x400201:	mov	rdi, rax
0x400204:	call	0x500010
<Block for 0x400219, 22 bytes>
0x400219:	mov	qword ptr [rbp - 0x78], rax
0x40021d:	mov	qword ptr [rbp - 0x80], 0
0x400225:	mov	rax, qword ptr [rbp - 0x80]
0x400229:	cmp	rax, qword ptr [rbp - 0x78]
0x40022d:	jae	0x400254
<Block for 0x40022f, 37 bytes>
0x40022f:	mov	rdx, qword ptr [rbp - 0x88]
0x400236:	mov	rax, qword ptr [rbp - 0x80]
0x40023a:	add	rax, rdx
0x40023d:	movzx	eax, byte ptr [rax]
0x400240:	lea	rcx, [rbp - 0x70]
0x400244:	mov	rdx, qword ptr [rbp - 0x80]
0x400248:	add	rdx, rcx
0x40024b:	mov	byte ptr [rdx], al
0x40024d:	add	qword ptr [rbp - 0x80], 1
0x400252:	jmp	0x400225
<Block for 0x400254, 16 bytes>
0x400254:	mov	byte ptr [rbp - 0xd], 0
0x400258:	lea	rax, [rbp - 0x70]
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500020
<Block for 0x400225, 10 bytes>
0x400225:	mov	rax, qword ptr [rbp - 0x80]
0x400229:	cmp	rax, qword ptr [rbp - 0x78]
0x40022d:	jae	0x400254
<Block for 0x400264, 10 bytes>
0x400264:	cmp	qword ptr [rbp - 0x88], 0
0x40026c:	je	0x40027d
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x40026e, 15 bytes>
0x40026e:	mov	rax, qword ptr [rbp - 0x88]
0x400275:	mov	rdi, rax
0x400278:	call	0x500028
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500030
