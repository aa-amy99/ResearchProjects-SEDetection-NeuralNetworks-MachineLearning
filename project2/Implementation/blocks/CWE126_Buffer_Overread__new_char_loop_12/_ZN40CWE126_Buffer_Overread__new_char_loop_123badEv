<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	call	0x500000
<Block for 0x40002e, 9 bytes>
0x40002e:	test	eax, eax
0x400030:	setne	al
0x400033:	test	al, al
0x400035:	je	0x400071
<Block for 0x400071, 10 bytes>
0x400071:	mov	edi, 0x64
0x400076:	call	0x500008
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x32
0x40003c:	call	0x500008
<Block for 0x40007b, 32 bytes>
0x40007b:	mov	qword ptr [rbp - 0x88], rax
0x400082:	mov	rax, qword ptr [rbp - 0x88]
0x400089:	mov	edx, 0x63
0x40008e:	mov	esi, 0x41
0x400093:	mov	rdi, rax
0x400096:	call	0x500010
<Block for 0x400041, 32 bytes>
0x400041:	mov	qword ptr [rbp - 0x88], rax
0x400048:	mov	rax, qword ptr [rbp - 0x88]
0x40004f:	mov	edx, 0x31
0x400054:	mov	esi, 0x41
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x40009b, 36 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x88]
0x4000a2:	add	rax, 0x63
0x4000a6:	mov	byte ptr [rax], 0
0x4000a9:	lea	rax, [rbp - 0x70]
0x4000ad:	mov	edx, 0x63
0x4000b2:	mov	esi, 0x43
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x400061, 16 bytes>
0x400061:	mov	rax, qword ptr [rbp - 0x88]
0x400068:	add	rax, 0x31
0x40006c:	mov	byte ptr [rax], 0
0x40006f:	jmp	0x4000a9
<Block for 0x4000bf, 16 bytes>
0x4000bf:	mov	byte ptr [rbp - 0xd], 0
0x4000c3:	lea	rax, [rbp - 0x70]
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x500018
<Block for 0x4000a9, 22 bytes>
0x4000a9:	lea	rax, [rbp - 0x70]
0x4000ad:	mov	edx, 0x63
0x4000b2:	mov	esi, 0x43
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x4000cf, 22 bytes>
0x4000cf:	mov	qword ptr [rbp - 0x78], rax
0x4000d3:	mov	qword ptr [rbp - 0x80], 0
0x4000db:	mov	rax, qword ptr [rbp - 0x80]
0x4000df:	cmp	rax, qword ptr [rbp - 0x78]
0x4000e3:	jae	0x40010a
<Block for 0x4000e5, 37 bytes>
0x4000e5:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ec:	mov	rax, qword ptr [rbp - 0x80]
0x4000f0:	add	rax, rdx
0x4000f3:	movzx	eax, byte ptr [rax]
0x4000f6:	lea	rcx, [rbp - 0x70]
0x4000fa:	mov	rdx, qword ptr [rbp - 0x80]
0x4000fe:	add	rdx, rcx
0x400101:	mov	byte ptr [rdx], al
0x400103:	add	qword ptr [rbp - 0x80], 1
0x400108:	jmp	0x4000db
<Block for 0x40010a, 16 bytes>
0x40010a:	mov	byte ptr [rbp - 0xd], 0
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	rdi, rax
0x400115:	call	0x500020
<Block for 0x4000db, 10 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x80]
0x4000df:	cmp	rax, qword ptr [rbp - 0x78]
0x4000e3:	jae	0x40010a
<Block for 0x40011a, 10 bytes>
0x40011a:	cmp	qword ptr [rbp - 0x88], 0
0x400122:	je	0x400133
<Block for 0x400133, 16 bytes>
0x400133:	nop	
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	xor	rax, qword ptr fs:[0x28]
0x400141:	je	0x400148
<Block for 0x400124, 15 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0x88]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500028
<Block for 0x400148, 2 bytes>
0x400148:	leave	
0x400149:	ret	
<Block for 0x400143, 5 bytes>
0x400143:	call	0x500030
