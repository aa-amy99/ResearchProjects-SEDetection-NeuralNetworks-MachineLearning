<Block for 0x4000e3, 36 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0x20
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	eax, 0
0x400103:	test	eax, eax
0x400105:	je	0x400118
<Block for 0x400118, 54 bytes>
0x400118:	mov	eax, 0x10
0x40011d:	sub	rax, 1
0x400121:	add	rax, 0x10
0x400125:	mov	esi, 0x10
0x40012a:	mov	edx, 0
0x40012f:	div	rsi
0x400132:	imul	rax, rax, 0x10
0x400136:	mov	rdx, rax
0x400139:	and	rdx, 0xfffffffffffff000
0x400140:	mov	rcx, rsp
0x400143:	sub	rcx, rdx
0x400146:	mov	rdx, rcx
0x400149:	cmp	rsp, rdx
0x40014c:	je	0x400160
<Block for 0x400107, 12 bytes>
0x400107:	lea	rdi, [rip + 0x202]
0x40010e:	call	0x500010
<Block for 0x400160, 26 bytes>
0x400160:	mov	rdx, rax
0x400163:	and	edx, 0xfff
0x400169:	sub	rsp, rdx
0x40016c:	mov	rdx, rax
0x40016f:	and	edx, 0xfff
0x400175:	test	rdx, rdx
0x400178:	je	0x40018a
<Block for 0x40014e, 18 bytes>
0x40014e:	sub	rsp, 0x1000
0x400155:	or	qword ptr [rsp + 0xff8], 0
0x40015e:	jmp	0x400149
<Block for 0x400113, 5 bytes>
0x400113:	jmp	0x4001d5
<Block for 0x40018a, 65 bytes>
0x40018a:	mov	rax, rsp
0x40018d:	add	rax, 0xf
0x400191:	shr	rax, 4
0x400195:	shl	rax, 4
0x400199:	mov	qword ptr [rbp - 0x20], rax
0x40019d:	mov	dword ptr [rbp - 0x18], 1
0x4001a4:	mov	dword ptr [rbp - 0x14], 2
0x4001ab:	mov	rax, qword ptr [rbp - 0x20]
0x4001af:	mov	rdx, qword ptr [rbp - 0x18]
0x4001b3:	mov	qword ptr [rax], rdx
0x4001b6:	mov	rax, qword ptr [rbp - 0x20]
0x4001ba:	mov	rax, qword ptr [rax]
0x4001bd:	mov	qword ptr [rbp - 0x10], rax
0x4001c1:	mov	eax, dword ptr [rbp - 0x10]
0x4001c4:	mov	edi, eax
0x4001c6:	call	0x500000
<Block for 0x40017a, 81 bytes>
0x40017a:	and	eax, 0xfff
0x40017f:	sub	rax, 8
0x400183:	add	rax, rsp
0x400186:	or	qword ptr [rax], 0
0x40018a:	mov	rax, rsp
0x40018d:	add	rax, 0xf
0x400191:	shr	rax, 4
0x400195:	shl	rax, 4
0x400199:	mov	qword ptr [rbp - 0x20], rax
0x40019d:	mov	dword ptr [rbp - 0x18], 1
0x4001a4:	mov	dword ptr [rbp - 0x14], 2
0x4001ab:	mov	rax, qword ptr [rbp - 0x20]
0x4001af:	mov	rdx, qword ptr [rbp - 0x18]
0x4001b3:	mov	qword ptr [rax], rdx
0x4001b6:	mov	rax, qword ptr [rbp - 0x20]
0x4001ba:	mov	rax, qword ptr [rax]
0x4001bd:	mov	qword ptr [rbp - 0x10], rax
0x4001c1:	mov	eax, dword ptr [rbp - 0x10]
0x4001c4:	mov	edi, eax
0x4001c6:	call	0x500000
<Block for 0x400149, 5 bytes>
0x400149:	cmp	rsp, rdx
0x40014c:	je	0x400160
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 8]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x4001ea
<Block for 0x4001cb, 10 bytes>
0x4001cb:	mov	eax, dword ptr [rbp - 0xc]
0x4001ce:	mov	edi, eax
0x4001d0:	call	0x500000
<Block for 0x4001ea, 2 bytes>
0x4001ea:	leave	
0x4001eb:	ret	
<Block for 0x4001e5, 5 bytes>
0x4001e5:	call	0x500008
