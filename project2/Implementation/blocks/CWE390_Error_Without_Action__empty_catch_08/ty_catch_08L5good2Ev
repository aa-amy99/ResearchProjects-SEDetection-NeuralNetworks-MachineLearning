<Block for 0x4002d3, 35 bytes>
0x4002d3:	endbr64	
0x4002d7:	push	rbp
0x4002d8:	mov	rbp, rsp
0x4002db:	push	r12
0x4002dd:	push	rbx
0x4002de:	sub	rsp, 0x60
0x4002e2:	mov	rax, qword ptr fs:[0x28]
0x4002eb:	mov	qword ptr [rbp - 0x18], rax
0x4002ef:	xor	eax, eax
0x4002f1:	call	0x400000
<Block for 0x4002f6, 13 bytes>
0x4002f6:	test	eax, eax
0x4002f8:	setne	al
0x4002fb:	test	al, al
0x4002fd:	je	0x40041f
<Block for 0x40041f, 16 bytes>
0x40041f:	nop	
0x400420:	mov	rax, qword ptr [rbp - 0x18]
0x400424:	xor	rax, qword ptr fs:[0x28]
0x40042d:	je	0x400434
<Block for 0x400303, 12 bytes>
0x400303:	lea	rax, [rbp - 0x69]
0x400307:	mov	rdi, rax
0x40030a:	call	0x500000
<Block for 0x400434, 9 bytes>
0x400434:	add	rsp, 0x60
0x400438:	pop	rbx
0x400439:	pop	r12
0x40043b:	pop	rbp
0x40043c:	ret	
<Block for 0x40042f, 5 bytes>
0x40042f:	call	0x500058
<Block for 0x40030f, 23 bytes>
0x40030f:	lea	rdx, [rbp - 0x69]
0x400313:	lea	rax, [rbp - 0x60]
0x400317:	lea	rsi, [rip + 0x19c]
0x40031e:	mov	rdi, rax
0x400321:	call	0x500008
<Block for 0x400326, 12 bytes>
0x400326:	lea	rax, [rbp - 0x69]
0x40032a:	mov	rdi, rax
0x40032d:	call	0x500010
<Block for 0x400332, 5 bytes>
0x400332:	call	0x500018
<Block for 0x400337, 8 bytes>
0x400337:	movsxd	rbx, eax
0x40033a:	call	0x500018
<Block for 0x40033f, 22 bytes>
0x40033f:	movsxd	rdx, eax
0x400342:	lea	rax, [rbp - 0x40]
0x400346:	lea	rsi, [rbp - 0x60]
0x40034a:	mov	rcx, rbx
0x40034d:	mov	rdi, rax
0x400350:	call	0x500020
<Block for 0x400355, 12 bytes>
0x400355:	lea	rax, [rbp - 0x40]
0x400359:	mov	rdi, rax
0x40035c:	call	0x500028
<Block for 0x400361, 8 bytes>
0x400361:	mov	rdi, rax
0x400364:	call	0x500030
<Block for 0x400369, 12 bytes>
0x400369:	lea	rax, [rbp - 0x40]
0x40036d:	mov	rdi, rax
0x400370:	call	0x500038
<Block for 0x400375, 12 bytes>
0x400375:	lea	rax, [rbp - 0x60]
0x400379:	mov	rdi, rax
0x40037c:	call	0x500038
<Block for 0x400381, 5 bytes>
0x400381:	jmp	0x40041f
