<Block for 0x4000d4, 50 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	add	rsp, -0x80
0x4000e0:	mov	rax, qword ptr fs:[0x28]
0x4000e9:	mov	qword ptr [rbp - 8], rax
0x4000ed:	xor	eax, eax
0x4000ef:	mov	qword ptr [rbp - 0x80], 0
0x4000f7:	nop	
0x4000f8:	endbr64	
0x4000fc:	mov	edi, 0x64
0x400101:	call	0x500000
<Block for 0x400106, 11 bytes>
0x400106:	mov	qword ptr [rbp - 0x78], rax
0x40010a:	cmp	qword ptr [rbp - 0x78], 0
0x40010f:	jne	0x40011b
<Block for 0x400111, 10 bytes>
0x400111:	mov	edi, 0xffffffff
0x400116:	call	0x500008
<Block for 0x40011b, 22 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 0x78]
0x40011f:	mov	edx, 0x63
0x400124:	mov	esi, 0x41
0x400129:	mov	rdi, rax
0x40012c:	call	0x500010
<Block for 0x400131, 41 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x78]
0x400135:	add	rax, 0x63
0x400139:	mov	byte ptr [rax], 0
0x40013c:	mov	rax, qword ptr [rbp - 0x78]
0x400140:	mov	qword ptr [rbp - 0x80], rax
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500010
<Block for 0x40015a, 28 bytes>
0x40015a:	mov	byte ptr [rbp - 0xd], 0
0x40015e:	lea	rcx, [rbp - 0x70]
0x400162:	mov	rax, qword ptr [rbp - 0x80]
0x400166:	mov	edx, 0x64
0x40016b:	mov	rsi, rcx
0x40016e:	mov	rdi, rax
0x400171:	call	0x500018
<Block for 0x400176, 23 bytes>
0x400176:	mov	rax, qword ptr [rbp - 0x80]
0x40017a:	add	rax, 0x63
0x40017e:	mov	byte ptr [rax], 0
0x400181:	mov	rax, qword ptr [rbp - 0x80]
0x400185:	mov	rdi, rax
0x400188:	call	0x500020
<Block for 0x40018d, 16 bytes>
0x40018d:	nop	
0x40018e:	mov	rax, qword ptr [rbp - 8]
0x400192:	xor	rax, qword ptr fs:[0x28]
0x40019b:	je	0x4001a2
<Block for 0x4001a2, 2 bytes>
0x4001a2:	leave	
0x4001a3:	ret	
<Block for 0x40019d, 5 bytes>
0x40019d:	call	0x500028
