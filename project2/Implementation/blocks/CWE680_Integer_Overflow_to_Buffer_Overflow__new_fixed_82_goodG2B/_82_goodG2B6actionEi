<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	dword ptr [rbp - 0x2c], esi
0x400013:	mov	eax, dword ptr [rbp - 0x2c]
0x400016:	cdqe	
0x400018:	shl	rax, 2
0x40001c:	mov	qword ptr [rbp - 0x10], rax
0x400020:	mov	rax, qword ptr [rbp - 0x10]
0x400024:	mov	rdi, rax
0x400027:	call	0x500000
<Block for 0x40002c, 23 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	mov	qword ptr [rbp - 0x18], 0
0x400038:	mov	eax, dword ptr [rbp - 0x2c]
0x40003b:	cdqe	
0x40003d:	cmp	qword ptr [rbp - 0x18], rax
0x400041:	jae	0x400063
<Block for 0x400043, 32 bytes>
0x400043:	mov	rax, qword ptr [rbp - 0x18]
0x400047:	lea	rdx, [rax*4]
0x40004f:	mov	rax, qword ptr [rbp - 8]
0x400053:	add	rax, rdx
0x400056:	mov	dword ptr [rax], 0
0x40005c:	add	qword ptr [rbp - 0x18], 1
0x400061:	jmp	0x400038
<Block for 0x400063, 13 bytes>
0x400063:	mov	rax, qword ptr [rbp - 8]
0x400067:	mov	eax, dword ptr [rax]
0x400069:	mov	edi, eax
0x40006b:	call	0x500008
<Block for 0x400038, 11 bytes>
0x400038:	mov	eax, dword ptr [rbp - 0x2c]
0x40003b:	cdqe	
0x40003d:	cmp	qword ptr [rbp - 0x18], rax
0x400041:	jae	0x400063
<Block for 0x400070, 7 bytes>
0x400070:	cmp	qword ptr [rbp - 8], 0
0x400075:	je	0x400083
<Block for 0x400083, 3 bytes>
0x400083:	nop	
0x400084:	leave	
0x400085:	ret	
<Block for 0x400077, 12 bytes>
0x400077:	mov	rax, qword ptr [rbp - 8]
0x40007b:	mov	rdi, rax
0x40007e:	call	0x500010
