<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0x2c4]
0x400028:	test	eax, eax
0x40002a:	je	0x400102
<Block for 0x400102, 17 bytes>
0x400102:	mov	eax, dword ptr [rbp - 0x4c]
0x400105:	cdqe	
0x400107:	shl	rax, 2
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500040
<Block for 0x400030, 27 bytes>
0x400030:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400037:	mov	edx, 6
0x40003c:	mov	esi, 1
0x400041:	mov	edi, 2
0x400046:	call	0x500000
<Block for 0x400113, 11 bytes>
0x400113:	mov	qword ptr [rbp - 0x38], rax
0x400117:	cmp	qword ptr [rbp - 0x38], 0
0x40011c:	jne	0x400128
<Block for 0x40004b, 13 bytes>
0x40004b:	mov	dword ptr [rbp - 0x48], eax
0x40004e:	cmp	dword ptr [rbp - 0x48], -1
0x400052:	je	0x4000ee
<Block for 0x40011e, 10 bytes>
0x40011e:	mov	edi, 0xffffffff
0x400123:	call	0x500048
<Block for 0x400128, 10 bytes>
0x400128:	mov	qword ptr [rbp - 0x40], 0
0x400130:	jmp	0x400150
<Block for 0x4000ee, 3 bytes>
0x4000ee:	nop	
0x4000ef:	jmp	0x4000f2
<Block for 0x400058, 22 bytes>
0x400058:	lea	rax, [rbp - 0x30]
0x40005c:	mov	edx, 0x10
0x400061:	mov	esi, 0
0x400066:	mov	rdi, rax
0x400069:	call	0x500008
<Block for 0x400150, 11 bytes>
0x400150:	mov	eax, dword ptr [rbp - 0x4c]
0x400153:	cdqe	
0x400155:	cmp	qword ptr [rbp - 0x40], rax
0x400159:	jb	0x400132
<Block for 0x4000f2, 6 bytes>
0x4000f2:	cmp	dword ptr [rbp - 0x48], -1
0x4000f6:	je	0x400102
<Block for 0x40006e, 18 bytes>
0x40006e:	mov	word ptr [rbp - 0x30], 2
0x400074:	lea	rdi, [rip + 0x279]
0x40007b:	call	0x500010
<Block for 0x400132, 41 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x40]
0x400136:	lea	rdx, [rax*4]
0x40013e:	mov	rax, qword ptr [rbp - 0x38]
0x400142:	add	rax, rdx
0x400145:	mov	dword ptr [rax], 0
0x40014b:	add	qword ptr [rbp - 0x40], 1
0x400150:	mov	eax, dword ptr [rbp - 0x4c]
0x400153:	cdqe	
0x400155:	cmp	qword ptr [rbp - 0x40], rax
0x400159:	jb	0x400132
<Block for 0x40015b, 13 bytes>
0x40015b:	mov	rax, qword ptr [rbp - 0x38]
0x40015f:	mov	eax, dword ptr [rax]
0x400161:	mov	edi, eax
0x400163:	call	0x500050
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	eax, dword ptr [rbp - 0x48]
0x4000fb:	mov	edi, eax
0x4000fd:	call	0x500038
<Block for 0x400080, 13 bytes>
0x400080:	mov	dword ptr [rbp - 0x2c], eax
0x400083:	mov	edi, 0x6987
0x400088:	call	0x500018
<Block for 0x400168, 12 bytes>
0x400168:	mov	rax, qword ptr [rbp - 0x38]
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500058
<Block for 0x40008d, 26 bytes>
0x40008d:	mov	word ptr [rbp - 0x2e], ax
0x400091:	lea	rcx, [rbp - 0x30]
0x400095:	mov	eax, dword ptr [rbp - 0x48]
0x400098:	mov	edx, 0x10
0x40009d:	mov	rsi, rcx
0x4000a0:	mov	edi, eax
0x4000a2:	call	0x500020
<Block for 0x400174, 16 bytes>
0x400174:	nop	
0x400175:	mov	rax, qword ptr [rbp - 8]
0x400179:	xor	rax, qword ptr fs:[0x28]
0x400182:	je	0x400189
<Block for 0x4000a7, 5 bytes>
0x4000a7:	cmp	eax, -1
0x4000aa:	je	0x4000f1
<Block for 0x400189, 2 bytes>
0x400189:	leave	
0x40018a:	ret	
<Block for 0x400184, 5 bytes>
0x400184:	call	0x500060
<Block for 0x4000ac, 24 bytes>
0x4000ac:	lea	rsi, [rbp - 0x16]
0x4000b0:	mov	eax, dword ptr [rbp - 0x48]
0x4000b3:	mov	ecx, 0
0x4000b8:	mov	edx, 0xd
0x4000bd:	mov	edi, eax
0x4000bf:	call	0x500028
<Block for 0x4000f1, 1 bytes>
0x4000f1:	nop	
<Block for 0x4000c4, 9 bytes>
0x4000c4:	mov	dword ptr [rbp - 0x44], eax
0x4000c7:	cmp	dword ptr [rbp - 0x44], -1
0x4000cb:	je	0x4000f2
<Block for 0x4000cd, 6 bytes>
0x4000cd:	cmp	dword ptr [rbp - 0x44], 0
0x4000d1:	je	0x4000f2
<Block for 0x4000d3, 22 bytes>
0x4000d3:	mov	eax, dword ptr [rbp - 0x44]
0x4000d6:	cdqe	
0x4000d8:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000dd:	lea	rax, [rbp - 0x16]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500030
<Block for 0x4000e9, 5 bytes>
0x4000e9:	mov	dword ptr [rbp - 0x4c], eax
0x4000ec:	jmp	0x4000f2
