<Block for 0x4000df, 44 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0x40
0x4000eb:	mov	rax, qword ptr fs:[0x28]
0x4000f4:	mov	qword ptr [rbp - 8], rax
0x4000f8:	xor	eax, eax
0x4000fa:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400101:	mov	eax, 0
0x400106:	call	0x400000
<Block for 0x40010b, 4 bytes>
0x40010b:	test	eax, eax
0x40010d:	je	0x40012e
<Block for 0x40012e, 10 bytes>
0x40012e:	mov	eax, 0
0x400133:	call	0x40000f
<Block for 0x40010f, 31 bytes>
0x40010f:	mov	rax, qword ptr [rip + 0xffeea]
0x400116:	lea	rdx, [rbp - 0x34]
0x40011a:	lea	rsi, [rip + 0x2ef]
0x400121:	mov	rdi, rax
0x400124:	mov	eax, 0
0x400129:	call	0x500008
<Block for 0x400138, 4 bytes>
0x400138:	test	eax, eax
0x40013a:	je	0x40014a
<Block for 0x40014a, 47 bytes>
0x40014a:	mov	qword ptr [rbp - 0x30], 0
0x400152:	mov	qword ptr [rbp - 0x28], 0
0x40015a:	mov	qword ptr [rbp - 0x20], 0
0x400162:	mov	qword ptr [rbp - 0x18], 0
0x40016a:	mov	qword ptr [rbp - 0x10], 0
0x400172:	mov	eax, dword ptr [rbp - 0x34]
0x400175:	test	eax, eax
0x400177:	js	0x400193
<Block for 0x40013c, 12 bytes>
0x40013c:	lea	rdi, [rip + 0x2f4]
0x400143:	call	0x500018
<Block for 0x400193, 12 bytes>
0x400193:	lea	rdi, [rip + 0x2b6]
0x40019a:	call	0x500018
<Block for 0x400179, 8 bytes>
0x400179:	mov	eax, dword ptr [rbp - 0x34]
0x40017c:	cmp	eax, 9
0x40017f:	jg	0x400193
<Block for 0x400148, 2 bytes>
0x400148:	jmp	0x40019f
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x400181, 16 bytes>
0x400181:	mov	eax, dword ptr [rbp - 0x34]
0x400184:	cdqe	
0x400186:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40018a:	mov	edi, eax
0x40018c:	call	0x500010
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500020
<Block for 0x400191, 2 bytes>
0x400191:	jmp	0x40019f
