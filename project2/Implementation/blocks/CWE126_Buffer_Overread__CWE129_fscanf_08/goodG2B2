<Block for 0x400335, 44 bytes>
0x400335:	endbr64	
0x400339:	push	rbp
0x40033a:	mov	rbp, rsp
0x40033d:	sub	rsp, 0x40
0x400341:	mov	rax, qword ptr fs:[0x28]
0x40034a:	mov	qword ptr [rbp - 8], rax
0x40034e:	xor	eax, eax
0x400350:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400357:	mov	eax, 0
0x40035c:	call	0x400000
<Block for 0x400361, 4 bytes>
0x400361:	test	eax, eax
0x400363:	je	0x40036c
<Block for 0x40036c, 10 bytes>
0x40036c:	mov	eax, 0
0x400371:	call	0x400000
<Block for 0x400365, 17 bytes>
0x400365:	mov	dword ptr [rbp - 0x34], 7
0x40036c:	mov	eax, 0
0x400371:	call	0x400000
<Block for 0x400376, 4 bytes>
0x400376:	test	eax, eax
0x400378:	je	0x4003c6
<Block for 0x4003c6, 16 bytes>
0x4003c6:	nop	
0x4003c7:	mov	rax, qword ptr [rbp - 8]
0x4003cb:	xor	rax, qword ptr fs:[0x28]
0x4003d4:	je	0x4003db
<Block for 0x40037a, 46 bytes>
0x40037a:	mov	qword ptr [rbp - 0x30], 0
0x400382:	mov	qword ptr [rbp - 0x28], 0
0x40038a:	mov	qword ptr [rbp - 0x20], 0
0x400392:	mov	qword ptr [rbp - 0x18], 0
0x40039a:	mov	qword ptr [rbp - 0x10], 0
0x4003a2:	cmp	dword ptr [rbp - 0x34], 0
0x4003a6:	js	0x4003ba
<Block for 0x4003db, 2 bytes>
0x4003db:	leave	
0x4003dc:	ret	
<Block for 0x4003d6, 5 bytes>
0x4003d6:	call	0x500020
<Block for 0x4003ba, 12 bytes>
0x4003ba:	lea	rdi, [rip + 0x57]
0x4003c1:	call	0x500018
<Block for 0x4003a8, 16 bytes>
0x4003a8:	mov	eax, dword ptr [rbp - 0x34]
0x4003ab:	cdqe	
0x4003ad:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003b1:	mov	edi, eax
0x4003b3:	call	0x500010
<Block for 0x4003b8, 2 bytes>
0x4003b8:	jmp	0x4003c6
