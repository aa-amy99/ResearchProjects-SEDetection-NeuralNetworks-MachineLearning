<Block for 0x400000, 246 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x98]
0x400025:	mov	qword ptr [rbp - 0x90], rax
0x40002c:	lea	rax, [rbp - 0x98]
0x400033:	mov	qword ptr [rbp - 0x88], rax
0x40003a:	mov	qword ptr [rbp - 0x70], 0
0x400042:	mov	qword ptr [rbp - 0x68], 0
0x40004a:	mov	qword ptr [rbp - 0x60], 0
0x400052:	mov	qword ptr [rbp - 0x58], 0
0x40005a:	mov	qword ptr [rbp - 0x50], 0
0x400062:	mov	qword ptr [rbp - 0x48], 0
0x40006a:	mov	qword ptr [rbp - 0x40], 0
0x400072:	mov	qword ptr [rbp - 0x38], 0
0x40007a:	mov	qword ptr [rbp - 0x30], 0
0x400082:	mov	qword ptr [rbp - 0x28], 0
0x40008a:	mov	qword ptr [rbp - 0x20], 0
0x400092:	mov	qword ptr [rbp - 0x18], 0
0x40009a:	mov	dword ptr [rbp - 0x10], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	qword ptr [rbp - 0x98], rax
0x4000ac:	mov	rax, qword ptr [rbp - 0x90]
0x4000b3:	mov	rax, qword ptr [rax]
0x4000b6:	mov	qword ptr [rbp - 0x80], rax
0x4000ba:	mov	rax, qword ptr [rbp - 0x80]
0x4000be:	mov	dword ptr [rax], 0x2d20736c
0x4000c4:	mov	word ptr [rax + 4], 0x616c
0x4000ca:	mov	byte ptr [rax + 6], 0
0x4000ce:	mov	rax, qword ptr [rbp - 0x90]
0x4000d5:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d9:	mov	qword ptr [rax], rdx
0x4000dc:	mov	rax, qword ptr [rbp - 0x88]
0x4000e3:	mov	rax, qword ptr [rax]
0x4000e6:	mov	qword ptr [rbp - 0x78], rax
0x4000ea:	mov	rax, qword ptr [rbp - 0x78]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500000
<Block for 0x4000f6, 4 bytes>
0x4000f6:	test	eax, eax
0x4000f8:	jg	0x400110
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x16d]
0x400101:	call	0x500008
<Block for 0x400110, 16 bytes>
0x400110:	nop	
0x400111:	mov	rax, qword ptr [rbp - 8]
0x400115:	xor	rax, qword ptr fs:[0x28]
0x40011e:	je	0x400125
<Block for 0x400106, 10 bytes>
0x400106:	mov	edi, 1
0x40010b:	call	0x500010
<Block for 0x400125, 2 bytes>
0x400125:	leave	
0x400126:	ret	
<Block for 0x400120, 5 bytes>
0x400120:	call	0x500018
