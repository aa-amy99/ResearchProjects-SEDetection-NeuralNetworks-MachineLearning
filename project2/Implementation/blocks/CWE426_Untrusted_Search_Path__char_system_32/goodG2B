<Block for 0x400127, 257 bytes>
0x400127:	endbr64	
0x40012b:	push	rbp
0x40012c:	mov	rbp, rsp
0x40012f:	sub	rsp, 0xa0
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 8], rax
0x400143:	xor	eax, eax
0x400145:	lea	rax, [rbp - 0x98]
0x40014c:	mov	qword ptr [rbp - 0x90], rax
0x400153:	lea	rax, [rbp - 0x98]
0x40015a:	mov	qword ptr [rbp - 0x88], rax
0x400161:	mov	qword ptr [rbp - 0x70], 0
0x400169:	mov	qword ptr [rbp - 0x68], 0
0x400171:	mov	qword ptr [rbp - 0x60], 0
0x400179:	mov	qword ptr [rbp - 0x58], 0
0x400181:	mov	qword ptr [rbp - 0x50], 0
0x400189:	mov	qword ptr [rbp - 0x48], 0
0x400191:	mov	qword ptr [rbp - 0x40], 0
0x400199:	mov	qword ptr [rbp - 0x38], 0
0x4001a1:	mov	qword ptr [rbp - 0x30], 0
0x4001a9:	mov	qword ptr [rbp - 0x28], 0
0x4001b1:	mov	qword ptr [rbp - 0x20], 0
0x4001b9:	mov	qword ptr [rbp - 0x18], 0
0x4001c1:	mov	dword ptr [rbp - 0x10], 0
0x4001c8:	lea	rax, [rbp - 0x70]
0x4001cc:	mov	qword ptr [rbp - 0x98], rax
0x4001d3:	mov	rax, qword ptr [rbp - 0x90]
0x4001da:	mov	rax, qword ptr [rax]
0x4001dd:	mov	qword ptr [rbp - 0x80], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0x80]
0x4001e5:	movabs	rsi, 0x6e69622f7273752f
0x4001ef:	movabs	rdi, 0x616c2d20736c2f
0x4001f9:	mov	qword ptr [rax], rsi
0x4001fc:	mov	qword ptr [rax + 8], rdi
0x400200:	mov	rax, qword ptr [rbp - 0x90]
0x400207:	mov	rdx, qword ptr [rbp - 0x80]
0x40020b:	mov	qword ptr [rax], rdx
0x40020e:	mov	rax, qword ptr [rbp - 0x88]
0x400215:	mov	rax, qword ptr [rax]
0x400218:	mov	qword ptr [rbp - 0x78], rax
0x40021c:	mov	rax, qword ptr [rbp - 0x78]
0x400220:	mov	rdi, rax
0x400223:	call	0x500000
<Block for 0x400228, 4 bytes>
0x400228:	test	eax, eax
0x40022a:	jg	0x400242
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rdi, [rip + 0x3b]
0x400233:	call	0x500008
<Block for 0x400242, 16 bytes>
0x400242:	nop	
0x400243:	mov	rax, qword ptr [rbp - 8]
0x400247:	xor	rax, qword ptr fs:[0x28]
0x400250:	je	0x400257
<Block for 0x400238, 10 bytes>
0x400238:	mov	edi, 1
0x40023d:	call	0x500010
<Block for 0x400257, 2 bytes>
0x400257:	leave	
0x400258:	ret	
<Block for 0x400252, 5 bytes>
0x400252:	call	0x500018
