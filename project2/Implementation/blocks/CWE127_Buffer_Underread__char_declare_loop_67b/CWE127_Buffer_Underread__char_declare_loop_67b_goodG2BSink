<Block for 0x4000a2, 70 bytes>
0x4000a2:	endbr64	
0x4000a6:	push	rbp
0x4000a7:	mov	rbp, rsp
0x4000aa:	sub	rsp, 0x90
0x4000b1:	mov	qword ptr [rbp - 0x88], rdi
0x4000b8:	mov	rax, qword ptr fs:[0x28]
0x4000c1:	mov	qword ptr [rbp - 8], rax
0x4000c5:	xor	eax, eax
0x4000c7:	mov	rax, qword ptr [rbp - 0x88]
0x4000ce:	mov	qword ptr [rbp - 0x78], rax
0x4000d2:	lea	rax, [rbp - 0x70]
0x4000d6:	mov	edx, 0x63
0x4000db:	mov	esi, 0x43
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500000
<Block for 0x4000e8, 14 bytes>
0x4000e8:	mov	byte ptr [rbp - 0xd], 0
0x4000ec:	mov	qword ptr [rbp - 0x80], 0
0x4000f4:	jmp	0x400116
<Block for 0x400116, 7 bytes>
0x400116:	cmp	qword ptr [rbp - 0x80], 0x63
0x40011b:	jbe	0x4000f6
<Block for 0x4000f6, 39 bytes>
0x4000f6:	mov	rdx, qword ptr [rbp - 0x78]
0x4000fa:	mov	rax, qword ptr [rbp - 0x80]
0x4000fe:	add	rax, rdx
0x400101:	movzx	eax, byte ptr [rax]
0x400104:	lea	rcx, [rbp - 0x70]
0x400108:	mov	rdx, qword ptr [rbp - 0x80]
0x40010c:	add	rdx, rcx
0x40010f:	mov	byte ptr [rdx], al
0x400111:	add	qword ptr [rbp - 0x80], 1
0x400116:	cmp	qword ptr [rbp - 0x80], 0x63
0x40011b:	jbe	0x4000f6
<Block for 0x40011d, 16 bytes>
0x40011d:	mov	byte ptr [rbp - 0xd], 0
0x400121:	lea	rax, [rbp - 0x70]
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
<Block for 0x40012d, 16 bytes>
0x40012d:	nop	
0x40012e:	mov	rax, qword ptr [rbp - 8]
0x400132:	xor	rax, qword ptr fs:[0x28]
0x40013b:	je	0x400142
<Block for 0x400142, 2 bytes>
0x400142:	leave	
0x400143:	ret	
<Block for 0x40013d, 5 bytes>
0x40013d:	call	0x500010
