<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4007f4
<Block for 0x40002b, 50 bytes>
0x40002b:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400035:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x40003f:	mov	dword ptr [rbp - 0x94], 0xffffffff
0x400049:	mov	edx, 6
0x40004e:	mov	esi, 1
0x400053:	mov	edi, 2
0x400058:	call	0x500000
<Block for 0x40005d, 19 bytes>
0x40005d:	mov	dword ptr [rbp - 0x90], eax
0x400063:	cmp	dword ptr [rbp - 0x90], -1
0x40006a:	je	0x400162
<Block for 0x400162, 3 bytes>
0x400162:	nop	
0x400163:	jmp	0x40016c
<Block for 0x400070, 22 bytes>
0x400070:	lea	rax, [rbp - 0x40]
0x400074:	mov	edx, 0x10
0x400079:	mov	esi, 0
0x40007e:	mov	rdi, rax
0x400081:	call	0x500008
<Block for 0x40016c, 9 bytes>
0x40016c:	cmp	dword ptr [rbp - 0x90], -1
0x400173:	je	0x400182
<Block for 0x400086, 23 bytes>
0x400086:	mov	word ptr [rbp - 0x40], 2
0x40008c:	mov	dword ptr [rbp - 0x3c], 0
0x400093:	mov	edi, 0x6987
0x400098:	call	0x500010
<Block for 0x400182, 9 bytes>
0x400182:	cmp	dword ptr [rbp - 0x94], -1
0x400189:	je	0x400198
<Block for 0x400175, 13 bytes>
0x400175:	mov	eax, dword ptr [rbp - 0x90]
0x40017b:	mov	edi, eax
0x40017d:	call	0x500040
<Block for 0x40009d, 29 bytes>
0x40009d:	mov	word ptr [rbp - 0x3e], ax
0x4000a1:	lea	rcx, [rbp - 0x40]
0x4000a5:	mov	eax, dword ptr [rbp - 0x90]
0x4000ab:	mov	edx, 0x10
0x4000b0:	mov	rsi, rcx
0x4000b3:	mov	edi, eax
0x4000b5:	call	0x500018
<Block for 0x400198, 12 bytes>
0x400198:	lea	rax, [rbp - 0x80]
0x40019c:	mov	rdi, rax
0x40019f:	call	0x40099e
<Block for 0x40018b, 13 bytes>
0x40018b:	mov	eax, dword ptr [rbp - 0x94]
0x400191:	mov	edi, eax
0x400193:	call	0x500040
<Block for 0x4000ba, 14 bytes>
0x4000ba:	cmp	eax, -1
0x4000bd:	sete	al
0x4000c0:	test	al, al
0x4000c2:	jne	0x400165
<Block for 0x4001a4, 29 bytes>
0x4001a4:	mov	qword ptr [rbp - 0x88], rax
0x4001ab:	lea	rdx, [rbp - 0x88]
0x4001b2:	lea	rax, [rbp - 0x60]
0x4001b6:	mov	rsi, rdx
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x4009ee
<Block for 0x4000c8, 18 bytes>
0x4000c8:	mov	eax, dword ptr [rbp - 0x90]
0x4000ce:	mov	esi, 5
0x4000d3:	mov	edi, eax
0x4000d5:	call	0x500020
<Block for 0x400165, 3 bytes>
0x400165:	nop	
0x400166:	jmp	0x40016c
<Block for 0x4001c1, 31 bytes>
0x4001c1:	lea	rdx, [rbp - 0x98]
0x4001c8:	mov	rsi, qword ptr [rbp - 0x60]
0x4001cc:	lea	rax, [rbp - 0x80]
0x4001d0:	mov	rcx, rdx
0x4001d3:	mov	edx, 1
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x400a1c
<Block for 0x4000da, 14 bytes>
0x4000da:	cmp	eax, -1
0x4000dd:	sete	al
0x4000e0:	test	al, al
0x4000e2:	jne	0x400168
<Block for 0x4001e0, 12 bytes>
0x4001e0:	lea	rax, [rbp - 0x80]
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x40099e
<Block for 0x4000e8, 23 bytes>
0x4000e8:	mov	eax, dword ptr [rbp - 0x90]
0x4000ee:	mov	edx, 0
0x4000f3:	mov	esi, 0
0x4000f8:	mov	edi, eax
0x4000fa:	call	0x500028
<Block for 0x400168, 3 bytes>
0x400168:	nop	
0x400169:	jmp	0x40016c
<Block for 0x4001ec, 29 bytes>
0x4001ec:	mov	qword ptr [rbp - 0x88], rax
0x4001f3:	lea	rdx, [rbp - 0x88]
0x4001fa:	lea	rax, [rbp - 0x60]
0x4001fe:	mov	rsi, rdx
0x400201:	mov	rdi, rax
0x400204:	call	0x4009ee
<Block for 0x4000ff, 15 bytes>
0x4000ff:	mov	dword ptr [rbp - 0x94], eax
0x400105:	cmp	dword ptr [rbp - 0x94], -1
0x40010c:	je	0x40016b
<Block for 0x400209, 31 bytes>
0x400209:	lea	rdx, [rbp - 0x98]
0x400210:	mov	rsi, qword ptr [rbp - 0x60]
0x400214:	lea	rax, [rbp - 0x80]
0x400218:	mov	rcx, rdx
0x40021b:	mov	edx, 1
0x400220:	mov	rdi, rax
0x400223:	call	0x400a1c
<Block for 0x40010e, 27 bytes>
0x40010e:	lea	rsi, [rbp - 0x26]
0x400112:	mov	eax, dword ptr [rbp - 0x94]
0x400118:	mov	ecx, 0
0x40011d:	mov	edx, 0xd
0x400122:	mov	edi, eax
0x400124:	call	0x500030
<Block for 0x40016b, 1 bytes>
0x40016b:	nop	
<Block for 0x400228, 12 bytes>
0x400228:	lea	rax, [rbp - 0x80]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x40099e
<Block for 0x400129, 15 bytes>
0x400129:	mov	dword ptr [rbp - 0x8c], eax
0x40012f:	cmp	dword ptr [rbp - 0x8c], -1
0x400136:	je	0x40016c
<Block for 0x400234, 29 bytes>
0x400234:	mov	qword ptr [rbp - 0x88], rax
0x40023b:	lea	rdx, [rbp - 0x88]
0x400242:	lea	rax, [rbp - 0x60]
0x400246:	mov	rsi, rdx
0x400249:	mov	rdi, rax
0x40024c:	call	0x4009ee
<Block for 0x400138, 9 bytes>
0x400138:	cmp	dword ptr [rbp - 0x8c], 0
0x40013f:	je	0x40016c
<Block for 0x400251, 31 bytes>
0x400251:	lea	rdx, [rbp - 0x98]
0x400258:	mov	rsi, qword ptr [rbp - 0x60]
0x40025c:	lea	rax, [rbp - 0x80]
0x400260:	mov	rcx, rdx
0x400263:	mov	edx, 1
0x400268:	mov	rdi, rax
0x40026b:	call	0x400a1c
<Block for 0x400141, 25 bytes>
0x400141:	mov	eax, dword ptr [rbp - 0x8c]
0x400147:	cdqe	
0x400149:	mov	byte ptr [rbp + rax - 0x26], 0
0x40014e:	lea	rax, [rbp - 0x26]
0x400152:	mov	rdi, rax
0x400155:	call	0x500038
<Block for 0x400270, 19 bytes>
0x400270:	lea	rdx, [rbp - 0x80]
0x400274:	lea	rax, [rbp - 0x60]
0x400278:	mov	rsi, rdx
0x40027b:	mov	rdi, rax
0x40027e:	call	0x400ae2
<Block for 0x40015a, 8 bytes>
0x40015a:	mov	dword ptr [rbp - 0x98], eax
0x400160:	jmp	0x40016c
<Block for 0x400283, 12 bytes>
0x400283:	lea	rax, [rbp - 0x60]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500048
<Block for 0x40028f, 12 bytes>
0x40028f:	lea	rax, [rbp - 0x60]
0x400293:	mov	rdi, rax
0x400296:	call	0x400956
<Block for 0x40029b, 12 bytes>
0x40029b:	lea	rax, [rbp - 0x80]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x400956
<Block for 0x4002a7, 16 bytes>
0x4002a7:	nop	
0x4002a8:	mov	rax, qword ptr [rbp - 0x18]
0x4002ac:	xor	rax, qword ptr fs:[0x28]
0x4002b5:	je	0x4002f1
<Block for 0x4002f1, 10 bytes>
0x4002f1:	add	rsp, 0x98
0x4002f8:	pop	rbx
0x4002f9:	pop	rbp
0x4002fa:	ret	
<Block for 0x4002b7, 2 bytes>
0x4002b7:	jmp	0x4002ec
<Block for 0x4002ec, 5 bytes>
0x4002ec:	call	0x500058
