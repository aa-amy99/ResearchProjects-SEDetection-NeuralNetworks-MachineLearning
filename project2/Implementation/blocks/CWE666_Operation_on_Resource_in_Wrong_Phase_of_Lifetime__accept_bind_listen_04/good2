<Block for 0x400515, 43 bytes>
0x400515:	endbr64	
0x400519:	push	rbp
0x40051a:	mov	rbp, rsp
0x40051d:	sub	rsp, 0xa0
0x400524:	mov	rax, qword ptr fs:[0x28]
0x40052d:	mov	qword ptr [rbp - 8], rax
0x400531:	xor	eax, eax
0x400533:	mov	eax, 1
0x400538:	test	eax, eax
0x40053a:	je	0x400782
<Block for 0x400782, 16 bytes>
0x400782:	nop	
0x400783:	mov	rax, qword ptr [rbp - 8]
0x400787:	xor	rax, qword ptr fs:[0x28]
0x400790:	je	0x400797
<Block for 0x400540, 135 bytes>
0x400540:	mov	qword ptr [rbp - 0x70], 0
0x400548:	mov	qword ptr [rbp - 0x68], 0
0x400550:	mov	qword ptr [rbp - 0x60], 0
0x400558:	mov	qword ptr [rbp - 0x58], 0
0x400560:	mov	qword ptr [rbp - 0x50], 0
0x400568:	mov	qword ptr [rbp - 0x48], 0
0x400570:	mov	qword ptr [rbp - 0x40], 0
0x400578:	mov	qword ptr [rbp - 0x38], 0
0x400580:	mov	qword ptr [rbp - 0x30], 0
0x400588:	mov	qword ptr [rbp - 0x28], 0
0x400590:	mov	qword ptr [rbp - 0x20], 0
0x400598:	mov	qword ptr [rbp - 0x18], 0
0x4005a0:	mov	dword ptr [rbp - 0x10], 0
0x4005a7:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005b1:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4005bb:	lea	rax, [rbp - 0x70]
0x4005bf:	mov	rdi, rax
0x4005c2:	call	0x500000
<Block for 0x400797, 2 bytes>
0x400797:	leave	
0x400798:	ret	
<Block for 0x400792, 5 bytes>
0x400792:	call	0x500058
<Block for 0x4005c7, 27 bytes>
0x4005c7:	mov	qword ptr [rbp - 0x90], rax
0x4005ce:	mov	edx, 6
0x4005d3:	mov	esi, 1
0x4005d8:	mov	edi, 2
0x4005dd:	call	0x500008
<Block for 0x4005e2, 19 bytes>
0x4005e2:	mov	dword ptr [rbp - 0x98], eax
0x4005e8:	cmp	dword ptr [rbp - 0x98], -1
0x4005ef:	je	0x400740
<Block for 0x400740, 3 bytes>
0x400740:	nop	
0x400741:	jmp	0x40074a
<Block for 0x4005f5, 22 bytes>
0x4005f5:	lea	rax, [rbp - 0x80]
0x4005f9:	mov	edx, 0x10
0x4005fe:	mov	esi, 0
0x400603:	mov	rdi, rax
0x400606:	call	0x500010
<Block for 0x40074a, 9 bytes>
0x40074a:	cmp	dword ptr [rbp - 0x98], -1
0x400751:	je	0x400760
<Block for 0x40060b, 23 bytes>
0x40060b:	mov	word ptr [rbp - 0x80], 2
0x400611:	mov	dword ptr [rbp - 0x7c], 0
0x400618:	mov	edi, 0x6987
0x40061d:	call	0x500018
<Block for 0x400760, 9 bytes>
0x400760:	cmp	dword ptr [rbp - 0x9c], -1
0x400767:	je	0x400776
<Block for 0x400753, 13 bytes>
0x400753:	mov	eax, dword ptr [rbp - 0x98]
0x400759:	mov	edi, eax
0x40075b:	call	0x500048
<Block for 0x400622, 29 bytes>
0x400622:	mov	word ptr [rbp - 0x7e], ax
0x400626:	lea	rcx, [rbp - 0x80]
0x40062a:	mov	eax, dword ptr [rbp - 0x98]
0x400630:	mov	edx, 0x10
0x400635:	mov	rsi, rcx
0x400638:	mov	edi, eax
0x40063a:	call	0x500028
<Block for 0x400776, 12 bytes>
0x400776:	lea	rax, [rbp - 0x70]
0x40077a:	mov	rdi, rax
0x40077d:	call	0x500050
<Block for 0x400769, 13 bytes>
0x400769:	mov	eax, dword ptr [rbp - 0x9c]
0x40076f:	mov	edi, eax
0x400771:	call	0x500048
<Block for 0x40063f, 9 bytes>
0x40063f:	cmp	eax, -1
0x400642:	je	0x400743
<Block for 0x400743, 3 bytes>
0x400743:	nop	
0x400744:	jmp	0x40074a
<Block for 0x400648, 18 bytes>
0x400648:	mov	eax, dword ptr [rbp - 0x98]
0x40064e:	mov	esi, 5
0x400653:	mov	edi, eax
0x400655:	call	0x500030
<Block for 0x40065a, 9 bytes>
0x40065a:	cmp	eax, -1
0x40065d:	je	0x400746
<Block for 0x400746, 3 bytes>
0x400746:	nop	
0x400747:	jmp	0x40074a
<Block for 0x400663, 23 bytes>
0x400663:	mov	eax, dword ptr [rbp - 0x98]
0x400669:	mov	edx, 0
0x40066e:	mov	esi, 0
0x400673:	mov	edi, eax
0x400675:	call	0x500020
<Block for 0x40067a, 19 bytes>
0x40067a:	mov	dword ptr [rbp - 0x9c], eax
0x400680:	cmp	dword ptr [rbp - 0x9c], -1
0x400687:	je	0x400749
<Block for 0x40068d, 52 bytes>
0x40068d:	mov	rax, qword ptr [rbp - 0x90]
0x400694:	mov	edx, 0x63
0x400699:	sub	edx, eax
0x40069b:	mov	eax, edx
0x40069d:	movsxd	rdx, eax
0x4006a0:	lea	rcx, [rbp - 0x70]
0x4006a4:	mov	rax, qword ptr [rbp - 0x90]
0x4006ab:	lea	rsi, [rcx + rax]
0x4006af:	mov	eax, dword ptr [rbp - 0x9c]
0x4006b5:	mov	ecx, 0
0x4006ba:	mov	edi, eax
0x4006bc:	call	0x500038
<Block for 0x400749, 1 bytes>
0x400749:	nop	
<Block for 0x4006c1, 15 bytes>
0x4006c1:	mov	dword ptr [rbp - 0x94], eax
0x4006c7:	cmp	dword ptr [rbp - 0x94], -1
0x4006ce:	je	0x40074a
<Block for 0x4006d0, 9 bytes>
0x4006d0:	cmp	dword ptr [rbp - 0x94], 0
0x4006d7:	je	0x40074a
<Block for 0x4006d9, 30 bytes>
0x4006d9:	mov	eax, dword ptr [rbp - 0x94]
0x4006df:	cdqe	
0x4006e1:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006e6:	lea	rax, [rbp - 0x70]
0x4006ea:	mov	esi, 0xd
0x4006ef:	mov	rdi, rax
0x4006f2:	call	0x500040
<Block for 0x4006f7, 17 bytes>
0x4006f7:	mov	qword ptr [rbp - 0x88], rax
0x4006fe:	cmp	qword ptr [rbp - 0x88], 0
0x400706:	je	0x400712
<Block for 0x400712, 17 bytes>
0x400712:	lea	rax, [rbp - 0x70]
0x400716:	mov	esi, 0xa
0x40071b:	mov	rdi, rax
0x40071e:	call	0x500040
<Block for 0x400708, 27 bytes>
0x400708:	mov	rax, qword ptr [rbp - 0x88]
0x40070f:	mov	byte ptr [rax], 0
0x400712:	lea	rax, [rbp - 0x70]
0x400716:	mov	esi, 0xa
0x40071b:	mov	rdi, rax
0x40071e:	call	0x500040
<Block for 0x400723, 17 bytes>
0x400723:	mov	qword ptr [rbp - 0x88], rax
0x40072a:	cmp	qword ptr [rbp - 0x88], 0
0x400732:	je	0x40074a
<Block for 0x400734, 12 bytes>
0x400734:	mov	rax, qword ptr [rbp - 0x88]
0x40073b:	mov	byte ptr [rax], 0
0x40073e:	jmp	0x40074a
