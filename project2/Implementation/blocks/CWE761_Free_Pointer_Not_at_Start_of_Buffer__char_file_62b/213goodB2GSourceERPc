<Block for 0x4000b3, 31 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0x20
0x4000bf:	mov	qword ptr [rbp - 0x18], rdi
0x4000c3:	mov	rax, qword ptr [rbp - 0x18]
0x4000c7:	mov	rax, qword ptr [rax]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500000
<Block for 0x4000d2, 19 bytes>
0x4000d2:	mov	qword ptr [rbp - 0x10], rax
0x4000d6:	mov	eax, 0x64
0x4000db:	sub	rax, qword ptr [rbp - 0x10]
0x4000df:	cmp	rax, 1
0x4000e3:	jbe	0x400163
<Block for 0x400163, 3 bytes>
0x400163:	nop	
0x400164:	leave	
0x400165:	ret	
<Block for 0x4000e5, 19 bytes>
0x4000e5:	lea	rsi, [rip + 0x7a]
0x4000ec:	lea	rdi, [rip + 0x75]
0x4000f3:	call	0x500008
<Block for 0x4000f8, 11 bytes>
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	cmp	qword ptr [rbp - 8], 0
0x400101:	je	0x400163
<Block for 0x400103, 45 bytes>
0x400103:	mov	rax, qword ptr [rbp - 0x10]
0x400107:	mov	edx, 0x64
0x40010c:	sub	edx, eax
0x40010e:	mov	eax, edx
0x400110:	mov	esi, eax
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	mov	rdx, qword ptr [rax]
0x400119:	mov	rax, qword ptr [rbp - 0x10]
0x40011d:	lea	rcx, [rdx + rax]
0x400121:	mov	rax, qword ptr [rbp - 8]
0x400125:	mov	rdx, rax
0x400128:	mov	rdi, rcx
0x40012b:	call	0x500010
<Block for 0x400130, 10 bytes>
0x400130:	test	rax, rax
0x400133:	sete	al
0x400136:	test	al, al
0x400138:	je	0x400157
<Block for 0x400157, 12 bytes>
0x400157:	mov	rax, qword ptr [rbp - 8]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500020
<Block for 0x40013a, 12 bytes>
0x40013a:	lea	rdi, [rip + 0x35]
0x400141:	call	0x500018
<Block for 0x400146, 29 bytes>
0x400146:	mov	rax, qword ptr [rbp - 0x18]
0x40014a:	mov	rdx, qword ptr [rax]
0x40014d:	mov	rax, qword ptr [rbp - 0x10]
0x400151:	add	rax, rdx
0x400154:	mov	byte ptr [rax], 0
0x400157:	mov	rax, qword ptr [rbp - 8]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500020
