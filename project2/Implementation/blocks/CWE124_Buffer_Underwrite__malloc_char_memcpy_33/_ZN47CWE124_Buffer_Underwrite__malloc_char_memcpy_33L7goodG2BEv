<Block for 0x400169, 66 bytes>
0x400169:	endbr64	
0x40016d:	push	rbp
0x40016e:	mov	rbp, rsp
0x400171:	push	rbx
0x400172:	sub	rsp, 0x98
0x400179:	mov	rax, qword ptr fs:[0x28]
0x400182:	mov	qword ptr [rbp - 0x18], rax
0x400186:	xor	eax, eax
0x400188:	lea	rax, [rbp - 0xa0]
0x40018f:	mov	qword ptr [rbp - 0x98], rax
0x400196:	mov	qword ptr [rbp - 0xa0], 0
0x4001a1:	mov	edi, 0x64
0x4001a6:	call	0x500000
<Block for 0x4001ab, 17 bytes>
0x4001ab:	mov	qword ptr [rbp - 0x90], rax
0x4001b2:	cmp	qword ptr [rbp - 0x90], 0
0x4001ba:	jne	0x4001c6
<Block for 0x4001bc, 10 bytes>
0x4001bc:	mov	edi, 0xffffffff
0x4001c1:	call	0x500008
<Block for 0x4001c6, 25 bytes>
0x4001c6:	mov	rax, qword ptr [rbp - 0x90]
0x4001cd:	mov	edx, 0x63
0x4001d2:	mov	esi, 0x41
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x4001df, 67 bytes>
0x4001df:	mov	rax, qword ptr [rbp - 0x90]
0x4001e6:	add	rax, 0x63
0x4001ea:	mov	byte ptr [rax], 0
0x4001ed:	mov	rax, qword ptr [rbp - 0x90]
0x4001f4:	mov	qword ptr [rbp - 0xa0], rax
0x4001fb:	mov	rax, qword ptr [rbp - 0x98]
0x400202:	mov	rax, qword ptr [rax]
0x400205:	mov	qword ptr [rbp - 0x88], rax
0x40020c:	lea	rax, [rbp - 0x80]
0x400210:	mov	edx, 0x63
0x400215:	mov	esi, 0x43
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500010
<Block for 0x400222, 141 bytes>
0x400222:	mov	byte ptr [rbp - 0x1d], 0
0x400226:	mov	rax, qword ptr [rbp - 0x88]
0x40022d:	mov	rcx, qword ptr [rbp - 0x80]
0x400231:	mov	rbx, qword ptr [rbp - 0x78]
0x400235:	mov	qword ptr [rax], rcx
0x400238:	mov	qword ptr [rax + 8], rbx
0x40023c:	mov	rcx, qword ptr [rbp - 0x70]
0x400240:	mov	rbx, qword ptr [rbp - 0x68]
0x400244:	mov	qword ptr [rax + 0x10], rcx
0x400248:	mov	qword ptr [rax + 0x18], rbx
0x40024c:	mov	rcx, qword ptr [rbp - 0x60]
0x400250:	mov	rbx, qword ptr [rbp - 0x58]
0x400254:	mov	qword ptr [rax + 0x20], rcx
0x400258:	mov	qword ptr [rax + 0x28], rbx
0x40025c:	mov	rcx, qword ptr [rbp - 0x50]
0x400260:	mov	rbx, qword ptr [rbp - 0x48]
0x400264:	mov	qword ptr [rax + 0x30], rcx
0x400268:	mov	qword ptr [rax + 0x38], rbx
0x40026c:	mov	rcx, qword ptr [rbp - 0x40]
0x400270:	mov	rbx, qword ptr [rbp - 0x38]
0x400274:	mov	qword ptr [rax + 0x40], rcx
0x400278:	mov	qword ptr [rax + 0x48], rbx
0x40027c:	mov	rcx, qword ptr [rbp - 0x30]
0x400280:	mov	rbx, qword ptr [rbp - 0x28]
0x400284:	mov	qword ptr [rax + 0x50], rcx
0x400288:	mov	qword ptr [rax + 0x58], rbx
0x40028c:	mov	edx, dword ptr [rbp - 0x20]
0x40028f:	mov	dword ptr [rax + 0x60], edx
0x400292:	mov	rax, qword ptr [rbp - 0x88]
0x400299:	add	rax, 0x63
0x40029d:	mov	byte ptr [rax], 0
0x4002a0:	mov	rax, qword ptr [rbp - 0x88]
0x4002a7:	mov	rdi, rax
0x4002aa:	call	0x500018
<Block for 0x4002af, 16 bytes>
0x4002af:	nop	
0x4002b0:	mov	rax, qword ptr [rbp - 0x18]
0x4002b4:	xor	rax, qword ptr fs:[0x28]
0x4002bd:	je	0x4002c4
<Block for 0x4002c4, 10 bytes>
0x4002c4:	add	rsp, 0x98
0x4002cb:	pop	rbx
0x4002cc:	pop	rbp
0x4002cd:	ret	
<Block for 0x4002bf, 5 bytes>
0x4002bf:	call	0x500020
