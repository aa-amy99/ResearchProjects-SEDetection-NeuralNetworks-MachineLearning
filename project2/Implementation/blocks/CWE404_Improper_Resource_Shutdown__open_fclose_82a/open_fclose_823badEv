<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400014:	mov	edx, 0x180
0x400019:	mov	esi, 0x42
0x40001e:	lea	rdi, [rip + 0x138]
0x400025:	mov	eax, 0
0x40002a:	call	0x500000
<Block for 0x40002f, 13 bytes>
0x40002f:	mov	dword ptr [rbp - 0x1c], eax
0x400032:	mov	edi, 8
0x400037:	call	0x500008
<Block for 0x40003c, 11 bytes>
0x40003c:	mov	rbx, rax
0x40003f:	mov	rdi, rbx
0x400042:	call	0x400130
<Block for 0x400047, 28 bytes>
0x400047:	mov	qword ptr [rbp - 0x18], rbx
0x40004b:	mov	rax, qword ptr [rbp - 0x18]
0x40004f:	mov	rax, qword ptr [rax]
0x400052:	mov	rcx, qword ptr [rax]
0x400055:	mov	edx, dword ptr [rbp - 0x1c]
0x400058:	mov	rax, qword ptr [rbp - 0x18]
0x40005c:	mov	esi, edx
0x40005e:	mov	rdi, rax
0x400061:	call	rcx
<Block for 0x400063, 9 bytes>
0x400063:	mov	rax, qword ptr [rbp - 0x18]
0x400067:	test	rax, rax
0x40006a:	je	0x400079
<Block for 0x400079, 8 bytes>
0x400079:	nop	
0x40007a:	add	rsp, 0x18
0x40007e:	pop	rbx
0x40007f:	pop	rbp
0x400080:	ret	
<Block for 0x40006c, 13 bytes>
0x40006c:	mov	esi, 8
0x400071:	mov	rdi, rax
0x400074:	call	0x500010
