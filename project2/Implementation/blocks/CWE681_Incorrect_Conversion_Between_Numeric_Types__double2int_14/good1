<Block for 0x4000a8, 41 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	sub	rsp, 0x120
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	mov	eax, dword ptr [rip + 0xfff34]
0x4000cc:	cmp	eax, 5
0x4000cf:	je	0x4000e2
<Block for 0x4000e2, 39 bytes>
0x4000e2:	pxor	xmm0, xmm0
0x4000e6:	movsd	qword ptr [rbp - 0x118], xmm0
0x4000ee:	mov	rdx, qword ptr [rip + 0xfff13]
0x4000f5:	lea	rax, [rbp - 0x110]
0x4000fc:	mov	esi, 0x100
0x400101:	mov	rdi, rax
0x400104:	call	0x500010
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rdi, [rip + 0x1c8]
0x4000d8:	call	0x500020
<Block for 0x400109, 5 bytes>
0x400109:	test	rax, rax
0x40010c:	je	0x40012b
<Block for 0x4000dd, 5 bytes>
0x4000dd:	jmp	0x40017c
<Block for 0x40012b, 12 bytes>
0x40012b:	lea	rdi, [rip + 0x15e]
0x400132:	call	0x500020
<Block for 0x40010e, 15 bytes>
0x40010e:	lea	rax, [rbp - 0x110]
0x400115:	mov	rdi, rax
0x400118:	call	0x500018
<Block for 0x40017c, 16 bytes>
0x40017c:	nop	
0x40017d:	mov	rax, qword ptr [rbp - 8]
0x400181:	xor	rax, qword ptr fs:[0x28]
0x40018a:	je	0x400191
<Block for 0x400137, 18 bytes>
0x400137:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40013f:	comisd	xmm0, xmmword ptr [rip + 0x1a9]
0x400147:	ja	0x40015b
<Block for 0x40011d, 14 bytes>
0x40011d:	movq	rax, xmm0
0x400122:	mov	qword ptr [rbp - 0x118], rax
0x400129:	jmp	0x400137
<Block for 0x400191, 2 bytes>
0x400191:	leave	
0x400192:	ret	
<Block for 0x40018c, 5 bytes>
0x40018c:	call	0x500030
<Block for 0x400149, 18 bytes>
0x400149:	movsd	xmm0, qword ptr [rip + 0x1a7]
0x400151:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400159:	jbe	0x400169
<Block for 0x40015b, 12 bytes>
0x40015b:	lea	rdi, [rip + 0x156]
0x400162:	call	0x500020
<Block for 0x400169, 19 bytes>
0x400169:	movsd	xmm0, qword ptr [rbp - 0x118]
0x400171:	cvttsd2si	eax, xmm0
0x400175:	mov	edi, eax
0x400177:	call	0x500028
<Block for 0x400167, 2 bytes>
0x400167:	jmp	0x40017c
