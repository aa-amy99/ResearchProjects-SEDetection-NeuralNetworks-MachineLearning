<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0xfffdc]
0x400024:	test	eax, eax
0x400026:	je	0x40017d
<Block for 0x40017d, 16 bytes>
0x40017d:	nop	
0x40017e:	mov	rax, qword ptr [rbp - 8]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x400192
<Block for 0x40002c, 137 bytes>
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x40009d:	mov	rdx, qword ptr [rip + 0xfff64]
0x4000a4:	lea	rax, [rbp - 0x70]
0x4000a8:	mov	esi, 0x64
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500010
<Block for 0x400192, 2 bytes>
0x400192:	leave	
0x400193:	ret	
<Block for 0x40018d, 5 bytes>
0x40018d:	call	0x500050
<Block for 0x4000b5, 5 bytes>
0x4000b5:	test	rax, rax
0x4000b8:	jne	0x4000ca
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0x3b3]
0x4000c1:	call	0x500018
<Block for 0x4000ca, 11 bytes>
0x4000ca:	lea	rax, [rbp - 0x70]
0x4000ce:	movzx	eax, byte ptr [rax]
0x4000d1:	test	al, al
0x4000d3:	je	0x4000ea
<Block for 0x4000c6, 15 bytes>
0x4000c6:	mov	byte ptr [rbp - 0x70], 0
0x4000ca:	lea	rax, [rbp - 0x70]
0x4000ce:	movzx	eax, byte ptr [rax]
0x4000d1:	test	al, al
0x4000d3:	je	0x4000ea
<Block for 0x4000ea, 22 bytes>
0x4000ea:	lea	rdx, [rbp - 0x100]
0x4000f1:	lea	rax, [rbp - 0x70]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500028
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rax, [rbp - 0x70]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500020
<Block for 0x400100, 5 bytes>
0x400100:	cmp	eax, -1
0x400103:	jne	0x40010f
<Block for 0x4000e1, 31 bytes>
0x4000e1:	sub	rax, 1
0x4000e5:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000ea:	lea	rdx, [rbp - 0x100]
0x4000f1:	lea	rax, [rbp - 0x70]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500028
<Block for 0x400105, 10 bytes>
0x400105:	mov	edi, 1
0x40010a:	call	0x500030
<Block for 0x40010f, 22 bytes>
0x40010f:	lea	rax, [rbp - 0x70]
0x400113:	mov	esi, 2
0x400118:	mov	rdi, rax
0x40011b:	mov	eax, 0
0x400120:	call	0x500038
<Block for 0x400125, 15 bytes>
0x400125:	mov	dword ptr [rbp - 0x104], eax
0x40012b:	cmp	dword ptr [rbp - 0x104], -1
0x400132:	jne	0x40013e
<Block for 0x400134, 10 bytes>
0x400134:	mov	edi, 1
0x400139:	call	0x500030
<Block for 0x40013e, 25 bytes>
0x40013e:	mov	eax, dword ptr [rbp - 0x104]
0x400144:	mov	edx, 0xb
0x400149:	lea	rsi, [rip + 0x333]
0x400150:	mov	edi, eax
0x400152:	call	0x500040
<Block for 0x400157, 6 bytes>
0x400157:	cmp	rax, -1
0x40015b:	jne	0x400167
<Block for 0x40015d, 10 bytes>
0x40015d:	mov	edi, 1
0x400162:	call	0x500030
<Block for 0x400167, 9 bytes>
0x400167:	cmp	dword ptr [rbp - 0x104], -1
0x40016e:	je	0x40017d
<Block for 0x400170, 13 bytes>
0x400170:	mov	eax, dword ptr [rbp - 0x104]
0x400176:	mov	edi, eax
0x400178:	call	0x500048
