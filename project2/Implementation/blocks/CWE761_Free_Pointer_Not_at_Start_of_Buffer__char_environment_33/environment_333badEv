<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 13 bytes>
0x40002d:	mov	qword ptr [rbp - 0x30], rax
0x400031:	mov	rax, qword ptr [rbp - 0x30]
0x400035:	test	rax, rax
0x400038:	jne	0x400044
<Block for 0x40003a, 10 bytes>
0x40003a:	mov	edi, 0xffffffff
0x40003f:	call	0x500008
<Block for 0x400044, 19 bytes>
0x400044:	mov	rax, qword ptr [rbp - 0x30]
0x400048:	mov	byte ptr [rax], 0
0x40004b:	mov	rax, qword ptr [rbp - 0x30]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
<Block for 0x400057, 16 bytes>
0x400057:	mov	qword ptr [rbp - 0x18], rax
0x40005b:	lea	rdi, [rip + 0x1a6]
0x400062:	call	0x500018
<Block for 0x400067, 11 bytes>
0x400067:	mov	qword ptr [rbp - 0x10], rax
0x40006b:	cmp	qword ptr [rbp - 0x10], 0
0x400070:	je	0x400098
<Block for 0x400098, 22 bytes>
0x400098:	mov	rax, qword ptr [rbp - 0x20]
0x40009c:	mov	rax, qword ptr [rax]
0x40009f:	mov	qword ptr [rbp - 0x28], rax
0x4000a3:	mov	rax, qword ptr [rbp - 0x28]
0x4000a7:	movzx	eax, byte ptr [rax]
0x4000aa:	test	al, al
0x4000ac:	je	0x4000ce
<Block for 0x400072, 38 bytes>
0x400072:	mov	eax, 0x63
0x400077:	sub	rax, qword ptr [rbp - 0x18]
0x40007b:	mov	rdx, rax
0x40007e:	mov	rcx, qword ptr [rbp - 0x30]
0x400082:	mov	rax, qword ptr [rbp - 0x18]
0x400086:	add	rcx, rax
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	mov	rsi, rax
0x400090:	mov	rdi, rcx
0x400093:	call	0x500020
<Block for 0x4000ce, 12 bytes>
0x4000ce:	mov	rax, qword ptr [rbp - 0x28]
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500030
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x28]
0x4000b2:	movzx	eax, byte ptr [rax]
0x4000b5:	cmp	al, 0x53
0x4000b7:	jne	0x4000c7
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rdi, [rip + 0x14c]
0x4000c0:	call	0x500028
<Block for 0x4000c7, 7 bytes>
0x4000c7:	add	qword ptr [rbp - 0x28], 1
0x4000cc:	jmp	0x4000a3
<Block for 0x4000ef, 2 bytes>
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500038
<Block for 0x4000c5, 2 bytes>
0x4000c5:	jmp	0x4000ce
<Block for 0x4000a3, 11 bytes>
0x4000a3:	mov	rax, qword ptr [rbp - 0x28]
0x4000a7:	movzx	eax, byte ptr [rax]
0x4000aa:	test	al, al
0x4000ac:	je	0x4000ce
