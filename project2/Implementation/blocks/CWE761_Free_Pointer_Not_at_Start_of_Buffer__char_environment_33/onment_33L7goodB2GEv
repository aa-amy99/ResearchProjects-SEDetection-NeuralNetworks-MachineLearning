<Block for 0x4000f1, 45 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x40
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	lea	rax, [rbp - 0x38]
0x400110:	mov	qword ptr [rbp - 0x28], rax
0x400114:	mov	edi, 0x64
0x400119:	call	0x500000
<Block for 0x40011e, 13 bytes>
0x40011e:	mov	qword ptr [rbp - 0x38], rax
0x400122:	mov	rax, qword ptr [rbp - 0x38]
0x400126:	test	rax, rax
0x400129:	jne	0x400135
<Block for 0x40012b, 10 bytes>
0x40012b:	mov	edi, 0xffffffff
0x400130:	call	0x500008
<Block for 0x400135, 19 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x38]
0x400139:	mov	byte ptr [rax], 0
0x40013c:	mov	rax, qword ptr [rbp - 0x38]
0x400140:	mov	rdi, rax
0x400143:	call	0x500010
<Block for 0x400148, 16 bytes>
0x400148:	mov	qword ptr [rbp - 0x20], rax
0x40014c:	lea	rdi, [rip + 0xb5]
0x400153:	call	0x500018
<Block for 0x400158, 11 bytes>
0x400158:	mov	qword ptr [rbp - 0x18], rax
0x40015c:	cmp	qword ptr [rbp - 0x18], 0
0x400161:	je	0x400189
<Block for 0x400189, 31 bytes>
0x400189:	mov	rax, qword ptr [rbp - 0x28]
0x40018d:	mov	rax, qword ptr [rax]
0x400190:	mov	qword ptr [rbp - 0x10], rax
0x400194:	mov	qword ptr [rbp - 0x30], 0
0x40019c:	mov	rax, qword ptr [rbp - 0x10]
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x500010
<Block for 0x400163, 38 bytes>
0x400163:	mov	eax, 0x63
0x400168:	sub	rax, qword ptr [rbp - 0x20]
0x40016c:	mov	rdx, rax
0x40016f:	mov	rcx, qword ptr [rbp - 0x38]
0x400173:	mov	rax, qword ptr [rbp - 0x20]
0x400177:	add	rcx, rax
0x40017a:	mov	rax, qword ptr [rbp - 0x18]
0x40017e:	mov	rsi, rax
0x400181:	mov	rdi, rcx
0x400184:	call	0x500020
<Block for 0x4001a8, 6 bytes>
0x4001a8:	cmp	qword ptr [rbp - 0x30], rax
0x4001ac:	jae	0x4001d5
<Block for 0x4001ae, 18 bytes>
0x4001ae:	mov	rdx, qword ptr [rbp - 0x10]
0x4001b2:	mov	rax, qword ptr [rbp - 0x30]
0x4001b6:	add	rax, rdx
0x4001b9:	movzx	eax, byte ptr [rax]
0x4001bc:	cmp	al, 0x53
0x4001be:	jne	0x4001ce
<Block for 0x4001d5, 12 bytes>
0x4001d5:	mov	rax, qword ptr [rbp - 0x10]
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x500030
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rdi, [rip + 0x45]
0x4001c7:	call	0x500028
<Block for 0x4001ce, 7 bytes>
0x4001ce:	add	qword ptr [rbp - 0x30], 1
0x4001d3:	jmp	0x40019c
<Block for 0x4001e1, 16 bytes>
0x4001e1:	nop	
0x4001e2:	mov	rax, qword ptr [rbp - 8]
0x4001e6:	xor	rax, qword ptr fs:[0x28]
0x4001ef:	je	0x4001f6
<Block for 0x4001cc, 2 bytes>
0x4001cc:	jmp	0x4001d5
<Block for 0x40019c, 12 bytes>
0x40019c:	mov	rax, qword ptr [rbp - 0x10]
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x500010
<Block for 0x4001f6, 2 bytes>
0x4001f6:	leave	
0x4001f7:	ret	
<Block for 0x4001f1, 5 bytes>
0x4001f1:	call	0x500038
