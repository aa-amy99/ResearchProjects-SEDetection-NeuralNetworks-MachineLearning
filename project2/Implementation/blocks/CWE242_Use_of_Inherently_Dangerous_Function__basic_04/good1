<Block for 0x40007f, 36 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	sub	rsp, 0x20
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	mov	eax, 0
0x40009f:	test	eax, eax
0x4000a1:	je	0x4000b1
<Block for 0x4000b1, 24 bytes>
0x4000b1:	mov	rdx, qword ptr [rip + 0xfff68]
0x4000b8:	lea	rax, [rbp - 0x12]
0x4000bc:	mov	esi, 0xa
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500028
<Block for 0x4000a3, 12 bytes>
0x4000a3:	lea	rdi, [rip + 0x153]
0x4000aa:	call	0x500008
<Block for 0x4000c9, 11 bytes>
0x4000c9:	mov	qword ptr [rbp - 0x20], rax
0x4000cd:	cmp	qword ptr [rbp - 0x20], 0
0x4000d2:	jne	0x4000ea
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x4000fa
<Block for 0x4000d4, 12 bytes>
0x4000d4:	lea	rdi, [rip + 0xe5]
0x4000db:	call	0x500008
<Block for 0x4000ea, 16 bytes>
0x4000ea:	mov	byte ptr [rbp - 9], 0
0x4000ee:	lea	rax, [rbp - 0x12]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500008
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 8]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x40010f
<Block for 0x4000e0, 10 bytes>
0x4000e0:	mov	edi, 1
0x4000e5:	call	0x500010
<Block for 0x40010f, 2 bytes>
0x40010f:	leave	
0x400110:	ret	
<Block for 0x40010a, 5 bytes>
0x40010a:	call	0x500018
