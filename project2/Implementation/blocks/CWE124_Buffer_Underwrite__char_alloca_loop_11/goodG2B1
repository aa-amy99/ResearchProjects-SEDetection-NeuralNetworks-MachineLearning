<Block for 0x400163, 84 bytes>
0x400163:	endbr64	
0x400167:	push	rbp
0x400168:	mov	rbp, rsp
0x40016b:	sub	rsp, 0x90
0x400172:	mov	rax, qword ptr fs:[0x28]
0x40017b:	mov	qword ptr [rbp - 8], rax
0x40017f:	xor	eax, eax
0x400181:	mov	eax, 0x10
0x400186:	sub	rax, 1
0x40018a:	add	rax, 0x6c
0x40018e:	mov	esi, 0x10
0x400193:	mov	edx, 0
0x400198:	div	rsi
0x40019b:	imul	rax, rax, 0x10
0x40019f:	mov	rdx, rax
0x4001a2:	and	rdx, 0xfffffffffffff000
0x4001a9:	mov	rcx, rsp
0x4001ac:	sub	rcx, rdx
0x4001af:	mov	rdx, rcx
0x4001b2:	cmp	rsp, rdx
0x4001b5:	je	0x4001c9
<Block for 0x4001c9, 26 bytes>
0x4001c9:	mov	rdx, rax
0x4001cc:	and	edx, 0xfff
0x4001d2:	sub	rsp, rdx
0x4001d5:	mov	rdx, rax
0x4001d8:	and	edx, 0xfff
0x4001de:	test	rdx, rdx
0x4001e1:	je	0x4001f3
<Block for 0x4001b7, 18 bytes>
0x4001b7:	sub	rsp, 0x1000
0x4001be:	or	qword ptr [rsp + 0xff8], 0
0x4001c7:	jmp	0x4001b2
<Block for 0x4001f3, 41 bytes>
0x4001f3:	mov	rax, rsp
0x4001f6:	add	rax, 0xf
0x4001fa:	shr	rax, 4
0x4001fe:	shl	rax, 4
0x400202:	mov	qword ptr [rbp - 0x78], rax
0x400206:	mov	rax, qword ptr [rbp - 0x78]
0x40020a:	mov	edx, 0x63
0x40020f:	mov	esi, 0x41
0x400214:	mov	rdi, rax
0x400217:	call	0x500000
<Block for 0x4001e3, 57 bytes>
0x4001e3:	and	eax, 0xfff
0x4001e8:	sub	rax, 8
0x4001ec:	add	rax, rsp
0x4001ef:	or	qword ptr [rax], 0
0x4001f3:	mov	rax, rsp
0x4001f6:	add	rax, 0xf
0x4001fa:	shr	rax, 4
0x4001fe:	shl	rax, 4
0x400202:	mov	qword ptr [rbp - 0x78], rax
0x400206:	mov	rax, qword ptr [rbp - 0x78]
0x40020a:	mov	edx, 0x63
0x40020f:	mov	esi, 0x41
0x400214:	mov	rdi, rax
0x400217:	call	0x500000
<Block for 0x4001b2, 5 bytes>
0x4001b2:	cmp	rsp, rdx
0x4001b5:	je	0x4001c9
<Block for 0x40021c, 21 bytes>
0x40021c:	mov	rax, qword ptr [rbp - 0x78]
0x400220:	add	rax, 0x63
0x400224:	mov	byte ptr [rax], 0
0x400227:	mov	eax, 0
0x40022c:	call	0x500020
<Block for 0x400231, 4 bytes>
0x400231:	test	eax, eax
0x400233:	je	0x400243
<Block for 0x400243, 33 bytes>
0x400243:	mov	rax, qword ptr [rbp - 0x78]
0x400247:	mov	qword ptr [rbp - 0x88], rax
0x40024e:	lea	rax, [rbp - 0x70]
0x400252:	mov	edx, 0x63
0x400257:	mov	esi, 0x43
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500000
<Block for 0x400235, 12 bytes>
0x400235:	lea	rdi, [rip + 0x212]
0x40023c:	call	0x500010
<Block for 0x400264, 14 bytes>
0x400264:	mov	byte ptr [rbp - 0xd], 0
0x400268:	mov	qword ptr [rbp - 0x80], 0
0x400270:	jmp	0x400295
<Block for 0x400241, 2 bytes>
0x400241:	jmp	0x40024e
<Block for 0x400295, 7 bytes>
0x400295:	cmp	qword ptr [rbp - 0x80], 0x63
0x40029a:	jbe	0x400272
<Block for 0x40024e, 22 bytes>
0x40024e:	lea	rax, [rbp - 0x70]
0x400252:	mov	edx, 0x63
0x400257:	mov	esi, 0x43
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500000
<Block for 0x400272, 42 bytes>
0x400272:	mov	rdx, qword ptr [rbp - 0x88]
0x400279:	mov	rax, qword ptr [rbp - 0x80]
0x40027d:	add	rdx, rax
0x400280:	lea	rcx, [rbp - 0x70]
0x400284:	mov	rax, qword ptr [rbp - 0x80]
0x400288:	add	rax, rcx
0x40028b:	movzx	eax, byte ptr [rax]
0x40028e:	mov	byte ptr [rdx], al
0x400290:	add	qword ptr [rbp - 0x80], 1
0x400295:	cmp	qword ptr [rbp - 0x80], 0x63
0x40029a:	jbe	0x400272
<Block for 0x40029c, 29 bytes>
0x40029c:	mov	rax, qword ptr [rbp - 0x88]
0x4002a3:	add	rax, 0x63
0x4002a7:	mov	byte ptr [rax], 0
0x4002aa:	mov	rax, qword ptr [rbp - 0x88]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500010
<Block for 0x4002b9, 16 bytes>
0x4002b9:	nop	
0x4002ba:	mov	rax, qword ptr [rbp - 8]
0x4002be:	xor	rax, qword ptr fs:[0x28]
0x4002c7:	je	0x4002ce
<Block for 0x4002ce, 2 bytes>
0x4002ce:	leave	
0x4002cf:	ret	
<Block for 0x4002c9, 5 bytes>
0x4002c9:	call	0x500018
