<Block for 0x4002d0, 84 bytes>
0x4002d0:	endbr64	
0x4002d4:	push	rbp
0x4002d5:	mov	rbp, rsp
0x4002d8:	sub	rsp, 0x90
0x4002df:	mov	rax, qword ptr fs:[0x28]
0x4002e8:	mov	qword ptr [rbp - 8], rax
0x4002ec:	xor	eax, eax
0x4002ee:	mov	eax, 0x10
0x4002f3:	sub	rax, 1
0x4002f7:	add	rax, 0x6c
0x4002fb:	mov	esi, 0x10
0x400300:	mov	edx, 0
0x400305:	div	rsi
0x400308:	imul	rax, rax, 0x10
0x40030c:	mov	rdx, rax
0x40030f:	and	rdx, 0xfffffffffffff000
0x400316:	mov	rcx, rsp
0x400319:	sub	rcx, rdx
0x40031c:	mov	rdx, rcx
0x40031f:	cmp	rsp, rdx
0x400322:	je	0x400336
<Block for 0x400336, 26 bytes>
0x400336:	mov	rdx, rax
0x400339:	and	edx, 0xfff
0x40033f:	sub	rsp, rdx
0x400342:	mov	rdx, rax
0x400345:	and	edx, 0xfff
0x40034b:	test	rdx, rdx
0x40034e:	je	0x400360
<Block for 0x400324, 18 bytes>
0x400324:	sub	rsp, 0x1000
0x40032b:	or	qword ptr [rsp + 0xff8], 0
0x400334:	jmp	0x40031f
<Block for 0x400360, 41 bytes>
0x400360:	mov	rax, rsp
0x400363:	add	rax, 0xf
0x400367:	shr	rax, 4
0x40036b:	shl	rax, 4
0x40036f:	mov	qword ptr [rbp - 0x78], rax
0x400373:	mov	rax, qword ptr [rbp - 0x78]
0x400377:	mov	edx, 0x63
0x40037c:	mov	esi, 0x41
0x400381:	mov	rdi, rax
0x400384:	call	0x500000
<Block for 0x400350, 57 bytes>
0x400350:	and	eax, 0xfff
0x400355:	sub	rax, 8
0x400359:	add	rax, rsp
0x40035c:	or	qword ptr [rax], 0
0x400360:	mov	rax, rsp
0x400363:	add	rax, 0xf
0x400367:	shr	rax, 4
0x40036b:	shl	rax, 4
0x40036f:	mov	qword ptr [rbp - 0x78], rax
0x400373:	mov	rax, qword ptr [rbp - 0x78]
0x400377:	mov	edx, 0x63
0x40037c:	mov	esi, 0x41
0x400381:	mov	rdi, rax
0x400384:	call	0x500000
<Block for 0x40031f, 5 bytes>
0x40031f:	cmp	rsp, rdx
0x400322:	je	0x400336
<Block for 0x400389, 21 bytes>
0x400389:	mov	rax, qword ptr [rbp - 0x78]
0x40038d:	add	rax, 0x63
0x400391:	mov	byte ptr [rax], 0
0x400394:	mov	eax, 0
0x400399:	call	0x500008
<Block for 0x40039e, 4 bytes>
0x40039e:	test	eax, eax
0x4003a0:	je	0x4003ad
<Block for 0x4003ad, 22 bytes>
0x4003ad:	lea	rax, [rbp - 0x70]
0x4003b1:	mov	edx, 0x63
0x4003b6:	mov	esi, 0x43
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x500000
<Block for 0x4003a2, 33 bytes>
0x4003a2:	mov	rax, qword ptr [rbp - 0x78]
0x4003a6:	mov	qword ptr [rbp - 0x88], rax
0x4003ad:	lea	rax, [rbp - 0x70]
0x4003b1:	mov	edx, 0x63
0x4003b6:	mov	esi, 0x43
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x500000
<Block for 0x4003c3, 14 bytes>
0x4003c3:	mov	byte ptr [rbp - 0xd], 0
0x4003c7:	mov	qword ptr [rbp - 0x80], 0
0x4003cf:	jmp	0x4003f4
<Block for 0x4003f4, 7 bytes>
0x4003f4:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003f9:	jbe	0x4003d1
<Block for 0x4003d1, 42 bytes>
0x4003d1:	mov	rdx, qword ptr [rbp - 0x88]
0x4003d8:	mov	rax, qword ptr [rbp - 0x80]
0x4003dc:	add	rdx, rax
0x4003df:	lea	rcx, [rbp - 0x70]
0x4003e3:	mov	rax, qword ptr [rbp - 0x80]
0x4003e7:	add	rax, rcx
0x4003ea:	movzx	eax, byte ptr [rax]
0x4003ed:	mov	byte ptr [rdx], al
0x4003ef:	add	qword ptr [rbp - 0x80], 1
0x4003f4:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003f9:	jbe	0x4003d1
<Block for 0x4003fb, 29 bytes>
0x4003fb:	mov	rax, qword ptr [rbp - 0x88]
0x400402:	add	rax, 0x63
0x400406:	mov	byte ptr [rax], 0
0x400409:	mov	rax, qword ptr [rbp - 0x88]
0x400410:	mov	rdi, rax
0x400413:	call	0x500010
<Block for 0x400418, 16 bytes>
0x400418:	nop	
0x400419:	mov	rax, qword ptr [rbp - 8]
0x40041d:	xor	rax, qword ptr fs:[0x28]
0x400426:	je	0x40042d
<Block for 0x40042d, 2 bytes>
0x40042d:	leave	
0x40042e:	ret	
<Block for 0x400428, 5 bytes>
0x400428:	call	0x500018
