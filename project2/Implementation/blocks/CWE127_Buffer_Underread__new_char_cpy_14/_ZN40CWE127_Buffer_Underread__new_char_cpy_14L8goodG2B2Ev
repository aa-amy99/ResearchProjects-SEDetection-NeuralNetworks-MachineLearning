<Block for 0x4001be, 52 bytes>
0x4001be:	endbr64	
0x4001c2:	push	rbp
0x4001c3:	mov	rbp, rsp
0x4001c6:	sub	rsp, 0xe0
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 8], rax
0x4001da:	xor	eax, eax
0x4001dc:	mov	qword ptr [rbp - 0xe0], 0
0x4001e7:	mov	eax, dword ptr [rip + 0xffe13]
0x4001ed:	cmp	eax, 5
0x4001f0:	jne	0x400238
<Block for 0x4001f2, 10 bytes>
0x4001f2:	mov	edi, 0x64
0x4001f7:	call	0x500008
<Block for 0x400238, 25 bytes>
0x400238:	lea	rax, [rbp - 0xd0]
0x40023f:	mov	edx, 0xc7
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500010
<Block for 0x4001fc, 32 bytes>
0x4001fc:	mov	qword ptr [rbp - 0xd8], rax
0x400203:	mov	rax, qword ptr [rbp - 0xd8]
0x40020a:	mov	edx, 0x63
0x40020f:	mov	esi, 0x41
0x400214:	mov	rdi, rax
0x400217:	call	0x500010
<Block for 0x400251, 29 bytes>
0x400251:	mov	byte ptr [rbp - 9], 0
0x400255:	mov	rdx, qword ptr [rbp - 0xe0]
0x40025c:	lea	rax, [rbp - 0xd0]
0x400263:	mov	rsi, rdx
0x400266:	mov	rdi, rax
0x400269:	call	0x500018
<Block for 0x40021c, 53 bytes>
0x40021c:	mov	rax, qword ptr [rbp - 0xd8]
0x400223:	add	rax, 0x63
0x400227:	mov	byte ptr [rax], 0
0x40022a:	mov	rax, qword ptr [rbp - 0xd8]
0x400231:	mov	qword ptr [rbp - 0xe0], rax
0x400238:	lea	rax, [rbp - 0xd0]
0x40023f:	mov	edx, 0xc7
0x400244:	mov	esi, 0x43
0x400249:	mov	rdi, rax
0x40024c:	call	0x500010
<Block for 0x40026e, 15 bytes>
0x40026e:	lea	rax, [rbp - 0xd0]
0x400275:	mov	rdi, rax
0x400278:	call	0x500020
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500028
