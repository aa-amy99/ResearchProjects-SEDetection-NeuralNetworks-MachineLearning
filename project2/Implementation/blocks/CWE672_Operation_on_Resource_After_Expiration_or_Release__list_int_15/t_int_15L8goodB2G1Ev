<Block for 0x400179, 40 bytes>
0x400179:	endbr64	
0x40017d:	push	rbp
0x40017e:	mov	rbp, rsp
0x400181:	push	rbx
0x400182:	sub	rsp, 0x38
0x400186:	mov	rax, qword ptr fs:[0x28]
0x40018f:	mov	qword ptr [rbp - 0x18], rax
0x400193:	xor	eax, eax
0x400195:	lea	rax, [rbp - 0x30]
0x400199:	mov	rdi, rax
0x40019c:	call	0x40085a
<Block for 0x4001a1, 26 bytes>
0x4001a1:	mov	dword ptr [rbp - 0x38], 0x64
0x4001a8:	lea	rdx, [rbp - 0x38]
0x4001ac:	lea	rax, [rbp - 0x30]
0x4001b0:	mov	rsi, rdx
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x400960
<Block for 0x4001bb, 26 bytes>
0x4001bb:	mov	dword ptr [rbp - 0x38], 0
0x4001c2:	lea	rdx, [rbp - 0x38]
0x4001c6:	lea	rax, [rbp - 0x30]
0x4001ca:	mov	rsi, rdx
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x400960
<Block for 0x4001d5, 13 bytes>
0x4001d5:	nop	
0x4001d6:	lea	rax, [rbp - 0x40]
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x4009ae
<Block for 0x4001e2, 19 bytes>
0x4001e2:	lea	rsi, [rip + 0x5c5]
0x4001e9:	lea	rdi, [rip + 0xffe10]
0x4001f0:	call	0x500008
<Block for 0x4001f5, 12 bytes>
0x4001f5:	lea	rax, [rbp - 0x30]
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x4009c8
<Block for 0x400201, 16 bytes>
0x400201:	mov	qword ptr [rbp - 0x40], rax
0x400205:	lea	rax, [rbp - 0x30]
0x400209:	mov	rdi, rax
0x40020c:	call	0x400a18
<Block for 0x400211, 23 bytes>
0x400211:	mov	qword ptr [rbp - 0x38], rax
0x400215:	lea	rdx, [rbp - 0x38]
0x400219:	lea	rax, [rbp - 0x40]
0x40021d:	mov	rsi, rdx
0x400220:	mov	rdi, rax
0x400223:	call	0x400a64
<Block for 0x400228, 4 bytes>
0x400228:	test	al, al
0x40022a:	je	0x40026d
<Block for 0x40026d, 22 bytes>
0x40026d:	mov	rax, qword ptr [rip + 0xffdac]
0x400274:	mov	rsi, rax
0x400277:	lea	rdi, [rip + 0xffd82]
0x40027e:	call	0x500028
<Block for 0x40022c, 19 bytes>
0x40022c:	lea	rsi, [rip + 0x58f]
0x400233:	lea	rdi, [rip + 0xffdc6]
0x40023a:	call	0x500008
<Block for 0x400283, 13 bytes>
0x400283:	nop	
0x400284:	lea	rax, [rbp - 0x30]
0x400288:	mov	rdi, rax
0x40028b:	call	0x40087a
<Block for 0x40023f, 15 bytes>
0x40023f:	mov	rbx, rax
0x400242:	lea	rax, [rbp - 0x40]
0x400246:	mov	rdi, rax
0x400249:	call	0x400ae2
<Block for 0x400290, 16 bytes>
0x400290:	nop	
0x400291:	mov	rax, qword ptr [rbp - 0x18]
0x400295:	xor	rax, qword ptr fs:[0x28]
0x40029e:	je	0x4002c5
<Block for 0x40024e, 12 bytes>
0x40024e:	mov	eax, dword ptr [rax]
0x400250:	mov	esi, eax
0x400252:	mov	rdi, rbx
0x400255:	call	0x500010
<Block for 0x4002c5, 7 bytes>
0x4002c5:	add	rsp, 0x38
0x4002c9:	pop	rbx
0x4002ca:	pop	rbp
0x4002cb:	ret	
<Block for 0x4002a0, 2 bytes>
0x4002a0:	jmp	0x4002c0
<Block for 0x40025a, 17 bytes>
0x40025a:	lea	rax, [rbp - 0x40]
0x40025e:	mov	esi, 0
0x400263:	mov	rdi, rax
0x400266:	call	0x400a8a
<Block for 0x4002c0, 5 bytes>
0x4002c0:	call	0x500038
<Block for 0x40026b, 2 bytes>
0x40026b:	jmp	0x400205
<Block for 0x400205, 12 bytes>
0x400205:	lea	rax, [rbp - 0x30]
0x400209:	mov	rdi, rax
0x40020c:	call	0x400a18
