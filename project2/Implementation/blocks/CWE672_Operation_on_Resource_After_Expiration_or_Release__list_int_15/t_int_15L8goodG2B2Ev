<Block for 0x400598, 40 bytes>
0x400598:	endbr64	
0x40059c:	push	rbp
0x40059d:	mov	rbp, rsp
0x4005a0:	push	rbx
0x4005a1:	sub	rsp, 0x38
0x4005a5:	mov	rax, qword ptr fs:[0x28]
0x4005ae:	mov	qword ptr [rbp - 0x18], rax
0x4005b2:	xor	eax, eax
0x4005b4:	lea	rax, [rbp - 0x30]
0x4005b8:	mov	rdi, rax
0x4005bb:	call	0x40085a
<Block for 0x4005c0, 26 bytes>
0x4005c0:	mov	dword ptr [rbp - 0x38], 0x64
0x4005c7:	lea	rdx, [rbp - 0x38]
0x4005cb:	lea	rax, [rbp - 0x30]
0x4005cf:	mov	rsi, rdx
0x4005d2:	mov	rdi, rax
0x4005d5:	call	0x400960
<Block for 0x4005da, 26 bytes>
0x4005da:	mov	dword ptr [rbp - 0x38], 0xc8
0x4005e1:	lea	rdx, [rbp - 0x38]
0x4005e5:	lea	rax, [rbp - 0x30]
0x4005e9:	mov	rsi, rdx
0x4005ec:	mov	rdi, rax
0x4005ef:	call	0x400960
<Block for 0x4005f4, 13 bytes>
0x4005f4:	nop	
0x4005f5:	lea	rax, [rbp - 0x40]
0x4005f9:	mov	rdi, rax
0x4005fc:	call	0x4009ae
<Block for 0x400601, 19 bytes>
0x400601:	lea	rsi, [rip + 0x1a6]
0x400608:	lea	rdi, [rip + 0xff9f1]
0x40060f:	call	0x500008
<Block for 0x400614, 12 bytes>
0x400614:	lea	rax, [rbp - 0x30]
0x400618:	mov	rdi, rax
0x40061b:	call	0x4009c8
<Block for 0x400620, 16 bytes>
0x400620:	mov	qword ptr [rbp - 0x40], rax
0x400624:	lea	rax, [rbp - 0x30]
0x400628:	mov	rdi, rax
0x40062b:	call	0x400a18
<Block for 0x400630, 23 bytes>
0x400630:	mov	qword ptr [rbp - 0x38], rax
0x400634:	lea	rdx, [rbp - 0x38]
0x400638:	lea	rax, [rbp - 0x40]
0x40063c:	mov	rsi, rdx
0x40063f:	mov	rdi, rax
0x400642:	call	0x400a64
<Block for 0x400647, 4 bytes>
0x400647:	test	al, al
0x400649:	je	0x4006b2
<Block for 0x4006b2, 22 bytes>
0x4006b2:	mov	rax, qword ptr [rip + 0xff967]
0x4006b9:	mov	rsi, rax
0x4006bc:	lea	rdi, [rip + 0xff93d]
0x4006c3:	call	0x500028
<Block for 0x40064b, 12 bytes>
0x40064b:	lea	rax, [rbp - 0x40]
0x40064f:	mov	rdi, rax
0x400652:	call	0x400ae2
<Block for 0x4006c8, 13 bytes>
0x4006c8:	nop	
0x4006c9:	lea	rax, [rbp - 0x30]
0x4006cd:	mov	rdi, rax
0x4006d0:	call	0x40087a
<Block for 0x400657, 11 bytes>
0x400657:	mov	eax, dword ptr [rax]
0x400659:	test	eax, eax
0x40065b:	sete	al
0x40065e:	test	al, al
0x400660:	je	0x40066e
<Block for 0x4006d5, 16 bytes>
0x4006d5:	nop	
0x4006d6:	mov	rax, qword ptr [rbp - 0x18]
0x4006da:	xor	rax, qword ptr fs:[0x28]
0x4006e3:	je	0x40070a
<Block for 0x40066e, 19 bytes>
0x40066e:	lea	rsi, [rip + 0x14d]
0x400675:	lea	rdi, [rip + 0xff984]
0x40067c:	call	0x500008
<Block for 0x400662, 12 bytes>
0x400662:	lea	rax, [rbp - 0x30]
0x400666:	mov	rdi, rax
0x400669:	call	0x400b04
<Block for 0x40070a, 7 bytes>
0x40070a:	add	rsp, 0x38
0x40070e:	pop	rbx
0x40070f:	pop	rbp
0x400710:	ret	
<Block for 0x4006e5, 2 bytes>
0x4006e5:	jmp	0x400705
<Block for 0x400681, 15 bytes>
0x400681:	mov	rbx, rax
0x400684:	lea	rax, [rbp - 0x40]
0x400688:	mov	rdi, rax
0x40068b:	call	0x400ae2
<Block for 0x400705, 5 bytes>
0x400705:	call	0x500038
<Block for 0x400690, 12 bytes>
0x400690:	mov	eax, dword ptr [rax]
0x400692:	mov	esi, eax
0x400694:	mov	rdi, rbx
0x400697:	call	0x500010
<Block for 0x40069c, 17 bytes>
0x40069c:	lea	rax, [rbp - 0x40]
0x4006a0:	mov	esi, 0
0x4006a5:	mov	rdi, rax
0x4006a8:	call	0x400a8a
<Block for 0x4006ad, 5 bytes>
0x4006ad:	jmp	0x400624
<Block for 0x400624, 12 bytes>
0x400624:	lea	rax, [rbp - 0x30]
0x400628:	mov	rdi, rax
0x40062b:	call	0x400a18
