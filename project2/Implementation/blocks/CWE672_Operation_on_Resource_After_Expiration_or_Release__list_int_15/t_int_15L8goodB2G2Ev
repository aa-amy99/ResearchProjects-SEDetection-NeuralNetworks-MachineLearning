<Block for 0x4002cc, 40 bytes>
0x4002cc:	endbr64	
0x4002d0:	push	rbp
0x4002d1:	mov	rbp, rsp
0x4002d4:	push	rbx
0x4002d5:	sub	rsp, 0x38
0x4002d9:	mov	rax, qword ptr fs:[0x28]
0x4002e2:	mov	qword ptr [rbp - 0x18], rax
0x4002e6:	xor	eax, eax
0x4002e8:	lea	rax, [rbp - 0x30]
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x40085a
<Block for 0x4002f4, 26 bytes>
0x4002f4:	mov	dword ptr [rbp - 0x38], 0x64
0x4002fb:	lea	rdx, [rbp - 0x38]
0x4002ff:	lea	rax, [rbp - 0x30]
0x400303:	mov	rsi, rdx
0x400306:	mov	rdi, rax
0x400309:	call	0x400960
<Block for 0x40030e, 26 bytes>
0x40030e:	mov	dword ptr [rbp - 0x38], 0
0x400315:	lea	rdx, [rbp - 0x38]
0x400319:	lea	rax, [rbp - 0x30]
0x40031d:	mov	rsi, rdx
0x400320:	mov	rdi, rax
0x400323:	call	0x400960
<Block for 0x400328, 13 bytes>
0x400328:	nop	
0x400329:	lea	rax, [rbp - 0x40]
0x40032d:	mov	rdi, rax
0x400330:	call	0x4009ae
<Block for 0x400335, 19 bytes>
0x400335:	lea	rsi, [rip + 0x472]
0x40033c:	lea	rdi, [rip + 0xffcbd]
0x400343:	call	0x500008
<Block for 0x400348, 12 bytes>
0x400348:	lea	rax, [rbp - 0x30]
0x40034c:	mov	rdi, rax
0x40034f:	call	0x4009c8
<Block for 0x400354, 16 bytes>
0x400354:	mov	qword ptr [rbp - 0x40], rax
0x400358:	lea	rax, [rbp - 0x30]
0x40035c:	mov	rdi, rax
0x40035f:	call	0x400a18
<Block for 0x400364, 23 bytes>
0x400364:	mov	qword ptr [rbp - 0x38], rax
0x400368:	lea	rdx, [rbp - 0x38]
0x40036c:	lea	rax, [rbp - 0x40]
0x400370:	mov	rsi, rdx
0x400373:	mov	rdi, rax
0x400376:	call	0x400a64
<Block for 0x40037b, 4 bytes>
0x40037b:	test	al, al
0x40037d:	je	0x4003c0
<Block for 0x4003c0, 22 bytes>
0x4003c0:	mov	rax, qword ptr [rip + 0xffc59]
0x4003c7:	mov	rsi, rax
0x4003ca:	lea	rdi, [rip + 0xffc2f]
0x4003d1:	call	0x500028
<Block for 0x40037f, 19 bytes>
0x40037f:	lea	rsi, [rip + 0x43c]
0x400386:	lea	rdi, [rip + 0xffc73]
0x40038d:	call	0x500008
<Block for 0x4003d6, 13 bytes>
0x4003d6:	nop	
0x4003d7:	lea	rax, [rbp - 0x30]
0x4003db:	mov	rdi, rax
0x4003de:	call	0x40087a
<Block for 0x400392, 15 bytes>
0x400392:	mov	rbx, rax
0x400395:	lea	rax, [rbp - 0x40]
0x400399:	mov	rdi, rax
0x40039c:	call	0x400ae2
<Block for 0x4003e3, 16 bytes>
0x4003e3:	nop	
0x4003e4:	mov	rax, qword ptr [rbp - 0x18]
0x4003e8:	xor	rax, qword ptr fs:[0x28]
0x4003f1:	je	0x400418
<Block for 0x4003a1, 12 bytes>
0x4003a1:	mov	eax, dword ptr [rax]
0x4003a3:	mov	esi, eax
0x4003a5:	mov	rdi, rbx
0x4003a8:	call	0x500010
<Block for 0x400418, 7 bytes>
0x400418:	add	rsp, 0x38
0x40041c:	pop	rbx
0x40041d:	pop	rbp
0x40041e:	ret	
<Block for 0x4003f3, 2 bytes>
0x4003f3:	jmp	0x400413
<Block for 0x4003ad, 17 bytes>
0x4003ad:	lea	rax, [rbp - 0x40]
0x4003b1:	mov	esi, 0
0x4003b6:	mov	rdi, rax
0x4003b9:	call	0x400a8a
<Block for 0x400413, 5 bytes>
0x400413:	call	0x500038
<Block for 0x4003be, 2 bytes>
0x4003be:	jmp	0x400358
<Block for 0x400358, 12 bytes>
0x400358:	lea	rax, [rbp - 0x30]
0x40035c:	mov	rdi, rax
0x40035f:	call	0x400a18
