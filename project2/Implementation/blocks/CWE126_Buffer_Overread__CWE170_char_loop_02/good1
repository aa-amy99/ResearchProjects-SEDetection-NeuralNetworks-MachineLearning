<Block for 0x40009c, 55 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	sub	rsp, 0x120
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	lea	rax, [rbp - 0xa0]
0x4000c1:	mov	edx, 0x95
0x4000c6:	mov	esi, 0x41
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500000
<Block for 0x4000d3, 16 bytes>
0x4000d3:	mov	byte ptr [rbp - 0xb], 0
0x4000d7:	mov	dword ptr [rbp - 0x114], 0
0x4000e1:	jmp	0x400109
<Block for 0x400109, 9 bytes>
0x400109:	cmp	dword ptr [rbp - 0x114], 0x62
0x400110:	jle	0x4000e3
<Block for 0x4000e3, 47 bytes>
0x4000e3:	mov	eax, dword ptr [rbp - 0x114]
0x4000e9:	cdqe	
0x4000eb:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x4000f3:	mov	eax, dword ptr [rbp - 0x114]
0x4000f9:	cdqe	
0x4000fb:	mov	byte ptr [rbp + rax - 0x110], dl
0x400102:	add	dword ptr [rbp - 0x114], 1
0x400109:	cmp	dword ptr [rbp - 0x114], 0x62
0x400110:	jle	0x4000e3
<Block for 0x400112, 22 bytes>
0x400112:	mov	byte ptr [rbp - 0xad], 0
0x400119:	lea	rax, [rbp - 0x110]
0x400120:	mov	rdi, rax
0x400123:	call	0x500008
<Block for 0x400128, 16 bytes>
0x400128:	nop	
0x400129:	mov	rax, qword ptr [rbp - 8]
0x40012d:	xor	rax, qword ptr fs:[0x28]
0x400136:	je	0x40013d
<Block for 0x40013d, 2 bytes>
0x40013d:	leave	
0x40013e:	ret	
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500010
