<Block for 0x40013f, 55 bytes>
0x40013f:	endbr64	
0x400143:	push	rbp
0x400144:	mov	rbp, rsp
0x400147:	sub	rsp, 0x120
0x40014e:	mov	rax, qword ptr fs:[0x28]
0x400157:	mov	qword ptr [rbp - 8], rax
0x40015b:	xor	eax, eax
0x40015d:	lea	rax, [rbp - 0xa0]
0x400164:	mov	edx, 0x95
0x400169:	mov	esi, 0x41
0x40016e:	mov	rdi, rax
0x400171:	call	0x500000
<Block for 0x400176, 16 bytes>
0x400176:	mov	byte ptr [rbp - 0xb], 0
0x40017a:	mov	dword ptr [rbp - 0x114], 0
0x400184:	jmp	0x4001ac
<Block for 0x4001ac, 9 bytes>
0x4001ac:	cmp	dword ptr [rbp - 0x114], 0x62
0x4001b3:	jle	0x400186
<Block for 0x400186, 47 bytes>
0x400186:	mov	eax, dword ptr [rbp - 0x114]
0x40018c:	cdqe	
0x40018e:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400196:	mov	eax, dword ptr [rbp - 0x114]
0x40019c:	cdqe	
0x40019e:	mov	byte ptr [rbp + rax - 0x110], dl
0x4001a5:	add	dword ptr [rbp - 0x114], 1
0x4001ac:	cmp	dword ptr [rbp - 0x114], 0x62
0x4001b3:	jle	0x400186
<Block for 0x4001b5, 22 bytes>
0x4001b5:	mov	byte ptr [rbp - 0xad], 0
0x4001bc:	lea	rax, [rbp - 0x110]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500008
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500010
