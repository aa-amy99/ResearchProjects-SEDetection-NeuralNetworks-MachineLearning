<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xa0]
0x400025:	mov	edx, 0x95
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 16 bytes>
0x400037:	mov	byte ptr [rbp - 0xb], 0
0x40003b:	mov	dword ptr [rbp - 0x114], 0
0x400045:	jmp	0x40006d
<Block for 0x40006d, 9 bytes>
0x40006d:	cmp	dword ptr [rbp - 0x114], 0x62
0x400074:	jle	0x400047
<Block for 0x400047, 47 bytes>
0x400047:	mov	eax, dword ptr [rbp - 0x114]
0x40004d:	cdqe	
0x40004f:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400057:	mov	eax, dword ptr [rbp - 0x114]
0x40005d:	cdqe	
0x40005f:	mov	byte ptr [rbp + rax - 0x110], dl
0x400066:	add	dword ptr [rbp - 0x114], 1
0x40006d:	cmp	dword ptr [rbp - 0x114], 0x62
0x400074:	jle	0x400047
<Block for 0x400076, 15 bytes>
0x400076:	lea	rax, [rbp - 0x110]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x400085, 16 bytes>
0x400085:	nop	
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	xor	rax, qword ptr fs:[0x28]
0x400093:	je	0x40009a
<Block for 0x40009a, 2 bytes>
0x40009a:	leave	
0x40009b:	ret	
<Block for 0x400095, 5 bytes>
0x400095:	call	0x500010
