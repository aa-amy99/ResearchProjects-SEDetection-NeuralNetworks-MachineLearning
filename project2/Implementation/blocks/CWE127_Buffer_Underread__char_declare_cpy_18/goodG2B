<Block for 0x4000b1, 55 bytes>
0x4000b1:	endbr64	
0x4000b5:	push	rbp
0x4000b6:	mov	rbp, rsp
0x4000b9:	sub	rsp, 0x150
0x4000c0:	mov	rax, qword ptr fs:[0x28]
0x4000c9:	mov	qword ptr [rbp - 8], rax
0x4000cd:	xor	eax, eax
0x4000cf:	lea	rax, [rbp - 0x140]
0x4000d6:	mov	edx, 0x63
0x4000db:	mov	esi, 0x41
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500000
<Block for 0x4000e8, 51 bytes>
0x4000e8:	mov	byte ptr [rbp - 0xdd], 0
0x4000ef:	nop	
0x4000f0:	endbr64	
0x4000f4:	lea	rax, [rbp - 0x140]
0x4000fb:	mov	qword ptr [rbp - 0x148], rax
0x400102:	lea	rax, [rbp - 0xd0]
0x400109:	mov	edx, 0xc7
0x40010e:	mov	esi, 0x43
0x400113:	mov	rdi, rax
0x400116:	call	0x500000
<Block for 0x40011b, 29 bytes>
0x40011b:	mov	byte ptr [rbp - 9], 0
0x40011f:	mov	rdx, qword ptr [rbp - 0x148]
0x400126:	lea	rax, [rbp - 0xd0]
0x40012d:	mov	rsi, rdx
0x400130:	mov	rdi, rax
0x400133:	call	0x500008
<Block for 0x400138, 15 bytes>
0x400138:	lea	rax, [rbp - 0xd0]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x400147, 16 bytes>
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 8]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x40015c
<Block for 0x40015c, 2 bytes>
0x40015c:	leave	
0x40015d:	ret	
<Block for 0x400157, 5 bytes>
0x400157:	call	0x500018
