<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 0x10], 0
0x400013:	cmp	dword ptr [rbp - 0x10], 0
0x400017:	jg	0x400027
<Block for 0x400019, 14 bytes>
0x400019:	mov	qword ptr [rbp - 8], 0
0x400021:	add	dword ptr [rbp - 0x10], 1
0x400025:	jmp	0x400013
<Block for 0x400027, 13 bytes>
0x400027:	mov	dword ptr [rbp - 0xc], 0
0x40002e:	cmp	dword ptr [rbp - 0xc], 0
0x400032:	jg	0x40005d
<Block for 0x400013, 6 bytes>
0x400013:	cmp	dword ptr [rbp - 0x10], 0
0x400017:	jg	0x400027
<Block for 0x400034, 13 bytes>
0x400034:	mov	rax, qword ptr [rbp - 8]
0x400038:	mov	eax, dword ptr [rax]
0x40003a:	mov	edi, eax
0x40003c:	call	0x500000
<Block for 0x40005d, 3 bytes>
0x40005d:	nop	
0x40005e:	leave	
0x40005f:	ret	
<Block for 0x400041, 9 bytes>
0x400041:	mov	rax, qword ptr [rbp - 8]
0x400045:	test	rax, rax
0x400048:	je	0x400057
<Block for 0x400057, 6 bytes>
0x400057:	add	dword ptr [rbp - 0xc], 1
0x40005b:	jmp	0x40002e
<Block for 0x40004a, 13 bytes>
0x40004a:	mov	esi, 8
0x40004f:	mov	rdi, rax
0x400052:	call	0x500008
<Block for 0x40002e, 6 bytes>
0x40002e:	cmp	dword ptr [rbp - 0xc], 0
0x400032:	jg	0x40005d
