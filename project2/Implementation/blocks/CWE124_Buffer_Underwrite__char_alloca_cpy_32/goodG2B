<Block for 0x400172, 112 bytes>
0x400172:	endbr64	
0x400176:	push	rbp
0x400177:	mov	rbp, rsp
0x40017a:	sub	rsp, 0xa0
0x400181:	mov	rax, qword ptr fs:[0x28]
0x40018a:	mov	qword ptr [rbp - 8], rax
0x40018e:	xor	eax, eax
0x400190:	lea	rax, [rbp - 0xa0]
0x400197:	mov	qword ptr [rbp - 0x98], rax
0x40019e:	lea	rax, [rbp - 0xa0]
0x4001a5:	mov	qword ptr [rbp - 0x90], rax
0x4001ac:	mov	eax, 0x10
0x4001b1:	sub	rax, 1
0x4001b5:	add	rax, 0x6c
0x4001b9:	mov	ecx, 0x10
0x4001be:	mov	edx, 0
0x4001c3:	div	rcx
0x4001c6:	imul	rax, rax, 0x10
0x4001ca:	mov	rdx, rax
0x4001cd:	and	rdx, 0xfffffffffffff000
0x4001d4:	mov	rcx, rsp
0x4001d7:	sub	rcx, rdx
0x4001da:	mov	rdx, rcx
0x4001dd:	cmp	rsp, rdx
0x4001e0:	je	0x4001f4
<Block for 0x4001f4, 26 bytes>
0x4001f4:	mov	rdx, rax
0x4001f7:	and	edx, 0xfff
0x4001fd:	sub	rsp, rdx
0x400200:	mov	rdx, rax
0x400203:	and	edx, 0xfff
0x400209:	test	rdx, rdx
0x40020c:	je	0x40021e
<Block for 0x4001e2, 18 bytes>
0x4001e2:	sub	rsp, 0x1000
0x4001e9:	or	qword ptr [rsp + 0xff8], 0
0x4001f2:	jmp	0x4001dd
<Block for 0x40021e, 47 bytes>
0x40021e:	mov	rax, rsp
0x400221:	add	rax, 0xf
0x400225:	shr	rax, 4
0x400229:	shl	rax, 4
0x40022d:	mov	qword ptr [rbp - 0x88], rax
0x400234:	mov	rax, qword ptr [rbp - 0x88]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x41
0x400245:	mov	rdi, rax
0x400248:	call	0x500000
<Block for 0x40020e, 63 bytes>
0x40020e:	and	eax, 0xfff
0x400213:	sub	rax, 8
0x400217:	add	rax, rsp
0x40021a:	or	qword ptr [rax], 0
0x40021e:	mov	rax, rsp
0x400221:	add	rax, 0xf
0x400225:	shr	rax, 4
0x400229:	shl	rax, 4
0x40022d:	mov	qword ptr [rbp - 0x88], rax
0x400234:	mov	rax, qword ptr [rbp - 0x88]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x41
0x400245:	mov	rdi, rax
0x400248:	call	0x500000
<Block for 0x4001dd, 5 bytes>
0x4001dd:	cmp	rsp, rdx
0x4001e0:	je	0x4001f4
<Block for 0x40024d, 89 bytes>
0x40024d:	mov	rax, qword ptr [rbp - 0x88]
0x400254:	add	rax, 0x63
0x400258:	mov	byte ptr [rax], 0
0x40025b:	mov	rax, qword ptr [rbp - 0x98]
0x400262:	mov	rax, qword ptr [rax]
0x400265:	mov	qword ptr [rbp - 0x80], rax
0x400269:	mov	rax, qword ptr [rbp - 0x88]
0x400270:	mov	qword ptr [rbp - 0x80], rax
0x400274:	mov	rax, qword ptr [rbp - 0x98]
0x40027b:	mov	rdx, qword ptr [rbp - 0x80]
0x40027f:	mov	qword ptr [rax], rdx
0x400282:	mov	rax, qword ptr [rbp - 0x90]
0x400289:	mov	rax, qword ptr [rax]
0x40028c:	mov	qword ptr [rbp - 0x78], rax
0x400290:	lea	rax, [rbp - 0x70]
0x400294:	mov	edx, 0x63
0x400299:	mov	esi, 0x43
0x40029e:	mov	rdi, rax
0x4002a1:	call	0x500000
<Block for 0x4002a6, 23 bytes>
0x4002a6:	mov	byte ptr [rbp - 0xd], 0
0x4002aa:	lea	rdx, [rbp - 0x70]
0x4002ae:	mov	rax, qword ptr [rbp - 0x78]
0x4002b2:	mov	rsi, rdx
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x500008
<Block for 0x4002bd, 12 bytes>
0x4002bd:	mov	rax, qword ptr [rbp - 0x78]
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x500010
<Block for 0x4002c9, 16 bytes>
0x4002c9:	nop	
0x4002ca:	mov	rax, qword ptr [rbp - 8]
0x4002ce:	xor	rax, qword ptr fs:[0x28]
0x4002d7:	je	0x4002de
<Block for 0x4002de, 2 bytes>
0x4002de:	leave	
0x4002df:	ret	
<Block for 0x4002d9, 5 bytes>
0x4002d9:	call	0x500018
