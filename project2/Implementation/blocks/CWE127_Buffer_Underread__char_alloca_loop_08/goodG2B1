<Block for 0x400174, 84 bytes>
0x400174:	endbr64	
0x400178:	push	rbp
0x400179:	mov	rbp, rsp
0x40017c:	sub	rsp, 0x90
0x400183:	mov	rax, qword ptr fs:[0x28]
0x40018c:	mov	qword ptr [rbp - 8], rax
0x400190:	xor	eax, eax
0x400192:	mov	eax, 0x10
0x400197:	sub	rax, 1
0x40019b:	add	rax, 0x6c
0x40019f:	mov	esi, 0x10
0x4001a4:	mov	edx, 0
0x4001a9:	div	rsi
0x4001ac:	imul	rax, rax, 0x10
0x4001b0:	mov	rdx, rax
0x4001b3:	and	rdx, 0xfffffffffffff000
0x4001ba:	mov	rcx, rsp
0x4001bd:	sub	rcx, rdx
0x4001c0:	mov	rdx, rcx
0x4001c3:	cmp	rsp, rdx
0x4001c6:	je	0x4001da
<Block for 0x4001da, 26 bytes>
0x4001da:	mov	rdx, rax
0x4001dd:	and	edx, 0xfff
0x4001e3:	sub	rsp, rdx
0x4001e6:	mov	rdx, rax
0x4001e9:	and	edx, 0xfff
0x4001ef:	test	rdx, rdx
0x4001f2:	je	0x400204
<Block for 0x4001c8, 18 bytes>
0x4001c8:	sub	rsp, 0x1000
0x4001cf:	or	qword ptr [rsp + 0xff8], 0
0x4001d8:	jmp	0x4001c3
<Block for 0x400204, 41 bytes>
0x400204:	mov	rax, rsp
0x400207:	add	rax, 0xf
0x40020b:	shr	rax, 4
0x40020f:	shl	rax, 4
0x400213:	mov	qword ptr [rbp - 0x78], rax
0x400217:	mov	rax, qword ptr [rbp - 0x78]
0x40021b:	mov	edx, 0x63
0x400220:	mov	esi, 0x41
0x400225:	mov	rdi, rax
0x400228:	call	0x500000
<Block for 0x4001f4, 57 bytes>
0x4001f4:	and	eax, 0xfff
0x4001f9:	sub	rax, 8
0x4001fd:	add	rax, rsp
0x400200:	or	qword ptr [rax], 0
0x400204:	mov	rax, rsp
0x400207:	add	rax, 0xf
0x40020b:	shr	rax, 4
0x40020f:	shl	rax, 4
0x400213:	mov	qword ptr [rbp - 0x78], rax
0x400217:	mov	rax, qword ptr [rbp - 0x78]
0x40021b:	mov	edx, 0x63
0x400220:	mov	esi, 0x41
0x400225:	mov	rdi, rax
0x400228:	call	0x500000
<Block for 0x4001c3, 5 bytes>
0x4001c3:	cmp	rsp, rdx
0x4001c6:	je	0x4001da
<Block for 0x40022d, 21 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 0x78]
0x400231:	add	rax, 0x63
0x400235:	mov	byte ptr [rax], 0
0x400238:	mov	eax, 0
0x40023d:	call	0x40000f
<Block for 0x400242, 4 bytes>
0x400242:	test	eax, eax
0x400244:	je	0x400254
<Block for 0x400254, 33 bytes>
0x400254:	mov	rax, qword ptr [rbp - 0x78]
0x400258:	mov	qword ptr [rbp - 0x88], rax
0x40025f:	lea	rax, [rbp - 0x70]
0x400263:	mov	edx, 0x63
0x400268:	mov	esi, 0x43
0x40026d:	mov	rdi, rax
0x400270:	call	0x500000
<Block for 0x400246, 12 bytes>
0x400246:	lea	rdi, [rip + 0x1f8]
0x40024d:	call	0x500008
<Block for 0x400275, 14 bytes>
0x400275:	mov	byte ptr [rbp - 0xd], 0
0x400279:	mov	qword ptr [rbp - 0x80], 0
0x400281:	jmp	0x4002a6
<Block for 0x400252, 2 bytes>
0x400252:	jmp	0x40025f
<Block for 0x4002a6, 7 bytes>
0x4002a6:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002ab:	jbe	0x400283
<Block for 0x40025f, 22 bytes>
0x40025f:	lea	rax, [rbp - 0x70]
0x400263:	mov	edx, 0x63
0x400268:	mov	esi, 0x43
0x40026d:	mov	rdi, rax
0x400270:	call	0x500000
<Block for 0x400283, 42 bytes>
0x400283:	mov	rdx, qword ptr [rbp - 0x88]
0x40028a:	mov	rax, qword ptr [rbp - 0x80]
0x40028e:	add	rax, rdx
0x400291:	movzx	eax, byte ptr [rax]
0x400294:	lea	rcx, [rbp - 0x70]
0x400298:	mov	rdx, qword ptr [rbp - 0x80]
0x40029c:	add	rdx, rcx
0x40029f:	mov	byte ptr [rdx], al
0x4002a1:	add	qword ptr [rbp - 0x80], 1
0x4002a6:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002ab:	jbe	0x400283
<Block for 0x4002ad, 16 bytes>
0x4002ad:	mov	byte ptr [rbp - 0xd], 0
0x4002b1:	lea	rax, [rbp - 0x70]
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x500008
<Block for 0x4002bd, 16 bytes>
0x4002bd:	nop	
0x4002be:	mov	rax, qword ptr [rbp - 8]
0x4002c2:	xor	rax, qword ptr fs:[0x28]
0x4002cb:	je	0x4002d2
<Block for 0x4002d2, 2 bytes>
0x4002d2:	leave	
0x4002d3:	ret	
<Block for 0x4002cd, 5 bytes>
0x4002cd:	call	0x500010
