<Block for 0x4002d4, 84 bytes>
0x4002d4:	endbr64	
0x4002d8:	push	rbp
0x4002d9:	mov	rbp, rsp
0x4002dc:	sub	rsp, 0x90
0x4002e3:	mov	rax, qword ptr fs:[0x28]
0x4002ec:	mov	qword ptr [rbp - 8], rax
0x4002f0:	xor	eax, eax
0x4002f2:	mov	eax, 0x10
0x4002f7:	sub	rax, 1
0x4002fb:	add	rax, 0x6c
0x4002ff:	mov	esi, 0x10
0x400304:	mov	edx, 0
0x400309:	div	rsi
0x40030c:	imul	rax, rax, 0x10
0x400310:	mov	rdx, rax
0x400313:	and	rdx, 0xfffffffffffff000
0x40031a:	mov	rcx, rsp
0x40031d:	sub	rcx, rdx
0x400320:	mov	rdx, rcx
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x40033a, 26 bytes>
0x40033a:	mov	rdx, rax
0x40033d:	and	edx, 0xfff
0x400343:	sub	rsp, rdx
0x400346:	mov	rdx, rax
0x400349:	and	edx, 0xfff
0x40034f:	test	rdx, rdx
0x400352:	je	0x400364
<Block for 0x400328, 18 bytes>
0x400328:	sub	rsp, 0x1000
0x40032f:	or	qword ptr [rsp + 0xff8], 0
0x400338:	jmp	0x400323
<Block for 0x400364, 41 bytes>
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x78], rax
0x400377:	mov	rax, qword ptr [rbp - 0x78]
0x40037b:	mov	edx, 0x63
0x400380:	mov	esi, 0x41
0x400385:	mov	rdi, rax
0x400388:	call	0x500000
<Block for 0x400354, 57 bytes>
0x400354:	and	eax, 0xfff
0x400359:	sub	rax, 8
0x40035d:	add	rax, rsp
0x400360:	or	qword ptr [rax], 0
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x78], rax
0x400377:	mov	rax, qword ptr [rbp - 0x78]
0x40037b:	mov	edx, 0x63
0x400380:	mov	esi, 0x41
0x400385:	mov	rdi, rax
0x400388:	call	0x500000
<Block for 0x400323, 5 bytes>
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x40038d, 21 bytes>
0x40038d:	mov	rax, qword ptr [rbp - 0x78]
0x400391:	add	rax, 0x63
0x400395:	mov	byte ptr [rax], 0
0x400398:	mov	eax, 0
0x40039d:	call	0x400000
<Block for 0x4003a2, 4 bytes>
0x4003a2:	test	eax, eax
0x4003a4:	je	0x4003b1
<Block for 0x4003b1, 22 bytes>
0x4003b1:	lea	rax, [rbp - 0x70]
0x4003b5:	mov	edx, 0x63
0x4003ba:	mov	esi, 0x43
0x4003bf:	mov	rdi, rax
0x4003c2:	call	0x500000
<Block for 0x4003a6, 33 bytes>
0x4003a6:	mov	rax, qword ptr [rbp - 0x78]
0x4003aa:	mov	qword ptr [rbp - 0x88], rax
0x4003b1:	lea	rax, [rbp - 0x70]
0x4003b5:	mov	edx, 0x63
0x4003ba:	mov	esi, 0x43
0x4003bf:	mov	rdi, rax
0x4003c2:	call	0x500000
<Block for 0x4003c7, 14 bytes>
0x4003c7:	mov	byte ptr [rbp - 0xd], 0
0x4003cb:	mov	qword ptr [rbp - 0x80], 0
0x4003d3:	jmp	0x4003f8
<Block for 0x4003f8, 7 bytes>
0x4003f8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003fd:	jbe	0x4003d5
<Block for 0x4003d5, 42 bytes>
0x4003d5:	mov	rdx, qword ptr [rbp - 0x88]
0x4003dc:	mov	rax, qword ptr [rbp - 0x80]
0x4003e0:	add	rax, rdx
0x4003e3:	movzx	eax, byte ptr [rax]
0x4003e6:	lea	rcx, [rbp - 0x70]
0x4003ea:	mov	rdx, qword ptr [rbp - 0x80]
0x4003ee:	add	rdx, rcx
0x4003f1:	mov	byte ptr [rdx], al
0x4003f3:	add	qword ptr [rbp - 0x80], 1
0x4003f8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003fd:	jbe	0x4003d5
<Block for 0x4003ff, 16 bytes>
0x4003ff:	mov	byte ptr [rbp - 0xd], 0
0x400403:	lea	rax, [rbp - 0x70]
0x400407:	mov	rdi, rax
0x40040a:	call	0x500008
<Block for 0x40040f, 16 bytes>
0x40040f:	nop	
0x400410:	mov	rax, qword ptr [rbp - 8]
0x400414:	xor	rax, qword ptr fs:[0x28]
0x40041d:	je	0x400424
<Block for 0x400424, 2 bytes>
0x400424:	leave	
0x400425:	ret	
<Block for 0x40041f, 5 bytes>
0x40041f:	call	0x500010
