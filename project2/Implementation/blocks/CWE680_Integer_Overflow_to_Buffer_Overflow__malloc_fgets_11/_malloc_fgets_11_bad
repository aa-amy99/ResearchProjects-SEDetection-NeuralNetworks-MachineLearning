<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x40007f
<Block for 0x40007f, 17 bytes>
0x40007f:	mov	eax, dword ptr [rbp - 0x2c]
0x400082:	cdqe	
0x400084:	shl	rax, 2
0x400088:	mov	rdi, rax
0x40008b:	call	0x500028
<Block for 0x400030, 45 bytes>
0x400030:	mov	qword ptr [rbp - 0x16], 0
0x400038:	mov	dword ptr [rbp - 0xe], 0
0x40003f:	mov	word ptr [rbp - 0xa], 0
0x400045:	mov	rdx, qword ptr [rip + 0xfffbc]
0x40004c:	lea	rax, [rbp - 0x16]
0x400050:	mov	esi, 0xe
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x400090, 11 bytes>
0x400090:	mov	qword ptr [rbp - 0x20], rax
0x400094:	cmp	qword ptr [rbp - 0x20], 0
0x400099:	jne	0x4000a5
<Block for 0x40005d, 5 bytes>
0x40005d:	test	rax, rax
0x400060:	je	0x400073
<Block for 0x40009b, 10 bytes>
0x40009b:	mov	edi, 0xffffffff
0x4000a0:	call	0x500030
<Block for 0x4000a5, 10 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x28], 0
0x4000ad:	jmp	0x4000cd
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x1f5]
0x40007a:	call	0x500020
<Block for 0x400062, 12 bytes>
0x400062:	lea	rax, [rbp - 0x16]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x4000cd, 11 bytes>
0x4000cd:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d0:	cdqe	
0x4000d2:	cmp	qword ptr [rbp - 0x28], rax
0x4000d6:	jb	0x4000af
<Block for 0x40006e, 5 bytes>
0x40006e:	mov	dword ptr [rbp - 0x2c], eax
0x400071:	jmp	0x40007f
<Block for 0x4000af, 41 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 0x28]
0x4000b3:	lea	rdx, [rax*4]
0x4000bb:	mov	rax, qword ptr [rbp - 0x20]
0x4000bf:	add	rax, rdx
0x4000c2:	mov	dword ptr [rax], 0
0x4000c8:	add	qword ptr [rbp - 0x28], 1
0x4000cd:	mov	eax, dword ptr [rbp - 0x2c]
0x4000d0:	cdqe	
0x4000d2:	cmp	qword ptr [rbp - 0x28], rax
0x4000d6:	jb	0x4000af
<Block for 0x4000d8, 13 bytes>
0x4000d8:	mov	rax, qword ptr [rbp - 0x20]
0x4000dc:	mov	eax, dword ptr [rax]
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500038
<Block for 0x4000e5, 12 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 0x20]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500040
<Block for 0x4000f1, 16 bytes>
0x4000f1:	nop	
0x4000f2:	mov	rax, qword ptr [rbp - 8]
0x4000f6:	xor	rax, qword ptr fs:[0x28]
0x4000ff:	je	0x400106
<Block for 0x400106, 2 bytes>
0x400106:	leave	
0x400107:	ret	
<Block for 0x400101, 5 bytes>
0x400101:	call	0x500048
