<Block for 0x400000, 42 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0xab]
0x400021:	cmp	eax, 5
0x400024:	jne	0x4000b3
<Block for 0x40002a, 27 bytes>
0x40002a:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400031:	mov	edx, 6
0x400036:	mov	esi, 1
0x40003b:	mov	edi, 2
0x400040:	call	0x500000
<Block for 0x4000b3, 16 bytes>
0x4000b3:	nop	
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	xor	rax, qword ptr fs:[0x28]
0x4000c1:	je	0x4000c8
<Block for 0x400045, 9 bytes>
0x400045:	mov	dword ptr [rbp - 0x24], eax
0x400048:	cmp	dword ptr [rbp - 0x24], -1
0x40004c:	je	0x4000a2
<Block for 0x4000c8, 2 bytes>
0x4000c8:	leave	
0x4000c9:	ret	
<Block for 0x4000c3, 5 bytes>
0x4000c3:	call	0x500030
<Block for 0x40004e, 22 bytes>
0x40004e:	lea	rax, [rbp - 0x20]
0x400052:	mov	edx, 0x10
0x400057:	mov	esi, 0
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500008
<Block for 0x4000a2, 1 bytes>
0x4000a2:	nop	
<Block for 0x400064, 18 bytes>
0x400064:	mov	word ptr [rbp - 0x20], 2
0x40006a:	lea	rdi, [rip + 0x5f]
0x400071:	call	0x500010
<Block for 0x4000a3, 6 bytes>
0x4000a3:	cmp	dword ptr [rbp - 0x24], -1
0x4000a7:	je	0x4000b3
<Block for 0x400076, 13 bytes>
0x400076:	mov	dword ptr [rbp - 0x1c], eax
0x400079:	mov	edi, 0x50
0x40007e:	call	0x500018
<Block for 0x4000a9, 10 bytes>
0x4000a9:	mov	eax, dword ptr [rbp - 0x24]
0x4000ac:	mov	edi, eax
0x4000ae:	call	0x500028
<Block for 0x400083, 26 bytes>
0x400083:	mov	word ptr [rbp - 0x1e], ax
0x400087:	lea	rcx, [rbp - 0x20]
0x40008b:	mov	eax, dword ptr [rbp - 0x24]
0x40008e:	mov	edx, 0x10
0x400093:	mov	rsi, rcx
0x400096:	mov	edi, eax
0x400098:	call	0x500020
<Block for 0x40009d, 5 bytes>
0x40009d:	cmp	eax, -1
0x4000a0:	jmp	0x4000a3
