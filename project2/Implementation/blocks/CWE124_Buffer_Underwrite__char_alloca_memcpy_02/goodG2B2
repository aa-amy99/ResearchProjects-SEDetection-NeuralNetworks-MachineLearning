<Block for 0x400338, 85 bytes>
0x400338:	endbr64	
0x40033c:	push	rbp
0x40033d:	mov	rbp, rsp
0x400340:	push	rbx
0x400341:	sub	rsp, 0x88
0x400348:	mov	rax, qword ptr fs:[0x28]
0x400351:	mov	qword ptr [rbp - 0x18], rax
0x400355:	xor	eax, eax
0x400357:	mov	eax, 0x10
0x40035c:	sub	rax, 1
0x400360:	add	rax, 0x6c
0x400364:	mov	esi, 0x10
0x400369:	mov	edx, 0
0x40036e:	div	rsi
0x400371:	imul	rax, rax, 0x10
0x400375:	mov	rdx, rax
0x400378:	and	rdx, 0xfffffffffffff000
0x40037f:	mov	rbx, rsp
0x400382:	sub	rbx, rdx
0x400385:	mov	rdx, rbx
0x400388:	cmp	rsp, rdx
0x40038b:	je	0x40039f
<Block for 0x40039f, 26 bytes>
0x40039f:	mov	rdx, rax
0x4003a2:	and	edx, 0xfff
0x4003a8:	sub	rsp, rdx
0x4003ab:	mov	rdx, rax
0x4003ae:	and	edx, 0xfff
0x4003b4:	test	rdx, rdx
0x4003b7:	je	0x4003c9
<Block for 0x40038d, 18 bytes>
0x40038d:	sub	rsp, 0x1000
0x400394:	or	qword ptr [rsp + 0xff8], 0
0x40039d:	jmp	0x400388
<Block for 0x4003c9, 47 bytes>
0x4003c9:	mov	rax, rsp
0x4003cc:	add	rax, 0xf
0x4003d0:	shr	rax, 4
0x4003d4:	shl	rax, 4
0x4003d8:	mov	qword ptr [rbp - 0x90], rax
0x4003df:	mov	rax, qword ptr [rbp - 0x90]
0x4003e6:	mov	edx, 0x63
0x4003eb:	mov	esi, 0x41
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x500000
<Block for 0x4003b9, 63 bytes>
0x4003b9:	and	eax, 0xfff
0x4003be:	sub	rax, 8
0x4003c2:	add	rax, rsp
0x4003c5:	or	qword ptr [rax], 0
0x4003c9:	mov	rax, rsp
0x4003cc:	add	rax, 0xf
0x4003d0:	shr	rax, 4
0x4003d4:	shl	rax, 4
0x4003d8:	mov	qword ptr [rbp - 0x90], rax
0x4003df:	mov	rax, qword ptr [rbp - 0x90]
0x4003e6:	mov	edx, 0x63
0x4003eb:	mov	esi, 0x41
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x500000
<Block for 0x400388, 5 bytes>
0x400388:	cmp	rsp, rdx
0x40038b:	je	0x40039f
<Block for 0x4003f8, 50 bytes>
0x4003f8:	mov	rax, qword ptr [rbp - 0x90]
0x4003ff:	add	rax, 0x63
0x400403:	mov	byte ptr [rax], 0
0x400406:	mov	rax, qword ptr [rbp - 0x90]
0x40040d:	mov	qword ptr [rbp - 0x88], rax
0x400414:	lea	rax, [rbp - 0x80]
0x400418:	mov	edx, 0x63
0x40041d:	mov	esi, 0x43
0x400422:	mov	rdi, rax
0x400425:	call	0x500000
<Block for 0x40042a, 141 bytes>
0x40042a:	mov	byte ptr [rbp - 0x1d], 0
0x40042e:	mov	rax, qword ptr [rbp - 0x88]
0x400435:	mov	rcx, qword ptr [rbp - 0x80]
0x400439:	mov	rbx, qword ptr [rbp - 0x78]
0x40043d:	mov	qword ptr [rax], rcx
0x400440:	mov	qword ptr [rax + 8], rbx
0x400444:	mov	rcx, qword ptr [rbp - 0x70]
0x400448:	mov	rbx, qword ptr [rbp - 0x68]
0x40044c:	mov	qword ptr [rax + 0x10], rcx
0x400450:	mov	qword ptr [rax + 0x18], rbx
0x400454:	mov	rcx, qword ptr [rbp - 0x60]
0x400458:	mov	rbx, qword ptr [rbp - 0x58]
0x40045c:	mov	qword ptr [rax + 0x20], rcx
0x400460:	mov	qword ptr [rax + 0x28], rbx
0x400464:	mov	rcx, qword ptr [rbp - 0x50]
0x400468:	mov	rbx, qword ptr [rbp - 0x48]
0x40046c:	mov	qword ptr [rax + 0x30], rcx
0x400470:	mov	qword ptr [rax + 0x38], rbx
0x400474:	mov	rcx, qword ptr [rbp - 0x40]
0x400478:	mov	rbx, qword ptr [rbp - 0x38]
0x40047c:	mov	qword ptr [rax + 0x40], rcx
0x400480:	mov	qword ptr [rax + 0x48], rbx
0x400484:	mov	rcx, qword ptr [rbp - 0x30]
0x400488:	mov	rbx, qword ptr [rbp - 0x28]
0x40048c:	mov	qword ptr [rax + 0x50], rcx
0x400490:	mov	qword ptr [rax + 0x58], rbx
0x400494:	mov	edx, dword ptr [rbp - 0x20]
0x400497:	mov	dword ptr [rax + 0x60], edx
0x40049a:	mov	rax, qword ptr [rbp - 0x88]
0x4004a1:	add	rax, 0x63
0x4004a5:	mov	byte ptr [rax], 0
0x4004a8:	mov	rax, qword ptr [rbp - 0x88]
0x4004af:	mov	rdi, rax
0x4004b2:	call	0x500008
<Block for 0x4004b7, 16 bytes>
0x4004b7:	nop	
0x4004b8:	mov	rax, qword ptr [rbp - 0x18]
0x4004bc:	xor	rax, qword ptr fs:[0x28]
0x4004c5:	je	0x4004cc
<Block for 0x4004cc, 6 bytes>
0x4004cc:	mov	rbx, qword ptr [rbp - 8]
0x4004d0:	leave	
0x4004d1:	ret	
<Block for 0x4004c7, 5 bytes>
0x4004c7:	call	0x500010
