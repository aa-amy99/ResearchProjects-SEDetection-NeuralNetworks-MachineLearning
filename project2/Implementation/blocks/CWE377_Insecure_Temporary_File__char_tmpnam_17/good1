<Block for 0x400088, 36 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x30
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	dword ptr [rbp - 0x28], 0
0x4000aa:	jmp	0x400103
<Block for 0x400103, 6 bytes>
0x400103:	cmp	dword ptr [rbp - 0x28], 0
0x400107:	jle	0x4000ac
<Block for 0x4000ac, 40 bytes>
0x4000ac:	movabs	rax, 0x6c69662f706d742f
0x4000b6:	movabs	rdx, 0x58585858585865
0x4000c0:	mov	qword ptr [rbp - 0x20], rax
0x4000c4:	mov	qword ptr [rbp - 0x18], rdx
0x4000c8:	lea	rax, [rbp - 0x20]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500028
<Block for 0x400109, 16 bytes>
0x400109:	nop	
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	xor	rax, qword ptr fs:[0x28]
0x400117:	je	0x40011e
<Block for 0x4000d4, 15 bytes>
0x4000d4:	mov	dword ptr [rbp - 0x24], eax
0x4000d7:	lea	rax, [rbp - 0x20]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500010
<Block for 0x40011e, 2 bytes>
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x400119, 5 bytes>
0x400119:	call	0x500030
<Block for 0x4000e3, 6 bytes>
0x4000e3:	cmp	dword ptr [rbp - 0x24], -1
0x4000e7:	je	0x4000ff
<Block for 0x4000ff, 10 bytes>
0x4000ff:	add	dword ptr [rbp - 0x28], 1
0x400103:	cmp	dword ptr [rbp - 0x28], 0
0x400107:	jle	0x4000ac
<Block for 0x4000e9, 12 bytes>
0x4000e9:	lea	rdi, [rip + 0x48]
0x4000f0:	call	0x500010
<Block for 0x4000f5, 10 bytes>
0x4000f5:	mov	eax, dword ptr [rbp - 0x24]
0x4000f8:	mov	edi, eax
0x4000fa:	call	0x500020
