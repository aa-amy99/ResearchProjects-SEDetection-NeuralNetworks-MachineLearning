<Block for 0x400064, 17 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x10
0x400070:	call	0x500000
<Block for 0x400075, 55 bytes>
0x400075:	mov	edx, eax
0x400077:	movsxd	rax, edx
0x40007a:	imul	rax, rax, 0x55555556
0x400081:	shr	rax, 0x20
0x400085:	mov	rcx, rax
0x400088:	mov	eax, edx
0x40008a:	sar	eax, 0x1f
0x40008d:	mov	esi, ecx
0x40008f:	sub	esi, eax
0x400091:	mov	eax, esi
0x400093:	mov	dword ptr [rbp - 4], eax
0x400096:	mov	ecx, dword ptr [rbp - 4]
0x400099:	mov	eax, ecx
0x40009b:	add	eax, eax
0x40009d:	add	eax, ecx
0x40009f:	sub	edx, eax
0x4000a1:	mov	eax, edx
0x4000a3:	mov	dword ptr [rbp - 4], eax
0x4000a6:	cmp	dword ptr [rbp - 4], 0
0x4000aa:	jne	0x4000ba
<Block for 0x4000ac, 12 bytes>
0x4000ac:	lea	rdi, [rip + 0xdf]
0x4000b3:	call	0x500008
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0xa6]
0x4000c1:	call	0x500008
<Block for 0x4000b8, 2 bytes>
0x4000b8:	jmp	0x4000c6
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rdi, [rip + 0xdd]
0x4000cd:	call	0x500008
<Block for 0x4000d2, 4 bytes>
0x4000d2:	nop	
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
