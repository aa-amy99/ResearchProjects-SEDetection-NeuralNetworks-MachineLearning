<Block for 0x4000d6, 17 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	sub	rsp, 0x10
0x4000e2:	call	0x500000
<Block for 0x4000e7, 55 bytes>
0x4000e7:	mov	edx, eax
0x4000e9:	movsxd	rax, edx
0x4000ec:	imul	rax, rax, 0x55555556
0x4000f3:	shr	rax, 0x20
0x4000f7:	mov	rcx, rax
0x4000fa:	mov	eax, edx
0x4000fc:	sar	eax, 0x1f
0x4000ff:	mov	esi, ecx
0x400101:	sub	esi, eax
0x400103:	mov	eax, esi
0x400105:	mov	dword ptr [rbp - 4], eax
0x400108:	mov	ecx, dword ptr [rbp - 4]
0x40010b:	mov	eax, ecx
0x40010d:	add	eax, eax
0x40010f:	add	eax, ecx
0x400111:	sub	edx, eax
0x400113:	mov	eax, edx
0x400115:	mov	dword ptr [rbp - 4], eax
0x400118:	cmp	dword ptr [rbp - 4], 0
0x40011c:	jne	0x40012c
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rdi, [rip + 0x6d]
0x400125:	call	0x500008
<Block for 0x40012c, 12 bytes>
0x40012c:	lea	rdi, [rip + 0x34]
0x400133:	call	0x500008
<Block for 0x40012a, 2 bytes>
0x40012a:	jmp	0x400138
<Block for 0x400138, 12 bytes>
0x400138:	lea	rdi, [rip + 0x6b]
0x40013f:	call	0x500008
<Block for 0x400144, 4 bytes>
0x400144:	nop	
0x400145:	nop	
0x400146:	leave	
0x400147:	ret	
