<Block for 0x40027b, 43 bytes>
0x40027b:	endbr64	
0x40027f:	push	rbp
0x400280:	mov	rbp, rsp
0x400283:	push	rbx
0x400284:	sub	rsp, 0x88
0x40028b:	mov	rax, qword ptr fs:[0x28]
0x400294:	mov	qword ptr [rbp - 0x18], rax
0x400298:	xor	eax, eax
0x40029a:	lea	rax, [rbp - 0x80]
0x40029e:	mov	rdi, rax
0x4002a1:	call	0x4004f6
<Block for 0x4002a6, 46 bytes>
0x4002a6:	mov	dword ptr [rbp - 0x88], 0
0x4002b0:	mov	dword ptr [rbp - 0x84], 0
0x4002ba:	mov	dword ptr [rbp - 0x50], 0
0x4002c1:	lea	rdx, [rbp - 0x50]
0x4002c5:	lea	rax, [rbp - 0x80]
0x4002c9:	mov	rsi, rdx
0x4002cc:	mov	rdi, rax
0x4002cf:	call	0x4006c2
<Block for 0x4002d4, 36 bytes>
0x4002d4:	mov	rdx, qword ptr [rbp - 0x88]
0x4002db:	mov	qword ptr [rax], rdx
0x4002de:	mov	dword ptr [rbp - 0x50], 1
0x4002e5:	lea	rdx, [rbp - 0x50]
0x4002e9:	lea	rax, [rbp - 0x80]
0x4002ed:	mov	rsi, rdx
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x4006c2
<Block for 0x4002f8, 36 bytes>
0x4002f8:	mov	rdx, qword ptr [rbp - 0x88]
0x4002ff:	mov	qword ptr [rax], rdx
0x400302:	mov	dword ptr [rbp - 0x50], 2
0x400309:	lea	rdx, [rbp - 0x50]
0x40030d:	lea	rax, [rbp - 0x80]
0x400311:	mov	rsi, rdx
0x400314:	mov	rdi, rax
0x400317:	call	0x4006c2
<Block for 0x40031c, 29 bytes>
0x40031c:	mov	rdx, qword ptr [rbp - 0x88]
0x400323:	mov	qword ptr [rax], rdx
0x400326:	lea	rdx, [rbp - 0x80]
0x40032a:	lea	rax, [rbp - 0x50]
0x40032e:	mov	rsi, rdx
0x400331:	mov	rdi, rax
0x400334:	call	0x400536
<Block for 0x400339, 12 bytes>
0x400339:	lea	rax, [rbp - 0x50]
0x40033d:	mov	rdi, rax
0x400340:	call	0x500028
<Block for 0x400345, 12 bytes>
0x400345:	lea	rax, [rbp - 0x50]
0x400349:	mov	rdi, rax
0x40034c:	call	0x400516
<Block for 0x400351, 12 bytes>
0x400351:	lea	rax, [rbp - 0x80]
0x400355:	mov	rdi, rax
0x400358:	call	0x400516
<Block for 0x40035d, 16 bytes>
0x40035d:	nop	
0x40035e:	mov	rax, qword ptr [rbp - 0x18]
0x400362:	xor	rax, qword ptr fs:[0x28]
0x40036b:	je	0x4003a7
<Block for 0x4003a7, 10 bytes>
0x4003a7:	add	rsp, 0x88
0x4003ae:	pop	rbx
0x4003af:	pop	rbp
0x4003b0:	ret	
<Block for 0x40036d, 2 bytes>
0x40036d:	jmp	0x4003a2
<Block for 0x4003a2, 5 bytes>
0x4003a2:	call	0x500010
