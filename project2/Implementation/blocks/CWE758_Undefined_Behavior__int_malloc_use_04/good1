<Block for 0x400056, 21 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x10
0x400062:	mov	eax, 0
0x400067:	test	eax, eax
0x400069:	je	0x400079
<Block for 0x400079, 10 bytes>
0x400079:	mov	edi, 4
0x40007e:	call	0x500000
<Block for 0x40006b, 12 bytes>
0x40006b:	lea	rdi, [rip + 0xe6]
0x400072:	call	0x500020
<Block for 0x400083, 11 bytes>
0x400083:	mov	qword ptr [rbp - 8], rax
0x400087:	cmp	qword ptr [rbp - 8], 0
0x40008c:	jne	0x400098
<Block for 0x400077, 2 bytes>
0x400077:	jmp	0x4000c7
<Block for 0x40008e, 10 bytes>
0x40008e:	mov	edi, 0xffffffff
0x400093:	call	0x500008
<Block for 0x400098, 35 bytes>
0x400098:	mov	dword ptr [rbp - 0x10], 5
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	edx, dword ptr [rbp - 0x10]
0x4000a6:	mov	dword ptr [rax], edx
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	mov	eax, dword ptr [rax]
0x4000ae:	mov	dword ptr [rbp - 0xc], eax
0x4000b1:	mov	eax, dword ptr [rbp - 0xc]
0x4000b4:	mov	edi, eax
0x4000b6:	call	0x500018
<Block for 0x4000c7, 3 bytes>
0x4000c7:	nop	
0x4000c8:	leave	
0x4000c9:	ret	
<Block for 0x4000bb, 12 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
