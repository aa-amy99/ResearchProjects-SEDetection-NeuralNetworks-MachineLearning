<Block for 0x400176, 155 bytes>
0x400176:	endbr64	
0x40017a:	push	rbp
0x40017b:	mov	rbp, rsp
0x40017e:	sub	rsp, 0xa0
0x400185:	mov	rax, qword ptr fs:[0x28]
0x40018e:	mov	qword ptr [rbp - 8], rax
0x400192:	xor	eax, eax
0x400194:	mov	qword ptr [rbp - 0x70], 0
0x40019c:	mov	qword ptr [rbp - 0x68], 0
0x4001a4:	mov	qword ptr [rbp - 0x60], 0
0x4001ac:	mov	qword ptr [rbp - 0x58], 0
0x4001b4:	mov	qword ptr [rbp - 0x50], 0
0x4001bc:	mov	qword ptr [rbp - 0x48], 0
0x4001c4:	mov	qword ptr [rbp - 0x40], 0
0x4001cc:	mov	qword ptr [rbp - 0x38], 0
0x4001d4:	mov	qword ptr [rbp - 0x30], 0
0x4001dc:	mov	qword ptr [rbp - 0x28], 0
0x4001e4:	mov	qword ptr [rbp - 0x20], 0
0x4001ec:	mov	qword ptr [rbp - 0x18], 0
0x4001f4:	mov	dword ptr [rbp - 0x10], 0
0x4001fb:	lea	rax, [rbp - 0x70]
0x4001ff:	mov	qword ptr [rbp - 0x88], rax
0x400206:	mov	eax, dword ptr [rip + 0xffdf4]
0x40020c:	cmp	eax, 5
0x40020f:	jne	0x400264
<Block for 0x400211, 15 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x88]
0x400218:	mov	rdi, rax
0x40021b:	call	0x500008
<Block for 0x400264, 11 bytes>
0x400264:	mov	eax, dword ptr [rip + 0xffd96]
0x40026a:	cmp	eax, 5
0x40026d:	je	0x40027d
<Block for 0x400220, 16 bytes>
0x400220:	mov	qword ptr [rbp - 0x80], rax
0x400224:	lea	rdi, [rip + 0x4d0]
0x40022b:	call	0x500010
<Block for 0x40027d, 34 bytes>
0x40027d:	lea	rdx, [rbp - 0x94]
0x400284:	mov	rax, qword ptr [rbp - 0x88]
0x40028b:	lea	rsi, [rip + 0x46d]
0x400292:	mov	rdi, rax
0x400295:	mov	eax, 0
0x40029a:	call	0x500020
<Block for 0x40026f, 12 bytes>
0x40026f:	lea	rdi, [rip + 0x48c]
0x400276:	call	0x500038
<Block for 0x400230, 11 bytes>
0x400230:	mov	qword ptr [rbp - 0x78], rax
0x400234:	cmp	qword ptr [rbp - 0x78], 0
0x400239:	je	0x400264
<Block for 0x40029f, 5 bytes>
0x40029f:	cmp	eax, 1
0x4002a2:	jne	0x4002f0
<Block for 0x40027b, 2 bytes>
0x40027b:	jmp	0x4002f0
<Block for 0x40023b, 41 bytes>
0x40023b:	mov	eax, 0x63
0x400240:	sub	rax, qword ptr [rbp - 0x80]
0x400244:	mov	rdx, rax
0x400247:	mov	rcx, qword ptr [rbp - 0x88]
0x40024e:	mov	rax, qword ptr [rbp - 0x80]
0x400252:	add	rcx, rax
0x400255:	mov	rax, qword ptr [rbp - 0x78]
0x400259:	mov	rsi, rax
0x40025c:	mov	rdi, rcx
0x40025f:	call	0x500018
<Block for 0x4002a4, 13 bytes>
0x4002a4:	mov	eax, dword ptr [rbp - 0x94]
0x4002aa:	cmp	eax, 0x270f
0x4002af:	jg	0x4002f0
<Block for 0x4002f0, 16 bytes>
0x4002f0:	nop	
0x4002f1:	mov	rax, qword ptr [rbp - 8]
0x4002f5:	xor	rax, qword ptr fs:[0x28]
0x4002fe:	je	0x400305
<Block for 0x4002b1, 22 bytes>
0x4002b1:	mov	dword ptr [rbp - 0x8c], 0
0x4002bb:	mov	dword ptr [rbp - 0x90], 0
0x4002c5:	jmp	0x4002d5
<Block for 0x400305, 2 bytes>
0x400305:	leave	
0x400306:	ret	
<Block for 0x400300, 5 bytes>
0x400300:	call	0x500030
<Block for 0x4002d5, 14 bytes>
0x4002d5:	mov	eax, dword ptr [rbp - 0x94]
0x4002db:	cmp	dword ptr [rbp - 0x90], eax
0x4002e1:	jl	0x4002c7
<Block for 0x4002c7, 28 bytes>
0x4002c7:	add	dword ptr [rbp - 0x8c], 1
0x4002ce:	add	dword ptr [rbp - 0x90], 1
0x4002d5:	mov	eax, dword ptr [rbp - 0x94]
0x4002db:	cmp	dword ptr [rbp - 0x90], eax
0x4002e1:	jl	0x4002c7
<Block for 0x4002e3, 13 bytes>
0x4002e3:	mov	eax, dword ptr [rbp - 0x8c]
0x4002e9:	mov	edi, eax
0x4002eb:	call	0x500028
