<Block for 0x4000a7, 65 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	sub	rsp, 0x40
0x4000b3:	mov	rax, qword ptr fs:[0x28]
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	xor	eax, eax
0x4000c2:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000c9:	mov	rax, qword ptr [rip + 0xfff30]
0x4000d0:	lea	rdx, [rbp - 0x34]
0x4000d4:	lea	rsi, [rip + 0x12d]
0x4000db:	mov	rdi, rax
0x4000de:	mov	eax, 0
0x4000e3:	call	0x500008
<Block for 0x4000e8, 48 bytes>
0x4000e8:	nop	
0x4000e9:	mov	qword ptr [rbp - 0x30], 0
0x4000f1:	mov	qword ptr [rbp - 0x28], 0
0x4000f9:	mov	qword ptr [rbp - 0x20], 0
0x400101:	mov	qword ptr [rbp - 0x18], 0
0x400109:	mov	qword ptr [rbp - 0x10], 0
0x400111:	mov	eax, dword ptr [rbp - 0x34]
0x400114:	test	eax, eax
0x400116:	js	0x400132
<Block for 0x400132, 12 bytes>
0x400132:	lea	rdi, [rip + 0xf7]
0x400139:	call	0x500018
<Block for 0x400118, 8 bytes>
0x400118:	mov	eax, dword ptr [rbp - 0x34]
0x40011b:	cmp	eax, 9
0x40011e:	jg	0x400132
<Block for 0x40013e, 17 bytes>
0x40013e:	nop	
0x40013f:	nop	
0x400140:	mov	rax, qword ptr [rbp - 8]
0x400144:	xor	rax, qword ptr fs:[0x28]
0x40014d:	je	0x400154
<Block for 0x400120, 16 bytes>
0x400120:	mov	eax, dword ptr [rbp - 0x34]
0x400123:	cdqe	
0x400125:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400129:	mov	edi, eax
0x40012b:	call	0x500010
<Block for 0x400154, 2 bytes>
0x400154:	leave	
0x400155:	ret	
<Block for 0x40014f, 5 bytes>
0x40014f:	call	0x500020
<Block for 0x400130, 2 bytes>
0x400130:	jmp	0x40013e
