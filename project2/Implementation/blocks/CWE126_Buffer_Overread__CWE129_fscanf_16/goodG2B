<Block for 0x400156, 88 bytes>
0x400156:	endbr64	
0x40015a:	push	rbp
0x40015b:	mov	rbp, rsp
0x40015e:	sub	rsp, 0x40
0x400162:	mov	rax, qword ptr fs:[0x28]
0x40016b:	mov	qword ptr [rbp - 8], rax
0x40016f:	xor	eax, eax
0x400171:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400178:	mov	dword ptr [rbp - 0x34], 7
0x40017f:	nop	
0x400180:	mov	qword ptr [rbp - 0x30], 0
0x400188:	mov	qword ptr [rbp - 0x28], 0
0x400190:	mov	qword ptr [rbp - 0x20], 0
0x400198:	mov	qword ptr [rbp - 0x18], 0
0x4001a0:	mov	qword ptr [rbp - 0x10], 0
0x4001a8:	cmp	dword ptr [rbp - 0x34], 0
0x4001ac:	js	0x4001c0
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rdi, [rip + 0x49]
0x4001c7:	call	0x500018
<Block for 0x4001ae, 16 bytes>
0x4001ae:	mov	eax, dword ptr [rbp - 0x34]
0x4001b1:	cdqe	
0x4001b3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001b7:	mov	edi, eax
0x4001b9:	call	0x500010
<Block for 0x4001cc, 17 bytes>
0x4001cc:	nop	
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x4001be, 2 bytes>
0x4001be:	jmp	0x4001cc
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500020
