<Block for 0x400000, 32 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	call	0x500000
<Block for 0x400020, 9 bytes>
0x400020:	test	eax, eax
0x400022:	setne	al
0x400025:	test	al, al
0x400027:	je	0x40006e
<Block for 0x40006e, 24 bytes>
0x40006e:	mov	dword ptr [rbp - 0x18], 1
0x400075:	mov	dword ptr [rbp - 0x14], 2
0x40007c:	mov	edi, 8
0x400081:	call	0x500008
<Block for 0x400029, 10 bytes>
0x400029:	mov	edi, 8
0x40002e:	call	0x500008
<Block for 0x400086, 36 bytes>
0x400086:	mov	qword ptr [rbp - 0x28], rax
0x40008a:	mov	rax, qword ptr [rbp - 0x28]
0x40008e:	mov	rdx, qword ptr [rbp - 0x18]
0x400092:	mov	qword ptr [rax], rdx
0x400095:	mov	rax, qword ptr [rbp - 0x28]
0x400099:	mov	rax, qword ptr [rax]
0x40009c:	mov	qword ptr [rbp - 0x10], rax
0x4000a0:	mov	eax, dword ptr [rbp - 0x10]
0x4000a3:	mov	edi, eax
0x4000a5:	call	0x500018
<Block for 0x400033, 24 bytes>
0x400033:	mov	qword ptr [rbp - 0x20], rax
0x400037:	mov	rax, qword ptr [rbp - 0x20]
0x40003b:	mov	rax, qword ptr [rax]
0x40003e:	mov	qword ptr [rbp - 0x10], rax
0x400042:	mov	rax, qword ptr [rbp - 0x20]
0x400046:	test	rax, rax
0x400049:	je	0x400058
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	eax, dword ptr [rbp - 0xc]
0x4000ad:	mov	edi, eax
0x4000af:	call	0x500018
<Block for 0x400058, 10 bytes>
0x400058:	mov	eax, dword ptr [rbp - 0x10]
0x40005b:	mov	edi, eax
0x40005d:	call	0x500018
<Block for 0x40004b, 13 bytes>
0x40004b:	mov	esi, 8
0x400050:	mov	rdi, rax
0x400053:	call	0x500010
<Block for 0x4000b4, 9 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 0x28]
0x4000b8:	test	rax, rax
0x4000bb:	je	0x4000ca
<Block for 0x400062, 10 bytes>
0x400062:	mov	eax, dword ptr [rbp - 0xc]
0x400065:	mov	edi, eax
0x400067:	call	0x500018
<Block for 0x4000ca, 16 bytes>
0x4000ca:	nop	
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	xor	rax, qword ptr fs:[0x28]
0x4000d8:	je	0x4000df
<Block for 0x4000bd, 13 bytes>
0x4000bd:	mov	esi, 8
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500010
<Block for 0x40006c, 2 bytes>
0x40006c:	jmp	0x4000ca
<Block for 0x4000df, 2 bytes>
0x4000df:	leave	
0x4000e0:	ret	
<Block for 0x4000da, 5 bytes>
0x4000da:	call	0x500020
