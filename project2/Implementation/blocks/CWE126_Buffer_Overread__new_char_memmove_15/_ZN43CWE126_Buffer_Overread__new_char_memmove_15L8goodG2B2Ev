<Block for 0x400192, 45 bytes>
0x400192:	endbr64	
0x400196:	push	rbp
0x400197:	mov	rbp, rsp
0x40019a:	add	rsp, -0x80
0x40019e:	mov	rax, qword ptr fs:[0x28]
0x4001a7:	mov	qword ptr [rbp - 8], rax
0x4001ab:	xor	eax, eax
0x4001ad:	mov	qword ptr [rbp - 0x78], 0
0x4001b5:	mov	edi, 0x64
0x4001ba:	call	0x500000
<Block for 0x4001bf, 26 bytes>
0x4001bf:	mov	qword ptr [rbp - 0x78], rax
0x4001c3:	mov	rax, qword ptr [rbp - 0x78]
0x4001c7:	mov	edx, 0x63
0x4001cc:	mov	esi, 0x41
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500008
<Block for 0x4001d9, 34 bytes>
0x4001d9:	mov	rax, qword ptr [rbp - 0x78]
0x4001dd:	add	rax, 0x63
0x4001e1:	mov	byte ptr [rax], 0
0x4001e4:	nop	
0x4001e5:	lea	rax, [rbp - 0x70]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x43
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500008
<Block for 0x4001fb, 16 bytes>
0x4001fb:	mov	byte ptr [rbp - 0xd], 0
0x4001ff:	lea	rax, [rbp - 0x70]
0x400203:	mov	rdi, rax
0x400206:	call	0x500010
<Block for 0x40020b, 22 bytes>
0x40020b:	mov	rdx, rax
0x40020e:	mov	rcx, qword ptr [rbp - 0x78]
0x400212:	lea	rax, [rbp - 0x70]
0x400216:	mov	rsi, rcx
0x400219:	mov	rdi, rax
0x40021c:	call	0x500018
<Block for 0x400221, 16 bytes>
0x400221:	mov	byte ptr [rbp - 0xd], 0
0x400225:	lea	rax, [rbp - 0x70]
0x400229:	mov	rdi, rax
0x40022c:	call	0x500020
<Block for 0x400231, 7 bytes>
0x400231:	cmp	qword ptr [rbp - 0x78], 0
0x400236:	je	0x400244
<Block for 0x400244, 16 bytes>
0x400244:	nop	
0x400245:	mov	rax, qword ptr [rbp - 8]
0x400249:	xor	rax, qword ptr fs:[0x28]
0x400252:	je	0x400259
<Block for 0x400238, 12 bytes>
0x400238:	mov	rax, qword ptr [rbp - 0x78]
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500028
<Block for 0x400259, 2 bytes>
0x400259:	leave	
0x40025a:	ret	
<Block for 0x400254, 5 bytes>
0x400254:	call	0x500030
