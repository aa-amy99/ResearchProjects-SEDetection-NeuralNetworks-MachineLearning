<Block for 0x4000d4, 55 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0x130
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	lea	rax, [rbp - 0x120]
0x4000f9:	mov	edx, 0x31
0x4000fe:	mov	esi, 0x41
0x400103:	mov	rdi, rax
0x400106:	call	0x500000
<Block for 0x40010b, 32 bytes>
0x40010b:	mov	byte ptr [rbp - 0xef], 0
0x400112:	lea	rax, [rbp - 0xe0]
0x400119:	mov	edx, 0x63
0x40011e:	mov	esi, 0x41
0x400123:	mov	rdi, rax
0x400126:	call	0x500000
<Block for 0x40012b, 45 bytes>
0x40012b:	mov	byte ptr [rbp - 0x7d], 0
0x40012f:	nop	
0x400130:	endbr64	
0x400134:	lea	rax, [rbp - 0xe0]
0x40013b:	mov	qword ptr [rbp - 0x128], rax
0x400142:	lea	rax, [rbp - 0x70]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x43
0x400150:	mov	rdi, rax
0x400153:	call	0x500000
<Block for 0x400158, 16 bytes>
0x400158:	mov	byte ptr [rbp - 0xd], 0
0x40015c:	lea	rax, [rbp - 0x70]
0x400160:	mov	rdi, rax
0x400163:	call	0x500008
<Block for 0x400168, 25 bytes>
0x400168:	mov	rdx, rax
0x40016b:	mov	rcx, qword ptr [rbp - 0x128]
0x400172:	lea	rax, [rbp - 0x70]
0x400176:	mov	rsi, rcx
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400181, 16 bytes>
0x400181:	mov	byte ptr [rbp - 0xd], 0
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500018
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500020
