<Block for 0x4000a0, 57 bytes>
0x4000a0:	endbr64	
0x4000a4:	push	rbp
0x4000a5:	mov	rbp, rsp
0x4000a8:	sub	rsp, 0x90
0x4000af:	mov	qword ptr [rbp - 0x88], rdi
0x4000b6:	mov	rax, qword ptr fs:[0x28]
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	xor	eax, eax
0x4000c5:	mov	rax, qword ptr [rbp - 0x88]
0x4000cc:	mov	esi, 2
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x400142
<Block for 0x4000d9, 29 bytes>
0x4000d9:	mov	rax, qword ptr [rax]
0x4000dc:	mov	qword ptr [rbp - 0x78], rax
0x4000e0:	lea	rax, [rbp - 0x70]
0x4000e4:	mov	edx, 0x63
0x4000e9:	mov	esi, 0x43
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500000
<Block for 0x4000f6, 28 bytes>
0x4000f6:	mov	byte ptr [rbp - 0xd], 0
0x4000fa:	lea	rcx, [rbp - 0x70]
0x4000fe:	mov	rax, qword ptr [rbp - 0x78]
0x400102:	mov	edx, 0x64
0x400107:	mov	rsi, rcx
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500008
<Block for 0x400112, 23 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x78]
0x400116:	add	rax, 0x63
0x40011a:	mov	byte ptr [rax], 0
0x40011d:	mov	rax, qword ptr [rbp - 0x78]
0x400121:	mov	rdi, rax
0x400124:	call	0x500010
<Block for 0x400129, 16 bytes>
0x400129:	nop	
0x40012a:	mov	rax, qword ptr [rbp - 8]
0x40012e:	xor	rax, qword ptr fs:[0x28]
0x400137:	je	0x40013e
<Block for 0x40013e, 2 bytes>
0x40013e:	leave	
0x40013f:	ret	
<Block for 0x400139, 5 bytes>
0x400139:	call	0x500018
