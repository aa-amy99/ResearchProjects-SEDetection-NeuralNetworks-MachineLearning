<Block for 0x4001d3, 37 bytes>
0x4001d3:	endbr64	
0x4001d7:	push	rbp
0x4001d8:	mov	rbp, rsp
0x4001db:	sub	rsp, 0x50
0x4001df:	mov	rax, qword ptr fs:[0x28]
0x4001e8:	mov	qword ptr [rbp - 8], rax
0x4001ec:	xor	eax, eax
0x4001ee:	mov	edi, 0x64
0x4001f3:	call	0x500000
<Block for 0x4001f8, 11 bytes>
0x4001f8:	mov	qword ptr [rbp - 0x38], rax
0x4001fc:	cmp	qword ptr [rbp - 0x38], 0
0x400201:	jne	0x40020d
<Block for 0x400203, 10 bytes>
0x400203:	mov	edi, 0xffffffff
0x400208:	call	0x500008
<Block for 0x40020d, 26 bytes>
0x40020d:	mov	rax, qword ptr [rbp - 0x38]
0x400211:	mov	byte ptr [rax], 0
0x400214:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40021b:	mov	rax, qword ptr [rbp - 0x38]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x400227, 24 bytes>
0x400227:	mov	qword ptr [rbp - 0x30], rax
0x40022b:	mov	edx, 6
0x400230:	mov	esi, 1
0x400235:	mov	edi, 2
0x40023a:	call	0x500018
<Block for 0x40023f, 13 bytes>
0x40023f:	mov	dword ptr [rbp - 0x48], eax
0x400242:	cmp	dword ptr [rbp - 0x48], -1
0x400246:	je	0x400339
<Block for 0x400339, 3 bytes>
0x400339:	nop	
0x40033a:	jmp	0x40033d
<Block for 0x40024c, 22 bytes>
0x40024c:	lea	rax, [rbp - 0x20]
0x400250:	mov	edx, 0x10
0x400255:	mov	esi, 0
0x40025a:	mov	rdi, rax
0x40025d:	call	0x500020
<Block for 0x40033d, 6 bytes>
0x40033d:	cmp	dword ptr [rbp - 0x48], -1
0x400341:	je	0x40034d
<Block for 0x400262, 18 bytes>
0x400262:	mov	word ptr [rbp - 0x20], 2
0x400268:	lea	rdi, [rip + 0x369]
0x40026f:	call	0x500028
<Block for 0x40034d, 11 bytes>
0x40034d:	mov	eax, dword ptr [rip + 0x281]
0x400353:	cmp	eax, 5
0x400356:	je	0x400366
<Block for 0x400343, 10 bytes>
0x400343:	mov	eax, dword ptr [rbp - 0x48]
0x400346:	mov	edi, eax
0x400348:	call	0x500050
<Block for 0x400274, 13 bytes>
0x400274:	mov	dword ptr [rbp - 0x1c], eax
0x400277:	mov	edi, 0x6987
0x40027c:	call	0x500030
<Block for 0x400366, 10 bytes>
0x400366:	mov	qword ptr [rbp - 0x40], 0
0x40036e:	jmp	0x400395
<Block for 0x400358, 12 bytes>
0x400358:	lea	rdi, [rip + 0x294]
0x40035f:	call	0x500058
<Block for 0x400281, 26 bytes>
0x400281:	mov	word ptr [rbp - 0x1e], ax
0x400285:	lea	rcx, [rbp - 0x20]
0x400289:	mov	eax, dword ptr [rbp - 0x48]
0x40028c:	mov	edx, 0x10
0x400291:	mov	rsi, rcx
0x400294:	mov	edi, eax
0x400296:	call	0x500038
<Block for 0x400395, 12 bytes>
0x400395:	mov	rax, qword ptr [rbp - 0x38]
0x400399:	mov	rdi, rax
0x40039c:	call	0x500010
<Block for 0x400364, 2 bytes>
0x400364:	jmp	0x4003b3
<Block for 0x40029b, 9 bytes>
0x40029b:	cmp	eax, -1
0x40029e:	je	0x40033c
<Block for 0x4003a1, 6 bytes>
0x4003a1:	cmp	qword ptr [rbp - 0x40], rax
0x4003a5:	jb	0x400370
<Block for 0x4003b3, 16 bytes>
0x4003b3:	nop	
0x4003b4:	mov	rax, qword ptr [rbp - 8]
0x4003b8:	xor	rax, qword ptr fs:[0x28]
0x4003c1:	je	0x4003c8
<Block for 0x4002a4, 39 bytes>
0x4002a4:	mov	eax, 0x63
0x4002a9:	sub	rax, qword ptr [rbp - 0x30]
0x4002ad:	mov	rdx, rax
0x4002b0:	mov	rcx, qword ptr [rbp - 0x38]
0x4002b4:	mov	rax, qword ptr [rbp - 0x30]
0x4002b8:	lea	rsi, [rcx + rax]
0x4002bc:	mov	eax, dword ptr [rbp - 0x48]
0x4002bf:	mov	ecx, 0
0x4002c4:	mov	edi, eax
0x4002c6:	call	0x500040
<Block for 0x40033c, 1 bytes>
0x40033c:	nop	
<Block for 0x400370, 18 bytes>
0x400370:	mov	rdx, qword ptr [rbp - 0x38]
0x400374:	mov	rax, qword ptr [rbp - 0x40]
0x400378:	add	rax, rdx
0x40037b:	movzx	eax, byte ptr [rax]
0x40037e:	cmp	al, 0x53
0x400380:	jne	0x400390
<Block for 0x4003a7, 12 bytes>
0x4003a7:	mov	rax, qword ptr [rbp - 0x38]
0x4003ab:	mov	rdi, rax
0x4003ae:	call	0x500060
<Block for 0x4003c8, 2 bytes>
0x4003c8:	leave	
0x4003c9:	ret	
<Block for 0x4003c3, 5 bytes>
0x4003c3:	call	0x500068
<Block for 0x4002cb, 9 bytes>
0x4002cb:	mov	dword ptr [rbp - 0x44], eax
0x4002ce:	cmp	dword ptr [rbp - 0x44], -1
0x4002d2:	je	0x40033d
<Block for 0x400382, 12 bytes>
0x400382:	lea	rdi, [rip + 0x259]
0x400389:	call	0x500058
<Block for 0x400390, 17 bytes>
0x400390:	add	qword ptr [rbp - 0x40], 1
0x400395:	mov	rax, qword ptr [rbp - 0x38]
0x400399:	mov	rdi, rax
0x40039c:	call	0x500010
<Block for 0x4002d4, 6 bytes>
0x4002d4:	cmp	dword ptr [rbp - 0x44], 0
0x4002d8:	je	0x40033d
<Block for 0x40038e, 2 bytes>
0x40038e:	jmp	0x4003a7
<Block for 0x4002da, 40 bytes>
0x4002da:	mov	eax, dword ptr [rbp - 0x44]
0x4002dd:	movsxd	rdx, eax
0x4002e0:	mov	rax, qword ptr [rbp - 0x30]
0x4002e4:	add	rdx, rax
0x4002e7:	mov	rax, qword ptr [rbp - 0x38]
0x4002eb:	add	rax, rdx
0x4002ee:	mov	byte ptr [rax], 0
0x4002f1:	mov	rax, qword ptr [rbp - 0x38]
0x4002f5:	mov	esi, 0xd
0x4002fa:	mov	rdi, rax
0x4002fd:	call	0x500048
<Block for 0x400302, 11 bytes>
0x400302:	mov	qword ptr [rbp - 0x28], rax
0x400306:	cmp	qword ptr [rbp - 0x28], 0
0x40030b:	je	0x400314
<Block for 0x400314, 17 bytes>
0x400314:	mov	rax, qword ptr [rbp - 0x38]
0x400318:	mov	esi, 0xa
0x40031d:	mov	rdi, rax
0x400320:	call	0x500048
<Block for 0x40030d, 24 bytes>
0x40030d:	mov	rax, qword ptr [rbp - 0x28]
0x400311:	mov	byte ptr [rax], 0
0x400314:	mov	rax, qword ptr [rbp - 0x38]
0x400318:	mov	esi, 0xa
0x40031d:	mov	rdi, rax
0x400320:	call	0x500048
<Block for 0x400325, 11 bytes>
0x400325:	mov	qword ptr [rbp - 0x28], rax
0x400329:	cmp	qword ptr [rbp - 0x28], 0
0x40032e:	je	0x40033d
<Block for 0x400330, 9 bytes>
0x400330:	mov	rax, qword ptr [rbp - 0x28]
0x400334:	mov	byte ptr [rax], 0
0x400337:	jmp	0x40033d
