<Block for 0x4003ca, 37 bytes>
0x4003ca:	endbr64	
0x4003ce:	push	rbp
0x4003cf:	mov	rbp, rsp
0x4003d2:	sub	rsp, 0x50
0x4003d6:	mov	rax, qword ptr fs:[0x28]
0x4003df:	mov	qword ptr [rbp - 8], rax
0x4003e3:	xor	eax, eax
0x4003e5:	mov	edi, 0x64
0x4003ea:	call	0x500000
<Block for 0x4003ef, 11 bytes>
0x4003ef:	mov	qword ptr [rbp - 0x38], rax
0x4003f3:	cmp	qword ptr [rbp - 0x38], 0
0x4003f8:	jne	0x400404
<Block for 0x4003fa, 10 bytes>
0x4003fa:	mov	edi, 0xffffffff
0x4003ff:	call	0x500008
<Block for 0x400404, 26 bytes>
0x400404:	mov	rax, qword ptr [rbp - 0x38]
0x400408:	mov	byte ptr [rax], 0
0x40040b:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400412:	mov	rax, qword ptr [rbp - 0x38]
0x400416:	mov	rdi, rax
0x400419:	call	0x500010
<Block for 0x40041e, 24 bytes>
0x40041e:	mov	qword ptr [rbp - 0x30], rax
0x400422:	mov	edx, 6
0x400427:	mov	esi, 1
0x40042c:	mov	edi, 2
0x400431:	call	0x500018
<Block for 0x400436, 13 bytes>
0x400436:	mov	dword ptr [rbp - 0x48], eax
0x400439:	cmp	dword ptr [rbp - 0x48], -1
0x40043d:	je	0x400530
<Block for 0x400530, 3 bytes>
0x400530:	nop	
0x400531:	jmp	0x400534
<Block for 0x400443, 22 bytes>
0x400443:	lea	rax, [rbp - 0x20]
0x400447:	mov	edx, 0x10
0x40044c:	mov	esi, 0
0x400451:	mov	rdi, rax
0x400454:	call	0x500020
<Block for 0x400534, 6 bytes>
0x400534:	cmp	dword ptr [rbp - 0x48], -1
0x400538:	je	0x400544
<Block for 0x400459, 18 bytes>
0x400459:	mov	word ptr [rbp - 0x20], 2
0x40045f:	lea	rdi, [rip + 0x172]
0x400466:	call	0x500028
<Block for 0x400544, 11 bytes>
0x400544:	mov	eax, dword ptr [rip + 0x8a]
0x40054a:	cmp	eax, 5
0x40054d:	jne	0x40059c
<Block for 0x40053a, 10 bytes>
0x40053a:	mov	eax, dword ptr [rbp - 0x48]
0x40053d:	mov	edi, eax
0x40053f:	call	0x500050
<Block for 0x40046b, 13 bytes>
0x40046b:	mov	dword ptr [rbp - 0x1c], eax
0x40046e:	mov	edi, 0x6987
0x400473:	call	0x500030
<Block for 0x40054f, 10 bytes>
0x40054f:	mov	qword ptr [rbp - 0x40], 0
0x400557:	jmp	0x40057e
<Block for 0x40059c, 16 bytes>
0x40059c:	nop	
0x40059d:	mov	rax, qword ptr [rbp - 8]
0x4005a1:	xor	rax, qword ptr fs:[0x28]
0x4005aa:	je	0x4005b1
<Block for 0x400478, 26 bytes>
0x400478:	mov	word ptr [rbp - 0x1e], ax
0x40047c:	lea	rcx, [rbp - 0x20]
0x400480:	mov	eax, dword ptr [rbp - 0x48]
0x400483:	mov	edx, 0x10
0x400488:	mov	rsi, rcx
0x40048b:	mov	edi, eax
0x40048d:	call	0x500038
<Block for 0x40057e, 12 bytes>
0x40057e:	mov	rax, qword ptr [rbp - 0x38]
0x400582:	mov	rdi, rax
0x400585:	call	0x500010
<Block for 0x4005b1, 2 bytes>
0x4005b1:	leave	
0x4005b2:	ret	
<Block for 0x4005ac, 5 bytes>
0x4005ac:	call	0x500068
<Block for 0x400492, 9 bytes>
0x400492:	cmp	eax, -1
0x400495:	je	0x400533
<Block for 0x40058a, 6 bytes>
0x40058a:	cmp	qword ptr [rbp - 0x40], rax
0x40058e:	jb	0x400559
<Block for 0x40049b, 39 bytes>
0x40049b:	mov	eax, 0x63
0x4004a0:	sub	rax, qword ptr [rbp - 0x30]
0x4004a4:	mov	rdx, rax
0x4004a7:	mov	rcx, qword ptr [rbp - 0x38]
0x4004ab:	mov	rax, qword ptr [rbp - 0x30]
0x4004af:	lea	rsi, [rcx + rax]
0x4004b3:	mov	eax, dword ptr [rbp - 0x48]
0x4004b6:	mov	ecx, 0
0x4004bb:	mov	edi, eax
0x4004bd:	call	0x500040
<Block for 0x400533, 1 bytes>
0x400533:	nop	
<Block for 0x400559, 18 bytes>
0x400559:	mov	rdx, qword ptr [rbp - 0x38]
0x40055d:	mov	rax, qword ptr [rbp - 0x40]
0x400561:	add	rax, rdx
0x400564:	movzx	eax, byte ptr [rax]
0x400567:	cmp	al, 0x53
0x400569:	jne	0x400579
<Block for 0x400590, 12 bytes>
0x400590:	mov	rax, qword ptr [rbp - 0x38]
0x400594:	mov	rdi, rax
0x400597:	call	0x500060
<Block for 0x4004c2, 9 bytes>
0x4004c2:	mov	dword ptr [rbp - 0x44], eax
0x4004c5:	cmp	dword ptr [rbp - 0x44], -1
0x4004c9:	je	0x400534
<Block for 0x40056b, 12 bytes>
0x40056b:	lea	rdi, [rip + 0x70]
0x400572:	call	0x500058
<Block for 0x400579, 17 bytes>
0x400579:	add	qword ptr [rbp - 0x40], 1
0x40057e:	mov	rax, qword ptr [rbp - 0x38]
0x400582:	mov	rdi, rax
0x400585:	call	0x500010
<Block for 0x4004cb, 6 bytes>
0x4004cb:	cmp	dword ptr [rbp - 0x44], 0
0x4004cf:	je	0x400534
<Block for 0x400577, 2 bytes>
0x400577:	jmp	0x400590
<Block for 0x4004d1, 40 bytes>
0x4004d1:	mov	eax, dword ptr [rbp - 0x44]
0x4004d4:	movsxd	rdx, eax
0x4004d7:	mov	rax, qword ptr [rbp - 0x30]
0x4004db:	add	rdx, rax
0x4004de:	mov	rax, qword ptr [rbp - 0x38]
0x4004e2:	add	rax, rdx
0x4004e5:	mov	byte ptr [rax], 0
0x4004e8:	mov	rax, qword ptr [rbp - 0x38]
0x4004ec:	mov	esi, 0xd
0x4004f1:	mov	rdi, rax
0x4004f4:	call	0x500048
<Block for 0x4004f9, 11 bytes>
0x4004f9:	mov	qword ptr [rbp - 0x28], rax
0x4004fd:	cmp	qword ptr [rbp - 0x28], 0
0x400502:	je	0x40050b
<Block for 0x40050b, 17 bytes>
0x40050b:	mov	rax, qword ptr [rbp - 0x38]
0x40050f:	mov	esi, 0xa
0x400514:	mov	rdi, rax
0x400517:	call	0x500048
<Block for 0x400504, 24 bytes>
0x400504:	mov	rax, qword ptr [rbp - 0x28]
0x400508:	mov	byte ptr [rax], 0
0x40050b:	mov	rax, qword ptr [rbp - 0x38]
0x40050f:	mov	esi, 0xa
0x400514:	mov	rdi, rax
0x400517:	call	0x500048
<Block for 0x40051c, 11 bytes>
0x40051c:	mov	qword ptr [rbp - 0x28], rax
0x400520:	cmp	qword ptr [rbp - 0x28], 0
0x400525:	je	0x400534
<Block for 0x400527, 9 bytes>
0x400527:	mov	rax, qword ptr [rbp - 0x28]
0x40052b:	mov	byte ptr [rax], 0
0x40052e:	jmp	0x400534
