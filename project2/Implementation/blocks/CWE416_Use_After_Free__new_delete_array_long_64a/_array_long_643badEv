<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	edi, 0x320
0x400028:	call	0x500000
<Block for 0x40002d, 19 bytes>
0x40002d:	mov	qword ptr [rbp - 0x18], rax
0x400031:	mov	qword ptr [rbp - 0x10], 0
0x400039:	cmp	qword ptr [rbp - 0x10], 0x63
0x40003e:	ja	0x40005d
<Block for 0x400040, 29 bytes>
0x400040:	mov	rax, qword ptr [rbp - 0x18]
0x400044:	mov	rdx, qword ptr [rbp - 0x10]
0x400048:	shl	rdx, 3
0x40004c:	add	rax, rdx
0x40004f:	mov	qword ptr [rax], 5
0x400056:	add	qword ptr [rbp - 0x10], 1
0x40005b:	jmp	0x400039
<Block for 0x40005d, 9 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0x18]
0x400061:	test	rax, rax
0x400064:	je	0x400072
<Block for 0x400039, 7 bytes>
0x400039:	cmp	qword ptr [rbp - 0x10], 0x63
0x40003e:	ja	0x40005d
<Block for 0x400072, 12 bytes>
0x400072:	lea	rax, [rbp - 0x18]
0x400076:	mov	rdi, rax
0x400079:	call	0x500010
<Block for 0x400066, 12 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0x18]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500008
<Block for 0x40007e, 16 bytes>
0x40007e:	nop	
0x40007f:	mov	rax, qword ptr [rbp - 8]
0x400083:	xor	rax, qword ptr fs:[0x28]
0x40008c:	je	0x400093
<Block for 0x400093, 2 bytes>
0x400093:	leave	
0x400094:	ret	
<Block for 0x40008e, 5 bytes>
0x40008e:	call	0x500018
