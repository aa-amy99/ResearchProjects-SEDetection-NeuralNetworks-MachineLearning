<Block for 0x400096, 97 bytes>
0x400096:	endbr64	
0x40009a:	push	rbp
0x40009b:	mov	rbp, rsp
0x40009e:	sub	rsp, 0x40
0x4000a2:	mov	rax, qword ptr fs:[0x28]
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	xor	eax, eax
0x4000b1:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000b8:	nop	
0x4000b9:	endbr64	
0x4000bd:	mov	dword ptr [rbp - 0x34], 0xa
0x4000c4:	nop	
0x4000c5:	endbr64	
0x4000c9:	mov	qword ptr [rbp - 0x30], 0
0x4000d1:	mov	qword ptr [rbp - 0x28], 0
0x4000d9:	mov	qword ptr [rbp - 0x20], 0
0x4000e1:	mov	qword ptr [rbp - 0x18], 0
0x4000e9:	mov	qword ptr [rbp - 0x10], 0
0x4000f1:	cmp	dword ptr [rbp - 0x34], 0
0x4000f5:	js	0x40010f
<Block for 0x40010f, 12 bytes>
0x40010f:	lea	rdi, [rip + 0xf2]
0x400116:	call	0x500008
<Block for 0x4000f7, 6 bytes>
0x4000f7:	cmp	dword ptr [rbp - 0x34], 9
0x4000fb:	jg	0x40010f
<Block for 0x40011b, 16 bytes>
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x4000fd, 16 bytes>
0x4000fd:	mov	eax, dword ptr [rbp - 0x34]
0x400100:	cdqe	
0x400102:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400106:	mov	edi, eax
0x400108:	call	0x500000
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500010
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x40011b
