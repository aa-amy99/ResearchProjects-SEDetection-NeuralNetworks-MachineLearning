<Block for 0x400132, 97 bytes>
0x400132:	endbr64	
0x400136:	push	rbp
0x400137:	mov	rbp, rsp
0x40013a:	sub	rsp, 0x40
0x40013e:	mov	rax, qword ptr fs:[0x28]
0x400147:	mov	qword ptr [rbp - 8], rax
0x40014b:	xor	eax, eax
0x40014d:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400154:	nop	
0x400155:	endbr64	
0x400159:	mov	dword ptr [rbp - 0x34], 7
0x400160:	nop	
0x400161:	endbr64	
0x400165:	mov	qword ptr [rbp - 0x30], 0
0x40016d:	mov	qword ptr [rbp - 0x28], 0
0x400175:	mov	qword ptr [rbp - 0x20], 0
0x40017d:	mov	qword ptr [rbp - 0x18], 0
0x400185:	mov	qword ptr [rbp - 0x10], 0
0x40018d:	cmp	dword ptr [rbp - 0x34], 0
0x400191:	js	0x4001a5
<Block for 0x4001a5, 12 bytes>
0x4001a5:	lea	rdi, [rip + 0x3c]
0x4001ac:	call	0x500008
<Block for 0x400193, 16 bytes>
0x400193:	mov	eax, dword ptr [rbp - 0x34]
0x400196:	cdqe	
0x400198:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40019c:	mov	edi, eax
0x40019e:	call	0x500000
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001a3, 2 bytes>
0x4001a3:	jmp	0x4001b1
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500010
