<Block for 0x4000c4, 70 bytes>
0x4000c4:	endbr64	
0x4000c8:	push	rbp
0x4000c9:	mov	rbp, rsp
0x4000cc:	sub	rsp, 0xa0
0x4000d3:	mov	qword ptr [rbp - 0x98], rdi
0x4000da:	mov	rax, qword ptr fs:[0x28]
0x4000e3:	mov	qword ptr [rbp - 8], rax
0x4000e7:	xor	eax, eax
0x4000e9:	mov	rax, qword ptr [rbp - 0x98]
0x4000f0:	mov	qword ptr [rbp - 0x80], rax
0x4000f4:	lea	rax, [rbp - 0x70]
0x4000f8:	mov	edx, 0x63
0x4000fd:	mov	esi, 0x43
0x400102:	mov	rdi, rax
0x400105:	call	0x500000
<Block for 0x40010a, 16 bytes>
0x40010a:	mov	byte ptr [rbp - 0xd], 0
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x40011a, 17 bytes>
0x40011a:	mov	qword ptr [rbp - 0x78], rax
0x40011e:	mov	qword ptr [rbp - 0x88], 0
0x400129:	jmp	0x400154
<Block for 0x400154, 13 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x88]
0x40015b:	cmp	rax, qword ptr [rbp - 0x78]
0x40015f:	jb	0x40012b
<Block for 0x40012b, 54 bytes>
0x40012b:	mov	rdx, qword ptr [rbp - 0x80]
0x40012f:	mov	rax, qword ptr [rbp - 0x88]
0x400136:	add	rax, rdx
0x400139:	movzx	eax, byte ptr [rax]
0x40013c:	lea	rcx, [rbp - 0x70]
0x400140:	mov	rdx, qword ptr [rbp - 0x88]
0x400147:	add	rdx, rcx
0x40014a:	mov	byte ptr [rdx], al
0x40014c:	add	qword ptr [rbp - 0x88], 1
0x400154:	mov	rax, qword ptr [rbp - 0x88]
0x40015b:	cmp	rax, qword ptr [rbp - 0x78]
0x40015f:	jb	0x40012b
<Block for 0x400161, 16 bytes>
0x400161:	mov	byte ptr [rbp - 0xd], 0
0x400165:	lea	rax, [rbp - 0x70]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500010
<Block for 0x400171, 16 bytes>
0x400171:	nop	
0x400172:	mov	rax, qword ptr [rbp - 8]
0x400176:	xor	rax, qword ptr fs:[0x28]
0x40017f:	je	0x400186
<Block for 0x400186, 2 bytes>
0x400186:	leave	
0x400187:	ret	
<Block for 0x400181, 5 bytes>
0x400181:	call	0x500018
