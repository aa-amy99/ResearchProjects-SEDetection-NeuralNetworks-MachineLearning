<Block for 0x40009a, 52 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0xf0
0x4000a9:	mov	qword ptr [rbp - 0xe8], rdi
0x4000b0:	mov	rax, qword ptr fs:[0x28]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	xor	eax, eax
0x4000bf:	mov	rax, qword ptr [rbp - 0xe8]
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x400136
<Block for 0x4000ce, 35 bytes>
0x4000ce:	mov	rax, qword ptr [rax]
0x4000d1:	mov	qword ptr [rbp - 0xd8], rax
0x4000d8:	lea	rax, [rbp - 0xd0]
0x4000df:	mov	edx, 0xc7
0x4000e4:	mov	esi, 0x43
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500000
<Block for 0x4000f1, 29 bytes>
0x4000f1:	mov	byte ptr [rbp - 9], 0
0x4000f5:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000fc:	lea	rax, [rbp - 0xd0]
0x400103:	mov	rsi, rdx
0x400106:	mov	rdi, rax
0x400109:	call	0x500008
<Block for 0x40010e, 15 bytes>
0x40010e:	lea	rax, [rbp - 0xd0]
0x400115:	mov	rdi, rax
0x400118:	call	0x500010
<Block for 0x40011d, 16 bytes>
0x40011d:	nop	
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	xor	rax, qword ptr fs:[0x28]
0x40012b:	je	0x400132
<Block for 0x400132, 2 bytes>
0x400132:	leave	
0x400133:	ret	
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500018
