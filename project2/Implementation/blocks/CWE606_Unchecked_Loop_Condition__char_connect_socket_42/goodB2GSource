<Block for 0x40039b, 50 bytes>
0x40039b:	endbr64	
0x40039f:	push	rbp
0x4003a0:	mov	rbp, rsp
0x4003a3:	sub	rsp, 0x50
0x4003a7:	mov	qword ptr [rbp - 0x48], rdi
0x4003ab:	mov	rax, qword ptr fs:[0x28]
0x4003b4:	mov	qword ptr [rbp - 8], rax
0x4003b8:	xor	eax, eax
0x4003ba:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4003c1:	mov	rax, qword ptr [rbp - 0x48]
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x500000
<Block for 0x4003cd, 24 bytes>
0x4003cd:	mov	qword ptr [rbp - 0x30], rax
0x4003d1:	mov	edx, 6
0x4003d6:	mov	esi, 1
0x4003db:	mov	edi, 2
0x4003e0:	call	0x500008
<Block for 0x4003e5, 13 bytes>
0x4003e5:	mov	dword ptr [rbp - 0x38], eax
0x4003e8:	cmp	dword ptr [rbp - 0x38], -1
0x4003ec:	je	0x4004df
<Block for 0x4004df, 3 bytes>
0x4004df:	nop	
0x4004e0:	jmp	0x4004e3
<Block for 0x4003f2, 22 bytes>
0x4003f2:	lea	rax, [rbp - 0x20]
0x4003f6:	mov	edx, 0x10
0x4003fb:	mov	esi, 0
0x400400:	mov	rdi, rax
0x400403:	call	0x500010
<Block for 0x4004e3, 6 bytes>
0x4004e3:	cmp	dword ptr [rbp - 0x38], -1
0x4004e7:	je	0x4004f3
<Block for 0x400408, 18 bytes>
0x400408:	mov	word ptr [rbp - 0x20], 2
0x40040e:	lea	rdi, [rip + 0x229]
0x400415:	call	0x500018
<Block for 0x4004f3, 19 bytes>
0x4004f3:	mov	rax, qword ptr [rbp - 0x48]
0x4004f7:	mov	rcx, qword ptr [rbp - 8]
0x4004fb:	xor	rcx, qword ptr fs:[0x28]
0x400504:	je	0x40050b
<Block for 0x4004e9, 10 bytes>
0x4004e9:	mov	eax, dword ptr [rbp - 0x38]
0x4004ec:	mov	edi, eax
0x4004ee:	call	0x500040
<Block for 0x40041a, 13 bytes>
0x40041a:	mov	dword ptr [rbp - 0x1c], eax
0x40041d:	mov	edi, 0x6987
0x400422:	call	0x500020
<Block for 0x40050b, 2 bytes>
0x40050b:	leave	
0x40050c:	ret	
<Block for 0x400506, 5 bytes>
0x400506:	call	0x500048
<Block for 0x400427, 26 bytes>
0x400427:	mov	word ptr [rbp - 0x1e], ax
0x40042b:	lea	rcx, [rbp - 0x20]
0x40042f:	mov	eax, dword ptr [rbp - 0x38]
0x400432:	mov	edx, 0x10
0x400437:	mov	rsi, rcx
0x40043a:	mov	edi, eax
0x40043c:	call	0x500028
<Block for 0x400441, 9 bytes>
0x400441:	cmp	eax, -1
0x400444:	je	0x4004e2
<Block for 0x40044a, 39 bytes>
0x40044a:	mov	eax, 0x63
0x40044f:	sub	rax, qword ptr [rbp - 0x30]
0x400453:	mov	rdx, rax
0x400456:	mov	rcx, qword ptr [rbp - 0x48]
0x40045a:	mov	rax, qword ptr [rbp - 0x30]
0x40045e:	lea	rsi, [rcx + rax]
0x400462:	mov	eax, dword ptr [rbp - 0x38]
0x400465:	mov	ecx, 0
0x40046a:	mov	edi, eax
0x40046c:	call	0x500030
<Block for 0x4004e2, 1 bytes>
0x4004e2:	nop	
<Block for 0x400471, 9 bytes>
0x400471:	mov	dword ptr [rbp - 0x34], eax
0x400474:	cmp	dword ptr [rbp - 0x34], -1
0x400478:	je	0x4004e3
<Block for 0x40047a, 6 bytes>
0x40047a:	cmp	dword ptr [rbp - 0x34], 0
0x40047e:	je	0x4004e3
<Block for 0x400480, 40 bytes>
0x400480:	mov	eax, dword ptr [rbp - 0x34]
0x400483:	movsxd	rdx, eax
0x400486:	mov	rax, qword ptr [rbp - 0x30]
0x40048a:	add	rdx, rax
0x40048d:	mov	rax, qword ptr [rbp - 0x48]
0x400491:	add	rax, rdx
0x400494:	mov	byte ptr [rax], 0
0x400497:	mov	rax, qword ptr [rbp - 0x48]
0x40049b:	mov	esi, 0xd
0x4004a0:	mov	rdi, rax
0x4004a3:	call	0x500038
<Block for 0x4004a8, 11 bytes>
0x4004a8:	mov	qword ptr [rbp - 0x28], rax
0x4004ac:	cmp	qword ptr [rbp - 0x28], 0
0x4004b1:	je	0x4004ba
<Block for 0x4004ba, 17 bytes>
0x4004ba:	mov	rax, qword ptr [rbp - 0x48]
0x4004be:	mov	esi, 0xa
0x4004c3:	mov	rdi, rax
0x4004c6:	call	0x500038
<Block for 0x4004b3, 24 bytes>
0x4004b3:	mov	rax, qword ptr [rbp - 0x28]
0x4004b7:	mov	byte ptr [rax], 0
0x4004ba:	mov	rax, qword ptr [rbp - 0x48]
0x4004be:	mov	esi, 0xa
0x4004c3:	mov	rdi, rax
0x4004c6:	call	0x500038
<Block for 0x4004cb, 11 bytes>
0x4004cb:	mov	qword ptr [rbp - 0x28], rax
0x4004cf:	cmp	qword ptr [rbp - 0x28], 0
0x4004d4:	je	0x4004e3
<Block for 0x4004d6, 9 bytes>
0x4004d6:	mov	rax, qword ptr [rbp - 0x28]
0x4004da:	mov	byte ptr [rax], 0
0x4004dd:	jmp	0x4004e3
