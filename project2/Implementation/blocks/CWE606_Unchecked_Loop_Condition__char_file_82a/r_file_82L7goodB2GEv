<Block for 0x4002df, 160 bytes>
0x4002df:	endbr64	
0x4002e3:	push	rbp
0x4002e4:	mov	rbp, rsp
0x4002e7:	push	rbx
0x4002e8:	sub	rsp, 0x98
0x4002ef:	mov	rax, qword ptr fs:[0x28]
0x4002f8:	mov	qword ptr [rbp - 0x18], rax
0x4002fc:	xor	eax, eax
0x4002fe:	mov	qword ptr [rbp - 0x80], 0
0x400306:	mov	qword ptr [rbp - 0x78], 0
0x40030e:	mov	qword ptr [rbp - 0x70], 0
0x400316:	mov	qword ptr [rbp - 0x68], 0
0x40031e:	mov	qword ptr [rbp - 0x60], 0
0x400326:	mov	qword ptr [rbp - 0x58], 0
0x40032e:	mov	qword ptr [rbp - 0x50], 0
0x400336:	mov	qword ptr [rbp - 0x48], 0
0x40033e:	mov	qword ptr [rbp - 0x40], 0
0x400346:	mov	qword ptr [rbp - 0x38], 0
0x40034e:	mov	qword ptr [rbp - 0x30], 0
0x400356:	mov	qword ptr [rbp - 0x28], 0
0x40035e:	mov	dword ptr [rbp - 0x20], 0
0x400365:	lea	rax, [rbp - 0x80]
0x400369:	mov	qword ptr [rbp - 0xa0], rax
0x400370:	mov	rax, qword ptr [rbp - 0xa0]
0x400377:	mov	rdi, rax
0x40037a:	call	0x500000
<Block for 0x40037f, 29 bytes>
0x40037f:	mov	qword ptr [rbp - 0x98], rax
0x400386:	mov	eax, 0x64
0x40038b:	sub	rax, qword ptr [rbp - 0x98]
0x400392:	cmp	rax, 1
0x400396:	jbe	0x40042f
<Block for 0x40042f, 10 bytes>
0x40042f:	mov	edi, 8
0x400434:	call	0x500028
<Block for 0x40039c, 19 bytes>
0x40039c:	lea	rsi, [rip + 0x164]
0x4003a3:	lea	rdi, [rip + 0x15f]
0x4003aa:	call	0x500008
<Block for 0x400439, 11 bytes>
0x400439:	mov	rbx, rax
0x40043c:	mov	rdi, rbx
0x40043f:	call	0x400554
<Block for 0x4003af, 17 bytes>
0x4003af:	mov	qword ptr [rbp - 0x90], rax
0x4003b6:	cmp	qword ptr [rbp - 0x90], 0
0x4003be:	je	0x40042f
<Block for 0x400444, 42 bytes>
0x400444:	mov	qword ptr [rbp - 0x88], rbx
0x40044b:	mov	rax, qword ptr [rbp - 0x88]
0x400452:	mov	rax, qword ptr [rax]
0x400455:	mov	rcx, qword ptr [rax]
0x400458:	mov	rdx, qword ptr [rbp - 0xa0]
0x40045f:	mov	rax, qword ptr [rbp - 0x88]
0x400466:	mov	rsi, rdx
0x400469:	mov	rdi, rax
0x40046c:	call	rcx
<Block for 0x4003c0, 54 bytes>
0x4003c0:	mov	rax, qword ptr [rbp - 0x98]
0x4003c7:	mov	edx, 0x64
0x4003cc:	sub	edx, eax
0x4003ce:	mov	eax, edx
0x4003d0:	mov	esi, eax
0x4003d2:	mov	rdx, qword ptr [rbp - 0xa0]
0x4003d9:	mov	rax, qword ptr [rbp - 0x98]
0x4003e0:	lea	rcx, [rdx + rax]
0x4003e4:	mov	rax, qword ptr [rbp - 0x90]
0x4003eb:	mov	rdx, rax
0x4003ee:	mov	rdi, rcx
0x4003f1:	call	0x500010
<Block for 0x40046e, 12 bytes>
0x40046e:	mov	rax, qword ptr [rbp - 0x88]
0x400475:	test	rax, rax
0x400478:	je	0x400487
<Block for 0x4003f6, 10 bytes>
0x4003f6:	test	rax, rax
0x4003f9:	sete	al
0x4003fc:	test	al, al
0x4003fe:	je	0x400420
<Block for 0x400487, 16 bytes>
0x400487:	nop	
0x400488:	mov	rax, qword ptr [rbp - 0x18]
0x40048c:	xor	rax, qword ptr fs:[0x28]
0x400495:	je	0x40049c
<Block for 0x40047a, 13 bytes>
0x40047a:	mov	esi, 8
0x40047f:	mov	rdi, rax
0x400482:	call	0x500030
<Block for 0x400420, 15 bytes>
0x400420:	mov	rax, qword ptr [rbp - 0x90]
0x400427:	mov	rdi, rax
0x40042a:	call	0x500020
<Block for 0x400400, 12 bytes>
0x400400:	lea	rdi, [rip + 0x110]
0x400407:	call	0x500018
<Block for 0x40049c, 10 bytes>
0x40049c:	add	rsp, 0x98
0x4004a3:	pop	rbx
0x4004a4:	pop	rbp
0x4004a5:	ret	
<Block for 0x400497, 5 bytes>
0x400497:	call	0x500038
<Block for 0x40040c, 35 bytes>
0x40040c:	mov	rdx, qword ptr [rbp - 0xa0]
0x400413:	mov	rax, qword ptr [rbp - 0x98]
0x40041a:	add	rax, rdx
0x40041d:	mov	byte ptr [rax], 0
0x400420:	mov	rax, qword ptr [rbp - 0x90]
0x400427:	mov	rdi, rax
0x40042a:	call	0x500020
