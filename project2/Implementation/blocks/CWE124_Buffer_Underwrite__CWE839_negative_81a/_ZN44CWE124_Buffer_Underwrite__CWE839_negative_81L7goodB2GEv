<Block for 0x4000d6, 84 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	sub	rsp, 0x20
0x4000e2:	mov	rax, qword ptr fs:[0x28]
0x4000eb:	mov	qword ptr [rbp - 8], rax
0x4000ef:	xor	eax, eax
0x4000f1:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000f8:	mov	dword ptr [rbp - 0x1c], 0xfffffffb
0x4000ff:	lea	rax, [rip + 0xfff22]
0x400106:	mov	qword ptr [rbp - 0x18], rax
0x40010a:	lea	rax, [rbp - 0x18]
0x40010e:	mov	qword ptr [rbp - 0x10], rax
0x400112:	mov	rax, qword ptr [rbp - 0x10]
0x400116:	mov	rax, qword ptr [rax]
0x400119:	mov	rcx, qword ptr [rax]
0x40011c:	mov	edx, dword ptr [rbp - 0x1c]
0x40011f:	mov	rax, qword ptr [rbp - 0x10]
0x400123:	mov	esi, edx
0x400125:	mov	rdi, rax
0x400128:	call	rcx
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500008
