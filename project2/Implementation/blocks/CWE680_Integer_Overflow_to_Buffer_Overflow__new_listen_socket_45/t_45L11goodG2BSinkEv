<Block for 0x4001f1, 46 bytes>
0x4001f1:	endbr64	
0x4001f5:	push	rbp
0x4001f6:	mov	rbp, rsp
0x4001f9:	sub	rsp, 0x20
0x4001fd:	mov	eax, dword ptr [rip + 0xb5]
0x400203:	mov	dword ptr [rbp - 0x1c], eax
0x400206:	mov	eax, dword ptr [rbp - 0x1c]
0x400209:	cdqe	
0x40020b:	shl	rax, 2
0x40020f:	mov	qword ptr [rbp - 0x10], rax
0x400213:	mov	rax, qword ptr [rbp - 0x10]
0x400217:	mov	rdi, rax
0x40021a:	call	0x500000
<Block for 0x40021f, 23 bytes>
0x40021f:	mov	qword ptr [rbp - 8], rax
0x400223:	mov	qword ptr [rbp - 0x18], 0
0x40022b:	mov	eax, dword ptr [rbp - 0x1c]
0x40022e:	cdqe	
0x400230:	cmp	qword ptr [rbp - 0x18], rax
0x400234:	jae	0x400256
<Block for 0x400236, 32 bytes>
0x400236:	mov	rax, qword ptr [rbp - 0x18]
0x40023a:	lea	rdx, [rax*4]
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	add	rax, rdx
0x400249:	mov	dword ptr [rax], 0
0x40024f:	add	qword ptr [rbp - 0x18], 1
0x400254:	jmp	0x40022b
<Block for 0x400256, 13 bytes>
0x400256:	mov	rax, qword ptr [rbp - 8]
0x40025a:	mov	eax, dword ptr [rax]
0x40025c:	mov	edi, eax
0x40025e:	call	0x500008
<Block for 0x40022b, 11 bytes>
0x40022b:	mov	eax, dword ptr [rbp - 0x1c]
0x40022e:	cdqe	
0x400230:	cmp	qword ptr [rbp - 0x18], rax
0x400234:	jae	0x400256
<Block for 0x400263, 7 bytes>
0x400263:	cmp	qword ptr [rbp - 8], 0
0x400268:	je	0x400276
<Block for 0x400276, 3 bytes>
0x400276:	nop	
0x400277:	leave	
0x400278:	ret	
<Block for 0x40026a, 12 bytes>
0x40026a:	mov	rax, qword ptr [rbp - 8]
0x40026e:	mov	rdi, rax
0x400271:	call	0x500010
