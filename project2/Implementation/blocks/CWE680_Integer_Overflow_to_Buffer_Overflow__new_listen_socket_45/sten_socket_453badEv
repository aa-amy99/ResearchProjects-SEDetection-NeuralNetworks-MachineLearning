<Block for 0x400088, 68 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x40
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4000aa:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000b1:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4000b8:	mov	edx, 6
0x4000bd:	mov	esi, 1
0x4000c2:	mov	edi, 2
0x4000c7:	call	0x500018
<Block for 0x4000cc, 13 bytes>
0x4000cc:	mov	dword ptr [rbp - 0x38], eax
0x4000cf:	cmp	dword ptr [rbp - 0x38], -1
0x4000d3:	je	0x4001a2
<Block for 0x4001a2, 3 bytes>
0x4001a2:	nop	
0x4001a3:	jmp	0x4001ac
<Block for 0x4000d9, 22 bytes>
0x4000d9:	lea	rax, [rbp - 0x30]
0x4000dd:	mov	edx, 0x10
0x4000e2:	mov	esi, 0
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500020
<Block for 0x4001ac, 6 bytes>
0x4001ac:	cmp	dword ptr [rbp - 0x38], -1
0x4001b0:	je	0x4001bc
<Block for 0x4000ef, 23 bytes>
0x4000ef:	mov	word ptr [rbp - 0x30], 2
0x4000f5:	mov	dword ptr [rbp - 0x2c], 0
0x4000fc:	mov	edi, 0x6987
0x400101:	call	0x500028
<Block for 0x4001bc, 6 bytes>
0x4001bc:	cmp	dword ptr [rbp - 0x3c], -1
0x4001c0:	je	0x4001cc
<Block for 0x4001b2, 10 bytes>
0x4001b2:	mov	eax, dword ptr [rbp - 0x38]
0x4001b5:	mov	edi, eax
0x4001b7:	call	0x500058
<Block for 0x400106, 26 bytes>
0x400106:	mov	word ptr [rbp - 0x2e], ax
0x40010a:	lea	rcx, [rbp - 0x30]
0x40010e:	mov	eax, dword ptr [rbp - 0x38]
0x400111:	mov	edx, 0x10
0x400116:	mov	rsi, rcx
0x400119:	mov	edi, eax
0x40011b:	call	0x500030
<Block for 0x4001cc, 14 bytes>
0x4001cc:	mov	eax, dword ptr [rbp - 0x40]
0x4001cf:	mov	dword ptr [rip + 0xdf], eax
0x4001d5:	call	0x400000
<Block for 0x4001c2, 10 bytes>
0x4001c2:	mov	eax, dword ptr [rbp - 0x3c]
0x4001c5:	mov	edi, eax
0x4001c7:	call	0x500058
<Block for 0x400120, 10 bytes>
0x400120:	cmp	eax, -1
0x400123:	sete	al
0x400126:	test	al, al
0x400128:	jne	0x4001a5
<Block for 0x4001da, 16 bytes>
0x4001da:	nop	
0x4001db:	mov	rax, qword ptr [rbp - 8]
0x4001df:	xor	rax, qword ptr fs:[0x28]
0x4001e8:	je	0x4001ef
<Block for 0x40012a, 15 bytes>
0x40012a:	mov	eax, dword ptr [rbp - 0x38]
0x40012d:	mov	esi, 5
0x400132:	mov	edi, eax
0x400134:	call	0x500038
<Block for 0x4001a5, 3 bytes>
0x4001a5:	nop	
0x4001a6:	jmp	0x4001ac
<Block for 0x4001ef, 2 bytes>
0x4001ef:	leave	
0x4001f0:	ret	
<Block for 0x4001ea, 5 bytes>
0x4001ea:	call	0x500060
<Block for 0x400139, 10 bytes>
0x400139:	cmp	eax, -1
0x40013c:	sete	al
0x40013f:	test	al, al
0x400141:	jne	0x4001a8
<Block for 0x400143, 20 bytes>
0x400143:	mov	eax, dword ptr [rbp - 0x38]
0x400146:	mov	edx, 0
0x40014b:	mov	esi, 0
0x400150:	mov	edi, eax
0x400152:	call	0x500040
<Block for 0x4001a8, 3 bytes>
0x4001a8:	nop	
0x4001a9:	jmp	0x4001ac
<Block for 0x400157, 9 bytes>
0x400157:	mov	dword ptr [rbp - 0x3c], eax
0x40015a:	cmp	dword ptr [rbp - 0x3c], -1
0x40015e:	je	0x4001ab
<Block for 0x400160, 24 bytes>
0x400160:	lea	rsi, [rbp - 0x16]
0x400164:	mov	eax, dword ptr [rbp - 0x3c]
0x400167:	mov	ecx, 0
0x40016c:	mov	edx, 0xd
0x400171:	mov	edi, eax
0x400173:	call	0x500048
<Block for 0x4001ab, 1 bytes>
0x4001ab:	nop	
<Block for 0x400178, 9 bytes>
0x400178:	mov	dword ptr [rbp - 0x34], eax
0x40017b:	cmp	dword ptr [rbp - 0x34], -1
0x40017f:	je	0x4001ac
<Block for 0x400181, 6 bytes>
0x400181:	cmp	dword ptr [rbp - 0x34], 0
0x400185:	je	0x4001ac
<Block for 0x400187, 22 bytes>
0x400187:	mov	eax, dword ptr [rbp - 0x34]
0x40018a:	cdqe	
0x40018c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400191:	lea	rax, [rbp - 0x16]
0x400195:	mov	rdi, rax
0x400198:	call	0x500050
<Block for 0x40019d, 5 bytes>
0x40019d:	mov	dword ptr [rbp - 0x40], eax
0x4001a0:	jmp	0x4001ac
