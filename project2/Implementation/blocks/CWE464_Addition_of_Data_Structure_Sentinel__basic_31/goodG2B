<Block for 0x400088, 80 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x10
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	byte ptr [rbp - 0xf], 0x20
0x4000a7:	mov	byte ptr [rbp - 0xf], 0x61
0x4000ab:	movzx	eax, byte ptr [rbp - 0xf]
0x4000af:	mov	byte ptr [rbp - 0xe], al
0x4000b2:	movzx	eax, byte ptr [rbp - 0xe]
0x4000b6:	mov	byte ptr [rbp - 0xd], al
0x4000b9:	mov	byte ptr [rbp - 0xc], 0x78
0x4000bd:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c1:	mov	byte ptr [rbp - 0xb], al
0x4000c4:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000c8:	mov	byte ptr [rbp - 9], 0
0x4000cc:	lea	rax, [rbp - 0xc]
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500018
<Block for 0x4000d8, 16 bytes>
0x4000d8:	nop	
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	xor	rax, qword ptr fs:[0x28]
0x4000e6:	je	0x4000ed
<Block for 0x4000ed, 2 bytes>
0x4000ed:	leave	
0x4000ee:	ret	
<Block for 0x4000e8, 5 bytes>
0x4000e8:	call	0x500020
