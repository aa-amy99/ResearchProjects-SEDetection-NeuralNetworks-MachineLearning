<Block for 0x400062, 47 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	add	rsp, -0x80
0x40006e:	mov	rax, qword ptr fs:[0x28]
0x400077:	mov	qword ptr [rbp - 8], rax
0x40007b:	xor	eax, eax
0x40007d:	mov	qword ptr [rbp - 0x80], 0
0x400085:	lea	rax, [rbp - 0x80]
0x400089:	mov	rdi, rax
0x40008c:	call	0x400000
<Block for 0x400091, 22 bytes>
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x4000a7, 19 bytes>
0x4000a7:	mov	byte ptr [rbp - 0xd], 0
0x4000ab:	mov	qword ptr [rbp - 0x78], 0
0x4000b3:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000b8:	ja	0x4000dc
<Block for 0x4000ba, 34 bytes>
0x4000ba:	mov	rdx, qword ptr [rbp - 0x80]
0x4000be:	mov	rax, qword ptr [rbp - 0x78]
0x4000c2:	add	rdx, rax
0x4000c5:	lea	rcx, [rbp - 0x70]
0x4000c9:	mov	rax, qword ptr [rbp - 0x78]
0x4000cd:	add	rax, rcx
0x4000d0:	movzx	eax, byte ptr [rax]
0x4000d3:	mov	byte ptr [rdx], al
0x4000d5:	add	qword ptr [rbp - 0x78], 1
0x4000da:	jmp	0x4000b3
<Block for 0x4000dc, 23 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x80]
0x4000e0:	add	rax, 0x63
0x4000e4:	mov	byte ptr [rax], 0
0x4000e7:	mov	rax, qword ptr [rbp - 0x80]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500018
<Block for 0x4000b3, 7 bytes>
0x4000b3:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000b8:	ja	0x4000dc
<Block for 0x4000f3, 16 bytes>
0x4000f3:	nop	
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	xor	rax, qword ptr fs:[0x28]
0x400101:	je	0x400108
<Block for 0x400108, 2 bytes>
0x400108:	leave	
0x400109:	ret	
<Block for 0x400103, 5 bytes>
0x400103:	call	0x500020
