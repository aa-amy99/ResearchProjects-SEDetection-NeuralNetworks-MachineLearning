<Block for 0x400045, 51 bytes>
0x400045:	endbr64	
0x400049:	push	rbp
0x40004a:	mov	rbp, rsp
0x40004d:	sub	rsp, 0x10
0x400051:	mov	rax, qword ptr fs:[0x28]
0x40005a:	mov	qword ptr [rbp - 8], rax
0x40005e:	xor	eax, eax
0x400060:	mov	dword ptr [rbp - 0x10], 0
0x400067:	mov	dword ptr [rbp - 0xc], 0
0x40006e:	mov	eax, 0
0x400073:	call	0x40000f
<Block for 0x400078, 4 bytes>
0x400078:	test	eax, eax
0x40007a:	je	0x40008a
<Block for 0x40008a, 12 bytes>
0x40008a:	lea	rax, [rbp - 0x10]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rdi, [rip + 0xa3]
0x400083:	call	0x500000
<Block for 0x400096, 16 bytes>
0x400096:	nop	
0x400097:	mov	rax, qword ptr [rbp - 8]
0x40009b:	xor	rax, qword ptr fs:[0x28]
0x4000a4:	je	0x4000ab
<Block for 0x400088, 2 bytes>
0x400088:	jmp	0x400096
<Block for 0x4000ab, 2 bytes>
0x4000ab:	leave	
0x4000ac:	ret	
<Block for 0x4000a6, 5 bytes>
0x4000a6:	call	0x500010
