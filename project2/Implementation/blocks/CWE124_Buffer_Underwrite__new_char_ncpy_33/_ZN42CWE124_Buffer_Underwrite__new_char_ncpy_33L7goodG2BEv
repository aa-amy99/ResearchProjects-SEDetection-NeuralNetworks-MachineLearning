<Block for 0x4000e3, 65 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0x90
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	lea	rax, [rbp - 0x90]
0x400108:	mov	qword ptr [rbp - 0x88], rax
0x40010f:	mov	qword ptr [rbp - 0x90], 0
0x40011a:	mov	edi, 0x64
0x40011f:	call	0x500000
<Block for 0x400124, 26 bytes>
0x400124:	mov	qword ptr [rbp - 0x80], rax
0x400128:	mov	rax, qword ptr [rbp - 0x80]
0x40012c:	mov	edx, 0x63
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500008
<Block for 0x40013e, 58 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x80]
0x400142:	add	rax, 0x63
0x400146:	mov	byte ptr [rax], 0
0x400149:	mov	rax, qword ptr [rbp - 0x80]
0x40014d:	mov	qword ptr [rbp - 0x90], rax
0x400154:	mov	rax, qword ptr [rbp - 0x88]
0x40015b:	mov	rax, qword ptr [rax]
0x40015e:	mov	qword ptr [rbp - 0x78], rax
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500008
<Block for 0x400178, 28 bytes>
0x400178:	mov	byte ptr [rbp - 0xd], 0
0x40017c:	lea	rcx, [rbp - 0x70]
0x400180:	mov	rax, qword ptr [rbp - 0x78]
0x400184:	mov	edx, 0x63
0x400189:	mov	rsi, rcx
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500010
<Block for 0x400194, 23 bytes>
0x400194:	mov	rax, qword ptr [rbp - 0x78]
0x400198:	add	rax, 0x63
0x40019c:	mov	byte ptr [rax], 0
0x40019f:	mov	rax, qword ptr [rbp - 0x78]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500018
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500020
