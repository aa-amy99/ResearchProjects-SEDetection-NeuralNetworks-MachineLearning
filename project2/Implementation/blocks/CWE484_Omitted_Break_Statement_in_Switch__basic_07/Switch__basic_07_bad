<Block for 0x400000, 27 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0x20e]
0x400012:	cmp	eax, 5
0x400015:	jne	0x4000a1
<Block for 0x40001b, 5 bytes>
0x40001b:	call	0x500000
<Block for 0x4000a1, 1 bytes>
0x4000a1:	nop	
<Block for 0x400020, 55 bytes>
0x400020:	mov	edx, eax
0x400022:	movsxd	rax, edx
0x400025:	imul	rax, rax, 0x55555556
0x40002c:	shr	rax, 0x20
0x400030:	mov	rcx, rax
0x400033:	mov	eax, edx
0x400035:	sar	eax, 0x1f
0x400038:	mov	esi, ecx
0x40003a:	sub	esi, eax
0x40003c:	mov	eax, esi
0x40003e:	mov	dword ptr [rbp - 4], eax
0x400041:	mov	ecx, dword ptr [rbp - 4]
0x400044:	mov	eax, ecx
0x400046:	add	eax, eax
0x400048:	add	eax, ecx
0x40004a:	sub	edx, eax
0x40004c:	mov	eax, edx
0x40004e:	mov	dword ptr [rbp - 4], eax
0x400051:	cmp	dword ptr [rbp - 4], 2
0x400055:	je	0x400085
<Block for 0x4000a2, 3 bytes>
0x4000a2:	nop	
0x4000a3:	leave	
0x4000a4:	ret	
<Block for 0x400085, 12 bytes>
0x400085:	lea	rdi, [rip + 0x19c]
0x40008c:	call	0x500008
<Block for 0x400057, 6 bytes>
0x400057:	cmp	dword ptr [rbp - 4], 2
0x40005b:	jg	0x400093
<Block for 0x400091, 2 bytes>
0x400091:	jmp	0x4000a2
<Block for 0x40005d, 6 bytes>
0x40005d:	cmp	dword ptr [rbp - 4], 0
0x400061:	je	0x40006b
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0x190]
0x40009a:	call	0x500008
<Block for 0x40006b, 12 bytes>
0x40006b:	lea	rdi, [rip + 0x1b2]
0x400072:	call	0x500008
<Block for 0x400063, 6 bytes>
0x400063:	cmp	dword ptr [rbp - 4], 1
0x400067:	je	0x400077
<Block for 0x40009f, 2 bytes>
0x40009f:	jmp	0x4000a2
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0x1a8]
0x40007e:	call	0x500008
<Block for 0x400069, 2 bytes>
0x400069:	jmp	0x400093
<Block for 0x400083, 2 bytes>
0x400083:	jmp	0x4000a2
