<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400434
<Block for 0x400028, 37 bytes>
0x400028:	mov	qword ptr [rbp - 0x58], 0
0x400030:	mov	rax, qword ptr [rip + 0xfffc9]
0x400037:	mov	rdx, rax
0x40003a:	lea	rsi, [rip + 0x32f]
0x400041:	lea	rdi, [rip + 0x32b]
0x400048:	call	0x500008
<Block for 0x40004d, 16 bytes>
0x40004d:	mov	qword ptr [rbp - 0x58], rax
0x400051:	mov	rax, qword ptr [rbp - 0x58]
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x40005d, 19 bytes>
0x40005d:	lea	rdx, [rbp - 0x58]
0x400061:	lea	rax, [rbp - 0x50]
0x400065:	mov	rsi, rdx
0x400068:	mov	rdi, rax
0x40006b:	call	0x40053e
<Block for 0x400070, 19 bytes>
0x400070:	lea	rdx, [rbp - 0x58]
0x400074:	lea	rax, [rbp - 0x50]
0x400078:	mov	rsi, rdx
0x40007b:	mov	rdi, rax
0x40007e:	call	0x40053e
<Block for 0x400083, 19 bytes>
0x400083:	lea	rdx, [rbp - 0x58]
0x400087:	lea	rax, [rbp - 0x50]
0x40008b:	mov	rsi, rdx
0x40008e:	mov	rdi, rax
0x400091:	call	0x40053e
<Block for 0x400096, 19 bytes>
0x400096:	lea	rdx, [rbp - 0x50]
0x40009a:	lea	rax, [rbp - 0x30]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x400578
<Block for 0x4000a9, 12 bytes>
0x4000a9:	lea	rax, [rbp - 0x30]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500018
<Block for 0x4000b5, 12 bytes>
0x4000b5:	lea	rax, [rbp - 0x30]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x400454
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rax, [rbp - 0x50]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x400454
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 0x18]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x400117
<Block for 0x400117, 7 bytes>
0x400117:	add	rsp, 0x58
0x40011b:	pop	rbx
0x40011c:	pop	rbp
0x40011d:	ret	
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x400112
<Block for 0x400112, 5 bytes>
0x400112:	call	0x500028
