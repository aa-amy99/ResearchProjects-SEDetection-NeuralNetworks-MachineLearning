<Block for 0x40011e, 40 bytes>
0x40011e:	endbr64	
0x400122:	push	rbp
0x400123:	mov	rbp, rsp
0x400126:	push	rbx
0x400127:	sub	rsp, 0x58
0x40012b:	mov	rax, qword ptr fs:[0x28]
0x400134:	mov	qword ptr [rbp - 0x18], rax
0x400138:	xor	eax, eax
0x40013a:	lea	rax, [rbp - 0x50]
0x40013e:	mov	rdi, rax
0x400141:	call	0x400434
<Block for 0x400146, 27 bytes>
0x400146:	mov	qword ptr [rbp - 0x58], 0
0x40014e:	lea	rsi, [rip + 0x21b]
0x400155:	lea	rdi, [rip + 0x22d]
0x40015c:	call	0x500030
<Block for 0x400161, 23 bytes>
0x400161:	mov	qword ptr [rbp - 0x58], rax
0x400165:	lea	rdx, [rbp - 0x58]
0x400169:	lea	rax, [rbp - 0x50]
0x40016d:	mov	rsi, rdx
0x400170:	mov	rdi, rax
0x400173:	call	0x40053e
<Block for 0x400178, 19 bytes>
0x400178:	lea	rdx, [rbp - 0x58]
0x40017c:	lea	rax, [rbp - 0x50]
0x400180:	mov	rsi, rdx
0x400183:	mov	rdi, rax
0x400186:	call	0x40053e
<Block for 0x40018b, 19 bytes>
0x40018b:	lea	rdx, [rbp - 0x58]
0x40018f:	lea	rax, [rbp - 0x50]
0x400193:	mov	rsi, rdx
0x400196:	mov	rdi, rax
0x400199:	call	0x40053e
<Block for 0x40019e, 19 bytes>
0x40019e:	lea	rdx, [rbp - 0x50]
0x4001a2:	lea	rax, [rbp - 0x30]
0x4001a6:	mov	rsi, rdx
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x400578
<Block for 0x4001b1, 12 bytes>
0x4001b1:	lea	rax, [rbp - 0x30]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500038
<Block for 0x4001bd, 12 bytes>
0x4001bd:	lea	rax, [rbp - 0x30]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x400454
<Block for 0x4001c9, 12 bytes>
0x4001c9:	lea	rax, [rbp - 0x50]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x400454
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 0x18]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x40021f
<Block for 0x40021f, 7 bytes>
0x40021f:	add	rsp, 0x58
0x400223:	pop	rbx
0x400224:	pop	rbp
0x400225:	ret	
<Block for 0x4001e5, 2 bytes>
0x4001e5:	jmp	0x40021a
<Block for 0x40021a, 5 bytes>
0x40021a:	call	0x500028
