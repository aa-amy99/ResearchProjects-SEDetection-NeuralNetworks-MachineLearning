<Block for 0x400095, 29 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	sub	rsp, 0x20
0x4000a1:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000a8:	mov	eax, dword ptr [rbp - 0x14]
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500028
<Block for 0x4000b2, 20 bytes>
0x4000b2:	mov	dword ptr [rbp - 0x14], eax
0x4000b5:	mov	eax, dword ptr [rbp - 0x14]
0x4000b8:	cdqe	
0x4000ba:	shl	rax, 2
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500008
<Block for 0x4000c6, 11 bytes>
0x4000c6:	mov	qword ptr [rbp - 8], rax
0x4000ca:	cmp	qword ptr [rbp - 8], 0
0x4000cf:	jne	0x4000db
<Block for 0x4000d1, 10 bytes>
0x4000d1:	mov	edi, 0xffffffff
0x4000d6:	call	0x500010
<Block for 0x4000db, 10 bytes>
0x4000db:	mov	qword ptr [rbp - 0x10], 0
0x4000e3:	jmp	0x400103
<Block for 0x400103, 11 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x14]
0x400106:	cdqe	
0x400108:	cmp	qword ptr [rbp - 0x10], rax
0x40010c:	jb	0x4000e5
<Block for 0x4000e5, 41 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 0x10]
0x4000e9:	lea	rdx, [rax*4]
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	add	rax, rdx
0x4000f8:	mov	dword ptr [rax], 0
0x4000fe:	add	qword ptr [rbp - 0x10], 1
0x400103:	mov	eax, dword ptr [rbp - 0x14]
0x400106:	cdqe	
0x400108:	cmp	qword ptr [rbp - 0x10], rax
0x40010c:	jb	0x4000e5
<Block for 0x40010e, 13 bytes>
0x40010e:	mov	rax, qword ptr [rbp - 8]
0x400112:	mov	eax, dword ptr [rax]
0x400114:	mov	edi, eax
0x400116:	call	0x500018
<Block for 0x40011b, 12 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500020
<Block for 0x400127, 3 bytes>
0x400127:	nop	
0x400128:	leave	
0x400129:	ret	
