<Block for 0x40023b, 24 bytes>
0x40023b:	endbr64	
0x40023f:	push	rbp
0x400240:	mov	rbp, rsp
0x400243:	sub	rsp, 0x20
0x400247:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x40024e:	call	0x500000
<Block for 0x400253, 9 bytes>
0x400253:	test	eax, eax
0x400255:	setne	al
0x400258:	test	al, al
0x40025a:	je	0x400263
<Block for 0x400263, 25 bytes>
0x400263:	mov	eax, dword ptr [rbp - 0x1c]
0x400266:	cdqe	
0x400268:	shl	rax, 2
0x40026c:	mov	qword ptr [rbp - 0x10], rax
0x400270:	mov	rax, qword ptr [rbp - 0x10]
0x400274:	mov	rdi, rax
0x400277:	call	0x500048
<Block for 0x40025c, 32 bytes>
0x40025c:	mov	dword ptr [rbp - 0x1c], 0x14
0x400263:	mov	eax, dword ptr [rbp - 0x1c]
0x400266:	cdqe	
0x400268:	shl	rax, 2
0x40026c:	mov	qword ptr [rbp - 0x10], rax
0x400270:	mov	rax, qword ptr [rbp - 0x10]
0x400274:	mov	rdi, rax
0x400277:	call	0x500048
<Block for 0x40027c, 23 bytes>
0x40027c:	mov	qword ptr [rbp - 8], rax
0x400280:	mov	qword ptr [rbp - 0x18], 0
0x400288:	mov	eax, dword ptr [rbp - 0x1c]
0x40028b:	cdqe	
0x40028d:	cmp	qword ptr [rbp - 0x18], rax
0x400291:	jae	0x4002b3
<Block for 0x400293, 32 bytes>
0x400293:	mov	rax, qword ptr [rbp - 0x18]
0x400297:	lea	rdx, [rax*4]
0x40029f:	mov	rax, qword ptr [rbp - 8]
0x4002a3:	add	rax, rdx
0x4002a6:	mov	dword ptr [rax], 0
0x4002ac:	add	qword ptr [rbp - 0x18], 1
0x4002b1:	jmp	0x400288
<Block for 0x4002b3, 13 bytes>
0x4002b3:	mov	rax, qword ptr [rbp - 8]
0x4002b7:	mov	eax, dword ptr [rax]
0x4002b9:	mov	edi, eax
0x4002bb:	call	0x500050
<Block for 0x400288, 11 bytes>
0x400288:	mov	eax, dword ptr [rbp - 0x1c]
0x40028b:	cdqe	
0x40028d:	cmp	qword ptr [rbp - 0x18], rax
0x400291:	jae	0x4002b3
<Block for 0x4002c0, 7 bytes>
0x4002c0:	cmp	qword ptr [rbp - 8], 0
0x4002c5:	je	0x4002d3
<Block for 0x4002d3, 3 bytes>
0x4002d3:	nop	
0x4002d4:	leave	
0x4002d5:	ret	
<Block for 0x4002c7, 12 bytes>
0x4002c7:	mov	rax, qword ptr [rbp - 8]
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x500058
