<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	qword ptr [rbp - 0x28], 0
0x400015:	mov	edi, 0x64
0x40001a:	call	0x500000
<Block for 0x40001f, 11 bytes>
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	cmp	qword ptr [rbp - 0x20], 0
0x400028:	jne	0x400034
<Block for 0x40002a, 10 bytes>
0x40002a:	mov	edi, 0xffffffff
0x40002f:	call	0x500008
<Block for 0x400034, 22 bytes>
0x400034:	mov	rax, qword ptr [rbp - 0x20]
0x400038:	mov	edx, 0x63
0x40003d:	mov	esi, 0x41
0x400042:	mov	rdi, rax
0x400045:	call	0x500010
<Block for 0x40004a, 33 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 0x20]
0x40004e:	add	rax, 0x63
0x400052:	mov	byte ptr [rax], 0
0x400055:	mov	rax, qword ptr [rbp - 0x20]
0x400059:	sub	rax, 8
0x40005d:	mov	qword ptr [rbp - 0x28], rax
0x400061:	mov	edi, 8
0x400066:	call	0x500018
<Block for 0x40006b, 11 bytes>
0x40006b:	mov	rbx, rax
0x40006e:	mov	rdi, rbx
0x400071:	call	0x40018e
<Block for 0x400076, 30 bytes>
0x400076:	mov	qword ptr [rbp - 0x18], rbx
0x40007a:	mov	rax, qword ptr [rbp - 0x18]
0x40007e:	mov	rax, qword ptr [rax]
0x400081:	mov	rcx, qword ptr [rax]
0x400084:	mov	rdx, qword ptr [rbp - 0x28]
0x400088:	mov	rax, qword ptr [rbp - 0x18]
0x40008c:	mov	rsi, rdx
0x40008f:	mov	rdi, rax
0x400092:	call	rcx
<Block for 0x400094, 9 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x18]
0x400098:	test	rax, rax
0x40009b:	je	0x4000aa
<Block for 0x4000aa, 8 bytes>
0x4000aa:	nop	
0x4000ab:	add	rsp, 0x28
0x4000af:	pop	rbx
0x4000b0:	pop	rbp
0x4000b1:	ret	
<Block for 0x40009d, 13 bytes>
0x40009d:	mov	esi, 8
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500020
