<Block for 0x40013c, 51 bytes>
0x40013c:	endbr64	
0x400140:	push	rbp
0x400141:	mov	rbp, rsp
0x400144:	sub	rsp, 0x90
0x40014b:	mov	rax, qword ptr fs:[0x28]
0x400154:	mov	qword ptr [rbp - 8], rax
0x400158:	xor	eax, eax
0x40015a:	mov	qword ptr [rbp - 0x88], 0
0x400165:	mov	eax, 0
0x40016a:	call	0x500000
<Block for 0x40016f, 4 bytes>
0x40016f:	test	eax, eax
0x400171:	je	0x4001c0
<Block for 0x4001c0, 10 bytes>
0x4001c0:	mov	edi, 0x64
0x4001c5:	call	0x500008
<Block for 0x400173, 10 bytes>
0x400173:	mov	edi, 0x64
0x400178:	call	0x500008
<Block for 0x4001ca, 11 bytes>
0x4001ca:	mov	qword ptr [rbp - 0x80], rax
0x4001ce:	cmp	qword ptr [rbp - 0x80], 0
0x4001d3:	jne	0x4001df
<Block for 0x40017d, 11 bytes>
0x40017d:	mov	qword ptr [rbp - 0x78], rax
0x400181:	cmp	qword ptr [rbp - 0x78], 0
0x400186:	jne	0x400192
<Block for 0x4001d5, 10 bytes>
0x4001d5:	mov	edi, 0xffffffff
0x4001da:	call	0x500010
<Block for 0x4001df, 22 bytes>
0x4001df:	mov	rax, qword ptr [rbp - 0x80]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500018
<Block for 0x400188, 10 bytes>
0x400188:	mov	edi, 0xffffffff
0x40018d:	call	0x500010
<Block for 0x400192, 22 bytes>
0x400192:	mov	rax, qword ptr [rbp - 0x78]
0x400196:	mov	edx, 0x63
0x40019b:	mov	esi, 0x41
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x500018
<Block for 0x4001f5, 44 bytes>
0x4001f5:	mov	rax, qword ptr [rbp - 0x80]
0x4001f9:	add	rax, 0x63
0x4001fd:	mov	byte ptr [rax], 0
0x400200:	mov	rax, qword ptr [rbp - 0x80]
0x400204:	mov	qword ptr [rbp - 0x88], rax
0x40020b:	lea	rax, [rbp - 0x70]
0x40020f:	mov	edx, 0x63
0x400214:	mov	esi, 0x43
0x400219:	mov	rdi, rax
0x40021c:	call	0x500018
<Block for 0x4001a8, 24 bytes>
0x4001a8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ac:	add	rax, 0x63
0x4001b0:	mov	byte ptr [rax], 0
0x4001b3:	mov	rax, qword ptr [rbp - 0x78]
0x4001b7:	mov	qword ptr [rbp - 0x88], rax
0x4001be:	jmp	0x40020b
<Block for 0x400221, 31 bytes>
0x400221:	mov	byte ptr [rbp - 0xd], 0
0x400225:	lea	rcx, [rbp - 0x70]
0x400229:	mov	rax, qword ptr [rbp - 0x88]
0x400230:	mov	edx, 0x64
0x400235:	mov	rsi, rcx
0x400238:	mov	rdi, rax
0x40023b:	call	0x500020
<Block for 0x40020b, 22 bytes>
0x40020b:	lea	rax, [rbp - 0x70]
0x40020f:	mov	edx, 0x63
0x400214:	mov	esi, 0x43
0x400219:	mov	rdi, rax
0x40021c:	call	0x500018
<Block for 0x400240, 29 bytes>
0x400240:	mov	rax, qword ptr [rbp - 0x88]
0x400247:	add	rax, 0x63
0x40024b:	mov	byte ptr [rax], 0
0x40024e:	mov	rax, qword ptr [rbp - 0x88]
0x400255:	mov	rdi, rax
0x400258:	call	0x500028
<Block for 0x40025d, 16 bytes>
0x40025d:	nop	
0x40025e:	mov	rax, qword ptr [rbp - 8]
0x400262:	xor	rax, qword ptr fs:[0x28]
0x40026b:	je	0x400272
<Block for 0x400272, 2 bytes>
0x400272:	leave	
0x400273:	ret	
<Block for 0x40026d, 5 bytes>
0x40026d:	call	0x500030
