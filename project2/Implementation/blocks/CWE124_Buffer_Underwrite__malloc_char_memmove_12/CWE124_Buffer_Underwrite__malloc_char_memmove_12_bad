<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, 0
0x40002e:	call	0x500000
<Block for 0x400033, 4 bytes>
0x400033:	test	eax, eax
0x400035:	je	0x400088
<Block for 0x400088, 10 bytes>
0x400088:	mov	edi, 0x64
0x40008d:	call	0x500008
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500008
<Block for 0x400092, 11 bytes>
0x400092:	mov	qword ptr [rbp - 0x80], rax
0x400096:	cmp	qword ptr [rbp - 0x80], 0
0x40009b:	jne	0x4000a7
<Block for 0x400041, 11 bytes>
0x400041:	mov	qword ptr [rbp - 0x78], rax
0x400045:	cmp	qword ptr [rbp - 0x78], 0
0x40004a:	jne	0x400056
<Block for 0x40009d, 10 bytes>
0x40009d:	mov	edi, 0xffffffff
0x4000a2:	call	0x500010
<Block for 0x4000a7, 22 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x80]
0x4000ab:	mov	edx, 0x63
0x4000b0:	mov	esi, 0x41
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x40004c, 10 bytes>
0x40004c:	mov	edi, 0xffffffff
0x400051:	call	0x500010
<Block for 0x400056, 22 bytes>
0x400056:	mov	rax, qword ptr [rbp - 0x78]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x41
0x400064:	mov	rdi, rax
0x400067:	call	0x500018
<Block for 0x4000bd, 44 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x80]
0x4000c1:	add	rax, 0x63
0x4000c5:	mov	byte ptr [rax], 0
0x4000c8:	mov	rax, qword ptr [rbp - 0x80]
0x4000cc:	mov	qword ptr [rbp - 0x88], rax
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	edx, 0x63
0x4000dc:	mov	esi, 0x43
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x40006c, 28 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 0x78]
0x400070:	add	rax, 0x63
0x400074:	mov	byte ptr [rax], 0
0x400077:	mov	rax, qword ptr [rbp - 0x78]
0x40007b:	sub	rax, 8
0x40007f:	mov	qword ptr [rbp - 0x88], rax
0x400086:	jmp	0x4000d3
<Block for 0x4000e9, 31 bytes>
0x4000e9:	mov	byte ptr [rbp - 0xd], 0
0x4000ed:	lea	rcx, [rbp - 0x70]
0x4000f1:	mov	rax, qword ptr [rbp - 0x88]
0x4000f8:	mov	edx, 0x64
0x4000fd:	mov	rsi, rcx
0x400100:	mov	rdi, rax
0x400103:	call	0x500020
<Block for 0x4000d3, 22 bytes>
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	edx, 0x63
0x4000dc:	mov	esi, 0x43
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x400108, 29 bytes>
0x400108:	mov	rax, qword ptr [rbp - 0x88]
0x40010f:	add	rax, 0x63
0x400113:	mov	byte ptr [rax], 0
0x400116:	mov	rax, qword ptr [rbp - 0x88]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500028
<Block for 0x400125, 16 bytes>
0x400125:	nop	
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	xor	rax, qword ptr fs:[0x28]
0x400133:	je	0x40013a
<Block for 0x40013a, 2 bytes>
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x400135, 5 bytes>
0x400135:	call	0x500030
