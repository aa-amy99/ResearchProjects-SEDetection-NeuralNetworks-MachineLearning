<Block for 0x400140, 52 bytes>
0x400140:	endbr64	
0x400144:	push	rbp
0x400145:	mov	rbp, rsp
0x400148:	push	rbx
0x400149:	sub	rsp, 0x88
0x400150:	mov	rax, qword ptr fs:[0x28]
0x400159:	mov	qword ptr [rbp - 0x18], rax
0x40015d:	xor	eax, eax
0x40015f:	mov	qword ptr [rbp - 0x90], 0
0x40016a:	mov	eax, dword ptr [rip + 0x270]
0x400170:	test	eax, eax
0x400172:	je	0x400182
<Block for 0x400182, 10 bytes>
0x400182:	mov	edi, 0x64
0x400187:	call	0x500000
<Block for 0x400174, 12 bytes>
0x400174:	lea	rdi, [rip + 0x269]
0x40017b:	call	0x500010
<Block for 0x40018c, 32 bytes>
0x40018c:	mov	qword ptr [rbp - 0x88], rax
0x400193:	mov	rax, qword ptr [rbp - 0x88]
0x40019a:	mov	edx, 0x63
0x40019f:	mov	esi, 0x41
0x4001a4:	mov	rdi, rax
0x4001a7:	call	0x500008
<Block for 0x400180, 2 bytes>
0x400180:	jmp	0x4001c8
<Block for 0x4001ac, 50 bytes>
0x4001ac:	mov	rax, qword ptr [rbp - 0x88]
0x4001b3:	add	rax, 0x63
0x4001b7:	mov	byte ptr [rax], 0
0x4001ba:	mov	rax, qword ptr [rbp - 0x88]
0x4001c1:	mov	qword ptr [rbp - 0x90], rax
0x4001c8:	lea	rax, [rbp - 0x80]
0x4001cc:	mov	edx, 0x63
0x4001d1:	mov	esi, 0x43
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500008
<Block for 0x4001c8, 22 bytes>
0x4001c8:	lea	rax, [rbp - 0x80]
0x4001cc:	mov	edx, 0x63
0x4001d1:	mov	esi, 0x43
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500008
<Block for 0x4001de, 141 bytes>
0x4001de:	mov	byte ptr [rbp - 0x1d], 0
0x4001e2:	mov	rax, qword ptr [rbp - 0x90]
0x4001e9:	mov	rcx, qword ptr [rbp - 0x80]
0x4001ed:	mov	rbx, qword ptr [rbp - 0x78]
0x4001f1:	mov	qword ptr [rax], rcx
0x4001f4:	mov	qword ptr [rax + 8], rbx
0x4001f8:	mov	rcx, qword ptr [rbp - 0x70]
0x4001fc:	mov	rbx, qword ptr [rbp - 0x68]
0x400200:	mov	qword ptr [rax + 0x10], rcx
0x400204:	mov	qword ptr [rax + 0x18], rbx
0x400208:	mov	rcx, qword ptr [rbp - 0x60]
0x40020c:	mov	rbx, qword ptr [rbp - 0x58]
0x400210:	mov	qword ptr [rax + 0x20], rcx
0x400214:	mov	qword ptr [rax + 0x28], rbx
0x400218:	mov	rcx, qword ptr [rbp - 0x50]
0x40021c:	mov	rbx, qword ptr [rbp - 0x48]
0x400220:	mov	qword ptr [rax + 0x30], rcx
0x400224:	mov	qword ptr [rax + 0x38], rbx
0x400228:	mov	rcx, qword ptr [rbp - 0x40]
0x40022c:	mov	rbx, qword ptr [rbp - 0x38]
0x400230:	mov	qword ptr [rax + 0x40], rcx
0x400234:	mov	qword ptr [rax + 0x48], rbx
0x400238:	mov	rcx, qword ptr [rbp - 0x30]
0x40023c:	mov	rbx, qword ptr [rbp - 0x28]
0x400240:	mov	qword ptr [rax + 0x50], rcx
0x400244:	mov	qword ptr [rax + 0x58], rbx
0x400248:	mov	edx, dword ptr [rbp - 0x20]
0x40024b:	mov	dword ptr [rax + 0x60], edx
0x40024e:	mov	rax, qword ptr [rbp - 0x90]
0x400255:	add	rax, 0x63
0x400259:	mov	byte ptr [rax], 0
0x40025c:	mov	rax, qword ptr [rbp - 0x90]
0x400263:	mov	rdi, rax
0x400266:	call	0x500010
<Block for 0x40026b, 16 bytes>
0x40026b:	nop	
0x40026c:	mov	rax, qword ptr [rbp - 0x18]
0x400270:	xor	rax, qword ptr fs:[0x28]
0x400279:	je	0x400280
<Block for 0x400280, 10 bytes>
0x400280:	add	rsp, 0x88
0x400287:	pop	rbx
0x400288:	pop	rbp
0x400289:	ret	
<Block for 0x40027b, 5 bytes>
0x40027b:	call	0x500018
