<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	lea	rax, [rbp - 0x88]
0x400030:	mov	rdi, rax
0x400033:	call	0x500000
<Block for 0x400038, 22 bytes>
0x400038:	lea	rax, [rbp - 0x70]
0x40003c:	mov	edx, 0x63
0x400041:	mov	esi, 0x43
0x400046:	mov	rdi, rax
0x400049:	call	0x500008
<Block for 0x40004e, 16 bytes>
0x40004e:	mov	byte ptr [rbp - 0xd], 0
0x400052:	lea	rax, [rbp - 0x70]
0x400056:	mov	rdi, rax
0x400059:	call	0x500010
<Block for 0x40005e, 22 bytes>
0x40005e:	mov	qword ptr [rbp - 0x78], rax
0x400062:	mov	qword ptr [rbp - 0x80], 0
0x40006a:	mov	rax, qword ptr [rbp - 0x80]
0x40006e:	cmp	rax, qword ptr [rbp - 0x78]
0x400072:	jae	0x400099
<Block for 0x400074, 37 bytes>
0x400074:	mov	rdx, qword ptr [rbp - 0x88]
0x40007b:	mov	rax, qword ptr [rbp - 0x80]
0x40007f:	add	rax, rdx
0x400082:	movzx	eax, byte ptr [rax]
0x400085:	lea	rcx, [rbp - 0x70]
0x400089:	mov	rdx, qword ptr [rbp - 0x80]
0x40008d:	add	rdx, rcx
0x400090:	mov	byte ptr [rdx], al
0x400092:	add	qword ptr [rbp - 0x80], 1
0x400097:	jmp	0x40006a
<Block for 0x400099, 16 bytes>
0x400099:	mov	byte ptr [rbp - 0xd], 0
0x40009d:	lea	rax, [rbp - 0x70]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500018
<Block for 0x40006a, 10 bytes>
0x40006a:	mov	rax, qword ptr [rbp - 0x80]
0x40006e:	cmp	rax, qword ptr [rbp - 0x78]
0x400072:	jae	0x400099
<Block for 0x4000a9, 15 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 0x88]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500020
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500028
