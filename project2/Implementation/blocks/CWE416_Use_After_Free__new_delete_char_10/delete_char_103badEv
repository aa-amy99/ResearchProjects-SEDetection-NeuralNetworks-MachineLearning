<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	test	eax, eax
0x40001c:	je	0x400049
<Block for 0x400049, 10 bytes>
0x400049:	mov	eax, dword ptr [rip + 0xfffb1]
0x40004f:	test	eax, eax
0x400051:	je	0x400064
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 1
0x400023:	call	0x500008
<Block for 0x400064, 3 bytes>
0x400064:	nop	
0x400065:	leave	
0x400066:	ret	
<Block for 0x400053, 17 bytes>
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	movzx	eax, byte ptr [rax]
0x40005a:	movsx	eax, al
0x40005d:	mov	edi, eax
0x40005f:	call	0x500018
<Block for 0x400028, 20 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	mov	rax, qword ptr [rbp - 8]
0x400030:	mov	byte ptr [rax], 0x41
0x400033:	mov	rax, qword ptr [rbp - 8]
0x400037:	test	rax, rax
0x40003a:	je	0x400049
<Block for 0x40003c, 13 bytes>
0x40003c:	mov	esi, 1
0x400041:	mov	rdi, rax
0x400044:	call	0x500010
