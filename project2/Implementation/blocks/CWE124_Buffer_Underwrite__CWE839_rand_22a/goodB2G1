<Block for 0x400079, 25 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	push	rbx
0x400082:	sub	rsp, 0x18
0x400086:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40008d:	call	0x500000
<Block for 0x400092, 7 bytes>
0x400092:	and	eax, 1
0x400095:	test	eax, eax
0x400097:	je	0x4000b6
<Block for 0x4000b6, 5 bytes>
0x4000b6:	call	0x500000
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500000
<Block for 0x4000bb, 10 bytes>
0x4000bb:	shl	eax, 0x1e
0x4000be:	mov	ebx, eax
0x4000c0:	call	0x500000
<Block for 0x40009e, 10 bytes>
0x40009e:	shl	eax, 0x1e
0x4000a1:	mov	ebx, eax
0x4000a3:	call	0x500000
<Block for 0x4000c5, 10 bytes>
0x4000c5:	shl	eax, 0xf
0x4000c8:	xor	ebx, eax
0x4000ca:	call	0x500000
<Block for 0x4000a8, 10 bytes>
0x4000a8:	shl	eax, 0xf
0x4000ab:	xor	ebx, eax
0x4000ad:	call	0x500000
<Block for 0x4000cf, 27 bytes>
0x4000cf:	xor	eax, ebx
0x4000d1:	not	eax
0x4000d3:	mov	dword ptr [rbp - 0x14], eax
0x4000d6:	mov	dword ptr [rip + 0xec], 0
0x4000e0:	mov	eax, dword ptr [rbp - 0x14]
0x4000e3:	mov	edi, eax
0x4000e5:	call	0x500010
<Block for 0x4000b2, 4 bytes>
0x4000b2:	xor	eax, ebx
0x4000b4:	jmp	0x4000d3
<Block for 0x4000ea, 8 bytes>
0x4000ea:	nop	
0x4000eb:	add	rsp, 0x18
0x4000ef:	pop	rbx
0x4000f0:	pop	rbp
0x4000f1:	ret	
<Block for 0x4000d3, 23 bytes>
0x4000d3:	mov	dword ptr [rbp - 0x14], eax
0x4000d6:	mov	dword ptr [rip + 0xec], 0
0x4000e0:	mov	eax, dword ptr [rbp - 0x14]
0x4000e3:	mov	edi, eax
0x4000e5:	call	0x500010
