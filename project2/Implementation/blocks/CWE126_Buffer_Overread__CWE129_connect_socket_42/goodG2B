<Block for 0x4001b2, 44 bytes>
0x4001b2:	endbr64	
0x4001b6:	push	rbp
0x4001b7:	mov	rbp, rsp
0x4001ba:	sub	rsp, 0x40
0x4001be:	mov	rax, qword ptr fs:[0x28]
0x4001c7:	mov	qword ptr [rbp - 8], rax
0x4001cb:	xor	eax, eax
0x4001cd:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001d4:	mov	eax, dword ptr [rbp - 0x34]
0x4001d7:	mov	edi, eax
0x4001d9:	call	0x40019b
<Block for 0x4001de, 49 bytes>
0x4001de:	mov	dword ptr [rbp - 0x34], eax
0x4001e1:	mov	qword ptr [rbp - 0x30], 0
0x4001e9:	mov	qword ptr [rbp - 0x28], 0
0x4001f1:	mov	qword ptr [rbp - 0x20], 0
0x4001f9:	mov	qword ptr [rbp - 0x18], 0
0x400201:	mov	qword ptr [rbp - 0x10], 0
0x400209:	cmp	dword ptr [rbp - 0x34], 0
0x40020d:	js	0x400221
<Block for 0x400221, 12 bytes>
0x400221:	lea	rdi, [rip + 0x1f0]
0x400228:	call	0x500050
<Block for 0x40020f, 16 bytes>
0x40020f:	mov	eax, dword ptr [rbp - 0x34]
0x400212:	cdqe	
0x400214:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400218:	mov	edi, eax
0x40021a:	call	0x500048
<Block for 0x40022d, 16 bytes>
0x40022d:	nop	
0x40022e:	mov	rax, qword ptr [rbp - 8]
0x400232:	xor	rax, qword ptr fs:[0x28]
0x40023b:	je	0x400242
<Block for 0x40021f, 2 bytes>
0x40021f:	jmp	0x40022d
<Block for 0x400242, 2 bytes>
0x400242:	leave	
0x400243:	ret	
<Block for 0x40023d, 5 bytes>
0x40023d:	call	0x500040
