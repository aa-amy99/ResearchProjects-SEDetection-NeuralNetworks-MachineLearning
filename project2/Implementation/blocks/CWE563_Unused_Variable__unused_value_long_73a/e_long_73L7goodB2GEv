<Block for 0x4001ee, 40 bytes>
0x4001ee:	endbr64	
0x4001f2:	push	rbp
0x4001f3:	mov	rbp, rsp
0x4001f6:	push	rbx
0x4001f7:	sub	rsp, 0x58
0x4001fb:	mov	rax, qword ptr fs:[0x28]
0x400204:	mov	qword ptr [rbp - 0x18], rax
0x400208:	xor	eax, eax
0x40020a:	lea	rax, [rbp - 0x50]
0x40020e:	mov	rdi, rax
0x400211:	call	0x4003a2
<Block for 0x400216, 27 bytes>
0x400216:	mov	qword ptr [rbp - 0x58], 5
0x40021e:	lea	rdx, [rbp - 0x58]
0x400222:	lea	rax, [rbp - 0x50]
0x400226:	mov	rsi, rdx
0x400229:	mov	rdi, rax
0x40022c:	call	0x4004ac
<Block for 0x400231, 19 bytes>
0x400231:	lea	rdx, [rbp - 0x58]
0x400235:	lea	rax, [rbp - 0x50]
0x400239:	mov	rsi, rdx
0x40023c:	mov	rdi, rax
0x40023f:	call	0x4004ac
<Block for 0x400244, 19 bytes>
0x400244:	lea	rdx, [rbp - 0x58]
0x400248:	lea	rax, [rbp - 0x50]
0x40024c:	mov	rsi, rdx
0x40024f:	mov	rdi, rax
0x400252:	call	0x4004ac
<Block for 0x400257, 19 bytes>
0x400257:	lea	rdx, [rbp - 0x50]
0x40025b:	lea	rax, [rbp - 0x30]
0x40025f:	mov	rsi, rdx
0x400262:	mov	rdi, rax
0x400265:	call	0x4004e6
<Block for 0x40026a, 12 bytes>
0x40026a:	lea	rax, [rbp - 0x30]
0x40026e:	mov	rdi, rax
0x400271:	call	0x500028
<Block for 0x400276, 12 bytes>
0x400276:	lea	rax, [rbp - 0x30]
0x40027a:	mov	rdi, rax
0x40027d:	call	0x4003c2
<Block for 0x400282, 12 bytes>
0x400282:	lea	rax, [rbp - 0x50]
0x400286:	mov	rdi, rax
0x400289:	call	0x4003c2
<Block for 0x40028e, 16 bytes>
0x40028e:	nop	
0x40028f:	mov	rax, qword ptr [rbp - 0x18]
0x400293:	xor	rax, qword ptr fs:[0x28]
0x40029c:	je	0x4002d8
<Block for 0x4002d8, 7 bytes>
0x4002d8:	add	rsp, 0x58
0x4002dc:	pop	rbx
0x4002dd:	pop	rbp
0x4002de:	ret	
<Block for 0x40029e, 2 bytes>
0x40029e:	jmp	0x4002d3
<Block for 0x4002d3, 5 bytes>
0x4002d3:	call	0x500010
