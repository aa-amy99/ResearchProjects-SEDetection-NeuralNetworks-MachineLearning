<Block for 0x4000f8, 26 bytes>
0x4000f8:	endbr64	
0x4000fc:	push	rbp
0x4000fd:	mov	rbp, rsp
0x400100:	sub	rsp, 0x20
0x400104:	mov	qword ptr [rbp - 0x18], rdi
0x400108:	mov	eax, dword ptr [rip + 0x1fa]
0x40010e:	test	eax, eax
0x400110:	je	0x400120
<Block for 0x400120, 10 bytes>
0x400120:	mov	edi, 0x64
0x400125:	call	0x500000
<Block for 0x400112, 12 bytes>
0x400112:	lea	rdi, [rip + 0x1f7]
0x400119:	call	0x500018
<Block for 0x40012a, 26 bytes>
0x40012a:	mov	qword ptr [rbp - 8], rax
0x40012e:	mov	rax, qword ptr [rbp - 8]
0x400132:	mov	edx, 0x63
0x400137:	mov	esi, 0x41
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500008
<Block for 0x40011e, 2 bytes>
0x40011e:	jmp	0x400157
<Block for 0x400144, 25 bytes>
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	add	rax, 0x63
0x40014c:	mov	byte ptr [rax], 0
0x40014f:	mov	rax, qword ptr [rbp - 8]
0x400153:	mov	qword ptr [rbp - 0x18], rax
0x400157:	mov	rax, qword ptr [rbp - 0x18]
0x40015b:	leave	
0x40015c:	ret	
<Block for 0x400157, 6 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x18]
0x40015b:	leave	
0x40015c:	ret	
