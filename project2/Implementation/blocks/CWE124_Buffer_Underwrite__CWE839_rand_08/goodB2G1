<Block for 0x40012e, 45 bytes>
0x40012e:	endbr64	
0x400132:	push	rbp
0x400133:	mov	rbp, rsp
0x400136:	push	rbx
0x400137:	sub	rsp, 0x48
0x40013b:	mov	rax, qword ptr fs:[0x28]
0x400144:	mov	qword ptr [rbp - 0x18], rax
0x400148:	xor	eax, eax
0x40014a:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400151:	mov	eax, 0
0x400156:	call	0x400000
<Block for 0x40015b, 4 bytes>
0x40015b:	test	eax, eax
0x40015d:	je	0x4001a8
<Block for 0x4001a8, 10 bytes>
0x4001a8:	mov	eax, 0
0x4001ad:	call	0x40000f
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500000
<Block for 0x4001b2, 4 bytes>
0x4001b2:	test	eax, eax
0x4001b4:	je	0x4001c4
<Block for 0x400164, 7 bytes>
0x400164:	and	eax, 1
0x400167:	test	eax, eax
0x400169:	je	0x400188
<Block for 0x4001c4, 46 bytes>
0x4001c4:	mov	qword ptr [rbp - 0x40], 0
0x4001cc:	mov	qword ptr [rbp - 0x38], 0
0x4001d4:	mov	qword ptr [rbp - 0x30], 0
0x4001dc:	mov	qword ptr [rbp - 0x28], 0
0x4001e4:	mov	qword ptr [rbp - 0x20], 0
0x4001ec:	cmp	dword ptr [rbp - 0x48], 0
0x4001f0:	js	0x40022a
<Block for 0x4001b6, 12 bytes>
0x4001b6:	lea	rdi, [rip + 0x3a3]
0x4001bd:	call	0x500010
<Block for 0x400188, 5 bytes>
0x400188:	call	0x500000
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500000
<Block for 0x40022a, 12 bytes>
0x40022a:	lea	rdi, [rip + 0x347]
0x400231:	call	0x500010
<Block for 0x4001f2, 6 bytes>
0x4001f2:	cmp	dword ptr [rbp - 0x48], 9
0x4001f6:	jg	0x40022a
<Block for 0x4001c2, 2 bytes>
0x4001c2:	jmp	0x400238
<Block for 0x40018d, 10 bytes>
0x40018d:	shl	eax, 0x1e
0x400190:	mov	ebx, eax
0x400192:	call	0x500000
<Block for 0x400170, 10 bytes>
0x400170:	shl	eax, 0x1e
0x400173:	mov	ebx, eax
0x400175:	call	0x500000
<Block for 0x400236, 2 bytes>
0x400236:	jmp	0x400238
<Block for 0x4001f8, 22 bytes>
0x4001f8:	mov	eax, dword ptr [rbp - 0x48]
0x4001fb:	cdqe	
0x4001fd:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400205:	mov	dword ptr [rbp - 0x44], 0
0x40020c:	jmp	0x400222
<Block for 0x400238, 16 bytes>
0x400238:	nop	
0x400239:	mov	rax, qword ptr [rbp - 0x18]
0x40023d:	xor	rax, qword ptr fs:[0x28]
0x400246:	je	0x40024d
<Block for 0x400197, 10 bytes>
0x400197:	shl	eax, 0xf
0x40019a:	xor	ebx, eax
0x40019c:	call	0x500000
<Block for 0x40017a, 10 bytes>
0x40017a:	shl	eax, 0xf
0x40017d:	xor	ebx, eax
0x40017f:	call	0x500000
<Block for 0x400222, 6 bytes>
0x400222:	cmp	dword ptr [rbp - 0x44], 9
0x400226:	jle	0x40020e
<Block for 0x40024d, 7 bytes>
0x40024d:	add	rsp, 0x48
0x400251:	pop	rbx
0x400252:	pop	rbp
0x400253:	ret	
<Block for 0x400248, 5 bytes>
0x400248:	call	0x500018
<Block for 0x4001a1, 17 bytes>
0x4001a1:	xor	eax, ebx
0x4001a3:	not	eax
0x4001a5:	mov	dword ptr [rbp - 0x48], eax
0x4001a8:	mov	eax, 0
0x4001ad:	call	0x40000f
<Block for 0x400184, 4 bytes>
0x400184:	xor	eax, ebx
0x400186:	jmp	0x4001a5
<Block for 0x40020e, 16 bytes>
0x40020e:	mov	eax, dword ptr [rbp - 0x44]
0x400211:	cdqe	
0x400213:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400217:	mov	edi, eax
0x400219:	call	0x500008
<Block for 0x400228, 2 bytes>
0x400228:	jmp	0x400238
<Block for 0x4001a5, 13 bytes>
0x4001a5:	mov	dword ptr [rbp - 0x48], eax
0x4001a8:	mov	eax, 0
0x4001ad:	call	0x40000f
<Block for 0x40021e, 10 bytes>
0x40021e:	add	dword ptr [rbp - 0x44], 1
0x400222:	cmp	dword ptr [rbp - 0x44], 9
0x400226:	jle	0x40020e
