<Block for 0x400254, 45 bytes>
0x400254:	endbr64	
0x400258:	push	rbp
0x400259:	mov	rbp, rsp
0x40025c:	push	rbx
0x40025d:	sub	rsp, 0x48
0x400261:	mov	rax, qword ptr fs:[0x28]
0x40026a:	mov	qword ptr [rbp - 0x18], rax
0x40026e:	xor	eax, eax
0x400270:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400277:	mov	eax, 0
0x40027c:	call	0x400000
<Block for 0x400281, 4 bytes>
0x400281:	test	eax, eax
0x400283:	je	0x4002ce
<Block for 0x4002ce, 10 bytes>
0x4002ce:	mov	eax, 0
0x4002d3:	call	0x400000
<Block for 0x400285, 5 bytes>
0x400285:	call	0x500000
<Block for 0x4002d8, 4 bytes>
0x4002d8:	test	eax, eax
0x4002da:	je	0x400350
<Block for 0x40028a, 7 bytes>
0x40028a:	and	eax, 1
0x40028d:	test	eax, eax
0x40028f:	je	0x4002ae
<Block for 0x400350, 16 bytes>
0x400350:	nop	
0x400351:	mov	rax, qword ptr [rbp - 0x18]
0x400355:	xor	rax, qword ptr fs:[0x28]
0x40035e:	je	0x400365
<Block for 0x4002dc, 46 bytes>
0x4002dc:	mov	qword ptr [rbp - 0x40], 0
0x4002e4:	mov	qword ptr [rbp - 0x38], 0
0x4002ec:	mov	qword ptr [rbp - 0x30], 0
0x4002f4:	mov	qword ptr [rbp - 0x28], 0
0x4002fc:	mov	qword ptr [rbp - 0x20], 0
0x400304:	cmp	dword ptr [rbp - 0x48], 0
0x400308:	js	0x400342
<Block for 0x4002ae, 5 bytes>
0x4002ae:	call	0x500000
<Block for 0x400291, 5 bytes>
0x400291:	call	0x500000
<Block for 0x400365, 7 bytes>
0x400365:	add	rsp, 0x48
0x400369:	pop	rbx
0x40036a:	pop	rbp
0x40036b:	ret	
<Block for 0x400360, 5 bytes>
0x400360:	call	0x500018
<Block for 0x400342, 12 bytes>
0x400342:	lea	rdi, [rip + 0x22f]
0x400349:	call	0x500010
<Block for 0x40030a, 6 bytes>
0x40030a:	cmp	dword ptr [rbp - 0x48], 9
0x40030e:	jg	0x400342
<Block for 0x4002b3, 10 bytes>
0x4002b3:	shl	eax, 0x1e
0x4002b6:	mov	ebx, eax
0x4002b8:	call	0x500000
<Block for 0x400296, 10 bytes>
0x400296:	shl	eax, 0x1e
0x400299:	mov	ebx, eax
0x40029b:	call	0x500000
<Block for 0x40034e, 2 bytes>
0x40034e:	jmp	0x400350
<Block for 0x400310, 22 bytes>
0x400310:	mov	eax, dword ptr [rbp - 0x48]
0x400313:	cdqe	
0x400315:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40031d:	mov	dword ptr [rbp - 0x44], 0
0x400324:	jmp	0x40033a
<Block for 0x4002bd, 10 bytes>
0x4002bd:	shl	eax, 0xf
0x4002c0:	xor	ebx, eax
0x4002c2:	call	0x500000
<Block for 0x4002a0, 10 bytes>
0x4002a0:	shl	eax, 0xf
0x4002a3:	xor	ebx, eax
0x4002a5:	call	0x500000
<Block for 0x40033a, 6 bytes>
0x40033a:	cmp	dword ptr [rbp - 0x44], 9
0x40033e:	jle	0x400326
<Block for 0x4002c7, 17 bytes>
0x4002c7:	xor	eax, ebx
0x4002c9:	not	eax
0x4002cb:	mov	dword ptr [rbp - 0x48], eax
0x4002ce:	mov	eax, 0
0x4002d3:	call	0x400000
<Block for 0x4002aa, 4 bytes>
0x4002aa:	xor	eax, ebx
0x4002ac:	jmp	0x4002cb
<Block for 0x400326, 16 bytes>
0x400326:	mov	eax, dword ptr [rbp - 0x44]
0x400329:	cdqe	
0x40032b:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40032f:	mov	edi, eax
0x400331:	call	0x500008
<Block for 0x400340, 2 bytes>
0x400340:	jmp	0x400350
<Block for 0x4002cb, 13 bytes>
0x4002cb:	mov	dword ptr [rbp - 0x48], eax
0x4002ce:	mov	eax, 0
0x4002d3:	call	0x400000
<Block for 0x400336, 10 bytes>
0x400336:	add	dword ptr [rbp - 0x44], 1
0x40033a:	cmp	dword ptr [rbp - 0x44], 9
0x40033e:	jle	0x400326
