<Block for 0x40007a, 27 bytes>
0x40007a:	endbr64	
0x40007e:	push	rbp
0x40007f:	mov	rbp, rsp
0x400082:	push	r13
0x400084:	push	r12
0x400086:	push	rbx
0x400087:	sub	rsp, 8
0x40008b:	mov	edi, 0x10
0x400090:	call	0x500000
<Block for 0x400095, 18 bytes>
0x400095:	mov	rbx, rax
0x400098:	lea	rsi, [rip + 0xcd]
0x40009f:	mov	rdi, rbx
0x4000a2:	call	0x500008
<Block for 0x4000a7, 25 bytes>
0x4000a7:	mov	rax, qword ptr [rip + 0xfff6a]
0x4000ae:	mov	rdx, rax
0x4000b1:	lea	rsi, [rip + 0xfff68]
0x4000b8:	mov	rdi, rbx
0x4000bb:	call	0x500028
<Block for 0x4000c0, 18 bytes>
0x4000c0:	endbr64	
0x4000c4:	mov	r13, rax
0x4000c7:	mov	r12, rdx
0x4000ca:	mov	rdi, rbx
0x4000cd:	call	0x500030
<Block for 0x4000d2, 8 bytes>
0x4000d2:	mov	rax, r13
0x4000d5:	mov	rdx, r12
0x4000d8:	jmp	0x4000de
<Block for 0x4000de, 6 bytes>
0x4000de:	cmp	rdx, -1
0x4000e2:	je	0x4000ec
<Block for 0x4000ec, 8 bytes>
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500040
<Block for 0x4000e4, 8 bytes>
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500038
