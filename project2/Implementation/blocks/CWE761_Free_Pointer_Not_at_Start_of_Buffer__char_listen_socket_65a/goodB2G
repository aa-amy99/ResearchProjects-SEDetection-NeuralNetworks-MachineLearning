<Block for 0x4001f7, 48 bytes>
0x4001f7:	endbr64	
0x4001fb:	push	rbp
0x4001fc:	mov	rbp, rsp
0x4001ff:	sub	rsp, 0x50
0x400203:	mov	rax, qword ptr fs:[0x28]
0x40020c:	mov	qword ptr [rbp - 8], rax
0x400210:	xor	eax, eax
0x400212:	mov	rax, qword ptr [rip + 0xffe67]
0x400219:	mov	qword ptr [rbp - 0x40], rax
0x40021d:	mov	edi, 0x64
0x400222:	call	0x500010
<Block for 0x400227, 11 bytes>
0x400227:	mov	qword ptr [rbp - 0x38], rax
0x40022b:	cmp	qword ptr [rbp - 0x38], 0
0x400230:	jne	0x40023c
<Block for 0x400232, 10 bytes>
0x400232:	mov	edi, 0xffffffff
0x400237:	call	0x500018
<Block for 0x40023c, 33 bytes>
0x40023c:	mov	rax, qword ptr [rbp - 0x38]
0x400240:	mov	byte ptr [rax], 0
0x400243:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40024a:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400251:	mov	rax, qword ptr [rbp - 0x38]
0x400255:	mov	rdi, rax
0x400258:	call	0x500020
<Block for 0x40025d, 24 bytes>
0x40025d:	mov	qword ptr [rbp - 0x30], rax
0x400261:	mov	edx, 6
0x400266:	mov	esi, 1
0x40026b:	mov	edi, 2
0x400270:	call	0x500028
<Block for 0x400275, 13 bytes>
0x400275:	mov	dword ptr [rbp - 0x48], eax
0x400278:	cmp	dword ptr [rbp - 0x48], -1
0x40027c:	je	0x4003a0
<Block for 0x4003a0, 3 bytes>
0x4003a0:	nop	
0x4003a1:	jmp	0x4003aa
<Block for 0x400282, 22 bytes>
0x400282:	lea	rax, [rbp - 0x20]
0x400286:	mov	edx, 0x10
0x40028b:	mov	esi, 0
0x400290:	mov	rdi, rax
0x400293:	call	0x500030
<Block for 0x4003aa, 6 bytes>
0x4003aa:	cmp	dword ptr [rbp - 0x48], -1
0x4003ae:	je	0x4003ba
<Block for 0x400298, 23 bytes>
0x400298:	mov	word ptr [rbp - 0x20], 2
0x40029e:	mov	dword ptr [rbp - 0x1c], 0
0x4002a5:	mov	edi, 0x6987
0x4002aa:	call	0x500038
<Block for 0x4003ba, 6 bytes>
0x4003ba:	cmp	dword ptr [rbp - 0x4c], -1
0x4003be:	je	0x4003ca
<Block for 0x4003b0, 10 bytes>
0x4003b0:	mov	eax, dword ptr [rbp - 0x48]
0x4003b3:	mov	edi, eax
0x4003b5:	call	0x500068
<Block for 0x4002af, 26 bytes>
0x4002af:	mov	word ptr [rbp - 0x1e], ax
0x4002b3:	lea	rcx, [rbp - 0x20]
0x4002b7:	mov	eax, dword ptr [rbp - 0x48]
0x4002ba:	mov	edx, 0x10
0x4002bf:	mov	rsi, rcx
0x4002c2:	mov	edi, eax
0x4002c4:	call	0x500040
<Block for 0x4003ca, 13 bytes>
0x4003ca:	mov	rax, qword ptr [rbp - 0x38]
0x4003ce:	mov	rdx, qword ptr [rbp - 0x40]
0x4003d2:	mov	rdi, rax
0x4003d5:	call	rdx
<Block for 0x4003c0, 10 bytes>
0x4003c0:	mov	eax, dword ptr [rbp - 0x4c]
0x4003c3:	mov	edi, eax
0x4003c5:	call	0x500068
<Block for 0x4002c9, 9 bytes>
0x4002c9:	cmp	eax, -1
0x4002cc:	je	0x4003a3
<Block for 0x4003d7, 16 bytes>
0x4003d7:	nop	
0x4003d8:	mov	rax, qword ptr [rbp - 8]
0x4003dc:	xor	rax, qword ptr fs:[0x28]
0x4003e5:	je	0x4003ec
<Block for 0x4003a3, 3 bytes>
0x4003a3:	nop	
0x4003a4:	jmp	0x4003aa
<Block for 0x4002d2, 15 bytes>
0x4002d2:	mov	eax, dword ptr [rbp - 0x48]
0x4002d5:	mov	esi, 5
0x4002da:	mov	edi, eax
0x4002dc:	call	0x500048
<Block for 0x4003ec, 2 bytes>
0x4003ec:	leave	
0x4003ed:	ret	
<Block for 0x4003e7, 5 bytes>
0x4003e7:	call	0x500070
<Block for 0x4002e1, 9 bytes>
0x4002e1:	cmp	eax, -1
0x4002e4:	je	0x4003a6
<Block for 0x4003a6, 3 bytes>
0x4003a6:	nop	
0x4003a7:	jmp	0x4003aa
<Block for 0x4002ea, 20 bytes>
0x4002ea:	mov	eax, dword ptr [rbp - 0x48]
0x4002ed:	mov	edx, 0
0x4002f2:	mov	esi, 0
0x4002f7:	mov	edi, eax
0x4002f9:	call	0x500050
<Block for 0x4002fe, 13 bytes>
0x4002fe:	mov	dword ptr [rbp - 0x4c], eax
0x400301:	cmp	dword ptr [rbp - 0x4c], -1
0x400305:	je	0x4003a9
<Block for 0x40030b, 39 bytes>
0x40030b:	mov	eax, 0x63
0x400310:	sub	rax, qword ptr [rbp - 0x30]
0x400314:	mov	rdx, rax
0x400317:	mov	rcx, qword ptr [rbp - 0x38]
0x40031b:	mov	rax, qword ptr [rbp - 0x30]
0x40031f:	lea	rsi, [rcx + rax]
0x400323:	mov	eax, dword ptr [rbp - 0x4c]
0x400326:	mov	ecx, 0
0x40032b:	mov	edi, eax
0x40032d:	call	0x500058
<Block for 0x4003a9, 1 bytes>
0x4003a9:	nop	
<Block for 0x400332, 9 bytes>
0x400332:	mov	dword ptr [rbp - 0x44], eax
0x400335:	cmp	dword ptr [rbp - 0x44], -1
0x400339:	je	0x4003aa
<Block for 0x40033b, 6 bytes>
0x40033b:	cmp	dword ptr [rbp - 0x44], 0
0x40033f:	je	0x4003aa
<Block for 0x400341, 40 bytes>
0x400341:	mov	eax, dword ptr [rbp - 0x44]
0x400344:	movsxd	rdx, eax
0x400347:	mov	rax, qword ptr [rbp - 0x30]
0x40034b:	add	rdx, rax
0x40034e:	mov	rax, qword ptr [rbp - 0x38]
0x400352:	add	rax, rdx
0x400355:	mov	byte ptr [rax], 0
0x400358:	mov	rax, qword ptr [rbp - 0x38]
0x40035c:	mov	esi, 0xd
0x400361:	mov	rdi, rax
0x400364:	call	0x500060
<Block for 0x400369, 11 bytes>
0x400369:	mov	qword ptr [rbp - 0x28], rax
0x40036d:	cmp	qword ptr [rbp - 0x28], 0
0x400372:	je	0x40037b
<Block for 0x40037b, 17 bytes>
0x40037b:	mov	rax, qword ptr [rbp - 0x38]
0x40037f:	mov	esi, 0xa
0x400384:	mov	rdi, rax
0x400387:	call	0x500060
<Block for 0x400374, 24 bytes>
0x400374:	mov	rax, qword ptr [rbp - 0x28]
0x400378:	mov	byte ptr [rax], 0
0x40037b:	mov	rax, qword ptr [rbp - 0x38]
0x40037f:	mov	esi, 0xa
0x400384:	mov	rdi, rax
0x400387:	call	0x500060
<Block for 0x40038c, 11 bytes>
0x40038c:	mov	qword ptr [rbp - 0x28], rax
0x400390:	cmp	qword ptr [rbp - 0x28], 0
0x400395:	je	0x4003aa
<Block for 0x400397, 9 bytes>
0x400397:	mov	rax, qword ptr [rbp - 0x28]
0x40039b:	mov	byte ptr [rax], 0
0x40039e:	jmp	0x4003aa
