<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x40], rax
0x400026:	mov	edi, 0x64
0x40002b:	call	0x500010
<Block for 0x400030, 11 bytes>
0x400030:	mov	qword ptr [rbp - 0x38], rax
0x400034:	cmp	qword ptr [rbp - 0x38], 0
0x400039:	jne	0x400045
<Block for 0x40003b, 10 bytes>
0x40003b:	mov	edi, 0xffffffff
0x400040:	call	0x500018
<Block for 0x400045, 33 bytes>
0x400045:	mov	rax, qword ptr [rbp - 0x38]
0x400049:	mov	byte ptr [rax], 0
0x40004c:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400053:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x40005a:	mov	rax, qword ptr [rbp - 0x38]
0x40005e:	mov	rdi, rax
0x400061:	call	0x500020
<Block for 0x400066, 24 bytes>
0x400066:	mov	qword ptr [rbp - 0x30], rax
0x40006a:	mov	edx, 6
0x40006f:	mov	esi, 1
0x400074:	mov	edi, 2
0x400079:	call	0x500028
<Block for 0x40007e, 13 bytes>
0x40007e:	mov	dword ptr [rbp - 0x48], eax
0x400081:	cmp	dword ptr [rbp - 0x48], -1
0x400085:	je	0x4001a9
<Block for 0x4001a9, 3 bytes>
0x4001a9:	nop	
0x4001aa:	jmp	0x4001b3
<Block for 0x40008b, 22 bytes>
0x40008b:	lea	rax, [rbp - 0x20]
0x40008f:	mov	edx, 0x10
0x400094:	mov	esi, 0
0x400099:	mov	rdi, rax
0x40009c:	call	0x500030
<Block for 0x4001b3, 6 bytes>
0x4001b3:	cmp	dword ptr [rbp - 0x48], -1
0x4001b7:	je	0x4001c3
<Block for 0x4000a1, 23 bytes>
0x4000a1:	mov	word ptr [rbp - 0x20], 2
0x4000a7:	mov	dword ptr [rbp - 0x1c], 0
0x4000ae:	mov	edi, 0x6987
0x4000b3:	call	0x500038
<Block for 0x4001c3, 6 bytes>
0x4001c3:	cmp	dword ptr [rbp - 0x4c], -1
0x4001c7:	je	0x4001d3
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	eax, dword ptr [rbp - 0x48]
0x4001bc:	mov	edi, eax
0x4001be:	call	0x500068
<Block for 0x4000b8, 26 bytes>
0x4000b8:	mov	word ptr [rbp - 0x1e], ax
0x4000bc:	lea	rcx, [rbp - 0x20]
0x4000c0:	mov	eax, dword ptr [rbp - 0x48]
0x4000c3:	mov	edx, 0x10
0x4000c8:	mov	rsi, rcx
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500040
<Block for 0x4001d3, 13 bytes>
0x4001d3:	mov	rax, qword ptr [rbp - 0x38]
0x4001d7:	mov	rdx, qword ptr [rbp - 0x40]
0x4001db:	mov	rdi, rax
0x4001de:	call	rdx
<Block for 0x4001c9, 10 bytes>
0x4001c9:	mov	eax, dword ptr [rbp - 0x4c]
0x4001cc:	mov	edi, eax
0x4001ce:	call	0x500068
<Block for 0x4000d2, 9 bytes>
0x4000d2:	cmp	eax, -1
0x4000d5:	je	0x4001ac
<Block for 0x4001e0, 16 bytes>
0x4001e0:	nop	
0x4001e1:	mov	rax, qword ptr [rbp - 8]
0x4001e5:	xor	rax, qword ptr fs:[0x28]
0x4001ee:	je	0x4001f5
<Block for 0x4001ac, 3 bytes>
0x4001ac:	nop	
0x4001ad:	jmp	0x4001b3
<Block for 0x4000db, 15 bytes>
0x4000db:	mov	eax, dword ptr [rbp - 0x48]
0x4000de:	mov	esi, 5
0x4000e3:	mov	edi, eax
0x4000e5:	call	0x500048
<Block for 0x4001f5, 2 bytes>
0x4001f5:	leave	
0x4001f6:	ret	
<Block for 0x4001f0, 5 bytes>
0x4001f0:	call	0x500070
<Block for 0x4000ea, 9 bytes>
0x4000ea:	cmp	eax, -1
0x4000ed:	je	0x4001af
<Block for 0x4001af, 3 bytes>
0x4001af:	nop	
0x4001b0:	jmp	0x4001b3
<Block for 0x4000f3, 20 bytes>
0x4000f3:	mov	eax, dword ptr [rbp - 0x48]
0x4000f6:	mov	edx, 0
0x4000fb:	mov	esi, 0
0x400100:	mov	edi, eax
0x400102:	call	0x500050
<Block for 0x400107, 13 bytes>
0x400107:	mov	dword ptr [rbp - 0x4c], eax
0x40010a:	cmp	dword ptr [rbp - 0x4c], -1
0x40010e:	je	0x4001b2
<Block for 0x400114, 39 bytes>
0x400114:	mov	eax, 0x63
0x400119:	sub	rax, qword ptr [rbp - 0x30]
0x40011d:	mov	rdx, rax
0x400120:	mov	rcx, qword ptr [rbp - 0x38]
0x400124:	mov	rax, qword ptr [rbp - 0x30]
0x400128:	lea	rsi, [rcx + rax]
0x40012c:	mov	eax, dword ptr [rbp - 0x4c]
0x40012f:	mov	ecx, 0
0x400134:	mov	edi, eax
0x400136:	call	0x500058
<Block for 0x4001b2, 1 bytes>
0x4001b2:	nop	
<Block for 0x40013b, 9 bytes>
0x40013b:	mov	dword ptr [rbp - 0x44], eax
0x40013e:	cmp	dword ptr [rbp - 0x44], -1
0x400142:	je	0x4001b3
<Block for 0x400144, 6 bytes>
0x400144:	cmp	dword ptr [rbp - 0x44], 0
0x400148:	je	0x4001b3
<Block for 0x40014a, 40 bytes>
0x40014a:	mov	eax, dword ptr [rbp - 0x44]
0x40014d:	movsxd	rdx, eax
0x400150:	mov	rax, qword ptr [rbp - 0x30]
0x400154:	add	rdx, rax
0x400157:	mov	rax, qword ptr [rbp - 0x38]
0x40015b:	add	rax, rdx
0x40015e:	mov	byte ptr [rax], 0
0x400161:	mov	rax, qword ptr [rbp - 0x38]
0x400165:	mov	esi, 0xd
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500060
<Block for 0x400172, 11 bytes>
0x400172:	mov	qword ptr [rbp - 0x28], rax
0x400176:	cmp	qword ptr [rbp - 0x28], 0
0x40017b:	je	0x400184
<Block for 0x400184, 17 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0x38]
0x400188:	mov	esi, 0xa
0x40018d:	mov	rdi, rax
0x400190:	call	0x500060
<Block for 0x40017d, 24 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x28]
0x400181:	mov	byte ptr [rax], 0
0x400184:	mov	rax, qword ptr [rbp - 0x38]
0x400188:	mov	esi, 0xa
0x40018d:	mov	rdi, rax
0x400190:	call	0x500060
<Block for 0x400195, 11 bytes>
0x400195:	mov	qword ptr [rbp - 0x28], rax
0x400199:	cmp	qword ptr [rbp - 0x28], 0
0x40019e:	je	0x4001b3
<Block for 0x4001a0, 9 bytes>
0x4001a0:	mov	rax, qword ptr [rbp - 0x28]
0x4001a4:	mov	byte ptr [rax], 0
0x4001a7:	jmp	0x4001b3
