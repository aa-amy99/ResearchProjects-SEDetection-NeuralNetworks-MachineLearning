<Block for 0x400282, 40 bytes>
0x400282:	endbr64	
0x400286:	push	rbp
0x400287:	mov	rbp, rsp
0x40028a:	push	rbx
0x40028b:	sub	rsp, 0x68
0x40028f:	mov	rax, qword ptr fs:[0x28]
0x400298:	mov	qword ptr [rbp - 0x18], rax
0x40029c:	xor	eax, eax
0x40029e:	lea	rax, [rbp - 0x70]
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x400500
<Block for 0x4002aa, 12 bytes>
0x4002aa:	lea	rax, [rbp - 0x50]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x400580
<Block for 0x4002b6, 26 bytes>
0x4002b6:	mov	dword ptr [rbp - 0x30], 0x64
0x4002bd:	lea	rdx, [rbp - 0x30]
0x4002c1:	lea	rax, [rbp - 0x70]
0x4002c5:	mov	rsi, rdx
0x4002c8:	mov	rdi, rax
0x4002cb:	call	0x400738
<Block for 0x4002d0, 26 bytes>
0x4002d0:	mov	dword ptr [rbp - 0x30], 0
0x4002d7:	lea	rdx, [rbp - 0x30]
0x4002db:	lea	rax, [rbp - 0x70]
0x4002df:	mov	rsi, rdx
0x4002e2:	mov	rdi, rax
0x4002e5:	call	0x400738
<Block for 0x4002ea, 19 bytes>
0x4002ea:	lea	rdx, [rbp - 0x70]
0x4002ee:	lea	rax, [rbp - 0x50]
0x4002f2:	mov	rsi, rdx
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x400786
<Block for 0x4002fd, 19 bytes>
0x4002fd:	lea	rdx, [rbp - 0x70]
0x400301:	lea	rax, [rbp - 0x50]
0x400305:	mov	rsi, rdx
0x400308:	mov	rdi, rax
0x40030b:	call	0x400786
<Block for 0x400310, 19 bytes>
0x400310:	lea	rdx, [rbp - 0x70]
0x400314:	lea	rax, [rbp - 0x50]
0x400318:	mov	rsi, rdx
0x40031b:	mov	rdi, rax
0x40031e:	call	0x400786
<Block for 0x400323, 19 bytes>
0x400323:	lea	rdx, [rbp - 0x50]
0x400327:	lea	rax, [rbp - 0x30]
0x40032b:	mov	rsi, rdx
0x40032e:	mov	rdi, rax
0x400331:	call	0x4007c0
<Block for 0x400336, 12 bytes>
0x400336:	lea	rax, [rbp - 0x30]
0x40033a:	mov	rdi, rax
0x40033d:	call	0x500020
<Block for 0x400342, 12 bytes>
0x400342:	lea	rax, [rbp - 0x30]
0x400346:	mov	rdi, rax
0x400349:	call	0x4005a0
<Block for 0x40034e, 12 bytes>
0x40034e:	lea	rax, [rbp - 0x50]
0x400352:	mov	rdi, rax
0x400355:	call	0x4005a0
<Block for 0x40035a, 12 bytes>
0x40035a:	lea	rax, [rbp - 0x70]
0x40035e:	mov	rdi, rax
0x400361:	call	0x400520
<Block for 0x400366, 16 bytes>
0x400366:	nop	
0x400367:	mov	rax, qword ptr [rbp - 0x18]
0x40036b:	xor	rax, qword ptr fs:[0x28]
0x400374:	je	0x4003bc
<Block for 0x4003bc, 7 bytes>
0x4003bc:	add	rsp, 0x68
0x4003c0:	pop	rbx
0x4003c1:	pop	rbp
0x4003c2:	ret	
<Block for 0x400376, 2 bytes>
0x400376:	jmp	0x4003b7
<Block for 0x4003b7, 5 bytes>
0x4003b7:	call	0x500010
