<Block for 0x40024e, 40 bytes>
0x40024e:	endbr64	
0x400252:	push	rbp
0x400253:	mov	rbp, rsp
0x400256:	sub	rsp, 0x40
0x40025a:	mov	dword ptr [rbp - 0x34], edi
0x40025d:	mov	rax, qword ptr fs:[0x28]
0x400266:	mov	qword ptr [rbp - 8], rax
0x40026a:	xor	eax, eax
0x40026c:	mov	eax, dword ptr [rip + 0xce]
0x400272:	test	eax, eax
0x400274:	je	0x4002c2
<Block for 0x4002c2, 16 bytes>
0x4002c2:	nop	
0x4002c3:	mov	rax, qword ptr [rbp - 8]
0x4002c7:	xor	rax, qword ptr fs:[0x28]
0x4002d0:	je	0x4002d7
<Block for 0x400276, 46 bytes>
0x400276:	mov	qword ptr [rbp - 0x30], 0
0x40027e:	mov	qword ptr [rbp - 0x28], 0
0x400286:	mov	qword ptr [rbp - 0x20], 0
0x40028e:	mov	qword ptr [rbp - 0x18], 0
0x400296:	mov	qword ptr [rbp - 0x10], 0
0x40029e:	cmp	dword ptr [rbp - 0x34], 9
0x4002a2:	jg	0x4002b6
<Block for 0x4002d7, 2 bytes>
0x4002d7:	leave	
0x4002d8:	ret	
<Block for 0x4002d2, 5 bytes>
0x4002d2:	call	0x500010
<Block for 0x4002a4, 16 bytes>
0x4002a4:	mov	eax, dword ptr [rbp - 0x34]
0x4002a7:	cdqe	
0x4002a9:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002ad:	mov	edi, eax
0x4002af:	call	0x500000
<Block for 0x4002b6, 12 bytes>
0x4002b6:	lea	rdi, [rip + 0x8b]
0x4002bd:	call	0x500008
<Block for 0x4002b4, 2 bytes>
0x4002b4:	jmp	0x4002c2
