<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x40042a
<Block for 0x40002b, 21 bytes>
0x40002b:	mov	qword ptr [rbp - 0x90], 0
0x400036:	mov	edi, 0x64
0x40003b:	call	0x500000
<Block for 0x400040, 32 bytes>
0x400040:	mov	qword ptr [rbp - 0x88], rax
0x400047:	mov	rax, qword ptr [rbp - 0x88]
0x40004e:	mov	edx, 0x63
0x400053:	mov	esi, 0x41
0x400058:	mov	rdi, rax
0x40005b:	call	0x500008
<Block for 0x400060, 58 bytes>
0x400060:	mov	rax, qword ptr [rbp - 0x88]
0x400067:	add	rax, 0x63
0x40006b:	mov	byte ptr [rax], 0
0x40006e:	mov	rax, qword ptr [rbp - 0x88]
0x400075:	sub	rax, 8
0x400079:	mov	qword ptr [rbp - 0x90], rax
0x400080:	mov	dword ptr [rbp - 0x50], 0
0x400087:	lea	rdx, [rbp - 0x50]
0x40008b:	lea	rax, [rbp - 0x80]
0x40008f:	mov	rsi, rdx
0x400092:	mov	rdi, rax
0x400095:	call	0x4005e2
<Block for 0x40009a, 36 bytes>
0x40009a:	mov	rdx, qword ptr [rbp - 0x90]
0x4000a1:	mov	qword ptr [rax], rdx
0x4000a4:	mov	dword ptr [rbp - 0x50], 1
0x4000ab:	lea	rdx, [rbp - 0x50]
0x4000af:	lea	rax, [rbp - 0x80]
0x4000b3:	mov	rsi, rdx
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x4005e2
<Block for 0x4000be, 36 bytes>
0x4000be:	mov	rdx, qword ptr [rbp - 0x90]
0x4000c5:	mov	qword ptr [rax], rdx
0x4000c8:	mov	dword ptr [rbp - 0x50], 2
0x4000cf:	lea	rdx, [rbp - 0x50]
0x4000d3:	lea	rax, [rbp - 0x80]
0x4000d7:	mov	rsi, rdx
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x4005e2
<Block for 0x4000e2, 29 bytes>
0x4000e2:	mov	rdx, qword ptr [rbp - 0x90]
0x4000e9:	mov	qword ptr [rax], rdx
0x4000ec:	lea	rdx, [rbp - 0x80]
0x4000f0:	lea	rax, [rbp - 0x50]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x40046a
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rax, [rbp - 0x50]
0x400103:	mov	rdi, rax
0x400106:	call	0x500010
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rax, [rbp - 0x50]
0x40010f:	mov	rdi, rax
0x400112:	call	0x40044a
<Block for 0x400117, 12 bytes>
0x400117:	lea	rax, [rbp - 0x80]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x40044a
<Block for 0x400123, 16 bytes>
0x400123:	nop	
0x400124:	mov	rax, qword ptr [rbp - 0x18]
0x400128:	xor	rax, qword ptr fs:[0x28]
0x400131:	je	0x40016d
<Block for 0x40016d, 10 bytes>
0x40016d:	add	rsp, 0x88
0x400174:	pop	rbx
0x400175:	pop	rbp
0x400176:	ret	
<Block for 0x400133, 2 bytes>
0x400133:	jmp	0x400168
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500020
