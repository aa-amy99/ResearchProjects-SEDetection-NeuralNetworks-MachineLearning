<Block for 0x4000cc, 45 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x10
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	qword ptr [rbp - 0x10], 0
0x4000ef:	mov	edi, 1
0x4000f4:	call	0x500000
<Block for 0x4000f9, 20 bytes>
0x4000f9:	mov	qword ptr [rbp - 0x10], rax
0x4000fd:	mov	rax, qword ptr [rbp - 0x10]
0x400101:	mov	byte ptr [rax], 0x41
0x400104:	mov	rax, qword ptr [rbp - 0x10]
0x400108:	test	rax, rax
0x40010b:	je	0x40011a
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rax, [rbp - 0x10]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500028
<Block for 0x40010d, 13 bytes>
0x40010d:	mov	esi, 1
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x400126, 16 bytes>
0x400126:	nop	
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	xor	rax, qword ptr fs:[0x28]
0x400134:	je	0x40013b
<Block for 0x40013b, 2 bytes>
0x40013b:	leave	
0x40013c:	ret	
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500018
