<Block for 0x40005f, 42 bytes>
0x40005f:	endbr64	
0x400063:	push	rbp
0x400064:	mov	rbp, rsp
0x400067:	sub	rsp, 0x10
0x40006b:	mov	rax, qword ptr fs:[0x28]
0x400074:	mov	qword ptr [rbp - 8], rax
0x400078:	xor	eax, eax
0x40007a:	mov	byte ptr [rbp - 0xd], 0x20
0x40007e:	movsx	eax, byte ptr [rbp - 0xd]
0x400082:	mov	edi, eax
0x400084:	call	0x400000
<Block for 0x400089, 34 bytes>
0x400089:	mov	byte ptr [rbp - 0xd], al
0x40008c:	mov	byte ptr [rbp - 0xc], 0x78
0x400090:	movzx	eax, byte ptr [rbp - 0xd]
0x400094:	mov	byte ptr [rbp - 0xb], al
0x400097:	mov	byte ptr [rbp - 0xa], 0x7a
0x40009b:	mov	byte ptr [rbp - 9], 0
0x40009f:	lea	rax, [rbp - 0xc]
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500020
<Block for 0x4000ab, 16 bytes>
0x4000ab:	nop	
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	xor	rax, qword ptr fs:[0x28]
0x4000b9:	je	0x4000c0
<Block for 0x4000c0, 2 bytes>
0x4000c0:	leave	
0x4000c1:	ret	
<Block for 0x4000bb, 5 bytes>
0x4000bb:	call	0x500018
