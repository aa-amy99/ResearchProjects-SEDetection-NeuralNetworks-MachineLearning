<Block for 0x400000, 173 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x98]
0x400025:	mov	qword ptr [rbp - 0x90], rax
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	qword ptr [rbp - 0x98], rax
0x40009e:	mov	rax, qword ptr [rbp - 0x98]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500000
<Block for 0x4000ad, 29 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x88], rax
0x4000b4:	mov	eax, 0x64
0x4000b9:	sub	rax, qword ptr [rbp - 0x88]
0x4000c0:	cmp	rax, 1
0x4000c4:	jbe	0x400151
<Block for 0x400151, 45 bytes>
0x400151:	mov	rax, qword ptr [rbp - 0x90]
0x400158:	mov	rax, qword ptr [rax]
0x40015b:	mov	qword ptr [rbp - 0x78], rax
0x40015f:	lea	rdx, [rbp - 0xa4]
0x400166:	mov	rax, qword ptr [rbp - 0x78]
0x40016a:	lea	rsi, [rip + 0x3c1]
0x400171:	mov	rdi, rax
0x400174:	mov	eax, 0
0x400179:	call	0x500028
<Block for 0x4000ca, 19 bytes>
0x4000ca:	lea	rsi, [rip + 0x442]
0x4000d1:	lea	rdi, [rip + 0x43d]
0x4000d8:	call	0x500008
<Block for 0x40017e, 10 bytes>
0x40017e:	cmp	eax, 1
0x400181:	sete	al
0x400184:	test	al, al
0x400186:	je	0x4001c7
<Block for 0x4000dd, 11 bytes>
0x4000dd:	mov	qword ptr [rbp - 0x80], rax
0x4000e1:	cmp	qword ptr [rbp - 0x80], 0
0x4000e6:	je	0x400151
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x400188, 34 bytes>
0x400188:	mov	dword ptr [rbp - 0x9c], 0
0x400192:	mov	dword ptr [rbp - 0xa0], 0
0x40019c:	mov	eax, dword ptr [rbp - 0xa4]
0x4001a2:	cmp	dword ptr [rbp - 0xa0], eax
0x4001a8:	jge	0x4001ba
<Block for 0x4000e8, 51 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x88]
0x4000ef:	mov	edx, 0x64
0x4000f4:	sub	edx, eax
0x4000f6:	mov	eax, edx
0x4000f8:	mov	esi, eax
0x4000fa:	mov	rdx, qword ptr [rbp - 0x98]
0x400101:	mov	rax, qword ptr [rbp - 0x88]
0x400108:	lea	rcx, [rdx + rax]
0x40010c:	mov	rax, qword ptr [rbp - 0x80]
0x400110:	mov	rdx, rax
0x400113:	mov	rdi, rcx
0x400116:	call	0x500010
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500038
<Block for 0x4001aa, 16 bytes>
0x4001aa:	add	dword ptr [rbp - 0x9c], 1
0x4001b1:	add	dword ptr [rbp - 0xa0], 1
0x4001b8:	jmp	0x40019c
<Block for 0x4001ba, 13 bytes>
0x4001ba:	mov	eax, dword ptr [rbp - 0x9c]
0x4001c0:	mov	edi, eax
0x4001c2:	call	0x500030
<Block for 0x40011b, 10 bytes>
0x40011b:	test	rax, rax
0x40011e:	sete	al
0x400121:	test	al, al
0x400123:	je	0x400145
<Block for 0x40019c, 14 bytes>
0x40019c:	mov	eax, dword ptr [rbp - 0xa4]
0x4001a2:	cmp	dword ptr [rbp - 0xa0], eax
0x4001a8:	jge	0x4001ba
<Block for 0x400145, 12 bytes>
0x400145:	mov	rax, qword ptr [rbp - 0x80]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500020
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x3f7]
0x40012c:	call	0x500018
<Block for 0x400131, 32 bytes>
0x400131:	mov	rdx, qword ptr [rbp - 0x98]
0x400138:	mov	rax, qword ptr [rbp - 0x88]
0x40013f:	add	rax, rdx
0x400142:	mov	byte ptr [rax], 0
0x400145:	mov	rax, qword ptr [rbp - 0x80]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500020
