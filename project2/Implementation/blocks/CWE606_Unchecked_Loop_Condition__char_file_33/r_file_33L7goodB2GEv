<Block for 0x400313, 173 bytes>
0x400313:	endbr64	
0x400317:	push	rbp
0x400318:	mov	rbp, rsp
0x40031b:	sub	rsp, 0xb0
0x400322:	mov	rax, qword ptr fs:[0x28]
0x40032b:	mov	qword ptr [rbp - 8], rax
0x40032f:	xor	eax, eax
0x400331:	lea	rax, [rbp - 0x98]
0x400338:	mov	qword ptr [rbp - 0x90], rax
0x40033f:	mov	qword ptr [rbp - 0x70], 0
0x400347:	mov	qword ptr [rbp - 0x68], 0
0x40034f:	mov	qword ptr [rbp - 0x60], 0
0x400357:	mov	qword ptr [rbp - 0x58], 0
0x40035f:	mov	qword ptr [rbp - 0x50], 0
0x400367:	mov	qword ptr [rbp - 0x48], 0
0x40036f:	mov	qword ptr [rbp - 0x40], 0
0x400377:	mov	qword ptr [rbp - 0x38], 0
0x40037f:	mov	qword ptr [rbp - 0x30], 0
0x400387:	mov	qword ptr [rbp - 0x28], 0
0x40038f:	mov	qword ptr [rbp - 0x20], 0
0x400397:	mov	qword ptr [rbp - 0x18], 0
0x40039f:	mov	dword ptr [rbp - 0x10], 0
0x4003a6:	lea	rax, [rbp - 0x70]
0x4003aa:	mov	qword ptr [rbp - 0x98], rax
0x4003b1:	mov	rax, qword ptr [rbp - 0x98]
0x4003b8:	mov	rdi, rax
0x4003bb:	call	0x500000
<Block for 0x4003c0, 29 bytes>
0x4003c0:	mov	qword ptr [rbp - 0x88], rax
0x4003c7:	mov	eax, 0x64
0x4003cc:	sub	rax, qword ptr [rbp - 0x88]
0x4003d3:	cmp	rax, 1
0x4003d7:	jbe	0x400464
<Block for 0x400464, 45 bytes>
0x400464:	mov	rax, qword ptr [rbp - 0x90]
0x40046b:	mov	rax, qword ptr [rax]
0x40046e:	mov	qword ptr [rbp - 0x78], rax
0x400472:	lea	rdx, [rbp - 0xa4]
0x400479:	mov	rax, qword ptr [rbp - 0x78]
0x40047d:	lea	rsi, [rip + 0xae]
0x400484:	mov	rdi, rax
0x400487:	mov	eax, 0
0x40048c:	call	0x500028
<Block for 0x4003dd, 19 bytes>
0x4003dd:	lea	rsi, [rip + 0x12f]
0x4003e4:	lea	rdi, [rip + 0x12a]
0x4003eb:	call	0x500008
<Block for 0x400491, 10 bytes>
0x400491:	cmp	eax, 1
0x400494:	sete	al
0x400497:	test	al, al
0x400499:	je	0x4004e7
<Block for 0x4003f0, 11 bytes>
0x4003f0:	mov	qword ptr [rbp - 0x80], rax
0x4003f4:	cmp	qword ptr [rbp - 0x80], 0
0x4003f9:	je	0x400464
<Block for 0x4004e7, 16 bytes>
0x4004e7:	nop	
0x4004e8:	mov	rax, qword ptr [rbp - 8]
0x4004ec:	xor	rax, qword ptr fs:[0x28]
0x4004f5:	je	0x4004fc
<Block for 0x40049b, 13 bytes>
0x40049b:	mov	eax, dword ptr [rbp - 0xa4]
0x4004a1:	cmp	eax, 0x270f
0x4004a6:	jg	0x4004e7
<Block for 0x4003fb, 51 bytes>
0x4003fb:	mov	rax, qword ptr [rbp - 0x88]
0x400402:	mov	edx, 0x64
0x400407:	sub	edx, eax
0x400409:	mov	eax, edx
0x40040b:	mov	esi, eax
0x40040d:	mov	rdx, qword ptr [rbp - 0x98]
0x400414:	mov	rax, qword ptr [rbp - 0x88]
0x40041b:	lea	rcx, [rdx + rax]
0x40041f:	mov	rax, qword ptr [rbp - 0x80]
0x400423:	mov	rdx, rax
0x400426:	mov	rdi, rcx
0x400429:	call	0x500010
<Block for 0x4004fc, 2 bytes>
0x4004fc:	leave	
0x4004fd:	ret	
<Block for 0x4004f7, 5 bytes>
0x4004f7:	call	0x500038
<Block for 0x4004a8, 34 bytes>
0x4004a8:	mov	dword ptr [rbp - 0x9c], 0
0x4004b2:	mov	dword ptr [rbp - 0xa0], 0
0x4004bc:	mov	eax, dword ptr [rbp - 0xa4]
0x4004c2:	cmp	dword ptr [rbp - 0xa0], eax
0x4004c8:	jge	0x4004da
<Block for 0x40042e, 10 bytes>
0x40042e:	test	rax, rax
0x400431:	sete	al
0x400434:	test	al, al
0x400436:	je	0x400458
<Block for 0x4004ca, 16 bytes>
0x4004ca:	add	dword ptr [rbp - 0x9c], 1
0x4004d1:	add	dword ptr [rbp - 0xa0], 1
0x4004d8:	jmp	0x4004bc
<Block for 0x4004da, 13 bytes>
0x4004da:	mov	eax, dword ptr [rbp - 0x9c]
0x4004e0:	mov	edi, eax
0x4004e2:	call	0x500030
<Block for 0x400458, 12 bytes>
0x400458:	mov	rax, qword ptr [rbp - 0x80]
0x40045c:	mov	rdi, rax
0x40045f:	call	0x500020
<Block for 0x400438, 12 bytes>
0x400438:	lea	rdi, [rip + 0xe4]
0x40043f:	call	0x500018
<Block for 0x4004bc, 14 bytes>
0x4004bc:	mov	eax, dword ptr [rbp - 0xa4]
0x4004c2:	cmp	dword ptr [rbp - 0xa0], eax
0x4004c8:	jge	0x4004da
<Block for 0x400444, 32 bytes>
0x400444:	mov	rdx, qword ptr [rbp - 0x98]
0x40044b:	mov	rax, qword ptr [rbp - 0x88]
0x400452:	add	rax, rdx
0x400455:	mov	byte ptr [rax], 0
0x400458:	mov	rax, qword ptr [rbp - 0x80]
0x40045c:	mov	rdi, rax
0x40045f:	call	0x500020
