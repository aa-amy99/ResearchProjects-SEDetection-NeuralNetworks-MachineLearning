<Block for 0x400139, 51 bytes>
0x400139:	endbr64	
0x40013d:	push	rbp
0x40013e:	mov	rbp, rsp
0x400141:	sub	rsp, 0x90
0x400148:	mov	rax, qword ptr fs:[0x28]
0x400151:	mov	qword ptr [rbp - 8], rax
0x400155:	xor	eax, eax
0x400157:	mov	qword ptr [rbp - 0x88], 0
0x400162:	mov	eax, 0
0x400167:	call	0x500000
<Block for 0x40016c, 4 bytes>
0x40016c:	test	eax, eax
0x40016e:	je	0x4001bd
<Block for 0x4001bd, 10 bytes>
0x4001bd:	mov	edi, 0x64
0x4001c2:	call	0x500008
<Block for 0x400170, 10 bytes>
0x400170:	mov	edi, 0x64
0x400175:	call	0x500008
<Block for 0x4001c7, 11 bytes>
0x4001c7:	mov	qword ptr [rbp - 0x80], rax
0x4001cb:	cmp	qword ptr [rbp - 0x80], 0
0x4001d0:	jne	0x4001dc
<Block for 0x40017a, 11 bytes>
0x40017a:	mov	qword ptr [rbp - 0x78], rax
0x40017e:	cmp	qword ptr [rbp - 0x78], 0
0x400183:	jne	0x40018f
<Block for 0x4001d2, 10 bytes>
0x4001d2:	mov	edi, 0xffffffff
0x4001d7:	call	0x500010
<Block for 0x4001dc, 22 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 0x80]
0x4001e0:	mov	edx, 0x63
0x4001e5:	mov	esi, 0x41
0x4001ea:	mov	rdi, rax
0x4001ed:	call	0x500018
<Block for 0x400185, 10 bytes>
0x400185:	mov	edi, 0xffffffff
0x40018a:	call	0x500010
<Block for 0x40018f, 22 bytes>
0x40018f:	mov	rax, qword ptr [rbp - 0x78]
0x400193:	mov	edx, 0x63
0x400198:	mov	esi, 0x41
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500018
<Block for 0x4001f2, 44 bytes>
0x4001f2:	mov	rax, qword ptr [rbp - 0x80]
0x4001f6:	add	rax, 0x63
0x4001fa:	mov	byte ptr [rax], 0
0x4001fd:	mov	rax, qword ptr [rbp - 0x80]
0x400201:	mov	qword ptr [rbp - 0x88], rax
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500018
<Block for 0x4001a5, 24 bytes>
0x4001a5:	mov	rax, qword ptr [rbp - 0x78]
0x4001a9:	add	rax, 0x63
0x4001ad:	mov	byte ptr [rax], 0
0x4001b0:	mov	rax, qword ptr [rbp - 0x78]
0x4001b4:	mov	qword ptr [rbp - 0x88], rax
0x4001bb:	jmp	0x400208
<Block for 0x40021e, 16 bytes>
0x40021e:	mov	byte ptr [rbp - 0xd], 0
0x400222:	lea	rax, [rbp - 0x70]
0x400226:	mov	rdi, rax
0x400229:	call	0x500020
<Block for 0x400208, 22 bytes>
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500018
<Block for 0x40022e, 25 bytes>
0x40022e:	mov	rdx, rax
0x400231:	mov	rcx, qword ptr [rbp - 0x88]
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	rsi, rcx
0x40023f:	mov	rdi, rax
0x400242:	call	0x500028
<Block for 0x400247, 16 bytes>
0x400247:	mov	byte ptr [rbp - 0xd], 0
0x40024b:	lea	rax, [rbp - 0x70]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500030
<Block for 0x400257, 16 bytes>
0x400257:	nop	
0x400258:	mov	rax, qword ptr [rbp - 8]
0x40025c:	xor	rax, qword ptr fs:[0x28]
0x400265:	je	0x40026c
<Block for 0x40026c, 2 bytes>
0x40026c:	leave	
0x40026d:	ret	
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500038
