<Block for 0x4001bd, 40 bytes>
0x4001bd:	endbr64	
0x4001c1:	push	rbp
0x4001c2:	mov	rbp, rsp
0x4001c5:	push	rbx
0x4001c6:	sub	rsp, 0x58
0x4001ca:	mov	rax, qword ptr fs:[0x28]
0x4001d3:	mov	qword ptr [rbp - 0x18], rax
0x4001d7:	xor	eax, eax
0x4001d9:	lea	rax, [rbp - 0x50]
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x4003b6
<Block for 0x4001e5, 26 bytes>
0x4001e5:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4001ec:	mov	dword ptr [rbp - 0x5c], 6
0x4001f3:	lea	rax, [rbp - 0x50]
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x40054a
<Block for 0x4001ff, 23 bytes>
0x4001ff:	mov	qword ptr [rbp - 0x58], rax
0x400203:	lea	rdx, [rbp - 0x58]
0x400207:	lea	rax, [rbp - 0x30]
0x40020b:	mov	rsi, rdx
0x40020e:	mov	rdi, rax
0x400211:	call	0x40059a
<Block for 0x400216, 28 bytes>
0x400216:	lea	rdx, [rbp - 0x5c]
0x40021a:	mov	rsi, qword ptr [rbp - 0x30]
0x40021e:	lea	rax, [rbp - 0x50]
0x400222:	mov	rcx, rdx
0x400225:	mov	edx, 1
0x40022a:	mov	rdi, rax
0x40022d:	call	0x4005c8
<Block for 0x400232, 12 bytes>
0x400232:	lea	rax, [rbp - 0x50]
0x400236:	mov	rdi, rax
0x400239:	call	0x40054a
<Block for 0x40023e, 23 bytes>
0x40023e:	mov	qword ptr [rbp - 0x58], rax
0x400242:	lea	rdx, [rbp - 0x58]
0x400246:	lea	rax, [rbp - 0x30]
0x40024a:	mov	rsi, rdx
0x40024d:	mov	rdi, rax
0x400250:	call	0x40059a
<Block for 0x400255, 28 bytes>
0x400255:	lea	rdx, [rbp - 0x5c]
0x400259:	mov	rsi, qword ptr [rbp - 0x30]
0x40025d:	lea	rax, [rbp - 0x50]
0x400261:	mov	rcx, rdx
0x400264:	mov	edx, 1
0x400269:	mov	rdi, rax
0x40026c:	call	0x4005c8
<Block for 0x400271, 12 bytes>
0x400271:	lea	rax, [rbp - 0x50]
0x400275:	mov	rdi, rax
0x400278:	call	0x40054a
<Block for 0x40027d, 23 bytes>
0x40027d:	mov	qword ptr [rbp - 0x58], rax
0x400281:	lea	rdx, [rbp - 0x58]
0x400285:	lea	rax, [rbp - 0x30]
0x400289:	mov	rsi, rdx
0x40028c:	mov	rdi, rax
0x40028f:	call	0x40059a
<Block for 0x400294, 28 bytes>
0x400294:	lea	rdx, [rbp - 0x5c]
0x400298:	mov	rsi, qword ptr [rbp - 0x30]
0x40029c:	lea	rax, [rbp - 0x50]
0x4002a0:	mov	rcx, rdx
0x4002a3:	mov	edx, 1
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x4005c8
<Block for 0x4002b0, 19 bytes>
0x4002b0:	lea	rdx, [rbp - 0x50]
0x4002b4:	lea	rax, [rbp - 0x30]
0x4002b8:	mov	rsi, rdx
0x4002bb:	mov	rdi, rax
0x4002be:	call	0x40068e
<Block for 0x4002c3, 12 bytes>
0x4002c3:	lea	rax, [rbp - 0x30]
0x4002c7:	mov	rdi, rax
0x4002ca:	call	0x500020
<Block for 0x4002cf, 12 bytes>
0x4002cf:	lea	rax, [rbp - 0x30]
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x400502
<Block for 0x4002db, 12 bytes>
0x4002db:	lea	rax, [rbp - 0x50]
0x4002df:	mov	rdi, rax
0x4002e2:	call	0x400502
<Block for 0x4002e7, 16 bytes>
0x4002e7:	nop	
0x4002e8:	mov	rax, qword ptr [rbp - 0x18]
0x4002ec:	xor	rax, qword ptr fs:[0x28]
0x4002f5:	je	0x400331
<Block for 0x400331, 7 bytes>
0x400331:	add	rsp, 0x58
0x400335:	pop	rbx
0x400336:	pop	rbp
0x400337:	ret	
<Block for 0x4002f7, 2 bytes>
0x4002f7:	jmp	0x40032c
<Block for 0x40032c, 5 bytes>
0x40032c:	call	0x500018
