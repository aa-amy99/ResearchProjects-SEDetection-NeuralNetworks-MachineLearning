<Block for 0x4000b7, 45 bytes>
0x4000b7:	endbr64	
0x4000bb:	push	rbp
0x4000bc:	mov	rbp, rsp
0x4000bf:	add	rsp, -0x80
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	mov	qword ptr [rbp - 0x80], 0
0x4000da:	mov	edi, 0x64
0x4000df:	call	0x500000
<Block for 0x4000e4, 26 bytes>
0x4000e4:	mov	qword ptr [rbp - 0x78], rax
0x4000e8:	mov	rax, qword ptr [rbp - 0x78]
0x4000ec:	mov	edx, 0x63
0x4000f1:	mov	esi, 0x41
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500008
<Block for 0x4000fe, 41 bytes>
0x4000fe:	mov	rax, qword ptr [rbp - 0x78]
0x400102:	add	rax, 0x63
0x400106:	mov	byte ptr [rax], 0
0x400109:	mov	rax, qword ptr [rbp - 0x78]
0x40010d:	mov	qword ptr [rbp - 0x80], rax
0x400111:	lea	rax, [rbp - 0x70]
0x400115:	mov	edx, 0x63
0x40011a:	mov	esi, 0x43
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x400127, 28 bytes>
0x400127:	mov	byte ptr [rbp - 0xd], 0
0x40012b:	mov	rcx, qword ptr [rbp - 0x80]
0x40012f:	lea	rax, [rbp - 0x70]
0x400133:	mov	edx, 0x64
0x400138:	mov	rsi, rcx
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500010
<Block for 0x400143, 16 bytes>
0x400143:	mov	byte ptr [rbp - 0xd], 0
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500018
<Block for 0x400153, 16 bytes>
0x400153:	nop	
0x400154:	mov	rax, qword ptr [rbp - 8]
0x400158:	xor	rax, qword ptr fs:[0x28]
0x400161:	je	0x400168
<Block for 0x400168, 2 bytes>
0x400168:	leave	
0x400169:	ret	
<Block for 0x400163, 5 bytes>
0x400163:	call	0x500020
