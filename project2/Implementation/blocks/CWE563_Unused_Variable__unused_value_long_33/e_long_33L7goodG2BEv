<Block for 0x400061, 55 bytes>
0x400061:	endbr64	
0x400065:	push	rbp
0x400066:	mov	rbp, rsp
0x400069:	sub	rsp, 0x20
0x40006d:	mov	rax, qword ptr fs:[0x28]
0x400076:	mov	qword ptr [rbp - 8], rax
0x40007a:	xor	eax, eax
0x40007c:	lea	rax, [rbp - 0x20]
0x400080:	mov	qword ptr [rbp - 0x18], rax
0x400084:	mov	qword ptr [rbp - 0x20], 5
0x40008c:	mov	rax, qword ptr [rbp - 0x20]
0x400090:	mov	rdi, rax
0x400093:	call	0x500000
<Block for 0x400098, 31 bytes>
0x400098:	mov	rax, qword ptr [rbp - 0x18]
0x40009c:	mov	rax, qword ptr [rax]
0x40009f:	mov	qword ptr [rbp - 0x10], rax
0x4000a3:	mov	qword ptr [rbp - 0x10], 0xa
0x4000ab:	mov	rax, qword ptr [rbp - 0x10]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500000
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500008
