<Block for 0x400059, 17 bytes>
0x400059:	endbr64	
0x40005d:	push	rbp
0x40005e:	mov	rbp, rsp
0x400061:	sub	rsp, 0x20
0x400065:	call	0x500020
<Block for 0x40006a, 9 bytes>
0x40006a:	test	eax, eax
0x40006c:	setne	al
0x40006f:	test	al, al
0x400071:	je	0x400081
<Block for 0x400081, 10 bytes>
0x400081:	mov	edi, 4
0x400086:	call	0x500008
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0xfa]
0x40007a:	call	0x500028
<Block for 0x40008b, 24 bytes>
0x40008b:	mov	qword ptr [rbp - 0x18], rax
0x40008f:	mov	rax, qword ptr [rbp - 0x18]
0x400093:	mov	dword ptr [rax], 5
0x400099:	mov	edi, 8
0x40009e:	call	0x500008
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x4000e0
<Block for 0x4000a3, 39 bytes>
0x4000a3:	mov	qword ptr [rbp - 0x10], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x10]
0x4000ab:	mov	rdx, qword ptr [rbp - 0x18]
0x4000af:	mov	qword ptr [rax], rdx
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	mov	eax, dword ptr [rax]
0x4000c3:	mov	edi, eax
0x4000c5:	call	0x500018
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000ca, 9 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 0x10]
0x4000ce:	test	rax, rax
0x4000d1:	je	0x4000e0
<Block for 0x4000d3, 13 bytes>
0x4000d3:	mov	esi, 8
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500010
