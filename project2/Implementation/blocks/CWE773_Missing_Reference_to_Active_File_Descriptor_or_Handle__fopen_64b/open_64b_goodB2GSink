<Block for 0x400050, 42 bytes>
0x400050:	endbr64	
0x400054:	push	rbp
0x400055:	mov	rbp, rsp
0x400058:	sub	rsp, 0x20
0x40005c:	mov	qword ptr [rbp - 0x18], rdi
0x400060:	mov	rax, qword ptr [rbp - 0x18]
0x400064:	mov	qword ptr [rbp - 0x10], rax
0x400068:	mov	rax, qword ptr [rbp - 0x10]
0x40006c:	mov	rax, qword ptr [rax]
0x40006f:	mov	qword ptr [rbp - 8], rax
0x400073:	cmp	qword ptr [rbp - 8], 0
0x400078:	je	0x400086
<Block for 0x400086, 19 bytes>
0x400086:	lea	rsi, [rip + 0x26]
0x40008d:	lea	rdi, [rip + 0x34]
0x400094:	call	0x500000
<Block for 0x40007a, 12 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	mov	rdi, rax
0x400081:	call	0x500008
<Block for 0x400099, 11 bytes>
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	cmp	qword ptr [rbp - 8], 0
0x4000a2:	je	0x4000b0
<Block for 0x4000b0, 3 bytes>
0x4000b0:	nop	
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
