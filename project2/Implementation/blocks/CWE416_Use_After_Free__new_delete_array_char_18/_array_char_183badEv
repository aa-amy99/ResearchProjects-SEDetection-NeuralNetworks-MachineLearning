<Block for 0x400000, 35 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	nop	
0x400015:	endbr64	
0x400019:	mov	edi, 0x64
0x40001e:	call	0x500000
<Block for 0x400023, 26 bytes>
0x400023:	mov	qword ptr [rbp - 8], rax
0x400027:	mov	rax, qword ptr [rbp - 8]
0x40002b:	mov	edx, 0x63
0x400030:	mov	esi, 0x41
0x400035:	mov	rdi, rax
0x400038:	call	0x500008
<Block for 0x40003d, 18 bytes>
0x40003d:	mov	rax, qword ptr [rbp - 8]
0x400041:	add	rax, 0x63
0x400045:	mov	byte ptr [rax], 0
0x400048:	cmp	qword ptr [rbp - 8], 0
0x40004d:	je	0x40005b
<Block for 0x40005b, 17 bytes>
0x40005b:	nop	
0x40005c:	endbr64	
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	mov	rdi, rax
0x400067:	call	0x500018
<Block for 0x40004f, 12 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 8]
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40006c, 3 bytes>
0x40006c:	nop	
0x40006d:	leave	
0x40006e:	ret	
