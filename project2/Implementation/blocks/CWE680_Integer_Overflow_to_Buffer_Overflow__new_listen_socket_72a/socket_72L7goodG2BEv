<Block for 0x4002fb, 40 bytes>
0x4002fb:	endbr64	
0x4002ff:	push	rbp
0x400300:	mov	rbp, rsp
0x400303:	push	rbx
0x400304:	sub	rsp, 0x58
0x400308:	mov	rax, qword ptr fs:[0x28]
0x400311:	mov	qword ptr [rbp - 0x18], rax
0x400315:	xor	eax, eax
0x400317:	lea	rax, [rbp - 0x50]
0x40031b:	mov	rdi, rax
0x40031e:	call	0x4004f4
<Block for 0x400323, 26 bytes>
0x400323:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40032a:	mov	dword ptr [rbp - 0x5c], 0x14
0x400331:	lea	rax, [rbp - 0x50]
0x400335:	mov	rdi, rax
0x400338:	call	0x400686
<Block for 0x40033d, 23 bytes>
0x40033d:	mov	qword ptr [rbp - 0x58], rax
0x400341:	lea	rdx, [rbp - 0x58]
0x400345:	lea	rax, [rbp - 0x30]
0x400349:	mov	rsi, rdx
0x40034c:	mov	rdi, rax
0x40034f:	call	0x4006d6
<Block for 0x400354, 28 bytes>
0x400354:	lea	rdx, [rbp - 0x5c]
0x400358:	mov	rsi, qword ptr [rbp - 0x30]
0x40035c:	lea	rax, [rbp - 0x50]
0x400360:	mov	rcx, rdx
0x400363:	mov	edx, 1
0x400368:	mov	rdi, rax
0x40036b:	call	0x400704
<Block for 0x400370, 12 bytes>
0x400370:	lea	rax, [rbp - 0x50]
0x400374:	mov	rdi, rax
0x400377:	call	0x400686
<Block for 0x40037c, 23 bytes>
0x40037c:	mov	qword ptr [rbp - 0x58], rax
0x400380:	lea	rdx, [rbp - 0x58]
0x400384:	lea	rax, [rbp - 0x30]
0x400388:	mov	rsi, rdx
0x40038b:	mov	rdi, rax
0x40038e:	call	0x4006d6
<Block for 0x400393, 28 bytes>
0x400393:	lea	rdx, [rbp - 0x5c]
0x400397:	mov	rsi, qword ptr [rbp - 0x30]
0x40039b:	lea	rax, [rbp - 0x50]
0x40039f:	mov	rcx, rdx
0x4003a2:	mov	edx, 1
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x400704
<Block for 0x4003af, 12 bytes>
0x4003af:	lea	rax, [rbp - 0x50]
0x4003b3:	mov	rdi, rax
0x4003b6:	call	0x400686
<Block for 0x4003bb, 23 bytes>
0x4003bb:	mov	qword ptr [rbp - 0x58], rax
0x4003bf:	lea	rdx, [rbp - 0x58]
0x4003c3:	lea	rax, [rbp - 0x30]
0x4003c7:	mov	rsi, rdx
0x4003ca:	mov	rdi, rax
0x4003cd:	call	0x4006d6
<Block for 0x4003d2, 28 bytes>
0x4003d2:	lea	rdx, [rbp - 0x5c]
0x4003d6:	mov	rsi, qword ptr [rbp - 0x30]
0x4003da:	lea	rax, [rbp - 0x50]
0x4003de:	mov	rcx, rdx
0x4003e1:	mov	edx, 1
0x4003e6:	mov	rdi, rax
0x4003e9:	call	0x400704
<Block for 0x4003ee, 19 bytes>
0x4003ee:	lea	rdx, [rbp - 0x50]
0x4003f2:	lea	rax, [rbp - 0x30]
0x4003f6:	mov	rsi, rdx
0x4003f9:	mov	rdi, rax
0x4003fc:	call	0x4007ca
<Block for 0x400401, 12 bytes>
0x400401:	lea	rax, [rbp - 0x30]
0x400405:	mov	rdi, rax
0x400408:	call	0x500060
<Block for 0x40040d, 12 bytes>
0x40040d:	lea	rax, [rbp - 0x30]
0x400411:	mov	rdi, rax
0x400414:	call	0x40063e
<Block for 0x400419, 12 bytes>
0x400419:	lea	rax, [rbp - 0x50]
0x40041d:	mov	rdi, rax
0x400420:	call	0x40063e
<Block for 0x400425, 16 bytes>
0x400425:	nop	
0x400426:	mov	rax, qword ptr [rbp - 0x18]
0x40042a:	xor	rax, qword ptr fs:[0x28]
0x400433:	je	0x40046f
<Block for 0x40046f, 7 bytes>
0x40046f:	add	rsp, 0x58
0x400473:	pop	rbx
0x400474:	pop	rbp
0x400475:	ret	
<Block for 0x400435, 2 bytes>
0x400435:	jmp	0x40046a
<Block for 0x40046a, 5 bytes>
0x40046a:	call	0x500058
