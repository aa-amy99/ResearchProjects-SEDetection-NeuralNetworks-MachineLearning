<Block for 0x400127, 81 bytes>
0x400127:	endbr64	
0x40012b:	push	rbp
0x40012c:	mov	rbp, rsp
0x40012f:	add	rsp, -0x80
0x400133:	mov	rax, qword ptr fs:[0x28]
0x40013c:	mov	qword ptr [rbp - 8], rax
0x400140:	xor	eax, eax
0x400142:	mov	eax, 0x10
0x400147:	sub	rax, 1
0x40014b:	add	rax, 0x6c
0x40014f:	mov	ecx, 0x10
0x400154:	mov	edx, 0
0x400159:	div	rcx
0x40015c:	imul	rax, rax, 0x10
0x400160:	mov	rdx, rax
0x400163:	and	rdx, 0xfffffffffffff000
0x40016a:	mov	rcx, rsp
0x40016d:	sub	rcx, rdx
0x400170:	mov	rdx, rcx
0x400173:	cmp	rsp, rdx
0x400176:	je	0x40018a
<Block for 0x40018a, 26 bytes>
0x40018a:	mov	rdx, rax
0x40018d:	and	edx, 0xfff
0x400193:	sub	rsp, rdx
0x400196:	mov	rdx, rax
0x400199:	and	edx, 0xfff
0x40019f:	test	rdx, rdx
0x4001a2:	je	0x4001b4
<Block for 0x400178, 18 bytes>
0x400178:	sub	rsp, 0x1000
0x40017f:	or	qword ptr [rsp + 0xff8], 0
0x400188:	jmp	0x400173
<Block for 0x4001b4, 41 bytes>
0x4001b4:	mov	rax, rsp
0x4001b7:	add	rax, 0xf
0x4001bb:	shr	rax, 4
0x4001bf:	shl	rax, 4
0x4001c3:	mov	qword ptr [rbp - 0x78], rax
0x4001c7:	mov	rax, qword ptr [rbp - 0x78]
0x4001cb:	mov	edx, 0x63
0x4001d0:	mov	esi, 0x41
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500000
<Block for 0x4001a4, 57 bytes>
0x4001a4:	and	eax, 0xfff
0x4001a9:	sub	rax, 8
0x4001ad:	add	rax, rsp
0x4001b0:	or	qword ptr [rax], 0
0x4001b4:	mov	rax, rsp
0x4001b7:	add	rax, 0xf
0x4001bb:	shr	rax, 4
0x4001bf:	shl	rax, 4
0x4001c3:	mov	qword ptr [rbp - 0x78], rax
0x4001c7:	mov	rax, qword ptr [rbp - 0x78]
0x4001cb:	mov	edx, 0x63
0x4001d0:	mov	esi, 0x41
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500000
<Block for 0x400173, 5 bytes>
0x400173:	cmp	rsp, rdx
0x400176:	je	0x40018a
<Block for 0x4001dd, 21 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x78]
0x4001e1:	add	rax, 0x63
0x4001e5:	mov	byte ptr [rax], 0
0x4001e8:	mov	eax, dword ptr [rip + 0x1b2]
0x4001ee:	test	eax, eax
0x4001f0:	je	0x400200
<Block for 0x400200, 30 bytes>
0x400200:	mov	rax, qword ptr [rbp - 0x78]
0x400204:	mov	qword ptr [rbp - 0x80], rax
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500000
<Block for 0x4001f2, 12 bytes>
0x4001f2:	lea	rdi, [rip + 0x1ab]
0x4001f9:	call	0x500010
<Block for 0x40021e, 23 bytes>
0x40021e:	mov	byte ptr [rbp - 0xd], 0
0x400222:	lea	rdx, [rbp - 0x70]
0x400226:	mov	rax, qword ptr [rbp - 0x80]
0x40022a:	mov	rsi, rdx
0x40022d:	mov	rdi, rax
0x400230:	call	0x500008
<Block for 0x4001fe, 2 bytes>
0x4001fe:	jmp	0x400208
<Block for 0x400235, 12 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x80]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500010
<Block for 0x400208, 22 bytes>
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500000
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500018
