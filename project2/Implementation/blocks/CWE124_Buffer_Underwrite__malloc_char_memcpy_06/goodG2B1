<Block for 0x400154, 52 bytes>
0x400154:	endbr64	
0x400158:	push	rbp
0x400159:	mov	rbp, rsp
0x40015c:	push	rbx
0x40015d:	sub	rsp, 0x88
0x400164:	mov	rax, qword ptr fs:[0x28]
0x40016d:	mov	qword ptr [rbp - 0x18], rax
0x400171:	xor	eax, eax
0x400173:	mov	qword ptr [rbp - 0x90], 0
0x40017e:	mov	eax, 5
0x400183:	cmp	eax, 5
0x400186:	je	0x400196
<Block for 0x400196, 10 bytes>
0x400196:	mov	edi, 0x64
0x40019b:	call	0x500000
<Block for 0x400188, 12 bytes>
0x400188:	lea	rdi, [rip + 0x299]
0x40018f:	call	0x500018
<Block for 0x4001a0, 17 bytes>
0x4001a0:	mov	qword ptr [rbp - 0x88], rax
0x4001a7:	cmp	qword ptr [rbp - 0x88], 0
0x4001af:	jne	0x4001bb
<Block for 0x400194, 2 bytes>
0x400194:	jmp	0x4001f0
<Block for 0x4001b1, 10 bytes>
0x4001b1:	mov	edi, 0xffffffff
0x4001b6:	call	0x500008
<Block for 0x4001bb, 25 bytes>
0x4001bb:	mov	rax, qword ptr [rbp - 0x88]
0x4001c2:	mov	edx, 0x63
0x4001c7:	mov	esi, 0x41
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500010
<Block for 0x4001f0, 22 bytes>
0x4001f0:	lea	rax, [rbp - 0x80]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x43
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500010
<Block for 0x4001d4, 50 bytes>
0x4001d4:	mov	rax, qword ptr [rbp - 0x88]
0x4001db:	add	rax, 0x63
0x4001df:	mov	byte ptr [rax], 0
0x4001e2:	mov	rax, qword ptr [rbp - 0x88]
0x4001e9:	mov	qword ptr [rbp - 0x90], rax
0x4001f0:	lea	rax, [rbp - 0x80]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x43
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500010
<Block for 0x400206, 141 bytes>
0x400206:	mov	byte ptr [rbp - 0x1d], 0
0x40020a:	mov	rax, qword ptr [rbp - 0x90]
0x400211:	mov	rcx, qword ptr [rbp - 0x80]
0x400215:	mov	rbx, qword ptr [rbp - 0x78]
0x400219:	mov	qword ptr [rax], rcx
0x40021c:	mov	qword ptr [rax + 8], rbx
0x400220:	mov	rcx, qword ptr [rbp - 0x70]
0x400224:	mov	rbx, qword ptr [rbp - 0x68]
0x400228:	mov	qword ptr [rax + 0x10], rcx
0x40022c:	mov	qword ptr [rax + 0x18], rbx
0x400230:	mov	rcx, qword ptr [rbp - 0x60]
0x400234:	mov	rbx, qword ptr [rbp - 0x58]
0x400238:	mov	qword ptr [rax + 0x20], rcx
0x40023c:	mov	qword ptr [rax + 0x28], rbx
0x400240:	mov	rcx, qword ptr [rbp - 0x50]
0x400244:	mov	rbx, qword ptr [rbp - 0x48]
0x400248:	mov	qword ptr [rax + 0x30], rcx
0x40024c:	mov	qword ptr [rax + 0x38], rbx
0x400250:	mov	rcx, qword ptr [rbp - 0x40]
0x400254:	mov	rbx, qword ptr [rbp - 0x38]
0x400258:	mov	qword ptr [rax + 0x40], rcx
0x40025c:	mov	qword ptr [rax + 0x48], rbx
0x400260:	mov	rcx, qword ptr [rbp - 0x30]
0x400264:	mov	rbx, qword ptr [rbp - 0x28]
0x400268:	mov	qword ptr [rax + 0x50], rcx
0x40026c:	mov	qword ptr [rax + 0x58], rbx
0x400270:	mov	edx, dword ptr [rbp - 0x20]
0x400273:	mov	dword ptr [rax + 0x60], edx
0x400276:	mov	rax, qword ptr [rbp - 0x90]
0x40027d:	add	rax, 0x63
0x400281:	mov	byte ptr [rax], 0
0x400284:	mov	rax, qword ptr [rbp - 0x90]
0x40028b:	mov	rdi, rax
0x40028e:	call	0x500018
<Block for 0x400293, 16 bytes>
0x400293:	nop	
0x400294:	mov	rax, qword ptr [rbp - 0x18]
0x400298:	xor	rax, qword ptr fs:[0x28]
0x4002a1:	je	0x4002a8
<Block for 0x4002a8, 10 bytes>
0x4002a8:	add	rsp, 0x88
0x4002af:	pop	rbx
0x4002b0:	pop	rbp
0x4002b1:	ret	
<Block for 0x4002a3, 5 bytes>
0x4002a3:	call	0x500020
