<Block for 0x4002b2, 52 bytes>
0x4002b2:	endbr64	
0x4002b6:	push	rbp
0x4002b7:	mov	rbp, rsp
0x4002ba:	push	rbx
0x4002bb:	sub	rsp, 0x88
0x4002c2:	mov	rax, qword ptr fs:[0x28]
0x4002cb:	mov	qword ptr [rbp - 0x18], rax
0x4002cf:	xor	eax, eax
0x4002d1:	mov	qword ptr [rbp - 0x90], 0
0x4002dc:	mov	eax, 5
0x4002e1:	cmp	eax, 5
0x4002e4:	jne	0x400340
<Block for 0x4002e6, 10 bytes>
0x4002e6:	mov	edi, 0x64
0x4002eb:	call	0x500000
<Block for 0x400340, 22 bytes>
0x400340:	lea	rax, [rbp - 0x80]
0x400344:	mov	edx, 0x63
0x400349:	mov	esi, 0x43
0x40034e:	mov	rdi, rax
0x400351:	call	0x500010
<Block for 0x4002f0, 17 bytes>
0x4002f0:	mov	qword ptr [rbp - 0x88], rax
0x4002f7:	cmp	qword ptr [rbp - 0x88], 0
0x4002ff:	jne	0x40030b
<Block for 0x400356, 141 bytes>
0x400356:	mov	byte ptr [rbp - 0x1d], 0
0x40035a:	mov	rax, qword ptr [rbp - 0x90]
0x400361:	mov	rcx, qword ptr [rbp - 0x80]
0x400365:	mov	rbx, qword ptr [rbp - 0x78]
0x400369:	mov	qword ptr [rax], rcx
0x40036c:	mov	qword ptr [rax + 8], rbx
0x400370:	mov	rcx, qword ptr [rbp - 0x70]
0x400374:	mov	rbx, qword ptr [rbp - 0x68]
0x400378:	mov	qword ptr [rax + 0x10], rcx
0x40037c:	mov	qword ptr [rax + 0x18], rbx
0x400380:	mov	rcx, qword ptr [rbp - 0x60]
0x400384:	mov	rbx, qword ptr [rbp - 0x58]
0x400388:	mov	qword ptr [rax + 0x20], rcx
0x40038c:	mov	qword ptr [rax + 0x28], rbx
0x400390:	mov	rcx, qword ptr [rbp - 0x50]
0x400394:	mov	rbx, qword ptr [rbp - 0x48]
0x400398:	mov	qword ptr [rax + 0x30], rcx
0x40039c:	mov	qword ptr [rax + 0x38], rbx
0x4003a0:	mov	rcx, qword ptr [rbp - 0x40]
0x4003a4:	mov	rbx, qword ptr [rbp - 0x38]
0x4003a8:	mov	qword ptr [rax + 0x40], rcx
0x4003ac:	mov	qword ptr [rax + 0x48], rbx
0x4003b0:	mov	rcx, qword ptr [rbp - 0x30]
0x4003b4:	mov	rbx, qword ptr [rbp - 0x28]
0x4003b8:	mov	qword ptr [rax + 0x50], rcx
0x4003bc:	mov	qword ptr [rax + 0x58], rbx
0x4003c0:	mov	edx, dword ptr [rbp - 0x20]
0x4003c3:	mov	dword ptr [rax + 0x60], edx
0x4003c6:	mov	rax, qword ptr [rbp - 0x90]
0x4003cd:	add	rax, 0x63
0x4003d1:	mov	byte ptr [rax], 0
0x4003d4:	mov	rax, qword ptr [rbp - 0x90]
0x4003db:	mov	rdi, rax
0x4003de:	call	0x500018
<Block for 0x400301, 10 bytes>
0x400301:	mov	edi, 0xffffffff
0x400306:	call	0x500008
<Block for 0x40030b, 25 bytes>
0x40030b:	mov	rax, qword ptr [rbp - 0x88]
0x400312:	mov	edx, 0x63
0x400317:	mov	esi, 0x41
0x40031c:	mov	rdi, rax
0x40031f:	call	0x500010
<Block for 0x4003e3, 16 bytes>
0x4003e3:	nop	
0x4003e4:	mov	rax, qword ptr [rbp - 0x18]
0x4003e8:	xor	rax, qword ptr fs:[0x28]
0x4003f1:	je	0x4003f8
<Block for 0x400324, 50 bytes>
0x400324:	mov	rax, qword ptr [rbp - 0x88]
0x40032b:	add	rax, 0x63
0x40032f:	mov	byte ptr [rax], 0
0x400332:	mov	rax, qword ptr [rbp - 0x88]
0x400339:	mov	qword ptr [rbp - 0x90], rax
0x400340:	lea	rax, [rbp - 0x80]
0x400344:	mov	edx, 0x63
0x400349:	mov	esi, 0x43
0x40034e:	mov	rdi, rax
0x400351:	call	0x500010
<Block for 0x4003f8, 10 bytes>
0x4003f8:	add	rsp, 0x88
0x4003ff:	pop	rbx
0x400400:	pop	rbp
0x400401:	ret	
<Block for 0x4003f3, 5 bytes>
0x4003f3:	call	0x500020
