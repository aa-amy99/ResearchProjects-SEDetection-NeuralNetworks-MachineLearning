<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	mov	eax, 5
0x40002f:	cmp	eax, 5
0x400032:	jne	0x400092
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0x64
0x400039:	call	0x500000
<Block for 0x400092, 22 bytes>
0x400092:	lea	rax, [rbp - 0x80]
0x400096:	mov	edx, 0x63
0x40009b:	mov	esi, 0x43
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500010
<Block for 0x40003e, 17 bytes>
0x40003e:	mov	qword ptr [rbp - 0x88], rax
0x400045:	cmp	qword ptr [rbp - 0x88], 0
0x40004d:	jne	0x400059
<Block for 0x4000a8, 141 bytes>
0x4000a8:	mov	byte ptr [rbp - 0x1d], 0
0x4000ac:	mov	rax, qword ptr [rbp - 0x90]
0x4000b3:	mov	rcx, qword ptr [rbp - 0x80]
0x4000b7:	mov	rbx, qword ptr [rbp - 0x78]
0x4000bb:	mov	qword ptr [rax], rcx
0x4000be:	mov	qword ptr [rax + 8], rbx
0x4000c2:	mov	rcx, qword ptr [rbp - 0x70]
0x4000c6:	mov	rbx, qword ptr [rbp - 0x68]
0x4000ca:	mov	qword ptr [rax + 0x10], rcx
0x4000ce:	mov	qword ptr [rax + 0x18], rbx
0x4000d2:	mov	rcx, qword ptr [rbp - 0x60]
0x4000d6:	mov	rbx, qword ptr [rbp - 0x58]
0x4000da:	mov	qword ptr [rax + 0x20], rcx
0x4000de:	mov	qword ptr [rax + 0x28], rbx
0x4000e2:	mov	rcx, qword ptr [rbp - 0x50]
0x4000e6:	mov	rbx, qword ptr [rbp - 0x48]
0x4000ea:	mov	qword ptr [rax + 0x30], rcx
0x4000ee:	mov	qword ptr [rax + 0x38], rbx
0x4000f2:	mov	rcx, qword ptr [rbp - 0x40]
0x4000f6:	mov	rbx, qword ptr [rbp - 0x38]
0x4000fa:	mov	qword ptr [rax + 0x40], rcx
0x4000fe:	mov	qword ptr [rax + 0x48], rbx
0x400102:	mov	rcx, qword ptr [rbp - 0x30]
0x400106:	mov	rbx, qword ptr [rbp - 0x28]
0x40010a:	mov	qword ptr [rax + 0x50], rcx
0x40010e:	mov	qword ptr [rax + 0x58], rbx
0x400112:	mov	edx, dword ptr [rbp - 0x20]
0x400115:	mov	dword ptr [rax + 0x60], edx
0x400118:	mov	rax, qword ptr [rbp - 0x90]
0x40011f:	add	rax, 0x63
0x400123:	mov	byte ptr [rax], 0
0x400126:	mov	rax, qword ptr [rbp - 0x90]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500018
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 0xffffffff
0x400054:	call	0x500008
<Block for 0x400059, 25 bytes>
0x400059:	mov	rax, qword ptr [rbp - 0x88]
0x400060:	mov	edx, 0x63
0x400065:	mov	esi, 0x41
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400135, 16 bytes>
0x400135:	nop	
0x400136:	mov	rax, qword ptr [rbp - 0x18]
0x40013a:	xor	rax, qword ptr fs:[0x28]
0x400143:	je	0x40014a
<Block for 0x400072, 54 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0x88]
0x400079:	add	rax, 0x63
0x40007d:	mov	byte ptr [rax], 0
0x400080:	mov	rax, qword ptr [rbp - 0x88]
0x400087:	sub	rax, 8
0x40008b:	mov	qword ptr [rbp - 0x90], rax
0x400092:	lea	rax, [rbp - 0x80]
0x400096:	mov	edx, 0x63
0x40009b:	mov	esi, 0x43
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500010
<Block for 0x40014a, 10 bytes>
0x40014a:	add	rsp, 0x88
0x400151:	pop	rbx
0x400152:	pop	rbp
0x400153:	ret	
<Block for 0x400145, 5 bytes>
0x400145:	call	0x500020
