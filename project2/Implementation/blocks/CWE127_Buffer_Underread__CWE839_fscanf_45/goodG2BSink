<Block for 0x4000f2, 82 bytes>
0x4000f2:	endbr64	
0x4000f6:	push	rbp
0x4000f7:	mov	rbp, rsp
0x4000fa:	sub	rsp, 0x40
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	xor	eax, eax
0x40010d:	mov	eax, dword ptr [rip + 0x1b1]
0x400113:	mov	dword ptr [rbp - 0x34], eax
0x400116:	mov	qword ptr [rbp - 0x30], 0
0x40011e:	mov	qword ptr [rbp - 0x28], 0
0x400126:	mov	qword ptr [rbp - 0x20], 0
0x40012e:	mov	qword ptr [rbp - 0x18], 0
0x400136:	mov	qword ptr [rbp - 0x10], 0
0x40013e:	cmp	dword ptr [rbp - 0x34], 9
0x400142:	jg	0x400156
<Block for 0x400144, 16 bytes>
0x400144:	mov	eax, dword ptr [rbp - 0x34]
0x400147:	cdqe	
0x400149:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40014d:	mov	edi, eax
0x40014f:	call	0x500000
<Block for 0x400156, 12 bytes>
0x400156:	lea	rdi, [rip + 0x173]
0x40015d:	call	0x500008
<Block for 0x400154, 2 bytes>
0x400154:	jmp	0x400162
<Block for 0x400162, 16 bytes>
0x400162:	nop	
0x400163:	mov	rax, qword ptr [rbp - 8]
0x400167:	xor	rax, qword ptr fs:[0x28]
0x400170:	je	0x400177
<Block for 0x400177, 2 bytes>
0x400177:	leave	
0x400178:	ret	
<Block for 0x400172, 5 bytes>
0x400172:	call	0x500010
