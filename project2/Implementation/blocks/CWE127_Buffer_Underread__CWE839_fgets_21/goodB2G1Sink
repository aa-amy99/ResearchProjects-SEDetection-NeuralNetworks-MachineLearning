<Block for 0x400127, 40 bytes>
0x400127:	endbr64	
0x40012b:	push	rbp
0x40012c:	mov	rbp, rsp
0x40012f:	sub	rsp, 0x40
0x400133:	mov	dword ptr [rbp - 0x34], edi
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 8], rax
0x400143:	xor	eax, eax
0x400145:	mov	eax, dword ptr [rip + 0x32d]
0x40014b:	test	eax, eax
0x40014d:	je	0x40015d
<Block for 0x40015d, 46 bytes>
0x40015d:	mov	qword ptr [rbp - 0x30], 0
0x400165:	mov	qword ptr [rbp - 0x28], 0
0x40016d:	mov	qword ptr [rbp - 0x20], 0
0x400175:	mov	qword ptr [rbp - 0x18], 0
0x40017d:	mov	qword ptr [rbp - 0x10], 0
0x400185:	cmp	dword ptr [rbp - 0x34], 0
0x400189:	js	0x4001a3
<Block for 0x40014f, 12 bytes>
0x40014f:	lea	rdi, [rip + 0x361]
0x400156:	call	0x500008
<Block for 0x4001a3, 12 bytes>
0x4001a3:	lea	rdi, [rip + 0x326]
0x4001aa:	call	0x500008
<Block for 0x40018b, 6 bytes>
0x40018b:	cmp	dword ptr [rbp - 0x34], 9
0x40018f:	jg	0x4001a3
<Block for 0x40015b, 2 bytes>
0x40015b:	jmp	0x4001af
<Block for 0x4001af, 16 bytes>
0x4001af:	nop	
0x4001b0:	mov	rax, qword ptr [rbp - 8]
0x4001b4:	xor	rax, qword ptr fs:[0x28]
0x4001bd:	je	0x4001c4
<Block for 0x400191, 16 bytes>
0x400191:	mov	eax, dword ptr [rbp - 0x34]
0x400194:	cdqe	
0x400196:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40019a:	mov	edi, eax
0x40019c:	call	0x500000
<Block for 0x4001c4, 2 bytes>
0x4001c4:	leave	
0x4001c5:	ret	
<Block for 0x4001bf, 5 bytes>
0x4001bf:	call	0x500010
<Block for 0x4001a1, 2 bytes>
0x4001a1:	jmp	0x4001af
