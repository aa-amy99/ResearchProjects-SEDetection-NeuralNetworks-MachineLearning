<Block for 0x4002f3, 79 bytes>
0x4002f3:	endbr64	
0x4002f7:	push	rbp
0x4002f8:	mov	rbp, rsp
0x4002fb:	sub	rsp, 0x20
0x4002ff:	mov	rax, qword ptr fs:[0x28]
0x400308:	mov	qword ptr [rbp - 8], rax
0x40030c:	xor	eax, eax
0x40030e:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400315:	mov	qword ptr [rbp - 0x16], 0
0x40031d:	mov	dword ptr [rbp - 0xe], 0
0x400324:	mov	word ptr [rbp - 0xa], 0
0x40032a:	mov	rdx, qword ptr [rip + 0xffce7]
0x400331:	lea	rax, [rbp - 0x16]
0x400335:	mov	esi, 0xe
0x40033a:	mov	rdi, rax
0x40033d:	call	0x500020
<Block for 0x400342, 5 bytes>
0x400342:	test	rax, rax
0x400345:	je	0x400358
<Block for 0x400358, 12 bytes>
0x400358:	lea	rdi, [rip + 0x148]
0x40035f:	call	0x500008
<Block for 0x400347, 12 bytes>
0x400347:	lea	rax, [rbp - 0x16]
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500028
<Block for 0x400364, 20 bytes>
0x400364:	mov	dword ptr [rip + 0x10e], 1
0x40036e:	mov	eax, dword ptr [rbp - 0x1c]
0x400371:	mov	edi, eax
0x400373:	call	0x400262
<Block for 0x400353, 5 bytes>
0x400353:	mov	dword ptr [rbp - 0x1c], eax
0x400356:	jmp	0x400364
<Block for 0x400378, 16 bytes>
0x400378:	nop	
0x400379:	mov	rax, qword ptr [rbp - 8]
0x40037d:	xor	rax, qword ptr fs:[0x28]
0x400386:	je	0x40038d
<Block for 0x40038d, 2 bytes>
0x40038d:	leave	
0x40038e:	ret	
<Block for 0x400388, 5 bytes>
0x400388:	call	0x500010
