<Block for 0x400262, 40 bytes>
0x400262:	endbr64	
0x400266:	push	rbp
0x400267:	mov	rbp, rsp
0x40026a:	sub	rsp, 0x40
0x40026e:	mov	dword ptr [rbp - 0x34], edi
0x400271:	mov	rax, qword ptr fs:[0x28]
0x40027a:	mov	qword ptr [rbp - 8], rax
0x40027e:	xor	eax, eax
0x400280:	mov	eax, dword ptr [rip + 0x1f6]
0x400286:	test	eax, eax
0x400288:	je	0x4002dc
<Block for 0x4002dc, 16 bytes>
0x4002dc:	nop	
0x4002dd:	mov	rax, qword ptr [rbp - 8]
0x4002e1:	xor	rax, qword ptr fs:[0x28]
0x4002ea:	je	0x4002f1
<Block for 0x40028a, 46 bytes>
0x40028a:	mov	qword ptr [rbp - 0x30], 0
0x400292:	mov	qword ptr [rbp - 0x28], 0
0x40029a:	mov	qword ptr [rbp - 0x20], 0
0x4002a2:	mov	qword ptr [rbp - 0x18], 0
0x4002aa:	mov	qword ptr [rbp - 0x10], 0
0x4002b2:	cmp	dword ptr [rbp - 0x34], 0
0x4002b6:	js	0x4002d0
<Block for 0x4002f1, 2 bytes>
0x4002f1:	leave	
0x4002f2:	ret	
<Block for 0x4002ec, 5 bytes>
0x4002ec:	call	0x500010
<Block for 0x4002d0, 12 bytes>
0x4002d0:	lea	rdi, [rip + 0x1f9]
0x4002d7:	call	0x500008
<Block for 0x4002b8, 6 bytes>
0x4002b8:	cmp	dword ptr [rbp - 0x34], 9
0x4002bc:	jg	0x4002d0
<Block for 0x4002be, 16 bytes>
0x4002be:	mov	eax, dword ptr [rbp - 0x34]
0x4002c1:	cdqe	
0x4002c3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002c7:	mov	edi, eax
0x4002c9:	call	0x500000
<Block for 0x4002ce, 2 bytes>
0x4002ce:	jmp	0x4002dc
