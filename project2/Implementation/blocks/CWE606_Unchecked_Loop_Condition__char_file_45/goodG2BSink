<Block for 0x4001e2, 66 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0x20
0x4001ee:	mov	rax, qword ptr fs:[0x28]
0x4001f7:	mov	qword ptr [rbp - 8], rax
0x4001fb:	xor	eax, eax
0x4001fd:	mov	rax, qword ptr [rip + 0x33c]
0x400204:	mov	qword ptr [rbp - 0x10], rax
0x400208:	lea	rdx, [rbp - 0x1c]
0x40020c:	mov	rax, qword ptr [rbp - 0x10]
0x400210:	lea	rsi, [rip + 0x339]
0x400217:	mov	rdi, rax
0x40021a:	mov	eax, 0
0x40021f:	call	0x500000
<Block for 0x400224, 5 bytes>
0x400224:	cmp	eax, 1
0x400227:	jne	0x400253
<Block for 0x400229, 16 bytes>
0x400229:	mov	dword ptr [rbp - 0x14], 0
0x400230:	mov	dword ptr [rbp - 0x18], 0
0x400237:	jmp	0x400241
<Block for 0x400253, 16 bytes>
0x400253:	nop	
0x400254:	mov	rax, qword ptr [rbp - 8]
0x400258:	xor	rax, qword ptr fs:[0x28]
0x400261:	je	0x400268
<Block for 0x400241, 8 bytes>
0x400241:	mov	eax, dword ptr [rbp - 0x1c]
0x400244:	cmp	dword ptr [rbp - 0x18], eax
0x400247:	jl	0x400239
<Block for 0x400268, 2 bytes>
0x400268:	leave	
0x400269:	ret	
<Block for 0x400263, 5 bytes>
0x400263:	call	0x500010
<Block for 0x400239, 16 bytes>
0x400239:	add	dword ptr [rbp - 0x14], 1
0x40023d:	add	dword ptr [rbp - 0x18], 1
0x400241:	mov	eax, dword ptr [rbp - 0x1c]
0x400244:	cmp	dword ptr [rbp - 0x18], eax
0x400247:	jl	0x400239
<Block for 0x400249, 10 bytes>
0x400249:	mov	eax, dword ptr [rbp - 0x14]
0x40024c:	mov	edi, eax
0x40024e:	call	0x500008
