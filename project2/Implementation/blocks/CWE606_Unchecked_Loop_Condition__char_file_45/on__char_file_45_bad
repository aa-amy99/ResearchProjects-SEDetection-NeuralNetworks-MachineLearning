<Block for 0x400088, 159 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x90
0x400097:	mov	rax, qword ptr fs:[0x28]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	xor	eax, eax
0x4000a6:	mov	qword ptr [rbp - 0x70], 0
0x4000ae:	mov	qword ptr [rbp - 0x68], 0
0x4000b6:	mov	qword ptr [rbp - 0x60], 0
0x4000be:	mov	qword ptr [rbp - 0x58], 0
0x4000c6:	mov	qword ptr [rbp - 0x50], 0
0x4000ce:	mov	qword ptr [rbp - 0x48], 0
0x4000d6:	mov	qword ptr [rbp - 0x40], 0
0x4000de:	mov	qword ptr [rbp - 0x38], 0
0x4000e6:	mov	qword ptr [rbp - 0x30], 0
0x4000ee:	mov	qword ptr [rbp - 0x28], 0
0x4000f6:	mov	qword ptr [rbp - 0x20], 0
0x4000fe:	mov	qword ptr [rbp - 0x18], 0
0x400106:	mov	dword ptr [rbp - 0x10], 0
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	qword ptr [rbp - 0x88], rax
0x400118:	mov	rax, qword ptr [rbp - 0x88]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500018
<Block for 0x400127, 19 bytes>
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	mov	eax, 0x64
0x400130:	sub	rax, qword ptr [rbp - 0x80]
0x400134:	cmp	rax, 1
0x400138:	jbe	0x4001b3
<Block for 0x4001b3, 24 bytes>
0x4001b3:	mov	rax, qword ptr [rbp - 0x88]
0x4001ba:	mov	qword ptr [rip + 0x377], rax
0x4001c1:	mov	eax, 0
0x4001c6:	call	0x400000
<Block for 0x40013a, 19 bytes>
0x40013a:	lea	rsi, [rip + 0x412]
0x400141:	lea	rdi, [rip + 0x40d]
0x400148:	call	0x500020
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x40014d, 11 bytes>
0x40014d:	mov	qword ptr [rbp - 0x78], rax
0x400151:	cmp	qword ptr [rbp - 0x78], 0
0x400156:	je	0x4001b3
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500010
<Block for 0x400158, 45 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x80]
0x40015c:	mov	edx, 0x64
0x400161:	sub	edx, eax
0x400163:	mov	eax, edx
0x400165:	mov	esi, eax
0x400167:	mov	rdx, qword ptr [rbp - 0x88]
0x40016e:	mov	rax, qword ptr [rbp - 0x80]
0x400172:	lea	rcx, [rdx + rax]
0x400176:	mov	rax, qword ptr [rbp - 0x78]
0x40017a:	mov	rdx, rax
0x40017d:	mov	rdi, rcx
0x400180:	call	0x500028
<Block for 0x400185, 5 bytes>
0x400185:	test	rax, rax
0x400188:	jne	0x4001a7
<Block for 0x40018a, 12 bytes>
0x40018a:	lea	rdi, [rip + 0x3d2]
0x400191:	call	0x500030
<Block for 0x4001a7, 12 bytes>
0x4001a7:	mov	rax, qword ptr [rbp - 0x78]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500038
<Block for 0x400196, 29 bytes>
0x400196:	mov	rdx, qword ptr [rbp - 0x88]
0x40019d:	mov	rax, qword ptr [rbp - 0x80]
0x4001a1:	add	rax, rdx
0x4001a4:	mov	byte ptr [rax], 0
0x4001a7:	mov	rax, qword ptr [rbp - 0x78]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500038
