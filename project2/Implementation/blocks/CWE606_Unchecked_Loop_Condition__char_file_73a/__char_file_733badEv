<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xd8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400710
<Block for 0x40002e, 129 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xd8], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500000
<Block for 0x4000af, 29 bytes>
0x4000af:	mov	qword ptr [rbp - 0xd0], rax
0x4000b6:	mov	eax, 0x64
0x4000bb:	sub	rax, qword ptr [rbp - 0xd0]
0x4000c2:	cmp	rax, 1
0x4000c6:	jbe	0x40015f
<Block for 0x40015f, 25 bytes>
0x40015f:	lea	rdx, [rbp - 0xd8]
0x400166:	lea	rax, [rbp - 0xc0]
0x40016d:	mov	rsi, rdx
0x400170:	mov	rdi, rax
0x400173:	call	0x400820
<Block for 0x4000cc, 19 bytes>
0x4000cc:	lea	rsi, [rip + 0x588]
0x4000d3:	lea	rdi, [rip + 0x583]
0x4000da:	call	0x500008
<Block for 0x400178, 25 bytes>
0x400178:	lea	rdx, [rbp - 0xd8]
0x40017f:	lea	rax, [rbp - 0xc0]
0x400186:	mov	rsi, rdx
0x400189:	mov	rdi, rax
0x40018c:	call	0x400820
<Block for 0x4000df, 17 bytes>
0x4000df:	mov	qword ptr [rbp - 0xc8], rax
0x4000e6:	cmp	qword ptr [rbp - 0xc8], 0
0x4000ee:	je	0x40015f
<Block for 0x400191, 25 bytes>
0x400191:	lea	rdx, [rbp - 0xd8]
0x400198:	lea	rax, [rbp - 0xc0]
0x40019f:	mov	rsi, rdx
0x4001a2:	mov	rdi, rax
0x4001a5:	call	0x400820
<Block for 0x4000f0, 54 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0xd0]
0x4000f7:	mov	edx, 0x64
0x4000fc:	sub	edx, eax
0x4000fe:	mov	eax, edx
0x400100:	mov	esi, eax
0x400102:	mov	rdx, qword ptr [rbp - 0xd8]
0x400109:	mov	rax, qword ptr [rbp - 0xd0]
0x400110:	lea	rcx, [rdx + rax]
0x400114:	mov	rax, qword ptr [rbp - 0xc8]
0x40011b:	mov	rdx, rax
0x40011e:	mov	rdi, rcx
0x400121:	call	0x500010
<Block for 0x4001aa, 25 bytes>
0x4001aa:	lea	rdx, [rbp - 0xc0]
0x4001b1:	lea	rax, [rbp - 0xa0]
0x4001b8:	mov	rsi, rdx
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x40085a
<Block for 0x400126, 10 bytes>
0x400126:	test	rax, rax
0x400129:	sete	al
0x40012c:	test	al, al
0x40012e:	je	0x400150
<Block for 0x4001c3, 15 bytes>
0x4001c3:	lea	rax, [rbp - 0xa0]
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x500028
<Block for 0x400150, 15 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0xc8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x400130, 12 bytes>
0x400130:	lea	rdi, [rip + 0x534]
0x400137:	call	0x500018
<Block for 0x4001d2, 15 bytes>
0x4001d2:	lea	rax, [rbp - 0xa0]
0x4001d9:	mov	rdi, rax
0x4001dc:	call	0x400730
<Block for 0x40013c, 35 bytes>
0x40013c:	mov	rdx, qword ptr [rbp - 0xd8]
0x400143:	mov	rax, qword ptr [rbp - 0xd0]
0x40014a:	add	rax, rdx
0x40014d:	mov	byte ptr [rax], 0
0x400150:	mov	rax, qword ptr [rbp - 0xc8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x4001e1, 15 bytes>
0x4001e1:	lea	rax, [rbp - 0xc0]
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x400730
<Block for 0x4001f0, 16 bytes>
0x4001f0:	nop	
0x4001f1:	mov	rax, qword ptr [rbp - 0x18]
0x4001f5:	xor	rax, qword ptr fs:[0x28]
0x4001fe:	je	0x400240
<Block for 0x400240, 10 bytes>
0x400240:	add	rsp, 0xd8
0x400247:	pop	rbx
0x400248:	pop	rbp
0x400249:	ret	
<Block for 0x400200, 2 bytes>
0x400200:	jmp	0x40023b
<Block for 0x40023b, 5 bytes>
0x40023b:	call	0x500038
