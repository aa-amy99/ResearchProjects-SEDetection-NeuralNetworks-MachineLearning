<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	sub	rsp, 0x10
0x40000f:	mov	edi, 8
0x400014:	call	0x500000
<Block for 0x400019, 18 bytes>
0x400019:	mov	rbx, rax
0x40001c:	mov	rax, qword ptr [rbp - 0x20]
0x400020:	mov	rsi, rax
0x400023:	mov	rdi, rbx
0x400026:	call	0x500008
<Block for 0x40002b, 13 bytes>
0x40002b:	mov	qword ptr [rbp - 0x18], rbx
0x40002f:	mov	rbx, qword ptr [rbp - 0x18]
0x400033:	test	rbx, rbx
0x400036:	je	0x40006e
<Block for 0x40006e, 10 bytes>
0x40006e:	nop	
0x40006f:	add	rsp, 0x10
0x400073:	pop	rbx
0x400074:	pop	r12
0x400076:	pop	rbp
0x400077:	ret	
<Block for 0x400038, 8 bytes>
0x400038:	mov	rdi, rbx
0x40003b:	call	0x500010
<Block for 0x400040, 13 bytes>
0x400040:	mov	esi, 8
0x400045:	mov	rdi, rbx
0x400048:	call	0x500018
<Block for 0x40004d, 2 bytes>
0x40004d:	jmp	0x40006e
