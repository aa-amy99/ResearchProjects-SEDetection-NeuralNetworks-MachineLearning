<Block for 0x400000, 81 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	qword ptr [rbp - 0x20], 0
0x40002b:	mov	word ptr [rbp - 0x22], 8
0x400031:	lea	rax, [rbp - 0x22]
0x400035:	mov	qword ptr [rbp - 0x20], rax
0x400039:	mov	rax, qword ptr [rbp - 0x18]
0x40003d:	mov	rax, qword ptr [rax]
0x400040:	mov	qword ptr [rbp - 0x10], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	eax, dword ptr [rax]
0x40004a:	mov	edi, eax
0x40004c:	call	0x500000
<Block for 0x400051, 16 bytes>
0x400051:	nop	
0x400052:	mov	rax, qword ptr [rbp - 8]
0x400056:	xor	rax, qword ptr fs:[0x28]
0x40005f:	je	0x400066
<Block for 0x400066, 2 bytes>
0x400066:	leave	
0x400067:	ret	
<Block for 0x400061, 5 bytes>
0x400061:	call	0x500008
