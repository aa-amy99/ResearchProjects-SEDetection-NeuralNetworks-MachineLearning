<Block for 0x400076, 36 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x20
0x400082:	mov	qword ptr [rbp - 0x18], rdi
0x400086:	mov	rax, qword ptr [rbp - 0x18]
0x40008a:	mov	eax, dword ptr [rax]
0x40008c:	cdqe	
0x40008e:	shl	rax, 2
0x400092:	mov	rdi, rax
0x400095:	call	0x500008
<Block for 0x40009a, 11 bytes>
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	cmp	qword ptr [rbp - 8], 0
0x4000a3:	jne	0x4000af
<Block for 0x4000a5, 10 bytes>
0x4000a5:	mov	edi, 0xffffffff
0x4000aa:	call	0x500010
<Block for 0x4000af, 22 bytes>
0x4000af:	mov	qword ptr [rbp - 0x10], 0
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	eax, dword ptr [rax]
0x4000bd:	cdqe	
0x4000bf:	cmp	qword ptr [rbp - 0x10], rax
0x4000c3:	jae	0x4000e5
<Block for 0x4000c5, 32 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 0x10]
0x4000c9:	lea	rdx, [rax*4]
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	add	rax, rdx
0x4000d8:	mov	dword ptr [rax], 0
0x4000de:	add	qword ptr [rbp - 0x10], 1
0x4000e3:	jmp	0x4000b7
<Block for 0x4000e5, 13 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	mov	eax, dword ptr [rax]
0x4000eb:	mov	edi, eax
0x4000ed:	call	0x500018
<Block for 0x4000b7, 14 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	eax, dword ptr [rax]
0x4000bd:	cdqe	
0x4000bf:	cmp	qword ptr [rbp - 0x10], rax
0x4000c3:	jae	0x4000e5
<Block for 0x4000f2, 12 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 8]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500020
<Block for 0x4000fe, 3 bytes>
0x4000fe:	nop	
0x4000ff:	leave	
0x400100:	ret	
