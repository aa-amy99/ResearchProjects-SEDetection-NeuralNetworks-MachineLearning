<Block for 0x4000a2, 69 bytes>
0x4000a2:	endbr64	
0x4000a6:	push	rbp
0x4000a7:	mov	rbp, rsp
0x4000aa:	sub	rsp, 0xf0
0x4000b1:	mov	rax, qword ptr fs:[0x28]
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	xor	eax, eax
0x4000c0:	lea	rax, [rbp - 0xe0]
0x4000c7:	mov	qword ptr [rbp - 0xe8], rax
0x4000ce:	mov	dword ptr [rip + 0x134], 0
0x4000d8:	mov	rax, qword ptr [rbp - 0xe8]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500028
<Block for 0x4000e7, 29 bytes>
0x4000e7:	mov	qword ptr [rbp - 0xe8], rax
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	edx, 0x63
0x4000f7:	mov	esi, 0x43
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500008
<Block for 0x400104, 26 bytes>
0x400104:	mov	byte ptr [rbp - 0xd], 0
0x400108:	lea	rdx, [rbp - 0x70]
0x40010c:	mov	rax, qword ptr [rbp - 0xe8]
0x400113:	mov	rsi, rdx
0x400116:	mov	rdi, rax
0x400119:	call	0x500010
<Block for 0x40011e, 15 bytes>
0x40011e:	mov	rax, qword ptr [rbp - 0xe8]
0x400125:	mov	rdi, rax
0x400128:	call	0x500018
<Block for 0x40012d, 16 bytes>
0x40012d:	nop	
0x40012e:	mov	rax, qword ptr [rbp - 8]
0x400132:	xor	rax, qword ptr fs:[0x28]
0x40013b:	je	0x400142
<Block for 0x400142, 2 bytes>
0x400142:	leave	
0x400143:	ret	
<Block for 0x40013d, 5 bytes>
0x40013d:	call	0x500020
