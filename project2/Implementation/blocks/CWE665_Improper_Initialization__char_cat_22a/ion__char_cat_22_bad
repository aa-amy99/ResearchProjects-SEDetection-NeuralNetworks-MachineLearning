<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xe8], rax
0x40002c:	mov	dword ptr [rip + 0x1d2], 1
0x400036:	mov	rax, qword ptr [rbp - 0xe8]
0x40003d:	mov	rdi, rax
0x400040:	call	0x500000
<Block for 0x400045, 29 bytes>
0x400045:	mov	qword ptr [rbp - 0xe8], rax
0x40004c:	lea	rax, [rbp - 0x70]
0x400050:	mov	edx, 0x63
0x400055:	mov	esi, 0x43
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500008
<Block for 0x400062, 26 bytes>
0x400062:	mov	byte ptr [rbp - 0xd], 0
0x400066:	lea	rdx, [rbp - 0x70]
0x40006a:	mov	rax, qword ptr [rbp - 0xe8]
0x400071:	mov	rsi, rdx
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 15 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 0xe8]
0x400083:	mov	rdi, rax
0x400086:	call	0x500018
<Block for 0x40008b, 16 bytes>
0x40008b:	nop	
0x40008c:	mov	rax, qword ptr [rbp - 8]
0x400090:	xor	rax, qword ptr fs:[0x28]
0x400099:	je	0x4000a0
<Block for 0x4000a0, 2 bytes>
0x4000a0:	leave	
0x4000a1:	ret	
<Block for 0x40009b, 5 bytes>
0x40009b:	call	0x500020
