<Block for 0x400192, 55 bytes>
0x400192:	endbr64	
0x400196:	push	rbp
0x400197:	mov	rbp, rsp
0x40019a:	sub	rsp, 0xf0
0x4001a1:	mov	rax, qword ptr fs:[0x28]
0x4001aa:	mov	qword ptr [rbp - 8], rax
0x4001ae:	xor	eax, eax
0x4001b0:	lea	rax, [rbp - 0xe0]
0x4001b7:	mov	edx, 0x63
0x4001bc:	mov	esi, 0x41
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500000
<Block for 0x4001c9, 14 bytes>
0x4001c9:	mov	byte ptr [rbp - 0x7d], 0
0x4001cd:	mov	eax, 0
0x4001d2:	call	0x500008
<Block for 0x4001d7, 4 bytes>
0x4001d7:	test	eax, eax
0x4001d9:	je	0x4001e9
<Block for 0x4001e9, 22 bytes>
0x4001e9:	lea	rax, [rbp - 0x70]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x43
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x4001db, 36 bytes>
0x4001db:	lea	rax, [rbp - 0xe0]
0x4001e2:	mov	qword ptr [rbp - 0xe8], rax
0x4001e9:	lea	rax, [rbp - 0x70]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x43
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x4001ff, 31 bytes>
0x4001ff:	mov	byte ptr [rbp - 0xd], 0
0x400203:	lea	rcx, [rbp - 0x70]
0x400207:	mov	rax, qword ptr [rbp - 0xe8]
0x40020e:	mov	edx, 0x63
0x400213:	mov	rsi, rcx
0x400216:	mov	rdi, rax
0x400219:	call	0x500010
<Block for 0x40021e, 29 bytes>
0x40021e:	mov	rax, qword ptr [rbp - 0xe8]
0x400225:	add	rax, 0x63
0x400229:	mov	byte ptr [rax], 0
0x40022c:	mov	rax, qword ptr [rbp - 0xe8]
0x400233:	mov	rdi, rax
0x400236:	call	0x500018
<Block for 0x40023b, 16 bytes>
0x40023b:	nop	
0x40023c:	mov	rax, qword ptr [rbp - 8]
0x400240:	xor	rax, qword ptr fs:[0x28]
0x400249:	je	0x400250
<Block for 0x400250, 2 bytes>
0x400250:	leave	
0x400251:	ret	
<Block for 0x40024b, 5 bytes>
0x40024b:	call	0x500020
