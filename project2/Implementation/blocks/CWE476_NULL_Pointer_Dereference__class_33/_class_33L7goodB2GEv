<Block for 0x400103, 61 bytes>
0x400103:	endbr64	
0x400107:	push	rbp
0x400108:	mov	rbp, rsp
0x40010b:	sub	rsp, 0x20
0x40010f:	mov	rax, qword ptr fs:[0x28]
0x400118:	mov	qword ptr [rbp - 8], rax
0x40011c:	xor	eax, eax
0x40011e:	lea	rax, [rbp - 0x20]
0x400122:	mov	qword ptr [rbp - 0x18], rax
0x400126:	mov	qword ptr [rbp - 0x20], 0
0x40012e:	mov	rax, qword ptr [rbp - 0x18]
0x400132:	mov	rax, qword ptr [rax]
0x400135:	mov	qword ptr [rbp - 0x10], rax
0x400139:	cmp	qword ptr [rbp - 0x10], 0
0x40013e:	je	0x400165
<Block for 0x400165, 12 bytes>
0x400165:	lea	rdi, [rip + 0x31]
0x40016c:	call	0x500020
<Block for 0x400140, 13 bytes>
0x400140:	mov	rax, qword ptr [rbp - 0x10]
0x400144:	mov	eax, dword ptr [rax]
0x400146:	mov	edi, eax
0x400148:	call	0x500000
<Block for 0x400171, 16 bytes>
0x400171:	nop	
0x400172:	mov	rax, qword ptr [rbp - 8]
0x400176:	xor	rax, qword ptr fs:[0x28]
0x40017f:	je	0x400186
<Block for 0x40014d, 9 bytes>
0x40014d:	mov	rax, qword ptr [rbp - 0x10]
0x400151:	test	rax, rax
0x400154:	je	0x400171
<Block for 0x400186, 2 bytes>
0x400186:	leave	
0x400187:	ret	
<Block for 0x400181, 5 bytes>
0x400181:	call	0x500010
<Block for 0x400156, 13 bytes>
0x400156:	mov	esi, 8
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500008
<Block for 0x400163, 2 bytes>
0x400163:	jmp	0x400171
