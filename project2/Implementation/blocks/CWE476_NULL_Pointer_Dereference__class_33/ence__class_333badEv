<Block for 0x400000, 67 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	qword ptr [rbp - 0x20], 0
0x40002b:	mov	rax, qword ptr [rbp - 0x18]
0x40002f:	mov	rax, qword ptr [rax]
0x400032:	mov	qword ptr [rbp - 0x10], rax
0x400036:	mov	rax, qword ptr [rbp - 0x10]
0x40003a:	mov	eax, dword ptr [rax]
0x40003c:	mov	edi, eax
0x40003e:	call	0x500000
<Block for 0x400043, 9 bytes>
0x400043:	mov	rax, qword ptr [rbp - 0x10]
0x400047:	test	rax, rax
0x40004a:	je	0x400059
<Block for 0x400059, 16 bytes>
0x400059:	nop	
0x40005a:	mov	rax, qword ptr [rbp - 8]
0x40005e:	xor	rax, qword ptr fs:[0x28]
0x400067:	je	0x40006e
<Block for 0x40004c, 13 bytes>
0x40004c:	mov	esi, 8
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
<Block for 0x40006e, 2 bytes>
0x40006e:	leave	
0x40006f:	ret	
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500010
