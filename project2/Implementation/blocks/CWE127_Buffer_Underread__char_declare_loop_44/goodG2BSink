<Block for 0x40010a, 59 bytes>
0x40010a:	endbr64	
0x40010e:	push	rbp
0x40010f:	mov	rbp, rsp
0x400112:	sub	rsp, 0x90
0x400119:	mov	qword ptr [rbp - 0x88], rdi
0x400120:	mov	rax, qword ptr fs:[0x28]
0x400129:	mov	qword ptr [rbp - 8], rax
0x40012d:	xor	eax, eax
0x40012f:	lea	rax, [rbp - 0x70]
0x400133:	mov	edx, 0x63
0x400138:	mov	esi, 0x43
0x40013d:	mov	rdi, rax
0x400140:	call	0x500000
<Block for 0x400145, 14 bytes>
0x400145:	mov	byte ptr [rbp - 0xd], 0
0x400149:	mov	qword ptr [rbp - 0x78], 0
0x400151:	jmp	0x400176
<Block for 0x400176, 7 bytes>
0x400176:	cmp	qword ptr [rbp - 0x78], 0x63
0x40017b:	jbe	0x400153
<Block for 0x400153, 42 bytes>
0x400153:	mov	rdx, qword ptr [rbp - 0x88]
0x40015a:	mov	rax, qword ptr [rbp - 0x78]
0x40015e:	add	rax, rdx
0x400161:	movzx	eax, byte ptr [rax]
0x400164:	lea	rcx, [rbp - 0x70]
0x400168:	mov	rdx, qword ptr [rbp - 0x78]
0x40016c:	add	rdx, rcx
0x40016f:	mov	byte ptr [rdx], al
0x400171:	add	qword ptr [rbp - 0x78], 1
0x400176:	cmp	qword ptr [rbp - 0x78], 0x63
0x40017b:	jbe	0x400153
<Block for 0x40017d, 16 bytes>
0x40017d:	mov	byte ptr [rbp - 0xd], 0
0x400181:	lea	rax, [rbp - 0x70]
0x400185:	mov	rdi, rax
0x400188:	call	0x500008
<Block for 0x40018d, 16 bytes>
0x40018d:	nop	
0x40018e:	mov	rax, qword ptr [rbp - 8]
0x400192:	xor	rax, qword ptr fs:[0x28]
0x40019b:	je	0x4001a2
<Block for 0x4001a2, 2 bytes>
0x4001a2:	leave	
0x4001a3:	ret	
<Block for 0x40019d, 5 bytes>
0x40019d:	call	0x500010
