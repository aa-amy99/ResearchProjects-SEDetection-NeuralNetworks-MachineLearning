<Block for 0x40009a, 60 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	add	rsp, -0x80
0x4000a6:	mov	rax, qword ptr fs:[0x28]
0x4000af:	mov	qword ptr [rbp - 8], rax
0x4000b3:	xor	eax, eax
0x4000b5:	lea	rax, [rip - 0xbc]
0x4000bc:	mov	qword ptr [rbp - 0x80], rax
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	edx, 0x63
0x4000c9:	mov	esi, 0x41
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500000
<Block for 0x4000d6, 29 bytes>
0x4000d6:	mov	byte ptr [rbp - 0xd], 0
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	sub	rax, 8
0x4000e2:	mov	qword ptr [rbp - 0x78], rax
0x4000e6:	mov	rax, qword ptr [rbp - 0x78]
0x4000ea:	mov	rdx, qword ptr [rbp - 0x80]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	rdx
<Block for 0x4000f3, 16 bytes>
0x4000f3:	nop	
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	xor	rax, qword ptr fs:[0x28]
0x400101:	je	0x400108
<Block for 0x400108, 2 bytes>
0x400108:	leave	
0x400109:	ret	
<Block for 0x400103, 5 bytes>
0x400103:	call	0x500010
