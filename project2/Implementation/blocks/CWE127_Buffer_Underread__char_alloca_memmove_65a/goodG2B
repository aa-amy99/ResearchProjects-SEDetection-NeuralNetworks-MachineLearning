<Block for 0x4000fc, 92 bytes>
0x4000fc:	endbr64	
0x400100:	push	rbp
0x400101:	mov	rbp, rsp
0x400104:	sub	rsp, 0x20
0x400108:	mov	rax, qword ptr fs:[0x28]
0x400111:	mov	qword ptr [rbp - 8], rax
0x400115:	xor	eax, eax
0x400117:	mov	rax, qword ptr [rip + 0xfff0a]
0x40011e:	mov	qword ptr [rbp - 0x20], rax
0x400122:	mov	eax, 0x10
0x400127:	sub	rax, 1
0x40012b:	add	rax, 0x6c
0x40012f:	mov	esi, 0x10
0x400134:	mov	edx, 0
0x400139:	div	rsi
0x40013c:	imul	rax, rax, 0x10
0x400140:	mov	rdx, rax
0x400143:	and	rdx, 0xfffffffffffff000
0x40014a:	mov	rcx, rsp
0x40014d:	sub	rcx, rdx
0x400150:	mov	rdx, rcx
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x40016a, 26 bytes>
0x40016a:	mov	rdx, rax
0x40016d:	and	edx, 0xfff
0x400173:	sub	rsp, rdx
0x400176:	mov	rdx, rax
0x400179:	and	edx, 0xfff
0x40017f:	test	rdx, rdx
0x400182:	je	0x400194
<Block for 0x400158, 18 bytes>
0x400158:	sub	rsp, 0x1000
0x40015f:	or	qword ptr [rsp + 0xff8], 0
0x400168:	jmp	0x400153
<Block for 0x400194, 41 bytes>
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x18], rax
0x4001a7:	mov	rax, qword ptr [rbp - 0x18]
0x4001ab:	mov	edx, 0x63
0x4001b0:	mov	esi, 0x41
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500010
<Block for 0x400184, 57 bytes>
0x400184:	and	eax, 0xfff
0x400189:	sub	rax, 8
0x40018d:	add	rax, rsp
0x400190:	or	qword ptr [rax], 0
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x18], rax
0x4001a7:	mov	rax, qword ptr [rbp - 0x18]
0x4001ab:	mov	edx, 0x63
0x4001b0:	mov	esi, 0x41
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500010
<Block for 0x400153, 5 bytes>
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x4001bd, 32 bytes>
0x4001bd:	mov	rax, qword ptr [rbp - 0x18]
0x4001c1:	add	rax, 0x63
0x4001c5:	mov	byte ptr [rax], 0
0x4001c8:	mov	rax, qword ptr [rbp - 0x18]
0x4001cc:	mov	qword ptr [rbp - 0x10], rax
0x4001d0:	mov	rax, qword ptr [rbp - 0x10]
0x4001d4:	mov	rdx, qword ptr [rbp - 0x20]
0x4001d8:	mov	rdi, rax
0x4001db:	call	rdx
<Block for 0x4001dd, 16 bytes>
0x4001dd:	nop	
0x4001de:	mov	rax, qword ptr [rbp - 8]
0x4001e2:	xor	rax, qword ptr fs:[0x28]
0x4001eb:	je	0x4001f2
<Block for 0x4001f2, 2 bytes>
0x4001f2:	leave	
0x4001f3:	ret	
<Block for 0x4001ed, 5 bytes>
0x4001ed:	call	0x500018
