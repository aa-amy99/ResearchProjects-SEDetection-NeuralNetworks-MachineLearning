<Block for 0x400067, 22 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x20
0x400073:	mov	eax, 0
0x400078:	call	0x500028
<Block for 0x40007d, 4 bytes>
0x40007d:	test	eax, eax
0x40007f:	je	0x40008f
<Block for 0x40008f, 10 bytes>
0x40008f:	mov	edi, 8
0x400094:	call	0x500008
<Block for 0x400081, 12 bytes>
0x400081:	lea	rdi, [rip + 0x10c]
0x400088:	call	0x500030
<Block for 0x400099, 11 bytes>
0x400099:	mov	qword ptr [rbp - 0x18], rax
0x40009d:	cmp	qword ptr [rbp - 0x18], 0
0x4000a2:	jne	0x4000ae
<Block for 0x40008d, 2 bytes>
0x40008d:	jmp	0x4000f2
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 0xffffffff
0x4000a9:	call	0x500010
<Block for 0x4000ae, 46 bytes>
0x4000ae:	mov	dword ptr [rbp - 0x10], 1
0x4000b5:	mov	dword ptr [rbp - 0xc], 2
0x4000bc:	mov	rax, qword ptr [rbp - 0x18]
0x4000c0:	mov	rdx, qword ptr [rbp - 0x10]
0x4000c4:	mov	qword ptr [rax], rdx
0x4000c7:	mov	rax, qword ptr [rbp - 0x18]
0x4000cb:	mov	rax, qword ptr [rax]
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	mov	eax, dword ptr [rbp - 8]
0x4000d5:	mov	edi, eax
0x4000d7:	call	0x500020
<Block for 0x4000f2, 3 bytes>
0x4000f2:	nop	
0x4000f3:	leave	
0x4000f4:	ret	
<Block for 0x4000dc, 10 bytes>
0x4000dc:	mov	eax, dword ptr [rbp - 4]
0x4000df:	mov	edi, eax
0x4000e1:	call	0x500020
<Block for 0x4000e6, 12 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500018
