<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	eax, 5
0x400024:	cmp	eax, 5
0x400027:	jne	0x40004e
<Block for 0x400029, 15 bytes>
0x400029:	mov	rax, qword ptr [rip + 0xfffd0]
0x400030:	mov	rdi, rax
0x400033:	call	0x500008
<Block for 0x40004e, 31 bytes>
0x40004e:	mov	byte ptr [rbp - 0xc], 0x78
0x400052:	movzx	eax, byte ptr [rbp - 0xd]
0x400056:	mov	byte ptr [rbp - 0xb], al
0x400059:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005d:	mov	byte ptr [rbp - 9], 0
0x400061:	lea	rax, [rbp - 0xc]
0x400065:	mov	rdi, rax
0x400068:	call	0x500018
<Block for 0x400038, 19 bytes>
0x400038:	mov	byte ptr [rbp - 0xc], al
0x40003b:	mov	byte ptr [rbp - 0xb], 0
0x40003f:	lea	rax, [rbp - 0xc]
0x400043:	mov	rdi, rax
0x400046:	call	0x500010
<Block for 0x40006d, 16 bytes>
0x40006d:	nop	
0x40006e:	mov	rax, qword ptr [rbp - 8]
0x400072:	xor	rax, qword ptr fs:[0x28]
0x40007b:	je	0x400082
<Block for 0x40004b, 34 bytes>
0x40004b:	mov	byte ptr [rbp - 0xd], al
0x40004e:	mov	byte ptr [rbp - 0xc], 0x78
0x400052:	movzx	eax, byte ptr [rbp - 0xd]
0x400056:	mov	byte ptr [rbp - 0xb], al
0x400059:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005d:	mov	byte ptr [rbp - 9], 0
0x400061:	lea	rax, [rbp - 0xc]
0x400065:	mov	rdi, rax
0x400068:	call	0x500018
<Block for 0x400082, 2 bytes>
0x400082:	leave	
0x400083:	ret	
<Block for 0x40007d, 5 bytes>
0x40007d:	call	0x500020
