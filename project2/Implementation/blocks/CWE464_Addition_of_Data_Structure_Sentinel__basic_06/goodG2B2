<Block for 0x4000f5, 41 bytes>
0x4000f5:	endbr64	
0x4000f9:	push	rbp
0x4000fa:	mov	rbp, rsp
0x4000fd:	sub	rsp, 0x10
0x400101:	mov	rax, qword ptr fs:[0x28]
0x40010a:	mov	qword ptr [rbp - 8], rax
0x40010e:	xor	eax, eax
0x400110:	mov	byte ptr [rbp - 0xd], 0x20
0x400114:	mov	eax, 5
0x400119:	cmp	eax, 5
0x40011c:	jne	0x400122
<Block for 0x40011e, 35 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0x61
0x400122:	mov	byte ptr [rbp - 0xc], 0x78
0x400126:	movzx	eax, byte ptr [rbp - 0xd]
0x40012a:	mov	byte ptr [rbp - 0xb], al
0x40012d:	mov	byte ptr [rbp - 0xa], 0x7a
0x400131:	mov	byte ptr [rbp - 9], 0
0x400135:	lea	rax, [rbp - 0xc]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500018
<Block for 0x400122, 31 bytes>
0x400122:	mov	byte ptr [rbp - 0xc], 0x78
0x400126:	movzx	eax, byte ptr [rbp - 0xd]
0x40012a:	mov	byte ptr [rbp - 0xb], al
0x40012d:	mov	byte ptr [rbp - 0xa], 0x7a
0x400131:	mov	byte ptr [rbp - 9], 0
0x400135:	lea	rax, [rbp - 0xc]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500018
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500020
