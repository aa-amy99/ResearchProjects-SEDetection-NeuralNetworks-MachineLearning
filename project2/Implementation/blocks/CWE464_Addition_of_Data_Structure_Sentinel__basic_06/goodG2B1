<Block for 0x400084, 41 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x10
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	byte ptr [rbp - 0xd], 0x20
0x4000a3:	mov	eax, 5
0x4000a8:	cmp	eax, 5
0x4000ab:	je	0x4000bb
<Block for 0x4000bb, 35 bytes>
0x4000bb:	mov	byte ptr [rbp - 0xd], 0x61
0x4000bf:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c3:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c7:	mov	byte ptr [rbp - 0xb], al
0x4000ca:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000ce:	mov	byte ptr [rbp - 9], 0
0x4000d2:	lea	rax, [rbp - 0xc]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500018
<Block for 0x4000ad, 12 bytes>
0x4000ad:	lea	rdi, [rip + 0xc8]
0x4000b4:	call	0x500018
<Block for 0x4000de, 16 bytes>
0x4000de:	nop	
0x4000df:	mov	rax, qword ptr [rbp - 8]
0x4000e3:	xor	rax, qword ptr fs:[0x28]
0x4000ec:	je	0x4000f3
<Block for 0x4000b9, 2 bytes>
0x4000b9:	jmp	0x4000bf
<Block for 0x4000f3, 2 bytes>
0x4000f3:	leave	
0x4000f4:	ret	
<Block for 0x4000ee, 5 bytes>
0x4000ee:	call	0x500020
<Block for 0x4000bf, 31 bytes>
0x4000bf:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c3:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c7:	mov	byte ptr [rbp - 0xb], al
0x4000ca:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000ce:	mov	byte ptr [rbp - 9], 0
0x4000d2:	lea	rax, [rbp - 0xc]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500018
