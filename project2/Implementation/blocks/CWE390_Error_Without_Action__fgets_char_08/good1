<Block for 0x400101, 37 bytes>
0x400101:	endbr64	
0x400105:	push	rbp
0x400106:	mov	rbp, rsp
0x400109:	add	rsp, -0x80
0x40010d:	mov	rax, qword ptr fs:[0x28]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	xor	eax, eax
0x40011c:	mov	eax, 0
0x400121:	call	0x40000f
<Block for 0x400126, 4 bytes>
0x400126:	test	eax, eax
0x400128:	je	0x40013b
<Block for 0x40013b, 123 bytes>
0x40013b:	mov	qword ptr [rbp - 0x70], 0
0x400143:	mov	qword ptr [rbp - 0x68], 0
0x40014b:	mov	qword ptr [rbp - 0x60], 0
0x400153:	mov	qword ptr [rbp - 0x58], 0
0x40015b:	mov	qword ptr [rbp - 0x50], 0
0x400163:	mov	qword ptr [rbp - 0x48], 0
0x40016b:	mov	qword ptr [rbp - 0x40], 0
0x400173:	mov	qword ptr [rbp - 0x38], 0
0x40017b:	mov	qword ptr [rbp - 0x30], 0
0x400183:	mov	qword ptr [rbp - 0x28], 0
0x40018b:	mov	qword ptr [rbp - 0x20], 0
0x400193:	mov	qword ptr [rbp - 0x18], 0
0x40019b:	mov	dword ptr [rbp - 0x10], 0
0x4001a2:	lea	rax, [rbp - 0x70]
0x4001a6:	mov	qword ptr [rbp - 0x78], rax
0x4001aa:	lea	rdi, [rip + 0x178]
0x4001b1:	call	0x500000
<Block for 0x40012a, 12 bytes>
0x40012a:	lea	rdi, [rip + 0x210]
0x400131:	call	0x500000
<Block for 0x4001b6, 24 bytes>
0x4001b6:	mov	rdx, qword ptr [rip + 0xffe4b]
0x4001bd:	mov	rax, qword ptr [rbp - 0x78]
0x4001c1:	mov	esi, 0x64
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x500010
<Block for 0x400136, 5 bytes>
0x400136:	jmp	0x4001f5
<Block for 0x4001ce, 5 bytes>
0x4001ce:	test	rax, rax
0x4001d1:	jne	0x4001e9
<Block for 0x4001f5, 16 bytes>
0x4001f5:	nop	
0x4001f6:	mov	rax, qword ptr [rbp - 8]
0x4001fa:	xor	rax, qword ptr fs:[0x28]
0x400203:	je	0x40020a
<Block for 0x4001d3, 12 bytes>
0x4001d3:	lea	rdi, [rip + 0x17c]
0x4001da:	call	0x500000
<Block for 0x4001e9, 12 bytes>
0x4001e9:	mov	rax, qword ptr [rbp - 0x78]
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500000
<Block for 0x40020a, 2 bytes>
0x40020a:	leave	
0x40020b:	ret	
<Block for 0x400205, 5 bytes>
0x400205:	call	0x500018
<Block for 0x4001df, 10 bytes>
0x4001df:	mov	edi, 1
0x4001e4:	call	0x500020
