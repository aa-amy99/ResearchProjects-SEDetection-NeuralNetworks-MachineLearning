<Block for 0x40016d, 161 bytes>
0x40016d:	endbr64	
0x400171:	push	rbp
0x400172:	mov	rbp, rsp
0x400175:	add	rsp, -0x80
0x400179:	mov	rax, qword ptr fs:[0x28]
0x400182:	mov	qword ptr [rbp - 8], rax
0x400186:	xor	eax, eax
0x400188:	mov	qword ptr [rbp - 0x70], 0
0x400190:	mov	qword ptr [rbp - 0x68], 0
0x400198:	mov	qword ptr [rbp - 0x60], 0
0x4001a0:	mov	qword ptr [rbp - 0x58], 0
0x4001a8:	mov	qword ptr [rbp - 0x50], 0
0x4001b0:	mov	qword ptr [rbp - 0x48], 0
0x4001b8:	mov	qword ptr [rbp - 0x40], 0
0x4001c0:	mov	qword ptr [rbp - 0x38], 0
0x4001c8:	mov	qword ptr [rbp - 0x30], 0
0x4001d0:	mov	qword ptr [rbp - 0x28], 0
0x4001d8:	mov	qword ptr [rbp - 0x20], 0
0x4001e0:	mov	qword ptr [rbp - 0x18], 0
0x4001e8:	mov	dword ptr [rbp - 0x10], 0
0x4001ef:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x4001f6:	mov	rdx, qword ptr [rip + 0xffe03]
0x4001fd:	lea	rax, [rbp - 0x70]
0x400201:	mov	esi, 0x64
0x400206:	mov	rdi, rax
0x400209:	call	0x500008
<Block for 0x40020e, 5 bytes>
0x40020e:	test	rax, rax
0x400211:	jne	0x400223
<Block for 0x400213, 12 bytes>
0x400213:	lea	rdi, [rip + 0x20c]
0x40021a:	call	0x500010
<Block for 0x400223, 11 bytes>
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	movzx	eax, byte ptr [rax]
0x40022a:	test	al, al
0x40022c:	je	0x400243
<Block for 0x40021f, 15 bytes>
0x40021f:	mov	byte ptr [rbp - 0x70], 0
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	movzx	eax, byte ptr [rax]
0x40022a:	test	al, al
0x40022c:	je	0x400243
<Block for 0x400243, 22 bytes>
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	esi, 2
0x40024c:	mov	rdi, rax
0x40024f:	mov	eax, 0
0x400254:	call	0x500030
<Block for 0x40022e, 12 bytes>
0x40022e:	lea	rax, [rbp - 0x70]
0x400232:	mov	rdi, rax
0x400235:	call	0x500018
<Block for 0x400259, 9 bytes>
0x400259:	mov	dword ptr [rbp - 0x74], eax
0x40025c:	cmp	dword ptr [rbp - 0x74], -1
0x400260:	jne	0x40026c
<Block for 0x40023a, 31 bytes>
0x40023a:	sub	rax, 1
0x40023e:	mov	byte ptr [rbp + rax - 0x70], 0
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	esi, 2
0x40024c:	mov	rdi, rax
0x40024f:	mov	eax, 0
0x400254:	call	0x500030
<Block for 0x400262, 10 bytes>
0x400262:	mov	edi, 1
0x400267:	call	0x500028
<Block for 0x40026c, 22 bytes>
0x40026c:	mov	eax, dword ptr [rbp - 0x74]
0x40026f:	mov	edx, 0xc
0x400274:	lea	rsi, [rip + 0x1c6]
0x40027b:	mov	edi, eax
0x40027d:	call	0x500038
<Block for 0x400282, 6 bytes>
0x400282:	cmp	rax, -1
0x400286:	jne	0x400292
<Block for 0x400288, 10 bytes>
0x400288:	mov	edi, 1
0x40028d:	call	0x500028
<Block for 0x400292, 6 bytes>
0x400292:	cmp	dword ptr [rbp - 0x74], -1
0x400296:	je	0x4002a2
<Block for 0x4002a2, 17 bytes>
0x4002a2:	nop	
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002b8
<Block for 0x400298, 10 bytes>
0x400298:	mov	eax, dword ptr [rbp - 0x74]
0x40029b:	mov	edi, eax
0x40029d:	call	0x500040
<Block for 0x4002b8, 2 bytes>
0x4002b8:	leave	
0x4002b9:	ret	
<Block for 0x4002b3, 5 bytes>
0x4002b3:	call	0x500048
