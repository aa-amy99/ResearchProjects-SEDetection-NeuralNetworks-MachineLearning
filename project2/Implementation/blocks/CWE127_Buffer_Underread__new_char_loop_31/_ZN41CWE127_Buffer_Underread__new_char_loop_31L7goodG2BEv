<Block for 0x400107, 51 bytes>
0x400107:	endbr64	
0x40010b:	push	rbp
0x40010c:	mov	rbp, rsp
0x40010f:	sub	rsp, 0xa0
0x400116:	mov	rax, qword ptr fs:[0x28]
0x40011f:	mov	qword ptr [rbp - 8], rax
0x400123:	xor	eax, eax
0x400125:	mov	qword ptr [rbp - 0x90], 0
0x400130:	mov	edi, 0x64
0x400135:	call	0x500000
<Block for 0x40013a, 32 bytes>
0x40013a:	mov	qword ptr [rbp - 0x88], rax
0x400141:	mov	rax, qword ptr [rbp - 0x88]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x41
0x400152:	mov	rdi, rax
0x400155:	call	0x500008
<Block for 0x40015a, 69 bytes>
0x40015a:	mov	rax, qword ptr [rbp - 0x88]
0x400161:	add	rax, 0x63
0x400165:	mov	byte ptr [rax], 0
0x400168:	mov	rax, qword ptr [rbp - 0x88]
0x40016f:	mov	qword ptr [rbp - 0x90], rax
0x400176:	mov	rax, qword ptr [rbp - 0x90]
0x40017d:	mov	qword ptr [rbp - 0x80], rax
0x400181:	mov	rax, qword ptr [rbp - 0x80]
0x400185:	mov	qword ptr [rbp - 0x78], rax
0x400189:	lea	rax, [rbp - 0x70]
0x40018d:	mov	edx, 0x63
0x400192:	mov	esi, 0x43
0x400197:	mov	rdi, rax
0x40019a:	call	0x500008
<Block for 0x40019f, 25 bytes>
0x40019f:	mov	byte ptr [rbp - 0xd], 0
0x4001a3:	mov	qword ptr [rbp - 0x98], 0
0x4001ae:	cmp	qword ptr [rbp - 0x98], 0x63
0x4001b6:	ja	0x4001e3
<Block for 0x4001b8, 43 bytes>
0x4001b8:	mov	rdx, qword ptr [rbp - 0x78]
0x4001bc:	mov	rax, qword ptr [rbp - 0x98]
0x4001c3:	add	rax, rdx
0x4001c6:	movzx	eax, byte ptr [rax]
0x4001c9:	lea	rcx, [rbp - 0x70]
0x4001cd:	mov	rdx, qword ptr [rbp - 0x98]
0x4001d4:	add	rdx, rcx
0x4001d7:	mov	byte ptr [rdx], al
0x4001d9:	add	qword ptr [rbp - 0x98], 1
0x4001e1:	jmp	0x4001ae
<Block for 0x4001e3, 16 bytes>
0x4001e3:	mov	byte ptr [rbp - 0xd], 0
0x4001e7:	lea	rax, [rbp - 0x70]
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500010
<Block for 0x4001ae, 10 bytes>
0x4001ae:	cmp	qword ptr [rbp - 0x98], 0x63
0x4001b6:	ja	0x4001e3
<Block for 0x4001f3, 16 bytes>
0x4001f3:	nop	
0x4001f4:	mov	rax, qword ptr [rbp - 8]
0x4001f8:	xor	rax, qword ptr fs:[0x28]
0x400201:	je	0x400208
<Block for 0x400208, 2 bytes>
0x400208:	leave	
0x400209:	ret	
<Block for 0x400203, 5 bytes>
0x400203:	call	0x500018
