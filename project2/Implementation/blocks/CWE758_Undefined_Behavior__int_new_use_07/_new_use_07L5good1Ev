<Block for 0x400051, 23 bytes>
0x400051:	endbr64	
0x400055:	push	rbp
0x400056:	mov	rbp, rsp
0x400059:	sub	rsp, 0x10
0x40005d:	mov	eax, dword ptr [rip + 0xd5]
0x400063:	cmp	eax, 5
0x400066:	je	0x400076
<Block for 0x400076, 17 bytes>
0x400076:	mov	dword ptr [rbp - 0x10], 5
0x40007d:	mov	edi, 4
0x400082:	call	0x500000
<Block for 0x400068, 12 bytes>
0x400068:	lea	rdi, [rip + 0xcd]
0x40006f:	call	0x500018
<Block for 0x400087, 32 bytes>
0x400087:	mov	qword ptr [rbp - 8], rax
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	mov	edx, dword ptr [rbp - 0x10]
0x400092:	mov	dword ptr [rax], edx
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	mov	eax, dword ptr [rax]
0x40009a:	mov	dword ptr [rbp - 0xc], eax
0x40009d:	mov	eax, dword ptr [rbp - 0xc]
0x4000a0:	mov	edi, eax
0x4000a2:	call	0x500010
<Block for 0x400074, 2 bytes>
0x400074:	jmp	0x4000bd
<Block for 0x4000a7, 9 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	test	rax, rax
0x4000ae:	je	0x4000bd
<Block for 0x4000bd, 3 bytes>
0x4000bd:	nop	
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000b0, 13 bytes>
0x4000b0:	mov	esi, 4
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500008
