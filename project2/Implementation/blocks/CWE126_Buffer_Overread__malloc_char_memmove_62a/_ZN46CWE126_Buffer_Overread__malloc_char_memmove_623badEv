<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	lea	rax, [rbp - 0x78]
0x400027:	mov	rdi, rax
0x40002a:	call	0x500000
<Block for 0x40002f, 22 bytes>
0x40002f:	lea	rax, [rbp - 0x70]
0x400033:	mov	edx, 0x63
0x400038:	mov	esi, 0x43
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400045, 16 bytes>
0x400045:	mov	byte ptr [rbp - 0xd], 0
0x400049:	lea	rax, [rbp - 0x70]
0x40004d:	mov	rdi, rax
0x400050:	call	0x500010
<Block for 0x400055, 22 bytes>
0x400055:	mov	rdx, rax
0x400058:	mov	rcx, qword ptr [rbp - 0x78]
0x40005c:	lea	rax, [rbp - 0x70]
0x400060:	mov	rsi, rcx
0x400063:	mov	rdi, rax
0x400066:	call	0x500018
<Block for 0x40006b, 16 bytes>
0x40006b:	mov	byte ptr [rbp - 0xd], 0
0x40006f:	lea	rax, [rbp - 0x70]
0x400073:	mov	rdi, rax
0x400076:	call	0x500020
<Block for 0x40007b, 12 bytes>
0x40007b:	mov	rax, qword ptr [rbp - 0x78]
0x40007f:	mov	rdi, rax
0x400082:	call	0x500028
<Block for 0x400087, 16 bytes>
0x400087:	nop	
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	xor	rax, qword ptr fs:[0x28]
0x400095:	je	0x40009c
<Block for 0x40009c, 2 bytes>
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x400097, 5 bytes>
0x400097:	call	0x500030
