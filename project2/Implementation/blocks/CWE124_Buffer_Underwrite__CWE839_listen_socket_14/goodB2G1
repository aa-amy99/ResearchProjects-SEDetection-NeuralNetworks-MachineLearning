<Block for 0x4001d7, 49 bytes>
0x4001d7:	endbr64	
0x4001db:	push	rbp
0x4001dc:	mov	rbp, rsp
0x4001df:	sub	rsp, 0x60
0x4001e3:	mov	rax, qword ptr fs:[0x28]
0x4001ec:	mov	qword ptr [rbp - 8], rax
0x4001f0:	xor	eax, eax
0x4001f2:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x4001f9:	mov	eax, dword ptr [rip + 0xffe01]
0x4001ff:	cmp	eax, 5
0x400202:	jne	0x400320
<Block for 0x400208, 34 bytes>
0x400208:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40020f:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400216:	mov	edx, 6
0x40021b:	mov	esi, 1
0x400220:	mov	edi, 2
0x400225:	call	0x500008
<Block for 0x400320, 11 bytes>
0x400320:	mov	eax, dword ptr [rip + 0xffcda]
0x400326:	cmp	eax, 5
0x400329:	je	0x400339
<Block for 0x40022a, 13 bytes>
0x40022a:	mov	dword ptr [rbp - 0x48], eax
0x40022d:	cmp	dword ptr [rbp - 0x48], -1
0x400231:	je	0x4002f6
<Block for 0x400339, 46 bytes>
0x400339:	mov	qword ptr [rbp - 0x40], 0
0x400341:	mov	qword ptr [rbp - 0x38], 0
0x400349:	mov	qword ptr [rbp - 0x30], 0
0x400351:	mov	qword ptr [rbp - 0x28], 0
0x400359:	mov	qword ptr [rbp - 0x20], 0
0x400361:	cmp	dword ptr [rbp - 0x54], 0
0x400365:	js	0x40039f
<Block for 0x40032b, 12 bytes>
0x40032b:	lea	rdi, [rip + 0x456]
0x400332:	call	0x500058
<Block for 0x4002f6, 3 bytes>
0x4002f6:	nop	
0x4002f7:	jmp	0x400300
<Block for 0x400237, 22 bytes>
0x400237:	lea	rax, [rbp - 0x40]
0x40023b:	mov	edx, 0x10
0x400240:	mov	esi, 0
0x400245:	mov	rdi, rax
0x400248:	call	0x500010
<Block for 0x40039f, 12 bytes>
0x40039f:	lea	rdi, [rip + 0x3fa]
0x4003a6:	call	0x500058
<Block for 0x400367, 6 bytes>
0x400367:	cmp	dword ptr [rbp - 0x54], 9
0x40036b:	jg	0x40039f
<Block for 0x400337, 2 bytes>
0x400337:	jmp	0x4003ad
<Block for 0x400300, 6 bytes>
0x400300:	cmp	dword ptr [rbp - 0x48], -1
0x400304:	je	0x400310
<Block for 0x40024d, 23 bytes>
0x40024d:	mov	word ptr [rbp - 0x40], 2
0x400253:	mov	dword ptr [rbp - 0x3c], 0
0x40025a:	mov	edi, 0x6987
0x40025f:	call	0x500018
<Block for 0x4003ab, 2 bytes>
0x4003ab:	jmp	0x4003ad
<Block for 0x40036d, 22 bytes>
0x40036d:	mov	eax, dword ptr [rbp - 0x54]
0x400370:	cdqe	
0x400372:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40037a:	mov	dword ptr [rbp - 0x4c], 0
0x400381:	jmp	0x400397
<Block for 0x4003ad, 16 bytes>
0x4003ad:	nop	
0x4003ae:	mov	rax, qword ptr [rbp - 8]
0x4003b2:	xor	rax, qword ptr fs:[0x28]
0x4003bb:	je	0x4003c2
<Block for 0x400310, 6 bytes>
0x400310:	cmp	dword ptr [rbp - 0x50], -1
0x400314:	je	0x400320
<Block for 0x400306, 10 bytes>
0x400306:	mov	eax, dword ptr [rbp - 0x48]
0x400309:	mov	edi, eax
0x40030b:	call	0x500048
<Block for 0x400264, 26 bytes>
0x400264:	mov	word ptr [rbp - 0x3e], ax
0x400268:	lea	rcx, [rbp - 0x40]
0x40026c:	mov	eax, dword ptr [rbp - 0x48]
0x40026f:	mov	edx, 0x10
0x400274:	mov	rsi, rcx
0x400277:	mov	edi, eax
0x400279:	call	0x500020
<Block for 0x400397, 6 bytes>
0x400397:	cmp	dword ptr [rbp - 0x4c], 9
0x40039b:	jle	0x400383
<Block for 0x4003c2, 2 bytes>
0x4003c2:	leave	
0x4003c3:	ret	
<Block for 0x4003bd, 5 bytes>
0x4003bd:	call	0x500060
<Block for 0x400316, 10 bytes>
0x400316:	mov	eax, dword ptr [rbp - 0x50]
0x400319:	mov	edi, eax
0x40031b:	call	0x500048
<Block for 0x40027e, 5 bytes>
0x40027e:	cmp	eax, -1
0x400281:	je	0x4002f9
<Block for 0x400383, 16 bytes>
0x400383:	mov	eax, dword ptr [rbp - 0x4c]
0x400386:	cdqe	
0x400388:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40038c:	mov	edi, eax
0x40038e:	call	0x500050
<Block for 0x40039d, 2 bytes>
0x40039d:	jmp	0x4003ad
<Block for 0x4002f9, 3 bytes>
0x4002f9:	nop	
0x4002fa:	jmp	0x400300
<Block for 0x400283, 15 bytes>
0x400283:	mov	eax, dword ptr [rbp - 0x48]
0x400286:	mov	esi, 5
0x40028b:	mov	edi, eax
0x40028d:	call	0x500028
<Block for 0x400393, 10 bytes>
0x400393:	add	dword ptr [rbp - 0x4c], 1
0x400397:	cmp	dword ptr [rbp - 0x4c], 9
0x40039b:	jle	0x400383
<Block for 0x400292, 5 bytes>
0x400292:	cmp	eax, -1
0x400295:	je	0x4002fc
<Block for 0x4002fc, 3 bytes>
0x4002fc:	nop	
0x4002fd:	jmp	0x400300
<Block for 0x400297, 20 bytes>
0x400297:	mov	eax, dword ptr [rbp - 0x48]
0x40029a:	mov	edx, 0
0x40029f:	mov	esi, 0
0x4002a4:	mov	edi, eax
0x4002a6:	call	0x500030
<Block for 0x4002ab, 9 bytes>
0x4002ab:	mov	dword ptr [rbp - 0x50], eax
0x4002ae:	cmp	dword ptr [rbp - 0x50], -1
0x4002b2:	je	0x4002ff
<Block for 0x4002b4, 24 bytes>
0x4002b4:	lea	rsi, [rbp - 0x16]
0x4002b8:	mov	eax, dword ptr [rbp - 0x50]
0x4002bb:	mov	ecx, 0
0x4002c0:	mov	edx, 0xd
0x4002c5:	mov	edi, eax
0x4002c7:	call	0x500038
<Block for 0x4002ff, 1 bytes>
0x4002ff:	nop	
<Block for 0x4002cc, 9 bytes>
0x4002cc:	mov	dword ptr [rbp - 0x44], eax
0x4002cf:	cmp	dword ptr [rbp - 0x44], -1
0x4002d3:	je	0x400300
<Block for 0x4002d5, 6 bytes>
0x4002d5:	cmp	dword ptr [rbp - 0x44], 0
0x4002d9:	je	0x400300
<Block for 0x4002db, 22 bytes>
0x4002db:	mov	eax, dword ptr [rbp - 0x44]
0x4002de:	cdqe	
0x4002e0:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002e5:	lea	rax, [rbp - 0x16]
0x4002e9:	mov	rdi, rax
0x4002ec:	call	0x500040
<Block for 0x4002f1, 5 bytes>
0x4002f1:	mov	dword ptr [rbp - 0x54], eax
0x4002f4:	jmp	0x400300
