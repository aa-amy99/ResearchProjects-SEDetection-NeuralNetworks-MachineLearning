<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400054
<Block for 0x400054, 5 bytes>
0x400054:	call	0x500008
<Block for 0x40001a, 5 bytes>
0x40001a:	call	0x500008
<Block for 0x400059, 23 bytes>
0x400059:	mov	dword ptr [rax], 0
0x40005f:	mov	rax, qword ptr [rip + 0x13a]
0x400066:	movq	xmm0, rax
0x40006b:	call	0x500010
<Block for 0x40001f, 23 bytes>
0x40001f:	mov	dword ptr [rax], 0
0x400025:	mov	rax, qword ptr [rip + 0x174]
0x40002c:	movq	xmm0, rax
0x400031:	call	0x500010
<Block for 0x400070, 14 bytes>
0x400070:	movq	rax, xmm0
0x400075:	mov	qword ptr [rbp - 0x10], rax
0x400079:	call	0x500008
<Block for 0x400036, 14 bytes>
0x400036:	movq	rax, xmm0
0x40003b:	mov	qword ptr [rbp - 8], rax
0x40003f:	call	0x500008
<Block for 0x40007e, 7 bytes>
0x40007e:	mov	eax, dword ptr [rax]
0x400080:	cmp	eax, 0x21
0x400083:	jne	0x40009b
<Block for 0x400044, 14 bytes>
0x400044:	mov	rax, qword ptr [rbp - 8]
0x400048:	movq	xmm0, rax
0x40004d:	call	0x500018
<Block for 0x400085, 12 bytes>
0x400085:	lea	rdi, [rip + 0x104]
0x40008c:	call	0x500020
<Block for 0x40009b, 14 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x10]
0x40009f:	movq	xmm0, rax
0x4000a4:	call	0x500018
<Block for 0x400052, 2 bytes>
0x400052:	jmp	0x4000a9
<Block for 0x400091, 10 bytes>
0x400091:	mov	edi, 1
0x400096:	call	0x500028
<Block for 0x4000a9, 3 bytes>
0x4000a9:	nop	
0x4000aa:	leave	
0x4000ab:	ret	
