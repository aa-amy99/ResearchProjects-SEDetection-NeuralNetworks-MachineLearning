<Block for 0x400164, 84 bytes>
0x400164:	endbr64	
0x400168:	push	rbp
0x400169:	mov	rbp, rsp
0x40016c:	sub	rsp, 0x90
0x400173:	mov	rax, qword ptr fs:[0x28]
0x40017c:	mov	qword ptr [rbp - 8], rax
0x400180:	xor	eax, eax
0x400182:	mov	eax, 0x10
0x400187:	sub	rax, 1
0x40018b:	add	rax, 0x6c
0x40018f:	mov	esi, 0x10
0x400194:	mov	edx, 0
0x400199:	div	rsi
0x40019c:	imul	rax, rax, 0x10
0x4001a0:	mov	rdx, rax
0x4001a3:	and	rdx, 0xfffffffffffff000
0x4001aa:	mov	rcx, rsp
0x4001ad:	sub	rcx, rdx
0x4001b0:	mov	rdx, rcx
0x4001b3:	cmp	rsp, rdx
0x4001b6:	je	0x4001ca
<Block for 0x4001ca, 26 bytes>
0x4001ca:	mov	rdx, rax
0x4001cd:	and	edx, 0xfff
0x4001d3:	sub	rsp, rdx
0x4001d6:	mov	rdx, rax
0x4001d9:	and	edx, 0xfff
0x4001df:	test	rdx, rdx
0x4001e2:	je	0x4001f4
<Block for 0x4001b8, 18 bytes>
0x4001b8:	sub	rsp, 0x1000
0x4001bf:	or	qword ptr [rsp + 0xff8], 0
0x4001c8:	jmp	0x4001b3
<Block for 0x4001f4, 41 bytes>
0x4001f4:	mov	rax, rsp
0x4001f7:	add	rax, 0xf
0x4001fb:	shr	rax, 4
0x4001ff:	shl	rax, 4
0x400203:	mov	qword ptr [rbp - 0x78], rax
0x400207:	mov	rax, qword ptr [rbp - 0x78]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x4001e4, 57 bytes>
0x4001e4:	and	eax, 0xfff
0x4001e9:	sub	rax, 8
0x4001ed:	add	rax, rsp
0x4001f0:	or	qword ptr [rax], 0
0x4001f4:	mov	rax, rsp
0x4001f7:	add	rax, 0xf
0x4001fb:	shr	rax, 4
0x4001ff:	shl	rax, 4
0x400203:	mov	qword ptr [rbp - 0x78], rax
0x400207:	mov	rax, qword ptr [rbp - 0x78]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x4001b3, 5 bytes>
0x4001b3:	cmp	rsp, rdx
0x4001b6:	je	0x4001ca
<Block for 0x40021d, 23 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x78]
0x400221:	add	rax, 0x63
0x400225:	mov	byte ptr [rax], 0
0x400228:	mov	dword ptr [rbp - 0x8c], 0
0x400232:	jmp	0x400246
<Block for 0x400246, 9 bytes>
0x400246:	cmp	dword ptr [rbp - 0x8c], 0
0x40024d:	jle	0x400234
<Block for 0x400234, 27 bytes>
0x400234:	mov	rax, qword ptr [rbp - 0x78]
0x400238:	mov	qword ptr [rbp - 0x88], rax
0x40023f:	add	dword ptr [rbp - 0x8c], 1
0x400246:	cmp	dword ptr [rbp - 0x8c], 0
0x40024d:	jle	0x400234
<Block for 0x40024f, 22 bytes>
0x40024f:	lea	rax, [rbp - 0x70]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x43
0x40025d:	mov	rdi, rax
0x400260:	call	0x500000
<Block for 0x400265, 14 bytes>
0x400265:	mov	byte ptr [rbp - 0xd], 0
0x400269:	mov	qword ptr [rbp - 0x80], 0
0x400271:	jmp	0x400296
<Block for 0x400296, 7 bytes>
0x400296:	cmp	qword ptr [rbp - 0x80], 0x63
0x40029b:	jbe	0x400273
<Block for 0x400273, 42 bytes>
0x400273:	mov	rdx, qword ptr [rbp - 0x88]
0x40027a:	mov	rax, qword ptr [rbp - 0x80]
0x40027e:	add	rax, rdx
0x400281:	movzx	eax, byte ptr [rax]
0x400284:	lea	rcx, [rbp - 0x70]
0x400288:	mov	rdx, qword ptr [rbp - 0x80]
0x40028c:	add	rdx, rcx
0x40028f:	mov	byte ptr [rdx], al
0x400291:	add	qword ptr [rbp - 0x80], 1
0x400296:	cmp	qword ptr [rbp - 0x80], 0x63
0x40029b:	jbe	0x400273
<Block for 0x40029d, 16 bytes>
0x40029d:	mov	byte ptr [rbp - 0xd], 0
0x4002a1:	lea	rax, [rbp - 0x70]
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500008
<Block for 0x4002ad, 16 bytes>
0x4002ad:	nop	
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	xor	rax, qword ptr fs:[0x28]
0x4002bb:	je	0x4002c2
<Block for 0x4002c2, 2 bytes>
0x4002c2:	leave	
0x4002c3:	ret	
<Block for 0x4002bd, 5 bytes>
0x4002bd:	call	0x500010
