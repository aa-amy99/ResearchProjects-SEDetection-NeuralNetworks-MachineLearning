<Block for 0x400000, 63 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	byte ptr [rbp - 0x70], 0
0x400027:	lea	rax, [rbp - 0x70]
0x40002b:	mov	edx, 0x64
0x400030:	lea	rsi, [rip + 0xf1]
0x400037:	mov	rdi, rax
0x40003a:	call	0x500000
<Block for 0x40003f, 15 bytes>
0x40003f:	mov	qword ptr [rbp - 0x78], rax
0x400043:	mov	rax, qword ptr [rbp - 0x78]
0x400047:	mov	edi, eax
0x400049:	call	0x500008
<Block for 0x40004e, 12 bytes>
0x40004e:	lea	rax, [rbp - 0x70]
0x400052:	mov	rdi, rax
0x400055:	call	0x500010
<Block for 0x40005a, 17 bytes>
0x40005a:	nop	
0x40005b:	nop	
0x40005c:	mov	rax, qword ptr [rbp - 8]
0x400060:	xor	rax, qword ptr fs:[0x28]
0x400069:	je	0x400070
<Block for 0x400070, 2 bytes>
0x400070:	leave	
0x400071:	ret	
<Block for 0x40006b, 5 bytes>
0x40006b:	call	0x500018
