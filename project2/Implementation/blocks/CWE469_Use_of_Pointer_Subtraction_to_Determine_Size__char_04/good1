<Block for 0x40009e, 36 bytes>
0x40009e:	endbr64	
0x4000a2:	push	rbp
0x4000a3:	mov	rbp, rsp
0x4000a6:	sub	rsp, 0x30
0x4000aa:	mov	rax, qword ptr fs:[0x28]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	xor	eax, eax
0x4000b9:	mov	eax, 0
0x4000be:	test	eax, eax
0x4000c0:	je	0x4000d0
<Block for 0x4000d0, 38 bytes>
0x4000d0:	movabs	rax, 0x7271706f2f636261
0x4000da:	mov	qword ptr [rbp - 0x14], rax
0x4000de:	mov	dword ptr [rbp - 0xc], 0x757473
0x4000e5:	lea	rax, [rbp - 0x14]
0x4000e9:	mov	esi, 0x2f
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500000
<Block for 0x4000c2, 12 bytes>
0x4000c2:	lea	rdi, [rip + 0x133]
0x4000c9:	call	0x500020
<Block for 0x4000f6, 11 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x28], rax
0x4000fa:	cmp	qword ptr [rbp - 0x28], 0
0x4000ff:	jne	0x40010b
<Block for 0x4000ce, 2 bytes>
0x4000ce:	jmp	0x400128
<Block for 0x400101, 10 bytes>
0x400101:	mov	edi, 1
0x400106:	call	0x500008
<Block for 0x40010b, 29 bytes>
0x40010b:	lea	rax, [rbp - 0x14]
0x40010f:	mov	rdx, qword ptr [rbp - 0x28]
0x400113:	sub	rdx, rax
0x400116:	mov	rax, rdx
0x400119:	mov	qword ptr [rbp - 0x20], rax
0x40011d:	mov	rax, qword ptr [rbp - 0x20]
0x400121:	mov	edi, eax
0x400123:	call	0x500010
<Block for 0x400128, 16 bytes>
0x400128:	nop	
0x400129:	mov	rax, qword ptr [rbp - 8]
0x40012d:	xor	rax, qword ptr fs:[0x28]
0x400136:	je	0x40013d
<Block for 0x40013d, 2 bytes>
0x40013d:	leave	
0x40013e:	ret	
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500018
