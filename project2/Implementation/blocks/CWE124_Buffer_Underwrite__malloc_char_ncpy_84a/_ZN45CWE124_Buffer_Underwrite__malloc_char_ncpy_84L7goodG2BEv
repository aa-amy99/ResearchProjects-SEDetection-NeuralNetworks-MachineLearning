<Block for 0x400080, 33 bytes>
0x400080:	endbr64	
0x400084:	push	rbp
0x400085:	mov	rbp, rsp
0x400088:	push	r12
0x40008a:	push	rbx
0x40008b:	sub	rsp, 0x10
0x40008f:	mov	qword ptr [rbp - 0x20], 0
0x400097:	mov	edi, 8
0x40009c:	call	0x500000
<Block for 0x4000a1, 18 bytes>
0x4000a1:	mov	rbx, rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x20]
0x4000a8:	mov	rsi, rax
0x4000ab:	mov	rdi, rbx
0x4000ae:	call	0x500028
<Block for 0x4000b3, 13 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x18], rbx
0x4000b7:	mov	rbx, qword ptr [rbp - 0x18]
0x4000bb:	test	rbx, rbx
0x4000be:	je	0x4000f6
<Block for 0x4000f6, 10 bytes>
0x4000f6:	nop	
0x4000f7:	add	rsp, 0x10
0x4000fb:	pop	rbx
0x4000fc:	pop	r12
0x4000fe:	pop	rbp
0x4000ff:	ret	
<Block for 0x4000c0, 8 bytes>
0x4000c0:	mov	rdi, rbx
0x4000c3:	call	0x500030
<Block for 0x4000c8, 13 bytes>
0x4000c8:	mov	esi, 8
0x4000cd:	mov	rdi, rbx
0x4000d0:	call	0x500018
<Block for 0x4000d5, 2 bytes>
0x4000d5:	jmp	0x4000f6
