<Block for 0x400017, 44 bytes>
0x400017:	endbr64	
0x40001b:	push	rbp
0x40001c:	mov	rbp, rsp
0x40001f:	sub	rsp, 0x40
0x400023:	mov	rax, qword ptr fs:[0x28]
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	xor	eax, eax
0x400032:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400039:	mov	eax, dword ptr [rbp - 0x34]
0x40003c:	mov	edi, eax
0x40003e:	call	0x400000
<Block for 0x400043, 49 bytes>
0x400043:	mov	dword ptr [rbp - 0x34], eax
0x400046:	mov	qword ptr [rbp - 0x30], 0
0x40004e:	mov	qword ptr [rbp - 0x28], 0
0x400056:	mov	qword ptr [rbp - 0x20], 0
0x40005e:	mov	qword ptr [rbp - 0x18], 0
0x400066:	mov	qword ptr [rbp - 0x10], 0
0x40006e:	cmp	dword ptr [rbp - 0x34], 9
0x400072:	jg	0x4000a6
<Block for 0x400074, 22 bytes>
0x400074:	mov	eax, dword ptr [rbp - 0x34]
0x400077:	cdqe	
0x400079:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400081:	mov	dword ptr [rbp - 0x38], 0
0x400088:	jmp	0x40009e
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rdi, [rip + 0x1d3]
0x4000ad:	call	0x500008
<Block for 0x40009e, 6 bytes>
0x40009e:	cmp	dword ptr [rbp - 0x38], 9
0x4000a2:	jle	0x40008a
<Block for 0x4000b2, 16 bytes>
0x4000b2:	nop	
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	xor	rax, qword ptr fs:[0x28]
0x4000c0:	je	0x4000c7
<Block for 0x40008a, 16 bytes>
0x40008a:	mov	eax, dword ptr [rbp - 0x38]
0x40008d:	cdqe	
0x40008f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400093:	mov	edi, eax
0x400095:	call	0x500000
<Block for 0x4000a4, 2 bytes>
0x4000a4:	jmp	0x4000b2
<Block for 0x4000c7, 2 bytes>
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500010
<Block for 0x40009a, 10 bytes>
0x40009a:	add	dword ptr [rbp - 0x38], 1
0x40009e:	cmp	dword ptr [rbp - 0x38], 9
0x4000a2:	jle	0x40008a
