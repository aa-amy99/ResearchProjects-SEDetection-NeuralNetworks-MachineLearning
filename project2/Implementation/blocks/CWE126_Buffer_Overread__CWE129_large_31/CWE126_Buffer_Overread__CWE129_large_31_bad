<Block for 0x400000, 99 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x3c], 0xa
0x400029:	mov	eax, dword ptr [rbp - 0x3c]
0x40002c:	mov	dword ptr [rbp - 0x38], eax
0x40002f:	mov	eax, dword ptr [rbp - 0x38]
0x400032:	mov	dword ptr [rbp - 0x34], eax
0x400035:	mov	qword ptr [rbp - 0x30], 0
0x40003d:	mov	qword ptr [rbp - 0x28], 0
0x400045:	mov	qword ptr [rbp - 0x20], 0
0x40004d:	mov	qword ptr [rbp - 0x18], 0
0x400055:	mov	qword ptr [rbp - 0x10], 0
0x40005d:	cmp	dword ptr [rbp - 0x34], 0
0x400061:	js	0x400075
<Block for 0x400075, 12 bytes>
0x400075:	lea	rdi, [rip + 0x174]
0x40007c:	call	0x500008
<Block for 0x400063, 16 bytes>
0x400063:	mov	eax, dword ptr [rbp - 0x34]
0x400066:	cdqe	
0x400068:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40006c:	mov	edi, eax
0x40006e:	call	0x500000
<Block for 0x400081, 16 bytes>
0x400081:	nop	
0x400082:	mov	rax, qword ptr [rbp - 8]
0x400086:	xor	rax, qword ptr fs:[0x28]
0x40008f:	je	0x400096
<Block for 0x400073, 2 bytes>
0x400073:	jmp	0x400081
<Block for 0x400096, 2 bytes>
0x400096:	leave	
0x400097:	ret	
<Block for 0x400091, 5 bytes>
0x400091:	call	0x500010
