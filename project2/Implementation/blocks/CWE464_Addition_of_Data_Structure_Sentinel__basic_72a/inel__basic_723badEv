<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x60]
0x400020:	mov	rdi, rax
0x400023:	call	0x40038a
<Block for 0x400028, 19 bytes>
0x400028:	mov	byte ptr [rbp - 0x69], 0x20
0x40002c:	mov	rax, qword ptr [rip + 0xfffcd]
0x400033:	mov	rdi, rax
0x400036:	call	0x500008
<Block for 0x40003b, 19 bytes>
0x40003b:	mov	byte ptr [rbp - 0x1a], al
0x40003e:	mov	byte ptr [rbp - 0x19], 0
0x400042:	lea	rax, [rbp - 0x1a]
0x400046:	mov	rdi, rax
0x400049:	call	0x500010
<Block for 0x40004e, 15 bytes>
0x40004e:	mov	byte ptr [rbp - 0x69], al
0x400051:	lea	rax, [rbp - 0x60]
0x400055:	mov	rdi, rax
0x400058:	call	0x4004fa
<Block for 0x40005d, 23 bytes>
0x40005d:	mov	qword ptr [rbp - 0x68], rax
0x400061:	lea	rdx, [rbp - 0x68]
0x400065:	lea	rax, [rbp - 0x40]
0x400069:	mov	rsi, rdx
0x40006c:	mov	rdi, rax
0x40006f:	call	0x40054a
<Block for 0x400074, 28 bytes>
0x400074:	lea	rdx, [rbp - 0x69]
0x400078:	mov	rsi, qword ptr [rbp - 0x40]
0x40007c:	lea	rax, [rbp - 0x60]
0x400080:	mov	rcx, rdx
0x400083:	mov	edx, 1
0x400088:	mov	rdi, rax
0x40008b:	call	0x400578
<Block for 0x400090, 12 bytes>
0x400090:	lea	rax, [rbp - 0x60]
0x400094:	mov	rdi, rax
0x400097:	call	0x4004fa
<Block for 0x40009c, 23 bytes>
0x40009c:	mov	qword ptr [rbp - 0x68], rax
0x4000a0:	lea	rdx, [rbp - 0x68]
0x4000a4:	lea	rax, [rbp - 0x40]
0x4000a8:	mov	rsi, rdx
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x40054a
<Block for 0x4000b3, 28 bytes>
0x4000b3:	lea	rdx, [rbp - 0x69]
0x4000b7:	mov	rsi, qword ptr [rbp - 0x40]
0x4000bb:	lea	rax, [rbp - 0x60]
0x4000bf:	mov	rcx, rdx
0x4000c2:	mov	edx, 1
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x400578
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rax, [rbp - 0x60]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x4004fa
<Block for 0x4000db, 23 bytes>
0x4000db:	mov	qword ptr [rbp - 0x68], rax
0x4000df:	lea	rdx, [rbp - 0x68]
0x4000e3:	lea	rax, [rbp - 0x40]
0x4000e7:	mov	rsi, rdx
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x40054a
<Block for 0x4000f2, 28 bytes>
0x4000f2:	lea	rdx, [rbp - 0x69]
0x4000f6:	mov	rsi, qword ptr [rbp - 0x40]
0x4000fa:	lea	rax, [rbp - 0x60]
0x4000fe:	mov	rcx, rdx
0x400101:	mov	edx, 1
0x400106:	mov	rdi, rax
0x400109:	call	0x400578
<Block for 0x40010e, 19 bytes>
0x40010e:	lea	rdx, [rbp - 0x60]
0x400112:	lea	rax, [rbp - 0x40]
0x400116:	mov	rsi, rdx
0x400119:	mov	rdi, rax
0x40011c:	call	0x40063e
<Block for 0x400121, 12 bytes>
0x400121:	lea	rax, [rbp - 0x40]
0x400125:	mov	rdi, rax
0x400128:	call	0x500018
<Block for 0x40012d, 12 bytes>
0x40012d:	lea	rax, [rbp - 0x40]
0x400131:	mov	rdi, rax
0x400134:	call	0x4004b2
<Block for 0x400139, 12 bytes>
0x400139:	lea	rax, [rbp - 0x60]
0x40013d:	mov	rdi, rax
0x400140:	call	0x4004b2
<Block for 0x400145, 16 bytes>
0x400145:	nop	
0x400146:	mov	rax, qword ptr [rbp - 0x18]
0x40014a:	xor	rax, qword ptr fs:[0x28]
0x400153:	je	0x40018f
<Block for 0x40018f, 7 bytes>
0x40018f:	add	rsp, 0x68
0x400193:	pop	rbx
0x400194:	pop	rbp
0x400195:	ret	
<Block for 0x400155, 2 bytes>
0x400155:	jmp	0x40018a
<Block for 0x40018a, 5 bytes>
0x40018a:	call	0x500028
