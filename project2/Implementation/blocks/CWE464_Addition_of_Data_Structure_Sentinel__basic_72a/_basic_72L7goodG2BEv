<Block for 0x400196, 40 bytes>
0x400196:	endbr64	
0x40019a:	push	rbp
0x40019b:	mov	rbp, rsp
0x40019e:	push	rbx
0x40019f:	sub	rsp, 0x58
0x4001a3:	mov	rax, qword ptr fs:[0x28]
0x4001ac:	mov	qword ptr [rbp - 0x18], rax
0x4001b0:	xor	eax, eax
0x4001b2:	lea	rax, [rbp - 0x50]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x40038a
<Block for 0x4001be, 20 bytes>
0x4001be:	mov	byte ptr [rbp - 0x59], 0x20
0x4001c2:	mov	byte ptr [rbp - 0x59], 0x61
0x4001c6:	lea	rax, [rbp - 0x50]
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x4004fa
<Block for 0x4001d2, 23 bytes>
0x4001d2:	mov	qword ptr [rbp - 0x58], rax
0x4001d6:	lea	rdx, [rbp - 0x58]
0x4001da:	lea	rax, [rbp - 0x30]
0x4001de:	mov	rsi, rdx
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x40054a
<Block for 0x4001e9, 28 bytes>
0x4001e9:	lea	rdx, [rbp - 0x59]
0x4001ed:	mov	rsi, qword ptr [rbp - 0x30]
0x4001f1:	lea	rax, [rbp - 0x50]
0x4001f5:	mov	rcx, rdx
0x4001f8:	mov	edx, 1
0x4001fd:	mov	rdi, rax
0x400200:	call	0x400578
<Block for 0x400205, 12 bytes>
0x400205:	lea	rax, [rbp - 0x50]
0x400209:	mov	rdi, rax
0x40020c:	call	0x4004fa
<Block for 0x400211, 23 bytes>
0x400211:	mov	qword ptr [rbp - 0x58], rax
0x400215:	lea	rdx, [rbp - 0x58]
0x400219:	lea	rax, [rbp - 0x30]
0x40021d:	mov	rsi, rdx
0x400220:	mov	rdi, rax
0x400223:	call	0x40054a
<Block for 0x400228, 28 bytes>
0x400228:	lea	rdx, [rbp - 0x59]
0x40022c:	mov	rsi, qword ptr [rbp - 0x30]
0x400230:	lea	rax, [rbp - 0x50]
0x400234:	mov	rcx, rdx
0x400237:	mov	edx, 1
0x40023c:	mov	rdi, rax
0x40023f:	call	0x400578
<Block for 0x400244, 12 bytes>
0x400244:	lea	rax, [rbp - 0x50]
0x400248:	mov	rdi, rax
0x40024b:	call	0x4004fa
<Block for 0x400250, 23 bytes>
0x400250:	mov	qword ptr [rbp - 0x58], rax
0x400254:	lea	rdx, [rbp - 0x58]
0x400258:	lea	rax, [rbp - 0x30]
0x40025c:	mov	rsi, rdx
0x40025f:	mov	rdi, rax
0x400262:	call	0x40054a
<Block for 0x400267, 28 bytes>
0x400267:	lea	rdx, [rbp - 0x59]
0x40026b:	mov	rsi, qword ptr [rbp - 0x30]
0x40026f:	lea	rax, [rbp - 0x50]
0x400273:	mov	rcx, rdx
0x400276:	mov	edx, 1
0x40027b:	mov	rdi, rax
0x40027e:	call	0x400578
<Block for 0x400283, 19 bytes>
0x400283:	lea	rdx, [rbp - 0x50]
0x400287:	lea	rax, [rbp - 0x30]
0x40028b:	mov	rsi, rdx
0x40028e:	mov	rdi, rax
0x400291:	call	0x40063e
<Block for 0x400296, 12 bytes>
0x400296:	lea	rax, [rbp - 0x30]
0x40029a:	mov	rdi, rax
0x40029d:	call	0x500030
<Block for 0x4002a2, 12 bytes>
0x4002a2:	lea	rax, [rbp - 0x30]
0x4002a6:	mov	rdi, rax
0x4002a9:	call	0x4004b2
<Block for 0x4002ae, 12 bytes>
0x4002ae:	lea	rax, [rbp - 0x50]
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x4004b2
<Block for 0x4002ba, 16 bytes>
0x4002ba:	nop	
0x4002bb:	mov	rax, qword ptr [rbp - 0x18]
0x4002bf:	xor	rax, qword ptr fs:[0x28]
0x4002c8:	je	0x400304
<Block for 0x400304, 7 bytes>
0x400304:	add	rsp, 0x58
0x400308:	pop	rbx
0x400309:	pop	rbp
0x40030a:	ret	
<Block for 0x4002ca, 2 bytes>
0x4002ca:	jmp	0x4002ff
<Block for 0x4002ff, 5 bytes>
0x4002ff:	call	0x500028
