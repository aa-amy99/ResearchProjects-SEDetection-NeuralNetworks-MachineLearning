<Block for 0x40007b, 22 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x10
0x400087:	mov	eax, 0
0x40008c:	call	0x40000f
<Block for 0x400091, 4 bytes>
0x400091:	test	eax, eax
0x400093:	je	0x4000a3
<Block for 0x4000a3, 10 bytes>
0x4000a3:	mov	edi, 1
0x4000a8:	call	0x500000
<Block for 0x400095, 12 bytes>
0x400095:	lea	rdi, [rip + 0xe2]
0x40009c:	call	0x500020
<Block for 0x4000ad, 11 bytes>
0x4000ad:	mov	qword ptr [rbp - 8], rax
0x4000b1:	cmp	qword ptr [rbp - 8], 0
0x4000b6:	jne	0x4000c2
<Block for 0x4000a1, 2 bytes>
0x4000a1:	jmp	0x4000f1
<Block for 0x4000b8, 10 bytes>
0x4000b8:	mov	edi, 0xffffffff
0x4000bd:	call	0x500008
<Block for 0x4000c2, 35 bytes>
0x4000c2:	mov	byte ptr [rbp - 0xa], 5
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	movzx	edx, byte ptr [rbp - 0xa]
0x4000ce:	mov	byte ptr [rax], dl
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	movzx	eax, byte ptr [rax]
0x4000d7:	mov	byte ptr [rbp - 9], al
0x4000da:	movsx	eax, byte ptr [rbp - 9]
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500018
<Block for 0x4000f1, 3 bytes>
0x4000f1:	nop	
0x4000f2:	leave	
0x4000f3:	ret	
<Block for 0x4000e5, 12 bytes>
0x4000e5:	mov	rax, qword ptr [rbp - 8]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500010
