<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	edi, 0x190
0x400019:	call	0x500000
<Block for 0x40001e, 11 bytes>
0x40001e:	mov	qword ptr [rbp - 8], rax
0x400022:	cmp	qword ptr [rbp - 8], 0
0x400027:	jne	0x400033
<Block for 0x400029, 10 bytes>
0x400029:	mov	edi, 0xffffffff
0x40002e:	call	0x500008
<Block for 0x400033, 10 bytes>
0x400033:	mov	qword ptr [rbp - 0x10], 0
0x40003b:	jmp	0x40005b
<Block for 0x40005b, 7 bytes>
0x40005b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400060:	jbe	0x40003d
<Block for 0x40003d, 37 bytes>
0x40003d:	mov	rax, qword ptr [rbp - 0x10]
0x400041:	lea	rdx, [rax*4]
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	add	rax, rdx
0x400050:	mov	dword ptr [rax], 5
0x400056:	add	qword ptr [rbp - 0x10], 1
0x40005b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400060:	jbe	0x40003d
<Block for 0x400062, 12 bytes>
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	mov	rdi, rax
0x400069:	call	0x500010
<Block for 0x40006e, 14 bytes>
0x40006e:	nop	
0x40006f:	mov	rax, qword ptr [rbp - 8]
0x400073:	mov	eax, dword ptr [rax]
0x400075:	mov	edi, eax
0x400077:	call	0x500018
<Block for 0x40007c, 4 bytes>
0x40007c:	nop	
0x40007d:	nop	
0x40007e:	leave	
0x40007f:	ret	
