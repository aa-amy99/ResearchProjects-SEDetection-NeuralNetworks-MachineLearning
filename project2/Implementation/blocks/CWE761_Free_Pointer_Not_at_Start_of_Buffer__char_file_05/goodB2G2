<Block for 0x400234, 22 bytes>
0x400234:	endbr64	
0x400238:	push	rbp
0x400239:	mov	rbp, rsp
0x40023c:	sub	rsp, 0x20
0x400240:	mov	edi, 0x64
0x400245:	call	0x500000
<Block for 0x40024a, 11 bytes>
0x40024a:	mov	qword ptr [rbp - 0x18], rax
0x40024e:	cmp	qword ptr [rbp - 0x18], 0
0x400253:	jne	0x40025f
<Block for 0x400255, 10 bytes>
0x400255:	mov	edi, 0xffffffff
0x40025a:	call	0x500008
<Block for 0x40025f, 19 bytes>
0x40025f:	mov	rax, qword ptr [rbp - 0x18]
0x400263:	mov	byte ptr [rax], 0
0x400266:	mov	rax, qword ptr [rbp - 0x18]
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500010
<Block for 0x400272, 19 bytes>
0x400272:	mov	qword ptr [rbp - 0x10], rax
0x400276:	mov	eax, 0x64
0x40027b:	sub	rax, qword ptr [rbp - 0x10]
0x40027f:	cmp	rax, 1
0x400283:	jbe	0x4002f8
<Block for 0x4002f8, 10 bytes>
0x4002f8:	mov	eax, dword ptr [rip + 0x76]
0x4002fe:	test	eax, eax
0x400300:	je	0x40034f
<Block for 0x400285, 19 bytes>
0x400285:	lea	rsi, [rip + 0xf0]
0x40028c:	lea	rdi, [rip + 0xeb]
0x400293:	call	0x500018
<Block for 0x40034f, 3 bytes>
0x40034f:	nop	
0x400350:	leave	
0x400351:	ret	
<Block for 0x400302, 10 bytes>
0x400302:	mov	qword ptr [rbp - 0x20], 0
0x40030a:	jmp	0x400331
<Block for 0x400298, 11 bytes>
0x400298:	mov	qword ptr [rbp - 8], rax
0x40029c:	cmp	qword ptr [rbp - 8], 0
0x4002a1:	je	0x4002f8
<Block for 0x400331, 12 bytes>
0x400331:	mov	rax, qword ptr [rbp - 0x18]
0x400335:	mov	rdi, rax
0x400338:	call	0x500010
<Block for 0x4002a3, 42 bytes>
0x4002a3:	mov	rax, qword ptr [rbp - 0x10]
0x4002a7:	mov	edx, 0x64
0x4002ac:	sub	edx, eax
0x4002ae:	mov	eax, edx
0x4002b0:	mov	esi, eax
0x4002b2:	mov	rdx, qword ptr [rbp - 0x18]
0x4002b6:	mov	rax, qword ptr [rbp - 0x10]
0x4002ba:	lea	rcx, [rdx + rax]
0x4002be:	mov	rax, qword ptr [rbp - 8]
0x4002c2:	mov	rdx, rax
0x4002c5:	mov	rdi, rcx
0x4002c8:	call	0x500020
<Block for 0x40033d, 6 bytes>
0x40033d:	cmp	qword ptr [rbp - 0x20], rax
0x400341:	jb	0x40030c
<Block for 0x4002cd, 5 bytes>
0x4002cd:	test	rax, rax
0x4002d0:	jne	0x4002ec
<Block for 0x40030c, 18 bytes>
0x40030c:	mov	rdx, qword ptr [rbp - 0x18]
0x400310:	mov	rax, qword ptr [rbp - 0x20]
0x400314:	add	rax, rdx
0x400317:	movzx	eax, byte ptr [rax]
0x40031a:	cmp	al, 0x53
0x40031c:	jne	0x40032c
<Block for 0x400343, 12 bytes>
0x400343:	mov	rax, qword ptr [rbp - 0x18]
0x400347:	mov	rdi, rax
0x40034a:	call	0x500038
<Block for 0x4002d2, 12 bytes>
0x4002d2:	lea	rdi, [rip + 0xb3]
0x4002d9:	call	0x500028
<Block for 0x4002ec, 12 bytes>
0x4002ec:	mov	rax, qword ptr [rbp - 8]
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500030
<Block for 0x40031e, 12 bytes>
0x40031e:	lea	rdi, [rip + 0x76]
0x400325:	call	0x500028
<Block for 0x40032c, 17 bytes>
0x40032c:	add	qword ptr [rbp - 0x20], 1
0x400331:	mov	rax, qword ptr [rbp - 0x18]
0x400335:	mov	rdi, rax
0x400338:	call	0x500010
<Block for 0x4002de, 26 bytes>
0x4002de:	mov	rdx, qword ptr [rbp - 0x18]
0x4002e2:	mov	rax, qword ptr [rbp - 0x10]
0x4002e6:	add	rax, rdx
0x4002e9:	mov	byte ptr [rax], 0
0x4002ec:	mov	rax, qword ptr [rbp - 8]
0x4002f0:	mov	rdi, rax
0x4002f3:	call	0x500030
<Block for 0x40032a, 2 bytes>
0x40032a:	jmp	0x400343
