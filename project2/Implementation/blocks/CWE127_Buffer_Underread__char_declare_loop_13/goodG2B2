<Block for 0x4001c2, 55 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	sub	rsp, 0xf0
0x4001d1:	mov	rax, qword ptr fs:[0x28]
0x4001da:	mov	qword ptr [rbp - 8], rax
0x4001de:	xor	eax, eax
0x4001e0:	lea	rax, [rbp - 0xe0]
0x4001e7:	mov	edx, 0x63
0x4001ec:	mov	esi, 0x41
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500000
<Block for 0x4001f9, 15 bytes>
0x4001f9:	mov	byte ptr [rbp - 0x7d], 0
0x4001fd:	mov	eax, dword ptr [rip + 0xffe05]
0x400203:	cmp	eax, 5
0x400206:	jne	0x400216
<Block for 0x400208, 36 bytes>
0x400208:	lea	rax, [rbp - 0xe0]
0x40020f:	mov	qword ptr [rbp - 0xf0], rax
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	edx, 0x63
0x40021f:	mov	esi, 0x43
0x400224:	mov	rdi, rax
0x400227:	call	0x500000
<Block for 0x400216, 22 bytes>
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	edx, 0x63
0x40021f:	mov	esi, 0x43
0x400224:	mov	rdi, rax
0x400227:	call	0x500000
<Block for 0x40022c, 17 bytes>
0x40022c:	mov	byte ptr [rbp - 0xd], 0
0x400230:	mov	qword ptr [rbp - 0xe8], 0
0x40023b:	jmp	0x400269
<Block for 0x400269, 10 bytes>
0x400269:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400271:	jbe	0x40023d
<Block for 0x40023d, 54 bytes>
0x40023d:	mov	rdx, qword ptr [rbp - 0xf0]
0x400244:	mov	rax, qword ptr [rbp - 0xe8]
0x40024b:	add	rax, rdx
0x40024e:	movzx	eax, byte ptr [rax]
0x400251:	lea	rcx, [rbp - 0x70]
0x400255:	mov	rdx, qword ptr [rbp - 0xe8]
0x40025c:	add	rdx, rcx
0x40025f:	mov	byte ptr [rdx], al
0x400261:	add	qword ptr [rbp - 0xe8], 1
0x400269:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400271:	jbe	0x40023d
<Block for 0x400273, 16 bytes>
0x400273:	mov	byte ptr [rbp - 0xd], 0
0x400277:	lea	rax, [rbp - 0x70]
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500010
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500018
