<Block for 0x4002c6, 59 bytes>
0x4002c6:	endbr64	
0x4002ca:	push	rbp
0x4002cb:	mov	rbp, rsp
0x4002ce:	sub	rsp, 0x30
0x4002d2:	mov	qword ptr [rbp - 0x28], rdi
0x4002d6:	mov	rax, qword ptr fs:[0x28]
0x4002df:	mov	qword ptr [rbp - 8], rax
0x4002e3:	xor	eax, eax
0x4002e5:	lea	rdx, [rbp - 0x14]
0x4002e9:	mov	rax, qword ptr [rbp - 0x28]
0x4002ed:	lea	rsi, [rip + 0x3fc]
0x4002f4:	mov	rdi, rax
0x4002f7:	mov	eax, 0
0x4002fc:	call	0x500000
<Block for 0x400301, 5 bytes>
0x400301:	cmp	eax, 1
0x400304:	jne	0x400330
<Block for 0x400306, 16 bytes>
0x400306:	mov	dword ptr [rbp - 0xc], 0
0x40030d:	mov	dword ptr [rbp - 0x10], 0
0x400314:	jmp	0x40031e
<Block for 0x400330, 16 bytes>
0x400330:	nop	
0x400331:	mov	rax, qword ptr [rbp - 8]
0x400335:	xor	rax, qword ptr fs:[0x28]
0x40033e:	je	0x400345
<Block for 0x40031e, 8 bytes>
0x40031e:	mov	eax, dword ptr [rbp - 0x14]
0x400321:	cmp	dword ptr [rbp - 0x10], eax
0x400324:	jl	0x400316
<Block for 0x400345, 2 bytes>
0x400345:	leave	
0x400346:	ret	
<Block for 0x400340, 5 bytes>
0x400340:	call	0x500010
<Block for 0x400316, 16 bytes>
0x400316:	add	dword ptr [rbp - 0xc], 1
0x40031a:	add	dword ptr [rbp - 0x10], 1
0x40031e:	mov	eax, dword ptr [rbp - 0x14]
0x400321:	cmp	dword ptr [rbp - 0x10], eax
0x400324:	jl	0x400316
<Block for 0x400326, 10 bytes>
0x400326:	mov	eax, dword ptr [rbp - 0xc]
0x400329:	mov	edi, eax
0x40032b:	call	0x500008
