<Block for 0x400401, 59 bytes>
0x400401:	endbr64	
0x400405:	push	rbp
0x400406:	mov	rbp, rsp
0x400409:	sub	rsp, 0x30
0x40040d:	mov	qword ptr [rbp - 0x28], rdi
0x400411:	mov	rax, qword ptr fs:[0x28]
0x40041a:	mov	qword ptr [rbp - 8], rax
0x40041e:	xor	eax, eax
0x400420:	lea	rdx, [rbp - 0x14]
0x400424:	mov	rax, qword ptr [rbp - 0x28]
0x400428:	lea	rsi, [rip + 0x2c1]
0x40042f:	mov	rdi, rax
0x400432:	mov	eax, 0
0x400437:	call	0x500000
<Block for 0x40043c, 5 bytes>
0x40043c:	cmp	eax, 1
0x40043f:	jne	0x400475
<Block for 0x400441, 10 bytes>
0x400441:	mov	eax, dword ptr [rbp - 0x14]
0x400444:	cmp	eax, 0x270f
0x400449:	jg	0x400475
<Block for 0x400475, 16 bytes>
0x400475:	nop	
0x400476:	mov	rax, qword ptr [rbp - 8]
0x40047a:	xor	rax, qword ptr fs:[0x28]
0x400483:	je	0x40048a
<Block for 0x40044b, 16 bytes>
0x40044b:	mov	dword ptr [rbp - 0xc], 0
0x400452:	mov	dword ptr [rbp - 0x10], 0
0x400459:	jmp	0x400463
<Block for 0x40048a, 2 bytes>
0x40048a:	leave	
0x40048b:	ret	
<Block for 0x400485, 5 bytes>
0x400485:	call	0x500010
<Block for 0x400463, 8 bytes>
0x400463:	mov	eax, dword ptr [rbp - 0x14]
0x400466:	cmp	dword ptr [rbp - 0x10], eax
0x400469:	jl	0x40045b
<Block for 0x40045b, 16 bytes>
0x40045b:	add	dword ptr [rbp - 0xc], 1
0x40045f:	add	dword ptr [rbp - 0x10], 1
0x400463:	mov	eax, dword ptr [rbp - 0x14]
0x400466:	cmp	dword ptr [rbp - 0x10], eax
0x400469:	jl	0x40045b
<Block for 0x40046b, 10 bytes>
0x40046b:	mov	eax, dword ptr [rbp - 0xc]
0x40046e:	mov	edi, eax
0x400470:	call	0x500008
