<Block for 0x40028e, 88 bytes>
0x40028e:	endbr64	
0x400292:	push	rbp
0x400293:	mov	rbp, rsp
0x400296:	sub	rsp, 0x40
0x40029a:	mov	rax, qword ptr fs:[0x28]
0x4002a3:	mov	qword ptr [rbp - 8], rax
0x4002a7:	xor	eax, eax
0x4002a9:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4002b0:	mov	dword ptr [rbp - 0x34], 7
0x4002b7:	nop	
0x4002b8:	mov	qword ptr [rbp - 0x30], 0
0x4002c0:	mov	qword ptr [rbp - 0x28], 0
0x4002c8:	mov	qword ptr [rbp - 0x20], 0
0x4002d0:	mov	qword ptr [rbp - 0x18], 0
0x4002d8:	mov	qword ptr [rbp - 0x10], 0
0x4002e0:	cmp	dword ptr [rbp - 0x34], 9
0x4002e4:	jg	0x4002f8
<Block for 0x4002e6, 16 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x34]
0x4002e9:	cdqe	
0x4002eb:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002ef:	mov	edi, eax
0x4002f1:	call	0x500008
<Block for 0x4002f8, 12 bytes>
0x4002f8:	lea	rdi, [rip + 0xe1]
0x4002ff:	call	0x500010
<Block for 0x4002f6, 2 bytes>
0x4002f6:	jmp	0x400304
<Block for 0x400304, 17 bytes>
0x400304:	nop	
0x400305:	nop	
0x400306:	mov	rax, qword ptr [rbp - 8]
0x40030a:	xor	rax, qword ptr fs:[0x28]
0x400313:	je	0x40031a
<Block for 0x40031a, 2 bytes>
0x40031a:	leave	
0x40031b:	ret	
<Block for 0x400315, 5 bytes>
0x400315:	call	0x500018
