<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x130
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x120]
0x400025:	mov	edx, 0x31
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 32 bytes>
0x400037:	mov	byte ptr [rbp - 0xef], 0
0x40003e:	lea	rax, [rbp - 0xe0]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400057, 14 bytes>
0x400057:	mov	byte ptr [rbp - 0x7d], 0
0x40005b:	mov	eax, 0
0x400060:	call	0x500008
<Block for 0x400065, 4 bytes>
0x400065:	test	eax, eax
0x400067:	je	0x400079
<Block for 0x400079, 36 bytes>
0x400079:	lea	rax, [rbp - 0xe0]
0x400080:	mov	qword ptr [rbp - 0x128], rax
0x400087:	lea	rax, [rbp - 0x70]
0x40008b:	mov	edx, 0x63
0x400090:	mov	esi, 0x43
0x400095:	mov	rdi, rax
0x400098:	call	0x500000
<Block for 0x400069, 16 bytes>
0x400069:	lea	rax, [rbp - 0x120]
0x400070:	mov	qword ptr [rbp - 0x128], rax
0x400077:	jmp	0x400087
<Block for 0x40009d, 16 bytes>
0x40009d:	mov	byte ptr [rbp - 0xd], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500010
<Block for 0x400087, 22 bytes>
0x400087:	lea	rax, [rbp - 0x70]
0x40008b:	mov	edx, 0x63
0x400090:	mov	esi, 0x43
0x400095:	mov	rdi, rax
0x400098:	call	0x500000
<Block for 0x4000ad, 25 bytes>
0x4000ad:	mov	rdx, rax
0x4000b0:	mov	rcx, qword ptr [rbp - 0x128]
0x4000b7:	lea	rax, [rbp - 0x70]
0x4000bb:	mov	rsi, rcx
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500018
<Block for 0x4000c6, 16 bytes>
0x4000c6:	mov	byte ptr [rbp - 0xd], 0
0x4000ca:	lea	rax, [rbp - 0x70]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500020
<Block for 0x4000d6, 16 bytes>
0x4000d6:	nop	
0x4000d7:	mov	rax, qword ptr [rbp - 8]
0x4000db:	xor	rax, qword ptr fs:[0x28]
0x4000e4:	je	0x4000eb
<Block for 0x4000eb, 2 bytes>
0x4000eb:	leave	
0x4000ec:	ret	
<Block for 0x4000e6, 5 bytes>
0x4000e6:	call	0x500028
