<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xe8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xe0]
0x400026:	mov	rdi, rax
0x400029:	call	0x40040a
<Block for 0x40002e, 46 bytes>
0x40002e:	lea	rax, [rbp - 0x80]
0x400032:	mov	qword ptr [rbp - 0xe8], rax
0x400039:	mov	dword ptr [rbp - 0xb0], 0
0x400043:	lea	rdx, [rbp - 0xb0]
0x40004a:	lea	rax, [rbp - 0xe0]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	0x4005c2
<Block for 0x40005c, 45 bytes>
0x40005c:	mov	rdx, qword ptr [rbp - 0xe8]
0x400063:	mov	qword ptr [rax], rdx
0x400066:	mov	dword ptr [rbp - 0xb0], 1
0x400070:	lea	rdx, [rbp - 0xb0]
0x400077:	lea	rax, [rbp - 0xe0]
0x40007e:	mov	rsi, rdx
0x400081:	mov	rdi, rax
0x400084:	call	0x4005c2
<Block for 0x400089, 45 bytes>
0x400089:	mov	rdx, qword ptr [rbp - 0xe8]
0x400090:	mov	qword ptr [rax], rdx
0x400093:	mov	dword ptr [rbp - 0xb0], 2
0x40009d:	lea	rdx, [rbp - 0xb0]
0x4000a4:	lea	rax, [rbp - 0xe0]
0x4000ab:	mov	rsi, rdx
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x4005c2
<Block for 0x4000b6, 35 bytes>
0x4000b6:	mov	rdx, qword ptr [rbp - 0xe8]
0x4000bd:	mov	qword ptr [rax], rdx
0x4000c0:	lea	rdx, [rbp - 0xe0]
0x4000c7:	lea	rax, [rbp - 0xb0]
0x4000ce:	mov	rsi, rdx
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x40044a
<Block for 0x4000d9, 15 bytes>
0x4000d9:	lea	rax, [rbp - 0xb0]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500000
<Block for 0x4000e8, 15 bytes>
0x4000e8:	lea	rax, [rbp - 0xb0]
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x40042a
<Block for 0x4000f7, 15 bytes>
0x4000f7:	lea	rax, [rbp - 0xe0]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x40042a
<Block for 0x400106, 16 bytes>
0x400106:	nop	
0x400107:	mov	rax, qword ptr [rbp - 0x18]
0x40010b:	xor	rax, qword ptr fs:[0x28]
0x400114:	je	0x400156
<Block for 0x400156, 10 bytes>
0x400156:	add	rsp, 0xe8
0x40015d:	pop	rbx
0x40015e:	pop	rbp
0x40015f:	ret	
<Block for 0x400116, 2 bytes>
0x400116:	jmp	0x400151
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500010
