<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 8 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400108
<Block for 0x400108, 13 bytes>
0x400108:	mov	dword ptr [rbp - 0x3c], 6
0x40010f:	cmp	dword ptr [rbp - 0x3c], 5
0x400113:	jg	0x400134
<Block for 0x400034, 27 bytes>
0x400034:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40003b:	mov	edx, 6
0x400040:	mov	esi, 1
0x400045:	mov	edi, 2
0x40004a:	call	0x500008
<Block for 0x400115, 31 bytes>
0x400115:	lea	rcx, [rip + 0x104]
0x40011c:	mov	edx, 0x75
0x400121:	lea	rsi, [rip + 0xa8]
0x400128:	lea	rdi, [rip + 0xd1]
0x40012f:	call	0x500048
<Block for 0x400134, 16 bytes>
0x400134:	nop	
0x400135:	mov	rax, qword ptr [rbp - 8]
0x400139:	xor	rax, qword ptr fs:[0x28]
0x400142:	je	0x400149
<Block for 0x40004f, 13 bytes>
0x40004f:	mov	dword ptr [rbp - 0x38], eax
0x400052:	cmp	dword ptr [rbp - 0x38], -1
0x400056:	je	0x4000f2
<Block for 0x400149, 2 bytes>
0x400149:	leave	
0x40014a:	ret	
<Block for 0x400144, 5 bytes>
0x400144:	call	0x500050
<Block for 0x4000f2, 3 bytes>
0x4000f2:	nop	
0x4000f3:	jmp	0x4000f6
<Block for 0x40005c, 22 bytes>
0x40005c:	lea	rax, [rbp - 0x30]
0x400060:	mov	edx, 0x10
0x400065:	mov	esi, 0
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x4000f6, 6 bytes>
0x4000f6:	cmp	dword ptr [rbp - 0x38], -1
0x4000fa:	je	0x40010f
<Block for 0x400072, 18 bytes>
0x400072:	mov	word ptr [rbp - 0x30], 2
0x400078:	lea	rdi, [rip + 0x141]
0x40007f:	call	0x500018
<Block for 0x40010f, 6 bytes>
0x40010f:	cmp	dword ptr [rbp - 0x3c], 5
0x400113:	jg	0x400134
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	eax, dword ptr [rbp - 0x38]
0x4000ff:	mov	edi, eax
0x400101:	call	0x500040
<Block for 0x400084, 13 bytes>
0x400084:	mov	dword ptr [rbp - 0x2c], eax
0x400087:	mov	edi, 0x6987
0x40008c:	call	0x500020
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x40010f
<Block for 0x400091, 26 bytes>
0x400091:	mov	word ptr [rbp - 0x2e], ax
0x400095:	lea	rcx, [rbp - 0x30]
0x400099:	mov	eax, dword ptr [rbp - 0x38]
0x40009c:	mov	edx, 0x10
0x4000a1:	mov	rsi, rcx
0x4000a4:	mov	edi, eax
0x4000a6:	call	0x500028
<Block for 0x4000ab, 5 bytes>
0x4000ab:	cmp	eax, -1
0x4000ae:	je	0x4000f5
<Block for 0x4000b0, 24 bytes>
0x4000b0:	lea	rsi, [rbp - 0x16]
0x4000b4:	mov	eax, dword ptr [rbp - 0x38]
0x4000b7:	mov	ecx, 0
0x4000bc:	mov	edx, 0xd
0x4000c1:	mov	edi, eax
0x4000c3:	call	0x500030
<Block for 0x4000f5, 1 bytes>
0x4000f5:	nop	
<Block for 0x4000c8, 9 bytes>
0x4000c8:	mov	dword ptr [rbp - 0x34], eax
0x4000cb:	cmp	dword ptr [rbp - 0x34], -1
0x4000cf:	je	0x4000f6
<Block for 0x4000d1, 6 bytes>
0x4000d1:	cmp	dword ptr [rbp - 0x34], 0
0x4000d5:	je	0x4000f6
<Block for 0x4000d7, 22 bytes>
0x4000d7:	mov	eax, dword ptr [rbp - 0x34]
0x4000da:	cdqe	
0x4000dc:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000e1:	lea	rax, [rbp - 0x16]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500038
<Block for 0x4000ed, 5 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x3c], eax
0x4000f0:	jmp	0x4000f6
