<Block for 0x400087, 81 bytes>
0x400087:	endbr64	
0x40008b:	push	rbp
0x40008c:	mov	rbp, rsp
0x40008f:	sub	rsp, 0xf0
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	lea	rax, [rbp - 0xe0]
0x4000ac:	mov	qword ptr [rbp - 0xe8], rax
0x4000b3:	nop	
0x4000b4:	endbr64	
0x4000b8:	mov	rax, qword ptr [rbp - 0xe8]
0x4000bf:	mov	byte ptr [rax], 0
0x4000c2:	lea	rax, [rbp - 0x70]
0x4000c6:	mov	edx, 0x63
0x4000cb:	mov	esi, 0x43
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500000
<Block for 0x4000d8, 26 bytes>
0x4000d8:	mov	byte ptr [rbp - 0xd], 0
0x4000dc:	lea	rdx, [rbp - 0x70]
0x4000e0:	mov	rax, qword ptr [rbp - 0xe8]
0x4000e7:	mov	rsi, rdx
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500008
<Block for 0x4000f2, 15 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500010
<Block for 0x400101, 16 bytes>
0x400101:	nop	
0x400102:	mov	rax, qword ptr [rbp - 8]
0x400106:	xor	rax, qword ptr fs:[0x28]
0x40010f:	je	0x400116
<Block for 0x400116, 2 bytes>
0x400116:	leave	
0x400117:	ret	
<Block for 0x400111, 5 bytes>
0x400111:	call	0x500018
