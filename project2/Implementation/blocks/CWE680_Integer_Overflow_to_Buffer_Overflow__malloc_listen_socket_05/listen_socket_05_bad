<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0x308]
0x400028:	test	eax, eax
0x40002a:	je	0x400148
<Block for 0x400148, 17 bytes>
0x400148:	mov	eax, dword ptr [rbp - 0x50]
0x40014b:	cdqe	
0x40014d:	shl	rax, 2
0x400151:	mov	rdi, rax
0x400154:	call	0x500048
<Block for 0x400030, 34 bytes>
0x400030:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400037:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x40003e:	mov	edx, 6
0x400043:	mov	esi, 1
0x400048:	mov	edi, 2
0x40004d:	call	0x500000
<Block for 0x400159, 11 bytes>
0x400159:	mov	qword ptr [rbp - 0x38], rax
0x40015d:	cmp	qword ptr [rbp - 0x38], 0
0x400162:	jne	0x40016e
<Block for 0x400052, 13 bytes>
0x400052:	mov	dword ptr [rbp - 0x48], eax
0x400055:	cmp	dword ptr [rbp - 0x48], -1
0x400059:	je	0x40011e
<Block for 0x400164, 10 bytes>
0x400164:	mov	edi, 0xffffffff
0x400169:	call	0x500050
<Block for 0x40016e, 10 bytes>
0x40016e:	mov	qword ptr [rbp - 0x40], 0
0x400176:	jmp	0x400196
<Block for 0x40011e, 3 bytes>
0x40011e:	nop	
0x40011f:	jmp	0x400128
<Block for 0x40005f, 22 bytes>
0x40005f:	lea	rax, [rbp - 0x30]
0x400063:	mov	edx, 0x10
0x400068:	mov	esi, 0
0x40006d:	mov	rdi, rax
0x400070:	call	0x500008
<Block for 0x400196, 11 bytes>
0x400196:	mov	eax, dword ptr [rbp - 0x50]
0x400199:	cdqe	
0x40019b:	cmp	qword ptr [rbp - 0x40], rax
0x40019f:	jb	0x400178
<Block for 0x400128, 6 bytes>
0x400128:	cmp	dword ptr [rbp - 0x48], -1
0x40012c:	je	0x400138
<Block for 0x400075, 23 bytes>
0x400075:	mov	word ptr [rbp - 0x30], 2
0x40007b:	mov	dword ptr [rbp - 0x2c], 0
0x400082:	mov	edi, 0x6987
0x400087:	call	0x500010
<Block for 0x400178, 41 bytes>
0x400178:	mov	rax, qword ptr [rbp - 0x40]
0x40017c:	lea	rdx, [rax*4]
0x400184:	mov	rax, qword ptr [rbp - 0x38]
0x400188:	add	rax, rdx
0x40018b:	mov	dword ptr [rax], 0
0x400191:	add	qword ptr [rbp - 0x40], 1
0x400196:	mov	eax, dword ptr [rbp - 0x50]
0x400199:	cdqe	
0x40019b:	cmp	qword ptr [rbp - 0x40], rax
0x40019f:	jb	0x400178
<Block for 0x4001a1, 13 bytes>
0x4001a1:	mov	rax, qword ptr [rbp - 0x38]
0x4001a5:	mov	eax, dword ptr [rax]
0x4001a7:	mov	edi, eax
0x4001a9:	call	0x500058
<Block for 0x400138, 6 bytes>
0x400138:	cmp	dword ptr [rbp - 0x4c], -1
0x40013c:	je	0x400148
<Block for 0x40012e, 10 bytes>
0x40012e:	mov	eax, dword ptr [rbp - 0x48]
0x400131:	mov	edi, eax
0x400133:	call	0x500040
<Block for 0x40008c, 26 bytes>
0x40008c:	mov	word ptr [rbp - 0x2e], ax
0x400090:	lea	rcx, [rbp - 0x30]
0x400094:	mov	eax, dword ptr [rbp - 0x48]
0x400097:	mov	edx, 0x10
0x40009c:	mov	rsi, rcx
0x40009f:	mov	edi, eax
0x4000a1:	call	0x500018
<Block for 0x4001ae, 12 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x38]
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500060
<Block for 0x40013e, 10 bytes>
0x40013e:	mov	eax, dword ptr [rbp - 0x4c]
0x400141:	mov	edi, eax
0x400143:	call	0x500040
<Block for 0x4000a6, 5 bytes>
0x4000a6:	cmp	eax, -1
0x4000a9:	je	0x400121
<Block for 0x4001ba, 16 bytes>
0x4001ba:	nop	
0x4001bb:	mov	rax, qword ptr [rbp - 8]
0x4001bf:	xor	rax, qword ptr fs:[0x28]
0x4001c8:	je	0x4001cf
<Block for 0x400121, 3 bytes>
0x400121:	nop	
0x400122:	jmp	0x400128
<Block for 0x4000ab, 15 bytes>
0x4000ab:	mov	eax, dword ptr [rbp - 0x48]
0x4000ae:	mov	esi, 5
0x4000b3:	mov	edi, eax
0x4000b5:	call	0x500020
<Block for 0x4001cf, 2 bytes>
0x4001cf:	leave	
0x4001d0:	ret	
<Block for 0x4001ca, 5 bytes>
0x4001ca:	call	0x500068
<Block for 0x4000ba, 5 bytes>
0x4000ba:	cmp	eax, -1
0x4000bd:	je	0x400124
<Block for 0x400124, 3 bytes>
0x400124:	nop	
0x400125:	jmp	0x400128
<Block for 0x4000bf, 20 bytes>
0x4000bf:	mov	eax, dword ptr [rbp - 0x48]
0x4000c2:	mov	edx, 0
0x4000c7:	mov	esi, 0
0x4000cc:	mov	edi, eax
0x4000ce:	call	0x500028
<Block for 0x4000d3, 9 bytes>
0x4000d3:	mov	dword ptr [rbp - 0x4c], eax
0x4000d6:	cmp	dword ptr [rbp - 0x4c], -1
0x4000da:	je	0x400127
<Block for 0x4000dc, 24 bytes>
0x4000dc:	lea	rsi, [rbp - 0x16]
0x4000e0:	mov	eax, dword ptr [rbp - 0x4c]
0x4000e3:	mov	ecx, 0
0x4000e8:	mov	edx, 0xd
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500030
<Block for 0x400127, 1 bytes>
0x400127:	nop	
<Block for 0x4000f4, 9 bytes>
0x4000f4:	mov	dword ptr [rbp - 0x44], eax
0x4000f7:	cmp	dword ptr [rbp - 0x44], -1
0x4000fb:	je	0x400128
<Block for 0x4000fd, 6 bytes>
0x4000fd:	cmp	dword ptr [rbp - 0x44], 0
0x400101:	je	0x400128
<Block for 0x400103, 22 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x44]
0x400106:	cdqe	
0x400108:	mov	byte ptr [rbp + rax - 0x16], 0
0x40010d:	lea	rax, [rbp - 0x16]
0x400111:	mov	rdi, rax
0x400114:	call	0x500038
<Block for 0x400119, 5 bytes>
0x400119:	mov	dword ptr [rbp - 0x50], eax
0x40011c:	jmp	0x400128
