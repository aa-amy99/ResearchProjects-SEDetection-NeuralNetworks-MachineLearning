<Block for 0x40024f, 45 bytes>
0x40024f:	endbr64	
0x400253:	push	rbp
0x400254:	mov	rbp, rsp
0x400257:	sub	rsp, 0x40
0x40025b:	mov	rax, qword ptr fs:[0x28]
0x400264:	mov	qword ptr [rbp - 8], rax
0x400268:	xor	eax, eax
0x40026a:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400271:	mov	eax, dword ptr [rip + 0xffd89]
0x400277:	cmp	eax, 5
0x40027a:	je	0x40028a
<Block for 0x40028a, 18 bytes>
0x40028a:	mov	dword ptr [rbp - 0x34], 7
0x400291:	mov	eax, dword ptr [rip + 0xffd69]
0x400297:	cmp	eax, 5
0x40029a:	jne	0x4002e8
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rdi, [rip + 0x17c]
0x400283:	call	0x500020
<Block for 0x40029c, 46 bytes>
0x40029c:	mov	qword ptr [rbp - 0x30], 0
0x4002a4:	mov	qword ptr [rbp - 0x28], 0
0x4002ac:	mov	qword ptr [rbp - 0x20], 0
0x4002b4:	mov	qword ptr [rbp - 0x18], 0
0x4002bc:	mov	qword ptr [rbp - 0x10], 0
0x4002c4:	cmp	dword ptr [rbp - 0x34], 0
0x4002c8:	js	0x4002dc
<Block for 0x4002e8, 16 bytes>
0x4002e8:	nop	
0x4002e9:	mov	rax, qword ptr [rbp - 8]
0x4002ed:	xor	rax, qword ptr fs:[0x28]
0x4002f6:	je	0x4002fd
<Block for 0x400288, 2 bytes>
0x400288:	jmp	0x400291
<Block for 0x4002dc, 12 bytes>
0x4002dc:	lea	rdi, [rip + 0xfd]
0x4002e3:	call	0x500020
<Block for 0x4002ca, 16 bytes>
0x4002ca:	mov	eax, dword ptr [rbp - 0x34]
0x4002cd:	cdqe	
0x4002cf:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002d3:	mov	edi, eax
0x4002d5:	call	0x500018
<Block for 0x4002fd, 2 bytes>
0x4002fd:	leave	
0x4002fe:	ret	
<Block for 0x4002f8, 5 bytes>
0x4002f8:	call	0x500028
<Block for 0x400291, 11 bytes>
0x400291:	mov	eax, dword ptr [rip + 0xffd69]
0x400297:	cmp	eax, 5
0x40029a:	jne	0x4002e8
<Block for 0x4002da, 2 bytes>
0x4002da:	jmp	0x4002e8
