<Block for 0x400191, 40 bytes>
0x400191:	endbr64	
0x400195:	push	rbp
0x400196:	mov	rbp, rsp
0x400199:	push	rbx
0x40019a:	sub	rsp, 0x38
0x40019e:	mov	rax, qword ptr fs:[0x28]
0x4001a7:	mov	qword ptr [rbp - 0x18], rax
0x4001ab:	xor	eax, eax
0x4001ad:	lea	rax, [rbp - 0x30]
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x400902
<Block for 0x4001b9, 11 bytes>
0x4001b9:	mov	eax, dword ptr [rip + 0xffe41]
0x4001bf:	cmp	eax, 5
0x4001c2:	jne	0x4001f8
<Block for 0x4001c4, 26 bytes>
0x4001c4:	mov	dword ptr [rbp - 0x38], 0x64
0x4001cb:	lea	rdx, [rbp - 0x38]
0x4001cf:	lea	rax, [rbp - 0x30]
0x4001d3:	mov	rsi, rdx
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x400a08
<Block for 0x4001f8, 11 bytes>
0x4001f8:	mov	eax, dword ptr [rip + 0xffe02]
0x4001fe:	cmp	eax, 5
0x400201:	je	0x400214
<Block for 0x4001de, 26 bytes>
0x4001de:	mov	dword ptr [rbp - 0x38], 0
0x4001e5:	lea	rdx, [rbp - 0x38]
0x4001e9:	lea	rax, [rbp - 0x30]
0x4001ed:	mov	rsi, rdx
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x400a08
<Block for 0x400214, 12 bytes>
0x400214:	lea	rax, [rbp - 0x40]
0x400218:	mov	rdi, rax
0x40021b:	call	0x400a56
<Block for 0x400203, 12 bytes>
0x400203:	lea	rdi, [rip + 0x64d]
0x40020a:	call	0x500048
<Block for 0x400220, 19 bytes>
0x400220:	lea	rsi, [rip + 0x61a]
0x400227:	lea	rdi, [rip + 0xffdda]
0x40022e:	call	0x500010
<Block for 0x40020f, 5 bytes>
0x40020f:	jmp	0x4002c1
<Block for 0x400233, 12 bytes>
0x400233:	lea	rax, [rbp - 0x30]
0x400237:	mov	rdi, rax
0x40023a:	call	0x400a70
<Block for 0x4002c1, 12 bytes>
0x4002c1:	lea	rax, [rbp - 0x30]
0x4002c5:	mov	rdi, rax
0x4002c8:	call	0x400922
<Block for 0x40023f, 16 bytes>
0x40023f:	mov	qword ptr [rbp - 0x40], rax
0x400243:	lea	rax, [rbp - 0x30]
0x400247:	mov	rdi, rax
0x40024a:	call	0x400ac0
<Block for 0x4002cd, 16 bytes>
0x4002cd:	nop	
0x4002ce:	mov	rax, qword ptr [rbp - 0x18]
0x4002d2:	xor	rax, qword ptr fs:[0x28]
0x4002db:	je	0x400302
<Block for 0x40024f, 23 bytes>
0x40024f:	mov	qword ptr [rbp - 0x38], rax
0x400253:	lea	rdx, [rbp - 0x38]
0x400257:	lea	rax, [rbp - 0x40]
0x40025b:	mov	rsi, rdx
0x40025e:	mov	rdi, rax
0x400261:	call	0x400b0c
<Block for 0x400302, 7 bytes>
0x400302:	add	rsp, 0x38
0x400306:	pop	rbx
0x400307:	pop	rbp
0x400308:	ret	
<Block for 0x4002dd, 2 bytes>
0x4002dd:	jmp	0x4002fd
<Block for 0x400266, 4 bytes>
0x400266:	test	al, al
0x400268:	je	0x4002ab
<Block for 0x4002fd, 5 bytes>
0x4002fd:	call	0x500040
<Block for 0x4002ab, 22 bytes>
0x4002ab:	mov	rax, qword ptr [rip + 0xffd76]
0x4002b2:	mov	rsi, rax
0x4002b5:	lea	rdi, [rip + 0xffd4c]
0x4002bc:	call	0x500030
<Block for 0x40026a, 19 bytes>
0x40026a:	lea	rsi, [rip + 0x5e4]
0x400271:	lea	rdi, [rip + 0xffd90]
0x400278:	call	0x500010
<Block for 0x40027d, 15 bytes>
0x40027d:	mov	rbx, rax
0x400280:	lea	rax, [rbp - 0x40]
0x400284:	mov	rdi, rax
0x400287:	call	0x400b8a
<Block for 0x40028c, 12 bytes>
0x40028c:	mov	eax, dword ptr [rax]
0x40028e:	mov	esi, eax
0x400290:	mov	rdi, rbx
0x400293:	call	0x500018
<Block for 0x400298, 17 bytes>
0x400298:	lea	rax, [rbp - 0x40]
0x40029c:	mov	esi, 0
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x400b32
<Block for 0x4002a9, 2 bytes>
0x4002a9:	jmp	0x400243
<Block for 0x400243, 12 bytes>
0x400243:	lea	rax, [rbp - 0x30]
0x400247:	mov	rdi, rax
0x40024a:	call	0x400ac0
