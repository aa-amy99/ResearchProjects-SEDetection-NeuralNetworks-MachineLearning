<Block for 0x400613, 40 bytes>
0x400613:	endbr64	
0x400617:	push	rbp
0x400618:	mov	rbp, rsp
0x40061b:	push	rbx
0x40061c:	sub	rsp, 0x38
0x400620:	mov	rax, qword ptr fs:[0x28]
0x400629:	mov	qword ptr [rbp - 0x18], rax
0x40062d:	xor	eax, eax
0x40062f:	lea	rax, [rbp - 0x30]
0x400633:	mov	rdi, rax
0x400636:	call	0x400902
<Block for 0x40063b, 11 bytes>
0x40063b:	mov	eax, dword ptr [rip + 0xff9bf]
0x400641:	cmp	eax, 5
0x400644:	jne	0x40067a
<Block for 0x400646, 26 bytes>
0x400646:	mov	dword ptr [rbp - 0x38], 0x64
0x40064d:	lea	rdx, [rbp - 0x38]
0x400651:	lea	rax, [rbp - 0x30]
0x400655:	mov	rsi, rdx
0x400658:	mov	rdi, rax
0x40065b:	call	0x400a08
<Block for 0x40067a, 15 bytes>
0x40067a:	mov	eax, dword ptr [rip + 0xff980]
0x400680:	cmp	eax, 5
0x400683:	jne	0x40075c
<Block for 0x400660, 26 bytes>
0x400660:	mov	dword ptr [rbp - 0x38], 0xc8
0x400667:	lea	rdx, [rbp - 0x38]
0x40066b:	lea	rax, [rbp - 0x30]
0x40066f:	mov	rsi, rdx
0x400672:	mov	rdi, rax
0x400675:	call	0x400a08
<Block for 0x400689, 12 bytes>
0x400689:	lea	rax, [rbp - 0x40]
0x40068d:	mov	rdi, rax
0x400690:	call	0x400a56
<Block for 0x40075c, 12 bytes>
0x40075c:	lea	rax, [rbp - 0x30]
0x400760:	mov	rdi, rax
0x400763:	call	0x400922
<Block for 0x400695, 19 bytes>
0x400695:	lea	rsi, [rip + 0x1a5]
0x40069c:	lea	rdi, [rip + 0xff965]
0x4006a3:	call	0x500010
<Block for 0x400768, 16 bytes>
0x400768:	nop	
0x400769:	mov	rax, qword ptr [rbp - 0x18]
0x40076d:	xor	rax, qword ptr fs:[0x28]
0x400776:	je	0x40079d
<Block for 0x4006a8, 12 bytes>
0x4006a8:	lea	rax, [rbp - 0x30]
0x4006ac:	mov	rdi, rax
0x4006af:	call	0x400a70
<Block for 0x40079d, 7 bytes>
0x40079d:	add	rsp, 0x38
0x4007a1:	pop	rbx
0x4007a2:	pop	rbp
0x4007a3:	ret	
<Block for 0x400778, 2 bytes>
0x400778:	jmp	0x400798
<Block for 0x4006b4, 16 bytes>
0x4006b4:	mov	qword ptr [rbp - 0x40], rax
0x4006b8:	lea	rax, [rbp - 0x30]
0x4006bc:	mov	rdi, rax
0x4006bf:	call	0x400ac0
<Block for 0x400798, 5 bytes>
0x400798:	call	0x500040
<Block for 0x4006c4, 23 bytes>
0x4006c4:	mov	qword ptr [rbp - 0x38], rax
0x4006c8:	lea	rdx, [rbp - 0x38]
0x4006cc:	lea	rax, [rbp - 0x40]
0x4006d0:	mov	rsi, rdx
0x4006d3:	mov	rdi, rax
0x4006d6:	call	0x400b0c
<Block for 0x4006db, 4 bytes>
0x4006db:	test	al, al
0x4006dd:	je	0x400746
<Block for 0x400746, 22 bytes>
0x400746:	mov	rax, qword ptr [rip + 0xff8db]
0x40074d:	mov	rsi, rax
0x400750:	lea	rdi, [rip + 0xff8b1]
0x400757:	call	0x500030
<Block for 0x4006df, 12 bytes>
0x4006df:	lea	rax, [rbp - 0x40]
0x4006e3:	mov	rdi, rax
0x4006e6:	call	0x400b8a
<Block for 0x4006eb, 11 bytes>
0x4006eb:	mov	eax, dword ptr [rax]
0x4006ed:	test	eax, eax
0x4006ef:	sete	al
0x4006f2:	test	al, al
0x4006f4:	je	0x400702
<Block for 0x400702, 19 bytes>
0x400702:	lea	rsi, [rip + 0x14c]
0x400709:	lea	rdi, [rip + 0xff8f8]
0x400710:	call	0x500010
<Block for 0x4006f6, 12 bytes>
0x4006f6:	lea	rax, [rbp - 0x30]
0x4006fa:	mov	rdi, rax
0x4006fd:	call	0x400bac
<Block for 0x400715, 15 bytes>
0x400715:	mov	rbx, rax
0x400718:	lea	rax, [rbp - 0x40]
0x40071c:	mov	rdi, rax
0x40071f:	call	0x400b8a
<Block for 0x400724, 12 bytes>
0x400724:	mov	eax, dword ptr [rax]
0x400726:	mov	esi, eax
0x400728:	mov	rdi, rbx
0x40072b:	call	0x500018
<Block for 0x400730, 17 bytes>
0x400730:	lea	rax, [rbp - 0x40]
0x400734:	mov	esi, 0
0x400739:	mov	rdi, rax
0x40073c:	call	0x400b32
<Block for 0x400741, 5 bytes>
0x400741:	jmp	0x4006b8
<Block for 0x4006b8, 12 bytes>
0x4006b8:	lea	rax, [rbp - 0x30]
0x4006bc:	mov	rdi, rax
0x4006bf:	call	0x400ac0
