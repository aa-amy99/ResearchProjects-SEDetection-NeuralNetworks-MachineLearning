<Block for 0x400089, 49 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	add	rsp, -0x80
0x400095:	mov	rax, qword ptr fs:[0x28]
0x40009e:	mov	qword ptr [rbp - 8], rax
0x4000a2:	xor	eax, eax
0x4000a4:	lea	rax, [rbp - 0x70]
0x4000a8:	mov	edx, 0x63
0x4000ad:	mov	esi, 0x41
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500000
<Block for 0x4000ba, 37 bytes>
0x4000ba:	mov	byte ptr [rbp - 0xd], 0
0x4000be:	lea	rax, [rbp - 0x70]
0x4000c2:	sub	rax, 8
0x4000c6:	mov	qword ptr [rbp - 0x78], rax
0x4000ca:	mov	rax, qword ptr [rbp - 0x78]
0x4000ce:	mov	qword ptr [rip + 0x12b], rax
0x4000d5:	mov	eax, 0
0x4000da:	call	0x400000
<Block for 0x4000df, 16 bytes>
0x4000df:	nop	
0x4000e0:	mov	rax, qword ptr [rbp - 8]
0x4000e4:	xor	rax, qword ptr fs:[0x28]
0x4000ed:	je	0x4000f4
<Block for 0x4000f4, 2 bytes>
0x4000f4:	leave	
0x4000f5:	ret	
<Block for 0x4000ef, 5 bytes>
0x4000ef:	call	0x500020
