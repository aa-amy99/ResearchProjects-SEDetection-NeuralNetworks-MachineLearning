<Block for 0x400000, 76 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x10], rax
0x400026:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40002d:	mov	rax, qword ptr [rip + 0xfffdc]
0x400034:	lea	rdx, [rbp - 0x14]
0x400038:	lea	rsi, [rip + 0xef]
0x40003f:	mov	rdi, rax
0x400042:	mov	eax, 0
0x400047:	call	0x500018
<Block for 0x40004c, 11 bytes>
0x40004c:	mov	eax, dword ptr [rbp - 0x14]
0x40004f:	mov	rdx, qword ptr [rbp - 0x10]
0x400053:	mov	edi, eax
0x400055:	call	rdx
<Block for 0x400057, 16 bytes>
0x400057:	nop	
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	xor	rax, qword ptr fs:[0x28]
0x400065:	je	0x40006c
<Block for 0x40006c, 2 bytes>
0x40006c:	leave	
0x40006d:	ret	
<Block for 0x400067, 5 bytes>
0x400067:	call	0x500020
