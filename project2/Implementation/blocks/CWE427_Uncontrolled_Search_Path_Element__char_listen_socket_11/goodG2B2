<Block for 0x400388, 82 bytes>
0x400388:	endbr64	
0x40038c:	push	rbp
0x40038d:	mov	rbp, rsp
0x400390:	sub	rsp, 0x120
0x400397:	mov	rax, qword ptr fs:[0x28]
0x4003a0:	mov	qword ptr [rbp - 8], rax
0x4003a4:	xor	eax, eax
0x4003a6:	movabs	rax, 0x3d48544150
0x4003b0:	mov	edx, 0
0x4003b5:	mov	qword ptr [rbp - 0x110], rax
0x4003bc:	mov	qword ptr [rbp - 0x108], rdx
0x4003c3:	lea	rdx, [rbp - 0x100]
0x4003ca:	mov	eax, 0
0x4003cf:	mov	ecx, 0x1d
0x4003d4:	mov	rdi, rdx
0x4003d7:	rep stosq	qword ptr [rdi], rax
<Block for 0x4003da, 34 bytes>
0x4003da:	mov	rdx, rdi
0x4003dd:	mov	word ptr [rdx], ax
0x4003e0:	add	rdx, 2
0x4003e4:	lea	rax, [rbp - 0x110]
0x4003eb:	mov	qword ptr [rbp - 0x118], rax
0x4003f2:	mov	eax, 0
0x4003f7:	call	0x500000
<Block for 0x4003d7, 3 bytes>
0x4003d7:	rep stosq	qword ptr [rdi], rax
<Block for 0x4003fc, 4 bytes>
0x4003fc:	test	eax, eax
0x4003fe:	je	0x400439
<Block for 0x400439, 15 bytes>
0x400439:	mov	rax, qword ptr [rbp - 0x118]
0x400440:	mov	rdi, rax
0x400443:	call	0x500058
<Block for 0x400400, 27 bytes>
0x400400:	mov	rax, qword ptr [rbp - 0x118]
0x400407:	mov	rcx, -1
0x40040e:	mov	rdx, rax
0x400411:	mov	eax, 0
0x400416:	mov	rdi, rdx
0x400419:	repne scasb	al, byte ptr [rdi]
<Block for 0x400448, 16 bytes>
0x400448:	nop	
0x400449:	mov	rax, qword ptr [rbp - 8]
0x40044d:	xor	rax, qword ptr fs:[0x28]
0x400456:	je	0x40045d
<Block for 0x40041b, 45 bytes>
0x40041b:	mov	rax, rcx
0x40041e:	not	rax
0x400421:	lea	rdx, [rax - 1]
0x400425:	mov	rax, qword ptr [rbp - 0x118]
0x40042c:	add	rax, rdx
0x40042f:	mov	dword ptr [rax], 0x6e69622f
0x400435:	mov	byte ptr [rax + 4], 0
0x400439:	mov	rax, qword ptr [rbp - 0x118]
0x400440:	mov	rdi, rax
0x400443:	call	0x500058
<Block for 0x400419, 2 bytes>
0x400419:	repne scasb	al, byte ptr [rdi]
<Block for 0x40045d, 2 bytes>
0x40045d:	leave	
0x40045e:	ret	
<Block for 0x400458, 5 bytes>
0x400458:	call	0x500060
