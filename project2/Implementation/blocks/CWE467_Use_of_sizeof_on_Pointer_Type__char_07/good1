<Block for 0x400065, 23 bytes>
0x400065:	endbr64	
0x400069:	push	rbp
0x40006a:	mov	rbp, rsp
0x40006d:	sub	rsp, 0x10
0x400071:	mov	eax, dword ptr [rip + 0xe5]
0x400077:	cmp	eax, 5
0x40007a:	je	0x40008a
<Block for 0x40008a, 18 bytes>
0x40008a:	mov	qword ptr [rbp - 8], 0
0x400092:	mov	edi, 1
0x400097:	call	0x500000
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rdi, [rip + 0xdd]
0x400083:	call	0x500020
<Block for 0x40009c, 11 bytes>
0x40009c:	mov	qword ptr [rbp - 8], rax
0x4000a0:	cmp	qword ptr [rbp - 8], 0
0x4000a5:	jne	0x4000b1
<Block for 0x400088, 2 bytes>
0x400088:	jmp	0x4000d5
<Block for 0x4000a7, 10 bytes>
0x4000a7:	mov	edi, 0xffffffff
0x4000ac:	call	0x500008
<Block for 0x4000b1, 24 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	byte ptr [rax], 0x47
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	movzx	eax, byte ptr [rax]
0x4000bf:	movsx	eax, al
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500010
<Block for 0x4000d5, 3 bytes>
0x4000d5:	nop	
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000c9, 12 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 8]
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500018
