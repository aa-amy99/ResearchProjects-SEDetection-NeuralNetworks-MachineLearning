<Block for 0x400000, 102 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400052:	mov	edx, 6
0x400057:	mov	esi, 1
0x40005c:	mov	edi, 2
0x400061:	call	0x500000
<Block for 0x400066, 9 bytes>
0x400066:	mov	dword ptr [rbp - 0x48], eax
0x400069:	cmp	dword ptr [rbp - 0x48], -1
0x40006d:	je	0x4000e0
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	jmp	0x4000e4
<Block for 0x40006f, 22 bytes>
0x40006f:	lea	rax, [rbp - 0x20]
0x400073:	mov	edx, 0x10
0x400078:	mov	esi, 0
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x4000e4, 6 bytes>
0x4000e4:	cmp	dword ptr [rbp - 0x48], -1
0x4000e8:	je	0x4000f4
<Block for 0x400085, 18 bytes>
0x400085:	mov	word ptr [rbp - 0x20], 2
0x40008b:	lea	rdi, [rip + 0x21e]
0x400092:	call	0x500010
<Block for 0x4000f4, 73 bytes>
0x4000f4:	mov	rax, qword ptr [rbp - 0x38]
0x4000f8:	mov	qword ptr [rip + 0x1a1], rax
0x4000ff:	mov	rax, qword ptr [rbp - 0x40]
0x400103:	mov	qword ptr [rip + 0x19e], rax
0x40010a:	mov	rax, qword ptr [rip + 0x18f]
0x400111:	mov	rdx, qword ptr [rip + 0x190]
0x400118:	mov	qword ptr [rax], rdx
0x40011b:	mov	rax, qword ptr [rip + 0x186]
0x400122:	mov	rdx, qword ptr [rip + 0x177]
0x400129:	mov	qword ptr [rax + 8], rdx
0x40012d:	nop	
0x40012e:	mov	rax, qword ptr [rbp - 8]
0x400132:	xor	rax, qword ptr fs:[0x28]
0x40013b:	je	0x400142
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	eax, dword ptr [rbp - 0x48]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500030
<Block for 0x400097, 13 bytes>
0x400097:	mov	dword ptr [rbp - 0x1c], eax
0x40009a:	mov	edi, 0x6987
0x40009f:	call	0x500018
<Block for 0x400142, 2 bytes>
0x400142:	leave	
0x400143:	ret	
<Block for 0x40013d, 5 bytes>
0x40013d:	call	0x500038
<Block for 0x4000a4, 26 bytes>
0x4000a4:	mov	word ptr [rbp - 0x1e], ax
0x4000a8:	lea	rcx, [rbp - 0x20]
0x4000ac:	mov	eax, dword ptr [rbp - 0x48]
0x4000af:	mov	edx, 0x10
0x4000b4:	mov	rsi, rcx
0x4000b7:	mov	edi, eax
0x4000b9:	call	0x500020
<Block for 0x4000be, 5 bytes>
0x4000be:	cmp	eax, -1
0x4000c1:	je	0x4000e3
<Block for 0x4000c3, 24 bytes>
0x4000c3:	lea	rsi, [rbp - 0x40]
0x4000c7:	mov	eax, dword ptr [rbp - 0x48]
0x4000ca:	mov	ecx, 0
0x4000cf:	mov	edx, 0x10
0x4000d4:	mov	edi, eax
0x4000d6:	call	0x500028
<Block for 0x4000e3, 1 bytes>
0x4000e3:	nop	
<Block for 0x4000db, 5 bytes>
0x4000db:	mov	dword ptr [rbp - 0x44], eax
0x4000de:	jmp	0x4000e4
