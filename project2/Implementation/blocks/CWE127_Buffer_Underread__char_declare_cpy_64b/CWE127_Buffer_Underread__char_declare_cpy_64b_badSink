<Block for 0x400000, 93 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	qword ptr [rbp - 0xe8], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0xe8]
0x40002c:	mov	qword ptr [rbp - 0xe0], rax
0x400033:	mov	rax, qword ptr [rbp - 0xe0]
0x40003a:	mov	rax, qword ptr [rax]
0x40003d:	mov	qword ptr [rbp - 0xd8], rax
0x400044:	lea	rax, [rbp - 0xd0]
0x40004b:	mov	edx, 0xc7
0x400050:	mov	esi, 0x43
0x400055:	mov	rdi, rax
0x400058:	call	0x500000
<Block for 0x40005d, 29 bytes>
0x40005d:	mov	byte ptr [rbp - 9], 0
0x400061:	mov	rdx, qword ptr [rbp - 0xd8]
0x400068:	lea	rax, [rbp - 0xd0]
0x40006f:	mov	rsi, rdx
0x400072:	mov	rdi, rax
0x400075:	call	0x500008
<Block for 0x40007a, 15 bytes>
0x40007a:	lea	rax, [rbp - 0xd0]
0x400081:	mov	rdi, rax
0x400084:	call	0x500010
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x40009e, 2 bytes>
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500018
