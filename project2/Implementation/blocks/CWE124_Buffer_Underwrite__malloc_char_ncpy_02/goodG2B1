<Block for 0x4000cf, 45 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	add	rsp, -0x80
0x4000db:	mov	rax, qword ptr fs:[0x28]
0x4000e4:	mov	qword ptr [rbp - 8], rax
0x4000e8:	xor	eax, eax
0x4000ea:	mov	qword ptr [rbp - 0x80], 0
0x4000f2:	mov	edi, 0x64
0x4000f7:	call	0x500000
<Block for 0x4000fc, 11 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x78], rax
0x400100:	cmp	qword ptr [rbp - 0x78], 0
0x400105:	jne	0x400111
<Block for 0x400107, 10 bytes>
0x400107:	mov	edi, 0xffffffff
0x40010c:	call	0x500008
<Block for 0x400111, 22 bytes>
0x400111:	mov	rax, qword ptr [rbp - 0x78]
0x400115:	mov	edx, 0x63
0x40011a:	mov	esi, 0x41
0x40011f:	mov	rdi, rax
0x400122:	call	0x500010
<Block for 0x400127, 41 bytes>
0x400127:	mov	rax, qword ptr [rbp - 0x78]
0x40012b:	add	rax, 0x63
0x40012f:	mov	byte ptr [rax], 0
0x400132:	mov	rax, qword ptr [rbp - 0x78]
0x400136:	mov	qword ptr [rbp - 0x80], rax
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x43
0x400148:	mov	rdi, rax
0x40014b:	call	0x500010
<Block for 0x400150, 28 bytes>
0x400150:	mov	byte ptr [rbp - 0xd], 0
0x400154:	lea	rcx, [rbp - 0x70]
0x400158:	mov	rax, qword ptr [rbp - 0x80]
0x40015c:	mov	edx, 0x63
0x400161:	mov	rsi, rcx
0x400164:	mov	rdi, rax
0x400167:	call	0x500018
<Block for 0x40016c, 23 bytes>
0x40016c:	mov	rax, qword ptr [rbp - 0x80]
0x400170:	add	rax, 0x63
0x400174:	mov	byte ptr [rax], 0
0x400177:	mov	rax, qword ptr [rbp - 0x80]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500020
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500028
