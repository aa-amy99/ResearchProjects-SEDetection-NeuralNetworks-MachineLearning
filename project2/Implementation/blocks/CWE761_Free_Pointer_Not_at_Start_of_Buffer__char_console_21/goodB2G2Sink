<Block for 0x4002c0, 26 bytes>
0x4002c0:	endbr64	
0x4002c4:	push	rbp
0x4002c5:	mov	rbp, rsp
0x4002c8:	sub	rsp, 0x20
0x4002cc:	mov	qword ptr [rbp - 0x18], rdi
0x4002d0:	mov	eax, dword ptr [rip + 0x176]
0x4002d6:	test	eax, eax
0x4002d8:	je	0x400327
<Block for 0x400327, 3 bytes>
0x400327:	nop	
0x400328:	leave	
0x400329:	ret	
<Block for 0x4002da, 10 bytes>
0x4002da:	mov	qword ptr [rbp - 8], 0
0x4002e2:	jmp	0x400309
<Block for 0x400309, 12 bytes>
0x400309:	mov	rax, qword ptr [rbp - 0x18]
0x40030d:	mov	rdi, rax
0x400310:	call	0x500020
<Block for 0x400315, 6 bytes>
0x400315:	cmp	qword ptr [rbp - 8], rax
0x400319:	jb	0x4002e4
<Block for 0x4002e4, 18 bytes>
0x4002e4:	mov	rdx, qword ptr [rbp - 0x18]
0x4002e8:	mov	rax, qword ptr [rbp - 8]
0x4002ec:	add	rax, rdx
0x4002ef:	movzx	eax, byte ptr [rax]
0x4002f2:	cmp	al, 0x53
0x4002f4:	jne	0x400304
<Block for 0x40031b, 12 bytes>
0x40031b:	mov	rax, qword ptr [rbp - 0x18]
0x40031f:	mov	rdi, rax
0x400322:	call	0x500008
<Block for 0x4002f6, 12 bytes>
0x4002f6:	lea	rdi, [rip + 0x153]
0x4002fd:	call	0x500000
<Block for 0x400304, 17 bytes>
0x400304:	add	qword ptr [rbp - 8], 1
0x400309:	mov	rax, qword ptr [rbp - 0x18]
0x40030d:	mov	rdi, rax
0x400310:	call	0x500020
<Block for 0x400302, 2 bytes>
0x400302:	jmp	0x40031b
