<Block for 0x4000d0, 61 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x10
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x4000f2:	mov	edx, 0x180
0x4000f7:	mov	esi, 0x42
0x4000fc:	lea	rdi, [rip + 0x59]
0x400103:	mov	eax, 0
0x400108:	call	0x500000
<Block for 0x40010d, 13 bytes>
0x40010d:	mov	dword ptr [rbp - 0xc], eax
0x400110:	mov	eax, dword ptr [rbp - 0xc]
0x400113:	mov	edi, eax
0x400115:	call	0x500008
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rax, [rbp - 0xc]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500028
<Block for 0x400126, 16 bytes>
0x400126:	nop	
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	xor	rax, qword ptr fs:[0x28]
0x400134:	je	0x40013b
<Block for 0x40013b, 2 bytes>
0x40013b:	leave	
0x40013c:	ret	
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500018
