<Block for 0x400202, 40 bytes>
0x400202:	endbr64	
0x400206:	push	rbp
0x400207:	mov	rbp, rsp
0x40020a:	sub	rsp, 0x40
0x40020e:	mov	dword ptr [rbp - 0x34], edi
0x400211:	mov	rax, qword ptr fs:[0x28]
0x40021a:	mov	qword ptr [rbp - 8], rax
0x40021e:	xor	eax, eax
0x400220:	mov	eax, dword ptr [rip + 0x1c6]
0x400226:	test	eax, eax
0x400228:	je	0x40027c
<Block for 0x40027c, 16 bytes>
0x40027c:	nop	
0x40027d:	mov	rax, qword ptr [rbp - 8]
0x400281:	xor	rax, qword ptr fs:[0x28]
0x40028a:	je	0x400291
<Block for 0x40022a, 46 bytes>
0x40022a:	mov	qword ptr [rbp - 0x30], 0
0x400232:	mov	qword ptr [rbp - 0x28], 0
0x40023a:	mov	qword ptr [rbp - 0x20], 0
0x400242:	mov	qword ptr [rbp - 0x18], 0
0x40024a:	mov	qword ptr [rbp - 0x10], 0
0x400252:	cmp	dword ptr [rbp - 0x34], 0
0x400256:	js	0x400270
<Block for 0x400291, 2 bytes>
0x400291:	leave	
0x400292:	ret	
<Block for 0x40028c, 5 bytes>
0x40028c:	call	0x500010
<Block for 0x400270, 12 bytes>
0x400270:	lea	rdi, [rip + 0x1b9]
0x400277:	call	0x500008
<Block for 0x400258, 6 bytes>
0x400258:	cmp	dword ptr [rbp - 0x34], 9
0x40025c:	jg	0x400270
<Block for 0x40025e, 16 bytes>
0x40025e:	mov	eax, dword ptr [rbp - 0x34]
0x400261:	cdqe	
0x400263:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400267:	mov	edi, eax
0x400269:	call	0x500000
<Block for 0x40026e, 2 bytes>
0x40026e:	jmp	0x40027c
