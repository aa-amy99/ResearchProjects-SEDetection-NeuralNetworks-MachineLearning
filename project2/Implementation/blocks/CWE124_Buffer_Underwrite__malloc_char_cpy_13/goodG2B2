<Block for 0x40019e, 46 bytes>
0x40019e:	endbr64	
0x4001a2:	push	rbp
0x4001a3:	mov	rbp, rsp
0x4001a6:	add	rsp, -0x80
0x4001aa:	mov	rax, qword ptr fs:[0x28]
0x4001b3:	mov	qword ptr [rbp - 8], rax
0x4001b7:	xor	eax, eax
0x4001b9:	mov	qword ptr [rbp - 0x80], 0
0x4001c1:	mov	eax, dword ptr [rip + 0xffe39]
0x4001c7:	cmp	eax, 5
0x4001ca:	jne	0x400214
<Block for 0x4001cc, 10 bytes>
0x4001cc:	mov	edi, 0x64
0x4001d1:	call	0x500008
<Block for 0x400214, 22 bytes>
0x400214:	lea	rax, [rbp - 0x70]
0x400218:	mov	edx, 0x63
0x40021d:	mov	esi, 0x43
0x400222:	mov	rdi, rax
0x400225:	call	0x500018
<Block for 0x4001d6, 11 bytes>
0x4001d6:	mov	qword ptr [rbp - 0x78], rax
0x4001da:	cmp	qword ptr [rbp - 0x78], 0
0x4001df:	jne	0x4001eb
<Block for 0x40022a, 23 bytes>
0x40022a:	mov	byte ptr [rbp - 0xd], 0
0x40022e:	lea	rdx, [rbp - 0x70]
0x400232:	mov	rax, qword ptr [rbp - 0x80]
0x400236:	mov	rsi, rdx
0x400239:	mov	rdi, rax
0x40023c:	call	0x500020
<Block for 0x4001e1, 10 bytes>
0x4001e1:	mov	edi, 0xffffffff
0x4001e6:	call	0x500010
<Block for 0x4001eb, 22 bytes>
0x4001eb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ef:	mov	edx, 0x63
0x4001f4:	mov	esi, 0x41
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500018
<Block for 0x400241, 12 bytes>
0x400241:	mov	rax, qword ptr [rbp - 0x80]
0x400245:	mov	rdi, rax
0x400248:	call	0x500028
<Block for 0x400201, 41 bytes>
0x400201:	mov	rax, qword ptr [rbp - 0x78]
0x400205:	add	rax, 0x63
0x400209:	mov	byte ptr [rax], 0
0x40020c:	mov	rax, qword ptr [rbp - 0x78]
0x400210:	mov	qword ptr [rbp - 0x80], rax
0x400214:	lea	rax, [rbp - 0x70]
0x400218:	mov	edx, 0x63
0x40021d:	mov	esi, 0x43
0x400222:	mov	rdi, rax
0x400225:	call	0x500018
<Block for 0x40024d, 16 bytes>
0x40024d:	nop	
0x40024e:	mov	rax, qword ptr [rbp - 8]
0x400252:	xor	rax, qword ptr fs:[0x28]
0x40025b:	je	0x400262
<Block for 0x400262, 2 bytes>
0x400262:	leave	
0x400263:	ret	
<Block for 0x40025d, 5 bytes>
0x40025d:	call	0x500030
