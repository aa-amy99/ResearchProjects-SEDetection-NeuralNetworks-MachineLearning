<Block for 0x40009d, 55 bytes>
0x40009d:	endbr64	
0x4000a1:	push	rbp
0x4000a2:	mov	rbp, rsp
0x4000a5:	sub	rsp, 0x120
0x4000ac:	mov	rax, qword ptr fs:[0x28]
0x4000b5:	mov	qword ptr [rbp - 8], rax
0x4000b9:	xor	eax, eax
0x4000bb:	lea	rax, [rbp - 0xa0]
0x4000c2:	mov	edx, 0x95
0x4000c7:	mov	esi, 0x41
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500000
<Block for 0x4000d4, 16 bytes>
0x4000d4:	mov	byte ptr [rbp - 0xb], 0
0x4000d8:	mov	dword ptr [rbp - 0x114], 0
0x4000e2:	jmp	0x40010a
<Block for 0x40010a, 9 bytes>
0x40010a:	cmp	dword ptr [rbp - 0x114], 0x62
0x400111:	jle	0x4000e4
<Block for 0x4000e4, 47 bytes>
0x4000e4:	mov	eax, dword ptr [rbp - 0x114]
0x4000ea:	cdqe	
0x4000ec:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x4000f4:	mov	eax, dword ptr [rbp - 0x114]
0x4000fa:	cdqe	
0x4000fc:	mov	byte ptr [rbp + rax - 0x110], dl
0x400103:	add	dword ptr [rbp - 0x114], 1
0x40010a:	cmp	dword ptr [rbp - 0x114], 0x62
0x400111:	jle	0x4000e4
<Block for 0x400113, 22 bytes>
0x400113:	mov	byte ptr [rbp - 0xad], 0
0x40011a:	lea	rax, [rbp - 0x110]
0x400121:	mov	rdi, rax
0x400124:	call	0x500008
<Block for 0x400129, 17 bytes>
0x400129:	nop	
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500010
