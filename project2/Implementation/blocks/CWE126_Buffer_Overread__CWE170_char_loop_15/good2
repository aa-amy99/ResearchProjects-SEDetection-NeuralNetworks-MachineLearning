<Block for 0x400141, 55 bytes>
0x400141:	endbr64	
0x400145:	push	rbp
0x400146:	mov	rbp, rsp
0x400149:	sub	rsp, 0x120
0x400150:	mov	rax, qword ptr fs:[0x28]
0x400159:	mov	qword ptr [rbp - 8], rax
0x40015d:	xor	eax, eax
0x40015f:	lea	rax, [rbp - 0xa0]
0x400166:	mov	edx, 0x95
0x40016b:	mov	esi, 0x41
0x400170:	mov	rdi, rax
0x400173:	call	0x500000
<Block for 0x400178, 16 bytes>
0x400178:	mov	byte ptr [rbp - 0xb], 0
0x40017c:	mov	dword ptr [rbp - 0x114], 0
0x400186:	jmp	0x4001ae
<Block for 0x4001ae, 9 bytes>
0x4001ae:	cmp	dword ptr [rbp - 0x114], 0x62
0x4001b5:	jle	0x400188
<Block for 0x400188, 47 bytes>
0x400188:	mov	eax, dword ptr [rbp - 0x114]
0x40018e:	cdqe	
0x400190:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400198:	mov	eax, dword ptr [rbp - 0x114]
0x40019e:	cdqe	
0x4001a0:	mov	byte ptr [rbp + rax - 0x110], dl
0x4001a7:	add	dword ptr [rbp - 0x114], 1
0x4001ae:	cmp	dword ptr [rbp - 0x114], 0x62
0x4001b5:	jle	0x400188
<Block for 0x4001b7, 22 bytes>
0x4001b7:	mov	byte ptr [rbp - 0xad], 0
0x4001be:	lea	rax, [rbp - 0x110]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500008
<Block for 0x4001cd, 17 bytes>
0x4001cd:	nop	
0x4001ce:	nop	
0x4001cf:	mov	rax, qword ptr [rbp - 8]
0x4001d3:	xor	rax, qword ptr fs:[0x28]
0x4001dc:	je	0x4001e3
<Block for 0x4001e3, 2 bytes>
0x4001e3:	leave	
0x4001e4:	ret	
<Block for 0x4001de, 5 bytes>
0x4001de:	call	0x500010
