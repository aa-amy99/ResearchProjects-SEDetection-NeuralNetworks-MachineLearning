<Block for 0x400082, 22 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	eax, 0
0x400093:	call	0x40000f
<Block for 0x400098, 4 bytes>
0x400098:	test	eax, eax
0x40009a:	je	0x4000ad
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 8
0x4000b2:	call	0x500000
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rdi, [rip + 0x155]
0x4000a3:	call	0x500020
<Block for 0x4000b7, 11 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x18], rax
0x4000bb:	cmp	qword ptr [rbp - 0x18], 0
0x4000c0:	jne	0x4000cc
<Block for 0x4000a8, 5 bytes>
0x4000a8:	jmp	0x40012e
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500008
<Block for 0x4000cc, 10 bytes>
0x4000cc:	mov	edi, 8
0x4000d1:	call	0x500000
<Block for 0x40012e, 3 bytes>
0x40012e:	nop	
0x40012f:	leave	
0x400130:	ret	
<Block for 0x4000d6, 11 bytes>
0x4000d6:	mov	qword ptr [rbp - 0x10], rax
0x4000da:	cmp	qword ptr [rbp - 0x10], 0
0x4000df:	jne	0x4000eb
<Block for 0x4000e1, 10 bytes>
0x4000e1:	mov	edi, 0xffffffff
0x4000e6:	call	0x500008
<Block for 0x4000eb, 55 bytes>
0x4000eb:	mov	rax, qword ptr [rbp - 0x10]
0x4000ef:	movsd	xmm0, qword ptr [rip + 0x119]
0x4000f7:	movsd	qword ptr [rax], xmm0
0x4000fb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ff:	mov	rdx, qword ptr [rbp - 0x10]
0x400103:	mov	qword ptr [rax], rdx
0x400106:	mov	rax, qword ptr [rbp - 0x18]
0x40010a:	mov	rax, qword ptr [rax]
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	mov	rax, qword ptr [rbp - 8]
0x400115:	mov	rax, qword ptr [rax]
0x400118:	movq	xmm0, rax
0x40011d:	call	0x500018
<Block for 0x400122, 12 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x18]
0x400126:	mov	rdi, rax
0x400129:	call	0x500010
