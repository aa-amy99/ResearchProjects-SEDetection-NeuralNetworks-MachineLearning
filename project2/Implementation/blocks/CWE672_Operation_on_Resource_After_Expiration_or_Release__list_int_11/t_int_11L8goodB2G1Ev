<Block for 0x400197, 40 bytes>
0x400197:	endbr64	
0x40019b:	push	rbp
0x40019c:	mov	rbp, rsp
0x40019f:	push	rbx
0x4001a0:	sub	rsp, 0x38
0x4001a4:	mov	rax, qword ptr fs:[0x28]
0x4001ad:	mov	qword ptr [rbp - 0x18], rax
0x4001b1:	xor	eax, eax
0x4001b3:	lea	rax, [rbp - 0x30]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x400920
<Block for 0x4001bf, 5 bytes>
0x4001bf:	call	0x500000
<Block for 0x4001c4, 9 bytes>
0x4001c4:	test	eax, eax
0x4001c6:	setne	al
0x4001c9:	test	al, al
0x4001cb:	je	0x400201
<Block for 0x400201, 5 bytes>
0x400201:	call	0x500048
<Block for 0x4001cd, 26 bytes>
0x4001cd:	mov	dword ptr [rbp - 0x38], 0x64
0x4001d4:	lea	rdx, [rbp - 0x38]
0x4001d8:	lea	rax, [rbp - 0x30]
0x4001dc:	mov	rsi, rdx
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x400a26
<Block for 0x400206, 9 bytes>
0x400206:	test	eax, eax
0x400208:	setne	al
0x40020b:	test	al, al
0x40020d:	je	0x400220
<Block for 0x4001e7, 26 bytes>
0x4001e7:	mov	dword ptr [rbp - 0x38], 0
0x4001ee:	lea	rdx, [rbp - 0x38]
0x4001f2:	lea	rax, [rbp - 0x30]
0x4001f6:	mov	rsi, rdx
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x400a26
<Block for 0x400220, 12 bytes>
0x400220:	lea	rax, [rbp - 0x40]
0x400224:	mov	rdi, rax
0x400227:	call	0x400a74
<Block for 0x40020f, 12 bytes>
0x40020f:	lea	rdi, [rip + 0x65f]
0x400216:	call	0x500050
<Block for 0x40022c, 19 bytes>
0x40022c:	lea	rsi, [rip + 0x62c]
0x400233:	lea	rdi, [rip + 0xffdce]
0x40023a:	call	0x500010
<Block for 0x40021b, 5 bytes>
0x40021b:	jmp	0x4002cd
<Block for 0x40023f, 12 bytes>
0x40023f:	lea	rax, [rbp - 0x30]
0x400243:	mov	rdi, rax
0x400246:	call	0x400a8e
<Block for 0x4002cd, 12 bytes>
0x4002cd:	lea	rax, [rbp - 0x30]
0x4002d1:	mov	rdi, rax
0x4002d4:	call	0x400940
<Block for 0x40024b, 16 bytes>
0x40024b:	mov	qword ptr [rbp - 0x40], rax
0x40024f:	lea	rax, [rbp - 0x30]
0x400253:	mov	rdi, rax
0x400256:	call	0x400ade
<Block for 0x4002d9, 16 bytes>
0x4002d9:	nop	
0x4002da:	mov	rax, qword ptr [rbp - 0x18]
0x4002de:	xor	rax, qword ptr fs:[0x28]
0x4002e7:	je	0x40030e
<Block for 0x40025b, 23 bytes>
0x40025b:	mov	qword ptr [rbp - 0x38], rax
0x40025f:	lea	rdx, [rbp - 0x38]
0x400263:	lea	rax, [rbp - 0x40]
0x400267:	mov	rsi, rdx
0x40026a:	mov	rdi, rax
0x40026d:	call	0x400b2a
<Block for 0x40030e, 7 bytes>
0x40030e:	add	rsp, 0x38
0x400312:	pop	rbx
0x400313:	pop	rbp
0x400314:	ret	
<Block for 0x4002e9, 2 bytes>
0x4002e9:	jmp	0x400309
<Block for 0x400272, 4 bytes>
0x400272:	test	al, al
0x400274:	je	0x4002b7
<Block for 0x400309, 5 bytes>
0x400309:	call	0x500040
<Block for 0x4002b7, 22 bytes>
0x4002b7:	mov	rax, qword ptr [rip + 0xffd6a]
0x4002be:	mov	rsi, rax
0x4002c1:	lea	rdi, [rip + 0xffd40]
0x4002c8:	call	0x500030
<Block for 0x400276, 19 bytes>
0x400276:	lea	rsi, [rip + 0x5f6]
0x40027d:	lea	rdi, [rip + 0xffd84]
0x400284:	call	0x500010
<Block for 0x400289, 15 bytes>
0x400289:	mov	rbx, rax
0x40028c:	lea	rax, [rbp - 0x40]
0x400290:	mov	rdi, rax
0x400293:	call	0x400ba8
<Block for 0x400298, 12 bytes>
0x400298:	mov	eax, dword ptr [rax]
0x40029a:	mov	esi, eax
0x40029c:	mov	rdi, rbx
0x40029f:	call	0x500018
<Block for 0x4002a4, 17 bytes>
0x4002a4:	lea	rax, [rbp - 0x40]
0x4002a8:	mov	esi, 0
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x400b50
<Block for 0x4002b5, 2 bytes>
0x4002b5:	jmp	0x40024f
<Block for 0x40024f, 12 bytes>
0x40024f:	lea	rax, [rbp - 0x30]
0x400253:	mov	rdi, rax
0x400256:	call	0x400ade
