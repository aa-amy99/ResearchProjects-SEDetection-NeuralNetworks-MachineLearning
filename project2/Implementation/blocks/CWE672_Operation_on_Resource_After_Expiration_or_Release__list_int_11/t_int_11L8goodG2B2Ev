<Block for 0x40062b, 40 bytes>
0x40062b:	endbr64	
0x40062f:	push	rbp
0x400630:	mov	rbp, rsp
0x400633:	push	rbx
0x400634:	sub	rsp, 0x38
0x400638:	mov	rax, qword ptr fs:[0x28]
0x400641:	mov	qword ptr [rbp - 0x18], rax
0x400645:	xor	eax, eax
0x400647:	lea	rax, [rbp - 0x30]
0x40064b:	mov	rdi, rax
0x40064e:	call	0x400920
<Block for 0x400653, 5 bytes>
0x400653:	call	0x500000
<Block for 0x400658, 9 bytes>
0x400658:	test	eax, eax
0x40065a:	setne	al
0x40065d:	test	al, al
0x40065f:	je	0x400695
<Block for 0x400695, 5 bytes>
0x400695:	call	0x500000
<Block for 0x400661, 26 bytes>
0x400661:	mov	dword ptr [rbp - 0x38], 0x64
0x400668:	lea	rdx, [rbp - 0x38]
0x40066c:	lea	rax, [rbp - 0x30]
0x400670:	mov	rsi, rdx
0x400673:	mov	rdi, rax
0x400676:	call	0x400a26
<Block for 0x40069a, 13 bytes>
0x40069a:	test	eax, eax
0x40069c:	setne	al
0x40069f:	test	al, al
0x4006a1:	je	0x40077a
<Block for 0x40067b, 26 bytes>
0x40067b:	mov	dword ptr [rbp - 0x38], 0xc8
0x400682:	lea	rdx, [rbp - 0x38]
0x400686:	lea	rax, [rbp - 0x30]
0x40068a:	mov	rsi, rdx
0x40068d:	mov	rdi, rax
0x400690:	call	0x400a26
<Block for 0x40077a, 12 bytes>
0x40077a:	lea	rax, [rbp - 0x30]
0x40077e:	mov	rdi, rax
0x400781:	call	0x400940
<Block for 0x4006a7, 12 bytes>
0x4006a7:	lea	rax, [rbp - 0x40]
0x4006ab:	mov	rdi, rax
0x4006ae:	call	0x400a74
<Block for 0x400786, 16 bytes>
0x400786:	nop	
0x400787:	mov	rax, qword ptr [rbp - 0x18]
0x40078b:	xor	rax, qword ptr fs:[0x28]
0x400794:	je	0x4007bb
<Block for 0x4006b3, 19 bytes>
0x4006b3:	lea	rsi, [rip + 0x1a5]
0x4006ba:	lea	rdi, [rip + 0xff947]
0x4006c1:	call	0x500010
<Block for 0x4007bb, 7 bytes>
0x4007bb:	add	rsp, 0x38
0x4007bf:	pop	rbx
0x4007c0:	pop	rbp
0x4007c1:	ret	
<Block for 0x400796, 2 bytes>
0x400796:	jmp	0x4007b6
<Block for 0x4006c6, 12 bytes>
0x4006c6:	lea	rax, [rbp - 0x30]
0x4006ca:	mov	rdi, rax
0x4006cd:	call	0x400a8e
<Block for 0x4007b6, 5 bytes>
0x4007b6:	call	0x500040
<Block for 0x4006d2, 16 bytes>
0x4006d2:	mov	qword ptr [rbp - 0x40], rax
0x4006d6:	lea	rax, [rbp - 0x30]
0x4006da:	mov	rdi, rax
0x4006dd:	call	0x400ade
<Block for 0x4006e2, 23 bytes>
0x4006e2:	mov	qword ptr [rbp - 0x38], rax
0x4006e6:	lea	rdx, [rbp - 0x38]
0x4006ea:	lea	rax, [rbp - 0x40]
0x4006ee:	mov	rsi, rdx
0x4006f1:	mov	rdi, rax
0x4006f4:	call	0x400b2a
<Block for 0x4006f9, 4 bytes>
0x4006f9:	test	al, al
0x4006fb:	je	0x400764
<Block for 0x400764, 22 bytes>
0x400764:	mov	rax, qword ptr [rip + 0xff8bd]
0x40076b:	mov	rsi, rax
0x40076e:	lea	rdi, [rip + 0xff893]
0x400775:	call	0x500030
<Block for 0x4006fd, 12 bytes>
0x4006fd:	lea	rax, [rbp - 0x40]
0x400701:	mov	rdi, rax
0x400704:	call	0x400ba8
<Block for 0x400709, 11 bytes>
0x400709:	mov	eax, dword ptr [rax]
0x40070b:	test	eax, eax
0x40070d:	sete	al
0x400710:	test	al, al
0x400712:	je	0x400720
<Block for 0x400720, 19 bytes>
0x400720:	lea	rsi, [rip + 0x14c]
0x400727:	lea	rdi, [rip + 0xff8da]
0x40072e:	call	0x500010
<Block for 0x400714, 12 bytes>
0x400714:	lea	rax, [rbp - 0x30]
0x400718:	mov	rdi, rax
0x40071b:	call	0x400bca
<Block for 0x400733, 15 bytes>
0x400733:	mov	rbx, rax
0x400736:	lea	rax, [rbp - 0x40]
0x40073a:	mov	rdi, rax
0x40073d:	call	0x400ba8
<Block for 0x400742, 12 bytes>
0x400742:	mov	eax, dword ptr [rax]
0x400744:	mov	esi, eax
0x400746:	mov	rdi, rbx
0x400749:	call	0x500018
<Block for 0x40074e, 17 bytes>
0x40074e:	lea	rax, [rbp - 0x40]
0x400752:	mov	esi, 0
0x400757:	mov	rdi, rax
0x40075a:	call	0x400b50
<Block for 0x40075f, 5 bytes>
0x40075f:	jmp	0x4006d6
<Block for 0x4006d6, 12 bytes>
0x4006d6:	lea	rax, [rbp - 0x30]
0x4006da:	mov	rdi, rax
0x4006dd:	call	0x400ade
