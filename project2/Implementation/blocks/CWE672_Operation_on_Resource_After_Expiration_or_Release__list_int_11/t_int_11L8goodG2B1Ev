<Block for 0x400486, 40 bytes>
0x400486:	endbr64	
0x40048a:	push	rbp
0x40048b:	mov	rbp, rsp
0x40048e:	push	rbx
0x40048f:	sub	rsp, 0x38
0x400493:	mov	rax, qword ptr fs:[0x28]
0x40049c:	mov	qword ptr [rbp - 0x18], rax
0x4004a0:	xor	eax, eax
0x4004a2:	lea	rax, [rbp - 0x30]
0x4004a6:	mov	rdi, rax
0x4004a9:	call	0x400920
<Block for 0x4004ae, 5 bytes>
0x4004ae:	call	0x500048
<Block for 0x4004b3, 9 bytes>
0x4004b3:	test	eax, eax
0x4004b5:	setne	al
0x4004b8:	test	al, al
0x4004ba:	je	0x4004ca
<Block for 0x4004ca, 26 bytes>
0x4004ca:	mov	dword ptr [rbp - 0x38], 0x64
0x4004d1:	lea	rdx, [rbp - 0x38]
0x4004d5:	lea	rax, [rbp - 0x30]
0x4004d9:	mov	rsi, rdx
0x4004dc:	mov	rdi, rax
0x4004df:	call	0x400a26
<Block for 0x4004bc, 12 bytes>
0x4004bc:	lea	rdi, [rip + 0x3b2]
0x4004c3:	call	0x500050
<Block for 0x4004e4, 26 bytes>
0x4004e4:	mov	dword ptr [rbp - 0x38], 0xc8
0x4004eb:	lea	rdx, [rbp - 0x38]
0x4004ef:	lea	rax, [rbp - 0x30]
0x4004f3:	mov	rsi, rdx
0x4004f6:	mov	rdi, rax
0x4004f9:	call	0x400a26
<Block for 0x4004c8, 2 bytes>
0x4004c8:	jmp	0x4004fe
<Block for 0x4004fe, 5 bytes>
0x4004fe:	call	0x500000
<Block for 0x400503, 13 bytes>
0x400503:	test	eax, eax
0x400505:	setne	al
0x400508:	test	al, al
0x40050a:	je	0x4005e3
<Block for 0x4005e3, 12 bytes>
0x4005e3:	lea	rax, [rbp - 0x30]
0x4005e7:	mov	rdi, rax
0x4005ea:	call	0x400940
<Block for 0x400510, 12 bytes>
0x400510:	lea	rax, [rbp - 0x40]
0x400514:	mov	rdi, rax
0x400517:	call	0x400a74
<Block for 0x4005ef, 16 bytes>
0x4005ef:	nop	
0x4005f0:	mov	rax, qword ptr [rbp - 0x18]
0x4005f4:	xor	rax, qword ptr fs:[0x28]
0x4005fd:	je	0x400624
<Block for 0x40051c, 19 bytes>
0x40051c:	lea	rsi, [rip + 0x33c]
0x400523:	lea	rdi, [rip + 0xffade]
0x40052a:	call	0x500010
<Block for 0x400624, 7 bytes>
0x400624:	add	rsp, 0x38
0x400628:	pop	rbx
0x400629:	pop	rbp
0x40062a:	ret	
<Block for 0x4005ff, 2 bytes>
0x4005ff:	jmp	0x40061f
<Block for 0x40052f, 12 bytes>
0x40052f:	lea	rax, [rbp - 0x30]
0x400533:	mov	rdi, rax
0x400536:	call	0x400a8e
<Block for 0x40061f, 5 bytes>
0x40061f:	call	0x500040
<Block for 0x40053b, 16 bytes>
0x40053b:	mov	qword ptr [rbp - 0x40], rax
0x40053f:	lea	rax, [rbp - 0x30]
0x400543:	mov	rdi, rax
0x400546:	call	0x400ade
<Block for 0x40054b, 23 bytes>
0x40054b:	mov	qword ptr [rbp - 0x38], rax
0x40054f:	lea	rdx, [rbp - 0x38]
0x400553:	lea	rax, [rbp - 0x40]
0x400557:	mov	rsi, rdx
0x40055a:	mov	rdi, rax
0x40055d:	call	0x400b2a
<Block for 0x400562, 4 bytes>
0x400562:	test	al, al
0x400564:	je	0x4005cd
<Block for 0x4005cd, 22 bytes>
0x4005cd:	mov	rax, qword ptr [rip + 0xffa54]
0x4005d4:	mov	rsi, rax
0x4005d7:	lea	rdi, [rip + 0xffa2a]
0x4005de:	call	0x500030
<Block for 0x400566, 12 bytes>
0x400566:	lea	rax, [rbp - 0x40]
0x40056a:	mov	rdi, rax
0x40056d:	call	0x400ba8
<Block for 0x400572, 11 bytes>
0x400572:	mov	eax, dword ptr [rax]
0x400574:	test	eax, eax
0x400576:	sete	al
0x400579:	test	al, al
0x40057b:	je	0x400589
<Block for 0x400589, 19 bytes>
0x400589:	lea	rsi, [rip + 0x2e3]
0x400590:	lea	rdi, [rip + 0xffa71]
0x400597:	call	0x500010
<Block for 0x40057d, 12 bytes>
0x40057d:	lea	rax, [rbp - 0x30]
0x400581:	mov	rdi, rax
0x400584:	call	0x400bca
<Block for 0x40059c, 15 bytes>
0x40059c:	mov	rbx, rax
0x40059f:	lea	rax, [rbp - 0x40]
0x4005a3:	mov	rdi, rax
0x4005a6:	call	0x400ba8
<Block for 0x4005ab, 12 bytes>
0x4005ab:	mov	eax, dword ptr [rax]
0x4005ad:	mov	esi, eax
0x4005af:	mov	rdi, rbx
0x4005b2:	call	0x500018
<Block for 0x4005b7, 17 bytes>
0x4005b7:	lea	rax, [rbp - 0x40]
0x4005bb:	mov	esi, 0
0x4005c0:	mov	rdi, rax
0x4005c3:	call	0x400b50
<Block for 0x4005c8, 5 bytes>
0x4005c8:	jmp	0x40053f
<Block for 0x40053f, 12 bytes>
0x40053f:	lea	rax, [rbp - 0x30]
0x400543:	mov	rdi, rax
0x400546:	call	0x400ade
