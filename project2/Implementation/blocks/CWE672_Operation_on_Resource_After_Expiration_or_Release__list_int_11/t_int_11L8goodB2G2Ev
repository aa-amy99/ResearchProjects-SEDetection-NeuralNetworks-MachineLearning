<Block for 0x400315, 40 bytes>
0x400315:	endbr64	
0x400319:	push	rbp
0x40031a:	mov	rbp, rsp
0x40031d:	push	rbx
0x40031e:	sub	rsp, 0x38
0x400322:	mov	rax, qword ptr fs:[0x28]
0x40032b:	mov	qword ptr [rbp - 0x18], rax
0x40032f:	xor	eax, eax
0x400331:	lea	rax, [rbp - 0x30]
0x400335:	mov	rdi, rax
0x400338:	call	0x400920
<Block for 0x40033d, 5 bytes>
0x40033d:	call	0x500000
<Block for 0x400342, 9 bytes>
0x400342:	test	eax, eax
0x400344:	setne	al
0x400347:	test	al, al
0x400349:	je	0x40037f
<Block for 0x40037f, 5 bytes>
0x40037f:	call	0x500000
<Block for 0x40034b, 26 bytes>
0x40034b:	mov	dword ptr [rbp - 0x38], 0x64
0x400352:	lea	rdx, [rbp - 0x38]
0x400356:	lea	rax, [rbp - 0x30]
0x40035a:	mov	rsi, rdx
0x40035d:	mov	rdi, rax
0x400360:	call	0x400a26
<Block for 0x400384, 13 bytes>
0x400384:	test	eax, eax
0x400386:	setne	al
0x400389:	test	al, al
0x40038b:	je	0x40043e
<Block for 0x400365, 26 bytes>
0x400365:	mov	dword ptr [rbp - 0x38], 0
0x40036c:	lea	rdx, [rbp - 0x38]
0x400370:	lea	rax, [rbp - 0x30]
0x400374:	mov	rsi, rdx
0x400377:	mov	rdi, rax
0x40037a:	call	0x400a26
<Block for 0x40043e, 12 bytes>
0x40043e:	lea	rax, [rbp - 0x30]
0x400442:	mov	rdi, rax
0x400445:	call	0x400940
<Block for 0x400391, 12 bytes>
0x400391:	lea	rax, [rbp - 0x40]
0x400395:	mov	rdi, rax
0x400398:	call	0x400a74
<Block for 0x40044a, 16 bytes>
0x40044a:	nop	
0x40044b:	mov	rax, qword ptr [rbp - 0x18]
0x40044f:	xor	rax, qword ptr fs:[0x28]
0x400458:	je	0x40047f
<Block for 0x40039d, 19 bytes>
0x40039d:	lea	rsi, [rip + 0x4bb]
0x4003a4:	lea	rdi, [rip + 0xffc5d]
0x4003ab:	call	0x500010
<Block for 0x40047f, 7 bytes>
0x40047f:	add	rsp, 0x38
0x400483:	pop	rbx
0x400484:	pop	rbp
0x400485:	ret	
<Block for 0x40045a, 2 bytes>
0x40045a:	jmp	0x40047a
<Block for 0x4003b0, 12 bytes>
0x4003b0:	lea	rax, [rbp - 0x30]
0x4003b4:	mov	rdi, rax
0x4003b7:	call	0x400a8e
<Block for 0x40047a, 5 bytes>
0x40047a:	call	0x500040
<Block for 0x4003bc, 16 bytes>
0x4003bc:	mov	qword ptr [rbp - 0x40], rax
0x4003c0:	lea	rax, [rbp - 0x30]
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x400ade
<Block for 0x4003cc, 23 bytes>
0x4003cc:	mov	qword ptr [rbp - 0x38], rax
0x4003d0:	lea	rdx, [rbp - 0x38]
0x4003d4:	lea	rax, [rbp - 0x40]
0x4003d8:	mov	rsi, rdx
0x4003db:	mov	rdi, rax
0x4003de:	call	0x400b2a
<Block for 0x4003e3, 4 bytes>
0x4003e3:	test	al, al
0x4003e5:	je	0x400428
<Block for 0x400428, 22 bytes>
0x400428:	mov	rax, qword ptr [rip + 0xffbf9]
0x40042f:	mov	rsi, rax
0x400432:	lea	rdi, [rip + 0xffbcf]
0x400439:	call	0x500030
<Block for 0x4003e7, 19 bytes>
0x4003e7:	lea	rsi, [rip + 0x485]
0x4003ee:	lea	rdi, [rip + 0xffc13]
0x4003f5:	call	0x500010
<Block for 0x4003fa, 15 bytes>
0x4003fa:	mov	rbx, rax
0x4003fd:	lea	rax, [rbp - 0x40]
0x400401:	mov	rdi, rax
0x400404:	call	0x400ba8
<Block for 0x400409, 12 bytes>
0x400409:	mov	eax, dword ptr [rax]
0x40040b:	mov	esi, eax
0x40040d:	mov	rdi, rbx
0x400410:	call	0x500018
<Block for 0x400415, 17 bytes>
0x400415:	lea	rax, [rbp - 0x40]
0x400419:	mov	esi, 0
0x40041e:	mov	rdi, rax
0x400421:	call	0x400b50
<Block for 0x400426, 2 bytes>
0x400426:	jmp	0x4003c0
<Block for 0x4003c0, 12 bytes>
0x4003c0:	lea	rax, [rbp - 0x30]
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x400ade
