<Block for 0x400068, 39 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	qword ptr [rbp - 0x10], 0
0x40007c:	lea	rsi, [rip + 0x75]
0x400083:	lea	rdi, [rip + 0x71]
0x40008a:	call	0x500000
<Block for 0x40008f, 27 bytes>
0x40008f:	mov	qword ptr [rbp - 0x10], rax
0x400093:	mov	rax, qword ptr [rbp - 0x10]
0x400097:	mov	qword ptr [rbp - 0x18], rax
0x40009b:	mov	rax, qword ptr [rbp - 0x18]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	cmp	qword ptr [rbp - 8], 0
0x4000a8:	je	0x4000b6
<Block for 0x4000b6, 19 bytes>
0x4000b6:	lea	rsi, [rip + 0x3b]
0x4000bd:	lea	rdi, [rip + 0x5d]
0x4000c4:	call	0x500000
<Block for 0x4000aa, 12 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500008
<Block for 0x4000c9, 11 bytes>
0x4000c9:	mov	qword ptr [rbp - 8], rax
0x4000cd:	cmp	qword ptr [rbp - 8], 0
0x4000d2:	je	0x4000e0
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000d4, 12 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500008
