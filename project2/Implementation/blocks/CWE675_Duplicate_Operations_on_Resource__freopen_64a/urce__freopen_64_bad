<Block for 0x400000, 64 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x10], 0
0x400023:	mov	rax, qword ptr [rip + 0xfffd6]
0x40002a:	mov	rdx, rax
0x40002d:	lea	rsi, [rip + 0x12e]
0x400034:	lea	rdi, [rip + 0x12a]
0x40003b:	call	0x500008
<Block for 0x400040, 16 bytes>
0x400040:	mov	qword ptr [rbp - 0x10], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500010
<Block for 0x400050, 12 bytes>
0x400050:	lea	rax, [rbp - 0x10]
0x400054:	mov	rdi, rax
0x400057:	call	0x500018
<Block for 0x40005c, 16 bytes>
0x40005c:	nop	
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	xor	rax, qword ptr fs:[0x28]
0x40006a:	je	0x400071
<Block for 0x400071, 2 bytes>
0x400071:	leave	
0x400072:	ret	
<Block for 0x40006c, 5 bytes>
0x40006c:	call	0x500020
