<Block for 0x40047f, 46 bytes>
0x40047f:	endbr64	
0x400483:	push	rbp
0x400484:	mov	rbp, rsp
0x400487:	push	rbx
0x400488:	sub	rsp, 0xe8
0x40048f:	mov	rax, qword ptr fs:[0x28]
0x400498:	mov	qword ptr [rbp - 0x18], rax
0x40049c:	xor	eax, eax
0x40049e:	lea	rax, [rbp - 0xe0]
0x4004a5:	mov	rdi, rax
0x4004a8:	call	0x40087c
<Block for 0x4004ad, 129 bytes>
0x4004ad:	mov	qword ptr [rbp - 0x80], 0
0x4004b5:	mov	qword ptr [rbp - 0x78], 0
0x4004bd:	mov	qword ptr [rbp - 0x70], 0
0x4004c5:	mov	qword ptr [rbp - 0x68], 0
0x4004cd:	mov	qword ptr [rbp - 0x60], 0
0x4004d5:	mov	qword ptr [rbp - 0x58], 0
0x4004dd:	mov	qword ptr [rbp - 0x50], 0
0x4004e5:	mov	qword ptr [rbp - 0x48], 0
0x4004ed:	mov	qword ptr [rbp - 0x40], 0
0x4004f5:	mov	qword ptr [rbp - 0x38], 0
0x4004fd:	mov	qword ptr [rbp - 0x30], 0
0x400505:	mov	qword ptr [rbp - 0x28], 0
0x40050d:	mov	dword ptr [rbp - 0x20], 0
0x400514:	lea	rax, [rbp - 0x80]
0x400518:	mov	qword ptr [rbp - 0xf0], rax
0x40051f:	mov	rax, qword ptr [rbp - 0xf0]
0x400526:	mov	rdi, rax
0x400529:	call	0x500000
<Block for 0x40052e, 29 bytes>
0x40052e:	mov	qword ptr [rbp - 0xe8], rax
0x400535:	mov	eax, 0x64
0x40053a:	sub	rax, qword ptr [rbp - 0xe8]
0x400541:	cmp	rax, 1
0x400545:	jbe	0x400600
<Block for 0x400600, 35 bytes>
0x400600:	mov	dword ptr [rbp - 0xb0], 0
0x40060a:	lea	rdx, [rbp - 0xb0]
0x400611:	lea	rax, [rbp - 0xe0]
0x400618:	mov	rsi, rdx
0x40061b:	mov	rdi, rax
0x40061e:	call	0x400a4e
<Block for 0x40054b, 53 bytes>
0x40054b:	mov	rax, qword ptr [rip + 0xffab6]
0x400552:	mov	rdx, qword ptr [rbp - 0xe8]
0x400559:	mov	ecx, 0x64
0x40055e:	sub	ecx, edx
0x400560:	mov	edx, ecx
0x400562:	mov	esi, edx
0x400564:	mov	rcx, qword ptr [rbp - 0xf0]
0x40056b:	mov	rdx, qword ptr [rbp - 0xe8]
0x400572:	add	rcx, rdx
0x400575:	mov	rdx, rax
0x400578:	mov	rdi, rcx
0x40057b:	call	0x500010
<Block for 0x400623, 45 bytes>
0x400623:	mov	rdx, qword ptr [rbp - 0xf0]
0x40062a:	mov	qword ptr [rax], rdx
0x40062d:	mov	dword ptr [rbp - 0xb0], 1
0x400637:	lea	rdx, [rbp - 0xb0]
0x40063e:	lea	rax, [rbp - 0xe0]
0x400645:	mov	rsi, rdx
0x400648:	mov	rdi, rax
0x40064b:	call	0x400a4e
<Block for 0x400580, 10 bytes>
0x400580:	test	rax, rax
0x400583:	setne	al
0x400586:	test	al, al
0x400588:	je	0x4005e0
<Block for 0x400650, 45 bytes>
0x400650:	mov	rdx, qword ptr [rbp - 0xf0]
0x400657:	mov	qword ptr [rax], rdx
0x40065a:	mov	dword ptr [rbp - 0xb0], 2
0x400664:	lea	rdx, [rbp - 0xb0]
0x40066b:	lea	rax, [rbp - 0xe0]
0x400672:	mov	rsi, rdx
0x400675:	mov	rdi, rax
0x400678:	call	0x400a4e
<Block for 0x4005e0, 12 bytes>
0x4005e0:	lea	rdi, [rip + 0x181]
0x4005e7:	call	0x500018
<Block for 0x40058a, 15 bytes>
0x40058a:	mov	rax, qword ptr [rbp - 0xf0]
0x400591:	mov	rdi, rax
0x400594:	call	0x500000
<Block for 0x40067d, 35 bytes>
0x40067d:	mov	rdx, qword ptr [rbp - 0xf0]
0x400684:	mov	qword ptr [rax], rdx
0x400687:	lea	rdx, [rbp - 0xe0]
0x40068e:	lea	rax, [rbp - 0xb0]
0x400695:	mov	rsi, rdx
0x400698:	mov	rdi, rax
0x40069b:	call	0x4008bc
<Block for 0x4005ec, 55 bytes>
0x4005ec:	mov	rdx, qword ptr [rbp - 0xf0]
0x4005f3:	mov	rax, qword ptr [rbp - 0xe8]
0x4005fa:	add	rax, rdx
0x4005fd:	mov	byte ptr [rax], 0
0x400600:	mov	dword ptr [rbp - 0xb0], 0
0x40060a:	lea	rdx, [rbp - 0xb0]
0x400611:	lea	rax, [rbp - 0xe0]
0x400618:	mov	rsi, rdx
0x40061b:	mov	rdi, rax
0x40061e:	call	0x400a4e
<Block for 0x400599, 17 bytes>
0x400599:	mov	qword ptr [rbp - 0xe8], rax
0x4005a0:	cmp	qword ptr [rbp - 0xe8], 0
0x4005a8:	je	0x400600
<Block for 0x4006a0, 15 bytes>
0x4006a0:	lea	rax, [rbp - 0xb0]
0x4006a7:	mov	rdi, rax
0x4006aa:	call	0x500040
<Block for 0x4005aa, 28 bytes>
0x4005aa:	mov	rax, qword ptr [rbp - 0xe8]
0x4005b1:	lea	rdx, [rax - 1]
0x4005b5:	mov	rax, qword ptr [rbp - 0xf0]
0x4005bc:	add	rax, rdx
0x4005bf:	movzx	eax, byte ptr [rax]
0x4005c2:	cmp	al, 0xa
0x4005c4:	jne	0x400600
<Block for 0x4006af, 15 bytes>
0x4006af:	lea	rax, [rbp - 0xb0]
0x4006b6:	mov	rdi, rax
0x4006b9:	call	0x40089c
<Block for 0x4005c6, 26 bytes>
0x4005c6:	mov	rax, qword ptr [rbp - 0xe8]
0x4005cd:	lea	rdx, [rax - 1]
0x4005d1:	mov	rax, qword ptr [rbp - 0xf0]
0x4005d8:	add	rax, rdx
0x4005db:	mov	byte ptr [rax], 0
0x4005de:	jmp	0x400600
<Block for 0x4006be, 15 bytes>
0x4006be:	lea	rax, [rbp - 0xe0]
0x4006c5:	mov	rdi, rax
0x4006c8:	call	0x40089c
<Block for 0x4006cd, 16 bytes>
0x4006cd:	nop	
0x4006ce:	mov	rax, qword ptr [rbp - 0x18]
0x4006d2:	xor	rax, qword ptr fs:[0x28]
0x4006db:	je	0x40071d
<Block for 0x40071d, 10 bytes>
0x40071d:	add	rsp, 0xe8
0x400724:	pop	rbx
0x400725:	pop	rbp
0x400726:	ret	
<Block for 0x4006dd, 2 bytes>
0x4006dd:	jmp	0x400718
<Block for 0x400718, 5 bytes>
0x400718:	call	0x500030
