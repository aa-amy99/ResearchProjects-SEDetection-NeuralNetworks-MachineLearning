<Block for 0x4000a1, 79 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x20
0x4000ad:	mov	rax, qword ptr fs:[0x28]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	xor	eax, eax
0x4000bc:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000c3:	mov	qword ptr [rbp - 0x16], 0
0x4000cb:	mov	dword ptr [rbp - 0xe], 0
0x4000d2:	mov	word ptr [rbp - 0xa], 0
0x4000d8:	mov	rdx, qword ptr [rip + 0xfff39]
0x4000df:	lea	rax, [rbp - 0x16]
0x4000e3:	mov	esi, 0xe
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500020
<Block for 0x4000f0, 5 bytes>
0x4000f0:	test	rax, rax
0x4000f3:	je	0x400106
<Block for 0x400106, 12 bytes>
0x400106:	lea	rdi, [rip + 0x26b]
0x40010d:	call	0x500008
<Block for 0x4000f5, 12 bytes>
0x4000f5:	lea	rax, [rbp - 0x16]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500028
<Block for 0x400112, 10 bytes>
0x400112:	mov	eax, dword ptr [rbp - 0x1c]
0x400115:	mov	edi, eax
0x400117:	call	0x400000
<Block for 0x400101, 5 bytes>
0x400101:	mov	dword ptr [rbp - 0x1c], eax
0x400104:	jmp	0x400112
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400131
<Block for 0x400131, 2 bytes>
0x400131:	leave	
0x400132:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500010
