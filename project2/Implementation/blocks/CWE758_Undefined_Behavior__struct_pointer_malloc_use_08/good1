<Block for 0x40008c, 22 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0x20
0x400098:	mov	eax, 0
0x40009d:	call	0x40000f
<Block for 0x4000a2, 4 bytes>
0x4000a2:	test	eax, eax
0x4000a4:	je	0x4000b7
<Block for 0x4000b7, 10 bytes>
0x4000b7:	mov	edi, 8
0x4000bc:	call	0x500000
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rdi, [rip + 0x16d]
0x4000ad:	call	0x500020
<Block for 0x4000c1, 11 bytes>
0x4000c1:	mov	qword ptr [rbp - 0x18], rax
0x4000c5:	cmp	qword ptr [rbp - 0x18], 0
0x4000ca:	jne	0x4000d6
<Block for 0x4000b2, 5 bytes>
0x4000b2:	jmp	0x400147
<Block for 0x4000cc, 10 bytes>
0x4000cc:	mov	edi, 0xffffffff
0x4000d1:	call	0x500008
<Block for 0x4000d6, 10 bytes>
0x4000d6:	mov	edi, 8
0x4000db:	call	0x500000
<Block for 0x400147, 3 bytes>
0x400147:	nop	
0x400148:	leave	
0x400149:	ret	
<Block for 0x4000e0, 11 bytes>
0x4000e0:	mov	qword ptr [rbp - 0x10], rax
0x4000e4:	cmp	qword ptr [rbp - 0x10], 0
0x4000e9:	jne	0x4000f5
<Block for 0x4000eb, 10 bytes>
0x4000eb:	mov	edi, 0xffffffff
0x4000f0:	call	0x500008
<Block for 0x4000f5, 56 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 0x10]
0x4000f9:	mov	dword ptr [rax], 5
0x4000ff:	mov	rax, qword ptr [rbp - 0x10]
0x400103:	mov	dword ptr [rax + 4], 6
0x40010a:	mov	rax, qword ptr [rbp - 0x18]
0x40010e:	mov	rdx, qword ptr [rbp - 0x10]
0x400112:	mov	qword ptr [rax], rdx
0x400115:	mov	rax, qword ptr [rbp - 0x18]
0x400119:	mov	rax, qword ptr [rax]
0x40011c:	mov	qword ptr [rbp - 8], rax
0x400120:	mov	rax, qword ptr [rbp - 8]
0x400124:	mov	eax, dword ptr [rax]
0x400126:	mov	edi, eax
0x400128:	call	0x500018
<Block for 0x40012d, 14 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 8]
0x400131:	mov	eax, dword ptr [rax + 4]
0x400134:	mov	edi, eax
0x400136:	call	0x500018
<Block for 0x40013b, 12 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x18]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
