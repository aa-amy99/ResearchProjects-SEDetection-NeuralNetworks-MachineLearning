<Block for 0x40034c, 44 bytes>
0x40034c:	endbr64	
0x400350:	push	rbp
0x400351:	mov	rbp, rsp
0x400354:	sub	rsp, 0x40
0x400358:	mov	rax, qword ptr fs:[0x28]
0x400361:	mov	qword ptr [rbp - 8], rax
0x400365:	xor	eax, eax
0x400367:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40036e:	mov	eax, 0
0x400373:	call	0x500000
<Block for 0x400378, 4 bytes>
0x400378:	test	eax, eax
0x40037a:	je	0x400383
<Block for 0x400383, 10 bytes>
0x400383:	mov	eax, 0
0x400388:	call	0x500000
<Block for 0x40037c, 17 bytes>
0x40037c:	mov	dword ptr [rbp - 0x38], 7
0x400383:	mov	eax, 0
0x400388:	call	0x500000
<Block for 0x40038d, 4 bytes>
0x40038d:	test	eax, eax
0x40038f:	je	0x4003fd
<Block for 0x4003fd, 16 bytes>
0x4003fd:	nop	
0x4003fe:	mov	rax, qword ptr [rbp - 8]
0x400402:	xor	rax, qword ptr fs:[0x28]
0x40040b:	je	0x400412
<Block for 0x400391, 46 bytes>
0x400391:	mov	qword ptr [rbp - 0x30], 0
0x400399:	mov	qword ptr [rbp - 0x28], 0
0x4003a1:	mov	qword ptr [rbp - 0x20], 0
0x4003a9:	mov	qword ptr [rbp - 0x18], 0
0x4003b1:	mov	qword ptr [rbp - 0x10], 0
0x4003b9:	cmp	dword ptr [rbp - 0x38], 9
0x4003bd:	jg	0x4003f1
<Block for 0x400412, 2 bytes>
0x400412:	leave	
0x400413:	ret	
<Block for 0x40040d, 5 bytes>
0x40040d:	call	0x500018
<Block for 0x4003bf, 22 bytes>
0x4003bf:	mov	eax, dword ptr [rbp - 0x38]
0x4003c2:	cdqe	
0x4003c4:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4003cc:	mov	dword ptr [rbp - 0x34], 0
0x4003d3:	jmp	0x4003e9
<Block for 0x4003f1, 12 bytes>
0x4003f1:	lea	rdi, [rip + 0x50]
0x4003f8:	call	0x500010
<Block for 0x4003e9, 6 bytes>
0x4003e9:	cmp	dword ptr [rbp - 0x34], 9
0x4003ed:	jle	0x4003d5
<Block for 0x4003d5, 16 bytes>
0x4003d5:	mov	eax, dword ptr [rbp - 0x34]
0x4003d8:	cdqe	
0x4003da:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003de:	mov	edi, eax
0x4003e0:	call	0x500008
<Block for 0x4003ef, 2 bytes>
0x4003ef:	jmp	0x4003fd
<Block for 0x4003e5, 10 bytes>
0x4003e5:	add	dword ptr [rbp - 0x34], 1
0x4003e9:	cmp	dword ptr [rbp - 0x34], 9
0x4003ed:	jle	0x4003d5
