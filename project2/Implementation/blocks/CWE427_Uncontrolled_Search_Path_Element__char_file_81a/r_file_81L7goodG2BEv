<Block for 0x40017f, 82 bytes>
0x40017f:	endbr64	
0x400183:	push	rbp
0x400184:	mov	rbp, rsp
0x400187:	sub	rsp, 0x130
0x40018e:	mov	rax, qword ptr fs:[0x28]
0x400197:	mov	qword ptr [rbp - 8], rax
0x40019b:	xor	eax, eax
0x40019d:	movabs	rax, 0x3d48544150
0x4001a7:	mov	edx, 0
0x4001ac:	mov	qword ptr [rbp - 0x110], rax
0x4001b3:	mov	qword ptr [rbp - 0x108], rdx
0x4001ba:	lea	rdx, [rbp - 0x100]
0x4001c1:	mov	eax, 0
0x4001c6:	mov	ecx, 0x1d
0x4001cb:	mov	rdi, rdx
0x4001ce:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001d1, 51 bytes>
0x4001d1:	mov	rdx, rdi
0x4001d4:	mov	word ptr [rdx], ax
0x4001d7:	add	rdx, 2
0x4001db:	lea	rax, [rbp - 0x110]
0x4001e2:	mov	qword ptr [rbp - 0x120], rax
0x4001e9:	mov	rax, qword ptr [rbp - 0x120]
0x4001f0:	mov	rcx, -1
0x4001f7:	mov	rdx, rax
0x4001fa:	mov	eax, 0
0x4001ff:	mov	rdi, rdx
0x400202:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001ce, 3 bytes>
0x4001ce:	rep stosq	qword ptr [rdi], rax
<Block for 0x400204, 93 bytes>
0x400204:	mov	rax, rcx
0x400207:	not	rax
0x40020a:	lea	rdx, [rax - 1]
0x40020e:	mov	rax, qword ptr [rbp - 0x120]
0x400215:	add	rax, rdx
0x400218:	mov	dword ptr [rax], 0x6e69622f
0x40021e:	mov	byte ptr [rax + 4], 0
0x400222:	lea	rax, [rip + 0xffe1f]
0x400229:	mov	qword ptr [rbp - 0x128], rax
0x400230:	lea	rax, [rbp - 0x128]
0x400237:	mov	qword ptr [rbp - 0x118], rax
0x40023e:	mov	rax, qword ptr [rbp - 0x118]
0x400245:	mov	rax, qword ptr [rax]
0x400248:	mov	rcx, qword ptr [rax]
0x40024b:	mov	rdx, qword ptr [rbp - 0x120]
0x400252:	mov	rax, qword ptr [rbp - 0x118]
0x400259:	mov	rsi, rdx
0x40025c:	mov	rdi, rax
0x40025f:	call	rcx
<Block for 0x400202, 2 bytes>
0x400202:	repne scasb	al, byte ptr [rdi]
<Block for 0x400261, 16 bytes>
0x400261:	nop	
0x400262:	mov	rax, qword ptr [rbp - 8]
0x400266:	xor	rax, qword ptr fs:[0x28]
0x40026f:	je	0x400276
<Block for 0x400276, 2 bytes>
0x400276:	leave	
0x400277:	ret	
<Block for 0x400271, 5 bytes>
0x400271:	call	0x500030
