<Block for 0x400343, 40 bytes>
0x400343:	endbr64	
0x400347:	push	rbp
0x400348:	mov	rbp, rsp
0x40034b:	push	rbx
0x40034c:	sub	rsp, 0x68
0x400350:	mov	rax, qword ptr fs:[0x28]
0x400359:	mov	qword ptr [rbp - 0x18], rax
0x40035d:	xor	eax, eax
0x40035f:	lea	rax, [rbp - 0x60]
0x400363:	mov	rdi, rax
0x400366:	call	0x40059e
<Block for 0x40036b, 52 bytes>
0x40036b:	mov	dword ptr [rbp - 0x6c], 0xffffffff
0x400372:	mov	qword ptr [rbp - 0x26], 0
0x40037a:	mov	dword ptr [rbp - 0x1e], 0
0x400381:	mov	word ptr [rbp - 0x1a], 0
0x400387:	mov	rdx, qword ptr [rip + 0xffc72]
0x40038e:	lea	rax, [rbp - 0x26]
0x400392:	mov	esi, 0xe
0x400397:	mov	rdi, rax
0x40039a:	call	0x500008
<Block for 0x40039f, 10 bytes>
0x40039f:	test	rax, rax
0x4003a2:	setne	al
0x4003a5:	test	al, al
0x4003a7:	je	0x4003ba
<Block for 0x4003ba, 12 bytes>
0x4003ba:	lea	rdi, [rip + 0x176]
0x4003c1:	call	0x500018
<Block for 0x4003a9, 12 bytes>
0x4003a9:	lea	rax, [rbp - 0x26]
0x4003ad:	mov	rdi, rax
0x4003b0:	call	0x500010
<Block for 0x4003c6, 12 bytes>
0x4003c6:	lea	rax, [rbp - 0x60]
0x4003ca:	mov	rdi, rax
0x4003cd:	call	0x400746
<Block for 0x4003b5, 5 bytes>
0x4003b5:	mov	dword ptr [rbp - 0x6c], eax
0x4003b8:	jmp	0x4003c6
<Block for 0x4003d2, 23 bytes>
0x4003d2:	mov	qword ptr [rbp - 0x68], rax
0x4003d6:	lea	rdx, [rbp - 0x68]
0x4003da:	lea	rax, [rbp - 0x40]
0x4003de:	mov	rsi, rdx
0x4003e1:	mov	rdi, rax
0x4003e4:	call	0x400796
<Block for 0x4003e9, 28 bytes>
0x4003e9:	lea	rdx, [rbp - 0x6c]
0x4003ed:	mov	rsi, qword ptr [rbp - 0x40]
0x4003f1:	lea	rax, [rbp - 0x60]
0x4003f5:	mov	rcx, rdx
0x4003f8:	mov	edx, 1
0x4003fd:	mov	rdi, rax
0x400400:	call	0x4007c4
<Block for 0x400405, 12 bytes>
0x400405:	lea	rax, [rbp - 0x60]
0x400409:	mov	rdi, rax
0x40040c:	call	0x400746
<Block for 0x400411, 23 bytes>
0x400411:	mov	qword ptr [rbp - 0x68], rax
0x400415:	lea	rdx, [rbp - 0x68]
0x400419:	lea	rax, [rbp - 0x40]
0x40041d:	mov	rsi, rdx
0x400420:	mov	rdi, rax
0x400423:	call	0x400796
<Block for 0x400428, 28 bytes>
0x400428:	lea	rdx, [rbp - 0x6c]
0x40042c:	mov	rsi, qword ptr [rbp - 0x40]
0x400430:	lea	rax, [rbp - 0x60]
0x400434:	mov	rcx, rdx
0x400437:	mov	edx, 1
0x40043c:	mov	rdi, rax
0x40043f:	call	0x4007c4
<Block for 0x400444, 12 bytes>
0x400444:	lea	rax, [rbp - 0x60]
0x400448:	mov	rdi, rax
0x40044b:	call	0x400746
<Block for 0x400450, 23 bytes>
0x400450:	mov	qword ptr [rbp - 0x68], rax
0x400454:	lea	rdx, [rbp - 0x68]
0x400458:	lea	rax, [rbp - 0x40]
0x40045c:	mov	rsi, rdx
0x40045f:	mov	rdi, rax
0x400462:	call	0x400796
<Block for 0x400467, 28 bytes>
0x400467:	lea	rdx, [rbp - 0x6c]
0x40046b:	mov	rsi, qword ptr [rbp - 0x40]
0x40046f:	lea	rax, [rbp - 0x60]
0x400473:	mov	rcx, rdx
0x400476:	mov	edx, 1
0x40047b:	mov	rdi, rax
0x40047e:	call	0x4007c4
<Block for 0x400483, 19 bytes>
0x400483:	lea	rdx, [rbp - 0x60]
0x400487:	lea	rax, [rbp - 0x40]
0x40048b:	mov	rsi, rdx
0x40048e:	mov	rdi, rax
0x400491:	call	0x40088a
<Block for 0x400496, 12 bytes>
0x400496:	lea	rax, [rbp - 0x40]
0x40049a:	mov	rdi, rax
0x40049d:	call	0x500040
<Block for 0x4004a2, 12 bytes>
0x4004a2:	lea	rax, [rbp - 0x40]
0x4004a6:	mov	rdi, rax
0x4004a9:	call	0x4006fe
<Block for 0x4004ae, 12 bytes>
0x4004ae:	lea	rax, [rbp - 0x60]
0x4004b2:	mov	rdi, rax
0x4004b5:	call	0x4006fe
<Block for 0x4004ba, 16 bytes>
0x4004ba:	nop	
0x4004bb:	mov	rax, qword ptr [rbp - 0x18]
0x4004bf:	xor	rax, qword ptr fs:[0x28]
0x4004c8:	je	0x400504
<Block for 0x400504, 7 bytes>
0x400504:	add	rsp, 0x68
0x400508:	pop	rbx
0x400509:	pop	rbp
0x40050a:	ret	
<Block for 0x4004ca, 2 bytes>
0x4004ca:	jmp	0x4004ff
<Block for 0x4004ff, 5 bytes>
0x4004ff:	call	0x500030
