<Block for 0x4001bb, 110 bytes>
0x4001bb:	endbr64	
0x4001bf:	push	rbp
0x4001c0:	mov	rbp, rsp
0x4001c3:	sub	rsp, 0x140
0x4001ca:	mov	rax, qword ptr fs:[0x28]
0x4001d3:	mov	qword ptr [rbp - 8], rax
0x4001d7:	xor	eax, eax
0x4001d9:	lea	rax, [rbp - 0x138]
0x4001e0:	mov	qword ptr [rbp - 0x130], rax
0x4001e7:	lea	rax, [rbp - 0x138]
0x4001ee:	mov	qword ptr [rbp - 0x128], rax
0x4001f5:	movabs	rax, 0x3d48544150
0x4001ff:	mov	edx, 0
0x400204:	mov	qword ptr [rbp - 0x110], rax
0x40020b:	mov	qword ptr [rbp - 0x108], rdx
0x400212:	lea	rdx, [rbp - 0x100]
0x400219:	mov	eax, 0
0x40021e:	mov	ecx, 0x1d
0x400223:	mov	rdi, rdx
0x400226:	rep stosq	qword ptr [rdi], rax
<Block for 0x400229, 68 bytes>
0x400229:	mov	rdx, rdi
0x40022c:	mov	word ptr [rdx], ax
0x40022f:	add	rdx, 2
0x400233:	lea	rax, [rbp - 0x110]
0x40023a:	mov	qword ptr [rbp - 0x138], rax
0x400241:	mov	rax, qword ptr [rbp - 0x130]
0x400248:	mov	rax, qword ptr [rax]
0x40024b:	mov	qword ptr [rbp - 0x120], rax
0x400252:	mov	rax, qword ptr [rbp - 0x120]
0x400259:	mov	rcx, -1
0x400260:	mov	rdx, rax
0x400263:	mov	eax, 0
0x400268:	mov	rdi, rdx
0x40026b:	repne scasb	al, byte ptr [rdi]
<Block for 0x400226, 3 bytes>
0x400226:	rep stosq	qword ptr [rdi], rax
<Block for 0x40026d, 79 bytes>
0x40026d:	mov	rax, rcx
0x400270:	not	rax
0x400273:	lea	rdx, [rax - 1]
0x400277:	mov	rax, qword ptr [rbp - 0x120]
0x40027e:	add	rax, rdx
0x400281:	mov	dword ptr [rax], 0x6e69622f
0x400287:	mov	byte ptr [rax + 4], 0
0x40028b:	mov	rax, qword ptr [rbp - 0x130]
0x400292:	mov	rdx, qword ptr [rbp - 0x120]
0x400299:	mov	qword ptr [rax], rdx
0x40029c:	mov	rax, qword ptr [rbp - 0x128]
0x4002a3:	mov	rax, qword ptr [rax]
0x4002a6:	mov	qword ptr [rbp - 0x118], rax
0x4002ad:	mov	rax, qword ptr [rbp - 0x118]
0x4002b4:	mov	rdi, rax
0x4002b7:	call	0x500020
<Block for 0x40026b, 2 bytes>
0x40026b:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002bc, 16 bytes>
0x4002bc:	nop	
0x4002bd:	mov	rax, qword ptr [rbp - 8]
0x4002c1:	xor	rax, qword ptr fs:[0x28]
0x4002ca:	je	0x4002d1
<Block for 0x4002d1, 2 bytes>
0x4002d1:	leave	
0x4002d2:	ret	
<Block for 0x4002cc, 5 bytes>
0x4002cc:	call	0x500028
