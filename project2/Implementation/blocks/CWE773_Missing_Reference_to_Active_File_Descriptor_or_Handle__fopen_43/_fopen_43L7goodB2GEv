<Block for 0x4000cc, 47 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x10
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	qword ptr [rbp - 0x10], 0
0x4000ef:	lea	rax, [rbp - 0x10]
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x40009f
<Block for 0x4000fb, 9 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x10]
0x4000ff:	test	rax, rax
0x400102:	je	0x400110
<Block for 0x400110, 19 bytes>
0x400110:	lea	rsi, [rip + 0x4c]
0x400117:	lea	rdi, [rip + 0x6e]
0x40011e:	call	0x500000
<Block for 0x400104, 12 bytes>
0x400104:	mov	rax, qword ptr [rbp - 0x10]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500008
<Block for 0x400123, 13 bytes>
0x400123:	mov	qword ptr [rbp - 0x10], rax
0x400127:	mov	rax, qword ptr [rbp - 0x10]
0x40012b:	test	rax, rax
0x40012e:	je	0x40013c
<Block for 0x40013c, 16 bytes>
0x40013c:	nop	
0x40013d:	mov	rax, qword ptr [rbp - 8]
0x400141:	xor	rax, qword ptr fs:[0x28]
0x40014a:	je	0x400151
<Block for 0x400130, 12 bytes>
0x400130:	mov	rax, qword ptr [rbp - 0x10]
0x400134:	mov	rdi, rax
0x400137:	call	0x500008
<Block for 0x400151, 2 bytes>
0x400151:	leave	
0x400152:	ret	
<Block for 0x40014c, 5 bytes>
0x40014c:	call	0x500010
