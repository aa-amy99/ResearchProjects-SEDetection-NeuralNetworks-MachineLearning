<Block for 0x40002d, 47 bytes>
0x40002d:	endbr64	
0x400031:	push	rbp
0x400032:	mov	rbp, rsp
0x400035:	sub	rsp, 0x10
0x400039:	mov	rax, qword ptr fs:[0x28]
0x400042:	mov	qword ptr [rbp - 8], rax
0x400046:	xor	eax, eax
0x400048:	mov	qword ptr [rbp - 0x10], 0
0x400050:	lea	rax, [rbp - 0x10]
0x400054:	mov	rdi, rax
0x400057:	call	0x400000
<Block for 0x40005c, 19 bytes>
0x40005c:	lea	rsi, [rip + 0x100]
0x400063:	lea	rdi, [rip + 0x110]
0x40006a:	call	0x500000
<Block for 0x40006f, 13 bytes>
0x40006f:	mov	qword ptr [rbp - 0x10], rax
0x400073:	mov	rax, qword ptr [rbp - 0x10]
0x400077:	test	rax, rax
0x40007a:	je	0x400088
<Block for 0x400088, 16 bytes>
0x400088:	nop	
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	xor	rax, qword ptr fs:[0x28]
0x400096:	je	0x40009d
<Block for 0x40007c, 12 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 0x10]
0x400080:	mov	rdi, rax
0x400083:	call	0x500008
<Block for 0x40009d, 2 bytes>
0x40009d:	leave	
0x40009e:	ret	
<Block for 0x400098, 5 bytes>
0x400098:	call	0x500010
