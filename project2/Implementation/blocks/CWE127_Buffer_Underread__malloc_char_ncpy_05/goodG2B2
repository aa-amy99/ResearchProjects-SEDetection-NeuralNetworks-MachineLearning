<Block for 0x4001c2, 45 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	add	rsp, -0x80
0x4001ce:	mov	rax, qword ptr fs:[0x28]
0x4001d7:	mov	qword ptr [rbp - 8], rax
0x4001db:	xor	eax, eax
0x4001dd:	mov	qword ptr [rbp - 0x80], 0
0x4001e5:	mov	eax, dword ptr [rip + 0xd1]
0x4001eb:	test	eax, eax
0x4001ed:	je	0x400237
<Block for 0x400237, 22 bytes>
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x43
0x400245:	mov	rdi, rax
0x400248:	call	0x500010
<Block for 0x4001ef, 10 bytes>
0x4001ef:	mov	edi, 0x64
0x4001f4:	call	0x500000
<Block for 0x40024d, 16 bytes>
0x40024d:	mov	byte ptr [rbp - 0xd], 0
0x400251:	lea	rax, [rbp - 0x70]
0x400255:	mov	rdi, rax
0x400258:	call	0x500018
<Block for 0x4001f9, 11 bytes>
0x4001f9:	mov	qword ptr [rbp - 0x78], rax
0x4001fd:	cmp	qword ptr [rbp - 0x78], 0
0x400202:	jne	0x40020e
<Block for 0x40025d, 22 bytes>
0x40025d:	mov	rdx, rax
0x400260:	mov	rcx, qword ptr [rbp - 0x80]
0x400264:	lea	rax, [rbp - 0x70]
0x400268:	mov	rsi, rcx
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500020
<Block for 0x400204, 10 bytes>
0x400204:	mov	edi, 0xffffffff
0x400209:	call	0x500008
<Block for 0x40020e, 22 bytes>
0x40020e:	mov	rax, qword ptr [rbp - 0x78]
0x400212:	mov	edx, 0x63
0x400217:	mov	esi, 0x41
0x40021c:	mov	rdi, rax
0x40021f:	call	0x500010
<Block for 0x400273, 16 bytes>
0x400273:	mov	byte ptr [rbp - 0xd], 0
0x400277:	lea	rax, [rbp - 0x70]
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500028
<Block for 0x400224, 41 bytes>
0x400224:	mov	rax, qword ptr [rbp - 0x78]
0x400228:	add	rax, 0x63
0x40022c:	mov	byte ptr [rax], 0
0x40022f:	mov	rax, qword ptr [rbp - 0x78]
0x400233:	mov	qword ptr [rbp - 0x80], rax
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	edx, 0x63
0x400240:	mov	esi, 0x43
0x400245:	mov	rdi, rax
0x400248:	call	0x500010
<Block for 0x400283, 16 bytes>
0x400283:	nop	
0x400284:	mov	rax, qword ptr [rbp - 8]
0x400288:	xor	rax, qword ptr fs:[0x28]
0x400291:	je	0x400298
<Block for 0x400298, 2 bytes>
0x400298:	leave	
0x400299:	ret	
<Block for 0x400293, 5 bytes>
0x400293:	call	0x500030
