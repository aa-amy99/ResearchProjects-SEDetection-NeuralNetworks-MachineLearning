<Block for 0x400066, 59 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x20
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	mov	dword ptr [rbp - 0x1c], 0x64
0x400088:	mov	dword ptr [rbp - 0x10], 0
0x40008f:	mov	dword ptr [rbp - 0xc], 0
0x400096:	mov	eax, dword ptr [rip + 0xc4]
0x40009c:	cmp	eax, 5
0x40009f:	je	0x4000af
<Block for 0x4000af, 20 bytes>
0x4000af:	lea	rax, [rbp - 0x10]
0x4000b3:	mov	qword ptr [rbp - 0x18], rax
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0xbc]
0x4000a8:	call	0x500010
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000ad, 2 bytes>
0x4000ad:	jmp	0x4000b7
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500008
<Block for 0x4000b7, 12 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
