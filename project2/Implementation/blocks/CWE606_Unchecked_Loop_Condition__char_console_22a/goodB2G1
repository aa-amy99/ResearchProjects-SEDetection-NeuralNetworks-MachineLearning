<Block for 0x400166, 150 bytes>
0x400166:	endbr64	
0x40016a:	push	rbp
0x40016b:	mov	rbp, rsp
0x40016e:	add	rsp, -0x80
0x400172:	mov	rax, qword ptr fs:[0x28]
0x40017b:	mov	qword ptr [rbp - 8], rax
0x40017f:	xor	eax, eax
0x400181:	mov	qword ptr [rbp - 0x70], 0
0x400189:	mov	qword ptr [rbp - 0x68], 0
0x400191:	mov	qword ptr [rbp - 0x60], 0
0x400199:	mov	qword ptr [rbp - 0x58], 0
0x4001a1:	mov	qword ptr [rbp - 0x50], 0
0x4001a9:	mov	qword ptr [rbp - 0x48], 0
0x4001b1:	mov	qword ptr [rbp - 0x40], 0
0x4001b9:	mov	qword ptr [rbp - 0x38], 0
0x4001c1:	mov	qword ptr [rbp - 0x30], 0
0x4001c9:	mov	qword ptr [rbp - 0x28], 0
0x4001d1:	mov	qword ptr [rbp - 0x20], 0
0x4001d9:	mov	qword ptr [rbp - 0x18], 0
0x4001e1:	mov	dword ptr [rbp - 0x10], 0
0x4001e8:	lea	rax, [rbp - 0x70]
0x4001ec:	mov	qword ptr [rbp - 0x80], rax
0x4001f0:	mov	rax, qword ptr [rbp - 0x80]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x500000
<Block for 0x4001fc, 23 bytes>
0x4001fc:	mov	qword ptr [rbp - 0x78], rax
0x400200:	mov	eax, 0x64
0x400205:	sub	rax, qword ptr [rbp - 0x78]
0x400209:	cmp	rax, 1
0x40020d:	jbe	0x40029f
<Block for 0x40029f, 22 bytes>
0x40029f:	mov	dword ptr [rip + 0x27b], 0
0x4002a9:	mov	rax, qword ptr [rbp - 0x80]
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x500030
<Block for 0x400213, 44 bytes>
0x400213:	mov	rax, qword ptr [rip + 0xffdee]
0x40021a:	mov	rdx, qword ptr [rbp - 0x78]
0x40021e:	mov	ecx, 0x64
0x400223:	sub	ecx, edx
0x400225:	mov	edx, ecx
0x400227:	mov	esi, edx
0x400229:	mov	rcx, qword ptr [rbp - 0x80]
0x40022d:	mov	rdx, qword ptr [rbp - 0x78]
0x400231:	add	rcx, rdx
0x400234:	mov	rdx, rax
0x400237:	mov	rdi, rcx
0x40023a:	call	0x500010
<Block for 0x4002b5, 16 bytes>
0x4002b5:	nop	
0x4002b6:	mov	rax, qword ptr [rbp - 8]
0x4002ba:	xor	rax, qword ptr fs:[0x28]
0x4002c3:	je	0x4002ca
<Block for 0x40023f, 5 bytes>
0x40023f:	test	rax, rax
0x400242:	je	0x400285
<Block for 0x4002ca, 2 bytes>
0x4002ca:	leave	
0x4002cb:	ret	
<Block for 0x4002c5, 5 bytes>
0x4002c5:	call	0x500028
<Block for 0x400285, 12 bytes>
0x400285:	lea	rdi, [rip + 0x2a4]
0x40028c:	call	0x500018
<Block for 0x400244, 12 bytes>
0x400244:	mov	rax, qword ptr [rbp - 0x80]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500000
<Block for 0x400291, 36 bytes>
0x400291:	mov	rdx, qword ptr [rbp - 0x80]
0x400295:	mov	rax, qword ptr [rbp - 0x78]
0x400299:	add	rax, rdx
0x40029c:	mov	byte ptr [rax], 0
0x40029f:	mov	dword ptr [rip + 0x27b], 0
0x4002a9:	mov	rax, qword ptr [rbp - 0x80]
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x500030
<Block for 0x400250, 11 bytes>
0x400250:	mov	qword ptr [rbp - 0x78], rax
0x400254:	cmp	qword ptr [rbp - 0x78], 0
0x400259:	je	0x40029f
<Block for 0x40025b, 22 bytes>
0x40025b:	mov	rax, qword ptr [rbp - 0x78]
0x40025f:	lea	rdx, [rax - 1]
0x400263:	mov	rax, qword ptr [rbp - 0x80]
0x400267:	add	rax, rdx
0x40026a:	movzx	eax, byte ptr [rax]
0x40026d:	cmp	al, 0xa
0x40026f:	jne	0x40029f
<Block for 0x400271, 20 bytes>
0x400271:	mov	rax, qword ptr [rbp - 0x78]
0x400275:	lea	rdx, [rax - 1]
0x400279:	mov	rax, qword ptr [rbp - 0x80]
0x40027d:	add	rax, rdx
0x400280:	mov	byte ptr [rax], 0
0x400283:	jmp	0x40029f
