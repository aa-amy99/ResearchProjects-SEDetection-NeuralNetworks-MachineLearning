<Block for 0x4002cc, 150 bytes>
0x4002cc:	endbr64	
0x4002d0:	push	rbp
0x4002d1:	mov	rbp, rsp
0x4002d4:	add	rsp, -0x80
0x4002d8:	mov	rax, qword ptr fs:[0x28]
0x4002e1:	mov	qword ptr [rbp - 8], rax
0x4002e5:	xor	eax, eax
0x4002e7:	mov	qword ptr [rbp - 0x70], 0
0x4002ef:	mov	qword ptr [rbp - 0x68], 0
0x4002f7:	mov	qword ptr [rbp - 0x60], 0
0x4002ff:	mov	qword ptr [rbp - 0x58], 0
0x400307:	mov	qword ptr [rbp - 0x50], 0
0x40030f:	mov	qword ptr [rbp - 0x48], 0
0x400317:	mov	qword ptr [rbp - 0x40], 0
0x40031f:	mov	qword ptr [rbp - 0x38], 0
0x400327:	mov	qword ptr [rbp - 0x30], 0
0x40032f:	mov	qword ptr [rbp - 0x28], 0
0x400337:	mov	qword ptr [rbp - 0x20], 0
0x40033f:	mov	qword ptr [rbp - 0x18], 0
0x400347:	mov	dword ptr [rbp - 0x10], 0
0x40034e:	lea	rax, [rbp - 0x70]
0x400352:	mov	qword ptr [rbp - 0x80], rax
0x400356:	mov	rax, qword ptr [rbp - 0x80]
0x40035a:	mov	rdi, rax
0x40035d:	call	0x500000
<Block for 0x400362, 23 bytes>
0x400362:	mov	qword ptr [rbp - 0x78], rax
0x400366:	mov	eax, 0x64
0x40036b:	sub	rax, qword ptr [rbp - 0x78]
0x40036f:	cmp	rax, 1
0x400373:	jbe	0x400405
<Block for 0x400405, 22 bytes>
0x400405:	mov	dword ptr [rip + 0x119], 1
0x40040f:	mov	rax, qword ptr [rbp - 0x80]
0x400413:	mov	rdi, rax
0x400416:	call	0x500038
<Block for 0x400379, 44 bytes>
0x400379:	mov	rax, qword ptr [rip + 0xffc88]
0x400380:	mov	rdx, qword ptr [rbp - 0x78]
0x400384:	mov	ecx, 0x64
0x400389:	sub	ecx, edx
0x40038b:	mov	edx, ecx
0x40038d:	mov	esi, edx
0x40038f:	mov	rcx, qword ptr [rbp - 0x80]
0x400393:	mov	rdx, qword ptr [rbp - 0x78]
0x400397:	add	rcx, rdx
0x40039a:	mov	rdx, rax
0x40039d:	mov	rdi, rcx
0x4003a0:	call	0x500010
<Block for 0x40041b, 16 bytes>
0x40041b:	nop	
0x40041c:	mov	rax, qword ptr [rbp - 8]
0x400420:	xor	rax, qword ptr fs:[0x28]
0x400429:	je	0x400430
<Block for 0x4003a5, 5 bytes>
0x4003a5:	test	rax, rax
0x4003a8:	je	0x4003eb
<Block for 0x400430, 2 bytes>
0x400430:	leave	
0x400431:	ret	
<Block for 0x40042b, 5 bytes>
0x40042b:	call	0x500028
<Block for 0x4003eb, 12 bytes>
0x4003eb:	lea	rdi, [rip + 0x13e]
0x4003f2:	call	0x500018
<Block for 0x4003aa, 12 bytes>
0x4003aa:	mov	rax, qword ptr [rbp - 0x80]
0x4003ae:	mov	rdi, rax
0x4003b1:	call	0x500000
<Block for 0x4003f7, 36 bytes>
0x4003f7:	mov	rdx, qword ptr [rbp - 0x80]
0x4003fb:	mov	rax, qword ptr [rbp - 0x78]
0x4003ff:	add	rax, rdx
0x400402:	mov	byte ptr [rax], 0
0x400405:	mov	dword ptr [rip + 0x119], 1
0x40040f:	mov	rax, qword ptr [rbp - 0x80]
0x400413:	mov	rdi, rax
0x400416:	call	0x500038
<Block for 0x4003b6, 11 bytes>
0x4003b6:	mov	qword ptr [rbp - 0x78], rax
0x4003ba:	cmp	qword ptr [rbp - 0x78], 0
0x4003bf:	je	0x400405
<Block for 0x4003c1, 22 bytes>
0x4003c1:	mov	rax, qword ptr [rbp - 0x78]
0x4003c5:	lea	rdx, [rax - 1]
0x4003c9:	mov	rax, qword ptr [rbp - 0x80]
0x4003cd:	add	rax, rdx
0x4003d0:	movzx	eax, byte ptr [rax]
0x4003d3:	cmp	al, 0xa
0x4003d5:	jne	0x400405
<Block for 0x4003d7, 20 bytes>
0x4003d7:	mov	rax, qword ptr [rbp - 0x78]
0x4003db:	lea	rdx, [rax - 1]
0x4003df:	mov	rax, qword ptr [rbp - 0x80]
0x4003e3:	add	rax, rdx
0x4003e6:	mov	byte ptr [rax], 0
0x4003e9:	jmp	0x400405
