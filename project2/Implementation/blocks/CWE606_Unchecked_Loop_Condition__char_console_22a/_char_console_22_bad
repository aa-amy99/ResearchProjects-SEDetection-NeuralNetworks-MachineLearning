<Block for 0x400000, 150 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x70], 0
0x400023:	mov	qword ptr [rbp - 0x68], 0
0x40002b:	mov	qword ptr [rbp - 0x60], 0
0x400033:	mov	qword ptr [rbp - 0x58], 0
0x40003b:	mov	qword ptr [rbp - 0x50], 0
0x400043:	mov	qword ptr [rbp - 0x48], 0
0x40004b:	mov	qword ptr [rbp - 0x40], 0
0x400053:	mov	qword ptr [rbp - 0x38], 0
0x40005b:	mov	qword ptr [rbp - 0x30], 0
0x400063:	mov	qword ptr [rbp - 0x28], 0
0x40006b:	mov	qword ptr [rbp - 0x20], 0
0x400073:	mov	qword ptr [rbp - 0x18], 0
0x40007b:	mov	dword ptr [rbp - 0x10], 0
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	mov	qword ptr [rbp - 0x80], rax
0x40008a:	mov	rax, qword ptr [rbp - 0x80]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500000
<Block for 0x400096, 23 bytes>
0x400096:	mov	qword ptr [rbp - 0x78], rax
0x40009a:	mov	eax, 0x64
0x40009f:	sub	rax, qword ptr [rbp - 0x78]
0x4000a3:	cmp	rax, 1
0x4000a7:	jbe	0x400139
<Block for 0x400139, 22 bytes>
0x400139:	mov	dword ptr [rip + 0x3dd], 1
0x400143:	mov	rax, qword ptr [rbp - 0x80]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500020
<Block for 0x4000ad, 44 bytes>
0x4000ad:	mov	rax, qword ptr [rip + 0xfff54]
0x4000b4:	mov	rdx, qword ptr [rbp - 0x78]
0x4000b8:	mov	ecx, 0x64
0x4000bd:	sub	ecx, edx
0x4000bf:	mov	edx, ecx
0x4000c1:	mov	esi, edx
0x4000c3:	mov	rcx, qword ptr [rbp - 0x80]
0x4000c7:	mov	rdx, qword ptr [rbp - 0x78]
0x4000cb:	add	rcx, rdx
0x4000ce:	mov	rdx, rax
0x4000d1:	mov	rdi, rcx
0x4000d4:	call	0x500010
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x4000d9, 5 bytes>
0x4000d9:	test	rax, rax
0x4000dc:	je	0x40011f
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500028
<Block for 0x40011f, 12 bytes>
0x40011f:	lea	rdi, [rip + 0x40a]
0x400126:	call	0x500018
<Block for 0x4000de, 12 bytes>
0x4000de:	mov	rax, qword ptr [rbp - 0x80]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500000
<Block for 0x40012b, 36 bytes>
0x40012b:	mov	rdx, qword ptr [rbp - 0x80]
0x40012f:	mov	rax, qword ptr [rbp - 0x78]
0x400133:	add	rax, rdx
0x400136:	mov	byte ptr [rax], 0
0x400139:	mov	dword ptr [rip + 0x3dd], 1
0x400143:	mov	rax, qword ptr [rbp - 0x80]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500020
<Block for 0x4000ea, 11 bytes>
0x4000ea:	mov	qword ptr [rbp - 0x78], rax
0x4000ee:	cmp	qword ptr [rbp - 0x78], 0
0x4000f3:	je	0x400139
<Block for 0x4000f5, 22 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 0x78]
0x4000f9:	lea	rdx, [rax - 1]
0x4000fd:	mov	rax, qword ptr [rbp - 0x80]
0x400101:	add	rax, rdx
0x400104:	movzx	eax, byte ptr [rax]
0x400107:	cmp	al, 0xa
0x400109:	jne	0x400139
<Block for 0x40010b, 20 bytes>
0x40010b:	mov	rax, qword ptr [rbp - 0x78]
0x40010f:	lea	rdx, [rax - 1]
0x400113:	mov	rax, qword ptr [rbp - 0x80]
0x400117:	add	rax, rdx
0x40011a:	mov	byte ptr [rax], 0
0x40011d:	jmp	0x400139
