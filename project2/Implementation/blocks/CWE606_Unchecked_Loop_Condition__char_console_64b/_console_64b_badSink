<Block for 0x400000, 78 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	qword ptr [rbp - 0x38], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x38]
0x400023:	mov	qword ptr [rbp - 0x18], rax
0x400027:	mov	rax, qword ptr [rbp - 0x18]
0x40002b:	mov	rax, qword ptr [rax]
0x40002e:	mov	qword ptr [rbp - 0x10], rax
0x400032:	lea	rdx, [rbp - 0x24]
0x400036:	mov	rax, qword ptr [rbp - 0x10]
0x40003a:	lea	rsi, [rip + 0x185]
0x400041:	mov	rdi, rax
0x400044:	mov	eax, 0
0x400049:	call	0x500000
<Block for 0x40004e, 5 bytes>
0x40004e:	cmp	eax, 1
0x400051:	jne	0x40007d
<Block for 0x400053, 16 bytes>
0x400053:	mov	dword ptr [rbp - 0x1c], 0
0x40005a:	mov	dword ptr [rbp - 0x20], 0
0x400061:	jmp	0x40006b
<Block for 0x40007d, 16 bytes>
0x40007d:	nop	
0x40007e:	mov	rax, qword ptr [rbp - 8]
0x400082:	xor	rax, qword ptr fs:[0x28]
0x40008b:	je	0x400092
<Block for 0x40006b, 8 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0x24]
0x40006e:	cmp	dword ptr [rbp - 0x20], eax
0x400071:	jl	0x400063
<Block for 0x400092, 2 bytes>
0x400092:	leave	
0x400093:	ret	
<Block for 0x40008d, 5 bytes>
0x40008d:	call	0x500010
<Block for 0x400063, 16 bytes>
0x400063:	add	dword ptr [rbp - 0x1c], 1
0x400067:	add	dword ptr [rbp - 0x20], 1
0x40006b:	mov	eax, dword ptr [rbp - 0x24]
0x40006e:	cmp	dword ptr [rbp - 0x20], eax
0x400071:	jl	0x400063
<Block for 0x400073, 10 bytes>
0x400073:	mov	eax, dword ptr [rbp - 0x1c]
0x400076:	mov	edi, eax
0x400078:	call	0x500008
