<Block for 0x400091, 22 bytes>
0x400091:	endbr64	
0x400095:	push	rbp
0x400096:	mov	rbp, rsp
0x400099:	sub	rsp, 0x10
0x40009d:	mov	eax, 0
0x4000a2:	call	0x500018
<Block for 0x4000a7, 4 bytes>
0x4000a7:	test	eax, eax
0x4000a9:	je	0x4000b9
<Block for 0x4000b9, 16 bytes>
0x4000b9:	lea	rax, [rip + 0x11e]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	call	0x500008
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x149]
0x4000b2:	call	0x500010
<Block for 0x4000c9, 55 bytes>
0x4000c9:	mov	edx, eax
0x4000cb:	movsxd	rax, edx
0x4000ce:	imul	rax, rax, 0x55555556
0x4000d5:	shr	rax, 0x20
0x4000d9:	mov	rcx, rax
0x4000dc:	mov	eax, edx
0x4000de:	sar	eax, 0x1f
0x4000e1:	mov	esi, ecx
0x4000e3:	sub	esi, eax
0x4000e5:	mov	eax, esi
0x4000e7:	mov	dword ptr [rbp - 0xc], eax
0x4000ea:	mov	ecx, dword ptr [rbp - 0xc]
0x4000ed:	mov	eax, ecx
0x4000ef:	add	eax, eax
0x4000f1:	add	eax, ecx
0x4000f3:	sub	edx, eax
0x4000f5:	mov	eax, edx
0x4000f7:	mov	dword ptr [rbp - 0xc], eax
0x4000fa:	cmp	dword ptr [rbp - 0xc], 0
0x4000fe:	je	0x400108
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x40012d
<Block for 0x400108, 13 bytes>
0x400108:	lea	rax, [rip + 0xe8]
0x40010f:	mov	qword ptr [rbp - 8], rax
0x400113:	jmp	0x400121
<Block for 0x400100, 6 bytes>
0x400100:	cmp	dword ptr [rbp - 0xc], 1
0x400104:	je	0x400115
<Block for 0x40012d, 2 bytes>
0x40012d:	leave	
0x40012e:	ret	
<Block for 0x400121, 12 bytes>
0x400121:	mov	rax, qword ptr [rbp - 8]
0x400125:	mov	rdi, rax
0x400128:	call	0x500010
<Block for 0x400115, 24 bytes>
0x400115:	lea	rax, [rip + 0xdd]
0x40011c:	mov	qword ptr [rbp - 8], rax
0x400120:	nop	
0x400121:	mov	rax, qword ptr [rbp - 8]
0x400125:	mov	rdi, rax
0x400128:	call	0x500010
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x40012d
