<Block for 0x40012f, 22 bytes>
0x40012f:	endbr64	
0x400133:	push	rbp
0x400134:	mov	rbp, rsp
0x400137:	sub	rsp, 0x10
0x40013b:	mov	eax, 0
0x400140:	call	0x500000
<Block for 0x400145, 4 bytes>
0x400145:	test	eax, eax
0x400147:	je	0x4001bd
<Block for 0x4001bd, 2 bytes>
0x4001bd:	leave	
0x4001be:	ret	
<Block for 0x400149, 16 bytes>
0x400149:	lea	rax, [rip + 0x8e]
0x400150:	mov	qword ptr [rbp - 8], rax
0x400154:	call	0x500008
<Block for 0x400159, 55 bytes>
0x400159:	mov	edx, eax
0x40015b:	movsxd	rax, edx
0x40015e:	imul	rax, rax, 0x55555556
0x400165:	shr	rax, 0x20
0x400169:	mov	rcx, rax
0x40016c:	mov	eax, edx
0x40016e:	sar	eax, 0x1f
0x400171:	mov	esi, ecx
0x400173:	sub	esi, eax
0x400175:	mov	eax, esi
0x400177:	mov	dword ptr [rbp - 0xc], eax
0x40017a:	mov	ecx, dword ptr [rbp - 0xc]
0x40017d:	mov	eax, ecx
0x40017f:	add	eax, eax
0x400181:	add	eax, ecx
0x400183:	sub	edx, eax
0x400185:	mov	eax, edx
0x400187:	mov	dword ptr [rbp - 0xc], eax
0x40018a:	cmp	dword ptr [rbp - 0xc], 0
0x40018e:	je	0x400198
<Block for 0x400198, 13 bytes>
0x400198:	lea	rax, [rip + 0x58]
0x40019f:	mov	qword ptr [rbp - 8], rax
0x4001a3:	jmp	0x4001b1
<Block for 0x400190, 6 bytes>
0x400190:	cmp	dword ptr [rbp - 0xc], 1
0x400194:	je	0x4001a5
<Block for 0x4001b1, 12 bytes>
0x4001b1:	mov	rax, qword ptr [rbp - 8]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500010
<Block for 0x4001a5, 24 bytes>
0x4001a5:	lea	rax, [rip + 0x4d]
0x4001ac:	mov	qword ptr [rbp - 8], rax
0x4001b0:	nop	
0x4001b1:	mov	rax, qword ptr [rbp - 8]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500010
<Block for 0x400196, 2 bytes>
0x400196:	jmp	0x4001bd
