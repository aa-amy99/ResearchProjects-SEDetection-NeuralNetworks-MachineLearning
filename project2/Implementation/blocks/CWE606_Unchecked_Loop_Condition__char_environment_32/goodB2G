<Block for 0x40030f, 204 bytes>
0x40030f:	endbr64	
0x400313:	push	rbp
0x400314:	mov	rbp, rsp
0x400317:	sub	rsp, 0xc0
0x40031e:	mov	rax, qword ptr fs:[0x28]
0x400327:	mov	qword ptr [rbp - 8], rax
0x40032b:	xor	eax, eax
0x40032d:	lea	rax, [rbp - 0xa8]
0x400334:	mov	qword ptr [rbp - 0xa0], rax
0x40033b:	lea	rax, [rbp - 0xa8]
0x400342:	mov	qword ptr [rbp - 0x98], rax
0x400349:	mov	qword ptr [rbp - 0x70], 0
0x400351:	mov	qword ptr [rbp - 0x68], 0
0x400359:	mov	qword ptr [rbp - 0x60], 0
0x400361:	mov	qword ptr [rbp - 0x58], 0
0x400369:	mov	qword ptr [rbp - 0x50], 0
0x400371:	mov	qword ptr [rbp - 0x48], 0
0x400379:	mov	qword ptr [rbp - 0x40], 0
0x400381:	mov	qword ptr [rbp - 0x38], 0
0x400389:	mov	qword ptr [rbp - 0x30], 0
0x400391:	mov	qword ptr [rbp - 0x28], 0
0x400399:	mov	qword ptr [rbp - 0x20], 0
0x4003a1:	mov	qword ptr [rbp - 0x18], 0
0x4003a9:	mov	dword ptr [rbp - 0x10], 0
0x4003b0:	lea	rax, [rbp - 0x70]
0x4003b4:	mov	qword ptr [rbp - 0xa8], rax
0x4003bb:	mov	rax, qword ptr [rbp - 0xa0]
0x4003c2:	mov	rax, qword ptr [rax]
0x4003c5:	mov	qword ptr [rbp - 0x90], rax
0x4003cc:	mov	rax, qword ptr [rbp - 0x90]
0x4003d3:	mov	rdi, rax
0x4003d6:	call	0x500000
<Block for 0x4003db, 19 bytes>
0x4003db:	mov	qword ptr [rbp - 0x88], rax
0x4003e2:	lea	rdi, [rip + 0x104]
0x4003e9:	call	0x500008
<Block for 0x4003ee, 11 bytes>
0x4003ee:	mov	qword ptr [rbp - 0x80], rax
0x4003f2:	cmp	qword ptr [rbp - 0x80], 0
0x4003f7:	je	0x400428
<Block for 0x400428, 62 bytes>
0x400428:	mov	rax, qword ptr [rbp - 0xa0]
0x40042f:	mov	rdx, qword ptr [rbp - 0x90]
0x400436:	mov	qword ptr [rax], rdx
0x400439:	mov	rax, qword ptr [rbp - 0x98]
0x400440:	mov	rax, qword ptr [rax]
0x400443:	mov	qword ptr [rbp - 0x78], rax
0x400447:	lea	rdx, [rbp - 0xb4]
0x40044e:	mov	rax, qword ptr [rbp - 0x78]
0x400452:	lea	rsi, [rip + 0x98]
0x400459:	mov	rdi, rax
0x40045c:	mov	eax, 0
0x400461:	call	0x500018
<Block for 0x4003f9, 47 bytes>
0x4003f9:	mov	eax, 0x63
0x4003fe:	sub	rax, qword ptr [rbp - 0x88]
0x400405:	mov	rdx, rax
0x400408:	mov	rcx, qword ptr [rbp - 0x90]
0x40040f:	mov	rax, qword ptr [rbp - 0x88]
0x400416:	add	rcx, rax
0x400419:	mov	rax, qword ptr [rbp - 0x80]
0x40041d:	mov	rsi, rax
0x400420:	mov	rdi, rcx
0x400423:	call	0x500010
<Block for 0x400466, 5 bytes>
0x400466:	cmp	eax, 1
0x400469:	jne	0x4004b7
<Block for 0x40046b, 13 bytes>
0x40046b:	mov	eax, dword ptr [rbp - 0xb4]
0x400471:	cmp	eax, 0x270f
0x400476:	jg	0x4004b7
<Block for 0x4004b7, 16 bytes>
0x4004b7:	nop	
0x4004b8:	mov	rax, qword ptr [rbp - 8]
0x4004bc:	xor	rax, qword ptr fs:[0x28]
0x4004c5:	je	0x4004cc
<Block for 0x400478, 22 bytes>
0x400478:	mov	dword ptr [rbp - 0xac], 0
0x400482:	mov	dword ptr [rbp - 0xb0], 0
0x40048c:	jmp	0x40049c
<Block for 0x4004cc, 2 bytes>
0x4004cc:	leave	
0x4004cd:	ret	
<Block for 0x4004c7, 5 bytes>
0x4004c7:	call	0x500028
<Block for 0x40049c, 14 bytes>
0x40049c:	mov	eax, dword ptr [rbp - 0xb4]
0x4004a2:	cmp	dword ptr [rbp - 0xb0], eax
0x4004a8:	jl	0x40048e
<Block for 0x40048e, 28 bytes>
0x40048e:	add	dword ptr [rbp - 0xac], 1
0x400495:	add	dword ptr [rbp - 0xb0], 1
0x40049c:	mov	eax, dword ptr [rbp - 0xb4]
0x4004a2:	cmp	dword ptr [rbp - 0xb0], eax
0x4004a8:	jl	0x40048e
<Block for 0x4004aa, 13 bytes>
0x4004aa:	mov	eax, dword ptr [rbp - 0xac]
0x4004b0:	mov	edi, eax
0x4004b2:	call	0x500020
