<Block for 0x40007c, 23 bytes>
0x40007c:	endbr64	
0x400080:	push	rbp
0x400081:	mov	rbp, rsp
0x400084:	sub	rsp, 0x10
0x400088:	mov	eax, dword ptr [rip + 0x122]
0x40008e:	cmp	eax, 5
0x400091:	je	0x4000a1
<Block for 0x4000a1, 5 bytes>
0x4000a1:	call	0x500000
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0x12a]
0x40009a:	call	0x500008
<Block for 0x4000a6, 62 bytes>
0x4000a6:	mov	edx, eax
0x4000a8:	movsxd	rax, edx
0x4000ab:	imul	rax, rax, 0x55555556
0x4000b2:	shr	rax, 0x20
0x4000b6:	mov	rcx, rax
0x4000b9:	mov	eax, edx
0x4000bb:	sar	eax, 0x1f
0x4000be:	mov	esi, ecx
0x4000c0:	sub	esi, eax
0x4000c2:	mov	eax, esi
0x4000c4:	mov	dword ptr [rbp - 4], eax
0x4000c7:	mov	ecx, dword ptr [rbp - 4]
0x4000ca:	mov	eax, ecx
0x4000cc:	add	eax, eax
0x4000ce:	add	eax, ecx
0x4000d0:	sub	edx, eax
0x4000d2:	mov	eax, edx
0x4000d4:	mov	dword ptr [rbp - 4], eax
0x4000d7:	mov	dword ptr [rbp - 8], 0
0x4000de:	cmp	dword ptr [rbp - 4], 0
0x4000e2:	jne	0x4000f7
<Block for 0x40009f, 2 bytes>
0x40009f:	jmp	0x400109
<Block for 0x4000e4, 12 bytes>
0x4000e4:	lea	rdi, [rip + 0xc9]
0x4000eb:	call	0x500008
<Block for 0x4000f7, 6 bytes>
0x4000f7:	cmp	dword ptr [rbp - 8], 0
0x4000fb:	je	0x400109
<Block for 0x400109, 3 bytes>
0x400109:	nop	
0x40010a:	leave	
0x40010b:	ret	
<Block for 0x4000f0, 13 bytes>
0x4000f0:	mov	dword ptr [rbp - 8], 1
0x4000f7:	cmp	dword ptr [rbp - 8], 0
0x4000fb:	je	0x400109
<Block for 0x4000fd, 12 bytes>
0x4000fd:	lea	rdi, [rip + 0xb7]
0x400104:	call	0x500008
