<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	qword ptr [rbp - 0x18], rdi
0x400011:	mov	dword ptr [rbp - 0x1c], esi
0x400014:	mov	rax, qword ptr [rbp - 0x18]
0x400018:	mov	edx, dword ptr [rbp - 0x1c]
0x40001b:	mov	dword ptr [rax], edx
0x40001d:	call	0x500000
<Block for 0x400022, 7 bytes>
0x400022:	and	eax, 1
0x400025:	test	eax, eax
0x400027:	je	0x400048
<Block for 0x400048, 5 bytes>
0x400048:	call	0x500000
<Block for 0x400029, 5 bytes>
0x400029:	call	0x500000
<Block for 0x40004d, 10 bytes>
0x40004d:	shl	eax, 0x1e
0x400050:	mov	ebx, eax
0x400052:	call	0x500000
<Block for 0x40002e, 10 bytes>
0x40002e:	shl	eax, 0x1e
0x400031:	mov	ebx, eax
0x400033:	call	0x500000
<Block for 0x400057, 10 bytes>
0x400057:	shl	eax, 0xf
0x40005a:	xor	ebx, eax
0x40005c:	call	0x500000
<Block for 0x400038, 10 bytes>
0x400038:	shl	eax, 0xf
0x40003b:	xor	ebx, eax
0x40003d:	call	0x500000
<Block for 0x400061, 20 bytes>
0x400061:	xor	eax, ebx
0x400063:	not	eax
0x400065:	mov	edx, eax
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	mov	dword ptr [rax], edx
0x40006d:	nop	
0x40006e:	add	rsp, 0x18
0x400072:	pop	rbx
0x400073:	pop	rbp
0x400074:	ret	
<Block for 0x400042, 6 bytes>
0x400042:	xor	eax, ebx
0x400044:	mov	edx, eax
0x400046:	jmp	0x400067
<Block for 0x400067, 14 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	mov	dword ptr [rax], edx
0x40006d:	nop	
0x40006e:	add	rsp, 0x18
0x400072:	pop	rbx
0x400073:	pop	rbp
0x400074:	ret	
