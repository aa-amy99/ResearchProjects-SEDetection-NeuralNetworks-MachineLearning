<Block for 0x400076, 81 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x50
0x400082:	mov	qword ptr [rbp - 0x48], rdi
0x400086:	mov	rax, qword ptr fs:[0x28]
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	xor	eax, eax
0x400095:	mov	qword ptr [rbp - 0x30], 0
0x40009d:	mov	qword ptr [rbp - 0x28], 0
0x4000a5:	mov	qword ptr [rbp - 0x20], 0
0x4000ad:	mov	qword ptr [rbp - 0x18], 0
0x4000b5:	mov	qword ptr [rbp - 0x10], 0
0x4000bd:	mov	rax, qword ptr [rbp - 0x48]
0x4000c1:	mov	eax, dword ptr [rax]
0x4000c3:	test	eax, eax
0x4000c5:	js	0x400105
<Block for 0x400105, 12 bytes>
0x400105:	lea	rdi, [rip + 0x24]
0x40010c:	call	0x500010
<Block for 0x4000c7, 11 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x48]
0x4000cb:	mov	eax, dword ptr [rax]
0x4000cd:	cmp	eax, 9
0x4000d0:	jg	0x400105
<Block for 0x400111, 2 bytes>
0x400111:	jmp	0x400114
<Block for 0x4000d2, 29 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x48]
0x4000d6:	mov	eax, dword ptr [rax]
0x4000d8:	cdqe	
0x4000da:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4000e2:	mov	dword ptr [rbp - 0x34], 0
0x4000e9:	cmp	dword ptr [rbp - 0x34], 9
0x4000ed:	jg	0x400113
<Block for 0x400114, 16 bytes>
0x400114:	nop	
0x400115:	mov	rax, qword ptr [rbp - 8]
0x400119:	xor	rax, qword ptr fs:[0x28]
0x400122:	je	0x400129
<Block for 0x4000ef, 16 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x34]
0x4000f2:	cdqe	
0x4000f4:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000f8:	mov	edi, eax
0x4000fa:	call	0x500008
<Block for 0x400113, 1 bytes>
0x400113:	nop	
<Block for 0x400129, 2 bytes>
0x400129:	leave	
0x40012a:	ret	
<Block for 0x400124, 5 bytes>
0x400124:	call	0x500018
<Block for 0x4000ff, 6 bytes>
0x4000ff:	add	dword ptr [rbp - 0x34], 1
0x400103:	jmp	0x4000e9
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x34], 9
0x4000ed:	jg	0x400113
