<Block for 0x4000d6, 57 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	sub	rsp, 0x90
0x4000e5:	mov	rax, qword ptr fs:[0x28]
0x4000ee:	mov	qword ptr [rbp - 8], rax
0x4000f2:	xor	eax, eax
0x4000f4:	mov	qword ptr [rbp - 0x80], 0
0x4000fc:	mov	dword ptr [rbp - 0x84], 0
0x400106:	cmp	dword ptr [rbp - 0x84], 0
0x40010d:	jg	0x40014f
<Block for 0x40010f, 10 bytes>
0x40010f:	mov	edi, 0x64
0x400114:	call	0x500000
<Block for 0x40014f, 22 bytes>
0x40014f:	lea	rax, [rbp - 0x70]
0x400153:	mov	edx, 0x63
0x400158:	mov	esi, 0x43
0x40015d:	mov	rdi, rax
0x400160:	call	0x500008
<Block for 0x400119, 26 bytes>
0x400119:	mov	qword ptr [rbp - 0x78], rax
0x40011d:	mov	rax, qword ptr [rbp - 0x78]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x41
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500008
<Block for 0x400165, 28 bytes>
0x400165:	mov	byte ptr [rbp - 0xd], 0
0x400169:	mov	rcx, qword ptr [rbp - 0x80]
0x40016d:	lea	rax, [rbp - 0x70]
0x400171:	mov	edx, 0x64
0x400176:	mov	rsi, rcx
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400133, 28 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x78]
0x400137:	add	rax, 0x63
0x40013b:	mov	byte ptr [rax], 0
0x40013e:	mov	rax, qword ptr [rbp - 0x78]
0x400142:	mov	qword ptr [rbp - 0x80], rax
0x400146:	add	dword ptr [rbp - 0x84], 1
0x40014d:	jmp	0x400106
<Block for 0x400181, 16 bytes>
0x400181:	mov	byte ptr [rbp - 0xd], 0
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500018
<Block for 0x400106, 9 bytes>
0x400106:	cmp	dword ptr [rbp - 0x84], 0
0x40010d:	jg	0x40014f
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500020
