<Block for 0x400032, 46 bytes>
0x400032:	endbr64	
0x400036:	push	rbp
0x400037:	mov	rbp, rsp
0x40003a:	sub	rsp, 0x10
0x40003e:	mov	rax, qword ptr fs:[0x28]
0x400047:	mov	qword ptr [rbp - 8], rax
0x40004b:	xor	eax, eax
0x40004d:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400054:	lea	rax, [rbp - 0xc]
0x400058:	mov	rdi, rax
0x40005b:	call	0x400000
<Block for 0x400060, 8 bytes>
0x400060:	mov	eax, dword ptr [rbp - 0xc]
0x400063:	cmp	eax, 5
0x400066:	jg	0x400087
<Block for 0x400068, 31 bytes>
0x400068:	lea	rcx, [rip + 0xd1]
0x40006f:	mov	edx, 0x29
0x400074:	lea	rsi, [rip + 0xfd]
0x40007b:	lea	rdi, [rip + 0x120]
0x400082:	call	0x500010
<Block for 0x400087, 16 bytes>
0x400087:	nop	
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	xor	rax, qword ptr fs:[0x28]
0x400095:	je	0x40009c
<Block for 0x40009c, 2 bytes>
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x400097, 5 bytes>
0x400097:	call	0x500018
