<Block for 0x4000b3, 30 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0x10
0x4000bf:	mov	qword ptr [rbp - 8], 0
0x4000c7:	mov	eax, 0
0x4000cc:	call	0x500000
<Block for 0x4000d1, 4 bytes>
0x4000d1:	test	eax, eax
0x4000d3:	je	0x400149
<Block for 0x400149, 10 bytes>
0x400149:	mov	eax, 0
0x40014e:	call	0x500028
<Block for 0x4000d5, 10 bytes>
0x4000d5:	mov	edi, 0x320
0x4000da:	call	0x500008
<Block for 0x400153, 4 bytes>
0x400153:	test	eax, eax
0x400155:	je	0x400163
<Block for 0x4000df, 11 bytes>
0x4000df:	mov	qword ptr [rbp - 8], rax
0x4000e3:	cmp	qword ptr [rbp - 8], 0
0x4000e8:	jne	0x4000f4
<Block for 0x400163, 3 bytes>
0x400163:	nop	
0x400164:	leave	
0x400165:	ret	
<Block for 0x400157, 12 bytes>
0x400157:	lea	rdi, [rip + 0x23a]
0x40015e:	call	0x500030
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	edi, 0xffffffff
0x4000ef:	call	0x500010
<Block for 0x4000f4, 10 bytes>
0x4000f4:	mov	qword ptr [rbp - 0x10], 0
0x4000fc:	jmp	0x400136
<Block for 0x400136, 7 bytes>
0x400136:	cmp	qword ptr [rbp - 0x10], 0x63
0x40013b:	jbe	0x4000fe
<Block for 0x4000fe, 63 bytes>
0x4000fe:	mov	rax, qword ptr [rbp - 0x10]
0x400102:	lea	rdx, [rax*8]
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	add	rax, rdx
0x400111:	mov	dword ptr [rax], 1
0x400117:	mov	rax, qword ptr [rbp - 0x10]
0x40011b:	lea	rdx, [rax*8]
0x400123:	mov	rax, qword ptr [rbp - 8]
0x400127:	add	rax, rdx
0x40012a:	mov	dword ptr [rax + 4], 2
0x400131:	add	qword ptr [rbp - 0x10], 1
0x400136:	cmp	qword ptr [rbp - 0x10], 0x63
0x40013b:	jbe	0x4000fe
<Block for 0x40013d, 12 bytes>
0x40013d:	mov	rax, qword ptr [rbp - 8]
0x400141:	mov	rdi, rax
0x400144:	call	0x500018
