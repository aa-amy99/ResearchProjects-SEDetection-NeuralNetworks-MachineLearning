<Block for 0x400100, 82 bytes>
0x400100:	endbr64	
0x400104:	push	rbp
0x400105:	mov	rbp, rsp
0x400108:	sub	rsp, 0x120
0x40010f:	mov	rax, qword ptr fs:[0x28]
0x400118:	mov	qword ptr [rbp - 8], rax
0x40011c:	xor	eax, eax
0x40011e:	movabs	rax, 0x3d48544150
0x400128:	mov	edx, 0
0x40012d:	mov	qword ptr [rbp - 0x110], rax
0x400134:	mov	qword ptr [rbp - 0x108], rdx
0x40013b:	lea	rdx, [rbp - 0x100]
0x400142:	mov	eax, 0
0x400147:	mov	ecx, 0x1d
0x40014c:	mov	rdi, rdx
0x40014f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400152, 35 bytes>
0x400152:	mov	rdx, rdi
0x400155:	mov	word ptr [rdx], ax
0x400158:	add	rdx, 2
0x40015c:	lea	rax, [rbp - 0x110]
0x400163:	mov	qword ptr [rbp - 0x118], rax
0x40016a:	mov	eax, dword ptr [rip + 0xffe90]
0x400170:	cmp	eax, 5
0x400173:	je	0x400183
<Block for 0x40014f, 3 bytes>
0x40014f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400183, 27 bytes>
0x400183:	mov	rax, qword ptr [rbp - 0x118]
0x40018a:	mov	rcx, -1
0x400191:	mov	rdx, rax
0x400194:	mov	eax, 0
0x400199:	mov	rdi, rdx
0x40019c:	repne scasb	al, byte ptr [rdi]
<Block for 0x400175, 12 bytes>
0x400175:	lea	rdi, [rip + 0x15d]
0x40017c:	call	0x500030
<Block for 0x40019e, 45 bytes>
0x40019e:	mov	rax, rcx
0x4001a1:	not	rax
0x4001a4:	lea	rdx, [rax - 1]
0x4001a8:	mov	rax, qword ptr [rbp - 0x118]
0x4001af:	add	rax, rdx
0x4001b2:	mov	dword ptr [rax], 0x6e69622f
0x4001b8:	mov	byte ptr [rax + 4], 0
0x4001bc:	mov	rax, qword ptr [rbp - 0x118]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500020
<Block for 0x40019c, 2 bytes>
0x40019c:	repne scasb	al, byte ptr [rdi]
<Block for 0x400181, 2 bytes>
0x400181:	jmp	0x4001bc
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x4001bc, 15 bytes>
0x4001bc:	mov	rax, qword ptr [rbp - 0x118]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500020
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500028
