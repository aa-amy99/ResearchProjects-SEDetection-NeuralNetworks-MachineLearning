<Block for 0x4000a8, 47 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	add	rsp, -0x80
0x4000b4:	mov	rax, qword ptr fs:[0x28]
0x4000bd:	mov	qword ptr [rbp - 8], rax
0x4000c1:	xor	eax, eax
0x4000c3:	mov	qword ptr [rbp - 0x80], 0
0x4000cb:	lea	rax, [rbp - 0x80]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500020
<Block for 0x4000d7, 22 bytes>
0x4000d7:	lea	rax, [rbp - 0x70]
0x4000db:	mov	edx, 0x63
0x4000e0:	mov	esi, 0x43
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500008
<Block for 0x4000ed, 19 bytes>
0x4000ed:	mov	byte ptr [rbp - 0xd], 0
0x4000f1:	mov	qword ptr [rbp - 0x78], 0
0x4000f9:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000fe:	ja	0x400122
<Block for 0x400100, 34 bytes>
0x400100:	mov	rdx, qword ptr [rbp - 0x80]
0x400104:	mov	rax, qword ptr [rbp - 0x78]
0x400108:	add	rdx, rax
0x40010b:	lea	rcx, [rbp - 0x70]
0x40010f:	mov	rax, qword ptr [rbp - 0x78]
0x400113:	add	rax, rcx
0x400116:	movzx	eax, byte ptr [rax]
0x400119:	mov	byte ptr [rdx], al
0x40011b:	add	qword ptr [rbp - 0x78], 1
0x400120:	jmp	0x4000f9
<Block for 0x400122, 23 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x80]
0x400126:	add	rax, 0x63
0x40012a:	mov	byte ptr [rax], 0
0x40012d:	mov	rax, qword ptr [rbp - 0x80]
0x400131:	mov	rdi, rax
0x400134:	call	0x500010
<Block for 0x4000f9, 7 bytes>
0x4000f9:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000fe:	ja	0x400122
<Block for 0x400139, 16 bytes>
0x400139:	nop	
0x40013a:	mov	rax, qword ptr [rbp - 8]
0x40013e:	xor	rax, qword ptr fs:[0x28]
0x400147:	je	0x40014e
<Block for 0x40014e, 2 bytes>
0x40014e:	leave	
0x40014f:	ret	
<Block for 0x400149, 5 bytes>
0x400149:	call	0x500018
