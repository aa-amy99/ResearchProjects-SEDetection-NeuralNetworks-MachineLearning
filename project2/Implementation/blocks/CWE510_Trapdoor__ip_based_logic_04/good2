<Block for 0x400303, 40 bytes>
0x400303:	endbr64	
0x400307:	push	rbp
0x400308:	mov	rbp, rsp
0x40030b:	sub	rsp, 0x30
0x40030f:	mov	rax, qword ptr fs:[0x28]
0x400318:	mov	qword ptr [rbp - 8], rax
0x40031c:	xor	eax, eax
0x40031e:	mov	eax, 1
0x400323:	test	eax, eax
0x400325:	je	0x400430
<Block for 0x400430, 16 bytes>
0x400430:	nop	
0x400431:	mov	rax, qword ptr [rbp - 8]
0x400435:	xor	rax, qword ptr fs:[0x28]
0x40043e:	je	0x400445
<Block for 0x40032b, 34 bytes>
0x40032b:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400332:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400339:	mov	edx, 6
0x40033e:	mov	esi, 1
0x400343:	mov	edi, 2
0x400348:	call	0x500000
<Block for 0x400445, 2 bytes>
0x400445:	leave	
0x400446:	ret	
<Block for 0x400440, 5 bytes>
0x400440:	call	0x500060
<Block for 0x40034d, 13 bytes>
0x40034d:	mov	dword ptr [rbp - 0x24], eax
0x400350:	cmp	dword ptr [rbp - 0x24], -1
0x400354:	je	0x400406
<Block for 0x400406, 3 bytes>
0x400406:	nop	
0x400407:	jmp	0x400410
<Block for 0x40035a, 22 bytes>
0x40035a:	lea	rax, [rbp - 0x20]
0x40035e:	mov	edx, 0x10
0x400363:	mov	esi, 0
0x400368:	mov	rdi, rax
0x40036b:	call	0x500008
<Block for 0x400410, 6 bytes>
0x400410:	cmp	dword ptr [rbp - 0x24], -1
0x400414:	je	0x400420
<Block for 0x400370, 23 bytes>
0x400370:	mov	word ptr [rbp - 0x20], 2
0x400376:	mov	dword ptr [rbp - 0x1c], 0
0x40037d:	mov	edi, 0x4e20
0x400382:	call	0x500010
<Block for 0x400420, 6 bytes>
0x400420:	cmp	dword ptr [rbp - 0x28], -1
0x400424:	je	0x400430
<Block for 0x400416, 10 bytes>
0x400416:	mov	eax, dword ptr [rbp - 0x24]
0x400419:	mov	edi, eax
0x40041b:	call	0x500058
<Block for 0x400387, 26 bytes>
0x400387:	mov	word ptr [rbp - 0x1e], ax
0x40038b:	lea	rcx, [rbp - 0x20]
0x40038f:	mov	eax, dword ptr [rbp - 0x24]
0x400392:	mov	edx, 0x10
0x400397:	mov	rsi, rcx
0x40039a:	mov	edi, eax
0x40039c:	call	0x500018
<Block for 0x400426, 10 bytes>
0x400426:	mov	eax, dword ptr [rbp - 0x28]
0x400429:	mov	edi, eax
0x40042b:	call	0x500058
<Block for 0x4003a1, 5 bytes>
0x4003a1:	cmp	eax, -1
0x4003a4:	je	0x400409
<Block for 0x400409, 3 bytes>
0x400409:	nop	
0x40040a:	jmp	0x400410
<Block for 0x4003a6, 15 bytes>
0x4003a6:	mov	eax, dword ptr [rbp - 0x24]
0x4003a9:	mov	esi, 5
0x4003ae:	mov	edi, eax
0x4003b0:	call	0x500020
<Block for 0x4003b5, 5 bytes>
0x4003b5:	cmp	eax, -1
0x4003b8:	je	0x40040c
<Block for 0x40040c, 3 bytes>
0x40040c:	nop	
0x40040d:	jmp	0x400410
<Block for 0x4003ba, 20 bytes>
0x4003ba:	mov	eax, dword ptr [rbp - 0x24]
0x4003bd:	mov	edx, 0
0x4003c2:	mov	esi, 0
0x4003c7:	mov	edi, eax
0x4003c9:	call	0x500028
<Block for 0x4003ce, 9 bytes>
0x4003ce:	mov	dword ptr [rbp - 0x28], eax
0x4003d1:	cmp	dword ptr [rbp - 0x28], -1
0x4003d5:	je	0x40040f
<Block for 0x4003d7, 27 bytes>
0x4003d7:	mov	eax, dword ptr [rbp - 0x28]
0x4003da:	mov	ecx, 0
0x4003df:	mov	edx, 8
0x4003e4:	lea	rsi, [rip + 0xa4]
0x4003eb:	mov	edi, eax
0x4003ed:	call	0x500048
<Block for 0x40040f, 1 bytes>
0x40040f:	nop	
<Block for 0x4003f2, 6 bytes>
0x4003f2:	cmp	rax, -1
0x4003f6:	jne	0x400410
<Block for 0x4003f8, 12 bytes>
0x4003f8:	lea	rdi, [rip + 0x99]
0x4003ff:	call	0x500050
<Block for 0x400404, 2 bytes>
0x400404:	jmp	0x400410
