<Block for 0x4001b2, 36 bytes>
0x4001b2:	endbr64	
0x4001b6:	push	rbp
0x4001b7:	mov	rbp, rsp
0x4001ba:	sub	rsp, 0x30
0x4001be:	mov	rax, qword ptr fs:[0x28]
0x4001c7:	mov	qword ptr [rbp - 8], rax
0x4001cb:	xor	eax, eax
0x4001cd:	mov	eax, 0
0x4001d2:	test	eax, eax
0x4001d4:	je	0x4001e7
<Block for 0x4001e7, 34 bytes>
0x4001e7:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001ee:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001f5:	mov	edx, 6
0x4001fa:	mov	esi, 1
0x4001ff:	mov	edi, 2
0x400204:	call	0x500000
<Block for 0x4001d6, 12 bytes>
0x4001d6:	lea	rdi, [rip + 0x2c8]
0x4001dd:	call	0x500050
<Block for 0x400209, 13 bytes>
0x400209:	mov	dword ptr [rbp - 0x24], eax
0x40020c:	cmp	dword ptr [rbp - 0x24], -1
0x400210:	je	0x4002c2
<Block for 0x4001e2, 5 bytes>
0x4001e2:	jmp	0x4002ec
<Block for 0x4002c2, 3 bytes>
0x4002c2:	nop	
0x4002c3:	jmp	0x4002cc
<Block for 0x400216, 22 bytes>
0x400216:	lea	rax, [rbp - 0x20]
0x40021a:	mov	edx, 0x10
0x40021f:	mov	esi, 0
0x400224:	mov	rdi, rax
0x400227:	call	0x500008
<Block for 0x4002ec, 16 bytes>
0x4002ec:	nop	
0x4002ed:	mov	rax, qword ptr [rbp - 8]
0x4002f1:	xor	rax, qword ptr fs:[0x28]
0x4002fa:	je	0x400301
<Block for 0x4002cc, 6 bytes>
0x4002cc:	cmp	dword ptr [rbp - 0x24], -1
0x4002d0:	je	0x4002dc
<Block for 0x40022c, 23 bytes>
0x40022c:	mov	word ptr [rbp - 0x20], 2
0x400232:	mov	dword ptr [rbp - 0x1c], 0
0x400239:	mov	edi, 0x4e20
0x40023e:	call	0x500010
<Block for 0x400301, 2 bytes>
0x400301:	leave	
0x400302:	ret	
<Block for 0x4002fc, 5 bytes>
0x4002fc:	call	0x500060
<Block for 0x4002dc, 6 bytes>
0x4002dc:	cmp	dword ptr [rbp - 0x28], -1
0x4002e0:	je	0x4002ec
<Block for 0x4002d2, 10 bytes>
0x4002d2:	mov	eax, dword ptr [rbp - 0x24]
0x4002d5:	mov	edi, eax
0x4002d7:	call	0x500058
<Block for 0x400243, 26 bytes>
0x400243:	mov	word ptr [rbp - 0x1e], ax
0x400247:	lea	rcx, [rbp - 0x20]
0x40024b:	mov	eax, dword ptr [rbp - 0x24]
0x40024e:	mov	edx, 0x10
0x400253:	mov	rsi, rcx
0x400256:	mov	edi, eax
0x400258:	call	0x500018
<Block for 0x4002e2, 10 bytes>
0x4002e2:	mov	eax, dword ptr [rbp - 0x28]
0x4002e5:	mov	edi, eax
0x4002e7:	call	0x500058
<Block for 0x40025d, 5 bytes>
0x40025d:	cmp	eax, -1
0x400260:	je	0x4002c5
<Block for 0x4002c5, 3 bytes>
0x4002c5:	nop	
0x4002c6:	jmp	0x4002cc
<Block for 0x400262, 15 bytes>
0x400262:	mov	eax, dword ptr [rbp - 0x24]
0x400265:	mov	esi, 5
0x40026a:	mov	edi, eax
0x40026c:	call	0x500020
<Block for 0x400271, 5 bytes>
0x400271:	cmp	eax, -1
0x400274:	je	0x4002c8
<Block for 0x4002c8, 3 bytes>
0x4002c8:	nop	
0x4002c9:	jmp	0x4002cc
<Block for 0x400276, 20 bytes>
0x400276:	mov	eax, dword ptr [rbp - 0x24]
0x400279:	mov	edx, 0
0x40027e:	mov	esi, 0
0x400283:	mov	edi, eax
0x400285:	call	0x500028
<Block for 0x40028a, 9 bytes>
0x40028a:	mov	dword ptr [rbp - 0x28], eax
0x40028d:	cmp	dword ptr [rbp - 0x28], -1
0x400291:	je	0x4002cb
<Block for 0x400293, 27 bytes>
0x400293:	mov	eax, dword ptr [rbp - 0x28]
0x400296:	mov	ecx, 0
0x40029b:	mov	edx, 8
0x4002a0:	lea	rsi, [rip + 0x1e8]
0x4002a7:	mov	edi, eax
0x4002a9:	call	0x500048
<Block for 0x4002cb, 1 bytes>
0x4002cb:	nop	
<Block for 0x4002ae, 6 bytes>
0x4002ae:	cmp	rax, -1
0x4002b2:	jne	0x4002cc
<Block for 0x4002b4, 12 bytes>
0x4002b4:	lea	rdi, [rip + 0x1dd]
0x4002bb:	call	0x500050
<Block for 0x4002c0, 2 bytes>
0x4002c0:	jmp	0x4002cc
