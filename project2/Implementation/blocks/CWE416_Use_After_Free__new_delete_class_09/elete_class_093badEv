<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	test	eax, eax
0x40001c:	je	0x400057
<Block for 0x400057, 10 bytes>
0x400057:	mov	eax, dword ptr [rip + 0xfffa3]
0x40005d:	test	eax, eax
0x40005f:	je	0x40006e
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 8
0x400023:	call	0x500008
<Block for 0x40006e, 3 bytes>
0x40006e:	nop	
0x40006f:	leave	
0x400070:	ret	
<Block for 0x400061, 13 bytes>
0x400061:	mov	rax, qword ptr [rbp - 8]
0x400065:	mov	eax, dword ptr [rax]
0x400067:	mov	edi, eax
0x400069:	call	0x500018
<Block for 0x400028, 34 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	mov	rax, qword ptr [rbp - 8]
0x400030:	mov	dword ptr [rax], 1
0x400036:	mov	rax, qword ptr [rbp - 8]
0x40003a:	mov	dword ptr [rax + 4], 2
0x400041:	mov	rax, qword ptr [rbp - 8]
0x400045:	test	rax, rax
0x400048:	je	0x400057
<Block for 0x40004a, 13 bytes>
0x40004a:	mov	esi, 8
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
