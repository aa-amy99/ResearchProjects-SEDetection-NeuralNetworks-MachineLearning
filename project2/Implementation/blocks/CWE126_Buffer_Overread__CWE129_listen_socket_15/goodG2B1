<Block for 0x4004e9, 88 bytes>
0x4004e9:	endbr64	
0x4004ed:	push	rbp
0x4004ee:	mov	rbp, rsp
0x4004f1:	sub	rsp, 0x40
0x4004f5:	mov	rax, qword ptr fs:[0x28]
0x4004fe:	mov	qword ptr [rbp - 8], rax
0x400502:	xor	eax, eax
0x400504:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40050b:	mov	dword ptr [rbp - 0x34], 7
0x400512:	nop	
0x400513:	mov	qword ptr [rbp - 0x30], 0
0x40051b:	mov	qword ptr [rbp - 0x28], 0
0x400523:	mov	qword ptr [rbp - 0x20], 0
0x40052b:	mov	qword ptr [rbp - 0x18], 0
0x400533:	mov	qword ptr [rbp - 0x10], 0
0x40053b:	cmp	dword ptr [rbp - 0x34], 0
0x40053f:	js	0x400553
<Block for 0x400553, 12 bytes>
0x400553:	lea	rdi, [rip + 0xde]
0x40055a:	call	0x500050
<Block for 0x400541, 16 bytes>
0x400541:	mov	eax, dword ptr [rbp - 0x34]
0x400544:	cdqe	
0x400546:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40054a:	mov	edi, eax
0x40054c:	call	0x500048
<Block for 0x40055f, 17 bytes>
0x40055f:	nop	
0x400560:	nop	
0x400561:	mov	rax, qword ptr [rbp - 8]
0x400565:	xor	rax, qword ptr fs:[0x28]
0x40056e:	je	0x400575
<Block for 0x400551, 2 bytes>
0x400551:	jmp	0x40055f
<Block for 0x400575, 2 bytes>
0x400575:	leave	
0x400576:	ret	
<Block for 0x400570, 5 bytes>
0x400570:	call	0x500058
