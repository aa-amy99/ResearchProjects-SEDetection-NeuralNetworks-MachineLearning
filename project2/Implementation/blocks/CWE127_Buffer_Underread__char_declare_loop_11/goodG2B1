<Block for 0x4000df, 55 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0xf0
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	lea	rax, [rbp - 0xe0]
0x400104:	mov	edx, 0x63
0x400109:	mov	esi, 0x41
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 14 bytes>
0x400116:	mov	byte ptr [rbp - 0x7d], 0
0x40011a:	mov	eax, 0
0x40011f:	call	0x500020
<Block for 0x400124, 4 bytes>
0x400124:	test	eax, eax
0x400126:	je	0x400136
<Block for 0x400136, 36 bytes>
0x400136:	lea	rax, [rbp - 0xe0]
0x40013d:	mov	qword ptr [rbp - 0xf0], rax
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x400128, 12 bytes>
0x400128:	lea	rdi, [rip + 0x193]
0x40012f:	call	0x500010
<Block for 0x40015a, 17 bytes>
0x40015a:	mov	byte ptr [rbp - 0xd], 0
0x40015e:	mov	qword ptr [rbp - 0xe8], 0
0x400169:	jmp	0x400197
<Block for 0x400134, 2 bytes>
0x400134:	jmp	0x400144
<Block for 0x400197, 10 bytes>
0x400197:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40019f:	jbe	0x40016b
<Block for 0x400144, 22 bytes>
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x40016b, 54 bytes>
0x40016b:	mov	rdx, qword ptr [rbp - 0xf0]
0x400172:	mov	rax, qword ptr [rbp - 0xe8]
0x400179:	add	rax, rdx
0x40017c:	movzx	eax, byte ptr [rax]
0x40017f:	lea	rcx, [rbp - 0x70]
0x400183:	mov	rdx, qword ptr [rbp - 0xe8]
0x40018a:	add	rdx, rcx
0x40018d:	mov	byte ptr [rdx], al
0x40018f:	add	qword ptr [rbp - 0xe8], 1
0x400197:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40019f:	jbe	0x40016b
<Block for 0x4001a1, 16 bytes>
0x4001a1:	mov	byte ptr [rbp - 0xd], 0
0x4001a5:	lea	rax, [rbp - 0x70]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500010
<Block for 0x4001b1, 16 bytes>
0x4001b1:	nop	
0x4001b2:	mov	rax, qword ptr [rbp - 8]
0x4001b6:	xor	rax, qword ptr fs:[0x28]
0x4001bf:	je	0x4001c6
<Block for 0x4001c6, 2 bytes>
0x4001c6:	leave	
0x4001c7:	ret	
<Block for 0x4001c1, 5 bytes>
0x4001c1:	call	0x500018
