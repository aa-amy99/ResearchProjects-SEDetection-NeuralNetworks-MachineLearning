<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003da
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x68], 0
0x400030:	mov	edi, 0x64
0x400035:	call	0x500000
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x58]
0x400042:	mov	edx, 0x63
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 35 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x58]
0x400058:	add	rax, 0x63
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	mov	rax, qword ptr [rbp - 0x58]
0x400063:	sub	rax, 8
0x400067:	mov	qword ptr [rbp - 0x68], rax
0x40006b:	lea	rax, [rbp - 0x50]
0x40006f:	mov	rdi, rax
0x400072:	call	0x40056e
<Block for 0x400077, 23 bytes>
0x400077:	mov	qword ptr [rbp - 0x60], rax
0x40007b:	lea	rdx, [rbp - 0x60]
0x40007f:	lea	rax, [rbp - 0x30]
0x400083:	mov	rsi, rdx
0x400086:	mov	rdi, rax
0x400089:	call	0x4005be
<Block for 0x40008e, 28 bytes>
0x40008e:	lea	rdx, [rbp - 0x68]
0x400092:	mov	rsi, qword ptr [rbp - 0x30]
0x400096:	lea	rax, [rbp - 0x50]
0x40009a:	mov	rcx, rdx
0x40009d:	mov	edx, 1
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x4005ec
<Block for 0x4000aa, 12 bytes>
0x4000aa:	lea	rax, [rbp - 0x50]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x40056e
<Block for 0x4000b6, 23 bytes>
0x4000b6:	mov	qword ptr [rbp - 0x60], rax
0x4000ba:	lea	rdx, [rbp - 0x60]
0x4000be:	lea	rax, [rbp - 0x30]
0x4000c2:	mov	rsi, rdx
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x4005be
<Block for 0x4000cd, 28 bytes>
0x4000cd:	lea	rdx, [rbp - 0x68]
0x4000d1:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d5:	lea	rax, [rbp - 0x50]
0x4000d9:	mov	rcx, rdx
0x4000dc:	mov	edx, 1
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x4005ec
<Block for 0x4000e9, 12 bytes>
0x4000e9:	lea	rax, [rbp - 0x50]
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x40056e
<Block for 0x4000f5, 23 bytes>
0x4000f5:	mov	qword ptr [rbp - 0x60], rax
0x4000f9:	lea	rdx, [rbp - 0x60]
0x4000fd:	lea	rax, [rbp - 0x30]
0x400101:	mov	rsi, rdx
0x400104:	mov	rdi, rax
0x400107:	call	0x4005be
<Block for 0x40010c, 28 bytes>
0x40010c:	lea	rdx, [rbp - 0x68]
0x400110:	mov	rsi, qword ptr [rbp - 0x30]
0x400114:	lea	rax, [rbp - 0x50]
0x400118:	mov	rcx, rdx
0x40011b:	mov	edx, 1
0x400120:	mov	rdi, rax
0x400123:	call	0x4005ec
<Block for 0x400128, 19 bytes>
0x400128:	lea	rdx, [rbp - 0x50]
0x40012c:	lea	rax, [rbp - 0x30]
0x400130:	mov	rsi, rdx
0x400133:	mov	rdi, rax
0x400136:	call	0x4006b2
<Block for 0x40013b, 12 bytes>
0x40013b:	lea	rax, [rbp - 0x30]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x400147, 12 bytes>
0x400147:	lea	rax, [rbp - 0x30]
0x40014b:	mov	rdi, rax
0x40014e:	call	0x400526
<Block for 0x400153, 12 bytes>
0x400153:	lea	rax, [rbp - 0x50]
0x400157:	mov	rdi, rax
0x40015a:	call	0x400526
<Block for 0x40015f, 16 bytes>
0x40015f:	nop	
0x400160:	mov	rax, qword ptr [rbp - 0x18]
0x400164:	xor	rax, qword ptr fs:[0x28]
0x40016d:	je	0x4001a9
<Block for 0x4001a9, 7 bytes>
0x4001a9:	add	rsp, 0x68
0x4001ad:	pop	rbx
0x4001ae:	pop	rbp
0x4001af:	ret	
<Block for 0x40016f, 2 bytes>
0x40016f:	jmp	0x4001a4
<Block for 0x4001a4, 5 bytes>
0x4001a4:	call	0x500020
