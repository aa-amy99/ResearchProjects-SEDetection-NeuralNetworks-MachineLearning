<Block for 0x400102, 37 bytes>
0x400102:	endbr64	
0x400106:	push	rbp
0x400107:	mov	rbp, rsp
0x40010a:	add	rsp, -0x80
0x40010e:	mov	rax, qword ptr fs:[0x28]
0x400117:	mov	qword ptr [rbp - 8], rax
0x40011b:	xor	eax, eax
0x40011d:	mov	eax, 0
0x400122:	call	0x40000f
<Block for 0x400127, 4 bytes>
0x400127:	test	eax, eax
0x400129:	je	0x40013c
<Block for 0x40013c, 143 bytes>
0x40013c:	mov	qword ptr [rbp - 0x70], 0
0x400144:	mov	qword ptr [rbp - 0x68], 0
0x40014c:	mov	qword ptr [rbp - 0x60], 0
0x400154:	mov	qword ptr [rbp - 0x58], 0
0x40015c:	mov	qword ptr [rbp - 0x50], 0
0x400164:	mov	qword ptr [rbp - 0x48], 0
0x40016c:	mov	qword ptr [rbp - 0x40], 0
0x400174:	mov	qword ptr [rbp - 0x38], 0
0x40017c:	mov	qword ptr [rbp - 0x30], 0
0x400184:	mov	qword ptr [rbp - 0x28], 0
0x40018c:	mov	qword ptr [rbp - 0x20], 0
0x400194:	mov	qword ptr [rbp - 0x18], 0
0x40019c:	mov	dword ptr [rbp - 0x10], 0
0x4001a3:	lea	rax, [rbp - 0x70]
0x4001a7:	mov	qword ptr [rbp - 0x78], rax
0x4001ab:	mov	rdx, qword ptr [rip + 0xffe4e]
0x4001b2:	mov	rax, qword ptr [rbp - 0x78]
0x4001b6:	mov	rcx, rdx
0x4001b9:	mov	edx, 0x63
0x4001be:	mov	esi, 1
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500008
<Block for 0x40012b, 12 bytes>
0x40012b:	lea	rdi, [rip + 0x1d4]
0x400132:	call	0x500010
<Block for 0x4001cb, 6 bytes>
0x4001cb:	cmp	rax, 0x63
0x4001cf:	je	0x4001dd
<Block for 0x400137, 5 bytes>
0x400137:	jmp	0x4001dd
<Block for 0x4001dd, 16 bytes>
0x4001dd:	nop	
0x4001de:	mov	rax, qword ptr [rbp - 8]
0x4001e2:	xor	rax, qword ptr fs:[0x28]
0x4001eb:	je	0x4001f2
<Block for 0x4001d1, 12 bytes>
0x4001d1:	lea	rdi, [rip + 0x120]
0x4001d8:	call	0x500010
<Block for 0x4001f2, 2 bytes>
0x4001f2:	leave	
0x4001f3:	ret	
<Block for 0x4001ed, 5 bytes>
0x4001ed:	call	0x500018
