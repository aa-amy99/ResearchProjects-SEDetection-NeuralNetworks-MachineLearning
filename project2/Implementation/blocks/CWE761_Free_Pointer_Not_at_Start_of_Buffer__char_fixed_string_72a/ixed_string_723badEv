<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003e0
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x60], rax
0x400036:	mov	rax, qword ptr [rbp - 0x60]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 47 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x60]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x60]
0x400054:	movabs	rcx, 0x7453206465786946
0x40005e:	mov	qword ptr [rax], rcx
0x400061:	mov	dword ptr [rax + 8], 0x676e6972
0x400068:	mov	byte ptr [rax + 0xc], 0
0x40006c:	lea	rax, [rbp - 0x50]
0x400070:	mov	rdi, rax
0x400073:	call	0x400572
<Block for 0x400078, 23 bytes>
0x400078:	mov	qword ptr [rbp - 0x58], rax
0x40007c:	lea	rdx, [rbp - 0x58]
0x400080:	lea	rax, [rbp - 0x30]
0x400084:	mov	rsi, rdx
0x400087:	mov	rdi, rax
0x40008a:	call	0x4005c2
<Block for 0x40008f, 28 bytes>
0x40008f:	lea	rdx, [rbp - 0x60]
0x400093:	mov	rsi, qword ptr [rbp - 0x30]
0x400097:	lea	rax, [rbp - 0x50]
0x40009b:	mov	rcx, rdx
0x40009e:	mov	edx, 1
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x4005f0
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rax, [rbp - 0x50]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x400572
<Block for 0x4000b7, 23 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x58], rax
0x4000bb:	lea	rdx, [rbp - 0x58]
0x4000bf:	lea	rax, [rbp - 0x30]
0x4000c3:	mov	rsi, rdx
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x4005c2
<Block for 0x4000ce, 28 bytes>
0x4000ce:	lea	rdx, [rbp - 0x60]
0x4000d2:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d6:	lea	rax, [rbp - 0x50]
0x4000da:	mov	rcx, rdx
0x4000dd:	mov	edx, 1
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x4005f0
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rax, [rbp - 0x50]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x400572
<Block for 0x4000f6, 23 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x58], rax
0x4000fa:	lea	rdx, [rbp - 0x58]
0x4000fe:	lea	rax, [rbp - 0x30]
0x400102:	mov	rsi, rdx
0x400105:	mov	rdi, rax
0x400108:	call	0x4005c2
<Block for 0x40010d, 28 bytes>
0x40010d:	lea	rdx, [rbp - 0x60]
0x400111:	mov	rsi, qword ptr [rbp - 0x30]
0x400115:	lea	rax, [rbp - 0x50]
0x400119:	mov	rcx, rdx
0x40011c:	mov	edx, 1
0x400121:	mov	rdi, rax
0x400124:	call	0x4005f0
<Block for 0x400129, 19 bytes>
0x400129:	lea	rdx, [rbp - 0x50]
0x40012d:	lea	rax, [rbp - 0x30]
0x400131:	mov	rsi, rdx
0x400134:	mov	rdi, rax
0x400137:	call	0x4006b6
<Block for 0x40013c, 12 bytes>
0x40013c:	lea	rax, [rbp - 0x30]
0x400140:	mov	rdi, rax
0x400143:	call	0x500010
<Block for 0x400148, 12 bytes>
0x400148:	lea	rax, [rbp - 0x30]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x40052a
<Block for 0x400154, 12 bytes>
0x400154:	lea	rax, [rbp - 0x50]
0x400158:	mov	rdi, rax
0x40015b:	call	0x40052a
<Block for 0x400160, 16 bytes>
0x400160:	nop	
0x400161:	mov	rax, qword ptr [rbp - 0x18]
0x400165:	xor	rax, qword ptr fs:[0x28]
0x40016e:	je	0x4001aa
<Block for 0x4001aa, 7 bytes>
0x4001aa:	add	rsp, 0x58
0x4001ae:	pop	rbx
0x4001af:	pop	rbp
0x4001b0:	ret	
<Block for 0x400170, 2 bytes>
0x400170:	jmp	0x4001a5
<Block for 0x4001a5, 5 bytes>
0x4001a5:	call	0x500020
