<Block for 0x4001b1, 40 bytes>
0x4001b1:	endbr64	
0x4001b5:	push	rbp
0x4001b6:	mov	rbp, rsp
0x4001b9:	push	rbx
0x4001ba:	sub	rsp, 0x58
0x4001be:	mov	rax, qword ptr fs:[0x28]
0x4001c7:	mov	qword ptr [rbp - 0x18], rax
0x4001cb:	xor	eax, eax
0x4001cd:	lea	rax, [rbp - 0x50]
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x4003e0
<Block for 0x4001d9, 10 bytes>
0x4001d9:	mov	edi, 0x64
0x4001de:	call	0x500000
<Block for 0x4001e3, 13 bytes>
0x4001e3:	mov	qword ptr [rbp - 0x60], rax
0x4001e7:	mov	rax, qword ptr [rbp - 0x60]
0x4001eb:	test	rax, rax
0x4001ee:	jne	0x4001fa
<Block for 0x4001f0, 10 bytes>
0x4001f0:	mov	edi, 0xffffffff
0x4001f5:	call	0x500008
<Block for 0x4001fa, 47 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x60]
0x4001fe:	mov	byte ptr [rax], 0
0x400201:	mov	rax, qword ptr [rbp - 0x60]
0x400205:	movabs	rcx, 0x7453206465786946
0x40020f:	mov	qword ptr [rax], rcx
0x400212:	mov	dword ptr [rax + 8], 0x676e6972
0x400219:	mov	byte ptr [rax + 0xc], 0
0x40021d:	lea	rax, [rbp - 0x50]
0x400221:	mov	rdi, rax
0x400224:	call	0x400572
<Block for 0x400229, 23 bytes>
0x400229:	mov	qword ptr [rbp - 0x58], rax
0x40022d:	lea	rdx, [rbp - 0x58]
0x400231:	lea	rax, [rbp - 0x30]
0x400235:	mov	rsi, rdx
0x400238:	mov	rdi, rax
0x40023b:	call	0x4005c2
<Block for 0x400240, 28 bytes>
0x400240:	lea	rdx, [rbp - 0x60]
0x400244:	mov	rsi, qword ptr [rbp - 0x30]
0x400248:	lea	rax, [rbp - 0x50]
0x40024c:	mov	rcx, rdx
0x40024f:	mov	edx, 1
0x400254:	mov	rdi, rax
0x400257:	call	0x4005f0
<Block for 0x40025c, 12 bytes>
0x40025c:	lea	rax, [rbp - 0x50]
0x400260:	mov	rdi, rax
0x400263:	call	0x400572
<Block for 0x400268, 23 bytes>
0x400268:	mov	qword ptr [rbp - 0x58], rax
0x40026c:	lea	rdx, [rbp - 0x58]
0x400270:	lea	rax, [rbp - 0x30]
0x400274:	mov	rsi, rdx
0x400277:	mov	rdi, rax
0x40027a:	call	0x4005c2
<Block for 0x40027f, 28 bytes>
0x40027f:	lea	rdx, [rbp - 0x60]
0x400283:	mov	rsi, qword ptr [rbp - 0x30]
0x400287:	lea	rax, [rbp - 0x50]
0x40028b:	mov	rcx, rdx
0x40028e:	mov	edx, 1
0x400293:	mov	rdi, rax
0x400296:	call	0x4005f0
<Block for 0x40029b, 12 bytes>
0x40029b:	lea	rax, [rbp - 0x50]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x400572
<Block for 0x4002a7, 23 bytes>
0x4002a7:	mov	qword ptr [rbp - 0x58], rax
0x4002ab:	lea	rdx, [rbp - 0x58]
0x4002af:	lea	rax, [rbp - 0x30]
0x4002b3:	mov	rsi, rdx
0x4002b6:	mov	rdi, rax
0x4002b9:	call	0x4005c2
<Block for 0x4002be, 28 bytes>
0x4002be:	lea	rdx, [rbp - 0x60]
0x4002c2:	mov	rsi, qword ptr [rbp - 0x30]
0x4002c6:	lea	rax, [rbp - 0x50]
0x4002ca:	mov	rcx, rdx
0x4002cd:	mov	edx, 1
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x4005f0
<Block for 0x4002da, 19 bytes>
0x4002da:	lea	rdx, [rbp - 0x50]
0x4002de:	lea	rax, [rbp - 0x30]
0x4002e2:	mov	rsi, rdx
0x4002e5:	mov	rdi, rax
0x4002e8:	call	0x4006b6
<Block for 0x4002ed, 12 bytes>
0x4002ed:	lea	rax, [rbp - 0x30]
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x500028
<Block for 0x4002f9, 12 bytes>
0x4002f9:	lea	rax, [rbp - 0x30]
0x4002fd:	mov	rdi, rax
0x400300:	call	0x40052a
<Block for 0x400305, 12 bytes>
0x400305:	lea	rax, [rbp - 0x50]
0x400309:	mov	rdi, rax
0x40030c:	call	0x40052a
<Block for 0x400311, 16 bytes>
0x400311:	nop	
0x400312:	mov	rax, qword ptr [rbp - 0x18]
0x400316:	xor	rax, qword ptr fs:[0x28]
0x40031f:	je	0x40035b
<Block for 0x40035b, 7 bytes>
0x40035b:	add	rsp, 0x58
0x40035f:	pop	rbx
0x400360:	pop	rbp
0x400361:	ret	
<Block for 0x400321, 2 bytes>
0x400321:	jmp	0x400356
<Block for 0x400356, 5 bytes>
0x400356:	call	0x500020
