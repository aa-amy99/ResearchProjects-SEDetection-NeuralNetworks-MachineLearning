<Block for 0x4001c6, 45 bytes>
0x4001c6:	endbr64	
0x4001ca:	push	rbp
0x4001cb:	mov	rbp, rsp
0x4001ce:	add	rsp, -0x80
0x4001d2:	mov	rax, qword ptr fs:[0x28]
0x4001db:	mov	qword ptr [rbp - 8], rax
0x4001df:	xor	eax, eax
0x4001e1:	mov	qword ptr [rbp - 0x78], 0
0x4001e9:	mov	eax, 5
0x4001ee:	cmp	eax, 5
0x4001f1:	jne	0x400233
<Block for 0x4001f3, 10 bytes>
0x4001f3:	mov	edi, 0x64
0x4001f8:	call	0x500000
<Block for 0x400233, 22 bytes>
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500010
<Block for 0x4001fd, 11 bytes>
0x4001fd:	mov	qword ptr [rbp - 0x78], rax
0x400201:	cmp	qword ptr [rbp - 0x78], 0
0x400206:	jne	0x400212
<Block for 0x400249, 16 bytes>
0x400249:	mov	byte ptr [rbp - 0xd], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	rdi, rax
0x400254:	call	0x500018
<Block for 0x400208, 10 bytes>
0x400208:	mov	edi, 0xffffffff
0x40020d:	call	0x500008
<Block for 0x400212, 22 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0x78]
0x400216:	mov	edx, 0x63
0x40021b:	mov	esi, 0x41
0x400220:	mov	rdi, rax
0x400223:	call	0x500010
<Block for 0x400259, 22 bytes>
0x400259:	mov	rdx, rax
0x40025c:	mov	rcx, qword ptr [rbp - 0x78]
0x400260:	lea	rax, [rbp - 0x70]
0x400264:	mov	rsi, rcx
0x400267:	mov	rdi, rax
0x40026a:	call	0x500020
<Block for 0x400228, 33 bytes>
0x400228:	mov	rax, qword ptr [rbp - 0x78]
0x40022c:	add	rax, 0x63
0x400230:	mov	byte ptr [rax], 0
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500010
<Block for 0x40026f, 16 bytes>
0x40026f:	mov	byte ptr [rbp - 0xd], 0
0x400273:	lea	rax, [rbp - 0x70]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500028
<Block for 0x40027f, 12 bytes>
0x40027f:	mov	rax, qword ptr [rbp - 0x78]
0x400283:	mov	rdi, rax
0x400286:	call	0x500030
<Block for 0x40028b, 16 bytes>
0x40028b:	nop	
0x40028c:	mov	rax, qword ptr [rbp - 8]
0x400290:	xor	rax, qword ptr fs:[0x28]
0x400299:	je	0x4002a0
<Block for 0x4002a0, 2 bytes>
0x4002a0:	leave	
0x4002a1:	ret	
<Block for 0x40029b, 5 bytes>
0x40029b:	call	0x500038
