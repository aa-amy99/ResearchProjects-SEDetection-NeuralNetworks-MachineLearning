<Block for 0x4000dd, 45 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	add	rsp, -0x80
0x4000e9:	mov	rax, qword ptr fs:[0x28]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	xor	eax, eax
0x4000f8:	mov	qword ptr [rbp - 0x80], 0
0x400100:	mov	eax, 0
0x400105:	call	0x500038
<Block for 0x40010a, 4 bytes>
0x40010a:	test	eax, eax
0x40010c:	je	0x40011c
<Block for 0x40011c, 10 bytes>
0x40011c:	mov	edi, 0x64
0x400121:	call	0x500008
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0x1a7]
0x400115:	call	0x500028
<Block for 0x400126, 11 bytes>
0x400126:	mov	qword ptr [rbp - 0x78], rax
0x40012a:	cmp	qword ptr [rbp - 0x78], 0
0x40012f:	jne	0x40013b
<Block for 0x40011a, 2 bytes>
0x40011a:	jmp	0x400164
<Block for 0x400131, 10 bytes>
0x400131:	mov	edi, 0xffffffff
0x400136:	call	0x500010
<Block for 0x40013b, 22 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x78]
0x40013f:	mov	edx, 0x63
0x400144:	mov	esi, 0x41
0x400149:	mov	rdi, rax
0x40014c:	call	0x500018
<Block for 0x400164, 22 bytes>
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	edx, 0x63
0x40016d:	mov	esi, 0x43
0x400172:	mov	rdi, rax
0x400175:	call	0x500018
<Block for 0x400151, 41 bytes>
0x400151:	mov	rax, qword ptr [rbp - 0x78]
0x400155:	add	rax, 0x63
0x400159:	mov	byte ptr [rax], 0
0x40015c:	mov	rax, qword ptr [rbp - 0x78]
0x400160:	mov	qword ptr [rbp - 0x80], rax
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	edx, 0x63
0x40016d:	mov	esi, 0x43
0x400172:	mov	rdi, rax
0x400175:	call	0x500018
<Block for 0x40017a, 28 bytes>
0x40017a:	mov	byte ptr [rbp - 0xd], 0
0x40017e:	lea	rcx, [rbp - 0x70]
0x400182:	mov	rax, qword ptr [rbp - 0x80]
0x400186:	mov	edx, 0x64
0x40018b:	mov	rsi, rcx
0x40018e:	mov	rdi, rax
0x400191:	call	0x500020
<Block for 0x400196, 23 bytes>
0x400196:	mov	rax, qword ptr [rbp - 0x80]
0x40019a:	add	rax, 0x63
0x40019e:	mov	byte ptr [rax], 0
0x4001a1:	mov	rax, qword ptr [rbp - 0x80]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500028
<Block for 0x4001ad, 16 bytes>
0x4001ad:	nop	
0x4001ae:	mov	rax, qword ptr [rbp - 8]
0x4001b2:	xor	rax, qword ptr fs:[0x28]
0x4001bb:	je	0x4001c2
<Block for 0x4001c2, 2 bytes>
0x4001c2:	leave	
0x4001c3:	ret	
<Block for 0x4001bd, 5 bytes>
0x4001bd:	call	0x500030
