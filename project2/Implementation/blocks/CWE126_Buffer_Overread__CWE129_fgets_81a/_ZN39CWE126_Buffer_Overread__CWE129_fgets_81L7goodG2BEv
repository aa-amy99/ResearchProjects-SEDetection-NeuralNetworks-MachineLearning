<Block for 0x4000b8, 84 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	sub	rsp, 0x20
0x4000c4:	mov	rax, qword ptr fs:[0x28]
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	xor	eax, eax
0x4000d3:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000da:	mov	dword ptr [rbp - 0x1c], 7
0x4000e1:	lea	rax, [rip + 0xfff58]
0x4000e8:	mov	qword ptr [rbp - 0x18], rax
0x4000ec:	lea	rax, [rbp - 0x18]
0x4000f0:	mov	qword ptr [rbp - 0x10], rax
0x4000f4:	mov	rax, qword ptr [rbp - 0x10]
0x4000f8:	mov	rax, qword ptr [rax]
0x4000fb:	mov	rcx, qword ptr [rax]
0x4000fe:	mov	edx, dword ptr [rbp - 0x1c]
0x400101:	mov	rax, qword ptr [rbp - 0x10]
0x400105:	mov	esi, edx
0x400107:	mov	rdi, rax
0x40010a:	call	rcx
<Block for 0x40010c, 16 bytes>
0x40010c:	nop	
0x40010d:	mov	rax, qword ptr [rbp - 8]
0x400111:	xor	rax, qword ptr fs:[0x28]
0x40011a:	je	0x400121
<Block for 0x400121, 2 bytes>
0x400121:	leave	
0x400122:	ret	
<Block for 0x40011c, 5 bytes>
0x40011c:	call	0x500028
