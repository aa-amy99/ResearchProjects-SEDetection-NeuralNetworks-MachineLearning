<Block for 0x400075, 53 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x20
0x400081:	mov	rax, qword ptr fs:[0x28]
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	xor	eax, eax
0x400090:	mov	dword ptr [rbp - 0x1c], 0x64
0x400097:	mov	dword ptr [rbp - 0x10], 0
0x40009e:	mov	dword ptr [rbp - 0xc], 0
0x4000a5:	call	0x500000
<Block for 0x4000aa, 9 bytes>
0x4000aa:	test	eax, eax
0x4000ac:	setne	al
0x4000af:	test	al, al
0x4000b1:	je	0x4000bd
<Block for 0x4000bd, 22 bytes>
0x4000bd:	lea	rax, [rbp - 0x10]
0x4000c1:	mov	qword ptr [rbp - 0x18], rax
0x4000c5:	mov	rax, qword ptr [rbp - 0x18]
0x4000c9:	mov	eax, dword ptr [rax + 4]
0x4000cc:	mov	edi, eax
0x4000ce:	call	0x500008
<Block for 0x4000b3, 10 bytes>
0x4000b3:	lea	rax, [rbp - 0x10]
0x4000b7:	mov	qword ptr [rbp - 0x18], rax
0x4000bb:	jmp	0x4000c5
<Block for 0x4000d3, 16 bytes>
0x4000d3:	nop	
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	xor	rax, qword ptr fs:[0x28]
0x4000e1:	je	0x4000e8
<Block for 0x4000c5, 14 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 0x18]
0x4000c9:	mov	eax, dword ptr [rax + 4]
0x4000cc:	mov	edi, eax
0x4000ce:	call	0x500008
<Block for 0x4000e8, 2 bytes>
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000e3, 5 bytes>
0x4000e3:	call	0x500010
