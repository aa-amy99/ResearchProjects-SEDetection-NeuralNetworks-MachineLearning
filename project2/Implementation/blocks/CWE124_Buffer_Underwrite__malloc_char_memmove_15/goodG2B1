<Block for 0x4000d0, 45 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	add	rsp, -0x80
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	qword ptr [rbp - 0x80], 0
0x4000f3:	mov	edi, 0x64
0x4000f8:	call	0x500000
<Block for 0x4000fd, 11 bytes>
0x4000fd:	mov	qword ptr [rbp - 0x78], rax
0x400101:	cmp	qword ptr [rbp - 0x78], 0
0x400106:	jne	0x400112
<Block for 0x400108, 10 bytes>
0x400108:	mov	edi, 0xffffffff
0x40010d:	call	0x500008
<Block for 0x400112, 22 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x78]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x41
0x400120:	mov	rdi, rax
0x400123:	call	0x500010
<Block for 0x400128, 42 bytes>
0x400128:	mov	rax, qword ptr [rbp - 0x78]
0x40012c:	add	rax, 0x63
0x400130:	mov	byte ptr [rax], 0
0x400133:	mov	rax, qword ptr [rbp - 0x78]
0x400137:	mov	qword ptr [rbp - 0x80], rax
0x40013b:	nop	
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x43
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500010
<Block for 0x400152, 28 bytes>
0x400152:	mov	byte ptr [rbp - 0xd], 0
0x400156:	lea	rcx, [rbp - 0x70]
0x40015a:	mov	rax, qword ptr [rbp - 0x80]
0x40015e:	mov	edx, 0x64
0x400163:	mov	rsi, rcx
0x400166:	mov	rdi, rax
0x400169:	call	0x500018
<Block for 0x40016e, 23 bytes>
0x40016e:	mov	rax, qword ptr [rbp - 0x80]
0x400172:	add	rax, 0x63
0x400176:	mov	byte ptr [rax], 0
0x400179:	mov	rax, qword ptr [rbp - 0x80]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500020
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500028
