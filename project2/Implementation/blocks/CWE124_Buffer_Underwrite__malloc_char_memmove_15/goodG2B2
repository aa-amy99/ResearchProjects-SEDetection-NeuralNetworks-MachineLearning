<Block for 0x40019c, 45 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	add	rsp, -0x80
0x4001a8:	mov	rax, qword ptr fs:[0x28]
0x4001b1:	mov	qword ptr [rbp - 8], rax
0x4001b5:	xor	eax, eax
0x4001b7:	mov	qword ptr [rbp - 0x80], 0
0x4001bf:	mov	edi, 0x64
0x4001c4:	call	0x500000
<Block for 0x4001c9, 11 bytes>
0x4001c9:	mov	qword ptr [rbp - 0x78], rax
0x4001cd:	cmp	qword ptr [rbp - 0x78], 0
0x4001d2:	jne	0x4001de
<Block for 0x4001d4, 10 bytes>
0x4001d4:	mov	edi, 0xffffffff
0x4001d9:	call	0x500008
<Block for 0x4001de, 22 bytes>
0x4001de:	mov	rax, qword ptr [rbp - 0x78]
0x4001e2:	mov	edx, 0x63
0x4001e7:	mov	esi, 0x41
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500010
<Block for 0x4001f4, 42 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	add	rax, 0x63
0x4001fc:	mov	byte ptr [rax], 0
0x4001ff:	mov	rax, qword ptr [rbp - 0x78]
0x400203:	mov	qword ptr [rbp - 0x80], rax
0x400207:	nop	
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500010
<Block for 0x40021e, 28 bytes>
0x40021e:	mov	byte ptr [rbp - 0xd], 0
0x400222:	lea	rcx, [rbp - 0x70]
0x400226:	mov	rax, qword ptr [rbp - 0x80]
0x40022a:	mov	edx, 0x64
0x40022f:	mov	rsi, rcx
0x400232:	mov	rdi, rax
0x400235:	call	0x500018
<Block for 0x40023a, 23 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 0x80]
0x40023e:	add	rax, 0x63
0x400242:	mov	byte ptr [rax], 0
0x400245:	mov	rax, qword ptr [rbp - 0x80]
0x400249:	mov	rdi, rax
0x40024c:	call	0x500020
<Block for 0x400251, 16 bytes>
0x400251:	nop	
0x400252:	mov	rax, qword ptr [rbp - 8]
0x400256:	xor	rax, qword ptr fs:[0x28]
0x40025f:	je	0x400266
<Block for 0x400266, 2 bytes>
0x400266:	leave	
0x400267:	ret	
<Block for 0x400261, 5 bytes>
0x400261:	call	0x500028
