<Block for 0x400000, 159 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	rax, qword ptr [rbp - 0x88]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500000
<Block for 0x40009f, 16 bytes>
0x40009f:	mov	qword ptr [rbp - 0x80], rax
0x4000a3:	lea	rdi, [rip + 0x25c]
0x4000aa:	call	0x500008
<Block for 0x4000af, 11 bytes>
0x4000af:	mov	qword ptr [rbp - 0x78], rax
0x4000b3:	cmp	qword ptr [rbp - 0x78], 0
0x4000b8:	je	0x4000e3
<Block for 0x4000e3, 24 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 0x88]
0x4000ea:	mov	qword ptr [rip - 0xe9], rax
0x4000f1:	mov	eax, 0
0x4000f6:	call	0x500018
<Block for 0x4000ba, 41 bytes>
0x4000ba:	mov	eax, 0x63
0x4000bf:	sub	rax, qword ptr [rbp - 0x80]
0x4000c3:	mov	rdx, rax
0x4000c6:	mov	rcx, qword ptr [rbp - 0x88]
0x4000cd:	mov	rax, qword ptr [rbp - 0x80]
0x4000d1:	add	rcx, rax
0x4000d4:	mov	rax, qword ptr [rbp - 0x78]
0x4000d8:	mov	rsi, rax
0x4000db:	mov	rdi, rcx
0x4000de:	call	0x500010
<Block for 0x4000fb, 16 bytes>
0x4000fb:	nop	
0x4000fc:	mov	rax, qword ptr [rbp - 8]
0x400100:	xor	rax, qword ptr fs:[0x28]
0x400109:	je	0x400110
<Block for 0x400110, 2 bytes>
0x400110:	leave	
0x400111:	ret	
<Block for 0x40010b, 5 bytes>
0x40010b:	call	0x500020
