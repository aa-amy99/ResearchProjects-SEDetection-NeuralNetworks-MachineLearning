<Block for 0x4001d5, 159 bytes>
0x4001d5:	endbr64	
0x4001d9:	push	rbp
0x4001da:	mov	rbp, rsp
0x4001dd:	sub	rsp, 0x90
0x4001e4:	mov	rax, qword ptr fs:[0x28]
0x4001ed:	mov	qword ptr [rbp - 8], rax
0x4001f1:	xor	eax, eax
0x4001f3:	mov	qword ptr [rbp - 0x70], 0
0x4001fb:	mov	qword ptr [rbp - 0x68], 0
0x400203:	mov	qword ptr [rbp - 0x60], 0
0x40020b:	mov	qword ptr [rbp - 0x58], 0
0x400213:	mov	qword ptr [rbp - 0x50], 0
0x40021b:	mov	qword ptr [rbp - 0x48], 0
0x400223:	mov	qword ptr [rbp - 0x40], 0
0x40022b:	mov	qword ptr [rbp - 0x38], 0
0x400233:	mov	qword ptr [rbp - 0x30], 0
0x40023b:	mov	qword ptr [rbp - 0x28], 0
0x400243:	mov	qword ptr [rbp - 0x20], 0
0x40024b:	mov	qword ptr [rbp - 0x18], 0
0x400253:	mov	dword ptr [rbp - 0x10], 0
0x40025a:	lea	rax, [rbp - 0x70]
0x40025e:	mov	qword ptr [rbp - 0x88], rax
0x400265:	mov	rax, qword ptr [rbp - 0x88]
0x40026c:	mov	rdi, rax
0x40026f:	call	0x500000
<Block for 0x400274, 16 bytes>
0x400274:	mov	qword ptr [rbp - 0x80], rax
0x400278:	lea	rdi, [rip + 0x87]
0x40027f:	call	0x500008
<Block for 0x400284, 11 bytes>
0x400284:	mov	qword ptr [rbp - 0x78], rax
0x400288:	cmp	qword ptr [rbp - 0x78], 0
0x40028d:	je	0x4002b8
<Block for 0x4002b8, 24 bytes>
0x4002b8:	mov	rax, qword ptr [rbp - 0x88]
0x4002bf:	mov	qword ptr [rip - 0x2be], rax
0x4002c6:	mov	eax, 0
0x4002cb:	call	0x500030
<Block for 0x40028f, 41 bytes>
0x40028f:	mov	eax, 0x63
0x400294:	sub	rax, qword ptr [rbp - 0x80]
0x400298:	mov	rdx, rax
0x40029b:	mov	rcx, qword ptr [rbp - 0x88]
0x4002a2:	mov	rax, qword ptr [rbp - 0x80]
0x4002a6:	add	rcx, rax
0x4002a9:	mov	rax, qword ptr [rbp - 0x78]
0x4002ad:	mov	rsi, rax
0x4002b0:	mov	rdi, rcx
0x4002b3:	call	0x500010
<Block for 0x4002d0, 16 bytes>
0x4002d0:	nop	
0x4002d1:	mov	rax, qword ptr [rbp - 8]
0x4002d5:	xor	rax, qword ptr fs:[0x28]
0x4002de:	je	0x4002e5
<Block for 0x4002e5, 2 bytes>
0x4002e5:	leave	
0x4002e6:	ret	
<Block for 0x4002e0, 5 bytes>
0x4002e0:	call	0x500020
