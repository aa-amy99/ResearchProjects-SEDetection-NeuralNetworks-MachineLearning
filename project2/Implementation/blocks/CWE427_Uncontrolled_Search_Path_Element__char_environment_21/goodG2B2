<Block for 0x40027d, 82 bytes>
0x40027d:	endbr64	
0x400281:	push	rbp
0x400282:	mov	rbp, rsp
0x400285:	sub	rsp, 0x120
0x40028c:	mov	rax, qword ptr fs:[0x28]
0x400295:	mov	qword ptr [rbp - 8], rax
0x400299:	xor	eax, eax
0x40029b:	movabs	rax, 0x3d48544150
0x4002a5:	mov	edx, 0
0x4002aa:	mov	qword ptr [rbp - 0x110], rax
0x4002b1:	mov	qword ptr [rbp - 0x108], rdx
0x4002b8:	lea	rdx, [rbp - 0x100]
0x4002bf:	mov	eax, 0
0x4002c4:	mov	ecx, 0x1d
0x4002c9:	mov	rdi, rdx
0x4002cc:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002cf, 49 bytes>
0x4002cf:	mov	rdx, rdi
0x4002d2:	mov	word ptr [rdx], ax
0x4002d5:	add	rdx, 2
0x4002d9:	lea	rax, [rbp - 0x110]
0x4002e0:	mov	qword ptr [rbp - 0x118], rax
0x4002e7:	mov	dword ptr [rip + 0x63], 1
0x4002f1:	mov	rax, qword ptr [rbp - 0x118]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x40022e
<Block for 0x4002cc, 3 bytes>
0x4002cc:	rep stosq	qword ptr [rdi], rax
<Block for 0x400300, 22 bytes>
0x400300:	mov	qword ptr [rbp - 0x118], rax
0x400307:	mov	rax, qword ptr [rbp - 0x118]
0x40030e:	mov	rdi, rax
0x400311:	call	0x500018
<Block for 0x400316, 16 bytes>
0x400316:	nop	
0x400317:	mov	rax, qword ptr [rbp - 8]
0x40031b:	xor	rax, qword ptr fs:[0x28]
0x400324:	je	0x40032b
<Block for 0x40032b, 2 bytes>
0x40032b:	leave	
0x40032c:	ret	
<Block for 0x400326, 5 bytes>
0x400326:	call	0x500020
