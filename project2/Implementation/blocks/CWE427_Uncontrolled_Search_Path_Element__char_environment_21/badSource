<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	eax, dword ptr [rip + 0x336]
0x400016:	test	eax, eax
0x400018:	je	0x400067
<Block for 0x400067, 6 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x18]
0x40006b:	leave	
0x40006c:	ret	
<Block for 0x40001a, 12 bytes>
0x40001a:	mov	rax, qword ptr [rbp - 0x18]
0x40001e:	mov	rdi, rax
0x400021:	call	0x500000
<Block for 0x400026, 16 bytes>
0x400026:	mov	qword ptr [rbp - 0x10], rax
0x40002a:	lea	rdi, [rip + 0x327]
0x400031:	call	0x500008
<Block for 0x400036, 11 bytes>
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	cmp	qword ptr [rbp - 8], 0
0x40003f:	je	0x400067
<Block for 0x400041, 38 bytes>
0x400041:	mov	eax, 0xf9
0x400046:	sub	rax, qword ptr [rbp - 0x10]
0x40004a:	mov	rdx, rax
0x40004d:	mov	rcx, qword ptr [rbp - 0x18]
0x400051:	mov	rax, qword ptr [rbp - 0x10]
0x400055:	add	rcx, rax
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	rsi, rax
0x40005f:	mov	rdi, rcx
0x400062:	call	0x500010
