<Block for 0x40006d, 82 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x120
0x40007c:	mov	rax, qword ptr fs:[0x28]
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	xor	eax, eax
0x40008b:	movabs	rax, 0x3d48544150
0x400095:	mov	edx, 0
0x40009a:	mov	qword ptr [rbp - 0x110], rax
0x4000a1:	mov	qword ptr [rbp - 0x108], rdx
0x4000a8:	lea	rdx, [rbp - 0x100]
0x4000af:	mov	eax, 0
0x4000b4:	mov	ecx, 0x1d
0x4000b9:	mov	rdi, rdx
0x4000bc:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000bf, 49 bytes>
0x4000bf:	mov	rdx, rdi
0x4000c2:	mov	word ptr [rdx], ax
0x4000c5:	add	rdx, 2
0x4000c9:	lea	rax, [rbp - 0x110]
0x4000d0:	mov	qword ptr [rbp - 0x118], rax
0x4000d7:	mov	dword ptr [rip + 0x26b], 1
0x4000e1:	mov	rax, qword ptr [rbp - 0x118]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x400000
<Block for 0x4000bc, 3 bytes>
0x4000bc:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000f0, 22 bytes>
0x4000f0:	mov	qword ptr [rbp - 0x118], rax
0x4000f7:	mov	rax, qword ptr [rbp - 0x118]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500018
<Block for 0x400106, 16 bytes>
0x400106:	nop	
0x400107:	mov	rax, qword ptr [rbp - 8]
0x40010b:	xor	rax, qword ptr fs:[0x28]
0x400114:	je	0x40011b
<Block for 0x40011b, 2 bytes>
0x40011b:	leave	
0x40011c:	ret	
<Block for 0x400116, 5 bytes>
0x400116:	call	0x500020
