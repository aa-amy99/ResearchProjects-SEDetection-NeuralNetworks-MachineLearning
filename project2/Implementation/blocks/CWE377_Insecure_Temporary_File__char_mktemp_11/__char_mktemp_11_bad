<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000a2
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x400029, 30 bytes>
0x400029:	movabs	rax, 0x5858585858586e66
0x400033:	mov	qword ptr [rbp - 0x11], rax
0x400037:	mov	byte ptr [rbp - 9], 0
0x40003b:	lea	rax, [rbp - 0x11]
0x40003f:	mov	rdi, rax
0x400042:	call	0x500008
<Block for 0x4000b7, 2 bytes>
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500030
<Block for 0x400047, 11 bytes>
0x400047:	mov	qword ptr [rbp - 0x20], rax
0x40004b:	cmp	qword ptr [rbp - 0x20], 0
0x400050:	jne	0x40005c
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 1
0x400057:	call	0x500010
<Block for 0x40005c, 12 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0x20]
0x400060:	mov	rdi, rax
0x400063:	call	0x500018
<Block for 0x400068, 27 bytes>
0x400068:	mov	rax, qword ptr [rbp - 0x20]
0x40006c:	mov	edx, 0x180
0x400071:	mov	esi, 0x42
0x400076:	mov	rdi, rax
0x400079:	mov	eax, 0
0x40007e:	call	0x500020
<Block for 0x400083, 9 bytes>
0x400083:	mov	dword ptr [rbp - 0x24], eax
0x400086:	cmp	dword ptr [rbp - 0x24], -1
0x40008a:	je	0x4000a2
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0x17d]
0x400093:	call	0x500018
<Block for 0x400098, 10 bytes>
0x400098:	mov	eax, dword ptr [rbp - 0x24]
0x40009b:	mov	edi, eax
0x40009d:	call	0x500028
