<Block for 0x400066, 23 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x28
0x400073:	mov	edi, 8
0x400078:	call	0x500000
<Block for 0x40007d, 43 bytes>
0x40007d:	mov	qword ptr [rbp - 0x28], rax
0x400081:	mov	rax, qword ptr [rbp - 0x28]
0x400085:	mov	dword ptr [rax], 0
0x40008b:	mov	rax, qword ptr [rbp - 0x28]
0x40008f:	mov	dword ptr [rax + 4], 0
0x400096:	mov	rax, qword ptr [rbp - 0x28]
0x40009a:	mov	qword ptr [rbp - 0x20], rax
0x40009e:	mov	edi, 8
0x4000a3:	call	0x500000
<Block for 0x4000a8, 11 bytes>
0x4000a8:	mov	rbx, rax
0x4000ab:	mov	rdi, rbx
0x4000ae:	call	0x4001b6
<Block for 0x4000b3, 30 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x18], rbx
0x4000b7:	mov	rax, qword ptr [rbp - 0x18]
0x4000bb:	mov	rax, qword ptr [rax]
0x4000be:	mov	rcx, qword ptr [rax]
0x4000c1:	mov	rdx, qword ptr [rbp - 0x20]
0x4000c5:	mov	rax, qword ptr [rbp - 0x18]
0x4000c9:	mov	rsi, rdx
0x4000cc:	mov	rdi, rax
0x4000cf:	call	rcx
<Block for 0x4000d1, 9 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x18]
0x4000d5:	test	rax, rax
0x4000d8:	je	0x4000e7
<Block for 0x4000e7, 8 bytes>
0x4000e7:	nop	
0x4000e8:	add	rsp, 0x28
0x4000ec:	pop	rbx
0x4000ed:	pop	rbp
0x4000ee:	ret	
<Block for 0x4000da, 13 bytes>
0x4000da:	mov	esi, 8
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500008
