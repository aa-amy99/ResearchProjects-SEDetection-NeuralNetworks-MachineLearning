<Block for 0x400186, 54 bytes>
0x400186:	endbr64	
0x40018a:	push	rbp
0x40018b:	mov	rbp, rsp
0x40018e:	sub	rsp, 0xf0
0x400195:	mov	rax, qword ptr fs:[0x28]
0x40019e:	mov	qword ptr [rbp - 8], rax
0x4001a2:	xor	eax, eax
0x4001a4:	lea	rax, [rbp - 0xe0]
0x4001ab:	mov	qword ptr [rbp - 0xf0], rax
0x4001b2:	mov	eax, 0
0x4001b7:	call	0x400000
<Block for 0x4001bc, 4 bytes>
0x4001bc:	test	eax, eax
0x4001be:	je	0x4001ca
<Block for 0x4001ca, 22 bytes>
0x4001ca:	lea	rax, [rbp - 0x70]
0x4001ce:	mov	edx, 0x63
0x4001d3:	mov	esi, 0x43
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500000
<Block for 0x4001c0, 32 bytes>
0x4001c0:	mov	rax, qword ptr [rbp - 0xf0]
0x4001c7:	mov	byte ptr [rax], 0
0x4001ca:	lea	rax, [rbp - 0x70]
0x4001ce:	mov	edx, 0x63
0x4001d3:	mov	esi, 0x43
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500000
<Block for 0x4001e0, 16 bytes>
0x4001e0:	mov	byte ptr [rbp - 0xd], 0
0x4001e4:	lea	rax, [rbp - 0x70]
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500008
<Block for 0x4001f0, 36 bytes>
0x4001f0:	mov	qword ptr [rbp - 0xe8], rax
0x4001f7:	mov	rdx, qword ptr [rbp - 0xe8]
0x4001fe:	lea	rcx, [rbp - 0x70]
0x400202:	mov	rax, qword ptr [rbp - 0xf0]
0x400209:	mov	rsi, rcx
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500010
<Block for 0x400214, 15 bytes>
0x400214:	mov	rax, qword ptr [rbp - 0xf0]
0x40021b:	mov	rdi, rax
0x40021e:	call	0x500018
<Block for 0x400223, 16 bytes>
0x400223:	nop	
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	xor	rax, qword ptr fs:[0x28]
0x400231:	je	0x400238
<Block for 0x400238, 2 bytes>
0x400238:	leave	
0x400239:	ret	
<Block for 0x400233, 5 bytes>
0x400233:	call	0x500020
