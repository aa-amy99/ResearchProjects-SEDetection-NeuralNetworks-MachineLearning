<Block for 0x4000c4, 54 bytes>
0x4000c4:	endbr64	
0x4000c8:	push	rbp
0x4000c9:	mov	rbp, rsp
0x4000cc:	sub	rsp, 0xf0
0x4000d3:	mov	rax, qword ptr fs:[0x28]
0x4000dc:	mov	qword ptr [rbp - 8], rax
0x4000e0:	xor	eax, eax
0x4000e2:	lea	rax, [rbp - 0xe0]
0x4000e9:	mov	qword ptr [rbp - 0xf0], rax
0x4000f0:	mov	eax, 0
0x4000f5:	call	0x40000f
<Block for 0x4000fa, 4 bytes>
0x4000fa:	test	eax, eax
0x4000fc:	je	0x40010c
<Block for 0x40010c, 32 bytes>
0x40010c:	mov	rax, qword ptr [rbp - 0xf0]
0x400113:	mov	byte ptr [rax], 0
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x4000fe, 12 bytes>
0x4000fe:	lea	rdi, [rip + 0x154]
0x400105:	call	0x500018
<Block for 0x40012c, 16 bytes>
0x40012c:	mov	byte ptr [rbp - 0xd], 0
0x400130:	lea	rax, [rbp - 0x70]
0x400134:	mov	rdi, rax
0x400137:	call	0x500008
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x400116
<Block for 0x40013c, 36 bytes>
0x40013c:	mov	qword ptr [rbp - 0xe8], rax
0x400143:	mov	rdx, qword ptr [rbp - 0xe8]
0x40014a:	lea	rcx, [rbp - 0x70]
0x40014e:	mov	rax, qword ptr [rbp - 0xf0]
0x400155:	mov	rsi, rcx
0x400158:	mov	rdi, rax
0x40015b:	call	0x500010
<Block for 0x400116, 22 bytes>
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x400160, 15 bytes>
0x400160:	mov	rax, qword ptr [rbp - 0xf0]
0x400167:	mov	rdi, rax
0x40016a:	call	0x500018
<Block for 0x40016f, 16 bytes>
0x40016f:	nop	
0x400170:	mov	rax, qword ptr [rbp - 8]
0x400174:	xor	rax, qword ptr fs:[0x28]
0x40017d:	je	0x400184
<Block for 0x400184, 2 bytes>
0x400184:	leave	
0x400185:	ret	
<Block for 0x40017f, 5 bytes>
0x40017f:	call	0x500020
