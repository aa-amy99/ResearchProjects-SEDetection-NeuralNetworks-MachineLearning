<Block for 0x40001e, 54 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xf0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	lea	rax, [rbp - 0xe0]
0x400043:	mov	qword ptr [rbp - 0xf0], rax
0x40004a:	mov	eax, 0
0x40004f:	call	0x400000
<Block for 0x400054, 22 bytes>
0x400054:	lea	rax, [rbp - 0x70]
0x400058:	mov	edx, 0x63
0x40005d:	mov	esi, 0x43
0x400062:	mov	rdi, rax
0x400065:	call	0x500000
<Block for 0x40006a, 16 bytes>
0x40006a:	mov	byte ptr [rbp - 0xd], 0
0x40006e:	lea	rax, [rbp - 0x70]
0x400072:	mov	rdi, rax
0x400075:	call	0x500008
<Block for 0x40007a, 36 bytes>
0x40007a:	mov	qword ptr [rbp - 0xe8], rax
0x400081:	mov	rdx, qword ptr [rbp - 0xe8]
0x400088:	lea	rcx, [rbp - 0x70]
0x40008c:	mov	rax, qword ptr [rbp - 0xf0]
0x400093:	mov	rsi, rcx
0x400096:	mov	rdi, rax
0x400099:	call	0x500010
<Block for 0x40009e, 15 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0xf0]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500018
<Block for 0x4000ad, 16 bytes>
0x4000ad:	nop	
0x4000ae:	mov	rax, qword ptr [rbp - 8]
0x4000b2:	xor	rax, qword ptr fs:[0x28]
0x4000bb:	je	0x4000c2
<Block for 0x4000c2, 2 bytes>
0x4000c2:	leave	
0x4000c3:	ret	
<Block for 0x4000bd, 5 bytes>
0x4000bd:	call	0x500020
