<Block for 0x400112, 40 bytes>
0x400112:	endbr64	
0x400116:	push	rbp
0x400117:	mov	rbp, rsp
0x40011a:	push	rbx
0x40011b:	sub	rsp, 0x58
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 0x18], rax
0x40012c:	xor	eax, eax
0x40012e:	lea	rax, [rbp - 0x50]
0x400132:	mov	rdi, rax
0x400135:	call	0x4002c0
<Block for 0x40013a, 27 bytes>
0x40013a:	mov	byte ptr [rbp - 0x51], 0x20
0x40013e:	mov	byte ptr [rbp - 0x51], 0x61
0x400142:	lea	rdx, [rbp - 0x51]
0x400146:	lea	rax, [rbp - 0x50]
0x40014a:	mov	rsi, rdx
0x40014d:	mov	rdi, rax
0x400150:	call	0x4003b6
<Block for 0x400155, 19 bytes>
0x400155:	lea	rdx, [rbp - 0x51]
0x400159:	lea	rax, [rbp - 0x50]
0x40015d:	mov	rsi, rdx
0x400160:	mov	rdi, rax
0x400163:	call	0x4003b6
<Block for 0x400168, 19 bytes>
0x400168:	lea	rdx, [rbp - 0x51]
0x40016c:	lea	rax, [rbp - 0x50]
0x400170:	mov	rsi, rdx
0x400173:	mov	rdi, rax
0x400176:	call	0x4003b6
<Block for 0x40017b, 19 bytes>
0x40017b:	lea	rdx, [rbp - 0x50]
0x40017f:	lea	rax, [rbp - 0x30]
0x400183:	mov	rsi, rdx
0x400186:	mov	rdi, rax
0x400189:	call	0x4003f0
<Block for 0x40018e, 12 bytes>
0x40018e:	lea	rax, [rbp - 0x30]
0x400192:	mov	rdi, rax
0x400195:	call	0x500030
<Block for 0x40019a, 12 bytes>
0x40019a:	lea	rax, [rbp - 0x30]
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x4002e0
<Block for 0x4001a6, 12 bytes>
0x4001a6:	lea	rax, [rbp - 0x50]
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x4002e0
<Block for 0x4001b2, 16 bytes>
0x4001b2:	nop	
0x4001b3:	mov	rax, qword ptr [rbp - 0x18]
0x4001b7:	xor	rax, qword ptr fs:[0x28]
0x4001c0:	je	0x4001fc
<Block for 0x4001fc, 7 bytes>
0x4001fc:	add	rsp, 0x58
0x400200:	pop	rbx
0x400201:	pop	rbp
0x400202:	ret	
<Block for 0x4001c2, 2 bytes>
0x4001c2:	jmp	0x4001f7
<Block for 0x4001f7, 5 bytes>
0x4001f7:	call	0x500028
