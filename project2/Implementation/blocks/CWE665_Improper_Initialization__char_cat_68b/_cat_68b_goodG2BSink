<Block for 0x400076, 60 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	add	rsp, -0x80
0x400082:	mov	rax, qword ptr fs:[0x28]
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	xor	eax, eax
0x400091:	mov	rax, qword ptr [rip + 0xfff90]
0x400098:	mov	qword ptr [rbp - 0x78], rax
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	edx, 0x63
0x4000a5:	mov	esi, 0x43
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500008
<Block for 0x4000b2, 23 bytes>
0x4000b2:	mov	byte ptr [rbp - 0xd], 0
0x4000b6:	lea	rdx, [rbp - 0x70]
0x4000ba:	mov	rax, qword ptr [rbp - 0x78]
0x4000be:	mov	rsi, rdx
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500010
<Block for 0x4000c9, 12 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 0x78]
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500018
<Block for 0x4000d5, 16 bytes>
0x4000d5:	nop	
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	xor	rax, qword ptr fs:[0x28]
0x4000e3:	je	0x4000ea
<Block for 0x4000ea, 2 bytes>
0x4000ea:	leave	
0x4000eb:	ret	
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500020
