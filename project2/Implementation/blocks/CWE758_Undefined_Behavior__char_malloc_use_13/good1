<Block for 0x40005a, 23 bytes>
0x40005a:	endbr64	
0x40005e:	push	rbp
0x40005f:	mov	rbp, rsp
0x400062:	sub	rsp, 0x10
0x400066:	mov	eax, dword ptr [rip + 0xfff94]
0x40006c:	cmp	eax, 5
0x40006f:	je	0x40007f
<Block for 0x40007f, 10 bytes>
0x40007f:	mov	edi, 1
0x400084:	call	0x500008
<Block for 0x400071, 12 bytes>
0x400071:	lea	rdi, [rip + 0xdf]
0x400078:	call	0x500028
<Block for 0x400089, 11 bytes>
0x400089:	mov	qword ptr [rbp - 8], rax
0x40008d:	cmp	qword ptr [rbp - 8], 0
0x400092:	jne	0x40009e
<Block for 0x40007d, 2 bytes>
0x40007d:	jmp	0x4000cd
<Block for 0x400094, 10 bytes>
0x400094:	mov	edi, 0xffffffff
0x400099:	call	0x500010
<Block for 0x40009e, 35 bytes>
0x40009e:	mov	byte ptr [rbp - 0xa], 5
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	movzx	edx, byte ptr [rbp - 0xa]
0x4000aa:	mov	byte ptr [rax], dl
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	movzx	eax, byte ptr [rax]
0x4000b3:	mov	byte ptr [rbp - 9], al
0x4000b6:	movsx	eax, byte ptr [rbp - 9]
0x4000ba:	mov	edi, eax
0x4000bc:	call	0x500020
<Block for 0x4000cd, 3 bytes>
0x4000cd:	nop	
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000c1, 12 bytes>
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500018
