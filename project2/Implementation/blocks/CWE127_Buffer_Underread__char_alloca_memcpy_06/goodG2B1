<Block for 0x40019b, 85 bytes>
0x40019b:	endbr64	
0x40019f:	push	rbp
0x4001a0:	mov	rbp, rsp
0x4001a3:	push	rbx
0x4001a4:	sub	rsp, 0x88
0x4001ab:	mov	rax, qword ptr fs:[0x28]
0x4001b4:	mov	qword ptr [rbp - 0x18], rax
0x4001b8:	xor	eax, eax
0x4001ba:	mov	eax, 0x10
0x4001bf:	sub	rax, 1
0x4001c3:	add	rax, 0x6c
0x4001c7:	mov	esi, 0x10
0x4001cc:	mov	edx, 0
0x4001d1:	div	rsi
0x4001d4:	imul	rax, rax, 0x10
0x4001d8:	mov	rdx, rax
0x4001db:	and	rdx, 0xfffffffffffff000
0x4001e2:	mov	rbx, rsp
0x4001e5:	sub	rbx, rdx
0x4001e8:	mov	rdx, rbx
0x4001eb:	cmp	rsp, rdx
0x4001ee:	je	0x400202
<Block for 0x400202, 26 bytes>
0x400202:	mov	rdx, rax
0x400205:	and	edx, 0xfff
0x40020b:	sub	rsp, rdx
0x40020e:	mov	rdx, rax
0x400211:	and	edx, 0xfff
0x400217:	test	rdx, rdx
0x40021a:	je	0x40022c
<Block for 0x4001f0, 18 bytes>
0x4001f0:	sub	rsp, 0x1000
0x4001f7:	or	qword ptr [rsp + 0xff8], 0
0x400200:	jmp	0x4001eb
<Block for 0x40022c, 47 bytes>
0x40022c:	mov	rax, rsp
0x40022f:	add	rax, 0xf
0x400233:	shr	rax, 4
0x400237:	shl	rax, 4
0x40023b:	mov	qword ptr [rbp - 0x88], rax
0x400242:	mov	rax, qword ptr [rbp - 0x88]
0x400249:	mov	edx, 0x63
0x40024e:	mov	esi, 0x41
0x400253:	mov	rdi, rax
0x400256:	call	0x500000
<Block for 0x40021c, 63 bytes>
0x40021c:	and	eax, 0xfff
0x400221:	sub	rax, 8
0x400225:	add	rax, rsp
0x400228:	or	qword ptr [rax], 0
0x40022c:	mov	rax, rsp
0x40022f:	add	rax, 0xf
0x400233:	shr	rax, 4
0x400237:	shl	rax, 4
0x40023b:	mov	qword ptr [rbp - 0x88], rax
0x400242:	mov	rax, qword ptr [rbp - 0x88]
0x400249:	mov	edx, 0x63
0x40024e:	mov	esi, 0x41
0x400253:	mov	rdi, rax
0x400256:	call	0x500000
<Block for 0x4001eb, 5 bytes>
0x4001eb:	cmp	rsp, rdx
0x4001ee:	je	0x400202
<Block for 0x40025b, 24 bytes>
0x40025b:	mov	rax, qword ptr [rbp - 0x88]
0x400262:	add	rax, 0x63
0x400266:	mov	byte ptr [rax], 0
0x400269:	mov	eax, 5
0x40026e:	cmp	eax, 5
0x400271:	je	0x400281
<Block for 0x400281, 36 bytes>
0x400281:	mov	rax, qword ptr [rbp - 0x88]
0x400288:	mov	qword ptr [rbp - 0x90], rax
0x40028f:	lea	rax, [rbp - 0x80]
0x400293:	mov	edx, 0x63
0x400298:	mov	esi, 0x43
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500000
<Block for 0x400273, 12 bytes>
0x400273:	lea	rdi, [rip + 0x282]
0x40027a:	call	0x500008
<Block for 0x4002a5, 128 bytes>
0x4002a5:	mov	byte ptr [rbp - 0x1d], 0
0x4002a9:	mov	rax, qword ptr [rbp - 0x90]
0x4002b0:	mov	rcx, qword ptr [rax]
0x4002b3:	mov	rbx, qword ptr [rax + 8]
0x4002b7:	mov	qword ptr [rbp - 0x80], rcx
0x4002bb:	mov	qword ptr [rbp - 0x78], rbx
0x4002bf:	mov	rcx, qword ptr [rax + 0x10]
0x4002c3:	mov	rbx, qword ptr [rax + 0x18]
0x4002c7:	mov	qword ptr [rbp - 0x70], rcx
0x4002cb:	mov	qword ptr [rbp - 0x68], rbx
0x4002cf:	mov	rcx, qword ptr [rax + 0x20]
0x4002d3:	mov	rbx, qword ptr [rax + 0x28]
0x4002d7:	mov	qword ptr [rbp - 0x60], rcx
0x4002db:	mov	qword ptr [rbp - 0x58], rbx
0x4002df:	mov	rcx, qword ptr [rax + 0x30]
0x4002e3:	mov	rbx, qword ptr [rax + 0x38]
0x4002e7:	mov	qword ptr [rbp - 0x50], rcx
0x4002eb:	mov	qword ptr [rbp - 0x48], rbx
0x4002ef:	mov	rcx, qword ptr [rax + 0x40]
0x4002f3:	mov	rbx, qword ptr [rax + 0x48]
0x4002f7:	mov	qword ptr [rbp - 0x40], rcx
0x4002fb:	mov	qword ptr [rbp - 0x38], rbx
0x4002ff:	mov	rcx, qword ptr [rax + 0x50]
0x400303:	mov	rbx, qword ptr [rax + 0x58]
0x400307:	mov	qword ptr [rbp - 0x30], rcx
0x40030b:	mov	qword ptr [rbp - 0x28], rbx
0x40030f:	mov	eax, dword ptr [rax + 0x60]
0x400312:	mov	dword ptr [rbp - 0x20], eax
0x400315:	mov	byte ptr [rbp - 0x1d], 0
0x400319:	lea	rax, [rbp - 0x80]
0x40031d:	mov	rdi, rax
0x400320:	call	0x500008
<Block for 0x40027f, 2 bytes>
0x40027f:	jmp	0x40028f
<Block for 0x400325, 16 bytes>
0x400325:	nop	
0x400326:	mov	rax, qword ptr [rbp - 0x18]
0x40032a:	xor	rax, qword ptr fs:[0x28]
0x400333:	je	0x40033a
<Block for 0x40028f, 22 bytes>
0x40028f:	lea	rax, [rbp - 0x80]
0x400293:	mov	edx, 0x63
0x400298:	mov	esi, 0x43
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500000
<Block for 0x40033a, 6 bytes>
0x40033a:	mov	rbx, qword ptr [rbp - 8]
0x40033e:	leave	
0x40033f:	ret	
<Block for 0x400335, 5 bytes>
0x400335:	call	0x500010
