<Block for 0x40001e, 46 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x90
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	qword ptr [rbp - 0x88], 0
0x400047:	call	0x400000
<Block for 0x40004c, 9 bytes>
0x40004c:	test	eax, eax
0x40004e:	setne	al
0x400051:	test	al, al
0x400053:	je	0x40008d
<Block for 0x40008d, 22 bytes>
0x40008d:	lea	rax, [rbp - 0x70]
0x400091:	mov	edx, 0x63
0x400096:	mov	esi, 0x43
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500008
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0x32
0x40005a:	call	0x500000
<Block for 0x4000a3, 16 bytes>
0x4000a3:	mov	byte ptr [rbp - 0xd], 0
0x4000a7:	lea	rax, [rbp - 0x70]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500010
<Block for 0x40005f, 32 bytes>
0x40005f:	mov	qword ptr [rbp - 0x88], rax
0x400066:	mov	rax, qword ptr [rbp - 0x88]
0x40006d:	mov	edx, 0x31
0x400072:	mov	esi, 0x41
0x400077:	mov	rdi, rax
0x40007a:	call	0x500008
<Block for 0x4000b3, 22 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x78], rax
0x4000b7:	mov	qword ptr [rbp - 0x80], 0
0x4000bf:	mov	rax, qword ptr [rbp - 0x80]
0x4000c3:	cmp	rax, qword ptr [rbp - 0x78]
0x4000c7:	jae	0x4000ee
<Block for 0x40007f, 36 bytes>
0x40007f:	mov	rax, qword ptr [rbp - 0x88]
0x400086:	add	rax, 0x31
0x40008a:	mov	byte ptr [rax], 0
0x40008d:	lea	rax, [rbp - 0x70]
0x400091:	mov	edx, 0x63
0x400096:	mov	esi, 0x43
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500008
<Block for 0x4000c9, 37 bytes>
0x4000c9:	mov	rdx, qword ptr [rbp - 0x88]
0x4000d0:	mov	rax, qword ptr [rbp - 0x80]
0x4000d4:	add	rax, rdx
0x4000d7:	movzx	eax, byte ptr [rax]
0x4000da:	lea	rcx, [rbp - 0x70]
0x4000de:	mov	rdx, qword ptr [rbp - 0x80]
0x4000e2:	add	rdx, rcx
0x4000e5:	mov	byte ptr [rdx], al
0x4000e7:	add	qword ptr [rbp - 0x80], 1
0x4000ec:	jmp	0x4000bf
<Block for 0x4000ee, 16 bytes>
0x4000ee:	mov	byte ptr [rbp - 0xd], 0
0x4000f2:	lea	rax, [rbp - 0x70]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500018
<Block for 0x4000bf, 10 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 0x80]
0x4000c3:	cmp	rax, qword ptr [rbp - 0x78]
0x4000c7:	jae	0x4000ee
<Block for 0x4000fe, 10 bytes>
0x4000fe:	cmp	qword ptr [rbp - 0x88], 0
0x400106:	je	0x400117
<Block for 0x400117, 16 bytes>
0x400117:	nop	
0x400118:	mov	rax, qword ptr [rbp - 8]
0x40011c:	xor	rax, qword ptr fs:[0x28]
0x400125:	je	0x40012c
<Block for 0x400108, 15 bytes>
0x400108:	mov	rax, qword ptr [rbp - 0x88]
0x40010f:	mov	rdi, rax
0x400112:	call	0x500020
<Block for 0x40012c, 2 bytes>
0x40012c:	leave	
0x40012d:	ret	
<Block for 0x400127, 5 bytes>
0x400127:	call	0x500028
