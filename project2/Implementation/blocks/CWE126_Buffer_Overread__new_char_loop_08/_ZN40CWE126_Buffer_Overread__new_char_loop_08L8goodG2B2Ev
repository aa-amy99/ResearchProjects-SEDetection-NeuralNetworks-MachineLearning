<Block for 0x40024c, 46 bytes>
0x40024c:	endbr64	
0x400250:	push	rbp
0x400251:	mov	rbp, rsp
0x400254:	sub	rsp, 0x90
0x40025b:	mov	rax, qword ptr fs:[0x28]
0x400264:	mov	qword ptr [rbp - 8], rax
0x400268:	xor	eax, eax
0x40026a:	mov	qword ptr [rbp - 0x88], 0
0x400275:	call	0x400000
<Block for 0x40027a, 9 bytes>
0x40027a:	test	eax, eax
0x40027c:	setne	al
0x40027f:	test	al, al
0x400281:	je	0x4002bb
<Block for 0x4002bb, 22 bytes>
0x4002bb:	lea	rax, [rbp - 0x70]
0x4002bf:	mov	edx, 0x63
0x4002c4:	mov	esi, 0x43
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x500008
<Block for 0x400283, 10 bytes>
0x400283:	mov	edi, 0x64
0x400288:	call	0x500000
<Block for 0x4002d1, 16 bytes>
0x4002d1:	mov	byte ptr [rbp - 0xd], 0
0x4002d5:	lea	rax, [rbp - 0x70]
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x500010
<Block for 0x40028d, 32 bytes>
0x40028d:	mov	qword ptr [rbp - 0x88], rax
0x400294:	mov	rax, qword ptr [rbp - 0x88]
0x40029b:	mov	edx, 0x63
0x4002a0:	mov	esi, 0x41
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500008
<Block for 0x4002e1, 22 bytes>
0x4002e1:	mov	qword ptr [rbp - 0x78], rax
0x4002e5:	mov	qword ptr [rbp - 0x80], 0
0x4002ed:	mov	rax, qword ptr [rbp - 0x80]
0x4002f1:	cmp	rax, qword ptr [rbp - 0x78]
0x4002f5:	jae	0x40031c
<Block for 0x4002ad, 36 bytes>
0x4002ad:	mov	rax, qword ptr [rbp - 0x88]
0x4002b4:	add	rax, 0x63
0x4002b8:	mov	byte ptr [rax], 0
0x4002bb:	lea	rax, [rbp - 0x70]
0x4002bf:	mov	edx, 0x63
0x4002c4:	mov	esi, 0x43
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x500008
<Block for 0x4002f7, 37 bytes>
0x4002f7:	mov	rdx, qword ptr [rbp - 0x88]
0x4002fe:	mov	rax, qword ptr [rbp - 0x80]
0x400302:	add	rax, rdx
0x400305:	movzx	eax, byte ptr [rax]
0x400308:	lea	rcx, [rbp - 0x70]
0x40030c:	mov	rdx, qword ptr [rbp - 0x80]
0x400310:	add	rdx, rcx
0x400313:	mov	byte ptr [rdx], al
0x400315:	add	qword ptr [rbp - 0x80], 1
0x40031a:	jmp	0x4002ed
<Block for 0x40031c, 16 bytes>
0x40031c:	mov	byte ptr [rbp - 0xd], 0
0x400320:	lea	rax, [rbp - 0x70]
0x400324:	mov	rdi, rax
0x400327:	call	0x500018
<Block for 0x4002ed, 10 bytes>
0x4002ed:	mov	rax, qword ptr [rbp - 0x80]
0x4002f1:	cmp	rax, qword ptr [rbp - 0x78]
0x4002f5:	jae	0x40031c
<Block for 0x40032c, 10 bytes>
0x40032c:	cmp	qword ptr [rbp - 0x88], 0
0x400334:	je	0x400345
<Block for 0x400345, 16 bytes>
0x400345:	nop	
0x400346:	mov	rax, qword ptr [rbp - 8]
0x40034a:	xor	rax, qword ptr fs:[0x28]
0x400353:	je	0x40035a
<Block for 0x400336, 15 bytes>
0x400336:	mov	rax, qword ptr [rbp - 0x88]
0x40033d:	mov	rdi, rax
0x400340:	call	0x500020
<Block for 0x40035a, 2 bytes>
0x40035a:	leave	
0x40035b:	ret	
<Block for 0x400355, 5 bytes>
0x400355:	call	0x500028
