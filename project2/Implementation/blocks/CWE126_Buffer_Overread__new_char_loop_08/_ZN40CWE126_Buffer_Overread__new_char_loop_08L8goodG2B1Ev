<Block for 0x40012e, 46 bytes>
0x40012e:	endbr64	
0x400132:	push	rbp
0x400133:	mov	rbp, rsp
0x400136:	sub	rsp, 0x90
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 8], rax
0x40014a:	xor	eax, eax
0x40014c:	mov	qword ptr [rbp - 0x88], 0
0x400157:	call	0x40000f
<Block for 0x40015c, 9 bytes>
0x40015c:	test	eax, eax
0x40015e:	setne	al
0x400161:	test	al, al
0x400163:	je	0x400173
<Block for 0x400173, 10 bytes>
0x400173:	mov	edi, 0x64
0x400178:	call	0x500000
<Block for 0x400165, 12 bytes>
0x400165:	lea	rdi, [rip + 0x205]
0x40016c:	call	0x500018
<Block for 0x40017d, 32 bytes>
0x40017d:	mov	qword ptr [rbp - 0x88], rax
0x400184:	mov	rax, qword ptr [rbp - 0x88]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x41
0x400195:	mov	rdi, rax
0x400198:	call	0x500008
<Block for 0x400171, 2 bytes>
0x400171:	jmp	0x4001ab
<Block for 0x40019d, 36 bytes>
0x40019d:	mov	rax, qword ptr [rbp - 0x88]
0x4001a4:	add	rax, 0x63
0x4001a8:	mov	byte ptr [rax], 0
0x4001ab:	lea	rax, [rbp - 0x70]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x43
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500008
<Block for 0x4001ab, 22 bytes>
0x4001ab:	lea	rax, [rbp - 0x70]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x43
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500008
<Block for 0x4001c1, 16 bytes>
0x4001c1:	mov	byte ptr [rbp - 0xd], 0
0x4001c5:	lea	rax, [rbp - 0x70]
0x4001c9:	mov	rdi, rax
0x4001cc:	call	0x500010
<Block for 0x4001d1, 22 bytes>
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	mov	qword ptr [rbp - 0x80], 0
0x4001dd:	mov	rax, qword ptr [rbp - 0x80]
0x4001e1:	cmp	rax, qword ptr [rbp - 0x78]
0x4001e5:	jae	0x40020c
<Block for 0x4001e7, 37 bytes>
0x4001e7:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ee:	mov	rax, qword ptr [rbp - 0x80]
0x4001f2:	add	rax, rdx
0x4001f5:	movzx	eax, byte ptr [rax]
0x4001f8:	lea	rcx, [rbp - 0x70]
0x4001fc:	mov	rdx, qword ptr [rbp - 0x80]
0x400200:	add	rdx, rcx
0x400203:	mov	byte ptr [rdx], al
0x400205:	add	qword ptr [rbp - 0x80], 1
0x40020a:	jmp	0x4001dd
<Block for 0x40020c, 16 bytes>
0x40020c:	mov	byte ptr [rbp - 0xd], 0
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	rdi, rax
0x400217:	call	0x500018
<Block for 0x4001dd, 10 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x80]
0x4001e1:	cmp	rax, qword ptr [rbp - 0x78]
0x4001e5:	jae	0x40020c
<Block for 0x40021c, 10 bytes>
0x40021c:	cmp	qword ptr [rbp - 0x88], 0
0x400224:	je	0x400235
<Block for 0x400235, 16 bytes>
0x400235:	nop	
0x400236:	mov	rax, qword ptr [rbp - 8]
0x40023a:	xor	rax, qword ptr fs:[0x28]
0x400243:	je	0x40024a
<Block for 0x400226, 15 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0x88]
0x40022d:	mov	rdi, rax
0x400230:	call	0x500020
<Block for 0x40024a, 2 bytes>
0x40024a:	leave	
0x40024b:	ret	
<Block for 0x400245, 5 bytes>
0x400245:	call	0x500028
