<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000b6
<Block for 0x4000b6, 16 bytes>
0x4000b6:	nop	
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	xor	rax, qword ptr fs:[0x28]
0x4000c4:	je	0x4000cb
<Block for 0x40002d, 27 bytes>
0x40002d:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400034:	mov	edx, 6
0x400039:	mov	esi, 1
0x40003e:	mov	edi, 2
0x400043:	call	0x500008
<Block for 0x4000cb, 2 bytes>
0x4000cb:	leave	
0x4000cc:	ret	
<Block for 0x4000c6, 5 bytes>
0x4000c6:	call	0x500038
<Block for 0x400048, 9 bytes>
0x400048:	mov	dword ptr [rbp - 0x24], eax
0x40004b:	cmp	dword ptr [rbp - 0x24], -1
0x40004f:	je	0x4000a5
<Block for 0x400051, 22 bytes>
0x400051:	lea	rax, [rbp - 0x20]
0x400055:	mov	edx, 0x10
0x40005a:	mov	esi, 0
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x4000a5, 1 bytes>
0x4000a5:	nop	
<Block for 0x400067, 18 bytes>
0x400067:	mov	word ptr [rbp - 0x20], 2
0x40006d:	lea	rdi, [rip + 0x59]
0x400074:	call	0x500018
<Block for 0x4000a6, 6 bytes>
0x4000a6:	cmp	dword ptr [rbp - 0x24], -1
0x4000aa:	je	0x4000b6
<Block for 0x400079, 13 bytes>
0x400079:	mov	dword ptr [rbp - 0x1c], eax
0x40007c:	mov	edi, 0x50
0x400081:	call	0x500020
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	eax, dword ptr [rbp - 0x24]
0x4000af:	mov	edi, eax
0x4000b1:	call	0x500030
<Block for 0x400086, 26 bytes>
0x400086:	mov	word ptr [rbp - 0x1e], ax
0x40008a:	lea	rcx, [rbp - 0x20]
0x40008e:	mov	eax, dword ptr [rbp - 0x24]
0x400091:	mov	edx, 0x10
0x400096:	mov	rsi, rcx
0x400099:	mov	edi, eax
0x40009b:	call	0x500028
<Block for 0x4000a0, 5 bytes>
0x4000a0:	cmp	eax, -1
0x4000a3:	jmp	0x4000a6
