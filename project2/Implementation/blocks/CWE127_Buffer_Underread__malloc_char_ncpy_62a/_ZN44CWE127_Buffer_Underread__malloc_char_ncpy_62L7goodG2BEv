<Block for 0x400092, 47 bytes>
0x400092:	endbr64	
0x400096:	push	rbp
0x400097:	mov	rbp, rsp
0x40009a:	add	rsp, -0x80
0x40009e:	mov	rax, qword ptr fs:[0x28]
0x4000a7:	mov	qword ptr [rbp - 8], rax
0x4000ab:	xor	eax, eax
0x4000ad:	mov	qword ptr [rbp - 0x78], 0
0x4000b5:	lea	rax, [rbp - 0x78]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500030
<Block for 0x4000c1, 22 bytes>
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	mov	edx, 0x63
0x4000ca:	mov	esi, 0x43
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500008
<Block for 0x4000d7, 16 bytes>
0x4000d7:	mov	byte ptr [rbp - 0xd], 0
0x4000db:	lea	rax, [rbp - 0x70]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500010
<Block for 0x4000e7, 22 bytes>
0x4000e7:	mov	rdx, rax
0x4000ea:	mov	rcx, qword ptr [rbp - 0x78]
0x4000ee:	lea	rax, [rbp - 0x70]
0x4000f2:	mov	rsi, rcx
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500018
<Block for 0x4000fd, 16 bytes>
0x4000fd:	mov	byte ptr [rbp - 0xd], 0
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	rdi, rax
0x400108:	call	0x500020
<Block for 0x40010d, 16 bytes>
0x40010d:	nop	
0x40010e:	mov	rax, qword ptr [rbp - 8]
0x400112:	xor	rax, qword ptr fs:[0x28]
0x40011b:	je	0x400122
<Block for 0x400122, 2 bytes>
0x400122:	leave	
0x400123:	ret	
<Block for 0x40011d, 5 bytes>
0x40011d:	call	0x500028
