<Block for 0x400000, 89 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	eax, dword ptr [rip + 0x26f]
0x400051:	test	eax, eax
0x400053:	je	0x400102
<Block for 0x400102, 73 bytes>
0x400102:	mov	rax, qword ptr [rbp - 0x38]
0x400106:	mov	qword ptr [rip + 0x1bb], rax
0x40010d:	mov	rax, qword ptr [rbp - 0x40]
0x400111:	mov	qword ptr [rip + 0x1b8], rax
0x400118:	mov	rax, qword ptr [rip + 0x1a9]
0x40011f:	mov	rdx, qword ptr [rip + 0x1aa]
0x400126:	mov	qword ptr [rax], rdx
0x400129:	mov	rax, qword ptr [rip + 0x1a0]
0x400130:	mov	rdx, qword ptr [rip + 0x191]
0x400137:	mov	qword ptr [rax + 8], rdx
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x400059, 27 bytes>
0x400059:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400060:	mov	edx, 6
0x400065:	mov	esi, 1
0x40006a:	mov	edi, 2
0x40006f:	call	0x500000
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500038
<Block for 0x400074, 9 bytes>
0x400074:	mov	dword ptr [rbp - 0x48], eax
0x400077:	cmp	dword ptr [rbp - 0x48], -1
0x40007b:	je	0x4000ee
<Block for 0x4000ee, 3 bytes>
0x4000ee:	nop	
0x4000ef:	jmp	0x4000f2
<Block for 0x40007d, 22 bytes>
0x40007d:	lea	rax, [rbp - 0x20]
0x400081:	mov	edx, 0x10
0x400086:	mov	esi, 0
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500008
<Block for 0x4000f2, 6 bytes>
0x4000f2:	cmp	dword ptr [rbp - 0x48], -1
0x4000f6:	je	0x400102
<Block for 0x400093, 18 bytes>
0x400093:	mov	word ptr [rbp - 0x20], 2
0x400099:	lea	rdi, [rip + 0x23c]
0x4000a0:	call	0x500010
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	eax, dword ptr [rbp - 0x48]
0x4000fb:	mov	edi, eax
0x4000fd:	call	0x500030
<Block for 0x4000a5, 13 bytes>
0x4000a5:	mov	dword ptr [rbp - 0x1c], eax
0x4000a8:	mov	edi, 0x6987
0x4000ad:	call	0x500018
<Block for 0x4000b2, 26 bytes>
0x4000b2:	mov	word ptr [rbp - 0x1e], ax
0x4000b6:	lea	rcx, [rbp - 0x20]
0x4000ba:	mov	eax, dword ptr [rbp - 0x48]
0x4000bd:	mov	edx, 0x10
0x4000c2:	mov	rsi, rcx
0x4000c5:	mov	edi, eax
0x4000c7:	call	0x500020
<Block for 0x4000cc, 5 bytes>
0x4000cc:	cmp	eax, -1
0x4000cf:	je	0x4000f1
<Block for 0x4000d1, 24 bytes>
0x4000d1:	lea	rsi, [rbp - 0x40]
0x4000d5:	mov	eax, dword ptr [rbp - 0x48]
0x4000d8:	mov	ecx, 0
0x4000dd:	mov	edx, 0x10
0x4000e2:	mov	edi, eax
0x4000e4:	call	0x500028
<Block for 0x4000f1, 1 bytes>
0x4000f1:	nop	
<Block for 0x4000e9, 5 bytes>
0x4000e9:	mov	dword ptr [rbp - 0x44], eax
0x4000ec:	jmp	0x4000f2
