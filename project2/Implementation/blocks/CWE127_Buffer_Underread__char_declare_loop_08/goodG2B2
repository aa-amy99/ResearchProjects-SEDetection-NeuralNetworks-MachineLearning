<Block for 0x4001e6, 55 bytes>
0x4001e6:	endbr64	
0x4001ea:	push	rbp
0x4001eb:	mov	rbp, rsp
0x4001ee:	sub	rsp, 0xf0
0x4001f5:	mov	rax, qword ptr fs:[0x28]
0x4001fe:	mov	qword ptr [rbp - 8], rax
0x400202:	xor	eax, eax
0x400204:	lea	rax, [rbp - 0xe0]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x40021d, 14 bytes>
0x40021d:	mov	byte ptr [rbp - 0x7d], 0
0x400221:	mov	eax, 0
0x400226:	call	0x400000
<Block for 0x40022b, 4 bytes>
0x40022b:	test	eax, eax
0x40022d:	je	0x40023d
<Block for 0x40023d, 22 bytes>
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	edx, 0x63
0x400246:	mov	esi, 0x43
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500000
<Block for 0x40022f, 36 bytes>
0x40022f:	lea	rax, [rbp - 0xe0]
0x400236:	mov	qword ptr [rbp - 0xf0], rax
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	edx, 0x63
0x400246:	mov	esi, 0x43
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500000
<Block for 0x400253, 17 bytes>
0x400253:	mov	byte ptr [rbp - 0xd], 0
0x400257:	mov	qword ptr [rbp - 0xe8], 0
0x400262:	jmp	0x400290
<Block for 0x400290, 10 bytes>
0x400290:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400298:	jbe	0x400264
<Block for 0x400264, 54 bytes>
0x400264:	mov	rdx, qword ptr [rbp - 0xf0]
0x40026b:	mov	rax, qword ptr [rbp - 0xe8]
0x400272:	add	rax, rdx
0x400275:	movzx	eax, byte ptr [rax]
0x400278:	lea	rcx, [rbp - 0x70]
0x40027c:	mov	rdx, qword ptr [rbp - 0xe8]
0x400283:	add	rdx, rcx
0x400286:	mov	byte ptr [rdx], al
0x400288:	add	qword ptr [rbp - 0xe8], 1
0x400290:	cmp	qword ptr [rbp - 0xe8], 0x63
0x400298:	jbe	0x400264
<Block for 0x40029a, 16 bytes>
0x40029a:	mov	byte ptr [rbp - 0xd], 0
0x40029e:	lea	rax, [rbp - 0x70]
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x500008
<Block for 0x4002aa, 16 bytes>
0x4002aa:	nop	
0x4002ab:	mov	rax, qword ptr [rbp - 8]
0x4002af:	xor	rax, qword ptr fs:[0x28]
0x4002b8:	je	0x4002bf
<Block for 0x4002bf, 2 bytes>
0x4002bf:	leave	
0x4002c0:	ret	
<Block for 0x4002ba, 5 bytes>
0x4002ba:	call	0x500010
