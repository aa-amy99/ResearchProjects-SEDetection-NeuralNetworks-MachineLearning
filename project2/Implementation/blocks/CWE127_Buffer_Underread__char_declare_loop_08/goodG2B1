<Block for 0x4000fd, 55 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	sub	rsp, 0xf0
0x40010c:	mov	rax, qword ptr fs:[0x28]
0x400115:	mov	qword ptr [rbp - 8], rax
0x400119:	xor	eax, eax
0x40011b:	lea	rax, [rbp - 0xe0]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x41
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500000
<Block for 0x400134, 14 bytes>
0x400134:	mov	byte ptr [rbp - 0x7d], 0
0x400138:	mov	eax, 0
0x40013d:	call	0x40000f
<Block for 0x400142, 4 bytes>
0x400142:	test	eax, eax
0x400144:	je	0x400154
<Block for 0x400154, 36 bytes>
0x400154:	lea	rax, [rbp - 0xe0]
0x40015b:	mov	qword ptr [rbp - 0xf0], rax
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500000
<Block for 0x400146, 12 bytes>
0x400146:	lea	rdi, [rip + 0x193]
0x40014d:	call	0x500008
<Block for 0x400178, 17 bytes>
0x400178:	mov	byte ptr [rbp - 0xd], 0
0x40017c:	mov	qword ptr [rbp - 0xe8], 0
0x400187:	jmp	0x4001b5
<Block for 0x400152, 2 bytes>
0x400152:	jmp	0x400162
<Block for 0x4001b5, 10 bytes>
0x4001b5:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001bd:	jbe	0x400189
<Block for 0x400162, 22 bytes>
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500000
<Block for 0x400189, 54 bytes>
0x400189:	mov	rdx, qword ptr [rbp - 0xf0]
0x400190:	mov	rax, qword ptr [rbp - 0xe8]
0x400197:	add	rax, rdx
0x40019a:	movzx	eax, byte ptr [rax]
0x40019d:	lea	rcx, [rbp - 0x70]
0x4001a1:	mov	rdx, qword ptr [rbp - 0xe8]
0x4001a8:	add	rdx, rcx
0x4001ab:	mov	byte ptr [rdx], al
0x4001ad:	add	qword ptr [rbp - 0xe8], 1
0x4001b5:	cmp	qword ptr [rbp - 0xe8], 0x63
0x4001bd:	jbe	0x400189
<Block for 0x4001bf, 16 bytes>
0x4001bf:	mov	byte ptr [rbp - 0xd], 0
0x4001c3:	lea	rax, [rbp - 0x70]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x500008
<Block for 0x4001cf, 16 bytes>
0x4001cf:	nop	
0x4001d0:	mov	rax, qword ptr [rbp - 8]
0x4001d4:	xor	rax, qword ptr fs:[0x28]
0x4001dd:	je	0x4001e4
<Block for 0x4001e4, 2 bytes>
0x4001e4:	leave	
0x4001e5:	ret	
<Block for 0x4001df, 5 bytes>
0x4001df:	call	0x500010
