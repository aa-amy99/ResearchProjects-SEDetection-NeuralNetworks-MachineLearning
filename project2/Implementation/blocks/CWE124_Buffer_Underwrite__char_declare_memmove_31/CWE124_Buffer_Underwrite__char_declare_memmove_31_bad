<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x100
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 72 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	lea	rax, [rbp - 0xe0]
0x400042:	sub	rax, 8
0x400046:	mov	qword ptr [rbp - 0xf8], rax
0x40004d:	mov	rax, qword ptr [rbp - 0xf8]
0x400054:	mov	qword ptr [rbp - 0xf0], rax
0x40005b:	mov	rax, qword ptr [rbp - 0xf0]
0x400062:	mov	qword ptr [rbp - 0xe8], rax
0x400069:	lea	rax, [rbp - 0x70]
0x40006d:	mov	edx, 0x63
0x400072:	mov	esi, 0x43
0x400077:	mov	rdi, rax
0x40007a:	call	0x500000
<Block for 0x40007f, 31 bytes>
0x40007f:	mov	byte ptr [rbp - 0xd], 0
0x400083:	lea	rcx, [rbp - 0x70]
0x400087:	mov	rax, qword ptr [rbp - 0xe8]
0x40008e:	mov	edx, 0x64
0x400093:	mov	rsi, rcx
0x400096:	mov	rdi, rax
0x400099:	call	0x500008
<Block for 0x40009e, 29 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0xe8]
0x4000a5:	add	rax, 0x63
0x4000a9:	mov	byte ptr [rax], 0
0x4000ac:	mov	rax, qword ptr [rbp - 0xe8]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500010
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500018
