<Block for 0x40001e, 53 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	add	rsp, -0x80
0x40002a:	mov	qword ptr [rbp - 0x78], rdi
0x40002e:	mov	rax, qword ptr fs:[0x28]
0x400037:	mov	qword ptr [rbp - 8], rax
0x40003b:	xor	eax, eax
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x43
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500000
<Block for 0x400053, 26 bytes>
0x400053:	mov	byte ptr [rbp - 0xd], 0
0x400057:	mov	rax, qword ptr [rbp - 0x78]
0x40005b:	mov	rax, qword ptr [rax]
0x40005e:	lea	rdx, [rbp - 0x70]
0x400062:	mov	rsi, rdx
0x400065:	mov	rdi, rax
0x400068:	call	0x500008
<Block for 0x40006d, 15 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 0x78]
0x400071:	mov	rax, qword ptr [rax]
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 16 bytes>
0x40007c:	nop	
0x40007d:	mov	rax, qword ptr [rbp - 8]
0x400081:	xor	rax, qword ptr fs:[0x28]
0x40008a:	je	0x400091
<Block for 0x400091, 2 bytes>
0x400091:	leave	
0x400092:	ret	
<Block for 0x40008c, 5 bytes>
0x40008c:	call	0x500018
