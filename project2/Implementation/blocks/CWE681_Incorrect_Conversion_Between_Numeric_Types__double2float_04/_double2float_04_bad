<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x400089
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x400027, 39 bytes>
0x400027:	pxor	xmm0, xmm0
0x40002b:	movsd	qword ptr [rbp - 0x118], xmm0
0x400033:	mov	rdx, qword ptr [rip + 0xfffc6]
0x40003a:	lea	rax, [rbp - 0x110]
0x400041:	mov	esi, 0x100
0x400046:	mov	rdi, rax
0x400049:	call	0x500008
<Block for 0x40009e, 2 bytes>
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500028
<Block for 0x40004e, 5 bytes>
0x40004e:	test	rax, rax
0x400051:	je	0x400070
<Block for 0x400070, 12 bytes>
0x400070:	lea	rdi, [rip + 0x209]
0x400077:	call	0x500018
<Block for 0x400053, 15 bytes>
0x400053:	lea	rax, [rbp - 0x110]
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500010
<Block for 0x40007c, 13 bytes>
0x40007c:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x400084:	call	0x500020
<Block for 0x400062, 14 bytes>
0x400062:	movq	rax, xmm0
0x400067:	mov	qword ptr [rbp - 0x118], rax
0x40006e:	jmp	0x40007c
