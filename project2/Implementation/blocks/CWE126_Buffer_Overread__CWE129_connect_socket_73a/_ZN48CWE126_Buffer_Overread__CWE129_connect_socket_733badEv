<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4005be
<Block for 0x40002b, 40 bytes>
0x40002b:	mov	dword ptr [rbp - 0x8c], 0xffffffff
0x400035:	mov	dword ptr [rbp - 0x88], 0xffffffff
0x40003f:	mov	edx, 6
0x400044:	mov	esi, 1
0x400049:	mov	edi, 2
0x40004e:	call	0x500000
<Block for 0x400053, 19 bytes>
0x400053:	mov	dword ptr [rbp - 0x88], eax
0x400059:	cmp	dword ptr [rbp - 0x88], -1
0x400060:	je	0x400116
<Block for 0x400116, 3 bytes>
0x400116:	nop	
0x400117:	jmp	0x40011a
<Block for 0x400066, 22 bytes>
0x400066:	lea	rax, [rbp - 0x40]
0x40006a:	mov	edx, 0x10
0x40006f:	mov	esi, 0
0x400074:	mov	rdi, rax
0x400077:	call	0x500008
<Block for 0x40011a, 9 bytes>
0x40011a:	cmp	dword ptr [rbp - 0x88], -1
0x400121:	je	0x400130
<Block for 0x40007c, 18 bytes>
0x40007c:	mov	word ptr [rbp - 0x40], 2
0x400082:	lea	rdi, [rip + 0x494]
0x400089:	call	0x500010
<Block for 0x400130, 22 bytes>
0x400130:	lea	rdx, [rbp - 0x8c]
0x400137:	lea	rax, [rbp - 0x80]
0x40013b:	mov	rsi, rdx
0x40013e:	mov	rdi, rax
0x400141:	call	0x4006cc
<Block for 0x400123, 13 bytes>
0x400123:	mov	eax, dword ptr [rbp - 0x88]
0x400129:	mov	edi, eax
0x40012b:	call	0x500038
<Block for 0x40008e, 13 bytes>
0x40008e:	mov	dword ptr [rbp - 0x3c], eax
0x400091:	mov	edi, 0x6987
0x400096:	call	0x500018
<Block for 0x400146, 22 bytes>
0x400146:	lea	rdx, [rbp - 0x8c]
0x40014d:	lea	rax, [rbp - 0x80]
0x400151:	mov	rsi, rdx
0x400154:	mov	rdi, rax
0x400157:	call	0x4006cc
<Block for 0x40009b, 29 bytes>
0x40009b:	mov	word ptr [rbp - 0x3e], ax
0x40009f:	lea	rcx, [rbp - 0x40]
0x4000a3:	mov	eax, dword ptr [rbp - 0x88]
0x4000a9:	mov	edx, 0x10
0x4000ae:	mov	rsi, rcx
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500020
<Block for 0x40015c, 22 bytes>
0x40015c:	lea	rdx, [rbp - 0x8c]
0x400163:	lea	rax, [rbp - 0x80]
0x400167:	mov	rsi, rdx
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4006cc
<Block for 0x4000b8, 10 bytes>
0x4000b8:	cmp	eax, -1
0x4000bb:	sete	al
0x4000be:	test	al, al
0x4000c0:	jne	0x400119
<Block for 0x400172, 19 bytes>
0x400172:	lea	rdx, [rbp - 0x80]
0x400176:	lea	rax, [rbp - 0x60]
0x40017a:	mov	rsi, rdx
0x40017d:	mov	rdi, rax
0x400180:	call	0x400706
<Block for 0x4000c2, 27 bytes>
0x4000c2:	lea	rsi, [rbp - 0x26]
0x4000c6:	mov	eax, dword ptr [rbp - 0x88]
0x4000cc:	mov	ecx, 0
0x4000d1:	mov	edx, 0xd
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500028
<Block for 0x400119, 1 bytes>
0x400119:	nop	
<Block for 0x400185, 12 bytes>
0x400185:	lea	rax, [rbp - 0x60]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500040
<Block for 0x4000dd, 15 bytes>
0x4000dd:	mov	dword ptr [rbp - 0x84], eax
0x4000e3:	cmp	dword ptr [rbp - 0x84], -1
0x4000ea:	je	0x40011a
<Block for 0x400191, 12 bytes>
0x400191:	lea	rax, [rbp - 0x60]
0x400195:	mov	rdi, rax
0x400198:	call	0x4005de
<Block for 0x4000ec, 9 bytes>
0x4000ec:	cmp	dword ptr [rbp - 0x84], 0
0x4000f3:	je	0x40011a
<Block for 0x40019d, 12 bytes>
0x40019d:	lea	rax, [rbp - 0x80]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4005de
<Block for 0x4000f5, 25 bytes>
0x4000f5:	mov	eax, dword ptr [rbp - 0x84]
0x4000fb:	cdqe	
0x4000fd:	mov	byte ptr [rbp + rax - 0x26], 0
0x400102:	lea	rax, [rbp - 0x26]
0x400106:	mov	rdi, rax
0x400109:	call	0x500030
<Block for 0x4001a9, 16 bytes>
0x4001a9:	nop	
0x4001aa:	mov	rax, qword ptr [rbp - 0x18]
0x4001ae:	xor	rax, qword ptr fs:[0x28]
0x4001b7:	je	0x4001f3
<Block for 0x40010e, 8 bytes>
0x40010e:	mov	dword ptr [rbp - 0x8c], eax
0x400114:	jmp	0x40011a
<Block for 0x4001f3, 10 bytes>
0x4001f3:	add	rsp, 0x88
0x4001fa:	pop	rbx
0x4001fb:	pop	rbp
0x4001fc:	ret	
<Block for 0x4001b9, 2 bytes>
0x4001b9:	jmp	0x4001ee
<Block for 0x4001ee, 5 bytes>
0x4001ee:	call	0x500050
