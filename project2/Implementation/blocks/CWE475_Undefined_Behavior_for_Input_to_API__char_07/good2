<Block for 0x400233, 42 bytes>
0x400233:	endbr64	
0x400237:	push	rbp
0x400238:	mov	rbp, rsp
0x40023b:	add	rsp, -0x80
0x40023f:	mov	rax, qword ptr fs:[0x28]
0x400248:	mov	qword ptr [rbp - 8], rax
0x40024c:	xor	eax, eax
0x40024e:	mov	eax, dword ptr [rip + 0x114]
0x400254:	cmp	eax, 5
0x400257:	jne	0x40032f
<Block for 0x40025d, 198 bytes>
0x40025d:	mov	qword ptr [rbp - 0x70], 0
0x400265:	mov	qword ptr [rbp - 0x68], 0
0x40026d:	mov	qword ptr [rbp - 0x60], 0
0x400275:	mov	qword ptr [rbp - 0x58], 0
0x40027d:	mov	qword ptr [rbp - 0x50], 0
0x400285:	mov	qword ptr [rbp - 0x48], 0
0x40028d:	mov	qword ptr [rbp - 0x40], 0
0x400295:	mov	qword ptr [rbp - 0x38], 0
0x40029d:	mov	qword ptr [rbp - 0x30], 0
0x4002a5:	mov	qword ptr [rbp - 0x28], 0
0x4002ad:	mov	qword ptr [rbp - 0x20], 0
0x4002b5:	mov	qword ptr [rbp - 0x18], 0
0x4002bd:	mov	dword ptr [rbp - 0x10], 0
0x4002c4:	lea	rax, [rbp - 0x70]
0x4002c8:	mov	qword ptr [rbp - 0x78], rax
0x4002cc:	mov	rax, qword ptr [rbp - 0x78]
0x4002d0:	movabs	rdx, 0x6867666564636261
0x4002da:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4002e4:	mov	qword ptr [rax], rdx
0x4002e7:	mov	qword ptr [rax + 8], rcx
0x4002eb:	movabs	rsi, 0x7877767574737271
0x4002f5:	mov	qword ptr [rax + 0x10], rsi
0x4002f9:	mov	word ptr [rax + 0x18], 0x7a79
0x4002ff:	mov	byte ptr [rax + 0x1a], 0
0x400303:	mov	rax, qword ptr [rbp - 0x78]
0x400307:	lea	rcx, [rax + 4]
0x40030b:	mov	rax, qword ptr [rbp - 0x78]
0x40030f:	add	rax, 6
0x400313:	mov	edx, 0xa
0x400318:	mov	rsi, rcx
0x40031b:	mov	rdi, rax
0x40031e:	call	0x500018
<Block for 0x40032f, 16 bytes>
0x40032f:	nop	
0x400330:	mov	rax, qword ptr [rbp - 8]
0x400334:	xor	rax, qword ptr fs:[0x28]
0x40033d:	je	0x400344
<Block for 0x400323, 12 bytes>
0x400323:	mov	rax, qword ptr [rbp - 0x78]
0x400327:	mov	rdi, rax
0x40032a:	call	0x500008
<Block for 0x400344, 2 bytes>
0x400344:	leave	
0x400345:	ret	
<Block for 0x40033f, 5 bytes>
0x40033f:	call	0x500010
