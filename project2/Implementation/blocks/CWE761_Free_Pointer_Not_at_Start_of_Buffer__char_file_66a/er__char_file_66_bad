<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	edi, 0x64
0x400020:	call	0x500000
<Block for 0x400025, 11 bytes>
0x400025:	mov	qword ptr [rbp - 0x48], rax
0x400029:	cmp	qword ptr [rbp - 0x48], 0
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0xffffffff
0x400035:	call	0x500008
<Block for 0x40003a, 19 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 0x48]
0x40003e:	mov	byte ptr [rax], 0
0x400041:	mov	rax, qword ptr [rbp - 0x48]
0x400045:	mov	rdi, rax
0x400048:	call	0x500010
<Block for 0x40004d, 19 bytes>
0x40004d:	mov	qword ptr [rbp - 0x40], rax
0x400051:	mov	eax, 0x64
0x400056:	sub	rax, qword ptr [rbp - 0x40]
0x40005a:	cmp	rax, 1
0x40005e:	jbe	0x4000d3
<Block for 0x4000d3, 20 bytes>
0x4000d3:	mov	rax, qword ptr [rbp - 0x48]
0x4000d7:	mov	qword ptr [rbp - 0x20], rax
0x4000db:	lea	rax, [rbp - 0x30]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500038
<Block for 0x400060, 19 bytes>
0x400060:	lea	rsi, [rip + 0x1aa]
0x400067:	lea	rdi, [rip + 0x1a5]
0x40006e:	call	0x500018
<Block for 0x4000e7, 16 bytes>
0x4000e7:	nop	
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	xor	rax, qword ptr fs:[0x28]
0x4000f5:	je	0x4000fc
<Block for 0x400073, 11 bytes>
0x400073:	mov	qword ptr [rbp - 0x38], rax
0x400077:	cmp	qword ptr [rbp - 0x38], 0
0x40007c:	je	0x4000d3
<Block for 0x4000fc, 2 bytes>
0x4000fc:	leave	
0x4000fd:	ret	
<Block for 0x4000f7, 5 bytes>
0x4000f7:	call	0x500040
<Block for 0x40007e, 42 bytes>
0x40007e:	mov	rax, qword ptr [rbp - 0x40]
0x400082:	mov	edx, 0x64
0x400087:	sub	edx, eax
0x400089:	mov	eax, edx
0x40008b:	mov	esi, eax
0x40008d:	mov	rdx, qword ptr [rbp - 0x48]
0x400091:	mov	rax, qword ptr [rbp - 0x40]
0x400095:	lea	rcx, [rdx + rax]
0x400099:	mov	rax, qword ptr [rbp - 0x38]
0x40009d:	mov	rdx, rax
0x4000a0:	mov	rdi, rcx
0x4000a3:	call	0x500020
<Block for 0x4000a8, 5 bytes>
0x4000a8:	test	rax, rax
0x4000ab:	jne	0x4000c7
<Block for 0x4000ad, 12 bytes>
0x4000ad:	lea	rdi, [rip + 0x16d]
0x4000b4:	call	0x500028
<Block for 0x4000c7, 12 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x38]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500030
<Block for 0x4000b9, 26 bytes>
0x4000b9:	mov	rdx, qword ptr [rbp - 0x48]
0x4000bd:	mov	rax, qword ptr [rbp - 0x40]
0x4000c1:	add	rax, rdx
0x4000c4:	mov	byte ptr [rax], 0
0x4000c7:	mov	rax, qword ptr [rbp - 0x38]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500030
