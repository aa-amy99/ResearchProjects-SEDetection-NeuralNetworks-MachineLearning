<Block for 0x400083, 28 bytes>
0x400083:	endbr64	
0x400087:	push	rbp
0x400088:	mov	rbp, rsp
0x40008b:	sub	rsp, 0x10
0x40008f:	lea	rax, [rip + 0x110]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	call	0x500000
<Block for 0x40009f, 55 bytes>
0x40009f:	mov	edx, eax
0x4000a1:	movsxd	rax, edx
0x4000a4:	imul	rax, rax, 0x55555556
0x4000ab:	shr	rax, 0x20
0x4000af:	mov	rcx, rax
0x4000b2:	mov	eax, edx
0x4000b4:	sar	eax, 0x1f
0x4000b7:	mov	esi, ecx
0x4000b9:	sub	esi, eax
0x4000bb:	mov	eax, esi
0x4000bd:	mov	dword ptr [rbp - 0xc], eax
0x4000c0:	mov	ecx, dword ptr [rbp - 0xc]
0x4000c3:	mov	eax, ecx
0x4000c5:	add	eax, eax
0x4000c7:	add	eax, ecx
0x4000c9:	sub	edx, eax
0x4000cb:	mov	eax, edx
0x4000cd:	mov	dword ptr [rbp - 0xc], eax
0x4000d0:	cmp	dword ptr [rbp - 0xc], 0
0x4000d4:	je	0x4000de
<Block for 0x4000de, 13 bytes>
0x4000de:	lea	rax, [rip + 0xda]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	jmp	0x4000f7
<Block for 0x4000d6, 6 bytes>
0x4000d6:	cmp	dword ptr [rbp - 0xc], 1
0x4000da:	je	0x4000eb
<Block for 0x4000f7, 12 bytes>
0x4000f7:	mov	rax, qword ptr [rbp - 8]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500008
<Block for 0x4000eb, 24 bytes>
0x4000eb:	lea	rax, [rip + 0xcf]
0x4000f2:	mov	qword ptr [rbp - 8], rax
0x4000f6:	nop	
0x4000f7:	mov	rax, qword ptr [rbp - 8]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500008
<Block for 0x4000dc, 2 bytes>
0x4000dc:	jmp	0x400103
<Block for 0x400103, 2 bytes>
0x400103:	leave	
0x400104:	ret	
