<Block for 0x4000f1, 40 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	push	rbx
0x4000fa:	sub	rsp, 0x58
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 0x18], rax
0x40010b:	xor	eax, eax
0x40010d:	lea	rax, [rbp - 0x50]
0x400111:	mov	rdi, rax
0x400114:	call	0x4002a0
<Block for 0x400119, 27 bytes>
0x400119:	mov	qword ptr [rbp - 0x58], 5
0x400121:	lea	rdx, [rbp - 0x58]
0x400125:	lea	rax, [rbp - 0x50]
0x400129:	mov	rsi, rdx
0x40012c:	mov	rdi, rax
0x40012f:	call	0x400396
<Block for 0x400134, 19 bytes>
0x400134:	lea	rdx, [rbp - 0x58]
0x400138:	lea	rax, [rbp - 0x50]
0x40013c:	mov	rsi, rdx
0x40013f:	mov	rdi, rax
0x400142:	call	0x400396
<Block for 0x400147, 19 bytes>
0x400147:	lea	rdx, [rbp - 0x58]
0x40014b:	lea	rax, [rbp - 0x50]
0x40014f:	mov	rsi, rdx
0x400152:	mov	rdi, rax
0x400155:	call	0x400396
<Block for 0x40015a, 19 bytes>
0x40015a:	lea	rdx, [rbp - 0x50]
0x40015e:	lea	rax, [rbp - 0x30]
0x400162:	mov	rsi, rdx
0x400165:	mov	rdi, rax
0x400168:	call	0x4003d0
<Block for 0x40016d, 12 bytes>
0x40016d:	lea	rax, [rbp - 0x30]
0x400171:	mov	rdi, rax
0x400174:	call	0x500018
<Block for 0x400179, 12 bytes>
0x400179:	lea	rax, [rbp - 0x30]
0x40017d:	mov	rdi, rax
0x400180:	call	0x4002c0
<Block for 0x400185, 12 bytes>
0x400185:	lea	rax, [rbp - 0x50]
0x400189:	mov	rdi, rax
0x40018c:	call	0x4002c0
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 0x18]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001db
<Block for 0x4001db, 7 bytes>
0x4001db:	add	rsp, 0x58
0x4001df:	pop	rbx
0x4001e0:	pop	rbp
0x4001e1:	ret	
<Block for 0x4001a1, 2 bytes>
0x4001a1:	jmp	0x4001d6
<Block for 0x4001d6, 5 bytes>
0x4001d6:	call	0x500010
