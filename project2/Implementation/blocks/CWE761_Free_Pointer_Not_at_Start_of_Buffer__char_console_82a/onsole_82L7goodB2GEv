<Block for 0x400138, 23 bytes>
0x400138:	endbr64	
0x40013c:	push	rbp
0x40013d:	mov	rbp, rsp
0x400140:	push	rbx
0x400141:	sub	rsp, 0x28
0x400145:	mov	edi, 0x64
0x40014a:	call	0x500000
<Block for 0x40014f, 11 bytes>
0x40014f:	mov	qword ptr [rbp - 0x28], rax
0x400153:	cmp	qword ptr [rbp - 0x28], 0
0x400158:	jne	0x400164
<Block for 0x40015a, 10 bytes>
0x40015a:	mov	edi, 0xffffffff
0x40015f:	call	0x500008
<Block for 0x400164, 19 bytes>
0x400164:	mov	rax, qword ptr [rbp - 0x28]
0x400168:	mov	byte ptr [rax], 0
0x40016b:	mov	rax, qword ptr [rbp - 0x28]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x400177, 23 bytes>
0x400177:	mov	qword ptr [rbp - 0x20], rax
0x40017b:	mov	eax, 0x64
0x400180:	sub	rax, qword ptr [rbp - 0x20]
0x400184:	cmp	rax, 1
0x400188:	jbe	0x40021f
<Block for 0x40021f, 10 bytes>
0x40021f:	mov	edi, 8
0x400224:	call	0x500030
<Block for 0x40018e, 44 bytes>
0x40018e:	mov	rax, qword ptr [rip + 0xffe83]
0x400195:	mov	rdx, qword ptr [rbp - 0x20]
0x400199:	mov	ecx, 0x64
0x40019e:	sub	ecx, edx
0x4001a0:	mov	edx, ecx
0x4001a2:	mov	esi, edx
0x4001a4:	mov	rcx, qword ptr [rbp - 0x28]
0x4001a8:	mov	rdx, qword ptr [rbp - 0x20]
0x4001ac:	add	rcx, rdx
0x4001af:	mov	rdx, rax
0x4001b2:	mov	rdi, rcx
0x4001b5:	call	0x500020
<Block for 0x400229, 11 bytes>
0x400229:	mov	rbx, rax
0x40022c:	mov	rdi, rbx
0x40022f:	call	0x4002da
<Block for 0x4001ba, 10 bytes>
0x4001ba:	test	rax, rax
0x4001bd:	setne	al
0x4001c0:	test	al, al
0x4001c2:	je	0x400205
<Block for 0x400234, 30 bytes>
0x400234:	mov	qword ptr [rbp - 0x18], rbx
0x400238:	mov	rax, qword ptr [rbp - 0x18]
0x40023c:	mov	rax, qword ptr [rax]
0x40023f:	mov	rcx, qword ptr [rax]
0x400242:	mov	rdx, qword ptr [rbp - 0x28]
0x400246:	mov	rax, qword ptr [rbp - 0x18]
0x40024a:	mov	rsi, rdx
0x40024d:	mov	rdi, rax
0x400250:	call	rcx
<Block for 0x400205, 12 bytes>
0x400205:	lea	rdi, [rip + 0xbf]
0x40020c:	call	0x500028
<Block for 0x4001c4, 12 bytes>
0x4001c4:	mov	rax, qword ptr [rbp - 0x28]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500010
<Block for 0x400252, 9 bytes>
0x400252:	mov	rax, qword ptr [rbp - 0x18]
0x400256:	test	rax, rax
0x400259:	je	0x400268
<Block for 0x400211, 24 bytes>
0x400211:	mov	rdx, qword ptr [rbp - 0x28]
0x400215:	mov	rax, qword ptr [rbp - 0x20]
0x400219:	add	rax, rdx
0x40021c:	mov	byte ptr [rax], 0
0x40021f:	mov	edi, 8
0x400224:	call	0x500030
<Block for 0x4001d0, 11 bytes>
0x4001d0:	mov	qword ptr [rbp - 0x20], rax
0x4001d4:	cmp	qword ptr [rbp - 0x20], 0
0x4001d9:	je	0x40021f
<Block for 0x400268, 8 bytes>
0x400268:	nop	
0x400269:	add	rsp, 0x28
0x40026d:	pop	rbx
0x40026e:	pop	rbp
0x40026f:	ret	
<Block for 0x40025b, 13 bytes>
0x40025b:	mov	esi, 8
0x400260:	mov	rdi, rax
0x400263:	call	0x500038
<Block for 0x4001db, 22 bytes>
0x4001db:	mov	rax, qword ptr [rbp - 0x20]
0x4001df:	lea	rdx, [rax - 1]
0x4001e3:	mov	rax, qword ptr [rbp - 0x28]
0x4001e7:	add	rax, rdx
0x4001ea:	movzx	eax, byte ptr [rax]
0x4001ed:	cmp	al, 0xa
0x4001ef:	jne	0x40021f
<Block for 0x4001f1, 20 bytes>
0x4001f1:	mov	rax, qword ptr [rbp - 0x20]
0x4001f5:	lea	rdx, [rax - 1]
0x4001f9:	mov	rax, qword ptr [rbp - 0x28]
0x4001fd:	add	rax, rdx
0x400200:	mov	byte ptr [rax], 0
0x400203:	jmp	0x40021f
