<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	edi, 0x64
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	qword ptr [rbp - 0x28], rax
0x40001b:	cmp	qword ptr [rbp - 0x28], 0
0x400020:	jne	0x40002c
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0xffffffff
0x400027:	call	0x500008
<Block for 0x40002c, 19 bytes>
0x40002c:	mov	rax, qword ptr [rbp - 0x28]
0x400030:	mov	byte ptr [rax], 0
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	rdi, rax
0x40003a:	call	0x500010
<Block for 0x40003f, 23 bytes>
0x40003f:	mov	qword ptr [rbp - 0x20], rax
0x400043:	mov	eax, 0x64
0x400048:	sub	rax, qword ptr [rbp - 0x20]
0x40004c:	cmp	rax, 1
0x400050:	jbe	0x4000e7
<Block for 0x4000e7, 10 bytes>
0x4000e7:	mov	edi, 8
0x4000ec:	call	0x500030
<Block for 0x400056, 44 bytes>
0x400056:	mov	rax, qword ptr [rip + 0xfffbb]
0x40005d:	mov	rdx, qword ptr [rbp - 0x20]
0x400061:	mov	ecx, 0x64
0x400066:	sub	ecx, edx
0x400068:	mov	edx, ecx
0x40006a:	mov	esi, edx
0x40006c:	mov	rcx, qword ptr [rbp - 0x28]
0x400070:	mov	rdx, qword ptr [rbp - 0x20]
0x400074:	add	rcx, rdx
0x400077:	mov	rdx, rax
0x40007a:	mov	rdi, rcx
0x40007d:	call	0x500020
<Block for 0x4000f1, 11 bytes>
0x4000f1:	mov	rbx, rax
0x4000f4:	mov	rdi, rbx
0x4000f7:	call	0x40029e
<Block for 0x400082, 10 bytes>
0x400082:	test	rax, rax
0x400085:	setne	al
0x400088:	test	al, al
0x40008a:	je	0x4000cd
<Block for 0x4000fc, 30 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x18], rbx
0x400100:	mov	rax, qword ptr [rbp - 0x18]
0x400104:	mov	rax, qword ptr [rax]
0x400107:	mov	rcx, qword ptr [rax]
0x40010a:	mov	rdx, qword ptr [rbp - 0x28]
0x40010e:	mov	rax, qword ptr [rbp - 0x18]
0x400112:	mov	rsi, rdx
0x400115:	mov	rdi, rax
0x400118:	call	rcx
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rdi, [rip + 0x1f7]
0x4000d4:	call	0x500028
<Block for 0x40008c, 12 bytes>
0x40008c:	mov	rax, qword ptr [rbp - 0x28]
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x40011a, 9 bytes>
0x40011a:	mov	rax, qword ptr [rbp - 0x18]
0x40011e:	test	rax, rax
0x400121:	je	0x400130
<Block for 0x4000d9, 24 bytes>
0x4000d9:	mov	rdx, qword ptr [rbp - 0x28]
0x4000dd:	mov	rax, qword ptr [rbp - 0x20]
0x4000e1:	add	rax, rdx
0x4000e4:	mov	byte ptr [rax], 0
0x4000e7:	mov	edi, 8
0x4000ec:	call	0x500030
<Block for 0x400098, 11 bytes>
0x400098:	mov	qword ptr [rbp - 0x20], rax
0x40009c:	cmp	qword ptr [rbp - 0x20], 0
0x4000a1:	je	0x4000e7
<Block for 0x400130, 8 bytes>
0x400130:	nop	
0x400131:	add	rsp, 0x28
0x400135:	pop	rbx
0x400136:	pop	rbp
0x400137:	ret	
<Block for 0x400123, 13 bytes>
0x400123:	mov	esi, 8
0x400128:	mov	rdi, rax
0x40012b:	call	0x500038
<Block for 0x4000a3, 22 bytes>
0x4000a3:	mov	rax, qword ptr [rbp - 0x20]
0x4000a7:	lea	rdx, [rax - 1]
0x4000ab:	mov	rax, qword ptr [rbp - 0x28]
0x4000af:	add	rax, rdx
0x4000b2:	movzx	eax, byte ptr [rax]
0x4000b5:	cmp	al, 0xa
0x4000b7:	jne	0x4000e7
<Block for 0x4000b9, 20 bytes>
0x4000b9:	mov	rax, qword ptr [rbp - 0x20]
0x4000bd:	lea	rdx, [rax - 1]
0x4000c1:	mov	rax, qword ptr [rbp - 0x28]
0x4000c5:	add	rax, rdx
0x4000c8:	mov	byte ptr [rax], 0
0x4000cb:	jmp	0x4000e7
