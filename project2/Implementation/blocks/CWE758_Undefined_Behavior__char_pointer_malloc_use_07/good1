<Block for 0x40005c, 23 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	sub	rsp, 0x20
0x400068:	mov	eax, dword ptr [rip + 0x102]
0x40006e:	cmp	eax, 5
0x400071:	je	0x400081
<Block for 0x400081, 10 bytes>
0x400081:	mov	edi, 8
0x400086:	call	0x500000
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0xfa]
0x40007a:	call	0x500018
<Block for 0x40008b, 11 bytes>
0x40008b:	mov	qword ptr [rbp - 0x18], rax
0x40008f:	cmp	qword ptr [rbp - 0x18], 0
0x400094:	jne	0x4000a0
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x4000d9
<Block for 0x400096, 10 bytes>
0x400096:	mov	edi, 0xffffffff
0x40009b:	call	0x500008
<Block for 0x4000a0, 45 bytes>
0x4000a0:	lea	rax, [rip + 0xe2]
0x4000a7:	mov	qword ptr [rbp - 0x10], rax
0x4000ab:	mov	rax, qword ptr [rbp - 0x18]
0x4000af:	mov	rdx, qword ptr [rbp - 0x10]
0x4000b3:	mov	qword ptr [rax], rdx
0x4000b6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 8], rax
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500018
<Block for 0x4000d9, 3 bytes>
0x4000d9:	nop	
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000cd, 12 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 0x18]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500010
