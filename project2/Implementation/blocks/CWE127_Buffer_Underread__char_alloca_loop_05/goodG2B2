<Block for 0x4002ae, 84 bytes>
0x4002ae:	endbr64	
0x4002b2:	push	rbp
0x4002b3:	mov	rbp, rsp
0x4002b6:	sub	rsp, 0x90
0x4002bd:	mov	rax, qword ptr fs:[0x28]
0x4002c6:	mov	qword ptr [rbp - 8], rax
0x4002ca:	xor	eax, eax
0x4002cc:	mov	eax, 0x10
0x4002d1:	sub	rax, 1
0x4002d5:	add	rax, 0x6c
0x4002d9:	mov	esi, 0x10
0x4002de:	mov	edx, 0
0x4002e3:	div	rsi
0x4002e6:	imul	rax, rax, 0x10
0x4002ea:	mov	rdx, rax
0x4002ed:	and	rdx, 0xfffffffffffff000
0x4002f4:	mov	rcx, rsp
0x4002f7:	sub	rcx, rdx
0x4002fa:	mov	rdx, rcx
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x400314, 26 bytes>
0x400314:	mov	rdx, rax
0x400317:	and	edx, 0xfff
0x40031d:	sub	rsp, rdx
0x400320:	mov	rdx, rax
0x400323:	and	edx, 0xfff
0x400329:	test	rdx, rdx
0x40032c:	je	0x40033e
<Block for 0x400302, 18 bytes>
0x400302:	sub	rsp, 0x1000
0x400309:	or	qword ptr [rsp + 0xff8], 0
0x400312:	jmp	0x4002fd
<Block for 0x40033e, 41 bytes>
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x78], rax
0x400351:	mov	rax, qword ptr [rbp - 0x78]
0x400355:	mov	edx, 0x63
0x40035a:	mov	esi, 0x41
0x40035f:	mov	rdi, rax
0x400362:	call	0x500000
<Block for 0x40032e, 57 bytes>
0x40032e:	and	eax, 0xfff
0x400333:	sub	rax, 8
0x400337:	add	rax, rsp
0x40033a:	or	qword ptr [rax], 0
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x78], rax
0x400351:	mov	rax, qword ptr [rbp - 0x78]
0x400355:	mov	edx, 0x63
0x40035a:	mov	esi, 0x41
0x40035f:	mov	rdi, rax
0x400362:	call	0x500000
<Block for 0x4002fd, 5 bytes>
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x400367, 21 bytes>
0x400367:	mov	rax, qword ptr [rbp - 0x78]
0x40036b:	add	rax, 0x63
0x40036f:	mov	byte ptr [rax], 0
0x400372:	mov	eax, dword ptr [rip + 0xa4]
0x400378:	test	eax, eax
0x40037a:	je	0x400387
<Block for 0x400387, 22 bytes>
0x400387:	lea	rax, [rbp - 0x70]
0x40038b:	mov	edx, 0x63
0x400390:	mov	esi, 0x43
0x400395:	mov	rdi, rax
0x400398:	call	0x500000
<Block for 0x40037c, 33 bytes>
0x40037c:	mov	rax, qword ptr [rbp - 0x78]
0x400380:	mov	qword ptr [rbp - 0x88], rax
0x400387:	lea	rax, [rbp - 0x70]
0x40038b:	mov	edx, 0x63
0x400390:	mov	esi, 0x43
0x400395:	mov	rdi, rax
0x400398:	call	0x500000
<Block for 0x40039d, 14 bytes>
0x40039d:	mov	byte ptr [rbp - 0xd], 0
0x4003a1:	mov	qword ptr [rbp - 0x80], 0
0x4003a9:	jmp	0x4003ce
<Block for 0x4003ce, 7 bytes>
0x4003ce:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d3:	jbe	0x4003ab
<Block for 0x4003ab, 42 bytes>
0x4003ab:	mov	rdx, qword ptr [rbp - 0x88]
0x4003b2:	mov	rax, qword ptr [rbp - 0x80]
0x4003b6:	add	rax, rdx
0x4003b9:	movzx	eax, byte ptr [rax]
0x4003bc:	lea	rcx, [rbp - 0x70]
0x4003c0:	mov	rdx, qword ptr [rbp - 0x80]
0x4003c4:	add	rdx, rcx
0x4003c7:	mov	byte ptr [rdx], al
0x4003c9:	add	qword ptr [rbp - 0x80], 1
0x4003ce:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003d3:	jbe	0x4003ab
<Block for 0x4003d5, 16 bytes>
0x4003d5:	mov	byte ptr [rbp - 0xd], 0
0x4003d9:	lea	rax, [rbp - 0x70]
0x4003dd:	mov	rdi, rax
0x4003e0:	call	0x500008
<Block for 0x4003e5, 16 bytes>
0x4003e5:	nop	
0x4003e6:	mov	rax, qword ptr [rbp - 8]
0x4003ea:	xor	rax, qword ptr fs:[0x28]
0x4003f3:	je	0x4003fa
<Block for 0x4003fa, 2 bytes>
0x4003fa:	leave	
0x4003fb:	ret	
<Block for 0x4003f5, 5 bytes>
0x4003f5:	call	0x500010
