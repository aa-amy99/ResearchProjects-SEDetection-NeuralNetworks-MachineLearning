<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400051
<Block for 0x400051, 15 bytes>
0x400051:	mov	dword ptr [rbp - 0xc], 6
0x400058:	mov	eax, dword ptr [rbp - 0xc]
0x40005b:	cmp	eax, 5
0x40005e:	jg	0x40007f
<Block for 0x400030, 31 bytes>
0x400030:	mov	rax, qword ptr [rip + 0xfffd1]
0x400037:	lea	rdx, [rbp - 0xc]
0x40003b:	lea	rsi, [rip + 0xde]
0x400042:	mov	rdi, rax
0x400045:	mov	eax, 0
0x40004a:	call	0x500010
<Block for 0x400060, 31 bytes>
0x400060:	lea	rcx, [rip + 0x119]
0x400067:	mov	edx, 0x29
0x40006c:	lea	rsi, [rip + 0xb5]
0x400073:	lea	rdi, [rip + 0xd6]
0x40007a:	call	0x500018
<Block for 0x40007f, 16 bytes>
0x40007f:	nop	
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	xor	rax, qword ptr fs:[0x28]
0x40008d:	je	0x400094
<Block for 0x40004f, 2 bytes>
0x40004f:	jmp	0x400058
<Block for 0x400094, 2 bytes>
0x400094:	leave	
0x400095:	ret	
<Block for 0x40008f, 5 bytes>
0x40008f:	call	0x500020
<Block for 0x400058, 8 bytes>
0x400058:	mov	eax, dword ptr [rbp - 0xc]
0x40005b:	cmp	eax, 5
0x40005e:	jg	0x40007f
