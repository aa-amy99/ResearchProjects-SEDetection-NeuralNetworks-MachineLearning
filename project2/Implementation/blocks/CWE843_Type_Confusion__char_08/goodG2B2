<Block for 0x4000f1, 45 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x20
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	qword ptr [rbp - 0x10], 0
0x400114:	mov	eax, 0
0x400119:	call	0x400000
<Block for 0x40011e, 4 bytes>
0x40011e:	test	eax, eax
0x400120:	je	0x400131
<Block for 0x400131, 13 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x10]
0x400135:	mov	eax, dword ptr [rax]
0x400137:	mov	edi, eax
0x400139:	call	0x500000
<Block for 0x400122, 28 bytes>
0x400122:	mov	dword ptr [rbp - 0x14], 8
0x400129:	lea	rax, [rbp - 0x14]
0x40012d:	mov	qword ptr [rbp - 0x10], rax
0x400131:	mov	rax, qword ptr [rbp - 0x10]
0x400135:	mov	eax, dword ptr [rax]
0x400137:	mov	edi, eax
0x400139:	call	0x500000
<Block for 0x40013e, 16 bytes>
0x40013e:	nop	
0x40013f:	mov	rax, qword ptr [rbp - 8]
0x400143:	xor	rax, qword ptr fs:[0x28]
0x40014c:	je	0x400153
<Block for 0x400153, 2 bytes>
0x400153:	leave	
0x400154:	ret	
<Block for 0x40014e, 5 bytes>
0x40014e:	call	0x500008
