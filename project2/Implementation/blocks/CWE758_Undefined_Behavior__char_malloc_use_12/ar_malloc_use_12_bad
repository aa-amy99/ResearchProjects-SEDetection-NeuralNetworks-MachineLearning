<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x40005c
<Block for 0x40005c, 10 bytes>
0x40005c:	mov	edi, 1
0x400061:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 1
0x40001f:	call	0x500008
<Block for 0x400066, 11 bytes>
0x400066:	mov	qword ptr [rbp - 0x10], rax
0x40006a:	cmp	qword ptr [rbp - 0x10], 0
0x40006f:	jne	0x40007b
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 8], rax
0x400028:	cmp	qword ptr [rbp - 8], 0
0x40002d:	jne	0x400039
<Block for 0x400071, 10 bytes>
0x400071:	mov	edi, 0xffffffff
0x400076:	call	0x500010
<Block for 0x40007b, 35 bytes>
0x40007b:	mov	byte ptr [rbp - 0x13], 5
0x40007f:	mov	rax, qword ptr [rbp - 0x10]
0x400083:	movzx	edx, byte ptr [rbp - 0x13]
0x400087:	mov	byte ptr [rax], dl
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	movzx	eax, byte ptr [rax]
0x400090:	mov	byte ptr [rbp - 0x12], al
0x400093:	movsx	eax, byte ptr [rbp - 0x12]
0x400097:	mov	edi, eax
0x400099:	call	0x500020
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 22 bytes>
0x400039:	mov	rax, qword ptr [rbp - 8]
0x40003d:	movzx	eax, byte ptr [rax]
0x400040:	mov	byte ptr [rbp - 0x11], al
0x400043:	mov	rax, qword ptr [rbp - 8]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500018
<Block for 0x40009e, 12 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0x10]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500018
<Block for 0x40004f, 11 bytes>
0x40004f:	movsx	eax, byte ptr [rbp - 0x11]
0x400053:	mov	edi, eax
0x400055:	call	0x500020
<Block for 0x4000aa, 3 bytes>
0x4000aa:	nop	
0x4000ab:	leave	
0x4000ac:	ret	
<Block for 0x40005a, 2 bytes>
0x40005a:	jmp	0x4000aa
