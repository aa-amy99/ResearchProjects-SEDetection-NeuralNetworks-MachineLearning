<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x10], 0
0x400023:	mov	edi, 4
0x400028:	call	0x500000
<Block for 0x40002d, 23 bytes>
0x40002d:	mov	qword ptr [rbp - 0x10], rax
0x400031:	mov	rax, qword ptr [rbp - 0x10]
0x400035:	mov	dword ptr [rax], 5
0x40003b:	mov	rax, qword ptr [rbp - 0x10]
0x40003f:	test	rax, rax
0x400042:	je	0x400051
<Block for 0x400051, 12 bytes>
0x400051:	lea	rax, [rbp - 0x10]
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x400044, 13 bytes>
0x400044:	mov	esi, 4
0x400049:	mov	rdi, rax
0x40004c:	call	0x500008
<Block for 0x40005d, 16 bytes>
0x40005d:	nop	
0x40005e:	mov	rax, qword ptr [rbp - 8]
0x400062:	xor	rax, qword ptr fs:[0x28]
0x40006b:	je	0x400072
<Block for 0x400072, 2 bytes>
0x400072:	leave	
0x400073:	ret	
<Block for 0x40006d, 5 bytes>
0x40006d:	call	0x500018
