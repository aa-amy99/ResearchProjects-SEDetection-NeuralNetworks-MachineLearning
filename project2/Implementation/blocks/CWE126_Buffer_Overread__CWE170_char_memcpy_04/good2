<Block for 0x400125, 39 bytes>
0x400125:	endbr64	
0x400129:	push	rbp
0x40012a:	mov	rbp, rsp
0x40012d:	sub	rsp, 0x110
0x400134:	mov	rax, qword ptr fs:[0x28]
0x40013d:	mov	qword ptr [rbp - 8], rax
0x400141:	xor	eax, eax
0x400143:	mov	eax, 1
0x400148:	test	eax, eax
0x40014a:	je	0x40019d
<Block for 0x40019d, 16 bytes>
0x40019d:	nop	
0x40019e:	mov	rax, qword ptr [rbp - 8]
0x4001a2:	xor	rax, qword ptr fs:[0x28]
0x4001ab:	je	0x4001b2
<Block for 0x40014c, 25 bytes>
0x40014c:	lea	rax, [rbp - 0xa0]
0x400153:	mov	edx, 0x95
0x400158:	mov	esi, 0x41
0x40015d:	mov	rdi, rax
0x400160:	call	0x500000
<Block for 0x4001b2, 2 bytes>
0x4001b2:	leave	
0x4001b3:	ret	
<Block for 0x4001ad, 5 bytes>
0x4001ad:	call	0x500018
<Block for 0x400165, 34 bytes>
0x400165:	mov	byte ptr [rbp - 0xb], 0
0x400169:	lea	rcx, [rbp - 0xa0]
0x400170:	lea	rax, [rbp - 0x110]
0x400177:	mov	edx, 0x63
0x40017c:	mov	rsi, rcx
0x40017f:	mov	rdi, rax
0x400182:	call	0x500008
<Block for 0x400187, 22 bytes>
0x400187:	mov	byte ptr [rbp - 0xad], 0
0x40018e:	lea	rax, [rbp - 0x110]
0x400195:	mov	rdi, rax
0x400198:	call	0x500010
