<Block for 0x400000, 39 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x400071
<Block for 0x400071, 16 bytes>
0x400071:	nop	
0x400072:	mov	rax, qword ptr [rbp - 8]
0x400076:	xor	rax, qword ptr fs:[0x28]
0x40007f:	je	0x400086
<Block for 0x400027, 25 bytes>
0x400027:	lea	rax, [rbp - 0xa0]
0x40002e:	mov	edx, 0x95
0x400033:	mov	esi, 0x41
0x400038:	mov	rdi, rax
0x40003b:	call	0x500000
<Block for 0x400086, 2 bytes>
0x400086:	leave	
0x400087:	ret	
<Block for 0x400081, 5 bytes>
0x400081:	call	0x500018
<Block for 0x400040, 34 bytes>
0x400040:	mov	byte ptr [rbp - 0xb], 0
0x400044:	lea	rcx, [rbp - 0xa0]
0x40004b:	lea	rax, [rbp - 0x110]
0x400052:	mov	edx, 0x63
0x400057:	mov	rsi, rcx
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500008
<Block for 0x400062, 15 bytes>
0x400062:	lea	rax, [rbp - 0x110]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500010
