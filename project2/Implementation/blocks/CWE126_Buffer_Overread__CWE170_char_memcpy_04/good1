<Block for 0x400088, 39 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x110
0x400097:	mov	rax, qword ptr fs:[0x28]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	xor	eax, eax
0x4000a6:	mov	eax, 0
0x4000ab:	test	eax, eax
0x4000ad:	je	0x4000bd
<Block for 0x4000bd, 25 bytes>
0x4000bd:	lea	rax, [rbp - 0xa0]
0x4000c4:	mov	edx, 0x95
0x4000c9:	mov	esi, 0x41
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500000
<Block for 0x4000af, 12 bytes>
0x4000af:	lea	rdi, [rip + 0x126]
0x4000b6:	call	0x500010
<Block for 0x4000d6, 34 bytes>
0x4000d6:	mov	byte ptr [rbp - 0xb], 0
0x4000da:	lea	rcx, [rbp - 0xa0]
0x4000e1:	lea	rax, [rbp - 0x110]
0x4000e8:	mov	edx, 0x63
0x4000ed:	mov	rsi, rcx
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500008
<Block for 0x4000bb, 2 bytes>
0x4000bb:	jmp	0x40010e
<Block for 0x4000f8, 22 bytes>
0x4000f8:	mov	byte ptr [rbp - 0xad], 0
0x4000ff:	lea	rax, [rbp - 0x110]
0x400106:	mov	rdi, rax
0x400109:	call	0x500010
<Block for 0x40010e, 16 bytes>
0x40010e:	nop	
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	xor	rax, qword ptr fs:[0x28]
0x40011c:	je	0x400123
<Block for 0x400123, 2 bytes>
0x400123:	leave	
0x400124:	ret	
<Block for 0x40011e, 5 bytes>
0x40011e:	call	0x500018
