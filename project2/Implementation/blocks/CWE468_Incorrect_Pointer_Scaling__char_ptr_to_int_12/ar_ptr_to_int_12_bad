<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400071
<Block for 0x400071, 70 bytes>
0x400071:	mov	dword ptr [rbp - 0x20], 1
0x400078:	mov	dword ptr [rbp - 0x1c], 2
0x40007f:	mov	dword ptr [rbp - 0x18], 3
0x400086:	mov	dword ptr [rbp - 0x14], 4
0x40008d:	mov	dword ptr [rbp - 0x10], 5
0x400094:	lea	rax, [rbp - 0x20]
0x400098:	mov	qword ptr [rbp - 0x30], rax
0x40009c:	mov	rax, qword ptr [rbp - 0x30]
0x4000a0:	add	rax, 8
0x4000a4:	movzx	eax, byte ptr [rax]
0x4000a7:	movsx	eax, al
0x4000aa:	mov	dword ptr [rbp - 0x38], eax
0x4000ad:	mov	eax, dword ptr [rbp - 0x38]
0x4000b0:	mov	edi, eax
0x4000b2:	call	0x500008
<Block for 0x400029, 70 bytes>
0x400029:	mov	dword ptr [rbp - 0x20], 1
0x400030:	mov	dword ptr [rbp - 0x1c], 2
0x400037:	mov	dword ptr [rbp - 0x18], 3
0x40003e:	mov	dword ptr [rbp - 0x14], 4
0x400045:	mov	dword ptr [rbp - 0x10], 5
0x40004c:	lea	rax, [rbp - 0x20]
0x400050:	mov	qword ptr [rbp - 0x28], rax
0x400054:	mov	rax, qword ptr [rbp - 0x28]
0x400058:	add	rax, 2
0x40005c:	movzx	eax, byte ptr [rax]
0x40005f:	movsx	eax, al
0x400062:	mov	dword ptr [rbp - 0x34], eax
0x400065:	mov	eax, dword ptr [rbp - 0x34]
0x400068:	mov	edi, eax
0x40006a:	call	0x500008
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x40006f, 2 bytes>
0x40006f:	jmp	0x4000b7
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500010
