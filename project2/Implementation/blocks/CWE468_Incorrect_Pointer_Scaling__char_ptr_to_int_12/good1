<Block for 0x4000ce, 37 bytes>
0x4000ce:	endbr64	
0x4000d2:	push	rbp
0x4000d3:	mov	rbp, rsp
0x4000d6:	sub	rsp, 0x40
0x4000da:	mov	rax, qword ptr fs:[0x28]
0x4000e3:	mov	qword ptr [rbp - 8], rax
0x4000e7:	xor	eax, eax
0x4000e9:	mov	eax, 0
0x4000ee:	call	0x500000
<Block for 0x4000f3, 4 bytes>
0x4000f3:	test	eax, eax
0x4000f5:	je	0x40013f
<Block for 0x40013f, 70 bytes>
0x40013f:	mov	dword ptr [rbp - 0x20], 1
0x400146:	mov	dword ptr [rbp - 0x1c], 2
0x40014d:	mov	dword ptr [rbp - 0x18], 3
0x400154:	mov	dword ptr [rbp - 0x14], 4
0x40015b:	mov	dword ptr [rbp - 0x10], 5
0x400162:	lea	rax, [rbp - 0x20]
0x400166:	mov	qword ptr [rbp - 0x30], rax
0x40016a:	mov	rax, qword ptr [rbp - 0x30]
0x40016e:	add	rax, 8
0x400172:	movzx	eax, byte ptr [rax]
0x400175:	movsx	eax, al
0x400178:	mov	dword ptr [rbp - 0x38], eax
0x40017b:	mov	eax, dword ptr [rbp - 0x38]
0x40017e:	mov	edi, eax
0x400180:	call	0x500008
<Block for 0x4000f7, 70 bytes>
0x4000f7:	mov	dword ptr [rbp - 0x20], 1
0x4000fe:	mov	dword ptr [rbp - 0x1c], 2
0x400105:	mov	dword ptr [rbp - 0x18], 3
0x40010c:	mov	dword ptr [rbp - 0x14], 4
0x400113:	mov	dword ptr [rbp - 0x10], 5
0x40011a:	lea	rax, [rbp - 0x20]
0x40011e:	mov	qword ptr [rbp - 0x28], rax
0x400122:	mov	rax, qword ptr [rbp - 0x28]
0x400126:	add	rax, 8
0x40012a:	movzx	eax, byte ptr [rax]
0x40012d:	movsx	eax, al
0x400130:	mov	dword ptr [rbp - 0x34], eax
0x400133:	mov	eax, dword ptr [rbp - 0x34]
0x400136:	mov	edi, eax
0x400138:	call	0x500008
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x40013d, 2 bytes>
0x40013d:	jmp	0x400185
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500010
