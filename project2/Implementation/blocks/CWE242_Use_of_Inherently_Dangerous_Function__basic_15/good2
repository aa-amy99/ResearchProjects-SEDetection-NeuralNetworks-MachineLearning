<Block for 0x4000f3, 51 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x20
0x4000ff:	mov	rax, qword ptr fs:[0x28]
0x400108:	mov	qword ptr [rbp - 8], rax
0x40010c:	xor	eax, eax
0x40010e:	mov	rdx, qword ptr [rip + 0xfff0b]
0x400115:	lea	rax, [rbp - 0x12]
0x400119:	mov	esi, 0xa
0x40011e:	mov	rdi, rax
0x400121:	call	0x500028
<Block for 0x400126, 11 bytes>
0x400126:	mov	qword ptr [rbp - 0x20], rax
0x40012a:	cmp	qword ptr [rbp - 0x20], 0
0x40012f:	jne	0x400147
<Block for 0x400131, 12 bytes>
0x400131:	lea	rdi, [rip + 0x58]
0x400138:	call	0x500008
<Block for 0x400147, 16 bytes>
0x400147:	mov	byte ptr [rbp - 9], 0
0x40014b:	lea	rax, [rbp - 0x12]
0x40014f:	mov	rdi, rax
0x400152:	call	0x500008
<Block for 0x40013d, 10 bytes>
0x40013d:	mov	edi, 1
0x400142:	call	0x500010
<Block for 0x400157, 17 bytes>
0x400157:	nop	
0x400158:	nop	
0x400159:	mov	rax, qword ptr [rbp - 8]
0x40015d:	xor	rax, qword ptr fs:[0x28]
0x400166:	je	0x40016d
<Block for 0x40016d, 2 bytes>
0x40016d:	leave	
0x40016e:	ret	
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500018
