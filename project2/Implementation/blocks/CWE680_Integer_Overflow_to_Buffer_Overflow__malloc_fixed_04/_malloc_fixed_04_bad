<Block for 0x400000, 28 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400013:	mov	eax, 1
0x400018:	test	eax, eax
0x40001a:	je	0x400023
<Block for 0x400023, 17 bytes>
0x400023:	mov	eax, dword ptr [rbp - 0x14]
0x400026:	cdqe	
0x400028:	shl	rax, 2
0x40002c:	mov	rdi, rax
0x40002f:	call	0x500000
<Block for 0x40001c, 24 bytes>
0x40001c:	mov	dword ptr [rbp - 0x14], 0x40000001
0x400023:	mov	eax, dword ptr [rbp - 0x14]
0x400026:	cdqe	
0x400028:	shl	rax, 2
0x40002c:	mov	rdi, rax
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	qword ptr [rbp - 8], rax
0x400038:	cmp	qword ptr [rbp - 8], 0
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 10 bytes>
0x400049:	mov	qword ptr [rbp - 0x10], 0
0x400051:	jmp	0x400071
<Block for 0x400071, 11 bytes>
0x400071:	mov	eax, dword ptr [rbp - 0x14]
0x400074:	cdqe	
0x400076:	cmp	qword ptr [rbp - 0x10], rax
0x40007a:	jb	0x400053
<Block for 0x400053, 41 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0x10]
0x400057:	lea	rdx, [rax*4]
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	add	rax, rdx
0x400066:	mov	dword ptr [rax], 0
0x40006c:	add	qword ptr [rbp - 0x10], 1
0x400071:	mov	eax, dword ptr [rbp - 0x14]
0x400074:	cdqe	
0x400076:	cmp	qword ptr [rbp - 0x10], rax
0x40007a:	jb	0x400053
<Block for 0x40007c, 13 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 8]
0x400080:	mov	eax, dword ptr [rax]
0x400082:	mov	edi, eax
0x400084:	call	0x500010
<Block for 0x400089, 12 bytes>
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500018
<Block for 0x400095, 3 bytes>
0x400095:	nop	
0x400096:	leave	
0x400097:	ret	
