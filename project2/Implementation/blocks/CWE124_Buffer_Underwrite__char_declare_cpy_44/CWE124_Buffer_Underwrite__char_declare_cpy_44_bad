<Block for 0x40006f, 60 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	add	rsp, -0x80
0x40007b:	mov	rax, qword ptr fs:[0x28]
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	xor	eax, eax
0x40008a:	lea	rax, [rip - 0x91]
0x400091:	mov	qword ptr [rbp - 0x80], rax
0x400095:	lea	rax, [rbp - 0x70]
0x400099:	mov	edx, 0x63
0x40009e:	mov	esi, 0x41
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500000
<Block for 0x4000ab, 29 bytes>
0x4000ab:	mov	byte ptr [rbp - 0xd], 0
0x4000af:	lea	rax, [rbp - 0x70]
0x4000b3:	sub	rax, 8
0x4000b7:	mov	qword ptr [rbp - 0x78], rax
0x4000bb:	mov	rax, qword ptr [rbp - 0x78]
0x4000bf:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c3:	mov	rdi, rax
0x4000c6:	call	rdx
<Block for 0x4000c8, 16 bytes>
0x4000c8:	nop	
0x4000c9:	mov	rax, qword ptr [rbp - 8]
0x4000cd:	xor	rax, qword ptr fs:[0x28]
0x4000d6:	je	0x4000dd
<Block for 0x4000dd, 2 bytes>
0x4000dd:	leave	
0x4000de:	ret	
<Block for 0x4000d8, 5 bytes>
0x4000d8:	call	0x500018
