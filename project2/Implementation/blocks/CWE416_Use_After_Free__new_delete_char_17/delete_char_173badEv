<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400052
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 1
0x400026:	call	0x500000
<Block for 0x400052, 13 bytes>
0x400052:	mov	dword ptr [rbp - 0xc], 0
0x400059:	cmp	dword ptr [rbp - 0xc], 0
0x40005d:	jg	0x400076
<Block for 0x40002b, 20 bytes>
0x40002b:	mov	qword ptr [rbp - 8], rax
0x40002f:	mov	rax, qword ptr [rbp - 8]
0x400033:	mov	byte ptr [rax], 0x41
0x400036:	mov	rax, qword ptr [rbp - 8]
0x40003a:	test	rax, rax
0x40003d:	je	0x40004c
<Block for 0x40005f, 17 bytes>
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	movzx	eax, byte ptr [rax]
0x400066:	movsx	eax, al
0x400069:	mov	edi, eax
0x40006b:	call	0x500010
<Block for 0x400076, 3 bytes>
0x400076:	nop	
0x400077:	leave	
0x400078:	ret	
<Block for 0x40004c, 6 bytes>
0x40004c:	add	dword ptr [rbp - 0x10], 1
0x400050:	jmp	0x40001b
<Block for 0x40003f, 13 bytes>
0x40003f:	mov	esi, 1
0x400044:	mov	rdi, rax
0x400047:	call	0x500008
<Block for 0x400070, 6 bytes>
0x400070:	add	dword ptr [rbp - 0xc], 1
0x400074:	jmp	0x400059
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400052
<Block for 0x400059, 6 bytes>
0x400059:	cmp	dword ptr [rbp - 0xc], 0
0x40005d:	jg	0x400076
