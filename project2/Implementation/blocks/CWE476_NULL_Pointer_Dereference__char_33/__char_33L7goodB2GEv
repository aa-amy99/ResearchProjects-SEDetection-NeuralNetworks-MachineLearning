<Block for 0x4000bf, 61 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	sub	rsp, 0x20
0x4000cb:	mov	rax, qword ptr fs:[0x28]
0x4000d4:	mov	qword ptr [rbp - 8], rax
0x4000d8:	xor	eax, eax
0x4000da:	lea	rax, [rbp - 0x20]
0x4000de:	mov	qword ptr [rbp - 0x18], rax
0x4000e2:	mov	qword ptr [rbp - 0x20], 0
0x4000ea:	mov	rax, qword ptr [rbp - 0x18]
0x4000ee:	mov	rax, qword ptr [rax]
0x4000f1:	mov	qword ptr [rbp - 0x10], rax
0x4000f5:	cmp	qword ptr [rbp - 0x10], 0
0x4000fa:	je	0x40010f
<Block for 0x40010f, 12 bytes>
0x40010f:	lea	rdi, [rip + 0x36]
0x400116:	call	0x500010
<Block for 0x4000fc, 17 bytes>
0x4000fc:	mov	rax, qword ptr [rbp - 0x10]
0x400100:	movzx	eax, byte ptr [rax]
0x400103:	movsx	eax, al
0x400106:	mov	edi, eax
0x400108:	call	0x500000
<Block for 0x40011b, 16 bytes>
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x40011b
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500008
