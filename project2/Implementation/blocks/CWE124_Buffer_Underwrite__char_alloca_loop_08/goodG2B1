<Block for 0x400181, 84 bytes>
0x400181:	endbr64	
0x400185:	push	rbp
0x400186:	mov	rbp, rsp
0x400189:	sub	rsp, 0x90
0x400190:	mov	rax, qword ptr fs:[0x28]
0x400199:	mov	qword ptr [rbp - 8], rax
0x40019d:	xor	eax, eax
0x40019f:	mov	eax, 0x10
0x4001a4:	sub	rax, 1
0x4001a8:	add	rax, 0x6c
0x4001ac:	mov	esi, 0x10
0x4001b1:	mov	edx, 0
0x4001b6:	div	rsi
0x4001b9:	imul	rax, rax, 0x10
0x4001bd:	mov	rdx, rax
0x4001c0:	and	rdx, 0xfffffffffffff000
0x4001c7:	mov	rcx, rsp
0x4001ca:	sub	rcx, rdx
0x4001cd:	mov	rdx, rcx
0x4001d0:	cmp	rsp, rdx
0x4001d3:	je	0x4001e7
<Block for 0x4001e7, 26 bytes>
0x4001e7:	mov	rdx, rax
0x4001ea:	and	edx, 0xfff
0x4001f0:	sub	rsp, rdx
0x4001f3:	mov	rdx, rax
0x4001f6:	and	edx, 0xfff
0x4001fc:	test	rdx, rdx
0x4001ff:	je	0x400211
<Block for 0x4001d5, 18 bytes>
0x4001d5:	sub	rsp, 0x1000
0x4001dc:	or	qword ptr [rsp + 0xff8], 0
0x4001e5:	jmp	0x4001d0
<Block for 0x400211, 41 bytes>
0x400211:	mov	rax, rsp
0x400214:	add	rax, 0xf
0x400218:	shr	rax, 4
0x40021c:	shl	rax, 4
0x400220:	mov	qword ptr [rbp - 0x78], rax
0x400224:	mov	rax, qword ptr [rbp - 0x78]
0x400228:	mov	edx, 0x63
0x40022d:	mov	esi, 0x41
0x400232:	mov	rdi, rax
0x400235:	call	0x500000
<Block for 0x400201, 57 bytes>
0x400201:	and	eax, 0xfff
0x400206:	sub	rax, 8
0x40020a:	add	rax, rsp
0x40020d:	or	qword ptr [rax], 0
0x400211:	mov	rax, rsp
0x400214:	add	rax, 0xf
0x400218:	shr	rax, 4
0x40021c:	shl	rax, 4
0x400220:	mov	qword ptr [rbp - 0x78], rax
0x400224:	mov	rax, qword ptr [rbp - 0x78]
0x400228:	mov	edx, 0x63
0x40022d:	mov	esi, 0x41
0x400232:	mov	rdi, rax
0x400235:	call	0x500000
<Block for 0x4001d0, 5 bytes>
0x4001d0:	cmp	rsp, rdx
0x4001d3:	je	0x4001e7
<Block for 0x40023a, 21 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 0x78]
0x40023e:	add	rax, 0x63
0x400242:	mov	byte ptr [rax], 0
0x400245:	mov	eax, 0
0x40024a:	call	0x40000f
<Block for 0x40024f, 4 bytes>
0x40024f:	test	eax, eax
0x400251:	je	0x400261
<Block for 0x400261, 33 bytes>
0x400261:	mov	rax, qword ptr [rbp - 0x78]
0x400265:	mov	qword ptr [rbp - 0x88], rax
0x40026c:	lea	rax, [rbp - 0x70]
0x400270:	mov	edx, 0x63
0x400275:	mov	esi, 0x43
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500000
<Block for 0x400253, 12 bytes>
0x400253:	lea	rdi, [rip + 0x212]
0x40025a:	call	0x500008
<Block for 0x400282, 14 bytes>
0x400282:	mov	byte ptr [rbp - 0xd], 0
0x400286:	mov	qword ptr [rbp - 0x80], 0
0x40028e:	jmp	0x4002b3
<Block for 0x40025f, 2 bytes>
0x40025f:	jmp	0x40026c
<Block for 0x4002b3, 7 bytes>
0x4002b3:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002b8:	jbe	0x400290
<Block for 0x40026c, 22 bytes>
0x40026c:	lea	rax, [rbp - 0x70]
0x400270:	mov	edx, 0x63
0x400275:	mov	esi, 0x43
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500000
<Block for 0x400290, 42 bytes>
0x400290:	mov	rdx, qword ptr [rbp - 0x88]
0x400297:	mov	rax, qword ptr [rbp - 0x80]
0x40029b:	add	rdx, rax
0x40029e:	lea	rcx, [rbp - 0x70]
0x4002a2:	mov	rax, qword ptr [rbp - 0x80]
0x4002a6:	add	rax, rcx
0x4002a9:	movzx	eax, byte ptr [rax]
0x4002ac:	mov	byte ptr [rdx], al
0x4002ae:	add	qword ptr [rbp - 0x80], 1
0x4002b3:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002b8:	jbe	0x400290
<Block for 0x4002ba, 29 bytes>
0x4002ba:	mov	rax, qword ptr [rbp - 0x88]
0x4002c1:	add	rax, 0x63
0x4002c5:	mov	byte ptr [rax], 0
0x4002c8:	mov	rax, qword ptr [rbp - 0x88]
0x4002cf:	mov	rdi, rax
0x4002d2:	call	0x500008
<Block for 0x4002d7, 16 bytes>
0x4002d7:	nop	
0x4002d8:	mov	rax, qword ptr [rbp - 8]
0x4002dc:	xor	rax, qword ptr fs:[0x28]
0x4002e5:	je	0x4002ec
<Block for 0x4002ec, 2 bytes>
0x4002ec:	leave	
0x4002ed:	ret	
<Block for 0x4002e7, 5 bytes>
0x4002e7:	call	0x500010
