<Block for 0x40001e, 84 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x90
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0x10
0x400041:	sub	rax, 1
0x400045:	add	rax, 0x6c
0x400049:	mov	esi, 0x10
0x40004e:	mov	edx, 0
0x400053:	div	rsi
0x400056:	imul	rax, rax, 0x10
0x40005a:	mov	rdx, rax
0x40005d:	and	rdx, 0xfffffffffffff000
0x400064:	mov	rcx, rsp
0x400067:	sub	rcx, rdx
0x40006a:	mov	rdx, rcx
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x400084, 26 bytes>
0x400084:	mov	rdx, rax
0x400087:	and	edx, 0xfff
0x40008d:	sub	rsp, rdx
0x400090:	mov	rdx, rax
0x400093:	and	edx, 0xfff
0x400099:	test	rdx, rdx
0x40009c:	je	0x4000ae
<Block for 0x400072, 18 bytes>
0x400072:	sub	rsp, 0x1000
0x400079:	or	qword ptr [rsp + 0xff8], 0
0x400082:	jmp	0x40006d
<Block for 0x4000ae, 41 bytes>
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0x78], rax
0x4000c1:	mov	rax, qword ptr [rbp - 0x78]
0x4000c5:	mov	edx, 0x63
0x4000ca:	mov	esi, 0x41
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500000
<Block for 0x40009e, 57 bytes>
0x40009e:	and	eax, 0xfff
0x4000a3:	sub	rax, 8
0x4000a7:	add	rax, rsp
0x4000aa:	or	qword ptr [rax], 0
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0x78], rax
0x4000c1:	mov	rax, qword ptr [rbp - 0x78]
0x4000c5:	mov	edx, 0x63
0x4000ca:	mov	esi, 0x41
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500000
<Block for 0x40006d, 5 bytes>
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x4000d7, 21 bytes>
0x4000d7:	mov	rax, qword ptr [rbp - 0x78]
0x4000db:	add	rax, 0x63
0x4000df:	mov	byte ptr [rax], 0
0x4000e2:	mov	eax, 0
0x4000e7:	call	0x400000
<Block for 0x4000ec, 4 bytes>
0x4000ec:	test	eax, eax
0x4000ee:	je	0x4000ff
<Block for 0x4000ff, 22 bytes>
0x4000ff:	lea	rax, [rbp - 0x70]
0x400103:	mov	edx, 0x63
0x400108:	mov	esi, 0x43
0x40010d:	mov	rdi, rax
0x400110:	call	0x500000
<Block for 0x4000f0, 37 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x78]
0x4000f4:	sub	rax, 8
0x4000f8:	mov	qword ptr [rbp - 0x88], rax
0x4000ff:	lea	rax, [rbp - 0x70]
0x400103:	mov	edx, 0x63
0x400108:	mov	esi, 0x43
0x40010d:	mov	rdi, rax
0x400110:	call	0x500000
<Block for 0x400115, 14 bytes>
0x400115:	mov	byte ptr [rbp - 0xd], 0
0x400119:	mov	qword ptr [rbp - 0x80], 0
0x400121:	jmp	0x400146
<Block for 0x400146, 7 bytes>
0x400146:	cmp	qword ptr [rbp - 0x80], 0x63
0x40014b:	jbe	0x400123
<Block for 0x400123, 42 bytes>
0x400123:	mov	rdx, qword ptr [rbp - 0x88]
0x40012a:	mov	rax, qword ptr [rbp - 0x80]
0x40012e:	add	rdx, rax
0x400131:	lea	rcx, [rbp - 0x70]
0x400135:	mov	rax, qword ptr [rbp - 0x80]
0x400139:	add	rax, rcx
0x40013c:	movzx	eax, byte ptr [rax]
0x40013f:	mov	byte ptr [rdx], al
0x400141:	add	qword ptr [rbp - 0x80], 1
0x400146:	cmp	qword ptr [rbp - 0x80], 0x63
0x40014b:	jbe	0x400123
<Block for 0x40014d, 29 bytes>
0x40014d:	mov	rax, qword ptr [rbp - 0x88]
0x400154:	add	rax, 0x63
0x400158:	mov	byte ptr [rax], 0
0x40015b:	mov	rax, qword ptr [rbp - 0x88]
0x400162:	mov	rdi, rax
0x400165:	call	0x500008
<Block for 0x40016a, 16 bytes>
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x40017f, 2 bytes>
0x40017f:	leave	
0x400180:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500010
