<Block for 0x4002ee, 84 bytes>
0x4002ee:	endbr64	
0x4002f2:	push	rbp
0x4002f3:	mov	rbp, rsp
0x4002f6:	sub	rsp, 0x90
0x4002fd:	mov	rax, qword ptr fs:[0x28]
0x400306:	mov	qword ptr [rbp - 8], rax
0x40030a:	xor	eax, eax
0x40030c:	mov	eax, 0x10
0x400311:	sub	rax, 1
0x400315:	add	rax, 0x6c
0x400319:	mov	esi, 0x10
0x40031e:	mov	edx, 0
0x400323:	div	rsi
0x400326:	imul	rax, rax, 0x10
0x40032a:	mov	rdx, rax
0x40032d:	and	rdx, 0xfffffffffffff000
0x400334:	mov	rcx, rsp
0x400337:	sub	rcx, rdx
0x40033a:	mov	rdx, rcx
0x40033d:	cmp	rsp, rdx
0x400340:	je	0x400354
<Block for 0x400354, 26 bytes>
0x400354:	mov	rdx, rax
0x400357:	and	edx, 0xfff
0x40035d:	sub	rsp, rdx
0x400360:	mov	rdx, rax
0x400363:	and	edx, 0xfff
0x400369:	test	rdx, rdx
0x40036c:	je	0x40037e
<Block for 0x400342, 18 bytes>
0x400342:	sub	rsp, 0x1000
0x400349:	or	qword ptr [rsp + 0xff8], 0
0x400352:	jmp	0x40033d
<Block for 0x40037e, 41 bytes>
0x40037e:	mov	rax, rsp
0x400381:	add	rax, 0xf
0x400385:	shr	rax, 4
0x400389:	shl	rax, 4
0x40038d:	mov	qword ptr [rbp - 0x78], rax
0x400391:	mov	rax, qword ptr [rbp - 0x78]
0x400395:	mov	edx, 0x63
0x40039a:	mov	esi, 0x41
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x500000
<Block for 0x40036e, 57 bytes>
0x40036e:	and	eax, 0xfff
0x400373:	sub	rax, 8
0x400377:	add	rax, rsp
0x40037a:	or	qword ptr [rax], 0
0x40037e:	mov	rax, rsp
0x400381:	add	rax, 0xf
0x400385:	shr	rax, 4
0x400389:	shl	rax, 4
0x40038d:	mov	qword ptr [rbp - 0x78], rax
0x400391:	mov	rax, qword ptr [rbp - 0x78]
0x400395:	mov	edx, 0x63
0x40039a:	mov	esi, 0x41
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x500000
<Block for 0x40033d, 5 bytes>
0x40033d:	cmp	rsp, rdx
0x400340:	je	0x400354
<Block for 0x4003a7, 21 bytes>
0x4003a7:	mov	rax, qword ptr [rbp - 0x78]
0x4003ab:	add	rax, 0x63
0x4003af:	mov	byte ptr [rax], 0
0x4003b2:	mov	eax, 0
0x4003b7:	call	0x400000
<Block for 0x4003bc, 4 bytes>
0x4003bc:	test	eax, eax
0x4003be:	je	0x4003cb
<Block for 0x4003cb, 22 bytes>
0x4003cb:	lea	rax, [rbp - 0x70]
0x4003cf:	mov	edx, 0x63
0x4003d4:	mov	esi, 0x43
0x4003d9:	mov	rdi, rax
0x4003dc:	call	0x500000
<Block for 0x4003c0, 33 bytes>
0x4003c0:	mov	rax, qword ptr [rbp - 0x78]
0x4003c4:	mov	qword ptr [rbp - 0x88], rax
0x4003cb:	lea	rax, [rbp - 0x70]
0x4003cf:	mov	edx, 0x63
0x4003d4:	mov	esi, 0x43
0x4003d9:	mov	rdi, rax
0x4003dc:	call	0x500000
<Block for 0x4003e1, 14 bytes>
0x4003e1:	mov	byte ptr [rbp - 0xd], 0
0x4003e5:	mov	qword ptr [rbp - 0x80], 0
0x4003ed:	jmp	0x400412
<Block for 0x400412, 7 bytes>
0x400412:	cmp	qword ptr [rbp - 0x80], 0x63
0x400417:	jbe	0x4003ef
<Block for 0x4003ef, 42 bytes>
0x4003ef:	mov	rdx, qword ptr [rbp - 0x88]
0x4003f6:	mov	rax, qword ptr [rbp - 0x80]
0x4003fa:	add	rdx, rax
0x4003fd:	lea	rcx, [rbp - 0x70]
0x400401:	mov	rax, qword ptr [rbp - 0x80]
0x400405:	add	rax, rcx
0x400408:	movzx	eax, byte ptr [rax]
0x40040b:	mov	byte ptr [rdx], al
0x40040d:	add	qword ptr [rbp - 0x80], 1
0x400412:	cmp	qword ptr [rbp - 0x80], 0x63
0x400417:	jbe	0x4003ef
<Block for 0x400419, 29 bytes>
0x400419:	mov	rax, qword ptr [rbp - 0x88]
0x400420:	add	rax, 0x63
0x400424:	mov	byte ptr [rax], 0
0x400427:	mov	rax, qword ptr [rbp - 0x88]
0x40042e:	mov	rdi, rax
0x400431:	call	0x500008
<Block for 0x400436, 16 bytes>
0x400436:	nop	
0x400437:	mov	rax, qword ptr [rbp - 8]
0x40043b:	xor	rax, qword ptr fs:[0x28]
0x400444:	je	0x40044b
<Block for 0x40044b, 2 bytes>
0x40044b:	leave	
0x40044c:	ret	
<Block for 0x400446, 5 bytes>
0x400446:	call	0x500010
