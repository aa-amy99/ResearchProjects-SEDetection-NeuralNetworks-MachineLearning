<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 33 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	mov	eax, 5
0x40003a:	cmp	eax, 5
0x40003d:	jne	0x400194
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400043, 29 bytes>
0x400043:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x40004d:	lea	rsi, [rip + 0x164]
0x400054:	lea	rdi, [rip + 0x15f]
0x40005b:	call	0x500000
<Block for 0x400194, 16 bytes>
0x400194:	nop	
0x400195:	mov	rax, qword ptr [rbp - 0x18]
0x400199:	xor	rax, qword ptr fs:[0x28]
0x4001a2:	je	0x4001a9
<Block for 0x400060, 17 bytes>
0x400060:	mov	qword ptr [rbp - 0x10038], rax
0x400067:	cmp	qword ptr [rbp - 0x10038], 0
0x40006f:	je	0x4000b3
<Block for 0x4001a9, 10 bytes>
0x4001a9:	add	rsp, 0x10038
0x4001b0:	pop	rbx
0x4001b1:	pop	rbp
0x4001b2:	ret	
<Block for 0x4001a4, 5 bytes>
0x4001a4:	call	0x500058
<Block for 0x4000b3, 20 bytes>
0x4000b3:	mov	edx, 6
0x4000b8:	mov	esi, 1
0x4000bd:	mov	edi, 2
0x4000c2:	call	0x500020
<Block for 0x400071, 27 bytes>
0x400071:	mov	rdx, qword ptr [rbp - 0x10038]
0x400078:	lea	rax, [rbp - 0x10020]
0x40007f:	mov	esi, 0xffff
0x400084:	mov	rdi, rax
0x400087:	call	0x500008
<Block for 0x4000c7, 19 bytes>
0x4000c7:	mov	dword ptr [rbp - 0x1003c], eax
0x4000cd:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000d4:	je	0x40017a
<Block for 0x40008c, 5 bytes>
0x40008c:	test	rax, rax
0x40008f:	jne	0x4000a4
<Block for 0x40017a, 3 bytes>
0x40017a:	nop	
0x40017b:	jmp	0x40017e
<Block for 0x4000da, 25 bytes>
0x4000da:	lea	rax, [rbp - 0x10030]
0x4000e1:	mov	edx, 0x10
0x4000e6:	mov	esi, 0
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500028
<Block for 0x400091, 12 bytes>
0x400091:	lea	rdi, [rip + 0x12b]
0x400098:	call	0x500010
<Block for 0x4000a4, 15 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x10038]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500018
<Block for 0x40017e, 9 bytes>
0x40017e:	cmp	dword ptr [rbp - 0x1003c], -1
0x400185:	je	0x400194
<Block for 0x4000f3, 29 bytes>
0x4000f3:	mov	word ptr [rbp - 0x10030], 2
0x4000fc:	mov	dword ptr [rbp - 0x1002c], 0
0x400106:	mov	edi, 0x6987
0x40010b:	call	0x500030
<Block for 0x40009d, 22 bytes>
0x40009d:	mov	byte ptr [rbp - 0x10020], 0
0x4000a4:	mov	rax, qword ptr [rbp - 0x10038]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500018
<Block for 0x400187, 13 bytes>
0x400187:	mov	eax, dword ptr [rbp - 0x1003c]
0x40018d:	mov	edi, eax
0x40018f:	call	0x500050
<Block for 0x400110, 35 bytes>
0x400110:	mov	word ptr [rbp - 0x1002e], ax
0x400117:	lea	rcx, [rbp - 0x10030]
0x40011e:	mov	eax, dword ptr [rbp - 0x1003c]
0x400124:	mov	edx, 0x10
0x400129:	mov	rsi, rcx
0x40012c:	mov	edi, eax
0x40012e:	call	0x500038
<Block for 0x400133, 5 bytes>
0x400133:	cmp	eax, -1
0x400136:	je	0x40017d
<Block for 0x400138, 15 bytes>
0x400138:	lea	rax, [rbp - 0x10020]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500040
<Block for 0x40017d, 1 bytes>
0x40017d:	nop	
<Block for 0x400147, 28 bytes>
0x400147:	mov	rdx, rax
0x40014a:	lea	rsi, [rbp - 0x10020]
0x400151:	mov	eax, dword ptr [rbp - 0x1003c]
0x400157:	mov	ecx, 0
0x40015c:	mov	edi, eax
0x40015e:	call	0x500048
<Block for 0x400163, 18 bytes>
0x400163:	mov	rbx, rax
0x400166:	lea	rax, [rbp - 0x10020]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500040
<Block for 0x400175, 5 bytes>
0x400175:	cmp	rbx, rax
0x400178:	jmp	0x40017e
