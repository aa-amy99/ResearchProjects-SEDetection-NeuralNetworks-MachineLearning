<Block for 0x400125, 53 bytes>
0x400125:	endbr64	
0x400129:	push	rbp
0x40012a:	mov	rbp, rsp
0x40012d:	sub	rsp, 0xf0
0x400134:	mov	rax, qword ptr fs:[0x28]
0x40013d:	mov	qword ptr [rbp - 8], rax
0x400141:	xor	eax, eax
0x400143:	lea	rax, [rbp - 0xe0]
0x40014a:	mov	qword ptr [rbp - 0xe8], rax
0x400151:	mov	eax, 1
0x400156:	test	eax, eax
0x400158:	je	0x400164
<Block for 0x400164, 22 bytes>
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	edx, 0x63
0x40016d:	mov	esi, 0x43
0x400172:	mov	rdi, rax
0x400175:	call	0x500000
<Block for 0x40015a, 32 bytes>
0x40015a:	mov	rax, qword ptr [rbp - 0xe8]
0x400161:	mov	byte ptr [rax], 0
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	edx, 0x63
0x40016d:	mov	esi, 0x43
0x400172:	mov	rdi, rax
0x400175:	call	0x500000
<Block for 0x40017a, 26 bytes>
0x40017a:	mov	byte ptr [rbp - 0xd], 0
0x40017e:	lea	rdx, [rbp - 0x70]
0x400182:	mov	rax, qword ptr [rbp - 0xe8]
0x400189:	mov	rsi, rdx
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500008
<Block for 0x400194, 15 bytes>
0x400194:	mov	rax, qword ptr [rbp - 0xe8]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500010
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500018
