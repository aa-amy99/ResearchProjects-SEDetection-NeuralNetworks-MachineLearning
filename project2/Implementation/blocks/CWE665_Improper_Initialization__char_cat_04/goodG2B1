<Block for 0x400082, 53 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0xf0
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	lea	rax, [rbp - 0xe0]
0x4000a7:	mov	qword ptr [rbp - 0xe8], rax
0x4000ae:	mov	eax, 0
0x4000b3:	test	eax, eax
0x4000b5:	je	0x4000c5
<Block for 0x4000c5, 32 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 0xe8]
0x4000cc:	mov	byte ptr [rax], 0
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x43
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rdi, [rip + 0x126]
0x4000be:	call	0x500010
<Block for 0x4000e5, 26 bytes>
0x4000e5:	mov	byte ptr [rbp - 0xd], 0
0x4000e9:	lea	rdx, [rbp - 0x70]
0x4000ed:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x4000c3, 2 bytes>
0x4000c3:	jmp	0x4000cf
<Block for 0x4000ff, 15 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0xe8]
0x400106:	mov	rdi, rax
0x400109:	call	0x500010
<Block for 0x4000cf, 22 bytes>
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x43
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x40010e, 16 bytes>
0x40010e:	nop	
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	xor	rax, qword ptr fs:[0x28]
0x40011c:	je	0x400123
<Block for 0x400123, 2 bytes>
0x400123:	leave	
0x400124:	ret	
<Block for 0x40011e, 5 bytes>
0x40011e:	call	0x500018
