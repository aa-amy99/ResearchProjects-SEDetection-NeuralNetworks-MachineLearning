<Block for 0x400322, 40 bytes>
0x400322:	endbr64	
0x400326:	push	rbp
0x400327:	mov	rbp, rsp
0x40032a:	push	rbx
0x40032b:	sub	rsp, 0x48
0x40032f:	mov	rax, qword ptr fs:[0x28]
0x400338:	mov	qword ptr [rbp - 0x18], rax
0x40033c:	xor	eax, eax
0x40033e:	lea	rax, [rbp - 0x30]
0x400342:	mov	rdi, rax
0x400345:	call	0x400606
<Block for 0x40034a, 13 bytes>
0x40034a:	mov	dword ptr [rbp - 0x48], 0
0x400351:	cmp	dword ptr [rbp - 0x48], 0
0x400355:	jg	0x400391
<Block for 0x400357, 26 bytes>
0x400357:	mov	dword ptr [rbp - 0x38], 0x64
0x40035e:	lea	rdx, [rbp - 0x38]
0x400362:	lea	rax, [rbp - 0x30]
0x400366:	mov	rsi, rdx
0x400369:	mov	rdi, rax
0x40036c:	call	0x4006ee
<Block for 0x400391, 17 bytes>
0x400391:	mov	dword ptr [rbp - 0x44], 0
0x400398:	cmp	dword ptr [rbp - 0x44], 0
0x40039c:	jg	0x40047e
<Block for 0x400371, 26 bytes>
0x400371:	mov	dword ptr [rbp - 0x38], 0xc8
0x400378:	lea	rdx, [rbp - 0x38]
0x40037c:	lea	rax, [rbp - 0x30]
0x400380:	mov	rsi, rdx
0x400383:	mov	rdi, rax
0x400386:	call	0x4006ee
<Block for 0x4003a2, 12 bytes>
0x4003a2:	lea	rax, [rbp - 0x40]
0x4003a6:	mov	rdi, rax
0x4003a9:	call	0x40073c
<Block for 0x40047e, 12 bytes>
0x40047e:	lea	rax, [rbp - 0x30]
0x400482:	mov	rdi, rax
0x400485:	call	0x400626
<Block for 0x40038b, 6 bytes>
0x40038b:	add	dword ptr [rbp - 0x48], 1
0x40038f:	jmp	0x400351
<Block for 0x4003ae, 19 bytes>
0x4003ae:	lea	rsi, [rip + 0x1a4]
0x4003b5:	lea	rdi, [rip + 0xffc44]
0x4003bc:	call	0x500008
<Block for 0x40048a, 16 bytes>
0x40048a:	nop	
0x40048b:	mov	rax, qword ptr [rbp - 0x18]
0x40048f:	xor	rax, qword ptr fs:[0x28]
0x400498:	je	0x4004bf
<Block for 0x400351, 6 bytes>
0x400351:	cmp	dword ptr [rbp - 0x48], 0
0x400355:	jg	0x400391
<Block for 0x4003c1, 12 bytes>
0x4003c1:	lea	rax, [rbp - 0x30]
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x400756
<Block for 0x4004bf, 7 bytes>
0x4004bf:	add	rsp, 0x48
0x4004c3:	pop	rbx
0x4004c4:	pop	rbp
0x4004c5:	ret	
<Block for 0x40049a, 2 bytes>
0x40049a:	jmp	0x4004ba
<Block for 0x4003cd, 16 bytes>
0x4003cd:	mov	qword ptr [rbp - 0x40], rax
0x4003d1:	lea	rax, [rbp - 0x30]
0x4003d5:	mov	rdi, rax
0x4003d8:	call	0x4007a6
<Block for 0x4004ba, 5 bytes>
0x4004ba:	call	0x500038
<Block for 0x4003dd, 23 bytes>
0x4003dd:	mov	qword ptr [rbp - 0x38], rax
0x4003e1:	lea	rdx, [rbp - 0x38]
0x4003e5:	lea	rax, [rbp - 0x40]
0x4003e9:	mov	rsi, rdx
0x4003ec:	mov	rdi, rax
0x4003ef:	call	0x4007f2
<Block for 0x4003f4, 4 bytes>
0x4003f4:	test	al, al
0x4003f6:	je	0x40045f
<Block for 0x40045f, 22 bytes>
0x40045f:	mov	rax, qword ptr [rip + 0xffbba]
0x400466:	mov	rsi, rax
0x400469:	lea	rdi, [rip + 0xffb90]
0x400470:	call	0x500028
<Block for 0x4003f8, 12 bytes>
0x4003f8:	lea	rax, [rbp - 0x40]
0x4003fc:	mov	rdi, rax
0x4003ff:	call	0x400870
<Block for 0x400475, 9 bytes>
0x400475:	add	dword ptr [rbp - 0x44], 1
0x400479:	jmp	0x400398
<Block for 0x400404, 11 bytes>
0x400404:	mov	eax, dword ptr [rax]
0x400406:	test	eax, eax
0x400408:	sete	al
0x40040b:	test	al, al
0x40040d:	je	0x40041b
<Block for 0x400398, 10 bytes>
0x400398:	cmp	dword ptr [rbp - 0x44], 0
0x40039c:	jg	0x40047e
<Block for 0x40041b, 19 bytes>
0x40041b:	lea	rsi, [rip + 0x14b]
0x400422:	lea	rdi, [rip + 0xffbd7]
0x400429:	call	0x500008
<Block for 0x40040f, 12 bytes>
0x40040f:	lea	rax, [rbp - 0x30]
0x400413:	mov	rdi, rax
0x400416:	call	0x400892
<Block for 0x40042e, 15 bytes>
0x40042e:	mov	rbx, rax
0x400431:	lea	rax, [rbp - 0x40]
0x400435:	mov	rdi, rax
0x400438:	call	0x400870
<Block for 0x40043d, 12 bytes>
0x40043d:	mov	eax, dword ptr [rax]
0x40043f:	mov	esi, eax
0x400441:	mov	rdi, rbx
0x400444:	call	0x500010
<Block for 0x400449, 17 bytes>
0x400449:	lea	rax, [rbp - 0x40]
0x40044d:	mov	esi, 0
0x400452:	mov	rdi, rax
0x400455:	call	0x400818
<Block for 0x40045a, 5 bytes>
0x40045a:	jmp	0x4003d1
<Block for 0x4003d1, 12 bytes>
0x4003d1:	lea	rax, [rbp - 0x30]
0x4003d5:	mov	rdi, rax
0x4003d8:	call	0x4007a6
