<Block for 0x4002b4, 158 bytes>
0x4002b4:	endbr64	
0x4002b8:	push	rbp
0x4002b9:	mov	rbp, rsp
0x4002bc:	sub	rsp, 0xb0
0x4002c3:	mov	rax, qword ptr fs:[0x28]
0x4002cc:	mov	qword ptr [rbp - 8], rax
0x4002d0:	xor	eax, eax
0x4002d2:	mov	qword ptr [rbp - 0x70], 0
0x4002da:	mov	qword ptr [rbp - 0x68], 0
0x4002e2:	mov	qword ptr [rbp - 0x60], 0
0x4002ea:	mov	qword ptr [rbp - 0x58], 0
0x4002f2:	mov	qword ptr [rbp - 0x50], 0
0x4002fa:	mov	qword ptr [rbp - 0x48], 0
0x400302:	mov	qword ptr [rbp - 0x40], 0
0x40030a:	mov	qword ptr [rbp - 0x38], 0
0x400312:	mov	qword ptr [rbp - 0x30], 0
0x40031a:	mov	qword ptr [rbp - 0x28], 0
0x400322:	mov	qword ptr [rbp - 0x20], 0
0x40032a:	mov	qword ptr [rbp - 0x18], 0
0x400332:	mov	dword ptr [rbp - 0x10], 0
0x400339:	lea	rax, [rbp - 0x70]
0x40033d:	mov	qword ptr [rbp - 0x98], rax
0x400344:	mov	eax, dword ptr [rip + 0x76a]
0x40034a:	test	eax, eax
0x40034c:	je	0x4004e1
<Block for 0x4004e1, 10 bytes>
0x4004e1:	mov	eax, dword ptr [rip + 0x5d1]
0x4004e7:	test	eax, eax
0x4004e9:	je	0x4004f9
<Block for 0x400352, 25 bytes>
0x400352:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x40035c:	mov	rax, qword ptr [rbp - 0x98]
0x400363:	mov	rdi, rax
0x400366:	call	0x500000
<Block for 0x4004f9, 34 bytes>
0x4004f9:	lea	rdx, [rbp - 0xac]
0x400500:	mov	rax, qword ptr [rbp - 0x98]
0x400507:	lea	rsi, [rip + 0x5b8]
0x40050e:	mov	rdi, rax
0x400511:	mov	eax, 0
0x400516:	call	0x500048
<Block for 0x4004eb, 12 bytes>
0x4004eb:	lea	rdi, [rip + 0x5d7]
0x4004f2:	call	0x500060
<Block for 0x40036b, 27 bytes>
0x40036b:	mov	qword ptr [rbp - 0x90], rax
0x400372:	mov	edx, 6
0x400377:	mov	esi, 1
0x40037c:	mov	edi, 2
0x400381:	call	0x500008
<Block for 0x40051b, 5 bytes>
0x40051b:	cmp	eax, 1
0x40051e:	jne	0x40056c
<Block for 0x4004f7, 2 bytes>
0x4004f7:	jmp	0x40056c
<Block for 0x400386, 19 bytes>
0x400386:	mov	dword ptr [rbp - 0xa0], eax
0x40038c:	cmp	dword ptr [rbp - 0xa0], -1
0x400393:	je	0x4004c7
<Block for 0x400520, 13 bytes>
0x400520:	mov	eax, dword ptr [rbp - 0xac]
0x400526:	cmp	eax, 0x270f
0x40052b:	jg	0x40056c
<Block for 0x40056c, 16 bytes>
0x40056c:	nop	
0x40056d:	mov	rax, qword ptr [rbp - 8]
0x400571:	xor	rax, qword ptr fs:[0x28]
0x40057a:	je	0x400581
<Block for 0x4004c7, 3 bytes>
0x4004c7:	nop	
0x4004c8:	jmp	0x4004cb
<Block for 0x400399, 22 bytes>
0x400399:	lea	rax, [rbp - 0x80]
0x40039d:	mov	edx, 0x10
0x4003a2:	mov	esi, 0
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x500010
<Block for 0x40052d, 22 bytes>
0x40052d:	mov	dword ptr [rbp - 0xa4], 0
0x400537:	mov	dword ptr [rbp - 0xa8], 0
0x400541:	jmp	0x400551
<Block for 0x400581, 2 bytes>
0x400581:	leave	
0x400582:	ret	
<Block for 0x40057c, 5 bytes>
0x40057c:	call	0x500058
<Block for 0x4004cb, 9 bytes>
0x4004cb:	cmp	dword ptr [rbp - 0xa0], -1
0x4004d2:	je	0x4004e1
<Block for 0x4003af, 18 bytes>
0x4003af:	mov	word ptr [rbp - 0x80], 2
0x4003b5:	lea	rdi, [rip + 0x700]
0x4003bc:	call	0x500018
<Block for 0x400551, 14 bytes>
0x400551:	mov	eax, dword ptr [rbp - 0xac]
0x400557:	cmp	dword ptr [rbp - 0xa8], eax
0x40055d:	jl	0x400543
<Block for 0x4004d4, 13 bytes>
0x4004d4:	mov	eax, dword ptr [rbp - 0xa0]
0x4004da:	mov	edi, eax
0x4004dc:	call	0x500040
<Block for 0x4003c1, 13 bytes>
0x4003c1:	mov	dword ptr [rbp - 0x7c], eax
0x4003c4:	mov	edi, 0x6987
0x4003c9:	call	0x500020
<Block for 0x400543, 28 bytes>
0x400543:	add	dword ptr [rbp - 0xa4], 1
0x40054a:	add	dword ptr [rbp - 0xa8], 1
0x400551:	mov	eax, dword ptr [rbp - 0xac]
0x400557:	cmp	dword ptr [rbp - 0xa8], eax
0x40055d:	jl	0x400543
<Block for 0x40055f, 13 bytes>
0x40055f:	mov	eax, dword ptr [rbp - 0xa4]
0x400565:	mov	edi, eax
0x400567:	call	0x500050
<Block for 0x4003ce, 29 bytes>
0x4003ce:	mov	word ptr [rbp - 0x7e], ax
0x4003d2:	lea	rcx, [rbp - 0x80]
0x4003d6:	mov	eax, dword ptr [rbp - 0xa0]
0x4003dc:	mov	edx, 0x10
0x4003e1:	mov	rsi, rcx
0x4003e4:	mov	edi, eax
0x4003e6:	call	0x500028
<Block for 0x4003eb, 9 bytes>
0x4003eb:	cmp	eax, -1
0x4003ee:	je	0x4004ca
<Block for 0x4003f4, 51 bytes>
0x4003f4:	mov	eax, 0x63
0x4003f9:	sub	rax, qword ptr [rbp - 0x90]
0x400400:	mov	rdx, rax
0x400403:	mov	rcx, qword ptr [rbp - 0x98]
0x40040a:	mov	rax, qword ptr [rbp - 0x90]
0x400411:	lea	rsi, [rcx + rax]
0x400415:	mov	eax, dword ptr [rbp - 0xa0]
0x40041b:	mov	ecx, 0
0x400420:	mov	edi, eax
0x400422:	call	0x500030
<Block for 0x4004ca, 1 bytes>
0x4004ca:	nop	
<Block for 0x400427, 19 bytes>
0x400427:	mov	dword ptr [rbp - 0x9c], eax
0x40042d:	cmp	dword ptr [rbp - 0x9c], -1
0x400434:	je	0x4004cb
<Block for 0x40043a, 13 bytes>
0x40043a:	cmp	dword ptr [rbp - 0x9c], 0
0x400441:	je	0x4004cb
<Block for 0x400447, 52 bytes>
0x400447:	mov	eax, dword ptr [rbp - 0x9c]
0x40044d:	movsxd	rdx, eax
0x400450:	mov	rax, qword ptr [rbp - 0x90]
0x400457:	add	rdx, rax
0x40045a:	mov	rax, qword ptr [rbp - 0x98]
0x400461:	add	rax, rdx
0x400464:	mov	byte ptr [rax], 0
0x400467:	mov	rax, qword ptr [rbp - 0x98]
0x40046e:	mov	esi, 0xd
0x400473:	mov	rdi, rax
0x400476:	call	0x500038
<Block for 0x40047b, 17 bytes>
0x40047b:	mov	qword ptr [rbp - 0x88], rax
0x400482:	cmp	qword ptr [rbp - 0x88], 0
0x40048a:	je	0x400496
<Block for 0x400496, 20 bytes>
0x400496:	mov	rax, qword ptr [rbp - 0x98]
0x40049d:	mov	esi, 0xa
0x4004a2:	mov	rdi, rax
0x4004a5:	call	0x500038
<Block for 0x40048c, 30 bytes>
0x40048c:	mov	rax, qword ptr [rbp - 0x88]
0x400493:	mov	byte ptr [rax], 0
0x400496:	mov	rax, qword ptr [rbp - 0x98]
0x40049d:	mov	esi, 0xa
0x4004a2:	mov	rdi, rax
0x4004a5:	call	0x500038
<Block for 0x4004aa, 17 bytes>
0x4004aa:	mov	qword ptr [rbp - 0x88], rax
0x4004b1:	cmp	qword ptr [rbp - 0x88], 0
0x4004b9:	je	0x4004cb
<Block for 0x4004bb, 12 bytes>
0x4004bb:	mov	rax, qword ptr [rbp - 0x88]
0x4004c2:	mov	byte ptr [rax], 0
0x4004c5:	jmp	0x4004cb
