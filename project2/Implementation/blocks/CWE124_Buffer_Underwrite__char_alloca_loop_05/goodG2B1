<Block for 0x40015f, 84 bytes>
0x40015f:	endbr64	
0x400163:	push	rbp
0x400164:	mov	rbp, rsp
0x400167:	sub	rsp, 0x90
0x40016e:	mov	rax, qword ptr fs:[0x28]
0x400177:	mov	qword ptr [rbp - 8], rax
0x40017b:	xor	eax, eax
0x40017d:	mov	eax, 0x10
0x400182:	sub	rax, 1
0x400186:	add	rax, 0x6c
0x40018a:	mov	esi, 0x10
0x40018f:	mov	edx, 0
0x400194:	div	rsi
0x400197:	imul	rax, rax, 0x10
0x40019b:	mov	rdx, rax
0x40019e:	and	rdx, 0xfffffffffffff000
0x4001a5:	mov	rcx, rsp
0x4001a8:	sub	rcx, rdx
0x4001ab:	mov	rdx, rcx
0x4001ae:	cmp	rsp, rdx
0x4001b1:	je	0x4001c5
<Block for 0x4001c5, 26 bytes>
0x4001c5:	mov	rdx, rax
0x4001c8:	and	edx, 0xfff
0x4001ce:	sub	rsp, rdx
0x4001d1:	mov	rdx, rax
0x4001d4:	and	edx, 0xfff
0x4001da:	test	rdx, rdx
0x4001dd:	je	0x4001ef
<Block for 0x4001b3, 18 bytes>
0x4001b3:	sub	rsp, 0x1000
0x4001ba:	or	qword ptr [rsp + 0xff8], 0
0x4001c3:	jmp	0x4001ae
<Block for 0x4001ef, 41 bytes>
0x4001ef:	mov	rax, rsp
0x4001f2:	add	rax, 0xf
0x4001f6:	shr	rax, 4
0x4001fa:	shl	rax, 4
0x4001fe:	mov	qword ptr [rbp - 0x78], rax
0x400202:	mov	rax, qword ptr [rbp - 0x78]
0x400206:	mov	edx, 0x63
0x40020b:	mov	esi, 0x41
0x400210:	mov	rdi, rax
0x400213:	call	0x500000
<Block for 0x4001df, 57 bytes>
0x4001df:	and	eax, 0xfff
0x4001e4:	sub	rax, 8
0x4001e8:	add	rax, rsp
0x4001eb:	or	qword ptr [rax], 0
0x4001ef:	mov	rax, rsp
0x4001f2:	add	rax, 0xf
0x4001f6:	shr	rax, 4
0x4001fa:	shl	rax, 4
0x4001fe:	mov	qword ptr [rbp - 0x78], rax
0x400202:	mov	rax, qword ptr [rbp - 0x78]
0x400206:	mov	edx, 0x63
0x40020b:	mov	esi, 0x41
0x400210:	mov	rdi, rax
0x400213:	call	0x500000
<Block for 0x4001ae, 5 bytes>
0x4001ae:	cmp	rsp, rdx
0x4001b1:	je	0x4001c5
<Block for 0x400218, 21 bytes>
0x400218:	mov	rax, qword ptr [rbp - 0x78]
0x40021c:	add	rax, 0x63
0x400220:	mov	byte ptr [rax], 0
0x400223:	mov	eax, dword ptr [rip + 0x21f]
0x400229:	test	eax, eax
0x40022b:	je	0x40023b
<Block for 0x40023b, 33 bytes>
0x40023b:	mov	rax, qword ptr [rbp - 0x78]
0x40023f:	mov	qword ptr [rbp - 0x88], rax
0x400246:	lea	rax, [rbp - 0x70]
0x40024a:	mov	edx, 0x63
0x40024f:	mov	esi, 0x43
0x400254:	mov	rdi, rax
0x400257:	call	0x500000
<Block for 0x40022d, 12 bytes>
0x40022d:	lea	rdi, [rip + 0x218]
0x400234:	call	0x500008
<Block for 0x40025c, 14 bytes>
0x40025c:	mov	byte ptr [rbp - 0xd], 0
0x400260:	mov	qword ptr [rbp - 0x80], 0
0x400268:	jmp	0x40028d
<Block for 0x400239, 2 bytes>
0x400239:	jmp	0x400246
<Block for 0x40028d, 7 bytes>
0x40028d:	cmp	qword ptr [rbp - 0x80], 0x63
0x400292:	jbe	0x40026a
<Block for 0x400246, 22 bytes>
0x400246:	lea	rax, [rbp - 0x70]
0x40024a:	mov	edx, 0x63
0x40024f:	mov	esi, 0x43
0x400254:	mov	rdi, rax
0x400257:	call	0x500000
<Block for 0x40026a, 42 bytes>
0x40026a:	mov	rdx, qword ptr [rbp - 0x88]
0x400271:	mov	rax, qword ptr [rbp - 0x80]
0x400275:	add	rdx, rax
0x400278:	lea	rcx, [rbp - 0x70]
0x40027c:	mov	rax, qword ptr [rbp - 0x80]
0x400280:	add	rax, rcx
0x400283:	movzx	eax, byte ptr [rax]
0x400286:	mov	byte ptr [rdx], al
0x400288:	add	qword ptr [rbp - 0x80], 1
0x40028d:	cmp	qword ptr [rbp - 0x80], 0x63
0x400292:	jbe	0x40026a
<Block for 0x400294, 29 bytes>
0x400294:	mov	rax, qword ptr [rbp - 0x88]
0x40029b:	add	rax, 0x63
0x40029f:	mov	byte ptr [rax], 0
0x4002a2:	mov	rax, qword ptr [rbp - 0x88]
0x4002a9:	mov	rdi, rax
0x4002ac:	call	0x500008
<Block for 0x4002b1, 16 bytes>
0x4002b1:	nop	
0x4002b2:	mov	rax, qword ptr [rbp - 8]
0x4002b6:	xor	rax, qword ptr fs:[0x28]
0x4002bf:	je	0x4002c6
<Block for 0x4002c6, 2 bytes>
0x4002c6:	leave	
0x4002c7:	ret	
<Block for 0x4002c1, 5 bytes>
0x4002c1:	call	0x500010
