<Block for 0x4001a9, 68 bytes>
0x4001a9:	endbr64	
0x4001ad:	push	rbp
0x4001ae:	mov	rbp, rsp
0x4001b1:	sub	rsp, 0x40
0x4001b5:	mov	rax, qword ptr fs:[0x28]
0x4001be:	mov	qword ptr [rbp - 8], rax
0x4001c2:	xor	eax, eax
0x4001c4:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4001cb:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001d2:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4001d9:	mov	edx, 6
0x4001de:	mov	esi, 1
0x4001e3:	mov	edi, 2
0x4001e8:	call	0x500000
<Block for 0x4001ed, 13 bytes>
0x4001ed:	mov	dword ptr [rbp - 0x38], eax
0x4001f0:	cmp	dword ptr [rbp - 0x38], -1
0x4001f4:	je	0x4002b9
<Block for 0x4002b9, 3 bytes>
0x4002b9:	nop	
0x4002ba:	jmp	0x4002c3
<Block for 0x4001fa, 22 bytes>
0x4001fa:	lea	rax, [rbp - 0x30]
0x4001fe:	mov	edx, 0x10
0x400203:	mov	esi, 0
0x400208:	mov	rdi, rax
0x40020b:	call	0x500008
<Block for 0x4002c3, 6 bytes>
0x4002c3:	cmp	dword ptr [rbp - 0x38], -1
0x4002c7:	je	0x4002d3
<Block for 0x400210, 23 bytes>
0x400210:	mov	word ptr [rbp - 0x30], 2
0x400216:	mov	dword ptr [rbp - 0x2c], 0
0x40021d:	mov	edi, 0x6987
0x400222:	call	0x500010
<Block for 0x4002d3, 6 bytes>
0x4002d3:	cmp	dword ptr [rbp - 0x3c], -1
0x4002d7:	je	0x4002e3
<Block for 0x4002c9, 10 bytes>
0x4002c9:	mov	eax, dword ptr [rbp - 0x38]
0x4002cc:	mov	edi, eax
0x4002ce:	call	0x500040
<Block for 0x400227, 26 bytes>
0x400227:	mov	word ptr [rbp - 0x2e], ax
0x40022b:	lea	rcx, [rbp - 0x30]
0x40022f:	mov	eax, dword ptr [rbp - 0x38]
0x400232:	mov	edx, 0x10
0x400237:	mov	rsi, rcx
0x40023a:	mov	edi, eax
0x40023c:	call	0x500018
<Block for 0x4002e3, 12 bytes>
0x4002e3:	lea	rax, [rbp - 0x40]
0x4002e7:	mov	rdi, rax
0x4002ea:	call	0x500060
<Block for 0x4002d9, 10 bytes>
0x4002d9:	mov	eax, dword ptr [rbp - 0x3c]
0x4002dc:	mov	edi, eax
0x4002de:	call	0x500040
<Block for 0x400241, 5 bytes>
0x400241:	cmp	eax, -1
0x400244:	je	0x4002bc
<Block for 0x4002ef, 16 bytes>
0x4002ef:	nop	
0x4002f0:	mov	rax, qword ptr [rbp - 8]
0x4002f4:	xor	rax, qword ptr fs:[0x28]
0x4002fd:	je	0x400304
<Block for 0x4002bc, 3 bytes>
0x4002bc:	nop	
0x4002bd:	jmp	0x4002c3
<Block for 0x400246, 15 bytes>
0x400246:	mov	eax, dword ptr [rbp - 0x38]
0x400249:	mov	esi, 5
0x40024e:	mov	edi, eax
0x400250:	call	0x500020
<Block for 0x400304, 2 bytes>
0x400304:	leave	
0x400305:	ret	
<Block for 0x4002ff, 5 bytes>
0x4002ff:	call	0x500050
<Block for 0x400255, 5 bytes>
0x400255:	cmp	eax, -1
0x400258:	je	0x4002bf
<Block for 0x4002bf, 3 bytes>
0x4002bf:	nop	
0x4002c0:	jmp	0x4002c3
<Block for 0x40025a, 20 bytes>
0x40025a:	mov	eax, dword ptr [rbp - 0x38]
0x40025d:	mov	edx, 0
0x400262:	mov	esi, 0
0x400267:	mov	edi, eax
0x400269:	call	0x500028
<Block for 0x40026e, 9 bytes>
0x40026e:	mov	dword ptr [rbp - 0x3c], eax
0x400271:	cmp	dword ptr [rbp - 0x3c], -1
0x400275:	je	0x4002c2
<Block for 0x400277, 24 bytes>
0x400277:	lea	rsi, [rbp - 0x16]
0x40027b:	mov	eax, dword ptr [rbp - 0x3c]
0x40027e:	mov	ecx, 0
0x400283:	mov	edx, 0xd
0x400288:	mov	edi, eax
0x40028a:	call	0x500030
<Block for 0x4002c2, 1 bytes>
0x4002c2:	nop	
<Block for 0x40028f, 9 bytes>
0x40028f:	mov	dword ptr [rbp - 0x34], eax
0x400292:	cmp	dword ptr [rbp - 0x34], -1
0x400296:	je	0x4002c3
<Block for 0x400298, 6 bytes>
0x400298:	cmp	dword ptr [rbp - 0x34], 0
0x40029c:	je	0x4002c3
<Block for 0x40029e, 22 bytes>
0x40029e:	mov	eax, dword ptr [rbp - 0x34]
0x4002a1:	cdqe	
0x4002a3:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002a8:	lea	rax, [rbp - 0x16]
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500038
<Block for 0x4002b4, 5 bytes>
0x4002b4:	mov	dword ptr [rbp - 0x40], eax
0x4002b7:	jmp	0x4002c3
