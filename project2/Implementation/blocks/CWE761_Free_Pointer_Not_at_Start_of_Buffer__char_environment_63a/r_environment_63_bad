<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	edi, 0x64
0x400020:	call	0x500000
<Block for 0x400025, 13 bytes>
0x400025:	mov	qword ptr [rbp - 0x20], rax
0x400029:	mov	rax, qword ptr [rbp - 0x20]
0x40002d:	test	rax, rax
0x400030:	jne	0x40003c
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0xffffffff
0x400037:	call	0x500008
<Block for 0x40003c, 19 bytes>
0x40003c:	mov	rax, qword ptr [rbp - 0x20]
0x400040:	mov	byte ptr [rax], 0
0x400043:	mov	rax, qword ptr [rbp - 0x20]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500010
<Block for 0x40004f, 16 bytes>
0x40004f:	mov	qword ptr [rbp - 0x18], rax
0x400053:	lea	rdi, [rip + 0x121]
0x40005a:	call	0x500018
<Block for 0x40005f, 11 bytes>
0x40005f:	mov	qword ptr [rbp - 0x10], rax
0x400063:	cmp	qword ptr [rbp - 0x10], 0
0x400068:	je	0x400090
<Block for 0x400090, 12 bytes>
0x400090:	lea	rax, [rbp - 0x20]
0x400094:	mov	rdi, rax
0x400097:	call	0x500028
<Block for 0x40006a, 38 bytes>
0x40006a:	mov	eax, 0x63
0x40006f:	sub	rax, qword ptr [rbp - 0x18]
0x400073:	mov	rdx, rax
0x400076:	mov	rcx, qword ptr [rbp - 0x20]
0x40007a:	mov	rax, qword ptr [rbp - 0x18]
0x40007e:	add	rcx, rax
0x400081:	mov	rax, qword ptr [rbp - 0x10]
0x400085:	mov	rsi, rax
0x400088:	mov	rdi, rcx
0x40008b:	call	0x500020
<Block for 0x40009c, 16 bytes>
0x40009c:	nop	
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	xor	rax, qword ptr fs:[0x28]
0x4000aa:	je	0x4000b1
<Block for 0x4000b1, 2 bytes>
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000ac, 5 bytes>
0x4000ac:	call	0x500030
