<Block for 0x4000e7, 53 bytes>
0x4000e7:	endbr64	
0x4000eb:	push	rbp
0x4000ec:	mov	rbp, rsp
0x4000ef:	add	rsp, -0x80
0x4000f3:	mov	qword ptr [rbp - 0x78], rdi
0x4000f7:	mov	rax, qword ptr fs:[0x28]
0x400100:	mov	qword ptr [rbp - 8], rax
0x400104:	xor	eax, eax
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	edx, 0x63
0x40010f:	mov	esi, 0x43
0x400114:	mov	rdi, rax
0x400117:	call	0x500000
<Block for 0x40011c, 28 bytes>
0x40011c:	mov	byte ptr [rbp - 0xd], 0
0x400120:	mov	rcx, qword ptr [rbp - 0x78]
0x400124:	lea	rax, [rbp - 0x70]
0x400128:	mov	edx, 0x64
0x40012d:	mov	rsi, rcx
0x400130:	mov	rdi, rax
0x400133:	call	0x500008
<Block for 0x400138, 16 bytes>
0x400138:	mov	byte ptr [rbp - 0xd], 0
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	rdi, rax
0x400143:	call	0x500010
<Block for 0x400148, 16 bytes>
0x400148:	nop	
0x400149:	mov	rax, qword ptr [rbp - 8]
0x40014d:	xor	rax, qword ptr fs:[0x28]
0x400156:	je	0x40015d
<Block for 0x40015d, 2 bytes>
0x40015d:	leave	
0x40015e:	ret	
<Block for 0x400158, 5 bytes>
0x400158:	call	0x500018
