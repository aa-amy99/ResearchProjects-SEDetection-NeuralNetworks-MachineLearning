<Block for 0x400078, 30 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x10
0x400084:	mov	qword ptr [rbp - 0x10], 0
0x40008c:	mov	edi, 0x64
0x400091:	call	0x500020
<Block for 0x400096, 11 bytes>
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	cmp	qword ptr [rbp - 8], 0
0x40009f:	jne	0x4000ab
<Block for 0x4000a1, 10 bytes>
0x4000a1:	mov	edi, 0xffffffff
0x4000a6:	call	0x500028
<Block for 0x4000ab, 22 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	mov	edx, 0x63
0x4000b4:	mov	esi, 0x41
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500000
<Block for 0x4000c1, 35 bytes>
0x4000c1:	mov	rax, qword ptr [rbp - 8]
0x4000c5:	add	rax, 0x63
0x4000c9:	mov	byte ptr [rax], 0
0x4000cc:	mov	rax, qword ptr [rbp - 8]
0x4000d0:	sub	rax, 8
0x4000d4:	mov	qword ptr [rbp - 0x10], rax
0x4000d8:	mov	rax, qword ptr [rbp - 0x10]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x400000
<Block for 0x4000e4, 3 bytes>
0x4000e4:	nop	
0x4000e5:	leave	
0x4000e6:	ret	
