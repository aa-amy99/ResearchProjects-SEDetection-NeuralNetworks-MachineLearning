<Block for 0x400155, 53 bytes>
0x400155:	endbr64	
0x400159:	push	rbp
0x40015a:	mov	rbp, rsp
0x40015d:	push	rbx
0x40015e:	sub	rsp, 0x88
0x400165:	mov	rax, qword ptr fs:[0x28]
0x40016e:	mov	qword ptr [rbp - 0x18], rax
0x400172:	xor	eax, eax
0x400174:	mov	qword ptr [rbp - 0x90], 0
0x40017f:	mov	eax, dword ptr [rip + 0x29f]
0x400185:	cmp	eax, 5
0x400188:	je	0x400198
<Block for 0x400198, 10 bytes>
0x400198:	mov	edi, 0x64
0x40019d:	call	0x500000
<Block for 0x40018a, 12 bytes>
0x40018a:	lea	rdi, [rip + 0x297]
0x400191:	call	0x500018
<Block for 0x4001a2, 17 bytes>
0x4001a2:	mov	qword ptr [rbp - 0x88], rax
0x4001a9:	cmp	qword ptr [rbp - 0x88], 0
0x4001b1:	jne	0x4001bd
<Block for 0x400196, 2 bytes>
0x400196:	jmp	0x4001f2
<Block for 0x4001b3, 10 bytes>
0x4001b3:	mov	edi, 0xffffffff
0x4001b8:	call	0x500008
<Block for 0x4001bd, 25 bytes>
0x4001bd:	mov	rax, qword ptr [rbp - 0x88]
0x4001c4:	mov	edx, 0x63
0x4001c9:	mov	esi, 0x41
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x500010
<Block for 0x4001f2, 22 bytes>
0x4001f2:	lea	rax, [rbp - 0x80]
0x4001f6:	mov	edx, 0x63
0x4001fb:	mov	esi, 0x43
0x400200:	mov	rdi, rax
0x400203:	call	0x500010
<Block for 0x4001d6, 50 bytes>
0x4001d6:	mov	rax, qword ptr [rbp - 0x88]
0x4001dd:	add	rax, 0x63
0x4001e1:	mov	byte ptr [rax], 0
0x4001e4:	mov	rax, qword ptr [rbp - 0x88]
0x4001eb:	mov	qword ptr [rbp - 0x90], rax
0x4001f2:	lea	rax, [rbp - 0x80]
0x4001f6:	mov	edx, 0x63
0x4001fb:	mov	esi, 0x43
0x400200:	mov	rdi, rax
0x400203:	call	0x500010
<Block for 0x400208, 141 bytes>
0x400208:	mov	byte ptr [rbp - 0x1d], 0
0x40020c:	mov	rax, qword ptr [rbp - 0x90]
0x400213:	mov	rcx, qword ptr [rbp - 0x80]
0x400217:	mov	rbx, qword ptr [rbp - 0x78]
0x40021b:	mov	qword ptr [rax], rcx
0x40021e:	mov	qword ptr [rax + 8], rbx
0x400222:	mov	rcx, qword ptr [rbp - 0x70]
0x400226:	mov	rbx, qword ptr [rbp - 0x68]
0x40022a:	mov	qword ptr [rax + 0x10], rcx
0x40022e:	mov	qword ptr [rax + 0x18], rbx
0x400232:	mov	rcx, qword ptr [rbp - 0x60]
0x400236:	mov	rbx, qword ptr [rbp - 0x58]
0x40023a:	mov	qword ptr [rax + 0x20], rcx
0x40023e:	mov	qword ptr [rax + 0x28], rbx
0x400242:	mov	rcx, qword ptr [rbp - 0x50]
0x400246:	mov	rbx, qword ptr [rbp - 0x48]
0x40024a:	mov	qword ptr [rax + 0x30], rcx
0x40024e:	mov	qword ptr [rax + 0x38], rbx
0x400252:	mov	rcx, qword ptr [rbp - 0x40]
0x400256:	mov	rbx, qword ptr [rbp - 0x38]
0x40025a:	mov	qword ptr [rax + 0x40], rcx
0x40025e:	mov	qword ptr [rax + 0x48], rbx
0x400262:	mov	rcx, qword ptr [rbp - 0x30]
0x400266:	mov	rbx, qword ptr [rbp - 0x28]
0x40026a:	mov	qword ptr [rax + 0x50], rcx
0x40026e:	mov	qword ptr [rax + 0x58], rbx
0x400272:	mov	edx, dword ptr [rbp - 0x20]
0x400275:	mov	dword ptr [rax + 0x60], edx
0x400278:	mov	rax, qword ptr [rbp - 0x90]
0x40027f:	add	rax, 0x63
0x400283:	mov	byte ptr [rax], 0
0x400286:	mov	rax, qword ptr [rbp - 0x90]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500018
<Block for 0x400295, 16 bytes>
0x400295:	nop	
0x400296:	mov	rax, qword ptr [rbp - 0x18]
0x40029a:	xor	rax, qword ptr fs:[0x28]
0x4002a3:	je	0x4002aa
<Block for 0x4002aa, 10 bytes>
0x4002aa:	add	rsp, 0x88
0x4002b1:	pop	rbx
0x4002b2:	pop	rbp
0x4002b3:	ret	
<Block for 0x4002a5, 5 bytes>
0x4002a5:	call	0x500020
