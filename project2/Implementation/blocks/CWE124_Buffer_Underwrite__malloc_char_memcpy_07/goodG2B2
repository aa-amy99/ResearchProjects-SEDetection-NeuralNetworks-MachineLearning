<Block for 0x4002b4, 53 bytes>
0x4002b4:	endbr64	
0x4002b8:	push	rbp
0x4002b9:	mov	rbp, rsp
0x4002bc:	push	rbx
0x4002bd:	sub	rsp, 0x88
0x4002c4:	mov	rax, qword ptr fs:[0x28]
0x4002cd:	mov	qword ptr [rbp - 0x18], rax
0x4002d1:	xor	eax, eax
0x4002d3:	mov	qword ptr [rbp - 0x90], 0
0x4002de:	mov	eax, dword ptr [rip + 0x140]
0x4002e4:	cmp	eax, 5
0x4002e7:	jne	0x400343
<Block for 0x4002e9, 10 bytes>
0x4002e9:	mov	edi, 0x64
0x4002ee:	call	0x500000
<Block for 0x400343, 22 bytes>
0x400343:	lea	rax, [rbp - 0x80]
0x400347:	mov	edx, 0x63
0x40034c:	mov	esi, 0x43
0x400351:	mov	rdi, rax
0x400354:	call	0x500010
<Block for 0x4002f3, 17 bytes>
0x4002f3:	mov	qword ptr [rbp - 0x88], rax
0x4002fa:	cmp	qword ptr [rbp - 0x88], 0
0x400302:	jne	0x40030e
<Block for 0x400359, 141 bytes>
0x400359:	mov	byte ptr [rbp - 0x1d], 0
0x40035d:	mov	rax, qword ptr [rbp - 0x90]
0x400364:	mov	rcx, qword ptr [rbp - 0x80]
0x400368:	mov	rbx, qword ptr [rbp - 0x78]
0x40036c:	mov	qword ptr [rax], rcx
0x40036f:	mov	qword ptr [rax + 8], rbx
0x400373:	mov	rcx, qword ptr [rbp - 0x70]
0x400377:	mov	rbx, qword ptr [rbp - 0x68]
0x40037b:	mov	qword ptr [rax + 0x10], rcx
0x40037f:	mov	qword ptr [rax + 0x18], rbx
0x400383:	mov	rcx, qword ptr [rbp - 0x60]
0x400387:	mov	rbx, qword ptr [rbp - 0x58]
0x40038b:	mov	qword ptr [rax + 0x20], rcx
0x40038f:	mov	qword ptr [rax + 0x28], rbx
0x400393:	mov	rcx, qword ptr [rbp - 0x50]
0x400397:	mov	rbx, qword ptr [rbp - 0x48]
0x40039b:	mov	qword ptr [rax + 0x30], rcx
0x40039f:	mov	qword ptr [rax + 0x38], rbx
0x4003a3:	mov	rcx, qword ptr [rbp - 0x40]
0x4003a7:	mov	rbx, qword ptr [rbp - 0x38]
0x4003ab:	mov	qword ptr [rax + 0x40], rcx
0x4003af:	mov	qword ptr [rax + 0x48], rbx
0x4003b3:	mov	rcx, qword ptr [rbp - 0x30]
0x4003b7:	mov	rbx, qword ptr [rbp - 0x28]
0x4003bb:	mov	qword ptr [rax + 0x50], rcx
0x4003bf:	mov	qword ptr [rax + 0x58], rbx
0x4003c3:	mov	edx, dword ptr [rbp - 0x20]
0x4003c6:	mov	dword ptr [rax + 0x60], edx
0x4003c9:	mov	rax, qword ptr [rbp - 0x90]
0x4003d0:	add	rax, 0x63
0x4003d4:	mov	byte ptr [rax], 0
0x4003d7:	mov	rax, qword ptr [rbp - 0x90]
0x4003de:	mov	rdi, rax
0x4003e1:	call	0x500018
<Block for 0x400304, 10 bytes>
0x400304:	mov	edi, 0xffffffff
0x400309:	call	0x500008
<Block for 0x40030e, 25 bytes>
0x40030e:	mov	rax, qword ptr [rbp - 0x88]
0x400315:	mov	edx, 0x63
0x40031a:	mov	esi, 0x41
0x40031f:	mov	rdi, rax
0x400322:	call	0x500010
<Block for 0x4003e6, 16 bytes>
0x4003e6:	nop	
0x4003e7:	mov	rax, qword ptr [rbp - 0x18]
0x4003eb:	xor	rax, qword ptr fs:[0x28]
0x4003f4:	je	0x4003fb
<Block for 0x400327, 50 bytes>
0x400327:	mov	rax, qword ptr [rbp - 0x88]
0x40032e:	add	rax, 0x63
0x400332:	mov	byte ptr [rax], 0
0x400335:	mov	rax, qword ptr [rbp - 0x88]
0x40033c:	mov	qword ptr [rbp - 0x90], rax
0x400343:	lea	rax, [rbp - 0x80]
0x400347:	mov	edx, 0x63
0x40034c:	mov	esi, 0x43
0x400351:	mov	rdi, rax
0x400354:	call	0x500010
<Block for 0x4003fb, 10 bytes>
0x4003fb:	add	rsp, 0x88
0x400402:	pop	rbx
0x400403:	pop	rbp
0x400404:	ret	
<Block for 0x4003f6, 5 bytes>
0x4003f6:	call	0x500020
