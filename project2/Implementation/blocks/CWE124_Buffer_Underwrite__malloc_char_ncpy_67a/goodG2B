<Block for 0x400077, 30 bytes>
0x400077:	endbr64	
0x40007b:	push	rbp
0x40007c:	mov	rbp, rsp
0x40007f:	sub	rsp, 0x20
0x400083:	mov	qword ptr [rbp - 0x10], 0
0x40008b:	mov	edi, 0x64
0x400090:	call	0x500000
<Block for 0x400095, 11 bytes>
0x400095:	mov	qword ptr [rbp - 8], rax
0x400099:	cmp	qword ptr [rbp - 8], 0
0x40009e:	jne	0x4000aa
<Block for 0x4000a0, 10 bytes>
0x4000a0:	mov	edi, 0xffffffff
0x4000a5:	call	0x500008
<Block for 0x4000aa, 22 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	mov	edx, 0x63
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500010
<Block for 0x4000c0, 39 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	add	rax, 0x63
0x4000c8:	mov	byte ptr [rax], 0
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	mov	qword ptr [rbp - 0x10], rax
0x4000d3:	mov	rax, qword ptr [rbp - 0x10]
0x4000d7:	mov	qword ptr [rbp - 0x18], rax
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500020
<Block for 0x4000e7, 3 bytes>
0x4000e7:	nop	
0x4000e8:	leave	
0x4000e9:	ret	
