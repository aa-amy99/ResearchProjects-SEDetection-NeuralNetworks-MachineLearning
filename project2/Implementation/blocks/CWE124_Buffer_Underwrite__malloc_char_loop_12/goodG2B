<Block for 0x400164, 51 bytes>
0x400164:	endbr64	
0x400168:	push	rbp
0x400169:	mov	rbp, rsp
0x40016c:	sub	rsp, 0x90
0x400173:	mov	rax, qword ptr fs:[0x28]
0x40017c:	mov	qword ptr [rbp - 8], rax
0x400180:	xor	eax, eax
0x400182:	mov	qword ptr [rbp - 0x90], 0
0x40018d:	mov	eax, 0
0x400192:	call	0x500000
<Block for 0x400197, 4 bytes>
0x400197:	test	eax, eax
0x400199:	je	0x4001e8
<Block for 0x4001e8, 10 bytes>
0x4001e8:	mov	edi, 0x64
0x4001ed:	call	0x500008
<Block for 0x40019b, 10 bytes>
0x40019b:	mov	edi, 0x64
0x4001a0:	call	0x500008
<Block for 0x4001f2, 11 bytes>
0x4001f2:	mov	qword ptr [rbp - 0x80], rax
0x4001f6:	cmp	qword ptr [rbp - 0x80], 0
0x4001fb:	jne	0x400207
<Block for 0x4001a5, 11 bytes>
0x4001a5:	mov	qword ptr [rbp - 0x78], rax
0x4001a9:	cmp	qword ptr [rbp - 0x78], 0
0x4001ae:	jne	0x4001ba
<Block for 0x4001fd, 10 bytes>
0x4001fd:	mov	edi, 0xffffffff
0x400202:	call	0x500010
<Block for 0x400207, 22 bytes>
0x400207:	mov	rax, qword ptr [rbp - 0x80]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500018
<Block for 0x4001b0, 10 bytes>
0x4001b0:	mov	edi, 0xffffffff
0x4001b5:	call	0x500010
<Block for 0x4001ba, 22 bytes>
0x4001ba:	mov	rax, qword ptr [rbp - 0x78]
0x4001be:	mov	edx, 0x63
0x4001c3:	mov	esi, 0x41
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500018
<Block for 0x40021d, 44 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x80]
0x400221:	add	rax, 0x63
0x400225:	mov	byte ptr [rax], 0
0x400228:	mov	rax, qword ptr [rbp - 0x80]
0x40022c:	mov	qword ptr [rbp - 0x90], rax
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500018
<Block for 0x4001d0, 24 bytes>
0x4001d0:	mov	rax, qword ptr [rbp - 0x78]
0x4001d4:	add	rax, 0x63
0x4001d8:	mov	byte ptr [rax], 0
0x4001db:	mov	rax, qword ptr [rbp - 0x78]
0x4001df:	mov	qword ptr [rbp - 0x90], rax
0x4001e6:	jmp	0x400233
<Block for 0x400249, 17 bytes>
0x400249:	mov	byte ptr [rbp - 0xd], 0
0x40024d:	mov	qword ptr [rbp - 0x88], 0
0x400258:	jmp	0x400286
<Block for 0x400233, 22 bytes>
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500018
<Block for 0x400286, 10 bytes>
0x400286:	cmp	qword ptr [rbp - 0x88], 0x63
0x40028e:	jbe	0x40025a
<Block for 0x40025a, 54 bytes>
0x40025a:	mov	rdx, qword ptr [rbp - 0x90]
0x400261:	mov	rax, qword ptr [rbp - 0x88]
0x400268:	add	rdx, rax
0x40026b:	lea	rcx, [rbp - 0x70]
0x40026f:	mov	rax, qword ptr [rbp - 0x88]
0x400276:	add	rax, rcx
0x400279:	movzx	eax, byte ptr [rax]
0x40027c:	mov	byte ptr [rdx], al
0x40027e:	add	qword ptr [rbp - 0x88], 1
0x400286:	cmp	qword ptr [rbp - 0x88], 0x63
0x40028e:	jbe	0x40025a
<Block for 0x400290, 29 bytes>
0x400290:	mov	rax, qword ptr [rbp - 0x90]
0x400297:	add	rax, 0x63
0x40029b:	mov	byte ptr [rax], 0
0x40029e:	mov	rax, qword ptr [rbp - 0x90]
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500020
<Block for 0x4002ad, 16 bytes>
0x4002ad:	nop	
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	xor	rax, qword ptr fs:[0x28]
0x4002bb:	je	0x4002c2
<Block for 0x4002c2, 2 bytes>
0x4002c2:	leave	
0x4002c3:	ret	
<Block for 0x4002bd, 5 bytes>
0x4002bd:	call	0x500028
