<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x90], 0
0x400029:	mov	eax, 0
0x40002e:	call	0x500000
<Block for 0x400033, 4 bytes>
0x400033:	test	eax, eax
0x400035:	je	0x400088
<Block for 0x400088, 10 bytes>
0x400088:	mov	edi, 0x64
0x40008d:	call	0x500008
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500008
<Block for 0x400092, 11 bytes>
0x400092:	mov	qword ptr [rbp - 0x80], rax
0x400096:	cmp	qword ptr [rbp - 0x80], 0
0x40009b:	jne	0x4000a7
<Block for 0x400041, 11 bytes>
0x400041:	mov	qword ptr [rbp - 0x78], rax
0x400045:	cmp	qword ptr [rbp - 0x78], 0
0x40004a:	jne	0x400056
<Block for 0x40009d, 10 bytes>
0x40009d:	mov	edi, 0xffffffff
0x4000a2:	call	0x500010
<Block for 0x4000a7, 22 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x80]
0x4000ab:	mov	edx, 0x63
0x4000b0:	mov	esi, 0x41
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x40004c, 10 bytes>
0x40004c:	mov	edi, 0xffffffff
0x400051:	call	0x500010
<Block for 0x400056, 22 bytes>
0x400056:	mov	rax, qword ptr [rbp - 0x78]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x41
0x400064:	mov	rdi, rax
0x400067:	call	0x500018
<Block for 0x4000bd, 44 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x80]
0x4000c1:	add	rax, 0x63
0x4000c5:	mov	byte ptr [rax], 0
0x4000c8:	mov	rax, qword ptr [rbp - 0x80]
0x4000cc:	mov	qword ptr [rbp - 0x90], rax
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	edx, 0x63
0x4000dc:	mov	esi, 0x43
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x40006c, 28 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 0x78]
0x400070:	add	rax, 0x63
0x400074:	mov	byte ptr [rax], 0
0x400077:	mov	rax, qword ptr [rbp - 0x78]
0x40007b:	sub	rax, 8
0x40007f:	mov	qword ptr [rbp - 0x90], rax
0x400086:	jmp	0x4000d3
<Block for 0x4000e9, 17 bytes>
0x4000e9:	mov	byte ptr [rbp - 0xd], 0
0x4000ed:	mov	qword ptr [rbp - 0x88], 0
0x4000f8:	jmp	0x400126
<Block for 0x4000d3, 22 bytes>
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	edx, 0x63
0x4000dc:	mov	esi, 0x43
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x400126, 10 bytes>
0x400126:	cmp	qword ptr [rbp - 0x88], 0x63
0x40012e:	jbe	0x4000fa
<Block for 0x4000fa, 54 bytes>
0x4000fa:	mov	rdx, qword ptr [rbp - 0x90]
0x400101:	mov	rax, qword ptr [rbp - 0x88]
0x400108:	add	rdx, rax
0x40010b:	lea	rcx, [rbp - 0x70]
0x40010f:	mov	rax, qword ptr [rbp - 0x88]
0x400116:	add	rax, rcx
0x400119:	movzx	eax, byte ptr [rax]
0x40011c:	mov	byte ptr [rdx], al
0x40011e:	add	qword ptr [rbp - 0x88], 1
0x400126:	cmp	qword ptr [rbp - 0x88], 0x63
0x40012e:	jbe	0x4000fa
<Block for 0x400130, 29 bytes>
0x400130:	mov	rax, qword ptr [rbp - 0x90]
0x400137:	add	rax, 0x63
0x40013b:	mov	byte ptr [rax], 0
0x40013e:	mov	rax, qword ptr [rbp - 0x90]
0x400145:	mov	rdi, rax
0x400148:	call	0x500020
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500028
