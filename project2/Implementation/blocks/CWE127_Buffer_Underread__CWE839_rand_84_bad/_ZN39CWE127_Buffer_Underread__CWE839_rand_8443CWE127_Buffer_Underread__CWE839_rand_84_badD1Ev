<Block for 0x400076, 82 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x40
0x400082:	mov	qword ptr [rbp - 0x38], rdi
0x400086:	mov	rax, qword ptr fs:[0x28]
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	xor	eax, eax
0x400095:	mov	qword ptr [rbp - 0x30], 0
0x40009d:	mov	qword ptr [rbp - 0x28], 0
0x4000a5:	mov	qword ptr [rbp - 0x20], 0
0x4000ad:	mov	qword ptr [rbp - 0x18], 0
0x4000b5:	mov	qword ptr [rbp - 0x10], 0
0x4000bd:	mov	rax, qword ptr [rbp - 0x38]
0x4000c1:	mov	eax, dword ptr [rax]
0x4000c3:	cmp	eax, 9
0x4000c6:	jg	0x4000dd
<Block for 0x4000c8, 19 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 0x38]
0x4000cc:	mov	eax, dword ptr [rax]
0x4000ce:	cdqe	
0x4000d0:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000d4:	mov	edi, eax
0x4000d6:	call	0x500008
<Block for 0x4000dd, 12 bytes>
0x4000dd:	lea	rdi, [rip + 0x1c]
0x4000e4:	call	0x500010
<Block for 0x4000db, 2 bytes>
0x4000db:	jmp	0x4000e9
<Block for 0x4000e9, 16 bytes>
0x4000e9:	nop	
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	xor	rax, qword ptr fs:[0x28]
0x4000f7:	je	0x4000fe
<Block for 0x4000fe, 2 bytes>
0x4000fe:	leave	
0x4000ff:	ret	
<Block for 0x4000f9, 5 bytes>
0x4000f9:	call	0x500018
