<Block for 0x4002e3, 59 bytes>
0x4002e3:	endbr64	
0x4002e7:	push	rbp
0x4002e8:	mov	rbp, rsp
0x4002eb:	sub	rsp, 0x30
0x4002ef:	mov	qword ptr [rbp - 0x28], rdi
0x4002f3:	mov	rax, qword ptr fs:[0x28]
0x4002fc:	mov	qword ptr [rbp - 8], rax
0x400300:	xor	eax, eax
0x400302:	lea	rdx, [rbp - 0x14]
0x400306:	mov	rax, qword ptr [rbp - 0x28]
0x40030a:	lea	rsi, [rip + 0x197]
0x400311:	mov	rdi, rax
0x400314:	mov	eax, 0
0x400319:	call	0x500000
<Block for 0x40031e, 5 bytes>
0x40031e:	cmp	eax, 1
0x400321:	jne	0x400357
<Block for 0x400323, 10 bytes>
0x400323:	mov	eax, dword ptr [rbp - 0x14]
0x400326:	cmp	eax, 0x270f
0x40032b:	jg	0x400357
<Block for 0x400357, 16 bytes>
0x400357:	nop	
0x400358:	mov	rax, qword ptr [rbp - 8]
0x40035c:	xor	rax, qword ptr fs:[0x28]
0x400365:	je	0x40036c
<Block for 0x40032d, 16 bytes>
0x40032d:	mov	dword ptr [rbp - 0xc], 0
0x400334:	mov	dword ptr [rbp - 0x10], 0
0x40033b:	jmp	0x400345
<Block for 0x40036c, 2 bytes>
0x40036c:	leave	
0x40036d:	ret	
<Block for 0x400367, 5 bytes>
0x400367:	call	0x500010
<Block for 0x400345, 8 bytes>
0x400345:	mov	eax, dword ptr [rbp - 0x14]
0x400348:	cmp	dword ptr [rbp - 0x10], eax
0x40034b:	jl	0x40033d
<Block for 0x40033d, 16 bytes>
0x40033d:	add	dword ptr [rbp - 0xc], 1
0x400341:	add	dword ptr [rbp - 0x10], 1
0x400345:	mov	eax, dword ptr [rbp - 0x14]
0x400348:	cmp	dword ptr [rbp - 0x10], eax
0x40034b:	jl	0x40033d
<Block for 0x40034d, 10 bytes>
0x40034d:	mov	eax, dword ptr [rbp - 0xc]
0x400350:	mov	edi, eax
0x400352:	call	0x500008
