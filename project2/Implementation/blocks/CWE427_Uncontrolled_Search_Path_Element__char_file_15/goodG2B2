<Block for 0x400215, 82 bytes>
0x400215:	endbr64	
0x400219:	push	rbp
0x40021a:	mov	rbp, rsp
0x40021d:	sub	rsp, 0x120
0x400224:	mov	rax, qword ptr fs:[0x28]
0x40022d:	mov	qword ptr [rbp - 8], rax
0x400231:	xor	eax, eax
0x400233:	movabs	rax, 0x3d48544150
0x40023d:	mov	edx, 0
0x400242:	mov	qword ptr [rbp - 0x110], rax
0x400249:	mov	qword ptr [rbp - 0x108], rdx
0x400250:	lea	rdx, [rbp - 0x100]
0x400257:	mov	eax, 0
0x40025c:	mov	ecx, 0x1d
0x400261:	mov	rdi, rdx
0x400264:	rep stosq	qword ptr [rdi], rax
<Block for 0x400267, 51 bytes>
0x400267:	mov	rdx, rdi
0x40026a:	mov	word ptr [rdx], ax
0x40026d:	add	rdx, 2
0x400271:	lea	rax, [rbp - 0x110]
0x400278:	mov	qword ptr [rbp - 0x118], rax
0x40027f:	mov	rax, qword ptr [rbp - 0x118]
0x400286:	mov	rcx, -1
0x40028d:	mov	rdx, rax
0x400290:	mov	eax, 0
0x400295:	mov	rdi, rdx
0x400298:	repne scasb	al, byte ptr [rdi]
<Block for 0x400264, 3 bytes>
0x400264:	rep stosq	qword ptr [rdi], rax
<Block for 0x40029a, 46 bytes>
0x40029a:	mov	rax, rcx
0x40029d:	not	rax
0x4002a0:	lea	rdx, [rax - 1]
0x4002a4:	mov	rax, qword ptr [rbp - 0x118]
0x4002ab:	add	rax, rdx
0x4002ae:	mov	dword ptr [rax], 0x6e69622f
0x4002b4:	mov	byte ptr [rax + 4], 0
0x4002b8:	nop	
0x4002b9:	mov	rax, qword ptr [rbp - 0x118]
0x4002c0:	mov	rdi, rax
0x4002c3:	call	0x500028
<Block for 0x400298, 2 bytes>
0x400298:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002c8, 16 bytes>
0x4002c8:	nop	
0x4002c9:	mov	rax, qword ptr [rbp - 8]
0x4002cd:	xor	rax, qword ptr fs:[0x28]
0x4002d6:	je	0x4002dd
<Block for 0x4002dd, 2 bytes>
0x4002dd:	leave	
0x4002de:	ret	
<Block for 0x4002d8, 5 bytes>
0x4002d8:	call	0x500030
