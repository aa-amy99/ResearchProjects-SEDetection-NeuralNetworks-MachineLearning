<Block for 0x400173, 84 bytes>
0x400173:	endbr64	
0x400177:	push	rbp
0x400178:	mov	rbp, rsp
0x40017b:	sub	rsp, 0xa0
0x400182:	mov	rax, qword ptr fs:[0x28]
0x40018b:	mov	qword ptr [rbp - 8], rax
0x40018f:	xor	eax, eax
0x400191:	mov	eax, 0x10
0x400196:	sub	rax, 1
0x40019a:	add	rax, 0x6c
0x40019e:	mov	esi, 0x10
0x4001a3:	mov	edx, 0
0x4001a8:	div	rsi
0x4001ab:	imul	rax, rax, 0x10
0x4001af:	mov	rdx, rax
0x4001b2:	and	rdx, 0xfffffffffffff000
0x4001b9:	mov	rcx, rsp
0x4001bc:	sub	rcx, rdx
0x4001bf:	mov	rdx, rcx
0x4001c2:	cmp	rsp, rdx
0x4001c5:	je	0x4001d9
<Block for 0x4001d9, 26 bytes>
0x4001d9:	mov	rdx, rax
0x4001dc:	and	edx, 0xfff
0x4001e2:	sub	rsp, rdx
0x4001e5:	mov	rdx, rax
0x4001e8:	and	edx, 0xfff
0x4001ee:	test	rdx, rdx
0x4001f1:	je	0x400203
<Block for 0x4001c7, 18 bytes>
0x4001c7:	sub	rsp, 0x1000
0x4001ce:	or	qword ptr [rsp + 0xff8], 0
0x4001d7:	jmp	0x4001c2
<Block for 0x400203, 47 bytes>
0x400203:	mov	rax, rsp
0x400206:	add	rax, 0xf
0x40020a:	shr	rax, 4
0x40020e:	shl	rax, 4
0x400212:	mov	qword ptr [rbp - 0x88], rax
0x400219:	mov	rax, qword ptr [rbp - 0x88]
0x400220:	mov	edx, 0x63
0x400225:	mov	esi, 0x41
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500000
<Block for 0x4001f3, 63 bytes>
0x4001f3:	and	eax, 0xfff
0x4001f8:	sub	rax, 8
0x4001fc:	add	rax, rsp
0x4001ff:	or	qword ptr [rax], 0
0x400203:	mov	rax, rsp
0x400206:	add	rax, 0xf
0x40020a:	shr	rax, 4
0x40020e:	shl	rax, 4
0x400212:	mov	qword ptr [rbp - 0x88], rax
0x400219:	mov	rax, qword ptr [rbp - 0x88]
0x400220:	mov	edx, 0x63
0x400225:	mov	esi, 0x41
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500000
<Block for 0x4001c2, 5 bytes>
0x4001c2:	cmp	rsp, rdx
0x4001c5:	je	0x4001d9
<Block for 0x400232, 69 bytes>
0x400232:	mov	rax, qword ptr [rbp - 0x88]
0x400239:	add	rax, 0x63
0x40023d:	mov	byte ptr [rax], 0
0x400240:	mov	rax, qword ptr [rbp - 0x88]
0x400247:	mov	qword ptr [rbp - 0x80], rax
0x40024b:	mov	rax, qword ptr [rbp - 0x80]
0x40024f:	mov	qword ptr [rbp - 0x98], rax
0x400256:	mov	rax, qword ptr [rbp - 0x98]
0x40025d:	mov	qword ptr [rbp - 0x78], rax
0x400261:	lea	rax, [rbp - 0x70]
0x400265:	mov	edx, 0x63
0x40026a:	mov	esi, 0x43
0x40026f:	mov	rdi, rax
0x400272:	call	0x500000
<Block for 0x400277, 17 bytes>
0x400277:	mov	byte ptr [rbp - 0xd], 0
0x40027b:	mov	qword ptr [rbp - 0x90], 0
0x400286:	jmp	0x4002b1
<Block for 0x4002b1, 10 bytes>
0x4002b1:	cmp	qword ptr [rbp - 0x90], 0x63
0x4002b9:	jbe	0x400288
<Block for 0x400288, 51 bytes>
0x400288:	mov	rdx, qword ptr [rbp - 0x78]
0x40028c:	mov	rax, qword ptr [rbp - 0x90]
0x400293:	add	rax, rdx
0x400296:	movzx	eax, byte ptr [rax]
0x400299:	lea	rcx, [rbp - 0x70]
0x40029d:	mov	rdx, qword ptr [rbp - 0x90]
0x4002a4:	add	rdx, rcx
0x4002a7:	mov	byte ptr [rdx], al
0x4002a9:	add	qword ptr [rbp - 0x90], 1
0x4002b1:	cmp	qword ptr [rbp - 0x90], 0x63
0x4002b9:	jbe	0x400288
<Block for 0x4002bb, 16 bytes>
0x4002bb:	mov	byte ptr [rbp - 0xd], 0
0x4002bf:	lea	rax, [rbp - 0x70]
0x4002c3:	mov	rdi, rax
0x4002c6:	call	0x500008
<Block for 0x4002cb, 16 bytes>
0x4002cb:	nop	
0x4002cc:	mov	rax, qword ptr [rbp - 8]
0x4002d0:	xor	rax, qword ptr fs:[0x28]
0x4002d9:	je	0x4002e0
<Block for 0x4002e0, 2 bytes>
0x4002e0:	leave	
0x4002e1:	ret	
<Block for 0x4002db, 5 bytes>
0x4002db:	call	0x500010
