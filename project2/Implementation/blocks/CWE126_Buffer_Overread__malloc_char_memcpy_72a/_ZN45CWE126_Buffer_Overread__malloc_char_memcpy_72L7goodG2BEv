<Block for 0x4001b7, 40 bytes>
0x4001b7:	endbr64	
0x4001bb:	push	rbp
0x4001bc:	mov	rbp, rsp
0x4001bf:	push	rbx
0x4001c0:	sub	rsp, 0x58
0x4001c4:	mov	rax, qword ptr fs:[0x28]
0x4001cd:	mov	qword ptr [rbp - 0x18], rax
0x4001d1:	xor	eax, eax
0x4001d3:	lea	rax, [rbp - 0x50]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x4003ec
<Block for 0x4001df, 18 bytes>
0x4001df:	mov	qword ptr [rbp - 0x60], 0
0x4001e7:	mov	edi, 0x64
0x4001ec:	call	0x500000
<Block for 0x4001f1, 13 bytes>
0x4001f1:	mov	qword ptr [rbp - 0x60], rax
0x4001f5:	mov	rax, qword ptr [rbp - 0x60]
0x4001f9:	test	rax, rax
0x4001fc:	jne	0x400208
<Block for 0x4001fe, 10 bytes>
0x4001fe:	mov	edi, 0xffffffff
0x400203:	call	0x500008
<Block for 0x400208, 22 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0x60]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x41
0x400216:	mov	rdi, rax
0x400219:	call	0x500010
<Block for 0x40021e, 23 bytes>
0x40021e:	mov	rax, qword ptr [rbp - 0x60]
0x400222:	add	rax, 0x63
0x400226:	mov	byte ptr [rax], 0
0x400229:	lea	rax, [rbp - 0x50]
0x40022d:	mov	rdi, rax
0x400230:	call	0x40057e
<Block for 0x400235, 23 bytes>
0x400235:	mov	qword ptr [rbp - 0x58], rax
0x400239:	lea	rdx, [rbp - 0x58]
0x40023d:	lea	rax, [rbp - 0x30]
0x400241:	mov	rsi, rdx
0x400244:	mov	rdi, rax
0x400247:	call	0x4005ce
<Block for 0x40024c, 28 bytes>
0x40024c:	lea	rdx, [rbp - 0x60]
0x400250:	mov	rsi, qword ptr [rbp - 0x30]
0x400254:	lea	rax, [rbp - 0x50]
0x400258:	mov	rcx, rdx
0x40025b:	mov	edx, 1
0x400260:	mov	rdi, rax
0x400263:	call	0x4005fc
<Block for 0x400268, 12 bytes>
0x400268:	lea	rax, [rbp - 0x50]
0x40026c:	mov	rdi, rax
0x40026f:	call	0x40057e
<Block for 0x400274, 23 bytes>
0x400274:	mov	qword ptr [rbp - 0x58], rax
0x400278:	lea	rdx, [rbp - 0x58]
0x40027c:	lea	rax, [rbp - 0x30]
0x400280:	mov	rsi, rdx
0x400283:	mov	rdi, rax
0x400286:	call	0x4005ce
<Block for 0x40028b, 28 bytes>
0x40028b:	lea	rdx, [rbp - 0x60]
0x40028f:	mov	rsi, qword ptr [rbp - 0x30]
0x400293:	lea	rax, [rbp - 0x50]
0x400297:	mov	rcx, rdx
0x40029a:	mov	edx, 1
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x4005fc
<Block for 0x4002a7, 12 bytes>
0x4002a7:	lea	rax, [rbp - 0x50]
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x40057e
<Block for 0x4002b3, 23 bytes>
0x4002b3:	mov	qword ptr [rbp - 0x58], rax
0x4002b7:	lea	rdx, [rbp - 0x58]
0x4002bb:	lea	rax, [rbp - 0x30]
0x4002bf:	mov	rsi, rdx
0x4002c2:	mov	rdi, rax
0x4002c5:	call	0x4005ce
<Block for 0x4002ca, 28 bytes>
0x4002ca:	lea	rdx, [rbp - 0x60]
0x4002ce:	mov	rsi, qword ptr [rbp - 0x30]
0x4002d2:	lea	rax, [rbp - 0x50]
0x4002d6:	mov	rcx, rdx
0x4002d9:	mov	edx, 1
0x4002de:	mov	rdi, rax
0x4002e1:	call	0x4005fc
<Block for 0x4002e6, 19 bytes>
0x4002e6:	lea	rdx, [rbp - 0x50]
0x4002ea:	lea	rax, [rbp - 0x30]
0x4002ee:	mov	rsi, rdx
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x4006c2
<Block for 0x4002f9, 12 bytes>
0x4002f9:	lea	rax, [rbp - 0x30]
0x4002fd:	mov	rdi, rax
0x400300:	call	0x500030
<Block for 0x400305, 12 bytes>
0x400305:	lea	rax, [rbp - 0x30]
0x400309:	mov	rdi, rax
0x40030c:	call	0x400536
<Block for 0x400311, 12 bytes>
0x400311:	lea	rax, [rbp - 0x50]
0x400315:	mov	rdi, rax
0x400318:	call	0x400536
<Block for 0x40031d, 16 bytes>
0x40031d:	nop	
0x40031e:	mov	rax, qword ptr [rbp - 0x18]
0x400322:	xor	rax, qword ptr fs:[0x28]
0x40032b:	je	0x400367
<Block for 0x400367, 7 bytes>
0x400367:	add	rsp, 0x58
0x40036b:	pop	rbx
0x40036c:	pop	rbp
0x40036d:	ret	
<Block for 0x40032d, 2 bytes>
0x40032d:	jmp	0x400362
<Block for 0x400362, 5 bytes>
0x400362:	call	0x500028
