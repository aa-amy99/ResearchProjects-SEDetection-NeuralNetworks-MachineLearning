<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x98], 0
0x40002a:	mov	edi, 0x64
0x40002f:	call	0x500000
<Block for 0x400034, 17 bytes>
0x400034:	mov	qword ptr [rbp - 0x90], rax
0x40003b:	cmp	qword ptr [rbp - 0x90], 0
0x400043:	jne	0x40004f
<Block for 0x400045, 10 bytes>
0x400045:	mov	edi, 0xffffffff
0x40004a:	call	0x500008
<Block for 0x40004f, 25 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 0x90]
0x400056:	mov	edx, 0x63
0x40005b:	mov	esi, 0x41
0x400060:	mov	rdi, rax
0x400063:	call	0x500010
<Block for 0x400068, 82 bytes>
0x400068:	mov	rax, qword ptr [rbp - 0x90]
0x40006f:	add	rax, 0x63
0x400073:	mov	byte ptr [rax], 0
0x400076:	mov	rax, qword ptr [rbp - 0x90]
0x40007d:	sub	rax, 8
0x400081:	mov	qword ptr [rbp - 0x98], rax
0x400088:	mov	rax, qword ptr [rbp - 0x98]
0x40008f:	mov	qword ptr [rbp - 0xa0], rax
0x400096:	mov	rax, qword ptr [rbp - 0xa0]
0x40009d:	mov	qword ptr [rbp - 0x88], rax
0x4000a4:	lea	rax, [rbp - 0x80]
0x4000a8:	mov	edx, 0x63
0x4000ad:	mov	esi, 0x43
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500010
<Block for 0x4000ba, 128 bytes>
0x4000ba:	mov	byte ptr [rbp - 0x1d], 0
0x4000be:	mov	rax, qword ptr [rbp - 0x88]
0x4000c5:	mov	rcx, qword ptr [rax]
0x4000c8:	mov	rbx, qword ptr [rax + 8]
0x4000cc:	mov	qword ptr [rbp - 0x80], rcx
0x4000d0:	mov	qword ptr [rbp - 0x78], rbx
0x4000d4:	mov	rcx, qword ptr [rax + 0x10]
0x4000d8:	mov	rbx, qword ptr [rax + 0x18]
0x4000dc:	mov	qword ptr [rbp - 0x70], rcx
0x4000e0:	mov	qword ptr [rbp - 0x68], rbx
0x4000e4:	mov	rcx, qword ptr [rax + 0x20]
0x4000e8:	mov	rbx, qword ptr [rax + 0x28]
0x4000ec:	mov	qword ptr [rbp - 0x60], rcx
0x4000f0:	mov	qword ptr [rbp - 0x58], rbx
0x4000f4:	mov	rcx, qword ptr [rax + 0x30]
0x4000f8:	mov	rbx, qword ptr [rax + 0x38]
0x4000fc:	mov	qword ptr [rbp - 0x50], rcx
0x400100:	mov	qword ptr [rbp - 0x48], rbx
0x400104:	mov	rcx, qword ptr [rax + 0x40]
0x400108:	mov	rbx, qword ptr [rax + 0x48]
0x40010c:	mov	qword ptr [rbp - 0x40], rcx
0x400110:	mov	qword ptr [rbp - 0x38], rbx
0x400114:	mov	rcx, qword ptr [rax + 0x50]
0x400118:	mov	rbx, qword ptr [rax + 0x58]
0x40011c:	mov	qword ptr [rbp - 0x30], rcx
0x400120:	mov	qword ptr [rbp - 0x28], rbx
0x400124:	mov	eax, dword ptr [rax + 0x60]
0x400127:	mov	dword ptr [rbp - 0x20], eax
0x40012a:	mov	byte ptr [rbp - 0x1d], 0
0x40012e:	lea	rax, [rbp - 0x80]
0x400132:	mov	rdi, rax
0x400135:	call	0x500018
<Block for 0x40013a, 16 bytes>
0x40013a:	nop	
0x40013b:	mov	rax, qword ptr [rbp - 0x18]
0x40013f:	xor	rax, qword ptr fs:[0x28]
0x400148:	je	0x40014f
<Block for 0x40014f, 10 bytes>
0x40014f:	add	rsp, 0x98
0x400156:	pop	rbx
0x400157:	pop	rbp
0x400158:	ret	
<Block for 0x40014a, 5 bytes>
0x40014a:	call	0x500020
