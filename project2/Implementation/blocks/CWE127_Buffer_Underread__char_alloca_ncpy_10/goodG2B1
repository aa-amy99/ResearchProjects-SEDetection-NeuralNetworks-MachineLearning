<Block for 0x40013a, 81 bytes>
0x40013a:	endbr64	
0x40013e:	push	rbp
0x40013f:	mov	rbp, rsp
0x400142:	add	rsp, -0x80
0x400146:	mov	rax, qword ptr fs:[0x28]
0x40014f:	mov	qword ptr [rbp - 8], rax
0x400153:	xor	eax, eax
0x400155:	mov	eax, 0x10
0x40015a:	sub	rax, 1
0x40015e:	add	rax, 0x6c
0x400162:	mov	esi, 0x10
0x400167:	mov	edx, 0
0x40016c:	div	rsi
0x40016f:	imul	rax, rax, 0x10
0x400173:	mov	rdx, rax
0x400176:	and	rdx, 0xfffffffffffff000
0x40017d:	mov	rcx, rsp
0x400180:	sub	rcx, rdx
0x400183:	mov	rdx, rcx
0x400186:	cmp	rsp, rdx
0x400189:	je	0x40019d
<Block for 0x40019d, 26 bytes>
0x40019d:	mov	rdx, rax
0x4001a0:	and	edx, 0xfff
0x4001a6:	sub	rsp, rdx
0x4001a9:	mov	rdx, rax
0x4001ac:	and	edx, 0xfff
0x4001b2:	test	rdx, rdx
0x4001b5:	je	0x4001c7
<Block for 0x40018b, 18 bytes>
0x40018b:	sub	rsp, 0x1000
0x400192:	or	qword ptr [rsp + 0xff8], 0
0x40019b:	jmp	0x400186
<Block for 0x4001c7, 41 bytes>
0x4001c7:	mov	rax, rsp
0x4001ca:	add	rax, 0xf
0x4001ce:	shr	rax, 4
0x4001d2:	shl	rax, 4
0x4001d6:	mov	qword ptr [rbp - 0x78], rax
0x4001da:	mov	rax, qword ptr [rbp - 0x78]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x41
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x4001b7, 57 bytes>
0x4001b7:	and	eax, 0xfff
0x4001bc:	sub	rax, 8
0x4001c0:	add	rax, rsp
0x4001c3:	or	qword ptr [rax], 0
0x4001c7:	mov	rax, rsp
0x4001ca:	add	rax, 0xf
0x4001ce:	shr	rax, 4
0x4001d2:	shl	rax, 4
0x4001d6:	mov	qword ptr [rbp - 0x78], rax
0x4001da:	mov	rax, qword ptr [rbp - 0x78]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x41
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x400186, 5 bytes>
0x400186:	cmp	rsp, rdx
0x400189:	je	0x40019d
<Block for 0x4001f0, 21 bytes>
0x4001f0:	mov	rax, qword ptr [rbp - 0x78]
0x4001f4:	add	rax, 0x63
0x4001f8:	mov	byte ptr [rax], 0
0x4001fb:	mov	eax, dword ptr [rip + 0xffe2f]
0x400201:	test	eax, eax
0x400203:	je	0x400213
<Block for 0x400213, 30 bytes>
0x400213:	mov	rax, qword ptr [rbp - 0x78]
0x400217:	mov	qword ptr [rbp - 0x80], rax
0x40021b:	lea	rax, [rbp - 0x70]
0x40021f:	mov	edx, 0x63
0x400224:	mov	esi, 0x43
0x400229:	mov	rdi, rax
0x40022c:	call	0x500000
<Block for 0x400205, 12 bytes>
0x400205:	lea	rdi, [rip + 0x1c7]
0x40020c:	call	0x500020
<Block for 0x400231, 16 bytes>
0x400231:	mov	byte ptr [rbp - 0xd], 0
0x400235:	lea	rax, [rbp - 0x70]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500010
<Block for 0x400211, 2 bytes>
0x400211:	jmp	0x40021b
<Block for 0x400241, 22 bytes>
0x400241:	mov	rdx, rax
0x400244:	mov	rcx, qword ptr [rbp - 0x80]
0x400248:	lea	rax, [rbp - 0x70]
0x40024c:	mov	rsi, rcx
0x40024f:	mov	rdi, rax
0x400252:	call	0x500018
<Block for 0x40021b, 22 bytes>
0x40021b:	lea	rax, [rbp - 0x70]
0x40021f:	mov	edx, 0x63
0x400224:	mov	esi, 0x43
0x400229:	mov	rdi, rax
0x40022c:	call	0x500000
<Block for 0x400257, 16 bytes>
0x400257:	mov	byte ptr [rbp - 0xd], 0
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	rdi, rax
0x400262:	call	0x500020
<Block for 0x400267, 16 bytes>
0x400267:	nop	
0x400268:	mov	rax, qword ptr [rbp - 8]
0x40026c:	xor	rax, qword ptr fs:[0x28]
0x400275:	je	0x40027c
<Block for 0x40027c, 2 bytes>
0x40027c:	leave	
0x40027d:	ret	
<Block for 0x400277, 5 bytes>
0x400277:	call	0x500028
