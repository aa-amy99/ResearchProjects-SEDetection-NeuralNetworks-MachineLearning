<Block for 0x40016e, 55 bytes>
0x40016e:	endbr64	
0x400172:	push	rbp
0x400173:	mov	rbp, rsp
0x400176:	sub	rsp, 0xf0
0x40017d:	mov	rax, qword ptr fs:[0x28]
0x400186:	mov	qword ptr [rbp - 8], rax
0x40018a:	xor	eax, eax
0x40018c:	lea	rax, [rbp - 0xe0]
0x400193:	mov	edx, 0x63
0x400198:	mov	esi, 0x41
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500000
<Block for 0x4001a5, 13 bytes>
0x4001a5:	mov	byte ptr [rbp - 0x7d], 0
0x4001a9:	mov	eax, 1
0x4001ae:	test	eax, eax
0x4001b0:	je	0x4001c0
<Block for 0x4001c0, 22 bytes>
0x4001c0:	lea	rax, [rbp - 0x70]
0x4001c4:	mov	edx, 0x63
0x4001c9:	mov	esi, 0x43
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x500000
<Block for 0x4001b2, 36 bytes>
0x4001b2:	lea	rax, [rbp - 0xe0]
0x4001b9:	mov	qword ptr [rbp - 0xe8], rax
0x4001c0:	lea	rax, [rbp - 0x70]
0x4001c4:	mov	edx, 0x63
0x4001c9:	mov	esi, 0x43
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x500000
<Block for 0x4001d6, 31 bytes>
0x4001d6:	mov	byte ptr [rbp - 0xd], 0
0x4001da:	mov	rcx, qword ptr [rbp - 0xe8]
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	edx, 0x64
0x4001ea:	mov	rsi, rcx
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500008
<Block for 0x4001f5, 16 bytes>
0x4001f5:	mov	byte ptr [rbp - 0xd], 0
0x4001f9:	lea	rax, [rbp - 0x70]
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500010
<Block for 0x400205, 16 bytes>
0x400205:	nop	
0x400206:	mov	rax, qword ptr [rbp - 8]
0x40020a:	xor	rax, qword ptr fs:[0x28]
0x400213:	je	0x40021a
<Block for 0x40021a, 2 bytes>
0x40021a:	leave	
0x40021b:	ret	
<Block for 0x400215, 5 bytes>
0x400215:	call	0x500018
