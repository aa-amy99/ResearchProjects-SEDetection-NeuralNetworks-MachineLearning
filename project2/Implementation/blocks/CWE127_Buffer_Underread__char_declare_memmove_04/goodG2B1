<Block for 0x4000b2, 55 bytes>
0x4000b2:	endbr64	
0x4000b6:	push	rbp
0x4000b7:	mov	rbp, rsp
0x4000ba:	sub	rsp, 0xf0
0x4000c1:	mov	rax, qword ptr fs:[0x28]
0x4000ca:	mov	qword ptr [rbp - 8], rax
0x4000ce:	xor	eax, eax
0x4000d0:	lea	rax, [rbp - 0xe0]
0x4000d7:	mov	edx, 0x63
0x4000dc:	mov	esi, 0x41
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500000
<Block for 0x4000e9, 13 bytes>
0x4000e9:	mov	byte ptr [rbp - 0x7d], 0
0x4000ed:	mov	eax, 0
0x4000f2:	test	eax, eax
0x4000f4:	je	0x400104
<Block for 0x400104, 36 bytes>
0x400104:	lea	rax, [rbp - 0xe0]
0x40010b:	mov	qword ptr [rbp - 0xe8], rax
0x400112:	lea	rax, [rbp - 0x70]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x43
0x400120:	mov	rdi, rax
0x400123:	call	0x500000
<Block for 0x4000f6, 12 bytes>
0x4000f6:	lea	rdi, [rip + 0x147]
0x4000fd:	call	0x500010
<Block for 0x400128, 31 bytes>
0x400128:	mov	byte ptr [rbp - 0xd], 0
0x40012c:	mov	rcx, qword ptr [rbp - 0xe8]
0x400133:	lea	rax, [rbp - 0x70]
0x400137:	mov	edx, 0x64
0x40013c:	mov	rsi, rcx
0x40013f:	mov	rdi, rax
0x400142:	call	0x500008
<Block for 0x400102, 2 bytes>
0x400102:	jmp	0x400112
<Block for 0x400147, 16 bytes>
0x400147:	mov	byte ptr [rbp - 0xd], 0
0x40014b:	lea	rax, [rbp - 0x70]
0x40014f:	mov	rdi, rax
0x400152:	call	0x500010
<Block for 0x400112, 22 bytes>
0x400112:	lea	rax, [rbp - 0x70]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x43
0x400120:	mov	rdi, rax
0x400123:	call	0x500000
<Block for 0x400157, 16 bytes>
0x400157:	nop	
0x400158:	mov	rax, qword ptr [rbp - 8]
0x40015c:	xor	rax, qword ptr fs:[0x28]
0x400165:	je	0x40016c
<Block for 0x40016c, 2 bytes>
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400167, 5 bytes>
0x400167:	call	0x500018
