<Block for 0x40006c, 49 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	add	rsp, -0x80
0x400078:	mov	rax, qword ptr fs:[0x28]
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	xor	eax, eax
0x400087:	lea	rax, [rbp - 0x70]
0x40008b:	mov	edx, 0x63
0x400090:	mov	esi, 0x41
0x400095:	mov	rdi, rax
0x400098:	call	0x500000
<Block for 0x40009d, 32 bytes>
0x40009d:	mov	byte ptr [rbp - 0xd], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	qword ptr [rbp - 0x78], rax
0x4000a9:	mov	rax, qword ptr [rbp - 0x78]
0x4000ad:	mov	qword ptr [rbp - 0x80], rax
0x4000b1:	mov	rax, qword ptr [rbp - 0x80]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500018
<Block for 0x4000bd, 16 bytes>
0x4000bd:	nop	
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	xor	rax, qword ptr fs:[0x28]
0x4000cb:	je	0x4000d2
<Block for 0x4000d2, 2 bytes>
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x4000cd, 5 bytes>
0x4000cd:	call	0x500010
