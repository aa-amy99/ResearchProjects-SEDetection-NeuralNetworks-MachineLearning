<Block for 0x4000d2, 45 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	sub	rsp, 0x10
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	qword ptr [rbp - 0x10], 0
0x4000f5:	mov	edi, 4
0x4000fa:	call	0x500000
<Block for 0x4000ff, 23 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x10], rax
0x400103:	mov	rax, qword ptr [rbp - 0x10]
0x400107:	mov	dword ptr [rax], 5
0x40010d:	mov	rax, qword ptr [rbp - 0x10]
0x400111:	test	rax, rax
0x400114:	je	0x400123
<Block for 0x400123, 12 bytes>
0x400123:	lea	rax, [rbp - 0x10]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500028
<Block for 0x400116, 13 bytes>
0x400116:	mov	esi, 4
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x40012f, 16 bytes>
0x40012f:	nop	
0x400130:	mov	rax, qword ptr [rbp - 8]
0x400134:	xor	rax, qword ptr fs:[0x28]
0x40013d:	je	0x400144
<Block for 0x400144, 2 bytes>
0x400144:	leave	
0x400145:	ret	
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500018
