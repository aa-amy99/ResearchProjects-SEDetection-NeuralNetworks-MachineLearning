<Block for 0x4001d0, 28 bytes>
0x4001d0:	endbr64	
0x4001d4:	push	rbp
0x4001d5:	mov	rbp, rsp
0x4001d8:	sub	rsp, 0x20
0x4001dc:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4001e3:	mov	eax, 0
0x4001e8:	test	eax, eax
0x4001ea:	je	0x4001fa
<Block for 0x4001fa, 24 bytes>
0x4001fa:	mov	dword ptr [rbp - 0x14], 0x14
0x400201:	mov	eax, dword ptr [rbp - 0x14]
0x400204:	cdqe	
0x400206:	shl	rax, 2
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500048
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rdi, [rip + 0x145]
0x4001f3:	call	0x500070
<Block for 0x400212, 11 bytes>
0x400212:	mov	qword ptr [rbp - 8], rax
0x400216:	cmp	qword ptr [rbp - 8], 0
0x40021b:	jne	0x400227
<Block for 0x4001f8, 2 bytes>
0x4001f8:	jmp	0x400201
<Block for 0x40021d, 10 bytes>
0x40021d:	mov	edi, 0xffffffff
0x400222:	call	0x500050
<Block for 0x400227, 10 bytes>
0x400227:	mov	qword ptr [rbp - 0x10], 0
0x40022f:	jmp	0x40024f
<Block for 0x400201, 17 bytes>
0x400201:	mov	eax, dword ptr [rbp - 0x14]
0x400204:	cdqe	
0x400206:	shl	rax, 2
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500048
<Block for 0x40024f, 11 bytes>
0x40024f:	mov	eax, dword ptr [rbp - 0x14]
0x400252:	cdqe	
0x400254:	cmp	qword ptr [rbp - 0x10], rax
0x400258:	jb	0x400231
<Block for 0x400231, 41 bytes>
0x400231:	mov	rax, qword ptr [rbp - 0x10]
0x400235:	lea	rdx, [rax*4]
0x40023d:	mov	rax, qword ptr [rbp - 8]
0x400241:	add	rax, rdx
0x400244:	mov	dword ptr [rax], 0
0x40024a:	add	qword ptr [rbp - 0x10], 1
0x40024f:	mov	eax, dword ptr [rbp - 0x14]
0x400252:	cdqe	
0x400254:	cmp	qword ptr [rbp - 0x10], rax
0x400258:	jb	0x400231
<Block for 0x40025a, 13 bytes>
0x40025a:	mov	rax, qword ptr [rbp - 8]
0x40025e:	mov	eax, dword ptr [rax]
0x400260:	mov	edi, eax
0x400262:	call	0x500058
<Block for 0x400267, 12 bytes>
0x400267:	mov	rax, qword ptr [rbp - 8]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500060
<Block for 0x400273, 3 bytes>
0x400273:	nop	
0x400274:	leave	
0x400275:	ret	
