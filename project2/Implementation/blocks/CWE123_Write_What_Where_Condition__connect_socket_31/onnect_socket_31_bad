<Block for 0x400000, 102 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x70
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x50]
0x40001f:	mov	qword ptr [rbp - 0x50], rax
0x400023:	lea	rax, [rbp - 0x50]
0x400027:	mov	qword ptr [rbp - 0x48], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x50]
0x40002f:	mov	qword ptr [rbp - 0x60], rax
0x400033:	mov	rax, qword ptr [rbp - 0x48]
0x400037:	mov	qword ptr [rbp - 0x58], rax
0x40003b:	lea	rax, [rbp - 0x60]
0x40003f:	mov	qword ptr [rbp - 0x50], rax
0x400043:	lea	rax, [rbp - 0x60]
0x400047:	mov	qword ptr [rbp - 0x48], rax
0x40004b:	mov	dword ptr [rbp - 0x68], 0xffffffff
0x400052:	mov	edx, 6
0x400057:	mov	esi, 1
0x40005c:	mov	edi, 2
0x400061:	call	0x500000
<Block for 0x400066, 9 bytes>
0x400066:	mov	dword ptr [rbp - 0x68], eax
0x400069:	cmp	dword ptr [rbp - 0x68], -1
0x40006d:	je	0x4000e0
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	jmp	0x4000e4
<Block for 0x40006f, 22 bytes>
0x40006f:	lea	rax, [rbp - 0x20]
0x400073:	mov	edx, 0x10
0x400078:	mov	esi, 0
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x4000e4, 6 bytes>
0x4000e4:	cmp	dword ptr [rbp - 0x68], -1
0x4000e8:	je	0x4000f4
<Block for 0x400085, 18 bytes>
0x400085:	mov	word ptr [rbp - 0x20], 2
0x40008b:	lea	rdi, [rip + 0x1b6]
0x400092:	call	0x500010
<Block for 0x4000f4, 105 bytes>
0x4000f4:	mov	rax, qword ptr [rbp - 0x60]
0x4000f8:	mov	rdx, qword ptr [rbp - 0x58]
0x4000fc:	mov	qword ptr [rbp - 0x40], rax
0x400100:	mov	qword ptr [rbp - 0x38], rdx
0x400104:	mov	rax, qword ptr [rbp - 0x40]
0x400108:	mov	rdx, qword ptr [rbp - 0x38]
0x40010c:	mov	qword ptr [rbp - 0x30], rax
0x400110:	mov	qword ptr [rbp - 0x28], rdx
0x400114:	mov	rax, qword ptr [rbp - 0x28]
0x400118:	mov	qword ptr [rip + 0x119], rax
0x40011f:	mov	rax, qword ptr [rbp - 0x30]
0x400123:	mov	qword ptr [rip + 0x116], rax
0x40012a:	mov	rax, qword ptr [rip + 0x107]
0x400131:	mov	rdx, qword ptr [rip + 0x108]
0x400138:	mov	qword ptr [rax], rdx
0x40013b:	mov	rax, qword ptr [rip + 0xfe]
0x400142:	mov	rdx, qword ptr [rip + 0xef]
0x400149:	mov	qword ptr [rax + 8], rdx
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x4000ea, 10 bytes>
0x4000ea:	mov	eax, dword ptr [rbp - 0x68]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500030
<Block for 0x400097, 13 bytes>
0x400097:	mov	dword ptr [rbp - 0x1c], eax
0x40009a:	mov	edi, 0x6987
0x40009f:	call	0x500018
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500038
<Block for 0x4000a4, 26 bytes>
0x4000a4:	mov	word ptr [rbp - 0x1e], ax
0x4000a8:	lea	rcx, [rbp - 0x20]
0x4000ac:	mov	eax, dword ptr [rbp - 0x68]
0x4000af:	mov	edx, 0x10
0x4000b4:	mov	rsi, rcx
0x4000b7:	mov	edi, eax
0x4000b9:	call	0x500020
<Block for 0x4000be, 5 bytes>
0x4000be:	cmp	eax, -1
0x4000c1:	je	0x4000e3
<Block for 0x4000c3, 24 bytes>
0x4000c3:	lea	rsi, [rbp - 0x60]
0x4000c7:	mov	eax, dword ptr [rbp - 0x68]
0x4000ca:	mov	ecx, 0
0x4000cf:	mov	edx, 0x10
0x4000d4:	mov	edi, eax
0x4000d6:	call	0x500028
<Block for 0x4000e3, 1 bytes>
0x4000e3:	nop	
<Block for 0x4000db, 5 bytes>
0x4000db:	mov	dword ptr [rbp - 0x64], eax
0x4000de:	jmp	0x4000e4
