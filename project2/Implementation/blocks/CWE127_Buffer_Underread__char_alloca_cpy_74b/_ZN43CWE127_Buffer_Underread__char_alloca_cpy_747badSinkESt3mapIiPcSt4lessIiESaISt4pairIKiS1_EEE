<Block for 0x400000, 72 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	qword ptr [rbp - 0xe8], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	dword ptr [rbp - 0xdc], 2
0x40002f:	lea	rdx, [rbp - 0xdc]
0x400036:	mov	rax, qword ptr [rbp - 0xe8]
0x40003d:	mov	rsi, rdx
0x400040:	mov	rdi, rax
0x400043:	call	0x400188
<Block for 0x400048, 35 bytes>
0x400048:	mov	rax, qword ptr [rax]
0x40004b:	mov	qword ptr [rbp - 0xd8], rax
0x400052:	lea	rax, [rbp - 0xd0]
0x400059:	mov	edx, 0xc7
0x40005e:	mov	esi, 0x43
0x400063:	mov	rdi, rax
0x400066:	call	0x500000
<Block for 0x40006b, 29 bytes>
0x40006b:	mov	byte ptr [rbp - 9], 0
0x40006f:	mov	rdx, qword ptr [rbp - 0xd8]
0x400076:	lea	rax, [rbp - 0xd0]
0x40007d:	mov	rsi, rdx
0x400080:	mov	rdi, rax
0x400083:	call	0x500008
<Block for 0x400088, 15 bytes>
0x400088:	lea	rax, [rbp - 0xd0]
0x40008f:	mov	rdi, rax
0x400092:	call	0x500010
<Block for 0x400097, 16 bytes>
0x400097:	nop	
0x400098:	mov	rax, qword ptr [rbp - 8]
0x40009c:	xor	rax, qword ptr fs:[0x28]
0x4000a5:	je	0x4000ac
<Block for 0x4000ac, 2 bytes>
0x4000ac:	leave	
0x4000ad:	ret	
<Block for 0x4000a7, 5 bytes>
0x4000a7:	call	0x500018
