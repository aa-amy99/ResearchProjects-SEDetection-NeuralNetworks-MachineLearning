<Block for 0x40001e, 45 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x20
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	qword ptr [rbp - 0x10], 0
0x400041:	mov	eax, 0
0x400046:	call	0x400000
<Block for 0x40004b, 4 bytes>
0x40004b:	test	eax, eax
0x40004d:	je	0x40005d
<Block for 0x40005d, 13 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0x10]
0x400061:	mov	eax, dword ptr [rax]
0x400063:	mov	edi, eax
0x400065:	call	0x500000
<Block for 0x40004f, 27 bytes>
0x40004f:	mov	word ptr [rbp - 0x12], 8
0x400055:	lea	rax, [rbp - 0x12]
0x400059:	mov	qword ptr [rbp - 0x10], rax
0x40005d:	mov	rax, qword ptr [rbp - 0x10]
0x400061:	mov	eax, dword ptr [rax]
0x400063:	mov	edi, eax
0x400065:	call	0x500000
<Block for 0x40006a, 16 bytes>
0x40006a:	nop	
0x40006b:	mov	rax, qword ptr [rbp - 8]
0x40006f:	xor	rax, qword ptr fs:[0x28]
0x400078:	je	0x40007f
<Block for 0x40007f, 2 bytes>
0x40007f:	leave	
0x400080:	ret	
<Block for 0x40007a, 5 bytes>
0x40007a:	call	0x500008
