<Block for 0x40006a, 40 bytes>
0x40006a:	endbr64	
0x40006e:	push	rbp
0x40006f:	mov	rbp, rsp
0x400072:	push	rbx
0x400073:	sub	rsp, 0x38
0x400077:	mov	rax, qword ptr fs:[0x28]
0x400080:	mov	qword ptr [rbp - 0x18], rax
0x400084:	xor	eax, eax
0x400086:	lea	rax, [rbp - 0x30]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x400644
<Block for 0x400092, 12 bytes>
0x400092:	lea	rax, [rbp - 0x30]
0x400096:	mov	rdi, rax
0x400099:	call	0x400000
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rax, [rbp - 0x40]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x40077e
<Block for 0x4000aa, 19 bytes>
0x4000aa:	lea	rsi, [rip + 0x4e7]
0x4000b1:	lea	rdi, [rip + 0xfff50]
0x4000b8:	call	0x500010
<Block for 0x4000bd, 12 bytes>
0x4000bd:	lea	rax, [rbp - 0x30]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x400798
<Block for 0x4000c9, 16 bytes>
0x4000c9:	mov	qword ptr [rbp - 0x40], rax
0x4000cd:	lea	rax, [rbp - 0x30]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x4007e8
<Block for 0x4000d9, 23 bytes>
0x4000d9:	mov	qword ptr [rbp - 0x38], rax
0x4000dd:	lea	rdx, [rbp - 0x38]
0x4000e1:	lea	rax, [rbp - 0x40]
0x4000e5:	mov	rsi, rdx
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x400834
<Block for 0x4000f0, 4 bytes>
0x4000f0:	test	al, al
0x4000f2:	je	0x40015b
<Block for 0x40015b, 22 bytes>
0x40015b:	mov	rax, qword ptr [rip + 0xffec6]
0x400162:	mov	rsi, rax
0x400165:	lea	rdi, [rip + 0xffe9c]
0x40016c:	call	0x500030
<Block for 0x4000f4, 12 bytes>
0x4000f4:	lea	rax, [rbp - 0x40]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x4008b2
<Block for 0x400171, 12 bytes>
0x400171:	lea	rax, [rbp - 0x30]
0x400175:	mov	rdi, rax
0x400178:	call	0x400664
<Block for 0x400100, 11 bytes>
0x400100:	mov	eax, dword ptr [rax]
0x400102:	test	eax, eax
0x400104:	sete	al
0x400107:	test	al, al
0x400109:	je	0x400117
<Block for 0x40017d, 16 bytes>
0x40017d:	nop	
0x40017e:	mov	rax, qword ptr [rbp - 0x18]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x4001b2
<Block for 0x400117, 19 bytes>
0x400117:	lea	rsi, [rip + 0x48e]
0x40011e:	lea	rdi, [rip + 0xffee3]
0x400125:	call	0x500010
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rax, [rbp - 0x30]
0x40010f:	mov	rdi, rax
0x400112:	call	0x4008d4
<Block for 0x4001b2, 7 bytes>
0x4001b2:	add	rsp, 0x38
0x4001b6:	pop	rbx
0x4001b7:	pop	rbp
0x4001b8:	ret	
<Block for 0x40018d, 2 bytes>
0x40018d:	jmp	0x4001ad
<Block for 0x40012a, 15 bytes>
0x40012a:	mov	rbx, rax
0x40012d:	lea	rax, [rbp - 0x40]
0x400131:	mov	rdi, rax
0x400134:	call	0x4008b2
<Block for 0x4001ad, 5 bytes>
0x4001ad:	call	0x500000
<Block for 0x400139, 12 bytes>
0x400139:	mov	eax, dword ptr [rax]
0x40013b:	mov	esi, eax
0x40013d:	mov	rdi, rbx
0x400140:	call	0x500018
<Block for 0x400145, 17 bytes>
0x400145:	lea	rax, [rbp - 0x40]
0x400149:	mov	esi, 0
0x40014e:	mov	rdi, rax
0x400151:	call	0x40085a
<Block for 0x400156, 5 bytes>
0x400156:	jmp	0x4000cd
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rax, [rbp - 0x30]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x4007e8
