<Block for 0x400223, 40 bytes>
0x400223:	endbr64	
0x400227:	push	rbp
0x400228:	mov	rbp, rsp
0x40022b:	push	rbx
0x40022c:	sub	rsp, 0x38
0x400230:	mov	rax, qword ptr fs:[0x28]
0x400239:	mov	qword ptr [rbp - 0x18], rax
0x40023d:	xor	eax, eax
0x40023f:	lea	rax, [rbp - 0x30]
0x400243:	mov	rdi, rax
0x400246:	call	0x400644
<Block for 0x40024b, 12 bytes>
0x40024b:	lea	rax, [rbp - 0x30]
0x40024f:	mov	rdi, rax
0x400252:	call	0x4001b9
<Block for 0x400257, 12 bytes>
0x400257:	lea	rax, [rbp - 0x40]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x40077e
<Block for 0x400263, 19 bytes>
0x400263:	lea	rsi, [rip + 0x32e]
0x40026a:	lea	rdi, [rip + 0xffd97]
0x400271:	call	0x500010
<Block for 0x400276, 12 bytes>
0x400276:	lea	rax, [rbp - 0x30]
0x40027a:	mov	rdi, rax
0x40027d:	call	0x400798
<Block for 0x400282, 16 bytes>
0x400282:	mov	qword ptr [rbp - 0x40], rax
0x400286:	lea	rax, [rbp - 0x30]
0x40028a:	mov	rdi, rax
0x40028d:	call	0x4007e8
<Block for 0x400292, 23 bytes>
0x400292:	mov	qword ptr [rbp - 0x38], rax
0x400296:	lea	rdx, [rbp - 0x38]
0x40029a:	lea	rax, [rbp - 0x40]
0x40029e:	mov	rsi, rdx
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x400834
<Block for 0x4002a9, 4 bytes>
0x4002a9:	test	al, al
0x4002ab:	je	0x400314
<Block for 0x400314, 22 bytes>
0x400314:	mov	rax, qword ptr [rip + 0xffd0d]
0x40031b:	mov	rsi, rax
0x40031e:	lea	rdi, [rip + 0xffce3]
0x400325:	call	0x500030
<Block for 0x4002ad, 12 bytes>
0x4002ad:	lea	rax, [rbp - 0x40]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x4008b2
<Block for 0x40032a, 12 bytes>
0x40032a:	lea	rax, [rbp - 0x30]
0x40032e:	mov	rdi, rax
0x400331:	call	0x400664
<Block for 0x4002b9, 11 bytes>
0x4002b9:	mov	eax, dword ptr [rax]
0x4002bb:	test	eax, eax
0x4002bd:	sete	al
0x4002c0:	test	al, al
0x4002c2:	je	0x4002d0
<Block for 0x400336, 16 bytes>
0x400336:	nop	
0x400337:	mov	rax, qword ptr [rbp - 0x18]
0x40033b:	xor	rax, qword ptr fs:[0x28]
0x400344:	je	0x40036b
<Block for 0x4002d0, 19 bytes>
0x4002d0:	lea	rsi, [rip + 0x2d5]
0x4002d7:	lea	rdi, [rip + 0xffd2a]
0x4002de:	call	0x500010
<Block for 0x4002c4, 12 bytes>
0x4002c4:	lea	rax, [rbp - 0x30]
0x4002c8:	mov	rdi, rax
0x4002cb:	call	0x4008d4
<Block for 0x40036b, 7 bytes>
0x40036b:	add	rsp, 0x38
0x40036f:	pop	rbx
0x400370:	pop	rbp
0x400371:	ret	
<Block for 0x400346, 2 bytes>
0x400346:	jmp	0x400366
<Block for 0x4002e3, 15 bytes>
0x4002e3:	mov	rbx, rax
0x4002e6:	lea	rax, [rbp - 0x40]
0x4002ea:	mov	rdi, rax
0x4002ed:	call	0x4008b2
<Block for 0x400366, 5 bytes>
0x400366:	call	0x500000
<Block for 0x4002f2, 12 bytes>
0x4002f2:	mov	eax, dword ptr [rax]
0x4002f4:	mov	esi, eax
0x4002f6:	mov	rdi, rbx
0x4002f9:	call	0x500018
<Block for 0x4002fe, 17 bytes>
0x4002fe:	lea	rax, [rbp - 0x40]
0x400302:	mov	esi, 0
0x400307:	mov	rdi, rax
0x40030a:	call	0x40085a
<Block for 0x40030f, 5 bytes>
0x40030f:	jmp	0x400286
<Block for 0x400286, 12 bytes>
0x400286:	lea	rax, [rbp - 0x30]
0x40028a:	mov	rdi, rax
0x40028d:	call	0x4007e8
