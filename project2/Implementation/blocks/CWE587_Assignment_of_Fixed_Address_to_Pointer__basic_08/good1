<Block for 0x400054, 37 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	sub	rsp, 0x20
0x400060:	mov	rax, qword ptr fs:[0x28]
0x400069:	mov	qword ptr [rbp - 8], rax
0x40006d:	xor	eax, eax
0x40006f:	mov	eax, 0
0x400074:	call	0x40000f
<Block for 0x400079, 4 bytes>
0x400079:	test	eax, eax
0x40007b:	je	0x40008b
<Block for 0x40008b, 29 bytes>
0x40008b:	mov	byte ptr [rbp - 0x11], 0x61
0x40008f:	lea	rax, [rbp - 0x11]
0x400093:	mov	qword ptr [rbp - 0x10], rax
0x400097:	mov	rax, qword ptr [rbp - 0x10]
0x40009b:	movzx	eax, byte ptr [rax]
0x40009e:	movsx	eax, al
0x4000a1:	mov	edi, eax
0x4000a3:	call	0x500000
<Block for 0x40007d, 12 bytes>
0x40007d:	lea	rdi, [rip + 0xb7]
0x400084:	call	0x500008
<Block for 0x4000a8, 16 bytes>
0x4000a8:	nop	
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	xor	rax, qword ptr fs:[0x28]
0x4000b6:	je	0x4000bd
<Block for 0x400089, 2 bytes>
0x400089:	jmp	0x4000a8
<Block for 0x4000bd, 2 bytes>
0x4000bd:	leave	
0x4000be:	ret	
<Block for 0x4000b8, 5 bytes>
0x4000b8:	call	0x500010
