<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x400070
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 0x64
0x400075:	call	0x500008
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0x64
0x400027:	call	0x500008
<Block for 0x40007a, 11 bytes>
0x40007a:	mov	qword ptr [rbp - 8], rax
0x40007e:	cmp	qword ptr [rbp - 8], 0
0x400083:	jne	0x40008f
<Block for 0x40002c, 11 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	cmp	qword ptr [rbp - 8], 0
0x400035:	jne	0x400041
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 0xffffffff
0x40008a:	call	0x500010
<Block for 0x40008f, 22 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	mov	edx, 0x63
0x400098:	mov	esi, 0x41
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500018
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0xffffffff
0x40003c:	call	0x500010
<Block for 0x400041, 22 bytes>
0x400041:	mov	rax, qword ptr [rbp - 8]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500018
<Block for 0x4000a5, 21 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	add	rax, 0x63
0x4000ad:	mov	byte ptr [rax], 0
0x4000b0:	mov	eax, 0
0x4000b5:	call	0x500000
<Block for 0x400057, 23 bytes>
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	add	rax, 0x63
0x40005f:	mov	byte ptr [rax], 0
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	mov	rdi, rax
0x400069:	call	0x500020
<Block for 0x4000ba, 4 bytes>
0x4000ba:	test	eax, eax
0x4000bc:	je	0x4000ca
<Block for 0x40006e, 2 bytes>
0x40006e:	jmp	0x4000b0
<Block for 0x4000ca, 3 bytes>
0x4000ca:	nop	
0x4000cb:	leave	
0x4000cc:	ret	
<Block for 0x4000be, 12 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500028
<Block for 0x4000b0, 10 bytes>
0x4000b0:	mov	eax, 0
0x4000b5:	call	0x500000
