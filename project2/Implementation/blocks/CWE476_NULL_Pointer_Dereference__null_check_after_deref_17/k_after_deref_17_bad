<Block for 0x400000, 21 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 0xc], 0
0x400013:	jmp	0x400064
<Block for 0x400064, 6 bytes>
0x400064:	cmp	dword ptr [rbp - 0xc], 0
0x400068:	jle	0x400015
<Block for 0x400015, 18 bytes>
0x400015:	mov	qword ptr [rbp - 8], 0
0x40001d:	mov	edi, 4
0x400022:	call	0x500000
<Block for 0x40006a, 4 bytes>
0x40006a:	nop	
0x40006b:	nop	
0x40006c:	leave	
0x40006d:	ret	
<Block for 0x400027, 27 bytes>
0x400027:	mov	qword ptr [rbp - 8], rax
0x40002b:	mov	rax, qword ptr [rbp - 8]
0x40002f:	mov	dword ptr [rax], 5
0x400035:	mov	rax, qword ptr [rbp - 8]
0x400039:	mov	eax, dword ptr [rax]
0x40003b:	mov	edi, eax
0x40003d:	call	0x500008
<Block for 0x400042, 7 bytes>
0x400042:	cmp	qword ptr [rbp - 8], 0
0x400047:	je	0x400053
<Block for 0x400053, 13 bytes>
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	mov	eax, dword ptr [rax]
0x400059:	mov	edi, eax
0x40005b:	call	0x500008
<Block for 0x400049, 23 bytes>
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	mov	dword ptr [rax], 0xa
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	mov	eax, dword ptr [rax]
0x400059:	mov	edi, eax
0x40005b:	call	0x500008
<Block for 0x400060, 10 bytes>
0x400060:	add	dword ptr [rbp - 0xc], 1
0x400064:	cmp	dword ptr [rbp - 0xc], 0
0x400068:	jle	0x400015
