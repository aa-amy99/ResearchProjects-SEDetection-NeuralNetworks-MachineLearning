<Block for 0x4000ff, 37 bytes>
0x4000ff:	endbr64	
0x400103:	push	rbp
0x400104:	mov	rbp, rsp
0x400107:	sub	rsp, 0x20
0x40010b:	mov	rax, qword ptr fs:[0x28]
0x400114:	mov	qword ptr [rbp - 8], rax
0x400118:	xor	eax, eax
0x40011a:	mov	eax, 0
0x40011f:	call	0x40000f
<Block for 0x400124, 4 bytes>
0x400124:	test	eax, eax
0x400126:	je	0x400139
<Block for 0x400139, 54 bytes>
0x400139:	mov	eax, 0x10
0x40013e:	sub	rax, 1
0x400142:	add	rax, 0x10
0x400146:	mov	esi, 0x10
0x40014b:	mov	edx, 0
0x400150:	div	rsi
0x400153:	imul	rax, rax, 0x10
0x400157:	mov	rdx, rax
0x40015a:	and	rdx, 0xfffffffffffff000
0x400161:	mov	rcx, rsp
0x400164:	sub	rcx, rdx
0x400167:	mov	rdx, rcx
0x40016a:	cmp	rsp, rdx
0x40016d:	je	0x400181
<Block for 0x400128, 12 bytes>
0x400128:	lea	rdi, [rip + 0x226]
0x40012f:	call	0x500010
<Block for 0x400181, 26 bytes>
0x400181:	mov	rdx, rax
0x400184:	and	edx, 0xfff
0x40018a:	sub	rsp, rdx
0x40018d:	mov	rdx, rax
0x400190:	and	edx, 0xfff
0x400196:	test	rdx, rdx
0x400199:	je	0x4001ab
<Block for 0x40016f, 18 bytes>
0x40016f:	sub	rsp, 0x1000
0x400176:	or	qword ptr [rsp + 0xff8], 0
0x40017f:	jmp	0x40016a
<Block for 0x400134, 5 bytes>
0x400134:	jmp	0x40020a
<Block for 0x4001ab, 29 bytes>
0x4001ab:	mov	rax, rsp
0x4001ae:	add	rax, 0xf
0x4001b2:	shr	rax, 4
0x4001b6:	shl	rax, 4
0x4001ba:	mov	qword ptr [rbp - 0x20], rax
0x4001be:	mov	edi, 4
0x4001c3:	call	0x500018
<Block for 0x40019b, 45 bytes>
0x40019b:	and	eax, 0xfff
0x4001a0:	sub	rax, 8
0x4001a4:	add	rax, rsp
0x4001a7:	or	qword ptr [rax], 0
0x4001ab:	mov	rax, rsp
0x4001ae:	add	rax, 0xf
0x4001b2:	shr	rax, 4
0x4001b6:	shl	rax, 4
0x4001ba:	mov	qword ptr [rbp - 0x20], rax
0x4001be:	mov	edi, 4
0x4001c3:	call	0x500018
<Block for 0x40016a, 5 bytes>
0x40016a:	cmp	rsp, rdx
0x40016d:	je	0x400181
<Block for 0x40020a, 16 bytes>
0x40020a:	nop	
0x40020b:	mov	rax, qword ptr [rbp - 8]
0x40020f:	xor	rax, qword ptr fs:[0x28]
0x400218:	je	0x40021f
<Block for 0x4001c8, 11 bytes>
0x4001c8:	mov	qword ptr [rbp - 0x18], rax
0x4001cc:	cmp	qword ptr [rbp - 0x18], 0
0x4001d1:	jne	0x4001dd
<Block for 0x40021f, 2 bytes>
0x40021f:	leave	
0x400220:	ret	
<Block for 0x40021a, 5 bytes>
0x40021a:	call	0x500008
<Block for 0x4001d3, 10 bytes>
0x4001d3:	mov	edi, 0xffffffff
0x4001d8:	call	0x500020
<Block for 0x4001dd, 45 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x18]
0x4001e1:	mov	dword ptr [rax], 5
0x4001e7:	mov	rax, qword ptr [rbp - 0x20]
0x4001eb:	mov	rdx, qword ptr [rbp - 0x18]
0x4001ef:	mov	qword ptr [rax], rdx
0x4001f2:	mov	rax, qword ptr [rbp - 0x20]
0x4001f6:	mov	rax, qword ptr [rax]
0x4001f9:	mov	qword ptr [rbp - 0x10], rax
0x4001fd:	mov	rax, qword ptr [rbp - 0x10]
0x400201:	mov	eax, dword ptr [rax]
0x400203:	mov	edi, eax
0x400205:	call	0x500000
