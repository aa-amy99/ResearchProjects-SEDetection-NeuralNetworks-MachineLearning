<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 37 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x120], rax
0x40006a:	mov	eax, 1
0x40006f:	test	eax, eax
0x400071:	je	0x400153
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400153, 15 bytes>
0x400153:	mov	rax, qword ptr [rbp - 0x120]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500020
<Block for 0x400077, 15 bytes>
0x400077:	mov	rax, qword ptr [rbp - 0x120]
0x40007e:	mov	rdi, rax
0x400081:	call	0x500000
<Block for 0x400162, 16 bytes>
0x400162:	nop	
0x400163:	mov	rax, qword ptr [rbp - 8]
0x400167:	xor	rax, qword ptr fs:[0x28]
0x400170:	je	0x400177
<Block for 0x400086, 29 bytes>
0x400086:	mov	qword ptr [rbp - 0x118], rax
0x40008d:	mov	eax, 0xfa
0x400092:	sub	rax, qword ptr [rbp - 0x118]
0x400099:	cmp	rax, 1
0x40009d:	jbe	0x400153
<Block for 0x400177, 2 bytes>
0x400177:	leave	
0x400178:	ret	
<Block for 0x400172, 5 bytes>
0x400172:	call	0x500028
<Block for 0x4000a3, 53 bytes>
0x4000a3:	mov	rax, qword ptr [rip + 0xfff5e]
0x4000aa:	mov	rdx, qword ptr [rbp - 0x118]
0x4000b1:	mov	ecx, 0xfa
0x4000b6:	sub	ecx, edx
0x4000b8:	mov	edx, ecx
0x4000ba:	mov	esi, edx
0x4000bc:	mov	rcx, qword ptr [rbp - 0x120]
0x4000c3:	mov	rdx, qword ptr [rbp - 0x118]
0x4000ca:	add	rcx, rdx
0x4000cd:	mov	rdx, rax
0x4000d0:	mov	rdi, rcx
0x4000d3:	call	0x500010
<Block for 0x4000d8, 5 bytes>
0x4000d8:	test	rax, rax
0x4000db:	je	0x400133
<Block for 0x400133, 12 bytes>
0x400133:	lea	rdi, [rip + 0x21a]
0x40013a:	call	0x500018
<Block for 0x4000dd, 15 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x120]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500000
<Block for 0x40013f, 35 bytes>
0x40013f:	mov	rdx, qword ptr [rbp - 0x120]
0x400146:	mov	rax, qword ptr [rbp - 0x118]
0x40014d:	add	rax, rdx
0x400150:	mov	byte ptr [rax], 0
0x400153:	mov	rax, qword ptr [rbp - 0x120]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500020
<Block for 0x4000ec, 17 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x118], rax
0x4000f3:	cmp	qword ptr [rbp - 0x118], 0
0x4000fb:	je	0x400153
<Block for 0x4000fd, 28 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x118]
0x400104:	lea	rdx, [rax - 1]
0x400108:	mov	rax, qword ptr [rbp - 0x120]
0x40010f:	add	rax, rdx
0x400112:	movzx	eax, byte ptr [rax]
0x400115:	cmp	al, 0xa
0x400117:	jne	0x400153
<Block for 0x400119, 26 bytes>
0x400119:	mov	rax, qword ptr [rbp - 0x118]
0x400120:	lea	rdx, [rax - 1]
0x400124:	mov	rax, qword ptr [rbp - 0x120]
0x40012b:	add	rax, rdx
0x40012e:	mov	byte ptr [rax], 0
0x400131:	jmp	0x400153
