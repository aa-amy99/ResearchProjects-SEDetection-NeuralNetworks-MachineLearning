<Block for 0x40005e, 23 bytes>
0x40005e:	endbr64	
0x400062:	push	rbp
0x400063:	mov	rbp, rsp
0x400066:	push	rbx
0x400067:	sub	rsp, 0x18
0x40006b:	mov	edi, 8
0x400070:	call	0x500000
<Block for 0x400075, 11 bytes>
0x400075:	mov	rbx, rax
0x400078:	mov	rdi, rbx
0x40007b:	call	0x400118
<Block for 0x400080, 30 bytes>
0x400080:	mov	qword ptr [rbp - 0x20], rbx
0x400084:	mov	rax, qword ptr [rbp - 0x20]
0x400088:	mov	rax, qword ptr [rax]
0x40008b:	mov	rcx, qword ptr [rax]
0x40008e:	mov	rdx, qword ptr [rbp - 0x18]
0x400092:	mov	rax, qword ptr [rbp - 0x20]
0x400096:	mov	rsi, rdx
0x400099:	mov	rdi, rax
0x40009c:	call	rcx
<Block for 0x40009e, 9 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0x20]
0x4000a2:	test	rax, rax
0x4000a5:	je	0x4000b4
<Block for 0x4000b4, 8 bytes>
0x4000b4:	nop	
0x4000b5:	add	rsp, 0x18
0x4000b9:	pop	rbx
0x4000ba:	pop	rbp
0x4000bb:	ret	
<Block for 0x4000a7, 13 bytes>
0x4000a7:	mov	esi, 8
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500008
