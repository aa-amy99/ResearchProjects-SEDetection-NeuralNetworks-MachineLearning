<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004ee
<Block for 0x400028, 20 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 5
0x400030:	lea	rax, [rbp - 0x50]
0x400034:	mov	rdi, rax
0x400037:	call	0x400696
<Block for 0x40003c, 23 bytes>
0x40003c:	mov	qword ptr [rbp - 0x58], rax
0x400040:	lea	rdx, [rbp - 0x58]
0x400044:	lea	rax, [rbp - 0x30]
0x400048:	mov	rsi, rdx
0x40004b:	mov	rdi, rax
0x40004e:	call	0x4006e6
<Block for 0x400053, 28 bytes>
0x400053:	lea	rdx, [rbp - 0x60]
0x400057:	mov	rsi, qword ptr [rbp - 0x30]
0x40005b:	lea	rax, [rbp - 0x50]
0x40005f:	mov	rcx, rdx
0x400062:	mov	edx, 1
0x400067:	mov	rdi, rax
0x40006a:	call	0x400714
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rax, [rbp - 0x50]
0x400073:	mov	rdi, rax
0x400076:	call	0x400696
<Block for 0x40007b, 23 bytes>
0x40007b:	mov	qword ptr [rbp - 0x58], rax
0x40007f:	lea	rdx, [rbp - 0x58]
0x400083:	lea	rax, [rbp - 0x30]
0x400087:	mov	rsi, rdx
0x40008a:	mov	rdi, rax
0x40008d:	call	0x4006e6
<Block for 0x400092, 28 bytes>
0x400092:	lea	rdx, [rbp - 0x60]
0x400096:	mov	rsi, qword ptr [rbp - 0x30]
0x40009a:	lea	rax, [rbp - 0x50]
0x40009e:	mov	rcx, rdx
0x4000a1:	mov	edx, 1
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x400714
<Block for 0x4000ae, 12 bytes>
0x4000ae:	lea	rax, [rbp - 0x50]
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x400696
<Block for 0x4000ba, 23 bytes>
0x4000ba:	mov	qword ptr [rbp - 0x58], rax
0x4000be:	lea	rdx, [rbp - 0x58]
0x4000c2:	lea	rax, [rbp - 0x30]
0x4000c6:	mov	rsi, rdx
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x4006e6
<Block for 0x4000d1, 28 bytes>
0x4000d1:	lea	rdx, [rbp - 0x60]
0x4000d5:	mov	rsi, qword ptr [rbp - 0x30]
0x4000d9:	lea	rax, [rbp - 0x50]
0x4000dd:	mov	rcx, rdx
0x4000e0:	mov	edx, 1
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x400714
<Block for 0x4000ed, 19 bytes>
0x4000ed:	lea	rdx, [rbp - 0x50]
0x4000f1:	lea	rax, [rbp - 0x30]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x4007da
<Block for 0x400100, 12 bytes>
0x400100:	lea	rax, [rbp - 0x30]
0x400104:	mov	rdi, rax
0x400107:	call	0x500000
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rax, [rbp - 0x30]
0x400110:	mov	rdi, rax
0x400113:	call	0x40064e
<Block for 0x400118, 12 bytes>
0x400118:	lea	rax, [rbp - 0x50]
0x40011c:	mov	rdi, rax
0x40011f:	call	0x40064e
<Block for 0x400124, 16 bytes>
0x400124:	nop	
0x400125:	mov	rax, qword ptr [rbp - 0x18]
0x400129:	xor	rax, qword ptr fs:[0x28]
0x400132:	je	0x40016e
<Block for 0x40016e, 7 bytes>
0x40016e:	add	rsp, 0x58
0x400172:	pop	rbx
0x400173:	pop	rbp
0x400174:	ret	
<Block for 0x400134, 2 bytes>
0x400134:	jmp	0x400169
<Block for 0x400169, 5 bytes>
0x400169:	call	0x500010
