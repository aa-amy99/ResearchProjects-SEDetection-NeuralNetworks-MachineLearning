<Block for 0x400338, 66 bytes>
0x400338:	endbr64	
0x40033c:	push	rbp
0x40033d:	mov	rbp, rsp
0x400340:	sub	rsp, 0x20
0x400344:	mov	rax, qword ptr fs:[0x28]
0x40034d:	mov	qword ptr [rbp - 8], rax
0x400351:	xor	eax, eax
0x400353:	mov	rax, qword ptr [rip + 0x206]
0x40035a:	mov	qword ptr [rbp - 0x10], rax
0x40035e:	lea	rdx, [rbp - 0x1c]
0x400362:	mov	rax, qword ptr [rbp - 0x10]
0x400366:	lea	rsi, [rip + 0x1fb]
0x40036d:	mov	rdi, rax
0x400370:	mov	eax, 0
0x400375:	call	0x500000
<Block for 0x40037a, 5 bytes>
0x40037a:	cmp	eax, 1
0x40037d:	jne	0x4003b3
<Block for 0x40037f, 10 bytes>
0x40037f:	mov	eax, dword ptr [rbp - 0x1c]
0x400382:	cmp	eax, 0x270f
0x400387:	jg	0x4003b3
<Block for 0x4003b3, 16 bytes>
0x4003b3:	nop	
0x4003b4:	mov	rax, qword ptr [rbp - 8]
0x4003b8:	xor	rax, qword ptr fs:[0x28]
0x4003c1:	je	0x4003c8
<Block for 0x400389, 16 bytes>
0x400389:	mov	dword ptr [rbp - 0x14], 0
0x400390:	mov	dword ptr [rbp - 0x18], 0
0x400397:	jmp	0x4003a1
<Block for 0x4003c8, 2 bytes>
0x4003c8:	leave	
0x4003c9:	ret	
<Block for 0x4003c3, 5 bytes>
0x4003c3:	call	0x500010
<Block for 0x4003a1, 8 bytes>
0x4003a1:	mov	eax, dword ptr [rbp - 0x1c]
0x4003a4:	cmp	dword ptr [rbp - 0x18], eax
0x4003a7:	jl	0x400399
<Block for 0x400399, 16 bytes>
0x400399:	add	dword ptr [rbp - 0x14], 1
0x40039d:	add	dword ptr [rbp - 0x18], 1
0x4003a1:	mov	eax, dword ptr [rbp - 0x1c]
0x4003a4:	cmp	dword ptr [rbp - 0x18], eax
0x4003a7:	jl	0x400399
<Block for 0x4003a9, 10 bytes>
0x4003a9:	mov	eax, dword ptr [rbp - 0x14]
0x4003ac:	mov	edi, eax
0x4003ae:	call	0x500008
