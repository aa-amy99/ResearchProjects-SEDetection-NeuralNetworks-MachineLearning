<Block for 0x4001ed, 66 bytes>
0x4001ed:	endbr64	
0x4001f1:	push	rbp
0x4001f2:	mov	rbp, rsp
0x4001f5:	sub	rsp, 0x20
0x4001f9:	mov	rax, qword ptr fs:[0x28]
0x400202:	mov	qword ptr [rbp - 8], rax
0x400206:	xor	eax, eax
0x400208:	mov	rax, qword ptr [rip + 0x349]
0x40020f:	mov	qword ptr [rbp - 0x10], rax
0x400213:	lea	rdx, [rbp - 0x1c]
0x400217:	mov	rax, qword ptr [rbp - 0x10]
0x40021b:	lea	rsi, [rip + 0x346]
0x400222:	mov	rdi, rax
0x400225:	mov	eax, 0
0x40022a:	call	0x500000
<Block for 0x40022f, 5 bytes>
0x40022f:	cmp	eax, 1
0x400232:	jne	0x40025e
<Block for 0x400234, 16 bytes>
0x400234:	mov	dword ptr [rbp - 0x14], 0
0x40023b:	mov	dword ptr [rbp - 0x18], 0
0x400242:	jmp	0x40024c
<Block for 0x40025e, 16 bytes>
0x40025e:	nop	
0x40025f:	mov	rax, qword ptr [rbp - 8]
0x400263:	xor	rax, qword ptr fs:[0x28]
0x40026c:	je	0x400273
<Block for 0x40024c, 8 bytes>
0x40024c:	mov	eax, dword ptr [rbp - 0x1c]
0x40024f:	cmp	dword ptr [rbp - 0x18], eax
0x400252:	jl	0x400244
<Block for 0x400273, 2 bytes>
0x400273:	leave	
0x400274:	ret	
<Block for 0x40026e, 5 bytes>
0x40026e:	call	0x500010
<Block for 0x400244, 16 bytes>
0x400244:	add	dword ptr [rbp - 0x14], 1
0x400248:	add	dword ptr [rbp - 0x18], 1
0x40024c:	mov	eax, dword ptr [rbp - 0x1c]
0x40024f:	cmp	dword ptr [rbp - 0x18], eax
0x400252:	jl	0x400244
<Block for 0x400254, 10 bytes>
0x400254:	mov	eax, dword ptr [rbp - 0x14]
0x400257:	mov	edi, eax
0x400259:	call	0x500008
