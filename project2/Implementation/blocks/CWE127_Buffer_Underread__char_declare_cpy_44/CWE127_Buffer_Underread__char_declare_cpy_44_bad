<Block for 0x400081, 60 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	add	rsp, -0x80
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	lea	rax, [rip - 0xa3]
0x4000a3:	mov	qword ptr [rbp - 0x80], rax
0x4000a7:	lea	rax, [rbp - 0x70]
0x4000ab:	mov	edx, 0x63
0x4000b0:	mov	esi, 0x41
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500000
<Block for 0x4000bd, 29 bytes>
0x4000bd:	mov	byte ptr [rbp - 0xd], 0
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	sub	rax, 8
0x4000c9:	mov	qword ptr [rbp - 0x78], rax
0x4000cd:	mov	rax, qword ptr [rbp - 0x78]
0x4000d1:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	rdx
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 8]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x4000ef, 2 bytes>
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500018
