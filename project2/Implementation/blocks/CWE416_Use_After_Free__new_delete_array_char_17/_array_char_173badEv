<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400069
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 0x64
0x400026:	call	0x500000
<Block for 0x400069, 13 bytes>
0x400069:	mov	dword ptr [rbp - 0xc], 0
0x400070:	cmp	dword ptr [rbp - 0xc], 0
0x400074:	jg	0x400088
<Block for 0x40002b, 26 bytes>
0x40002b:	mov	qword ptr [rbp - 8], rax
0x40002f:	mov	rax, qword ptr [rbp - 8]
0x400033:	mov	edx, 0x63
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400076, 12 bytes>
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500018
<Block for 0x400088, 3 bytes>
0x400088:	nop	
0x400089:	leave	
0x40008a:	ret	
<Block for 0x400045, 18 bytes>
0x400045:	mov	rax, qword ptr [rbp - 8]
0x400049:	add	rax, 0x63
0x40004d:	mov	byte ptr [rax], 0
0x400050:	cmp	qword ptr [rbp - 8], 0
0x400055:	je	0x400063
<Block for 0x400082, 6 bytes>
0x400082:	add	dword ptr [rbp - 0xc], 1
0x400086:	jmp	0x400070
<Block for 0x400063, 6 bytes>
0x400063:	add	dword ptr [rbp - 0x10], 1
0x400067:	jmp	0x40001b
<Block for 0x400057, 12 bytes>
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
<Block for 0x400070, 6 bytes>
0x400070:	cmp	dword ptr [rbp - 0xc], 0
0x400074:	jg	0x400088
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400069
