<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xa8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x90]
0x400026:	mov	rdi, rax
0x400029:	call	0x40073e
<Block for 0x40002e, 10 bytes>
0x40002e:	mov	edi, 0x64
0x400033:	call	0x500000
<Block for 0x400038, 17 bytes>
0x400038:	mov	qword ptr [rbp - 0xa8], rax
0x40003f:	cmp	qword ptr [rbp - 0xa8], 0
0x400047:	jne	0x400053
<Block for 0x400049, 10 bytes>
0x400049:	mov	edi, 0xffffffff
0x40004e:	call	0x500008
<Block for 0x400053, 35 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0xa8]
0x40005a:	mov	byte ptr [rax], 0
0x40005d:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400067:	mov	rax, qword ptr [rbp - 0xa8]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500010
<Block for 0x400076, 27 bytes>
0x400076:	mov	qword ptr [rbp - 0xa0], rax
0x40007d:	mov	edx, 6
0x400082:	mov	esi, 1
0x400087:	mov	edi, 2
0x40008c:	call	0x500018
<Block for 0x400091, 19 bytes>
0x400091:	mov	dword ptr [rbp - 0xb0], eax
0x400097:	cmp	dword ptr [rbp - 0xb0], -1
0x40009e:	je	0x4001d7
<Block for 0x4001d7, 3 bytes>
0x4001d7:	nop	
0x4001d8:	jmp	0x4001db
<Block for 0x4000a4, 22 bytes>
0x4000a4:	lea	rax, [rbp - 0x30]
0x4000a8:	mov	edx, 0x10
0x4000ad:	mov	esi, 0
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500020
<Block for 0x4001db, 9 bytes>
0x4001db:	cmp	dword ptr [rbp - 0xb0], -1
0x4001e2:	je	0x4001f1
<Block for 0x4000ba, 18 bytes>
0x4000ba:	mov	word ptr [rbp - 0x30], 2
0x4000c0:	lea	rdi, [rip + 0x569]
0x4000c7:	call	0x500028
<Block for 0x4001f1, 29 bytes>
0x4001f1:	mov	dword ptr [rbp - 0x60], 0
0x4001f8:	lea	rdx, [rbp - 0x60]
0x4001fc:	lea	rax, [rbp - 0x90]
0x400203:	mov	rsi, rdx
0x400206:	mov	rdi, rax
0x400209:	call	0x4008f6
<Block for 0x4001e4, 13 bytes>
0x4001e4:	mov	eax, dword ptr [rbp - 0xb0]
0x4001ea:	mov	edi, eax
0x4001ec:	call	0x500050
<Block for 0x4000cc, 13 bytes>
0x4000cc:	mov	dword ptr [rbp - 0x2c], eax
0x4000cf:	mov	edi, 0x6987
0x4000d4:	call	0x500030
<Block for 0x40020e, 39 bytes>
0x40020e:	mov	rdx, qword ptr [rbp - 0xa8]
0x400215:	mov	qword ptr [rax], rdx
0x400218:	mov	dword ptr [rbp - 0x60], 1
0x40021f:	lea	rdx, [rbp - 0x60]
0x400223:	lea	rax, [rbp - 0x90]
0x40022a:	mov	rsi, rdx
0x40022d:	mov	rdi, rax
0x400230:	call	0x4008f6
<Block for 0x4000d9, 29 bytes>
0x4000d9:	mov	word ptr [rbp - 0x2e], ax
0x4000dd:	lea	rcx, [rbp - 0x30]
0x4000e1:	mov	eax, dword ptr [rbp - 0xb0]
0x4000e7:	mov	edx, 0x10
0x4000ec:	mov	rsi, rcx
0x4000ef:	mov	edi, eax
0x4000f1:	call	0x500038
<Block for 0x400235, 39 bytes>
0x400235:	mov	rdx, qword ptr [rbp - 0xa8]
0x40023c:	mov	qword ptr [rax], rdx
0x40023f:	mov	dword ptr [rbp - 0x60], 2
0x400246:	lea	rdx, [rbp - 0x60]
0x40024a:	lea	rax, [rbp - 0x90]
0x400251:	mov	rsi, rdx
0x400254:	mov	rdi, rax
0x400257:	call	0x4008f6
<Block for 0x4000f6, 14 bytes>
0x4000f6:	cmp	eax, -1
0x4000f9:	sete	al
0x4000fc:	test	al, al
0x4000fe:	jne	0x4001da
<Block for 0x40025c, 32 bytes>
0x40025c:	mov	rdx, qword ptr [rbp - 0xa8]
0x400263:	mov	qword ptr [rax], rdx
0x400266:	lea	rdx, [rbp - 0x90]
0x40026d:	lea	rax, [rbp - 0x60]
0x400271:	mov	rsi, rdx
0x400274:	mov	rdi, rax
0x400277:	call	0x40077e
<Block for 0x400104, 51 bytes>
0x400104:	mov	eax, 0x63
0x400109:	sub	rax, qword ptr [rbp - 0xa0]
0x400110:	mov	rdx, rax
0x400113:	mov	rcx, qword ptr [rbp - 0xa8]
0x40011a:	mov	rax, qword ptr [rbp - 0xa0]
0x400121:	lea	rsi, [rcx + rax]
0x400125:	mov	eax, dword ptr [rbp - 0xb0]
0x40012b:	mov	ecx, 0
0x400130:	mov	edi, eax
0x400132:	call	0x500040
<Block for 0x4001da, 1 bytes>
0x4001da:	nop	
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rax, [rbp - 0x60]
0x400280:	mov	rdi, rax
0x400283:	call	0x500058
<Block for 0x400137, 19 bytes>
0x400137:	mov	dword ptr [rbp - 0xac], eax
0x40013d:	cmp	dword ptr [rbp - 0xac], -1
0x400144:	je	0x4001db
<Block for 0x400288, 12 bytes>
0x400288:	lea	rax, [rbp - 0x60]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x40075e
<Block for 0x40014a, 13 bytes>
0x40014a:	cmp	dword ptr [rbp - 0xac], 0
0x400151:	je	0x4001db
<Block for 0x400294, 15 bytes>
0x400294:	lea	rax, [rbp - 0x90]
0x40029b:	mov	rdi, rax
0x40029e:	call	0x40075e
<Block for 0x400157, 52 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0xac]
0x40015d:	movsxd	rdx, eax
0x400160:	mov	rax, qword ptr [rbp - 0xa0]
0x400167:	add	rdx, rax
0x40016a:	mov	rax, qword ptr [rbp - 0xa8]
0x400171:	add	rax, rdx
0x400174:	mov	byte ptr [rax], 0
0x400177:	mov	rax, qword ptr [rbp - 0xa8]
0x40017e:	mov	esi, 0xd
0x400183:	mov	rdi, rax
0x400186:	call	0x500048
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 0x18]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002f0
<Block for 0x40018b, 17 bytes>
0x40018b:	mov	qword ptr [rbp - 0x98], rax
0x400192:	cmp	qword ptr [rbp - 0x98], 0
0x40019a:	je	0x4001a6
<Block for 0x4002f0, 10 bytes>
0x4002f0:	add	rsp, 0xa8
0x4002f7:	pop	rbx
0x4002f8:	pop	rbp
0x4002f9:	ret	
<Block for 0x4002b3, 2 bytes>
0x4002b3:	jmp	0x4002eb
<Block for 0x4001a6, 20 bytes>
0x4001a6:	mov	rax, qword ptr [rbp - 0xa8]
0x4001ad:	mov	esi, 0xa
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500048
<Block for 0x40019c, 30 bytes>
0x40019c:	mov	rax, qword ptr [rbp - 0x98]
0x4001a3:	mov	byte ptr [rax], 0
0x4001a6:	mov	rax, qword ptr [rbp - 0xa8]
0x4001ad:	mov	esi, 0xa
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500048
<Block for 0x4002eb, 5 bytes>
0x4002eb:	call	0x500068
<Block for 0x4001ba, 17 bytes>
0x4001ba:	mov	qword ptr [rbp - 0x98], rax
0x4001c1:	cmp	qword ptr [rbp - 0x98], 0
0x4001c9:	je	0x4001db
<Block for 0x4001cb, 12 bytes>
0x4001cb:	mov	rax, qword ptr [rbp - 0x98]
0x4001d2:	mov	byte ptr [rax], 0
0x4001d5:	jmp	0x4001db
