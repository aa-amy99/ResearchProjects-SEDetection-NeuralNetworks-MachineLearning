<Block for 0x4002fa, 46 bytes>
0x4002fa:	endbr64	
0x4002fe:	push	rbp
0x4002ff:	mov	rbp, rsp
0x400302:	push	rbx
0x400303:	sub	rsp, 0xa8
0x40030a:	mov	rax, qword ptr fs:[0x28]
0x400313:	mov	qword ptr [rbp - 0x18], rax
0x400317:	xor	eax, eax
0x400319:	lea	rax, [rbp - 0x90]
0x400320:	mov	rdi, rax
0x400323:	call	0x40073e
<Block for 0x400328, 10 bytes>
0x400328:	mov	edi, 0x64
0x40032d:	call	0x500000
<Block for 0x400332, 17 bytes>
0x400332:	mov	qword ptr [rbp - 0xa8], rax
0x400339:	cmp	qword ptr [rbp - 0xa8], 0
0x400341:	jne	0x40034d
<Block for 0x400343, 10 bytes>
0x400343:	mov	edi, 0xffffffff
0x400348:	call	0x500008
<Block for 0x40034d, 35 bytes>
0x40034d:	mov	rax, qword ptr [rbp - 0xa8]
0x400354:	mov	byte ptr [rax], 0
0x400357:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400361:	mov	rax, qword ptr [rbp - 0xa8]
0x400368:	mov	rdi, rax
0x40036b:	call	0x500010
<Block for 0x400370, 27 bytes>
0x400370:	mov	qword ptr [rbp - 0xa0], rax
0x400377:	mov	edx, 6
0x40037c:	mov	esi, 1
0x400381:	mov	edi, 2
0x400386:	call	0x500018
<Block for 0x40038b, 19 bytes>
0x40038b:	mov	dword ptr [rbp - 0xb0], eax
0x400391:	cmp	dword ptr [rbp - 0xb0], -1
0x400398:	je	0x4004d1
<Block for 0x4004d1, 3 bytes>
0x4004d1:	nop	
0x4004d2:	jmp	0x4004d5
<Block for 0x40039e, 22 bytes>
0x40039e:	lea	rax, [rbp - 0x30]
0x4003a2:	mov	edx, 0x10
0x4003a7:	mov	esi, 0
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x500020
<Block for 0x4004d5, 9 bytes>
0x4004d5:	cmp	dword ptr [rbp - 0xb0], -1
0x4004dc:	je	0x4004eb
<Block for 0x4003b4, 18 bytes>
0x4003b4:	mov	word ptr [rbp - 0x30], 2
0x4003ba:	lea	rdi, [rip + 0x26f]
0x4003c1:	call	0x500028
<Block for 0x4004eb, 29 bytes>
0x4004eb:	mov	dword ptr [rbp - 0x60], 0
0x4004f2:	lea	rdx, [rbp - 0x60]
0x4004f6:	lea	rax, [rbp - 0x90]
0x4004fd:	mov	rsi, rdx
0x400500:	mov	rdi, rax
0x400503:	call	0x4008f6
<Block for 0x4004de, 13 bytes>
0x4004de:	mov	eax, dword ptr [rbp - 0xb0]
0x4004e4:	mov	edi, eax
0x4004e6:	call	0x500050
<Block for 0x4003c6, 13 bytes>
0x4003c6:	mov	dword ptr [rbp - 0x2c], eax
0x4003c9:	mov	edi, 0x6987
0x4003ce:	call	0x500030
<Block for 0x400508, 39 bytes>
0x400508:	mov	rdx, qword ptr [rbp - 0xa8]
0x40050f:	mov	qword ptr [rax], rdx
0x400512:	mov	dword ptr [rbp - 0x60], 1
0x400519:	lea	rdx, [rbp - 0x60]
0x40051d:	lea	rax, [rbp - 0x90]
0x400524:	mov	rsi, rdx
0x400527:	mov	rdi, rax
0x40052a:	call	0x4008f6
<Block for 0x4003d3, 29 bytes>
0x4003d3:	mov	word ptr [rbp - 0x2e], ax
0x4003d7:	lea	rcx, [rbp - 0x30]
0x4003db:	mov	eax, dword ptr [rbp - 0xb0]
0x4003e1:	mov	edx, 0x10
0x4003e6:	mov	rsi, rcx
0x4003e9:	mov	edi, eax
0x4003eb:	call	0x500038
<Block for 0x40052f, 39 bytes>
0x40052f:	mov	rdx, qword ptr [rbp - 0xa8]
0x400536:	mov	qword ptr [rax], rdx
0x400539:	mov	dword ptr [rbp - 0x60], 2
0x400540:	lea	rdx, [rbp - 0x60]
0x400544:	lea	rax, [rbp - 0x90]
0x40054b:	mov	rsi, rdx
0x40054e:	mov	rdi, rax
0x400551:	call	0x4008f6
<Block for 0x4003f0, 14 bytes>
0x4003f0:	cmp	eax, -1
0x4003f3:	sete	al
0x4003f6:	test	al, al
0x4003f8:	jne	0x4004d4
<Block for 0x400556, 32 bytes>
0x400556:	mov	rdx, qword ptr [rbp - 0xa8]
0x40055d:	mov	qword ptr [rax], rdx
0x400560:	lea	rdx, [rbp - 0x90]
0x400567:	lea	rax, [rbp - 0x60]
0x40056b:	mov	rsi, rdx
0x40056e:	mov	rdi, rax
0x400571:	call	0x40077e
<Block for 0x4003fe, 51 bytes>
0x4003fe:	mov	eax, 0x63
0x400403:	sub	rax, qword ptr [rbp - 0xa0]
0x40040a:	mov	rdx, rax
0x40040d:	mov	rcx, qword ptr [rbp - 0xa8]
0x400414:	mov	rax, qword ptr [rbp - 0xa0]
0x40041b:	lea	rsi, [rcx + rax]
0x40041f:	mov	eax, dword ptr [rbp - 0xb0]
0x400425:	mov	ecx, 0
0x40042a:	mov	edi, eax
0x40042c:	call	0x500040
<Block for 0x4004d4, 1 bytes>
0x4004d4:	nop	
<Block for 0x400576, 12 bytes>
0x400576:	lea	rax, [rbp - 0x60]
0x40057a:	mov	rdi, rax
0x40057d:	call	0x500070
<Block for 0x400431, 19 bytes>
0x400431:	mov	dword ptr [rbp - 0xac], eax
0x400437:	cmp	dword ptr [rbp - 0xac], -1
0x40043e:	je	0x4004d5
<Block for 0x400582, 12 bytes>
0x400582:	lea	rax, [rbp - 0x60]
0x400586:	mov	rdi, rax
0x400589:	call	0x40075e
<Block for 0x400444, 13 bytes>
0x400444:	cmp	dword ptr [rbp - 0xac], 0
0x40044b:	je	0x4004d5
<Block for 0x40058e, 15 bytes>
0x40058e:	lea	rax, [rbp - 0x90]
0x400595:	mov	rdi, rax
0x400598:	call	0x40075e
<Block for 0x400451, 52 bytes>
0x400451:	mov	eax, dword ptr [rbp - 0xac]
0x400457:	movsxd	rdx, eax
0x40045a:	mov	rax, qword ptr [rbp - 0xa0]
0x400461:	add	rdx, rax
0x400464:	mov	rax, qword ptr [rbp - 0xa8]
0x40046b:	add	rax, rdx
0x40046e:	mov	byte ptr [rax], 0
0x400471:	mov	rax, qword ptr [rbp - 0xa8]
0x400478:	mov	esi, 0xd
0x40047d:	mov	rdi, rax
0x400480:	call	0x500048
<Block for 0x40059d, 16 bytes>
0x40059d:	nop	
0x40059e:	mov	rax, qword ptr [rbp - 0x18]
0x4005a2:	xor	rax, qword ptr fs:[0x28]
0x4005ab:	je	0x4005ea
<Block for 0x400485, 17 bytes>
0x400485:	mov	qword ptr [rbp - 0x98], rax
0x40048c:	cmp	qword ptr [rbp - 0x98], 0
0x400494:	je	0x4004a0
<Block for 0x4005ea, 10 bytes>
0x4005ea:	add	rsp, 0xa8
0x4005f1:	pop	rbx
0x4005f2:	pop	rbp
0x4005f3:	ret	
<Block for 0x4005ad, 2 bytes>
0x4005ad:	jmp	0x4005e5
<Block for 0x4004a0, 20 bytes>
0x4004a0:	mov	rax, qword ptr [rbp - 0xa8]
0x4004a7:	mov	esi, 0xa
0x4004ac:	mov	rdi, rax
0x4004af:	call	0x500048
<Block for 0x400496, 30 bytes>
0x400496:	mov	rax, qword ptr [rbp - 0x98]
0x40049d:	mov	byte ptr [rax], 0
0x4004a0:	mov	rax, qword ptr [rbp - 0xa8]
0x4004a7:	mov	esi, 0xa
0x4004ac:	mov	rdi, rax
0x4004af:	call	0x500048
<Block for 0x4005e5, 5 bytes>
0x4005e5:	call	0x500068
<Block for 0x4004b4, 17 bytes>
0x4004b4:	mov	qword ptr [rbp - 0x98], rax
0x4004bb:	cmp	qword ptr [rbp - 0x98], 0
0x4004c3:	je	0x4004d5
<Block for 0x4004c5, 12 bytes>
0x4004c5:	mov	rax, qword ptr [rbp - 0x98]
0x4004cc:	mov	byte ptr [rax], 0
0x4004cf:	jmp	0x4004d5
