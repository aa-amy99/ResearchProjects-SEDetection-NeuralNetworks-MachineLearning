<Block for 0x400147, 22 bytes>
0x400147:	endbr64	
0x40014b:	push	rbp
0x40014c:	mov	rbp, rsp
0x40014f:	sub	rsp, 0x20
0x400153:	mov	edi, 0x64
0x400158:	call	0x500000
<Block for 0x40015d, 11 bytes>
0x40015d:	mov	qword ptr [rbp - 0x10], rax
0x400161:	cmp	qword ptr [rbp - 0x10], 0
0x400166:	jne	0x400172
<Block for 0x400168, 10 bytes>
0x400168:	mov	edi, 0xffffffff
0x40016d:	call	0x500008
<Block for 0x400172, 19 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0x10]
0x400176:	mov	byte ptr [rax], 0
0x400179:	mov	rax, qword ptr [rbp - 0x10]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500010
<Block for 0x400185, 23 bytes>
0x400185:	mov	qword ptr [rbp - 8], rax
0x400189:	mov	eax, 0x64
0x40018e:	sub	rax, qword ptr [rbp - 8]
0x400192:	cmp	rax, 1
0x400196:	jbe	0x400228
<Block for 0x400228, 10 bytes>
0x400228:	mov	eax, 0
0x40022d:	call	0x40000f
<Block for 0x40019c, 44 bytes>
0x40019c:	mov	rax, qword ptr [rip + 0xffe75]
0x4001a3:	mov	rdx, qword ptr [rbp - 8]
0x4001a7:	mov	ecx, 0x64
0x4001ac:	sub	ecx, edx
0x4001ae:	mov	edx, ecx
0x4001b0:	mov	esi, edx
0x4001b2:	mov	rcx, qword ptr [rbp - 0x10]
0x4001b6:	mov	rdx, qword ptr [rbp - 8]
0x4001ba:	add	rcx, rdx
0x4001bd:	mov	rdx, rax
0x4001c0:	mov	rdi, rcx
0x4001c3:	call	0x500020
<Block for 0x400232, 4 bytes>
0x400232:	test	eax, eax
0x400234:	je	0x400244
<Block for 0x4001c8, 5 bytes>
0x4001c8:	test	rax, rax
0x4001cb:	je	0x40020e
<Block for 0x400244, 10 bytes>
0x400244:	mov	qword ptr [rbp - 0x18], 0
0x40024c:	jmp	0x400273
<Block for 0x400236, 12 bytes>
0x400236:	lea	rdi, [rip + 0x1d5]
0x40023d:	call	0x500028
<Block for 0x40020e, 12 bytes>
0x40020e:	lea	rdi, [rip + 0x1dd]
0x400215:	call	0x500028
<Block for 0x4001cd, 12 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x10]
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500010
<Block for 0x400273, 12 bytes>
0x400273:	mov	rax, qword ptr [rbp - 0x10]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500010
<Block for 0x400242, 2 bytes>
0x400242:	jmp	0x400291
<Block for 0x40021a, 24 bytes>
0x40021a:	mov	rdx, qword ptr [rbp - 0x10]
0x40021e:	mov	rax, qword ptr [rbp - 8]
0x400222:	add	rax, rdx
0x400225:	mov	byte ptr [rax], 0
0x400228:	mov	eax, 0
0x40022d:	call	0x40000f
<Block for 0x4001d9, 11 bytes>
0x4001d9:	mov	qword ptr [rbp - 8], rax
0x4001dd:	cmp	qword ptr [rbp - 8], 0
0x4001e2:	je	0x400228
<Block for 0x40027f, 6 bytes>
0x40027f:	cmp	qword ptr [rbp - 0x18], rax
0x400283:	jb	0x40024e
<Block for 0x400291, 3 bytes>
0x400291:	nop	
0x400292:	leave	
0x400293:	ret	
<Block for 0x4001e4, 22 bytes>
0x4001e4:	mov	rax, qword ptr [rbp - 8]
0x4001e8:	lea	rdx, [rax - 1]
0x4001ec:	mov	rax, qword ptr [rbp - 0x10]
0x4001f0:	add	rax, rdx
0x4001f3:	movzx	eax, byte ptr [rax]
0x4001f6:	cmp	al, 0xa
0x4001f8:	jne	0x400228
<Block for 0x40024e, 18 bytes>
0x40024e:	mov	rdx, qword ptr [rbp - 0x10]
0x400252:	mov	rax, qword ptr [rbp - 0x18]
0x400256:	add	rax, rdx
0x400259:	movzx	eax, byte ptr [rax]
0x40025c:	cmp	al, 0x53
0x40025e:	jne	0x40026e
<Block for 0x400285, 12 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x10]
0x400289:	mov	rdi, rax
0x40028c:	call	0x500030
<Block for 0x4001fa, 20 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 8]
0x4001fe:	lea	rdx, [rax - 1]
0x400202:	mov	rax, qword ptr [rbp - 0x10]
0x400206:	add	rax, rdx
0x400209:	mov	byte ptr [rax], 0
0x40020c:	jmp	0x400228
<Block for 0x400260, 12 bytes>
0x400260:	lea	rdi, [rip + 0x19a]
0x400267:	call	0x500028
<Block for 0x40026e, 17 bytes>
0x40026e:	add	qword ptr [rbp - 0x18], 1
0x400273:	mov	rax, qword ptr [rbp - 0x10]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500010
<Block for 0x40026c, 2 bytes>
0x40026c:	jmp	0x400285
