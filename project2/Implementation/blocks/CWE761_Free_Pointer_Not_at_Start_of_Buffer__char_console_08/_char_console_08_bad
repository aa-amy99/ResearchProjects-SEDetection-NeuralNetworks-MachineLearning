<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	edi, 0x64
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	qword ptr [rbp - 0x10], rax
0x400038:	cmp	qword ptr [rbp - 0x10], 0
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x10]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x10]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 23 bytes>
0x40005c:	mov	qword ptr [rbp - 8], rax
0x400060:	mov	eax, 0x64
0x400065:	sub	rax, qword ptr [rbp - 8]
0x400069:	cmp	rax, 1
0x40006d:	jbe	0x4000ff
<Block for 0x4000ff, 10 bytes>
0x4000ff:	mov	eax, 0
0x400104:	call	0x400000
<Block for 0x400073, 44 bytes>
0x400073:	mov	rax, qword ptr [rip + 0xfff9e]
0x40007a:	mov	rdx, qword ptr [rbp - 8]
0x40007e:	mov	ecx, 0x64
0x400083:	sub	ecx, edx
0x400085:	mov	edx, ecx
0x400087:	mov	esi, edx
0x400089:	mov	rcx, qword ptr [rbp - 0x10]
0x40008d:	mov	rdx, qword ptr [rbp - 8]
0x400091:	add	rcx, rdx
0x400094:	mov	rdx, rax
0x400097:	mov	rdi, rcx
0x40009a:	call	0x500020
<Block for 0x400109, 4 bytes>
0x400109:	test	eax, eax
0x40010b:	je	0x400144
<Block for 0x40009f, 5 bytes>
0x40009f:	test	rax, rax
0x4000a2:	je	0x4000e5
<Block for 0x400144, 3 bytes>
0x400144:	nop	
0x400145:	leave	
0x400146:	ret	
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x40012d
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rdi, [rip + 0x306]
0x4000ec:	call	0x500028
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
<Block for 0x40012d, 11 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x10]
0x400131:	movzx	eax, byte ptr [rax]
0x400134:	test	al, al
0x400136:	jne	0x40010f
<Block for 0x4000f1, 24 bytes>
0x4000f1:	mov	rdx, qword ptr [rbp - 0x10]
0x4000f5:	mov	rax, qword ptr [rbp - 8]
0x4000f9:	add	rax, rdx
0x4000fc:	mov	byte ptr [rax], 0
0x4000ff:	mov	eax, 0
0x400104:	call	0x400000
<Block for 0x4000b0, 11 bytes>
0x4000b0:	mov	qword ptr [rbp - 8], rax
0x4000b4:	cmp	qword ptr [rbp - 8], 0
0x4000b9:	je	0x4000ff
<Block for 0x400138, 12 bytes>
0x400138:	mov	rax, qword ptr [rbp - 0x10]
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500030
<Block for 0x40010f, 11 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x10]
0x400113:	movzx	eax, byte ptr [rax]
0x400116:	cmp	al, 0x53
0x400118:	jne	0x400128
<Block for 0x4000bb, 22 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	lea	rdx, [rax - 1]
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	add	rax, rdx
0x4000ca:	movzx	eax, byte ptr [rax]
0x4000cd:	cmp	al, 0xa
0x4000cf:	jne	0x4000ff
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rdi, [rip + 0x2e0]
0x400121:	call	0x500028
<Block for 0x400128, 16 bytes>
0x400128:	add	qword ptr [rbp - 0x10], 1
0x40012d:	mov	rax, qword ptr [rbp - 0x10]
0x400131:	movzx	eax, byte ptr [rax]
0x400134:	test	al, al
0x400136:	jne	0x40010f
<Block for 0x4000d1, 20 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	lea	rdx, [rax - 1]
0x4000d9:	mov	rax, qword ptr [rbp - 0x10]
0x4000dd:	add	rax, rdx
0x4000e0:	mov	byte ptr [rax], 0
0x4000e3:	jmp	0x4000ff
<Block for 0x400126, 2 bytes>
0x400126:	jmp	0x400138
