<Block for 0x4000bc, 55 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	sub	rsp, 0xf0
0x4000cb:	mov	rax, qword ptr fs:[0x28]
0x4000d4:	mov	qword ptr [rbp - 8], rax
0x4000d8:	xor	eax, eax
0x4000da:	lea	rax, [rbp - 0xe0]
0x4000e1:	mov	edx, 0x63
0x4000e6:	mov	esi, 0x41
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500000
<Block for 0x4000f3, 13 bytes>
0x4000f3:	mov	byte ptr [rbp - 0x7d], 0
0x4000f7:	mov	eax, 0
0x4000fc:	test	eax, eax
0x4000fe:	je	0x40010e
<Block for 0x40010e, 36 bytes>
0x40010e:	lea	rax, [rbp - 0xe0]
0x400115:	mov	qword ptr [rbp - 0xe8], rax
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x15d]
0x400107:	call	0x500018
<Block for 0x400132, 16 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500008
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x40011c
<Block for 0x400142, 25 bytes>
0x400142:	mov	rdx, rax
0x400145:	mov	rcx, qword ptr [rbp - 0xe8]
0x40014c:	lea	rax, [rbp - 0x70]
0x400150:	mov	rsi, rcx
0x400153:	mov	rdi, rax
0x400156:	call	0x500010
<Block for 0x40011c, 22 bytes>
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x40015b, 16 bytes>
0x40015b:	mov	byte ptr [rbp - 0xd], 0
0x40015f:	lea	rax, [rbp - 0x70]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500020
