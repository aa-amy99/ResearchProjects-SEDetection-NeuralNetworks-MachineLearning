<Block for 0x400182, 55 bytes>
0x400182:	endbr64	
0x400186:	push	rbp
0x400187:	mov	rbp, rsp
0x40018a:	sub	rsp, 0xf0
0x400191:	mov	rax, qword ptr fs:[0x28]
0x40019a:	mov	qword ptr [rbp - 8], rax
0x40019e:	xor	eax, eax
0x4001a0:	lea	rax, [rbp - 0xe0]
0x4001a7:	mov	edx, 0x63
0x4001ac:	mov	esi, 0x41
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500000
<Block for 0x4001b9, 13 bytes>
0x4001b9:	mov	byte ptr [rbp - 0x7d], 0
0x4001bd:	mov	eax, 1
0x4001c2:	test	eax, eax
0x4001c4:	je	0x4001d4
<Block for 0x4001d4, 22 bytes>
0x4001d4:	lea	rax, [rbp - 0x70]
0x4001d8:	mov	edx, 0x63
0x4001dd:	mov	esi, 0x43
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x500000
<Block for 0x4001c6, 36 bytes>
0x4001c6:	lea	rax, [rbp - 0xe0]
0x4001cd:	mov	qword ptr [rbp - 0xe8], rax
0x4001d4:	lea	rax, [rbp - 0x70]
0x4001d8:	mov	edx, 0x63
0x4001dd:	mov	esi, 0x43
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x500000
<Block for 0x4001ea, 16 bytes>
0x4001ea:	mov	byte ptr [rbp - 0xd], 0
0x4001ee:	lea	rax, [rbp - 0x70]
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500008
<Block for 0x4001fa, 25 bytes>
0x4001fa:	mov	rdx, rax
0x4001fd:	mov	rcx, qword ptr [rbp - 0xe8]
0x400204:	lea	rax, [rbp - 0x70]
0x400208:	mov	rsi, rcx
0x40020b:	mov	rdi, rax
0x40020e:	call	0x500010
<Block for 0x400213, 16 bytes>
0x400213:	mov	byte ptr [rbp - 0xd], 0
0x400217:	lea	rax, [rbp - 0x70]
0x40021b:	mov	rdi, rax
0x40021e:	call	0x500018
<Block for 0x400223, 16 bytes>
0x400223:	nop	
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	xor	rax, qword ptr fs:[0x28]
0x400231:	je	0x400238
<Block for 0x400238, 2 bytes>
0x400238:	leave	
0x400239:	ret	
<Block for 0x400233, 5 bytes>
0x400233:	call	0x500020
