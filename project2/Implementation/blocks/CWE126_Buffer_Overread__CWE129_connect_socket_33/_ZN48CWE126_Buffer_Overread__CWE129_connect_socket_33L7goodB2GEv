<Block for 0x400217, 69 bytes>
0x400217:	endbr64	
0x40021b:	push	rbp
0x40021c:	mov	rbp, rsp
0x40021f:	sub	rsp, 0x60
0x400223:	mov	rax, qword ptr fs:[0x28]
0x40022c:	mov	qword ptr [rbp - 8], rax
0x400230:	xor	eax, eax
0x400232:	lea	rax, [rbp - 0x58]
0x400236:	mov	qword ptr [rbp - 0x48], rax
0x40023a:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400241:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400248:	mov	edx, 6
0x40024d:	mov	esi, 1
0x400252:	mov	edi, 2
0x400257:	call	0x500000
<Block for 0x40025c, 13 bytes>
0x40025c:	mov	dword ptr [rbp - 0x54], eax
0x40025f:	cmp	dword ptr [rbp - 0x54], -1
0x400263:	je	0x400304
<Block for 0x400304, 3 bytes>
0x400304:	nop	
0x400305:	jmp	0x400308
<Block for 0x400269, 22 bytes>
0x400269:	lea	rax, [rbp - 0x40]
0x40026d:	mov	edx, 0x10
0x400272:	mov	esi, 0
0x400277:	mov	rdi, rax
0x40027a:	call	0x500008
<Block for 0x400308, 6 bytes>
0x400308:	cmp	dword ptr [rbp - 0x54], -1
0x40030c:	je	0x400318
<Block for 0x40027f, 18 bytes>
0x40027f:	mov	word ptr [rbp - 0x40], 2
0x400285:	lea	rdi, [rip + 0x114]
0x40028c:	call	0x500010
<Block for 0x400318, 55 bytes>
0x400318:	mov	rax, qword ptr [rbp - 0x48]
0x40031c:	mov	eax, dword ptr [rax]
0x40031e:	mov	dword ptr [rbp - 0x4c], eax
0x400321:	mov	qword ptr [rbp - 0x40], 0
0x400329:	mov	qword ptr [rbp - 0x38], 0
0x400331:	mov	qword ptr [rbp - 0x30], 0
0x400339:	mov	qword ptr [rbp - 0x28], 0
0x400341:	mov	qword ptr [rbp - 0x20], 0
0x400349:	cmp	dword ptr [rbp - 0x4c], 0
0x40034d:	js	0x400367
<Block for 0x40030e, 10 bytes>
0x40030e:	mov	eax, dword ptr [rbp - 0x54]
0x400311:	mov	edi, eax
0x400313:	call	0x500038
<Block for 0x400291, 13 bytes>
0x400291:	mov	dword ptr [rbp - 0x3c], eax
0x400294:	mov	edi, 0x6987
0x400299:	call	0x500018
<Block for 0x400367, 12 bytes>
0x400367:	lea	rdi, [rip + 0x62]
0x40036e:	call	0x500048
<Block for 0x40034f, 6 bytes>
0x40034f:	cmp	dword ptr [rbp - 0x4c], 9
0x400353:	jg	0x400367
<Block for 0x40029e, 26 bytes>
0x40029e:	mov	word ptr [rbp - 0x3e], ax
0x4002a2:	lea	rcx, [rbp - 0x40]
0x4002a6:	mov	eax, dword ptr [rbp - 0x54]
0x4002a9:	mov	edx, 0x10
0x4002ae:	mov	rsi, rcx
0x4002b1:	mov	edi, eax
0x4002b3:	call	0x500020
<Block for 0x400373, 16 bytes>
0x400373:	nop	
0x400374:	mov	rax, qword ptr [rbp - 8]
0x400378:	xor	rax, qword ptr fs:[0x28]
0x400381:	je	0x400388
<Block for 0x400355, 16 bytes>
0x400355:	mov	eax, dword ptr [rbp - 0x4c]
0x400358:	cdqe	
0x40035a:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40035e:	mov	edi, eax
0x400360:	call	0x500040
<Block for 0x4002b8, 10 bytes>
0x4002b8:	cmp	eax, -1
0x4002bb:	sete	al
0x4002be:	test	al, al
0x4002c0:	jne	0x400307
<Block for 0x400388, 2 bytes>
0x400388:	leave	
0x400389:	ret	
<Block for 0x400383, 5 bytes>
0x400383:	call	0x500050
<Block for 0x400365, 2 bytes>
0x400365:	jmp	0x400373
<Block for 0x4002c2, 24 bytes>
0x4002c2:	lea	rsi, [rbp - 0x16]
0x4002c6:	mov	eax, dword ptr [rbp - 0x54]
0x4002c9:	mov	ecx, 0
0x4002ce:	mov	edx, 0xd
0x4002d3:	mov	edi, eax
0x4002d5:	call	0x500028
<Block for 0x400307, 1 bytes>
0x400307:	nop	
<Block for 0x4002da, 9 bytes>
0x4002da:	mov	dword ptr [rbp - 0x50], eax
0x4002dd:	cmp	dword ptr [rbp - 0x50], -1
0x4002e1:	je	0x400308
<Block for 0x4002e3, 6 bytes>
0x4002e3:	cmp	dword ptr [rbp - 0x50], 0
0x4002e7:	je	0x400308
<Block for 0x4002e9, 22 bytes>
0x4002e9:	mov	eax, dword ptr [rbp - 0x50]
0x4002ec:	cdqe	
0x4002ee:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002f3:	lea	rax, [rbp - 0x16]
0x4002f7:	mov	rdi, rax
0x4002fa:	call	0x500030
<Block for 0x4002ff, 5 bytes>
0x4002ff:	mov	dword ptr [rbp - 0x58], eax
0x400302:	jmp	0x400308
