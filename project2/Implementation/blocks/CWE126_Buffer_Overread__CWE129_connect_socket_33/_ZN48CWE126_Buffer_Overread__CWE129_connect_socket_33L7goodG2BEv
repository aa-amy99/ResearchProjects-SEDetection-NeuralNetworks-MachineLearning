<Block for 0x40016d, 104 bytes>
0x40016d:	endbr64	
0x400171:	push	rbp
0x400172:	mov	rbp, rsp
0x400175:	sub	rsp, 0x40
0x400179:	mov	rax, qword ptr fs:[0x28]
0x400182:	mov	qword ptr [rbp - 8], rax
0x400186:	xor	eax, eax
0x400188:	lea	rax, [rbp - 0x40]
0x40018c:	mov	qword ptr [rbp - 0x38], rax
0x400190:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400197:	mov	dword ptr [rbp - 0x40], 7
0x40019e:	mov	rax, qword ptr [rbp - 0x38]
0x4001a2:	mov	eax, dword ptr [rax]
0x4001a4:	mov	dword ptr [rbp - 0x3c], eax
0x4001a7:	mov	qword ptr [rbp - 0x30], 0
0x4001af:	mov	qword ptr [rbp - 0x28], 0
0x4001b7:	mov	qword ptr [rbp - 0x20], 0
0x4001bf:	mov	qword ptr [rbp - 0x18], 0
0x4001c7:	mov	qword ptr [rbp - 0x10], 0
0x4001cf:	cmp	dword ptr [rbp - 0x3c], 0
0x4001d3:	js	0x4001e7
<Block for 0x4001e7, 12 bytes>
0x4001e7:	lea	rdi, [rip + 0x1c2]
0x4001ee:	call	0x500048
<Block for 0x4001d5, 16 bytes>
0x4001d5:	mov	eax, dword ptr [rbp - 0x3c]
0x4001d8:	cdqe	
0x4001da:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001de:	mov	edi, eax
0x4001e0:	call	0x500040
<Block for 0x4001f3, 2 bytes>
0x4001f3:	jmp	0x400201
<Block for 0x4001e5, 2 bytes>
0x4001e5:	jmp	0x400201
<Block for 0x400201, 15 bytes>
0x400201:	mov	rax, qword ptr [rbp - 8]
0x400205:	xor	rax, qword ptr fs:[0x28]
0x40020e:	je	0x400215
<Block for 0x400215, 2 bytes>
0x400215:	leave	
0x400216:	ret	
<Block for 0x400210, 5 bytes>
0x400210:	call	0x500050
