<Block for 0x400253, 46 bytes>
0x400253:	endbr64	
0x400257:	push	rbp
0x400258:	mov	rbp, rsp
0x40025b:	push	rbx
0x40025c:	sub	rsp, 0xc8
0x400263:	mov	rax, qword ptr fs:[0x28]
0x40026c:	mov	qword ptr [rbp - 0x18], rax
0x400270:	xor	eax, eax
0x400272:	lea	rax, [rbp - 0xc0]
0x400279:	mov	rdi, rax
0x40027c:	call	0x400530
<Block for 0x400281, 163 bytes>
0x400281:	mov	qword ptr [rbp - 0x80], 0
0x400289:	mov	qword ptr [rbp - 0x78], 0
0x400291:	mov	qword ptr [rbp - 0x70], 0
0x400299:	mov	qword ptr [rbp - 0x68], 0
0x4002a1:	mov	qword ptr [rbp - 0x60], 0
0x4002a9:	mov	qword ptr [rbp - 0x58], 0
0x4002b1:	mov	qword ptr [rbp - 0x50], 0
0x4002b9:	mov	qword ptr [rbp - 0x48], 0
0x4002c1:	mov	qword ptr [rbp - 0x40], 0
0x4002c9:	mov	qword ptr [rbp - 0x38], 0
0x4002d1:	mov	qword ptr [rbp - 0x30], 0
0x4002d9:	mov	qword ptr [rbp - 0x28], 0
0x4002e1:	mov	dword ptr [rbp - 0x20], 0
0x4002e8:	lea	rax, [rbp - 0x80]
0x4002ec:	mov	qword ptr [rbp - 0xd0], rax
0x4002f3:	mov	rax, qword ptr [rbp - 0xd0]
0x4002fa:	movabs	rcx, 0x6e69622f7273752f
0x400304:	movabs	rbx, 0x616c2d20736c2f
0x40030e:	mov	qword ptr [rax], rcx
0x400311:	mov	qword ptr [rax + 8], rbx
0x400315:	lea	rax, [rbp - 0xc0]
0x40031c:	mov	rdi, rax
0x40031f:	call	0x4006c2
<Block for 0x400324, 32 bytes>
0x400324:	mov	qword ptr [rbp - 0xc8], rax
0x40032b:	lea	rdx, [rbp - 0xc8]
0x400332:	lea	rax, [rbp - 0xa0]
0x400339:	mov	rsi, rdx
0x40033c:	mov	rdi, rax
0x40033f:	call	0x400712
<Block for 0x400344, 37 bytes>
0x400344:	lea	rdx, [rbp - 0xd0]
0x40034b:	mov	rsi, qword ptr [rbp - 0xa0]
0x400352:	lea	rax, [rbp - 0xc0]
0x400359:	mov	rcx, rdx
0x40035c:	mov	edx, 1
0x400361:	mov	rdi, rax
0x400364:	call	0x400740
<Block for 0x400369, 15 bytes>
0x400369:	lea	rax, [rbp - 0xc0]
0x400370:	mov	rdi, rax
0x400373:	call	0x4006c2
<Block for 0x400378, 32 bytes>
0x400378:	mov	qword ptr [rbp - 0xc8], rax
0x40037f:	lea	rdx, [rbp - 0xc8]
0x400386:	lea	rax, [rbp - 0xa0]
0x40038d:	mov	rsi, rdx
0x400390:	mov	rdi, rax
0x400393:	call	0x400712
<Block for 0x400398, 37 bytes>
0x400398:	lea	rdx, [rbp - 0xd0]
0x40039f:	mov	rsi, qword ptr [rbp - 0xa0]
0x4003a6:	lea	rax, [rbp - 0xc0]
0x4003ad:	mov	rcx, rdx
0x4003b0:	mov	edx, 1
0x4003b5:	mov	rdi, rax
0x4003b8:	call	0x400740
<Block for 0x4003bd, 15 bytes>
0x4003bd:	lea	rax, [rbp - 0xc0]
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x4006c2
<Block for 0x4003cc, 32 bytes>
0x4003cc:	mov	qword ptr [rbp - 0xc8], rax
0x4003d3:	lea	rdx, [rbp - 0xc8]
0x4003da:	lea	rax, [rbp - 0xa0]
0x4003e1:	mov	rsi, rdx
0x4003e4:	mov	rdi, rax
0x4003e7:	call	0x400712
<Block for 0x4003ec, 37 bytes>
0x4003ec:	lea	rdx, [rbp - 0xd0]
0x4003f3:	mov	rsi, qword ptr [rbp - 0xa0]
0x4003fa:	lea	rax, [rbp - 0xc0]
0x400401:	mov	rcx, rdx
0x400404:	mov	edx, 1
0x400409:	mov	rdi, rax
0x40040c:	call	0x400740
<Block for 0x400411, 25 bytes>
0x400411:	lea	rdx, [rbp - 0xc0]
0x400418:	lea	rax, [rbp - 0xa0]
0x40041f:	mov	rsi, rdx
0x400422:	mov	rdi, rax
0x400425:	call	0x400806
<Block for 0x40042a, 15 bytes>
0x40042a:	lea	rax, [rbp - 0xa0]
0x400431:	mov	rdi, rax
0x400434:	call	0x500018
<Block for 0x400439, 15 bytes>
0x400439:	lea	rax, [rbp - 0xa0]
0x400440:	mov	rdi, rax
0x400443:	call	0x40067a
<Block for 0x400448, 15 bytes>
0x400448:	lea	rax, [rbp - 0xc0]
0x40044f:	mov	rdi, rax
0x400452:	call	0x40067a
<Block for 0x400457, 16 bytes>
0x400457:	nop	
0x400458:	mov	rax, qword ptr [rbp - 0x18]
0x40045c:	xor	rax, qword ptr fs:[0x28]
0x400465:	je	0x4004a7
<Block for 0x4004a7, 10 bytes>
0x4004a7:	add	rsp, 0xc8
0x4004ae:	pop	rbx
0x4004af:	pop	rbp
0x4004b0:	ret	
<Block for 0x400467, 2 bytes>
0x400467:	jmp	0x4004a2
<Block for 0x4004a2, 5 bytes>
0x4004a2:	call	0x500010
