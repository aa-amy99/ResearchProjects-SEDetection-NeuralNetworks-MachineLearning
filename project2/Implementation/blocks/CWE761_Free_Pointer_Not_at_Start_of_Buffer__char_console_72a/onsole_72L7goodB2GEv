<Block for 0x400249, 40 bytes>
0x400249:	endbr64	
0x40024d:	push	rbp
0x40024e:	mov	rbp, rsp
0x400251:	push	rbx
0x400252:	sub	rsp, 0x68
0x400256:	mov	rax, qword ptr fs:[0x28]
0x40025f:	mov	qword ptr [rbp - 0x18], rax
0x400263:	xor	eax, eax
0x400265:	lea	rax, [rbp - 0x50]
0x400269:	mov	rdi, rax
0x40026c:	call	0x400520
<Block for 0x400271, 10 bytes>
0x400271:	mov	edi, 0x64
0x400276:	call	0x500000
<Block for 0x40027b, 13 bytes>
0x40027b:	mov	qword ptr [rbp - 0x68], rax
0x40027f:	mov	rax, qword ptr [rbp - 0x68]
0x400283:	test	rax, rax
0x400286:	jne	0x400292
<Block for 0x400288, 10 bytes>
0x400288:	mov	edi, 0xffffffff
0x40028d:	call	0x500008
<Block for 0x400292, 19 bytes>
0x400292:	mov	rax, qword ptr [rbp - 0x68]
0x400296:	mov	byte ptr [rax], 0
0x400299:	mov	rax, qword ptr [rbp - 0x68]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500010
<Block for 0x4002a5, 23 bytes>
0x4002a5:	mov	qword ptr [rbp - 0x58], rax
0x4002a9:	mov	eax, 0x64
0x4002ae:	sub	rax, qword ptr [rbp - 0x58]
0x4002b2:	cmp	rax, 1
0x4002b6:	jbe	0x40034d
<Block for 0x40034d, 12 bytes>
0x40034d:	lea	rax, [rbp - 0x50]
0x400351:	mov	rdi, rax
0x400354:	call	0x4006b2
<Block for 0x4002bc, 44 bytes>
0x4002bc:	mov	rax, qword ptr [rip + 0xffd55]
0x4002c3:	mov	rdx, qword ptr [rbp - 0x58]
0x4002c7:	mov	ecx, 0x64
0x4002cc:	sub	ecx, edx
0x4002ce:	mov	edx, ecx
0x4002d0:	mov	esi, edx
0x4002d2:	mov	rcx, qword ptr [rbp - 0x68]
0x4002d6:	mov	rdx, qword ptr [rbp - 0x58]
0x4002da:	add	rcx, rdx
0x4002dd:	mov	rdx, rax
0x4002e0:	mov	rdi, rcx
0x4002e3:	call	0x500020
<Block for 0x400359, 23 bytes>
0x400359:	mov	qword ptr [rbp - 0x60], rax
0x40035d:	lea	rdx, [rbp - 0x60]
0x400361:	lea	rax, [rbp - 0x30]
0x400365:	mov	rsi, rdx
0x400368:	mov	rdi, rax
0x40036b:	call	0x400702
<Block for 0x4002e8, 10 bytes>
0x4002e8:	test	rax, rax
0x4002eb:	setne	al
0x4002ee:	test	al, al
0x4002f0:	je	0x400333
<Block for 0x400370, 28 bytes>
0x400370:	lea	rdx, [rbp - 0x68]
0x400374:	mov	rsi, qword ptr [rbp - 0x30]
0x400378:	lea	rax, [rbp - 0x50]
0x40037c:	mov	rcx, rdx
0x40037f:	mov	edx, 1
0x400384:	mov	rdi, rax
0x400387:	call	0x400730
<Block for 0x400333, 12 bytes>
0x400333:	lea	rdi, [rip + 0x17f]
0x40033a:	call	0x500028
<Block for 0x4002f2, 12 bytes>
0x4002f2:	mov	rax, qword ptr [rbp - 0x68]
0x4002f6:	mov	rdi, rax
0x4002f9:	call	0x500010
<Block for 0x40038c, 12 bytes>
0x40038c:	lea	rax, [rbp - 0x50]
0x400390:	mov	rdi, rax
0x400393:	call	0x4006b2
<Block for 0x40033f, 26 bytes>
0x40033f:	mov	rdx, qword ptr [rbp - 0x68]
0x400343:	mov	rax, qword ptr [rbp - 0x58]
0x400347:	add	rax, rdx
0x40034a:	mov	byte ptr [rax], 0
0x40034d:	lea	rax, [rbp - 0x50]
0x400351:	mov	rdi, rax
0x400354:	call	0x4006b2
<Block for 0x4002fe, 11 bytes>
0x4002fe:	mov	qword ptr [rbp - 0x58], rax
0x400302:	cmp	qword ptr [rbp - 0x58], 0
0x400307:	je	0x40034d
<Block for 0x400398, 23 bytes>
0x400398:	mov	qword ptr [rbp - 0x60], rax
0x40039c:	lea	rdx, [rbp - 0x60]
0x4003a0:	lea	rax, [rbp - 0x30]
0x4003a4:	mov	rsi, rdx
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x400702
<Block for 0x400309, 22 bytes>
0x400309:	mov	rax, qword ptr [rbp - 0x68]
0x40030d:	mov	rdx, qword ptr [rbp - 0x58]
0x400311:	sub	rdx, 1
0x400315:	add	rax, rdx
0x400318:	movzx	eax, byte ptr [rax]
0x40031b:	cmp	al, 0xa
0x40031d:	jne	0x40034d
<Block for 0x4003af, 28 bytes>
0x4003af:	lea	rdx, [rbp - 0x68]
0x4003b3:	mov	rsi, qword ptr [rbp - 0x30]
0x4003b7:	lea	rax, [rbp - 0x50]
0x4003bb:	mov	rcx, rdx
0x4003be:	mov	edx, 1
0x4003c3:	mov	rdi, rax
0x4003c6:	call	0x400730
<Block for 0x40031f, 20 bytes>
0x40031f:	mov	rax, qword ptr [rbp - 0x68]
0x400323:	mov	rdx, qword ptr [rbp - 0x58]
0x400327:	sub	rdx, 1
0x40032b:	add	rax, rdx
0x40032e:	mov	byte ptr [rax], 0
0x400331:	jmp	0x40034d
<Block for 0x4003cb, 12 bytes>
0x4003cb:	lea	rax, [rbp - 0x50]
0x4003cf:	mov	rdi, rax
0x4003d2:	call	0x4006b2
<Block for 0x4003d7, 23 bytes>
0x4003d7:	mov	qword ptr [rbp - 0x60], rax
0x4003db:	lea	rdx, [rbp - 0x60]
0x4003df:	lea	rax, [rbp - 0x30]
0x4003e3:	mov	rsi, rdx
0x4003e6:	mov	rdi, rax
0x4003e9:	call	0x400702
<Block for 0x4003ee, 28 bytes>
0x4003ee:	lea	rdx, [rbp - 0x68]
0x4003f2:	mov	rsi, qword ptr [rbp - 0x30]
0x4003f6:	lea	rax, [rbp - 0x50]
0x4003fa:	mov	rcx, rdx
0x4003fd:	mov	edx, 1
0x400402:	mov	rdi, rax
0x400405:	call	0x400730
<Block for 0x40040a, 19 bytes>
0x40040a:	lea	rdx, [rbp - 0x50]
0x40040e:	lea	rax, [rbp - 0x30]
0x400412:	mov	rsi, rdx
0x400415:	mov	rdi, rax
0x400418:	call	0x4007f6
<Block for 0x40041d, 12 bytes>
0x40041d:	lea	rax, [rbp - 0x30]
0x400421:	mov	rdi, rax
0x400424:	call	0x500048
<Block for 0x400429, 12 bytes>
0x400429:	lea	rax, [rbp - 0x30]
0x40042d:	mov	rdi, rax
0x400430:	call	0x40066a
<Block for 0x400435, 12 bytes>
0x400435:	lea	rax, [rbp - 0x50]
0x400439:	mov	rdi, rax
0x40043c:	call	0x40066a
<Block for 0x400441, 16 bytes>
0x400441:	nop	
0x400442:	mov	rax, qword ptr [rbp - 0x18]
0x400446:	xor	rax, qword ptr fs:[0x28]
0x40044f:	je	0x40048b
<Block for 0x40048b, 7 bytes>
0x40048b:	add	rsp, 0x68
0x40048f:	pop	rbx
0x400490:	pop	rbp
0x400491:	ret	
<Block for 0x400451, 2 bytes>
0x400451:	jmp	0x400486
<Block for 0x400486, 5 bytes>
0x400486:	call	0x500040
