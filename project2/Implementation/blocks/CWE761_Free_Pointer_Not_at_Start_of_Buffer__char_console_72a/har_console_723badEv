<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400520
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x68], rax
0x400036:	mov	rax, qword ptr [rbp - 0x68]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x68]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x68]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 23 bytes>
0x40005c:	mov	qword ptr [rbp - 0x58], rax
0x400060:	mov	eax, 0x64
0x400065:	sub	rax, qword ptr [rbp - 0x58]
0x400069:	cmp	rax, 1
0x40006d:	jbe	0x400104
<Block for 0x400104, 12 bytes>
0x400104:	lea	rax, [rbp - 0x50]
0x400108:	mov	rdi, rax
0x40010b:	call	0x4006b2
<Block for 0x400073, 44 bytes>
0x400073:	mov	rax, qword ptr [rip + 0xfff9e]
0x40007a:	mov	rdx, qword ptr [rbp - 0x58]
0x40007e:	mov	ecx, 0x64
0x400083:	sub	ecx, edx
0x400085:	mov	edx, ecx
0x400087:	mov	esi, edx
0x400089:	mov	rcx, qword ptr [rbp - 0x68]
0x40008d:	mov	rdx, qword ptr [rbp - 0x58]
0x400091:	add	rcx, rdx
0x400094:	mov	rdx, rax
0x400097:	mov	rdi, rcx
0x40009a:	call	0x500020
<Block for 0x400110, 23 bytes>
0x400110:	mov	qword ptr [rbp - 0x60], rax
0x400114:	lea	rdx, [rbp - 0x60]
0x400118:	lea	rax, [rbp - 0x30]
0x40011c:	mov	rsi, rdx
0x40011f:	mov	rdi, rax
0x400122:	call	0x400702
<Block for 0x40009f, 10 bytes>
0x40009f:	test	rax, rax
0x4000a2:	setne	al
0x4000a5:	test	al, al
0x4000a7:	je	0x4000ea
<Block for 0x400127, 28 bytes>
0x400127:	lea	rdx, [rbp - 0x68]
0x40012b:	mov	rsi, qword ptr [rbp - 0x30]
0x40012f:	lea	rax, [rbp - 0x50]
0x400133:	mov	rcx, rdx
0x400136:	mov	edx, 1
0x40013b:	mov	rdi, rax
0x40013e:	call	0x400730
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0x3c8]
0x4000f1:	call	0x500028
<Block for 0x4000a9, 12 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 0x68]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500010
<Block for 0x400143, 12 bytes>
0x400143:	lea	rax, [rbp - 0x50]
0x400147:	mov	rdi, rax
0x40014a:	call	0x4006b2
<Block for 0x4000f6, 26 bytes>
0x4000f6:	mov	rdx, qword ptr [rbp - 0x68]
0x4000fa:	mov	rax, qword ptr [rbp - 0x58]
0x4000fe:	add	rax, rdx
0x400101:	mov	byte ptr [rax], 0
0x400104:	lea	rax, [rbp - 0x50]
0x400108:	mov	rdi, rax
0x40010b:	call	0x4006b2
<Block for 0x4000b5, 11 bytes>
0x4000b5:	mov	qword ptr [rbp - 0x58], rax
0x4000b9:	cmp	qword ptr [rbp - 0x58], 0
0x4000be:	je	0x400104
<Block for 0x40014f, 23 bytes>
0x40014f:	mov	qword ptr [rbp - 0x60], rax
0x400153:	lea	rdx, [rbp - 0x60]
0x400157:	lea	rax, [rbp - 0x30]
0x40015b:	mov	rsi, rdx
0x40015e:	mov	rdi, rax
0x400161:	call	0x400702
<Block for 0x4000c0, 22 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x68]
0x4000c4:	mov	rdx, qword ptr [rbp - 0x58]
0x4000c8:	sub	rdx, 1
0x4000cc:	add	rax, rdx
0x4000cf:	movzx	eax, byte ptr [rax]
0x4000d2:	cmp	al, 0xa
0x4000d4:	jne	0x400104
<Block for 0x400166, 28 bytes>
0x400166:	lea	rdx, [rbp - 0x68]
0x40016a:	mov	rsi, qword ptr [rbp - 0x30]
0x40016e:	lea	rax, [rbp - 0x50]
0x400172:	mov	rcx, rdx
0x400175:	mov	edx, 1
0x40017a:	mov	rdi, rax
0x40017d:	call	0x400730
<Block for 0x4000d6, 20 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x68]
0x4000da:	mov	rdx, qword ptr [rbp - 0x58]
0x4000de:	sub	rdx, 1
0x4000e2:	add	rax, rdx
0x4000e5:	mov	byte ptr [rax], 0
0x4000e8:	jmp	0x400104
<Block for 0x400182, 12 bytes>
0x400182:	lea	rax, [rbp - 0x50]
0x400186:	mov	rdi, rax
0x400189:	call	0x4006b2
<Block for 0x40018e, 23 bytes>
0x40018e:	mov	qword ptr [rbp - 0x60], rax
0x400192:	lea	rdx, [rbp - 0x60]
0x400196:	lea	rax, [rbp - 0x30]
0x40019a:	mov	rsi, rdx
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x400702
<Block for 0x4001a5, 28 bytes>
0x4001a5:	lea	rdx, [rbp - 0x68]
0x4001a9:	mov	rsi, qword ptr [rbp - 0x30]
0x4001ad:	lea	rax, [rbp - 0x50]
0x4001b1:	mov	rcx, rdx
0x4001b4:	mov	edx, 1
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x400730
<Block for 0x4001c1, 19 bytes>
0x4001c1:	lea	rdx, [rbp - 0x50]
0x4001c5:	lea	rax, [rbp - 0x30]
0x4001c9:	mov	rsi, rdx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x4007f6
<Block for 0x4001d4, 12 bytes>
0x4001d4:	lea	rax, [rbp - 0x30]
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500030
<Block for 0x4001e0, 12 bytes>
0x4001e0:	lea	rax, [rbp - 0x30]
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x40066a
<Block for 0x4001ec, 12 bytes>
0x4001ec:	lea	rax, [rbp - 0x50]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x40066a
<Block for 0x4001f8, 16 bytes>
0x4001f8:	nop	
0x4001f9:	mov	rax, qword ptr [rbp - 0x18]
0x4001fd:	xor	rax, qword ptr fs:[0x28]
0x400206:	je	0x400242
<Block for 0x400242, 7 bytes>
0x400242:	add	rsp, 0x68
0x400246:	pop	rbx
0x400247:	pop	rbp
0x400248:	ret	
<Block for 0x400208, 2 bytes>
0x400208:	jmp	0x40023d
<Block for 0x40023d, 5 bytes>
0x40023d:	call	0x500040
