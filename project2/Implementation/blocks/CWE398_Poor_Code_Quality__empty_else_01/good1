<Block for 0x400063, 17 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	call	0x500000
<Block for 0x400074, 55 bytes>
0x400074:	mov	edx, eax
0x400076:	movsxd	rax, edx
0x400079:	imul	rax, rax, 0x55555556
0x400080:	shr	rax, 0x20
0x400084:	mov	rcx, rax
0x400087:	mov	eax, edx
0x400089:	sar	eax, 0x1f
0x40008c:	mov	esi, ecx
0x40008e:	sub	esi, eax
0x400090:	mov	eax, esi
0x400092:	mov	dword ptr [rbp - 4], eax
0x400095:	mov	ecx, dword ptr [rbp - 4]
0x400098:	mov	eax, ecx
0x40009a:	add	eax, eax
0x40009c:	add	eax, ecx
0x40009e:	sub	edx, eax
0x4000a0:	mov	eax, edx
0x4000a2:	mov	dword ptr [rbp - 4], eax
0x4000a5:	cmp	dword ptr [rbp - 4], 0
0x4000a9:	jne	0x4000b9
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x62]
0x4000b2:	call	0x500008
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rdi, [rip + 0x29]
0x4000c0:	call	0x500008
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x4000c5
<Block for 0x4000c5, 12 bytes>
0x4000c5:	lea	rdi, [rip + 0x60]
0x4000cc:	call	0x500008
<Block for 0x4000d1, 3 bytes>
0x4000d1:	nop	
0x4000d2:	leave	
0x4000d3:	ret	
