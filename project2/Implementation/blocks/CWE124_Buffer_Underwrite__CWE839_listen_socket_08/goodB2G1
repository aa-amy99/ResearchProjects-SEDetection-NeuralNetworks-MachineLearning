<Block for 0x4001fb, 44 bytes>
0x4001fb:	endbr64	
0x4001ff:	push	rbp
0x400200:	mov	rbp, rsp
0x400203:	sub	rsp, 0x60
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 8], rax
0x400214:	xor	eax, eax
0x400216:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40021d:	mov	eax, 0
0x400222:	call	0x400000
<Block for 0x400227, 8 bytes>
0x400227:	test	eax, eax
0x400229:	je	0x400347
<Block for 0x400347, 10 bytes>
0x400347:	mov	eax, 0
0x40034c:	call	0x40000f
<Block for 0x40022f, 34 bytes>
0x40022f:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400236:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40023d:	mov	edx, 6
0x400242:	mov	esi, 1
0x400247:	mov	edi, 2
0x40024c:	call	0x500000
<Block for 0x400351, 4 bytes>
0x400351:	test	eax, eax
0x400353:	je	0x400363
<Block for 0x400251, 13 bytes>
0x400251:	mov	dword ptr [rbp - 0x48], eax
0x400254:	cmp	dword ptr [rbp - 0x48], -1
0x400258:	je	0x40031d
<Block for 0x400363, 46 bytes>
0x400363:	mov	qword ptr [rbp - 0x40], 0
0x40036b:	mov	qword ptr [rbp - 0x38], 0
0x400373:	mov	qword ptr [rbp - 0x30], 0
0x40037b:	mov	qword ptr [rbp - 0x28], 0
0x400383:	mov	qword ptr [rbp - 0x20], 0
0x40038b:	cmp	dword ptr [rbp - 0x54], 0
0x40038f:	js	0x4003c9
<Block for 0x400355, 12 bytes>
0x400355:	lea	rdi, [rip + 0x46c]
0x40035c:	call	0x500050
<Block for 0x40031d, 3 bytes>
0x40031d:	nop	
0x40031e:	jmp	0x400327
<Block for 0x40025e, 22 bytes>
0x40025e:	lea	rax, [rbp - 0x40]
0x400262:	mov	edx, 0x10
0x400267:	mov	esi, 0
0x40026c:	mov	rdi, rax
0x40026f:	call	0x500008
<Block for 0x4003c9, 12 bytes>
0x4003c9:	lea	rdi, [rip + 0x410]
0x4003d0:	call	0x500050
<Block for 0x400391, 6 bytes>
0x400391:	cmp	dword ptr [rbp - 0x54], 9
0x400395:	jg	0x4003c9
<Block for 0x400361, 2 bytes>
0x400361:	jmp	0x4003d7
<Block for 0x400327, 6 bytes>
0x400327:	cmp	dword ptr [rbp - 0x48], -1
0x40032b:	je	0x400337
<Block for 0x400274, 23 bytes>
0x400274:	mov	word ptr [rbp - 0x40], 2
0x40027a:	mov	dword ptr [rbp - 0x3c], 0
0x400281:	mov	edi, 0x6987
0x400286:	call	0x500010
<Block for 0x4003d5, 2 bytes>
0x4003d5:	jmp	0x4003d7
<Block for 0x400397, 22 bytes>
0x400397:	mov	eax, dword ptr [rbp - 0x54]
0x40039a:	cdqe	
0x40039c:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4003a4:	mov	dword ptr [rbp - 0x4c], 0
0x4003ab:	jmp	0x4003c1
<Block for 0x4003d7, 16 bytes>
0x4003d7:	nop	
0x4003d8:	mov	rax, qword ptr [rbp - 8]
0x4003dc:	xor	rax, qword ptr fs:[0x28]
0x4003e5:	je	0x4003ec
<Block for 0x400337, 6 bytes>
0x400337:	cmp	dword ptr [rbp - 0x50], -1
0x40033b:	je	0x400347
<Block for 0x40032d, 10 bytes>
0x40032d:	mov	eax, dword ptr [rbp - 0x48]
0x400330:	mov	edi, eax
0x400332:	call	0x500040
<Block for 0x40028b, 26 bytes>
0x40028b:	mov	word ptr [rbp - 0x3e], ax
0x40028f:	lea	rcx, [rbp - 0x40]
0x400293:	mov	eax, dword ptr [rbp - 0x48]
0x400296:	mov	edx, 0x10
0x40029b:	mov	rsi, rcx
0x40029e:	mov	edi, eax
0x4002a0:	call	0x500018
<Block for 0x4003c1, 6 bytes>
0x4003c1:	cmp	dword ptr [rbp - 0x4c], 9
0x4003c5:	jle	0x4003ad
<Block for 0x4003ec, 2 bytes>
0x4003ec:	leave	
0x4003ed:	ret	
<Block for 0x4003e7, 5 bytes>
0x4003e7:	call	0x500058
<Block for 0x40033d, 10 bytes>
0x40033d:	mov	eax, dword ptr [rbp - 0x50]
0x400340:	mov	edi, eax
0x400342:	call	0x500040
<Block for 0x4002a5, 5 bytes>
0x4002a5:	cmp	eax, -1
0x4002a8:	je	0x400320
<Block for 0x4003ad, 16 bytes>
0x4003ad:	mov	eax, dword ptr [rbp - 0x4c]
0x4003b0:	cdqe	
0x4003b2:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4003b6:	mov	edi, eax
0x4003b8:	call	0x500048
<Block for 0x4003c7, 2 bytes>
0x4003c7:	jmp	0x4003d7
<Block for 0x400320, 3 bytes>
0x400320:	nop	
0x400321:	jmp	0x400327
<Block for 0x4002aa, 15 bytes>
0x4002aa:	mov	eax, dword ptr [rbp - 0x48]
0x4002ad:	mov	esi, 5
0x4002b2:	mov	edi, eax
0x4002b4:	call	0x500020
<Block for 0x4003bd, 10 bytes>
0x4003bd:	add	dword ptr [rbp - 0x4c], 1
0x4003c1:	cmp	dword ptr [rbp - 0x4c], 9
0x4003c5:	jle	0x4003ad
<Block for 0x4002b9, 5 bytes>
0x4002b9:	cmp	eax, -1
0x4002bc:	je	0x400323
<Block for 0x400323, 3 bytes>
0x400323:	nop	
0x400324:	jmp	0x400327
<Block for 0x4002be, 20 bytes>
0x4002be:	mov	eax, dword ptr [rbp - 0x48]
0x4002c1:	mov	edx, 0
0x4002c6:	mov	esi, 0
0x4002cb:	mov	edi, eax
0x4002cd:	call	0x500028
<Block for 0x4002d2, 9 bytes>
0x4002d2:	mov	dword ptr [rbp - 0x50], eax
0x4002d5:	cmp	dword ptr [rbp - 0x50], -1
0x4002d9:	je	0x400326
<Block for 0x4002db, 24 bytes>
0x4002db:	lea	rsi, [rbp - 0x16]
0x4002df:	mov	eax, dword ptr [rbp - 0x50]
0x4002e2:	mov	ecx, 0
0x4002e7:	mov	edx, 0xd
0x4002ec:	mov	edi, eax
0x4002ee:	call	0x500030
<Block for 0x400326, 1 bytes>
0x400326:	nop	
<Block for 0x4002f3, 9 bytes>
0x4002f3:	mov	dword ptr [rbp - 0x44], eax
0x4002f6:	cmp	dword ptr [rbp - 0x44], -1
0x4002fa:	je	0x400327
<Block for 0x4002fc, 6 bytes>
0x4002fc:	cmp	dword ptr [rbp - 0x44], 0
0x400300:	je	0x400327
<Block for 0x400302, 22 bytes>
0x400302:	mov	eax, dword ptr [rbp - 0x44]
0x400305:	cdqe	
0x400307:	mov	byte ptr [rbp + rax - 0x16], 0
0x40030c:	lea	rax, [rbp - 0x16]
0x400310:	mov	rdi, rax
0x400313:	call	0x500038
<Block for 0x400318, 5 bytes>
0x400318:	mov	dword ptr [rbp - 0x54], eax
0x40031b:	jmp	0x400327
