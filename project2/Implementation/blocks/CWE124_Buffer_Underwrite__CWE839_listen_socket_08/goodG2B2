<Block for 0x4006a9, 44 bytes>
0x4006a9:	endbr64	
0x4006ad:	push	rbp
0x4006ae:	mov	rbp, rsp
0x4006b1:	sub	rsp, 0x40
0x4006b5:	mov	rax, qword ptr fs:[0x28]
0x4006be:	mov	qword ptr [rbp - 8], rax
0x4006c2:	xor	eax, eax
0x4006c4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4006cb:	mov	eax, 0
0x4006d0:	call	0x400000
<Block for 0x4006d5, 4 bytes>
0x4006d5:	test	eax, eax
0x4006d7:	je	0x4006e0
<Block for 0x4006e0, 10 bytes>
0x4006e0:	mov	eax, 0
0x4006e5:	call	0x400000
<Block for 0x4006d9, 17 bytes>
0x4006d9:	mov	dword ptr [rbp - 0x38], 7
0x4006e0:	mov	eax, 0
0x4006e5:	call	0x400000
<Block for 0x4006ea, 4 bytes>
0x4006ea:	test	eax, eax
0x4006ec:	je	0x40075a
<Block for 0x40075a, 16 bytes>
0x40075a:	nop	
0x40075b:	mov	rax, qword ptr [rbp - 8]
0x40075f:	xor	rax, qword ptr fs:[0x28]
0x400768:	je	0x40076f
<Block for 0x4006ee, 46 bytes>
0x4006ee:	mov	qword ptr [rbp - 0x30], 0
0x4006f6:	mov	qword ptr [rbp - 0x28], 0
0x4006fe:	mov	qword ptr [rbp - 0x20], 0
0x400706:	mov	qword ptr [rbp - 0x18], 0
0x40070e:	mov	qword ptr [rbp - 0x10], 0
0x400716:	cmp	dword ptr [rbp - 0x38], 9
0x40071a:	jg	0x40074e
<Block for 0x40076f, 2 bytes>
0x40076f:	leave	
0x400770:	ret	
<Block for 0x40076a, 5 bytes>
0x40076a:	call	0x500058
<Block for 0x40071c, 22 bytes>
0x40071c:	mov	eax, dword ptr [rbp - 0x38]
0x40071f:	cdqe	
0x400721:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400729:	mov	dword ptr [rbp - 0x34], 0
0x400730:	jmp	0x400746
<Block for 0x40074e, 12 bytes>
0x40074e:	lea	rdi, [rip + 0x53]
0x400755:	call	0x500050
<Block for 0x400746, 6 bytes>
0x400746:	cmp	dword ptr [rbp - 0x34], 9
0x40074a:	jle	0x400732
<Block for 0x400732, 16 bytes>
0x400732:	mov	eax, dword ptr [rbp - 0x34]
0x400735:	cdqe	
0x400737:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40073b:	mov	edi, eax
0x40073d:	call	0x500048
<Block for 0x40074c, 2 bytes>
0x40074c:	jmp	0x40075a
<Block for 0x400742, 10 bytes>
0x400742:	add	dword ptr [rbp - 0x34], 1
0x400746:	cmp	dword ptr [rbp - 0x34], 9
0x40074a:	jle	0x400732
