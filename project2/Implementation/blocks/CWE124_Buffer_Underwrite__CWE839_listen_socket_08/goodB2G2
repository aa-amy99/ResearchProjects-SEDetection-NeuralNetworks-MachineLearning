<Block for 0x4003ee, 44 bytes>
0x4003ee:	endbr64	
0x4003f2:	push	rbp
0x4003f3:	mov	rbp, rsp
0x4003f6:	sub	rsp, 0x60
0x4003fa:	mov	rax, qword ptr fs:[0x28]
0x400403:	mov	qword ptr [rbp - 8], rax
0x400407:	xor	eax, eax
0x400409:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400410:	mov	eax, 0
0x400415:	call	0x400000
<Block for 0x40041a, 8 bytes>
0x40041a:	test	eax, eax
0x40041c:	je	0x40053a
<Block for 0x40053a, 10 bytes>
0x40053a:	mov	eax, 0
0x40053f:	call	0x400000
<Block for 0x400422, 34 bytes>
0x400422:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400429:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400430:	mov	edx, 6
0x400435:	mov	esi, 1
0x40043a:	mov	edi, 2
0x40043f:	call	0x500000
<Block for 0x400544, 4 bytes>
0x400544:	test	eax, eax
0x400546:	je	0x4005bc
<Block for 0x400444, 13 bytes>
0x400444:	mov	dword ptr [rbp - 0x48], eax
0x400447:	cmp	dword ptr [rbp - 0x48], -1
0x40044b:	je	0x400510
<Block for 0x4005bc, 16 bytes>
0x4005bc:	nop	
0x4005bd:	mov	rax, qword ptr [rbp - 8]
0x4005c1:	xor	rax, qword ptr fs:[0x28]
0x4005ca:	je	0x4005d1
<Block for 0x400548, 46 bytes>
0x400548:	mov	qword ptr [rbp - 0x40], 0
0x400550:	mov	qword ptr [rbp - 0x38], 0
0x400558:	mov	qword ptr [rbp - 0x30], 0
0x400560:	mov	qword ptr [rbp - 0x28], 0
0x400568:	mov	qword ptr [rbp - 0x20], 0
0x400570:	cmp	dword ptr [rbp - 0x54], 0
0x400574:	js	0x4005ae
<Block for 0x400510, 3 bytes>
0x400510:	nop	
0x400511:	jmp	0x40051a
<Block for 0x400451, 22 bytes>
0x400451:	lea	rax, [rbp - 0x40]
0x400455:	mov	edx, 0x10
0x40045a:	mov	esi, 0
0x40045f:	mov	rdi, rax
0x400462:	call	0x500008
<Block for 0x4005d1, 2 bytes>
0x4005d1:	leave	
0x4005d2:	ret	
<Block for 0x4005cc, 5 bytes>
0x4005cc:	call	0x500058
<Block for 0x4005ae, 12 bytes>
0x4005ae:	lea	rdi, [rip + 0x22b]
0x4005b5:	call	0x500050
<Block for 0x400576, 6 bytes>
0x400576:	cmp	dword ptr [rbp - 0x54], 9
0x40057a:	jg	0x4005ae
<Block for 0x40051a, 6 bytes>
0x40051a:	cmp	dword ptr [rbp - 0x48], -1
0x40051e:	je	0x40052a
<Block for 0x400467, 23 bytes>
0x400467:	mov	word ptr [rbp - 0x40], 2
0x40046d:	mov	dword ptr [rbp - 0x3c], 0
0x400474:	mov	edi, 0x6987
0x400479:	call	0x500010
<Block for 0x4005ba, 2 bytes>
0x4005ba:	jmp	0x4005bc
<Block for 0x40057c, 22 bytes>
0x40057c:	mov	eax, dword ptr [rbp - 0x54]
0x40057f:	cdqe	
0x400581:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400589:	mov	dword ptr [rbp - 0x4c], 0
0x400590:	jmp	0x4005a6
<Block for 0x40052a, 6 bytes>
0x40052a:	cmp	dword ptr [rbp - 0x50], -1
0x40052e:	je	0x40053a
<Block for 0x400520, 10 bytes>
0x400520:	mov	eax, dword ptr [rbp - 0x48]
0x400523:	mov	edi, eax
0x400525:	call	0x500040
<Block for 0x40047e, 26 bytes>
0x40047e:	mov	word ptr [rbp - 0x3e], ax
0x400482:	lea	rcx, [rbp - 0x40]
0x400486:	mov	eax, dword ptr [rbp - 0x48]
0x400489:	mov	edx, 0x10
0x40048e:	mov	rsi, rcx
0x400491:	mov	edi, eax
0x400493:	call	0x500018
<Block for 0x4005a6, 6 bytes>
0x4005a6:	cmp	dword ptr [rbp - 0x4c], 9
0x4005aa:	jle	0x400592
<Block for 0x400530, 10 bytes>
0x400530:	mov	eax, dword ptr [rbp - 0x50]
0x400533:	mov	edi, eax
0x400535:	call	0x500040
<Block for 0x400498, 5 bytes>
0x400498:	cmp	eax, -1
0x40049b:	je	0x400513
<Block for 0x400592, 16 bytes>
0x400592:	mov	eax, dword ptr [rbp - 0x4c]
0x400595:	cdqe	
0x400597:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40059b:	mov	edi, eax
0x40059d:	call	0x500048
<Block for 0x4005ac, 2 bytes>
0x4005ac:	jmp	0x4005bc
<Block for 0x400513, 3 bytes>
0x400513:	nop	
0x400514:	jmp	0x40051a
<Block for 0x40049d, 15 bytes>
0x40049d:	mov	eax, dword ptr [rbp - 0x48]
0x4004a0:	mov	esi, 5
0x4004a5:	mov	edi, eax
0x4004a7:	call	0x500020
<Block for 0x4005a2, 10 bytes>
0x4005a2:	add	dword ptr [rbp - 0x4c], 1
0x4005a6:	cmp	dword ptr [rbp - 0x4c], 9
0x4005aa:	jle	0x400592
<Block for 0x4004ac, 5 bytes>
0x4004ac:	cmp	eax, -1
0x4004af:	je	0x400516
<Block for 0x400516, 3 bytes>
0x400516:	nop	
0x400517:	jmp	0x40051a
<Block for 0x4004b1, 20 bytes>
0x4004b1:	mov	eax, dword ptr [rbp - 0x48]
0x4004b4:	mov	edx, 0
0x4004b9:	mov	esi, 0
0x4004be:	mov	edi, eax
0x4004c0:	call	0x500028
<Block for 0x4004c5, 9 bytes>
0x4004c5:	mov	dword ptr [rbp - 0x50], eax
0x4004c8:	cmp	dword ptr [rbp - 0x50], -1
0x4004cc:	je	0x400519
<Block for 0x4004ce, 24 bytes>
0x4004ce:	lea	rsi, [rbp - 0x16]
0x4004d2:	mov	eax, dword ptr [rbp - 0x50]
0x4004d5:	mov	ecx, 0
0x4004da:	mov	edx, 0xd
0x4004df:	mov	edi, eax
0x4004e1:	call	0x500030
<Block for 0x400519, 1 bytes>
0x400519:	nop	
<Block for 0x4004e6, 9 bytes>
0x4004e6:	mov	dword ptr [rbp - 0x44], eax
0x4004e9:	cmp	dword ptr [rbp - 0x44], -1
0x4004ed:	je	0x40051a
<Block for 0x4004ef, 6 bytes>
0x4004ef:	cmp	dword ptr [rbp - 0x44], 0
0x4004f3:	je	0x40051a
<Block for 0x4004f5, 22 bytes>
0x4004f5:	mov	eax, dword ptr [rbp - 0x44]
0x4004f8:	cdqe	
0x4004fa:	mov	byte ptr [rbp + rax - 0x16], 0
0x4004ff:	lea	rax, [rbp - 0x16]
0x400503:	mov	rdi, rax
0x400506:	call	0x500038
<Block for 0x40050b, 5 bytes>
0x40050b:	mov	dword ptr [rbp - 0x54], eax
0x40050e:	jmp	0x40051a
