<Block for 0x400106, 40 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	push	rbx
0x40010f:	sub	rsp, 0x68
0x400113:	mov	rax, qword ptr fs:[0x28]
0x40011c:	mov	qword ptr [rbp - 0x18], rax
0x400120:	xor	eax, eax
0x400122:	lea	rax, [rbp - 0x50]
0x400126:	mov	rdi, rax
0x400129:	call	0x4002ca
<Block for 0x40012e, 48 bytes>
0x40012e:	mov	dword ptr [rbp - 0x64], 0x64
0x400135:	mov	dword ptr [rbp - 0x58], 0
0x40013c:	mov	dword ptr [rbp - 0x54], 0
0x400143:	lea	rax, [rbp - 0x58]
0x400147:	mov	qword ptr [rbp - 0x60], rax
0x40014b:	lea	rdx, [rbp - 0x60]
0x40014f:	lea	rax, [rbp - 0x50]
0x400153:	mov	rsi, rdx
0x400156:	mov	rdi, rax
0x400159:	call	0x4003c0
<Block for 0x40015e, 19 bytes>
0x40015e:	lea	rdx, [rbp - 0x60]
0x400162:	lea	rax, [rbp - 0x50]
0x400166:	mov	rsi, rdx
0x400169:	mov	rdi, rax
0x40016c:	call	0x4003c0
<Block for 0x400171, 19 bytes>
0x400171:	lea	rdx, [rbp - 0x60]
0x400175:	lea	rax, [rbp - 0x50]
0x400179:	mov	rsi, rdx
0x40017c:	mov	rdi, rax
0x40017f:	call	0x4003c0
<Block for 0x400184, 19 bytes>
0x400184:	lea	rdx, [rbp - 0x50]
0x400188:	lea	rax, [rbp - 0x30]
0x40018c:	mov	rsi, rdx
0x40018f:	mov	rdi, rax
0x400192:	call	0x4003fa
<Block for 0x400197, 12 bytes>
0x400197:	lea	rax, [rbp - 0x30]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500018
<Block for 0x4001a3, 12 bytes>
0x4001a3:	lea	rax, [rbp - 0x30]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x4002ea
<Block for 0x4001af, 12 bytes>
0x4001af:	lea	rax, [rbp - 0x50]
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x4002ea
<Block for 0x4001bb, 16 bytes>
0x4001bb:	nop	
0x4001bc:	mov	rax, qword ptr [rbp - 0x18]
0x4001c0:	xor	rax, qword ptr fs:[0x28]
0x4001c9:	je	0x400205
<Block for 0x400205, 7 bytes>
0x400205:	add	rsp, 0x68
0x400209:	pop	rbx
0x40020a:	pop	rbp
0x40020b:	ret	
<Block for 0x4001cb, 2 bytes>
0x4001cb:	jmp	0x400200
<Block for 0x400200, 5 bytes>
0x400200:	call	0x500010
