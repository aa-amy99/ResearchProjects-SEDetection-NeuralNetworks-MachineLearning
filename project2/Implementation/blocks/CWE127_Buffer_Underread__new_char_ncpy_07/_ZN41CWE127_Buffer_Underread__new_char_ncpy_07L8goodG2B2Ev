<Block for 0x4001a2, 46 bytes>
0x4001a2:	endbr64	
0x4001a6:	push	rbp
0x4001a7:	mov	rbp, rsp
0x4001aa:	add	rsp, -0x80
0x4001ae:	mov	rax, qword ptr fs:[0x28]
0x4001b7:	mov	qword ptr [rbp - 8], rax
0x4001bb:	xor	eax, eax
0x4001bd:	mov	qword ptr [rbp - 0x80], 0
0x4001c5:	mov	eax, dword ptr [rip + 0xb5]
0x4001cb:	cmp	eax, 5
0x4001ce:	jne	0x400207
<Block for 0x4001d0, 10 bytes>
0x4001d0:	mov	edi, 0x64
0x4001d5:	call	0x500000
<Block for 0x400207, 22 bytes>
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500008
<Block for 0x4001da, 26 bytes>
0x4001da:	mov	qword ptr [rbp - 0x78], rax
0x4001de:	mov	rax, qword ptr [rbp - 0x78]
0x4001e2:	mov	edx, 0x63
0x4001e7:	mov	esi, 0x41
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500008
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	byte ptr [rbp - 0xd], 0
0x400221:	lea	rax, [rbp - 0x70]
0x400225:	mov	rdi, rax
0x400228:	call	0x500010
<Block for 0x4001f4, 41 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	add	rax, 0x63
0x4001fc:	mov	byte ptr [rax], 0
0x4001ff:	mov	rax, qword ptr [rbp - 0x78]
0x400203:	mov	qword ptr [rbp - 0x80], rax
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500008
<Block for 0x40022d, 22 bytes>
0x40022d:	mov	rdx, rax
0x400230:	mov	rcx, qword ptr [rbp - 0x80]
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	rsi, rcx
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500018
<Block for 0x400243, 16 bytes>
0x400243:	mov	byte ptr [rbp - 0xd], 0
0x400247:	lea	rax, [rbp - 0x70]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500020
<Block for 0x400253, 16 bytes>
0x400253:	nop	
0x400254:	mov	rax, qword ptr [rbp - 8]
0x400258:	xor	rax, qword ptr fs:[0x28]
0x400261:	je	0x400268
<Block for 0x400268, 2 bytes>
0x400268:	leave	
0x400269:	ret	
<Block for 0x400263, 5 bytes>
0x400263:	call	0x500028
