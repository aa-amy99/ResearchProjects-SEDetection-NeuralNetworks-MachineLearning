<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400022:	mov	qword ptr [rbp - 0x16], 0
0x40002a:	mov	dword ptr [rbp - 0xe], 0
0x400031:	mov	word ptr [rbp - 0xa], 0
0x400037:	mov	rdx, qword ptr [rip + 0xfffc2]
0x40003e:	lea	rax, [rbp - 0x16]
0x400042:	mov	esi, 0xe
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 5 bytes>
0x40004f:	test	rax, rax
0x400052:	je	0x400065
<Block for 0x400065, 12 bytes>
0x400065:	lea	rdi, [rip + 0xb4]
0x40006c:	call	0x500018
<Block for 0x400054, 12 bytes>
0x400054:	lea	rax, [rbp - 0x16]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500010
<Block for 0x400071, 18 bytes>
0x400071:	mov	eax, dword ptr [rbp - 0x24]
0x400074:	mov	dword ptr [rbp - 0x20], eax
0x400077:	mov	eax, dword ptr [rbp - 0x20]
0x40007a:	mov	dword ptr [rbp - 0x1c], eax
0x40007d:	cmp	dword ptr [rbp - 0x1c], 5
0x400081:	jg	0x4000a2
<Block for 0x400060, 5 bytes>
0x400060:	mov	dword ptr [rbp - 0x24], eax
0x400063:	jmp	0x400071
<Block for 0x400083, 31 bytes>
0x400083:	lea	rcx, [rip + 0xf6]
0x40008a:	mov	edx, 0x31
0x40008f:	lea	rsi, [rip + 0x9a]
0x400096:	lea	rdi, [rip + 0xba]
0x40009d:	call	0x500020
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x4000b7, 2 bytes>
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500028
