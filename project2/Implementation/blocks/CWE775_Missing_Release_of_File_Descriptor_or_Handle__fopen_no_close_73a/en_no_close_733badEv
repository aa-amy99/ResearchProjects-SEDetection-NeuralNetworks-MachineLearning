<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002e4
<Block for 0x400028, 27 bytes>
0x400028:	mov	qword ptr [rbp - 0x58], 0
0x400030:	lea	rsi, [rip + 0x200]
0x400037:	lea	rdi, [rip + 0x1fc]
0x40003e:	call	0x500000
<Block for 0x400043, 23 bytes>
0x400043:	mov	qword ptr [rbp - 0x58], rax
0x400047:	lea	rdx, [rbp - 0x58]
0x40004b:	lea	rax, [rbp - 0x50]
0x40004f:	mov	rsi, rdx
0x400052:	mov	rdi, rax
0x400055:	call	0x4003da
<Block for 0x40005a, 19 bytes>
0x40005a:	lea	rdx, [rbp - 0x58]
0x40005e:	lea	rax, [rbp - 0x50]
0x400062:	mov	rsi, rdx
0x400065:	mov	rdi, rax
0x400068:	call	0x4003da
<Block for 0x40006d, 19 bytes>
0x40006d:	lea	rdx, [rbp - 0x58]
0x400071:	lea	rax, [rbp - 0x50]
0x400075:	mov	rsi, rdx
0x400078:	mov	rdi, rax
0x40007b:	call	0x4003da
<Block for 0x400080, 19 bytes>
0x400080:	lea	rdx, [rbp - 0x50]
0x400084:	lea	rax, [rbp - 0x30]
0x400088:	mov	rsi, rdx
0x40008b:	mov	rdi, rax
0x40008e:	call	0x400414
<Block for 0x400093, 12 bytes>
0x400093:	lea	rax, [rbp - 0x30]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500008
<Block for 0x40009f, 12 bytes>
0x40009f:	lea	rax, [rbp - 0x30]
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x400304
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rax, [rbp - 0x50]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x400304
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 0x18]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x400101
<Block for 0x400101, 7 bytes>
0x400101:	add	rsp, 0x58
0x400105:	pop	rbx
0x400106:	pop	rbp
0x400107:	ret	
<Block for 0x4000c7, 2 bytes>
0x4000c7:	jmp	0x4000fc
<Block for 0x4000fc, 5 bytes>
0x4000fc:	call	0x500018
