<Block for 0x400108, 40 bytes>
0x400108:	endbr64	
0x40010c:	push	rbp
0x40010d:	mov	rbp, rsp
0x400110:	push	rbx
0x400111:	sub	rsp, 0x58
0x400115:	mov	rax, qword ptr fs:[0x28]
0x40011e:	mov	qword ptr [rbp - 0x18], rax
0x400122:	xor	eax, eax
0x400124:	lea	rax, [rbp - 0x50]
0x400128:	mov	rdi, rax
0x40012b:	call	0x4002e4
<Block for 0x400130, 27 bytes>
0x400130:	mov	qword ptr [rbp - 0x58], 0
0x400138:	lea	rsi, [rip + 0xf8]
0x40013f:	lea	rdi, [rip + 0xf4]
0x400146:	call	0x500000
<Block for 0x40014b, 23 bytes>
0x40014b:	mov	qword ptr [rbp - 0x58], rax
0x40014f:	lea	rdx, [rbp - 0x58]
0x400153:	lea	rax, [rbp - 0x50]
0x400157:	mov	rsi, rdx
0x40015a:	mov	rdi, rax
0x40015d:	call	0x4003da
<Block for 0x400162, 19 bytes>
0x400162:	lea	rdx, [rbp - 0x58]
0x400166:	lea	rax, [rbp - 0x50]
0x40016a:	mov	rsi, rdx
0x40016d:	mov	rdi, rax
0x400170:	call	0x4003da
<Block for 0x400175, 19 bytes>
0x400175:	lea	rdx, [rbp - 0x58]
0x400179:	lea	rax, [rbp - 0x50]
0x40017d:	mov	rsi, rdx
0x400180:	mov	rdi, rax
0x400183:	call	0x4003da
<Block for 0x400188, 19 bytes>
0x400188:	lea	rdx, [rbp - 0x50]
0x40018c:	lea	rax, [rbp - 0x30]
0x400190:	mov	rsi, rdx
0x400193:	mov	rdi, rax
0x400196:	call	0x400414
<Block for 0x40019b, 12 bytes>
0x40019b:	lea	rax, [rbp - 0x30]
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500020
<Block for 0x4001a7, 12 bytes>
0x4001a7:	lea	rax, [rbp - 0x30]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x400304
<Block for 0x4001b3, 12 bytes>
0x4001b3:	lea	rax, [rbp - 0x50]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x400304
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 0x18]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x400209
<Block for 0x400209, 7 bytes>
0x400209:	add	rsp, 0x58
0x40020d:	pop	rbx
0x40020e:	pop	rbp
0x40020f:	ret	
<Block for 0x4001cf, 2 bytes>
0x4001cf:	jmp	0x400204
<Block for 0x400204, 5 bytes>
0x400204:	call	0x500018
