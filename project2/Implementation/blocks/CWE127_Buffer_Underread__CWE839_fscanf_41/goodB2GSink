<Block for 0x40018b, 76 bytes>
0x40018b:	endbr64	
0x40018f:	push	rbp
0x400190:	mov	rbp, rsp
0x400193:	sub	rsp, 0x40
0x400197:	mov	dword ptr [rbp - 0x34], edi
0x40019a:	mov	rax, qword ptr fs:[0x28]
0x4001a3:	mov	qword ptr [rbp - 8], rax
0x4001a7:	xor	eax, eax
0x4001a9:	mov	qword ptr [rbp - 0x30], 0
0x4001b1:	mov	qword ptr [rbp - 0x28], 0
0x4001b9:	mov	qword ptr [rbp - 0x20], 0
0x4001c1:	mov	qword ptr [rbp - 0x18], 0
0x4001c9:	mov	qword ptr [rbp - 0x10], 0
0x4001d1:	cmp	dword ptr [rbp - 0x34], 0
0x4001d5:	js	0x4001ef
<Block for 0x4001ef, 12 bytes>
0x4001ef:	lea	rdi, [rip + 0xca]
0x4001f6:	call	0x500008
<Block for 0x4001d7, 6 bytes>
0x4001d7:	cmp	dword ptr [rbp - 0x34], 9
0x4001db:	jg	0x4001ef
<Block for 0x4001fb, 16 bytes>
0x4001fb:	nop	
0x4001fc:	mov	rax, qword ptr [rbp - 8]
0x400200:	xor	rax, qword ptr fs:[0x28]
0x400209:	je	0x400210
<Block for 0x4001dd, 16 bytes>
0x4001dd:	mov	eax, dword ptr [rbp - 0x34]
0x4001e0:	cdqe	
0x4001e2:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001e6:	mov	edi, eax
0x4001e8:	call	0x500000
<Block for 0x400210, 2 bytes>
0x400210:	leave	
0x400211:	ret	
<Block for 0x40020b, 5 bytes>
0x40020b:	call	0x500010
<Block for 0x4001ed, 2 bytes>
0x4001ed:	jmp	0x4001fb
