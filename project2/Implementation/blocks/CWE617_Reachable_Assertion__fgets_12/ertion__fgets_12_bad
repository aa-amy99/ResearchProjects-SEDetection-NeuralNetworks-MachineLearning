<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 4 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400081
<Block for 0x400081, 13 bytes>
0x400081:	mov	dword ptr [rbp - 0x1c], 6
0x400088:	cmp	dword ptr [rbp - 0x1c], 5
0x40008c:	jg	0x4000ad
<Block for 0x400030, 45 bytes>
0x400030:	mov	qword ptr [rbp - 0x16], 0
0x400038:	mov	dword ptr [rbp - 0xe], 0
0x40003f:	mov	word ptr [rbp - 0xa], 0
0x400045:	mov	rdx, qword ptr [rip + 0xfffbc]
0x40004c:	lea	rax, [rbp - 0x16]
0x400050:	mov	esi, 0xe
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x40008e, 31 bytes>
0x40008e:	lea	rcx, [rip + 0x10b]
0x400095:	mov	edx, 0x36
0x40009a:	lea	rsi, [rip + 0xaf]
0x4000a1:	lea	rdi, [rip + 0xcf]
0x4000a8:	call	0x500028
<Block for 0x4000ad, 16 bytes>
0x4000ad:	nop	
0x4000ae:	mov	rax, qword ptr [rbp - 8]
0x4000b2:	xor	rax, qword ptr fs:[0x28]
0x4000bb:	je	0x4000c2
<Block for 0x40005d, 5 bytes>
0x40005d:	test	rax, rax
0x400060:	je	0x400073
<Block for 0x4000c2, 2 bytes>
0x4000c2:	leave	
0x4000c3:	ret	
<Block for 0x4000bd, 5 bytes>
0x4000bd:	call	0x500030
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0xc6]
0x40007a:	call	0x500020
<Block for 0x400062, 12 bytes>
0x400062:	lea	rax, [rbp - 0x16]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x400088
<Block for 0x40006e, 5 bytes>
0x40006e:	mov	dword ptr [rbp - 0x1c], eax
0x400071:	jmp	0x400088
<Block for 0x400088, 6 bytes>
0x400088:	cmp	dword ptr [rbp - 0x1c], 5
0x40008c:	jg	0x4000ad
