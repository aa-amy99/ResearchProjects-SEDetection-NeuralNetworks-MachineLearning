<Block for 0x40023c, 30 bytes>
0x40023c:	endbr64	
0x400240:	push	rbp
0x400241:	mov	rbp, rsp
0x400244:	sub	rsp, 0x10
0x400248:	mov	qword ptr [rbp - 0x10], 0
0x400250:	mov	edi, 0x64
0x400255:	call	0x500018
<Block for 0x40025a, 11 bytes>
0x40025a:	mov	qword ptr [rbp - 8], rax
0x40025e:	cmp	qword ptr [rbp - 8], 0
0x400263:	jne	0x40026f
<Block for 0x400265, 10 bytes>
0x400265:	mov	edi, 0xffffffff
0x40026a:	call	0x500020
<Block for 0x40026f, 22 bytes>
0x40026f:	mov	rax, qword ptr [rbp - 8]
0x400273:	mov	edx, 0x63
0x400278:	mov	esi, 0x41
0x40027d:	mov	rdi, rax
0x400280:	call	0x500000
<Block for 0x400285, 40 bytes>
0x400285:	mov	rax, qword ptr [rbp - 8]
0x400289:	add	rax, 0x63
0x40028d:	mov	byte ptr [rax], 0
0x400290:	mov	rax, qword ptr [rbp - 8]
0x400294:	mov	qword ptr [rbp - 0x10], rax
0x400298:	mov	rax, qword ptr [rbp - 0x10]
0x40029c:	mov	qword ptr [rip + 0x2d], rax
0x4002a3:	mov	eax, 0
0x4002a8:	call	0x40015a
<Block for 0x4002ad, 3 bytes>
0x4002ad:	nop	
0x4002ae:	leave	
0x4002af:	ret	
