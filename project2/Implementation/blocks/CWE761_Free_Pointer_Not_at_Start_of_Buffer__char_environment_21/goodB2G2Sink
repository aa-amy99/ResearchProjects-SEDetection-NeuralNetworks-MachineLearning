<Block for 0x4001fc, 26 bytes>
0x4001fc:	endbr64	
0x400200:	push	rbp
0x400201:	mov	rbp, rsp
0x400204:	sub	rsp, 0x20
0x400208:	mov	qword ptr [rbp - 0x18], rdi
0x40020c:	mov	eax, dword ptr [rip + 0x116]
0x400212:	test	eax, eax
0x400214:	je	0x400263
<Block for 0x400263, 3 bytes>
0x400263:	nop	
0x400264:	leave	
0x400265:	ret	
<Block for 0x400216, 10 bytes>
0x400216:	mov	qword ptr [rbp - 8], 0
0x40021e:	jmp	0x400245
<Block for 0x400245, 12 bytes>
0x400245:	mov	rax, qword ptr [rbp - 0x18]
0x400249:	mov	rdi, rax
0x40024c:	call	0x500020
<Block for 0x400251, 6 bytes>
0x400251:	cmp	qword ptr [rbp - 8], rax
0x400255:	jb	0x400220
<Block for 0x400220, 18 bytes>
0x400220:	mov	rdx, qword ptr [rbp - 0x18]
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	add	rax, rdx
0x40022b:	movzx	eax, byte ptr [rax]
0x40022e:	cmp	al, 0x53
0x400230:	jne	0x400240
<Block for 0x400257, 12 bytes>
0x400257:	mov	rax, qword ptr [rbp - 0x18]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500008
<Block for 0x400232, 12 bytes>
0x400232:	lea	rdi, [rip + 0xf3]
0x400239:	call	0x500000
<Block for 0x400240, 17 bytes>
0x400240:	add	qword ptr [rbp - 8], 1
0x400245:	mov	rax, qword ptr [rbp - 0x18]
0x400249:	mov	rdi, rax
0x40024c:	call	0x500020
<Block for 0x40023e, 2 bytes>
0x40023e:	jmp	0x400257
