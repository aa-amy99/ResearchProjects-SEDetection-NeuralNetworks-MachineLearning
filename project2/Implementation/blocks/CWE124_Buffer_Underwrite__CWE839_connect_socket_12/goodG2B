<Block for 0x40050a, 44 bytes>
0x40050a:	endbr64	
0x40050e:	push	rbp
0x40050f:	mov	rbp, rsp
0x400512:	sub	rsp, 0x40
0x400516:	mov	rax, qword ptr fs:[0x28]
0x40051f:	mov	qword ptr [rbp - 8], rax
0x400523:	xor	eax, eax
0x400525:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x40052c:	mov	eax, 0
0x400531:	call	0x500000
<Block for 0x400536, 4 bytes>
0x400536:	test	eax, eax
0x400538:	je	0x400543
<Block for 0x400543, 17 bytes>
0x400543:	mov	dword ptr [rbp - 0x3c], 7
0x40054a:	mov	eax, 0
0x40054f:	call	0x500000
<Block for 0x40053a, 9 bytes>
0x40053a:	mov	dword ptr [rbp - 0x3c], 7
0x400541:	jmp	0x40054a
<Block for 0x400554, 4 bytes>
0x400554:	test	eax, eax
0x400556:	je	0x4005c6
<Block for 0x40054a, 10 bytes>
0x40054a:	mov	eax, 0
0x40054f:	call	0x500000
<Block for 0x4005c6, 46 bytes>
0x4005c6:	mov	qword ptr [rbp - 0x30], 0
0x4005ce:	mov	qword ptr [rbp - 0x28], 0
0x4005d6:	mov	qword ptr [rbp - 0x20], 0
0x4005de:	mov	qword ptr [rbp - 0x18], 0
0x4005e6:	mov	qword ptr [rbp - 0x10], 0
0x4005ee:	cmp	dword ptr [rbp - 0x3c], 9
0x4005f2:	jg	0x400626
<Block for 0x400558, 46 bytes>
0x400558:	mov	qword ptr [rbp - 0x30], 0
0x400560:	mov	qword ptr [rbp - 0x28], 0
0x400568:	mov	qword ptr [rbp - 0x20], 0
0x400570:	mov	qword ptr [rbp - 0x18], 0
0x400578:	mov	qword ptr [rbp - 0x10], 0
0x400580:	cmp	dword ptr [rbp - 0x3c], 9
0x400584:	jg	0x4005b8
<Block for 0x4005f4, 22 bytes>
0x4005f4:	mov	eax, dword ptr [rbp - 0x3c]
0x4005f7:	cdqe	
0x4005f9:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400601:	mov	dword ptr [rbp - 0x34], 0
0x400608:	jmp	0x40061e
<Block for 0x400626, 12 bytes>
0x400626:	lea	rdi, [rip + 0x4b]
0x40062d:	call	0x500050
<Block for 0x400586, 22 bytes>
0x400586:	mov	eax, dword ptr [rbp - 0x3c]
0x400589:	cdqe	
0x40058b:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400593:	mov	dword ptr [rbp - 0x38], 0
0x40059a:	jmp	0x4005b0
<Block for 0x4005b8, 12 bytes>
0x4005b8:	lea	rdi, [rip + 0xb9]
0x4005bf:	call	0x500050
<Block for 0x40061e, 6 bytes>
0x40061e:	cmp	dword ptr [rbp - 0x34], 9
0x400622:	jle	0x40060a
<Block for 0x400632, 16 bytes>
0x400632:	nop	
0x400633:	mov	rax, qword ptr [rbp - 8]
0x400637:	xor	rax, qword ptr fs:[0x28]
0x400640:	je	0x400647
<Block for 0x4005b0, 6 bytes>
0x4005b0:	cmp	dword ptr [rbp - 0x38], 9
0x4005b4:	jle	0x40059c
<Block for 0x4005c4, 2 bytes>
0x4005c4:	jmp	0x400632
<Block for 0x40060a, 16 bytes>
0x40060a:	mov	eax, dword ptr [rbp - 0x34]
0x40060d:	cdqe	
0x40060f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400613:	mov	edi, eax
0x400615:	call	0x500048
<Block for 0x400624, 2 bytes>
0x400624:	jmp	0x400632
<Block for 0x400647, 2 bytes>
0x400647:	leave	
0x400648:	ret	
<Block for 0x400642, 5 bytes>
0x400642:	call	0x500058
<Block for 0x40059c, 16 bytes>
0x40059c:	mov	eax, dword ptr [rbp - 0x38]
0x40059f:	cdqe	
0x4005a1:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4005a5:	mov	edi, eax
0x4005a7:	call	0x500048
<Block for 0x4005b6, 2 bytes>
0x4005b6:	jmp	0x400632
<Block for 0x40061a, 10 bytes>
0x40061a:	add	dword ptr [rbp - 0x34], 1
0x40061e:	cmp	dword ptr [rbp - 0x34], 9
0x400622:	jle	0x40060a
<Block for 0x4005ac, 10 bytes>
0x4005ac:	add	dword ptr [rbp - 0x38], 1
0x4005b0:	cmp	dword ptr [rbp - 0x38], 9
0x4005b4:	jle	0x40059c
