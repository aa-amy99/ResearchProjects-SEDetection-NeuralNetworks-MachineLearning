<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400022:	mov	eax, 0
0x400027:	call	0x500000
<Block for 0x40002c, 8 bytes>
0x40002c:	test	eax, eax
0x40002e:	je	0x400108
<Block for 0x400108, 17 bytes>
0x400108:	mov	dword ptr [rbp - 0x54], 7
0x40010f:	mov	eax, 0
0x400114:	call	0x500000
<Block for 0x400034, 27 bytes>
0x400034:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40003b:	mov	edx, 6
0x400040:	mov	esi, 1
0x400045:	mov	edi, 2
0x40004a:	call	0x500008
<Block for 0x400119, 4 bytes>
0x400119:	test	eax, eax
0x40011b:	je	0x40018e
<Block for 0x40004f, 13 bytes>
0x40004f:	mov	dword ptr [rbp - 0x48], eax
0x400052:	cmp	dword ptr [rbp - 0x48], -1
0x400056:	je	0x4000f2
<Block for 0x40018e, 46 bytes>
0x40018e:	mov	qword ptr [rbp - 0x40], 0
0x400196:	mov	qword ptr [rbp - 0x38], 0
0x40019e:	mov	qword ptr [rbp - 0x30], 0
0x4001a6:	mov	qword ptr [rbp - 0x28], 0
0x4001ae:	mov	qword ptr [rbp - 0x20], 0
0x4001b6:	cmp	dword ptr [rbp - 0x54], 0
0x4001ba:	js	0x4001f4
<Block for 0x40011d, 46 bytes>
0x40011d:	mov	qword ptr [rbp - 0x40], 0
0x400125:	mov	qword ptr [rbp - 0x38], 0
0x40012d:	mov	qword ptr [rbp - 0x30], 0
0x400135:	mov	qword ptr [rbp - 0x28], 0
0x40013d:	mov	qword ptr [rbp - 0x20], 0
0x400145:	cmp	dword ptr [rbp - 0x54], 9
0x400149:	jg	0x400180
<Block for 0x4000f2, 3 bytes>
0x4000f2:	nop	
0x4000f3:	jmp	0x4000f6
<Block for 0x40005c, 22 bytes>
0x40005c:	lea	rax, [rbp - 0x40]
0x400060:	mov	edx, 0x10
0x400065:	mov	esi, 0
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x4001f4, 12 bytes>
0x4001f4:	lea	rdi, [rip + 0x49d]
0x4001fb:	call	0x500050
<Block for 0x4001bc, 6 bytes>
0x4001bc:	cmp	dword ptr [rbp - 0x54], 9
0x4001c0:	jg	0x4001f4
<Block for 0x40014b, 22 bytes>
0x40014b:	mov	eax, dword ptr [rbp - 0x54]
0x40014e:	cdqe	
0x400150:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400158:	mov	dword ptr [rbp - 0x50], 0
0x40015f:	jmp	0x400175
<Block for 0x400180, 12 bytes>
0x400180:	lea	rdi, [rip + 0x4f1]
0x400187:	call	0x500050
<Block for 0x4000f6, 6 bytes>
0x4000f6:	cmp	dword ptr [rbp - 0x48], -1
0x4000fa:	je	0x40010f
<Block for 0x400072, 18 bytes>
0x400072:	mov	word ptr [rbp - 0x40], 2
0x400078:	lea	rdi, [rip + 0x5e9]
0x40007f:	call	0x500018
<Block for 0x400200, 2 bytes>
0x400200:	jmp	0x400202
<Block for 0x4001c2, 22 bytes>
0x4001c2:	mov	eax, dword ptr [rbp - 0x54]
0x4001c5:	cdqe	
0x4001c7:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4001cf:	mov	dword ptr [rbp - 0x4c], 0
0x4001d6:	jmp	0x4001ec
<Block for 0x400175, 6 bytes>
0x400175:	cmp	dword ptr [rbp - 0x50], 9
0x400179:	jle	0x400161
<Block for 0x40018c, 2 bytes>
0x40018c:	jmp	0x400202
<Block for 0x40010f, 10 bytes>
0x40010f:	mov	eax, 0
0x400114:	call	0x500000
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	eax, dword ptr [rbp - 0x48]
0x4000ff:	mov	edi, eax
0x400101:	call	0x500040
<Block for 0x400084, 13 bytes>
0x400084:	mov	dword ptr [rbp - 0x3c], eax
0x400087:	mov	edi, 0x6987
0x40008c:	call	0x500020
<Block for 0x400202, 16 bytes>
0x400202:	nop	
0x400203:	mov	rax, qword ptr [rbp - 8]
0x400207:	xor	rax, qword ptr fs:[0x28]
0x400210:	je	0x400217
<Block for 0x4001ec, 6 bytes>
0x4001ec:	cmp	dword ptr [rbp - 0x4c], 9
0x4001f0:	jle	0x4001d8
<Block for 0x400161, 16 bytes>
0x400161:	mov	eax, dword ptr [rbp - 0x50]
0x400164:	cdqe	
0x400166:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40016a:	mov	edi, eax
0x40016c:	call	0x500048
<Block for 0x40017b, 5 bytes>
0x40017b:	jmp	0x400202
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x40010f
<Block for 0x400091, 26 bytes>
0x400091:	mov	word ptr [rbp - 0x3e], ax
0x400095:	lea	rcx, [rbp - 0x40]
0x400099:	mov	eax, dword ptr [rbp - 0x48]
0x40009c:	mov	edx, 0x10
0x4000a1:	mov	rsi, rcx
0x4000a4:	mov	edi, eax
0x4000a6:	call	0x500028
<Block for 0x400217, 2 bytes>
0x400217:	leave	
0x400218:	ret	
<Block for 0x400212, 5 bytes>
0x400212:	call	0x500058
<Block for 0x4001d8, 16 bytes>
0x4001d8:	mov	eax, dword ptr [rbp - 0x4c]
0x4001db:	cdqe	
0x4001dd:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001e1:	mov	edi, eax
0x4001e3:	call	0x500048
<Block for 0x4001f2, 2 bytes>
0x4001f2:	jmp	0x400202
<Block for 0x400171, 10 bytes>
0x400171:	add	dword ptr [rbp - 0x50], 1
0x400175:	cmp	dword ptr [rbp - 0x50], 9
0x400179:	jle	0x400161
<Block for 0x4000ab, 5 bytes>
0x4000ab:	cmp	eax, -1
0x4000ae:	je	0x4000f5
<Block for 0x4001e8, 10 bytes>
0x4001e8:	add	dword ptr [rbp - 0x4c], 1
0x4001ec:	cmp	dword ptr [rbp - 0x4c], 9
0x4001f0:	jle	0x4001d8
<Block for 0x4000b0, 24 bytes>
0x4000b0:	lea	rsi, [rbp - 0x16]
0x4000b4:	mov	eax, dword ptr [rbp - 0x48]
0x4000b7:	mov	ecx, 0
0x4000bc:	mov	edx, 0xd
0x4000c1:	mov	edi, eax
0x4000c3:	call	0x500030
<Block for 0x4000f5, 1 bytes>
0x4000f5:	nop	
<Block for 0x4000c8, 9 bytes>
0x4000c8:	mov	dword ptr [rbp - 0x44], eax
0x4000cb:	cmp	dword ptr [rbp - 0x44], -1
0x4000cf:	je	0x4000f6
<Block for 0x4000d1, 6 bytes>
0x4000d1:	cmp	dword ptr [rbp - 0x44], 0
0x4000d5:	je	0x4000f6
<Block for 0x4000d7, 22 bytes>
0x4000d7:	mov	eax, dword ptr [rbp - 0x44]
0x4000da:	cdqe	
0x4000dc:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000e1:	lea	rax, [rbp - 0x16]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500038
<Block for 0x4000ed, 5 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x54], eax
0x4000f0:	jmp	0x4000f6
