<Block for 0x400154, 96 bytes>
0x400154:	endbr64	
0x400158:	push	rbp
0x400159:	mov	rbp, rsp
0x40015c:	sub	rsp, 0xb0
0x400163:	mov	rax, qword ptr fs:[0x28]
0x40016c:	mov	qword ptr [rbp - 8], rax
0x400170:	xor	eax, eax
0x400172:	lea	rax, [rbp - 0xa8]
0x400179:	mov	qword ptr [rbp - 0x98], rax
0x400180:	lea	rax, [rbp - 0xa8]
0x400187:	mov	qword ptr [rbp - 0x90], rax
0x40018e:	mov	qword ptr [rbp - 0xa8], 0
0x400199:	mov	rax, qword ptr [rbp - 0x98]
0x4001a0:	mov	rax, qword ptr [rax]
0x4001a3:	mov	qword ptr [rbp - 0x88], rax
0x4001aa:	mov	edi, 0x64
0x4001af:	call	0x500000
<Block for 0x4001b4, 32 bytes>
0x4001b4:	mov	qword ptr [rbp - 0x88], rax
0x4001bb:	mov	rax, qword ptr [rbp - 0x88]
0x4001c2:	mov	edx, 0x63
0x4001c7:	mov	esi, 0x41
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500008
<Block for 0x4001d4, 67 bytes>
0x4001d4:	mov	rax, qword ptr [rbp - 0x88]
0x4001db:	add	rax, 0x63
0x4001df:	mov	byte ptr [rax], 0
0x4001e2:	mov	rax, qword ptr [rbp - 0x98]
0x4001e9:	mov	rdx, qword ptr [rbp - 0x88]
0x4001f0:	mov	qword ptr [rax], rdx
0x4001f3:	mov	rax, qword ptr [rbp - 0x90]
0x4001fa:	mov	rax, qword ptr [rax]
0x4001fd:	mov	qword ptr [rbp - 0x80], rax
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x43
0x40020f:	mov	rdi, rax
0x400212:	call	0x500008
<Block for 0x400217, 16 bytes>
0x400217:	mov	byte ptr [rbp - 0xd], 0
0x40021b:	lea	rax, [rbp - 0x70]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500010
<Block for 0x400227, 28 bytes>
0x400227:	mov	qword ptr [rbp - 0x78], rax
0x40022b:	mov	qword ptr [rbp - 0xa0], 0
0x400236:	mov	rax, qword ptr [rbp - 0xa0]
0x40023d:	cmp	rax, qword ptr [rbp - 0x78]
0x400241:	jae	0x40026e
<Block for 0x400243, 43 bytes>
0x400243:	mov	rdx, qword ptr [rbp - 0x80]
0x400247:	mov	rax, qword ptr [rbp - 0xa0]
0x40024e:	add	rax, rdx
0x400251:	movzx	eax, byte ptr [rax]
0x400254:	lea	rcx, [rbp - 0x70]
0x400258:	mov	rdx, qword ptr [rbp - 0xa0]
0x40025f:	add	rdx, rcx
0x400262:	mov	byte ptr [rdx], al
0x400264:	add	qword ptr [rbp - 0xa0], 1
0x40026c:	jmp	0x400236
<Block for 0x40026e, 16 bytes>
0x40026e:	mov	byte ptr [rbp - 0xd], 0
0x400272:	lea	rax, [rbp - 0x70]
0x400276:	mov	rdi, rax
0x400279:	call	0x500018
<Block for 0x400236, 13 bytes>
0x400236:	mov	rax, qword ptr [rbp - 0xa0]
0x40023d:	cmp	rax, qword ptr [rbp - 0x78]
0x400241:	jae	0x40026e
<Block for 0x40027e, 7 bytes>
0x40027e:	cmp	qword ptr [rbp - 0x80], 0
0x400283:	je	0x400291
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 8]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002a6
<Block for 0x400285, 12 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x80]
0x400289:	mov	rdi, rax
0x40028c:	call	0x500020
<Block for 0x4002a6, 2 bytes>
0x4002a6:	leave	
0x4002a7:	ret	
<Block for 0x4002a1, 5 bytes>
0x4002a1:	call	0x500028
