<Block for 0x400210, 43 bytes>
0x400210:	endbr64	
0x400214:	push	rbp
0x400215:	mov	rbp, rsp
0x400218:	push	rbx
0x400219:	sub	rsp, 0x98
0x400220:	mov	rax, qword ptr fs:[0x28]
0x400229:	mov	qword ptr [rbp - 0x18], rax
0x40022d:	xor	eax, eax
0x40022f:	lea	rax, [rbp - 0x80]
0x400233:	mov	rdi, rax
0x400236:	call	0x400580
<Block for 0x40023b, 10 bytes>
0x40023b:	mov	edi, 0x64
0x400240:	call	0x500000
<Block for 0x400245, 17 bytes>
0x400245:	mov	qword ptr [rbp - 0x98], rax
0x40024c:	cmp	qword ptr [rbp - 0x98], 0
0x400254:	jne	0x400260
<Block for 0x400256, 10 bytes>
0x400256:	mov	edi, 0xffffffff
0x40025b:	call	0x500008
<Block for 0x400260, 25 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x98]
0x400267:	mov	byte ptr [rax], 0
0x40026a:	mov	rax, qword ptr [rbp - 0x98]
0x400271:	mov	rdi, rax
0x400274:	call	0x500010
<Block for 0x400279, 29 bytes>
0x400279:	mov	qword ptr [rbp - 0x90], rax
0x400280:	mov	eax, 0x64
0x400285:	sub	rax, qword ptr [rbp - 0x90]
0x40028c:	cmp	rax, 1
0x400290:	jbe	0x400329
<Block for 0x400329, 26 bytes>
0x400329:	mov	dword ptr [rbp - 0x50], 0
0x400330:	lea	rdx, [rbp - 0x50]
0x400334:	lea	rax, [rbp - 0x80]
0x400338:	mov	rsi, rdx
0x40033b:	mov	rdi, rax
0x40033e:	call	0x40073a
<Block for 0x400296, 19 bytes>
0x400296:	lea	rsi, [rip + 0x1bf]
0x40029d:	lea	rdi, [rip + 0x1ba]
0x4002a4:	call	0x500018
<Block for 0x400343, 36 bytes>
0x400343:	mov	rdx, qword ptr [rbp - 0x98]
0x40034a:	mov	qword ptr [rax], rdx
0x40034d:	mov	dword ptr [rbp - 0x50], 1
0x400354:	lea	rdx, [rbp - 0x50]
0x400358:	lea	rax, [rbp - 0x80]
0x40035c:	mov	rsi, rdx
0x40035f:	mov	rdi, rax
0x400362:	call	0x40073a
<Block for 0x4002a9, 17 bytes>
0x4002a9:	mov	qword ptr [rbp - 0x88], rax
0x4002b0:	cmp	qword ptr [rbp - 0x88], 0
0x4002b8:	je	0x400329
<Block for 0x400367, 36 bytes>
0x400367:	mov	rdx, qword ptr [rbp - 0x98]
0x40036e:	mov	qword ptr [rax], rdx
0x400371:	mov	dword ptr [rbp - 0x50], 2
0x400378:	lea	rdx, [rbp - 0x50]
0x40037c:	lea	rax, [rbp - 0x80]
0x400380:	mov	rsi, rdx
0x400383:	mov	rdi, rax
0x400386:	call	0x40073a
<Block for 0x4002ba, 54 bytes>
0x4002ba:	mov	rax, qword ptr [rbp - 0x90]
0x4002c1:	mov	edx, 0x64
0x4002c6:	sub	edx, eax
0x4002c8:	mov	eax, edx
0x4002ca:	mov	esi, eax
0x4002cc:	mov	rdx, qword ptr [rbp - 0x98]
0x4002d3:	mov	rax, qword ptr [rbp - 0x90]
0x4002da:	lea	rcx, [rdx + rax]
0x4002de:	mov	rax, qword ptr [rbp - 0x88]
0x4002e5:	mov	rdx, rax
0x4002e8:	mov	rdi, rcx
0x4002eb:	call	0x500020
<Block for 0x40038b, 29 bytes>
0x40038b:	mov	rdx, qword ptr [rbp - 0x98]
0x400392:	mov	qword ptr [rax], rdx
0x400395:	lea	rdx, [rbp - 0x80]
0x400399:	lea	rax, [rbp - 0x50]
0x40039d:	mov	rsi, rdx
0x4003a0:	mov	rdi, rax
0x4003a3:	call	0x4005c0
<Block for 0x4002f0, 10 bytes>
0x4002f0:	test	rax, rax
0x4002f3:	sete	al
0x4002f6:	test	al, al
0x4002f8:	je	0x40031a
<Block for 0x4003a8, 12 bytes>
0x4003a8:	lea	rax, [rbp - 0x50]
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x500050
<Block for 0x40031a, 15 bytes>
0x40031a:	mov	rax, qword ptr [rbp - 0x88]
0x400321:	mov	rdi, rax
0x400324:	call	0x500030
<Block for 0x4002fa, 12 bytes>
0x4002fa:	lea	rdi, [rip + 0x16b]
0x400301:	call	0x500028
<Block for 0x4003b4, 12 bytes>
0x4003b4:	lea	rax, [rbp - 0x50]
0x4003b8:	mov	rdi, rax
0x4003bb:	call	0x4005a0
<Block for 0x400306, 35 bytes>
0x400306:	mov	rdx, qword ptr [rbp - 0x98]
0x40030d:	mov	rax, qword ptr [rbp - 0x90]
0x400314:	add	rax, rdx
0x400317:	mov	byte ptr [rax], 0
0x40031a:	mov	rax, qword ptr [rbp - 0x88]
0x400321:	mov	rdi, rax
0x400324:	call	0x500030
<Block for 0x4003c0, 12 bytes>
0x4003c0:	lea	rax, [rbp - 0x80]
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x4005a0
<Block for 0x4003cc, 16 bytes>
0x4003cc:	nop	
0x4003cd:	mov	rax, qword ptr [rbp - 0x18]
0x4003d1:	xor	rax, qword ptr fs:[0x28]
0x4003da:	je	0x400416
<Block for 0x400416, 10 bytes>
0x400416:	add	rsp, 0x98
0x40041d:	pop	rbx
0x40041e:	pop	rbp
0x40041f:	ret	
<Block for 0x4003dc, 2 bytes>
0x4003dc:	jmp	0x400411
<Block for 0x400411, 5 bytes>
0x400411:	call	0x500048
