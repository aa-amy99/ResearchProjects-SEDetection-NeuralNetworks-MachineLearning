<Block for 0x4000d6, 80 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	sub	rsp, 0x20
0x4000e2:	mov	rax, qword ptr fs:[0x28]
0x4000eb:	mov	qword ptr [rbp - 8], rax
0x4000ef:	xor	eax, eax
0x4000f1:	mov	qword ptr [rbp - 0x18], 0
0x4000f9:	lea	rax, [rip + 0xfff28]
0x400100:	mov	qword ptr [rbp - 0x20], rax
0x400104:	lea	rax, [rbp - 0x20]
0x400108:	mov	qword ptr [rbp - 0x10], rax
0x40010c:	mov	rax, qword ptr [rbp - 0x10]
0x400110:	mov	rax, qword ptr [rax]
0x400113:	mov	rcx, qword ptr [rax]
0x400116:	mov	rdx, qword ptr [rbp - 0x18]
0x40011a:	mov	rax, qword ptr [rbp - 0x10]
0x40011e:	mov	rsi, rdx
0x400121:	mov	rdi, rax
0x400124:	call	rcx
<Block for 0x400126, 16 bytes>
0x400126:	nop	
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	xor	rax, qword ptr fs:[0x28]
0x400134:	je	0x40013b
<Block for 0x40013b, 2 bytes>
0x40013b:	leave	
0x40013c:	ret	
<Block for 0x400136, 5 bytes>
0x400136:	call	0x500008
