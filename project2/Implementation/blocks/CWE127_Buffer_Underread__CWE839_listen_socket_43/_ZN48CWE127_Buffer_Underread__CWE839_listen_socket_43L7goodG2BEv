<Block for 0x400207, 46 bytes>
0x400207:	endbr64	
0x40020b:	push	rbp
0x40020c:	mov	rbp, rsp
0x40020f:	sub	rsp, 0x40
0x400213:	mov	rax, qword ptr fs:[0x28]
0x40021c:	mov	qword ptr [rbp - 8], rax
0x400220:	xor	eax, eax
0x400222:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400229:	lea	rax, [rbp - 0x34]
0x40022d:	mov	rdi, rax
0x400230:	call	0x4001ee
<Block for 0x400235, 48 bytes>
0x400235:	mov	qword ptr [rbp - 0x30], 0
0x40023d:	mov	qword ptr [rbp - 0x28], 0
0x400245:	mov	qword ptr [rbp - 0x20], 0
0x40024d:	mov	qword ptr [rbp - 0x18], 0
0x400255:	mov	qword ptr [rbp - 0x10], 0
0x40025d:	mov	eax, dword ptr [rbp - 0x34]
0x400260:	cmp	eax, 9
0x400263:	jg	0x400277
<Block for 0x400265, 16 bytes>
0x400265:	mov	eax, dword ptr [rbp - 0x34]
0x400268:	cdqe	
0x40026a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40026e:	mov	edi, eax
0x400270:	call	0x500050
<Block for 0x400277, 12 bytes>
0x400277:	lea	rdi, [rip + 0x23a]
0x40027e:	call	0x500058
<Block for 0x400275, 2 bytes>
0x400275:	jmp	0x400291
<Block for 0x400283, 2 bytes>
0x400283:	jmp	0x400291
<Block for 0x400291, 15 bytes>
0x400291:	mov	rax, qword ptr [rbp - 8]
0x400295:	xor	rax, qword ptr fs:[0x28]
0x40029e:	je	0x4002a5
<Block for 0x4002a5, 2 bytes>
0x4002a5:	leave	
0x4002a6:	ret	
<Block for 0x4002a0, 5 bytes>
0x4002a0:	call	0x500048
