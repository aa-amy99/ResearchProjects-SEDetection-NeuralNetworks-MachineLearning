<Block for 0x4002a7, 65 bytes>
0x4002a7:	endbr64	
0x4002ab:	push	rbp
0x4002ac:	mov	rbp, rsp
0x4002af:	sub	rsp, 0x50
0x4002b3:	mov	qword ptr [rbp - 0x48], rdi
0x4002b7:	mov	rax, qword ptr fs:[0x28]
0x4002c0:	mov	qword ptr [rbp - 8], rax
0x4002c4:	xor	eax, eax
0x4002c6:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4002cd:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4002d4:	mov	edx, 6
0x4002d9:	mov	esi, 1
0x4002de:	mov	edi, 2
0x4002e3:	call	0x500000
<Block for 0x4002e8, 13 bytes>
0x4002e8:	mov	dword ptr [rbp - 0x38], eax
0x4002eb:	cmp	dword ptr [rbp - 0x38], -1
0x4002ef:	je	0x4003c1
<Block for 0x4003c1, 3 bytes>
0x4003c1:	nop	
0x4003c2:	jmp	0x4003cb
<Block for 0x4002f5, 22 bytes>
0x4002f5:	lea	rax, [rbp - 0x30]
0x4002f9:	mov	edx, 0x10
0x4002fe:	mov	esi, 0
0x400303:	mov	rdi, rax
0x400306:	call	0x500008
<Block for 0x4003cb, 6 bytes>
0x4003cb:	cmp	dword ptr [rbp - 0x38], -1
0x4003cf:	je	0x4003db
<Block for 0x40030b, 23 bytes>
0x40030b:	mov	word ptr [rbp - 0x30], 2
0x400311:	mov	dword ptr [rbp - 0x2c], 0
0x400318:	mov	edi, 0x6987
0x40031d:	call	0x500010
<Block for 0x4003db, 6 bytes>
0x4003db:	cmp	dword ptr [rbp - 0x3c], -1
0x4003df:	je	0x4003eb
<Block for 0x4003d1, 10 bytes>
0x4003d1:	mov	eax, dword ptr [rbp - 0x38]
0x4003d4:	mov	edi, eax
0x4003d6:	call	0x500040
<Block for 0x400322, 26 bytes>
0x400322:	mov	word ptr [rbp - 0x2e], ax
0x400326:	lea	rcx, [rbp - 0x30]
0x40032a:	mov	eax, dword ptr [rbp - 0x38]
0x40032d:	mov	edx, 0x10
0x400332:	mov	rsi, rcx
0x400335:	mov	edi, eax
0x400337:	call	0x500018
<Block for 0x4003eb, 16 bytes>
0x4003eb:	nop	
0x4003ec:	mov	rax, qword ptr [rbp - 8]
0x4003f0:	xor	rax, qword ptr fs:[0x28]
0x4003f9:	je	0x400400
<Block for 0x4003e1, 10 bytes>
0x4003e1:	mov	eax, dword ptr [rbp - 0x3c]
0x4003e4:	mov	edi, eax
0x4003e6:	call	0x500040
<Block for 0x40033c, 10 bytes>
0x40033c:	cmp	eax, -1
0x40033f:	sete	al
0x400342:	test	al, al
0x400344:	jne	0x4003c4
<Block for 0x400400, 2 bytes>
0x400400:	leave	
0x400401:	ret	
<Block for 0x4003fb, 5 bytes>
0x4003fb:	call	0x500048
<Block for 0x400346, 15 bytes>
0x400346:	mov	eax, dword ptr [rbp - 0x38]
0x400349:	mov	esi, 5
0x40034e:	mov	edi, eax
0x400350:	call	0x500020
<Block for 0x4003c4, 3 bytes>
0x4003c4:	nop	
0x4003c5:	jmp	0x4003cb
<Block for 0x400355, 10 bytes>
0x400355:	cmp	eax, -1
0x400358:	sete	al
0x40035b:	test	al, al
0x40035d:	jne	0x4003c7
<Block for 0x40035f, 20 bytes>
0x40035f:	mov	eax, dword ptr [rbp - 0x38]
0x400362:	mov	edx, 0
0x400367:	mov	esi, 0
0x40036c:	mov	edi, eax
0x40036e:	call	0x500028
<Block for 0x4003c7, 3 bytes>
0x4003c7:	nop	
0x4003c8:	jmp	0x4003cb
<Block for 0x400373, 9 bytes>
0x400373:	mov	dword ptr [rbp - 0x3c], eax
0x400376:	cmp	dword ptr [rbp - 0x3c], -1
0x40037a:	je	0x4003ca
<Block for 0x40037c, 24 bytes>
0x40037c:	lea	rsi, [rbp - 0x16]
0x400380:	mov	eax, dword ptr [rbp - 0x3c]
0x400383:	mov	ecx, 0
0x400388:	mov	edx, 0xd
0x40038d:	mov	edi, eax
0x40038f:	call	0x500030
<Block for 0x4003ca, 1 bytes>
0x4003ca:	nop	
<Block for 0x400394, 9 bytes>
0x400394:	mov	dword ptr [rbp - 0x34], eax
0x400397:	cmp	dword ptr [rbp - 0x34], -1
0x40039b:	je	0x4003cb
<Block for 0x40039d, 6 bytes>
0x40039d:	cmp	dword ptr [rbp - 0x34], 0
0x4003a1:	je	0x4003cb
<Block for 0x4003a3, 22 bytes>
0x4003a3:	mov	eax, dword ptr [rbp - 0x34]
0x4003a6:	cdqe	
0x4003a8:	mov	byte ptr [rbp + rax - 0x16], 0
0x4003ad:	lea	rax, [rbp - 0x16]
0x4003b1:	mov	rdi, rax
0x4003b4:	call	0x500038
<Block for 0x4003b9, 8 bytes>
0x4003b9:	mov	rdx, qword ptr [rbp - 0x48]
0x4003bd:	mov	dword ptr [rdx], eax
0x4003bf:	jmp	0x4003cb
