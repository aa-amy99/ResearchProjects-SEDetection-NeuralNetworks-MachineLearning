<Block for 0x4001e2, 48 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0x90
0x4001f1:	mov	rax, qword ptr fs:[0x28]
0x4001fa:	mov	qword ptr [rbp - 8], rax
0x4001fe:	xor	eax, eax
0x400200:	mov	qword ptr [rbp - 0x80], 0
0x400208:	mov	edi, 0x64
0x40020d:	call	0x500000
<Block for 0x400212, 11 bytes>
0x400212:	mov	qword ptr [rbp - 0x78], rax
0x400216:	cmp	qword ptr [rbp - 0x78], 0
0x40021b:	jne	0x400227
<Block for 0x40021d, 10 bytes>
0x40021d:	mov	edi, 0xffffffff
0x400222:	call	0x500008
<Block for 0x400227, 22 bytes>
0x400227:	mov	rax, qword ptr [rbp - 0x78]
0x40022b:	mov	edx, 0x63
0x400230:	mov	esi, 0x41
0x400235:	mov	rdi, rax
0x400238:	call	0x500010
<Block for 0x40023d, 41 bytes>
0x40023d:	mov	rax, qword ptr [rbp - 0x78]
0x400241:	add	rax, 0x63
0x400245:	mov	byte ptr [rax], 0
0x400248:	mov	rax, qword ptr [rbp - 0x78]
0x40024c:	mov	qword ptr [rbp - 0x80], rax
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	edx, 0x63
0x400259:	mov	esi, 0x43
0x40025e:	mov	rdi, rax
0x400261:	call	0x500010
<Block for 0x400266, 17 bytes>
0x400266:	mov	byte ptr [rbp - 0xd], 0
0x40026a:	mov	qword ptr [rbp - 0x88], 0
0x400275:	jmp	0x4002a0
<Block for 0x4002a0, 10 bytes>
0x4002a0:	cmp	qword ptr [rbp - 0x88], 0x63
0x4002a8:	jbe	0x400277
<Block for 0x400277, 51 bytes>
0x400277:	mov	rdx, qword ptr [rbp - 0x80]
0x40027b:	mov	rax, qword ptr [rbp - 0x88]
0x400282:	add	rax, rdx
0x400285:	movzx	eax, byte ptr [rax]
0x400288:	lea	rcx, [rbp - 0x70]
0x40028c:	mov	rdx, qword ptr [rbp - 0x88]
0x400293:	add	rdx, rcx
0x400296:	mov	byte ptr [rdx], al
0x400298:	add	qword ptr [rbp - 0x88], 1
0x4002a0:	cmp	qword ptr [rbp - 0x88], 0x63
0x4002a8:	jbe	0x400277
<Block for 0x4002aa, 16 bytes>
0x4002aa:	mov	byte ptr [rbp - 0xd], 0
0x4002ae:	lea	rax, [rbp - 0x70]
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500018
<Block for 0x4002ba, 16 bytes>
0x4002ba:	nop	
0x4002bb:	mov	rax, qword ptr [rbp - 8]
0x4002bf:	xor	rax, qword ptr fs:[0x28]
0x4002c8:	je	0x4002cf
<Block for 0x4002cf, 2 bytes>
0x4002cf:	leave	
0x4002d0:	ret	
<Block for 0x4002ca, 5 bytes>
0x4002ca:	call	0x500020
