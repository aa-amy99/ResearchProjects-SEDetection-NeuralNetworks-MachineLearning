<Block for 0x4000f3, 48 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x90
0x400102:	mov	rax, qword ptr fs:[0x28]
0x40010b:	mov	qword ptr [rbp - 8], rax
0x40010f:	xor	eax, eax
0x400111:	mov	qword ptr [rbp - 0x80], 0
0x400119:	mov	edi, 0x64
0x40011e:	call	0x500000
<Block for 0x400123, 11 bytes>
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	cmp	qword ptr [rbp - 0x78], 0
0x40012c:	jne	0x400138
<Block for 0x40012e, 10 bytes>
0x40012e:	mov	edi, 0xffffffff
0x400133:	call	0x500008
<Block for 0x400138, 22 bytes>
0x400138:	mov	rax, qword ptr [rbp - 0x78]
0x40013c:	mov	edx, 0x63
0x400141:	mov	esi, 0x41
0x400146:	mov	rdi, rax
0x400149:	call	0x500010
<Block for 0x40014e, 41 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 0x78]
0x400152:	add	rax, 0x63
0x400156:	mov	byte ptr [rax], 0
0x400159:	mov	rax, qword ptr [rbp - 0x78]
0x40015d:	mov	qword ptr [rbp - 0x80], rax
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500010
<Block for 0x400177, 17 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	mov	qword ptr [rbp - 0x88], 0
0x400186:	jmp	0x4001b1
<Block for 0x4001b1, 10 bytes>
0x4001b1:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001b9:	jbe	0x400188
<Block for 0x400188, 51 bytes>
0x400188:	mov	rdx, qword ptr [rbp - 0x80]
0x40018c:	mov	rax, qword ptr [rbp - 0x88]
0x400193:	add	rax, rdx
0x400196:	movzx	eax, byte ptr [rax]
0x400199:	lea	rcx, [rbp - 0x70]
0x40019d:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a4:	add	rdx, rcx
0x4001a7:	mov	byte ptr [rdx], al
0x4001a9:	add	qword ptr [rbp - 0x88], 1
0x4001b1:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001b9:	jbe	0x400188
<Block for 0x4001bb, 16 bytes>
0x4001bb:	mov	byte ptr [rbp - 0xd], 0
0x4001bf:	lea	rax, [rbp - 0x70]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500018
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500020
