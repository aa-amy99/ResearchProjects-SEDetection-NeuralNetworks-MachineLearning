<Block for 0x40005b, 26 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0x20
0x400067:	mov	qword ptr [rbp - 0x18], rdi
0x40006b:	mov	eax, dword ptr [rip + 0xfffa7]
0x400071:	test	eax, eax
0x400073:	je	0x400083
<Block for 0x400083, 10 bytes>
0x400083:	mov	edi, 0x64
0x400088:	call	0x500008
<Block for 0x400075, 12 bytes>
0x400075:	lea	rdi, [rip + 0x9b]
0x40007c:	call	0x500020
<Block for 0x40008d, 26 bytes>
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x41
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x400081, 2 bytes>
0x400081:	jmp	0x4000ba
<Block for 0x4000a7, 25 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	add	rax, 0x63
0x4000af:	mov	byte ptr [rax], 0
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	mov	qword ptr [rbp - 0x18], rax
0x4000ba:	mov	rax, qword ptr [rbp - 0x18]
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000ba, 6 bytes>
0x4000ba:	mov	rax, qword ptr [rbp - 0x18]
0x4000be:	leave	
0x4000bf:	ret	
