<Block for 0x400044, 22 bytes>
0x400044:	endbr64	
0x400048:	push	rbp
0x400049:	mov	rbp, rsp
0x40004c:	sub	rsp, 0x10
0x400050:	mov	eax, 0
0x400055:	call	0x500018
<Block for 0x40005a, 4 bytes>
0x40005a:	test	eax, eax
0x40005c:	je	0x40006c
<Block for 0x40006c, 5 bytes>
0x40006c:	call	0x500008
<Block for 0x40005e, 12 bytes>
0x40005e:	lea	rdi, [rip + 0xb6]
0x400065:	call	0x500020
<Block for 0x400071, 8 bytes>
0x400071:	mov	dword ptr [rbp - 8], eax
0x400074:	call	0x500008
<Block for 0x40006a, 2 bytes>
0x40006a:	jmp	0x4000a4
<Block for 0x400079, 7 bytes>
0x400079:	and	eax, 1
0x40007c:	test	eax, eax
0x40007e:	jne	0x400083
<Block for 0x4000a4, 3 bytes>
0x4000a4:	nop	
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x400080, 10 bytes>
0x400080:	not	dword ptr [rbp - 8]
0x400083:	mov	eax, dword ptr [rbp - 8]
0x400086:	test	eax, eax
0x400088:	jns	0x400094
<Block for 0x400083, 7 bytes>
0x400083:	mov	eax, dword ptr [rbp - 8]
0x400086:	test	eax, eax
0x400088:	jns	0x400094
<Block for 0x40008a, 10 bytes>
0x40008a:	mov	edi, 1
0x40008f:	call	0x500028
<Block for 0x400094, 16 bytes>
0x400094:	mov	eax, dword ptr [rbp - 8]
0x400097:	mov	dword ptr [rbp - 4], eax
0x40009a:	mov	eax, dword ptr [rbp - 4]
0x40009d:	mov	edi, eax
0x40009f:	call	0x500010
