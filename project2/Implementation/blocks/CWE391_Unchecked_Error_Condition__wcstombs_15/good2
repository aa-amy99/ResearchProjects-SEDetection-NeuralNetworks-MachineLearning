<Block for 0x400111, 44 bytes>
0x400111:	endbr64	
0x400115:	push	rbp
0x400116:	mov	rbp, rsp
0x400119:	add	rsp, -0x80
0x40011d:	mov	rax, qword ptr fs:[0x28]
0x400126:	mov	qword ptr [rbp - 8], rax
0x40012a:	xor	eax, eax
0x40012c:	mov	qword ptr [rbp - 0x78], 0
0x400134:	mov	byte ptr [rbp - 0x70], 0
0x400138:	call	0x500020
<Block for 0x40013d, 30 bytes>
0x40013d:	mov	dword ptr [rax], 0
0x400143:	lea	rax, [rbp - 0x70]
0x400147:	mov	edx, 0x64
0x40014c:	lea	rsi, [rip + 0x7d]
0x400153:	mov	rdi, rax
0x400156:	call	0x500000
<Block for 0x40015b, 9 bytes>
0x40015b:	mov	qword ptr [rbp - 0x78], rax
0x40015f:	call	0x500020
<Block for 0x400164, 7 bytes>
0x400164:	mov	eax, dword ptr [rax]
0x400166:	cmp	eax, 0x54
0x400169:	jne	0x400181
<Block for 0x40016b, 12 bytes>
0x40016b:	lea	rdi, [rip + 0x66]
0x400172:	call	0x500010
<Block for 0x400181, 11 bytes>
0x400181:	mov	rax, qword ptr [rbp - 0x78]
0x400185:	mov	edi, eax
0x400187:	call	0x500008
<Block for 0x400177, 10 bytes>
0x400177:	mov	edi, 1
0x40017c:	call	0x500028
<Block for 0x40018c, 12 bytes>
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	rdi, rax
0x400193:	call	0x500010
<Block for 0x400198, 17 bytes>
0x400198:	nop	
0x400199:	nop	
0x40019a:	mov	rax, qword ptr [rbp - 8]
0x40019e:	xor	rax, qword ptr fs:[0x28]
0x4001a7:	je	0x4001ae
<Block for 0x4001ae, 2 bytes>
0x4001ae:	leave	
0x4001af:	ret	
<Block for 0x4001a9, 5 bytes>
0x4001a9:	call	0x500018
