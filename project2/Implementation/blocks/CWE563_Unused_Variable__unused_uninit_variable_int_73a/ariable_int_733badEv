<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400290
<Block for 0x400028, 19 bytes>
0x400028:	lea	rdx, [rbp - 0x54]
0x40002c:	lea	rax, [rbp - 0x50]
0x400030:	mov	rsi, rdx
0x400033:	mov	rdi, rax
0x400036:	call	0x400384
<Block for 0x40003b, 19 bytes>
0x40003b:	lea	rdx, [rbp - 0x54]
0x40003f:	lea	rax, [rbp - 0x50]
0x400043:	mov	rsi, rdx
0x400046:	mov	rdi, rax
0x400049:	call	0x400384
<Block for 0x40004e, 19 bytes>
0x40004e:	lea	rdx, [rbp - 0x54]
0x400052:	lea	rax, [rbp - 0x50]
0x400056:	mov	rsi, rdx
0x400059:	mov	rdi, rax
0x40005c:	call	0x400384
<Block for 0x400061, 19 bytes>
0x400061:	lea	rdx, [rbp - 0x50]
0x400065:	lea	rax, [rbp - 0x30]
0x400069:	mov	rsi, rdx
0x40006c:	mov	rdi, rax
0x40006f:	call	0x4003be
<Block for 0x400074, 12 bytes>
0x400074:	lea	rax, [rbp - 0x30]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500000
<Block for 0x400080, 12 bytes>
0x400080:	lea	rax, [rbp - 0x30]
0x400084:	mov	rdi, rax
0x400087:	call	0x4002b0
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rax, [rbp - 0x50]
0x400090:	mov	rdi, rax
0x400093:	call	0x4002b0
<Block for 0x400098, 16 bytes>
0x400098:	nop	
0x400099:	mov	rax, qword ptr [rbp - 0x18]
0x40009d:	xor	rax, qword ptr fs:[0x28]
0x4000a6:	je	0x4000e2
<Block for 0x4000e2, 7 bytes>
0x4000e2:	add	rsp, 0x58
0x4000e6:	pop	rbx
0x4000e7:	pop	rbp
0x4000e8:	ret	
<Block for 0x4000a8, 2 bytes>
0x4000a8:	jmp	0x4000dd
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500010
