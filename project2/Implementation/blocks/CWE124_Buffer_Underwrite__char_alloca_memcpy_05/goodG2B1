<Block for 0x4001a8, 85 bytes>
0x4001a8:	endbr64	
0x4001ac:	push	rbp
0x4001ad:	mov	rbp, rsp
0x4001b0:	push	rbx
0x4001b1:	sub	rsp, 0x88
0x4001b8:	mov	rax, qword ptr fs:[0x28]
0x4001c1:	mov	qword ptr [rbp - 0x18], rax
0x4001c5:	xor	eax, eax
0x4001c7:	mov	eax, 0x10
0x4001cc:	sub	rax, 1
0x4001d0:	add	rax, 0x6c
0x4001d4:	mov	esi, 0x10
0x4001d9:	mov	edx, 0
0x4001de:	div	rsi
0x4001e1:	imul	rax, rax, 0x10
0x4001e5:	mov	rdx, rax
0x4001e8:	and	rdx, 0xfffffffffffff000
0x4001ef:	mov	rbx, rsp
0x4001f2:	sub	rbx, rdx
0x4001f5:	mov	rdx, rbx
0x4001f8:	cmp	rsp, rdx
0x4001fb:	je	0x40020f
<Block for 0x40020f, 26 bytes>
0x40020f:	mov	rdx, rax
0x400212:	and	edx, 0xfff
0x400218:	sub	rsp, rdx
0x40021b:	mov	rdx, rax
0x40021e:	and	edx, 0xfff
0x400224:	test	rdx, rdx
0x400227:	je	0x400239
<Block for 0x4001fd, 18 bytes>
0x4001fd:	sub	rsp, 0x1000
0x400204:	or	qword ptr [rsp + 0xff8], 0
0x40020d:	jmp	0x4001f8
<Block for 0x400239, 47 bytes>
0x400239:	mov	rax, rsp
0x40023c:	add	rax, 0xf
0x400240:	shr	rax, 4
0x400244:	shl	rax, 4
0x400248:	mov	qword ptr [rbp - 0x88], rax
0x40024f:	mov	rax, qword ptr [rbp - 0x88]
0x400256:	mov	edx, 0x63
0x40025b:	mov	esi, 0x41
0x400260:	mov	rdi, rax
0x400263:	call	0x500000
<Block for 0x400229, 63 bytes>
0x400229:	and	eax, 0xfff
0x40022e:	sub	rax, 8
0x400232:	add	rax, rsp
0x400235:	or	qword ptr [rax], 0
0x400239:	mov	rax, rsp
0x40023c:	add	rax, 0xf
0x400240:	shr	rax, 4
0x400244:	shl	rax, 4
0x400248:	mov	qword ptr [rbp - 0x88], rax
0x40024f:	mov	rax, qword ptr [rbp - 0x88]
0x400256:	mov	edx, 0x63
0x40025b:	mov	esi, 0x41
0x400260:	mov	rdi, rax
0x400263:	call	0x500000
<Block for 0x4001f8, 5 bytes>
0x4001f8:	cmp	rsp, rdx
0x4001fb:	je	0x40020f
<Block for 0x400268, 24 bytes>
0x400268:	mov	rax, qword ptr [rbp - 0x88]
0x40026f:	add	rax, 0x63
0x400273:	mov	byte ptr [rax], 0
0x400276:	mov	eax, dword ptr [rip + 0x2a8]
0x40027c:	test	eax, eax
0x40027e:	je	0x40028e
<Block for 0x40028e, 36 bytes>
0x40028e:	mov	rax, qword ptr [rbp - 0x88]
0x400295:	mov	qword ptr [rbp - 0x90], rax
0x40029c:	lea	rax, [rbp - 0x80]
0x4002a0:	mov	edx, 0x63
0x4002a5:	mov	esi, 0x43
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x500000
<Block for 0x400280, 12 bytes>
0x400280:	lea	rdi, [rip + 0x2a1]
0x400287:	call	0x500008
<Block for 0x4002b2, 141 bytes>
0x4002b2:	mov	byte ptr [rbp - 0x1d], 0
0x4002b6:	mov	rax, qword ptr [rbp - 0x90]
0x4002bd:	mov	rcx, qword ptr [rbp - 0x80]
0x4002c1:	mov	rbx, qword ptr [rbp - 0x78]
0x4002c5:	mov	qword ptr [rax], rcx
0x4002c8:	mov	qword ptr [rax + 8], rbx
0x4002cc:	mov	rcx, qword ptr [rbp - 0x70]
0x4002d0:	mov	rbx, qword ptr [rbp - 0x68]
0x4002d4:	mov	qword ptr [rax + 0x10], rcx
0x4002d8:	mov	qword ptr [rax + 0x18], rbx
0x4002dc:	mov	rcx, qword ptr [rbp - 0x60]
0x4002e0:	mov	rbx, qword ptr [rbp - 0x58]
0x4002e4:	mov	qword ptr [rax + 0x20], rcx
0x4002e8:	mov	qword ptr [rax + 0x28], rbx
0x4002ec:	mov	rcx, qword ptr [rbp - 0x50]
0x4002f0:	mov	rbx, qword ptr [rbp - 0x48]
0x4002f4:	mov	qword ptr [rax + 0x30], rcx
0x4002f8:	mov	qword ptr [rax + 0x38], rbx
0x4002fc:	mov	rcx, qword ptr [rbp - 0x40]
0x400300:	mov	rbx, qword ptr [rbp - 0x38]
0x400304:	mov	qword ptr [rax + 0x40], rcx
0x400308:	mov	qword ptr [rax + 0x48], rbx
0x40030c:	mov	rcx, qword ptr [rbp - 0x30]
0x400310:	mov	rbx, qword ptr [rbp - 0x28]
0x400314:	mov	qword ptr [rax + 0x50], rcx
0x400318:	mov	qword ptr [rax + 0x58], rbx
0x40031c:	mov	edx, dword ptr [rbp - 0x20]
0x40031f:	mov	dword ptr [rax + 0x60], edx
0x400322:	mov	rax, qword ptr [rbp - 0x90]
0x400329:	add	rax, 0x63
0x40032d:	mov	byte ptr [rax], 0
0x400330:	mov	rax, qword ptr [rbp - 0x90]
0x400337:	mov	rdi, rax
0x40033a:	call	0x500008
<Block for 0x40028c, 2 bytes>
0x40028c:	jmp	0x40029c
<Block for 0x40033f, 16 bytes>
0x40033f:	nop	
0x400340:	mov	rax, qword ptr [rbp - 0x18]
0x400344:	xor	rax, qword ptr fs:[0x28]
0x40034d:	je	0x400354
<Block for 0x40029c, 22 bytes>
0x40029c:	lea	rax, [rbp - 0x80]
0x4002a0:	mov	edx, 0x63
0x4002a5:	mov	esi, 0x43
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x500000
<Block for 0x400354, 6 bytes>
0x400354:	mov	rbx, qword ptr [rbp - 8]
0x400358:	leave	
0x400359:	ret	
<Block for 0x40034f, 5 bytes>
0x40034f:	call	0x500010
