<Block for 0x4002a2, 82 bytes>
0x4002a2:	endbr64	
0x4002a6:	push	rbp
0x4002a7:	mov	rbp, rsp
0x4002aa:	sub	rsp, 0x40
0x4002ae:	mov	rax, qword ptr fs:[0x28]
0x4002b7:	mov	qword ptr [rbp - 8], rax
0x4002bb:	xor	eax, eax
0x4002bd:	mov	eax, dword ptr [rip + 0x1f9]
0x4002c3:	mov	dword ptr [rbp - 0x34], eax
0x4002c6:	mov	qword ptr [rbp - 0x30], 0
0x4002ce:	mov	qword ptr [rbp - 0x28], 0
0x4002d6:	mov	qword ptr [rbp - 0x20], 0
0x4002de:	mov	qword ptr [rbp - 0x18], 0
0x4002e6:	mov	qword ptr [rbp - 0x10], 0
0x4002ee:	cmp	dword ptr [rbp - 0x34], 0
0x4002f2:	js	0x40030c
<Block for 0x40030c, 12 bytes>
0x40030c:	lea	rdi, [rip + 0x1cd]
0x400313:	call	0x500008
<Block for 0x4002f4, 6 bytes>
0x4002f4:	cmp	dword ptr [rbp - 0x34], 9
0x4002f8:	jg	0x40030c
<Block for 0x400318, 16 bytes>
0x400318:	nop	
0x400319:	mov	rax, qword ptr [rbp - 8]
0x40031d:	xor	rax, qword ptr fs:[0x28]
0x400326:	je	0x40032d
<Block for 0x4002fa, 16 bytes>
0x4002fa:	mov	eax, dword ptr [rbp - 0x34]
0x4002fd:	cdqe	
0x4002ff:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400303:	mov	edi, eax
0x400305:	call	0x500000
<Block for 0x40032d, 2 bytes>
0x40032d:	leave	
0x40032e:	ret	
<Block for 0x400328, 5 bytes>
0x400328:	call	0x500010
<Block for 0x40030a, 2 bytes>
0x40030a:	jmp	0x400318
