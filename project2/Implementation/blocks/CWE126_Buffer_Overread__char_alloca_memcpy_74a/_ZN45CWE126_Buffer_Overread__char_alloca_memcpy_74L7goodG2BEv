<Block for 0x40028a, 43 bytes>
0x40028a:	endbr64	
0x40028e:	push	rbp
0x40028f:	mov	rbp, rsp
0x400292:	push	rbx
0x400293:	sub	rsp, 0x98
0x40029a:	mov	rax, qword ptr fs:[0x28]
0x4002a3:	mov	qword ptr [rbp - 0x18], rax
0x4002a7:	xor	eax, eax
0x4002a9:	lea	rax, [rbp - 0x80]
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x400654
<Block for 0x4002b5, 54 bytes>
0x4002b5:	mov	eax, 0x10
0x4002ba:	sub	rax, 1
0x4002be:	add	rax, 0x3a
0x4002c2:	mov	ebx, 0x10
0x4002c7:	mov	edx, 0
0x4002cc:	div	rbx
0x4002cf:	imul	rax, rax, 0x10
0x4002d3:	mov	rdx, rax
0x4002d6:	and	rdx, 0xfffffffffffff000
0x4002dd:	mov	rcx, rsp
0x4002e0:	sub	rcx, rdx
0x4002e3:	mov	rdx, rcx
0x4002e6:	cmp	rsp, rdx
0x4002e9:	je	0x4002fd
<Block for 0x4002fd, 26 bytes>
0x4002fd:	mov	rdx, rax
0x400300:	and	edx, 0xfff
0x400306:	sub	rsp, rdx
0x400309:	mov	rdx, rax
0x40030c:	and	edx, 0xfff
0x400312:	test	rdx, rdx
0x400315:	je	0x400327
<Block for 0x4002eb, 18 bytes>
0x4002eb:	sub	rsp, 0x1000
0x4002f2:	or	qword ptr [rsp + 0xff8], 0
0x4002fb:	jmp	0x4002e6
<Block for 0x400327, 76 bytes>
0x400327:	mov	rax, rsp
0x40032a:	add	rax, 0xf
0x40032e:	shr	rax, 4
0x400332:	shl	rax, 4
0x400336:	mov	qword ptr [rbp - 0x98], rax
0x40033d:	mov	eax, 0x10
0x400342:	sub	rax, 1
0x400346:	add	rax, 0x6c
0x40034a:	mov	ecx, 0x10
0x40034f:	mov	edx, 0
0x400354:	div	rcx
0x400357:	imul	rax, rax, 0x10
0x40035b:	mov	rdx, rax
0x40035e:	and	rdx, 0xfffffffffffff000
0x400365:	mov	rcx, rsp
0x400368:	sub	rcx, rdx
0x40036b:	mov	rdx, rcx
0x40036e:	cmp	rsp, rdx
0x400371:	je	0x400385
<Block for 0x400317, 92 bytes>
0x400317:	and	eax, 0xfff
0x40031c:	sub	rax, 8
0x400320:	add	rax, rsp
0x400323:	or	qword ptr [rax], 0
0x400327:	mov	rax, rsp
0x40032a:	add	rax, 0xf
0x40032e:	shr	rax, 4
0x400332:	shl	rax, 4
0x400336:	mov	qword ptr [rbp - 0x98], rax
0x40033d:	mov	eax, 0x10
0x400342:	sub	rax, 1
0x400346:	add	rax, 0x6c
0x40034a:	mov	ecx, 0x10
0x40034f:	mov	edx, 0
0x400354:	div	rcx
0x400357:	imul	rax, rax, 0x10
0x40035b:	mov	rdx, rax
0x40035e:	and	rdx, 0xfffffffffffff000
0x400365:	mov	rcx, rsp
0x400368:	sub	rcx, rdx
0x40036b:	mov	rdx, rcx
0x40036e:	cmp	rsp, rdx
0x400371:	je	0x400385
<Block for 0x4002e6, 5 bytes>
0x4002e6:	cmp	rsp, rdx
0x4002e9:	je	0x4002fd
<Block for 0x400385, 26 bytes>
0x400385:	mov	rdx, rax
0x400388:	and	edx, 0xfff
0x40038e:	sub	rsp, rdx
0x400391:	mov	rdx, rax
0x400394:	and	edx, 0xfff
0x40039a:	test	rdx, rdx
0x40039d:	je	0x4003af
<Block for 0x400373, 18 bytes>
0x400373:	sub	rsp, 0x1000
0x40037a:	or	qword ptr [rsp + 0xff8], 0
0x400383:	jmp	0x40036e
<Block for 0x4003af, 47 bytes>
0x4003af:	mov	rax, rsp
0x4003b2:	add	rax, 0xf
0x4003b6:	shr	rax, 4
0x4003ba:	shl	rax, 4
0x4003be:	mov	qword ptr [rbp - 0x90], rax
0x4003c5:	mov	rax, qword ptr [rbp - 0x98]
0x4003cc:	mov	edx, 0x31
0x4003d1:	mov	esi, 0x41
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x500000
<Block for 0x40039f, 63 bytes>
0x40039f:	and	eax, 0xfff
0x4003a4:	sub	rax, 8
0x4003a8:	add	rax, rsp
0x4003ab:	or	qword ptr [rax], 0
0x4003af:	mov	rax, rsp
0x4003b2:	add	rax, 0xf
0x4003b6:	shr	rax, 4
0x4003ba:	shl	rax, 4
0x4003be:	mov	qword ptr [rbp - 0x90], rax
0x4003c5:	mov	rax, qword ptr [rbp - 0x98]
0x4003cc:	mov	edx, 0x31
0x4003d1:	mov	esi, 0x41
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x500000
<Block for 0x40036e, 5 bytes>
0x40036e:	cmp	rsp, rdx
0x400371:	je	0x400385
<Block for 0x4003de, 39 bytes>
0x4003de:	mov	rax, qword ptr [rbp - 0x98]
0x4003e5:	add	rax, 0x31
0x4003e9:	mov	byte ptr [rax], 0
0x4003ec:	mov	rax, qword ptr [rbp - 0x90]
0x4003f3:	mov	edx, 0x63
0x4003f8:	mov	esi, 0x41
0x4003fd:	mov	rdi, rax
0x400400:	call	0x500000
<Block for 0x400405, 54 bytes>
0x400405:	mov	rax, qword ptr [rbp - 0x90]
0x40040c:	add	rax, 0x63
0x400410:	mov	byte ptr [rax], 0
0x400413:	mov	rax, qword ptr [rbp - 0x90]
0x40041a:	mov	qword ptr [rbp - 0x88], rax
0x400421:	mov	dword ptr [rbp - 0x50], 0
0x400428:	lea	rdx, [rbp - 0x50]
0x40042c:	lea	rax, [rbp - 0x80]
0x400430:	mov	rsi, rdx
0x400433:	mov	rdi, rax
0x400436:	call	0x40080e
<Block for 0x40043b, 36 bytes>
0x40043b:	mov	rdx, qword ptr [rbp - 0x88]
0x400442:	mov	qword ptr [rax], rdx
0x400445:	mov	dword ptr [rbp - 0x50], 1
0x40044c:	lea	rdx, [rbp - 0x50]
0x400450:	lea	rax, [rbp - 0x80]
0x400454:	mov	rsi, rdx
0x400457:	mov	rdi, rax
0x40045a:	call	0x40080e
<Block for 0x40045f, 36 bytes>
0x40045f:	mov	rdx, qword ptr [rbp - 0x88]
0x400466:	mov	qword ptr [rax], rdx
0x400469:	mov	dword ptr [rbp - 0x50], 2
0x400470:	lea	rdx, [rbp - 0x50]
0x400474:	lea	rax, [rbp - 0x80]
0x400478:	mov	rsi, rdx
0x40047b:	mov	rdi, rax
0x40047e:	call	0x40080e
<Block for 0x400483, 29 bytes>
0x400483:	mov	rdx, qword ptr [rbp - 0x88]
0x40048a:	mov	qword ptr [rax], rdx
0x40048d:	lea	rdx, [rbp - 0x80]
0x400491:	lea	rax, [rbp - 0x50]
0x400495:	mov	rsi, rdx
0x400498:	mov	rdi, rax
0x40049b:	call	0x400694
<Block for 0x4004a0, 12 bytes>
0x4004a0:	lea	rax, [rbp - 0x50]
0x4004a4:	mov	rdi, rax
0x4004a7:	call	0x500020
<Block for 0x4004ac, 12 bytes>
0x4004ac:	lea	rax, [rbp - 0x50]
0x4004b0:	mov	rdi, rax
0x4004b3:	call	0x400674
<Block for 0x4004b8, 12 bytes>
0x4004b8:	lea	rax, [rbp - 0x80]
0x4004bc:	mov	rdi, rax
0x4004bf:	call	0x400674
<Block for 0x4004c4, 16 bytes>
0x4004c4:	nop	
0x4004c5:	mov	rax, qword ptr [rbp - 0x18]
0x4004c9:	xor	rax, qword ptr fs:[0x28]
0x4004d2:	je	0x40050e
<Block for 0x40050e, 6 bytes>
0x40050e:	mov	rbx, qword ptr [rbp - 8]
0x400512:	leave	
0x400513:	ret	
<Block for 0x4004d4, 2 bytes>
0x4004d4:	jmp	0x400509
<Block for 0x400509, 5 bytes>
0x400509:	call	0x500018
