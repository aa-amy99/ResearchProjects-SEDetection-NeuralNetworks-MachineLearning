<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400528
<Block for 0x400028, 38 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002f:	mov	rax, qword ptr [rip + 0xfffca]
0x400036:	lea	rdx, [rbp - 0x5c]
0x40003a:	lea	rsi, [rip + 0x48c]
0x400041:	mov	rdi, rax
0x400044:	mov	eax, 0
0x400049:	call	0x500008
<Block for 0x40004e, 12 bytes>
0x40004e:	lea	rax, [rbp - 0x50]
0x400052:	mov	rdi, rax
0x400055:	call	0x4006ce
<Block for 0x40005a, 23 bytes>
0x40005a:	mov	qword ptr [rbp - 0x58], rax
0x40005e:	lea	rdx, [rbp - 0x58]
0x400062:	lea	rax, [rbp - 0x30]
0x400066:	mov	rsi, rdx
0x400069:	mov	rdi, rax
0x40006c:	call	0x40071e
<Block for 0x400071, 28 bytes>
0x400071:	lea	rdx, [rbp - 0x5c]
0x400075:	mov	rsi, qword ptr [rbp - 0x30]
0x400079:	lea	rax, [rbp - 0x50]
0x40007d:	mov	rcx, rdx
0x400080:	mov	edx, 1
0x400085:	mov	rdi, rax
0x400088:	call	0x40074c
<Block for 0x40008d, 12 bytes>
0x40008d:	lea	rax, [rbp - 0x50]
0x400091:	mov	rdi, rax
0x400094:	call	0x4006ce
<Block for 0x400099, 23 bytes>
0x400099:	mov	qword ptr [rbp - 0x58], rax
0x40009d:	lea	rdx, [rbp - 0x58]
0x4000a1:	lea	rax, [rbp - 0x30]
0x4000a5:	mov	rsi, rdx
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x40071e
<Block for 0x4000b0, 28 bytes>
0x4000b0:	lea	rdx, [rbp - 0x5c]
0x4000b4:	mov	rsi, qword ptr [rbp - 0x30]
0x4000b8:	lea	rax, [rbp - 0x50]
0x4000bc:	mov	rcx, rdx
0x4000bf:	mov	edx, 1
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x40074c
<Block for 0x4000cc, 12 bytes>
0x4000cc:	lea	rax, [rbp - 0x50]
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x4006ce
<Block for 0x4000d8, 23 bytes>
0x4000d8:	mov	qword ptr [rbp - 0x58], rax
0x4000dc:	lea	rdx, [rbp - 0x58]
0x4000e0:	lea	rax, [rbp - 0x30]
0x4000e4:	mov	rsi, rdx
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x40071e
<Block for 0x4000ef, 28 bytes>
0x4000ef:	lea	rdx, [rbp - 0x5c]
0x4000f3:	mov	rsi, qword ptr [rbp - 0x30]
0x4000f7:	lea	rax, [rbp - 0x50]
0x4000fb:	mov	rcx, rdx
0x4000fe:	mov	edx, 1
0x400103:	mov	rdi, rax
0x400106:	call	0x40074c
<Block for 0x40010b, 19 bytes>
0x40010b:	lea	rdx, [rbp - 0x50]
0x40010f:	lea	rax, [rbp - 0x30]
0x400113:	mov	rsi, rdx
0x400116:	mov	rdi, rax
0x400119:	call	0x400812
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rax, [rbp - 0x30]
0x400122:	mov	rdi, rax
0x400125:	call	0x500010
<Block for 0x40012a, 12 bytes>
0x40012a:	lea	rax, [rbp - 0x30]
0x40012e:	mov	rdi, rax
0x400131:	call	0x400686
<Block for 0x400136, 12 bytes>
0x400136:	lea	rax, [rbp - 0x50]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x400686
<Block for 0x400142, 16 bytes>
0x400142:	nop	
0x400143:	mov	rax, qword ptr [rbp - 0x18]
0x400147:	xor	rax, qword ptr fs:[0x28]
0x400150:	je	0x40018c
<Block for 0x40018c, 7 bytes>
0x40018c:	add	rsp, 0x58
0x400190:	pop	rbx
0x400191:	pop	rbp
0x400192:	ret	
<Block for 0x400152, 2 bytes>
0x400152:	jmp	0x400187
<Block for 0x400187, 5 bytes>
0x400187:	call	0x500020
