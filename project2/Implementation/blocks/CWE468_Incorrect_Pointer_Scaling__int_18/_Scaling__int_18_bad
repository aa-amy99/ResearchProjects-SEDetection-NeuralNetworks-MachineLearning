<Block for 0x400000, 130 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	mov	dword ptr [rbp - 0x30], 1
0x400027:	mov	dword ptr [rbp - 0x2c], 2
0x40002e:	mov	dword ptr [rbp - 0x28], 3
0x400035:	mov	dword ptr [rbp - 0x24], 4
0x40003c:	mov	dword ptr [rbp - 0x20], 5
0x400043:	mov	dword ptr [rbp - 0x1c], 6
0x40004a:	mov	dword ptr [rbp - 0x18], 7
0x400051:	mov	dword ptr [rbp - 0x14], 8
0x400058:	mov	dword ptr [rbp - 0x10], 9
0x40005f:	mov	dword ptr [rbp - 0xc], 0xa
0x400066:	lea	rax, [rbp - 0x30]
0x40006a:	mov	qword ptr [rbp - 0x38], rax
0x40006e:	mov	rax, qword ptr [rbp - 0x38]
0x400072:	mov	eax, dword ptr [rax + 0x20]
0x400075:	mov	dword ptr [rbp - 0x3c], eax
0x400078:	mov	eax, dword ptr [rbp - 0x3c]
0x40007b:	mov	edi, eax
0x40007d:	call	0x500000
<Block for 0x400082, 16 bytes>
0x400082:	nop	
0x400083:	mov	rax, qword ptr [rbp - 8]
0x400087:	xor	rax, qword ptr fs:[0x28]
0x400090:	je	0x400097
<Block for 0x400097, 2 bytes>
0x400097:	leave	
0x400098:	ret	
<Block for 0x400092, 5 bytes>
0x400092:	call	0x500008
