<Block for 0x400056, 46 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x10
0x400062:	mov	rax, qword ptr fs:[0x28]
0x40006b:	mov	qword ptr [rbp - 8], rax
0x40006f:	xor	eax, eax
0x400071:	mov	byte ptr [rbp - 0xb], 0x20
0x400075:	mov	rax, qword ptr [rip + 0xfff94]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500018
<Block for 0x400084, 19 bytes>
0x400084:	mov	byte ptr [rbp - 0xa], al
0x400087:	mov	byte ptr [rbp - 9], 0
0x40008b:	lea	rax, [rbp - 0xa]
0x40008f:	mov	rdi, rax
0x400092:	call	0x500020
<Block for 0x400097, 14 bytes>
0x400097:	mov	byte ptr [rbp - 0xb], al
0x40009a:	movsx	eax, byte ptr [rbp - 0xb]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x400000
<Block for 0x4000a5, 16 bytes>
0x4000a5:	nop	
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	xor	rax, qword ptr fs:[0x28]
0x4000b3:	je	0x4000ba
<Block for 0x4000ba, 2 bytes>
0x4000ba:	leave	
0x4000bb:	ret	
<Block for 0x4000b5, 5 bytes>
0x4000b5:	call	0x500008
