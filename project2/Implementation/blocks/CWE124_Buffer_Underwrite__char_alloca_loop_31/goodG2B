<Block for 0x40017a, 84 bytes>
0x40017a:	endbr64	
0x40017e:	push	rbp
0x40017f:	mov	rbp, rsp
0x400182:	sub	rsp, 0xa0
0x400189:	mov	rax, qword ptr fs:[0x28]
0x400192:	mov	qword ptr [rbp - 8], rax
0x400196:	xor	eax, eax
0x400198:	mov	eax, 0x10
0x40019d:	sub	rax, 1
0x4001a1:	add	rax, 0x6c
0x4001a5:	mov	esi, 0x10
0x4001aa:	mov	edx, 0
0x4001af:	div	rsi
0x4001b2:	imul	rax, rax, 0x10
0x4001b6:	mov	rdx, rax
0x4001b9:	and	rdx, 0xfffffffffffff000
0x4001c0:	mov	rcx, rsp
0x4001c3:	sub	rcx, rdx
0x4001c6:	mov	rdx, rcx
0x4001c9:	cmp	rsp, rdx
0x4001cc:	je	0x4001e0
<Block for 0x4001e0, 26 bytes>
0x4001e0:	mov	rdx, rax
0x4001e3:	and	edx, 0xfff
0x4001e9:	sub	rsp, rdx
0x4001ec:	mov	rdx, rax
0x4001ef:	and	edx, 0xfff
0x4001f5:	test	rdx, rdx
0x4001f8:	je	0x40020a
<Block for 0x4001ce, 18 bytes>
0x4001ce:	sub	rsp, 0x1000
0x4001d5:	or	qword ptr [rsp + 0xff8], 0
0x4001de:	jmp	0x4001c9
<Block for 0x40020a, 47 bytes>
0x40020a:	mov	rax, rsp
0x40020d:	add	rax, 0xf
0x400211:	shr	rax, 4
0x400215:	shl	rax, 4
0x400219:	mov	qword ptr [rbp - 0x90], rax
0x400220:	mov	rax, qword ptr [rbp - 0x90]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x41
0x400231:	mov	rdi, rax
0x400234:	call	0x500000
<Block for 0x4001fa, 63 bytes>
0x4001fa:	and	eax, 0xfff
0x4001ff:	sub	rax, 8
0x400203:	add	rax, rsp
0x400206:	or	qword ptr [rax], 0
0x40020a:	mov	rax, rsp
0x40020d:	add	rax, 0xf
0x400211:	shr	rax, 4
0x400215:	shl	rax, 4
0x400219:	mov	qword ptr [rbp - 0x90], rax
0x400220:	mov	rax, qword ptr [rbp - 0x90]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x41
0x400231:	mov	rdi, rax
0x400234:	call	0x500000
<Block for 0x4001c9, 5 bytes>
0x4001c9:	cmp	rsp, rdx
0x4001cc:	je	0x4001e0
<Block for 0x400239, 69 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0x90]
0x400240:	add	rax, 0x63
0x400244:	mov	byte ptr [rax], 0
0x400247:	mov	rax, qword ptr [rbp - 0x90]
0x40024e:	mov	qword ptr [rbp - 0x88], rax
0x400255:	mov	rax, qword ptr [rbp - 0x88]
0x40025c:	mov	qword ptr [rbp - 0x80], rax
0x400260:	mov	rax, qword ptr [rbp - 0x80]
0x400264:	mov	qword ptr [rbp - 0x78], rax
0x400268:	lea	rax, [rbp - 0x70]
0x40026c:	mov	edx, 0x63
0x400271:	mov	esi, 0x43
0x400276:	mov	rdi, rax
0x400279:	call	0x500000
<Block for 0x40027e, 17 bytes>
0x40027e:	mov	byte ptr [rbp - 0xd], 0
0x400282:	mov	qword ptr [rbp - 0x98], 0
0x40028d:	jmp	0x4002b8
<Block for 0x4002b8, 10 bytes>
0x4002b8:	cmp	qword ptr [rbp - 0x98], 0x63
0x4002c0:	jbe	0x40028f
<Block for 0x40028f, 51 bytes>
0x40028f:	mov	rdx, qword ptr [rbp - 0x78]
0x400293:	mov	rax, qword ptr [rbp - 0x98]
0x40029a:	add	rdx, rax
0x40029d:	lea	rcx, [rbp - 0x70]
0x4002a1:	mov	rax, qword ptr [rbp - 0x98]
0x4002a8:	add	rax, rcx
0x4002ab:	movzx	eax, byte ptr [rax]
0x4002ae:	mov	byte ptr [rdx], al
0x4002b0:	add	qword ptr [rbp - 0x98], 1
0x4002b8:	cmp	qword ptr [rbp - 0x98], 0x63
0x4002c0:	jbe	0x40028f
<Block for 0x4002c2, 23 bytes>
0x4002c2:	mov	rax, qword ptr [rbp - 0x78]
0x4002c6:	add	rax, 0x63
0x4002ca:	mov	byte ptr [rax], 0
0x4002cd:	mov	rax, qword ptr [rbp - 0x78]
0x4002d1:	mov	rdi, rax
0x4002d4:	call	0x500008
<Block for 0x4002d9, 16 bytes>
0x4002d9:	nop	
0x4002da:	mov	rax, qword ptr [rbp - 8]
0x4002de:	xor	rax, qword ptr fs:[0x28]
0x4002e7:	je	0x4002ee
<Block for 0x4002ee, 2 bytes>
0x4002ee:	leave	
0x4002ef:	ret	
<Block for 0x4002e9, 5 bytes>
0x4002e9:	call	0x500010
