<Block for 0x4000d4, 17 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0x10
0x4000e0:	call	0x500000
<Block for 0x4000e5, 55 bytes>
0x4000e5:	mov	edx, eax
0x4000e7:	movsxd	rax, edx
0x4000ea:	imul	rax, rax, 0x55555556
0x4000f1:	shr	rax, 0x20
0x4000f5:	mov	rcx, rax
0x4000f8:	mov	eax, edx
0x4000fa:	sar	eax, 0x1f
0x4000fd:	mov	esi, ecx
0x4000ff:	sub	esi, eax
0x400101:	mov	eax, esi
0x400103:	mov	dword ptr [rbp - 4], eax
0x400106:	mov	ecx, dword ptr [rbp - 4]
0x400109:	mov	eax, ecx
0x40010b:	add	eax, eax
0x40010d:	add	eax, ecx
0x40010f:	sub	edx, eax
0x400111:	mov	eax, edx
0x400113:	mov	dword ptr [rbp - 4], eax
0x400116:	cmp	dword ptr [rbp - 4], 0
0x40011a:	jne	0x40012a
<Block for 0x40011c, 12 bytes>
0x40011c:	lea	rdi, [rip + 0x6c]
0x400123:	call	0x500008
<Block for 0x40012a, 12 bytes>
0x40012a:	lea	rdi, [rip + 0x33]
0x400131:	call	0x500008
<Block for 0x400128, 2 bytes>
0x400128:	jmp	0x400136
<Block for 0x400136, 12 bytes>
0x400136:	lea	rdi, [rip + 0x6a]
0x40013d:	call	0x500008
<Block for 0x400142, 3 bytes>
0x400142:	nop	
0x400143:	leave	
0x400144:	ret	
