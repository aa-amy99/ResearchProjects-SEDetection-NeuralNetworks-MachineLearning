<Block for 0x400537, 165 bytes>
0x400537:	endbr64	
0x40053b:	push	rbp
0x40053c:	mov	rbp, rsp
0x40053f:	sub	rsp, 0xa0
0x400546:	mov	rax, qword ptr fs:[0x28]
0x40054f:	mov	qword ptr [rbp - 8], rax
0x400553:	xor	eax, eax
0x400555:	mov	qword ptr [rbp - 0x70], 0
0x40055d:	mov	qword ptr [rbp - 0x68], 0
0x400565:	mov	qword ptr [rbp - 0x60], 0
0x40056d:	mov	qword ptr [rbp - 0x58], 0
0x400575:	mov	qword ptr [rbp - 0x50], 0
0x40057d:	mov	qword ptr [rbp - 0x48], 0
0x400585:	mov	qword ptr [rbp - 0x40], 0
0x40058d:	mov	qword ptr [rbp - 0x38], 0
0x400595:	mov	qword ptr [rbp - 0x30], 0
0x40059d:	mov	qword ptr [rbp - 0x28], 0
0x4005a5:	mov	qword ptr [rbp - 0x20], 0
0x4005ad:	mov	qword ptr [rbp - 0x18], 0
0x4005b5:	mov	dword ptr [rbp - 0x10], 0
0x4005bc:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005c6:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4005d0:	lea	rax, [rbp - 0x70]
0x4005d4:	mov	rdi, rax
0x4005d7:	call	0x500000
<Block for 0x4005dc, 27 bytes>
0x4005dc:	mov	qword ptr [rbp - 0x90], rax
0x4005e3:	mov	edx, 6
0x4005e8:	mov	esi, 1
0x4005ed:	mov	edi, 2
0x4005f2:	call	0x500008
<Block for 0x4005f7, 19 bytes>
0x4005f7:	mov	dword ptr [rbp - 0x98], eax
0x4005fd:	cmp	dword ptr [rbp - 0x98], -1
0x400604:	je	0x400755
<Block for 0x400755, 3 bytes>
0x400755:	nop	
0x400756:	jmp	0x40075f
<Block for 0x40060a, 22 bytes>
0x40060a:	lea	rax, [rbp - 0x80]
0x40060e:	mov	edx, 0x10
0x400613:	mov	esi, 0
0x400618:	mov	rdi, rax
0x40061b:	call	0x500018
<Block for 0x40075f, 9 bytes>
0x40075f:	cmp	dword ptr [rbp - 0x98], -1
0x400766:	je	0x400775
<Block for 0x400620, 23 bytes>
0x400620:	mov	word ptr [rbp - 0x80], 2
0x400626:	mov	dword ptr [rbp - 0x7c], 0
0x40062d:	mov	edi, 0x6987
0x400632:	call	0x500020
<Block for 0x400775, 9 bytes>
0x400775:	cmp	dword ptr [rbp - 0x9c], -1
0x40077c:	je	0x40078b
<Block for 0x400768, 13 bytes>
0x400768:	mov	eax, dword ptr [rbp - 0x98]
0x40076e:	mov	edi, eax
0x400770:	call	0x500050
<Block for 0x400637, 29 bytes>
0x400637:	mov	word ptr [rbp - 0x7e], ax
0x40063b:	lea	rcx, [rbp - 0x80]
0x40063f:	mov	eax, dword ptr [rbp - 0x98]
0x400645:	mov	edx, 0x10
0x40064a:	mov	rsi, rcx
0x40064d:	mov	edi, eax
0x40064f:	call	0x500028
<Block for 0x40078b, 12 bytes>
0x40078b:	lea	rax, [rbp - 0x70]
0x40078f:	mov	rdi, rax
0x400792:	call	0x500058
<Block for 0x40077e, 13 bytes>
0x40077e:	mov	eax, dword ptr [rbp - 0x9c]
0x400784:	mov	edi, eax
0x400786:	call	0x500050
<Block for 0x400654, 9 bytes>
0x400654:	cmp	eax, -1
0x400657:	je	0x400758
<Block for 0x400797, 16 bytes>
0x400797:	nop	
0x400798:	mov	rax, qword ptr [rbp - 8]
0x40079c:	xor	rax, qword ptr fs:[0x28]
0x4007a5:	je	0x4007ac
<Block for 0x400758, 3 bytes>
0x400758:	nop	
0x400759:	jmp	0x40075f
<Block for 0x40065d, 18 bytes>
0x40065d:	mov	eax, dword ptr [rbp - 0x98]
0x400663:	mov	esi, 5
0x400668:	mov	edi, eax
0x40066a:	call	0x500030
<Block for 0x4007ac, 2 bytes>
0x4007ac:	leave	
0x4007ad:	ret	
<Block for 0x4007a7, 5 bytes>
0x4007a7:	call	0x500060
<Block for 0x40066f, 9 bytes>
0x40066f:	cmp	eax, -1
0x400672:	je	0x40075b
<Block for 0x40075b, 3 bytes>
0x40075b:	nop	
0x40075c:	jmp	0x40075f
<Block for 0x400678, 23 bytes>
0x400678:	mov	eax, dword ptr [rbp - 0x98]
0x40067e:	mov	edx, 0
0x400683:	mov	esi, 0
0x400688:	mov	edi, eax
0x40068a:	call	0x500038
<Block for 0x40068f, 19 bytes>
0x40068f:	mov	dword ptr [rbp - 0x9c], eax
0x400695:	cmp	dword ptr [rbp - 0x9c], -1
0x40069c:	je	0x40075e
<Block for 0x4006a2, 52 bytes>
0x4006a2:	mov	rax, qword ptr [rbp - 0x90]
0x4006a9:	mov	edx, 0x63
0x4006ae:	sub	edx, eax
0x4006b0:	mov	eax, edx
0x4006b2:	movsxd	rdx, eax
0x4006b5:	lea	rcx, [rbp - 0x70]
0x4006b9:	mov	rax, qword ptr [rbp - 0x90]
0x4006c0:	lea	rsi, [rcx + rax]
0x4006c4:	mov	eax, dword ptr [rbp - 0x9c]
0x4006ca:	mov	ecx, 0
0x4006cf:	mov	edi, eax
0x4006d1:	call	0x500040
<Block for 0x40075e, 1 bytes>
0x40075e:	nop	
<Block for 0x4006d6, 15 bytes>
0x4006d6:	mov	dword ptr [rbp - 0x94], eax
0x4006dc:	cmp	dword ptr [rbp - 0x94], -1
0x4006e3:	je	0x40075f
<Block for 0x4006e5, 9 bytes>
0x4006e5:	cmp	dword ptr [rbp - 0x94], 0
0x4006ec:	je	0x40075f
<Block for 0x4006ee, 30 bytes>
0x4006ee:	mov	eax, dword ptr [rbp - 0x94]
0x4006f4:	cdqe	
0x4006f6:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006fb:	lea	rax, [rbp - 0x70]
0x4006ff:	mov	esi, 0xd
0x400704:	mov	rdi, rax
0x400707:	call	0x500048
<Block for 0x40070c, 17 bytes>
0x40070c:	mov	qword ptr [rbp - 0x88], rax
0x400713:	cmp	qword ptr [rbp - 0x88], 0
0x40071b:	je	0x400727
<Block for 0x400727, 17 bytes>
0x400727:	lea	rax, [rbp - 0x70]
0x40072b:	mov	esi, 0xa
0x400730:	mov	rdi, rax
0x400733:	call	0x500048
<Block for 0x40071d, 27 bytes>
0x40071d:	mov	rax, qword ptr [rbp - 0x88]
0x400724:	mov	byte ptr [rax], 0
0x400727:	lea	rax, [rbp - 0x70]
0x40072b:	mov	esi, 0xa
0x400730:	mov	rdi, rax
0x400733:	call	0x500048
<Block for 0x400738, 17 bytes>
0x400738:	mov	qword ptr [rbp - 0x88], rax
0x40073f:	cmp	qword ptr [rbp - 0x88], 0
0x400747:	je	0x40075f
<Block for 0x400749, 12 bytes>
0x400749:	mov	rax, qword ptr [rbp - 0x88]
0x400750:	mov	byte ptr [rax], 0
0x400753:	jmp	0x40075f
