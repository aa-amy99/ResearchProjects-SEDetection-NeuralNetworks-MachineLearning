<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, 1
0x40002e:	test	eax, eax
0x400030:	je	0x400081
<Block for 0x400081, 22 bytes>
0x400081:	lea	rax, [rbp - 0x70]
0x400085:	mov	edx, 0x63
0x40008a:	mov	esi, 0x43
0x40008f:	mov	rdi, rax
0x400092:	call	0x500010
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0x64
0x400037:	call	0x500000
<Block for 0x400097, 14 bytes>
0x400097:	mov	byte ptr [rbp - 0xd], 0
0x40009b:	mov	qword ptr [rbp - 0x80], 0
0x4000a3:	jmp	0x4000c8
<Block for 0x40003c, 11 bytes>
0x40003c:	mov	qword ptr [rbp - 0x78], rax
0x400040:	cmp	qword ptr [rbp - 0x78], 0
0x400045:	jne	0x400051
<Block for 0x4000c8, 7 bytes>
0x4000c8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000cd:	jbe	0x4000a5
<Block for 0x400047, 10 bytes>
0x400047:	mov	edi, 0xffffffff
0x40004c:	call	0x500008
<Block for 0x400051, 22 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	mov	edx, 0x63
0x40005a:	mov	esi, 0x41
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x4000a5, 42 bytes>
0x4000a5:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ac:	mov	rax, qword ptr [rbp - 0x80]
0x4000b0:	add	rax, rdx
0x4000b3:	movzx	eax, byte ptr [rax]
0x4000b6:	lea	rcx, [rbp - 0x70]
0x4000ba:	mov	rdx, qword ptr [rbp - 0x80]
0x4000be:	add	rdx, rcx
0x4000c1:	mov	byte ptr [rdx], al
0x4000c3:	add	qword ptr [rbp - 0x80], 1
0x4000c8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000cd:	jbe	0x4000a5
<Block for 0x4000cf, 16 bytes>
0x4000cf:	mov	byte ptr [rbp - 0xd], 0
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500018
<Block for 0x400067, 48 bytes>
0x400067:	mov	rax, qword ptr [rbp - 0x78]
0x40006b:	add	rax, 0x63
0x40006f:	mov	byte ptr [rax], 0
0x400072:	mov	rax, qword ptr [rbp - 0x78]
0x400076:	sub	rax, 8
0x40007a:	mov	qword ptr [rbp - 0x88], rax
0x400081:	lea	rax, [rbp - 0x70]
0x400085:	mov	edx, 0x63
0x40008a:	mov	esi, 0x43
0x40008f:	mov	rdi, rax
0x400092:	call	0x500010
<Block for 0x4000df, 16 bytes>
0x4000df:	nop	
0x4000e0:	mov	rax, qword ptr [rbp - 8]
0x4000e4:	xor	rax, qword ptr fs:[0x28]
0x4000ed:	je	0x4000f4
<Block for 0x4000f4, 2 bytes>
0x4000f4:	leave	
0x4000f5:	ret	
<Block for 0x4000ef, 5 bytes>
0x4000ef:	call	0x500020
