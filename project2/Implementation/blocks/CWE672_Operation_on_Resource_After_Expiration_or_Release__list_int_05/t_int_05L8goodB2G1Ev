<Block for 0x40018f, 40 bytes>
0x40018f:	endbr64	
0x400193:	push	rbp
0x400194:	mov	rbp, rsp
0x400197:	push	rbx
0x400198:	sub	rsp, 0x38
0x40019c:	mov	rax, qword ptr fs:[0x28]
0x4001a5:	mov	qword ptr [rbp - 0x18], rax
0x4001a9:	xor	eax, eax
0x4001ab:	lea	rax, [rbp - 0x30]
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x400904
<Block for 0x4001b7, 10 bytes>
0x4001b7:	mov	eax, dword ptr [rip + 0x663]
0x4001bd:	test	eax, eax
0x4001bf:	je	0x4001f5
<Block for 0x4001f5, 10 bytes>
0x4001f5:	mov	eax, dword ptr [rip + 0x62d]
0x4001fb:	test	eax, eax
0x4001fd:	je	0x400210
<Block for 0x4001c1, 26 bytes>
0x4001c1:	mov	dword ptr [rbp - 0x38], 0x64
0x4001c8:	lea	rdx, [rbp - 0x38]
0x4001cc:	lea	rax, [rbp - 0x30]
0x4001d0:	mov	rsi, rdx
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x400a0a
<Block for 0x400210, 12 bytes>
0x400210:	lea	rax, [rbp - 0x40]
0x400214:	mov	rdi, rax
0x400217:	call	0x400a58
<Block for 0x4001ff, 12 bytes>
0x4001ff:	lea	rdi, [rip + 0x653]
0x400206:	call	0x500040
<Block for 0x4001db, 26 bytes>
0x4001db:	mov	dword ptr [rbp - 0x38], 0
0x4001e2:	lea	rdx, [rbp - 0x38]
0x4001e6:	lea	rax, [rbp - 0x30]
0x4001ea:	mov	rsi, rdx
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x400a0a
<Block for 0x40021c, 19 bytes>
0x40021c:	lea	rsi, [rip + 0x620]
0x400223:	lea	rdi, [rip + 0xffdd6]
0x40022a:	call	0x500008
<Block for 0x40020b, 5 bytes>
0x40020b:	jmp	0x4002bd
<Block for 0x40022f, 12 bytes>
0x40022f:	lea	rax, [rbp - 0x30]
0x400233:	mov	rdi, rax
0x400236:	call	0x400a72
<Block for 0x4002bd, 12 bytes>
0x4002bd:	lea	rax, [rbp - 0x30]
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x400924
<Block for 0x40023b, 16 bytes>
0x40023b:	mov	qword ptr [rbp - 0x40], rax
0x40023f:	lea	rax, [rbp - 0x30]
0x400243:	mov	rdi, rax
0x400246:	call	0x400ac2
<Block for 0x4002c9, 16 bytes>
0x4002c9:	nop	
0x4002ca:	mov	rax, qword ptr [rbp - 0x18]
0x4002ce:	xor	rax, qword ptr fs:[0x28]
0x4002d7:	je	0x4002fe
<Block for 0x40024b, 23 bytes>
0x40024b:	mov	qword ptr [rbp - 0x38], rax
0x40024f:	lea	rdx, [rbp - 0x38]
0x400253:	lea	rax, [rbp - 0x40]
0x400257:	mov	rsi, rdx
0x40025a:	mov	rdi, rax
0x40025d:	call	0x400b0e
<Block for 0x4002fe, 7 bytes>
0x4002fe:	add	rsp, 0x38
0x400302:	pop	rbx
0x400303:	pop	rbp
0x400304:	ret	
<Block for 0x4002d9, 2 bytes>
0x4002d9:	jmp	0x4002f9
<Block for 0x400262, 4 bytes>
0x400262:	test	al, al
0x400264:	je	0x4002a7
<Block for 0x4002f9, 5 bytes>
0x4002f9:	call	0x500038
<Block for 0x4002a7, 22 bytes>
0x4002a7:	mov	rax, qword ptr [rip + 0xffd72]
0x4002ae:	mov	rsi, rax
0x4002b1:	lea	rdi, [rip + 0xffd48]
0x4002b8:	call	0x500028
<Block for 0x400266, 19 bytes>
0x400266:	lea	rsi, [rip + 0x5ea]
0x40026d:	lea	rdi, [rip + 0xffd8c]
0x400274:	call	0x500008
<Block for 0x400279, 15 bytes>
0x400279:	mov	rbx, rax
0x40027c:	lea	rax, [rbp - 0x40]
0x400280:	mov	rdi, rax
0x400283:	call	0x400b8c
<Block for 0x400288, 12 bytes>
0x400288:	mov	eax, dword ptr [rax]
0x40028a:	mov	esi, eax
0x40028c:	mov	rdi, rbx
0x40028f:	call	0x500010
<Block for 0x400294, 17 bytes>
0x400294:	lea	rax, [rbp - 0x40]
0x400298:	mov	esi, 0
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x400b34
<Block for 0x4002a5, 2 bytes>
0x4002a5:	jmp	0x40023f
<Block for 0x40023f, 12 bytes>
0x40023f:	lea	rax, [rbp - 0x30]
0x400243:	mov	rdi, rax
0x400246:	call	0x400ac2
