<Block for 0x400000, 61 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400022:	mov	edx, 0x180
0x400027:	mov	esi, 0x42
0x40002c:	lea	rdi, [rip + 0x129]
0x400033:	mov	eax, 0
0x400038:	call	0x500000
<Block for 0x40003d, 13 bytes>
0x40003d:	mov	dword ptr [rbp - 0xc], eax
0x400040:	mov	eax, dword ptr [rbp - 0xc]
0x400043:	mov	edi, eax
0x400045:	call	0x500008
<Block for 0x40004a, 12 bytes>
0x40004a:	lea	rax, [rbp - 0xc]
0x40004e:	mov	rdi, rax
0x400051:	call	0x500010
<Block for 0x400056, 16 bytes>
0x400056:	nop	
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	xor	rax, qword ptr fs:[0x28]
0x400064:	je	0x40006b
<Block for 0x40006b, 2 bytes>
0x40006b:	leave	
0x40006c:	ret	
<Block for 0x400066, 5 bytes>
0x400066:	call	0x500018
