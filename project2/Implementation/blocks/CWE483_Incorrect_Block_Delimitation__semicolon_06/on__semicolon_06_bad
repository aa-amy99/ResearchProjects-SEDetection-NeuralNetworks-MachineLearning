<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 5
0x400011:	cmp	eax, 5
0x400014:	jne	0x400078
<Block for 0x400016, 5 bytes>
0x400016:	call	0x500000
<Block for 0x400078, 3 bytes>
0x400078:	nop	
0x400079:	leave	
0x40007a:	ret	
<Block for 0x40001b, 68 bytes>
0x40001b:	mov	edx, eax
0x40001d:	movsxd	rax, edx
0x400020:	imul	rax, rax, 0x55555556
0x400027:	shr	rax, 0x20
0x40002b:	mov	rcx, rax
0x40002e:	mov	eax, edx
0x400030:	sar	eax, 0x1f
0x400033:	mov	esi, ecx
0x400035:	sub	esi, eax
0x400037:	mov	eax, esi
0x400039:	mov	dword ptr [rbp - 8], eax
0x40003c:	mov	ecx, dword ptr [rbp - 8]
0x40003f:	mov	eax, ecx
0x400041:	add	eax, eax
0x400043:	add	eax, ecx
0x400045:	sub	edx, eax
0x400047:	mov	eax, edx
0x400049:	mov	dword ptr [rbp - 8], eax
0x40004c:	mov	dword ptr [rbp - 4], 0
0x400053:	lea	rdi, [rip + 0x156]
0x40005a:	call	0x500008
<Block for 0x40005f, 13 bytes>
0x40005f:	mov	dword ptr [rbp - 4], 1
0x400066:	cmp	dword ptr [rbp - 4], 0
0x40006a:	je	0x400078
<Block for 0x40006c, 12 bytes>
0x40006c:	lea	rdi, [rip + 0x144]
0x400073:	call	0x500008
