<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400386
<Block for 0x400028, 34 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	word ptr [rbp - 0x30], 8
0x400036:	lea	rax, [rbp - 0x30]
0x40003a:	mov	qword ptr [rbp - 0x60], rax
0x40003e:	lea	rax, [rbp - 0x50]
0x400042:	mov	rdi, rax
0x400045:	call	0x40051a
<Block for 0x40004a, 23 bytes>
0x40004a:	mov	qword ptr [rbp - 0x58], rax
0x40004e:	lea	rdx, [rbp - 0x58]
0x400052:	lea	rax, [rbp - 0x30]
0x400056:	mov	rsi, rdx
0x400059:	mov	rdi, rax
0x40005c:	call	0x40056a
<Block for 0x400061, 28 bytes>
0x400061:	lea	rdx, [rbp - 0x60]
0x400065:	mov	rsi, qword ptr [rbp - 0x30]
0x400069:	lea	rax, [rbp - 0x50]
0x40006d:	mov	rcx, rdx
0x400070:	mov	edx, 1
0x400075:	mov	rdi, rax
0x400078:	call	0x400598
<Block for 0x40007d, 12 bytes>
0x40007d:	lea	rax, [rbp - 0x50]
0x400081:	mov	rdi, rax
0x400084:	call	0x40051a
<Block for 0x400089, 23 bytes>
0x400089:	mov	qword ptr [rbp - 0x58], rax
0x40008d:	lea	rdx, [rbp - 0x58]
0x400091:	lea	rax, [rbp - 0x30]
0x400095:	mov	rsi, rdx
0x400098:	mov	rdi, rax
0x40009b:	call	0x40056a
<Block for 0x4000a0, 28 bytes>
0x4000a0:	lea	rdx, [rbp - 0x60]
0x4000a4:	mov	rsi, qword ptr [rbp - 0x30]
0x4000a8:	lea	rax, [rbp - 0x50]
0x4000ac:	mov	rcx, rdx
0x4000af:	mov	edx, 1
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x400598
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rax, [rbp - 0x50]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x40051a
<Block for 0x4000c8, 23 bytes>
0x4000c8:	mov	qword ptr [rbp - 0x58], rax
0x4000cc:	lea	rdx, [rbp - 0x58]
0x4000d0:	lea	rax, [rbp - 0x30]
0x4000d4:	mov	rsi, rdx
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x40056a
<Block for 0x4000df, 28 bytes>
0x4000df:	lea	rdx, [rbp - 0x60]
0x4000e3:	mov	rsi, qword ptr [rbp - 0x30]
0x4000e7:	lea	rax, [rbp - 0x50]
0x4000eb:	mov	rcx, rdx
0x4000ee:	mov	edx, 1
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x400598
<Block for 0x4000fb, 19 bytes>
0x4000fb:	lea	rdx, [rbp - 0x50]
0x4000ff:	lea	rax, [rbp - 0x30]
0x400103:	mov	rsi, rdx
0x400106:	mov	rdi, rax
0x400109:	call	0x40065e
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rax, [rbp - 0x30]
0x400112:	mov	rdi, rax
0x400115:	call	0x500000
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rax, [rbp - 0x30]
0x40011e:	mov	rdi, rax
0x400121:	call	0x4004d2
<Block for 0x400126, 12 bytes>
0x400126:	lea	rax, [rbp - 0x50]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x4004d2
<Block for 0x400132, 16 bytes>
0x400132:	nop	
0x400133:	mov	rax, qword ptr [rbp - 0x18]
0x400137:	xor	rax, qword ptr fs:[0x28]
0x400140:	je	0x40017c
<Block for 0x40017c, 7 bytes>
0x40017c:	add	rsp, 0x58
0x400180:	pop	rbx
0x400181:	pop	rbp
0x400182:	ret	
<Block for 0x400142, 2 bytes>
0x400142:	jmp	0x400177
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500010
