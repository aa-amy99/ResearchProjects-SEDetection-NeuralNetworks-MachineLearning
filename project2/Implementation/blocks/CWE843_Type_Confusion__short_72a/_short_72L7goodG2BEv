<Block for 0x400183, 40 bytes>
0x400183:	endbr64	
0x400187:	push	rbp
0x400188:	mov	rbp, rsp
0x40018b:	push	rbx
0x40018c:	sub	rsp, 0x58
0x400190:	mov	rax, qword ptr fs:[0x28]
0x400199:	mov	qword ptr [rbp - 0x18], rax
0x40019d:	xor	eax, eax
0x40019f:	lea	rax, [rbp - 0x50]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x400386
<Block for 0x4001ab, 35 bytes>
0x4001ab:	mov	qword ptr [rbp - 0x60], 0
0x4001b3:	mov	dword ptr [rbp - 0x30], 8
0x4001ba:	lea	rax, [rbp - 0x30]
0x4001be:	mov	qword ptr [rbp - 0x60], rax
0x4001c2:	lea	rax, [rbp - 0x50]
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x40051a
<Block for 0x4001ce, 23 bytes>
0x4001ce:	mov	qword ptr [rbp - 0x58], rax
0x4001d2:	lea	rdx, [rbp - 0x58]
0x4001d6:	lea	rax, [rbp - 0x30]
0x4001da:	mov	rsi, rdx
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x40056a
<Block for 0x4001e5, 28 bytes>
0x4001e5:	lea	rdx, [rbp - 0x60]
0x4001e9:	mov	rsi, qword ptr [rbp - 0x30]
0x4001ed:	lea	rax, [rbp - 0x50]
0x4001f1:	mov	rcx, rdx
0x4001f4:	mov	edx, 1
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x400598
<Block for 0x400201, 12 bytes>
0x400201:	lea	rax, [rbp - 0x50]
0x400205:	mov	rdi, rax
0x400208:	call	0x40051a
<Block for 0x40020d, 23 bytes>
0x40020d:	mov	qword ptr [rbp - 0x58], rax
0x400211:	lea	rdx, [rbp - 0x58]
0x400215:	lea	rax, [rbp - 0x30]
0x400219:	mov	rsi, rdx
0x40021c:	mov	rdi, rax
0x40021f:	call	0x40056a
<Block for 0x400224, 28 bytes>
0x400224:	lea	rdx, [rbp - 0x60]
0x400228:	mov	rsi, qword ptr [rbp - 0x30]
0x40022c:	lea	rax, [rbp - 0x50]
0x400230:	mov	rcx, rdx
0x400233:	mov	edx, 1
0x400238:	mov	rdi, rax
0x40023b:	call	0x400598
<Block for 0x400240, 12 bytes>
0x400240:	lea	rax, [rbp - 0x50]
0x400244:	mov	rdi, rax
0x400247:	call	0x40051a
<Block for 0x40024c, 23 bytes>
0x40024c:	mov	qword ptr [rbp - 0x58], rax
0x400250:	lea	rdx, [rbp - 0x58]
0x400254:	lea	rax, [rbp - 0x30]
0x400258:	mov	rsi, rdx
0x40025b:	mov	rdi, rax
0x40025e:	call	0x40056a
<Block for 0x400263, 28 bytes>
0x400263:	lea	rdx, [rbp - 0x60]
0x400267:	mov	rsi, qword ptr [rbp - 0x30]
0x40026b:	lea	rax, [rbp - 0x50]
0x40026f:	mov	rcx, rdx
0x400272:	mov	edx, 1
0x400277:	mov	rdi, rax
0x40027a:	call	0x400598
<Block for 0x40027f, 19 bytes>
0x40027f:	lea	rdx, [rbp - 0x50]
0x400283:	lea	rax, [rbp - 0x30]
0x400287:	mov	rsi, rdx
0x40028a:	mov	rdi, rax
0x40028d:	call	0x40065e
<Block for 0x400292, 12 bytes>
0x400292:	lea	rax, [rbp - 0x30]
0x400296:	mov	rdi, rax
0x400299:	call	0x500018
<Block for 0x40029e, 12 bytes>
0x40029e:	lea	rax, [rbp - 0x30]
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x4004d2
<Block for 0x4002aa, 12 bytes>
0x4002aa:	lea	rax, [rbp - 0x50]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x4004d2
<Block for 0x4002b6, 16 bytes>
0x4002b6:	nop	
0x4002b7:	mov	rax, qword ptr [rbp - 0x18]
0x4002bb:	xor	rax, qword ptr fs:[0x28]
0x4002c4:	je	0x400300
<Block for 0x400300, 7 bytes>
0x400300:	add	rsp, 0x58
0x400304:	pop	rbx
0x400305:	pop	rbp
0x400306:	ret	
<Block for 0x4002c6, 2 bytes>
0x4002c6:	jmp	0x4002fb
<Block for 0x4002fb, 5 bytes>
0x4002fb:	call	0x500010
