<Block for 0x40009c, 53 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	sub	rsp, 0xf0
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	lea	rax, [rbp - 0xe0]
0x4000c1:	mov	qword ptr [rbp - 0xf0], rax
0x4000c8:	mov	eax, 0
0x4000cd:	test	eax, eax
0x4000cf:	je	0x4000df
<Block for 0x4000df, 32 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0xf0]
0x4000e6:	mov	byte ptr [rax], 0
0x4000e9:	lea	rax, [rbp - 0x70]
0x4000ed:	mov	edx, 0x63
0x4000f2:	mov	esi, 0x43
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500000
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rdi, [rip + 0x158]
0x4000d8:	call	0x500018
<Block for 0x4000ff, 16 bytes>
0x4000ff:	mov	byte ptr [rbp - 0xd], 0
0x400103:	lea	rax, [rbp - 0x70]
0x400107:	mov	rdi, rax
0x40010a:	call	0x500008
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x4000e9
<Block for 0x40010f, 36 bytes>
0x40010f:	mov	qword ptr [rbp - 0xe8], rax
0x400116:	mov	rdx, qword ptr [rbp - 0xe8]
0x40011d:	lea	rcx, [rbp - 0x70]
0x400121:	mov	rax, qword ptr [rbp - 0xf0]
0x400128:	mov	rsi, rcx
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500010
<Block for 0x4000e9, 22 bytes>
0x4000e9:	lea	rax, [rbp - 0x70]
0x4000ed:	mov	edx, 0x63
0x4000f2:	mov	esi, 0x43
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500000
<Block for 0x400133, 15 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0xf0]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500018
<Block for 0x400142, 16 bytes>
0x400142:	nop	
0x400143:	mov	rax, qword ptr [rbp - 8]
0x400147:	xor	rax, qword ptr fs:[0x28]
0x400150:	je	0x400157
<Block for 0x400157, 2 bytes>
0x400157:	leave	
0x400158:	ret	
<Block for 0x400152, 5 bytes>
0x400152:	call	0x500020
