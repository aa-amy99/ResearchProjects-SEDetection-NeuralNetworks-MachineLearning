<Block for 0x400117, 46 bytes>
0x400117:	endbr64	
0x40011b:	push	rbp
0x40011c:	mov	rbp, rsp
0x40011f:	sub	rsp, 0x90
0x400126:	mov	rax, qword ptr fs:[0x28]
0x40012f:	mov	qword ptr [rbp - 8], rax
0x400133:	xor	eax, eax
0x400135:	mov	qword ptr [rbp - 0x88], 0
0x400140:	call	0x500000
<Block for 0x400145, 9 bytes>
0x400145:	test	eax, eax
0x400147:	setne	al
0x40014a:	test	al, al
0x40014c:	je	0x40018a
<Block for 0x40018a, 10 bytes>
0x40018a:	mov	edi, 0x64
0x40018f:	call	0x500008
<Block for 0x40014e, 10 bytes>
0x40014e:	mov	edi, 0x64
0x400153:	call	0x500008
<Block for 0x400194, 26 bytes>
0x400194:	mov	qword ptr [rbp - 0x80], rax
0x400198:	mov	rax, qword ptr [rbp - 0x80]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x41
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500010
<Block for 0x400158, 26 bytes>
0x400158:	mov	qword ptr [rbp - 0x78], rax
0x40015c:	mov	rax, qword ptr [rbp - 0x78]
0x400160:	mov	edx, 0x63
0x400165:	mov	esi, 0x41
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500010
<Block for 0x4001ae, 44 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x80]
0x4001b2:	add	rax, 0x63
0x4001b6:	mov	byte ptr [rax], 0
0x4001b9:	mov	rax, qword ptr [rbp - 0x80]
0x4001bd:	mov	qword ptr [rbp - 0x88], rax
0x4001c4:	lea	rax, [rbp - 0x70]
0x4001c8:	mov	edx, 0x63
0x4001cd:	mov	esi, 0x43
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x500010
<Block for 0x400172, 24 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0x78]
0x400176:	add	rax, 0x63
0x40017a:	mov	byte ptr [rax], 0
0x40017d:	mov	rax, qword ptr [rbp - 0x78]
0x400181:	mov	qword ptr [rbp - 0x88], rax
0x400188:	jmp	0x4001c4
<Block for 0x4001da, 16 bytes>
0x4001da:	mov	byte ptr [rbp - 0xd], 0
0x4001de:	lea	rax, [rbp - 0x70]
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x500018
<Block for 0x4001c4, 22 bytes>
0x4001c4:	lea	rax, [rbp - 0x70]
0x4001c8:	mov	edx, 0x63
0x4001cd:	mov	esi, 0x43
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x500010
<Block for 0x4001ea, 25 bytes>
0x4001ea:	mov	rdx, rax
0x4001ed:	mov	rcx, qword ptr [rbp - 0x88]
0x4001f4:	lea	rax, [rbp - 0x70]
0x4001f8:	mov	rsi, rcx
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x500020
<Block for 0x400203, 16 bytes>
0x400203:	mov	byte ptr [rbp - 0xd], 0
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	rdi, rax
0x40020e:	call	0x500028
<Block for 0x400213, 16 bytes>
0x400213:	nop	
0x400214:	mov	rax, qword ptr [rbp - 8]
0x400218:	xor	rax, qword ptr fs:[0x28]
0x400221:	je	0x400228
<Block for 0x400228, 2 bytes>
0x400228:	leave	
0x400229:	ret	
<Block for 0x400223, 5 bytes>
0x400223:	call	0x500030
