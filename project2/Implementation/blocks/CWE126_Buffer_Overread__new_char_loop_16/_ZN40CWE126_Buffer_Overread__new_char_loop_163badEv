<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	edi, 0x32
0x40002b:	call	0x500000
<Block for 0x400030, 26 bytes>
0x400030:	mov	qword ptr [rbp - 0x80], rax
0x400034:	mov	rax, qword ptr [rbp - 0x80]
0x400038:	mov	edx, 0x31
0x40003d:	mov	esi, 0x41
0x400042:	mov	rdi, rax
0x400045:	call	0x500008
<Block for 0x40004a, 34 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 0x80]
0x40004e:	add	rax, 0x31
0x400052:	mov	byte ptr [rax], 0
0x400055:	nop	
0x400056:	lea	rax, [rbp - 0x70]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x43
0x400064:	mov	rdi, rax
0x400067:	call	0x500008
<Block for 0x40006c, 16 bytes>
0x40006c:	mov	byte ptr [rbp - 0xd], 0
0x400070:	lea	rax, [rbp - 0x70]
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 28 bytes>
0x40007c:	mov	qword ptr [rbp - 0x78], rax
0x400080:	mov	qword ptr [rbp - 0x88], 0
0x40008b:	mov	rax, qword ptr [rbp - 0x88]
0x400092:	cmp	rax, qword ptr [rbp - 0x78]
0x400096:	jae	0x4000c3
<Block for 0x400098, 43 bytes>
0x400098:	mov	rdx, qword ptr [rbp - 0x80]
0x40009c:	mov	rax, qword ptr [rbp - 0x88]
0x4000a3:	add	rax, rdx
0x4000a6:	movzx	eax, byte ptr [rax]
0x4000a9:	lea	rcx, [rbp - 0x70]
0x4000ad:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b4:	add	rdx, rcx
0x4000b7:	mov	byte ptr [rdx], al
0x4000b9:	add	qword ptr [rbp - 0x88], 1
0x4000c1:	jmp	0x40008b
<Block for 0x4000c3, 16 bytes>
0x4000c3:	mov	byte ptr [rbp - 0xd], 0
0x4000c7:	lea	rax, [rbp - 0x70]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500018
<Block for 0x40008b, 13 bytes>
0x40008b:	mov	rax, qword ptr [rbp - 0x88]
0x400092:	cmp	rax, qword ptr [rbp - 0x78]
0x400096:	jae	0x4000c3
<Block for 0x4000d3, 7 bytes>
0x4000d3:	cmp	qword ptr [rbp - 0x80], 0
0x4000d8:	je	0x4000e6
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000da, 12 bytes>
0x4000da:	mov	rax, qword ptr [rbp - 0x80]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500020
<Block for 0x4000fb, 2 bytes>
0x4000fb:	leave	
0x4000fc:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500028
