<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400090
<Block for 0x400090, 3 bytes>
0x400090:	nop	
0x400091:	leave	
0x400092:	ret	
<Block for 0x40001a, 15 bytes>
0x40001a:	mov	esi, 0
0x40001f:	mov	edi, 0
0x400024:	call	0x500008
<Block for 0x400029, 11 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	cmp	qword ptr [rbp - 8], 0
0x400032:	jne	0x40003e
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 1
0x400039:	call	0x500010
<Block for 0x40003e, 12 bytes>
0x40003e:	mov	rax, qword ptr [rbp - 8]
0x400042:	mov	rdi, rax
0x400045:	call	0x500018
<Block for 0x40004a, 27 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 8]
0x40004e:	mov	edx, 0x180
0x400053:	mov	esi, 0x42
0x400058:	mov	rdi, rax
0x40005b:	mov	eax, 0
0x400060:	call	0x500020
<Block for 0x400065, 9 bytes>
0x400065:	mov	dword ptr [rbp - 0xc], eax
0x400068:	cmp	dword ptr [rbp - 0xc], -1
0x40006c:	je	0x400084
<Block for 0x400084, 12 bytes>
0x400084:	mov	rax, qword ptr [rbp - 8]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500030
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rdi, [rip + 0x173]
0x400075:	call	0x500018
<Block for 0x40007a, 10 bytes>
0x40007a:	mov	eax, dword ptr [rbp - 0xc]
0x40007d:	mov	edi, eax
0x40007f:	call	0x500028
