<Block for 0x400093, 37 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0x30
0x40009f:	mov	rax, qword ptr fs:[0x28]
0x4000a8:	mov	qword ptr [rbp - 8], rax
0x4000ac:	xor	eax, eax
0x4000ae:	mov	eax, 0
0x4000b3:	call	0x500038
<Block for 0x4000b8, 4 bytes>
0x4000b8:	test	eax, eax
0x4000ba:	je	0x4000ca
<Block for 0x4000ca, 40 bytes>
0x4000ca:	movabs	rax, 0x6c69662f706d742f
0x4000d4:	movabs	rdx, 0x58585858585865
0x4000de:	mov	qword ptr [rbp - 0x20], rax
0x4000e2:	mov	qword ptr [rbp - 0x18], rdx
0x4000e6:	lea	rax, [rbp - 0x20]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500040
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rdi, [rip + 0x152]
0x4000c3:	call	0x500018
<Block for 0x4000f2, 15 bytes>
0x4000f2:	mov	dword ptr [rbp - 0x24], eax
0x4000f5:	lea	rax, [rbp - 0x20]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500018
<Block for 0x4000c8, 2 bytes>
0x4000c8:	jmp	0x40011d
<Block for 0x400101, 6 bytes>
0x400101:	cmp	dword ptr [rbp - 0x24], -1
0x400105:	je	0x40011d
<Block for 0x40011d, 16 bytes>
0x40011d:	nop	
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	xor	rax, qword ptr fs:[0x28]
0x40012b:	je	0x400132
<Block for 0x400107, 12 bytes>
0x400107:	lea	rdi, [rip + 0xda]
0x40010e:	call	0x500018
<Block for 0x400132, 2 bytes>
0x400132:	leave	
0x400133:	ret	
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500048
<Block for 0x400113, 10 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0x24]
0x400116:	mov	edi, eax
0x400118:	call	0x500028
