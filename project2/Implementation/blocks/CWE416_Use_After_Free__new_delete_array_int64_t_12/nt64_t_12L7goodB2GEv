<Block for 0x4000d3, 25 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	sub	rsp, 0x20
0x4000df:	mov	qword ptr [rbp - 8], 0
0x4000e7:	call	0x500000
<Block for 0x4000ec, 9 bytes>
0x4000ec:	test	eax, eax
0x4000ee:	setne	al
0x4000f1:	test	al, al
0x4000f3:	je	0x400148
<Block for 0x400148, 10 bytes>
0x400148:	mov	edi, 0x320
0x40014d:	call	0x500008
<Block for 0x4000f5, 10 bytes>
0x4000f5:	mov	edi, 0x320
0x4000fa:	call	0x500008
<Block for 0x400152, 19 bytes>
0x400152:	mov	qword ptr [rbp - 8], rax
0x400156:	mov	qword ptr [rbp - 0x10], 0
0x40015e:	cmp	qword ptr [rbp - 0x10], 0x63
0x400163:	ja	0x400186
<Block for 0x4000ff, 19 bytes>
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	mov	qword ptr [rbp - 0x18], 0
0x40010b:	cmp	qword ptr [rbp - 0x18], 0x63
0x400110:	ja	0x400133
<Block for 0x400165, 33 bytes>
0x400165:	mov	rax, qword ptr [rbp - 0x10]
0x400169:	lea	rdx, [rax*8]
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	add	rax, rdx
0x400178:	mov	qword ptr [rax], 5
0x40017f:	add	qword ptr [rbp - 0x10], 1
0x400184:	jmp	0x40015e
<Block for 0x400186, 7 bytes>
0x400186:	cmp	qword ptr [rbp - 8], 0
0x40018b:	je	0x400199
<Block for 0x400112, 33 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	lea	rdx, [rax*8]
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	add	rax, rdx
0x400125:	mov	qword ptr [rax], 5
0x40012c:	add	qword ptr [rbp - 0x18], 1
0x400131:	jmp	0x40010b
<Block for 0x400133, 7 bytes>
0x400133:	cmp	qword ptr [rbp - 8], 0
0x400138:	je	0x400199
<Block for 0x40015e, 7 bytes>
0x40015e:	cmp	qword ptr [rbp - 0x10], 0x63
0x400163:	ja	0x400186
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500000
<Block for 0x40018d, 12 bytes>
0x40018d:	mov	rax, qword ptr [rbp - 8]
0x400191:	mov	rdi, rax
0x400194:	call	0x500010
<Block for 0x40010b, 7 bytes>
0x40010b:	cmp	qword ptr [rbp - 0x18], 0x63
0x400110:	ja	0x400133
<Block for 0x40013a, 12 bytes>
0x40013a:	mov	rax, qword ptr [rbp - 8]
0x40013e:	mov	rdi, rax
0x400141:	call	0x500010
<Block for 0x40019e, 5 bytes>
0x40019e:	test	eax, eax
0x4001a0:	nop	
0x4001a1:	leave	
0x4001a2:	ret	
<Block for 0x400146, 2 bytes>
0x400146:	jmp	0x400199
