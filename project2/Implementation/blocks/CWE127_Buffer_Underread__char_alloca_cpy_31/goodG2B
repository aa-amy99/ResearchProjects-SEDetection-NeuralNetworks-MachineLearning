<Block for 0x400157, 84 bytes>
0x400157:	endbr64	
0x40015b:	push	rbp
0x40015c:	mov	rbp, rsp
0x40015f:	sub	rsp, 0xf0
0x400166:	mov	rax, qword ptr fs:[0x28]
0x40016f:	mov	qword ptr [rbp - 8], rax
0x400173:	xor	eax, eax
0x400175:	mov	eax, 0x10
0x40017a:	sub	rax, 1
0x40017e:	add	rax, 0x6c
0x400182:	mov	ecx, 0x10
0x400187:	mov	edx, 0
0x40018c:	div	rcx
0x40018f:	imul	rax, rax, 0x10
0x400193:	mov	rdx, rax
0x400196:	and	rdx, 0xfffffffffffff000
0x40019d:	mov	rcx, rsp
0x4001a0:	sub	rcx, rdx
0x4001a3:	mov	rdx, rcx
0x4001a6:	cmp	rsp, rdx
0x4001a9:	je	0x4001bd
<Block for 0x4001bd, 26 bytes>
0x4001bd:	mov	rdx, rax
0x4001c0:	and	edx, 0xfff
0x4001c6:	sub	rsp, rdx
0x4001c9:	mov	rdx, rax
0x4001cc:	and	edx, 0xfff
0x4001d2:	test	rdx, rdx
0x4001d5:	je	0x4001e7
<Block for 0x4001ab, 18 bytes>
0x4001ab:	sub	rsp, 0x1000
0x4001b2:	or	qword ptr [rsp + 0xff8], 0
0x4001bb:	jmp	0x4001a6
<Block for 0x4001e7, 47 bytes>
0x4001e7:	mov	rax, rsp
0x4001ea:	add	rax, 0xf
0x4001ee:	shr	rax, 4
0x4001f2:	shl	rax, 4
0x4001f6:	mov	qword ptr [rbp - 0xf0], rax
0x4001fd:	mov	rax, qword ptr [rbp - 0xf0]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001d7, 63 bytes>
0x4001d7:	and	eax, 0xfff
0x4001dc:	sub	rax, 8
0x4001e0:	add	rax, rsp
0x4001e3:	or	qword ptr [rax], 0
0x4001e7:	mov	rax, rsp
0x4001ea:	add	rax, 0xf
0x4001ee:	shr	rax, 4
0x4001f2:	shl	rax, 4
0x4001f6:	mov	qword ptr [rbp - 0xf0], rax
0x4001fd:	mov	rax, qword ptr [rbp - 0xf0]
0x400204:	mov	edx, 0x63
0x400209:	mov	esi, 0x41
0x40020e:	mov	rdi, rax
0x400211:	call	0x500000
<Block for 0x4001a6, 5 bytes>
0x4001a6:	cmp	rsp, rdx
0x4001a9:	je	0x4001bd
<Block for 0x400216, 81 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0xf0]
0x40021d:	add	rax, 0x63
0x400221:	mov	byte ptr [rax], 0
0x400224:	mov	rax, qword ptr [rbp - 0xf0]
0x40022b:	mov	qword ptr [rbp - 0xe8], rax
0x400232:	mov	rax, qword ptr [rbp - 0xe8]
0x400239:	mov	qword ptr [rbp - 0xe0], rax
0x400240:	mov	rax, qword ptr [rbp - 0xe0]
0x400247:	mov	qword ptr [rbp - 0xd8], rax
0x40024e:	lea	rax, [rbp - 0xd0]
0x400255:	mov	edx, 0xc7
0x40025a:	mov	esi, 0x43
0x40025f:	mov	rdi, rax
0x400262:	call	0x500000
<Block for 0x400267, 29 bytes>
0x400267:	mov	byte ptr [rbp - 9], 0
0x40026b:	mov	rdx, qword ptr [rbp - 0xd8]
0x400272:	lea	rax, [rbp - 0xd0]
0x400279:	mov	rsi, rdx
0x40027c:	mov	rdi, rax
0x40027f:	call	0x500008
<Block for 0x400284, 15 bytes>
0x400284:	lea	rax, [rbp - 0xd0]
0x40028b:	mov	rdi, rax
0x40028e:	call	0x500010
<Block for 0x400293, 16 bytes>
0x400293:	nop	
0x400294:	mov	rax, qword ptr [rbp - 8]
0x400298:	xor	rax, qword ptr fs:[0x28]
0x4002a1:	je	0x4002a8
<Block for 0x4002a8, 2 bytes>
0x4002a8:	leave	
0x4002a9:	ret	
<Block for 0x4002a3, 5 bytes>
0x4002a3:	call	0x500018
