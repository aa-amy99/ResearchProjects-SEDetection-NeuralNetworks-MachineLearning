<Block for 0x4002f6, 40 bytes>
0x4002f6:	endbr64	
0x4002fa:	push	rbp
0x4002fb:	mov	rbp, rsp
0x4002fe:	push	rbx
0x4002ff:	sub	rsp, 0x58
0x400303:	mov	rax, qword ptr fs:[0x28]
0x40030c:	mov	qword ptr [rbp - 0x18], rax
0x400310:	xor	eax, eax
0x400312:	lea	rax, [rbp - 0x50]
0x400316:	mov	rdi, rax
0x400319:	call	0x4004f4
<Block for 0x40031e, 26 bytes>
0x40031e:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400325:	mov	dword ptr [rbp - 0x5c], 0xfffffffb
0x40032c:	lea	rax, [rbp - 0x50]
0x400330:	mov	rdi, rax
0x400333:	call	0x40069a
<Block for 0x400338, 23 bytes>
0x400338:	mov	qword ptr [rbp - 0x58], rax
0x40033c:	lea	rdx, [rbp - 0x58]
0x400340:	lea	rax, [rbp - 0x30]
0x400344:	mov	rsi, rdx
0x400347:	mov	rdi, rax
0x40034a:	call	0x4006ea
<Block for 0x40034f, 28 bytes>
0x40034f:	lea	rdx, [rbp - 0x5c]
0x400353:	mov	rsi, qword ptr [rbp - 0x30]
0x400357:	lea	rax, [rbp - 0x50]
0x40035b:	mov	rcx, rdx
0x40035e:	mov	edx, 1
0x400363:	mov	rdi, rax
0x400366:	call	0x400718
<Block for 0x40036b, 12 bytes>
0x40036b:	lea	rax, [rbp - 0x50]
0x40036f:	mov	rdi, rax
0x400372:	call	0x40069a
<Block for 0x400377, 23 bytes>
0x400377:	mov	qword ptr [rbp - 0x58], rax
0x40037b:	lea	rdx, [rbp - 0x58]
0x40037f:	lea	rax, [rbp - 0x30]
0x400383:	mov	rsi, rdx
0x400386:	mov	rdi, rax
0x400389:	call	0x4006ea
<Block for 0x40038e, 28 bytes>
0x40038e:	lea	rdx, [rbp - 0x5c]
0x400392:	mov	rsi, qword ptr [rbp - 0x30]
0x400396:	lea	rax, [rbp - 0x50]
0x40039a:	mov	rcx, rdx
0x40039d:	mov	edx, 1
0x4003a2:	mov	rdi, rax
0x4003a5:	call	0x400718
<Block for 0x4003aa, 12 bytes>
0x4003aa:	lea	rax, [rbp - 0x50]
0x4003ae:	mov	rdi, rax
0x4003b1:	call	0x40069a
<Block for 0x4003b6, 23 bytes>
0x4003b6:	mov	qword ptr [rbp - 0x58], rax
0x4003ba:	lea	rdx, [rbp - 0x58]
0x4003be:	lea	rax, [rbp - 0x30]
0x4003c2:	mov	rsi, rdx
0x4003c5:	mov	rdi, rax
0x4003c8:	call	0x4006ea
<Block for 0x4003cd, 28 bytes>
0x4003cd:	lea	rdx, [rbp - 0x5c]
0x4003d1:	mov	rsi, qword ptr [rbp - 0x30]
0x4003d5:	lea	rax, [rbp - 0x50]
0x4003d9:	mov	rcx, rdx
0x4003dc:	mov	edx, 1
0x4003e1:	mov	rdi, rax
0x4003e4:	call	0x400718
<Block for 0x4003e9, 19 bytes>
0x4003e9:	lea	rdx, [rbp - 0x50]
0x4003ed:	lea	rax, [rbp - 0x30]
0x4003f1:	mov	rsi, rdx
0x4003f4:	mov	rdi, rax
0x4003f7:	call	0x4007de
<Block for 0x4003fc, 12 bytes>
0x4003fc:	lea	rax, [rbp - 0x30]
0x400400:	mov	rdi, rax
0x400403:	call	0x500020
<Block for 0x400408, 12 bytes>
0x400408:	lea	rax, [rbp - 0x30]
0x40040c:	mov	rdi, rax
0x40040f:	call	0x400652
<Block for 0x400414, 12 bytes>
0x400414:	lea	rax, [rbp - 0x50]
0x400418:	mov	rdi, rax
0x40041b:	call	0x400652
<Block for 0x400420, 16 bytes>
0x400420:	nop	
0x400421:	mov	rax, qword ptr [rbp - 0x18]
0x400425:	xor	rax, qword ptr fs:[0x28]
0x40042e:	je	0x40046a
<Block for 0x40046a, 7 bytes>
0x40046a:	add	rsp, 0x58
0x40046e:	pop	rbx
0x40046f:	pop	rbp
0x400470:	ret	
<Block for 0x400430, 2 bytes>
0x400430:	jmp	0x400465
<Block for 0x400465, 5 bytes>
0x400465:	call	0x500010
