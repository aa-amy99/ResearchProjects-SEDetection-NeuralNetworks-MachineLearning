<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004f4
<Block for 0x400028, 26 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002f:	mov	dword ptr [rbp - 0x5c], 0xfffffffb
0x400036:	lea	rax, [rbp - 0x50]
0x40003a:	mov	rdi, rax
0x40003d:	call	0x40069a
<Block for 0x400042, 23 bytes>
0x400042:	mov	qword ptr [rbp - 0x58], rax
0x400046:	lea	rdx, [rbp - 0x58]
0x40004a:	lea	rax, [rbp - 0x30]
0x40004e:	mov	rsi, rdx
0x400051:	mov	rdi, rax
0x400054:	call	0x4006ea
<Block for 0x400059, 28 bytes>
0x400059:	lea	rdx, [rbp - 0x5c]
0x40005d:	mov	rsi, qword ptr [rbp - 0x30]
0x400061:	lea	rax, [rbp - 0x50]
0x400065:	mov	rcx, rdx
0x400068:	mov	edx, 1
0x40006d:	mov	rdi, rax
0x400070:	call	0x400718
<Block for 0x400075, 12 bytes>
0x400075:	lea	rax, [rbp - 0x50]
0x400079:	mov	rdi, rax
0x40007c:	call	0x40069a
<Block for 0x400081, 23 bytes>
0x400081:	mov	qword ptr [rbp - 0x58], rax
0x400085:	lea	rdx, [rbp - 0x58]
0x400089:	lea	rax, [rbp - 0x30]
0x40008d:	mov	rsi, rdx
0x400090:	mov	rdi, rax
0x400093:	call	0x4006ea
<Block for 0x400098, 28 bytes>
0x400098:	lea	rdx, [rbp - 0x5c]
0x40009c:	mov	rsi, qword ptr [rbp - 0x30]
0x4000a0:	lea	rax, [rbp - 0x50]
0x4000a4:	mov	rcx, rdx
0x4000a7:	mov	edx, 1
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x400718
<Block for 0x4000b4, 12 bytes>
0x4000b4:	lea	rax, [rbp - 0x50]
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x40069a
<Block for 0x4000c0, 23 bytes>
0x4000c0:	mov	qword ptr [rbp - 0x58], rax
0x4000c4:	lea	rdx, [rbp - 0x58]
0x4000c8:	lea	rax, [rbp - 0x30]
0x4000cc:	mov	rsi, rdx
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x4006ea
<Block for 0x4000d7, 28 bytes>
0x4000d7:	lea	rdx, [rbp - 0x5c]
0x4000db:	mov	rsi, qword ptr [rbp - 0x30]
0x4000df:	lea	rax, [rbp - 0x50]
0x4000e3:	mov	rcx, rdx
0x4000e6:	mov	edx, 1
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x400718
<Block for 0x4000f3, 19 bytes>
0x4000f3:	lea	rdx, [rbp - 0x50]
0x4000f7:	lea	rax, [rbp - 0x30]
0x4000fb:	mov	rsi, rdx
0x4000fe:	mov	rdi, rax
0x400101:	call	0x4007de
<Block for 0x400106, 12 bytes>
0x400106:	lea	rax, [rbp - 0x30]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x400112, 12 bytes>
0x400112:	lea	rax, [rbp - 0x30]
0x400116:	mov	rdi, rax
0x400119:	call	0x400652
<Block for 0x40011e, 12 bytes>
0x40011e:	lea	rax, [rbp - 0x50]
0x400122:	mov	rdi, rax
0x400125:	call	0x400652
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 0x18]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x400174
<Block for 0x400174, 7 bytes>
0x400174:	add	rsp, 0x58
0x400178:	pop	rbx
0x400179:	pop	rbp
0x40017a:	ret	
<Block for 0x40013a, 2 bytes>
0x40013a:	jmp	0x40016f
<Block for 0x40016f, 5 bytes>
0x40016f:	call	0x500010
