<Block for 0x40019a, 45 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	add	rsp, -0x80
0x4001a6:	mov	rax, qword ptr fs:[0x28]
0x4001af:	mov	qword ptr [rbp - 8], rax
0x4001b3:	xor	eax, eax
0x4001b5:	mov	qword ptr [rbp - 0x80], 0
0x4001bd:	mov	edi, 0x64
0x4001c2:	call	0x500000
<Block for 0x4001c7, 11 bytes>
0x4001c7:	mov	qword ptr [rbp - 0x78], rax
0x4001cb:	cmp	qword ptr [rbp - 0x78], 0
0x4001d0:	jne	0x4001dc
<Block for 0x4001d2, 10 bytes>
0x4001d2:	mov	edi, 0xffffffff
0x4001d7:	call	0x500008
<Block for 0x4001dc, 22 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 0x78]
0x4001e0:	mov	edx, 0x63
0x4001e5:	mov	esi, 0x41
0x4001ea:	mov	rdi, rax
0x4001ed:	call	0x500010
<Block for 0x4001f2, 41 bytes>
0x4001f2:	mov	rax, qword ptr [rbp - 0x78]
0x4001f6:	add	rax, 0x63
0x4001fa:	mov	byte ptr [rax], 0
0x4001fd:	mov	rax, qword ptr [rbp - 0x78]
0x400201:	mov	qword ptr [rbp - 0x80], rax
0x400205:	lea	rax, [rbp - 0x70]
0x400209:	mov	edx, 0x63
0x40020e:	mov	esi, 0x43
0x400213:	mov	rdi, rax
0x400216:	call	0x500010
<Block for 0x40021b, 28 bytes>
0x40021b:	mov	byte ptr [rbp - 0xd], 0
0x40021f:	lea	rcx, [rbp - 0x70]
0x400223:	mov	rax, qword ptr [rbp - 0x80]
0x400227:	mov	edx, 0x63
0x40022c:	mov	rsi, rcx
0x40022f:	mov	rdi, rax
0x400232:	call	0x500018
<Block for 0x400237, 23 bytes>
0x400237:	mov	rax, qword ptr [rbp - 0x80]
0x40023b:	add	rax, 0x63
0x40023f:	mov	byte ptr [rax], 0
0x400242:	mov	rax, qword ptr [rbp - 0x80]
0x400246:	mov	rdi, rax
0x400249:	call	0x500020
<Block for 0x40024e, 16 bytes>
0x40024e:	nop	
0x40024f:	mov	rax, qword ptr [rbp - 8]
0x400253:	xor	rax, qword ptr fs:[0x28]
0x40025c:	je	0x400263
<Block for 0x400263, 2 bytes>
0x400263:	leave	
0x400264:	ret	
<Block for 0x40025e, 5 bytes>
0x40025e:	call	0x500028
