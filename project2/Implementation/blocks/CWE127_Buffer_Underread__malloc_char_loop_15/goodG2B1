<Block for 0x4000f4, 48 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x90
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	mov	qword ptr [rbp - 0x80], 0
0x40011a:	mov	edi, 0x64
0x40011f:	call	0x500000
<Block for 0x400124, 11 bytes>
0x400124:	mov	qword ptr [rbp - 0x78], rax
0x400128:	cmp	qword ptr [rbp - 0x78], 0
0x40012d:	jne	0x400139
<Block for 0x40012f, 10 bytes>
0x40012f:	mov	edi, 0xffffffff
0x400134:	call	0x500008
<Block for 0x400139, 22 bytes>
0x400139:	mov	rax, qword ptr [rbp - 0x78]
0x40013d:	mov	edx, 0x63
0x400142:	mov	esi, 0x41
0x400147:	mov	rdi, rax
0x40014a:	call	0x500010
<Block for 0x40014f, 42 bytes>
0x40014f:	mov	rax, qword ptr [rbp - 0x78]
0x400153:	add	rax, 0x63
0x400157:	mov	byte ptr [rax], 0
0x40015a:	mov	rax, qword ptr [rbp - 0x78]
0x40015e:	mov	qword ptr [rbp - 0x80], rax
0x400162:	nop	
0x400163:	lea	rax, [rbp - 0x70]
0x400167:	mov	edx, 0x63
0x40016c:	mov	esi, 0x43
0x400171:	mov	rdi, rax
0x400174:	call	0x500010
<Block for 0x400179, 17 bytes>
0x400179:	mov	byte ptr [rbp - 0xd], 0
0x40017d:	mov	qword ptr [rbp - 0x88], 0
0x400188:	jmp	0x4001b3
<Block for 0x4001b3, 10 bytes>
0x4001b3:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001bb:	jbe	0x40018a
<Block for 0x40018a, 51 bytes>
0x40018a:	mov	rdx, qword ptr [rbp - 0x80]
0x40018e:	mov	rax, qword ptr [rbp - 0x88]
0x400195:	add	rax, rdx
0x400198:	movzx	eax, byte ptr [rax]
0x40019b:	lea	rcx, [rbp - 0x70]
0x40019f:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a6:	add	rdx, rcx
0x4001a9:	mov	byte ptr [rdx], al
0x4001ab:	add	qword ptr [rbp - 0x88], 1
0x4001b3:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001bb:	jbe	0x40018a
<Block for 0x4001bd, 16 bytes>
0x4001bd:	mov	byte ptr [rbp - 0xd], 0
0x4001c1:	lea	rax, [rbp - 0x70]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500018
<Block for 0x4001cd, 16 bytes>
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500020
