<Block for 0x4001e4, 48 bytes>
0x4001e4:	endbr64	
0x4001e8:	push	rbp
0x4001e9:	mov	rbp, rsp
0x4001ec:	sub	rsp, 0x90
0x4001f3:	mov	rax, qword ptr fs:[0x28]
0x4001fc:	mov	qword ptr [rbp - 8], rax
0x400200:	xor	eax, eax
0x400202:	mov	qword ptr [rbp - 0x80], 0
0x40020a:	mov	edi, 0x64
0x40020f:	call	0x500000
<Block for 0x400214, 11 bytes>
0x400214:	mov	qword ptr [rbp - 0x78], rax
0x400218:	cmp	qword ptr [rbp - 0x78], 0
0x40021d:	jne	0x400229
<Block for 0x40021f, 10 bytes>
0x40021f:	mov	edi, 0xffffffff
0x400224:	call	0x500008
<Block for 0x400229, 22 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0x78]
0x40022d:	mov	edx, 0x63
0x400232:	mov	esi, 0x41
0x400237:	mov	rdi, rax
0x40023a:	call	0x500010
<Block for 0x40023f, 42 bytes>
0x40023f:	mov	rax, qword ptr [rbp - 0x78]
0x400243:	add	rax, 0x63
0x400247:	mov	byte ptr [rax], 0
0x40024a:	mov	rax, qword ptr [rbp - 0x78]
0x40024e:	mov	qword ptr [rbp - 0x80], rax
0x400252:	nop	
0x400253:	lea	rax, [rbp - 0x70]
0x400257:	mov	edx, 0x63
0x40025c:	mov	esi, 0x43
0x400261:	mov	rdi, rax
0x400264:	call	0x500010
<Block for 0x400269, 17 bytes>
0x400269:	mov	byte ptr [rbp - 0xd], 0
0x40026d:	mov	qword ptr [rbp - 0x88], 0
0x400278:	jmp	0x4002a3
<Block for 0x4002a3, 10 bytes>
0x4002a3:	cmp	qword ptr [rbp - 0x88], 0x63
0x4002ab:	jbe	0x40027a
<Block for 0x40027a, 51 bytes>
0x40027a:	mov	rdx, qword ptr [rbp - 0x80]
0x40027e:	mov	rax, qword ptr [rbp - 0x88]
0x400285:	add	rax, rdx
0x400288:	movzx	eax, byte ptr [rax]
0x40028b:	lea	rcx, [rbp - 0x70]
0x40028f:	mov	rdx, qword ptr [rbp - 0x88]
0x400296:	add	rdx, rcx
0x400299:	mov	byte ptr [rdx], al
0x40029b:	add	qword ptr [rbp - 0x88], 1
0x4002a3:	cmp	qword ptr [rbp - 0x88], 0x63
0x4002ab:	jbe	0x40027a
<Block for 0x4002ad, 16 bytes>
0x4002ad:	mov	byte ptr [rbp - 0xd], 0
0x4002b1:	lea	rax, [rbp - 0x70]
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x500018
<Block for 0x4002bd, 16 bytes>
0x4002bd:	nop	
0x4002be:	mov	rax, qword ptr [rbp - 8]
0x4002c2:	xor	rax, qword ptr fs:[0x28]
0x4002cb:	je	0x4002d2
<Block for 0x4002d2, 2 bytes>
0x4002d2:	leave	
0x4002d3:	ret	
<Block for 0x4002cd, 5 bytes>
0x4002cd:	call	0x500020
