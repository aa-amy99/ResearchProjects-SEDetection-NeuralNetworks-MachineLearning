<Block for 0x40015e, 40 bytes>
0x40015e:	endbr64	
0x400162:	push	rbp
0x400163:	mov	rbp, rsp
0x400166:	push	rbx
0x400167:	sub	rsp, 0x68
0x40016b:	mov	rax, qword ptr fs:[0x28]
0x400174:	mov	qword ptr [rbp - 0x18], rax
0x400178:	xor	eax, eax
0x40017a:	lea	rax, [rbp - 0x50]
0x40017e:	mov	rdi, rax
0x400181:	call	0x40037e
<Block for 0x400186, 10 bytes>
0x400186:	mov	edi, 0x64
0x40018b:	call	0x500000
<Block for 0x400190, 13 bytes>
0x400190:	mov	qword ptr [rbp - 0x68], rax
0x400194:	mov	rax, qword ptr [rbp - 0x68]
0x400198:	test	rax, rax
0x40019b:	jne	0x4001a7
<Block for 0x40019d, 10 bytes>
0x40019d:	mov	edi, 0xffffffff
0x4001a2:	call	0x500008
<Block for 0x4001a7, 19 bytes>
0x4001a7:	mov	rax, qword ptr [rbp - 0x68]
0x4001ab:	mov	byte ptr [rax], 0
0x4001ae:	mov	rax, qword ptr [rbp - 0x68]
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500010
<Block for 0x4001ba, 16 bytes>
0x4001ba:	mov	qword ptr [rbp - 0x60], rax
0x4001be:	lea	rdi, [rip + 0x11e]
0x4001c5:	call	0x500018
<Block for 0x4001ca, 11 bytes>
0x4001ca:	mov	qword ptr [rbp - 0x58], rax
0x4001ce:	cmp	qword ptr [rbp - 0x58], 0
0x4001d3:	je	0x4001fb
<Block for 0x4001fb, 19 bytes>
0x4001fb:	lea	rdx, [rbp - 0x68]
0x4001ff:	lea	rax, [rbp - 0x50]
0x400203:	mov	rsi, rdx
0x400206:	mov	rdi, rax
0x400209:	call	0x400476
<Block for 0x4001d5, 38 bytes>
0x4001d5:	mov	eax, 0x63
0x4001da:	sub	rax, qword ptr [rbp - 0x60]
0x4001de:	mov	rdx, rax
0x4001e1:	mov	rcx, qword ptr [rbp - 0x68]
0x4001e5:	mov	rax, qword ptr [rbp - 0x60]
0x4001e9:	add	rcx, rax
0x4001ec:	mov	rax, qword ptr [rbp - 0x58]
0x4001f0:	mov	rsi, rax
0x4001f3:	mov	rdi, rcx
0x4001f6:	call	0x500020
<Block for 0x40020e, 19 bytes>
0x40020e:	lea	rdx, [rbp - 0x68]
0x400212:	lea	rax, [rbp - 0x50]
0x400216:	mov	rsi, rdx
0x400219:	mov	rdi, rax
0x40021c:	call	0x400476
<Block for 0x400221, 19 bytes>
0x400221:	lea	rdx, [rbp - 0x68]
0x400225:	lea	rax, [rbp - 0x50]
0x400229:	mov	rsi, rdx
0x40022c:	mov	rdi, rax
0x40022f:	call	0x400476
<Block for 0x400234, 19 bytes>
0x400234:	lea	rdx, [rbp - 0x50]
0x400238:	lea	rax, [rbp - 0x30]
0x40023c:	mov	rsi, rdx
0x40023f:	mov	rdi, rax
0x400242:	call	0x4004b0
<Block for 0x400247, 12 bytes>
0x400247:	lea	rax, [rbp - 0x30]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500040
<Block for 0x400253, 12 bytes>
0x400253:	lea	rax, [rbp - 0x30]
0x400257:	mov	rdi, rax
0x40025a:	call	0x40039e
<Block for 0x40025f, 12 bytes>
0x40025f:	lea	rax, [rbp - 0x50]
0x400263:	mov	rdi, rax
0x400266:	call	0x40039e
<Block for 0x40026b, 16 bytes>
0x40026b:	nop	
0x40026c:	mov	rax, qword ptr [rbp - 0x18]
0x400270:	xor	rax, qword ptr fs:[0x28]
0x400279:	je	0x4002b5
<Block for 0x4002b5, 7 bytes>
0x4002b5:	add	rsp, 0x68
0x4002b9:	pop	rbx
0x4002ba:	pop	rbp
0x4002bb:	ret	
<Block for 0x40027b, 2 bytes>
0x40027b:	jmp	0x4002b0
<Block for 0x4002b0, 5 bytes>
0x4002b0:	call	0x500038
