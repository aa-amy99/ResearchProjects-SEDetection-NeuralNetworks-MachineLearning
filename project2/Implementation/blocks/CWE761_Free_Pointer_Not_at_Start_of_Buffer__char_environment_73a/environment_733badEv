<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x40037e
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x68], rax
0x400036:	mov	rax, qword ptr [rbp - 0x68]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x68]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x68]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 16 bytes>
0x40005c:	mov	qword ptr [rbp - 0x60], rax
0x400060:	lea	rdi, [rip + 0x27c]
0x400067:	call	0x500018
<Block for 0x40006c, 11 bytes>
0x40006c:	mov	qword ptr [rbp - 0x58], rax
0x400070:	cmp	qword ptr [rbp - 0x58], 0
0x400075:	je	0x40009d
<Block for 0x40009d, 19 bytes>
0x40009d:	lea	rdx, [rbp - 0x68]
0x4000a1:	lea	rax, [rbp - 0x50]
0x4000a5:	mov	rsi, rdx
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x400476
<Block for 0x400077, 38 bytes>
0x400077:	mov	eax, 0x63
0x40007c:	sub	rax, qword ptr [rbp - 0x60]
0x400080:	mov	rdx, rax
0x400083:	mov	rcx, qword ptr [rbp - 0x68]
0x400087:	mov	rax, qword ptr [rbp - 0x60]
0x40008b:	add	rcx, rax
0x40008e:	mov	rax, qword ptr [rbp - 0x58]
0x400092:	mov	rsi, rax
0x400095:	mov	rdi, rcx
0x400098:	call	0x500020
<Block for 0x4000b0, 19 bytes>
0x4000b0:	lea	rdx, [rbp - 0x68]
0x4000b4:	lea	rax, [rbp - 0x50]
0x4000b8:	mov	rsi, rdx
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x400476
<Block for 0x4000c3, 19 bytes>
0x4000c3:	lea	rdx, [rbp - 0x68]
0x4000c7:	lea	rax, [rbp - 0x50]
0x4000cb:	mov	rsi, rdx
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x400476
<Block for 0x4000d6, 19 bytes>
0x4000d6:	lea	rdx, [rbp - 0x50]
0x4000da:	lea	rax, [rbp - 0x30]
0x4000de:	mov	rsi, rdx
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x4004b0
<Block for 0x4000e9, 12 bytes>
0x4000e9:	lea	rax, [rbp - 0x30]
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500028
<Block for 0x4000f5, 12 bytes>
0x4000f5:	lea	rax, [rbp - 0x30]
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x40039e
<Block for 0x400101, 12 bytes>
0x400101:	lea	rax, [rbp - 0x50]
0x400105:	mov	rdi, rax
0x400108:	call	0x40039e
<Block for 0x40010d, 16 bytes>
0x40010d:	nop	
0x40010e:	mov	rax, qword ptr [rbp - 0x18]
0x400112:	xor	rax, qword ptr fs:[0x28]
0x40011b:	je	0x400157
<Block for 0x400157, 7 bytes>
0x400157:	add	rsp, 0x68
0x40015b:	pop	rbx
0x40015c:	pop	rbp
0x40015d:	ret	
<Block for 0x40011d, 2 bytes>
0x40011d:	jmp	0x400152
<Block for 0x400152, 5 bytes>
0x400152:	call	0x500038
