<Block for 0x40005f, 22 bytes>
0x40005f:	endbr64	
0x400063:	push	rbp
0x400064:	mov	rbp, rsp
0x400067:	sub	rsp, 0x20
0x40006b:	mov	eax, 0
0x400070:	call	0x500028
<Block for 0x400075, 4 bytes>
0x400075:	test	eax, eax
0x400077:	je	0x400087
<Block for 0x400087, 10 bytes>
0x400087:	mov	edi, 8
0x40008c:	call	0x500008
<Block for 0x400079, 12 bytes>
0x400079:	lea	rdi, [rip + 0xf6]
0x400080:	call	0x500020
<Block for 0x400091, 11 bytes>
0x400091:	mov	qword ptr [rbp - 0x18], rax
0x400095:	cmp	qword ptr [rbp - 0x18], 0
0x40009a:	jne	0x4000a6
<Block for 0x400085, 2 bytes>
0x400085:	jmp	0x4000df
<Block for 0x40009c, 10 bytes>
0x40009c:	mov	edi, 0xffffffff
0x4000a1:	call	0x500010
<Block for 0x4000a6, 45 bytes>
0x4000a6:	lea	rax, [rip + 0xde]
0x4000ad:	mov	qword ptr [rbp - 0x10], rax
0x4000b1:	mov	rax, qword ptr [rbp - 0x18]
0x4000b5:	mov	rdx, qword ptr [rbp - 0x10]
0x4000b9:	mov	qword ptr [rax], rdx
0x4000bc:	mov	rax, qword ptr [rbp - 0x18]
0x4000c0:	mov	rax, qword ptr [rax]
0x4000c3:	mov	qword ptr [rbp - 8], rax
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500020
<Block for 0x4000df, 3 bytes>
0x4000df:	nop	
0x4000e0:	leave	
0x4000e1:	ret	
<Block for 0x4000d3, 12 bytes>
0x4000d3:	mov	rax, qword ptr [rbp - 0x18]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500018
