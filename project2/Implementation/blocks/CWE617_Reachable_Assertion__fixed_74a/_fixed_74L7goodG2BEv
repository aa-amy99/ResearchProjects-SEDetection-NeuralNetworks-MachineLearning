<Block for 0x400130, 43 bytes>
0x400130:	endbr64	
0x400134:	push	rbp
0x400135:	mov	rbp, rsp
0x400138:	push	rbx
0x400139:	sub	rsp, 0x88
0x400140:	mov	rax, qword ptr fs:[0x28]
0x400149:	mov	qword ptr [rbp - 0x18], rax
0x40014d:	xor	eax, eax
0x40014f:	lea	rax, [rbp - 0x80]
0x400153:	mov	rdi, rax
0x400156:	call	0x4003a0
<Block for 0x40015b, 46 bytes>
0x40015b:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x400165:	mov	dword ptr [rbp - 0x84], 6
0x40016f:	mov	dword ptr [rbp - 0x50], 0
0x400176:	lea	rdx, [rbp - 0x50]
0x40017a:	lea	rax, [rbp - 0x80]
0x40017e:	mov	rsi, rdx
0x400181:	mov	rdi, rax
0x400184:	call	0x400556
<Block for 0x400189, 34 bytes>
0x400189:	mov	edx, dword ptr [rbp - 0x84]
0x40018f:	mov	dword ptr [rax], edx
0x400191:	mov	dword ptr [rbp - 0x50], 1
0x400198:	lea	rdx, [rbp - 0x50]
0x40019c:	lea	rax, [rbp - 0x80]
0x4001a0:	mov	rsi, rdx
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x400556
<Block for 0x4001ab, 34 bytes>
0x4001ab:	mov	edx, dword ptr [rbp - 0x84]
0x4001b1:	mov	dword ptr [rax], edx
0x4001b3:	mov	dword ptr [rbp - 0x50], 2
0x4001ba:	lea	rdx, [rbp - 0x50]
0x4001be:	lea	rax, [rbp - 0x80]
0x4001c2:	mov	rsi, rdx
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x400556
<Block for 0x4001cd, 27 bytes>
0x4001cd:	mov	edx, dword ptr [rbp - 0x84]
0x4001d3:	mov	dword ptr [rax], edx
0x4001d5:	lea	rdx, [rbp - 0x80]
0x4001d9:	lea	rax, [rbp - 0x50]
0x4001dd:	mov	rsi, rdx
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x4003e0
<Block for 0x4001e8, 12 bytes>
0x4001e8:	lea	rax, [rbp - 0x50]
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500018
<Block for 0x4001f4, 12 bytes>
0x4001f4:	lea	rax, [rbp - 0x50]
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x4003c0
<Block for 0x400200, 12 bytes>
0x400200:	lea	rax, [rbp - 0x80]
0x400204:	mov	rdi, rax
0x400207:	call	0x4003c0
<Block for 0x40020c, 16 bytes>
0x40020c:	nop	
0x40020d:	mov	rax, qword ptr [rbp - 0x18]
0x400211:	xor	rax, qword ptr fs:[0x28]
0x40021a:	je	0x400256
<Block for 0x400256, 10 bytes>
0x400256:	add	rsp, 0x88
0x40025d:	pop	rbx
0x40025e:	pop	rbp
0x40025f:	ret	
<Block for 0x40021c, 2 bytes>
0x40021c:	jmp	0x400251
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500010
