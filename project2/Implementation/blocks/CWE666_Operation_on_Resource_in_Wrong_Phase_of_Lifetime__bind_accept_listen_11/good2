<Block for 0x40051f, 40 bytes>
0x40051f:	endbr64	
0x400523:	push	rbp
0x400524:	mov	rbp, rsp
0x400527:	sub	rsp, 0xa0
0x40052e:	mov	rax, qword ptr fs:[0x28]
0x400537:	mov	qword ptr [rbp - 8], rax
0x40053b:	xor	eax, eax
0x40053d:	mov	eax, 0
0x400542:	call	0x500000
<Block for 0x400547, 8 bytes>
0x400547:	test	eax, eax
0x400549:	je	0x400791
<Block for 0x400791, 16 bytes>
0x400791:	nop	
0x400792:	mov	rax, qword ptr [rbp - 8]
0x400796:	xor	rax, qword ptr fs:[0x28]
0x40079f:	je	0x4007a6
<Block for 0x40054f, 135 bytes>
0x40054f:	mov	qword ptr [rbp - 0x70], 0
0x400557:	mov	qword ptr [rbp - 0x68], 0
0x40055f:	mov	qword ptr [rbp - 0x60], 0
0x400567:	mov	qword ptr [rbp - 0x58], 0
0x40056f:	mov	qword ptr [rbp - 0x50], 0
0x400577:	mov	qword ptr [rbp - 0x48], 0
0x40057f:	mov	qword ptr [rbp - 0x40], 0
0x400587:	mov	qword ptr [rbp - 0x38], 0
0x40058f:	mov	qword ptr [rbp - 0x30], 0
0x400597:	mov	qword ptr [rbp - 0x28], 0
0x40059f:	mov	qword ptr [rbp - 0x20], 0
0x4005a7:	mov	qword ptr [rbp - 0x18], 0
0x4005af:	mov	dword ptr [rbp - 0x10], 0
0x4005b6:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005c0:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4005ca:	lea	rax, [rbp - 0x70]
0x4005ce:	mov	rdi, rax
0x4005d1:	call	0x500008
<Block for 0x4007a6, 2 bytes>
0x4007a6:	leave	
0x4007a7:	ret	
<Block for 0x4007a1, 5 bytes>
0x4007a1:	call	0x500060
<Block for 0x4005d6, 27 bytes>
0x4005d6:	mov	qword ptr [rbp - 0x90], rax
0x4005dd:	mov	edx, 6
0x4005e2:	mov	esi, 1
0x4005e7:	mov	edi, 2
0x4005ec:	call	0x500010
<Block for 0x4005f1, 19 bytes>
0x4005f1:	mov	dword ptr [rbp - 0x98], eax
0x4005f7:	cmp	dword ptr [rbp - 0x98], -1
0x4005fe:	je	0x40074f
<Block for 0x40074f, 3 bytes>
0x40074f:	nop	
0x400750:	jmp	0x400759
<Block for 0x400604, 22 bytes>
0x400604:	lea	rax, [rbp - 0x80]
0x400608:	mov	edx, 0x10
0x40060d:	mov	esi, 0
0x400612:	mov	rdi, rax
0x400615:	call	0x500018
<Block for 0x400759, 9 bytes>
0x400759:	cmp	dword ptr [rbp - 0x98], -1
0x400760:	je	0x40076f
<Block for 0x40061a, 23 bytes>
0x40061a:	mov	word ptr [rbp - 0x80], 2
0x400620:	mov	dword ptr [rbp - 0x7c], 0
0x400627:	mov	edi, 0x6987
0x40062c:	call	0x500020
<Block for 0x40076f, 9 bytes>
0x40076f:	cmp	dword ptr [rbp - 0x9c], -1
0x400776:	je	0x400785
<Block for 0x400762, 13 bytes>
0x400762:	mov	eax, dword ptr [rbp - 0x98]
0x400768:	mov	edi, eax
0x40076a:	call	0x500050
<Block for 0x400631, 29 bytes>
0x400631:	mov	word ptr [rbp - 0x7e], ax
0x400635:	lea	rcx, [rbp - 0x80]
0x400639:	mov	eax, dword ptr [rbp - 0x98]
0x40063f:	mov	edx, 0x10
0x400644:	mov	rsi, rcx
0x400647:	mov	edi, eax
0x400649:	call	0x500028
<Block for 0x400785, 12 bytes>
0x400785:	lea	rax, [rbp - 0x70]
0x400789:	mov	rdi, rax
0x40078c:	call	0x500058
<Block for 0x400778, 13 bytes>
0x400778:	mov	eax, dword ptr [rbp - 0x9c]
0x40077e:	mov	edi, eax
0x400780:	call	0x500050
<Block for 0x40064e, 9 bytes>
0x40064e:	cmp	eax, -1
0x400651:	je	0x400752
<Block for 0x400752, 3 bytes>
0x400752:	nop	
0x400753:	jmp	0x400759
<Block for 0x400657, 18 bytes>
0x400657:	mov	eax, dword ptr [rbp - 0x98]
0x40065d:	mov	esi, 5
0x400662:	mov	edi, eax
0x400664:	call	0x500038
<Block for 0x400669, 9 bytes>
0x400669:	cmp	eax, -1
0x40066c:	je	0x400755
<Block for 0x400755, 3 bytes>
0x400755:	nop	
0x400756:	jmp	0x400759
<Block for 0x400672, 23 bytes>
0x400672:	mov	eax, dword ptr [rbp - 0x98]
0x400678:	mov	edx, 0
0x40067d:	mov	esi, 0
0x400682:	mov	edi, eax
0x400684:	call	0x500030
<Block for 0x400689, 19 bytes>
0x400689:	mov	dword ptr [rbp - 0x9c], eax
0x40068f:	cmp	dword ptr [rbp - 0x9c], -1
0x400696:	je	0x400758
<Block for 0x40069c, 52 bytes>
0x40069c:	mov	rax, qword ptr [rbp - 0x90]
0x4006a3:	mov	edx, 0x63
0x4006a8:	sub	edx, eax
0x4006aa:	mov	eax, edx
0x4006ac:	movsxd	rdx, eax
0x4006af:	lea	rcx, [rbp - 0x70]
0x4006b3:	mov	rax, qword ptr [rbp - 0x90]
0x4006ba:	lea	rsi, [rcx + rax]
0x4006be:	mov	eax, dword ptr [rbp - 0x9c]
0x4006c4:	mov	ecx, 0
0x4006c9:	mov	edi, eax
0x4006cb:	call	0x500040
<Block for 0x400758, 1 bytes>
0x400758:	nop	
<Block for 0x4006d0, 15 bytes>
0x4006d0:	mov	dword ptr [rbp - 0x94], eax
0x4006d6:	cmp	dword ptr [rbp - 0x94], -1
0x4006dd:	je	0x400759
<Block for 0x4006df, 9 bytes>
0x4006df:	cmp	dword ptr [rbp - 0x94], 0
0x4006e6:	je	0x400759
<Block for 0x4006e8, 30 bytes>
0x4006e8:	mov	eax, dword ptr [rbp - 0x94]
0x4006ee:	cdqe	
0x4006f0:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006f5:	lea	rax, [rbp - 0x70]
0x4006f9:	mov	esi, 0xd
0x4006fe:	mov	rdi, rax
0x400701:	call	0x500048
<Block for 0x400706, 17 bytes>
0x400706:	mov	qword ptr [rbp - 0x88], rax
0x40070d:	cmp	qword ptr [rbp - 0x88], 0
0x400715:	je	0x400721
<Block for 0x400721, 17 bytes>
0x400721:	lea	rax, [rbp - 0x70]
0x400725:	mov	esi, 0xa
0x40072a:	mov	rdi, rax
0x40072d:	call	0x500048
<Block for 0x400717, 27 bytes>
0x400717:	mov	rax, qword ptr [rbp - 0x88]
0x40071e:	mov	byte ptr [rax], 0
0x400721:	lea	rax, [rbp - 0x70]
0x400725:	mov	esi, 0xa
0x40072a:	mov	rdi, rax
0x40072d:	call	0x500048
<Block for 0x400732, 17 bytes>
0x400732:	mov	qword ptr [rbp - 0x88], rax
0x400739:	cmp	qword ptr [rbp - 0x88], 0
0x400741:	je	0x400759
<Block for 0x400743, 12 bytes>
0x400743:	mov	rax, qword ptr [rbp - 0x88]
0x40074a:	mov	byte ptr [rax], 0
0x40074d:	jmp	0x400759
