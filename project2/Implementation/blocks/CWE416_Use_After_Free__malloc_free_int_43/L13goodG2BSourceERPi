<Block for 0x4000cd, 26 bytes>
0x4000cd:	endbr64	
0x4000d1:	push	rbp
0x4000d2:	mov	rbp, rsp
0x4000d5:	sub	rsp, 0x20
0x4000d9:	mov	qword ptr [rbp - 0x18], rdi
0x4000dd:	mov	edi, 0x190
0x4000e2:	call	0x500000
<Block for 0x4000e7, 22 bytes>
0x4000e7:	mov	rdx, rax
0x4000ea:	mov	rax, qword ptr [rbp - 0x18]
0x4000ee:	mov	qword ptr [rax], rdx
0x4000f1:	mov	rax, qword ptr [rbp - 0x18]
0x4000f5:	mov	rax, qword ptr [rax]
0x4000f8:	test	rax, rax
0x4000fb:	jne	0x400107
<Block for 0x4000fd, 10 bytes>
0x4000fd:	mov	edi, 0xffffffff
0x400102:	call	0x500008
<Block for 0x400107, 15 bytes>
0x400107:	mov	qword ptr [rbp - 8], 0
0x40010f:	cmp	qword ptr [rbp - 8], 0x63
0x400114:	ja	0x400135
<Block for 0x400116, 31 bytes>
0x400116:	mov	rax, qword ptr [rbp - 0x18]
0x40011a:	mov	rax, qword ptr [rax]
0x40011d:	mov	rdx, qword ptr [rbp - 8]
0x400121:	shl	rdx, 2
0x400125:	add	rax, rdx
0x400128:	mov	dword ptr [rax], 5
0x40012e:	add	qword ptr [rbp - 8], 1
0x400133:	jmp	0x40010f
<Block for 0x400135, 3 bytes>
0x400135:	nop	
0x400136:	leave	
0x400137:	ret	
<Block for 0x40010f, 7 bytes>
0x40010f:	cmp	qword ptr [rbp - 8], 0x63
0x400114:	ja	0x400135
