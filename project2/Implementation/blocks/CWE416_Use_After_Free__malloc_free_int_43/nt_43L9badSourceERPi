<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	edi, 0x190
0x400015:	call	0x500000
<Block for 0x40001a, 22 bytes>
0x40001a:	mov	rdx, rax
0x40001d:	mov	rax, qword ptr [rbp - 0x18]
0x400021:	mov	qword ptr [rax], rdx
0x400024:	mov	rax, qword ptr [rbp - 0x18]
0x400028:	mov	rax, qword ptr [rax]
0x40002b:	test	rax, rax
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0xffffffff
0x400035:	call	0x500008
<Block for 0x40003a, 15 bytes>
0x40003a:	mov	qword ptr [rbp - 8], 0
0x400042:	cmp	qword ptr [rbp - 8], 0x63
0x400047:	ja	0x400068
<Block for 0x400049, 31 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x18]
0x40004d:	mov	rax, qword ptr [rax]
0x400050:	mov	rdx, qword ptr [rbp - 8]
0x400054:	shl	rdx, 2
0x400058:	add	rax, rdx
0x40005b:	mov	dword ptr [rax], 5
0x400061:	add	qword ptr [rbp - 8], 1
0x400066:	jmp	0x400042
<Block for 0x400068, 15 bytes>
0x400068:	mov	rax, qword ptr [rbp - 0x18]
0x40006c:	mov	rax, qword ptr [rax]
0x40006f:	mov	rdi, rax
0x400072:	call	0x500010
<Block for 0x400042, 7 bytes>
0x400042:	cmp	qword ptr [rbp - 8], 0x63
0x400047:	ja	0x400068
<Block for 0x400077, 3 bytes>
0x400077:	nop	
0x400078:	leave	
0x400079:	ret	
