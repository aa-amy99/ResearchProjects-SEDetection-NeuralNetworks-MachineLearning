<Block for 0x400256, 37 bytes>
0x400256:	endbr64	
0x40025a:	push	rbp
0x40025b:	mov	rbp, rsp
0x40025e:	sub	rsp, 0x20
0x400262:	mov	rax, qword ptr fs:[0x28]
0x40026b:	mov	qword ptr [rbp - 8], rax
0x40026f:	xor	eax, eax
0x400271:	mov	edi, 0x64
0x400276:	call	0x500020
<Block for 0x40027b, 13 bytes>
0x40027b:	mov	qword ptr [rbp - 0x18], rax
0x40027f:	mov	rax, qword ptr [rbp - 0x18]
0x400283:	test	rax, rax
0x400286:	jne	0x400292
<Block for 0x400288, 10 bytes>
0x400288:	mov	edi, 0xffffffff
0x40028d:	call	0x500028
<Block for 0x400292, 19 bytes>
0x400292:	mov	rax, qword ptr [rbp - 0x18]
0x400296:	mov	byte ptr [rax], 0
0x400299:	lea	rax, [rbp - 0x18]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x40017d
<Block for 0x4002a5, 20 bytes>
0x4002a5:	mov	qword ptr [rbp - 0x10], 0
0x4002ad:	mov	rax, qword ptr [rbp - 0x18]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500000
<Block for 0x4002b9, 6 bytes>
0x4002b9:	cmp	qword ptr [rbp - 0x10], rax
0x4002bd:	jae	0x4002e6
<Block for 0x4002bf, 18 bytes>
0x4002bf:	mov	rdx, qword ptr [rbp - 0x18]
0x4002c3:	mov	rax, qword ptr [rbp - 0x10]
0x4002c7:	add	rax, rdx
0x4002ca:	movzx	eax, byte ptr [rax]
0x4002cd:	cmp	al, 0x53
0x4002cf:	jne	0x4002df
<Block for 0x4002e6, 12 bytes>
0x4002e6:	mov	rax, qword ptr [rbp - 0x18]
0x4002ea:	mov	rdi, rax
0x4002ed:	call	0x500030
<Block for 0x4002d1, 12 bytes>
0x4002d1:	lea	rdi, [rip + 0x50]
0x4002d8:	call	0x500018
<Block for 0x4002df, 7 bytes>
0x4002df:	add	qword ptr [rbp - 0x10], 1
0x4002e4:	jmp	0x4002ad
<Block for 0x4002f2, 16 bytes>
0x4002f2:	nop	
0x4002f3:	mov	rax, qword ptr [rbp - 8]
0x4002f7:	xor	rax, qword ptr fs:[0x28]
0x400300:	je	0x400307
<Block for 0x4002dd, 2 bytes>
0x4002dd:	jmp	0x4002e6
<Block for 0x4002ad, 12 bytes>
0x4002ad:	mov	rax, qword ptr [rbp - 0x18]
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500000
<Block for 0x400307, 2 bytes>
0x400307:	leave	
0x400308:	ret	
<Block for 0x400302, 5 bytes>
0x400302:	call	0x500038
