<Block for 0x4001a3, 59 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	sub	rsp, 0x90
0x4001b2:	mov	qword ptr [rbp - 0x88], rdi
0x4001b9:	mov	rax, qword ptr fs:[0x28]
0x4001c2:	mov	qword ptr [rbp - 8], rax
0x4001c6:	xor	eax, eax
0x4001c8:	lea	rax, [rbp - 0x70]
0x4001cc:	mov	edx, 0x63
0x4001d1:	mov	esi, 0x43
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500000
<Block for 0x4001de, 14 bytes>
0x4001de:	mov	byte ptr [rbp - 0xd], 0
0x4001e2:	mov	qword ptr [rbp - 0x78], 0
0x4001ea:	jmp	0x40020f
<Block for 0x40020f, 7 bytes>
0x40020f:	cmp	qword ptr [rbp - 0x78], 0x63
0x400214:	jbe	0x4001ec
<Block for 0x4001ec, 42 bytes>
0x4001ec:	mov	rdx, qword ptr [rbp - 0x88]
0x4001f3:	mov	rax, qword ptr [rbp - 0x78]
0x4001f7:	add	rdx, rax
0x4001fa:	lea	rcx, [rbp - 0x70]
0x4001fe:	mov	rax, qword ptr [rbp - 0x78]
0x400202:	add	rax, rcx
0x400205:	movzx	eax, byte ptr [rax]
0x400208:	mov	byte ptr [rdx], al
0x40020a:	add	qword ptr [rbp - 0x78], 1
0x40020f:	cmp	qword ptr [rbp - 0x78], 0x63
0x400214:	jbe	0x4001ec
<Block for 0x400216, 29 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x88]
0x40021d:	add	rax, 0x63
0x400221:	mov	byte ptr [rax], 0
0x400224:	mov	rax, qword ptr [rbp - 0x88]
0x40022b:	mov	rdi, rax
0x40022e:	call	0x500008
<Block for 0x400233, 16 bytes>
0x400233:	nop	
0x400234:	mov	rax, qword ptr [rbp - 8]
0x400238:	xor	rax, qword ptr fs:[0x28]
0x400241:	je	0x400248
<Block for 0x400248, 2 bytes>
0x400248:	leave	
0x400249:	ret	
<Block for 0x400243, 5 bytes>
0x400243:	call	0x500010
