<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	movabs	rax, 0x5858585858586e66
0x400025:	mov	qword ptr [rbp - 0x11], rax
0x400029:	mov	byte ptr [rbp - 9], 0
0x40002d:	lea	rax, [rbp - 0x11]
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 11 bytes>
0x400039:	mov	qword ptr [rbp - 0x20], rax
0x40003d:	cmp	qword ptr [rbp - 0x20], 0
0x400042:	jne	0x40004e
<Block for 0x400044, 10 bytes>
0x400044:	mov	edi, 1
0x400049:	call	0x500008
<Block for 0x40004e, 12 bytes>
0x40004e:	mov	rax, qword ptr [rbp - 0x20]
0x400052:	mov	rdi, rax
0x400055:	call	0x500010
<Block for 0x40005a, 27 bytes>
0x40005a:	mov	rax, qword ptr [rbp - 0x20]
0x40005e:	mov	edx, 0x180
0x400063:	mov	esi, 0x42
0x400068:	mov	rdi, rax
0x40006b:	mov	eax, 0
0x400070:	call	0x500018
<Block for 0x400075, 9 bytes>
0x400075:	mov	dword ptr [rbp - 0x24], eax
0x400078:	cmp	dword ptr [rbp - 0x24], -1
0x40007c:	je	0x400094
<Block for 0x400094, 16 bytes>
0x400094:	nop	
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	xor	rax, qword ptr fs:[0x28]
0x4000a2:	je	0x4000a9
<Block for 0x40007e, 12 bytes>
0x40007e:	lea	rdi, [rip + 0x153]
0x400085:	call	0x500010
<Block for 0x4000a9, 2 bytes>
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500028
<Block for 0x40008a, 10 bytes>
0x40008a:	mov	eax, dword ptr [rbp - 0x24]
0x40008d:	mov	edi, eax
0x40008f:	call	0x500020
