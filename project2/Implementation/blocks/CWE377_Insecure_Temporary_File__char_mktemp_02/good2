<Block for 0x400130, 67 bytes>
0x400130:	endbr64	
0x400134:	push	rbp
0x400135:	mov	rbp, rsp
0x400138:	sub	rsp, 0x30
0x40013c:	mov	rax, qword ptr fs:[0x28]
0x400145:	mov	qword ptr [rbp - 8], rax
0x400149:	xor	eax, eax
0x40014b:	movabs	rax, 0x6c69662f706d742f
0x400155:	movabs	rdx, 0x58585858585865
0x40015f:	mov	qword ptr [rbp - 0x20], rax
0x400163:	mov	qword ptr [rbp - 0x18], rdx
0x400167:	lea	rax, [rbp - 0x20]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500030
<Block for 0x400173, 15 bytes>
0x400173:	mov	dword ptr [rbp - 0x24], eax
0x400176:	lea	rax, [rbp - 0x20]
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500010
<Block for 0x400182, 6 bytes>
0x400182:	cmp	dword ptr [rbp - 0x24], -1
0x400186:	je	0x40019e
<Block for 0x40019e, 16 bytes>
0x40019e:	nop	
0x40019f:	mov	rax, qword ptr [rbp - 8]
0x4001a3:	xor	rax, qword ptr fs:[0x28]
0x4001ac:	je	0x4001b3
<Block for 0x400188, 12 bytes>
0x400188:	lea	rdi, [rip + 0x49]
0x40018f:	call	0x500010
<Block for 0x4001b3, 2 bytes>
0x4001b3:	leave	
0x4001b4:	ret	
<Block for 0x4001ae, 5 bytes>
0x4001ae:	call	0x500028
<Block for 0x400194, 10 bytes>
0x400194:	mov	eax, dword ptr [rbp - 0x24]
0x400197:	mov	edi, eax
0x400199:	call	0x500020
