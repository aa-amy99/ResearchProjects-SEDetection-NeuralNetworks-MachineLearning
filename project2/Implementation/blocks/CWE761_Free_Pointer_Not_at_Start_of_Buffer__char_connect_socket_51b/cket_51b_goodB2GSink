<Block for 0x40004a, 26 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x20
0x400056:	mov	qword ptr [rbp - 0x18], rdi
0x40005a:	mov	qword ptr [rbp - 8], 0
0x400062:	jmp	0x400089
<Block for 0x400089, 12 bytes>
0x400089:	mov	rax, qword ptr [rbp - 0x18]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500010
<Block for 0x400095, 6 bytes>
0x400095:	cmp	qword ptr [rbp - 8], rax
0x400099:	jb	0x400064
<Block for 0x400064, 18 bytes>
0x400064:	mov	rdx, qword ptr [rbp - 0x18]
0x400068:	mov	rax, qword ptr [rbp - 8]
0x40006c:	add	rax, rdx
0x40006f:	movzx	eax, byte ptr [rax]
0x400072:	cmp	al, 0x53
0x400074:	jne	0x400084
<Block for 0x40009b, 12 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x18]
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500008
<Block for 0x400076, 12 bytes>
0x400076:	lea	rdi, [rip + 0x2d]
0x40007d:	call	0x500000
<Block for 0x400084, 17 bytes>
0x400084:	add	qword ptr [rbp - 8], 1
0x400089:	mov	rax, qword ptr [rbp - 0x18]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500010
<Block for 0x4000a7, 3 bytes>
0x4000a7:	nop	
0x4000a8:	leave	
0x4000a9:	ret	
<Block for 0x400082, 2 bytes>
0x400082:	jmp	0x40009b
