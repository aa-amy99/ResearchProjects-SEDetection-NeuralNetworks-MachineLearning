<Block for 0x40001e, 40 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x110
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0
0x400041:	call	0x400000
<Block for 0x400046, 8 bytes>
0x400046:	test	eax, eax
0x400048:	je	0x40019f
<Block for 0x40019f, 16 bytes>
0x40019f:	nop	
0x4001a0:	mov	rax, qword ptr [rbp - 8]
0x4001a4:	xor	rax, qword ptr fs:[0x28]
0x4001ad:	je	0x4001b4
<Block for 0x40004e, 137 bytes>
0x40004e:	mov	qword ptr [rbp - 0x70], 0
0x400056:	mov	qword ptr [rbp - 0x68], 0
0x40005e:	mov	qword ptr [rbp - 0x60], 0
0x400066:	mov	qword ptr [rbp - 0x58], 0
0x40006e:	mov	qword ptr [rbp - 0x50], 0
0x400076:	mov	qword ptr [rbp - 0x48], 0
0x40007e:	mov	qword ptr [rbp - 0x40], 0
0x400086:	mov	qword ptr [rbp - 0x38], 0
0x40008e:	mov	qword ptr [rbp - 0x30], 0
0x400096:	mov	qword ptr [rbp - 0x28], 0
0x40009e:	mov	qword ptr [rbp - 0x20], 0
0x4000a6:	mov	qword ptr [rbp - 0x18], 0
0x4000ae:	mov	dword ptr [rbp - 0x10], 0
0x4000b5:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x4000bf:	mov	rdx, qword ptr [rip + 0xfff3a]
0x4000c6:	lea	rax, [rbp - 0x70]
0x4000ca:	mov	esi, 0x64
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500008
<Block for 0x4001b4, 2 bytes>
0x4001b4:	leave	
0x4001b5:	ret	
<Block for 0x4001af, 5 bytes>
0x4001af:	call	0x500048
<Block for 0x4000d7, 5 bytes>
0x4000d7:	test	rax, rax
0x4000da:	jne	0x4000ec
<Block for 0x4000dc, 12 bytes>
0x4000dc:	lea	rdi, [rip + 0x3bb]
0x4000e3:	call	0x500010
<Block for 0x4000ec, 11 bytes>
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	movzx	eax, byte ptr [rax]
0x4000f3:	test	al, al
0x4000f5:	je	0x40010c
<Block for 0x4000e8, 15 bytes>
0x4000e8:	mov	byte ptr [rbp - 0x70], 0
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	movzx	eax, byte ptr [rax]
0x4000f3:	test	al, al
0x4000f5:	je	0x40010c
<Block for 0x40010c, 22 bytes>
0x40010c:	lea	rdx, [rbp - 0x100]
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	rsi, rdx
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500020
<Block for 0x4000f7, 12 bytes>
0x4000f7:	lea	rax, [rbp - 0x70]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500018
<Block for 0x400122, 5 bytes>
0x400122:	cmp	eax, -1
0x400125:	jne	0x400131
<Block for 0x400103, 31 bytes>
0x400103:	sub	rax, 1
0x400107:	mov	byte ptr [rbp + rax - 0x70], 0
0x40010c:	lea	rdx, [rbp - 0x100]
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	rsi, rdx
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500020
<Block for 0x400127, 10 bytes>
0x400127:	mov	edi, 1
0x40012c:	call	0x500028
<Block for 0x400131, 22 bytes>
0x400131:	lea	rax, [rbp - 0x70]
0x400135:	mov	esi, 2
0x40013a:	mov	rdi, rax
0x40013d:	mov	eax, 0
0x400142:	call	0x500030
<Block for 0x400147, 15 bytes>
0x400147:	mov	dword ptr [rbp - 0x104], eax
0x40014d:	cmp	dword ptr [rbp - 0x104], -1
0x400154:	jne	0x400160
<Block for 0x400156, 10 bytes>
0x400156:	mov	edi, 1
0x40015b:	call	0x500028
<Block for 0x400160, 25 bytes>
0x400160:	mov	eax, dword ptr [rbp - 0x104]
0x400166:	mov	edx, 0xb
0x40016b:	lea	rsi, [rip + 0x33b]
0x400172:	mov	edi, eax
0x400174:	call	0x500038
<Block for 0x400179, 6 bytes>
0x400179:	cmp	rax, -1
0x40017d:	jne	0x400189
<Block for 0x40017f, 10 bytes>
0x40017f:	mov	edi, 1
0x400184:	call	0x500028
<Block for 0x400189, 9 bytes>
0x400189:	cmp	dword ptr [rbp - 0x104], -1
0x400190:	je	0x40019f
<Block for 0x400192, 13 bytes>
0x400192:	mov	eax, dword ptr [rbp - 0x104]
0x400198:	mov	edi, eax
0x40019a:	call	0x500040
