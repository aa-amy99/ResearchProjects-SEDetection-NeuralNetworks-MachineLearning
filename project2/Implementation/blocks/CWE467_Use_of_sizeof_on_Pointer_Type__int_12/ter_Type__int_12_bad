<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400066
<Block for 0x400066, 18 bytes>
0x400066:	mov	qword ptr [rbp - 0x10], 0
0x40006e:	mov	edi, 4
0x400073:	call	0x500008
<Block for 0x40001a, 18 bytes>
0x40001a:	mov	qword ptr [rbp - 8], 0
0x400022:	mov	edi, 8
0x400027:	call	0x500008
<Block for 0x400078, 11 bytes>
0x400078:	mov	qword ptr [rbp - 0x10], rax
0x40007c:	cmp	qword ptr [rbp - 0x10], 0
0x400081:	jne	0x40008d
<Block for 0x40002c, 11 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	cmp	qword ptr [rbp - 8], 0
0x400035:	jne	0x400041
<Block for 0x400083, 10 bytes>
0x400083:	mov	edi, 0xffffffff
0x400088:	call	0x500010
<Block for 0x40008d, 23 bytes>
0x40008d:	mov	rax, qword ptr [rbp - 0x10]
0x400091:	mov	dword ptr [rax], 6
0x400097:	mov	rax, qword ptr [rbp - 0x10]
0x40009b:	mov	eax, dword ptr [rax]
0x40009d:	mov	edi, eax
0x40009f:	call	0x500018
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0xffffffff
0x40003c:	call	0x500010
<Block for 0x400041, 23 bytes>
0x400041:	mov	rax, qword ptr [rbp - 8]
0x400045:	mov	dword ptr [rax], 5
0x40004b:	mov	rax, qword ptr [rbp - 8]
0x40004f:	mov	eax, dword ptr [rax]
0x400051:	mov	edi, eax
0x400053:	call	0x500018
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500020
<Block for 0x400058, 12 bytes>
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500020
<Block for 0x4000b0, 3 bytes>
0x4000b0:	nop	
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x400064, 2 bytes>
0x400064:	jmp	0x4000b0
