<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x400684
<Block for 0x40002b, 50 bytes>
0x40002b:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x400035:	mov	dword ptr [rbp - 0x88], 0xffffffff
0x40003f:	mov	dword ptr [rbp - 0x8c], 0xffffffff
0x400049:	mov	edx, 6
0x40004e:	mov	esi, 1
0x400053:	mov	edi, 2
0x400058:	call	0x500000
<Block for 0x40005d, 19 bytes>
0x40005d:	mov	dword ptr [rbp - 0x88], eax
0x400063:	cmp	dword ptr [rbp - 0x88], -1
0x40006a:	je	0x400162
<Block for 0x400162, 3 bytes>
0x400162:	nop	
0x400163:	jmp	0x40016c
<Block for 0x400070, 22 bytes>
0x400070:	lea	rax, [rbp - 0x40]
0x400074:	mov	edx, 0x10
0x400079:	mov	esi, 0
0x40007e:	mov	rdi, rax
0x400081:	call	0x500008
<Block for 0x40016c, 9 bytes>
0x40016c:	cmp	dword ptr [rbp - 0x88], -1
0x400173:	je	0x400182
<Block for 0x400086, 23 bytes>
0x400086:	mov	word ptr [rbp - 0x40], 2
0x40008c:	mov	dword ptr [rbp - 0x3c], 0
0x400093:	mov	edi, 0x6987
0x400098:	call	0x500010
<Block for 0x400182, 9 bytes>
0x400182:	cmp	dword ptr [rbp - 0x8c], -1
0x400189:	je	0x400198
<Block for 0x400175, 13 bytes>
0x400175:	mov	eax, dword ptr [rbp - 0x88]
0x40017b:	mov	edi, eax
0x40017d:	call	0x500040
<Block for 0x40009d, 29 bytes>
0x40009d:	mov	word ptr [rbp - 0x3e], ax
0x4000a1:	lea	rcx, [rbp - 0x40]
0x4000a5:	mov	eax, dword ptr [rbp - 0x88]
0x4000ab:	mov	edx, 0x10
0x4000b0:	mov	rsi, rcx
0x4000b3:	mov	edi, eax
0x4000b5:	call	0x500018
<Block for 0x400198, 22 bytes>
0x400198:	lea	rdx, [rbp - 0x90]
0x40019f:	lea	rax, [rbp - 0x80]
0x4001a3:	mov	rsi, rdx
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x400792
<Block for 0x40018b, 13 bytes>
0x40018b:	mov	eax, dword ptr [rbp - 0x8c]
0x400191:	mov	edi, eax
0x400193:	call	0x500040
<Block for 0x4000ba, 14 bytes>
0x4000ba:	cmp	eax, -1
0x4000bd:	sete	al
0x4000c0:	test	al, al
0x4000c2:	jne	0x400165
<Block for 0x4001ae, 22 bytes>
0x4001ae:	lea	rdx, [rbp - 0x90]
0x4001b5:	lea	rax, [rbp - 0x80]
0x4001b9:	mov	rsi, rdx
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x400792
<Block for 0x4000c8, 18 bytes>
0x4000c8:	mov	eax, dword ptr [rbp - 0x88]
0x4000ce:	mov	esi, 5
0x4000d3:	mov	edi, eax
0x4000d5:	call	0x500020
<Block for 0x400165, 3 bytes>
0x400165:	nop	
0x400166:	jmp	0x40016c
<Block for 0x4001c4, 22 bytes>
0x4001c4:	lea	rdx, [rbp - 0x90]
0x4001cb:	lea	rax, [rbp - 0x80]
0x4001cf:	mov	rsi, rdx
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x400792
<Block for 0x4000da, 14 bytes>
0x4000da:	cmp	eax, -1
0x4000dd:	sete	al
0x4000e0:	test	al, al
0x4000e2:	jne	0x400168
<Block for 0x4001da, 19 bytes>
0x4001da:	lea	rdx, [rbp - 0x80]
0x4001de:	lea	rax, [rbp - 0x60]
0x4001e2:	mov	rsi, rdx
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x4007cc
<Block for 0x4000e8, 23 bytes>
0x4000e8:	mov	eax, dword ptr [rbp - 0x88]
0x4000ee:	mov	edx, 0
0x4000f3:	mov	esi, 0
0x4000f8:	mov	edi, eax
0x4000fa:	call	0x500028
<Block for 0x400168, 3 bytes>
0x400168:	nop	
0x400169:	jmp	0x40016c
<Block for 0x4001ed, 12 bytes>
0x4001ed:	lea	rax, [rbp - 0x60]
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500048
<Block for 0x4000ff, 15 bytes>
0x4000ff:	mov	dword ptr [rbp - 0x8c], eax
0x400105:	cmp	dword ptr [rbp - 0x8c], -1
0x40010c:	je	0x40016b
<Block for 0x4001f9, 12 bytes>
0x4001f9:	lea	rax, [rbp - 0x60]
0x4001fd:	mov	rdi, rax
0x400200:	call	0x4006a4
<Block for 0x40010e, 27 bytes>
0x40010e:	lea	rsi, [rbp - 0x26]
0x400112:	mov	eax, dword ptr [rbp - 0x8c]
0x400118:	mov	ecx, 0
0x40011d:	mov	edx, 0xd
0x400122:	mov	edi, eax
0x400124:	call	0x500030
<Block for 0x40016b, 1 bytes>
0x40016b:	nop	
<Block for 0x400205, 12 bytes>
0x400205:	lea	rax, [rbp - 0x80]
0x400209:	mov	rdi, rax
0x40020c:	call	0x4006a4
<Block for 0x400129, 15 bytes>
0x400129:	mov	dword ptr [rbp - 0x84], eax
0x40012f:	cmp	dword ptr [rbp - 0x84], -1
0x400136:	je	0x40016c
<Block for 0x400211, 16 bytes>
0x400211:	nop	
0x400212:	mov	rax, qword ptr [rbp - 0x18]
0x400216:	xor	rax, qword ptr fs:[0x28]
0x40021f:	je	0x40025b
<Block for 0x400138, 9 bytes>
0x400138:	cmp	dword ptr [rbp - 0x84], 0
0x40013f:	je	0x40016c
<Block for 0x40025b, 10 bytes>
0x40025b:	add	rsp, 0x88
0x400262:	pop	rbx
0x400263:	pop	rbp
0x400264:	ret	
<Block for 0x400221, 2 bytes>
0x400221:	jmp	0x400256
<Block for 0x400141, 25 bytes>
0x400141:	mov	eax, dword ptr [rbp - 0x84]
0x400147:	cdqe	
0x400149:	mov	byte ptr [rbp + rax - 0x26], 0
0x40014e:	lea	rax, [rbp - 0x26]
0x400152:	mov	rdi, rax
0x400155:	call	0x500038
<Block for 0x400256, 5 bytes>
0x400256:	call	0x500058
<Block for 0x40015a, 8 bytes>
0x40015a:	mov	dword ptr [rbp - 0x90], eax
0x400160:	jmp	0x40016c
