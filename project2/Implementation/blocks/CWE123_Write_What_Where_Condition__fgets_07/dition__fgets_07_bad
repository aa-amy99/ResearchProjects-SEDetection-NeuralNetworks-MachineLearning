<Block for 0x400000, 86 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	lea	rax, [rbp - 0x20]
0x400027:	mov	qword ptr [rbp - 0x18], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x20]
0x40002f:	mov	qword ptr [rbp - 0x30], rax
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	qword ptr [rbp - 0x28], rax
0x40003b:	lea	rax, [rbp - 0x30]
0x40003f:	mov	qword ptr [rbp - 0x20], rax
0x400043:	lea	rax, [rbp - 0x30]
0x400047:	mov	qword ptr [rbp - 0x18], rax
0x40004b:	mov	eax, dword ptr [rip + 0x1f7]
0x400051:	cmp	eax, 5
0x400054:	jne	0x400089
<Block for 0x400056, 24 bytes>
0x400056:	mov	rdx, qword ptr [rip + 0xfffa3]
0x40005d:	lea	rax, [rbp - 0x30]
0x400061:	mov	esi, 0x10
0x400066:	mov	rdi, rax
0x400069:	call	0x500008
<Block for 0x400089, 73 bytes>
0x400089:	mov	rax, qword ptr [rbp - 0x28]
0x40008d:	mov	qword ptr [rip + 0x1bc], rax
0x400094:	mov	rax, qword ptr [rbp - 0x30]
0x400098:	mov	qword ptr [rip + 0x1b9], rax
0x40009f:	mov	rax, qword ptr [rip + 0x1aa]
0x4000a6:	mov	rdx, qword ptr [rip + 0x1ab]
0x4000ad:	mov	qword ptr [rax], rdx
0x4000b0:	mov	rax, qword ptr [rip + 0x1a1]
0x4000b7:	mov	rdx, qword ptr [rip + 0x192]
0x4000be:	mov	qword ptr [rax + 8], rdx
0x4000c2:	nop	
0x4000c3:	mov	rax, qword ptr [rbp - 8]
0x4000c7:	xor	rax, qword ptr fs:[0x28]
0x4000d0:	je	0x4000d7
<Block for 0x40006e, 5 bytes>
0x40006e:	test	rax, rax
0x400071:	jne	0x400089
<Block for 0x4000d7, 2 bytes>
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000d2, 5 bytes>
0x4000d2:	call	0x500020
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x1e6]
0x40007a:	call	0x500010
<Block for 0x40007f, 10 bytes>
0x40007f:	mov	edi, 1
0x400084:	call	0x500018
