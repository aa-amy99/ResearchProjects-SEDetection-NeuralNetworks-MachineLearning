<Block for 0x4000f3, 40 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x10
0x4000ff:	mov	rax, qword ptr fs:[0x28]
0x400108:	mov	qword ptr [rbp - 8], rax
0x40010c:	xor	eax, eax
0x40010e:	mov	byte ptr [rbp - 0xd], 0x20
0x400112:	mov	eax, 1
0x400117:	test	eax, eax
0x400119:	je	0x40011f
<Block for 0x40011f, 31 bytes>
0x40011f:	mov	byte ptr [rbp - 0xc], 0x78
0x400123:	movzx	eax, byte ptr [rbp - 0xd]
0x400127:	mov	byte ptr [rbp - 0xb], al
0x40012a:	mov	byte ptr [rbp - 0xa], 0x7a
0x40012e:	mov	byte ptr [rbp - 9], 0
0x400132:	lea	rax, [rbp - 0xc]
0x400136:	mov	rdi, rax
0x400139:	call	0x500018
<Block for 0x40011b, 35 bytes>
0x40011b:	mov	byte ptr [rbp - 0xd], 0x61
0x40011f:	mov	byte ptr [rbp - 0xc], 0x78
0x400123:	movzx	eax, byte ptr [rbp - 0xd]
0x400127:	mov	byte ptr [rbp - 0xb], al
0x40012a:	mov	byte ptr [rbp - 0xa], 0x7a
0x40012e:	mov	byte ptr [rbp - 9], 0
0x400132:	lea	rax, [rbp - 0xc]
0x400136:	mov	rdi, rax
0x400139:	call	0x500018
<Block for 0x40013e, 16 bytes>
0x40013e:	nop	
0x40013f:	mov	rax, qword ptr [rbp - 8]
0x400143:	xor	rax, qword ptr fs:[0x28]
0x40014c:	je	0x400153
<Block for 0x400153, 2 bytes>
0x400153:	leave	
0x400154:	ret	
<Block for 0x40014e, 5 bytes>
0x40014e:	call	0x500020
