<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	eax, 1
0x400024:	test	eax, eax
0x400026:	je	0x40004d
<Block for 0x40004d, 31 bytes>
0x40004d:	mov	byte ptr [rbp - 0xc], 0x78
0x400051:	movzx	eax, byte ptr [rbp - 0xd]
0x400055:	mov	byte ptr [rbp - 0xb], al
0x400058:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005c:	mov	byte ptr [rbp - 9], 0
0x400060:	lea	rax, [rbp - 0xc]
0x400064:	mov	rdi, rax
0x400067:	call	0x500018
<Block for 0x400028, 15 bytes>
0x400028:	mov	rax, qword ptr [rip + 0xfffd1]
0x40002f:	mov	rdi, rax
0x400032:	call	0x500008
<Block for 0x40006c, 16 bytes>
0x40006c:	nop	
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	xor	rax, qword ptr fs:[0x28]
0x40007a:	je	0x400081
<Block for 0x400037, 19 bytes>
0x400037:	mov	byte ptr [rbp - 0xc], al
0x40003a:	mov	byte ptr [rbp - 0xb], 0
0x40003e:	lea	rax, [rbp - 0xc]
0x400042:	mov	rdi, rax
0x400045:	call	0x500010
<Block for 0x400081, 2 bytes>
0x400081:	leave	
0x400082:	ret	
<Block for 0x40007c, 5 bytes>
0x40007c:	call	0x500020
<Block for 0x40004a, 34 bytes>
0x40004a:	mov	byte ptr [rbp - 0xd], al
0x40004d:	mov	byte ptr [rbp - 0xc], 0x78
0x400051:	movzx	eax, byte ptr [rbp - 0xd]
0x400055:	mov	byte ptr [rbp - 0xb], al
0x400058:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005c:	mov	byte ptr [rbp - 9], 0
0x400060:	lea	rax, [rbp - 0xc]
0x400064:	mov	rdi, rax
0x400067:	call	0x500018
