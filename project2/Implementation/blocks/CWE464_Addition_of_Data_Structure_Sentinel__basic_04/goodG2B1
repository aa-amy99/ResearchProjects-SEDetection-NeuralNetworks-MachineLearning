<Block for 0x400083, 40 bytes>
0x400083:	endbr64	
0x400087:	push	rbp
0x400088:	mov	rbp, rsp
0x40008b:	sub	rsp, 0x10
0x40008f:	mov	rax, qword ptr fs:[0x28]
0x400098:	mov	qword ptr [rbp - 8], rax
0x40009c:	xor	eax, eax
0x40009e:	mov	byte ptr [rbp - 0xd], 0x20
0x4000a2:	mov	eax, 0
0x4000a7:	test	eax, eax
0x4000a9:	je	0x4000b9
<Block for 0x4000b9, 35 bytes>
0x4000b9:	mov	byte ptr [rbp - 0xd], 0x61
0x4000bd:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c1:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c5:	mov	byte ptr [rbp - 0xb], al
0x4000c8:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000cc:	mov	byte ptr [rbp - 9], 0
0x4000d0:	lea	rax, [rbp - 0xc]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500018
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0xca]
0x4000b2:	call	0x500018
<Block for 0x4000dc, 16 bytes>
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 8]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x4000f1
<Block for 0x4000b7, 2 bytes>
0x4000b7:	jmp	0x4000bd
<Block for 0x4000f1, 2 bytes>
0x4000f1:	leave	
0x4000f2:	ret	
<Block for 0x4000ec, 5 bytes>
0x4000ec:	call	0x500020
<Block for 0x4000bd, 31 bytes>
0x4000bd:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c1:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c5:	mov	byte ptr [rbp - 0xb], al
0x4000c8:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000cc:	mov	byte ptr [rbp - 9], 0
0x4000d0:	lea	rax, [rbp - 0xc]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500018
