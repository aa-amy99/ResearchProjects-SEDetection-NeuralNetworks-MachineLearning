<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0xfffdf]
0x400021:	test	eax, eax
0x400023:	je	0x4000fb
<Block for 0x4000fb, 16 bytes>
0x4000fb:	nop	
0x4000fc:	mov	rax, qword ptr [rbp - 8]
0x400100:	xor	rax, qword ptr fs:[0x28]
0x400109:	je	0x400110
<Block for 0x400029, 198 bytes>
0x400029:	mov	qword ptr [rbp - 0x70], 0
0x400031:	mov	qword ptr [rbp - 0x68], 0
0x400039:	mov	qword ptr [rbp - 0x60], 0
0x400041:	mov	qword ptr [rbp - 0x58], 0
0x400049:	mov	qword ptr [rbp - 0x50], 0
0x400051:	mov	qword ptr [rbp - 0x48], 0
0x400059:	mov	qword ptr [rbp - 0x40], 0
0x400061:	mov	qword ptr [rbp - 0x38], 0
0x400069:	mov	qword ptr [rbp - 0x30], 0
0x400071:	mov	qword ptr [rbp - 0x28], 0
0x400079:	mov	qword ptr [rbp - 0x20], 0
0x400081:	mov	qword ptr [rbp - 0x18], 0
0x400089:	mov	dword ptr [rbp - 0x10], 0
0x400090:	lea	rax, [rbp - 0x70]
0x400094:	mov	qword ptr [rbp - 0x78], rax
0x400098:	mov	rax, qword ptr [rbp - 0x78]
0x40009c:	movabs	rdx, 0x6867666564636261
0x4000a6:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4000b0:	mov	qword ptr [rax], rdx
0x4000b3:	mov	qword ptr [rax + 8], rcx
0x4000b7:	movabs	rsi, 0x7877767574737271
0x4000c1:	mov	qword ptr [rax + 0x10], rsi
0x4000c5:	mov	word ptr [rax + 0x18], 0x7a79
0x4000cb:	mov	byte ptr [rax + 0x1a], 0
0x4000cf:	mov	rax, qword ptr [rbp - 0x78]
0x4000d3:	lea	rcx, [rax + 4]
0x4000d7:	mov	rax, qword ptr [rbp - 0x78]
0x4000db:	add	rax, 6
0x4000df:	mov	edx, 0xa
0x4000e4:	mov	rsi, rcx
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500008
<Block for 0x400110, 2 bytes>
0x400110:	leave	
0x400111:	ret	
<Block for 0x40010b, 5 bytes>
0x40010b:	call	0x500018
<Block for 0x4000ef, 12 bytes>
0x4000ef:	mov	rax, qword ptr [rbp - 0x78]
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500010
