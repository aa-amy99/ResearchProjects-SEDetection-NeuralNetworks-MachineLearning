<Block for 0x4000bf, 45 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	add	rsp, -0x80
0x4000cb:	mov	rax, qword ptr fs:[0x28]
0x4000d4:	mov	qword ptr [rbp - 8], rax
0x4000d8:	xor	eax, eax
0x4000da:	mov	qword ptr [rbp - 0x80], 0
0x4000e2:	mov	edi, 0x64
0x4000e7:	call	0x500000
<Block for 0x4000ec, 11 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x78], rax
0x4000f0:	cmp	qword ptr [rbp - 0x78], 0
0x4000f5:	jne	0x400101
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	edi, 0xffffffff
0x4000fc:	call	0x500008
<Block for 0x400101, 22 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0x78]
0x400105:	mov	edx, 0x63
0x40010a:	mov	esi, 0x41
0x40010f:	mov	rdi, rax
0x400112:	call	0x500010
<Block for 0x400117, 41 bytes>
0x400117:	mov	rax, qword ptr [rbp - 0x78]
0x40011b:	add	rax, 0x63
0x40011f:	mov	byte ptr [rax], 0
0x400122:	mov	rax, qword ptr [rbp - 0x78]
0x400126:	mov	qword ptr [rbp - 0x80], rax
0x40012a:	lea	rax, [rbp - 0x70]
0x40012e:	mov	edx, 0x63
0x400133:	mov	esi, 0x43
0x400138:	mov	rdi, rax
0x40013b:	call	0x500010
<Block for 0x400140, 23 bytes>
0x400140:	mov	byte ptr [rbp - 0xd], 0
0x400144:	lea	rdx, [rbp - 0x70]
0x400148:	mov	rax, qword ptr [rbp - 0x80]
0x40014c:	mov	rsi, rdx
0x40014f:	mov	rdi, rax
0x400152:	call	0x500018
<Block for 0x400157, 12 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x80]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500020
<Block for 0x400163, 16 bytes>
0x400163:	nop	
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	xor	rax, qword ptr fs:[0x28]
0x400171:	je	0x400178
<Block for 0x400178, 2 bytes>
0x400178:	leave	
0x400179:	ret	
<Block for 0x400173, 5 bytes>
0x400173:	call	0x500028
