<Block for 0x4000e8, 87 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0xa0
0x4000f7:	mov	qword ptr [rbp - 0x98], rdi
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	xor	eax, eax
0x40010d:	mov	rax, qword ptr [rbp - 0x98]
0x400114:	mov	qword ptr [rbp - 0x88], rax
0x40011b:	mov	rax, qword ptr [rbp - 0x88]
0x400122:	mov	rax, qword ptr [rax]
0x400125:	mov	qword ptr [rbp - 0x80], rax
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x43
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x40013f, 16 bytes>
0x40013f:	mov	byte ptr [rbp - 0xd], 0
0x400143:	lea	rax, [rbp - 0x70]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500008
<Block for 0x40014f, 28 bytes>
0x40014f:	mov	qword ptr [rbp - 0x78], rax
0x400153:	mov	qword ptr [rbp - 0x90], 0
0x40015e:	mov	rax, qword ptr [rbp - 0x90]
0x400165:	cmp	rax, qword ptr [rbp - 0x78]
0x400169:	jae	0x400196
<Block for 0x40016b, 43 bytes>
0x40016b:	mov	rdx, qword ptr [rbp - 0x80]
0x40016f:	mov	rax, qword ptr [rbp - 0x90]
0x400176:	add	rax, rdx
0x400179:	movzx	eax, byte ptr [rax]
0x40017c:	lea	rcx, [rbp - 0x70]
0x400180:	mov	rdx, qword ptr [rbp - 0x90]
0x400187:	add	rdx, rcx
0x40018a:	mov	byte ptr [rdx], al
0x40018c:	add	qword ptr [rbp - 0x90], 1
0x400194:	jmp	0x40015e
<Block for 0x400196, 16 bytes>
0x400196:	mov	byte ptr [rbp - 0xd], 0
0x40019a:	lea	rax, [rbp - 0x70]
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500010
<Block for 0x40015e, 13 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0x90]
0x400165:	cmp	rax, qword ptr [rbp - 0x78]
0x400169:	jae	0x400196
<Block for 0x4001a6, 7 bytes>
0x4001a6:	cmp	qword ptr [rbp - 0x80], 0
0x4001ab:	je	0x4001b9
<Block for 0x4001b9, 16 bytes>
0x4001b9:	nop	
0x4001ba:	mov	rax, qword ptr [rbp - 8]
0x4001be:	xor	rax, qword ptr fs:[0x28]
0x4001c7:	je	0x4001ce
<Block for 0x4001ad, 12 bytes>
0x4001ad:	mov	rax, qword ptr [rbp - 0x80]
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500018
<Block for 0x4001ce, 2 bytes>
0x4001ce:	leave	
0x4001cf:	ret	
<Block for 0x4001c9, 5 bytes>
0x4001c9:	call	0x500020
