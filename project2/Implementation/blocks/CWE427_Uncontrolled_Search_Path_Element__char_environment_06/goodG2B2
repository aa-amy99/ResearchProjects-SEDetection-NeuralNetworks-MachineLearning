<Block for 0x4001e0, 82 bytes>
0x4001e0:	endbr64	
0x4001e4:	push	rbp
0x4001e5:	mov	rbp, rsp
0x4001e8:	sub	rsp, 0x120
0x4001ef:	mov	rax, qword ptr fs:[0x28]
0x4001f8:	mov	qword ptr [rbp - 8], rax
0x4001fc:	xor	eax, eax
0x4001fe:	movabs	rax, 0x3d48544150
0x400208:	mov	edx, 0
0x40020d:	mov	qword ptr [rbp - 0x110], rax
0x400214:	mov	qword ptr [rbp - 0x108], rdx
0x40021b:	lea	rdx, [rbp - 0x100]
0x400222:	mov	eax, 0
0x400227:	mov	ecx, 0x1d
0x40022c:	mov	rdi, rdx
0x40022f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400232, 34 bytes>
0x400232:	mov	rdx, rdi
0x400235:	mov	word ptr [rdx], ax
0x400238:	add	rdx, 2
0x40023c:	lea	rax, [rbp - 0x110]
0x400243:	mov	qword ptr [rbp - 0x118], rax
0x40024a:	mov	eax, 5
0x40024f:	cmp	eax, 5
0x400252:	jne	0x40028d
<Block for 0x40022f, 3 bytes>
0x40022f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400254, 27 bytes>
0x400254:	mov	rax, qword ptr [rbp - 0x118]
0x40025b:	mov	rcx, -1
0x400262:	mov	rdx, rax
0x400265:	mov	eax, 0
0x40026a:	mov	rdi, rdx
0x40026d:	repne scasb	al, byte ptr [rdi]
<Block for 0x40028d, 15 bytes>
0x40028d:	mov	rax, qword ptr [rbp - 0x118]
0x400294:	mov	rdi, rax
0x400297:	call	0x500018
<Block for 0x40026f, 45 bytes>
0x40026f:	mov	rax, rcx
0x400272:	not	rax
0x400275:	lea	rdx, [rax - 1]
0x400279:	mov	rax, qword ptr [rbp - 0x118]
0x400280:	add	rax, rdx
0x400283:	mov	dword ptr [rax], 0x6e69622f
0x400289:	mov	byte ptr [rax + 4], 0
0x40028d:	mov	rax, qword ptr [rbp - 0x118]
0x400294:	mov	rdi, rax
0x400297:	call	0x500018
<Block for 0x40026d, 2 bytes>
0x40026d:	repne scasb	al, byte ptr [rdi]
<Block for 0x40029c, 16 bytes>
0x40029c:	nop	
0x40029d:	mov	rax, qword ptr [rbp - 8]
0x4002a1:	xor	rax, qword ptr fs:[0x28]
0x4002aa:	je	0x4002b1
<Block for 0x4002b1, 2 bytes>
0x4002b1:	leave	
0x4002b2:	ret	
<Block for 0x4002ac, 5 bytes>
0x4002ac:	call	0x500020
