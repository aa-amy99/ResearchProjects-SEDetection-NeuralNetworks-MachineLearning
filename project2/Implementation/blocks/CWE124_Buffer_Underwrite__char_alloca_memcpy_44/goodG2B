<Block for 0x4002cc, 92 bytes>
0x4002cc:	endbr64	
0x4002d0:	push	rbp
0x4002d1:	mov	rbp, rsp
0x4002d4:	sub	rsp, 0x20
0x4002d8:	mov	rax, qword ptr fs:[0x28]
0x4002e1:	mov	qword ptr [rbp - 8], rax
0x4002e5:	xor	eax, eax
0x4002e7:	lea	rax, [rip - 0x10a]
0x4002ee:	mov	qword ptr [rbp - 0x20], rax
0x4002f2:	mov	eax, 0x10
0x4002f7:	sub	rax, 1
0x4002fb:	add	rax, 0x6c
0x4002ff:	mov	esi, 0x10
0x400304:	mov	edx, 0
0x400309:	div	rsi
0x40030c:	imul	rax, rax, 0x10
0x400310:	mov	rdx, rax
0x400313:	and	rdx, 0xfffffffffffff000
0x40031a:	mov	rcx, rsp
0x40031d:	sub	rcx, rdx
0x400320:	mov	rdx, rcx
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x40033a, 26 bytes>
0x40033a:	mov	rdx, rax
0x40033d:	and	edx, 0xfff
0x400343:	sub	rsp, rdx
0x400346:	mov	rdx, rax
0x400349:	and	edx, 0xfff
0x40034f:	test	rdx, rdx
0x400352:	je	0x400364
<Block for 0x400328, 18 bytes>
0x400328:	sub	rsp, 0x1000
0x40032f:	or	qword ptr [rsp + 0xff8], 0
0x400338:	jmp	0x400323
<Block for 0x400364, 41 bytes>
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x18], rax
0x400377:	mov	rax, qword ptr [rbp - 0x18]
0x40037b:	mov	edx, 0x63
0x400380:	mov	esi, 0x41
0x400385:	mov	rdi, rax
0x400388:	call	0x500000
<Block for 0x400354, 57 bytes>
0x400354:	and	eax, 0xfff
0x400359:	sub	rax, 8
0x40035d:	add	rax, rsp
0x400360:	or	qword ptr [rax], 0
0x400364:	mov	rax, rsp
0x400367:	add	rax, 0xf
0x40036b:	shr	rax, 4
0x40036f:	shl	rax, 4
0x400373:	mov	qword ptr [rbp - 0x18], rax
0x400377:	mov	rax, qword ptr [rbp - 0x18]
0x40037b:	mov	edx, 0x63
0x400380:	mov	esi, 0x41
0x400385:	mov	rdi, rax
0x400388:	call	0x500000
<Block for 0x400323, 5 bytes>
0x400323:	cmp	rsp, rdx
0x400326:	je	0x40033a
<Block for 0x40038d, 32 bytes>
0x40038d:	mov	rax, qword ptr [rbp - 0x18]
0x400391:	add	rax, 0x63
0x400395:	mov	byte ptr [rax], 0
0x400398:	mov	rax, qword ptr [rbp - 0x18]
0x40039c:	mov	qword ptr [rbp - 0x10], rax
0x4003a0:	mov	rax, qword ptr [rbp - 0x10]
0x4003a4:	mov	rdx, qword ptr [rbp - 0x20]
0x4003a8:	mov	rdi, rax
0x4003ab:	call	rdx
<Block for 0x4003ad, 16 bytes>
0x4003ad:	nop	
0x4003ae:	mov	rax, qword ptr [rbp - 8]
0x4003b2:	xor	rax, qword ptr fs:[0x28]
0x4003bb:	je	0x4003c2
<Block for 0x4003c2, 2 bytes>
0x4003c2:	leave	
0x4003c3:	ret	
<Block for 0x4003bd, 5 bytes>
0x4003bd:	call	0x500010
