<Block for 0x4001a6, 61 bytes>
0x4001a6:	endbr64	
0x4001aa:	push	rbp
0x4001ab:	mov	rbp, rsp
0x4001ae:	sub	rsp, 0x50
0x4001b2:	mov	rax, qword ptr fs:[0x28]
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	xor	eax, eax
0x4001c1:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4001c8:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001cf:	mov	edx, 6
0x4001d4:	mov	esi, 1
0x4001d9:	mov	edi, 2
0x4001de:	call	0x500000
<Block for 0x4001e3, 13 bytes>
0x4001e3:	mov	dword ptr [rbp - 0x48], eax
0x4001e6:	cmp	dword ptr [rbp - 0x48], -1
0x4001ea:	je	0x40028b
<Block for 0x40028b, 3 bytes>
0x40028b:	nop	
0x40028c:	jmp	0x40028f
<Block for 0x4001f0, 22 bytes>
0x4001f0:	lea	rax, [rbp - 0x30]
0x4001f4:	mov	edx, 0x10
0x4001f9:	mov	esi, 0
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500008
<Block for 0x40028f, 6 bytes>
0x40028f:	cmp	dword ptr [rbp - 0x48], -1
0x400293:	je	0x40029f
<Block for 0x400206, 18 bytes>
0x400206:	mov	word ptr [rbp - 0x30], 2
0x40020c:	lea	rdi, [rip + 0xe3]
0x400213:	call	0x500010
<Block for 0x40029f, 43 bytes>
0x40029f:	lea	rax, [rip + 0xffdc2]
0x4002a6:	mov	qword ptr [rbp - 0x40], rax
0x4002aa:	lea	rax, [rbp - 0x40]
0x4002ae:	mov	qword ptr [rbp - 0x38], rax
0x4002b2:	mov	rax, qword ptr [rbp - 0x38]
0x4002b6:	mov	rax, qword ptr [rax]
0x4002b9:	mov	rcx, qword ptr [rax]
0x4002bc:	mov	edx, dword ptr [rbp - 0x4c]
0x4002bf:	mov	rax, qword ptr [rbp - 0x38]
0x4002c3:	mov	esi, edx
0x4002c5:	mov	rdi, rax
0x4002c8:	call	rcx
<Block for 0x400295, 10 bytes>
0x400295:	mov	eax, dword ptr [rbp - 0x48]
0x400298:	mov	edi, eax
0x40029a:	call	0x500038
<Block for 0x400218, 13 bytes>
0x400218:	mov	dword ptr [rbp - 0x2c], eax
0x40021b:	mov	edi, 0x6987
0x400220:	call	0x500018
<Block for 0x4002ca, 16 bytes>
0x4002ca:	nop	
0x4002cb:	mov	rax, qword ptr [rbp - 8]
0x4002cf:	xor	rax, qword ptr fs:[0x28]
0x4002d8:	je	0x4002df
<Block for 0x400225, 26 bytes>
0x400225:	mov	word ptr [rbp - 0x2e], ax
0x400229:	lea	rcx, [rbp - 0x30]
0x40022d:	mov	eax, dword ptr [rbp - 0x48]
0x400230:	mov	edx, 0x10
0x400235:	mov	rsi, rcx
0x400238:	mov	edi, eax
0x40023a:	call	0x500020
<Block for 0x4002df, 2 bytes>
0x4002df:	leave	
0x4002e0:	ret	
<Block for 0x4002da, 5 bytes>
0x4002da:	call	0x500048
<Block for 0x40023f, 10 bytes>
0x40023f:	cmp	eax, -1
0x400242:	sete	al
0x400245:	test	al, al
0x400247:	jne	0x40028e
<Block for 0x400249, 24 bytes>
0x400249:	lea	rsi, [rbp - 0x16]
0x40024d:	mov	eax, dword ptr [rbp - 0x48]
0x400250:	mov	ecx, 0
0x400255:	mov	edx, 0xd
0x40025a:	mov	edi, eax
0x40025c:	call	0x500028
<Block for 0x40028e, 1 bytes>
0x40028e:	nop	
<Block for 0x400261, 9 bytes>
0x400261:	mov	dword ptr [rbp - 0x44], eax
0x400264:	cmp	dword ptr [rbp - 0x44], -1
0x400268:	je	0x40028f
<Block for 0x40026a, 6 bytes>
0x40026a:	cmp	dword ptr [rbp - 0x44], 0
0x40026e:	je	0x40028f
<Block for 0x400270, 22 bytes>
0x400270:	mov	eax, dword ptr [rbp - 0x44]
0x400273:	cdqe	
0x400275:	mov	byte ptr [rbp + rax - 0x16], 0
0x40027a:	lea	rax, [rbp - 0x16]
0x40027e:	mov	rdi, rax
0x400281:	call	0x500030
<Block for 0x400286, 5 bytes>
0x400286:	mov	dword ptr [rbp - 0x4c], eax
0x400289:	jmp	0x40028f
