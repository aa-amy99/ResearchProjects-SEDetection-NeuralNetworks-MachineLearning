<Block for 0x40018b, 166 bytes>
0x40018b:	endbr64	
0x40018f:	push	rbp
0x400190:	mov	rbp, rsp
0x400193:	add	rsp, -0x80
0x400197:	mov	rax, qword ptr fs:[0x28]
0x4001a0:	mov	qword ptr [rbp - 8], rax
0x4001a4:	xor	eax, eax
0x4001a6:	nop	
0x4001a7:	endbr64	
0x4001ab:	mov	qword ptr [rbp - 0x70], 0
0x4001b3:	mov	qword ptr [rbp - 0x68], 0
0x4001bb:	mov	qword ptr [rbp - 0x60], 0
0x4001c3:	mov	qword ptr [rbp - 0x58], 0
0x4001cb:	mov	qword ptr [rbp - 0x50], 0
0x4001d3:	mov	qword ptr [rbp - 0x48], 0
0x4001db:	mov	qword ptr [rbp - 0x40], 0
0x4001e3:	mov	qword ptr [rbp - 0x38], 0
0x4001eb:	mov	qword ptr [rbp - 0x30], 0
0x4001f3:	mov	qword ptr [rbp - 0x28], 0
0x4001fb:	mov	qword ptr [rbp - 0x20], 0
0x400203:	mov	qword ptr [rbp - 0x18], 0
0x40020b:	mov	dword ptr [rbp - 0x10], 0
0x400212:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400219:	mov	rdx, qword ptr [rip + 0xffde0]
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	esi, 0x64
0x400229:	mov	rdi, rax
0x40022c:	call	0x500008
<Block for 0x400231, 5 bytes>
0x400231:	test	rax, rax
0x400234:	jne	0x400246
<Block for 0x400236, 12 bytes>
0x400236:	lea	rdi, [rip + 0xb4]
0x40023d:	call	0x500010
<Block for 0x400246, 11 bytes>
0x400246:	lea	rax, [rbp - 0x70]
0x40024a:	movzx	eax, byte ptr [rax]
0x40024d:	test	al, al
0x40024f:	je	0x400266
<Block for 0x400242, 15 bytes>
0x400242:	mov	byte ptr [rbp - 0x70], 0
0x400246:	lea	rax, [rbp - 0x70]
0x40024a:	movzx	eax, byte ptr [rax]
0x40024d:	test	al, al
0x40024f:	je	0x400266
<Block for 0x400266, 22 bytes>
0x400266:	lea	rax, [rbp - 0x70]
0x40026a:	mov	esi, 2
0x40026f:	mov	rdi, rax
0x400272:	mov	eax, 0
0x400277:	call	0x500030
<Block for 0x400251, 12 bytes>
0x400251:	lea	rax, [rbp - 0x70]
0x400255:	mov	rdi, rax
0x400258:	call	0x500018
<Block for 0x40027c, 9 bytes>
0x40027c:	mov	dword ptr [rbp - 0x74], eax
0x40027f:	cmp	dword ptr [rbp - 0x74], -1
0x400283:	jne	0x40028f
<Block for 0x40025d, 31 bytes>
0x40025d:	sub	rax, 1
0x400261:	mov	byte ptr [rbp + rax - 0x70], 0
0x400266:	lea	rax, [rbp - 0x70]
0x40026a:	mov	esi, 2
0x40026f:	mov	rdi, rax
0x400272:	mov	eax, 0
0x400277:	call	0x500030
<Block for 0x400285, 10 bytes>
0x400285:	mov	edi, 1
0x40028a:	call	0x500028
<Block for 0x40028f, 22 bytes>
0x40028f:	mov	eax, dword ptr [rbp - 0x74]
0x400292:	mov	edx, 0xc
0x400297:	lea	rsi, [rip + 0x6e]
0x40029e:	mov	edi, eax
0x4002a0:	call	0x500038
<Block for 0x4002a5, 6 bytes>
0x4002a5:	cmp	rax, -1
0x4002a9:	jne	0x4002b5
<Block for 0x4002ab, 10 bytes>
0x4002ab:	mov	edi, 1
0x4002b0:	call	0x500028
<Block for 0x4002b5, 6 bytes>
0x4002b5:	cmp	dword ptr [rbp - 0x74], -1
0x4002b9:	je	0x4002c5
<Block for 0x4002c5, 16 bytes>
0x4002c5:	nop	
0x4002c6:	mov	rax, qword ptr [rbp - 8]
0x4002ca:	xor	rax, qword ptr fs:[0x28]
0x4002d3:	je	0x4002da
<Block for 0x4002bb, 10 bytes>
0x4002bb:	mov	eax, dword ptr [rbp - 0x74]
0x4002be:	mov	edi, eax
0x4002c0:	call	0x500040
<Block for 0x4002da, 2 bytes>
0x4002da:	leave	
0x4002db:	ret	
<Block for 0x4002d5, 5 bytes>
0x4002d5:	call	0x500048
