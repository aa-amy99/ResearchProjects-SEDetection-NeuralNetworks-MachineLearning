<Block for 0x400000, 172 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	nop	
0x40001f:	endbr64	
0x400023:	mov	qword ptr [rbp - 0x70], 0
0x40002b:	mov	qword ptr [rbp - 0x68], 0
0x400033:	mov	qword ptr [rbp - 0x60], 0
0x40003b:	mov	qword ptr [rbp - 0x58], 0
0x400043:	mov	qword ptr [rbp - 0x50], 0
0x40004b:	mov	qword ptr [rbp - 0x48], 0
0x400053:	mov	qword ptr [rbp - 0x40], 0
0x40005b:	mov	qword ptr [rbp - 0x38], 0
0x400063:	mov	qword ptr [rbp - 0x30], 0
0x40006b:	mov	qword ptr [rbp - 0x28], 0
0x400073:	mov	qword ptr [rbp - 0x20], 0
0x40007b:	mov	qword ptr [rbp - 0x18], 0
0x400083:	mov	dword ptr [rbp - 0x10], 0
0x40008a:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x400094:	mov	rdx, qword ptr [rip + 0xfff65]
0x40009b:	lea	rax, [rbp - 0x70]
0x40009f:	mov	esi, 0x64
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500008
<Block for 0x4000ac, 5 bytes>
0x4000ac:	test	rax, rax
0x4000af:	jne	0x4000c1
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rdi, [rip + 0x239]
0x4000b8:	call	0x500010
<Block for 0x4000c1, 11 bytes>
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	movzx	eax, byte ptr [rax]
0x4000c8:	test	al, al
0x4000ca:	je	0x4000e1
<Block for 0x4000bd, 15 bytes>
0x4000bd:	mov	byte ptr [rbp - 0x70], 0
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	movzx	eax, byte ptr [rax]
0x4000c8:	test	al, al
0x4000ca:	je	0x4000e1
<Block for 0x4000e1, 22 bytes>
0x4000e1:	lea	rdx, [rbp - 0x100]
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	rsi, rdx
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500020
<Block for 0x4000cc, 12 bytes>
0x4000cc:	lea	rax, [rbp - 0x70]
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500018
<Block for 0x4000f7, 5 bytes>
0x4000f7:	cmp	eax, -1
0x4000fa:	jne	0x400106
<Block for 0x4000d8, 31 bytes>
0x4000d8:	sub	rax, 1
0x4000dc:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000e1:	lea	rdx, [rbp - 0x100]
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	rsi, rdx
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500020
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	edi, 1
0x400101:	call	0x500028
<Block for 0x400106, 22 bytes>
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	esi, 2
0x40010f:	mov	rdi, rax
0x400112:	mov	eax, 0
0x400117:	call	0x500030
<Block for 0x40011c, 15 bytes>
0x40011c:	mov	dword ptr [rbp - 0x104], eax
0x400122:	cmp	dword ptr [rbp - 0x104], -1
0x400129:	jne	0x400135
<Block for 0x40012b, 10 bytes>
0x40012b:	mov	edi, 1
0x400130:	call	0x500028
<Block for 0x400135, 25 bytes>
0x400135:	mov	eax, dword ptr [rbp - 0x104]
0x40013b:	mov	edx, 0xb
0x400140:	lea	rsi, [rip + 0x1b9]
0x400147:	mov	edi, eax
0x400149:	call	0x500038
<Block for 0x40014e, 6 bytes>
0x40014e:	cmp	rax, -1
0x400152:	jne	0x40015e
<Block for 0x400154, 10 bytes>
0x400154:	mov	edi, 1
0x400159:	call	0x500028
<Block for 0x40015e, 9 bytes>
0x40015e:	cmp	dword ptr [rbp - 0x104], -1
0x400165:	je	0x400174
<Block for 0x400174, 16 bytes>
0x400174:	nop	
0x400175:	mov	rax, qword ptr [rbp - 8]
0x400179:	xor	rax, qword ptr fs:[0x28]
0x400182:	je	0x400189
<Block for 0x400167, 13 bytes>
0x400167:	mov	eax, dword ptr [rbp - 0x104]
0x40016d:	mov	edi, eax
0x40016f:	call	0x500040
<Block for 0x400189, 2 bytes>
0x400189:	leave	
0x40018a:	ret	
<Block for 0x400184, 5 bytes>
0x400184:	call	0x500048
