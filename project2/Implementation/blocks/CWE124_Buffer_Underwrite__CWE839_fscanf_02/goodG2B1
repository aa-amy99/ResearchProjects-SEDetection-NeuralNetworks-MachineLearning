<Block for 0x400260, 87 bytes>
0x400260:	endbr64	
0x400264:	push	rbp
0x400265:	mov	rbp, rsp
0x400268:	sub	rsp, 0x40
0x40026c:	mov	rax, qword ptr fs:[0x28]
0x400275:	mov	qword ptr [rbp - 8], rax
0x400279:	xor	eax, eax
0x40027b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400282:	mov	dword ptr [rbp - 0x34], 7
0x400289:	mov	qword ptr [rbp - 0x30], 0
0x400291:	mov	qword ptr [rbp - 0x28], 0
0x400299:	mov	qword ptr [rbp - 0x20], 0
0x4002a1:	mov	qword ptr [rbp - 0x18], 0
0x4002a9:	mov	qword ptr [rbp - 0x10], 0
0x4002b1:	cmp	dword ptr [rbp - 0x34], 9
0x4002b5:	jg	0x4002e9
<Block for 0x4002b7, 22 bytes>
0x4002b7:	mov	eax, dword ptr [rbp - 0x34]
0x4002ba:	cdqe	
0x4002bc:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002c4:	mov	dword ptr [rbp - 0x38], 0
0x4002cb:	jmp	0x4002e1
<Block for 0x4002e9, 12 bytes>
0x4002e9:	lea	rdi, [rip + 0x108]
0x4002f0:	call	0x500018
<Block for 0x4002e1, 6 bytes>
0x4002e1:	cmp	dword ptr [rbp - 0x38], 9
0x4002e5:	jle	0x4002cd
<Block for 0x4002f5, 16 bytes>
0x4002f5:	nop	
0x4002f6:	mov	rax, qword ptr [rbp - 8]
0x4002fa:	xor	rax, qword ptr fs:[0x28]
0x400303:	je	0x40030a
<Block for 0x4002cd, 16 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0x38]
0x4002d0:	cdqe	
0x4002d2:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002d6:	mov	edi, eax
0x4002d8:	call	0x500010
<Block for 0x4002e7, 2 bytes>
0x4002e7:	jmp	0x4002f5
<Block for 0x40030a, 2 bytes>
0x40030a:	leave	
0x40030b:	ret	
<Block for 0x400305, 5 bytes>
0x400305:	call	0x500020
<Block for 0x4002dd, 10 bytes>
0x4002dd:	add	dword ptr [rbp - 0x38], 1
0x4002e1:	cmp	dword ptr [rbp - 0x38], 9
0x4002e5:	jle	0x4002cd
