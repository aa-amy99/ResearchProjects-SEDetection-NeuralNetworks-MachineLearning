<Block for 0x4000c6, 65 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	sub	rsp, 0x40
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000e8:	mov	rax, qword ptr [rip + 0xfff11]
0x4000ef:	lea	rdx, [rbp - 0x38]
0x4000f3:	lea	rsi, [rip + 0x2f6]
0x4000fa:	mov	rdi, rax
0x4000fd:	mov	eax, 0
0x400102:	call	0x500008
<Block for 0x400107, 47 bytes>
0x400107:	mov	qword ptr [rbp - 0x30], 0
0x40010f:	mov	qword ptr [rbp - 0x28], 0
0x400117:	mov	qword ptr [rbp - 0x20], 0
0x40011f:	mov	qword ptr [rbp - 0x18], 0
0x400127:	mov	qword ptr [rbp - 0x10], 0
0x40012f:	mov	eax, dword ptr [rbp - 0x38]
0x400132:	test	eax, eax
0x400134:	js	0x400170
<Block for 0x400170, 12 bytes>
0x400170:	lea	rdi, [rip + 0x2a1]
0x400177:	call	0x500018
<Block for 0x400136, 8 bytes>
0x400136:	mov	eax, dword ptr [rbp - 0x38]
0x400139:	cmp	eax, 9
0x40013c:	jg	0x400170
<Block for 0x40017c, 16 bytes>
0x40017c:	nop	
0x40017d:	mov	rax, qword ptr [rbp - 8]
0x400181:	xor	rax, qword ptr fs:[0x28]
0x40018a:	je	0x400191
<Block for 0x40013e, 22 bytes>
0x40013e:	mov	eax, dword ptr [rbp - 0x38]
0x400141:	cdqe	
0x400143:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40014b:	mov	dword ptr [rbp - 0x34], 0
0x400152:	jmp	0x400168
<Block for 0x400191, 2 bytes>
0x400191:	leave	
0x400192:	ret	
<Block for 0x40018c, 5 bytes>
0x40018c:	call	0x500020
<Block for 0x400168, 6 bytes>
0x400168:	cmp	dword ptr [rbp - 0x34], 9
0x40016c:	jle	0x400154
<Block for 0x400154, 16 bytes>
0x400154:	mov	eax, dword ptr [rbp - 0x34]
0x400157:	cdqe	
0x400159:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40015d:	mov	edi, eax
0x40015f:	call	0x500010
<Block for 0x40016e, 2 bytes>
0x40016e:	jmp	0x40017c
<Block for 0x400164, 10 bytes>
0x400164:	add	dword ptr [rbp - 0x34], 1
0x400168:	cmp	dword ptr [rbp - 0x34], 9
0x40016c:	jle	0x400154
