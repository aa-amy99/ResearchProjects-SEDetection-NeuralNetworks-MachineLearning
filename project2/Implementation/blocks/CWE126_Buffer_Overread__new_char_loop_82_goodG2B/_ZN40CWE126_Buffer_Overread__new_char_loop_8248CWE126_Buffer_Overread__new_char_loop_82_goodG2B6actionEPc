<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	qword ptr [rbp - 0x90], rsi
0x40001d:	mov	rax, qword ptr fs:[0x28]
0x400026:	mov	qword ptr [rbp - 8], rax
0x40002a:	xor	eax, eax
0x40002c:	lea	rax, [rbp - 0x70]
0x400030:	mov	edx, 0x63
0x400035:	mov	esi, 0x43
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400042, 16 bytes>
0x400042:	mov	byte ptr [rbp - 0xd], 0
0x400046:	lea	rax, [rbp - 0x70]
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500008
<Block for 0x400052, 22 bytes>
0x400052:	mov	qword ptr [rbp - 0x78], rax
0x400056:	mov	qword ptr [rbp - 0x80], 0
0x40005e:	mov	rax, qword ptr [rbp - 0x80]
0x400062:	cmp	rax, qword ptr [rbp - 0x78]
0x400066:	jae	0x40008d
<Block for 0x400068, 37 bytes>
0x400068:	mov	rdx, qword ptr [rbp - 0x90]
0x40006f:	mov	rax, qword ptr [rbp - 0x80]
0x400073:	add	rax, rdx
0x400076:	movzx	eax, byte ptr [rax]
0x400079:	lea	rcx, [rbp - 0x70]
0x40007d:	mov	rdx, qword ptr [rbp - 0x80]
0x400081:	add	rdx, rcx
0x400084:	mov	byte ptr [rdx], al
0x400086:	add	qword ptr [rbp - 0x80], 1
0x40008b:	jmp	0x40005e
<Block for 0x40008d, 16 bytes>
0x40008d:	mov	byte ptr [rbp - 0xd], 0
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	rdi, rax
0x400098:	call	0x500010
<Block for 0x40005e, 10 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x80]
0x400062:	cmp	rax, qword ptr [rbp - 0x78]
0x400066:	jae	0x40008d
<Block for 0x40009d, 10 bytes>
0x40009d:	cmp	qword ptr [rbp - 0x90], 0
0x4000a5:	je	0x4000b6
<Block for 0x4000b6, 16 bytes>
0x4000b6:	nop	
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	xor	rax, qword ptr fs:[0x28]
0x4000c4:	je	0x4000cb
<Block for 0x4000a7, 15 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x90]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500018
<Block for 0x4000cb, 2 bytes>
0x4000cb:	leave	
0x4000cc:	ret	
<Block for 0x4000c6, 5 bytes>
0x4000c6:	call	0x500020
