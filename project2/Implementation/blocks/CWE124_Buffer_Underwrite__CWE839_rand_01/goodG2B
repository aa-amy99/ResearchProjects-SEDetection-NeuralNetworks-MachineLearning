<Block for 0x4000f4, 87 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x40
0x400100:	mov	rax, qword ptr fs:[0x28]
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	xor	eax, eax
0x40010f:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400116:	mov	dword ptr [rbp - 0x34], 7
0x40011d:	mov	qword ptr [rbp - 0x30], 0
0x400125:	mov	qword ptr [rbp - 0x28], 0
0x40012d:	mov	qword ptr [rbp - 0x20], 0
0x400135:	mov	qword ptr [rbp - 0x18], 0
0x40013d:	mov	qword ptr [rbp - 0x10], 0
0x400145:	cmp	dword ptr [rbp - 0x34], 9
0x400149:	jg	0x40017d
<Block for 0x40014b, 22 bytes>
0x40014b:	mov	eax, dword ptr [rbp - 0x34]
0x40014e:	cdqe	
0x400150:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400158:	mov	dword ptr [rbp - 0x38], 0
0x40015f:	jmp	0x400175
<Block for 0x40017d, 12 bytes>
0x40017d:	lea	rdi, [rip + 0x13c]
0x400184:	call	0x500010
<Block for 0x400175, 6 bytes>
0x400175:	cmp	dword ptr [rbp - 0x38], 9
0x400179:	jle	0x400161
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x400161, 16 bytes>
0x400161:	mov	eax, dword ptr [rbp - 0x38]
0x400164:	cdqe	
0x400166:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40016a:	mov	edi, eax
0x40016c:	call	0x500008
<Block for 0x40017b, 2 bytes>
0x40017b:	jmp	0x400189
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500018
<Block for 0x400171, 10 bytes>
0x400171:	add	dword ptr [rbp - 0x38], 1
0x400175:	cmp	dword ptr [rbp - 0x38], 9
0x400179:	jle	0x400161
