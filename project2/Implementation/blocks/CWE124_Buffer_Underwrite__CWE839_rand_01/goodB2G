<Block for 0x4001a0, 40 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	push	rbx
0x4001a9:	sub	rsp, 0x48
0x4001ad:	mov	rax, qword ptr fs:[0x28]
0x4001b6:	mov	qword ptr [rbp - 0x18], rax
0x4001ba:	xor	eax, eax
0x4001bc:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4001c3:	call	0x500000
<Block for 0x4001c8, 7 bytes>
0x4001c8:	and	eax, 1
0x4001cb:	test	eax, eax
0x4001cd:	je	0x4001ec
<Block for 0x4001ec, 5 bytes>
0x4001ec:	call	0x500000
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500000
<Block for 0x4001f1, 10 bytes>
0x4001f1:	shl	eax, 0x1e
0x4001f4:	mov	ebx, eax
0x4001f6:	call	0x500000
<Block for 0x4001d4, 10 bytes>
0x4001d4:	shl	eax, 0x1e
0x4001d7:	mov	ebx, eax
0x4001d9:	call	0x500000
<Block for 0x4001fb, 10 bytes>
0x4001fb:	shl	eax, 0xf
0x4001fe:	xor	ebx, eax
0x400200:	call	0x500000
<Block for 0x4001de, 10 bytes>
0x4001de:	shl	eax, 0xf
0x4001e1:	xor	ebx, eax
0x4001e3:	call	0x500000
<Block for 0x400205, 53 bytes>
0x400205:	xor	eax, ebx
0x400207:	not	eax
0x400209:	mov	dword ptr [rbp - 0x44], eax
0x40020c:	mov	qword ptr [rbp - 0x40], 0
0x400214:	mov	qword ptr [rbp - 0x38], 0
0x40021c:	mov	qword ptr [rbp - 0x30], 0
0x400224:	mov	qword ptr [rbp - 0x28], 0
0x40022c:	mov	qword ptr [rbp - 0x20], 0
0x400234:	cmp	dword ptr [rbp - 0x44], 0
0x400238:	js	0x400272
<Block for 0x4001e8, 4 bytes>
0x4001e8:	xor	eax, ebx
0x4001ea:	jmp	0x400209
<Block for 0x400272, 12 bytes>
0x400272:	lea	rdi, [rip + 0x67]
0x400279:	call	0x500010
<Block for 0x40023a, 6 bytes>
0x40023a:	cmp	dword ptr [rbp - 0x44], 9
0x40023e:	jg	0x400272
<Block for 0x400209, 49 bytes>
0x400209:	mov	dword ptr [rbp - 0x44], eax
0x40020c:	mov	qword ptr [rbp - 0x40], 0
0x400214:	mov	qword ptr [rbp - 0x38], 0
0x40021c:	mov	qword ptr [rbp - 0x30], 0
0x400224:	mov	qword ptr [rbp - 0x28], 0
0x40022c:	mov	qword ptr [rbp - 0x20], 0
0x400234:	cmp	dword ptr [rbp - 0x44], 0
0x400238:	js	0x400272
<Block for 0x40027e, 16 bytes>
0x40027e:	nop	
0x40027f:	mov	rax, qword ptr [rbp - 0x18]
0x400283:	xor	rax, qword ptr fs:[0x28]
0x40028c:	je	0x400293
<Block for 0x400240, 22 bytes>
0x400240:	mov	eax, dword ptr [rbp - 0x44]
0x400243:	cdqe	
0x400245:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40024d:	mov	dword ptr [rbp - 0x48], 0
0x400254:	jmp	0x40026a
<Block for 0x400293, 7 bytes>
0x400293:	add	rsp, 0x48
0x400297:	pop	rbx
0x400298:	pop	rbp
0x400299:	ret	
<Block for 0x40028e, 5 bytes>
0x40028e:	call	0x500018
<Block for 0x40026a, 6 bytes>
0x40026a:	cmp	dword ptr [rbp - 0x48], 9
0x40026e:	jle	0x400256
<Block for 0x400256, 16 bytes>
0x400256:	mov	eax, dword ptr [rbp - 0x48]
0x400259:	cdqe	
0x40025b:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40025f:	mov	edi, eax
0x400261:	call	0x500008
<Block for 0x400270, 2 bytes>
0x400270:	jmp	0x40027e
<Block for 0x400266, 10 bytes>
0x400266:	add	dword ptr [rbp - 0x48], 1
0x40026a:	cmp	dword ptr [rbp - 0x48], 9
0x40026e:	jle	0x400256
