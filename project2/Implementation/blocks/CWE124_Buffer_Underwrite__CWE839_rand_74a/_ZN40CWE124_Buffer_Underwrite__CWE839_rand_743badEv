<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x40055a
<Block for 0x40002b, 15 bytes>
0x40002b:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x400035:	call	0x500000
<Block for 0x40003a, 7 bytes>
0x40003a:	and	eax, 1
0x40003d:	test	eax, eax
0x40003f:	je	0x40005e
<Block for 0x40005e, 5 bytes>
0x40005e:	call	0x500000
<Block for 0x400041, 5 bytes>
0x400041:	call	0x500000
<Block for 0x400063, 10 bytes>
0x400063:	shl	eax, 0x1e
0x400066:	mov	ebx, eax
0x400068:	call	0x500000
<Block for 0x400046, 10 bytes>
0x400046:	shl	eax, 0x1e
0x400049:	mov	ebx, eax
0x40004b:	call	0x500000
<Block for 0x40006d, 10 bytes>
0x40006d:	shl	eax, 0xf
0x400070:	xor	ebx, eax
0x400072:	call	0x500000
<Block for 0x400050, 10 bytes>
0x400050:	shl	eax, 0xf
0x400053:	xor	ebx, eax
0x400055:	call	0x500000
<Block for 0x400077, 36 bytes>
0x400077:	xor	eax, ebx
0x400079:	not	eax
0x40007b:	mov	dword ptr [rbp - 0x84], eax
0x400081:	mov	dword ptr [rbp - 0x50], 0
0x400088:	lea	rdx, [rbp - 0x50]
0x40008c:	lea	rax, [rbp - 0x80]
0x400090:	mov	rsi, rdx
0x400093:	mov	rdi, rax
0x400096:	call	0x400726
<Block for 0x40005a, 4 bytes>
0x40005a:	xor	eax, ebx
0x40005c:	jmp	0x40007b
<Block for 0x40009b, 34 bytes>
0x40009b:	mov	edx, dword ptr [rbp - 0x84]
0x4000a1:	mov	dword ptr [rax], edx
0x4000a3:	mov	dword ptr [rbp - 0x50], 1
0x4000aa:	lea	rdx, [rbp - 0x50]
0x4000ae:	lea	rax, [rbp - 0x80]
0x4000b2:	mov	rsi, rdx
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x400726
<Block for 0x40007b, 32 bytes>
0x40007b:	mov	dword ptr [rbp - 0x84], eax
0x400081:	mov	dword ptr [rbp - 0x50], 0
0x400088:	lea	rdx, [rbp - 0x50]
0x40008c:	lea	rax, [rbp - 0x80]
0x400090:	mov	rsi, rdx
0x400093:	mov	rdi, rax
0x400096:	call	0x400726
<Block for 0x4000bd, 34 bytes>
0x4000bd:	mov	edx, dword ptr [rbp - 0x84]
0x4000c3:	mov	dword ptr [rax], edx
0x4000c5:	mov	dword ptr [rbp - 0x50], 2
0x4000cc:	lea	rdx, [rbp - 0x50]
0x4000d0:	lea	rax, [rbp - 0x80]
0x4000d4:	mov	rsi, rdx
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x400726
<Block for 0x4000df, 27 bytes>
0x4000df:	mov	edx, dword ptr [rbp - 0x84]
0x4000e5:	mov	dword ptr [rax], edx
0x4000e7:	lea	rdx, [rbp - 0x80]
0x4000eb:	lea	rax, [rbp - 0x50]
0x4000ef:	mov	rsi, rdx
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x40059a
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rax, [rbp - 0x50]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500008
<Block for 0x400106, 12 bytes>
0x400106:	lea	rax, [rbp - 0x50]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x40057a
<Block for 0x400112, 12 bytes>
0x400112:	lea	rax, [rbp - 0x80]
0x400116:	mov	rdi, rax
0x400119:	call	0x40057a
<Block for 0x40011e, 16 bytes>
0x40011e:	nop	
0x40011f:	mov	rax, qword ptr [rbp - 0x18]
0x400123:	xor	rax, qword ptr fs:[0x28]
0x40012c:	je	0x400168
<Block for 0x400168, 10 bytes>
0x400168:	add	rsp, 0x88
0x40016f:	pop	rbx
0x400170:	pop	rbp
0x400171:	ret	
<Block for 0x40012e, 2 bytes>
0x40012e:	jmp	0x400163
<Block for 0x400163, 5 bytes>
0x400163:	call	0x500018
