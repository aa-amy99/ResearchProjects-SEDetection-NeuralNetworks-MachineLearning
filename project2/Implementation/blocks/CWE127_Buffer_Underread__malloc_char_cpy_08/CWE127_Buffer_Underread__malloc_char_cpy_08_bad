<Block for 0x40001e, 51 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xe0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	qword ptr [rbp - 0xe0], 0
0x400047:	mov	eax, 0
0x40004c:	call	0x400000
<Block for 0x400051, 4 bytes>
0x400051:	test	eax, eax
0x400053:	je	0x4000b3
<Block for 0x4000b3, 25 bytes>
0x4000b3:	lea	rax, [rbp - 0xd0]
0x4000ba:	mov	edx, 0xc7
0x4000bf:	mov	esi, 0x43
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500010
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0x64
0x40005a:	call	0x500000
<Block for 0x4000cc, 29 bytes>
0x4000cc:	mov	byte ptr [rbp - 9], 0
0x4000d0:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000d7:	lea	rax, [rbp - 0xd0]
0x4000de:	mov	rsi, rdx
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500018
<Block for 0x40005f, 17 bytes>
0x40005f:	mov	qword ptr [rbp - 0xd8], rax
0x400066:	cmp	qword ptr [rbp - 0xd8], 0
0x40006e:	jne	0x40007a
<Block for 0x4000e9, 15 bytes>
0x4000e9:	lea	rax, [rbp - 0xd0]
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500020
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 0xffffffff
0x400075:	call	0x500008
<Block for 0x40007a, 25 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 0xd8]
0x400081:	mov	edx, 0x63
0x400086:	mov	esi, 0x41
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500010
<Block for 0x4000f8, 16 bytes>
0x4000f8:	nop	
0x4000f9:	mov	rax, qword ptr [rbp - 8]
0x4000fd:	xor	rax, qword ptr fs:[0x28]
0x400106:	je	0x40010d
<Block for 0x400093, 57 bytes>
0x400093:	mov	rax, qword ptr [rbp - 0xd8]
0x40009a:	add	rax, 0x63
0x40009e:	mov	byte ptr [rax], 0
0x4000a1:	mov	rax, qword ptr [rbp - 0xd8]
0x4000a8:	sub	rax, 8
0x4000ac:	mov	qword ptr [rbp - 0xe0], rax
0x4000b3:	lea	rax, [rbp - 0xd0]
0x4000ba:	mov	edx, 0xc7
0x4000bf:	mov	esi, 0x43
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500010
<Block for 0x40010d, 2 bytes>
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400108, 5 bytes>
0x400108:	call	0x500028
