<Block for 0x40010f, 51 bytes>
0x40010f:	endbr64	
0x400113:	push	rbp
0x400114:	mov	rbp, rsp
0x400117:	sub	rsp, 0xe0
0x40011e:	mov	rax, qword ptr fs:[0x28]
0x400127:	mov	qword ptr [rbp - 8], rax
0x40012b:	xor	eax, eax
0x40012d:	mov	qword ptr [rbp - 0xe0], 0
0x400138:	mov	eax, 0
0x40013d:	call	0x40000f
<Block for 0x400142, 4 bytes>
0x400142:	test	eax, eax
0x400144:	je	0x400154
<Block for 0x400154, 10 bytes>
0x400154:	mov	edi, 0x64
0x400159:	call	0x500000
<Block for 0x400146, 12 bytes>
0x400146:	lea	rdi, [rip + 0x1c9]
0x40014d:	call	0x500020
<Block for 0x40015e, 17 bytes>
0x40015e:	mov	qword ptr [rbp - 0xd8], rax
0x400165:	cmp	qword ptr [rbp - 0xd8], 0
0x40016d:	jne	0x400179
<Block for 0x400152, 2 bytes>
0x400152:	jmp	0x4001ae
<Block for 0x40016f, 10 bytes>
0x40016f:	mov	edi, 0xffffffff
0x400174:	call	0x500008
<Block for 0x400179, 25 bytes>
0x400179:	mov	rax, qword ptr [rbp - 0xd8]
0x400180:	mov	edx, 0x63
0x400185:	mov	esi, 0x41
0x40018a:	mov	rdi, rax
0x40018d:	call	0x500010
<Block for 0x4001ae, 25 bytes>
0x4001ae:	lea	rax, [rbp - 0xd0]
0x4001b5:	mov	edx, 0xc7
0x4001ba:	mov	esi, 0x43
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500010
<Block for 0x400192, 53 bytes>
0x400192:	mov	rax, qword ptr [rbp - 0xd8]
0x400199:	add	rax, 0x63
0x40019d:	mov	byte ptr [rax], 0
0x4001a0:	mov	rax, qword ptr [rbp - 0xd8]
0x4001a7:	mov	qword ptr [rbp - 0xe0], rax
0x4001ae:	lea	rax, [rbp - 0xd0]
0x4001b5:	mov	edx, 0xc7
0x4001ba:	mov	esi, 0x43
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500010
<Block for 0x4001c7, 29 bytes>
0x4001c7:	mov	byte ptr [rbp - 9], 0
0x4001cb:	mov	rdx, qword ptr [rbp - 0xe0]
0x4001d2:	lea	rax, [rbp - 0xd0]
0x4001d9:	mov	rsi, rdx
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500018
<Block for 0x4001e4, 15 bytes>
0x4001e4:	lea	rax, [rbp - 0xd0]
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500020
<Block for 0x4001f3, 16 bytes>
0x4001f3:	nop	
0x4001f4:	mov	rax, qword ptr [rbp - 8]
0x4001f8:	xor	rax, qword ptr fs:[0x28]
0x400201:	je	0x400208
<Block for 0x400208, 2 bytes>
0x400208:	leave	
0x400209:	ret	
<Block for 0x400203, 5 bytes>
0x400203:	call	0x500028
