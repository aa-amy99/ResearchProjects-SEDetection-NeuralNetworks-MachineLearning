<Block for 0x40020a, 51 bytes>
0x40020a:	endbr64	
0x40020e:	push	rbp
0x40020f:	mov	rbp, rsp
0x400212:	sub	rsp, 0xe0
0x400219:	mov	rax, qword ptr fs:[0x28]
0x400222:	mov	qword ptr [rbp - 8], rax
0x400226:	xor	eax, eax
0x400228:	mov	qword ptr [rbp - 0xe0], 0
0x400233:	mov	eax, 0
0x400238:	call	0x400000
<Block for 0x40023d, 4 bytes>
0x40023d:	test	eax, eax
0x40023f:	je	0x40029b
<Block for 0x40029b, 25 bytes>
0x40029b:	lea	rax, [rbp - 0xd0]
0x4002a2:	mov	edx, 0xc7
0x4002a7:	mov	esi, 0x43
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500010
<Block for 0x400241, 10 bytes>
0x400241:	mov	edi, 0x64
0x400246:	call	0x500000
<Block for 0x4002b4, 29 bytes>
0x4002b4:	mov	byte ptr [rbp - 9], 0
0x4002b8:	mov	rdx, qword ptr [rbp - 0xe0]
0x4002bf:	lea	rax, [rbp - 0xd0]
0x4002c6:	mov	rsi, rdx
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x500018
<Block for 0x40024b, 17 bytes>
0x40024b:	mov	qword ptr [rbp - 0xd8], rax
0x400252:	cmp	qword ptr [rbp - 0xd8], 0
0x40025a:	jne	0x400266
<Block for 0x4002d1, 15 bytes>
0x4002d1:	lea	rax, [rbp - 0xd0]
0x4002d8:	mov	rdi, rax
0x4002db:	call	0x500020
<Block for 0x40025c, 10 bytes>
0x40025c:	mov	edi, 0xffffffff
0x400261:	call	0x500008
<Block for 0x400266, 25 bytes>
0x400266:	mov	rax, qword ptr [rbp - 0xd8]
0x40026d:	mov	edx, 0x63
0x400272:	mov	esi, 0x41
0x400277:	mov	rdi, rax
0x40027a:	call	0x500010
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x40027f, 53 bytes>
0x40027f:	mov	rax, qword ptr [rbp - 0xd8]
0x400286:	add	rax, 0x63
0x40028a:	mov	byte ptr [rax], 0
0x40028d:	mov	rax, qword ptr [rbp - 0xd8]
0x400294:	mov	qword ptr [rbp - 0xe0], rax
0x40029b:	lea	rax, [rbp - 0xd0]
0x4002a2:	mov	edx, 0xc7
0x4002a7:	mov	esi, 0x43
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500010
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500028
