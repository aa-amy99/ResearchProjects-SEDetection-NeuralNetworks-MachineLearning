<Block for 0x40016d, 82 bytes>
0x40016d:	endbr64	
0x400171:	push	rbp
0x400172:	mov	rbp, rsp
0x400175:	sub	rsp, 0x120
0x40017c:	mov	rax, qword ptr fs:[0x28]
0x400185:	mov	qword ptr [rbp - 8], rax
0x400189:	xor	eax, eax
0x40018b:	movabs	rax, 0x3d48544150
0x400195:	mov	edx, 0
0x40019a:	mov	qword ptr [rbp - 0x110], rax
0x4001a1:	mov	qword ptr [rbp - 0x108], rdx
0x4001a8:	lea	rdx, [rbp - 0x100]
0x4001af:	mov	eax, 0
0x4001b4:	mov	ecx, 0x1d
0x4001b9:	mov	rdi, rdx
0x4001bc:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001bf, 36 bytes>
0x4001bf:	mov	rdx, rdi
0x4001c2:	mov	word ptr [rdx], ax
0x4001c5:	add	rdx, 2
0x4001c9:	lea	rax, [rbp - 0x110]
0x4001d0:	mov	qword ptr [rbp - 0x118], rax
0x4001d7:	mov	dword ptr [rbp - 0x11c], 0
0x4001e1:	jmp	0x400223
<Block for 0x4001bc, 3 bytes>
0x4001bc:	rep stosq	qword ptr [rdi], rax
<Block for 0x400223, 9 bytes>
0x400223:	cmp	dword ptr [rbp - 0x11c], 0
0x40022a:	jle	0x4001e3
<Block for 0x4001e3, 27 bytes>
0x4001e3:	mov	rax, qword ptr [rbp - 0x118]
0x4001ea:	mov	rcx, -1
0x4001f1:	mov	rdx, rax
0x4001f4:	mov	eax, 0
0x4001f9:	mov	rdi, rdx
0x4001fc:	repne scasb	al, byte ptr [rdi]
<Block for 0x40022c, 15 bytes>
0x40022c:	mov	rax, qword ptr [rbp - 0x118]
0x400233:	mov	rdi, rax
0x400236:	call	0x500028
<Block for 0x4001fe, 46 bytes>
0x4001fe:	mov	rax, rcx
0x400201:	not	rax
0x400204:	lea	rdx, [rax - 1]
0x400208:	mov	rax, qword ptr [rbp - 0x118]
0x40020f:	add	rax, rdx
0x400212:	mov	dword ptr [rax], 0x6e69622f
0x400218:	mov	byte ptr [rax + 4], 0
0x40021c:	add	dword ptr [rbp - 0x11c], 1
0x400223:	cmp	dword ptr [rbp - 0x11c], 0
0x40022a:	jle	0x4001e3
<Block for 0x4001fc, 2 bytes>
0x4001fc:	repne scasb	al, byte ptr [rdi]
<Block for 0x40023b, 16 bytes>
0x40023b:	nop	
0x40023c:	mov	rax, qword ptr [rbp - 8]
0x400240:	xor	rax, qword ptr fs:[0x28]
0x400249:	je	0x400250
<Block for 0x400250, 2 bytes>
0x400250:	leave	
0x400251:	ret	
<Block for 0x40024b, 5 bytes>
0x40024b:	call	0x500030
