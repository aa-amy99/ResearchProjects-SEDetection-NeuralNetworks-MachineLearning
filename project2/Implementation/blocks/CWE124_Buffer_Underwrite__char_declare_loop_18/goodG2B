<Block for 0x4000e3, 55 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0xf0
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	lea	rax, [rbp - 0xe0]
0x400108:	mov	edx, 0x63
0x40010d:	mov	esi, 0x41
0x400112:	mov	rdi, rax
0x400115:	call	0x500000
<Block for 0x40011a, 45 bytes>
0x40011a:	mov	byte ptr [rbp - 0x7d], 0
0x40011e:	nop	
0x40011f:	endbr64	
0x400123:	lea	rax, [rbp - 0xe0]
0x40012a:	mov	qword ptr [rbp - 0xe8], rax
0x400131:	lea	rax, [rbp - 0x70]
0x400135:	mov	edx, 0x63
0x40013a:	mov	esi, 0x43
0x40013f:	mov	rdi, rax
0x400142:	call	0x500000
<Block for 0x400147, 17 bytes>
0x400147:	mov	byte ptr [rbp - 0xd], 0
0x40014b:	mov	qword ptr [rbp - 0xf0], 0
0x400156:	jmp	0x400184
<Block for 0x400184, 10 bytes>
0x400184:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40018c:	jbe	0x400158
<Block for 0x400158, 54 bytes>
0x400158:	mov	rdx, qword ptr [rbp - 0xe8]
0x40015f:	mov	rax, qword ptr [rbp - 0xf0]
0x400166:	add	rdx, rax
0x400169:	lea	rcx, [rbp - 0x70]
0x40016d:	mov	rax, qword ptr [rbp - 0xf0]
0x400174:	add	rax, rcx
0x400177:	movzx	eax, byte ptr [rax]
0x40017a:	mov	byte ptr [rdx], al
0x40017c:	add	qword ptr [rbp - 0xf0], 1
0x400184:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40018c:	jbe	0x400158
<Block for 0x40018e, 29 bytes>
0x40018e:	mov	rax, qword ptr [rbp - 0xe8]
0x400195:	add	rax, 0x63
0x400199:	mov	byte ptr [rax], 0
0x40019c:	mov	rax, qword ptr [rbp - 0xe8]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500008
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500010
