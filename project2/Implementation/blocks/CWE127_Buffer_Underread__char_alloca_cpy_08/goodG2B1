<Block for 0x400167, 84 bytes>
0x400167:	endbr64	
0x40016b:	push	rbp
0x40016c:	mov	rbp, rsp
0x40016f:	sub	rsp, 0xe0
0x400176:	mov	rax, qword ptr fs:[0x28]
0x40017f:	mov	qword ptr [rbp - 8], rax
0x400183:	xor	eax, eax
0x400185:	mov	eax, 0x10
0x40018a:	sub	rax, 1
0x40018e:	add	rax, 0x6c
0x400192:	mov	ecx, 0x10
0x400197:	mov	edx, 0
0x40019c:	div	rcx
0x40019f:	imul	rax, rax, 0x10
0x4001a3:	mov	rdx, rax
0x4001a6:	and	rdx, 0xfffffffffffff000
0x4001ad:	mov	rcx, rsp
0x4001b0:	sub	rcx, rdx
0x4001b3:	mov	rdx, rcx
0x4001b6:	cmp	rsp, rdx
0x4001b9:	je	0x4001cd
<Block for 0x4001cd, 26 bytes>
0x4001cd:	mov	rdx, rax
0x4001d0:	and	edx, 0xfff
0x4001d6:	sub	rsp, rdx
0x4001d9:	mov	rdx, rax
0x4001dc:	and	edx, 0xfff
0x4001e2:	test	rdx, rdx
0x4001e5:	je	0x4001f7
<Block for 0x4001bb, 18 bytes>
0x4001bb:	sub	rsp, 0x1000
0x4001c2:	or	qword ptr [rsp + 0xff8], 0
0x4001cb:	jmp	0x4001b6
<Block for 0x4001f7, 47 bytes>
0x4001f7:	mov	rax, rsp
0x4001fa:	add	rax, 0xf
0x4001fe:	shr	rax, 4
0x400202:	shl	rax, 4
0x400206:	mov	qword ptr [rbp - 0xd8], rax
0x40020d:	mov	rax, qword ptr [rbp - 0xd8]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x41
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x4001e7, 63 bytes>
0x4001e7:	and	eax, 0xfff
0x4001ec:	sub	rax, 8
0x4001f0:	add	rax, rsp
0x4001f3:	or	qword ptr [rax], 0
0x4001f7:	mov	rax, rsp
0x4001fa:	add	rax, 0xf
0x4001fe:	shr	rax, 4
0x400202:	shl	rax, 4
0x400206:	mov	qword ptr [rbp - 0xd8], rax
0x40020d:	mov	rax, qword ptr [rbp - 0xd8]
0x400214:	mov	edx, 0x63
0x400219:	mov	esi, 0x41
0x40021e:	mov	rdi, rax
0x400221:	call	0x500000
<Block for 0x4001b6, 5 bytes>
0x4001b6:	cmp	rsp, rdx
0x4001b9:	je	0x4001cd
<Block for 0x400226, 24 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0xd8]
0x40022d:	add	rax, 0x63
0x400231:	mov	byte ptr [rax], 0
0x400234:	mov	eax, 0
0x400239:	call	0x40000f
<Block for 0x40023e, 4 bytes>
0x40023e:	test	eax, eax
0x400240:	je	0x400250
<Block for 0x400250, 39 bytes>
0x400250:	mov	rax, qword ptr [rbp - 0xd8]
0x400257:	mov	qword ptr [rbp - 0xe0], rax
0x40025e:	lea	rax, [rbp - 0xd0]
0x400265:	mov	edx, 0xc7
0x40026a:	mov	esi, 0x43
0x40026f:	mov	rdi, rax
0x400272:	call	0x500000
<Block for 0x400242, 12 bytes>
0x400242:	lea	rdi, [rip + 0x1d5]
0x400249:	call	0x500010
<Block for 0x400277, 29 bytes>
0x400277:	mov	byte ptr [rbp - 9], 0
0x40027b:	mov	rdx, qword ptr [rbp - 0xe0]
0x400282:	lea	rax, [rbp - 0xd0]
0x400289:	mov	rsi, rdx
0x40028c:	mov	rdi, rax
0x40028f:	call	0x500008
<Block for 0x40024e, 2 bytes>
0x40024e:	jmp	0x40025e
<Block for 0x400294, 15 bytes>
0x400294:	lea	rax, [rbp - 0xd0]
0x40029b:	mov	rdi, rax
0x40029e:	call	0x500010
<Block for 0x40025e, 25 bytes>
0x40025e:	lea	rax, [rbp - 0xd0]
0x400265:	mov	edx, 0xc7
0x40026a:	mov	esi, 0x43
0x40026f:	mov	rdi, rax
0x400272:	call	0x500000
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002b8
<Block for 0x4002b8, 2 bytes>
0x4002b8:	leave	
0x4002b9:	ret	
<Block for 0x4002b3, 5 bytes>
0x4002b3:	call	0x500018
