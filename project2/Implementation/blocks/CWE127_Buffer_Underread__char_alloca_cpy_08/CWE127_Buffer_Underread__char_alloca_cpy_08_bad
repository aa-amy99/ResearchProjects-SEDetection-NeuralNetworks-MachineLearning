<Block for 0x40001e, 84 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xe0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0x10
0x400041:	sub	rax, 1
0x400045:	add	rax, 0x6c
0x400049:	mov	ecx, 0x10
0x40004e:	mov	edx, 0
0x400053:	div	rcx
0x400056:	imul	rax, rax, 0x10
0x40005a:	mov	rdx, rax
0x40005d:	and	rdx, 0xfffffffffffff000
0x400064:	mov	rcx, rsp
0x400067:	sub	rcx, rdx
0x40006a:	mov	rdx, rcx
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x400084, 26 bytes>
0x400084:	mov	rdx, rax
0x400087:	and	edx, 0xfff
0x40008d:	sub	rsp, rdx
0x400090:	mov	rdx, rax
0x400093:	and	edx, 0xfff
0x400099:	test	rdx, rdx
0x40009c:	je	0x4000ae
<Block for 0x400072, 18 bytes>
0x400072:	sub	rsp, 0x1000
0x400079:	or	qword ptr [rsp + 0xff8], 0
0x400082:	jmp	0x40006d
<Block for 0x4000ae, 47 bytes>
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0xd8], rax
0x4000c4:	mov	rax, qword ptr [rbp - 0xd8]
0x4000cb:	mov	edx, 0x63
0x4000d0:	mov	esi, 0x41
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500000
<Block for 0x40009e, 63 bytes>
0x40009e:	and	eax, 0xfff
0x4000a3:	sub	rax, 8
0x4000a7:	add	rax, rsp
0x4000aa:	or	qword ptr [rax], 0
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0xd8], rax
0x4000c4:	mov	rax, qword ptr [rbp - 0xd8]
0x4000cb:	mov	edx, 0x63
0x4000d0:	mov	esi, 0x41
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500000
<Block for 0x40006d, 5 bytes>
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x4000dd, 24 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0xd8]
0x4000e4:	add	rax, 0x63
0x4000e8:	mov	byte ptr [rax], 0
0x4000eb:	mov	eax, 0
0x4000f0:	call	0x400000
<Block for 0x4000f5, 4 bytes>
0x4000f5:	test	eax, eax
0x4000f7:	je	0x40010b
<Block for 0x40010b, 25 bytes>
0x40010b:	lea	rax, [rbp - 0xd0]
0x400112:	mov	edx, 0xc7
0x400117:	mov	esi, 0x43
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x4000f9, 43 bytes>
0x4000f9:	mov	rax, qword ptr [rbp - 0xd8]
0x400100:	sub	rax, 8
0x400104:	mov	qword ptr [rbp - 0xe0], rax
0x40010b:	lea	rax, [rbp - 0xd0]
0x400112:	mov	edx, 0xc7
0x400117:	mov	esi, 0x43
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x400124, 29 bytes>
0x400124:	mov	byte ptr [rbp - 9], 0
0x400128:	mov	rdx, qword ptr [rbp - 0xe0]
0x40012f:	lea	rax, [rbp - 0xd0]
0x400136:	mov	rsi, rdx
0x400139:	mov	rdi, rax
0x40013c:	call	0x500008
<Block for 0x400141, 15 bytes>
0x400141:	lea	rax, [rbp - 0xd0]
0x400148:	mov	rdi, rax
0x40014b:	call	0x500010
<Block for 0x400150, 16 bytes>
0x400150:	nop	
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	xor	rax, qword ptr fs:[0x28]
0x40015e:	je	0x400165
<Block for 0x400165, 2 bytes>
0x400165:	leave	
0x400166:	ret	
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500018
