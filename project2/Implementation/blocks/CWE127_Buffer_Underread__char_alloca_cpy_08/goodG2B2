<Block for 0x4002ba, 84 bytes>
0x4002ba:	endbr64	
0x4002be:	push	rbp
0x4002bf:	mov	rbp, rsp
0x4002c2:	sub	rsp, 0xe0
0x4002c9:	mov	rax, qword ptr fs:[0x28]
0x4002d2:	mov	qword ptr [rbp - 8], rax
0x4002d6:	xor	eax, eax
0x4002d8:	mov	eax, 0x10
0x4002dd:	sub	rax, 1
0x4002e1:	add	rax, 0x6c
0x4002e5:	mov	ecx, 0x10
0x4002ea:	mov	edx, 0
0x4002ef:	div	rcx
0x4002f2:	imul	rax, rax, 0x10
0x4002f6:	mov	rdx, rax
0x4002f9:	and	rdx, 0xfffffffffffff000
0x400300:	mov	rcx, rsp
0x400303:	sub	rcx, rdx
0x400306:	mov	rdx, rcx
0x400309:	cmp	rsp, rdx
0x40030c:	je	0x400320
<Block for 0x400320, 26 bytes>
0x400320:	mov	rdx, rax
0x400323:	and	edx, 0xfff
0x400329:	sub	rsp, rdx
0x40032c:	mov	rdx, rax
0x40032f:	and	edx, 0xfff
0x400335:	test	rdx, rdx
0x400338:	je	0x40034a
<Block for 0x40030e, 18 bytes>
0x40030e:	sub	rsp, 0x1000
0x400315:	or	qword ptr [rsp + 0xff8], 0
0x40031e:	jmp	0x400309
<Block for 0x40034a, 47 bytes>
0x40034a:	mov	rax, rsp
0x40034d:	add	rax, 0xf
0x400351:	shr	rax, 4
0x400355:	shl	rax, 4
0x400359:	mov	qword ptr [rbp - 0xd8], rax
0x400360:	mov	rax, qword ptr [rbp - 0xd8]
0x400367:	mov	edx, 0x63
0x40036c:	mov	esi, 0x41
0x400371:	mov	rdi, rax
0x400374:	call	0x500000
<Block for 0x40033a, 63 bytes>
0x40033a:	and	eax, 0xfff
0x40033f:	sub	rax, 8
0x400343:	add	rax, rsp
0x400346:	or	qword ptr [rax], 0
0x40034a:	mov	rax, rsp
0x40034d:	add	rax, 0xf
0x400351:	shr	rax, 4
0x400355:	shl	rax, 4
0x400359:	mov	qword ptr [rbp - 0xd8], rax
0x400360:	mov	rax, qword ptr [rbp - 0xd8]
0x400367:	mov	edx, 0x63
0x40036c:	mov	esi, 0x41
0x400371:	mov	rdi, rax
0x400374:	call	0x500000
<Block for 0x400309, 5 bytes>
0x400309:	cmp	rsp, rdx
0x40030c:	je	0x400320
<Block for 0x400379, 24 bytes>
0x400379:	mov	rax, qword ptr [rbp - 0xd8]
0x400380:	add	rax, 0x63
0x400384:	mov	byte ptr [rax], 0
0x400387:	mov	eax, 0
0x40038c:	call	0x400000
<Block for 0x400391, 4 bytes>
0x400391:	test	eax, eax
0x400393:	je	0x4003a3
<Block for 0x4003a3, 25 bytes>
0x4003a3:	lea	rax, [rbp - 0xd0]
0x4003aa:	mov	edx, 0xc7
0x4003af:	mov	esi, 0x43
0x4003b4:	mov	rdi, rax
0x4003b7:	call	0x500000
<Block for 0x400395, 39 bytes>
0x400395:	mov	rax, qword ptr [rbp - 0xd8]
0x40039c:	mov	qword ptr [rbp - 0xe0], rax
0x4003a3:	lea	rax, [rbp - 0xd0]
0x4003aa:	mov	edx, 0xc7
0x4003af:	mov	esi, 0x43
0x4003b4:	mov	rdi, rax
0x4003b7:	call	0x500000
<Block for 0x4003bc, 29 bytes>
0x4003bc:	mov	byte ptr [rbp - 9], 0
0x4003c0:	mov	rdx, qword ptr [rbp - 0xe0]
0x4003c7:	lea	rax, [rbp - 0xd0]
0x4003ce:	mov	rsi, rdx
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x500008
<Block for 0x4003d9, 15 bytes>
0x4003d9:	lea	rax, [rbp - 0xd0]
0x4003e0:	mov	rdi, rax
0x4003e3:	call	0x500010
<Block for 0x4003e8, 16 bytes>
0x4003e8:	nop	
0x4003e9:	mov	rax, qword ptr [rbp - 8]
0x4003ed:	xor	rax, qword ptr fs:[0x28]
0x4003f6:	je	0x4003fd
<Block for 0x4003fd, 2 bytes>
0x4003fd:	leave	
0x4003fe:	ret	
<Block for 0x4003f8, 5 bytes>
0x4003f8:	call	0x500018
