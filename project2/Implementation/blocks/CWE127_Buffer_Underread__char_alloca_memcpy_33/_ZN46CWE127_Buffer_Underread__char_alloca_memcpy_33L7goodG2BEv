<Block for 0x4001b0, 99 bytes>
0x4001b0:	endbr64	
0x4001b4:	push	rbp
0x4001b5:	mov	rbp, rsp
0x4001b8:	push	rbx
0x4001b9:	sub	rsp, 0x98
0x4001c0:	mov	rax, qword ptr fs:[0x28]
0x4001c9:	mov	qword ptr [rbp - 0x18], rax
0x4001cd:	xor	eax, eax
0x4001cf:	lea	rax, [rbp - 0xa0]
0x4001d6:	mov	qword ptr [rbp - 0x98], rax
0x4001dd:	mov	eax, 0x10
0x4001e2:	sub	rax, 1
0x4001e6:	add	rax, 0x6c
0x4001ea:	mov	esi, 0x10
0x4001ef:	mov	edx, 0
0x4001f4:	div	rsi
0x4001f7:	imul	rax, rax, 0x10
0x4001fb:	mov	rdx, rax
0x4001fe:	and	rdx, 0xfffffffffffff000
0x400205:	mov	rbx, rsp
0x400208:	sub	rbx, rdx
0x40020b:	mov	rdx, rbx
0x40020e:	cmp	rsp, rdx
0x400211:	je	0x400225
<Block for 0x400225, 26 bytes>
0x400225:	mov	rdx, rax
0x400228:	and	edx, 0xfff
0x40022e:	sub	rsp, rdx
0x400231:	mov	rdx, rax
0x400234:	and	edx, 0xfff
0x40023a:	test	rdx, rdx
0x40023d:	je	0x40024f
<Block for 0x400213, 18 bytes>
0x400213:	sub	rsp, 0x1000
0x40021a:	or	qword ptr [rsp + 0xff8], 0
0x400223:	jmp	0x40020e
<Block for 0x40024f, 47 bytes>
0x40024f:	mov	rax, rsp
0x400252:	add	rax, 0xf
0x400256:	shr	rax, 4
0x40025a:	shl	rax, 4
0x40025e:	mov	qword ptr [rbp - 0x90], rax
0x400265:	mov	rax, qword ptr [rbp - 0x90]
0x40026c:	mov	edx, 0x63
0x400271:	mov	esi, 0x41
0x400276:	mov	rdi, rax
0x400279:	call	0x500000
<Block for 0x40023f, 63 bytes>
0x40023f:	and	eax, 0xfff
0x400244:	sub	rax, 8
0x400248:	add	rax, rsp
0x40024b:	or	qword ptr [rax], 0
0x40024f:	mov	rax, rsp
0x400252:	add	rax, 0xf
0x400256:	shr	rax, 4
0x40025a:	shl	rax, 4
0x40025e:	mov	qword ptr [rbp - 0x90], rax
0x400265:	mov	rax, qword ptr [rbp - 0x90]
0x40026c:	mov	edx, 0x63
0x400271:	mov	esi, 0x41
0x400276:	mov	rdi, rax
0x400279:	call	0x500000
<Block for 0x40020e, 5 bytes>
0x40020e:	cmp	rsp, rdx
0x400211:	je	0x400225
<Block for 0x40027e, 67 bytes>
0x40027e:	mov	rax, qword ptr [rbp - 0x90]
0x400285:	add	rax, 0x63
0x400289:	mov	byte ptr [rax], 0
0x40028c:	mov	rax, qword ptr [rbp - 0x90]
0x400293:	mov	qword ptr [rbp - 0xa0], rax
0x40029a:	mov	rax, qword ptr [rbp - 0x98]
0x4002a1:	mov	rax, qword ptr [rax]
0x4002a4:	mov	qword ptr [rbp - 0x88], rax
0x4002ab:	lea	rax, [rbp - 0x80]
0x4002af:	mov	edx, 0x63
0x4002b4:	mov	esi, 0x43
0x4002b9:	mov	rdi, rax
0x4002bc:	call	0x500000
<Block for 0x4002c1, 128 bytes>
0x4002c1:	mov	byte ptr [rbp - 0x1d], 0
0x4002c5:	mov	rax, qword ptr [rbp - 0x88]
0x4002cc:	mov	rcx, qword ptr [rax]
0x4002cf:	mov	rbx, qword ptr [rax + 8]
0x4002d3:	mov	qword ptr [rbp - 0x80], rcx
0x4002d7:	mov	qword ptr [rbp - 0x78], rbx
0x4002db:	mov	rcx, qword ptr [rax + 0x10]
0x4002df:	mov	rbx, qword ptr [rax + 0x18]
0x4002e3:	mov	qword ptr [rbp - 0x70], rcx
0x4002e7:	mov	qword ptr [rbp - 0x68], rbx
0x4002eb:	mov	rcx, qword ptr [rax + 0x20]
0x4002ef:	mov	rbx, qword ptr [rax + 0x28]
0x4002f3:	mov	qword ptr [rbp - 0x60], rcx
0x4002f7:	mov	qword ptr [rbp - 0x58], rbx
0x4002fb:	mov	rcx, qword ptr [rax + 0x30]
0x4002ff:	mov	rbx, qword ptr [rax + 0x38]
0x400303:	mov	qword ptr [rbp - 0x50], rcx
0x400307:	mov	qword ptr [rbp - 0x48], rbx
0x40030b:	mov	rcx, qword ptr [rax + 0x40]
0x40030f:	mov	rbx, qword ptr [rax + 0x48]
0x400313:	mov	qword ptr [rbp - 0x40], rcx
0x400317:	mov	qword ptr [rbp - 0x38], rbx
0x40031b:	mov	rcx, qword ptr [rax + 0x50]
0x40031f:	mov	rbx, qword ptr [rax + 0x58]
0x400323:	mov	qword ptr [rbp - 0x30], rcx
0x400327:	mov	qword ptr [rbp - 0x28], rbx
0x40032b:	mov	eax, dword ptr [rax + 0x60]
0x40032e:	mov	dword ptr [rbp - 0x20], eax
0x400331:	mov	byte ptr [rbp - 0x1d], 0
0x400335:	lea	rax, [rbp - 0x80]
0x400339:	mov	rdi, rax
0x40033c:	call	0x500008
<Block for 0x400341, 16 bytes>
0x400341:	nop	
0x400342:	mov	rax, qword ptr [rbp - 0x18]
0x400346:	xor	rax, qword ptr fs:[0x28]
0x40034f:	je	0x400356
<Block for 0x400356, 6 bytes>
0x400356:	mov	rbx, qword ptr [rbp - 8]
0x40035a:	leave	
0x40035b:	ret	
<Block for 0x400351, 5 bytes>
0x400351:	call	0x500010
