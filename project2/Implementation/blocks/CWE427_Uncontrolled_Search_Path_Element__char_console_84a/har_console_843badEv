<Block for 0x400000, 85 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	sub	rsp, 0x120
0x400012:	mov	rax, qword ptr fs:[0x28]
0x40001b:	mov	qword ptr [rbp - 0x18], rax
0x40001f:	xor	eax, eax
0x400021:	movabs	rax, 0x3d48544150
0x40002b:	mov	edx, 0
0x400030:	mov	qword ptr [rbp - 0x120], rax
0x400037:	mov	qword ptr [rbp - 0x118], rdx
0x40003e:	lea	rdx, [rbp - 0x110]
0x400045:	mov	eax, 0
0x40004a:	mov	ecx, 0x1d
0x40004f:	mov	rdi, rdx
0x400052:	rep stosq	qword ptr [rdi], rax
<Block for 0x400055, 34 bytes>
0x400055:	mov	rdx, rdi
0x400058:	mov	word ptr [rdx], ax
0x40005b:	add	rdx, 2
0x40005f:	lea	rax, [rbp - 0x120]
0x400066:	mov	qword ptr [rbp - 0x130], rax
0x40006d:	mov	edi, 8
0x400072:	call	0x500000
<Block for 0x400052, 3 bytes>
0x400052:	rep stosq	qword ptr [rdi], rax
<Block for 0x400077, 21 bytes>
0x400077:	mov	rbx, rax
0x40007a:	mov	rax, qword ptr [rbp - 0x130]
0x400081:	mov	rsi, rax
0x400084:	mov	rdi, rbx
0x400087:	call	0x500008
<Block for 0x40008c, 19 bytes>
0x40008c:	mov	qword ptr [rbp - 0x128], rbx
0x400093:	mov	rbx, qword ptr [rbp - 0x128]
0x40009a:	test	rbx, rbx
0x40009d:	je	0x4000d5
<Block for 0x4000d5, 16 bytes>
0x4000d5:	nop	
0x4000d6:	mov	rax, qword ptr [rbp - 0x18]
0x4000da:	xor	rax, qword ptr fs:[0x28]
0x4000e3:	je	0x4000ea
<Block for 0x40009f, 8 bytes>
0x40009f:	mov	rdi, rbx
0x4000a2:	call	0x500010
<Block for 0x4000ea, 12 bytes>
0x4000ea:	add	rsp, 0x120
0x4000f1:	pop	rbx
0x4000f2:	pop	r12
0x4000f4:	pop	rbp
0x4000f5:	ret	
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500028
<Block for 0x4000a7, 13 bytes>
0x4000a7:	mov	esi, 8
0x4000ac:	mov	rdi, rbx
0x4000af:	call	0x500018
<Block for 0x4000b4, 2 bytes>
0x4000b4:	jmp	0x4000d5
