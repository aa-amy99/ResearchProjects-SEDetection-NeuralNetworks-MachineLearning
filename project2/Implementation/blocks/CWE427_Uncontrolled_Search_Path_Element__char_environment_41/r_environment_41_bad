<Block for 0x40001f, 82 bytes>
0x40001f:	endbr64	
0x400023:	push	rbp
0x400024:	mov	rbp, rsp
0x400027:	sub	rsp, 0x130
0x40002e:	mov	rax, qword ptr fs:[0x28]
0x400037:	mov	qword ptr [rbp - 8], rax
0x40003b:	xor	eax, eax
0x40003d:	movabs	rax, 0x3d48544150
0x400047:	mov	edx, 0
0x40004c:	mov	qword ptr [rbp - 0x110], rax
0x400053:	mov	qword ptr [rbp - 0x108], rdx
0x40005a:	lea	rdx, [rbp - 0x100]
0x400061:	mov	eax, 0
0x400066:	mov	ecx, 0x1d
0x40006b:	mov	rdi, rdx
0x40006e:	rep stosq	qword ptr [rdi], rax
<Block for 0x400071, 39 bytes>
0x400071:	mov	rdx, rdi
0x400074:	mov	word ptr [rdx], ax
0x400077:	add	rdx, 2
0x40007b:	lea	rax, [rbp - 0x110]
0x400082:	mov	qword ptr [rbp - 0x128], rax
0x400089:	mov	rax, qword ptr [rbp - 0x128]
0x400090:	mov	rdi, rax
0x400093:	call	0x500008
<Block for 0x40006e, 3 bytes>
0x40006e:	rep stosq	qword ptr [rdi], rax
<Block for 0x400098, 19 bytes>
0x400098:	mov	qword ptr [rbp - 0x120], rax
0x40009f:	lea	rdi, [rip + 0x16b]
0x4000a6:	call	0x500010
<Block for 0x4000ab, 17 bytes>
0x4000ab:	mov	qword ptr [rbp - 0x118], rax
0x4000b2:	cmp	qword ptr [rbp - 0x118], 0
0x4000ba:	je	0x4000ee
<Block for 0x4000ee, 15 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0x128]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x400000
<Block for 0x4000bc, 50 bytes>
0x4000bc:	mov	eax, 0xf9
0x4000c1:	sub	rax, qword ptr [rbp - 0x120]
0x4000c8:	mov	rdx, rax
0x4000cb:	mov	rcx, qword ptr [rbp - 0x128]
0x4000d2:	mov	rax, qword ptr [rbp - 0x120]
0x4000d9:	add	rcx, rax
0x4000dc:	mov	rax, qword ptr [rbp - 0x118]
0x4000e3:	mov	rsi, rax
0x4000e6:	mov	rdi, rcx
0x4000e9:	call	0x500018
<Block for 0x4000fd, 16 bytes>
0x4000fd:	nop	
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	xor	rax, qword ptr fs:[0x28]
0x40010b:	je	0x400112
<Block for 0x400112, 2 bytes>
0x400112:	leave	
0x400113:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500020
