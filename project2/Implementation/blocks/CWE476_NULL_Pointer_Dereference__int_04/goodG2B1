<Block for 0x4000da, 43 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0x20
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	dword ptr [rbp - 0x14], 5
0x4000fc:	mov	eax, 0
0x400101:	test	eax, eax
0x400103:	je	0x400113
<Block for 0x400113, 17 bytes>
0x400113:	lea	rax, [rbp - 0x14]
0x400117:	mov	qword ptr [rbp - 0x10], rax
0x40011b:	mov	eax, 1
0x400120:	test	eax, eax
0x400122:	je	0x400131
<Block for 0x400105, 12 bytes>
0x400105:	lea	rdi, [rip + 0xd8]
0x40010c:	call	0x500008
<Block for 0x400131, 16 bytes>
0x400131:	nop	
0x400132:	mov	rax, qword ptr [rbp - 8]
0x400136:	xor	rax, qword ptr fs:[0x28]
0x40013f:	je	0x400146
<Block for 0x400124, 13 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0x10]
0x400128:	mov	eax, dword ptr [rax]
0x40012a:	mov	edi, eax
0x40012c:	call	0x500000
<Block for 0x400111, 2 bytes>
0x400111:	jmp	0x40011b
<Block for 0x400146, 2 bytes>
0x400146:	leave	
0x400147:	ret	
<Block for 0x400141, 5 bytes>
0x400141:	call	0x500010
<Block for 0x40011b, 9 bytes>
0x40011b:	mov	eax, 1
0x400120:	test	eax, eax
0x400122:	je	0x400131
