<Block for 0x400148, 43 bytes>
0x400148:	endbr64	
0x40014c:	push	rbp
0x40014d:	mov	rbp, rsp
0x400150:	sub	rsp, 0x20
0x400154:	mov	rax, qword ptr fs:[0x28]
0x40015d:	mov	qword ptr [rbp - 8], rax
0x400161:	xor	eax, eax
0x400163:	mov	dword ptr [rbp - 0x14], 5
0x40016a:	mov	eax, 1
0x40016f:	test	eax, eax
0x400171:	je	0x40017b
<Block for 0x40017b, 9 bytes>
0x40017b:	mov	eax, 1
0x400180:	test	eax, eax
0x400182:	je	0x400191
<Block for 0x400173, 17 bytes>
0x400173:	lea	rax, [rbp - 0x14]
0x400177:	mov	qword ptr [rbp - 0x10], rax
0x40017b:	mov	eax, 1
0x400180:	test	eax, eax
0x400182:	je	0x400191
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x400184, 13 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0x10]
0x400188:	mov	eax, dword ptr [rax]
0x40018a:	mov	edi, eax
0x40018c:	call	0x500000
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500010
