<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	edi, 0x64
0x40002e:	call	0x500000
<Block for 0x400033, 32 bytes>
0x400033:	mov	qword ptr [rbp - 0xd8], rax
0x40003a:	mov	rax, qword ptr [rbp - 0xd8]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 57 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0xd8]
0x40005a:	add	rax, 0x63
0x40005e:	mov	byte ptr [rax], 0
0x400061:	mov	rax, qword ptr [rbp - 0xd8]
0x400068:	sub	rax, 8
0x40006c:	mov	qword ptr [rbp - 0xe0], rax
0x400073:	lea	rax, [rbp - 0xd0]
0x40007a:	mov	edx, 0xc7
0x40007f:	mov	esi, 0x43
0x400084:	mov	rdi, rax
0x400087:	call	0x500008
<Block for 0x40008c, 29 bytes>
0x40008c:	mov	byte ptr [rbp - 9], 0
0x400090:	mov	rdx, qword ptr [rbp - 0xe0]
0x400097:	lea	rax, [rbp - 0xd0]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500010
<Block for 0x4000a9, 15 bytes>
0x4000a9:	lea	rax, [rbp - 0xd0]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500018
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500020
