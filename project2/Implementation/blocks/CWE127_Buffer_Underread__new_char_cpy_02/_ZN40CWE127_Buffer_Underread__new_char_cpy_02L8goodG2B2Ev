<Block for 0x40019a, 51 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	sub	rsp, 0xe0
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 8], rax
0x4001b6:	xor	eax, eax
0x4001b8:	mov	qword ptr [rbp - 0xe0], 0
0x4001c3:	mov	edi, 0x64
0x4001c8:	call	0x500000
<Block for 0x4001cd, 32 bytes>
0x4001cd:	mov	qword ptr [rbp - 0xd8], rax
0x4001d4:	mov	rax, qword ptr [rbp - 0xd8]
0x4001db:	mov	edx, 0x63
0x4001e0:	mov	esi, 0x41
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500008
<Block for 0x4001ed, 53 bytes>
0x4001ed:	mov	rax, qword ptr [rbp - 0xd8]
0x4001f4:	add	rax, 0x63
0x4001f8:	mov	byte ptr [rax], 0
0x4001fb:	mov	rax, qword ptr [rbp - 0xd8]
0x400202:	mov	qword ptr [rbp - 0xe0], rax
0x400209:	lea	rax, [rbp - 0xd0]
0x400210:	mov	edx, 0xc7
0x400215:	mov	esi, 0x43
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500008
<Block for 0x400222, 29 bytes>
0x400222:	mov	byte ptr [rbp - 9], 0
0x400226:	mov	rdx, qword ptr [rbp - 0xe0]
0x40022d:	lea	rax, [rbp - 0xd0]
0x400234:	mov	rsi, rdx
0x400237:	mov	rdi, rax
0x40023a:	call	0x500010
<Block for 0x40023f, 15 bytes>
0x40023f:	lea	rax, [rbp - 0xd0]
0x400246:	mov	rdi, rax
0x400249:	call	0x500018
<Block for 0x40024e, 16 bytes>
0x40024e:	nop	
0x40024f:	mov	rax, qword ptr [rbp - 8]
0x400253:	xor	rax, qword ptr fs:[0x28]
0x40025c:	je	0x400263
<Block for 0x400263, 2 bytes>
0x400263:	leave	
0x400264:	ret	
<Block for 0x40025e, 5 bytes>
0x40025e:	call	0x500020
