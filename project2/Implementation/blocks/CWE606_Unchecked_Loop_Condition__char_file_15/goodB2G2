<Block for 0x400361, 159 bytes>
0x400361:	endbr64	
0x400365:	push	rbp
0x400366:	mov	rbp, rsp
0x400369:	sub	rsp, 0xa0
0x400370:	mov	rax, qword ptr fs:[0x28]
0x400379:	mov	qword ptr [rbp - 8], rax
0x40037d:	xor	eax, eax
0x40037f:	mov	qword ptr [rbp - 0x70], 0
0x400387:	mov	qword ptr [rbp - 0x68], 0
0x40038f:	mov	qword ptr [rbp - 0x60], 0
0x400397:	mov	qword ptr [rbp - 0x58], 0
0x40039f:	mov	qword ptr [rbp - 0x50], 0
0x4003a7:	mov	qword ptr [rbp - 0x48], 0
0x4003af:	mov	qword ptr [rbp - 0x40], 0
0x4003b7:	mov	qword ptr [rbp - 0x38], 0
0x4003bf:	mov	qword ptr [rbp - 0x30], 0
0x4003c7:	mov	qword ptr [rbp - 0x28], 0
0x4003cf:	mov	qword ptr [rbp - 0x20], 0
0x4003d7:	mov	qword ptr [rbp - 0x18], 0
0x4003df:	mov	dword ptr [rbp - 0x10], 0
0x4003e6:	lea	rax, [rbp - 0x70]
0x4003ea:	mov	qword ptr [rbp - 0x88], rax
0x4003f1:	mov	rax, qword ptr [rbp - 0x88]
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x500000
<Block for 0x400400, 19 bytes>
0x400400:	mov	qword ptr [rbp - 0x80], rax
0x400404:	mov	eax, 0x64
0x400409:	sub	rax, qword ptr [rbp - 0x80]
0x40040d:	cmp	rax, 1
0x400411:	jbe	0x40048c
<Block for 0x40048c, 35 bytes>
0x40048c:	nop	
0x40048d:	lea	rdx, [rbp - 0x94]
0x400494:	mov	rax, qword ptr [rbp - 0x88]
0x40049b:	lea	rsi, [rip + 0x2d0]
0x4004a2:	mov	rdi, rax
0x4004a5:	mov	eax, 0
0x4004aa:	call	0x500028
<Block for 0x400413, 19 bytes>
0x400413:	lea	rsi, [rip + 0x339]
0x40041a:	lea	rdi, [rip + 0x334]
0x400421:	call	0x500008
<Block for 0x4004af, 5 bytes>
0x4004af:	cmp	eax, 1
0x4004b2:	jne	0x400500
<Block for 0x400426, 11 bytes>
0x400426:	mov	qword ptr [rbp - 0x78], rax
0x40042a:	cmp	qword ptr [rbp - 0x78], 0
0x40042f:	je	0x40048c
<Block for 0x4004b4, 13 bytes>
0x4004b4:	mov	eax, dword ptr [rbp - 0x94]
0x4004ba:	cmp	eax, 0x270f
0x4004bf:	jg	0x400500
<Block for 0x400500, 17 bytes>
0x400500:	nop	
0x400501:	nop	
0x400502:	mov	rax, qword ptr [rbp - 8]
0x400506:	xor	rax, qword ptr fs:[0x28]
0x40050f:	je	0x400516
<Block for 0x400431, 45 bytes>
0x400431:	mov	rax, qword ptr [rbp - 0x80]
0x400435:	mov	edx, 0x64
0x40043a:	sub	edx, eax
0x40043c:	mov	eax, edx
0x40043e:	mov	esi, eax
0x400440:	mov	rdx, qword ptr [rbp - 0x88]
0x400447:	mov	rax, qword ptr [rbp - 0x80]
0x40044b:	lea	rcx, [rdx + rax]
0x40044f:	mov	rax, qword ptr [rbp - 0x78]
0x400453:	mov	rdx, rax
0x400456:	mov	rdi, rcx
0x400459:	call	0x500010
<Block for 0x4004c1, 22 bytes>
0x4004c1:	mov	dword ptr [rbp - 0x8c], 0
0x4004cb:	mov	dword ptr [rbp - 0x90], 0
0x4004d5:	jmp	0x4004e5
<Block for 0x400516, 2 bytes>
0x400516:	leave	
0x400517:	ret	
<Block for 0x400511, 5 bytes>
0x400511:	call	0x500038
<Block for 0x40045e, 5 bytes>
0x40045e:	test	rax, rax
0x400461:	jne	0x400480
<Block for 0x4004e5, 14 bytes>
0x4004e5:	mov	eax, dword ptr [rbp - 0x94]
0x4004eb:	cmp	dword ptr [rbp - 0x90], eax
0x4004f1:	jl	0x4004d7
<Block for 0x400463, 12 bytes>
0x400463:	lea	rdi, [rip + 0x2f9]
0x40046a:	call	0x500018
<Block for 0x400480, 12 bytes>
0x400480:	mov	rax, qword ptr [rbp - 0x78]
0x400484:	mov	rdi, rax
0x400487:	call	0x500020
<Block for 0x4004d7, 28 bytes>
0x4004d7:	add	dword ptr [rbp - 0x8c], 1
0x4004de:	add	dword ptr [rbp - 0x90], 1
0x4004e5:	mov	eax, dword ptr [rbp - 0x94]
0x4004eb:	cmp	dword ptr [rbp - 0x90], eax
0x4004f1:	jl	0x4004d7
<Block for 0x4004f3, 13 bytes>
0x4004f3:	mov	eax, dword ptr [rbp - 0x8c]
0x4004f9:	mov	edi, eax
0x4004fb:	call	0x500030
<Block for 0x40046f, 29 bytes>
0x40046f:	mov	rdx, qword ptr [rbp - 0x88]
0x400476:	mov	rax, qword ptr [rbp - 0x80]
0x40047a:	add	rax, rdx
0x40047d:	mov	byte ptr [rax], 0
0x400480:	mov	rax, qword ptr [rbp - 0x78]
0x400484:	mov	rdi, rax
0x400487:	call	0x500020
