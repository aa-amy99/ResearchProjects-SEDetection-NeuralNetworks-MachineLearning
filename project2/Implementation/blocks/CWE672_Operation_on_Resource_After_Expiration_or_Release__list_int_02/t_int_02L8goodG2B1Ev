<Block for 0x400419, 40 bytes>
0x400419:	endbr64	
0x40041d:	push	rbp
0x40041e:	mov	rbp, rsp
0x400421:	push	rbx
0x400422:	sub	rsp, 0x38
0x400426:	mov	rax, qword ptr fs:[0x28]
0x40042f:	mov	qword ptr [rbp - 0x18], rax
0x400433:	xor	eax, eax
0x400435:	lea	rax, [rbp - 0x30]
0x400439:	mov	rdi, rax
0x40043c:	call	0x400850
<Block for 0x400441, 26 bytes>
0x400441:	mov	dword ptr [rbp - 0x38], 0x64
0x400448:	lea	rdx, [rbp - 0x38]
0x40044c:	lea	rax, [rbp - 0x30]
0x400450:	mov	rsi, rdx
0x400453:	mov	rdi, rax
0x400456:	call	0x400956
<Block for 0x40045b, 26 bytes>
0x40045b:	mov	dword ptr [rbp - 0x38], 0xc8
0x400462:	lea	rdx, [rbp - 0x38]
0x400466:	lea	rax, [rbp - 0x30]
0x40046a:	mov	rsi, rdx
0x40046d:	mov	rdi, rax
0x400470:	call	0x400956
<Block for 0x400475, 12 bytes>
0x400475:	lea	rax, [rbp - 0x40]
0x400479:	mov	rdi, rax
0x40047c:	call	0x4009a4
<Block for 0x400481, 19 bytes>
0x400481:	lea	rsi, [rip + 0x31c]
0x400488:	lea	rdi, [rip + 0xffb71]
0x40048f:	call	0x500008
<Block for 0x400494, 12 bytes>
0x400494:	lea	rax, [rbp - 0x30]
0x400498:	mov	rdi, rax
0x40049b:	call	0x4009be
<Block for 0x4004a0, 16 bytes>
0x4004a0:	mov	qword ptr [rbp - 0x40], rax
0x4004a4:	lea	rax, [rbp - 0x30]
0x4004a8:	mov	rdi, rax
0x4004ab:	call	0x400a0e
<Block for 0x4004b0, 23 bytes>
0x4004b0:	mov	qword ptr [rbp - 0x38], rax
0x4004b4:	lea	rdx, [rbp - 0x38]
0x4004b8:	lea	rax, [rbp - 0x40]
0x4004bc:	mov	rsi, rdx
0x4004bf:	mov	rdi, rax
0x4004c2:	call	0x400a5a
<Block for 0x4004c7, 4 bytes>
0x4004c7:	test	al, al
0x4004c9:	je	0x400532
<Block for 0x400532, 22 bytes>
0x400532:	mov	rax, qword ptr [rip + 0xffae7]
0x400539:	mov	rsi, rax
0x40053c:	lea	rdi, [rip + 0xffabd]
0x400543:	call	0x500028
<Block for 0x4004cb, 12 bytes>
0x4004cb:	lea	rax, [rbp - 0x40]
0x4004cf:	mov	rdi, rax
0x4004d2:	call	0x400ad8
<Block for 0x400548, 12 bytes>
0x400548:	lea	rax, [rbp - 0x30]
0x40054c:	mov	rdi, rax
0x40054f:	call	0x400870
<Block for 0x4004d7, 11 bytes>
0x4004d7:	mov	eax, dword ptr [rax]
0x4004d9:	test	eax, eax
0x4004db:	sete	al
0x4004de:	test	al, al
0x4004e0:	je	0x4004ee
<Block for 0x400554, 16 bytes>
0x400554:	nop	
0x400555:	mov	rax, qword ptr [rbp - 0x18]
0x400559:	xor	rax, qword ptr fs:[0x28]
0x400562:	je	0x400589
<Block for 0x4004ee, 19 bytes>
0x4004ee:	lea	rsi, [rip + 0x2c3]
0x4004f5:	lea	rdi, [rip + 0xffb04]
0x4004fc:	call	0x500008
<Block for 0x4004e2, 12 bytes>
0x4004e2:	lea	rax, [rbp - 0x30]
0x4004e6:	mov	rdi, rax
0x4004e9:	call	0x400afa
<Block for 0x400589, 7 bytes>
0x400589:	add	rsp, 0x38
0x40058d:	pop	rbx
0x40058e:	pop	rbp
0x40058f:	ret	
<Block for 0x400564, 2 bytes>
0x400564:	jmp	0x400584
<Block for 0x400501, 15 bytes>
0x400501:	mov	rbx, rax
0x400504:	lea	rax, [rbp - 0x40]
0x400508:	mov	rdi, rax
0x40050b:	call	0x400ad8
<Block for 0x400584, 5 bytes>
0x400584:	call	0x500038
<Block for 0x400510, 12 bytes>
0x400510:	mov	eax, dword ptr [rax]
0x400512:	mov	esi, eax
0x400514:	mov	rdi, rbx
0x400517:	call	0x500010
<Block for 0x40051c, 17 bytes>
0x40051c:	lea	rax, [rbp - 0x40]
0x400520:	mov	esi, 0
0x400525:	mov	rdi, rax
0x400528:	call	0x400a80
<Block for 0x40052d, 5 bytes>
0x40052d:	jmp	0x4004a4
<Block for 0x4004a4, 12 bytes>
0x4004a4:	lea	rax, [rbp - 0x30]
0x4004a8:	mov	rdi, rax
0x4004ab:	call	0x400a0e
