<Block for 0x4000e1, 37 bytes>
0x4000e1:	endbr64	
0x4000e5:	push	rbp
0x4000e6:	mov	rbp, rsp
0x4000e9:	sub	rsp, 0x20
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	xor	eax, eax
0x4000fc:	mov	eax, dword ptr [rip + 0x246]
0x400102:	test	eax, eax
0x400104:	je	0x400117
<Block for 0x400117, 54 bytes>
0x400117:	mov	eax, 0x10
0x40011c:	sub	rax, 1
0x400120:	add	rax, 0x10
0x400124:	mov	esi, 0x10
0x400129:	mov	edx, 0
0x40012e:	div	rsi
0x400131:	imul	rax, rax, 0x10
0x400135:	mov	rdx, rax
0x400138:	and	rdx, 0xfffffffffffff000
0x40013f:	mov	rcx, rsp
0x400142:	sub	rcx, rdx
0x400145:	mov	rdx, rcx
0x400148:	cmp	rsp, rdx
0x40014b:	je	0x40015f
<Block for 0x400106, 12 bytes>
0x400106:	lea	rdi, [rip + 0x243]
0x40010d:	call	0x500010
<Block for 0x40015f, 26 bytes>
0x40015f:	mov	rdx, rax
0x400162:	and	edx, 0xfff
0x400168:	sub	rsp, rdx
0x40016b:	mov	rdx, rax
0x40016e:	and	edx, 0xfff
0x400174:	test	rdx, rdx
0x400177:	je	0x400189
<Block for 0x40014d, 18 bytes>
0x40014d:	sub	rsp, 0x1000
0x400154:	or	qword ptr [rsp + 0xff8], 0
0x40015d:	jmp	0x400148
<Block for 0x400112, 5 bytes>
0x400112:	jmp	0x4001f2
<Block for 0x400189, 29 bytes>
0x400189:	mov	rax, rsp
0x40018c:	add	rax, 0xf
0x400190:	shr	rax, 4
0x400194:	shl	rax, 4
0x400198:	mov	qword ptr [rbp - 0x20], rax
0x40019c:	mov	edi, 8
0x4001a1:	call	0x500018
<Block for 0x400179, 45 bytes>
0x400179:	and	eax, 0xfff
0x40017e:	sub	rax, 8
0x400182:	add	rax, rsp
0x400185:	or	qword ptr [rax], 0
0x400189:	mov	rax, rsp
0x40018c:	add	rax, 0xf
0x400190:	shr	rax, 4
0x400194:	shl	rax, 4
0x400198:	mov	qword ptr [rbp - 0x20], rax
0x40019c:	mov	edi, 8
0x4001a1:	call	0x500018
<Block for 0x400148, 5 bytes>
0x400148:	cmp	rsp, rdx
0x40014b:	je	0x40015f
<Block for 0x4001f2, 16 bytes>
0x4001f2:	nop	
0x4001f3:	mov	rax, qword ptr [rbp - 8]
0x4001f7:	xor	rax, qword ptr fs:[0x28]
0x400200:	je	0x400207
<Block for 0x4001a6, 11 bytes>
0x4001a6:	mov	qword ptr [rbp - 0x18], rax
0x4001aa:	cmp	qword ptr [rbp - 0x18], 0
0x4001af:	jne	0x4001bb
<Block for 0x400207, 2 bytes>
0x400207:	leave	
0x400208:	ret	
<Block for 0x400202, 5 bytes>
0x400202:	call	0x500008
<Block for 0x4001b1, 10 bytes>
0x4001b1:	mov	edi, 0xffffffff
0x4001b6:	call	0x500020
<Block for 0x4001bb, 55 bytes>
0x4001bb:	mov	rax, qword ptr [rbp - 0x18]
0x4001bf:	movsd	xmm0, qword ptr [rip + 0x1a1]
0x4001c7:	movsd	qword ptr [rax], xmm0
0x4001cb:	mov	rax, qword ptr [rbp - 0x20]
0x4001cf:	mov	rdx, qword ptr [rbp - 0x18]
0x4001d3:	mov	qword ptr [rax], rdx
0x4001d6:	mov	rax, qword ptr [rbp - 0x20]
0x4001da:	mov	rax, qword ptr [rax]
0x4001dd:	mov	qword ptr [rbp - 0x10], rax
0x4001e1:	mov	rax, qword ptr [rbp - 0x10]
0x4001e5:	mov	rax, qword ptr [rax]
0x4001e8:	movq	xmm0, rax
0x4001ed:	call	0x500000
