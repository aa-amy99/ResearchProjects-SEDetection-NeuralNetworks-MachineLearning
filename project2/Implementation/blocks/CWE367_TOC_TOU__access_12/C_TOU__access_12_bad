<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400170
<Block for 0x400170, 134 bytes>
0x400170:	mov	qword ptr [rbp - 0x70], 0
0x400178:	mov	qword ptr [rbp - 0x68], 0
0x400180:	mov	qword ptr [rbp - 0x60], 0
0x400188:	mov	qword ptr [rbp - 0x58], 0
0x400190:	mov	qword ptr [rbp - 0x50], 0
0x400198:	mov	qword ptr [rbp - 0x48], 0
0x4001a0:	mov	qword ptr [rbp - 0x40], 0
0x4001a8:	mov	qword ptr [rbp - 0x38], 0
0x4001b0:	mov	qword ptr [rbp - 0x30], 0
0x4001b8:	mov	qword ptr [rbp - 0x28], 0
0x4001c0:	mov	qword ptr [rbp - 0x20], 0
0x4001c8:	mov	qword ptr [rbp - 0x18], 0
0x4001d0:	mov	dword ptr [rbp - 0x10], 0
0x4001d7:	mov	dword ptr [rbp - 0x78], 0xffffffff
0x4001de:	mov	rdx, qword ptr [rip + 0xffe23]
0x4001e5:	lea	rax, [rbp - 0x70]
0x4001e9:	mov	esi, 0x64
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x500010
<Block for 0x40002d, 134 bytes>
0x40002d:	mov	qword ptr [rbp - 0x70], 0
0x400035:	mov	qword ptr [rbp - 0x68], 0
0x40003d:	mov	qword ptr [rbp - 0x60], 0
0x400045:	mov	qword ptr [rbp - 0x58], 0
0x40004d:	mov	qword ptr [rbp - 0x50], 0
0x400055:	mov	qword ptr [rbp - 0x48], 0
0x40005d:	mov	qword ptr [rbp - 0x40], 0
0x400065:	mov	qword ptr [rbp - 0x38], 0
0x40006d:	mov	qword ptr [rbp - 0x30], 0
0x400075:	mov	qword ptr [rbp - 0x28], 0
0x40007d:	mov	qword ptr [rbp - 0x20], 0
0x400085:	mov	qword ptr [rbp - 0x18], 0
0x40008d:	mov	dword ptr [rbp - 0x10], 0
0x400094:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x40009b:	mov	rdx, qword ptr [rip + 0xfff66]
0x4000a2:	lea	rax, [rbp - 0x70]
0x4000a6:	mov	esi, 0x64
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500010
<Block for 0x4001f6, 5 bytes>
0x4001f6:	test	rax, rax
0x4001f9:	jne	0x40020b
<Block for 0x4000b3, 5 bytes>
0x4000b3:	test	rax, rax
0x4000b6:	jne	0x4000c8
<Block for 0x4001fb, 12 bytes>
0x4001fb:	lea	rdi, [rip + 0x335]
0x400202:	call	0x500018
<Block for 0x40020b, 11 bytes>
0x40020b:	lea	rax, [rbp - 0x70]
0x40020f:	movzx	eax, byte ptr [rax]
0x400212:	test	al, al
0x400214:	je	0x40022b
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rdi, [rip + 0x478]
0x4000bf:	call	0x500018
<Block for 0x4000c8, 11 bytes>
0x4000c8:	lea	rax, [rbp - 0x70]
0x4000cc:	movzx	eax, byte ptr [rax]
0x4000cf:	test	al, al
0x4000d1:	je	0x4000e8
<Block for 0x400207, 15 bytes>
0x400207:	mov	byte ptr [rbp - 0x70], 0
0x40020b:	lea	rax, [rbp - 0x70]
0x40020f:	movzx	eax, byte ptr [rax]
0x400212:	test	al, al
0x400214:	je	0x40022b
<Block for 0x40022b, 22 bytes>
0x40022b:	lea	rax, [rbp - 0x70]
0x40022f:	mov	esi, 2
0x400234:	mov	rdi, rax
0x400237:	mov	eax, 0
0x40023c:	call	0x500038
<Block for 0x400216, 12 bytes>
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500020
<Block for 0x4000c4, 15 bytes>
0x4000c4:	mov	byte ptr [rbp - 0x70], 0
0x4000c8:	lea	rax, [rbp - 0x70]
0x4000cc:	movzx	eax, byte ptr [rax]
0x4000cf:	test	al, al
0x4000d1:	je	0x4000e8
<Block for 0x4000e8, 17 bytes>
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	esi, 2
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500028
<Block for 0x4000d3, 12 bytes>
0x4000d3:	lea	rax, [rbp - 0x70]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x500020
<Block for 0x400241, 9 bytes>
0x400241:	mov	dword ptr [rbp - 0x78], eax
0x400244:	cmp	dword ptr [rbp - 0x78], -1
0x400248:	jne	0x400254
<Block for 0x400222, 31 bytes>
0x400222:	sub	rax, 1
0x400226:	mov	byte ptr [rbp + rax - 0x70], 0
0x40022b:	lea	rax, [rbp - 0x70]
0x40022f:	mov	esi, 2
0x400234:	mov	rdi, rax
0x400237:	mov	eax, 0
0x40023c:	call	0x500038
<Block for 0x4000f9, 5 bytes>
0x4000f9:	cmp	eax, -1
0x4000fc:	jne	0x400108
<Block for 0x4000df, 26 bytes>
0x4000df:	sub	rax, 1
0x4000e3:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	esi, 2
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500028
<Block for 0x40024a, 10 bytes>
0x40024a:	mov	edi, 1
0x40024f:	call	0x500030
<Block for 0x400254, 22 bytes>
0x400254:	mov	eax, dword ptr [rbp - 0x78]
0x400257:	mov	edx, 0xc
0x40025c:	lea	rsi, [rip + 0x2ef]
0x400263:	mov	edi, eax
0x400265:	call	0x500040
<Block for 0x4000fe, 10 bytes>
0x4000fe:	mov	edi, 1
0x400103:	call	0x500030
<Block for 0x400108, 22 bytes>
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	esi, 2
0x400111:	mov	rdi, rax
0x400114:	mov	eax, 0
0x400119:	call	0x500038
<Block for 0x40026a, 6 bytes>
0x40026a:	cmp	rax, -1
0x40026e:	jne	0x40027a
<Block for 0x40011e, 9 bytes>
0x40011e:	mov	dword ptr [rbp - 0x74], eax
0x400121:	cmp	dword ptr [rbp - 0x74], -1
0x400125:	jne	0x400131
<Block for 0x400270, 10 bytes>
0x400270:	mov	edi, 1
0x400275:	call	0x500030
<Block for 0x40027a, 6 bytes>
0x40027a:	cmp	dword ptr [rbp - 0x78], -1
0x40027e:	je	0x40028a
<Block for 0x400127, 10 bytes>
0x400127:	mov	edi, 1
0x40012c:	call	0x500030
<Block for 0x400131, 22 bytes>
0x400131:	mov	eax, dword ptr [rbp - 0x74]
0x400134:	mov	edx, 0xb
0x400139:	lea	rsi, [rip + 0x406]
0x400140:	mov	edi, eax
0x400142:	call	0x500040
<Block for 0x40028a, 16 bytes>
0x40028a:	nop	
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	xor	rax, qword ptr fs:[0x28]
0x400298:	je	0x40029f
<Block for 0x400280, 10 bytes>
0x400280:	mov	eax, dword ptr [rbp - 0x78]
0x400283:	mov	edi, eax
0x400285:	call	0x500048
<Block for 0x400147, 6 bytes>
0x400147:	cmp	rax, -1
0x40014b:	jne	0x400157
<Block for 0x40029f, 2 bytes>
0x40029f:	leave	
0x4002a0:	ret	
<Block for 0x40029a, 5 bytes>
0x40029a:	call	0x500050
<Block for 0x40014d, 10 bytes>
0x40014d:	mov	edi, 1
0x400152:	call	0x500030
<Block for 0x400157, 10 bytes>
0x400157:	cmp	dword ptr [rbp - 0x74], -1
0x40015b:	je	0x40028a
<Block for 0x400161, 10 bytes>
0x400161:	mov	eax, dword ptr [rbp - 0x74]
0x400164:	mov	edi, eax
0x400166:	call	0x500048
<Block for 0x40016b, 5 bytes>
0x40016b:	jmp	0x40028a
