<Block for 0x4002a1, 37 bytes>
0x4002a1:	endbr64	
0x4002a5:	push	rbp
0x4002a6:	mov	rbp, rsp
0x4002a9:	add	rsp, -0x80
0x4002ad:	mov	rax, qword ptr fs:[0x28]
0x4002b6:	mov	qword ptr [rbp - 8], rax
0x4002ba:	xor	eax, eax
0x4002bc:	mov	eax, 0
0x4002c1:	call	0x500000
<Block for 0x4002c6, 8 bytes>
0x4002c6:	test	eax, eax
0x4002c8:	je	0x4003f1
<Block for 0x4003f1, 134 bytes>
0x4003f1:	mov	qword ptr [rbp - 0x70], 0
0x4003f9:	mov	qword ptr [rbp - 0x68], 0
0x400401:	mov	qword ptr [rbp - 0x60], 0
0x400409:	mov	qword ptr [rbp - 0x58], 0
0x400411:	mov	qword ptr [rbp - 0x50], 0
0x400419:	mov	qword ptr [rbp - 0x48], 0
0x400421:	mov	qword ptr [rbp - 0x40], 0
0x400429:	mov	qword ptr [rbp - 0x38], 0
0x400431:	mov	qword ptr [rbp - 0x30], 0
0x400439:	mov	qword ptr [rbp - 0x28], 0
0x400441:	mov	qword ptr [rbp - 0x20], 0
0x400449:	mov	qword ptr [rbp - 0x18], 0
0x400451:	mov	dword ptr [rbp - 0x10], 0
0x400458:	mov	dword ptr [rbp - 0x78], 0xffffffff
0x40045f:	mov	rdx, qword ptr [rip + 0xffba2]
0x400466:	lea	rax, [rbp - 0x70]
0x40046a:	mov	esi, 0x64
0x40046f:	mov	rdi, rax
0x400472:	call	0x500010
<Block for 0x4002ce, 134 bytes>
0x4002ce:	mov	qword ptr [rbp - 0x70], 0
0x4002d6:	mov	qword ptr [rbp - 0x68], 0
0x4002de:	mov	qword ptr [rbp - 0x60], 0
0x4002e6:	mov	qword ptr [rbp - 0x58], 0
0x4002ee:	mov	qword ptr [rbp - 0x50], 0
0x4002f6:	mov	qword ptr [rbp - 0x48], 0
0x4002fe:	mov	qword ptr [rbp - 0x40], 0
0x400306:	mov	qword ptr [rbp - 0x38], 0
0x40030e:	mov	qword ptr [rbp - 0x30], 0
0x400316:	mov	qword ptr [rbp - 0x28], 0
0x40031e:	mov	qword ptr [rbp - 0x20], 0
0x400326:	mov	qword ptr [rbp - 0x18], 0
0x40032e:	mov	dword ptr [rbp - 0x10], 0
0x400335:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x40033c:	mov	rdx, qword ptr [rip + 0xffcc5]
0x400343:	lea	rax, [rbp - 0x70]
0x400347:	mov	esi, 0x64
0x40034c:	mov	rdi, rax
0x40034f:	call	0x500010
<Block for 0x400477, 5 bytes>
0x400477:	test	rax, rax
0x40047a:	jne	0x40048c
<Block for 0x400354, 5 bytes>
0x400354:	test	rax, rax
0x400357:	jne	0x400369
<Block for 0x40047c, 12 bytes>
0x40047c:	lea	rdi, [rip + 0xb4]
0x400483:	call	0x500018
<Block for 0x40048c, 11 bytes>
0x40048c:	lea	rax, [rbp - 0x70]
0x400490:	movzx	eax, byte ptr [rax]
0x400493:	test	al, al
0x400495:	je	0x4004ac
<Block for 0x400359, 12 bytes>
0x400359:	lea	rdi, [rip + 0x1d7]
0x400360:	call	0x500018
<Block for 0x400369, 11 bytes>
0x400369:	lea	rax, [rbp - 0x70]
0x40036d:	movzx	eax, byte ptr [rax]
0x400370:	test	al, al
0x400372:	je	0x400389
<Block for 0x400488, 15 bytes>
0x400488:	mov	byte ptr [rbp - 0x70], 0
0x40048c:	lea	rax, [rbp - 0x70]
0x400490:	movzx	eax, byte ptr [rax]
0x400493:	test	al, al
0x400495:	je	0x4004ac
<Block for 0x4004ac, 22 bytes>
0x4004ac:	lea	rax, [rbp - 0x70]
0x4004b0:	mov	esi, 2
0x4004b5:	mov	rdi, rax
0x4004b8:	mov	eax, 0
0x4004bd:	call	0x500038
<Block for 0x400497, 12 bytes>
0x400497:	lea	rax, [rbp - 0x70]
0x40049b:	mov	rdi, rax
0x40049e:	call	0x500020
<Block for 0x400365, 15 bytes>
0x400365:	mov	byte ptr [rbp - 0x70], 0
0x400369:	lea	rax, [rbp - 0x70]
0x40036d:	movzx	eax, byte ptr [rax]
0x400370:	test	al, al
0x400372:	je	0x400389
<Block for 0x400389, 22 bytes>
0x400389:	lea	rax, [rbp - 0x70]
0x40038d:	mov	esi, 2
0x400392:	mov	rdi, rax
0x400395:	mov	eax, 0
0x40039a:	call	0x500038
<Block for 0x400374, 12 bytes>
0x400374:	lea	rax, [rbp - 0x70]
0x400378:	mov	rdi, rax
0x40037b:	call	0x500020
<Block for 0x4004c2, 9 bytes>
0x4004c2:	mov	dword ptr [rbp - 0x78], eax
0x4004c5:	cmp	dword ptr [rbp - 0x78], -1
0x4004c9:	jne	0x4004d5
<Block for 0x4004a3, 31 bytes>
0x4004a3:	sub	rax, 1
0x4004a7:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004ac:	lea	rax, [rbp - 0x70]
0x4004b0:	mov	esi, 2
0x4004b5:	mov	rdi, rax
0x4004b8:	mov	eax, 0
0x4004bd:	call	0x500038
<Block for 0x40039f, 9 bytes>
0x40039f:	mov	dword ptr [rbp - 0x74], eax
0x4003a2:	cmp	dword ptr [rbp - 0x74], -1
0x4003a6:	jne	0x4003b2
<Block for 0x400380, 31 bytes>
0x400380:	sub	rax, 1
0x400384:	mov	byte ptr [rbp + rax - 0x70], 0
0x400389:	lea	rax, [rbp - 0x70]
0x40038d:	mov	esi, 2
0x400392:	mov	rdi, rax
0x400395:	mov	eax, 0
0x40039a:	call	0x500038
<Block for 0x4004cb, 10 bytes>
0x4004cb:	mov	edi, 1
0x4004d0:	call	0x500030
<Block for 0x4004d5, 22 bytes>
0x4004d5:	mov	eax, dword ptr [rbp - 0x78]
0x4004d8:	mov	edx, 0xc
0x4004dd:	lea	rsi, [rip + 0x6e]
0x4004e4:	mov	edi, eax
0x4004e6:	call	0x500040
<Block for 0x4003a8, 10 bytes>
0x4003a8:	mov	edi, 1
0x4003ad:	call	0x500030
<Block for 0x4003b2, 22 bytes>
0x4003b2:	mov	eax, dword ptr [rbp - 0x74]
0x4003b5:	mov	edx, 0xc
0x4003ba:	lea	rsi, [rip + 0x191]
0x4003c1:	mov	edi, eax
0x4003c3:	call	0x500040
<Block for 0x4004eb, 6 bytes>
0x4004eb:	cmp	rax, -1
0x4004ef:	jne	0x4004fb
<Block for 0x4003c8, 6 bytes>
0x4003c8:	cmp	rax, -1
0x4003cc:	jne	0x4003d8
<Block for 0x4004f1, 10 bytes>
0x4004f1:	mov	edi, 1
0x4004f6:	call	0x500030
<Block for 0x4004fb, 6 bytes>
0x4004fb:	cmp	dword ptr [rbp - 0x78], -1
0x4004ff:	je	0x40050b
<Block for 0x4003ce, 10 bytes>
0x4003ce:	mov	edi, 1
0x4003d3:	call	0x500030
<Block for 0x4003d8, 10 bytes>
0x4003d8:	cmp	dword ptr [rbp - 0x74], -1
0x4003dc:	je	0x40050b
<Block for 0x40050b, 16 bytes>
0x40050b:	nop	
0x40050c:	mov	rax, qword ptr [rbp - 8]
0x400510:	xor	rax, qword ptr fs:[0x28]
0x400519:	je	0x400520
<Block for 0x400501, 10 bytes>
0x400501:	mov	eax, dword ptr [rbp - 0x78]
0x400504:	mov	edi, eax
0x400506:	call	0x500048
<Block for 0x4003e2, 10 bytes>
0x4003e2:	mov	eax, dword ptr [rbp - 0x74]
0x4003e5:	mov	edi, eax
0x4003e7:	call	0x500048
<Block for 0x400520, 2 bytes>
0x400520:	leave	
0x400521:	ret	
<Block for 0x40051b, 5 bytes>
0x40051b:	call	0x500050
<Block for 0x4003ec, 5 bytes>
0x4003ec:	jmp	0x40050b
