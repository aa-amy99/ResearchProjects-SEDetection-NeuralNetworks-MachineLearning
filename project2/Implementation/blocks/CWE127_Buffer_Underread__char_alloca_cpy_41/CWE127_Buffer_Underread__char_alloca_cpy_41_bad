<Block for 0x400081, 81 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x20
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	mov	eax, 0x10
0x4000a1:	sub	rax, 1
0x4000a5:	add	rax, 0x6c
0x4000a9:	mov	esi, 0x10
0x4000ae:	mov	edx, 0
0x4000b3:	div	rsi
0x4000b6:	imul	rax, rax, 0x10
0x4000ba:	mov	rdx, rax
0x4000bd:	and	rdx, 0xfffffffffffff000
0x4000c4:	mov	rcx, rsp
0x4000c7:	sub	rcx, rdx
0x4000ca:	mov	rdx, rcx
0x4000cd:	cmp	rsp, rdx
0x4000d0:	je	0x4000e4
<Block for 0x4000e4, 26 bytes>
0x4000e4:	mov	rdx, rax
0x4000e7:	and	edx, 0xfff
0x4000ed:	sub	rsp, rdx
0x4000f0:	mov	rdx, rax
0x4000f3:	and	edx, 0xfff
0x4000f9:	test	rdx, rdx
0x4000fc:	je	0x40010e
<Block for 0x4000d2, 18 bytes>
0x4000d2:	sub	rsp, 0x1000
0x4000d9:	or	qword ptr [rsp + 0xff8], 0
0x4000e2:	jmp	0x4000cd
<Block for 0x40010e, 41 bytes>
0x40010e:	mov	rax, rsp
0x400111:	add	rax, 0xf
0x400115:	shr	rax, 4
0x400119:	shl	rax, 4
0x40011d:	mov	qword ptr [rbp - 0x18], rax
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	mov	edx, 0x63
0x40012a:	mov	esi, 0x41
0x40012f:	mov	rdi, rax
0x400132:	call	0x500000
<Block for 0x4000fe, 57 bytes>
0x4000fe:	and	eax, 0xfff
0x400103:	sub	rax, 8
0x400107:	add	rax, rsp
0x40010a:	or	qword ptr [rax], 0
0x40010e:	mov	rax, rsp
0x400111:	add	rax, 0xf
0x400115:	shr	rax, 4
0x400119:	shl	rax, 4
0x40011d:	mov	qword ptr [rbp - 0x18], rax
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	mov	edx, 0x63
0x40012a:	mov	esi, 0x41
0x40012f:	mov	rdi, rax
0x400132:	call	0x500000
<Block for 0x4000cd, 5 bytes>
0x4000cd:	cmp	rsp, rdx
0x4000d0:	je	0x4000e4
<Block for 0x400137, 35 bytes>
0x400137:	mov	rax, qword ptr [rbp - 0x18]
0x40013b:	add	rax, 0x63
0x40013f:	mov	byte ptr [rax], 0
0x400142:	mov	rax, qword ptr [rbp - 0x18]
0x400146:	sub	rax, 8
0x40014a:	mov	qword ptr [rbp - 0x10], rax
0x40014e:	mov	rax, qword ptr [rbp - 0x10]
0x400152:	mov	rdi, rax
0x400155:	call	0x400000
<Block for 0x40015a, 16 bytes>
0x40015a:	nop	
0x40015b:	mov	rax, qword ptr [rbp - 8]
0x40015f:	xor	rax, qword ptr fs:[0x28]
0x400168:	je	0x40016f
<Block for 0x40016f, 2 bytes>
0x40016f:	leave	
0x400170:	ret	
<Block for 0x40016a, 5 bytes>
0x40016a:	call	0x500018
