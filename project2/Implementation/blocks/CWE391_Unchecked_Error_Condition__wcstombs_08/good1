<Block for 0x40009d, 37 bytes>
0x40009d:	endbr64	
0x4000a1:	push	rbp
0x4000a2:	mov	rbp, rsp
0x4000a5:	add	rsp, -0x80
0x4000a9:	mov	rax, qword ptr fs:[0x28]
0x4000b2:	mov	qword ptr [rbp - 8], rax
0x4000b6:	xor	eax, eax
0x4000b8:	mov	eax, 0
0x4000bd:	call	0x40000f
<Block for 0x4000c2, 4 bytes>
0x4000c2:	test	eax, eax
0x4000c4:	je	0x4000d4
<Block for 0x4000d4, 17 bytes>
0x4000d4:	mov	qword ptr [rbp - 0x78], 0
0x4000dc:	mov	byte ptr [rbp - 0x70], 0
0x4000e0:	call	0x500020
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rdi, [rip + 0x15f]
0x4000cd:	call	0x500010
<Block for 0x4000e5, 30 bytes>
0x4000e5:	mov	dword ptr [rax], 0
0x4000eb:	lea	rax, [rbp - 0x70]
0x4000ef:	mov	edx, 0x64
0x4000f4:	lea	rsi, [rip + 0x129]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500000
<Block for 0x4000d2, 2 bytes>
0x4000d2:	jmp	0x400140
<Block for 0x400103, 9 bytes>
0x400103:	mov	qword ptr [rbp - 0x78], rax
0x400107:	call	0x500020
<Block for 0x400140, 16 bytes>
0x400140:	nop	
0x400141:	mov	rax, qword ptr [rbp - 8]
0x400145:	xor	rax, qword ptr fs:[0x28]
0x40014e:	je	0x400155
<Block for 0x40010c, 7 bytes>
0x40010c:	mov	eax, dword ptr [rax]
0x40010e:	cmp	eax, 0x54
0x400111:	jne	0x400129
<Block for 0x400155, 2 bytes>
0x400155:	leave	
0x400156:	ret	
<Block for 0x400150, 5 bytes>
0x400150:	call	0x500018
<Block for 0x400113, 12 bytes>
0x400113:	lea	rdi, [rip + 0x127]
0x40011a:	call	0x500010
<Block for 0x400129, 11 bytes>
0x400129:	mov	rax, qword ptr [rbp - 0x78]
0x40012d:	mov	edi, eax
0x40012f:	call	0x500008
<Block for 0x40011f, 10 bytes>
0x40011f:	mov	edi, 1
0x400124:	call	0x500028
<Block for 0x400134, 12 bytes>
0x400134:	lea	rax, [rbp - 0x70]
0x400138:	mov	rdi, rax
0x40013b:	call	0x500010
