<Block for 0x40007f, 18 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	mov	eax, 0
0x40008c:	call	0x500000
<Block for 0x400091, 4 bytes>
0x400091:	test	eax, eax
0x400093:	je	0x4000c9
<Block for 0x4000c9, 34 bytes>
0x4000c9:	mov	rax, qword ptr [rip + 0xfff38]
0x4000d0:	lea	rdx, [rip + 0x3c]
0x4000d7:	lea	rsi, [rip + 0x3c]
0x4000de:	mov	rdi, rax
0x4000e1:	mov	eax, 0
0x4000e6:	call	0x500010
<Block for 0x400095, 34 bytes>
0x400095:	mov	rax, qword ptr [rip + 0xfff6c]
0x40009c:	lea	rdx, [rip + 0x70]
0x4000a3:	lea	rsi, [rip + 0x70]
0x4000aa:	mov	rdi, rax
0x4000ad:	mov	eax, 0
0x4000b2:	call	0x500010
<Block for 0x4000eb, 4 bytes>
0x4000eb:	test	eax, eax
0x4000ed:	jns	0x4000fb
<Block for 0x4000b7, 4 bytes>
0x4000b7:	test	eax, eax
0x4000b9:	jns	0x4000fb
<Block for 0x4000ef, 12 bytes>
0x4000ef:	lea	rdi, [rip + 0x28]
0x4000f6:	call	0x500018
<Block for 0x4000fb, 3 bytes>
0x4000fb:	nop	
0x4000fc:	pop	rbp
0x4000fd:	ret	
<Block for 0x4000bb, 12 bytes>
0x4000bb:	lea	rdi, [rip + 0x5c]
0x4000c2:	call	0x500018
<Block for 0x4000c7, 2 bytes>
0x4000c7:	jmp	0x4000fb
