<Block for 0x400000, 18 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	mov	eax, 0
0x40000d:	call	0x500000
<Block for 0x400012, 4 bytes>
0x400012:	test	eax, eax
0x400014:	je	0x40004a
<Block for 0x40004a, 34 bytes>
0x40004a:	mov	rax, qword ptr [rip + 0xfffb7]
0x400051:	lea	rdx, [rip + 0xbb]
0x400058:	lea	rsi, [rip + 0xbb]
0x40005f:	mov	rdi, rax
0x400062:	mov	eax, 0
0x400067:	call	0x500010
<Block for 0x400016, 34 bytes>
0x400016:	mov	rax, qword ptr [rip + 0xfffeb]
0x40001d:	lea	rdx, [rip + 0xef]
0x400024:	lea	rsi, [rip + 0xef]
0x40002b:	mov	rdi, rax
0x40002e:	mov	eax, 0
0x400033:	call	0x500010
<Block for 0x40006c, 4 bytes>
0x40006c:	test	eax, eax
0x40006e:	jns	0x40007c
<Block for 0x400038, 4 bytes>
0x400038:	test	eax, eax
0x40003a:	jne	0x40007c
<Block for 0x400070, 12 bytes>
0x400070:	lea	rdi, [rip + 0xa7]
0x400077:	call	0x500018
<Block for 0x40007c, 3 bytes>
0x40007c:	nop	
0x40007d:	pop	rbp
0x40007e:	ret	
<Block for 0x40003c, 12 bytes>
0x40003c:	lea	rdi, [rip + 0xdb]
0x400043:	call	0x500018
<Block for 0x400048, 2 bytes>
0x400048:	jmp	0x40007c
