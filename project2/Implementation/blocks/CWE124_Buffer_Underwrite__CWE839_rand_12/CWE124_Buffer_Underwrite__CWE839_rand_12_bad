<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400023:	mov	eax, 0
0x400028:	call	0x500000
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	je	0x40007c
<Block for 0x40007c, 17 bytes>
0x40007c:	mov	dword ptr [rbp - 0x4c], 7
0x400083:	mov	eax, 0
0x400088:	call	0x500000
<Block for 0x400031, 5 bytes>
0x400031:	call	0x500008
<Block for 0x40008d, 4 bytes>
0x40008d:	test	eax, eax
0x40008f:	je	0x400102
<Block for 0x400036, 7 bytes>
0x400036:	and	eax, 1
0x400039:	test	eax, eax
0x40003b:	je	0x40005a
<Block for 0x400102, 46 bytes>
0x400102:	mov	qword ptr [rbp - 0x40], 0
0x40010a:	mov	qword ptr [rbp - 0x38], 0
0x400112:	mov	qword ptr [rbp - 0x30], 0
0x40011a:	mov	qword ptr [rbp - 0x28], 0
0x400122:	mov	qword ptr [rbp - 0x20], 0
0x40012a:	cmp	dword ptr [rbp - 0x4c], 0
0x40012e:	js	0x400168
<Block for 0x400091, 46 bytes>
0x400091:	mov	qword ptr [rbp - 0x40], 0
0x400099:	mov	qword ptr [rbp - 0x38], 0
0x4000a1:	mov	qword ptr [rbp - 0x30], 0
0x4000a9:	mov	qword ptr [rbp - 0x28], 0
0x4000b1:	mov	qword ptr [rbp - 0x20], 0
0x4000b9:	cmp	dword ptr [rbp - 0x4c], 9
0x4000bd:	jg	0x4000f4
<Block for 0x40005a, 5 bytes>
0x40005a:	call	0x500008
<Block for 0x40003d, 5 bytes>
0x40003d:	call	0x500008
<Block for 0x400168, 12 bytes>
0x400168:	lea	rdi, [rip + 0x381]
0x40016f:	call	0x500018
<Block for 0x400130, 6 bytes>
0x400130:	cmp	dword ptr [rbp - 0x4c], 9
0x400134:	jg	0x400168
<Block for 0x4000bf, 22 bytes>
0x4000bf:	mov	eax, dword ptr [rbp - 0x4c]
0x4000c2:	cdqe	
0x4000c4:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4000cc:	mov	dword ptr [rbp - 0x48], 0
0x4000d3:	jmp	0x4000e9
<Block for 0x4000f4, 12 bytes>
0x4000f4:	lea	rdi, [rip + 0x3d5]
0x4000fb:	call	0x500018
<Block for 0x40005f, 10 bytes>
0x40005f:	shl	eax, 0x1e
0x400062:	mov	ebx, eax
0x400064:	call	0x500008
<Block for 0x400042, 10 bytes>
0x400042:	shl	eax, 0x1e
0x400045:	mov	ebx, eax
0x400047:	call	0x500008
<Block for 0x400174, 2 bytes>
0x400174:	jmp	0x400176
<Block for 0x400136, 22 bytes>
0x400136:	mov	eax, dword ptr [rbp - 0x4c]
0x400139:	cdqe	
0x40013b:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400143:	mov	dword ptr [rbp - 0x44], 0
0x40014a:	jmp	0x400160
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x48], 9
0x4000ed:	jle	0x4000d5
<Block for 0x400100, 2 bytes>
0x400100:	jmp	0x400176
<Block for 0x400069, 10 bytes>
0x400069:	shl	eax, 0xf
0x40006c:	xor	ebx, eax
0x40006e:	call	0x500008
<Block for 0x40004c, 10 bytes>
0x40004c:	shl	eax, 0xf
0x40004f:	xor	ebx, eax
0x400051:	call	0x500008
<Block for 0x400176, 16 bytes>
0x400176:	nop	
0x400177:	mov	rax, qword ptr [rbp - 0x18]
0x40017b:	xor	rax, qword ptr fs:[0x28]
0x400184:	je	0x40018b
<Block for 0x400160, 6 bytes>
0x400160:	cmp	dword ptr [rbp - 0x44], 9
0x400164:	jle	0x40014c
<Block for 0x4000d5, 16 bytes>
0x4000d5:	mov	eax, dword ptr [rbp - 0x48]
0x4000d8:	cdqe	
0x4000da:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500010
<Block for 0x4000ef, 5 bytes>
0x4000ef:	jmp	0x400176
<Block for 0x400073, 9 bytes>
0x400073:	xor	eax, ebx
0x400075:	not	eax
0x400077:	mov	dword ptr [rbp - 0x4c], eax
0x40007a:	jmp	0x400083
<Block for 0x400056, 4 bytes>
0x400056:	xor	eax, ebx
0x400058:	jmp	0x400077
<Block for 0x40018b, 7 bytes>
0x40018b:	add	rsp, 0x48
0x40018f:	pop	rbx
0x400190:	pop	rbp
0x400191:	ret	
<Block for 0x400186, 5 bytes>
0x400186:	call	0x500020
<Block for 0x40014c, 16 bytes>
0x40014c:	mov	eax, dword ptr [rbp - 0x44]
0x40014f:	cdqe	
0x400151:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400155:	mov	edi, eax
0x400157:	call	0x500010
<Block for 0x400166, 2 bytes>
0x400166:	jmp	0x400176
<Block for 0x4000e5, 10 bytes>
0x4000e5:	add	dword ptr [rbp - 0x48], 1
0x4000e9:	cmp	dword ptr [rbp - 0x48], 9
0x4000ed:	jle	0x4000d5
<Block for 0x400083, 10 bytes>
0x400083:	mov	eax, 0
0x400088:	call	0x500000
<Block for 0x400077, 5 bytes>
0x400077:	mov	dword ptr [rbp - 0x4c], eax
0x40007a:	jmp	0x400083
<Block for 0x40015c, 10 bytes>
0x40015c:	add	dword ptr [rbp - 0x44], 1
0x400160:	cmp	dword ptr [rbp - 0x44], 9
0x400164:	jle	0x40014c
