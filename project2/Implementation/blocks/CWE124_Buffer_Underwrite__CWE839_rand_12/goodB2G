<Block for 0x400192, 45 bytes>
0x400192:	endbr64	
0x400196:	push	rbp
0x400197:	mov	rbp, rsp
0x40019a:	push	rbx
0x40019b:	sub	rsp, 0x48
0x40019f:	mov	rax, qword ptr fs:[0x28]
0x4001a8:	mov	qword ptr [rbp - 0x18], rax
0x4001ac:	xor	eax, eax
0x4001ae:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4001b5:	mov	eax, 0
0x4001ba:	call	0x500000
<Block for 0x4001bf, 4 bytes>
0x4001bf:	test	eax, eax
0x4001c1:	je	0x40020e
<Block for 0x40020e, 5 bytes>
0x40020e:	call	0x500008
<Block for 0x4001c3, 5 bytes>
0x4001c3:	call	0x500008
<Block for 0x400213, 7 bytes>
0x400213:	and	eax, 1
0x400216:	test	eax, eax
0x400218:	je	0x400237
<Block for 0x4001c8, 7 bytes>
0x4001c8:	and	eax, 1
0x4001cb:	test	eax, eax
0x4001cd:	je	0x4001ec
<Block for 0x400237, 5 bytes>
0x400237:	call	0x500008
<Block for 0x40021a, 5 bytes>
0x40021a:	call	0x500008
<Block for 0x4001ec, 5 bytes>
0x4001ec:	call	0x500008
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500008
<Block for 0x40023c, 10 bytes>
0x40023c:	shl	eax, 0x1e
0x40023f:	mov	ebx, eax
0x400241:	call	0x500008
<Block for 0x40021f, 10 bytes>
0x40021f:	shl	eax, 0x1e
0x400222:	mov	ebx, eax
0x400224:	call	0x500008
<Block for 0x4001f1, 10 bytes>
0x4001f1:	shl	eax, 0x1e
0x4001f4:	mov	ebx, eax
0x4001f6:	call	0x500008
<Block for 0x4001d4, 10 bytes>
0x4001d4:	shl	eax, 0x1e
0x4001d7:	mov	ebx, eax
0x4001d9:	call	0x500008
<Block for 0x400246, 10 bytes>
0x400246:	shl	eax, 0xf
0x400249:	xor	ebx, eax
0x40024b:	call	0x500008
<Block for 0x400229, 10 bytes>
0x400229:	shl	eax, 0xf
0x40022c:	xor	ebx, eax
0x40022e:	call	0x500008
<Block for 0x4001fb, 10 bytes>
0x4001fb:	shl	eax, 0xf
0x4001fe:	xor	ebx, eax
0x400200:	call	0x500008
<Block for 0x4001de, 10 bytes>
0x4001de:	shl	eax, 0xf
0x4001e1:	xor	ebx, eax
0x4001e3:	call	0x500008
<Block for 0x400250, 17 bytes>
0x400250:	xor	eax, ebx
0x400252:	not	eax
0x400254:	mov	dword ptr [rbp - 0x4c], eax
0x400257:	mov	eax, 0
0x40025c:	call	0x500000
<Block for 0x400233, 4 bytes>
0x400233:	xor	eax, ebx
0x400235:	jmp	0x400254
<Block for 0x400205, 9 bytes>
0x400205:	xor	eax, ebx
0x400207:	not	eax
0x400209:	mov	dword ptr [rbp - 0x4c], eax
0x40020c:	jmp	0x400257
<Block for 0x4001e8, 4 bytes>
0x4001e8:	xor	eax, ebx
0x4001ea:	jmp	0x400209
<Block for 0x400261, 4 bytes>
0x400261:	test	eax, eax
0x400263:	je	0x4002dc
<Block for 0x400254, 13 bytes>
0x400254:	mov	dword ptr [rbp - 0x4c], eax
0x400257:	mov	eax, 0
0x40025c:	call	0x500000
<Block for 0x400257, 10 bytes>
0x400257:	mov	eax, 0
0x40025c:	call	0x500000
<Block for 0x400209, 5 bytes>
0x400209:	mov	dword ptr [rbp - 0x4c], eax
0x40020c:	jmp	0x400257
<Block for 0x4002dc, 46 bytes>
0x4002dc:	mov	qword ptr [rbp - 0x40], 0
0x4002e4:	mov	qword ptr [rbp - 0x38], 0
0x4002ec:	mov	qword ptr [rbp - 0x30], 0
0x4002f4:	mov	qword ptr [rbp - 0x28], 0
0x4002fc:	mov	qword ptr [rbp - 0x20], 0
0x400304:	cmp	dword ptr [rbp - 0x4c], 0
0x400308:	js	0x400342
<Block for 0x400265, 46 bytes>
0x400265:	mov	qword ptr [rbp - 0x40], 0
0x40026d:	mov	qword ptr [rbp - 0x38], 0
0x400275:	mov	qword ptr [rbp - 0x30], 0
0x40027d:	mov	qword ptr [rbp - 0x28], 0
0x400285:	mov	qword ptr [rbp - 0x20], 0
0x40028d:	cmp	dword ptr [rbp - 0x4c], 0
0x400291:	js	0x4002ce
<Block for 0x400342, 12 bytes>
0x400342:	lea	rdi, [rip + 0x1a7]
0x400349:	call	0x500018
<Block for 0x40030a, 6 bytes>
0x40030a:	cmp	dword ptr [rbp - 0x4c], 9
0x40030e:	jg	0x400342
<Block for 0x4002ce, 12 bytes>
0x4002ce:	lea	rdi, [rip + 0x21b]
0x4002d5:	call	0x500018
<Block for 0x400293, 6 bytes>
0x400293:	cmp	dword ptr [rbp - 0x4c], 9
0x400297:	jg	0x4002ce
<Block for 0x40034e, 2 bytes>
0x40034e:	jmp	0x400350
<Block for 0x400310, 22 bytes>
0x400310:	mov	eax, dword ptr [rbp - 0x4c]
0x400313:	cdqe	
0x400315:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40031d:	mov	dword ptr [rbp - 0x44], 0
0x400324:	jmp	0x40033a
<Block for 0x4002da, 2 bytes>
0x4002da:	jmp	0x400350
<Block for 0x400299, 22 bytes>
0x400299:	mov	eax, dword ptr [rbp - 0x4c]
0x40029c:	cdqe	
0x40029e:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002a6:	mov	dword ptr [rbp - 0x48], 0
0x4002ad:	jmp	0x4002c3
<Block for 0x400350, 16 bytes>
0x400350:	nop	
0x400351:	mov	rax, qword ptr [rbp - 0x18]
0x400355:	xor	rax, qword ptr fs:[0x28]
0x40035e:	je	0x400365
<Block for 0x40033a, 6 bytes>
0x40033a:	cmp	dword ptr [rbp - 0x44], 9
0x40033e:	jle	0x400326
<Block for 0x4002c3, 6 bytes>
0x4002c3:	cmp	dword ptr [rbp - 0x48], 9
0x4002c7:	jle	0x4002af
<Block for 0x400365, 7 bytes>
0x400365:	add	rsp, 0x48
0x400369:	pop	rbx
0x40036a:	pop	rbp
0x40036b:	ret	
<Block for 0x400360, 5 bytes>
0x400360:	call	0x500020
<Block for 0x400326, 16 bytes>
0x400326:	mov	eax, dword ptr [rbp - 0x44]
0x400329:	cdqe	
0x40032b:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40032f:	mov	edi, eax
0x400331:	call	0x500010
<Block for 0x400340, 2 bytes>
0x400340:	jmp	0x400350
<Block for 0x4002af, 16 bytes>
0x4002af:	mov	eax, dword ptr [rbp - 0x48]
0x4002b2:	cdqe	
0x4002b4:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002b8:	mov	edi, eax
0x4002ba:	call	0x500010
<Block for 0x4002c9, 5 bytes>
0x4002c9:	jmp	0x400350
<Block for 0x400336, 10 bytes>
0x400336:	add	dword ptr [rbp - 0x44], 1
0x40033a:	cmp	dword ptr [rbp - 0x44], 9
0x40033e:	jle	0x400326
<Block for 0x4002bf, 10 bytes>
0x4002bf:	add	dword ptr [rbp - 0x48], 1
0x4002c3:	cmp	dword ptr [rbp - 0x48], 9
0x4002c7:	jle	0x4002af
