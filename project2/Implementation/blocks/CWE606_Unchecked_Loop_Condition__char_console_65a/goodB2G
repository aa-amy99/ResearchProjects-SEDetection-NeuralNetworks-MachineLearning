<Block for 0x400237, 167 bytes>
0x400237:	endbr64	
0x40023b:	push	rbp
0x40023c:	mov	rbp, rsp
0x40023f:	sub	rsp, 0x90
0x400246:	mov	rax, qword ptr fs:[0x28]
0x40024f:	mov	qword ptr [rbp - 8], rax
0x400253:	xor	eax, eax
0x400255:	mov	rax, qword ptr [rip + 0xffdf4]
0x40025c:	mov	qword ptr [rbp - 0x88], rax
0x400263:	mov	qword ptr [rbp - 0x70], 0
0x40026b:	mov	qword ptr [rbp - 0x68], 0
0x400273:	mov	qword ptr [rbp - 0x60], 0
0x40027b:	mov	qword ptr [rbp - 0x58], 0
0x400283:	mov	qword ptr [rbp - 0x50], 0
0x40028b:	mov	qword ptr [rbp - 0x48], 0
0x400293:	mov	qword ptr [rbp - 0x40], 0
0x40029b:	mov	qword ptr [rbp - 0x38], 0
0x4002a3:	mov	qword ptr [rbp - 0x30], 0
0x4002ab:	mov	qword ptr [rbp - 0x28], 0
0x4002b3:	mov	qword ptr [rbp - 0x20], 0
0x4002bb:	mov	qword ptr [rbp - 0x18], 0
0x4002c3:	mov	dword ptr [rbp - 0x10], 0
0x4002ca:	lea	rax, [rbp - 0x70]
0x4002ce:	mov	qword ptr [rbp - 0x80], rax
0x4002d2:	mov	rax, qword ptr [rbp - 0x80]
0x4002d6:	mov	rdi, rax
0x4002d9:	call	0x500010
<Block for 0x4002de, 23 bytes>
0x4002de:	mov	qword ptr [rbp - 0x78], rax
0x4002e2:	mov	eax, 0x64
0x4002e7:	sub	rax, qword ptr [rbp - 0x78]
0x4002eb:	cmp	rax, 1
0x4002ef:	jbe	0x400381
<Block for 0x400381, 16 bytes>
0x400381:	mov	rax, qword ptr [rbp - 0x80]
0x400385:	mov	rdx, qword ptr [rbp - 0x88]
0x40038c:	mov	rdi, rax
0x40038f:	call	rdx
<Block for 0x4002f5, 44 bytes>
0x4002f5:	mov	rax, qword ptr [rip + 0xffd1c]
0x4002fc:	mov	rdx, qword ptr [rbp - 0x78]
0x400300:	mov	ecx, 0x64
0x400305:	sub	ecx, edx
0x400307:	mov	edx, ecx
0x400309:	mov	esi, edx
0x40030b:	mov	rcx, qword ptr [rbp - 0x80]
0x40030f:	mov	rdx, qword ptr [rbp - 0x78]
0x400313:	add	rcx, rdx
0x400316:	mov	rdx, rax
0x400319:	mov	rdi, rcx
0x40031c:	call	0x500020
<Block for 0x400391, 16 bytes>
0x400391:	nop	
0x400392:	mov	rax, qword ptr [rbp - 8]
0x400396:	xor	rax, qword ptr fs:[0x28]
0x40039f:	je	0x4003a6
<Block for 0x400321, 5 bytes>
0x400321:	test	rax, rax
0x400324:	je	0x400367
<Block for 0x4003a6, 2 bytes>
0x4003a6:	leave	
0x4003a7:	ret	
<Block for 0x4003a1, 5 bytes>
0x4003a1:	call	0x500030
<Block for 0x400367, 12 bytes>
0x400367:	lea	rdi, [rip + 0x59]
0x40036e:	call	0x500028
<Block for 0x400326, 12 bytes>
0x400326:	mov	rax, qword ptr [rbp - 0x80]
0x40032a:	mov	rdi, rax
0x40032d:	call	0x500010
<Block for 0x400373, 30 bytes>
0x400373:	mov	rdx, qword ptr [rbp - 0x80]
0x400377:	mov	rax, qword ptr [rbp - 0x78]
0x40037b:	add	rax, rdx
0x40037e:	mov	byte ptr [rax], 0
0x400381:	mov	rax, qword ptr [rbp - 0x80]
0x400385:	mov	rdx, qword ptr [rbp - 0x88]
0x40038c:	mov	rdi, rax
0x40038f:	call	rdx
<Block for 0x400332, 11 bytes>
0x400332:	mov	qword ptr [rbp - 0x78], rax
0x400336:	cmp	qword ptr [rbp - 0x78], 0
0x40033b:	je	0x400381
<Block for 0x40033d, 22 bytes>
0x40033d:	mov	rax, qword ptr [rbp - 0x78]
0x400341:	lea	rdx, [rax - 1]
0x400345:	mov	rax, qword ptr [rbp - 0x80]
0x400349:	add	rax, rdx
0x40034c:	movzx	eax, byte ptr [rax]
0x40034f:	cmp	al, 0xa
0x400351:	jne	0x400381
<Block for 0x400353, 20 bytes>
0x400353:	mov	rax, qword ptr [rbp - 0x78]
0x400357:	lea	rdx, [rax - 1]
0x40035b:	mov	rax, qword ptr [rbp - 0x80]
0x40035f:	add	rax, rdx
0x400362:	mov	byte ptr [rax], 0
0x400365:	jmp	0x400381
