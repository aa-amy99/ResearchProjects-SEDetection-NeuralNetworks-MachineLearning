<Block for 0x400088, 79 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x20
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000aa:	mov	qword ptr [rbp - 0x16], 0
0x4000b2:	mov	dword ptr [rbp - 0xe], 0
0x4000b9:	mov	word ptr [rbp - 0xa], 0
0x4000bf:	mov	rdx, qword ptr [rip + 0xfff52]
0x4000c6:	lea	rax, [rbp - 0x16]
0x4000ca:	mov	esi, 0xe
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500020
<Block for 0x4000d7, 10 bytes>
0x4000d7:	test	rax, rax
0x4000da:	setne	al
0x4000dd:	test	al, al
0x4000df:	je	0x4000f2
<Block for 0x4000f2, 12 bytes>
0x4000f2:	lea	rdi, [rip + 0xf7]
0x4000f9:	call	0x500030
<Block for 0x4000e1, 12 bytes>
0x4000e1:	lea	rax, [rbp - 0x16]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500028
<Block for 0x4000fe, 14 bytes>
0x4000fe:	mov	eax, dword ptr [rbp - 0x1c]
0x400101:	mov	dword ptr [rip + 0xe1], eax
0x400107:	call	0x400000
<Block for 0x4000ed, 5 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x1c], eax
0x4000f0:	jmp	0x4000fe
<Block for 0x40010c, 16 bytes>
0x40010c:	nop	
0x40010d:	mov	rax, qword ptr [rbp - 8]
0x400111:	xor	rax, qword ptr fs:[0x28]
0x40011a:	je	0x400121
<Block for 0x400121, 2 bytes>
0x400121:	leave	
0x400122:	ret	
<Block for 0x40011c, 5 bytes>
0x40011c:	call	0x500038
