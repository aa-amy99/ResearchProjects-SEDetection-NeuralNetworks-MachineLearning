<Block for 0x400051, 47 bytes>
0x400051:	endbr64	
0x400055:	push	rbp
0x400056:	mov	rbp, rsp
0x400059:	add	rsp, -0x80
0x40005d:	mov	rax, qword ptr fs:[0x28]
0x400066:	mov	qword ptr [rbp - 8], rax
0x40006a:	xor	eax, eax
0x40006c:	mov	qword ptr [rbp - 0x78], 0
0x400074:	lea	rax, [rbp - 0x78]
0x400078:	mov	rdi, rax
0x40007b:	call	0x400000
<Block for 0x400080, 22 bytes>
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	edx, 0x63
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x400096, 16 bytes>
0x400096:	mov	byte ptr [rbp - 0xd], 0
0x40009a:	lea	rax, [rbp - 0x70]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500010
<Block for 0x4000a6, 22 bytes>
0x4000a6:	mov	rdx, rax
0x4000a9:	mov	rcx, qword ptr [rbp - 0x78]
0x4000ad:	lea	rax, [rbp - 0x70]
0x4000b1:	mov	rsi, rcx
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500018
<Block for 0x4000bc, 16 bytes>
0x4000bc:	mov	byte ptr [rbp - 0xd], 0
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500020
<Block for 0x4000cc, 16 bytes>
0x4000cc:	nop	
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	xor	rax, qword ptr fs:[0x28]
0x4000da:	je	0x4000e1
<Block for 0x4000e1, 2 bytes>
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000dc, 5 bytes>
0x4000dc:	call	0x500028
