<Block for 0x40001e, 84 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xa0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0x10
0x400041:	sub	rax, 1
0x400045:	add	rax, 0x3a
0x400049:	mov	ecx, 0x10
0x40004e:	mov	edx, 0
0x400053:	div	rcx
0x400056:	imul	rax, rax, 0x10
0x40005a:	mov	rdx, rax
0x40005d:	and	rdx, 0xfffffffffffff000
0x400064:	mov	rcx, rsp
0x400067:	sub	rcx, rdx
0x40006a:	mov	rdx, rcx
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x400084, 26 bytes>
0x400084:	mov	rdx, rax
0x400087:	and	edx, 0xfff
0x40008d:	sub	rsp, rdx
0x400090:	mov	rdx, rax
0x400093:	and	edx, 0xfff
0x400099:	test	rdx, rdx
0x40009c:	je	0x4000ae
<Block for 0x400072, 18 bytes>
0x400072:	sub	rsp, 0x1000
0x400079:	or	qword ptr [rsp + 0xff8], 0
0x400082:	jmp	0x40006d
<Block for 0x4000ae, 76 bytes>
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0x88], rax
0x4000c4:	mov	eax, 0x10
0x4000c9:	sub	rax, 1
0x4000cd:	add	rax, 0x6c
0x4000d1:	mov	edi, 0x10
0x4000d6:	mov	edx, 0
0x4000db:	div	rdi
0x4000de:	imul	rax, rax, 0x10
0x4000e2:	mov	rdx, rax
0x4000e5:	and	rdx, 0xfffffffffffff000
0x4000ec:	mov	rsi, rsp
0x4000ef:	sub	rsi, rdx
0x4000f2:	mov	rdx, rsi
0x4000f5:	cmp	rsp, rdx
0x4000f8:	je	0x40010c
<Block for 0x40009e, 92 bytes>
0x40009e:	and	eax, 0xfff
0x4000a3:	sub	rax, 8
0x4000a7:	add	rax, rsp
0x4000aa:	or	qword ptr [rax], 0
0x4000ae:	mov	rax, rsp
0x4000b1:	add	rax, 0xf
0x4000b5:	shr	rax, 4
0x4000b9:	shl	rax, 4
0x4000bd:	mov	qword ptr [rbp - 0x88], rax
0x4000c4:	mov	eax, 0x10
0x4000c9:	sub	rax, 1
0x4000cd:	add	rax, 0x6c
0x4000d1:	mov	edi, 0x10
0x4000d6:	mov	edx, 0
0x4000db:	div	rdi
0x4000de:	imul	rax, rax, 0x10
0x4000e2:	mov	rdx, rax
0x4000e5:	and	rdx, 0xfffffffffffff000
0x4000ec:	mov	rsi, rsp
0x4000ef:	sub	rsi, rdx
0x4000f2:	mov	rdx, rsi
0x4000f5:	cmp	rsp, rdx
0x4000f8:	je	0x40010c
<Block for 0x40006d, 5 bytes>
0x40006d:	cmp	rsp, rdx
0x400070:	je	0x400084
<Block for 0x40010c, 26 bytes>
0x40010c:	mov	rdx, rax
0x40010f:	and	edx, 0xfff
0x400115:	sub	rsp, rdx
0x400118:	mov	rdx, rax
0x40011b:	and	edx, 0xfff
0x400121:	test	rdx, rdx
0x400124:	je	0x400136
<Block for 0x4000fa, 18 bytes>
0x4000fa:	sub	rsp, 0x1000
0x400101:	or	qword ptr [rsp + 0xff8], 0
0x40010a:	jmp	0x4000f5
<Block for 0x400136, 44 bytes>
0x400136:	mov	rax, rsp
0x400139:	add	rax, 0xf
0x40013d:	shr	rax, 4
0x400141:	shl	rax, 4
0x400145:	mov	qword ptr [rbp - 0x80], rax
0x400149:	mov	rax, qword ptr [rbp - 0x88]
0x400150:	mov	edx, 0x31
0x400155:	mov	esi, 0x41
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500000
<Block for 0x400126, 60 bytes>
0x400126:	and	eax, 0xfff
0x40012b:	sub	rax, 8
0x40012f:	add	rax, rsp
0x400132:	or	qword ptr [rax], 0
0x400136:	mov	rax, rsp
0x400139:	add	rax, 0xf
0x40013d:	shr	rax, 4
0x400141:	shl	rax, 4
0x400145:	mov	qword ptr [rbp - 0x80], rax
0x400149:	mov	rax, qword ptr [rbp - 0x88]
0x400150:	mov	edx, 0x31
0x400155:	mov	esi, 0x41
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500000
<Block for 0x4000f5, 5 bytes>
0x4000f5:	cmp	rsp, rdx
0x4000f8:	je	0x40010c
<Block for 0x400162, 36 bytes>
0x400162:	mov	rax, qword ptr [rbp - 0x88]
0x400169:	add	rax, 0x31
0x40016d:	mov	byte ptr [rax], 0
0x400170:	mov	rax, qword ptr [rbp - 0x80]
0x400174:	mov	edx, 0x63
0x400179:	mov	esi, 0x41
0x40017e:	mov	rdi, rax
0x400181:	call	0x500000
<Block for 0x400186, 21 bytes>
0x400186:	mov	rax, qword ptr [rbp - 0x80]
0x40018a:	add	rax, 0x63
0x40018e:	mov	byte ptr [rax], 0
0x400191:	mov	eax, 0
0x400196:	call	0x400000
<Block for 0x40019b, 4 bytes>
0x40019b:	test	eax, eax
0x40019d:	je	0x4001ad
<Block for 0x4001ad, 22 bytes>
0x4001ad:	lea	rax, [rbp - 0x70]
0x4001b1:	mov	edx, 0x63
0x4001b6:	mov	esi, 0x43
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500000
<Block for 0x40019f, 36 bytes>
0x40019f:	mov	rax, qword ptr [rbp - 0x88]
0x4001a6:	mov	qword ptr [rbp - 0x98], rax
0x4001ad:	lea	rax, [rbp - 0x70]
0x4001b1:	mov	edx, 0x63
0x4001b6:	mov	esi, 0x43
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500000
<Block for 0x4001c3, 16 bytes>
0x4001c3:	mov	byte ptr [rbp - 0xd], 0
0x4001c7:	lea	rax, [rbp - 0x70]
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x500008
<Block for 0x4001d3, 17 bytes>
0x4001d3:	mov	qword ptr [rbp - 0x78], rax
0x4001d7:	mov	qword ptr [rbp - 0x90], 0
0x4001e2:	jmp	0x400210
<Block for 0x400210, 13 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0x90]
0x400217:	cmp	rax, qword ptr [rbp - 0x78]
0x40021b:	jb	0x4001e4
<Block for 0x4001e4, 57 bytes>
0x4001e4:	mov	rdx, qword ptr [rbp - 0x98]
0x4001eb:	mov	rax, qword ptr [rbp - 0x90]
0x4001f2:	add	rax, rdx
0x4001f5:	movzx	eax, byte ptr [rax]
0x4001f8:	lea	rcx, [rbp - 0x70]
0x4001fc:	mov	rdx, qword ptr [rbp - 0x90]
0x400203:	add	rdx, rcx
0x400206:	mov	byte ptr [rdx], al
0x400208:	add	qword ptr [rbp - 0x90], 1
0x400210:	mov	rax, qword ptr [rbp - 0x90]
0x400217:	cmp	rax, qword ptr [rbp - 0x78]
0x40021b:	jb	0x4001e4
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	byte ptr [rbp - 0xd], 0
0x400221:	lea	rax, [rbp - 0x70]
0x400225:	mov	rdi, rax
0x400228:	call	0x500010
<Block for 0x40022d, 16 bytes>
0x40022d:	nop	
0x40022e:	mov	rax, qword ptr [rbp - 8]
0x400232:	xor	rax, qword ptr fs:[0x28]
0x40023b:	je	0x400242
<Block for 0x400242, 2 bytes>
0x400242:	leave	
0x400243:	ret	
<Block for 0x40023d, 5 bytes>
0x40023d:	call	0x500018
