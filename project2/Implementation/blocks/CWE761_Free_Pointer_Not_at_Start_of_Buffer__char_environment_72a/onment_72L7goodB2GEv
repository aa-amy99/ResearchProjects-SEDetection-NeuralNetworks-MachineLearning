<Block for 0x4001e2, 40 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	push	rbx
0x4001eb:	sub	rsp, 0x68
0x4001ef:	mov	rax, qword ptr fs:[0x28]
0x4001f8:	mov	qword ptr [rbp - 0x18], rax
0x4001fc:	xor	eax, eax
0x4001fe:	lea	rax, [rbp - 0x50]
0x400202:	mov	rdi, rax
0x400205:	call	0x400446
<Block for 0x40020a, 10 bytes>
0x40020a:	mov	edi, 0x64
0x40020f:	call	0x500000
<Block for 0x400214, 13 bytes>
0x400214:	mov	qword ptr [rbp - 0x70], rax
0x400218:	mov	rax, qword ptr [rbp - 0x70]
0x40021c:	test	rax, rax
0x40021f:	jne	0x40022b
<Block for 0x400221, 10 bytes>
0x400221:	mov	edi, 0xffffffff
0x400226:	call	0x500008
<Block for 0x40022b, 19 bytes>
0x40022b:	mov	rax, qword ptr [rbp - 0x70]
0x40022f:	mov	byte ptr [rax], 0
0x400232:	mov	rax, qword ptr [rbp - 0x70]
0x400236:	mov	rdi, rax
0x400239:	call	0x500010
<Block for 0x40023e, 16 bytes>
0x40023e:	mov	qword ptr [rbp - 0x60], rax
0x400242:	lea	rdi, [rip + 0x1a2]
0x400249:	call	0x500018
<Block for 0x40024e, 11 bytes>
0x40024e:	mov	qword ptr [rbp - 0x58], rax
0x400252:	cmp	qword ptr [rbp - 0x58], 0
0x400257:	je	0x40027f
<Block for 0x40027f, 12 bytes>
0x40027f:	lea	rax, [rbp - 0x50]
0x400283:	mov	rdi, rax
0x400286:	call	0x4005da
<Block for 0x400259, 38 bytes>
0x400259:	mov	eax, 0x63
0x40025e:	sub	rax, qword ptr [rbp - 0x60]
0x400262:	mov	rdx, rax
0x400265:	mov	rcx, qword ptr [rbp - 0x70]
0x400269:	mov	rax, qword ptr [rbp - 0x60]
0x40026d:	add	rcx, rax
0x400270:	mov	rax, qword ptr [rbp - 0x58]
0x400274:	mov	rsi, rax
0x400277:	mov	rdi, rcx
0x40027a:	call	0x500020
<Block for 0x40028b, 23 bytes>
0x40028b:	mov	qword ptr [rbp - 0x68], rax
0x40028f:	lea	rdx, [rbp - 0x68]
0x400293:	lea	rax, [rbp - 0x30]
0x400297:	mov	rsi, rdx
0x40029a:	mov	rdi, rax
0x40029d:	call	0x40062a
<Block for 0x4002a2, 28 bytes>
0x4002a2:	lea	rdx, [rbp - 0x70]
0x4002a6:	mov	rsi, qword ptr [rbp - 0x30]
0x4002aa:	lea	rax, [rbp - 0x50]
0x4002ae:	mov	rcx, rdx
0x4002b1:	mov	edx, 1
0x4002b6:	mov	rdi, rax
0x4002b9:	call	0x400658
<Block for 0x4002be, 12 bytes>
0x4002be:	lea	rax, [rbp - 0x50]
0x4002c2:	mov	rdi, rax
0x4002c5:	call	0x4005da
<Block for 0x4002ca, 23 bytes>
0x4002ca:	mov	qword ptr [rbp - 0x68], rax
0x4002ce:	lea	rdx, [rbp - 0x68]
0x4002d2:	lea	rax, [rbp - 0x30]
0x4002d6:	mov	rsi, rdx
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x40062a
<Block for 0x4002e1, 28 bytes>
0x4002e1:	lea	rdx, [rbp - 0x70]
0x4002e5:	mov	rsi, qword ptr [rbp - 0x30]
0x4002e9:	lea	rax, [rbp - 0x50]
0x4002ed:	mov	rcx, rdx
0x4002f0:	mov	edx, 1
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x400658
<Block for 0x4002fd, 12 bytes>
0x4002fd:	lea	rax, [rbp - 0x50]
0x400301:	mov	rdi, rax
0x400304:	call	0x4005da
<Block for 0x400309, 23 bytes>
0x400309:	mov	qword ptr [rbp - 0x68], rax
0x40030d:	lea	rdx, [rbp - 0x68]
0x400311:	lea	rax, [rbp - 0x30]
0x400315:	mov	rsi, rdx
0x400318:	mov	rdi, rax
0x40031b:	call	0x40062a
<Block for 0x400320, 28 bytes>
0x400320:	lea	rdx, [rbp - 0x70]
0x400324:	mov	rsi, qword ptr [rbp - 0x30]
0x400328:	lea	rax, [rbp - 0x50]
0x40032c:	mov	rcx, rdx
0x40032f:	mov	edx, 1
0x400334:	mov	rdi, rax
0x400337:	call	0x400658
<Block for 0x40033c, 19 bytes>
0x40033c:	lea	rdx, [rbp - 0x50]
0x400340:	lea	rax, [rbp - 0x30]
0x400344:	mov	rsi, rdx
0x400347:	mov	rdi, rax
0x40034a:	call	0x40071e
<Block for 0x40034f, 12 bytes>
0x40034f:	lea	rax, [rbp - 0x30]
0x400353:	mov	rdi, rax
0x400356:	call	0x500040
<Block for 0x40035b, 12 bytes>
0x40035b:	lea	rax, [rbp - 0x30]
0x40035f:	mov	rdi, rax
0x400362:	call	0x400592
<Block for 0x400367, 12 bytes>
0x400367:	lea	rax, [rbp - 0x50]
0x40036b:	mov	rdi, rax
0x40036e:	call	0x400592
<Block for 0x400373, 16 bytes>
0x400373:	nop	
0x400374:	mov	rax, qword ptr [rbp - 0x18]
0x400378:	xor	rax, qword ptr fs:[0x28]
0x400381:	je	0x4003bd
<Block for 0x4003bd, 7 bytes>
0x4003bd:	add	rsp, 0x68
0x4003c1:	pop	rbx
0x4003c2:	pop	rbp
0x4003c3:	ret	
<Block for 0x400383, 2 bytes>
0x400383:	jmp	0x4003b8
<Block for 0x4003b8, 5 bytes>
0x4003b8:	call	0x500038
