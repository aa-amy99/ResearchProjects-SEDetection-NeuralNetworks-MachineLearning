<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400446
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x70], rax
0x400036:	mov	rax, qword ptr [rbp - 0x70]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x70]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x70]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 16 bytes>
0x40005c:	mov	qword ptr [rbp - 0x60], rax
0x400060:	lea	rdi, [rip + 0x384]
0x400067:	call	0x500018
<Block for 0x40006c, 11 bytes>
0x40006c:	mov	qword ptr [rbp - 0x58], rax
0x400070:	cmp	qword ptr [rbp - 0x58], 0
0x400075:	je	0x40009d
<Block for 0x40009d, 12 bytes>
0x40009d:	lea	rax, [rbp - 0x50]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x4005da
<Block for 0x400077, 38 bytes>
0x400077:	mov	eax, 0x63
0x40007c:	sub	rax, qword ptr [rbp - 0x60]
0x400080:	mov	rdx, rax
0x400083:	mov	rcx, qword ptr [rbp - 0x70]
0x400087:	mov	rax, qword ptr [rbp - 0x60]
0x40008b:	add	rcx, rax
0x40008e:	mov	rax, qword ptr [rbp - 0x58]
0x400092:	mov	rsi, rax
0x400095:	mov	rdi, rcx
0x400098:	call	0x500020
<Block for 0x4000a9, 23 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x68], rax
0x4000ad:	lea	rdx, [rbp - 0x68]
0x4000b1:	lea	rax, [rbp - 0x30]
0x4000b5:	mov	rsi, rdx
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x40062a
<Block for 0x4000c0, 28 bytes>
0x4000c0:	lea	rdx, [rbp - 0x70]
0x4000c4:	mov	rsi, qword ptr [rbp - 0x30]
0x4000c8:	lea	rax, [rbp - 0x50]
0x4000cc:	mov	rcx, rdx
0x4000cf:	mov	edx, 1
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x400658
<Block for 0x4000dc, 12 bytes>
0x4000dc:	lea	rax, [rbp - 0x50]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x4005da
<Block for 0x4000e8, 23 bytes>
0x4000e8:	mov	qword ptr [rbp - 0x68], rax
0x4000ec:	lea	rdx, [rbp - 0x68]
0x4000f0:	lea	rax, [rbp - 0x30]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x40062a
<Block for 0x4000ff, 28 bytes>
0x4000ff:	lea	rdx, [rbp - 0x70]
0x400103:	mov	rsi, qword ptr [rbp - 0x30]
0x400107:	lea	rax, [rbp - 0x50]
0x40010b:	mov	rcx, rdx
0x40010e:	mov	edx, 1
0x400113:	mov	rdi, rax
0x400116:	call	0x400658
<Block for 0x40011b, 12 bytes>
0x40011b:	lea	rax, [rbp - 0x50]
0x40011f:	mov	rdi, rax
0x400122:	call	0x4005da
<Block for 0x400127, 23 bytes>
0x400127:	mov	qword ptr [rbp - 0x68], rax
0x40012b:	lea	rdx, [rbp - 0x68]
0x40012f:	lea	rax, [rbp - 0x30]
0x400133:	mov	rsi, rdx
0x400136:	mov	rdi, rax
0x400139:	call	0x40062a
<Block for 0x40013e, 28 bytes>
0x40013e:	lea	rdx, [rbp - 0x70]
0x400142:	mov	rsi, qword ptr [rbp - 0x30]
0x400146:	lea	rax, [rbp - 0x50]
0x40014a:	mov	rcx, rdx
0x40014d:	mov	edx, 1
0x400152:	mov	rdi, rax
0x400155:	call	0x400658
<Block for 0x40015a, 19 bytes>
0x40015a:	lea	rdx, [rbp - 0x50]
0x40015e:	lea	rax, [rbp - 0x30]
0x400162:	mov	rsi, rdx
0x400165:	mov	rdi, rax
0x400168:	call	0x40071e
<Block for 0x40016d, 12 bytes>
0x40016d:	lea	rax, [rbp - 0x30]
0x400171:	mov	rdi, rax
0x400174:	call	0x500028
<Block for 0x400179, 12 bytes>
0x400179:	lea	rax, [rbp - 0x30]
0x40017d:	mov	rdi, rax
0x400180:	call	0x400592
<Block for 0x400185, 12 bytes>
0x400185:	lea	rax, [rbp - 0x50]
0x400189:	mov	rdi, rax
0x40018c:	call	0x400592
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 0x18]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001db
<Block for 0x4001db, 7 bytes>
0x4001db:	add	rsp, 0x68
0x4001df:	pop	rbx
0x4001e0:	pop	rbp
0x4001e1:	ret	
<Block for 0x4001a1, 2 bytes>
0x4001a1:	jmp	0x4001d6
<Block for 0x4001d6, 5 bytes>
0x4001d6:	call	0x500038
