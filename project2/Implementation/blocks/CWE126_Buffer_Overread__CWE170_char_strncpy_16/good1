<Block for 0x400080, 55 bytes>
0x400080:	endbr64	
0x400084:	push	rbp
0x400085:	mov	rbp, rsp
0x400088:	sub	rsp, 0x110
0x40008f:	mov	rax, qword ptr fs:[0x28]
0x400098:	mov	qword ptr [rbp - 8], rax
0x40009c:	xor	eax, eax
0x40009e:	lea	rax, [rbp - 0xa0]
0x4000a5:	mov	edx, 0x95
0x4000aa:	mov	esi, 0x41
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500000
<Block for 0x4000b7, 34 bytes>
0x4000b7:	mov	byte ptr [rbp - 0xb], 0
0x4000bb:	lea	rcx, [rbp - 0xa0]
0x4000c2:	lea	rax, [rbp - 0x110]
0x4000c9:	mov	edx, 0x63
0x4000ce:	mov	rsi, rcx
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500008
<Block for 0x4000d9, 22 bytes>
0x4000d9:	mov	byte ptr [rbp - 0xad], 0
0x4000e0:	lea	rax, [rbp - 0x110]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500010
<Block for 0x4000ef, 17 bytes>
0x4000ef:	nop	
0x4000f0:	nop	
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	xor	rax, qword ptr fs:[0x28]
0x4000fe:	je	0x400105
<Block for 0x400105, 2 bytes>
0x400105:	leave	
0x400106:	ret	
<Block for 0x400100, 5 bytes>
0x400100:	call	0x500018
