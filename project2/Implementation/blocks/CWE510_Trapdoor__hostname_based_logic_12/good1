<Block for 0x40038b, 37 bytes>
0x40038b:	endbr64	
0x40038f:	push	rbp
0x400390:	mov	rbp, rsp
0x400393:	sub	rsp, 0x30
0x400397:	mov	rax, qword ptr fs:[0x28]
0x4003a0:	mov	qword ptr [rbp - 8], rax
0x4003a4:	xor	eax, eax
0x4003a6:	mov	eax, 0
0x4003ab:	call	0x500000
<Block for 0x4003b0, 8 bytes>
0x4003b0:	test	eax, eax
0x4003b2:	je	0x4004c6
<Block for 0x4004c6, 34 bytes>
0x4004c6:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4004cd:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x4004d4:	mov	edx, 6
0x4004d9:	mov	esi, 1
0x4004de:	mov	edi, 2
0x4004e3:	call	0x500008
<Block for 0x4003b8, 34 bytes>
0x4003b8:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4003bf:	mov	dword ptr [rbp - 0x30], 0xffffffff
0x4003c6:	mov	edx, 6
0x4003cb:	mov	esi, 1
0x4003d0:	mov	edi, 2
0x4003d5:	call	0x500008
<Block for 0x4004e8, 13 bytes>
0x4004e8:	mov	dword ptr [rbp - 0x28], eax
0x4004eb:	cmp	dword ptr [rbp - 0x28], -1
0x4004ef:	je	0x4005a1
<Block for 0x4003da, 13 bytes>
0x4003da:	mov	dword ptr [rbp - 0x24], eax
0x4003dd:	cmp	dword ptr [rbp - 0x24], -1
0x4003e1:	je	0x400493
<Block for 0x4005a1, 3 bytes>
0x4005a1:	nop	
0x4005a2:	jmp	0x4005ab
<Block for 0x4004f5, 22 bytes>
0x4004f5:	lea	rax, [rbp - 0x20]
0x4004f9:	mov	edx, 0x10
0x4004fe:	mov	esi, 0
0x400503:	mov	rdi, rax
0x400506:	call	0x500010
<Block for 0x400493, 3 bytes>
0x400493:	nop	
0x400494:	jmp	0x40049d
<Block for 0x4003e7, 22 bytes>
0x4003e7:	lea	rax, [rbp - 0x20]
0x4003eb:	mov	edx, 0x10
0x4003f0:	mov	esi, 0
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500010
<Block for 0x4005ab, 6 bytes>
0x4005ab:	cmp	dword ptr [rbp - 0x28], -1
0x4005af:	je	0x4005bb
<Block for 0x40050b, 23 bytes>
0x40050b:	mov	word ptr [rbp - 0x20], 2
0x400511:	mov	dword ptr [rbp - 0x1c], 0
0x400518:	mov	edi, 0x4e20
0x40051d:	call	0x500018
<Block for 0x40049d, 6 bytes>
0x40049d:	cmp	dword ptr [rbp - 0x24], -1
0x4004a1:	je	0x4004ad
<Block for 0x4003fd, 23 bytes>
0x4003fd:	mov	word ptr [rbp - 0x20], 2
0x400403:	mov	dword ptr [rbp - 0x1c], 0
0x40040a:	mov	edi, 0x4e20
0x40040f:	call	0x500018
<Block for 0x4005bb, 6 bytes>
0x4005bb:	cmp	dword ptr [rbp - 0x2c], -1
0x4005bf:	je	0x4005cb
<Block for 0x4005b1, 10 bytes>
0x4005b1:	mov	eax, dword ptr [rbp - 0x28]
0x4005b4:	mov	edi, eax
0x4005b6:	call	0x500060
<Block for 0x400522, 26 bytes>
0x400522:	mov	word ptr [rbp - 0x1e], ax
0x400526:	lea	rcx, [rbp - 0x20]
0x40052a:	mov	eax, dword ptr [rbp - 0x28]
0x40052d:	mov	edx, 0x10
0x400532:	mov	rsi, rcx
0x400535:	mov	edi, eax
0x400537:	call	0x500020
<Block for 0x4004ad, 10 bytes>
0x4004ad:	cmp	dword ptr [rbp - 0x30], -1
0x4004b1:	je	0x4005cb
<Block for 0x4004a3, 10 bytes>
0x4004a3:	mov	eax, dword ptr [rbp - 0x24]
0x4004a6:	mov	edi, eax
0x4004a8:	call	0x500060
<Block for 0x400414, 26 bytes>
0x400414:	mov	word ptr [rbp - 0x1e], ax
0x400418:	lea	rcx, [rbp - 0x20]
0x40041c:	mov	eax, dword ptr [rbp - 0x24]
0x40041f:	mov	edx, 0x10
0x400424:	mov	rsi, rcx
0x400427:	mov	edi, eax
0x400429:	call	0x500020
<Block for 0x4005cb, 16 bytes>
0x4005cb:	nop	
0x4005cc:	mov	rax, qword ptr [rbp - 8]
0x4005d0:	xor	rax, qword ptr fs:[0x28]
0x4005d9:	je	0x4005e0
<Block for 0x4005c1, 10 bytes>
0x4005c1:	mov	eax, dword ptr [rbp - 0x2c]
0x4005c4:	mov	edi, eax
0x4005c6:	call	0x500060
<Block for 0x40053c, 5 bytes>
0x40053c:	cmp	eax, -1
0x40053f:	je	0x4005a4
<Block for 0x4004b7, 10 bytes>
0x4004b7:	mov	eax, dword ptr [rbp - 0x30]
0x4004ba:	mov	edi, eax
0x4004bc:	call	0x500060
<Block for 0x40042e, 5 bytes>
0x40042e:	cmp	eax, -1
0x400431:	je	0x400496
<Block for 0x4005e0, 2 bytes>
0x4005e0:	leave	
0x4005e1:	ret	
<Block for 0x4005db, 5 bytes>
0x4005db:	call	0x500068
<Block for 0x4005a4, 3 bytes>
0x4005a4:	nop	
0x4005a5:	jmp	0x4005ab
<Block for 0x400541, 15 bytes>
0x400541:	mov	eax, dword ptr [rbp - 0x28]
0x400544:	mov	esi, 5
0x400549:	mov	edi, eax
0x40054b:	call	0x500028
<Block for 0x4004c1, 5 bytes>
0x4004c1:	jmp	0x4005cb
<Block for 0x400496, 3 bytes>
0x400496:	nop	
0x400497:	jmp	0x40049d
<Block for 0x400433, 15 bytes>
0x400433:	mov	eax, dword ptr [rbp - 0x24]
0x400436:	mov	esi, 5
0x40043b:	mov	edi, eax
0x40043d:	call	0x500028
<Block for 0x400550, 5 bytes>
0x400550:	cmp	eax, -1
0x400553:	je	0x4005a7
<Block for 0x400442, 5 bytes>
0x400442:	cmp	eax, -1
0x400445:	je	0x400499
<Block for 0x4005a7, 3 bytes>
0x4005a7:	nop	
0x4005a8:	jmp	0x4005ab
<Block for 0x400555, 20 bytes>
0x400555:	mov	eax, dword ptr [rbp - 0x28]
0x400558:	mov	edx, 0
0x40055d:	mov	esi, 0
0x400562:	mov	edi, eax
0x400564:	call	0x500030
<Block for 0x400499, 3 bytes>
0x400499:	nop	
0x40049a:	jmp	0x40049d
<Block for 0x400447, 20 bytes>
0x400447:	mov	eax, dword ptr [rbp - 0x24]
0x40044a:	mov	edx, 0
0x40044f:	mov	esi, 0
0x400454:	mov	edi, eax
0x400456:	call	0x500030
<Block for 0x400569, 9 bytes>
0x400569:	mov	dword ptr [rbp - 0x2c], eax
0x40056c:	cmp	dword ptr [rbp - 0x2c], -1
0x400570:	je	0x4005aa
<Block for 0x40045b, 9 bytes>
0x40045b:	mov	dword ptr [rbp - 0x30], eax
0x40045e:	cmp	dword ptr [rbp - 0x30], -1
0x400462:	je	0x40049c
<Block for 0x400572, 27 bytes>
0x400572:	mov	eax, dword ptr [rbp - 0x2c]
0x400575:	mov	ecx, 0
0x40057a:	mov	edx, 8
0x40057f:	lea	rsi, [rip + 0x92]
0x400586:	mov	edi, eax
0x400588:	call	0x500050
<Block for 0x4005aa, 1 bytes>
0x4005aa:	nop	
<Block for 0x400464, 27 bytes>
0x400464:	mov	eax, dword ptr [rbp - 0x30]
0x400467:	mov	ecx, 0
0x40046c:	mov	edx, 8
0x400471:	lea	rsi, [rip + 0x1a0]
0x400478:	mov	edi, eax
0x40047a:	call	0x500050
<Block for 0x40049c, 1 bytes>
0x40049c:	nop	
<Block for 0x40058d, 6 bytes>
0x40058d:	cmp	rax, -1
0x400591:	jne	0x4005ab
<Block for 0x40047f, 6 bytes>
0x40047f:	cmp	rax, -1
0x400483:	jne	0x40049d
<Block for 0x400593, 12 bytes>
0x400593:	lea	rdi, [rip + 0x87]
0x40059a:	call	0x500058
<Block for 0x400485, 12 bytes>
0x400485:	lea	rdi, [rip + 0x195]
0x40048c:	call	0x500058
<Block for 0x40059f, 2 bytes>
0x40059f:	jmp	0x4005ab
<Block for 0x400491, 2 bytes>
0x400491:	jmp	0x40049d
