<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x5c], 0
0x400029:	cmp	dword ptr [rbp - 0x5c], 0
0x40002d:	jg	0x40015e
<Block for 0x400033, 34 bytes>
0x400033:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x40003a:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400041:	mov	edx, 6
0x400046:	mov	esi, 1
0x40004b:	mov	edi, 2
0x400050:	call	0x500000
<Block for 0x40015e, 25 bytes>
0x40015e:	mov	eax, dword ptr [rbp - 0x58]
0x400161:	cdqe	
0x400163:	shl	rax, 2
0x400167:	mov	qword ptr [rbp - 0x40], rax
0x40016b:	mov	rax, qword ptr [rbp - 0x40]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500048
<Block for 0x400055, 13 bytes>
0x400055:	mov	dword ptr [rbp - 0x50], eax
0x400058:	cmp	dword ptr [rbp - 0x50], -1
0x40005c:	je	0x40012b
<Block for 0x400177, 23 bytes>
0x400177:	mov	qword ptr [rbp - 0x38], rax
0x40017b:	mov	qword ptr [rbp - 0x48], 0
0x400183:	mov	eax, dword ptr [rbp - 0x58]
0x400186:	cdqe	
0x400188:	cmp	qword ptr [rbp - 0x48], rax
0x40018c:	jae	0x4001ae
<Block for 0x40012b, 3 bytes>
0x40012b:	nop	
0x40012c:	jmp	0x400135
<Block for 0x400062, 22 bytes>
0x400062:	lea	rax, [rbp - 0x30]
0x400066:	mov	edx, 0x10
0x40006b:	mov	esi, 0
0x400070:	mov	rdi, rax
0x400073:	call	0x500008
<Block for 0x40018e, 32 bytes>
0x40018e:	mov	rax, qword ptr [rbp - 0x48]
0x400192:	lea	rdx, [rax*4]
0x40019a:	mov	rax, qword ptr [rbp - 0x38]
0x40019e:	add	rax, rdx
0x4001a1:	mov	dword ptr [rax], 0
0x4001a7:	add	qword ptr [rbp - 0x48], 1
0x4001ac:	jmp	0x400183
<Block for 0x4001ae, 13 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x38]
0x4001b2:	mov	eax, dword ptr [rax]
0x4001b4:	mov	edi, eax
0x4001b6:	call	0x500050
<Block for 0x400135, 6 bytes>
0x400135:	cmp	dword ptr [rbp - 0x50], -1
0x400139:	je	0x400145
<Block for 0x400078, 23 bytes>
0x400078:	mov	word ptr [rbp - 0x30], 2
0x40007e:	mov	dword ptr [rbp - 0x2c], 0
0x400085:	mov	edi, 0x6987
0x40008a:	call	0x500010
<Block for 0x400183, 11 bytes>
0x400183:	mov	eax, dword ptr [rbp - 0x58]
0x400186:	cdqe	
0x400188:	cmp	qword ptr [rbp - 0x48], rax
0x40018c:	jae	0x4001ae
<Block for 0x4001bb, 7 bytes>
0x4001bb:	cmp	qword ptr [rbp - 0x38], 0
0x4001c0:	je	0x4001ce
<Block for 0x400145, 6 bytes>
0x400145:	cmp	dword ptr [rbp - 0x54], -1
0x400149:	je	0x400155
<Block for 0x40013b, 10 bytes>
0x40013b:	mov	eax, dword ptr [rbp - 0x50]
0x40013e:	mov	edi, eax
0x400140:	call	0x500040
<Block for 0x40008f, 26 bytes>
0x40008f:	mov	word ptr [rbp - 0x2e], ax
0x400093:	lea	rcx, [rbp - 0x30]
0x400097:	mov	eax, dword ptr [rbp - 0x50]
0x40009a:	mov	edx, 0x10
0x40009f:	mov	rsi, rcx
0x4000a2:	mov	edi, eax
0x4000a4:	call	0x500018
<Block for 0x4001ce, 16 bytes>
0x4001ce:	nop	
0x4001cf:	mov	rax, qword ptr [rbp - 8]
0x4001d3:	xor	rax, qword ptr fs:[0x28]
0x4001dc:	je	0x4001e3
<Block for 0x4001c2, 12 bytes>
0x4001c2:	mov	rax, qword ptr [rbp - 0x38]
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x500058
<Block for 0x400155, 9 bytes>
0x400155:	add	dword ptr [rbp - 0x5c], 1
0x400159:	jmp	0x400029
<Block for 0x40014b, 10 bytes>
0x40014b:	mov	eax, dword ptr [rbp - 0x54]
0x40014e:	mov	edi, eax
0x400150:	call	0x500040
<Block for 0x4000a9, 10 bytes>
0x4000a9:	cmp	eax, -1
0x4000ac:	sete	al
0x4000af:	test	al, al
0x4000b1:	jne	0x40012e
<Block for 0x4001e3, 2 bytes>
0x4001e3:	leave	
0x4001e4:	ret	
<Block for 0x4001de, 5 bytes>
0x4001de:	call	0x500060
<Block for 0x400029, 10 bytes>
0x400029:	cmp	dword ptr [rbp - 0x5c], 0
0x40002d:	jg	0x40015e
<Block for 0x4000b3, 15 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 0x50]
0x4000b6:	mov	esi, 5
0x4000bb:	mov	edi, eax
0x4000bd:	call	0x500020
<Block for 0x40012e, 3 bytes>
0x40012e:	nop	
0x40012f:	jmp	0x400135
<Block for 0x4000c2, 10 bytes>
0x4000c2:	cmp	eax, -1
0x4000c5:	sete	al
0x4000c8:	test	al, al
0x4000ca:	jne	0x400131
<Block for 0x4000cc, 20 bytes>
0x4000cc:	mov	eax, dword ptr [rbp - 0x50]
0x4000cf:	mov	edx, 0
0x4000d4:	mov	esi, 0
0x4000d9:	mov	edi, eax
0x4000db:	call	0x500028
<Block for 0x400131, 3 bytes>
0x400131:	nop	
0x400132:	jmp	0x400135
<Block for 0x4000e0, 9 bytes>
0x4000e0:	mov	dword ptr [rbp - 0x54], eax
0x4000e3:	cmp	dword ptr [rbp - 0x54], -1
0x4000e7:	je	0x400134
<Block for 0x4000e9, 24 bytes>
0x4000e9:	lea	rsi, [rbp - 0x16]
0x4000ed:	mov	eax, dword ptr [rbp - 0x54]
0x4000f0:	mov	ecx, 0
0x4000f5:	mov	edx, 0xd
0x4000fa:	mov	edi, eax
0x4000fc:	call	0x500030
<Block for 0x400134, 1 bytes>
0x400134:	nop	
<Block for 0x400101, 9 bytes>
0x400101:	mov	dword ptr [rbp - 0x4c], eax
0x400104:	cmp	dword ptr [rbp - 0x4c], -1
0x400108:	je	0x400135
<Block for 0x40010a, 6 bytes>
0x40010a:	cmp	dword ptr [rbp - 0x4c], 0
0x40010e:	je	0x400135
<Block for 0x400110, 22 bytes>
0x400110:	mov	eax, dword ptr [rbp - 0x4c]
0x400113:	cdqe	
0x400115:	mov	byte ptr [rbp + rax - 0x16], 0
0x40011a:	lea	rax, [rbp - 0x16]
0x40011e:	mov	rdi, rax
0x400121:	call	0x500038
<Block for 0x400126, 5 bytes>
0x400126:	mov	dword ptr [rbp - 0x58], eax
0x400129:	jmp	0x400135
