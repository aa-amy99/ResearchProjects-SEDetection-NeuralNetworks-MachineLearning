<Block for 0x40024a, 81 bytes>
0x40024a:	endbr64	
0x40024e:	push	rbp
0x40024f:	mov	rbp, rsp
0x400252:	add	rsp, -0x80
0x400256:	mov	rax, qword ptr fs:[0x28]
0x40025f:	mov	qword ptr [rbp - 8], rax
0x400263:	xor	eax, eax
0x400265:	mov	eax, 0x10
0x40026a:	sub	rax, 1
0x40026e:	add	rax, 0x6c
0x400272:	mov	esi, 0x10
0x400277:	mov	edx, 0
0x40027c:	div	rsi
0x40027f:	imul	rax, rax, 0x10
0x400283:	mov	rdx, rax
0x400286:	and	rdx, 0xfffffffffffff000
0x40028d:	mov	rcx, rsp
0x400290:	sub	rcx, rdx
0x400293:	mov	rdx, rcx
0x400296:	cmp	rsp, rdx
0x400299:	je	0x4002ad
<Block for 0x4002ad, 26 bytes>
0x4002ad:	mov	rdx, rax
0x4002b0:	and	edx, 0xfff
0x4002b6:	sub	rsp, rdx
0x4002b9:	mov	rdx, rax
0x4002bc:	and	edx, 0xfff
0x4002c2:	test	rdx, rdx
0x4002c5:	je	0x4002d7
<Block for 0x40029b, 18 bytes>
0x40029b:	sub	rsp, 0x1000
0x4002a2:	or	qword ptr [rsp + 0xff8], 0
0x4002ab:	jmp	0x400296
<Block for 0x4002d7, 41 bytes>
0x4002d7:	mov	rax, rsp
0x4002da:	add	rax, 0xf
0x4002de:	shr	rax, 4
0x4002e2:	shl	rax, 4
0x4002e6:	mov	qword ptr [rbp - 0x80], rax
0x4002ea:	mov	rax, qword ptr [rbp - 0x80]
0x4002ee:	mov	edx, 0x63
0x4002f3:	mov	esi, 0x41
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500000
<Block for 0x4002c7, 57 bytes>
0x4002c7:	and	eax, 0xfff
0x4002cc:	sub	rax, 8
0x4002d0:	add	rax, rsp
0x4002d3:	or	qword ptr [rax], 0
0x4002d7:	mov	rax, rsp
0x4002da:	add	rax, 0xf
0x4002de:	shr	rax, 4
0x4002e2:	shl	rax, 4
0x4002e6:	mov	qword ptr [rbp - 0x80], rax
0x4002ea:	mov	rax, qword ptr [rbp - 0x80]
0x4002ee:	mov	edx, 0x63
0x4002f3:	mov	esi, 0x41
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500000
<Block for 0x400296, 5 bytes>
0x400296:	cmp	rsp, rdx
0x400299:	je	0x4002ad
<Block for 0x400300, 42 bytes>
0x400300:	mov	rax, qword ptr [rbp - 0x80]
0x400304:	add	rax, 0x63
0x400308:	mov	byte ptr [rax], 0
0x40030b:	mov	rax, qword ptr [rbp - 0x80]
0x40030f:	mov	qword ptr [rbp - 0x78], rax
0x400313:	nop	
0x400314:	lea	rax, [rbp - 0x70]
0x400318:	mov	edx, 0x63
0x40031d:	mov	esi, 0x43
0x400322:	mov	rdi, rax
0x400325:	call	0x500000
<Block for 0x40032a, 28 bytes>
0x40032a:	mov	byte ptr [rbp - 0xd], 0
0x40032e:	mov	rcx, qword ptr [rbp - 0x78]
0x400332:	lea	rax, [rbp - 0x70]
0x400336:	mov	edx, 0x64
0x40033b:	mov	rsi, rcx
0x40033e:	mov	rdi, rax
0x400341:	call	0x500008
<Block for 0x400346, 16 bytes>
0x400346:	mov	byte ptr [rbp - 0xd], 0
0x40034a:	lea	rax, [rbp - 0x70]
0x40034e:	mov	rdi, rax
0x400351:	call	0x500010
<Block for 0x400356, 16 bytes>
0x400356:	nop	
0x400357:	mov	rax, qword ptr [rbp - 8]
0x40035b:	xor	rax, qword ptr fs:[0x28]
0x400364:	je	0x40036b
<Block for 0x40036b, 2 bytes>
0x40036b:	leave	
0x40036c:	ret	
<Block for 0x400366, 5 bytes>
0x400366:	call	0x500018
