<Block for 0x400132, 37 bytes>
0x400132:	endbr64	
0x400136:	push	rbp
0x400137:	mov	rbp, rsp
0x40013a:	sub	rsp, 0x30
0x40013e:	mov	rax, qword ptr fs:[0x28]
0x400147:	mov	qword ptr [rbp - 8], rax
0x40014b:	xor	eax, eax
0x40014d:	mov	eax, 0
0x400152:	call	0x500000
<Block for 0x400157, 8 bytes>
0x400157:	test	eax, eax
0x400159:	je	0x4001e7
<Block for 0x4001e7, 36 bytes>
0x4001e7:	movabs	rax, 0x58585858646f6f67
0x4001f1:	mov	qword ptr [rbp - 0x13], rax
0x4001f5:	mov	word ptr [rbp - 0xb], 0x5858
0x4001fb:	mov	byte ptr [rbp - 9], 0
0x4001ff:	lea	rax, [rbp - 0x13]
0x400203:	mov	rdi, rax
0x400206:	call	0x500008
<Block for 0x40015f, 36 bytes>
0x40015f:	movabs	rax, 0x58585858646f6f67
0x400169:	mov	qword ptr [rbp - 0x13], rax
0x40016d:	mov	word ptr [rbp - 0xb], 0x5858
0x400173:	mov	byte ptr [rbp - 9], 0
0x400177:	lea	rax, [rbp - 0x13]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500008
<Block for 0x40020b, 9 bytes>
0x40020b:	mov	dword ptr [rbp - 0x30], eax
0x40020e:	cmp	dword ptr [rbp - 0x30], -1
0x400212:	je	0x400265
<Block for 0x400183, 13 bytes>
0x400183:	mov	dword ptr [rbp - 0x2c], eax
0x400186:	cmp	dword ptr [rbp - 0x2c], -1
0x40018a:	je	0x400265
<Block for 0x400265, 16 bytes>
0x400265:	nop	
0x400266:	mov	rax, qword ptr [rbp - 8]
0x40026a:	xor	rax, qword ptr fs:[0x28]
0x400273:	je	0x40027a
<Block for 0x400214, 17 bytes>
0x400214:	mov	eax, dword ptr [rbp - 0x30]
0x400217:	lea	rsi, [rip + 0x73]
0x40021e:	mov	edi, eax
0x400220:	call	0x500010
<Block for 0x400190, 17 bytes>
0x400190:	mov	eax, dword ptr [rbp - 0x2c]
0x400193:	lea	rsi, [rip + 0xf7]
0x40019a:	mov	edi, eax
0x40019c:	call	0x500010
<Block for 0x40027a, 2 bytes>
0x40027a:	leave	
0x40027b:	ret	
<Block for 0x400275, 5 bytes>
0x400275:	call	0x500030
<Block for 0x400225, 11 bytes>
0x400225:	mov	qword ptr [rbp - 0x28], rax
0x400229:	cmp	qword ptr [rbp - 0x28], 0
0x40022e:	je	0x400265
<Block for 0x4001a1, 15 bytes>
0x4001a1:	mov	qword ptr [rbp - 0x20], rax
0x4001a5:	cmp	qword ptr [rbp - 0x20], 0
0x4001aa:	je	0x400265
<Block for 0x400230, 29 bytes>
0x400230:	mov	rax, qword ptr [rbp - 0x28]
0x400234:	mov	rcx, rax
0x400237:	mov	edx, 0xe
0x40023c:	mov	esi, 1
0x400241:	lea	rdi, [rip + 0x4b]
0x400248:	call	0x500018
<Block for 0x4001b0, 29 bytes>
0x4001b0:	mov	rax, qword ptr [rbp - 0x20]
0x4001b4:	mov	rcx, rax
0x4001b7:	mov	edx, 0xe
0x4001bc:	mov	esi, 1
0x4001c1:	lea	rdi, [rip + 0xcb]
0x4001c8:	call	0x500018
<Block for 0x40024d, 12 bytes>
0x40024d:	mov	rax, qword ptr [rbp - 0x28]
0x400251:	mov	rdi, rax
0x400254:	call	0x500020
<Block for 0x4001cd, 12 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x20]
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500020
<Block for 0x400259, 12 bytes>
0x400259:	lea	rax, [rbp - 0x13]
0x40025d:	mov	rdi, rax
0x400260:	call	0x500028
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rax, [rbp - 0x13]
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x500028
<Block for 0x4001e5, 2 bytes>
0x4001e5:	jmp	0x400265
