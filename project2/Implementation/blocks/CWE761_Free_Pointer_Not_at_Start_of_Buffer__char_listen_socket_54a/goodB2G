<Block for 0x4001eb, 37 bytes>
0x4001eb:	endbr64	
0x4001ef:	push	rbp
0x4001f0:	mov	rbp, rsp
0x4001f3:	sub	rsp, 0x50
0x4001f7:	mov	rax, qword ptr fs:[0x28]
0x400200:	mov	qword ptr [rbp - 8], rax
0x400204:	xor	eax, eax
0x400206:	mov	edi, 0x64
0x40020b:	call	0x500000
<Block for 0x400210, 11 bytes>
0x400210:	mov	qword ptr [rbp - 0x38], rax
0x400214:	cmp	qword ptr [rbp - 0x38], 0
0x400219:	jne	0x400225
<Block for 0x40021b, 10 bytes>
0x40021b:	mov	edi, 0xffffffff
0x400220:	call	0x500008
<Block for 0x400225, 33 bytes>
0x400225:	mov	rax, qword ptr [rbp - 0x38]
0x400229:	mov	byte ptr [rax], 0
0x40022c:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400233:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40023a:	mov	rax, qword ptr [rbp - 0x38]
0x40023e:	mov	rdi, rax
0x400241:	call	0x500010
<Block for 0x400246, 24 bytes>
0x400246:	mov	qword ptr [rbp - 0x30], rax
0x40024a:	mov	edx, 6
0x40024f:	mov	esi, 1
0x400254:	mov	edi, 2
0x400259:	call	0x500018
<Block for 0x40025e, 13 bytes>
0x40025e:	mov	dword ptr [rbp - 0x40], eax
0x400261:	cmp	dword ptr [rbp - 0x40], -1
0x400265:	je	0x400389
<Block for 0x400389, 3 bytes>
0x400389:	nop	
0x40038a:	jmp	0x400393
<Block for 0x40026b, 22 bytes>
0x40026b:	lea	rax, [rbp - 0x20]
0x40026f:	mov	edx, 0x10
0x400274:	mov	esi, 0
0x400279:	mov	rdi, rax
0x40027c:	call	0x500020
<Block for 0x400393, 6 bytes>
0x400393:	cmp	dword ptr [rbp - 0x40], -1
0x400397:	je	0x4003a3
<Block for 0x400281, 23 bytes>
0x400281:	mov	word ptr [rbp - 0x20], 2
0x400287:	mov	dword ptr [rbp - 0x1c], 0
0x40028e:	mov	edi, 0x6987
0x400293:	call	0x500028
<Block for 0x4003a3, 6 bytes>
0x4003a3:	cmp	dword ptr [rbp - 0x44], -1
0x4003a7:	je	0x4003b3
<Block for 0x400399, 10 bytes>
0x400399:	mov	eax, dword ptr [rbp - 0x40]
0x40039c:	mov	edi, eax
0x40039e:	call	0x500058
<Block for 0x400298, 26 bytes>
0x400298:	mov	word ptr [rbp - 0x1e], ax
0x40029c:	lea	rcx, [rbp - 0x20]
0x4002a0:	mov	eax, dword ptr [rbp - 0x40]
0x4002a3:	mov	edx, 0x10
0x4002a8:	mov	rsi, rcx
0x4002ab:	mov	edi, eax
0x4002ad:	call	0x500030
<Block for 0x4003b3, 12 bytes>
0x4003b3:	mov	rax, qword ptr [rbp - 0x38]
0x4003b7:	mov	rdi, rax
0x4003ba:	call	0x500070
<Block for 0x4003a9, 10 bytes>
0x4003a9:	mov	eax, dword ptr [rbp - 0x44]
0x4003ac:	mov	edi, eax
0x4003ae:	call	0x500058
<Block for 0x4002b2, 9 bytes>
0x4002b2:	cmp	eax, -1
0x4002b5:	je	0x40038c
<Block for 0x4003bf, 16 bytes>
0x4003bf:	nop	
0x4003c0:	mov	rax, qword ptr [rbp - 8]
0x4003c4:	xor	rax, qword ptr fs:[0x28]
0x4003cd:	je	0x4003d4
<Block for 0x40038c, 3 bytes>
0x40038c:	nop	
0x40038d:	jmp	0x400393
<Block for 0x4002bb, 15 bytes>
0x4002bb:	mov	eax, dword ptr [rbp - 0x40]
0x4002be:	mov	esi, 5
0x4002c3:	mov	edi, eax
0x4002c5:	call	0x500038
<Block for 0x4003d4, 2 bytes>
0x4003d4:	leave	
0x4003d5:	ret	
<Block for 0x4003cf, 5 bytes>
0x4003cf:	call	0x500068
<Block for 0x4002ca, 9 bytes>
0x4002ca:	cmp	eax, -1
0x4002cd:	je	0x40038f
<Block for 0x40038f, 3 bytes>
0x40038f:	nop	
0x400390:	jmp	0x400393
<Block for 0x4002d3, 20 bytes>
0x4002d3:	mov	eax, dword ptr [rbp - 0x40]
0x4002d6:	mov	edx, 0
0x4002db:	mov	esi, 0
0x4002e0:	mov	edi, eax
0x4002e2:	call	0x500040
<Block for 0x4002e7, 13 bytes>
0x4002e7:	mov	dword ptr [rbp - 0x44], eax
0x4002ea:	cmp	dword ptr [rbp - 0x44], -1
0x4002ee:	je	0x400392
<Block for 0x4002f4, 39 bytes>
0x4002f4:	mov	eax, 0x63
0x4002f9:	sub	rax, qword ptr [rbp - 0x30]
0x4002fd:	mov	rdx, rax
0x400300:	mov	rcx, qword ptr [rbp - 0x38]
0x400304:	mov	rax, qword ptr [rbp - 0x30]
0x400308:	lea	rsi, [rcx + rax]
0x40030c:	mov	eax, dword ptr [rbp - 0x44]
0x40030f:	mov	ecx, 0
0x400314:	mov	edi, eax
0x400316:	call	0x500048
<Block for 0x400392, 1 bytes>
0x400392:	nop	
<Block for 0x40031b, 9 bytes>
0x40031b:	mov	dword ptr [rbp - 0x3c], eax
0x40031e:	cmp	dword ptr [rbp - 0x3c], -1
0x400322:	je	0x400393
<Block for 0x400324, 6 bytes>
0x400324:	cmp	dword ptr [rbp - 0x3c], 0
0x400328:	je	0x400393
<Block for 0x40032a, 40 bytes>
0x40032a:	mov	eax, dword ptr [rbp - 0x3c]
0x40032d:	movsxd	rdx, eax
0x400330:	mov	rax, qword ptr [rbp - 0x30]
0x400334:	add	rdx, rax
0x400337:	mov	rax, qword ptr [rbp - 0x38]
0x40033b:	add	rax, rdx
0x40033e:	mov	byte ptr [rax], 0
0x400341:	mov	rax, qword ptr [rbp - 0x38]
0x400345:	mov	esi, 0xd
0x40034a:	mov	rdi, rax
0x40034d:	call	0x500050
<Block for 0x400352, 11 bytes>
0x400352:	mov	qword ptr [rbp - 0x28], rax
0x400356:	cmp	qword ptr [rbp - 0x28], 0
0x40035b:	je	0x400364
<Block for 0x400364, 17 bytes>
0x400364:	mov	rax, qword ptr [rbp - 0x38]
0x400368:	mov	esi, 0xa
0x40036d:	mov	rdi, rax
0x400370:	call	0x500050
<Block for 0x40035d, 24 bytes>
0x40035d:	mov	rax, qword ptr [rbp - 0x28]
0x400361:	mov	byte ptr [rax], 0
0x400364:	mov	rax, qword ptr [rbp - 0x38]
0x400368:	mov	esi, 0xa
0x40036d:	mov	rdi, rax
0x400370:	call	0x500050
<Block for 0x400375, 11 bytes>
0x400375:	mov	qword ptr [rbp - 0x28], rax
0x400379:	cmp	qword ptr [rbp - 0x28], 0
0x40037e:	je	0x400393
<Block for 0x400380, 9 bytes>
0x400380:	mov	rax, qword ptr [rbp - 0x28]
0x400384:	mov	byte ptr [rax], 0
0x400387:	jmp	0x400393
