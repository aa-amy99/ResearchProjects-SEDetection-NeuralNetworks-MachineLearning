<Block for 0x400131, 81 bytes>
0x400131:	endbr64	
0x400135:	push	rbp
0x400136:	mov	rbp, rsp
0x400139:	add	rsp, -0x80
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 8], rax
0x40014a:	xor	eax, eax
0x40014c:	mov	eax, 0x10
0x400151:	sub	rax, 1
0x400155:	add	rax, 0x6c
0x400159:	mov	esi, 0x10
0x40015e:	mov	edx, 0
0x400163:	div	rsi
0x400166:	imul	rax, rax, 0x10
0x40016a:	mov	rdx, rax
0x40016d:	and	rdx, 0xfffffffffffff000
0x400174:	mov	rcx, rsp
0x400177:	sub	rcx, rdx
0x40017a:	mov	rdx, rcx
0x40017d:	cmp	rsp, rdx
0x400180:	je	0x400194
<Block for 0x400194, 26 bytes>
0x400194:	mov	rdx, rax
0x400197:	and	edx, 0xfff
0x40019d:	sub	rsp, rdx
0x4001a0:	mov	rdx, rax
0x4001a3:	and	edx, 0xfff
0x4001a9:	test	rdx, rdx
0x4001ac:	je	0x4001be
<Block for 0x400182, 18 bytes>
0x400182:	sub	rsp, 0x1000
0x400189:	or	qword ptr [rsp + 0xff8], 0
0x400192:	jmp	0x40017d
<Block for 0x4001be, 41 bytes>
0x4001be:	mov	rax, rsp
0x4001c1:	add	rax, 0xf
0x4001c5:	shr	rax, 4
0x4001c9:	shl	rax, 4
0x4001cd:	mov	qword ptr [rbp - 0x80], rax
0x4001d1:	mov	rax, qword ptr [rbp - 0x80]
0x4001d5:	mov	edx, 0x63
0x4001da:	mov	esi, 0x41
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500000
<Block for 0x4001ae, 57 bytes>
0x4001ae:	and	eax, 0xfff
0x4001b3:	sub	rax, 8
0x4001b7:	add	rax, rsp
0x4001ba:	or	qword ptr [rax], 0
0x4001be:	mov	rax, rsp
0x4001c1:	add	rax, 0xf
0x4001c5:	shr	rax, 4
0x4001c9:	shl	rax, 4
0x4001cd:	mov	qword ptr [rbp - 0x80], rax
0x4001d1:	mov	rax, qword ptr [rbp - 0x80]
0x4001d5:	mov	edx, 0x63
0x4001da:	mov	esi, 0x41
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500000
<Block for 0x40017d, 5 bytes>
0x40017d:	cmp	rsp, rdx
0x400180:	je	0x400194
<Block for 0x4001e7, 42 bytes>
0x4001e7:	mov	rax, qword ptr [rbp - 0x80]
0x4001eb:	add	rax, 0x63
0x4001ef:	mov	byte ptr [rax], 0
0x4001f2:	mov	rax, qword ptr [rbp - 0x80]
0x4001f6:	mov	qword ptr [rbp - 0x78], rax
0x4001fa:	nop	
0x4001fb:	lea	rax, [rbp - 0x70]
0x4001ff:	mov	edx, 0x63
0x400204:	mov	esi, 0x43
0x400209:	mov	rdi, rax
0x40020c:	call	0x500000
<Block for 0x400211, 16 bytes>
0x400211:	mov	byte ptr [rbp - 0xd], 0
0x400215:	lea	rax, [rbp - 0x70]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500008
<Block for 0x400221, 22 bytes>
0x400221:	mov	rdx, rax
0x400224:	mov	rcx, qword ptr [rbp - 0x78]
0x400228:	lea	rax, [rbp - 0x70]
0x40022c:	mov	rsi, rcx
0x40022f:	mov	rdi, rax
0x400232:	call	0x500010
<Block for 0x400237, 16 bytes>
0x400237:	mov	byte ptr [rbp - 0xd], 0
0x40023b:	lea	rax, [rbp - 0x70]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500018
<Block for 0x400247, 16 bytes>
0x400247:	nop	
0x400248:	mov	rax, qword ptr [rbp - 8]
0x40024c:	xor	rax, qword ptr fs:[0x28]
0x400255:	je	0x40025c
<Block for 0x40025c, 2 bytes>
0x40025c:	leave	
0x40025d:	ret	
<Block for 0x400257, 5 bytes>
0x400257:	call	0x500020
