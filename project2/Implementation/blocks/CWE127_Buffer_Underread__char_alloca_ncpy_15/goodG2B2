<Block for 0x40025e, 81 bytes>
0x40025e:	endbr64	
0x400262:	push	rbp
0x400263:	mov	rbp, rsp
0x400266:	add	rsp, -0x80
0x40026a:	mov	rax, qword ptr fs:[0x28]
0x400273:	mov	qword ptr [rbp - 8], rax
0x400277:	xor	eax, eax
0x400279:	mov	eax, 0x10
0x40027e:	sub	rax, 1
0x400282:	add	rax, 0x6c
0x400286:	mov	esi, 0x10
0x40028b:	mov	edx, 0
0x400290:	div	rsi
0x400293:	imul	rax, rax, 0x10
0x400297:	mov	rdx, rax
0x40029a:	and	rdx, 0xfffffffffffff000
0x4002a1:	mov	rcx, rsp
0x4002a4:	sub	rcx, rdx
0x4002a7:	mov	rdx, rcx
0x4002aa:	cmp	rsp, rdx
0x4002ad:	je	0x4002c1
<Block for 0x4002c1, 26 bytes>
0x4002c1:	mov	rdx, rax
0x4002c4:	and	edx, 0xfff
0x4002ca:	sub	rsp, rdx
0x4002cd:	mov	rdx, rax
0x4002d0:	and	edx, 0xfff
0x4002d6:	test	rdx, rdx
0x4002d9:	je	0x4002eb
<Block for 0x4002af, 18 bytes>
0x4002af:	sub	rsp, 0x1000
0x4002b6:	or	qword ptr [rsp + 0xff8], 0
0x4002bf:	jmp	0x4002aa
<Block for 0x4002eb, 41 bytes>
0x4002eb:	mov	rax, rsp
0x4002ee:	add	rax, 0xf
0x4002f2:	shr	rax, 4
0x4002f6:	shl	rax, 4
0x4002fa:	mov	qword ptr [rbp - 0x80], rax
0x4002fe:	mov	rax, qword ptr [rbp - 0x80]
0x400302:	mov	edx, 0x63
0x400307:	mov	esi, 0x41
0x40030c:	mov	rdi, rax
0x40030f:	call	0x500000
<Block for 0x4002db, 57 bytes>
0x4002db:	and	eax, 0xfff
0x4002e0:	sub	rax, 8
0x4002e4:	add	rax, rsp
0x4002e7:	or	qword ptr [rax], 0
0x4002eb:	mov	rax, rsp
0x4002ee:	add	rax, 0xf
0x4002f2:	shr	rax, 4
0x4002f6:	shl	rax, 4
0x4002fa:	mov	qword ptr [rbp - 0x80], rax
0x4002fe:	mov	rax, qword ptr [rbp - 0x80]
0x400302:	mov	edx, 0x63
0x400307:	mov	esi, 0x41
0x40030c:	mov	rdi, rax
0x40030f:	call	0x500000
<Block for 0x4002aa, 5 bytes>
0x4002aa:	cmp	rsp, rdx
0x4002ad:	je	0x4002c1
<Block for 0x400314, 42 bytes>
0x400314:	mov	rax, qword ptr [rbp - 0x80]
0x400318:	add	rax, 0x63
0x40031c:	mov	byte ptr [rax], 0
0x40031f:	mov	rax, qword ptr [rbp - 0x80]
0x400323:	mov	qword ptr [rbp - 0x78], rax
0x400327:	nop	
0x400328:	lea	rax, [rbp - 0x70]
0x40032c:	mov	edx, 0x63
0x400331:	mov	esi, 0x43
0x400336:	mov	rdi, rax
0x400339:	call	0x500000
<Block for 0x40033e, 16 bytes>
0x40033e:	mov	byte ptr [rbp - 0xd], 0
0x400342:	lea	rax, [rbp - 0x70]
0x400346:	mov	rdi, rax
0x400349:	call	0x500008
<Block for 0x40034e, 22 bytes>
0x40034e:	mov	rdx, rax
0x400351:	mov	rcx, qword ptr [rbp - 0x78]
0x400355:	lea	rax, [rbp - 0x70]
0x400359:	mov	rsi, rcx
0x40035c:	mov	rdi, rax
0x40035f:	call	0x500010
<Block for 0x400364, 16 bytes>
0x400364:	mov	byte ptr [rbp - 0xd], 0
0x400368:	lea	rax, [rbp - 0x70]
0x40036c:	mov	rdi, rax
0x40036f:	call	0x500018
<Block for 0x400374, 16 bytes>
0x400374:	nop	
0x400375:	mov	rax, qword ptr [rbp - 8]
0x400379:	xor	rax, qword ptr fs:[0x28]
0x400382:	je	0x400389
<Block for 0x400389, 2 bytes>
0x400389:	leave	
0x40038a:	ret	
<Block for 0x400384, 5 bytes>
0x400384:	call	0x500020
