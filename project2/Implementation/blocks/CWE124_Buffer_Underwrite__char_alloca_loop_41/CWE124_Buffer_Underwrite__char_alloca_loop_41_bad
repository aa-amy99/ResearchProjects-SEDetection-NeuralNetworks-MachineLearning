<Block for 0x4000a7, 81 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	sub	rsp, 0x20
0x4000b3:	mov	rax, qword ptr fs:[0x28]
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	xor	eax, eax
0x4000c2:	mov	eax, 0x10
0x4000c7:	sub	rax, 1
0x4000cb:	add	rax, 0x6c
0x4000cf:	mov	esi, 0x10
0x4000d4:	mov	edx, 0
0x4000d9:	div	rsi
0x4000dc:	imul	rax, rax, 0x10
0x4000e0:	mov	rdx, rax
0x4000e3:	and	rdx, 0xfffffffffffff000
0x4000ea:	mov	rcx, rsp
0x4000ed:	sub	rcx, rdx
0x4000f0:	mov	rdx, rcx
0x4000f3:	cmp	rsp, rdx
0x4000f6:	je	0x40010a
<Block for 0x40010a, 26 bytes>
0x40010a:	mov	rdx, rax
0x40010d:	and	edx, 0xfff
0x400113:	sub	rsp, rdx
0x400116:	mov	rdx, rax
0x400119:	and	edx, 0xfff
0x40011f:	test	rdx, rdx
0x400122:	je	0x400134
<Block for 0x4000f8, 18 bytes>
0x4000f8:	sub	rsp, 0x1000
0x4000ff:	or	qword ptr [rsp + 0xff8], 0
0x400108:	jmp	0x4000f3
<Block for 0x400134, 41 bytes>
0x400134:	mov	rax, rsp
0x400137:	add	rax, 0xf
0x40013b:	shr	rax, 4
0x40013f:	shl	rax, 4
0x400143:	mov	qword ptr [rbp - 0x18], rax
0x400147:	mov	rax, qword ptr [rbp - 0x18]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x41
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x400124, 57 bytes>
0x400124:	and	eax, 0xfff
0x400129:	sub	rax, 8
0x40012d:	add	rax, rsp
0x400130:	or	qword ptr [rax], 0
0x400134:	mov	rax, rsp
0x400137:	add	rax, 0xf
0x40013b:	shr	rax, 4
0x40013f:	shl	rax, 4
0x400143:	mov	qword ptr [rbp - 0x18], rax
0x400147:	mov	rax, qword ptr [rbp - 0x18]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x41
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x4000f3, 5 bytes>
0x4000f3:	cmp	rsp, rdx
0x4000f6:	je	0x40010a
<Block for 0x40015d, 35 bytes>
0x40015d:	mov	rax, qword ptr [rbp - 0x18]
0x400161:	add	rax, 0x63
0x400165:	mov	byte ptr [rax], 0
0x400168:	mov	rax, qword ptr [rbp - 0x18]
0x40016c:	sub	rax, 8
0x400170:	mov	qword ptr [rbp - 0x10], rax
0x400174:	mov	rax, qword ptr [rbp - 0x10]
0x400178:	mov	rdi, rax
0x40017b:	call	0x400000
<Block for 0x400180, 16 bytes>
0x400180:	nop	
0x400181:	mov	rax, qword ptr [rbp - 8]
0x400185:	xor	rax, qword ptr fs:[0x28]
0x40018e:	je	0x400195
<Block for 0x400195, 2 bytes>
0x400195:	leave	
0x400196:	ret	
<Block for 0x400190, 5 bytes>
0x400190:	call	0x500010
