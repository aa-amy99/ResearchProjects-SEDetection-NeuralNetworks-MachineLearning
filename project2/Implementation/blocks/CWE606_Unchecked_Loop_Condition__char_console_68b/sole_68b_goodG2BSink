<Block for 0x400088, 66 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x20
0x400094:	mov	rax, qword ptr fs:[0x28]
0x40009d:	mov	qword ptr [rbp - 8], rax
0x4000a1:	xor	eax, eax
0x4000a3:	mov	rax, qword ptr [rip + 0xfff76]
0x4000aa:	mov	qword ptr [rbp - 0x10], rax
0x4000ae:	lea	rdx, [rbp - 0x1c]
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	lea	rsi, [rip + 0xe5]
0x4000bd:	mov	rdi, rax
0x4000c0:	mov	eax, 0
0x4000c5:	call	0x500008
<Block for 0x4000ca, 5 bytes>
0x4000ca:	cmp	eax, 1
0x4000cd:	jne	0x4000f9
<Block for 0x4000cf, 16 bytes>
0x4000cf:	mov	dword ptr [rbp - 0x14], 0
0x4000d6:	mov	dword ptr [rbp - 0x18], 0
0x4000dd:	jmp	0x4000e7
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x4000e7, 8 bytes>
0x4000e7:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ea:	cmp	dword ptr [rbp - 0x18], eax
0x4000ed:	jl	0x4000df
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500018
<Block for 0x4000df, 16 bytes>
0x4000df:	add	dword ptr [rbp - 0x14], 1
0x4000e3:	add	dword ptr [rbp - 0x18], 1
0x4000e7:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ea:	cmp	dword ptr [rbp - 0x18], eax
0x4000ed:	jl	0x4000df
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x14]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500010
