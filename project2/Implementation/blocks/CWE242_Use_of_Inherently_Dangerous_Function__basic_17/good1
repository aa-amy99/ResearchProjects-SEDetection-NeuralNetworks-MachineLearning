<Block for 0x400089, 36 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x30
0x400095:	mov	rax, qword ptr fs:[0x28]
0x40009e:	mov	qword ptr [rbp - 8], rax
0x4000a2:	xor	eax, eax
0x4000a4:	mov	dword ptr [rbp - 0x24], 0
0x4000ab:	jmp	0x4000fa
<Block for 0x4000fa, 6 bytes>
0x4000fa:	cmp	dword ptr [rbp - 0x24], 0
0x4000fe:	jle	0x4000ad
<Block for 0x4000ad, 24 bytes>
0x4000ad:	mov	rdx, qword ptr [rip + 0xfff6c]
0x4000b4:	lea	rax, [rbp - 0x12]
0x4000b8:	mov	esi, 0xa
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500028
<Block for 0x400100, 16 bytes>
0x400100:	nop	
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	xor	rax, qword ptr fs:[0x28]
0x40010e:	je	0x400115
<Block for 0x4000c5, 11 bytes>
0x4000c5:	mov	qword ptr [rbp - 0x20], rax
0x4000c9:	cmp	qword ptr [rbp - 0x20], 0
0x4000ce:	jne	0x4000e6
<Block for 0x400115, 2 bytes>
0x400115:	leave	
0x400116:	ret	
<Block for 0x400110, 5 bytes>
0x400110:	call	0x500018
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rdi, [rip + 0x59]
0x4000d7:	call	0x500008
<Block for 0x4000e6, 16 bytes>
0x4000e6:	mov	byte ptr [rbp - 9], 0
0x4000ea:	lea	rax, [rbp - 0x12]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500008
<Block for 0x4000dc, 10 bytes>
0x4000dc:	mov	edi, 1
0x4000e1:	call	0x500010
<Block for 0x4000f6, 10 bytes>
0x4000f6:	add	dword ptr [rbp - 0x24], 1
0x4000fa:	cmp	dword ptr [rbp - 0x24], 0
0x4000fe:	jle	0x4000ad
