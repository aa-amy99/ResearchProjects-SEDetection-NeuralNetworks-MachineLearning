<Block for 0x4001c0, 40 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	add	rsp, -0x80
0x4001cc:	mov	rax, qword ptr fs:[0x28]
0x4001d5:	mov	qword ptr [rbp - 8], rax
0x4001d9:	xor	eax, eax
0x4001db:	mov	qword ptr [rbp - 0x80], 0
0x4001e3:	call	0x400000
<Block for 0x4001e8, 9 bytes>
0x4001e8:	test	eax, eax
0x4001ea:	setne	al
0x4001ed:	test	al, al
0x4001ef:	je	0x400228
<Block for 0x400228, 22 bytes>
0x400228:	lea	rax, [rbp - 0x70]
0x40022c:	mov	edx, 0x63
0x400231:	mov	esi, 0x43
0x400236:	mov	rdi, rax
0x400239:	call	0x500008
<Block for 0x4001f1, 10 bytes>
0x4001f1:	mov	edi, 0x64
0x4001f6:	call	0x500000
<Block for 0x40023e, 28 bytes>
0x40023e:	mov	byte ptr [rbp - 0xd], 0
0x400242:	lea	rcx, [rbp - 0x70]
0x400246:	mov	rax, qword ptr [rbp - 0x80]
0x40024a:	mov	edx, 0x64
0x40024f:	mov	rsi, rcx
0x400252:	mov	rdi, rax
0x400255:	call	0x500010
<Block for 0x4001fb, 26 bytes>
0x4001fb:	mov	qword ptr [rbp - 0x78], rax
0x4001ff:	mov	rax, qword ptr [rbp - 0x78]
0x400203:	mov	edx, 0x63
0x400208:	mov	esi, 0x41
0x40020d:	mov	rdi, rax
0x400210:	call	0x500008
<Block for 0x40025a, 23 bytes>
0x40025a:	mov	rax, qword ptr [rbp - 0x80]
0x40025e:	add	rax, 0x63
0x400262:	mov	byte ptr [rax], 0
0x400265:	mov	rax, qword ptr [rbp - 0x80]
0x400269:	mov	rdi, rax
0x40026c:	call	0x500018
<Block for 0x400215, 41 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x78]
0x400219:	add	rax, 0x63
0x40021d:	mov	byte ptr [rax], 0
0x400220:	mov	rax, qword ptr [rbp - 0x78]
0x400224:	mov	qword ptr [rbp - 0x80], rax
0x400228:	lea	rax, [rbp - 0x70]
0x40022c:	mov	edx, 0x63
0x400231:	mov	esi, 0x43
0x400236:	mov	rdi, rax
0x400239:	call	0x500008
<Block for 0x400271, 16 bytes>
0x400271:	nop	
0x400272:	mov	rax, qword ptr [rbp - 8]
0x400276:	xor	rax, qword ptr fs:[0x28]
0x40027f:	je	0x400286
<Block for 0x400286, 2 bytes>
0x400286:	leave	
0x400287:	ret	
<Block for 0x400281, 5 bytes>
0x400281:	call	0x500020
