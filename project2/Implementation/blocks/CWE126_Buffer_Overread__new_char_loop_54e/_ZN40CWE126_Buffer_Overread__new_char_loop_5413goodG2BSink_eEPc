<Block for 0x4000c6, 59 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	sub	rsp, 0x90
0x4000d5:	mov	qword ptr [rbp - 0x88], rdi
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	lea	rax, [rbp - 0x70]
0x4000ef:	mov	edx, 0x63
0x4000f4:	mov	esi, 0x43
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x500000
<Block for 0x400101, 16 bytes>
0x400101:	mov	byte ptr [rbp - 0xd], 0
0x400105:	lea	rax, [rbp - 0x70]
0x400109:	mov	rdi, rax
0x40010c:	call	0x500008
<Block for 0x400111, 22 bytes>
0x400111:	mov	qword ptr [rbp - 0x78], rax
0x400115:	mov	qword ptr [rbp - 0x80], 0
0x40011d:	mov	rax, qword ptr [rbp - 0x80]
0x400121:	cmp	rax, qword ptr [rbp - 0x78]
0x400125:	jae	0x40014c
<Block for 0x400127, 37 bytes>
0x400127:	mov	rdx, qword ptr [rbp - 0x88]
0x40012e:	mov	rax, qword ptr [rbp - 0x80]
0x400132:	add	rax, rdx
0x400135:	movzx	eax, byte ptr [rax]
0x400138:	lea	rcx, [rbp - 0x70]
0x40013c:	mov	rdx, qword ptr [rbp - 0x80]
0x400140:	add	rdx, rcx
0x400143:	mov	byte ptr [rdx], al
0x400145:	add	qword ptr [rbp - 0x80], 1
0x40014a:	jmp	0x40011d
<Block for 0x40014c, 16 bytes>
0x40014c:	mov	byte ptr [rbp - 0xd], 0
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	rdi, rax
0x400157:	call	0x500010
<Block for 0x40011d, 10 bytes>
0x40011d:	mov	rax, qword ptr [rbp - 0x80]
0x400121:	cmp	rax, qword ptr [rbp - 0x78]
0x400125:	jae	0x40014c
<Block for 0x40015c, 10 bytes>
0x40015c:	cmp	qword ptr [rbp - 0x88], 0
0x400164:	je	0x400175
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x400166, 15 bytes>
0x400166:	mov	rax, qword ptr [rbp - 0x88]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500018
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500020
