<Block for 0x4002ce, 40 bytes>
0x4002ce:	endbr64	
0x4002d2:	push	rbp
0x4002d3:	mov	rbp, rsp
0x4002d6:	sub	rsp, 0xa0
0x4002dd:	mov	rax, qword ptr fs:[0x28]
0x4002e6:	mov	qword ptr [rbp - 8], rax
0x4002ea:	xor	eax, eax
0x4002ec:	mov	eax, 5
0x4002f1:	cmp	eax, 5
0x4002f4:	je	0x400307
<Block for 0x400307, 135 bytes>
0x400307:	mov	qword ptr [rbp - 0x70], 0
0x40030f:	mov	qword ptr [rbp - 0x68], 0
0x400317:	mov	qword ptr [rbp - 0x60], 0
0x40031f:	mov	qword ptr [rbp - 0x58], 0
0x400327:	mov	qword ptr [rbp - 0x50], 0
0x40032f:	mov	qword ptr [rbp - 0x48], 0
0x400337:	mov	qword ptr [rbp - 0x40], 0
0x40033f:	mov	qword ptr [rbp - 0x38], 0
0x400347:	mov	qword ptr [rbp - 0x30], 0
0x40034f:	mov	qword ptr [rbp - 0x28], 0
0x400357:	mov	qword ptr [rbp - 0x20], 0
0x40035f:	mov	qword ptr [rbp - 0x18], 0
0x400367:	mov	dword ptr [rbp - 0x10], 0
0x40036e:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400378:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400382:	lea	rax, [rbp - 0x70]
0x400386:	mov	rdi, rax
0x400389:	call	0x500000
<Block for 0x4002f6, 12 bytes>
0x4002f6:	lea	rdi, [rip + 0x50b]
0x4002fd:	call	0x500058
<Block for 0x40038e, 27 bytes>
0x40038e:	mov	qword ptr [rbp - 0x90], rax
0x400395:	mov	edx, 6
0x40039a:	mov	esi, 1
0x40039f:	mov	edi, 2
0x4003a4:	call	0x500008
<Block for 0x400302, 5 bytes>
0x400302:	jmp	0x400549
<Block for 0x4003a9, 19 bytes>
0x4003a9:	mov	dword ptr [rbp - 0x98], eax
0x4003af:	cmp	dword ptr [rbp - 0x98], -1
0x4003b6:	je	0x400507
<Block for 0x400549, 16 bytes>
0x400549:	nop	
0x40054a:	mov	rax, qword ptr [rbp - 8]
0x40054e:	xor	rax, qword ptr fs:[0x28]
0x400557:	je	0x40055e
<Block for 0x400507, 3 bytes>
0x400507:	nop	
0x400508:	jmp	0x400511
<Block for 0x4003bc, 22 bytes>
0x4003bc:	lea	rax, [rbp - 0x80]
0x4003c0:	mov	edx, 0x10
0x4003c5:	mov	esi, 0
0x4003ca:	mov	rdi, rax
0x4003cd:	call	0x500018
<Block for 0x40055e, 2 bytes>
0x40055e:	leave	
0x40055f:	ret	
<Block for 0x400559, 5 bytes>
0x400559:	call	0x500060
<Block for 0x400511, 9 bytes>
0x400511:	cmp	dword ptr [rbp - 0x98], -1
0x400518:	je	0x400527
<Block for 0x4003d2, 23 bytes>
0x4003d2:	mov	word ptr [rbp - 0x80], 2
0x4003d8:	mov	dword ptr [rbp - 0x7c], 0
0x4003df:	mov	edi, 0x6987
0x4003e4:	call	0x500020
<Block for 0x400527, 9 bytes>
0x400527:	cmp	dword ptr [rbp - 0x9c], -1
0x40052e:	je	0x40053d
<Block for 0x40051a, 13 bytes>
0x40051a:	mov	eax, dword ptr [rbp - 0x98]
0x400520:	mov	edi, eax
0x400522:	call	0x500050
<Block for 0x4003e9, 29 bytes>
0x4003e9:	mov	word ptr [rbp - 0x7e], ax
0x4003ed:	lea	rcx, [rbp - 0x80]
0x4003f1:	mov	eax, dword ptr [rbp - 0x98]
0x4003f7:	mov	edx, 0x10
0x4003fc:	mov	rsi, rcx
0x4003ff:	mov	edi, eax
0x400401:	call	0x500028
<Block for 0x40053d, 12 bytes>
0x40053d:	lea	rax, [rbp - 0x70]
0x400541:	mov	rdi, rax
0x400544:	call	0x500058
<Block for 0x400530, 13 bytes>
0x400530:	mov	eax, dword ptr [rbp - 0x9c]
0x400536:	mov	edi, eax
0x400538:	call	0x500050
<Block for 0x400406, 9 bytes>
0x400406:	cmp	eax, -1
0x400409:	je	0x40050a
<Block for 0x40050a, 3 bytes>
0x40050a:	nop	
0x40050b:	jmp	0x400511
<Block for 0x40040f, 18 bytes>
0x40040f:	mov	eax, dword ptr [rbp - 0x98]
0x400415:	mov	esi, 5
0x40041a:	mov	edi, eax
0x40041c:	call	0x500030
<Block for 0x400421, 9 bytes>
0x400421:	cmp	eax, -1
0x400424:	je	0x40050d
<Block for 0x40050d, 3 bytes>
0x40050d:	nop	
0x40050e:	jmp	0x400511
<Block for 0x40042a, 23 bytes>
0x40042a:	mov	eax, dword ptr [rbp - 0x98]
0x400430:	mov	edx, 0
0x400435:	mov	esi, 0
0x40043a:	mov	edi, eax
0x40043c:	call	0x500038
<Block for 0x400441, 19 bytes>
0x400441:	mov	dword ptr [rbp - 0x9c], eax
0x400447:	cmp	dword ptr [rbp - 0x9c], -1
0x40044e:	je	0x400510
<Block for 0x400454, 52 bytes>
0x400454:	mov	rax, qword ptr [rbp - 0x90]
0x40045b:	mov	edx, 0x63
0x400460:	sub	edx, eax
0x400462:	mov	eax, edx
0x400464:	movsxd	rdx, eax
0x400467:	lea	rcx, [rbp - 0x70]
0x40046b:	mov	rax, qword ptr [rbp - 0x90]
0x400472:	lea	rsi, [rcx + rax]
0x400476:	mov	eax, dword ptr [rbp - 0x9c]
0x40047c:	mov	ecx, 0
0x400481:	mov	edi, eax
0x400483:	call	0x500040
<Block for 0x400510, 1 bytes>
0x400510:	nop	
<Block for 0x400488, 15 bytes>
0x400488:	mov	dword ptr [rbp - 0x94], eax
0x40048e:	cmp	dword ptr [rbp - 0x94], -1
0x400495:	je	0x400511
<Block for 0x400497, 9 bytes>
0x400497:	cmp	dword ptr [rbp - 0x94], 0
0x40049e:	je	0x400511
<Block for 0x4004a0, 30 bytes>
0x4004a0:	mov	eax, dword ptr [rbp - 0x94]
0x4004a6:	cdqe	
0x4004a8:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004ad:	lea	rax, [rbp - 0x70]
0x4004b1:	mov	esi, 0xd
0x4004b6:	mov	rdi, rax
0x4004b9:	call	0x500048
<Block for 0x4004be, 17 bytes>
0x4004be:	mov	qword ptr [rbp - 0x88], rax
0x4004c5:	cmp	qword ptr [rbp - 0x88], 0
0x4004cd:	je	0x4004d9
<Block for 0x4004d9, 17 bytes>
0x4004d9:	lea	rax, [rbp - 0x70]
0x4004dd:	mov	esi, 0xa
0x4004e2:	mov	rdi, rax
0x4004e5:	call	0x500048
<Block for 0x4004cf, 27 bytes>
0x4004cf:	mov	rax, qword ptr [rbp - 0x88]
0x4004d6:	mov	byte ptr [rax], 0
0x4004d9:	lea	rax, [rbp - 0x70]
0x4004dd:	mov	esi, 0xa
0x4004e2:	mov	rdi, rax
0x4004e5:	call	0x500048
<Block for 0x4004ea, 17 bytes>
0x4004ea:	mov	qword ptr [rbp - 0x88], rax
0x4004f1:	cmp	qword ptr [rbp - 0x88], 0
0x4004f9:	je	0x400511
<Block for 0x4004fb, 12 bytes>
0x4004fb:	mov	rax, qword ptr [rbp - 0x88]
0x400502:	mov	byte ptr [rax], 0
0x400505:	jmp	0x400511
