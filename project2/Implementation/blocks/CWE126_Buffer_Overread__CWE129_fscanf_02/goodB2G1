<Block for 0x4000a5, 65 bytes>
0x4000a5:	endbr64	
0x4000a9:	push	rbp
0x4000aa:	mov	rbp, rsp
0x4000ad:	sub	rsp, 0x40
0x4000b1:	mov	rax, qword ptr fs:[0x28]
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	xor	eax, eax
0x4000c0:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000c7:	mov	rax, qword ptr [rip + 0xfff32]
0x4000ce:	lea	rdx, [rbp - 0x34]
0x4000d2:	lea	rsi, [rip + 0x277]
0x4000d9:	mov	rdi, rax
0x4000dc:	mov	eax, 0
0x4000e1:	call	0x500008
<Block for 0x4000e6, 47 bytes>
0x4000e6:	mov	qword ptr [rbp - 0x30], 0
0x4000ee:	mov	qword ptr [rbp - 0x28], 0
0x4000f6:	mov	qword ptr [rbp - 0x20], 0
0x4000fe:	mov	qword ptr [rbp - 0x18], 0
0x400106:	mov	qword ptr [rbp - 0x10], 0
0x40010e:	mov	eax, dword ptr [rbp - 0x34]
0x400111:	test	eax, eax
0x400113:	js	0x40012f
<Block for 0x40012f, 12 bytes>
0x40012f:	lea	rdi, [rip + 0x242]
0x400136:	call	0x500018
<Block for 0x400115, 8 bytes>
0x400115:	mov	eax, dword ptr [rbp - 0x34]
0x400118:	cmp	eax, 9
0x40011b:	jg	0x40012f
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x40011d, 16 bytes>
0x40011d:	mov	eax, dword ptr [rbp - 0x34]
0x400120:	cdqe	
0x400122:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400126:	mov	edi, eax
0x400128:	call	0x500010
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500020
<Block for 0x40012d, 2 bytes>
0x40012d:	jmp	0x40013b
