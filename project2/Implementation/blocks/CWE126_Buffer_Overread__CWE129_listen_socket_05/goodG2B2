<Block for 0x4005e7, 44 bytes>
0x4005e7:	endbr64	
0x4005eb:	push	rbp
0x4005ec:	mov	rbp, rsp
0x4005ef:	sub	rsp, 0x40
0x4005f3:	mov	rax, qword ptr fs:[0x28]
0x4005fc:	mov	qword ptr [rbp - 8], rax
0x400600:	xor	eax, eax
0x400602:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400609:	mov	eax, dword ptr [rip + 0xad]
0x40060f:	test	eax, eax
0x400611:	je	0x40061a
<Block for 0x40061a, 10 bytes>
0x40061a:	mov	eax, dword ptr [rip + 0x9c]
0x400620:	test	eax, eax
0x400622:	je	0x400670
<Block for 0x400613, 17 bytes>
0x400613:	mov	dword ptr [rbp - 0x34], 7
0x40061a:	mov	eax, dword ptr [rip + 0x9c]
0x400620:	test	eax, eax
0x400622:	je	0x400670
<Block for 0x400670, 16 bytes>
0x400670:	nop	
0x400671:	mov	rax, qword ptr [rbp - 8]
0x400675:	xor	rax, qword ptr fs:[0x28]
0x40067e:	je	0x400685
<Block for 0x400624, 46 bytes>
0x400624:	mov	qword ptr [rbp - 0x30], 0
0x40062c:	mov	qword ptr [rbp - 0x28], 0
0x400634:	mov	qword ptr [rbp - 0x20], 0
0x40063c:	mov	qword ptr [rbp - 0x18], 0
0x400644:	mov	qword ptr [rbp - 0x10], 0
0x40064c:	cmp	dword ptr [rbp - 0x34], 0
0x400650:	js	0x400664
<Block for 0x400685, 2 bytes>
0x400685:	leave	
0x400686:	ret	
<Block for 0x400680, 5 bytes>
0x400680:	call	0x500058
<Block for 0x400664, 12 bytes>
0x400664:	lea	rdi, [rip + 0x5d]
0x40066b:	call	0x500050
<Block for 0x400652, 16 bytes>
0x400652:	mov	eax, dword ptr [rbp - 0x34]
0x400655:	cdqe	
0x400657:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40065b:	mov	edi, eax
0x40065d:	call	0x500048
<Block for 0x400662, 2 bytes>
0x400662:	jmp	0x400670
