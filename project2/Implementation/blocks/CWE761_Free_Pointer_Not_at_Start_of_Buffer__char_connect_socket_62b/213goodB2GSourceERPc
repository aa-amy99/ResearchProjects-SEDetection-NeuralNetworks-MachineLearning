<Block for 0x400183, 53 bytes>
0x400183:	endbr64	
0x400187:	push	rbp
0x400188:	mov	rbp, rsp
0x40018b:	sub	rsp, 0x50
0x40018f:	mov	qword ptr [rbp - 0x48], rdi
0x400193:	mov	rax, qword ptr fs:[0x28]
0x40019c:	mov	qword ptr [rbp - 8], rax
0x4001a0:	xor	eax, eax
0x4001a2:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001a9:	mov	rax, qword ptr [rbp - 0x48]
0x4001ad:	mov	rax, qword ptr [rax]
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x500000
<Block for 0x4001b8, 24 bytes>
0x4001b8:	mov	qword ptr [rbp - 0x30], rax
0x4001bc:	mov	edx, 6
0x4001c1:	mov	esi, 1
0x4001c6:	mov	edi, 2
0x4001cb:	call	0x500008
<Block for 0x4001d0, 13 bytes>
0x4001d0:	mov	dword ptr [rbp - 0x38], eax
0x4001d3:	cmp	dword ptr [rbp - 0x38], -1
0x4001d7:	je	0x4002db
<Block for 0x4002db, 3 bytes>
0x4002db:	nop	
0x4002dc:	jmp	0x4002df
<Block for 0x4001dd, 22 bytes>
0x4001dd:	lea	rax, [rbp - 0x20]
0x4001e1:	mov	edx, 0x10
0x4001e6:	mov	esi, 0
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500010
<Block for 0x4002df, 6 bytes>
0x4002df:	cmp	dword ptr [rbp - 0x38], -1
0x4002e3:	je	0x4002ef
<Block for 0x4001f3, 18 bytes>
0x4001f3:	mov	word ptr [rbp - 0x20], 2
0x4001f9:	lea	rdi, [rip + 0x106]
0x400200:	call	0x500018
<Block for 0x4002ef, 16 bytes>
0x4002ef:	nop	
0x4002f0:	mov	rax, qword ptr [rbp - 8]
0x4002f4:	xor	rax, qword ptr fs:[0x28]
0x4002fd:	je	0x400304
<Block for 0x4002e5, 10 bytes>
0x4002e5:	mov	eax, dword ptr [rbp - 0x38]
0x4002e8:	mov	edi, eax
0x4002ea:	call	0x500040
<Block for 0x400205, 13 bytes>
0x400205:	mov	dword ptr [rbp - 0x1c], eax
0x400208:	mov	edi, 0x6987
0x40020d:	call	0x500020
<Block for 0x400304, 2 bytes>
0x400304:	leave	
0x400305:	ret	
<Block for 0x4002ff, 5 bytes>
0x4002ff:	call	0x500048
<Block for 0x400212, 26 bytes>
0x400212:	mov	word ptr [rbp - 0x1e], ax
0x400216:	lea	rcx, [rbp - 0x20]
0x40021a:	mov	eax, dword ptr [rbp - 0x38]
0x40021d:	mov	edx, 0x10
0x400222:	mov	rsi, rcx
0x400225:	mov	edi, eax
0x400227:	call	0x500028
<Block for 0x40022c, 14 bytes>
0x40022c:	cmp	eax, -1
0x40022f:	sete	al
0x400232:	test	al, al
0x400234:	jne	0x4002de
<Block for 0x40023a, 42 bytes>
0x40023a:	mov	eax, 0x63
0x40023f:	sub	rax, qword ptr [rbp - 0x30]
0x400243:	mov	rdx, rax
0x400246:	mov	rax, qword ptr [rbp - 0x48]
0x40024a:	mov	rcx, qword ptr [rax]
0x40024d:	mov	rax, qword ptr [rbp - 0x30]
0x400251:	lea	rsi, [rcx + rax]
0x400255:	mov	eax, dword ptr [rbp - 0x38]
0x400258:	mov	ecx, 0
0x40025d:	mov	edi, eax
0x40025f:	call	0x500030
<Block for 0x4002de, 1 bytes>
0x4002de:	nop	
<Block for 0x400264, 9 bytes>
0x400264:	mov	dword ptr [rbp - 0x34], eax
0x400267:	cmp	dword ptr [rbp - 0x34], -1
0x40026b:	je	0x4002df
<Block for 0x40026d, 6 bytes>
0x40026d:	cmp	dword ptr [rbp - 0x34], 0
0x400271:	je	0x4002df
<Block for 0x400273, 46 bytes>
0x400273:	mov	rax, qword ptr [rbp - 0x48]
0x400277:	mov	rax, qword ptr [rax]
0x40027a:	mov	edx, dword ptr [rbp - 0x34]
0x40027d:	movsxd	rcx, edx
0x400280:	mov	rdx, qword ptr [rbp - 0x30]
0x400284:	add	rdx, rcx
0x400287:	add	rax, rdx
0x40028a:	mov	byte ptr [rax], 0
0x40028d:	mov	rax, qword ptr [rbp - 0x48]
0x400291:	mov	rax, qword ptr [rax]
0x400294:	mov	esi, 0xd
0x400299:	mov	rdi, rax
0x40029c:	call	0x500038
<Block for 0x4002a1, 11 bytes>
0x4002a1:	mov	qword ptr [rbp - 0x28], rax
0x4002a5:	cmp	qword ptr [rbp - 0x28], 0
0x4002aa:	je	0x4002b3
<Block for 0x4002b3, 20 bytes>
0x4002b3:	mov	rax, qword ptr [rbp - 0x48]
0x4002b7:	mov	rax, qword ptr [rax]
0x4002ba:	mov	esi, 0xa
0x4002bf:	mov	rdi, rax
0x4002c2:	call	0x500038
<Block for 0x4002ac, 27 bytes>
0x4002ac:	mov	rax, qword ptr [rbp - 0x28]
0x4002b0:	mov	byte ptr [rax], 0
0x4002b3:	mov	rax, qword ptr [rbp - 0x48]
0x4002b7:	mov	rax, qword ptr [rax]
0x4002ba:	mov	esi, 0xa
0x4002bf:	mov	rdi, rax
0x4002c2:	call	0x500038
<Block for 0x4002c7, 11 bytes>
0x4002c7:	mov	qword ptr [rbp - 0x28], rax
0x4002cb:	cmp	qword ptr [rbp - 0x28], 0
0x4002d0:	je	0x4002df
<Block for 0x4002d2, 9 bytes>
0x4002d2:	mov	rax, qword ptr [rbp - 0x28]
0x4002d6:	mov	byte ptr [rax], 0
0x4002d9:	jmp	0x4002df
