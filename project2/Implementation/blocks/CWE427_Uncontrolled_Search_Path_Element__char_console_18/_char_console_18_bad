<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 44 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x120], rax
0x40006a:	nop	
0x40006b:	endbr64	
0x40006f:	mov	rax, qword ptr [rbp - 0x120]
0x400076:	mov	rdi, rax
0x400079:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x40007e, 29 bytes>
0x40007e:	mov	qword ptr [rbp - 0x118], rax
0x400085:	mov	eax, 0xfa
0x40008a:	sub	rax, qword ptr [rbp - 0x118]
0x400091:	cmp	rax, 1
0x400095:	jbe	0x40014b
<Block for 0x40014b, 15 bytes>
0x40014b:	mov	rax, qword ptr [rbp - 0x120]
0x400152:	mov	rdi, rax
0x400155:	call	0x500020
<Block for 0x40009b, 53 bytes>
0x40009b:	mov	rax, qword ptr [rip + 0xfff66]
0x4000a2:	mov	rdx, qword ptr [rbp - 0x118]
0x4000a9:	mov	ecx, 0xfa
0x4000ae:	sub	ecx, edx
0x4000b0:	mov	edx, ecx
0x4000b2:	mov	esi, edx
0x4000b4:	mov	rcx, qword ptr [rbp - 0x120]
0x4000bb:	mov	rdx, qword ptr [rbp - 0x118]
0x4000c2:	add	rcx, rdx
0x4000c5:	mov	rdx, rax
0x4000c8:	mov	rdi, rcx
0x4000cb:	call	0x500010
<Block for 0x40015a, 16 bytes>
0x40015a:	nop	
0x40015b:	mov	rax, qword ptr [rbp - 8]
0x40015f:	xor	rax, qword ptr fs:[0x28]
0x400168:	je	0x40016f
<Block for 0x4000d0, 5 bytes>
0x4000d0:	test	rax, rax
0x4000d3:	je	0x40012b
<Block for 0x40016f, 2 bytes>
0x40016f:	leave	
0x400170:	ret	
<Block for 0x40016a, 5 bytes>
0x40016a:	call	0x500028
<Block for 0x40012b, 12 bytes>
0x40012b:	lea	rdi, [rip + 0x122]
0x400132:	call	0x500018
<Block for 0x4000d5, 15 bytes>
0x4000d5:	mov	rax, qword ptr [rbp - 0x120]
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500000
<Block for 0x400137, 35 bytes>
0x400137:	mov	rdx, qword ptr [rbp - 0x120]
0x40013e:	mov	rax, qword ptr [rbp - 0x118]
0x400145:	add	rax, rdx
0x400148:	mov	byte ptr [rax], 0
0x40014b:	mov	rax, qword ptr [rbp - 0x120]
0x400152:	mov	rdi, rax
0x400155:	call	0x500020
<Block for 0x4000e4, 17 bytes>
0x4000e4:	mov	qword ptr [rbp - 0x118], rax
0x4000eb:	cmp	qword ptr [rbp - 0x118], 0
0x4000f3:	je	0x40014b
<Block for 0x4000f5, 28 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 0x118]
0x4000fc:	lea	rdx, [rax - 1]
0x400100:	mov	rax, qword ptr [rbp - 0x120]
0x400107:	add	rax, rdx
0x40010a:	movzx	eax, byte ptr [rax]
0x40010d:	cmp	al, 0xa
0x40010f:	jne	0x40014b
<Block for 0x400111, 26 bytes>
0x400111:	mov	rax, qword ptr [rbp - 0x118]
0x400118:	lea	rdx, [rax - 1]
0x40011c:	mov	rax, qword ptr [rbp - 0x120]
0x400123:	add	rax, rdx
0x400126:	mov	byte ptr [rax], 0
0x400129:	jmp	0x40014b
