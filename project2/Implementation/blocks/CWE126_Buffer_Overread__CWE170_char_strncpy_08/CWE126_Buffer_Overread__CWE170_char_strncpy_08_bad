<Block for 0x40001e, 40 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x110
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0
0x400041:	call	0x400000
<Block for 0x400046, 4 bytes>
0x400046:	test	eax, eax
0x400048:	je	0x400094
<Block for 0x400094, 16 bytes>
0x400094:	nop	
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	xor	rax, qword ptr fs:[0x28]
0x4000a2:	je	0x4000a9
<Block for 0x40004a, 25 bytes>
0x40004a:	lea	rax, [rbp - 0xa0]
0x400051:	mov	edx, 0x95
0x400056:	mov	esi, 0x41
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500000
<Block for 0x4000a9, 2 bytes>
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500018
<Block for 0x400063, 34 bytes>
0x400063:	mov	byte ptr [rbp - 0xb], 0
0x400067:	lea	rcx, [rbp - 0xa0]
0x40006e:	lea	rax, [rbp - 0x110]
0x400075:	mov	edx, 0x63
0x40007a:	mov	rsi, rcx
0x40007d:	mov	rdi, rax
0x400080:	call	0x500008
<Block for 0x400085, 15 bytes>
0x400085:	lea	rax, [rbp - 0x110]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
