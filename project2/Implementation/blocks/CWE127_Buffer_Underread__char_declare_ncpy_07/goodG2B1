<Block for 0x4000be, 55 bytes>
0x4000be:	endbr64	
0x4000c2:	push	rbp
0x4000c3:	mov	rbp, rsp
0x4000c6:	sub	rsp, 0xf0
0x4000cd:	mov	rax, qword ptr fs:[0x28]
0x4000d6:	mov	qword ptr [rbp - 8], rax
0x4000da:	xor	eax, eax
0x4000dc:	lea	rax, [rbp - 0xe0]
0x4000e3:	mov	edx, 0x63
0x4000e8:	mov	esi, 0x41
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500000
<Block for 0x4000f5, 15 bytes>
0x4000f5:	mov	byte ptr [rbp - 0x7d], 0
0x4000f9:	mov	eax, dword ptr [rip + 0x161]
0x4000ff:	cmp	eax, 5
0x400102:	je	0x400112
<Block for 0x400112, 36 bytes>
0x400112:	lea	rax, [rbp - 0xe0]
0x400119:	mov	qword ptr [rbp - 0xe8], rax
0x400120:	lea	rax, [rbp - 0x70]
0x400124:	mov	edx, 0x63
0x400129:	mov	esi, 0x43
0x40012e:	mov	rdi, rax
0x400131:	call	0x500000
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x159]
0x40010b:	call	0x500018
<Block for 0x400136, 16 bytes>
0x400136:	mov	byte ptr [rbp - 0xd], 0
0x40013a:	lea	rax, [rbp - 0x70]
0x40013e:	mov	rdi, rax
0x400141:	call	0x500008
<Block for 0x400110, 2 bytes>
0x400110:	jmp	0x400120
<Block for 0x400146, 25 bytes>
0x400146:	mov	rdx, rax
0x400149:	mov	rcx, qword ptr [rbp - 0xe8]
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	rsi, rcx
0x400157:	mov	rdi, rax
0x40015a:	call	0x500010
<Block for 0x400120, 22 bytes>
0x400120:	lea	rax, [rbp - 0x70]
0x400124:	mov	edx, 0x63
0x400129:	mov	esi, 0x43
0x40012e:	mov	rdi, rax
0x400131:	call	0x500000
<Block for 0x40015f, 16 bytes>
0x40015f:	mov	byte ptr [rbp - 0xd], 0
0x400163:	lea	rax, [rbp - 0x70]
0x400167:	mov	rdi, rax
0x40016a:	call	0x500018
<Block for 0x40016f, 16 bytes>
0x40016f:	nop	
0x400170:	mov	rax, qword ptr [rbp - 8]
0x400174:	xor	rax, qword ptr fs:[0x28]
0x40017d:	je	0x400184
<Block for 0x400184, 2 bytes>
0x400184:	leave	
0x400185:	ret	
<Block for 0x40017f, 5 bytes>
0x40017f:	call	0x500020
