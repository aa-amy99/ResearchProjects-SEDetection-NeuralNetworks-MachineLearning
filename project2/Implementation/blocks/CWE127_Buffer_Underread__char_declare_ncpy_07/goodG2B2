<Block for 0x400186, 55 bytes>
0x400186:	endbr64	
0x40018a:	push	rbp
0x40018b:	mov	rbp, rsp
0x40018e:	sub	rsp, 0xf0
0x400195:	mov	rax, qword ptr fs:[0x28]
0x40019e:	mov	qword ptr [rbp - 8], rax
0x4001a2:	xor	eax, eax
0x4001a4:	lea	rax, [rbp - 0xe0]
0x4001ab:	mov	edx, 0x63
0x4001b0:	mov	esi, 0x41
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500000
<Block for 0x4001bd, 15 bytes>
0x4001bd:	mov	byte ptr [rbp - 0x7d], 0
0x4001c1:	mov	eax, dword ptr [rip + 0x99]
0x4001c7:	cmp	eax, 5
0x4001ca:	jne	0x4001da
<Block for 0x4001cc, 36 bytes>
0x4001cc:	lea	rax, [rbp - 0xe0]
0x4001d3:	mov	qword ptr [rbp - 0xe8], rax
0x4001da:	lea	rax, [rbp - 0x70]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x43
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x4001da, 22 bytes>
0x4001da:	lea	rax, [rbp - 0x70]
0x4001de:	mov	edx, 0x63
0x4001e3:	mov	esi, 0x43
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500000
<Block for 0x4001f0, 16 bytes>
0x4001f0:	mov	byte ptr [rbp - 0xd], 0
0x4001f4:	lea	rax, [rbp - 0x70]
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500008
<Block for 0x400200, 25 bytes>
0x400200:	mov	rdx, rax
0x400203:	mov	rcx, qword ptr [rbp - 0xe8]
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	rsi, rcx
0x400211:	mov	rdi, rax
0x400214:	call	0x500010
<Block for 0x400219, 16 bytes>
0x400219:	mov	byte ptr [rbp - 0xd], 0
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	rdi, rax
0x400224:	call	0x500018
<Block for 0x400229, 16 bytes>
0x400229:	nop	
0x40022a:	mov	rax, qword ptr [rbp - 8]
0x40022e:	xor	rax, qword ptr fs:[0x28]
0x400237:	je	0x40023e
<Block for 0x40023e, 2 bytes>
0x40023e:	leave	
0x40023f:	ret	
<Block for 0x400239, 5 bytes>
0x400239:	call	0x500020
