<Block for 0x400000, 94 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x48]
0x400023:	mov	qword ptr [rbp - 0x38], rax
0x400027:	mov	rax, qword ptr [rbp - 0x38]
0x40002b:	mov	eax, dword ptr [rax]
0x40002d:	mov	dword ptr [rbp - 0x3c], eax
0x400030:	mov	qword ptr [rbp - 0x30], 0
0x400038:	mov	qword ptr [rbp - 0x28], 0
0x400040:	mov	qword ptr [rbp - 0x20], 0
0x400048:	mov	qword ptr [rbp - 0x18], 0
0x400050:	mov	qword ptr [rbp - 0x10], 0
0x400058:	cmp	dword ptr [rbp - 0x3c], 9
0x40005c:	jg	0x400090
<Block for 0x40005e, 22 bytes>
0x40005e:	mov	eax, dword ptr [rbp - 0x3c]
0x400061:	cdqe	
0x400063:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40006b:	mov	dword ptr [rbp - 0x40], 0
0x400072:	jmp	0x400088
<Block for 0x400090, 12 bytes>
0x400090:	lea	rdi, [rip + 0x189]
0x400097:	call	0x500008
<Block for 0x400088, 6 bytes>
0x400088:	cmp	dword ptr [rbp - 0x40], 9
0x40008c:	jle	0x400074
<Block for 0x40009c, 16 bytes>
0x40009c:	nop	
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	xor	rax, qword ptr fs:[0x28]
0x4000aa:	je	0x4000b1
<Block for 0x400074, 16 bytes>
0x400074:	mov	eax, dword ptr [rbp - 0x40]
0x400077:	cdqe	
0x400079:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40007d:	mov	edi, eax
0x40007f:	call	0x500000
<Block for 0x40008e, 2 bytes>
0x40008e:	jmp	0x40009c
<Block for 0x4000b1, 2 bytes>
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000ac, 5 bytes>
0x4000ac:	call	0x500010
<Block for 0x400084, 10 bytes>
0x400084:	add	dword ptr [rbp - 0x40], 1
0x400088:	cmp	dword ptr [rbp - 0x40], 9
0x40008c:	jle	0x400074
