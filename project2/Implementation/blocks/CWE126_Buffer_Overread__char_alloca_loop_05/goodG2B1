<Block for 0x400222, 84 bytes>
0x400222:	endbr64	
0x400226:	push	rbp
0x400227:	mov	rbp, rsp
0x40022a:	sub	rsp, 0xa0
0x400231:	mov	rax, qword ptr fs:[0x28]
0x40023a:	mov	qword ptr [rbp - 8], rax
0x40023e:	xor	eax, eax
0x400240:	mov	eax, 0x10
0x400245:	sub	rax, 1
0x400249:	add	rax, 0x3a
0x40024d:	mov	ecx, 0x10
0x400252:	mov	edx, 0
0x400257:	div	rcx
0x40025a:	imul	rax, rax, 0x10
0x40025e:	mov	rdx, rax
0x400261:	and	rdx, 0xfffffffffffff000
0x400268:	mov	rcx, rsp
0x40026b:	sub	rcx, rdx
0x40026e:	mov	rdx, rcx
0x400271:	cmp	rsp, rdx
0x400274:	je	0x400288
<Block for 0x400288, 26 bytes>
0x400288:	mov	rdx, rax
0x40028b:	and	edx, 0xfff
0x400291:	sub	rsp, rdx
0x400294:	mov	rdx, rax
0x400297:	and	edx, 0xfff
0x40029d:	test	rdx, rdx
0x4002a0:	je	0x4002b2
<Block for 0x400276, 18 bytes>
0x400276:	sub	rsp, 0x1000
0x40027d:	or	qword ptr [rsp + 0xff8], 0
0x400286:	jmp	0x400271
<Block for 0x4002b2, 76 bytes>
0x4002b2:	mov	rax, rsp
0x4002b5:	add	rax, 0xf
0x4002b9:	shr	rax, 4
0x4002bd:	shl	rax, 4
0x4002c1:	mov	qword ptr [rbp - 0x88], rax
0x4002c8:	mov	eax, 0x10
0x4002cd:	sub	rax, 1
0x4002d1:	add	rax, 0x6c
0x4002d5:	mov	esi, 0x10
0x4002da:	mov	edx, 0
0x4002df:	div	rsi
0x4002e2:	imul	rax, rax, 0x10
0x4002e6:	mov	rdx, rax
0x4002e9:	and	rdx, 0xfffffffffffff000
0x4002f0:	mov	rsi, rsp
0x4002f3:	sub	rsi, rdx
0x4002f6:	mov	rdx, rsi
0x4002f9:	cmp	rsp, rdx
0x4002fc:	je	0x400310
<Block for 0x4002a2, 92 bytes>
0x4002a2:	and	eax, 0xfff
0x4002a7:	sub	rax, 8
0x4002ab:	add	rax, rsp
0x4002ae:	or	qword ptr [rax], 0
0x4002b2:	mov	rax, rsp
0x4002b5:	add	rax, 0xf
0x4002b9:	shr	rax, 4
0x4002bd:	shl	rax, 4
0x4002c1:	mov	qword ptr [rbp - 0x88], rax
0x4002c8:	mov	eax, 0x10
0x4002cd:	sub	rax, 1
0x4002d1:	add	rax, 0x6c
0x4002d5:	mov	esi, 0x10
0x4002da:	mov	edx, 0
0x4002df:	div	rsi
0x4002e2:	imul	rax, rax, 0x10
0x4002e6:	mov	rdx, rax
0x4002e9:	and	rdx, 0xfffffffffffff000
0x4002f0:	mov	rsi, rsp
0x4002f3:	sub	rsi, rdx
0x4002f6:	mov	rdx, rsi
0x4002f9:	cmp	rsp, rdx
0x4002fc:	je	0x400310
<Block for 0x400271, 5 bytes>
0x400271:	cmp	rsp, rdx
0x400274:	je	0x400288
<Block for 0x400310, 26 bytes>
0x400310:	mov	rdx, rax
0x400313:	and	edx, 0xfff
0x400319:	sub	rsp, rdx
0x40031c:	mov	rdx, rax
0x40031f:	and	edx, 0xfff
0x400325:	test	rdx, rdx
0x400328:	je	0x40033a
<Block for 0x4002fe, 18 bytes>
0x4002fe:	sub	rsp, 0x1000
0x400305:	or	qword ptr [rsp + 0xff8], 0
0x40030e:	jmp	0x4002f9
<Block for 0x40033a, 44 bytes>
0x40033a:	mov	rax, rsp
0x40033d:	add	rax, 0xf
0x400341:	shr	rax, 4
0x400345:	shl	rax, 4
0x400349:	mov	qword ptr [rbp - 0x80], rax
0x40034d:	mov	rax, qword ptr [rbp - 0x88]
0x400354:	mov	edx, 0x31
0x400359:	mov	esi, 0x41
0x40035e:	mov	rdi, rax
0x400361:	call	0x500000
<Block for 0x40032a, 60 bytes>
0x40032a:	and	eax, 0xfff
0x40032f:	sub	rax, 8
0x400333:	add	rax, rsp
0x400336:	or	qword ptr [rax], 0
0x40033a:	mov	rax, rsp
0x40033d:	add	rax, 0xf
0x400341:	shr	rax, 4
0x400345:	shl	rax, 4
0x400349:	mov	qword ptr [rbp - 0x80], rax
0x40034d:	mov	rax, qword ptr [rbp - 0x88]
0x400354:	mov	edx, 0x31
0x400359:	mov	esi, 0x41
0x40035e:	mov	rdi, rax
0x400361:	call	0x500000
<Block for 0x4002f9, 5 bytes>
0x4002f9:	cmp	rsp, rdx
0x4002fc:	je	0x400310
<Block for 0x400366, 36 bytes>
0x400366:	mov	rax, qword ptr [rbp - 0x88]
0x40036d:	add	rax, 0x31
0x400371:	mov	byte ptr [rax], 0
0x400374:	mov	rax, qword ptr [rbp - 0x80]
0x400378:	mov	edx, 0x63
0x40037d:	mov	esi, 0x41
0x400382:	mov	rdi, rax
0x400385:	call	0x500000
<Block for 0x40038a, 21 bytes>
0x40038a:	mov	rax, qword ptr [rbp - 0x80]
0x40038e:	add	rax, 0x63
0x400392:	mov	byte ptr [rax], 0
0x400395:	mov	eax, dword ptr [rip + 0x2f9]
0x40039b:	test	eax, eax
0x40039d:	je	0x4003ad
<Block for 0x4003ad, 33 bytes>
0x4003ad:	mov	rax, qword ptr [rbp - 0x80]
0x4003b1:	mov	qword ptr [rbp - 0x98], rax
0x4003b8:	lea	rax, [rbp - 0x70]
0x4003bc:	mov	edx, 0x63
0x4003c1:	mov	esi, 0x43
0x4003c6:	mov	rdi, rax
0x4003c9:	call	0x500000
<Block for 0x40039f, 12 bytes>
0x40039f:	lea	rdi, [rip + 0x2f2]
0x4003a6:	call	0x500010
<Block for 0x4003ce, 16 bytes>
0x4003ce:	mov	byte ptr [rbp - 0xd], 0
0x4003d2:	lea	rax, [rbp - 0x70]
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x500008
<Block for 0x4003ab, 2 bytes>
0x4003ab:	jmp	0x4003b8
<Block for 0x4003de, 17 bytes>
0x4003de:	mov	qword ptr [rbp - 0x78], rax
0x4003e2:	mov	qword ptr [rbp - 0x90], 0
0x4003ed:	jmp	0x40041b
<Block for 0x4003b8, 22 bytes>
0x4003b8:	lea	rax, [rbp - 0x70]
0x4003bc:	mov	edx, 0x63
0x4003c1:	mov	esi, 0x43
0x4003c6:	mov	rdi, rax
0x4003c9:	call	0x500000
<Block for 0x40041b, 13 bytes>
0x40041b:	mov	rax, qword ptr [rbp - 0x90]
0x400422:	cmp	rax, qword ptr [rbp - 0x78]
0x400426:	jb	0x4003ef
<Block for 0x4003ef, 57 bytes>
0x4003ef:	mov	rdx, qword ptr [rbp - 0x98]
0x4003f6:	mov	rax, qword ptr [rbp - 0x90]
0x4003fd:	add	rax, rdx
0x400400:	movzx	eax, byte ptr [rax]
0x400403:	lea	rcx, [rbp - 0x70]
0x400407:	mov	rdx, qword ptr [rbp - 0x90]
0x40040e:	add	rdx, rcx
0x400411:	mov	byte ptr [rdx], al
0x400413:	add	qword ptr [rbp - 0x90], 1
0x40041b:	mov	rax, qword ptr [rbp - 0x90]
0x400422:	cmp	rax, qword ptr [rbp - 0x78]
0x400426:	jb	0x4003ef
<Block for 0x400428, 16 bytes>
0x400428:	mov	byte ptr [rbp - 0xd], 0
0x40042c:	lea	rax, [rbp - 0x70]
0x400430:	mov	rdi, rax
0x400433:	call	0x500010
<Block for 0x400438, 16 bytes>
0x400438:	nop	
0x400439:	mov	rax, qword ptr [rbp - 8]
0x40043d:	xor	rax, qword ptr fs:[0x28]
0x400446:	je	0x40044d
<Block for 0x40044d, 2 bytes>
0x40044d:	leave	
0x40044e:	ret	
<Block for 0x400448, 5 bytes>
0x400448:	call	0x500018
