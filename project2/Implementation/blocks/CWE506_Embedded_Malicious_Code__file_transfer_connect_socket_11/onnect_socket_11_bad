<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 29 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	mov	eax, 0
0x40003a:	call	0x500000
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x40003f, 8 bytes>
0x40003f:	test	eax, eax
0x400041:	je	0x400198
<Block for 0x400198, 16 bytes>
0x400198:	nop	
0x400199:	mov	rax, qword ptr [rbp - 0x18]
0x40019d:	xor	rax, qword ptr fs:[0x28]
0x4001a6:	je	0x4001ad
<Block for 0x400047, 29 bytes>
0x400047:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x400051:	lea	rsi, [rip + 0x15f]
0x400058:	lea	rdi, [rip + 0x15a]
0x40005f:	call	0x500008
<Block for 0x4001ad, 10 bytes>
0x4001ad:	add	rsp, 0x10038
0x4001b4:	pop	rbx
0x4001b5:	pop	rbp
0x4001b6:	ret	
<Block for 0x4001a8, 5 bytes>
0x4001a8:	call	0x500060
<Block for 0x400064, 17 bytes>
0x400064:	mov	qword ptr [rbp - 0x10038], rax
0x40006b:	cmp	qword ptr [rbp - 0x10038], 0
0x400073:	je	0x4000b7
<Block for 0x4000b7, 20 bytes>
0x4000b7:	mov	edx, 6
0x4000bc:	mov	esi, 1
0x4000c1:	mov	edi, 2
0x4000c6:	call	0x500028
<Block for 0x400075, 27 bytes>
0x400075:	mov	rdx, qword ptr [rbp - 0x10038]
0x40007c:	lea	rax, [rbp - 0x10020]
0x400083:	mov	esi, 0xffff
0x400088:	mov	rdi, rax
0x40008b:	call	0x500010
<Block for 0x4000cb, 19 bytes>
0x4000cb:	mov	dword ptr [rbp - 0x1003c], eax
0x4000d1:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000d8:	je	0x40017e
<Block for 0x400090, 5 bytes>
0x400090:	test	rax, rax
0x400093:	jne	0x4000a8
<Block for 0x40017e, 3 bytes>
0x40017e:	nop	
0x40017f:	jmp	0x400182
<Block for 0x4000de, 25 bytes>
0x4000de:	lea	rax, [rbp - 0x10030]
0x4000e5:	mov	edx, 0x10
0x4000ea:	mov	esi, 0
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500030
<Block for 0x400095, 12 bytes>
0x400095:	lea	rdi, [rip + 0x126]
0x40009c:	call	0x500018
<Block for 0x4000a8, 15 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0x10038]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500020
<Block for 0x400182, 9 bytes>
0x400182:	cmp	dword ptr [rbp - 0x1003c], -1
0x400189:	je	0x400198
<Block for 0x4000f7, 29 bytes>
0x4000f7:	mov	word ptr [rbp - 0x10030], 2
0x400100:	mov	dword ptr [rbp - 0x1002c], 0
0x40010a:	mov	edi, 0x6987
0x40010f:	call	0x500038
<Block for 0x4000a1, 22 bytes>
0x4000a1:	mov	byte ptr [rbp - 0x10020], 0
0x4000a8:	mov	rax, qword ptr [rbp - 0x10038]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500020
<Block for 0x40018b, 13 bytes>
0x40018b:	mov	eax, dword ptr [rbp - 0x1003c]
0x400191:	mov	edi, eax
0x400193:	call	0x500058
<Block for 0x400114, 35 bytes>
0x400114:	mov	word ptr [rbp - 0x1002e], ax
0x40011b:	lea	rcx, [rbp - 0x10030]
0x400122:	mov	eax, dword ptr [rbp - 0x1003c]
0x400128:	mov	edx, 0x10
0x40012d:	mov	rsi, rcx
0x400130:	mov	edi, eax
0x400132:	call	0x500040
<Block for 0x400137, 5 bytes>
0x400137:	cmp	eax, -1
0x40013a:	je	0x400181
<Block for 0x40013c, 15 bytes>
0x40013c:	lea	rax, [rbp - 0x10020]
0x400143:	mov	rdi, rax
0x400146:	call	0x500048
<Block for 0x400181, 1 bytes>
0x400181:	nop	
<Block for 0x40014b, 28 bytes>
0x40014b:	mov	rdx, rax
0x40014e:	lea	rsi, [rbp - 0x10020]
0x400155:	mov	eax, dword ptr [rbp - 0x1003c]
0x40015b:	mov	ecx, 0
0x400160:	mov	edi, eax
0x400162:	call	0x500050
<Block for 0x400167, 18 bytes>
0x400167:	mov	rbx, rax
0x40016a:	lea	rax, [rbp - 0x10020]
0x400171:	mov	rdi, rax
0x400174:	call	0x500048
<Block for 0x400179, 5 bytes>
0x400179:	cmp	rbx, rax
0x40017c:	jmp	0x400182
