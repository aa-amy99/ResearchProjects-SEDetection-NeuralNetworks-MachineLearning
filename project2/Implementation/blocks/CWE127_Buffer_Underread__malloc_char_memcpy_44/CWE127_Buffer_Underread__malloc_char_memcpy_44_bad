<Block for 0x4000db, 41 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	sub	rsp, 0x20
0x4000e7:	lea	rax, [rip - 0xee]
0x4000ee:	mov	qword ptr [rbp - 0x18], rax
0x4000f2:	mov	qword ptr [rbp - 0x10], 0
0x4000fa:	mov	edi, 0x64
0x4000ff:	call	0x500018
<Block for 0x400104, 11 bytes>
0x400104:	mov	qword ptr [rbp - 8], rax
0x400108:	cmp	qword ptr [rbp - 8], 0
0x40010d:	jne	0x400119
<Block for 0x40010f, 10 bytes>
0x40010f:	mov	edi, 0xffffffff
0x400114:	call	0x500020
<Block for 0x400119, 22 bytes>
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	mov	edx, 0x63
0x400122:	mov	esi, 0x41
0x400127:	mov	rdi, rax
0x40012a:	call	0x500000
<Block for 0x40012f, 36 bytes>
0x40012f:	mov	rax, qword ptr [rbp - 8]
0x400133:	add	rax, 0x63
0x400137:	mov	byte ptr [rax], 0
0x40013a:	mov	rax, qword ptr [rbp - 8]
0x40013e:	sub	rax, 8
0x400142:	mov	qword ptr [rbp - 0x10], rax
0x400146:	mov	rax, qword ptr [rbp - 0x10]
0x40014a:	mov	rdx, qword ptr [rbp - 0x18]
0x40014e:	mov	rdi, rax
0x400151:	call	rdx
<Block for 0x400153, 3 bytes>
0x400153:	nop	
0x400154:	leave	
0x400155:	ret	
