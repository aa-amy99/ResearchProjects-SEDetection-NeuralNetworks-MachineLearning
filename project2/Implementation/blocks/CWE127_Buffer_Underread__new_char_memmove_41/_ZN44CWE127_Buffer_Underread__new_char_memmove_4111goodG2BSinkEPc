<Block for 0x4000d6, 53 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	add	rsp, -0x80
0x4000e2:	mov	qword ptr [rbp - 0x78], rdi
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	lea	rax, [rbp - 0x70]
0x4000f9:	mov	edx, 0x63
0x4000fe:	mov	esi, 0x43
0x400103:	mov	rdi, rax
0x400106:	call	0x500000
<Block for 0x40010b, 28 bytes>
0x40010b:	mov	byte ptr [rbp - 0xd], 0
0x40010f:	mov	rcx, qword ptr [rbp - 0x78]
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	edx, 0x64
0x40011c:	mov	rsi, rcx
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x400127, 16 bytes>
0x400127:	mov	byte ptr [rbp - 0xd], 0
0x40012b:	lea	rax, [rbp - 0x70]
0x40012f:	mov	rdi, rax
0x400132:	call	0x500010
<Block for 0x400137, 16 bytes>
0x400137:	nop	
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	xor	rax, qword ptr fs:[0x28]
0x400145:	je	0x40014c
<Block for 0x40014c, 2 bytes>
0x40014c:	leave	
0x40014d:	ret	
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500018
