<Block for 0x400078, 30 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x10
0x400084:	mov	qword ptr [rbp - 0x10], 0
0x40008c:	mov	edi, 0x64
0x400091:	call	0x500020
<Block for 0x400096, 26 bytes>
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	mov	edx, 0x63
0x4000a3:	mov	esi, 0x41
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500000
<Block for 0x4000b0, 35 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 8]
0x4000b4:	add	rax, 0x63
0x4000b8:	mov	byte ptr [rax], 0
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	sub	rax, 8
0x4000c3:	mov	qword ptr [rbp - 0x10], rax
0x4000c7:	mov	rax, qword ptr [rbp - 0x10]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x400000
<Block for 0x4000d3, 3 bytes>
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
