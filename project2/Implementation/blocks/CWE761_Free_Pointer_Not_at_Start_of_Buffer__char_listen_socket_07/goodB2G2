<Block for 0x400466, 37 bytes>
0x400466:	endbr64	
0x40046a:	push	rbp
0x40046b:	mov	rbp, rsp
0x40046e:	sub	rsp, 0x50
0x400472:	mov	rax, qword ptr fs:[0x28]
0x40047b:	mov	qword ptr [rbp - 8], rax
0x40047f:	xor	eax, eax
0x400481:	mov	edi, 0x64
0x400486:	call	0x500000
<Block for 0x40048b, 11 bytes>
0x40048b:	mov	qword ptr [rbp - 0x38], rax
0x40048f:	cmp	qword ptr [rbp - 0x38], 0
0x400494:	jne	0x4004a0
<Block for 0x400496, 10 bytes>
0x400496:	mov	edi, 0xffffffff
0x40049b:	call	0x500008
<Block for 0x4004a0, 33 bytes>
0x4004a0:	mov	rax, qword ptr [rbp - 0x38]
0x4004a4:	mov	byte ptr [rax], 0
0x4004a7:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4004ae:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4004b5:	mov	rax, qword ptr [rbp - 0x38]
0x4004b9:	mov	rdi, rax
0x4004bc:	call	0x500010
<Block for 0x4004c1, 24 bytes>
0x4004c1:	mov	qword ptr [rbp - 0x30], rax
0x4004c5:	mov	edx, 6
0x4004ca:	mov	esi, 1
0x4004cf:	mov	edi, 2
0x4004d4:	call	0x500018
<Block for 0x4004d9, 13 bytes>
0x4004d9:	mov	dword ptr [rbp - 0x48], eax
0x4004dc:	cmp	dword ptr [rbp - 0x48], -1
0x4004e0:	je	0x400604
<Block for 0x400604, 3 bytes>
0x400604:	nop	
0x400605:	jmp	0x40060e
<Block for 0x4004e6, 22 bytes>
0x4004e6:	lea	rax, [rbp - 0x20]
0x4004ea:	mov	edx, 0x10
0x4004ef:	mov	esi, 0
0x4004f4:	mov	rdi, rax
0x4004f7:	call	0x500020
<Block for 0x40060e, 6 bytes>
0x40060e:	cmp	dword ptr [rbp - 0x48], -1
0x400612:	je	0x40061e
<Block for 0x4004fc, 23 bytes>
0x4004fc:	mov	word ptr [rbp - 0x20], 2
0x400502:	mov	dword ptr [rbp - 0x1c], 0
0x400509:	mov	edi, 0x6987
0x40050e:	call	0x500028
<Block for 0x40061e, 6 bytes>
0x40061e:	cmp	dword ptr [rbp - 0x4c], -1
0x400622:	je	0x40062e
<Block for 0x400614, 10 bytes>
0x400614:	mov	eax, dword ptr [rbp - 0x48]
0x400617:	mov	edi, eax
0x400619:	call	0x500058
<Block for 0x400513, 26 bytes>
0x400513:	mov	word ptr [rbp - 0x1e], ax
0x400517:	lea	rcx, [rbp - 0x20]
0x40051b:	mov	eax, dword ptr [rbp - 0x48]
0x40051e:	mov	edx, 0x10
0x400523:	mov	rsi, rcx
0x400526:	mov	edi, eax
0x400528:	call	0x500030
<Block for 0x40062e, 11 bytes>
0x40062e:	mov	eax, dword ptr [rip + 0x88]
0x400634:	cmp	eax, 5
0x400637:	jne	0x400686
<Block for 0x400624, 10 bytes>
0x400624:	mov	eax, dword ptr [rbp - 0x4c]
0x400627:	mov	edi, eax
0x400629:	call	0x500058
<Block for 0x40052d, 9 bytes>
0x40052d:	cmp	eax, -1
0x400530:	je	0x400607
<Block for 0x400639, 10 bytes>
0x400639:	mov	qword ptr [rbp - 0x40], 0
0x400641:	jmp	0x400668
<Block for 0x400686, 16 bytes>
0x400686:	nop	
0x400687:	mov	rax, qword ptr [rbp - 8]
0x40068b:	xor	rax, qword ptr fs:[0x28]
0x400694:	je	0x40069b
<Block for 0x400607, 3 bytes>
0x400607:	nop	
0x400608:	jmp	0x40060e
<Block for 0x400536, 15 bytes>
0x400536:	mov	eax, dword ptr [rbp - 0x48]
0x400539:	mov	esi, 5
0x40053e:	mov	edi, eax
0x400540:	call	0x500038
<Block for 0x400668, 12 bytes>
0x400668:	mov	rax, qword ptr [rbp - 0x38]
0x40066c:	mov	rdi, rax
0x40066f:	call	0x500010
<Block for 0x40069b, 2 bytes>
0x40069b:	leave	
0x40069c:	ret	
<Block for 0x400696, 5 bytes>
0x400696:	call	0x500070
<Block for 0x400545, 9 bytes>
0x400545:	cmp	eax, -1
0x400548:	je	0x40060a
<Block for 0x400674, 6 bytes>
0x400674:	cmp	qword ptr [rbp - 0x40], rax
0x400678:	jb	0x400643
<Block for 0x40060a, 3 bytes>
0x40060a:	nop	
0x40060b:	jmp	0x40060e
<Block for 0x40054e, 20 bytes>
0x40054e:	mov	eax, dword ptr [rbp - 0x48]
0x400551:	mov	edx, 0
0x400556:	mov	esi, 0
0x40055b:	mov	edi, eax
0x40055d:	call	0x500040
<Block for 0x400643, 18 bytes>
0x400643:	mov	rdx, qword ptr [rbp - 0x38]
0x400647:	mov	rax, qword ptr [rbp - 0x40]
0x40064b:	add	rax, rdx
0x40064e:	movzx	eax, byte ptr [rax]
0x400651:	cmp	al, 0x53
0x400653:	jne	0x400663
<Block for 0x40067a, 12 bytes>
0x40067a:	mov	rax, qword ptr [rbp - 0x38]
0x40067e:	mov	rdi, rax
0x400681:	call	0x500068
<Block for 0x400562, 13 bytes>
0x400562:	mov	dword ptr [rbp - 0x4c], eax
0x400565:	cmp	dword ptr [rbp - 0x4c], -1
0x400569:	je	0x40060d
<Block for 0x400655, 12 bytes>
0x400655:	lea	rdi, [rip + 0x64]
0x40065c:	call	0x500060
<Block for 0x400663, 17 bytes>
0x400663:	add	qword ptr [rbp - 0x40], 1
0x400668:	mov	rax, qword ptr [rbp - 0x38]
0x40066c:	mov	rdi, rax
0x40066f:	call	0x500010
<Block for 0x40056f, 39 bytes>
0x40056f:	mov	eax, 0x63
0x400574:	sub	rax, qword ptr [rbp - 0x30]
0x400578:	mov	rdx, rax
0x40057b:	mov	rcx, qword ptr [rbp - 0x38]
0x40057f:	mov	rax, qword ptr [rbp - 0x30]
0x400583:	lea	rsi, [rcx + rax]
0x400587:	mov	eax, dword ptr [rbp - 0x4c]
0x40058a:	mov	ecx, 0
0x40058f:	mov	edi, eax
0x400591:	call	0x500048
<Block for 0x40060d, 1 bytes>
0x40060d:	nop	
<Block for 0x400661, 2 bytes>
0x400661:	jmp	0x40067a
<Block for 0x400596, 9 bytes>
0x400596:	mov	dword ptr [rbp - 0x44], eax
0x400599:	cmp	dword ptr [rbp - 0x44], -1
0x40059d:	je	0x40060e
<Block for 0x40059f, 6 bytes>
0x40059f:	cmp	dword ptr [rbp - 0x44], 0
0x4005a3:	je	0x40060e
<Block for 0x4005a5, 40 bytes>
0x4005a5:	mov	eax, dword ptr [rbp - 0x44]
0x4005a8:	movsxd	rdx, eax
0x4005ab:	mov	rax, qword ptr [rbp - 0x30]
0x4005af:	add	rdx, rax
0x4005b2:	mov	rax, qword ptr [rbp - 0x38]
0x4005b6:	add	rax, rdx
0x4005b9:	mov	byte ptr [rax], 0
0x4005bc:	mov	rax, qword ptr [rbp - 0x38]
0x4005c0:	mov	esi, 0xd
0x4005c5:	mov	rdi, rax
0x4005c8:	call	0x500050
<Block for 0x4005cd, 11 bytes>
0x4005cd:	mov	qword ptr [rbp - 0x28], rax
0x4005d1:	cmp	qword ptr [rbp - 0x28], 0
0x4005d6:	je	0x4005df
<Block for 0x4005df, 17 bytes>
0x4005df:	mov	rax, qword ptr [rbp - 0x38]
0x4005e3:	mov	esi, 0xa
0x4005e8:	mov	rdi, rax
0x4005eb:	call	0x500050
<Block for 0x4005d8, 24 bytes>
0x4005d8:	mov	rax, qword ptr [rbp - 0x28]
0x4005dc:	mov	byte ptr [rax], 0
0x4005df:	mov	rax, qword ptr [rbp - 0x38]
0x4005e3:	mov	esi, 0xa
0x4005e8:	mov	rdi, rax
0x4005eb:	call	0x500050
<Block for 0x4005f0, 11 bytes>
0x4005f0:	mov	qword ptr [rbp - 0x28], rax
0x4005f4:	cmp	qword ptr [rbp - 0x28], 0
0x4005f9:	je	0x40060e
<Block for 0x4005fb, 9 bytes>
0x4005fb:	mov	rax, qword ptr [rbp - 0x28]
0x4005ff:	mov	byte ptr [rax], 0
0x400602:	jmp	0x40060e
