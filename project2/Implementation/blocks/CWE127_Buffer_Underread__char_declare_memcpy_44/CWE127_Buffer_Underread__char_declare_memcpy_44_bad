<Block for 0x4000db, 60 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	add	rsp, -0x80
0x4000e7:	mov	rax, qword ptr fs:[0x28]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	xor	eax, eax
0x4000f6:	lea	rax, [rip - 0xfd]
0x4000fd:	mov	qword ptr [rbp - 0x80], rax
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	edx, 0x63
0x40010a:	mov	esi, 0x41
0x40010f:	mov	rdi, rax
0x400112:	call	0x500000
<Block for 0x400117, 29 bytes>
0x400117:	mov	byte ptr [rbp - 0xd], 0
0x40011b:	lea	rax, [rbp - 0x70]
0x40011f:	sub	rax, 8
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	mov	rax, qword ptr [rbp - 0x78]
0x40012b:	mov	rdx, qword ptr [rbp - 0x80]
0x40012f:	mov	rdi, rax
0x400132:	call	rdx
<Block for 0x400134, 16 bytes>
0x400134:	nop	
0x400135:	mov	rax, qword ptr [rbp - 8]
0x400139:	xor	rax, qword ptr fs:[0x28]
0x400142:	je	0x400149
<Block for 0x400149, 2 bytes>
0x400149:	leave	
0x40014a:	ret	
<Block for 0x400144, 5 bytes>
0x400144:	call	0x500010
