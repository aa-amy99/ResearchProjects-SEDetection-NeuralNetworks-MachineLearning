<Block for 0x4001c0, 55 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	sub	rsp, 0xf0
0x4001cf:	mov	rax, qword ptr fs:[0x28]
0x4001d8:	mov	qword ptr [rbp - 8], rax
0x4001dc:	xor	eax, eax
0x4001de:	lea	rax, [rbp - 0xe0]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x41
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500000
<Block for 0x4001f7, 14 bytes>
0x4001f7:	mov	byte ptr [rbp - 0x7d], 0
0x4001fb:	mov	eax, dword ptr [rip + 0xffe07]
0x400201:	test	eax, eax
0x400203:	je	0x400213
<Block for 0x400213, 22 bytes>
0x400213:	lea	rax, [rbp - 0x70]
0x400217:	mov	edx, 0x63
0x40021c:	mov	esi, 0x43
0x400221:	mov	rdi, rax
0x400224:	call	0x500000
<Block for 0x400205, 36 bytes>
0x400205:	lea	rax, [rbp - 0xe0]
0x40020c:	mov	qword ptr [rbp - 0xf0], rax
0x400213:	lea	rax, [rbp - 0x70]
0x400217:	mov	edx, 0x63
0x40021c:	mov	esi, 0x43
0x400221:	mov	rdi, rax
0x400224:	call	0x500000
<Block for 0x400229, 17 bytes>
0x400229:	mov	byte ptr [rbp - 0xd], 0
0x40022d:	mov	qword ptr [rbp - 0xe8], 0
0x400238:	jmp	0x400266
<Block for 0x400266, 10 bytes>
0x400266:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40026e:	jbe	0x40023a
<Block for 0x40023a, 54 bytes>
0x40023a:	mov	rdx, qword ptr [rbp - 0xf0]
0x400241:	mov	rax, qword ptr [rbp - 0xe8]
0x400248:	add	rax, rdx
0x40024b:	movzx	eax, byte ptr [rax]
0x40024e:	lea	rcx, [rbp - 0x70]
0x400252:	mov	rdx, qword ptr [rbp - 0xe8]
0x400259:	add	rdx, rcx
0x40025c:	mov	byte ptr [rdx], al
0x40025e:	add	qword ptr [rbp - 0xe8], 1
0x400266:	cmp	qword ptr [rbp - 0xe8], 0x63
0x40026e:	jbe	0x40023a
<Block for 0x400270, 16 bytes>
0x400270:	mov	byte ptr [rbp - 0xd], 0
0x400274:	lea	rax, [rbp - 0x70]
0x400278:	mov	rdi, rax
0x40027b:	call	0x500010
<Block for 0x400280, 16 bytes>
0x400280:	nop	
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	xor	rax, qword ptr fs:[0x28]
0x40028e:	je	0x400295
<Block for 0x400295, 2 bytes>
0x400295:	leave	
0x400296:	ret	
<Block for 0x400290, 5 bytes>
0x400290:	call	0x500018
