<Block for 0x4000bf, 66 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	sub	rsp, 0x90
0x4000ce:	mov	qword ptr [rbp - 0x88], rdi
0x4000d5:	mov	rax, qword ptr fs:[0x28]
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	xor	eax, eax
0x4000e4:	mov	dword ptr [rbp - 0x7c], 2
0x4000eb:	lea	rdx, [rbp - 0x7c]
0x4000ef:	mov	rax, qword ptr [rbp - 0x88]
0x4000f6:	mov	rsi, rdx
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x4001aa
<Block for 0x400101, 29 bytes>
0x400101:	mov	rax, qword ptr [rax]
0x400104:	mov	qword ptr [rbp - 0x78], rax
0x400108:	lea	rax, [rbp - 0x70]
0x40010c:	mov	edx, 0x63
0x400111:	mov	esi, 0x43
0x400116:	mov	rdi, rax
0x400119:	call	0x500000
<Block for 0x40011e, 16 bytes>
0x40011e:	mov	byte ptr [rbp - 0xd], 0
0x400122:	lea	rax, [rbp - 0x70]
0x400126:	mov	rdi, rax
0x400129:	call	0x500008
<Block for 0x40012e, 22 bytes>
0x40012e:	mov	rdx, rax
0x400131:	mov	rcx, qword ptr [rbp - 0x78]
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	rsi, rcx
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500010
<Block for 0x400144, 16 bytes>
0x400144:	mov	byte ptr [rbp - 0xd], 0
0x400148:	lea	rax, [rbp - 0x70]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500018
<Block for 0x400154, 7 bytes>
0x400154:	cmp	qword ptr [rbp - 0x78], 0
0x400159:	je	0x400167
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40015b, 12 bytes>
0x40015b:	mov	rax, qword ptr [rbp - 0x78]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500020
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500028
