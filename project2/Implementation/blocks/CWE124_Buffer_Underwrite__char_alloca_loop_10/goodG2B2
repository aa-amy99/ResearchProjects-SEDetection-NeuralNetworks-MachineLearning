<Block for 0x4002c8, 84 bytes>
0x4002c8:	endbr64	
0x4002cc:	push	rbp
0x4002cd:	mov	rbp, rsp
0x4002d0:	sub	rsp, 0x90
0x4002d7:	mov	rax, qword ptr fs:[0x28]
0x4002e0:	mov	qword ptr [rbp - 8], rax
0x4002e4:	xor	eax, eax
0x4002e6:	mov	eax, 0x10
0x4002eb:	sub	rax, 1
0x4002ef:	add	rax, 0x6c
0x4002f3:	mov	esi, 0x10
0x4002f8:	mov	edx, 0
0x4002fd:	div	rsi
0x400300:	imul	rax, rax, 0x10
0x400304:	mov	rdx, rax
0x400307:	and	rdx, 0xfffffffffffff000
0x40030e:	mov	rcx, rsp
0x400311:	sub	rcx, rdx
0x400314:	mov	rdx, rcx
0x400317:	cmp	rsp, rdx
0x40031a:	je	0x40032e
<Block for 0x40032e, 26 bytes>
0x40032e:	mov	rdx, rax
0x400331:	and	edx, 0xfff
0x400337:	sub	rsp, rdx
0x40033a:	mov	rdx, rax
0x40033d:	and	edx, 0xfff
0x400343:	test	rdx, rdx
0x400346:	je	0x400358
<Block for 0x40031c, 18 bytes>
0x40031c:	sub	rsp, 0x1000
0x400323:	or	qword ptr [rsp + 0xff8], 0
0x40032c:	jmp	0x400317
<Block for 0x400358, 41 bytes>
0x400358:	mov	rax, rsp
0x40035b:	add	rax, 0xf
0x40035f:	shr	rax, 4
0x400363:	shl	rax, 4
0x400367:	mov	qword ptr [rbp - 0x78], rax
0x40036b:	mov	rax, qword ptr [rbp - 0x78]
0x40036f:	mov	edx, 0x63
0x400374:	mov	esi, 0x41
0x400379:	mov	rdi, rax
0x40037c:	call	0x500000
<Block for 0x400348, 57 bytes>
0x400348:	and	eax, 0xfff
0x40034d:	sub	rax, 8
0x400351:	add	rax, rsp
0x400354:	or	qword ptr [rax], 0
0x400358:	mov	rax, rsp
0x40035b:	add	rax, 0xf
0x40035f:	shr	rax, 4
0x400363:	shl	rax, 4
0x400367:	mov	qword ptr [rbp - 0x78], rax
0x40036b:	mov	rax, qword ptr [rbp - 0x78]
0x40036f:	mov	edx, 0x63
0x400374:	mov	esi, 0x41
0x400379:	mov	rdi, rax
0x40037c:	call	0x500000
<Block for 0x400317, 5 bytes>
0x400317:	cmp	rsp, rdx
0x40031a:	je	0x40032e
<Block for 0x400381, 21 bytes>
0x400381:	mov	rax, qword ptr [rbp - 0x78]
0x400385:	add	rax, 0x63
0x400389:	mov	byte ptr [rax], 0
0x40038c:	mov	eax, dword ptr [rip + 0xffc76]
0x400392:	test	eax, eax
0x400394:	je	0x4003a1
<Block for 0x4003a1, 22 bytes>
0x4003a1:	lea	rax, [rbp - 0x70]
0x4003a5:	mov	edx, 0x63
0x4003aa:	mov	esi, 0x43
0x4003af:	mov	rdi, rax
0x4003b2:	call	0x500000
<Block for 0x400396, 33 bytes>
0x400396:	mov	rax, qword ptr [rbp - 0x78]
0x40039a:	mov	qword ptr [rbp - 0x88], rax
0x4003a1:	lea	rax, [rbp - 0x70]
0x4003a5:	mov	edx, 0x63
0x4003aa:	mov	esi, 0x43
0x4003af:	mov	rdi, rax
0x4003b2:	call	0x500000
<Block for 0x4003b7, 14 bytes>
0x4003b7:	mov	byte ptr [rbp - 0xd], 0
0x4003bb:	mov	qword ptr [rbp - 0x80], 0
0x4003c3:	jmp	0x4003e8
<Block for 0x4003e8, 7 bytes>
0x4003e8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003ed:	jbe	0x4003c5
<Block for 0x4003c5, 42 bytes>
0x4003c5:	mov	rdx, qword ptr [rbp - 0x88]
0x4003cc:	mov	rax, qword ptr [rbp - 0x80]
0x4003d0:	add	rdx, rax
0x4003d3:	lea	rcx, [rbp - 0x70]
0x4003d7:	mov	rax, qword ptr [rbp - 0x80]
0x4003db:	add	rax, rcx
0x4003de:	movzx	eax, byte ptr [rax]
0x4003e1:	mov	byte ptr [rdx], al
0x4003e3:	add	qword ptr [rbp - 0x80], 1
0x4003e8:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003ed:	jbe	0x4003c5
<Block for 0x4003ef, 29 bytes>
0x4003ef:	mov	rax, qword ptr [rbp - 0x88]
0x4003f6:	add	rax, 0x63
0x4003fa:	mov	byte ptr [rax], 0
0x4003fd:	mov	rax, qword ptr [rbp - 0x88]
0x400404:	mov	rdi, rax
0x400407:	call	0x500010
<Block for 0x40040c, 16 bytes>
0x40040c:	nop	
0x40040d:	mov	rax, qword ptr [rbp - 8]
0x400411:	xor	rax, qword ptr fs:[0x28]
0x40041a:	je	0x400421
<Block for 0x400421, 2 bytes>
0x400421:	leave	
0x400422:	ret	
<Block for 0x40041c, 5 bytes>
0x40041c:	call	0x500018
