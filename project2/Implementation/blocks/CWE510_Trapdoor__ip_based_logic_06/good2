<Block for 0x400305, 41 bytes>
0x400305:	endbr64	
0x400309:	push	rbp
0x40030a:	mov	rbp, rsp
0x40030d:	sub	rsp, 0x30
0x400311:	mov	rax, qword ptr fs:[0x28]
0x40031a:	mov	qword ptr [rbp - 8], rax
0x40031e:	xor	eax, eax
0x400320:	mov	eax, 5
0x400325:	cmp	eax, 5
0x400328:	jne	0x400433
<Block for 0x40032e, 34 bytes>
0x40032e:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400335:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40033c:	mov	edx, 6
0x400341:	mov	esi, 1
0x400346:	mov	edi, 2
0x40034b:	call	0x500000
<Block for 0x400433, 16 bytes>
0x400433:	nop	
0x400434:	mov	rax, qword ptr [rbp - 8]
0x400438:	xor	rax, qword ptr fs:[0x28]
0x400441:	je	0x400448
<Block for 0x400350, 13 bytes>
0x400350:	mov	dword ptr [rbp - 0x24], eax
0x400353:	cmp	dword ptr [rbp - 0x24], -1
0x400357:	je	0x400409
<Block for 0x400448, 2 bytes>
0x400448:	leave	
0x400449:	ret	
<Block for 0x400443, 5 bytes>
0x400443:	call	0x500060
<Block for 0x400409, 3 bytes>
0x400409:	nop	
0x40040a:	jmp	0x400413
<Block for 0x40035d, 22 bytes>
0x40035d:	lea	rax, [rbp - 0x20]
0x400361:	mov	edx, 0x10
0x400366:	mov	esi, 0
0x40036b:	mov	rdi, rax
0x40036e:	call	0x500008
<Block for 0x400413, 6 bytes>
0x400413:	cmp	dword ptr [rbp - 0x24], -1
0x400417:	je	0x400423
<Block for 0x400373, 23 bytes>
0x400373:	mov	word ptr [rbp - 0x20], 2
0x400379:	mov	dword ptr [rbp - 0x1c], 0
0x400380:	mov	edi, 0x4e20
0x400385:	call	0x500010
<Block for 0x400423, 6 bytes>
0x400423:	cmp	dword ptr [rbp - 0x28], -1
0x400427:	je	0x400433
<Block for 0x400419, 10 bytes>
0x400419:	mov	eax, dword ptr [rbp - 0x24]
0x40041c:	mov	edi, eax
0x40041e:	call	0x500058
<Block for 0x40038a, 26 bytes>
0x40038a:	mov	word ptr [rbp - 0x1e], ax
0x40038e:	lea	rcx, [rbp - 0x20]
0x400392:	mov	eax, dword ptr [rbp - 0x24]
0x400395:	mov	edx, 0x10
0x40039a:	mov	rsi, rcx
0x40039d:	mov	edi, eax
0x40039f:	call	0x500018
<Block for 0x400429, 10 bytes>
0x400429:	mov	eax, dword ptr [rbp - 0x28]
0x40042c:	mov	edi, eax
0x40042e:	call	0x500058
<Block for 0x4003a4, 5 bytes>
0x4003a4:	cmp	eax, -1
0x4003a7:	je	0x40040c
<Block for 0x40040c, 3 bytes>
0x40040c:	nop	
0x40040d:	jmp	0x400413
<Block for 0x4003a9, 15 bytes>
0x4003a9:	mov	eax, dword ptr [rbp - 0x24]
0x4003ac:	mov	esi, 5
0x4003b1:	mov	edi, eax
0x4003b3:	call	0x500020
<Block for 0x4003b8, 5 bytes>
0x4003b8:	cmp	eax, -1
0x4003bb:	je	0x40040f
<Block for 0x40040f, 3 bytes>
0x40040f:	nop	
0x400410:	jmp	0x400413
<Block for 0x4003bd, 20 bytes>
0x4003bd:	mov	eax, dword ptr [rbp - 0x24]
0x4003c0:	mov	edx, 0
0x4003c5:	mov	esi, 0
0x4003ca:	mov	edi, eax
0x4003cc:	call	0x500028
<Block for 0x4003d1, 9 bytes>
0x4003d1:	mov	dword ptr [rbp - 0x28], eax
0x4003d4:	cmp	dword ptr [rbp - 0x28], -1
0x4003d8:	je	0x400412
<Block for 0x4003da, 27 bytes>
0x4003da:	mov	eax, dword ptr [rbp - 0x28]
0x4003dd:	mov	ecx, 0
0x4003e2:	mov	edx, 8
0x4003e7:	lea	rsi, [rip + 0xa1]
0x4003ee:	mov	edi, eax
0x4003f0:	call	0x500048
<Block for 0x400412, 1 bytes>
0x400412:	nop	
<Block for 0x4003f5, 6 bytes>
0x4003f5:	cmp	rax, -1
0x4003f9:	jne	0x400413
<Block for 0x4003fb, 12 bytes>
0x4003fb:	lea	rdi, [rip + 0x96]
0x400402:	call	0x500050
<Block for 0x400407, 2 bytes>
0x400407:	jmp	0x400413
