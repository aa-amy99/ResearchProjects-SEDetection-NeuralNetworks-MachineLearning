<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xf0]
0x400025:	mov	qword ptr [rbp - 0xe8], rax
0x40002c:	mov	qword ptr [rbp - 0xf0], 0
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500000
<Block for 0x400041, 17 bytes>
0x400041:	mov	qword ptr [rbp - 0xe0], rax
0x400048:	cmp	qword ptr [rbp - 0xe0], 0
0x400050:	jne	0x40005c
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 0xffffffff
0x400057:	call	0x500008
<Block for 0x40005c, 25 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0xe0]
0x400063:	mov	edx, 0x63
0x400068:	mov	esi, 0x41
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
<Block for 0x400075, 74 bytes>
0x400075:	mov	rax, qword ptr [rbp - 0xe0]
0x40007c:	add	rax, 0x63
0x400080:	mov	byte ptr [rax], 0
0x400083:	mov	rax, qword ptr [rbp - 0xe0]
0x40008a:	sub	rax, 8
0x40008e:	mov	qword ptr [rbp - 0xf0], rax
0x400095:	mov	rax, qword ptr [rbp - 0xe8]
0x40009c:	mov	rax, qword ptr [rax]
0x40009f:	mov	qword ptr [rbp - 0xd8], rax
0x4000a6:	lea	rax, [rbp - 0xd0]
0x4000ad:	mov	edx, 0xc7
0x4000b2:	mov	esi, 0x43
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x4000bf, 29 bytes>
0x4000bf:	mov	byte ptr [rbp - 9], 0
0x4000c3:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000ca:	lea	rax, [rbp - 0xd0]
0x4000d1:	mov	rsi, rdx
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500018
<Block for 0x4000dc, 15 bytes>
0x4000dc:	lea	rax, [rbp - 0xd0]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500020
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500028
