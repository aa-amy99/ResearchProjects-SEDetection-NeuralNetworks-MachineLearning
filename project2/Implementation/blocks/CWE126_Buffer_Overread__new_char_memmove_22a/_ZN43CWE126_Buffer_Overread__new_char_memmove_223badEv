<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	dword ptr [rip + 0x203], 1
0x40002d:	mov	rax, qword ptr [rbp - 0x78]
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 26 bytes>
0x400039:	mov	qword ptr [rbp - 0x78], rax
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x43
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 16 bytes>
0x400053:	mov	byte ptr [rbp - 0xd], 0
0x400057:	lea	rax, [rbp - 0x70]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
<Block for 0x400063, 22 bytes>
0x400063:	mov	rdx, rax
0x400066:	mov	rcx, qword ptr [rbp - 0x78]
0x40006a:	lea	rax, [rbp - 0x70]
0x40006e:	mov	rsi, rcx
0x400071:	mov	rdi, rax
0x400074:	call	0x500018
<Block for 0x400079, 16 bytes>
0x400079:	mov	byte ptr [rbp - 0xd], 0
0x40007d:	lea	rax, [rbp - 0x70]
0x400081:	mov	rdi, rax
0x400084:	call	0x500020
<Block for 0x400089, 7 bytes>
0x400089:	cmp	qword ptr [rbp - 0x78], 0
0x40008e:	je	0x40009c
<Block for 0x40009c, 16 bytes>
0x40009c:	nop	
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	xor	rax, qword ptr fs:[0x28]
0x4000aa:	je	0x4000b1
<Block for 0x400090, 12 bytes>
0x400090:	mov	rax, qword ptr [rbp - 0x78]
0x400094:	mov	rdi, rax
0x400097:	call	0x500028
<Block for 0x4000b1, 2 bytes>
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000ac, 5 bytes>
0x4000ac:	call	0x500030
