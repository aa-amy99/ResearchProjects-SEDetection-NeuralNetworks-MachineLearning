<Block for 0x4000b3, 57 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	add	rsp, -0x80
0x4000bf:	mov	rax, qword ptr fs:[0x28]
0x4000c8:	mov	qword ptr [rbp - 8], rax
0x4000cc:	xor	eax, eax
0x4000ce:	mov	qword ptr [rbp - 0x78], 0
0x4000d6:	mov	dword ptr [rip + 0x154], 0
0x4000e0:	mov	rax, qword ptr [rbp - 0x78]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500038
<Block for 0x4000ec, 26 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x78], rax
0x4000f0:	lea	rax, [rbp - 0x70]
0x4000f4:	mov	edx, 0x63
0x4000f9:	mov	esi, 0x43
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500008
<Block for 0x400106, 16 bytes>
0x400106:	mov	byte ptr [rbp - 0xd], 0
0x40010a:	lea	rax, [rbp - 0x70]
0x40010e:	mov	rdi, rax
0x400111:	call	0x500010
<Block for 0x400116, 22 bytes>
0x400116:	mov	rdx, rax
0x400119:	mov	rcx, qword ptr [rbp - 0x78]
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	rsi, rcx
0x400124:	mov	rdi, rax
0x400127:	call	0x500018
<Block for 0x40012c, 16 bytes>
0x40012c:	mov	byte ptr [rbp - 0xd], 0
0x400130:	lea	rax, [rbp - 0x70]
0x400134:	mov	rdi, rax
0x400137:	call	0x500020
<Block for 0x40013c, 7 bytes>
0x40013c:	cmp	qword ptr [rbp - 0x78], 0
0x400141:	je	0x40014f
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x400143, 12 bytes>
0x400143:	mov	rax, qword ptr [rbp - 0x78]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500028
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500030
