<Block for 0x400117, 31 bytes>
0x400117:	endbr64	
0x40011b:	push	rbp
0x40011c:	mov	rbp, rsp
0x40011f:	sub	rsp, 0x10
0x400123:	mov	qword ptr [rbp - 8], 0
0x40012b:	mov	eax, dword ptr [rip + 0x17b]
0x400131:	cmp	eax, 5
0x400134:	jne	0x400187
<Block for 0x400136, 10 bytes>
0x400136:	mov	edi, 0x320
0x40013b:	call	0x500000
<Block for 0x400187, 3 bytes>
0x400187:	nop	
0x400188:	leave	
0x400189:	ret	
<Block for 0x400140, 19 bytes>
0x400140:	mov	qword ptr [rbp - 8], rax
0x400144:	mov	qword ptr [rbp - 0x10], 0
0x40014c:	cmp	qword ptr [rbp - 0x10], 0x63
0x400151:	ja	0x400174
<Block for 0x400153, 33 bytes>
0x400153:	mov	rax, qword ptr [rbp - 0x10]
0x400157:	lea	rdx, [rax*8]
0x40015f:	mov	rax, qword ptr [rbp - 8]
0x400163:	add	rax, rdx
0x400166:	mov	qword ptr [rax], 5
0x40016d:	add	qword ptr [rbp - 0x10], 1
0x400172:	jmp	0x40014c
<Block for 0x400174, 7 bytes>
0x400174:	cmp	qword ptr [rbp - 8], 0
0x400179:	je	0x400187
<Block for 0x40014c, 7 bytes>
0x40014c:	cmp	qword ptr [rbp - 0x10], 0x63
0x400151:	ja	0x400174
<Block for 0x40017b, 12 bytes>
0x40017b:	mov	rax, qword ptr [rbp - 8]
0x40017f:	mov	rdi, rax
0x400182:	call	0x500008
