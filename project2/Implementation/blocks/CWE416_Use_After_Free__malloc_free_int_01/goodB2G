<Block for 0x4000f0, 30 bytes>
0x4000f0:	endbr64	
0x4000f4:	push	rbp
0x4000f5:	mov	rbp, rsp
0x4000f8:	sub	rsp, 0x10
0x4000fc:	mov	qword ptr [rbp - 8], 0
0x400104:	mov	edi, 0x190
0x400109:	call	0x500000
<Block for 0x40010e, 11 bytes>
0x40010e:	mov	qword ptr [rbp - 8], rax
0x400112:	cmp	qword ptr [rbp - 8], 0
0x400117:	jne	0x400123
<Block for 0x400119, 10 bytes>
0x400119:	mov	edi, 0xffffffff
0x40011e:	call	0x500008
<Block for 0x400123, 10 bytes>
0x400123:	mov	qword ptr [rbp - 0x10], 0
0x40012b:	jmp	0x40014b
<Block for 0x40014b, 7 bytes>
0x40014b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400150:	jbe	0x40012d
<Block for 0x40012d, 37 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x10]
0x400131:	lea	rdx, [rax*4]
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	add	rax, rdx
0x400140:	mov	dword ptr [rax], 5
0x400146:	add	qword ptr [rbp - 0x10], 1
0x40014b:	cmp	qword ptr [rbp - 0x10], 0x63
0x400150:	jbe	0x40012d
<Block for 0x400152, 12 bytes>
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	mov	rdi, rax
0x400159:	call	0x500010
<Block for 0x40015e, 3 bytes>
0x40015e:	nop	
0x40015f:	leave	
0x400160:	ret	
