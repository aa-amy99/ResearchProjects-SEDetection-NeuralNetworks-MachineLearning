<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x40
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40008b:	lea	rax, [rbp - 0x34]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 47 bytes>
0x400097:	mov	qword ptr [rbp - 0x30], 0
0x40009f:	mov	qword ptr [rbp - 0x28], 0
0x4000a7:	mov	qword ptr [rbp - 0x20], 0
0x4000af:	mov	qword ptr [rbp - 0x18], 0
0x4000b7:	mov	qword ptr [rbp - 0x10], 0
0x4000bf:	mov	eax, dword ptr [rbp - 0x34]
0x4000c2:	test	eax, eax
0x4000c4:	js	0x4000d8
<Block for 0x4000d8, 12 bytes>
0x4000d8:	lea	rdi, [rip + 0x209]
0x4000df:	call	0x500010
<Block for 0x4000c6, 16 bytes>
0x4000c6:	mov	eax, dword ptr [rbp - 0x34]
0x4000c9:	cdqe	
0x4000cb:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000cf:	mov	edi, eax
0x4000d1:	call	0x500008
<Block for 0x4000e4, 2 bytes>
0x4000e4:	jmp	0x4000f2
<Block for 0x4000d6, 2 bytes>
0x4000d6:	jmp	0x4000f2
<Block for 0x4000f2, 15 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 8]
0x4000f6:	xor	rax, qword ptr fs:[0x28]
0x4000ff:	je	0x400106
<Block for 0x400106, 2 bytes>
0x400106:	leave	
0x400107:	ret	
<Block for 0x400101, 5 bytes>
0x400101:	call	0x500020
