<Block for 0x4001a3, 30 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	sub	rsp, 0x10
0x4001af:	mov	qword ptr [rbp - 8], 0
0x4001b7:	mov	edi, 0x190
0x4001bc:	call	0x500000
<Block for 0x4001c1, 19 bytes>
0x4001c1:	mov	qword ptr [rbp - 8], rax
0x4001c5:	mov	qword ptr [rbp - 0x10], 0
0x4001cd:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001d2:	ja	0x4001f4
<Block for 0x4001d4, 32 bytes>
0x4001d4:	mov	rax, qword ptr [rbp - 0x10]
0x4001d8:	lea	rdx, [rax*4]
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	add	rax, rdx
0x4001e7:	mov	dword ptr [rax], 5
0x4001ed:	add	qword ptr [rbp - 0x10], 1
0x4001f2:	jmp	0x4001cd
<Block for 0x4001f4, 13 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 8]
0x4001f8:	mov	eax, dword ptr [rax]
0x4001fa:	mov	edi, eax
0x4001fc:	call	0x500010
<Block for 0x4001cd, 7 bytes>
0x4001cd:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001d2:	ja	0x4001f4
<Block for 0x400201, 3 bytes>
0x400201:	nop	
0x400202:	leave	
0x400203:	ret	
