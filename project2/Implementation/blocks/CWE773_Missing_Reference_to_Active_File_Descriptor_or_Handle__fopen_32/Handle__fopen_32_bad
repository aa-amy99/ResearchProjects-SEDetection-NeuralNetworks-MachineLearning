<Block for 0x400000, 81 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x28], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x20], rax
0x40002b:	mov	qword ptr [rbp - 0x30], 0
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	rax, qword ptr [rax]
0x40003a:	mov	qword ptr [rbp - 0x18], rax
0x40003e:	lea	rsi, [rip + 0x13b]
0x400045:	lea	rdi, [rip + 0x137]
0x40004c:	call	0x500000
<Block for 0x400051, 45 bytes>
0x400051:	mov	qword ptr [rbp - 0x18], rax
0x400055:	mov	rax, qword ptr [rbp - 0x28]
0x400059:	mov	rdx, qword ptr [rbp - 0x18]
0x40005d:	mov	qword ptr [rax], rdx
0x400060:	mov	rax, qword ptr [rbp - 0x20]
0x400064:	mov	rax, qword ptr [rax]
0x400067:	mov	qword ptr [rbp - 0x10], rax
0x40006b:	lea	rsi, [rip + 0x10e]
0x400072:	lea	rdi, [rip + 0x11e]
0x400079:	call	0x500000
<Block for 0x40007e, 11 bytes>
0x40007e:	mov	qword ptr [rbp - 0x10], rax
0x400082:	cmp	qword ptr [rbp - 0x10], 0
0x400087:	je	0x400095
<Block for 0x400095, 16 bytes>
0x400095:	nop	
0x400096:	mov	rax, qword ptr [rbp - 8]
0x40009a:	xor	rax, qword ptr fs:[0x28]
0x4000a3:	je	0x4000aa
<Block for 0x400089, 12 bytes>
0x400089:	mov	rax, qword ptr [rbp - 0x10]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500008
<Block for 0x4000aa, 2 bytes>
0x4000aa:	leave	
0x4000ab:	ret	
<Block for 0x4000a5, 5 bytes>
0x4000a5:	call	0x500010
