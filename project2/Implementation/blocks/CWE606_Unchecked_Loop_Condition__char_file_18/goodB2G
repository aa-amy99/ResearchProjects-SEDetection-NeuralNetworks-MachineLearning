<Block for 0x4001b2, 164 bytes>
0x4001b2:	endbr64	
0x4001b6:	push	rbp
0x4001b7:	mov	rbp, rsp
0x4001ba:	sub	rsp, 0xa0
0x4001c1:	mov	rax, qword ptr fs:[0x28]
0x4001ca:	mov	qword ptr [rbp - 8], rax
0x4001ce:	xor	eax, eax
0x4001d0:	mov	qword ptr [rbp - 0x70], 0
0x4001d8:	mov	qword ptr [rbp - 0x68], 0
0x4001e0:	mov	qword ptr [rbp - 0x60], 0
0x4001e8:	mov	qword ptr [rbp - 0x58], 0
0x4001f0:	mov	qword ptr [rbp - 0x50], 0
0x4001f8:	mov	qword ptr [rbp - 0x48], 0
0x400200:	mov	qword ptr [rbp - 0x40], 0
0x400208:	mov	qword ptr [rbp - 0x38], 0
0x400210:	mov	qword ptr [rbp - 0x30], 0
0x400218:	mov	qword ptr [rbp - 0x28], 0
0x400220:	mov	qword ptr [rbp - 0x20], 0
0x400228:	mov	qword ptr [rbp - 0x18], 0
0x400230:	mov	dword ptr [rbp - 0x10], 0
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	qword ptr [rbp - 0x88], rax
0x400242:	nop	
0x400243:	endbr64	
0x400247:	mov	rax, qword ptr [rbp - 0x88]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500000
<Block for 0x400256, 19 bytes>
0x400256:	mov	qword ptr [rbp - 0x80], rax
0x40025a:	mov	eax, 0x64
0x40025f:	sub	rax, qword ptr [rbp - 0x80]
0x400263:	cmp	rax, 1
0x400267:	jbe	0x4002e2
<Block for 0x4002e2, 39 bytes>
0x4002e2:	nop	
0x4002e3:	endbr64	
0x4002e7:	lea	rdx, [rbp - 0x94]
0x4002ee:	mov	rax, qword ptr [rbp - 0x88]
0x4002f5:	lea	rsi, [rip + 0x1bf]
0x4002fc:	mov	rdi, rax
0x4002ff:	mov	eax, 0
0x400304:	call	0x500028
<Block for 0x400269, 19 bytes>
0x400269:	lea	rsi, [rip + 0x22c]
0x400270:	lea	rdi, [rip + 0x227]
0x400277:	call	0x500008
<Block for 0x400309, 5 bytes>
0x400309:	cmp	eax, 1
0x40030c:	jne	0x40035a
<Block for 0x40027c, 11 bytes>
0x40027c:	mov	qword ptr [rbp - 0x78], rax
0x400280:	cmp	qword ptr [rbp - 0x78], 0
0x400285:	je	0x4002e2
<Block for 0x40030e, 13 bytes>
0x40030e:	mov	eax, dword ptr [rbp - 0x94]
0x400314:	cmp	eax, 0x270f
0x400319:	jg	0x40035a
<Block for 0x40035a, 16 bytes>
0x40035a:	nop	
0x40035b:	mov	rax, qword ptr [rbp - 8]
0x40035f:	xor	rax, qword ptr fs:[0x28]
0x400368:	je	0x40036f
<Block for 0x400287, 45 bytes>
0x400287:	mov	rax, qword ptr [rbp - 0x80]
0x40028b:	mov	edx, 0x64
0x400290:	sub	edx, eax
0x400292:	mov	eax, edx
0x400294:	mov	esi, eax
0x400296:	mov	rdx, qword ptr [rbp - 0x88]
0x40029d:	mov	rax, qword ptr [rbp - 0x80]
0x4002a1:	lea	rcx, [rdx + rax]
0x4002a5:	mov	rax, qword ptr [rbp - 0x78]
0x4002a9:	mov	rdx, rax
0x4002ac:	mov	rdi, rcx
0x4002af:	call	0x500010
<Block for 0x40031b, 22 bytes>
0x40031b:	mov	dword ptr [rbp - 0x8c], 0
0x400325:	mov	dword ptr [rbp - 0x90], 0
0x40032f:	jmp	0x40033f
<Block for 0x40036f, 2 bytes>
0x40036f:	leave	
0x400370:	ret	
<Block for 0x40036a, 5 bytes>
0x40036a:	call	0x500038
<Block for 0x4002b4, 5 bytes>
0x4002b4:	test	rax, rax
0x4002b7:	jne	0x4002d6
<Block for 0x40033f, 14 bytes>
0x40033f:	mov	eax, dword ptr [rbp - 0x94]
0x400345:	cmp	dword ptr [rbp - 0x90], eax
0x40034b:	jl	0x400331
<Block for 0x4002b9, 12 bytes>
0x4002b9:	lea	rdi, [rip + 0x1ec]
0x4002c0:	call	0x500018
<Block for 0x4002d6, 12 bytes>
0x4002d6:	mov	rax, qword ptr [rbp - 0x78]
0x4002da:	mov	rdi, rax
0x4002dd:	call	0x500020
<Block for 0x400331, 28 bytes>
0x400331:	add	dword ptr [rbp - 0x8c], 1
0x400338:	add	dword ptr [rbp - 0x90], 1
0x40033f:	mov	eax, dword ptr [rbp - 0x94]
0x400345:	cmp	dword ptr [rbp - 0x90], eax
0x40034b:	jl	0x400331
<Block for 0x40034d, 13 bytes>
0x40034d:	mov	eax, dword ptr [rbp - 0x8c]
0x400353:	mov	edi, eax
0x400355:	call	0x500030
<Block for 0x4002c5, 29 bytes>
0x4002c5:	mov	rdx, qword ptr [rbp - 0x88]
0x4002cc:	mov	rax, qword ptr [rbp - 0x80]
0x4002d0:	add	rax, rdx
0x4002d3:	mov	byte ptr [rax], 0
0x4002d6:	mov	rax, qword ptr [rbp - 0x78]
0x4002da:	mov	rdi, rax
0x4002dd:	call	0x500020
