<Block for 0x400000, 42 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	eax, dword ptr [rip + 0x157]
0x400025:	cmp	eax, 5
0x400028:	jne	0x40004f
<Block for 0x40002a, 15 bytes>
0x40002a:	mov	rax, qword ptr [rip + 0xfffcf]
0x400031:	mov	rdi, rax
0x400034:	call	0x500008
<Block for 0x40004f, 31 bytes>
0x40004f:	mov	byte ptr [rbp - 0xc], 0x78
0x400053:	movzx	eax, byte ptr [rbp - 0xd]
0x400057:	mov	byte ptr [rbp - 0xb], al
0x40005a:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005e:	mov	byte ptr [rbp - 9], 0
0x400062:	lea	rax, [rbp - 0xc]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x400039, 19 bytes>
0x400039:	mov	byte ptr [rbp - 0xc], al
0x40003c:	mov	byte ptr [rbp - 0xb], 0
0x400040:	lea	rax, [rbp - 0xc]
0x400044:	mov	rdi, rax
0x400047:	call	0x500010
<Block for 0x40006e, 16 bytes>
0x40006e:	nop	
0x40006f:	mov	rax, qword ptr [rbp - 8]
0x400073:	xor	rax, qword ptr fs:[0x28]
0x40007c:	je	0x400083
<Block for 0x40004c, 34 bytes>
0x40004c:	mov	byte ptr [rbp - 0xd], al
0x40004f:	mov	byte ptr [rbp - 0xc], 0x78
0x400053:	movzx	eax, byte ptr [rbp - 0xd]
0x400057:	mov	byte ptr [rbp - 0xb], al
0x40005a:	mov	byte ptr [rbp - 0xa], 0x7a
0x40005e:	mov	byte ptr [rbp - 9], 0
0x400062:	lea	rax, [rbp - 0xc]
0x400066:	mov	rdi, rax
0x400069:	call	0x500018
<Block for 0x400083, 2 bytes>
0x400083:	leave	
0x400084:	ret	
<Block for 0x40007e, 5 bytes>
0x40007e:	call	0x500020
