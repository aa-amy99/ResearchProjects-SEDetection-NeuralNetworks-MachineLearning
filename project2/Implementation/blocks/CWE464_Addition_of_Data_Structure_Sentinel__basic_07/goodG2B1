<Block for 0x400085, 42 bytes>
0x400085:	endbr64	
0x400089:	push	rbp
0x40008a:	mov	rbp, rsp
0x40008d:	sub	rsp, 0x10
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	mov	byte ptr [rbp - 0xd], 0x20
0x4000a4:	mov	eax, dword ptr [rip + 0xd2]
0x4000aa:	cmp	eax, 5
0x4000ad:	je	0x4000bd
<Block for 0x4000bd, 35 bytes>
0x4000bd:	mov	byte ptr [rbp - 0xd], 0x61
0x4000c1:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c5:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c9:	mov	byte ptr [rbp - 0xb], al
0x4000cc:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d0:	mov	byte ptr [rbp - 9], 0
0x4000d4:	lea	rax, [rbp - 0xc]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500018
<Block for 0x4000af, 12 bytes>
0x4000af:	lea	rdi, [rip + 0xca]
0x4000b6:	call	0x500018
<Block for 0x4000e0, 16 bytes>
0x4000e0:	nop	
0x4000e1:	mov	rax, qword ptr [rbp - 8]
0x4000e5:	xor	rax, qword ptr fs:[0x28]
0x4000ee:	je	0x4000f5
<Block for 0x4000bb, 2 bytes>
0x4000bb:	jmp	0x4000c1
<Block for 0x4000f5, 2 bytes>
0x4000f5:	leave	
0x4000f6:	ret	
<Block for 0x4000f0, 5 bytes>
0x4000f0:	call	0x500020
<Block for 0x4000c1, 31 bytes>
0x4000c1:	mov	byte ptr [rbp - 0xc], 0x78
0x4000c5:	movzx	eax, byte ptr [rbp - 0xd]
0x4000c9:	mov	byte ptr [rbp - 0xb], al
0x4000cc:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000d0:	mov	byte ptr [rbp - 9], 0
0x4000d4:	lea	rax, [rbp - 0xc]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500018
