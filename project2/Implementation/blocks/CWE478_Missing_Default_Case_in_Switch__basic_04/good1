<Block for 0x40008c, 21 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0x10
0x400098:	mov	eax, 0
0x40009d:	test	eax, eax
0x40009f:	je	0x4000af
<Block for 0x4000af, 16 bytes>
0x4000af:	lea	rax, [rip + 0x122]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	call	0x500000
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0x14d]
0x4000a8:	call	0x500008
<Block for 0x4000bf, 55 bytes>
0x4000bf:	mov	edx, eax
0x4000c1:	movsxd	rax, edx
0x4000c4:	imul	rax, rax, 0x55555556
0x4000cb:	shr	rax, 0x20
0x4000cf:	mov	rcx, rax
0x4000d2:	mov	eax, edx
0x4000d4:	sar	eax, 0x1f
0x4000d7:	mov	esi, ecx
0x4000d9:	sub	esi, eax
0x4000db:	mov	eax, esi
0x4000dd:	mov	dword ptr [rbp - 0xc], eax
0x4000e0:	mov	ecx, dword ptr [rbp - 0xc]
0x4000e3:	mov	eax, ecx
0x4000e5:	add	eax, eax
0x4000e7:	add	eax, ecx
0x4000e9:	sub	edx, eax
0x4000eb:	mov	eax, edx
0x4000ed:	mov	dword ptr [rbp - 0xc], eax
0x4000f0:	cmp	dword ptr [rbp - 0xc], 0
0x4000f4:	je	0x4000fe
<Block for 0x4000ad, 2 bytes>
0x4000ad:	jmp	0x400123
<Block for 0x4000fe, 13 bytes>
0x4000fe:	lea	rax, [rip + 0xec]
0x400105:	mov	qword ptr [rbp - 8], rax
0x400109:	jmp	0x400117
<Block for 0x4000f6, 6 bytes>
0x4000f6:	cmp	dword ptr [rbp - 0xc], 1
0x4000fa:	je	0x40010b
<Block for 0x400123, 2 bytes>
0x400123:	leave	
0x400124:	ret	
<Block for 0x400117, 12 bytes>
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x40010b, 24 bytes>
0x40010b:	lea	rax, [rip + 0xe1]
0x400112:	mov	qword ptr [rbp - 8], rax
0x400116:	nop	
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500008
<Block for 0x4000fc, 2 bytes>
0x4000fc:	jmp	0x400123
