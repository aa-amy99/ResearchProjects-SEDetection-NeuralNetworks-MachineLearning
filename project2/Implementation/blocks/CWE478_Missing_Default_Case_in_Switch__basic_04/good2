<Block for 0x400125, 21 bytes>
0x400125:	endbr64	
0x400129:	push	rbp
0x40012a:	mov	rbp, rsp
0x40012d:	sub	rsp, 0x10
0x400131:	mov	eax, 1
0x400136:	test	eax, eax
0x400138:	je	0x4001ae
<Block for 0x4001ae, 2 bytes>
0x4001ae:	leave	
0x4001af:	ret	
<Block for 0x40013a, 16 bytes>
0x40013a:	lea	rax, [rip + 0x97]
0x400141:	mov	qword ptr [rbp - 8], rax
0x400145:	call	0x500000
<Block for 0x40014a, 55 bytes>
0x40014a:	mov	edx, eax
0x40014c:	movsxd	rax, edx
0x40014f:	imul	rax, rax, 0x55555556
0x400156:	shr	rax, 0x20
0x40015a:	mov	rcx, rax
0x40015d:	mov	eax, edx
0x40015f:	sar	eax, 0x1f
0x400162:	mov	esi, ecx
0x400164:	sub	esi, eax
0x400166:	mov	eax, esi
0x400168:	mov	dword ptr [rbp - 0xc], eax
0x40016b:	mov	ecx, dword ptr [rbp - 0xc]
0x40016e:	mov	eax, ecx
0x400170:	add	eax, eax
0x400172:	add	eax, ecx
0x400174:	sub	edx, eax
0x400176:	mov	eax, edx
0x400178:	mov	dword ptr [rbp - 0xc], eax
0x40017b:	cmp	dword ptr [rbp - 0xc], 0
0x40017f:	je	0x400189
<Block for 0x400189, 13 bytes>
0x400189:	lea	rax, [rip + 0x61]
0x400190:	mov	qword ptr [rbp - 8], rax
0x400194:	jmp	0x4001a2
<Block for 0x400181, 6 bytes>
0x400181:	cmp	dword ptr [rbp - 0xc], 1
0x400185:	je	0x400196
<Block for 0x4001a2, 12 bytes>
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500008
<Block for 0x400196, 24 bytes>
0x400196:	lea	rax, [rip + 0x56]
0x40019d:	mov	qword ptr [rbp - 8], rax
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500008
<Block for 0x400187, 2 bytes>
0x400187:	jmp	0x4001ae
