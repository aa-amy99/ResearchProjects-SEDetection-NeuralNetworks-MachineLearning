<Block for 0x4001a4, 45 bytes>
0x4001a4:	endbr64	
0x4001a8:	push	rbp
0x4001a9:	mov	rbp, rsp
0x4001ac:	add	rsp, -0x80
0x4001b0:	mov	rax, qword ptr fs:[0x28]
0x4001b9:	mov	qword ptr [rbp - 8], rax
0x4001bd:	xor	eax, eax
0x4001bf:	mov	qword ptr [rbp - 0x78], 0
0x4001c7:	mov	edi, 0x64
0x4001cc:	call	0x500000
<Block for 0x4001d1, 11 bytes>
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	cmp	qword ptr [rbp - 0x78], 0
0x4001da:	jne	0x4001e6
<Block for 0x4001dc, 10 bytes>
0x4001dc:	mov	edi, 0xffffffff
0x4001e1:	call	0x500008
<Block for 0x4001e6, 22 bytes>
0x4001e6:	mov	rax, qword ptr [rbp - 0x78]
0x4001ea:	mov	edx, 0x63
0x4001ef:	mov	esi, 0x41
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x500010
<Block for 0x4001fc, 33 bytes>
0x4001fc:	mov	rax, qword ptr [rbp - 0x78]
0x400200:	add	rax, 0x63
0x400204:	mov	byte ptr [rax], 0
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500010
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	byte ptr [rbp - 0xd], 0
0x400221:	lea	rax, [rbp - 0x70]
0x400225:	mov	rdi, rax
0x400228:	call	0x500018
<Block for 0x40022d, 22 bytes>
0x40022d:	mov	rdx, rax
0x400230:	mov	rcx, qword ptr [rbp - 0x78]
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	rsi, rcx
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500020
<Block for 0x400243, 16 bytes>
0x400243:	mov	byte ptr [rbp - 0xd], 0
0x400247:	lea	rax, [rbp - 0x70]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500028
<Block for 0x400253, 12 bytes>
0x400253:	mov	rax, qword ptr [rbp - 0x78]
0x400257:	mov	rdi, rax
0x40025a:	call	0x500030
<Block for 0x40025f, 16 bytes>
0x40025f:	nop	
0x400260:	mov	rax, qword ptr [rbp - 8]
0x400264:	xor	rax, qword ptr fs:[0x28]
0x40026d:	je	0x400274
<Block for 0x400274, 2 bytes>
0x400274:	leave	
0x400275:	ret	
<Block for 0x40026f, 5 bytes>
0x40026f:	call	0x500038
