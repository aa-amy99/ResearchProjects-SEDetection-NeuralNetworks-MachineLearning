<Block for 0x4001be, 82 bytes>
0x4001be:	endbr64	
0x4001c2:	push	rbp
0x4001c3:	mov	rbp, rsp
0x4001c6:	sub	rsp, 0x120
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 8], rax
0x4001da:	xor	eax, eax
0x4001dc:	movabs	rax, 0x3d48544150
0x4001e6:	mov	edx, 0
0x4001eb:	mov	qword ptr [rbp - 0x110], rax
0x4001f2:	mov	qword ptr [rbp - 0x108], rdx
0x4001f9:	lea	rdx, [rbp - 0x100]
0x400200:	mov	eax, 0
0x400205:	mov	ecx, 0x1d
0x40020a:	mov	rdi, rdx
0x40020d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400210, 51 bytes>
0x400210:	mov	rdx, rdi
0x400213:	mov	word ptr [rdx], ax
0x400216:	add	rdx, 2
0x40021a:	lea	rax, [rbp - 0x110]
0x400221:	mov	qword ptr [rbp - 0x118], rax
0x400228:	mov	rax, qword ptr [rbp - 0x118]
0x40022f:	mov	rcx, -1
0x400236:	mov	rdx, rax
0x400239:	mov	eax, 0
0x40023e:	mov	rdi, rdx
0x400241:	repne scasb	al, byte ptr [rdi]
<Block for 0x40020d, 3 bytes>
0x40020d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400243, 45 bytes>
0x400243:	mov	rax, rcx
0x400246:	not	rax
0x400249:	lea	rdx, [rax - 1]
0x40024d:	mov	rax, qword ptr [rbp - 0x118]
0x400254:	add	rax, rdx
0x400257:	mov	dword ptr [rax], 0x6e69622f
0x40025d:	mov	byte ptr [rax + 4], 0
0x400261:	mov	rax, qword ptr [rbp - 0x118]
0x400268:	mov	rdi, rax
0x40026b:	call	0x500018
<Block for 0x400241, 2 bytes>
0x400241:	repne scasb	al, byte ptr [rdi]
<Block for 0x400270, 16 bytes>
0x400270:	nop	
0x400271:	mov	rax, qword ptr [rbp - 8]
0x400275:	xor	rax, qword ptr fs:[0x28]
0x40027e:	je	0x400285
<Block for 0x400285, 2 bytes>
0x400285:	leave	
0x400286:	ret	
<Block for 0x400280, 5 bytes>
0x400280:	call	0x500020
