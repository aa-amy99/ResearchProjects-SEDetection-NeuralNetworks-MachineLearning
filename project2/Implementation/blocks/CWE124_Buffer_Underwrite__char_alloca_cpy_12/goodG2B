<Block for 0x400135, 81 bytes>
0x400135:	endbr64	
0x400139:	push	rbp
0x40013a:	mov	rbp, rsp
0x40013d:	add	rsp, -0x80
0x400141:	mov	rax, qword ptr fs:[0x28]
0x40014a:	mov	qword ptr [rbp - 8], rax
0x40014e:	xor	eax, eax
0x400150:	mov	eax, 0x10
0x400155:	sub	rax, 1
0x400159:	add	rax, 0x6c
0x40015d:	mov	ecx, 0x10
0x400162:	mov	edx, 0
0x400167:	div	rcx
0x40016a:	imul	rax, rax, 0x10
0x40016e:	mov	rdx, rax
0x400171:	and	rdx, 0xfffffffffffff000
0x400178:	mov	rcx, rsp
0x40017b:	sub	rcx, rdx
0x40017e:	mov	rdx, rcx
0x400181:	cmp	rsp, rdx
0x400184:	je	0x400198
<Block for 0x400198, 26 bytes>
0x400198:	mov	rdx, rax
0x40019b:	and	edx, 0xfff
0x4001a1:	sub	rsp, rdx
0x4001a4:	mov	rdx, rax
0x4001a7:	and	edx, 0xfff
0x4001ad:	test	rdx, rdx
0x4001b0:	je	0x4001c2
<Block for 0x400186, 18 bytes>
0x400186:	sub	rsp, 0x1000
0x40018d:	or	qword ptr [rsp + 0xff8], 0
0x400196:	jmp	0x400181
<Block for 0x4001c2, 41 bytes>
0x4001c2:	mov	rax, rsp
0x4001c5:	add	rax, 0xf
0x4001c9:	shr	rax, 4
0x4001cd:	shl	rax, 4
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	mov	rax, qword ptr [rbp - 0x78]
0x4001d9:	mov	edx, 0x63
0x4001de:	mov	esi, 0x41
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500000
<Block for 0x4001b2, 57 bytes>
0x4001b2:	and	eax, 0xfff
0x4001b7:	sub	rax, 8
0x4001bb:	add	rax, rsp
0x4001be:	or	qword ptr [rax], 0
0x4001c2:	mov	rax, rsp
0x4001c5:	add	rax, 0xf
0x4001c9:	shr	rax, 4
0x4001cd:	shl	rax, 4
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	mov	rax, qword ptr [rbp - 0x78]
0x4001d9:	mov	edx, 0x63
0x4001de:	mov	esi, 0x41
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500000
<Block for 0x400181, 5 bytes>
0x400181:	cmp	rsp, rdx
0x400184:	je	0x400198
<Block for 0x4001eb, 21 bytes>
0x4001eb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ef:	add	rax, 0x63
0x4001f3:	mov	byte ptr [rax], 0
0x4001f6:	mov	eax, 0
0x4001fb:	call	0x500008
<Block for 0x400200, 4 bytes>
0x400200:	test	eax, eax
0x400202:	je	0x40020e
<Block for 0x40020e, 30 bytes>
0x40020e:	mov	rax, qword ptr [rbp - 0x78]
0x400212:	mov	qword ptr [rbp - 0x80], rax
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	edx, 0x63
0x40021f:	mov	esi, 0x43
0x400224:	mov	rdi, rax
0x400227:	call	0x500000
<Block for 0x400204, 10 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0x78]
0x400208:	mov	qword ptr [rbp - 0x80], rax
0x40020c:	jmp	0x400216
<Block for 0x40022c, 23 bytes>
0x40022c:	mov	byte ptr [rbp - 0xd], 0
0x400230:	lea	rdx, [rbp - 0x70]
0x400234:	mov	rax, qword ptr [rbp - 0x80]
0x400238:	mov	rsi, rdx
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500010
<Block for 0x400216, 22 bytes>
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	edx, 0x63
0x40021f:	mov	esi, 0x43
0x400224:	mov	rdi, rax
0x400227:	call	0x500000
<Block for 0x400243, 12 bytes>
0x400243:	mov	rax, qword ptr [rbp - 0x80]
0x400247:	mov	rdi, rax
0x40024a:	call	0x500018
<Block for 0x40024f, 16 bytes>
0x40024f:	nop	
0x400250:	mov	rax, qword ptr [rbp - 8]
0x400254:	xor	rax, qword ptr fs:[0x28]
0x40025d:	je	0x400264
<Block for 0x400264, 2 bytes>
0x400264:	leave	
0x400265:	ret	
<Block for 0x40025f, 5 bytes>
0x40025f:	call	0x500020
