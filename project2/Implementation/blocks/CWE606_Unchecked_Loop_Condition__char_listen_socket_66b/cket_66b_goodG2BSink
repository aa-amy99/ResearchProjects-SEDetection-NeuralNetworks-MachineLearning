<Block for 0x40008d, 71 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x30
0x400099:	mov	qword ptr [rbp - 0x28], rdi
0x40009d:	mov	rax, qword ptr fs:[0x28]
0x4000a6:	mov	qword ptr [rbp - 8], rax
0x4000aa:	xor	eax, eax
0x4000ac:	mov	rax, qword ptr [rbp - 0x28]
0x4000b0:	mov	rax, qword ptr [rax + 0x10]
0x4000b4:	mov	qword ptr [rbp - 0x10], rax
0x4000b8:	lea	rdx, [rbp - 0x1c]
0x4000bc:	mov	rax, qword ptr [rbp - 0x10]
0x4000c0:	lea	rsi, [rip + 0xea]
0x4000c7:	mov	rdi, rax
0x4000ca:	mov	eax, 0
0x4000cf:	call	0x500000
<Block for 0x4000d4, 5 bytes>
0x4000d4:	cmp	eax, 1
0x4000d7:	jne	0x400103
<Block for 0x4000d9, 16 bytes>
0x4000d9:	mov	dword ptr [rbp - 0x14], 0
0x4000e0:	mov	dword ptr [rbp - 0x18], 0
0x4000e7:	jmp	0x4000f1
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x4000f1, 8 bytes>
0x4000f1:	mov	eax, dword ptr [rbp - 0x1c]
0x4000f4:	cmp	dword ptr [rbp - 0x18], eax
0x4000f7:	jl	0x4000e9
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500010
<Block for 0x4000e9, 16 bytes>
0x4000e9:	add	dword ptr [rbp - 0x14], 1
0x4000ed:	add	dword ptr [rbp - 0x18], 1
0x4000f1:	mov	eax, dword ptr [rbp - 0x1c]
0x4000f4:	cmp	dword ptr [rbp - 0x18], eax
0x4000f7:	jl	0x4000e9
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	eax, dword ptr [rbp - 0x14]
0x4000fc:	mov	edi, eax
0x4000fe:	call	0x500008
