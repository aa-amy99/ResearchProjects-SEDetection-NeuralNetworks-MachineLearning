<Block for 0x40004f, 22 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x20
0x40005b:	mov	edi, 8
0x400060:	call	0x500000
<Block for 0x400065, 30 bytes>
0x400065:	mov	qword ptr [rbp - 0x18], rax
0x400069:	mov	rax, qword ptr [rbp - 0x18]
0x40006d:	movsd	xmm0, qword ptr [rip + 0xeb]
0x400075:	movsd	qword ptr [rax], xmm0
0x400079:	mov	edi, 8
0x40007e:	call	0x500000
<Block for 0x400083, 43 bytes>
0x400083:	mov	qword ptr [rbp - 0x10], rax
0x400087:	mov	rax, qword ptr [rbp - 0x10]
0x40008b:	mov	rdx, qword ptr [rbp - 0x18]
0x40008f:	mov	qword ptr [rax], rdx
0x400092:	mov	rax, qword ptr [rbp - 0x10]
0x400096:	mov	rax, qword ptr [rax]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	mov	rax, qword ptr [rax]
0x4000a4:	movq	xmm0, rax
0x4000a9:	call	0x500010
<Block for 0x4000ae, 9 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x10]
0x4000b2:	test	rax, rax
0x4000b5:	je	0x4000c4
<Block for 0x4000c4, 3 bytes>
0x4000c4:	nop	
0x4000c5:	leave	
0x4000c6:	ret	
<Block for 0x4000b7, 13 bytes>
0x4000b7:	mov	esi, 8
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500008
