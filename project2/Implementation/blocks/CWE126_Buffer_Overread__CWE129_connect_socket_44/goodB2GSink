<Block for 0x400256, 76 bytes>
0x400256:	endbr64	
0x40025a:	push	rbp
0x40025b:	mov	rbp, rsp
0x40025e:	sub	rsp, 0x40
0x400262:	mov	dword ptr [rbp - 0x34], edi
0x400265:	mov	rax, qword ptr fs:[0x28]
0x40026e:	mov	qword ptr [rbp - 8], rax
0x400272:	xor	eax, eax
0x400274:	mov	qword ptr [rbp - 0x30], 0
0x40027c:	mov	qword ptr [rbp - 0x28], 0
0x400284:	mov	qword ptr [rbp - 0x20], 0
0x40028c:	mov	qword ptr [rbp - 0x18], 0
0x400294:	mov	qword ptr [rbp - 0x10], 0
0x40029c:	cmp	dword ptr [rbp - 0x34], 0
0x4002a0:	js	0x4002ba
<Block for 0x4002ba, 12 bytes>
0x4002ba:	lea	rdi, [rip + 0x18f]
0x4002c1:	call	0x500008
<Block for 0x4002a2, 6 bytes>
0x4002a2:	cmp	dword ptr [rbp - 0x34], 9
0x4002a6:	jg	0x4002ba
<Block for 0x4002c6, 16 bytes>
0x4002c6:	nop	
0x4002c7:	mov	rax, qword ptr [rbp - 8]
0x4002cb:	xor	rax, qword ptr fs:[0x28]
0x4002d4:	je	0x4002db
<Block for 0x4002a8, 16 bytes>
0x4002a8:	mov	eax, dword ptr [rbp - 0x34]
0x4002ab:	cdqe	
0x4002ad:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002b1:	mov	edi, eax
0x4002b3:	call	0x500000
<Block for 0x4002db, 2 bytes>
0x4002db:	leave	
0x4002dc:	ret	
<Block for 0x4002d6, 5 bytes>
0x4002d6:	call	0x500010
<Block for 0x4002b8, 2 bytes>
0x4002b8:	jmp	0x4002c6
