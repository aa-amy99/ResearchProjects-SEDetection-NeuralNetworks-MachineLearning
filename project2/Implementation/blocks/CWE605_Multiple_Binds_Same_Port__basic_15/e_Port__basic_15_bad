<Block for 0x400000, 165 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40008f:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400099:	lea	rax, [rbp - 0x70]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500000
<Block for 0x4000a5, 47 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x90], rax
0x4000ac:	mov	dword ptr [rbp - 0xa4], 1
0x4000b6:	mov	dword ptr [rbp - 0x98], 4
0x4000c0:	mov	edx, 6
0x4000c5:	mov	esi, 1
0x4000ca:	mov	edi, 2
0x4000cf:	call	0x500008
<Block for 0x4000d4, 19 bytes>
0x4000d4:	mov	dword ptr [rbp - 0x9c], eax
0x4000da:	cmp	dword ptr [rbp - 0x9c], -1
0x4000e1:	je	0x400264
<Block for 0x400264, 3 bytes>
0x400264:	nop	
0x400265:	jmp	0x400271
<Block for 0x4000e7, 42 bytes>
0x4000e7:	mov	ecx, dword ptr [rbp - 0x98]
0x4000ed:	lea	rdx, [rbp - 0xa4]
0x4000f4:	mov	eax, dword ptr [rbp - 0x9c]
0x4000fa:	mov	r8d, ecx
0x4000fd:	mov	rcx, rdx
0x400100:	mov	edx, 2
0x400105:	mov	esi, 1
0x40010a:	mov	edi, eax
0x40010c:	call	0x500010
<Block for 0x400271, 9 bytes>
0x400271:	cmp	dword ptr [rbp - 0x9c], -1
0x400278:	je	0x400287
<Block for 0x400111, 8 bytes>
0x400111:	test	eax, eax
0x400113:	jne	0x400267
<Block for 0x400287, 9 bytes>
0x400287:	cmp	dword ptr [rbp - 0xa0], -1
0x40028e:	je	0x40029d
<Block for 0x40027a, 13 bytes>
0x40027a:	mov	eax, dword ptr [rbp - 0x9c]
0x400280:	mov	edi, eax
0x400282:	call	0x500050
<Block for 0x400119, 22 bytes>
0x400119:	lea	rax, [rbp - 0x80]
0x40011d:	mov	edx, 0x10
0x400122:	mov	esi, 0
0x400127:	mov	rdi, rax
0x40012a:	call	0x500018
<Block for 0x400267, 3 bytes>
0x400267:	nop	
0x400268:	jmp	0x400271
<Block for 0x40029d, 12 bytes>
0x40029d:	lea	rax, [rbp - 0x70]
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x500058
<Block for 0x400290, 13 bytes>
0x400290:	mov	eax, dword ptr [rbp - 0xa0]
0x400296:	mov	edi, eax
0x400298:	call	0x500050
<Block for 0x40012f, 23 bytes>
0x40012f:	mov	word ptr [rbp - 0x80], 2
0x400135:	mov	dword ptr [rbp - 0x7c], 0
0x40013c:	mov	edi, 0x6987
0x400141:	call	0x500020
<Block for 0x4002a9, 17 bytes>
0x4002a9:	nop	
0x4002aa:	nop	
0x4002ab:	mov	rax, qword ptr [rbp - 8]
0x4002af:	xor	rax, qword ptr fs:[0x28]
0x4002b8:	je	0x4002bf
<Block for 0x400146, 29 bytes>
0x400146:	mov	word ptr [rbp - 0x7e], ax
0x40014a:	lea	rcx, [rbp - 0x80]
0x40014e:	mov	eax, dword ptr [rbp - 0x9c]
0x400154:	mov	edx, 0x10
0x400159:	mov	rsi, rcx
0x40015c:	mov	edi, eax
0x40015e:	call	0x500028
<Block for 0x4002bf, 2 bytes>
0x4002bf:	leave	
0x4002c0:	ret	
<Block for 0x4002ba, 5 bytes>
0x4002ba:	call	0x500060
<Block for 0x400163, 9 bytes>
0x400163:	cmp	eax, -1
0x400166:	je	0x40026a
<Block for 0x40026a, 3 bytes>
0x40026a:	nop	
0x40026b:	jmp	0x400271
<Block for 0x40016c, 18 bytes>
0x40016c:	mov	eax, dword ptr [rbp - 0x9c]
0x400172:	mov	esi, 5
0x400177:	mov	edi, eax
0x400179:	call	0x500030
<Block for 0x40017e, 9 bytes>
0x40017e:	cmp	eax, -1
0x400181:	je	0x40026d
<Block for 0x40026d, 3 bytes>
0x40026d:	nop	
0x40026e:	jmp	0x400271
<Block for 0x400187, 23 bytes>
0x400187:	mov	eax, dword ptr [rbp - 0x9c]
0x40018d:	mov	edx, 0
0x400192:	mov	esi, 0
0x400197:	mov	edi, eax
0x400199:	call	0x500038
<Block for 0x40019e, 19 bytes>
0x40019e:	mov	dword ptr [rbp - 0xa0], eax
0x4001a4:	cmp	dword ptr [rbp - 0xa0], -1
0x4001ab:	je	0x400270
<Block for 0x4001b1, 52 bytes>
0x4001b1:	mov	rax, qword ptr [rbp - 0x90]
0x4001b8:	mov	edx, 0x63
0x4001bd:	sub	edx, eax
0x4001bf:	mov	eax, edx
0x4001c1:	movsxd	rdx, eax
0x4001c4:	lea	rcx, [rbp - 0x70]
0x4001c8:	mov	rax, qword ptr [rbp - 0x90]
0x4001cf:	lea	rsi, [rcx + rax]
0x4001d3:	mov	eax, dword ptr [rbp - 0xa0]
0x4001d9:	mov	ecx, 0
0x4001de:	mov	edi, eax
0x4001e0:	call	0x500040
<Block for 0x400270, 1 bytes>
0x400270:	nop	
<Block for 0x4001e5, 15 bytes>
0x4001e5:	mov	dword ptr [rbp - 0x94], eax
0x4001eb:	cmp	dword ptr [rbp - 0x94], -1
0x4001f2:	je	0x400271
<Block for 0x4001f4, 9 bytes>
0x4001f4:	cmp	dword ptr [rbp - 0x94], 0
0x4001fb:	je	0x400271
<Block for 0x4001fd, 30 bytes>
0x4001fd:	mov	eax, dword ptr [rbp - 0x94]
0x400203:	cdqe	
0x400205:	mov	byte ptr [rbp + rax - 0x70], 0
0x40020a:	lea	rax, [rbp - 0x70]
0x40020e:	mov	esi, 0xd
0x400213:	mov	rdi, rax
0x400216:	call	0x500048
<Block for 0x40021b, 17 bytes>
0x40021b:	mov	qword ptr [rbp - 0x88], rax
0x400222:	cmp	qword ptr [rbp - 0x88], 0
0x40022a:	je	0x400236
<Block for 0x400236, 17 bytes>
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	esi, 0xa
0x40023f:	mov	rdi, rax
0x400242:	call	0x500048
<Block for 0x40022c, 27 bytes>
0x40022c:	mov	rax, qword ptr [rbp - 0x88]
0x400233:	mov	byte ptr [rax], 0
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	esi, 0xa
0x40023f:	mov	rdi, rax
0x400242:	call	0x500048
<Block for 0x400247, 17 bytes>
0x400247:	mov	qword ptr [rbp - 0x88], rax
0x40024e:	cmp	qword ptr [rbp - 0x88], 0
0x400256:	je	0x400271
<Block for 0x400258, 12 bytes>
0x400258:	mov	rax, qword ptr [rbp - 0x88]
0x40025f:	mov	byte ptr [rax], 0
0x400262:	jmp	0x400271
