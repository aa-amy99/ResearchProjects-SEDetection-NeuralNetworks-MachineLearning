<Block for 0x400539, 165 bytes>
0x400539:	endbr64	
0x40053d:	push	rbp
0x40053e:	mov	rbp, rsp
0x400541:	sub	rsp, 0xa0
0x400548:	mov	rax, qword ptr fs:[0x28]
0x400551:	mov	qword ptr [rbp - 8], rax
0x400555:	xor	eax, eax
0x400557:	mov	qword ptr [rbp - 0x70], 0
0x40055f:	mov	qword ptr [rbp - 0x68], 0
0x400567:	mov	qword ptr [rbp - 0x60], 0
0x40056f:	mov	qword ptr [rbp - 0x58], 0
0x400577:	mov	qword ptr [rbp - 0x50], 0
0x40057f:	mov	qword ptr [rbp - 0x48], 0
0x400587:	mov	qword ptr [rbp - 0x40], 0
0x40058f:	mov	qword ptr [rbp - 0x38], 0
0x400597:	mov	qword ptr [rbp - 0x30], 0
0x40059f:	mov	qword ptr [rbp - 0x28], 0
0x4005a7:	mov	qword ptr [rbp - 0x20], 0
0x4005af:	mov	qword ptr [rbp - 0x18], 0
0x4005b7:	mov	dword ptr [rbp - 0x10], 0
0x4005be:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4005c8:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4005d2:	lea	rax, [rbp - 0x70]
0x4005d6:	mov	rdi, rax
0x4005d9:	call	0x500000
<Block for 0x4005de, 27 bytes>
0x4005de:	mov	qword ptr [rbp - 0x90], rax
0x4005e5:	mov	edx, 6
0x4005ea:	mov	esi, 1
0x4005ef:	mov	edi, 2
0x4005f4:	call	0x500008
<Block for 0x4005f9, 19 bytes>
0x4005f9:	mov	dword ptr [rbp - 0x98], eax
0x4005ff:	cmp	dword ptr [rbp - 0x98], -1
0x400606:	je	0x400757
<Block for 0x400757, 3 bytes>
0x400757:	nop	
0x400758:	jmp	0x400761
<Block for 0x40060c, 22 bytes>
0x40060c:	lea	rax, [rbp - 0x80]
0x400610:	mov	edx, 0x10
0x400615:	mov	esi, 0
0x40061a:	mov	rdi, rax
0x40061d:	call	0x500018
<Block for 0x400761, 9 bytes>
0x400761:	cmp	dword ptr [rbp - 0x98], -1
0x400768:	je	0x400777
<Block for 0x400622, 23 bytes>
0x400622:	mov	word ptr [rbp - 0x80], 2
0x400628:	mov	dword ptr [rbp - 0x7c], 0
0x40062f:	mov	edi, 0x6987
0x400634:	call	0x500020
<Block for 0x400777, 9 bytes>
0x400777:	cmp	dword ptr [rbp - 0x9c], -1
0x40077e:	je	0x40078d
<Block for 0x40076a, 13 bytes>
0x40076a:	mov	eax, dword ptr [rbp - 0x98]
0x400770:	mov	edi, eax
0x400772:	call	0x500050
<Block for 0x400639, 29 bytes>
0x400639:	mov	word ptr [rbp - 0x7e], ax
0x40063d:	lea	rcx, [rbp - 0x80]
0x400641:	mov	eax, dword ptr [rbp - 0x98]
0x400647:	mov	edx, 0x10
0x40064c:	mov	rsi, rcx
0x40064f:	mov	edi, eax
0x400651:	call	0x500028
<Block for 0x40078d, 12 bytes>
0x40078d:	lea	rax, [rbp - 0x70]
0x400791:	mov	rdi, rax
0x400794:	call	0x500058
<Block for 0x400780, 13 bytes>
0x400780:	mov	eax, dword ptr [rbp - 0x9c]
0x400786:	mov	edi, eax
0x400788:	call	0x500050
<Block for 0x400656, 9 bytes>
0x400656:	cmp	eax, -1
0x400659:	je	0x40075a
<Block for 0x400799, 17 bytes>
0x400799:	nop	
0x40079a:	nop	
0x40079b:	mov	rax, qword ptr [rbp - 8]
0x40079f:	xor	rax, qword ptr fs:[0x28]
0x4007a8:	je	0x4007af
<Block for 0x40075a, 3 bytes>
0x40075a:	nop	
0x40075b:	jmp	0x400761
<Block for 0x40065f, 18 bytes>
0x40065f:	mov	eax, dword ptr [rbp - 0x98]
0x400665:	mov	esi, 5
0x40066a:	mov	edi, eax
0x40066c:	call	0x500030
<Block for 0x4007af, 2 bytes>
0x4007af:	leave	
0x4007b0:	ret	
<Block for 0x4007aa, 5 bytes>
0x4007aa:	call	0x500060
<Block for 0x400671, 9 bytes>
0x400671:	cmp	eax, -1
0x400674:	je	0x40075d
<Block for 0x40075d, 3 bytes>
0x40075d:	nop	
0x40075e:	jmp	0x400761
<Block for 0x40067a, 23 bytes>
0x40067a:	mov	eax, dword ptr [rbp - 0x98]
0x400680:	mov	edx, 0
0x400685:	mov	esi, 0
0x40068a:	mov	edi, eax
0x40068c:	call	0x500038
<Block for 0x400691, 19 bytes>
0x400691:	mov	dword ptr [rbp - 0x9c], eax
0x400697:	cmp	dword ptr [rbp - 0x9c], -1
0x40069e:	je	0x400760
<Block for 0x4006a4, 52 bytes>
0x4006a4:	mov	rax, qword ptr [rbp - 0x90]
0x4006ab:	mov	edx, 0x63
0x4006b0:	sub	edx, eax
0x4006b2:	mov	eax, edx
0x4006b4:	movsxd	rdx, eax
0x4006b7:	lea	rcx, [rbp - 0x70]
0x4006bb:	mov	rax, qword ptr [rbp - 0x90]
0x4006c2:	lea	rsi, [rcx + rax]
0x4006c6:	mov	eax, dword ptr [rbp - 0x9c]
0x4006cc:	mov	ecx, 0
0x4006d1:	mov	edi, eax
0x4006d3:	call	0x500040
<Block for 0x400760, 1 bytes>
0x400760:	nop	
<Block for 0x4006d8, 15 bytes>
0x4006d8:	mov	dword ptr [rbp - 0x94], eax
0x4006de:	cmp	dword ptr [rbp - 0x94], -1
0x4006e5:	je	0x400761
<Block for 0x4006e7, 9 bytes>
0x4006e7:	cmp	dword ptr [rbp - 0x94], 0
0x4006ee:	je	0x400761
<Block for 0x4006f0, 30 bytes>
0x4006f0:	mov	eax, dword ptr [rbp - 0x94]
0x4006f6:	cdqe	
0x4006f8:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006fd:	lea	rax, [rbp - 0x70]
0x400701:	mov	esi, 0xd
0x400706:	mov	rdi, rax
0x400709:	call	0x500048
<Block for 0x40070e, 17 bytes>
0x40070e:	mov	qword ptr [rbp - 0x88], rax
0x400715:	cmp	qword ptr [rbp - 0x88], 0
0x40071d:	je	0x400729
<Block for 0x400729, 17 bytes>
0x400729:	lea	rax, [rbp - 0x70]
0x40072d:	mov	esi, 0xa
0x400732:	mov	rdi, rax
0x400735:	call	0x500048
<Block for 0x40071f, 27 bytes>
0x40071f:	mov	rax, qword ptr [rbp - 0x88]
0x400726:	mov	byte ptr [rax], 0
0x400729:	lea	rax, [rbp - 0x70]
0x40072d:	mov	esi, 0xa
0x400732:	mov	rdi, rax
0x400735:	call	0x500048
<Block for 0x40073a, 17 bytes>
0x40073a:	mov	qword ptr [rbp - 0x88], rax
0x400741:	cmp	qword ptr [rbp - 0x88], 0
0x400749:	je	0x400761
<Block for 0x40074b, 12 bytes>
0x40074b:	mov	rax, qword ptr [rbp - 0x88]
0x400752:	mov	byte ptr [rax], 0
0x400755:	jmp	0x400761
