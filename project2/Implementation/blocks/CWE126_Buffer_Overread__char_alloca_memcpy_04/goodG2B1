<Block for 0x4001e4, 84 bytes>
0x4001e4:	endbr64	
0x4001e8:	push	rbp
0x4001e9:	mov	rbp, rsp
0x4001ec:	sub	rsp, 0x90
0x4001f3:	mov	rax, qword ptr fs:[0x28]
0x4001fc:	mov	qword ptr [rbp - 8], rax
0x400200:	xor	eax, eax
0x400202:	mov	eax, 0x10
0x400207:	sub	rax, 1
0x40020b:	add	rax, 0x3a
0x40020f:	mov	ecx, 0x10
0x400214:	mov	edx, 0
0x400219:	div	rcx
0x40021c:	imul	rax, rax, 0x10
0x400220:	mov	rdx, rax
0x400223:	and	rdx, 0xfffffffffffff000
0x40022a:	mov	rcx, rsp
0x40022d:	sub	rcx, rdx
0x400230:	mov	rdx, rcx
0x400233:	cmp	rsp, rdx
0x400236:	je	0x40024a
<Block for 0x40024a, 26 bytes>
0x40024a:	mov	rdx, rax
0x40024d:	and	edx, 0xfff
0x400253:	sub	rsp, rdx
0x400256:	mov	rdx, rax
0x400259:	and	edx, 0xfff
0x40025f:	test	rdx, rdx
0x400262:	je	0x400274
<Block for 0x400238, 18 bytes>
0x400238:	sub	rsp, 0x1000
0x40023f:	or	qword ptr [rsp + 0xff8], 0
0x400248:	jmp	0x400233
<Block for 0x400274, 73 bytes>
0x400274:	mov	rax, rsp
0x400277:	add	rax, 0xf
0x40027b:	shr	rax, 4
0x40027f:	shl	rax, 4
0x400283:	mov	qword ptr [rbp - 0x80], rax
0x400287:	mov	eax, 0x10
0x40028c:	sub	rax, 1
0x400290:	add	rax, 0x6c
0x400294:	mov	ecx, 0x10
0x400299:	mov	edx, 0
0x40029e:	div	rcx
0x4002a1:	imul	rax, rax, 0x10
0x4002a5:	mov	rdx, rax
0x4002a8:	and	rdx, 0xfffffffffffff000
0x4002af:	mov	rsi, rsp
0x4002b2:	sub	rsi, rdx
0x4002b5:	mov	rdx, rsi
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400264, 89 bytes>
0x400264:	and	eax, 0xfff
0x400269:	sub	rax, 8
0x40026d:	add	rax, rsp
0x400270:	or	qword ptr [rax], 0
0x400274:	mov	rax, rsp
0x400277:	add	rax, 0xf
0x40027b:	shr	rax, 4
0x40027f:	shl	rax, 4
0x400283:	mov	qword ptr [rbp - 0x80], rax
0x400287:	mov	eax, 0x10
0x40028c:	sub	rax, 1
0x400290:	add	rax, 0x6c
0x400294:	mov	ecx, 0x10
0x400299:	mov	edx, 0
0x40029e:	div	rcx
0x4002a1:	imul	rax, rax, 0x10
0x4002a5:	mov	rdx, rax
0x4002a8:	and	rdx, 0xfffffffffffff000
0x4002af:	mov	rsi, rsp
0x4002b2:	sub	rsi, rdx
0x4002b5:	mov	rdx, rsi
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400233, 5 bytes>
0x400233:	cmp	rsp, rdx
0x400236:	je	0x40024a
<Block for 0x4002cf, 26 bytes>
0x4002cf:	mov	rdx, rax
0x4002d2:	and	edx, 0xfff
0x4002d8:	sub	rsp, rdx
0x4002db:	mov	rdx, rax
0x4002de:	and	edx, 0xfff
0x4002e4:	test	rdx, rdx
0x4002e7:	je	0x4002f9
<Block for 0x4002bd, 18 bytes>
0x4002bd:	sub	rsp, 0x1000
0x4002c4:	or	qword ptr [rsp + 0xff8], 0
0x4002cd:	jmp	0x4002b8
<Block for 0x4002f9, 41 bytes>
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x78], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x80]
0x400310:	mov	edx, 0x31
0x400315:	mov	esi, 0x41
0x40031a:	mov	rdi, rax
0x40031d:	call	0x500000
<Block for 0x4002e9, 57 bytes>
0x4002e9:	and	eax, 0xfff
0x4002ee:	sub	rax, 8
0x4002f2:	add	rax, rsp
0x4002f5:	or	qword ptr [rax], 0
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x78], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x80]
0x400310:	mov	edx, 0x31
0x400315:	mov	esi, 0x41
0x40031a:	mov	rdi, rax
0x40031d:	call	0x500000
<Block for 0x4002b8, 5 bytes>
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400322, 33 bytes>
0x400322:	mov	rax, qword ptr [rbp - 0x80]
0x400326:	add	rax, 0x31
0x40032a:	mov	byte ptr [rax], 0
0x40032d:	mov	rax, qword ptr [rbp - 0x78]
0x400331:	mov	edx, 0x63
0x400336:	mov	esi, 0x41
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500000
<Block for 0x400343, 20 bytes>
0x400343:	mov	rax, qword ptr [rbp - 0x78]
0x400347:	add	rax, 0x63
0x40034b:	mov	byte ptr [rax], 0
0x40034e:	mov	eax, 0
0x400353:	test	eax, eax
0x400355:	je	0x400365
<Block for 0x400365, 33 bytes>
0x400365:	mov	rax, qword ptr [rbp - 0x78]
0x400369:	mov	qword ptr [rbp - 0x88], rax
0x400370:	lea	rax, [rbp - 0x70]
0x400374:	mov	edx, 0x63
0x400379:	mov	esi, 0x43
0x40037e:	mov	rdi, rax
0x400381:	call	0x500000
<Block for 0x400357, 12 bytes>
0x400357:	lea	rdi, [rip + 0x286]
0x40035e:	call	0x500018
<Block for 0x400386, 16 bytes>
0x400386:	mov	byte ptr [rbp - 0xd], 0
0x40038a:	lea	rax, [rbp - 0x70]
0x40038e:	mov	rdi, rax
0x400391:	call	0x500008
<Block for 0x400363, 2 bytes>
0x400363:	jmp	0x400370
<Block for 0x400396, 25 bytes>
0x400396:	mov	rdx, rax
0x400399:	mov	rcx, qword ptr [rbp - 0x88]
0x4003a0:	lea	rax, [rbp - 0x70]
0x4003a4:	mov	rsi, rcx
0x4003a7:	mov	rdi, rax
0x4003aa:	call	0x500010
<Block for 0x400370, 22 bytes>
0x400370:	lea	rax, [rbp - 0x70]
0x400374:	mov	edx, 0x63
0x400379:	mov	esi, 0x43
0x40037e:	mov	rdi, rax
0x400381:	call	0x500000
<Block for 0x4003af, 16 bytes>
0x4003af:	mov	byte ptr [rbp - 0xd], 0
0x4003b3:	lea	rax, [rbp - 0x70]
0x4003b7:	mov	rdi, rax
0x4003ba:	call	0x500018
<Block for 0x4003bf, 16 bytes>
0x4003bf:	nop	
0x4003c0:	mov	rax, qword ptr [rbp - 8]
0x4003c4:	xor	rax, qword ptr fs:[0x28]
0x4003cd:	je	0x4003d4
<Block for 0x4003d4, 2 bytes>
0x4003d4:	leave	
0x4003d5:	ret	
<Block for 0x4003cf, 5 bytes>
0x4003cf:	call	0x500020
