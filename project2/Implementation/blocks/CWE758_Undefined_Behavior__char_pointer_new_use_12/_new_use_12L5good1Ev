<Block for 0x4000ab, 17 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x30
0x4000b7:	call	0x500000
<Block for 0x4000bc, 9 bytes>
0x4000bc:	test	eax, eax
0x4000be:	setne	al
0x4000c1:	test	al, al
0x4000c3:	je	0x400118
<Block for 0x400118, 21 bytes>
0x400118:	lea	rax, [rip + 0x5d]
0x40011f:	mov	qword ptr [rbp - 0x30], rax
0x400123:	mov	edi, 8
0x400128:	call	0x500008
<Block for 0x4000c5, 21 bytes>
0x4000c5:	lea	rax, [rip + 0xb0]
0x4000cc:	mov	qword ptr [rbp - 0x18], rax
0x4000d0:	mov	edi, 8
0x4000d5:	call	0x500008
<Block for 0x40012d, 38 bytes>
0x40012d:	mov	qword ptr [rbp - 0x28], rax
0x400131:	mov	rax, qword ptr [rbp - 0x28]
0x400135:	mov	rdx, qword ptr [rbp - 0x30]
0x400139:	mov	qword ptr [rax], rdx
0x40013c:	mov	rax, qword ptr [rbp - 0x28]
0x400140:	mov	rax, qword ptr [rax]
0x400143:	mov	qword ptr [rbp - 0x20], rax
0x400147:	mov	rax, qword ptr [rbp - 0x20]
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500018
<Block for 0x4000da, 38 bytes>
0x4000da:	mov	qword ptr [rbp - 0x10], rax
0x4000de:	mov	rax, qword ptr [rbp - 0x10]
0x4000e2:	mov	rdx, qword ptr [rbp - 0x18]
0x4000e6:	mov	qword ptr [rax], rdx
0x4000e9:	mov	rax, qword ptr [rbp - 0x10]
0x4000ed:	mov	rax, qword ptr [rax]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500018
<Block for 0x400153, 9 bytes>
0x400153:	mov	rax, qword ptr [rbp - 0x28]
0x400157:	test	rax, rax
0x40015a:	je	0x400169
<Block for 0x400100, 9 bytes>
0x400100:	mov	rax, qword ptr [rbp - 0x10]
0x400104:	test	rax, rax
0x400107:	je	0x400169
<Block for 0x400169, 3 bytes>
0x400169:	nop	
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x40015c, 13 bytes>
0x40015c:	mov	esi, 8
0x400161:	mov	rdi, rax
0x400164:	call	0x500010
<Block for 0x400109, 13 bytes>
0x400109:	mov	esi, 8
0x40010e:	mov	rdi, rax
0x400111:	call	0x500010
<Block for 0x400116, 2 bytes>
0x400116:	jmp	0x400169
