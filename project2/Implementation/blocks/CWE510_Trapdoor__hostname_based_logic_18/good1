<Block for 0x400237, 66 bytes>
0x400237:	endbr64	
0x40023b:	push	rbp
0x40023c:	mov	rbp, rsp
0x40023f:	sub	rsp, 0x30
0x400243:	mov	rax, qword ptr fs:[0x28]
0x40024c:	mov	qword ptr [rbp - 8], rax
0x400250:	xor	eax, eax
0x400252:	nop	
0x400253:	endbr64	
0x400257:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40025e:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400265:	mov	edx, 6
0x40026a:	mov	esi, 1
0x40026f:	mov	edi, 2
0x400274:	call	0x500000
<Block for 0x400279, 13 bytes>
0x400279:	mov	dword ptr [rbp - 0x24], eax
0x40027c:	cmp	dword ptr [rbp - 0x24], -1
0x400280:	je	0x400332
<Block for 0x400332, 3 bytes>
0x400332:	nop	
0x400333:	jmp	0x40033c
<Block for 0x400286, 22 bytes>
0x400286:	lea	rax, [rbp - 0x20]
0x40028a:	mov	edx, 0x10
0x40028f:	mov	esi, 0
0x400294:	mov	rdi, rax
0x400297:	call	0x500008
<Block for 0x40033c, 6 bytes>
0x40033c:	cmp	dword ptr [rbp - 0x24], -1
0x400340:	je	0x40034c
<Block for 0x40029c, 23 bytes>
0x40029c:	mov	word ptr [rbp - 0x20], 2
0x4002a2:	mov	dword ptr [rbp - 0x1c], 0
0x4002a9:	mov	edi, 0x4e20
0x4002ae:	call	0x500010
<Block for 0x40034c, 6 bytes>
0x40034c:	cmp	dword ptr [rbp - 0x28], -1
0x400350:	je	0x40035c
<Block for 0x400342, 10 bytes>
0x400342:	mov	eax, dword ptr [rbp - 0x24]
0x400345:	mov	edi, eax
0x400347:	call	0x500058
<Block for 0x4002b3, 26 bytes>
0x4002b3:	mov	word ptr [rbp - 0x1e], ax
0x4002b7:	lea	rcx, [rbp - 0x20]
0x4002bb:	mov	eax, dword ptr [rbp - 0x24]
0x4002be:	mov	edx, 0x10
0x4002c3:	mov	rsi, rcx
0x4002c6:	mov	edi, eax
0x4002c8:	call	0x500018
<Block for 0x40035c, 16 bytes>
0x40035c:	nop	
0x40035d:	mov	rax, qword ptr [rbp - 8]
0x400361:	xor	rax, qword ptr fs:[0x28]
0x40036a:	je	0x400371
<Block for 0x400352, 10 bytes>
0x400352:	mov	eax, dword ptr [rbp - 0x28]
0x400355:	mov	edi, eax
0x400357:	call	0x500058
<Block for 0x4002cd, 5 bytes>
0x4002cd:	cmp	eax, -1
0x4002d0:	je	0x400335
<Block for 0x400371, 2 bytes>
0x400371:	leave	
0x400372:	ret	
<Block for 0x40036c, 5 bytes>
0x40036c:	call	0x500060
<Block for 0x400335, 3 bytes>
0x400335:	nop	
0x400336:	jmp	0x40033c
<Block for 0x4002d2, 15 bytes>
0x4002d2:	mov	eax, dword ptr [rbp - 0x24]
0x4002d5:	mov	esi, 5
0x4002da:	mov	edi, eax
0x4002dc:	call	0x500020
<Block for 0x4002e1, 5 bytes>
0x4002e1:	cmp	eax, -1
0x4002e4:	je	0x400338
<Block for 0x400338, 3 bytes>
0x400338:	nop	
0x400339:	jmp	0x40033c
<Block for 0x4002e6, 20 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x24]
0x4002e9:	mov	edx, 0
0x4002ee:	mov	esi, 0
0x4002f3:	mov	edi, eax
0x4002f5:	call	0x500028
<Block for 0x4002fa, 9 bytes>
0x4002fa:	mov	dword ptr [rbp - 0x28], eax
0x4002fd:	cmp	dword ptr [rbp - 0x28], -1
0x400301:	je	0x40033b
<Block for 0x400303, 27 bytes>
0x400303:	mov	eax, dword ptr [rbp - 0x28]
0x400306:	mov	ecx, 0
0x40030b:	mov	edx, 8
0x400310:	lea	rsi, [rip + 0x92]
0x400317:	mov	edi, eax
0x400319:	call	0x500048
<Block for 0x40033b, 1 bytes>
0x40033b:	nop	
<Block for 0x40031e, 6 bytes>
0x40031e:	cmp	rax, -1
0x400322:	jne	0x40033c
<Block for 0x400324, 12 bytes>
0x400324:	lea	rdi, [rip + 0x87]
0x40032b:	call	0x500050
<Block for 0x400330, 2 bytes>
0x400330:	jmp	0x40033c
