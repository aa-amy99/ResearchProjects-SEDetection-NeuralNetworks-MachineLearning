<Block for 0x40006d, 21 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x10
0x400079:	mov	dword ptr [rbp - 0xc], 0
0x400080:	jmp	0x4000d0
<Block for 0x4000d0, 6 bytes>
0x4000d0:	cmp	dword ptr [rbp - 0xc], 0
0x4000d4:	jle	0x400082
<Block for 0x400082, 18 bytes>
0x400082:	mov	qword ptr [rbp - 8], 0
0x40008a:	mov	edi, 4
0x40008f:	call	0x500000
<Block for 0x4000d6, 4 bytes>
0x4000d6:	nop	
0x4000d7:	nop	
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x400094, 11 bytes>
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	cmp	qword ptr [rbp - 8], 0
0x40009d:	jne	0x4000a9
<Block for 0x40009f, 10 bytes>
0x40009f:	mov	edi, 0xffffffff
0x4000a4:	call	0x500008
<Block for 0x4000a9, 23 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	mov	dword ptr [rax], 6
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	mov	eax, dword ptr [rax]
0x4000b9:	mov	edi, eax
0x4000bb:	call	0x500010
<Block for 0x4000c0, 12 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500018
<Block for 0x4000cc, 10 bytes>
0x4000cc:	add	dword ptr [rbp - 0xc], 1
0x4000d0:	cmp	dword ptr [rbp - 0xc], 0
0x4000d4:	jle	0x400082
