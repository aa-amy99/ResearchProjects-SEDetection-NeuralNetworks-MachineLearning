<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x4000ae
<Block for 0x4000ae, 3 bytes>
0x4000ae:	nop	
0x4000af:	leave	
0x4000b0:	ret	
<Block for 0x400038, 15 bytes>
0x400038:	mov	esi, 0
0x40003d:	mov	edi, 0
0x400042:	call	0x500000
<Block for 0x400047, 11 bytes>
0x400047:	mov	qword ptr [rbp - 8], rax
0x40004b:	cmp	qword ptr [rbp - 8], 0
0x400050:	jne	0x40005c
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 1
0x400057:	call	0x500008
<Block for 0x40005c, 12 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 8]
0x400060:	mov	rdi, rax
0x400063:	call	0x500010
<Block for 0x400068, 27 bytes>
0x400068:	mov	rax, qword ptr [rbp - 8]
0x40006c:	mov	edx, 0x180
0x400071:	mov	esi, 0x42
0x400076:	mov	rdi, rax
0x400079:	mov	eax, 0
0x40007e:	call	0x500018
<Block for 0x400083, 9 bytes>
0x400083:	mov	dword ptr [rbp - 0xc], eax
0x400086:	cmp	dword ptr [rbp - 0xc], -1
0x40008a:	je	0x4000a2
<Block for 0x4000a2, 12 bytes>
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500028
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0x175]
0x400093:	call	0x500010
<Block for 0x400098, 10 bytes>
0x400098:	mov	eax, dword ptr [rbp - 0xc]
0x40009b:	mov	edi, eax
0x40009d:	call	0x500020
