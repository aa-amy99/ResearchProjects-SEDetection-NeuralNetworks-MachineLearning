<Block for 0x400081, 57 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x30
0x40008d:	mov	qword ptr [rbp - 0x28], rdi
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	mov	dword ptr [rbp - 0x14], 2
0x4000a7:	lea	rdx, [rbp - 0x14]
0x4000ab:	mov	rax, qword ptr [rbp - 0x28]
0x4000af:	mov	rsi, rdx
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x40016a
<Block for 0x4000ba, 14 bytes>
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 0x10], rax
0x4000c1:	cmp	qword ptr [rbp - 0x10], 0
0x4000c6:	je	0x4000d4
<Block for 0x4000d4, 19 bytes>
0x4000d4:	lea	rsi, [rip + 0x66]
0x4000db:	lea	rdi, [rip + 0x74]
0x4000e2:	call	0x500000
<Block for 0x4000c8, 12 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 0x10]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500008
<Block for 0x4000e7, 11 bytes>
0x4000e7:	mov	qword ptr [rbp - 0x10], rax
0x4000eb:	cmp	qword ptr [rbp - 0x10], 0
0x4000f0:	je	0x4000fe
<Block for 0x4000fe, 16 bytes>
0x4000fe:	nop	
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	xor	rax, qword ptr fs:[0x28]
0x40010c:	je	0x400113
<Block for 0x4000f2, 12 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x10]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500008
<Block for 0x400113, 2 bytes>
0x400113:	leave	
0x400114:	ret	
<Block for 0x40010e, 5 bytes>
0x40010e:	call	0x500010
