<Block for 0x4001b0, 55 bytes>
0x4001b0:	endbr64	
0x4001b4:	push	rbp
0x4001b5:	mov	rbp, rsp
0x4001b8:	sub	rsp, 0xf0
0x4001bf:	mov	rax, qword ptr fs:[0x28]
0x4001c8:	mov	qword ptr [rbp - 8], rax
0x4001cc:	xor	eax, eax
0x4001ce:	lea	rax, [rbp - 0xe0]
0x4001d5:	mov	edx, 0x63
0x4001da:	mov	esi, 0x41
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500000
<Block for 0x4001e7, 14 bytes>
0x4001e7:	mov	byte ptr [rbp - 0x7d], 0
0x4001eb:	mov	eax, 0
0x4001f0:	call	0x400000
<Block for 0x4001f5, 4 bytes>
0x4001f5:	test	eax, eax
0x4001f7:	je	0x400207
<Block for 0x400207, 22 bytes>
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x4001f9, 36 bytes>
0x4001f9:	lea	rax, [rbp - 0xe0]
0x400200:	mov	qword ptr [rbp - 0xe8], rax
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x40021d, 31 bytes>
0x40021d:	mov	byte ptr [rbp - 0xd], 0
0x400221:	lea	rcx, [rbp - 0x70]
0x400225:	mov	rax, qword ptr [rbp - 0xe8]
0x40022c:	mov	edx, 0x64
0x400231:	mov	rsi, rcx
0x400234:	mov	rdi, rax
0x400237:	call	0x500008
<Block for 0x40023c, 29 bytes>
0x40023c:	mov	rax, qword ptr [rbp - 0xe8]
0x400243:	add	rax, 0x63
0x400247:	mov	byte ptr [rax], 0
0x40024a:	mov	rax, qword ptr [rbp - 0xe8]
0x400251:	mov	rdi, rax
0x400254:	call	0x500010
<Block for 0x400259, 16 bytes>
0x400259:	nop	
0x40025a:	mov	rax, qword ptr [rbp - 8]
0x40025e:	xor	rax, qword ptr fs:[0x28]
0x400267:	je	0x40026e
<Block for 0x40026e, 2 bytes>
0x40026e:	leave	
0x40026f:	ret	
<Block for 0x400269, 5 bytes>
0x400269:	call	0x500018
