<Block for 0x400069, 65 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x20
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	qword ptr [rbp - 0x12], 0
0x40008c:	mov	word ptr [rbp - 0xa], 0
0x400092:	mov	rdx, qword ptr [rip + 0xfff7f]
0x400099:	lea	rax, [rbp - 0x12]
0x40009d:	mov	esi, 0xa
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500020
<Block for 0x4000aa, 5 bytes>
0x4000aa:	test	rax, rax
0x4000ad:	jne	0x4000bf
<Block for 0x4000af, 12 bytes>
0x4000af:	lea	rdi, [rip + 0x8c]
0x4000b6:	call	0x500008
<Block for 0x4000bf, 12 bytes>
0x4000bf:	lea	rax, [rbp - 0x12]
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500028
<Block for 0x4000bb, 16 bytes>
0x4000bb:	mov	byte ptr [rbp - 0x12], 0
0x4000bf:	lea	rax, [rbp - 0x12]
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500028
<Block for 0x4000cb, 9 bytes>
0x4000cb:	mov	dword ptr [rbp - 0x18], eax
0x4000ce:	cmp	dword ptr [rbp - 0x18], 0
0x4000d2:	jle	0x4000e1
<Block for 0x4000e1, 19 bytes>
0x4000e1:	lea	rax, [rbp - 0x12]
0x4000e5:	lea	rsi, [rip + 0x44]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000d4, 32 bytes>
0x4000d4:	mov	eax, dword ptr [rbp - 0x18]
0x4000d7:	sub	eax, 1
0x4000da:	cdqe	
0x4000dc:	mov	byte ptr [rbp + rax - 0x12], 0
0x4000e1:	lea	rax, [rbp - 0x12]
0x4000e5:	lea	rsi, [rip + 0x44]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000f4, 4 bytes>
0x4000f4:	test	eax, eax
0x4000f6:	jne	0x400104
<Block for 0x4000f8, 12 bytes>
0x4000f8:	lea	rdi, [rip + 0x53]
0x4000ff:	call	0x500008
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500010
