<Block for 0x400214, 53 bytes>
0x400214:	endbr64	
0x400218:	push	rbp
0x400219:	mov	rbp, rsp
0x40021c:	add	rsp, -0x80
0x400220:	mov	qword ptr [rbp - 0x78], rdi
0x400224:	mov	rax, qword ptr fs:[0x28]
0x40022d:	mov	qword ptr [rbp - 8], rax
0x400231:	xor	eax, eax
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500000
<Block for 0x400249, 16 bytes>
0x400249:	mov	byte ptr [rbp - 0xd], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	rdi, rax
0x400254:	call	0x500008
<Block for 0x400259, 22 bytes>
0x400259:	mov	rdx, rax
0x40025c:	mov	rcx, qword ptr [rbp - 0x78]
0x400260:	lea	rax, [rbp - 0x70]
0x400264:	mov	rsi, rcx
0x400267:	mov	rdi, rax
0x40026a:	call	0x500010
<Block for 0x40026f, 16 bytes>
0x40026f:	mov	byte ptr [rbp - 0xd], 0
0x400273:	lea	rax, [rbp - 0x70]
0x400277:	mov	rdi, rax
0x40027a:	call	0x500018
<Block for 0x40027f, 16 bytes>
0x40027f:	nop	
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	xor	rax, qword ptr fs:[0x28]
0x40028d:	je	0x400294
<Block for 0x400294, 2 bytes>
0x400294:	leave	
0x400295:	ret	
<Block for 0x40028f, 5 bytes>
0x40028f:	call	0x500020
