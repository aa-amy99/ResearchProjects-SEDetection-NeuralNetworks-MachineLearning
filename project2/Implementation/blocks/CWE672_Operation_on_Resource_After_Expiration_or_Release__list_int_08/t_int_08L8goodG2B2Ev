<Block for 0x400649, 40 bytes>
0x400649:	endbr64	
0x40064d:	push	rbp
0x40064e:	mov	rbp, rsp
0x400651:	push	rbx
0x400652:	sub	rsp, 0x38
0x400656:	mov	rax, qword ptr fs:[0x28]
0x40065f:	mov	qword ptr [rbp - 0x18], rax
0x400663:	xor	eax, eax
0x400665:	lea	rax, [rbp - 0x30]
0x400669:	mov	rdi, rax
0x40066c:	call	0x40093e
<Block for 0x400671, 5 bytes>
0x400671:	call	0x400000
<Block for 0x400676, 9 bytes>
0x400676:	test	eax, eax
0x400678:	setne	al
0x40067b:	test	al, al
0x40067d:	je	0x4006b3
<Block for 0x4006b3, 5 bytes>
0x4006b3:	call	0x400000
<Block for 0x40067f, 26 bytes>
0x40067f:	mov	dword ptr [rbp - 0x38], 0x64
0x400686:	lea	rdx, [rbp - 0x38]
0x40068a:	lea	rax, [rbp - 0x30]
0x40068e:	mov	rsi, rdx
0x400691:	mov	rdi, rax
0x400694:	call	0x400a44
<Block for 0x4006b8, 13 bytes>
0x4006b8:	test	eax, eax
0x4006ba:	setne	al
0x4006bd:	test	al, al
0x4006bf:	je	0x400798
<Block for 0x400699, 26 bytes>
0x400699:	mov	dword ptr [rbp - 0x38], 0xc8
0x4006a0:	lea	rdx, [rbp - 0x38]
0x4006a4:	lea	rax, [rbp - 0x30]
0x4006a8:	mov	rsi, rdx
0x4006ab:	mov	rdi, rax
0x4006ae:	call	0x400a44
<Block for 0x400798, 12 bytes>
0x400798:	lea	rax, [rbp - 0x30]
0x40079c:	mov	rdi, rax
0x40079f:	call	0x40095e
<Block for 0x4006c5, 12 bytes>
0x4006c5:	lea	rax, [rbp - 0x40]
0x4006c9:	mov	rdi, rax
0x4006cc:	call	0x400a92
<Block for 0x4007a4, 16 bytes>
0x4007a4:	nop	
0x4007a5:	mov	rax, qword ptr [rbp - 0x18]
0x4007a9:	xor	rax, qword ptr fs:[0x28]
0x4007b2:	je	0x4007d9
<Block for 0x4006d1, 19 bytes>
0x4006d1:	lea	rsi, [rip + 0x1a5]
0x4006d8:	lea	rdi, [rip + 0xff921]
0x4006df:	call	0x500008
<Block for 0x4007d9, 7 bytes>
0x4007d9:	add	rsp, 0x38
0x4007dd:	pop	rbx
0x4007de:	pop	rbp
0x4007df:	ret	
<Block for 0x4007b4, 2 bytes>
0x4007b4:	jmp	0x4007d4
<Block for 0x4006e4, 12 bytes>
0x4006e4:	lea	rax, [rbp - 0x30]
0x4006e8:	mov	rdi, rax
0x4006eb:	call	0x400aac
<Block for 0x4007d4, 5 bytes>
0x4007d4:	call	0x500038
<Block for 0x4006f0, 16 bytes>
0x4006f0:	mov	qword ptr [rbp - 0x40], rax
0x4006f4:	lea	rax, [rbp - 0x30]
0x4006f8:	mov	rdi, rax
0x4006fb:	call	0x400afc
<Block for 0x400700, 23 bytes>
0x400700:	mov	qword ptr [rbp - 0x38], rax
0x400704:	lea	rdx, [rbp - 0x38]
0x400708:	lea	rax, [rbp - 0x40]
0x40070c:	mov	rsi, rdx
0x40070f:	mov	rdi, rax
0x400712:	call	0x400b48
<Block for 0x400717, 4 bytes>
0x400717:	test	al, al
0x400719:	je	0x400782
<Block for 0x400782, 22 bytes>
0x400782:	mov	rax, qword ptr [rip + 0xff897]
0x400789:	mov	rsi, rax
0x40078c:	lea	rdi, [rip + 0xff86d]
0x400793:	call	0x500028
<Block for 0x40071b, 12 bytes>
0x40071b:	lea	rax, [rbp - 0x40]
0x40071f:	mov	rdi, rax
0x400722:	call	0x400bc6
<Block for 0x400727, 11 bytes>
0x400727:	mov	eax, dword ptr [rax]
0x400729:	test	eax, eax
0x40072b:	sete	al
0x40072e:	test	al, al
0x400730:	je	0x40073e
<Block for 0x40073e, 19 bytes>
0x40073e:	lea	rsi, [rip + 0x14c]
0x400745:	lea	rdi, [rip + 0xff8b4]
0x40074c:	call	0x500008
<Block for 0x400732, 12 bytes>
0x400732:	lea	rax, [rbp - 0x30]
0x400736:	mov	rdi, rax
0x400739:	call	0x400be8
<Block for 0x400751, 15 bytes>
0x400751:	mov	rbx, rax
0x400754:	lea	rax, [rbp - 0x40]
0x400758:	mov	rdi, rax
0x40075b:	call	0x400bc6
<Block for 0x400760, 12 bytes>
0x400760:	mov	eax, dword ptr [rax]
0x400762:	mov	esi, eax
0x400764:	mov	rdi, rbx
0x400767:	call	0x500010
<Block for 0x40076c, 17 bytes>
0x40076c:	lea	rax, [rbp - 0x40]
0x400770:	mov	esi, 0
0x400775:	mov	rdi, rax
0x400778:	call	0x400b6e
<Block for 0x40077d, 5 bytes>
0x40077d:	jmp	0x4006f4
<Block for 0x4006f4, 12 bytes>
0x4006f4:	lea	rax, [rbp - 0x30]
0x4006f8:	mov	rdi, rax
0x4006fb:	call	0x400afc
