<Block for 0x400333, 40 bytes>
0x400333:	endbr64	
0x400337:	push	rbp
0x400338:	mov	rbp, rsp
0x40033b:	push	rbx
0x40033c:	sub	rsp, 0x38
0x400340:	mov	rax, qword ptr fs:[0x28]
0x400349:	mov	qword ptr [rbp - 0x18], rax
0x40034d:	xor	eax, eax
0x40034f:	lea	rax, [rbp - 0x30]
0x400353:	mov	rdi, rax
0x400356:	call	0x40093e
<Block for 0x40035b, 5 bytes>
0x40035b:	call	0x400000
<Block for 0x400360, 9 bytes>
0x400360:	test	eax, eax
0x400362:	setne	al
0x400365:	test	al, al
0x400367:	je	0x40039d
<Block for 0x40039d, 5 bytes>
0x40039d:	call	0x400000
<Block for 0x400369, 26 bytes>
0x400369:	mov	dword ptr [rbp - 0x38], 0x64
0x400370:	lea	rdx, [rbp - 0x38]
0x400374:	lea	rax, [rbp - 0x30]
0x400378:	mov	rsi, rdx
0x40037b:	mov	rdi, rax
0x40037e:	call	0x400a44
<Block for 0x4003a2, 13 bytes>
0x4003a2:	test	eax, eax
0x4003a4:	setne	al
0x4003a7:	test	al, al
0x4003a9:	je	0x40045c
<Block for 0x400383, 26 bytes>
0x400383:	mov	dword ptr [rbp - 0x38], 0
0x40038a:	lea	rdx, [rbp - 0x38]
0x40038e:	lea	rax, [rbp - 0x30]
0x400392:	mov	rsi, rdx
0x400395:	mov	rdi, rax
0x400398:	call	0x400a44
<Block for 0x40045c, 12 bytes>
0x40045c:	lea	rax, [rbp - 0x30]
0x400460:	mov	rdi, rax
0x400463:	call	0x40095e
<Block for 0x4003af, 12 bytes>
0x4003af:	lea	rax, [rbp - 0x40]
0x4003b3:	mov	rdi, rax
0x4003b6:	call	0x400a92
<Block for 0x400468, 16 bytes>
0x400468:	nop	
0x400469:	mov	rax, qword ptr [rbp - 0x18]
0x40046d:	xor	rax, qword ptr fs:[0x28]
0x400476:	je	0x40049d
<Block for 0x4003bb, 19 bytes>
0x4003bb:	lea	rsi, [rip + 0x4bb]
0x4003c2:	lea	rdi, [rip + 0xffc37]
0x4003c9:	call	0x500008
<Block for 0x40049d, 7 bytes>
0x40049d:	add	rsp, 0x38
0x4004a1:	pop	rbx
0x4004a2:	pop	rbp
0x4004a3:	ret	
<Block for 0x400478, 2 bytes>
0x400478:	jmp	0x400498
<Block for 0x4003ce, 12 bytes>
0x4003ce:	lea	rax, [rbp - 0x30]
0x4003d2:	mov	rdi, rax
0x4003d5:	call	0x400aac
<Block for 0x400498, 5 bytes>
0x400498:	call	0x500038
<Block for 0x4003da, 16 bytes>
0x4003da:	mov	qword ptr [rbp - 0x40], rax
0x4003de:	lea	rax, [rbp - 0x30]
0x4003e2:	mov	rdi, rax
0x4003e5:	call	0x400afc
<Block for 0x4003ea, 23 bytes>
0x4003ea:	mov	qword ptr [rbp - 0x38], rax
0x4003ee:	lea	rdx, [rbp - 0x38]
0x4003f2:	lea	rax, [rbp - 0x40]
0x4003f6:	mov	rsi, rdx
0x4003f9:	mov	rdi, rax
0x4003fc:	call	0x400b48
<Block for 0x400401, 4 bytes>
0x400401:	test	al, al
0x400403:	je	0x400446
<Block for 0x400446, 22 bytes>
0x400446:	mov	rax, qword ptr [rip + 0xffbd3]
0x40044d:	mov	rsi, rax
0x400450:	lea	rdi, [rip + 0xffba9]
0x400457:	call	0x500028
<Block for 0x400405, 19 bytes>
0x400405:	lea	rsi, [rip + 0x485]
0x40040c:	lea	rdi, [rip + 0xffbed]
0x400413:	call	0x500008
<Block for 0x400418, 15 bytes>
0x400418:	mov	rbx, rax
0x40041b:	lea	rax, [rbp - 0x40]
0x40041f:	mov	rdi, rax
0x400422:	call	0x400bc6
<Block for 0x400427, 12 bytes>
0x400427:	mov	eax, dword ptr [rax]
0x400429:	mov	esi, eax
0x40042b:	mov	rdi, rbx
0x40042e:	call	0x500010
<Block for 0x400433, 17 bytes>
0x400433:	lea	rax, [rbp - 0x40]
0x400437:	mov	esi, 0
0x40043c:	mov	rdi, rax
0x40043f:	call	0x400b6e
<Block for 0x400444, 2 bytes>
0x400444:	jmp	0x4003de
<Block for 0x4003de, 12 bytes>
0x4003de:	lea	rax, [rbp - 0x30]
0x4003e2:	mov	rdi, rax
0x4003e5:	call	0x400afc
