<Block for 0x4004a4, 40 bytes>
0x4004a4:	endbr64	
0x4004a8:	push	rbp
0x4004a9:	mov	rbp, rsp
0x4004ac:	push	rbx
0x4004ad:	sub	rsp, 0x38
0x4004b1:	mov	rax, qword ptr fs:[0x28]
0x4004ba:	mov	qword ptr [rbp - 0x18], rax
0x4004be:	xor	eax, eax
0x4004c0:	lea	rax, [rbp - 0x30]
0x4004c4:	mov	rdi, rax
0x4004c7:	call	0x40093e
<Block for 0x4004cc, 5 bytes>
0x4004cc:	call	0x40000f
<Block for 0x4004d1, 9 bytes>
0x4004d1:	test	eax, eax
0x4004d3:	setne	al
0x4004d6:	test	al, al
0x4004d8:	je	0x4004e8
<Block for 0x4004e8, 26 bytes>
0x4004e8:	mov	dword ptr [rbp - 0x38], 0x64
0x4004ef:	lea	rdx, [rbp - 0x38]
0x4004f3:	lea	rax, [rbp - 0x30]
0x4004f7:	mov	rsi, rdx
0x4004fa:	mov	rdi, rax
0x4004fd:	call	0x400a44
<Block for 0x4004da, 12 bytes>
0x4004da:	lea	rdi, [rip + 0x3b2]
0x4004e1:	call	0x500040
<Block for 0x400502, 26 bytes>
0x400502:	mov	dword ptr [rbp - 0x38], 0xc8
0x400509:	lea	rdx, [rbp - 0x38]
0x40050d:	lea	rax, [rbp - 0x30]
0x400511:	mov	rsi, rdx
0x400514:	mov	rdi, rax
0x400517:	call	0x400a44
<Block for 0x4004e6, 2 bytes>
0x4004e6:	jmp	0x40051c
<Block for 0x40051c, 5 bytes>
0x40051c:	call	0x400000
<Block for 0x400521, 13 bytes>
0x400521:	test	eax, eax
0x400523:	setne	al
0x400526:	test	al, al
0x400528:	je	0x400601
<Block for 0x400601, 12 bytes>
0x400601:	lea	rax, [rbp - 0x30]
0x400605:	mov	rdi, rax
0x400608:	call	0x40095e
<Block for 0x40052e, 12 bytes>
0x40052e:	lea	rax, [rbp - 0x40]
0x400532:	mov	rdi, rax
0x400535:	call	0x400a92
<Block for 0x40060d, 16 bytes>
0x40060d:	nop	
0x40060e:	mov	rax, qword ptr [rbp - 0x18]
0x400612:	xor	rax, qword ptr fs:[0x28]
0x40061b:	je	0x400642
<Block for 0x40053a, 19 bytes>
0x40053a:	lea	rsi, [rip + 0x33c]
0x400541:	lea	rdi, [rip + 0xffab8]
0x400548:	call	0x500008
<Block for 0x400642, 7 bytes>
0x400642:	add	rsp, 0x38
0x400646:	pop	rbx
0x400647:	pop	rbp
0x400648:	ret	
<Block for 0x40061d, 2 bytes>
0x40061d:	jmp	0x40063d
<Block for 0x40054d, 12 bytes>
0x40054d:	lea	rax, [rbp - 0x30]
0x400551:	mov	rdi, rax
0x400554:	call	0x400aac
<Block for 0x40063d, 5 bytes>
0x40063d:	call	0x500038
<Block for 0x400559, 16 bytes>
0x400559:	mov	qword ptr [rbp - 0x40], rax
0x40055d:	lea	rax, [rbp - 0x30]
0x400561:	mov	rdi, rax
0x400564:	call	0x400afc
<Block for 0x400569, 23 bytes>
0x400569:	mov	qword ptr [rbp - 0x38], rax
0x40056d:	lea	rdx, [rbp - 0x38]
0x400571:	lea	rax, [rbp - 0x40]
0x400575:	mov	rsi, rdx
0x400578:	mov	rdi, rax
0x40057b:	call	0x400b48
<Block for 0x400580, 4 bytes>
0x400580:	test	al, al
0x400582:	je	0x4005eb
<Block for 0x4005eb, 22 bytes>
0x4005eb:	mov	rax, qword ptr [rip + 0xffa2e]
0x4005f2:	mov	rsi, rax
0x4005f5:	lea	rdi, [rip + 0xffa04]
0x4005fc:	call	0x500028
<Block for 0x400584, 12 bytes>
0x400584:	lea	rax, [rbp - 0x40]
0x400588:	mov	rdi, rax
0x40058b:	call	0x400bc6
<Block for 0x400590, 11 bytes>
0x400590:	mov	eax, dword ptr [rax]
0x400592:	test	eax, eax
0x400594:	sete	al
0x400597:	test	al, al
0x400599:	je	0x4005a7
<Block for 0x4005a7, 19 bytes>
0x4005a7:	lea	rsi, [rip + 0x2e3]
0x4005ae:	lea	rdi, [rip + 0xffa4b]
0x4005b5:	call	0x500008
<Block for 0x40059b, 12 bytes>
0x40059b:	lea	rax, [rbp - 0x30]
0x40059f:	mov	rdi, rax
0x4005a2:	call	0x400be8
<Block for 0x4005ba, 15 bytes>
0x4005ba:	mov	rbx, rax
0x4005bd:	lea	rax, [rbp - 0x40]
0x4005c1:	mov	rdi, rax
0x4005c4:	call	0x400bc6
<Block for 0x4005c9, 12 bytes>
0x4005c9:	mov	eax, dword ptr [rax]
0x4005cb:	mov	esi, eax
0x4005cd:	mov	rdi, rbx
0x4005d0:	call	0x500010
<Block for 0x4005d5, 17 bytes>
0x4005d5:	lea	rax, [rbp - 0x40]
0x4005d9:	mov	esi, 0
0x4005de:	mov	rdi, rax
0x4005e1:	call	0x400b6e
<Block for 0x4005e6, 5 bytes>
0x4005e6:	jmp	0x40055d
<Block for 0x40055d, 12 bytes>
0x40055d:	lea	rax, [rbp - 0x30]
0x400561:	mov	rdi, rax
0x400564:	call	0x400afc
