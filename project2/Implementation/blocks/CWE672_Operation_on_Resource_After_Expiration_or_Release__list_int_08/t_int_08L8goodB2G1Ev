<Block for 0x4001b5, 40 bytes>
0x4001b5:	endbr64	
0x4001b9:	push	rbp
0x4001ba:	mov	rbp, rsp
0x4001bd:	push	rbx
0x4001be:	sub	rsp, 0x38
0x4001c2:	mov	rax, qword ptr fs:[0x28]
0x4001cb:	mov	qword ptr [rbp - 0x18], rax
0x4001cf:	xor	eax, eax
0x4001d1:	lea	rax, [rbp - 0x30]
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x40093e
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x400000
<Block for 0x4001e2, 9 bytes>
0x4001e2:	test	eax, eax
0x4001e4:	setne	al
0x4001e7:	test	al, al
0x4001e9:	je	0x40021f
<Block for 0x40021f, 5 bytes>
0x40021f:	call	0x40000f
<Block for 0x4001eb, 26 bytes>
0x4001eb:	mov	dword ptr [rbp - 0x38], 0x64
0x4001f2:	lea	rdx, [rbp - 0x38]
0x4001f6:	lea	rax, [rbp - 0x30]
0x4001fa:	mov	rsi, rdx
0x4001fd:	mov	rdi, rax
0x400200:	call	0x400a44
<Block for 0x400224, 9 bytes>
0x400224:	test	eax, eax
0x400226:	setne	al
0x400229:	test	al, al
0x40022b:	je	0x40023e
<Block for 0x400205, 26 bytes>
0x400205:	mov	dword ptr [rbp - 0x38], 0
0x40020c:	lea	rdx, [rbp - 0x38]
0x400210:	lea	rax, [rbp - 0x30]
0x400214:	mov	rsi, rdx
0x400217:	mov	rdi, rax
0x40021a:	call	0x400a44
<Block for 0x40023e, 12 bytes>
0x40023e:	lea	rax, [rbp - 0x40]
0x400242:	mov	rdi, rax
0x400245:	call	0x400a92
<Block for 0x40022d, 12 bytes>
0x40022d:	lea	rdi, [rip + 0x65f]
0x400234:	call	0x500040
<Block for 0x40024a, 19 bytes>
0x40024a:	lea	rsi, [rip + 0x62c]
0x400251:	lea	rdi, [rip + 0xffda8]
0x400258:	call	0x500008
<Block for 0x400239, 5 bytes>
0x400239:	jmp	0x4002eb
<Block for 0x40025d, 12 bytes>
0x40025d:	lea	rax, [rbp - 0x30]
0x400261:	mov	rdi, rax
0x400264:	call	0x400aac
<Block for 0x4002eb, 12 bytes>
0x4002eb:	lea	rax, [rbp - 0x30]
0x4002ef:	mov	rdi, rax
0x4002f2:	call	0x40095e
<Block for 0x400269, 16 bytes>
0x400269:	mov	qword ptr [rbp - 0x40], rax
0x40026d:	lea	rax, [rbp - 0x30]
0x400271:	mov	rdi, rax
0x400274:	call	0x400afc
<Block for 0x4002f7, 16 bytes>
0x4002f7:	nop	
0x4002f8:	mov	rax, qword ptr [rbp - 0x18]
0x4002fc:	xor	rax, qword ptr fs:[0x28]
0x400305:	je	0x40032c
<Block for 0x400279, 23 bytes>
0x400279:	mov	qword ptr [rbp - 0x38], rax
0x40027d:	lea	rdx, [rbp - 0x38]
0x400281:	lea	rax, [rbp - 0x40]
0x400285:	mov	rsi, rdx
0x400288:	mov	rdi, rax
0x40028b:	call	0x400b48
<Block for 0x40032c, 7 bytes>
0x40032c:	add	rsp, 0x38
0x400330:	pop	rbx
0x400331:	pop	rbp
0x400332:	ret	
<Block for 0x400307, 2 bytes>
0x400307:	jmp	0x400327
<Block for 0x400290, 4 bytes>
0x400290:	test	al, al
0x400292:	je	0x4002d5
<Block for 0x400327, 5 bytes>
0x400327:	call	0x500038
<Block for 0x4002d5, 22 bytes>
0x4002d5:	mov	rax, qword ptr [rip + 0xffd44]
0x4002dc:	mov	rsi, rax
0x4002df:	lea	rdi, [rip + 0xffd1a]
0x4002e6:	call	0x500028
<Block for 0x400294, 19 bytes>
0x400294:	lea	rsi, [rip + 0x5f6]
0x40029b:	lea	rdi, [rip + 0xffd5e]
0x4002a2:	call	0x500008
<Block for 0x4002a7, 15 bytes>
0x4002a7:	mov	rbx, rax
0x4002aa:	lea	rax, [rbp - 0x40]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x400bc6
<Block for 0x4002b6, 12 bytes>
0x4002b6:	mov	eax, dword ptr [rax]
0x4002b8:	mov	esi, eax
0x4002ba:	mov	rdi, rbx
0x4002bd:	call	0x500010
<Block for 0x4002c2, 17 bytes>
0x4002c2:	lea	rax, [rbp - 0x40]
0x4002c6:	mov	esi, 0
0x4002cb:	mov	rdi, rax
0x4002ce:	call	0x400b6e
<Block for 0x4002d3, 2 bytes>
0x4002d3:	jmp	0x40026d
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rax, [rbp - 0x30]
0x400271:	mov	rdi, rax
0x400274:	call	0x400afc
