<Block for 0x40030b, 31 bytes>
0x40030b:	endbr64	
0x40030f:	push	rbp
0x400310:	mov	rbp, rsp
0x400313:	push	r13
0x400315:	push	r12
0x400317:	push	rbx
0x400318:	sub	rsp, 0x18
0x40031c:	mov	eax, dword ptr [rip + 0xffcde]
0x400322:	test	eax, eax
0x400324:	je	0x40047f
<Block for 0x40047f, 11 bytes>
0x40047f:	add	rsp, 0x18
0x400483:	pop	rbx
0x400484:	pop	r12
0x400486:	pop	r13
0x400488:	pop	rbp
0x400489:	ret	
<Block for 0x40032a, 5 bytes>
0x40032a:	call	0x500008
<Block for 0x40032f, 12 bytes>
0x40032f:	and	eax, 1
0x400332:	test	eax, eax
0x400334:	sete	al
0x400337:	test	al, al
0x400339:	je	0x400370
<Block for 0x400370, 5 bytes>
0x400370:	call	0x500008
<Block for 0x40033b, 10 bytes>
0x40033b:	mov	edi, 0x10
0x400340:	call	0x500010
<Block for 0x400375, 12 bytes>
0x400375:	and	eax, 1
0x400378:	test	eax, eax
0x40037a:	sete	al
0x40037d:	test	al, al
0x40037f:	je	0x4003b6
<Block for 0x400345, 18 bytes>
0x400345:	mov	rbx, rax
0x400348:	lea	rsi, [rip + 0x151]
0x40034f:	mov	rdi, rbx
0x400352:	call	0x500018
<Block for 0x4003b6, 12 bytes>
0x4003b6:	lea	rdi, [rip + 0xed]
0x4003bd:	call	0x500060
<Block for 0x400381, 10 bytes>
0x400381:	mov	edi, 0x10
0x400386:	call	0x500010
<Block for 0x400357, 25 bytes>
0x400357:	mov	rax, qword ptr [rip + 0xffcca]
0x40035e:	mov	rdx, rax
0x400361:	lea	rsi, [rip + 0xffcc8]
0x400368:	mov	rdi, rbx
0x40036b:	call	0x500038
<Block for 0x4003c2, 5 bytes>
0x4003c2:	jmp	0x40047f
<Block for 0x40038b, 18 bytes>
0x40038b:	mov	rbx, rax
0x40038e:	lea	rsi, [rip + 0x110]
0x400395:	mov	rdi, rbx
0x400398:	call	0x500040
<Block for 0x40039d, 25 bytes>
0x40039d:	mov	rax, qword ptr [rip + 0xffcac]
0x4003a4:	mov	rdx, rax
0x4003a7:	lea	rsi, [rip + 0xffcaa]
0x4003ae:	mov	rdi, rbx
0x4003b1:	call	0x500038
