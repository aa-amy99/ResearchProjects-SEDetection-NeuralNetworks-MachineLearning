<Block for 0x4001c0, 158 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	sub	rsp, 0xa0
0x4001cf:	mov	rax, qword ptr fs:[0x28]
0x4001d8:	mov	qword ptr [rbp - 8], rax
0x4001dc:	xor	eax, eax
0x4001de:	mov	qword ptr [rbp - 0x70], 0
0x4001e6:	mov	qword ptr [rbp - 0x68], 0
0x4001ee:	mov	qword ptr [rbp - 0x60], 0
0x4001f6:	mov	qword ptr [rbp - 0x58], 0
0x4001fe:	mov	qword ptr [rbp - 0x50], 0
0x400206:	mov	qword ptr [rbp - 0x48], 0
0x40020e:	mov	qword ptr [rbp - 0x40], 0
0x400216:	mov	qword ptr [rbp - 0x38], 0
0x40021e:	mov	qword ptr [rbp - 0x30], 0
0x400226:	mov	qword ptr [rbp - 0x28], 0
0x40022e:	mov	qword ptr [rbp - 0x20], 0
0x400236:	mov	qword ptr [rbp - 0x18], 0
0x40023e:	mov	dword ptr [rbp - 0x10], 0
0x400245:	lea	rax, [rbp - 0x70]
0x400249:	mov	qword ptr [rbp - 0x88], rax
0x400250:	mov	eax, 5
0x400255:	cmp	eax, 5
0x400258:	jne	0x4002f9
<Block for 0x40025e, 15 bytes>
0x40025e:	mov	rax, qword ptr [rbp - 0x88]
0x400265:	mov	rdi, rax
0x400268:	call	0x500000
<Block for 0x4002f9, 10 bytes>
0x4002f9:	mov	eax, 5
0x4002fe:	cmp	eax, 5
0x400301:	je	0x400311
<Block for 0x40026d, 19 bytes>
0x40026d:	mov	qword ptr [rbp - 0x80], rax
0x400271:	mov	eax, 0x64
0x400276:	sub	rax, qword ptr [rbp - 0x80]
0x40027a:	cmp	rax, 1
0x40027e:	jbe	0x4002f9
<Block for 0x400311, 34 bytes>
0x400311:	lea	rdx, [rbp - 0x94]
0x400318:	mov	rax, qword ptr [rbp - 0x88]
0x40031f:	lea	rsi, [rip + 0x4d5]
0x400326:	mov	rdi, rax
0x400329:	mov	eax, 0
0x40032e:	call	0x500028
<Block for 0x400303, 12 bytes>
0x400303:	lea	rdi, [rip + 0x4f4]
0x40030a:	call	0x500018
<Block for 0x400280, 19 bytes>
0x400280:	lea	rsi, [rip + 0x555]
0x400287:	lea	rdi, [rip + 0x550]
0x40028e:	call	0x500008
<Block for 0x400333, 5 bytes>
0x400333:	cmp	eax, 1
0x400336:	jne	0x400384
<Block for 0x40030f, 2 bytes>
0x40030f:	jmp	0x400384
<Block for 0x400293, 11 bytes>
0x400293:	mov	qword ptr [rbp - 0x78], rax
0x400297:	cmp	qword ptr [rbp - 0x78], 0
0x40029c:	je	0x4002f9
<Block for 0x400338, 13 bytes>
0x400338:	mov	eax, dword ptr [rbp - 0x94]
0x40033e:	cmp	eax, 0x270f
0x400343:	jg	0x400384
<Block for 0x400384, 16 bytes>
0x400384:	nop	
0x400385:	mov	rax, qword ptr [rbp - 8]
0x400389:	xor	rax, qword ptr fs:[0x28]
0x400392:	je	0x400399
<Block for 0x40029e, 45 bytes>
0x40029e:	mov	rax, qword ptr [rbp - 0x80]
0x4002a2:	mov	edx, 0x64
0x4002a7:	sub	edx, eax
0x4002a9:	mov	eax, edx
0x4002ab:	mov	esi, eax
0x4002ad:	mov	rdx, qword ptr [rbp - 0x88]
0x4002b4:	mov	rax, qword ptr [rbp - 0x80]
0x4002b8:	lea	rcx, [rdx + rax]
0x4002bc:	mov	rax, qword ptr [rbp - 0x78]
0x4002c0:	mov	rdx, rax
0x4002c3:	mov	rdi, rcx
0x4002c6:	call	0x500010
<Block for 0x400345, 22 bytes>
0x400345:	mov	dword ptr [rbp - 0x8c], 0
0x40034f:	mov	dword ptr [rbp - 0x90], 0
0x400359:	jmp	0x400369
<Block for 0x400399, 2 bytes>
0x400399:	leave	
0x40039a:	ret	
<Block for 0x400394, 5 bytes>
0x400394:	call	0x500038
<Block for 0x4002cb, 5 bytes>
0x4002cb:	test	rax, rax
0x4002ce:	jne	0x4002ed
<Block for 0x400369, 14 bytes>
0x400369:	mov	eax, dword ptr [rbp - 0x94]
0x40036f:	cmp	dword ptr [rbp - 0x90], eax
0x400375:	jl	0x40035b
<Block for 0x4002d0, 12 bytes>
0x4002d0:	lea	rdi, [rip + 0x515]
0x4002d7:	call	0x500018
<Block for 0x4002ed, 12 bytes>
0x4002ed:	mov	rax, qword ptr [rbp - 0x78]
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x500020
<Block for 0x40035b, 28 bytes>
0x40035b:	add	dword ptr [rbp - 0x8c], 1
0x400362:	add	dword ptr [rbp - 0x90], 1
0x400369:	mov	eax, dword ptr [rbp - 0x94]
0x40036f:	cmp	dword ptr [rbp - 0x90], eax
0x400375:	jl	0x40035b
<Block for 0x400377, 13 bytes>
0x400377:	mov	eax, dword ptr [rbp - 0x8c]
0x40037d:	mov	edi, eax
0x40037f:	call	0x500030
<Block for 0x4002dc, 29 bytes>
0x4002dc:	mov	rdx, qword ptr [rbp - 0x88]
0x4002e3:	mov	rax, qword ptr [rbp - 0x80]
0x4002e7:	add	rax, rdx
0x4002ea:	mov	byte ptr [rax], 0
0x4002ed:	mov	rax, qword ptr [rbp - 0x78]
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x500020
