<Block for 0x400067, 17 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x20
0x400073:	call	0x500020
<Block for 0x400078, 9 bytes>
0x400078:	test	eax, eax
0x40007a:	setne	al
0x40007d:	test	al, al
0x40007f:	je	0x40008f
<Block for 0x40008f, 10 bytes>
0x40008f:	mov	edi, 8
0x400094:	call	0x500008
<Block for 0x400081, 12 bytes>
0x400081:	lea	rdi, [rip + 0x12c]
0x400088:	call	0x500028
<Block for 0x400099, 35 bytes>
0x400099:	mov	qword ptr [rbp - 0x18], rax
0x40009d:	mov	rax, qword ptr [rbp - 0x18]
0x4000a1:	mov	dword ptr [rax], 5
0x4000a7:	mov	rax, qword ptr [rbp - 0x18]
0x4000ab:	mov	dword ptr [rax + 4], 6
0x4000b2:	mov	edi, 8
0x4000b7:	call	0x500008
<Block for 0x40008d, 2 bytes>
0x40008d:	jmp	0x400107
<Block for 0x4000bc, 39 bytes>
0x4000bc:	mov	qword ptr [rbp - 0x10], rax
0x4000c0:	mov	rax, qword ptr [rbp - 0x10]
0x4000c4:	mov	rdx, qword ptr [rbp - 0x18]
0x4000c8:	mov	qword ptr [rax], rdx
0x4000cb:	mov	rax, qword ptr [rbp - 0x10]
0x4000cf:	mov	rax, qword ptr [rax]
0x4000d2:	mov	qword ptr [rbp - 8], rax
0x4000d6:	mov	rax, qword ptr [rbp - 8]
0x4000da:	mov	eax, dword ptr [rax]
0x4000dc:	mov	edi, eax
0x4000de:	call	0x500018
<Block for 0x400107, 3 bytes>
0x400107:	nop	
0x400108:	leave	
0x400109:	ret	
<Block for 0x4000e3, 14 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	mov	eax, dword ptr [rax + 4]
0x4000ea:	mov	edi, eax
0x4000ec:	call	0x500018
<Block for 0x4000f1, 9 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 0x10]
0x4000f5:	test	rax, rax
0x4000f8:	je	0x400107
<Block for 0x4000fa, 13 bytes>
0x4000fa:	mov	esi, 8
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500010
