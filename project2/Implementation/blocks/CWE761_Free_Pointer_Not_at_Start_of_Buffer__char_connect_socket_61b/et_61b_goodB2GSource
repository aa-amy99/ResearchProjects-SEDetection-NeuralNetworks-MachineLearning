<Block for 0x400172, 50 bytes>
0x400172:	endbr64	
0x400176:	push	rbp
0x400177:	mov	rbp, rsp
0x40017a:	sub	rsp, 0x50
0x40017e:	mov	qword ptr [rbp - 0x48], rdi
0x400182:	mov	rax, qword ptr fs:[0x28]
0x40018b:	mov	qword ptr [rbp - 8], rax
0x40018f:	xor	eax, eax
0x400191:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400198:	mov	rax, qword ptr [rbp - 0x48]
0x40019c:	mov	rdi, rax
0x40019f:	call	0x500000
<Block for 0x4001a4, 24 bytes>
0x4001a4:	mov	qword ptr [rbp - 0x30], rax
0x4001a8:	mov	edx, 6
0x4001ad:	mov	esi, 1
0x4001b2:	mov	edi, 2
0x4001b7:	call	0x500008
<Block for 0x4001bc, 13 bytes>
0x4001bc:	mov	dword ptr [rbp - 0x38], eax
0x4001bf:	cmp	dword ptr [rbp - 0x38], -1
0x4001c3:	je	0x4002b6
<Block for 0x4002b6, 3 bytes>
0x4002b6:	nop	
0x4002b7:	jmp	0x4002ba
<Block for 0x4001c9, 22 bytes>
0x4001c9:	lea	rax, [rbp - 0x20]
0x4001cd:	mov	edx, 0x10
0x4001d2:	mov	esi, 0
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x4002ba, 6 bytes>
0x4002ba:	cmp	dword ptr [rbp - 0x38], -1
0x4002be:	je	0x4002ca
<Block for 0x4001df, 18 bytes>
0x4001df:	mov	word ptr [rbp - 0x20], 2
0x4001e5:	lea	rdi, [rip + 0xf8]
0x4001ec:	call	0x500018
<Block for 0x4002ca, 19 bytes>
0x4002ca:	mov	rax, qword ptr [rbp - 0x48]
0x4002ce:	mov	rcx, qword ptr [rbp - 8]
0x4002d2:	xor	rcx, qword ptr fs:[0x28]
0x4002db:	je	0x4002e2
<Block for 0x4002c0, 10 bytes>
0x4002c0:	mov	eax, dword ptr [rbp - 0x38]
0x4002c3:	mov	edi, eax
0x4002c5:	call	0x500040
<Block for 0x4001f1, 13 bytes>
0x4001f1:	mov	dword ptr [rbp - 0x1c], eax
0x4001f4:	mov	edi, 0x6987
0x4001f9:	call	0x500020
<Block for 0x4002e2, 2 bytes>
0x4002e2:	leave	
0x4002e3:	ret	
<Block for 0x4002dd, 5 bytes>
0x4002dd:	call	0x500048
<Block for 0x4001fe, 26 bytes>
0x4001fe:	mov	word ptr [rbp - 0x1e], ax
0x400202:	lea	rcx, [rbp - 0x20]
0x400206:	mov	eax, dword ptr [rbp - 0x38]
0x400209:	mov	edx, 0x10
0x40020e:	mov	rsi, rcx
0x400211:	mov	edi, eax
0x400213:	call	0x500028
<Block for 0x400218, 9 bytes>
0x400218:	cmp	eax, -1
0x40021b:	je	0x4002b9
<Block for 0x400221, 39 bytes>
0x400221:	mov	eax, 0x63
0x400226:	sub	rax, qword ptr [rbp - 0x30]
0x40022a:	mov	rdx, rax
0x40022d:	mov	rcx, qword ptr [rbp - 0x48]
0x400231:	mov	rax, qword ptr [rbp - 0x30]
0x400235:	lea	rsi, [rcx + rax]
0x400239:	mov	eax, dword ptr [rbp - 0x38]
0x40023c:	mov	ecx, 0
0x400241:	mov	edi, eax
0x400243:	call	0x500030
<Block for 0x4002b9, 1 bytes>
0x4002b9:	nop	
<Block for 0x400248, 9 bytes>
0x400248:	mov	dword ptr [rbp - 0x34], eax
0x40024b:	cmp	dword ptr [rbp - 0x34], -1
0x40024f:	je	0x4002ba
<Block for 0x400251, 6 bytes>
0x400251:	cmp	dword ptr [rbp - 0x34], 0
0x400255:	je	0x4002ba
<Block for 0x400257, 40 bytes>
0x400257:	mov	eax, dword ptr [rbp - 0x34]
0x40025a:	movsxd	rdx, eax
0x40025d:	mov	rax, qword ptr [rbp - 0x30]
0x400261:	add	rdx, rax
0x400264:	mov	rax, qword ptr [rbp - 0x48]
0x400268:	add	rax, rdx
0x40026b:	mov	byte ptr [rax], 0
0x40026e:	mov	rax, qword ptr [rbp - 0x48]
0x400272:	mov	esi, 0xd
0x400277:	mov	rdi, rax
0x40027a:	call	0x500038
<Block for 0x40027f, 11 bytes>
0x40027f:	mov	qword ptr [rbp - 0x28], rax
0x400283:	cmp	qword ptr [rbp - 0x28], 0
0x400288:	je	0x400291
<Block for 0x400291, 17 bytes>
0x400291:	mov	rax, qword ptr [rbp - 0x48]
0x400295:	mov	esi, 0xa
0x40029a:	mov	rdi, rax
0x40029d:	call	0x500038
<Block for 0x40028a, 24 bytes>
0x40028a:	mov	rax, qword ptr [rbp - 0x28]
0x40028e:	mov	byte ptr [rax], 0
0x400291:	mov	rax, qword ptr [rbp - 0x48]
0x400295:	mov	esi, 0xa
0x40029a:	mov	rdi, rax
0x40029d:	call	0x500038
<Block for 0x4002a2, 11 bytes>
0x4002a2:	mov	qword ptr [rbp - 0x28], rax
0x4002a6:	cmp	qword ptr [rbp - 0x28], 0
0x4002ab:	je	0x4002ba
<Block for 0x4002ad, 9 bytes>
0x4002ad:	mov	rax, qword ptr [rbp - 0x28]
0x4002b1:	mov	byte ptr [rax], 0
0x4002b4:	jmp	0x4002ba
