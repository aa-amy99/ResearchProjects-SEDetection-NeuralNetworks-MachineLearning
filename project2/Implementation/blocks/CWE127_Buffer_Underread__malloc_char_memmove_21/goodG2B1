<Block for 0x400178, 57 bytes>
0x400178:	endbr64	
0x40017c:	push	rbp
0x40017d:	mov	rbp, rsp
0x400180:	add	rsp, -0x80
0x400184:	mov	rax, qword ptr fs:[0x28]
0x40018d:	mov	qword ptr [rbp - 8], rax
0x400191:	xor	eax, eax
0x400193:	mov	qword ptr [rbp - 0x78], 0
0x40019b:	mov	dword ptr [rip + 0x18b], 0
0x4001a5:	mov	rax, qword ptr [rbp - 0x78]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x400102
<Block for 0x4001b1, 26 bytes>
0x4001b1:	mov	qword ptr [rbp - 0x78], rax
0x4001b5:	lea	rax, [rbp - 0x70]
0x4001b9:	mov	edx, 0x63
0x4001be:	mov	esi, 0x43
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500010
<Block for 0x4001cb, 28 bytes>
0x4001cb:	mov	byte ptr [rbp - 0xd], 0
0x4001cf:	mov	rcx, qword ptr [rbp - 0x78]
0x4001d3:	lea	rax, [rbp - 0x70]
0x4001d7:	mov	edx, 0x64
0x4001dc:	mov	rsi, rcx
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500018
<Block for 0x4001e7, 16 bytes>
0x4001e7:	mov	byte ptr [rbp - 0xd], 0
0x4001eb:	lea	rax, [rbp - 0x70]
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500020
<Block for 0x4001f7, 16 bytes>
0x4001f7:	nop	
0x4001f8:	mov	rax, qword ptr [rbp - 8]
0x4001fc:	xor	rax, qword ptr fs:[0x28]
0x400205:	je	0x40020c
<Block for 0x40020c, 2 bytes>
0x40020c:	leave	
0x40020d:	ret	
<Block for 0x400207, 5 bytes>
0x400207:	call	0x500028
