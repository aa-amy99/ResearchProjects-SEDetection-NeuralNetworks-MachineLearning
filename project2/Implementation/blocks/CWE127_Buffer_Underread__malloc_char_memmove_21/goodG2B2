<Block for 0x400276, 57 bytes>
0x400276:	endbr64	
0x40027a:	push	rbp
0x40027b:	mov	rbp, rsp
0x40027e:	add	rsp, -0x80
0x400282:	mov	rax, qword ptr fs:[0x28]
0x40028b:	mov	qword ptr [rbp - 8], rax
0x40028f:	xor	eax, eax
0x400291:	mov	qword ptr [rbp - 0x78], 0
0x400299:	mov	dword ptr [rip + 0x91], 1
0x4002a3:	mov	rax, qword ptr [rbp - 0x78]
0x4002a7:	mov	rdi, rax
0x4002aa:	call	0x40020e
<Block for 0x4002af, 26 bytes>
0x4002af:	mov	qword ptr [rbp - 0x78], rax
0x4002b3:	lea	rax, [rbp - 0x70]
0x4002b7:	mov	edx, 0x63
0x4002bc:	mov	esi, 0x43
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x500010
<Block for 0x4002c9, 28 bytes>
0x4002c9:	mov	byte ptr [rbp - 0xd], 0
0x4002cd:	mov	rcx, qword ptr [rbp - 0x78]
0x4002d1:	lea	rax, [rbp - 0x70]
0x4002d5:	mov	edx, 0x64
0x4002da:	mov	rsi, rcx
0x4002dd:	mov	rdi, rax
0x4002e0:	call	0x500018
<Block for 0x4002e5, 16 bytes>
0x4002e5:	mov	byte ptr [rbp - 0xd], 0
0x4002e9:	lea	rax, [rbp - 0x70]
0x4002ed:	mov	rdi, rax
0x4002f0:	call	0x500020
<Block for 0x4002f5, 16 bytes>
0x4002f5:	nop	
0x4002f6:	mov	rax, qword ptr [rbp - 8]
0x4002fa:	xor	rax, qword ptr fs:[0x28]
0x400303:	je	0x40030a
<Block for 0x40030a, 2 bytes>
0x40030a:	leave	
0x40030b:	ret	
<Block for 0x400305, 5 bytes>
0x400305:	call	0x500028
