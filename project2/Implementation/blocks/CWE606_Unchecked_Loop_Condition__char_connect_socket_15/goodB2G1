<Block for 0x40029e, 169 bytes>
0x40029e:	endbr64	
0x4002a2:	push	rbp
0x4002a3:	mov	rbp, rsp
0x4002a6:	sub	rsp, 0xb0
0x4002ad:	mov	rax, qword ptr fs:[0x28]
0x4002b6:	mov	qword ptr [rbp - 8], rax
0x4002ba:	xor	eax, eax
0x4002bc:	mov	qword ptr [rbp - 0x70], 0
0x4002c4:	mov	qword ptr [rbp - 0x68], 0
0x4002cc:	mov	qword ptr [rbp - 0x60], 0
0x4002d4:	mov	qword ptr [rbp - 0x58], 0
0x4002dc:	mov	qword ptr [rbp - 0x50], 0
0x4002e4:	mov	qword ptr [rbp - 0x48], 0
0x4002ec:	mov	qword ptr [rbp - 0x40], 0
0x4002f4:	mov	qword ptr [rbp - 0x38], 0
0x4002fc:	mov	qword ptr [rbp - 0x30], 0
0x400304:	mov	qword ptr [rbp - 0x28], 0
0x40030c:	mov	qword ptr [rbp - 0x20], 0
0x400314:	mov	qword ptr [rbp - 0x18], 0
0x40031c:	mov	dword ptr [rbp - 0x10], 0
0x400323:	lea	rax, [rbp - 0x70]
0x400327:	mov	qword ptr [rbp - 0x98], rax
0x40032e:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400338:	mov	rax, qword ptr [rbp - 0x98]
0x40033f:	mov	rdi, rax
0x400342:	call	0x500000
<Block for 0x400347, 27 bytes>
0x400347:	mov	qword ptr [rbp - 0x90], rax
0x40034e:	mov	edx, 6
0x400353:	mov	esi, 1
0x400358:	mov	edi, 2
0x40035d:	call	0x500008
<Block for 0x400362, 19 bytes>
0x400362:	mov	dword ptr [rbp - 0xa0], eax
0x400368:	cmp	dword ptr [rbp - 0xa0], -1
0x40036f:	je	0x4004a3
<Block for 0x4004a3, 3 bytes>
0x4004a3:	nop	
0x4004a4:	jmp	0x4004a7
<Block for 0x400375, 22 bytes>
0x400375:	lea	rax, [rbp - 0x80]
0x400379:	mov	edx, 0x10
0x40037e:	mov	esi, 0
0x400383:	mov	rdi, rax
0x400386:	call	0x500010
<Block for 0x4004a7, 9 bytes>
0x4004a7:	cmp	dword ptr [rbp - 0xa0], -1
0x4004ae:	je	0x4004bd
<Block for 0x40038b, 18 bytes>
0x40038b:	mov	word ptr [rbp - 0x80], 2
0x400391:	lea	rdi, [rip + 0x697]
0x400398:	call	0x500018
<Block for 0x4004bd, 35 bytes>
0x4004bd:	nop	
0x4004be:	lea	rdx, [rbp - 0xac]
0x4004c5:	mov	rax, qword ptr [rbp - 0x98]
0x4004cc:	lea	rsi, [rip + 0x566]
0x4004d3:	mov	rdi, rax
0x4004d6:	mov	eax, 0
0x4004db:	call	0x500048
<Block for 0x4004b0, 13 bytes>
0x4004b0:	mov	eax, dword ptr [rbp - 0xa0]
0x4004b6:	mov	edi, eax
0x4004b8:	call	0x500040
<Block for 0x40039d, 13 bytes>
0x40039d:	mov	dword ptr [rbp - 0x7c], eax
0x4003a0:	mov	edi, 0x6987
0x4003a5:	call	0x500020
<Block for 0x4004e0, 5 bytes>
0x4004e0:	cmp	eax, 1
0x4004e3:	jne	0x400531
<Block for 0x4003aa, 29 bytes>
0x4003aa:	mov	word ptr [rbp - 0x7e], ax
0x4003ae:	lea	rcx, [rbp - 0x80]
0x4003b2:	mov	eax, dword ptr [rbp - 0xa0]
0x4003b8:	mov	edx, 0x10
0x4003bd:	mov	rsi, rcx
0x4003c0:	mov	edi, eax
0x4003c2:	call	0x500028
<Block for 0x4004e5, 13 bytes>
0x4004e5:	mov	eax, dword ptr [rbp - 0xac]
0x4004eb:	cmp	eax, 0x270f
0x4004f0:	jg	0x400531
<Block for 0x400531, 17 bytes>
0x400531:	nop	
0x400532:	nop	
0x400533:	mov	rax, qword ptr [rbp - 8]
0x400537:	xor	rax, qword ptr fs:[0x28]
0x400540:	je	0x400547
<Block for 0x4003c7, 9 bytes>
0x4003c7:	cmp	eax, -1
0x4003ca:	je	0x4004a6
<Block for 0x4004f2, 22 bytes>
0x4004f2:	mov	dword ptr [rbp - 0xa4], 0
0x4004fc:	mov	dword ptr [rbp - 0xa8], 0
0x400506:	jmp	0x400516
<Block for 0x400547, 2 bytes>
0x400547:	leave	
0x400548:	ret	
<Block for 0x400542, 5 bytes>
0x400542:	call	0x500058
<Block for 0x4003d0, 51 bytes>
0x4003d0:	mov	eax, 0x63
0x4003d5:	sub	rax, qword ptr [rbp - 0x90]
0x4003dc:	mov	rdx, rax
0x4003df:	mov	rcx, qword ptr [rbp - 0x98]
0x4003e6:	mov	rax, qword ptr [rbp - 0x90]
0x4003ed:	lea	rsi, [rcx + rax]
0x4003f1:	mov	eax, dword ptr [rbp - 0xa0]
0x4003f7:	mov	ecx, 0
0x4003fc:	mov	edi, eax
0x4003fe:	call	0x500030
<Block for 0x4004a6, 1 bytes>
0x4004a6:	nop	
<Block for 0x400516, 14 bytes>
0x400516:	mov	eax, dword ptr [rbp - 0xac]
0x40051c:	cmp	dword ptr [rbp - 0xa8], eax
0x400522:	jl	0x400508
<Block for 0x400403, 19 bytes>
0x400403:	mov	dword ptr [rbp - 0x9c], eax
0x400409:	cmp	dword ptr [rbp - 0x9c], -1
0x400410:	je	0x4004a7
<Block for 0x400508, 28 bytes>
0x400508:	add	dword ptr [rbp - 0xa4], 1
0x40050f:	add	dword ptr [rbp - 0xa8], 1
0x400516:	mov	eax, dword ptr [rbp - 0xac]
0x40051c:	cmp	dword ptr [rbp - 0xa8], eax
0x400522:	jl	0x400508
<Block for 0x400524, 13 bytes>
0x400524:	mov	eax, dword ptr [rbp - 0xa4]
0x40052a:	mov	edi, eax
0x40052c:	call	0x500050
<Block for 0x400416, 13 bytes>
0x400416:	cmp	dword ptr [rbp - 0x9c], 0
0x40041d:	je	0x4004a7
<Block for 0x400423, 52 bytes>
0x400423:	mov	eax, dword ptr [rbp - 0x9c]
0x400429:	movsxd	rdx, eax
0x40042c:	mov	rax, qword ptr [rbp - 0x90]
0x400433:	add	rdx, rax
0x400436:	mov	rax, qword ptr [rbp - 0x98]
0x40043d:	add	rax, rdx
0x400440:	mov	byte ptr [rax], 0
0x400443:	mov	rax, qword ptr [rbp - 0x98]
0x40044a:	mov	esi, 0xd
0x40044f:	mov	rdi, rax
0x400452:	call	0x500038
<Block for 0x400457, 17 bytes>
0x400457:	mov	qword ptr [rbp - 0x88], rax
0x40045e:	cmp	qword ptr [rbp - 0x88], 0
0x400466:	je	0x400472
<Block for 0x400472, 20 bytes>
0x400472:	mov	rax, qword ptr [rbp - 0x98]
0x400479:	mov	esi, 0xa
0x40047e:	mov	rdi, rax
0x400481:	call	0x500038
<Block for 0x400468, 30 bytes>
0x400468:	mov	rax, qword ptr [rbp - 0x88]
0x40046f:	mov	byte ptr [rax], 0
0x400472:	mov	rax, qword ptr [rbp - 0x98]
0x400479:	mov	esi, 0xa
0x40047e:	mov	rdi, rax
0x400481:	call	0x500038
<Block for 0x400486, 17 bytes>
0x400486:	mov	qword ptr [rbp - 0x88], rax
0x40048d:	cmp	qword ptr [rbp - 0x88], 0
0x400495:	je	0x4004a7
<Block for 0x400497, 12 bytes>
0x400497:	mov	rax, qword ptr [rbp - 0x88]
0x40049e:	mov	byte ptr [rax], 0
0x4004a1:	jmp	0x4004a7
