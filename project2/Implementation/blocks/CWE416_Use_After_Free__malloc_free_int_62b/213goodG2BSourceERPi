<Block for 0x40007a, 26 bytes>
0x40007a:	endbr64	
0x40007e:	push	rbp
0x40007f:	mov	rbp, rsp
0x400082:	sub	rsp, 0x20
0x400086:	mov	qword ptr [rbp - 0x18], rdi
0x40008a:	mov	edi, 0x190
0x40008f:	call	0x500000
<Block for 0x400094, 22 bytes>
0x400094:	mov	rdx, rax
0x400097:	mov	rax, qword ptr [rbp - 0x18]
0x40009b:	mov	qword ptr [rax], rdx
0x40009e:	mov	rax, qword ptr [rbp - 0x18]
0x4000a2:	mov	rax, qword ptr [rax]
0x4000a5:	test	rax, rax
0x4000a8:	jne	0x4000b4
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	edi, 0xffffffff
0x4000af:	call	0x500008
<Block for 0x4000b4, 15 bytes>
0x4000b4:	mov	qword ptr [rbp - 8], 0
0x4000bc:	cmp	qword ptr [rbp - 8], 0x63
0x4000c1:	ja	0x4000e2
<Block for 0x4000c3, 31 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x18]
0x4000c7:	mov	rax, qword ptr [rax]
0x4000ca:	mov	rdx, qword ptr [rbp - 8]
0x4000ce:	shl	rdx, 2
0x4000d2:	add	rax, rdx
0x4000d5:	mov	dword ptr [rax], 5
0x4000db:	add	qword ptr [rbp - 8], 1
0x4000e0:	jmp	0x4000bc
<Block for 0x4000e2, 3 bytes>
0x4000e2:	nop	
0x4000e3:	leave	
0x4000e4:	ret	
<Block for 0x4000bc, 7 bytes>
0x4000bc:	cmp	qword ptr [rbp - 8], 0x63
0x4000c1:	ja	0x4000e2
