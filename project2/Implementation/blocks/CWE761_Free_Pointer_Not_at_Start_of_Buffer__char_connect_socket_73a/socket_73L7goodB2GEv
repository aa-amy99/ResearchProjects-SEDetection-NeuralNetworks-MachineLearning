<Block for 0x400297, 43 bytes>
0x400297:	endbr64	
0x40029b:	push	rbp
0x40029c:	mov	rbp, rsp
0x40029f:	push	rbx
0x4002a0:	sub	rsp, 0x88
0x4002a7:	mov	rax, qword ptr fs:[0x28]
0x4002b0:	mov	qword ptr [rbp - 0x18], rax
0x4002b4:	xor	eax, eax
0x4002b6:	lea	rax, [rbp - 0x70]
0x4002ba:	mov	rdi, rax
0x4002bd:	call	0x4005f6
<Block for 0x4002c2, 10 bytes>
0x4002c2:	mov	edi, 0x64
0x4002c7:	call	0x500000
<Block for 0x4002cc, 19 bytes>
0x4002cc:	mov	qword ptr [rbp - 0x88], rax
0x4002d3:	mov	rax, qword ptr [rbp - 0x88]
0x4002da:	test	rax, rax
0x4002dd:	jne	0x4002e9
<Block for 0x4002df, 10 bytes>
0x4002df:	mov	edi, 0xffffffff
0x4002e4:	call	0x500008
<Block for 0x4002e9, 35 bytes>
0x4002e9:	mov	rax, qword ptr [rbp - 0x88]
0x4002f0:	mov	byte ptr [rax], 0
0x4002f3:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x4002fd:	mov	rax, qword ptr [rbp - 0x88]
0x400304:	mov	rdi, rax
0x400307:	call	0x500010
<Block for 0x40030c, 24 bytes>
0x40030c:	mov	qword ptr [rbp - 0x80], rax
0x400310:	mov	edx, 6
0x400315:	mov	esi, 1
0x40031a:	mov	edi, 2
0x40031f:	call	0x500018
<Block for 0x400324, 19 bytes>
0x400324:	mov	dword ptr [rbp - 0x90], eax
0x40032a:	cmp	dword ptr [rbp - 0x90], -1
0x400331:	je	0x400447
<Block for 0x400447, 3 bytes>
0x400447:	nop	
0x400448:	jmp	0x40044b
<Block for 0x400337, 22 bytes>
0x400337:	lea	rax, [rbp - 0x30]
0x40033b:	mov	edx, 0x10
0x400340:	mov	esi, 0
0x400345:	mov	rdi, rax
0x400348:	call	0x500020
<Block for 0x40044b, 9 bytes>
0x40044b:	cmp	dword ptr [rbp - 0x90], -1
0x400452:	je	0x400461
<Block for 0x40034d, 18 bytes>
0x40034d:	mov	word ptr [rbp - 0x30], 2
0x400353:	lea	rdi, [rip + 0x1fb]
0x40035a:	call	0x500028
<Block for 0x400461, 22 bytes>
0x400461:	lea	rdx, [rbp - 0x88]
0x400468:	lea	rax, [rbp - 0x70]
0x40046c:	mov	rsi, rdx
0x40046f:	mov	rdi, rax
0x400472:	call	0x4006f0
<Block for 0x400454, 13 bytes>
0x400454:	mov	eax, dword ptr [rbp - 0x90]
0x40045a:	mov	edi, eax
0x40045c:	call	0x500050
<Block for 0x40035f, 13 bytes>
0x40035f:	mov	dword ptr [rbp - 0x2c], eax
0x400362:	mov	edi, 0x6987
0x400367:	call	0x500030
<Block for 0x400477, 22 bytes>
0x400477:	lea	rdx, [rbp - 0x88]
0x40047e:	lea	rax, [rbp - 0x70]
0x400482:	mov	rsi, rdx
0x400485:	mov	rdi, rax
0x400488:	call	0x4006f0
<Block for 0x40036c, 29 bytes>
0x40036c:	mov	word ptr [rbp - 0x2e], ax
0x400370:	lea	rcx, [rbp - 0x30]
0x400374:	mov	eax, dword ptr [rbp - 0x90]
0x40037a:	mov	edx, 0x10
0x40037f:	mov	rsi, rcx
0x400382:	mov	edi, eax
0x400384:	call	0x500038
<Block for 0x40048d, 22 bytes>
0x40048d:	lea	rdx, [rbp - 0x88]
0x400494:	lea	rax, [rbp - 0x70]
0x400498:	mov	rsi, rdx
0x40049b:	mov	rdi, rax
0x40049e:	call	0x4006f0
<Block for 0x400389, 14 bytes>
0x400389:	cmp	eax, -1
0x40038c:	sete	al
0x40038f:	test	al, al
0x400391:	jne	0x40044a
<Block for 0x4004a3, 19 bytes>
0x4004a3:	lea	rdx, [rbp - 0x70]
0x4004a7:	lea	rax, [rbp - 0x50]
0x4004ab:	mov	rsi, rdx
0x4004ae:	mov	rdi, rax
0x4004b1:	call	0x40072a
<Block for 0x400397, 45 bytes>
0x400397:	mov	eax, 0x63
0x40039c:	sub	rax, qword ptr [rbp - 0x80]
0x4003a0:	mov	rdx, rax
0x4003a3:	mov	rcx, qword ptr [rbp - 0x88]
0x4003aa:	mov	rax, qword ptr [rbp - 0x80]
0x4003ae:	lea	rsi, [rcx + rax]
0x4003b2:	mov	eax, dword ptr [rbp - 0x90]
0x4003b8:	mov	ecx, 0
0x4003bd:	mov	edi, eax
0x4003bf:	call	0x500040
<Block for 0x40044a, 1 bytes>
0x40044a:	nop	
<Block for 0x4004b6, 12 bytes>
0x4004b6:	lea	rax, [rbp - 0x50]
0x4004ba:	mov	rdi, rax
0x4004bd:	call	0x500070
<Block for 0x4003c4, 15 bytes>
0x4003c4:	mov	dword ptr [rbp - 0x8c], eax
0x4003ca:	cmp	dword ptr [rbp - 0x8c], -1
0x4003d1:	je	0x40044b
<Block for 0x4004c2, 12 bytes>
0x4004c2:	lea	rax, [rbp - 0x50]
0x4004c6:	mov	rdi, rax
0x4004c9:	call	0x400616
<Block for 0x4003d3, 9 bytes>
0x4003d3:	cmp	dword ptr [rbp - 0x8c], 0
0x4003da:	je	0x40044b
<Block for 0x4004ce, 12 bytes>
0x4004ce:	lea	rax, [rbp - 0x70]
0x4004d2:	mov	rdi, rax
0x4004d5:	call	0x400616
<Block for 0x4003dc, 49 bytes>
0x4003dc:	mov	rax, qword ptr [rbp - 0x88]
0x4003e3:	mov	edx, dword ptr [rbp - 0x8c]
0x4003e9:	movsxd	rcx, edx
0x4003ec:	mov	rdx, qword ptr [rbp - 0x80]
0x4003f0:	add	rdx, rcx
0x4003f3:	add	rax, rdx
0x4003f6:	mov	byte ptr [rax], 0
0x4003f9:	mov	rax, qword ptr [rbp - 0x88]
0x400400:	mov	esi, 0xd
0x400405:	mov	rdi, rax
0x400408:	call	0x500048
<Block for 0x4004da, 16 bytes>
0x4004da:	nop	
0x4004db:	mov	rax, qword ptr [rbp - 0x18]
0x4004df:	xor	rax, qword ptr fs:[0x28]
0x4004e8:	je	0x400524
<Block for 0x40040d, 11 bytes>
0x40040d:	mov	qword ptr [rbp - 0x78], rax
0x400411:	cmp	qword ptr [rbp - 0x78], 0
0x400416:	je	0x40041f
<Block for 0x400524, 10 bytes>
0x400524:	add	rsp, 0x88
0x40052b:	pop	rbx
0x40052c:	pop	rbp
0x40052d:	ret	
<Block for 0x4004ea, 2 bytes>
0x4004ea:	jmp	0x40051f
<Block for 0x40041f, 20 bytes>
0x40041f:	mov	rax, qword ptr [rbp - 0x88]
0x400426:	mov	esi, 0xa
0x40042b:	mov	rdi, rax
0x40042e:	call	0x500048
<Block for 0x400418, 27 bytes>
0x400418:	mov	rax, qword ptr [rbp - 0x78]
0x40041c:	mov	byte ptr [rax], 0
0x40041f:	mov	rax, qword ptr [rbp - 0x88]
0x400426:	mov	esi, 0xa
0x40042b:	mov	rdi, rax
0x40042e:	call	0x500048
<Block for 0x40051f, 5 bytes>
0x40051f:	call	0x500068
<Block for 0x400433, 11 bytes>
0x400433:	mov	qword ptr [rbp - 0x78], rax
0x400437:	cmp	qword ptr [rbp - 0x78], 0
0x40043c:	je	0x40044b
<Block for 0x40043e, 9 bytes>
0x40043e:	mov	rax, qword ptr [rbp - 0x78]
0x400442:	mov	byte ptr [rax], 0
0x400445:	jmp	0x40044b
