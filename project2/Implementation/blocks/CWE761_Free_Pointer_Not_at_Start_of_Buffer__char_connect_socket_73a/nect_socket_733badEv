<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x70]
0x400023:	mov	rdi, rax
0x400026:	call	0x4005f6
<Block for 0x40002b, 10 bytes>
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 19 bytes>
0x400035:	mov	qword ptr [rbp - 0x88], rax
0x40003c:	mov	rax, qword ptr [rbp - 0x88]
0x400043:	test	rax, rax
0x400046:	jne	0x400052
<Block for 0x400048, 10 bytes>
0x400048:	mov	edi, 0xffffffff
0x40004d:	call	0x500008
<Block for 0x400052, 35 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x88]
0x400059:	mov	byte ptr [rax], 0
0x40005c:	mov	dword ptr [rbp - 0x90], 0xffffffff
0x400066:	mov	rax, qword ptr [rbp - 0x88]
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
<Block for 0x400075, 24 bytes>
0x400075:	mov	qword ptr [rbp - 0x80], rax
0x400079:	mov	edx, 6
0x40007e:	mov	esi, 1
0x400083:	mov	edi, 2
0x400088:	call	0x500018
<Block for 0x40008d, 19 bytes>
0x40008d:	mov	dword ptr [rbp - 0x90], eax
0x400093:	cmp	dword ptr [rbp - 0x90], -1
0x40009a:	je	0x4001b0
<Block for 0x4001b0, 3 bytes>
0x4001b0:	nop	
0x4001b1:	jmp	0x4001b4
<Block for 0x4000a0, 22 bytes>
0x4000a0:	lea	rax, [rbp - 0x30]
0x4000a4:	mov	edx, 0x10
0x4000a9:	mov	esi, 0
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500020
<Block for 0x4001b4, 9 bytes>
0x4001b4:	cmp	dword ptr [rbp - 0x90], -1
0x4001bb:	je	0x4001ca
<Block for 0x4000b6, 18 bytes>
0x4000b6:	mov	word ptr [rbp - 0x30], 2
0x4000bc:	lea	rdi, [rip + 0x492]
0x4000c3:	call	0x500028
<Block for 0x4001ca, 22 bytes>
0x4001ca:	lea	rdx, [rbp - 0x88]
0x4001d1:	lea	rax, [rbp - 0x70]
0x4001d5:	mov	rsi, rdx
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x4006f0
<Block for 0x4001bd, 13 bytes>
0x4001bd:	mov	eax, dword ptr [rbp - 0x90]
0x4001c3:	mov	edi, eax
0x4001c5:	call	0x500050
<Block for 0x4000c8, 13 bytes>
0x4000c8:	mov	dword ptr [rbp - 0x2c], eax
0x4000cb:	mov	edi, 0x6987
0x4000d0:	call	0x500030
<Block for 0x4001e0, 22 bytes>
0x4001e0:	lea	rdx, [rbp - 0x88]
0x4001e7:	lea	rax, [rbp - 0x70]
0x4001eb:	mov	rsi, rdx
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x4006f0
<Block for 0x4000d5, 29 bytes>
0x4000d5:	mov	word ptr [rbp - 0x2e], ax
0x4000d9:	lea	rcx, [rbp - 0x30]
0x4000dd:	mov	eax, dword ptr [rbp - 0x90]
0x4000e3:	mov	edx, 0x10
0x4000e8:	mov	rsi, rcx
0x4000eb:	mov	edi, eax
0x4000ed:	call	0x500038
<Block for 0x4001f6, 22 bytes>
0x4001f6:	lea	rdx, [rbp - 0x88]
0x4001fd:	lea	rax, [rbp - 0x70]
0x400201:	mov	rsi, rdx
0x400204:	mov	rdi, rax
0x400207:	call	0x4006f0
<Block for 0x4000f2, 14 bytes>
0x4000f2:	cmp	eax, -1
0x4000f5:	sete	al
0x4000f8:	test	al, al
0x4000fa:	jne	0x4001b3
<Block for 0x40020c, 19 bytes>
0x40020c:	lea	rdx, [rbp - 0x70]
0x400210:	lea	rax, [rbp - 0x50]
0x400214:	mov	rsi, rdx
0x400217:	mov	rdi, rax
0x40021a:	call	0x40072a
<Block for 0x400100, 45 bytes>
0x400100:	mov	eax, 0x63
0x400105:	sub	rax, qword ptr [rbp - 0x80]
0x400109:	mov	rdx, rax
0x40010c:	mov	rcx, qword ptr [rbp - 0x88]
0x400113:	mov	rax, qword ptr [rbp - 0x80]
0x400117:	lea	rsi, [rcx + rax]
0x40011b:	mov	eax, dword ptr [rbp - 0x90]
0x400121:	mov	ecx, 0
0x400126:	mov	edi, eax
0x400128:	call	0x500040
<Block for 0x4001b3, 1 bytes>
0x4001b3:	nop	
<Block for 0x40021f, 12 bytes>
0x40021f:	lea	rax, [rbp - 0x50]
0x400223:	mov	rdi, rax
0x400226:	call	0x500058
<Block for 0x40012d, 15 bytes>
0x40012d:	mov	dword ptr [rbp - 0x8c], eax
0x400133:	cmp	dword ptr [rbp - 0x8c], -1
0x40013a:	je	0x4001b4
<Block for 0x40022b, 12 bytes>
0x40022b:	lea	rax, [rbp - 0x50]
0x40022f:	mov	rdi, rax
0x400232:	call	0x400616
<Block for 0x40013c, 9 bytes>
0x40013c:	cmp	dword ptr [rbp - 0x8c], 0
0x400143:	je	0x4001b4
<Block for 0x400237, 12 bytes>
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rdi, rax
0x40023e:	call	0x400616
<Block for 0x400145, 49 bytes>
0x400145:	mov	rax, qword ptr [rbp - 0x88]
0x40014c:	mov	edx, dword ptr [rbp - 0x8c]
0x400152:	movsxd	rcx, edx
0x400155:	mov	rdx, qword ptr [rbp - 0x80]
0x400159:	add	rdx, rcx
0x40015c:	add	rax, rdx
0x40015f:	mov	byte ptr [rax], 0
0x400162:	mov	rax, qword ptr [rbp - 0x88]
0x400169:	mov	esi, 0xd
0x40016e:	mov	rdi, rax
0x400171:	call	0x500048
<Block for 0x400243, 16 bytes>
0x400243:	nop	
0x400244:	mov	rax, qword ptr [rbp - 0x18]
0x400248:	xor	rax, qword ptr fs:[0x28]
0x400251:	je	0x40028d
<Block for 0x400176, 11 bytes>
0x400176:	mov	qword ptr [rbp - 0x78], rax
0x40017a:	cmp	qword ptr [rbp - 0x78], 0
0x40017f:	je	0x400188
<Block for 0x40028d, 10 bytes>
0x40028d:	add	rsp, 0x88
0x400294:	pop	rbx
0x400295:	pop	rbp
0x400296:	ret	
<Block for 0x400253, 2 bytes>
0x400253:	jmp	0x400288
<Block for 0x400188, 20 bytes>
0x400188:	mov	rax, qword ptr [rbp - 0x88]
0x40018f:	mov	esi, 0xa
0x400194:	mov	rdi, rax
0x400197:	call	0x500048
<Block for 0x400181, 27 bytes>
0x400181:	mov	rax, qword ptr [rbp - 0x78]
0x400185:	mov	byte ptr [rax], 0
0x400188:	mov	rax, qword ptr [rbp - 0x88]
0x40018f:	mov	esi, 0xa
0x400194:	mov	rdi, rax
0x400197:	call	0x500048
<Block for 0x400288, 5 bytes>
0x400288:	call	0x500068
<Block for 0x40019c, 11 bytes>
0x40019c:	mov	qword ptr [rbp - 0x78], rax
0x4001a0:	cmp	qword ptr [rbp - 0x78], 0
0x4001a5:	je	0x4001b4
<Block for 0x4001a7, 9 bytes>
0x4001a7:	mov	rax, qword ptr [rbp - 0x78]
0x4001ab:	mov	byte ptr [rax], 0
0x4001ae:	jmp	0x4001b4
