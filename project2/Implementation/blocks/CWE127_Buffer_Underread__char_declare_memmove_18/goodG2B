<Block for 0x4000ae, 55 bytes>
0x4000ae:	endbr64	
0x4000b2:	push	rbp
0x4000b3:	mov	rbp, rsp
0x4000b6:	sub	rsp, 0xf0
0x4000bd:	mov	rax, qword ptr fs:[0x28]
0x4000c6:	mov	qword ptr [rbp - 8], rax
0x4000ca:	xor	eax, eax
0x4000cc:	lea	rax, [rbp - 0xe0]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x41
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x4000e5, 45 bytes>
0x4000e5:	mov	byte ptr [rbp - 0x7d], 0
0x4000e9:	nop	
0x4000ea:	endbr64	
0x4000ee:	lea	rax, [rbp - 0xe0]
0x4000f5:	mov	qword ptr [rbp - 0xe8], rax
0x4000fc:	lea	rax, [rbp - 0x70]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x43
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500000
<Block for 0x400112, 31 bytes>
0x400112:	mov	byte ptr [rbp - 0xd], 0
0x400116:	mov	rcx, qword ptr [rbp - 0xe8]
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	edx, 0x64
0x400126:	mov	rsi, rcx
0x400129:	mov	rdi, rax
0x40012c:	call	0x500008
<Block for 0x400131, 16 bytes>
0x400131:	mov	byte ptr [rbp - 0xd], 0
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500010
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500018
