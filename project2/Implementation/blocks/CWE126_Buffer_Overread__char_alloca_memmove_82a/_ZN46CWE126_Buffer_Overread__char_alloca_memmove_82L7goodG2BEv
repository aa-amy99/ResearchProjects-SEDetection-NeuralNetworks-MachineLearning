<Block for 0x4001d4, 82 bytes>
0x4001d4:	endbr64	
0x4001d8:	push	rbp
0x4001d9:	mov	rbp, rsp
0x4001dc:	push	rbx
0x4001dd:	sub	rsp, 0x38
0x4001e1:	mov	rax, qword ptr fs:[0x28]
0x4001ea:	mov	qword ptr [rbp - 0x18], rax
0x4001ee:	xor	eax, eax
0x4001f0:	mov	eax, 0x10
0x4001f5:	sub	rax, 1
0x4001f9:	add	rax, 0x3a
0x4001fd:	mov	esi, 0x10
0x400202:	mov	edx, 0
0x400207:	div	rsi
0x40020a:	imul	rax, rax, 0x10
0x40020e:	mov	rdx, rax
0x400211:	and	rdx, 0xfffffffffffff000
0x400218:	mov	rcx, rsp
0x40021b:	sub	rcx, rdx
0x40021e:	mov	rdx, rcx
0x400221:	cmp	rsp, rdx
0x400224:	je	0x400238
<Block for 0x400238, 26 bytes>
0x400238:	mov	rdx, rax
0x40023b:	and	edx, 0xfff
0x400241:	sub	rsp, rdx
0x400244:	mov	rdx, rax
0x400247:	and	edx, 0xfff
0x40024d:	test	rdx, rdx
0x400250:	je	0x400262
<Block for 0x400226, 18 bytes>
0x400226:	sub	rsp, 0x1000
0x40022d:	or	qword ptr [rsp + 0xff8], 0
0x400236:	jmp	0x400221
<Block for 0x400262, 73 bytes>
0x400262:	mov	rax, rsp
0x400265:	add	rax, 0xf
0x400269:	shr	rax, 4
0x40026d:	shl	rax, 4
0x400271:	mov	qword ptr [rbp - 0x38], rax
0x400275:	mov	eax, 0x10
0x40027a:	sub	rax, 1
0x40027e:	add	rax, 0x6c
0x400282:	mov	ecx, 0x10
0x400287:	mov	edx, 0
0x40028c:	div	rcx
0x40028f:	imul	rax, rax, 0x10
0x400293:	mov	rdx, rax
0x400296:	and	rdx, 0xfffffffffffff000
0x40029d:	mov	rbx, rsp
0x4002a0:	sub	rbx, rdx
0x4002a3:	mov	rdx, rbx
0x4002a6:	cmp	rsp, rdx
0x4002a9:	je	0x4002bd
<Block for 0x400252, 89 bytes>
0x400252:	and	eax, 0xfff
0x400257:	sub	rax, 8
0x40025b:	add	rax, rsp
0x40025e:	or	qword ptr [rax], 0
0x400262:	mov	rax, rsp
0x400265:	add	rax, 0xf
0x400269:	shr	rax, 4
0x40026d:	shl	rax, 4
0x400271:	mov	qword ptr [rbp - 0x38], rax
0x400275:	mov	eax, 0x10
0x40027a:	sub	rax, 1
0x40027e:	add	rax, 0x6c
0x400282:	mov	ecx, 0x10
0x400287:	mov	edx, 0
0x40028c:	div	rcx
0x40028f:	imul	rax, rax, 0x10
0x400293:	mov	rdx, rax
0x400296:	and	rdx, 0xfffffffffffff000
0x40029d:	mov	rbx, rsp
0x4002a0:	sub	rbx, rdx
0x4002a3:	mov	rdx, rbx
0x4002a6:	cmp	rsp, rdx
0x4002a9:	je	0x4002bd
<Block for 0x400221, 5 bytes>
0x400221:	cmp	rsp, rdx
0x400224:	je	0x400238
<Block for 0x4002bd, 26 bytes>
0x4002bd:	mov	rdx, rax
0x4002c0:	and	edx, 0xfff
0x4002c6:	sub	rsp, rdx
0x4002c9:	mov	rdx, rax
0x4002cc:	and	edx, 0xfff
0x4002d2:	test	rdx, rdx
0x4002d5:	je	0x4002e7
<Block for 0x4002ab, 18 bytes>
0x4002ab:	sub	rsp, 0x1000
0x4002b2:	or	qword ptr [rsp + 0xff8], 0
0x4002bb:	jmp	0x4002a6
<Block for 0x4002e7, 41 bytes>
0x4002e7:	mov	rax, rsp
0x4002ea:	add	rax, 0xf
0x4002ee:	shr	rax, 4
0x4002f2:	shl	rax, 4
0x4002f6:	mov	qword ptr [rbp - 0x30], rax
0x4002fa:	mov	rax, qword ptr [rbp - 0x38]
0x4002fe:	mov	edx, 0x31
0x400303:	mov	esi, 0x41
0x400308:	mov	rdi, rax
0x40030b:	call	0x500000
<Block for 0x4002d7, 57 bytes>
0x4002d7:	and	eax, 0xfff
0x4002dc:	sub	rax, 8
0x4002e0:	add	rax, rsp
0x4002e3:	or	qword ptr [rax], 0
0x4002e7:	mov	rax, rsp
0x4002ea:	add	rax, 0xf
0x4002ee:	shr	rax, 4
0x4002f2:	shl	rax, 4
0x4002f6:	mov	qword ptr [rbp - 0x30], rax
0x4002fa:	mov	rax, qword ptr [rbp - 0x38]
0x4002fe:	mov	edx, 0x31
0x400303:	mov	esi, 0x41
0x400308:	mov	rdi, rax
0x40030b:	call	0x500000
<Block for 0x4002a6, 5 bytes>
0x4002a6:	cmp	rsp, rdx
0x4002a9:	je	0x4002bd
<Block for 0x400310, 33 bytes>
0x400310:	mov	rax, qword ptr [rbp - 0x38]
0x400314:	add	rax, 0x31
0x400318:	mov	byte ptr [rax], 0
0x40031b:	mov	rax, qword ptr [rbp - 0x30]
0x40031f:	mov	edx, 0x63
0x400324:	mov	esi, 0x41
0x400329:	mov	rdi, rax
0x40032c:	call	0x500000
<Block for 0x400331, 29 bytes>
0x400331:	mov	rax, qword ptr [rbp - 0x30]
0x400335:	add	rax, 0x63
0x400339:	mov	byte ptr [rax], 0
0x40033c:	mov	rax, qword ptr [rbp - 0x30]
0x400340:	mov	qword ptr [rbp - 0x28], rax
0x400344:	mov	edi, 8
0x400349:	call	0x500008
<Block for 0x40034e, 11 bytes>
0x40034e:	mov	rbx, rax
0x400351:	mov	rdi, rbx
0x400354:	call	0x400404
<Block for 0x400359, 30 bytes>
0x400359:	mov	qword ptr [rbp - 0x20], rbx
0x40035d:	mov	rax, qword ptr [rbp - 0x20]
0x400361:	mov	rax, qword ptr [rax]
0x400364:	mov	rcx, qword ptr [rax]
0x400367:	mov	rdx, qword ptr [rbp - 0x28]
0x40036b:	mov	rax, qword ptr [rbp - 0x20]
0x40036f:	mov	rsi, rdx
0x400372:	mov	rdi, rax
0x400375:	call	rcx
<Block for 0x400377, 9 bytes>
0x400377:	mov	rax, qword ptr [rbp - 0x20]
0x40037b:	test	rax, rax
0x40037e:	je	0x40038d
<Block for 0x40038d, 16 bytes>
0x40038d:	nop	
0x40038e:	mov	rax, qword ptr [rbp - 0x18]
0x400392:	xor	rax, qword ptr fs:[0x28]
0x40039b:	je	0x4003a2
<Block for 0x400380, 13 bytes>
0x400380:	mov	esi, 8
0x400385:	mov	rdi, rax
0x400388:	call	0x500010
<Block for 0x4003a2, 6 bytes>
0x4003a2:	mov	rbx, qword ptr [rbp - 8]
0x4003a6:	leave	
0x4003a7:	ret	
<Block for 0x40039d, 5 bytes>
0x40039d:	call	0x500018
