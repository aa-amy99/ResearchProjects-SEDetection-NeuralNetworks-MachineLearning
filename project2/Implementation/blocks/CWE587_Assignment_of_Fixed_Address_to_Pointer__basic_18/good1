<Block for 0x40002d, 61 bytes>
0x40002d:	endbr64	
0x400031:	push	rbp
0x400032:	mov	rbp, rsp
0x400035:	sub	rsp, 0x20
0x400039:	mov	rax, qword ptr fs:[0x28]
0x400042:	mov	qword ptr [rbp - 8], rax
0x400046:	xor	eax, eax
0x400048:	nop	
0x400049:	endbr64	
0x40004d:	mov	byte ptr [rbp - 0x11], 0x61
0x400051:	lea	rax, [rbp - 0x11]
0x400055:	mov	qword ptr [rbp - 0x10], rax
0x400059:	mov	rax, qword ptr [rbp - 0x10]
0x40005d:	movzx	eax, byte ptr [rax]
0x400060:	movsx	eax, al
0x400063:	mov	edi, eax
0x400065:	call	0x500000
<Block for 0x40006a, 16 bytes>
0x40006a:	nop	
0x40006b:	mov	rax, qword ptr [rbp - 8]
0x40006f:	xor	rax, qword ptr fs:[0x28]
0x400078:	je	0x40007f
<Block for 0x40007f, 2 bytes>
0x40007f:	leave	
0x400080:	ret	
<Block for 0x40007a, 5 bytes>
0x40007a:	call	0x500008
