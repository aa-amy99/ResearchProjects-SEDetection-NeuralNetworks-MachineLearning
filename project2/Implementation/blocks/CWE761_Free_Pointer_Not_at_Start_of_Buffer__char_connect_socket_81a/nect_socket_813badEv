<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	edi, 0x64
0x400020:	call	0x500000
<Block for 0x400025, 11 bytes>
0x400025:	mov	qword ptr [rbp - 0x40], rax
0x400029:	cmp	qword ptr [rbp - 0x40], 0
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0xffffffff
0x400035:	call	0x500008
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 0x40]
0x40003e:	mov	byte ptr [rax], 0
0x400041:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400048:	mov	rax, qword ptr [rbp - 0x40]
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500010
<Block for 0x400054, 24 bytes>
0x400054:	mov	qword ptr [rbp - 0x38], rax
0x400058:	mov	edx, 6
0x40005d:	mov	esi, 1
0x400062:	mov	edi, 2
0x400067:	call	0x500018
<Block for 0x40006c, 13 bytes>
0x40006c:	mov	dword ptr [rbp - 0x50], eax
0x40006f:	cmp	dword ptr [rbp - 0x50], -1
0x400073:	je	0x40016b
<Block for 0x40016b, 3 bytes>
0x40016b:	nop	
0x40016c:	jmp	0x40016f
<Block for 0x400079, 22 bytes>
0x400079:	lea	rax, [rbp - 0x20]
0x40007d:	mov	edx, 0x10
0x400082:	mov	esi, 0
0x400087:	mov	rdi, rax
0x40008a:	call	0x500020
<Block for 0x40016f, 6 bytes>
0x40016f:	cmp	dword ptr [rbp - 0x50], -1
0x400173:	je	0x40017f
<Block for 0x40008f, 18 bytes>
0x40008f:	mov	word ptr [rbp - 0x20], 2
0x400095:	lea	rdi, [rip + 0x2fa]
0x40009c:	call	0x500028
<Block for 0x40017f, 45 bytes>
0x40017f:	lea	rax, [rip + 0xffee2]
0x400186:	mov	qword ptr [rbp - 0x48], rax
0x40018a:	lea	rax, [rbp - 0x48]
0x40018e:	mov	qword ptr [rbp - 0x28], rax
0x400192:	mov	rax, qword ptr [rbp - 0x28]
0x400196:	mov	rax, qword ptr [rax]
0x400199:	mov	rcx, qword ptr [rax]
0x40019c:	mov	rdx, qword ptr [rbp - 0x40]
0x4001a0:	mov	rax, qword ptr [rbp - 0x28]
0x4001a4:	mov	rsi, rdx
0x4001a7:	mov	rdi, rax
0x4001aa:	call	rcx
<Block for 0x400175, 10 bytes>
0x400175:	mov	eax, dword ptr [rbp - 0x50]
0x400178:	mov	edi, eax
0x40017a:	call	0x500050
<Block for 0x4000a1, 13 bytes>
0x4000a1:	mov	dword ptr [rbp - 0x1c], eax
0x4000a4:	mov	edi, 0x6987
0x4000a9:	call	0x500030
<Block for 0x4001ac, 16 bytes>
0x4001ac:	nop	
0x4001ad:	mov	rax, qword ptr [rbp - 8]
0x4001b1:	xor	rax, qword ptr fs:[0x28]
0x4001ba:	je	0x4001c1
<Block for 0x4000ae, 26 bytes>
0x4000ae:	mov	word ptr [rbp - 0x1e], ax
0x4000b2:	lea	rcx, [rbp - 0x20]
0x4000b6:	mov	eax, dword ptr [rbp - 0x50]
0x4000b9:	mov	edx, 0x10
0x4000be:	mov	rsi, rcx
0x4000c1:	mov	edi, eax
0x4000c3:	call	0x500038
<Block for 0x4001c1, 2 bytes>
0x4001c1:	leave	
0x4001c2:	ret	
<Block for 0x4001bc, 5 bytes>
0x4001bc:	call	0x500060
<Block for 0x4000c8, 14 bytes>
0x4000c8:	cmp	eax, -1
0x4000cb:	sete	al
0x4000ce:	test	al, al
0x4000d0:	jne	0x40016e
<Block for 0x4000d6, 39 bytes>
0x4000d6:	mov	eax, 0x63
0x4000db:	sub	rax, qword ptr [rbp - 0x38]
0x4000df:	mov	rdx, rax
0x4000e2:	mov	rcx, qword ptr [rbp - 0x40]
0x4000e6:	mov	rax, qword ptr [rbp - 0x38]
0x4000ea:	lea	rsi, [rcx + rax]
0x4000ee:	mov	eax, dword ptr [rbp - 0x50]
0x4000f1:	mov	ecx, 0
0x4000f6:	mov	edi, eax
0x4000f8:	call	0x500040
<Block for 0x40016e, 1 bytes>
0x40016e:	nop	
<Block for 0x4000fd, 9 bytes>
0x4000fd:	mov	dword ptr [rbp - 0x4c], eax
0x400100:	cmp	dword ptr [rbp - 0x4c], -1
0x400104:	je	0x40016f
<Block for 0x400106, 6 bytes>
0x400106:	cmp	dword ptr [rbp - 0x4c], 0
0x40010a:	je	0x40016f
<Block for 0x40010c, 40 bytes>
0x40010c:	mov	eax, dword ptr [rbp - 0x4c]
0x40010f:	movsxd	rdx, eax
0x400112:	mov	rax, qword ptr [rbp - 0x38]
0x400116:	add	rdx, rax
0x400119:	mov	rax, qword ptr [rbp - 0x40]
0x40011d:	add	rax, rdx
0x400120:	mov	byte ptr [rax], 0
0x400123:	mov	rax, qword ptr [rbp - 0x40]
0x400127:	mov	esi, 0xd
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500048
<Block for 0x400134, 11 bytes>
0x400134:	mov	qword ptr [rbp - 0x30], rax
0x400138:	cmp	qword ptr [rbp - 0x30], 0
0x40013d:	je	0x400146
<Block for 0x400146, 17 bytes>
0x400146:	mov	rax, qword ptr [rbp - 0x40]
0x40014a:	mov	esi, 0xa
0x40014f:	mov	rdi, rax
0x400152:	call	0x500048
<Block for 0x40013f, 24 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x30]
0x400143:	mov	byte ptr [rax], 0
0x400146:	mov	rax, qword ptr [rbp - 0x40]
0x40014a:	mov	esi, 0xa
0x40014f:	mov	rdi, rax
0x400152:	call	0x500048
<Block for 0x400157, 11 bytes>
0x400157:	mov	qword ptr [rbp - 0x30], rax
0x40015b:	cmp	qword ptr [rbp - 0x30], 0
0x400160:	je	0x40016f
<Block for 0x400162, 9 bytes>
0x400162:	mov	rax, qword ptr [rbp - 0x30]
0x400166:	mov	byte ptr [rax], 0
0x400169:	jmp	0x40016f
