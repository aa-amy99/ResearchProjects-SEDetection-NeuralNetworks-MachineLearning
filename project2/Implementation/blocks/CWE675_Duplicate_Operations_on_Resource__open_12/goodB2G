<Block for 0x400084, 29 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x10
0x400090:	mov	dword ptr [rbp - 4], 0xffffffff
0x400097:	mov	eax, 0
0x40009c:	call	0x500000
<Block for 0x4000a1, 4 bytes>
0x4000a1:	test	eax, eax
0x4000a3:	je	0x4000cf
<Block for 0x4000cf, 27 bytes>
0x4000cf:	mov	edx, 0x180
0x4000d4:	mov	esi, 0x42
0x4000d9:	lea	rdi, [rip + 0xc9]
0x4000e0:	mov	eax, 0
0x4000e5:	call	0x500008
<Block for 0x4000a5, 27 bytes>
0x4000a5:	mov	edx, 0x180
0x4000aa:	mov	esi, 0x42
0x4000af:	lea	rdi, [rip + 0xf3]
0x4000b6:	mov	eax, 0
0x4000bb:	call	0x500008
<Block for 0x4000ea, 13 bytes>
0x4000ea:	mov	dword ptr [rbp - 4], eax
0x4000ed:	mov	eax, dword ptr [rbp - 4]
0x4000f0:	mov	edi, eax
0x4000f2:	call	0x500010
<Block for 0x4000c0, 13 bytes>
0x4000c0:	mov	dword ptr [rbp - 4], eax
0x4000c3:	mov	eax, dword ptr [rbp - 4]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x500010
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	eax, 0
0x4000fc:	call	0x500000
<Block for 0x4000cd, 2 bytes>
0x4000cd:	jmp	0x4000f7
<Block for 0x400101, 3 bytes>
0x400101:	nop	
0x400102:	leave	
0x400103:	ret	
