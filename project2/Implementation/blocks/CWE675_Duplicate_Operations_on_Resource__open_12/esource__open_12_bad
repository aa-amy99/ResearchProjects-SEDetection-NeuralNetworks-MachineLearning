<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 4], 0xffffffff
0x400013:	mov	eax, 0
0x400018:	call	0x500000
<Block for 0x40001d, 4 bytes>
0x40001d:	test	eax, eax
0x40001f:	je	0x40004b
<Block for 0x40004b, 27 bytes>
0x40004b:	mov	edx, 0x180
0x400050:	mov	esi, 0x42
0x400055:	lea	rdi, [rip + 0x160]
0x40005c:	mov	eax, 0
0x400061:	call	0x500008
<Block for 0x400021, 27 bytes>
0x400021:	mov	edx, 0x180
0x400026:	mov	esi, 0x42
0x40002b:	lea	rdi, [rip + 0x177]
0x400032:	mov	eax, 0
0x400037:	call	0x500008
<Block for 0x400066, 13 bytes>
0x400066:	mov	dword ptr [rbp - 4], eax
0x400069:	mov	eax, 0
0x40006e:	call	0x500000
<Block for 0x40003c, 13 bytes>
0x40003c:	mov	dword ptr [rbp - 4], eax
0x40003f:	mov	eax, dword ptr [rbp - 4]
0x400042:	mov	edi, eax
0x400044:	call	0x500010
<Block for 0x400073, 4 bytes>
0x400073:	test	eax, eax
0x400075:	je	0x400081
<Block for 0x400049, 2 bytes>
0x400049:	jmp	0x400069
<Block for 0x400081, 3 bytes>
0x400081:	nop	
0x400082:	leave	
0x400083:	ret	
<Block for 0x400077, 10 bytes>
0x400077:	mov	eax, dword ptr [rbp - 4]
0x40007a:	mov	edi, eax
0x40007c:	call	0x500010
<Block for 0x400069, 10 bytes>
0x400069:	mov	eax, 0
0x40006e:	call	0x500000
