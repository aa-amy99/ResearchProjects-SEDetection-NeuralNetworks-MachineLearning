<Block for 0x40014a, 47 bytes>
0x40014a:	endbr64	
0x40014e:	push	rbp
0x40014f:	mov	rbp, rsp
0x400152:	add	rsp, -0x80
0x400156:	mov	rax, qword ptr fs:[0x28]
0x40015f:	mov	qword ptr [rbp - 8], rax
0x400163:	xor	eax, eax
0x400165:	mov	qword ptr [rbp - 0x78], 0
0x40016d:	mov	rax, qword ptr [rbp - 0x78]
0x400171:	mov	rdi, rax
0x400174:	call	0x4000fd
<Block for 0x400179, 26 bytes>
0x400179:	mov	qword ptr [rbp - 0x78], rax
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	edx, 0x63
0x400186:	mov	esi, 0x43
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500008
<Block for 0x400193, 19 bytes>
0x400193:	mov	byte ptr [rbp - 0xd], 0
0x400197:	mov	qword ptr [rbp - 0x80], 0
0x40019f:	cmp	qword ptr [rbp - 0x80], 0x63
0x4001a4:	ja	0x4001c8
<Block for 0x4001a6, 34 bytes>
0x4001a6:	mov	rdx, qword ptr [rbp - 0x78]
0x4001aa:	mov	rax, qword ptr [rbp - 0x80]
0x4001ae:	add	rdx, rax
0x4001b1:	lea	rcx, [rbp - 0x70]
0x4001b5:	mov	rax, qword ptr [rbp - 0x80]
0x4001b9:	add	rax, rcx
0x4001bc:	movzx	eax, byte ptr [rax]
0x4001bf:	mov	byte ptr [rdx], al
0x4001c1:	add	qword ptr [rbp - 0x80], 1
0x4001c6:	jmp	0x40019f
<Block for 0x4001c8, 23 bytes>
0x4001c8:	mov	rax, qword ptr [rbp - 0x78]
0x4001cc:	add	rax, 0x63
0x4001d0:	mov	byte ptr [rax], 0
0x4001d3:	mov	rax, qword ptr [rbp - 0x78]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x40019f, 7 bytes>
0x40019f:	cmp	qword ptr [rbp - 0x80], 0x63
0x4001a4:	ja	0x4001c8
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500018
