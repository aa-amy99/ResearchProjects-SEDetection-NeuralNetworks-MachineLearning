<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x98], 0
0x40002a:	mov	eax, 0
0x40002f:	call	0x500000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x400098
<Block for 0x400098, 10 bytes>
0x400098:	mov	edi, 0x64
0x40009d:	call	0x500008
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0x64
0x40003d:	call	0x500008
<Block for 0x4000a2, 17 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x90], rax
0x4000a9:	cmp	qword ptr [rbp - 0x90], 0
0x4000b1:	jne	0x4000bd
<Block for 0x400042, 17 bytes>
0x400042:	mov	qword ptr [rbp - 0x88], rax
0x400049:	cmp	qword ptr [rbp - 0x88], 0
0x400051:	jne	0x40005d
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	edi, 0xffffffff
0x4000b8:	call	0x500010
<Block for 0x4000bd, 25 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x90]
0x4000c4:	mov	edx, 0x63
0x4000c9:	mov	esi, 0x41
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500018
<Block for 0x400053, 10 bytes>
0x400053:	mov	edi, 0xffffffff
0x400058:	call	0x500010
<Block for 0x40005d, 25 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0x88]
0x400064:	mov	edx, 0x63
0x400069:	mov	esi, 0x41
0x40006e:	mov	rdi, rax
0x400071:	call	0x500018
<Block for 0x4000d6, 50 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x90]
0x4000dd:	add	rax, 0x63
0x4000e1:	mov	byte ptr [rax], 0
0x4000e4:	mov	rax, qword ptr [rbp - 0x90]
0x4000eb:	mov	qword ptr [rbp - 0x98], rax
0x4000f2:	lea	rax, [rbp - 0x80]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x43
0x400100:	mov	rdi, rax
0x400103:	call	0x500018
<Block for 0x400076, 34 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0x88]
0x40007d:	add	rax, 0x63
0x400081:	mov	byte ptr [rax], 0
0x400084:	mov	rax, qword ptr [rbp - 0x88]
0x40008b:	sub	rax, 8
0x40008f:	mov	qword ptr [rbp - 0x98], rax
0x400096:	jmp	0x4000f2
<Block for 0x400108, 128 bytes>
0x400108:	mov	byte ptr [rbp - 0x1d], 0
0x40010c:	mov	rax, qword ptr [rbp - 0x98]
0x400113:	mov	rcx, qword ptr [rax]
0x400116:	mov	rbx, qword ptr [rax + 8]
0x40011a:	mov	qword ptr [rbp - 0x80], rcx
0x40011e:	mov	qword ptr [rbp - 0x78], rbx
0x400122:	mov	rcx, qword ptr [rax + 0x10]
0x400126:	mov	rbx, qword ptr [rax + 0x18]
0x40012a:	mov	qword ptr [rbp - 0x70], rcx
0x40012e:	mov	qword ptr [rbp - 0x68], rbx
0x400132:	mov	rcx, qword ptr [rax + 0x20]
0x400136:	mov	rbx, qword ptr [rax + 0x28]
0x40013a:	mov	qword ptr [rbp - 0x60], rcx
0x40013e:	mov	qword ptr [rbp - 0x58], rbx
0x400142:	mov	rcx, qword ptr [rax + 0x30]
0x400146:	mov	rbx, qword ptr [rax + 0x38]
0x40014a:	mov	qword ptr [rbp - 0x50], rcx
0x40014e:	mov	qword ptr [rbp - 0x48], rbx
0x400152:	mov	rcx, qword ptr [rax + 0x40]
0x400156:	mov	rbx, qword ptr [rax + 0x48]
0x40015a:	mov	qword ptr [rbp - 0x40], rcx
0x40015e:	mov	qword ptr [rbp - 0x38], rbx
0x400162:	mov	rcx, qword ptr [rax + 0x50]
0x400166:	mov	rbx, qword ptr [rax + 0x58]
0x40016a:	mov	qword ptr [rbp - 0x30], rcx
0x40016e:	mov	qword ptr [rbp - 0x28], rbx
0x400172:	mov	eax, dword ptr [rax + 0x60]
0x400175:	mov	dword ptr [rbp - 0x20], eax
0x400178:	mov	byte ptr [rbp - 0x1d], 0
0x40017c:	lea	rax, [rbp - 0x80]
0x400180:	mov	rdi, rax
0x400183:	call	0x500020
<Block for 0x4000f2, 22 bytes>
0x4000f2:	lea	rax, [rbp - 0x80]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x43
0x400100:	mov	rdi, rax
0x400103:	call	0x500018
<Block for 0x400188, 16 bytes>
0x400188:	nop	
0x400189:	mov	rax, qword ptr [rbp - 0x18]
0x40018d:	xor	rax, qword ptr fs:[0x28]
0x400196:	je	0x40019d
<Block for 0x40019d, 10 bytes>
0x40019d:	add	rsp, 0x98
0x4001a4:	pop	rbx
0x4001a5:	pop	rbp
0x4001a6:	ret	
<Block for 0x400198, 5 bytes>
0x400198:	call	0x500028
