<Block for 0x4001a7, 52 bytes>
0x4001a7:	endbr64	
0x4001ab:	push	rbp
0x4001ac:	mov	rbp, rsp
0x4001af:	push	rbx
0x4001b0:	sub	rsp, 0x98
0x4001b7:	mov	rax, qword ptr fs:[0x28]
0x4001c0:	mov	qword ptr [rbp - 0x18], rax
0x4001c4:	xor	eax, eax
0x4001c6:	mov	qword ptr [rbp - 0x98], 0
0x4001d1:	mov	eax, 0
0x4001d6:	call	0x500000
<Block for 0x4001db, 4 bytes>
0x4001db:	test	eax, eax
0x4001dd:	je	0x40023b
<Block for 0x40023b, 10 bytes>
0x40023b:	mov	edi, 0x64
0x400240:	call	0x500008
<Block for 0x4001df, 10 bytes>
0x4001df:	mov	edi, 0x64
0x4001e4:	call	0x500008
<Block for 0x400245, 17 bytes>
0x400245:	mov	qword ptr [rbp - 0x90], rax
0x40024c:	cmp	qword ptr [rbp - 0x90], 0
0x400254:	jne	0x400260
<Block for 0x4001e9, 17 bytes>
0x4001e9:	mov	qword ptr [rbp - 0x88], rax
0x4001f0:	cmp	qword ptr [rbp - 0x88], 0
0x4001f8:	jne	0x400204
<Block for 0x400256, 10 bytes>
0x400256:	mov	edi, 0xffffffff
0x40025b:	call	0x500010
<Block for 0x400260, 25 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x90]
0x400267:	mov	edx, 0x63
0x40026c:	mov	esi, 0x41
0x400271:	mov	rdi, rax
0x400274:	call	0x500018
<Block for 0x4001fa, 10 bytes>
0x4001fa:	mov	edi, 0xffffffff
0x4001ff:	call	0x500010
<Block for 0x400204, 25 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0x88]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x41
0x400215:	mov	rdi, rax
0x400218:	call	0x500018
<Block for 0x400279, 50 bytes>
0x400279:	mov	rax, qword ptr [rbp - 0x90]
0x400280:	add	rax, 0x63
0x400284:	mov	byte ptr [rax], 0
0x400287:	mov	rax, qword ptr [rbp - 0x90]
0x40028e:	mov	qword ptr [rbp - 0x98], rax
0x400295:	lea	rax, [rbp - 0x80]
0x400299:	mov	edx, 0x63
0x40029e:	mov	esi, 0x43
0x4002a3:	mov	rdi, rax
0x4002a6:	call	0x500018
<Block for 0x40021d, 30 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x88]
0x400224:	add	rax, 0x63
0x400228:	mov	byte ptr [rax], 0
0x40022b:	mov	rax, qword ptr [rbp - 0x88]
0x400232:	mov	qword ptr [rbp - 0x98], rax
0x400239:	jmp	0x400295
<Block for 0x4002ab, 128 bytes>
0x4002ab:	mov	byte ptr [rbp - 0x1d], 0
0x4002af:	mov	rax, qword ptr [rbp - 0x98]
0x4002b6:	mov	rcx, qword ptr [rax]
0x4002b9:	mov	rbx, qword ptr [rax + 8]
0x4002bd:	mov	qword ptr [rbp - 0x80], rcx
0x4002c1:	mov	qword ptr [rbp - 0x78], rbx
0x4002c5:	mov	rcx, qword ptr [rax + 0x10]
0x4002c9:	mov	rbx, qword ptr [rax + 0x18]
0x4002cd:	mov	qword ptr [rbp - 0x70], rcx
0x4002d1:	mov	qword ptr [rbp - 0x68], rbx
0x4002d5:	mov	rcx, qword ptr [rax + 0x20]
0x4002d9:	mov	rbx, qword ptr [rax + 0x28]
0x4002dd:	mov	qword ptr [rbp - 0x60], rcx
0x4002e1:	mov	qword ptr [rbp - 0x58], rbx
0x4002e5:	mov	rcx, qword ptr [rax + 0x30]
0x4002e9:	mov	rbx, qword ptr [rax + 0x38]
0x4002ed:	mov	qword ptr [rbp - 0x50], rcx
0x4002f1:	mov	qword ptr [rbp - 0x48], rbx
0x4002f5:	mov	rcx, qword ptr [rax + 0x40]
0x4002f9:	mov	rbx, qword ptr [rax + 0x48]
0x4002fd:	mov	qword ptr [rbp - 0x40], rcx
0x400301:	mov	qword ptr [rbp - 0x38], rbx
0x400305:	mov	rcx, qword ptr [rax + 0x50]
0x400309:	mov	rbx, qword ptr [rax + 0x58]
0x40030d:	mov	qword ptr [rbp - 0x30], rcx
0x400311:	mov	qword ptr [rbp - 0x28], rbx
0x400315:	mov	eax, dword ptr [rax + 0x60]
0x400318:	mov	dword ptr [rbp - 0x20], eax
0x40031b:	mov	byte ptr [rbp - 0x1d], 0
0x40031f:	lea	rax, [rbp - 0x80]
0x400323:	mov	rdi, rax
0x400326:	call	0x500020
<Block for 0x400295, 22 bytes>
0x400295:	lea	rax, [rbp - 0x80]
0x400299:	mov	edx, 0x63
0x40029e:	mov	esi, 0x43
0x4002a3:	mov	rdi, rax
0x4002a6:	call	0x500018
<Block for 0x40032b, 16 bytes>
0x40032b:	nop	
0x40032c:	mov	rax, qword ptr [rbp - 0x18]
0x400330:	xor	rax, qword ptr fs:[0x28]
0x400339:	je	0x400340
<Block for 0x400340, 10 bytes>
0x400340:	add	rsp, 0x98
0x400347:	pop	rbx
0x400348:	pop	rbp
0x400349:	ret	
<Block for 0x40033b, 5 bytes>
0x40033b:	call	0x500028
