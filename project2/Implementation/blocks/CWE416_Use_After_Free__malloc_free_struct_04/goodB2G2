<Block for 0x400152, 29 bytes>
0x400152:	endbr64	
0x400156:	push	rbp
0x400157:	mov	rbp, rsp
0x40015a:	sub	rsp, 0x10
0x40015e:	mov	qword ptr [rbp - 8], 0
0x400166:	mov	eax, 1
0x40016b:	test	eax, eax
0x40016d:	je	0x4001e3
<Block for 0x4001e3, 3 bytes>
0x4001e3:	nop	
0x4001e4:	leave	
0x4001e5:	ret	
<Block for 0x40016f, 10 bytes>
0x40016f:	mov	edi, 0x320
0x400174:	call	0x500000
<Block for 0x400179, 11 bytes>
0x400179:	mov	qword ptr [rbp - 8], rax
0x40017d:	cmp	qword ptr [rbp - 8], 0
0x400182:	jne	0x40018e
<Block for 0x400184, 10 bytes>
0x400184:	mov	edi, 0xffffffff
0x400189:	call	0x500008
<Block for 0x40018e, 10 bytes>
0x40018e:	mov	qword ptr [rbp - 0x10], 0
0x400196:	jmp	0x4001d0
<Block for 0x4001d0, 7 bytes>
0x4001d0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001d5:	jbe	0x400198
<Block for 0x400198, 63 bytes>
0x400198:	mov	rax, qword ptr [rbp - 0x10]
0x40019c:	lea	rdx, [rax*8]
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	add	rax, rdx
0x4001ab:	mov	dword ptr [rax], 1
0x4001b1:	mov	rax, qword ptr [rbp - 0x10]
0x4001b5:	lea	rdx, [rax*8]
0x4001bd:	mov	rax, qword ptr [rbp - 8]
0x4001c1:	add	rax, rdx
0x4001c4:	mov	dword ptr [rax + 4], 2
0x4001cb:	add	qword ptr [rbp - 0x10], 1
0x4001d0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001d5:	jbe	0x400198
<Block for 0x4001d7, 12 bytes>
0x4001d7:	mov	rax, qword ptr [rbp - 8]
0x4001db:	mov	rdi, rax
0x4001de:	call	0x500010
