<Block for 0x4001e6, 29 bytes>
0x4001e6:	endbr64	
0x4001ea:	push	rbp
0x4001eb:	mov	rbp, rsp
0x4001ee:	sub	rsp, 0x10
0x4001f2:	mov	qword ptr [rbp - 0x10], 0
0x4001fa:	mov	eax, 0
0x4001ff:	test	eax, eax
0x400201:	je	0x400211
<Block for 0x400211, 10 bytes>
0x400211:	mov	edi, 0x320
0x400216:	call	0x500000
<Block for 0x400203, 12 bytes>
0x400203:	lea	rdi, [rip + 0x162]
0x40020a:	call	0x500020
<Block for 0x40021b, 11 bytes>
0x40021b:	mov	qword ptr [rbp - 0x10], rax
0x40021f:	cmp	qword ptr [rbp - 0x10], 0
0x400224:	jne	0x400230
<Block for 0x40020f, 2 bytes>
0x40020f:	jmp	0x400279
<Block for 0x400226, 10 bytes>
0x400226:	mov	edi, 0xffffffff
0x40022b:	call	0x500008
<Block for 0x400230, 10 bytes>
0x400230:	mov	qword ptr [rbp - 8], 0
0x400238:	jmp	0x400272
<Block for 0x400279, 9 bytes>
0x400279:	mov	eax, 1
0x40027e:	test	eax, eax
0x400280:	je	0x40028e
<Block for 0x400272, 7 bytes>
0x400272:	cmp	qword ptr [rbp - 8], 0x63
0x400277:	jbe	0x40023a
<Block for 0x40028e, 3 bytes>
0x40028e:	nop	
0x40028f:	leave	
0x400290:	ret	
<Block for 0x400282, 12 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0x10]
0x400286:	mov	rdi, rax
0x400289:	call	0x500018
<Block for 0x40023a, 63 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 8]
0x40023e:	lea	rdx, [rax*8]
0x400246:	mov	rax, qword ptr [rbp - 0x10]
0x40024a:	add	rax, rdx
0x40024d:	mov	dword ptr [rax], 1
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	lea	rdx, [rax*8]
0x40025f:	mov	rax, qword ptr [rbp - 0x10]
0x400263:	add	rax, rdx
0x400266:	mov	dword ptr [rax + 4], 2
0x40026d:	add	qword ptr [rbp - 8], 1
0x400272:	cmp	qword ptr [rbp - 8], 0x63
0x400277:	jbe	0x40023a
