<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	eax, 1
0x400019:	test	eax, eax
0x40001b:	je	0x400091
<Block for 0x400091, 9 bytes>
0x400091:	mov	eax, 1
0x400096:	test	eax, eax
0x400098:	je	0x4000a6
<Block for 0x40001d, 10 bytes>
0x40001d:	mov	edi, 0x320
0x400022:	call	0x500000
<Block for 0x4000a6, 3 bytes>
0x4000a6:	nop	
0x4000a7:	leave	
0x4000a8:	ret	
<Block for 0x40009a, 12 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 0x10]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500018
<Block for 0x400027, 11 bytes>
0x400027:	mov	qword ptr [rbp - 0x10], rax
0x40002b:	cmp	qword ptr [rbp - 0x10], 0
0x400030:	jne	0x40003c
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0xffffffff
0x400037:	call	0x500008
<Block for 0x40003c, 10 bytes>
0x40003c:	mov	qword ptr [rbp - 8], 0
0x400044:	jmp	0x40007e
<Block for 0x40007e, 7 bytes>
0x40007e:	cmp	qword ptr [rbp - 8], 0x63
0x400083:	jbe	0x400046
<Block for 0x400046, 63 bytes>
0x400046:	mov	rax, qword ptr [rbp - 8]
0x40004a:	lea	rdx, [rax*8]
0x400052:	mov	rax, qword ptr [rbp - 0x10]
0x400056:	add	rax, rdx
0x400059:	mov	dword ptr [rax], 1
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	lea	rdx, [rax*8]
0x40006b:	mov	rax, qword ptr [rbp - 0x10]
0x40006f:	add	rax, rdx
0x400072:	mov	dword ptr [rax + 4], 2
0x400079:	add	qword ptr [rbp - 8], 1
0x40007e:	cmp	qword ptr [rbp - 8], 0x63
0x400083:	jbe	0x400046
<Block for 0x400085, 12 bytes>
0x400085:	mov	rax, qword ptr [rbp - 0x10]
0x400089:	mov	rdi, rax
0x40008c:	call	0x500010
