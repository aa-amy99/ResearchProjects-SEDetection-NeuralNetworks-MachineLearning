<Block for 0x4001d8, 40 bytes>
0x4001d8:	endbr64	
0x4001dc:	push	rbp
0x4001dd:	mov	rbp, rsp
0x4001e0:	add	rsp, -0x80
0x4001e4:	mov	rax, qword ptr fs:[0x28]
0x4001ed:	mov	qword ptr [rbp - 8], rax
0x4001f1:	xor	eax, eax
0x4001f3:	mov	qword ptr [rbp - 0x78], 0
0x4001fb:	call	0x400000
<Block for 0x400200, 9 bytes>
0x400200:	test	eax, eax
0x400202:	setne	al
0x400205:	test	al, al
0x400207:	je	0x400238
<Block for 0x400238, 22 bytes>
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	edx, 0x63
0x400241:	mov	esi, 0x43
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x400209, 10 bytes>
0x400209:	mov	edi, 0x64
0x40020e:	call	0x500000
<Block for 0x40024e, 16 bytes>
0x40024e:	mov	byte ptr [rbp - 0xd], 0
0x400252:	lea	rax, [rbp - 0x70]
0x400256:	mov	rdi, rax
0x400259:	call	0x500010
<Block for 0x400213, 26 bytes>
0x400213:	mov	qword ptr [rbp - 0x78], rax
0x400217:	mov	rax, qword ptr [rbp - 0x78]
0x40021b:	mov	edx, 0x63
0x400220:	mov	esi, 0x41
0x400225:	mov	rdi, rax
0x400228:	call	0x500008
<Block for 0x40025e, 22 bytes>
0x40025e:	mov	rdx, rax
0x400261:	mov	rcx, qword ptr [rbp - 0x78]
0x400265:	lea	rax, [rbp - 0x70]
0x400269:	mov	rsi, rcx
0x40026c:	mov	rdi, rax
0x40026f:	call	0x500018
<Block for 0x40022d, 33 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 0x78]
0x400231:	add	rax, 0x63
0x400235:	mov	byte ptr [rax], 0
0x400238:	lea	rax, [rbp - 0x70]
0x40023c:	mov	edx, 0x63
0x400241:	mov	esi, 0x43
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x400274, 16 bytes>
0x400274:	mov	byte ptr [rbp - 0xd], 0
0x400278:	lea	rax, [rbp - 0x70]
0x40027c:	mov	rdi, rax
0x40027f:	call	0x500020
<Block for 0x400284, 7 bytes>
0x400284:	cmp	qword ptr [rbp - 0x78], 0
0x400289:	je	0x400297
<Block for 0x400297, 16 bytes>
0x400297:	nop	
0x400298:	mov	rax, qword ptr [rbp - 8]
0x40029c:	xor	rax, qword ptr fs:[0x28]
0x4002a5:	je	0x4002ac
<Block for 0x40028b, 12 bytes>
0x40028b:	mov	rax, qword ptr [rbp - 0x78]
0x40028f:	mov	rdi, rax
0x400292:	call	0x500028
<Block for 0x4002ac, 2 bytes>
0x4002ac:	leave	
0x4002ad:	ret	
<Block for 0x4002a7, 5 bytes>
0x4002a7:	call	0x500030
