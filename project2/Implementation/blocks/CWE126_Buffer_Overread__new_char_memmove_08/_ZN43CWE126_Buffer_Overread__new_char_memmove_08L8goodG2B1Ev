<Block for 0x4000f4, 40 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	add	rsp, -0x80
0x400100:	mov	rax, qword ptr fs:[0x28]
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	xor	eax, eax
0x40010f:	mov	qword ptr [rbp - 0x78], 0
0x400117:	call	0x40000f
<Block for 0x40011c, 9 bytes>
0x40011c:	test	eax, eax
0x40011e:	setne	al
0x400121:	test	al, al
0x400123:	je	0x400133
<Block for 0x400133, 10 bytes>
0x400133:	mov	edi, 0x64
0x400138:	call	0x500000
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x197]
0x40012c:	call	0x500020
<Block for 0x40013d, 26 bytes>
0x40013d:	mov	qword ptr [rbp - 0x78], rax
0x400141:	mov	rax, qword ptr [rbp - 0x78]
0x400145:	mov	edx, 0x63
0x40014a:	mov	esi, 0x41
0x40014f:	mov	rdi, rax
0x400152:	call	0x500008
<Block for 0x400131, 2 bytes>
0x400131:	jmp	0x400162
<Block for 0x400157, 33 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x78]
0x40015b:	add	rax, 0x63
0x40015f:	mov	byte ptr [rax], 0
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500008
<Block for 0x400162, 22 bytes>
0x400162:	lea	rax, [rbp - 0x70]
0x400166:	mov	edx, 0x63
0x40016b:	mov	esi, 0x43
0x400170:	mov	rdi, rax
0x400173:	call	0x500008
<Block for 0x400178, 16 bytes>
0x400178:	mov	byte ptr [rbp - 0xd], 0
0x40017c:	lea	rax, [rbp - 0x70]
0x400180:	mov	rdi, rax
0x400183:	call	0x500010
<Block for 0x400188, 22 bytes>
0x400188:	mov	rdx, rax
0x40018b:	mov	rcx, qword ptr [rbp - 0x78]
0x40018f:	lea	rax, [rbp - 0x70]
0x400193:	mov	rsi, rcx
0x400196:	mov	rdi, rax
0x400199:	call	0x500018
<Block for 0x40019e, 16 bytes>
0x40019e:	mov	byte ptr [rbp - 0xd], 0
0x4001a2:	lea	rax, [rbp - 0x70]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500020
<Block for 0x4001ae, 7 bytes>
0x4001ae:	cmp	qword ptr [rbp - 0x78], 0
0x4001b3:	je	0x4001c1
<Block for 0x4001c1, 16 bytes>
0x4001c1:	nop	
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	xor	rax, qword ptr fs:[0x28]
0x4001cf:	je	0x4001d6
<Block for 0x4001b5, 12 bytes>
0x4001b5:	mov	rax, qword ptr [rbp - 0x78]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500028
<Block for 0x4001d6, 2 bytes>
0x4001d6:	leave	
0x4001d7:	ret	
<Block for 0x4001d1, 5 bytes>
0x4001d1:	call	0x500030
