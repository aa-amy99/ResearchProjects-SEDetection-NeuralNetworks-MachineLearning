<Block for 0x400066, 31 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x20
0x400072:	mov	qword ptr [rbp - 0x18], rdi
0x400076:	mov	rax, qword ptr [rbp - 0x18]
0x40007a:	mov	rax, qword ptr [rax]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500000
<Block for 0x400085, 16 bytes>
0x400085:	mov	qword ptr [rbp - 0x10], rax
0x400089:	lea	rdi, [rip + 0x3c]
0x400090:	call	0x500008
<Block for 0x400095, 11 bytes>
0x400095:	mov	qword ptr [rbp - 8], rax
0x400099:	cmp	qword ptr [rbp - 8], 0
0x40009e:	je	0x4000c9
<Block for 0x4000c9, 3 bytes>
0x4000c9:	nop	
0x4000ca:	leave	
0x4000cb:	ret	
<Block for 0x4000a0, 41 bytes>
0x4000a0:	mov	eax, 0x63
0x4000a5:	sub	rax, qword ptr [rbp - 0x10]
0x4000a9:	mov	rdx, rax
0x4000ac:	mov	rax, qword ptr [rbp - 0x18]
0x4000b0:	mov	rcx, qword ptr [rax]
0x4000b3:	mov	rax, qword ptr [rbp - 0x10]
0x4000b7:	add	rcx, rax
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	mov	rsi, rax
0x4000c1:	mov	rdi, rcx
0x4000c4:	call	0x500010
