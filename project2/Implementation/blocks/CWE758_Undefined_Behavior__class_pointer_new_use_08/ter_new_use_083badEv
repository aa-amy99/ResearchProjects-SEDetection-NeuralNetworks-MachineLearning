<Block for 0x40001e, 17 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	call	0x400000
<Block for 0x40002f, 9 bytes>
0x40002f:	test	eax, eax
0x400031:	setne	al
0x400034:	test	al, al
0x400036:	je	0x400082
<Block for 0x400082, 3 bytes>
0x400082:	nop	
0x400083:	leave	
0x400084:	ret	
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 8
0x40003d:	call	0x500000
<Block for 0x400042, 24 bytes>
0x400042:	mov	qword ptr [rbp - 0x10], rax
0x400046:	mov	rax, qword ptr [rbp - 0x10]
0x40004a:	mov	rax, qword ptr [rax]
0x40004d:	mov	qword ptr [rbp - 8], rax
0x400051:	mov	rax, qword ptr [rbp - 0x10]
0x400055:	test	rax, rax
0x400058:	je	0x400067
<Block for 0x400067, 13 bytes>
0x400067:	mov	rax, qword ptr [rbp - 8]
0x40006b:	mov	eax, dword ptr [rax]
0x40006d:	mov	edi, eax
0x40006f:	call	0x500010
<Block for 0x40005a, 13 bytes>
0x40005a:	mov	esi, 8
0x40005f:	mov	rdi, rax
0x400062:	call	0x500008
<Block for 0x400074, 14 bytes>
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	mov	eax, dword ptr [rax + 4]
0x40007b:	mov	edi, eax
0x40007d:	call	0x500010
