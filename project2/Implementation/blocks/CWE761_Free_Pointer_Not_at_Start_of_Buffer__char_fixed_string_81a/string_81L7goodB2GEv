<Block for 0x4000a1, 37 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x20
0x4000ad:	mov	rax, qword ptr fs:[0x28]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	xor	eax, eax
0x4000bc:	mov	edi, 0x64
0x4000c1:	call	0x500000
<Block for 0x4000c6, 11 bytes>
0x4000c6:	mov	qword ptr [rbp - 0x18], rax
0x4000ca:	cmp	qword ptr [rbp - 0x18], 0
0x4000cf:	jne	0x4000db
<Block for 0x4000d1, 10 bytes>
0x4000d1:	mov	edi, 0xffffffff
0x4000d6:	call	0x500008
<Block for 0x4000db, 80 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	mov	byte ptr [rax], 0
0x4000e2:	mov	rax, qword ptr [rbp - 0x18]
0x4000e6:	movabs	rsi, 0x7453206465786946
0x4000f0:	mov	qword ptr [rax], rsi
0x4000f3:	mov	dword ptr [rax + 8], 0x676e6972
0x4000fa:	mov	byte ptr [rax + 0xc], 0
0x4000fe:	lea	rax, [rip + 0xfff2b]
0x400105:	mov	qword ptr [rbp - 0x20], rax
0x400109:	lea	rax, [rbp - 0x20]
0x40010d:	mov	qword ptr [rbp - 0x10], rax
0x400111:	mov	rax, qword ptr [rbp - 0x10]
0x400115:	mov	rax, qword ptr [rax]
0x400118:	mov	rcx, qword ptr [rax]
0x40011b:	mov	rdx, qword ptr [rbp - 0x18]
0x40011f:	mov	rax, qword ptr [rbp - 0x10]
0x400123:	mov	rsi, rdx
0x400126:	mov	rdi, rax
0x400129:	call	rcx
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500018
