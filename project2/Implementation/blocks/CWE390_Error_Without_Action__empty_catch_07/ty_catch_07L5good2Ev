<Block for 0x4002af, 45 bytes>
0x4002af:	endbr64	
0x4002b3:	push	rbp
0x4002b4:	mov	rbp, rsp
0x4002b7:	push	r12
0x4002b9:	push	rbx
0x4002ba:	sub	rsp, 0x60
0x4002be:	mov	rax, qword ptr fs:[0x28]
0x4002c7:	mov	qword ptr [rbp - 0x18], rax
0x4002cb:	xor	eax, eax
0x4002cd:	mov	eax, dword ptr [rip + 0x1c1]
0x4002d3:	cmp	eax, 5
0x4002d6:	jne	0x4003f8
<Block for 0x4002dc, 12 bytes>
0x4002dc:	lea	rax, [rbp - 0x69]
0x4002e0:	mov	rdi, rax
0x4002e3:	call	0x500000
<Block for 0x4003f8, 16 bytes>
0x4003f8:	nop	
0x4003f9:	mov	rax, qword ptr [rbp - 0x18]
0x4003fd:	xor	rax, qword ptr fs:[0x28]
0x400406:	je	0x40040d
<Block for 0x4002e8, 23 bytes>
0x4002e8:	lea	rdx, [rbp - 0x69]
0x4002ec:	lea	rax, [rbp - 0x60]
0x4002f0:	lea	rsi, [rip + 0x1a3]
0x4002f7:	mov	rdi, rax
0x4002fa:	call	0x500008
<Block for 0x40040d, 9 bytes>
0x40040d:	add	rsp, 0x60
0x400411:	pop	rbx
0x400412:	pop	r12
0x400414:	pop	rbp
0x400415:	ret	
<Block for 0x400408, 5 bytes>
0x400408:	call	0x500058
<Block for 0x4002ff, 12 bytes>
0x4002ff:	lea	rax, [rbp - 0x69]
0x400303:	mov	rdi, rax
0x400306:	call	0x500010
<Block for 0x40030b, 5 bytes>
0x40030b:	call	0x500018
<Block for 0x400310, 8 bytes>
0x400310:	movsxd	rbx, eax
0x400313:	call	0x500018
<Block for 0x400318, 22 bytes>
0x400318:	movsxd	rdx, eax
0x40031b:	lea	rax, [rbp - 0x40]
0x40031f:	lea	rsi, [rbp - 0x60]
0x400323:	mov	rcx, rbx
0x400326:	mov	rdi, rax
0x400329:	call	0x500020
<Block for 0x40032e, 12 bytes>
0x40032e:	lea	rax, [rbp - 0x40]
0x400332:	mov	rdi, rax
0x400335:	call	0x500028
<Block for 0x40033a, 8 bytes>
0x40033a:	mov	rdi, rax
0x40033d:	call	0x500030
<Block for 0x400342, 12 bytes>
0x400342:	lea	rax, [rbp - 0x40]
0x400346:	mov	rdi, rax
0x400349:	call	0x500038
<Block for 0x40034e, 12 bytes>
0x40034e:	lea	rax, [rbp - 0x60]
0x400352:	mov	rdi, rax
0x400355:	call	0x500038
<Block for 0x40035a, 5 bytes>
0x40035a:	jmp	0x4003f8
