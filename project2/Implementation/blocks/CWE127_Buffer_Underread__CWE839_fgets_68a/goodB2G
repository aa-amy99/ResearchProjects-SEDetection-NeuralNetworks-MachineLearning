<Block for 0x4000cb, 79 bytes>
0x4000cb:	endbr64	
0x4000cf:	push	rbp
0x4000d0:	mov	rbp, rsp
0x4000d3:	sub	rsp, 0x20
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000ed:	mov	qword ptr [rbp - 0x16], 0
0x4000f5:	mov	dword ptr [rbp - 0xe], 0
0x4000fc:	mov	word ptr [rbp - 0xa], 0
0x400102:	mov	rdx, qword ptr [rip + 0xffef7]
0x400109:	lea	rax, [rbp - 0x16]
0x40010d:	mov	esi, 0xe
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x40011a, 5 bytes>
0x40011a:	test	rax, rax
0x40011d:	je	0x400130
<Block for 0x400130, 12 bytes>
0x400130:	lea	rdi, [rip + 0x4e]
0x400137:	call	0x500018
<Block for 0x40011f, 12 bytes>
0x40011f:	lea	rax, [rbp - 0x16]
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x40013c, 19 bytes>
0x40013c:	mov	eax, dword ptr [rbp - 0x1c]
0x40013f:	mov	dword ptr [rip - 0x141], eax
0x400145:	mov	eax, 0
0x40014a:	call	0x500038
<Block for 0x40012b, 5 bytes>
0x40012b:	mov	dword ptr [rbp - 0x1c], eax
0x40012e:	jmp	0x40013c
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500028
