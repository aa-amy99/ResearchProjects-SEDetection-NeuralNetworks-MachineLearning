<Block for 0x40009d, 57 bytes>
0x40009d:	endbr64	
0x4000a1:	push	rbp
0x4000a2:	mov	rbp, rsp
0x4000a5:	add	rsp, -0x80
0x4000a9:	mov	rax, qword ptr fs:[0x28]
0x4000b2:	mov	qword ptr [rbp - 8], rax
0x4000b6:	xor	eax, eax
0x4000b8:	mov	qword ptr [rbp - 0x78], 0
0x4000c0:	mov	dword ptr [rip + 0x132], 0
0x4000ca:	mov	rax, qword ptr [rbp - 0x78]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500028
<Block for 0x4000d6, 26 bytes>
0x4000d6:	mov	qword ptr [rbp - 0x78], rax
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	edx, 0x63
0x4000e3:	mov	esi, 0x43
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500008
<Block for 0x4000f0, 28 bytes>
0x4000f0:	mov	byte ptr [rbp - 0xd], 0
0x4000f4:	lea	rcx, [rbp - 0x70]
0x4000f8:	mov	rax, qword ptr [rbp - 0x78]
0x4000fc:	mov	edx, 0x63
0x400101:	mov	rsi, rcx
0x400104:	mov	rdi, rax
0x400107:	call	0x500010
<Block for 0x40010c, 23 bytes>
0x40010c:	mov	rax, qword ptr [rbp - 0x78]
0x400110:	add	rax, 0x63
0x400114:	mov	byte ptr [rax], 0
0x400117:	mov	rax, qword ptr [rbp - 0x78]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500018
<Block for 0x400123, 16 bytes>
0x400123:	nop	
0x400124:	mov	rax, qword ptr [rbp - 8]
0x400128:	xor	rax, qword ptr fs:[0x28]
0x400131:	je	0x400138
<Block for 0x400138, 2 bytes>
0x400138:	leave	
0x400139:	ret	
<Block for 0x400133, 5 bytes>
0x400133:	call	0x500020
