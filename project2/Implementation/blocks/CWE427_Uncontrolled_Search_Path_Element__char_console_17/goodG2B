<Block for 0x40018f, 82 bytes>
0x40018f:	endbr64	
0x400193:	push	rbp
0x400194:	mov	rbp, rsp
0x400197:	sub	rsp, 0x120
0x40019e:	mov	rax, qword ptr fs:[0x28]
0x4001a7:	mov	qword ptr [rbp - 8], rax
0x4001ab:	xor	eax, eax
0x4001ad:	movabs	rax, 0x3d48544150
0x4001b7:	mov	edx, 0
0x4001bc:	mov	qword ptr [rbp - 0x110], rax
0x4001c3:	mov	qword ptr [rbp - 0x108], rdx
0x4001ca:	lea	rdx, [rbp - 0x100]
0x4001d1:	mov	eax, 0
0x4001d6:	mov	ecx, 0x1d
0x4001db:	mov	rdi, rdx
0x4001de:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001e1, 36 bytes>
0x4001e1:	mov	rdx, rdi
0x4001e4:	mov	word ptr [rdx], ax
0x4001e7:	add	rdx, 2
0x4001eb:	lea	rax, [rbp - 0x110]
0x4001f2:	mov	qword ptr [rbp - 0x118], rax
0x4001f9:	mov	dword ptr [rbp - 0x11c], 0
0x400203:	jmp	0x400245
<Block for 0x4001de, 3 bytes>
0x4001de:	rep stosq	qword ptr [rdi], rax
<Block for 0x400245, 9 bytes>
0x400245:	cmp	dword ptr [rbp - 0x11c], 0
0x40024c:	jle	0x400205
<Block for 0x400205, 27 bytes>
0x400205:	mov	rax, qword ptr [rbp - 0x118]
0x40020c:	mov	rcx, -1
0x400213:	mov	rdx, rax
0x400216:	mov	eax, 0
0x40021b:	mov	rdi, rdx
0x40021e:	repne scasb	al, byte ptr [rdi]
<Block for 0x40024e, 15 bytes>
0x40024e:	mov	rax, qword ptr [rbp - 0x118]
0x400255:	mov	rdi, rax
0x400258:	call	0x500020
<Block for 0x400220, 46 bytes>
0x400220:	mov	rax, rcx
0x400223:	not	rax
0x400226:	lea	rdx, [rax - 1]
0x40022a:	mov	rax, qword ptr [rbp - 0x118]
0x400231:	add	rax, rdx
0x400234:	mov	dword ptr [rax], 0x6e69622f
0x40023a:	mov	byte ptr [rax + 4], 0
0x40023e:	add	dword ptr [rbp - 0x11c], 1
0x400245:	cmp	dword ptr [rbp - 0x11c], 0
0x40024c:	jle	0x400205
<Block for 0x40021e, 2 bytes>
0x40021e:	repne scasb	al, byte ptr [rdi]
<Block for 0x40025d, 16 bytes>
0x40025d:	nop	
0x40025e:	mov	rax, qword ptr [rbp - 8]
0x400262:	xor	rax, qword ptr fs:[0x28]
0x40026b:	je	0x400272
<Block for 0x400272, 2 bytes>
0x400272:	leave	
0x400273:	ret	
<Block for 0x40026d, 5 bytes>
0x40026d:	call	0x500028
