<Block for 0x400082, 54 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0xf0
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	lea	rax, [rbp - 0xe0]
0x4000a7:	mov	qword ptr [rbp - 0xe8], rax
0x4000ae:	mov	eax, dword ptr [rip + 0xfff6c]
0x4000b4:	test	eax, eax
0x4000b6:	je	0x4000c6
<Block for 0x4000c6, 32 bytes>
0x4000c6:	mov	rax, qword ptr [rbp - 0xe8]
0x4000cd:	mov	byte ptr [rax], 0
0x4000d0:	lea	rax, [rbp - 0x70]
0x4000d4:	mov	edx, 0x63
0x4000d9:	mov	esi, 0x43
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500000
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rdi, [rip + 0x11c]
0x4000bf:	call	0x500010
<Block for 0x4000e6, 26 bytes>
0x4000e6:	mov	byte ptr [rbp - 0xd], 0
0x4000ea:	lea	rdx, [rbp - 0x70]
0x4000ee:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500008
<Block for 0x4000c4, 2 bytes>
0x4000c4:	jmp	0x4000d0
<Block for 0x400100, 15 bytes>
0x400100:	mov	rax, qword ptr [rbp - 0xe8]
0x400107:	mov	rdi, rax
0x40010a:	call	0x500010
<Block for 0x4000d0, 22 bytes>
0x4000d0:	lea	rax, [rbp - 0x70]
0x4000d4:	mov	edx, 0x63
0x4000d9:	mov	esi, 0x43
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500000
<Block for 0x40010f, 16 bytes>
0x40010f:	nop	
0x400110:	mov	rax, qword ptr [rbp - 8]
0x400114:	xor	rax, qword ptr fs:[0x28]
0x40011d:	je	0x400124
<Block for 0x400124, 2 bytes>
0x400124:	leave	
0x400125:	ret	
<Block for 0x40011f, 5 bytes>
0x40011f:	call	0x500018
