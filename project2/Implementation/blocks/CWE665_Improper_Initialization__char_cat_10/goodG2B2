<Block for 0x400126, 54 bytes>
0x400126:	endbr64	
0x40012a:	push	rbp
0x40012b:	mov	rbp, rsp
0x40012e:	sub	rsp, 0xf0
0x400135:	mov	rax, qword ptr fs:[0x28]
0x40013e:	mov	qword ptr [rbp - 8], rax
0x400142:	xor	eax, eax
0x400144:	lea	rax, [rbp - 0xe0]
0x40014b:	mov	qword ptr [rbp - 0xe8], rax
0x400152:	mov	eax, dword ptr [rip + 0xffed0]
0x400158:	test	eax, eax
0x40015a:	je	0x400166
<Block for 0x400166, 22 bytes>
0x400166:	lea	rax, [rbp - 0x70]
0x40016a:	mov	edx, 0x63
0x40016f:	mov	esi, 0x43
0x400174:	mov	rdi, rax
0x400177:	call	0x500000
<Block for 0x40015c, 32 bytes>
0x40015c:	mov	rax, qword ptr [rbp - 0xe8]
0x400163:	mov	byte ptr [rax], 0
0x400166:	lea	rax, [rbp - 0x70]
0x40016a:	mov	edx, 0x63
0x40016f:	mov	esi, 0x43
0x400174:	mov	rdi, rax
0x400177:	call	0x500000
<Block for 0x40017c, 26 bytes>
0x40017c:	mov	byte ptr [rbp - 0xd], 0
0x400180:	lea	rdx, [rbp - 0x70]
0x400184:	mov	rax, qword ptr [rbp - 0xe8]
0x40018b:	mov	rsi, rdx
0x40018e:	mov	rdi, rax
0x400191:	call	0x500008
<Block for 0x400196, 15 bytes>
0x400196:	mov	rax, qword ptr [rbp - 0xe8]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500010
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x4001ba, 2 bytes>
0x4001ba:	leave	
0x4001bb:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500018
