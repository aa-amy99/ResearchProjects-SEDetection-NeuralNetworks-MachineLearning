<Block for 0x40001e, 148 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	add	rsp, -0x80
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	qword ptr [rbp - 0x70], 0
0x400041:	mov	qword ptr [rbp - 0x68], 0
0x400049:	mov	qword ptr [rbp - 0x60], 0
0x400051:	mov	qword ptr [rbp - 0x58], 0
0x400059:	mov	qword ptr [rbp - 0x50], 0
0x400061:	mov	qword ptr [rbp - 0x48], 0
0x400069:	mov	qword ptr [rbp - 0x40], 0
0x400071:	mov	qword ptr [rbp - 0x38], 0
0x400079:	mov	qword ptr [rbp - 0x30], 0
0x400081:	mov	qword ptr [rbp - 0x28], 0
0x400089:	mov	qword ptr [rbp - 0x20], 0
0x400091:	mov	qword ptr [rbp - 0x18], 0
0x400099:	mov	dword ptr [rbp - 0x10], 0
0x4000a0:	lea	rax, [rbp - 0x70]
0x4000a4:	mov	qword ptr [rbp - 0x80], rax
0x4000a8:	mov	eax, 0
0x4000ad:	call	0x400000
<Block for 0x4000b2, 4 bytes>
0x4000b2:	test	eax, eax
0x4000b4:	je	0x4000ca
<Block for 0x4000ca, 19 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 0x80]
0x4000ce:	lea	rsi, [rip + 0x253]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500000
<Block for 0x4000b6, 39 bytes>
0x4000b6:	mov	rax, qword ptr [rbp - 0x80]
0x4000ba:	mov	dword ptr [rax], 0x2d20736c
0x4000c0:	mov	word ptr [rax + 4], 0x616c
0x4000c6:	mov	byte ptr [rax + 6], 0
0x4000ca:	mov	rax, qword ptr [rbp - 0x80]
0x4000ce:	lea	rsi, [rip + 0x253]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500000
<Block for 0x4000dd, 11 bytes>
0x4000dd:	mov	qword ptr [rbp - 0x78], rax
0x4000e1:	cmp	qword ptr [rbp - 0x78], 0
0x4000e6:	je	0x4000f4
<Block for 0x4000f4, 16 bytes>
0x4000f4:	nop	
0x4000f5:	mov	rax, qword ptr [rbp - 8]
0x4000f9:	xor	rax, qword ptr fs:[0x28]
0x400102:	je	0x400109
<Block for 0x4000e8, 12 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x78]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500008
<Block for 0x400109, 2 bytes>
0x400109:	leave	
0x40010a:	ret	
<Block for 0x400104, 5 bytes>
0x400104:	call	0x500010
