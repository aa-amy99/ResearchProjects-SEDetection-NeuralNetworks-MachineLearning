<Block for 0x40001e, 25 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	qword ptr [rbp - 0x10], 0
0x400032:	call	0x400000
<Block for 0x400037, 9 bytes>
0x400037:	test	eax, eax
0x400039:	setne	al
0x40003c:	test	al, al
0x40003e:	je	0x4000aa
<Block for 0x4000aa, 5 bytes>
0x4000aa:	call	0x400000
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 0x320
0x400045:	call	0x500000
<Block for 0x4000af, 9 bytes>
0x4000af:	test	eax, eax
0x4000b1:	setne	al
0x4000b4:	test	al, al
0x4000b6:	je	0x4000c4
<Block for 0x40004a, 19 bytes>
0x40004a:	mov	qword ptr [rbp - 0x10], rax
0x40004e:	mov	qword ptr [rbp - 8], 0
0x400056:	cmp	qword ptr [rbp - 8], 0x63
0x40005b:	ja	0x400097
<Block for 0x4000c4, 3 bytes>
0x4000c4:	nop	
0x4000c5:	leave	
0x4000c6:	ret	
<Block for 0x4000b8, 12 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500010
<Block for 0x40005d, 58 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	lea	rdx, [rax*8]
0x400069:	mov	rax, qword ptr [rbp - 0x10]
0x40006d:	add	rax, rdx
0x400070:	mov	dword ptr [rax], 1
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	lea	rdx, [rax*8]
0x400082:	mov	rax, qword ptr [rbp - 0x10]
0x400086:	add	rax, rdx
0x400089:	mov	dword ptr [rax + 4], 2
0x400090:	add	qword ptr [rbp - 8], 1
0x400095:	jmp	0x400056
<Block for 0x400097, 7 bytes>
0x400097:	cmp	qword ptr [rbp - 0x10], 0
0x40009c:	je	0x4000aa
<Block for 0x400056, 7 bytes>
0x400056:	cmp	qword ptr [rbp - 8], 0x63
0x40005b:	ja	0x400097
<Block for 0x40009e, 12 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 0x10]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500008
