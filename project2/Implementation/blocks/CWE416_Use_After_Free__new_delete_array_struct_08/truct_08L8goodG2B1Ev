<Block for 0x400206, 25 bytes>
0x400206:	endbr64	
0x40020a:	push	rbp
0x40020b:	mov	rbp, rsp
0x40020e:	sub	rsp, 0x10
0x400212:	mov	qword ptr [rbp - 0x10], 0
0x40021a:	call	0x40000f
<Block for 0x40021f, 9 bytes>
0x40021f:	test	eax, eax
0x400221:	setne	al
0x400224:	test	al, al
0x400226:	je	0x400236
<Block for 0x400236, 10 bytes>
0x400236:	mov	edi, 0x320
0x40023b:	call	0x500000
<Block for 0x400228, 12 bytes>
0x400228:	lea	rdi, [rip + 0x130]
0x40022f:	call	0x500018
<Block for 0x400240, 19 bytes>
0x400240:	mov	qword ptr [rbp - 0x10], rax
0x400244:	mov	qword ptr [rbp - 8], 0
0x40024c:	cmp	qword ptr [rbp - 8], 0x63
0x400251:	ja	0x40028d
<Block for 0x400234, 2 bytes>
0x400234:	jmp	0x40028d
<Block for 0x400253, 58 bytes>
0x400253:	mov	rax, qword ptr [rbp - 8]
0x400257:	lea	rdx, [rax*8]
0x40025f:	mov	rax, qword ptr [rbp - 0x10]
0x400263:	add	rax, rdx
0x400266:	mov	dword ptr [rax], 1
0x40026c:	mov	rax, qword ptr [rbp - 8]
0x400270:	lea	rdx, [rax*8]
0x400278:	mov	rax, qword ptr [rbp - 0x10]
0x40027c:	add	rax, rdx
0x40027f:	mov	dword ptr [rax + 4], 2
0x400286:	add	qword ptr [rbp - 8], 1
0x40028b:	jmp	0x40024c
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x400000
<Block for 0x40024c, 7 bytes>
0x40024c:	cmp	qword ptr [rbp - 8], 0x63
0x400251:	ja	0x40028d
<Block for 0x400292, 9 bytes>
0x400292:	test	eax, eax
0x400294:	setne	al
0x400297:	test	al, al
0x400299:	je	0x4002a7
<Block for 0x4002a7, 3 bytes>
0x4002a7:	nop	
0x4002a8:	leave	
0x4002a9:	ret	
<Block for 0x40029b, 12 bytes>
0x40029b:	mov	rax, qword ptr [rbp - 0x10]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500010
