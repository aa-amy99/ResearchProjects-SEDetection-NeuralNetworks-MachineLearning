<Block for 0x4000d5, 87 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0xa0
0x4000e4:	mov	qword ptr [rbp - 0x98], rdi
0x4000eb:	mov	rax, qword ptr fs:[0x28]
0x4000f4:	mov	qword ptr [rbp - 8], rax
0x4000f8:	xor	eax, eax
0x4000fa:	mov	rax, qword ptr [rbp - 0x98]
0x400101:	mov	qword ptr [rbp - 0x88], rax
0x400108:	mov	rax, qword ptr [rbp - 0x88]
0x40010f:	mov	rax, qword ptr [rax]
0x400112:	mov	qword ptr [rbp - 0x80], rax
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x43
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x40012c, 16 bytes>
0x40012c:	mov	byte ptr [rbp - 0xd], 0
0x400130:	lea	rax, [rbp - 0x70]
0x400134:	mov	rdi, rax
0x400137:	call	0x500008
<Block for 0x40013c, 17 bytes>
0x40013c:	mov	qword ptr [rbp - 0x78], rax
0x400140:	mov	qword ptr [rbp - 0x90], 0
0x40014b:	jmp	0x400176
<Block for 0x400176, 13 bytes>
0x400176:	mov	rax, qword ptr [rbp - 0x90]
0x40017d:	cmp	rax, qword ptr [rbp - 0x78]
0x400181:	jb	0x40014d
<Block for 0x40014d, 54 bytes>
0x40014d:	mov	rdx, qword ptr [rbp - 0x80]
0x400151:	mov	rax, qword ptr [rbp - 0x90]
0x400158:	add	rax, rdx
0x40015b:	movzx	eax, byte ptr [rax]
0x40015e:	lea	rcx, [rbp - 0x70]
0x400162:	mov	rdx, qword ptr [rbp - 0x90]
0x400169:	add	rdx, rcx
0x40016c:	mov	byte ptr [rdx], al
0x40016e:	add	qword ptr [rbp - 0x90], 1
0x400176:	mov	rax, qword ptr [rbp - 0x90]
0x40017d:	cmp	rax, qword ptr [rbp - 0x78]
0x400181:	jb	0x40014d
<Block for 0x400183, 16 bytes>
0x400183:	mov	byte ptr [rbp - 0xd], 0
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500010
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500018
