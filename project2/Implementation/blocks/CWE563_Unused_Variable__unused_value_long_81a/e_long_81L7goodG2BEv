<Block for 0x400067, 47 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x20
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	qword ptr [rbp - 0x18], 5
0x40008a:	mov	rax, qword ptr [rbp - 0x18]
0x40008e:	mov	rdi, rax
0x400091:	call	0x500010
<Block for 0x400096, 45 bytes>
0x400096:	lea	rax, [rip + 0xfff8b]
0x40009d:	mov	qword ptr [rbp - 0x20], rax
0x4000a1:	lea	rax, [rbp - 0x20]
0x4000a5:	mov	qword ptr [rbp - 0x10], rax
0x4000a9:	mov	rax, qword ptr [rbp - 0x10]
0x4000ad:	mov	rax, qword ptr [rax]
0x4000b0:	mov	rcx, qword ptr [rax]
0x4000b3:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b7:	mov	rax, qword ptr [rbp - 0x10]
0x4000bb:	mov	rsi, rdx
0x4000be:	mov	rdi, rax
0x4000c1:	call	rcx
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500008
