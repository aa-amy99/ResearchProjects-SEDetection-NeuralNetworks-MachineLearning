<Block for 0x4000da, 80 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	sub	rsp, 0x20
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	qword ptr [rbp - 0x18], 5
0x4000fd:	lea	rax, [rip + 0xfff2c]
0x400104:	mov	qword ptr [rbp - 0x20], rax
0x400108:	lea	rax, [rbp - 0x20]
0x40010c:	mov	qword ptr [rbp - 0x10], rax
0x400110:	mov	rax, qword ptr [rbp - 0x10]
0x400114:	mov	rax, qword ptr [rax]
0x400117:	mov	rcx, qword ptr [rax]
0x40011a:	mov	rdx, qword ptr [rbp - 0x18]
0x40011e:	mov	rax, qword ptr [rbp - 0x10]
0x400122:	mov	rsi, rdx
0x400125:	mov	rdi, rax
0x400128:	call	rcx
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500008
