<Block for 0x40008c, 25 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	sub	rsp, 0x10
0x400098:	mov	qword ptr [rbp - 8], 0
0x4000a0:	call	0x400000
<Block for 0x4000a5, 9 bytes>
0x4000a5:	test	eax, eax
0x4000a7:	setne	al
0x4000aa:	test	al, al
0x4000ac:	je	0x4000dc
<Block for 0x4000dc, 5 bytes>
0x4000dc:	call	0x40000f
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 4
0x4000b3:	call	0x500000
<Block for 0x4000e1, 9 bytes>
0x4000e1:	test	eax, eax
0x4000e3:	setne	al
0x4000e6:	test	al, al
0x4000e8:	je	0x4000f6
<Block for 0x4000b8, 23 bytes>
0x4000b8:	mov	qword ptr [rbp - 8], rax
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	mov	dword ptr [rax], 5
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	test	rax, rax
0x4000cd:	je	0x4000dc
<Block for 0x4000f6, 3 bytes>
0x4000f6:	nop	
0x4000f7:	leave	
0x4000f8:	ret	
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0x13f]
0x4000f1:	call	0x500018
<Block for 0x4000cf, 13 bytes>
0x4000cf:	mov	esi, 4
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500008
