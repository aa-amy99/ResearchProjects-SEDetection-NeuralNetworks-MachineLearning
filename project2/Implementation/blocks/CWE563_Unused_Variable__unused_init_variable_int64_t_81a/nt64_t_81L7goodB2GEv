<Block for 0x400067, 80 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x20
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	qword ptr [rbp - 0x18], 5
0x40008a:	lea	rax, [rip + 0xfff8f]
0x400091:	mov	qword ptr [rbp - 0x20], rax
0x400095:	lea	rax, [rbp - 0x20]
0x400099:	mov	qword ptr [rbp - 0x10], rax
0x40009d:	mov	rax, qword ptr [rbp - 0x10]
0x4000a1:	mov	rax, qword ptr [rax]
0x4000a4:	mov	rcx, qword ptr [rax]
0x4000a7:	mov	rdx, qword ptr [rbp - 0x18]
0x4000ab:	mov	rax, qword ptr [rbp - 0x10]
0x4000af:	mov	rsi, rdx
0x4000b2:	mov	rdi, rax
0x4000b5:	call	rcx
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500008
