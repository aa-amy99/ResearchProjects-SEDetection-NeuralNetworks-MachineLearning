<Block for 0x4000cf, 46 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	sub	rsp, 0x20
0x4000db:	mov	rax, qword ptr fs:[0x28]
0x4000e4:	mov	qword ptr [rbp - 8], rax
0x4000e8:	xor	eax, eax
0x4000ea:	mov	qword ptr [rbp - 0x10], 0
0x4000f2:	mov	eax, dword ptr [rip + 0x58]
0x4000f8:	cmp	eax, 5
0x4000fb:	jne	0x40010c
<Block for 0x4000fd, 28 bytes>
0x4000fd:	mov	dword ptr [rbp - 0x14], 8
0x400104:	lea	rax, [rbp - 0x14]
0x400108:	mov	qword ptr [rbp - 0x10], rax
0x40010c:	mov	rax, qword ptr [rbp - 0x10]
0x400110:	mov	eax, dword ptr [rax]
0x400112:	mov	edi, eax
0x400114:	call	0x500000
<Block for 0x40010c, 13 bytes>
0x40010c:	mov	rax, qword ptr [rbp - 0x10]
0x400110:	mov	eax, dword ptr [rax]
0x400112:	mov	edi, eax
0x400114:	call	0x500000
<Block for 0x400119, 16 bytes>
0x400119:	nop	
0x40011a:	mov	rax, qword ptr [rbp - 8]
0x40011e:	xor	rax, qword ptr fs:[0x28]
0x400127:	je	0x40012e
<Block for 0x40012e, 2 bytes>
0x40012e:	leave	
0x40012f:	ret	
<Block for 0x400129, 5 bytes>
0x400129:	call	0x500008
