<Block for 0x400000, 35 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	nop	
0x40000d:	endbr64	
0x400011:	mov	qword ptr [rbp - 8], 0
0x400019:	mov	edi, 4
0x40001e:	call	0x500000
<Block for 0x400023, 27 bytes>
0x400023:	mov	qword ptr [rbp - 8], rax
0x400027:	mov	rax, qword ptr [rbp - 8]
0x40002b:	mov	dword ptr [rax], 5
0x400031:	mov	rax, qword ptr [rbp - 8]
0x400035:	mov	eax, dword ptr [rax]
0x400037:	mov	edi, eax
0x400039:	call	0x500008
<Block for 0x40003e, 7 bytes>
0x40003e:	cmp	qword ptr [rbp - 8], 0
0x400043:	je	0x40004f
<Block for 0x40004f, 13 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 8]
0x400053:	mov	eax, dword ptr [rax]
0x400055:	mov	edi, eax
0x400057:	call	0x500008
<Block for 0x400045, 23 bytes>
0x400045:	mov	rax, qword ptr [rbp - 8]
0x400049:	mov	dword ptr [rax], 0xa
0x40004f:	mov	rax, qword ptr [rbp - 8]
0x400053:	mov	eax, dword ptr [rax]
0x400055:	mov	edi, eax
0x400057:	call	0x500008
<Block for 0x40005c, 3 bytes>
0x40005c:	nop	
0x40005d:	leave	
0x40005e:	ret	
