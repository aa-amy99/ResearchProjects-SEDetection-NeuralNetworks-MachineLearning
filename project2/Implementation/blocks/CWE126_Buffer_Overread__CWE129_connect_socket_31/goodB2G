<Block for 0x4001fb, 61 bytes>
0x4001fb:	endbr64	
0x4001ff:	push	rbp
0x400200:	mov	rbp, rsp
0x400203:	sub	rsp, 0x60
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 8], rax
0x400214:	xor	eax, eax
0x400216:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40021d:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400224:	mov	edx, 6
0x400229:	mov	esi, 1
0x40022e:	mov	edi, 2
0x400233:	call	0x500000
<Block for 0x400238, 13 bytes>
0x400238:	mov	dword ptr [rbp - 0x50], eax
0x40023b:	cmp	dword ptr [rbp - 0x50], -1
0x40023f:	je	0x4002db
<Block for 0x4002db, 3 bytes>
0x4002db:	nop	
0x4002dc:	jmp	0x4002df
<Block for 0x400245, 22 bytes>
0x400245:	lea	rax, [rbp - 0x40]
0x400249:	mov	edx, 0x10
0x40024e:	mov	esi, 0
0x400253:	mov	rdi, rax
0x400256:	call	0x500008
<Block for 0x4002df, 6 bytes>
0x4002df:	cmp	dword ptr [rbp - 0x50], -1
0x4002e3:	je	0x4002ef
<Block for 0x40025b, 18 bytes>
0x40025b:	mov	word ptr [rbp - 0x40], 2
0x400261:	lea	rdi, [rip + 0x120]
0x400268:	call	0x500010
<Block for 0x4002ef, 58 bytes>
0x4002ef:	mov	eax, dword ptr [rbp - 0x54]
0x4002f2:	mov	dword ptr [rbp - 0x48], eax
0x4002f5:	mov	eax, dword ptr [rbp - 0x48]
0x4002f8:	mov	dword ptr [rbp - 0x44], eax
0x4002fb:	mov	qword ptr [rbp - 0x40], 0
0x400303:	mov	qword ptr [rbp - 0x38], 0
0x40030b:	mov	qword ptr [rbp - 0x30], 0
0x400313:	mov	qword ptr [rbp - 0x28], 0
0x40031b:	mov	qword ptr [rbp - 0x20], 0
0x400323:	cmp	dword ptr [rbp - 0x44], 0
0x400327:	js	0x400341
<Block for 0x4002e5, 10 bytes>
0x4002e5:	mov	eax, dword ptr [rbp - 0x50]
0x4002e8:	mov	edi, eax
0x4002ea:	call	0x500038
<Block for 0x40026d, 13 bytes>
0x40026d:	mov	dword ptr [rbp - 0x3c], eax
0x400270:	mov	edi, 0x6987
0x400275:	call	0x500018
<Block for 0x400341, 12 bytes>
0x400341:	lea	rdi, [rip + 0x70]
0x400348:	call	0x500048
<Block for 0x400329, 6 bytes>
0x400329:	cmp	dword ptr [rbp - 0x44], 9
0x40032d:	jg	0x400341
<Block for 0x40027a, 26 bytes>
0x40027a:	mov	word ptr [rbp - 0x3e], ax
0x40027e:	lea	rcx, [rbp - 0x40]
0x400282:	mov	eax, dword ptr [rbp - 0x50]
0x400285:	mov	edx, 0x10
0x40028a:	mov	rsi, rcx
0x40028d:	mov	edi, eax
0x40028f:	call	0x500020
<Block for 0x40034d, 16 bytes>
0x40034d:	nop	
0x40034e:	mov	rax, qword ptr [rbp - 8]
0x400352:	xor	rax, qword ptr fs:[0x28]
0x40035b:	je	0x400362
<Block for 0x40032f, 16 bytes>
0x40032f:	mov	eax, dword ptr [rbp - 0x44]
0x400332:	cdqe	
0x400334:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400338:	mov	edi, eax
0x40033a:	call	0x500040
<Block for 0x400294, 5 bytes>
0x400294:	cmp	eax, -1
0x400297:	je	0x4002de
<Block for 0x400362, 2 bytes>
0x400362:	leave	
0x400363:	ret	
<Block for 0x40035d, 5 bytes>
0x40035d:	call	0x500050
<Block for 0x40033f, 2 bytes>
0x40033f:	jmp	0x40034d
<Block for 0x400299, 24 bytes>
0x400299:	lea	rsi, [rbp - 0x16]
0x40029d:	mov	eax, dword ptr [rbp - 0x50]
0x4002a0:	mov	ecx, 0
0x4002a5:	mov	edx, 0xd
0x4002aa:	mov	edi, eax
0x4002ac:	call	0x500028
<Block for 0x4002de, 1 bytes>
0x4002de:	nop	
<Block for 0x4002b1, 9 bytes>
0x4002b1:	mov	dword ptr [rbp - 0x4c], eax
0x4002b4:	cmp	dword ptr [rbp - 0x4c], -1
0x4002b8:	je	0x4002df
<Block for 0x4002ba, 6 bytes>
0x4002ba:	cmp	dword ptr [rbp - 0x4c], 0
0x4002be:	je	0x4002df
<Block for 0x4002c0, 22 bytes>
0x4002c0:	mov	eax, dword ptr [rbp - 0x4c]
0x4002c3:	cdqe	
0x4002c5:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002ca:	lea	rax, [rbp - 0x16]
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x500030
<Block for 0x4002d6, 5 bytes>
0x4002d6:	mov	dword ptr [rbp - 0x54], eax
0x4002d9:	jmp	0x4002df
