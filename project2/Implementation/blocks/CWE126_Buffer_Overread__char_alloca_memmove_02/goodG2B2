<Block for 0x4003bf, 84 bytes>
0x4003bf:	endbr64	
0x4003c3:	push	rbp
0x4003c4:	mov	rbp, rsp
0x4003c7:	sub	rsp, 0x90
0x4003ce:	mov	rax, qword ptr fs:[0x28]
0x4003d7:	mov	qword ptr [rbp - 8], rax
0x4003db:	xor	eax, eax
0x4003dd:	mov	eax, 0x10
0x4003e2:	sub	rax, 1
0x4003e6:	add	rax, 0x3a
0x4003ea:	mov	ecx, 0x10
0x4003ef:	mov	edx, 0
0x4003f4:	div	rcx
0x4003f7:	imul	rax, rax, 0x10
0x4003fb:	mov	rdx, rax
0x4003fe:	and	rdx, 0xfffffffffffff000
0x400405:	mov	rcx, rsp
0x400408:	sub	rcx, rdx
0x40040b:	mov	rdx, rcx
0x40040e:	cmp	rsp, rdx
0x400411:	je	0x400425
<Block for 0x400425, 26 bytes>
0x400425:	mov	rdx, rax
0x400428:	and	edx, 0xfff
0x40042e:	sub	rsp, rdx
0x400431:	mov	rdx, rax
0x400434:	and	edx, 0xfff
0x40043a:	test	rdx, rdx
0x40043d:	je	0x40044f
<Block for 0x400413, 18 bytes>
0x400413:	sub	rsp, 0x1000
0x40041a:	or	qword ptr [rsp + 0xff8], 0
0x400423:	jmp	0x40040e
<Block for 0x40044f, 76 bytes>
0x40044f:	mov	rax, rsp
0x400452:	add	rax, 0xf
0x400456:	shr	rax, 4
0x40045a:	shl	rax, 4
0x40045e:	mov	qword ptr [rbp - 0x88], rax
0x400465:	mov	eax, 0x10
0x40046a:	sub	rax, 1
0x40046e:	add	rax, 0x6c
0x400472:	mov	edi, 0x10
0x400477:	mov	edx, 0
0x40047c:	div	rdi
0x40047f:	imul	rax, rax, 0x10
0x400483:	mov	rdx, rax
0x400486:	and	rdx, 0xfffffffffffff000
0x40048d:	mov	rsi, rsp
0x400490:	sub	rsi, rdx
0x400493:	mov	rdx, rsi
0x400496:	cmp	rsp, rdx
0x400499:	je	0x4004ad
<Block for 0x40043f, 92 bytes>
0x40043f:	and	eax, 0xfff
0x400444:	sub	rax, 8
0x400448:	add	rax, rsp
0x40044b:	or	qword ptr [rax], 0
0x40044f:	mov	rax, rsp
0x400452:	add	rax, 0xf
0x400456:	shr	rax, 4
0x40045a:	shl	rax, 4
0x40045e:	mov	qword ptr [rbp - 0x88], rax
0x400465:	mov	eax, 0x10
0x40046a:	sub	rax, 1
0x40046e:	add	rax, 0x6c
0x400472:	mov	edi, 0x10
0x400477:	mov	edx, 0
0x40047c:	div	rdi
0x40047f:	imul	rax, rax, 0x10
0x400483:	mov	rdx, rax
0x400486:	and	rdx, 0xfffffffffffff000
0x40048d:	mov	rsi, rsp
0x400490:	sub	rsi, rdx
0x400493:	mov	rdx, rsi
0x400496:	cmp	rsp, rdx
0x400499:	je	0x4004ad
<Block for 0x40040e, 5 bytes>
0x40040e:	cmp	rsp, rdx
0x400411:	je	0x400425
<Block for 0x4004ad, 26 bytes>
0x4004ad:	mov	rdx, rax
0x4004b0:	and	edx, 0xfff
0x4004b6:	sub	rsp, rdx
0x4004b9:	mov	rdx, rax
0x4004bc:	and	edx, 0xfff
0x4004c2:	test	rdx, rdx
0x4004c5:	je	0x4004d7
<Block for 0x40049b, 18 bytes>
0x40049b:	sub	rsp, 0x1000
0x4004a2:	or	qword ptr [rsp + 0xff8], 0
0x4004ab:	jmp	0x400496
<Block for 0x4004d7, 44 bytes>
0x4004d7:	mov	rax, rsp
0x4004da:	add	rax, 0xf
0x4004de:	shr	rax, 4
0x4004e2:	shl	rax, 4
0x4004e6:	mov	qword ptr [rbp - 0x80], rax
0x4004ea:	mov	rax, qword ptr [rbp - 0x88]
0x4004f1:	mov	edx, 0x31
0x4004f6:	mov	esi, 0x41
0x4004fb:	mov	rdi, rax
0x4004fe:	call	0x500000
<Block for 0x4004c7, 60 bytes>
0x4004c7:	and	eax, 0xfff
0x4004cc:	sub	rax, 8
0x4004d0:	add	rax, rsp
0x4004d3:	or	qword ptr [rax], 0
0x4004d7:	mov	rax, rsp
0x4004da:	add	rax, 0xf
0x4004de:	shr	rax, 4
0x4004e2:	shl	rax, 4
0x4004e6:	mov	qword ptr [rbp - 0x80], rax
0x4004ea:	mov	rax, qword ptr [rbp - 0x88]
0x4004f1:	mov	edx, 0x31
0x4004f6:	mov	esi, 0x41
0x4004fb:	mov	rdi, rax
0x4004fe:	call	0x500000
<Block for 0x400496, 5 bytes>
0x400496:	cmp	rsp, rdx
0x400499:	je	0x4004ad
<Block for 0x400503, 36 bytes>
0x400503:	mov	rax, qword ptr [rbp - 0x88]
0x40050a:	add	rax, 0x31
0x40050e:	mov	byte ptr [rax], 0
0x400511:	mov	rax, qword ptr [rbp - 0x80]
0x400515:	mov	edx, 0x63
0x40051a:	mov	esi, 0x41
0x40051f:	mov	rdi, rax
0x400522:	call	0x500000
<Block for 0x400527, 41 bytes>
0x400527:	mov	rax, qword ptr [rbp - 0x80]
0x40052b:	add	rax, 0x63
0x40052f:	mov	byte ptr [rax], 0
0x400532:	mov	rax, qword ptr [rbp - 0x80]
0x400536:	mov	qword ptr [rbp - 0x78], rax
0x40053a:	lea	rax, [rbp - 0x70]
0x40053e:	mov	edx, 0x63
0x400543:	mov	esi, 0x43
0x400548:	mov	rdi, rax
0x40054b:	call	0x500000
<Block for 0x400550, 16 bytes>
0x400550:	mov	byte ptr [rbp - 0xd], 0
0x400554:	lea	rax, [rbp - 0x70]
0x400558:	mov	rdi, rax
0x40055b:	call	0x500008
<Block for 0x400560, 22 bytes>
0x400560:	mov	rdx, rax
0x400563:	mov	rcx, qword ptr [rbp - 0x78]
0x400567:	lea	rax, [rbp - 0x70]
0x40056b:	mov	rsi, rcx
0x40056e:	mov	rdi, rax
0x400571:	call	0x500010
<Block for 0x400576, 16 bytes>
0x400576:	mov	byte ptr [rbp - 0xd], 0
0x40057a:	lea	rax, [rbp - 0x70]
0x40057e:	mov	rdi, rax
0x400581:	call	0x500018
<Block for 0x400586, 16 bytes>
0x400586:	nop	
0x400587:	mov	rax, qword ptr [rbp - 8]
0x40058b:	xor	rax, qword ptr fs:[0x28]
0x400594:	je	0x40059b
<Block for 0x40059b, 2 bytes>
0x40059b:	leave	
0x40059c:	ret	
<Block for 0x400596, 5 bytes>
0x400596:	call	0x500020
