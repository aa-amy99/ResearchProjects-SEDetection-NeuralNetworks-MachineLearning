<Block for 0x400000, 72 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x38], rax
0x400026:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40002d:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400034:	mov	edx, 6
0x400039:	mov	esi, 1
0x40003e:	mov	edi, 2
0x400043:	call	0x500010
<Block for 0x400048, 13 bytes>
0x400048:	mov	dword ptr [rbp - 0x40], eax
0x40004b:	cmp	dword ptr [rbp - 0x40], -1
0x40004f:	je	0x4000f0
<Block for 0x4000f0, 3 bytes>
0x4000f0:	nop	
0x4000f1:	jmp	0x4000f4
<Block for 0x400055, 22 bytes>
0x400055:	lea	rax, [rbp - 0x30]
0x400059:	mov	edx, 0x10
0x40005e:	mov	esi, 0
0x400063:	mov	rdi, rax
0x400066:	call	0x500018
<Block for 0x4000f4, 6 bytes>
0x4000f4:	cmp	dword ptr [rbp - 0x40], -1
0x4000f8:	je	0x400104
<Block for 0x40006b, 18 bytes>
0x40006b:	mov	word ptr [rbp - 0x30], 2
0x400071:	lea	rdi, [rip + 0xf1]
0x400078:	call	0x500020
<Block for 0x400104, 11 bytes>
0x400104:	mov	eax, dword ptr [rbp - 0x44]
0x400107:	mov	rdx, qword ptr [rbp - 0x38]
0x40010b:	mov	edi, eax
0x40010d:	call	rdx
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	eax, dword ptr [rbp - 0x40]
0x4000fd:	mov	edi, eax
0x4000ff:	call	0x500048
<Block for 0x40007d, 13 bytes>
0x40007d:	mov	dword ptr [rbp - 0x2c], eax
0x400080:	mov	edi, 0x6987
0x400085:	call	0x500028
<Block for 0x40010f, 16 bytes>
0x40010f:	nop	
0x400110:	mov	rax, qword ptr [rbp - 8]
0x400114:	xor	rax, qword ptr fs:[0x28]
0x40011d:	je	0x400124
<Block for 0x40008a, 26 bytes>
0x40008a:	mov	word ptr [rbp - 0x2e], ax
0x40008e:	lea	rcx, [rbp - 0x30]
0x400092:	mov	eax, dword ptr [rbp - 0x40]
0x400095:	mov	edx, 0x10
0x40009a:	mov	rsi, rcx
0x40009d:	mov	edi, eax
0x40009f:	call	0x500030
<Block for 0x400124, 2 bytes>
0x400124:	leave	
0x400125:	ret	
<Block for 0x40011f, 5 bytes>
0x40011f:	call	0x500050
<Block for 0x4000a4, 10 bytes>
0x4000a4:	cmp	eax, -1
0x4000a7:	sete	al
0x4000aa:	test	al, al
0x4000ac:	jne	0x4000f3
<Block for 0x4000ae, 24 bytes>
0x4000ae:	lea	rsi, [rbp - 0x16]
0x4000b2:	mov	eax, dword ptr [rbp - 0x40]
0x4000b5:	mov	ecx, 0
0x4000ba:	mov	edx, 0xd
0x4000bf:	mov	edi, eax
0x4000c1:	call	0x500038
<Block for 0x4000f3, 1 bytes>
0x4000f3:	nop	
<Block for 0x4000c6, 9 bytes>
0x4000c6:	mov	dword ptr [rbp - 0x3c], eax
0x4000c9:	cmp	dword ptr [rbp - 0x3c], -1
0x4000cd:	je	0x4000f4
<Block for 0x4000cf, 6 bytes>
0x4000cf:	cmp	dword ptr [rbp - 0x3c], 0
0x4000d3:	je	0x4000f4
<Block for 0x4000d5, 22 bytes>
0x4000d5:	mov	eax, dword ptr [rbp - 0x3c]
0x4000d8:	cdqe	
0x4000da:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000df:	lea	rax, [rbp - 0x16]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500040
<Block for 0x4000eb, 5 bytes>
0x4000eb:	mov	dword ptr [rbp - 0x44], eax
0x4000ee:	jmp	0x4000f4
