<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	nop	
0x40002a:	endbr64	
0x40002e:	mov	edi, 0x64
0x400033:	call	0x500000
<Block for 0x400038, 17 bytes>
0x400038:	mov	qword ptr [rbp - 0xd8], rax
0x40003f:	cmp	qword ptr [rbp - 0xd8], 0
0x400047:	jne	0x400053
<Block for 0x400049, 10 bytes>
0x400049:	mov	edi, 0xffffffff
0x40004e:	call	0x500008
<Block for 0x400053, 25 bytes>
0x400053:	mov	rax, qword ptr [rbp - 0xd8]
0x40005a:	mov	edx, 0x63
0x40005f:	mov	esi, 0x41
0x400064:	mov	rdi, rax
0x400067:	call	0x500010
<Block for 0x40006c, 57 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 0xd8]
0x400073:	add	rax, 0x63
0x400077:	mov	byte ptr [rax], 0
0x40007a:	mov	rax, qword ptr [rbp - 0xd8]
0x400081:	sub	rax, 8
0x400085:	mov	qword ptr [rbp - 0xe0], rax
0x40008c:	lea	rax, [rbp - 0xd0]
0x400093:	mov	edx, 0xc7
0x400098:	mov	esi, 0x43
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500010
<Block for 0x4000a5, 29 bytes>
0x4000a5:	mov	byte ptr [rbp - 9], 0
0x4000a9:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b0:	lea	rax, [rbp - 0xd0]
0x4000b7:	mov	rsi, rdx
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x500018
<Block for 0x4000c2, 15 bytes>
0x4000c2:	lea	rax, [rbp - 0xd0]
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500020
<Block for 0x4000d1, 16 bytes>
0x4000d1:	nop	
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	xor	rax, qword ptr fs:[0x28]
0x4000df:	je	0x4000e6
<Block for 0x4000e6, 2 bytes>
0x4000e6:	leave	
0x4000e7:	ret	
<Block for 0x4000e1, 5 bytes>
0x4000e1:	call	0x500028
