<Block for 0x4000e8, 56 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0xe0
0x4000f7:	mov	rax, qword ptr fs:[0x28]
0x400100:	mov	qword ptr [rbp - 8], rax
0x400104:	xor	eax, eax
0x400106:	mov	qword ptr [rbp - 0xe0], 0
0x400111:	nop	
0x400112:	endbr64	
0x400116:	mov	edi, 0x64
0x40011b:	call	0x500000
<Block for 0x400120, 17 bytes>
0x400120:	mov	qword ptr [rbp - 0xd8], rax
0x400127:	cmp	qword ptr [rbp - 0xd8], 0
0x40012f:	jne	0x40013b
<Block for 0x400131, 10 bytes>
0x400131:	mov	edi, 0xffffffff
0x400136:	call	0x500008
<Block for 0x40013b, 25 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0xd8]
0x400142:	mov	edx, 0x63
0x400147:	mov	esi, 0x41
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500010
<Block for 0x400154, 53 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0xd8]
0x40015b:	add	rax, 0x63
0x40015f:	mov	byte ptr [rax], 0
0x400162:	mov	rax, qword ptr [rbp - 0xd8]
0x400169:	mov	qword ptr [rbp - 0xe0], rax
0x400170:	lea	rax, [rbp - 0xd0]
0x400177:	mov	edx, 0xc7
0x40017c:	mov	esi, 0x43
0x400181:	mov	rdi, rax
0x400184:	call	0x500010
<Block for 0x400189, 29 bytes>
0x400189:	mov	byte ptr [rbp - 9], 0
0x40018d:	mov	rdx, qword ptr [rbp - 0xe0]
0x400194:	lea	rax, [rbp - 0xd0]
0x40019b:	mov	rsi, rdx
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500018
<Block for 0x4001a6, 15 bytes>
0x4001a6:	lea	rax, [rbp - 0xd0]
0x4001ad:	mov	rdi, rax
0x4001b0:	call	0x500020
<Block for 0x4001b5, 16 bytes>
0x4001b5:	nop	
0x4001b6:	mov	rax, qword ptr [rbp - 8]
0x4001ba:	xor	rax, qword ptr fs:[0x28]
0x4001c3:	je	0x4001ca
<Block for 0x4001ca, 2 bytes>
0x4001ca:	leave	
0x4001cb:	ret	
<Block for 0x4001c5, 5 bytes>
0x4001c5:	call	0x500028
