<Block for 0x4000e0, 51 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x20
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	dword ptr [rbp - 0x18], 1
0x400102:	mov	dword ptr [rbp - 0x14], 2
0x400109:	mov	edi, 8
0x40010e:	call	0x500000
<Block for 0x400113, 36 bytes>
0x400113:	mov	qword ptr [rbp - 0x20], rax
0x400117:	mov	rax, qword ptr [rbp - 0x20]
0x40011b:	mov	rdx, qword ptr [rbp - 0x18]
0x40011f:	mov	qword ptr [rax], rdx
0x400122:	mov	rax, qword ptr [rbp - 0x20]
0x400126:	mov	rax, qword ptr [rax]
0x400129:	mov	qword ptr [rbp - 0x10], rax
0x40012d:	mov	eax, dword ptr [rbp - 0x10]
0x400130:	mov	edi, eax
0x400132:	call	0x500010
<Block for 0x400137, 10 bytes>
0x400137:	mov	eax, dword ptr [rbp - 0xc]
0x40013a:	mov	edi, eax
0x40013c:	call	0x500010
<Block for 0x400141, 9 bytes>
0x400141:	mov	rax, qword ptr [rbp - 0x20]
0x400145:	test	rax, rax
0x400148:	je	0x400157
<Block for 0x400157, 16 bytes>
0x400157:	nop	
0x400158:	mov	rax, qword ptr [rbp - 8]
0x40015c:	xor	rax, qword ptr fs:[0x28]
0x400165:	je	0x40016c
<Block for 0x40014a, 13 bytes>
0x40014a:	mov	esi, 8
0x40014f:	mov	rdi, rax
0x400152:	call	0x500008
<Block for 0x40016c, 2 bytes>
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400167, 5 bytes>
0x400167:	call	0x500018
