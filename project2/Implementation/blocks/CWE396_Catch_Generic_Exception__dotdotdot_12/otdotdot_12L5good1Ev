<Block for 0x400284, 22 bytes>
0x400284:	endbr64	
0x400288:	push	rbp
0x400289:	mov	rbp, rsp
0x40028c:	push	r13
0x40028e:	push	r12
0x400290:	push	rbx
0x400291:	sub	rsp, 0x28
0x400295:	call	0x500000
<Block for 0x40029a, 13 bytes>
0x40029a:	test	eax, eax
0x40029c:	setne	al
0x40029f:	test	al, al
0x4002a1:	je	0x400344
<Block for 0x400344, 5 bytes>
0x400344:	call	0x500008
<Block for 0x4002a7, 5 bytes>
0x4002a7:	call	0x500008
<Block for 0x400349, 12 bytes>
0x400349:	and	eax, 1
0x40034c:	test	eax, eax
0x40034e:	sete	al
0x400351:	test	al, al
0x400353:	je	0x40038a
<Block for 0x4002ac, 12 bytes>
0x4002ac:	and	eax, 1
0x4002af:	test	eax, eax
0x4002b1:	sete	al
0x4002b4:	test	al, al
0x4002b6:	je	0x4002ed
<Block for 0x40038a, 5 bytes>
0x40038a:	call	0x500008
<Block for 0x400355, 10 bytes>
0x400355:	mov	edi, 0x10
0x40035a:	call	0x500010
<Block for 0x4002ed, 5 bytes>
0x4002ed:	call	0x500008
<Block for 0x4002b8, 10 bytes>
0x4002b8:	mov	edi, 0x10
0x4002bd:	call	0x500010
<Block for 0x40038f, 12 bytes>
0x40038f:	and	eax, 1
0x400392:	test	eax, eax
0x400394:	sete	al
0x400397:	test	al, al
0x400399:	je	0x4003d0
<Block for 0x40035f, 18 bytes>
0x40035f:	mov	rbx, rax
0x400362:	lea	rsi, [rip + 0x20d]
0x400369:	mov	rdi, rbx
0x40036c:	call	0x500018
<Block for 0x4002f2, 12 bytes>
0x4002f2:	and	eax, 1
0x4002f5:	test	eax, eax
0x4002f7:	sete	al
0x4002fa:	test	al, al
0x4002fc:	je	0x400333
<Block for 0x4002c2, 18 bytes>
0x4002c2:	mov	rbx, rax
0x4002c5:	lea	rsi, [rip + 0x2aa]
0x4002cc:	mov	rdi, rbx
0x4002cf:	call	0x500018
<Block for 0x4003d0, 12 bytes>
0x4003d0:	lea	rdi, [rip + 0x1a9]
0x4003d7:	call	0x500060
<Block for 0x40039b, 10 bytes>
0x40039b:	mov	edi, 0x10
0x4003a0:	call	0x500010
<Block for 0x400371, 25 bytes>
0x400371:	mov	rax, qword ptr [rip + 0xffcb0]
0x400378:	mov	rdx, rax
0x40037b:	lea	rsi, [rip + 0xffcae]
0x400382:	mov	rdi, rbx
0x400385:	call	0x500038
<Block for 0x400333, 12 bytes>
0x400333:	lea	rdi, [rip + 0x246]
0x40033a:	call	0x500060
<Block for 0x4002fe, 10 bytes>
0x4002fe:	mov	edi, 0x10
0x400303:	call	0x500010
<Block for 0x4002d4, 25 bytes>
0x4002d4:	mov	rax, qword ptr [rip + 0xffd4d]
0x4002db:	mov	rdx, rax
0x4002de:	lea	rsi, [rip + 0xffd4b]
0x4002e5:	mov	rdi, rbx
0x4002e8:	call	0x500038
<Block for 0x4003dc, 5 bytes>
0x4003dc:	jmp	0x40055a
<Block for 0x4003a5, 18 bytes>
0x4003a5:	mov	rbx, rax
0x4003a8:	lea	rsi, [rip + 0x1cc]
0x4003af:	mov	rdi, rbx
0x4003b2:	call	0x500040
<Block for 0x40033f, 5 bytes>
0x40033f:	jmp	0x40055a
<Block for 0x400308, 18 bytes>
0x400308:	mov	rbx, rax
0x40030b:	lea	rsi, [rip + 0x269]
0x400312:	mov	rdi, rbx
0x400315:	call	0x500040
<Block for 0x40055a, 11 bytes>
0x40055a:	add	rsp, 0x28
0x40055e:	pop	rbx
0x40055f:	pop	r12
0x400561:	pop	r13
0x400563:	pop	rbp
0x400564:	ret	
<Block for 0x4003b7, 25 bytes>
0x4003b7:	mov	rax, qword ptr [rip + 0xffc92]
0x4003be:	mov	rdx, rax
0x4003c1:	lea	rsi, [rip + 0xffc90]
0x4003c8:	mov	rdi, rbx
0x4003cb:	call	0x500038
<Block for 0x40031a, 25 bytes>
0x40031a:	mov	rax, qword ptr [rip + 0xffd2f]
0x400321:	mov	rdx, rax
0x400324:	lea	rsi, [rip + 0xffd2d]
0x40032b:	mov	rdi, rbx
0x40032e:	call	0x500038
