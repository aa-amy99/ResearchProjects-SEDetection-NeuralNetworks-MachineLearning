<Block for 0x400068, 69 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	rax, qword ptr fs:[0x28]
0x40007d:	mov	qword ptr [rbp - 8], rax
0x400081:	xor	eax, eax
0x400083:	lea	rax, [rbp - 0x18]
0x400087:	mov	qword ptr [rbp - 0x10], rax
0x40008b:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x400092:	mov	edx, 0x180
0x400097:	mov	esi, 0x42
0x40009c:	lea	rdi, [rip + 0x4d]
0x4000a3:	mov	eax, 0
0x4000a8:	call	0x500000
<Block for 0x4000ad, 18 bytes>
0x4000ad:	mov	dword ptr [rbp - 0x18], eax
0x4000b0:	mov	rax, qword ptr [rbp - 0x10]
0x4000b4:	mov	eax, dword ptr [rax]
0x4000b6:	mov	dword ptr [rbp - 0x14], eax
0x4000b9:	cmp	dword ptr [rbp - 0x14], -1
0x4000bd:	je	0x4000c9
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000bf, 10 bytes>
0x4000bf:	mov	eax, dword ptr [rbp - 0x14]
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500010
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500008
