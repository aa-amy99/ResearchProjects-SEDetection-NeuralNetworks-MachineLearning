<Block for 0x4001e4, 51 bytes>
0x4001e4:	endbr64	
0x4001e8:	push	rbp
0x4001e9:	mov	rbp, rsp
0x4001ec:	sub	rsp, 0xe0
0x4001f3:	mov	rax, qword ptr fs:[0x28]
0x4001fc:	mov	qword ptr [rbp - 8], rax
0x400200:	xor	eax, eax
0x400202:	mov	qword ptr [rbp - 0xe0], 0
0x40020d:	mov	eax, dword ptr [rip + 0xd9]
0x400213:	test	eax, eax
0x400215:	je	0x400271
<Block for 0x400271, 25 bytes>
0x400271:	lea	rax, [rbp - 0xd0]
0x400278:	mov	edx, 0xc7
0x40027d:	mov	esi, 0x43
0x400282:	mov	rdi, rax
0x400285:	call	0x500010
<Block for 0x400217, 10 bytes>
0x400217:	mov	edi, 0x64
0x40021c:	call	0x500000
<Block for 0x40028a, 29 bytes>
0x40028a:	mov	byte ptr [rbp - 9], 0
0x40028e:	mov	rdx, qword ptr [rbp - 0xe0]
0x400295:	lea	rax, [rbp - 0xd0]
0x40029c:	mov	rsi, rdx
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500018
<Block for 0x400221, 17 bytes>
0x400221:	mov	qword ptr [rbp - 0xd8], rax
0x400228:	cmp	qword ptr [rbp - 0xd8], 0
0x400230:	jne	0x40023c
<Block for 0x4002a7, 15 bytes>
0x4002a7:	lea	rax, [rbp - 0xd0]
0x4002ae:	mov	rdi, rax
0x4002b1:	call	0x500020
<Block for 0x400232, 10 bytes>
0x400232:	mov	edi, 0xffffffff
0x400237:	call	0x500008
<Block for 0x40023c, 25 bytes>
0x40023c:	mov	rax, qword ptr [rbp - 0xd8]
0x400243:	mov	edx, 0x63
0x400248:	mov	esi, 0x41
0x40024d:	mov	rdi, rax
0x400250:	call	0x500010
<Block for 0x4002b6, 16 bytes>
0x4002b6:	nop	
0x4002b7:	mov	rax, qword ptr [rbp - 8]
0x4002bb:	xor	rax, qword ptr fs:[0x28]
0x4002c4:	je	0x4002cb
<Block for 0x400255, 53 bytes>
0x400255:	mov	rax, qword ptr [rbp - 0xd8]
0x40025c:	add	rax, 0x63
0x400260:	mov	byte ptr [rax], 0
0x400263:	mov	rax, qword ptr [rbp - 0xd8]
0x40026a:	mov	qword ptr [rbp - 0xe0], rax
0x400271:	lea	rax, [rbp - 0xd0]
0x400278:	mov	edx, 0xc7
0x40027d:	mov	esi, 0x43
0x400282:	mov	rdi, rax
0x400285:	call	0x500010
<Block for 0x4002cb, 2 bytes>
0x4002cb:	leave	
0x4002cc:	ret	
<Block for 0x4002c6, 5 bytes>
0x4002c6:	call	0x500028
