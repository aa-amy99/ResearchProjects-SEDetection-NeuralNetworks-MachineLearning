<Block for 0x400054, 27 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	sub	rsp, 0x20
0x400060:	nop	
0x400061:	endbr64	
0x400065:	mov	edi, 8
0x40006a:	call	0x500000
<Block for 0x40006f, 30 bytes>
0x40006f:	mov	qword ptr [rbp - 0x18], rax
0x400073:	mov	rax, qword ptr [rbp - 0x18]
0x400077:	movsd	xmm0, qword ptr [rip + 0x69]
0x40007f:	movsd	qword ptr [rax], xmm0
0x400083:	mov	edi, 8
0x400088:	call	0x500000
<Block for 0x40008d, 43 bytes>
0x40008d:	mov	qword ptr [rbp - 0x10], rax
0x400091:	mov	rax, qword ptr [rbp - 0x10]
0x400095:	mov	rdx, qword ptr [rbp - 0x18]
0x400099:	mov	qword ptr [rax], rdx
0x40009c:	mov	rax, qword ptr [rbp - 0x10]
0x4000a0:	mov	rax, qword ptr [rax]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	mov	rax, qword ptr [rax]
0x4000ae:	movq	xmm0, rax
0x4000b3:	call	0x500010
<Block for 0x4000b8, 9 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	test	rax, rax
0x4000bf:	je	0x4000ce
<Block for 0x4000ce, 3 bytes>
0x4000ce:	nop	
0x4000cf:	leave	
0x4000d0:	ret	
<Block for 0x4000c1, 13 bytes>
0x4000c1:	mov	esi, 8
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500008
