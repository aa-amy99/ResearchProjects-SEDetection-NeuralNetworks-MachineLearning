<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 32 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	mov	eax, 1
0x40003a:	test	eax, eax
0x40003c:	je	0x400193
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 0x18]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x400042, 29 bytes>
0x400042:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x40004c:	lea	rsi, [rip + 0x165]
0x400053:	lea	rdi, [rip + 0x160]
0x40005a:	call	0x500000
<Block for 0x4001a8, 10 bytes>
0x4001a8:	add	rsp, 0x10038
0x4001af:	pop	rbx
0x4001b0:	pop	rbp
0x4001b1:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500058
<Block for 0x40005f, 17 bytes>
0x40005f:	mov	qword ptr [rbp - 0x10038], rax
0x400066:	cmp	qword ptr [rbp - 0x10038], 0
0x40006e:	je	0x4000b2
<Block for 0x4000b2, 20 bytes>
0x4000b2:	mov	edx, 6
0x4000b7:	mov	esi, 1
0x4000bc:	mov	edi, 2
0x4000c1:	call	0x500020
<Block for 0x400070, 27 bytes>
0x400070:	mov	rdx, qword ptr [rbp - 0x10038]
0x400077:	lea	rax, [rbp - 0x10020]
0x40007e:	mov	esi, 0xffff
0x400083:	mov	rdi, rax
0x400086:	call	0x500008
<Block for 0x4000c6, 19 bytes>
0x4000c6:	mov	dword ptr [rbp - 0x1003c], eax
0x4000cc:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000d3:	je	0x400179
<Block for 0x40008b, 5 bytes>
0x40008b:	test	rax, rax
0x40008e:	jne	0x4000a3
<Block for 0x400179, 3 bytes>
0x400179:	nop	
0x40017a:	jmp	0x40017d
<Block for 0x4000d9, 25 bytes>
0x4000d9:	lea	rax, [rbp - 0x10030]
0x4000e0:	mov	edx, 0x10
0x4000e5:	mov	esi, 0
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500028
<Block for 0x400090, 12 bytes>
0x400090:	lea	rdi, [rip + 0x12c]
0x400097:	call	0x500010
<Block for 0x4000a3, 15 bytes>
0x4000a3:	mov	rax, qword ptr [rbp - 0x10038]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500018
<Block for 0x40017d, 9 bytes>
0x40017d:	cmp	dword ptr [rbp - 0x1003c], -1
0x400184:	je	0x400193
<Block for 0x4000f2, 29 bytes>
0x4000f2:	mov	word ptr [rbp - 0x10030], 2
0x4000fb:	mov	dword ptr [rbp - 0x1002c], 0
0x400105:	mov	edi, 0x6987
0x40010a:	call	0x500030
<Block for 0x40009c, 22 bytes>
0x40009c:	mov	byte ptr [rbp - 0x10020], 0
0x4000a3:	mov	rax, qword ptr [rbp - 0x10038]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500018
<Block for 0x400186, 13 bytes>
0x400186:	mov	eax, dword ptr [rbp - 0x1003c]
0x40018c:	mov	edi, eax
0x40018e:	call	0x500050
<Block for 0x40010f, 35 bytes>
0x40010f:	mov	word ptr [rbp - 0x1002e], ax
0x400116:	lea	rcx, [rbp - 0x10030]
0x40011d:	mov	eax, dword ptr [rbp - 0x1003c]
0x400123:	mov	edx, 0x10
0x400128:	mov	rsi, rcx
0x40012b:	mov	edi, eax
0x40012d:	call	0x500038
<Block for 0x400132, 5 bytes>
0x400132:	cmp	eax, -1
0x400135:	je	0x40017c
<Block for 0x400137, 15 bytes>
0x400137:	lea	rax, [rbp - 0x10020]
0x40013e:	mov	rdi, rax
0x400141:	call	0x500040
<Block for 0x40017c, 1 bytes>
0x40017c:	nop	
<Block for 0x400146, 28 bytes>
0x400146:	mov	rdx, rax
0x400149:	lea	rsi, [rbp - 0x10020]
0x400150:	mov	eax, dword ptr [rbp - 0x1003c]
0x400156:	mov	ecx, 0
0x40015b:	mov	edi, eax
0x40015d:	call	0x500048
<Block for 0x400162, 18 bytes>
0x400162:	mov	rbx, rax
0x400165:	lea	rax, [rbp - 0x10020]
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500040
<Block for 0x400174, 5 bytes>
0x400174:	cmp	rbx, rax
0x400177:	jmp	0x40017d
