<Block for 0x4002c0, 40 bytes>
0x4002c0:	endbr64	
0x4002c4:	push	rbp
0x4002c5:	mov	rbp, rsp
0x4002c8:	push	rbx
0x4002c9:	sub	rsp, 0x68
0x4002cd:	mov	rax, qword ptr fs:[0x28]
0x4002d6:	mov	qword ptr [rbp - 0x18], rax
0x4002da:	xor	eax, eax
0x4002dc:	lea	rax, [rbp - 0x50]
0x4002e0:	mov	rdi, rax
0x4002e3:	call	0x4005fe
<Block for 0x4002e8, 54 bytes>
0x4002e8:	mov	eax, 0x10
0x4002ed:	sub	rax, 1
0x4002f1:	add	rax, 0x3a
0x4002f5:	mov	ecx, 0x10
0x4002fa:	mov	edx, 0
0x4002ff:	div	rcx
0x400302:	imul	rax, rax, 0x10
0x400306:	mov	rdx, rax
0x400309:	and	rdx, 0xfffffffffffff000
0x400310:	mov	rcx, rsp
0x400313:	sub	rcx, rdx
0x400316:	mov	rdx, rcx
0x400319:	cmp	rsp, rdx
0x40031c:	je	0x400330
<Block for 0x400330, 26 bytes>
0x400330:	mov	rdx, rax
0x400333:	and	edx, 0xfff
0x400339:	sub	rsp, rdx
0x40033c:	mov	rdx, rax
0x40033f:	and	edx, 0xfff
0x400345:	test	rdx, rdx
0x400348:	je	0x40035a
<Block for 0x40031e, 18 bytes>
0x40031e:	sub	rsp, 0x1000
0x400325:	or	qword ptr [rsp + 0xff8], 0
0x40032e:	jmp	0x400319
<Block for 0x40035a, 73 bytes>
0x40035a:	mov	rax, rsp
0x40035d:	add	rax, 0xf
0x400361:	shr	rax, 4
0x400365:	shl	rax, 4
0x400369:	mov	qword ptr [rbp - 0x60], rax
0x40036d:	mov	eax, 0x10
0x400372:	sub	rax, 1
0x400376:	add	rax, 0x6c
0x40037a:	mov	ecx, 0x10
0x40037f:	mov	edx, 0
0x400384:	div	rcx
0x400387:	imul	rax, rax, 0x10
0x40038b:	mov	rdx, rax
0x40038e:	and	rdx, 0xfffffffffffff000
0x400395:	mov	rbx, rsp
0x400398:	sub	rbx, rdx
0x40039b:	mov	rdx, rbx
0x40039e:	cmp	rsp, rdx
0x4003a1:	je	0x4003b5
<Block for 0x40034a, 89 bytes>
0x40034a:	and	eax, 0xfff
0x40034f:	sub	rax, 8
0x400353:	add	rax, rsp
0x400356:	or	qword ptr [rax], 0
0x40035a:	mov	rax, rsp
0x40035d:	add	rax, 0xf
0x400361:	shr	rax, 4
0x400365:	shl	rax, 4
0x400369:	mov	qword ptr [rbp - 0x60], rax
0x40036d:	mov	eax, 0x10
0x400372:	sub	rax, 1
0x400376:	add	rax, 0x6c
0x40037a:	mov	ecx, 0x10
0x40037f:	mov	edx, 0
0x400384:	div	rcx
0x400387:	imul	rax, rax, 0x10
0x40038b:	mov	rdx, rax
0x40038e:	and	rdx, 0xfffffffffffff000
0x400395:	mov	rbx, rsp
0x400398:	sub	rbx, rdx
0x40039b:	mov	rdx, rbx
0x40039e:	cmp	rsp, rdx
0x4003a1:	je	0x4003b5
<Block for 0x400319, 5 bytes>
0x400319:	cmp	rsp, rdx
0x40031c:	je	0x400330
<Block for 0x4003b5, 26 bytes>
0x4003b5:	mov	rdx, rax
0x4003b8:	and	edx, 0xfff
0x4003be:	sub	rsp, rdx
0x4003c1:	mov	rdx, rax
0x4003c4:	and	edx, 0xfff
0x4003ca:	test	rdx, rdx
0x4003cd:	je	0x4003df
<Block for 0x4003a3, 18 bytes>
0x4003a3:	sub	rsp, 0x1000
0x4003aa:	or	qword ptr [rsp + 0xff8], 0
0x4003b3:	jmp	0x40039e
<Block for 0x4003df, 41 bytes>
0x4003df:	mov	rax, rsp
0x4003e2:	add	rax, 0xf
0x4003e6:	shr	rax, 4
0x4003ea:	shl	rax, 4
0x4003ee:	mov	qword ptr [rbp - 0x58], rax
0x4003f2:	mov	rax, qword ptr [rbp - 0x60]
0x4003f6:	mov	edx, 0x31
0x4003fb:	mov	esi, 0x41
0x400400:	mov	rdi, rax
0x400403:	call	0x500000
<Block for 0x4003cf, 57 bytes>
0x4003cf:	and	eax, 0xfff
0x4003d4:	sub	rax, 8
0x4003d8:	add	rax, rsp
0x4003db:	or	qword ptr [rax], 0
0x4003df:	mov	rax, rsp
0x4003e2:	add	rax, 0xf
0x4003e6:	shr	rax, 4
0x4003ea:	shl	rax, 4
0x4003ee:	mov	qword ptr [rbp - 0x58], rax
0x4003f2:	mov	rax, qword ptr [rbp - 0x60]
0x4003f6:	mov	edx, 0x31
0x4003fb:	mov	esi, 0x41
0x400400:	mov	rdi, rax
0x400403:	call	0x500000
<Block for 0x40039e, 5 bytes>
0x40039e:	cmp	rsp, rdx
0x4003a1:	je	0x4003b5
<Block for 0x400408, 33 bytes>
0x400408:	mov	rax, qword ptr [rbp - 0x60]
0x40040c:	add	rax, 0x31
0x400410:	mov	byte ptr [rax], 0
0x400413:	mov	rax, qword ptr [rbp - 0x58]
0x400417:	mov	edx, 0x63
0x40041c:	mov	esi, 0x41
0x400421:	mov	rdi, rax
0x400424:	call	0x500000
<Block for 0x400429, 31 bytes>
0x400429:	mov	rax, qword ptr [rbp - 0x58]
0x40042d:	add	rax, 0x63
0x400431:	mov	byte ptr [rax], 0
0x400434:	mov	rax, qword ptr [rbp - 0x58]
0x400438:	mov	qword ptr [rbp - 0x70], rax
0x40043c:	lea	rax, [rbp - 0x50]
0x400440:	mov	rdi, rax
0x400443:	call	0x400792
<Block for 0x400448, 23 bytes>
0x400448:	mov	qword ptr [rbp - 0x68], rax
0x40044c:	lea	rdx, [rbp - 0x68]
0x400450:	lea	rax, [rbp - 0x30]
0x400454:	mov	rsi, rdx
0x400457:	mov	rdi, rax
0x40045a:	call	0x4007e2
<Block for 0x40045f, 28 bytes>
0x40045f:	lea	rdx, [rbp - 0x70]
0x400463:	mov	rsi, qword ptr [rbp - 0x30]
0x400467:	lea	rax, [rbp - 0x50]
0x40046b:	mov	rcx, rdx
0x40046e:	mov	edx, 1
0x400473:	mov	rdi, rax
0x400476:	call	0x400810
<Block for 0x40047b, 12 bytes>
0x40047b:	lea	rax, [rbp - 0x50]
0x40047f:	mov	rdi, rax
0x400482:	call	0x400792
<Block for 0x400487, 23 bytes>
0x400487:	mov	qword ptr [rbp - 0x68], rax
0x40048b:	lea	rdx, [rbp - 0x68]
0x40048f:	lea	rax, [rbp - 0x30]
0x400493:	mov	rsi, rdx
0x400496:	mov	rdi, rax
0x400499:	call	0x4007e2
<Block for 0x40049e, 28 bytes>
0x40049e:	lea	rdx, [rbp - 0x70]
0x4004a2:	mov	rsi, qword ptr [rbp - 0x30]
0x4004a6:	lea	rax, [rbp - 0x50]
0x4004aa:	mov	rcx, rdx
0x4004ad:	mov	edx, 1
0x4004b2:	mov	rdi, rax
0x4004b5:	call	0x400810
<Block for 0x4004ba, 12 bytes>
0x4004ba:	lea	rax, [rbp - 0x50]
0x4004be:	mov	rdi, rax
0x4004c1:	call	0x400792
<Block for 0x4004c6, 23 bytes>
0x4004c6:	mov	qword ptr [rbp - 0x68], rax
0x4004ca:	lea	rdx, [rbp - 0x68]
0x4004ce:	lea	rax, [rbp - 0x30]
0x4004d2:	mov	rsi, rdx
0x4004d5:	mov	rdi, rax
0x4004d8:	call	0x4007e2
<Block for 0x4004dd, 28 bytes>
0x4004dd:	lea	rdx, [rbp - 0x70]
0x4004e1:	mov	rsi, qword ptr [rbp - 0x30]
0x4004e5:	lea	rax, [rbp - 0x50]
0x4004e9:	mov	rcx, rdx
0x4004ec:	mov	edx, 1
0x4004f1:	mov	rdi, rax
0x4004f4:	call	0x400810
<Block for 0x4004f9, 19 bytes>
0x4004f9:	lea	rdx, [rbp - 0x50]
0x4004fd:	lea	rax, [rbp - 0x30]
0x400501:	mov	rsi, rdx
0x400504:	mov	rdi, rax
0x400507:	call	0x4008d6
<Block for 0x40050c, 12 bytes>
0x40050c:	lea	rax, [rbp - 0x30]
0x400510:	mov	rdi, rax
0x400513:	call	0x500020
<Block for 0x400518, 12 bytes>
0x400518:	lea	rax, [rbp - 0x30]
0x40051c:	mov	rdi, rax
0x40051f:	call	0x40074a
<Block for 0x400524, 12 bytes>
0x400524:	lea	rax, [rbp - 0x50]
0x400528:	mov	rdi, rax
0x40052b:	call	0x40074a
<Block for 0x400530, 16 bytes>
0x400530:	nop	
0x400531:	mov	rax, qword ptr [rbp - 0x18]
0x400535:	xor	rax, qword ptr fs:[0x28]
0x40053e:	je	0x40057a
<Block for 0x40057a, 6 bytes>
0x40057a:	mov	rbx, qword ptr [rbp - 8]
0x40057e:	leave	
0x40057f:	ret	
<Block for 0x400540, 2 bytes>
0x400540:	jmp	0x400575
<Block for 0x400575, 5 bytes>
0x400575:	call	0x500018
