<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 5
0x400020:	cmp	eax, 5
0x400023:	jne	0x400057
<Block for 0x400025, 40 bytes>
0x400025:	mov	byte ptr [rbp - 0x10], 1
0x400029:	lea	rax, [rbp - 0x10]
0x40002d:	mov	qword ptr [rbp - 0x18], rax
0x400031:	mov	rax, qword ptr [rbp - 0x18]
0x400035:	add	rax, 4
0x400039:	mov	dword ptr [rax], 5
0x40003f:	movzx	eax, byte ptr [rbp - 0x10]
0x400043:	movsx	eax, al
0x400046:	mov	edi, eax
0x400048:	call	0x500000
<Block for 0x400057, 16 bytes>
0x400057:	nop	
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	xor	rax, qword ptr fs:[0x28]
0x400065:	je	0x40006c
<Block for 0x40004d, 10 bytes>
0x40004d:	mov	eax, dword ptr [rbp - 0xc]
0x400050:	mov	edi, eax
0x400052:	call	0x500000
<Block for 0x40006c, 2 bytes>
0x40006c:	leave	
0x40006d:	ret	
<Block for 0x400067, 5 bytes>
0x400067:	call	0x500008
