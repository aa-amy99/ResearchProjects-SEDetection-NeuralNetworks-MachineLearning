<Block for 0x400063, 21 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	mov	eax, 0
0x400074:	test	eax, eax
0x400076:	je	0x400086
<Block for 0x400086, 18 bytes>
0x400086:	mov	qword ptr [rbp - 8], 0
0x40008e:	mov	edi, 2
0x400093:	call	0x500000
<Block for 0x400078, 12 bytes>
0x400078:	lea	rdi, [rip + 0xe1]
0x40007f:	call	0x500020
<Block for 0x400098, 11 bytes>
0x400098:	mov	qword ptr [rbp - 8], rax
0x40009c:	cmp	qword ptr [rbp - 8], 0
0x4000a1:	jne	0x4000ad
<Block for 0x400084, 2 bytes>
0x400084:	jmp	0x4000d1
<Block for 0x4000a3, 10 bytes>
0x4000a3:	mov	edi, 0xffffffff
0x4000a8:	call	0x500008
<Block for 0x4000ad, 24 bytes>
0x4000ad:	mov	rax, qword ptr [rbp - 8]
0x4000b1:	mov	word ptr [rax], 6
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	movzx	eax, word ptr [rax]
0x4000bd:	cwde	
0x4000be:	mov	edi, eax
0x4000c0:	call	0x500010
<Block for 0x4000d1, 3 bytes>
0x4000d1:	nop	
0x4000d2:	leave	
0x4000d3:	ret	
<Block for 0x4000c5, 12 bytes>
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500018
