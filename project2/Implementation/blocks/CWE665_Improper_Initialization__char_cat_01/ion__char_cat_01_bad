<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xe8], rax
0x40002c:	lea	rax, [rbp - 0x70]
0x400030:	mov	edx, 0x63
0x400035:	mov	esi, 0x43
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400042, 26 bytes>
0x400042:	mov	byte ptr [rbp - 0xd], 0
0x400046:	lea	rdx, [rbp - 0x70]
0x40004a:	mov	rax, qword ptr [rbp - 0xe8]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	0x500008
<Block for 0x40005c, 15 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0xe8]
0x400063:	mov	rdi, rax
0x400066:	call	0x500010
<Block for 0x40006b, 16 bytes>
0x40006b:	nop	
0x40006c:	mov	rax, qword ptr [rbp - 8]
0x400070:	xor	rax, qword ptr fs:[0x28]
0x400079:	je	0x400080
<Block for 0x400080, 2 bytes>
0x400080:	leave	
0x400081:	ret	
<Block for 0x40007b, 5 bytes>
0x40007b:	call	0x500018
