<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0x354]
0x400028:	test	eax, eax
0x40002a:	je	0x400033
<Block for 0x400033, 10 bytes>
0x400033:	mov	eax, dword ptr [rip + 0x343]
0x400039:	test	eax, eax
0x40003b:	je	0x400089
<Block for 0x40002c, 17 bytes>
0x40002c:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x400033:	mov	eax, dword ptr [rip + 0x343]
0x400039:	test	eax, eax
0x40003b:	je	0x400089
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x40003d, 46 bytes>
0x40003d:	mov	qword ptr [rbp - 0x30], 0
0x400045:	mov	qword ptr [rbp - 0x28], 0
0x40004d:	mov	qword ptr [rbp - 0x20], 0
0x400055:	mov	qword ptr [rbp - 0x18], 0
0x40005d:	mov	qword ptr [rbp - 0x10], 0
0x400065:	cmp	dword ptr [rbp - 0x34], 9
0x400069:	jg	0x40007d
<Block for 0x40009e, 2 bytes>
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500010
<Block for 0x40006b, 16 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0x34]
0x40006e:	cdqe	
0x400070:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400074:	mov	edi, eax
0x400076:	call	0x500000
<Block for 0x40007d, 12 bytes>
0x40007d:	lea	rdi, [rip + 0x304]
0x400084:	call	0x500008
<Block for 0x40007b, 2 bytes>
0x40007b:	jmp	0x400089
