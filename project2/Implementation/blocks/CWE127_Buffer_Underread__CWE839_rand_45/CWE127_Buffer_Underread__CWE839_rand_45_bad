<Block for 0x400087, 25 bytes>
0x400087:	endbr64	
0x40008b:	push	rbp
0x40008c:	mov	rbp, rsp
0x40008f:	push	rbx
0x400090:	sub	rsp, 0x18
0x400094:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40009b:	call	0x500018
<Block for 0x4000a0, 7 bytes>
0x4000a0:	and	eax, 1
0x4000a3:	test	eax, eax
0x4000a5:	je	0x4000c4
<Block for 0x4000c4, 5 bytes>
0x4000c4:	call	0x500018
<Block for 0x4000a7, 5 bytes>
0x4000a7:	call	0x500018
<Block for 0x4000c9, 10 bytes>
0x4000c9:	shl	eax, 0x1e
0x4000cc:	mov	ebx, eax
0x4000ce:	call	0x500018
<Block for 0x4000ac, 10 bytes>
0x4000ac:	shl	eax, 0x1e
0x4000af:	mov	ebx, eax
0x4000b1:	call	0x500018
<Block for 0x4000d3, 10 bytes>
0x4000d3:	shl	eax, 0xf
0x4000d6:	xor	ebx, eax
0x4000d8:	call	0x500018
<Block for 0x4000b6, 10 bytes>
0x4000b6:	shl	eax, 0xf
0x4000b9:	xor	ebx, eax
0x4000bb:	call	0x500018
<Block for 0x4000dd, 26 bytes>
0x4000dd:	xor	eax, ebx
0x4000df:	not	eax
0x4000e1:	mov	dword ptr [rbp - 0x14], eax
0x4000e4:	mov	eax, dword ptr [rbp - 0x14]
0x4000e7:	mov	dword ptr [rip + 0x1ef], eax
0x4000ed:	mov	eax, 0
0x4000f2:	call	0x400000
<Block for 0x4000c0, 4 bytes>
0x4000c0:	xor	eax, ebx
0x4000c2:	jmp	0x4000e1
<Block for 0x4000f7, 8 bytes>
0x4000f7:	nop	
0x4000f8:	add	rsp, 0x18
0x4000fc:	pop	rbx
0x4000fd:	pop	rbp
0x4000fe:	ret	
<Block for 0x4000e1, 22 bytes>
0x4000e1:	mov	dword ptr [rbp - 0x14], eax
0x4000e4:	mov	eax, dword ptr [rbp - 0x14]
0x4000e7:	mov	dword ptr [rip + 0x1ef], eax
0x4000ed:	mov	eax, 0
0x4000f2:	call	0x400000
