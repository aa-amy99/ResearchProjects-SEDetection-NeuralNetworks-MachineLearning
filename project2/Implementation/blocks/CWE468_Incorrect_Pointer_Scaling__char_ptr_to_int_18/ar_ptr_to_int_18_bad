<Block for 0x400000, 102 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	mov	dword ptr [rbp - 0x20], 1
0x400027:	mov	dword ptr [rbp - 0x1c], 2
0x40002e:	mov	dword ptr [rbp - 0x18], 3
0x400035:	mov	dword ptr [rbp - 0x14], 4
0x40003c:	mov	dword ptr [rbp - 0x10], 5
0x400043:	lea	rax, [rbp - 0x20]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	rax, qword ptr [rbp - 0x28]
0x40004f:	add	rax, 2
0x400053:	movzx	eax, byte ptr [rax]
0x400056:	movsx	eax, al
0x400059:	mov	dword ptr [rbp - 0x2c], eax
0x40005c:	mov	eax, dword ptr [rbp - 0x2c]
0x40005f:	mov	edi, eax
0x400061:	call	0x500000
<Block for 0x400066, 16 bytes>
0x400066:	nop	
0x400067:	mov	rax, qword ptr [rbp - 8]
0x40006b:	xor	rax, qword ptr fs:[0x28]
0x400074:	je	0x40007b
<Block for 0x40007b, 2 bytes>
0x40007b:	leave	
0x40007c:	ret	
<Block for 0x400076, 5 bytes>
0x400076:	call	0x500008
