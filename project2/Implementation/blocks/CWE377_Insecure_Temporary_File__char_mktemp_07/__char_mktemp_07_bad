<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0x1e3]
0x400021:	cmp	eax, 5
0x400024:	jne	0x40009f
<Block for 0x400026, 30 bytes>
0x400026:	movabs	rax, 0x5858585858586e66
0x400030:	mov	qword ptr [rbp - 0x11], rax
0x400034:	mov	byte ptr [rbp - 9], 0
0x400038:	lea	rax, [rbp - 0x11]
0x40003c:	mov	rdi, rax
0x40003f:	call	0x500000
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000b4
<Block for 0x400044, 11 bytes>
0x400044:	mov	qword ptr [rbp - 0x20], rax
0x400048:	cmp	qword ptr [rbp - 0x20], 0
0x40004d:	jne	0x400059
<Block for 0x4000b4, 2 bytes>
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500028
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 1
0x400054:	call	0x500008
<Block for 0x400059, 12 bytes>
0x400059:	mov	rax, qword ptr [rbp - 0x20]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x400065, 27 bytes>
0x400065:	mov	rax, qword ptr [rbp - 0x20]
0x400069:	mov	edx, 0x180
0x40006e:	mov	esi, 0x42
0x400073:	mov	rdi, rax
0x400076:	mov	eax, 0
0x40007b:	call	0x500018
<Block for 0x400080, 9 bytes>
0x400080:	mov	dword ptr [rbp - 0x24], eax
0x400083:	cmp	dword ptr [rbp - 0x24], -1
0x400087:	je	0x40009f
<Block for 0x400089, 12 bytes>
0x400089:	lea	rdi, [rip + 0x178]
0x400090:	call	0x500010
<Block for 0x400095, 10 bytes>
0x400095:	mov	eax, dword ptr [rbp - 0x24]
0x400098:	mov	edi, eax
0x40009a:	call	0x500020
