<Block for 0x40006d, 86 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x30
0x400079:	mov	rax, qword ptr fs:[0x28]
0x400082:	mov	qword ptr [rbp - 8], rax
0x400086:	xor	eax, eax
0x400088:	mov	dword ptr [rbp - 0x2c], 0x64
0x40008f:	mov	dword ptr [rbp - 0x10], 0
0x400096:	mov	dword ptr [rbp - 0xc], 0
0x40009d:	lea	rax, [rbp - 0x10]
0x4000a1:	mov	qword ptr [rbp - 0x20], rax
0x4000a5:	mov	rax, qword ptr [rbp - 0x20]
0x4000a9:	mov	qword ptr [rbp - 0x28], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x28]
0x4000b1:	mov	qword ptr [rbp - 0x18], rax
0x4000b5:	mov	rax, qword ptr [rbp - 0x18]
0x4000b9:	mov	eax, dword ptr [rax + 4]
0x4000bc:	mov	edi, eax
0x4000be:	call	0x500000
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500008
