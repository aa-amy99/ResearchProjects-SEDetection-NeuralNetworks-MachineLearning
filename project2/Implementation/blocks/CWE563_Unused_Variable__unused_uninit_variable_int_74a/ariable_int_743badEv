<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x400378
<Block for 0x40002b, 26 bytes>
0x40002b:	mov	dword ptr [rbp - 0x50], 0
0x400032:	lea	rdx, [rbp - 0x50]
0x400036:	lea	rax, [rbp - 0x80]
0x40003a:	mov	rsi, rdx
0x40003d:	mov	rdi, rax
0x400040:	call	0x40052e
<Block for 0x400045, 34 bytes>
0x400045:	mov	edx, dword ptr [rbp - 0x84]
0x40004b:	mov	dword ptr [rax], edx
0x40004d:	mov	dword ptr [rbp - 0x50], 1
0x400054:	lea	rdx, [rbp - 0x50]
0x400058:	lea	rax, [rbp - 0x80]
0x40005c:	mov	rsi, rdx
0x40005f:	mov	rdi, rax
0x400062:	call	0x40052e
<Block for 0x400067, 34 bytes>
0x400067:	mov	edx, dword ptr [rbp - 0x84]
0x40006d:	mov	dword ptr [rax], edx
0x40006f:	mov	dword ptr [rbp - 0x50], 2
0x400076:	lea	rdx, [rbp - 0x50]
0x40007a:	lea	rax, [rbp - 0x80]
0x40007e:	mov	rsi, rdx
0x400081:	mov	rdi, rax
0x400084:	call	0x40052e
<Block for 0x400089, 27 bytes>
0x400089:	mov	edx, dword ptr [rbp - 0x84]
0x40008f:	mov	dword ptr [rax], edx
0x400091:	lea	rdx, [rbp - 0x80]
0x400095:	lea	rax, [rbp - 0x50]
0x400099:	mov	rsi, rdx
0x40009c:	mov	rdi, rax
0x40009f:	call	0x4003b8
<Block for 0x4000a4, 12 bytes>
0x4000a4:	lea	rax, [rbp - 0x50]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500000
<Block for 0x4000b0, 12 bytes>
0x4000b0:	lea	rax, [rbp - 0x50]
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x400398
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rax, [rbp - 0x80]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x400398
<Block for 0x4000c8, 16 bytes>
0x4000c8:	nop	
0x4000c9:	mov	rax, qword ptr [rbp - 0x18]
0x4000cd:	xor	rax, qword ptr fs:[0x28]
0x4000d6:	je	0x400112
<Block for 0x400112, 10 bytes>
0x400112:	add	rsp, 0x88
0x400119:	pop	rbx
0x40011a:	pop	rbp
0x40011b:	ret	
<Block for 0x4000d8, 2 bytes>
0x4000d8:	jmp	0x40010d
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500010
