<Block for 0x400000, 98 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x98]
0x400025:	mov	qword ptr [rbp - 0x90], rax
0x40002c:	mov	eax, 0x10
0x400031:	sub	rax, 1
0x400035:	add	rax, 0x3a
0x400039:	mov	ecx, 0x10
0x40003e:	mov	edx, 0
0x400043:	div	rcx
0x400046:	imul	rax, rax, 0x10
0x40004a:	mov	rdx, rax
0x40004d:	and	rdx, 0xfffffffffffff000
0x400054:	mov	rcx, rsp
0x400057:	sub	rcx, rdx
0x40005a:	mov	rdx, rcx
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x400074, 26 bytes>
0x400074:	mov	rdx, rax
0x400077:	and	edx, 0xfff
0x40007d:	sub	rsp, rdx
0x400080:	mov	rdx, rax
0x400083:	and	edx, 0xfff
0x400089:	test	rdx, rdx
0x40008c:	je	0x40009e
<Block for 0x400062, 18 bytes>
0x400062:	sub	rsp, 0x1000
0x400069:	or	qword ptr [rsp + 0xff8], 0
0x400072:	jmp	0x40005d
<Block for 0x40009e, 76 bytes>
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0x88], rax
0x4000b4:	mov	eax, 0x10
0x4000b9:	sub	rax, 1
0x4000bd:	add	rax, 0x6c
0x4000c1:	mov	edi, 0x10
0x4000c6:	mov	edx, 0
0x4000cb:	div	rdi
0x4000ce:	imul	rax, rax, 0x10
0x4000d2:	mov	rdx, rax
0x4000d5:	and	rdx, 0xfffffffffffff000
0x4000dc:	mov	rsi, rsp
0x4000df:	sub	rsi, rdx
0x4000e2:	mov	rdx, rsi
0x4000e5:	cmp	rsp, rdx
0x4000e8:	je	0x4000fc
<Block for 0x40008e, 92 bytes>
0x40008e:	and	eax, 0xfff
0x400093:	sub	rax, 8
0x400097:	add	rax, rsp
0x40009a:	or	qword ptr [rax], 0
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0x88], rax
0x4000b4:	mov	eax, 0x10
0x4000b9:	sub	rax, 1
0x4000bd:	add	rax, 0x6c
0x4000c1:	mov	edi, 0x10
0x4000c6:	mov	edx, 0
0x4000cb:	div	rdi
0x4000ce:	imul	rax, rax, 0x10
0x4000d2:	mov	rdx, rax
0x4000d5:	and	rdx, 0xfffffffffffff000
0x4000dc:	mov	rsi, rsp
0x4000df:	sub	rsi, rdx
0x4000e2:	mov	rdx, rsi
0x4000e5:	cmp	rsp, rdx
0x4000e8:	je	0x4000fc
<Block for 0x40005d, 5 bytes>
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x4000fc, 26 bytes>
0x4000fc:	mov	rdx, rax
0x4000ff:	and	edx, 0xfff
0x400105:	sub	rsp, rdx
0x400108:	mov	rdx, rax
0x40010b:	and	edx, 0xfff
0x400111:	test	rdx, rdx
0x400114:	je	0x400126
<Block for 0x4000ea, 18 bytes>
0x4000ea:	sub	rsp, 0x1000
0x4000f1:	or	qword ptr [rsp + 0xff8], 0
0x4000fa:	jmp	0x4000e5
<Block for 0x400126, 44 bytes>
0x400126:	mov	rax, rsp
0x400129:	add	rax, 0xf
0x40012d:	shr	rax, 4
0x400131:	shl	rax, 4
0x400135:	mov	qword ptr [rbp - 0x80], rax
0x400139:	mov	rax, qword ptr [rbp - 0x88]
0x400140:	mov	edx, 0x31
0x400145:	mov	esi, 0x41
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500000
<Block for 0x400116, 60 bytes>
0x400116:	and	eax, 0xfff
0x40011b:	sub	rax, 8
0x40011f:	add	rax, rsp
0x400122:	or	qword ptr [rax], 0
0x400126:	mov	rax, rsp
0x400129:	add	rax, 0xf
0x40012d:	shr	rax, 4
0x400131:	shl	rax, 4
0x400135:	mov	qword ptr [rbp - 0x80], rax
0x400139:	mov	rax, qword ptr [rbp - 0x88]
0x400140:	mov	edx, 0x31
0x400145:	mov	esi, 0x41
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500000
<Block for 0x4000e5, 5 bytes>
0x4000e5:	cmp	rsp, rdx
0x4000e8:	je	0x4000fc
<Block for 0x400152, 36 bytes>
0x400152:	mov	rax, qword ptr [rbp - 0x88]
0x400159:	add	rax, 0x31
0x40015d:	mov	byte ptr [rax], 0
0x400160:	mov	rax, qword ptr [rbp - 0x80]
0x400164:	mov	edx, 0x63
0x400169:	mov	esi, 0x41
0x40016e:	mov	rdi, rax
0x400171:	call	0x500000
<Block for 0x400176, 61 bytes>
0x400176:	mov	rax, qword ptr [rbp - 0x80]
0x40017a:	add	rax, 0x63
0x40017e:	mov	byte ptr [rax], 0
0x400181:	mov	rax, qword ptr [rbp - 0x88]
0x400188:	mov	qword ptr [rbp - 0x98], rax
0x40018f:	mov	rax, qword ptr [rbp - 0x90]
0x400196:	mov	rax, qword ptr [rax]
0x400199:	mov	qword ptr [rbp - 0x78], rax
0x40019d:	lea	rax, [rbp - 0x70]
0x4001a1:	mov	edx, 0x63
0x4001a6:	mov	esi, 0x43
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500000
<Block for 0x4001b3, 16 bytes>
0x4001b3:	mov	byte ptr [rbp - 0xd], 0
0x4001b7:	lea	rax, [rbp - 0x70]
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500008
<Block for 0x4001c3, 22 bytes>
0x4001c3:	mov	rdx, rax
0x4001c6:	mov	rcx, qword ptr [rbp - 0x78]
0x4001ca:	lea	rax, [rbp - 0x70]
0x4001ce:	mov	rsi, rcx
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500010
<Block for 0x4001d9, 16 bytes>
0x4001d9:	mov	byte ptr [rbp - 0xd], 0
0x4001dd:	lea	rax, [rbp - 0x70]
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500018
<Block for 0x4001e9, 16 bytes>
0x4001e9:	nop	
0x4001ea:	mov	rax, qword ptr [rbp - 8]
0x4001ee:	xor	rax, qword ptr fs:[0x28]
0x4001f7:	je	0x4001fe
<Block for 0x4001fe, 2 bytes>
0x4001fe:	leave	
0x4001ff:	ret	
<Block for 0x4001f9, 5 bytes>
0x4001f9:	call	0x500020
