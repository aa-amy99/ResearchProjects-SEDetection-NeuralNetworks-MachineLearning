<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400026:	mov	rax, qword ptr [rbp - 0x48]
0x40002a:	mov	rdi, rax
0x40002d:	call	0x500000
<Block for 0x400032, 24 bytes>
0x400032:	mov	qword ptr [rbp - 0x30], rax
0x400036:	mov	edx, 6
0x40003b:	mov	esi, 1
0x400040:	mov	edi, 2
0x400045:	call	0x500008
<Block for 0x40004a, 13 bytes>
0x40004a:	mov	dword ptr [rbp - 0x38], eax
0x40004d:	cmp	dword ptr [rbp - 0x38], -1
0x400051:	je	0x400144
<Block for 0x400144, 3 bytes>
0x400144:	nop	
0x400145:	jmp	0x400148
<Block for 0x400057, 22 bytes>
0x400057:	lea	rax, [rbp - 0x20]
0x40005b:	mov	edx, 0x10
0x400060:	mov	esi, 0
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x400148, 6 bytes>
0x400148:	cmp	dword ptr [rbp - 0x38], -1
0x40014c:	je	0x400158
<Block for 0x40006d, 18 bytes>
0x40006d:	mov	word ptr [rbp - 0x20], 2
0x400073:	lea	rdi, [rip + 0x13d]
0x40007a:	call	0x500018
<Block for 0x400158, 19 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x48]
0x40015c:	mov	rcx, qword ptr [rbp - 8]
0x400160:	xor	rcx, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x40014e, 10 bytes>
0x40014e:	mov	eax, dword ptr [rbp - 0x38]
0x400151:	mov	edi, eax
0x400153:	call	0x500040
<Block for 0x40007f, 13 bytes>
0x40007f:	mov	dword ptr [rbp - 0x1c], eax
0x400082:	mov	edi, 0x6987
0x400087:	call	0x500020
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500048
<Block for 0x40008c, 26 bytes>
0x40008c:	mov	word ptr [rbp - 0x1e], ax
0x400090:	lea	rcx, [rbp - 0x20]
0x400094:	mov	eax, dword ptr [rbp - 0x38]
0x400097:	mov	edx, 0x10
0x40009c:	mov	rsi, rcx
0x40009f:	mov	edi, eax
0x4000a1:	call	0x500028
<Block for 0x4000a6, 9 bytes>
0x4000a6:	cmp	eax, -1
0x4000a9:	je	0x400147
<Block for 0x4000af, 39 bytes>
0x4000af:	mov	eax, 0xf9
0x4000b4:	sub	rax, qword ptr [rbp - 0x30]
0x4000b8:	mov	rdx, rax
0x4000bb:	mov	rcx, qword ptr [rbp - 0x48]
0x4000bf:	mov	rax, qword ptr [rbp - 0x30]
0x4000c3:	lea	rsi, [rcx + rax]
0x4000c7:	mov	eax, dword ptr [rbp - 0x38]
0x4000ca:	mov	ecx, 0
0x4000cf:	mov	edi, eax
0x4000d1:	call	0x500030
<Block for 0x400147, 1 bytes>
0x400147:	nop	
<Block for 0x4000d6, 9 bytes>
0x4000d6:	mov	dword ptr [rbp - 0x34], eax
0x4000d9:	cmp	dword ptr [rbp - 0x34], -1
0x4000dd:	je	0x400148
<Block for 0x4000df, 6 bytes>
0x4000df:	cmp	dword ptr [rbp - 0x34], 0
0x4000e3:	je	0x400148
<Block for 0x4000e5, 40 bytes>
0x4000e5:	mov	eax, dword ptr [rbp - 0x34]
0x4000e8:	movsxd	rdx, eax
0x4000eb:	mov	rax, qword ptr [rbp - 0x30]
0x4000ef:	add	rdx, rax
0x4000f2:	mov	rax, qword ptr [rbp - 0x48]
0x4000f6:	add	rax, rdx
0x4000f9:	mov	byte ptr [rax], 0
0x4000fc:	mov	rax, qword ptr [rbp - 0x48]
0x400100:	mov	esi, 0xd
0x400105:	mov	rdi, rax
0x400108:	call	0x500038
<Block for 0x40010d, 11 bytes>
0x40010d:	mov	qword ptr [rbp - 0x28], rax
0x400111:	cmp	qword ptr [rbp - 0x28], 0
0x400116:	je	0x40011f
<Block for 0x40011f, 17 bytes>
0x40011f:	mov	rax, qword ptr [rbp - 0x48]
0x400123:	mov	esi, 0xa
0x400128:	mov	rdi, rax
0x40012b:	call	0x500038
<Block for 0x400118, 24 bytes>
0x400118:	mov	rax, qword ptr [rbp - 0x28]
0x40011c:	mov	byte ptr [rax], 0
0x40011f:	mov	rax, qword ptr [rbp - 0x48]
0x400123:	mov	esi, 0xa
0x400128:	mov	rdi, rax
0x40012b:	call	0x500038
<Block for 0x400130, 11 bytes>
0x400130:	mov	qword ptr [rbp - 0x28], rax
0x400134:	cmp	qword ptr [rbp - 0x28], 0
0x400139:	je	0x400148
<Block for 0x40013b, 9 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x28]
0x40013f:	mov	byte ptr [rax], 0
0x400142:	jmp	0x400148
