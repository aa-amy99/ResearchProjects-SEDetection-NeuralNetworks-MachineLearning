<Block for 0x40015a, 26 bytes>
0x40015a:	endbr64	
0x40015e:	push	rbp
0x40015f:	mov	rbp, rsp
0x400162:	sub	rsp, 0x20
0x400166:	mov	qword ptr [rbp - 0x18], rdi
0x40016a:	mov	eax, dword ptr [rip + 0x2c0]
0x400170:	test	eax, eax
0x400172:	je	0x400182
<Block for 0x400182, 10 bytes>
0x400182:	mov	edi, 0x64
0x400187:	call	0x500000
<Block for 0x400174, 12 bytes>
0x400174:	lea	rdi, [rip + 0x2bd]
0x40017b:	call	0x500010
<Block for 0x40018c, 26 bytes>
0x40018c:	mov	qword ptr [rbp - 8], rax
0x400190:	mov	rax, qword ptr [rbp - 8]
0x400194:	mov	edx, 0x63
0x400199:	mov	esi, 0x41
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500008
<Block for 0x400180, 2 bytes>
0x400180:	jmp	0x4001b9
<Block for 0x4001a6, 25 bytes>
0x4001a6:	mov	rax, qword ptr [rbp - 8]
0x4001aa:	add	rax, 0x63
0x4001ae:	mov	byte ptr [rax], 0
0x4001b1:	mov	rax, qword ptr [rbp - 8]
0x4001b5:	mov	qword ptr [rbp - 0x18], rax
0x4001b9:	mov	rax, qword ptr [rbp - 0x18]
0x4001bd:	leave	
0x4001be:	ret	
<Block for 0x4001b9, 6 bytes>
0x4001b9:	mov	rax, qword ptr [rbp - 0x18]
0x4001bd:	leave	
0x4001be:	ret	
