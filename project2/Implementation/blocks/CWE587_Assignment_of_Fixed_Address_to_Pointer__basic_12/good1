<Block for 0x400078, 37 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x20
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	mov	eax, 0
0x400098:	call	0x500000
<Block for 0x40009d, 4 bytes>
0x40009d:	test	eax, eax
0x40009f:	je	0x4000c0
<Block for 0x4000c0, 29 bytes>
0x4000c0:	mov	byte ptr [rbp - 0x19], 0x61
0x4000c4:	lea	rax, [rbp - 0x19]
0x4000c8:	mov	qword ptr [rbp - 0x18], rax
0x4000cc:	mov	rax, qword ptr [rbp - 0x18]
0x4000d0:	movzx	eax, byte ptr [rax]
0x4000d3:	movsx	eax, al
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500008
<Block for 0x4000a1, 29 bytes>
0x4000a1:	mov	byte ptr [rbp - 0x19], 0x61
0x4000a5:	lea	rax, [rbp - 0x19]
0x4000a9:	mov	qword ptr [rbp - 0x10], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x10]
0x4000b1:	movzx	eax, byte ptr [rax]
0x4000b4:	movsx	eax, al
0x4000b7:	mov	edi, eax
0x4000b9:	call	0x500008
<Block for 0x4000dd, 16 bytes>
0x4000dd:	nop	
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	xor	rax, qword ptr fs:[0x28]
0x4000eb:	je	0x4000f2
<Block for 0x4000be, 2 bytes>
0x4000be:	jmp	0x4000dd
<Block for 0x4000f2, 2 bytes>
0x4000f2:	leave	
0x4000f3:	ret	
<Block for 0x4000ed, 5 bytes>
0x4000ed:	call	0x500010
