<Block for 0x40011b, 22 bytes>
0x40011b:	endbr64	
0x40011f:	push	rbp
0x400120:	mov	rbp, rsp
0x400123:	push	r13
0x400125:	push	r12
0x400127:	push	rbx
0x400128:	sub	rsp, 0x18
0x40012c:	call	0x500088
<Block for 0x400131, 9 bytes>
0x400131:	test	eax, eax
0x400133:	setne	al
0x400136:	test	al, al
0x400138:	je	0x40014b
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500008
<Block for 0x40013a, 12 bytes>
0x40013a:	lea	rdi, [rip + 0x31a]
0x400141:	call	0x500060
<Block for 0x400150, 12 bytes>
0x400150:	and	eax, 1
0x400153:	test	eax, eax
0x400155:	sete	al
0x400158:	test	al, al
0x40015a:	je	0x400191
<Block for 0x400146, 5 bytes>
0x400146:	jmp	0x4002a0
<Block for 0x400191, 5 bytes>
0x400191:	call	0x500008
<Block for 0x40015c, 10 bytes>
0x40015c:	mov	edi, 0x10
0x400161:	call	0x500010
<Block for 0x4002a0, 11 bytes>
0x4002a0:	add	rsp, 0x18
0x4002a4:	pop	rbx
0x4002a5:	pop	r12
0x4002a7:	pop	r13
0x4002a9:	pop	rbp
0x4002aa:	ret	
<Block for 0x400196, 12 bytes>
0x400196:	and	eax, 1
0x400199:	test	eax, eax
0x40019b:	sete	al
0x40019e:	test	al, al
0x4001a0:	je	0x4001d7
<Block for 0x400166, 18 bytes>
0x400166:	mov	rbx, rax
0x400169:	lea	rsi, [rip + 0x2d4]
0x400170:	mov	rdi, rbx
0x400173:	call	0x500018
<Block for 0x4001d7, 12 bytes>
0x4001d7:	lea	rdi, [rip + 0x270]
0x4001de:	call	0x500060
<Block for 0x4001a2, 10 bytes>
0x4001a2:	mov	edi, 0x10
0x4001a7:	call	0x500010
<Block for 0x400178, 25 bytes>
0x400178:	mov	rax, qword ptr [rip + 0xffea9]
0x40017f:	mov	rdx, rax
0x400182:	lea	rsi, [rip + 0xffea7]
0x400189:	mov	rdi, rbx
0x40018c:	call	0x500038
<Block for 0x4001e3, 5 bytes>
0x4001e3:	jmp	0x4002a0
<Block for 0x4001ac, 18 bytes>
0x4001ac:	mov	rbx, rax
0x4001af:	lea	rsi, [rip + 0x293]
0x4001b6:	mov	rdi, rbx
0x4001b9:	call	0x500040
<Block for 0x4001be, 25 bytes>
0x4001be:	mov	rax, qword ptr [rip + 0xffe8b]
0x4001c5:	mov	rdx, rax
0x4001c8:	lea	rsi, [rip + 0xffe89]
0x4001cf:	mov	rdi, rbx
0x4001d2:	call	0x500038
