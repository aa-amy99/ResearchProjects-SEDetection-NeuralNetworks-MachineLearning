<Block for 0x400343, 82 bytes>
0x400343:	endbr64	
0x400347:	push	rbp
0x400348:	mov	rbp, rsp
0x40034b:	sub	rsp, 0x120
0x400352:	mov	rax, qword ptr fs:[0x28]
0x40035b:	mov	qword ptr [rbp - 8], rax
0x40035f:	xor	eax, eax
0x400361:	movabs	rax, 0x3d48544150
0x40036b:	mov	edx, 0
0x400370:	mov	qword ptr [rbp - 0x110], rax
0x400377:	mov	qword ptr [rbp - 0x108], rdx
0x40037e:	lea	rdx, [rbp - 0x100]
0x400385:	mov	eax, 0
0x40038a:	mov	ecx, 0x1d
0x40038f:	mov	rdi, rdx
0x400392:	rep stosq	qword ptr [rdi], rax
<Block for 0x400395, 34 bytes>
0x400395:	mov	rdx, rdi
0x400398:	mov	word ptr [rdx], ax
0x40039b:	add	rdx, 2
0x40039f:	lea	rax, [rbp - 0x110]
0x4003a6:	mov	qword ptr [rbp - 0x118], rax
0x4003ad:	mov	eax, 0
0x4003b2:	call	0x400000
<Block for 0x400392, 3 bytes>
0x400392:	rep stosq	qword ptr [rdi], rax
<Block for 0x4003b7, 4 bytes>
0x4003b7:	test	eax, eax
0x4003b9:	je	0x4003f4
<Block for 0x4003f4, 15 bytes>
0x4003f4:	mov	rax, qword ptr [rbp - 0x118]
0x4003fb:	mov	rdi, rax
0x4003fe:	call	0x500048
<Block for 0x4003bb, 27 bytes>
0x4003bb:	mov	rax, qword ptr [rbp - 0x118]
0x4003c2:	mov	rcx, -1
0x4003c9:	mov	rdx, rax
0x4003cc:	mov	eax, 0
0x4003d1:	mov	rdi, rdx
0x4003d4:	repne scasb	al, byte ptr [rdi]
<Block for 0x400403, 16 bytes>
0x400403:	nop	
0x400404:	mov	rax, qword ptr [rbp - 8]
0x400408:	xor	rax, qword ptr fs:[0x28]
0x400411:	je	0x400418
<Block for 0x4003d6, 45 bytes>
0x4003d6:	mov	rax, rcx
0x4003d9:	not	rax
0x4003dc:	lea	rdx, [rax - 1]
0x4003e0:	mov	rax, qword ptr [rbp - 0x118]
0x4003e7:	add	rax, rdx
0x4003ea:	mov	dword ptr [rax], 0x6e69622f
0x4003f0:	mov	byte ptr [rax + 4], 0
0x4003f4:	mov	rax, qword ptr [rbp - 0x118]
0x4003fb:	mov	rdi, rax
0x4003fe:	call	0x500048
<Block for 0x4003d4, 2 bytes>
0x4003d4:	repne scasb	al, byte ptr [rdi]
<Block for 0x400418, 2 bytes>
0x400418:	leave	
0x400419:	ret	
<Block for 0x400413, 5 bytes>
0x400413:	call	0x500050
