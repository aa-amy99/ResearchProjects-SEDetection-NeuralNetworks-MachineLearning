<Block for 0x400063, 65 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x20
0x40006f:	mov	rax, qword ptr fs:[0x28]
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	xor	eax, eax
0x40007e:	mov	qword ptr [rbp - 0x12], 0
0x400086:	mov	word ptr [rbp - 0xa], 0
0x40008c:	mov	rdx, qword ptr [rip + 0xfff85]
0x400093:	lea	rax, [rbp - 0x12]
0x400097:	mov	esi, 0xa
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500020
<Block for 0x4000a4, 5 bytes>
0x4000a4:	test	rax, rax
0x4000a7:	jne	0x4000b9
<Block for 0x4000a9, 12 bytes>
0x4000a9:	lea	rdi, [rip + 0x8d]
0x4000b0:	call	0x500008
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rax, [rbp - 0x12]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500028
<Block for 0x4000b5, 16 bytes>
0x4000b5:	mov	byte ptr [rbp - 0x12], 0
0x4000b9:	lea	rax, [rbp - 0x12]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500028
<Block for 0x4000c5, 9 bytes>
0x4000c5:	mov	dword ptr [rbp - 0x18], eax
0x4000c8:	cmp	dword ptr [rbp - 0x18], 0
0x4000cc:	jle	0x4000db
<Block for 0x4000db, 19 bytes>
0x4000db:	lea	rax, [rbp - 0x12]
0x4000df:	lea	rsi, [rip + 0x44]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500000
<Block for 0x4000ce, 32 bytes>
0x4000ce:	mov	eax, dword ptr [rbp - 0x18]
0x4000d1:	sub	eax, 1
0x4000d4:	cdqe	
0x4000d6:	mov	byte ptr [rbp + rax - 0x12], 0
0x4000db:	lea	rax, [rbp - 0x12]
0x4000df:	lea	rsi, [rip + 0x44]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500000
<Block for 0x4000ee, 4 bytes>
0x4000ee:	test	eax, eax
0x4000f0:	jne	0x4000fe
<Block for 0x4000f2, 12 bytes>
0x4000f2:	lea	rdi, [rip + 0x54]
0x4000f9:	call	0x500008
<Block for 0x4000fe, 16 bytes>
0x4000fe:	nop	
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	xor	rax, qword ptr fs:[0x28]
0x40010c:	je	0x400113
<Block for 0x400113, 2 bytes>
0x400113:	leave	
0x400114:	ret	
<Block for 0x40010e, 5 bytes>
0x40010e:	call	0x500010
