<Block for 0x4001fd, 40 bytes>
0x4001fd:	endbr64	
0x400201:	push	rbp
0x400202:	mov	rbp, rsp
0x400205:	push	rbx
0x400206:	sub	rsp, 0x58
0x40020a:	mov	rax, qword ptr fs:[0x28]
0x400213:	mov	qword ptr [rbp - 0x18], rax
0x400217:	xor	eax, eax
0x400219:	lea	rax, [rbp - 0x50]
0x40021d:	mov	rdi, rax
0x400220:	call	0x4003bc
<Block for 0x400225, 33 bytes>
0x400225:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40022c:	mov	dword ptr [rbp - 0x54], 0x14
0x400233:	lea	rdx, [rbp - 0x54]
0x400237:	lea	rax, [rbp - 0x50]
0x40023b:	mov	rsi, rdx
0x40023e:	mov	rdi, rax
0x400241:	call	0x4004b4
<Block for 0x400246, 19 bytes>
0x400246:	lea	rdx, [rbp - 0x54]
0x40024a:	lea	rax, [rbp - 0x50]
0x40024e:	mov	rsi, rdx
0x400251:	mov	rdi, rax
0x400254:	call	0x4004b4
<Block for 0x400259, 19 bytes>
0x400259:	lea	rdx, [rbp - 0x54]
0x40025d:	lea	rax, [rbp - 0x50]
0x400261:	mov	rsi, rdx
0x400264:	mov	rdi, rax
0x400267:	call	0x4004b4
<Block for 0x40026c, 19 bytes>
0x40026c:	lea	rdx, [rbp - 0x50]
0x400270:	lea	rax, [rbp - 0x30]
0x400274:	mov	rsi, rdx
0x400277:	mov	rdi, rax
0x40027a:	call	0x4004ee
<Block for 0x40027f, 12 bytes>
0x40027f:	lea	rax, [rbp - 0x30]
0x400283:	mov	rdi, rax
0x400286:	call	0x500058
<Block for 0x40028b, 12 bytes>
0x40028b:	lea	rax, [rbp - 0x30]
0x40028f:	mov	rdi, rax
0x400292:	call	0x4003dc
<Block for 0x400297, 12 bytes>
0x400297:	lea	rax, [rbp - 0x50]
0x40029b:	mov	rdi, rax
0x40029e:	call	0x4003dc
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 0x18]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002ed
<Block for 0x4002ed, 7 bytes>
0x4002ed:	add	rsp, 0x58
0x4002f1:	pop	rbx
0x4002f2:	pop	rbp
0x4002f3:	ret	
<Block for 0x4002b3, 2 bytes>
0x4002b3:	jmp	0x4002e8
<Block for 0x4002e8, 5 bytes>
0x4002e8:	call	0x500050
