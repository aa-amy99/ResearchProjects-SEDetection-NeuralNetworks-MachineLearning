<Block for 0x40010d, 52 bytes>
0x40010d:	endbr64	
0x400111:	push	rbp
0x400112:	mov	rbp, rsp
0x400115:	sub	rsp, 0x90
0x40011c:	mov	rax, qword ptr fs:[0x28]
0x400125:	mov	qword ptr [rbp - 8], rax
0x400129:	xor	eax, eax
0x40012b:	mov	qword ptr [rbp - 0x88], 0
0x400136:	mov	eax, dword ptr [rip + 0x210]
0x40013c:	cmp	eax, 5
0x40013f:	je	0x40014f
<Block for 0x40014f, 10 bytes>
0x40014f:	mov	edi, 0x64
0x400154:	call	0x500000
<Block for 0x400141, 12 bytes>
0x400141:	lea	rdi, [rip + 0x208]
0x400148:	call	0x500018
<Block for 0x400159, 32 bytes>
0x400159:	mov	qword ptr [rbp - 0x88], rax
0x400160:	mov	rax, qword ptr [rbp - 0x88]
0x400167:	mov	edx, 0x63
0x40016c:	mov	esi, 0x41
0x400171:	mov	rdi, rax
0x400174:	call	0x500008
<Block for 0x40014d, 2 bytes>
0x40014d:	jmp	0x400187
<Block for 0x400179, 36 bytes>
0x400179:	mov	rax, qword ptr [rbp - 0x88]
0x400180:	add	rax, 0x63
0x400184:	mov	byte ptr [rax], 0
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x43
0x400195:	mov	rdi, rax
0x400198:	call	0x500008
<Block for 0x400187, 22 bytes>
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x43
0x400195:	mov	rdi, rax
0x400198:	call	0x500008
<Block for 0x40019d, 16 bytes>
0x40019d:	mov	byte ptr [rbp - 0xd], 0
0x4001a1:	lea	rax, [rbp - 0x70]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500010
<Block for 0x4001ad, 22 bytes>
0x4001ad:	mov	qword ptr [rbp - 0x78], rax
0x4001b1:	mov	qword ptr [rbp - 0x80], 0
0x4001b9:	mov	rax, qword ptr [rbp - 0x80]
0x4001bd:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c1:	jae	0x4001e8
<Block for 0x4001c3, 37 bytes>
0x4001c3:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ca:	mov	rax, qword ptr [rbp - 0x80]
0x4001ce:	add	rax, rdx
0x4001d1:	movzx	eax, byte ptr [rax]
0x4001d4:	lea	rcx, [rbp - 0x70]
0x4001d8:	mov	rdx, qword ptr [rbp - 0x80]
0x4001dc:	add	rdx, rcx
0x4001df:	mov	byte ptr [rdx], al
0x4001e1:	add	qword ptr [rbp - 0x80], 1
0x4001e6:	jmp	0x4001b9
<Block for 0x4001e8, 16 bytes>
0x4001e8:	mov	byte ptr [rbp - 0xd], 0
0x4001ec:	lea	rax, [rbp - 0x70]
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500018
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	rax, qword ptr [rbp - 0x80]
0x4001bd:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c1:	jae	0x4001e8
<Block for 0x4001f8, 10 bytes>
0x4001f8:	cmp	qword ptr [rbp - 0x88], 0
0x400200:	je	0x400211
<Block for 0x400211, 16 bytes>
0x400211:	nop	
0x400212:	mov	rax, qword ptr [rbp - 8]
0x400216:	xor	rax, qword ptr fs:[0x28]
0x40021f:	je	0x400226
<Block for 0x400202, 15 bytes>
0x400202:	mov	rax, qword ptr [rbp - 0x88]
0x400209:	mov	rdi, rax
0x40020c:	call	0x500020
<Block for 0x400226, 2 bytes>
0x400226:	leave	
0x400227:	ret	
<Block for 0x400221, 5 bytes>
0x400221:	call	0x500028
