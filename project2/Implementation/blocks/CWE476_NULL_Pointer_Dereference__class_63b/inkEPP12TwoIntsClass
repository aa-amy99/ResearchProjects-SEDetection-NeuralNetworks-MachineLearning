<Block for 0x400082, 34 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	qword ptr [rbp - 0x18], rdi
0x400092:	mov	rax, qword ptr [rbp - 0x18]
0x400096:	mov	rax, qword ptr [rax]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	cmp	qword ptr [rbp - 8], 0
0x4000a2:	je	0x4000c9
<Block for 0x4000c9, 12 bytes>
0x4000c9:	lea	rdi, [rip + 8]
0x4000d0:	call	0x500010
<Block for 0x4000a4, 13 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	eax, dword ptr [rax]
0x4000aa:	mov	edi, eax
0x4000ac:	call	0x500000
<Block for 0x4000d5, 3 bytes>
0x4000d5:	nop	
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000b1, 9 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	test	rax, rax
0x4000b8:	je	0x4000d5
<Block for 0x4000ba, 13 bytes>
0x4000ba:	mov	esi, 8
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500008
<Block for 0x4000c7, 2 bytes>
0x4000c7:	jmp	0x4000d5
