<Block for 0x40008d, 30 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	qword ptr [rbp - 8], 0
0x4000a1:	mov	edi, 0x320
0x4000a6:	call	0x500000
<Block for 0x4000ab, 19 bytes>
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	mov	qword ptr [rbp - 0x10], 0
0x4000b7:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000bc:	ja	0x4000f8
<Block for 0x4000be, 58 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 0x10]
0x4000c2:	lea	rdx, [rax*8]
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	add	rax, rdx
0x4000d1:	mov	dword ptr [rax], 1
0x4000d7:	mov	rax, qword ptr [rbp - 0x10]
0x4000db:	lea	rdx, [rax*8]
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	add	rax, rdx
0x4000ea:	mov	dword ptr [rax + 4], 2
0x4000f1:	add	qword ptr [rbp - 0x10], 1
0x4000f6:	jmp	0x4000b7
<Block for 0x4000f8, 12 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 8]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500010
<Block for 0x4000b7, 7 bytes>
0x4000b7:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000bc:	ja	0x4000f8
<Block for 0x400104, 3 bytes>
0x400104:	nop	
0x400105:	leave	
0x400106:	ret	
