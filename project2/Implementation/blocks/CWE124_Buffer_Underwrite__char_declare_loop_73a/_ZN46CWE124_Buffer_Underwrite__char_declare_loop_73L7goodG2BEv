<Block for 0x400142, 46 bytes>
0x400142:	endbr64	
0x400146:	push	rbp
0x400147:	mov	rbp, rsp
0x40014a:	push	rbx
0x40014b:	sub	rsp, 0xc8
0x400152:	mov	rax, qword ptr fs:[0x28]
0x40015b:	mov	qword ptr [rbp - 0x18], rax
0x40015f:	xor	eax, eax
0x400161:	lea	rax, [rbp - 0xc0]
0x400168:	mov	rdi, rax
0x40016b:	call	0x40033e
<Block for 0x400170, 22 bytes>
0x400170:	lea	rax, [rbp - 0x80]
0x400174:	mov	edx, 0x63
0x400179:	mov	esi, 0x41
0x40017e:	mov	rdi, rax
0x400181:	call	0x500000
<Block for 0x400186, 40 bytes>
0x400186:	mov	byte ptr [rbp - 0x1d], 0
0x40018a:	lea	rax, [rbp - 0x80]
0x40018e:	mov	qword ptr [rbp - 0xc8], rax
0x400195:	lea	rdx, [rbp - 0xc8]
0x40019c:	lea	rax, [rbp - 0xc0]
0x4001a3:	mov	rsi, rdx
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x400434
<Block for 0x4001ae, 25 bytes>
0x4001ae:	lea	rdx, [rbp - 0xc8]
0x4001b5:	lea	rax, [rbp - 0xc0]
0x4001bc:	mov	rsi, rdx
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x400434
<Block for 0x4001c7, 25 bytes>
0x4001c7:	lea	rdx, [rbp - 0xc8]
0x4001ce:	lea	rax, [rbp - 0xc0]
0x4001d5:	mov	rsi, rdx
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x400434
<Block for 0x4001e0, 25 bytes>
0x4001e0:	lea	rdx, [rbp - 0xc0]
0x4001e7:	lea	rax, [rbp - 0xa0]
0x4001ee:	mov	rsi, rdx
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x40046e
<Block for 0x4001f9, 15 bytes>
0x4001f9:	lea	rax, [rbp - 0xa0]
0x400200:	mov	rdi, rax
0x400203:	call	0x500020
<Block for 0x400208, 15 bytes>
0x400208:	lea	rax, [rbp - 0xa0]
0x40020f:	mov	rdi, rax
0x400212:	call	0x40035e
<Block for 0x400217, 15 bytes>
0x400217:	lea	rax, [rbp - 0xc0]
0x40021e:	mov	rdi, rax
0x400221:	call	0x40035e
<Block for 0x400226, 16 bytes>
0x400226:	nop	
0x400227:	mov	rax, qword ptr [rbp - 0x18]
0x40022b:	xor	rax, qword ptr fs:[0x28]
0x400234:	je	0x400276
<Block for 0x400276, 10 bytes>
0x400276:	add	rsp, 0xc8
0x40027d:	pop	rbx
0x40027e:	pop	rbp
0x40027f:	ret	
<Block for 0x400236, 2 bytes>
0x400236:	jmp	0x400271
<Block for 0x400271, 5 bytes>
0x400271:	call	0x500018
