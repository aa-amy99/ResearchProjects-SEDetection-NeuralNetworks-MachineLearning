<Block for 0x400062, 22 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x10
0x40006e:	mov	eax, 0
0x400073:	call	0x40000f
<Block for 0x400078, 4 bytes>
0x400078:	test	eax, eax
0x40007a:	je	0x40008a
<Block for 0x40008a, 5 bytes>
0x40008a:	call	0x500000
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rdi, [rip + 0xb6]
0x400083:	call	0x500010
<Block for 0x40008f, 8 bytes>
0x40008f:	mov	dword ptr [rbp - 8], eax
0x400092:	call	0x500000
<Block for 0x400088, 2 bytes>
0x400088:	jmp	0x4000c2
<Block for 0x400097, 7 bytes>
0x400097:	and	eax, 1
0x40009a:	test	eax, eax
0x40009c:	jne	0x4000a1
<Block for 0x4000c2, 3 bytes>
0x4000c2:	nop	
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x40009e, 10 bytes>
0x40009e:	not	dword ptr [rbp - 8]
0x4000a1:	mov	eax, dword ptr [rbp - 8]
0x4000a4:	test	eax, eax
0x4000a6:	jns	0x4000b2
<Block for 0x4000a1, 7 bytes>
0x4000a1:	mov	eax, dword ptr [rbp - 8]
0x4000a4:	test	eax, eax
0x4000a6:	jns	0x4000b2
<Block for 0x4000a8, 10 bytes>
0x4000a8:	mov	edi, 1
0x4000ad:	call	0x500018
<Block for 0x4000b2, 16 bytes>
0x4000b2:	mov	eax, dword ptr [rbp - 8]
0x4000b5:	mov	dword ptr [rbp - 4], eax
0x4000b8:	mov	eax, dword ptr [rbp - 4]
0x4000bb:	mov	edi, eax
0x4000bd:	call	0x500008
