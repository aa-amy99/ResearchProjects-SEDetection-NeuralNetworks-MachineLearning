<Block for 0x400079, 22 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	sub	rsp, 0x10
0x400085:	mov	eax, 0
0x40008a:	call	0x40000f
<Block for 0x40008f, 4 bytes>
0x40008f:	test	eax, eax
0x400091:	je	0x4000a1
<Block for 0x4000a1, 10 bytes>
0x4000a1:	mov	edi, 4
0x4000a6:	call	0x500000
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0xe2]
0x40009a:	call	0x500020
<Block for 0x4000ab, 11 bytes>
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	cmp	qword ptr [rbp - 8], 0
0x4000b4:	jne	0x4000c0
<Block for 0x40009f, 2 bytes>
0x40009f:	jmp	0x4000ef
<Block for 0x4000b6, 10 bytes>
0x4000b6:	mov	edi, 0xffffffff
0x4000bb:	call	0x500008
<Block for 0x4000c0, 35 bytes>
0x4000c0:	mov	dword ptr [rbp - 0x10], 5
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	mov	edx, dword ptr [rbp - 0x10]
0x4000ce:	mov	dword ptr [rax], edx
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	mov	eax, dword ptr [rax]
0x4000d6:	mov	dword ptr [rbp - 0xc], eax
0x4000d9:	mov	eax, dword ptr [rbp - 0xc]
0x4000dc:	mov	edi, eax
0x4000de:	call	0x500018
<Block for 0x4000ef, 3 bytes>
0x4000ef:	nop	
0x4000f0:	leave	
0x4000f1:	ret	
<Block for 0x4000e3, 12 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500010
