<Block for 0x4000f2, 22 bytes>
0x4000f2:	endbr64	
0x4000f6:	push	rbp
0x4000f7:	mov	rbp, rsp
0x4000fa:	sub	rsp, 0x10
0x4000fe:	mov	eax, 0
0x400103:	call	0x400000
<Block for 0x400108, 4 bytes>
0x400108:	test	eax, eax
0x40010a:	je	0x40015a
<Block for 0x40015a, 3 bytes>
0x40015a:	nop	
0x40015b:	leave	
0x40015c:	ret	
<Block for 0x40010c, 10 bytes>
0x40010c:	mov	edi, 4
0x400111:	call	0x500000
<Block for 0x400116, 11 bytes>
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	cmp	qword ptr [rbp - 8], 0
0x40011f:	jne	0x40012b
<Block for 0x400121, 10 bytes>
0x400121:	mov	edi, 0xffffffff
0x400126:	call	0x500008
<Block for 0x40012b, 35 bytes>
0x40012b:	mov	dword ptr [rbp - 0x10], 5
0x400132:	mov	rax, qword ptr [rbp - 8]
0x400136:	mov	edx, dword ptr [rbp - 0x10]
0x400139:	mov	dword ptr [rax], edx
0x40013b:	mov	rax, qword ptr [rbp - 8]
0x40013f:	mov	eax, dword ptr [rax]
0x400141:	mov	dword ptr [rbp - 0xc], eax
0x400144:	mov	eax, dword ptr [rbp - 0xc]
0x400147:	mov	edi, eax
0x400149:	call	0x500018
<Block for 0x40014e, 12 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	mov	rdi, rax
0x400155:	call	0x500010
