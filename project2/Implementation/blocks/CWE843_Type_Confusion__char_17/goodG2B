<Block for 0x400066, 44 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x20
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	mov	qword ptr [rbp - 0x10], 0
0x400089:	mov	dword ptr [rbp - 0x14], 0
0x400090:	jmp	0x4000a5
<Block for 0x4000a5, 6 bytes>
0x4000a5:	cmp	dword ptr [rbp - 0x14], 0
0x4000a9:	jle	0x400092
<Block for 0x400092, 25 bytes>
0x400092:	mov	dword ptr [rbp - 0x18], 8
0x400099:	lea	rax, [rbp - 0x18]
0x40009d:	mov	qword ptr [rbp - 0x10], rax
0x4000a1:	add	dword ptr [rbp - 0x14], 1
0x4000a5:	cmp	dword ptr [rbp - 0x14], 0
0x4000a9:	jle	0x400092
<Block for 0x4000ab, 13 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 0x10]
0x4000af:	mov	eax, dword ptr [rax]
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500000
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500008
