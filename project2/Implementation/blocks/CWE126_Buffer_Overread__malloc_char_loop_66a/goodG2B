<Block for 0x40008e, 45 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x40
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	qword ptr [rbp - 0x38], 0
0x4000b1:	mov	edi, 0x64
0x4000b6:	call	0x500000
<Block for 0x4000bb, 11 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x38], rax
0x4000bf:	cmp	qword ptr [rbp - 0x38], 0
0x4000c4:	jne	0x4000d0
<Block for 0x4000c6, 10 bytes>
0x4000c6:	mov	edi, 0xffffffff
0x4000cb:	call	0x500008
<Block for 0x4000d0, 22 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x38]
0x4000d4:	mov	edx, 0x63
0x4000d9:	mov	esi, 0x41
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500010
<Block for 0x4000e6, 31 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 0x38]
0x4000ea:	add	rax, 0x63
0x4000ee:	mov	byte ptr [rax], 0
0x4000f1:	mov	rax, qword ptr [rbp - 0x38]
0x4000f5:	mov	qword ptr [rbp - 0x20], rax
0x4000f9:	lea	rax, [rbp - 0x30]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500028
<Block for 0x400105, 16 bytes>
0x400105:	nop	
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	xor	rax, qword ptr fs:[0x28]
0x400113:	je	0x40011a
<Block for 0x40011a, 2 bytes>
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500020
