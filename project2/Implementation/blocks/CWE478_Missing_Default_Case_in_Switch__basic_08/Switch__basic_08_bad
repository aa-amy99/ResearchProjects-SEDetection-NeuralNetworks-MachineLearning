<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x4000ac
<Block for 0x4000ac, 3 bytes>
0x4000ac:	nop	
0x4000ad:	leave	
0x4000ae:	ret	
<Block for 0x400038, 16 bytes>
0x400038:	lea	rax, [rip + 0x1bd]
0x40003f:	mov	qword ptr [rbp - 8], rax
0x400043:	call	0x500000
<Block for 0x400048, 55 bytes>
0x400048:	mov	edx, eax
0x40004a:	movsxd	rax, edx
0x40004d:	imul	rax, rax, 0x55555556
0x400054:	shr	rax, 0x20
0x400058:	mov	rcx, rax
0x40005b:	mov	eax, edx
0x40005d:	sar	eax, 0x1f
0x400060:	mov	esi, ecx
0x400062:	sub	esi, eax
0x400064:	mov	eax, esi
0x400066:	mov	dword ptr [rbp - 0xc], eax
0x400069:	mov	ecx, dword ptr [rbp - 0xc]
0x40006c:	mov	eax, ecx
0x40006e:	add	eax, eax
0x400070:	add	eax, ecx
0x400072:	sub	edx, eax
0x400074:	mov	eax, edx
0x400076:	mov	dword ptr [rbp - 0xc], eax
0x400079:	cmp	dword ptr [rbp - 0xc], 0
0x40007d:	je	0x400087
<Block for 0x400087, 13 bytes>
0x400087:	lea	rax, [rip + 0x187]
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	jmp	0x4000a0
<Block for 0x40007f, 6 bytes>
0x40007f:	cmp	dword ptr [rbp - 0xc], 1
0x400083:	je	0x400094
<Block for 0x4000a0, 12 bytes>
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500008
<Block for 0x400094, 24 bytes>
0x400094:	lea	rax, [rip + 0x17c]
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500008
<Block for 0x400085, 2 bytes>
0x400085:	jmp	0x4000a0
