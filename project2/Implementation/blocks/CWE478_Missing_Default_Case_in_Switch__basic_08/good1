<Block for 0x4000af, 22 bytes>
0x4000af:	endbr64	
0x4000b3:	push	rbp
0x4000b4:	mov	rbp, rsp
0x4000b7:	sub	rsp, 0x10
0x4000bb:	mov	eax, 0
0x4000c0:	call	0x40000f
<Block for 0x4000c5, 4 bytes>
0x4000c5:	test	eax, eax
0x4000c7:	je	0x4000d7
<Block for 0x4000d7, 16 bytes>
0x4000d7:	lea	rax, [rip + 0x11e]
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	call	0x500000
<Block for 0x4000c9, 12 bytes>
0x4000c9:	lea	rdi, [rip + 0x149]
0x4000d0:	call	0x500008
<Block for 0x4000e7, 55 bytes>
0x4000e7:	mov	edx, eax
0x4000e9:	movsxd	rax, edx
0x4000ec:	imul	rax, rax, 0x55555556
0x4000f3:	shr	rax, 0x20
0x4000f7:	mov	rcx, rax
0x4000fa:	mov	eax, edx
0x4000fc:	sar	eax, 0x1f
0x4000ff:	mov	esi, ecx
0x400101:	sub	esi, eax
0x400103:	mov	eax, esi
0x400105:	mov	dword ptr [rbp - 0xc], eax
0x400108:	mov	ecx, dword ptr [rbp - 0xc]
0x40010b:	mov	eax, ecx
0x40010d:	add	eax, eax
0x40010f:	add	eax, ecx
0x400111:	sub	edx, eax
0x400113:	mov	eax, edx
0x400115:	mov	dword ptr [rbp - 0xc], eax
0x400118:	cmp	dword ptr [rbp - 0xc], 0
0x40011c:	je	0x400126
<Block for 0x4000d5, 2 bytes>
0x4000d5:	jmp	0x40014b
<Block for 0x400126, 13 bytes>
0x400126:	lea	rax, [rip + 0xe8]
0x40012d:	mov	qword ptr [rbp - 8], rax
0x400131:	jmp	0x40013f
<Block for 0x40011e, 6 bytes>
0x40011e:	cmp	dword ptr [rbp - 0xc], 1
0x400122:	je	0x400133
<Block for 0x40014b, 2 bytes>
0x40014b:	leave	
0x40014c:	ret	
<Block for 0x40013f, 12 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 8]
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x400133, 24 bytes>
0x400133:	lea	rax, [rip + 0xdd]
0x40013a:	mov	qword ptr [rbp - 8], rax
0x40013e:	nop	
0x40013f:	mov	rax, qword ptr [rbp - 8]
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x400124, 2 bytes>
0x400124:	jmp	0x40014b
