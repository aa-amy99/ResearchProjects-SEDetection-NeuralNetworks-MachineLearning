<Block for 0x40014d, 22 bytes>
0x40014d:	endbr64	
0x400151:	push	rbp
0x400152:	mov	rbp, rsp
0x400155:	sub	rsp, 0x10
0x400159:	mov	eax, 0
0x40015e:	call	0x400000
<Block for 0x400163, 4 bytes>
0x400163:	test	eax, eax
0x400165:	je	0x4001db
<Block for 0x4001db, 2 bytes>
0x4001db:	leave	
0x4001dc:	ret	
<Block for 0x400167, 16 bytes>
0x400167:	lea	rax, [rip + 0x8e]
0x40016e:	mov	qword ptr [rbp - 8], rax
0x400172:	call	0x500000
<Block for 0x400177, 55 bytes>
0x400177:	mov	edx, eax
0x400179:	movsxd	rax, edx
0x40017c:	imul	rax, rax, 0x55555556
0x400183:	shr	rax, 0x20
0x400187:	mov	rcx, rax
0x40018a:	mov	eax, edx
0x40018c:	sar	eax, 0x1f
0x40018f:	mov	esi, ecx
0x400191:	sub	esi, eax
0x400193:	mov	eax, esi
0x400195:	mov	dword ptr [rbp - 0xc], eax
0x400198:	mov	ecx, dword ptr [rbp - 0xc]
0x40019b:	mov	eax, ecx
0x40019d:	add	eax, eax
0x40019f:	add	eax, ecx
0x4001a1:	sub	edx, eax
0x4001a3:	mov	eax, edx
0x4001a5:	mov	dword ptr [rbp - 0xc], eax
0x4001a8:	cmp	dword ptr [rbp - 0xc], 0
0x4001ac:	je	0x4001b6
<Block for 0x4001b6, 13 bytes>
0x4001b6:	lea	rax, [rip + 0x58]
0x4001bd:	mov	qword ptr [rbp - 8], rax
0x4001c1:	jmp	0x4001cf
<Block for 0x4001ae, 6 bytes>
0x4001ae:	cmp	dword ptr [rbp - 0xc], 1
0x4001b2:	je	0x4001c3
<Block for 0x4001cf, 12 bytes>
0x4001cf:	mov	rax, qword ptr [rbp - 8]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x500008
<Block for 0x4001c3, 24 bytes>
0x4001c3:	lea	rax, [rip + 0x4d]
0x4001ca:	mov	qword ptr [rbp - 8], rax
0x4001ce:	nop	
0x4001cf:	mov	rax, qword ptr [rbp - 8]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x500008
<Block for 0x4001b4, 2 bytes>
0x4001b4:	jmp	0x4001db
