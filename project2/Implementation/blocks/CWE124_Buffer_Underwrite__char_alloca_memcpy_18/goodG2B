<Block for 0x4001a3, 85 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	push	rbx
0x4001ac:	sub	rsp, 0x88
0x4001b3:	mov	rax, qword ptr fs:[0x28]
0x4001bc:	mov	qword ptr [rbp - 0x18], rax
0x4001c0:	xor	eax, eax
0x4001c2:	mov	eax, 0x10
0x4001c7:	sub	rax, 1
0x4001cb:	add	rax, 0x6c
0x4001cf:	mov	esi, 0x10
0x4001d4:	mov	edx, 0
0x4001d9:	div	rsi
0x4001dc:	imul	rax, rax, 0x10
0x4001e0:	mov	rdx, rax
0x4001e3:	and	rdx, 0xfffffffffffff000
0x4001ea:	mov	rbx, rsp
0x4001ed:	sub	rbx, rdx
0x4001f0:	mov	rdx, rbx
0x4001f3:	cmp	rsp, rdx
0x4001f6:	je	0x40020a
<Block for 0x40020a, 26 bytes>
0x40020a:	mov	rdx, rax
0x40020d:	and	edx, 0xfff
0x400213:	sub	rsp, rdx
0x400216:	mov	rdx, rax
0x400219:	and	edx, 0xfff
0x40021f:	test	rdx, rdx
0x400222:	je	0x400234
<Block for 0x4001f8, 18 bytes>
0x4001f8:	sub	rsp, 0x1000
0x4001ff:	or	qword ptr [rsp + 0xff8], 0
0x400208:	jmp	0x4001f3
<Block for 0x400234, 47 bytes>
0x400234:	mov	rax, rsp
0x400237:	add	rax, 0xf
0x40023b:	shr	rax, 4
0x40023f:	shl	rax, 4
0x400243:	mov	qword ptr [rbp - 0x90], rax
0x40024a:	mov	rax, qword ptr [rbp - 0x90]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x41
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500000
<Block for 0x400224, 63 bytes>
0x400224:	and	eax, 0xfff
0x400229:	sub	rax, 8
0x40022d:	add	rax, rsp
0x400230:	or	qword ptr [rax], 0
0x400234:	mov	rax, rsp
0x400237:	add	rax, 0xf
0x40023b:	shr	rax, 4
0x40023f:	shl	rax, 4
0x400243:	mov	qword ptr [rbp - 0x90], rax
0x40024a:	mov	rax, qword ptr [rbp - 0x90]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x41
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500000
<Block for 0x4001f3, 5 bytes>
0x4001f3:	cmp	rsp, rdx
0x4001f6:	je	0x40020a
<Block for 0x400263, 55 bytes>
0x400263:	mov	rax, qword ptr [rbp - 0x90]
0x40026a:	add	rax, 0x63
0x40026e:	mov	byte ptr [rax], 0
0x400271:	nop	
0x400272:	endbr64	
0x400276:	mov	rax, qword ptr [rbp - 0x90]
0x40027d:	mov	qword ptr [rbp - 0x88], rax
0x400284:	lea	rax, [rbp - 0x80]
0x400288:	mov	edx, 0x63
0x40028d:	mov	esi, 0x43
0x400292:	mov	rdi, rax
0x400295:	call	0x500000
<Block for 0x40029a, 141 bytes>
0x40029a:	mov	byte ptr [rbp - 0x1d], 0
0x40029e:	mov	rax, qword ptr [rbp - 0x88]
0x4002a5:	mov	rcx, qword ptr [rbp - 0x80]
0x4002a9:	mov	rbx, qword ptr [rbp - 0x78]
0x4002ad:	mov	qword ptr [rax], rcx
0x4002b0:	mov	qword ptr [rax + 8], rbx
0x4002b4:	mov	rcx, qword ptr [rbp - 0x70]
0x4002b8:	mov	rbx, qword ptr [rbp - 0x68]
0x4002bc:	mov	qword ptr [rax + 0x10], rcx
0x4002c0:	mov	qword ptr [rax + 0x18], rbx
0x4002c4:	mov	rcx, qword ptr [rbp - 0x60]
0x4002c8:	mov	rbx, qword ptr [rbp - 0x58]
0x4002cc:	mov	qword ptr [rax + 0x20], rcx
0x4002d0:	mov	qword ptr [rax + 0x28], rbx
0x4002d4:	mov	rcx, qword ptr [rbp - 0x50]
0x4002d8:	mov	rbx, qword ptr [rbp - 0x48]
0x4002dc:	mov	qword ptr [rax + 0x30], rcx
0x4002e0:	mov	qword ptr [rax + 0x38], rbx
0x4002e4:	mov	rcx, qword ptr [rbp - 0x40]
0x4002e8:	mov	rbx, qword ptr [rbp - 0x38]
0x4002ec:	mov	qword ptr [rax + 0x40], rcx
0x4002f0:	mov	qword ptr [rax + 0x48], rbx
0x4002f4:	mov	rcx, qword ptr [rbp - 0x30]
0x4002f8:	mov	rbx, qword ptr [rbp - 0x28]
0x4002fc:	mov	qword ptr [rax + 0x50], rcx
0x400300:	mov	qword ptr [rax + 0x58], rbx
0x400304:	mov	edx, dword ptr [rbp - 0x20]
0x400307:	mov	dword ptr [rax + 0x60], edx
0x40030a:	mov	rax, qword ptr [rbp - 0x88]
0x400311:	add	rax, 0x63
0x400315:	mov	byte ptr [rax], 0
0x400318:	mov	rax, qword ptr [rbp - 0x88]
0x40031f:	mov	rdi, rax
0x400322:	call	0x500008
<Block for 0x400327, 16 bytes>
0x400327:	nop	
0x400328:	mov	rax, qword ptr [rbp - 0x18]
0x40032c:	xor	rax, qword ptr fs:[0x28]
0x400335:	je	0x40033c
<Block for 0x40033c, 6 bytes>
0x40033c:	mov	rbx, qword ptr [rbp - 8]
0x400340:	leave	
0x400341:	ret	
<Block for 0x400337, 5 bytes>
0x400337:	call	0x500010
