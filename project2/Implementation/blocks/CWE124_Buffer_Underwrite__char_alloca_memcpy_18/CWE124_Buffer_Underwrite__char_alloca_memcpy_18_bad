<Block for 0x400000, 85 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	eax, 0x10
0x400024:	sub	rax, 1
0x400028:	add	rax, 0x6c
0x40002c:	mov	esi, 0x10
0x400031:	mov	edx, 0
0x400036:	div	rsi
0x400039:	imul	rax, rax, 0x10
0x40003d:	mov	rdx, rax
0x400040:	and	rdx, 0xfffffffffffff000
0x400047:	mov	rbx, rsp
0x40004a:	sub	rbx, rdx
0x40004d:	mov	rdx, rbx
0x400050:	cmp	rsp, rdx
0x400053:	je	0x400067
<Block for 0x400067, 26 bytes>
0x400067:	mov	rdx, rax
0x40006a:	and	edx, 0xfff
0x400070:	sub	rsp, rdx
0x400073:	mov	rdx, rax
0x400076:	and	edx, 0xfff
0x40007c:	test	rdx, rdx
0x40007f:	je	0x400091
<Block for 0x400055, 18 bytes>
0x400055:	sub	rsp, 0x1000
0x40005c:	or	qword ptr [rsp + 0xff8], 0
0x400065:	jmp	0x400050
<Block for 0x400091, 47 bytes>
0x400091:	mov	rax, rsp
0x400094:	add	rax, 0xf
0x400098:	shr	rax, 4
0x40009c:	shl	rax, 4
0x4000a0:	mov	qword ptr [rbp - 0x90], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x90]
0x4000ae:	mov	edx, 0x63
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500000
<Block for 0x400081, 63 bytes>
0x400081:	and	eax, 0xfff
0x400086:	sub	rax, 8
0x40008a:	add	rax, rsp
0x40008d:	or	qword ptr [rax], 0
0x400091:	mov	rax, rsp
0x400094:	add	rax, 0xf
0x400098:	shr	rax, 4
0x40009c:	shl	rax, 4
0x4000a0:	mov	qword ptr [rbp - 0x90], rax
0x4000a7:	mov	rax, qword ptr [rbp - 0x90]
0x4000ae:	mov	edx, 0x63
0x4000b3:	mov	esi, 0x41
0x4000b8:	mov	rdi, rax
0x4000bb:	call	0x500000
<Block for 0x400050, 5 bytes>
0x400050:	cmp	rsp, rdx
0x400053:	je	0x400067
<Block for 0x4000c0, 59 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x90]
0x4000c7:	add	rax, 0x63
0x4000cb:	mov	byte ptr [rax], 0
0x4000ce:	nop	
0x4000cf:	endbr64	
0x4000d3:	mov	rax, qword ptr [rbp - 0x90]
0x4000da:	sub	rax, 8
0x4000de:	mov	qword ptr [rbp - 0x88], rax
0x4000e5:	lea	rax, [rbp - 0x80]
0x4000e9:	mov	edx, 0x63
0x4000ee:	mov	esi, 0x43
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500000
<Block for 0x4000fb, 141 bytes>
0x4000fb:	mov	byte ptr [rbp - 0x1d], 0
0x4000ff:	mov	rax, qword ptr [rbp - 0x88]
0x400106:	mov	rcx, qword ptr [rbp - 0x80]
0x40010a:	mov	rbx, qword ptr [rbp - 0x78]
0x40010e:	mov	qword ptr [rax], rcx
0x400111:	mov	qword ptr [rax + 8], rbx
0x400115:	mov	rcx, qword ptr [rbp - 0x70]
0x400119:	mov	rbx, qword ptr [rbp - 0x68]
0x40011d:	mov	qword ptr [rax + 0x10], rcx
0x400121:	mov	qword ptr [rax + 0x18], rbx
0x400125:	mov	rcx, qword ptr [rbp - 0x60]
0x400129:	mov	rbx, qword ptr [rbp - 0x58]
0x40012d:	mov	qword ptr [rax + 0x20], rcx
0x400131:	mov	qword ptr [rax + 0x28], rbx
0x400135:	mov	rcx, qword ptr [rbp - 0x50]
0x400139:	mov	rbx, qword ptr [rbp - 0x48]
0x40013d:	mov	qword ptr [rax + 0x30], rcx
0x400141:	mov	qword ptr [rax + 0x38], rbx
0x400145:	mov	rcx, qword ptr [rbp - 0x40]
0x400149:	mov	rbx, qword ptr [rbp - 0x38]
0x40014d:	mov	qword ptr [rax + 0x40], rcx
0x400151:	mov	qword ptr [rax + 0x48], rbx
0x400155:	mov	rcx, qword ptr [rbp - 0x30]
0x400159:	mov	rbx, qword ptr [rbp - 0x28]
0x40015d:	mov	qword ptr [rax + 0x50], rcx
0x400161:	mov	qword ptr [rax + 0x58], rbx
0x400165:	mov	edx, dword ptr [rbp - 0x20]
0x400168:	mov	dword ptr [rax + 0x60], edx
0x40016b:	mov	rax, qword ptr [rbp - 0x88]
0x400172:	add	rax, 0x63
0x400176:	mov	byte ptr [rax], 0
0x400179:	mov	rax, qword ptr [rbp - 0x88]
0x400180:	mov	rdi, rax
0x400183:	call	0x500008
<Block for 0x400188, 16 bytes>
0x400188:	nop	
0x400189:	mov	rax, qword ptr [rbp - 0x18]
0x40018d:	xor	rax, qword ptr fs:[0x28]
0x400196:	je	0x40019d
<Block for 0x40019d, 6 bytes>
0x40019d:	mov	rbx, qword ptr [rbp - 8]
0x4001a1:	leave	
0x4001a2:	ret	
<Block for 0x400198, 5 bytes>
0x400198:	call	0x500010
