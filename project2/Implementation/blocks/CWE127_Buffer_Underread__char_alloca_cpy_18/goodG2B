<Block for 0x400140, 84 bytes>
0x400140:	endbr64	
0x400144:	push	rbp
0x400145:	mov	rbp, rsp
0x400148:	sub	rsp, 0xe0
0x40014f:	mov	rax, qword ptr fs:[0x28]
0x400158:	mov	qword ptr [rbp - 8], rax
0x40015c:	xor	eax, eax
0x40015e:	mov	eax, 0x10
0x400163:	sub	rax, 1
0x400167:	add	rax, 0x6c
0x40016b:	mov	ecx, 0x10
0x400170:	mov	edx, 0
0x400175:	div	rcx
0x400178:	imul	rax, rax, 0x10
0x40017c:	mov	rdx, rax
0x40017f:	and	rdx, 0xfffffffffffff000
0x400186:	mov	rcx, rsp
0x400189:	sub	rcx, rdx
0x40018c:	mov	rdx, rcx
0x40018f:	cmp	rsp, rdx
0x400192:	je	0x4001a6
<Block for 0x4001a6, 26 bytes>
0x4001a6:	mov	rdx, rax
0x4001a9:	and	edx, 0xfff
0x4001af:	sub	rsp, rdx
0x4001b2:	mov	rdx, rax
0x4001b5:	and	edx, 0xfff
0x4001bb:	test	rdx, rdx
0x4001be:	je	0x4001d0
<Block for 0x400194, 18 bytes>
0x400194:	sub	rsp, 0x1000
0x40019b:	or	qword ptr [rsp + 0xff8], 0
0x4001a4:	jmp	0x40018f
<Block for 0x4001d0, 47 bytes>
0x4001d0:	mov	rax, rsp
0x4001d3:	add	rax, 0xf
0x4001d7:	shr	rax, 4
0x4001db:	shl	rax, 4
0x4001df:	mov	qword ptr [rbp - 0xe0], rax
0x4001e6:	mov	rax, qword ptr [rbp - 0xe0]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x4001c0, 63 bytes>
0x4001c0:	and	eax, 0xfff
0x4001c5:	sub	rax, 8
0x4001c9:	add	rax, rsp
0x4001cc:	or	qword ptr [rax], 0
0x4001d0:	mov	rax, rsp
0x4001d3:	add	rax, 0xf
0x4001d7:	shr	rax, 4
0x4001db:	shl	rax, 4
0x4001df:	mov	qword ptr [rbp - 0xe0], rax
0x4001e6:	mov	rax, qword ptr [rbp - 0xe0]
0x4001ed:	mov	edx, 0x63
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x40018f, 5 bytes>
0x40018f:	cmp	rsp, rdx
0x400192:	je	0x4001a6
<Block for 0x4001ff, 58 bytes>
0x4001ff:	mov	rax, qword ptr [rbp - 0xe0]
0x400206:	add	rax, 0x63
0x40020a:	mov	byte ptr [rax], 0
0x40020d:	nop	
0x40020e:	endbr64	
0x400212:	mov	rax, qword ptr [rbp - 0xe0]
0x400219:	mov	qword ptr [rbp - 0xd8], rax
0x400220:	lea	rax, [rbp - 0xd0]
0x400227:	mov	edx, 0xc7
0x40022c:	mov	esi, 0x43
0x400231:	mov	rdi, rax
0x400234:	call	0x500000
<Block for 0x400239, 29 bytes>
0x400239:	mov	byte ptr [rbp - 9], 0
0x40023d:	mov	rdx, qword ptr [rbp - 0xd8]
0x400244:	lea	rax, [rbp - 0xd0]
0x40024b:	mov	rsi, rdx
0x40024e:	mov	rdi, rax
0x400251:	call	0x500008
<Block for 0x400256, 15 bytes>
0x400256:	lea	rax, [rbp - 0xd0]
0x40025d:	mov	rdi, rax
0x400260:	call	0x500010
<Block for 0x400265, 16 bytes>
0x400265:	nop	
0x400266:	mov	rax, qword ptr [rbp - 8]
0x40026a:	xor	rax, qword ptr fs:[0x28]
0x400273:	je	0x40027a
<Block for 0x40027a, 2 bytes>
0x40027a:	leave	
0x40027b:	ret	
<Block for 0x400275, 5 bytes>
0x400275:	call	0x500018
