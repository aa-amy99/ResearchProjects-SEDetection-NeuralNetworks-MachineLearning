<Block for 0x400058, 21 bytes>
0x400058:	endbr64	
0x40005c:	push	rbp
0x40005d:	mov	rbp, rsp
0x400060:	sub	rsp, 0x10
0x400064:	mov	eax, 0
0x400069:	test	eax, eax
0x40006b:	je	0x40007b
<Block for 0x40007b, 10 bytes>
0x40007b:	mov	edi, 1
0x400080:	call	0x500000
<Block for 0x40006d, 12 bytes>
0x40006d:	lea	rdi, [rip + 0xe8]
0x400074:	call	0x500020
<Block for 0x400085, 11 bytes>
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	cmp	qword ptr [rbp - 8], 0
0x40008e:	jne	0x40009a
<Block for 0x400079, 2 bytes>
0x400079:	jmp	0x4000c9
<Block for 0x400090, 10 bytes>
0x400090:	mov	edi, 0xffffffff
0x400095:	call	0x500008
<Block for 0x40009a, 35 bytes>
0x40009a:	mov	byte ptr [rbp - 0xa], 5
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	movzx	edx, byte ptr [rbp - 0xa]
0x4000a6:	mov	byte ptr [rax], dl
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	movzx	eax, byte ptr [rax]
0x4000af:	mov	byte ptr [rbp - 9], al
0x4000b2:	movsx	eax, byte ptr [rbp - 9]
0x4000b6:	mov	edi, eax
0x4000b8:	call	0x500018
<Block for 0x4000c9, 3 bytes>
0x4000c9:	nop	
0x4000ca:	leave	
0x4000cb:	ret	
<Block for 0x4000bd, 12 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500010
