<Block for 0x4000cc, 21 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x10
0x4000d8:	mov	eax, 1
0x4000dd:	test	eax, eax
0x4000df:	je	0x40012f
<Block for 0x40012f, 3 bytes>
0x40012f:	nop	
0x400130:	leave	
0x400131:	ret	
<Block for 0x4000e1, 10 bytes>
0x4000e1:	mov	edi, 1
0x4000e6:	call	0x500000
<Block for 0x4000eb, 11 bytes>
0x4000eb:	mov	qword ptr [rbp - 8], rax
0x4000ef:	cmp	qword ptr [rbp - 8], 0
0x4000f4:	jne	0x400100
<Block for 0x4000f6, 10 bytes>
0x4000f6:	mov	edi, 0xffffffff
0x4000fb:	call	0x500008
<Block for 0x400100, 35 bytes>
0x400100:	mov	byte ptr [rbp - 0xa], 5
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	movzx	edx, byte ptr [rbp - 0xa]
0x40010c:	mov	byte ptr [rax], dl
0x40010e:	mov	rax, qword ptr [rbp - 8]
0x400112:	movzx	eax, byte ptr [rax]
0x400115:	mov	byte ptr [rbp - 9], al
0x400118:	movsx	eax, byte ptr [rbp - 9]
0x40011c:	mov	edi, eax
0x40011e:	call	0x500018
<Block for 0x400123, 12 bytes>
0x400123:	mov	rax, qword ptr [rbp - 8]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500010
