<Block for 0x40004f, 38 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x20
0x40005b:	nop	
0x40005c:	endbr64	
0x400060:	lea	rax, [rip + 0x5d]
0x400067:	mov	qword ptr [rbp - 0x18], rax
0x40006b:	mov	edi, 8
0x400070:	call	0x500000
<Block for 0x400075, 38 bytes>
0x400075:	mov	qword ptr [rbp - 0x10], rax
0x400079:	mov	rax, qword ptr [rbp - 0x10]
0x40007d:	mov	rdx, qword ptr [rbp - 0x18]
0x400081:	mov	qword ptr [rax], rdx
0x400084:	mov	rax, qword ptr [rbp - 0x10]
0x400088:	mov	rax, qword ptr [rax]
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	mov	rdi, rax
0x400096:	call	0x500010
<Block for 0x40009b, 9 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x10]
0x40009f:	test	rax, rax
0x4000a2:	je	0x4000b1
<Block for 0x4000b1, 3 bytes>
0x4000b1:	nop	
0x4000b2:	leave	
0x4000b3:	ret	
<Block for 0x4000a4, 13 bytes>
0x4000a4:	mov	esi, 8
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500008
