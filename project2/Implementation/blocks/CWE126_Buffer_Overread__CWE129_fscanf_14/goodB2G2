<Block for 0x40018c, 45 bytes>
0x40018c:	endbr64	
0x400190:	push	rbp
0x400191:	mov	rbp, rsp
0x400194:	sub	rsp, 0x40
0x400198:	mov	rax, qword ptr fs:[0x28]
0x4001a1:	mov	qword ptr [rbp - 8], rax
0x4001a5:	xor	eax, eax
0x4001a7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001ae:	mov	eax, dword ptr [rip + 0xffe4c]
0x4001b4:	cmp	eax, 5
0x4001b7:	jne	0x4001d8
<Block for 0x4001b9, 31 bytes>
0x4001b9:	mov	rax, qword ptr [rip + 0xffe48]
0x4001c0:	lea	rdx, [rbp - 0x34]
0x4001c4:	lea	rsi, [rip + 0x20d]
0x4001cb:	mov	rdi, rax
0x4001ce:	mov	eax, 0
0x4001d3:	call	0x500010
<Block for 0x4001d8, 11 bytes>
0x4001d8:	mov	eax, dword ptr [rip + 0xffe22]
0x4001de:	cmp	eax, 5
0x4001e1:	jne	0x400238
<Block for 0x4001e3, 47 bytes>
0x4001e3:	mov	qword ptr [rbp - 0x30], 0
0x4001eb:	mov	qword ptr [rbp - 0x28], 0
0x4001f3:	mov	qword ptr [rbp - 0x20], 0
0x4001fb:	mov	qword ptr [rbp - 0x18], 0
0x400203:	mov	qword ptr [rbp - 0x10], 0
0x40020b:	mov	eax, dword ptr [rbp - 0x34]
0x40020e:	test	eax, eax
0x400210:	js	0x40022c
<Block for 0x400238, 16 bytes>
0x400238:	nop	
0x400239:	mov	rax, qword ptr [rbp - 8]
0x40023d:	xor	rax, qword ptr fs:[0x28]
0x400246:	je	0x40024d
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rdi, [rip + 0x1e5]
0x400233:	call	0x500020
<Block for 0x400212, 8 bytes>
0x400212:	mov	eax, dword ptr [rbp - 0x34]
0x400215:	cmp	eax, 9
0x400218:	jg	0x40022c
<Block for 0x40024d, 2 bytes>
0x40024d:	leave	
0x40024e:	ret	
<Block for 0x400248, 5 bytes>
0x400248:	call	0x500028
<Block for 0x40021a, 16 bytes>
0x40021a:	mov	eax, dword ptr [rbp - 0x34]
0x40021d:	cdqe	
0x40021f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400223:	mov	edi, eax
0x400225:	call	0x500018
<Block for 0x40022a, 2 bytes>
0x40022a:	jmp	0x400238
