<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0xfffd8]
0x400028:	cmp	eax, 5
0x40002b:	jne	0x40004c
<Block for 0x40002d, 31 bytes>
0x40002d:	mov	rax, qword ptr [rip + 0xfffd4]
0x400034:	lea	rdx, [rbp - 0x34]
0x400038:	lea	rsi, [rip + 0x399]
0x40003f:	mov	rdi, rax
0x400042:	mov	eax, 0
0x400047:	call	0x500010
<Block for 0x40004c, 11 bytes>
0x40004c:	mov	eax, dword ptr [rip + 0xfffae]
0x400052:	cmp	eax, 5
0x400055:	jne	0x4000a4
<Block for 0x400057, 47 bytes>
0x400057:	mov	qword ptr [rbp - 0x30], 0
0x40005f:	mov	qword ptr [rbp - 0x28], 0
0x400067:	mov	qword ptr [rbp - 0x20], 0
0x40006f:	mov	qword ptr [rbp - 0x18], 0
0x400077:	mov	qword ptr [rbp - 0x10], 0
0x40007f:	mov	eax, dword ptr [rbp - 0x34]
0x400082:	test	eax, eax
0x400084:	js	0x400098
<Block for 0x4000a4, 16 bytes>
0x4000a4:	nop	
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	xor	rax, qword ptr fs:[0x28]
0x4000b2:	je	0x4000b9
<Block for 0x400098, 12 bytes>
0x400098:	lea	rdi, [rip + 0x341]
0x40009f:	call	0x500020
<Block for 0x400086, 16 bytes>
0x400086:	mov	eax, dword ptr [rbp - 0x34]
0x400089:	cdqe	
0x40008b:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40008f:	mov	edi, eax
0x400091:	call	0x500018
<Block for 0x4000b9, 2 bytes>
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000b4, 5 bytes>
0x4000b4:	call	0x500028
<Block for 0x400096, 2 bytes>
0x400096:	jmp	0x4000a4
