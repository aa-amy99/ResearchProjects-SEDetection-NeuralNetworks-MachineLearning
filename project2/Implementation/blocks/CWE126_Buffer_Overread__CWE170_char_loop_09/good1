<Block for 0x4000a6, 40 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x120
0x4000b5:	mov	rax, qword ptr fs:[0x28]
0x4000be:	mov	qword ptr [rbp - 8], rax
0x4000c2:	xor	eax, eax
0x4000c4:	mov	eax, dword ptr [rip + 0xfff56]
0x4000ca:	test	eax, eax
0x4000cc:	je	0x4000dc
<Block for 0x4000dc, 25 bytes>
0x4000dc:	lea	rax, [rbp - 0xa0]
0x4000e3:	mov	edx, 0x95
0x4000e8:	mov	esi, 0x41
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500008
<Block for 0x4000ce, 12 bytes>
0x4000ce:	lea	rdi, [rip + 0x158]
0x4000d5:	call	0x500010
<Block for 0x4000f5, 16 bytes>
0x4000f5:	mov	byte ptr [rbp - 0xb], 0
0x4000f9:	mov	dword ptr [rbp - 0x114], 0
0x400103:	jmp	0x40012b
<Block for 0x4000da, 2 bytes>
0x4000da:	jmp	0x40014a
<Block for 0x40012b, 9 bytes>
0x40012b:	cmp	dword ptr [rbp - 0x114], 0x62
0x400132:	jle	0x400105
<Block for 0x40014a, 16 bytes>
0x40014a:	nop	
0x40014b:	mov	rax, qword ptr [rbp - 8]
0x40014f:	xor	rax, qword ptr fs:[0x28]
0x400158:	je	0x40015f
<Block for 0x400105, 47 bytes>
0x400105:	mov	eax, dword ptr [rbp - 0x114]
0x40010b:	cdqe	
0x40010d:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400115:	mov	eax, dword ptr [rbp - 0x114]
0x40011b:	cdqe	
0x40011d:	mov	byte ptr [rbp + rax - 0x110], dl
0x400124:	add	dword ptr [rbp - 0x114], 1
0x40012b:	cmp	dword ptr [rbp - 0x114], 0x62
0x400132:	jle	0x400105
<Block for 0x400134, 22 bytes>
0x400134:	mov	byte ptr [rbp - 0xad], 0
0x40013b:	lea	rax, [rbp - 0x110]
0x400142:	mov	rdi, rax
0x400145:	call	0x500010
<Block for 0x40015f, 2 bytes>
0x40015f:	leave	
0x400160:	ret	
<Block for 0x40015a, 5 bytes>
0x40015a:	call	0x500018
