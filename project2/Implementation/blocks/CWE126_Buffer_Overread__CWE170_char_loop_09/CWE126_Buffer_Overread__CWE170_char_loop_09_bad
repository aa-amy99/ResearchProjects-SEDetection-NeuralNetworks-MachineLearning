<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0xfffdc]
0x400024:	test	eax, eax
0x400026:	je	0x40008f
<Block for 0x40008f, 16 bytes>
0x40008f:	nop	
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	xor	rax, qword ptr fs:[0x28]
0x40009d:	je	0x4000a4
<Block for 0x400028, 25 bytes>
0x400028:	lea	rax, [rbp - 0xa0]
0x40002f:	mov	edx, 0x95
0x400034:	mov	esi, 0x41
0x400039:	mov	rdi, rax
0x40003c:	call	0x500008
<Block for 0x4000a4, 2 bytes>
0x4000a4:	leave	
0x4000a5:	ret	
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500018
<Block for 0x400041, 16 bytes>
0x400041:	mov	byte ptr [rbp - 0xb], 0
0x400045:	mov	dword ptr [rbp - 0x114], 0
0x40004f:	jmp	0x400077
<Block for 0x400077, 9 bytes>
0x400077:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007e:	jle	0x400051
<Block for 0x400051, 47 bytes>
0x400051:	mov	eax, dword ptr [rbp - 0x114]
0x400057:	cdqe	
0x400059:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400061:	mov	eax, dword ptr [rbp - 0x114]
0x400067:	cdqe	
0x400069:	mov	byte ptr [rbp + rax - 0x110], dl
0x400070:	add	dword ptr [rbp - 0x114], 1
0x400077:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007e:	jle	0x400051
<Block for 0x400080, 15 bytes>
0x400080:	lea	rax, [rbp - 0x110]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500010
