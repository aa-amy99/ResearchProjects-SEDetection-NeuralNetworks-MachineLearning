<Block for 0x40017c, 46 bytes>
0x40017c:	endbr64	
0x400180:	push	rbp
0x400181:	mov	rbp, rsp
0x400184:	add	rsp, -0x80
0x400188:	mov	rax, qword ptr fs:[0x28]
0x400191:	mov	qword ptr [rbp - 8], rax
0x400195:	xor	eax, eax
0x400197:	mov	qword ptr [rbp - 0x80], 0
0x40019f:	mov	eax, dword ptr [rip + 0xffe5b]
0x4001a5:	cmp	eax, 5
0x4001a8:	jne	0x4001e1
<Block for 0x4001aa, 10 bytes>
0x4001aa:	mov	edi, 0x64
0x4001af:	call	0x500008
<Block for 0x4001e1, 22 bytes>
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500010
<Block for 0x4001b4, 26 bytes>
0x4001b4:	mov	qword ptr [rbp - 0x78], rax
0x4001b8:	mov	rax, qword ptr [rbp - 0x78]
0x4001bc:	mov	edx, 0x63
0x4001c1:	mov	esi, 0x41
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x500010
<Block for 0x4001f7, 23 bytes>
0x4001f7:	mov	byte ptr [rbp - 0xd], 0
0x4001fb:	lea	rdx, [rbp - 0x70]
0x4001ff:	mov	rax, qword ptr [rbp - 0x80]
0x400203:	mov	rsi, rdx
0x400206:	mov	rdi, rax
0x400209:	call	0x500018
<Block for 0x4001ce, 41 bytes>
0x4001ce:	mov	rax, qword ptr [rbp - 0x78]
0x4001d2:	add	rax, 0x63
0x4001d6:	mov	byte ptr [rax], 0
0x4001d9:	mov	rax, qword ptr [rbp - 0x78]
0x4001dd:	mov	qword ptr [rbp - 0x80], rax
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	edx, 0x63
0x4001ea:	mov	esi, 0x43
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500010
<Block for 0x40020e, 12 bytes>
0x40020e:	mov	rax, qword ptr [rbp - 0x80]
0x400212:	mov	rdi, rax
0x400215:	call	0x500020
<Block for 0x40021a, 16 bytes>
0x40021a:	nop	
0x40021b:	mov	rax, qword ptr [rbp - 8]
0x40021f:	xor	rax, qword ptr fs:[0x28]
0x400228:	je	0x40022f
<Block for 0x40022f, 2 bytes>
0x40022f:	leave	
0x400230:	ret	
<Block for 0x40022a, 5 bytes>
0x40022a:	call	0x500028
