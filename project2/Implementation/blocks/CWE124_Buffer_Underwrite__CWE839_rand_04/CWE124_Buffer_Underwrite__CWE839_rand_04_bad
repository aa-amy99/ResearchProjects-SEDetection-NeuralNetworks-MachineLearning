<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400023:	mov	eax, 1
0x400028:	test	eax, eax
0x40002a:	je	0x400075
<Block for 0x400075, 9 bytes>
0x400075:	mov	eax, 1
0x40007a:	test	eax, eax
0x40007c:	je	0x4000ea
<Block for 0x40002c, 5 bytes>
0x40002c:	call	0x500000
<Block for 0x4000ea, 16 bytes>
0x4000ea:	nop	
0x4000eb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ef:	xor	rax, qword ptr fs:[0x28]
0x4000f8:	je	0x4000ff
<Block for 0x40007e, 46 bytes>
0x40007e:	mov	qword ptr [rbp - 0x40], 0
0x400086:	mov	qword ptr [rbp - 0x38], 0
0x40008e:	mov	qword ptr [rbp - 0x30], 0
0x400096:	mov	qword ptr [rbp - 0x28], 0
0x40009e:	mov	qword ptr [rbp - 0x20], 0
0x4000a6:	cmp	dword ptr [rbp - 0x48], 9
0x4000aa:	jg	0x4000de
<Block for 0x400031, 7 bytes>
0x400031:	and	eax, 1
0x400034:	test	eax, eax
0x400036:	je	0x400055
<Block for 0x4000ff, 7 bytes>
0x4000ff:	add	rsp, 0x48
0x400103:	pop	rbx
0x400104:	pop	rbp
0x400105:	ret	
<Block for 0x4000fa, 5 bytes>
0x4000fa:	call	0x500018
<Block for 0x4000ac, 22 bytes>
0x4000ac:	mov	eax, dword ptr [rbp - 0x48]
0x4000af:	cdqe	
0x4000b1:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4000b9:	mov	dword ptr [rbp - 0x44], 0
0x4000c0:	jmp	0x4000d6
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rdi, [rip + 0x413]
0x4000e5:	call	0x500010
<Block for 0x400055, 5 bytes>
0x400055:	call	0x500000
<Block for 0x400038, 5 bytes>
0x400038:	call	0x500000
<Block for 0x4000d6, 6 bytes>
0x4000d6:	cmp	dword ptr [rbp - 0x44], 9
0x4000da:	jle	0x4000c2
<Block for 0x40005a, 10 bytes>
0x40005a:	shl	eax, 0x1e
0x40005d:	mov	ebx, eax
0x40005f:	call	0x500000
<Block for 0x40003d, 10 bytes>
0x40003d:	shl	eax, 0x1e
0x400040:	mov	ebx, eax
0x400042:	call	0x500000
<Block for 0x4000c2, 16 bytes>
0x4000c2:	mov	eax, dword ptr [rbp - 0x44]
0x4000c5:	cdqe	
0x4000c7:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500008
<Block for 0x4000dc, 2 bytes>
0x4000dc:	jmp	0x4000ea
<Block for 0x400064, 10 bytes>
0x400064:	shl	eax, 0xf
0x400067:	xor	ebx, eax
0x400069:	call	0x500000
<Block for 0x400047, 10 bytes>
0x400047:	shl	eax, 0xf
0x40004a:	xor	ebx, eax
0x40004c:	call	0x500000
<Block for 0x4000d2, 10 bytes>
0x4000d2:	add	dword ptr [rbp - 0x44], 1
0x4000d6:	cmp	dword ptr [rbp - 0x44], 9
0x4000da:	jle	0x4000c2
<Block for 0x40006e, 16 bytes>
0x40006e:	xor	eax, ebx
0x400070:	not	eax
0x400072:	mov	dword ptr [rbp - 0x48], eax
0x400075:	mov	eax, 1
0x40007a:	test	eax, eax
0x40007c:	je	0x4000ea
<Block for 0x400051, 4 bytes>
0x400051:	xor	eax, ebx
0x400053:	jmp	0x400072
<Block for 0x400072, 12 bytes>
0x400072:	mov	dword ptr [rbp - 0x48], eax
0x400075:	mov	eax, 1
0x40007a:	test	eax, eax
0x40007c:	je	0x4000ea
