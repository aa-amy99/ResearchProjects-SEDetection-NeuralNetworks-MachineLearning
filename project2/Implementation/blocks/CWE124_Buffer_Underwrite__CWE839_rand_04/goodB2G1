<Block for 0x400106, 44 bytes>
0x400106:	endbr64	
0x40010a:	push	rbp
0x40010b:	mov	rbp, rsp
0x40010e:	push	rbx
0x40010f:	sub	rsp, 0x48
0x400113:	mov	rax, qword ptr fs:[0x28]
0x40011c:	mov	qword ptr [rbp - 0x18], rax
0x400120:	xor	eax, eax
0x400122:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400129:	mov	eax, 1
0x40012e:	test	eax, eax
0x400130:	je	0x40017b
<Block for 0x40017b, 9 bytes>
0x40017b:	mov	eax, 0
0x400180:	test	eax, eax
0x400182:	je	0x400192
<Block for 0x400132, 5 bytes>
0x400132:	call	0x500000
<Block for 0x400192, 46 bytes>
0x400192:	mov	qword ptr [rbp - 0x40], 0
0x40019a:	mov	qword ptr [rbp - 0x38], 0
0x4001a2:	mov	qword ptr [rbp - 0x30], 0
0x4001aa:	mov	qword ptr [rbp - 0x28], 0
0x4001b2:	mov	qword ptr [rbp - 0x20], 0
0x4001ba:	cmp	dword ptr [rbp - 0x48], 0
0x4001be:	js	0x4001f8
<Block for 0x400184, 12 bytes>
0x400184:	lea	rdi, [rip + 0x38d]
0x40018b:	call	0x500010
<Block for 0x400137, 7 bytes>
0x400137:	and	eax, 1
0x40013a:	test	eax, eax
0x40013c:	je	0x40015b
<Block for 0x4001f8, 12 bytes>
0x4001f8:	lea	rdi, [rip + 0x331]
0x4001ff:	call	0x500010
<Block for 0x4001c0, 6 bytes>
0x4001c0:	cmp	dword ptr [rbp - 0x48], 9
0x4001c4:	jg	0x4001f8
<Block for 0x400190, 2 bytes>
0x400190:	jmp	0x400206
<Block for 0x40015b, 5 bytes>
0x40015b:	call	0x500000
<Block for 0x40013e, 5 bytes>
0x40013e:	call	0x500000
<Block for 0x400204, 2 bytes>
0x400204:	jmp	0x400206
<Block for 0x4001c6, 22 bytes>
0x4001c6:	mov	eax, dword ptr [rbp - 0x48]
0x4001c9:	cdqe	
0x4001cb:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4001d3:	mov	dword ptr [rbp - 0x44], 0
0x4001da:	jmp	0x4001f0
<Block for 0x400206, 16 bytes>
0x400206:	nop	
0x400207:	mov	rax, qword ptr [rbp - 0x18]
0x40020b:	xor	rax, qword ptr fs:[0x28]
0x400214:	je	0x40021b
<Block for 0x400160, 10 bytes>
0x400160:	shl	eax, 0x1e
0x400163:	mov	ebx, eax
0x400165:	call	0x500000
<Block for 0x400143, 10 bytes>
0x400143:	shl	eax, 0x1e
0x400146:	mov	ebx, eax
0x400148:	call	0x500000
<Block for 0x4001f0, 6 bytes>
0x4001f0:	cmp	dword ptr [rbp - 0x44], 9
0x4001f4:	jle	0x4001dc
<Block for 0x40021b, 7 bytes>
0x40021b:	add	rsp, 0x48
0x40021f:	pop	rbx
0x400220:	pop	rbp
0x400221:	ret	
<Block for 0x400216, 5 bytes>
0x400216:	call	0x500018
<Block for 0x40016a, 10 bytes>
0x40016a:	shl	eax, 0xf
0x40016d:	xor	ebx, eax
0x40016f:	call	0x500000
<Block for 0x40014d, 10 bytes>
0x40014d:	shl	eax, 0xf
0x400150:	xor	ebx, eax
0x400152:	call	0x500000
<Block for 0x4001dc, 16 bytes>
0x4001dc:	mov	eax, dword ptr [rbp - 0x44]
0x4001df:	cdqe	
0x4001e1:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001e5:	mov	edi, eax
0x4001e7:	call	0x500008
<Block for 0x4001f6, 2 bytes>
0x4001f6:	jmp	0x400206
<Block for 0x400174, 16 bytes>
0x400174:	xor	eax, ebx
0x400176:	not	eax
0x400178:	mov	dword ptr [rbp - 0x48], eax
0x40017b:	mov	eax, 0
0x400180:	test	eax, eax
0x400182:	je	0x400192
<Block for 0x400157, 4 bytes>
0x400157:	xor	eax, ebx
0x400159:	jmp	0x400178
<Block for 0x4001ec, 10 bytes>
0x4001ec:	add	dword ptr [rbp - 0x44], 1
0x4001f0:	cmp	dword ptr [rbp - 0x44], 9
0x4001f4:	jle	0x4001dc
<Block for 0x400178, 12 bytes>
0x400178:	mov	dword ptr [rbp - 0x48], eax
0x40017b:	mov	eax, 0
0x400180:	test	eax, eax
0x400182:	je	0x400192
