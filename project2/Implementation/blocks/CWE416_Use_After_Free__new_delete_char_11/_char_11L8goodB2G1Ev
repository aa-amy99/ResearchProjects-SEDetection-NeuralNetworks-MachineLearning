<Block for 0x40006f, 25 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	sub	rsp, 0x10
0x40007b:	mov	qword ptr [rbp - 8], 0
0x400083:	call	0x500000
<Block for 0x400088, 9 bytes>
0x400088:	test	eax, eax
0x40008a:	setne	al
0x40008d:	test	al, al
0x40008f:	je	0x4000bc
<Block for 0x4000bc, 5 bytes>
0x4000bc:	call	0x500020
<Block for 0x400091, 10 bytes>
0x400091:	mov	edi, 1
0x400096:	call	0x500008
<Block for 0x4000c1, 9 bytes>
0x4000c1:	test	eax, eax
0x4000c3:	setne	al
0x4000c6:	test	al, al
0x4000c8:	je	0x4000d6
<Block for 0x40009b, 20 bytes>
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	byte ptr [rax], 0x41
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	test	rax, rax
0x4000ad:	je	0x4000bc
<Block for 0x4000d6, 3 bytes>
0x4000d6:	nop	
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000ca, 12 bytes>
0x4000ca:	lea	rdi, [rip + 0x13e]
0x4000d1:	call	0x500028
<Block for 0x4000af, 13 bytes>
0x4000af:	mov	esi, 1
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500010
