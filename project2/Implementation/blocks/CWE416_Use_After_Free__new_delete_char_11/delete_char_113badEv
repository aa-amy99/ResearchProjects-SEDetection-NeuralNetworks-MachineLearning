<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	call	0x500000
<Block for 0x400019, 9 bytes>
0x400019:	test	eax, eax
0x40001b:	setne	al
0x40001e:	test	al, al
0x400020:	je	0x40004d
<Block for 0x40004d, 5 bytes>
0x40004d:	call	0x500000
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 1
0x400027:	call	0x500008
<Block for 0x400052, 9 bytes>
0x400052:	test	eax, eax
0x400054:	setne	al
0x400057:	test	al, al
0x400059:	je	0x40006c
<Block for 0x40002c, 20 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	mov	rax, qword ptr [rbp - 8]
0x400034:	mov	byte ptr [rax], 0x41
0x400037:	mov	rax, qword ptr [rbp - 8]
0x40003b:	test	rax, rax
0x40003e:	je	0x40004d
<Block for 0x40006c, 3 bytes>
0x40006c:	nop	
0x40006d:	leave	
0x40006e:	ret	
<Block for 0x40005b, 17 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 8]
0x40005f:	movzx	eax, byte ptr [rax]
0x400062:	movsx	eax, al
0x400065:	mov	edi, eax
0x400067:	call	0x500018
<Block for 0x400040, 13 bytes>
0x400040:	mov	esi, 1
0x400045:	mov	rdi, rax
0x400048:	call	0x500010
