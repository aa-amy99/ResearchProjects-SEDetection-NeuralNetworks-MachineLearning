<Block for 0x4000db, 36 bytes>
0x4000db:	endbr64	
0x4000df:	push	rbp
0x4000e0:	mov	rbp, rsp
0x4000e3:	sub	rsp, 0x20
0x4000e7:	mov	rax, qword ptr fs:[0x28]
0x4000f0:	mov	qword ptr [rbp - 8], rax
0x4000f4:	xor	eax, eax
0x4000f6:	mov	eax, 0
0x4000fb:	test	eax, eax
0x4000fd:	je	0x400110
<Block for 0x400110, 54 bytes>
0x400110:	mov	eax, 0x10
0x400115:	sub	rax, 1
0x400119:	add	rax, 0x10
0x40011d:	mov	esi, 0x10
0x400122:	mov	edx, 0
0x400127:	div	rsi
0x40012a:	imul	rax, rax, 0x10
0x40012e:	mov	rdx, rax
0x400131:	and	rdx, 0xfffffffffffff000
0x400138:	mov	rcx, rsp
0x40013b:	sub	rcx, rdx
0x40013e:	mov	rdx, rcx
0x400141:	cmp	rsp, rdx
0x400144:	je	0x400158
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rdi, [rip + 0x1ee]
0x400106:	call	0x500000
<Block for 0x400158, 26 bytes>
0x400158:	mov	rdx, rax
0x40015b:	and	edx, 0xfff
0x400161:	sub	rsp, rdx
0x400164:	mov	rdx, rax
0x400167:	and	edx, 0xfff
0x40016d:	test	rdx, rdx
0x400170:	je	0x400182
<Block for 0x400146, 18 bytes>
0x400146:	sub	rsp, 0x1000
0x40014d:	or	qword ptr [rsp + 0xff8], 0
0x400156:	jmp	0x400141
<Block for 0x40010b, 5 bytes>
0x40010b:	jmp	0x4001c2
<Block for 0x400182, 64 bytes>
0x400182:	mov	rax, rsp
0x400185:	add	rax, 0xf
0x400189:	shr	rax, 4
0x40018d:	shl	rax, 4
0x400191:	mov	qword ptr [rbp - 0x20], rax
0x400195:	lea	rax, [rip + 0x16d]
0x40019c:	mov	qword ptr [rbp - 0x18], rax
0x4001a0:	mov	rax, qword ptr [rbp - 0x20]
0x4001a4:	mov	rdx, qword ptr [rbp - 0x18]
0x4001a8:	mov	qword ptr [rax], rdx
0x4001ab:	mov	rax, qword ptr [rbp - 0x20]
0x4001af:	mov	rax, qword ptr [rax]
0x4001b2:	mov	qword ptr [rbp - 0x10], rax
0x4001b6:	mov	rax, qword ptr [rbp - 0x10]
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500000
<Block for 0x400172, 80 bytes>
0x400172:	and	eax, 0xfff
0x400177:	sub	rax, 8
0x40017b:	add	rax, rsp
0x40017e:	or	qword ptr [rax], 0
0x400182:	mov	rax, rsp
0x400185:	add	rax, 0xf
0x400189:	shr	rax, 4
0x40018d:	shl	rax, 4
0x400191:	mov	qword ptr [rbp - 0x20], rax
0x400195:	lea	rax, [rip + 0x16d]
0x40019c:	mov	qword ptr [rbp - 0x18], rax
0x4001a0:	mov	rax, qword ptr [rbp - 0x20]
0x4001a4:	mov	rdx, qword ptr [rbp - 0x18]
0x4001a8:	mov	qword ptr [rax], rdx
0x4001ab:	mov	rax, qword ptr [rbp - 0x20]
0x4001af:	mov	rax, qword ptr [rax]
0x4001b2:	mov	qword ptr [rbp - 0x10], rax
0x4001b6:	mov	rax, qword ptr [rbp - 0x10]
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500000
<Block for 0x400141, 5 bytes>
0x400141:	cmp	rsp, rdx
0x400144:	je	0x400158
<Block for 0x4001c2, 16 bytes>
0x4001c2:	nop	
0x4001c3:	mov	rax, qword ptr [rbp - 8]
0x4001c7:	xor	rax, qword ptr fs:[0x28]
0x4001d0:	je	0x4001d7
<Block for 0x4001d7, 2 bytes>
0x4001d7:	leave	
0x4001d8:	ret	
<Block for 0x4001d2, 5 bytes>
0x4001d2:	call	0x500008
