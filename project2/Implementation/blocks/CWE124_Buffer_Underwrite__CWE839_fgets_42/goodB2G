<Block for 0x400287, 44 bytes>
0x400287:	endbr64	
0x40028b:	push	rbp
0x40028c:	mov	rbp, rsp
0x40028f:	sub	rsp, 0x40
0x400293:	mov	rax, qword ptr fs:[0x28]
0x40029c:	mov	qword ptr [rbp - 8], rax
0x4002a0:	xor	eax, eax
0x4002a2:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4002a9:	mov	eax, dword ptr [rbp - 0x34]
0x4002ac:	mov	edi, eax
0x4002ae:	call	0x400201
<Block for 0x4002b3, 49 bytes>
0x4002b3:	mov	dword ptr [rbp - 0x34], eax
0x4002b6:	mov	qword ptr [rbp - 0x30], 0
0x4002be:	mov	qword ptr [rbp - 0x28], 0
0x4002c6:	mov	qword ptr [rbp - 0x20], 0
0x4002ce:	mov	qword ptr [rbp - 0x18], 0
0x4002d6:	mov	qword ptr [rbp - 0x10], 0
0x4002de:	cmp	dword ptr [rbp - 0x34], 0
0x4002e2:	js	0x40031c
<Block for 0x40031c, 12 bytes>
0x40031c:	lea	rdi, [rip + 0x6d]
0x400323:	call	0x500018
<Block for 0x4002e4, 6 bytes>
0x4002e4:	cmp	dword ptr [rbp - 0x34], 9
0x4002e8:	jg	0x40031c
<Block for 0x400328, 16 bytes>
0x400328:	nop	
0x400329:	mov	rax, qword ptr [rbp - 8]
0x40032d:	xor	rax, qword ptr fs:[0x28]
0x400336:	je	0x40033d
<Block for 0x4002ea, 22 bytes>
0x4002ea:	mov	eax, dword ptr [rbp - 0x34]
0x4002ed:	cdqe	
0x4002ef:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002f7:	mov	dword ptr [rbp - 0x38], 0
0x4002fe:	jmp	0x400314
<Block for 0x40033d, 2 bytes>
0x40033d:	leave	
0x40033e:	ret	
<Block for 0x400338, 5 bytes>
0x400338:	call	0x500020
<Block for 0x400314, 6 bytes>
0x400314:	cmp	dword ptr [rbp - 0x38], 9
0x400318:	jle	0x400300
<Block for 0x400300, 16 bytes>
0x400300:	mov	eax, dword ptr [rbp - 0x38]
0x400303:	cdqe	
0x400305:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400309:	mov	edi, eax
0x40030b:	call	0x500028
<Block for 0x40031a, 2 bytes>
0x40031a:	jmp	0x400328
<Block for 0x400310, 10 bytes>
0x400310:	add	dword ptr [rbp - 0x38], 1
0x400314:	cmp	dword ptr [rbp - 0x38], 9
0x400318:	jle	0x400300
