<Block for 0x400092, 22 bytes>
0x400092:	endbr64	
0x400096:	push	rbp
0x400097:	mov	rbp, rsp
0x40009a:	sub	rsp, 0x10
0x40009e:	mov	eax, 0
0x4000a3:	call	0x500000
<Block for 0x4000a8, 4 bytes>
0x4000a8:	test	eax, eax
0x4000aa:	je	0x4000f6
<Block for 0x4000f6, 27 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x10], 0
0x4000fe:	lea	rsi, [rip + 0x51]
0x400105:	lea	rdi, [rip + 0x4d]
0x40010c:	call	0x500008
<Block for 0x4000ac, 27 bytes>
0x4000ac:	mov	qword ptr [rbp - 8], 0
0x4000b4:	lea	rsi, [rip + 0x9b]
0x4000bb:	lea	rdi, [rip + 0x97]
0x4000c2:	call	0x500008
<Block for 0x400111, 11 bytes>
0x400111:	mov	qword ptr [rbp - 0x10], rax
0x400115:	cmp	qword ptr [rbp - 0x10], 0
0x40011a:	jne	0x400132
<Block for 0x4000c7, 11 bytes>
0x4000c7:	mov	qword ptr [rbp - 8], rax
0x4000cb:	cmp	qword ptr [rbp - 8], 0
0x4000d0:	jne	0x4000e8
<Block for 0x40011c, 12 bytes>
0x40011c:	lea	rdi, [rip + 0x3f]
0x400123:	call	0x500018
<Block for 0x400132, 12 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x10]
0x400136:	mov	rdi, rax
0x400139:	call	0x500010
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rdi, [rip + 0x89]
0x4000d9:	call	0x500018
<Block for 0x4000e8, 12 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500010
<Block for 0x400128, 10 bytes>
0x400128:	mov	edi, 1
0x40012d:	call	0x500020
<Block for 0x40013e, 3 bytes>
0x40013e:	nop	
0x40013f:	leave	
0x400140:	ret	
<Block for 0x4000de, 10 bytes>
0x4000de:	mov	edi, 1
0x4000e3:	call	0x500020
<Block for 0x4000f4, 2 bytes>
0x4000f4:	jmp	0x40013e
