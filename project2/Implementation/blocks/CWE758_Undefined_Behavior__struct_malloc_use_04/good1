<Block for 0x400062, 21 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x20
0x40006e:	mov	eax, 0
0x400073:	test	eax, eax
0x400075:	je	0x400085
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 8
0x40008a:	call	0x500000
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0x112]
0x40007e:	call	0x500020
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 0x18], rax
0x400093:	cmp	qword ptr [rbp - 0x18], 0
0x400098:	jne	0x4000a4
<Block for 0x400083, 2 bytes>
0x400083:	jmp	0x4000e8
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 0xffffffff
0x40009f:	call	0x500008
<Block for 0x4000a4, 46 bytes>
0x4000a4:	mov	dword ptr [rbp - 0x10], 1
0x4000ab:	mov	dword ptr [rbp - 0xc], 2
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ba:	mov	qword ptr [rax], rdx
0x4000bd:	mov	rax, qword ptr [rbp - 0x18]
0x4000c1:	mov	rax, qword ptr [rax]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	mov	eax, dword ptr [rbp - 8]
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500018
<Block for 0x4000e8, 3 bytes>
0x4000e8:	nop	
0x4000e9:	leave	
0x4000ea:	ret	
<Block for 0x4000d2, 10 bytes>
0x4000d2:	mov	eax, dword ptr [rbp - 4]
0x4000d5:	mov	edi, eax
0x4000d7:	call	0x500018
<Block for 0x4000dc, 12 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x18]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500010
