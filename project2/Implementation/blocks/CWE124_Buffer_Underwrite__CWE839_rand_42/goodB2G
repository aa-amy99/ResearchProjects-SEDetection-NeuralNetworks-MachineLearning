<Block for 0x400241, 44 bytes>
0x400241:	endbr64	
0x400245:	push	rbp
0x400246:	mov	rbp, rsp
0x400249:	sub	rsp, 0x40
0x40024d:	mov	rax, qword ptr fs:[0x28]
0x400256:	mov	qword ptr [rbp - 8], rax
0x40025a:	xor	eax, eax
0x40025c:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400263:	mov	eax, dword ptr [rbp - 0x34]
0x400266:	mov	edi, eax
0x400268:	call	0x4001de
<Block for 0x40026d, 49 bytes>
0x40026d:	mov	dword ptr [rbp - 0x34], eax
0x400270:	mov	qword ptr [rbp - 0x30], 0
0x400278:	mov	qword ptr [rbp - 0x28], 0
0x400280:	mov	qword ptr [rbp - 0x20], 0
0x400288:	mov	qword ptr [rbp - 0x18], 0
0x400290:	mov	qword ptr [rbp - 0x10], 0
0x400298:	cmp	dword ptr [rbp - 0x34], 0
0x40029c:	js	0x4002d6
<Block for 0x4002d6, 12 bytes>
0x4002d6:	lea	rdi, [rip + 0x5b]
0x4002dd:	call	0x500010
<Block for 0x40029e, 6 bytes>
0x40029e:	cmp	dword ptr [rbp - 0x34], 9
0x4002a2:	jg	0x4002d6
<Block for 0x4002e2, 16 bytes>
0x4002e2:	nop	
0x4002e3:	mov	rax, qword ptr [rbp - 8]
0x4002e7:	xor	rax, qword ptr fs:[0x28]
0x4002f0:	je	0x4002f7
<Block for 0x4002a4, 22 bytes>
0x4002a4:	mov	eax, dword ptr [rbp - 0x34]
0x4002a7:	cdqe	
0x4002a9:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002b1:	mov	dword ptr [rbp - 0x38], 0
0x4002b8:	jmp	0x4002ce
<Block for 0x4002f7, 2 bytes>
0x4002f7:	leave	
0x4002f8:	ret	
<Block for 0x4002f2, 5 bytes>
0x4002f2:	call	0x500018
<Block for 0x4002ce, 6 bytes>
0x4002ce:	cmp	dword ptr [rbp - 0x38], 9
0x4002d2:	jle	0x4002ba
<Block for 0x4002ba, 16 bytes>
0x4002ba:	mov	eax, dword ptr [rbp - 0x38]
0x4002bd:	cdqe	
0x4002bf:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002c3:	mov	edi, eax
0x4002c5:	call	0x500008
<Block for 0x4002d4, 2 bytes>
0x4002d4:	jmp	0x4002e2
<Block for 0x4002ca, 10 bytes>
0x4002ca:	add	dword ptr [rbp - 0x38], 1
0x4002ce:	cmp	dword ptr [rbp - 0x38], 9
0x4002d2:	jle	0x4002ba
