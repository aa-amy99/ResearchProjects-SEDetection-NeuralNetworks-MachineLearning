<Block for 0x400199, 97 bytes>
0x400199:	endbr64	
0x40019d:	push	rbp
0x40019e:	mov	rbp, rsp
0x4001a1:	push	rbx
0x4001a2:	sub	rsp, 0xa8
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 0x18], rax
0x4001b6:	xor	eax, eax
0x4001b8:	lea	rax, [rbp - 0xb0]
0x4001bf:	mov	qword ptr [rbp - 0xa8], rax
0x4001c6:	lea	rax, [rbp - 0xb0]
0x4001cd:	mov	qword ptr [rbp - 0xa0], rax
0x4001d4:	mov	qword ptr [rbp - 0xb0], 0
0x4001df:	mov	rax, qword ptr [rbp - 0xa8]
0x4001e6:	mov	rax, qword ptr [rax]
0x4001e9:	mov	qword ptr [rbp - 0x98], rax
0x4001f0:	mov	edi, 0x64
0x4001f5:	call	0x500000
<Block for 0x4001fa, 17 bytes>
0x4001fa:	mov	qword ptr [rbp - 0x90], rax
0x400201:	cmp	qword ptr [rbp - 0x90], 0
0x400209:	jne	0x400215
<Block for 0x40020b, 10 bytes>
0x40020b:	mov	edi, 0xffffffff
0x400210:	call	0x500008
<Block for 0x400215, 25 bytes>
0x400215:	mov	rax, qword ptr [rbp - 0x90]
0x40021c:	mov	edx, 0x63
0x400221:	mov	esi, 0x41
0x400226:	mov	rdi, rax
0x400229:	call	0x500010
<Block for 0x40022e, 84 bytes>
0x40022e:	mov	rax, qword ptr [rbp - 0x90]
0x400235:	add	rax, 0x63
0x400239:	mov	byte ptr [rax], 0
0x40023c:	mov	rax, qword ptr [rbp - 0x90]
0x400243:	mov	qword ptr [rbp - 0x98], rax
0x40024a:	mov	rax, qword ptr [rbp - 0xa8]
0x400251:	mov	rdx, qword ptr [rbp - 0x98]
0x400258:	mov	qword ptr [rax], rdx
0x40025b:	mov	rax, qword ptr [rbp - 0xa0]
0x400262:	mov	rax, qword ptr [rax]
0x400265:	mov	qword ptr [rbp - 0x88], rax
0x40026c:	lea	rax, [rbp - 0x80]
0x400270:	mov	edx, 0x63
0x400275:	mov	esi, 0x43
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500010
<Block for 0x400282, 141 bytes>
0x400282:	mov	byte ptr [rbp - 0x1d], 0
0x400286:	mov	rax, qword ptr [rbp - 0x88]
0x40028d:	mov	rcx, qword ptr [rbp - 0x80]
0x400291:	mov	rbx, qword ptr [rbp - 0x78]
0x400295:	mov	qword ptr [rax], rcx
0x400298:	mov	qword ptr [rax + 8], rbx
0x40029c:	mov	rcx, qword ptr [rbp - 0x70]
0x4002a0:	mov	rbx, qword ptr [rbp - 0x68]
0x4002a4:	mov	qword ptr [rax + 0x10], rcx
0x4002a8:	mov	qword ptr [rax + 0x18], rbx
0x4002ac:	mov	rcx, qword ptr [rbp - 0x60]
0x4002b0:	mov	rbx, qword ptr [rbp - 0x58]
0x4002b4:	mov	qword ptr [rax + 0x20], rcx
0x4002b8:	mov	qword ptr [rax + 0x28], rbx
0x4002bc:	mov	rcx, qword ptr [rbp - 0x50]
0x4002c0:	mov	rbx, qword ptr [rbp - 0x48]
0x4002c4:	mov	qword ptr [rax + 0x30], rcx
0x4002c8:	mov	qword ptr [rax + 0x38], rbx
0x4002cc:	mov	rcx, qword ptr [rbp - 0x40]
0x4002d0:	mov	rbx, qword ptr [rbp - 0x38]
0x4002d4:	mov	qword ptr [rax + 0x40], rcx
0x4002d8:	mov	qword ptr [rax + 0x48], rbx
0x4002dc:	mov	rcx, qword ptr [rbp - 0x30]
0x4002e0:	mov	rbx, qword ptr [rbp - 0x28]
0x4002e4:	mov	qword ptr [rax + 0x50], rcx
0x4002e8:	mov	qword ptr [rax + 0x58], rbx
0x4002ec:	mov	edx, dword ptr [rbp - 0x20]
0x4002ef:	mov	dword ptr [rax + 0x60], edx
0x4002f2:	mov	rax, qword ptr [rbp - 0x88]
0x4002f9:	add	rax, 0x63
0x4002fd:	mov	byte ptr [rax], 0
0x400300:	mov	rax, qword ptr [rbp - 0x88]
0x400307:	mov	rdi, rax
0x40030a:	call	0x500018
<Block for 0x40030f, 16 bytes>
0x40030f:	nop	
0x400310:	mov	rax, qword ptr [rbp - 0x18]
0x400314:	xor	rax, qword ptr fs:[0x28]
0x40031d:	je	0x400324
<Block for 0x400324, 10 bytes>
0x400324:	add	rsp, 0xa8
0x40032b:	pop	rbx
0x40032c:	pop	rbp
0x40032d:	ret	
<Block for 0x40031f, 5 bytes>
0x40031f:	call	0x500020
