<Block for 0x4001e8, 42 bytes>
0x4001e8:	endbr64	
0x4001ec:	push	rbp
0x4001ed:	mov	rbp, rsp
0x4001f0:	add	rsp, -0x80
0x4001f4:	mov	rax, qword ptr fs:[0x28]
0x4001fd:	mov	qword ptr [rbp - 8], rax
0x400201:	xor	eax, eax
0x400203:	mov	eax, dword ptr [rip + 0xffdf7]
0x400209:	cmp	eax, 5
0x40020c:	jne	0x4002cc
<Block for 0x400212, 123 bytes>
0x400212:	mov	qword ptr [rbp - 0x70], 0
0x40021a:	mov	qword ptr [rbp - 0x68], 0
0x400222:	mov	qword ptr [rbp - 0x60], 0
0x40022a:	mov	qword ptr [rbp - 0x58], 0
0x400232:	mov	qword ptr [rbp - 0x50], 0
0x40023a:	mov	qword ptr [rbp - 0x48], 0
0x400242:	mov	qword ptr [rbp - 0x40], 0
0x40024a:	mov	qword ptr [rbp - 0x38], 0
0x400252:	mov	qword ptr [rbp - 0x30], 0
0x40025a:	mov	qword ptr [rbp - 0x28], 0
0x400262:	mov	qword ptr [rbp - 0x20], 0
0x40026a:	mov	qword ptr [rbp - 0x18], 0
0x400272:	mov	dword ptr [rbp - 0x10], 0
0x400279:	lea	rax, [rbp - 0x70]
0x40027d:	mov	qword ptr [rbp - 0x78], rax
0x400281:	lea	rdi, [rip + 0x7a]
0x400288:	call	0x500008
<Block for 0x4002cc, 16 bytes>
0x4002cc:	nop	
0x4002cd:	mov	rax, qword ptr [rbp - 8]
0x4002d1:	xor	rax, qword ptr fs:[0x28]
0x4002da:	je	0x4002e1
<Block for 0x40028d, 24 bytes>
0x40028d:	mov	rdx, qword ptr [rip + 0xffd7c]
0x400294:	mov	rax, qword ptr [rbp - 0x78]
0x400298:	mov	esi, 0x64
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500018
<Block for 0x4002e1, 2 bytes>
0x4002e1:	leave	
0x4002e2:	ret	
<Block for 0x4002dc, 5 bytes>
0x4002dc:	call	0x500020
<Block for 0x4002a5, 5 bytes>
0x4002a5:	test	rax, rax
0x4002a8:	jne	0x4002c0
<Block for 0x4002aa, 12 bytes>
0x4002aa:	lea	rdi, [rip + 0x7e]
0x4002b1:	call	0x500008
<Block for 0x4002c0, 12 bytes>
0x4002c0:	mov	rax, qword ptr [rbp - 0x78]
0x4002c4:	mov	rdi, rax
0x4002c7:	call	0x500008
<Block for 0x4002b6, 10 bytes>
0x4002b6:	mov	edi, 1
0x4002bb:	call	0x500028
