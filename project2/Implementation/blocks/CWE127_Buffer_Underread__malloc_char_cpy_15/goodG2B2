<Block for 0x4001c4, 51 bytes>
0x4001c4:	endbr64	
0x4001c8:	push	rbp
0x4001c9:	mov	rbp, rsp
0x4001cc:	sub	rsp, 0xe0
0x4001d3:	mov	rax, qword ptr fs:[0x28]
0x4001dc:	mov	qword ptr [rbp - 8], rax
0x4001e0:	xor	eax, eax
0x4001e2:	mov	qword ptr [rbp - 0xe0], 0
0x4001ed:	mov	edi, 0x64
0x4001f2:	call	0x500000
<Block for 0x4001f7, 17 bytes>
0x4001f7:	mov	qword ptr [rbp - 0xd8], rax
0x4001fe:	cmp	qword ptr [rbp - 0xd8], 0
0x400206:	jne	0x400212
<Block for 0x400208, 10 bytes>
0x400208:	mov	edi, 0xffffffff
0x40020d:	call	0x500008
<Block for 0x400212, 25 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0xd8]
0x400219:	mov	edx, 0x63
0x40021e:	mov	esi, 0x41
0x400223:	mov	rdi, rax
0x400226:	call	0x500010
<Block for 0x40022b, 54 bytes>
0x40022b:	mov	rax, qword ptr [rbp - 0xd8]
0x400232:	add	rax, 0x63
0x400236:	mov	byte ptr [rax], 0
0x400239:	mov	rax, qword ptr [rbp - 0xd8]
0x400240:	mov	qword ptr [rbp - 0xe0], rax
0x400247:	nop	
0x400248:	lea	rax, [rbp - 0xd0]
0x40024f:	mov	edx, 0xc7
0x400254:	mov	esi, 0x43
0x400259:	mov	rdi, rax
0x40025c:	call	0x500010
<Block for 0x400261, 29 bytes>
0x400261:	mov	byte ptr [rbp - 9], 0
0x400265:	mov	rdx, qword ptr [rbp - 0xe0]
0x40026c:	lea	rax, [rbp - 0xd0]
0x400273:	mov	rsi, rdx
0x400276:	mov	rdi, rax
0x400279:	call	0x500018
<Block for 0x40027e, 15 bytes>
0x40027e:	lea	rax, [rbp - 0xd0]
0x400285:	mov	rdi, rax
0x400288:	call	0x500020
<Block for 0x40028d, 16 bytes>
0x40028d:	nop	
0x40028e:	mov	rax, qword ptr [rbp - 8]
0x400292:	xor	rax, qword ptr fs:[0x28]
0x40029b:	je	0x4002a2
<Block for 0x4002a2, 2 bytes>
0x4002a2:	leave	
0x4002a3:	ret	
<Block for 0x40029d, 5 bytes>
0x40029d:	call	0x500028
