<Block for 0x40020c, 37 bytes>
0x40020c:	endbr64	
0x400210:	push	rbp
0x400211:	mov	rbp, rsp
0x400214:	add	rsp, -0x80
0x400218:	mov	rax, qword ptr fs:[0x28]
0x400221:	mov	qword ptr [rbp - 8], rax
0x400225:	xor	eax, eax
0x400227:	mov	eax, 0
0x40022c:	call	0x400000
<Block for 0x400231, 8 bytes>
0x400231:	test	eax, eax
0x400233:	je	0x4002f3
<Block for 0x4002f3, 16 bytes>
0x4002f3:	nop	
0x4002f4:	mov	rax, qword ptr [rbp - 8]
0x4002f8:	xor	rax, qword ptr fs:[0x28]
0x400301:	je	0x400308
<Block for 0x400239, 123 bytes>
0x400239:	mov	qword ptr [rbp - 0x70], 0
0x400241:	mov	qword ptr [rbp - 0x68], 0
0x400249:	mov	qword ptr [rbp - 0x60], 0
0x400251:	mov	qword ptr [rbp - 0x58], 0
0x400259:	mov	qword ptr [rbp - 0x50], 0
0x400261:	mov	qword ptr [rbp - 0x48], 0
0x400269:	mov	qword ptr [rbp - 0x40], 0
0x400271:	mov	qword ptr [rbp - 0x38], 0
0x400279:	mov	qword ptr [rbp - 0x30], 0
0x400281:	mov	qword ptr [rbp - 0x28], 0
0x400289:	mov	qword ptr [rbp - 0x20], 0
0x400291:	mov	qword ptr [rbp - 0x18], 0
0x400299:	mov	dword ptr [rbp - 0x10], 0
0x4002a0:	lea	rax, [rbp - 0x70]
0x4002a4:	mov	qword ptr [rbp - 0x78], rax
0x4002a8:	lea	rdi, [rip + 0x7a]
0x4002af:	call	0x500000
<Block for 0x400308, 2 bytes>
0x400308:	leave	
0x400309:	ret	
<Block for 0x400303, 5 bytes>
0x400303:	call	0x500018
<Block for 0x4002b4, 24 bytes>
0x4002b4:	mov	rdx, qword ptr [rip + 0xffd4d]
0x4002bb:	mov	rax, qword ptr [rbp - 0x78]
0x4002bf:	mov	esi, 0x64
0x4002c4:	mov	rdi, rax
0x4002c7:	call	0x500010
<Block for 0x4002cc, 5 bytes>
0x4002cc:	test	rax, rax
0x4002cf:	jne	0x4002e7
<Block for 0x4002d1, 12 bytes>
0x4002d1:	lea	rdi, [rip + 0x7e]
0x4002d8:	call	0x500000
<Block for 0x4002e7, 12 bytes>
0x4002e7:	mov	rax, qword ptr [rbp - 0x78]
0x4002eb:	mov	rdi, rax
0x4002ee:	call	0x500000
<Block for 0x4002dd, 10 bytes>
0x4002dd:	mov	edi, 1
0x4002e2:	call	0x500020
