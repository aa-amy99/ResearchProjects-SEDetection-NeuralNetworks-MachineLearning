<Block for 0x400064, 18 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	mov	eax, 0
0x400071:	call	0x500000
<Block for 0x400076, 4 bytes>
0x400076:	test	eax, eax
0x400078:	je	0x4000a1
<Block for 0x4000a1, 20 bytes>
0x4000a1:	mov	rax, qword ptr [rip + 0xfff60]
0x4000a8:	mov	rsi, rax
0x4000ab:	mov	edi, 0x41
0x4000b0:	call	0x500010
<Block for 0x40007a, 20 bytes>
0x40007a:	mov	rax, qword ptr [rip + 0xfff87]
0x400081:	mov	rsi, rax
0x400084:	mov	edi, 0x41
0x400089:	call	0x500010
<Block for 0x4000b5, 5 bytes>
0x4000b5:	cmp	eax, -1
0x4000b8:	jne	0x4000c6
<Block for 0x40008e, 5 bytes>
0x40008e:	cmp	eax, -1
0x400091:	jne	0x4000c6
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0x1d]
0x4000c1:	call	0x500018
<Block for 0x4000c6, 3 bytes>
0x4000c6:	nop	
0x4000c7:	pop	rbp
0x4000c8:	ret	
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0x44]
0x40009a:	call	0x500018
<Block for 0x40009f, 2 bytes>
0x40009f:	jmp	0x4000c6
