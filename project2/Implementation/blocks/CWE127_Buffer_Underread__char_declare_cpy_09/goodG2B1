<Block for 0x4000b6, 55 bytes>
0x4000b6:	endbr64	
0x4000ba:	push	rbp
0x4000bb:	mov	rbp, rsp
0x4000be:	sub	rsp, 0x150
0x4000c5:	mov	rax, qword ptr fs:[0x28]
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	xor	eax, eax
0x4000d4:	lea	rax, [rbp - 0x140]
0x4000db:	mov	edx, 0x63
0x4000e0:	mov	esi, 0x41
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500000
<Block for 0x4000ed, 17 bytes>
0x4000ed:	mov	byte ptr [rbp - 0xdd], 0
0x4000f4:	mov	eax, dword ptr [rip + 0xfff2e]
0x4000fa:	test	eax, eax
0x4000fc:	je	0x40010c
<Block for 0x40010c, 39 bytes>
0x40010c:	lea	rax, [rbp - 0x140]
0x400113:	mov	qword ptr [rbp - 0x148], rax
0x40011a:	lea	rax, [rbp - 0xd0]
0x400121:	mov	edx, 0xc7
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x4000fe, 12 bytes>
0x4000fe:	lea	rdi, [rip + 0x142]
0x400105:	call	0x500018
<Block for 0x400133, 29 bytes>
0x400133:	mov	byte ptr [rbp - 9], 0
0x400137:	mov	rdx, qword ptr [rbp - 0x148]
0x40013e:	lea	rax, [rbp - 0xd0]
0x400145:	mov	rsi, rdx
0x400148:	mov	rdi, rax
0x40014b:	call	0x500010
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x40011a
<Block for 0x400150, 15 bytes>
0x400150:	lea	rax, [rbp - 0xd0]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500018
<Block for 0x40011a, 25 bytes>
0x40011a:	lea	rax, [rbp - 0xd0]
0x400121:	mov	edx, 0xc7
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x40015f, 16 bytes>
0x40015f:	nop	
0x400160:	mov	rax, qword ptr [rbp - 8]
0x400164:	xor	rax, qword ptr fs:[0x28]
0x40016d:	je	0x400174
<Block for 0x400174, 2 bytes>
0x400174:	leave	
0x400175:	ret	
<Block for 0x40016f, 5 bytes>
0x40016f:	call	0x500020
