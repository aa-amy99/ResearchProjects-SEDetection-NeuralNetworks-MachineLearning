<Block for 0x400180, 45 bytes>
0x400180:	endbr64	
0x400184:	push	rbp
0x400185:	mov	rbp, rsp
0x400188:	add	rsp, -0x80
0x40018c:	mov	rax, qword ptr fs:[0x28]
0x400195:	mov	qword ptr [rbp - 8], rax
0x400199:	xor	eax, eax
0x40019b:	mov	qword ptr [rbp - 0x80], 0
0x4001a3:	mov	edi, 0x64
0x4001a8:	call	0x500000
<Block for 0x4001ad, 26 bytes>
0x4001ad:	mov	qword ptr [rbp - 0x78], rax
0x4001b1:	mov	rax, qword ptr [rbp - 0x78]
0x4001b5:	mov	edx, 0x63
0x4001ba:	mov	esi, 0x41
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500008
<Block for 0x4001c7, 42 bytes>
0x4001c7:	mov	rax, qword ptr [rbp - 0x78]
0x4001cb:	add	rax, 0x63
0x4001cf:	mov	byte ptr [rax], 0
0x4001d2:	mov	rax, qword ptr [rbp - 0x78]
0x4001d6:	mov	qword ptr [rbp - 0x80], rax
0x4001da:	nop	
0x4001db:	lea	rax, [rbp - 0x70]
0x4001df:	mov	edx, 0x63
0x4001e4:	mov	esi, 0x43
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500008
<Block for 0x4001f1, 16 bytes>
0x4001f1:	mov	byte ptr [rbp - 0xd], 0
0x4001f5:	lea	rax, [rbp - 0x70]
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500010
<Block for 0x400201, 22 bytes>
0x400201:	mov	rdx, rax
0x400204:	mov	rcx, qword ptr [rbp - 0x80]
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	rsi, rcx
0x40020f:	mov	rdi, rax
0x400212:	call	0x500018
<Block for 0x400217, 16 bytes>
0x400217:	mov	byte ptr [rbp - 0xd], 0
0x40021b:	lea	rax, [rbp - 0x70]
0x40021f:	mov	rdi, rax
0x400222:	call	0x500020
<Block for 0x400227, 16 bytes>
0x400227:	nop	
0x400228:	mov	rax, qword ptr [rbp - 8]
0x40022c:	xor	rax, qword ptr fs:[0x28]
0x400235:	je	0x40023c
<Block for 0x40023c, 2 bytes>
0x40023c:	leave	
0x40023d:	ret	
<Block for 0x400237, 5 bytes>
0x400237:	call	0x500028
