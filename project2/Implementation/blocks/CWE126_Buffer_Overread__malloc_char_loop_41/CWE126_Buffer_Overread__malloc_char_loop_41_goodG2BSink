<Block for 0x40011f, 59 bytes>
0x40011f:	endbr64	
0x400123:	push	rbp
0x400124:	mov	rbp, rsp
0x400127:	sub	rsp, 0x90
0x40012e:	mov	qword ptr [rbp - 0x88], rdi
0x400135:	mov	rax, qword ptr fs:[0x28]
0x40013e:	mov	qword ptr [rbp - 8], rax
0x400142:	xor	eax, eax
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x40015a, 16 bytes>
0x40015a:	mov	byte ptr [rbp - 0xd], 0
0x40015e:	lea	rax, [rbp - 0x70]
0x400162:	mov	rdi, rax
0x400165:	call	0x500008
<Block for 0x40016a, 14 bytes>
0x40016a:	mov	qword ptr [rbp - 0x78], rax
0x40016e:	mov	qword ptr [rbp - 0x80], 0
0x400176:	jmp	0x40019b
<Block for 0x40019b, 10 bytes>
0x40019b:	mov	rax, qword ptr [rbp - 0x80]
0x40019f:	cmp	rax, qword ptr [rbp - 0x78]
0x4001a3:	jb	0x400178
<Block for 0x400178, 45 bytes>
0x400178:	mov	rdx, qword ptr [rbp - 0x88]
0x40017f:	mov	rax, qword ptr [rbp - 0x80]
0x400183:	add	rax, rdx
0x400186:	movzx	eax, byte ptr [rax]
0x400189:	lea	rcx, [rbp - 0x70]
0x40018d:	mov	rdx, qword ptr [rbp - 0x80]
0x400191:	add	rdx, rcx
0x400194:	mov	byte ptr [rdx], al
0x400196:	add	qword ptr [rbp - 0x80], 1
0x40019b:	mov	rax, qword ptr [rbp - 0x80]
0x40019f:	cmp	rax, qword ptr [rbp - 0x78]
0x4001a3:	jb	0x400178
<Block for 0x4001a5, 16 bytes>
0x4001a5:	mov	byte ptr [rbp - 0xd], 0
0x4001a9:	lea	rax, [rbp - 0x70]
0x4001ad:	mov	rdi, rax
0x4001b0:	call	0x500010
<Block for 0x4001b5, 15 bytes>
0x4001b5:	mov	rax, qword ptr [rbp - 0x88]
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x500018
<Block for 0x4001c4, 16 bytes>
0x4001c4:	nop	
0x4001c5:	mov	rax, qword ptr [rbp - 8]
0x4001c9:	xor	rax, qword ptr fs:[0x28]
0x4001d2:	je	0x4001d9
<Block for 0x4001d9, 2 bytes>
0x4001d9:	leave	
0x4001da:	ret	
<Block for 0x4001d4, 5 bytes>
0x4001d4:	call	0x500020
