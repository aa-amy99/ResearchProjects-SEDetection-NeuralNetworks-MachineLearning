<Block for 0x400083, 30 bytes>
0x400083:	endbr64	
0x400087:	push	rbp
0x400088:	mov	rbp, rsp
0x40008b:	sub	rsp, 0x10
0x40008f:	mov	qword ptr [rbp - 8], 0
0x400097:	mov	edi, 0x320
0x40009c:	call	0x500000
<Block for 0x4000a1, 11 bytes>
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	cmp	qword ptr [rbp - 8], 0
0x4000aa:	jne	0x4000b6
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	edi, 0xffffffff
0x4000b1:	call	0x500008
<Block for 0x4000b6, 10 bytes>
0x4000b6:	mov	qword ptr [rbp - 0x10], 0
0x4000be:	jmp	0x4000df
<Block for 0x4000df, 7 bytes>
0x4000df:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000e4:	jbe	0x4000c0
<Block for 0x4000c0, 38 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x10]
0x4000c4:	lea	rdx, [rax*8]
0x4000cc:	mov	rax, qword ptr [rbp - 8]
0x4000d0:	add	rax, rdx
0x4000d3:	mov	qword ptr [rax], 5
0x4000da:	add	qword ptr [rbp - 0x10], 1
0x4000df:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000e4:	jbe	0x4000c0
<Block for 0x4000e6, 12 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500010
<Block for 0x4000f2, 5 bytes>
0x4000f2:	nop	
0x4000f3:	nop	
0x4000f4:	nop	
0x4000f5:	leave	
0x4000f6:	ret	
