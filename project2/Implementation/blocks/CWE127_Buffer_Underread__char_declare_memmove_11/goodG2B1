<Block for 0x4000b7, 55 bytes>
0x4000b7:	endbr64	
0x4000bb:	push	rbp
0x4000bc:	mov	rbp, rsp
0x4000bf:	sub	rsp, 0xf0
0x4000c6:	mov	rax, qword ptr fs:[0x28]
0x4000cf:	mov	qword ptr [rbp - 8], rax
0x4000d3:	xor	eax, eax
0x4000d5:	lea	rax, [rbp - 0xe0]
0x4000dc:	mov	edx, 0x63
0x4000e1:	mov	esi, 0x41
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500000
<Block for 0x4000ee, 14 bytes>
0x4000ee:	mov	byte ptr [rbp - 0x7d], 0
0x4000f2:	mov	eax, 0
0x4000f7:	call	0x500028
<Block for 0x4000fc, 4 bytes>
0x4000fc:	test	eax, eax
0x4000fe:	je	0x40010e
<Block for 0x40010e, 36 bytes>
0x40010e:	lea	rax, [rbp - 0xe0]
0x400115:	mov	qword ptr [rbp - 0xe8], rax
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x400100, 12 bytes>
0x400100:	lea	rdi, [rip + 0x143]
0x400107:	call	0x500018
<Block for 0x400132, 31 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	mov	rcx, qword ptr [rbp - 0xe8]
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	edx, 0x64
0x400146:	mov	rsi, rcx
0x400149:	mov	rdi, rax
0x40014c:	call	0x500010
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x40011c
<Block for 0x400151, 16 bytes>
0x400151:	mov	byte ptr [rbp - 0xd], 0
0x400155:	lea	rax, [rbp - 0x70]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500018
<Block for 0x40011c, 22 bytes>
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500020
