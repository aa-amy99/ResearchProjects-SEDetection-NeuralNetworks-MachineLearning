<Block for 0x4001e0, 113 bytes>
0x4001e0:	endbr64	
0x4001e4:	push	rbp
0x4001e5:	mov	rbp, rsp
0x4001e8:	push	rbx
0x4001e9:	sub	rsp, 0xa8
0x4001f0:	mov	rax, qword ptr fs:[0x28]
0x4001f9:	mov	qword ptr [rbp - 0x18], rax
0x4001fd:	xor	eax, eax
0x4001ff:	lea	rax, [rbp - 0xb0]
0x400206:	mov	qword ptr [rbp - 0xa8], rax
0x40020d:	lea	rax, [rbp - 0xb0]
0x400214:	mov	qword ptr [rbp - 0xa0], rax
0x40021b:	mov	eax, 0x10
0x400220:	sub	rax, 1
0x400224:	add	rax, 0x6c
0x400228:	mov	esi, 0x10
0x40022d:	mov	edx, 0
0x400232:	div	rsi
0x400235:	imul	rax, rax, 0x10
0x400239:	mov	rdx, rax
0x40023c:	and	rdx, 0xfffffffffffff000
0x400243:	mov	rbx, rsp
0x400246:	sub	rbx, rdx
0x400249:	mov	rdx, rbx
0x40024c:	cmp	rsp, rdx
0x40024f:	je	0x400263
<Block for 0x400263, 26 bytes>
0x400263:	mov	rdx, rax
0x400266:	and	edx, 0xfff
0x40026c:	sub	rsp, rdx
0x40026f:	mov	rdx, rax
0x400272:	and	edx, 0xfff
0x400278:	test	rdx, rdx
0x40027b:	je	0x40028d
<Block for 0x400251, 18 bytes>
0x400251:	sub	rsp, 0x1000
0x400258:	or	qword ptr [rsp + 0xff8], 0
0x400261:	jmp	0x40024c
<Block for 0x40028d, 47 bytes>
0x40028d:	mov	rax, rsp
0x400290:	add	rax, 0xf
0x400294:	shr	rax, 4
0x400298:	shl	rax, 4
0x40029c:	mov	qword ptr [rbp - 0x98], rax
0x4002a3:	mov	rax, qword ptr [rbp - 0x98]
0x4002aa:	mov	edx, 0x63
0x4002af:	mov	esi, 0x41
0x4002b4:	mov	rdi, rax
0x4002b7:	call	0x500000
<Block for 0x40027d, 63 bytes>
0x40027d:	and	eax, 0xfff
0x400282:	sub	rax, 8
0x400286:	add	rax, rsp
0x400289:	or	qword ptr [rax], 0
0x40028d:	mov	rax, rsp
0x400290:	add	rax, 0xf
0x400294:	shr	rax, 4
0x400298:	shl	rax, 4
0x40029c:	mov	qword ptr [rbp - 0x98], rax
0x4002a3:	mov	rax, qword ptr [rbp - 0x98]
0x4002aa:	mov	edx, 0x63
0x4002af:	mov	esi, 0x41
0x4002b4:	mov	rdi, rax
0x4002b7:	call	0x500000
<Block for 0x40024c, 5 bytes>
0x40024c:	cmp	rsp, rdx
0x40024f:	je	0x400263
<Block for 0x4002bc, 101 bytes>
0x4002bc:	mov	rax, qword ptr [rbp - 0x98]
0x4002c3:	add	rax, 0x63
0x4002c7:	mov	byte ptr [rax], 0
0x4002ca:	mov	rax, qword ptr [rbp - 0xa8]
0x4002d1:	mov	rax, qword ptr [rax]
0x4002d4:	mov	qword ptr [rbp - 0x90], rax
0x4002db:	mov	rax, qword ptr [rbp - 0x98]
0x4002e2:	mov	qword ptr [rbp - 0x90], rax
0x4002e9:	mov	rax, qword ptr [rbp - 0xa8]
0x4002f0:	mov	rdx, qword ptr [rbp - 0x90]
0x4002f7:	mov	qword ptr [rax], rdx
0x4002fa:	mov	rax, qword ptr [rbp - 0xa0]
0x400301:	mov	rax, qword ptr [rax]
0x400304:	mov	qword ptr [rbp - 0x88], rax
0x40030b:	lea	rax, [rbp - 0x80]
0x40030f:	mov	edx, 0x63
0x400314:	mov	esi, 0x43
0x400319:	mov	rdi, rax
0x40031c:	call	0x500000
<Block for 0x400321, 128 bytes>
0x400321:	mov	byte ptr [rbp - 0x1d], 0
0x400325:	mov	rax, qword ptr [rbp - 0x88]
0x40032c:	mov	rcx, qword ptr [rax]
0x40032f:	mov	rbx, qword ptr [rax + 8]
0x400333:	mov	qword ptr [rbp - 0x80], rcx
0x400337:	mov	qword ptr [rbp - 0x78], rbx
0x40033b:	mov	rcx, qword ptr [rax + 0x10]
0x40033f:	mov	rbx, qword ptr [rax + 0x18]
0x400343:	mov	qword ptr [rbp - 0x70], rcx
0x400347:	mov	qword ptr [rbp - 0x68], rbx
0x40034b:	mov	rcx, qword ptr [rax + 0x20]
0x40034f:	mov	rbx, qword ptr [rax + 0x28]
0x400353:	mov	qword ptr [rbp - 0x60], rcx
0x400357:	mov	qword ptr [rbp - 0x58], rbx
0x40035b:	mov	rcx, qword ptr [rax + 0x30]
0x40035f:	mov	rbx, qword ptr [rax + 0x38]
0x400363:	mov	qword ptr [rbp - 0x50], rcx
0x400367:	mov	qword ptr [rbp - 0x48], rbx
0x40036b:	mov	rcx, qword ptr [rax + 0x40]
0x40036f:	mov	rbx, qword ptr [rax + 0x48]
0x400373:	mov	qword ptr [rbp - 0x40], rcx
0x400377:	mov	qword ptr [rbp - 0x38], rbx
0x40037b:	mov	rcx, qword ptr [rax + 0x50]
0x40037f:	mov	rbx, qword ptr [rax + 0x58]
0x400383:	mov	qword ptr [rbp - 0x30], rcx
0x400387:	mov	qword ptr [rbp - 0x28], rbx
0x40038b:	mov	eax, dword ptr [rax + 0x60]
0x40038e:	mov	dword ptr [rbp - 0x20], eax
0x400391:	mov	byte ptr [rbp - 0x1d], 0
0x400395:	lea	rax, [rbp - 0x80]
0x400399:	mov	rdi, rax
0x40039c:	call	0x500008
<Block for 0x4003a1, 16 bytes>
0x4003a1:	nop	
0x4003a2:	mov	rax, qword ptr [rbp - 0x18]
0x4003a6:	xor	rax, qword ptr fs:[0x28]
0x4003af:	je	0x4003b6
<Block for 0x4003b6, 6 bytes>
0x4003b6:	mov	rbx, qword ptr [rbp - 8]
0x4003ba:	leave	
0x4003bb:	ret	
<Block for 0x4003b1, 5 bytes>
0x4003b1:	call	0x500010
