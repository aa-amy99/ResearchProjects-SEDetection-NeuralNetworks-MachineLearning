<Block for 0x400000, 113 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xa8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xb0]
0x400026:	mov	qword ptr [rbp - 0xa8], rax
0x40002d:	lea	rax, [rbp - 0xb0]
0x400034:	mov	qword ptr [rbp - 0xa0], rax
0x40003b:	mov	eax, 0x10
0x400040:	sub	rax, 1
0x400044:	add	rax, 0x6c
0x400048:	mov	esi, 0x10
0x40004d:	mov	edx, 0
0x400052:	div	rsi
0x400055:	imul	rax, rax, 0x10
0x400059:	mov	rdx, rax
0x40005c:	and	rdx, 0xfffffffffffff000
0x400063:	mov	rbx, rsp
0x400066:	sub	rbx, rdx
0x400069:	mov	rdx, rbx
0x40006c:	cmp	rsp, rdx
0x40006f:	je	0x400083
<Block for 0x400083, 26 bytes>
0x400083:	mov	rdx, rax
0x400086:	and	edx, 0xfff
0x40008c:	sub	rsp, rdx
0x40008f:	mov	rdx, rax
0x400092:	and	edx, 0xfff
0x400098:	test	rdx, rdx
0x40009b:	je	0x4000ad
<Block for 0x400071, 18 bytes>
0x400071:	sub	rsp, 0x1000
0x400078:	or	qword ptr [rsp + 0xff8], 0
0x400081:	jmp	0x40006c
<Block for 0x4000ad, 47 bytes>
0x4000ad:	mov	rax, rsp
0x4000b0:	add	rax, 0xf
0x4000b4:	shr	rax, 4
0x4000b8:	shl	rax, 4
0x4000bc:	mov	qword ptr [rbp - 0x98], rax
0x4000c3:	mov	rax, qword ptr [rbp - 0x98]
0x4000ca:	mov	edx, 0x63
0x4000cf:	mov	esi, 0x41
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500000
<Block for 0x40009d, 63 bytes>
0x40009d:	and	eax, 0xfff
0x4000a2:	sub	rax, 8
0x4000a6:	add	rax, rsp
0x4000a9:	or	qword ptr [rax], 0
0x4000ad:	mov	rax, rsp
0x4000b0:	add	rax, 0xf
0x4000b4:	shr	rax, 4
0x4000b8:	shl	rax, 4
0x4000bc:	mov	qword ptr [rbp - 0x98], rax
0x4000c3:	mov	rax, qword ptr [rbp - 0x98]
0x4000ca:	mov	edx, 0x63
0x4000cf:	mov	esi, 0x41
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500000
<Block for 0x40006c, 5 bytes>
0x40006c:	cmp	rsp, rdx
0x40006f:	je	0x400083
<Block for 0x4000dc, 105 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x98]
0x4000e3:	add	rax, 0x63
0x4000e7:	mov	byte ptr [rax], 0
0x4000ea:	mov	rax, qword ptr [rbp - 0xa8]
0x4000f1:	mov	rax, qword ptr [rax]
0x4000f4:	mov	qword ptr [rbp - 0x90], rax
0x4000fb:	mov	rax, qword ptr [rbp - 0x98]
0x400102:	sub	rax, 8
0x400106:	mov	qword ptr [rbp - 0x90], rax
0x40010d:	mov	rax, qword ptr [rbp - 0xa8]
0x400114:	mov	rdx, qword ptr [rbp - 0x90]
0x40011b:	mov	qword ptr [rax], rdx
0x40011e:	mov	rax, qword ptr [rbp - 0xa0]
0x400125:	mov	rax, qword ptr [rax]
0x400128:	mov	qword ptr [rbp - 0x88], rax
0x40012f:	lea	rax, [rbp - 0x80]
0x400133:	mov	edx, 0x63
0x400138:	mov	esi, 0x43
0x40013d:	mov	rdi, rax
0x400140:	call	0x500000
<Block for 0x400145, 128 bytes>
0x400145:	mov	byte ptr [rbp - 0x1d], 0
0x400149:	mov	rax, qword ptr [rbp - 0x88]
0x400150:	mov	rcx, qword ptr [rax]
0x400153:	mov	rbx, qword ptr [rax + 8]
0x400157:	mov	qword ptr [rbp - 0x80], rcx
0x40015b:	mov	qword ptr [rbp - 0x78], rbx
0x40015f:	mov	rcx, qword ptr [rax + 0x10]
0x400163:	mov	rbx, qword ptr [rax + 0x18]
0x400167:	mov	qword ptr [rbp - 0x70], rcx
0x40016b:	mov	qword ptr [rbp - 0x68], rbx
0x40016f:	mov	rcx, qword ptr [rax + 0x20]
0x400173:	mov	rbx, qword ptr [rax + 0x28]
0x400177:	mov	qword ptr [rbp - 0x60], rcx
0x40017b:	mov	qword ptr [rbp - 0x58], rbx
0x40017f:	mov	rcx, qword ptr [rax + 0x30]
0x400183:	mov	rbx, qword ptr [rax + 0x38]
0x400187:	mov	qword ptr [rbp - 0x50], rcx
0x40018b:	mov	qword ptr [rbp - 0x48], rbx
0x40018f:	mov	rcx, qword ptr [rax + 0x40]
0x400193:	mov	rbx, qword ptr [rax + 0x48]
0x400197:	mov	qword ptr [rbp - 0x40], rcx
0x40019b:	mov	qword ptr [rbp - 0x38], rbx
0x40019f:	mov	rcx, qword ptr [rax + 0x50]
0x4001a3:	mov	rbx, qword ptr [rax + 0x58]
0x4001a7:	mov	qword ptr [rbp - 0x30], rcx
0x4001ab:	mov	qword ptr [rbp - 0x28], rbx
0x4001af:	mov	eax, dword ptr [rax + 0x60]
0x4001b2:	mov	dword ptr [rbp - 0x20], eax
0x4001b5:	mov	byte ptr [rbp - 0x1d], 0
0x4001b9:	lea	rax, [rbp - 0x80]
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500008
<Block for 0x4001c5, 16 bytes>
0x4001c5:	nop	
0x4001c6:	mov	rax, qword ptr [rbp - 0x18]
0x4001ca:	xor	rax, qword ptr fs:[0x28]
0x4001d3:	je	0x4001da
<Block for 0x4001da, 6 bytes>
0x4001da:	mov	rbx, qword ptr [rbp - 8]
0x4001de:	leave	
0x4001df:	ret	
<Block for 0x4001d5, 5 bytes>
0x4001d5:	call	0x500010
