<Block for 0x40030d, 40 bytes>
0x40030d:	endbr64	
0x400311:	push	rbp
0x400312:	mov	rbp, rsp
0x400315:	push	rbx
0x400316:	sub	rsp, 0x58
0x40031a:	mov	rax, qword ptr fs:[0x28]
0x400323:	mov	qword ptr [rbp - 0x18], rax
0x400327:	xor	eax, eax
0x400329:	lea	rax, [rbp - 0x50]
0x40032d:	mov	rdi, rax
0x400330:	call	0x400506
<Block for 0x400335, 20 bytes>
0x400335:	mov	qword ptr [rbp - 0x60], 0
0x40033d:	lea	rax, [rbp - 0x50]
0x400341:	mov	rdi, rax
0x400344:	call	0x4006ae
<Block for 0x400349, 23 bytes>
0x400349:	mov	qword ptr [rbp - 0x58], rax
0x40034d:	lea	rdx, [rbp - 0x58]
0x400351:	lea	rax, [rbp - 0x30]
0x400355:	mov	rsi, rdx
0x400358:	mov	rdi, rax
0x40035b:	call	0x4006fe
<Block for 0x400360, 28 bytes>
0x400360:	lea	rdx, [rbp - 0x60]
0x400364:	mov	rsi, qword ptr [rbp - 0x30]
0x400368:	lea	rax, [rbp - 0x50]
0x40036c:	mov	rcx, rdx
0x40036f:	mov	edx, 1
0x400374:	mov	rdi, rax
0x400377:	call	0x40072c
<Block for 0x40037c, 12 bytes>
0x40037c:	lea	rax, [rbp - 0x50]
0x400380:	mov	rdi, rax
0x400383:	call	0x4006ae
<Block for 0x400388, 23 bytes>
0x400388:	mov	qword ptr [rbp - 0x58], rax
0x40038c:	lea	rdx, [rbp - 0x58]
0x400390:	lea	rax, [rbp - 0x30]
0x400394:	mov	rsi, rdx
0x400397:	mov	rdi, rax
0x40039a:	call	0x4006fe
<Block for 0x40039f, 28 bytes>
0x40039f:	lea	rdx, [rbp - 0x60]
0x4003a3:	mov	rsi, qword ptr [rbp - 0x30]
0x4003a7:	lea	rax, [rbp - 0x50]
0x4003ab:	mov	rcx, rdx
0x4003ae:	mov	edx, 1
0x4003b3:	mov	rdi, rax
0x4003b6:	call	0x40072c
<Block for 0x4003bb, 12 bytes>
0x4003bb:	lea	rax, [rbp - 0x50]
0x4003bf:	mov	rdi, rax
0x4003c2:	call	0x4006ae
<Block for 0x4003c7, 23 bytes>
0x4003c7:	mov	qword ptr [rbp - 0x58], rax
0x4003cb:	lea	rdx, [rbp - 0x58]
0x4003cf:	lea	rax, [rbp - 0x30]
0x4003d3:	mov	rsi, rdx
0x4003d6:	mov	rdi, rax
0x4003d9:	call	0x4006fe
<Block for 0x4003de, 28 bytes>
0x4003de:	lea	rdx, [rbp - 0x60]
0x4003e2:	mov	rsi, qword ptr [rbp - 0x30]
0x4003e6:	lea	rax, [rbp - 0x50]
0x4003ea:	mov	rcx, rdx
0x4003ed:	mov	edx, 1
0x4003f2:	mov	rdi, rax
0x4003f5:	call	0x40072c
<Block for 0x4003fa, 19 bytes>
0x4003fa:	lea	rdx, [rbp - 0x50]
0x4003fe:	lea	rax, [rbp - 0x30]
0x400402:	mov	rsi, rdx
0x400405:	mov	rdi, rax
0x400408:	call	0x4007f2
<Block for 0x40040d, 12 bytes>
0x40040d:	lea	rax, [rbp - 0x30]
0x400411:	mov	rdi, rax
0x400414:	call	0x500028
<Block for 0x400419, 12 bytes>
0x400419:	lea	rax, [rbp - 0x30]
0x40041d:	mov	rdi, rax
0x400420:	call	0x400666
<Block for 0x400425, 12 bytes>
0x400425:	lea	rax, [rbp - 0x50]
0x400429:	mov	rdi, rax
0x40042c:	call	0x400666
<Block for 0x400431, 16 bytes>
0x400431:	nop	
0x400432:	mov	rax, qword ptr [rbp - 0x18]
0x400436:	xor	rax, qword ptr fs:[0x28]
0x40043f:	je	0x40047b
<Block for 0x40047b, 7 bytes>
0x40047b:	add	rsp, 0x58
0x40047f:	pop	rbx
0x400480:	pop	rbp
0x400481:	ret	
<Block for 0x400441, 2 bytes>
0x400441:	jmp	0x400476
<Block for 0x400476, 5 bytes>
0x400476:	call	0x500010
