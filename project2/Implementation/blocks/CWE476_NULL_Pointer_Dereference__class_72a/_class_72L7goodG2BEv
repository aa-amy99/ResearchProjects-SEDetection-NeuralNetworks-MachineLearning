<Block for 0x400175, 40 bytes>
0x400175:	endbr64	
0x400179:	push	rbp
0x40017a:	mov	rbp, rsp
0x40017d:	push	rbx
0x40017e:	sub	rsp, 0x68
0x400182:	mov	rax, qword ptr fs:[0x28]
0x40018b:	mov	qword ptr [rbp - 0x18], rax
0x40018f:	xor	eax, eax
0x400191:	lea	rax, [rbp - 0x50]
0x400195:	mov	rdi, rax
0x400198:	call	0x400506
<Block for 0x40019d, 10 bytes>
0x40019d:	mov	edi, 8
0x4001a2:	call	0x500018
<Block for 0x4001a7, 45 bytes>
0x4001a7:	mov	qword ptr [rbp - 0x58], rax
0x4001ab:	mov	rax, qword ptr [rbp - 0x58]
0x4001af:	mov	dword ptr [rax], 0
0x4001b5:	mov	rax, qword ptr [rbp - 0x58]
0x4001b9:	mov	dword ptr [rax + 4], 0
0x4001c0:	mov	rax, qword ptr [rbp - 0x58]
0x4001c4:	mov	qword ptr [rbp - 0x68], rax
0x4001c8:	lea	rax, [rbp - 0x50]
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x4006ae
<Block for 0x4001d4, 23 bytes>
0x4001d4:	mov	qword ptr [rbp - 0x60], rax
0x4001d8:	lea	rdx, [rbp - 0x60]
0x4001dc:	lea	rax, [rbp - 0x30]
0x4001e0:	mov	rsi, rdx
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x4006fe
<Block for 0x4001eb, 28 bytes>
0x4001eb:	lea	rdx, [rbp - 0x68]
0x4001ef:	mov	rsi, qword ptr [rbp - 0x30]
0x4001f3:	lea	rax, [rbp - 0x50]
0x4001f7:	mov	rcx, rdx
0x4001fa:	mov	edx, 1
0x4001ff:	mov	rdi, rax
0x400202:	call	0x40072c
<Block for 0x400207, 12 bytes>
0x400207:	lea	rax, [rbp - 0x50]
0x40020b:	mov	rdi, rax
0x40020e:	call	0x4006ae
<Block for 0x400213, 23 bytes>
0x400213:	mov	qword ptr [rbp - 0x60], rax
0x400217:	lea	rdx, [rbp - 0x60]
0x40021b:	lea	rax, [rbp - 0x30]
0x40021f:	mov	rsi, rdx
0x400222:	mov	rdi, rax
0x400225:	call	0x4006fe
<Block for 0x40022a, 28 bytes>
0x40022a:	lea	rdx, [rbp - 0x68]
0x40022e:	mov	rsi, qword ptr [rbp - 0x30]
0x400232:	lea	rax, [rbp - 0x50]
0x400236:	mov	rcx, rdx
0x400239:	mov	edx, 1
0x40023e:	mov	rdi, rax
0x400241:	call	0x40072c
<Block for 0x400246, 12 bytes>
0x400246:	lea	rax, [rbp - 0x50]
0x40024a:	mov	rdi, rax
0x40024d:	call	0x4006ae
<Block for 0x400252, 23 bytes>
0x400252:	mov	qword ptr [rbp - 0x60], rax
0x400256:	lea	rdx, [rbp - 0x60]
0x40025a:	lea	rax, [rbp - 0x30]
0x40025e:	mov	rsi, rdx
0x400261:	mov	rdi, rax
0x400264:	call	0x4006fe
<Block for 0x400269, 28 bytes>
0x400269:	lea	rdx, [rbp - 0x68]
0x40026d:	mov	rsi, qword ptr [rbp - 0x30]
0x400271:	lea	rax, [rbp - 0x50]
0x400275:	mov	rcx, rdx
0x400278:	mov	edx, 1
0x40027d:	mov	rdi, rax
0x400280:	call	0x40072c
<Block for 0x400285, 19 bytes>
0x400285:	lea	rdx, [rbp - 0x50]
0x400289:	lea	rax, [rbp - 0x30]
0x40028d:	mov	rsi, rdx
0x400290:	mov	rdi, rax
0x400293:	call	0x4007f2
<Block for 0x400298, 12 bytes>
0x400298:	lea	rax, [rbp - 0x30]
0x40029c:	mov	rdi, rax
0x40029f:	call	0x500020
<Block for 0x4002a4, 12 bytes>
0x4002a4:	lea	rax, [rbp - 0x30]
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x400666
<Block for 0x4002b0, 12 bytes>
0x4002b0:	lea	rax, [rbp - 0x50]
0x4002b4:	mov	rdi, rax
0x4002b7:	call	0x400666
<Block for 0x4002bc, 16 bytes>
0x4002bc:	nop	
0x4002bd:	mov	rax, qword ptr [rbp - 0x18]
0x4002c1:	xor	rax, qword ptr fs:[0x28]
0x4002ca:	je	0x400306
<Block for 0x400306, 7 bytes>
0x400306:	add	rsp, 0x68
0x40030a:	pop	rbx
0x40030b:	pop	rbp
0x40030c:	ret	
<Block for 0x4002cc, 2 bytes>
0x4002cc:	jmp	0x400301
<Block for 0x400301, 5 bytes>
0x400301:	call	0x500010
