<Block for 0x4002cf, 32 bytes>
0x4002cf:	endbr64	
0x4002d3:	push	rbp
0x4002d4:	mov	rbp, rsp
0x4002d7:	push	r13
0x4002d9:	push	r12
0x4002db:	push	rbx
0x4002dc:	sub	rsp, 0x18
0x4002e0:	mov	eax, dword ptr [rip + 0xffd1a]
0x4002e6:	cmp	eax, 5
0x4002e9:	jne	0x400444
<Block for 0x4002ef, 5 bytes>
0x4002ef:	call	0x500008
<Block for 0x400444, 11 bytes>
0x400444:	add	rsp, 0x18
0x400448:	pop	rbx
0x400449:	pop	r12
0x40044b:	pop	r13
0x40044d:	pop	rbp
0x40044e:	ret	
<Block for 0x4002f4, 12 bytes>
0x4002f4:	and	eax, 1
0x4002f7:	test	eax, eax
0x4002f9:	sete	al
0x4002fc:	test	al, al
0x4002fe:	je	0x400335
<Block for 0x400335, 5 bytes>
0x400335:	call	0x500008
<Block for 0x400300, 10 bytes>
0x400300:	mov	edi, 0x10
0x400305:	call	0x500010
<Block for 0x40033a, 12 bytes>
0x40033a:	and	eax, 1
0x40033d:	test	eax, eax
0x40033f:	sete	al
0x400342:	test	al, al
0x400344:	je	0x40037b
<Block for 0x40030a, 18 bytes>
0x40030a:	mov	rbx, rax
0x40030d:	lea	rsi, [rip + 0x151]
0x400314:	mov	rdi, rbx
0x400317:	call	0x500018
<Block for 0x40037b, 12 bytes>
0x40037b:	lea	rdi, [rip + 0xed]
0x400382:	call	0x500060
<Block for 0x400346, 10 bytes>
0x400346:	mov	edi, 0x10
0x40034b:	call	0x500010
<Block for 0x40031c, 25 bytes>
0x40031c:	mov	rax, qword ptr [rip + 0xffd05]
0x400323:	mov	rdx, rax
0x400326:	lea	rsi, [rip + 0xffd03]
0x40032d:	mov	rdi, rbx
0x400330:	call	0x500038
<Block for 0x400387, 5 bytes>
0x400387:	jmp	0x400444
<Block for 0x400350, 18 bytes>
0x400350:	mov	rbx, rax
0x400353:	lea	rsi, [rip + 0x110]
0x40035a:	mov	rdi, rbx
0x40035d:	call	0x500040
<Block for 0x400362, 25 bytes>
0x400362:	mov	rax, qword ptr [rip + 0xffce7]
0x400369:	mov	rdx, rax
0x40036c:	lea	rsi, [rip + 0xffce5]
0x400373:	mov	rdi, rbx
0x400376:	call	0x500038
