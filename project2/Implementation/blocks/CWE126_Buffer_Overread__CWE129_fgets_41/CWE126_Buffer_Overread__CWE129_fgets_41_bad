<Block for 0x400081, 79 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x20
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a3:	mov	qword ptr [rbp - 0x16], 0
0x4000ab:	mov	dword ptr [rbp - 0xe], 0
0x4000b2:	mov	word ptr [rbp - 0xa], 0
0x4000b8:	mov	rdx, qword ptr [rip + 0xfff59]
0x4000bf:	lea	rax, [rbp - 0x16]
0x4000c3:	mov	esi, 0xe
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500020
<Block for 0x4000d0, 5 bytes>
0x4000d0:	test	rax, rax
0x4000d3:	je	0x4000e6
<Block for 0x4000e6, 12 bytes>
0x4000e6:	lea	rdi, [rip + 0x22a]
0x4000ed:	call	0x500008
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rax, [rbp - 0x16]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500028
<Block for 0x4000f2, 10 bytes>
0x4000f2:	mov	eax, dword ptr [rbp - 0x1c]
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x400000
<Block for 0x4000e1, 5 bytes>
0x4000e1:	mov	dword ptr [rbp - 0x1c], eax
0x4000e4:	jmp	0x4000f2
<Block for 0x4000fc, 16 bytes>
0x4000fc:	nop	
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	xor	rax, qword ptr fs:[0x28]
0x40010a:	je	0x400111
<Block for 0x400111, 2 bytes>
0x400111:	leave	
0x400112:	ret	
<Block for 0x40010c, 5 bytes>
0x40010c:	call	0x500010
