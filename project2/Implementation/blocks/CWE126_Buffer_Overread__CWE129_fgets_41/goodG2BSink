<Block for 0x400113, 76 bytes>
0x400113:	endbr64	
0x400117:	push	rbp
0x400118:	mov	rbp, rsp
0x40011b:	sub	rsp, 0x40
0x40011f:	mov	dword ptr [rbp - 0x34], edi
0x400122:	mov	rax, qword ptr fs:[0x28]
0x40012b:	mov	qword ptr [rbp - 8], rax
0x40012f:	xor	eax, eax
0x400131:	mov	qword ptr [rbp - 0x30], 0
0x400139:	mov	qword ptr [rbp - 0x28], 0
0x400141:	mov	qword ptr [rbp - 0x20], 0
0x400149:	mov	qword ptr [rbp - 0x18], 0
0x400151:	mov	qword ptr [rbp - 0x10], 0
0x400159:	cmp	dword ptr [rbp - 0x34], 0
0x40015d:	js	0x400171
<Block for 0x400171, 12 bytes>
0x400171:	lea	rdi, [rip + 0x180]
0x400178:	call	0x500008
<Block for 0x40015f, 16 bytes>
0x40015f:	mov	eax, dword ptr [rbp - 0x34]
0x400162:	cdqe	
0x400164:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400168:	mov	edi, eax
0x40016a:	call	0x500000
<Block for 0x40017d, 16 bytes>
0x40017d:	nop	
0x40017e:	mov	rax, qword ptr [rbp - 8]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x400192
<Block for 0x40016f, 2 bytes>
0x40016f:	jmp	0x40017d
<Block for 0x400192, 2 bytes>
0x400192:	leave	
0x400193:	ret	
<Block for 0x40018d, 5 bytes>
0x40018d:	call	0x500010
