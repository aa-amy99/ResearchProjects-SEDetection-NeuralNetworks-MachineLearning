<Block for 0x400000, 155 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x88], rax
0x400090:	mov	eax, dword ptr [rip + 0x666]
0x400096:	cmp	eax, 5
0x400099:	jne	0x4000ee
<Block for 0x40009b, 15 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x88]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500000
<Block for 0x4000ee, 11 bytes>
0x4000ee:	mov	eax, dword ptr [rip + 0x608]
0x4000f4:	cmp	eax, 5
0x4000f7:	jne	0x40015f
<Block for 0x4000aa, 16 bytes>
0x4000aa:	mov	qword ptr [rbp - 0x80], rax
0x4000ae:	lea	rdi, [rip + 0x64b]
0x4000b5:	call	0x500008
<Block for 0x4000f9, 34 bytes>
0x4000f9:	lea	rdx, [rbp - 0x94]
0x400100:	mov	rax, qword ptr [rbp - 0x88]
0x400107:	lea	rsi, [rip + 0x5f6]
0x40010e:	mov	rdi, rax
0x400111:	mov	eax, 0
0x400116:	call	0x500018
<Block for 0x40015f, 16 bytes>
0x40015f:	nop	
0x400160:	mov	rax, qword ptr [rbp - 8]
0x400164:	xor	rax, qword ptr fs:[0x28]
0x40016d:	je	0x400174
<Block for 0x4000ba, 11 bytes>
0x4000ba:	mov	qword ptr [rbp - 0x78], rax
0x4000be:	cmp	qword ptr [rbp - 0x78], 0
0x4000c3:	je	0x4000ee
<Block for 0x40011b, 5 bytes>
0x40011b:	cmp	eax, 1
0x40011e:	jne	0x40015f
<Block for 0x400174, 2 bytes>
0x400174:	leave	
0x400175:	ret	
<Block for 0x40016f, 5 bytes>
0x40016f:	call	0x500028
<Block for 0x4000c5, 41 bytes>
0x4000c5:	mov	eax, 0x63
0x4000ca:	sub	rax, qword ptr [rbp - 0x80]
0x4000ce:	mov	rdx, rax
0x4000d1:	mov	rcx, qword ptr [rbp - 0x88]
0x4000d8:	mov	rax, qword ptr [rbp - 0x80]
0x4000dc:	add	rcx, rax
0x4000df:	mov	rax, qword ptr [rbp - 0x78]
0x4000e3:	mov	rsi, rax
0x4000e6:	mov	rdi, rcx
0x4000e9:	call	0x500010
<Block for 0x400120, 22 bytes>
0x400120:	mov	dword ptr [rbp - 0x8c], 0
0x40012a:	mov	dword ptr [rbp - 0x90], 0
0x400134:	jmp	0x400144
<Block for 0x400144, 14 bytes>
0x400144:	mov	eax, dword ptr [rbp - 0x94]
0x40014a:	cmp	dword ptr [rbp - 0x90], eax
0x400150:	jl	0x400136
<Block for 0x400136, 28 bytes>
0x400136:	add	dword ptr [rbp - 0x8c], 1
0x40013d:	add	dword ptr [rbp - 0x90], 1
0x400144:	mov	eax, dword ptr [rbp - 0x94]
0x40014a:	cmp	dword ptr [rbp - 0x90], eax
0x400150:	jl	0x400136
<Block for 0x400152, 13 bytes>
0x400152:	mov	eax, dword ptr [rbp - 0x8c]
0x400158:	mov	edi, eax
0x40015a:	call	0x500020
