<Block for 0x4000d2, 37 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	add	rsp, -0x80
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	eax, 0
0x4000f2:	call	0x500018
<Block for 0x4000f7, 4 bytes>
0x4000f7:	test	eax, eax
0x4000f9:	je	0x40010c
<Block for 0x40010c, 142 bytes>
0x40010c:	mov	qword ptr [rbp - 0x70], 0
0x400114:	mov	qword ptr [rbp - 0x68], 0
0x40011c:	mov	qword ptr [rbp - 0x60], 0
0x400124:	mov	qword ptr [rbp - 0x58], 0
0x40012c:	mov	qword ptr [rbp - 0x50], 0
0x400134:	mov	qword ptr [rbp - 0x48], 0
0x40013c:	mov	qword ptr [rbp - 0x40], 0
0x400144:	mov	qword ptr [rbp - 0x38], 0
0x40014c:	mov	qword ptr [rbp - 0x30], 0
0x400154:	mov	qword ptr [rbp - 0x28], 0
0x40015c:	mov	qword ptr [rbp - 0x20], 0
0x400164:	mov	qword ptr [rbp - 0x18], 0
0x40016c:	mov	dword ptr [rbp - 0x10], 0
0x400173:	lea	rax, [rbp - 0x70]
0x400177:	mov	qword ptr [rbp - 0x78], rax
0x40017b:	mov	rax, qword ptr [rbp - 0x78]
0x40017f:	mov	rdx, rax
0x400182:	lea	rsi, [rip + 0x13b]
0x400189:	lea	rdi, [rip + 0x13a]
0x400190:	mov	eax, 0
0x400195:	call	0x500008
<Block for 0x4000fb, 12 bytes>
0x4000fb:	lea	rdi, [rip + 0x1cf]
0x400102:	call	0x500020
<Block for 0x40019a, 5 bytes>
0x40019a:	cmp	eax, -1
0x40019d:	jne	0x4001ab
<Block for 0x400107, 5 bytes>
0x400107:	jmp	0x4001ab
<Block for 0x40019f, 12 bytes>
0x40019f:	lea	rdi, [rip + 0x140]
0x4001a6:	call	0x500020
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500010
