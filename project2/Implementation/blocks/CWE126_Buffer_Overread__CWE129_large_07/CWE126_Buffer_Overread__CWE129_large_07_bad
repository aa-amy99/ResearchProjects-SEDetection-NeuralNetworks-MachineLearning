<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0x360]
0x400028:	cmp	eax, 5
0x40002b:	jne	0x400034
<Block for 0x40002d, 18 bytes>
0x40002d:	mov	dword ptr [rbp - 0x34], 0xa
0x400034:	mov	eax, dword ptr [rip + 0x34e]
0x40003a:	cmp	eax, 5
0x40003d:	jne	0x40008b
<Block for 0x400034, 11 bytes>
0x400034:	mov	eax, dword ptr [rip + 0x34e]
0x40003a:	cmp	eax, 5
0x40003d:	jne	0x40008b
<Block for 0x40003f, 46 bytes>
0x40003f:	mov	qword ptr [rbp - 0x30], 0
0x400047:	mov	qword ptr [rbp - 0x28], 0
0x40004f:	mov	qword ptr [rbp - 0x20], 0
0x400057:	mov	qword ptr [rbp - 0x18], 0
0x40005f:	mov	qword ptr [rbp - 0x10], 0
0x400067:	cmp	dword ptr [rbp - 0x34], 0
0x40006b:	js	0x40007f
<Block for 0x40008b, 16 bytes>
0x40008b:	nop	
0x40008c:	mov	rax, qword ptr [rbp - 8]
0x400090:	xor	rax, qword ptr fs:[0x28]
0x400099:	je	0x4000a0
<Block for 0x40007f, 12 bytes>
0x40007f:	lea	rdi, [rip + 0x30a]
0x400086:	call	0x500008
<Block for 0x40006d, 16 bytes>
0x40006d:	mov	eax, dword ptr [rbp - 0x34]
0x400070:	cdqe	
0x400072:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400076:	mov	edi, eax
0x400078:	call	0x500000
<Block for 0x4000a0, 2 bytes>
0x4000a0:	leave	
0x4000a1:	ret	
<Block for 0x40009b, 5 bytes>
0x40009b:	call	0x500010
<Block for 0x40007d, 2 bytes>
0x40007d:	jmp	0x40008b
