<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x10
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x40008b:	lea	rax, [rbp - 0xc]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 8 bytes>
0x400097:	mov	eax, dword ptr [rbp - 0xc]
0x40009a:	cmp	eax, 5
0x40009d:	jg	0x4000be
<Block for 0x40009f, 31 bytes>
0x40009f:	lea	rcx, [rip + 0xca]
0x4000a6:	mov	edx, 0x29
0x4000ab:	lea	rsi, [rip + 0xee]
0x4000b2:	lea	rdi, [rip + 0x10f]
0x4000b9:	call	0x500008
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x4000d3
<Block for 0x4000d3, 2 bytes>
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000ce, 5 bytes>
0x4000ce:	call	0x500010
