<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	qword ptr [rbp - 0x18], rdi
0x400011:	call	0x500000
<Block for 0x400016, 7 bytes>
0x400016:	and	eax, 1
0x400019:	test	eax, eax
0x40001b:	je	0x40003c
<Block for 0x40003c, 5 bytes>
0x40003c:	call	0x500000
<Block for 0x40001d, 5 bytes>
0x40001d:	call	0x500000
<Block for 0x400041, 10 bytes>
0x400041:	shl	eax, 0x1e
0x400044:	mov	ebx, eax
0x400046:	call	0x500000
<Block for 0x400022, 10 bytes>
0x400022:	shl	eax, 0x1e
0x400025:	mov	ebx, eax
0x400027:	call	0x500000
<Block for 0x40004b, 10 bytes>
0x40004b:	shl	eax, 0xf
0x40004e:	xor	ebx, eax
0x400050:	call	0x500000
<Block for 0x40002c, 10 bytes>
0x40002c:	shl	eax, 0xf
0x40002f:	xor	ebx, eax
0x400031:	call	0x500000
<Block for 0x400055, 20 bytes>
0x400055:	xor	eax, ebx
0x400057:	not	eax
0x400059:	mov	edx, eax
0x40005b:	mov	rax, qword ptr [rbp - 0x18]
0x40005f:	mov	dword ptr [rax], edx
0x400061:	nop	
0x400062:	add	rsp, 0x18
0x400066:	pop	rbx
0x400067:	pop	rbp
0x400068:	ret	
<Block for 0x400036, 6 bytes>
0x400036:	xor	eax, ebx
0x400038:	mov	edx, eax
0x40003a:	jmp	0x40005b
<Block for 0x40005b, 14 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 0x18]
0x40005f:	mov	dword ptr [rax], edx
0x400061:	nop	
0x400062:	add	rsp, 0x18
0x400066:	pop	rbx
0x400067:	pop	rbp
0x400068:	ret	
