<Block for 0x40008d, 22 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	eax, dword ptr [rip + 0xfff79]
0x40009f:	test	eax, eax
0x4000a1:	je	0x4000b1
<Block for 0x4000b1, 16 bytes>
0x4000b1:	lea	rax, [rip + 0x11a]
0x4000b8:	mov	qword ptr [rbp - 8], rax
0x4000bc:	call	0x500008
<Block for 0x4000a3, 12 bytes>
0x4000a3:	lea	rdi, [rip + 0x145]
0x4000aa:	call	0x500010
<Block for 0x4000c1, 55 bytes>
0x4000c1:	mov	edx, eax
0x4000c3:	movsxd	rax, edx
0x4000c6:	imul	rax, rax, 0x55555556
0x4000cd:	shr	rax, 0x20
0x4000d1:	mov	rcx, rax
0x4000d4:	mov	eax, edx
0x4000d6:	sar	eax, 0x1f
0x4000d9:	mov	esi, ecx
0x4000db:	sub	esi, eax
0x4000dd:	mov	eax, esi
0x4000df:	mov	dword ptr [rbp - 0xc], eax
0x4000e2:	mov	ecx, dword ptr [rbp - 0xc]
0x4000e5:	mov	eax, ecx
0x4000e7:	add	eax, eax
0x4000e9:	add	eax, ecx
0x4000eb:	sub	edx, eax
0x4000ed:	mov	eax, edx
0x4000ef:	mov	dword ptr [rbp - 0xc], eax
0x4000f2:	cmp	dword ptr [rbp - 0xc], 0
0x4000f6:	je	0x400100
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x400125
<Block for 0x400100, 13 bytes>
0x400100:	lea	rax, [rip + 0xe4]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	jmp	0x400119
<Block for 0x4000f8, 6 bytes>
0x4000f8:	cmp	dword ptr [rbp - 0xc], 1
0x4000fc:	je	0x40010d
<Block for 0x400125, 2 bytes>
0x400125:	leave	
0x400126:	ret	
<Block for 0x400119, 12 bytes>
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500010
<Block for 0x40010d, 24 bytes>
0x40010d:	lea	rax, [rip + 0xd9]
0x400114:	mov	qword ptr [rbp - 8], rax
0x400118:	nop	
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	mov	rdi, rax
0x400120:	call	0x500010
<Block for 0x4000fe, 2 bytes>
0x4000fe:	jmp	0x400125
