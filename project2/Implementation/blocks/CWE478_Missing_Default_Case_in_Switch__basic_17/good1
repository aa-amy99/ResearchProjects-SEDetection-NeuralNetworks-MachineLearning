<Block for 0x400097, 21 bytes>
0x400097:	endbr64	
0x40009b:	push	rbp
0x40009c:	mov	rbp, rsp
0x40009f:	sub	rsp, 0x10
0x4000a3:	mov	dword ptr [rbp - 0x10], 0
0x4000aa:	jmp	0x400124
<Block for 0x400124, 6 bytes>
0x400124:	cmp	dword ptr [rbp - 0x10], 0
0x400128:	jle	0x4000ac
<Block for 0x4000ac, 16 bytes>
0x4000ac:	lea	rax, [rip + 0x8e]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	call	0x500000
<Block for 0x40012a, 2 bytes>
0x40012a:	leave	
0x40012b:	ret	
<Block for 0x4000bc, 55 bytes>
0x4000bc:	mov	edx, eax
0x4000be:	movsxd	rax, edx
0x4000c1:	imul	rax, rax, 0x55555556
0x4000c8:	shr	rax, 0x20
0x4000cc:	mov	rcx, rax
0x4000cf:	mov	eax, edx
0x4000d1:	sar	eax, 0x1f
0x4000d4:	mov	esi, ecx
0x4000d6:	sub	esi, eax
0x4000d8:	mov	eax, esi
0x4000da:	mov	dword ptr [rbp - 0xc], eax
0x4000dd:	mov	ecx, dword ptr [rbp - 0xc]
0x4000e0:	mov	eax, ecx
0x4000e2:	add	eax, eax
0x4000e4:	add	eax, ecx
0x4000e6:	sub	edx, eax
0x4000e8:	mov	eax, edx
0x4000ea:	mov	dword ptr [rbp - 0xc], eax
0x4000ed:	cmp	dword ptr [rbp - 0xc], 0
0x4000f1:	je	0x4000fb
<Block for 0x4000fb, 13 bytes>
0x4000fb:	lea	rax, [rip + 0x58]
0x400102:	mov	qword ptr [rbp - 8], rax
0x400106:	jmp	0x400114
<Block for 0x4000f3, 6 bytes>
0x4000f3:	cmp	dword ptr [rbp - 0xc], 1
0x4000f7:	je	0x400108
<Block for 0x400114, 12 bytes>
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x400108, 24 bytes>
0x400108:	lea	rax, [rip + 0x4d]
0x40010f:	mov	qword ptr [rbp - 8], rax
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x4000f9, 2 bytes>
0x4000f9:	jmp	0x40012a
<Block for 0x400120, 10 bytes>
0x400120:	add	dword ptr [rbp - 0x10], 1
0x400124:	cmp	dword ptr [rbp - 0x10], 0
0x400128:	jle	0x4000ac
