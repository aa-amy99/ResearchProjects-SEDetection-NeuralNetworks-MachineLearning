<Block for 0x4000a4, 31 bytes>
0x4000a4:	endbr64	
0x4000a8:	push	rbp
0x4000a9:	mov	rbp, rsp
0x4000ac:	sub	rsp, 0x10
0x4000b0:	mov	qword ptr [rbp - 8], 0
0x4000b8:	mov	eax, dword ptr [rip + 0x266]
0x4000be:	cmp	eax, 5
0x4000c1:	jne	0x40012d
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	edi, 0x320
0x4000c8:	call	0x500000
<Block for 0x40012d, 11 bytes>
0x40012d:	mov	eax, dword ptr [rip + 0x1f1]
0x400133:	cmp	eax, 5
0x400136:	je	0x400144
<Block for 0x4000cd, 19 bytes>
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	mov	qword ptr [rbp - 0x10], 0
0x4000d9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000de:	ja	0x40011a
<Block for 0x400144, 3 bytes>
0x400144:	nop	
0x400145:	leave	
0x400146:	ret	
<Block for 0x400138, 12 bytes>
0x400138:	lea	rdi, [rip + 0x1e9]
0x40013f:	call	0x500018
<Block for 0x4000e0, 58 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 0x10]
0x4000e4:	lea	rdx, [rax*8]
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	add	rax, rdx
0x4000f3:	mov	dword ptr [rax], 1
0x4000f9:	mov	rax, qword ptr [rbp - 0x10]
0x4000fd:	lea	rdx, [rax*8]
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	add	rax, rdx
0x40010c:	mov	dword ptr [rax + 4], 2
0x400113:	add	qword ptr [rbp - 0x10], 1
0x400118:	jmp	0x4000d9
<Block for 0x40011a, 7 bytes>
0x40011a:	cmp	qword ptr [rbp - 8], 0
0x40011f:	je	0x40012d
<Block for 0x4000d9, 7 bytes>
0x4000d9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000de:	ja	0x40011a
<Block for 0x400121, 12 bytes>
0x400121:	mov	rax, qword ptr [rbp - 8]
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
