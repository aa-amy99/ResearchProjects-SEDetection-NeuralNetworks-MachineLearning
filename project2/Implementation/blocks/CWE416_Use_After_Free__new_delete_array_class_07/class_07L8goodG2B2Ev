<Block for 0x400272, 31 bytes>
0x400272:	endbr64	
0x400276:	push	rbp
0x400277:	mov	rbp, rsp
0x40027a:	sub	rsp, 0x10
0x40027e:	mov	qword ptr [rbp - 0x10], 0
0x400286:	mov	eax, dword ptr [rip + 0x98]
0x40028c:	cmp	eax, 5
0x40028f:	jne	0x4002e8
<Block for 0x400291, 10 bytes>
0x400291:	mov	edi, 0x320
0x400296:	call	0x500000
<Block for 0x4002e8, 11 bytes>
0x4002e8:	mov	eax, dword ptr [rip + 0x36]
0x4002ee:	cmp	eax, 5
0x4002f1:	jne	0x400300
<Block for 0x40029b, 19 bytes>
0x40029b:	mov	qword ptr [rbp - 0x10], rax
0x40029f:	mov	qword ptr [rbp - 8], 0
0x4002a7:	cmp	qword ptr [rbp - 8], 0x63
0x4002ac:	ja	0x4002e8
<Block for 0x4002f3, 13 bytes>
0x4002f3:	mov	rax, qword ptr [rbp - 0x10]
0x4002f7:	mov	eax, dword ptr [rax]
0x4002f9:	mov	edi, eax
0x4002fb:	call	0x500010
<Block for 0x400300, 3 bytes>
0x400300:	nop	
0x400301:	leave	
0x400302:	ret	
<Block for 0x4002ae, 58 bytes>
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	lea	rdx, [rax*8]
0x4002ba:	mov	rax, qword ptr [rbp - 0x10]
0x4002be:	add	rax, rdx
0x4002c1:	mov	dword ptr [rax], 1
0x4002c7:	mov	rax, qword ptr [rbp - 8]
0x4002cb:	lea	rdx, [rax*8]
0x4002d3:	mov	rax, qword ptr [rbp - 0x10]
0x4002d7:	add	rax, rdx
0x4002da:	mov	dword ptr [rax + 4], 2
0x4002e1:	add	qword ptr [rbp - 8], 1
0x4002e6:	jmp	0x4002a7
<Block for 0x4002a7, 7 bytes>
0x4002a7:	cmp	qword ptr [rbp - 8], 0x63
0x4002ac:	ja	0x4002e8
