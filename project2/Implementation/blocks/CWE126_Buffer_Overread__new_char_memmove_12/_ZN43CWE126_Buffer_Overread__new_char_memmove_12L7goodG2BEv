<Block for 0x400107, 40 bytes>
0x400107:	endbr64	
0x40010b:	push	rbp
0x40010c:	mov	rbp, rsp
0x40010f:	add	rsp, -0x80
0x400113:	mov	rax, qword ptr fs:[0x28]
0x40011c:	mov	qword ptr [rbp - 8], rax
0x400120:	xor	eax, eax
0x400122:	mov	qword ptr [rbp - 0x78], 0
0x40012a:	call	0x500000
<Block for 0x40012f, 9 bytes>
0x40012f:	test	eax, eax
0x400131:	setne	al
0x400134:	test	al, al
0x400136:	je	0x400169
<Block for 0x400169, 10 bytes>
0x400169:	mov	edi, 0x64
0x40016e:	call	0x500008
<Block for 0x400138, 10 bytes>
0x400138:	mov	edi, 0x64
0x40013d:	call	0x500008
<Block for 0x400173, 26 bytes>
0x400173:	mov	qword ptr [rbp - 0x78], rax
0x400177:	mov	rax, qword ptr [rbp - 0x78]
0x40017b:	mov	edx, 0x63
0x400180:	mov	esi, 0x41
0x400185:	mov	rdi, rax
0x400188:	call	0x500010
<Block for 0x400142, 26 bytes>
0x400142:	mov	qword ptr [rbp - 0x78], rax
0x400146:	mov	rax, qword ptr [rbp - 0x78]
0x40014a:	mov	edx, 0x63
0x40014f:	mov	esi, 0x41
0x400154:	mov	rdi, rax
0x400157:	call	0x500010
<Block for 0x40018d, 33 bytes>
0x40018d:	mov	rax, qword ptr [rbp - 0x78]
0x400191:	add	rax, 0x63
0x400195:	mov	byte ptr [rax], 0
0x400198:	lea	rax, [rbp - 0x70]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x43
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500010
<Block for 0x40015c, 13 bytes>
0x40015c:	mov	rax, qword ptr [rbp - 0x78]
0x400160:	add	rax, 0x63
0x400164:	mov	byte ptr [rax], 0
0x400167:	jmp	0x400198
<Block for 0x4001ae, 16 bytes>
0x4001ae:	mov	byte ptr [rbp - 0xd], 0
0x4001b2:	lea	rax, [rbp - 0x70]
0x4001b6:	mov	rdi, rax
0x4001b9:	call	0x500018
<Block for 0x400198, 22 bytes>
0x400198:	lea	rax, [rbp - 0x70]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x43
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500010
<Block for 0x4001be, 22 bytes>
0x4001be:	mov	rdx, rax
0x4001c1:	mov	rcx, qword ptr [rbp - 0x78]
0x4001c5:	lea	rax, [rbp - 0x70]
0x4001c9:	mov	rsi, rcx
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500020
<Block for 0x4001d4, 16 bytes>
0x4001d4:	mov	byte ptr [rbp - 0xd], 0
0x4001d8:	lea	rax, [rbp - 0x70]
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500028
<Block for 0x4001e4, 7 bytes>
0x4001e4:	cmp	qword ptr [rbp - 0x78], 0
0x4001e9:	je	0x4001f7
<Block for 0x4001f7, 16 bytes>
0x4001f7:	nop	
0x4001f8:	mov	rax, qword ptr [rbp - 8]
0x4001fc:	xor	rax, qword ptr fs:[0x28]
0x400205:	je	0x40020c
<Block for 0x4001eb, 12 bytes>
0x4001eb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500030
<Block for 0x40020c, 2 bytes>
0x40020c:	leave	
0x40020d:	ret	
<Block for 0x400207, 5 bytes>
0x400207:	call	0x500038
