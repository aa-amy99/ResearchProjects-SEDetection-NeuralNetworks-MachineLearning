<Block for 0x40005c, 23 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	push	rbx
0x400065:	sub	rsp, 0x18
0x400069:	mov	edi, 8
0x40006e:	call	0x500000
<Block for 0x400073, 11 bytes>
0x400073:	mov	rbx, rax
0x400076:	mov	rdi, rbx
0x400079:	call	0x400114
<Block for 0x40007e, 28 bytes>
0x40007e:	mov	qword ptr [rbp - 0x18], rbx
0x400082:	mov	rax, qword ptr [rbp - 0x18]
0x400086:	mov	rax, qword ptr [rax]
0x400089:	mov	rcx, qword ptr [rax]
0x40008c:	mov	edx, dword ptr [rbp - 0x1c]
0x40008f:	mov	rax, qword ptr [rbp - 0x18]
0x400093:	mov	esi, edx
0x400095:	mov	rdi, rax
0x400098:	call	rcx
<Block for 0x40009a, 9 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 0x18]
0x40009e:	test	rax, rax
0x4000a1:	je	0x4000b0
<Block for 0x4000b0, 8 bytes>
0x4000b0:	nop	
0x4000b1:	add	rsp, 0x18
0x4000b5:	pop	rbx
0x4000b6:	pop	rbp
0x4000b7:	ret	
<Block for 0x4000a3, 13 bytes>
0x4000a3:	mov	esi, 8
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
