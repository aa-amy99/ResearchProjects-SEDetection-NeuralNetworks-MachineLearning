<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	edi, 8
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	rbx, rax
0x40001a:	mov	rdi, rbx
0x40001d:	call	0x4000e6
<Block for 0x400022, 28 bytes>
0x400022:	mov	qword ptr [rbp - 0x18], rbx
0x400026:	mov	rax, qword ptr [rbp - 0x18]
0x40002a:	mov	rax, qword ptr [rax]
0x40002d:	mov	rcx, qword ptr [rax]
0x400030:	mov	edx, dword ptr [rbp - 0x1c]
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	esi, edx
0x400039:	mov	rdi, rax
0x40003c:	call	rcx
<Block for 0x40003e, 9 bytes>
0x40003e:	mov	rax, qword ptr [rbp - 0x18]
0x400042:	test	rax, rax
0x400045:	je	0x400054
<Block for 0x400054, 8 bytes>
0x400054:	nop	
0x400055:	add	rsp, 0x18
0x400059:	pop	rbx
0x40005a:	pop	rbp
0x40005b:	ret	
<Block for 0x400047, 13 bytes>
0x400047:	mov	esi, 8
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
