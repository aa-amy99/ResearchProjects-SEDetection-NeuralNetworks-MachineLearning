<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400023:	mov	eax, dword ptr [rip + 0xfffd7]
0x400029:	cmp	eax, 5
0x40002c:	jne	0x400077
<Block for 0x40002e, 5 bytes>
0x40002e:	call	0x500008
<Block for 0x400077, 11 bytes>
0x400077:	mov	eax, dword ptr [rip + 0xfff83]
0x40007d:	cmp	eax, 5
0x400080:	jne	0x4000ee
<Block for 0x400033, 7 bytes>
0x400033:	and	eax, 1
0x400036:	test	eax, eax
0x400038:	je	0x400057
<Block for 0x400082, 46 bytes>
0x400082:	mov	qword ptr [rbp - 0x40], 0
0x40008a:	mov	qword ptr [rbp - 0x38], 0
0x400092:	mov	qword ptr [rbp - 0x30], 0
0x40009a:	mov	qword ptr [rbp - 0x28], 0
0x4000a2:	mov	qword ptr [rbp - 0x20], 0
0x4000aa:	cmp	dword ptr [rbp - 0x48], 9
0x4000ae:	jg	0x4000e2
<Block for 0x4000ee, 16 bytes>
0x4000ee:	nop	
0x4000ef:	mov	rax, qword ptr [rbp - 0x18]
0x4000f3:	xor	rax, qword ptr fs:[0x28]
0x4000fc:	je	0x400103
<Block for 0x400057, 5 bytes>
0x400057:	call	0x500008
<Block for 0x40003a, 5 bytes>
0x40003a:	call	0x500008
<Block for 0x4000b0, 22 bytes>
0x4000b0:	mov	eax, dword ptr [rbp - 0x48]
0x4000b3:	cdqe	
0x4000b5:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4000bd:	mov	dword ptr [rbp - 0x44], 0
0x4000c4:	jmp	0x4000da
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rdi, [rip + 0x41f]
0x4000e9:	call	0x500018
<Block for 0x400103, 7 bytes>
0x400103:	add	rsp, 0x48
0x400107:	pop	rbx
0x400108:	pop	rbp
0x400109:	ret	
<Block for 0x4000fe, 5 bytes>
0x4000fe:	call	0x500020
<Block for 0x40005c, 10 bytes>
0x40005c:	shl	eax, 0x1e
0x40005f:	mov	ebx, eax
0x400061:	call	0x500008
<Block for 0x40003f, 10 bytes>
0x40003f:	shl	eax, 0x1e
0x400042:	mov	ebx, eax
0x400044:	call	0x500008
<Block for 0x4000da, 6 bytes>
0x4000da:	cmp	dword ptr [rbp - 0x44], 9
0x4000de:	jle	0x4000c6
<Block for 0x400066, 10 bytes>
0x400066:	shl	eax, 0xf
0x400069:	xor	ebx, eax
0x40006b:	call	0x500008
<Block for 0x400049, 10 bytes>
0x400049:	shl	eax, 0xf
0x40004c:	xor	ebx, eax
0x40004e:	call	0x500008
<Block for 0x4000c6, 16 bytes>
0x4000c6:	mov	eax, dword ptr [rbp - 0x44]
0x4000c9:	cdqe	
0x4000cb:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000cf:	mov	edi, eax
0x4000d1:	call	0x500010
<Block for 0x4000e0, 2 bytes>
0x4000e0:	jmp	0x4000ee
<Block for 0x400070, 18 bytes>
0x400070:	xor	eax, ebx
0x400072:	not	eax
0x400074:	mov	dword ptr [rbp - 0x48], eax
0x400077:	mov	eax, dword ptr [rip + 0xfff83]
0x40007d:	cmp	eax, 5
0x400080:	jne	0x4000ee
<Block for 0x400053, 4 bytes>
0x400053:	xor	eax, ebx
0x400055:	jmp	0x400074
<Block for 0x4000d6, 10 bytes>
0x4000d6:	add	dword ptr [rbp - 0x44], 1
0x4000da:	cmp	dword ptr [rbp - 0x44], 9
0x4000de:	jle	0x4000c6
<Block for 0x400074, 14 bytes>
0x400074:	mov	dword ptr [rbp - 0x48], eax
0x400077:	mov	eax, dword ptr [rip + 0xfff83]
0x40007d:	cmp	eax, 5
0x400080:	jne	0x4000ee
