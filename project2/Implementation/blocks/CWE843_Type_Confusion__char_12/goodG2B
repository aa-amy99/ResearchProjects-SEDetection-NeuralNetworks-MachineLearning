<Block for 0x400072, 45 bytes>
0x400072:	endbr64	
0x400076:	push	rbp
0x400077:	mov	rbp, rsp
0x40007a:	sub	rsp, 0x20
0x40007e:	mov	rax, qword ptr fs:[0x28]
0x400087:	mov	qword ptr [rbp - 8], rax
0x40008b:	xor	eax, eax
0x40008d:	mov	qword ptr [rbp - 0x10], 0
0x400095:	mov	eax, 0
0x40009a:	call	0x500000
<Block for 0x40009f, 4 bytes>
0x40009f:	test	eax, eax
0x4000a1:	je	0x4000b4
<Block for 0x4000b4, 28 bytes>
0x4000b4:	mov	dword ptr [rbp - 0x14], 8
0x4000bb:	lea	rax, [rbp - 0x14]
0x4000bf:	mov	qword ptr [rbp - 0x10], rax
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	mov	eax, dword ptr [rax]
0x4000c9:	mov	edi, eax
0x4000cb:	call	0x500008
<Block for 0x4000a3, 17 bytes>
0x4000a3:	mov	dword ptr [rbp - 0x14], 8
0x4000aa:	lea	rax, [rbp - 0x14]
0x4000ae:	mov	qword ptr [rbp - 0x10], rax
0x4000b2:	jmp	0x4000c3
<Block for 0x4000d0, 16 bytes>
0x4000d0:	nop	
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	xor	rax, qword ptr fs:[0x28]
0x4000de:	je	0x4000e5
<Block for 0x4000c3, 13 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	mov	eax, dword ptr [rax]
0x4000c9:	mov	edi, eax
0x4000cb:	call	0x500008
<Block for 0x4000e5, 2 bytes>
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	call	0x500010
