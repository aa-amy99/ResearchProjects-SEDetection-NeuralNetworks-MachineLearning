<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400055
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 4
0x400026:	call	0x500000
<Block for 0x400055, 13 bytes>
0x400055:	mov	dword ptr [rbp - 0xc], 0
0x40005c:	cmp	dword ptr [rbp - 0xc], 0
0x400060:	jg	0x400075
<Block for 0x40002b, 23 bytes>
0x40002b:	mov	qword ptr [rbp - 8], rax
0x40002f:	mov	rax, qword ptr [rbp - 8]
0x400033:	mov	dword ptr [rax], 5
0x400039:	mov	rax, qword ptr [rbp - 8]
0x40003d:	test	rax, rax
0x400040:	je	0x40004f
<Block for 0x400062, 13 bytes>
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	mov	eax, dword ptr [rax]
0x400068:	mov	edi, eax
0x40006a:	call	0x500010
<Block for 0x400075, 3 bytes>
0x400075:	nop	
0x400076:	leave	
0x400077:	ret	
<Block for 0x40004f, 6 bytes>
0x40004f:	add	dword ptr [rbp - 0x10], 1
0x400053:	jmp	0x40001b
<Block for 0x400042, 13 bytes>
0x400042:	mov	esi, 4
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40006f, 6 bytes>
0x40006f:	add	dword ptr [rbp - 0xc], 1
0x400073:	jmp	0x40005c
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400055
<Block for 0x40005c, 6 bytes>
0x40005c:	cmp	dword ptr [rbp - 0xc], 0
0x400060:	jg	0x400075
