<Block for 0x400078, 33 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x10
0x400084:	mov	qword ptr [rbp - 8], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	cmp	dword ptr [rbp - 0x10], 0
0x400097:	jg	0x4000cd
<Block for 0x400099, 10 bytes>
0x400099:	mov	edi, 4
0x40009e:	call	0x500000
<Block for 0x4000cd, 13 bytes>
0x4000cd:	mov	dword ptr [rbp - 0xc], 0
0x4000d4:	cmp	dword ptr [rbp - 0xc], 0
0x4000d8:	jg	0x4000e0
<Block for 0x4000a3, 23 bytes>
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	mov	dword ptr [rax], 5
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	test	rax, rax
0x4000b8:	je	0x4000c7
<Block for 0x4000da, 6 bytes>
0x4000da:	add	dword ptr [rbp - 0xc], 1
0x4000de:	jmp	0x4000d4
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000c7, 6 bytes>
0x4000c7:	add	dword ptr [rbp - 0x10], 1
0x4000cb:	jmp	0x400093
<Block for 0x4000ba, 13 bytes>
0x4000ba:	mov	esi, 4
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500008
<Block for 0x4000d4, 6 bytes>
0x4000d4:	cmp	dword ptr [rbp - 0xc], 0
0x4000d8:	jg	0x4000e0
<Block for 0x400093, 6 bytes>
0x400093:	cmp	dword ptr [rbp - 0x10], 0
0x400097:	jg	0x4000cd
