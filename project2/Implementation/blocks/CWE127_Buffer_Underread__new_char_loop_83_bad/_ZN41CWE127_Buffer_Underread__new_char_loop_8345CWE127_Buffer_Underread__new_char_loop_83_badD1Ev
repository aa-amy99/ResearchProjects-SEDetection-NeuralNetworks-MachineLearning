<Block for 0x400060, 59 bytes>
0x400060:	endbr64	
0x400064:	push	rbp
0x400065:	mov	rbp, rsp
0x400068:	sub	rsp, 0x90
0x40006f:	mov	qword ptr [rbp - 0x88], rdi
0x400076:	mov	rax, qword ptr fs:[0x28]
0x40007f:	mov	qword ptr [rbp - 8], rax
0x400083:	xor	eax, eax
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	edx, 0x63
0x40008e:	mov	esi, 0x43
0x400093:	mov	rdi, rax
0x400096:	call	0x500008
<Block for 0x40009b, 19 bytes>
0x40009b:	mov	byte ptr [rbp - 0xd], 0
0x40009f:	mov	qword ptr [rbp - 0x78], 0
0x4000a7:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000ac:	ja	0x4000d6
<Block for 0x4000ae, 40 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x88]
0x4000b5:	mov	rdx, qword ptr [rax]
0x4000b8:	mov	rax, qword ptr [rbp - 0x78]
0x4000bc:	add	rax, rdx
0x4000bf:	movzx	eax, byte ptr [rax]
0x4000c2:	lea	rcx, [rbp - 0x70]
0x4000c6:	mov	rdx, qword ptr [rbp - 0x78]
0x4000ca:	add	rdx, rcx
0x4000cd:	mov	byte ptr [rdx], al
0x4000cf:	add	qword ptr [rbp - 0x78], 1
0x4000d4:	jmp	0x4000a7
<Block for 0x4000d6, 16 bytes>
0x4000d6:	mov	byte ptr [rbp - 0xd], 0
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500010
<Block for 0x4000a7, 7 bytes>
0x4000a7:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000ac:	ja	0x4000d6
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000fb, 2 bytes>
0x4000fb:	leave	
0x4000fc:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500018
