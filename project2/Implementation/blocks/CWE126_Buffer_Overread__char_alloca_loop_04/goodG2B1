<Block for 0x400221, 84 bytes>
0x400221:	endbr64	
0x400225:	push	rbp
0x400226:	mov	rbp, rsp
0x400229:	sub	rsp, 0xa0
0x400230:	mov	rax, qword ptr fs:[0x28]
0x400239:	mov	qword ptr [rbp - 8], rax
0x40023d:	xor	eax, eax
0x40023f:	mov	eax, 0x10
0x400244:	sub	rax, 1
0x400248:	add	rax, 0x3a
0x40024c:	mov	ecx, 0x10
0x400251:	mov	edx, 0
0x400256:	div	rcx
0x400259:	imul	rax, rax, 0x10
0x40025d:	mov	rdx, rax
0x400260:	and	rdx, 0xfffffffffffff000
0x400267:	mov	rcx, rsp
0x40026a:	sub	rcx, rdx
0x40026d:	mov	rdx, rcx
0x400270:	cmp	rsp, rdx
0x400273:	je	0x400287
<Block for 0x400287, 26 bytes>
0x400287:	mov	rdx, rax
0x40028a:	and	edx, 0xfff
0x400290:	sub	rsp, rdx
0x400293:	mov	rdx, rax
0x400296:	and	edx, 0xfff
0x40029c:	test	rdx, rdx
0x40029f:	je	0x4002b1
<Block for 0x400275, 18 bytes>
0x400275:	sub	rsp, 0x1000
0x40027c:	or	qword ptr [rsp + 0xff8], 0
0x400285:	jmp	0x400270
<Block for 0x4002b1, 76 bytes>
0x4002b1:	mov	rax, rsp
0x4002b4:	add	rax, 0xf
0x4002b8:	shr	rax, 4
0x4002bc:	shl	rax, 4
0x4002c0:	mov	qword ptr [rbp - 0x88], rax
0x4002c7:	mov	eax, 0x10
0x4002cc:	sub	rax, 1
0x4002d0:	add	rax, 0x6c
0x4002d4:	mov	esi, 0x10
0x4002d9:	mov	edx, 0
0x4002de:	div	rsi
0x4002e1:	imul	rax, rax, 0x10
0x4002e5:	mov	rdx, rax
0x4002e8:	and	rdx, 0xfffffffffffff000
0x4002ef:	mov	rsi, rsp
0x4002f2:	sub	rsi, rdx
0x4002f5:	mov	rdx, rsi
0x4002f8:	cmp	rsp, rdx
0x4002fb:	je	0x40030f
<Block for 0x4002a1, 92 bytes>
0x4002a1:	and	eax, 0xfff
0x4002a6:	sub	rax, 8
0x4002aa:	add	rax, rsp
0x4002ad:	or	qword ptr [rax], 0
0x4002b1:	mov	rax, rsp
0x4002b4:	add	rax, 0xf
0x4002b8:	shr	rax, 4
0x4002bc:	shl	rax, 4
0x4002c0:	mov	qword ptr [rbp - 0x88], rax
0x4002c7:	mov	eax, 0x10
0x4002cc:	sub	rax, 1
0x4002d0:	add	rax, 0x6c
0x4002d4:	mov	esi, 0x10
0x4002d9:	mov	edx, 0
0x4002de:	div	rsi
0x4002e1:	imul	rax, rax, 0x10
0x4002e5:	mov	rdx, rax
0x4002e8:	and	rdx, 0xfffffffffffff000
0x4002ef:	mov	rsi, rsp
0x4002f2:	sub	rsi, rdx
0x4002f5:	mov	rdx, rsi
0x4002f8:	cmp	rsp, rdx
0x4002fb:	je	0x40030f
<Block for 0x400270, 5 bytes>
0x400270:	cmp	rsp, rdx
0x400273:	je	0x400287
<Block for 0x40030f, 26 bytes>
0x40030f:	mov	rdx, rax
0x400312:	and	edx, 0xfff
0x400318:	sub	rsp, rdx
0x40031b:	mov	rdx, rax
0x40031e:	and	edx, 0xfff
0x400324:	test	rdx, rdx
0x400327:	je	0x400339
<Block for 0x4002fd, 18 bytes>
0x4002fd:	sub	rsp, 0x1000
0x400304:	or	qword ptr [rsp + 0xff8], 0
0x40030d:	jmp	0x4002f8
<Block for 0x400339, 44 bytes>
0x400339:	mov	rax, rsp
0x40033c:	add	rax, 0xf
0x400340:	shr	rax, 4
0x400344:	shl	rax, 4
0x400348:	mov	qword ptr [rbp - 0x80], rax
0x40034c:	mov	rax, qword ptr [rbp - 0x88]
0x400353:	mov	edx, 0x31
0x400358:	mov	esi, 0x41
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x400329, 60 bytes>
0x400329:	and	eax, 0xfff
0x40032e:	sub	rax, 8
0x400332:	add	rax, rsp
0x400335:	or	qword ptr [rax], 0
0x400339:	mov	rax, rsp
0x40033c:	add	rax, 0xf
0x400340:	shr	rax, 4
0x400344:	shl	rax, 4
0x400348:	mov	qword ptr [rbp - 0x80], rax
0x40034c:	mov	rax, qword ptr [rbp - 0x88]
0x400353:	mov	edx, 0x31
0x400358:	mov	esi, 0x41
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x4002f8, 5 bytes>
0x4002f8:	cmp	rsp, rdx
0x4002fb:	je	0x40030f
<Block for 0x400365, 36 bytes>
0x400365:	mov	rax, qword ptr [rbp - 0x88]
0x40036c:	add	rax, 0x31
0x400370:	mov	byte ptr [rax], 0
0x400373:	mov	rax, qword ptr [rbp - 0x80]
0x400377:	mov	edx, 0x63
0x40037c:	mov	esi, 0x41
0x400381:	mov	rdi, rax
0x400384:	call	0x500000
<Block for 0x400389, 20 bytes>
0x400389:	mov	rax, qword ptr [rbp - 0x80]
0x40038d:	add	rax, 0x63
0x400391:	mov	byte ptr [rax], 0
0x400394:	mov	eax, 0
0x400399:	test	eax, eax
0x40039b:	je	0x4003ab
<Block for 0x4003ab, 33 bytes>
0x4003ab:	mov	rax, qword ptr [rbp - 0x80]
0x4003af:	mov	qword ptr [rbp - 0x98], rax
0x4003b6:	lea	rax, [rbp - 0x70]
0x4003ba:	mov	edx, 0x63
0x4003bf:	mov	esi, 0x43
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x500000
<Block for 0x40039d, 12 bytes>
0x40039d:	lea	rdi, [rip + 0x2f0]
0x4003a4:	call	0x500010
<Block for 0x4003cc, 16 bytes>
0x4003cc:	mov	byte ptr [rbp - 0xd], 0
0x4003d0:	lea	rax, [rbp - 0x70]
0x4003d4:	mov	rdi, rax
0x4003d7:	call	0x500008
<Block for 0x4003a9, 2 bytes>
0x4003a9:	jmp	0x4003b6
<Block for 0x4003dc, 17 bytes>
0x4003dc:	mov	qword ptr [rbp - 0x78], rax
0x4003e0:	mov	qword ptr [rbp - 0x90], 0
0x4003eb:	jmp	0x400419
<Block for 0x4003b6, 22 bytes>
0x4003b6:	lea	rax, [rbp - 0x70]
0x4003ba:	mov	edx, 0x63
0x4003bf:	mov	esi, 0x43
0x4003c4:	mov	rdi, rax
0x4003c7:	call	0x500000
<Block for 0x400419, 13 bytes>
0x400419:	mov	rax, qword ptr [rbp - 0x90]
0x400420:	cmp	rax, qword ptr [rbp - 0x78]
0x400424:	jb	0x4003ed
<Block for 0x4003ed, 57 bytes>
0x4003ed:	mov	rdx, qword ptr [rbp - 0x98]
0x4003f4:	mov	rax, qword ptr [rbp - 0x90]
0x4003fb:	add	rax, rdx
0x4003fe:	movzx	eax, byte ptr [rax]
0x400401:	lea	rcx, [rbp - 0x70]
0x400405:	mov	rdx, qword ptr [rbp - 0x90]
0x40040c:	add	rdx, rcx
0x40040f:	mov	byte ptr [rdx], al
0x400411:	add	qword ptr [rbp - 0x90], 1
0x400419:	mov	rax, qword ptr [rbp - 0x90]
0x400420:	cmp	rax, qword ptr [rbp - 0x78]
0x400424:	jb	0x4003ed
<Block for 0x400426, 16 bytes>
0x400426:	mov	byte ptr [rbp - 0xd], 0
0x40042a:	lea	rax, [rbp - 0x70]
0x40042e:	mov	rdi, rax
0x400431:	call	0x500010
<Block for 0x400436, 16 bytes>
0x400436:	nop	
0x400437:	mov	rax, qword ptr [rbp - 8]
0x40043b:	xor	rax, qword ptr fs:[0x28]
0x400444:	je	0x40044b
<Block for 0x40044b, 2 bytes>
0x40044b:	leave	
0x40044c:	ret	
<Block for 0x400446, 5 bytes>
0x400446:	call	0x500018
