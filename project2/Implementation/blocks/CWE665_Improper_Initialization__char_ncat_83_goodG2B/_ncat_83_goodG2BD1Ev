<Block for 0x400028, 59 bytes>
0x400028:	endbr64	
0x40002c:	push	rbp
0x40002d:	mov	rbp, rsp
0x400030:	sub	rsp, 0x90
0x400037:	mov	qword ptr [rbp - 0x88], rdi
0x40003e:	mov	rax, qword ptr fs:[0x28]
0x400047:	mov	qword ptr [rbp - 8], rax
0x40004b:	xor	eax, eax
0x40004d:	lea	rax, [rbp - 0x70]
0x400051:	mov	edx, 0x63
0x400056:	mov	esi, 0x43
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500000
<Block for 0x400063, 16 bytes>
0x400063:	mov	byte ptr [rbp - 0xd], 0
0x400067:	lea	rax, [rbp - 0x70]
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500008
<Block for 0x400073, 33 bytes>
0x400073:	mov	qword ptr [rbp - 0x78], rax
0x400077:	mov	rax, qword ptr [rbp - 0x88]
0x40007e:	mov	rax, qword ptr [rax]
0x400081:	mov	rdx, qword ptr [rbp - 0x78]
0x400085:	lea	rcx, [rbp - 0x70]
0x400089:	mov	rsi, rcx
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400094, 18 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0x88]
0x40009b:	mov	rax, qword ptr [rax]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500018
<Block for 0x4000a6, 16 bytes>
0x4000a6:	nop	
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	xor	rax, qword ptr fs:[0x28]
0x4000b4:	je	0x4000bb
<Block for 0x4000bb, 2 bytes>
0x4000bb:	leave	
0x4000bc:	ret	
<Block for 0x4000b6, 5 bytes>
0x4000b6:	call	0x500020
