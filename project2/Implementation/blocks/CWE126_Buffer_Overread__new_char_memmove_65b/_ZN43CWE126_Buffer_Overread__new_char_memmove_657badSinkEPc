<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	qword ptr [rbp - 0x78], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x70]
0x400023:	mov	edx, 0x63
0x400028:	mov	esi, 0x43
0x40002d:	mov	rdi, rax
0x400030:	call	0x500000
<Block for 0x400035, 16 bytes>
0x400035:	mov	byte ptr [rbp - 0xd], 0
0x400039:	lea	rax, [rbp - 0x70]
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400045, 22 bytes>
0x400045:	mov	rdx, rax
0x400048:	mov	rcx, qword ptr [rbp - 0x78]
0x40004c:	lea	rax, [rbp - 0x70]
0x400050:	mov	rsi, rcx
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40005b, 16 bytes>
0x40005b:	mov	byte ptr [rbp - 0xd], 0
0x40005f:	lea	rax, [rbp - 0x70]
0x400063:	mov	rdi, rax
0x400066:	call	0x500018
<Block for 0x40006b, 7 bytes>
0x40006b:	cmp	qword ptr [rbp - 0x78], 0
0x400070:	je	0x40007e
<Block for 0x40007e, 16 bytes>
0x40007e:	nop	
0x40007f:	mov	rax, qword ptr [rbp - 8]
0x400083:	xor	rax, qword ptr fs:[0x28]
0x40008c:	je	0x400093
<Block for 0x400072, 12 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0x78]
0x400076:	mov	rdi, rax
0x400079:	call	0x500020
<Block for 0x400093, 2 bytes>
0x400093:	leave	
0x400094:	ret	
<Block for 0x40008e, 5 bytes>
0x40008e:	call	0x500028
