<Block for 0x4000e8, 60 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	add	rsp, -0x80
0x4000f4:	mov	rax, qword ptr fs:[0x28]
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	xor	eax, eax
0x400103:	lea	rax, [rip - 0x10a]
0x40010a:	mov	qword ptr [rbp - 0x80], rax
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	edx, 0x63
0x400117:	mov	esi, 0x41
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x400124, 29 bytes>
0x400124:	mov	byte ptr [rbp - 0xd], 0
0x400128:	lea	rax, [rbp - 0x70]
0x40012c:	sub	rax, 8
0x400130:	mov	qword ptr [rbp - 0x78], rax
0x400134:	mov	rax, qword ptr [rbp - 0x78]
0x400138:	mov	rdx, qword ptr [rbp - 0x80]
0x40013c:	mov	rdi, rax
0x40013f:	call	rdx
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500010
