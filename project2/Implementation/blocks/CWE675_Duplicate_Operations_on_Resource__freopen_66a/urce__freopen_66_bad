<Block for 0x400000, 64 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x38], 0
0x400023:	mov	rax, qword ptr [rip + 0xfffd6]
0x40002a:	mov	rdx, rax
0x40002d:	lea	rsi, [rip + 0x146]
0x400034:	lea	rdi, [rip + 0x142]
0x40003b:	call	0x500008
<Block for 0x400040, 16 bytes>
0x400040:	mov	qword ptr [rbp - 0x38], rax
0x400044:	mov	rax, qword ptr [rbp - 0x38]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500010
<Block for 0x400050, 20 bytes>
0x400050:	mov	rax, qword ptr [rbp - 0x38]
0x400054:	mov	qword ptr [rbp - 0x20], rax
0x400058:	lea	rax, [rbp - 0x30]
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500018
<Block for 0x400064, 16 bytes>
0x400064:	nop	
0x400065:	mov	rax, qword ptr [rbp - 8]
0x400069:	xor	rax, qword ptr fs:[0x28]
0x400072:	je	0x400079
<Block for 0x400079, 2 bytes>
0x400079:	leave	
0x40007a:	ret	
<Block for 0x400074, 5 bytes>
0x400074:	call	0x500020
