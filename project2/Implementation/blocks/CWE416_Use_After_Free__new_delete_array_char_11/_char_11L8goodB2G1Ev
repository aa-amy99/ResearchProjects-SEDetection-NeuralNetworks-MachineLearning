<Block for 0x400081, 25 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x10
0x40008d:	mov	qword ptr [rbp - 8], 0
0x400095:	call	0x500000
<Block for 0x40009a, 9 bytes>
0x40009a:	test	eax, eax
0x40009c:	setne	al
0x40009f:	test	al, al
0x4000a1:	je	0x4000e5
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500028
<Block for 0x4000a3, 10 bytes>
0x4000a3:	mov	edi, 0x64
0x4000a8:	call	0x500008
<Block for 0x4000ea, 9 bytes>
0x4000ea:	test	eax, eax
0x4000ec:	setne	al
0x4000ef:	test	al, al
0x4000f1:	je	0x4000ff
<Block for 0x4000ad, 26 bytes>
0x4000ad:	mov	qword ptr [rbp - 8], rax
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	edx, 0x63
0x4000ba:	mov	esi, 0x41
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
<Block for 0x4000ff, 3 bytes>
0x4000ff:	nop	
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000f3, 12 bytes>
0x4000f3:	lea	rdi, [rip + 0x17f]
0x4000fa:	call	0x500020
<Block for 0x4000c7, 18 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	add	rax, 0x63
0x4000cf:	mov	byte ptr [rax], 0
0x4000d2:	cmp	qword ptr [rbp - 8], 0
0x4000d7:	je	0x4000e5
<Block for 0x4000d9, 12 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500018
