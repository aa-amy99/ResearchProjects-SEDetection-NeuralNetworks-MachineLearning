<Block for 0x4001c1, 181 bytes>
0x4001c1:	endbr64	
0x4001c5:	push	rbp
0x4001c6:	mov	rbp, rsp
0x4001c9:	add	rsp, -0x80
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 8], rax
0x4001da:	xor	eax, eax
0x4001dc:	mov	qword ptr [rbp - 0x70], 0
0x4001e4:	mov	qword ptr [rbp - 0x68], 0
0x4001ec:	mov	qword ptr [rbp - 0x60], 0
0x4001f4:	mov	qword ptr [rbp - 0x58], 0
0x4001fc:	mov	qword ptr [rbp - 0x50], 0
0x400204:	mov	qword ptr [rbp - 0x48], 0
0x40020c:	mov	qword ptr [rbp - 0x40], 0
0x400214:	mov	qword ptr [rbp - 0x38], 0
0x40021c:	mov	qword ptr [rbp - 0x30], 0
0x400224:	mov	qword ptr [rbp - 0x28], 0
0x40022c:	mov	qword ptr [rbp - 0x20], 0
0x400234:	mov	qword ptr [rbp - 0x18], 0
0x40023c:	mov	dword ptr [rbp - 0x10], 0
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	qword ptr [rbp - 0x78], rax
0x40024b:	mov	rax, qword ptr [rbp - 0x78]
0x40024f:	movabs	rdx, 0x6e69622f7273752f
0x400259:	movabs	rcx, 0x616c2d20736c2f
0x400263:	mov	qword ptr [rax], rdx
0x400266:	mov	qword ptr [rax + 8], rcx
0x40026a:	mov	rax, qword ptr [rbp - 0x78]
0x40026e:	mov	rdi, rax
0x400271:	call	0x500000
<Block for 0x400276, 4 bytes>
0x400276:	test	eax, eax
0x400278:	jg	0x400290
<Block for 0x40027a, 12 bytes>
0x40027a:	lea	rdi, [rip + 0x45]
0x400281:	call	0x500008
<Block for 0x400290, 16 bytes>
0x400290:	nop	
0x400291:	mov	rax, qword ptr [rbp - 8]
0x400295:	xor	rax, qword ptr fs:[0x28]
0x40029e:	je	0x4002a5
<Block for 0x400286, 10 bytes>
0x400286:	mov	edi, 1
0x40028b:	call	0x500010
<Block for 0x4002a5, 2 bytes>
0x4002a5:	leave	
0x4002a6:	ret	
<Block for 0x4002a0, 5 bytes>
0x4002a0:	call	0x500018
