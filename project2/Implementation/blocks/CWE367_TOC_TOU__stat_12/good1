<Block for 0x4002cd, 37 bytes>
0x4002cd:	endbr64	
0x4002d1:	push	rbp
0x4002d2:	mov	rbp, rsp
0x4002d5:	add	rsp, -0x80
0x4002d9:	mov	rax, qword ptr fs:[0x28]
0x4002e2:	mov	qword ptr [rbp - 8], rax
0x4002e6:	xor	eax, eax
0x4002e8:	mov	eax, 0
0x4002ed:	call	0x500000
<Block for 0x4002f2, 8 bytes>
0x4002f2:	test	eax, eax
0x4002f4:	je	0x40041d
<Block for 0x40041d, 134 bytes>
0x40041d:	mov	qword ptr [rbp - 0x70], 0
0x400425:	mov	qword ptr [rbp - 0x68], 0
0x40042d:	mov	qword ptr [rbp - 0x60], 0
0x400435:	mov	qword ptr [rbp - 0x58], 0
0x40043d:	mov	qword ptr [rbp - 0x50], 0
0x400445:	mov	qword ptr [rbp - 0x48], 0
0x40044d:	mov	qword ptr [rbp - 0x40], 0
0x400455:	mov	qword ptr [rbp - 0x38], 0
0x40045d:	mov	qword ptr [rbp - 0x30], 0
0x400465:	mov	qword ptr [rbp - 0x28], 0
0x40046d:	mov	qword ptr [rbp - 0x20], 0
0x400475:	mov	qword ptr [rbp - 0x18], 0
0x40047d:	mov	dword ptr [rbp - 0x10], 0
0x400484:	mov	dword ptr [rbp - 0x78], 0xffffffff
0x40048b:	mov	rdx, qword ptr [rip + 0xffb76]
0x400492:	lea	rax, [rbp - 0x70]
0x400496:	mov	esi, 0x64
0x40049b:	mov	rdi, rax
0x40049e:	call	0x500010
<Block for 0x4002fa, 134 bytes>
0x4002fa:	mov	qword ptr [rbp - 0x70], 0
0x400302:	mov	qword ptr [rbp - 0x68], 0
0x40030a:	mov	qword ptr [rbp - 0x60], 0
0x400312:	mov	qword ptr [rbp - 0x58], 0
0x40031a:	mov	qword ptr [rbp - 0x50], 0
0x400322:	mov	qword ptr [rbp - 0x48], 0
0x40032a:	mov	qword ptr [rbp - 0x40], 0
0x400332:	mov	qword ptr [rbp - 0x38], 0
0x40033a:	mov	qword ptr [rbp - 0x30], 0
0x400342:	mov	qword ptr [rbp - 0x28], 0
0x40034a:	mov	qword ptr [rbp - 0x20], 0
0x400352:	mov	qword ptr [rbp - 0x18], 0
0x40035a:	mov	dword ptr [rbp - 0x10], 0
0x400361:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400368:	mov	rdx, qword ptr [rip + 0xffc99]
0x40036f:	lea	rax, [rbp - 0x70]
0x400373:	mov	esi, 0x64
0x400378:	mov	rdi, rax
0x40037b:	call	0x500010
<Block for 0x4004a3, 5 bytes>
0x4004a3:	test	rax, rax
0x4004a6:	jne	0x4004b8
<Block for 0x400380, 5 bytes>
0x400380:	test	rax, rax
0x400383:	jne	0x400395
<Block for 0x4004a8, 12 bytes>
0x4004a8:	lea	rdi, [rip + 0xb4]
0x4004af:	call	0x500018
<Block for 0x4004b8, 11 bytes>
0x4004b8:	lea	rax, [rbp - 0x70]
0x4004bc:	movzx	eax, byte ptr [rax]
0x4004bf:	test	al, al
0x4004c1:	je	0x4004d8
<Block for 0x400385, 12 bytes>
0x400385:	lea	rdi, [rip + 0x1d7]
0x40038c:	call	0x500018
<Block for 0x400395, 11 bytes>
0x400395:	lea	rax, [rbp - 0x70]
0x400399:	movzx	eax, byte ptr [rax]
0x40039c:	test	al, al
0x40039e:	je	0x4003b5
<Block for 0x4004b4, 15 bytes>
0x4004b4:	mov	byte ptr [rbp - 0x70], 0
0x4004b8:	lea	rax, [rbp - 0x70]
0x4004bc:	movzx	eax, byte ptr [rax]
0x4004bf:	test	al, al
0x4004c1:	je	0x4004d8
<Block for 0x4004d8, 22 bytes>
0x4004d8:	lea	rax, [rbp - 0x70]
0x4004dc:	mov	esi, 2
0x4004e1:	mov	rdi, rax
0x4004e4:	mov	eax, 0
0x4004e9:	call	0x500038
<Block for 0x4004c3, 12 bytes>
0x4004c3:	lea	rax, [rbp - 0x70]
0x4004c7:	mov	rdi, rax
0x4004ca:	call	0x500020
<Block for 0x400391, 15 bytes>
0x400391:	mov	byte ptr [rbp - 0x70], 0
0x400395:	lea	rax, [rbp - 0x70]
0x400399:	movzx	eax, byte ptr [rax]
0x40039c:	test	al, al
0x40039e:	je	0x4003b5
<Block for 0x4003b5, 22 bytes>
0x4003b5:	lea	rax, [rbp - 0x70]
0x4003b9:	mov	esi, 2
0x4003be:	mov	rdi, rax
0x4003c1:	mov	eax, 0
0x4003c6:	call	0x500038
<Block for 0x4003a0, 12 bytes>
0x4003a0:	lea	rax, [rbp - 0x70]
0x4003a4:	mov	rdi, rax
0x4003a7:	call	0x500020
<Block for 0x4004ee, 9 bytes>
0x4004ee:	mov	dword ptr [rbp - 0x78], eax
0x4004f1:	cmp	dword ptr [rbp - 0x78], -1
0x4004f5:	jne	0x400501
<Block for 0x4004cf, 31 bytes>
0x4004cf:	sub	rax, 1
0x4004d3:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004d8:	lea	rax, [rbp - 0x70]
0x4004dc:	mov	esi, 2
0x4004e1:	mov	rdi, rax
0x4004e4:	mov	eax, 0
0x4004e9:	call	0x500038
<Block for 0x4003cb, 9 bytes>
0x4003cb:	mov	dword ptr [rbp - 0x74], eax
0x4003ce:	cmp	dword ptr [rbp - 0x74], -1
0x4003d2:	jne	0x4003de
<Block for 0x4003ac, 31 bytes>
0x4003ac:	sub	rax, 1
0x4003b0:	mov	byte ptr [rbp + rax - 0x70], 0
0x4003b5:	lea	rax, [rbp - 0x70]
0x4003b9:	mov	esi, 2
0x4003be:	mov	rdi, rax
0x4003c1:	mov	eax, 0
0x4003c6:	call	0x500038
<Block for 0x4004f7, 10 bytes>
0x4004f7:	mov	edi, 1
0x4004fc:	call	0x500030
<Block for 0x400501, 22 bytes>
0x400501:	mov	eax, dword ptr [rbp - 0x78]
0x400504:	mov	edx, 0xc
0x400509:	lea	rsi, [rip + 0x6e]
0x400510:	mov	edi, eax
0x400512:	call	0x500040
<Block for 0x4003d4, 10 bytes>
0x4003d4:	mov	edi, 1
0x4003d9:	call	0x500030
<Block for 0x4003de, 22 bytes>
0x4003de:	mov	eax, dword ptr [rbp - 0x74]
0x4003e1:	mov	edx, 0xc
0x4003e6:	lea	rsi, [rip + 0x191]
0x4003ed:	mov	edi, eax
0x4003ef:	call	0x500040
<Block for 0x400517, 6 bytes>
0x400517:	cmp	rax, -1
0x40051b:	jne	0x400527
<Block for 0x4003f4, 6 bytes>
0x4003f4:	cmp	rax, -1
0x4003f8:	jne	0x400404
<Block for 0x40051d, 10 bytes>
0x40051d:	mov	edi, 1
0x400522:	call	0x500030
<Block for 0x400527, 6 bytes>
0x400527:	cmp	dword ptr [rbp - 0x78], -1
0x40052b:	je	0x400537
<Block for 0x4003fa, 10 bytes>
0x4003fa:	mov	edi, 1
0x4003ff:	call	0x500030
<Block for 0x400404, 10 bytes>
0x400404:	cmp	dword ptr [rbp - 0x74], -1
0x400408:	je	0x400537
<Block for 0x400537, 16 bytes>
0x400537:	nop	
0x400538:	mov	rax, qword ptr [rbp - 8]
0x40053c:	xor	rax, qword ptr fs:[0x28]
0x400545:	je	0x40054c
<Block for 0x40052d, 10 bytes>
0x40052d:	mov	eax, dword ptr [rbp - 0x78]
0x400530:	mov	edi, eax
0x400532:	call	0x500048
<Block for 0x40040e, 10 bytes>
0x40040e:	mov	eax, dword ptr [rbp - 0x74]
0x400411:	mov	edi, eax
0x400413:	call	0x500048
<Block for 0x40054c, 2 bytes>
0x40054c:	leave	
0x40054d:	ret	
<Block for 0x400547, 5 bytes>
0x400547:	call	0x500050
<Block for 0x400418, 5 bytes>
0x400418:	jmp	0x400537
