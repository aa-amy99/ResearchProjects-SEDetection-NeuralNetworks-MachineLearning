<Block for 0x400000, 101 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x28], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x20], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x28]
0x40002f:	mov	rax, qword ptr [rax]
0x400032:	mov	qword ptr [rbp - 0x18], rax
0x400036:	mov	qword ptr [rbp - 0x18], 0
0x40003e:	mov	rax, qword ptr [rbp - 0x28]
0x400042:	mov	rdx, qword ptr [rbp - 0x18]
0x400046:	mov	qword ptr [rax], rdx
0x400049:	mov	rax, qword ptr [rbp - 0x20]
0x40004d:	mov	rax, qword ptr [rax]
0x400050:	mov	qword ptr [rbp - 0x10], rax
0x400054:	mov	rax, qword ptr [rbp - 0x10]
0x400058:	movzx	eax, byte ptr [rax]
0x40005b:	movsx	eax, al
0x40005e:	mov	edi, eax
0x400060:	call	0x500000
<Block for 0x400065, 16 bytes>
0x400065:	nop	
0x400066:	mov	rax, qword ptr [rbp - 8]
0x40006a:	xor	rax, qword ptr fs:[0x28]
0x400073:	je	0x40007a
<Block for 0x40007a, 2 bytes>
0x40007a:	leave	
0x40007b:	ret	
<Block for 0x400075, 5 bytes>
0x400075:	call	0x500008
