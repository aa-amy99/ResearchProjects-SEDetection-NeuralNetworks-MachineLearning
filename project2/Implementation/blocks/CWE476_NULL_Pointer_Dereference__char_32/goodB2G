<Block for 0x4000fb, 91 bytes>
0x4000fb:	endbr64	
0x4000ff:	push	rbp
0x400100:	mov	rbp, rsp
0x400103:	sub	rsp, 0x30
0x400107:	mov	rax, qword ptr fs:[0x28]
0x400110:	mov	qword ptr [rbp - 8], rax
0x400114:	xor	eax, eax
0x400116:	lea	rax, [rbp - 0x30]
0x40011a:	mov	qword ptr [rbp - 0x28], rax
0x40011e:	lea	rax, [rbp - 0x30]
0x400122:	mov	qword ptr [rbp - 0x20], rax
0x400126:	mov	rax, qword ptr [rbp - 0x28]
0x40012a:	mov	rax, qword ptr [rax]
0x40012d:	mov	qword ptr [rbp - 0x18], rax
0x400131:	mov	qword ptr [rbp - 0x18], 0
0x400139:	mov	rax, qword ptr [rbp - 0x28]
0x40013d:	mov	rdx, qword ptr [rbp - 0x18]
0x400141:	mov	qword ptr [rax], rdx
0x400144:	mov	rax, qword ptr [rbp - 0x20]
0x400148:	mov	rax, qword ptr [rax]
0x40014b:	mov	qword ptr [rbp - 0x10], rax
0x40014f:	cmp	qword ptr [rbp - 0x10], 0
0x400154:	je	0x400169
<Block for 0x400169, 12 bytes>
0x400169:	lea	rdi, [rip + 0x40]
0x400170:	call	0x500010
<Block for 0x400156, 17 bytes>
0x400156:	mov	rax, qword ptr [rbp - 0x10]
0x40015a:	movzx	eax, byte ptr [rax]
0x40015d:	movsx	eax, al
0x400160:	mov	edi, eax
0x400162:	call	0x500000
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x400167, 2 bytes>
0x400167:	jmp	0x400175
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500008
