<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400067
<Block for 0x400067, 18 bytes>
0x400067:	mov	qword ptr [rbp - 0x10], 0
0x40006f:	mov	edi, 1
0x400074:	call	0x500008
<Block for 0x40001a, 18 bytes>
0x40001a:	mov	qword ptr [rbp - 8], 0
0x400022:	mov	edi, 8
0x400027:	call	0x500008
<Block for 0x400079, 11 bytes>
0x400079:	mov	qword ptr [rbp - 0x10], rax
0x40007d:	cmp	qword ptr [rbp - 0x10], 0
0x400082:	jne	0x40008e
<Block for 0x40002c, 11 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	cmp	qword ptr [rbp - 8], 0
0x400035:	jne	0x400041
<Block for 0x400084, 10 bytes>
0x400084:	mov	edi, 0xffffffff
0x400089:	call	0x500010
<Block for 0x40008e, 24 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 0x10]
0x400092:	mov	byte ptr [rax], 0x47
0x400095:	mov	rax, qword ptr [rbp - 0x10]
0x400099:	movzx	eax, byte ptr [rax]
0x40009c:	movsx	eax, al
0x40009f:	mov	edi, eax
0x4000a1:	call	0x500018
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0xffffffff
0x40003c:	call	0x500010
<Block for 0x400041, 24 bytes>
0x400041:	mov	rax, qword ptr [rbp - 8]
0x400045:	mov	byte ptr [rax], 0x42
0x400048:	mov	rax, qword ptr [rbp - 8]
0x40004c:	movzx	eax, byte ptr [rax]
0x40004f:	movsx	eax, al
0x400052:	mov	edi, eax
0x400054:	call	0x500018
<Block for 0x4000a6, 12 bytes>
0x4000a6:	mov	rax, qword ptr [rbp - 0x10]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500020
<Block for 0x400059, 12 bytes>
0x400059:	mov	rax, qword ptr [rbp - 8]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500020
<Block for 0x4000b2, 3 bytes>
0x4000b2:	nop	
0x4000b3:	leave	
0x4000b4:	ret	
<Block for 0x400065, 2 bytes>
0x400065:	jmp	0x4000b2
