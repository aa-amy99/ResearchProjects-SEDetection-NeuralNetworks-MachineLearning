<Block for 0x4000df, 37 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	add	rsp, -0x80
0x4000eb:	mov	rax, qword ptr fs:[0x28]
0x4000f4:	mov	qword ptr [rbp - 8], rax
0x4000f8:	xor	eax, eax
0x4000fa:	mov	eax, 5
0x4000ff:	cmp	eax, 5
0x400102:	je	0x400115
<Block for 0x400115, 123 bytes>
0x400115:	mov	qword ptr [rbp - 0x70], 0
0x40011d:	mov	qword ptr [rbp - 0x68], 0
0x400125:	mov	qword ptr [rbp - 0x60], 0
0x40012d:	mov	qword ptr [rbp - 0x58], 0
0x400135:	mov	qword ptr [rbp - 0x50], 0
0x40013d:	mov	qword ptr [rbp - 0x48], 0
0x400145:	mov	qword ptr [rbp - 0x40], 0
0x40014d:	mov	qword ptr [rbp - 0x38], 0
0x400155:	mov	qword ptr [rbp - 0x30], 0
0x40015d:	mov	qword ptr [rbp - 0x28], 0
0x400165:	mov	qword ptr [rbp - 0x20], 0
0x40016d:	mov	qword ptr [rbp - 0x18], 0
0x400175:	mov	dword ptr [rbp - 0x10], 0
0x40017c:	lea	rax, [rbp - 0x70]
0x400180:	mov	qword ptr [rbp - 0x78], rax
0x400184:	lea	rdi, [rip + 0x179]
0x40018b:	call	0x500000
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x211]
0x40010b:	call	0x500000
<Block for 0x400190, 24 bytes>
0x400190:	mov	rdx, qword ptr [rip + 0xffe71]
0x400197:	mov	rax, qword ptr [rbp - 0x78]
0x40019b:	mov	esi, 0x64
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x500010
<Block for 0x400110, 5 bytes>
0x400110:	jmp	0x4001cf
<Block for 0x4001a8, 5 bytes>
0x4001a8:	test	rax, rax
0x4001ab:	jne	0x4001c3
<Block for 0x4001cf, 16 bytes>
0x4001cf:	nop	
0x4001d0:	mov	rax, qword ptr [rbp - 8]
0x4001d4:	xor	rax, qword ptr fs:[0x28]
0x4001dd:	je	0x4001e4
<Block for 0x4001ad, 12 bytes>
0x4001ad:	lea	rdi, [rip + 0x17d]
0x4001b4:	call	0x500000
<Block for 0x4001c3, 12 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x78]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x500000
<Block for 0x4001e4, 2 bytes>
0x4001e4:	leave	
0x4001e5:	ret	
<Block for 0x4001df, 5 bytes>
0x4001df:	call	0x500018
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	edi, 1
0x4001be:	call	0x500020
