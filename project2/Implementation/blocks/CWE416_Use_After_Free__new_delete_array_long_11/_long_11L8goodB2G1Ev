<Block for 0x400093, 25 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0x10
0x40009f:	mov	qword ptr [rbp - 8], 0
0x4000a7:	call	0x500000
<Block for 0x4000ac, 9 bytes>
0x4000ac:	test	eax, eax
0x4000ae:	setne	al
0x4000b1:	test	al, al
0x4000b3:	je	0x400106
<Block for 0x400106, 5 bytes>
0x400106:	call	0x500020
<Block for 0x4000b5, 10 bytes>
0x4000b5:	mov	edi, 0x320
0x4000ba:	call	0x500008
<Block for 0x40010b, 9 bytes>
0x40010b:	test	eax, eax
0x40010d:	setne	al
0x400110:	test	al, al
0x400112:	je	0x400120
<Block for 0x4000bf, 19 bytes>
0x4000bf:	mov	qword ptr [rbp - 8], rax
0x4000c3:	mov	qword ptr [rbp - 0x10], 0
0x4000cb:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d0:	ja	0x4000f3
<Block for 0x400120, 3 bytes>
0x400120:	nop	
0x400121:	leave	
0x400122:	ret	
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0x1b2]
0x40011b:	call	0x500028
<Block for 0x4000d2, 33 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x10]
0x4000d6:	lea	rdx, [rax*8]
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	add	rax, rdx
0x4000e5:	mov	qword ptr [rax], 5
0x4000ec:	add	qword ptr [rbp - 0x10], 1
0x4000f1:	jmp	0x4000cb
<Block for 0x4000f3, 7 bytes>
0x4000f3:	cmp	qword ptr [rbp - 8], 0
0x4000f8:	je	0x400106
<Block for 0x4000cb, 7 bytes>
0x4000cb:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d0:	ja	0x4000f3
<Block for 0x4000fa, 12 bytes>
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500010
