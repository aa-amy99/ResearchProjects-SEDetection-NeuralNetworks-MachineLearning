<Block for 0x400000, 87 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x38]
0x40001f:	mov	qword ptr [rbp - 0x28], rax
0x400023:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40002a:	mov	qword ptr [rbp - 0x16], 0
0x400032:	mov	dword ptr [rbp - 0xe], 0
0x400039:	mov	word ptr [rbp - 0xa], 0
0x40003f:	mov	rdx, qword ptr [rip + 0xfffba]
0x400046:	lea	rax, [rbp - 0x16]
0x40004a:	mov	esi, 0xe
0x40004f:	mov	rdi, rax
0x400052:	call	0x500008
<Block for 0x400057, 10 bytes>
0x400057:	test	rax, rax
0x40005a:	setne	al
0x40005d:	test	al, al
0x40005f:	je	0x400072
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0x16a]
0x400079:	call	0x500018
<Block for 0x400061, 12 bytes>
0x400061:	lea	rax, [rbp - 0x16]
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x40007e, 26 bytes>
0x40007e:	mov	rax, qword ptr [rbp - 0x28]
0x400082:	mov	eax, dword ptr [rax]
0x400084:	mov	dword ptr [rbp - 0x34], eax
0x400087:	mov	eax, dword ptr [rbp - 0x34]
0x40008a:	cdqe	
0x40008c:	shl	rax, 2
0x400090:	mov	rdi, rax
0x400093:	call	0x500020
<Block for 0x40006d, 5 bytes>
0x40006d:	mov	dword ptr [rbp - 0x38], eax
0x400070:	jmp	0x40007e
<Block for 0x400098, 11 bytes>
0x400098:	mov	qword ptr [rbp - 0x20], rax
0x40009c:	cmp	qword ptr [rbp - 0x20], 0
0x4000a1:	jne	0x4000ad
<Block for 0x4000a3, 10 bytes>
0x4000a3:	mov	edi, 0xffffffff
0x4000a8:	call	0x500028
<Block for 0x4000ad, 19 bytes>
0x4000ad:	mov	qword ptr [rbp - 0x30], 0
0x4000b5:	mov	eax, dword ptr [rbp - 0x34]
0x4000b8:	cdqe	
0x4000ba:	cmp	qword ptr [rbp - 0x30], rax
0x4000be:	jae	0x4000e0
<Block for 0x4000c0, 32 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x30]
0x4000c4:	lea	rdx, [rax*4]
0x4000cc:	mov	rax, qword ptr [rbp - 0x20]
0x4000d0:	add	rax, rdx
0x4000d3:	mov	dword ptr [rax], 0
0x4000d9:	add	qword ptr [rbp - 0x30], 1
0x4000de:	jmp	0x4000b5
<Block for 0x4000e0, 13 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 0x20]
0x4000e4:	mov	eax, dword ptr [rax]
0x4000e6:	mov	edi, eax
0x4000e8:	call	0x500030
<Block for 0x4000b5, 11 bytes>
0x4000b5:	mov	eax, dword ptr [rbp - 0x34]
0x4000b8:	cdqe	
0x4000ba:	cmp	qword ptr [rbp - 0x30], rax
0x4000be:	jae	0x4000e0
<Block for 0x4000ed, 12 bytes>
0x4000ed:	mov	rax, qword ptr [rbp - 0x20]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500038
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500040
