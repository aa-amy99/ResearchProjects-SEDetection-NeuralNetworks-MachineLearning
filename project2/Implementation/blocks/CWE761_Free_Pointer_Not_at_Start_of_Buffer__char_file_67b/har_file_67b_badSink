<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	rax, qword ptr [rbp - 0x18]
0x400014:	mov	qword ptr [rbp - 8], rax
0x400018:	jmp	0x400038
<Block for 0x400038, 11 bytes>
0x400038:	mov	rax, qword ptr [rbp - 8]
0x40003c:	movzx	eax, byte ptr [rax]
0x40003f:	test	al, al
0x400041:	jne	0x40001a
<Block for 0x400043, 12 bytes>
0x400043:	mov	rax, qword ptr [rbp - 8]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40001a, 11 bytes>
0x40001a:	mov	rax, qword ptr [rbp - 8]
0x40001e:	movzx	eax, byte ptr [rax]
0x400021:	cmp	al, 0x53
0x400023:	jne	0x400033
<Block for 0x40004f, 3 bytes>
0x40004f:	nop	
0x400050:	leave	
0x400051:	ret	
<Block for 0x400025, 12 bytes>
0x400025:	lea	rdi, [rip + 0x8e]
0x40002c:	call	0x500000
<Block for 0x400033, 16 bytes>
0x400033:	add	qword ptr [rbp - 8], 1
0x400038:	mov	rax, qword ptr [rbp - 8]
0x40003c:	movzx	eax, byte ptr [rax]
0x40003f:	test	al, al
0x400041:	jne	0x40001a
<Block for 0x400031, 2 bytes>
0x400031:	jmp	0x400043
