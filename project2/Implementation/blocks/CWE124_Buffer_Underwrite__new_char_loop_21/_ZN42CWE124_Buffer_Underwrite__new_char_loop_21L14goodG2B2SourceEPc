<Block for 0x40022c, 26 bytes>
0x40022c:	endbr64	
0x400230:	push	rbp
0x400231:	mov	rbp, rsp
0x400234:	sub	rsp, 0x20
0x400238:	mov	qword ptr [rbp - 0x18], rdi
0x40023c:	mov	eax, dword ptr [rip + 0x116]
0x400242:	test	eax, eax
0x400244:	je	0x40027d
<Block for 0x40027d, 6 bytes>
0x40027d:	mov	rax, qword ptr [rbp - 0x18]
0x400281:	leave	
0x400282:	ret	
<Block for 0x400246, 10 bytes>
0x400246:	mov	edi, 0x64
0x40024b:	call	0x500000
<Block for 0x400250, 26 bytes>
0x400250:	mov	qword ptr [rbp - 8], rax
0x400254:	mov	rax, qword ptr [rbp - 8]
0x400258:	mov	edx, 0x63
0x40025d:	mov	esi, 0x41
0x400262:	mov	rdi, rax
0x400265:	call	0x500008
<Block for 0x40026a, 25 bytes>
0x40026a:	mov	rax, qword ptr [rbp - 8]
0x40026e:	add	rax, 0x63
0x400272:	mov	byte ptr [rax], 0
0x400275:	mov	rax, qword ptr [rbp - 8]
0x400279:	mov	qword ptr [rbp - 0x18], rax
0x40027d:	mov	rax, qword ptr [rbp - 0x18]
0x400281:	leave	
0x400282:	ret	
