<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	call	0x500000
<Block for 0x40002e, 9 bytes>
0x40002e:	test	eax, eax
0x400030:	setne	al
0x400033:	test	al, al
0x400035:	je	0x400077
<Block for 0x400077, 10 bytes>
0x400077:	mov	edi, 0x64
0x40007c:	call	0x500008
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500008
<Block for 0x400081, 26 bytes>
0x400081:	mov	qword ptr [rbp - 0x80], rax
0x400085:	mov	rax, qword ptr [rbp - 0x80]
0x400089:	mov	edx, 0x63
0x40008e:	mov	esi, 0x41
0x400093:	mov	rdi, rax
0x400096:	call	0x500010
<Block for 0x400041, 26 bytes>
0x400041:	mov	qword ptr [rbp - 0x78], rax
0x400045:	mov	rax, qword ptr [rbp - 0x78]
0x400049:	mov	edx, 0x63
0x40004e:	mov	esi, 0x41
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40009b, 44 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x80]
0x40009f:	add	rax, 0x63
0x4000a3:	mov	byte ptr [rax], 0
0x4000a6:	mov	rax, qword ptr [rbp - 0x80]
0x4000aa:	mov	qword ptr [rbp - 0x88], rax
0x4000b1:	lea	rax, [rbp - 0x70]
0x4000b5:	mov	edx, 0x63
0x4000ba:	mov	esi, 0x43
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
<Block for 0x40005b, 28 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 0x78]
0x40005f:	add	rax, 0x63
0x400063:	mov	byte ptr [rax], 0
0x400066:	mov	rax, qword ptr [rbp - 0x78]
0x40006a:	sub	rax, 8
0x40006e:	mov	qword ptr [rbp - 0x88], rax
0x400075:	jmp	0x4000b1
<Block for 0x4000c7, 31 bytes>
0x4000c7:	mov	byte ptr [rbp - 0xd], 0
0x4000cb:	lea	rcx, [rbp - 0x70]
0x4000cf:	mov	rax, qword ptr [rbp - 0x88]
0x4000d6:	mov	edx, 0x64
0x4000db:	mov	rsi, rcx
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500018
<Block for 0x4000b1, 22 bytes>
0x4000b1:	lea	rax, [rbp - 0x70]
0x4000b5:	mov	edx, 0x63
0x4000ba:	mov	esi, 0x43
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
<Block for 0x4000e6, 29 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 0x88]
0x4000ed:	add	rax, 0x63
0x4000f1:	mov	byte ptr [rax], 0
0x4000f4:	mov	rax, qword ptr [rbp - 0x88]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500020
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500028
