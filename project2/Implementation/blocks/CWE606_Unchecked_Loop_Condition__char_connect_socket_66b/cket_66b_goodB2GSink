<Block for 0x40011a, 71 bytes>
0x40011a:	endbr64	
0x40011e:	push	rbp
0x40011f:	mov	rbp, rsp
0x400122:	sub	rsp, 0x30
0x400126:	mov	qword ptr [rbp - 0x28], rdi
0x40012a:	mov	rax, qword ptr fs:[0x28]
0x400133:	mov	qword ptr [rbp - 8], rax
0x400137:	xor	eax, eax
0x400139:	mov	rax, qword ptr [rbp - 0x28]
0x40013d:	mov	rax, qword ptr [rax + 0x10]
0x400141:	mov	qword ptr [rbp - 0x10], rax
0x400145:	lea	rdx, [rbp - 0x1c]
0x400149:	mov	rax, qword ptr [rbp - 0x10]
0x40014d:	lea	rsi, [rip + 0x5d]
0x400154:	mov	rdi, rax
0x400157:	mov	eax, 0
0x40015c:	call	0x500000
<Block for 0x400161, 5 bytes>
0x400161:	cmp	eax, 1
0x400164:	jne	0x40019a
<Block for 0x400166, 10 bytes>
0x400166:	mov	eax, dword ptr [rbp - 0x1c]
0x400169:	cmp	eax, 0x270f
0x40016e:	jg	0x40019a
<Block for 0x40019a, 16 bytes>
0x40019a:	nop	
0x40019b:	mov	rax, qword ptr [rbp - 8]
0x40019f:	xor	rax, qword ptr fs:[0x28]
0x4001a8:	je	0x4001af
<Block for 0x400170, 16 bytes>
0x400170:	mov	dword ptr [rbp - 0x14], 0
0x400177:	mov	dword ptr [rbp - 0x18], 0
0x40017e:	jmp	0x400188
<Block for 0x4001af, 2 bytes>
0x4001af:	leave	
0x4001b0:	ret	
<Block for 0x4001aa, 5 bytes>
0x4001aa:	call	0x500010
<Block for 0x400188, 8 bytes>
0x400188:	mov	eax, dword ptr [rbp - 0x1c]
0x40018b:	cmp	dword ptr [rbp - 0x18], eax
0x40018e:	jl	0x400180
<Block for 0x400180, 16 bytes>
0x400180:	add	dword ptr [rbp - 0x14], 1
0x400184:	add	dword ptr [rbp - 0x18], 1
0x400188:	mov	eax, dword ptr [rbp - 0x1c]
0x40018b:	cmp	dword ptr [rbp - 0x18], eax
0x40018e:	jl	0x400180
<Block for 0x400190, 10 bytes>
0x400190:	mov	eax, dword ptr [rbp - 0x14]
0x400193:	mov	edi, eax
0x400195:	call	0x500008
