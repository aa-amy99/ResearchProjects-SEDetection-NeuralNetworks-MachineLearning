<Block for 0x400283, 82 bytes>
0x400283:	endbr64	
0x400287:	push	rbp
0x400288:	mov	rbp, rsp
0x40028b:	sub	rsp, 0x120
0x400292:	mov	rax, qword ptr fs:[0x28]
0x40029b:	mov	qword ptr [rbp - 8], rax
0x40029f:	xor	eax, eax
0x4002a1:	movabs	rax, 0x3d48544150
0x4002ab:	mov	edx, 0
0x4002b0:	mov	qword ptr [rbp - 0x110], rax
0x4002b7:	mov	qword ptr [rbp - 0x108], rdx
0x4002be:	lea	rdx, [rbp - 0x100]
0x4002c5:	mov	eax, 0
0x4002ca:	mov	ecx, 0x1d
0x4002cf:	mov	rdi, rdx
0x4002d2:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002d5, 51 bytes>
0x4002d5:	mov	rdx, rdi
0x4002d8:	mov	word ptr [rdx], ax
0x4002db:	add	rdx, 2
0x4002df:	lea	rax, [rbp - 0x110]
0x4002e6:	mov	qword ptr [rbp - 0x118], rax
0x4002ed:	mov	rax, qword ptr [rbp - 0x118]
0x4002f4:	mov	rcx, -1
0x4002fb:	mov	rdx, rax
0x4002fe:	mov	eax, 0
0x400303:	mov	rdi, rdx
0x400306:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002d2, 3 bytes>
0x4002d2:	rep stosq	qword ptr [rdi], rax
<Block for 0x400308, 54 bytes>
0x400308:	mov	rax, rcx
0x40030b:	not	rax
0x40030e:	lea	rdx, [rax - 1]
0x400312:	mov	rax, qword ptr [rbp - 0x118]
0x400319:	add	rax, rdx
0x40031c:	mov	dword ptr [rax], 0x6e69622f
0x400322:	mov	byte ptr [rax + 4], 0
0x400326:	mov	rax, qword ptr [rbp - 0x118]
0x40032d:	mov	qword ptr [rip + 0x44], rax
0x400334:	mov	eax, 0
0x400339:	call	0x40025d
<Block for 0x400306, 2 bytes>
0x400306:	repne scasb	al, byte ptr [rdi]
<Block for 0x40033e, 16 bytes>
0x40033e:	nop	
0x40033f:	mov	rax, qword ptr [rbp - 8]
0x400343:	xor	rax, qword ptr fs:[0x28]
0x40034c:	je	0x400353
<Block for 0x400353, 2 bytes>
0x400353:	leave	
0x400354:	ret	
<Block for 0x40034e, 5 bytes>
0x40034e:	call	0x500050
