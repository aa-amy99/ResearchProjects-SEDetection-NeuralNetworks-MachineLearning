<Block for 0x40022a, 37 bytes>
0x40022a:	endbr64	
0x40022e:	push	rbp
0x40022f:	mov	rbp, rsp
0x400232:	sub	rsp, 0x20
0x400236:	mov	rax, qword ptr fs:[0x28]
0x40023f:	mov	qword ptr [rbp - 8], rax
0x400243:	xor	eax, eax
0x400245:	mov	eax, 0
0x40024a:	call	0x500000
<Block for 0x40024f, 8 bytes>
0x40024f:	test	eax, eax
0x400251:	je	0x400341
<Block for 0x400341, 16 bytes>
0x400341:	nop	
0x400342:	mov	rax, qword ptr [rbp - 8]
0x400346:	xor	rax, qword ptr fs:[0x28]
0x40034f:	je	0x400356
<Block for 0x400257, 54 bytes>
0x400257:	mov	eax, 0x10
0x40025c:	sub	rax, 1
0x400260:	add	rax, 0x10
0x400264:	mov	esi, 0x10
0x400269:	mov	edx, 0
0x40026e:	div	rsi
0x400271:	imul	rax, rax, 0x10
0x400275:	mov	rdx, rax
0x400278:	and	rdx, 0xfffffffffffff000
0x40027f:	mov	rcx, rsp
0x400282:	sub	rcx, rdx
0x400285:	mov	rdx, rcx
0x400288:	cmp	rsp, rdx
0x40028b:	je	0x40029f
<Block for 0x400356, 2 bytes>
0x400356:	leave	
0x400357:	ret	
<Block for 0x400351, 5 bytes>
0x400351:	call	0x500010
<Block for 0x40029f, 26 bytes>
0x40029f:	mov	rdx, rax
0x4002a2:	and	edx, 0xfff
0x4002a8:	sub	rsp, rdx
0x4002ab:	mov	rdx, rax
0x4002ae:	and	edx, 0xfff
0x4002b4:	test	rdx, rdx
0x4002b7:	je	0x4002c9
<Block for 0x40028d, 18 bytes>
0x40028d:	sub	rsp, 0x1000
0x400294:	or	qword ptr [rsp + 0xff8], 0
0x40029d:	jmp	0x400288
<Block for 0x4002c9, 29 bytes>
0x4002c9:	mov	rax, rsp
0x4002cc:	add	rax, 0xf
0x4002d0:	shr	rax, 4
0x4002d4:	shl	rax, 4
0x4002d8:	mov	qword ptr [rbp - 0x20], rax
0x4002dc:	mov	edi, 8
0x4002e1:	call	0x500028
<Block for 0x4002b9, 45 bytes>
0x4002b9:	and	eax, 0xfff
0x4002be:	sub	rax, 8
0x4002c2:	add	rax, rsp
0x4002c5:	or	qword ptr [rax], 0
0x4002c9:	mov	rax, rsp
0x4002cc:	add	rax, 0xf
0x4002d0:	shr	rax, 4
0x4002d4:	shl	rax, 4
0x4002d8:	mov	qword ptr [rbp - 0x20], rax
0x4002dc:	mov	edi, 8
0x4002e1:	call	0x500028
<Block for 0x400288, 5 bytes>
0x400288:	cmp	rsp, rdx
0x40028b:	je	0x40029f
<Block for 0x4002e6, 11 bytes>
0x4002e6:	mov	qword ptr [rbp - 0x18], rax
0x4002ea:	cmp	qword ptr [rbp - 0x18], 0
0x4002ef:	jne	0x4002fb
<Block for 0x4002f1, 10 bytes>
0x4002f1:	mov	edi, 0xffffffff
0x4002f6:	call	0x500030
<Block for 0x4002fb, 56 bytes>
0x4002fb:	mov	rax, qword ptr [rbp - 0x18]
0x4002ff:	mov	dword ptr [rax], 5
0x400305:	mov	rax, qword ptr [rbp - 0x18]
0x400309:	mov	dword ptr [rax + 4], 6
0x400310:	mov	rax, qword ptr [rbp - 0x20]
0x400314:	mov	rdx, qword ptr [rbp - 0x18]
0x400318:	mov	qword ptr [rax], rdx
0x40031b:	mov	rax, qword ptr [rbp - 0x20]
0x40031f:	mov	rax, qword ptr [rax]
0x400322:	mov	qword ptr [rbp - 0x10], rax
0x400326:	mov	rax, qword ptr [rbp - 0x10]
0x40032a:	mov	eax, dword ptr [rax]
0x40032c:	mov	edi, eax
0x40032e:	call	0x500008
<Block for 0x400333, 14 bytes>
0x400333:	mov	rax, qword ptr [rbp - 0x10]
0x400337:	mov	eax, dword ptr [rax + 4]
0x40033a:	mov	edi, eax
0x40033c:	call	0x500008
