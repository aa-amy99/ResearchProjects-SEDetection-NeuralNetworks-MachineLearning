<Block for 0x4000ef, 37 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0x20
0x4000fb:	mov	rax, qword ptr fs:[0x28]
0x400104:	mov	qword ptr [rbp - 8], rax
0x400108:	xor	eax, eax
0x40010a:	mov	eax, 0
0x40010f:	call	0x500018
<Block for 0x400114, 4 bytes>
0x400114:	test	eax, eax
0x400116:	je	0x400129
<Block for 0x400129, 54 bytes>
0x400129:	mov	eax, 0x10
0x40012e:	sub	rax, 1
0x400132:	add	rax, 0x10
0x400136:	mov	esi, 0x10
0x40013b:	mov	edx, 0
0x400140:	div	rsi
0x400143:	imul	rax, rax, 0x10
0x400147:	mov	rdx, rax
0x40014a:	and	rdx, 0xfffffffffffff000
0x400151:	mov	rcx, rsp
0x400154:	sub	rcx, rdx
0x400157:	mov	rdx, rcx
0x40015a:	cmp	rsp, rdx
0x40015d:	je	0x400171
<Block for 0x400118, 12 bytes>
0x400118:	lea	rdi, [rip + 0x258]
0x40011f:	call	0x500020
<Block for 0x400171, 26 bytes>
0x400171:	mov	rdx, rax
0x400174:	and	edx, 0xfff
0x40017a:	sub	rsp, rdx
0x40017d:	mov	rdx, rax
0x400180:	and	edx, 0xfff
0x400186:	test	rdx, rdx
0x400189:	je	0x40019b
<Block for 0x40015f, 18 bytes>
0x40015f:	sub	rsp, 0x1000
0x400166:	or	qword ptr [rsp + 0xff8], 0
0x40016f:	jmp	0x40015a
<Block for 0x400124, 5 bytes>
0x400124:	jmp	0x400213
<Block for 0x40019b, 29 bytes>
0x40019b:	mov	rax, rsp
0x40019e:	add	rax, 0xf
0x4001a2:	shr	rax, 4
0x4001a6:	shl	rax, 4
0x4001aa:	mov	qword ptr [rbp - 0x20], rax
0x4001ae:	mov	edi, 8
0x4001b3:	call	0x500028
<Block for 0x40018b, 45 bytes>
0x40018b:	and	eax, 0xfff
0x400190:	sub	rax, 8
0x400194:	add	rax, rsp
0x400197:	or	qword ptr [rax], 0
0x40019b:	mov	rax, rsp
0x40019e:	add	rax, 0xf
0x4001a2:	shr	rax, 4
0x4001a6:	shl	rax, 4
0x4001aa:	mov	qword ptr [rbp - 0x20], rax
0x4001ae:	mov	edi, 8
0x4001b3:	call	0x500028
<Block for 0x40015a, 5 bytes>
0x40015a:	cmp	rsp, rdx
0x40015d:	je	0x400171
<Block for 0x400213, 16 bytes>
0x400213:	nop	
0x400214:	mov	rax, qword ptr [rbp - 8]
0x400218:	xor	rax, qword ptr fs:[0x28]
0x400221:	je	0x400228
<Block for 0x4001b8, 11 bytes>
0x4001b8:	mov	qword ptr [rbp - 0x18], rax
0x4001bc:	cmp	qword ptr [rbp - 0x18], 0
0x4001c1:	jne	0x4001cd
<Block for 0x400228, 2 bytes>
0x400228:	leave	
0x400229:	ret	
<Block for 0x400223, 5 bytes>
0x400223:	call	0x500010
<Block for 0x4001c3, 10 bytes>
0x4001c3:	mov	edi, 0xffffffff
0x4001c8:	call	0x500030
<Block for 0x4001cd, 56 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x18]
0x4001d1:	mov	dword ptr [rax], 5
0x4001d7:	mov	rax, qword ptr [rbp - 0x18]
0x4001db:	mov	dword ptr [rax + 4], 6
0x4001e2:	mov	rax, qword ptr [rbp - 0x20]
0x4001e6:	mov	rdx, qword ptr [rbp - 0x18]
0x4001ea:	mov	qword ptr [rax], rdx
0x4001ed:	mov	rax, qword ptr [rbp - 0x20]
0x4001f1:	mov	rax, qword ptr [rax]
0x4001f4:	mov	qword ptr [rbp - 0x10], rax
0x4001f8:	mov	rax, qword ptr [rbp - 0x10]
0x4001fc:	mov	eax, dword ptr [rax]
0x4001fe:	mov	edi, eax
0x400200:	call	0x500008
<Block for 0x400205, 14 bytes>
0x400205:	mov	rax, qword ptr [rbp - 0x10]
0x400209:	mov	eax, dword ptr [rax + 4]
0x40020c:	mov	edi, eax
0x40020e:	call	0x500008
