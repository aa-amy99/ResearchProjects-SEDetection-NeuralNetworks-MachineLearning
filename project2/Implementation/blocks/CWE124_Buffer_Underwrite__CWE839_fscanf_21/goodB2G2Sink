<Block for 0x400244, 40 bytes>
0x400244:	endbr64	
0x400248:	push	rbp
0x400249:	mov	rbp, rsp
0x40024c:	sub	rsp, 0x50
0x400250:	mov	dword ptr [rbp - 0x44], edi
0x400253:	mov	rax, qword ptr fs:[0x28]
0x40025c:	mov	qword ptr [rbp - 8], rax
0x400260:	xor	eax, eax
0x400262:	mov	eax, dword ptr [rip + 0x208]
0x400268:	test	eax, eax
0x40026a:	je	0x4002e0
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x40026c, 46 bytes>
0x40026c:	mov	qword ptr [rbp - 0x30], 0
0x400274:	mov	qword ptr [rbp - 0x28], 0
0x40027c:	mov	qword ptr [rbp - 0x20], 0
0x400284:	mov	qword ptr [rbp - 0x18], 0
0x40028c:	mov	qword ptr [rbp - 0x10], 0
0x400294:	cmp	dword ptr [rbp - 0x44], 0
0x400298:	js	0x4002d2
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500010
<Block for 0x4002d2, 12 bytes>
0x4002d2:	lea	rdi, [rip + 0x1d7]
0x4002d9:	call	0x500008
<Block for 0x40029a, 6 bytes>
0x40029a:	cmp	dword ptr [rbp - 0x44], 9
0x40029e:	jg	0x4002d2
<Block for 0x4002de, 2 bytes>
0x4002de:	jmp	0x4002e0
<Block for 0x4002a0, 22 bytes>
0x4002a0:	mov	eax, dword ptr [rbp - 0x44]
0x4002a3:	cdqe	
0x4002a5:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002ad:	mov	dword ptr [rbp - 0x34], 0
0x4002b4:	jmp	0x4002ca
<Block for 0x4002ca, 6 bytes>
0x4002ca:	cmp	dword ptr [rbp - 0x34], 9
0x4002ce:	jle	0x4002b6
<Block for 0x4002b6, 16 bytes>
0x4002b6:	mov	eax, dword ptr [rbp - 0x34]
0x4002b9:	cdqe	
0x4002bb:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002bf:	mov	edi, eax
0x4002c1:	call	0x500000
<Block for 0x4002d0, 2 bytes>
0x4002d0:	jmp	0x4002e0
<Block for 0x4002c6, 10 bytes>
0x4002c6:	add	dword ptr [rbp - 0x34], 1
0x4002ca:	cmp	dword ptr [rbp - 0x34], 9
0x4002ce:	jle	0x4002b6
