<Block for 0x40029c, 82 bytes>
0x40029c:	endbr64	
0x4002a0:	push	rbp
0x4002a1:	mov	rbp, rsp
0x4002a4:	sub	rsp, 0x40
0x4002a8:	mov	rax, qword ptr fs:[0x28]
0x4002b1:	mov	qword ptr [rbp - 8], rax
0x4002b5:	xor	eax, eax
0x4002b7:	mov	eax, dword ptr [rip + 0x1d3]
0x4002bd:	mov	dword ptr [rbp - 0x34], eax
0x4002c0:	mov	qword ptr [rbp - 0x30], 0
0x4002c8:	mov	qword ptr [rbp - 0x28], 0
0x4002d0:	mov	qword ptr [rbp - 0x20], 0
0x4002d8:	mov	qword ptr [rbp - 0x18], 0
0x4002e0:	mov	qword ptr [rbp - 0x10], 0
0x4002e8:	cmp	dword ptr [rbp - 0x34], 0
0x4002ec:	js	0x400326
<Block for 0x400326, 12 bytes>
0x400326:	lea	rdi, [rip + 0x19b]
0x40032d:	call	0x500008
<Block for 0x4002ee, 6 bytes>
0x4002ee:	cmp	dword ptr [rbp - 0x34], 9
0x4002f2:	jg	0x400326
<Block for 0x400332, 16 bytes>
0x400332:	nop	
0x400333:	mov	rax, qword ptr [rbp - 8]
0x400337:	xor	rax, qword ptr fs:[0x28]
0x400340:	je	0x400347
<Block for 0x4002f4, 22 bytes>
0x4002f4:	mov	eax, dword ptr [rbp - 0x34]
0x4002f7:	cdqe	
0x4002f9:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400301:	mov	dword ptr [rbp - 0x38], 0
0x400308:	jmp	0x40031e
<Block for 0x400347, 2 bytes>
0x400347:	leave	
0x400348:	ret	
<Block for 0x400342, 5 bytes>
0x400342:	call	0x500010
<Block for 0x40031e, 6 bytes>
0x40031e:	cmp	dword ptr [rbp - 0x38], 9
0x400322:	jle	0x40030a
<Block for 0x40030a, 16 bytes>
0x40030a:	mov	eax, dword ptr [rbp - 0x38]
0x40030d:	cdqe	
0x40030f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400313:	mov	edi, eax
0x400315:	call	0x500000
<Block for 0x400324, 2 bytes>
0x400324:	jmp	0x400332
<Block for 0x40031a, 10 bytes>
0x40031a:	add	dword ptr [rbp - 0x38], 1
0x40031e:	cmp	dword ptr [rbp - 0x38], 9
0x400322:	jle	0x40030a
