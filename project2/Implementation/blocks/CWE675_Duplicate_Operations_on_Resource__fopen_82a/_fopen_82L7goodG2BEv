<Block for 0x400089, 40 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	push	rbx
0x400092:	sub	rsp, 0x18
0x400096:	mov	qword ptr [rbp - 0x20], 0
0x40009e:	lea	rsi, [rip + 0x14a]
0x4000a5:	lea	rdi, [rip + 0x15a]
0x4000ac:	call	0x500000
<Block for 0x4000b1, 14 bytes>
0x4000b1:	mov	qword ptr [rbp - 0x20], rax
0x4000b5:	mov	edi, 8
0x4000ba:	call	0x500010
<Block for 0x4000bf, 11 bytes>
0x4000bf:	mov	rbx, rax
0x4000c2:	mov	rdi, rbx
0x4000c5:	call	0x40021c
<Block for 0x4000ca, 30 bytes>
0x4000ca:	mov	qword ptr [rbp - 0x18], rbx
0x4000ce:	mov	rax, qword ptr [rbp - 0x18]
0x4000d2:	mov	rax, qword ptr [rax]
0x4000d5:	mov	rcx, qword ptr [rax]
0x4000d8:	mov	rdx, qword ptr [rbp - 0x20]
0x4000dc:	mov	rax, qword ptr [rbp - 0x18]
0x4000e0:	mov	rsi, rdx
0x4000e3:	mov	rdi, rax
0x4000e6:	call	rcx
<Block for 0x4000e8, 9 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x18]
0x4000ec:	test	rax, rax
0x4000ef:	je	0x4000fe
<Block for 0x4000fe, 8 bytes>
0x4000fe:	nop	
0x4000ff:	add	rsp, 0x18
0x400103:	pop	rbx
0x400104:	pop	rbp
0x400105:	ret	
<Block for 0x4000f1, 13 bytes>
0x4000f1:	mov	esi, 8
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500018
