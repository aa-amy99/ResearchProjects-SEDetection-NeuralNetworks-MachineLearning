<Block for 0x400000, 17 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	call	0x500000
<Block for 0x400011, 9 bytes>
0x400011:	test	eax, eax
0x400013:	setne	al
0x400016:	test	al, al
0x400018:	je	0x400058
<Block for 0x400058, 10 bytes>
0x400058:	mov	edi, 4
0x40005d:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x400062, 24 bytes>
0x400062:	mov	qword ptr [rbp - 0x28], rax
0x400066:	mov	rax, qword ptr [rbp - 0x28]
0x40006a:	mov	dword ptr [rax], 5
0x400070:	mov	edi, 8
0x400075:	call	0x500008
<Block for 0x400024, 24 bytes>
0x400024:	mov	qword ptr [rbp - 0x10], rax
0x400028:	mov	rax, qword ptr [rbp - 0x10]
0x40002c:	mov	rax, qword ptr [rax]
0x40002f:	mov	qword ptr [rbp - 8], rax
0x400033:	mov	rax, qword ptr [rbp - 0x10]
0x400037:	test	rax, rax
0x40003a:	je	0x400049
<Block for 0x40007a, 39 bytes>
0x40007a:	mov	qword ptr [rbp - 0x20], rax
0x40007e:	mov	rax, qword ptr [rbp - 0x20]
0x400082:	mov	rdx, qword ptr [rbp - 0x28]
0x400086:	mov	qword ptr [rax], rdx
0x400089:	mov	rax, qword ptr [rbp - 0x20]
0x40008d:	mov	rax, qword ptr [rax]
0x400090:	mov	qword ptr [rbp - 0x18], rax
0x400094:	mov	rax, qword ptr [rbp - 0x18]
0x400098:	mov	eax, dword ptr [rax]
0x40009a:	mov	edi, eax
0x40009c:	call	0x500018
<Block for 0x400049, 13 bytes>
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	mov	eax, dword ptr [rax]
0x40004f:	mov	edi, eax
0x400051:	call	0x500018
<Block for 0x40003c, 13 bytes>
0x40003c:	mov	esi, 8
0x400041:	mov	rdi, rax
0x400044:	call	0x500010
<Block for 0x4000a1, 9 bytes>
0x4000a1:	mov	rax, qword ptr [rbp - 0x20]
0x4000a5:	test	rax, rax
0x4000a8:	je	0x4000b7
<Block for 0x400056, 2 bytes>
0x400056:	jmp	0x4000b7
<Block for 0x4000b7, 3 bytes>
0x4000b7:	nop	
0x4000b8:	leave	
0x4000b9:	ret	
<Block for 0x4000aa, 13 bytes>
0x4000aa:	mov	esi, 8
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500010
