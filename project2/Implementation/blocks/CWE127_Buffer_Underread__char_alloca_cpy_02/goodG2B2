<Block for 0x400272, 84 bytes>
0x400272:	endbr64	
0x400276:	push	rbp
0x400277:	mov	rbp, rsp
0x40027a:	sub	rsp, 0xe0
0x400281:	mov	rax, qword ptr fs:[0x28]
0x40028a:	mov	qword ptr [rbp - 8], rax
0x40028e:	xor	eax, eax
0x400290:	mov	eax, 0x10
0x400295:	sub	rax, 1
0x400299:	add	rax, 0x6c
0x40029d:	mov	ecx, 0x10
0x4002a2:	mov	edx, 0
0x4002a7:	div	rcx
0x4002aa:	imul	rax, rax, 0x10
0x4002ae:	mov	rdx, rax
0x4002b1:	and	rdx, 0xfffffffffffff000
0x4002b8:	mov	rcx, rsp
0x4002bb:	sub	rcx, rdx
0x4002be:	mov	rdx, rcx
0x4002c1:	cmp	rsp, rdx
0x4002c4:	je	0x4002d8
<Block for 0x4002d8, 26 bytes>
0x4002d8:	mov	rdx, rax
0x4002db:	and	edx, 0xfff
0x4002e1:	sub	rsp, rdx
0x4002e4:	mov	rdx, rax
0x4002e7:	and	edx, 0xfff
0x4002ed:	test	rdx, rdx
0x4002f0:	je	0x400302
<Block for 0x4002c6, 18 bytes>
0x4002c6:	sub	rsp, 0x1000
0x4002cd:	or	qword ptr [rsp + 0xff8], 0
0x4002d6:	jmp	0x4002c1
<Block for 0x400302, 47 bytes>
0x400302:	mov	rax, rsp
0x400305:	add	rax, 0xf
0x400309:	shr	rax, 4
0x40030d:	shl	rax, 4
0x400311:	mov	qword ptr [rbp - 0xe0], rax
0x400318:	mov	rax, qword ptr [rbp - 0xe0]
0x40031f:	mov	edx, 0x63
0x400324:	mov	esi, 0x41
0x400329:	mov	rdi, rax
0x40032c:	call	0x500000
<Block for 0x4002f2, 63 bytes>
0x4002f2:	and	eax, 0xfff
0x4002f7:	sub	rax, 8
0x4002fb:	add	rax, rsp
0x4002fe:	or	qword ptr [rax], 0
0x400302:	mov	rax, rsp
0x400305:	add	rax, 0xf
0x400309:	shr	rax, 4
0x40030d:	shl	rax, 4
0x400311:	mov	qword ptr [rbp - 0xe0], rax
0x400318:	mov	rax, qword ptr [rbp - 0xe0]
0x40031f:	mov	edx, 0x63
0x400324:	mov	esi, 0x41
0x400329:	mov	rdi, rax
0x40032c:	call	0x500000
<Block for 0x4002c1, 5 bytes>
0x4002c1:	cmp	rsp, rdx
0x4002c4:	je	0x4002d8
<Block for 0x400331, 53 bytes>
0x400331:	mov	rax, qword ptr [rbp - 0xe0]
0x400338:	add	rax, 0x63
0x40033c:	mov	byte ptr [rax], 0
0x40033f:	mov	rax, qword ptr [rbp - 0xe0]
0x400346:	mov	qword ptr [rbp - 0xd8], rax
0x40034d:	lea	rax, [rbp - 0xd0]
0x400354:	mov	edx, 0xc7
0x400359:	mov	esi, 0x43
0x40035e:	mov	rdi, rax
0x400361:	call	0x500000
<Block for 0x400366, 29 bytes>
0x400366:	mov	byte ptr [rbp - 9], 0
0x40036a:	mov	rdx, qword ptr [rbp - 0xd8]
0x400371:	lea	rax, [rbp - 0xd0]
0x400378:	mov	rsi, rdx
0x40037b:	mov	rdi, rax
0x40037e:	call	0x500008
<Block for 0x400383, 15 bytes>
0x400383:	lea	rax, [rbp - 0xd0]
0x40038a:	mov	rdi, rax
0x40038d:	call	0x500010
<Block for 0x400392, 16 bytes>
0x400392:	nop	
0x400393:	mov	rax, qword ptr [rbp - 8]
0x400397:	xor	rax, qword ptr fs:[0x28]
0x4003a0:	je	0x4003a7
<Block for 0x4003a7, 2 bytes>
0x4003a7:	leave	
0x4003a8:	ret	
<Block for 0x4003a2, 5 bytes>
0x4003a2:	call	0x500018
