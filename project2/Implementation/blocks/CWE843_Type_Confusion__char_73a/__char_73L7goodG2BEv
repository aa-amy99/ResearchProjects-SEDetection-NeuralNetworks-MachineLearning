<Block for 0x4000fd, 40 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	push	rbx
0x400106:	sub	rsp, 0x58
0x40010a:	mov	rax, qword ptr fs:[0x28]
0x400113:	mov	qword ptr [rbp - 0x18], rax
0x400117:	xor	eax, eax
0x400119:	lea	rax, [rbp - 0x50]
0x40011d:	mov	rdi, rax
0x400120:	call	0x4002ba
<Block for 0x400125, 42 bytes>
0x400125:	mov	qword ptr [rbp - 0x58], 0
0x40012d:	mov	dword ptr [rbp - 0x30], 8
0x400134:	lea	rax, [rbp - 0x30]
0x400138:	mov	qword ptr [rbp - 0x58], rax
0x40013c:	lea	rdx, [rbp - 0x58]
0x400140:	lea	rax, [rbp - 0x50]
0x400144:	mov	rsi, rdx
0x400147:	mov	rdi, rax
0x40014a:	call	0x4003b0
<Block for 0x40014f, 19 bytes>
0x40014f:	lea	rdx, [rbp - 0x58]
0x400153:	lea	rax, [rbp - 0x50]
0x400157:	mov	rsi, rdx
0x40015a:	mov	rdi, rax
0x40015d:	call	0x4003b0
<Block for 0x400162, 19 bytes>
0x400162:	lea	rdx, [rbp - 0x58]
0x400166:	lea	rax, [rbp - 0x50]
0x40016a:	mov	rsi, rdx
0x40016d:	mov	rdi, rax
0x400170:	call	0x4003b0
<Block for 0x400175, 19 bytes>
0x400175:	lea	rdx, [rbp - 0x50]
0x400179:	lea	rax, [rbp - 0x30]
0x40017d:	mov	rsi, rdx
0x400180:	mov	rdi, rax
0x400183:	call	0x4003ea
<Block for 0x400188, 12 bytes>
0x400188:	lea	rax, [rbp - 0x30]
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500018
<Block for 0x400194, 12 bytes>
0x400194:	lea	rax, [rbp - 0x30]
0x400198:	mov	rdi, rax
0x40019b:	call	0x4002da
<Block for 0x4001a0, 12 bytes>
0x4001a0:	lea	rax, [rbp - 0x50]
0x4001a4:	mov	rdi, rax
0x4001a7:	call	0x4002da
<Block for 0x4001ac, 16 bytes>
0x4001ac:	nop	
0x4001ad:	mov	rax, qword ptr [rbp - 0x18]
0x4001b1:	xor	rax, qword ptr fs:[0x28]
0x4001ba:	je	0x4001f6
<Block for 0x4001f6, 7 bytes>
0x4001f6:	add	rsp, 0x58
0x4001fa:	pop	rbx
0x4001fb:	pop	rbp
0x4001fc:	ret	
<Block for 0x4001bc, 2 bytes>
0x4001bc:	jmp	0x4001f1
<Block for 0x4001f1, 5 bytes>
0x4001f1:	call	0x500010
