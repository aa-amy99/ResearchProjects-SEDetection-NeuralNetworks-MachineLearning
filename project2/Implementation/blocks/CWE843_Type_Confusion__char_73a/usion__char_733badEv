<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002ba
<Block for 0x400028, 39 bytes>
0x400028:	mov	qword ptr [rbp - 0x58], 0
0x400030:	mov	byte ptr [rbp - 0x30], 0x61
0x400034:	lea	rax, [rbp - 0x30]
0x400038:	mov	qword ptr [rbp - 0x58], rax
0x40003c:	lea	rdx, [rbp - 0x58]
0x400040:	lea	rax, [rbp - 0x50]
0x400044:	mov	rsi, rdx
0x400047:	mov	rdi, rax
0x40004a:	call	0x4003b0
<Block for 0x40004f, 19 bytes>
0x40004f:	lea	rdx, [rbp - 0x58]
0x400053:	lea	rax, [rbp - 0x50]
0x400057:	mov	rsi, rdx
0x40005a:	mov	rdi, rax
0x40005d:	call	0x4003b0
<Block for 0x400062, 19 bytes>
0x400062:	lea	rdx, [rbp - 0x58]
0x400066:	lea	rax, [rbp - 0x50]
0x40006a:	mov	rsi, rdx
0x40006d:	mov	rdi, rax
0x400070:	call	0x4003b0
<Block for 0x400075, 19 bytes>
0x400075:	lea	rdx, [rbp - 0x50]
0x400079:	lea	rax, [rbp - 0x30]
0x40007d:	mov	rsi, rdx
0x400080:	mov	rdi, rax
0x400083:	call	0x4003ea
<Block for 0x400088, 12 bytes>
0x400088:	lea	rax, [rbp - 0x30]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500000
<Block for 0x400094, 12 bytes>
0x400094:	lea	rax, [rbp - 0x30]
0x400098:	mov	rdi, rax
0x40009b:	call	0x4002da
<Block for 0x4000a0, 12 bytes>
0x4000a0:	lea	rax, [rbp - 0x50]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x4002da
<Block for 0x4000ac, 16 bytes>
0x4000ac:	nop	
0x4000ad:	mov	rax, qword ptr [rbp - 0x18]
0x4000b1:	xor	rax, qword ptr fs:[0x28]
0x4000ba:	je	0x4000f6
<Block for 0x4000f6, 7 bytes>
0x4000f6:	add	rsp, 0x58
0x4000fa:	pop	rbx
0x4000fb:	pop	rbp
0x4000fc:	ret	
<Block for 0x4000bc, 2 bytes>
0x4000bc:	jmp	0x4000f1
<Block for 0x4000f1, 5 bytes>
0x4000f1:	call	0x500010
