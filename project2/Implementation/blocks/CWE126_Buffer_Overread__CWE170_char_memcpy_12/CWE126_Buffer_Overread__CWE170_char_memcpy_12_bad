<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0
0x400023:	call	0x500000
<Block for 0x400028, 4 bytes>
0x400028:	test	eax, eax
0x40002a:	je	0x400078
<Block for 0x400078, 25 bytes>
0x400078:	lea	rax, [rbp - 0xa0]
0x40007f:	mov	edx, 0x95
0x400084:	mov	esi, 0x41
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x40002c, 25 bytes>
0x40002c:	lea	rax, [rbp - 0xa0]
0x400033:	mov	edx, 0x95
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400091, 34 bytes>
0x400091:	mov	byte ptr [rbp - 0xb], 0
0x400095:	lea	rcx, [rbp - 0xa0]
0x40009c:	lea	rax, [rbp - 0x110]
0x4000a3:	mov	edx, 0x63
0x4000a8:	mov	rsi, rcx
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500010
<Block for 0x400045, 34 bytes>
0x400045:	mov	byte ptr [rbp - 0xb], 0
0x400049:	lea	rcx, [rbp - 0xa0]
0x400050:	lea	rax, [rbp - 0x110]
0x400057:	mov	edx, 0x63
0x40005c:	mov	rsi, rcx
0x40005f:	mov	rdi, rax
0x400062:	call	0x500010
<Block for 0x4000b3, 22 bytes>
0x4000b3:	mov	byte ptr [rbp - 0xad], 0
0x4000ba:	lea	rax, [rbp - 0x110]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x400067, 15 bytes>
0x400067:	lea	rax, [rbp - 0x110]
0x40006e:	mov	rdi, rax
0x400071:	call	0x500018
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x400076, 2 bytes>
0x400076:	jmp	0x4000c9
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500020
