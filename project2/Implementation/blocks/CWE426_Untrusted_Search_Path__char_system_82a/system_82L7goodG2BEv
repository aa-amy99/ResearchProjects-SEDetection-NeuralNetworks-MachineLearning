<Block for 0x40011f, 189 bytes>
0x40011f:	endbr64	
0x400123:	push	rbp
0x400124:	mov	rbp, rsp
0x400127:	push	rbx
0x400128:	sub	rsp, 0x88
0x40012f:	mov	rax, qword ptr fs:[0x28]
0x400138:	mov	qword ptr [rbp - 0x18], rax
0x40013c:	xor	eax, eax
0x40013e:	mov	qword ptr [rbp - 0x80], 0
0x400146:	mov	qword ptr [rbp - 0x78], 0
0x40014e:	mov	qword ptr [rbp - 0x70], 0
0x400156:	mov	qword ptr [rbp - 0x68], 0
0x40015e:	mov	qword ptr [rbp - 0x60], 0
0x400166:	mov	qword ptr [rbp - 0x58], 0
0x40016e:	mov	qword ptr [rbp - 0x50], 0
0x400176:	mov	qword ptr [rbp - 0x48], 0
0x40017e:	mov	qword ptr [rbp - 0x40], 0
0x400186:	mov	qword ptr [rbp - 0x38], 0
0x40018e:	mov	qword ptr [rbp - 0x30], 0
0x400196:	mov	qword ptr [rbp - 0x28], 0
0x40019e:	mov	dword ptr [rbp - 0x20], 0
0x4001a5:	lea	rax, [rbp - 0x80]
0x4001a9:	mov	qword ptr [rbp - 0x90], rax
0x4001b0:	mov	rax, qword ptr [rbp - 0x90]
0x4001b7:	movabs	rdx, 0x6e69622f7273752f
0x4001c1:	movabs	rcx, 0x616c2d20736c2f
0x4001cb:	mov	qword ptr [rax], rdx
0x4001ce:	mov	qword ptr [rax + 8], rcx
0x4001d2:	mov	edi, 8
0x4001d7:	call	0x500000
<Block for 0x4001dc, 11 bytes>
0x4001dc:	mov	rbx, rax
0x4001df:	mov	rdi, rbx
0x4001e2:	call	0x4002a6
<Block for 0x4001e7, 42 bytes>
0x4001e7:	mov	qword ptr [rbp - 0x88], rbx
0x4001ee:	mov	rax, qword ptr [rbp - 0x88]
0x4001f5:	mov	rax, qword ptr [rax]
0x4001f8:	mov	rcx, qword ptr [rax]
0x4001fb:	mov	rdx, qword ptr [rbp - 0x90]
0x400202:	mov	rax, qword ptr [rbp - 0x88]
0x400209:	mov	rsi, rdx
0x40020c:	mov	rdi, rax
0x40020f:	call	rcx
<Block for 0x400211, 12 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x88]
0x400218:	test	rax, rax
0x40021b:	je	0x40022a
<Block for 0x40022a, 16 bytes>
0x40022a:	nop	
0x40022b:	mov	rax, qword ptr [rbp - 0x18]
0x40022f:	xor	rax, qword ptr fs:[0x28]
0x400238:	je	0x40023f
<Block for 0x40021d, 13 bytes>
0x40021d:	mov	esi, 8
0x400222:	mov	rdi, rax
0x400225:	call	0x500008
<Block for 0x40023f, 10 bytes>
0x40023f:	add	rsp, 0x88
0x400246:	pop	rbx
0x400247:	pop	rbp
0x400248:	ret	
<Block for 0x40023a, 5 bytes>
0x40023a:	call	0x500010
