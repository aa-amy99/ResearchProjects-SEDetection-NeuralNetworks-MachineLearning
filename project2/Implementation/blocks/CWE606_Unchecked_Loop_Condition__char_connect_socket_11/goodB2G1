<Block for 0x4002bc, 154 bytes>
0x4002bc:	endbr64	
0x4002c0:	push	rbp
0x4002c1:	mov	rbp, rsp
0x4002c4:	sub	rsp, 0xb0
0x4002cb:	mov	rax, qword ptr fs:[0x28]
0x4002d4:	mov	qword ptr [rbp - 8], rax
0x4002d8:	xor	eax, eax
0x4002da:	mov	qword ptr [rbp - 0x70], 0
0x4002e2:	mov	qword ptr [rbp - 0x68], 0
0x4002ea:	mov	qword ptr [rbp - 0x60], 0
0x4002f2:	mov	qword ptr [rbp - 0x58], 0
0x4002fa:	mov	qword ptr [rbp - 0x50], 0
0x400302:	mov	qword ptr [rbp - 0x48], 0
0x40030a:	mov	qword ptr [rbp - 0x40], 0
0x400312:	mov	qword ptr [rbp - 0x38], 0
0x40031a:	mov	qword ptr [rbp - 0x30], 0
0x400322:	mov	qword ptr [rbp - 0x28], 0
0x40032a:	mov	qword ptr [rbp - 0x20], 0
0x400332:	mov	qword ptr [rbp - 0x18], 0
0x40033a:	mov	dword ptr [rbp - 0x10], 0
0x400341:	lea	rax, [rbp - 0x70]
0x400345:	mov	qword ptr [rbp - 0x98], rax
0x40034c:	mov	eax, 0
0x400351:	call	0x500000
<Block for 0x400356, 8 bytes>
0x400356:	test	eax, eax
0x400358:	je	0x4004ed
<Block for 0x4004ed, 10 bytes>
0x4004ed:	mov	eax, 0
0x4004f2:	call	0x500068
<Block for 0x40035e, 25 bytes>
0x40035e:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400368:	mov	rax, qword ptr [rbp - 0x98]
0x40036f:	mov	rdi, rax
0x400372:	call	0x500008
<Block for 0x4004f7, 4 bytes>
0x4004f7:	test	eax, eax
0x4004f9:	je	0x400509
<Block for 0x400377, 27 bytes>
0x400377:	mov	qword ptr [rbp - 0x90], rax
0x40037e:	mov	edx, 6
0x400383:	mov	esi, 1
0x400388:	mov	edi, 2
0x40038d:	call	0x500010
<Block for 0x400509, 34 bytes>
0x400509:	lea	rdx, [rbp - 0xac]
0x400510:	mov	rax, qword ptr [rbp - 0x98]
0x400517:	lea	rsi, [rip + 0x5c5]
0x40051e:	mov	rdi, rax
0x400521:	mov	eax, 0
0x400526:	call	0x500050
<Block for 0x4004fb, 12 bytes>
0x4004fb:	lea	rdi, [rip + 0x5e4]
0x400502:	call	0x500070
<Block for 0x400392, 19 bytes>
0x400392:	mov	dword ptr [rbp - 0xa0], eax
0x400398:	cmp	dword ptr [rbp - 0xa0], -1
0x40039f:	je	0x4004d3
<Block for 0x40052b, 5 bytes>
0x40052b:	cmp	eax, 1
0x40052e:	jne	0x40057c
<Block for 0x400507, 2 bytes>
0x400507:	jmp	0x40057c
<Block for 0x4004d3, 3 bytes>
0x4004d3:	nop	
0x4004d4:	jmp	0x4004d7
<Block for 0x4003a5, 22 bytes>
0x4003a5:	lea	rax, [rbp - 0x80]
0x4003a9:	mov	edx, 0x10
0x4003ae:	mov	esi, 0
0x4003b3:	mov	rdi, rax
0x4003b6:	call	0x500018
<Block for 0x400530, 13 bytes>
0x400530:	mov	eax, dword ptr [rbp - 0xac]
0x400536:	cmp	eax, 0x270f
0x40053b:	jg	0x40057c
<Block for 0x40057c, 16 bytes>
0x40057c:	nop	
0x40057d:	mov	rax, qword ptr [rbp - 8]
0x400581:	xor	rax, qword ptr fs:[0x28]
0x40058a:	je	0x400591
<Block for 0x4004d7, 9 bytes>
0x4004d7:	cmp	dword ptr [rbp - 0xa0], -1
0x4004de:	je	0x4004ed
<Block for 0x4003bb, 18 bytes>
0x4003bb:	mov	word ptr [rbp - 0x80], 2
0x4003c1:	lea	rdi, [rip + 0x711]
0x4003c8:	call	0x500020
<Block for 0x40053d, 22 bytes>
0x40053d:	mov	dword ptr [rbp - 0xa4], 0
0x400547:	mov	dword ptr [rbp - 0xa8], 0
0x400551:	jmp	0x400561
<Block for 0x400591, 2 bytes>
0x400591:	leave	
0x400592:	ret	
<Block for 0x40058c, 5 bytes>
0x40058c:	call	0x500060
<Block for 0x4004e0, 13 bytes>
0x4004e0:	mov	eax, dword ptr [rbp - 0xa0]
0x4004e6:	mov	edi, eax
0x4004e8:	call	0x500048
<Block for 0x4003cd, 13 bytes>
0x4003cd:	mov	dword ptr [rbp - 0x7c], eax
0x4003d0:	mov	edi, 0x6987
0x4003d5:	call	0x500028
<Block for 0x400561, 14 bytes>
0x400561:	mov	eax, dword ptr [rbp - 0xac]
0x400567:	cmp	dword ptr [rbp - 0xa8], eax
0x40056d:	jl	0x400553
<Block for 0x4003da, 29 bytes>
0x4003da:	mov	word ptr [rbp - 0x7e], ax
0x4003de:	lea	rcx, [rbp - 0x80]
0x4003e2:	mov	eax, dword ptr [rbp - 0xa0]
0x4003e8:	mov	edx, 0x10
0x4003ed:	mov	rsi, rcx
0x4003f0:	mov	edi, eax
0x4003f2:	call	0x500030
<Block for 0x400553, 28 bytes>
0x400553:	add	dword ptr [rbp - 0xa4], 1
0x40055a:	add	dword ptr [rbp - 0xa8], 1
0x400561:	mov	eax, dword ptr [rbp - 0xac]
0x400567:	cmp	dword ptr [rbp - 0xa8], eax
0x40056d:	jl	0x400553
<Block for 0x40056f, 13 bytes>
0x40056f:	mov	eax, dword ptr [rbp - 0xa4]
0x400575:	mov	edi, eax
0x400577:	call	0x500058
<Block for 0x4003f7, 9 bytes>
0x4003f7:	cmp	eax, -1
0x4003fa:	je	0x4004d6
<Block for 0x400400, 51 bytes>
0x400400:	mov	eax, 0x63
0x400405:	sub	rax, qword ptr [rbp - 0x90]
0x40040c:	mov	rdx, rax
0x40040f:	mov	rcx, qword ptr [rbp - 0x98]
0x400416:	mov	rax, qword ptr [rbp - 0x90]
0x40041d:	lea	rsi, [rcx + rax]
0x400421:	mov	eax, dword ptr [rbp - 0xa0]
0x400427:	mov	ecx, 0
0x40042c:	mov	edi, eax
0x40042e:	call	0x500038
<Block for 0x4004d6, 1 bytes>
0x4004d6:	nop	
<Block for 0x400433, 19 bytes>
0x400433:	mov	dword ptr [rbp - 0x9c], eax
0x400439:	cmp	dword ptr [rbp - 0x9c], -1
0x400440:	je	0x4004d7
<Block for 0x400446, 13 bytes>
0x400446:	cmp	dword ptr [rbp - 0x9c], 0
0x40044d:	je	0x4004d7
<Block for 0x400453, 52 bytes>
0x400453:	mov	eax, dword ptr [rbp - 0x9c]
0x400459:	movsxd	rdx, eax
0x40045c:	mov	rax, qword ptr [rbp - 0x90]
0x400463:	add	rdx, rax
0x400466:	mov	rax, qword ptr [rbp - 0x98]
0x40046d:	add	rax, rdx
0x400470:	mov	byte ptr [rax], 0
0x400473:	mov	rax, qword ptr [rbp - 0x98]
0x40047a:	mov	esi, 0xd
0x40047f:	mov	rdi, rax
0x400482:	call	0x500040
<Block for 0x400487, 17 bytes>
0x400487:	mov	qword ptr [rbp - 0x88], rax
0x40048e:	cmp	qword ptr [rbp - 0x88], 0
0x400496:	je	0x4004a2
<Block for 0x4004a2, 20 bytes>
0x4004a2:	mov	rax, qword ptr [rbp - 0x98]
0x4004a9:	mov	esi, 0xa
0x4004ae:	mov	rdi, rax
0x4004b1:	call	0x500040
<Block for 0x400498, 30 bytes>
0x400498:	mov	rax, qword ptr [rbp - 0x88]
0x40049f:	mov	byte ptr [rax], 0
0x4004a2:	mov	rax, qword ptr [rbp - 0x98]
0x4004a9:	mov	esi, 0xa
0x4004ae:	mov	rdi, rax
0x4004b1:	call	0x500040
<Block for 0x4004b6, 17 bytes>
0x4004b6:	mov	qword ptr [rbp - 0x88], rax
0x4004bd:	cmp	qword ptr [rbp - 0x88], 0
0x4004c5:	je	0x4004d7
<Block for 0x4004c7, 12 bytes>
0x4004c7:	mov	rax, qword ptr [rbp - 0x88]
0x4004ce:	mov	byte ptr [rax], 0
0x4004d1:	jmp	0x4004d7
