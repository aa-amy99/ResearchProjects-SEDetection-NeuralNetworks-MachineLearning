<Block for 0x400000, 154 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x98], rax
0x400090:	mov	eax, 0
0x400095:	call	0x500000
<Block for 0x40009a, 8 bytes>
0x40009a:	test	eax, eax
0x40009c:	je	0x400231
<Block for 0x400231, 10 bytes>
0x400231:	mov	eax, 0
0x400236:	call	0x500000
<Block for 0x4000a2, 25 bytes>
0x4000a2:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4000ac:	mov	rax, qword ptr [rbp - 0x98]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500008
<Block for 0x40023b, 4 bytes>
0x40023b:	test	eax, eax
0x40023d:	je	0x4002a5
<Block for 0x4000bb, 27 bytes>
0x4000bb:	mov	qword ptr [rbp - 0x90], rax
0x4000c2:	mov	edx, 6
0x4000c7:	mov	esi, 1
0x4000cc:	mov	edi, 2
0x4000d1:	call	0x500010
<Block for 0x4002a5, 16 bytes>
0x4002a5:	nop	
0x4002a6:	mov	rax, qword ptr [rbp - 8]
0x4002aa:	xor	rax, qword ptr fs:[0x28]
0x4002b3:	je	0x4002ba
<Block for 0x40023f, 34 bytes>
0x40023f:	lea	rdx, [rbp - 0xac]
0x400246:	mov	rax, qword ptr [rbp - 0x98]
0x40024d:	lea	rsi, [rip + 0x88f]
0x400254:	mov	rdi, rax
0x400257:	mov	eax, 0
0x40025c:	call	0x500050
<Block for 0x4000d6, 19 bytes>
0x4000d6:	mov	dword ptr [rbp - 0xa0], eax
0x4000dc:	cmp	dword ptr [rbp - 0xa0], -1
0x4000e3:	je	0x400217
<Block for 0x4002ba, 2 bytes>
0x4002ba:	leave	
0x4002bb:	ret	
<Block for 0x4002b5, 5 bytes>
0x4002b5:	call	0x500060
<Block for 0x400261, 5 bytes>
0x400261:	cmp	eax, 1
0x400264:	jne	0x4002a5
<Block for 0x400217, 3 bytes>
0x400217:	nop	
0x400218:	jmp	0x40021b
<Block for 0x4000e9, 22 bytes>
0x4000e9:	lea	rax, [rbp - 0x80]
0x4000ed:	mov	edx, 0x10
0x4000f2:	mov	esi, 0
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500018
<Block for 0x400266, 22 bytes>
0x400266:	mov	dword ptr [rbp - 0xa4], 0
0x400270:	mov	dword ptr [rbp - 0xa8], 0
0x40027a:	jmp	0x40028a
<Block for 0x40021b, 9 bytes>
0x40021b:	cmp	dword ptr [rbp - 0xa0], -1
0x400222:	je	0x400231
<Block for 0x4000ff, 18 bytes>
0x4000ff:	mov	word ptr [rbp - 0x80], 2
0x400105:	lea	rdi, [rip + 0x9cd]
0x40010c:	call	0x500020
<Block for 0x40028a, 14 bytes>
0x40028a:	mov	eax, dword ptr [rbp - 0xac]
0x400290:	cmp	dword ptr [rbp - 0xa8], eax
0x400296:	jl	0x40027c
<Block for 0x400224, 13 bytes>
0x400224:	mov	eax, dword ptr [rbp - 0xa0]
0x40022a:	mov	edi, eax
0x40022c:	call	0x500048
<Block for 0x400111, 13 bytes>
0x400111:	mov	dword ptr [rbp - 0x7c], eax
0x400114:	mov	edi, 0x6987
0x400119:	call	0x500028
<Block for 0x40027c, 28 bytes>
0x40027c:	add	dword ptr [rbp - 0xa4], 1
0x400283:	add	dword ptr [rbp - 0xa8], 1
0x40028a:	mov	eax, dword ptr [rbp - 0xac]
0x400290:	cmp	dword ptr [rbp - 0xa8], eax
0x400296:	jl	0x40027c
<Block for 0x400298, 13 bytes>
0x400298:	mov	eax, dword ptr [rbp - 0xa4]
0x40029e:	mov	edi, eax
0x4002a0:	call	0x500058
<Block for 0x40011e, 29 bytes>
0x40011e:	mov	word ptr [rbp - 0x7e], ax
0x400122:	lea	rcx, [rbp - 0x80]
0x400126:	mov	eax, dword ptr [rbp - 0xa0]
0x40012c:	mov	edx, 0x10
0x400131:	mov	rsi, rcx
0x400134:	mov	edi, eax
0x400136:	call	0x500030
<Block for 0x40013b, 9 bytes>
0x40013b:	cmp	eax, -1
0x40013e:	je	0x40021a
<Block for 0x400144, 51 bytes>
0x400144:	mov	eax, 0x63
0x400149:	sub	rax, qword ptr [rbp - 0x90]
0x400150:	mov	rdx, rax
0x400153:	mov	rcx, qword ptr [rbp - 0x98]
0x40015a:	mov	rax, qword ptr [rbp - 0x90]
0x400161:	lea	rsi, [rcx + rax]
0x400165:	mov	eax, dword ptr [rbp - 0xa0]
0x40016b:	mov	ecx, 0
0x400170:	mov	edi, eax
0x400172:	call	0x500038
<Block for 0x40021a, 1 bytes>
0x40021a:	nop	
<Block for 0x400177, 19 bytes>
0x400177:	mov	dword ptr [rbp - 0x9c], eax
0x40017d:	cmp	dword ptr [rbp - 0x9c], -1
0x400184:	je	0x40021b
<Block for 0x40018a, 13 bytes>
0x40018a:	cmp	dword ptr [rbp - 0x9c], 0
0x400191:	je	0x40021b
<Block for 0x400197, 52 bytes>
0x400197:	mov	eax, dword ptr [rbp - 0x9c]
0x40019d:	movsxd	rdx, eax
0x4001a0:	mov	rax, qword ptr [rbp - 0x90]
0x4001a7:	add	rdx, rax
0x4001aa:	mov	rax, qword ptr [rbp - 0x98]
0x4001b1:	add	rax, rdx
0x4001b4:	mov	byte ptr [rax], 0
0x4001b7:	mov	rax, qword ptr [rbp - 0x98]
0x4001be:	mov	esi, 0xd
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x500040
<Block for 0x4001cb, 17 bytes>
0x4001cb:	mov	qword ptr [rbp - 0x88], rax
0x4001d2:	cmp	qword ptr [rbp - 0x88], 0
0x4001da:	je	0x4001e6
<Block for 0x4001e6, 20 bytes>
0x4001e6:	mov	rax, qword ptr [rbp - 0x98]
0x4001ed:	mov	esi, 0xa
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500040
<Block for 0x4001dc, 30 bytes>
0x4001dc:	mov	rax, qword ptr [rbp - 0x88]
0x4001e3:	mov	byte ptr [rax], 0
0x4001e6:	mov	rax, qword ptr [rbp - 0x98]
0x4001ed:	mov	esi, 0xa
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x500040
<Block for 0x4001fa, 17 bytes>
0x4001fa:	mov	qword ptr [rbp - 0x88], rax
0x400201:	cmp	qword ptr [rbp - 0x88], 0
0x400209:	je	0x40021b
<Block for 0x40020b, 12 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x88]
0x400212:	mov	byte ptr [rax], 0
0x400215:	jmp	0x40021b
