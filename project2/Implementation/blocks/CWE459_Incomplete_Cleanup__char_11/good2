<Block for 0x40017a, 37 bytes>
0x40017a:	endbr64	
0x40017e:	push	rbp
0x40017f:	mov	rbp, rsp
0x400182:	sub	rsp, 0x30
0x400186:	mov	rax, qword ptr fs:[0x28]
0x40018f:	mov	qword ptr [rbp - 8], rax
0x400193:	xor	eax, eax
0x400195:	mov	eax, 0
0x40019a:	call	0x500000
<Block for 0x40019f, 4 bytes>
0x40019f:	test	eax, eax
0x4001a1:	je	0x400221
<Block for 0x400221, 16 bytes>
0x400221:	nop	
0x400222:	mov	rax, qword ptr [rbp - 8]
0x400226:	xor	rax, qword ptr fs:[0x28]
0x40022f:	je	0x400236
<Block for 0x4001a3, 36 bytes>
0x4001a3:	movabs	rax, 0x58585858646f6f67
0x4001ad:	mov	qword ptr [rbp - 0x13], rax
0x4001b1:	mov	word ptr [rbp - 0xb], 0x5858
0x4001b7:	mov	byte ptr [rbp - 9], 0
0x4001bb:	lea	rax, [rbp - 0x13]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500008
<Block for 0x400236, 2 bytes>
0x400236:	leave	
0x400237:	ret	
<Block for 0x400231, 5 bytes>
0x400231:	call	0x500028
<Block for 0x4001c7, 9 bytes>
0x4001c7:	mov	dword ptr [rbp - 0x24], eax
0x4001ca:	cmp	dword ptr [rbp - 0x24], -1
0x4001ce:	je	0x400221
<Block for 0x4001d0, 17 bytes>
0x4001d0:	mov	eax, dword ptr [rbp - 0x24]
0x4001d3:	lea	rsi, [rip + 0x7d]
0x4001da:	mov	edi, eax
0x4001dc:	call	0x500010
<Block for 0x4001e1, 11 bytes>
0x4001e1:	mov	qword ptr [rbp - 0x20], rax
0x4001e5:	cmp	qword ptr [rbp - 0x20], 0
0x4001ea:	je	0x400221
<Block for 0x4001ec, 29 bytes>
0x4001ec:	mov	rax, qword ptr [rbp - 0x20]
0x4001f0:	mov	rcx, rax
0x4001f3:	mov	edx, 0xe
0x4001f8:	mov	esi, 1
0x4001fd:	lea	rdi, [rip + 0x55]
0x400204:	call	0x500018
<Block for 0x400209, 12 bytes>
0x400209:	mov	rax, qword ptr [rbp - 0x20]
0x40020d:	mov	rdi, rax
0x400210:	call	0x500020
<Block for 0x400215, 12 bytes>
0x400215:	lea	rax, [rbp - 0x13]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500040
