<Block for 0x400000, 42 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	dword ptr [rbp - 0x11c], 0
0x400028:	jmp	0x400099
<Block for 0x400099, 9 bytes>
0x400099:	cmp	dword ptr [rbp - 0x11c], 0
0x4000a0:	jle	0x40002a
<Block for 0x40002a, 39 bytes>
0x40002a:	pxor	xmm0, xmm0
0x40002e:	movsd	qword ptr [rbp - 0x118], xmm0
0x400036:	mov	rdx, qword ptr [rip + 0xfffc3]
0x40003d:	lea	rax, [rbp - 0x110]
0x400044:	mov	esi, 0x100
0x400049:	mov	rdi, rax
0x40004c:	call	0x500008
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x400051, 5 bytes>
0x400051:	test	rax, rax
0x400054:	je	0x400073
<Block for 0x4000b7, 2 bytes>
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500028
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x146]
0x40007a:	call	0x500018
<Block for 0x400056, 15 bytes>
0x400056:	lea	rax, [rbp - 0x110]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x40007f, 19 bytes>
0x40007f:	movsd	xmm0, qword ptr [rbp - 0x118]
0x400087:	cvttsd2si	eax, xmm0
0x40008b:	mov	edi, eax
0x40008d:	call	0x500020
<Block for 0x400065, 14 bytes>
0x400065:	movq	rax, xmm0
0x40006a:	mov	qword ptr [rbp - 0x118], rax
0x400071:	jmp	0x40007f
<Block for 0x400092, 16 bytes>
0x400092:	add	dword ptr [rbp - 0x11c], 1
0x400099:	cmp	dword ptr [rbp - 0x11c], 0
0x4000a0:	jle	0x40002a
