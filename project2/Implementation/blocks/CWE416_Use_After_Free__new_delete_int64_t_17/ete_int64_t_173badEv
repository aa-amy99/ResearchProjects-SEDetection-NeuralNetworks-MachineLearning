<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400056
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 8
0x400026:	call	0x500000
<Block for 0x400056, 13 bytes>
0x400056:	mov	dword ptr [rbp - 0xc], 0
0x40005d:	cmp	dword ptr [rbp - 0xc], 0
0x400061:	jg	0x400078
<Block for 0x40002b, 24 bytes>
0x40002b:	mov	qword ptr [rbp - 8], rax
0x40002f:	mov	rax, qword ptr [rbp - 8]
0x400033:	mov	qword ptr [rax], 5
0x40003a:	mov	rax, qword ptr [rbp - 8]
0x40003e:	test	rax, rax
0x400041:	je	0x400050
<Block for 0x400063, 15 bytes>
0x400063:	mov	rax, qword ptr [rbp - 8]
0x400067:	mov	rax, qword ptr [rax]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400078, 3 bytes>
0x400078:	nop	
0x400079:	leave	
0x40007a:	ret	
<Block for 0x400050, 6 bytes>
0x400050:	add	dword ptr [rbp - 0x10], 1
0x400054:	jmp	0x40001b
<Block for 0x400043, 13 bytes>
0x400043:	mov	esi, 8
0x400048:	mov	rdi, rax
0x40004b:	call	0x500008
<Block for 0x400072, 6 bytes>
0x400072:	add	dword ptr [rbp - 0xc], 1
0x400076:	jmp	0x40005d
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400056
<Block for 0x40005d, 6 bytes>
0x40005d:	cmp	dword ptr [rbp - 0xc], 0
0x400061:	jg	0x400078
