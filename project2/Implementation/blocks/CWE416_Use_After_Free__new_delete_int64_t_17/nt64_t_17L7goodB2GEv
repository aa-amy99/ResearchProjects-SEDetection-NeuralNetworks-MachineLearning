<Block for 0x40007b, 33 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x10
0x400087:	mov	qword ptr [rbp - 8], 0
0x40008f:	mov	dword ptr [rbp - 0x10], 0
0x400096:	cmp	dword ptr [rbp - 0x10], 0
0x40009a:	jg	0x4000d1
<Block for 0x40009c, 10 bytes>
0x40009c:	mov	edi, 8
0x4000a1:	call	0x500000
<Block for 0x4000d1, 13 bytes>
0x4000d1:	mov	dword ptr [rbp - 0xc], 0
0x4000d8:	cmp	dword ptr [rbp - 0xc], 0
0x4000dc:	jg	0x4000e4
<Block for 0x4000a6, 24 bytes>
0x4000a6:	mov	qword ptr [rbp - 8], rax
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	mov	qword ptr [rax], 5
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	test	rax, rax
0x4000bc:	je	0x4000cb
<Block for 0x4000de, 6 bytes>
0x4000de:	add	dword ptr [rbp - 0xc], 1
0x4000e2:	jmp	0x4000d8
<Block for 0x4000e4, 3 bytes>
0x4000e4:	nop	
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000cb, 6 bytes>
0x4000cb:	add	dword ptr [rbp - 0x10], 1
0x4000cf:	jmp	0x400096
<Block for 0x4000be, 13 bytes>
0x4000be:	mov	esi, 8
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500008
<Block for 0x4000d8, 6 bytes>
0x4000d8:	cmp	dword ptr [rbp - 0xc], 0
0x4000dc:	jg	0x4000e4
<Block for 0x400096, 6 bytes>
0x400096:	cmp	dword ptr [rbp - 0x10], 0
0x40009a:	jg	0x4000d1
