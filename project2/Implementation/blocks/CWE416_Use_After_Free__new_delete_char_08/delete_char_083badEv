<Block for 0x40001e, 25 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	qword ptr [rbp - 8], 0
0x400032:	call	0x400000
<Block for 0x400037, 9 bytes>
0x400037:	test	eax, eax
0x400039:	setne	al
0x40003c:	test	al, al
0x40003e:	je	0x40006b
<Block for 0x40006b, 5 bytes>
0x40006b:	call	0x400000
<Block for 0x400040, 10 bytes>
0x400040:	mov	edi, 1
0x400045:	call	0x500000
<Block for 0x400070, 9 bytes>
0x400070:	test	eax, eax
0x400072:	setne	al
0x400075:	test	al, al
0x400077:	je	0x40008a
<Block for 0x40004a, 20 bytes>
0x40004a:	mov	qword ptr [rbp - 8], rax
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	mov	byte ptr [rax], 0x41
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	test	rax, rax
0x40005c:	je	0x40006b
<Block for 0x40008a, 3 bytes>
0x40008a:	nop	
0x40008b:	leave	
0x40008c:	ret	
<Block for 0x400079, 17 bytes>
0x400079:	mov	rax, qword ptr [rbp - 8]
0x40007d:	movzx	eax, byte ptr [rax]
0x400080:	movsx	eax, al
0x400083:	mov	edi, eax
0x400085:	call	0x500010
<Block for 0x40005e, 13 bytes>
0x40005e:	mov	esi, 1
0x400063:	mov	rdi, rax
0x400066:	call	0x500008
