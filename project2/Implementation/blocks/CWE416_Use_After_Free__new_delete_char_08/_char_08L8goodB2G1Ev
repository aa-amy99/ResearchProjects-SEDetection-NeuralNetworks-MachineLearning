<Block for 0x40008d, 25 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	qword ptr [rbp - 8], 0
0x4000a1:	call	0x400000
<Block for 0x4000a6, 9 bytes>
0x4000a6:	test	eax, eax
0x4000a8:	setne	al
0x4000ab:	test	al, al
0x4000ad:	je	0x4000da
<Block for 0x4000da, 5 bytes>
0x4000da:	call	0x40000f
<Block for 0x4000af, 10 bytes>
0x4000af:	mov	edi, 1
0x4000b4:	call	0x500000
<Block for 0x4000df, 9 bytes>
0x4000df:	test	eax, eax
0x4000e1:	setne	al
0x4000e4:	test	al, al
0x4000e6:	je	0x4000f4
<Block for 0x4000b9, 20 bytes>
0x4000b9:	mov	qword ptr [rbp - 8], rax
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	mov	byte ptr [rax], 0x41
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	test	rax, rax
0x4000cb:	je	0x4000da
<Block for 0x4000f4, 3 bytes>
0x4000f4:	nop	
0x4000f5:	leave	
0x4000f6:	ret	
<Block for 0x4000e8, 12 bytes>
0x4000e8:	lea	rdi, [rip + 0x13e]
0x4000ef:	call	0x500018
<Block for 0x4000cd, 13 bytes>
0x4000cd:	mov	esi, 1
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500008
