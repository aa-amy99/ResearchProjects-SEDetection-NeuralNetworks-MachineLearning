<Block for 0x4000d9, 83 bytes>
0x4000d9:	endbr64	
0x4000dd:	push	rbp
0x4000de:	mov	rbp, rsp
0x4000e1:	sub	rsp, 0x30
0x4000e5:	mov	rax, qword ptr fs:[0x28]
0x4000ee:	mov	qword ptr [rbp - 8], rax
0x4000f2:	xor	eax, eax
0x4000f4:	lea	rax, [rbp - 0x30]
0x4000f8:	mov	qword ptr [rbp - 0x20], rax
0x4000fc:	mov	dword ptr [rbp - 0x30], 0xffffffff
0x400103:	mov	dword ptr [rbp - 0x30], 0x14
0x40010a:	mov	rax, qword ptr [rbp - 0x20]
0x40010e:	mov	eax, dword ptr [rax]
0x400110:	mov	dword ptr [rbp - 0x2c], eax
0x400113:	mov	eax, dword ptr [rbp - 0x2c]
0x400116:	cdqe	
0x400118:	shl	rax, 2
0x40011c:	mov	qword ptr [rbp - 0x18], rax
0x400120:	mov	rax, qword ptr [rbp - 0x18]
0x400124:	mov	rdi, rax
0x400127:	call	0x500010
<Block for 0x40012c, 23 bytes>
0x40012c:	mov	qword ptr [rbp - 0x10], rax
0x400130:	mov	qword ptr [rbp - 0x28], 0
0x400138:	mov	eax, dword ptr [rbp - 0x2c]
0x40013b:	cdqe	
0x40013d:	cmp	qword ptr [rbp - 0x28], rax
0x400141:	jae	0x400163
<Block for 0x400143, 32 bytes>
0x400143:	mov	rax, qword ptr [rbp - 0x28]
0x400147:	lea	rdx, [rax*4]
0x40014f:	mov	rax, qword ptr [rbp - 0x10]
0x400153:	add	rax, rdx
0x400156:	mov	dword ptr [rax], 0
0x40015c:	add	qword ptr [rbp - 0x28], 1
0x400161:	jmp	0x400138
<Block for 0x400163, 13 bytes>
0x400163:	mov	rax, qword ptr [rbp - 0x10]
0x400167:	mov	eax, dword ptr [rax]
0x400169:	mov	edi, eax
0x40016b:	call	0x500018
<Block for 0x400138, 11 bytes>
0x400138:	mov	eax, dword ptr [rbp - 0x2c]
0x40013b:	cdqe	
0x40013d:	cmp	qword ptr [rbp - 0x28], rax
0x400141:	jae	0x400163
<Block for 0x400170, 7 bytes>
0x400170:	cmp	qword ptr [rbp - 0x10], 0
0x400175:	je	0x400183
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400177, 12 bytes>
0x400177:	mov	rax, qword ptr [rbp - 0x10]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500020
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500028
