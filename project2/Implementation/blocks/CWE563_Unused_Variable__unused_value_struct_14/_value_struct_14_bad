<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0xfffdf]
0x400021:	cmp	eax, 5
0x400024:	jne	0x400034
<Block for 0x400026, 25 bytes>
0x400026:	mov	dword ptr [rbp - 0x10], 0
0x40002d:	mov	dword ptr [rbp - 0xc], 0
0x400034:	mov	eax, dword ptr [rip + 0xfffc6]
0x40003a:	cmp	eax, 5
0x40003d:	jne	0x400059
<Block for 0x400034, 11 bytes>
0x400034:	mov	eax, dword ptr [rip + 0xfffc6]
0x40003a:	cmp	eax, 5
0x40003d:	jne	0x400059
<Block for 0x40003f, 26 bytes>
0x40003f:	mov	dword ptr [rbp - 0x10], 1
0x400046:	mov	dword ptr [rbp - 0xc], 1
0x40004d:	lea	rax, [rbp - 0x10]
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
<Block for 0x400059, 16 bytes>
0x400059:	nop	
0x40005a:	mov	rax, qword ptr [rbp - 8]
0x40005e:	xor	rax, qword ptr fs:[0x28]
0x400067:	je	0x40006e
<Block for 0x40006e, 2 bytes>
0x40006e:	leave	
0x40006f:	ret	
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500010
