<Block for 0x40025c, 81 bytes>
0x40025c:	endbr64	
0x400260:	push	rbp
0x400261:	mov	rbp, rsp
0x400264:	add	rsp, -0x80
0x400268:	mov	rax, qword ptr fs:[0x28]
0x400271:	mov	qword ptr [rbp - 8], rax
0x400275:	xor	eax, eax
0x400277:	mov	eax, 0x10
0x40027c:	sub	rax, 1
0x400280:	add	rax, 0x6c
0x400284:	mov	esi, 0x10
0x400289:	mov	edx, 0
0x40028e:	div	rsi
0x400291:	imul	rax, rax, 0x10
0x400295:	mov	rdx, rax
0x400298:	and	rdx, 0xfffffffffffff000
0x40029f:	mov	rcx, rsp
0x4002a2:	sub	rcx, rdx
0x4002a5:	mov	rdx, rcx
0x4002a8:	cmp	rsp, rdx
0x4002ab:	je	0x4002bf
<Block for 0x4002bf, 26 bytes>
0x4002bf:	mov	rdx, rax
0x4002c2:	and	edx, 0xfff
0x4002c8:	sub	rsp, rdx
0x4002cb:	mov	rdx, rax
0x4002ce:	and	edx, 0xfff
0x4002d4:	test	rdx, rdx
0x4002d7:	je	0x4002e9
<Block for 0x4002ad, 18 bytes>
0x4002ad:	sub	rsp, 0x1000
0x4002b4:	or	qword ptr [rsp + 0xff8], 0
0x4002bd:	jmp	0x4002a8
<Block for 0x4002e9, 41 bytes>
0x4002e9:	mov	rax, rsp
0x4002ec:	add	rax, 0xf
0x4002f0:	shr	rax, 4
0x4002f4:	shl	rax, 4
0x4002f8:	mov	qword ptr [rbp - 0x80], rax
0x4002fc:	mov	rax, qword ptr [rbp - 0x80]
0x400300:	mov	edx, 0x63
0x400305:	mov	esi, 0x41
0x40030a:	mov	rdi, rax
0x40030d:	call	0x500000
<Block for 0x4002d9, 57 bytes>
0x4002d9:	and	eax, 0xfff
0x4002de:	sub	rax, 8
0x4002e2:	add	rax, rsp
0x4002e5:	or	qword ptr [rax], 0
0x4002e9:	mov	rax, rsp
0x4002ec:	add	rax, 0xf
0x4002f0:	shr	rax, 4
0x4002f4:	shl	rax, 4
0x4002f8:	mov	qword ptr [rbp - 0x80], rax
0x4002fc:	mov	rax, qword ptr [rbp - 0x80]
0x400300:	mov	edx, 0x63
0x400305:	mov	esi, 0x41
0x40030a:	mov	rdi, rax
0x40030d:	call	0x500000
<Block for 0x4002a8, 5 bytes>
0x4002a8:	cmp	rsp, rdx
0x4002ab:	je	0x4002bf
<Block for 0x400312, 41 bytes>
0x400312:	mov	rax, qword ptr [rbp - 0x80]
0x400316:	add	rax, 0x63
0x40031a:	mov	byte ptr [rax], 0
0x40031d:	mov	rax, qword ptr [rbp - 0x80]
0x400321:	mov	qword ptr [rbp - 0x78], rax
0x400325:	lea	rax, [rbp - 0x70]
0x400329:	mov	edx, 0x63
0x40032e:	mov	esi, 0x43
0x400333:	mov	rdi, rax
0x400336:	call	0x500000
<Block for 0x40033b, 16 bytes>
0x40033b:	mov	byte ptr [rbp - 0xd], 0
0x40033f:	lea	rax, [rbp - 0x70]
0x400343:	mov	rdi, rax
0x400346:	call	0x500008
<Block for 0x40034b, 22 bytes>
0x40034b:	mov	rdx, rax
0x40034e:	mov	rcx, qword ptr [rbp - 0x78]
0x400352:	lea	rax, [rbp - 0x70]
0x400356:	mov	rsi, rcx
0x400359:	mov	rdi, rax
0x40035c:	call	0x500010
<Block for 0x400361, 16 bytes>
0x400361:	mov	byte ptr [rbp - 0xd], 0
0x400365:	lea	rax, [rbp - 0x70]
0x400369:	mov	rdi, rax
0x40036c:	call	0x500018
<Block for 0x400371, 16 bytes>
0x400371:	nop	
0x400372:	mov	rax, qword ptr [rbp - 8]
0x400376:	xor	rax, qword ptr fs:[0x28]
0x40037f:	je	0x400386
<Block for 0x400386, 2 bytes>
0x400386:	leave	
0x400387:	ret	
<Block for 0x400381, 5 bytes>
0x400381:	call	0x500020
