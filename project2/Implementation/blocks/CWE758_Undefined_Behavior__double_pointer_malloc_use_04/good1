<Block for 0x40005f, 21 bytes>
0x40005f:	endbr64	
0x400063:	push	rbp
0x400064:	mov	rbp, rsp
0x400067:	sub	rsp, 0x20
0x40006b:	mov	eax, 0
0x400070:	test	eax, eax
0x400072:	je	0x400085
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 8
0x40008a:	call	0x500000
<Block for 0x400074, 12 bytes>
0x400074:	lea	rdi, [rip + 0x155]
0x40007b:	call	0x500020
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 0x18], rax
0x400093:	cmp	qword ptr [rbp - 0x18], 0
0x400098:	jne	0x4000a4
<Block for 0x400080, 5 bytes>
0x400080:	jmp	0x400106
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 0xffffffff
0x40009f:	call	0x500008
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 8
0x4000a9:	call	0x500000
<Block for 0x400106, 3 bytes>
0x400106:	nop	
0x400107:	leave	
0x400108:	ret	
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x10], rax
0x4000b2:	cmp	qword ptr [rbp - 0x10], 0
0x4000b7:	jne	0x4000c3
<Block for 0x4000b9, 10 bytes>
0x4000b9:	mov	edi, 0xffffffff
0x4000be:	call	0x500008
<Block for 0x4000c3, 55 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x10]
0x4000c7:	movsd	xmm0, qword ptr [rip + 0x119]
0x4000cf:	movsd	qword ptr [rax], xmm0
0x4000d3:	mov	rax, qword ptr [rbp - 0x18]
0x4000d7:	mov	rdx, qword ptr [rbp - 0x10]
0x4000db:	mov	qword ptr [rax], rdx
0x4000de:	mov	rax, qword ptr [rbp - 0x18]
0x4000e2:	mov	rax, qword ptr [rax]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	mov	rax, qword ptr [rbp - 8]
0x4000ed:	mov	rax, qword ptr [rax]
0x4000f0:	movq	xmm0, rax
0x4000f5:	call	0x500018
<Block for 0x4000fa, 12 bytes>
0x4000fa:	mov	rax, qword ptr [rbp - 0x18]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500010
