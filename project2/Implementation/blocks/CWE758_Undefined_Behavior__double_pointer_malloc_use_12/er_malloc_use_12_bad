<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400066
<Block for 0x400066, 10 bytes>
0x400066:	mov	edi, 8
0x40006b:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x400070, 11 bytes>
0x400070:	mov	qword ptr [rbp - 0x28], rax
0x400074:	cmp	qword ptr [rbp - 0x28], 0
0x400079:	jne	0x400085
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 0x10], rax
0x400028:	cmp	qword ptr [rbp - 0x10], 0
0x40002d:	jne	0x400039
<Block for 0x40007b, 10 bytes>
0x40007b:	mov	edi, 0xffffffff
0x400080:	call	0x500010
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 8
0x40008a:	call	0x500008
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 23 bytes>
0x400039:	mov	rax, qword ptr [rbp - 0x10]
0x40003d:	mov	rax, qword ptr [rax]
0x400040:	mov	qword ptr [rbp - 8], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500018
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 0x20], rax
0x400093:	cmp	qword ptr [rbp - 0x20], 0
0x400098:	jne	0x4000a4
<Block for 0x400050, 17 bytes>
0x400050:	mov	rax, qword ptr [rbp - 8]
0x400054:	mov	rax, qword ptr [rax]
0x400057:	movq	xmm0, rax
0x40005c:	call	0x500020
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 0xffffffff
0x40009f:	call	0x500010
<Block for 0x4000a4, 55 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x20]
0x4000a8:	movsd	xmm0, qword ptr [rip + 0x178]
0x4000b0:	movsd	qword ptr [rax], xmm0
0x4000b4:	mov	rax, qword ptr [rbp - 0x28]
0x4000b8:	mov	rdx, qword ptr [rbp - 0x20]
0x4000bc:	mov	qword ptr [rax], rdx
0x4000bf:	mov	rax, qword ptr [rbp - 0x28]
0x4000c3:	mov	rax, qword ptr [rax]
0x4000c6:	mov	qword ptr [rbp - 0x18], rax
0x4000ca:	mov	rax, qword ptr [rbp - 0x18]
0x4000ce:	mov	rax, qword ptr [rax]
0x4000d1:	movq	xmm0, rax
0x4000d6:	call	0x500020
<Block for 0x400061, 5 bytes>
0x400061:	jmp	0x4000e7
<Block for 0x4000db, 12 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x28]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500018
<Block for 0x4000e7, 3 bytes>
0x4000e7:	nop	
0x4000e8:	leave	
0x4000e9:	ret	
