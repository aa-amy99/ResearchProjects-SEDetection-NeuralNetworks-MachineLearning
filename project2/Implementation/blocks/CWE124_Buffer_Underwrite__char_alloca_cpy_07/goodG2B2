<Block for 0x40025a, 81 bytes>
0x40025a:	endbr64	
0x40025e:	push	rbp
0x40025f:	mov	rbp, rsp
0x400262:	add	rsp, -0x80
0x400266:	mov	rax, qword ptr fs:[0x28]
0x40026f:	mov	qword ptr [rbp - 8], rax
0x400273:	xor	eax, eax
0x400275:	mov	eax, 0x10
0x40027a:	sub	rax, 1
0x40027e:	add	rax, 0x6c
0x400282:	mov	ecx, 0x10
0x400287:	mov	edx, 0
0x40028c:	div	rcx
0x40028f:	imul	rax, rax, 0x10
0x400293:	mov	rdx, rax
0x400296:	and	rdx, 0xfffffffffffff000
0x40029d:	mov	rcx, rsp
0x4002a0:	sub	rcx, rdx
0x4002a3:	mov	rdx, rcx
0x4002a6:	cmp	rsp, rdx
0x4002a9:	je	0x4002bd
<Block for 0x4002bd, 26 bytes>
0x4002bd:	mov	rdx, rax
0x4002c0:	and	edx, 0xfff
0x4002c6:	sub	rsp, rdx
0x4002c9:	mov	rdx, rax
0x4002cc:	and	edx, 0xfff
0x4002d2:	test	rdx, rdx
0x4002d5:	je	0x4002e7
<Block for 0x4002ab, 18 bytes>
0x4002ab:	sub	rsp, 0x1000
0x4002b2:	or	qword ptr [rsp + 0xff8], 0
0x4002bb:	jmp	0x4002a6
<Block for 0x4002e7, 41 bytes>
0x4002e7:	mov	rax, rsp
0x4002ea:	add	rax, 0xf
0x4002ee:	shr	rax, 4
0x4002f2:	shl	rax, 4
0x4002f6:	mov	qword ptr [rbp - 0x78], rax
0x4002fa:	mov	rax, qword ptr [rbp - 0x78]
0x4002fe:	mov	edx, 0x63
0x400303:	mov	esi, 0x41
0x400308:	mov	rdi, rax
0x40030b:	call	0x500000
<Block for 0x4002d7, 57 bytes>
0x4002d7:	and	eax, 0xfff
0x4002dc:	sub	rax, 8
0x4002e0:	add	rax, rsp
0x4002e3:	or	qword ptr [rax], 0
0x4002e7:	mov	rax, rsp
0x4002ea:	add	rax, 0xf
0x4002ee:	shr	rax, 4
0x4002f2:	shl	rax, 4
0x4002f6:	mov	qword ptr [rbp - 0x78], rax
0x4002fa:	mov	rax, qword ptr [rbp - 0x78]
0x4002fe:	mov	edx, 0x63
0x400303:	mov	esi, 0x41
0x400308:	mov	rdi, rax
0x40030b:	call	0x500000
<Block for 0x4002a6, 5 bytes>
0x4002a6:	cmp	rsp, rdx
0x4002a9:	je	0x4002bd
<Block for 0x400310, 22 bytes>
0x400310:	mov	rax, qword ptr [rbp - 0x78]
0x400314:	add	rax, 0x63
0x400318:	mov	byte ptr [rax], 0
0x40031b:	mov	eax, dword ptr [rip + 0x7f]
0x400321:	cmp	eax, 5
0x400324:	jne	0x40032e
<Block for 0x400326, 30 bytes>
0x400326:	mov	rax, qword ptr [rbp - 0x78]
0x40032a:	mov	qword ptr [rbp - 0x80], rax
0x40032e:	lea	rax, [rbp - 0x70]
0x400332:	mov	edx, 0x63
0x400337:	mov	esi, 0x43
0x40033c:	mov	rdi, rax
0x40033f:	call	0x500000
<Block for 0x40032e, 22 bytes>
0x40032e:	lea	rax, [rbp - 0x70]
0x400332:	mov	edx, 0x63
0x400337:	mov	esi, 0x43
0x40033c:	mov	rdi, rax
0x40033f:	call	0x500000
<Block for 0x400344, 23 bytes>
0x400344:	mov	byte ptr [rbp - 0xd], 0
0x400348:	lea	rdx, [rbp - 0x70]
0x40034c:	mov	rax, qword ptr [rbp - 0x80]
0x400350:	mov	rsi, rdx
0x400353:	mov	rdi, rax
0x400356:	call	0x500008
<Block for 0x40035b, 12 bytes>
0x40035b:	mov	rax, qword ptr [rbp - 0x80]
0x40035f:	mov	rdi, rax
0x400362:	call	0x500010
<Block for 0x400367, 16 bytes>
0x400367:	nop	
0x400368:	mov	rax, qword ptr [rbp - 8]
0x40036c:	xor	rax, qword ptr fs:[0x28]
0x400375:	je	0x40037c
<Block for 0x40037c, 2 bytes>
0x40037c:	leave	
0x40037d:	ret	
<Block for 0x400377, 5 bytes>
0x400377:	call	0x500018
