<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002ec
<Block for 0x400028, 34 bytes>
0x400028:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40002f:	mov	edx, 0x180
0x400034:	mov	esi, 0x42
0x400039:	lea	rdi, [rip + 0x203]
0x400040:	mov	eax, 0
0x400045:	call	0x500000
<Block for 0x40004a, 22 bytes>
0x40004a:	mov	dword ptr [rbp - 0x54], eax
0x40004d:	lea	rdx, [rbp - 0x54]
0x400051:	lea	rax, [rbp - 0x50]
0x400055:	mov	rsi, rdx
0x400058:	mov	rdi, rax
0x40005b:	call	0x4003e2
<Block for 0x400060, 19 bytes>
0x400060:	lea	rdx, [rbp - 0x54]
0x400064:	lea	rax, [rbp - 0x50]
0x400068:	mov	rsi, rdx
0x40006b:	mov	rdi, rax
0x40006e:	call	0x4003e2
<Block for 0x400073, 19 bytes>
0x400073:	lea	rdx, [rbp - 0x54]
0x400077:	lea	rax, [rbp - 0x50]
0x40007b:	mov	rsi, rdx
0x40007e:	mov	rdi, rax
0x400081:	call	0x4003e2
<Block for 0x400086, 19 bytes>
0x400086:	lea	rdx, [rbp - 0x50]
0x40008a:	lea	rax, [rbp - 0x30]
0x40008e:	mov	rsi, rdx
0x400091:	mov	rdi, rax
0x400094:	call	0x40041c
<Block for 0x400099, 12 bytes>
0x400099:	lea	rax, [rbp - 0x30]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500008
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rax, [rbp - 0x30]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x40030c
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rax, [rbp - 0x50]
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x40030c
<Block for 0x4000bd, 16 bytes>
0x4000bd:	nop	
0x4000be:	mov	rax, qword ptr [rbp - 0x18]
0x4000c2:	xor	rax, qword ptr fs:[0x28]
0x4000cb:	je	0x400107
<Block for 0x400107, 7 bytes>
0x400107:	add	rsp, 0x58
0x40010b:	pop	rbx
0x40010c:	pop	rbp
0x40010d:	ret	
<Block for 0x4000cd, 2 bytes>
0x4000cd:	jmp	0x400102
<Block for 0x400102, 5 bytes>
0x400102:	call	0x500018
