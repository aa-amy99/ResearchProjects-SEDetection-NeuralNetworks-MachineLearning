<Block for 0x40010e, 40 bytes>
0x40010e:	endbr64	
0x400112:	push	rbp
0x400113:	mov	rbp, rsp
0x400116:	push	rbx
0x400117:	sub	rsp, 0x58
0x40011b:	mov	rax, qword ptr fs:[0x28]
0x400124:	mov	qword ptr [rbp - 0x18], rax
0x400128:	xor	eax, eax
0x40012a:	lea	rax, [rbp - 0x50]
0x40012e:	mov	rdi, rax
0x400131:	call	0x4002ec
<Block for 0x400136, 34 bytes>
0x400136:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40013d:	mov	edx, 0x180
0x400142:	mov	esi, 0x42
0x400147:	lea	rdi, [rip + 0xf5]
0x40014e:	mov	eax, 0
0x400153:	call	0x500000
<Block for 0x400158, 22 bytes>
0x400158:	mov	dword ptr [rbp - 0x54], eax
0x40015b:	lea	rdx, [rbp - 0x54]
0x40015f:	lea	rax, [rbp - 0x50]
0x400163:	mov	rsi, rdx
0x400166:	mov	rdi, rax
0x400169:	call	0x4003e2
<Block for 0x40016e, 19 bytes>
0x40016e:	lea	rdx, [rbp - 0x54]
0x400172:	lea	rax, [rbp - 0x50]
0x400176:	mov	rsi, rdx
0x400179:	mov	rdi, rax
0x40017c:	call	0x4003e2
<Block for 0x400181, 19 bytes>
0x400181:	lea	rdx, [rbp - 0x54]
0x400185:	lea	rax, [rbp - 0x50]
0x400189:	mov	rsi, rdx
0x40018c:	mov	rdi, rax
0x40018f:	call	0x4003e2
<Block for 0x400194, 19 bytes>
0x400194:	lea	rdx, [rbp - 0x50]
0x400198:	lea	rax, [rbp - 0x30]
0x40019c:	mov	rsi, rdx
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x40041c
<Block for 0x4001a7, 12 bytes>
0x4001a7:	lea	rax, [rbp - 0x30]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500020
<Block for 0x4001b3, 12 bytes>
0x4001b3:	lea	rax, [rbp - 0x30]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x40030c
<Block for 0x4001bf, 12 bytes>
0x4001bf:	lea	rax, [rbp - 0x50]
0x4001c3:	mov	rdi, rax
0x4001c6:	call	0x40030c
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 0x18]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x400215
<Block for 0x400215, 7 bytes>
0x400215:	add	rsp, 0x58
0x400219:	pop	rbx
0x40021a:	pop	rbp
0x40021b:	ret	
<Block for 0x4001db, 2 bytes>
0x4001db:	jmp	0x400210
<Block for 0x400210, 5 bytes>
0x400210:	call	0x500018
