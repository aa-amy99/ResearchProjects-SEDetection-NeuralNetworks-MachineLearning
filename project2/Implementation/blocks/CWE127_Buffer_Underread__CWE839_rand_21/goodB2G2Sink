<Block for 0x40021c, 40 bytes>
0x40021c:	endbr64	
0x400220:	push	rbp
0x400221:	mov	rbp, rsp
0x400224:	sub	rsp, 0x40
0x400228:	mov	dword ptr [rbp - 0x34], edi
0x40022b:	mov	rax, qword ptr fs:[0x28]
0x400234:	mov	qword ptr [rbp - 8], rax
0x400238:	xor	eax, eax
0x40023a:	mov	eax, dword ptr [rip + 0x1d4]
0x400240:	test	eax, eax
0x400242:	je	0x400296
<Block for 0x400296, 16 bytes>
0x400296:	nop	
0x400297:	mov	rax, qword ptr [rbp - 8]
0x40029b:	xor	rax, qword ptr fs:[0x28]
0x4002a4:	je	0x4002ab
<Block for 0x400244, 46 bytes>
0x400244:	mov	qword ptr [rbp - 0x30], 0
0x40024c:	mov	qword ptr [rbp - 0x28], 0
0x400254:	mov	qword ptr [rbp - 0x20], 0
0x40025c:	mov	qword ptr [rbp - 0x18], 0
0x400264:	mov	qword ptr [rbp - 0x10], 0
0x40026c:	cmp	dword ptr [rbp - 0x34], 0
0x400270:	js	0x40028a
<Block for 0x4002ab, 2 bytes>
0x4002ab:	leave	
0x4002ac:	ret	
<Block for 0x4002a6, 5 bytes>
0x4002a6:	call	0x500010
<Block for 0x40028a, 12 bytes>
0x40028a:	lea	rdi, [rip + 0x1c7]
0x400291:	call	0x500008
<Block for 0x400272, 6 bytes>
0x400272:	cmp	dword ptr [rbp - 0x34], 9
0x400276:	jg	0x40028a
<Block for 0x400278, 16 bytes>
0x400278:	mov	eax, dword ptr [rbp - 0x34]
0x40027b:	cdqe	
0x40027d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400281:	mov	edi, eax
0x400283:	call	0x500000
<Block for 0x400288, 2 bytes>
0x400288:	jmp	0x400296
