<Block for 0x4001a3, 25 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	push	rbx
0x4001ac:	sub	rsp, 0x18
0x4001b0:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4001b7:	call	0x500018
<Block for 0x4001bc, 7 bytes>
0x4001bc:	and	eax, 1
0x4001bf:	test	eax, eax
0x4001c1:	je	0x4001e0
<Block for 0x4001e0, 5 bytes>
0x4001e0:	call	0x500018
<Block for 0x4001c3, 5 bytes>
0x4001c3:	call	0x500018
<Block for 0x4001e5, 10 bytes>
0x4001e5:	shl	eax, 0x1e
0x4001e8:	mov	ebx, eax
0x4001ea:	call	0x500018
<Block for 0x4001c8, 10 bytes>
0x4001c8:	shl	eax, 0x1e
0x4001cb:	mov	ebx, eax
0x4001cd:	call	0x500018
<Block for 0x4001ef, 10 bytes>
0x4001ef:	shl	eax, 0xf
0x4001f2:	xor	ebx, eax
0x4001f4:	call	0x500018
<Block for 0x4001d2, 10 bytes>
0x4001d2:	shl	eax, 0xf
0x4001d5:	xor	ebx, eax
0x4001d7:	call	0x500018
<Block for 0x4001f9, 27 bytes>
0x4001f9:	xor	eax, ebx
0x4001fb:	not	eax
0x4001fd:	mov	dword ptr [rbp - 0x14], eax
0x400200:	mov	dword ptr [rip + 0x206], 0
0x40020a:	mov	eax, dword ptr [rbp - 0x14]
0x40020d:	mov	edi, eax
0x40020f:	call	0x400104
<Block for 0x4001dc, 4 bytes>
0x4001dc:	xor	eax, ebx
0x4001de:	jmp	0x4001fd
<Block for 0x400214, 8 bytes>
0x400214:	nop	
0x400215:	add	rsp, 0x18
0x400219:	pop	rbx
0x40021a:	pop	rbp
0x40021b:	ret	
<Block for 0x4001fd, 23 bytes>
0x4001fd:	mov	dword ptr [rbp - 0x14], eax
0x400200:	mov	dword ptr [rip + 0x206], 0
0x40020a:	mov	eax, dword ptr [rbp - 0x14]
0x40020d:	mov	edi, eax
0x40020f:	call	0x400104
