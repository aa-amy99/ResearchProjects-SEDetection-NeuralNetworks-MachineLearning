<Block for 0x400089, 22 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x10
0x400095:	mov	edi, 0x64
0x40009a:	call	0x500000
<Block for 0x40009f, 11 bytes>
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	cmp	qword ptr [rbp - 8], 0
0x4000a8:	jne	0x4000b4
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	edi, 0xffffffff
0x4000af:	call	0x500008
<Block for 0x4000b4, 45 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	mov	byte ptr [rax], 0
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	movabs	rcx, 0x7453206465786946
0x4000c9:	mov	qword ptr [rax], rcx
0x4000cc:	mov	dword ptr [rax + 8], 0x676e6972
0x4000d3:	mov	byte ptr [rax + 0xc], 0
0x4000d7:	mov	qword ptr [rbp - 0x10], 0
0x4000df:	jmp	0x400106
<Block for 0x400106, 12 bytes>
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500020
<Block for 0x400112, 6 bytes>
0x400112:	cmp	qword ptr [rbp - 0x10], rax
0x400116:	jb	0x4000e1
<Block for 0x4000e1, 18 bytes>
0x4000e1:	mov	rdx, qword ptr [rbp - 8]
0x4000e5:	mov	rax, qword ptr [rbp - 0x10]
0x4000e9:	add	rax, rdx
0x4000ec:	movzx	eax, byte ptr [rax]
0x4000ef:	cmp	al, 0x53
0x4000f1:	jne	0x400101
<Block for 0x400118, 12 bytes>
0x400118:	mov	rax, qword ptr [rbp - 8]
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500018
<Block for 0x4000f3, 12 bytes>
0x4000f3:	lea	rdi, [rip + 0xec]
0x4000fa:	call	0x500010
<Block for 0x400101, 17 bytes>
0x400101:	add	qword ptr [rbp - 0x10], 1
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500020
<Block for 0x400124, 4 bytes>
0x400124:	nop	
0x400125:	nop	
0x400126:	leave	
0x400127:	ret	
<Block for 0x4000ff, 2 bytes>
0x4000ff:	jmp	0x400118
