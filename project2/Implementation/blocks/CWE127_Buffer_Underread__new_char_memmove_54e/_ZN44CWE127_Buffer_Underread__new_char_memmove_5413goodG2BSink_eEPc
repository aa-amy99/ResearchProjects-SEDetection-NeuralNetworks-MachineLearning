<Block for 0x400078, 53 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	add	rsp, -0x80
0x400084:	mov	qword ptr [rbp - 0x78], rdi
0x400088:	mov	rax, qword ptr fs:[0x28]
0x400091:	mov	qword ptr [rbp - 8], rax
0x400095:	xor	eax, eax
0x400097:	lea	rax, [rbp - 0x70]
0x40009b:	mov	edx, 0x63
0x4000a0:	mov	esi, 0x43
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500000
<Block for 0x4000ad, 28 bytes>
0x4000ad:	mov	byte ptr [rbp - 0xd], 0
0x4000b1:	mov	rcx, qword ptr [rbp - 0x78]
0x4000b5:	lea	rax, [rbp - 0x70]
0x4000b9:	mov	edx, 0x64
0x4000be:	mov	rsi, rcx
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
<Block for 0x4000c9, 16 bytes>
0x4000c9:	mov	byte ptr [rbp - 0xd], 0
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500010
<Block for 0x4000d9, 16 bytes>
0x4000d9:	nop	
0x4000da:	mov	rax, qword ptr [rbp - 8]
0x4000de:	xor	rax, qword ptr fs:[0x28]
0x4000e7:	je	0x4000ee
<Block for 0x4000ee, 2 bytes>
0x4000ee:	leave	
0x4000ef:	ret	
<Block for 0x4000e9, 5 bytes>
0x4000e9:	call	0x500018
