<Block for 0x40025b, 154 bytes>
0x40025b:	endbr64	
0x40025f:	push	rbp
0x400260:	mov	rbp, rsp
0x400263:	sub	rsp, 0xa0
0x40026a:	mov	rax, qword ptr fs:[0x28]
0x400273:	mov	qword ptr [rbp - 8], rax
0x400277:	xor	eax, eax
0x400279:	mov	qword ptr [rbp - 0x70], 0
0x400281:	mov	qword ptr [rbp - 0x68], 0
0x400289:	mov	qword ptr [rbp - 0x60], 0
0x400291:	mov	qword ptr [rbp - 0x58], 0
0x400299:	mov	qword ptr [rbp - 0x50], 0
0x4002a1:	mov	qword ptr [rbp - 0x48], 0
0x4002a9:	mov	qword ptr [rbp - 0x40], 0
0x4002b1:	mov	qword ptr [rbp - 0x38], 0
0x4002b9:	mov	qword ptr [rbp - 0x30], 0
0x4002c1:	mov	qword ptr [rbp - 0x28], 0
0x4002c9:	mov	qword ptr [rbp - 0x20], 0
0x4002d1:	mov	qword ptr [rbp - 0x18], 0
0x4002d9:	mov	dword ptr [rbp - 0x10], 0
0x4002e0:	lea	rax, [rbp - 0x70]
0x4002e4:	mov	qword ptr [rbp - 0x88], rax
0x4002eb:	mov	eax, 0
0x4002f0:	call	0x500000
<Block for 0x4002f5, 8 bytes>
0x4002f5:	test	eax, eax
0x4002f7:	je	0x4003ce
<Block for 0x4003ce, 15 bytes>
0x4003ce:	mov	rax, qword ptr [rbp - 0x88]
0x4003d5:	mov	rdi, rax
0x4003d8:	call	0x500008
<Block for 0x4002fd, 15 bytes>
0x4002fd:	mov	rax, qword ptr [rbp - 0x88]
0x400304:	mov	rdi, rax
0x400307:	call	0x500008
<Block for 0x4003dd, 23 bytes>
0x4003dd:	mov	qword ptr [rbp - 0x80], rax
0x4003e1:	mov	eax, 0x64
0x4003e6:	sub	rax, qword ptr [rbp - 0x80]
0x4003ea:	cmp	rax, 1
0x4003ee:	jbe	0x40048f
<Block for 0x40030c, 23 bytes>
0x40030c:	mov	qword ptr [rbp - 0x78], rax
0x400310:	mov	eax, 0x64
0x400315:	sub	rax, qword ptr [rbp - 0x78]
0x400319:	cmp	rax, 1
0x40031d:	jbe	0x40048f
<Block for 0x40048f, 10 bytes>
0x40048f:	mov	eax, 0
0x400494:	call	0x500000
<Block for 0x4003f4, 47 bytes>
0x4003f4:	mov	rax, qword ptr [rip + 0xffc15]
0x4003fb:	mov	rdx, qword ptr [rbp - 0x80]
0x4003ff:	mov	ecx, 0x64
0x400404:	sub	ecx, edx
0x400406:	mov	edx, ecx
0x400408:	mov	esi, edx
0x40040a:	mov	rcx, qword ptr [rbp - 0x88]
0x400411:	mov	rdx, qword ptr [rbp - 0x80]
0x400415:	add	rcx, rdx
0x400418:	mov	rdx, rax
0x40041b:	mov	rdi, rcx
0x40041e:	call	0x500018
<Block for 0x400323, 47 bytes>
0x400323:	mov	rax, qword ptr [rip + 0xffce6]
0x40032a:	mov	rdx, qword ptr [rbp - 0x78]
0x40032e:	mov	ecx, 0x64
0x400333:	sub	ecx, edx
0x400335:	mov	edx, ecx
0x400337:	mov	esi, edx
0x400339:	mov	rcx, qword ptr [rbp - 0x88]
0x400340:	mov	rdx, qword ptr [rbp - 0x78]
0x400344:	add	rcx, rdx
0x400347:	mov	rdx, rax
0x40034a:	mov	rdi, rcx
0x40034d:	call	0x500018
<Block for 0x400499, 4 bytes>
0x400499:	test	eax, eax
0x40049b:	je	0x40051a
<Block for 0x400423, 5 bytes>
0x400423:	test	rax, rax
0x400426:	je	0x400472
<Block for 0x400352, 5 bytes>
0x400352:	test	rax, rax
0x400355:	je	0x4003ac
<Block for 0x40051a, 34 bytes>
0x40051a:	lea	rdx, [rbp - 0x9c]
0x400521:	mov	rax, qword ptr [rbp - 0x88]
0x400528:	lea	rsi, [rip + 0x239]
0x40052f:	mov	rdi, rax
0x400532:	mov	eax, 0
0x400537:	call	0x500028
<Block for 0x40049d, 34 bytes>
0x40049d:	lea	rdx, [rbp - 0x9c]
0x4004a4:	mov	rax, qword ptr [rbp - 0x88]
0x4004ab:	lea	rsi, [rip + 0x2b6]
0x4004b2:	mov	rdi, rax
0x4004b5:	mov	eax, 0
0x4004ba:	call	0x500028
<Block for 0x400472, 12 bytes>
0x400472:	lea	rdi, [rip + 0x2e0]
0x400479:	call	0x500020
<Block for 0x400428, 15 bytes>
0x400428:	mov	rax, qword ptr [rbp - 0x88]
0x40042f:	mov	rdi, rax
0x400432:	call	0x500008
<Block for 0x4003ac, 12 bytes>
0x4003ac:	lea	rdi, [rip + 0x3a6]
0x4003b3:	call	0x500020
<Block for 0x400357, 15 bytes>
0x400357:	mov	rax, qword ptr [rbp - 0x88]
0x40035e:	mov	rdi, rax
0x400361:	call	0x500008
<Block for 0x40053c, 5 bytes>
0x40053c:	cmp	eax, 1
0x40053f:	jne	0x40058d
<Block for 0x4004bf, 9 bytes>
0x4004bf:	cmp	eax, 1
0x4004c2:	jne	0x40058d
<Block for 0x40047e, 27 bytes>
0x40047e:	mov	rdx, qword ptr [rbp - 0x88]
0x400485:	mov	rax, qword ptr [rbp - 0x80]
0x400489:	add	rax, rdx
0x40048c:	mov	byte ptr [rax], 0
0x40048f:	mov	eax, 0
0x400494:	call	0x500000
<Block for 0x400437, 11 bytes>
0x400437:	mov	qword ptr [rbp - 0x80], rax
0x40043b:	cmp	qword ptr [rbp - 0x80], 0
0x400440:	je	0x40048f
<Block for 0x4003b8, 22 bytes>
0x4003b8:	mov	rdx, qword ptr [rbp - 0x88]
0x4003bf:	mov	rax, qword ptr [rbp - 0x78]
0x4003c3:	add	rax, rdx
0x4003c6:	mov	byte ptr [rax], 0
0x4003c9:	jmp	0x40048f
<Block for 0x400366, 15 bytes>
0x400366:	mov	qword ptr [rbp - 0x78], rax
0x40036a:	cmp	qword ptr [rbp - 0x78], 0
0x40036f:	je	0x40048f
<Block for 0x400541, 13 bytes>
0x400541:	mov	eax, dword ptr [rbp - 0x9c]
0x400547:	cmp	eax, 0x270f
0x40054c:	jg	0x40058d
<Block for 0x40058d, 16 bytes>
0x40058d:	nop	
0x40058e:	mov	rax, qword ptr [rbp - 8]
0x400592:	xor	rax, qword ptr fs:[0x28]
0x40059b:	je	0x4005a2
<Block for 0x4004c8, 17 bytes>
0x4004c8:	mov	eax, dword ptr [rbp - 0x9c]
0x4004ce:	cmp	eax, 0x270f
0x4004d3:	jg	0x40058d
<Block for 0x400442, 25 bytes>
0x400442:	mov	rax, qword ptr [rbp - 0x80]
0x400446:	lea	rdx, [rax - 1]
0x40044a:	mov	rax, qword ptr [rbp - 0x88]
0x400451:	add	rax, rdx
0x400454:	movzx	eax, byte ptr [rax]
0x400457:	cmp	al, 0xa
0x400459:	jne	0x40048f
<Block for 0x400375, 29 bytes>
0x400375:	mov	rax, qword ptr [rbp - 0x78]
0x400379:	lea	rdx, [rax - 1]
0x40037d:	mov	rax, qword ptr [rbp - 0x88]
0x400384:	add	rax, rdx
0x400387:	movzx	eax, byte ptr [rax]
0x40038a:	cmp	al, 0xa
0x40038c:	jne	0x40048f
<Block for 0x40054e, 22 bytes>
0x40054e:	mov	dword ptr [rbp - 0x8c], 0
0x400558:	mov	dword ptr [rbp - 0x90], 0
0x400562:	jmp	0x400572
<Block for 0x4005a2, 2 bytes>
0x4005a2:	leave	
0x4005a3:	ret	
<Block for 0x40059d, 5 bytes>
0x40059d:	call	0x500038
<Block for 0x4004d9, 22 bytes>
0x4004d9:	mov	dword ptr [rbp - 0x94], 0
0x4004e3:	mov	dword ptr [rbp - 0x98], 0
0x4004ed:	jmp	0x4004fd
<Block for 0x40045b, 23 bytes>
0x40045b:	mov	rax, qword ptr [rbp - 0x80]
0x40045f:	lea	rdx, [rax - 1]
0x400463:	mov	rax, qword ptr [rbp - 0x88]
0x40046a:	add	rax, rdx
0x40046d:	mov	byte ptr [rax], 0
0x400470:	jmp	0x40048f
<Block for 0x400392, 26 bytes>
0x400392:	mov	rax, qword ptr [rbp - 0x78]
0x400396:	lea	rdx, [rax - 1]
0x40039a:	mov	rax, qword ptr [rbp - 0x88]
0x4003a1:	add	rax, rdx
0x4003a4:	mov	byte ptr [rax], 0
0x4003a7:	jmp	0x40048f
<Block for 0x400572, 14 bytes>
0x400572:	mov	eax, dword ptr [rbp - 0x9c]
0x400578:	cmp	dword ptr [rbp - 0x90], eax
0x40057e:	jl	0x400564
<Block for 0x4004fd, 14 bytes>
0x4004fd:	mov	eax, dword ptr [rbp - 0x9c]
0x400503:	cmp	dword ptr [rbp - 0x98], eax
0x400509:	jl	0x4004ef
<Block for 0x400564, 28 bytes>
0x400564:	add	dword ptr [rbp - 0x8c], 1
0x40056b:	add	dword ptr [rbp - 0x90], 1
0x400572:	mov	eax, dword ptr [rbp - 0x9c]
0x400578:	cmp	dword ptr [rbp - 0x90], eax
0x40057e:	jl	0x400564
<Block for 0x400580, 13 bytes>
0x400580:	mov	eax, dword ptr [rbp - 0x8c]
0x400586:	mov	edi, eax
0x400588:	call	0x500030
<Block for 0x4004ef, 28 bytes>
0x4004ef:	add	dword ptr [rbp - 0x94], 1
0x4004f6:	add	dword ptr [rbp - 0x98], 1
0x4004fd:	mov	eax, dword ptr [rbp - 0x9c]
0x400503:	cmp	dword ptr [rbp - 0x98], eax
0x400509:	jl	0x4004ef
<Block for 0x40050b, 13 bytes>
0x40050b:	mov	eax, dword ptr [rbp - 0x94]
0x400511:	mov	edi, eax
0x400513:	call	0x500030
<Block for 0x400518, 2 bytes>
0x400518:	jmp	0x40058d
