<Block for 0x400000, 151 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0x80], rax
0x40008d:	mov	eax, 0
0x400092:	call	0x500000
<Block for 0x400097, 8 bytes>
0x400097:	test	eax, eax
0x400099:	je	0x400150
<Block for 0x400150, 23 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0x80]
0x400154:	mov	word ptr [rax], 0x3531
0x400159:	mov	byte ptr [rax + 2], 0
0x40015d:	mov	eax, 0
0x400162:	call	0x500000
<Block for 0x40009f, 12 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 0x80]
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500008
<Block for 0x400167, 4 bytes>
0x400167:	test	eax, eax
0x400169:	je	0x4001d4
<Block for 0x4000ab, 23 bytes>
0x4000ab:	mov	qword ptr [rbp - 0x78], rax
0x4000af:	mov	eax, 0x64
0x4000b4:	sub	rax, qword ptr [rbp - 0x78]
0x4000b8:	cmp	rax, 1
0x4000bc:	jbe	0x40015d
<Block for 0x4001d4, 31 bytes>
0x4001d4:	lea	rdx, [rbp - 0x94]
0x4001db:	mov	rax, qword ptr [rbp - 0x80]
0x4001df:	lea	rsi, [rip + 0x582]
0x4001e6:	mov	rdi, rax
0x4001e9:	mov	eax, 0
0x4001ee:	call	0x500028
<Block for 0x40016b, 31 bytes>
0x40016b:	lea	rdx, [rbp - 0x94]
0x400172:	mov	rax, qword ptr [rbp - 0x80]
0x400176:	lea	rsi, [rip + 0x5eb]
0x40017d:	mov	rdi, rax
0x400180:	mov	eax, 0
0x400185:	call	0x500028
<Block for 0x40015d, 10 bytes>
0x40015d:	mov	eax, 0
0x400162:	call	0x500000
<Block for 0x4000c2, 44 bytes>
0x4000c2:	mov	rax, qword ptr [rip + 0xfff47]
0x4000c9:	mov	rdx, qword ptr [rbp - 0x78]
0x4000cd:	mov	ecx, 0x64
0x4000d2:	sub	ecx, edx
0x4000d4:	mov	edx, ecx
0x4000d6:	mov	esi, edx
0x4000d8:	mov	rcx, qword ptr [rbp - 0x80]
0x4000dc:	mov	rdx, qword ptr [rbp - 0x78]
0x4000e0:	add	rcx, rdx
0x4000e3:	mov	rdx, rax
0x4000e6:	mov	rdi, rcx
0x4000e9:	call	0x500018
<Block for 0x4001f3, 5 bytes>
0x4001f3:	cmp	eax, 1
0x4001f6:	jne	0x400244
<Block for 0x40018a, 9 bytes>
0x40018a:	cmp	eax, 1
0x40018d:	jne	0x400244
<Block for 0x4000ee, 5 bytes>
0x4000ee:	test	rax, rax
0x4000f1:	je	0x400134
<Block for 0x4001f8, 13 bytes>
0x4001f8:	mov	eax, dword ptr [rbp - 0x94]
0x4001fe:	cmp	eax, 0x270f
0x400203:	jg	0x400244
<Block for 0x400244, 16 bytes>
0x400244:	nop	
0x400245:	mov	rax, qword ptr [rbp - 8]
0x400249:	xor	rax, qword ptr fs:[0x28]
0x400252:	je	0x400259
<Block for 0x400193, 22 bytes>
0x400193:	mov	dword ptr [rbp - 0x8c], 0
0x40019d:	mov	dword ptr [rbp - 0x90], 0
0x4001a7:	jmp	0x4001b7
<Block for 0x400134, 12 bytes>
0x400134:	lea	rdi, [rip + 0x61e]
0x40013b:	call	0x500020
<Block for 0x4000f3, 12 bytes>
0x4000f3:	mov	rax, qword ptr [rbp - 0x80]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x400205, 22 bytes>
0x400205:	mov	dword ptr [rbp - 0x84], 0
0x40020f:	mov	dword ptr [rbp - 0x88], 0
0x400219:	jmp	0x400229
<Block for 0x400259, 2 bytes>
0x400259:	leave	
0x40025a:	ret	
<Block for 0x400254, 5 bytes>
0x400254:	call	0x500038
<Block for 0x4001b7, 14 bytes>
0x4001b7:	mov	eax, dword ptr [rbp - 0x94]
0x4001bd:	cmp	dword ptr [rbp - 0x90], eax
0x4001c3:	jl	0x4001a9
<Block for 0x400140, 16 bytes>
0x400140:	mov	rdx, qword ptr [rbp - 0x80]
0x400144:	mov	rax, qword ptr [rbp - 0x78]
0x400148:	add	rax, rdx
0x40014b:	mov	byte ptr [rax], 0
0x40014e:	jmp	0x40015d
<Block for 0x4000ff, 11 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x78], rax
0x400103:	cmp	qword ptr [rbp - 0x78], 0
0x400108:	je	0x40015d
<Block for 0x400229, 14 bytes>
0x400229:	mov	eax, dword ptr [rbp - 0x94]
0x40022f:	cmp	dword ptr [rbp - 0x88], eax
0x400235:	jl	0x40021b
<Block for 0x4001a9, 28 bytes>
0x4001a9:	add	dword ptr [rbp - 0x8c], 1
0x4001b0:	add	dword ptr [rbp - 0x90], 1
0x4001b7:	mov	eax, dword ptr [rbp - 0x94]
0x4001bd:	cmp	dword ptr [rbp - 0x90], eax
0x4001c3:	jl	0x4001a9
<Block for 0x4001c5, 13 bytes>
0x4001c5:	mov	eax, dword ptr [rbp - 0x8c]
0x4001cb:	mov	edi, eax
0x4001cd:	call	0x500030
<Block for 0x40010a, 22 bytes>
0x40010a:	mov	rax, qword ptr [rbp - 0x78]
0x40010e:	lea	rdx, [rax - 1]
0x400112:	mov	rax, qword ptr [rbp - 0x80]
0x400116:	add	rax, rdx
0x400119:	movzx	eax, byte ptr [rax]
0x40011c:	cmp	al, 0xa
0x40011e:	jne	0x40015d
<Block for 0x40021b, 28 bytes>
0x40021b:	add	dword ptr [rbp - 0x84], 1
0x400222:	add	dword ptr [rbp - 0x88], 1
0x400229:	mov	eax, dword ptr [rbp - 0x94]
0x40022f:	cmp	dword ptr [rbp - 0x88], eax
0x400235:	jl	0x40021b
<Block for 0x400237, 13 bytes>
0x400237:	mov	eax, dword ptr [rbp - 0x84]
0x40023d:	mov	edi, eax
0x40023f:	call	0x500030
<Block for 0x4001d2, 2 bytes>
0x4001d2:	jmp	0x400244
<Block for 0x400120, 20 bytes>
0x400120:	mov	rax, qword ptr [rbp - 0x78]
0x400124:	lea	rdx, [rax - 1]
0x400128:	mov	rax, qword ptr [rbp - 0x80]
0x40012c:	add	rax, rdx
0x40012f:	mov	byte ptr [rax], 0
0x400132:	jmp	0x40015d
