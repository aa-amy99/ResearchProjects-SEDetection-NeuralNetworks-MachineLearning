<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xd8], 0
0x400029:	mov	rax, qword ptr [rbp - 0xd8]
0x400030:	mov	rdi, rax
0x400033:	call	0x500000
<Block for 0x400038, 32 bytes>
0x400038:	mov	qword ptr [rbp - 0xd8], rax
0x40003f:	lea	rax, [rbp - 0xd0]
0x400046:	mov	edx, 0xc7
0x40004b:	mov	esi, 0x43
0x400050:	mov	rdi, rax
0x400053:	call	0x500008
<Block for 0x400058, 29 bytes>
0x400058:	mov	byte ptr [rbp - 9], 0
0x40005c:	mov	rdx, qword ptr [rbp - 0xd8]
0x400063:	lea	rax, [rbp - 0xd0]
0x40006a:	mov	rsi, rdx
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
<Block for 0x400075, 15 bytes>
0x400075:	lea	rax, [rbp - 0xd0]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500018
<Block for 0x400084, 16 bytes>
0x400084:	nop	
0x400085:	mov	rax, qword ptr [rbp - 8]
0x400089:	xor	rax, qword ptr fs:[0x28]
0x400092:	je	0x400099
<Block for 0x400099, 2 bytes>
0x400099:	leave	
0x40009a:	ret	
<Block for 0x400094, 5 bytes>
0x400094:	call	0x500020
