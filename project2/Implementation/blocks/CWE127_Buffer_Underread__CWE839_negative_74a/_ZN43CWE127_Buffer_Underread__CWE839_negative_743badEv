<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4004d6
<Block for 0x40002b, 46 bytes>
0x40002b:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x400035:	mov	dword ptr [rbp - 0x84], 0xfffffffb
0x40003f:	mov	dword ptr [rbp - 0x50], 0
0x400046:	lea	rdx, [rbp - 0x50]
0x40004a:	lea	rax, [rbp - 0x80]
0x40004e:	mov	rsi, rdx
0x400051:	mov	rdi, rax
0x400054:	call	0x40069e
<Block for 0x400059, 34 bytes>
0x400059:	mov	edx, dword ptr [rbp - 0x84]
0x40005f:	mov	dword ptr [rax], edx
0x400061:	mov	dword ptr [rbp - 0x50], 1
0x400068:	lea	rdx, [rbp - 0x50]
0x40006c:	lea	rax, [rbp - 0x80]
0x400070:	mov	rsi, rdx
0x400073:	mov	rdi, rax
0x400076:	call	0x40069e
<Block for 0x40007b, 34 bytes>
0x40007b:	mov	edx, dword ptr [rbp - 0x84]
0x400081:	mov	dword ptr [rax], edx
0x400083:	mov	dword ptr [rbp - 0x50], 2
0x40008a:	lea	rdx, [rbp - 0x50]
0x40008e:	lea	rax, [rbp - 0x80]
0x400092:	mov	rsi, rdx
0x400095:	mov	rdi, rax
0x400098:	call	0x40069e
<Block for 0x40009d, 27 bytes>
0x40009d:	mov	edx, dword ptr [rbp - 0x84]
0x4000a3:	mov	dword ptr [rax], edx
0x4000a5:	lea	rdx, [rbp - 0x80]
0x4000a9:	lea	rax, [rbp - 0x50]
0x4000ad:	mov	rsi, rdx
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x400516
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rax, [rbp - 0x50]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500000
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rax, [rbp - 0x50]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x4004f6
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rax, [rbp - 0x80]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x4004f6
<Block for 0x4000dc, 16 bytes>
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x400126
<Block for 0x400126, 10 bytes>
0x400126:	add	rsp, 0x88
0x40012d:	pop	rbx
0x40012e:	pop	rbp
0x40012f:	ret	
<Block for 0x4000ec, 2 bytes>
0x4000ec:	jmp	0x400121
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500010
