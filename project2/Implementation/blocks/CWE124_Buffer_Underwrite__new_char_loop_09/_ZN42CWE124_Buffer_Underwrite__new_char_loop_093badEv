<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, dword ptr [rip + 0xfffd1]
0x40002f:	test	eax, eax
0x400031:	je	0x400071
<Block for 0x400071, 22 bytes>
0x400071:	lea	rax, [rbp - 0x70]
0x400075:	mov	edx, 0x63
0x40007a:	mov	esi, 0x43
0x40007f:	mov	rdi, rax
0x400082:	call	0x500010
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x64
0x400038:	call	0x500008
<Block for 0x400087, 19 bytes>
0x400087:	mov	byte ptr [rbp - 0xd], 0
0x40008b:	mov	qword ptr [rbp - 0x80], 0
0x400093:	cmp	qword ptr [rbp - 0x80], 0x63
0x400098:	ja	0x4000bf
<Block for 0x40003d, 26 bytes>
0x40003d:	mov	qword ptr [rbp - 0x78], rax
0x400041:	mov	rax, qword ptr [rbp - 0x78]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
<Block for 0x40009a, 37 bytes>
0x40009a:	mov	rdx, qword ptr [rbp - 0x88]
0x4000a1:	mov	rax, qword ptr [rbp - 0x80]
0x4000a5:	add	rdx, rax
0x4000a8:	lea	rcx, [rbp - 0x70]
0x4000ac:	mov	rax, qword ptr [rbp - 0x80]
0x4000b0:	add	rax, rcx
0x4000b3:	movzx	eax, byte ptr [rax]
0x4000b6:	mov	byte ptr [rdx], al
0x4000b8:	add	qword ptr [rbp - 0x80], 1
0x4000bd:	jmp	0x400093
<Block for 0x4000bf, 29 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 0x88]
0x4000c6:	add	rax, 0x63
0x4000ca:	mov	byte ptr [rax], 0
0x4000cd:	mov	rax, qword ptr [rbp - 0x88]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500018
<Block for 0x400057, 48 bytes>
0x400057:	mov	rax, qword ptr [rbp - 0x78]
0x40005b:	add	rax, 0x63
0x40005f:	mov	byte ptr [rax], 0
0x400062:	mov	rax, qword ptr [rbp - 0x78]
0x400066:	sub	rax, 8
0x40006a:	mov	qword ptr [rbp - 0x88], rax
0x400071:	lea	rax, [rbp - 0x70]
0x400075:	mov	edx, 0x63
0x40007a:	mov	esi, 0x43
0x40007f:	mov	rdi, rax
0x400082:	call	0x500010
<Block for 0x400093, 7 bytes>
0x400093:	cmp	qword ptr [rbp - 0x80], 0x63
0x400098:	ja	0x4000bf
<Block for 0x4000dc, 16 bytes>
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 8]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x4000f1
<Block for 0x4000f1, 2 bytes>
0x4000f1:	leave	
0x4000f2:	ret	
<Block for 0x4000ec, 5 bytes>
0x4000ec:	call	0x500020
