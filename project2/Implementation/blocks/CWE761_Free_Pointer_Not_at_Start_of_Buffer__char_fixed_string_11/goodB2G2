<Block for 0x400150, 22 bytes>
0x400150:	endbr64	
0x400154:	push	rbp
0x400155:	mov	rbp, rsp
0x400158:	sub	rsp, 0x10
0x40015c:	mov	edi, 0x64
0x400161:	call	0x500000
<Block for 0x400166, 11 bytes>
0x400166:	mov	qword ptr [rbp - 8], rax
0x40016a:	cmp	qword ptr [rbp - 8], 0
0x40016f:	jne	0x40017b
<Block for 0x400171, 10 bytes>
0x400171:	mov	edi, 0xffffffff
0x400176:	call	0x500008
<Block for 0x40017b, 45 bytes>
0x40017b:	mov	rax, qword ptr [rbp - 8]
0x40017f:	mov	byte ptr [rax], 0
0x400182:	mov	rax, qword ptr [rbp - 8]
0x400186:	movabs	rcx, 0x7453206465786946
0x400190:	mov	qword ptr [rax], rcx
0x400193:	mov	dword ptr [rax + 8], 0x676e6972
0x40019a:	mov	byte ptr [rax + 0xc], 0
0x40019e:	mov	eax, 0
0x4001a3:	call	0x500010
<Block for 0x4001a8, 4 bytes>
0x4001a8:	test	eax, eax
0x4001aa:	je	0x4001f9
<Block for 0x4001f9, 3 bytes>
0x4001f9:	nop	
0x4001fa:	leave	
0x4001fb:	ret	
<Block for 0x4001ac, 10 bytes>
0x4001ac:	mov	qword ptr [rbp - 0x10], 0
0x4001b4:	jmp	0x4001db
<Block for 0x4001db, 12 bytes>
0x4001db:	mov	rax, qword ptr [rbp - 8]
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500030
<Block for 0x4001e7, 6 bytes>
0x4001e7:	cmp	qword ptr [rbp - 0x10], rax
0x4001eb:	jb	0x4001b6
<Block for 0x4001b6, 18 bytes>
0x4001b6:	mov	rdx, qword ptr [rbp - 8]
0x4001ba:	mov	rax, qword ptr [rbp - 0x10]
0x4001be:	add	rax, rdx
0x4001c1:	movzx	eax, byte ptr [rax]
0x4001c4:	cmp	al, 0x53
0x4001c6:	jne	0x4001d6
<Block for 0x4001ed, 12 bytes>
0x4001ed:	mov	rax, qword ptr [rbp - 8]
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500020
<Block for 0x4001c8, 12 bytes>
0x4001c8:	lea	rdi, [rip + 0x4c]
0x4001cf:	call	0x500018
<Block for 0x4001d6, 17 bytes>
0x4001d6:	add	qword ptr [rbp - 0x10], 1
0x4001db:	mov	rax, qword ptr [rbp - 8]
0x4001df:	mov	rdi, rax
0x4001e2:	call	0x500030
<Block for 0x4001d4, 2 bytes>
0x4001d4:	jmp	0x4001ed
