<Block for 0x400082, 49 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	add	rsp, -0x80
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	lea	rax, [rbp - 0x70]
0x4000a1:	mov	edx, 0x63
0x4000a6:	mov	esi, 0x41
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x4000b3, 28 bytes>
0x4000b3:	mov	byte ptr [rbp - 0xd], 0
0x4000b7:	lea	rax, [rbp - 0x70]
0x4000bb:	sub	rax, 8
0x4000bf:	mov	qword ptr [rbp - 0x78], rax
0x4000c3:	mov	rax, qword ptr [rbp - 0x78]
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x400000
<Block for 0x4000cf, 16 bytes>
0x4000cf:	nop	
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	xor	rax, qword ptr fs:[0x28]
0x4000dd:	je	0x4000e4
<Block for 0x4000e4, 2 bytes>
0x4000e4:	leave	
0x4000e5:	ret	
<Block for 0x4000df, 5 bytes>
0x4000df:	call	0x500020
