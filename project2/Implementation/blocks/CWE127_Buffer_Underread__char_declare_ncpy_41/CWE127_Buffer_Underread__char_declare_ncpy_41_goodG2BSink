<Block for 0x4000e6, 53 bytes>
0x4000e6:	endbr64	
0x4000ea:	push	rbp
0x4000eb:	mov	rbp, rsp
0x4000ee:	add	rsp, -0x80
0x4000f2:	mov	qword ptr [rbp - 0x78], rdi
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	lea	rax, [rbp - 0x70]
0x400109:	mov	edx, 0x63
0x40010e:	mov	esi, 0x43
0x400113:	mov	rdi, rax
0x400116:	call	0x500000
<Block for 0x40011b, 16 bytes>
0x40011b:	mov	byte ptr [rbp - 0xd], 0
0x40011f:	lea	rax, [rbp - 0x70]
0x400123:	mov	rdi, rax
0x400126:	call	0x500008
<Block for 0x40012b, 22 bytes>
0x40012b:	mov	rdx, rax
0x40012e:	mov	rcx, qword ptr [rbp - 0x78]
0x400132:	lea	rax, [rbp - 0x70]
0x400136:	mov	rsi, rcx
0x400139:	mov	rdi, rax
0x40013c:	call	0x500010
<Block for 0x400141, 16 bytes>
0x400141:	mov	byte ptr [rbp - 0xd], 0
0x400145:	lea	rax, [rbp - 0x70]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500018
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x400166
<Block for 0x400166, 2 bytes>
0x400166:	leave	
0x400167:	ret	
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500020
