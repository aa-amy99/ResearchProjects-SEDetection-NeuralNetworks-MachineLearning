<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x10], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0xc], 0
0x400029:	jmp	0x40004e
<Block for 0x40004e, 6 bytes>
0x40004e:	cmp	dword ptr [rbp - 0xc], 0
0x400052:	jle	0x40002b
<Block for 0x40002b, 31 bytes>
0x40002b:	mov	rax, qword ptr [rip + 0xfffce]
0x400032:	lea	rdx, [rbp - 0x10]
0x400036:	lea	rsi, [rip + 0xc3]
0x40003d:	mov	rdi, rax
0x400040:	mov	eax, 0
0x400045:	call	0x500008
<Block for 0x400054, 8 bytes>
0x400054:	mov	eax, dword ptr [rbp - 0x10]
0x400057:	cmp	eax, 5
0x40005a:	jg	0x40007b
<Block for 0x40004a, 10 bytes>
0x40004a:	add	dword ptr [rbp - 0xc], 1
0x40004e:	cmp	dword ptr [rbp - 0xc], 0
0x400052:	jle	0x40002b
<Block for 0x40005c, 31 bytes>
0x40005c:	lea	rcx, [rip + 0xfd]
0x400063:	mov	edx, 0x25
0x400068:	lea	rsi, [rip + 0x99]
0x40006f:	lea	rdi, [rip + 0xba]
0x400076:	call	0x500010
<Block for 0x40007b, 16 bytes>
0x40007b:	nop	
0x40007c:	mov	rax, qword ptr [rbp - 8]
0x400080:	xor	rax, qword ptr fs:[0x28]
0x400089:	je	0x400090
<Block for 0x400090, 2 bytes>
0x400090:	leave	
0x400091:	ret	
<Block for 0x40008b, 5 bytes>
0x40008b:	call	0x500018
