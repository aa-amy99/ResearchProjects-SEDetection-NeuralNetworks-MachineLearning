<Block for 0x40018a, 112 bytes>
0x40018a:	endbr64	
0x40018e:	push	rbp
0x40018f:	mov	rbp, rsp
0x400192:	sub	rsp, 0x100
0x400199:	mov	rax, qword ptr fs:[0x28]
0x4001a2:	mov	qword ptr [rbp - 8], rax
0x4001a6:	xor	eax, eax
0x4001a8:	lea	rax, [rbp - 0x100]
0x4001af:	mov	qword ptr [rbp - 0xf8], rax
0x4001b6:	lea	rax, [rbp - 0x100]
0x4001bd:	mov	qword ptr [rbp - 0xf0], rax
0x4001c4:	mov	eax, 0x10
0x4001c9:	sub	rax, 1
0x4001cd:	add	rax, 0x6c
0x4001d1:	mov	ecx, 0x10
0x4001d6:	mov	edx, 0
0x4001db:	div	rcx
0x4001de:	imul	rax, rax, 0x10
0x4001e2:	mov	rdx, rax
0x4001e5:	and	rdx, 0xfffffffffffff000
0x4001ec:	mov	rcx, rsp
0x4001ef:	sub	rcx, rdx
0x4001f2:	mov	rdx, rcx
0x4001f5:	cmp	rsp, rdx
0x4001f8:	je	0x40020c
<Block for 0x40020c, 26 bytes>
0x40020c:	mov	rdx, rax
0x40020f:	and	edx, 0xfff
0x400215:	sub	rsp, rdx
0x400218:	mov	rdx, rax
0x40021b:	and	edx, 0xfff
0x400221:	test	rdx, rdx
0x400224:	je	0x400236
<Block for 0x4001fa, 18 bytes>
0x4001fa:	sub	rsp, 0x1000
0x400201:	or	qword ptr [rsp + 0xff8], 0
0x40020a:	jmp	0x4001f5
<Block for 0x400236, 47 bytes>
0x400236:	mov	rax, rsp
0x400239:	add	rax, 0xf
0x40023d:	shr	rax, 4
0x400241:	shl	rax, 4
0x400245:	mov	qword ptr [rbp - 0xe8], rax
0x40024c:	mov	rax, qword ptr [rbp - 0xe8]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x41
0x40025d:	mov	rdi, rax
0x400260:	call	0x500000
<Block for 0x400226, 63 bytes>
0x400226:	and	eax, 0xfff
0x40022b:	sub	rax, 8
0x40022f:	add	rax, rsp
0x400232:	or	qword ptr [rax], 0
0x400236:	mov	rax, rsp
0x400239:	add	rax, 0xf
0x40023d:	shr	rax, 4
0x400241:	shl	rax, 4
0x400245:	mov	qword ptr [rbp - 0xe8], rax
0x40024c:	mov	rax, qword ptr [rbp - 0xe8]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x41
0x40025d:	mov	rdi, rax
0x400260:	call	0x500000
<Block for 0x4001f5, 5 bytes>
0x4001f5:	cmp	rsp, rdx
0x4001f8:	je	0x40020c
<Block for 0x400265, 104 bytes>
0x400265:	mov	rax, qword ptr [rbp - 0xe8]
0x40026c:	add	rax, 0x63
0x400270:	mov	byte ptr [rax], 0
0x400273:	mov	rax, qword ptr [rbp - 0xf8]
0x40027a:	mov	rax, qword ptr [rax]
0x40027d:	mov	qword ptr [rbp - 0xe0], rax
0x400284:	mov	rax, qword ptr [rbp - 0xe8]
0x40028b:	mov	qword ptr [rbp - 0xe0], rax
0x400292:	mov	rax, qword ptr [rbp - 0xf8]
0x400299:	mov	rdx, qword ptr [rbp - 0xe0]
0x4002a0:	mov	qword ptr [rax], rdx
0x4002a3:	mov	rax, qword ptr [rbp - 0xf0]
0x4002aa:	mov	rax, qword ptr [rax]
0x4002ad:	mov	qword ptr [rbp - 0xd8], rax
0x4002b4:	lea	rax, [rbp - 0xd0]
0x4002bb:	mov	edx, 0xc7
0x4002c0:	mov	esi, 0x43
0x4002c5:	mov	rdi, rax
0x4002c8:	call	0x500000
<Block for 0x4002cd, 29 bytes>
0x4002cd:	mov	byte ptr [rbp - 9], 0
0x4002d1:	mov	rdx, qword ptr [rbp - 0xd8]
0x4002d8:	lea	rax, [rbp - 0xd0]
0x4002df:	mov	rsi, rdx
0x4002e2:	mov	rdi, rax
0x4002e5:	call	0x500008
<Block for 0x4002ea, 15 bytes>
0x4002ea:	lea	rax, [rbp - 0xd0]
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x500010
<Block for 0x4002f9, 16 bytes>
0x4002f9:	nop	
0x4002fa:	mov	rax, qword ptr [rbp - 8]
0x4002fe:	xor	rax, qword ptr fs:[0x28]
0x400307:	je	0x40030e
<Block for 0x40030e, 2 bytes>
0x40030e:	leave	
0x40030f:	ret	
<Block for 0x400309, 5 bytes>
0x400309:	call	0x500018
