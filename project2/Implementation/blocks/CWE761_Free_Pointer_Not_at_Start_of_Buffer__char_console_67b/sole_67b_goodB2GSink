<Block for 0x400052, 34 bytes>
0x400052:	endbr64	
0x400056:	push	rbp
0x400057:	mov	rbp, rsp
0x40005a:	sub	rsp, 0x20
0x40005e:	mov	qword ptr [rbp - 0x18], rdi
0x400062:	mov	rax, qword ptr [rbp - 0x18]
0x400066:	mov	qword ptr [rbp - 8], rax
0x40006a:	mov	qword ptr [rbp - 0x10], 0
0x400072:	jmp	0x400099
<Block for 0x400099, 12 bytes>
0x400099:	mov	rax, qword ptr [rbp - 8]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500010
<Block for 0x4000a5, 6 bytes>
0x4000a5:	cmp	qword ptr [rbp - 0x10], rax
0x4000a9:	jb	0x400074
<Block for 0x400074, 18 bytes>
0x400074:	mov	rdx, qword ptr [rbp - 8]
0x400078:	mov	rax, qword ptr [rbp - 0x10]
0x40007c:	add	rax, rdx
0x40007f:	movzx	eax, byte ptr [rax]
0x400082:	cmp	al, 0x53
0x400084:	jne	0x400094
<Block for 0x4000ab, 12 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500008
<Block for 0x400086, 12 bytes>
0x400086:	lea	rdi, [rip + 0x2d]
0x40008d:	call	0x500000
<Block for 0x400094, 17 bytes>
0x400094:	add	qword ptr [rbp - 0x10], 1
0x400099:	mov	rax, qword ptr [rbp - 8]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500010
<Block for 0x4000b7, 3 bytes>
0x4000b7:	nop	
0x4000b8:	leave	
0x4000b9:	ret	
<Block for 0x400092, 2 bytes>
0x400092:	jmp	0x4000ab
