<Block for 0x4000b3, 45 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0x120
0x4000c2:	mov	rax, qword ptr fs:[0x28]
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	xor	eax, eax
0x4000d1:	mov	dword ptr [rbp - 0x11c], 0
0x4000db:	jmp	0x40017b
<Block for 0x40017b, 13 bytes>
0x40017b:	cmp	dword ptr [rbp - 0x11c], 0
0x400182:	jle	0x4000e0
<Block for 0x4000e0, 39 bytes>
0x4000e0:	pxor	xmm0, xmm0
0x4000e4:	movsd	qword ptr [rbp - 0x118], xmm0
0x4000ec:	mov	rdx, qword ptr [rip + 0xfff0d]
0x4000f3:	lea	rax, [rbp - 0x110]
0x4000fa:	mov	esi, 0x100
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500008
<Block for 0x400188, 16 bytes>
0x400188:	nop	
0x400189:	mov	rax, qword ptr [rbp - 8]
0x40018d:	xor	rax, qword ptr fs:[0x28]
0x400196:	je	0x40019d
<Block for 0x400107, 5 bytes>
0x400107:	test	rax, rax
0x40010a:	je	0x400129
<Block for 0x40019d, 2 bytes>
0x40019d:	leave	
0x40019e:	ret	
<Block for 0x400198, 5 bytes>
0x400198:	call	0x500028
<Block for 0x400129, 12 bytes>
0x400129:	lea	rdi, [rip + 0x88]
0x400130:	call	0x500018
<Block for 0x40010c, 15 bytes>
0x40010c:	lea	rax, [rbp - 0x110]
0x400113:	mov	rdi, rax
0x400116:	call	0x500010
<Block for 0x400135, 18 bytes>
0x400135:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40013d:	comisd	xmm0, xmmword ptr [rip + 0xc3]
0x400145:	ja	0x400159
<Block for 0x40011b, 14 bytes>
0x40011b:	movq	rax, xmm0
0x400120:	mov	qword ptr [rbp - 0x118], rax
0x400127:	jmp	0x400135
<Block for 0x400147, 18 bytes>
0x400147:	movsd	xmm0, qword ptr [rip + 0xc1]
0x40014f:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400157:	jbe	0x400167
<Block for 0x400159, 12 bytes>
0x400159:	lea	rdi, [rip + 0x68]
0x400160:	call	0x500018
<Block for 0x400167, 13 bytes>
0x400167:	cvtsd2ss	xmm0, qword ptr [rbp - 0x118]
0x40016f:	call	0x500020
<Block for 0x400165, 2 bytes>
0x400165:	jmp	0x400174
<Block for 0x400174, 20 bytes>
0x400174:	add	dword ptr [rbp - 0x11c], 1
0x40017b:	cmp	dword ptr [rbp - 0x11c], 0
0x400182:	jle	0x4000e0
