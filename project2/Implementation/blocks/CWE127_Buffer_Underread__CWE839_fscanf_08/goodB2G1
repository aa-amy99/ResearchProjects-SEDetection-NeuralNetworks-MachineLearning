<Block for 0x4000e0, 44 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x40
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400102:	mov	eax, 0
0x400107:	call	0x400000
<Block for 0x40010c, 4 bytes>
0x40010c:	test	eax, eax
0x40010e:	je	0x40012f
<Block for 0x40012f, 10 bytes>
0x40012f:	mov	eax, 0
0x400134:	call	0x40000f
<Block for 0x400110, 31 bytes>
0x400110:	mov	rax, qword ptr [rip + 0xffee9]
0x400117:	lea	rdx, [rbp - 0x34]
0x40011b:	lea	rsi, [rip + 0x2f6]
0x400122:	mov	rdi, rax
0x400125:	mov	eax, 0
0x40012a:	call	0x500008
<Block for 0x400139, 4 bytes>
0x400139:	test	eax, eax
0x40013b:	je	0x40014b
<Block for 0x40014b, 47 bytes>
0x40014b:	mov	qword ptr [rbp - 0x30], 0
0x400153:	mov	qword ptr [rbp - 0x28], 0
0x40015b:	mov	qword ptr [rbp - 0x20], 0
0x400163:	mov	qword ptr [rbp - 0x18], 0
0x40016b:	mov	qword ptr [rbp - 0x10], 0
0x400173:	mov	eax, dword ptr [rbp - 0x34]
0x400176:	test	eax, eax
0x400178:	js	0x400194
<Block for 0x40013d, 12 bytes>
0x40013d:	lea	rdi, [rip + 0x2fb]
0x400144:	call	0x500018
<Block for 0x400194, 12 bytes>
0x400194:	lea	rdi, [rip + 0x2bd]
0x40019b:	call	0x500018
<Block for 0x40017a, 8 bytes>
0x40017a:	mov	eax, dword ptr [rbp - 0x34]
0x40017d:	cmp	eax, 9
0x400180:	jg	0x400194
<Block for 0x400149, 2 bytes>
0x400149:	jmp	0x4001a0
<Block for 0x4001a0, 16 bytes>
0x4001a0:	nop	
0x4001a1:	mov	rax, qword ptr [rbp - 8]
0x4001a5:	xor	rax, qword ptr fs:[0x28]
0x4001ae:	je	0x4001b5
<Block for 0x400182, 16 bytes>
0x400182:	mov	eax, dword ptr [rbp - 0x34]
0x400185:	cdqe	
0x400187:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40018b:	mov	edi, eax
0x40018d:	call	0x500010
<Block for 0x4001b5, 2 bytes>
0x4001b5:	leave	
0x4001b6:	ret	
<Block for 0x4001b0, 5 bytes>
0x4001b0:	call	0x500020
<Block for 0x400192, 2 bytes>
0x400192:	jmp	0x4001a0
