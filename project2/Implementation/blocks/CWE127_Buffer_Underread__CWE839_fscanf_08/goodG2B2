<Block for 0x400336, 44 bytes>
0x400336:	endbr64	
0x40033a:	push	rbp
0x40033b:	mov	rbp, rsp
0x40033e:	sub	rsp, 0x40
0x400342:	mov	rax, qword ptr fs:[0x28]
0x40034b:	mov	qword ptr [rbp - 8], rax
0x40034f:	xor	eax, eax
0x400351:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400358:	mov	eax, 0
0x40035d:	call	0x400000
<Block for 0x400362, 4 bytes>
0x400362:	test	eax, eax
0x400364:	je	0x40036d
<Block for 0x40036d, 10 bytes>
0x40036d:	mov	eax, 0
0x400372:	call	0x400000
<Block for 0x400366, 17 bytes>
0x400366:	mov	dword ptr [rbp - 0x34], 7
0x40036d:	mov	eax, 0
0x400372:	call	0x400000
<Block for 0x400377, 4 bytes>
0x400377:	test	eax, eax
0x400379:	je	0x4003c7
<Block for 0x4003c7, 16 bytes>
0x4003c7:	nop	
0x4003c8:	mov	rax, qword ptr [rbp - 8]
0x4003cc:	xor	rax, qword ptr fs:[0x28]
0x4003d5:	je	0x4003dc
<Block for 0x40037b, 46 bytes>
0x40037b:	mov	qword ptr [rbp - 0x30], 0
0x400383:	mov	qword ptr [rbp - 0x28], 0
0x40038b:	mov	qword ptr [rbp - 0x20], 0
0x400393:	mov	qword ptr [rbp - 0x18], 0
0x40039b:	mov	qword ptr [rbp - 0x10], 0
0x4003a3:	cmp	dword ptr [rbp - 0x34], 9
0x4003a7:	jg	0x4003bb
<Block for 0x4003dc, 2 bytes>
0x4003dc:	leave	
0x4003dd:	ret	
<Block for 0x4003d7, 5 bytes>
0x4003d7:	call	0x500020
<Block for 0x4003a9, 16 bytes>
0x4003a9:	mov	eax, dword ptr [rbp - 0x34]
0x4003ac:	cdqe	
0x4003ae:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003b2:	mov	edi, eax
0x4003b4:	call	0x500010
<Block for 0x4003bb, 12 bytes>
0x4003bb:	lea	rdi, [rip + 0x5e]
0x4003c2:	call	0x500018
<Block for 0x4003b9, 2 bytes>
0x4003b9:	jmp	0x4003c7
