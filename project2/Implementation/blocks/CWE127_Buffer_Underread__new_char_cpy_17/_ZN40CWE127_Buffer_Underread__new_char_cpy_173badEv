<Block for 0x400000, 60 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	dword ptr [rbp - 0xe4], 0
0x400033:	cmp	dword ptr [rbp - 0xe4], 0
0x40003a:	jg	0x40008f
<Block for 0x40003c, 10 bytes>
0x40003c:	mov	edi, 0x64
0x400041:	call	0x500000
<Block for 0x40008f, 25 bytes>
0x40008f:	lea	rax, [rbp - 0xd0]
0x400096:	mov	edx, 0xc7
0x40009b:	mov	esi, 0x43
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500008
<Block for 0x400046, 32 bytes>
0x400046:	mov	qword ptr [rbp - 0xd8], rax
0x40004d:	mov	rax, qword ptr [rbp - 0xd8]
0x400054:	mov	edx, 0x63
0x400059:	mov	esi, 0x41
0x40005e:	mov	rdi, rax
0x400061:	call	0x500008
<Block for 0x4000a8, 29 bytes>
0x4000a8:	mov	byte ptr [rbp - 9], 0
0x4000ac:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000b3:	lea	rax, [rbp - 0xd0]
0x4000ba:	mov	rsi, rdx
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500010
<Block for 0x400066, 41 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0xd8]
0x40006d:	add	rax, 0x63
0x400071:	mov	byte ptr [rax], 0
0x400074:	mov	rax, qword ptr [rbp - 0xd8]
0x40007b:	sub	rax, 8
0x40007f:	mov	qword ptr [rbp - 0xe0], rax
0x400086:	add	dword ptr [rbp - 0xe4], 1
0x40008d:	jmp	0x400033
<Block for 0x4000c5, 15 bytes>
0x4000c5:	lea	rax, [rbp - 0xd0]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500018
<Block for 0x400033, 9 bytes>
0x400033:	cmp	dword ptr [rbp - 0xe4], 0
0x40003a:	jg	0x40008f
<Block for 0x4000d4, 16 bytes>
0x4000d4:	nop	
0x4000d5:	mov	rax, qword ptr [rbp - 8]
0x4000d9:	xor	rax, qword ptr fs:[0x28]
0x4000e2:	je	0x4000e9
<Block for 0x4000e9, 2 bytes>
0x4000e9:	leave	
0x4000ea:	ret	
<Block for 0x4000e4, 5 bytes>
0x4000e4:	call	0x500020
