<Block for 0x4000d9, 21 bytes>
0x4000d9:	endbr64	
0x4000dd:	push	rbp
0x4000de:	mov	rbp, rsp
0x4000e1:	sub	rsp, 0x10
0x4000e5:	mov	eax, 1
0x4000ea:	test	eax, eax
0x4000ec:	je	0x400143
<Block for 0x400143, 3 bytes>
0x400143:	nop	
0x400144:	leave	
0x400145:	ret	
<Block for 0x4000ee, 5 bytes>
0x4000ee:	call	0x500000
<Block for 0x4000f3, 55 bytes>
0x4000f3:	mov	edx, eax
0x4000f5:	movsxd	rax, edx
0x4000f8:	imul	rax, rax, 0x55555556
0x4000ff:	shr	rax, 0x20
0x400103:	mov	rcx, rax
0x400106:	mov	eax, edx
0x400108:	sar	eax, 0x1f
0x40010b:	mov	esi, ecx
0x40010d:	sub	esi, eax
0x40010f:	mov	eax, esi
0x400111:	mov	dword ptr [rbp - 4], eax
0x400114:	mov	ecx, dword ptr [rbp - 4]
0x400117:	mov	eax, ecx
0x400119:	add	eax, eax
0x40011b:	add	eax, ecx
0x40011d:	sub	edx, eax
0x40011f:	mov	eax, edx
0x400121:	mov	dword ptr [rbp - 4], eax
0x400124:	cmp	dword ptr [rbp - 4], 0
0x400128:	jne	0x400137
<Block for 0x40012a, 12 bytes>
0x40012a:	lea	rdi, [rip + 0x65]
0x400131:	call	0x500008
<Block for 0x400137, 12 bytes>
0x400137:	lea	rdi, [rip + 0x72]
0x40013e:	call	0x500008
<Block for 0x400136, 1 bytes>
0x400136:	nop	
