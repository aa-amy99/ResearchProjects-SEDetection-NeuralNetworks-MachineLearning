<Block for 0x40005e, 21 bytes>
0x40005e:	endbr64	
0x400062:	push	rbp
0x400063:	mov	rbp, rsp
0x400066:	sub	rsp, 0x10
0x40006a:	mov	eax, 0
0x40006f:	test	eax, eax
0x400071:	je	0x400081
<Block for 0x400081, 5 bytes>
0x400081:	call	0x500000
<Block for 0x400073, 12 bytes>
0x400073:	lea	rdi, [rip + 0x107]
0x40007a:	call	0x500008
<Block for 0x400086, 55 bytes>
0x400086:	mov	edx, eax
0x400088:	movsxd	rax, edx
0x40008b:	imul	rax, rax, 0x55555556
0x400092:	shr	rax, 0x20
0x400096:	mov	rcx, rax
0x400099:	mov	eax, edx
0x40009b:	sar	eax, 0x1f
0x40009e:	mov	esi, ecx
0x4000a0:	sub	esi, eax
0x4000a2:	mov	eax, esi
0x4000a4:	mov	dword ptr [rbp - 4], eax
0x4000a7:	mov	ecx, dword ptr [rbp - 4]
0x4000aa:	mov	eax, ecx
0x4000ac:	add	eax, eax
0x4000ae:	add	eax, ecx
0x4000b0:	sub	edx, eax
0x4000b2:	mov	eax, edx
0x4000b4:	mov	dword ptr [rbp - 4], eax
0x4000b7:	cmp	dword ptr [rbp - 4], 0
0x4000bb:	jne	0x4000ca
<Block for 0x40007f, 2 bytes>
0x40007f:	jmp	0x4000d6
<Block for 0x4000bd, 12 bytes>
0x4000bd:	lea	rdi, [rip + 0xd2]
0x4000c4:	call	0x500008
<Block for 0x4000ca, 12 bytes>
0x4000ca:	lea	rdi, [rip + 0xdf]
0x4000d1:	call	0x500008
<Block for 0x4000d6, 3 bytes>
0x4000d6:	nop	
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000c9, 1 bytes>
0x4000c9:	nop	
