<Block for 0x400053, 23 bytes>
0x400053:	endbr64	
0x400057:	push	rbp
0x400058:	mov	rbp, rsp
0x40005b:	sub	rsp, 0x10
0x40005f:	mov	eax, dword ptr [rip + 0xd3]
0x400065:	cmp	eax, 5
0x400068:	je	0x400078
<Block for 0x400078, 14 bytes>
0x400078:	mov	byte ptr [rbp - 0xa], 5
0x40007c:	mov	edi, 1
0x400081:	call	0x500000
<Block for 0x40006a, 12 bytes>
0x40006a:	lea	rdi, [rip + 0xcb]
0x400071:	call	0x500018
<Block for 0x400086, 35 bytes>
0x400086:	mov	qword ptr [rbp - 8], rax
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	movzx	edx, byte ptr [rbp - 0xa]
0x400092:	mov	byte ptr [rax], dl
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	movzx	eax, byte ptr [rax]
0x40009b:	mov	byte ptr [rbp - 9], al
0x40009e:	movsx	eax, byte ptr [rbp - 9]
0x4000a2:	mov	edi, eax
0x4000a4:	call	0x500010
<Block for 0x400076, 2 bytes>
0x400076:	jmp	0x4000bf
<Block for 0x4000a9, 9 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	test	rax, rax
0x4000b0:	je	0x4000bf
<Block for 0x4000bf, 3 bytes>
0x4000bf:	nop	
0x4000c0:	leave	
0x4000c1:	ret	
<Block for 0x4000b2, 13 bytes>
0x4000b2:	mov	esi, 1
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500008
