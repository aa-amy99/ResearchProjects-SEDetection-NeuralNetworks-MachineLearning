<Block for 0x400000, 58 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0x64
0x400022:	mov	dword ptr [rbp - 0x10], 0
0x400029:	mov	dword ptr [rbp - 0xc], 0
0x400030:	mov	eax, dword ptr [rip + 0xfffca]
0x400036:	test	eax, eax
0x400038:	je	0x400042
<Block for 0x400042, 14 bytes>
0x400042:	mov	rax, qword ptr [rbp - 0x18]
0x400046:	mov	eax, dword ptr [rax + 4]
0x400049:	mov	edi, eax
0x40004b:	call	0x500008
<Block for 0x40003a, 22 bytes>
0x40003a:	lea	rax, [rbp - 0x1c]
0x40003e:	mov	qword ptr [rbp - 0x18], rax
0x400042:	mov	rax, qword ptr [rbp - 0x18]
0x400046:	mov	eax, dword ptr [rax + 4]
0x400049:	mov	edi, eax
0x40004b:	call	0x500008
<Block for 0x400050, 16 bytes>
0x400050:	nop	
0x400051:	mov	rax, qword ptr [rbp - 8]
0x400055:	xor	rax, qword ptr fs:[0x28]
0x40005e:	je	0x400065
<Block for 0x400065, 2 bytes>
0x400065:	leave	
0x400066:	ret	
<Block for 0x400060, 5 bytes>
0x400060:	call	0x500010
