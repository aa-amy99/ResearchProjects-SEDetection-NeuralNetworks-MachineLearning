<Block for 0x400056, 57 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x20
0x400062:	mov	rax, qword ptr fs:[0x28]
0x40006b:	mov	qword ptr [rbp - 8], rax
0x40006f:	xor	eax, eax
0x400071:	lea	rax, [rip - 0x78]
0x400078:	mov	qword ptr [rbp - 0x18], rax
0x40007c:	mov	byte ptr [rbp - 0x19], 0x20
0x400080:	mov	rax, qword ptr [rip + 0xfff89]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500018
<Block for 0x40008f, 19 bytes>
0x40008f:	mov	byte ptr [rbp - 0xa], al
0x400092:	mov	byte ptr [rbp - 9], 0
0x400096:	lea	rax, [rbp - 0xa]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500020
<Block for 0x4000a2, 15 bytes>
0x4000a2:	mov	byte ptr [rbp - 0x19], al
0x4000a5:	movsx	eax, byte ptr [rbp - 0x19]
0x4000a9:	mov	rdx, qword ptr [rbp - 0x18]
0x4000ad:	mov	edi, eax
0x4000af:	call	rdx
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500008
