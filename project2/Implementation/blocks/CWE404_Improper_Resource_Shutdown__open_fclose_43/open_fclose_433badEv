<Block for 0x400034, 46 bytes>
0x400034:	endbr64	
0x400038:	push	rbp
0x400039:	mov	rbp, rsp
0x40003c:	sub	rsp, 0x10
0x400040:	mov	rax, qword ptr fs:[0x28]
0x400049:	mov	qword ptr [rbp - 8], rax
0x40004d:	xor	eax, eax
0x40004f:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x400056:	lea	rax, [rbp - 0xc]
0x40005a:	mov	rdi, rax
0x40005d:	call	0x400000
<Block for 0x400062, 8 bytes>
0x400062:	mov	eax, dword ptr [rbp - 0xc]
0x400065:	cmp	eax, -1
0x400068:	je	0x400077
<Block for 0x400077, 16 bytes>
0x400077:	nop	
0x400078:	mov	rax, qword ptr [rbp - 8]
0x40007c:	xor	rax, qword ptr fs:[0x28]
0x400085:	je	0x40008c
<Block for 0x40006a, 13 bytes>
0x40006a:	mov	eax, dword ptr [rbp - 0xc]
0x40006d:	cdqe	
0x40006f:	mov	rdi, rax
0x400072:	call	0x500008
<Block for 0x40008c, 2 bytes>
0x40008c:	leave	
0x40008d:	ret	
<Block for 0x400087, 5 bytes>
0x400087:	call	0x500010
