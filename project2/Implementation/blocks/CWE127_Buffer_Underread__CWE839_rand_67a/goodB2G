<Block for 0x4000a2, 25 bytes>
0x4000a2:	endbr64	
0x4000a6:	push	rbp
0x4000a7:	mov	rbp, rsp
0x4000aa:	push	rbx
0x4000ab:	sub	rsp, 0x18
0x4000af:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000b6:	call	0x500000
<Block for 0x4000bb, 7 bytes>
0x4000bb:	and	eax, 1
0x4000be:	test	eax, eax
0x4000c0:	je	0x4000df
<Block for 0x4000df, 5 bytes>
0x4000df:	call	0x500000
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500000
<Block for 0x4000e4, 10 bytes>
0x4000e4:	shl	eax, 0x1e
0x4000e7:	mov	ebx, eax
0x4000e9:	call	0x500000
<Block for 0x4000c7, 10 bytes>
0x4000c7:	shl	eax, 0x1e
0x4000ca:	mov	ebx, eax
0x4000cc:	call	0x500000
<Block for 0x4000ee, 10 bytes>
0x4000ee:	shl	eax, 0xf
0x4000f1:	xor	ebx, eax
0x4000f3:	call	0x500000
<Block for 0x4000d1, 10 bytes>
0x4000d1:	shl	eax, 0xf
0x4000d4:	xor	ebx, eax
0x4000d6:	call	0x500000
<Block for 0x4000f8, 23 bytes>
0x4000f8:	xor	eax, ebx
0x4000fa:	not	eax
0x4000fc:	mov	dword ptr [rbp - 0x14], eax
0x4000ff:	mov	eax, dword ptr [rbp - 0x14]
0x400102:	mov	dword ptr [rbp - 0x18], eax
0x400105:	mov	eax, dword ptr [rbp - 0x18]
0x400108:	mov	edi, eax
0x40010a:	call	0x500018
<Block for 0x4000db, 4 bytes>
0x4000db:	xor	eax, ebx
0x4000dd:	jmp	0x4000fc
<Block for 0x40010f, 8 bytes>
0x40010f:	nop	
0x400110:	add	rsp, 0x18
0x400114:	pop	rbx
0x400115:	pop	rbp
0x400116:	ret	
<Block for 0x4000fc, 19 bytes>
0x4000fc:	mov	dword ptr [rbp - 0x14], eax
0x4000ff:	mov	eax, dword ptr [rbp - 0x14]
0x400102:	mov	dword ptr [rbp - 0x18], eax
0x400105:	mov	eax, dword ptr [rbp - 0x18]
0x400108:	mov	edi, eax
0x40010a:	call	0x500018
