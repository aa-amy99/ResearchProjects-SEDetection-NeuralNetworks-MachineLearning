<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x40040a
<Block for 0x40002b, 21 bytes>
0x40002b:	mov	qword ptr [rbp - 0x88], 0
0x400036:	mov	edi, 0x32
0x40003b:	call	0x500000
<Block for 0x400040, 32 bytes>
0x400040:	mov	qword ptr [rbp - 0x88], rax
0x400047:	mov	rax, qword ptr [rbp - 0x88]
0x40004e:	mov	edx, 0x31
0x400053:	mov	esi, 0x41
0x400058:	mov	rdi, rax
0x40005b:	call	0x500008
<Block for 0x400060, 40 bytes>
0x400060:	mov	rax, qword ptr [rbp - 0x88]
0x400067:	add	rax, 0x31
0x40006b:	mov	byte ptr [rax], 0
0x40006e:	mov	dword ptr [rbp - 0x50], 0
0x400075:	lea	rdx, [rbp - 0x50]
0x400079:	lea	rax, [rbp - 0x80]
0x40007d:	mov	rsi, rdx
0x400080:	mov	rdi, rax
0x400083:	call	0x4005c2
<Block for 0x400088, 36 bytes>
0x400088:	mov	rdx, qword ptr [rbp - 0x88]
0x40008f:	mov	qword ptr [rax], rdx
0x400092:	mov	dword ptr [rbp - 0x50], 1
0x400099:	lea	rdx, [rbp - 0x50]
0x40009d:	lea	rax, [rbp - 0x80]
0x4000a1:	mov	rsi, rdx
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x4005c2
<Block for 0x4000ac, 36 bytes>
0x4000ac:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b3:	mov	qword ptr [rax], rdx
0x4000b6:	mov	dword ptr [rbp - 0x50], 2
0x4000bd:	lea	rdx, [rbp - 0x50]
0x4000c1:	lea	rax, [rbp - 0x80]
0x4000c5:	mov	rsi, rdx
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x4005c2
<Block for 0x4000d0, 29 bytes>
0x4000d0:	mov	rdx, qword ptr [rbp - 0x88]
0x4000d7:	mov	qword ptr [rax], rdx
0x4000da:	lea	rdx, [rbp - 0x80]
0x4000de:	lea	rax, [rbp - 0x50]
0x4000e2:	mov	rsi, rdx
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x40044a
<Block for 0x4000ed, 12 bytes>
0x4000ed:	lea	rax, [rbp - 0x50]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500010
<Block for 0x4000f9, 12 bytes>
0x4000f9:	lea	rax, [rbp - 0x50]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x40042a
<Block for 0x400105, 12 bytes>
0x400105:	lea	rax, [rbp - 0x80]
0x400109:	mov	rdi, rax
0x40010c:	call	0x40042a
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 0x18]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x40015b
<Block for 0x40015b, 10 bytes>
0x40015b:	add	rsp, 0x88
0x400162:	pop	rbx
0x400163:	pop	rbp
0x400164:	ret	
<Block for 0x400121, 2 bytes>
0x400121:	jmp	0x400156
<Block for 0x400156, 5 bytes>
0x400156:	call	0x500020
