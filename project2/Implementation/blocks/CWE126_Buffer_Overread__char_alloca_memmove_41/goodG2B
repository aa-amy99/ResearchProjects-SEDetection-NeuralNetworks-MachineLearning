<Block for 0x400296, 81 bytes>
0x400296:	endbr64	
0x40029a:	push	rbp
0x40029b:	mov	rbp, rsp
0x40029e:	sub	rsp, 0x20
0x4002a2:	mov	rax, qword ptr fs:[0x28]
0x4002ab:	mov	qword ptr [rbp - 8], rax
0x4002af:	xor	eax, eax
0x4002b1:	mov	eax, 0x10
0x4002b6:	sub	rax, 1
0x4002ba:	add	rax, 0x3a
0x4002be:	mov	ecx, 0x10
0x4002c3:	mov	edx, 0
0x4002c8:	div	rcx
0x4002cb:	imul	rax, rax, 0x10
0x4002cf:	mov	rdx, rax
0x4002d2:	and	rdx, 0xfffffffffffff000
0x4002d9:	mov	rcx, rsp
0x4002dc:	sub	rcx, rdx
0x4002df:	mov	rdx, rcx
0x4002e2:	cmp	rsp, rdx
0x4002e5:	je	0x4002f9
<Block for 0x4002f9, 26 bytes>
0x4002f9:	mov	rdx, rax
0x4002fc:	and	edx, 0xfff
0x400302:	sub	rsp, rdx
0x400305:	mov	rdx, rax
0x400308:	and	edx, 0xfff
0x40030e:	test	rdx, rdx
0x400311:	je	0x400323
<Block for 0x4002e7, 18 bytes>
0x4002e7:	sub	rsp, 0x1000
0x4002ee:	or	qword ptr [rsp + 0xff8], 0
0x4002f7:	jmp	0x4002e2
<Block for 0x400323, 73 bytes>
0x400323:	mov	rax, rsp
0x400326:	add	rax, 0xf
0x40032a:	shr	rax, 4
0x40032e:	shl	rax, 4
0x400332:	mov	qword ptr [rbp - 0x20], rax
0x400336:	mov	eax, 0x10
0x40033b:	sub	rax, 1
0x40033f:	add	rax, 0x6c
0x400343:	mov	edi, 0x10
0x400348:	mov	edx, 0
0x40034d:	div	rdi
0x400350:	imul	rax, rax, 0x10
0x400354:	mov	rdx, rax
0x400357:	and	rdx, 0xfffffffffffff000
0x40035e:	mov	rsi, rsp
0x400361:	sub	rsi, rdx
0x400364:	mov	rdx, rsi
0x400367:	cmp	rsp, rdx
0x40036a:	je	0x40037e
<Block for 0x400313, 89 bytes>
0x400313:	and	eax, 0xfff
0x400318:	sub	rax, 8
0x40031c:	add	rax, rsp
0x40031f:	or	qword ptr [rax], 0
0x400323:	mov	rax, rsp
0x400326:	add	rax, 0xf
0x40032a:	shr	rax, 4
0x40032e:	shl	rax, 4
0x400332:	mov	qword ptr [rbp - 0x20], rax
0x400336:	mov	eax, 0x10
0x40033b:	sub	rax, 1
0x40033f:	add	rax, 0x6c
0x400343:	mov	edi, 0x10
0x400348:	mov	edx, 0
0x40034d:	div	rdi
0x400350:	imul	rax, rax, 0x10
0x400354:	mov	rdx, rax
0x400357:	and	rdx, 0xfffffffffffff000
0x40035e:	mov	rsi, rsp
0x400361:	sub	rsi, rdx
0x400364:	mov	rdx, rsi
0x400367:	cmp	rsp, rdx
0x40036a:	je	0x40037e
<Block for 0x4002e2, 5 bytes>
0x4002e2:	cmp	rsp, rdx
0x4002e5:	je	0x4002f9
<Block for 0x40037e, 26 bytes>
0x40037e:	mov	rdx, rax
0x400381:	and	edx, 0xfff
0x400387:	sub	rsp, rdx
0x40038a:	mov	rdx, rax
0x40038d:	and	edx, 0xfff
0x400393:	test	rdx, rdx
0x400396:	je	0x4003a8
<Block for 0x40036c, 18 bytes>
0x40036c:	sub	rsp, 0x1000
0x400373:	or	qword ptr [rsp + 0xff8], 0
0x40037c:	jmp	0x400367
<Block for 0x4003a8, 41 bytes>
0x4003a8:	mov	rax, rsp
0x4003ab:	add	rax, 0xf
0x4003af:	shr	rax, 4
0x4003b3:	shl	rax, 4
0x4003b7:	mov	qword ptr [rbp - 0x18], rax
0x4003bb:	mov	rax, qword ptr [rbp - 0x20]
0x4003bf:	mov	edx, 0x31
0x4003c4:	mov	esi, 0x41
0x4003c9:	mov	rdi, rax
0x4003cc:	call	0x500000
<Block for 0x400398, 57 bytes>
0x400398:	and	eax, 0xfff
0x40039d:	sub	rax, 8
0x4003a1:	add	rax, rsp
0x4003a4:	or	qword ptr [rax], 0
0x4003a8:	mov	rax, rsp
0x4003ab:	add	rax, 0xf
0x4003af:	shr	rax, 4
0x4003b3:	shl	rax, 4
0x4003b7:	mov	qword ptr [rbp - 0x18], rax
0x4003bb:	mov	rax, qword ptr [rbp - 0x20]
0x4003bf:	mov	edx, 0x31
0x4003c4:	mov	esi, 0x41
0x4003c9:	mov	rdi, rax
0x4003cc:	call	0x500000
<Block for 0x400367, 5 bytes>
0x400367:	cmp	rsp, rdx
0x40036a:	je	0x40037e
<Block for 0x4003d1, 33 bytes>
0x4003d1:	mov	rax, qword ptr [rbp - 0x20]
0x4003d5:	add	rax, 0x31
0x4003d9:	mov	byte ptr [rax], 0
0x4003dc:	mov	rax, qword ptr [rbp - 0x18]
0x4003e0:	mov	edx, 0x63
0x4003e5:	mov	esi, 0x41
0x4003ea:	mov	rdi, rax
0x4003ed:	call	0x500000
<Block for 0x4003f2, 31 bytes>
0x4003f2:	mov	rax, qword ptr [rbp - 0x18]
0x4003f6:	add	rax, 0x63
0x4003fa:	mov	byte ptr [rax], 0
0x4003fd:	mov	rax, qword ptr [rbp - 0x18]
0x400401:	mov	qword ptr [rbp - 0x10], rax
0x400405:	mov	rax, qword ptr [rbp - 0x10]
0x400409:	mov	rdi, rax
0x40040c:	call	0x400214
<Block for 0x400411, 16 bytes>
0x400411:	nop	
0x400412:	mov	rax, qword ptr [rbp - 8]
0x400416:	xor	rax, qword ptr fs:[0x28]
0x40041f:	je	0x400426
<Block for 0x400426, 2 bytes>
0x400426:	leave	
0x400427:	ret	
<Block for 0x400421, 5 bytes>
0x400421:	call	0x500020
