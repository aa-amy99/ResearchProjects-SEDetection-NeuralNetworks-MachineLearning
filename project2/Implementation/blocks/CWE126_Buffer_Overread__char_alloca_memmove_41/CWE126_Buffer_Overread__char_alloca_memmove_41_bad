<Block for 0x400082, 81 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	eax, 0x10
0x4000a2:	sub	rax, 1
0x4000a6:	add	rax, 0x3a
0x4000aa:	mov	ecx, 0x10
0x4000af:	mov	edx, 0
0x4000b4:	div	rcx
0x4000b7:	imul	rax, rax, 0x10
0x4000bb:	mov	rdx, rax
0x4000be:	and	rdx, 0xfffffffffffff000
0x4000c5:	mov	rcx, rsp
0x4000c8:	sub	rcx, rdx
0x4000cb:	mov	rdx, rcx
0x4000ce:	cmp	rsp, rdx
0x4000d1:	je	0x4000e5
<Block for 0x4000e5, 26 bytes>
0x4000e5:	mov	rdx, rax
0x4000e8:	and	edx, 0xfff
0x4000ee:	sub	rsp, rdx
0x4000f1:	mov	rdx, rax
0x4000f4:	and	edx, 0xfff
0x4000fa:	test	rdx, rdx
0x4000fd:	je	0x40010f
<Block for 0x4000d3, 18 bytes>
0x4000d3:	sub	rsp, 0x1000
0x4000da:	or	qword ptr [rsp + 0xff8], 0
0x4000e3:	jmp	0x4000ce
<Block for 0x40010f, 73 bytes>
0x40010f:	mov	rax, rsp
0x400112:	add	rax, 0xf
0x400116:	shr	rax, 4
0x40011a:	shl	rax, 4
0x40011e:	mov	qword ptr [rbp - 0x20], rax
0x400122:	mov	eax, 0x10
0x400127:	sub	rax, 1
0x40012b:	add	rax, 0x6c
0x40012f:	mov	edi, 0x10
0x400134:	mov	edx, 0
0x400139:	div	rdi
0x40013c:	imul	rax, rax, 0x10
0x400140:	mov	rdx, rax
0x400143:	and	rdx, 0xfffffffffffff000
0x40014a:	mov	rsi, rsp
0x40014d:	sub	rsi, rdx
0x400150:	mov	rdx, rsi
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x4000ff, 89 bytes>
0x4000ff:	and	eax, 0xfff
0x400104:	sub	rax, 8
0x400108:	add	rax, rsp
0x40010b:	or	qword ptr [rax], 0
0x40010f:	mov	rax, rsp
0x400112:	add	rax, 0xf
0x400116:	shr	rax, 4
0x40011a:	shl	rax, 4
0x40011e:	mov	qword ptr [rbp - 0x20], rax
0x400122:	mov	eax, 0x10
0x400127:	sub	rax, 1
0x40012b:	add	rax, 0x6c
0x40012f:	mov	edi, 0x10
0x400134:	mov	edx, 0
0x400139:	div	rdi
0x40013c:	imul	rax, rax, 0x10
0x400140:	mov	rdx, rax
0x400143:	and	rdx, 0xfffffffffffff000
0x40014a:	mov	rsi, rsp
0x40014d:	sub	rsi, rdx
0x400150:	mov	rdx, rsi
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x4000ce, 5 bytes>
0x4000ce:	cmp	rsp, rdx
0x4000d1:	je	0x4000e5
<Block for 0x40016a, 26 bytes>
0x40016a:	mov	rdx, rax
0x40016d:	and	edx, 0xfff
0x400173:	sub	rsp, rdx
0x400176:	mov	rdx, rax
0x400179:	and	edx, 0xfff
0x40017f:	test	rdx, rdx
0x400182:	je	0x400194
<Block for 0x400158, 18 bytes>
0x400158:	sub	rsp, 0x1000
0x40015f:	or	qword ptr [rsp + 0xff8], 0
0x400168:	jmp	0x400153
<Block for 0x400194, 41 bytes>
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x18], rax
0x4001a7:	mov	rax, qword ptr [rbp - 0x20]
0x4001ab:	mov	edx, 0x31
0x4001b0:	mov	esi, 0x41
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500000
<Block for 0x400184, 57 bytes>
0x400184:	and	eax, 0xfff
0x400189:	sub	rax, 8
0x40018d:	add	rax, rsp
0x400190:	or	qword ptr [rax], 0
0x400194:	mov	rax, rsp
0x400197:	add	rax, 0xf
0x40019b:	shr	rax, 4
0x40019f:	shl	rax, 4
0x4001a3:	mov	qword ptr [rbp - 0x18], rax
0x4001a7:	mov	rax, qword ptr [rbp - 0x20]
0x4001ab:	mov	edx, 0x31
0x4001b0:	mov	esi, 0x41
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500000
<Block for 0x400153, 5 bytes>
0x400153:	cmp	rsp, rdx
0x400156:	je	0x40016a
<Block for 0x4001bd, 33 bytes>
0x4001bd:	mov	rax, qword ptr [rbp - 0x20]
0x4001c1:	add	rax, 0x31
0x4001c5:	mov	byte ptr [rax], 0
0x4001c8:	mov	rax, qword ptr [rbp - 0x18]
0x4001cc:	mov	edx, 0x63
0x4001d1:	mov	esi, 0x41
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500000
<Block for 0x4001de, 31 bytes>
0x4001de:	mov	rax, qword ptr [rbp - 0x18]
0x4001e2:	add	rax, 0x63
0x4001e6:	mov	byte ptr [rax], 0
0x4001e9:	mov	rax, qword ptr [rbp - 0x20]
0x4001ed:	mov	qword ptr [rbp - 0x10], rax
0x4001f1:	mov	rax, qword ptr [rbp - 0x10]
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x400000
<Block for 0x4001fd, 16 bytes>
0x4001fd:	nop	
0x4001fe:	mov	rax, qword ptr [rbp - 8]
0x400202:	xor	rax, qword ptr fs:[0x28]
0x40020b:	je	0x400212
<Block for 0x400212, 2 bytes>
0x400212:	leave	
0x400213:	ret	
<Block for 0x40020d, 5 bytes>
0x40020d:	call	0x500020
