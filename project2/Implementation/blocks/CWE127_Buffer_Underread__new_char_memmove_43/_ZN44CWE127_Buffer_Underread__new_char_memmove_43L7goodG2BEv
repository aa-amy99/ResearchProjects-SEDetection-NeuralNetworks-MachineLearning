<Block for 0x400126, 47 bytes>
0x400126:	endbr64	
0x40012a:	push	rbp
0x40012b:	mov	rbp, rsp
0x40012e:	add	rsp, -0x80
0x400132:	mov	rax, qword ptr fs:[0x28]
0x40013b:	mov	qword ptr [rbp - 8], rax
0x40013f:	xor	eax, eax
0x400141:	mov	qword ptr [rbp - 0x78], 0
0x400149:	lea	rax, [rbp - 0x78]
0x40014d:	mov	rdi, rax
0x400150:	call	0x4000d9
<Block for 0x400155, 22 bytes>
0x400155:	lea	rax, [rbp - 0x70]
0x400159:	mov	edx, 0x63
0x40015e:	mov	esi, 0x43
0x400163:	mov	rdi, rax
0x400166:	call	0x500008
<Block for 0x40016b, 28 bytes>
0x40016b:	mov	byte ptr [rbp - 0xd], 0
0x40016f:	mov	rcx, qword ptr [rbp - 0x78]
0x400173:	lea	rax, [rbp - 0x70]
0x400177:	mov	edx, 0x64
0x40017c:	mov	rsi, rcx
0x40017f:	mov	rdi, rax
0x400182:	call	0x500010
<Block for 0x400187, 16 bytes>
0x400187:	mov	byte ptr [rbp - 0xd], 0
0x40018b:	lea	rax, [rbp - 0x70]
0x40018f:	mov	rdi, rax
0x400192:	call	0x500018
<Block for 0x400197, 16 bytes>
0x400197:	nop	
0x400198:	mov	rax, qword ptr [rbp - 8]
0x40019c:	xor	rax, qword ptr fs:[0x28]
0x4001a5:	je	0x4001ac
<Block for 0x4001ac, 2 bytes>
0x4001ac:	leave	
0x4001ad:	ret	
<Block for 0x4001a7, 5 bytes>
0x4001a7:	call	0x500020
