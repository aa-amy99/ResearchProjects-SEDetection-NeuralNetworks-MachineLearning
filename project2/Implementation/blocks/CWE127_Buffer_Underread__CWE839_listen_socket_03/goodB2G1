<Block for 0x40019d, 68 bytes>
0x40019d:	endbr64	
0x4001a1:	push	rbp
0x4001a2:	mov	rbp, rsp
0x4001a5:	sub	rsp, 0x50
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 8], rax
0x4001b6:	xor	eax, eax
0x4001b8:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x4001bf:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001c6:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4001cd:	mov	edx, 6
0x4001d2:	mov	esi, 1
0x4001d7:	mov	edi, 2
0x4001dc:	call	0x500000
<Block for 0x4001e1, 13 bytes>
0x4001e1:	mov	dword ptr [rbp - 0x48], eax
0x4001e4:	cmp	dword ptr [rbp - 0x48], -1
0x4001e8:	je	0x4002ad
<Block for 0x4002ad, 3 bytes>
0x4002ad:	nop	
0x4002ae:	jmp	0x4002b7
<Block for 0x4001ee, 22 bytes>
0x4001ee:	lea	rax, [rbp - 0x40]
0x4001f2:	mov	edx, 0x10
0x4001f7:	mov	esi, 0
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500008
<Block for 0x4002b7, 6 bytes>
0x4002b7:	cmp	dword ptr [rbp - 0x48], -1
0x4002bb:	je	0x4002c7
<Block for 0x400204, 23 bytes>
0x400204:	mov	word ptr [rbp - 0x40], 2
0x40020a:	mov	dword ptr [rbp - 0x3c], 0
0x400211:	mov	edi, 0x6987
0x400216:	call	0x500010
<Block for 0x4002c7, 6 bytes>
0x4002c7:	cmp	dword ptr [rbp - 0x4c], -1
0x4002cb:	je	0x4002d7
<Block for 0x4002bd, 10 bytes>
0x4002bd:	mov	eax, dword ptr [rbp - 0x48]
0x4002c0:	mov	edi, eax
0x4002c2:	call	0x500040
<Block for 0x40021b, 26 bytes>
0x40021b:	mov	word ptr [rbp - 0x3e], ax
0x40021f:	lea	rcx, [rbp - 0x40]
0x400223:	mov	eax, dword ptr [rbp - 0x48]
0x400226:	mov	edx, 0x10
0x40022b:	mov	rsi, rcx
0x40022e:	mov	edi, eax
0x400230:	call	0x500018
<Block for 0x4002d7, 46 bytes>
0x4002d7:	mov	qword ptr [rbp - 0x40], 0
0x4002df:	mov	qword ptr [rbp - 0x38], 0
0x4002e7:	mov	qword ptr [rbp - 0x30], 0
0x4002ef:	mov	qword ptr [rbp - 0x28], 0
0x4002f7:	mov	qword ptr [rbp - 0x20], 0
0x4002ff:	cmp	dword ptr [rbp - 0x50], 0
0x400303:	js	0x40031d
<Block for 0x4002cd, 10 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0x4c]
0x4002d0:	mov	edi, eax
0x4002d2:	call	0x500040
<Block for 0x400235, 5 bytes>
0x400235:	cmp	eax, -1
0x400238:	je	0x4002b0
<Block for 0x40031d, 12 bytes>
0x40031d:	lea	rdi, [rip + 0x32c]
0x400324:	call	0x500050
<Block for 0x400305, 6 bytes>
0x400305:	cmp	dword ptr [rbp - 0x50], 9
0x400309:	jg	0x40031d
<Block for 0x4002b0, 3 bytes>
0x4002b0:	nop	
0x4002b1:	jmp	0x4002b7
<Block for 0x40023a, 15 bytes>
0x40023a:	mov	eax, dword ptr [rbp - 0x48]
0x40023d:	mov	esi, 5
0x400242:	mov	edi, eax
0x400244:	call	0x500020
<Block for 0x400329, 16 bytes>
0x400329:	nop	
0x40032a:	mov	rax, qword ptr [rbp - 8]
0x40032e:	xor	rax, qword ptr fs:[0x28]
0x400337:	je	0x40033e
<Block for 0x40030b, 16 bytes>
0x40030b:	mov	eax, dword ptr [rbp - 0x50]
0x40030e:	cdqe	
0x400310:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400314:	mov	edi, eax
0x400316:	call	0x500048
<Block for 0x400249, 5 bytes>
0x400249:	cmp	eax, -1
0x40024c:	je	0x4002b3
<Block for 0x40033e, 2 bytes>
0x40033e:	leave	
0x40033f:	ret	
<Block for 0x400339, 5 bytes>
0x400339:	call	0x500058
<Block for 0x40031b, 2 bytes>
0x40031b:	jmp	0x400329
<Block for 0x4002b3, 3 bytes>
0x4002b3:	nop	
0x4002b4:	jmp	0x4002b7
<Block for 0x40024e, 20 bytes>
0x40024e:	mov	eax, dword ptr [rbp - 0x48]
0x400251:	mov	edx, 0
0x400256:	mov	esi, 0
0x40025b:	mov	edi, eax
0x40025d:	call	0x500028
<Block for 0x400262, 9 bytes>
0x400262:	mov	dword ptr [rbp - 0x4c], eax
0x400265:	cmp	dword ptr [rbp - 0x4c], -1
0x400269:	je	0x4002b6
<Block for 0x40026b, 24 bytes>
0x40026b:	lea	rsi, [rbp - 0x16]
0x40026f:	mov	eax, dword ptr [rbp - 0x4c]
0x400272:	mov	ecx, 0
0x400277:	mov	edx, 0xd
0x40027c:	mov	edi, eax
0x40027e:	call	0x500030
<Block for 0x4002b6, 1 bytes>
0x4002b6:	nop	
<Block for 0x400283, 9 bytes>
0x400283:	mov	dword ptr [rbp - 0x44], eax
0x400286:	cmp	dword ptr [rbp - 0x44], -1
0x40028a:	je	0x4002b7
<Block for 0x40028c, 6 bytes>
0x40028c:	cmp	dword ptr [rbp - 0x44], 0
0x400290:	je	0x4002b7
<Block for 0x400292, 22 bytes>
0x400292:	mov	eax, dword ptr [rbp - 0x44]
0x400295:	cdqe	
0x400297:	mov	byte ptr [rbp + rax - 0x16], 0
0x40029c:	lea	rax, [rbp - 0x16]
0x4002a0:	mov	rdi, rax
0x4002a3:	call	0x500038
<Block for 0x4002a8, 5 bytes>
0x4002a8:	mov	dword ptr [rbp - 0x50], eax
0x4002ab:	jmp	0x4002b7
