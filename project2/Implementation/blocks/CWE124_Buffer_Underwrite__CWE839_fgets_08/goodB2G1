<Block for 0x40012e, 44 bytes>
0x40012e:	endbr64	
0x400132:	push	rbp
0x400133:	mov	rbp, rsp
0x400136:	sub	rsp, 0x50
0x40013a:	mov	rax, qword ptr fs:[0x28]
0x400143:	mov	qword ptr [rbp - 8], rax
0x400147:	xor	eax, eax
0x400149:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400150:	mov	eax, 0
0x400155:	call	0x400000
<Block for 0x40015a, 4 bytes>
0x40015a:	test	eax, eax
0x40015c:	je	0x4001ad
<Block for 0x4001ad, 10 bytes>
0x4001ad:	mov	eax, 0
0x4001b2:	call	0x40000f
<Block for 0x40015e, 45 bytes>
0x40015e:	mov	qword ptr [rbp - 0x16], 0
0x400166:	mov	dword ptr [rbp - 0xe], 0
0x40016d:	mov	word ptr [rbp - 0xa], 0
0x400173:	mov	rdx, qword ptr [rip + 0xffe86]
0x40017a:	lea	rax, [rbp - 0x16]
0x40017e:	mov	esi, 0xe
0x400183:	mov	rdi, rax
0x400186:	call	0x500008
<Block for 0x4001b7, 4 bytes>
0x4001b7:	test	eax, eax
0x4001b9:	je	0x4001c9
<Block for 0x40018b, 5 bytes>
0x40018b:	test	rax, rax
0x40018e:	je	0x4001a1
<Block for 0x4001c9, 46 bytes>
0x4001c9:	mov	qword ptr [rbp - 0x40], 0
0x4001d1:	mov	qword ptr [rbp - 0x38], 0
0x4001d9:	mov	qword ptr [rbp - 0x30], 0
0x4001e1:	mov	qword ptr [rbp - 0x28], 0
0x4001e9:	mov	qword ptr [rbp - 0x20], 0
0x4001f1:	cmp	dword ptr [rbp - 0x48], 0
0x4001f5:	js	0x40022f
<Block for 0x4001bb, 12 bytes>
0x4001bb:	lea	rdi, [rip + 0x3ae]
0x4001c2:	call	0x500018
<Block for 0x4001a1, 12 bytes>
0x4001a1:	lea	rdi, [rip + 0x398]
0x4001a8:	call	0x500018
<Block for 0x400190, 12 bytes>
0x400190:	lea	rax, [rbp - 0x16]
0x400194:	mov	rdi, rax
0x400197:	call	0x500010
<Block for 0x40022f, 12 bytes>
0x40022f:	lea	rdi, [rip + 0x352]
0x400236:	call	0x500018
<Block for 0x4001f7, 6 bytes>
0x4001f7:	cmp	dword ptr [rbp - 0x48], 9
0x4001fb:	jg	0x40022f
<Block for 0x4001c7, 2 bytes>
0x4001c7:	jmp	0x40023d
<Block for 0x40019c, 5 bytes>
0x40019c:	mov	dword ptr [rbp - 0x48], eax
0x40019f:	jmp	0x4001ad
<Block for 0x40023b, 2 bytes>
0x40023b:	jmp	0x40023d
<Block for 0x4001fd, 22 bytes>
0x4001fd:	mov	eax, dword ptr [rbp - 0x48]
0x400200:	cdqe	
0x400202:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40020a:	mov	dword ptr [rbp - 0x44], 0
0x400211:	jmp	0x400227
<Block for 0x40023d, 16 bytes>
0x40023d:	nop	
0x40023e:	mov	rax, qword ptr [rbp - 8]
0x400242:	xor	rax, qword ptr fs:[0x28]
0x40024b:	je	0x400252
<Block for 0x400227, 6 bytes>
0x400227:	cmp	dword ptr [rbp - 0x44], 9
0x40022b:	jle	0x400213
<Block for 0x400252, 2 bytes>
0x400252:	leave	
0x400253:	ret	
<Block for 0x40024d, 5 bytes>
0x40024d:	call	0x500028
<Block for 0x400213, 16 bytes>
0x400213:	mov	eax, dword ptr [rbp - 0x44]
0x400216:	cdqe	
0x400218:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40021c:	mov	edi, eax
0x40021e:	call	0x500020
<Block for 0x40022d, 2 bytes>
0x40022d:	jmp	0x40023d
<Block for 0x400223, 10 bytes>
0x400223:	add	dword ptr [rbp - 0x44], 1
0x400227:	cmp	dword ptr [rbp - 0x44], 9
0x40022b:	jle	0x400213
