<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], edi
0x400010:	mov	eax, dword ptr [rip + 0xfffea]
0x400016:	test	eax, eax
0x400018:	je	0x400063
<Block for 0x400063, 10 bytes>
0x400063:	mov	eax, dword ptr [rbp - 0x14]
0x400066:	add	rsp, 0x18
0x40006a:	pop	rbx
0x40006b:	pop	rbp
0x40006c:	ret	
<Block for 0x40001a, 5 bytes>
0x40001a:	call	0x500008
<Block for 0x40001f, 7 bytes>
0x40001f:	and	eax, 1
0x400022:	test	eax, eax
0x400024:	je	0x400043
<Block for 0x400043, 5 bytes>
0x400043:	call	0x500008
<Block for 0x400026, 5 bytes>
0x400026:	call	0x500008
<Block for 0x400048, 10 bytes>
0x400048:	shl	eax, 0x1e
0x40004b:	mov	ebx, eax
0x40004d:	call	0x500008
<Block for 0x40002b, 10 bytes>
0x40002b:	shl	eax, 0x1e
0x40002e:	mov	ebx, eax
0x400030:	call	0x500008
<Block for 0x400052, 10 bytes>
0x400052:	shl	eax, 0xf
0x400055:	xor	ebx, eax
0x400057:	call	0x500008
<Block for 0x400035, 10 bytes>
0x400035:	shl	eax, 0xf
0x400038:	xor	ebx, eax
0x40003a:	call	0x500008
<Block for 0x40005c, 17 bytes>
0x40005c:	xor	eax, ebx
0x40005e:	not	eax
0x400060:	mov	dword ptr [rbp - 0x14], eax
0x400063:	mov	eax, dword ptr [rbp - 0x14]
0x400066:	add	rsp, 0x18
0x40006a:	pop	rbx
0x40006b:	pop	rbp
0x40006c:	ret	
<Block for 0x40003f, 4 bytes>
0x40003f:	xor	eax, ebx
0x400041:	jmp	0x400060
<Block for 0x400060, 13 bytes>
0x400060:	mov	dword ptr [rbp - 0x14], eax
0x400063:	mov	eax, dword ptr [rbp - 0x14]
0x400066:	add	rsp, 0x18
0x40006a:	pop	rbx
0x40006b:	pop	rbp
0x40006c:	ret	
