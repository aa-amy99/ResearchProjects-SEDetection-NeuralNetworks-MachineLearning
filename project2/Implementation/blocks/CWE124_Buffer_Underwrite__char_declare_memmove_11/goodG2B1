<Block for 0x4000c4, 55 bytes>
0x4000c4:	endbr64	
0x4000c8:	push	rbp
0x4000c9:	mov	rbp, rsp
0x4000cc:	sub	rsp, 0xf0
0x4000d3:	mov	rax, qword ptr fs:[0x28]
0x4000dc:	mov	qword ptr [rbp - 8], rax
0x4000e0:	xor	eax, eax
0x4000e2:	lea	rax, [rbp - 0xe0]
0x4000e9:	mov	edx, 0x63
0x4000ee:	mov	esi, 0x41
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500000
<Block for 0x4000fb, 14 bytes>
0x4000fb:	mov	byte ptr [rbp - 0x7d], 0
0x4000ff:	mov	eax, 0
0x400104:	call	0x500028
<Block for 0x400109, 4 bytes>
0x400109:	test	eax, eax
0x40010b:	je	0x40011b
<Block for 0x40011b, 36 bytes>
0x40011b:	lea	rax, [rbp - 0xe0]
0x400122:	mov	qword ptr [rbp - 0xe8], rax
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x43
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x40010d, 12 bytes>
0x40010d:	lea	rdi, [rip + 0x15d]
0x400114:	call	0x500018
<Block for 0x40013f, 31 bytes>
0x40013f:	mov	byte ptr [rbp - 0xd], 0
0x400143:	lea	rcx, [rbp - 0x70]
0x400147:	mov	rax, qword ptr [rbp - 0xe8]
0x40014e:	mov	edx, 0x64
0x400153:	mov	rsi, rcx
0x400156:	mov	rdi, rax
0x400159:	call	0x500010
<Block for 0x400119, 2 bytes>
0x400119:	jmp	0x400129
<Block for 0x40015e, 29 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0xe8]
0x400165:	add	rax, 0x63
0x400169:	mov	byte ptr [rax], 0
0x40016c:	mov	rax, qword ptr [rbp - 0xe8]
0x400173:	mov	rdi, rax
0x400176:	call	0x500018
<Block for 0x400129, 22 bytes>
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	edx, 0x63
0x400132:	mov	esi, 0x43
0x400137:	mov	rdi, rax
0x40013a:	call	0x500000
<Block for 0x40017b, 16 bytes>
0x40017b:	nop	
0x40017c:	mov	rax, qword ptr [rbp - 8]
0x400180:	xor	rax, qword ptr fs:[0x28]
0x400189:	je	0x400190
<Block for 0x400190, 2 bytes>
0x400190:	leave	
0x400191:	ret	
<Block for 0x40018b, 5 bytes>
0x40018b:	call	0x500020
