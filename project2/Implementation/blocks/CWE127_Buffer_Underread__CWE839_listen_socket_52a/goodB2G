<Block for 0x400182, 68 bytes>
0x400182:	endbr64	
0x400186:	push	rbp
0x400187:	mov	rbp, rsp
0x40018a:	sub	rsp, 0x40
0x40018e:	mov	rax, qword ptr fs:[0x28]
0x400197:	mov	qword ptr [rbp - 8], rax
0x40019b:	xor	eax, eax
0x40019d:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4001a4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001ab:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4001b2:	mov	edx, 6
0x4001b7:	mov	esi, 1
0x4001bc:	mov	edi, 2
0x4001c1:	call	0x500000
<Block for 0x4001c6, 13 bytes>
0x4001c6:	mov	dword ptr [rbp - 0x38], eax
0x4001c9:	cmp	dword ptr [rbp - 0x38], -1
0x4001cd:	je	0x400292
<Block for 0x400292, 3 bytes>
0x400292:	nop	
0x400293:	jmp	0x40029c
<Block for 0x4001d3, 22 bytes>
0x4001d3:	lea	rax, [rbp - 0x30]
0x4001d7:	mov	edx, 0x10
0x4001dc:	mov	esi, 0
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500008
<Block for 0x40029c, 6 bytes>
0x40029c:	cmp	dword ptr [rbp - 0x38], -1
0x4002a0:	je	0x4002ac
<Block for 0x4001e9, 23 bytes>
0x4001e9:	mov	word ptr [rbp - 0x30], 2
0x4001ef:	mov	dword ptr [rbp - 0x2c], 0
0x4001f6:	mov	edi, 0x6987
0x4001fb:	call	0x500010
<Block for 0x4002ac, 6 bytes>
0x4002ac:	cmp	dword ptr [rbp - 0x3c], -1
0x4002b0:	je	0x4002bc
<Block for 0x4002a2, 10 bytes>
0x4002a2:	mov	eax, dword ptr [rbp - 0x38]
0x4002a5:	mov	edi, eax
0x4002a7:	call	0x500040
<Block for 0x400200, 26 bytes>
0x400200:	mov	word ptr [rbp - 0x2e], ax
0x400204:	lea	rcx, [rbp - 0x30]
0x400208:	mov	eax, dword ptr [rbp - 0x38]
0x40020b:	mov	edx, 0x10
0x400210:	mov	rsi, rcx
0x400213:	mov	edi, eax
0x400215:	call	0x500018
<Block for 0x4002bc, 10 bytes>
0x4002bc:	mov	eax, dword ptr [rbp - 0x40]
0x4002bf:	mov	edi, eax
0x4002c1:	call	0x500060
<Block for 0x4002b2, 10 bytes>
0x4002b2:	mov	eax, dword ptr [rbp - 0x3c]
0x4002b5:	mov	edi, eax
0x4002b7:	call	0x500040
<Block for 0x40021a, 5 bytes>
0x40021a:	cmp	eax, -1
0x40021d:	je	0x400295
<Block for 0x4002c6, 16 bytes>
0x4002c6:	nop	
0x4002c7:	mov	rax, qword ptr [rbp - 8]
0x4002cb:	xor	rax, qword ptr fs:[0x28]
0x4002d4:	je	0x4002db
<Block for 0x400295, 3 bytes>
0x400295:	nop	
0x400296:	jmp	0x40029c
<Block for 0x40021f, 15 bytes>
0x40021f:	mov	eax, dword ptr [rbp - 0x38]
0x400222:	mov	esi, 5
0x400227:	mov	edi, eax
0x400229:	call	0x500020
<Block for 0x4002db, 2 bytes>
0x4002db:	leave	
0x4002dc:	ret	
<Block for 0x4002d6, 5 bytes>
0x4002d6:	call	0x500050
<Block for 0x40022e, 5 bytes>
0x40022e:	cmp	eax, -1
0x400231:	je	0x400298
<Block for 0x400298, 3 bytes>
0x400298:	nop	
0x400299:	jmp	0x40029c
<Block for 0x400233, 20 bytes>
0x400233:	mov	eax, dword ptr [rbp - 0x38]
0x400236:	mov	edx, 0
0x40023b:	mov	esi, 0
0x400240:	mov	edi, eax
0x400242:	call	0x500028
<Block for 0x400247, 9 bytes>
0x400247:	mov	dword ptr [rbp - 0x3c], eax
0x40024a:	cmp	dword ptr [rbp - 0x3c], -1
0x40024e:	je	0x40029b
<Block for 0x400250, 24 bytes>
0x400250:	lea	rsi, [rbp - 0x16]
0x400254:	mov	eax, dword ptr [rbp - 0x3c]
0x400257:	mov	ecx, 0
0x40025c:	mov	edx, 0xd
0x400261:	mov	edi, eax
0x400263:	call	0x500030
<Block for 0x40029b, 1 bytes>
0x40029b:	nop	
<Block for 0x400268, 9 bytes>
0x400268:	mov	dword ptr [rbp - 0x34], eax
0x40026b:	cmp	dword ptr [rbp - 0x34], -1
0x40026f:	je	0x40029c
<Block for 0x400271, 6 bytes>
0x400271:	cmp	dword ptr [rbp - 0x34], 0
0x400275:	je	0x40029c
<Block for 0x400277, 22 bytes>
0x400277:	mov	eax, dword ptr [rbp - 0x34]
0x40027a:	cdqe	
0x40027c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400281:	lea	rax, [rbp - 0x16]
0x400285:	mov	rdi, rax
0x400288:	call	0x500038
<Block for 0x40028d, 5 bytes>
0x40028d:	mov	dword ptr [rbp - 0x40], eax
0x400290:	jmp	0x40029c
