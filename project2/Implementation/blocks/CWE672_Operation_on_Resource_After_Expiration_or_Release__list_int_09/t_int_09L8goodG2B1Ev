<Block for 0x40046e, 40 bytes>
0x40046e:	endbr64	
0x400472:	push	rbp
0x400473:	mov	rbp, rsp
0x400476:	push	rbx
0x400477:	sub	rsp, 0x38
0x40047b:	mov	rax, qword ptr fs:[0x28]
0x400484:	mov	qword ptr [rbp - 0x18], rax
0x400488:	xor	eax, eax
0x40048a:	lea	rax, [rbp - 0x30]
0x40048e:	mov	rdi, rax
0x400491:	call	0x4008f8
<Block for 0x400496, 10 bytes>
0x400496:	mov	eax, dword ptr [rip + 0xffbac]
0x40049c:	test	eax, eax
0x40049e:	je	0x4004ae
<Block for 0x4004ae, 26 bytes>
0x4004ae:	mov	dword ptr [rbp - 0x38], 0x64
0x4004b5:	lea	rdx, [rbp - 0x38]
0x4004b9:	lea	rax, [rbp - 0x30]
0x4004bd:	mov	rsi, rdx
0x4004c0:	mov	rdi, rax
0x4004c3:	call	0x4009fe
<Block for 0x4004a0, 12 bytes>
0x4004a0:	lea	rdi, [rip + 0x3a6]
0x4004a7:	call	0x500050
<Block for 0x4004c8, 26 bytes>
0x4004c8:	mov	dword ptr [rbp - 0x38], 0xc8
0x4004cf:	lea	rdx, [rbp - 0x38]
0x4004d3:	lea	rax, [rbp - 0x30]
0x4004d7:	mov	rsi, rdx
0x4004da:	mov	rdi, rax
0x4004dd:	call	0x4009fe
<Block for 0x4004ac, 2 bytes>
0x4004ac:	jmp	0x4004e2
<Block for 0x4004e2, 14 bytes>
0x4004e2:	mov	eax, dword ptr [rip + 0xffb18]
0x4004e8:	test	eax, eax
0x4004ea:	je	0x4005c3
<Block for 0x4005c3, 12 bytes>
0x4005c3:	lea	rax, [rbp - 0x30]
0x4005c7:	mov	rdi, rax
0x4005ca:	call	0x400918
<Block for 0x4004f0, 12 bytes>
0x4004f0:	lea	rax, [rbp - 0x40]
0x4004f4:	mov	rdi, rax
0x4004f7:	call	0x400a4c
<Block for 0x4005cf, 16 bytes>
0x4005cf:	nop	
0x4005d0:	mov	rax, qword ptr [rbp - 0x18]
0x4005d4:	xor	rax, qword ptr fs:[0x28]
0x4005dd:	je	0x400604
<Block for 0x4004fc, 19 bytes>
0x4004fc:	lea	rsi, [rip + 0x334]
0x400503:	lea	rdi, [rip + 0xffafe]
0x40050a:	call	0x500010
<Block for 0x400604, 7 bytes>
0x400604:	add	rsp, 0x38
0x400608:	pop	rbx
0x400609:	pop	rbp
0x40060a:	ret	
<Block for 0x4005df, 2 bytes>
0x4005df:	jmp	0x4005ff
<Block for 0x40050f, 12 bytes>
0x40050f:	lea	rax, [rbp - 0x30]
0x400513:	mov	rdi, rax
0x400516:	call	0x400a66
<Block for 0x4005ff, 5 bytes>
0x4005ff:	call	0x500040
<Block for 0x40051b, 16 bytes>
0x40051b:	mov	qword ptr [rbp - 0x40], rax
0x40051f:	lea	rax, [rbp - 0x30]
0x400523:	mov	rdi, rax
0x400526:	call	0x400ab6
<Block for 0x40052b, 23 bytes>
0x40052b:	mov	qword ptr [rbp - 0x38], rax
0x40052f:	lea	rdx, [rbp - 0x38]
0x400533:	lea	rax, [rbp - 0x40]
0x400537:	mov	rsi, rdx
0x40053a:	mov	rdi, rax
0x40053d:	call	0x400b02
<Block for 0x400542, 4 bytes>
0x400542:	test	al, al
0x400544:	je	0x4005ad
<Block for 0x4005ad, 22 bytes>
0x4005ad:	mov	rax, qword ptr [rip + 0xffa74]
0x4005b4:	mov	rsi, rax
0x4005b7:	lea	rdi, [rip + 0xffa4a]
0x4005be:	call	0x500030
<Block for 0x400546, 12 bytes>
0x400546:	lea	rax, [rbp - 0x40]
0x40054a:	mov	rdi, rax
0x40054d:	call	0x400b80
<Block for 0x400552, 11 bytes>
0x400552:	mov	eax, dword ptr [rax]
0x400554:	test	eax, eax
0x400556:	sete	al
0x400559:	test	al, al
0x40055b:	je	0x400569
<Block for 0x400569, 19 bytes>
0x400569:	lea	rsi, [rip + 0x2db]
0x400570:	lea	rdi, [rip + 0xffa91]
0x400577:	call	0x500010
<Block for 0x40055d, 12 bytes>
0x40055d:	lea	rax, [rbp - 0x30]
0x400561:	mov	rdi, rax
0x400564:	call	0x400ba2
<Block for 0x40057c, 15 bytes>
0x40057c:	mov	rbx, rax
0x40057f:	lea	rax, [rbp - 0x40]
0x400583:	mov	rdi, rax
0x400586:	call	0x400b80
<Block for 0x40058b, 12 bytes>
0x40058b:	mov	eax, dword ptr [rax]
0x40058d:	mov	esi, eax
0x40058f:	mov	rdi, rbx
0x400592:	call	0x500018
<Block for 0x400597, 17 bytes>
0x400597:	lea	rax, [rbp - 0x40]
0x40059b:	mov	esi, 0
0x4005a0:	mov	rdi, rax
0x4005a3:	call	0x400b28
<Block for 0x4005a8, 5 bytes>
0x4005a8:	jmp	0x40051f
<Block for 0x40051f, 12 bytes>
0x40051f:	lea	rax, [rbp - 0x30]
0x400523:	mov	rdi, rax
0x400526:	call	0x400ab6
