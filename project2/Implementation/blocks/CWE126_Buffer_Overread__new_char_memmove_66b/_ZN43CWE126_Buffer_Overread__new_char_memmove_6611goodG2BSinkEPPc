<Block for 0x4000aa, 74 bytes>
0x4000aa:	endbr64	
0x4000ae:	push	rbp
0x4000af:	mov	rbp, rsp
0x4000b2:	sub	rsp, 0x90
0x4000b9:	mov	qword ptr [rbp - 0x88], rdi
0x4000c0:	mov	rax, qword ptr fs:[0x28]
0x4000c9:	mov	qword ptr [rbp - 8], rax
0x4000cd:	xor	eax, eax
0x4000cf:	mov	rax, qword ptr [rbp - 0x88]
0x4000d6:	mov	rax, qword ptr [rax + 0x10]
0x4000da:	mov	qword ptr [rbp - 0x78], rax
0x4000de:	lea	rax, [rbp - 0x70]
0x4000e2:	mov	edx, 0x63
0x4000e7:	mov	esi, 0x43
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000f4, 16 bytes>
0x4000f4:	mov	byte ptr [rbp - 0xd], 0
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500008
<Block for 0x400104, 22 bytes>
0x400104:	mov	rdx, rax
0x400107:	mov	rcx, qword ptr [rbp - 0x78]
0x40010b:	lea	rax, [rbp - 0x70]
0x40010f:	mov	rsi, rcx
0x400112:	mov	rdi, rax
0x400115:	call	0x500010
<Block for 0x40011a, 16 bytes>
0x40011a:	mov	byte ptr [rbp - 0xd], 0
0x40011e:	lea	rax, [rbp - 0x70]
0x400122:	mov	rdi, rax
0x400125:	call	0x500018
<Block for 0x40012a, 7 bytes>
0x40012a:	cmp	qword ptr [rbp - 0x78], 0
0x40012f:	je	0x40013d
<Block for 0x40013d, 16 bytes>
0x40013d:	nop	
0x40013e:	mov	rax, qword ptr [rbp - 8]
0x400142:	xor	rax, qword ptr fs:[0x28]
0x40014b:	je	0x400152
<Block for 0x400131, 12 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x78]
0x400135:	mov	rdi, rax
0x400138:	call	0x500020
<Block for 0x400152, 2 bytes>
0x400152:	leave	
0x400153:	ret	
<Block for 0x40014d, 5 bytes>
0x40014d:	call	0x500028
