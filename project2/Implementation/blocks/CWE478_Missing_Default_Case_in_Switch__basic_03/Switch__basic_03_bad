<Block for 0x400000, 28 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	lea	rax, [rip + 0x193]
0x400013:	mov	qword ptr [rbp - 8], rax
0x400017:	call	0x500000
<Block for 0x40001c, 55 bytes>
0x40001c:	mov	edx, eax
0x40001e:	movsxd	rax, edx
0x400021:	imul	rax, rax, 0x55555556
0x400028:	shr	rax, 0x20
0x40002c:	mov	rcx, rax
0x40002f:	mov	eax, edx
0x400031:	sar	eax, 0x1f
0x400034:	mov	esi, ecx
0x400036:	sub	esi, eax
0x400038:	mov	eax, esi
0x40003a:	mov	dword ptr [rbp - 0xc], eax
0x40003d:	mov	ecx, dword ptr [rbp - 0xc]
0x400040:	mov	eax, ecx
0x400042:	add	eax, eax
0x400044:	add	eax, ecx
0x400046:	sub	edx, eax
0x400048:	mov	eax, edx
0x40004a:	mov	dword ptr [rbp - 0xc], eax
0x40004d:	cmp	dword ptr [rbp - 0xc], 0
0x400051:	je	0x40005b
<Block for 0x40005b, 13 bytes>
0x40005b:	lea	rax, [rip + 0x15d]
0x400062:	mov	qword ptr [rbp - 8], rax
0x400066:	jmp	0x400074
<Block for 0x400053, 6 bytes>
0x400053:	cmp	dword ptr [rbp - 0xc], 1
0x400057:	je	0x400068
<Block for 0x400074, 12 bytes>
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500008
<Block for 0x400068, 24 bytes>
0x400068:	lea	rax, [rip + 0x152]
0x40006f:	mov	qword ptr [rbp - 8], rax
0x400073:	nop	
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500008
<Block for 0x400059, 2 bytes>
0x400059:	jmp	0x400074
<Block for 0x400080, 3 bytes>
0x400080:	nop	
0x400081:	leave	
0x400082:	ret	
