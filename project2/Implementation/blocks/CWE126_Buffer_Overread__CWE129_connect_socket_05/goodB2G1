<Block for 0x40016f, 48 bytes>
0x40016f:	endbr64	
0x400173:	push	rbp
0x400174:	mov	rbp, rsp
0x400177:	sub	rsp, 0x50
0x40017b:	mov	rax, qword ptr fs:[0x28]
0x400184:	mov	qword ptr [rbp - 8], rax
0x400188:	xor	eax, eax
0x40018a:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400191:	mov	eax, dword ptr [rip + 0x451]
0x400197:	test	eax, eax
0x400199:	je	0x400271
<Block for 0x400271, 10 bytes>
0x400271:	mov	eax, dword ptr [rip + 0x375]
0x400277:	test	eax, eax
0x400279:	je	0x400289
<Block for 0x40019f, 27 bytes>
0x40019f:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001a6:	mov	edx, 6
0x4001ab:	mov	esi, 1
0x4001b0:	mov	edi, 2
0x4001b5:	call	0x500000
<Block for 0x400289, 46 bytes>
0x400289:	mov	qword ptr [rbp - 0x40], 0
0x400291:	mov	qword ptr [rbp - 0x38], 0
0x400299:	mov	qword ptr [rbp - 0x30], 0
0x4002a1:	mov	qword ptr [rbp - 0x28], 0
0x4002a9:	mov	qword ptr [rbp - 0x20], 0
0x4002b1:	cmp	dword ptr [rbp - 0x4c], 0
0x4002b5:	js	0x4002cf
<Block for 0x40027b, 12 bytes>
0x40027b:	lea	rdi, [rip + 0x39d]
0x400282:	call	0x500048
<Block for 0x4001ba, 13 bytes>
0x4001ba:	mov	dword ptr [rbp - 0x48], eax
0x4001bd:	cmp	dword ptr [rbp - 0x48], -1
0x4001c1:	je	0x40025d
<Block for 0x4002cf, 12 bytes>
0x4002cf:	lea	rdi, [rip + 0x362]
0x4002d6:	call	0x500048
<Block for 0x4002b7, 6 bytes>
0x4002b7:	cmp	dword ptr [rbp - 0x4c], 9
0x4002bb:	jg	0x4002cf
<Block for 0x400287, 2 bytes>
0x400287:	jmp	0x4002db
<Block for 0x40025d, 3 bytes>
0x40025d:	nop	
0x40025e:	jmp	0x400261
<Block for 0x4001c7, 22 bytes>
0x4001c7:	lea	rax, [rbp - 0x40]
0x4001cb:	mov	edx, 0x10
0x4001d0:	mov	esi, 0
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500008
<Block for 0x4002db, 16 bytes>
0x4002db:	nop	
0x4002dc:	mov	rax, qword ptr [rbp - 8]
0x4002e0:	xor	rax, qword ptr fs:[0x28]
0x4002e9:	je	0x4002f0
<Block for 0x4002bd, 16 bytes>
0x4002bd:	mov	eax, dword ptr [rbp - 0x4c]
0x4002c0:	cdqe	
0x4002c2:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002c6:	mov	edi, eax
0x4002c8:	call	0x500040
<Block for 0x400261, 6 bytes>
0x400261:	cmp	dword ptr [rbp - 0x48], -1
0x400265:	je	0x400271
<Block for 0x4001dd, 18 bytes>
0x4001dd:	mov	word ptr [rbp - 0x40], 2
0x4001e3:	lea	rdi, [rip + 0x406]
0x4001ea:	call	0x500010
<Block for 0x4002f0, 2 bytes>
0x4002f0:	leave	
0x4002f1:	ret	
<Block for 0x4002eb, 5 bytes>
0x4002eb:	call	0x500050
<Block for 0x4002cd, 2 bytes>
0x4002cd:	jmp	0x4002db
<Block for 0x400267, 10 bytes>
0x400267:	mov	eax, dword ptr [rbp - 0x48]
0x40026a:	mov	edi, eax
0x40026c:	call	0x500038
<Block for 0x4001ef, 13 bytes>
0x4001ef:	mov	dword ptr [rbp - 0x3c], eax
0x4001f2:	mov	edi, 0x6987
0x4001f7:	call	0x500018
<Block for 0x4001fc, 26 bytes>
0x4001fc:	mov	word ptr [rbp - 0x3e], ax
0x400200:	lea	rcx, [rbp - 0x40]
0x400204:	mov	eax, dword ptr [rbp - 0x48]
0x400207:	mov	edx, 0x10
0x40020c:	mov	rsi, rcx
0x40020f:	mov	edi, eax
0x400211:	call	0x500020
<Block for 0x400216, 5 bytes>
0x400216:	cmp	eax, -1
0x400219:	je	0x400260
<Block for 0x40021b, 24 bytes>
0x40021b:	lea	rsi, [rbp - 0x16]
0x40021f:	mov	eax, dword ptr [rbp - 0x48]
0x400222:	mov	ecx, 0
0x400227:	mov	edx, 0xd
0x40022c:	mov	edi, eax
0x40022e:	call	0x500028
<Block for 0x400260, 1 bytes>
0x400260:	nop	
<Block for 0x400233, 9 bytes>
0x400233:	mov	dword ptr [rbp - 0x44], eax
0x400236:	cmp	dword ptr [rbp - 0x44], -1
0x40023a:	je	0x400261
<Block for 0x40023c, 6 bytes>
0x40023c:	cmp	dword ptr [rbp - 0x44], 0
0x400240:	je	0x400261
<Block for 0x400242, 22 bytes>
0x400242:	mov	eax, dword ptr [rbp - 0x44]
0x400245:	cdqe	
0x400247:	mov	byte ptr [rbp + rax - 0x16], 0
0x40024c:	lea	rax, [rbp - 0x16]
0x400250:	mov	rdi, rax
0x400253:	call	0x500030
<Block for 0x400258, 5 bytes>
0x400258:	mov	dword ptr [rbp - 0x4c], eax
0x40025b:	jmp	0x400261
