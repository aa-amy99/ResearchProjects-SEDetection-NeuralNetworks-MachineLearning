<Block for 0x400515, 44 bytes>
0x400515:	endbr64	
0x400519:	push	rbp
0x40051a:	mov	rbp, rsp
0x40051d:	sub	rsp, 0x40
0x400521:	mov	rax, qword ptr fs:[0x28]
0x40052a:	mov	qword ptr [rbp - 8], rax
0x40052e:	xor	eax, eax
0x400530:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400537:	mov	eax, dword ptr [rip + 0xab]
0x40053d:	test	eax, eax
0x40053f:	je	0x400548
<Block for 0x400548, 10 bytes>
0x400548:	mov	eax, dword ptr [rip + 0x9a]
0x40054e:	test	eax, eax
0x400550:	je	0x40059e
<Block for 0x400541, 17 bytes>
0x400541:	mov	dword ptr [rbp - 0x34], 7
0x400548:	mov	eax, dword ptr [rip + 0x9a]
0x40054e:	test	eax, eax
0x400550:	je	0x40059e
<Block for 0x40059e, 16 bytes>
0x40059e:	nop	
0x40059f:	mov	rax, qword ptr [rbp - 8]
0x4005a3:	xor	rax, qword ptr fs:[0x28]
0x4005ac:	je	0x4005b3
<Block for 0x400552, 46 bytes>
0x400552:	mov	qword ptr [rbp - 0x30], 0
0x40055a:	mov	qword ptr [rbp - 0x28], 0
0x400562:	mov	qword ptr [rbp - 0x20], 0
0x40056a:	mov	qword ptr [rbp - 0x18], 0
0x400572:	mov	qword ptr [rbp - 0x10], 0
0x40057a:	cmp	dword ptr [rbp - 0x34], 0
0x40057e:	js	0x400592
<Block for 0x4005b3, 2 bytes>
0x4005b3:	leave	
0x4005b4:	ret	
<Block for 0x4005ae, 5 bytes>
0x4005ae:	call	0x500050
<Block for 0x400592, 12 bytes>
0x400592:	lea	rdi, [rip + 0x67]
0x400599:	call	0x500048
<Block for 0x400580, 16 bytes>
0x400580:	mov	eax, dword ptr [rbp - 0x34]
0x400583:	cdqe	
0x400585:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400589:	mov	edi, eax
0x40058b:	call	0x500040
<Block for 0x400590, 2 bytes>
0x400590:	jmp	0x40059e
