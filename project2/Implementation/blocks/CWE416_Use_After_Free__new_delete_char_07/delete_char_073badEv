<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0x1d6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x40004a
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 1
0x400024:	call	0x500000
<Block for 0x40004a, 11 bytes>
0x40004a:	mov	eax, dword ptr [rip + 0x1a0]
0x400050:	cmp	eax, 5
0x400053:	jne	0x400066
<Block for 0x400029, 20 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	mov	rax, qword ptr [rbp - 8]
0x400031:	mov	byte ptr [rax], 0x41
0x400034:	mov	rax, qword ptr [rbp - 8]
0x400038:	test	rax, rax
0x40003b:	je	0x40004a
<Block for 0x400055, 17 bytes>
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	movzx	eax, byte ptr [rax]
0x40005c:	movsx	eax, al
0x40005f:	mov	edi, eax
0x400061:	call	0x500010
<Block for 0x400066, 3 bytes>
0x400066:	nop	
0x400067:	leave	
0x400068:	ret	
<Block for 0x40003d, 13 bytes>
0x40003d:	mov	esi, 1
0x400042:	mov	rdi, rax
0x400045:	call	0x500008
