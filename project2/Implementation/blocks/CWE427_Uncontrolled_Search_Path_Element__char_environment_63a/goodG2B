<Block for 0x4000f5, 82 bytes>
0x4000f5:	endbr64	
0x4000f9:	push	rbp
0x4000fa:	mov	rbp, rsp
0x4000fd:	sub	rsp, 0x120
0x400104:	mov	rax, qword ptr fs:[0x28]
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	xor	eax, eax
0x400113:	movabs	rax, 0x3d48544150
0x40011d:	mov	edx, 0
0x400122:	mov	qword ptr [rbp - 0x110], rax
0x400129:	mov	qword ptr [rbp - 0x108], rdx
0x400130:	lea	rdx, [rbp - 0x100]
0x400137:	mov	eax, 0
0x40013c:	mov	ecx, 0x1d
0x400141:	mov	rdi, rdx
0x400144:	rep stosq	qword ptr [rdi], rax
<Block for 0x400147, 54 bytes>
0x400147:	mov	rdx, rdi
0x40014a:	mov	word ptr [rdx], ax
0x40014d:	add	rdx, 2
0x400151:	lea	rax, [rbp - 0x110]
0x400158:	mov	qword ptr [rbp - 0x118], rax
0x40015f:	mov	rdx, qword ptr [rbp - 0x118]
0x400166:	mov	rax, rdx
0x400169:	mov	rcx, -1
0x400170:	mov	rsi, rax
0x400173:	mov	eax, 0
0x400178:	mov	rdi, rsi
0x40017b:	repne scasb	al, byte ptr [rdi]
<Block for 0x400144, 3 bytes>
0x400144:	rep stosq	qword ptr [rdi], rax
<Block for 0x40017d, 38 bytes>
0x40017d:	mov	rax, rcx
0x400180:	not	rax
0x400183:	sub	rax, 1
0x400187:	add	rax, rdx
0x40018a:	mov	dword ptr [rax], 0x6e69622f
0x400190:	mov	byte ptr [rax + 4], 0
0x400194:	lea	rax, [rbp - 0x118]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500028
<Block for 0x40017b, 2 bytes>
0x40017b:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500020
