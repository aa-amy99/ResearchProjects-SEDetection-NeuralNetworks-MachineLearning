<Block for 0x400482, 59 bytes>
0x400482:	endbr64	
0x400486:	push	rbp
0x400487:	mov	rbp, rsp
0x40048a:	sub	rsp, 0x30
0x40048e:	mov	qword ptr [rbp - 0x28], rdi
0x400492:	mov	rax, qword ptr fs:[0x28]
0x40049b:	mov	qword ptr [rbp - 8], rax
0x40049f:	xor	eax, eax
0x4004a1:	lea	rdx, [rbp - 0x14]
0x4004a5:	mov	rax, qword ptr [rbp - 0x28]
0x4004a9:	lea	rsi, [rip + 0x336]
0x4004b0:	mov	rdi, rax
0x4004b3:	mov	eax, 0
0x4004b8:	call	0x500000
<Block for 0x4004bd, 5 bytes>
0x4004bd:	cmp	eax, 1
0x4004c0:	jne	0x4004f6
<Block for 0x4004c2, 10 bytes>
0x4004c2:	mov	eax, dword ptr [rbp - 0x14]
0x4004c5:	cmp	eax, 0x270f
0x4004ca:	jg	0x4004f6
<Block for 0x4004f6, 16 bytes>
0x4004f6:	nop	
0x4004f7:	mov	rax, qword ptr [rbp - 8]
0x4004fb:	xor	rax, qword ptr fs:[0x28]
0x400504:	je	0x40050b
<Block for 0x4004cc, 16 bytes>
0x4004cc:	mov	dword ptr [rbp - 0xc], 0
0x4004d3:	mov	dword ptr [rbp - 0x10], 0
0x4004da:	jmp	0x4004e4
<Block for 0x40050b, 2 bytes>
0x40050b:	leave	
0x40050c:	ret	
<Block for 0x400506, 5 bytes>
0x400506:	call	0x500010
<Block for 0x4004e4, 8 bytes>
0x4004e4:	mov	eax, dword ptr [rbp - 0x14]
0x4004e7:	cmp	dword ptr [rbp - 0x10], eax
0x4004ea:	jl	0x4004dc
<Block for 0x4004dc, 16 bytes>
0x4004dc:	add	dword ptr [rbp - 0xc], 1
0x4004e0:	add	dword ptr [rbp - 0x10], 1
0x4004e4:	mov	eax, dword ptr [rbp - 0x14]
0x4004e7:	cmp	dword ptr [rbp - 0x10], eax
0x4004ea:	jl	0x4004dc
<Block for 0x4004ec, 10 bytes>
0x4004ec:	mov	eax, dword ptr [rbp - 0xc]
0x4004ef:	mov	edi, eax
0x4004f1:	call	0x500008
