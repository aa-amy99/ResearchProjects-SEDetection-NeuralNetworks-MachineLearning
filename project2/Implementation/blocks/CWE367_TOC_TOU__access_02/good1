<Block for 0x40016c, 161 bytes>
0x40016c:	endbr64	
0x400170:	push	rbp
0x400171:	mov	rbp, rsp
0x400174:	add	rsp, -0x80
0x400178:	mov	rax, qword ptr fs:[0x28]
0x400181:	mov	qword ptr [rbp - 8], rax
0x400185:	xor	eax, eax
0x400187:	mov	qword ptr [rbp - 0x70], 0
0x40018f:	mov	qword ptr [rbp - 0x68], 0
0x400197:	mov	qword ptr [rbp - 0x60], 0
0x40019f:	mov	qword ptr [rbp - 0x58], 0
0x4001a7:	mov	qword ptr [rbp - 0x50], 0
0x4001af:	mov	qword ptr [rbp - 0x48], 0
0x4001b7:	mov	qword ptr [rbp - 0x40], 0
0x4001bf:	mov	qword ptr [rbp - 0x38], 0
0x4001c7:	mov	qword ptr [rbp - 0x30], 0
0x4001cf:	mov	qword ptr [rbp - 0x28], 0
0x4001d7:	mov	qword ptr [rbp - 0x20], 0
0x4001df:	mov	qword ptr [rbp - 0x18], 0
0x4001e7:	mov	dword ptr [rbp - 0x10], 0
0x4001ee:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x4001f5:	mov	rdx, qword ptr [rip + 0xffe04]
0x4001fc:	lea	rax, [rbp - 0x70]
0x400200:	mov	esi, 0x64
0x400205:	mov	rdi, rax
0x400208:	call	0x500008
<Block for 0x40020d, 5 bytes>
0x40020d:	test	rax, rax
0x400210:	jne	0x400222
<Block for 0x400212, 12 bytes>
0x400212:	lea	rdi, [rip + 0x20a]
0x400219:	call	0x500010
<Block for 0x400222, 11 bytes>
0x400222:	lea	rax, [rbp - 0x70]
0x400226:	movzx	eax, byte ptr [rax]
0x400229:	test	al, al
0x40022b:	je	0x400242
<Block for 0x40021e, 15 bytes>
0x40021e:	mov	byte ptr [rbp - 0x70], 0
0x400222:	lea	rax, [rbp - 0x70]
0x400226:	movzx	eax, byte ptr [rax]
0x400229:	test	al, al
0x40022b:	je	0x400242
<Block for 0x400242, 22 bytes>
0x400242:	lea	rax, [rbp - 0x70]
0x400246:	mov	esi, 2
0x40024b:	mov	rdi, rax
0x40024e:	mov	eax, 0
0x400253:	call	0x500030
<Block for 0x40022d, 12 bytes>
0x40022d:	lea	rax, [rbp - 0x70]
0x400231:	mov	rdi, rax
0x400234:	call	0x500018
<Block for 0x400258, 9 bytes>
0x400258:	mov	dword ptr [rbp - 0x74], eax
0x40025b:	cmp	dword ptr [rbp - 0x74], -1
0x40025f:	jne	0x40026b
<Block for 0x400239, 31 bytes>
0x400239:	sub	rax, 1
0x40023d:	mov	byte ptr [rbp + rax - 0x70], 0
0x400242:	lea	rax, [rbp - 0x70]
0x400246:	mov	esi, 2
0x40024b:	mov	rdi, rax
0x40024e:	mov	eax, 0
0x400253:	call	0x500030
<Block for 0x400261, 10 bytes>
0x400261:	mov	edi, 1
0x400266:	call	0x500028
<Block for 0x40026b, 22 bytes>
0x40026b:	mov	eax, dword ptr [rbp - 0x74]
0x40026e:	mov	edx, 0xc
0x400273:	lea	rsi, [rip + 0x1c4]
0x40027a:	mov	edi, eax
0x40027c:	call	0x500038
<Block for 0x400281, 6 bytes>
0x400281:	cmp	rax, -1
0x400285:	jne	0x400291
<Block for 0x400287, 10 bytes>
0x400287:	mov	edi, 1
0x40028c:	call	0x500028
<Block for 0x400291, 6 bytes>
0x400291:	cmp	dword ptr [rbp - 0x74], -1
0x400295:	je	0x4002a1
<Block for 0x4002a1, 16 bytes>
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 8]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002b6
<Block for 0x400297, 10 bytes>
0x400297:	mov	eax, dword ptr [rbp - 0x74]
0x40029a:	mov	edi, eax
0x40029c:	call	0x500040
<Block for 0x4002b6, 2 bytes>
0x4002b6:	leave	
0x4002b7:	ret	
<Block for 0x4002b1, 5 bytes>
0x4002b1:	call	0x500048
