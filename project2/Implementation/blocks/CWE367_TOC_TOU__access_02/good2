<Block for 0x4002b8, 161 bytes>
0x4002b8:	endbr64	
0x4002bc:	push	rbp
0x4002bd:	mov	rbp, rsp
0x4002c0:	add	rsp, -0x80
0x4002c4:	mov	rax, qword ptr fs:[0x28]
0x4002cd:	mov	qword ptr [rbp - 8], rax
0x4002d1:	xor	eax, eax
0x4002d3:	mov	qword ptr [rbp - 0x70], 0
0x4002db:	mov	qword ptr [rbp - 0x68], 0
0x4002e3:	mov	qword ptr [rbp - 0x60], 0
0x4002eb:	mov	qword ptr [rbp - 0x58], 0
0x4002f3:	mov	qword ptr [rbp - 0x50], 0
0x4002fb:	mov	qword ptr [rbp - 0x48], 0
0x400303:	mov	qword ptr [rbp - 0x40], 0
0x40030b:	mov	qword ptr [rbp - 0x38], 0
0x400313:	mov	qword ptr [rbp - 0x30], 0
0x40031b:	mov	qword ptr [rbp - 0x28], 0
0x400323:	mov	qword ptr [rbp - 0x20], 0
0x40032b:	mov	qword ptr [rbp - 0x18], 0
0x400333:	mov	dword ptr [rbp - 0x10], 0
0x40033a:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400341:	mov	rdx, qword ptr [rip + 0xffcb8]
0x400348:	lea	rax, [rbp - 0x70]
0x40034c:	mov	esi, 0x64
0x400351:	mov	rdi, rax
0x400354:	call	0x500008
<Block for 0x400359, 5 bytes>
0x400359:	test	rax, rax
0x40035c:	jne	0x40036e
<Block for 0x40035e, 12 bytes>
0x40035e:	lea	rdi, [rip + 0xbe]
0x400365:	call	0x500010
<Block for 0x40036e, 11 bytes>
0x40036e:	lea	rax, [rbp - 0x70]
0x400372:	movzx	eax, byte ptr [rax]
0x400375:	test	al, al
0x400377:	je	0x40038e
<Block for 0x40036a, 15 bytes>
0x40036a:	mov	byte ptr [rbp - 0x70], 0
0x40036e:	lea	rax, [rbp - 0x70]
0x400372:	movzx	eax, byte ptr [rax]
0x400375:	test	al, al
0x400377:	je	0x40038e
<Block for 0x40038e, 22 bytes>
0x40038e:	lea	rax, [rbp - 0x70]
0x400392:	mov	esi, 2
0x400397:	mov	rdi, rax
0x40039a:	mov	eax, 0
0x40039f:	call	0x500030
<Block for 0x400379, 12 bytes>
0x400379:	lea	rax, [rbp - 0x70]
0x40037d:	mov	rdi, rax
0x400380:	call	0x500018
<Block for 0x4003a4, 9 bytes>
0x4003a4:	mov	dword ptr [rbp - 0x74], eax
0x4003a7:	cmp	dword ptr [rbp - 0x74], -1
0x4003ab:	jne	0x4003b7
<Block for 0x400385, 31 bytes>
0x400385:	sub	rax, 1
0x400389:	mov	byte ptr [rbp + rax - 0x70], 0
0x40038e:	lea	rax, [rbp - 0x70]
0x400392:	mov	esi, 2
0x400397:	mov	rdi, rax
0x40039a:	mov	eax, 0
0x40039f:	call	0x500030
<Block for 0x4003ad, 10 bytes>
0x4003ad:	mov	edi, 1
0x4003b2:	call	0x500028
<Block for 0x4003b7, 22 bytes>
0x4003b7:	mov	eax, dword ptr [rbp - 0x74]
0x4003ba:	mov	edx, 0xc
0x4003bf:	lea	rsi, [rip + 0x78]
0x4003c6:	mov	edi, eax
0x4003c8:	call	0x500038
<Block for 0x4003cd, 6 bytes>
0x4003cd:	cmp	rax, -1
0x4003d1:	jne	0x4003dd
<Block for 0x4003d3, 10 bytes>
0x4003d3:	mov	edi, 1
0x4003d8:	call	0x500028
<Block for 0x4003dd, 6 bytes>
0x4003dd:	cmp	dword ptr [rbp - 0x74], -1
0x4003e1:	je	0x4003ed
<Block for 0x4003ed, 16 bytes>
0x4003ed:	nop	
0x4003ee:	mov	rax, qword ptr [rbp - 8]
0x4003f2:	xor	rax, qword ptr fs:[0x28]
0x4003fb:	je	0x400402
<Block for 0x4003e3, 10 bytes>
0x4003e3:	mov	eax, dword ptr [rbp - 0x74]
0x4003e6:	mov	edi, eax
0x4003e8:	call	0x500040
<Block for 0x400402, 2 bytes>
0x400402:	leave	
0x400403:	ret	
<Block for 0x4003fd, 5 bytes>
0x4003fd:	call	0x500048
