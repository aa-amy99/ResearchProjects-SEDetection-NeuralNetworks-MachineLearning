<Block for 0x400079, 30 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	sub	rsp, 0x10
0x400085:	mov	qword ptr [rbp - 8], 0
0x40008d:	mov	edi, 0x320
0x400092:	call	0x500000
<Block for 0x400097, 19 bytes>
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	mov	qword ptr [rbp - 0x10], 0
0x4000a3:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a8:	ja	0x4000cb
<Block for 0x4000aa, 33 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 0x10]
0x4000ae:	lea	rdx, [rax*8]
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	add	rax, rdx
0x4000bd:	mov	qword ptr [rax], 5
0x4000c4:	add	qword ptr [rbp - 0x10], 1
0x4000c9:	jmp	0x4000a3
<Block for 0x4000cb, 7 bytes>
0x4000cb:	cmp	qword ptr [rbp - 8], 0
0x4000d0:	je	0x4000de
<Block for 0x4000a3, 7 bytes>
0x4000a3:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000a8:	ja	0x4000cb
<Block for 0x4000de, 5 bytes>
0x4000de:	nop	
0x4000df:	nop	
0x4000e0:	nop	
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000d2, 12 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 8]
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x500008
