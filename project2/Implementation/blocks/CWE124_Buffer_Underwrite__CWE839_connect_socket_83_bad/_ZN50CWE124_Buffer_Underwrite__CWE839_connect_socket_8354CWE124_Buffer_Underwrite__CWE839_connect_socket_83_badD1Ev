<Block for 0x40011c, 82 bytes>
0x40011c:	endbr64	
0x400120:	push	rbp
0x400121:	mov	rbp, rsp
0x400124:	sub	rsp, 0x50
0x400128:	mov	qword ptr [rbp - 0x48], rdi
0x40012c:	mov	rax, qword ptr fs:[0x28]
0x400135:	mov	qword ptr [rbp - 8], rax
0x400139:	xor	eax, eax
0x40013b:	mov	qword ptr [rbp - 0x30], 0
0x400143:	mov	qword ptr [rbp - 0x28], 0
0x40014b:	mov	qword ptr [rbp - 0x20], 0
0x400153:	mov	qword ptr [rbp - 0x18], 0
0x40015b:	mov	qword ptr [rbp - 0x10], 0
0x400163:	mov	rax, qword ptr [rbp - 0x48]
0x400167:	mov	eax, dword ptr [rax]
0x400169:	cmp	eax, 9
0x40016c:	jg	0x4001a1
<Block for 0x40016e, 29 bytes>
0x40016e:	mov	rax, qword ptr [rbp - 0x48]
0x400172:	mov	eax, dword ptr [rax]
0x400174:	cdqe	
0x400176:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40017e:	mov	dword ptr [rbp - 0x34], 0
0x400185:	cmp	dword ptr [rbp - 0x34], 9
0x400189:	jg	0x4001ad
<Block for 0x4001a1, 12 bytes>
0x4001a1:	lea	rdi, [rip + 0x30]
0x4001a8:	call	0x500050
<Block for 0x40018b, 16 bytes>
0x40018b:	mov	eax, dword ptr [rbp - 0x34]
0x40018e:	cdqe	
0x400190:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400194:	mov	edi, eax
0x400196:	call	0x500048
<Block for 0x4001ad, 16 bytes>
0x4001ad:	nop	
0x4001ae:	mov	rax, qword ptr [rbp - 8]
0x4001b2:	xor	rax, qword ptr fs:[0x28]
0x4001bb:	je	0x4001c2
<Block for 0x40019b, 6 bytes>
0x40019b:	add	dword ptr [rbp - 0x34], 1
0x40019f:	jmp	0x400185
<Block for 0x4001c2, 2 bytes>
0x4001c2:	leave	
0x4001c3:	ret	
<Block for 0x4001bd, 5 bytes>
0x4001bd:	call	0x500040
<Block for 0x400185, 6 bytes>
0x400185:	cmp	dword ptr [rbp - 0x34], 9
0x400189:	jg	0x4001ad
