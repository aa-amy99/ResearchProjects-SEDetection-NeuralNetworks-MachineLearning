<Block for 0x4000f0, 69 bytes>
0x4000f0:	endbr64	
0x4000f4:	push	rbp
0x4000f5:	mov	rbp, rsp
0x4000f8:	sub	rsp, 0x100
0x4000ff:	mov	rax, qword ptr fs:[0x28]
0x400108:	mov	qword ptr [rbp - 8], rax
0x40010c:	xor	eax, eax
0x40010e:	lea	rax, [rbp - 0x100]
0x400115:	mov	qword ptr [rbp - 0xf0], rax
0x40011c:	lea	rax, [rbp - 0xe0]
0x400123:	mov	edx, 0x63
0x400128:	mov	esi, 0x41
0x40012d:	mov	rdi, rax
0x400130:	call	0x500000
<Block for 0x400135, 57 bytes>
0x400135:	mov	byte ptr [rbp - 0x7d], 0
0x400139:	lea	rax, [rbp - 0xe0]
0x400140:	mov	qword ptr [rbp - 0x100], rax
0x400147:	mov	rax, qword ptr [rbp - 0xf0]
0x40014e:	mov	rax, qword ptr [rax]
0x400151:	mov	qword ptr [rbp - 0xe8], rax
0x400158:	lea	rax, [rbp - 0x70]
0x40015c:	mov	edx, 0x63
0x400161:	mov	esi, 0x43
0x400166:	mov	rdi, rax
0x400169:	call	0x500000
<Block for 0x40016e, 25 bytes>
0x40016e:	mov	byte ptr [rbp - 0xd], 0
0x400172:	mov	qword ptr [rbp - 0xf8], 0
0x40017d:	cmp	qword ptr [rbp - 0xf8], 0x63
0x400185:	ja	0x4001b5
<Block for 0x400187, 46 bytes>
0x400187:	mov	rdx, qword ptr [rbp - 0xe8]
0x40018e:	mov	rax, qword ptr [rbp - 0xf8]
0x400195:	add	rax, rdx
0x400198:	movzx	eax, byte ptr [rax]
0x40019b:	lea	rcx, [rbp - 0x70]
0x40019f:	mov	rdx, qword ptr [rbp - 0xf8]
0x4001a6:	add	rdx, rcx
0x4001a9:	mov	byte ptr [rdx], al
0x4001ab:	add	qword ptr [rbp - 0xf8], 1
0x4001b3:	jmp	0x40017d
<Block for 0x4001b5, 16 bytes>
0x4001b5:	mov	byte ptr [rbp - 0xd], 0
0x4001b9:	lea	rax, [rbp - 0x70]
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500008
<Block for 0x40017d, 10 bytes>
0x40017d:	cmp	qword ptr [rbp - 0xf8], 0x63
0x400185:	ja	0x4001b5
<Block for 0x4001c5, 16 bytes>
0x4001c5:	nop	
0x4001c6:	mov	rax, qword ptr [rbp - 8]
0x4001ca:	xor	rax, qword ptr fs:[0x28]
0x4001d3:	je	0x4001da
<Block for 0x4001da, 2 bytes>
0x4001da:	leave	
0x4001db:	ret	
<Block for 0x4001d5, 5 bytes>
0x4001d5:	call	0x500010
