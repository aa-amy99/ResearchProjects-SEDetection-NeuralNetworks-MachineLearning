<Block for 0x400189, 44 bytes>
0x400189:	endbr64	
0x40018d:	push	rbp
0x40018e:	mov	rbp, rsp
0x400191:	sub	rsp, 0x40
0x400195:	mov	rax, qword ptr fs:[0x28]
0x40019e:	mov	qword ptr [rbp - 8], rax
0x4001a2:	xor	eax, eax
0x4001a4:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001ab:	mov	eax, dword ptr [rip + 0xffe4f]
0x4001b1:	test	eax, eax
0x4001b3:	je	0x4001d4
<Block for 0x4001d4, 10 bytes>
0x4001d4:	mov	eax, dword ptr [rip + 0xffe26]
0x4001da:	test	eax, eax
0x4001dc:	je	0x400233
<Block for 0x4001b5, 31 bytes>
0x4001b5:	mov	rax, qword ptr [rip + 0xffe4c]
0x4001bc:	lea	rdx, [rbp - 0x34]
0x4001c0:	lea	rsi, [rip + 0x209]
0x4001c7:	mov	rdi, rax
0x4001ca:	mov	eax, 0
0x4001cf:	call	0x500010
<Block for 0x400233, 16 bytes>
0x400233:	nop	
0x400234:	mov	rax, qword ptr [rbp - 8]
0x400238:	xor	rax, qword ptr fs:[0x28]
0x400241:	je	0x400248
<Block for 0x4001de, 47 bytes>
0x4001de:	mov	qword ptr [rbp - 0x30], 0
0x4001e6:	mov	qword ptr [rbp - 0x28], 0
0x4001ee:	mov	qword ptr [rbp - 0x20], 0
0x4001f6:	mov	qword ptr [rbp - 0x18], 0
0x4001fe:	mov	qword ptr [rbp - 0x10], 0
0x400206:	mov	eax, dword ptr [rbp - 0x34]
0x400209:	test	eax, eax
0x40020b:	js	0x400227
<Block for 0x400248, 2 bytes>
0x400248:	leave	
0x400249:	ret	
<Block for 0x400243, 5 bytes>
0x400243:	call	0x500028
<Block for 0x400227, 12 bytes>
0x400227:	lea	rdi, [rip + 0x1e2]
0x40022e:	call	0x500020
<Block for 0x40020d, 8 bytes>
0x40020d:	mov	eax, dword ptr [rbp - 0x34]
0x400210:	cmp	eax, 9
0x400213:	jg	0x400227
<Block for 0x400215, 16 bytes>
0x400215:	mov	eax, dword ptr [rbp - 0x34]
0x400218:	cdqe	
0x40021a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40021e:	mov	edi, eax
0x400220:	call	0x500018
<Block for 0x400225, 2 bytes>
0x400225:	jmp	0x400233
