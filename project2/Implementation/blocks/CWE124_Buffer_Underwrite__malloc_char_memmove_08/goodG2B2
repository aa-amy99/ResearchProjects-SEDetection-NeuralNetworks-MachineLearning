<Block for 0x4001e2, 45 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	add	rsp, -0x80
0x4001ee:	mov	rax, qword ptr fs:[0x28]
0x4001f7:	mov	qword ptr [rbp - 8], rax
0x4001fb:	xor	eax, eax
0x4001fd:	mov	qword ptr [rbp - 0x80], 0
0x400205:	mov	eax, 0
0x40020a:	call	0x400000
<Block for 0x40020f, 4 bytes>
0x40020f:	test	eax, eax
0x400211:	je	0x40025b
<Block for 0x40025b, 22 bytes>
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	edx, 0x63
0x400264:	mov	esi, 0x43
0x400269:	mov	rdi, rax
0x40026c:	call	0x500010
<Block for 0x400213, 10 bytes>
0x400213:	mov	edi, 0x64
0x400218:	call	0x500000
<Block for 0x400271, 28 bytes>
0x400271:	mov	byte ptr [rbp - 0xd], 0
0x400275:	lea	rcx, [rbp - 0x70]
0x400279:	mov	rax, qword ptr [rbp - 0x80]
0x40027d:	mov	edx, 0x64
0x400282:	mov	rsi, rcx
0x400285:	mov	rdi, rax
0x400288:	call	0x500018
<Block for 0x40021d, 11 bytes>
0x40021d:	mov	qword ptr [rbp - 0x78], rax
0x400221:	cmp	qword ptr [rbp - 0x78], 0
0x400226:	jne	0x400232
<Block for 0x40028d, 23 bytes>
0x40028d:	mov	rax, qword ptr [rbp - 0x80]
0x400291:	add	rax, 0x63
0x400295:	mov	byte ptr [rax], 0
0x400298:	mov	rax, qword ptr [rbp - 0x80]
0x40029c:	mov	rdi, rax
0x40029f:	call	0x500020
<Block for 0x400228, 10 bytes>
0x400228:	mov	edi, 0xffffffff
0x40022d:	call	0x500008
<Block for 0x400232, 22 bytes>
0x400232:	mov	rax, qword ptr [rbp - 0x78]
0x400236:	mov	edx, 0x63
0x40023b:	mov	esi, 0x41
0x400240:	mov	rdi, rax
0x400243:	call	0x500010
<Block for 0x4002a4, 16 bytes>
0x4002a4:	nop	
0x4002a5:	mov	rax, qword ptr [rbp - 8]
0x4002a9:	xor	rax, qword ptr fs:[0x28]
0x4002b2:	je	0x4002b9
<Block for 0x400248, 41 bytes>
0x400248:	mov	rax, qword ptr [rbp - 0x78]
0x40024c:	add	rax, 0x63
0x400250:	mov	byte ptr [rax], 0
0x400253:	mov	rax, qword ptr [rbp - 0x78]
0x400257:	mov	qword ptr [rbp - 0x80], rax
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	edx, 0x63
0x400264:	mov	esi, 0x43
0x400269:	mov	rdi, rax
0x40026c:	call	0x500010
<Block for 0x4002b9, 2 bytes>
0x4002b9:	leave	
0x4002ba:	ret	
<Block for 0x4002b4, 5 bytes>
0x4002b4:	call	0x500028
