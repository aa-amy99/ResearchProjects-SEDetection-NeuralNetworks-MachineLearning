<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	jmp	0x40006d
<Block for 0x40006d, 6 bytes>
0x40006d:	cmp	dword ptr [rbp - 0x10], 0
0x400071:	jle	0x40001d
<Block for 0x40001d, 10 bytes>
0x40001d:	mov	edi, 0x64
0x400022:	call	0x500000
<Block for 0x400073, 9 bytes>
0x400073:	mov	dword ptr [rbp - 0xc], 0
0x40007a:	jmp	0x40008c
<Block for 0x400027, 11 bytes>
0x400027:	mov	qword ptr [rbp - 8], rax
0x40002b:	cmp	qword ptr [rbp - 8], 0
0x400030:	jne	0x40003c
<Block for 0x40008c, 6 bytes>
0x40008c:	cmp	dword ptr [rbp - 0xc], 0
0x400090:	jle	0x40007c
<Block for 0x400032, 10 bytes>
0x400032:	mov	edi, 0xffffffff
0x400037:	call	0x500008
<Block for 0x40003c, 22 bytes>
0x40003c:	mov	rax, qword ptr [rbp - 8]
0x400040:	mov	edx, 0x63
0x400045:	mov	esi, 0x41
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500010
<Block for 0x40007c, 12 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 8]
0x400080:	mov	rdi, rax
0x400083:	call	0x500020
<Block for 0x400092, 4 bytes>
0x400092:	nop	
0x400093:	nop	
0x400094:	leave	
0x400095:	ret	
<Block for 0x400052, 23 bytes>
0x400052:	mov	rax, qword ptr [rbp - 8]
0x400056:	add	rax, 0x63
0x40005a:	mov	byte ptr [rax], 0
0x40005d:	mov	rax, qword ptr [rbp - 8]
0x400061:	mov	rdi, rax
0x400064:	call	0x500018
<Block for 0x400088, 10 bytes>
0x400088:	add	dword ptr [rbp - 0xc], 1
0x40008c:	cmp	dword ptr [rbp - 0xc], 0
0x400090:	jle	0x40007c
<Block for 0x400069, 10 bytes>
0x400069:	add	dword ptr [rbp - 0x10], 1
0x40006d:	cmp	dword ptr [rbp - 0x10], 0
0x400071:	jle	0x40001d
