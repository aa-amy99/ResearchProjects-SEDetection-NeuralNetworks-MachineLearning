<Block for 0x4000f8, 53 bytes>
0x4000f8:	endbr64	
0x4000fc:	push	rbp
0x4000fd:	mov	rbp, rsp
0x400100:	sub	rsp, 0x90
0x400107:	mov	rax, qword ptr fs:[0x28]
0x400110:	mov	qword ptr [rbp - 8], rax
0x400114:	xor	eax, eax
0x400116:	mov	qword ptr [rbp - 0x80], 0
0x40011e:	nop	
0x40011f:	endbr64	
0x400123:	mov	edi, 0x64
0x400128:	call	0x500000
<Block for 0x40012d, 11 bytes>
0x40012d:	mov	qword ptr [rbp - 0x78], rax
0x400131:	cmp	qword ptr [rbp - 0x78], 0
0x400136:	jne	0x400142
<Block for 0x400138, 10 bytes>
0x400138:	mov	edi, 0xffffffff
0x40013d:	call	0x500008
<Block for 0x400142, 22 bytes>
0x400142:	mov	rax, qword ptr [rbp - 0x78]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x41
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400158, 41 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x78]
0x40015c:	add	rax, 0x63
0x400160:	mov	byte ptr [rax], 0
0x400163:	mov	rax, qword ptr [rbp - 0x78]
0x400167:	mov	qword ptr [rbp - 0x80], rax
0x40016b:	lea	rax, [rbp - 0x70]
0x40016f:	mov	edx, 0x63
0x400174:	mov	esi, 0x43
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400181, 17 bytes>
0x400181:	mov	byte ptr [rbp - 0xd], 0
0x400185:	mov	qword ptr [rbp - 0x88], 0
0x400190:	jmp	0x4001bb
<Block for 0x4001bb, 10 bytes>
0x4001bb:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001c3:	jbe	0x400192
<Block for 0x400192, 51 bytes>
0x400192:	mov	rdx, qword ptr [rbp - 0x80]
0x400196:	mov	rax, qword ptr [rbp - 0x88]
0x40019d:	add	rax, rdx
0x4001a0:	movzx	eax, byte ptr [rax]
0x4001a3:	lea	rcx, [rbp - 0x70]
0x4001a7:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ae:	add	rdx, rcx
0x4001b1:	mov	byte ptr [rdx], al
0x4001b3:	add	qword ptr [rbp - 0x88], 1
0x4001bb:	cmp	qword ptr [rbp - 0x88], 0x63
0x4001c3:	jbe	0x400192
<Block for 0x4001c5, 16 bytes>
0x4001c5:	mov	byte ptr [rbp - 0xd], 0
0x4001c9:	lea	rax, [rbp - 0x70]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500018
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 8]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x4001ea
<Block for 0x4001ea, 2 bytes>
0x4001ea:	leave	
0x4001eb:	ret	
<Block for 0x4001e5, 5 bytes>
0x4001e5:	call	0x500020
