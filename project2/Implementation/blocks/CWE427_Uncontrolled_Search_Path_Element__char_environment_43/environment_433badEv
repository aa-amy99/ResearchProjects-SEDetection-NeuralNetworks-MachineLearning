<Block for 0x400066, 82 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x120
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	movabs	rax, 0x3d48544150
0x40008e:	mov	edx, 0
0x400093:	mov	qword ptr [rbp - 0x110], rax
0x40009a:	mov	qword ptr [rbp - 0x108], rdx
0x4000a1:	lea	rdx, [rbp - 0x100]
0x4000a8:	mov	eax, 0
0x4000ad:	mov	ecx, 0x1d
0x4000b2:	mov	rdi, rdx
0x4000b5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000b8, 39 bytes>
0x4000b8:	mov	rdx, rdi
0x4000bb:	mov	word ptr [rdx], ax
0x4000be:	add	rdx, 2
0x4000c2:	lea	rax, [rbp - 0x110]
0x4000c9:	mov	qword ptr [rbp - 0x118], rax
0x4000d0:	lea	rax, [rbp - 0x118]
0x4000d7:	mov	rdi, rax
0x4000da:	call	0x400000
<Block for 0x4000b5, 3 bytes>
0x4000b5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000df, 15 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x118]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500018
<Block for 0x4000ee, 16 bytes>
0x4000ee:	nop	
0x4000ef:	mov	rax, qword ptr [rbp - 8]
0x4000f3:	xor	rax, qword ptr fs:[0x28]
0x4000fc:	je	0x400103
<Block for 0x400103, 2 bytes>
0x400103:	leave	
0x400104:	ret	
<Block for 0x4000fe, 5 bytes>
0x4000fe:	call	0x500020
