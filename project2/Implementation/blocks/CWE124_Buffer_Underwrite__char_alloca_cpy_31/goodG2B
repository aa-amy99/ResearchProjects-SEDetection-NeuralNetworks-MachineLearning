<Block for 0x400142, 84 bytes>
0x400142:	endbr64	
0x400146:	push	rbp
0x400147:	mov	rbp, rsp
0x40014a:	sub	rsp, 0x90
0x400151:	mov	rax, qword ptr fs:[0x28]
0x40015a:	mov	qword ptr [rbp - 8], rax
0x40015e:	xor	eax, eax
0x400160:	mov	eax, 0x10
0x400165:	sub	rax, 1
0x400169:	add	rax, 0x6c
0x40016d:	mov	ecx, 0x10
0x400172:	mov	edx, 0
0x400177:	div	rcx
0x40017a:	imul	rax, rax, 0x10
0x40017e:	mov	rdx, rax
0x400181:	and	rdx, 0xfffffffffffff000
0x400188:	mov	rcx, rsp
0x40018b:	sub	rcx, rdx
0x40018e:	mov	rdx, rcx
0x400191:	cmp	rsp, rdx
0x400194:	je	0x4001a8
<Block for 0x4001a8, 26 bytes>
0x4001a8:	mov	rdx, rax
0x4001ab:	and	edx, 0xfff
0x4001b1:	sub	rsp, rdx
0x4001b4:	mov	rdx, rax
0x4001b7:	and	edx, 0xfff
0x4001bd:	test	rdx, rdx
0x4001c0:	je	0x4001d2
<Block for 0x400196, 18 bytes>
0x400196:	sub	rsp, 0x1000
0x40019d:	or	qword ptr [rsp + 0xff8], 0
0x4001a6:	jmp	0x400191
<Block for 0x4001d2, 47 bytes>
0x4001d2:	mov	rax, rsp
0x4001d5:	add	rax, 0xf
0x4001d9:	shr	rax, 4
0x4001dd:	shl	rax, 4
0x4001e1:	mov	qword ptr [rbp - 0x90], rax
0x4001e8:	mov	rax, qword ptr [rbp - 0x90]
0x4001ef:	mov	edx, 0x63
0x4001f4:	mov	esi, 0x41
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500000
<Block for 0x4001c2, 63 bytes>
0x4001c2:	and	eax, 0xfff
0x4001c7:	sub	rax, 8
0x4001cb:	add	rax, rsp
0x4001ce:	or	qword ptr [rax], 0
0x4001d2:	mov	rax, rsp
0x4001d5:	add	rax, 0xf
0x4001d9:	shr	rax, 4
0x4001dd:	shl	rax, 4
0x4001e1:	mov	qword ptr [rbp - 0x90], rax
0x4001e8:	mov	rax, qword ptr [rbp - 0x90]
0x4001ef:	mov	edx, 0x63
0x4001f4:	mov	esi, 0x41
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500000
<Block for 0x400191, 5 bytes>
0x400191:	cmp	rsp, rdx
0x400194:	je	0x4001a8
<Block for 0x400201, 69 bytes>
0x400201:	mov	rax, qword ptr [rbp - 0x90]
0x400208:	add	rax, 0x63
0x40020c:	mov	byte ptr [rax], 0
0x40020f:	mov	rax, qword ptr [rbp - 0x90]
0x400216:	mov	qword ptr [rbp - 0x88], rax
0x40021d:	mov	rax, qword ptr [rbp - 0x88]
0x400224:	mov	qword ptr [rbp - 0x80], rax
0x400228:	mov	rax, qword ptr [rbp - 0x80]
0x40022c:	mov	qword ptr [rbp - 0x78], rax
0x400230:	lea	rax, [rbp - 0x70]
0x400234:	mov	edx, 0x63
0x400239:	mov	esi, 0x43
0x40023e:	mov	rdi, rax
0x400241:	call	0x500000
<Block for 0x400246, 23 bytes>
0x400246:	mov	byte ptr [rbp - 0xd], 0
0x40024a:	lea	rdx, [rbp - 0x70]
0x40024e:	mov	rax, qword ptr [rbp - 0x78]
0x400252:	mov	rsi, rdx
0x400255:	mov	rdi, rax
0x400258:	call	0x500008
<Block for 0x40025d, 12 bytes>
0x40025d:	mov	rax, qword ptr [rbp - 0x78]
0x400261:	mov	rdi, rax
0x400264:	call	0x500010
<Block for 0x400269, 16 bytes>
0x400269:	nop	
0x40026a:	mov	rax, qword ptr [rbp - 8]
0x40026e:	xor	rax, qword ptr fs:[0x28]
0x400277:	je	0x40027e
<Block for 0x40027e, 2 bytes>
0x40027e:	leave	
0x40027f:	ret	
<Block for 0x400279, 5 bytes>
0x400279:	call	0x500018
