<Block for 0x4002b5, 35 bytes>
0x4002b5:	endbr64	
0x4002b9:	push	rbp
0x4002ba:	mov	rbp, rsp
0x4002bd:	push	r12
0x4002bf:	push	rbx
0x4002c0:	sub	rsp, 0x60
0x4002c4:	mov	rax, qword ptr fs:[0x28]
0x4002cd:	mov	qword ptr [rbp - 0x18], rax
0x4002d1:	xor	eax, eax
0x4002d3:	call	0x500000
<Block for 0x4002d8, 13 bytes>
0x4002d8:	test	eax, eax
0x4002da:	setne	al
0x4002dd:	test	al, al
0x4002df:	je	0x400401
<Block for 0x400401, 16 bytes>
0x400401:	nop	
0x400402:	mov	rax, qword ptr [rbp - 0x18]
0x400406:	xor	rax, qword ptr fs:[0x28]
0x40040f:	je	0x400416
<Block for 0x4002e5, 12 bytes>
0x4002e5:	lea	rax, [rbp - 0x69]
0x4002e9:	mov	rdi, rax
0x4002ec:	call	0x500008
<Block for 0x400416, 9 bytes>
0x400416:	add	rsp, 0x60
0x40041a:	pop	rbx
0x40041b:	pop	r12
0x40041d:	pop	rbp
0x40041e:	ret	
<Block for 0x400411, 5 bytes>
0x400411:	call	0x500060
<Block for 0x4002f1, 23 bytes>
0x4002f1:	lea	rdx, [rbp - 0x69]
0x4002f5:	lea	rax, [rbp - 0x60]
0x4002f9:	lea	rsi, [rip + 0x19c]
0x400300:	mov	rdi, rax
0x400303:	call	0x500010
<Block for 0x400308, 12 bytes>
0x400308:	lea	rax, [rbp - 0x69]
0x40030c:	mov	rdi, rax
0x40030f:	call	0x500018
<Block for 0x400314, 5 bytes>
0x400314:	call	0x500020
<Block for 0x400319, 8 bytes>
0x400319:	movsxd	rbx, eax
0x40031c:	call	0x500020
<Block for 0x400321, 22 bytes>
0x400321:	movsxd	rdx, eax
0x400324:	lea	rax, [rbp - 0x40]
0x400328:	lea	rsi, [rbp - 0x60]
0x40032c:	mov	rcx, rbx
0x40032f:	mov	rdi, rax
0x400332:	call	0x500028
<Block for 0x400337, 12 bytes>
0x400337:	lea	rax, [rbp - 0x40]
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500030
<Block for 0x400343, 8 bytes>
0x400343:	mov	rdi, rax
0x400346:	call	0x500038
<Block for 0x40034b, 12 bytes>
0x40034b:	lea	rax, [rbp - 0x40]
0x40034f:	mov	rdi, rax
0x400352:	call	0x500040
<Block for 0x400357, 12 bytes>
0x400357:	lea	rax, [rbp - 0x60]
0x40035b:	mov	rdi, rax
0x40035e:	call	0x500040
<Block for 0x400363, 5 bytes>
0x400363:	jmp	0x400401
