<Block for 0x400000, 33 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	dword ptr [rbp - 0x10], 0
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400060
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 8
0x400026:	call	0x500000
<Block for 0x400060, 13 bytes>
0x400060:	mov	dword ptr [rbp - 0xc], 0
0x400067:	cmp	dword ptr [rbp - 0xc], 0
0x40006b:	jg	0x400080
<Block for 0x40002b, 34 bytes>
0x40002b:	mov	qword ptr [rbp - 8], rax
0x40002f:	mov	rax, qword ptr [rbp - 8]
0x400033:	mov	dword ptr [rax], 1
0x400039:	mov	rax, qword ptr [rbp - 8]
0x40003d:	mov	dword ptr [rax + 4], 2
0x400044:	mov	rax, qword ptr [rbp - 8]
0x400048:	test	rax, rax
0x40004b:	je	0x40005a
<Block for 0x40006d, 13 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	mov	eax, dword ptr [rax]
0x400073:	mov	edi, eax
0x400075:	call	0x500010
<Block for 0x400080, 3 bytes>
0x400080:	nop	
0x400081:	leave	
0x400082:	ret	
<Block for 0x40005a, 6 bytes>
0x40005a:	add	dword ptr [rbp - 0x10], 1
0x40005e:	jmp	0x40001b
<Block for 0x40004d, 13 bytes>
0x40004d:	mov	esi, 8
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40007a, 6 bytes>
0x40007a:	add	dword ptr [rbp - 0xc], 1
0x40007e:	jmp	0x400067
<Block for 0x40001b, 6 bytes>
0x40001b:	cmp	dword ptr [rbp - 0x10], 0
0x40001f:	jg	0x400060
<Block for 0x400067, 6 bytes>
0x400067:	cmp	dword ptr [rbp - 0xc], 0
0x40006b:	jg	0x400080
