<Block for 0x4000f7, 39 bytes>
0x4000f7:	endbr64	
0x4000fb:	push	rbp
0x4000fc:	mov	rbp, rsp
0x4000ff:	sub	rsp, 0x30
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	mov	dword ptr [rbp - 0x24], 0
0x400119:	jmp	0x40020c
<Block for 0x40020c, 10 bytes>
0x40020c:	cmp	dword ptr [rbp - 0x24], 0
0x400210:	jle	0x40011e
<Block for 0x40011e, 54 bytes>
0x40011e:	mov	eax, 0x10
0x400123:	sub	rax, 1
0x400127:	add	rax, 0x10
0x40012b:	mov	esi, 0x10
0x400130:	mov	edx, 0
0x400135:	div	rsi
0x400138:	imul	rax, rax, 0x10
0x40013c:	mov	rdx, rax
0x40013f:	and	rdx, 0xfffffffffffff000
0x400146:	mov	rcx, rsp
0x400149:	sub	rcx, rdx
0x40014c:	mov	rdx, rcx
0x40014f:	cmp	rsp, rdx
0x400152:	je	0x400166
<Block for 0x400216, 16 bytes>
0x400216:	nop	
0x400217:	mov	rax, qword ptr [rbp - 8]
0x40021b:	xor	rax, qword ptr fs:[0x28]
0x400224:	je	0x40022b
<Block for 0x400166, 26 bytes>
0x400166:	mov	rdx, rax
0x400169:	and	edx, 0xfff
0x40016f:	sub	rsp, rdx
0x400172:	mov	rdx, rax
0x400175:	and	edx, 0xfff
0x40017b:	test	rdx, rdx
0x40017e:	je	0x400190
<Block for 0x400154, 18 bytes>
0x400154:	sub	rsp, 0x1000
0x40015b:	or	qword ptr [rsp + 0xff8], 0
0x400164:	jmp	0x40014f
<Block for 0x40022b, 2 bytes>
0x40022b:	leave	
0x40022c:	ret	
<Block for 0x400226, 5 bytes>
0x400226:	call	0x500008
<Block for 0x400190, 29 bytes>
0x400190:	mov	rax, rsp
0x400193:	add	rax, 0xf
0x400197:	shr	rax, 4
0x40019b:	shl	rax, 4
0x40019f:	mov	qword ptr [rbp - 0x20], rax
0x4001a3:	mov	edi, 8
0x4001a8:	call	0x500010
<Block for 0x400180, 45 bytes>
0x400180:	and	eax, 0xfff
0x400185:	sub	rax, 8
0x400189:	add	rax, rsp
0x40018c:	or	qword ptr [rax], 0
0x400190:	mov	rax, rsp
0x400193:	add	rax, 0xf
0x400197:	shr	rax, 4
0x40019b:	shl	rax, 4
0x40019f:	mov	qword ptr [rbp - 0x20], rax
0x4001a3:	mov	edi, 8
0x4001a8:	call	0x500010
<Block for 0x40014f, 5 bytes>
0x40014f:	cmp	rsp, rdx
0x400152:	je	0x400166
<Block for 0x4001ad, 11 bytes>
0x4001ad:	mov	qword ptr [rbp - 0x18], rax
0x4001b1:	cmp	qword ptr [rbp - 0x18], 0
0x4001b6:	jne	0x4001c2
<Block for 0x4001b8, 10 bytes>
0x4001b8:	mov	edi, 0xffffffff
0x4001bd:	call	0x500018
<Block for 0x4001c2, 56 bytes>
0x4001c2:	mov	rax, qword ptr [rbp - 0x18]
0x4001c6:	mov	dword ptr [rax], 5
0x4001cc:	mov	rax, qword ptr [rbp - 0x18]
0x4001d0:	mov	dword ptr [rax + 4], 6
0x4001d7:	mov	rax, qword ptr [rbp - 0x20]
0x4001db:	mov	rdx, qword ptr [rbp - 0x18]
0x4001df:	mov	qword ptr [rax], rdx
0x4001e2:	mov	rax, qword ptr [rbp - 0x20]
0x4001e6:	mov	rax, qword ptr [rax]
0x4001e9:	mov	qword ptr [rbp - 0x10], rax
0x4001ed:	mov	rax, qword ptr [rbp - 0x10]
0x4001f1:	mov	eax, dword ptr [rax]
0x4001f3:	mov	edi, eax
0x4001f5:	call	0x500000
<Block for 0x4001fa, 14 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x10]
0x4001fe:	mov	eax, dword ptr [rax + 4]
0x400201:	mov	edi, eax
0x400203:	call	0x500000
<Block for 0x400208, 14 bytes>
0x400208:	add	dword ptr [rbp - 0x24], 1
0x40020c:	cmp	dword ptr [rbp - 0x24], 0
0x400210:	jle	0x40011e
