<Block for 0x400012, 69 bytes>
0x400012:	endbr64	
0x400016:	push	rbp
0x400017:	mov	rbp, rsp
0x40001a:	sub	rsp, 0xf0
0x400021:	mov	rax, qword ptr fs:[0x28]
0x40002a:	mov	qword ptr [rbp - 8], rax
0x40002e:	xor	eax, eax
0x400030:	lea	rax, [rbp - 0xe0]
0x400037:	mov	qword ptr [rbp - 0xf0], rax
0x40003e:	mov	dword ptr [rip + 0x278], 1
0x400048:	mov	rax, qword ptr [rbp - 0xf0]
0x40004f:	mov	rdi, rax
0x400052:	call	0x400000
<Block for 0x400057, 29 bytes>
0x400057:	mov	qword ptr [rbp - 0xf0], rax
0x40005e:	lea	rax, [rbp - 0x70]
0x400062:	mov	edx, 0x63
0x400067:	mov	esi, 0x43
0x40006c:	mov	rdi, rax
0x40006f:	call	0x500000
<Block for 0x400074, 16 bytes>
0x400074:	mov	byte ptr [rbp - 0xd], 0
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500008
<Block for 0x400084, 36 bytes>
0x400084:	mov	qword ptr [rbp - 0xe8], rax
0x40008b:	mov	rdx, qword ptr [rbp - 0xe8]
0x400092:	lea	rcx, [rbp - 0x70]
0x400096:	mov	rax, qword ptr [rbp - 0xf0]
0x40009d:	mov	rsi, rcx
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500010
<Block for 0x4000a8, 15 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0xf0]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500018
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500020
