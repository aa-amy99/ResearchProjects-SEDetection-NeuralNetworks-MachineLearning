<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0xfffee]
0x400012:	cmp	eax, 5
0x400015:	jne	0x40007c
<Block for 0x400017, 10 bytes>
0x400017:	mov	edi, 0
0x40001c:	call	0x500008
<Block for 0x40007c, 3 bytes>
0x40007c:	nop	
0x40007d:	leave	
0x40007e:	ret	
<Block for 0x400021, 11 bytes>
0x400021:	mov	qword ptr [rbp - 8], rax
0x400025:	cmp	qword ptr [rbp - 8], 0
0x40002a:	jne	0x400036
<Block for 0x40002c, 10 bytes>
0x40002c:	mov	edi, 1
0x400031:	call	0x500010
<Block for 0x400036, 12 bytes>
0x400036:	mov	rax, qword ptr [rbp - 8]
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500018
<Block for 0x400042, 27 bytes>
0x400042:	mov	rax, qword ptr [rbp - 8]
0x400046:	mov	edx, 0x180
0x40004b:	mov	esi, 0x42
0x400050:	mov	rdi, rax
0x400053:	mov	eax, 0
0x400058:	call	0x500020
<Block for 0x40005d, 9 bytes>
0x40005d:	mov	dword ptr [rbp - 0xc], eax
0x400060:	cmp	dword ptr [rbp - 0xc], -1
0x400064:	je	0x40007c
<Block for 0x400066, 12 bytes>
0x400066:	lea	rdi, [rip + 0x163]
0x40006d:	call	0x500018
<Block for 0x400072, 10 bytes>
0x400072:	mov	eax, dword ptr [rbp - 0xc]
0x400075:	mov	edi, eax
0x400077:	call	0x500028
