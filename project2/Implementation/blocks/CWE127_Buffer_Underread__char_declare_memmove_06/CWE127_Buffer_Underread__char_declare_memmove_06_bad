<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 14 bytes>
0x400037:	mov	byte ptr [rbp - 0x7d], 0
0x40003b:	mov	eax, 5
0x400040:	cmp	eax, 5
0x400043:	jne	0x400057
<Block for 0x400045, 40 bytes>
0x400045:	lea	rax, [rbp - 0xe0]
0x40004c:	sub	rax, 8
0x400050:	mov	qword ptr [rbp - 0xe8], rax
0x400057:	lea	rax, [rbp - 0x70]
0x40005b:	mov	edx, 0x63
0x400060:	mov	esi, 0x43
0x400065:	mov	rdi, rax
0x400068:	call	0x500000
<Block for 0x400057, 22 bytes>
0x400057:	lea	rax, [rbp - 0x70]
0x40005b:	mov	edx, 0x63
0x400060:	mov	esi, 0x43
0x400065:	mov	rdi, rax
0x400068:	call	0x500000
<Block for 0x40006d, 31 bytes>
0x40006d:	mov	byte ptr [rbp - 0xd], 0
0x400071:	mov	rcx, qword ptr [rbp - 0xe8]
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	edx, 0x64
0x400081:	mov	rsi, rcx
0x400084:	mov	rdi, rax
0x400087:	call	0x500008
<Block for 0x40008c, 16 bytes>
0x40008c:	mov	byte ptr [rbp - 0xd], 0
0x400090:	lea	rax, [rbp - 0x70]
0x400094:	mov	rdi, rax
0x400097:	call	0x500010
<Block for 0x40009c, 16 bytes>
0x40009c:	nop	
0x40009d:	mov	rax, qword ptr [rbp - 8]
0x4000a1:	xor	rax, qword ptr fs:[0x28]
0x4000aa:	je	0x4000b1
<Block for 0x4000b1, 2 bytes>
0x4000b1:	leave	
0x4000b2:	ret	
<Block for 0x4000ac, 5 bytes>
0x4000ac:	call	0x500018
