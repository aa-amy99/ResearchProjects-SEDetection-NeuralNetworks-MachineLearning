<Block for 0x4000b3, 55 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0xf0
0x4000c2:	mov	rax, qword ptr fs:[0x28]
0x4000cb:	mov	qword ptr [rbp - 8], rax
0x4000cf:	xor	eax, eax
0x4000d1:	lea	rax, [rbp - 0xe0]
0x4000d8:	mov	edx, 0x63
0x4000dd:	mov	esi, 0x41
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500000
<Block for 0x4000ea, 14 bytes>
0x4000ea:	mov	byte ptr [rbp - 0x7d], 0
0x4000ee:	mov	eax, 5
0x4000f3:	cmp	eax, 5
0x4000f6:	je	0x400106
<Block for 0x400106, 36 bytes>
0x400106:	lea	rax, [rbp - 0xe0]
0x40010d:	mov	qword ptr [rbp - 0xe8], rax
0x400114:	lea	rax, [rbp - 0x70]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x43
0x400122:	mov	rdi, rax
0x400125:	call	0x500000
<Block for 0x4000f8, 12 bytes>
0x4000f8:	lea	rdi, [rip + 0x145]
0x4000ff:	call	0x500010
<Block for 0x40012a, 31 bytes>
0x40012a:	mov	byte ptr [rbp - 0xd], 0
0x40012e:	mov	rcx, qword ptr [rbp - 0xe8]
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	edx, 0x64
0x40013e:	mov	rsi, rcx
0x400141:	mov	rdi, rax
0x400144:	call	0x500008
<Block for 0x400104, 2 bytes>
0x400104:	jmp	0x400114
<Block for 0x400149, 16 bytes>
0x400149:	mov	byte ptr [rbp - 0xd], 0
0x40014d:	lea	rax, [rbp - 0x70]
0x400151:	mov	rdi, rax
0x400154:	call	0x500010
<Block for 0x400114, 22 bytes>
0x400114:	lea	rax, [rbp - 0x70]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x43
0x400122:	mov	rdi, rax
0x400125:	call	0x500000
<Block for 0x400159, 16 bytes>
0x400159:	nop	
0x40015a:	mov	rax, qword ptr [rbp - 8]
0x40015e:	xor	rax, qword ptr fs:[0x28]
0x400167:	je	0x40016e
<Block for 0x40016e, 2 bytes>
0x40016e:	leave	
0x40016f:	ret	
<Block for 0x400169, 5 bytes>
0x400169:	call	0x500018
