<Block for 0x40003e, 82 bytes>
0x40003e:	endbr64	
0x400042:	push	rbp
0x400043:	mov	rbp, rsp
0x400046:	sub	rsp, 0x40
0x40004a:	mov	qword ptr [rbp - 0x38], rdi
0x40004e:	mov	rax, qword ptr fs:[0x28]
0x400057:	mov	qword ptr [rbp - 8], rax
0x40005b:	xor	eax, eax
0x40005d:	mov	qword ptr [rbp - 0x30], 0
0x400065:	mov	qword ptr [rbp - 0x28], 0
0x40006d:	mov	qword ptr [rbp - 0x20], 0
0x400075:	mov	qword ptr [rbp - 0x18], 0
0x40007d:	mov	qword ptr [rbp - 0x10], 0
0x400085:	mov	rax, qword ptr [rbp - 0x38]
0x400089:	mov	eax, dword ptr [rax]
0x40008b:	cmp	eax, 9
0x40008e:	jg	0x4000a5
<Block for 0x400090, 19 bytes>
0x400090:	mov	rax, qword ptr [rbp - 0x38]
0x400094:	mov	eax, dword ptr [rax]
0x400096:	cdqe	
0x400098:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40009c:	mov	edi, eax
0x40009e:	call	0x500010
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x24]
0x4000ac:	call	0x500018
<Block for 0x4000a3, 2 bytes>
0x4000a3:	jmp	0x4000b1
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500020
