<Block for 0x4000b6, 57 bytes>
0x4000b6:	endbr64	
0x4000ba:	push	rbp
0x4000bb:	mov	rbp, rsp
0x4000be:	sub	rsp, 0x90
0x4000c5:	mov	qword ptr [rbp - 0x88], rdi
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	mov	rax, qword ptr [rbp - 0x88]
0x4000e2:	mov	esi, 2
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x40016e
<Block for 0x4000ef, 29 bytes>
0x4000ef:	mov	rax, qword ptr [rax]
0x4000f2:	mov	qword ptr [rbp - 0x78], rax
0x4000f6:	lea	rax, [rbp - 0x70]
0x4000fa:	mov	edx, 0x63
0x4000ff:	mov	esi, 0x43
0x400104:	mov	rdi, rax
0x400107:	call	0x500000
<Block for 0x40010c, 16 bytes>
0x40010c:	mov	byte ptr [rbp - 0xd], 0
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	rdi, rax
0x400117:	call	0x500008
<Block for 0x40011c, 22 bytes>
0x40011c:	mov	rdx, rax
0x40011f:	mov	rcx, qword ptr [rbp - 0x78]
0x400123:	lea	rax, [rbp - 0x70]
0x400127:	mov	rsi, rcx
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500010
<Block for 0x400132, 16 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500018
<Block for 0x400142, 7 bytes>
0x400142:	cmp	qword ptr [rbp - 0x78], 0
0x400147:	je	0x400155
<Block for 0x400155, 16 bytes>
0x400155:	nop	
0x400156:	mov	rax, qword ptr [rbp - 8]
0x40015a:	xor	rax, qword ptr fs:[0x28]
0x400163:	je	0x40016a
<Block for 0x400149, 12 bytes>
0x400149:	mov	rax, qword ptr [rbp - 0x78]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500020
<Block for 0x40016a, 2 bytes>
0x40016a:	leave	
0x40016b:	ret	
<Block for 0x400165, 5 bytes>
0x400165:	call	0x500028
