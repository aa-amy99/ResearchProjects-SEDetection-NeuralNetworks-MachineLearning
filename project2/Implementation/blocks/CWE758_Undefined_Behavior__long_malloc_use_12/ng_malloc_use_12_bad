<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x40005e
<Block for 0x40005e, 10 bytes>
0x40005e:	mov	edi, 8
0x400063:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 8
0x40001f:	call	0x500008
<Block for 0x400068, 11 bytes>
0x400068:	mov	qword ptr [rbp - 0x28], rax
0x40006c:	cmp	qword ptr [rbp - 0x28], 0
0x400071:	jne	0x40007d
<Block for 0x400024, 11 bytes>
0x400024:	mov	qword ptr [rbp - 0x10], rax
0x400028:	cmp	qword ptr [rbp - 0x10], 0
0x40002d:	jne	0x400039
<Block for 0x400073, 10 bytes>
0x400073:	mov	edi, 0xffffffff
0x400078:	call	0x500010
<Block for 0x40007d, 42 bytes>
0x40007d:	mov	qword ptr [rbp - 0x20], 5
0x400085:	mov	rax, qword ptr [rbp - 0x28]
0x400089:	mov	rdx, qword ptr [rbp - 0x20]
0x40008d:	mov	qword ptr [rax], rdx
0x400090:	mov	rax, qword ptr [rbp - 0x28]
0x400094:	mov	rax, qword ptr [rax]
0x400097:	mov	qword ptr [rbp - 0x18], rax
0x40009b:	mov	rax, qword ptr [rbp - 0x18]
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500020
<Block for 0x40002f, 10 bytes>
0x40002f:	mov	edi, 0xffffffff
0x400034:	call	0x500010
<Block for 0x400039, 23 bytes>
0x400039:	mov	rax, qword ptr [rbp - 0x10]
0x40003d:	mov	rax, qword ptr [rax]
0x400040:	mov	qword ptr [rbp - 8], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500018
<Block for 0x4000a7, 12 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 0x28]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500018
<Block for 0x400050, 12 bytes>
0x400050:	mov	rax, qword ptr [rbp - 8]
0x400054:	mov	rdi, rax
0x400057:	call	0x500020
<Block for 0x4000b3, 3 bytes>
0x4000b3:	nop	
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x40005c, 2 bytes>
0x40005c:	jmp	0x4000b3
