<Block for 0x400562, 45 bytes>
0x400562:	endbr64	
0x400566:	push	rbp
0x400567:	mov	rbp, rsp
0x40056a:	sub	rsp, 0xa0
0x400571:	mov	rax, qword ptr fs:[0x28]
0x40057a:	mov	qword ptr [rbp - 8], rax
0x40057e:	xor	eax, eax
0x400580:	mov	eax, dword ptr [rip + 0x282]
0x400586:	cmp	eax, 5
0x400589:	jne	0x4007d1
<Block for 0x40058f, 135 bytes>
0x40058f:	mov	qword ptr [rbp - 0x70], 0
0x400597:	mov	qword ptr [rbp - 0x68], 0
0x40059f:	mov	qword ptr [rbp - 0x60], 0
0x4005a7:	mov	qword ptr [rbp - 0x58], 0
0x4005af:	mov	qword ptr [rbp - 0x50], 0
0x4005b7:	mov	qword ptr [rbp - 0x48], 0
0x4005bf:	mov	qword ptr [rbp - 0x40], 0
0x4005c7:	mov	qword ptr [rbp - 0x38], 0
0x4005cf:	mov	qword ptr [rbp - 0x30], 0
0x4005d7:	mov	qword ptr [rbp - 0x28], 0
0x4005df:	mov	qword ptr [rbp - 0x20], 0
0x4005e7:	mov	qword ptr [rbp - 0x18], 0
0x4005ef:	mov	dword ptr [rbp - 0x10], 0
0x4005f6:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400600:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40060a:	lea	rax, [rbp - 0x70]
0x40060e:	mov	rdi, rax
0x400611:	call	0x500000
<Block for 0x4007d1, 16 bytes>
0x4007d1:	nop	
0x4007d2:	mov	rax, qword ptr [rbp - 8]
0x4007d6:	xor	rax, qword ptr fs:[0x28]
0x4007df:	je	0x4007e6
<Block for 0x400616, 27 bytes>
0x400616:	mov	qword ptr [rbp - 0x90], rax
0x40061d:	mov	edx, 6
0x400622:	mov	esi, 1
0x400627:	mov	edi, 2
0x40062c:	call	0x500008
<Block for 0x4007e6, 2 bytes>
0x4007e6:	leave	
0x4007e7:	ret	
<Block for 0x4007e1, 5 bytes>
0x4007e1:	call	0x500060
<Block for 0x400631, 19 bytes>
0x400631:	mov	dword ptr [rbp - 0x98], eax
0x400637:	cmp	dword ptr [rbp - 0x98], -1
0x40063e:	je	0x40078f
<Block for 0x40078f, 3 bytes>
0x40078f:	nop	
0x400790:	jmp	0x400799
<Block for 0x400644, 22 bytes>
0x400644:	lea	rax, [rbp - 0x80]
0x400648:	mov	edx, 0x10
0x40064d:	mov	esi, 0
0x400652:	mov	rdi, rax
0x400655:	call	0x500018
<Block for 0x400799, 9 bytes>
0x400799:	cmp	dword ptr [rbp - 0x98], -1
0x4007a0:	je	0x4007af
<Block for 0x40065a, 23 bytes>
0x40065a:	mov	word ptr [rbp - 0x80], 2
0x400660:	mov	dword ptr [rbp - 0x7c], 0
0x400667:	mov	edi, 0x6987
0x40066c:	call	0x500020
<Block for 0x4007af, 9 bytes>
0x4007af:	cmp	dword ptr [rbp - 0x9c], -1
0x4007b6:	je	0x4007c5
<Block for 0x4007a2, 13 bytes>
0x4007a2:	mov	eax, dword ptr [rbp - 0x98]
0x4007a8:	mov	edi, eax
0x4007aa:	call	0x500050
<Block for 0x400671, 29 bytes>
0x400671:	mov	word ptr [rbp - 0x7e], ax
0x400675:	lea	rcx, [rbp - 0x80]
0x400679:	mov	eax, dword ptr [rbp - 0x98]
0x40067f:	mov	edx, 0x10
0x400684:	mov	rsi, rcx
0x400687:	mov	edi, eax
0x400689:	call	0x500028
<Block for 0x4007c5, 12 bytes>
0x4007c5:	lea	rax, [rbp - 0x70]
0x4007c9:	mov	rdi, rax
0x4007cc:	call	0x500058
<Block for 0x4007b8, 13 bytes>
0x4007b8:	mov	eax, dword ptr [rbp - 0x9c]
0x4007be:	mov	edi, eax
0x4007c0:	call	0x500050
<Block for 0x40068e, 9 bytes>
0x40068e:	cmp	eax, -1
0x400691:	je	0x400792
<Block for 0x400792, 3 bytes>
0x400792:	nop	
0x400793:	jmp	0x400799
<Block for 0x400697, 18 bytes>
0x400697:	mov	eax, dword ptr [rbp - 0x98]
0x40069d:	mov	esi, 5
0x4006a2:	mov	edi, eax
0x4006a4:	call	0x500030
<Block for 0x4006a9, 9 bytes>
0x4006a9:	cmp	eax, -1
0x4006ac:	je	0x400795
<Block for 0x400795, 3 bytes>
0x400795:	nop	
0x400796:	jmp	0x400799
<Block for 0x4006b2, 23 bytes>
0x4006b2:	mov	eax, dword ptr [rbp - 0x98]
0x4006b8:	mov	edx, 0
0x4006bd:	mov	esi, 0
0x4006c2:	mov	edi, eax
0x4006c4:	call	0x500038
<Block for 0x4006c9, 19 bytes>
0x4006c9:	mov	dword ptr [rbp - 0x9c], eax
0x4006cf:	cmp	dword ptr [rbp - 0x9c], -1
0x4006d6:	je	0x400798
<Block for 0x4006dc, 52 bytes>
0x4006dc:	mov	rax, qword ptr [rbp - 0x90]
0x4006e3:	mov	edx, 0x63
0x4006e8:	sub	edx, eax
0x4006ea:	mov	eax, edx
0x4006ec:	movsxd	rdx, eax
0x4006ef:	lea	rcx, [rbp - 0x70]
0x4006f3:	mov	rax, qword ptr [rbp - 0x90]
0x4006fa:	lea	rsi, [rcx + rax]
0x4006fe:	mov	eax, dword ptr [rbp - 0x9c]
0x400704:	mov	ecx, 0
0x400709:	mov	edi, eax
0x40070b:	call	0x500040
<Block for 0x400798, 1 bytes>
0x400798:	nop	
<Block for 0x400710, 15 bytes>
0x400710:	mov	dword ptr [rbp - 0x94], eax
0x400716:	cmp	dword ptr [rbp - 0x94], -1
0x40071d:	je	0x400799
<Block for 0x40071f, 9 bytes>
0x40071f:	cmp	dword ptr [rbp - 0x94], 0
0x400726:	je	0x400799
<Block for 0x400728, 30 bytes>
0x400728:	mov	eax, dword ptr [rbp - 0x94]
0x40072e:	cdqe	
0x400730:	mov	byte ptr [rbp + rax - 0x70], 0
0x400735:	lea	rax, [rbp - 0x70]
0x400739:	mov	esi, 0xd
0x40073e:	mov	rdi, rax
0x400741:	call	0x500048
<Block for 0x400746, 17 bytes>
0x400746:	mov	qword ptr [rbp - 0x88], rax
0x40074d:	cmp	qword ptr [rbp - 0x88], 0
0x400755:	je	0x400761
<Block for 0x400761, 17 bytes>
0x400761:	lea	rax, [rbp - 0x70]
0x400765:	mov	esi, 0xa
0x40076a:	mov	rdi, rax
0x40076d:	call	0x500048
<Block for 0x400757, 27 bytes>
0x400757:	mov	rax, qword ptr [rbp - 0x88]
0x40075e:	mov	byte ptr [rax], 0
0x400761:	lea	rax, [rbp - 0x70]
0x400765:	mov	esi, 0xa
0x40076a:	mov	rdi, rax
0x40076d:	call	0x500048
<Block for 0x400772, 17 bytes>
0x400772:	mov	qword ptr [rbp - 0x88], rax
0x400779:	cmp	qword ptr [rbp - 0x88], 0
0x400781:	je	0x400799
<Block for 0x400783, 12 bytes>
0x400783:	mov	rax, qword ptr [rbp - 0x88]
0x40078a:	mov	byte ptr [rax], 0
0x40078d:	jmp	0x400799
