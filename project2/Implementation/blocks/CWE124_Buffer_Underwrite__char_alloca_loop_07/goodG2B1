<Block for 0x400160, 84 bytes>
0x400160:	endbr64	
0x400164:	push	rbp
0x400165:	mov	rbp, rsp
0x400168:	sub	rsp, 0x90
0x40016f:	mov	rax, qword ptr fs:[0x28]
0x400178:	mov	qword ptr [rbp - 8], rax
0x40017c:	xor	eax, eax
0x40017e:	mov	eax, 0x10
0x400183:	sub	rax, 1
0x400187:	add	rax, 0x6c
0x40018b:	mov	esi, 0x10
0x400190:	mov	edx, 0
0x400195:	div	rsi
0x400198:	imul	rax, rax, 0x10
0x40019c:	mov	rdx, rax
0x40019f:	and	rdx, 0xfffffffffffff000
0x4001a6:	mov	rcx, rsp
0x4001a9:	sub	rcx, rdx
0x4001ac:	mov	rdx, rcx
0x4001af:	cmp	rsp, rdx
0x4001b2:	je	0x4001c6
<Block for 0x4001c6, 26 bytes>
0x4001c6:	mov	rdx, rax
0x4001c9:	and	edx, 0xfff
0x4001cf:	sub	rsp, rdx
0x4001d2:	mov	rdx, rax
0x4001d5:	and	edx, 0xfff
0x4001db:	test	rdx, rdx
0x4001de:	je	0x4001f0
<Block for 0x4001b4, 18 bytes>
0x4001b4:	sub	rsp, 0x1000
0x4001bb:	or	qword ptr [rsp + 0xff8], 0
0x4001c4:	jmp	0x4001af
<Block for 0x4001f0, 41 bytes>
0x4001f0:	mov	rax, rsp
0x4001f3:	add	rax, 0xf
0x4001f7:	shr	rax, 4
0x4001fb:	shl	rax, 4
0x4001ff:	mov	qword ptr [rbp - 0x78], rax
0x400203:	mov	rax, qword ptr [rbp - 0x78]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x4001e0, 57 bytes>
0x4001e0:	and	eax, 0xfff
0x4001e5:	sub	rax, 8
0x4001e9:	add	rax, rsp
0x4001ec:	or	qword ptr [rax], 0
0x4001f0:	mov	rax, rsp
0x4001f3:	add	rax, 0xf
0x4001f7:	shr	rax, 4
0x4001fb:	shl	rax, 4
0x4001ff:	mov	qword ptr [rbp - 0x78], rax
0x400203:	mov	rax, qword ptr [rbp - 0x78]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x4001af, 5 bytes>
0x4001af:	cmp	rsp, rdx
0x4001b2:	je	0x4001c6
<Block for 0x400219, 22 bytes>
0x400219:	mov	rax, qword ptr [rbp - 0x78]
0x40021d:	add	rax, 0x63
0x400221:	mov	byte ptr [rax], 0
0x400224:	mov	eax, dword ptr [rip + 0x21e]
0x40022a:	cmp	eax, 5
0x40022d:	je	0x40023d
<Block for 0x40023d, 33 bytes>
0x40023d:	mov	rax, qword ptr [rbp - 0x78]
0x400241:	mov	qword ptr [rbp - 0x88], rax
0x400248:	lea	rax, [rbp - 0x70]
0x40024c:	mov	edx, 0x63
0x400251:	mov	esi, 0x43
0x400256:	mov	rdi, rax
0x400259:	call	0x500000
<Block for 0x40022f, 12 bytes>
0x40022f:	lea	rdi, [rip + 0x216]
0x400236:	call	0x500008
<Block for 0x40025e, 14 bytes>
0x40025e:	mov	byte ptr [rbp - 0xd], 0
0x400262:	mov	qword ptr [rbp - 0x80], 0
0x40026a:	jmp	0x40028f
<Block for 0x40023b, 2 bytes>
0x40023b:	jmp	0x400248
<Block for 0x40028f, 7 bytes>
0x40028f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400294:	jbe	0x40026c
<Block for 0x400248, 22 bytes>
0x400248:	lea	rax, [rbp - 0x70]
0x40024c:	mov	edx, 0x63
0x400251:	mov	esi, 0x43
0x400256:	mov	rdi, rax
0x400259:	call	0x500000
<Block for 0x40026c, 42 bytes>
0x40026c:	mov	rdx, qword ptr [rbp - 0x88]
0x400273:	mov	rax, qword ptr [rbp - 0x80]
0x400277:	add	rdx, rax
0x40027a:	lea	rcx, [rbp - 0x70]
0x40027e:	mov	rax, qword ptr [rbp - 0x80]
0x400282:	add	rax, rcx
0x400285:	movzx	eax, byte ptr [rax]
0x400288:	mov	byte ptr [rdx], al
0x40028a:	add	qword ptr [rbp - 0x80], 1
0x40028f:	cmp	qword ptr [rbp - 0x80], 0x63
0x400294:	jbe	0x40026c
<Block for 0x400296, 29 bytes>
0x400296:	mov	rax, qword ptr [rbp - 0x88]
0x40029d:	add	rax, 0x63
0x4002a1:	mov	byte ptr [rax], 0
0x4002a4:	mov	rax, qword ptr [rbp - 0x88]
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x500008
<Block for 0x4002b3, 16 bytes>
0x4002b3:	nop	
0x4002b4:	mov	rax, qword ptr [rbp - 8]
0x4002b8:	xor	rax, qword ptr fs:[0x28]
0x4002c1:	je	0x4002c8
<Block for 0x4002c8, 2 bytes>
0x4002c8:	leave	
0x4002c9:	ret	
<Block for 0x4002c3, 5 bytes>
0x4002c3:	call	0x500010
