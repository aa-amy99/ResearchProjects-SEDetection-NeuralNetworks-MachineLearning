<Block for 0x4002ca, 84 bytes>
0x4002ca:	endbr64	
0x4002ce:	push	rbp
0x4002cf:	mov	rbp, rsp
0x4002d2:	sub	rsp, 0x90
0x4002d9:	mov	rax, qword ptr fs:[0x28]
0x4002e2:	mov	qword ptr [rbp - 8], rax
0x4002e6:	xor	eax, eax
0x4002e8:	mov	eax, 0x10
0x4002ed:	sub	rax, 1
0x4002f1:	add	rax, 0x6c
0x4002f5:	mov	esi, 0x10
0x4002fa:	mov	edx, 0
0x4002ff:	div	rsi
0x400302:	imul	rax, rax, 0x10
0x400306:	mov	rdx, rax
0x400309:	and	rdx, 0xfffffffffffff000
0x400310:	mov	rcx, rsp
0x400313:	sub	rcx, rdx
0x400316:	mov	rdx, rcx
0x400319:	cmp	rsp, rdx
0x40031c:	je	0x400330
<Block for 0x400330, 26 bytes>
0x400330:	mov	rdx, rax
0x400333:	and	edx, 0xfff
0x400339:	sub	rsp, rdx
0x40033c:	mov	rdx, rax
0x40033f:	and	edx, 0xfff
0x400345:	test	rdx, rdx
0x400348:	je	0x40035a
<Block for 0x40031e, 18 bytes>
0x40031e:	sub	rsp, 0x1000
0x400325:	or	qword ptr [rsp + 0xff8], 0
0x40032e:	jmp	0x400319
<Block for 0x40035a, 41 bytes>
0x40035a:	mov	rax, rsp
0x40035d:	add	rax, 0xf
0x400361:	shr	rax, 4
0x400365:	shl	rax, 4
0x400369:	mov	qword ptr [rbp - 0x78], rax
0x40036d:	mov	rax, qword ptr [rbp - 0x78]
0x400371:	mov	edx, 0x63
0x400376:	mov	esi, 0x41
0x40037b:	mov	rdi, rax
0x40037e:	call	0x500000
<Block for 0x40034a, 57 bytes>
0x40034a:	and	eax, 0xfff
0x40034f:	sub	rax, 8
0x400353:	add	rax, rsp
0x400356:	or	qword ptr [rax], 0
0x40035a:	mov	rax, rsp
0x40035d:	add	rax, 0xf
0x400361:	shr	rax, 4
0x400365:	shl	rax, 4
0x400369:	mov	qword ptr [rbp - 0x78], rax
0x40036d:	mov	rax, qword ptr [rbp - 0x78]
0x400371:	mov	edx, 0x63
0x400376:	mov	esi, 0x41
0x40037b:	mov	rdi, rax
0x40037e:	call	0x500000
<Block for 0x400319, 5 bytes>
0x400319:	cmp	rsp, rdx
0x40031c:	je	0x400330
<Block for 0x400383, 22 bytes>
0x400383:	mov	rax, qword ptr [rbp - 0x78]
0x400387:	add	rax, 0x63
0x40038b:	mov	byte ptr [rax], 0
0x40038e:	mov	eax, dword ptr [rip + 0xb4]
0x400394:	cmp	eax, 5
0x400397:	jne	0x4003a4
<Block for 0x400399, 33 bytes>
0x400399:	mov	rax, qword ptr [rbp - 0x78]
0x40039d:	mov	qword ptr [rbp - 0x88], rax
0x4003a4:	lea	rax, [rbp - 0x70]
0x4003a8:	mov	edx, 0x63
0x4003ad:	mov	esi, 0x43
0x4003b2:	mov	rdi, rax
0x4003b5:	call	0x500000
<Block for 0x4003a4, 22 bytes>
0x4003a4:	lea	rax, [rbp - 0x70]
0x4003a8:	mov	edx, 0x63
0x4003ad:	mov	esi, 0x43
0x4003b2:	mov	rdi, rax
0x4003b5:	call	0x500000
<Block for 0x4003ba, 14 bytes>
0x4003ba:	mov	byte ptr [rbp - 0xd], 0
0x4003be:	mov	qword ptr [rbp - 0x80], 0
0x4003c6:	jmp	0x4003eb
<Block for 0x4003eb, 7 bytes>
0x4003eb:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003f0:	jbe	0x4003c8
<Block for 0x4003c8, 42 bytes>
0x4003c8:	mov	rdx, qword ptr [rbp - 0x88]
0x4003cf:	mov	rax, qword ptr [rbp - 0x80]
0x4003d3:	add	rdx, rax
0x4003d6:	lea	rcx, [rbp - 0x70]
0x4003da:	mov	rax, qword ptr [rbp - 0x80]
0x4003de:	add	rax, rcx
0x4003e1:	movzx	eax, byte ptr [rax]
0x4003e4:	mov	byte ptr [rdx], al
0x4003e6:	add	qword ptr [rbp - 0x80], 1
0x4003eb:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003f0:	jbe	0x4003c8
<Block for 0x4003f2, 29 bytes>
0x4003f2:	mov	rax, qword ptr [rbp - 0x88]
0x4003f9:	add	rax, 0x63
0x4003fd:	mov	byte ptr [rax], 0
0x400400:	mov	rax, qword ptr [rbp - 0x88]
0x400407:	mov	rdi, rax
0x40040a:	call	0x500008
<Block for 0x40040f, 16 bytes>
0x40040f:	nop	
0x400410:	mov	rax, qword ptr [rbp - 8]
0x400414:	xor	rax, qword ptr fs:[0x28]
0x40041d:	je	0x400424
<Block for 0x400424, 2 bytes>
0x400424:	leave	
0x400425:	ret	
<Block for 0x40041f, 5 bytes>
0x40041f:	call	0x500010
