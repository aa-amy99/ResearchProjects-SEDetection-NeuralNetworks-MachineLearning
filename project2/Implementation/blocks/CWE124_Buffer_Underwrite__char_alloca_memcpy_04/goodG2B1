<Block for 0x4001a7, 85 bytes>
0x4001a7:	endbr64	
0x4001ab:	push	rbp
0x4001ac:	mov	rbp, rsp
0x4001af:	push	rbx
0x4001b0:	sub	rsp, 0x88
0x4001b7:	mov	rax, qword ptr fs:[0x28]
0x4001c0:	mov	qword ptr [rbp - 0x18], rax
0x4001c4:	xor	eax, eax
0x4001c6:	mov	eax, 0x10
0x4001cb:	sub	rax, 1
0x4001cf:	add	rax, 0x6c
0x4001d3:	mov	esi, 0x10
0x4001d8:	mov	edx, 0
0x4001dd:	div	rsi
0x4001e0:	imul	rax, rax, 0x10
0x4001e4:	mov	rdx, rax
0x4001e7:	and	rdx, 0xfffffffffffff000
0x4001ee:	mov	rbx, rsp
0x4001f1:	sub	rbx, rdx
0x4001f4:	mov	rdx, rbx
0x4001f7:	cmp	rsp, rdx
0x4001fa:	je	0x40020e
<Block for 0x40020e, 26 bytes>
0x40020e:	mov	rdx, rax
0x400211:	and	edx, 0xfff
0x400217:	sub	rsp, rdx
0x40021a:	mov	rdx, rax
0x40021d:	and	edx, 0xfff
0x400223:	test	rdx, rdx
0x400226:	je	0x400238
<Block for 0x4001fc, 18 bytes>
0x4001fc:	sub	rsp, 0x1000
0x400203:	or	qword ptr [rsp + 0xff8], 0
0x40020c:	jmp	0x4001f7
<Block for 0x400238, 47 bytes>
0x400238:	mov	rax, rsp
0x40023b:	add	rax, 0xf
0x40023f:	shr	rax, 4
0x400243:	shl	rax, 4
0x400247:	mov	qword ptr [rbp - 0x88], rax
0x40024e:	mov	rax, qword ptr [rbp - 0x88]
0x400255:	mov	edx, 0x63
0x40025a:	mov	esi, 0x41
0x40025f:	mov	rdi, rax
0x400262:	call	0x500000
<Block for 0x400228, 63 bytes>
0x400228:	and	eax, 0xfff
0x40022d:	sub	rax, 8
0x400231:	add	rax, rsp
0x400234:	or	qword ptr [rax], 0
0x400238:	mov	rax, rsp
0x40023b:	add	rax, 0xf
0x40023f:	shr	rax, 4
0x400243:	shl	rax, 4
0x400247:	mov	qword ptr [rbp - 0x88], rax
0x40024e:	mov	rax, qword ptr [rbp - 0x88]
0x400255:	mov	edx, 0x63
0x40025a:	mov	esi, 0x41
0x40025f:	mov	rdi, rax
0x400262:	call	0x500000
<Block for 0x4001f7, 5 bytes>
0x4001f7:	cmp	rsp, rdx
0x4001fa:	je	0x40020e
<Block for 0x400267, 23 bytes>
0x400267:	mov	rax, qword ptr [rbp - 0x88]
0x40026e:	add	rax, 0x63
0x400272:	mov	byte ptr [rax], 0
0x400275:	mov	eax, 0
0x40027a:	test	eax, eax
0x40027c:	je	0x40028c
<Block for 0x40028c, 36 bytes>
0x40028c:	mov	rax, qword ptr [rbp - 0x88]
0x400293:	mov	qword ptr [rbp - 0x90], rax
0x40029a:	lea	rax, [rbp - 0x80]
0x40029e:	mov	edx, 0x63
0x4002a3:	mov	esi, 0x43
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x500000
<Block for 0x40027e, 12 bytes>
0x40027e:	lea	rdi, [rip + 0x29f]
0x400285:	call	0x500008
<Block for 0x4002b0, 141 bytes>
0x4002b0:	mov	byte ptr [rbp - 0x1d], 0
0x4002b4:	mov	rax, qword ptr [rbp - 0x90]
0x4002bb:	mov	rcx, qword ptr [rbp - 0x80]
0x4002bf:	mov	rbx, qword ptr [rbp - 0x78]
0x4002c3:	mov	qword ptr [rax], rcx
0x4002c6:	mov	qword ptr [rax + 8], rbx
0x4002ca:	mov	rcx, qword ptr [rbp - 0x70]
0x4002ce:	mov	rbx, qword ptr [rbp - 0x68]
0x4002d2:	mov	qword ptr [rax + 0x10], rcx
0x4002d6:	mov	qword ptr [rax + 0x18], rbx
0x4002da:	mov	rcx, qword ptr [rbp - 0x60]
0x4002de:	mov	rbx, qword ptr [rbp - 0x58]
0x4002e2:	mov	qword ptr [rax + 0x20], rcx
0x4002e6:	mov	qword ptr [rax + 0x28], rbx
0x4002ea:	mov	rcx, qword ptr [rbp - 0x50]
0x4002ee:	mov	rbx, qword ptr [rbp - 0x48]
0x4002f2:	mov	qword ptr [rax + 0x30], rcx
0x4002f6:	mov	qword ptr [rax + 0x38], rbx
0x4002fa:	mov	rcx, qword ptr [rbp - 0x40]
0x4002fe:	mov	rbx, qword ptr [rbp - 0x38]
0x400302:	mov	qword ptr [rax + 0x40], rcx
0x400306:	mov	qword ptr [rax + 0x48], rbx
0x40030a:	mov	rcx, qword ptr [rbp - 0x30]
0x40030e:	mov	rbx, qword ptr [rbp - 0x28]
0x400312:	mov	qword ptr [rax + 0x50], rcx
0x400316:	mov	qword ptr [rax + 0x58], rbx
0x40031a:	mov	edx, dword ptr [rbp - 0x20]
0x40031d:	mov	dword ptr [rax + 0x60], edx
0x400320:	mov	rax, qword ptr [rbp - 0x90]
0x400327:	add	rax, 0x63
0x40032b:	mov	byte ptr [rax], 0
0x40032e:	mov	rax, qword ptr [rbp - 0x90]
0x400335:	mov	rdi, rax
0x400338:	call	0x500008
<Block for 0x40028a, 2 bytes>
0x40028a:	jmp	0x40029a
<Block for 0x40033d, 16 bytes>
0x40033d:	nop	
0x40033e:	mov	rax, qword ptr [rbp - 0x18]
0x400342:	xor	rax, qword ptr fs:[0x28]
0x40034b:	je	0x400352
<Block for 0x40029a, 22 bytes>
0x40029a:	lea	rax, [rbp - 0x80]
0x40029e:	mov	edx, 0x63
0x4002a3:	mov	esi, 0x43
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x500000
<Block for 0x400352, 6 bytes>
0x400352:	mov	rbx, qword ptr [rbp - 8]
0x400356:	leave	
0x400357:	ret	
<Block for 0x40034d, 5 bytes>
0x40034d:	call	0x500010
