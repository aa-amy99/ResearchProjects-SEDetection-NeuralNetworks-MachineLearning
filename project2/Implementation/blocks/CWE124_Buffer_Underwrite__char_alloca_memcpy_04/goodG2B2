<Block for 0x400358, 85 bytes>
0x400358:	endbr64	
0x40035c:	push	rbp
0x40035d:	mov	rbp, rsp
0x400360:	push	rbx
0x400361:	sub	rsp, 0x88
0x400368:	mov	rax, qword ptr fs:[0x28]
0x400371:	mov	qword ptr [rbp - 0x18], rax
0x400375:	xor	eax, eax
0x400377:	mov	eax, 0x10
0x40037c:	sub	rax, 1
0x400380:	add	rax, 0x6c
0x400384:	mov	esi, 0x10
0x400389:	mov	edx, 0
0x40038e:	div	rsi
0x400391:	imul	rax, rax, 0x10
0x400395:	mov	rdx, rax
0x400398:	and	rdx, 0xfffffffffffff000
0x40039f:	mov	rbx, rsp
0x4003a2:	sub	rbx, rdx
0x4003a5:	mov	rdx, rbx
0x4003a8:	cmp	rsp, rdx
0x4003ab:	je	0x4003bf
<Block for 0x4003bf, 26 bytes>
0x4003bf:	mov	rdx, rax
0x4003c2:	and	edx, 0xfff
0x4003c8:	sub	rsp, rdx
0x4003cb:	mov	rdx, rax
0x4003ce:	and	edx, 0xfff
0x4003d4:	test	rdx, rdx
0x4003d7:	je	0x4003e9
<Block for 0x4003ad, 18 bytes>
0x4003ad:	sub	rsp, 0x1000
0x4003b4:	or	qword ptr [rsp + 0xff8], 0
0x4003bd:	jmp	0x4003a8
<Block for 0x4003e9, 47 bytes>
0x4003e9:	mov	rax, rsp
0x4003ec:	add	rax, 0xf
0x4003f0:	shr	rax, 4
0x4003f4:	shl	rax, 4
0x4003f8:	mov	qword ptr [rbp - 0x88], rax
0x4003ff:	mov	rax, qword ptr [rbp - 0x88]
0x400406:	mov	edx, 0x63
0x40040b:	mov	esi, 0x41
0x400410:	mov	rdi, rax
0x400413:	call	0x500000
<Block for 0x4003d9, 63 bytes>
0x4003d9:	and	eax, 0xfff
0x4003de:	sub	rax, 8
0x4003e2:	add	rax, rsp
0x4003e5:	or	qword ptr [rax], 0
0x4003e9:	mov	rax, rsp
0x4003ec:	add	rax, 0xf
0x4003f0:	shr	rax, 4
0x4003f4:	shl	rax, 4
0x4003f8:	mov	qword ptr [rbp - 0x88], rax
0x4003ff:	mov	rax, qword ptr [rbp - 0x88]
0x400406:	mov	edx, 0x63
0x40040b:	mov	esi, 0x41
0x400410:	mov	rdi, rax
0x400413:	call	0x500000
<Block for 0x4003a8, 5 bytes>
0x4003a8:	cmp	rsp, rdx
0x4003ab:	je	0x4003bf
<Block for 0x400418, 23 bytes>
0x400418:	mov	rax, qword ptr [rbp - 0x88]
0x40041f:	add	rax, 0x63
0x400423:	mov	byte ptr [rax], 0
0x400426:	mov	eax, 1
0x40042b:	test	eax, eax
0x40042d:	je	0x40043d
<Block for 0x40043d, 22 bytes>
0x40043d:	lea	rax, [rbp - 0x80]
0x400441:	mov	edx, 0x63
0x400446:	mov	esi, 0x43
0x40044b:	mov	rdi, rax
0x40044e:	call	0x500000
<Block for 0x40042f, 36 bytes>
0x40042f:	mov	rax, qword ptr [rbp - 0x88]
0x400436:	mov	qword ptr [rbp - 0x90], rax
0x40043d:	lea	rax, [rbp - 0x80]
0x400441:	mov	edx, 0x63
0x400446:	mov	esi, 0x43
0x40044b:	mov	rdi, rax
0x40044e:	call	0x500000
<Block for 0x400453, 141 bytes>
0x400453:	mov	byte ptr [rbp - 0x1d], 0
0x400457:	mov	rax, qword ptr [rbp - 0x90]
0x40045e:	mov	rcx, qword ptr [rbp - 0x80]
0x400462:	mov	rbx, qword ptr [rbp - 0x78]
0x400466:	mov	qword ptr [rax], rcx
0x400469:	mov	qword ptr [rax + 8], rbx
0x40046d:	mov	rcx, qword ptr [rbp - 0x70]
0x400471:	mov	rbx, qword ptr [rbp - 0x68]
0x400475:	mov	qword ptr [rax + 0x10], rcx
0x400479:	mov	qword ptr [rax + 0x18], rbx
0x40047d:	mov	rcx, qword ptr [rbp - 0x60]
0x400481:	mov	rbx, qword ptr [rbp - 0x58]
0x400485:	mov	qword ptr [rax + 0x20], rcx
0x400489:	mov	qword ptr [rax + 0x28], rbx
0x40048d:	mov	rcx, qword ptr [rbp - 0x50]
0x400491:	mov	rbx, qword ptr [rbp - 0x48]
0x400495:	mov	qword ptr [rax + 0x30], rcx
0x400499:	mov	qword ptr [rax + 0x38], rbx
0x40049d:	mov	rcx, qword ptr [rbp - 0x40]
0x4004a1:	mov	rbx, qword ptr [rbp - 0x38]
0x4004a5:	mov	qword ptr [rax + 0x40], rcx
0x4004a9:	mov	qword ptr [rax + 0x48], rbx
0x4004ad:	mov	rcx, qword ptr [rbp - 0x30]
0x4004b1:	mov	rbx, qword ptr [rbp - 0x28]
0x4004b5:	mov	qword ptr [rax + 0x50], rcx
0x4004b9:	mov	qword ptr [rax + 0x58], rbx
0x4004bd:	mov	edx, dword ptr [rbp - 0x20]
0x4004c0:	mov	dword ptr [rax + 0x60], edx
0x4004c3:	mov	rax, qword ptr [rbp - 0x90]
0x4004ca:	add	rax, 0x63
0x4004ce:	mov	byte ptr [rax], 0
0x4004d1:	mov	rax, qword ptr [rbp - 0x90]
0x4004d8:	mov	rdi, rax
0x4004db:	call	0x500008
<Block for 0x4004e0, 16 bytes>
0x4004e0:	nop	
0x4004e1:	mov	rax, qword ptr [rbp - 0x18]
0x4004e5:	xor	rax, qword ptr fs:[0x28]
0x4004ee:	je	0x4004f5
<Block for 0x4004f5, 6 bytes>
0x4004f5:	mov	rbx, qword ptr [rbp - 8]
0x4004f9:	leave	
0x4004fa:	ret	
<Block for 0x4004f0, 5 bytes>
0x4004f0:	call	0x500010
