<Block for 0x400200, 51 bytes>
0x400200:	endbr64	
0x400204:	push	rbp
0x400205:	mov	rbp, rsp
0x400208:	sub	rsp, 0x90
0x40020f:	mov	rax, qword ptr fs:[0x28]
0x400218:	mov	qword ptr [rbp - 8], rax
0x40021c:	xor	eax, eax
0x40021e:	mov	qword ptr [rbp - 0x88], 0
0x400229:	mov	eax, 0
0x40022e:	call	0x500000
<Block for 0x400233, 4 bytes>
0x400233:	test	eax, eax
0x400235:	je	0x400282
<Block for 0x400282, 22 bytes>
0x400282:	lea	rax, [rbp - 0x70]
0x400286:	mov	edx, 0x63
0x40028b:	mov	esi, 0x43
0x400290:	mov	rdi, rax
0x400293:	call	0x500018
<Block for 0x400237, 10 bytes>
0x400237:	mov	edi, 0x64
0x40023c:	call	0x500008
<Block for 0x400298, 14 bytes>
0x400298:	mov	byte ptr [rbp - 0xd], 0
0x40029c:	mov	qword ptr [rbp - 0x80], 0
0x4002a4:	jmp	0x4002c9
<Block for 0x400241, 11 bytes>
0x400241:	mov	qword ptr [rbp - 0x78], rax
0x400245:	cmp	qword ptr [rbp - 0x78], 0
0x40024a:	jne	0x400256
<Block for 0x4002c9, 7 bytes>
0x4002c9:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002ce:	jbe	0x4002a6
<Block for 0x40024c, 10 bytes>
0x40024c:	mov	edi, 0xffffffff
0x400251:	call	0x500010
<Block for 0x400256, 22 bytes>
0x400256:	mov	rax, qword ptr [rbp - 0x78]
0x40025a:	mov	edx, 0x63
0x40025f:	mov	esi, 0x41
0x400264:	mov	rdi, rax
0x400267:	call	0x500018
<Block for 0x4002a6, 42 bytes>
0x4002a6:	mov	rdx, qword ptr [rbp - 0x88]
0x4002ad:	mov	rax, qword ptr [rbp - 0x80]
0x4002b1:	add	rax, rdx
0x4002b4:	movzx	eax, byte ptr [rax]
0x4002b7:	lea	rcx, [rbp - 0x70]
0x4002bb:	mov	rdx, qword ptr [rbp - 0x80]
0x4002bf:	add	rdx, rcx
0x4002c2:	mov	byte ptr [rdx], al
0x4002c4:	add	qword ptr [rbp - 0x80], 1
0x4002c9:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002ce:	jbe	0x4002a6
<Block for 0x4002d0, 16 bytes>
0x4002d0:	mov	byte ptr [rbp - 0xd], 0
0x4002d4:	lea	rax, [rbp - 0x70]
0x4002d8:	mov	rdi, rax
0x4002db:	call	0x500020
<Block for 0x40026c, 44 bytes>
0x40026c:	mov	rax, qword ptr [rbp - 0x78]
0x400270:	add	rax, 0x63
0x400274:	mov	byte ptr [rax], 0
0x400277:	mov	rax, qword ptr [rbp - 0x78]
0x40027b:	mov	qword ptr [rbp - 0x88], rax
0x400282:	lea	rax, [rbp - 0x70]
0x400286:	mov	edx, 0x63
0x40028b:	mov	esi, 0x43
0x400290:	mov	rdi, rax
0x400293:	call	0x500018
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500028
