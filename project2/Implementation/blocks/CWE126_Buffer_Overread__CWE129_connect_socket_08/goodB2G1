<Block for 0x400195, 44 bytes>
0x400195:	endbr64	
0x400199:	push	rbp
0x40019a:	mov	rbp, rsp
0x40019d:	sub	rsp, 0x50
0x4001a1:	mov	rax, qword ptr fs:[0x28]
0x4001aa:	mov	qword ptr [rbp - 8], rax
0x4001ae:	xor	eax, eax
0x4001b0:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4001b7:	mov	eax, 0
0x4001bc:	call	0x400000
<Block for 0x4001c1, 8 bytes>
0x4001c1:	test	eax, eax
0x4001c3:	je	0x40029b
<Block for 0x40029b, 10 bytes>
0x40029b:	mov	eax, 0
0x4002a0:	call	0x40000f
<Block for 0x4001c9, 27 bytes>
0x4001c9:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001d0:	mov	edx, 6
0x4001d5:	mov	esi, 1
0x4001da:	mov	edi, 2
0x4001df:	call	0x500000
<Block for 0x4002a5, 4 bytes>
0x4002a5:	test	eax, eax
0x4002a7:	je	0x4002b7
<Block for 0x4001e4, 13 bytes>
0x4001e4:	mov	dword ptr [rbp - 0x48], eax
0x4001e7:	cmp	dword ptr [rbp - 0x48], -1
0x4001eb:	je	0x400287
<Block for 0x4002b7, 46 bytes>
0x4002b7:	mov	qword ptr [rbp - 0x40], 0
0x4002bf:	mov	qword ptr [rbp - 0x38], 0
0x4002c7:	mov	qword ptr [rbp - 0x30], 0
0x4002cf:	mov	qword ptr [rbp - 0x28], 0
0x4002d7:	mov	qword ptr [rbp - 0x20], 0
0x4002df:	cmp	dword ptr [rbp - 0x4c], 0
0x4002e3:	js	0x4002fd
<Block for 0x4002a9, 12 bytes>
0x4002a9:	lea	rdi, [rip + 0x3af]
0x4002b0:	call	0x500048
<Block for 0x400287, 3 bytes>
0x400287:	nop	
0x400288:	jmp	0x40028b
<Block for 0x4001f1, 22 bytes>
0x4001f1:	lea	rax, [rbp - 0x40]
0x4001f5:	mov	edx, 0x10
0x4001fa:	mov	esi, 0
0x4001ff:	mov	rdi, rax
0x400202:	call	0x500008
<Block for 0x4002fd, 12 bytes>
0x4002fd:	lea	rdi, [rip + 0x374]
0x400304:	call	0x500048
<Block for 0x4002e5, 6 bytes>
0x4002e5:	cmp	dword ptr [rbp - 0x4c], 9
0x4002e9:	jg	0x4002fd
<Block for 0x4002b5, 2 bytes>
0x4002b5:	jmp	0x400309
<Block for 0x40028b, 6 bytes>
0x40028b:	cmp	dword ptr [rbp - 0x48], -1
0x40028f:	je	0x40029b
<Block for 0x400207, 18 bytes>
0x400207:	mov	word ptr [rbp - 0x40], 2
0x40020d:	lea	rdi, [rip + 0x41c]
0x400214:	call	0x500010
<Block for 0x400309, 16 bytes>
0x400309:	nop	
0x40030a:	mov	rax, qword ptr [rbp - 8]
0x40030e:	xor	rax, qword ptr fs:[0x28]
0x400317:	je	0x40031e
<Block for 0x4002eb, 16 bytes>
0x4002eb:	mov	eax, dword ptr [rbp - 0x4c]
0x4002ee:	cdqe	
0x4002f0:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002f4:	mov	edi, eax
0x4002f6:	call	0x500040
<Block for 0x400291, 10 bytes>
0x400291:	mov	eax, dword ptr [rbp - 0x48]
0x400294:	mov	edi, eax
0x400296:	call	0x500038
<Block for 0x400219, 13 bytes>
0x400219:	mov	dword ptr [rbp - 0x3c], eax
0x40021c:	mov	edi, 0x6987
0x400221:	call	0x500018
<Block for 0x40031e, 2 bytes>
0x40031e:	leave	
0x40031f:	ret	
<Block for 0x400319, 5 bytes>
0x400319:	call	0x500050
<Block for 0x4002fb, 2 bytes>
0x4002fb:	jmp	0x400309
<Block for 0x400226, 26 bytes>
0x400226:	mov	word ptr [rbp - 0x3e], ax
0x40022a:	lea	rcx, [rbp - 0x40]
0x40022e:	mov	eax, dword ptr [rbp - 0x48]
0x400231:	mov	edx, 0x10
0x400236:	mov	rsi, rcx
0x400239:	mov	edi, eax
0x40023b:	call	0x500020
<Block for 0x400240, 5 bytes>
0x400240:	cmp	eax, -1
0x400243:	je	0x40028a
<Block for 0x400245, 24 bytes>
0x400245:	lea	rsi, [rbp - 0x16]
0x400249:	mov	eax, dword ptr [rbp - 0x48]
0x40024c:	mov	ecx, 0
0x400251:	mov	edx, 0xd
0x400256:	mov	edi, eax
0x400258:	call	0x500028
<Block for 0x40028a, 1 bytes>
0x40028a:	nop	
<Block for 0x40025d, 9 bytes>
0x40025d:	mov	dword ptr [rbp - 0x44], eax
0x400260:	cmp	dword ptr [rbp - 0x44], -1
0x400264:	je	0x40028b
<Block for 0x400266, 6 bytes>
0x400266:	cmp	dword ptr [rbp - 0x44], 0
0x40026a:	je	0x40028b
<Block for 0x40026c, 22 bytes>
0x40026c:	mov	eax, dword ptr [rbp - 0x44]
0x40026f:	cdqe	
0x400271:	mov	byte ptr [rbp + rax - 0x16], 0
0x400276:	lea	rax, [rbp - 0x16]
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500030
<Block for 0x400282, 5 bytes>
0x400282:	mov	dword ptr [rbp - 0x4c], eax
0x400285:	jmp	0x40028b
