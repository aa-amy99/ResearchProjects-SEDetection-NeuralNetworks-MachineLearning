<Block for 0x40004a, 33 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x10
0x400056:	lea	rax, [rip - 0x5d]
0x40005d:	mov	qword ptr [rbp - 0x10], rax
0x400061:	mov	edi, 0x64
0x400066:	call	0x500010
<Block for 0x40006b, 11 bytes>
0x40006b:	mov	qword ptr [rbp - 8], rax
0x40006f:	cmp	qword ptr [rbp - 8], 0
0x400074:	jne	0x400080
<Block for 0x400076, 10 bytes>
0x400076:	mov	edi, 0xffffffff
0x40007b:	call	0x500018
<Block for 0x400080, 48 bytes>
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	mov	byte ptr [rax], 0
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	movabs	rcx, 0x7453206465786946
0x400095:	mov	qword ptr [rax], rcx
0x400098:	mov	dword ptr [rax + 8], 0x676e6972
0x40009f:	mov	byte ptr [rax + 0xc], 0
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	rdx
<Block for 0x4000b0, 3 bytes>
0x4000b0:	nop	
0x4000b1:	leave	
0x4000b2:	ret	
