<Block for 0x400064, 62 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x20
0x400070:	mov	rax, qword ptr fs:[0x28]
0x400079:	mov	qword ptr [rbp - 8], rax
0x40007d:	xor	eax, eax
0x40007f:	lea	rax, [rbp - 0x20]
0x400083:	mov	qword ptr [rbp - 0x18], rax
0x400087:	mov	qword ptr [rbp - 0x20], 0
0x40008f:	lea	rsi, [rip + 0x55]
0x400096:	lea	rdi, [rip + 0x51]
0x40009d:	call	0x500000
<Block for 0x4000a2, 22 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x20], rax
0x4000a6:	mov	rax, qword ptr [rbp - 0x18]
0x4000aa:	mov	rax, qword ptr [rax]
0x4000ad:	mov	qword ptr [rbp - 0x10], rax
0x4000b1:	cmp	qword ptr [rbp - 0x10], 0
0x4000b6:	je	0x4000c4
<Block for 0x4000c4, 16 bytes>
0x4000c4:	nop	
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	xor	rax, qword ptr fs:[0x28]
0x4000d2:	je	0x4000d9
<Block for 0x4000b8, 12 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500010
<Block for 0x4000d9, 2 bytes>
0x4000d9:	leave	
0x4000da:	ret	
<Block for 0x4000d4, 5 bytes>
0x4000d4:	call	0x500008
