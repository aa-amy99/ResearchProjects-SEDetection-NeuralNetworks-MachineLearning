<Block for 0x400084, 25 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	push	rbx
0x40008d:	sub	rsp, 0x18
0x400091:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400098:	call	0x500020
<Block for 0x40009d, 7 bytes>
0x40009d:	and	eax, 1
0x4000a0:	test	eax, eax
0x4000a2:	je	0x4000c1
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500020
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500020
<Block for 0x4000c6, 10 bytes>
0x4000c6:	shl	eax, 0x1e
0x4000c9:	mov	ebx, eax
0x4000cb:	call	0x500020
<Block for 0x4000a9, 10 bytes>
0x4000a9:	shl	eax, 0x1e
0x4000ac:	mov	ebx, eax
0x4000ae:	call	0x500020
<Block for 0x4000d0, 10 bytes>
0x4000d0:	shl	eax, 0xf
0x4000d3:	xor	ebx, eax
0x4000d5:	call	0x500020
<Block for 0x4000b3, 10 bytes>
0x4000b3:	shl	eax, 0xf
0x4000b6:	xor	ebx, eax
0x4000b8:	call	0x500020
<Block for 0x4000da, 17 bytes>
0x4000da:	xor	eax, ebx
0x4000dc:	not	eax
0x4000de:	mov	dword ptr [rbp - 0x14], eax
0x4000e1:	mov	eax, dword ptr [rbp - 0x14]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x400000
<Block for 0x4000bd, 4 bytes>
0x4000bd:	xor	eax, ebx
0x4000bf:	jmp	0x4000de
<Block for 0x4000eb, 8 bytes>
0x4000eb:	nop	
0x4000ec:	add	rsp, 0x18
0x4000f0:	pop	rbx
0x4000f1:	pop	rbp
0x4000f2:	ret	
<Block for 0x4000de, 13 bytes>
0x4000de:	mov	dword ptr [rbp - 0x14], eax
0x4000e1:	mov	eax, dword ptr [rbp - 0x14]
0x4000e4:	mov	edi, eax
0x4000e6:	call	0x400000
