<Block for 0x4000e4, 65 bytes>
0x4000e4:	endbr64	
0x4000e8:	push	rbp
0x4000e9:	mov	rbp, rsp
0x4000ec:	sub	rsp, 0x90
0x4000f3:	mov	rax, qword ptr fs:[0x28]
0x4000fc:	mov	qword ptr [rbp - 8], rax
0x400100:	xor	eax, eax
0x400102:	lea	rax, [rbp - 0x90]
0x400109:	mov	qword ptr [rbp - 0x88], rax
0x400110:	mov	qword ptr [rbp - 0x90], 0
0x40011b:	mov	edi, 0x64
0x400120:	call	0x500000
<Block for 0x400125, 11 bytes>
0x400125:	mov	qword ptr [rbp - 0x80], rax
0x400129:	cmp	qword ptr [rbp - 0x80], 0
0x40012e:	jne	0x40013a
<Block for 0x400130, 10 bytes>
0x400130:	mov	edi, 0xffffffff
0x400135:	call	0x500008
<Block for 0x40013a, 22 bytes>
0x40013a:	mov	rax, qword ptr [rbp - 0x80]
0x40013e:	mov	edx, 0x63
0x400143:	mov	esi, 0x41
0x400148:	mov	rdi, rax
0x40014b:	call	0x500010
<Block for 0x400150, 58 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0x80]
0x400154:	add	rax, 0x63
0x400158:	mov	byte ptr [rax], 0
0x40015b:	mov	rax, qword ptr [rbp - 0x80]
0x40015f:	mov	qword ptr [rbp - 0x90], rax
0x400166:	mov	rax, qword ptr [rbp - 0x88]
0x40016d:	mov	rax, qword ptr [rax]
0x400170:	mov	qword ptr [rbp - 0x78], rax
0x400174:	lea	rax, [rbp - 0x70]
0x400178:	mov	edx, 0x63
0x40017d:	mov	esi, 0x43
0x400182:	mov	rdi, rax
0x400185:	call	0x500010
<Block for 0x40018a, 23 bytes>
0x40018a:	mov	byte ptr [rbp - 0xd], 0
0x40018e:	lea	rdx, [rbp - 0x70]
0x400192:	mov	rax, qword ptr [rbp - 0x78]
0x400196:	mov	rsi, rdx
0x400199:	mov	rdi, rax
0x40019c:	call	0x500018
<Block for 0x4001a1, 12 bytes>
0x4001a1:	mov	rax, qword ptr [rbp - 0x78]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500020
<Block for 0x4001ad, 16 bytes>
0x4001ad:	nop	
0x4001ae:	mov	rax, qword ptr [rbp - 8]
0x4001b2:	xor	rax, qword ptr fs:[0x28]
0x4001bb:	je	0x4001c2
<Block for 0x4001c2, 2 bytes>
0x4001c2:	leave	
0x4001c3:	ret	
<Block for 0x4001bd, 5 bytes>
0x4001bd:	call	0x500028
