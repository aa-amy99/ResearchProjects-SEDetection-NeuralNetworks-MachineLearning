<Block for 0x40060f, 179 bytes>
0x40060f:	endbr64	
0x400613:	push	rbp
0x400614:	mov	rbp, rsp
0x400617:	sub	rsp, 0xb0
0x40061e:	mov	rax, qword ptr fs:[0x28]
0x400627:	mov	qword ptr [rbp - 8], rax
0x40062b:	xor	eax, eax
0x40062d:	mov	qword ptr [rbp - 0x70], 0
0x400635:	mov	qword ptr [rbp - 0x68], 0
0x40063d:	mov	qword ptr [rbp - 0x60], 0
0x400645:	mov	qword ptr [rbp - 0x58], 0
0x40064d:	mov	qword ptr [rbp - 0x50], 0
0x400655:	mov	qword ptr [rbp - 0x48], 0
0x40065d:	mov	qword ptr [rbp - 0x40], 0
0x400665:	mov	qword ptr [rbp - 0x38], 0
0x40066d:	mov	qword ptr [rbp - 0x30], 0
0x400675:	mov	qword ptr [rbp - 0x28], 0
0x40067d:	mov	qword ptr [rbp - 0x20], 0
0x400685:	mov	qword ptr [rbp - 0x18], 0
0x40068d:	mov	dword ptr [rbp - 0x10], 0
0x400694:	lea	rax, [rbp - 0x70]
0x400698:	mov	qword ptr [rbp - 0x98], rax
0x40069f:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4006a9:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x4006b3:	mov	rax, qword ptr [rbp - 0x98]
0x4006ba:	mov	rdi, rax
0x4006bd:	call	0x500000
<Block for 0x4006c2, 27 bytes>
0x4006c2:	mov	qword ptr [rbp - 0x90], rax
0x4006c9:	mov	edx, 6
0x4006ce:	mov	esi, 1
0x4006d3:	mov	edi, 2
0x4006d8:	call	0x500008
<Block for 0x4006dd, 19 bytes>
0x4006dd:	mov	dword ptr [rbp - 0xa0], eax
0x4006e3:	cmp	dword ptr [rbp - 0xa0], -1
0x4006ea:	je	0x40085b
<Block for 0x40085b, 3 bytes>
0x40085b:	nop	
0x40085c:	jmp	0x400865
<Block for 0x4006f0, 22 bytes>
0x4006f0:	lea	rax, [rbp - 0x80]
0x4006f4:	mov	edx, 0x10
0x4006f9:	mov	esi, 0
0x4006fe:	mov	rdi, rax
0x400701:	call	0x500010
<Block for 0x400865, 9 bytes>
0x400865:	cmp	dword ptr [rbp - 0xa0], -1
0x40086c:	je	0x40087b
<Block for 0x400706, 23 bytes>
0x400706:	mov	word ptr [rbp - 0x80], 2
0x40070c:	mov	dword ptr [rbp - 0x7c], 0
0x400713:	mov	edi, 0x6987
0x400718:	call	0x500018
<Block for 0x40087b, 9 bytes>
0x40087b:	cmp	dword ptr [rbp - 0xac], -1
0x400882:	je	0x400891
<Block for 0x40086e, 13 bytes>
0x40086e:	mov	eax, dword ptr [rbp - 0xa0]
0x400874:	mov	edi, eax
0x400876:	call	0x500048
<Block for 0x40071d, 29 bytes>
0x40071d:	mov	word ptr [rbp - 0x7e], ax
0x400721:	lea	rcx, [rbp - 0x80]
0x400725:	mov	eax, dword ptr [rbp - 0xa0]
0x40072b:	mov	edx, 0x10
0x400730:	mov	rsi, rcx
0x400733:	mov	edi, eax
0x400735:	call	0x500020
<Block for 0x400891, 35 bytes>
0x400891:	nop	
0x400892:	lea	rdx, [rbp - 0xb0]
0x400899:	mov	rax, qword ptr [rbp - 0x98]
0x4008a0:	lea	rsi, [rip + 0x2b1]
0x4008a7:	mov	rdi, rax
0x4008aa:	mov	eax, 0
0x4008af:	call	0x500050
<Block for 0x400884, 13 bytes>
0x400884:	mov	eax, dword ptr [rbp - 0xac]
0x40088a:	mov	edi, eax
0x40088c:	call	0x500048
<Block for 0x40073a, 9 bytes>
0x40073a:	cmp	eax, -1
0x40073d:	je	0x40085e
<Block for 0x4008b4, 5 bytes>
0x4008b4:	cmp	eax, 1
0x4008b7:	jne	0x400905
<Block for 0x40085e, 3 bytes>
0x40085e:	nop	
0x40085f:	jmp	0x400865
<Block for 0x400743, 18 bytes>
0x400743:	mov	eax, dword ptr [rbp - 0xa0]
0x400749:	mov	esi, 5
0x40074e:	mov	edi, eax
0x400750:	call	0x500028
<Block for 0x4008b9, 13 bytes>
0x4008b9:	mov	eax, dword ptr [rbp - 0xb0]
0x4008bf:	cmp	eax, 0x270f
0x4008c4:	jg	0x400905
<Block for 0x400905, 17 bytes>
0x400905:	nop	
0x400906:	nop	
0x400907:	mov	rax, qword ptr [rbp - 8]
0x40090b:	xor	rax, qword ptr fs:[0x28]
0x400914:	je	0x40091b
<Block for 0x400755, 9 bytes>
0x400755:	cmp	eax, -1
0x400758:	je	0x400861
<Block for 0x4008c6, 22 bytes>
0x4008c6:	mov	dword ptr [rbp - 0xa4], 0
0x4008d0:	mov	dword ptr [rbp - 0xa8], 0
0x4008da:	jmp	0x4008ea
<Block for 0x40091b, 2 bytes>
0x40091b:	leave	
0x40091c:	ret	
<Block for 0x400916, 5 bytes>
0x400916:	call	0x500060
<Block for 0x400861, 3 bytes>
0x400861:	nop	
0x400862:	jmp	0x400865
<Block for 0x40075e, 23 bytes>
0x40075e:	mov	eax, dword ptr [rbp - 0xa0]
0x400764:	mov	edx, 0
0x400769:	mov	esi, 0
0x40076e:	mov	edi, eax
0x400770:	call	0x500030
<Block for 0x4008ea, 14 bytes>
0x4008ea:	mov	eax, dword ptr [rbp - 0xb0]
0x4008f0:	cmp	dword ptr [rbp - 0xa8], eax
0x4008f6:	jl	0x4008dc
<Block for 0x400775, 19 bytes>
0x400775:	mov	dword ptr [rbp - 0xac], eax
0x40077b:	cmp	dword ptr [rbp - 0xac], -1
0x400782:	je	0x400864
<Block for 0x4008dc, 28 bytes>
0x4008dc:	add	dword ptr [rbp - 0xa4], 1
0x4008e3:	add	dword ptr [rbp - 0xa8], 1
0x4008ea:	mov	eax, dword ptr [rbp - 0xb0]
0x4008f0:	cmp	dword ptr [rbp - 0xa8], eax
0x4008f6:	jl	0x4008dc
<Block for 0x4008f8, 13 bytes>
0x4008f8:	mov	eax, dword ptr [rbp - 0xa4]
0x4008fe:	mov	edi, eax
0x400900:	call	0x500058
<Block for 0x400788, 51 bytes>
0x400788:	mov	eax, 0x63
0x40078d:	sub	rax, qword ptr [rbp - 0x90]
0x400794:	mov	rdx, rax
0x400797:	mov	rcx, qword ptr [rbp - 0x98]
0x40079e:	mov	rax, qword ptr [rbp - 0x90]
0x4007a5:	lea	rsi, [rcx + rax]
0x4007a9:	mov	eax, dword ptr [rbp - 0xac]
0x4007af:	mov	ecx, 0
0x4007b4:	mov	edi, eax
0x4007b6:	call	0x500038
<Block for 0x400864, 1 bytes>
0x400864:	nop	
<Block for 0x4007bb, 19 bytes>
0x4007bb:	mov	dword ptr [rbp - 0x9c], eax
0x4007c1:	cmp	dword ptr [rbp - 0x9c], -1
0x4007c8:	je	0x400865
<Block for 0x4007ce, 13 bytes>
0x4007ce:	cmp	dword ptr [rbp - 0x9c], 0
0x4007d5:	je	0x400865
<Block for 0x4007db, 52 bytes>
0x4007db:	mov	eax, dword ptr [rbp - 0x9c]
0x4007e1:	movsxd	rdx, eax
0x4007e4:	mov	rax, qword ptr [rbp - 0x90]
0x4007eb:	add	rdx, rax
0x4007ee:	mov	rax, qword ptr [rbp - 0x98]
0x4007f5:	add	rax, rdx
0x4007f8:	mov	byte ptr [rax], 0
0x4007fb:	mov	rax, qword ptr [rbp - 0x98]
0x400802:	mov	esi, 0xd
0x400807:	mov	rdi, rax
0x40080a:	call	0x500040
<Block for 0x40080f, 17 bytes>
0x40080f:	mov	qword ptr [rbp - 0x88], rax
0x400816:	cmp	qword ptr [rbp - 0x88], 0
0x40081e:	je	0x40082a
<Block for 0x40082a, 20 bytes>
0x40082a:	mov	rax, qword ptr [rbp - 0x98]
0x400831:	mov	esi, 0xa
0x400836:	mov	rdi, rax
0x400839:	call	0x500040
<Block for 0x400820, 30 bytes>
0x400820:	mov	rax, qword ptr [rbp - 0x88]
0x400827:	mov	byte ptr [rax], 0
0x40082a:	mov	rax, qword ptr [rbp - 0x98]
0x400831:	mov	esi, 0xa
0x400836:	mov	rdi, rax
0x400839:	call	0x500040
<Block for 0x40083e, 17 bytes>
0x40083e:	mov	qword ptr [rbp - 0x88], rax
0x400845:	cmp	qword ptr [rbp - 0x88], 0
0x40084d:	je	0x400865
<Block for 0x40084f, 12 bytes>
0x40084f:	mov	rax, qword ptr [rbp - 0x88]
0x400856:	mov	byte ptr [rax], 0
0x400859:	jmp	0x400865
