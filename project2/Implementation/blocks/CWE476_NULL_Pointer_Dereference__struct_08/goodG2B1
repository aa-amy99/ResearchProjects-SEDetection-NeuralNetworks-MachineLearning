<Block for 0x400116, 37 bytes>
0x400116:	endbr64	
0x40011a:	push	rbp
0x40011b:	mov	rbp, rsp
0x40011e:	sub	rsp, 0x20
0x400122:	mov	rax, qword ptr fs:[0x28]
0x40012b:	mov	qword ptr [rbp - 8], rax
0x40012f:	xor	eax, eax
0x400131:	mov	eax, 0
0x400136:	call	0x40000f
<Block for 0x40013b, 4 bytes>
0x40013b:	test	eax, eax
0x40013d:	je	0x40014d
<Block for 0x40014d, 32 bytes>
0x40014d:	mov	dword ptr [rbp - 0x10], 0
0x400154:	mov	dword ptr [rbp - 0xc], 0
0x40015b:	lea	rax, [rbp - 0x10]
0x40015f:	mov	qword ptr [rbp - 0x18], rax
0x400163:	mov	eax, 0
0x400168:	call	0x400000
<Block for 0x40013f, 12 bytes>
0x40013f:	lea	rdi, [rip + 0xf3]
0x400146:	call	0x500008
<Block for 0x40016d, 4 bytes>
0x40016d:	test	eax, eax
0x40016f:	je	0x40017e
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x400163
<Block for 0x40017e, 16 bytes>
0x40017e:	nop	
0x40017f:	mov	rax, qword ptr [rbp - 8]
0x400183:	xor	rax, qword ptr fs:[0x28]
0x40018c:	je	0x400193
<Block for 0x400171, 13 bytes>
0x400171:	mov	rax, qword ptr [rbp - 0x18]
0x400175:	mov	eax, dword ptr [rax]
0x400177:	mov	edi, eax
0x400179:	call	0x500000
<Block for 0x400163, 10 bytes>
0x400163:	mov	eax, 0
0x400168:	call	0x400000
<Block for 0x400193, 2 bytes>
0x400193:	leave	
0x400194:	ret	
<Block for 0x40018e, 5 bytes>
0x40018e:	call	0x500010
