<Block for 0x40005e, 22 bytes>
0x40005e:	endbr64	
0x400062:	push	rbp
0x400063:	mov	rbp, rsp
0x400066:	sub	rsp, 0x10
0x40006a:	mov	eax, 0
0x40006f:	call	0x400000
<Block for 0x400074, 4 bytes>
0x400074:	test	eax, eax
0x400076:	je	0x400080
<Block for 0x400080, 10 bytes>
0x400080:	mov	eax, 0
0x400085:	call	0x40000f
<Block for 0x400078, 18 bytes>
0x400078:	mov	qword ptr [rbp - 8], 0
0x400080:	mov	eax, 0
0x400085:	call	0x40000f
<Block for 0x40008a, 4 bytes>
0x40008a:	test	eax, eax
0x40008c:	je	0x40009c
<Block for 0x40009c, 7 bytes>
0x40009c:	cmp	qword ptr [rbp - 8], 0
0x4000a1:	je	0x4000b2
<Block for 0x40008e, 12 bytes>
0x40008e:	lea	rdi, [rip + 0x1a4]
0x400095:	call	0x500008
<Block for 0x4000b2, 12 bytes>
0x4000b2:	lea	rdi, [rip + 0x195]
0x4000b9:	call	0x500008
<Block for 0x4000a3, 13 bytes>
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	mov	eax, dword ptr [rax]
0x4000a9:	mov	edi, eax
0x4000ab:	call	0x500000
<Block for 0x40009a, 2 bytes>
0x40009a:	jmp	0x4000be
<Block for 0x4000be, 3 bytes>
0x4000be:	nop	
0x4000bf:	leave	
0x4000c0:	ret	
<Block for 0x4000b0, 2 bytes>
0x4000b0:	jmp	0x4000be
