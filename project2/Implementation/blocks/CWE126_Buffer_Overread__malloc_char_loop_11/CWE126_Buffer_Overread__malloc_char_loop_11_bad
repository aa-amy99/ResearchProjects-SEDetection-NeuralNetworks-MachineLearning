<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, 0
0x40002e:	call	0x500000
<Block for 0x400033, 4 bytes>
0x400033:	test	eax, eax
0x400035:	je	0x400083
<Block for 0x400083, 22 bytes>
0x400083:	lea	rax, [rbp - 0x70]
0x400087:	mov	edx, 0x63
0x40008c:	mov	esi, 0x43
0x400091:	mov	rdi, rax
0x400094:	call	0x500018
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x32
0x40003c:	call	0x500008
<Block for 0x400099, 16 bytes>
0x400099:	mov	byte ptr [rbp - 0xd], 0
0x40009d:	lea	rax, [rbp - 0x70]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500020
<Block for 0x400041, 17 bytes>
0x400041:	mov	qword ptr [rbp - 0x88], rax
0x400048:	cmp	qword ptr [rbp - 0x88], 0
0x400050:	jne	0x40005c
<Block for 0x4000a9, 14 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x78], rax
0x4000ad:	mov	qword ptr [rbp - 0x80], 0
0x4000b5:	jmp	0x4000da
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 0xffffffff
0x400057:	call	0x500010
<Block for 0x40005c, 25 bytes>
0x40005c:	mov	rax, qword ptr [rbp - 0x88]
0x400063:	mov	edx, 0x31
0x400068:	mov	esi, 0x41
0x40006d:	mov	rdi, rax
0x400070:	call	0x500018
<Block for 0x4000da, 10 bytes>
0x4000da:	mov	rax, qword ptr [rbp - 0x80]
0x4000de:	cmp	rax, qword ptr [rbp - 0x78]
0x4000e2:	jb	0x4000b7
<Block for 0x400075, 36 bytes>
0x400075:	mov	rax, qword ptr [rbp - 0x88]
0x40007c:	add	rax, 0x31
0x400080:	mov	byte ptr [rax], 0
0x400083:	lea	rax, [rbp - 0x70]
0x400087:	mov	edx, 0x63
0x40008c:	mov	esi, 0x43
0x400091:	mov	rdi, rax
0x400094:	call	0x500018
<Block for 0x4000b7, 45 bytes>
0x4000b7:	mov	rdx, qword ptr [rbp - 0x88]
0x4000be:	mov	rax, qword ptr [rbp - 0x80]
0x4000c2:	add	rax, rdx
0x4000c5:	movzx	eax, byte ptr [rax]
0x4000c8:	lea	rcx, [rbp - 0x70]
0x4000cc:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d0:	add	rdx, rcx
0x4000d3:	mov	byte ptr [rdx], al
0x4000d5:	add	qword ptr [rbp - 0x80], 1
0x4000da:	mov	rax, qword ptr [rbp - 0x80]
0x4000de:	cmp	rax, qword ptr [rbp - 0x78]
0x4000e2:	jb	0x4000b7
<Block for 0x4000e4, 16 bytes>
0x4000e4:	mov	byte ptr [rbp - 0xd], 0
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500028
<Block for 0x4000f4, 15 bytes>
0x4000f4:	mov	rax, qword ptr [rbp - 0x88]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500030
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500038
