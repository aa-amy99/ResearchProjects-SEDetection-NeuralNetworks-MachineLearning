<Block for 0x40011a, 51 bytes>
0x40011a:	endbr64	
0x40011e:	push	rbp
0x40011f:	mov	rbp, rsp
0x400122:	sub	rsp, 0x90
0x400129:	mov	rax, qword ptr fs:[0x28]
0x400132:	mov	qword ptr [rbp - 8], rax
0x400136:	xor	eax, eax
0x400138:	mov	qword ptr [rbp - 0x88], 0
0x400143:	mov	eax, 0
0x400148:	call	0x500040
<Block for 0x40014d, 4 bytes>
0x40014d:	test	eax, eax
0x40014f:	je	0x40015f
<Block for 0x40015f, 10 bytes>
0x40015f:	mov	edi, 0x64
0x400164:	call	0x500008
<Block for 0x400151, 12 bytes>
0x400151:	lea	rdi, [rip + 0x223]
0x400158:	call	0x500028
<Block for 0x400169, 17 bytes>
0x400169:	mov	qword ptr [rbp - 0x88], rax
0x400170:	cmp	qword ptr [rbp - 0x88], 0
0x400178:	jne	0x400184
<Block for 0x40015d, 2 bytes>
0x40015d:	jmp	0x4001ab
<Block for 0x40017a, 10 bytes>
0x40017a:	mov	edi, 0xffffffff
0x40017f:	call	0x500010
<Block for 0x400184, 25 bytes>
0x400184:	mov	rax, qword ptr [rbp - 0x88]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x41
0x400195:	mov	rdi, rax
0x400198:	call	0x500018
<Block for 0x4001ab, 22 bytes>
0x4001ab:	lea	rax, [rbp - 0x70]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x43
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500018
<Block for 0x40019d, 36 bytes>
0x40019d:	mov	rax, qword ptr [rbp - 0x88]
0x4001a4:	add	rax, 0x63
0x4001a8:	mov	byte ptr [rax], 0
0x4001ab:	lea	rax, [rbp - 0x70]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x43
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500018
<Block for 0x4001c1, 16 bytes>
0x4001c1:	mov	byte ptr [rbp - 0xd], 0
0x4001c5:	lea	rax, [rbp - 0x70]
0x4001c9:	mov	rdi, rax
0x4001cc:	call	0x500020
<Block for 0x4001d1, 14 bytes>
0x4001d1:	mov	qword ptr [rbp - 0x78], rax
0x4001d5:	mov	qword ptr [rbp - 0x80], 0
0x4001dd:	jmp	0x400202
<Block for 0x400202, 10 bytes>
0x400202:	mov	rax, qword ptr [rbp - 0x80]
0x400206:	cmp	rax, qword ptr [rbp - 0x78]
0x40020a:	jb	0x4001df
<Block for 0x4001df, 45 bytes>
0x4001df:	mov	rdx, qword ptr [rbp - 0x88]
0x4001e6:	mov	rax, qword ptr [rbp - 0x80]
0x4001ea:	add	rax, rdx
0x4001ed:	movzx	eax, byte ptr [rax]
0x4001f0:	lea	rcx, [rbp - 0x70]
0x4001f4:	mov	rdx, qword ptr [rbp - 0x80]
0x4001f8:	add	rdx, rcx
0x4001fb:	mov	byte ptr [rdx], al
0x4001fd:	add	qword ptr [rbp - 0x80], 1
0x400202:	mov	rax, qword ptr [rbp - 0x80]
0x400206:	cmp	rax, qword ptr [rbp - 0x78]
0x40020a:	jb	0x4001df
<Block for 0x40020c, 16 bytes>
0x40020c:	mov	byte ptr [rbp - 0xd], 0
0x400210:	lea	rax, [rbp - 0x70]
0x400214:	mov	rdi, rax
0x400217:	call	0x500028
<Block for 0x40021c, 15 bytes>
0x40021c:	mov	rax, qword ptr [rbp - 0x88]
0x400223:	mov	rdi, rax
0x400226:	call	0x500030
<Block for 0x40022b, 16 bytes>
0x40022b:	nop	
0x40022c:	mov	rax, qword ptr [rbp - 8]
0x400230:	xor	rax, qword ptr fs:[0x28]
0x400239:	je	0x400240
<Block for 0x400240, 2 bytes>
0x400240:	leave	
0x400241:	ret	
<Block for 0x40023b, 5 bytes>
0x40023b:	call	0x500038
