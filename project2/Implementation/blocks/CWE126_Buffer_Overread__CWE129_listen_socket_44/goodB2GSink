<Block for 0x40029c, 76 bytes>
0x40029c:	endbr64	
0x4002a0:	push	rbp
0x4002a1:	mov	rbp, rsp
0x4002a4:	sub	rsp, 0x40
0x4002a8:	mov	dword ptr [rbp - 0x34], edi
0x4002ab:	mov	rax, qword ptr fs:[0x28]
0x4002b4:	mov	qword ptr [rbp - 8], rax
0x4002b8:	xor	eax, eax
0x4002ba:	mov	qword ptr [rbp - 0x30], 0
0x4002c2:	mov	qword ptr [rbp - 0x28], 0
0x4002ca:	mov	qword ptr [rbp - 0x20], 0
0x4002d2:	mov	qword ptr [rbp - 0x18], 0
0x4002da:	mov	qword ptr [rbp - 0x10], 0
0x4002e2:	cmp	dword ptr [rbp - 0x34], 0
0x4002e6:	js	0x400300
<Block for 0x400300, 12 bytes>
0x400300:	lea	rdi, [rip + 0x1c9]
0x400307:	call	0x500008
<Block for 0x4002e8, 6 bytes>
0x4002e8:	cmp	dword ptr [rbp - 0x34], 9
0x4002ec:	jg	0x400300
<Block for 0x40030c, 16 bytes>
0x40030c:	nop	
0x40030d:	mov	rax, qword ptr [rbp - 8]
0x400311:	xor	rax, qword ptr fs:[0x28]
0x40031a:	je	0x400321
<Block for 0x4002ee, 16 bytes>
0x4002ee:	mov	eax, dword ptr [rbp - 0x34]
0x4002f1:	cdqe	
0x4002f3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002f7:	mov	edi, eax
0x4002f9:	call	0x500000
<Block for 0x400321, 2 bytes>
0x400321:	leave	
0x400322:	ret	
<Block for 0x40031c, 5 bytes>
0x40031c:	call	0x500010
<Block for 0x4002fe, 2 bytes>
0x4002fe:	jmp	0x40030c
