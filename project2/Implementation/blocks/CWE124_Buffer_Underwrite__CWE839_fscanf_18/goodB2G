<Block for 0x4000d0, 70 bytes>
0x4000d0:	endbr64	
0x4000d4:	push	rbp
0x4000d5:	mov	rbp, rsp
0x4000d8:	sub	rsp, 0x40
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000f2:	nop	
0x4000f3:	endbr64	
0x4000f7:	mov	rax, qword ptr [rip + 0xfff02]
0x4000fe:	lea	rdx, [rbp - 0x38]
0x400102:	lea	rsi, [rip + 0x177]
0x400109:	mov	rdi, rax
0x40010c:	mov	eax, 0
0x400111:	call	0x500008
<Block for 0x400116, 52 bytes>
0x400116:	nop	
0x400117:	endbr64	
0x40011b:	mov	qword ptr [rbp - 0x30], 0
0x400123:	mov	qword ptr [rbp - 0x28], 0
0x40012b:	mov	qword ptr [rbp - 0x20], 0
0x400133:	mov	qword ptr [rbp - 0x18], 0
0x40013b:	mov	qword ptr [rbp - 0x10], 0
0x400143:	mov	eax, dword ptr [rbp - 0x38]
0x400146:	test	eax, eax
0x400148:	js	0x400184
<Block for 0x400184, 12 bytes>
0x400184:	lea	rdi, [rip + 0x11d]
0x40018b:	call	0x500018
<Block for 0x40014a, 8 bytes>
0x40014a:	mov	eax, dword ptr [rbp - 0x38]
0x40014d:	cmp	eax, 9
0x400150:	jg	0x400184
<Block for 0x400190, 16 bytes>
0x400190:	nop	
0x400191:	mov	rax, qword ptr [rbp - 8]
0x400195:	xor	rax, qword ptr fs:[0x28]
0x40019e:	je	0x4001a5
<Block for 0x400152, 22 bytes>
0x400152:	mov	eax, dword ptr [rbp - 0x38]
0x400155:	cdqe	
0x400157:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40015f:	mov	dword ptr [rbp - 0x34], 0
0x400166:	jmp	0x40017c
<Block for 0x4001a5, 2 bytes>
0x4001a5:	leave	
0x4001a6:	ret	
<Block for 0x4001a0, 5 bytes>
0x4001a0:	call	0x500020
<Block for 0x40017c, 6 bytes>
0x40017c:	cmp	dword ptr [rbp - 0x34], 9
0x400180:	jle	0x400168
<Block for 0x400168, 16 bytes>
0x400168:	mov	eax, dword ptr [rbp - 0x34]
0x40016b:	cdqe	
0x40016d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400171:	mov	edi, eax
0x400173:	call	0x500010
<Block for 0x400182, 2 bytes>
0x400182:	jmp	0x400190
<Block for 0x400178, 10 bytes>
0x400178:	add	dword ptr [rbp - 0x34], 1
0x40017c:	cmp	dword ptr [rbp - 0x34], 9
0x400180:	jle	0x400168
