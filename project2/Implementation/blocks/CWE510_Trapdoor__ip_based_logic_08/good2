<Block for 0x40032b, 37 bytes>
0x40032b:	endbr64	
0x40032f:	push	rbp
0x400330:	mov	rbp, rsp
0x400333:	sub	rsp, 0x30
0x400337:	mov	rax, qword ptr fs:[0x28]
0x400340:	mov	qword ptr [rbp - 8], rax
0x400344:	xor	eax, eax
0x400346:	mov	eax, 0
0x40034b:	call	0x400000
<Block for 0x400350, 8 bytes>
0x400350:	test	eax, eax
0x400352:	je	0x40045d
<Block for 0x40045d, 16 bytes>
0x40045d:	nop	
0x40045e:	mov	rax, qword ptr [rbp - 8]
0x400462:	xor	rax, qword ptr fs:[0x28]
0x40046b:	je	0x400472
<Block for 0x400358, 34 bytes>
0x400358:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40035f:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400366:	mov	edx, 6
0x40036b:	mov	esi, 1
0x400370:	mov	edi, 2
0x400375:	call	0x500000
<Block for 0x400472, 2 bytes>
0x400472:	leave	
0x400473:	ret	
<Block for 0x40046d, 5 bytes>
0x40046d:	call	0x500060
<Block for 0x40037a, 13 bytes>
0x40037a:	mov	dword ptr [rbp - 0x24], eax
0x40037d:	cmp	dword ptr [rbp - 0x24], -1
0x400381:	je	0x400433
<Block for 0x400433, 3 bytes>
0x400433:	nop	
0x400434:	jmp	0x40043d
<Block for 0x400387, 22 bytes>
0x400387:	lea	rax, [rbp - 0x20]
0x40038b:	mov	edx, 0x10
0x400390:	mov	esi, 0
0x400395:	mov	rdi, rax
0x400398:	call	0x500008
<Block for 0x40043d, 6 bytes>
0x40043d:	cmp	dword ptr [rbp - 0x24], -1
0x400441:	je	0x40044d
<Block for 0x40039d, 23 bytes>
0x40039d:	mov	word ptr [rbp - 0x20], 2
0x4003a3:	mov	dword ptr [rbp - 0x1c], 0
0x4003aa:	mov	edi, 0x4e20
0x4003af:	call	0x500010
<Block for 0x40044d, 6 bytes>
0x40044d:	cmp	dword ptr [rbp - 0x28], -1
0x400451:	je	0x40045d
<Block for 0x400443, 10 bytes>
0x400443:	mov	eax, dword ptr [rbp - 0x24]
0x400446:	mov	edi, eax
0x400448:	call	0x500058
<Block for 0x4003b4, 26 bytes>
0x4003b4:	mov	word ptr [rbp - 0x1e], ax
0x4003b8:	lea	rcx, [rbp - 0x20]
0x4003bc:	mov	eax, dword ptr [rbp - 0x24]
0x4003bf:	mov	edx, 0x10
0x4003c4:	mov	rsi, rcx
0x4003c7:	mov	edi, eax
0x4003c9:	call	0x500018
<Block for 0x400453, 10 bytes>
0x400453:	mov	eax, dword ptr [rbp - 0x28]
0x400456:	mov	edi, eax
0x400458:	call	0x500058
<Block for 0x4003ce, 5 bytes>
0x4003ce:	cmp	eax, -1
0x4003d1:	je	0x400436
<Block for 0x400436, 3 bytes>
0x400436:	nop	
0x400437:	jmp	0x40043d
<Block for 0x4003d3, 15 bytes>
0x4003d3:	mov	eax, dword ptr [rbp - 0x24]
0x4003d6:	mov	esi, 5
0x4003db:	mov	edi, eax
0x4003dd:	call	0x500020
<Block for 0x4003e2, 5 bytes>
0x4003e2:	cmp	eax, -1
0x4003e5:	je	0x400439
<Block for 0x400439, 3 bytes>
0x400439:	nop	
0x40043a:	jmp	0x40043d
<Block for 0x4003e7, 20 bytes>
0x4003e7:	mov	eax, dword ptr [rbp - 0x24]
0x4003ea:	mov	edx, 0
0x4003ef:	mov	esi, 0
0x4003f4:	mov	edi, eax
0x4003f6:	call	0x500028
<Block for 0x4003fb, 9 bytes>
0x4003fb:	mov	dword ptr [rbp - 0x28], eax
0x4003fe:	cmp	dword ptr [rbp - 0x28], -1
0x400402:	je	0x40043c
<Block for 0x400404, 27 bytes>
0x400404:	mov	eax, dword ptr [rbp - 0x28]
0x400407:	mov	ecx, 0
0x40040c:	mov	edx, 8
0x400411:	lea	rsi, [rip + 0x9a]
0x400418:	mov	edi, eax
0x40041a:	call	0x500048
<Block for 0x40043c, 1 bytes>
0x40043c:	nop	
<Block for 0x40041f, 6 bytes>
0x40041f:	cmp	rax, -1
0x400423:	jne	0x40043d
<Block for 0x400425, 12 bytes>
0x400425:	lea	rdi, [rip + 0x8f]
0x40042c:	call	0x500050
<Block for 0x400431, 2 bytes>
0x400431:	jmp	0x40043d
