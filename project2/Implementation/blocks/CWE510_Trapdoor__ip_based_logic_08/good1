<Block for 0x4001d5, 37 bytes>
0x4001d5:	endbr64	
0x4001d9:	push	rbp
0x4001da:	mov	rbp, rsp
0x4001dd:	sub	rsp, 0x30
0x4001e1:	mov	rax, qword ptr fs:[0x28]
0x4001ea:	mov	qword ptr [rbp - 8], rax
0x4001ee:	xor	eax, eax
0x4001f0:	mov	eax, 0
0x4001f5:	call	0x40000f
<Block for 0x4001fa, 4 bytes>
0x4001fa:	test	eax, eax
0x4001fc:	je	0x40020f
<Block for 0x40020f, 34 bytes>
0x40020f:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400216:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40021d:	mov	edx, 6
0x400222:	mov	esi, 1
0x400227:	mov	edi, 2
0x40022c:	call	0x500000
<Block for 0x4001fe, 12 bytes>
0x4001fe:	lea	rdi, [rip + 0x2c3]
0x400205:	call	0x500050
<Block for 0x400231, 13 bytes>
0x400231:	mov	dword ptr [rbp - 0x24], eax
0x400234:	cmp	dword ptr [rbp - 0x24], -1
0x400238:	je	0x4002ea
<Block for 0x40020a, 5 bytes>
0x40020a:	jmp	0x400314
<Block for 0x4002ea, 3 bytes>
0x4002ea:	nop	
0x4002eb:	jmp	0x4002f4
<Block for 0x40023e, 22 bytes>
0x40023e:	lea	rax, [rbp - 0x20]
0x400242:	mov	edx, 0x10
0x400247:	mov	esi, 0
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500008
<Block for 0x400314, 16 bytes>
0x400314:	nop	
0x400315:	mov	rax, qword ptr [rbp - 8]
0x400319:	xor	rax, qword ptr fs:[0x28]
0x400322:	je	0x400329
<Block for 0x4002f4, 6 bytes>
0x4002f4:	cmp	dword ptr [rbp - 0x24], -1
0x4002f8:	je	0x400304
<Block for 0x400254, 23 bytes>
0x400254:	mov	word ptr [rbp - 0x20], 2
0x40025a:	mov	dword ptr [rbp - 0x1c], 0
0x400261:	mov	edi, 0x4e20
0x400266:	call	0x500010
<Block for 0x400329, 2 bytes>
0x400329:	leave	
0x40032a:	ret	
<Block for 0x400324, 5 bytes>
0x400324:	call	0x500060
<Block for 0x400304, 6 bytes>
0x400304:	cmp	dword ptr [rbp - 0x28], -1
0x400308:	je	0x400314
<Block for 0x4002fa, 10 bytes>
0x4002fa:	mov	eax, dword ptr [rbp - 0x24]
0x4002fd:	mov	edi, eax
0x4002ff:	call	0x500058
<Block for 0x40026b, 26 bytes>
0x40026b:	mov	word ptr [rbp - 0x1e], ax
0x40026f:	lea	rcx, [rbp - 0x20]
0x400273:	mov	eax, dword ptr [rbp - 0x24]
0x400276:	mov	edx, 0x10
0x40027b:	mov	rsi, rcx
0x40027e:	mov	edi, eax
0x400280:	call	0x500018
<Block for 0x40030a, 10 bytes>
0x40030a:	mov	eax, dword ptr [rbp - 0x28]
0x40030d:	mov	edi, eax
0x40030f:	call	0x500058
<Block for 0x400285, 5 bytes>
0x400285:	cmp	eax, -1
0x400288:	je	0x4002ed
<Block for 0x4002ed, 3 bytes>
0x4002ed:	nop	
0x4002ee:	jmp	0x4002f4
<Block for 0x40028a, 15 bytes>
0x40028a:	mov	eax, dword ptr [rbp - 0x24]
0x40028d:	mov	esi, 5
0x400292:	mov	edi, eax
0x400294:	call	0x500020
<Block for 0x400299, 5 bytes>
0x400299:	cmp	eax, -1
0x40029c:	je	0x4002f0
<Block for 0x4002f0, 3 bytes>
0x4002f0:	nop	
0x4002f1:	jmp	0x4002f4
<Block for 0x40029e, 20 bytes>
0x40029e:	mov	eax, dword ptr [rbp - 0x24]
0x4002a1:	mov	edx, 0
0x4002a6:	mov	esi, 0
0x4002ab:	mov	edi, eax
0x4002ad:	call	0x500028
<Block for 0x4002b2, 9 bytes>
0x4002b2:	mov	dword ptr [rbp - 0x28], eax
0x4002b5:	cmp	dword ptr [rbp - 0x28], -1
0x4002b9:	je	0x4002f3
<Block for 0x4002bb, 27 bytes>
0x4002bb:	mov	eax, dword ptr [rbp - 0x28]
0x4002be:	mov	ecx, 0
0x4002c3:	mov	edx, 8
0x4002c8:	lea	rsi, [rip + 0x1e3]
0x4002cf:	mov	edi, eax
0x4002d1:	call	0x500048
<Block for 0x4002f3, 1 bytes>
0x4002f3:	nop	
<Block for 0x4002d6, 6 bytes>
0x4002d6:	cmp	rax, -1
0x4002da:	jne	0x4002f4
<Block for 0x4002dc, 12 bytes>
0x4002dc:	lea	rdi, [rip + 0x1d8]
0x4002e3:	call	0x500050
<Block for 0x4002e8, 2 bytes>
0x4002e8:	jmp	0x4002f4
