<Block for 0x400026, 81 bytes>
0x400026:	endbr64	
0x40002a:	push	rbp
0x40002b:	mov	rbp, rsp
0x40002e:	sub	rsp, 0x40
0x400032:	mov	qword ptr [rbp - 0x38], rdi
0x400036:	mov	rax, qword ptr fs:[0x28]
0x40003f:	mov	qword ptr [rbp - 8], rax
0x400043:	xor	eax, eax
0x400045:	mov	qword ptr [rbp - 0x30], 0
0x40004d:	mov	qword ptr [rbp - 0x28], 0
0x400055:	mov	qword ptr [rbp - 0x20], 0
0x40005d:	mov	qword ptr [rbp - 0x18], 0
0x400065:	mov	qword ptr [rbp - 0x10], 0
0x40006d:	mov	rax, qword ptr [rbp - 0x38]
0x400071:	mov	eax, dword ptr [rax]
0x400073:	test	eax, eax
0x400075:	js	0x400097
<Block for 0x400097, 12 bytes>
0x400097:	lea	rdi, [rip + 0x22]
0x40009e:	call	0x500008
<Block for 0x400077, 11 bytes>
0x400077:	mov	rax, qword ptr [rbp - 0x38]
0x40007b:	mov	eax, dword ptr [rax]
0x40007d:	cmp	eax, 9
0x400080:	jg	0x400097
<Block for 0x4000a3, 16 bytes>
0x4000a3:	nop	
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	xor	rax, qword ptr fs:[0x28]
0x4000b1:	je	0x4000b8
<Block for 0x400082, 19 bytes>
0x400082:	mov	rax, qword ptr [rbp - 0x38]
0x400086:	mov	eax, dword ptr [rax]
0x400088:	cdqe	
0x40008a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40008e:	mov	edi, eax
0x400090:	call	0x500000
<Block for 0x4000b8, 2 bytes>
0x4000b8:	leave	
0x4000b9:	ret	
<Block for 0x4000b3, 5 bytes>
0x4000b3:	call	0x500010
<Block for 0x400095, 2 bytes>
0x400095:	jmp	0x4000a3
