<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x48]
0x400023:	mov	esi, 2
0x400028:	mov	rdi, rax
0x40002b:	call	0x40027c
<Block for 0x400030, 51 bytes>
0x400030:	mov	eax, dword ptr [rax]
0x400032:	mov	dword ptr [rbp - 0x34], eax
0x400035:	mov	qword ptr [rbp - 0x30], 0
0x40003d:	mov	qword ptr [rbp - 0x28], 0
0x400045:	mov	qword ptr [rbp - 0x20], 0
0x40004d:	mov	qword ptr [rbp - 0x18], 0
0x400055:	mov	qword ptr [rbp - 0x10], 0
0x40005d:	cmp	dword ptr [rbp - 0x34], 9
0x400061:	jg	0x400093
<Block for 0x400063, 26 bytes>
0x400063:	mov	eax, dword ptr [rbp - 0x34]
0x400066:	cdqe	
0x400068:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400070:	mov	dword ptr [rbp - 0x38], 0
0x400077:	cmp	dword ptr [rbp - 0x38], 9
0x40007b:	jg	0x40009f
<Block for 0x400093, 12 bytes>
0x400093:	lea	rdi, [rip + 0x19e]
0x40009a:	call	0x500008
<Block for 0x40007d, 16 bytes>
0x40007d:	mov	eax, dword ptr [rbp - 0x38]
0x400080:	cdqe	
0x400082:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400086:	mov	edi, eax
0x400088:	call	0x500000
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000b4
<Block for 0x40008d, 6 bytes>
0x40008d:	add	dword ptr [rbp - 0x38], 1
0x400091:	jmp	0x400077
<Block for 0x4000b4, 2 bytes>
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500010
<Block for 0x400077, 6 bytes>
0x400077:	cmp	dword ptr [rbp - 0x38], 9
0x40007b:	jg	0x40009f
