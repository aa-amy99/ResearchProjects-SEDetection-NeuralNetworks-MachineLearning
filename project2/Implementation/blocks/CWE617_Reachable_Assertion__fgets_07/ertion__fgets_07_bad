<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0x158]
0x400028:	cmp	eax, 5
0x40002b:	jne	0x40007c
<Block for 0x40002d, 45 bytes>
0x40002d:	mov	qword ptr [rbp - 0x16], 0
0x400035:	mov	dword ptr [rbp - 0xe], 0
0x40003c:	mov	word ptr [rbp - 0xa], 0
0x400042:	mov	rdx, qword ptr [rip + 0xfffb7]
0x400049:	lea	rax, [rbp - 0x16]
0x40004d:	mov	esi, 0xe
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40007c, 6 bytes>
0x40007c:	cmp	dword ptr [rbp - 0x1c], 5
0x400080:	jg	0x4000a1
<Block for 0x40005a, 5 bytes>
0x40005a:	test	rax, rax
0x40005d:	je	0x400070
<Block for 0x400082, 31 bytes>
0x400082:	lea	rcx, [rip + 0x177]
0x400089:	mov	edx, 0x37
0x40008e:	lea	rsi, [rip + 0x11b]
0x400095:	lea	rdi, [rip + 0x13b]
0x40009c:	call	0x500020
<Block for 0x4000a1, 16 bytes>
0x4000a1:	nop	
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	xor	rax, qword ptr fs:[0x28]
0x4000af:	je	0x4000b6
<Block for 0x400070, 12 bytes>
0x400070:	lea	rdi, [rip + 0x129]
0x400077:	call	0x500018
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rax, [rbp - 0x16]
0x400063:	mov	rdi, rax
0x400066:	call	0x500010
<Block for 0x4000b6, 2 bytes>
0x4000b6:	leave	
0x4000b7:	ret	
<Block for 0x4000b1, 5 bytes>
0x4000b1:	call	0x500028
<Block for 0x40006b, 5 bytes>
0x40006b:	mov	dword ptr [rbp - 0x1c], eax
0x40006e:	jmp	0x40007c
