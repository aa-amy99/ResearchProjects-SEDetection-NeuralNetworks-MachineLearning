<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400014:	call	0x500000
<Block for 0x400019, 9 bytes>
0x400019:	test	eax, eax
0x40001b:	setne	al
0x40001e:	test	al, al
0x400020:	je	0x40006b
<Block for 0x40006b, 25 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0x2c]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	qword ptr [rbp - 0x20], rax
0x400078:	mov	rax, qword ptr [rbp - 0x20]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500010
<Block for 0x400022, 5 bytes>
0x400022:	call	0x500008
<Block for 0x400084, 23 bytes>
0x400084:	mov	qword ptr [rbp - 0x18], rax
0x400088:	mov	qword ptr [rbp - 0x28], 0
0x400090:	mov	eax, dword ptr [rbp - 0x2c]
0x400093:	cdqe	
0x400095:	cmp	qword ptr [rbp - 0x28], rax
0x400099:	jae	0x4000bb
<Block for 0x400027, 7 bytes>
0x400027:	and	eax, 1
0x40002a:	test	eax, eax
0x40002c:	je	0x40004b
<Block for 0x40009b, 32 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x28]
0x40009f:	lea	rdx, [rax*4]
0x4000a7:	mov	rax, qword ptr [rbp - 0x18]
0x4000ab:	add	rax, rdx
0x4000ae:	mov	dword ptr [rax], 0
0x4000b4:	add	qword ptr [rbp - 0x28], 1
0x4000b9:	jmp	0x400090
<Block for 0x4000bb, 13 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x18]
0x4000bf:	mov	eax, dword ptr [rax]
0x4000c1:	mov	edi, eax
0x4000c3:	call	0x500018
<Block for 0x40004b, 5 bytes>
0x40004b:	call	0x500008
<Block for 0x40002e, 5 bytes>
0x40002e:	call	0x500008
<Block for 0x400090, 11 bytes>
0x400090:	mov	eax, dword ptr [rbp - 0x2c]
0x400093:	cdqe	
0x400095:	cmp	qword ptr [rbp - 0x28], rax
0x400099:	jae	0x4000bb
<Block for 0x4000c8, 7 bytes>
0x4000c8:	cmp	qword ptr [rbp - 0x18], 0
0x4000cd:	je	0x4000db
<Block for 0x400050, 10 bytes>
0x400050:	shl	eax, 0x1e
0x400053:	mov	ebx, eax
0x400055:	call	0x500008
<Block for 0x400033, 10 bytes>
0x400033:	shl	eax, 0x1e
0x400036:	mov	ebx, eax
0x400038:	call	0x500008
<Block for 0x4000db, 8 bytes>
0x4000db:	nop	
0x4000dc:	add	rsp, 0x28
0x4000e0:	pop	rbx
0x4000e1:	pop	rbp
0x4000e2:	ret	
<Block for 0x4000cf, 12 bytes>
0x4000cf:	mov	rax, qword ptr [rbp - 0x18]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500020
<Block for 0x40005a, 10 bytes>
0x40005a:	shl	eax, 0xf
0x40005d:	xor	ebx, eax
0x40005f:	call	0x500008
<Block for 0x40003d, 10 bytes>
0x40003d:	shl	eax, 0xf
0x400040:	xor	ebx, eax
0x400042:	call	0x500008
<Block for 0x400064, 32 bytes>
0x400064:	xor	eax, ebx
0x400066:	not	eax
0x400068:	mov	dword ptr [rbp - 0x2c], eax
0x40006b:	mov	eax, dword ptr [rbp - 0x2c]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	qword ptr [rbp - 0x20], rax
0x400078:	mov	rax, qword ptr [rbp - 0x20]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500010
<Block for 0x400047, 4 bytes>
0x400047:	xor	eax, ebx
0x400049:	jmp	0x400068
<Block for 0x400068, 28 bytes>
0x400068:	mov	dword ptr [rbp - 0x2c], eax
0x40006b:	mov	eax, dword ptr [rbp - 0x2c]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	qword ptr [rbp - 0x20], rax
0x400078:	mov	rax, qword ptr [rbp - 0x20]
0x40007c:	mov	rdi, rax
0x40007f:	call	0x500010
