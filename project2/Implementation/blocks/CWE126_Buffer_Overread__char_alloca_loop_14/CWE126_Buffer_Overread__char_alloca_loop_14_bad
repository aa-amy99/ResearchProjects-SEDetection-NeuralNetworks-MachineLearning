<Block for 0x400000, 84 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0x10
0x400023:	sub	rax, 1
0x400027:	add	rax, 0x3a
0x40002b:	mov	ecx, 0x10
0x400030:	mov	edx, 0
0x400035:	div	rcx
0x400038:	imul	rax, rax, 0x10
0x40003c:	mov	rdx, rax
0x40003f:	and	rdx, 0xfffffffffffff000
0x400046:	mov	rcx, rsp
0x400049:	sub	rcx, rdx
0x40004c:	mov	rdx, rcx
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x400066, 26 bytes>
0x400066:	mov	rdx, rax
0x400069:	and	edx, 0xfff
0x40006f:	sub	rsp, rdx
0x400072:	mov	rdx, rax
0x400075:	and	edx, 0xfff
0x40007b:	test	rdx, rdx
0x40007e:	je	0x400090
<Block for 0x400054, 18 bytes>
0x400054:	sub	rsp, 0x1000
0x40005b:	or	qword ptr [rsp + 0xff8], 0
0x400064:	jmp	0x40004f
<Block for 0x400090, 76 bytes>
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x88], rax
0x4000a6:	mov	eax, 0x10
0x4000ab:	sub	rax, 1
0x4000af:	add	rax, 0x6c
0x4000b3:	mov	edi, 0x10
0x4000b8:	mov	edx, 0
0x4000bd:	div	rdi
0x4000c0:	imul	rax, rax, 0x10
0x4000c4:	mov	rdx, rax
0x4000c7:	and	rdx, 0xfffffffffffff000
0x4000ce:	mov	rsi, rsp
0x4000d1:	sub	rsi, rdx
0x4000d4:	mov	rdx, rsi
0x4000d7:	cmp	rsp, rdx
0x4000da:	je	0x4000ee
<Block for 0x400080, 92 bytes>
0x400080:	and	eax, 0xfff
0x400085:	sub	rax, 8
0x400089:	add	rax, rsp
0x40008c:	or	qword ptr [rax], 0
0x400090:	mov	rax, rsp
0x400093:	add	rax, 0xf
0x400097:	shr	rax, 4
0x40009b:	shl	rax, 4
0x40009f:	mov	qword ptr [rbp - 0x88], rax
0x4000a6:	mov	eax, 0x10
0x4000ab:	sub	rax, 1
0x4000af:	add	rax, 0x6c
0x4000b3:	mov	edi, 0x10
0x4000b8:	mov	edx, 0
0x4000bd:	div	rdi
0x4000c0:	imul	rax, rax, 0x10
0x4000c4:	mov	rdx, rax
0x4000c7:	and	rdx, 0xfffffffffffff000
0x4000ce:	mov	rsi, rsp
0x4000d1:	sub	rsi, rdx
0x4000d4:	mov	rdx, rsi
0x4000d7:	cmp	rsp, rdx
0x4000da:	je	0x4000ee
<Block for 0x40004f, 5 bytes>
0x40004f:	cmp	rsp, rdx
0x400052:	je	0x400066
<Block for 0x4000ee, 26 bytes>
0x4000ee:	mov	rdx, rax
0x4000f1:	and	edx, 0xfff
0x4000f7:	sub	rsp, rdx
0x4000fa:	mov	rdx, rax
0x4000fd:	and	edx, 0xfff
0x400103:	test	rdx, rdx
0x400106:	je	0x400118
<Block for 0x4000dc, 18 bytes>
0x4000dc:	sub	rsp, 0x1000
0x4000e3:	or	qword ptr [rsp + 0xff8], 0
0x4000ec:	jmp	0x4000d7
<Block for 0x400118, 44 bytes>
0x400118:	mov	rax, rsp
0x40011b:	add	rax, 0xf
0x40011f:	shr	rax, 4
0x400123:	shl	rax, 4
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	mov	rax, qword ptr [rbp - 0x88]
0x400132:	mov	edx, 0x31
0x400137:	mov	esi, 0x41
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500000
<Block for 0x400108, 60 bytes>
0x400108:	and	eax, 0xfff
0x40010d:	sub	rax, 8
0x400111:	add	rax, rsp
0x400114:	or	qword ptr [rax], 0
0x400118:	mov	rax, rsp
0x40011b:	add	rax, 0xf
0x40011f:	shr	rax, 4
0x400123:	shl	rax, 4
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	mov	rax, qword ptr [rbp - 0x88]
0x400132:	mov	edx, 0x31
0x400137:	mov	esi, 0x41
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500000
<Block for 0x4000d7, 5 bytes>
0x4000d7:	cmp	rsp, rdx
0x4000da:	je	0x4000ee
<Block for 0x400144, 36 bytes>
0x400144:	mov	rax, qword ptr [rbp - 0x88]
0x40014b:	add	rax, 0x31
0x40014f:	mov	byte ptr [rax], 0
0x400152:	mov	rax, qword ptr [rbp - 0x80]
0x400156:	mov	edx, 0x63
0x40015b:	mov	esi, 0x41
0x400160:	mov	rdi, rax
0x400163:	call	0x500000
<Block for 0x400168, 22 bytes>
0x400168:	mov	rax, qword ptr [rbp - 0x80]
0x40016c:	add	rax, 0x63
0x400170:	mov	byte ptr [rax], 0
0x400173:	mov	eax, dword ptr [rip + 0xffe8f]
0x400179:	cmp	eax, 5
0x40017c:	jne	0x40018c
<Block for 0x40017e, 36 bytes>
0x40017e:	mov	rax, qword ptr [rbp - 0x88]
0x400185:	mov	qword ptr [rbp - 0x98], rax
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	edx, 0x63
0x400195:	mov	esi, 0x43
0x40019a:	mov	rdi, rax
0x40019d:	call	0x500000
<Block for 0x40018c, 22 bytes>
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	edx, 0x63
0x400195:	mov	esi, 0x43
0x40019a:	mov	rdi, rax
0x40019d:	call	0x500000
<Block for 0x4001a2, 16 bytes>
0x4001a2:	mov	byte ptr [rbp - 0xd], 0
0x4001a6:	lea	rax, [rbp - 0x70]
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x500010
<Block for 0x4001b2, 17 bytes>
0x4001b2:	mov	qword ptr [rbp - 0x78], rax
0x4001b6:	mov	qword ptr [rbp - 0x90], 0
0x4001c1:	jmp	0x4001ef
<Block for 0x4001ef, 13 bytes>
0x4001ef:	mov	rax, qword ptr [rbp - 0x90]
0x4001f6:	cmp	rax, qword ptr [rbp - 0x78]
0x4001fa:	jb	0x4001c3
<Block for 0x4001c3, 57 bytes>
0x4001c3:	mov	rdx, qword ptr [rbp - 0x98]
0x4001ca:	mov	rax, qword ptr [rbp - 0x90]
0x4001d1:	add	rax, rdx
0x4001d4:	movzx	eax, byte ptr [rax]
0x4001d7:	lea	rcx, [rbp - 0x70]
0x4001db:	mov	rdx, qword ptr [rbp - 0x90]
0x4001e2:	add	rdx, rcx
0x4001e5:	mov	byte ptr [rdx], al
0x4001e7:	add	qword ptr [rbp - 0x90], 1
0x4001ef:	mov	rax, qword ptr [rbp - 0x90]
0x4001f6:	cmp	rax, qword ptr [rbp - 0x78]
0x4001fa:	jb	0x4001c3
<Block for 0x4001fc, 16 bytes>
0x4001fc:	mov	byte ptr [rbp - 0xd], 0
0x400200:	lea	rax, [rbp - 0x70]
0x400204:	mov	rdi, rax
0x400207:	call	0x500018
<Block for 0x40020c, 16 bytes>
0x40020c:	nop	
0x40020d:	mov	rax, qword ptr [rbp - 8]
0x400211:	xor	rax, qword ptr fs:[0x28]
0x40021a:	je	0x400221
<Block for 0x400221, 2 bytes>
0x400221:	leave	
0x400222:	ret	
<Block for 0x40021c, 5 bytes>
0x40021c:	call	0x500020
