<Block for 0x4000af, 57 bytes>
0x4000af:	endbr64	
0x4000b3:	push	rbp
0x4000b4:	mov	rbp, rsp
0x4000b7:	add	rsp, -0x80
0x4000bb:	mov	rax, qword ptr fs:[0x28]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	xor	eax, eax
0x4000ca:	mov	qword ptr [rbp - 0x78], 0
0x4000d2:	mov	dword ptr [rip + 0x154], 0
0x4000dc:	mov	rax, qword ptr [rbp - 0x78]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500020
<Block for 0x4000e8, 26 bytes>
0x4000e8:	mov	qword ptr [rbp - 0x78], rax
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	mov	edx, 0x63
0x4000f5:	mov	esi, 0x43
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500008
<Block for 0x400102, 14 bytes>
0x400102:	mov	byte ptr [rbp - 0xd], 0
0x400106:	mov	qword ptr [rbp - 0x80], 0
0x40010e:	jmp	0x400130
<Block for 0x400130, 7 bytes>
0x400130:	cmp	qword ptr [rbp - 0x80], 0x63
0x400135:	jbe	0x400110
<Block for 0x400110, 39 bytes>
0x400110:	mov	rdx, qword ptr [rbp - 0x78]
0x400114:	mov	rax, qword ptr [rbp - 0x80]
0x400118:	add	rax, rdx
0x40011b:	movzx	eax, byte ptr [rax]
0x40011e:	lea	rcx, [rbp - 0x70]
0x400122:	mov	rdx, qword ptr [rbp - 0x80]
0x400126:	add	rdx, rcx
0x400129:	mov	byte ptr [rdx], al
0x40012b:	add	qword ptr [rbp - 0x80], 1
0x400130:	cmp	qword ptr [rbp - 0x80], 0x63
0x400135:	jbe	0x400110
<Block for 0x400137, 16 bytes>
0x400137:	mov	byte ptr [rbp - 0xd], 0
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500010
<Block for 0x400147, 16 bytes>
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 8]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x40015c
<Block for 0x40015c, 2 bytes>
0x40015c:	leave	
0x40015d:	ret	
<Block for 0x400157, 5 bytes>
0x400157:	call	0x500018
