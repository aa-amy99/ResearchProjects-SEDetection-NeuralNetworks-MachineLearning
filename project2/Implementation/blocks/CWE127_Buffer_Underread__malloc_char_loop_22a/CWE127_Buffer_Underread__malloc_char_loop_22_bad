<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	dword ptr [rip + 0x1ff], 1
0x40002d:	mov	rax, qword ptr [rbp - 0x78]
0x400031:	mov	rdi, rax
0x400034:	call	0x500000
<Block for 0x400039, 26 bytes>
0x400039:	mov	qword ptr [rbp - 0x78], rax
0x40003d:	lea	rax, [rbp - 0x70]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x43
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500008
<Block for 0x400053, 14 bytes>
0x400053:	mov	byte ptr [rbp - 0xd], 0
0x400057:	mov	qword ptr [rbp - 0x80], 0
0x40005f:	jmp	0x400081
<Block for 0x400081, 7 bytes>
0x400081:	cmp	qword ptr [rbp - 0x80], 0x63
0x400086:	jbe	0x400061
<Block for 0x400061, 39 bytes>
0x400061:	mov	rdx, qword ptr [rbp - 0x78]
0x400065:	mov	rax, qword ptr [rbp - 0x80]
0x400069:	add	rax, rdx
0x40006c:	movzx	eax, byte ptr [rax]
0x40006f:	lea	rcx, [rbp - 0x70]
0x400073:	mov	rdx, qword ptr [rbp - 0x80]
0x400077:	add	rdx, rcx
0x40007a:	mov	byte ptr [rdx], al
0x40007c:	add	qword ptr [rbp - 0x80], 1
0x400081:	cmp	qword ptr [rbp - 0x80], 0x63
0x400086:	jbe	0x400061
<Block for 0x400088, 16 bytes>
0x400088:	mov	byte ptr [rbp - 0xd], 0
0x40008c:	lea	rax, [rbp - 0x70]
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x400098, 16 bytes>
0x400098:	nop	
0x400099:	mov	rax, qword ptr [rbp - 8]
0x40009d:	xor	rax, qword ptr fs:[0x28]
0x4000a6:	je	0x4000ad
<Block for 0x4000ad, 2 bytes>
0x4000ad:	leave	
0x4000ae:	ret	
<Block for 0x4000a8, 5 bytes>
0x4000a8:	call	0x500018
