<Block for 0x400026, 82 bytes>
0x400026:	endbr64	
0x40002a:	push	rbp
0x40002b:	mov	rbp, rsp
0x40002e:	sub	rsp, 0x50
0x400032:	mov	qword ptr [rbp - 0x48], rdi
0x400036:	mov	rax, qword ptr fs:[0x28]
0x40003f:	mov	qword ptr [rbp - 8], rax
0x400043:	xor	eax, eax
0x400045:	mov	qword ptr [rbp - 0x30], 0
0x40004d:	mov	qword ptr [rbp - 0x28], 0
0x400055:	mov	qword ptr [rbp - 0x20], 0
0x40005d:	mov	qword ptr [rbp - 0x18], 0
0x400065:	mov	qword ptr [rbp - 0x10], 0
0x40006d:	mov	rax, qword ptr [rbp - 0x48]
0x400071:	mov	eax, dword ptr [rax]
0x400073:	cmp	eax, 9
0x400076:	jg	0x4000ab
<Block for 0x400078, 29 bytes>
0x400078:	mov	rax, qword ptr [rbp - 0x48]
0x40007c:	mov	eax, dword ptr [rax]
0x40007e:	cdqe	
0x400080:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400088:	mov	dword ptr [rbp - 0x34], 0
0x40008f:	cmp	dword ptr [rbp - 0x34], 9
0x400093:	jg	0x4000b7
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x1e]
0x4000b2:	call	0x500008
<Block for 0x400095, 16 bytes>
0x400095:	mov	eax, dword ptr [rbp - 0x34]
0x400098:	cdqe	
0x40009a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500000
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000a5, 6 bytes>
0x4000a5:	add	dword ptr [rbp - 0x34], 1
0x4000a9:	jmp	0x40008f
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500010
<Block for 0x40008f, 6 bytes>
0x40008f:	cmp	dword ptr [rbp - 0x34], 9
0x400093:	jg	0x4000b7
