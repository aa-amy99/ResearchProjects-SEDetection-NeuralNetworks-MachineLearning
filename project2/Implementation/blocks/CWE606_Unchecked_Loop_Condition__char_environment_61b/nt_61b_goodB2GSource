<Block for 0x400082, 28 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	qword ptr [rbp - 0x18], rdi
0x400092:	mov	rax, qword ptr [rbp - 0x18]
0x400096:	mov	rdi, rax
0x400099:	call	0x500000
<Block for 0x40009e, 16 bytes>
0x40009e:	mov	qword ptr [rbp - 0x10], rax
0x4000a2:	lea	rdi, [rip + 0x3c]
0x4000a9:	call	0x500008
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	cmp	qword ptr [rbp - 8], 0
0x4000b7:	je	0x4000df
<Block for 0x4000df, 6 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x18]
0x4000e3:	leave	
0x4000e4:	ret	
<Block for 0x4000b9, 38 bytes>
0x4000b9:	mov	eax, 0x63
0x4000be:	sub	rax, qword ptr [rbp - 0x10]
0x4000c2:	mov	rdx, rax
0x4000c5:	mov	rcx, qword ptr [rbp - 0x18]
0x4000c9:	mov	rax, qword ptr [rbp - 0x10]
0x4000cd:	add	rcx, rax
0x4000d0:	mov	rax, qword ptr [rbp - 8]
0x4000d4:	mov	rsi, rax
0x4000d7:	mov	rdi, rcx
0x4000da:	call	0x500010
