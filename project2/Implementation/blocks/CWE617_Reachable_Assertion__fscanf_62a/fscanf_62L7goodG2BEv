<Block for 0x40006c, 46 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x10
0x400078:	mov	rax, qword ptr fs:[0x28]
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	xor	eax, eax
0x400087:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x40008e:	lea	rax, [rbp - 0xc]
0x400092:	mov	rdi, rax
0x400095:	call	0x500018
<Block for 0x40009a, 8 bytes>
0x40009a:	mov	eax, dword ptr [rbp - 0xc]
0x40009d:	cmp	eax, 5
0x4000a0:	jg	0x4000c1
<Block for 0x4000a2, 31 bytes>
0x4000a2:	lea	rcx, [rip + 0xb7]
0x4000a9:	mov	edx, 0x37
0x4000ae:	lea	rsi, [rip + 0x6b]
0x4000b5:	lea	rdi, [rip + 0x8f]
0x4000bc:	call	0x500008
<Block for 0x4000c1, 16 bytes>
0x4000c1:	nop	
0x4000c2:	mov	rax, qword ptr [rbp - 8]
0x4000c6:	xor	rax, qword ptr fs:[0x28]
0x4000cf:	je	0x4000d6
<Block for 0x4000d6, 2 bytes>
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000d1, 5 bytes>
0x4000d1:	call	0x500010
