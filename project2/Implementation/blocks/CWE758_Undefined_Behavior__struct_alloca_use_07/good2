<Block for 0x4001f0, 42 bytes>
0x4001f0:	endbr64	
0x4001f4:	push	rbp
0x4001f5:	mov	rbp, rsp
0x4001f8:	sub	rsp, 0x20
0x4001fc:	mov	rax, qword ptr fs:[0x28]
0x400205:	mov	qword ptr [rbp - 8], rax
0x400209:	xor	eax, eax
0x40020b:	mov	eax, dword ptr [rip + 0xff]
0x400211:	cmp	eax, 5
0x400214:	jne	0x4002d7
<Block for 0x40021a, 54 bytes>
0x40021a:	mov	eax, 0x10
0x40021f:	sub	rax, 1
0x400223:	add	rax, 0x10
0x400227:	mov	esi, 0x10
0x40022c:	mov	edx, 0
0x400231:	div	rsi
0x400234:	imul	rax, rax, 0x10
0x400238:	mov	rdx, rax
0x40023b:	and	rdx, 0xfffffffffffff000
0x400242:	mov	rcx, rsp
0x400245:	sub	rcx, rdx
0x400248:	mov	rdx, rcx
0x40024b:	cmp	rsp, rdx
0x40024e:	je	0x400262
<Block for 0x4002d7, 16 bytes>
0x4002d7:	nop	
0x4002d8:	mov	rax, qword ptr [rbp - 8]
0x4002dc:	xor	rax, qword ptr fs:[0x28]
0x4002e5:	je	0x4002ec
<Block for 0x400262, 26 bytes>
0x400262:	mov	rdx, rax
0x400265:	and	edx, 0xfff
0x40026b:	sub	rsp, rdx
0x40026e:	mov	rdx, rax
0x400271:	and	edx, 0xfff
0x400277:	test	rdx, rdx
0x40027a:	je	0x40028c
<Block for 0x400250, 18 bytes>
0x400250:	sub	rsp, 0x1000
0x400257:	or	qword ptr [rsp + 0xff8], 0
0x400260:	jmp	0x40024b
<Block for 0x4002ec, 2 bytes>
0x4002ec:	leave	
0x4002ed:	ret	
<Block for 0x4002e7, 5 bytes>
0x4002e7:	call	0x500008
<Block for 0x40028c, 65 bytes>
0x40028c:	mov	rax, rsp
0x40028f:	add	rax, 0xf
0x400293:	shr	rax, 4
0x400297:	shl	rax, 4
0x40029b:	mov	qword ptr [rbp - 0x20], rax
0x40029f:	mov	dword ptr [rbp - 0x18], 1
0x4002a6:	mov	dword ptr [rbp - 0x14], 2
0x4002ad:	mov	rax, qword ptr [rbp - 0x20]
0x4002b1:	mov	rdx, qword ptr [rbp - 0x18]
0x4002b5:	mov	qword ptr [rax], rdx
0x4002b8:	mov	rax, qword ptr [rbp - 0x20]
0x4002bc:	mov	rax, qword ptr [rax]
0x4002bf:	mov	qword ptr [rbp - 0x10], rax
0x4002c3:	mov	eax, dword ptr [rbp - 0x10]
0x4002c6:	mov	edi, eax
0x4002c8:	call	0x500000
<Block for 0x40027c, 81 bytes>
0x40027c:	and	eax, 0xfff
0x400281:	sub	rax, 8
0x400285:	add	rax, rsp
0x400288:	or	qword ptr [rax], 0
0x40028c:	mov	rax, rsp
0x40028f:	add	rax, 0xf
0x400293:	shr	rax, 4
0x400297:	shl	rax, 4
0x40029b:	mov	qword ptr [rbp - 0x20], rax
0x40029f:	mov	dword ptr [rbp - 0x18], 1
0x4002a6:	mov	dword ptr [rbp - 0x14], 2
0x4002ad:	mov	rax, qword ptr [rbp - 0x20]
0x4002b1:	mov	rdx, qword ptr [rbp - 0x18]
0x4002b5:	mov	qword ptr [rax], rdx
0x4002b8:	mov	rax, qword ptr [rbp - 0x20]
0x4002bc:	mov	rax, qword ptr [rax]
0x4002bf:	mov	qword ptr [rbp - 0x10], rax
0x4002c3:	mov	eax, dword ptr [rbp - 0x10]
0x4002c6:	mov	edi, eax
0x4002c8:	call	0x500000
<Block for 0x40024b, 5 bytes>
0x40024b:	cmp	rsp, rdx
0x40024e:	je	0x400262
<Block for 0x4002cd, 10 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0xc]
0x4002d0:	mov	edi, eax
0x4002d2:	call	0x500000
