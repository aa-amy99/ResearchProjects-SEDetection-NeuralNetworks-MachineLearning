<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	edi, 0x64
0x40002e:	call	0x500000
<Block for 0x400033, 11 bytes>
0x400033:	mov	qword ptr [rbp - 0x80], rax
0x400037:	cmp	qword ptr [rbp - 0x80], 0
0x40003c:	jne	0x400048
<Block for 0x40003e, 10 bytes>
0x40003e:	mov	edi, 0xffffffff
0x400043:	call	0x500008
<Block for 0x400048, 22 bytes>
0x400048:	mov	rax, qword ptr [rbp - 0x80]
0x40004c:	mov	edx, 0x63
0x400051:	mov	esi, 0x41
0x400056:	mov	rdi, rax
0x400059:	call	0x500010
<Block for 0x40005e, 73 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x80]
0x400062:	add	rax, 0x63
0x400066:	mov	byte ptr [rax], 0
0x400069:	mov	rax, qword ptr [rbp - 0x80]
0x40006d:	sub	rax, 8
0x400071:	mov	qword ptr [rbp - 0x88], rax
0x400078:	mov	rax, qword ptr [rbp - 0x88]
0x40007f:	mov	qword ptr [rbp - 0x90], rax
0x400086:	mov	rax, qword ptr [rbp - 0x90]
0x40008d:	mov	qword ptr [rbp - 0x78], rax
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x4000a7, 23 bytes>
0x4000a7:	mov	byte ptr [rbp - 0xd], 0
0x4000ab:	lea	rdx, [rbp - 0x70]
0x4000af:	mov	rax, qword ptr [rbp - 0x78]
0x4000b3:	mov	rsi, rdx
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x500018
<Block for 0x4000be, 12 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 0x78]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500020
<Block for 0x4000ca, 16 bytes>
0x4000ca:	nop	
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	xor	rax, qword ptr fs:[0x28]
0x4000d8:	je	0x4000df
<Block for 0x4000df, 2 bytes>
0x4000df:	leave	
0x4000e0:	ret	
<Block for 0x4000da, 5 bytes>
0x4000da:	call	0x500028
