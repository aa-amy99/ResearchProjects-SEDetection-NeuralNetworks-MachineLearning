<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x400068
<Block for 0x40001f, 5 bytes>
0x40001f:	call	0x500008
<Block for 0x400068, 6 bytes>
0x400068:	cmp	dword ptr [rbp - 0x14], 5
0x40006c:	jg	0x40008d
<Block for 0x400024, 7 bytes>
0x400024:	and	eax, 1
0x400027:	test	eax, eax
0x400029:	je	0x400048
<Block for 0x40006e, 31 bytes>
0x40006e:	lea	rcx, [rip + 0x14b]
0x400075:	mov	edx, 0x24
0x40007a:	lea	rsi, [rip + 0xdf]
0x400081:	lea	rdi, [rip + 0xfe]
0x400088:	call	0x500010
<Block for 0x40008d, 8 bytes>
0x40008d:	nop	
0x40008e:	add	rsp, 0x18
0x400092:	pop	rbx
0x400093:	pop	rbp
0x400094:	ret	
<Block for 0x400048, 5 bytes>
0x400048:	call	0x500008
<Block for 0x40002b, 5 bytes>
0x40002b:	call	0x500008
<Block for 0x40004d, 10 bytes>
0x40004d:	shl	eax, 0x1e
0x400050:	mov	ebx, eax
0x400052:	call	0x500008
<Block for 0x400030, 10 bytes>
0x400030:	shl	eax, 0x1e
0x400033:	mov	ebx, eax
0x400035:	call	0x500008
<Block for 0x400057, 10 bytes>
0x400057:	shl	eax, 0xf
0x40005a:	xor	ebx, eax
0x40005c:	call	0x500008
<Block for 0x40003a, 10 bytes>
0x40003a:	shl	eax, 0xf
0x40003d:	xor	ebx, eax
0x40003f:	call	0x500008
<Block for 0x400061, 13 bytes>
0x400061:	xor	eax, ebx
0x400063:	not	eax
0x400065:	mov	dword ptr [rbp - 0x14], eax
0x400068:	cmp	dword ptr [rbp - 0x14], 5
0x40006c:	jg	0x40008d
<Block for 0x400044, 4 bytes>
0x400044:	xor	eax, ebx
0x400046:	jmp	0x400065
<Block for 0x400065, 9 bytes>
0x400065:	mov	dword ptr [rbp - 0x14], eax
0x400068:	cmp	dword ptr [rbp - 0x14], 5
0x40006c:	jg	0x40008d
