<Block for 0x4000b9, 37 bytes>
0x4000b9:	endbr64	
0x4000bd:	push	rbp
0x4000be:	mov	rbp, rsp
0x4000c1:	sub	rsp, 0x50
0x4000c5:	mov	rax, qword ptr fs:[0x28]
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	xor	eax, eax
0x4000d4:	mov	edi, 0x64
0x4000d9:	call	0x500000
<Block for 0x4000de, 11 bytes>
0x4000de:	mov	qword ptr [rbp - 0x48], rax
0x4000e2:	cmp	qword ptr [rbp - 0x48], 0
0x4000e7:	jne	0x4000f3
<Block for 0x4000e9, 10 bytes>
0x4000e9:	mov	edi, 0xffffffff
0x4000ee:	call	0x500008
<Block for 0x4000f3, 19 bytes>
0x4000f3:	mov	rax, qword ptr [rbp - 0x48]
0x4000f7:	mov	byte ptr [rax], 0
0x4000fa:	mov	rax, qword ptr [rbp - 0x48]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500010
<Block for 0x400106, 16 bytes>
0x400106:	mov	qword ptr [rbp - 0x40], rax
0x40010a:	lea	rdi, [rip + 0x76]
0x400111:	call	0x500018
<Block for 0x400116, 11 bytes>
0x400116:	mov	qword ptr [rbp - 0x38], rax
0x40011a:	cmp	qword ptr [rbp - 0x38], 0
0x40011f:	je	0x400147
<Block for 0x400147, 20 bytes>
0x400147:	mov	rax, qword ptr [rbp - 0x48]
0x40014b:	mov	qword ptr [rbp - 0x20], rax
0x40014f:	lea	rax, [rbp - 0x30]
0x400153:	mov	rdi, rax
0x400156:	call	0x500038
<Block for 0x400121, 38 bytes>
0x400121:	mov	eax, 0x63
0x400126:	sub	rax, qword ptr [rbp - 0x40]
0x40012a:	mov	rdx, rax
0x40012d:	mov	rcx, qword ptr [rbp - 0x48]
0x400131:	mov	rax, qword ptr [rbp - 0x40]
0x400135:	add	rcx, rax
0x400138:	mov	rax, qword ptr [rbp - 0x38]
0x40013c:	mov	rsi, rax
0x40013f:	mov	rdi, rcx
0x400142:	call	0x500020
<Block for 0x40015b, 16 bytes>
0x40015b:	nop	
0x40015c:	mov	rax, qword ptr [rbp - 8]
0x400160:	xor	rax, qword ptr fs:[0x28]
0x400169:	je	0x400170
<Block for 0x400170, 2 bytes>
0x400170:	leave	
0x400171:	ret	
<Block for 0x40016b, 5 bytes>
0x40016b:	call	0x500030
