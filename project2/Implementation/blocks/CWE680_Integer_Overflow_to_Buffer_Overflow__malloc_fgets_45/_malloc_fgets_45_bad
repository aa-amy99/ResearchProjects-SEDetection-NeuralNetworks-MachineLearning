<Block for 0x40008a, 79 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	sub	rsp, 0x20
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000ac:	mov	qword ptr [rbp - 0x16], 0
0x4000b4:	mov	dword ptr [rbp - 0xe], 0
0x4000bb:	mov	word ptr [rbp - 0xa], 0
0x4000c1:	mov	rdx, qword ptr [rip + 0xfff58]
0x4000c8:	lea	rax, [rbp - 0x16]
0x4000cc:	mov	esi, 0xe
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500028
<Block for 0x4000d9, 5 bytes>
0x4000d9:	test	rax, rax
0x4000dc:	je	0x4000ef
<Block for 0x4000ef, 12 bytes>
0x4000ef:	lea	rdi, [rip + 0x106]
0x4000f6:	call	0x500038
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rax, [rbp - 0x16]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500030
<Block for 0x4000fb, 19 bytes>
0x4000fb:	mov	eax, dword ptr [rbp - 0x1c]
0x4000fe:	mov	dword ptr [rip + 0xf0], eax
0x400104:	mov	eax, 0
0x400109:	call	0x400000
<Block for 0x4000ea, 5 bytes>
0x4000ea:	mov	dword ptr [rbp - 0x1c], eax
0x4000ed:	jmp	0x4000fb
<Block for 0x40010e, 16 bytes>
0x40010e:	nop	
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	xor	rax, qword ptr fs:[0x28]
0x40011c:	je	0x400123
<Block for 0x400123, 2 bytes>
0x400123:	leave	
0x400124:	ret	
<Block for 0x40011e, 5 bytes>
0x40011e:	call	0x500040
