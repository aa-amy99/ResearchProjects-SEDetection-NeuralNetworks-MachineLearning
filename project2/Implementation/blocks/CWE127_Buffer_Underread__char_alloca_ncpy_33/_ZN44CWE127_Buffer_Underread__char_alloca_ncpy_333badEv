<Block for 0x400000, 98 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x90]
0x400025:	mov	qword ptr [rbp - 0x88], rax
0x40002c:	mov	eax, 0x10
0x400031:	sub	rax, 1
0x400035:	add	rax, 0x6c
0x400039:	mov	esi, 0x10
0x40003e:	mov	edx, 0
0x400043:	div	rsi
0x400046:	imul	rax, rax, 0x10
0x40004a:	mov	rdx, rax
0x40004d:	and	rdx, 0xfffffffffffff000
0x400054:	mov	rcx, rsp
0x400057:	sub	rcx, rdx
0x40005a:	mov	rdx, rcx
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x400074, 26 bytes>
0x400074:	mov	rdx, rax
0x400077:	and	edx, 0xfff
0x40007d:	sub	rsp, rdx
0x400080:	mov	rdx, rax
0x400083:	and	edx, 0xfff
0x400089:	test	rdx, rdx
0x40008c:	je	0x40009e
<Block for 0x400062, 18 bytes>
0x400062:	sub	rsp, 0x1000
0x400069:	or	qword ptr [rsp + 0xff8], 0
0x400072:	jmp	0x40005d
<Block for 0x40009e, 41 bytes>
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0x80], rax
0x4000b1:	mov	rax, qword ptr [rbp - 0x80]
0x4000b5:	mov	edx, 0x63
0x4000ba:	mov	esi, 0x41
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500000
<Block for 0x40008e, 57 bytes>
0x40008e:	and	eax, 0xfff
0x400093:	sub	rax, 8
0x400097:	add	rax, rsp
0x40009a:	or	qword ptr [rax], 0
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0x80], rax
0x4000b1:	mov	rax, qword ptr [rbp - 0x80]
0x4000b5:	mov	edx, 0x63
0x4000ba:	mov	esi, 0x41
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500000
<Block for 0x40005d, 5 bytes>
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x4000c7, 62 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x80]
0x4000cb:	add	rax, 0x63
0x4000cf:	mov	byte ptr [rax], 0
0x4000d2:	mov	rax, qword ptr [rbp - 0x80]
0x4000d6:	sub	rax, 8
0x4000da:	mov	qword ptr [rbp - 0x90], rax
0x4000e1:	mov	rax, qword ptr [rbp - 0x88]
0x4000e8:	mov	rax, qword ptr [rax]
0x4000eb:	mov	qword ptr [rbp - 0x78], rax
0x4000ef:	lea	rax, [rbp - 0x70]
0x4000f3:	mov	edx, 0x63
0x4000f8:	mov	esi, 0x43
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500000
<Block for 0x400105, 16 bytes>
0x400105:	mov	byte ptr [rbp - 0xd], 0
0x400109:	lea	rax, [rbp - 0x70]
0x40010d:	mov	rdi, rax
0x400110:	call	0x500008
<Block for 0x400115, 22 bytes>
0x400115:	mov	rdx, rax
0x400118:	mov	rcx, qword ptr [rbp - 0x78]
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	rsi, rcx
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x40012b, 16 bytes>
0x40012b:	mov	byte ptr [rbp - 0xd], 0
0x40012f:	lea	rax, [rbp - 0x70]
0x400133:	mov	rdi, rax
0x400136:	call	0x500018
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500020
