<Block for 0x400152, 98 bytes>
0x400152:	endbr64	
0x400156:	push	rbp
0x400157:	mov	rbp, rsp
0x40015a:	sub	rsp, 0x90
0x400161:	mov	rax, qword ptr fs:[0x28]
0x40016a:	mov	qword ptr [rbp - 8], rax
0x40016e:	xor	eax, eax
0x400170:	lea	rax, [rbp - 0x90]
0x400177:	mov	qword ptr [rbp - 0x88], rax
0x40017e:	mov	eax, 0x10
0x400183:	sub	rax, 1
0x400187:	add	rax, 0x6c
0x40018b:	mov	esi, 0x10
0x400190:	mov	edx, 0
0x400195:	div	rsi
0x400198:	imul	rax, rax, 0x10
0x40019c:	mov	rdx, rax
0x40019f:	and	rdx, 0xfffffffffffff000
0x4001a6:	mov	rcx, rsp
0x4001a9:	sub	rcx, rdx
0x4001ac:	mov	rdx, rcx
0x4001af:	cmp	rsp, rdx
0x4001b2:	je	0x4001c6
<Block for 0x4001c6, 26 bytes>
0x4001c6:	mov	rdx, rax
0x4001c9:	and	edx, 0xfff
0x4001cf:	sub	rsp, rdx
0x4001d2:	mov	rdx, rax
0x4001d5:	and	edx, 0xfff
0x4001db:	test	rdx, rdx
0x4001de:	je	0x4001f0
<Block for 0x4001b4, 18 bytes>
0x4001b4:	sub	rsp, 0x1000
0x4001bb:	or	qword ptr [rsp + 0xff8], 0
0x4001c4:	jmp	0x4001af
<Block for 0x4001f0, 41 bytes>
0x4001f0:	mov	rax, rsp
0x4001f3:	add	rax, 0xf
0x4001f7:	shr	rax, 4
0x4001fb:	shl	rax, 4
0x4001ff:	mov	qword ptr [rbp - 0x80], rax
0x400203:	mov	rax, qword ptr [rbp - 0x80]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x4001e0, 57 bytes>
0x4001e0:	and	eax, 0xfff
0x4001e5:	sub	rax, 8
0x4001e9:	add	rax, rsp
0x4001ec:	or	qword ptr [rax], 0
0x4001f0:	mov	rax, rsp
0x4001f3:	add	rax, 0xf
0x4001f7:	shr	rax, 4
0x4001fb:	shl	rax, 4
0x4001ff:	mov	qword ptr [rbp - 0x80], rax
0x400203:	mov	rax, qword ptr [rbp - 0x80]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x4001af, 5 bytes>
0x4001af:	cmp	rsp, rdx
0x4001b2:	je	0x4001c6
<Block for 0x400219, 58 bytes>
0x400219:	mov	rax, qword ptr [rbp - 0x80]
0x40021d:	add	rax, 0x63
0x400221:	mov	byte ptr [rax], 0
0x400224:	mov	rax, qword ptr [rbp - 0x80]
0x400228:	mov	qword ptr [rbp - 0x90], rax
0x40022f:	mov	rax, qword ptr [rbp - 0x88]
0x400236:	mov	rax, qword ptr [rax]
0x400239:	mov	qword ptr [rbp - 0x78], rax
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	edx, 0x63
0x400246:	mov	esi, 0x43
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500000
<Block for 0x400253, 16 bytes>
0x400253:	mov	byte ptr [rbp - 0xd], 0
0x400257:	lea	rax, [rbp - 0x70]
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500008
<Block for 0x400263, 22 bytes>
0x400263:	mov	rdx, rax
0x400266:	mov	rcx, qword ptr [rbp - 0x78]
0x40026a:	lea	rax, [rbp - 0x70]
0x40026e:	mov	rsi, rcx
0x400271:	mov	rdi, rax
0x400274:	call	0x500010
<Block for 0x400279, 16 bytes>
0x400279:	mov	byte ptr [rbp - 0xd], 0
0x40027d:	lea	rax, [rbp - 0x70]
0x400281:	mov	rdi, rax
0x400284:	call	0x500018
<Block for 0x400289, 16 bytes>
0x400289:	nop	
0x40028a:	mov	rax, qword ptr [rbp - 8]
0x40028e:	xor	rax, qword ptr fs:[0x28]
0x400297:	je	0x40029e
<Block for 0x40029e, 2 bytes>
0x40029e:	leave	
0x40029f:	ret	
<Block for 0x400299, 5 bytes>
0x400299:	call	0x500020
