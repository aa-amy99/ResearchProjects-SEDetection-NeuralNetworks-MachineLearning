<Block for 0x400161, 66 bytes>
0x400161:	endbr64	
0x400165:	push	rbp
0x400166:	mov	rbp, rsp
0x400169:	sub	rsp, 0x50
0x40016d:	mov	rax, qword ptr fs:[0x28]
0x400176:	mov	qword ptr [rbp - 8], rax
0x40017a:	xor	eax, eax
0x40017c:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400183:	nop	
0x400184:	endbr64	
0x400188:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40018f:	mov	edx, 6
0x400194:	mov	esi, 1
0x400199:	mov	edi, 2
0x40019e:	call	0x500000
<Block for 0x4001a3, 13 bytes>
0x4001a3:	mov	dword ptr [rbp - 0x48], eax
0x4001a6:	cmp	dword ptr [rbp - 0x48], -1
0x4001aa:	je	0x400246
<Block for 0x400246, 3 bytes>
0x400246:	nop	
0x400247:	jmp	0x40024a
<Block for 0x4001b0, 22 bytes>
0x4001b0:	lea	rax, [rbp - 0x40]
0x4001b4:	mov	edx, 0x10
0x4001b9:	mov	esi, 0
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x500008
<Block for 0x40024a, 6 bytes>
0x40024a:	cmp	dword ptr [rbp - 0x48], -1
0x40024e:	je	0x40025a
<Block for 0x4001c6, 18 bytes>
0x4001c6:	mov	word ptr [rbp - 0x40], 2
0x4001cc:	lea	rdi, [rip + 0x1ad]
0x4001d3:	call	0x500010
<Block for 0x40025a, 51 bytes>
0x40025a:	nop	
0x40025b:	endbr64	
0x40025f:	mov	qword ptr [rbp - 0x40], 0
0x400267:	mov	qword ptr [rbp - 0x38], 0
0x40026f:	mov	qword ptr [rbp - 0x30], 0
0x400277:	mov	qword ptr [rbp - 0x28], 0
0x40027f:	mov	qword ptr [rbp - 0x20], 0
0x400287:	cmp	dword ptr [rbp - 0x4c], 0
0x40028b:	js	0x4002a5
<Block for 0x400250, 10 bytes>
0x400250:	mov	eax, dword ptr [rbp - 0x48]
0x400253:	mov	edi, eax
0x400255:	call	0x500038
<Block for 0x4001d8, 13 bytes>
0x4001d8:	mov	dword ptr [rbp - 0x3c], eax
0x4001db:	mov	edi, 0x6987
0x4001e0:	call	0x500018
<Block for 0x4002a5, 12 bytes>
0x4002a5:	lea	rdi, [rip + 0x104]
0x4002ac:	call	0x500048
<Block for 0x40028d, 6 bytes>
0x40028d:	cmp	dword ptr [rbp - 0x4c], 9
0x400291:	jg	0x4002a5
<Block for 0x4001e5, 26 bytes>
0x4001e5:	mov	word ptr [rbp - 0x3e], ax
0x4001e9:	lea	rcx, [rbp - 0x40]
0x4001ed:	mov	eax, dword ptr [rbp - 0x48]
0x4001f0:	mov	edx, 0x10
0x4001f5:	mov	rsi, rcx
0x4001f8:	mov	edi, eax
0x4001fa:	call	0x500020
<Block for 0x4002b1, 16 bytes>
0x4002b1:	nop	
0x4002b2:	mov	rax, qword ptr [rbp - 8]
0x4002b6:	xor	rax, qword ptr fs:[0x28]
0x4002bf:	je	0x4002c6
<Block for 0x400293, 16 bytes>
0x400293:	mov	eax, dword ptr [rbp - 0x4c]
0x400296:	cdqe	
0x400298:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40029c:	mov	edi, eax
0x40029e:	call	0x500040
<Block for 0x4001ff, 5 bytes>
0x4001ff:	cmp	eax, -1
0x400202:	je	0x400249
<Block for 0x4002c6, 2 bytes>
0x4002c6:	leave	
0x4002c7:	ret	
<Block for 0x4002c1, 5 bytes>
0x4002c1:	call	0x500050
<Block for 0x4002a3, 2 bytes>
0x4002a3:	jmp	0x4002b1
<Block for 0x400204, 24 bytes>
0x400204:	lea	rsi, [rbp - 0x16]
0x400208:	mov	eax, dword ptr [rbp - 0x48]
0x40020b:	mov	ecx, 0
0x400210:	mov	edx, 0xd
0x400215:	mov	edi, eax
0x400217:	call	0x500028
<Block for 0x400249, 1 bytes>
0x400249:	nop	
<Block for 0x40021c, 9 bytes>
0x40021c:	mov	dword ptr [rbp - 0x44], eax
0x40021f:	cmp	dword ptr [rbp - 0x44], -1
0x400223:	je	0x40024a
<Block for 0x400225, 6 bytes>
0x400225:	cmp	dword ptr [rbp - 0x44], 0
0x400229:	je	0x40024a
<Block for 0x40022b, 22 bytes>
0x40022b:	mov	eax, dword ptr [rbp - 0x44]
0x40022e:	cdqe	
0x400230:	mov	byte ptr [rbp + rax - 0x16], 0
0x400235:	lea	rax, [rbp - 0x16]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500030
<Block for 0x400241, 5 bytes>
0x400241:	mov	dword ptr [rbp - 0x4c], eax
0x400244:	jmp	0x40024a
