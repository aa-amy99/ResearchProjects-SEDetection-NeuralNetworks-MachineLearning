<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	edi, 0x32
0x40002b:	call	0x500000
<Block for 0x400030, 11 bytes>
0x400030:	mov	qword ptr [rbp - 0x80], rax
0x400034:	cmp	qword ptr [rbp - 0x80], 0
0x400039:	jne	0x400045
<Block for 0x40003b, 10 bytes>
0x40003b:	mov	edi, 0xffffffff
0x400040:	call	0x500008
<Block for 0x400045, 22 bytes>
0x400045:	mov	rax, qword ptr [rbp - 0x80]
0x400049:	mov	edx, 0x31
0x40004e:	mov	esi, 0x41
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40005b, 33 bytes>
0x40005b:	mov	rax, qword ptr [rbp - 0x80]
0x40005f:	add	rax, 0x31
0x400063:	mov	byte ptr [rax], 0
0x400066:	lea	rax, [rbp - 0x70]
0x40006a:	mov	edx, 0x63
0x40006f:	mov	esi, 0x43
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x40007c, 16 bytes>
0x40007c:	mov	byte ptr [rbp - 0xd], 0
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	rdi, rax
0x400087:	call	0x500018
<Block for 0x40008c, 17 bytes>
0x40008c:	mov	qword ptr [rbp - 0x78], rax
0x400090:	mov	qword ptr [rbp - 0x88], 0
0x40009b:	jmp	0x4000c6
<Block for 0x4000c6, 13 bytes>
0x4000c6:	mov	rax, qword ptr [rbp - 0x88]
0x4000cd:	cmp	rax, qword ptr [rbp - 0x78]
0x4000d1:	jb	0x40009d
<Block for 0x40009d, 54 bytes>
0x40009d:	mov	rdx, qword ptr [rbp - 0x80]
0x4000a1:	mov	rax, qword ptr [rbp - 0x88]
0x4000a8:	add	rax, rdx
0x4000ab:	movzx	eax, byte ptr [rax]
0x4000ae:	lea	rcx, [rbp - 0x70]
0x4000b2:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b9:	add	rdx, rcx
0x4000bc:	mov	byte ptr [rdx], al
0x4000be:	add	qword ptr [rbp - 0x88], 1
0x4000c6:	mov	rax, qword ptr [rbp - 0x88]
0x4000cd:	cmp	rax, qword ptr [rbp - 0x78]
0x4000d1:	jb	0x40009d
<Block for 0x4000d3, 16 bytes>
0x4000d3:	mov	byte ptr [rbp - 0xd], 0
0x4000d7:	lea	rax, [rbp - 0x70]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500020
<Block for 0x4000e3, 12 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 0x80]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500028
<Block for 0x4000ef, 16 bytes>
0x4000ef:	nop	
0x4000f0:	mov	rax, qword ptr [rbp - 8]
0x4000f4:	xor	rax, qword ptr fs:[0x28]
0x4000fd:	je	0x400104
<Block for 0x400104, 2 bytes>
0x400104:	leave	
0x400105:	ret	
<Block for 0x4000ff, 5 bytes>
0x4000ff:	call	0x500030
