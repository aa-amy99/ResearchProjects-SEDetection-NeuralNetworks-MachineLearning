<Block for 0x400064, 57 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x30
0x400070:	mov	qword ptr [rbp - 0x28], rdi
0x400074:	mov	rax, qword ptr fs:[0x28]
0x40007d:	mov	qword ptr [rbp - 8], rax
0x400081:	xor	eax, eax
0x400083:	mov	dword ptr [rbp - 0x14], 2
0x40008a:	lea	rdx, [rbp - 0x14]
0x40008e:	mov	rax, qword ptr [rbp - 0x28]
0x400092:	mov	rsi, rdx
0x400095:	mov	rdi, rax
0x400098:	call	0x4000f4
<Block for 0x40009d, 20 bytes>
0x40009d:	mov	rax, qword ptr [rax]
0x4000a0:	mov	qword ptr [rbp - 0x10], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	eax, dword ptr [rax]
0x4000aa:	mov	edi, eax
0x4000ac:	call	0x500000
<Block for 0x4000b1, 16 bytes>
0x4000b1:	nop	
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	xor	rax, qword ptr fs:[0x28]
0x4000bf:	je	0x4000c6
<Block for 0x4000c6, 2 bytes>
0x4000c6:	leave	
0x4000c7:	ret	
<Block for 0x4000c1, 5 bytes>
0x4000c1:	call	0x500008
