<Block for 0x4000a3, 55 bytes>
0x4000a3:	endbr64	
0x4000a7:	push	rbp
0x4000a8:	mov	rbp, rsp
0x4000ab:	sub	rsp, 0xf0
0x4000b2:	mov	rax, qword ptr fs:[0x28]
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	xor	eax, eax
0x4000c1:	lea	rax, [rbp - 0xe0]
0x4000c8:	mov	edx, 0x63
0x4000cd:	mov	esi, 0x41
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500000
<Block for 0x4000da, 40 bytes>
0x4000da:	mov	byte ptr [rbp - 0x7d], 0
0x4000de:	lea	rax, [rbp - 0xe0]
0x4000e5:	mov	qword ptr [rbp - 0xe8], rax
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	mov	edx, 0x63
0x4000f5:	mov	esi, 0x43
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500000
<Block for 0x400102, 26 bytes>
0x400102:	mov	byte ptr [rbp - 0xd], 0
0x400106:	lea	rdx, [rbp - 0x70]
0x40010a:	mov	rax, qword ptr [rbp - 0xe8]
0x400111:	mov	rsi, rdx
0x400114:	mov	rdi, rax
0x400117:	call	0x500008
<Block for 0x40011c, 15 bytes>
0x40011c:	mov	rax, qword ptr [rbp - 0xe8]
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500018
