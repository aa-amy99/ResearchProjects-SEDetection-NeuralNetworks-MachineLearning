<Block for 0x4001d5, 46 bytes>
0x4001d5:	endbr64	
0x4001d9:	push	rbp
0x4001da:	mov	rbp, rsp
0x4001dd:	push	rbx
0x4001de:	sub	rsp, 0xc8
0x4001e5:	mov	rax, qword ptr fs:[0x28]
0x4001ee:	mov	qword ptr [rbp - 0x18], rax
0x4001f2:	xor	eax, eax
0x4001f4:	lea	rax, [rbp - 0xc0]
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x400432
<Block for 0x400203, 36 bytes>
0x400203:	lea	rax, [rbp - 0x80]
0x400207:	mov	qword ptr [rbp - 0xd0], rax
0x40020e:	mov	rax, qword ptr [rbp - 0xd0]
0x400215:	mov	byte ptr [rax], 0
0x400218:	lea	rax, [rbp - 0xc0]
0x40021f:	mov	rdi, rax
0x400222:	call	0x4005c6
<Block for 0x400227, 32 bytes>
0x400227:	mov	qword ptr [rbp - 0xc8], rax
0x40022e:	lea	rdx, [rbp - 0xc8]
0x400235:	lea	rax, [rbp - 0xa0]
0x40023c:	mov	rsi, rdx
0x40023f:	mov	rdi, rax
0x400242:	call	0x400616
<Block for 0x400247, 37 bytes>
0x400247:	lea	rdx, [rbp - 0xd0]
0x40024e:	mov	rsi, qword ptr [rbp - 0xa0]
0x400255:	lea	rax, [rbp - 0xc0]
0x40025c:	mov	rcx, rdx
0x40025f:	mov	edx, 1
0x400264:	mov	rdi, rax
0x400267:	call	0x400644
<Block for 0x40026c, 15 bytes>
0x40026c:	lea	rax, [rbp - 0xc0]
0x400273:	mov	rdi, rax
0x400276:	call	0x4005c6
<Block for 0x40027b, 32 bytes>
0x40027b:	mov	qword ptr [rbp - 0xc8], rax
0x400282:	lea	rdx, [rbp - 0xc8]
0x400289:	lea	rax, [rbp - 0xa0]
0x400290:	mov	rsi, rdx
0x400293:	mov	rdi, rax
0x400296:	call	0x400616
<Block for 0x40029b, 37 bytes>
0x40029b:	lea	rdx, [rbp - 0xd0]
0x4002a2:	mov	rsi, qword ptr [rbp - 0xa0]
0x4002a9:	lea	rax, [rbp - 0xc0]
0x4002b0:	mov	rcx, rdx
0x4002b3:	mov	edx, 1
0x4002b8:	mov	rdi, rax
0x4002bb:	call	0x400644
<Block for 0x4002c0, 15 bytes>
0x4002c0:	lea	rax, [rbp - 0xc0]
0x4002c7:	mov	rdi, rax
0x4002ca:	call	0x4005c6
<Block for 0x4002cf, 32 bytes>
0x4002cf:	mov	qword ptr [rbp - 0xc8], rax
0x4002d6:	lea	rdx, [rbp - 0xc8]
0x4002dd:	lea	rax, [rbp - 0xa0]
0x4002e4:	mov	rsi, rdx
0x4002e7:	mov	rdi, rax
0x4002ea:	call	0x400616
<Block for 0x4002ef, 37 bytes>
0x4002ef:	lea	rdx, [rbp - 0xd0]
0x4002f6:	mov	rsi, qword ptr [rbp - 0xa0]
0x4002fd:	lea	rax, [rbp - 0xc0]
0x400304:	mov	rcx, rdx
0x400307:	mov	edx, 1
0x40030c:	mov	rdi, rax
0x40030f:	call	0x400644
<Block for 0x400314, 25 bytes>
0x400314:	lea	rdx, [rbp - 0xc0]
0x40031b:	lea	rax, [rbp - 0xa0]
0x400322:	mov	rsi, rdx
0x400325:	mov	rdi, rax
0x400328:	call	0x40070a
<Block for 0x40032d, 15 bytes>
0x40032d:	lea	rax, [rbp - 0xa0]
0x400334:	mov	rdi, rax
0x400337:	call	0x500018
<Block for 0x40033c, 15 bytes>
0x40033c:	lea	rax, [rbp - 0xa0]
0x400343:	mov	rdi, rax
0x400346:	call	0x40057e
<Block for 0x40034b, 15 bytes>
0x40034b:	lea	rax, [rbp - 0xc0]
0x400352:	mov	rdi, rax
0x400355:	call	0x40057e
<Block for 0x40035a, 16 bytes>
0x40035a:	nop	
0x40035b:	mov	rax, qword ptr [rbp - 0x18]
0x40035f:	xor	rax, qword ptr fs:[0x28]
0x400368:	je	0x4003aa
<Block for 0x4003aa, 10 bytes>
0x4003aa:	add	rsp, 0xc8
0x4003b1:	pop	rbx
0x4003b2:	pop	rbp
0x4003b3:	ret	
<Block for 0x40036a, 2 bytes>
0x40036a:	jmp	0x4003a5
<Block for 0x4003a5, 5 bytes>
0x4003a5:	call	0x500010
