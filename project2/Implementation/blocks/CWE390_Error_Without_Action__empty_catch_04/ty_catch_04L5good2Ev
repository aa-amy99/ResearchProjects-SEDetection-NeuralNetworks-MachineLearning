<Block for 0x400289, 42 bytes>
0x400289:	endbr64	
0x40028d:	push	rbp
0x40028e:	mov	rbp, rsp
0x400291:	push	r12
0x400293:	push	rbx
0x400294:	sub	rsp, 0x60
0x400298:	mov	rax, qword ptr fs:[0x28]
0x4002a1:	mov	qword ptr [rbp - 0x18], rax
0x4002a5:	xor	eax, eax
0x4002a7:	lea	rax, [rbp - 0x69]
0x4002ab:	mov	rdi, rax
0x4002ae:	call	0x500000
<Block for 0x4002b3, 23 bytes>
0x4002b3:	lea	rdx, [rbp - 0x69]
0x4002b7:	lea	rax, [rbp - 0x60]
0x4002bb:	lea	rsi, [rip + 0x1ae]
0x4002c2:	mov	rdi, rax
0x4002c5:	call	0x500008
<Block for 0x4002ca, 12 bytes>
0x4002ca:	lea	rax, [rbp - 0x69]
0x4002ce:	mov	rdi, rax
0x4002d1:	call	0x500010
<Block for 0x4002d6, 5 bytes>
0x4002d6:	call	0x500018
<Block for 0x4002db, 8 bytes>
0x4002db:	movsxd	rbx, eax
0x4002de:	call	0x500018
<Block for 0x4002e3, 22 bytes>
0x4002e3:	movsxd	rdx, eax
0x4002e6:	lea	rax, [rbp - 0x40]
0x4002ea:	lea	rsi, [rbp - 0x60]
0x4002ee:	mov	rcx, rbx
0x4002f1:	mov	rdi, rax
0x4002f4:	call	0x500020
<Block for 0x4002f9, 12 bytes>
0x4002f9:	lea	rax, [rbp - 0x40]
0x4002fd:	mov	rdi, rax
0x400300:	call	0x500028
<Block for 0x400305, 8 bytes>
0x400305:	mov	rdi, rax
0x400308:	call	0x500030
<Block for 0x40030d, 12 bytes>
0x40030d:	lea	rax, [rbp - 0x40]
0x400311:	mov	rdi, rax
0x400314:	call	0x500038
<Block for 0x400319, 12 bytes>
0x400319:	lea	rax, [rbp - 0x60]
0x40031d:	mov	rdi, rax
0x400320:	call	0x500038
<Block for 0x400325, 20 bytes>
0x400325:	nop	
0x400326:	mov	rax, qword ptr [rbp - 0x18]
0x40032a:	xor	rax, qword ptr fs:[0x28]
0x400333:	je	0x4003dc
<Block for 0x4003dc, 9 bytes>
0x4003dc:	add	rsp, 0x60
0x4003e0:	pop	rbx
0x4003e1:	pop	r12
0x4003e3:	pop	rbp
0x4003e4:	ret	
<Block for 0x400339, 5 bytes>
0x400339:	jmp	0x4003d7
<Block for 0x4003d7, 5 bytes>
0x4003d7:	call	0x500058
