<Block for 0x40001e, 41 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	byte ptr [rbp - 0xd], 0x20
0x40003d:	mov	eax, 0
0x400042:	call	0x400000
<Block for 0x400047, 4 bytes>
0x400047:	test	eax, eax
0x400049:	je	0x400070
<Block for 0x400070, 31 bytes>
0x400070:	mov	byte ptr [rbp - 0xc], 0x78
0x400074:	movzx	eax, byte ptr [rbp - 0xd]
0x400078:	mov	byte ptr [rbp - 0xb], al
0x40007b:	mov	byte ptr [rbp - 0xa], 0x7a
0x40007f:	mov	byte ptr [rbp - 9], 0
0x400083:	lea	rax, [rbp - 0xc]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500018
<Block for 0x40004b, 15 bytes>
0x40004b:	mov	rax, qword ptr [rip + 0xfffae]
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40008f, 16 bytes>
0x40008f:	nop	
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	xor	rax, qword ptr fs:[0x28]
0x40009d:	je	0x4000a4
<Block for 0x40005a, 19 bytes>
0x40005a:	mov	byte ptr [rbp - 0xc], al
0x40005d:	mov	byte ptr [rbp - 0xb], 0
0x400061:	lea	rax, [rbp - 0xc]
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x4000a4, 2 bytes>
0x4000a4:	leave	
0x4000a5:	ret	
<Block for 0x40009f, 5 bytes>
0x40009f:	call	0x500020
<Block for 0x40006d, 34 bytes>
0x40006d:	mov	byte ptr [rbp - 0xd], al
0x400070:	mov	byte ptr [rbp - 0xc], 0x78
0x400074:	movzx	eax, byte ptr [rbp - 0xd]
0x400078:	mov	byte ptr [rbp - 0xb], al
0x40007b:	mov	byte ptr [rbp - 0xa], 0x7a
0x40007f:	mov	byte ptr [rbp - 9], 0
0x400083:	lea	rax, [rbp - 0xc]
0x400087:	mov	rdi, rax
0x40008a:	call	0x500018
