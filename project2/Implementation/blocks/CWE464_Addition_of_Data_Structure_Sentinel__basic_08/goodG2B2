<Block for 0x40011b, 41 bytes>
0x40011b:	endbr64	
0x40011f:	push	rbp
0x400120:	mov	rbp, rsp
0x400123:	sub	rsp, 0x10
0x400127:	mov	rax, qword ptr fs:[0x28]
0x400130:	mov	qword ptr [rbp - 8], rax
0x400134:	xor	eax, eax
0x400136:	mov	byte ptr [rbp - 0xd], 0x20
0x40013a:	mov	eax, 0
0x40013f:	call	0x400000
<Block for 0x400144, 4 bytes>
0x400144:	test	eax, eax
0x400146:	je	0x40014c
<Block for 0x40014c, 31 bytes>
0x40014c:	mov	byte ptr [rbp - 0xc], 0x78
0x400150:	movzx	eax, byte ptr [rbp - 0xd]
0x400154:	mov	byte ptr [rbp - 0xb], al
0x400157:	mov	byte ptr [rbp - 0xa], 0x7a
0x40015b:	mov	byte ptr [rbp - 9], 0
0x40015f:	lea	rax, [rbp - 0xc]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x400148, 35 bytes>
0x400148:	mov	byte ptr [rbp - 0xd], 0x61
0x40014c:	mov	byte ptr [rbp - 0xc], 0x78
0x400150:	movzx	eax, byte ptr [rbp - 0xd]
0x400154:	mov	byte ptr [rbp - 0xb], al
0x400157:	mov	byte ptr [rbp - 0xa], 0x7a
0x40015b:	mov	byte ptr [rbp - 9], 0
0x40015f:	lea	rax, [rbp - 0xc]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500020
