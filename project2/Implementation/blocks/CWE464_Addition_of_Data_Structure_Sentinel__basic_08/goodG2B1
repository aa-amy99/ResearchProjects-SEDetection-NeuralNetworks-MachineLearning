<Block for 0x4000a6, 41 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x10
0x4000b2:	mov	rax, qword ptr fs:[0x28]
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	xor	eax, eax
0x4000c1:	mov	byte ptr [rbp - 0xd], 0x20
0x4000c5:	mov	eax, 0
0x4000ca:	call	0x40000f
<Block for 0x4000cf, 4 bytes>
0x4000cf:	test	eax, eax
0x4000d1:	je	0x4000e1
<Block for 0x4000e1, 35 bytes>
0x4000e1:	mov	byte ptr [rbp - 0xd], 0x61
0x4000e5:	mov	byte ptr [rbp - 0xc], 0x78
0x4000e9:	movzx	eax, byte ptr [rbp - 0xd]
0x4000ed:	mov	byte ptr [rbp - 0xb], al
0x4000f0:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000f4:	mov	byte ptr [rbp - 9], 0
0x4000f8:	lea	rax, [rbp - 0xc]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500018
<Block for 0x4000d3, 12 bytes>
0x4000d3:	lea	rdi, [rip + 0xc7]
0x4000da:	call	0x500018
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x4000df, 2 bytes>
0x4000df:	jmp	0x4000e5
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500020
<Block for 0x4000e5, 31 bytes>
0x4000e5:	mov	byte ptr [rbp - 0xc], 0x78
0x4000e9:	movzx	eax, byte ptr [rbp - 0xd]
0x4000ed:	mov	byte ptr [rbp - 0xb], al
0x4000f0:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000f4:	mov	byte ptr [rbp - 9], 0
0x4000f8:	lea	rax, [rbp - 0xc]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500018
