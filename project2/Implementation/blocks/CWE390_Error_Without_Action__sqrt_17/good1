<Block for 0x40005b, 21 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0x10
0x400067:	mov	dword ptr [rbp - 0xc], 0
0x40006e:	jmp	0x4000c9
<Block for 0x4000c9, 6 bytes>
0x4000c9:	cmp	dword ptr [rbp - 0xc], 0
0x4000cd:	jle	0x400070
<Block for 0x400070, 5 bytes>
0x400070:	call	0x500000
<Block for 0x4000cf, 4 bytes>
0x4000cf:	nop	
0x4000d0:	nop	
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x400075, 23 bytes>
0x400075:	mov	dword ptr [rax], 0
0x40007b:	mov	rax, qword ptr [rip + 0x76]
0x400082:	movq	xmm0, rax
0x400087:	call	0x500008
<Block for 0x40008c, 14 bytes>
0x40008c:	movq	rax, xmm0
0x400091:	mov	qword ptr [rbp - 8], rax
0x400095:	call	0x500000
<Block for 0x40009a, 7 bytes>
0x40009a:	mov	eax, dword ptr [rax]
0x40009c:	cmp	eax, 0x21
0x40009f:	jne	0x4000b7
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0x40]
0x4000a8:	call	0x500018
<Block for 0x4000b7, 14 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	movq	xmm0, rax
0x4000c0:	call	0x500010
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 1
0x4000b2:	call	0x500020
<Block for 0x4000c5, 10 bytes>
0x4000c5:	add	dword ptr [rbp - 0xc], 1
0x4000c9:	cmp	dword ptr [rbp - 0xc], 0
0x4000cd:	jle	0x400070
