<Block for 0x4000b7, 46 bytes>
0x4000b7:	endbr64	
0x4000bb:	push	rbp
0x4000bc:	mov	rbp, rsp
0x4000bf:	sub	rsp, 0x20
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000d9:	lea	rax, [rbp - 0x1c]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500030
<Block for 0x4000e5, 17 bytes>
0x4000e5:	mov	eax, dword ptr [rbp - 0x1c]
0x4000e8:	cdqe	
0x4000ea:	shl	rax, 2
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x500008
<Block for 0x4000f6, 11 bytes>
0x4000f6:	mov	qword ptr [rbp - 0x10], rax
0x4000fa:	cmp	qword ptr [rbp - 0x10], 0
0x4000ff:	jne	0x40010b
<Block for 0x400101, 10 bytes>
0x400101:	mov	edi, 0xffffffff
0x400106:	call	0x500010
<Block for 0x40010b, 19 bytes>
0x40010b:	mov	qword ptr [rbp - 0x18], 0
0x400113:	mov	eax, dword ptr [rbp - 0x1c]
0x400116:	cdqe	
0x400118:	cmp	qword ptr [rbp - 0x18], rax
0x40011c:	jae	0x40013e
<Block for 0x40011e, 32 bytes>
0x40011e:	mov	rax, qword ptr [rbp - 0x18]
0x400122:	lea	rdx, [rax*4]
0x40012a:	mov	rax, qword ptr [rbp - 0x10]
0x40012e:	add	rax, rdx
0x400131:	mov	dword ptr [rax], 0
0x400137:	add	qword ptr [rbp - 0x18], 1
0x40013c:	jmp	0x400113
<Block for 0x40013e, 13 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x10]
0x400142:	mov	eax, dword ptr [rax]
0x400144:	mov	edi, eax
0x400146:	call	0x500018
<Block for 0x400113, 11 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0x1c]
0x400116:	cdqe	
0x400118:	cmp	qword ptr [rbp - 0x18], rax
0x40011c:	jae	0x40013e
<Block for 0x40014b, 12 bytes>
0x40014b:	mov	rax, qword ptr [rbp - 0x10]
0x40014f:	mov	rdi, rax
0x400152:	call	0x500020
<Block for 0x400157, 16 bytes>
0x400157:	nop	
0x400158:	mov	rax, qword ptr [rbp - 8]
0x40015c:	xor	rax, qword ptr fs:[0x28]
0x400165:	je	0x40016c
<Block for 0x40016c, 2 bytes>
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400167, 5 bytes>
0x400167:	call	0x500028
