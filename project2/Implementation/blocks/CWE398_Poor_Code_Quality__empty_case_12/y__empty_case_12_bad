<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400062
<Block for 0x400062, 5 bytes>
0x400062:	call	0x500008
<Block for 0x40001a, 5 bytes>
0x40001a:	call	0x500008
<Block for 0x400067, 55 bytes>
0x400067:	mov	edx, eax
0x400069:	movsxd	rax, edx
0x40006c:	imul	rax, rax, 0x55555556
0x400073:	shr	rax, 0x20
0x400077:	mov	rcx, rax
0x40007a:	mov	eax, edx
0x40007c:	sar	eax, 0x1f
0x40007f:	mov	esi, ecx
0x400081:	sub	esi, eax
0x400083:	mov	eax, esi
0x400085:	mov	dword ptr [rbp - 8], eax
0x400088:	mov	ecx, dword ptr [rbp - 8]
0x40008b:	mov	eax, ecx
0x40008d:	add	eax, eax
0x40008f:	add	eax, ecx
0x400091:	sub	edx, eax
0x400093:	mov	eax, edx
0x400095:	mov	dword ptr [rbp - 8], eax
0x400098:	cmp	dword ptr [rbp - 8], 0
0x40009c:	jne	0x4000ab
<Block for 0x40001f, 65 bytes>
0x40001f:	mov	edx, eax
0x400021:	movsxd	rax, edx
0x400024:	imul	rax, rax, 0x55555556
0x40002b:	shr	rax, 0x20
0x40002f:	mov	rcx, rax
0x400032:	mov	eax, edx
0x400034:	sar	eax, 0x1f
0x400037:	mov	esi, ecx
0x400039:	sub	esi, eax
0x40003b:	mov	eax, esi
0x40003d:	mov	dword ptr [rbp - 4], eax
0x400040:	mov	ecx, dword ptr [rbp - 4]
0x400043:	mov	eax, ecx
0x400045:	add	eax, eax
0x400047:	add	eax, ecx
0x400049:	sub	edx, eax
0x40004b:	mov	eax, edx
0x40004d:	mov	dword ptr [rbp - 4], eax
0x400050:	cmp	dword ptr [rbp - 4], 0
0x400054:	lea	rdi, [rip + 0x13d]
0x40005b:	call	0x500010
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0x104]
0x4000a5:	call	0x500010
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rdi, [rip + 0x111]
0x4000b2:	call	0x500010
<Block for 0x400060, 2 bytes>
0x400060:	jmp	0x4000b7
<Block for 0x4000aa, 1 bytes>
0x4000aa:	nop	
<Block for 0x4000b7, 3 bytes>
0x4000b7:	nop	
0x4000b8:	leave	
0x4000b9:	ret	
