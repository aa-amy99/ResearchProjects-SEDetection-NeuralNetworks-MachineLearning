<Block for 0x400071, 30 bytes>
0x400071:	endbr64	
0x400075:	push	rbp
0x400076:	mov	rbp, rsp
0x400079:	sub	rsp, 0x10
0x40007d:	mov	qword ptr [rbp - 8], 0
0x400085:	mov	edi, 0x64
0x40008a:	call	0x500000
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	cmp	qword ptr [rbp - 8], 0
0x400098:	jne	0x4000a4
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 0xffffffff
0x40009f:	call	0x500008
<Block for 0x4000a4, 22 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	edx, 0x63
0x4000ad:	mov	esi, 0x41
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x500010
<Block for 0x4000ba, 23 bytes>
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	add	rax, 0x63
0x4000c2:	mov	byte ptr [rax], 0
0x4000c5:	mov	rax, qword ptr [rbp - 8]
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500018
<Block for 0x4000d1, 5 bytes>
0x4000d1:	nop	
0x4000d2:	nop	
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
