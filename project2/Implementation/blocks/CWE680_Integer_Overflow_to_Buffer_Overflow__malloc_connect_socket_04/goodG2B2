<Block for 0x400230, 28 bytes>
0x400230:	endbr64	
0x400234:	push	rbp
0x400235:	mov	rbp, rsp
0x400238:	sub	rsp, 0x20
0x40023c:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400243:	mov	eax, 1
0x400248:	test	eax, eax
0x40024a:	je	0x400253
<Block for 0x400253, 17 bytes>
0x400253:	mov	eax, dword ptr [rbp - 0x14]
0x400256:	cdqe	
0x400258:	shl	rax, 2
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500040
<Block for 0x40024c, 24 bytes>
0x40024c:	mov	dword ptr [rbp - 0x14], 0x14
0x400253:	mov	eax, dword ptr [rbp - 0x14]
0x400256:	cdqe	
0x400258:	shl	rax, 2
0x40025c:	mov	rdi, rax
0x40025f:	call	0x500040
<Block for 0x400264, 11 bytes>
0x400264:	mov	qword ptr [rbp - 8], rax
0x400268:	cmp	qword ptr [rbp - 8], 0
0x40026d:	jne	0x400279
<Block for 0x40026f, 10 bytes>
0x40026f:	mov	edi, 0xffffffff
0x400274:	call	0x500048
<Block for 0x400279, 10 bytes>
0x400279:	mov	qword ptr [rbp - 0x10], 0
0x400281:	jmp	0x4002a1
<Block for 0x4002a1, 11 bytes>
0x4002a1:	mov	eax, dword ptr [rbp - 0x14]
0x4002a4:	cdqe	
0x4002a6:	cmp	qword ptr [rbp - 0x10], rax
0x4002aa:	jb	0x400283
<Block for 0x400283, 41 bytes>
0x400283:	mov	rax, qword ptr [rbp - 0x10]
0x400287:	lea	rdx, [rax*4]
0x40028f:	mov	rax, qword ptr [rbp - 8]
0x400293:	add	rax, rdx
0x400296:	mov	dword ptr [rax], 0
0x40029c:	add	qword ptr [rbp - 0x10], 1
0x4002a1:	mov	eax, dword ptr [rbp - 0x14]
0x4002a4:	cdqe	
0x4002a6:	cmp	qword ptr [rbp - 0x10], rax
0x4002aa:	jb	0x400283
<Block for 0x4002ac, 13 bytes>
0x4002ac:	mov	rax, qword ptr [rbp - 8]
0x4002b0:	mov	eax, dword ptr [rax]
0x4002b2:	mov	edi, eax
0x4002b4:	call	0x500050
<Block for 0x4002b9, 12 bytes>
0x4002b9:	mov	rax, qword ptr [rbp - 8]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500058
<Block for 0x4002c5, 3 bytes>
0x4002c5:	nop	
0x4002c6:	leave	
0x4002c7:	ret	
