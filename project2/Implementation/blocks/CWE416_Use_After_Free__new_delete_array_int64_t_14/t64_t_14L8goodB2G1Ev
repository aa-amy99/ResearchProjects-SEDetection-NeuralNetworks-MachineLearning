<Block for 0x40008d, 31 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x10
0x400099:	mov	qword ptr [rbp - 8], 0
0x4000a1:	mov	eax, dword ptr [rip + 0xfff59]
0x4000a7:	cmp	eax, 5
0x4000aa:	jne	0x4000fd
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	edi, 0x320
0x4000b1:	call	0x500008
<Block for 0x4000fd, 11 bytes>
0x4000fd:	mov	eax, dword ptr [rip + 0xffefd]
0x400103:	cmp	eax, 5
0x400106:	je	0x400114
<Block for 0x4000b6, 19 bytes>
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	mov	qword ptr [rbp - 0x10], 0
0x4000c2:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c7:	ja	0x4000ea
<Block for 0x400114, 3 bytes>
0x400114:	nop	
0x400115:	leave	
0x400116:	ret	
<Block for 0x400108, 12 bytes>
0x400108:	lea	rdi, [rip + 0x19c]
0x40010f:	call	0x500020
<Block for 0x4000c9, 33 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 0x10]
0x4000cd:	lea	rdx, [rax*8]
0x4000d5:	mov	rax, qword ptr [rbp - 8]
0x4000d9:	add	rax, rdx
0x4000dc:	mov	qword ptr [rax], 5
0x4000e3:	add	qword ptr [rbp - 0x10], 1
0x4000e8:	jmp	0x4000c2
<Block for 0x4000ea, 7 bytes>
0x4000ea:	cmp	qword ptr [rbp - 8], 0
0x4000ef:	je	0x4000fd
<Block for 0x4000c2, 7 bytes>
0x4000c2:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000c7:	ja	0x4000ea
<Block for 0x4000f1, 12 bytes>
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500010
