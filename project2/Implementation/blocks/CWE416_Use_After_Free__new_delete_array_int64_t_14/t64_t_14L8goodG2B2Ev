<Block for 0x400212, 31 bytes>
0x400212:	endbr64	
0x400216:	push	rbp
0x400217:	mov	rbp, rsp
0x40021a:	sub	rsp, 0x10
0x40021e:	mov	qword ptr [rbp - 0x10], 0
0x400226:	mov	eax, dword ptr [rip + 0xffdd4]
0x40022c:	cmp	eax, 5
0x40022f:	jne	0x40026f
<Block for 0x400231, 10 bytes>
0x400231:	mov	edi, 0x320
0x400236:	call	0x500008
<Block for 0x40026f, 11 bytes>
0x40026f:	mov	eax, dword ptr [rip + 0xffd8b]
0x400275:	cmp	eax, 5
0x400278:	jne	0x400289
<Block for 0x40023b, 19 bytes>
0x40023b:	mov	qword ptr [rbp - 0x10], rax
0x40023f:	mov	qword ptr [rbp - 8], 0
0x400247:	cmp	qword ptr [rbp - 8], 0x63
0x40024c:	ja	0x40026f
<Block for 0x40027a, 15 bytes>
0x40027a:	mov	rax, qword ptr [rbp - 0x10]
0x40027e:	mov	rax, qword ptr [rax]
0x400281:	mov	rdi, rax
0x400284:	call	0x500018
<Block for 0x400289, 3 bytes>
0x400289:	nop	
0x40028a:	leave	
0x40028b:	ret	
<Block for 0x40024e, 33 bytes>
0x40024e:	mov	rax, qword ptr [rbp - 8]
0x400252:	lea	rdx, [rax*8]
0x40025a:	mov	rax, qword ptr [rbp - 0x10]
0x40025e:	add	rax, rdx
0x400261:	mov	qword ptr [rax], 5
0x400268:	add	qword ptr [rbp - 8], 1
0x40026d:	jmp	0x400247
<Block for 0x400247, 7 bytes>
0x400247:	cmp	qword ptr [rbp - 8], 0x63
0x40024c:	ja	0x40026f
