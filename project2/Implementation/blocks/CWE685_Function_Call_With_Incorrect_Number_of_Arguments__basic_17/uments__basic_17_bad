<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x74], 0
0x400022:	jmp	0x400053
<Block for 0x400053, 6 bytes>
0x400053:	cmp	dword ptr [rbp - 0x74], 0
0x400057:	jle	0x400024
<Block for 0x400024, 31 bytes>
0x400024:	lea	rax, [rbp - 0x70]
0x400028:	lea	rdx, [rip + 0xcd]
0x40002f:	lea	rsi, [rip + 0xca]
0x400036:	mov	rdi, rax
0x400039:	mov	eax, 0
0x40003e:	call	0x500000
<Block for 0x400059, 16 bytes>
0x400059:	nop	
0x40005a:	mov	rax, qword ptr [rbp - 8]
0x40005e:	xor	rax, qword ptr fs:[0x28]
0x400067:	je	0x40006e
<Block for 0x400043, 12 bytes>
0x400043:	lea	rax, [rbp - 0x70]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40006e, 2 bytes>
0x40006e:	leave	
0x40006f:	ret	
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500010
<Block for 0x40004f, 10 bytes>
0x40004f:	add	dword ptr [rbp - 0x74], 1
0x400053:	cmp	dword ptr [rbp - 0x74], 0
0x400057:	jle	0x400024
