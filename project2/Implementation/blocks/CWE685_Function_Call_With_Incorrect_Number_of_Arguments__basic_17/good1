<Block for 0x400070, 36 bytes>
0x400070:	endbr64	
0x400074:	push	rbp
0x400075:	mov	rbp, rsp
0x400078:	add	rsp, -0x80
0x40007c:	mov	rax, qword ptr fs:[0x28]
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	xor	eax, eax
0x40008b:	mov	dword ptr [rbp - 0x74], 0
0x400092:	jmp	0x4000ca
<Block for 0x4000ca, 6 bytes>
0x4000ca:	cmp	dword ptr [rbp - 0x74], 0
0x4000ce:	jle	0x400094
<Block for 0x400094, 38 bytes>
0x400094:	lea	rax, [rbp - 0x70]
0x400098:	lea	rcx, [rip + 0x5d]
0x40009f:	lea	rdx, [rip + 0x56]
0x4000a6:	lea	rsi, [rip + 0x53]
0x4000ad:	mov	rdi, rax
0x4000b0:	mov	eax, 0
0x4000b5:	call	0x500000
<Block for 0x4000d0, 16 bytes>
0x4000d0:	nop	
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	xor	rax, qword ptr fs:[0x28]
0x4000de:	je	0x4000e5
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rax, [rbp - 0x70]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500008
<Block for 0x4000e5, 2 bytes>
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	call	0x500010
<Block for 0x4000c6, 10 bytes>
0x4000c6:	add	dword ptr [rbp - 0x74], 1
0x4000ca:	cmp	dword ptr [rbp - 0x74], 0
0x4000ce:	jle	0x400094
