<Block for 0x40000b, 36 bytes>
0x40000b:	endbr64	
0x40000f:	push	rbp
0x400010:	mov	rbp, rsp
0x400013:	sub	rsp, 0x10
0x400017:	mov	rax, qword ptr fs:[0x28]
0x400020:	mov	qword ptr [rbp - 8], rax
0x400024:	xor	eax, eax
0x400026:	mov	eax, 0
0x40002b:	test	eax, eax
0x40002d:	je	0x40003d
<Block for 0x40003d, 26 bytes>
0x40003d:	mov	dword ptr [rbp - 0x10], 0
0x400044:	mov	dword ptr [rbp - 0xc], 0
0x40004b:	lea	rax, [rbp - 0x10]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500008
<Block for 0x40002f, 12 bytes>
0x40002f:	lea	rdi, [rip + 0xb6]
0x400036:	call	0x500000
<Block for 0x400057, 16 bytes>
0x400057:	nop	
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	xor	rax, qword ptr fs:[0x28]
0x400065:	je	0x40006c
<Block for 0x40003b, 2 bytes>
0x40003b:	jmp	0x400057
<Block for 0x40006c, 2 bytes>
0x40006c:	leave	
0x40006d:	ret	
<Block for 0x400067, 5 bytes>
0x400067:	call	0x500010
