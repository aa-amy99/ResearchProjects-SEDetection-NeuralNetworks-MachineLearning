<Block for 0x40007e, 32 bytes>
0x40007e:	endbr64	
0x400082:	push	rbp
0x400083:	mov	rbp, rsp
0x400086:	sub	rsp, 0x20
0x40008a:	mov	rax, qword ptr fs:[0x28]
0x400093:	mov	qword ptr [rbp - 8], rax
0x400097:	xor	eax, eax
0x400099:	call	0x40000f
<Block for 0x40009e, 9 bytes>
0x40009e:	test	eax, eax
0x4000a0:	setne	al
0x4000a3:	test	al, al
0x4000a5:	je	0x4000b5
<Block for 0x4000b5, 24 bytes>
0x4000b5:	mov	dword ptr [rbp - 0x18], 1
0x4000bc:	mov	dword ptr [rbp - 0x14], 2
0x4000c3:	mov	edi, 8
0x4000c8:	call	0x500000
<Block for 0x4000a7, 12 bytes>
0x4000a7:	lea	rdi, [rip + 0x12b]
0x4000ae:	call	0x500018
<Block for 0x4000cd, 36 bytes>
0x4000cd:	mov	qword ptr [rbp - 0x20], rax
0x4000d1:	mov	rax, qword ptr [rbp - 0x20]
0x4000d5:	mov	rdx, qword ptr [rbp - 0x18]
0x4000d9:	mov	qword ptr [rax], rdx
0x4000dc:	mov	rax, qword ptr [rbp - 0x20]
0x4000e0:	mov	rax, qword ptr [rax]
0x4000e3:	mov	qword ptr [rbp - 0x10], rax
0x4000e7:	mov	eax, dword ptr [rbp - 0x10]
0x4000ea:	mov	edi, eax
0x4000ec:	call	0x500010
<Block for 0x4000b3, 2 bytes>
0x4000b3:	jmp	0x400111
<Block for 0x4000f1, 10 bytes>
0x4000f1:	mov	eax, dword ptr [rbp - 0xc]
0x4000f4:	mov	edi, eax
0x4000f6:	call	0x500010
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x4000fb, 9 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x20]
0x4000ff:	test	rax, rax
0x400102:	je	0x400111
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500020
<Block for 0x400104, 13 bytes>
0x400104:	mov	esi, 8
0x400109:	mov	rdi, rax
0x40010c:	call	0x500008
