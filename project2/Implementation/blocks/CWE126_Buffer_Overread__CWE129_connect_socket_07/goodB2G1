<Block for 0x400171, 49 bytes>
0x400171:	endbr64	
0x400175:	push	rbp
0x400176:	mov	rbp, rsp
0x400179:	sub	rsp, 0x50
0x40017d:	mov	rax, qword ptr fs:[0x28]
0x400186:	mov	qword ptr [rbp - 8], rax
0x40018a:	xor	eax, eax
0x40018c:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400193:	mov	eax, dword ptr [rip + 0x45b]
0x400199:	cmp	eax, 5
0x40019c:	jne	0x400274
<Block for 0x4001a2, 27 bytes>
0x4001a2:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001a9:	mov	edx, 6
0x4001ae:	mov	esi, 1
0x4001b3:	mov	edi, 2
0x4001b8:	call	0x500000
<Block for 0x400274, 11 bytes>
0x400274:	mov	eax, dword ptr [rip + 0x37a]
0x40027a:	cmp	eax, 5
0x40027d:	je	0x40028d
<Block for 0x4001bd, 13 bytes>
0x4001bd:	mov	dword ptr [rbp - 0x48], eax
0x4001c0:	cmp	dword ptr [rbp - 0x48], -1
0x4001c4:	je	0x400260
<Block for 0x40028d, 46 bytes>
0x40028d:	mov	qword ptr [rbp - 0x40], 0
0x400295:	mov	qword ptr [rbp - 0x38], 0
0x40029d:	mov	qword ptr [rbp - 0x30], 0
0x4002a5:	mov	qword ptr [rbp - 0x28], 0
0x4002ad:	mov	qword ptr [rbp - 0x20], 0
0x4002b5:	cmp	dword ptr [rbp - 0x4c], 0
0x4002b9:	js	0x4002d3
<Block for 0x40027f, 12 bytes>
0x40027f:	lea	rdi, [rip + 0x3a1]
0x400286:	call	0x500048
<Block for 0x400260, 3 bytes>
0x400260:	nop	
0x400261:	jmp	0x400264
<Block for 0x4001ca, 22 bytes>
0x4001ca:	lea	rax, [rbp - 0x40]
0x4001ce:	mov	edx, 0x10
0x4001d3:	mov	esi, 0
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500008
<Block for 0x4002d3, 12 bytes>
0x4002d3:	lea	rdi, [rip + 0x366]
0x4002da:	call	0x500048
<Block for 0x4002bb, 6 bytes>
0x4002bb:	cmp	dword ptr [rbp - 0x4c], 9
0x4002bf:	jg	0x4002d3
<Block for 0x40028b, 2 bytes>
0x40028b:	jmp	0x4002df
<Block for 0x400264, 6 bytes>
0x400264:	cmp	dword ptr [rbp - 0x48], -1
0x400268:	je	0x400274
<Block for 0x4001e0, 18 bytes>
0x4001e0:	mov	word ptr [rbp - 0x40], 2
0x4001e6:	lea	rdi, [rip + 0x40b]
0x4001ed:	call	0x500010
<Block for 0x4002df, 16 bytes>
0x4002df:	nop	
0x4002e0:	mov	rax, qword ptr [rbp - 8]
0x4002e4:	xor	rax, qword ptr fs:[0x28]
0x4002ed:	je	0x4002f4
<Block for 0x4002c1, 16 bytes>
0x4002c1:	mov	eax, dword ptr [rbp - 0x4c]
0x4002c4:	cdqe	
0x4002c6:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002ca:	mov	edi, eax
0x4002cc:	call	0x500040
<Block for 0x40026a, 10 bytes>
0x40026a:	mov	eax, dword ptr [rbp - 0x48]
0x40026d:	mov	edi, eax
0x40026f:	call	0x500038
<Block for 0x4001f2, 13 bytes>
0x4001f2:	mov	dword ptr [rbp - 0x3c], eax
0x4001f5:	mov	edi, 0x6987
0x4001fa:	call	0x500018
<Block for 0x4002f4, 2 bytes>
0x4002f4:	leave	
0x4002f5:	ret	
<Block for 0x4002ef, 5 bytes>
0x4002ef:	call	0x500050
<Block for 0x4002d1, 2 bytes>
0x4002d1:	jmp	0x4002df
<Block for 0x4001ff, 26 bytes>
0x4001ff:	mov	word ptr [rbp - 0x3e], ax
0x400203:	lea	rcx, [rbp - 0x40]
0x400207:	mov	eax, dword ptr [rbp - 0x48]
0x40020a:	mov	edx, 0x10
0x40020f:	mov	rsi, rcx
0x400212:	mov	edi, eax
0x400214:	call	0x500020
<Block for 0x400219, 5 bytes>
0x400219:	cmp	eax, -1
0x40021c:	je	0x400263
<Block for 0x40021e, 24 bytes>
0x40021e:	lea	rsi, [rbp - 0x16]
0x400222:	mov	eax, dword ptr [rbp - 0x48]
0x400225:	mov	ecx, 0
0x40022a:	mov	edx, 0xd
0x40022f:	mov	edi, eax
0x400231:	call	0x500028
<Block for 0x400263, 1 bytes>
0x400263:	nop	
<Block for 0x400236, 9 bytes>
0x400236:	mov	dword ptr [rbp - 0x44], eax
0x400239:	cmp	dword ptr [rbp - 0x44], -1
0x40023d:	je	0x400264
<Block for 0x40023f, 6 bytes>
0x40023f:	cmp	dword ptr [rbp - 0x44], 0
0x400243:	je	0x400264
<Block for 0x400245, 22 bytes>
0x400245:	mov	eax, dword ptr [rbp - 0x44]
0x400248:	cdqe	
0x40024a:	mov	byte ptr [rbp + rax - 0x16], 0
0x40024f:	lea	rax, [rbp - 0x16]
0x400253:	mov	rdi, rax
0x400256:	call	0x500030
<Block for 0x40025b, 5 bytes>
0x40025b:	mov	dword ptr [rbp - 0x4c], eax
0x40025e:	jmp	0x400264
