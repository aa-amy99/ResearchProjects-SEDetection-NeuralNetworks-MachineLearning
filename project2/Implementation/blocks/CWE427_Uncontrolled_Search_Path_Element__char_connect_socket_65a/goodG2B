<Block for 0x400240, 96 bytes>
0x400240:	endbr64	
0x400244:	push	rbp
0x400245:	mov	rbp, rsp
0x400248:	sub	rsp, 0x120
0x40024f:	mov	rax, qword ptr fs:[0x28]
0x400258:	mov	qword ptr [rbp - 8], rax
0x40025c:	xor	eax, eax
0x40025e:	mov	rax, qword ptr [rip + 0xffe03]
0x400265:	mov	qword ptr [rbp - 0x120], rax
0x40026c:	movabs	rax, 0x3d48544150
0x400276:	mov	edx, 0
0x40027b:	mov	qword ptr [rbp - 0x110], rax
0x400282:	mov	qword ptr [rbp - 0x108], rdx
0x400289:	lea	rdx, [rbp - 0x100]
0x400290:	mov	eax, 0
0x400295:	mov	ecx, 0x1d
0x40029a:	mov	rdi, rdx
0x40029d:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002a0, 51 bytes>
0x4002a0:	mov	rdx, rdi
0x4002a3:	mov	word ptr [rdx], ax
0x4002a6:	add	rdx, 2
0x4002aa:	lea	rax, [rbp - 0x110]
0x4002b1:	mov	qword ptr [rbp - 0x118], rax
0x4002b8:	mov	rax, qword ptr [rbp - 0x118]
0x4002bf:	mov	rcx, -1
0x4002c6:	mov	rdx, rax
0x4002c9:	mov	eax, 0
0x4002ce:	mov	rdi, rdx
0x4002d1:	repne scasb	al, byte ptr [rdi]
<Block for 0x40029d, 3 bytes>
0x40029d:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002d3, 49 bytes>
0x4002d3:	mov	rax, rcx
0x4002d6:	not	rax
0x4002d9:	lea	rdx, [rax - 1]
0x4002dd:	mov	rax, qword ptr [rbp - 0x118]
0x4002e4:	add	rax, rdx
0x4002e7:	mov	dword ptr [rax], 0x6e69622f
0x4002ed:	mov	byte ptr [rax + 4], 0
0x4002f1:	mov	rax, qword ptr [rbp - 0x118]
0x4002f8:	mov	rdx, qword ptr [rbp - 0x120]
0x4002ff:	mov	rdi, rax
0x400302:	call	rdx
<Block for 0x4002d1, 2 bytes>
0x4002d1:	repne scasb	al, byte ptr [rdi]
<Block for 0x400304, 16 bytes>
0x400304:	nop	
0x400305:	mov	rax, qword ptr [rbp - 8]
0x400309:	xor	rax, qword ptr fs:[0x28]
0x400312:	je	0x400319
<Block for 0x400319, 2 bytes>
0x400319:	leave	
0x40031a:	ret	
<Block for 0x400314, 5 bytes>
0x400314:	call	0x500058
