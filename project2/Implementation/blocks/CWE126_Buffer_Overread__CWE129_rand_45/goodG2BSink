<Block for 0x4000ff, 82 bytes>
0x4000ff:	endbr64	
0x400103:	push	rbp
0x400104:	mov	rbp, rsp
0x400107:	sub	rsp, 0x40
0x40010b:	mov	rax, qword ptr fs:[0x28]
0x400114:	mov	qword ptr [rbp - 8], rax
0x400118:	xor	eax, eax
0x40011a:	mov	eax, dword ptr [rip + 0x1c0]
0x400120:	mov	dword ptr [rbp - 0x34], eax
0x400123:	mov	qword ptr [rbp - 0x30], 0
0x40012b:	mov	qword ptr [rbp - 0x28], 0
0x400133:	mov	qword ptr [rbp - 0x20], 0
0x40013b:	mov	qword ptr [rbp - 0x18], 0
0x400143:	mov	qword ptr [rbp - 0x10], 0
0x40014b:	cmp	dword ptr [rbp - 0x34], 0
0x40014f:	js	0x400163
<Block for 0x400163, 12 bytes>
0x400163:	lea	rdi, [rip + 0x17e]
0x40016a:	call	0x500008
<Block for 0x400151, 16 bytes>
0x400151:	mov	eax, dword ptr [rbp - 0x34]
0x400154:	cdqe	
0x400156:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40015a:	mov	edi, eax
0x40015c:	call	0x500000
<Block for 0x40016f, 16 bytes>
0x40016f:	nop	
0x400170:	mov	rax, qword ptr [rbp - 8]
0x400174:	xor	rax, qword ptr fs:[0x28]
0x40017d:	je	0x400184
<Block for 0x400161, 2 bytes>
0x400161:	jmp	0x40016f
<Block for 0x400184, 2 bytes>
0x400184:	leave	
0x400185:	ret	
<Block for 0x40017f, 5 bytes>
0x40017f:	call	0x500010
