<Block for 0x400243, 25 bytes>
0x400243:	endbr64	
0x400247:	push	rbp
0x400248:	mov	rbp, rsp
0x40024b:	push	rbx
0x40024c:	sub	rsp, 0x18
0x400250:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400257:	call	0x500018
<Block for 0x40025c, 7 bytes>
0x40025c:	and	eax, 1
0x40025f:	test	eax, eax
0x400261:	je	0x400280
<Block for 0x400280, 5 bytes>
0x400280:	call	0x500018
<Block for 0x400263, 5 bytes>
0x400263:	call	0x500018
<Block for 0x400285, 10 bytes>
0x400285:	shl	eax, 0x1e
0x400288:	mov	ebx, eax
0x40028a:	call	0x500018
<Block for 0x400268, 10 bytes>
0x400268:	shl	eax, 0x1e
0x40026b:	mov	ebx, eax
0x40026d:	call	0x500018
<Block for 0x40028f, 10 bytes>
0x40028f:	shl	eax, 0xf
0x400292:	xor	ebx, eax
0x400294:	call	0x500018
<Block for 0x400272, 10 bytes>
0x400272:	shl	eax, 0xf
0x400275:	xor	ebx, eax
0x400277:	call	0x500018
<Block for 0x400299, 26 bytes>
0x400299:	xor	eax, ebx
0x40029b:	not	eax
0x40029d:	mov	dword ptr [rbp - 0x14], eax
0x4002a0:	mov	eax, dword ptr [rbp - 0x14]
0x4002a3:	mov	dword ptr [rip + 0x3b], eax
0x4002a9:	mov	eax, 0
0x4002ae:	call	0x4001b6
<Block for 0x40027c, 4 bytes>
0x40027c:	xor	eax, ebx
0x40027e:	jmp	0x40029d
<Block for 0x4002b3, 8 bytes>
0x4002b3:	nop	
0x4002b4:	add	rsp, 0x18
0x4002b8:	pop	rbx
0x4002b9:	pop	rbp
0x4002ba:	ret	
<Block for 0x40029d, 22 bytes>
0x40029d:	mov	dword ptr [rbp - 0x14], eax
0x4002a0:	mov	eax, dword ptr [rbp - 0x14]
0x4002a3:	mov	dword ptr [rip + 0x3b], eax
0x4002a9:	mov	eax, 0
0x4002ae:	call	0x4001b6
