<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0x197]
0x400021:	cmp	eax, 5
0x400024:	jne	0x40006c
<Block for 0x400026, 70 bytes>
0x400026:	mov	dword ptr [rbp - 0x20], 1
0x40002d:	mov	dword ptr [rbp - 0x1c], 2
0x400034:	mov	dword ptr [rbp - 0x18], 3
0x40003b:	mov	dword ptr [rbp - 0x14], 4
0x400042:	mov	dword ptr [rbp - 0x10], 5
0x400049:	lea	rax, [rbp - 0x20]
0x40004d:	mov	qword ptr [rbp - 0x28], rax
0x400051:	mov	rax, qword ptr [rbp - 0x28]
0x400055:	add	rax, 2
0x400059:	movzx	eax, byte ptr [rax]
0x40005c:	movsx	eax, al
0x40005f:	mov	dword ptr [rbp - 0x2c], eax
0x400062:	mov	eax, dword ptr [rbp - 0x2c]
0x400065:	mov	edi, eax
0x400067:	call	0x500000
<Block for 0x40006c, 16 bytes>
0x40006c:	nop	
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	xor	rax, qword ptr fs:[0x28]
0x40007a:	je	0x400081
<Block for 0x400081, 2 bytes>
0x400081:	leave	
0x400082:	ret	
<Block for 0x40007c, 5 bytes>
0x40007c:	call	0x500008
