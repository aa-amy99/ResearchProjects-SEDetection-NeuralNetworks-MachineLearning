<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0x20c]
0x400024:	cmp	eax, 5
0x400027:	jne	0x400090
<Block for 0x400029, 25 bytes>
0x400029:	lea	rax, [rbp - 0xa0]
0x400030:	mov	edx, 0x95
0x400035:	mov	esi, 0x41
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400090, 16 bytes>
0x400090:	nop	
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	xor	rax, qword ptr fs:[0x28]
0x40009e:	je	0x4000a5
<Block for 0x400042, 16 bytes>
0x400042:	mov	byte ptr [rbp - 0xb], 0
0x400046:	mov	dword ptr [rbp - 0x114], 0
0x400050:	jmp	0x400078
<Block for 0x4000a5, 2 bytes>
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x4000a0, 5 bytes>
0x4000a0:	call	0x500010
<Block for 0x400078, 9 bytes>
0x400078:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007f:	jle	0x400052
<Block for 0x400052, 47 bytes>
0x400052:	mov	eax, dword ptr [rbp - 0x114]
0x400058:	cdqe	
0x40005a:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x400062:	mov	eax, dword ptr [rbp - 0x114]
0x400068:	cdqe	
0x40006a:	mov	byte ptr [rbp + rax - 0x110], dl
0x400071:	add	dword ptr [rbp - 0x114], 1
0x400078:	cmp	dword ptr [rbp - 0x114], 0x62
0x40007f:	jle	0x400052
<Block for 0x400081, 15 bytes>
0x400081:	lea	rax, [rbp - 0x110]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500008
