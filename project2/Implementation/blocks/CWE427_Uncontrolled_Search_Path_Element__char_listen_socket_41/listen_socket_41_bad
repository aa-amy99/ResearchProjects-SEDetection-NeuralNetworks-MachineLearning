<Block for 0x40001f, 82 bytes>
0x40001f:	endbr64	
0x400023:	push	rbp
0x400024:	mov	rbp, rsp
0x400027:	sub	rsp, 0x150
0x40002e:	mov	rax, qword ptr fs:[0x28]
0x400037:	mov	qword ptr [rbp - 8], rax
0x40003b:	xor	eax, eax
0x40003d:	movabs	rax, 0x3d48544150
0x400047:	mov	edx, 0
0x40004c:	mov	qword ptr [rbp - 0x110], rax
0x400053:	mov	qword ptr [rbp - 0x108], rdx
0x40005a:	lea	rdx, [rbp - 0x100]
0x400061:	mov	eax, 0
0x400066:	mov	ecx, 0x1d
0x40006b:	mov	rdi, rdx
0x40006e:	rep stosq	qword ptr [rdi], rax
<Block for 0x400071, 59 bytes>
0x400071:	mov	rdx, rdi
0x400074:	mov	word ptr [rdx], ax
0x400077:	add	rdx, 2
0x40007b:	lea	rax, [rbp - 0x110]
0x400082:	mov	qword ptr [rbp - 0x138], rax
0x400089:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400093:	mov	dword ptr [rbp - 0x144], 0xffffffff
0x40009d:	mov	rax, qword ptr [rbp - 0x138]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500008
<Block for 0x40006e, 3 bytes>
0x40006e:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000ac, 27 bytes>
0x4000ac:	mov	qword ptr [rbp - 0x130], rax
0x4000b3:	mov	edx, 6
0x4000b8:	mov	esi, 1
0x4000bd:	mov	edi, 2
0x4000c2:	call	0x500010
<Block for 0x4000c7, 19 bytes>
0x4000c7:	mov	dword ptr [rbp - 0x140], eax
0x4000cd:	cmp	dword ptr [rbp - 0x140], -1
0x4000d4:	je	0x400254
<Block for 0x400254, 3 bytes>
0x400254:	nop	
0x400255:	jmp	0x40025e
<Block for 0x4000da, 25 bytes>
0x4000da:	lea	rax, [rbp - 0x120]
0x4000e1:	mov	edx, 0x10
0x4000e6:	mov	esi, 0
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500018
<Block for 0x40025e, 9 bytes>
0x40025e:	cmp	dword ptr [rbp - 0x140], -1
0x400265:	je	0x400274
<Block for 0x4000f3, 29 bytes>
0x4000f3:	mov	word ptr [rbp - 0x120], 2
0x4000fc:	mov	dword ptr [rbp - 0x11c], 0
0x400106:	mov	edi, 0x6987
0x40010b:	call	0x500020
<Block for 0x400274, 9 bytes>
0x400274:	cmp	dword ptr [rbp - 0x144], -1
0x40027b:	je	0x40028a
<Block for 0x400267, 13 bytes>
0x400267:	mov	eax, dword ptr [rbp - 0x140]
0x40026d:	mov	edi, eax
0x40026f:	call	0x500050
<Block for 0x400110, 35 bytes>
0x400110:	mov	word ptr [rbp - 0x11e], ax
0x400117:	lea	rcx, [rbp - 0x120]
0x40011e:	mov	eax, dword ptr [rbp - 0x140]
0x400124:	mov	edx, 0x10
0x400129:	mov	rsi, rcx
0x40012c:	mov	edi, eax
0x40012e:	call	0x500028
<Block for 0x40028a, 15 bytes>
0x40028a:	mov	rax, qword ptr [rbp - 0x138]
0x400291:	mov	rdi, rax
0x400294:	call	0x400000
<Block for 0x40027d, 13 bytes>
0x40027d:	mov	eax, dword ptr [rbp - 0x144]
0x400283:	mov	edi, eax
0x400285:	call	0x500050
<Block for 0x400133, 9 bytes>
0x400133:	cmp	eax, -1
0x400136:	je	0x400257
<Block for 0x400299, 16 bytes>
0x400299:	nop	
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	xor	rax, qword ptr fs:[0x28]
0x4002a7:	je	0x4002ae
<Block for 0x400257, 3 bytes>
0x400257:	nop	
0x400258:	jmp	0x40025e
<Block for 0x40013c, 18 bytes>
0x40013c:	mov	eax, dword ptr [rbp - 0x140]
0x400142:	mov	esi, 5
0x400147:	mov	edi, eax
0x400149:	call	0x500030
<Block for 0x4002ae, 2 bytes>
0x4002ae:	leave	
0x4002af:	ret	
<Block for 0x4002a9, 5 bytes>
0x4002a9:	call	0x500058
<Block for 0x40014e, 9 bytes>
0x40014e:	cmp	eax, -1
0x400151:	je	0x40025a
<Block for 0x40025a, 3 bytes>
0x40025a:	nop	
0x40025b:	jmp	0x40025e
<Block for 0x400157, 23 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x140]
0x40015d:	mov	edx, 0
0x400162:	mov	esi, 0
0x400167:	mov	edi, eax
0x400169:	call	0x500038
<Block for 0x40016e, 19 bytes>
0x40016e:	mov	dword ptr [rbp - 0x144], eax
0x400174:	cmp	dword ptr [rbp - 0x144], -1
0x40017b:	je	0x40025d
<Block for 0x400181, 51 bytes>
0x400181:	mov	eax, 0xf9
0x400186:	sub	rax, qword ptr [rbp - 0x130]
0x40018d:	mov	rdx, rax
0x400190:	mov	rcx, qword ptr [rbp - 0x138]
0x400197:	mov	rax, qword ptr [rbp - 0x130]
0x40019e:	lea	rsi, [rcx + rax]
0x4001a2:	mov	eax, dword ptr [rbp - 0x144]
0x4001a8:	mov	ecx, 0
0x4001ad:	mov	edi, eax
0x4001af:	call	0x500040
<Block for 0x40025d, 1 bytes>
0x40025d:	nop	
<Block for 0x4001b4, 19 bytes>
0x4001b4:	mov	dword ptr [rbp - 0x13c], eax
0x4001ba:	cmp	dword ptr [rbp - 0x13c], -1
0x4001c1:	je	0x40025e
<Block for 0x4001c7, 13 bytes>
0x4001c7:	cmp	dword ptr [rbp - 0x13c], 0
0x4001ce:	je	0x40025e
<Block for 0x4001d4, 52 bytes>
0x4001d4:	mov	eax, dword ptr [rbp - 0x13c]
0x4001da:	movsxd	rdx, eax
0x4001dd:	mov	rax, qword ptr [rbp - 0x130]
0x4001e4:	add	rdx, rax
0x4001e7:	mov	rax, qword ptr [rbp - 0x138]
0x4001ee:	add	rax, rdx
0x4001f1:	mov	byte ptr [rax], 0
0x4001f4:	mov	rax, qword ptr [rbp - 0x138]
0x4001fb:	mov	esi, 0xd
0x400200:	mov	rdi, rax
0x400203:	call	0x500048
<Block for 0x400208, 17 bytes>
0x400208:	mov	qword ptr [rbp - 0x128], rax
0x40020f:	cmp	qword ptr [rbp - 0x128], 0
0x400217:	je	0x400223
<Block for 0x400223, 20 bytes>
0x400223:	mov	rax, qword ptr [rbp - 0x138]
0x40022a:	mov	esi, 0xa
0x40022f:	mov	rdi, rax
0x400232:	call	0x500048
<Block for 0x400219, 30 bytes>
0x400219:	mov	rax, qword ptr [rbp - 0x128]
0x400220:	mov	byte ptr [rax], 0
0x400223:	mov	rax, qword ptr [rbp - 0x138]
0x40022a:	mov	esi, 0xa
0x40022f:	mov	rdi, rax
0x400232:	call	0x500048
<Block for 0x400237, 17 bytes>
0x400237:	mov	qword ptr [rbp - 0x128], rax
0x40023e:	cmp	qword ptr [rbp - 0x128], 0
0x400246:	je	0x40025e
<Block for 0x400248, 12 bytes>
0x400248:	mov	rax, qword ptr [rbp - 0x128]
0x40024f:	mov	byte ptr [rax], 0
0x400252:	jmp	0x40025e
