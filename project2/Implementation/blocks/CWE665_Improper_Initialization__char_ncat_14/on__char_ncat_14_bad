<Block for 0x400000, 66 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	lea	rax, [rbp - 0x70]
0x400030:	mov	edx, 0x63
0x400035:	mov	esi, 0x43
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500000
<Block for 0x400042, 16 bytes>
0x400042:	mov	byte ptr [rbp - 0xd], 0
0x400046:	lea	rax, [rbp - 0x70]
0x40004a:	mov	rdi, rax
0x40004d:	call	0x500008
<Block for 0x400052, 36 bytes>
0x400052:	mov	qword ptr [rbp - 0xe8], rax
0x400059:	mov	rdx, qword ptr [rbp - 0xe8]
0x400060:	lea	rcx, [rbp - 0x70]
0x400064:	mov	rax, qword ptr [rbp - 0xf0]
0x40006b:	mov	rsi, rcx
0x40006e:	mov	rdi, rax
0x400071:	call	0x500010
<Block for 0x400076, 15 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0xf0]
0x40007d:	mov	rdi, rax
0x400080:	call	0x500018
<Block for 0x400085, 16 bytes>
0x400085:	nop	
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	xor	rax, qword ptr fs:[0x28]
0x400093:	je	0x40009a
<Block for 0x40009a, 2 bytes>
0x40009a:	leave	
0x40009b:	ret	
<Block for 0x400095, 5 bytes>
0x400095:	call	0x500020
