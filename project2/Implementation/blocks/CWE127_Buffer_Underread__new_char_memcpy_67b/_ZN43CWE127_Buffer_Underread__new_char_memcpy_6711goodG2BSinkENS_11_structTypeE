<Block for 0x4000e9, 74 bytes>
0x4000e9:	endbr64	
0x4000ed:	push	rbp
0x4000ee:	mov	rbp, rsp
0x4000f1:	push	rbx
0x4000f2:	sub	rsp, 0x98
0x4000f9:	mov	qword ptr [rbp - 0x98], rdi
0x400100:	mov	rax, qword ptr fs:[0x28]
0x400109:	mov	qword ptr [rbp - 0x18], rax
0x40010d:	xor	eax, eax
0x40010f:	mov	rax, qword ptr [rbp - 0x98]
0x400116:	mov	qword ptr [rbp - 0x88], rax
0x40011d:	lea	rax, [rbp - 0x80]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x400133, 128 bytes>
0x400133:	mov	byte ptr [rbp - 0x1d], 0
0x400137:	mov	rax, qword ptr [rbp - 0x88]
0x40013e:	mov	rcx, qword ptr [rax]
0x400141:	mov	rbx, qword ptr [rax + 8]
0x400145:	mov	qword ptr [rbp - 0x80], rcx
0x400149:	mov	qword ptr [rbp - 0x78], rbx
0x40014d:	mov	rcx, qword ptr [rax + 0x10]
0x400151:	mov	rbx, qword ptr [rax + 0x18]
0x400155:	mov	qword ptr [rbp - 0x70], rcx
0x400159:	mov	qword ptr [rbp - 0x68], rbx
0x40015d:	mov	rcx, qword ptr [rax + 0x20]
0x400161:	mov	rbx, qword ptr [rax + 0x28]
0x400165:	mov	qword ptr [rbp - 0x60], rcx
0x400169:	mov	qword ptr [rbp - 0x58], rbx
0x40016d:	mov	rcx, qword ptr [rax + 0x30]
0x400171:	mov	rbx, qword ptr [rax + 0x38]
0x400175:	mov	qword ptr [rbp - 0x50], rcx
0x400179:	mov	qword ptr [rbp - 0x48], rbx
0x40017d:	mov	rcx, qword ptr [rax + 0x40]
0x400181:	mov	rbx, qword ptr [rax + 0x48]
0x400185:	mov	qword ptr [rbp - 0x40], rcx
0x400189:	mov	qword ptr [rbp - 0x38], rbx
0x40018d:	mov	rcx, qword ptr [rax + 0x50]
0x400191:	mov	rbx, qword ptr [rax + 0x58]
0x400195:	mov	qword ptr [rbp - 0x30], rcx
0x400199:	mov	qword ptr [rbp - 0x28], rbx
0x40019d:	mov	eax, dword ptr [rax + 0x60]
0x4001a0:	mov	dword ptr [rbp - 0x20], eax
0x4001a3:	mov	byte ptr [rbp - 0x1d], 0
0x4001a7:	lea	rax, [rbp - 0x80]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500008
<Block for 0x4001b3, 16 bytes>
0x4001b3:	nop	
0x4001b4:	mov	rax, qword ptr [rbp - 0x18]
0x4001b8:	xor	rax, qword ptr fs:[0x28]
0x4001c1:	je	0x4001c8
<Block for 0x4001c8, 10 bytes>
0x4001c8:	add	rsp, 0x98
0x4001cf:	pop	rbx
0x4001d0:	pop	rbp
0x4001d1:	ret	
<Block for 0x4001c3, 5 bytes>
0x4001c3:	call	0x500010
