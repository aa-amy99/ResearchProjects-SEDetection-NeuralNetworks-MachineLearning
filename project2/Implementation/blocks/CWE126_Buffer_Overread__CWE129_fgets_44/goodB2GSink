<Block for 0x4001d3, 76 bytes>
0x4001d3:	endbr64	
0x4001d7:	push	rbp
0x4001d8:	mov	rbp, rsp
0x4001db:	sub	rsp, 0x40
0x4001df:	mov	dword ptr [rbp - 0x34], edi
0x4001e2:	mov	rax, qword ptr fs:[0x28]
0x4001eb:	mov	qword ptr [rbp - 8], rax
0x4001ef:	xor	eax, eax
0x4001f1:	mov	qword ptr [rbp - 0x30], 0
0x4001f9:	mov	qword ptr [rbp - 0x28], 0
0x400201:	mov	qword ptr [rbp - 0x20], 0
0x400209:	mov	qword ptr [rbp - 0x18], 0
0x400211:	mov	qword ptr [rbp - 0x10], 0
0x400219:	cmp	dword ptr [rbp - 0x34], 0
0x40021d:	js	0x400237
<Block for 0x400237, 12 bytes>
0x400237:	lea	rdi, [rip + 0x10a]
0x40023e:	call	0x500008
<Block for 0x40021f, 6 bytes>
0x40021f:	cmp	dword ptr [rbp - 0x34], 9
0x400223:	jg	0x400237
<Block for 0x400243, 16 bytes>
0x400243:	nop	
0x400244:	mov	rax, qword ptr [rbp - 8]
0x400248:	xor	rax, qword ptr fs:[0x28]
0x400251:	je	0x400258
<Block for 0x400225, 16 bytes>
0x400225:	mov	eax, dword ptr [rbp - 0x34]
0x400228:	cdqe	
0x40022a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40022e:	mov	edi, eax
0x400230:	call	0x500000
<Block for 0x400258, 2 bytes>
0x400258:	leave	
0x400259:	ret	
<Block for 0x400253, 5 bytes>
0x400253:	call	0x500010
<Block for 0x400235, 2 bytes>
0x400235:	jmp	0x400243
