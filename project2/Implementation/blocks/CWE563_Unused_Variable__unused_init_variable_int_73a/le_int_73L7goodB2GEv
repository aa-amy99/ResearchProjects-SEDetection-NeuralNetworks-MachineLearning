<Block for 0x4000f0, 40 bytes>
0x4000f0:	endbr64	
0x4000f4:	push	rbp
0x4000f5:	mov	rbp, rsp
0x4000f8:	push	rbx
0x4000f9:	sub	rsp, 0x58
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 0x18], rax
0x40010a:	xor	eax, eax
0x40010c:	lea	rax, [rbp - 0x50]
0x400110:	mov	rdi, rax
0x400113:	call	0x40029e
<Block for 0x400118, 26 bytes>
0x400118:	mov	dword ptr [rbp - 0x54], 5
0x40011f:	lea	rdx, [rbp - 0x54]
0x400123:	lea	rax, [rbp - 0x50]
0x400127:	mov	rsi, rdx
0x40012a:	mov	rdi, rax
0x40012d:	call	0x400394
<Block for 0x400132, 19 bytes>
0x400132:	lea	rdx, [rbp - 0x54]
0x400136:	lea	rax, [rbp - 0x50]
0x40013a:	mov	rsi, rdx
0x40013d:	mov	rdi, rax
0x400140:	call	0x400394
<Block for 0x400145, 19 bytes>
0x400145:	lea	rdx, [rbp - 0x54]
0x400149:	lea	rax, [rbp - 0x50]
0x40014d:	mov	rsi, rdx
0x400150:	mov	rdi, rax
0x400153:	call	0x400394
<Block for 0x400158, 19 bytes>
0x400158:	lea	rdx, [rbp - 0x50]
0x40015c:	lea	rax, [rbp - 0x30]
0x400160:	mov	rsi, rdx
0x400163:	mov	rdi, rax
0x400166:	call	0x4003ce
<Block for 0x40016b, 12 bytes>
0x40016b:	lea	rax, [rbp - 0x30]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500018
<Block for 0x400177, 12 bytes>
0x400177:	lea	rax, [rbp - 0x30]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x4002be
<Block for 0x400183, 12 bytes>
0x400183:	lea	rax, [rbp - 0x50]
0x400187:	mov	rdi, rax
0x40018a:	call	0x4002be
<Block for 0x40018f, 16 bytes>
0x40018f:	nop	
0x400190:	mov	rax, qword ptr [rbp - 0x18]
0x400194:	xor	rax, qword ptr fs:[0x28]
0x40019d:	je	0x4001d9
<Block for 0x4001d9, 7 bytes>
0x4001d9:	add	rsp, 0x58
0x4001dd:	pop	rbx
0x4001de:	pop	rbp
0x4001df:	ret	
<Block for 0x40019f, 2 bytes>
0x40019f:	jmp	0x4001d4
<Block for 0x4001d4, 5 bytes>
0x4001d4:	call	0x500010
