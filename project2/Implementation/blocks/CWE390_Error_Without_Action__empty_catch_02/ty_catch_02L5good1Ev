<Block for 0x40012d, 42 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	r12
0x400137:	push	rbx
0x400138:	sub	rsp, 0x60
0x40013c:	mov	rax, qword ptr fs:[0x28]
0x400145:	mov	qword ptr [rbp - 0x18], rax
0x400149:	xor	eax, eax
0x40014b:	lea	rax, [rbp - 0x69]
0x40014f:	mov	rdi, rax
0x400152:	call	0x500000
<Block for 0x400157, 23 bytes>
0x400157:	lea	rdx, [rbp - 0x69]
0x40015b:	lea	rax, [rbp - 0x60]
0x40015f:	lea	rsi, [rip + 0x2fc]
0x400166:	mov	rdi, rax
0x400169:	call	0x500008
<Block for 0x40016e, 12 bytes>
0x40016e:	lea	rax, [rbp - 0x69]
0x400172:	mov	rdi, rax
0x400175:	call	0x500010
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500018
<Block for 0x40017f, 8 bytes>
0x40017f:	movsxd	rbx, eax
0x400182:	call	0x500018
<Block for 0x400187, 22 bytes>
0x400187:	movsxd	rdx, eax
0x40018a:	lea	rax, [rbp - 0x40]
0x40018e:	lea	rsi, [rbp - 0x60]
0x400192:	mov	rcx, rbx
0x400195:	mov	rdi, rax
0x400198:	call	0x500020
<Block for 0x40019d, 12 bytes>
0x40019d:	lea	rax, [rbp - 0x40]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500028
<Block for 0x4001a9, 8 bytes>
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500030
<Block for 0x4001b1, 12 bytes>
0x4001b1:	lea	rax, [rbp - 0x40]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500038
<Block for 0x4001bd, 12 bytes>
0x4001bd:	lea	rax, [rbp - 0x60]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500038
<Block for 0x4001c9, 20 bytes>
0x4001c9:	nop	
0x4001ca:	mov	rax, qword ptr [rbp - 0x18]
0x4001ce:	xor	rax, qword ptr fs:[0x28]
0x4001d7:	je	0x400280
<Block for 0x400280, 9 bytes>
0x400280:	add	rsp, 0x60
0x400284:	pop	rbx
0x400285:	pop	r12
0x400287:	pop	rbp
0x400288:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	jmp	0x40027b
<Block for 0x40027b, 5 bytes>
0x40027b:	call	0x500058
