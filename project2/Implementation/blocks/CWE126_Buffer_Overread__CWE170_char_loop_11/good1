<Block for 0x4000aa, 40 bytes>
0x4000aa:	endbr64	
0x4000ae:	push	rbp
0x4000af:	mov	rbp, rsp
0x4000b2:	sub	rsp, 0x120
0x4000b9:	mov	rax, qword ptr fs:[0x28]
0x4000c2:	mov	qword ptr [rbp - 8], rax
0x4000c6:	xor	eax, eax
0x4000c8:	mov	eax, 0
0x4000cd:	call	0x500020
<Block for 0x4000d2, 4 bytes>
0x4000d2:	test	eax, eax
0x4000d4:	je	0x4000e4
<Block for 0x4000e4, 25 bytes>
0x4000e4:	lea	rax, [rbp - 0xa0]
0x4000eb:	mov	edx, 0x95
0x4000f0:	mov	esi, 0x41
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x500008
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0x15c]
0x4000dd:	call	0x500010
<Block for 0x4000fd, 16 bytes>
0x4000fd:	mov	byte ptr [rbp - 0xb], 0
0x400101:	mov	dword ptr [rbp - 0x114], 0
0x40010b:	jmp	0x400133
<Block for 0x4000e2, 2 bytes>
0x4000e2:	jmp	0x400152
<Block for 0x400133, 9 bytes>
0x400133:	cmp	dword ptr [rbp - 0x114], 0x62
0x40013a:	jle	0x40010d
<Block for 0x400152, 16 bytes>
0x400152:	nop	
0x400153:	mov	rax, qword ptr [rbp - 8]
0x400157:	xor	rax, qword ptr fs:[0x28]
0x400160:	je	0x400167
<Block for 0x40010d, 47 bytes>
0x40010d:	mov	eax, dword ptr [rbp - 0x114]
0x400113:	cdqe	
0x400115:	movzx	edx, byte ptr [rbp + rax - 0xa0]
0x40011d:	mov	eax, dword ptr [rbp - 0x114]
0x400123:	cdqe	
0x400125:	mov	byte ptr [rbp + rax - 0x110], dl
0x40012c:	add	dword ptr [rbp - 0x114], 1
0x400133:	cmp	dword ptr [rbp - 0x114], 0x62
0x40013a:	jle	0x40010d
<Block for 0x40013c, 22 bytes>
0x40013c:	mov	byte ptr [rbp - 0xad], 0
0x400143:	lea	rax, [rbp - 0x110]
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500010
<Block for 0x400167, 2 bytes>
0x400167:	leave	
0x400168:	ret	
<Block for 0x400162, 5 bytes>
0x400162:	call	0x500018
