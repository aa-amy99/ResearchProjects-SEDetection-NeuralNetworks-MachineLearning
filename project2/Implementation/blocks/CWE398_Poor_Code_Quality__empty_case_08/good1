<Block for 0x400081, 22 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x10
0x40008d:	mov	eax, 0
0x400092:	call	0x40000f
<Block for 0x400097, 4 bytes>
0x400097:	test	eax, eax
0x400099:	je	0x4000a9
<Block for 0x4000a9, 5 bytes>
0x4000a9:	call	0x500000
<Block for 0x40009b, 12 bytes>
0x40009b:	lea	rdi, [rip + 0x101]
0x4000a2:	call	0x500008
<Block for 0x4000ae, 55 bytes>
0x4000ae:	mov	edx, eax
0x4000b0:	movsxd	rax, edx
0x4000b3:	imul	rax, rax, 0x55555556
0x4000ba:	shr	rax, 0x20
0x4000be:	mov	rcx, rax
0x4000c1:	mov	eax, edx
0x4000c3:	sar	eax, 0x1f
0x4000c6:	mov	esi, ecx
0x4000c8:	sub	esi, eax
0x4000ca:	mov	eax, esi
0x4000cc:	mov	dword ptr [rbp - 4], eax
0x4000cf:	mov	ecx, dword ptr [rbp - 4]
0x4000d2:	mov	eax, ecx
0x4000d4:	add	eax, eax
0x4000d6:	add	eax, ecx
0x4000d8:	sub	edx, eax
0x4000da:	mov	eax, edx
0x4000dc:	mov	dword ptr [rbp - 4], eax
0x4000df:	cmp	dword ptr [rbp - 4], 0
0x4000e3:	jne	0x4000f2
<Block for 0x4000a7, 2 bytes>
0x4000a7:	jmp	0x4000fe
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rdi, [rip + 0xcc]
0x4000ec:	call	0x500008
<Block for 0x4000f2, 12 bytes>
0x4000f2:	lea	rdi, [rip + 0xd9]
0x4000f9:	call	0x500008
<Block for 0x4000fe, 3 bytes>
0x4000fe:	nop	
0x4000ff:	leave	
0x400100:	ret	
<Block for 0x4000f1, 1 bytes>
0x4000f1:	nop	
