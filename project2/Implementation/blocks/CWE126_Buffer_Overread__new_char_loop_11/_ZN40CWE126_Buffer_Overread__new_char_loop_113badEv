<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	call	0x500000
<Block for 0x40002e, 9 bytes>
0x40002e:	test	eax, eax
0x400030:	setne	al
0x400033:	test	al, al
0x400035:	je	0x40006f
<Block for 0x40006f, 22 bytes>
0x40006f:	lea	rax, [rbp - 0x70]
0x400073:	mov	edx, 0x63
0x400078:	mov	esi, 0x43
0x40007d:	mov	rdi, rax
0x400080:	call	0x500010
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x32
0x40003c:	call	0x500008
<Block for 0x400085, 16 bytes>
0x400085:	mov	byte ptr [rbp - 0xd], 0
0x400089:	lea	rax, [rbp - 0x70]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500018
<Block for 0x400041, 32 bytes>
0x400041:	mov	qword ptr [rbp - 0x88], rax
0x400048:	mov	rax, qword ptr [rbp - 0x88]
0x40004f:	mov	edx, 0x31
0x400054:	mov	esi, 0x41
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x400095, 22 bytes>
0x400095:	mov	qword ptr [rbp - 0x78], rax
0x400099:	mov	qword ptr [rbp - 0x80], 0
0x4000a1:	mov	rax, qword ptr [rbp - 0x80]
0x4000a5:	cmp	rax, qword ptr [rbp - 0x78]
0x4000a9:	jae	0x4000d0
<Block for 0x400061, 36 bytes>
0x400061:	mov	rax, qword ptr [rbp - 0x88]
0x400068:	add	rax, 0x31
0x40006c:	mov	byte ptr [rax], 0
0x40006f:	lea	rax, [rbp - 0x70]
0x400073:	mov	edx, 0x63
0x400078:	mov	esi, 0x43
0x40007d:	mov	rdi, rax
0x400080:	call	0x500010
<Block for 0x4000ab, 37 bytes>
0x4000ab:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b2:	mov	rax, qword ptr [rbp - 0x80]
0x4000b6:	add	rax, rdx
0x4000b9:	movzx	eax, byte ptr [rax]
0x4000bc:	lea	rcx, [rbp - 0x70]
0x4000c0:	mov	rdx, qword ptr [rbp - 0x80]
0x4000c4:	add	rdx, rcx
0x4000c7:	mov	byte ptr [rdx], al
0x4000c9:	add	qword ptr [rbp - 0x80], 1
0x4000ce:	jmp	0x4000a1
<Block for 0x4000d0, 16 bytes>
0x4000d0:	mov	byte ptr [rbp - 0xd], 0
0x4000d4:	lea	rax, [rbp - 0x70]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500020
<Block for 0x4000a1, 10 bytes>
0x4000a1:	mov	rax, qword ptr [rbp - 0x80]
0x4000a5:	cmp	rax, qword ptr [rbp - 0x78]
0x4000a9:	jae	0x4000d0
<Block for 0x4000e0, 10 bytes>
0x4000e0:	cmp	qword ptr [rbp - 0x88], 0
0x4000e8:	je	0x4000f9
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x4000ea, 15 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 0x88]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500028
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500030
