<Block for 0x400110, 46 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0x90
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	mov	qword ptr [rbp - 0x88], 0
0x400139:	call	0x500038
<Block for 0x40013e, 9 bytes>
0x40013e:	test	eax, eax
0x400140:	setne	al
0x400143:	test	al, al
0x400145:	je	0x400155
<Block for 0x400155, 10 bytes>
0x400155:	mov	edi, 0x64
0x40015a:	call	0x500008
<Block for 0x400147, 12 bytes>
0x400147:	lea	rdi, [rip + 0x205]
0x40014e:	call	0x500020
<Block for 0x40015f, 32 bytes>
0x40015f:	mov	qword ptr [rbp - 0x88], rax
0x400166:	mov	rax, qword ptr [rbp - 0x88]
0x40016d:	mov	edx, 0x63
0x400172:	mov	esi, 0x41
0x400177:	mov	rdi, rax
0x40017a:	call	0x500010
<Block for 0x400153, 2 bytes>
0x400153:	jmp	0x40018d
<Block for 0x40017f, 36 bytes>
0x40017f:	mov	rax, qword ptr [rbp - 0x88]
0x400186:	add	rax, 0x63
0x40018a:	mov	byte ptr [rax], 0
0x40018d:	lea	rax, [rbp - 0x70]
0x400191:	mov	edx, 0x63
0x400196:	mov	esi, 0x43
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500010
<Block for 0x40018d, 22 bytes>
0x40018d:	lea	rax, [rbp - 0x70]
0x400191:	mov	edx, 0x63
0x400196:	mov	esi, 0x43
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500010
<Block for 0x4001a3, 16 bytes>
0x4001a3:	mov	byte ptr [rbp - 0xd], 0
0x4001a7:	lea	rax, [rbp - 0x70]
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x500018
<Block for 0x4001b3, 22 bytes>
0x4001b3:	mov	qword ptr [rbp - 0x78], rax
0x4001b7:	mov	qword ptr [rbp - 0x80], 0
0x4001bf:	mov	rax, qword ptr [rbp - 0x80]
0x4001c3:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c7:	jae	0x4001ee
<Block for 0x4001c9, 37 bytes>
0x4001c9:	mov	rdx, qword ptr [rbp - 0x88]
0x4001d0:	mov	rax, qword ptr [rbp - 0x80]
0x4001d4:	add	rax, rdx
0x4001d7:	movzx	eax, byte ptr [rax]
0x4001da:	lea	rcx, [rbp - 0x70]
0x4001de:	mov	rdx, qword ptr [rbp - 0x80]
0x4001e2:	add	rdx, rcx
0x4001e5:	mov	byte ptr [rdx], al
0x4001e7:	add	qword ptr [rbp - 0x80], 1
0x4001ec:	jmp	0x4001bf
<Block for 0x4001ee, 16 bytes>
0x4001ee:	mov	byte ptr [rbp - 0xd], 0
0x4001f2:	lea	rax, [rbp - 0x70]
0x4001f6:	mov	rdi, rax
0x4001f9:	call	0x500020
<Block for 0x4001bf, 10 bytes>
0x4001bf:	mov	rax, qword ptr [rbp - 0x80]
0x4001c3:	cmp	rax, qword ptr [rbp - 0x78]
0x4001c7:	jae	0x4001ee
<Block for 0x4001fe, 10 bytes>
0x4001fe:	cmp	qword ptr [rbp - 0x88], 0
0x400206:	je	0x400217
<Block for 0x400217, 16 bytes>
0x400217:	nop	
0x400218:	mov	rax, qword ptr [rbp - 8]
0x40021c:	xor	rax, qword ptr fs:[0x28]
0x400225:	je	0x40022c
<Block for 0x400208, 15 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0x88]
0x40020f:	mov	rdi, rax
0x400212:	call	0x500028
<Block for 0x40022c, 2 bytes>
0x40022c:	leave	
0x40022d:	ret	
<Block for 0x400227, 5 bytes>
0x400227:	call	0x500030
