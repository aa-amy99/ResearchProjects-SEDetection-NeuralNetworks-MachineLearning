<Block for 0x400374, 204 bytes>
0x400374:	endbr64	
0x400378:	push	rbp
0x400379:	mov	rbp, rsp
0x40037c:	sub	rsp, 0xb0
0x400383:	mov	rax, qword ptr fs:[0x28]
0x40038c:	mov	qword ptr [rbp - 8], rax
0x400390:	xor	eax, eax
0x400392:	lea	rax, [rbp - 0xa0]
0x400399:	mov	qword ptr [rbp - 0x98], rax
0x4003a0:	lea	rax, [rbp - 0xa0]
0x4003a7:	mov	qword ptr [rbp - 0x90], rax
0x4003ae:	mov	qword ptr [rbp - 0x70], 0
0x4003b6:	mov	qword ptr [rbp - 0x68], 0
0x4003be:	mov	qword ptr [rbp - 0x60], 0
0x4003c6:	mov	qword ptr [rbp - 0x58], 0
0x4003ce:	mov	qword ptr [rbp - 0x50], 0
0x4003d6:	mov	qword ptr [rbp - 0x48], 0
0x4003de:	mov	qword ptr [rbp - 0x40], 0
0x4003e6:	mov	qword ptr [rbp - 0x38], 0
0x4003ee:	mov	qword ptr [rbp - 0x30], 0
0x4003f6:	mov	qword ptr [rbp - 0x28], 0
0x4003fe:	mov	qword ptr [rbp - 0x20], 0
0x400406:	mov	qword ptr [rbp - 0x18], 0
0x40040e:	mov	dword ptr [rbp - 0x10], 0
0x400415:	lea	rax, [rbp - 0x70]
0x400419:	mov	qword ptr [rbp - 0xa0], rax
0x400420:	mov	rax, qword ptr [rbp - 0x98]
0x400427:	mov	rax, qword ptr [rax]
0x40042a:	mov	qword ptr [rbp - 0x88], rax
0x400431:	mov	rax, qword ptr [rbp - 0x88]
0x400438:	mov	rdi, rax
0x40043b:	call	0x500000
<Block for 0x400440, 23 bytes>
0x400440:	mov	qword ptr [rbp - 0x80], rax
0x400444:	mov	eax, 0x64
0x400449:	sub	rax, qword ptr [rbp - 0x80]
0x40044d:	cmp	rax, 1
0x400451:	jbe	0x4004f2
<Block for 0x4004f2, 62 bytes>
0x4004f2:	mov	rax, qword ptr [rbp - 0x98]
0x4004f9:	mov	rdx, qword ptr [rbp - 0x88]
0x400500:	mov	qword ptr [rax], rdx
0x400503:	mov	rax, qword ptr [rbp - 0x90]
0x40050a:	mov	rax, qword ptr [rax]
0x40050d:	mov	qword ptr [rbp - 0x78], rax
0x400511:	lea	rdx, [rbp - 0xac]
0x400518:	mov	rax, qword ptr [rbp - 0x78]
0x40051c:	lea	rsi, [rip + 0xa3]
0x400523:	mov	rdi, rax
0x400526:	mov	eax, 0
0x40052b:	call	0x500020
<Block for 0x400457, 47 bytes>
0x400457:	mov	rax, qword ptr [rip + 0xffbaa]
0x40045e:	mov	rdx, qword ptr [rbp - 0x80]
0x400462:	mov	ecx, 0x64
0x400467:	sub	ecx, edx
0x400469:	mov	edx, ecx
0x40046b:	mov	esi, edx
0x40046d:	mov	rcx, qword ptr [rbp - 0x88]
0x400474:	mov	rdx, qword ptr [rbp - 0x80]
0x400478:	add	rcx, rdx
0x40047b:	mov	rdx, rax
0x40047e:	mov	rdi, rcx
0x400481:	call	0x500010
<Block for 0x400530, 5 bytes>
0x400530:	cmp	eax, 1
0x400533:	jne	0x400581
<Block for 0x400486, 5 bytes>
0x400486:	test	rax, rax
0x400489:	je	0x4004d5
<Block for 0x400535, 13 bytes>
0x400535:	mov	eax, dword ptr [rbp - 0xac]
0x40053b:	cmp	eax, 0x270f
0x400540:	jg	0x400581
<Block for 0x400581, 16 bytes>
0x400581:	nop	
0x400582:	mov	rax, qword ptr [rbp - 8]
0x400586:	xor	rax, qword ptr fs:[0x28]
0x40058f:	je	0x400596
<Block for 0x4004d5, 12 bytes>
0x4004d5:	lea	rdi, [rip + 0xdb]
0x4004dc:	call	0x500018
<Block for 0x40048b, 15 bytes>
0x40048b:	mov	rax, qword ptr [rbp - 0x88]
0x400492:	mov	rdi, rax
0x400495:	call	0x500000
<Block for 0x400542, 22 bytes>
0x400542:	mov	dword ptr [rbp - 0xa4], 0
0x40054c:	mov	dword ptr [rbp - 0xa8], 0
0x400556:	jmp	0x400566
<Block for 0x400596, 2 bytes>
0x400596:	leave	
0x400597:	ret	
<Block for 0x400591, 5 bytes>
0x400591:	call	0x500030
<Block for 0x4004e1, 79 bytes>
0x4004e1:	mov	rdx, qword ptr [rbp - 0x88]
0x4004e8:	mov	rax, qword ptr [rbp - 0x80]
0x4004ec:	add	rax, rdx
0x4004ef:	mov	byte ptr [rax], 0
0x4004f2:	mov	rax, qword ptr [rbp - 0x98]
0x4004f9:	mov	rdx, qword ptr [rbp - 0x88]
0x400500:	mov	qword ptr [rax], rdx
0x400503:	mov	rax, qword ptr [rbp - 0x90]
0x40050a:	mov	rax, qword ptr [rax]
0x40050d:	mov	qword ptr [rbp - 0x78], rax
0x400511:	lea	rdx, [rbp - 0xac]
0x400518:	mov	rax, qword ptr [rbp - 0x78]
0x40051c:	lea	rsi, [rip + 0xa3]
0x400523:	mov	rdi, rax
0x400526:	mov	eax, 0
0x40052b:	call	0x500020
<Block for 0x40049a, 11 bytes>
0x40049a:	mov	qword ptr [rbp - 0x80], rax
0x40049e:	cmp	qword ptr [rbp - 0x80], 0
0x4004a3:	je	0x4004f2
<Block for 0x400566, 14 bytes>
0x400566:	mov	eax, dword ptr [rbp - 0xac]
0x40056c:	cmp	dword ptr [rbp - 0xa8], eax
0x400572:	jl	0x400558
<Block for 0x4004a5, 25 bytes>
0x4004a5:	mov	rax, qword ptr [rbp - 0x80]
0x4004a9:	lea	rdx, [rax - 1]
0x4004ad:	mov	rax, qword ptr [rbp - 0x88]
0x4004b4:	add	rax, rdx
0x4004b7:	movzx	eax, byte ptr [rax]
0x4004ba:	cmp	al, 0xa
0x4004bc:	jne	0x4004f2
<Block for 0x400558, 28 bytes>
0x400558:	add	dword ptr [rbp - 0xa4], 1
0x40055f:	add	dword ptr [rbp - 0xa8], 1
0x400566:	mov	eax, dword ptr [rbp - 0xac]
0x40056c:	cmp	dword ptr [rbp - 0xa8], eax
0x400572:	jl	0x400558
<Block for 0x400574, 13 bytes>
0x400574:	mov	eax, dword ptr [rbp - 0xa4]
0x40057a:	mov	edi, eax
0x40057c:	call	0x500028
<Block for 0x4004be, 23 bytes>
0x4004be:	mov	rax, qword ptr [rbp - 0x80]
0x4004c2:	lea	rdx, [rax - 1]
0x4004c6:	mov	rax, qword ptr [rbp - 0x88]
0x4004cd:	add	rax, rdx
0x4004d0:	mov	byte ptr [rax], 0
0x4004d3:	jmp	0x4004f2
