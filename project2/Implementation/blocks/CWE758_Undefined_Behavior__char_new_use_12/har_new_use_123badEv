<Block for 0x400000, 17 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	call	0x500000
<Block for 0x400011, 9 bytes>
0x400011:	test	eax, eax
0x400013:	setne	al
0x400016:	test	al, al
0x400018:	je	0x400055
<Block for 0x400055, 14 bytes>
0x400055:	mov	byte ptr [rbp - 0x13], 5
0x400059:	mov	edi, 1
0x40005e:	call	0x500008
<Block for 0x40001a, 10 bytes>
0x40001a:	mov	edi, 1
0x40001f:	call	0x500008
<Block for 0x400063, 35 bytes>
0x400063:	mov	qword ptr [rbp - 0x10], rax
0x400067:	mov	rax, qword ptr [rbp - 0x10]
0x40006b:	movzx	edx, byte ptr [rbp - 0x13]
0x40006f:	mov	byte ptr [rax], dl
0x400071:	mov	rax, qword ptr [rbp - 0x10]
0x400075:	movzx	eax, byte ptr [rax]
0x400078:	mov	byte ptr [rbp - 0x12], al
0x40007b:	movsx	eax, byte ptr [rbp - 0x12]
0x40007f:	mov	edi, eax
0x400081:	call	0x500018
<Block for 0x400024, 23 bytes>
0x400024:	mov	qword ptr [rbp - 8], rax
0x400028:	mov	rax, qword ptr [rbp - 8]
0x40002c:	movzx	eax, byte ptr [rax]
0x40002f:	mov	byte ptr [rbp - 0x11], al
0x400032:	mov	rax, qword ptr [rbp - 8]
0x400036:	test	rax, rax
0x400039:	je	0x400048
<Block for 0x400086, 9 bytes>
0x400086:	mov	rax, qword ptr [rbp - 0x10]
0x40008a:	test	rax, rax
0x40008d:	je	0x40009c
<Block for 0x400048, 11 bytes>
0x400048:	movsx	eax, byte ptr [rbp - 0x11]
0x40004c:	mov	edi, eax
0x40004e:	call	0x500018
<Block for 0x40003b, 13 bytes>
0x40003b:	mov	esi, 1
0x400040:	mov	rdi, rax
0x400043:	call	0x500010
<Block for 0x40009c, 3 bytes>
0x40009c:	nop	
0x40009d:	leave	
0x40009e:	ret	
<Block for 0x40008f, 13 bytes>
0x40008f:	mov	esi, 1
0x400094:	mov	rdi, rax
0x400097:	call	0x500010
<Block for 0x400053, 2 bytes>
0x400053:	jmp	0x40009c
