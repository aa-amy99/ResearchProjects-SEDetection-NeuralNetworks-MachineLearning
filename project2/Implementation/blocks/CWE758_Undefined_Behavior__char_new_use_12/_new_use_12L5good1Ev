<Block for 0x40009f, 17 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x20
0x4000ab:	call	0x500000
<Block for 0x4000b0, 9 bytes>
0x4000b0:	test	eax, eax
0x4000b2:	setne	al
0x4000b5:	test	al, al
0x4000b7:	je	0x400102
<Block for 0x400102, 14 bytes>
0x400102:	mov	byte ptr [rbp - 0x14], 5
0x400106:	mov	edi, 1
0x40010b:	call	0x500008
<Block for 0x4000b9, 14 bytes>
0x4000b9:	mov	byte ptr [rbp - 0x12], 5
0x4000bd:	mov	edi, 1
0x4000c2:	call	0x500008
<Block for 0x400110, 35 bytes>
0x400110:	mov	qword ptr [rbp - 0x10], rax
0x400114:	mov	rax, qword ptr [rbp - 0x10]
0x400118:	movzx	edx, byte ptr [rbp - 0x14]
0x40011c:	mov	byte ptr [rax], dl
0x40011e:	mov	rax, qword ptr [rbp - 0x10]
0x400122:	movzx	eax, byte ptr [rax]
0x400125:	mov	byte ptr [rbp - 0x13], al
0x400128:	movsx	eax, byte ptr [rbp - 0x13]
0x40012c:	mov	edi, eax
0x40012e:	call	0x500018
<Block for 0x4000c7, 35 bytes>
0x4000c7:	mov	qword ptr [rbp - 8], rax
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	movzx	edx, byte ptr [rbp - 0x12]
0x4000d3:	mov	byte ptr [rax], dl
0x4000d5:	mov	rax, qword ptr [rbp - 8]
0x4000d9:	movzx	eax, byte ptr [rax]
0x4000dc:	mov	byte ptr [rbp - 0x11], al
0x4000df:	movsx	eax, byte ptr [rbp - 0x11]
0x4000e3:	mov	edi, eax
0x4000e5:	call	0x500018
<Block for 0x400133, 9 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x10]
0x400137:	test	rax, rax
0x40013a:	je	0x400149
<Block for 0x4000ea, 9 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	test	rax, rax
0x4000f1:	je	0x400149
<Block for 0x400149, 3 bytes>
0x400149:	nop	
0x40014a:	leave	
0x40014b:	ret	
<Block for 0x40013c, 13 bytes>
0x40013c:	mov	esi, 1
0x400141:	mov	rdi, rax
0x400144:	call	0x500010
<Block for 0x4000f3, 13 bytes>
0x4000f3:	mov	esi, 1
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500010
<Block for 0x400100, 2 bytes>
0x400100:	jmp	0x400149
