<Block for 0x4001de, 82 bytes>
0x4001de:	endbr64	
0x4001e2:	push	rbp
0x4001e3:	mov	rbp, rsp
0x4001e6:	sub	rsp, 0x120
0x4001ed:	mov	rax, qword ptr fs:[0x28]
0x4001f6:	mov	qword ptr [rbp - 8], rax
0x4001fa:	xor	eax, eax
0x4001fc:	movabs	rax, 0x3d48544150
0x400206:	mov	edx, 0
0x40020b:	mov	qword ptr [rbp - 0x110], rax
0x400212:	mov	qword ptr [rbp - 0x108], rdx
0x400219:	lea	rdx, [rbp - 0x100]
0x400220:	mov	eax, 0
0x400225:	mov	ecx, 0x1d
0x40022a:	mov	rdi, rdx
0x40022d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400230, 33 bytes>
0x400230:	mov	rdx, rdi
0x400233:	mov	word ptr [rdx], ax
0x400236:	add	rdx, 2
0x40023a:	lea	rax, [rbp - 0x110]
0x400241:	mov	qword ptr [rbp - 0x118], rax
0x400248:	mov	eax, 1
0x40024d:	test	eax, eax
0x40024f:	je	0x40028a
<Block for 0x40022d, 3 bytes>
0x40022d:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028a, 15 bytes>
0x40028a:	mov	rax, qword ptr [rbp - 0x118]
0x400291:	mov	rdi, rax
0x400294:	call	0x500018
<Block for 0x400251, 27 bytes>
0x400251:	mov	rax, qword ptr [rbp - 0x118]
0x400258:	mov	rcx, -1
0x40025f:	mov	rdx, rax
0x400262:	mov	eax, 0
0x400267:	mov	rdi, rdx
0x40026a:	repne scasb	al, byte ptr [rdi]
<Block for 0x400299, 16 bytes>
0x400299:	nop	
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	xor	rax, qword ptr fs:[0x28]
0x4002a7:	je	0x4002ae
<Block for 0x40026c, 45 bytes>
0x40026c:	mov	rax, rcx
0x40026f:	not	rax
0x400272:	lea	rdx, [rax - 1]
0x400276:	mov	rax, qword ptr [rbp - 0x118]
0x40027d:	add	rax, rdx
0x400280:	mov	dword ptr [rax], 0x6e69622f
0x400286:	mov	byte ptr [rax + 4], 0
0x40028a:	mov	rax, qword ptr [rbp - 0x118]
0x400291:	mov	rdi, rax
0x400294:	call	0x500018
<Block for 0x40026a, 2 bytes>
0x40026a:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002ae, 2 bytes>
0x4002ae:	leave	
0x4002af:	ret	
<Block for 0x4002a9, 5 bytes>
0x4002a9:	call	0x500020
