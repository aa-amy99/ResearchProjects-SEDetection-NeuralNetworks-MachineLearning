<Block for 0x4000fe, 82 bytes>
0x4000fe:	endbr64	
0x400102:	push	rbp
0x400103:	mov	rbp, rsp
0x400106:	sub	rsp, 0x120
0x40010d:	mov	rax, qword ptr fs:[0x28]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	xor	eax, eax
0x40011c:	movabs	rax, 0x3d48544150
0x400126:	mov	edx, 0
0x40012b:	mov	qword ptr [rbp - 0x110], rax
0x400132:	mov	qword ptr [rbp - 0x108], rdx
0x400139:	lea	rdx, [rbp - 0x100]
0x400140:	mov	eax, 0
0x400145:	mov	ecx, 0x1d
0x40014a:	mov	rdi, rdx
0x40014d:	rep stosq	qword ptr [rdi], rax
<Block for 0x400150, 33 bytes>
0x400150:	mov	rdx, rdi
0x400153:	mov	word ptr [rdx], ax
0x400156:	add	rdx, 2
0x40015a:	lea	rax, [rbp - 0x110]
0x400161:	mov	qword ptr [rbp - 0x118], rax
0x400168:	mov	eax, 0
0x40016d:	test	eax, eax
0x40016f:	je	0x40017f
<Block for 0x40014d, 3 bytes>
0x40014d:	rep stosq	qword ptr [rdi], rax
<Block for 0x40017f, 27 bytes>
0x40017f:	mov	rax, qword ptr [rbp - 0x118]
0x400186:	mov	rcx, -1
0x40018d:	mov	rdx, rax
0x400190:	mov	eax, 0
0x400195:	mov	rdi, rdx
0x400198:	repne scasb	al, byte ptr [rdi]
<Block for 0x400171, 12 bytes>
0x400171:	lea	rdi, [rip + 0x164]
0x400178:	call	0x500028
<Block for 0x40019a, 45 bytes>
0x40019a:	mov	rax, rcx
0x40019d:	not	rax
0x4001a0:	lea	rdx, [rax - 1]
0x4001a4:	mov	rax, qword ptr [rbp - 0x118]
0x4001ab:	add	rax, rdx
0x4001ae:	mov	dword ptr [rax], 0x6e69622f
0x4001b4:	mov	byte ptr [rax + 4], 0
0x4001b8:	mov	rax, qword ptr [rbp - 0x118]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500018
<Block for 0x400198, 2 bytes>
0x400198:	repne scasb	al, byte ptr [rdi]
<Block for 0x40017d, 2 bytes>
0x40017d:	jmp	0x4001b8
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x4001b8, 15 bytes>
0x4001b8:	mov	rax, qword ptr [rbp - 0x118]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500018
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500020
