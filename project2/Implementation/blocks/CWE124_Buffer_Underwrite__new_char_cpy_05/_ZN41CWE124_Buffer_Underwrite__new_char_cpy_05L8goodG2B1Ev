<Block for 0x4000b8, 45 bytes>
0x4000b8:	endbr64	
0x4000bc:	push	rbp
0x4000bd:	mov	rbp, rsp
0x4000c0:	add	rsp, -0x80
0x4000c4:	mov	rax, qword ptr fs:[0x28]
0x4000cd:	mov	qword ptr [rbp - 8], rax
0x4000d1:	xor	eax, eax
0x4000d3:	mov	qword ptr [rbp - 0x80], 0
0x4000db:	mov	eax, dword ptr [rip + 0x167]
0x4000e1:	test	eax, eax
0x4000e3:	je	0x4000f3
<Block for 0x4000f3, 10 bytes>
0x4000f3:	mov	edi, 0x64
0x4000f8:	call	0x500000
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rdi, [rip + 0x160]
0x4000ec:	call	0x500018
<Block for 0x4000fd, 26 bytes>
0x4000fd:	mov	qword ptr [rbp - 0x78], rax
0x400101:	mov	rax, qword ptr [rbp - 0x78]
0x400105:	mov	edx, 0x63
0x40010a:	mov	esi, 0x41
0x40010f:	mov	rdi, rax
0x400112:	call	0x500008
<Block for 0x4000f1, 2 bytes>
0x4000f1:	jmp	0x40012a
<Block for 0x400117, 41 bytes>
0x400117:	mov	rax, qword ptr [rbp - 0x78]
0x40011b:	add	rax, 0x63
0x40011f:	mov	byte ptr [rax], 0
0x400122:	mov	rax, qword ptr [rbp - 0x78]
0x400126:	mov	qword ptr [rbp - 0x80], rax
0x40012a:	lea	rax, [rbp - 0x70]
0x40012e:	mov	edx, 0x63
0x400133:	mov	esi, 0x43
0x400138:	mov	rdi, rax
0x40013b:	call	0x500008
<Block for 0x40012a, 22 bytes>
0x40012a:	lea	rax, [rbp - 0x70]
0x40012e:	mov	edx, 0x63
0x400133:	mov	esi, 0x43
0x400138:	mov	rdi, rax
0x40013b:	call	0x500008
<Block for 0x400140, 23 bytes>
0x400140:	mov	byte ptr [rbp - 0xd], 0
0x400144:	lea	rdx, [rbp - 0x70]
0x400148:	mov	rax, qword ptr [rbp - 0x80]
0x40014c:	mov	rsi, rdx
0x40014f:	mov	rdi, rax
0x400152:	call	0x500010
<Block for 0x400157, 12 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x80]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500018
<Block for 0x400163, 16 bytes>
0x400163:	nop	
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	xor	rax, qword ptr fs:[0x28]
0x400171:	je	0x400178
<Block for 0x400178, 2 bytes>
0x400178:	leave	
0x400179:	ret	
<Block for 0x400173, 5 bytes>
0x400173:	call	0x500020
