<Block for 0x400046, 22 bytes>
0x400046:	endbr64	
0x40004a:	push	rbp
0x40004b:	mov	rbp, rsp
0x40004e:	sub	rsp, 0x10
0x400052:	mov	eax, 0
0x400057:	call	0x500010
<Block for 0x40005c, 4 bytes>
0x40005c:	test	eax, eax
0x40005e:	je	0x40006e
<Block for 0x40006e, 31 bytes>
0x40006e:	mov	dword ptr [rbp - 0xc], 1
0x400075:	mov	dword ptr [rbp - 8], 1
0x40007c:	mov	dword ptr [rbp - 4], 0
0x400083:	mov	eax, dword ptr [rbp - 4]
0x400086:	mov	edi, eax
0x400088:	call	0x500008
<Block for 0x400060, 12 bytes>
0x400060:	lea	rdi, [rip + 0xae]
0x400067:	call	0x500018
<Block for 0x40008d, 21 bytes>
0x40008d:	mov	edx, dword ptr [rbp - 0xc]
0x400090:	mov	eax, dword ptr [rbp - 8]
0x400093:	add	eax, edx
0x400095:	mov	dword ptr [rbp - 4], eax
0x400098:	mov	eax, dword ptr [rbp - 4]
0x40009b:	mov	edi, eax
0x40009d:	call	0x500008
<Block for 0x40006c, 2 bytes>
0x40006c:	jmp	0x4000a2
<Block for 0x4000a2, 3 bytes>
0x4000a2:	nop	
0x4000a3:	leave	
0x4000a4:	ret	
