<Block for 0x4000d1, 80 bytes>
0x4000d1:	endbr64	
0x4000d5:	push	rbp
0x4000d6:	mov	rbp, rsp
0x4000d9:	sub	rsp, 0x20
0x4000dd:	mov	rax, qword ptr fs:[0x28]
0x4000e6:	mov	qword ptr [rbp - 8], rax
0x4000ea:	xor	eax, eax
0x4000ec:	mov	qword ptr [rbp - 0x18], 0
0x4000f4:	lea	rax, [rip + 0xfff2d]
0x4000fb:	mov	qword ptr [rbp - 0x20], rax
0x4000ff:	lea	rax, [rbp - 0x20]
0x400103:	mov	qword ptr [rbp - 0x10], rax
0x400107:	mov	rax, qword ptr [rbp - 0x10]
0x40010b:	mov	rax, qword ptr [rax]
0x40010e:	mov	rcx, qword ptr [rax]
0x400111:	mov	rdx, qword ptr [rbp - 0x18]
0x400115:	mov	rax, qword ptr [rbp - 0x10]
0x400119:	mov	rsi, rdx
0x40011c:	mov	rdi, rax
0x40011f:	call	rcx
<Block for 0x400121, 16 bytes>
0x400121:	nop	
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	xor	rax, qword ptr fs:[0x28]
0x40012f:	je	0x400136
<Block for 0x400136, 2 bytes>
0x400136:	leave	
0x400137:	ret	
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500008
