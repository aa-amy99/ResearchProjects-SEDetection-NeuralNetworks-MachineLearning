<Block for 0x400077, 21 bytes>
0x400077:	endbr64	
0x40007b:	push	rbp
0x40007c:	mov	rbp, rsp
0x40007f:	sub	rsp, 0x10
0x400083:	mov	dword ptr [rbp - 8], 0
0x40008a:	jmp	0x4000f2
<Block for 0x4000f2, 6 bytes>
0x4000f2:	cmp	dword ptr [rbp - 8], 0
0x4000f6:	jle	0x40008c
<Block for 0x40008c, 5 bytes>
0x40008c:	call	0x500000
<Block for 0x4000f8, 4 bytes>
0x4000f8:	nop	
0x4000f9:	nop	
0x4000fa:	leave	
0x4000fb:	ret	
<Block for 0x400091, 55 bytes>
0x400091:	mov	edx, eax
0x400093:	movsxd	rax, edx
0x400096:	imul	rax, rax, 0x55555556
0x40009d:	shr	rax, 0x20
0x4000a1:	mov	rcx, rax
0x4000a4:	mov	eax, edx
0x4000a6:	sar	eax, 0x1f
0x4000a9:	mov	esi, ecx
0x4000ab:	sub	esi, eax
0x4000ad:	mov	eax, esi
0x4000af:	mov	dword ptr [rbp - 4], eax
0x4000b2:	mov	ecx, dword ptr [rbp - 4]
0x4000b5:	mov	eax, ecx
0x4000b7:	add	eax, eax
0x4000b9:	add	eax, ecx
0x4000bb:	sub	edx, eax
0x4000bd:	mov	eax, edx
0x4000bf:	mov	dword ptr [rbp - 4], eax
0x4000c2:	cmp	dword ptr [rbp - 4], 0
0x4000c6:	jne	0x4000d6
<Block for 0x4000c8, 12 bytes>
0x4000c8:	lea	rdi, [rip + 0x6d]
0x4000cf:	call	0x500008
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0x34]
0x4000dd:	call	0x500008
<Block for 0x4000d4, 2 bytes>
0x4000d4:	jmp	0x4000e2
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rdi, [rip + 0x6b]
0x4000e9:	call	0x500008
<Block for 0x4000ee, 10 bytes>
0x4000ee:	add	dword ptr [rbp - 8], 1
0x4000f2:	cmp	dword ptr [rbp - 8], 0
0x4000f6:	jle	0x40008c
