<Block for 0x400217, 37 bytes>
0x400217:	endbr64	
0x40021b:	push	rbp
0x40021c:	mov	rbp, rsp
0x40021f:	sub	rsp, 0x50
0x400223:	mov	rax, qword ptr fs:[0x28]
0x40022c:	mov	qword ptr [rbp - 8], rax
0x400230:	xor	eax, eax
0x400232:	mov	edi, 0x64
0x400237:	call	0x500000
<Block for 0x40023c, 11 bytes>
0x40023c:	mov	qword ptr [rbp - 0x38], rax
0x400240:	cmp	qword ptr [rbp - 0x38], 0
0x400245:	jne	0x400251
<Block for 0x400247, 10 bytes>
0x400247:	mov	edi, 0xffffffff
0x40024c:	call	0x500008
<Block for 0x400251, 33 bytes>
0x400251:	mov	rax, qword ptr [rbp - 0x38]
0x400255:	mov	byte ptr [rax], 0
0x400258:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40025f:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400266:	mov	rax, qword ptr [rbp - 0x38]
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500010
<Block for 0x400272, 24 bytes>
0x400272:	mov	qword ptr [rbp - 0x30], rax
0x400276:	mov	edx, 6
0x40027b:	mov	esi, 1
0x400280:	mov	edi, 2
0x400285:	call	0x500018
<Block for 0x40028a, 13 bytes>
0x40028a:	mov	dword ptr [rbp - 0x48], eax
0x40028d:	cmp	dword ptr [rbp - 0x48], -1
0x400291:	je	0x4003b5
<Block for 0x4003b5, 3 bytes>
0x4003b5:	nop	
0x4003b6:	jmp	0x4003bf
<Block for 0x400297, 22 bytes>
0x400297:	lea	rax, [rbp - 0x20]
0x40029b:	mov	edx, 0x10
0x4002a0:	mov	esi, 0
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500020
<Block for 0x4003bf, 6 bytes>
0x4003bf:	cmp	dword ptr [rbp - 0x48], -1
0x4003c3:	je	0x4003cf
<Block for 0x4002ad, 23 bytes>
0x4002ad:	mov	word ptr [rbp - 0x20], 2
0x4002b3:	mov	dword ptr [rbp - 0x1c], 0
0x4002ba:	mov	edi, 0x6987
0x4002bf:	call	0x500028
<Block for 0x4003cf, 6 bytes>
0x4003cf:	cmp	dword ptr [rbp - 0x4c], -1
0x4003d3:	je	0x4003df
<Block for 0x4003c5, 10 bytes>
0x4003c5:	mov	eax, dword ptr [rbp - 0x48]
0x4003c8:	mov	edi, eax
0x4003ca:	call	0x500058
<Block for 0x4002c4, 26 bytes>
0x4002c4:	mov	word ptr [rbp - 0x1e], ax
0x4002c8:	lea	rcx, [rbp - 0x20]
0x4002cc:	mov	eax, dword ptr [rbp - 0x48]
0x4002cf:	mov	edx, 0x10
0x4002d4:	mov	rsi, rcx
0x4002d7:	mov	edi, eax
0x4002d9:	call	0x500030
<Block for 0x4003df, 10 bytes>
0x4003df:	mov	qword ptr [rbp - 0x40], 0
0x4003e7:	jmp	0x40040e
<Block for 0x4003d5, 10 bytes>
0x4003d5:	mov	eax, dword ptr [rbp - 0x4c]
0x4003d8:	mov	edi, eax
0x4003da:	call	0x500058
<Block for 0x4002de, 9 bytes>
0x4002de:	cmp	eax, -1
0x4002e1:	je	0x4003b8
<Block for 0x40040e, 12 bytes>
0x40040e:	mov	rax, qword ptr [rbp - 0x38]
0x400412:	mov	rdi, rax
0x400415:	call	0x500010
<Block for 0x4003b8, 3 bytes>
0x4003b8:	nop	
0x4003b9:	jmp	0x4003bf
<Block for 0x4002e7, 15 bytes>
0x4002e7:	mov	eax, dword ptr [rbp - 0x48]
0x4002ea:	mov	esi, 5
0x4002ef:	mov	edi, eax
0x4002f1:	call	0x500038
<Block for 0x40041a, 6 bytes>
0x40041a:	cmp	qword ptr [rbp - 0x40], rax
0x40041e:	jb	0x4003e9
<Block for 0x4002f6, 9 bytes>
0x4002f6:	cmp	eax, -1
0x4002f9:	je	0x4003bb
<Block for 0x4003e9, 18 bytes>
0x4003e9:	mov	rdx, qword ptr [rbp - 0x38]
0x4003ed:	mov	rax, qword ptr [rbp - 0x40]
0x4003f1:	add	rax, rdx
0x4003f4:	movzx	eax, byte ptr [rax]
0x4003f7:	cmp	al, 0x53
0x4003f9:	jne	0x400409
<Block for 0x400420, 12 bytes>
0x400420:	mov	rax, qword ptr [rbp - 0x38]
0x400424:	mov	rdi, rax
0x400427:	call	0x500068
<Block for 0x4003bb, 3 bytes>
0x4003bb:	nop	
0x4003bc:	jmp	0x4003bf
<Block for 0x4002ff, 20 bytes>
0x4002ff:	mov	eax, dword ptr [rbp - 0x48]
0x400302:	mov	edx, 0
0x400307:	mov	esi, 0
0x40030c:	mov	edi, eax
0x40030e:	call	0x500040
<Block for 0x4003fb, 12 bytes>
0x4003fb:	lea	rdi, [rip + 0x57]
0x400402:	call	0x500060
<Block for 0x400409, 17 bytes>
0x400409:	add	qword ptr [rbp - 0x40], 1
0x40040e:	mov	rax, qword ptr [rbp - 0x38]
0x400412:	mov	rdi, rax
0x400415:	call	0x500010
<Block for 0x40042c, 17 bytes>
0x40042c:	nop	
0x40042d:	nop	
0x40042e:	mov	rax, qword ptr [rbp - 8]
0x400432:	xor	rax, qword ptr fs:[0x28]
0x40043b:	je	0x400442
<Block for 0x400313, 13 bytes>
0x400313:	mov	dword ptr [rbp - 0x4c], eax
0x400316:	cmp	dword ptr [rbp - 0x4c], -1
0x40031a:	je	0x4003be
<Block for 0x400407, 2 bytes>
0x400407:	jmp	0x400420
<Block for 0x400442, 2 bytes>
0x400442:	leave	
0x400443:	ret	
<Block for 0x40043d, 5 bytes>
0x40043d:	call	0x500070
<Block for 0x400320, 39 bytes>
0x400320:	mov	eax, 0x63
0x400325:	sub	rax, qword ptr [rbp - 0x30]
0x400329:	mov	rdx, rax
0x40032c:	mov	rcx, qword ptr [rbp - 0x38]
0x400330:	mov	rax, qword ptr [rbp - 0x30]
0x400334:	lea	rsi, [rcx + rax]
0x400338:	mov	eax, dword ptr [rbp - 0x4c]
0x40033b:	mov	ecx, 0
0x400340:	mov	edi, eax
0x400342:	call	0x500048
<Block for 0x4003be, 1 bytes>
0x4003be:	nop	
<Block for 0x400347, 9 bytes>
0x400347:	mov	dword ptr [rbp - 0x44], eax
0x40034a:	cmp	dword ptr [rbp - 0x44], -1
0x40034e:	je	0x4003bf
<Block for 0x400350, 6 bytes>
0x400350:	cmp	dword ptr [rbp - 0x44], 0
0x400354:	je	0x4003bf
<Block for 0x400356, 40 bytes>
0x400356:	mov	eax, dword ptr [rbp - 0x44]
0x400359:	movsxd	rdx, eax
0x40035c:	mov	rax, qword ptr [rbp - 0x30]
0x400360:	add	rdx, rax
0x400363:	mov	rax, qword ptr [rbp - 0x38]
0x400367:	add	rax, rdx
0x40036a:	mov	byte ptr [rax], 0
0x40036d:	mov	rax, qword ptr [rbp - 0x38]
0x400371:	mov	esi, 0xd
0x400376:	mov	rdi, rax
0x400379:	call	0x500050
<Block for 0x40037e, 11 bytes>
0x40037e:	mov	qword ptr [rbp - 0x28], rax
0x400382:	cmp	qword ptr [rbp - 0x28], 0
0x400387:	je	0x400390
<Block for 0x400390, 17 bytes>
0x400390:	mov	rax, qword ptr [rbp - 0x38]
0x400394:	mov	esi, 0xa
0x400399:	mov	rdi, rax
0x40039c:	call	0x500050
<Block for 0x400389, 24 bytes>
0x400389:	mov	rax, qword ptr [rbp - 0x28]
0x40038d:	mov	byte ptr [rax], 0
0x400390:	mov	rax, qword ptr [rbp - 0x38]
0x400394:	mov	esi, 0xa
0x400399:	mov	rdi, rax
0x40039c:	call	0x500050
<Block for 0x4003a1, 11 bytes>
0x4003a1:	mov	qword ptr [rbp - 0x28], rax
0x4003a5:	cmp	qword ptr [rbp - 0x28], 0
0x4003aa:	je	0x4003bf
<Block for 0x4003ac, 9 bytes>
0x4003ac:	mov	rax, qword ptr [rbp - 0x28]
0x4003b0:	mov	byte ptr [rax], 0
0x4003b3:	jmp	0x4003bf
