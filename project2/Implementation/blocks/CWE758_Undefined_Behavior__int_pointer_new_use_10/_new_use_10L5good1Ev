<Block for 0x400055, 22 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x20
0x400061:	mov	eax, dword ptr [rip + 0xfffb9]
0x400067:	test	eax, eax
0x400069:	je	0x400079
<Block for 0x400079, 10 bytes>
0x400079:	mov	edi, 4
0x40007e:	call	0x500008
<Block for 0x40006b, 12 bytes>
0x40006b:	lea	rdi, [rip + 0xf6]
0x400072:	call	0x500028
<Block for 0x400083, 24 bytes>
0x400083:	mov	qword ptr [rbp - 0x18], rax
0x400087:	mov	rax, qword ptr [rbp - 0x18]
0x40008b:	mov	dword ptr [rax], 5
0x400091:	mov	edi, 8
0x400096:	call	0x500008
<Block for 0x400077, 2 bytes>
0x400077:	jmp	0x4000d8
<Block for 0x40009b, 39 bytes>
0x40009b:	mov	qword ptr [rbp - 0x10], rax
0x40009f:	mov	rax, qword ptr [rbp - 0x10]
0x4000a3:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a7:	mov	qword ptr [rax], rdx
0x4000aa:	mov	rax, qword ptr [rbp - 0x10]
0x4000ae:	mov	rax, qword ptr [rax]
0x4000b1:	mov	qword ptr [rbp - 8], rax
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	mov	eax, dword ptr [rax]
0x4000bb:	mov	edi, eax
0x4000bd:	call	0x500018
<Block for 0x4000d8, 3 bytes>
0x4000d8:	nop	
0x4000d9:	leave	
0x4000da:	ret	
<Block for 0x4000c2, 9 bytes>
0x4000c2:	mov	rax, qword ptr [rbp - 0x10]
0x4000c6:	test	rax, rax
0x4000c9:	je	0x4000d8
<Block for 0x4000cb, 13 bytes>
0x4000cb:	mov	esi, 8
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500010
