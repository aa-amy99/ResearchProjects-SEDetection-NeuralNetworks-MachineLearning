<Block for 0x400052, 46 bytes>
0x400052:	endbr64	
0x400056:	push	rbp
0x400057:	mov	rbp, rsp
0x40005a:	sub	rsp, 0x10
0x40005e:	mov	dword ptr [rbp - 4], 0xffffffff
0x400065:	mov	edx, 0x180
0x40006a:	mov	esi, 0x42
0x40006f:	lea	rdi, [rip + 0x55]
0x400076:	mov	eax, 0
0x40007b:	call	0x500000
<Block for 0x400080, 13 bytes>
0x400080:	mov	dword ptr [rbp - 4], eax
0x400083:	mov	eax, 0
0x400088:	call	0x500008
<Block for 0x40008d, 4 bytes>
0x40008d:	test	eax, eax
0x40008f:	je	0x4000a3
<Block for 0x4000a3, 6 bytes>
0x4000a3:	cmp	dword ptr [rbp - 4], -1
0x4000a7:	je	0x4000b3
<Block for 0x400091, 6 bytes>
0x400091:	cmp	dword ptr [rbp - 4], -1
0x400095:	je	0x4000b3
<Block for 0x4000b3, 3 bytes>
0x4000b3:	nop	
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000a9, 10 bytes>
0x4000a9:	mov	eax, dword ptr [rbp - 4]
0x4000ac:	mov	edi, eax
0x4000ae:	call	0x500010
<Block for 0x400097, 10 bytes>
0x400097:	mov	eax, dword ptr [rbp - 4]
0x40009a:	mov	edi, eax
0x40009c:	call	0x500010
<Block for 0x4000a1, 2 bytes>
0x4000a1:	jmp	0x4000b3
