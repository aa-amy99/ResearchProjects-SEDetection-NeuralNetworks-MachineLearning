<Block for 0x400000, 125 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x30], 1
0x400022:	mov	dword ptr [rbp - 0x2c], 2
0x400029:	mov	dword ptr [rbp - 0x28], 3
0x400030:	mov	dword ptr [rbp - 0x24], 4
0x400037:	mov	dword ptr [rbp - 0x20], 5
0x40003e:	mov	dword ptr [rbp - 0x1c], 6
0x400045:	mov	dword ptr [rbp - 0x18], 7
0x40004c:	mov	dword ptr [rbp - 0x14], 8
0x400053:	mov	dword ptr [rbp - 0x10], 9
0x40005a:	mov	dword ptr [rbp - 0xc], 0xa
0x400061:	lea	rax, [rbp - 0x30]
0x400065:	mov	qword ptr [rbp - 0x38], rax
0x400069:	mov	rax, qword ptr [rbp - 0x38]
0x40006d:	mov	eax, dword ptr [rax + 0x20]
0x400070:	mov	dword ptr [rbp - 0x3c], eax
0x400073:	mov	eax, dword ptr [rbp - 0x3c]
0x400076:	mov	edi, eax
0x400078:	call	0x500000
<Block for 0x40007d, 17 bytes>
0x40007d:	nop	
0x40007e:	nop	
0x40007f:	mov	rax, qword ptr [rbp - 8]
0x400083:	xor	rax, qword ptr fs:[0x28]
0x40008c:	je	0x400093
<Block for 0x400093, 2 bytes>
0x400093:	leave	
0x400094:	ret	
<Block for 0x40008e, 5 bytes>
0x40008e:	call	0x500008
