<Block for 0x4000ea, 37 bytes>
0x4000ea:	endbr64	
0x4000ee:	push	rbp
0x4000ef:	mov	rbp, rsp
0x4000f2:	add	rsp, -0x80
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	mov	eax, 0
0x40010a:	call	0x500000
<Block for 0x40010f, 4 bytes>
0x40010f:	test	eax, eax
0x400111:	je	0x400141
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400113, 34 bytes>
0x400113:	mov	dword ptr [rbp - 0x74], 5
0x40011a:	mov	edx, dword ptr [rbp - 0x74]
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	lea	rsi, [rip + 0x67]
0x400128:	mov	rdi, rax
0x40012b:	mov	eax, 0
0x400130:	call	0x500008
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500018
<Block for 0x400135, 12 bytes>
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500010
