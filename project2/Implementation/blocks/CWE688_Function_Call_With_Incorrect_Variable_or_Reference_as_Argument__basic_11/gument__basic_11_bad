<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400057
<Block for 0x400057, 16 bytes>
0x400057:	nop	
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	xor	rax, qword ptr fs:[0x28]
0x400065:	je	0x40006c
<Block for 0x400029, 34 bytes>
0x400029:	mov	dword ptr [rbp - 0x74], 5
0x400030:	mov	edx, dword ptr [rbp - 0x74]
0x400033:	lea	rax, [rbp - 0x70]
0x400037:	lea	rsi, [rip + 0x139]
0x40003e:	mov	rdi, rax
0x400041:	mov	eax, 0
0x400046:	call	0x500008
<Block for 0x40006c, 2 bytes>
0x40006c:	leave	
0x40006d:	ret	
<Block for 0x400067, 5 bytes>
0x400067:	call	0x500018
<Block for 0x40004b, 12 bytes>
0x40004b:	lea	rax, [rbp - 0x70]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
