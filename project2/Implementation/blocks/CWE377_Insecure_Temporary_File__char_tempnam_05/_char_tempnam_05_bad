<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0x1ca]
0x400012:	test	eax, eax
0x400014:	je	0x40008c
<Block for 0x40008c, 3 bytes>
0x40008c:	nop	
0x40008d:	leave	
0x40008e:	ret	
<Block for 0x400016, 15 bytes>
0x400016:	mov	esi, 0
0x40001b:	mov	edi, 0
0x400020:	call	0x500000
<Block for 0x400025, 11 bytes>
0x400025:	mov	qword ptr [rbp - 8], rax
0x400029:	cmp	qword ptr [rbp - 8], 0
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 1
0x400035:	call	0x500008
<Block for 0x40003a, 12 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 8]
0x40003e:	mov	rdi, rax
0x400041:	call	0x500010
<Block for 0x400046, 27 bytes>
0x400046:	mov	rax, qword ptr [rbp - 8]
0x40004a:	mov	edx, 0x180
0x40004f:	mov	esi, 0x42
0x400054:	mov	rdi, rax
0x400057:	mov	eax, 0
0x40005c:	call	0x500018
<Block for 0x400061, 9 bytes>
0x400061:	mov	dword ptr [rbp - 0xc], eax
0x400064:	cmp	dword ptr [rbp - 0xc], -1
0x400068:	je	0x400080
<Block for 0x400080, 12 bytes>
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	mov	rdi, rax
0x400087:	call	0x500028
<Block for 0x40006a, 12 bytes>
0x40006a:	lea	rdi, [rip + 0x177]
0x400071:	call	0x500010
<Block for 0x400076, 10 bytes>
0x400076:	mov	eax, dword ptr [rbp - 0xc]
0x400079:	mov	edi, eax
0x40007b:	call	0x500020
