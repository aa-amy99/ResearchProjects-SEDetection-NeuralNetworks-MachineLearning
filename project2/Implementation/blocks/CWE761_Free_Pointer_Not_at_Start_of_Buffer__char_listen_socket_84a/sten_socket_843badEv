<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	sub	rsp, 0x10
0x40000f:	mov	edi, 0x64
0x400014:	call	0x500000
<Block for 0x400019, 11 bytes>
0x400019:	mov	qword ptr [rbp - 0x20], rax
0x40001d:	cmp	qword ptr [rbp - 0x20], 0
0x400022:	jne	0x40002e
<Block for 0x400024, 10 bytes>
0x400024:	mov	edi, 0xffffffff
0x400029:	call	0x500008
<Block for 0x40002e, 17 bytes>
0x40002e:	mov	rax, qword ptr [rbp - 0x20]
0x400032:	mov	byte ptr [rax], 0
0x400035:	mov	edi, 8
0x40003a:	call	0x500010
<Block for 0x40003f, 18 bytes>
0x40003f:	mov	rbx, rax
0x400042:	mov	rax, qword ptr [rbp - 0x20]
0x400046:	mov	rsi, rax
0x400049:	mov	rdi, rbx
0x40004c:	call	0x500018
<Block for 0x400051, 13 bytes>
0x400051:	mov	qword ptr [rbp - 0x18], rbx
0x400055:	mov	rbx, qword ptr [rbp - 0x18]
0x400059:	test	rbx, rbx
0x40005c:	je	0x400094
<Block for 0x400094, 10 bytes>
0x400094:	nop	
0x400095:	add	rsp, 0x10
0x400099:	pop	rbx
0x40009a:	pop	r12
0x40009c:	pop	rbp
0x40009d:	ret	
<Block for 0x40005e, 8 bytes>
0x40005e:	mov	rdi, rbx
0x400061:	call	0x500020
<Block for 0x400066, 13 bytes>
0x400066:	mov	esi, 8
0x40006b:	mov	rdi, rbx
0x40006e:	call	0x500028
<Block for 0x400073, 2 bytes>
0x400073:	jmp	0x400094
