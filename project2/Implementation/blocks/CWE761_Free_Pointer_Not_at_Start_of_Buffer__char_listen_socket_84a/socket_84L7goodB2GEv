<Block for 0x40009e, 25 bytes>
0x40009e:	endbr64	
0x4000a2:	push	rbp
0x4000a3:	mov	rbp, rsp
0x4000a6:	push	r12
0x4000a8:	push	rbx
0x4000a9:	sub	rsp, 0x10
0x4000ad:	mov	edi, 0x64
0x4000b2:	call	0x500000
<Block for 0x4000b7, 11 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x20], rax
0x4000bb:	cmp	qword ptr [rbp - 0x20], 0
0x4000c0:	jne	0x4000cc
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500008
<Block for 0x4000cc, 17 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 0x20]
0x4000d0:	mov	byte ptr [rax], 0
0x4000d3:	mov	edi, 8
0x4000d8:	call	0x500010
<Block for 0x4000dd, 18 bytes>
0x4000dd:	mov	rbx, rax
0x4000e0:	mov	rax, qword ptr [rbp - 0x20]
0x4000e4:	mov	rsi, rax
0x4000e7:	mov	rdi, rbx
0x4000ea:	call	0x500038
<Block for 0x4000ef, 13 bytes>
0x4000ef:	mov	qword ptr [rbp - 0x18], rbx
0x4000f3:	mov	rbx, qword ptr [rbp - 0x18]
0x4000f7:	test	rbx, rbx
0x4000fa:	je	0x400132
<Block for 0x400132, 10 bytes>
0x400132:	nop	
0x400133:	add	rsp, 0x10
0x400137:	pop	rbx
0x400138:	pop	r12
0x40013a:	pop	rbp
0x40013b:	ret	
<Block for 0x4000fc, 8 bytes>
0x4000fc:	mov	rdi, rbx
0x4000ff:	call	0x500040
<Block for 0x400104, 13 bytes>
0x400104:	mov	esi, 8
0x400109:	mov	rdi, rbx
0x40010c:	call	0x500028
<Block for 0x400111, 2 bytes>
0x400111:	jmp	0x400132
