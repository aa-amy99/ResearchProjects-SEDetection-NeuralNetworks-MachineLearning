<Block for 0x4000f8, 60 bytes>
0x4000f8:	endbr64	
0x4000fc:	push	rbp
0x4000fd:	mov	rbp, rsp
0x400100:	sub	rsp, 0x90
0x400107:	mov	rax, qword ptr fs:[0x28]
0x400110:	mov	qword ptr [rbp - 8], rax
0x400114:	xor	eax, eax
0x400116:	mov	qword ptr [rbp - 0x88], 0
0x400121:	mov	dword ptr [rbp - 0x8c], 0
0x40012b:	cmp	dword ptr [rbp - 0x8c], 0
0x400132:	jg	0x400177
<Block for 0x400134, 10 bytes>
0x400134:	mov	edi, 0x64
0x400139:	call	0x500000
<Block for 0x400177, 22 bytes>
0x400177:	lea	rax, [rbp - 0x70]
0x40017b:	mov	edx, 0x63
0x400180:	mov	esi, 0x43
0x400185:	mov	rdi, rax
0x400188:	call	0x500008
<Block for 0x40013e, 26 bytes>
0x40013e:	mov	qword ptr [rbp - 0x78], rax
0x400142:	mov	rax, qword ptr [rbp - 0x78]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x41
0x400150:	mov	rdi, rax
0x400153:	call	0x500008
<Block for 0x40018d, 19 bytes>
0x40018d:	mov	byte ptr [rbp - 0xd], 0
0x400191:	mov	qword ptr [rbp - 0x80], 0
0x400199:	cmp	qword ptr [rbp - 0x80], 0x63
0x40019e:	ja	0x4001c5
<Block for 0x400158, 31 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x78]
0x40015c:	add	rax, 0x63
0x400160:	mov	byte ptr [rax], 0
0x400163:	mov	rax, qword ptr [rbp - 0x78]
0x400167:	mov	qword ptr [rbp - 0x88], rax
0x40016e:	add	dword ptr [rbp - 0x8c], 1
0x400175:	jmp	0x40012b
<Block for 0x4001a0, 37 bytes>
0x4001a0:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a7:	mov	rax, qword ptr [rbp - 0x80]
0x4001ab:	add	rax, rdx
0x4001ae:	movzx	eax, byte ptr [rax]
0x4001b1:	lea	rcx, [rbp - 0x70]
0x4001b5:	mov	rdx, qword ptr [rbp - 0x80]
0x4001b9:	add	rdx, rcx
0x4001bc:	mov	byte ptr [rdx], al
0x4001be:	add	qword ptr [rbp - 0x80], 1
0x4001c3:	jmp	0x400199
<Block for 0x4001c5, 16 bytes>
0x4001c5:	mov	byte ptr [rbp - 0xd], 0
0x4001c9:	lea	rax, [rbp - 0x70]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500010
<Block for 0x40012b, 9 bytes>
0x40012b:	cmp	dword ptr [rbp - 0x8c], 0
0x400132:	jg	0x400177
<Block for 0x400199, 7 bytes>
0x400199:	cmp	qword ptr [rbp - 0x80], 0x63
0x40019e:	ja	0x4001c5
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 8]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x4001ea
<Block for 0x4001ea, 2 bytes>
0x4001ea:	leave	
0x4001eb:	ret	
<Block for 0x4001e5, 5 bytes>
0x4001e5:	call	0x500018
