<Block for 0x400086, 37 bytes>
0x400086:	endbr64	
0x40008a:	push	rbp
0x40008b:	mov	rbp, rsp
0x40008e:	sub	rsp, 0x30
0x400092:	mov	rax, qword ptr fs:[0x28]
0x40009b:	mov	qword ptr [rbp - 8], rax
0x40009f:	xor	eax, eax
0x4000a1:	mov	eax, 0
0x4000a6:	call	0x500018
<Block for 0x4000ab, 4 bytes>
0x4000ab:	test	eax, eax
0x4000ad:	je	0x4000bd
<Block for 0x4000bd, 70 bytes>
0x4000bd:	mov	dword ptr [rbp - 0x20], 1
0x4000c4:	mov	dword ptr [rbp - 0x1c], 2
0x4000cb:	mov	dword ptr [rbp - 0x18], 3
0x4000d2:	mov	dword ptr [rbp - 0x14], 4
0x4000d9:	mov	dword ptr [rbp - 0x10], 5
0x4000e0:	lea	rax, [rbp - 0x20]
0x4000e4:	mov	qword ptr [rbp - 0x28], rax
0x4000e8:	mov	rax, qword ptr [rbp - 0x28]
0x4000ec:	add	rax, 8
0x4000f0:	movzx	eax, byte ptr [rax]
0x4000f3:	movsx	eax, al
0x4000f6:	mov	dword ptr [rbp - 0x2c], eax
0x4000f9:	mov	eax, dword ptr [rbp - 0x2c]
0x4000fc:	mov	edi, eax
0x4000fe:	call	0x500008
<Block for 0x4000af, 12 bytes>
0x4000af:	lea	rdi, [rip + 0x109]
0x4000b6:	call	0x500020
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x4000bb, 2 bytes>
0x4000bb:	jmp	0x400103
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500010
