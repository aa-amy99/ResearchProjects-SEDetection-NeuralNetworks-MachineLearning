<Block for 0x400089, 70 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x90
0x400098:	mov	qword ptr [rbp - 0x88], rdi
0x40009f:	mov	rax, qword ptr fs:[0x28]
0x4000a8:	mov	qword ptr [rbp - 8], rax
0x4000ac:	xor	eax, eax
0x4000ae:	mov	rax, qword ptr [rbp - 0x88]
0x4000b5:	mov	qword ptr [rbp - 0x78], rax
0x4000b9:	lea	rax, [rbp - 0x70]
0x4000bd:	mov	edx, 0x63
0x4000c2:	mov	esi, 0x43
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x500000
<Block for 0x4000cf, 28 bytes>
0x4000cf:	mov	byte ptr [rbp - 0xd], 0
0x4000d3:	mov	rcx, qword ptr [rbp - 0x78]
0x4000d7:	lea	rax, [rbp - 0x70]
0x4000db:	mov	edx, 0x64
0x4000e0:	mov	rsi, rcx
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500008
<Block for 0x4000eb, 16 bytes>
0x4000eb:	mov	byte ptr [rbp - 0xd], 0
0x4000ef:	lea	rax, [rbp - 0x70]
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500010
<Block for 0x4000fb, 16 bytes>
0x4000fb:	nop	
0x4000fc:	mov	rax, qword ptr [rbp - 8]
0x400100:	xor	rax, qword ptr fs:[0x28]
0x400109:	je	0x400110
<Block for 0x400110, 2 bytes>
0x400110:	leave	
0x400111:	ret	
<Block for 0x40010b, 5 bytes>
0x40010b:	call	0x500018
