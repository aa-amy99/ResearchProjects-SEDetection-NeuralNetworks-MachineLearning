<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, dword ptr [rip + 0xfffd8]
0x400028:	test	eax, eax
0x40002a:	je	0x400080
<Block for 0x400080, 25 bytes>
0x400080:	mov	eax, dword ptr [rbp - 0x34]
0x400083:	cdqe	
0x400085:	shl	rax, 2
0x400089:	mov	qword ptr [rbp - 0x28], rax
0x40008d:	mov	rax, qword ptr [rbp - 0x28]
0x400091:	mov	rdi, rax
0x400094:	call	0x500028
<Block for 0x40002c, 45 bytes>
0x40002c:	mov	qword ptr [rbp - 0x16], 0
0x400034:	mov	dword ptr [rbp - 0xe], 0
0x40003b:	mov	word ptr [rbp - 0xa], 0
0x400041:	mov	rdx, qword ptr [rip + 0xfffc0]
0x400048:	lea	rax, [rbp - 0x16]
0x40004c:	mov	esi, 0xe
0x400051:	mov	rdi, rax
0x400054:	call	0x500010
<Block for 0x400099, 23 bytes>
0x400099:	mov	qword ptr [rbp - 0x20], rax
0x40009d:	mov	qword ptr [rbp - 0x30], 0
0x4000a5:	mov	eax, dword ptr [rbp - 0x34]
0x4000a8:	cdqe	
0x4000aa:	cmp	qword ptr [rbp - 0x30], rax
0x4000ae:	jae	0x4000d0
<Block for 0x400059, 10 bytes>
0x400059:	test	rax, rax
0x40005c:	setne	al
0x40005f:	test	al, al
0x400061:	je	0x400074
<Block for 0x4000b0, 32 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 0x30]
0x4000b4:	lea	rdx, [rax*4]
0x4000bc:	mov	rax, qword ptr [rbp - 0x20]
0x4000c0:	add	rax, rdx
0x4000c3:	mov	dword ptr [rax], 0
0x4000c9:	add	qword ptr [rbp - 0x30], 1
0x4000ce:	jmp	0x4000a5
<Block for 0x4000d0, 13 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x20]
0x4000d4:	mov	eax, dword ptr [rax]
0x4000d6:	mov	edi, eax
0x4000d8:	call	0x500030
<Block for 0x400074, 12 bytes>
0x400074:	lea	rdi, [rip + 0x1dd]
0x40007b:	call	0x500020
<Block for 0x400063, 12 bytes>
0x400063:	lea	rax, [rbp - 0x16]
0x400067:	mov	rdi, rax
0x40006a:	call	0x500018
<Block for 0x4000a5, 11 bytes>
0x4000a5:	mov	eax, dword ptr [rbp - 0x34]
0x4000a8:	cdqe	
0x4000aa:	cmp	qword ptr [rbp - 0x30], rax
0x4000ae:	jae	0x4000d0
<Block for 0x4000dd, 7 bytes>
0x4000dd:	cmp	qword ptr [rbp - 0x20], 0
0x4000e2:	je	0x4000f0
<Block for 0x40006f, 5 bytes>
0x40006f:	mov	dword ptr [rbp - 0x34], eax
0x400072:	jmp	0x400080
<Block for 0x4000f0, 16 bytes>
0x4000f0:	nop	
0x4000f1:	mov	rax, qword ptr [rbp - 8]
0x4000f5:	xor	rax, qword ptr fs:[0x28]
0x4000fe:	je	0x400105
<Block for 0x4000e4, 12 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x20]
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500038
<Block for 0x400105, 2 bytes>
0x400105:	leave	
0x400106:	ret	
<Block for 0x400100, 5 bytes>
0x400100:	call	0x500040
