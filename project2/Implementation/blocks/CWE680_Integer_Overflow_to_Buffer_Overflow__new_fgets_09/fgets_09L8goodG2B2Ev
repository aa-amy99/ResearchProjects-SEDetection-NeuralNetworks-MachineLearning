<Block for 0x4001ac, 29 bytes>
0x4001ac:	endbr64	
0x4001b0:	push	rbp
0x4001b1:	mov	rbp, rsp
0x4001b4:	sub	rsp, 0x20
0x4001b8:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4001bf:	mov	eax, dword ptr [rip + 0xffe3b]
0x4001c5:	test	eax, eax
0x4001c7:	je	0x4001d0
<Block for 0x4001d0, 25 bytes>
0x4001d0:	mov	eax, dword ptr [rbp - 0x1c]
0x4001d3:	cdqe	
0x4001d5:	shl	rax, 2
0x4001d9:	mov	qword ptr [rbp - 0x10], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0x10]
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500028
<Block for 0x4001c9, 32 bytes>
0x4001c9:	mov	dword ptr [rbp - 0x1c], 0x14
0x4001d0:	mov	eax, dword ptr [rbp - 0x1c]
0x4001d3:	cdqe	
0x4001d5:	shl	rax, 2
0x4001d9:	mov	qword ptr [rbp - 0x10], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0x10]
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500028
<Block for 0x4001e9, 23 bytes>
0x4001e9:	mov	qword ptr [rbp - 8], rax
0x4001ed:	mov	qword ptr [rbp - 0x18], 0
0x4001f5:	mov	eax, dword ptr [rbp - 0x1c]
0x4001f8:	cdqe	
0x4001fa:	cmp	qword ptr [rbp - 0x18], rax
0x4001fe:	jae	0x400220
<Block for 0x400200, 32 bytes>
0x400200:	mov	rax, qword ptr [rbp - 0x18]
0x400204:	lea	rdx, [rax*4]
0x40020c:	mov	rax, qword ptr [rbp - 8]
0x400210:	add	rax, rdx
0x400213:	mov	dword ptr [rax], 0
0x400219:	add	qword ptr [rbp - 0x18], 1
0x40021e:	jmp	0x4001f5
<Block for 0x400220, 13 bytes>
0x400220:	mov	rax, qword ptr [rbp - 8]
0x400224:	mov	eax, dword ptr [rax]
0x400226:	mov	edi, eax
0x400228:	call	0x500030
<Block for 0x4001f5, 11 bytes>
0x4001f5:	mov	eax, dword ptr [rbp - 0x1c]
0x4001f8:	cdqe	
0x4001fa:	cmp	qword ptr [rbp - 0x18], rax
0x4001fe:	jae	0x400220
<Block for 0x40022d, 7 bytes>
0x40022d:	cmp	qword ptr [rbp - 8], 0
0x400232:	je	0x400240
<Block for 0x400240, 3 bytes>
0x400240:	nop	
0x400241:	leave	
0x400242:	ret	
<Block for 0x400234, 12 bytes>
0x400234:	mov	rax, qword ptr [rbp - 8]
0x400238:	mov	rdi, rax
0x40023b:	call	0x500038
