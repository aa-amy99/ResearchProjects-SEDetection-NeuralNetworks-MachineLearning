<Block for 0x4000cd, 50 bytes>
0x4000cd:	endbr64	
0x4000d1:	push	rbp
0x4000d2:	mov	rbp, rsp
0x4000d5:	add	rsp, -0x80
0x4000d9:	mov	rax, qword ptr fs:[0x28]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	xor	eax, eax
0x4000e8:	mov	qword ptr [rbp - 0x80], 0
0x4000f0:	nop	
0x4000f1:	endbr64	
0x4000f5:	mov	edi, 0x64
0x4000fa:	call	0x500000
<Block for 0x4000ff, 11 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x78], rax
0x400103:	cmp	qword ptr [rbp - 0x78], 0
0x400108:	jne	0x400114
<Block for 0x40010a, 10 bytes>
0x40010a:	mov	edi, 0xffffffff
0x40010f:	call	0x500008
<Block for 0x400114, 22 bytes>
0x400114:	mov	rax, qword ptr [rbp - 0x78]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x41
0x400122:	mov	rdi, rax
0x400125:	call	0x500010
<Block for 0x40012a, 41 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x78]
0x40012e:	add	rax, 0x63
0x400132:	mov	byte ptr [rax], 0
0x400135:	mov	rax, qword ptr [rbp - 0x78]
0x400139:	mov	qword ptr [rbp - 0x80], rax
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	edx, 0x63
0x400146:	mov	esi, 0x43
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500010
<Block for 0x400153, 28 bytes>
0x400153:	mov	byte ptr [rbp - 0xd], 0
0x400157:	mov	rcx, qword ptr [rbp - 0x80]
0x40015b:	lea	rax, [rbp - 0x70]
0x40015f:	mov	edx, 0x64
0x400164:	mov	rsi, rcx
0x400167:	mov	rdi, rax
0x40016a:	call	0x500018
<Block for 0x40016f, 16 bytes>
0x40016f:	mov	byte ptr [rbp - 0xd], 0
0x400173:	lea	rax, [rbp - 0x70]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500020
<Block for 0x40017f, 16 bytes>
0x40017f:	nop	
0x400180:	mov	rax, qword ptr [rbp - 8]
0x400184:	xor	rax, qword ptr fs:[0x28]
0x40018d:	je	0x400194
<Block for 0x400194, 2 bytes>
0x400194:	leave	
0x400195:	ret	
<Block for 0x40018f, 5 bytes>
0x40018f:	call	0x500028
