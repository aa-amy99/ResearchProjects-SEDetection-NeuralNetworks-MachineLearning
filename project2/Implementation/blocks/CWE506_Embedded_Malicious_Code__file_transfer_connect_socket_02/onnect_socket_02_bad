<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	lea	r11, [rsp - 0x10000]
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400022, 48 bytes>
0x400022:	sub	rsp, 0x38
0x400026:	mov	rax, qword ptr fs:[0x28]
0x40002f:	mov	qword ptr [rbp - 0x18], rax
0x400033:	xor	eax, eax
0x400035:	mov	dword ptr [rbp - 0x1003c], 0xffffffff
0x40003f:	lea	rsi, [rip + 0x15f]
0x400046:	lea	rdi, [rip + 0x15a]
0x40004d:	call	0x500000
<Block for 0x400011, 17 bytes>
0x400011:	sub	rsp, 0x1000
0x400018:	or	qword ptr [rsp], 0
0x40001d:	cmp	rsp, r11
0x400020:	jne	0x400011
<Block for 0x400052, 17 bytes>
0x400052:	mov	qword ptr [rbp - 0x10038], rax
0x400059:	cmp	qword ptr [rbp - 0x10038], 0
0x400061:	je	0x4000a5
<Block for 0x4000a5, 20 bytes>
0x4000a5:	mov	edx, 6
0x4000aa:	mov	esi, 1
0x4000af:	mov	edi, 2
0x4000b4:	call	0x500020
<Block for 0x400063, 27 bytes>
0x400063:	mov	rdx, qword ptr [rbp - 0x10038]
0x40006a:	lea	rax, [rbp - 0x10020]
0x400071:	mov	esi, 0xffff
0x400076:	mov	rdi, rax
0x400079:	call	0x500008
<Block for 0x4000b9, 19 bytes>
0x4000b9:	mov	dword ptr [rbp - 0x1003c], eax
0x4000bf:	cmp	dword ptr [rbp - 0x1003c], -1
0x4000c6:	je	0x40016c
<Block for 0x40007e, 5 bytes>
0x40007e:	test	rax, rax
0x400081:	jne	0x400096
<Block for 0x40016c, 3 bytes>
0x40016c:	nop	
0x40016d:	jmp	0x400170
<Block for 0x4000cc, 25 bytes>
0x4000cc:	lea	rax, [rbp - 0x10030]
0x4000d3:	mov	edx, 0x10
0x4000d8:	mov	esi, 0
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500028
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0x126]
0x40008a:	call	0x500010
<Block for 0x400096, 15 bytes>
0x400096:	mov	rax, qword ptr [rbp - 0x10038]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500018
<Block for 0x400170, 9 bytes>
0x400170:	cmp	dword ptr [rbp - 0x1003c], -1
0x400177:	je	0x400186
<Block for 0x4000e5, 29 bytes>
0x4000e5:	mov	word ptr [rbp - 0x10030], 2
0x4000ee:	mov	dword ptr [rbp - 0x1002c], 0
0x4000f8:	mov	edi, 0x6987
0x4000fd:	call	0x500030
<Block for 0x40008f, 22 bytes>
0x40008f:	mov	byte ptr [rbp - 0x10020], 0
0x400096:	mov	rax, qword ptr [rbp - 0x10038]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500018
<Block for 0x400186, 16 bytes>
0x400186:	nop	
0x400187:	mov	rax, qword ptr [rbp - 0x18]
0x40018b:	xor	rax, qword ptr fs:[0x28]
0x400194:	je	0x40019b
<Block for 0x400179, 13 bytes>
0x400179:	mov	eax, dword ptr [rbp - 0x1003c]
0x40017f:	mov	edi, eax
0x400181:	call	0x500050
<Block for 0x400102, 35 bytes>
0x400102:	mov	word ptr [rbp - 0x1002e], ax
0x400109:	lea	rcx, [rbp - 0x10030]
0x400110:	mov	eax, dword ptr [rbp - 0x1003c]
0x400116:	mov	edx, 0x10
0x40011b:	mov	rsi, rcx
0x40011e:	mov	edi, eax
0x400120:	call	0x500038
<Block for 0x40019b, 10 bytes>
0x40019b:	add	rsp, 0x10038
0x4001a2:	pop	rbx
0x4001a3:	pop	rbp
0x4001a4:	ret	
<Block for 0x400196, 5 bytes>
0x400196:	call	0x500058
<Block for 0x400125, 5 bytes>
0x400125:	cmp	eax, -1
0x400128:	je	0x40016f
<Block for 0x40012a, 15 bytes>
0x40012a:	lea	rax, [rbp - 0x10020]
0x400131:	mov	rdi, rax
0x400134:	call	0x500040
<Block for 0x40016f, 1 bytes>
0x40016f:	nop	
<Block for 0x400139, 28 bytes>
0x400139:	mov	rdx, rax
0x40013c:	lea	rsi, [rbp - 0x10020]
0x400143:	mov	eax, dword ptr [rbp - 0x1003c]
0x400149:	mov	ecx, 0
0x40014e:	mov	edi, eax
0x400150:	call	0x500048
<Block for 0x400155, 18 bytes>
0x400155:	mov	rbx, rax
0x400158:	lea	rax, [rbp - 0x10020]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500040
<Block for 0x400167, 5 bytes>
0x400167:	cmp	rbx, rax
0x40016a:	jmp	0x400170
