<Block for 0x4000f2, 30 bytes>
0x4000f2:	endbr64	
0x4000f6:	push	rbp
0x4000f7:	mov	rbp, rsp
0x4000fa:	sub	rsp, 0x10
0x4000fe:	mov	qword ptr [rbp - 8], 0
0x400106:	mov	eax, dword ptr [rip + 0x144]
0x40010c:	test	eax, eax
0x40010e:	je	0x400152
<Block for 0x400152, 3 bytes>
0x400152:	nop	
0x400153:	leave	
0x400154:	ret	
<Block for 0x400110, 10 bytes>
0x400110:	mov	edi, 0x64
0x400115:	call	0x500000
<Block for 0x40011a, 26 bytes>
0x40011a:	mov	qword ptr [rbp - 8], rax
0x40011e:	mov	rax, qword ptr [rbp - 8]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x41
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x400134, 18 bytes>
0x400134:	mov	rax, qword ptr [rbp - 8]
0x400138:	add	rax, 0x63
0x40013c:	mov	byte ptr [rax], 0
0x40013f:	cmp	qword ptr [rbp - 8], 0
0x400144:	je	0x400152
<Block for 0x400146, 12 bytes>
0x400146:	mov	rax, qword ptr [rbp - 8]
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500010
