<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 34 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x120], rax
0x40006a:	mov	eax, 0
0x40006f:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400074, 8 bytes>
0x400074:	test	eax, eax
0x400076:	je	0x400158
<Block for 0x400158, 15 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0x120]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500028
<Block for 0x40007c, 15 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 0x120]
0x400083:	mov	rdi, rax
0x400086:	call	0x500008
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40008b, 29 bytes>
0x40008b:	mov	qword ptr [rbp - 0x118], rax
0x400092:	mov	eax, 0xfa
0x400097:	sub	rax, qword ptr [rbp - 0x118]
0x40009e:	cmp	rax, 1
0x4000a2:	jbe	0x400158
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500030
<Block for 0x4000a8, 53 bytes>
0x4000a8:	mov	rax, qword ptr [rip + 0xfff61]
0x4000af:	mov	rdx, qword ptr [rbp - 0x118]
0x4000b6:	mov	ecx, 0xfa
0x4000bb:	sub	ecx, edx
0x4000bd:	mov	edx, ecx
0x4000bf:	mov	esi, edx
0x4000c1:	mov	rcx, qword ptr [rbp - 0x120]
0x4000c8:	mov	rdx, qword ptr [rbp - 0x118]
0x4000cf:	add	rcx, rdx
0x4000d2:	mov	rdx, rax
0x4000d5:	mov	rdi, rcx
0x4000d8:	call	0x500018
<Block for 0x4000dd, 5 bytes>
0x4000dd:	test	rax, rax
0x4000e0:	je	0x400138
<Block for 0x400138, 12 bytes>
0x400138:	lea	rdi, [rip + 0x21a]
0x40013f:	call	0x500020
<Block for 0x4000e2, 15 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 0x120]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500008
<Block for 0x400144, 35 bytes>
0x400144:	mov	rdx, qword ptr [rbp - 0x120]
0x40014b:	mov	rax, qword ptr [rbp - 0x118]
0x400152:	add	rax, rdx
0x400155:	mov	byte ptr [rax], 0
0x400158:	mov	rax, qword ptr [rbp - 0x120]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500028
<Block for 0x4000f1, 17 bytes>
0x4000f1:	mov	qword ptr [rbp - 0x118], rax
0x4000f8:	cmp	qword ptr [rbp - 0x118], 0
0x400100:	je	0x400158
<Block for 0x400102, 28 bytes>
0x400102:	mov	rax, qword ptr [rbp - 0x118]
0x400109:	lea	rdx, [rax - 1]
0x40010d:	mov	rax, qword ptr [rbp - 0x120]
0x400114:	add	rax, rdx
0x400117:	movzx	eax, byte ptr [rax]
0x40011a:	cmp	al, 0xa
0x40011c:	jne	0x400158
<Block for 0x40011e, 26 bytes>
0x40011e:	mov	rax, qword ptr [rbp - 0x118]
0x400125:	lea	rdx, [rax - 1]
0x400129:	mov	rax, qword ptr [rbp - 0x120]
0x400130:	add	rax, rdx
0x400133:	mov	byte ptr [rax], 0
0x400136:	jmp	0x400158
