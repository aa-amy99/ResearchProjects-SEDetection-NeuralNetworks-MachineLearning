<Block for 0x4000b5, 46 bytes>
0x4000b5:	endbr64	
0x4000b9:	push	rbp
0x4000ba:	mov	rbp, rsp
0x4000bd:	sub	rsp, 0x30
0x4000c1:	mov	rax, qword ptr fs:[0x28]
0x4000ca:	mov	qword ptr [rbp - 8], rax
0x4000ce:	xor	eax, eax
0x4000d0:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4000d7:	lea	rax, [rbp - 0x24]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500028
<Block for 0x4000e3, 25 bytes>
0x4000e3:	mov	eax, dword ptr [rbp - 0x24]
0x4000e6:	cdqe	
0x4000e8:	shl	rax, 2
0x4000ec:	mov	qword ptr [rbp - 0x18], rax
0x4000f0:	mov	rax, qword ptr [rbp - 0x18]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500008
<Block for 0x4000fc, 23 bytes>
0x4000fc:	mov	qword ptr [rbp - 0x10], rax
0x400100:	mov	qword ptr [rbp - 0x20], 0
0x400108:	mov	eax, dword ptr [rbp - 0x24]
0x40010b:	cdqe	
0x40010d:	cmp	qword ptr [rbp - 0x20], rax
0x400111:	jae	0x400133
<Block for 0x400113, 32 bytes>
0x400113:	mov	rax, qword ptr [rbp - 0x20]
0x400117:	lea	rdx, [rax*4]
0x40011f:	mov	rax, qword ptr [rbp - 0x10]
0x400123:	add	rax, rdx
0x400126:	mov	dword ptr [rax], 0
0x40012c:	add	qword ptr [rbp - 0x20], 1
0x400131:	jmp	0x400108
<Block for 0x400133, 13 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x10]
0x400137:	mov	eax, dword ptr [rax]
0x400139:	mov	edi, eax
0x40013b:	call	0x500010
<Block for 0x400108, 11 bytes>
0x400108:	mov	eax, dword ptr [rbp - 0x24]
0x40010b:	cdqe	
0x40010d:	cmp	qword ptr [rbp - 0x20], rax
0x400111:	jae	0x400133
<Block for 0x400140, 7 bytes>
0x400140:	cmp	qword ptr [rbp - 0x10], 0
0x400145:	je	0x400153
<Block for 0x400153, 16 bytes>
0x400153:	nop	
0x400154:	mov	rax, qword ptr [rbp - 8]
0x400158:	xor	rax, qword ptr fs:[0x28]
0x400161:	je	0x400168
<Block for 0x400147, 12 bytes>
0x400147:	mov	rax, qword ptr [rbp - 0x10]
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500018
<Block for 0x400168, 2 bytes>
0x400168:	leave	
0x400169:	ret	
<Block for 0x400163, 5 bytes>
0x400163:	call	0x500020
