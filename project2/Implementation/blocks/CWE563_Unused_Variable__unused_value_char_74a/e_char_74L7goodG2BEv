<Block for 0x400126, 43 bytes>
0x400126:	endbr64	
0x40012a:	push	rbp
0x40012b:	mov	rbp, rsp
0x40012e:	push	rbx
0x40012f:	sub	rsp, 0x88
0x400136:	mov	rax, qword ptr fs:[0x28]
0x40013f:	mov	qword ptr [rbp - 0x18], rax
0x400143:	xor	eax, eax
0x400145:	lea	rax, [rbp - 0x80]
0x400149:	mov	rdi, rax
0x40014c:	call	0x4004c6
<Block for 0x400151, 21 bytes>
0x400151:	mov	byte ptr [rbp - 0x81], 0x43
0x400158:	movsx	eax, byte ptr [rbp - 0x81]
0x40015f:	mov	edi, eax
0x400161:	call	0x500018
<Block for 0x400166, 26 bytes>
0x400166:	mov	dword ptr [rbp - 0x50], 0
0x40016d:	lea	rdx, [rbp - 0x50]
0x400171:	lea	rax, [rbp - 0x80]
0x400175:	mov	rsi, rdx
0x400178:	mov	rdi, rax
0x40017b:	call	0x400692
<Block for 0x400180, 35 bytes>
0x400180:	movzx	edx, byte ptr [rbp - 0x81]
0x400187:	mov	byte ptr [rax], dl
0x400189:	mov	dword ptr [rbp - 0x50], 1
0x400190:	lea	rdx, [rbp - 0x50]
0x400194:	lea	rax, [rbp - 0x80]
0x400198:	mov	rsi, rdx
0x40019b:	mov	rdi, rax
0x40019e:	call	0x400692
<Block for 0x4001a3, 35 bytes>
0x4001a3:	movzx	edx, byte ptr [rbp - 0x81]
0x4001aa:	mov	byte ptr [rax], dl
0x4001ac:	mov	dword ptr [rbp - 0x50], 2
0x4001b3:	lea	rdx, [rbp - 0x50]
0x4001b7:	lea	rax, [rbp - 0x80]
0x4001bb:	mov	rsi, rdx
0x4001be:	mov	rdi, rax
0x4001c1:	call	0x400692
<Block for 0x4001c6, 28 bytes>
0x4001c6:	movzx	edx, byte ptr [rbp - 0x81]
0x4001cd:	mov	byte ptr [rax], dl
0x4001cf:	lea	rdx, [rbp - 0x80]
0x4001d3:	lea	rax, [rbp - 0x50]
0x4001d7:	mov	rsi, rdx
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x400506
<Block for 0x4001e2, 12 bytes>
0x4001e2:	lea	rax, [rbp - 0x50]
0x4001e6:	mov	rdi, rax
0x4001e9:	call	0x500020
<Block for 0x4001ee, 12 bytes>
0x4001ee:	lea	rax, [rbp - 0x50]
0x4001f2:	mov	rdi, rax
0x4001f5:	call	0x4004e6
<Block for 0x4001fa, 12 bytes>
0x4001fa:	lea	rax, [rbp - 0x80]
0x4001fe:	mov	rdi, rax
0x400201:	call	0x4004e6
<Block for 0x400206, 16 bytes>
0x400206:	nop	
0x400207:	mov	rax, qword ptr [rbp - 0x18]
0x40020b:	xor	rax, qword ptr fs:[0x28]
0x400214:	je	0x400250
<Block for 0x400250, 10 bytes>
0x400250:	add	rsp, 0x88
0x400257:	pop	rbx
0x400258:	pop	rbp
0x400259:	ret	
<Block for 0x400216, 2 bytes>
0x400216:	jmp	0x40024b
<Block for 0x40024b, 5 bytes>
0x40024b:	call	0x500010
