<Block for 0x40001e, 30 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	push	rbx
0x400027:	sub	rsp, 0x18
0x40002b:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400032:	mov	eax, 0
0x400037:	call	0x400000
<Block for 0x40003c, 4 bytes>
0x40003c:	test	eax, eax
0x40003e:	je	0x400089
<Block for 0x400089, 6 bytes>
0x400089:	cmp	dword ptr [rbp - 0x14], 5
0x40008d:	jg	0x4000ae
<Block for 0x400040, 5 bytes>
0x400040:	call	0x500000
<Block for 0x40008f, 31 bytes>
0x40008f:	lea	rcx, [rip + 0x16a]
0x400096:	mov	edx, 0x32
0x40009b:	lea	rsi, [rip + 0xfe]
0x4000a2:	lea	rdi, [rip + 0x11d]
0x4000a9:	call	0x500008
<Block for 0x4000ae, 8 bytes>
0x4000ae:	nop	
0x4000af:	add	rsp, 0x18
0x4000b3:	pop	rbx
0x4000b4:	pop	rbp
0x4000b5:	ret	
<Block for 0x400045, 7 bytes>
0x400045:	and	eax, 1
0x400048:	test	eax, eax
0x40004a:	je	0x400069
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500000
<Block for 0x40004c, 5 bytes>
0x40004c:	call	0x500000
<Block for 0x40006e, 10 bytes>
0x40006e:	shl	eax, 0x1e
0x400071:	mov	ebx, eax
0x400073:	call	0x500000
<Block for 0x400051, 10 bytes>
0x400051:	shl	eax, 0x1e
0x400054:	mov	ebx, eax
0x400056:	call	0x500000
<Block for 0x400078, 10 bytes>
0x400078:	shl	eax, 0xf
0x40007b:	xor	ebx, eax
0x40007d:	call	0x500000
<Block for 0x40005b, 10 bytes>
0x40005b:	shl	eax, 0xf
0x40005e:	xor	ebx, eax
0x400060:	call	0x500000
<Block for 0x400082, 13 bytes>
0x400082:	xor	eax, ebx
0x400084:	not	eax
0x400086:	mov	dword ptr [rbp - 0x14], eax
0x400089:	cmp	dword ptr [rbp - 0x14], 5
0x40008d:	jg	0x4000ae
<Block for 0x400065, 4 bytes>
0x400065:	xor	eax, ebx
0x400067:	jmp	0x400086
<Block for 0x400086, 9 bytes>
0x400086:	mov	dword ptr [rbp - 0x14], eax
0x400089:	cmp	dword ptr [rbp - 0x14], 5
0x40008d:	jg	0x4000ae
