<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x40009d
<Block for 0x40009d, 3 bytes>
0x40009d:	nop	
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0
0x40003d:	call	0x500000
<Block for 0x400042, 11 bytes>
0x400042:	mov	qword ptr [rbp - 8], rax
0x400046:	cmp	qword ptr [rbp - 8], 0
0x40004b:	jne	0x400057
<Block for 0x40004d, 10 bytes>
0x40004d:	mov	edi, 1
0x400052:	call	0x500008
<Block for 0x400057, 12 bytes>
0x400057:	mov	rax, qword ptr [rbp - 8]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
<Block for 0x400063, 27 bytes>
0x400063:	mov	rax, qword ptr [rbp - 8]
0x400067:	mov	edx, 0x180
0x40006c:	mov	esi, 0x42
0x400071:	mov	rdi, rax
0x400074:	mov	eax, 0
0x400079:	call	0x500018
<Block for 0x40007e, 9 bytes>
0x40007e:	mov	dword ptr [rbp - 0xc], eax
0x400081:	cmp	dword ptr [rbp - 0xc], -1
0x400085:	je	0x40009d
<Block for 0x400087, 12 bytes>
0x400087:	lea	rdi, [rip + 0x16a]
0x40008e:	call	0x500010
<Block for 0x400093, 10 bytes>
0x400093:	mov	eax, dword ptr [rbp - 0xc]
0x400096:	mov	edi, eax
0x400098:	call	0x500020
