<Block for 0x4000a0, 37 bytes>
0x4000a0:	endbr64	
0x4000a4:	push	rbp
0x4000a5:	mov	rbp, rsp
0x4000a8:	sub	rsp, 0x30
0x4000ac:	mov	rax, qword ptr fs:[0x28]
0x4000b5:	mov	qword ptr [rbp - 8], rax
0x4000b9:	xor	eax, eax
0x4000bb:	mov	eax, 0
0x4000c0:	call	0x40000f
<Block for 0x4000c5, 4 bytes>
0x4000c5:	test	eax, eax
0x4000c7:	je	0x4000d7
<Block for 0x4000d7, 40 bytes>
0x4000d7:	movabs	rax, 0x6c69662f706d742f
0x4000e1:	movabs	rdx, 0x58585858585865
0x4000eb:	mov	qword ptr [rbp - 0x20], rax
0x4000ef:	mov	qword ptr [rbp - 0x18], rdx
0x4000f3:	lea	rax, [rbp - 0x20]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500028
<Block for 0x4000c9, 12 bytes>
0x4000c9:	lea	rdi, [rip + 0x155]
0x4000d0:	call	0x500010
<Block for 0x4000ff, 15 bytes>
0x4000ff:	mov	dword ptr [rbp - 0x24], eax
0x400102:	lea	rax, [rbp - 0x20]
0x400106:	mov	rdi, rax
0x400109:	call	0x500010
<Block for 0x4000d5, 2 bytes>
0x4000d5:	jmp	0x40012a
<Block for 0x40010e, 6 bytes>
0x40010e:	cmp	dword ptr [rbp - 0x24], -1
0x400112:	je	0x40012a
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0xdd]
0x40011b:	call	0x500010
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500030
<Block for 0x400120, 10 bytes>
0x400120:	mov	eax, dword ptr [rbp - 0x24]
0x400123:	mov	edi, eax
0x400125:	call	0x500020
