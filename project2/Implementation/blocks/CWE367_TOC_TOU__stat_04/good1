<Block for 0x400193, 36 bytes>
0x400193:	endbr64	
0x400197:	push	rbp
0x400198:	mov	rbp, rsp
0x40019b:	add	rsp, -0x80
0x40019f:	mov	rax, qword ptr fs:[0x28]
0x4001a8:	mov	qword ptr [rbp - 8], rax
0x4001ac:	xor	eax, eax
0x4001ae:	mov	eax, 0
0x4001b3:	test	eax, eax
0x4001b5:	je	0x4001c8
<Block for 0x4001c8, 134 bytes>
0x4001c8:	mov	qword ptr [rbp - 0x70], 0
0x4001d0:	mov	qword ptr [rbp - 0x68], 0
0x4001d8:	mov	qword ptr [rbp - 0x60], 0
0x4001e0:	mov	qword ptr [rbp - 0x58], 0
0x4001e8:	mov	qword ptr [rbp - 0x50], 0
0x4001f0:	mov	qword ptr [rbp - 0x48], 0
0x4001f8:	mov	qword ptr [rbp - 0x40], 0
0x400200:	mov	qword ptr [rbp - 0x38], 0
0x400208:	mov	qword ptr [rbp - 0x30], 0
0x400210:	mov	qword ptr [rbp - 0x28], 0
0x400218:	mov	qword ptr [rbp - 0x20], 0
0x400220:	mov	qword ptr [rbp - 0x18], 0
0x400228:	mov	dword ptr [rbp - 0x10], 0
0x40022f:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400236:	mov	rdx, qword ptr [rip + 0xffdc3]
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	mov	esi, 0x64
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x4001b7, 12 bytes>
0x4001b7:	lea	rdi, [rip + 0x2d9]
0x4001be:	call	0x500010
<Block for 0x40024e, 5 bytes>
0x40024e:	test	rax, rax
0x400251:	jne	0x400263
<Block for 0x4001c3, 5 bytes>
0x4001c3:	jmp	0x4002e2
<Block for 0x400253, 12 bytes>
0x400253:	lea	rdi, [rip + 0x222]
0x40025a:	call	0x500010
<Block for 0x400263, 11 bytes>
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	movzx	eax, byte ptr [rax]
0x40026a:	test	al, al
0x40026c:	je	0x400283
<Block for 0x4002e2, 16 bytes>
0x4002e2:	nop	
0x4002e3:	mov	rax, qword ptr [rbp - 8]
0x4002e7:	xor	rax, qword ptr fs:[0x28]
0x4002f0:	je	0x4002f7
<Block for 0x40025f, 15 bytes>
0x40025f:	mov	byte ptr [rbp - 0x70], 0
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	movzx	eax, byte ptr [rax]
0x40026a:	test	al, al
0x40026c:	je	0x400283
<Block for 0x400283, 22 bytes>
0x400283:	lea	rax, [rbp - 0x70]
0x400287:	mov	esi, 2
0x40028c:	mov	rdi, rax
0x40028f:	mov	eax, 0
0x400294:	call	0x500030
<Block for 0x40026e, 12 bytes>
0x40026e:	lea	rax, [rbp - 0x70]
0x400272:	mov	rdi, rax
0x400275:	call	0x500018
<Block for 0x4002f7, 2 bytes>
0x4002f7:	leave	
0x4002f8:	ret	
<Block for 0x4002f2, 5 bytes>
0x4002f2:	call	0x500048
<Block for 0x400299, 9 bytes>
0x400299:	mov	dword ptr [rbp - 0x74], eax
0x40029c:	cmp	dword ptr [rbp - 0x74], -1
0x4002a0:	jne	0x4002ac
<Block for 0x40027a, 31 bytes>
0x40027a:	sub	rax, 1
0x40027e:	mov	byte ptr [rbp + rax - 0x70], 0
0x400283:	lea	rax, [rbp - 0x70]
0x400287:	mov	esi, 2
0x40028c:	mov	rdi, rax
0x40028f:	mov	eax, 0
0x400294:	call	0x500030
<Block for 0x4002a2, 10 bytes>
0x4002a2:	mov	edi, 1
0x4002a7:	call	0x500028
<Block for 0x4002ac, 22 bytes>
0x4002ac:	mov	eax, dword ptr [rbp - 0x74]
0x4002af:	mov	edx, 0xc
0x4002b4:	lea	rsi, [rip + 0x1f1]
0x4002bb:	mov	edi, eax
0x4002bd:	call	0x500038
<Block for 0x4002c2, 6 bytes>
0x4002c2:	cmp	rax, -1
0x4002c6:	jne	0x4002d2
<Block for 0x4002c8, 10 bytes>
0x4002c8:	mov	edi, 1
0x4002cd:	call	0x500028
<Block for 0x4002d2, 6 bytes>
0x4002d2:	cmp	dword ptr [rbp - 0x74], -1
0x4002d6:	je	0x4002e2
<Block for 0x4002d8, 10 bytes>
0x4002d8:	mov	eax, dword ptr [rbp - 0x74]
0x4002db:	mov	edi, eax
0x4002dd:	call	0x500040
