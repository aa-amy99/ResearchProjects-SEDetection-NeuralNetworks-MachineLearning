<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x40017c
<Block for 0x40017c, 16 bytes>
0x40017c:	nop	
0x40017d:	mov	rax, qword ptr [rbp - 8]
0x400181:	xor	rax, qword ptr fs:[0x28]
0x40018a:	je	0x400191
<Block for 0x40002b, 137 bytes>
0x40002b:	mov	qword ptr [rbp - 0x70], 0
0x400033:	mov	qword ptr [rbp - 0x68], 0
0x40003b:	mov	qword ptr [rbp - 0x60], 0
0x400043:	mov	qword ptr [rbp - 0x58], 0
0x40004b:	mov	qword ptr [rbp - 0x50], 0
0x400053:	mov	qword ptr [rbp - 0x48], 0
0x40005b:	mov	qword ptr [rbp - 0x40], 0
0x400063:	mov	qword ptr [rbp - 0x38], 0
0x40006b:	mov	qword ptr [rbp - 0x30], 0
0x400073:	mov	qword ptr [rbp - 0x28], 0
0x40007b:	mov	qword ptr [rbp - 0x20], 0
0x400083:	mov	qword ptr [rbp - 0x18], 0
0x40008b:	mov	dword ptr [rbp - 0x10], 0
0x400092:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x40009c:	mov	rdx, qword ptr [rip + 0xfff5d]
0x4000a3:	lea	rax, [rbp - 0x70]
0x4000a7:	mov	esi, 0x64
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500008
<Block for 0x400191, 2 bytes>
0x400191:	leave	
0x400192:	ret	
<Block for 0x40018c, 5 bytes>
0x40018c:	call	0x500048
<Block for 0x4000b4, 5 bytes>
0x4000b4:	test	rax, rax
0x4000b7:	jne	0x4000c9
<Block for 0x4000b9, 12 bytes>
0x4000b9:	lea	rdi, [rip + 0x3bc]
0x4000c0:	call	0x500010
<Block for 0x4000c9, 11 bytes>
0x4000c9:	lea	rax, [rbp - 0x70]
0x4000cd:	movzx	eax, byte ptr [rax]
0x4000d0:	test	al, al
0x4000d2:	je	0x4000e9
<Block for 0x4000c5, 15 bytes>
0x4000c5:	mov	byte ptr [rbp - 0x70], 0
0x4000c9:	lea	rax, [rbp - 0x70]
0x4000cd:	movzx	eax, byte ptr [rax]
0x4000d0:	test	al, al
0x4000d2:	je	0x4000e9
<Block for 0x4000e9, 22 bytes>
0x4000e9:	lea	rdx, [rbp - 0x100]
0x4000f0:	lea	rax, [rbp - 0x70]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500020
<Block for 0x4000d4, 12 bytes>
0x4000d4:	lea	rax, [rbp - 0x70]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500018
<Block for 0x4000ff, 5 bytes>
0x4000ff:	cmp	eax, -1
0x400102:	jne	0x40010e
<Block for 0x4000e0, 31 bytes>
0x4000e0:	sub	rax, 1
0x4000e4:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000e9:	lea	rdx, [rbp - 0x100]
0x4000f0:	lea	rax, [rbp - 0x70]
0x4000f4:	mov	rsi, rdx
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500020
<Block for 0x400104, 10 bytes>
0x400104:	mov	edi, 1
0x400109:	call	0x500028
<Block for 0x40010e, 22 bytes>
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	esi, 2
0x400117:	mov	rdi, rax
0x40011a:	mov	eax, 0
0x40011f:	call	0x500030
<Block for 0x400124, 15 bytes>
0x400124:	mov	dword ptr [rbp - 0x104], eax
0x40012a:	cmp	dword ptr [rbp - 0x104], -1
0x400131:	jne	0x40013d
<Block for 0x400133, 10 bytes>
0x400133:	mov	edi, 1
0x400138:	call	0x500028
<Block for 0x40013d, 25 bytes>
0x40013d:	mov	eax, dword ptr [rbp - 0x104]
0x400143:	mov	edx, 0xb
0x400148:	lea	rsi, [rip + 0x33c]
0x40014f:	mov	edi, eax
0x400151:	call	0x500038
<Block for 0x400156, 6 bytes>
0x400156:	cmp	rax, -1
0x40015a:	jne	0x400166
<Block for 0x40015c, 10 bytes>
0x40015c:	mov	edi, 1
0x400161:	call	0x500028
<Block for 0x400166, 9 bytes>
0x400166:	cmp	dword ptr [rbp - 0x104], -1
0x40016d:	je	0x40017c
<Block for 0x40016f, 13 bytes>
0x40016f:	mov	eax, dword ptr [rbp - 0x104]
0x400175:	mov	edi, eax
0x400177:	call	0x500040
