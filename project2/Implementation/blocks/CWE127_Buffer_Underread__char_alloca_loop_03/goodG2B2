<Block for 0x40029e, 84 bytes>
0x40029e:	endbr64	
0x4002a2:	push	rbp
0x4002a3:	mov	rbp, rsp
0x4002a6:	sub	rsp, 0x90
0x4002ad:	mov	rax, qword ptr fs:[0x28]
0x4002b6:	mov	qword ptr [rbp - 8], rax
0x4002ba:	xor	eax, eax
0x4002bc:	mov	eax, 0x10
0x4002c1:	sub	rax, 1
0x4002c5:	add	rax, 0x6c
0x4002c9:	mov	esi, 0x10
0x4002ce:	mov	edx, 0
0x4002d3:	div	rsi
0x4002d6:	imul	rax, rax, 0x10
0x4002da:	mov	rdx, rax
0x4002dd:	and	rdx, 0xfffffffffffff000
0x4002e4:	mov	rcx, rsp
0x4002e7:	sub	rcx, rdx
0x4002ea:	mov	rdx, rcx
0x4002ed:	cmp	rsp, rdx
0x4002f0:	je	0x400304
<Block for 0x400304, 26 bytes>
0x400304:	mov	rdx, rax
0x400307:	and	edx, 0xfff
0x40030d:	sub	rsp, rdx
0x400310:	mov	rdx, rax
0x400313:	and	edx, 0xfff
0x400319:	test	rdx, rdx
0x40031c:	je	0x40032e
<Block for 0x4002f2, 18 bytes>
0x4002f2:	sub	rsp, 0x1000
0x4002f9:	or	qword ptr [rsp + 0xff8], 0
0x400302:	jmp	0x4002ed
<Block for 0x40032e, 41 bytes>
0x40032e:	mov	rax, rsp
0x400331:	add	rax, 0xf
0x400335:	shr	rax, 4
0x400339:	shl	rax, 4
0x40033d:	mov	qword ptr [rbp - 0x80], rax
0x400341:	mov	rax, qword ptr [rbp - 0x80]
0x400345:	mov	edx, 0x63
0x40034a:	mov	esi, 0x41
0x40034f:	mov	rdi, rax
0x400352:	call	0x500000
<Block for 0x40031e, 57 bytes>
0x40031e:	and	eax, 0xfff
0x400323:	sub	rax, 8
0x400327:	add	rax, rsp
0x40032a:	or	qword ptr [rax], 0
0x40032e:	mov	rax, rsp
0x400331:	add	rax, 0xf
0x400335:	shr	rax, 4
0x400339:	shl	rax, 4
0x40033d:	mov	qword ptr [rbp - 0x80], rax
0x400341:	mov	rax, qword ptr [rbp - 0x80]
0x400345:	mov	edx, 0x63
0x40034a:	mov	esi, 0x41
0x40034f:	mov	rdi, rax
0x400352:	call	0x500000
<Block for 0x4002ed, 5 bytes>
0x4002ed:	cmp	rsp, rdx
0x4002f0:	je	0x400304
<Block for 0x400357, 41 bytes>
0x400357:	mov	rax, qword ptr [rbp - 0x80]
0x40035b:	add	rax, 0x63
0x40035f:	mov	byte ptr [rax], 0
0x400362:	mov	rax, qword ptr [rbp - 0x80]
0x400366:	mov	qword ptr [rbp - 0x78], rax
0x40036a:	lea	rax, [rbp - 0x70]
0x40036e:	mov	edx, 0x63
0x400373:	mov	esi, 0x43
0x400378:	mov	rdi, rax
0x40037b:	call	0x500000
<Block for 0x400380, 17 bytes>
0x400380:	mov	byte ptr [rbp - 0xd], 0
0x400384:	mov	qword ptr [rbp - 0x88], 0
0x40038f:	jmp	0x4003ba
<Block for 0x4003ba, 10 bytes>
0x4003ba:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003c2:	jbe	0x400391
<Block for 0x400391, 51 bytes>
0x400391:	mov	rdx, qword ptr [rbp - 0x78]
0x400395:	mov	rax, qword ptr [rbp - 0x88]
0x40039c:	add	rax, rdx
0x40039f:	movzx	eax, byte ptr [rax]
0x4003a2:	lea	rcx, [rbp - 0x70]
0x4003a6:	mov	rdx, qword ptr [rbp - 0x88]
0x4003ad:	add	rdx, rcx
0x4003b0:	mov	byte ptr [rdx], al
0x4003b2:	add	qword ptr [rbp - 0x88], 1
0x4003ba:	cmp	qword ptr [rbp - 0x88], 0x63
0x4003c2:	jbe	0x400391
<Block for 0x4003c4, 16 bytes>
0x4003c4:	mov	byte ptr [rbp - 0xd], 0
0x4003c8:	lea	rax, [rbp - 0x70]
0x4003cc:	mov	rdi, rax
0x4003cf:	call	0x500008
<Block for 0x4003d4, 16 bytes>
0x4003d4:	nop	
0x4003d5:	mov	rax, qword ptr [rbp - 8]
0x4003d9:	xor	rax, qword ptr fs:[0x28]
0x4003e2:	je	0x4003e9
<Block for 0x4003e9, 2 bytes>
0x4003e9:	leave	
0x4003ea:	ret	
<Block for 0x4003e4, 5 bytes>
0x4003e4:	call	0x500010
