<Block for 0x400000, 81 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	qword ptr [rbp - 0x98], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x98]
0x40002c:	mov	qword ptr [rbp - 0x80], rax
0x400030:	mov	rax, qword ptr [rbp - 0x80]
0x400034:	mov	rax, qword ptr [rax]
0x400037:	mov	qword ptr [rbp - 0x78], rax
0x40003b:	lea	rax, [rbp - 0x70]
0x40003f:	mov	edx, 0x63
0x400044:	mov	esi, 0x43
0x400049:	mov	rdi, rax
0x40004c:	call	0x500000
<Block for 0x400051, 25 bytes>
0x400051:	mov	byte ptr [rbp - 0xd], 0
0x400055:	mov	qword ptr [rbp - 0x88], 0
0x400060:	cmp	qword ptr [rbp - 0x88], 0x63
0x400068:	ja	0x400095
<Block for 0x40006a, 43 bytes>
0x40006a:	mov	rdx, qword ptr [rbp - 0x78]
0x40006e:	mov	rax, qword ptr [rbp - 0x88]
0x400075:	add	rax, rdx
0x400078:	movzx	eax, byte ptr [rax]
0x40007b:	lea	rcx, [rbp - 0x70]
0x40007f:	mov	rdx, qword ptr [rbp - 0x88]
0x400086:	add	rdx, rcx
0x400089:	mov	byte ptr [rdx], al
0x40008b:	add	qword ptr [rbp - 0x88], 1
0x400093:	jmp	0x400060
<Block for 0x400095, 16 bytes>
0x400095:	mov	byte ptr [rbp - 0xd], 0
0x400099:	lea	rax, [rbp - 0x70]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500008
<Block for 0x400060, 10 bytes>
0x400060:	cmp	qword ptr [rbp - 0x88], 0x63
0x400068:	ja	0x400095
<Block for 0x4000a5, 16 bytes>
0x4000a5:	nop	
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	xor	rax, qword ptr fs:[0x28]
0x4000b3:	je	0x4000ba
<Block for 0x4000ba, 2 bytes>
0x4000ba:	leave	
0x4000bb:	ret	
<Block for 0x4000b5, 5 bytes>
0x4000b5:	call	0x500010
