<Block for 0x4000bc, 81 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	sub	rsp, 0xa0
0x4000cb:	mov	qword ptr [rbp - 0x98], rdi
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	mov	rax, qword ptr [rbp - 0x98]
0x4000e8:	mov	qword ptr [rbp - 0x80], rax
0x4000ec:	mov	rax, qword ptr [rbp - 0x80]
0x4000f0:	mov	rax, qword ptr [rax]
0x4000f3:	mov	qword ptr [rbp - 0x78], rax
0x4000f7:	lea	rax, [rbp - 0x70]
0x4000fb:	mov	edx, 0x63
0x400100:	mov	esi, 0x43
0x400105:	mov	rdi, rax
0x400108:	call	0x500000
<Block for 0x40010d, 25 bytes>
0x40010d:	mov	byte ptr [rbp - 0xd], 0
0x400111:	mov	qword ptr [rbp - 0x88], 0
0x40011c:	cmp	qword ptr [rbp - 0x88], 0x63
0x400124:	ja	0x400151
<Block for 0x400126, 43 bytes>
0x400126:	mov	rdx, qword ptr [rbp - 0x78]
0x40012a:	mov	rax, qword ptr [rbp - 0x88]
0x400131:	add	rax, rdx
0x400134:	movzx	eax, byte ptr [rax]
0x400137:	lea	rcx, [rbp - 0x70]
0x40013b:	mov	rdx, qword ptr [rbp - 0x88]
0x400142:	add	rdx, rcx
0x400145:	mov	byte ptr [rdx], al
0x400147:	add	qword ptr [rbp - 0x88], 1
0x40014f:	jmp	0x40011c
<Block for 0x400151, 16 bytes>
0x400151:	mov	byte ptr [rbp - 0xd], 0
0x400155:	lea	rax, [rbp - 0x70]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500008
<Block for 0x40011c, 10 bytes>
0x40011c:	cmp	qword ptr [rbp - 0x88], 0x63
0x400124:	ja	0x400151
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500010
