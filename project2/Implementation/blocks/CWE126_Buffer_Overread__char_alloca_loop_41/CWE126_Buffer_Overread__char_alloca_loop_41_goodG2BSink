<Block for 0x40023f, 59 bytes>
0x40023f:	endbr64	
0x400243:	push	rbp
0x400244:	mov	rbp, rsp
0x400247:	sub	rsp, 0x90
0x40024e:	mov	qword ptr [rbp - 0x88], rdi
0x400255:	mov	rax, qword ptr fs:[0x28]
0x40025e:	mov	qword ptr [rbp - 8], rax
0x400262:	xor	eax, eax
0x400264:	lea	rax, [rbp - 0x70]
0x400268:	mov	edx, 0x63
0x40026d:	mov	esi, 0x43
0x400272:	mov	rdi, rax
0x400275:	call	0x500000
<Block for 0x40027a, 16 bytes>
0x40027a:	mov	byte ptr [rbp - 0xd], 0
0x40027e:	lea	rax, [rbp - 0x70]
0x400282:	mov	rdi, rax
0x400285:	call	0x500008
<Block for 0x40028a, 14 bytes>
0x40028a:	mov	qword ptr [rbp - 0x78], rax
0x40028e:	mov	qword ptr [rbp - 0x80], 0
0x400296:	jmp	0x4002bb
<Block for 0x4002bb, 10 bytes>
0x4002bb:	mov	rax, qword ptr [rbp - 0x80]
0x4002bf:	cmp	rax, qword ptr [rbp - 0x78]
0x4002c3:	jb	0x400298
<Block for 0x400298, 45 bytes>
0x400298:	mov	rdx, qword ptr [rbp - 0x88]
0x40029f:	mov	rax, qword ptr [rbp - 0x80]
0x4002a3:	add	rax, rdx
0x4002a6:	movzx	eax, byte ptr [rax]
0x4002a9:	lea	rcx, [rbp - 0x70]
0x4002ad:	mov	rdx, qword ptr [rbp - 0x80]
0x4002b1:	add	rdx, rcx
0x4002b4:	mov	byte ptr [rdx], al
0x4002b6:	add	qword ptr [rbp - 0x80], 1
0x4002bb:	mov	rax, qword ptr [rbp - 0x80]
0x4002bf:	cmp	rax, qword ptr [rbp - 0x78]
0x4002c3:	jb	0x400298
<Block for 0x4002c5, 16 bytes>
0x4002c5:	mov	byte ptr [rbp - 0xd], 0
0x4002c9:	lea	rax, [rbp - 0x70]
0x4002cd:	mov	rdi, rax
0x4002d0:	call	0x500010
<Block for 0x4002d5, 16 bytes>
0x4002d5:	nop	
0x4002d6:	mov	rax, qword ptr [rbp - 8]
0x4002da:	xor	rax, qword ptr fs:[0x28]
0x4002e3:	je	0x4002ea
<Block for 0x4002ea, 2 bytes>
0x4002ea:	leave	
0x4002eb:	ret	
<Block for 0x4002e5, 5 bytes>
0x4002e5:	call	0x500018
