<Block for 0x4002ec, 81 bytes>
0x4002ec:	endbr64	
0x4002f0:	push	rbp
0x4002f1:	mov	rbp, rsp
0x4002f4:	sub	rsp, 0x20
0x4002f8:	mov	rax, qword ptr fs:[0x28]
0x400301:	mov	qword ptr [rbp - 8], rax
0x400305:	xor	eax, eax
0x400307:	mov	eax, 0x10
0x40030c:	sub	rax, 1
0x400310:	add	rax, 0x3a
0x400314:	mov	ecx, 0x10
0x400319:	mov	edx, 0
0x40031e:	div	rcx
0x400321:	imul	rax, rax, 0x10
0x400325:	mov	rdx, rax
0x400328:	and	rdx, 0xfffffffffffff000
0x40032f:	mov	rcx, rsp
0x400332:	sub	rcx, rdx
0x400335:	mov	rdx, rcx
0x400338:	cmp	rsp, rdx
0x40033b:	je	0x40034f
<Block for 0x40034f, 26 bytes>
0x40034f:	mov	rdx, rax
0x400352:	and	edx, 0xfff
0x400358:	sub	rsp, rdx
0x40035b:	mov	rdx, rax
0x40035e:	and	edx, 0xfff
0x400364:	test	rdx, rdx
0x400367:	je	0x400379
<Block for 0x40033d, 18 bytes>
0x40033d:	sub	rsp, 0x1000
0x400344:	or	qword ptr [rsp + 0xff8], 0
0x40034d:	jmp	0x400338
<Block for 0x400379, 73 bytes>
0x400379:	mov	rax, rsp
0x40037c:	add	rax, 0xf
0x400380:	shr	rax, 4
0x400384:	shl	rax, 4
0x400388:	mov	qword ptr [rbp - 0x20], rax
0x40038c:	mov	eax, 0x10
0x400391:	sub	rax, 1
0x400395:	add	rax, 0x6c
0x400399:	mov	edi, 0x10
0x40039e:	mov	edx, 0
0x4003a3:	div	rdi
0x4003a6:	imul	rax, rax, 0x10
0x4003aa:	mov	rdx, rax
0x4003ad:	and	rdx, 0xfffffffffffff000
0x4003b4:	mov	rsi, rsp
0x4003b7:	sub	rsi, rdx
0x4003ba:	mov	rdx, rsi
0x4003bd:	cmp	rsp, rdx
0x4003c0:	je	0x4003d4
<Block for 0x400369, 89 bytes>
0x400369:	and	eax, 0xfff
0x40036e:	sub	rax, 8
0x400372:	add	rax, rsp
0x400375:	or	qword ptr [rax], 0
0x400379:	mov	rax, rsp
0x40037c:	add	rax, 0xf
0x400380:	shr	rax, 4
0x400384:	shl	rax, 4
0x400388:	mov	qword ptr [rbp - 0x20], rax
0x40038c:	mov	eax, 0x10
0x400391:	sub	rax, 1
0x400395:	add	rax, 0x6c
0x400399:	mov	edi, 0x10
0x40039e:	mov	edx, 0
0x4003a3:	div	rdi
0x4003a6:	imul	rax, rax, 0x10
0x4003aa:	mov	rdx, rax
0x4003ad:	and	rdx, 0xfffffffffffff000
0x4003b4:	mov	rsi, rsp
0x4003b7:	sub	rsi, rdx
0x4003ba:	mov	rdx, rsi
0x4003bd:	cmp	rsp, rdx
0x4003c0:	je	0x4003d4
<Block for 0x400338, 5 bytes>
0x400338:	cmp	rsp, rdx
0x40033b:	je	0x40034f
<Block for 0x4003d4, 26 bytes>
0x4003d4:	mov	rdx, rax
0x4003d7:	and	edx, 0xfff
0x4003dd:	sub	rsp, rdx
0x4003e0:	mov	rdx, rax
0x4003e3:	and	edx, 0xfff
0x4003e9:	test	rdx, rdx
0x4003ec:	je	0x4003fe
<Block for 0x4003c2, 18 bytes>
0x4003c2:	sub	rsp, 0x1000
0x4003c9:	or	qword ptr [rsp + 0xff8], 0
0x4003d2:	jmp	0x4003bd
<Block for 0x4003fe, 41 bytes>
0x4003fe:	mov	rax, rsp
0x400401:	add	rax, 0xf
0x400405:	shr	rax, 4
0x400409:	shl	rax, 4
0x40040d:	mov	qword ptr [rbp - 0x18], rax
0x400411:	mov	rax, qword ptr [rbp - 0x20]
0x400415:	mov	edx, 0x31
0x40041a:	mov	esi, 0x41
0x40041f:	mov	rdi, rax
0x400422:	call	0x500000
<Block for 0x4003ee, 57 bytes>
0x4003ee:	and	eax, 0xfff
0x4003f3:	sub	rax, 8
0x4003f7:	add	rax, rsp
0x4003fa:	or	qword ptr [rax], 0
0x4003fe:	mov	rax, rsp
0x400401:	add	rax, 0xf
0x400405:	shr	rax, 4
0x400409:	shl	rax, 4
0x40040d:	mov	qword ptr [rbp - 0x18], rax
0x400411:	mov	rax, qword ptr [rbp - 0x20]
0x400415:	mov	edx, 0x31
0x40041a:	mov	esi, 0x41
0x40041f:	mov	rdi, rax
0x400422:	call	0x500000
<Block for 0x4003bd, 5 bytes>
0x4003bd:	cmp	rsp, rdx
0x4003c0:	je	0x4003d4
<Block for 0x400427, 33 bytes>
0x400427:	mov	rax, qword ptr [rbp - 0x20]
0x40042b:	add	rax, 0x31
0x40042f:	mov	byte ptr [rax], 0
0x400432:	mov	rax, qword ptr [rbp - 0x18]
0x400436:	mov	edx, 0x63
0x40043b:	mov	esi, 0x41
0x400440:	mov	rdi, rax
0x400443:	call	0x500000
<Block for 0x400448, 31 bytes>
0x400448:	mov	rax, qword ptr [rbp - 0x18]
0x40044c:	add	rax, 0x63
0x400450:	mov	byte ptr [rax], 0
0x400453:	mov	rax, qword ptr [rbp - 0x18]
0x400457:	mov	qword ptr [rbp - 0x10], rax
0x40045b:	mov	rax, qword ptr [rbp - 0x10]
0x40045f:	mov	rdi, rax
0x400462:	call	0x40023f
<Block for 0x400467, 16 bytes>
0x400467:	nop	
0x400468:	mov	rax, qword ptr [rbp - 8]
0x40046c:	xor	rax, qword ptr fs:[0x28]
0x400475:	je	0x40047c
<Block for 0x40047c, 2 bytes>
0x40047c:	leave	
0x40047d:	ret	
<Block for 0x400477, 5 bytes>
0x400477:	call	0x500018
