<Block for 0x4000ad, 81 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0x20
0x4000b9:	mov	rax, qword ptr fs:[0x28]
0x4000c2:	mov	qword ptr [rbp - 8], rax
0x4000c6:	xor	eax, eax
0x4000c8:	mov	eax, 0x10
0x4000cd:	sub	rax, 1
0x4000d1:	add	rax, 0x3a
0x4000d5:	mov	ecx, 0x10
0x4000da:	mov	edx, 0
0x4000df:	div	rcx
0x4000e2:	imul	rax, rax, 0x10
0x4000e6:	mov	rdx, rax
0x4000e9:	and	rdx, 0xfffffffffffff000
0x4000f0:	mov	rcx, rsp
0x4000f3:	sub	rcx, rdx
0x4000f6:	mov	rdx, rcx
0x4000f9:	cmp	rsp, rdx
0x4000fc:	je	0x400110
<Block for 0x400110, 26 bytes>
0x400110:	mov	rdx, rax
0x400113:	and	edx, 0xfff
0x400119:	sub	rsp, rdx
0x40011c:	mov	rdx, rax
0x40011f:	and	edx, 0xfff
0x400125:	test	rdx, rdx
0x400128:	je	0x40013a
<Block for 0x4000fe, 18 bytes>
0x4000fe:	sub	rsp, 0x1000
0x400105:	or	qword ptr [rsp + 0xff8], 0
0x40010e:	jmp	0x4000f9
<Block for 0x40013a, 73 bytes>
0x40013a:	mov	rax, rsp
0x40013d:	add	rax, 0xf
0x400141:	shr	rax, 4
0x400145:	shl	rax, 4
0x400149:	mov	qword ptr [rbp - 0x20], rax
0x40014d:	mov	eax, 0x10
0x400152:	sub	rax, 1
0x400156:	add	rax, 0x6c
0x40015a:	mov	edi, 0x10
0x40015f:	mov	edx, 0
0x400164:	div	rdi
0x400167:	imul	rax, rax, 0x10
0x40016b:	mov	rdx, rax
0x40016e:	and	rdx, 0xfffffffffffff000
0x400175:	mov	rsi, rsp
0x400178:	sub	rsi, rdx
0x40017b:	mov	rdx, rsi
0x40017e:	cmp	rsp, rdx
0x400181:	je	0x400195
<Block for 0x40012a, 89 bytes>
0x40012a:	and	eax, 0xfff
0x40012f:	sub	rax, 8
0x400133:	add	rax, rsp
0x400136:	or	qword ptr [rax], 0
0x40013a:	mov	rax, rsp
0x40013d:	add	rax, 0xf
0x400141:	shr	rax, 4
0x400145:	shl	rax, 4
0x400149:	mov	qword ptr [rbp - 0x20], rax
0x40014d:	mov	eax, 0x10
0x400152:	sub	rax, 1
0x400156:	add	rax, 0x6c
0x40015a:	mov	edi, 0x10
0x40015f:	mov	edx, 0
0x400164:	div	rdi
0x400167:	imul	rax, rax, 0x10
0x40016b:	mov	rdx, rax
0x40016e:	and	rdx, 0xfffffffffffff000
0x400175:	mov	rsi, rsp
0x400178:	sub	rsi, rdx
0x40017b:	mov	rdx, rsi
0x40017e:	cmp	rsp, rdx
0x400181:	je	0x400195
<Block for 0x4000f9, 5 bytes>
0x4000f9:	cmp	rsp, rdx
0x4000fc:	je	0x400110
<Block for 0x400195, 26 bytes>
0x400195:	mov	rdx, rax
0x400198:	and	edx, 0xfff
0x40019e:	sub	rsp, rdx
0x4001a1:	mov	rdx, rax
0x4001a4:	and	edx, 0xfff
0x4001aa:	test	rdx, rdx
0x4001ad:	je	0x4001bf
<Block for 0x400183, 18 bytes>
0x400183:	sub	rsp, 0x1000
0x40018a:	or	qword ptr [rsp + 0xff8], 0
0x400193:	jmp	0x40017e
<Block for 0x4001bf, 41 bytes>
0x4001bf:	mov	rax, rsp
0x4001c2:	add	rax, 0xf
0x4001c6:	shr	rax, 4
0x4001ca:	shl	rax, 4
0x4001ce:	mov	qword ptr [rbp - 0x18], rax
0x4001d2:	mov	rax, qword ptr [rbp - 0x20]
0x4001d6:	mov	edx, 0x31
0x4001db:	mov	esi, 0x41
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500000
<Block for 0x4001af, 57 bytes>
0x4001af:	and	eax, 0xfff
0x4001b4:	sub	rax, 8
0x4001b8:	add	rax, rsp
0x4001bb:	or	qword ptr [rax], 0
0x4001bf:	mov	rax, rsp
0x4001c2:	add	rax, 0xf
0x4001c6:	shr	rax, 4
0x4001ca:	shl	rax, 4
0x4001ce:	mov	qword ptr [rbp - 0x18], rax
0x4001d2:	mov	rax, qword ptr [rbp - 0x20]
0x4001d6:	mov	edx, 0x31
0x4001db:	mov	esi, 0x41
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500000
<Block for 0x40017e, 5 bytes>
0x40017e:	cmp	rsp, rdx
0x400181:	je	0x400195
<Block for 0x4001e8, 33 bytes>
0x4001e8:	mov	rax, qword ptr [rbp - 0x20]
0x4001ec:	add	rax, 0x31
0x4001f0:	mov	byte ptr [rax], 0
0x4001f3:	mov	rax, qword ptr [rbp - 0x18]
0x4001f7:	mov	edx, 0x63
0x4001fc:	mov	esi, 0x41
0x400201:	mov	rdi, rax
0x400204:	call	0x500000
<Block for 0x400209, 31 bytes>
0x400209:	mov	rax, qword ptr [rbp - 0x18]
0x40020d:	add	rax, 0x63
0x400211:	mov	byte ptr [rax], 0
0x400214:	mov	rax, qword ptr [rbp - 0x20]
0x400218:	mov	qword ptr [rbp - 0x10], rax
0x40021c:	mov	rax, qword ptr [rbp - 0x10]
0x400220:	mov	rdi, rax
0x400223:	call	0x400000
<Block for 0x400228, 16 bytes>
0x400228:	nop	
0x400229:	mov	rax, qword ptr [rbp - 8]
0x40022d:	xor	rax, qword ptr fs:[0x28]
0x400236:	je	0x40023d
<Block for 0x40023d, 2 bytes>
0x40023d:	leave	
0x40023e:	ret	
<Block for 0x400238, 5 bytes>
0x400238:	call	0x500018
