<Block for 0x400223, 61 bytes>
0x400223:	endbr64	
0x400227:	push	rbp
0x400228:	mov	rbp, rsp
0x40022b:	sub	rsp, 0x50
0x40022f:	mov	rax, qword ptr fs:[0x28]
0x400238:	mov	qword ptr [rbp - 8], rax
0x40023c:	xor	eax, eax
0x40023e:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400245:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40024c:	mov	edx, 6
0x400251:	mov	esi, 1
0x400256:	mov	edi, 2
0x40025b:	call	0x500000
<Block for 0x400260, 13 bytes>
0x400260:	mov	dword ptr [rbp - 0x48], eax
0x400263:	cmp	dword ptr [rbp - 0x48], -1
0x400267:	je	0x400303
<Block for 0x400303, 3 bytes>
0x400303:	nop	
0x400304:	jmp	0x400307
<Block for 0x40026d, 22 bytes>
0x40026d:	lea	rax, [rbp - 0x40]
0x400271:	mov	edx, 0x10
0x400276:	mov	esi, 0
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500008
<Block for 0x400307, 6 bytes>
0x400307:	cmp	dword ptr [rbp - 0x48], -1
0x40030b:	je	0x400317
<Block for 0x400283, 18 bytes>
0x400283:	mov	word ptr [rbp - 0x40], 2
0x400289:	lea	rdi, [rip + 0x130]
0x400290:	call	0x500010
<Block for 0x400317, 46 bytes>
0x400317:	mov	qword ptr [rbp - 0x40], 0
0x40031f:	mov	qword ptr [rbp - 0x38], 0
0x400327:	mov	qword ptr [rbp - 0x30], 0
0x40032f:	mov	qword ptr [rbp - 0x28], 0
0x400337:	mov	qword ptr [rbp - 0x20], 0
0x40033f:	cmp	dword ptr [rbp - 0x50], 0
0x400343:	js	0x40037d
<Block for 0x40030d, 10 bytes>
0x40030d:	mov	eax, dword ptr [rbp - 0x48]
0x400310:	mov	edi, eax
0x400312:	call	0x500038
<Block for 0x400295, 13 bytes>
0x400295:	mov	dword ptr [rbp - 0x3c], eax
0x400298:	mov	edi, 0x6987
0x40029d:	call	0x500018
<Block for 0x40037d, 12 bytes>
0x40037d:	lea	rdi, [rip + 0x6c]
0x400384:	call	0x500048
<Block for 0x400345, 6 bytes>
0x400345:	cmp	dword ptr [rbp - 0x50], 9
0x400349:	jg	0x40037d
<Block for 0x4002a2, 26 bytes>
0x4002a2:	mov	word ptr [rbp - 0x3e], ax
0x4002a6:	lea	rcx, [rbp - 0x40]
0x4002aa:	mov	eax, dword ptr [rbp - 0x48]
0x4002ad:	mov	edx, 0x10
0x4002b2:	mov	rsi, rcx
0x4002b5:	mov	edi, eax
0x4002b7:	call	0x500020
<Block for 0x400389, 16 bytes>
0x400389:	nop	
0x40038a:	mov	rax, qword ptr [rbp - 8]
0x40038e:	xor	rax, qword ptr fs:[0x28]
0x400397:	je	0x40039e
<Block for 0x40034b, 22 bytes>
0x40034b:	mov	eax, dword ptr [rbp - 0x50]
0x40034e:	cdqe	
0x400350:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x400358:	mov	dword ptr [rbp - 0x4c], 0
0x40035f:	jmp	0x400375
<Block for 0x4002bc, 5 bytes>
0x4002bc:	cmp	eax, -1
0x4002bf:	je	0x400306
<Block for 0x40039e, 2 bytes>
0x40039e:	leave	
0x40039f:	ret	
<Block for 0x400399, 5 bytes>
0x400399:	call	0x500050
<Block for 0x400375, 6 bytes>
0x400375:	cmp	dword ptr [rbp - 0x4c], 9
0x400379:	jle	0x400361
<Block for 0x4002c1, 24 bytes>
0x4002c1:	lea	rsi, [rbp - 0x16]
0x4002c5:	mov	eax, dword ptr [rbp - 0x48]
0x4002c8:	mov	ecx, 0
0x4002cd:	mov	edx, 0xd
0x4002d2:	mov	edi, eax
0x4002d4:	call	0x500028
<Block for 0x400306, 1 bytes>
0x400306:	nop	
<Block for 0x400361, 16 bytes>
0x400361:	mov	eax, dword ptr [rbp - 0x4c]
0x400364:	cdqe	
0x400366:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40036a:	mov	edi, eax
0x40036c:	call	0x500040
<Block for 0x40037b, 2 bytes>
0x40037b:	jmp	0x400389
<Block for 0x4002d9, 9 bytes>
0x4002d9:	mov	dword ptr [rbp - 0x44], eax
0x4002dc:	cmp	dword ptr [rbp - 0x44], -1
0x4002e0:	je	0x400307
<Block for 0x400371, 10 bytes>
0x400371:	add	dword ptr [rbp - 0x4c], 1
0x400375:	cmp	dword ptr [rbp - 0x4c], 9
0x400379:	jle	0x400361
<Block for 0x4002e2, 6 bytes>
0x4002e2:	cmp	dword ptr [rbp - 0x44], 0
0x4002e6:	je	0x400307
<Block for 0x4002e8, 22 bytes>
0x4002e8:	mov	eax, dword ptr [rbp - 0x44]
0x4002eb:	cdqe	
0x4002ed:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002f2:	lea	rax, [rbp - 0x16]
0x4002f6:	mov	rdi, rax
0x4002f9:	call	0x500030
<Block for 0x4002fe, 5 bytes>
0x4002fe:	mov	dword ptr [rbp - 0x50], eax
0x400301:	jmp	0x400307
