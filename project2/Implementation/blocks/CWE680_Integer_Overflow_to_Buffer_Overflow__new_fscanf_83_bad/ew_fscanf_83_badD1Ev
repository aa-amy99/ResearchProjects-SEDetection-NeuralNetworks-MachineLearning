<Block for 0x40003e, 44 bytes>
0x40003e:	endbr64	
0x400042:	push	rbp
0x400043:	mov	rbp, rsp
0x400046:	sub	rsp, 0x30
0x40004a:	mov	qword ptr [rbp - 0x28], rdi
0x40004e:	mov	rax, qword ptr [rbp - 0x28]
0x400052:	mov	eax, dword ptr [rax]
0x400054:	cdqe	
0x400056:	shl	rax, 2
0x40005a:	mov	qword ptr [rbp - 0x10], rax
0x40005e:	mov	rax, qword ptr [rbp - 0x10]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40006a, 26 bytes>
0x40006a:	mov	qword ptr [rbp - 8], rax
0x40006e:	mov	qword ptr [rbp - 0x18], 0
0x400076:	mov	rax, qword ptr [rbp - 0x28]
0x40007a:	mov	eax, dword ptr [rax]
0x40007c:	cdqe	
0x40007e:	cmp	qword ptr [rbp - 0x18], rax
0x400082:	jae	0x4000a4
<Block for 0x400084, 32 bytes>
0x400084:	mov	rax, qword ptr [rbp - 0x18]
0x400088:	lea	rdx, [rax*4]
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	add	rax, rdx
0x400097:	mov	dword ptr [rax], 0
0x40009d:	add	qword ptr [rbp - 0x18], 1
0x4000a2:	jmp	0x400076
<Block for 0x4000a4, 13 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	mov	eax, dword ptr [rax]
0x4000aa:	mov	edi, eax
0x4000ac:	call	0x500018
<Block for 0x400076, 14 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0x28]
0x40007a:	mov	eax, dword ptr [rax]
0x40007c:	cdqe	
0x40007e:	cmp	qword ptr [rbp - 0x18], rax
0x400082:	jae	0x4000a4
<Block for 0x4000b1, 7 bytes>
0x4000b1:	cmp	qword ptr [rbp - 8], 0
0x4000b6:	je	0x4000c4
<Block for 0x4000c4, 3 bytes>
0x4000c4:	nop	
0x4000c5:	leave	
0x4000c6:	ret	
<Block for 0x4000b8, 12 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500020
