<Block for 0x40001e, 25 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	push	rbx
0x400027:	sub	rsp, 0x28
0x40002b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400032:	call	0x400000
<Block for 0x400037, 9 bytes>
0x400037:	test	eax, eax
0x400039:	setne	al
0x40003c:	test	al, al
0x40003e:	je	0x400089
<Block for 0x400089, 25 bytes>
0x400089:	mov	eax, dword ptr [rbp - 0x2c]
0x40008c:	cdqe	
0x40008e:	shl	rax, 2
0x400092:	mov	qword ptr [rbp - 0x20], rax
0x400096:	mov	rax, qword ptr [rbp - 0x20]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500008
<Block for 0x400040, 5 bytes>
0x400040:	call	0x500000
<Block for 0x4000a2, 23 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x18], rax
0x4000a6:	mov	qword ptr [rbp - 0x28], 0
0x4000ae:	mov	eax, dword ptr [rbp - 0x2c]
0x4000b1:	cdqe	
0x4000b3:	cmp	qword ptr [rbp - 0x28], rax
0x4000b7:	jae	0x4000d9
<Block for 0x400045, 7 bytes>
0x400045:	and	eax, 1
0x400048:	test	eax, eax
0x40004a:	je	0x400069
<Block for 0x4000b9, 32 bytes>
0x4000b9:	mov	rax, qword ptr [rbp - 0x28]
0x4000bd:	lea	rdx, [rax*4]
0x4000c5:	mov	rax, qword ptr [rbp - 0x18]
0x4000c9:	add	rax, rdx
0x4000cc:	mov	dword ptr [rax], 0
0x4000d2:	add	qword ptr [rbp - 0x28], 1
0x4000d7:	jmp	0x4000ae
<Block for 0x4000d9, 13 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 0x18]
0x4000dd:	mov	eax, dword ptr [rax]
0x4000df:	mov	edi, eax
0x4000e1:	call	0x500010
<Block for 0x400069, 5 bytes>
0x400069:	call	0x500000
<Block for 0x40004c, 5 bytes>
0x40004c:	call	0x500000
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	eax, dword ptr [rbp - 0x2c]
0x4000b1:	cdqe	
0x4000b3:	cmp	qword ptr [rbp - 0x28], rax
0x4000b7:	jae	0x4000d9
<Block for 0x4000e6, 7 bytes>
0x4000e6:	cmp	qword ptr [rbp - 0x18], 0
0x4000eb:	je	0x4000f9
<Block for 0x40006e, 10 bytes>
0x40006e:	shl	eax, 0x1e
0x400071:	mov	ebx, eax
0x400073:	call	0x500000
<Block for 0x400051, 10 bytes>
0x400051:	shl	eax, 0x1e
0x400054:	mov	ebx, eax
0x400056:	call	0x500000
<Block for 0x4000f9, 8 bytes>
0x4000f9:	nop	
0x4000fa:	add	rsp, 0x28
0x4000fe:	pop	rbx
0x4000ff:	pop	rbp
0x400100:	ret	
<Block for 0x4000ed, 12 bytes>
0x4000ed:	mov	rax, qword ptr [rbp - 0x18]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500018
<Block for 0x400078, 10 bytes>
0x400078:	shl	eax, 0xf
0x40007b:	xor	ebx, eax
0x40007d:	call	0x500000
<Block for 0x40005b, 10 bytes>
0x40005b:	shl	eax, 0xf
0x40005e:	xor	ebx, eax
0x400060:	call	0x500000
<Block for 0x400082, 32 bytes>
0x400082:	xor	eax, ebx
0x400084:	not	eax
0x400086:	mov	dword ptr [rbp - 0x2c], eax
0x400089:	mov	eax, dword ptr [rbp - 0x2c]
0x40008c:	cdqe	
0x40008e:	shl	rax, 2
0x400092:	mov	qword ptr [rbp - 0x20], rax
0x400096:	mov	rax, qword ptr [rbp - 0x20]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500008
<Block for 0x400065, 4 bytes>
0x400065:	xor	eax, ebx
0x400067:	jmp	0x400086
<Block for 0x400086, 28 bytes>
0x400086:	mov	dword ptr [rbp - 0x2c], eax
0x400089:	mov	eax, dword ptr [rbp - 0x2c]
0x40008c:	cdqe	
0x40008e:	shl	rax, 2
0x400092:	mov	qword ptr [rbp - 0x20], rax
0x400096:	mov	rax, qword ptr [rbp - 0x20]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500008
