<Block for 0x4000d2, 45 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	add	rsp, -0x80
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	qword ptr [rbp - 0x80], 0
0x4000f5:	mov	edi, 0x64
0x4000fa:	call	0x500000
<Block for 0x4000ff, 11 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x78], rax
0x400103:	cmp	qword ptr [rbp - 0x78], 0
0x400108:	jne	0x400114
<Block for 0x40010a, 10 bytes>
0x40010a:	mov	edi, 0xffffffff
0x40010f:	call	0x500008
<Block for 0x400114, 22 bytes>
0x400114:	mov	rax, qword ptr [rbp - 0x78]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x41
0x400122:	mov	rdi, rax
0x400125:	call	0x500010
<Block for 0x40012a, 41 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x78]
0x40012e:	add	rax, 0x63
0x400132:	mov	byte ptr [rax], 0
0x400135:	mov	rax, qword ptr [rbp - 0x78]
0x400139:	mov	qword ptr [rbp - 0x80], rax
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	edx, 0x63
0x400146:	mov	esi, 0x43
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500010
<Block for 0x400153, 16 bytes>
0x400153:	mov	byte ptr [rbp - 0xd], 0
0x400157:	lea	rax, [rbp - 0x70]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500018
<Block for 0x400163, 22 bytes>
0x400163:	mov	rdx, rax
0x400166:	mov	rcx, qword ptr [rbp - 0x80]
0x40016a:	lea	rax, [rbp - 0x70]
0x40016e:	mov	rsi, rcx
0x400171:	mov	rdi, rax
0x400174:	call	0x500020
<Block for 0x400179, 16 bytes>
0x400179:	mov	byte ptr [rbp - 0xd], 0
0x40017d:	lea	rax, [rbp - 0x70]
0x400181:	mov	rdi, rax
0x400184:	call	0x500028
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500030
