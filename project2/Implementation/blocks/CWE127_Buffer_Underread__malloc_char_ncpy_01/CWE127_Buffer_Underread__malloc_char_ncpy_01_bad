<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 11 bytes>
0x40002d:	mov	qword ptr [rbp - 0x78], rax
0x400031:	cmp	qword ptr [rbp - 0x78], 0
0x400036:	jne	0x400042
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0xffffffff
0x40003d:	call	0x500008
<Block for 0x400042, 22 bytes>
0x400042:	mov	rax, qword ptr [rbp - 0x78]
0x400046:	mov	edx, 0x63
0x40004b:	mov	esi, 0x41
0x400050:	mov	rdi, rax
0x400053:	call	0x500010
<Block for 0x400058, 45 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0x78]
0x40005c:	add	rax, 0x63
0x400060:	mov	byte ptr [rax], 0
0x400063:	mov	rax, qword ptr [rbp - 0x78]
0x400067:	sub	rax, 8
0x40006b:	mov	qword ptr [rbp - 0x80], rax
0x40006f:	lea	rax, [rbp - 0x70]
0x400073:	mov	edx, 0x63
0x400078:	mov	esi, 0x43
0x40007d:	mov	rdi, rax
0x400080:	call	0x500010
<Block for 0x400085, 16 bytes>
0x400085:	mov	byte ptr [rbp - 0xd], 0
0x400089:	lea	rax, [rbp - 0x70]
0x40008d:	mov	rdi, rax
0x400090:	call	0x500018
<Block for 0x400095, 22 bytes>
0x400095:	mov	rdx, rax
0x400098:	mov	rcx, qword ptr [rbp - 0x80]
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	rsi, rcx
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x500020
<Block for 0x4000ab, 16 bytes>
0x4000ab:	mov	byte ptr [rbp - 0xd], 0
0x4000af:	lea	rax, [rbp - 0x70]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500028
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500030
