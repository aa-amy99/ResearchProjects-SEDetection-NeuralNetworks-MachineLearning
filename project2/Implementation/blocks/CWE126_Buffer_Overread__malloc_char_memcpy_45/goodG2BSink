<Block for 0x400101, 60 bytes>
0x400101:	endbr64	
0x400105:	push	rbp
0x400106:	mov	rbp, rsp
0x400109:	add	rsp, -0x80
0x40010d:	mov	rax, qword ptr fs:[0x28]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	xor	eax, eax
0x40011c:	mov	rax, qword ptr [rip + 0xfd]
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	lea	rax, [rbp - 0x70]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x43
0x400135:	mov	rdi, rax
0x400138:	call	0x500000
<Block for 0x40013d, 16 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	rdi, rax
0x400148:	call	0x500008
<Block for 0x40014d, 22 bytes>
0x40014d:	mov	rdx, rax
0x400150:	mov	rcx, qword ptr [rbp - 0x78]
0x400154:	lea	rax, [rbp - 0x70]
0x400158:	mov	rsi, rcx
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500010
<Block for 0x400163, 16 bytes>
0x400163:	mov	byte ptr [rbp - 0xd], 0
0x400167:	lea	rax, [rbp - 0x70]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500018
<Block for 0x400173, 12 bytes>
0x400173:	mov	rax, qword ptr [rbp - 0x78]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500020
<Block for 0x40017f, 16 bytes>
0x40017f:	nop	
0x400180:	mov	rax, qword ptr [rbp - 8]
0x400184:	xor	rax, qword ptr fs:[0x28]
0x40018d:	je	0x400194
<Block for 0x400194, 2 bytes>
0x400194:	leave	
0x400195:	ret	
<Block for 0x40018f, 5 bytes>
0x40018f:	call	0x500028
