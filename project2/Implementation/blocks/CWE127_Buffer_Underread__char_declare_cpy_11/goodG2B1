<Block for 0x4000ba, 55 bytes>
0x4000ba:	endbr64	
0x4000be:	push	rbp
0x4000bf:	mov	rbp, rsp
0x4000c2:	sub	rsp, 0x150
0x4000c9:	mov	rax, qword ptr fs:[0x28]
0x4000d2:	mov	qword ptr [rbp - 8], rax
0x4000d6:	xor	eax, eax
0x4000d8:	lea	rax, [rbp - 0x140]
0x4000df:	mov	edx, 0x63
0x4000e4:	mov	esi, 0x41
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500000
<Block for 0x4000f1, 17 bytes>
0x4000f1:	mov	byte ptr [rbp - 0xdd], 0
0x4000f8:	mov	eax, 0
0x4000fd:	call	0x500028
<Block for 0x400102, 4 bytes>
0x400102:	test	eax, eax
0x400104:	je	0x400114
<Block for 0x400114, 39 bytes>
0x400114:	lea	rax, [rbp - 0x140]
0x40011b:	mov	qword ptr [rbp - 0x148], rax
0x400122:	lea	rax, [rbp - 0xd0]
0x400129:	mov	edx, 0xc7
0x40012e:	mov	esi, 0x43
0x400133:	mov	rdi, rax
0x400136:	call	0x500000
<Block for 0x400106, 12 bytes>
0x400106:	lea	rdi, [rip + 0x146]
0x40010d:	call	0x500018
<Block for 0x40013b, 29 bytes>
0x40013b:	mov	byte ptr [rbp - 9], 0
0x40013f:	mov	rdx, qword ptr [rbp - 0x148]
0x400146:	lea	rax, [rbp - 0xd0]
0x40014d:	mov	rsi, rdx
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400112, 2 bytes>
0x400112:	jmp	0x400122
<Block for 0x400158, 15 bytes>
0x400158:	lea	rax, [rbp - 0xd0]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500018
<Block for 0x400122, 25 bytes>
0x400122:	lea	rax, [rbp - 0xd0]
0x400129:	mov	edx, 0xc7
0x40012e:	mov	esi, 0x43
0x400133:	mov	rdi, rax
0x400136:	call	0x500000
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500020
