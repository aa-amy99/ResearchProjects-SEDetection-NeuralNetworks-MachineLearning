<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x140]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 17 bytes>
0x400037:	mov	byte ptr [rbp - 0xdd], 0
0x40003e:	mov	eax, 0
0x400043:	call	0x500008
<Block for 0x400048, 4 bytes>
0x400048:	test	eax, eax
0x40004a:	je	0x40005e
<Block for 0x40005e, 25 bytes>
0x40005e:	lea	rax, [rbp - 0xd0]
0x400065:	mov	edx, 0xc7
0x40006a:	mov	esi, 0x43
0x40006f:	mov	rdi, rax
0x400072:	call	0x500000
<Block for 0x40004c, 43 bytes>
0x40004c:	lea	rax, [rbp - 0x140]
0x400053:	sub	rax, 8
0x400057:	mov	qword ptr [rbp - 0x148], rax
0x40005e:	lea	rax, [rbp - 0xd0]
0x400065:	mov	edx, 0xc7
0x40006a:	mov	esi, 0x43
0x40006f:	mov	rdi, rax
0x400072:	call	0x500000
<Block for 0x400077, 29 bytes>
0x400077:	mov	byte ptr [rbp - 9], 0
0x40007b:	mov	rdx, qword ptr [rbp - 0x148]
0x400082:	lea	rax, [rbp - 0xd0]
0x400089:	mov	rsi, rdx
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400094, 15 bytes>
0x400094:	lea	rax, [rbp - 0xd0]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500018
<Block for 0x4000a3, 16 bytes>
0x4000a3:	nop	
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	xor	rax, qword ptr fs:[0x28]
0x4000b1:	je	0x4000b8
<Block for 0x4000b8, 2 bytes>
0x4000b8:	leave	
0x4000b9:	ret	
<Block for 0x4000b3, 5 bytes>
0x4000b3:	call	0x500020
