<Block for 0x40006f, 53 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	add	rsp, -0x80
0x40007b:	mov	qword ptr [rbp - 0x78], rdi
0x40007f:	mov	rax, qword ptr fs:[0x28]
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	xor	eax, eax
0x40008e:	lea	rax, [rbp - 0x70]
0x400092:	mov	edx, 0x63
0x400097:	mov	esi, 0x43
0x40009c:	mov	rdi, rax
0x40009f:	call	0x500000
<Block for 0x4000a4, 23 bytes>
0x4000a4:	mov	byte ptr [rbp - 0xd], 0
0x4000a8:	lea	rdx, [rbp - 0x70]
0x4000ac:	mov	rax, qword ptr [rbp - 0x78]
0x4000b0:	mov	rsi, rdx
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500008
<Block for 0x4000bb, 12 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x78]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500010
<Block for 0x4000c7, 16 bytes>
0x4000c7:	nop	
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	xor	rax, qword ptr fs:[0x28]
0x4000d5:	je	0x4000dc
<Block for 0x4000dc, 2 bytes>
0x4000dc:	leave	
0x4000dd:	ret	
<Block for 0x4000d7, 5 bytes>
0x4000d7:	call	0x500018
