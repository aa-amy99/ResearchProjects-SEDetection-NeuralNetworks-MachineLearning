<Block for 0x4000ff, 35 bytes>
0x4000ff:	endbr64	
0x400103:	push	rbp
0x400104:	mov	rbp, rsp
0x400107:	sub	rsp, 0x10
0x40010b:	mov	qword ptr [rbp - 8], 0
0x400113:	nop	
0x400114:	endbr64	
0x400118:	mov	edi, 0x190
0x40011d:	call	0x500000
<Block for 0x400122, 11 bytes>
0x400122:	mov	qword ptr [rbp - 8], rax
0x400126:	cmp	qword ptr [rbp - 8], 0
0x40012b:	jne	0x400137
<Block for 0x40012d, 10 bytes>
0x40012d:	mov	edi, 0xffffffff
0x400132:	call	0x500008
<Block for 0x400137, 10 bytes>
0x400137:	mov	qword ptr [rbp - 0x10], 0
0x40013f:	jmp	0x40015f
<Block for 0x40015f, 7 bytes>
0x40015f:	cmp	qword ptr [rbp - 0x10], 0x63
0x400164:	jbe	0x400141
<Block for 0x400141, 37 bytes>
0x400141:	mov	rax, qword ptr [rbp - 0x10]
0x400145:	lea	rdx, [rax*4]
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	add	rax, rdx
0x400154:	mov	dword ptr [rax], 5
0x40015a:	add	qword ptr [rbp - 0x10], 1
0x40015f:	cmp	qword ptr [rbp - 0x10], 0x63
0x400164:	jbe	0x400141
<Block for 0x400166, 18 bytes>
0x400166:	nop	
0x400167:	endbr64	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	mov	eax, dword ptr [rax]
0x400171:	mov	edi, eax
0x400173:	call	0x500018
<Block for 0x400178, 3 bytes>
0x400178:	nop	
0x400179:	leave	
0x40017a:	ret	
