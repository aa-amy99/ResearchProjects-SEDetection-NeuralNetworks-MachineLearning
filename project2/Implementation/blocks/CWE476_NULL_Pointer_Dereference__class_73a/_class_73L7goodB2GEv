<Block for 0x400205, 40 bytes>
0x400205:	endbr64	
0x400209:	push	rbp
0x40020a:	mov	rbp, rsp
0x40020d:	push	rbx
0x40020e:	sub	rsp, 0x58
0x400212:	mov	rax, qword ptr fs:[0x28]
0x40021b:	mov	qword ptr [rbp - 0x18], rax
0x40021f:	xor	eax, eax
0x400221:	lea	rax, [rbp - 0x50]
0x400225:	mov	rdi, rax
0x400228:	call	0x4003b8
<Block for 0x40022d, 27 bytes>
0x40022d:	mov	qword ptr [rbp - 0x58], 0
0x400235:	lea	rdx, [rbp - 0x58]
0x400239:	lea	rax, [rbp - 0x50]
0x40023d:	mov	rsi, rdx
0x400240:	mov	rdi, rax
0x400243:	call	0x4004c2
<Block for 0x400248, 19 bytes>
0x400248:	lea	rdx, [rbp - 0x58]
0x40024c:	lea	rax, [rbp - 0x50]
0x400250:	mov	rsi, rdx
0x400253:	mov	rdi, rax
0x400256:	call	0x4004c2
<Block for 0x40025b, 19 bytes>
0x40025b:	lea	rdx, [rbp - 0x58]
0x40025f:	lea	rax, [rbp - 0x50]
0x400263:	mov	rsi, rdx
0x400266:	mov	rdi, rax
0x400269:	call	0x4004c2
<Block for 0x40026e, 19 bytes>
0x40026e:	lea	rdx, [rbp - 0x50]
0x400272:	lea	rax, [rbp - 0x30]
0x400276:	mov	rsi, rdx
0x400279:	mov	rdi, rax
0x40027c:	call	0x4004fc
<Block for 0x400281, 12 bytes>
0x400281:	lea	rax, [rbp - 0x30]
0x400285:	mov	rdi, rax
0x400288:	call	0x500028
<Block for 0x40028d, 12 bytes>
0x40028d:	lea	rax, [rbp - 0x30]
0x400291:	mov	rdi, rax
0x400294:	call	0x4003d8
<Block for 0x400299, 12 bytes>
0x400299:	lea	rax, [rbp - 0x50]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x4003d8
<Block for 0x4002a5, 16 bytes>
0x4002a5:	nop	
0x4002a6:	mov	rax, qword ptr [rbp - 0x18]
0x4002aa:	xor	rax, qword ptr fs:[0x28]
0x4002b3:	je	0x4002ef
<Block for 0x4002ef, 7 bytes>
0x4002ef:	add	rsp, 0x58
0x4002f3:	pop	rbx
0x4002f4:	pop	rbp
0x4002f5:	ret	
<Block for 0x4002b5, 2 bytes>
0x4002b5:	jmp	0x4002ea
<Block for 0x4002ea, 5 bytes>
0x4002ea:	call	0x500010
