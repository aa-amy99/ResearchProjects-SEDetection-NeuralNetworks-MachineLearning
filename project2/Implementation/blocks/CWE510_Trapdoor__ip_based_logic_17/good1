<Block for 0x4001bf, 39 bytes>
0x4001bf:	endbr64	
0x4001c3:	push	rbp
0x4001c4:	mov	rbp, rsp
0x4001c7:	sub	rsp, 0x30
0x4001cb:	mov	rax, qword ptr fs:[0x28]
0x4001d4:	mov	qword ptr [rbp - 8], rax
0x4001d8:	xor	eax, eax
0x4001da:	mov	dword ptr [rbp - 0x2c], 0
0x4001e1:	jmp	0x4002ef
<Block for 0x4002ef, 10 bytes>
0x4002ef:	cmp	dword ptr [rbp - 0x2c], 0
0x4002f3:	jle	0x4001e6
<Block for 0x4001e6, 34 bytes>
0x4001e6:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001ed:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001f4:	mov	edx, 6
0x4001f9:	mov	esi, 1
0x4001fe:	mov	edi, 2
0x400203:	call	0x500000
<Block for 0x4002f9, 16 bytes>
0x4002f9:	nop	
0x4002fa:	mov	rax, qword ptr [rbp - 8]
0x4002fe:	xor	rax, qword ptr fs:[0x28]
0x400307:	je	0x40030e
<Block for 0x400208, 13 bytes>
0x400208:	mov	dword ptr [rbp - 0x24], eax
0x40020b:	cmp	dword ptr [rbp - 0x24], -1
0x40020f:	je	0x4002c1
<Block for 0x40030e, 2 bytes>
0x40030e:	leave	
0x40030f:	ret	
<Block for 0x400309, 5 bytes>
0x400309:	call	0x500060
<Block for 0x4002c1, 3 bytes>
0x4002c1:	nop	
0x4002c2:	jmp	0x4002cb
<Block for 0x400215, 22 bytes>
0x400215:	lea	rax, [rbp - 0x20]
0x400219:	mov	edx, 0x10
0x40021e:	mov	esi, 0
0x400223:	mov	rdi, rax
0x400226:	call	0x500008
<Block for 0x4002cb, 6 bytes>
0x4002cb:	cmp	dword ptr [rbp - 0x24], -1
0x4002cf:	je	0x4002db
<Block for 0x40022b, 23 bytes>
0x40022b:	mov	word ptr [rbp - 0x20], 2
0x400231:	mov	dword ptr [rbp - 0x1c], 0
0x400238:	mov	edi, 0x4e20
0x40023d:	call	0x500010
<Block for 0x4002db, 6 bytes>
0x4002db:	cmp	dword ptr [rbp - 0x28], -1
0x4002df:	je	0x4002eb
<Block for 0x4002d1, 10 bytes>
0x4002d1:	mov	eax, dword ptr [rbp - 0x24]
0x4002d4:	mov	edi, eax
0x4002d6:	call	0x500058
<Block for 0x400242, 26 bytes>
0x400242:	mov	word ptr [rbp - 0x1e], ax
0x400246:	lea	rcx, [rbp - 0x20]
0x40024a:	mov	eax, dword ptr [rbp - 0x24]
0x40024d:	mov	edx, 0x10
0x400252:	mov	rsi, rcx
0x400255:	mov	edi, eax
0x400257:	call	0x500018
<Block for 0x4002eb, 14 bytes>
0x4002eb:	add	dword ptr [rbp - 0x2c], 1
0x4002ef:	cmp	dword ptr [rbp - 0x2c], 0
0x4002f3:	jle	0x4001e6
<Block for 0x4002e1, 10 bytes>
0x4002e1:	mov	eax, dword ptr [rbp - 0x28]
0x4002e4:	mov	edi, eax
0x4002e6:	call	0x500058
<Block for 0x40025c, 5 bytes>
0x40025c:	cmp	eax, -1
0x40025f:	je	0x4002c4
<Block for 0x4002c4, 3 bytes>
0x4002c4:	nop	
0x4002c5:	jmp	0x4002cb
<Block for 0x400261, 15 bytes>
0x400261:	mov	eax, dword ptr [rbp - 0x24]
0x400264:	mov	esi, 5
0x400269:	mov	edi, eax
0x40026b:	call	0x500020
<Block for 0x400270, 5 bytes>
0x400270:	cmp	eax, -1
0x400273:	je	0x4002c7
<Block for 0x4002c7, 3 bytes>
0x4002c7:	nop	
0x4002c8:	jmp	0x4002cb
<Block for 0x400275, 20 bytes>
0x400275:	mov	eax, dword ptr [rbp - 0x24]
0x400278:	mov	edx, 0
0x40027d:	mov	esi, 0
0x400282:	mov	edi, eax
0x400284:	call	0x500028
<Block for 0x400289, 9 bytes>
0x400289:	mov	dword ptr [rbp - 0x28], eax
0x40028c:	cmp	dword ptr [rbp - 0x28], -1
0x400290:	je	0x4002ca
<Block for 0x400292, 27 bytes>
0x400292:	mov	eax, dword ptr [rbp - 0x28]
0x400295:	mov	ecx, 0
0x40029a:	mov	edx, 8
0x40029f:	lea	rsi, [rip + 0x9e]
0x4002a6:	mov	edi, eax
0x4002a8:	call	0x500048
<Block for 0x4002ca, 1 bytes>
0x4002ca:	nop	
<Block for 0x4002ad, 6 bytes>
0x4002ad:	cmp	rax, -1
0x4002b1:	jne	0x4002cb
<Block for 0x4002b3, 12 bytes>
0x4002b3:	lea	rdi, [rip + 0x93]
0x4002ba:	call	0x500050
<Block for 0x4002bf, 2 bytes>
0x4002bf:	jmp	0x4002cb
