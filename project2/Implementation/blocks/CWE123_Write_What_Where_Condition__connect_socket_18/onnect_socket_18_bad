<Block for 0x400000, 107 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	nop	
0x40004c:	endbr64	
0x400050:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400057:	mov	edx, 6
0x40005c:	mov	esi, 1
0x400061:	mov	edi, 2
0x400066:	call	0x500000
<Block for 0x40006b, 9 bytes>
0x40006b:	mov	dword ptr [rbp - 0x48], eax
0x40006e:	cmp	dword ptr [rbp - 0x48], -1
0x400072:	je	0x4000e5
<Block for 0x4000e5, 3 bytes>
0x4000e5:	nop	
0x4000e6:	jmp	0x4000e9
<Block for 0x400074, 22 bytes>
0x400074:	lea	rax, [rbp - 0x20]
0x400078:	mov	edx, 0x10
0x40007d:	mov	esi, 0
0x400082:	mov	rdi, rax
0x400085:	call	0x500008
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x48], -1
0x4000ed:	je	0x4000f9
<Block for 0x40008a, 18 bytes>
0x40008a:	mov	word ptr [rbp - 0x20], 2
0x400090:	lea	rdi, [rip + 0x179]
0x400097:	call	0x500010
<Block for 0x4000f9, 73 bytes>
0x4000f9:	mov	rax, qword ptr [rbp - 0x38]
0x4000fd:	mov	qword ptr [rip + 0xfc], rax
0x400104:	mov	rax, qword ptr [rbp - 0x40]
0x400108:	mov	qword ptr [rip + 0xf9], rax
0x40010f:	mov	rax, qword ptr [rip + 0xea]
0x400116:	mov	rdx, qword ptr [rip + 0xeb]
0x40011d:	mov	qword ptr [rax], rdx
0x400120:	mov	rax, qword ptr [rip + 0xe1]
0x400127:	mov	rdx, qword ptr [rip + 0xd2]
0x40012e:	mov	qword ptr [rax + 8], rdx
0x400132:	nop	
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	xor	rax, qword ptr fs:[0x28]
0x400140:	je	0x400147
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x48]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500030
<Block for 0x40009c, 13 bytes>
0x40009c:	mov	dword ptr [rbp - 0x1c], eax
0x40009f:	mov	edi, 0x6987
0x4000a4:	call	0x500018
<Block for 0x400147, 2 bytes>
0x400147:	leave	
0x400148:	ret	
<Block for 0x400142, 5 bytes>
0x400142:	call	0x500038
<Block for 0x4000a9, 26 bytes>
0x4000a9:	mov	word ptr [rbp - 0x1e], ax
0x4000ad:	lea	rcx, [rbp - 0x20]
0x4000b1:	mov	eax, dword ptr [rbp - 0x48]
0x4000b4:	mov	edx, 0x10
0x4000b9:	mov	rsi, rcx
0x4000bc:	mov	edi, eax
0x4000be:	call	0x500020
<Block for 0x4000c3, 5 bytes>
0x4000c3:	cmp	eax, -1
0x4000c6:	je	0x4000e8
<Block for 0x4000c8, 24 bytes>
0x4000c8:	lea	rsi, [rbp - 0x40]
0x4000cc:	mov	eax, dword ptr [rbp - 0x48]
0x4000cf:	mov	ecx, 0
0x4000d4:	mov	edx, 0x10
0x4000d9:	mov	edi, eax
0x4000db:	call	0x500028
<Block for 0x4000e8, 1 bytes>
0x4000e8:	nop	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	mov	dword ptr [rbp - 0x44], eax
0x4000e3:	jmp	0x4000e9
