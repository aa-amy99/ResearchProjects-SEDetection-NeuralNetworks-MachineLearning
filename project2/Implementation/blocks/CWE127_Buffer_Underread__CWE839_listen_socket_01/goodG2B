<Block for 0x40019d, 87 bytes>
0x40019d:	endbr64	
0x4001a1:	push	rbp
0x4001a2:	mov	rbp, rsp
0x4001a5:	sub	rsp, 0x40
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 8], rax
0x4001b6:	xor	eax, eax
0x4001b8:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001bf:	mov	dword ptr [rbp - 0x34], 7
0x4001c6:	mov	qword ptr [rbp - 0x30], 0
0x4001ce:	mov	qword ptr [rbp - 0x28], 0
0x4001d6:	mov	qword ptr [rbp - 0x20], 0
0x4001de:	mov	qword ptr [rbp - 0x18], 0
0x4001e6:	mov	qword ptr [rbp - 0x10], 0
0x4001ee:	cmp	dword ptr [rbp - 0x34], 9
0x4001f2:	jg	0x400206
<Block for 0x4001f4, 16 bytes>
0x4001f4:	mov	eax, dword ptr [rbp - 0x34]
0x4001f7:	cdqe	
0x4001f9:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001fd:	mov	edi, eax
0x4001ff:	call	0x500048
<Block for 0x400206, 12 bytes>
0x400206:	lea	rdi, [rip + 0x1e3]
0x40020d:	call	0x500050
<Block for 0x400204, 2 bytes>
0x400204:	jmp	0x400212
<Block for 0x400212, 16 bytes>
0x400212:	nop	
0x400213:	mov	rax, qword ptr [rbp - 8]
0x400217:	xor	rax, qword ptr fs:[0x28]
0x400220:	je	0x400227
<Block for 0x400227, 2 bytes>
0x400227:	leave	
0x400228:	ret	
<Block for 0x400222, 5 bytes>
0x400222:	call	0x500058
