<Block for 0x400082, 61 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x40
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4000a4:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4000ab:	mov	edx, 6
0x4000b0:	mov	esi, 1
0x4000b5:	mov	edi, 2
0x4000ba:	call	0x500018
<Block for 0x4000bf, 13 bytes>
0x4000bf:	mov	dword ptr [rbp - 0x38], eax
0x4000c2:	cmp	dword ptr [rbp - 0x38], -1
0x4000c6:	je	0x400167
<Block for 0x400167, 3 bytes>
0x400167:	nop	
0x400168:	jmp	0x40016b
<Block for 0x4000cc, 22 bytes>
0x4000cc:	lea	rax, [rbp - 0x30]
0x4000d0:	mov	edx, 0x10
0x4000d5:	mov	esi, 0
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500020
<Block for 0x40016b, 6 bytes>
0x40016b:	cmp	dword ptr [rbp - 0x38], -1
0x40016f:	je	0x40017b
<Block for 0x4000e2, 18 bytes>
0x4000e2:	mov	word ptr [rbp - 0x30], 2
0x4000e8:	lea	rdi, [rip + 0x166]
0x4000ef:	call	0x500028
<Block for 0x40017b, 10 bytes>
0x40017b:	mov	eax, dword ptr [rbp - 0x3c]
0x40017e:	mov	edi, eax
0x400180:	call	0x400000
<Block for 0x400171, 10 bytes>
0x400171:	mov	eax, dword ptr [rbp - 0x38]
0x400174:	mov	edi, eax
0x400176:	call	0x500050
<Block for 0x4000f4, 13 bytes>
0x4000f4:	mov	dword ptr [rbp - 0x2c], eax
0x4000f7:	mov	edi, 0x6987
0x4000fc:	call	0x500030
<Block for 0x400185, 16 bytes>
0x400185:	nop	
0x400186:	mov	rax, qword ptr [rbp - 8]
0x40018a:	xor	rax, qword ptr fs:[0x28]
0x400193:	je	0x40019a
<Block for 0x400101, 26 bytes>
0x400101:	mov	word ptr [rbp - 0x2e], ax
0x400105:	lea	rcx, [rbp - 0x30]
0x400109:	mov	eax, dword ptr [rbp - 0x38]
0x40010c:	mov	edx, 0x10
0x400111:	mov	rsi, rcx
0x400114:	mov	edi, eax
0x400116:	call	0x500038
<Block for 0x40019a, 2 bytes>
0x40019a:	leave	
0x40019b:	ret	
<Block for 0x400195, 5 bytes>
0x400195:	call	0x500058
<Block for 0x40011b, 10 bytes>
0x40011b:	cmp	eax, -1
0x40011e:	sete	al
0x400121:	test	al, al
0x400123:	jne	0x40016a
<Block for 0x400125, 24 bytes>
0x400125:	lea	rsi, [rbp - 0x16]
0x400129:	mov	eax, dword ptr [rbp - 0x38]
0x40012c:	mov	ecx, 0
0x400131:	mov	edx, 0xd
0x400136:	mov	edi, eax
0x400138:	call	0x500040
<Block for 0x40016a, 1 bytes>
0x40016a:	nop	
<Block for 0x40013d, 9 bytes>
0x40013d:	mov	dword ptr [rbp - 0x34], eax
0x400140:	cmp	dword ptr [rbp - 0x34], -1
0x400144:	je	0x40016b
<Block for 0x400146, 6 bytes>
0x400146:	cmp	dword ptr [rbp - 0x34], 0
0x40014a:	je	0x40016b
<Block for 0x40014c, 22 bytes>
0x40014c:	mov	eax, dword ptr [rbp - 0x34]
0x40014f:	cdqe	
0x400151:	mov	byte ptr [rbp + rax - 0x16], 0
0x400156:	lea	rax, [rbp - 0x16]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500048
<Block for 0x400162, 5 bytes>
0x400162:	mov	dword ptr [rbp - 0x3c], eax
0x400165:	jmp	0x40016b
