<Block for 0x40012b, 22 bytes>
0x40012b:	endbr64	
0x40012f:	push	rbp
0x400130:	mov	rbp, rsp
0x400133:	sub	rsp, 0x30
0x400137:	mov	edi, 0x64
0x40013c:	call	0x500000
<Block for 0x400141, 11 bytes>
0x400141:	mov	qword ptr [rbp - 0x20], rax
0x400145:	cmp	qword ptr [rbp - 0x20], 0
0x40014a:	jne	0x400156
<Block for 0x40014c, 10 bytes>
0x40014c:	mov	edi, 0xffffffff
0x400151:	call	0x500008
<Block for 0x400156, 19 bytes>
0x400156:	mov	rax, qword ptr [rbp - 0x20]
0x40015a:	mov	byte ptr [rax], 0
0x40015d:	mov	rax, qword ptr [rbp - 0x20]
0x400161:	mov	rdi, rax
0x400164:	call	0x500010
<Block for 0x400169, 23 bytes>
0x400169:	mov	qword ptr [rbp - 0x18], rax
0x40016d:	mov	eax, 0x64
0x400172:	sub	rax, qword ptr [rbp - 0x18]
0x400176:	cmp	rax, 1
0x40017a:	jbe	0x40020c
<Block for 0x40020c, 26 bytes>
0x40020c:	mov	rax, qword ptr [rbp - 0x20]
0x400210:	mov	qword ptr [rbp - 0x10], rax
0x400214:	mov	rax, qword ptr [rbp - 0x10]
0x400218:	mov	qword ptr [rbp - 8], rax
0x40021c:	mov	qword ptr [rbp - 0x28], 0
0x400224:	jmp	0x40024b
<Block for 0x400180, 44 bytes>
0x400180:	mov	rax, qword ptr [rip + 0xffe91]
0x400187:	mov	rdx, qword ptr [rbp - 0x18]
0x40018b:	mov	ecx, 0x64
0x400190:	sub	ecx, edx
0x400192:	mov	edx, ecx
0x400194:	mov	esi, edx
0x400196:	mov	rcx, qword ptr [rbp - 0x20]
0x40019a:	mov	rdx, qword ptr [rbp - 0x18]
0x40019e:	add	rcx, rdx
0x4001a1:	mov	rdx, rax
0x4001a4:	mov	rdi, rcx
0x4001a7:	call	0x500020
<Block for 0x40024b, 12 bytes>
0x40024b:	mov	rax, qword ptr [rbp - 8]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500010
<Block for 0x4001ac, 5 bytes>
0x4001ac:	test	rax, rax
0x4001af:	je	0x4001f2
<Block for 0x400257, 6 bytes>
0x400257:	cmp	qword ptr [rbp - 0x28], rax
0x40025b:	jb	0x400226
<Block for 0x4001f2, 12 bytes>
0x4001f2:	lea	rdi, [rip + 0x88]
0x4001f9:	call	0x500028
<Block for 0x4001b1, 12 bytes>
0x4001b1:	mov	rax, qword ptr [rbp - 0x20]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500010
<Block for 0x400226, 18 bytes>
0x400226:	mov	rdx, qword ptr [rbp - 8]
0x40022a:	mov	rax, qword ptr [rbp - 0x28]
0x40022e:	add	rax, rdx
0x400231:	movzx	eax, byte ptr [rax]
0x400234:	cmp	al, 0x53
0x400236:	jne	0x400246
<Block for 0x40025d, 12 bytes>
0x40025d:	mov	rax, qword ptr [rbp - 8]
0x400261:	mov	rdi, rax
0x400264:	call	0x500030
<Block for 0x4001fe, 40 bytes>
0x4001fe:	mov	rdx, qword ptr [rbp - 0x20]
0x400202:	mov	rax, qword ptr [rbp - 0x18]
0x400206:	add	rax, rdx
0x400209:	mov	byte ptr [rax], 0
0x40020c:	mov	rax, qword ptr [rbp - 0x20]
0x400210:	mov	qword ptr [rbp - 0x10], rax
0x400214:	mov	rax, qword ptr [rbp - 0x10]
0x400218:	mov	qword ptr [rbp - 8], rax
0x40021c:	mov	qword ptr [rbp - 0x28], 0
0x400224:	jmp	0x40024b
<Block for 0x4001bd, 11 bytes>
0x4001bd:	mov	qword ptr [rbp - 0x18], rax
0x4001c1:	cmp	qword ptr [rbp - 0x18], 0
0x4001c6:	je	0x40020c
<Block for 0x400238, 12 bytes>
0x400238:	lea	rdi, [rip + 0x51]
0x40023f:	call	0x500028
<Block for 0x400246, 17 bytes>
0x400246:	add	qword ptr [rbp - 0x28], 1
0x40024b:	mov	rax, qword ptr [rbp - 8]
0x40024f:	mov	rdi, rax
0x400252:	call	0x500010
<Block for 0x400269, 3 bytes>
0x400269:	nop	
0x40026a:	leave	
0x40026b:	ret	
<Block for 0x4001c8, 22 bytes>
0x4001c8:	mov	rax, qword ptr [rbp - 0x18]
0x4001cc:	lea	rdx, [rax - 1]
0x4001d0:	mov	rax, qword ptr [rbp - 0x20]
0x4001d4:	add	rax, rdx
0x4001d7:	movzx	eax, byte ptr [rax]
0x4001da:	cmp	al, 0xa
0x4001dc:	jne	0x40020c
<Block for 0x400244, 2 bytes>
0x400244:	jmp	0x40025d
<Block for 0x4001de, 20 bytes>
0x4001de:	mov	rax, qword ptr [rbp - 0x18]
0x4001e2:	lea	rdx, [rax - 1]
0x4001e6:	mov	rax, qword ptr [rbp - 0x20]
0x4001ea:	add	rax, rdx
0x4001ed:	mov	byte ptr [rax], 0
0x4001f0:	jmp	0x40020c
