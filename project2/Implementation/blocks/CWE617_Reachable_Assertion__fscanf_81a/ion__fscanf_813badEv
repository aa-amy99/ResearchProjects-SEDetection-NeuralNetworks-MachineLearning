<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	rax, qword ptr [rip + 0xfffd7]
0x400029:	lea	rdx, [rbp - 0x1c]
0x40002d:	lea	rsi, [rip + 0xca]
0x400034:	mov	rdi, rax
0x400037:	mov	eax, 0
0x40003c:	call	0x500008
<Block for 0x400041, 43 bytes>
0x400041:	lea	rax, [rip + 0xfffd8]
0x400048:	mov	qword ptr [rbp - 0x18], rax
0x40004c:	lea	rax, [rbp - 0x18]
0x400050:	mov	qword ptr [rbp - 0x10], rax
0x400054:	mov	rax, qword ptr [rbp - 0x10]
0x400058:	mov	rax, qword ptr [rax]
0x40005b:	mov	rcx, qword ptr [rax]
0x40005e:	mov	edx, dword ptr [rbp - 0x1c]
0x400061:	mov	rax, qword ptr [rbp - 0x10]
0x400065:	mov	esi, edx
0x400067:	mov	rdi, rax
0x40006a:	call	rcx
<Block for 0x40006c, 16 bytes>
0x40006c:	nop	
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	xor	rax, qword ptr fs:[0x28]
0x40007a:	je	0x400081
<Block for 0x400081, 2 bytes>
0x400081:	leave	
0x400082:	ret	
<Block for 0x40007c, 5 bytes>
0x40007c:	call	0x500018
