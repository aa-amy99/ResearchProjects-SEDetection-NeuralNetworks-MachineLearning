<Block for 0x4000c6, 50 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	add	rsp, -0x80
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	mov	qword ptr [rbp - 0x80], 0
0x4000e9:	nop	
0x4000ea:	endbr64	
0x4000ee:	mov	edi, 0x64
0x4000f3:	call	0x500000
<Block for 0x4000f8, 26 bytes>
0x4000f8:	mov	qword ptr [rbp - 0x78], rax
0x4000fc:	mov	rax, qword ptr [rbp - 0x78]
0x400100:	mov	edx, 0x63
0x400105:	mov	esi, 0x41
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500008
<Block for 0x400112, 41 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x78]
0x400116:	add	rax, 0x63
0x40011a:	mov	byte ptr [rax], 0
0x40011d:	mov	rax, qword ptr [rbp - 0x78]
0x400121:	mov	qword ptr [rbp - 0x80], rax
0x400125:	lea	rax, [rbp - 0x70]
0x400129:	mov	edx, 0x63
0x40012e:	mov	esi, 0x43
0x400133:	mov	rdi, rax
0x400136:	call	0x500008
<Block for 0x40013b, 16 bytes>
0x40013b:	mov	byte ptr [rbp - 0xd], 0
0x40013f:	lea	rax, [rbp - 0x70]
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x40014b, 22 bytes>
0x40014b:	mov	rdx, rax
0x40014e:	mov	rcx, qword ptr [rbp - 0x80]
0x400152:	lea	rax, [rbp - 0x70]
0x400156:	mov	rsi, rcx
0x400159:	mov	rdi, rax
0x40015c:	call	0x500018
<Block for 0x400161, 16 bytes>
0x400161:	mov	byte ptr [rbp - 0xd], 0
0x400165:	lea	rax, [rbp - 0x70]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500020
<Block for 0x400171, 16 bytes>
0x400171:	nop	
0x400172:	mov	rax, qword ptr [rbp - 8]
0x400176:	xor	rax, qword ptr fs:[0x28]
0x40017f:	je	0x400186
<Block for 0x400186, 2 bytes>
0x400186:	leave	
0x400187:	ret	
<Block for 0x400181, 5 bytes>
0x400181:	call	0x500028
