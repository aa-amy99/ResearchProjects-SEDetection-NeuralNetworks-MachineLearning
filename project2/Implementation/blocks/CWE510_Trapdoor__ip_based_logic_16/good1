<Block for 0x4001a6, 61 bytes>
0x4001a6:	endbr64	
0x4001aa:	push	rbp
0x4001ab:	mov	rbp, rsp
0x4001ae:	sub	rsp, 0x30
0x4001b2:	mov	rax, qword ptr fs:[0x28]
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	xor	eax, eax
0x4001c1:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4001c8:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4001cf:	mov	edx, 6
0x4001d4:	mov	esi, 1
0x4001d9:	mov	edi, 2
0x4001de:	call	0x500000
<Block for 0x4001e3, 13 bytes>
0x4001e3:	mov	dword ptr [rbp - 0x24], eax
0x4001e6:	cmp	dword ptr [rbp - 0x24], -1
0x4001ea:	je	0x40029c
<Block for 0x40029c, 3 bytes>
0x40029c:	nop	
0x40029d:	jmp	0x4002a6
<Block for 0x4001f0, 22 bytes>
0x4001f0:	lea	rax, [rbp - 0x20]
0x4001f4:	mov	edx, 0x10
0x4001f9:	mov	esi, 0
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500008
<Block for 0x4002a6, 6 bytes>
0x4002a6:	cmp	dword ptr [rbp - 0x24], -1
0x4002aa:	je	0x4002b6
<Block for 0x400206, 23 bytes>
0x400206:	mov	word ptr [rbp - 0x20], 2
0x40020c:	mov	dword ptr [rbp - 0x1c], 0
0x400213:	mov	edi, 0x4e20
0x400218:	call	0x500010
<Block for 0x4002b6, 6 bytes>
0x4002b6:	cmp	dword ptr [rbp - 0x28], -1
0x4002ba:	je	0x4002c6
<Block for 0x4002ac, 10 bytes>
0x4002ac:	mov	eax, dword ptr [rbp - 0x24]
0x4002af:	mov	edi, eax
0x4002b1:	call	0x500058
<Block for 0x40021d, 26 bytes>
0x40021d:	mov	word ptr [rbp - 0x1e], ax
0x400221:	lea	rcx, [rbp - 0x20]
0x400225:	mov	eax, dword ptr [rbp - 0x24]
0x400228:	mov	edx, 0x10
0x40022d:	mov	rsi, rcx
0x400230:	mov	edi, eax
0x400232:	call	0x500018
<Block for 0x4002c6, 17 bytes>
0x4002c6:	nop	
0x4002c7:	nop	
0x4002c8:	mov	rax, qword ptr [rbp - 8]
0x4002cc:	xor	rax, qword ptr fs:[0x28]
0x4002d5:	je	0x4002dc
<Block for 0x4002bc, 10 bytes>
0x4002bc:	mov	eax, dword ptr [rbp - 0x28]
0x4002bf:	mov	edi, eax
0x4002c1:	call	0x500058
<Block for 0x400237, 5 bytes>
0x400237:	cmp	eax, -1
0x40023a:	je	0x40029f
<Block for 0x4002dc, 2 bytes>
0x4002dc:	leave	
0x4002dd:	ret	
<Block for 0x4002d7, 5 bytes>
0x4002d7:	call	0x500060
<Block for 0x40029f, 3 bytes>
0x40029f:	nop	
0x4002a0:	jmp	0x4002a6
<Block for 0x40023c, 15 bytes>
0x40023c:	mov	eax, dword ptr [rbp - 0x24]
0x40023f:	mov	esi, 5
0x400244:	mov	edi, eax
0x400246:	call	0x500020
<Block for 0x40024b, 5 bytes>
0x40024b:	cmp	eax, -1
0x40024e:	je	0x4002a2
<Block for 0x4002a2, 3 bytes>
0x4002a2:	nop	
0x4002a3:	jmp	0x4002a6
<Block for 0x400250, 20 bytes>
0x400250:	mov	eax, dword ptr [rbp - 0x24]
0x400253:	mov	edx, 0
0x400258:	mov	esi, 0
0x40025d:	mov	edi, eax
0x40025f:	call	0x500028
<Block for 0x400264, 9 bytes>
0x400264:	mov	dword ptr [rbp - 0x28], eax
0x400267:	cmp	dword ptr [rbp - 0x28], -1
0x40026b:	je	0x4002a5
<Block for 0x40026d, 27 bytes>
0x40026d:	mov	eax, dword ptr [rbp - 0x28]
0x400270:	mov	ecx, 0
0x400275:	mov	edx, 8
0x40027a:	lea	rsi, [rip + 0x91]
0x400281:	mov	edi, eax
0x400283:	call	0x500048
<Block for 0x4002a5, 1 bytes>
0x4002a5:	nop	
<Block for 0x400288, 6 bytes>
0x400288:	cmp	rax, -1
0x40028c:	jne	0x4002a6
<Block for 0x40028e, 12 bytes>
0x40028e:	lea	rdi, [rip + 0x86]
0x400295:	call	0x500050
<Block for 0x40029a, 2 bytes>
0x40029a:	jmp	0x4002a6
