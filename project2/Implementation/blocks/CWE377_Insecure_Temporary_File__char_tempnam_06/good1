<Block for 0x40008f, 37 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	sub	rsp, 0x30
0x40009b:	mov	rax, qword ptr fs:[0x28]
0x4000a4:	mov	qword ptr [rbp - 8], rax
0x4000a8:	xor	eax, eax
0x4000aa:	mov	eax, 5
0x4000af:	cmp	eax, 5
0x4000b2:	je	0x4000c2
<Block for 0x4000c2, 40 bytes>
0x4000c2:	movabs	rax, 0x6c69662f706d742f
0x4000cc:	movabs	rdx, 0x58585858585865
0x4000d6:	mov	qword ptr [rbp - 0x20], rax
0x4000da:	mov	qword ptr [rbp - 0x18], rdx
0x4000de:	lea	rax, [rbp - 0x20]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500030
<Block for 0x4000b4, 12 bytes>
0x4000b4:	lea	rdi, [rip + 0x15a]
0x4000bb:	call	0x500010
<Block for 0x4000ea, 15 bytes>
0x4000ea:	mov	dword ptr [rbp - 0x24], eax
0x4000ed:	lea	rax, [rbp - 0x20]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500010
<Block for 0x4000c0, 2 bytes>
0x4000c0:	jmp	0x400115
<Block for 0x4000f9, 6 bytes>
0x4000f9:	cmp	dword ptr [rbp - 0x24], -1
0x4000fd:	je	0x400115
<Block for 0x400115, 16 bytes>
0x400115:	nop	
0x400116:	mov	rax, qword ptr [rbp - 8]
0x40011a:	xor	rax, qword ptr fs:[0x28]
0x400123:	je	0x40012a
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rdi, [rip + 0xe2]
0x400106:	call	0x500010
<Block for 0x40012a, 2 bytes>
0x40012a:	leave	
0x40012b:	ret	
<Block for 0x400125, 5 bytes>
0x400125:	call	0x500038
<Block for 0x40010b, 10 bytes>
0x40010b:	mov	eax, dword ptr [rbp - 0x24]
0x40010e:	mov	edi, eax
0x400110:	call	0x500020
