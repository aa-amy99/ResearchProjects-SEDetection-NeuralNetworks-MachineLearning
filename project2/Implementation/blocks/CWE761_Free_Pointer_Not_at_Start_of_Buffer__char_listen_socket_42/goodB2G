<Block for 0x4003fc, 22 bytes>
0x4003fc:	endbr64	
0x400400:	push	rbp
0x400401:	mov	rbp, rsp
0x400404:	sub	rsp, 0x10
0x400408:	mov	edi, 0x64
0x40040d:	call	0x500058
<Block for 0x400412, 11 bytes>
0x400412:	mov	qword ptr [rbp - 8], rax
0x400416:	cmp	qword ptr [rbp - 8], 0
0x40041b:	jne	0x400427
<Block for 0x40041d, 10 bytes>
0x40041d:	mov	edi, 0xffffffff
0x400422:	call	0x500060
<Block for 0x400427, 19 bytes>
0x400427:	mov	rax, qword ptr [rbp - 8]
0x40042b:	mov	byte ptr [rax], 0
0x40042e:	mov	rax, qword ptr [rbp - 8]
0x400432:	mov	rdi, rax
0x400435:	call	0x40023c
<Block for 0x40043a, 14 bytes>
0x40043a:	mov	qword ptr [rbp - 8], rax
0x40043e:	mov	qword ptr [rbp - 0x10], 0
0x400446:	jmp	0x40046d
<Block for 0x40046d, 12 bytes>
0x40046d:	mov	rax, qword ptr [rbp - 8]
0x400471:	mov	rdi, rax
0x400474:	call	0x500000
<Block for 0x400479, 6 bytes>
0x400479:	cmp	qword ptr [rbp - 0x10], rax
0x40047d:	jb	0x400448
<Block for 0x400448, 18 bytes>
0x400448:	mov	rdx, qword ptr [rbp - 8]
0x40044c:	mov	rax, qword ptr [rbp - 0x10]
0x400450:	add	rax, rdx
0x400453:	movzx	eax, byte ptr [rax]
0x400456:	cmp	al, 0x53
0x400458:	jne	0x400468
<Block for 0x40047f, 12 bytes>
0x40047f:	mov	rax, qword ptr [rbp - 8]
0x400483:	mov	rdi, rax
0x400486:	call	0x500070
<Block for 0x40045a, 12 bytes>
0x40045a:	lea	rdi, [rip + 0x42]
0x400461:	call	0x500068
<Block for 0x400468, 17 bytes>
0x400468:	add	qword ptr [rbp - 0x10], 1
0x40046d:	mov	rax, qword ptr [rbp - 8]
0x400471:	mov	rdi, rax
0x400474:	call	0x500000
<Block for 0x40048b, 3 bytes>
0x40048b:	nop	
0x40048c:	leave	
0x40048d:	ret	
<Block for 0x400466, 2 bytes>
0x400466:	jmp	0x40047f
