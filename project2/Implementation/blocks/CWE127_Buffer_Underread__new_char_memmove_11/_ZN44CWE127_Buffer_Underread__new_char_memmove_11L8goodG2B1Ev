<Block for 0x4000c5, 40 bytes>
0x4000c5:	endbr64	
0x4000c9:	push	rbp
0x4000ca:	mov	rbp, rsp
0x4000cd:	add	rsp, -0x80
0x4000d1:	mov	rax, qword ptr fs:[0x28]
0x4000da:	mov	qword ptr [rbp - 8], rax
0x4000de:	xor	eax, eax
0x4000e0:	mov	qword ptr [rbp - 0x80], 0
0x4000e8:	call	0x500030
<Block for 0x4000ed, 9 bytes>
0x4000ed:	test	eax, eax
0x4000ef:	setne	al
0x4000f2:	test	al, al
0x4000f4:	je	0x400104
<Block for 0x400104, 10 bytes>
0x400104:	mov	edi, 0x64
0x400109:	call	0x500008
<Block for 0x4000f6, 12 bytes>
0x4000f6:	lea	rdi, [rip + 0x16d]
0x4000fd:	call	0x500020
<Block for 0x40010e, 26 bytes>
0x40010e:	mov	qword ptr [rbp - 0x78], rax
0x400112:	mov	rax, qword ptr [rbp - 0x78]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x41
0x400120:	mov	rdi, rax
0x400123:	call	0x500010
<Block for 0x400102, 2 bytes>
0x400102:	jmp	0x40013b
<Block for 0x400128, 41 bytes>
0x400128:	mov	rax, qword ptr [rbp - 0x78]
0x40012c:	add	rax, 0x63
0x400130:	mov	byte ptr [rax], 0
0x400133:	mov	rax, qword ptr [rbp - 0x78]
0x400137:	mov	qword ptr [rbp - 0x80], rax
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	edx, 0x63
0x400144:	mov	esi, 0x43
0x400149:	mov	rdi, rax
0x40014c:	call	0x500010
<Block for 0x40013b, 22 bytes>
0x40013b:	lea	rax, [rbp - 0x70]
0x40013f:	mov	edx, 0x63
0x400144:	mov	esi, 0x43
0x400149:	mov	rdi, rax
0x40014c:	call	0x500010
<Block for 0x400151, 28 bytes>
0x400151:	mov	byte ptr [rbp - 0xd], 0
0x400155:	mov	rcx, qword ptr [rbp - 0x80]
0x400159:	lea	rax, [rbp - 0x70]
0x40015d:	mov	edx, 0x64
0x400162:	mov	rsi, rcx
0x400165:	mov	rdi, rax
0x400168:	call	0x500018
<Block for 0x40016d, 16 bytes>
0x40016d:	mov	byte ptr [rbp - 0xd], 0
0x400171:	lea	rax, [rbp - 0x70]
0x400175:	mov	rdi, rax
0x400178:	call	0x500020
<Block for 0x40017d, 16 bytes>
0x40017d:	nop	
0x40017e:	mov	rax, qword ptr [rbp - 8]
0x400182:	xor	rax, qword ptr fs:[0x28]
0x40018b:	je	0x400192
<Block for 0x400192, 2 bytes>
0x400192:	leave	
0x400193:	ret	
<Block for 0x40018d, 5 bytes>
0x40018d:	call	0x500028
