<Block for 0x400194, 40 bytes>
0x400194:	endbr64	
0x400198:	push	rbp
0x400199:	mov	rbp, rsp
0x40019c:	add	rsp, -0x80
0x4001a0:	mov	rax, qword ptr fs:[0x28]
0x4001a9:	mov	qword ptr [rbp - 8], rax
0x4001ad:	xor	eax, eax
0x4001af:	mov	qword ptr [rbp - 0x80], 0
0x4001b7:	call	0x500000
<Block for 0x4001bc, 9 bytes>
0x4001bc:	test	eax, eax
0x4001be:	setne	al
0x4001c1:	test	al, al
0x4001c3:	je	0x4001fc
<Block for 0x4001fc, 22 bytes>
0x4001fc:	lea	rax, [rbp - 0x70]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x43
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500010
<Block for 0x4001c5, 10 bytes>
0x4001c5:	mov	edi, 0x64
0x4001ca:	call	0x500008
<Block for 0x400212, 28 bytes>
0x400212:	mov	byte ptr [rbp - 0xd], 0
0x400216:	mov	rcx, qword ptr [rbp - 0x80]
0x40021a:	lea	rax, [rbp - 0x70]
0x40021e:	mov	edx, 0x64
0x400223:	mov	rsi, rcx
0x400226:	mov	rdi, rax
0x400229:	call	0x500018
<Block for 0x4001cf, 26 bytes>
0x4001cf:	mov	qword ptr [rbp - 0x78], rax
0x4001d3:	mov	rax, qword ptr [rbp - 0x78]
0x4001d7:	mov	edx, 0x63
0x4001dc:	mov	esi, 0x41
0x4001e1:	mov	rdi, rax
0x4001e4:	call	0x500010
<Block for 0x40022e, 16 bytes>
0x40022e:	mov	byte ptr [rbp - 0xd], 0
0x400232:	lea	rax, [rbp - 0x70]
0x400236:	mov	rdi, rax
0x400239:	call	0x500020
<Block for 0x4001e9, 41 bytes>
0x4001e9:	mov	rax, qword ptr [rbp - 0x78]
0x4001ed:	add	rax, 0x63
0x4001f1:	mov	byte ptr [rax], 0
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	mov	qword ptr [rbp - 0x80], rax
0x4001fc:	lea	rax, [rbp - 0x70]
0x400200:	mov	edx, 0x63
0x400205:	mov	esi, 0x43
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500010
<Block for 0x40023e, 16 bytes>
0x40023e:	nop	
0x40023f:	mov	rax, qword ptr [rbp - 8]
0x400243:	xor	rax, qword ptr fs:[0x28]
0x40024c:	je	0x400253
<Block for 0x400253, 2 bytes>
0x400253:	leave	
0x400254:	ret	
<Block for 0x40024e, 5 bytes>
0x40024e:	call	0x500028
