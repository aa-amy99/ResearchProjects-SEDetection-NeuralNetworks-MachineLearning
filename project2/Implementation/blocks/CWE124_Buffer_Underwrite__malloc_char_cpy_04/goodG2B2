<Block for 0x40019a, 44 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	add	rsp, -0x80
0x4001a6:	mov	rax, qword ptr fs:[0x28]
0x4001af:	mov	qword ptr [rbp - 8], rax
0x4001b3:	xor	eax, eax
0x4001b5:	mov	qword ptr [rbp - 0x80], 0
0x4001bd:	mov	eax, 1
0x4001c2:	test	eax, eax
0x4001c4:	je	0x40020e
<Block for 0x40020e, 22 bytes>
0x40020e:	lea	rax, [rbp - 0x70]
0x400212:	mov	edx, 0x63
0x400217:	mov	esi, 0x43
0x40021c:	mov	rdi, rax
0x40021f:	call	0x500010
<Block for 0x4001c6, 10 bytes>
0x4001c6:	mov	edi, 0x64
0x4001cb:	call	0x500000
<Block for 0x400224, 23 bytes>
0x400224:	mov	byte ptr [rbp - 0xd], 0
0x400228:	lea	rdx, [rbp - 0x70]
0x40022c:	mov	rax, qword ptr [rbp - 0x80]
0x400230:	mov	rsi, rdx
0x400233:	mov	rdi, rax
0x400236:	call	0x500018
<Block for 0x4001d0, 11 bytes>
0x4001d0:	mov	qword ptr [rbp - 0x78], rax
0x4001d4:	cmp	qword ptr [rbp - 0x78], 0
0x4001d9:	jne	0x4001e5
<Block for 0x40023b, 12 bytes>
0x40023b:	mov	rax, qword ptr [rbp - 0x80]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500020
<Block for 0x4001db, 10 bytes>
0x4001db:	mov	edi, 0xffffffff
0x4001e0:	call	0x500008
<Block for 0x4001e5, 22 bytes>
0x4001e5:	mov	rax, qword ptr [rbp - 0x78]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x41
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500010
<Block for 0x400247, 16 bytes>
0x400247:	nop	
0x400248:	mov	rax, qword ptr [rbp - 8]
0x40024c:	xor	rax, qword ptr fs:[0x28]
0x400255:	je	0x40025c
<Block for 0x4001fb, 41 bytes>
0x4001fb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ff:	add	rax, 0x63
0x400203:	mov	byte ptr [rax], 0
0x400206:	mov	rax, qword ptr [rbp - 0x78]
0x40020a:	mov	qword ptr [rbp - 0x80], rax
0x40020e:	lea	rax, [rbp - 0x70]
0x400212:	mov	edx, 0x63
0x400217:	mov	esi, 0x43
0x40021c:	mov	rdi, rax
0x40021f:	call	0x500010
<Block for 0x40025c, 2 bytes>
0x40025c:	leave	
0x40025d:	ret	
<Block for 0x400257, 5 bytes>
0x400257:	call	0x500028
