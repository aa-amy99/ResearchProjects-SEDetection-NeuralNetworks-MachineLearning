<Block for 0x4000c6, 44 bytes>
0x4000c6:	endbr64	
0x4000ca:	push	rbp
0x4000cb:	mov	rbp, rsp
0x4000ce:	sub	rsp, 0x40
0x4000d2:	mov	rax, qword ptr fs:[0x28]
0x4000db:	mov	qword ptr [rbp - 8], rax
0x4000df:	xor	eax, eax
0x4000e1:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000e8:	mov	eax, 0
0x4000ed:	call	0x400000
<Block for 0x4000f2, 4 bytes>
0x4000f2:	test	eax, eax
0x4000f4:	je	0x4000fd
<Block for 0x4000fd, 10 bytes>
0x4000fd:	mov	eax, 0
0x400102:	call	0x40000f
<Block for 0x4000f6, 17 bytes>
0x4000f6:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000fd:	mov	eax, 0
0x400102:	call	0x40000f
<Block for 0x400107, 4 bytes>
0x400107:	test	eax, eax
0x400109:	je	0x400119
<Block for 0x400119, 46 bytes>
0x400119:	mov	qword ptr [rbp - 0x30], 0
0x400121:	mov	qword ptr [rbp - 0x28], 0
0x400129:	mov	qword ptr [rbp - 0x20], 0
0x400131:	mov	qword ptr [rbp - 0x18], 0
0x400139:	mov	qword ptr [rbp - 0x10], 0
0x400141:	cmp	dword ptr [rbp - 0x34], 0
0x400145:	js	0x40015f
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x2d5]
0x400112:	call	0x500008
<Block for 0x40015f, 12 bytes>
0x40015f:	lea	rdi, [rip + 0x29a]
0x400166:	call	0x500008
<Block for 0x400147, 6 bytes>
0x400147:	cmp	dword ptr [rbp - 0x34], 9
0x40014b:	jg	0x40015f
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x40016b
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x40014d, 16 bytes>
0x40014d:	mov	eax, dword ptr [rbp - 0x34]
0x400150:	cdqe	
0x400152:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400156:	mov	edi, eax
0x400158:	call	0x500000
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500010
<Block for 0x40015d, 2 bytes>
0x40015d:	jmp	0x40016b
