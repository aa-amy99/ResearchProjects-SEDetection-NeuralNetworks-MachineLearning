<Block for 0x400122, 45 bytes>
0x400122:	endbr64	
0x400126:	push	rbp
0x400127:	mov	rbp, rsp
0x40012a:	add	rsp, -0x80
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	mov	qword ptr [rbp - 0x78], 0
0x400145:	mov	eax, 0
0x40014a:	call	0x500000
<Block for 0x40014f, 4 bytes>
0x40014f:	test	eax, eax
0x400151:	je	0x400195
<Block for 0x400195, 10 bytes>
0x400195:	mov	edi, 0x64
0x40019a:	call	0x500008
<Block for 0x400153, 10 bytes>
0x400153:	mov	edi, 0x64
0x400158:	call	0x500008
<Block for 0x40019f, 11 bytes>
0x40019f:	mov	qword ptr [rbp - 0x78], rax
0x4001a3:	cmp	qword ptr [rbp - 0x78], 0
0x4001a8:	jne	0x4001b4
<Block for 0x40015d, 11 bytes>
0x40015d:	mov	qword ptr [rbp - 0x78], rax
0x400161:	cmp	qword ptr [rbp - 0x78], 0
0x400166:	jne	0x400172
<Block for 0x4001aa, 10 bytes>
0x4001aa:	mov	edi, 0xffffffff
0x4001af:	call	0x500010
<Block for 0x4001b4, 22 bytes>
0x4001b4:	mov	rax, qword ptr [rbp - 0x78]
0x4001b8:	mov	edx, 0x63
0x4001bd:	mov	esi, 0x41
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x500018
<Block for 0x400168, 10 bytes>
0x400168:	mov	edi, 0xffffffff
0x40016d:	call	0x500010
<Block for 0x400172, 22 bytes>
0x400172:	mov	rax, qword ptr [rbp - 0x78]
0x400176:	mov	edx, 0x63
0x40017b:	mov	esi, 0x41
0x400180:	mov	rdi, rax
0x400183:	call	0x500018
<Block for 0x4001ca, 33 bytes>
0x4001ca:	mov	rax, qword ptr [rbp - 0x78]
0x4001ce:	add	rax, 0x63
0x4001d2:	mov	byte ptr [rax], 0
0x4001d5:	lea	rax, [rbp - 0x70]
0x4001d9:	mov	edx, 0x63
0x4001de:	mov	esi, 0x43
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500018
<Block for 0x400188, 13 bytes>
0x400188:	mov	rax, qword ptr [rbp - 0x78]
0x40018c:	add	rax, 0x63
0x400190:	mov	byte ptr [rax], 0
0x400193:	jmp	0x4001d5
<Block for 0x4001eb, 16 bytes>
0x4001eb:	mov	byte ptr [rbp - 0xd], 0
0x4001ef:	lea	rax, [rbp - 0x70]
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500020
<Block for 0x4001d5, 22 bytes>
0x4001d5:	lea	rax, [rbp - 0x70]
0x4001d9:	mov	edx, 0x63
0x4001de:	mov	esi, 0x43
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500018
<Block for 0x4001fb, 22 bytes>
0x4001fb:	mov	rdx, rax
0x4001fe:	mov	rcx, qword ptr [rbp - 0x78]
0x400202:	lea	rax, [rbp - 0x70]
0x400206:	mov	rsi, rcx
0x400209:	mov	rdi, rax
0x40020c:	call	0x500028
<Block for 0x400211, 16 bytes>
0x400211:	mov	byte ptr [rbp - 0xd], 0
0x400215:	lea	rax, [rbp - 0x70]
0x400219:	mov	rdi, rax
0x40021c:	call	0x500030
<Block for 0x400221, 12 bytes>
0x400221:	mov	rax, qword ptr [rbp - 0x78]
0x400225:	mov	rdi, rax
0x400228:	call	0x500038
<Block for 0x40022d, 16 bytes>
0x40022d:	nop	
0x40022e:	mov	rax, qword ptr [rbp - 8]
0x400232:	xor	rax, qword ptr fs:[0x28]
0x40023b:	je	0x400242
<Block for 0x400242, 2 bytes>
0x400242:	leave	
0x400243:	ret	
<Block for 0x40023d, 5 bytes>
0x40023d:	call	0x500040
