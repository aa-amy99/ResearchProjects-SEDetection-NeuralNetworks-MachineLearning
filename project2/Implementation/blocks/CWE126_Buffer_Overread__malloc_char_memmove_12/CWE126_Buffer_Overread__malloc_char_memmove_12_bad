<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	mov	eax, 0
0x400028:	call	0x500000
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	je	0x400073
<Block for 0x400073, 10 bytes>
0x400073:	mov	edi, 0x64
0x400078:	call	0x500008
<Block for 0x400031, 10 bytes>
0x400031:	mov	edi, 0x32
0x400036:	call	0x500008
<Block for 0x40007d, 11 bytes>
0x40007d:	mov	qword ptr [rbp - 0x78], rax
0x400081:	cmp	qword ptr [rbp - 0x78], 0
0x400086:	jne	0x400092
<Block for 0x40003b, 11 bytes>
0x40003b:	mov	qword ptr [rbp - 0x78], rax
0x40003f:	cmp	qword ptr [rbp - 0x78], 0
0x400044:	jne	0x400050
<Block for 0x400088, 10 bytes>
0x400088:	mov	edi, 0xffffffff
0x40008d:	call	0x500010
<Block for 0x400092, 22 bytes>
0x400092:	mov	rax, qword ptr [rbp - 0x78]
0x400096:	mov	edx, 0x63
0x40009b:	mov	esi, 0x41
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x500018
<Block for 0x400046, 10 bytes>
0x400046:	mov	edi, 0xffffffff
0x40004b:	call	0x500010
<Block for 0x400050, 22 bytes>
0x400050:	mov	rax, qword ptr [rbp - 0x78]
0x400054:	mov	edx, 0x31
0x400059:	mov	esi, 0x41
0x40005e:	mov	rdi, rax
0x400061:	call	0x500018
<Block for 0x4000a8, 33 bytes>
0x4000a8:	mov	rax, qword ptr [rbp - 0x78]
0x4000ac:	add	rax, 0x63
0x4000b0:	mov	byte ptr [rax], 0
0x4000b3:	lea	rax, [rbp - 0x70]
0x4000b7:	mov	edx, 0x63
0x4000bc:	mov	esi, 0x43
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x400066, 13 bytes>
0x400066:	mov	rax, qword ptr [rbp - 0x78]
0x40006a:	add	rax, 0x31
0x40006e:	mov	byte ptr [rax], 0
0x400071:	jmp	0x4000b3
<Block for 0x4000c9, 16 bytes>
0x4000c9:	mov	byte ptr [rbp - 0xd], 0
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500020
<Block for 0x4000b3, 22 bytes>
0x4000b3:	lea	rax, [rbp - 0x70]
0x4000b7:	mov	edx, 0x63
0x4000bc:	mov	esi, 0x43
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500018
<Block for 0x4000d9, 22 bytes>
0x4000d9:	mov	rdx, rax
0x4000dc:	mov	rcx, qword ptr [rbp - 0x78]
0x4000e0:	lea	rax, [rbp - 0x70]
0x4000e4:	mov	rsi, rcx
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500028
<Block for 0x4000ef, 16 bytes>
0x4000ef:	mov	byte ptr [rbp - 0xd], 0
0x4000f3:	lea	rax, [rbp - 0x70]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500030
<Block for 0x4000ff, 12 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0x78]
0x400103:	mov	rdi, rax
0x400106:	call	0x500038
<Block for 0x40010b, 16 bytes>
0x40010b:	nop	
0x40010c:	mov	rax, qword ptr [rbp - 8]
0x400110:	xor	rax, qword ptr fs:[0x28]
0x400119:	je	0x400120
<Block for 0x400120, 2 bytes>
0x400120:	leave	
0x400121:	ret	
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500040
