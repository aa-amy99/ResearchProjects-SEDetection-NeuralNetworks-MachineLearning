<Block for 0x4000fa, 51 bytes>
0x4000fa:	endbr64	
0x4000fe:	push	rbp
0x4000ff:	mov	rbp, rsp
0x400102:	sub	rsp, 0x90
0x400109:	mov	rax, qword ptr fs:[0x28]
0x400112:	mov	qword ptr [rbp - 8], rax
0x400116:	xor	eax, eax
0x400118:	mov	qword ptr [rbp - 0x90], 0
0x400123:	mov	edi, 0x64
0x400128:	call	0x500000
<Block for 0x40012d, 17 bytes>
0x40012d:	mov	qword ptr [rbp - 0x88], rax
0x400134:	cmp	qword ptr [rbp - 0x88], 0
0x40013c:	jne	0x400148
<Block for 0x40013e, 10 bytes>
0x40013e:	mov	edi, 0xffffffff
0x400143:	call	0x500008
<Block for 0x400148, 25 bytes>
0x400148:	mov	rax, qword ptr [rbp - 0x88]
0x40014f:	mov	edx, 0x63
0x400154:	mov	esi, 0x41
0x400159:	mov	rdi, rax
0x40015c:	call	0x500010
<Block for 0x400161, 69 bytes>
0x400161:	mov	rax, qword ptr [rbp - 0x88]
0x400168:	add	rax, 0x63
0x40016c:	mov	byte ptr [rax], 0
0x40016f:	mov	rax, qword ptr [rbp - 0x88]
0x400176:	mov	qword ptr [rbp - 0x90], rax
0x40017d:	mov	rax, qword ptr [rbp - 0x90]
0x400184:	mov	qword ptr [rbp - 0x80], rax
0x400188:	mov	rax, qword ptr [rbp - 0x80]
0x40018c:	mov	qword ptr [rbp - 0x78], rax
0x400190:	lea	rax, [rbp - 0x70]
0x400194:	mov	edx, 0x63
0x400199:	mov	esi, 0x43
0x40019e:	mov	rdi, rax
0x4001a1:	call	0x500010
<Block for 0x4001a6, 28 bytes>
0x4001a6:	mov	byte ptr [rbp - 0xd], 0
0x4001aa:	lea	rcx, [rbp - 0x70]
0x4001ae:	mov	rax, qword ptr [rbp - 0x78]
0x4001b2:	mov	edx, 0x64
0x4001b7:	mov	rsi, rcx
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500018
<Block for 0x4001c2, 23 bytes>
0x4001c2:	mov	rax, qword ptr [rbp - 0x78]
0x4001c6:	add	rax, 0x63
0x4001ca:	mov	byte ptr [rax], 0
0x4001cd:	mov	rax, qword ptr [rbp - 0x78]
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500020
<Block for 0x4001d9, 16 bytes>
0x4001d9:	nop	
0x4001da:	mov	rax, qword ptr [rbp - 8]
0x4001de:	xor	rax, qword ptr fs:[0x28]
0x4001e7:	je	0x4001ee
<Block for 0x4001ee, 2 bytes>
0x4001ee:	leave	
0x4001ef:	ret	
<Block for 0x4001e9, 5 bytes>
0x4001e9:	call	0x500028
