<Block for 0x40001e, 51 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x90
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	qword ptr [rbp - 0x88], 0
0x400047:	mov	eax, 0
0x40004c:	call	0x400000
<Block for 0x400051, 4 bytes>
0x400051:	test	eax, eax
0x400053:	je	0x4000a1
<Block for 0x4000a1, 22 bytes>
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	edx, 0x63
0x4000aa:	mov	esi, 0x43
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500010
<Block for 0x400055, 10 bytes>
0x400055:	mov	edi, 0x32
0x40005a:	call	0x500000
<Block for 0x4000b7, 16 bytes>
0x4000b7:	mov	byte ptr [rbp - 0xd], 0
0x4000bb:	lea	rax, [rbp - 0x70]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500018
<Block for 0x40005f, 17 bytes>
0x40005f:	mov	qword ptr [rbp - 0x88], rax
0x400066:	cmp	qword ptr [rbp - 0x88], 0
0x40006e:	jne	0x40007a
<Block for 0x4000c7, 14 bytes>
0x4000c7:	mov	qword ptr [rbp - 0x78], rax
0x4000cb:	mov	qword ptr [rbp - 0x80], 0
0x4000d3:	jmp	0x4000f8
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 0xffffffff
0x400075:	call	0x500008
<Block for 0x40007a, 25 bytes>
0x40007a:	mov	rax, qword ptr [rbp - 0x88]
0x400081:	mov	edx, 0x31
0x400086:	mov	esi, 0x41
0x40008b:	mov	rdi, rax
0x40008e:	call	0x500010
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 0x80]
0x4000fc:	cmp	rax, qword ptr [rbp - 0x78]
0x400100:	jb	0x4000d5
<Block for 0x400093, 36 bytes>
0x400093:	mov	rax, qword ptr [rbp - 0x88]
0x40009a:	add	rax, 0x31
0x40009e:	mov	byte ptr [rax], 0
0x4000a1:	lea	rax, [rbp - 0x70]
0x4000a5:	mov	edx, 0x63
0x4000aa:	mov	esi, 0x43
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500010
<Block for 0x4000d5, 45 bytes>
0x4000d5:	mov	rdx, qword ptr [rbp - 0x88]
0x4000dc:	mov	rax, qword ptr [rbp - 0x80]
0x4000e0:	add	rax, rdx
0x4000e3:	movzx	eax, byte ptr [rax]
0x4000e6:	lea	rcx, [rbp - 0x70]
0x4000ea:	mov	rdx, qword ptr [rbp - 0x80]
0x4000ee:	add	rdx, rcx
0x4000f1:	mov	byte ptr [rdx], al
0x4000f3:	add	qword ptr [rbp - 0x80], 1
0x4000f8:	mov	rax, qword ptr [rbp - 0x80]
0x4000fc:	cmp	rax, qword ptr [rbp - 0x78]
0x400100:	jb	0x4000d5
<Block for 0x400102, 16 bytes>
0x400102:	mov	byte ptr [rbp - 0xd], 0
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500020
<Block for 0x400112, 15 bytes>
0x400112:	mov	rax, qword ptr [rbp - 0x88]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500028
<Block for 0x400121, 16 bytes>
0x400121:	nop	
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	xor	rax, qword ptr fs:[0x28]
0x40012f:	je	0x400136
<Block for 0x400136, 2 bytes>
0x400136:	leave	
0x400137:	ret	
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500030
