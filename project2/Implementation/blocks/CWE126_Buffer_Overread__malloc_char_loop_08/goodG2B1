<Block for 0x400138, 51 bytes>
0x400138:	endbr64	
0x40013c:	push	rbp
0x40013d:	mov	rbp, rsp
0x400140:	sub	rsp, 0x90
0x400147:	mov	rax, qword ptr fs:[0x28]
0x400150:	mov	qword ptr [rbp - 8], rax
0x400154:	xor	eax, eax
0x400156:	mov	qword ptr [rbp - 0x88], 0
0x400161:	mov	eax, 0
0x400166:	call	0x40000f
<Block for 0x40016b, 4 bytes>
0x40016b:	test	eax, eax
0x40016d:	je	0x40017d
<Block for 0x40017d, 10 bytes>
0x40017d:	mov	edi, 0x64
0x400182:	call	0x500000
<Block for 0x40016f, 12 bytes>
0x40016f:	lea	rdi, [rip + 0x223]
0x400176:	call	0x500020
<Block for 0x400187, 17 bytes>
0x400187:	mov	qword ptr [rbp - 0x88], rax
0x40018e:	cmp	qword ptr [rbp - 0x88], 0
0x400196:	jne	0x4001a2
<Block for 0x40017b, 2 bytes>
0x40017b:	jmp	0x4001c9
<Block for 0x400198, 10 bytes>
0x400198:	mov	edi, 0xffffffff
0x40019d:	call	0x500008
<Block for 0x4001a2, 25 bytes>
0x4001a2:	mov	rax, qword ptr [rbp - 0x88]
0x4001a9:	mov	edx, 0x63
0x4001ae:	mov	esi, 0x41
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500010
<Block for 0x4001c9, 22 bytes>
0x4001c9:	lea	rax, [rbp - 0x70]
0x4001cd:	mov	edx, 0x63
0x4001d2:	mov	esi, 0x43
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x4001bb, 36 bytes>
0x4001bb:	mov	rax, qword ptr [rbp - 0x88]
0x4001c2:	add	rax, 0x63
0x4001c6:	mov	byte ptr [rax], 0
0x4001c9:	lea	rax, [rbp - 0x70]
0x4001cd:	mov	edx, 0x63
0x4001d2:	mov	esi, 0x43
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x4001df, 16 bytes>
0x4001df:	mov	byte ptr [rbp - 0xd], 0
0x4001e3:	lea	rax, [rbp - 0x70]
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x500018
<Block for 0x4001ef, 14 bytes>
0x4001ef:	mov	qword ptr [rbp - 0x78], rax
0x4001f3:	mov	qword ptr [rbp - 0x80], 0
0x4001fb:	jmp	0x400220
<Block for 0x400220, 10 bytes>
0x400220:	mov	rax, qword ptr [rbp - 0x80]
0x400224:	cmp	rax, qword ptr [rbp - 0x78]
0x400228:	jb	0x4001fd
<Block for 0x4001fd, 45 bytes>
0x4001fd:	mov	rdx, qword ptr [rbp - 0x88]
0x400204:	mov	rax, qword ptr [rbp - 0x80]
0x400208:	add	rax, rdx
0x40020b:	movzx	eax, byte ptr [rax]
0x40020e:	lea	rcx, [rbp - 0x70]
0x400212:	mov	rdx, qword ptr [rbp - 0x80]
0x400216:	add	rdx, rcx
0x400219:	mov	byte ptr [rdx], al
0x40021b:	add	qword ptr [rbp - 0x80], 1
0x400220:	mov	rax, qword ptr [rbp - 0x80]
0x400224:	cmp	rax, qword ptr [rbp - 0x78]
0x400228:	jb	0x4001fd
<Block for 0x40022a, 16 bytes>
0x40022a:	mov	byte ptr [rbp - 0xd], 0
0x40022e:	lea	rax, [rbp - 0x70]
0x400232:	mov	rdi, rax
0x400235:	call	0x500020
<Block for 0x40023a, 15 bytes>
0x40023a:	mov	rax, qword ptr [rbp - 0x88]
0x400241:	mov	rdi, rax
0x400244:	call	0x500028
<Block for 0x400249, 16 bytes>
0x400249:	nop	
0x40024a:	mov	rax, qword ptr [rbp - 8]
0x40024e:	xor	rax, qword ptr fs:[0x28]
0x400257:	je	0x40025e
<Block for 0x40025e, 2 bytes>
0x40025e:	leave	
0x40025f:	ret	
<Block for 0x400259, 5 bytes>
0x400259:	call	0x500030
