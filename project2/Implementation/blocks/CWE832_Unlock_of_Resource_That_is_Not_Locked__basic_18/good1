<Block for 0x400078, 25 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	nop	
0x400081:	endbr64	
0x400085:	lea	rdi, [rip + 0xa4]
0x40008c:	call	0x500000
<Block for 0x400091, 12 bytes>
0x400091:	lea	rdi, [rip + 0x90]
0x400098:	call	0x500008
<Block for 0x40009d, 4 bytes>
0x40009d:	test	eax, eax
0x40009f:	jne	0x4000b7
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0x99]
0x4000a8:	call	0x500000
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rdi, [rip + 0xbe]
0x4000be:	call	0x500000
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 1
0x4000b2:	call	0x500010
<Block for 0x4000c3, 15 bytes>
0x4000c3:	mov	rax, qword ptr [rip + 0x5e]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500028
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rdi, [rip + 0x7e]
0x4000d9:	call	0x500000
<Block for 0x4000de, 15 bytes>
0x4000de:	mov	rax, qword ptr [rip + 0x43]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500018
<Block for 0x4000ed, 12 bytes>
0x4000ed:	lea	rdi, [rip + 0x75]
0x4000f4:	call	0x500000
<Block for 0x4000f9, 15 bytes>
0x4000f9:	mov	rax, qword ptr [rip + 0x28]
0x400100:	mov	rdi, rax
0x400103:	call	0x500020
<Block for 0x400108, 3 bytes>
0x400108:	nop	
0x400109:	pop	rbp
0x40010a:	ret	
