<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x400654
<Block for 0x40002b, 54 bytes>
0x40002b:	mov	eax, 0x10
0x400030:	sub	rax, 1
0x400034:	add	rax, 0x3a
0x400038:	mov	ebx, 0x10
0x40003d:	mov	edx, 0
0x400042:	div	rbx
0x400045:	imul	rax, rax, 0x10
0x400049:	mov	rdx, rax
0x40004c:	and	rdx, 0xfffffffffffff000
0x400053:	mov	rcx, rsp
0x400056:	sub	rcx, rdx
0x400059:	mov	rdx, rcx
0x40005c:	cmp	rsp, rdx
0x40005f:	je	0x400073
<Block for 0x400073, 26 bytes>
0x400073:	mov	rdx, rax
0x400076:	and	edx, 0xfff
0x40007c:	sub	rsp, rdx
0x40007f:	mov	rdx, rax
0x400082:	and	edx, 0xfff
0x400088:	test	rdx, rdx
0x40008b:	je	0x40009d
<Block for 0x400061, 18 bytes>
0x400061:	sub	rsp, 0x1000
0x400068:	or	qword ptr [rsp + 0xff8], 0
0x400071:	jmp	0x40005c
<Block for 0x40009d, 76 bytes>
0x40009d:	mov	rax, rsp
0x4000a0:	add	rax, 0xf
0x4000a4:	shr	rax, 4
0x4000a8:	shl	rax, 4
0x4000ac:	mov	qword ptr [rbp - 0x98], rax
0x4000b3:	mov	eax, 0x10
0x4000b8:	sub	rax, 1
0x4000bc:	add	rax, 0x6c
0x4000c0:	mov	ecx, 0x10
0x4000c5:	mov	edx, 0
0x4000ca:	div	rcx
0x4000cd:	imul	rax, rax, 0x10
0x4000d1:	mov	rdx, rax
0x4000d4:	and	rdx, 0xfffffffffffff000
0x4000db:	mov	rcx, rsp
0x4000de:	sub	rcx, rdx
0x4000e1:	mov	rdx, rcx
0x4000e4:	cmp	rsp, rdx
0x4000e7:	je	0x4000fb
<Block for 0x40008d, 92 bytes>
0x40008d:	and	eax, 0xfff
0x400092:	sub	rax, 8
0x400096:	add	rax, rsp
0x400099:	or	qword ptr [rax], 0
0x40009d:	mov	rax, rsp
0x4000a0:	add	rax, 0xf
0x4000a4:	shr	rax, 4
0x4000a8:	shl	rax, 4
0x4000ac:	mov	qword ptr [rbp - 0x98], rax
0x4000b3:	mov	eax, 0x10
0x4000b8:	sub	rax, 1
0x4000bc:	add	rax, 0x6c
0x4000c0:	mov	ecx, 0x10
0x4000c5:	mov	edx, 0
0x4000ca:	div	rcx
0x4000cd:	imul	rax, rax, 0x10
0x4000d1:	mov	rdx, rax
0x4000d4:	and	rdx, 0xfffffffffffff000
0x4000db:	mov	rcx, rsp
0x4000de:	sub	rcx, rdx
0x4000e1:	mov	rdx, rcx
0x4000e4:	cmp	rsp, rdx
0x4000e7:	je	0x4000fb
<Block for 0x40005c, 5 bytes>
0x40005c:	cmp	rsp, rdx
0x40005f:	je	0x400073
<Block for 0x4000fb, 26 bytes>
0x4000fb:	mov	rdx, rax
0x4000fe:	and	edx, 0xfff
0x400104:	sub	rsp, rdx
0x400107:	mov	rdx, rax
0x40010a:	and	edx, 0xfff
0x400110:	test	rdx, rdx
0x400113:	je	0x400125
<Block for 0x4000e9, 18 bytes>
0x4000e9:	sub	rsp, 0x1000
0x4000f0:	or	qword ptr [rsp + 0xff8], 0
0x4000f9:	jmp	0x4000e4
<Block for 0x400125, 47 bytes>
0x400125:	mov	rax, rsp
0x400128:	add	rax, 0xf
0x40012c:	shr	rax, 4
0x400130:	shl	rax, 4
0x400134:	mov	qword ptr [rbp - 0x90], rax
0x40013b:	mov	rax, qword ptr [rbp - 0x98]
0x400142:	mov	edx, 0x31
0x400147:	mov	esi, 0x41
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500000
<Block for 0x400115, 63 bytes>
0x400115:	and	eax, 0xfff
0x40011a:	sub	rax, 8
0x40011e:	add	rax, rsp
0x400121:	or	qword ptr [rax], 0
0x400125:	mov	rax, rsp
0x400128:	add	rax, 0xf
0x40012c:	shr	rax, 4
0x400130:	shl	rax, 4
0x400134:	mov	qword ptr [rbp - 0x90], rax
0x40013b:	mov	rax, qword ptr [rbp - 0x98]
0x400142:	mov	edx, 0x31
0x400147:	mov	esi, 0x41
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500000
<Block for 0x4000e4, 5 bytes>
0x4000e4:	cmp	rsp, rdx
0x4000e7:	je	0x4000fb
<Block for 0x400154, 39 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x98]
0x40015b:	add	rax, 0x31
0x40015f:	mov	byte ptr [rax], 0
0x400162:	mov	rax, qword ptr [rbp - 0x90]
0x400169:	mov	edx, 0x63
0x40016e:	mov	esi, 0x41
0x400173:	mov	rdi, rax
0x400176:	call	0x500000
<Block for 0x40017b, 54 bytes>
0x40017b:	mov	rax, qword ptr [rbp - 0x90]
0x400182:	add	rax, 0x63
0x400186:	mov	byte ptr [rax], 0
0x400189:	mov	rax, qword ptr [rbp - 0x98]
0x400190:	mov	qword ptr [rbp - 0x88], rax
0x400197:	mov	dword ptr [rbp - 0x50], 0
0x40019e:	lea	rdx, [rbp - 0x50]
0x4001a2:	lea	rax, [rbp - 0x80]
0x4001a6:	mov	rsi, rdx
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x40080e
<Block for 0x4001b1, 36 bytes>
0x4001b1:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b8:	mov	qword ptr [rax], rdx
0x4001bb:	mov	dword ptr [rbp - 0x50], 1
0x4001c2:	lea	rdx, [rbp - 0x50]
0x4001c6:	lea	rax, [rbp - 0x80]
0x4001ca:	mov	rsi, rdx
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x40080e
<Block for 0x4001d5, 36 bytes>
0x4001d5:	mov	rdx, qword ptr [rbp - 0x88]
0x4001dc:	mov	qword ptr [rax], rdx
0x4001df:	mov	dword ptr [rbp - 0x50], 2
0x4001e6:	lea	rdx, [rbp - 0x50]
0x4001ea:	lea	rax, [rbp - 0x80]
0x4001ee:	mov	rsi, rdx
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x40080e
<Block for 0x4001f9, 29 bytes>
0x4001f9:	mov	rdx, qword ptr [rbp - 0x88]
0x400200:	mov	qword ptr [rax], rdx
0x400203:	lea	rdx, [rbp - 0x80]
0x400207:	lea	rax, [rbp - 0x50]
0x40020b:	mov	rsi, rdx
0x40020e:	mov	rdi, rax
0x400211:	call	0x400694
<Block for 0x400216, 12 bytes>
0x400216:	lea	rax, [rbp - 0x50]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500008
<Block for 0x400222, 12 bytes>
0x400222:	lea	rax, [rbp - 0x50]
0x400226:	mov	rdi, rax
0x400229:	call	0x400674
<Block for 0x40022e, 12 bytes>
0x40022e:	lea	rax, [rbp - 0x80]
0x400232:	mov	rdi, rax
0x400235:	call	0x400674
<Block for 0x40023a, 16 bytes>
0x40023a:	nop	
0x40023b:	mov	rax, qword ptr [rbp - 0x18]
0x40023f:	xor	rax, qword ptr fs:[0x28]
0x400248:	je	0x400284
<Block for 0x400284, 6 bytes>
0x400284:	mov	rbx, qword ptr [rbp - 8]
0x400288:	leave	
0x400289:	ret	
<Block for 0x40024a, 2 bytes>
0x40024a:	jmp	0x40027f
<Block for 0x40027f, 5 bytes>
0x40027f:	call	0x500018
