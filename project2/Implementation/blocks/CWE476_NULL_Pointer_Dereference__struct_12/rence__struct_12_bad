<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 4 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400033
<Block for 0x400033, 32 bytes>
0x400033:	mov	dword ptr [rbp - 0x10], 0
0x40003a:	mov	dword ptr [rbp - 0xc], 0
0x400041:	lea	rax, [rbp - 0x10]
0x400045:	mov	qword ptr [rbp - 0x18], rax
0x400049:	mov	eax, 0
0x40004e:	call	0x500000
<Block for 0x400029, 10 bytes>
0x400029:	mov	qword ptr [rbp - 0x18], 0
0x400031:	jmp	0x400049
<Block for 0x400053, 4 bytes>
0x400053:	test	eax, eax
0x400055:	je	0x400066
<Block for 0x400049, 10 bytes>
0x400049:	mov	eax, 0
0x40004e:	call	0x500000
<Block for 0x400066, 7 bytes>
0x400066:	cmp	qword ptr [rbp - 0x18], 0
0x40006b:	je	0x40007c
<Block for 0x400057, 13 bytes>
0x400057:	mov	rax, qword ptr [rbp - 0x18]
0x40005b:	mov	eax, dword ptr [rax]
0x40005d:	mov	edi, eax
0x40005f:	call	0x500008
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rdi, [rip + 0x156]
0x400083:	call	0x500010
<Block for 0x40006d, 13 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 0x18]
0x400071:	mov	eax, dword ptr [rax]
0x400073:	mov	edi, eax
0x400075:	call	0x500008
<Block for 0x400064, 2 bytes>
0x400064:	jmp	0x400088
<Block for 0x400088, 16 bytes>
0x400088:	nop	
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	xor	rax, qword ptr fs:[0x28]
0x400096:	je	0x40009d
<Block for 0x40007a, 2 bytes>
0x40007a:	jmp	0x400088
<Block for 0x40009d, 2 bytes>
0x40009d:	leave	
0x40009e:	ret	
<Block for 0x400098, 5 bytes>
0x400098:	call	0x500018
