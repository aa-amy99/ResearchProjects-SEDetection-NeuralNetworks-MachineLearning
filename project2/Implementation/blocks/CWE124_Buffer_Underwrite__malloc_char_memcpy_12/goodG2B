<Block for 0x4001b4, 52 bytes>
0x4001b4:	endbr64	
0x4001b8:	push	rbp
0x4001b9:	mov	rbp, rsp
0x4001bc:	push	rbx
0x4001bd:	sub	rsp, 0x98
0x4001c4:	mov	rax, qword ptr fs:[0x28]
0x4001cd:	mov	qword ptr [rbp - 0x18], rax
0x4001d1:	xor	eax, eax
0x4001d3:	mov	qword ptr [rbp - 0x98], 0
0x4001de:	mov	eax, 0
0x4001e3:	call	0x500000
<Block for 0x4001e8, 4 bytes>
0x4001e8:	test	eax, eax
0x4001ea:	je	0x400248
<Block for 0x400248, 10 bytes>
0x400248:	mov	edi, 0x64
0x40024d:	call	0x500008
<Block for 0x4001ec, 10 bytes>
0x4001ec:	mov	edi, 0x64
0x4001f1:	call	0x500008
<Block for 0x400252, 17 bytes>
0x400252:	mov	qword ptr [rbp - 0x90], rax
0x400259:	cmp	qword ptr [rbp - 0x90], 0
0x400261:	jne	0x40026d
<Block for 0x4001f6, 17 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x88], rax
0x4001fd:	cmp	qword ptr [rbp - 0x88], 0
0x400205:	jne	0x400211
<Block for 0x400263, 10 bytes>
0x400263:	mov	edi, 0xffffffff
0x400268:	call	0x500010
<Block for 0x40026d, 25 bytes>
0x40026d:	mov	rax, qword ptr [rbp - 0x90]
0x400274:	mov	edx, 0x63
0x400279:	mov	esi, 0x41
0x40027e:	mov	rdi, rax
0x400281:	call	0x500018
<Block for 0x400207, 10 bytes>
0x400207:	mov	edi, 0xffffffff
0x40020c:	call	0x500010
<Block for 0x400211, 25 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x88]
0x400218:	mov	edx, 0x63
0x40021d:	mov	esi, 0x41
0x400222:	mov	rdi, rax
0x400225:	call	0x500018
<Block for 0x400286, 50 bytes>
0x400286:	mov	rax, qword ptr [rbp - 0x90]
0x40028d:	add	rax, 0x63
0x400291:	mov	byte ptr [rax], 0
0x400294:	mov	rax, qword ptr [rbp - 0x90]
0x40029b:	mov	qword ptr [rbp - 0x98], rax
0x4002a2:	lea	rax, [rbp - 0x80]
0x4002a6:	mov	edx, 0x63
0x4002ab:	mov	esi, 0x43
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x500018
<Block for 0x40022a, 30 bytes>
0x40022a:	mov	rax, qword ptr [rbp - 0x88]
0x400231:	add	rax, 0x63
0x400235:	mov	byte ptr [rax], 0
0x400238:	mov	rax, qword ptr [rbp - 0x88]
0x40023f:	mov	qword ptr [rbp - 0x98], rax
0x400246:	jmp	0x4002a2
<Block for 0x4002b8, 141 bytes>
0x4002b8:	mov	byte ptr [rbp - 0x1d], 0
0x4002bc:	mov	rax, qword ptr [rbp - 0x98]
0x4002c3:	mov	rcx, qword ptr [rbp - 0x80]
0x4002c7:	mov	rbx, qword ptr [rbp - 0x78]
0x4002cb:	mov	qword ptr [rax], rcx
0x4002ce:	mov	qword ptr [rax + 8], rbx
0x4002d2:	mov	rcx, qword ptr [rbp - 0x70]
0x4002d6:	mov	rbx, qword ptr [rbp - 0x68]
0x4002da:	mov	qword ptr [rax + 0x10], rcx
0x4002de:	mov	qword ptr [rax + 0x18], rbx
0x4002e2:	mov	rcx, qword ptr [rbp - 0x60]
0x4002e6:	mov	rbx, qword ptr [rbp - 0x58]
0x4002ea:	mov	qword ptr [rax + 0x20], rcx
0x4002ee:	mov	qword ptr [rax + 0x28], rbx
0x4002f2:	mov	rcx, qword ptr [rbp - 0x50]
0x4002f6:	mov	rbx, qword ptr [rbp - 0x48]
0x4002fa:	mov	qword ptr [rax + 0x30], rcx
0x4002fe:	mov	qword ptr [rax + 0x38], rbx
0x400302:	mov	rcx, qword ptr [rbp - 0x40]
0x400306:	mov	rbx, qword ptr [rbp - 0x38]
0x40030a:	mov	qword ptr [rax + 0x40], rcx
0x40030e:	mov	qword ptr [rax + 0x48], rbx
0x400312:	mov	rcx, qword ptr [rbp - 0x30]
0x400316:	mov	rbx, qword ptr [rbp - 0x28]
0x40031a:	mov	qword ptr [rax + 0x50], rcx
0x40031e:	mov	qword ptr [rax + 0x58], rbx
0x400322:	mov	edx, dword ptr [rbp - 0x20]
0x400325:	mov	dword ptr [rax + 0x60], edx
0x400328:	mov	rax, qword ptr [rbp - 0x98]
0x40032f:	add	rax, 0x63
0x400333:	mov	byte ptr [rax], 0
0x400336:	mov	rax, qword ptr [rbp - 0x98]
0x40033d:	mov	rdi, rax
0x400340:	call	0x500020
<Block for 0x4002a2, 22 bytes>
0x4002a2:	lea	rax, [rbp - 0x80]
0x4002a6:	mov	edx, 0x63
0x4002ab:	mov	esi, 0x43
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x500018
<Block for 0x400345, 16 bytes>
0x400345:	nop	
0x400346:	mov	rax, qword ptr [rbp - 0x18]
0x40034a:	xor	rax, qword ptr fs:[0x28]
0x400353:	je	0x40035a
<Block for 0x40035a, 10 bytes>
0x40035a:	add	rsp, 0x98
0x400361:	pop	rbx
0x400362:	pop	rbp
0x400363:	ret	
<Block for 0x400355, 5 bytes>
0x400355:	call	0x500028
