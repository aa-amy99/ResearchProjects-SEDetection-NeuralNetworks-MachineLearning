<Block for 0x40038d, 44 bytes>
0x40038d:	endbr64	
0x400391:	push	rbp
0x400392:	mov	rbp, rsp
0x400395:	sub	rsp, 0x40
0x400399:	mov	rax, qword ptr fs:[0x28]
0x4003a2:	mov	qword ptr [rbp - 8], rax
0x4003a6:	xor	eax, eax
0x4003a8:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4003af:	mov	eax, dword ptr [rbp - 0x34]
0x4003b2:	mov	edi, eax
0x4003b4:	call	0x400284
<Block for 0x4003b9, 49 bytes>
0x4003b9:	mov	dword ptr [rbp - 0x34], eax
0x4003bc:	mov	qword ptr [rbp - 0x30], 0
0x4003c4:	mov	qword ptr [rbp - 0x28], 0
0x4003cc:	mov	qword ptr [rbp - 0x20], 0
0x4003d4:	mov	qword ptr [rbp - 0x18], 0
0x4003dc:	mov	qword ptr [rbp - 0x10], 0
0x4003e4:	cmp	dword ptr [rbp - 0x34], 0
0x4003e8:	js	0x400422
<Block for 0x400422, 12 bytes>
0x400422:	lea	rdi, [rip + 0x6f]
0x400429:	call	0x500050
<Block for 0x4003ea, 6 bytes>
0x4003ea:	cmp	dword ptr [rbp - 0x34], 9
0x4003ee:	jg	0x400422
<Block for 0x40042e, 16 bytes>
0x40042e:	nop	
0x40042f:	mov	rax, qword ptr [rbp - 8]
0x400433:	xor	rax, qword ptr fs:[0x28]
0x40043c:	je	0x400443
<Block for 0x4003f0, 22 bytes>
0x4003f0:	mov	eax, dword ptr [rbp - 0x34]
0x4003f3:	cdqe	
0x4003f5:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4003fd:	mov	dword ptr [rbp - 0x38], 0
0x400404:	jmp	0x40041a
<Block for 0x400443, 2 bytes>
0x400443:	leave	
0x400444:	ret	
<Block for 0x40043e, 5 bytes>
0x40043e:	call	0x500040
<Block for 0x40041a, 6 bytes>
0x40041a:	cmp	dword ptr [rbp - 0x38], 9
0x40041e:	jle	0x400406
<Block for 0x400406, 16 bytes>
0x400406:	mov	eax, dword ptr [rbp - 0x38]
0x400409:	cdqe	
0x40040b:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40040f:	mov	edi, eax
0x400411:	call	0x500048
<Block for 0x400420, 2 bytes>
0x400420:	jmp	0x40042e
<Block for 0x400416, 10 bytes>
0x400416:	add	dword ptr [rbp - 0x38], 1
0x40041a:	cmp	dword ptr [rbp - 0x38], 9
0x40041e:	jle	0x400406
