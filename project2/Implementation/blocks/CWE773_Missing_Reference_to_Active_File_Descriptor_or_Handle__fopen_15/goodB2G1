<Block for 0x400059, 39 bytes>
0x400059:	endbr64	
0x40005d:	push	rbp
0x40005e:	mov	rbp, rsp
0x400061:	sub	rsp, 0x10
0x400065:	mov	qword ptr [rbp - 8], 0
0x40006d:	lea	rsi, [rip + 0xdc]
0x400074:	lea	rdi, [rip + 0xd8]
0x40007b:	call	0x500000
<Block for 0x400080, 11 bytes>
0x400080:	mov	qword ptr [rbp - 8], rax
0x400084:	cmp	qword ptr [rbp - 8], 0
0x400089:	je	0x400097
<Block for 0x400097, 19 bytes>
0x400097:	lea	rsi, [rip + 0xb2]
0x40009e:	lea	rdi, [rip + 0xd4]
0x4000a5:	call	0x500000
<Block for 0x40008b, 12 bytes>
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	mov	rdi, rax
0x400092:	call	0x500008
<Block for 0x4000aa, 11 bytes>
0x4000aa:	mov	qword ptr [rbp - 8], rax
0x4000ae:	cmp	qword ptr [rbp - 8], 0
0x4000b3:	je	0x4000c1
<Block for 0x4000c1, 4 bytes>
0x4000c1:	nop	
0x4000c2:	nop	
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x4000b5, 12 bytes>
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500008
