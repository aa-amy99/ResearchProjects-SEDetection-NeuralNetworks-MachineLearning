<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002c6
<Block for 0x400028, 38 bytes>
0x400028:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40002f:	mov	rax, qword ptr [rip + 0xfffca]
0x400036:	lea	rdx, [rbp - 0x54]
0x40003a:	lea	rsi, [rip + 0x1ec]
0x400041:	mov	rdi, rax
0x400044:	mov	eax, 0
0x400049:	call	0x500008
<Block for 0x40004e, 19 bytes>
0x40004e:	lea	rdx, [rbp - 0x54]
0x400052:	lea	rax, [rbp - 0x50]
0x400056:	mov	rsi, rdx
0x400059:	mov	rdi, rax
0x40005c:	call	0x4003bc
<Block for 0x400061, 19 bytes>
0x400061:	lea	rdx, [rbp - 0x54]
0x400065:	lea	rax, [rbp - 0x50]
0x400069:	mov	rsi, rdx
0x40006c:	mov	rdi, rax
0x40006f:	call	0x4003bc
<Block for 0x400074, 19 bytes>
0x400074:	lea	rdx, [rbp - 0x54]
0x400078:	lea	rax, [rbp - 0x50]
0x40007c:	mov	rsi, rdx
0x40007f:	mov	rdi, rax
0x400082:	call	0x4003bc
<Block for 0x400087, 19 bytes>
0x400087:	lea	rdx, [rbp - 0x50]
0x40008b:	lea	rax, [rbp - 0x30]
0x40008f:	mov	rsi, rdx
0x400092:	mov	rdi, rax
0x400095:	call	0x4003f6
<Block for 0x40009a, 12 bytes>
0x40009a:	lea	rax, [rbp - 0x30]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500010
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rax, [rbp - 0x30]
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x4002e6
<Block for 0x4000b2, 12 bytes>
0x4000b2:	lea	rax, [rbp - 0x50]
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x4002e6
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 0x18]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x400108
<Block for 0x400108, 7 bytes>
0x400108:	add	rsp, 0x58
0x40010c:	pop	rbx
0x40010d:	pop	rbp
0x40010e:	ret	
<Block for 0x4000ce, 2 bytes>
0x4000ce:	jmp	0x400103
<Block for 0x400103, 5 bytes>
0x400103:	call	0x500020
