<Block for 0x400082, 55 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0xc0
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	lea	rax, [rbp - 0xb0]
0x4000a7:	mov	edx, 0x31
0x4000ac:	mov	esi, 0x41
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500000
<Block for 0x4000b9, 26 bytes>
0x4000b9:	mov	byte ptr [rbp - 0x7f], 0
0x4000bd:	lea	rax, [rbp - 0x70]
0x4000c1:	mov	edx, 0x63
0x4000c6:	mov	esi, 0x41
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500000
<Block for 0x4000d3, 33 bytes>
0x4000d3:	mov	byte ptr [rbp - 0xd], 0
0x4000d7:	lea	rax, [rbp - 0xb0]
0x4000de:	mov	qword ptr [rbp - 0xb8], rax
0x4000e5:	mov	rax, qword ptr [rbp - 0xb8]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x400000
<Block for 0x4000f4, 16 bytes>
0x4000f4:	nop	
0x4000f5:	mov	rax, qword ptr [rbp - 8]
0x4000f9:	xor	rax, qword ptr fs:[0x28]
0x400102:	je	0x400109
<Block for 0x400109, 2 bytes>
0x400109:	leave	
0x40010a:	ret	
<Block for 0x400104, 5 bytes>
0x400104:	call	0x500020
