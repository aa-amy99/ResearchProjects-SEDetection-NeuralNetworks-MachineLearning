<Block for 0x40018d, 55 bytes>
0x40018d:	endbr64	
0x400191:	push	rbp
0x400192:	mov	rbp, rsp
0x400195:	sub	rsp, 0xc0
0x40019c:	mov	rax, qword ptr fs:[0x28]
0x4001a5:	mov	qword ptr [rbp - 8], rax
0x4001a9:	xor	eax, eax
0x4001ab:	lea	rax, [rbp - 0xb0]
0x4001b2:	mov	edx, 0x31
0x4001b7:	mov	esi, 0x41
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x500000
<Block for 0x4001c4, 26 bytes>
0x4001c4:	mov	byte ptr [rbp - 0x7f], 0
0x4001c8:	lea	rax, [rbp - 0x70]
0x4001cc:	mov	edx, 0x63
0x4001d1:	mov	esi, 0x41
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500000
<Block for 0x4001de, 30 bytes>
0x4001de:	mov	byte ptr [rbp - 0xd], 0
0x4001e2:	lea	rax, [rbp - 0x70]
0x4001e6:	mov	qword ptr [rbp - 0xb8], rax
0x4001ed:	mov	rax, qword ptr [rbp - 0xb8]
0x4001f4:	mov	rdi, rax
0x4001f7:	call	0x40010b
<Block for 0x4001fc, 16 bytes>
0x4001fc:	nop	
0x4001fd:	mov	rax, qword ptr [rbp - 8]
0x400201:	xor	rax, qword ptr fs:[0x28]
0x40020a:	je	0x400211
<Block for 0x400211, 2 bytes>
0x400211:	leave	
0x400212:	ret	
<Block for 0x40020c, 5 bytes>
0x40020c:	call	0x500020
