<Block for 0x400150, 36 bytes>
0x400150:	endbr64	
0x400154:	push	rbp
0x400155:	mov	rbp, rsp
0x400158:	sub	rsp, 0x30
0x40015c:	mov	rax, qword ptr fs:[0x28]
0x400165:	mov	qword ptr [rbp - 8], rax
0x400169:	xor	eax, eax
0x40016b:	mov	eax, 1
0x400170:	test	eax, eax
0x400172:	je	0x4001c7
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x400174, 40 bytes>
0x400174:	movabs	rax, 0x6c69662f706d742f
0x40017e:	movabs	rdx, 0x58585858585865
0x400188:	mov	qword ptr [rbp - 0x20], rax
0x40018c:	mov	qword ptr [rbp - 0x18], rdx
0x400190:	lea	rax, [rbp - 0x20]
0x400194:	mov	rdi, rax
0x400197:	call	0x500030
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500028
<Block for 0x40019c, 15 bytes>
0x40019c:	mov	dword ptr [rbp - 0x24], eax
0x40019f:	lea	rax, [rbp - 0x20]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500010
<Block for 0x4001ab, 6 bytes>
0x4001ab:	cmp	dword ptr [rbp - 0x24], -1
0x4001af:	je	0x4001c7
<Block for 0x4001b1, 12 bytes>
0x4001b1:	lea	rdi, [rip + 0x50]
0x4001b8:	call	0x500010
<Block for 0x4001bd, 10 bytes>
0x4001bd:	mov	eax, dword ptr [rbp - 0x24]
0x4001c0:	mov	edi, eax
0x4001c2:	call	0x500020
