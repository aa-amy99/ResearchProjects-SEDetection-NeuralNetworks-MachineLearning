<Block for 0x400464, 37 bytes>
0x400464:	endbr64	
0x400468:	push	rbp
0x400469:	mov	rbp, rsp
0x40046c:	sub	rsp, 0x50
0x400470:	mov	rax, qword ptr fs:[0x28]
0x400479:	mov	qword ptr [rbp - 8], rax
0x40047d:	xor	eax, eax
0x40047f:	mov	edi, 0x64
0x400484:	call	0x500000
<Block for 0x400489, 11 bytes>
0x400489:	mov	qword ptr [rbp - 0x38], rax
0x40048d:	cmp	qword ptr [rbp - 0x38], 0
0x400492:	jne	0x40049e
<Block for 0x400494, 10 bytes>
0x400494:	mov	edi, 0xffffffff
0x400499:	call	0x500008
<Block for 0x40049e, 33 bytes>
0x40049e:	mov	rax, qword ptr [rbp - 0x38]
0x4004a2:	mov	byte ptr [rax], 0
0x4004a5:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4004ac:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4004b3:	mov	rax, qword ptr [rbp - 0x38]
0x4004b7:	mov	rdi, rax
0x4004ba:	call	0x500010
<Block for 0x4004bf, 24 bytes>
0x4004bf:	mov	qword ptr [rbp - 0x30], rax
0x4004c3:	mov	edx, 6
0x4004c8:	mov	esi, 1
0x4004cd:	mov	edi, 2
0x4004d2:	call	0x500018
<Block for 0x4004d7, 13 bytes>
0x4004d7:	mov	dword ptr [rbp - 0x48], eax
0x4004da:	cmp	dword ptr [rbp - 0x48], -1
0x4004de:	je	0x400602
<Block for 0x400602, 3 bytes>
0x400602:	nop	
0x400603:	jmp	0x40060c
<Block for 0x4004e4, 22 bytes>
0x4004e4:	lea	rax, [rbp - 0x20]
0x4004e8:	mov	edx, 0x10
0x4004ed:	mov	esi, 0
0x4004f2:	mov	rdi, rax
0x4004f5:	call	0x500020
<Block for 0x40060c, 6 bytes>
0x40060c:	cmp	dword ptr [rbp - 0x48], -1
0x400610:	je	0x40061c
<Block for 0x4004fa, 23 bytes>
0x4004fa:	mov	word ptr [rbp - 0x20], 2
0x400500:	mov	dword ptr [rbp - 0x1c], 0
0x400507:	mov	edi, 0x6987
0x40050c:	call	0x500028
<Block for 0x40061c, 6 bytes>
0x40061c:	cmp	dword ptr [rbp - 0x4c], -1
0x400620:	je	0x40062c
<Block for 0x400612, 10 bytes>
0x400612:	mov	eax, dword ptr [rbp - 0x48]
0x400615:	mov	edi, eax
0x400617:	call	0x500058
<Block for 0x400511, 26 bytes>
0x400511:	mov	word ptr [rbp - 0x1e], ax
0x400515:	lea	rcx, [rbp - 0x20]
0x400519:	mov	eax, dword ptr [rbp - 0x48]
0x40051c:	mov	edx, 0x10
0x400521:	mov	rsi, rcx
0x400524:	mov	edi, eax
0x400526:	call	0x500030
<Block for 0x40062c, 10 bytes>
0x40062c:	mov	eax, dword ptr [rip + 0x8a]
0x400632:	test	eax, eax
0x400634:	je	0x400683
<Block for 0x400622, 10 bytes>
0x400622:	mov	eax, dword ptr [rbp - 0x4c]
0x400625:	mov	edi, eax
0x400627:	call	0x500058
<Block for 0x40052b, 9 bytes>
0x40052b:	cmp	eax, -1
0x40052e:	je	0x400605
<Block for 0x400683, 16 bytes>
0x400683:	nop	
0x400684:	mov	rax, qword ptr [rbp - 8]
0x400688:	xor	rax, qword ptr fs:[0x28]
0x400691:	je	0x400698
<Block for 0x400636, 10 bytes>
0x400636:	mov	qword ptr [rbp - 0x40], 0
0x40063e:	jmp	0x400665
<Block for 0x400605, 3 bytes>
0x400605:	nop	
0x400606:	jmp	0x40060c
<Block for 0x400534, 15 bytes>
0x400534:	mov	eax, dword ptr [rbp - 0x48]
0x400537:	mov	esi, 5
0x40053c:	mov	edi, eax
0x40053e:	call	0x500038
<Block for 0x400698, 2 bytes>
0x400698:	leave	
0x400699:	ret	
<Block for 0x400693, 5 bytes>
0x400693:	call	0x500070
<Block for 0x400665, 12 bytes>
0x400665:	mov	rax, qword ptr [rbp - 0x38]
0x400669:	mov	rdi, rax
0x40066c:	call	0x500010
<Block for 0x400543, 9 bytes>
0x400543:	cmp	eax, -1
0x400546:	je	0x400608
<Block for 0x400671, 6 bytes>
0x400671:	cmp	qword ptr [rbp - 0x40], rax
0x400675:	jb	0x400640
<Block for 0x400608, 3 bytes>
0x400608:	nop	
0x400609:	jmp	0x40060c
<Block for 0x40054c, 20 bytes>
0x40054c:	mov	eax, dword ptr [rbp - 0x48]
0x40054f:	mov	edx, 0
0x400554:	mov	esi, 0
0x400559:	mov	edi, eax
0x40055b:	call	0x500040
<Block for 0x400640, 18 bytes>
0x400640:	mov	rdx, qword ptr [rbp - 0x38]
0x400644:	mov	rax, qword ptr [rbp - 0x40]
0x400648:	add	rax, rdx
0x40064b:	movzx	eax, byte ptr [rax]
0x40064e:	cmp	al, 0x53
0x400650:	jne	0x400660
<Block for 0x400677, 12 bytes>
0x400677:	mov	rax, qword ptr [rbp - 0x38]
0x40067b:	mov	rdi, rax
0x40067e:	call	0x500068
<Block for 0x400560, 13 bytes>
0x400560:	mov	dword ptr [rbp - 0x4c], eax
0x400563:	cmp	dword ptr [rbp - 0x4c], -1
0x400567:	je	0x40060b
<Block for 0x400652, 12 bytes>
0x400652:	lea	rdi, [rip + 0x6b]
0x400659:	call	0x500060
<Block for 0x400660, 17 bytes>
0x400660:	add	qword ptr [rbp - 0x40], 1
0x400665:	mov	rax, qword ptr [rbp - 0x38]
0x400669:	mov	rdi, rax
0x40066c:	call	0x500010
<Block for 0x40056d, 39 bytes>
0x40056d:	mov	eax, 0x63
0x400572:	sub	rax, qword ptr [rbp - 0x30]
0x400576:	mov	rdx, rax
0x400579:	mov	rcx, qword ptr [rbp - 0x38]
0x40057d:	mov	rax, qword ptr [rbp - 0x30]
0x400581:	lea	rsi, [rcx + rax]
0x400585:	mov	eax, dword ptr [rbp - 0x4c]
0x400588:	mov	ecx, 0
0x40058d:	mov	edi, eax
0x40058f:	call	0x500048
<Block for 0x40060b, 1 bytes>
0x40060b:	nop	
<Block for 0x40065e, 2 bytes>
0x40065e:	jmp	0x400677
<Block for 0x400594, 9 bytes>
0x400594:	mov	dword ptr [rbp - 0x44], eax
0x400597:	cmp	dword ptr [rbp - 0x44], -1
0x40059b:	je	0x40060c
<Block for 0x40059d, 6 bytes>
0x40059d:	cmp	dword ptr [rbp - 0x44], 0
0x4005a1:	je	0x40060c
<Block for 0x4005a3, 40 bytes>
0x4005a3:	mov	eax, dword ptr [rbp - 0x44]
0x4005a6:	movsxd	rdx, eax
0x4005a9:	mov	rax, qword ptr [rbp - 0x30]
0x4005ad:	add	rdx, rax
0x4005b0:	mov	rax, qword ptr [rbp - 0x38]
0x4005b4:	add	rax, rdx
0x4005b7:	mov	byte ptr [rax], 0
0x4005ba:	mov	rax, qword ptr [rbp - 0x38]
0x4005be:	mov	esi, 0xd
0x4005c3:	mov	rdi, rax
0x4005c6:	call	0x500050
<Block for 0x4005cb, 11 bytes>
0x4005cb:	mov	qword ptr [rbp - 0x28], rax
0x4005cf:	cmp	qword ptr [rbp - 0x28], 0
0x4005d4:	je	0x4005dd
<Block for 0x4005dd, 17 bytes>
0x4005dd:	mov	rax, qword ptr [rbp - 0x38]
0x4005e1:	mov	esi, 0xa
0x4005e6:	mov	rdi, rax
0x4005e9:	call	0x500050
<Block for 0x4005d6, 24 bytes>
0x4005d6:	mov	rax, qword ptr [rbp - 0x28]
0x4005da:	mov	byte ptr [rax], 0
0x4005dd:	mov	rax, qword ptr [rbp - 0x38]
0x4005e1:	mov	esi, 0xa
0x4005e6:	mov	rdi, rax
0x4005e9:	call	0x500050
<Block for 0x4005ee, 11 bytes>
0x4005ee:	mov	qword ptr [rbp - 0x28], rax
0x4005f2:	cmp	qword ptr [rbp - 0x28], 0
0x4005f7:	je	0x40060c
<Block for 0x4005f9, 9 bytes>
0x4005f9:	mov	rax, qword ptr [rbp - 0x28]
0x4005fd:	mov	byte ptr [rax], 0
0x400600:	jmp	0x40060c
