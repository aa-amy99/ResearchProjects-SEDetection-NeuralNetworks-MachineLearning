<Block for 0x40002d, 50 bytes>
0x40002d:	endbr64	
0x400031:	push	rbp
0x400032:	mov	rbp, rsp
0x400035:	sub	rsp, 0x20
0x400039:	mov	rax, qword ptr fs:[0x28]
0x400042:	mov	qword ptr [rbp - 8], rax
0x400046:	xor	eax, eax
0x400048:	mov	dword ptr [rbp - 0x10], 0
0x40004f:	mov	dword ptr [rbp - 0xc], 0
0x400056:	mov	dword ptr [rbp - 0x14], 0
0x40005d:	jmp	0x40006f
<Block for 0x40006f, 6 bytes>
0x40006f:	cmp	dword ptr [rbp - 0x14], 0
0x400073:	jle	0x40005f
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rax, [rbp - 0x10]
0x400063:	mov	rdi, rax
0x400066:	call	0x500000
<Block for 0x400075, 16 bytes>
0x400075:	nop	
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	xor	rax, qword ptr fs:[0x28]
0x400083:	je	0x40008a
<Block for 0x40006b, 10 bytes>
0x40006b:	add	dword ptr [rbp - 0x14], 1
0x40006f:	cmp	dword ptr [rbp - 0x14], 0
0x400073:	jle	0x40005f
<Block for 0x40008a, 2 bytes>
0x40008a:	leave	
0x40008b:	ret	
<Block for 0x400085, 5 bytes>
0x400085:	call	0x500008
