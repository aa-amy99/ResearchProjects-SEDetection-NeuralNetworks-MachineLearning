<Block for 0x40007e, 22 bytes>
0x40007e:	endbr64	
0x400082:	push	rbp
0x400083:	mov	rbp, rsp
0x400086:	sub	rsp, 0x20
0x40008a:	mov	eax, 0
0x40008f:	call	0x40000f
<Block for 0x400094, 4 bytes>
0x400094:	test	eax, eax
0x400096:	je	0x4000a6
<Block for 0x4000a6, 10 bytes>
0x4000a6:	mov	edi, 8
0x4000ab:	call	0x500000
<Block for 0x400098, 12 bytes>
0x400098:	lea	rdi, [rip + 0x134]
0x40009f:	call	0x500020
<Block for 0x4000b0, 11 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x18], rax
0x4000b4:	cmp	qword ptr [rbp - 0x18], 0
0x4000b9:	jne	0x4000c5
<Block for 0x4000a4, 2 bytes>
0x4000a4:	jmp	0x40011d
<Block for 0x4000bb, 10 bytes>
0x4000bb:	mov	edi, 0xffffffff
0x4000c0:	call	0x500008
<Block for 0x4000c5, 10 bytes>
0x4000c5:	mov	edi, 4
0x4000ca:	call	0x500000
<Block for 0x40011d, 3 bytes>
0x40011d:	nop	
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x4000cf, 11 bytes>
0x4000cf:	mov	qword ptr [rbp - 0x10], rax
0x4000d3:	cmp	qword ptr [rbp - 0x10], 0
0x4000d8:	jne	0x4000e4
<Block for 0x4000da, 10 bytes>
0x4000da:	mov	edi, 0xffffffff
0x4000df:	call	0x500008
<Block for 0x4000e4, 45 bytes>
0x4000e4:	mov	rax, qword ptr [rbp - 0x10]
0x4000e8:	mov	dword ptr [rax], 5
0x4000ee:	mov	rax, qword ptr [rbp - 0x18]
0x4000f2:	mov	rdx, qword ptr [rbp - 0x10]
0x4000f6:	mov	qword ptr [rax], rdx
0x4000f9:	mov	rax, qword ptr [rbp - 0x18]
0x4000fd:	mov	rax, qword ptr [rax]
0x400100:	mov	qword ptr [rbp - 8], rax
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	mov	eax, dword ptr [rax]
0x40010a:	mov	edi, eax
0x40010c:	call	0x500018
<Block for 0x400111, 12 bytes>
0x400111:	mov	rax, qword ptr [rbp - 0x18]
0x400115:	mov	rdi, rax
0x400118:	call	0x500010
