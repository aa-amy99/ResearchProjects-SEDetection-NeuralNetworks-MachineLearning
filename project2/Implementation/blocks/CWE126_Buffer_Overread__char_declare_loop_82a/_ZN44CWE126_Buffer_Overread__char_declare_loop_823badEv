<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xc8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	edx, 0x31
0x40002b:	mov	esi, 0x41
0x400030:	mov	rdi, rax
0x400033:	call	0x500000
<Block for 0x400038, 29 bytes>
0x400038:	mov	byte ptr [rbp - 0x8f], 0
0x40003f:	lea	rax, [rbp - 0x80]
0x400043:	mov	edx, 0x63
0x400048:	mov	esi, 0x41
0x40004d:	mov	rdi, rax
0x400050:	call	0x500000
<Block for 0x400055, 28 bytes>
0x400055:	mov	byte ptr [rbp - 0x1d], 0
0x400059:	lea	rax, [rbp - 0xc0]
0x400060:	mov	qword ptr [rbp - 0xd0], rax
0x400067:	mov	edi, 8
0x40006c:	call	0x500008
<Block for 0x400071, 11 bytes>
0x400071:	mov	rbx, rax
0x400074:	mov	rdi, rbx
0x400077:	call	0x4001e8
<Block for 0x40007c, 42 bytes>
0x40007c:	mov	qword ptr [rbp - 0xc8], rbx
0x400083:	mov	rax, qword ptr [rbp - 0xc8]
0x40008a:	mov	rax, qword ptr [rax]
0x40008d:	mov	rcx, qword ptr [rax]
0x400090:	mov	rdx, qword ptr [rbp - 0xd0]
0x400097:	mov	rax, qword ptr [rbp - 0xc8]
0x40009e:	mov	rsi, rdx
0x4000a1:	mov	rdi, rax
0x4000a4:	call	rcx
<Block for 0x4000a6, 12 bytes>
0x4000a6:	mov	rax, qword ptr [rbp - 0xc8]
0x4000ad:	test	rax, rax
0x4000b0:	je	0x4000bf
<Block for 0x4000bf, 16 bytes>
0x4000bf:	nop	
0x4000c0:	mov	rax, qword ptr [rbp - 0x18]
0x4000c4:	xor	rax, qword ptr fs:[0x28]
0x4000cd:	je	0x4000d4
<Block for 0x4000b2, 13 bytes>
0x4000b2:	mov	esi, 8
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x4000d4, 10 bytes>
0x4000d4:	add	rsp, 0xc8
0x4000db:	pop	rbx
0x4000dc:	pop	rbp
0x4000dd:	ret	
<Block for 0x4000cf, 5 bytes>
0x4000cf:	call	0x500018
