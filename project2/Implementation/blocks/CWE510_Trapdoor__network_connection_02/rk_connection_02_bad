<Block for 0x400000, 54 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400022:	mov	edx, 6
0x400027:	mov	esi, 1
0x40002c:	mov	edi, 2
0x400031:	call	0x500000
<Block for 0x400036, 9 bytes>
0x400036:	mov	dword ptr [rbp - 0x24], eax
0x400039:	cmp	dword ptr [rbp - 0x24], -1
0x40003d:	je	0x400093
<Block for 0x40003f, 22 bytes>
0x40003f:	lea	rax, [rbp - 0x20]
0x400043:	mov	edx, 0x10
0x400048:	mov	esi, 0
0x40004d:	mov	rdi, rax
0x400050:	call	0x500008
<Block for 0x400093, 1 bytes>
0x400093:	nop	
<Block for 0x400055, 18 bytes>
0x400055:	mov	word ptr [rbp - 0x20], 2
0x40005b:	lea	rdi, [rip + 0x59]
0x400062:	call	0x500010
<Block for 0x400094, 6 bytes>
0x400094:	cmp	dword ptr [rbp - 0x24], -1
0x400098:	je	0x4000a4
<Block for 0x400067, 13 bytes>
0x400067:	mov	dword ptr [rbp - 0x1c], eax
0x40006a:	mov	edi, 0x50
0x40006f:	call	0x500018
<Block for 0x4000a4, 16 bytes>
0x4000a4:	nop	
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	xor	rax, qword ptr fs:[0x28]
0x4000b2:	je	0x4000b9
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	eax, dword ptr [rbp - 0x24]
0x40009d:	mov	edi, eax
0x40009f:	call	0x500028
<Block for 0x400074, 26 bytes>
0x400074:	mov	word ptr [rbp - 0x1e], ax
0x400078:	lea	rcx, [rbp - 0x20]
0x40007c:	mov	eax, dword ptr [rbp - 0x24]
0x40007f:	mov	edx, 0x10
0x400084:	mov	rsi, rcx
0x400087:	mov	edi, eax
0x400089:	call	0x500020
<Block for 0x4000b9, 2 bytes>
0x4000b9:	leave	
0x4000ba:	ret	
<Block for 0x4000b4, 5 bytes>
0x4000b4:	call	0x500030
<Block for 0x40008e, 5 bytes>
0x40008e:	cmp	eax, -1
0x400091:	jmp	0x400094
