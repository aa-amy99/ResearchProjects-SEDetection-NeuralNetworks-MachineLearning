<Block for 0x40008b, 25 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	push	rbx
0x400094:	sub	rsp, 0x18
0x400098:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40009f:	call	0x500018
<Block for 0x4000a4, 7 bytes>
0x4000a4:	and	eax, 1
0x4000a7:	test	eax, eax
0x4000a9:	je	0x4000c8
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500018
<Block for 0x4000ab, 5 bytes>
0x4000ab:	call	0x500018
<Block for 0x4000cd, 10 bytes>
0x4000cd:	shl	eax, 0x1e
0x4000d0:	mov	ebx, eax
0x4000d2:	call	0x500018
<Block for 0x4000b0, 10 bytes>
0x4000b0:	shl	eax, 0x1e
0x4000b3:	mov	ebx, eax
0x4000b5:	call	0x500018
<Block for 0x4000d7, 10 bytes>
0x4000d7:	shl	eax, 0xf
0x4000da:	xor	ebx, eax
0x4000dc:	call	0x500018
<Block for 0x4000ba, 10 bytes>
0x4000ba:	shl	eax, 0xf
0x4000bd:	xor	ebx, eax
0x4000bf:	call	0x500018
<Block for 0x4000e1, 27 bytes>
0x4000e1:	xor	eax, ebx
0x4000e3:	not	eax
0x4000e5:	mov	dword ptr [rbp - 0x14], eax
0x4000e8:	mov	dword ptr [rip + 0x31a], 1
0x4000f2:	mov	eax, dword ptr [rbp - 0x14]
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x400000
<Block for 0x4000c4, 4 bytes>
0x4000c4:	xor	eax, ebx
0x4000c6:	jmp	0x4000e5
<Block for 0x4000fc, 8 bytes>
0x4000fc:	nop	
0x4000fd:	add	rsp, 0x18
0x400101:	pop	rbx
0x400102:	pop	rbp
0x400103:	ret	
<Block for 0x4000e5, 23 bytes>
0x4000e5:	mov	dword ptr [rbp - 0x14], eax
0x4000e8:	mov	dword ptr [rip + 0x31a], 1
0x4000f2:	mov	eax, dword ptr [rbp - 0x14]
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x400000
