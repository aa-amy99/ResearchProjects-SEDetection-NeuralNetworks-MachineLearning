<Block for 0x400326, 40 bytes>
0x400326:	endbr64	
0x40032a:	push	rbp
0x40032b:	mov	rbp, rsp
0x40032e:	sub	rsp, 0x40
0x400332:	mov	dword ptr [rbp - 0x34], edi
0x400335:	mov	rax, qword ptr fs:[0x28]
0x40033e:	mov	qword ptr [rbp - 8], rax
0x400342:	xor	eax, eax
0x400344:	mov	eax, dword ptr [rip + 0xce]
0x40034a:	test	eax, eax
0x40034c:	je	0x40039a
<Block for 0x40039a, 16 bytes>
0x40039a:	nop	
0x40039b:	mov	rax, qword ptr [rbp - 8]
0x40039f:	xor	rax, qword ptr fs:[0x28]
0x4003a8:	je	0x4003af
<Block for 0x40034e, 46 bytes>
0x40034e:	mov	qword ptr [rbp - 0x30], 0
0x400356:	mov	qword ptr [rbp - 0x28], 0
0x40035e:	mov	qword ptr [rbp - 0x20], 0
0x400366:	mov	qword ptr [rbp - 0x18], 0
0x40036e:	mov	qword ptr [rbp - 0x10], 0
0x400376:	cmp	dword ptr [rbp - 0x34], 0
0x40037a:	js	0x40038e
<Block for 0x4003af, 2 bytes>
0x4003af:	leave	
0x4003b0:	ret	
<Block for 0x4003aa, 5 bytes>
0x4003aa:	call	0x500010
<Block for 0x40038e, 12 bytes>
0x40038e:	lea	rdi, [rip + 0x8b]
0x400395:	call	0x500008
<Block for 0x40037c, 16 bytes>
0x40037c:	mov	eax, dword ptr [rbp - 0x34]
0x40037f:	cdqe	
0x400381:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400385:	mov	edi, eax
0x400387:	call	0x500000
<Block for 0x40038c, 2 bytes>
0x40038c:	jmp	0x40039a
