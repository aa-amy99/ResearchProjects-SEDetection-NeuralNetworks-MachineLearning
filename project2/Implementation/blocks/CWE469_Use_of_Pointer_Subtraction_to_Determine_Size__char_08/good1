<Block for 0x4000c1, 37 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	sub	rsp, 0x30
0x4000cd:	mov	rax, qword ptr fs:[0x28]
0x4000d6:	mov	qword ptr [rbp - 8], rax
0x4000da:	xor	eax, eax
0x4000dc:	mov	eax, 0
0x4000e1:	call	0x40000f
<Block for 0x4000e6, 4 bytes>
0x4000e6:	test	eax, eax
0x4000e8:	je	0x4000f8
<Block for 0x4000f8, 38 bytes>
0x4000f8:	movabs	rax, 0x7271706f2f636261
0x400102:	mov	qword ptr [rbp - 0x14], rax
0x400106:	mov	dword ptr [rbp - 0xc], 0x757473
0x40010d:	lea	rax, [rbp - 0x14]
0x400111:	mov	esi, 0x2f
0x400116:	mov	rdi, rax
0x400119:	call	0x500000
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0x12d]
0x4000f1:	call	0x500020
<Block for 0x40011e, 11 bytes>
0x40011e:	mov	qword ptr [rbp - 0x28], rax
0x400122:	cmp	qword ptr [rbp - 0x28], 0
0x400127:	jne	0x400133
<Block for 0x4000f6, 2 bytes>
0x4000f6:	jmp	0x400150
<Block for 0x400129, 10 bytes>
0x400129:	mov	edi, 1
0x40012e:	call	0x500008
<Block for 0x400133, 29 bytes>
0x400133:	lea	rax, [rbp - 0x14]
0x400137:	mov	rdx, qword ptr [rbp - 0x28]
0x40013b:	sub	rdx, rax
0x40013e:	mov	rax, rdx
0x400141:	mov	qword ptr [rbp - 0x20], rax
0x400145:	mov	rax, qword ptr [rbp - 0x20]
0x400149:	mov	edi, eax
0x40014b:	call	0x500010
<Block for 0x400150, 16 bytes>
0x400150:	nop	
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	xor	rax, qword ptr fs:[0x28]
0x40015e:	je	0x400165
<Block for 0x400165, 2 bytes>
0x400165:	leave	
0x400166:	ret	
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500018
