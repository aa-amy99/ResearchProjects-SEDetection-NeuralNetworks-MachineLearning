<Block for 0x4002de, 31 bytes>
0x4002de:	endbr64	
0x4002e2:	push	rbp
0x4002e3:	mov	rbp, rsp
0x4002e6:	sub	rsp, 0x20
0x4002ea:	mov	qword ptr [rbp - 0x18], rdi
0x4002ee:	mov	rax, qword ptr [rbp - 0x18]
0x4002f2:	mov	rax, qword ptr [rax]
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x500000
<Block for 0x4002fd, 19 bytes>
0x4002fd:	mov	qword ptr [rbp - 0x10], rax
0x400301:	mov	eax, 0x64
0x400306:	sub	rax, qword ptr [rbp - 0x10]
0x40030a:	cmp	rax, 1
0x40030e:	jbe	0x40038e
<Block for 0x40038e, 3 bytes>
0x40038e:	nop	
0x40038f:	leave	
0x400390:	ret	
<Block for 0x400310, 19 bytes>
0x400310:	lea	rsi, [rip + 0x1a2]
0x400317:	lea	rdi, [rip + 0x19d]
0x40031e:	call	0x500008
<Block for 0x400323, 11 bytes>
0x400323:	mov	qword ptr [rbp - 8], rax
0x400327:	cmp	qword ptr [rbp - 8], 0
0x40032c:	je	0x40038e
<Block for 0x40032e, 45 bytes>
0x40032e:	mov	rax, qword ptr [rbp - 0x10]
0x400332:	mov	edx, 0x64
0x400337:	sub	edx, eax
0x400339:	mov	eax, edx
0x40033b:	mov	esi, eax
0x40033d:	mov	rax, qword ptr [rbp - 0x18]
0x400341:	mov	rdx, qword ptr [rax]
0x400344:	mov	rax, qword ptr [rbp - 0x10]
0x400348:	lea	rcx, [rdx + rax]
0x40034c:	mov	rax, qword ptr [rbp - 8]
0x400350:	mov	rdx, rax
0x400353:	mov	rdi, rcx
0x400356:	call	0x500010
<Block for 0x40035b, 10 bytes>
0x40035b:	test	rax, rax
0x40035e:	sete	al
0x400361:	test	al, al
0x400363:	je	0x400382
<Block for 0x400382, 12 bytes>
0x400382:	mov	rax, qword ptr [rbp - 8]
0x400386:	mov	rdi, rax
0x400389:	call	0x500020
<Block for 0x400365, 12 bytes>
0x400365:	lea	rdi, [rip + 0x15d]
0x40036c:	call	0x500018
<Block for 0x400371, 29 bytes>
0x400371:	mov	rax, qword ptr [rbp - 0x18]
0x400375:	mov	rdx, qword ptr [rax]
0x400378:	mov	rax, qword ptr [rbp - 0x10]
0x40037c:	add	rax, rdx
0x40037f:	mov	byte ptr [rax], 0
0x400382:	mov	rax, qword ptr [rbp - 8]
0x400386:	mov	rdi, rax
0x400389:	call	0x500020
