<Block for 0x4000f1, 37 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	add	rsp, -0x80
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	eax, 0
0x400111:	call	0x40000f
<Block for 0x400116, 4 bytes>
0x400116:	test	eax, eax
0x400118:	je	0x40012b
<Block for 0x40012b, 143 bytes>
0x40012b:	mov	qword ptr [rbp - 0x70], 0
0x400133:	mov	qword ptr [rbp - 0x68], 0
0x40013b:	mov	qword ptr [rbp - 0x60], 0
0x400143:	mov	qword ptr [rbp - 0x58], 0
0x40014b:	mov	qword ptr [rbp - 0x50], 0
0x400153:	mov	qword ptr [rbp - 0x48], 0
0x40015b:	mov	qword ptr [rbp - 0x40], 0
0x400163:	mov	qword ptr [rbp - 0x38], 0
0x40016b:	mov	qword ptr [rbp - 0x30], 0
0x400173:	mov	qword ptr [rbp - 0x28], 0
0x40017b:	mov	qword ptr [rbp - 0x20], 0
0x400183:	mov	qword ptr [rbp - 0x18], 0
0x40018b:	mov	dword ptr [rbp - 0x10], 0
0x400192:	lea	rax, [rbp - 0x70]
0x400196:	mov	qword ptr [rbp - 0x78], rax
0x40019a:	mov	rdx, qword ptr [rip + 0xffe5f]
0x4001a1:	mov	rax, qword ptr [rbp - 0x78]
0x4001a5:	mov	rcx, rdx
0x4001a8:	mov	edx, 0x63
0x4001ad:	mov	esi, 1
0x4001b2:	mov	rdi, rax
0x4001b5:	call	0x500008
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rdi, [rip + 0x1c6]
0x400121:	call	0x500018
<Block for 0x4001ba, 6 bytes>
0x4001ba:	cmp	rax, 0x63
0x4001be:	je	0x4001cc
<Block for 0x400126, 5 bytes>
0x400126:	jmp	0x4001cc
<Block for 0x4001cc, 16 bytes>
0x4001cc:	nop	
0x4001cd:	mov	rax, qword ptr [rbp - 8]
0x4001d1:	xor	rax, qword ptr fs:[0x28]
0x4001da:	je	0x4001e1
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rdi, [rip + 0x135]
0x4001c7:	call	0x500018
<Block for 0x4001e1, 2 bytes>
0x4001e1:	leave	
0x4001e2:	ret	
<Block for 0x4001dc, 5 bytes>
0x4001dc:	call	0x500010
