<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xc8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x40033e
<Block for 0x40002e, 22 bytes>
0x40002e:	lea	rax, [rbp - 0x80]
0x400032:	mov	edx, 0x63
0x400037:	mov	esi, 0x41
0x40003c:	mov	rdi, rax
0x40003f:	call	0x500000
<Block for 0x400044, 44 bytes>
0x400044:	mov	byte ptr [rbp - 0x1d], 0
0x400048:	lea	rax, [rbp - 0x80]
0x40004c:	sub	rax, 8
0x400050:	mov	qword ptr [rbp - 0xc8], rax
0x400057:	lea	rdx, [rbp - 0xc8]
0x40005e:	lea	rax, [rbp - 0xc0]
0x400065:	mov	rsi, rdx
0x400068:	mov	rdi, rax
0x40006b:	call	0x400434
<Block for 0x400070, 25 bytes>
0x400070:	lea	rdx, [rbp - 0xc8]
0x400077:	lea	rax, [rbp - 0xc0]
0x40007e:	mov	rsi, rdx
0x400081:	mov	rdi, rax
0x400084:	call	0x400434
<Block for 0x400089, 25 bytes>
0x400089:	lea	rdx, [rbp - 0xc8]
0x400090:	lea	rax, [rbp - 0xc0]
0x400097:	mov	rsi, rdx
0x40009a:	mov	rdi, rax
0x40009d:	call	0x400434
<Block for 0x4000a2, 25 bytes>
0x4000a2:	lea	rdx, [rbp - 0xc0]
0x4000a9:	lea	rax, [rbp - 0xa0]
0x4000b0:	mov	rsi, rdx
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x40046e
<Block for 0x4000bb, 15 bytes>
0x4000bb:	lea	rax, [rbp - 0xa0]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
<Block for 0x4000ca, 15 bytes>
0x4000ca:	lea	rax, [rbp - 0xa0]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x40035e
<Block for 0x4000d9, 15 bytes>
0x4000d9:	lea	rax, [rbp - 0xc0]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x40035e
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 0x18]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x400138
<Block for 0x400138, 10 bytes>
0x400138:	add	rsp, 0xc8
0x40013f:	pop	rbx
0x400140:	pop	rbp
0x400141:	ret	
<Block for 0x4000f8, 2 bytes>
0x4000f8:	jmp	0x400133
<Block for 0x400133, 5 bytes>
0x400133:	call	0x500018
