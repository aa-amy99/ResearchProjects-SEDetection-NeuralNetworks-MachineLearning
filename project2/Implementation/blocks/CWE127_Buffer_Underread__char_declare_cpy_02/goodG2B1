<Block for 0x4000ac, 55 bytes>
0x4000ac:	endbr64	
0x4000b0:	push	rbp
0x4000b1:	mov	rbp, rsp
0x4000b4:	sub	rsp, 0x150
0x4000bb:	mov	rax, qword ptr fs:[0x28]
0x4000c4:	mov	qword ptr [rbp - 8], rax
0x4000c8:	xor	eax, eax
0x4000ca:	lea	rax, [rbp - 0x140]
0x4000d1:	mov	edx, 0x63
0x4000d6:	mov	esi, 0x41
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 46 bytes>
0x4000e3:	mov	byte ptr [rbp - 0xdd], 0
0x4000ea:	lea	rax, [rbp - 0x140]
0x4000f1:	mov	qword ptr [rbp - 0x148], rax
0x4000f8:	lea	rax, [rbp - 0xd0]
0x4000ff:	mov	edx, 0xc7
0x400104:	mov	esi, 0x43
0x400109:	mov	rdi, rax
0x40010c:	call	0x500000
<Block for 0x400111, 29 bytes>
0x400111:	mov	byte ptr [rbp - 9], 0
0x400115:	mov	rdx, qword ptr [rbp - 0x148]
0x40011c:	lea	rax, [rbp - 0xd0]
0x400123:	mov	rsi, rdx
0x400126:	mov	rdi, rax
0x400129:	call	0x500008
<Block for 0x40012e, 15 bytes>
0x40012e:	lea	rax, [rbp - 0xd0]
0x400135:	mov	rdi, rax
0x400138:	call	0x500010
<Block for 0x40013d, 16 bytes>
0x40013d:	nop	
0x40013e:	mov	rax, qword ptr [rbp - 8]
0x400142:	xor	rax, qword ptr fs:[0x28]
0x40014b:	je	0x400152
<Block for 0x400152, 2 bytes>
0x400152:	leave	
0x400153:	ret	
<Block for 0x40014d, 5 bytes>
0x40014d:	call	0x500018
