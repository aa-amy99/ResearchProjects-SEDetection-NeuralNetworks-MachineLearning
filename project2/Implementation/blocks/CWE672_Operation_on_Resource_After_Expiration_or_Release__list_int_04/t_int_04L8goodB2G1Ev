<Block for 0x400177, 40 bytes>
0x400177:	endbr64	
0x40017b:	push	rbp
0x40017c:	mov	rbp, rsp
0x40017f:	push	rbx
0x400180:	sub	rsp, 0x38
0x400184:	mov	rax, qword ptr fs:[0x28]
0x40018d:	mov	qword ptr [rbp - 0x18], rax
0x400191:	xor	eax, eax
0x400193:	lea	rax, [rbp - 0x30]
0x400197:	mov	rdi, rax
0x40019a:	call	0x40085c
<Block for 0x40019f, 26 bytes>
0x40019f:	mov	dword ptr [rbp - 0x38], 0x64
0x4001a6:	lea	rdx, [rbp - 0x38]
0x4001aa:	lea	rax, [rbp - 0x30]
0x4001ae:	mov	rsi, rdx
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x400962
<Block for 0x4001b9, 26 bytes>
0x4001b9:	mov	dword ptr [rbp - 0x38], 0
0x4001c0:	lea	rdx, [rbp - 0x38]
0x4001c4:	lea	rax, [rbp - 0x30]
0x4001c8:	mov	rsi, rdx
0x4001cb:	mov	rdi, rax
0x4001ce:	call	0x400962
<Block for 0x4001d3, 12 bytes>
0x4001d3:	lea	rax, [rbp - 0x40]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x4009b0
<Block for 0x4001df, 19 bytes>
0x4001df:	lea	rsi, [rip + 0x5ca]
0x4001e6:	lea	rdi, [rip + 0xffe13]
0x4001ed:	call	0x500008
<Block for 0x4001f2, 12 bytes>
0x4001f2:	lea	rax, [rbp - 0x30]
0x4001f6:	mov	rdi, rax
0x4001f9:	call	0x4009ca
<Block for 0x4001fe, 16 bytes>
0x4001fe:	mov	qword ptr [rbp - 0x40], rax
0x400202:	lea	rax, [rbp - 0x30]
0x400206:	mov	rdi, rax
0x400209:	call	0x400a1a
<Block for 0x40020e, 23 bytes>
0x40020e:	mov	qword ptr [rbp - 0x38], rax
0x400212:	lea	rdx, [rbp - 0x38]
0x400216:	lea	rax, [rbp - 0x40]
0x40021a:	mov	rsi, rdx
0x40021d:	mov	rdi, rax
0x400220:	call	0x400a66
<Block for 0x400225, 4 bytes>
0x400225:	test	al, al
0x400227:	je	0x40026a
<Block for 0x40026a, 22 bytes>
0x40026a:	mov	rax, qword ptr [rip + 0xffdaf]
0x400271:	mov	rsi, rax
0x400274:	lea	rdi, [rip + 0xffd85]
0x40027b:	call	0x500028
<Block for 0x400229, 19 bytes>
0x400229:	lea	rsi, [rip + 0x594]
0x400230:	lea	rdi, [rip + 0xffdc9]
0x400237:	call	0x500008
<Block for 0x400280, 12 bytes>
0x400280:	lea	rax, [rbp - 0x30]
0x400284:	mov	rdi, rax
0x400287:	call	0x40087c
<Block for 0x40023c, 15 bytes>
0x40023c:	mov	rbx, rax
0x40023f:	lea	rax, [rbp - 0x40]
0x400243:	mov	rdi, rax
0x400246:	call	0x400ae4
<Block for 0x40028c, 16 bytes>
0x40028c:	nop	
0x40028d:	mov	rax, qword ptr [rbp - 0x18]
0x400291:	xor	rax, qword ptr fs:[0x28]
0x40029a:	je	0x4002c1
<Block for 0x40024b, 12 bytes>
0x40024b:	mov	eax, dword ptr [rax]
0x40024d:	mov	esi, eax
0x40024f:	mov	rdi, rbx
0x400252:	call	0x500010
<Block for 0x4002c1, 7 bytes>
0x4002c1:	add	rsp, 0x38
0x4002c5:	pop	rbx
0x4002c6:	pop	rbp
0x4002c7:	ret	
<Block for 0x40029c, 2 bytes>
0x40029c:	jmp	0x4002bc
<Block for 0x400257, 17 bytes>
0x400257:	lea	rax, [rbp - 0x40]
0x40025b:	mov	esi, 0
0x400260:	mov	rdi, rax
0x400263:	call	0x400a8c
<Block for 0x4002bc, 5 bytes>
0x4002bc:	call	0x500038
<Block for 0x400268, 2 bytes>
0x400268:	jmp	0x400202
<Block for 0x400202, 12 bytes>
0x400202:	lea	rax, [rbp - 0x30]
0x400206:	mov	rdi, rax
0x400209:	call	0x400a1a
