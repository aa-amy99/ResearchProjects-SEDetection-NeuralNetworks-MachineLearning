<Block for 0x400086, 25 bytes>
0x400086:	endbr64	
0x40008a:	push	rbp
0x40008b:	mov	rbp, rsp
0x40008e:	sub	rsp, 0x10
0x400092:	mov	qword ptr [rbp - 8], 0
0x40009a:	call	0x500000
<Block for 0x40009f, 9 bytes>
0x40009f:	test	eax, eax
0x4000a1:	setne	al
0x4000a4:	test	al, al
0x4000a6:	je	0x4000d5
<Block for 0x4000d5, 10 bytes>
0x4000d5:	mov	edi, 1
0x4000da:	call	0x500008
<Block for 0x4000a8, 10 bytes>
0x4000a8:	mov	edi, 1
0x4000ad:	call	0x500008
<Block for 0x4000df, 20 bytes>
0x4000df:	mov	qword ptr [rbp - 8], rax
0x4000e3:	mov	rax, qword ptr [rbp - 8]
0x4000e7:	mov	byte ptr [rax], 0x41
0x4000ea:	mov	rax, qword ptr [rbp - 8]
0x4000ee:	test	rax, rax
0x4000f1:	je	0x400100
<Block for 0x4000b2, 20 bytes>
0x4000b2:	mov	qword ptr [rbp - 8], rax
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	mov	byte ptr [rax], 0x41
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	test	rax, rax
0x4000c4:	je	0x400100
<Block for 0x400100, 5 bytes>
0x400100:	call	0x500000
<Block for 0x4000f3, 13 bytes>
0x4000f3:	mov	esi, 1
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500010
<Block for 0x4000c6, 13 bytes>
0x4000c6:	mov	esi, 1
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500010
<Block for 0x400105, 5 bytes>
0x400105:	test	eax, eax
0x400107:	nop	
0x400108:	leave	
0x400109:	ret	
<Block for 0x4000d3, 2 bytes>
0x4000d3:	jmp	0x400100
