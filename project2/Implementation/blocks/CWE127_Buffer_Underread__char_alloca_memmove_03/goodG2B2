<Block for 0x400248, 81 bytes>
0x400248:	endbr64	
0x40024c:	push	rbp
0x40024d:	mov	rbp, rsp
0x400250:	add	rsp, -0x80
0x400254:	mov	rax, qword ptr fs:[0x28]
0x40025d:	mov	qword ptr [rbp - 8], rax
0x400261:	xor	eax, eax
0x400263:	mov	eax, 0x10
0x400268:	sub	rax, 1
0x40026c:	add	rax, 0x6c
0x400270:	mov	esi, 0x10
0x400275:	mov	edx, 0
0x40027a:	div	rsi
0x40027d:	imul	rax, rax, 0x10
0x400281:	mov	rdx, rax
0x400284:	and	rdx, 0xfffffffffffff000
0x40028b:	mov	rcx, rsp
0x40028e:	sub	rcx, rdx
0x400291:	mov	rdx, rcx
0x400294:	cmp	rsp, rdx
0x400297:	je	0x4002ab
<Block for 0x4002ab, 26 bytes>
0x4002ab:	mov	rdx, rax
0x4002ae:	and	edx, 0xfff
0x4002b4:	sub	rsp, rdx
0x4002b7:	mov	rdx, rax
0x4002ba:	and	edx, 0xfff
0x4002c0:	test	rdx, rdx
0x4002c3:	je	0x4002d5
<Block for 0x400299, 18 bytes>
0x400299:	sub	rsp, 0x1000
0x4002a0:	or	qword ptr [rsp + 0xff8], 0
0x4002a9:	jmp	0x400294
<Block for 0x4002d5, 41 bytes>
0x4002d5:	mov	rax, rsp
0x4002d8:	add	rax, 0xf
0x4002dc:	shr	rax, 4
0x4002e0:	shl	rax, 4
0x4002e4:	mov	qword ptr [rbp - 0x80], rax
0x4002e8:	mov	rax, qword ptr [rbp - 0x80]
0x4002ec:	mov	edx, 0x63
0x4002f1:	mov	esi, 0x41
0x4002f6:	mov	rdi, rax
0x4002f9:	call	0x500000
<Block for 0x4002c5, 57 bytes>
0x4002c5:	and	eax, 0xfff
0x4002ca:	sub	rax, 8
0x4002ce:	add	rax, rsp
0x4002d1:	or	qword ptr [rax], 0
0x4002d5:	mov	rax, rsp
0x4002d8:	add	rax, 0xf
0x4002dc:	shr	rax, 4
0x4002e0:	shl	rax, 4
0x4002e4:	mov	qword ptr [rbp - 0x80], rax
0x4002e8:	mov	rax, qword ptr [rbp - 0x80]
0x4002ec:	mov	edx, 0x63
0x4002f1:	mov	esi, 0x41
0x4002f6:	mov	rdi, rax
0x4002f9:	call	0x500000
<Block for 0x400294, 5 bytes>
0x400294:	cmp	rsp, rdx
0x400297:	je	0x4002ab
<Block for 0x4002fe, 41 bytes>
0x4002fe:	mov	rax, qword ptr [rbp - 0x80]
0x400302:	add	rax, 0x63
0x400306:	mov	byte ptr [rax], 0
0x400309:	mov	rax, qword ptr [rbp - 0x80]
0x40030d:	mov	qword ptr [rbp - 0x78], rax
0x400311:	lea	rax, [rbp - 0x70]
0x400315:	mov	edx, 0x63
0x40031a:	mov	esi, 0x43
0x40031f:	mov	rdi, rax
0x400322:	call	0x500000
<Block for 0x400327, 28 bytes>
0x400327:	mov	byte ptr [rbp - 0xd], 0
0x40032b:	mov	rcx, qword ptr [rbp - 0x78]
0x40032f:	lea	rax, [rbp - 0x70]
0x400333:	mov	edx, 0x64
0x400338:	mov	rsi, rcx
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500008
<Block for 0x400343, 16 bytes>
0x400343:	mov	byte ptr [rbp - 0xd], 0
0x400347:	lea	rax, [rbp - 0x70]
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500010
<Block for 0x400353, 16 bytes>
0x400353:	nop	
0x400354:	mov	rax, qword ptr [rbp - 8]
0x400358:	xor	rax, qword ptr fs:[0x28]
0x400361:	je	0x400368
<Block for 0x400368, 2 bytes>
0x400368:	leave	
0x400369:	ret	
<Block for 0x400363, 5 bytes>
0x400363:	call	0x500018
