<Block for 0x4000cc, 26 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x20
0x4000d8:	mov	qword ptr [rbp - 0x18], rdi
0x4000dc:	mov	eax, dword ptr [rip + 0xfff46]
0x4000e2:	test	eax, eax
0x4000e4:	je	0x400133
<Block for 0x400133, 3 bytes>
0x400133:	nop	
0x400134:	leave	
0x400135:	ret	
<Block for 0x4000e6, 10 bytes>
0x4000e6:	mov	qword ptr [rbp - 8], 0
0x4000ee:	jmp	0x400115
<Block for 0x400115, 12 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x18]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500020
<Block for 0x400121, 6 bytes>
0x400121:	cmp	qword ptr [rbp - 8], rax
0x400125:	jb	0x4000f0
<Block for 0x4000f0, 18 bytes>
0x4000f0:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	add	rax, rdx
0x4000fb:	movzx	eax, byte ptr [rax]
0x4000fe:	cmp	al, 0x53
0x400100:	jne	0x400110
<Block for 0x400127, 12 bytes>
0x400127:	mov	rax, qword ptr [rbp - 0x18]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500010
<Block for 0x400102, 12 bytes>
0x400102:	lea	rdi, [rip + 0x2d]
0x400109:	call	0x500008
<Block for 0x400110, 17 bytes>
0x400110:	add	qword ptr [rbp - 8], 1
0x400115:	mov	rax, qword ptr [rbp - 0x18]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500020
<Block for 0x40010e, 2 bytes>
0x40010e:	jmp	0x400127
