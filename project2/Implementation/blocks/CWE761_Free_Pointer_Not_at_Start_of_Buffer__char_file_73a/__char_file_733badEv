<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x40042c
<Block for 0x400028, 10 bytes>
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 13 bytes>
0x400032:	mov	qword ptr [rbp - 0x68], rax
0x400036:	mov	rax, qword ptr [rbp - 0x68]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 19 bytes>
0x400049:	mov	rax, qword ptr [rbp - 0x68]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 0x68]
0x400054:	mov	rdi, rax
0x400057:	call	0x500010
<Block for 0x40005c, 19 bytes>
0x40005c:	mov	qword ptr [rbp - 0x60], rax
0x400060:	mov	eax, 0x64
0x400065:	sub	rax, qword ptr [rbp - 0x60]
0x400069:	cmp	rax, 1
0x40006d:	jbe	0x4000e7
<Block for 0x4000e7, 19 bytes>
0x4000e7:	lea	rdx, [rbp - 0x68]
0x4000eb:	lea	rax, [rbp - 0x50]
0x4000ef:	mov	rsi, rdx
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x400524
<Block for 0x40006f, 19 bytes>
0x40006f:	lea	rsi, [rip + 0x301]
0x400076:	lea	rdi, [rip + 0x2fc]
0x40007d:	call	0x500018
<Block for 0x4000fa, 19 bytes>
0x4000fa:	lea	rdx, [rbp - 0x68]
0x4000fe:	lea	rax, [rbp - 0x50]
0x400102:	mov	rsi, rdx
0x400105:	mov	rdi, rax
0x400108:	call	0x400524
<Block for 0x400082, 11 bytes>
0x400082:	mov	qword ptr [rbp - 0x58], rax
0x400086:	cmp	qword ptr [rbp - 0x58], 0
0x40008b:	je	0x4000e7
<Block for 0x40010d, 19 bytes>
0x40010d:	lea	rdx, [rbp - 0x68]
0x400111:	lea	rax, [rbp - 0x50]
0x400115:	mov	rsi, rdx
0x400118:	mov	rdi, rax
0x40011b:	call	0x400524
<Block for 0x40008d, 42 bytes>
0x40008d:	mov	rax, qword ptr [rbp - 0x60]
0x400091:	mov	edx, 0x64
0x400096:	sub	edx, eax
0x400098:	mov	eax, edx
0x40009a:	mov	esi, eax
0x40009c:	mov	rdx, qword ptr [rbp - 0x68]
0x4000a0:	mov	rax, qword ptr [rbp - 0x60]
0x4000a4:	lea	rcx, [rdx + rax]
0x4000a8:	mov	rax, qword ptr [rbp - 0x58]
0x4000ac:	mov	rdx, rax
0x4000af:	mov	rdi, rcx
0x4000b2:	call	0x500020
<Block for 0x400120, 19 bytes>
0x400120:	lea	rdx, [rbp - 0x50]
0x400124:	lea	rax, [rbp - 0x30]
0x400128:	mov	rsi, rdx
0x40012b:	mov	rdi, rax
0x40012e:	call	0x40055e
<Block for 0x4000b7, 10 bytes>
0x4000b7:	test	rax, rax
0x4000ba:	sete	al
0x4000bd:	test	al, al
0x4000bf:	je	0x4000db
<Block for 0x400133, 12 bytes>
0x400133:	lea	rax, [rbp - 0x30]
0x400137:	mov	rdi, rax
0x40013a:	call	0x500038
<Block for 0x4000db, 12 bytes>
0x4000db:	mov	rax, qword ptr [rbp - 0x58]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500030
<Block for 0x4000c1, 12 bytes>
0x4000c1:	lea	rdi, [rip + 0x2bf]
0x4000c8:	call	0x500028
<Block for 0x40013f, 12 bytes>
0x40013f:	lea	rax, [rbp - 0x30]
0x400143:	mov	rdi, rax
0x400146:	call	0x40044c
<Block for 0x4000cd, 26 bytes>
0x4000cd:	mov	rdx, qword ptr [rbp - 0x68]
0x4000d1:	mov	rax, qword ptr [rbp - 0x60]
0x4000d5:	add	rax, rdx
0x4000d8:	mov	byte ptr [rax], 0
0x4000db:	mov	rax, qword ptr [rbp - 0x58]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500030
<Block for 0x40014b, 12 bytes>
0x40014b:	lea	rax, [rbp - 0x50]
0x40014f:	mov	rdi, rax
0x400152:	call	0x40044c
<Block for 0x400157, 16 bytes>
0x400157:	nop	
0x400158:	mov	rax, qword ptr [rbp - 0x18]
0x40015c:	xor	rax, qword ptr fs:[0x28]
0x400165:	je	0x4001a1
<Block for 0x4001a1, 7 bytes>
0x4001a1:	add	rsp, 0x68
0x4001a5:	pop	rbx
0x4001a6:	pop	rbp
0x4001a7:	ret	
<Block for 0x400167, 2 bytes>
0x400167:	jmp	0x40019c
<Block for 0x40019c, 5 bytes>
0x40019c:	call	0x500048
