<Block for 0x4001a8, 40 bytes>
0x4001a8:	endbr64	
0x4001ac:	push	rbp
0x4001ad:	mov	rbp, rsp
0x4001b0:	push	rbx
0x4001b1:	sub	rsp, 0x68
0x4001b5:	mov	rax, qword ptr fs:[0x28]
0x4001be:	mov	qword ptr [rbp - 0x18], rax
0x4001c2:	xor	eax, eax
0x4001c4:	lea	rax, [rbp - 0x50]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x40042c
<Block for 0x4001d0, 10 bytes>
0x4001d0:	mov	edi, 0x64
0x4001d5:	call	0x500000
<Block for 0x4001da, 13 bytes>
0x4001da:	mov	qword ptr [rbp - 0x68], rax
0x4001de:	mov	rax, qword ptr [rbp - 0x68]
0x4001e2:	test	rax, rax
0x4001e5:	jne	0x4001f1
<Block for 0x4001e7, 10 bytes>
0x4001e7:	mov	edi, 0xffffffff
0x4001ec:	call	0x500008
<Block for 0x4001f1, 19 bytes>
0x4001f1:	mov	rax, qword ptr [rbp - 0x68]
0x4001f5:	mov	byte ptr [rax], 0
0x4001f8:	mov	rax, qword ptr [rbp - 0x68]
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500010
<Block for 0x400204, 19 bytes>
0x400204:	mov	qword ptr [rbp - 0x60], rax
0x400208:	mov	eax, 0x64
0x40020d:	sub	rax, qword ptr [rbp - 0x60]
0x400211:	cmp	rax, 1
0x400215:	jbe	0x40028f
<Block for 0x40028f, 19 bytes>
0x40028f:	lea	rdx, [rbp - 0x68]
0x400293:	lea	rax, [rbp - 0x50]
0x400297:	mov	rsi, rdx
0x40029a:	mov	rdi, rax
0x40029d:	call	0x400524
<Block for 0x400217, 19 bytes>
0x400217:	lea	rsi, [rip + 0x159]
0x40021e:	lea	rdi, [rip + 0x154]
0x400225:	call	0x500018
<Block for 0x4002a2, 19 bytes>
0x4002a2:	lea	rdx, [rbp - 0x68]
0x4002a6:	lea	rax, [rbp - 0x50]
0x4002aa:	mov	rsi, rdx
0x4002ad:	mov	rdi, rax
0x4002b0:	call	0x400524
<Block for 0x40022a, 11 bytes>
0x40022a:	mov	qword ptr [rbp - 0x58], rax
0x40022e:	cmp	qword ptr [rbp - 0x58], 0
0x400233:	je	0x40028f
<Block for 0x4002b5, 19 bytes>
0x4002b5:	lea	rdx, [rbp - 0x68]
0x4002b9:	lea	rax, [rbp - 0x50]
0x4002bd:	mov	rsi, rdx
0x4002c0:	mov	rdi, rax
0x4002c3:	call	0x400524
<Block for 0x400235, 42 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x60]
0x400239:	mov	edx, 0x64
0x40023e:	sub	edx, eax
0x400240:	mov	eax, edx
0x400242:	mov	esi, eax
0x400244:	mov	rdx, qword ptr [rbp - 0x68]
0x400248:	mov	rax, qword ptr [rbp - 0x60]
0x40024c:	lea	rcx, [rdx + rax]
0x400250:	mov	rax, qword ptr [rbp - 0x58]
0x400254:	mov	rdx, rax
0x400257:	mov	rdi, rcx
0x40025a:	call	0x500020
<Block for 0x4002c8, 19 bytes>
0x4002c8:	lea	rdx, [rbp - 0x50]
0x4002cc:	lea	rax, [rbp - 0x30]
0x4002d0:	mov	rsi, rdx
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x40055e
<Block for 0x40025f, 10 bytes>
0x40025f:	test	rax, rax
0x400262:	sete	al
0x400265:	test	al, al
0x400267:	je	0x400283
<Block for 0x4002db, 12 bytes>
0x4002db:	lea	rax, [rbp - 0x30]
0x4002df:	mov	rdi, rax
0x4002e2:	call	0x500050
<Block for 0x400283, 12 bytes>
0x400283:	mov	rax, qword ptr [rbp - 0x58]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500030
<Block for 0x400269, 12 bytes>
0x400269:	lea	rdi, [rip + 0x117]
0x400270:	call	0x500028
<Block for 0x4002e7, 12 bytes>
0x4002e7:	lea	rax, [rbp - 0x30]
0x4002eb:	mov	rdi, rax
0x4002ee:	call	0x40044c
<Block for 0x400275, 26 bytes>
0x400275:	mov	rdx, qword ptr [rbp - 0x68]
0x400279:	mov	rax, qword ptr [rbp - 0x60]
0x40027d:	add	rax, rdx
0x400280:	mov	byte ptr [rax], 0
0x400283:	mov	rax, qword ptr [rbp - 0x58]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500030
<Block for 0x4002f3, 12 bytes>
0x4002f3:	lea	rax, [rbp - 0x50]
0x4002f7:	mov	rdi, rax
0x4002fa:	call	0x40044c
<Block for 0x4002ff, 16 bytes>
0x4002ff:	nop	
0x400300:	mov	rax, qword ptr [rbp - 0x18]
0x400304:	xor	rax, qword ptr fs:[0x28]
0x40030d:	je	0x400349
<Block for 0x400349, 7 bytes>
0x400349:	add	rsp, 0x68
0x40034d:	pop	rbx
0x40034e:	pop	rbp
0x40034f:	ret	
<Block for 0x40030f, 2 bytes>
0x40030f:	jmp	0x400344
<Block for 0x400344, 5 bytes>
0x400344:	call	0x500048
