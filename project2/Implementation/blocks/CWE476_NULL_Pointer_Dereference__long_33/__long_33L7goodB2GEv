<Block for 0x4000c0, 61 bytes>
0x4000c0:	endbr64	
0x4000c4:	push	rbp
0x4000c5:	mov	rbp, rsp
0x4000c8:	sub	rsp, 0x20
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	lea	rax, [rbp - 0x20]
0x4000df:	mov	qword ptr [rbp - 0x18], rax
0x4000e3:	mov	qword ptr [rbp - 0x20], 0
0x4000eb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ef:	mov	rax, qword ptr [rax]
0x4000f2:	mov	qword ptr [rbp - 0x10], rax
0x4000f6:	cmp	qword ptr [rbp - 0x10], 0
0x4000fb:	je	0x40010e
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0x31]
0x400115:	call	0x500010
<Block for 0x4000fd, 15 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x10]
0x400101:	mov	rax, qword ptr [rax]
0x400104:	mov	rdi, rax
0x400107:	call	0x500000
<Block for 0x40011a, 16 bytes>
0x40011a:	nop	
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	xor	rax, qword ptr fs:[0x28]
0x400128:	je	0x40012f
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x40011a
<Block for 0x40012f, 2 bytes>
0x40012f:	leave	
0x400130:	ret	
<Block for 0x40012a, 5 bytes>
0x40012a:	call	0x500008
