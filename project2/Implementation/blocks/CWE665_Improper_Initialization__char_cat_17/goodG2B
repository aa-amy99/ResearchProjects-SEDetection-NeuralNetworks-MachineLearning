<Block for 0x40009e, 56 bytes>
0x40009e:	endbr64	
0x4000a2:	push	rbp
0x4000a3:	mov	rbp, rsp
0x4000a6:	sub	rsp, 0xf0
0x4000ad:	mov	rax, qword ptr fs:[0x28]
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	xor	eax, eax
0x4000bc:	lea	rax, [rbp - 0xe0]
0x4000c3:	mov	qword ptr [rbp - 0xe8], rax
0x4000ca:	mov	dword ptr [rbp - 0xec], 0
0x4000d4:	jmp	0x4000e7
<Block for 0x4000e7, 9 bytes>
0x4000e7:	cmp	dword ptr [rbp - 0xec], 0
0x4000ee:	jle	0x4000d6
<Block for 0x4000d6, 26 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0xe8]
0x4000dd:	mov	byte ptr [rax], 0
0x4000e0:	add	dword ptr [rbp - 0xec], 1
0x4000e7:	cmp	dword ptr [rbp - 0xec], 0
0x4000ee:	jle	0x4000d6
<Block for 0x4000f0, 22 bytes>
0x4000f0:	lea	rax, [rbp - 0x70]
0x4000f4:	mov	edx, 0x63
0x4000f9:	mov	esi, 0x43
0x4000fe:	mov	rdi, rax
0x400101:	call	0x500000
<Block for 0x400106, 26 bytes>
0x400106:	mov	byte ptr [rbp - 0xd], 0
0x40010a:	lea	rdx, [rbp - 0x70]
0x40010e:	mov	rax, qword ptr [rbp - 0xe8]
0x400115:	mov	rsi, rdx
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x400120, 15 bytes>
0x400120:	mov	rax, qword ptr [rbp - 0xe8]
0x400127:	mov	rdi, rax
0x40012a:	call	0x500010
<Block for 0x40012f, 16 bytes>
0x40012f:	nop	
0x400130:	mov	rax, qword ptr [rbp - 8]
0x400134:	xor	rax, qword ptr fs:[0x28]
0x40013d:	je	0x400144
<Block for 0x400144, 2 bytes>
0x400144:	leave	
0x400145:	ret	
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500018
