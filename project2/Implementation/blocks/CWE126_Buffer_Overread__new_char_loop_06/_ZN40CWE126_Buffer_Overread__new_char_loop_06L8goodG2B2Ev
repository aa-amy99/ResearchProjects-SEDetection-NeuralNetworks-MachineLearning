<Block for 0x4001f8, 48 bytes>
0x4001f8:	endbr64	
0x4001fc:	push	rbp
0x4001fd:	mov	rbp, rsp
0x400200:	sub	rsp, 0x90
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 8], rax
0x400214:	xor	eax, eax
0x400216:	mov	qword ptr [rbp - 0x80], 0
0x40021e:	mov	edi, 0x64
0x400223:	call	0x500000
<Block for 0x400228, 26 bytes>
0x400228:	mov	qword ptr [rbp - 0x80], rax
0x40022c:	mov	rax, qword ptr [rbp - 0x80]
0x400230:	mov	edx, 0x63
0x400235:	mov	esi, 0x41
0x40023a:	mov	rdi, rax
0x40023d:	call	0x500008
<Block for 0x400242, 33 bytes>
0x400242:	mov	rax, qword ptr [rbp - 0x80]
0x400246:	add	rax, 0x63
0x40024a:	mov	byte ptr [rax], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x43
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500008
<Block for 0x400263, 16 bytes>
0x400263:	mov	byte ptr [rbp - 0xd], 0
0x400267:	lea	rax, [rbp - 0x70]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x500010
<Block for 0x400273, 28 bytes>
0x400273:	mov	qword ptr [rbp - 0x78], rax
0x400277:	mov	qword ptr [rbp - 0x88], 0
0x400282:	mov	rax, qword ptr [rbp - 0x88]
0x400289:	cmp	rax, qword ptr [rbp - 0x78]
0x40028d:	jae	0x4002ba
<Block for 0x40028f, 43 bytes>
0x40028f:	mov	rdx, qword ptr [rbp - 0x80]
0x400293:	mov	rax, qword ptr [rbp - 0x88]
0x40029a:	add	rax, rdx
0x40029d:	movzx	eax, byte ptr [rax]
0x4002a0:	lea	rcx, [rbp - 0x70]
0x4002a4:	mov	rdx, qword ptr [rbp - 0x88]
0x4002ab:	add	rdx, rcx
0x4002ae:	mov	byte ptr [rdx], al
0x4002b0:	add	qword ptr [rbp - 0x88], 1
0x4002b8:	jmp	0x400282
<Block for 0x4002ba, 16 bytes>
0x4002ba:	mov	byte ptr [rbp - 0xd], 0
0x4002be:	lea	rax, [rbp - 0x70]
0x4002c2:	mov	rdi, rax
0x4002c5:	call	0x500018
<Block for 0x400282, 13 bytes>
0x400282:	mov	rax, qword ptr [rbp - 0x88]
0x400289:	cmp	rax, qword ptr [rbp - 0x78]
0x40028d:	jae	0x4002ba
<Block for 0x4002ca, 7 bytes>
0x4002ca:	cmp	qword ptr [rbp - 0x80], 0
0x4002cf:	je	0x4002dd
<Block for 0x4002dd, 16 bytes>
0x4002dd:	nop	
0x4002de:	mov	rax, qword ptr [rbp - 8]
0x4002e2:	xor	rax, qword ptr fs:[0x28]
0x4002eb:	je	0x4002f2
<Block for 0x4002d1, 12 bytes>
0x4002d1:	mov	rax, qword ptr [rbp - 0x80]
0x4002d5:	mov	rdi, rax
0x4002d8:	call	0x500020
<Block for 0x4002f2, 2 bytes>
0x4002f2:	leave	
0x4002f3:	ret	
<Block for 0x4002ed, 5 bytes>
0x4002ed:	call	0x500028
