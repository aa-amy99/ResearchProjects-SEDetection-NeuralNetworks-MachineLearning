<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x80], 0
0x400026:	mov	edi, 0x32
0x40002b:	call	0x500000
<Block for 0x400030, 26 bytes>
0x400030:	mov	qword ptr [rbp - 0x80], rax
0x400034:	mov	rax, qword ptr [rbp - 0x80]
0x400038:	mov	edx, 0x31
0x40003d:	mov	esi, 0x41
0x400042:	mov	rdi, rax
0x400045:	call	0x500008
<Block for 0x40004a, 33 bytes>
0x40004a:	mov	rax, qword ptr [rbp - 0x80]
0x40004e:	add	rax, 0x31
0x400052:	mov	byte ptr [rax], 0
0x400055:	lea	rax, [rbp - 0x70]
0x400059:	mov	edx, 0x63
0x40005e:	mov	esi, 0x43
0x400063:	mov	rdi, rax
0x400066:	call	0x500008
<Block for 0x40006b, 16 bytes>
0x40006b:	mov	byte ptr [rbp - 0xd], 0
0x40006f:	lea	rax, [rbp - 0x70]
0x400073:	mov	rdi, rax
0x400076:	call	0x500010
<Block for 0x40007b, 28 bytes>
0x40007b:	mov	qword ptr [rbp - 0x78], rax
0x40007f:	mov	qword ptr [rbp - 0x88], 0
0x40008a:	mov	rax, qword ptr [rbp - 0x88]
0x400091:	cmp	rax, qword ptr [rbp - 0x78]
0x400095:	jae	0x4000c2
<Block for 0x400097, 43 bytes>
0x400097:	mov	rdx, qword ptr [rbp - 0x80]
0x40009b:	mov	rax, qword ptr [rbp - 0x88]
0x4000a2:	add	rax, rdx
0x4000a5:	movzx	eax, byte ptr [rax]
0x4000a8:	lea	rcx, [rbp - 0x70]
0x4000ac:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b3:	add	rdx, rcx
0x4000b6:	mov	byte ptr [rdx], al
0x4000b8:	add	qword ptr [rbp - 0x88], 1
0x4000c0:	jmp	0x40008a
<Block for 0x4000c2, 16 bytes>
0x4000c2:	mov	byte ptr [rbp - 0xd], 0
0x4000c6:	lea	rax, [rbp - 0x70]
0x4000ca:	mov	rdi, rax
0x4000cd:	call	0x500018
<Block for 0x40008a, 13 bytes>
0x40008a:	mov	rax, qword ptr [rbp - 0x88]
0x400091:	cmp	rax, qword ptr [rbp - 0x78]
0x400095:	jae	0x4000c2
<Block for 0x4000d2, 7 bytes>
0x4000d2:	cmp	qword ptr [rbp - 0x80], 0
0x4000d7:	je	0x4000e5
<Block for 0x4000e5, 16 bytes>
0x4000e5:	nop	
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	xor	rax, qword ptr fs:[0x28]
0x4000f3:	je	0x4000fa
<Block for 0x4000d9, 12 bytes>
0x4000d9:	mov	rax, qword ptr [rbp - 0x80]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500020
<Block for 0x4000fa, 2 bytes>
0x4000fa:	leave	
0x4000fb:	ret	
<Block for 0x4000f5, 5 bytes>
0x4000f5:	call	0x500028
