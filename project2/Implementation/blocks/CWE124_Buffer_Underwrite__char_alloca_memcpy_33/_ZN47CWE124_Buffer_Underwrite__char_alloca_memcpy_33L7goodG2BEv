<Block for 0x4001bd, 99 bytes>
0x4001bd:	endbr64	
0x4001c1:	push	rbp
0x4001c2:	mov	rbp, rsp
0x4001c5:	push	rbx
0x4001c6:	sub	rsp, 0x98
0x4001cd:	mov	rax, qword ptr fs:[0x28]
0x4001d6:	mov	qword ptr [rbp - 0x18], rax
0x4001da:	xor	eax, eax
0x4001dc:	lea	rax, [rbp - 0xa0]
0x4001e3:	mov	qword ptr [rbp - 0x98], rax
0x4001ea:	mov	eax, 0x10
0x4001ef:	sub	rax, 1
0x4001f3:	add	rax, 0x6c
0x4001f7:	mov	esi, 0x10
0x4001fc:	mov	edx, 0
0x400201:	div	rsi
0x400204:	imul	rax, rax, 0x10
0x400208:	mov	rdx, rax
0x40020b:	and	rdx, 0xfffffffffffff000
0x400212:	mov	rbx, rsp
0x400215:	sub	rbx, rdx
0x400218:	mov	rdx, rbx
0x40021b:	cmp	rsp, rdx
0x40021e:	je	0x400232
<Block for 0x400232, 26 bytes>
0x400232:	mov	rdx, rax
0x400235:	and	edx, 0xfff
0x40023b:	sub	rsp, rdx
0x40023e:	mov	rdx, rax
0x400241:	and	edx, 0xfff
0x400247:	test	rdx, rdx
0x40024a:	je	0x40025c
<Block for 0x400220, 18 bytes>
0x400220:	sub	rsp, 0x1000
0x400227:	or	qword ptr [rsp + 0xff8], 0
0x400230:	jmp	0x40021b
<Block for 0x40025c, 47 bytes>
0x40025c:	mov	rax, rsp
0x40025f:	add	rax, 0xf
0x400263:	shr	rax, 4
0x400267:	shl	rax, 4
0x40026b:	mov	qword ptr [rbp - 0x90], rax
0x400272:	mov	rax, qword ptr [rbp - 0x90]
0x400279:	mov	edx, 0x63
0x40027e:	mov	esi, 0x41
0x400283:	mov	rdi, rax
0x400286:	call	0x500000
<Block for 0x40024c, 63 bytes>
0x40024c:	and	eax, 0xfff
0x400251:	sub	rax, 8
0x400255:	add	rax, rsp
0x400258:	or	qword ptr [rax], 0
0x40025c:	mov	rax, rsp
0x40025f:	add	rax, 0xf
0x400263:	shr	rax, 4
0x400267:	shl	rax, 4
0x40026b:	mov	qword ptr [rbp - 0x90], rax
0x400272:	mov	rax, qword ptr [rbp - 0x90]
0x400279:	mov	edx, 0x63
0x40027e:	mov	esi, 0x41
0x400283:	mov	rdi, rax
0x400286:	call	0x500000
<Block for 0x40021b, 5 bytes>
0x40021b:	cmp	rsp, rdx
0x40021e:	je	0x400232
<Block for 0x40028b, 67 bytes>
0x40028b:	mov	rax, qword ptr [rbp - 0x90]
0x400292:	add	rax, 0x63
0x400296:	mov	byte ptr [rax], 0
0x400299:	mov	rax, qword ptr [rbp - 0x90]
0x4002a0:	mov	qword ptr [rbp - 0xa0], rax
0x4002a7:	mov	rax, qword ptr [rbp - 0x98]
0x4002ae:	mov	rax, qword ptr [rax]
0x4002b1:	mov	qword ptr [rbp - 0x88], rax
0x4002b8:	lea	rax, [rbp - 0x80]
0x4002bc:	mov	edx, 0x63
0x4002c1:	mov	esi, 0x43
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x500000
<Block for 0x4002ce, 141 bytes>
0x4002ce:	mov	byte ptr [rbp - 0x1d], 0
0x4002d2:	mov	rax, qword ptr [rbp - 0x88]
0x4002d9:	mov	rcx, qword ptr [rbp - 0x80]
0x4002dd:	mov	rbx, qword ptr [rbp - 0x78]
0x4002e1:	mov	qword ptr [rax], rcx
0x4002e4:	mov	qword ptr [rax + 8], rbx
0x4002e8:	mov	rcx, qword ptr [rbp - 0x70]
0x4002ec:	mov	rbx, qword ptr [rbp - 0x68]
0x4002f0:	mov	qword ptr [rax + 0x10], rcx
0x4002f4:	mov	qword ptr [rax + 0x18], rbx
0x4002f8:	mov	rcx, qword ptr [rbp - 0x60]
0x4002fc:	mov	rbx, qword ptr [rbp - 0x58]
0x400300:	mov	qword ptr [rax + 0x20], rcx
0x400304:	mov	qword ptr [rax + 0x28], rbx
0x400308:	mov	rcx, qword ptr [rbp - 0x50]
0x40030c:	mov	rbx, qword ptr [rbp - 0x48]
0x400310:	mov	qword ptr [rax + 0x30], rcx
0x400314:	mov	qword ptr [rax + 0x38], rbx
0x400318:	mov	rcx, qword ptr [rbp - 0x40]
0x40031c:	mov	rbx, qword ptr [rbp - 0x38]
0x400320:	mov	qword ptr [rax + 0x40], rcx
0x400324:	mov	qword ptr [rax + 0x48], rbx
0x400328:	mov	rcx, qword ptr [rbp - 0x30]
0x40032c:	mov	rbx, qword ptr [rbp - 0x28]
0x400330:	mov	qword ptr [rax + 0x50], rcx
0x400334:	mov	qword ptr [rax + 0x58], rbx
0x400338:	mov	edx, dword ptr [rbp - 0x20]
0x40033b:	mov	dword ptr [rax + 0x60], edx
0x40033e:	mov	rax, qword ptr [rbp - 0x88]
0x400345:	add	rax, 0x63
0x400349:	mov	byte ptr [rax], 0
0x40034c:	mov	rax, qword ptr [rbp - 0x88]
0x400353:	mov	rdi, rax
0x400356:	call	0x500008
<Block for 0x40035b, 16 bytes>
0x40035b:	nop	
0x40035c:	mov	rax, qword ptr [rbp - 0x18]
0x400360:	xor	rax, qword ptr fs:[0x28]
0x400369:	je	0x400370
<Block for 0x400370, 6 bytes>
0x400370:	mov	rbx, qword ptr [rbp - 8]
0x400374:	leave	
0x400375:	ret	
<Block for 0x40036b, 5 bytes>
0x40036b:	call	0x500010
