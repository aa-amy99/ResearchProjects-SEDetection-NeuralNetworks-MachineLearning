<Block for 0x4000e2, 55 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	sub	rsp, 0xf0
0x4000f1:	mov	rax, qword ptr fs:[0x28]
0x4000fa:	mov	qword ptr [rbp - 8], rax
0x4000fe:	xor	eax, eax
0x400100:	lea	rax, [rbp - 0xe0]
0x400107:	mov	edx, 0x63
0x40010c:	mov	esi, 0x41
0x400111:	mov	rdi, rax
0x400114:	call	0x500000
<Block for 0x400119, 14 bytes>
0x400119:	mov	byte ptr [rbp - 0x7d], 0
0x40011d:	mov	eax, 0
0x400122:	call	0x40000f
<Block for 0x400127, 4 bytes>
0x400127:	test	eax, eax
0x400129:	je	0x400139
<Block for 0x400139, 36 bytes>
0x400139:	lea	rax, [rbp - 0xe0]
0x400140:	mov	qword ptr [rbp - 0xe8], rax
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40012b, 12 bytes>
0x40012b:	lea	rdi, [rip + 0x15d]
0x400132:	call	0x500010
<Block for 0x40015d, 31 bytes>
0x40015d:	mov	byte ptr [rbp - 0xd], 0
0x400161:	lea	rcx, [rbp - 0x70]
0x400165:	mov	rax, qword ptr [rbp - 0xe8]
0x40016c:	mov	edx, 0x63
0x400171:	mov	rsi, rcx
0x400174:	mov	rdi, rax
0x400177:	call	0x500008
<Block for 0x400137, 2 bytes>
0x400137:	jmp	0x400147
<Block for 0x40017c, 29 bytes>
0x40017c:	mov	rax, qword ptr [rbp - 0xe8]
0x400183:	add	rax, 0x63
0x400187:	mov	byte ptr [rax], 0
0x40018a:	mov	rax, qword ptr [rbp - 0xe8]
0x400191:	mov	rdi, rax
0x400194:	call	0x500010
<Block for 0x400147, 22 bytes>
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x400199, 16 bytes>
0x400199:	nop	
0x40019a:	mov	rax, qword ptr [rbp - 8]
0x40019e:	xor	rax, qword ptr fs:[0x28]
0x4001a7:	je	0x4001ae
<Block for 0x4001ae, 2 bytes>
0x4001ae:	leave	
0x4001af:	ret	
<Block for 0x4001a9, 5 bytes>
0x4001a9:	call	0x500018
