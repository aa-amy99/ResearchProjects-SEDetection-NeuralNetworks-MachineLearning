<Block for 0x4000ef, 30 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0x10
0x4000fb:	mov	qword ptr [rbp - 8], 0
0x400103:	mov	edi, 0x190
0x400108:	call	0x500000
<Block for 0x40010d, 11 bytes>
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	cmp	qword ptr [rbp - 8], 0
0x400116:	jne	0x400122
<Block for 0x400118, 10 bytes>
0x400118:	mov	edi, 0xffffffff
0x40011d:	call	0x500008
<Block for 0x400122, 10 bytes>
0x400122:	mov	qword ptr [rbp - 0x10], 0
0x40012a:	jmp	0x40014a
<Block for 0x40014a, 7 bytes>
0x40014a:	cmp	qword ptr [rbp - 0x10], 0x63
0x40014f:	jbe	0x40012c
<Block for 0x40012c, 37 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0x10]
0x400130:	lea	rdx, [rax*4]
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	add	rax, rdx
0x40013f:	mov	dword ptr [rax], 5
0x400145:	add	qword ptr [rbp - 0x10], 1
0x40014a:	cmp	qword ptr [rbp - 0x10], 0x63
0x40014f:	jbe	0x40012c
<Block for 0x400151, 12 bytes>
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	mov	rdi, rax
0x400158:	call	0x500010
<Block for 0x40015d, 3 bytes>
0x40015d:	nop	
0x40015e:	leave	
0x40015f:	ret	
