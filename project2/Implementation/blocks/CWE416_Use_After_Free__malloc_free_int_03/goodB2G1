<Block for 0x40007e, 30 bytes>
0x40007e:	endbr64	
0x400082:	push	rbp
0x400083:	mov	rbp, rsp
0x400086:	sub	rsp, 0x10
0x40008a:	mov	qword ptr [rbp - 8], 0
0x400092:	mov	edi, 0x190
0x400097:	call	0x500000
<Block for 0x40009c, 11 bytes>
0x40009c:	mov	qword ptr [rbp - 8], rax
0x4000a0:	cmp	qword ptr [rbp - 8], 0
0x4000a5:	jne	0x4000b1
<Block for 0x4000a7, 10 bytes>
0x4000a7:	mov	edi, 0xffffffff
0x4000ac:	call	0x500008
<Block for 0x4000b1, 10 bytes>
0x4000b1:	mov	qword ptr [rbp - 0x10], 0
0x4000b9:	jmp	0x4000d9
<Block for 0x4000d9, 7 bytes>
0x4000d9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000de:	jbe	0x4000bb
<Block for 0x4000bb, 37 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x10]
0x4000bf:	lea	rdx, [rax*4]
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	add	rax, rdx
0x4000ce:	mov	dword ptr [rax], 5
0x4000d4:	add	qword ptr [rbp - 0x10], 1
0x4000d9:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000de:	jbe	0x4000bb
<Block for 0x4000e0, 12 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 8]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500010
<Block for 0x4000ec, 3 bytes>
0x4000ec:	nop	
0x4000ed:	leave	
0x4000ee:	ret	
