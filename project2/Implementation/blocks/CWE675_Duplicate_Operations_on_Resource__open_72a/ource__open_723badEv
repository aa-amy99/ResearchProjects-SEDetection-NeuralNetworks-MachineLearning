<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400574
<Block for 0x400028, 34 bytes>
0x400028:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002f:	mov	edx, 0x180
0x400034:	mov	esi, 0x42
0x400039:	lea	rdi, [rip + 0x4b6]
0x400040:	mov	eax, 0
0x400045:	call	0x500000
<Block for 0x40004a, 13 bytes>
0x40004a:	mov	dword ptr [rbp - 0x5c], eax
0x40004d:	mov	eax, dword ptr [rbp - 0x5c]
0x400050:	mov	edi, eax
0x400052:	call	0x500008
<Block for 0x400057, 12 bytes>
0x400057:	lea	rax, [rbp - 0x50]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x40071a
<Block for 0x400063, 23 bytes>
0x400063:	mov	qword ptr [rbp - 0x58], rax
0x400067:	lea	rdx, [rbp - 0x58]
0x40006b:	lea	rax, [rbp - 0x30]
0x40006f:	mov	rsi, rdx
0x400072:	mov	rdi, rax
0x400075:	call	0x40076a
<Block for 0x40007a, 28 bytes>
0x40007a:	lea	rdx, [rbp - 0x5c]
0x40007e:	mov	rsi, qword ptr [rbp - 0x30]
0x400082:	lea	rax, [rbp - 0x50]
0x400086:	mov	rcx, rdx
0x400089:	mov	edx, 1
0x40008e:	mov	rdi, rax
0x400091:	call	0x400798
<Block for 0x400096, 12 bytes>
0x400096:	lea	rax, [rbp - 0x50]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x40071a
<Block for 0x4000a2, 23 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x58], rax
0x4000a6:	lea	rdx, [rbp - 0x58]
0x4000aa:	lea	rax, [rbp - 0x30]
0x4000ae:	mov	rsi, rdx
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x40076a
<Block for 0x4000b9, 28 bytes>
0x4000b9:	lea	rdx, [rbp - 0x5c]
0x4000bd:	mov	rsi, qword ptr [rbp - 0x30]
0x4000c1:	lea	rax, [rbp - 0x50]
0x4000c5:	mov	rcx, rdx
0x4000c8:	mov	edx, 1
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x400798
<Block for 0x4000d5, 12 bytes>
0x4000d5:	lea	rax, [rbp - 0x50]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x40071a
<Block for 0x4000e1, 23 bytes>
0x4000e1:	mov	qword ptr [rbp - 0x58], rax
0x4000e5:	lea	rdx, [rbp - 0x58]
0x4000e9:	lea	rax, [rbp - 0x30]
0x4000ed:	mov	rsi, rdx
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x40076a
<Block for 0x4000f8, 28 bytes>
0x4000f8:	lea	rdx, [rbp - 0x5c]
0x4000fc:	mov	rsi, qword ptr [rbp - 0x30]
0x400100:	lea	rax, [rbp - 0x50]
0x400104:	mov	rcx, rdx
0x400107:	mov	edx, 1
0x40010c:	mov	rdi, rax
0x40010f:	call	0x400798
<Block for 0x400114, 19 bytes>
0x400114:	lea	rdx, [rbp - 0x50]
0x400118:	lea	rax, [rbp - 0x30]
0x40011c:	mov	rsi, rdx
0x40011f:	mov	rdi, rax
0x400122:	call	0x40085e
<Block for 0x400127, 12 bytes>
0x400127:	lea	rax, [rbp - 0x30]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500010
<Block for 0x400133, 12 bytes>
0x400133:	lea	rax, [rbp - 0x30]
0x400137:	mov	rdi, rax
0x40013a:	call	0x4006d2
<Block for 0x40013f, 12 bytes>
0x40013f:	lea	rax, [rbp - 0x50]
0x400143:	mov	rdi, rax
0x400146:	call	0x4006d2
<Block for 0x40014b, 16 bytes>
0x40014b:	nop	
0x40014c:	mov	rax, qword ptr [rbp - 0x18]
0x400150:	xor	rax, qword ptr fs:[0x28]
0x400159:	je	0x400195
<Block for 0x400195, 7 bytes>
0x400195:	add	rsp, 0x58
0x400199:	pop	rbx
0x40019a:	pop	rbp
0x40019b:	ret	
<Block for 0x40015b, 2 bytes>
0x40015b:	jmp	0x400190
<Block for 0x400190, 5 bytes>
0x400190:	call	0x500020
