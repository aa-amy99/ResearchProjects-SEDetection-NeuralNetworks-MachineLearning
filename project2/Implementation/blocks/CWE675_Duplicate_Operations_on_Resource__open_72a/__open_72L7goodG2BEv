<Block for 0x40019c, 40 bytes>
0x40019c:	endbr64	
0x4001a0:	push	rbp
0x4001a1:	mov	rbp, rsp
0x4001a4:	push	rbx
0x4001a5:	sub	rsp, 0x58
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 0x18], rax
0x4001b6:	xor	eax, eax
0x4001b8:	lea	rax, [rbp - 0x50]
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x400574
<Block for 0x4001c4, 34 bytes>
0x4001c4:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4001cb:	mov	edx, 0x180
0x4001d0:	mov	esi, 0x42
0x4001d5:	lea	rdi, [rip + 0x32d]
0x4001dc:	mov	eax, 0
0x4001e1:	call	0x500000
<Block for 0x4001e6, 15 bytes>
0x4001e6:	mov	dword ptr [rbp - 0x5c], eax
0x4001e9:	lea	rax, [rbp - 0x50]
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x40071a
<Block for 0x4001f5, 23 bytes>
0x4001f5:	mov	qword ptr [rbp - 0x58], rax
0x4001f9:	lea	rdx, [rbp - 0x58]
0x4001fd:	lea	rax, [rbp - 0x30]
0x400201:	mov	rsi, rdx
0x400204:	mov	rdi, rax
0x400207:	call	0x40076a
<Block for 0x40020c, 28 bytes>
0x40020c:	lea	rdx, [rbp - 0x5c]
0x400210:	mov	rsi, qword ptr [rbp - 0x30]
0x400214:	lea	rax, [rbp - 0x50]
0x400218:	mov	rcx, rdx
0x40021b:	mov	edx, 1
0x400220:	mov	rdi, rax
0x400223:	call	0x400798
<Block for 0x400228, 12 bytes>
0x400228:	lea	rax, [rbp - 0x50]
0x40022c:	mov	rdi, rax
0x40022f:	call	0x40071a
<Block for 0x400234, 23 bytes>
0x400234:	mov	qword ptr [rbp - 0x58], rax
0x400238:	lea	rdx, [rbp - 0x58]
0x40023c:	lea	rax, [rbp - 0x30]
0x400240:	mov	rsi, rdx
0x400243:	mov	rdi, rax
0x400246:	call	0x40076a
<Block for 0x40024b, 28 bytes>
0x40024b:	lea	rdx, [rbp - 0x5c]
0x40024f:	mov	rsi, qword ptr [rbp - 0x30]
0x400253:	lea	rax, [rbp - 0x50]
0x400257:	mov	rcx, rdx
0x40025a:	mov	edx, 1
0x40025f:	mov	rdi, rax
0x400262:	call	0x400798
<Block for 0x400267, 12 bytes>
0x400267:	lea	rax, [rbp - 0x50]
0x40026b:	mov	rdi, rax
0x40026e:	call	0x40071a
<Block for 0x400273, 23 bytes>
0x400273:	mov	qword ptr [rbp - 0x58], rax
0x400277:	lea	rdx, [rbp - 0x58]
0x40027b:	lea	rax, [rbp - 0x30]
0x40027f:	mov	rsi, rdx
0x400282:	mov	rdi, rax
0x400285:	call	0x40076a
<Block for 0x40028a, 28 bytes>
0x40028a:	lea	rdx, [rbp - 0x5c]
0x40028e:	mov	rsi, qword ptr [rbp - 0x30]
0x400292:	lea	rax, [rbp - 0x50]
0x400296:	mov	rcx, rdx
0x400299:	mov	edx, 1
0x40029e:	mov	rdi, rax
0x4002a1:	call	0x400798
<Block for 0x4002a6, 19 bytes>
0x4002a6:	lea	rdx, [rbp - 0x50]
0x4002aa:	lea	rax, [rbp - 0x30]
0x4002ae:	mov	rsi, rdx
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x40085e
<Block for 0x4002b9, 12 bytes>
0x4002b9:	lea	rax, [rbp - 0x30]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500028
<Block for 0x4002c5, 12 bytes>
0x4002c5:	lea	rax, [rbp - 0x30]
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x4006d2
<Block for 0x4002d1, 12 bytes>
0x4002d1:	lea	rax, [rbp - 0x50]
0x4002d5:	mov	rdi, rax
0x4002d8:	call	0x4006d2
<Block for 0x4002dd, 16 bytes>
0x4002dd:	nop	
0x4002de:	mov	rax, qword ptr [rbp - 0x18]
0x4002e2:	xor	rax, qword ptr fs:[0x28]
0x4002eb:	je	0x400327
<Block for 0x400327, 7 bytes>
0x400327:	add	rsp, 0x58
0x40032b:	pop	rbx
0x40032c:	pop	rbp
0x40032d:	ret	
<Block for 0x4002ed, 2 bytes>
0x4002ed:	jmp	0x400322
<Block for 0x400322, 5 bytes>
0x400322:	call	0x500020
