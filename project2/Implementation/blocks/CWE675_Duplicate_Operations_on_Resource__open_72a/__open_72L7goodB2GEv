<Block for 0x40032e, 40 bytes>
0x40032e:	endbr64	
0x400332:	push	rbp
0x400333:	mov	rbp, rsp
0x400336:	push	rbx
0x400337:	sub	rsp, 0x58
0x40033b:	mov	rax, qword ptr fs:[0x28]
0x400344:	mov	qword ptr [rbp - 0x18], rax
0x400348:	xor	eax, eax
0x40034a:	lea	rax, [rbp - 0x50]
0x40034e:	mov	rdi, rax
0x400351:	call	0x400574
<Block for 0x400356, 34 bytes>
0x400356:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40035d:	mov	edx, 0x180
0x400362:	mov	esi, 0x42
0x400367:	lea	rdi, [rip + 0x188]
0x40036e:	mov	eax, 0
0x400373:	call	0x500000
<Block for 0x400378, 13 bytes>
0x400378:	mov	dword ptr [rbp - 0x5c], eax
0x40037b:	mov	eax, dword ptr [rbp - 0x5c]
0x40037e:	mov	edi, eax
0x400380:	call	0x500008
<Block for 0x400385, 12 bytes>
0x400385:	lea	rax, [rbp - 0x50]
0x400389:	mov	rdi, rax
0x40038c:	call	0x40071a
<Block for 0x400391, 23 bytes>
0x400391:	mov	qword ptr [rbp - 0x58], rax
0x400395:	lea	rdx, [rbp - 0x58]
0x400399:	lea	rax, [rbp - 0x30]
0x40039d:	mov	rsi, rdx
0x4003a0:	mov	rdi, rax
0x4003a3:	call	0x40076a
<Block for 0x4003a8, 28 bytes>
0x4003a8:	lea	rdx, [rbp - 0x5c]
0x4003ac:	mov	rsi, qword ptr [rbp - 0x30]
0x4003b0:	lea	rax, [rbp - 0x50]
0x4003b4:	mov	rcx, rdx
0x4003b7:	mov	edx, 1
0x4003bc:	mov	rdi, rax
0x4003bf:	call	0x400798
<Block for 0x4003c4, 12 bytes>
0x4003c4:	lea	rax, [rbp - 0x50]
0x4003c8:	mov	rdi, rax
0x4003cb:	call	0x40071a
<Block for 0x4003d0, 23 bytes>
0x4003d0:	mov	qword ptr [rbp - 0x58], rax
0x4003d4:	lea	rdx, [rbp - 0x58]
0x4003d8:	lea	rax, [rbp - 0x30]
0x4003dc:	mov	rsi, rdx
0x4003df:	mov	rdi, rax
0x4003e2:	call	0x40076a
<Block for 0x4003e7, 28 bytes>
0x4003e7:	lea	rdx, [rbp - 0x5c]
0x4003eb:	mov	rsi, qword ptr [rbp - 0x30]
0x4003ef:	lea	rax, [rbp - 0x50]
0x4003f3:	mov	rcx, rdx
0x4003f6:	mov	edx, 1
0x4003fb:	mov	rdi, rax
0x4003fe:	call	0x400798
<Block for 0x400403, 12 bytes>
0x400403:	lea	rax, [rbp - 0x50]
0x400407:	mov	rdi, rax
0x40040a:	call	0x40071a
<Block for 0x40040f, 23 bytes>
0x40040f:	mov	qword ptr [rbp - 0x58], rax
0x400413:	lea	rdx, [rbp - 0x58]
0x400417:	lea	rax, [rbp - 0x30]
0x40041b:	mov	rsi, rdx
0x40041e:	mov	rdi, rax
0x400421:	call	0x40076a
<Block for 0x400426, 28 bytes>
0x400426:	lea	rdx, [rbp - 0x5c]
0x40042a:	mov	rsi, qword ptr [rbp - 0x30]
0x40042e:	lea	rax, [rbp - 0x50]
0x400432:	mov	rcx, rdx
0x400435:	mov	edx, 1
0x40043a:	mov	rdi, rax
0x40043d:	call	0x400798
<Block for 0x400442, 19 bytes>
0x400442:	lea	rdx, [rbp - 0x50]
0x400446:	lea	rax, [rbp - 0x30]
0x40044a:	mov	rsi, rdx
0x40044d:	mov	rdi, rax
0x400450:	call	0x40085e
<Block for 0x400455, 12 bytes>
0x400455:	lea	rax, [rbp - 0x30]
0x400459:	mov	rdi, rax
0x40045c:	call	0x500030
<Block for 0x400461, 12 bytes>
0x400461:	lea	rax, [rbp - 0x30]
0x400465:	mov	rdi, rax
0x400468:	call	0x4006d2
<Block for 0x40046d, 12 bytes>
0x40046d:	lea	rax, [rbp - 0x50]
0x400471:	mov	rdi, rax
0x400474:	call	0x4006d2
<Block for 0x400479, 16 bytes>
0x400479:	nop	
0x40047a:	mov	rax, qword ptr [rbp - 0x18]
0x40047e:	xor	rax, qword ptr fs:[0x28]
0x400487:	je	0x4004c3
<Block for 0x4004c3, 7 bytes>
0x4004c3:	add	rsp, 0x58
0x4004c7:	pop	rbx
0x4004c8:	pop	rbp
0x4004c9:	ret	
<Block for 0x400489, 2 bytes>
0x400489:	jmp	0x4004be
<Block for 0x4004be, 5 bytes>
0x4004be:	call	0x500020
