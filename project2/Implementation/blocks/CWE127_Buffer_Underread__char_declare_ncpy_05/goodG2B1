<Block for 0x4000bd, 55 bytes>
0x4000bd:	endbr64	
0x4000c1:	push	rbp
0x4000c2:	mov	rbp, rsp
0x4000c5:	sub	rsp, 0xf0
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	lea	rax, [rbp - 0xe0]
0x4000e2:	mov	edx, 0x63
0x4000e7:	mov	esi, 0x41
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000f4, 14 bytes>
0x4000f4:	mov	byte ptr [rbp - 0x7d], 0
0x4000f8:	mov	eax, dword ptr [rip + 0x162]
0x4000fe:	test	eax, eax
0x400100:	je	0x400110
<Block for 0x400110, 36 bytes>
0x400110:	lea	rax, [rbp - 0xe0]
0x400117:	mov	qword ptr [rbp - 0xe8], rax
0x40011e:	lea	rax, [rbp - 0x70]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x43
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500000
<Block for 0x400102, 12 bytes>
0x400102:	lea	rdi, [rip + 0x15b]
0x400109:	call	0x500018
<Block for 0x400134, 16 bytes>
0x400134:	mov	byte ptr [rbp - 0xd], 0
0x400138:	lea	rax, [rbp - 0x70]
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500008
<Block for 0x40010e, 2 bytes>
0x40010e:	jmp	0x40011e
<Block for 0x400144, 25 bytes>
0x400144:	mov	rdx, rax
0x400147:	mov	rcx, qword ptr [rbp - 0xe8]
0x40014e:	lea	rax, [rbp - 0x70]
0x400152:	mov	rsi, rcx
0x400155:	mov	rdi, rax
0x400158:	call	0x500010
<Block for 0x40011e, 22 bytes>
0x40011e:	lea	rax, [rbp - 0x70]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x43
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500000
<Block for 0x40015d, 16 bytes>
0x40015d:	mov	byte ptr [rbp - 0xd], 0
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	rdi, rax
0x400168:	call	0x500018
<Block for 0x40016d, 16 bytes>
0x40016d:	nop	
0x40016e:	mov	rax, qword ptr [rbp - 8]
0x400172:	xor	rax, qword ptr fs:[0x28]
0x40017b:	je	0x400182
<Block for 0x400182, 2 bytes>
0x400182:	leave	
0x400183:	ret	
<Block for 0x40017d, 5 bytes>
0x40017d:	call	0x500020
