<Block for 0x400079, 25 bytes>
0x400079:	endbr64	
0x40007d:	push	rbp
0x40007e:	mov	rbp, rsp
0x400081:	sub	rsp, 0x10
0x400085:	mov	qword ptr [rbp - 8], 0
0x40008d:	call	0x500000
<Block for 0x400092, 9 bytes>
0x400092:	test	eax, eax
0x400094:	setne	al
0x400097:	test	al, al
0x400099:	je	0x4000d4
<Block for 0x4000d4, 5 bytes>
0x4000d4:	call	0x500020
<Block for 0x40009b, 10 bytes>
0x40009b:	mov	edi, 8
0x4000a0:	call	0x500008
<Block for 0x4000d9, 9 bytes>
0x4000d9:	test	eax, eax
0x4000db:	setne	al
0x4000de:	test	al, al
0x4000e0:	je	0x4000ee
<Block for 0x4000a5, 34 bytes>
0x4000a5:	mov	qword ptr [rbp - 8], rax
0x4000a9:	mov	rax, qword ptr [rbp - 8]
0x4000ad:	mov	dword ptr [rax], 1
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	mov	dword ptr [rax + 4], 2
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	test	rax, rax
0x4000c5:	je	0x4000d4
<Block for 0x4000ee, 3 bytes>
0x4000ee:	nop	
0x4000ef:	leave	
0x4000f0:	ret	
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rdi, [rip + 0x160]
0x4000e9:	call	0x500028
<Block for 0x4000c7, 13 bytes>
0x4000c7:	mov	esi, 8
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500010
