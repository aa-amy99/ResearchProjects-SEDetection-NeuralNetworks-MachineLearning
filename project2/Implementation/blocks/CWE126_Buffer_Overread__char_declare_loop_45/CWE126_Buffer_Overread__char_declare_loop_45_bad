<Block for 0x4000bd, 55 bytes>
0x4000bd:	endbr64	
0x4000c1:	push	rbp
0x4000c2:	mov	rbp, rsp
0x4000c5:	sub	rsp, 0xc0
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	lea	rax, [rbp - 0xb0]
0x4000e2:	mov	edx, 0x31
0x4000e7:	mov	esi, 0x41
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500000
<Block for 0x4000f4, 26 bytes>
0x4000f4:	mov	byte ptr [rbp - 0x7f], 0
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	edx, 0x63
0x400101:	mov	esi, 0x41
0x400106:	mov	rdi, rax
0x400109:	call	0x500000
<Block for 0x40010e, 42 bytes>
0x40010e:	mov	byte ptr [rbp - 0xd], 0
0x400112:	lea	rax, [rbp - 0xb0]
0x400119:	mov	qword ptr [rbp - 0xb8], rax
0x400120:	mov	rax, qword ptr [rbp - 0xb8]
0x400127:	mov	qword ptr [rip + 0x182], rax
0x40012e:	mov	eax, 0
0x400133:	call	0x400000
<Block for 0x400138, 16 bytes>
0x400138:	nop	
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	xor	rax, qword ptr fs:[0x28]
0x400146:	je	0x40014d
<Block for 0x40014d, 2 bytes>
0x40014d:	leave	
0x40014e:	ret	
<Block for 0x400148, 5 bytes>
0x400148:	call	0x500018
