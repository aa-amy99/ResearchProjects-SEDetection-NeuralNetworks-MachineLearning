<Block for 0x40010f, 44 bytes>
0x40010f:	endbr64	
0x400113:	push	rbp
0x400114:	mov	rbp, rsp
0x400117:	add	rsp, -0x80
0x40011b:	mov	rax, qword ptr fs:[0x28]
0x400124:	mov	qword ptr [rbp - 8], rax
0x400128:	xor	eax, eax
0x40012a:	mov	qword ptr [rbp - 0x78], 0
0x400132:	mov	byte ptr [rbp - 0x70], 0
0x400136:	call	0x500020
<Block for 0x40013b, 30 bytes>
0x40013b:	mov	dword ptr [rax], 0
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	edx, 0x64
0x40014a:	lea	rsi, [rip + 0x7b]
0x400151:	mov	rdi, rax
0x400154:	call	0x500000
<Block for 0x400159, 9 bytes>
0x400159:	mov	qword ptr [rbp - 0x78], rax
0x40015d:	call	0x500020
<Block for 0x400162, 7 bytes>
0x400162:	mov	eax, dword ptr [rax]
0x400164:	cmp	eax, 0x54
0x400167:	jne	0x40017f
<Block for 0x400169, 12 bytes>
0x400169:	lea	rdi, [rip + 0x64]
0x400170:	call	0x500010
<Block for 0x40017f, 11 bytes>
0x40017f:	mov	rax, qword ptr [rbp - 0x78]
0x400183:	mov	edi, eax
0x400185:	call	0x500008
<Block for 0x400175, 10 bytes>
0x400175:	mov	edi, 1
0x40017a:	call	0x500028
<Block for 0x40018a, 12 bytes>
0x40018a:	lea	rax, [rbp - 0x70]
0x40018e:	mov	rdi, rax
0x400191:	call	0x500010
<Block for 0x400196, 16 bytes>
0x400196:	nop	
0x400197:	mov	rax, qword ptr [rbp - 8]
0x40019b:	xor	rax, qword ptr fs:[0x28]
0x4001a4:	je	0x4001ab
<Block for 0x4001ab, 2 bytes>
0x4001ab:	leave	
0x4001ac:	ret	
<Block for 0x4001a6, 5 bytes>
0x4001a6:	call	0x500018
