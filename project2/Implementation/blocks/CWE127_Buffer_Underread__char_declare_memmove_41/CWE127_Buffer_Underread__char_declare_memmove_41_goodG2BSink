<Block for 0x4000dc, 53 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	add	rsp, -0x80
0x4000e8:	mov	qword ptr [rbp - 0x78], rdi
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	lea	rax, [rbp - 0x70]
0x4000ff:	mov	edx, 0x63
0x400104:	mov	esi, 0x43
0x400109:	mov	rdi, rax
0x40010c:	call	0x500000
<Block for 0x400111, 28 bytes>
0x400111:	mov	byte ptr [rbp - 0xd], 0
0x400115:	mov	rcx, qword ptr [rbp - 0x78]
0x400119:	lea	rax, [rbp - 0x70]
0x40011d:	mov	edx, 0x64
0x400122:	mov	rsi, rcx
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
<Block for 0x40012d, 16 bytes>
0x40012d:	mov	byte ptr [rbp - 0xd], 0
0x400131:	lea	rax, [rbp - 0x70]
0x400135:	mov	rdi, rax
0x400138:	call	0x500010
<Block for 0x40013d, 16 bytes>
0x40013d:	nop	
0x40013e:	mov	rax, qword ptr [rbp - 8]
0x400142:	xor	rax, qword ptr fs:[0x28]
0x40014b:	je	0x400152
<Block for 0x400152, 2 bytes>
0x400152:	leave	
0x400153:	ret	
<Block for 0x40014d, 5 bytes>
0x40014d:	call	0x500018
