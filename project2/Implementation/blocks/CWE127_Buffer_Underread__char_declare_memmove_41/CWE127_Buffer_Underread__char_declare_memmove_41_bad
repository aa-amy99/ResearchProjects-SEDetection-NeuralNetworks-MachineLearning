<Block for 0x400078, 49 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	add	rsp, -0x80
0x400084:	mov	rax, qword ptr fs:[0x28]
0x40008d:	mov	qword ptr [rbp - 8], rax
0x400091:	xor	eax, eax
0x400093:	lea	rax, [rbp - 0x70]
0x400097:	mov	edx, 0x63
0x40009c:	mov	esi, 0x41
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500000
<Block for 0x4000a9, 28 bytes>
0x4000a9:	mov	byte ptr [rbp - 0xd], 0
0x4000ad:	lea	rax, [rbp - 0x70]
0x4000b1:	sub	rax, 8
0x4000b5:	mov	qword ptr [rbp - 0x78], rax
0x4000b9:	mov	rax, qword ptr [rbp - 0x78]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x400000
<Block for 0x4000c5, 16 bytes>
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500018
