<Block for 0x40026c, 81 bytes>
0x40026c:	endbr64	
0x400270:	push	rbp
0x400271:	mov	rbp, rsp
0x400274:	add	rsp, -0x80
0x400278:	mov	rax, qword ptr fs:[0x28]
0x400281:	mov	qword ptr [rbp - 8], rax
0x400285:	xor	eax, eax
0x400287:	mov	eax, 0x10
0x40028c:	sub	rax, 1
0x400290:	add	rax, 0x6c
0x400294:	mov	esi, 0x10
0x400299:	mov	edx, 0
0x40029e:	div	rsi
0x4002a1:	imul	rax, rax, 0x10
0x4002a5:	mov	rdx, rax
0x4002a8:	and	rdx, 0xfffffffffffff000
0x4002af:	mov	rcx, rsp
0x4002b2:	sub	rcx, rdx
0x4002b5:	mov	rdx, rcx
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x4002cf, 26 bytes>
0x4002cf:	mov	rdx, rax
0x4002d2:	and	edx, 0xfff
0x4002d8:	sub	rsp, rdx
0x4002db:	mov	rdx, rax
0x4002de:	and	edx, 0xfff
0x4002e4:	test	rdx, rdx
0x4002e7:	je	0x4002f9
<Block for 0x4002bd, 18 bytes>
0x4002bd:	sub	rsp, 0x1000
0x4002c4:	or	qword ptr [rsp + 0xff8], 0
0x4002cd:	jmp	0x4002b8
<Block for 0x4002f9, 41 bytes>
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x78], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x78]
0x400310:	mov	edx, 0x63
0x400315:	mov	esi, 0x41
0x40031a:	mov	rdi, rax
0x40031d:	call	0x500000
<Block for 0x4002e9, 57 bytes>
0x4002e9:	and	eax, 0xfff
0x4002ee:	sub	rax, 8
0x4002f2:	add	rax, rsp
0x4002f5:	or	qword ptr [rax], 0
0x4002f9:	mov	rax, rsp
0x4002fc:	add	rax, 0xf
0x400300:	shr	rax, 4
0x400304:	shl	rax, 4
0x400308:	mov	qword ptr [rbp - 0x78], rax
0x40030c:	mov	rax, qword ptr [rbp - 0x78]
0x400310:	mov	edx, 0x63
0x400315:	mov	esi, 0x41
0x40031a:	mov	rdi, rax
0x40031d:	call	0x500000
<Block for 0x4002b8, 5 bytes>
0x4002b8:	cmp	rsp, rdx
0x4002bb:	je	0x4002cf
<Block for 0x400322, 22 bytes>
0x400322:	mov	rax, qword ptr [rbp - 0x78]
0x400326:	add	rax, 0x63
0x40032a:	mov	byte ptr [rax], 0
0x40032d:	mov	eax, dword ptr [rip + 0xffcd5]
0x400333:	cmp	eax, 5
0x400336:	jne	0x400340
<Block for 0x400338, 30 bytes>
0x400338:	mov	rax, qword ptr [rbp - 0x78]
0x40033c:	mov	qword ptr [rbp - 0x80], rax
0x400340:	lea	rax, [rbp - 0x70]
0x400344:	mov	edx, 0x63
0x400349:	mov	esi, 0x43
0x40034e:	mov	rdi, rax
0x400351:	call	0x500000
<Block for 0x400340, 22 bytes>
0x400340:	lea	rax, [rbp - 0x70]
0x400344:	mov	edx, 0x63
0x400349:	mov	esi, 0x43
0x40034e:	mov	rdi, rax
0x400351:	call	0x500000
<Block for 0x400356, 28 bytes>
0x400356:	mov	byte ptr [rbp - 0xd], 0
0x40035a:	mov	rcx, qword ptr [rbp - 0x80]
0x40035e:	lea	rax, [rbp - 0x70]
0x400362:	mov	edx, 0x64
0x400367:	mov	rsi, rcx
0x40036a:	mov	rdi, rax
0x40036d:	call	0x500010
<Block for 0x400372, 16 bytes>
0x400372:	mov	byte ptr [rbp - 0xd], 0
0x400376:	lea	rax, [rbp - 0x70]
0x40037a:	mov	rdi, rax
0x40037d:	call	0x500018
<Block for 0x400382, 16 bytes>
0x400382:	nop	
0x400383:	mov	rax, qword ptr [rbp - 8]
0x400387:	xor	rax, qword ptr fs:[0x28]
0x400390:	je	0x400397
<Block for 0x400397, 2 bytes>
0x400397:	leave	
0x400398:	ret	
<Block for 0x400392, 5 bytes>
0x400392:	call	0x500020
