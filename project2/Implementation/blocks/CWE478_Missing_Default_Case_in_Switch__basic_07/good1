<Block for 0x40008e, 23 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x10
0x40009a:	mov	eax, dword ptr [rip + 0x138]
0x4000a0:	cmp	eax, 5
0x4000a3:	je	0x4000b3
<Block for 0x4000b3, 16 bytes>
0x4000b3:	lea	rax, [rip + 0x122]
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	call	0x500000
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x14d]
0x4000ac:	call	0x500008
<Block for 0x4000c3, 55 bytes>
0x4000c3:	mov	edx, eax
0x4000c5:	movsxd	rax, edx
0x4000c8:	imul	rax, rax, 0x55555556
0x4000cf:	shr	rax, 0x20
0x4000d3:	mov	rcx, rax
0x4000d6:	mov	eax, edx
0x4000d8:	sar	eax, 0x1f
0x4000db:	mov	esi, ecx
0x4000dd:	sub	esi, eax
0x4000df:	mov	eax, esi
0x4000e1:	mov	dword ptr [rbp - 0xc], eax
0x4000e4:	mov	ecx, dword ptr [rbp - 0xc]
0x4000e7:	mov	eax, ecx
0x4000e9:	add	eax, eax
0x4000eb:	add	eax, ecx
0x4000ed:	sub	edx, eax
0x4000ef:	mov	eax, edx
0x4000f1:	mov	dword ptr [rbp - 0xc], eax
0x4000f4:	cmp	dword ptr [rbp - 0xc], 0
0x4000f8:	je	0x400102
<Block for 0x4000b1, 2 bytes>
0x4000b1:	jmp	0x400127
<Block for 0x400102, 13 bytes>
0x400102:	lea	rax, [rip + 0xec]
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	jmp	0x40011b
<Block for 0x4000fa, 6 bytes>
0x4000fa:	cmp	dword ptr [rbp - 0xc], 1
0x4000fe:	je	0x40010f
<Block for 0x400127, 2 bytes>
0x400127:	leave	
0x400128:	ret	
<Block for 0x40011b, 12 bytes>
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x40010f, 24 bytes>
0x40010f:	lea	rax, [rip + 0xe1]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	nop	
0x40011b:	mov	rax, qword ptr [rbp - 8]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500008
<Block for 0x400100, 2 bytes>
0x400100:	jmp	0x400127
