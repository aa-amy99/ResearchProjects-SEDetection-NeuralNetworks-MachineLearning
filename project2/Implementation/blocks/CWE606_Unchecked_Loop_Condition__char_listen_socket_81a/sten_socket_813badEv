<Block for 0x400000, 179 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0xa0], rax
0x400090:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x40009a:	mov	dword ptr [rbp - 0xb4], 0xffffffff
0x4000a4:	mov	rax, qword ptr [rbp - 0xa0]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x4000b3, 27 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x98], rax
0x4000ba:	mov	edx, 6
0x4000bf:	mov	esi, 1
0x4000c4:	mov	edi, 2
0x4000c9:	call	0x500008
<Block for 0x4000ce, 19 bytes>
0x4000ce:	mov	dword ptr [rbp - 0xb0], eax
0x4000d4:	cmp	dword ptr [rbp - 0xb0], -1
0x4000db:	je	0x400256
<Block for 0x400256, 3 bytes>
0x400256:	nop	
0x400257:	jmp	0x400260
<Block for 0x4000e1, 22 bytes>
0x4000e1:	lea	rax, [rbp - 0x80]
0x4000e5:	mov	edx, 0x10
0x4000ea:	mov	esi, 0
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500010
<Block for 0x400260, 9 bytes>
0x400260:	cmp	dword ptr [rbp - 0xb0], -1
0x400267:	je	0x400276
<Block for 0x4000f7, 23 bytes>
0x4000f7:	mov	word ptr [rbp - 0x80], 2
0x4000fd:	mov	dword ptr [rbp - 0x7c], 0
0x400104:	mov	edi, 0x6987
0x400109:	call	0x500018
<Block for 0x400276, 9 bytes>
0x400276:	cmp	dword ptr [rbp - 0xb4], -1
0x40027d:	je	0x40028c
<Block for 0x400269, 13 bytes>
0x400269:	mov	eax, dword ptr [rbp - 0xb0]
0x40026f:	mov	edi, eax
0x400271:	call	0x500048
<Block for 0x40010e, 29 bytes>
0x40010e:	mov	word ptr [rbp - 0x7e], ax
0x400112:	lea	rcx, [rbp - 0x80]
0x400116:	mov	eax, dword ptr [rbp - 0xb0]
0x40011c:	mov	edx, 0x10
0x400121:	mov	rsi, rcx
0x400124:	mov	edi, eax
0x400126:	call	0x500020
<Block for 0x40028c, 63 bytes>
0x40028c:	lea	rax, [rip + 0xffdcd]
0x400293:	mov	qword ptr [rbp - 0xa8], rax
0x40029a:	lea	rax, [rbp - 0xa8]
0x4002a1:	mov	qword ptr [rbp - 0x88], rax
0x4002a8:	mov	rax, qword ptr [rbp - 0x88]
0x4002af:	mov	rax, qword ptr [rax]
0x4002b2:	mov	rcx, qword ptr [rax]
0x4002b5:	mov	rdx, qword ptr [rbp - 0xa0]
0x4002bc:	mov	rax, qword ptr [rbp - 0x88]
0x4002c3:	mov	rsi, rdx
0x4002c6:	mov	rdi, rax
0x4002c9:	call	rcx
<Block for 0x40027f, 13 bytes>
0x40027f:	mov	eax, dword ptr [rbp - 0xb4]
0x400285:	mov	edi, eax
0x400287:	call	0x500048
<Block for 0x40012b, 14 bytes>
0x40012b:	cmp	eax, -1
0x40012e:	sete	al
0x400131:	test	al, al
0x400133:	jne	0x400259
<Block for 0x4002cb, 16 bytes>
0x4002cb:	nop	
0x4002cc:	mov	rax, qword ptr [rbp - 8]
0x4002d0:	xor	rax, qword ptr fs:[0x28]
0x4002d9:	je	0x4002e0
<Block for 0x400139, 18 bytes>
0x400139:	mov	eax, dword ptr [rbp - 0xb0]
0x40013f:	mov	esi, 5
0x400144:	mov	edi, eax
0x400146:	call	0x500028
<Block for 0x400259, 3 bytes>
0x400259:	nop	
0x40025a:	jmp	0x400260
<Block for 0x4002e0, 2 bytes>
0x4002e0:	leave	
0x4002e1:	ret	
<Block for 0x4002db, 5 bytes>
0x4002db:	call	0x500058
<Block for 0x40014b, 14 bytes>
0x40014b:	cmp	eax, -1
0x40014e:	sete	al
0x400151:	test	al, al
0x400153:	jne	0x40025c
<Block for 0x400159, 23 bytes>
0x400159:	mov	eax, dword ptr [rbp - 0xb0]
0x40015f:	mov	edx, 0
0x400164:	mov	esi, 0
0x400169:	mov	edi, eax
0x40016b:	call	0x500030
<Block for 0x40025c, 3 bytes>
0x40025c:	nop	
0x40025d:	jmp	0x400260
<Block for 0x400170, 19 bytes>
0x400170:	mov	dword ptr [rbp - 0xb4], eax
0x400176:	cmp	dword ptr [rbp - 0xb4], -1
0x40017d:	je	0x40025f
<Block for 0x400183, 51 bytes>
0x400183:	mov	eax, 0x63
0x400188:	sub	rax, qword ptr [rbp - 0x98]
0x40018f:	mov	rdx, rax
0x400192:	mov	rcx, qword ptr [rbp - 0xa0]
0x400199:	mov	rax, qword ptr [rbp - 0x98]
0x4001a0:	lea	rsi, [rcx + rax]
0x4001a4:	mov	eax, dword ptr [rbp - 0xb4]
0x4001aa:	mov	ecx, 0
0x4001af:	mov	edi, eax
0x4001b1:	call	0x500038
<Block for 0x40025f, 1 bytes>
0x40025f:	nop	
<Block for 0x4001b6, 19 bytes>
0x4001b6:	mov	dword ptr [rbp - 0xac], eax
0x4001bc:	cmp	dword ptr [rbp - 0xac], -1
0x4001c3:	je	0x400260
<Block for 0x4001c9, 13 bytes>
0x4001c9:	cmp	dword ptr [rbp - 0xac], 0
0x4001d0:	je	0x400260
<Block for 0x4001d6, 52 bytes>
0x4001d6:	mov	eax, dword ptr [rbp - 0xac]
0x4001dc:	movsxd	rdx, eax
0x4001df:	mov	rax, qword ptr [rbp - 0x98]
0x4001e6:	add	rdx, rax
0x4001e9:	mov	rax, qword ptr [rbp - 0xa0]
0x4001f0:	add	rax, rdx
0x4001f3:	mov	byte ptr [rax], 0
0x4001f6:	mov	rax, qword ptr [rbp - 0xa0]
0x4001fd:	mov	esi, 0xd
0x400202:	mov	rdi, rax
0x400205:	call	0x500040
<Block for 0x40020a, 17 bytes>
0x40020a:	mov	qword ptr [rbp - 0x90], rax
0x400211:	cmp	qword ptr [rbp - 0x90], 0
0x400219:	je	0x400225
<Block for 0x400225, 20 bytes>
0x400225:	mov	rax, qword ptr [rbp - 0xa0]
0x40022c:	mov	esi, 0xa
0x400231:	mov	rdi, rax
0x400234:	call	0x500040
<Block for 0x40021b, 30 bytes>
0x40021b:	mov	rax, qword ptr [rbp - 0x90]
0x400222:	mov	byte ptr [rax], 0
0x400225:	mov	rax, qword ptr [rbp - 0xa0]
0x40022c:	mov	esi, 0xa
0x400231:	mov	rdi, rax
0x400234:	call	0x500040
<Block for 0x400239, 17 bytes>
0x400239:	mov	qword ptr [rbp - 0x90], rax
0x400240:	cmp	qword ptr [rbp - 0x90], 0
0x400248:	je	0x400260
<Block for 0x40024a, 12 bytes>
0x40024a:	mov	rax, qword ptr [rbp - 0x90]
0x400251:	mov	byte ptr [rax], 0
0x400254:	jmp	0x400260
