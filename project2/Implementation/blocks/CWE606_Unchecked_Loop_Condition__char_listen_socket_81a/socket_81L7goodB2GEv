<Block for 0x4003c6, 179 bytes>
0x4003c6:	endbr64	
0x4003ca:	push	rbp
0x4003cb:	mov	rbp, rsp
0x4003ce:	sub	rsp, 0xc0
0x4003d5:	mov	rax, qword ptr fs:[0x28]
0x4003de:	mov	qword ptr [rbp - 8], rax
0x4003e2:	xor	eax, eax
0x4003e4:	mov	qword ptr [rbp - 0x70], 0
0x4003ec:	mov	qword ptr [rbp - 0x68], 0
0x4003f4:	mov	qword ptr [rbp - 0x60], 0
0x4003fc:	mov	qword ptr [rbp - 0x58], 0
0x400404:	mov	qword ptr [rbp - 0x50], 0
0x40040c:	mov	qword ptr [rbp - 0x48], 0
0x400414:	mov	qword ptr [rbp - 0x40], 0
0x40041c:	mov	qword ptr [rbp - 0x38], 0
0x400424:	mov	qword ptr [rbp - 0x30], 0
0x40042c:	mov	qword ptr [rbp - 0x28], 0
0x400434:	mov	qword ptr [rbp - 0x20], 0
0x40043c:	mov	qword ptr [rbp - 0x18], 0
0x400444:	mov	dword ptr [rbp - 0x10], 0
0x40044b:	lea	rax, [rbp - 0x70]
0x40044f:	mov	qword ptr [rbp - 0xa0], rax
0x400456:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400460:	mov	dword ptr [rbp - 0xb4], 0xffffffff
0x40046a:	mov	rax, qword ptr [rbp - 0xa0]
0x400471:	mov	rdi, rax
0x400474:	call	0x500000
<Block for 0x400479, 27 bytes>
0x400479:	mov	qword ptr [rbp - 0x98], rax
0x400480:	mov	edx, 6
0x400485:	mov	esi, 1
0x40048a:	mov	edi, 2
0x40048f:	call	0x500008
<Block for 0x400494, 19 bytes>
0x400494:	mov	dword ptr [rbp - 0xb0], eax
0x40049a:	cmp	dword ptr [rbp - 0xb0], -1
0x4004a1:	je	0x40061c
<Block for 0x40061c, 3 bytes>
0x40061c:	nop	
0x40061d:	jmp	0x400626
<Block for 0x4004a7, 22 bytes>
0x4004a7:	lea	rax, [rbp - 0x80]
0x4004ab:	mov	edx, 0x10
0x4004b0:	mov	esi, 0
0x4004b5:	mov	rdi, rax
0x4004b8:	call	0x500010
<Block for 0x400626, 9 bytes>
0x400626:	cmp	dword ptr [rbp - 0xb0], -1
0x40062d:	je	0x40063c
<Block for 0x4004bd, 23 bytes>
0x4004bd:	mov	word ptr [rbp - 0x80], 2
0x4004c3:	mov	dword ptr [rbp - 0x7c], 0
0x4004ca:	mov	edi, 0x6987
0x4004cf:	call	0x500018
<Block for 0x40063c, 9 bytes>
0x40063c:	cmp	dword ptr [rbp - 0xb4], -1
0x400643:	je	0x400652
<Block for 0x40062f, 13 bytes>
0x40062f:	mov	eax, dword ptr [rbp - 0xb0]
0x400635:	mov	edi, eax
0x400637:	call	0x500048
<Block for 0x4004d4, 29 bytes>
0x4004d4:	mov	word ptr [rbp - 0x7e], ax
0x4004d8:	lea	rcx, [rbp - 0x80]
0x4004dc:	mov	eax, dword ptr [rbp - 0xb0]
0x4004e2:	mov	edx, 0x10
0x4004e7:	mov	rsi, rcx
0x4004ea:	mov	edi, eax
0x4004ec:	call	0x500020
<Block for 0x400652, 63 bytes>
0x400652:	lea	rax, [rip + 0xffa1f]
0x400659:	mov	qword ptr [rbp - 0xa8], rax
0x400660:	lea	rax, [rbp - 0xa8]
0x400667:	mov	qword ptr [rbp - 0x88], rax
0x40066e:	mov	rax, qword ptr [rbp - 0x88]
0x400675:	mov	rax, qword ptr [rax]
0x400678:	mov	rcx, qword ptr [rax]
0x40067b:	mov	rdx, qword ptr [rbp - 0xa0]
0x400682:	mov	rax, qword ptr [rbp - 0x88]
0x400689:	mov	rsi, rdx
0x40068c:	mov	rdi, rax
0x40068f:	call	rcx
<Block for 0x400645, 13 bytes>
0x400645:	mov	eax, dword ptr [rbp - 0xb4]
0x40064b:	mov	edi, eax
0x40064d:	call	0x500048
<Block for 0x4004f1, 14 bytes>
0x4004f1:	cmp	eax, -1
0x4004f4:	sete	al
0x4004f7:	test	al, al
0x4004f9:	jne	0x40061f
<Block for 0x400691, 16 bytes>
0x400691:	nop	
0x400692:	mov	rax, qword ptr [rbp - 8]
0x400696:	xor	rax, qword ptr fs:[0x28]
0x40069f:	je	0x4006a6
<Block for 0x4004ff, 18 bytes>
0x4004ff:	mov	eax, dword ptr [rbp - 0xb0]
0x400505:	mov	esi, 5
0x40050a:	mov	edi, eax
0x40050c:	call	0x500028
<Block for 0x40061f, 3 bytes>
0x40061f:	nop	
0x400620:	jmp	0x400626
<Block for 0x4006a6, 2 bytes>
0x4006a6:	leave	
0x4006a7:	ret	
<Block for 0x4006a1, 5 bytes>
0x4006a1:	call	0x500058
<Block for 0x400511, 14 bytes>
0x400511:	cmp	eax, -1
0x400514:	sete	al
0x400517:	test	al, al
0x400519:	jne	0x400622
<Block for 0x40051f, 23 bytes>
0x40051f:	mov	eax, dword ptr [rbp - 0xb0]
0x400525:	mov	edx, 0
0x40052a:	mov	esi, 0
0x40052f:	mov	edi, eax
0x400531:	call	0x500030
<Block for 0x400622, 3 bytes>
0x400622:	nop	
0x400623:	jmp	0x400626
<Block for 0x400536, 19 bytes>
0x400536:	mov	dword ptr [rbp - 0xb4], eax
0x40053c:	cmp	dword ptr [rbp - 0xb4], -1
0x400543:	je	0x400625
<Block for 0x400549, 51 bytes>
0x400549:	mov	eax, 0x63
0x40054e:	sub	rax, qword ptr [rbp - 0x98]
0x400555:	mov	rdx, rax
0x400558:	mov	rcx, qword ptr [rbp - 0xa0]
0x40055f:	mov	rax, qword ptr [rbp - 0x98]
0x400566:	lea	rsi, [rcx + rax]
0x40056a:	mov	eax, dword ptr [rbp - 0xb4]
0x400570:	mov	ecx, 0
0x400575:	mov	edi, eax
0x400577:	call	0x500038
<Block for 0x400625, 1 bytes>
0x400625:	nop	
<Block for 0x40057c, 19 bytes>
0x40057c:	mov	dword ptr [rbp - 0xac], eax
0x400582:	cmp	dword ptr [rbp - 0xac], -1
0x400589:	je	0x400626
<Block for 0x40058f, 13 bytes>
0x40058f:	cmp	dword ptr [rbp - 0xac], 0
0x400596:	je	0x400626
<Block for 0x40059c, 52 bytes>
0x40059c:	mov	eax, dword ptr [rbp - 0xac]
0x4005a2:	movsxd	rdx, eax
0x4005a5:	mov	rax, qword ptr [rbp - 0x98]
0x4005ac:	add	rdx, rax
0x4005af:	mov	rax, qword ptr [rbp - 0xa0]
0x4005b6:	add	rax, rdx
0x4005b9:	mov	byte ptr [rax], 0
0x4005bc:	mov	rax, qword ptr [rbp - 0xa0]
0x4005c3:	mov	esi, 0xd
0x4005c8:	mov	rdi, rax
0x4005cb:	call	0x500040
<Block for 0x4005d0, 17 bytes>
0x4005d0:	mov	qword ptr [rbp - 0x90], rax
0x4005d7:	cmp	qword ptr [rbp - 0x90], 0
0x4005df:	je	0x4005eb
<Block for 0x4005eb, 20 bytes>
0x4005eb:	mov	rax, qword ptr [rbp - 0xa0]
0x4005f2:	mov	esi, 0xa
0x4005f7:	mov	rdi, rax
0x4005fa:	call	0x500040
<Block for 0x4005e1, 30 bytes>
0x4005e1:	mov	rax, qword ptr [rbp - 0x90]
0x4005e8:	mov	byte ptr [rax], 0
0x4005eb:	mov	rax, qword ptr [rbp - 0xa0]
0x4005f2:	mov	esi, 0xa
0x4005f7:	mov	rdi, rax
0x4005fa:	call	0x500040
<Block for 0x4005ff, 17 bytes>
0x4005ff:	mov	qword ptr [rbp - 0x90], rax
0x400606:	cmp	qword ptr [rbp - 0x90], 0
0x40060e:	je	0x400626
<Block for 0x400610, 12 bytes>
0x400610:	mov	rax, qword ptr [rbp - 0x90]
0x400617:	mov	byte ptr [rax], 0
0x40061a:	jmp	0x400626
