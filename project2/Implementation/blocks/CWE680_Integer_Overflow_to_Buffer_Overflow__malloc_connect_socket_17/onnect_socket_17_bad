<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x50], 0
0x400029:	jmp	0x400104
<Block for 0x400104, 10 bytes>
0x400104:	cmp	dword ptr [rbp - 0x50], 0
0x400108:	jle	0x40002e
<Block for 0x40002e, 27 bytes>
0x40002e:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400035:	mov	edx, 6
0x40003a:	mov	esi, 1
0x40003f:	mov	edi, 2
0x400044:	call	0x500000
<Block for 0x40010e, 17 bytes>
0x40010e:	mov	eax, dword ptr [rbp - 0x4c]
0x400111:	cdqe	
0x400113:	shl	rax, 2
0x400117:	mov	rdi, rax
0x40011a:	call	0x500040
<Block for 0x400049, 13 bytes>
0x400049:	mov	dword ptr [rbp - 0x48], eax
0x40004c:	cmp	dword ptr [rbp - 0x48], -1
0x400050:	je	0x4000ec
<Block for 0x40011f, 11 bytes>
0x40011f:	mov	qword ptr [rbp - 0x38], rax
0x400123:	cmp	qword ptr [rbp - 0x38], 0
0x400128:	jne	0x400134
<Block for 0x4000ec, 3 bytes>
0x4000ec:	nop	
0x4000ed:	jmp	0x4000f0
<Block for 0x400056, 22 bytes>
0x400056:	lea	rax, [rbp - 0x30]
0x40005a:	mov	edx, 0x10
0x40005f:	mov	esi, 0
0x400064:	mov	rdi, rax
0x400067:	call	0x500008
<Block for 0x40012a, 10 bytes>
0x40012a:	mov	edi, 0xffffffff
0x40012f:	call	0x500048
<Block for 0x400134, 10 bytes>
0x400134:	mov	qword ptr [rbp - 0x40], 0
0x40013c:	jmp	0x40015c
<Block for 0x4000f0, 6 bytes>
0x4000f0:	cmp	dword ptr [rbp - 0x48], -1
0x4000f4:	je	0x400100
<Block for 0x40006c, 18 bytes>
0x40006c:	mov	word ptr [rbp - 0x30], 2
0x400072:	lea	rdi, [rip + 0x1d5]
0x400079:	call	0x500010
<Block for 0x40015c, 11 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x4c]
0x40015f:	cdqe	
0x400161:	cmp	qword ptr [rbp - 0x40], rax
0x400165:	jb	0x40013e
<Block for 0x400100, 14 bytes>
0x400100:	add	dword ptr [rbp - 0x50], 1
0x400104:	cmp	dword ptr [rbp - 0x50], 0
0x400108:	jle	0x40002e
<Block for 0x4000f6, 10 bytes>
0x4000f6:	mov	eax, dword ptr [rbp - 0x48]
0x4000f9:	mov	edi, eax
0x4000fb:	call	0x500038
<Block for 0x40007e, 13 bytes>
0x40007e:	mov	dword ptr [rbp - 0x2c], eax
0x400081:	mov	edi, 0x6987
0x400086:	call	0x500018
<Block for 0x40013e, 41 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x40]
0x400142:	lea	rdx, [rax*4]
0x40014a:	mov	rax, qword ptr [rbp - 0x38]
0x40014e:	add	rax, rdx
0x400151:	mov	dword ptr [rax], 0
0x400157:	add	qword ptr [rbp - 0x40], 1
0x40015c:	mov	eax, dword ptr [rbp - 0x4c]
0x40015f:	cdqe	
0x400161:	cmp	qword ptr [rbp - 0x40], rax
0x400165:	jb	0x40013e
<Block for 0x400167, 13 bytes>
0x400167:	mov	rax, qword ptr [rbp - 0x38]
0x40016b:	mov	eax, dword ptr [rax]
0x40016d:	mov	edi, eax
0x40016f:	call	0x500050
<Block for 0x40008b, 26 bytes>
0x40008b:	mov	word ptr [rbp - 0x2e], ax
0x40008f:	lea	rcx, [rbp - 0x30]
0x400093:	mov	eax, dword ptr [rbp - 0x48]
0x400096:	mov	edx, 0x10
0x40009b:	mov	rsi, rcx
0x40009e:	mov	edi, eax
0x4000a0:	call	0x500020
<Block for 0x400174, 12 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0x38]
0x400178:	mov	rdi, rax
0x40017b:	call	0x500058
<Block for 0x4000a5, 5 bytes>
0x4000a5:	cmp	eax, -1
0x4000a8:	je	0x4000ef
<Block for 0x400180, 16 bytes>
0x400180:	nop	
0x400181:	mov	rax, qword ptr [rbp - 8]
0x400185:	xor	rax, qword ptr fs:[0x28]
0x40018e:	je	0x400195
<Block for 0x4000aa, 24 bytes>
0x4000aa:	lea	rsi, [rbp - 0x16]
0x4000ae:	mov	eax, dword ptr [rbp - 0x48]
0x4000b1:	mov	ecx, 0
0x4000b6:	mov	edx, 0xd
0x4000bb:	mov	edi, eax
0x4000bd:	call	0x500028
<Block for 0x4000ef, 1 bytes>
0x4000ef:	nop	
<Block for 0x400195, 2 bytes>
0x400195:	leave	
0x400196:	ret	
<Block for 0x400190, 5 bytes>
0x400190:	call	0x500060
<Block for 0x4000c2, 9 bytes>
0x4000c2:	mov	dword ptr [rbp - 0x44], eax
0x4000c5:	cmp	dword ptr [rbp - 0x44], -1
0x4000c9:	je	0x4000f0
<Block for 0x4000cb, 6 bytes>
0x4000cb:	cmp	dword ptr [rbp - 0x44], 0
0x4000cf:	je	0x4000f0
<Block for 0x4000d1, 22 bytes>
0x4000d1:	mov	eax, dword ptr [rbp - 0x44]
0x4000d4:	cdqe	
0x4000d6:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000db:	lea	rax, [rbp - 0x16]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x500030
<Block for 0x4000e7, 5 bytes>
0x4000e7:	mov	dword ptr [rbp - 0x4c], eax
0x4000ea:	jmp	0x4000f0
