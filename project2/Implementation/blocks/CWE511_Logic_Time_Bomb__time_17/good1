<Block for 0x400069, 36 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x20
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x14], 0
0x40008b:	jmp	0x4000b5
<Block for 0x4000b5, 6 bytes>
0x4000b5:	cmp	dword ptr [rbp - 0x14], 0
0x4000b9:	jle	0x40008d
<Block for 0x40008d, 12 bytes>
0x40008d:	lea	rax, [rbp - 0x10]
0x400091:	mov	rdi, rax
0x400094:	call	0x500000
<Block for 0x4000bb, 16 bytes>
0x4000bb:	nop	
0x4000bc:	mov	rax, qword ptr [rbp - 8]
0x4000c0:	xor	rax, qword ptr fs:[0x28]
0x4000c9:	je	0x4000d0
<Block for 0x400099, 12 bytes>
0x400099:	mov	rax, qword ptr [rbp - 0x10]
0x40009d:	cmp	rax, 0x4779c8d0
0x4000a3:	jle	0x4000b1
<Block for 0x4000d0, 2 bytes>
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500010
<Block for 0x4000b1, 10 bytes>
0x4000b1:	add	dword ptr [rbp - 0x14], 1
0x4000b5:	cmp	dword ptr [rbp - 0x14], 0
0x4000b9:	jle	0x40008d
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x4e]
0x4000ac:	call	0x500018
