<Block for 0x400347, 154 bytes>
0x400347:	endbr64	
0x40034b:	push	rbp
0x40034c:	mov	rbp, rsp
0x40034f:	sub	rsp, 0xd0
0x400356:	mov	rax, qword ptr fs:[0x28]
0x40035f:	mov	qword ptr [rbp - 8], rax
0x400363:	xor	eax, eax
0x400365:	mov	qword ptr [rbp - 0x70], 0
0x40036d:	mov	qword ptr [rbp - 0x68], 0
0x400375:	mov	qword ptr [rbp - 0x60], 0
0x40037d:	mov	qword ptr [rbp - 0x58], 0
0x400385:	mov	qword ptr [rbp - 0x50], 0
0x40038d:	mov	qword ptr [rbp - 0x48], 0
0x400395:	mov	qword ptr [rbp - 0x40], 0
0x40039d:	mov	qword ptr [rbp - 0x38], 0
0x4003a5:	mov	qword ptr [rbp - 0x30], 0
0x4003ad:	mov	qword ptr [rbp - 0x28], 0
0x4003b5:	mov	qword ptr [rbp - 0x20], 0
0x4003bd:	mov	qword ptr [rbp - 0x18], 0
0x4003c5:	mov	dword ptr [rbp - 0x10], 0
0x4003cc:	lea	rax, [rbp - 0x70]
0x4003d0:	mov	qword ptr [rbp - 0xa8], rax
0x4003d7:	mov	eax, 0
0x4003dc:	call	0x500000
<Block for 0x4003e1, 8 bytes>
0x4003e1:	test	eax, eax
0x4003e3:	je	0x400581
<Block for 0x400581, 25 bytes>
0x400581:	mov	dword ptr [rbp - 0xb8], 0xffffffff
0x40058b:	mov	rax, qword ptr [rbp - 0xa8]
0x400592:	mov	rdi, rax
0x400595:	call	0x500008
<Block for 0x4003e9, 25 bytes>
0x4003e9:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x4003f3:	mov	rax, qword ptr [rbp - 0xa8]
0x4003fa:	mov	rdi, rax
0x4003fd:	call	0x500008
<Block for 0x40059a, 27 bytes>
0x40059a:	mov	qword ptr [rbp - 0xa0], rax
0x4005a1:	mov	edx, 6
0x4005a6:	mov	esi, 1
0x4005ab:	mov	edi, 2
0x4005b0:	call	0x500010
<Block for 0x400402, 27 bytes>
0x400402:	mov	qword ptr [rbp - 0x90], rax
0x400409:	mov	edx, 6
0x40040e:	mov	esi, 1
0x400413:	mov	edi, 2
0x400418:	call	0x500010
<Block for 0x4005b5, 19 bytes>
0x4005b5:	mov	dword ptr [rbp - 0xb8], eax
0x4005bb:	cmp	dword ptr [rbp - 0xb8], -1
0x4005c2:	je	0x4006f6
<Block for 0x40041d, 19 bytes>
0x40041d:	mov	dword ptr [rbp - 0xb0], eax
0x400423:	cmp	dword ptr [rbp - 0xb0], -1
0x40042a:	je	0x40055e
<Block for 0x4006f6, 3 bytes>
0x4006f6:	nop	
0x4006f7:	jmp	0x4006fa
<Block for 0x4005c8, 22 bytes>
0x4005c8:	lea	rax, [rbp - 0x80]
0x4005cc:	mov	edx, 0x10
0x4005d1:	mov	esi, 0
0x4005d6:	mov	rdi, rax
0x4005d9:	call	0x500018
<Block for 0x40055e, 3 bytes>
0x40055e:	nop	
0x40055f:	jmp	0x400562
<Block for 0x400430, 22 bytes>
0x400430:	lea	rax, [rbp - 0x80]
0x400434:	mov	edx, 0x10
0x400439:	mov	esi, 0
0x40043e:	mov	rdi, rax
0x400441:	call	0x500018
<Block for 0x4006fa, 9 bytes>
0x4006fa:	cmp	dword ptr [rbp - 0xb8], -1
0x400701:	je	0x400710
<Block for 0x4005de, 18 bytes>
0x4005de:	mov	word ptr [rbp - 0x80], 2
0x4005e4:	lea	rdi, [rip + 0x3ef]
0x4005eb:	call	0x500020
<Block for 0x400562, 13 bytes>
0x400562:	cmp	dword ptr [rbp - 0xb0], -1
0x400569:	je	0x400710
<Block for 0x400446, 18 bytes>
0x400446:	mov	word ptr [rbp - 0x80], 2
0x40044c:	lea	rdi, [rip + 0x587]
0x400453:	call	0x500020
<Block for 0x400710, 10 bytes>
0x400710:	mov	eax, 0
0x400715:	call	0x500000
<Block for 0x400703, 13 bytes>
0x400703:	mov	eax, dword ptr [rbp - 0xb8]
0x400709:	mov	edi, eax
0x40070b:	call	0x500048
<Block for 0x4005f0, 13 bytes>
0x4005f0:	mov	dword ptr [rbp - 0x7c], eax
0x4005f3:	mov	edi, 0x6987
0x4005f8:	call	0x500028
<Block for 0x40056f, 13 bytes>
0x40056f:	mov	eax, dword ptr [rbp - 0xb0]
0x400575:	mov	edi, eax
0x400577:	call	0x500048
<Block for 0x400458, 13 bytes>
0x400458:	mov	dword ptr [rbp - 0x7c], eax
0x40045b:	mov	edi, 0x6987
0x400460:	call	0x500028
<Block for 0x40071a, 4 bytes>
0x40071a:	test	eax, eax
0x40071c:	je	0x40079b
<Block for 0x4005fd, 29 bytes>
0x4005fd:	mov	word ptr [rbp - 0x7e], ax
0x400601:	lea	rcx, [rbp - 0x80]
0x400605:	mov	eax, dword ptr [rbp - 0xb8]
0x40060b:	mov	edx, 0x10
0x400610:	mov	rsi, rcx
0x400613:	mov	edi, eax
0x400615:	call	0x500030
<Block for 0x40057c, 5 bytes>
0x40057c:	jmp	0x400710
<Block for 0x400465, 29 bytes>
0x400465:	mov	word ptr [rbp - 0x7e], ax
0x400469:	lea	rcx, [rbp - 0x80]
0x40046d:	mov	eax, dword ptr [rbp - 0xb0]
0x400473:	mov	edx, 0x10
0x400478:	mov	rsi, rcx
0x40047b:	mov	edi, eax
0x40047d:	call	0x500030
<Block for 0x40079b, 34 bytes>
0x40079b:	lea	rdx, [rbp - 0xcc]
0x4007a2:	mov	rax, qword ptr [rbp - 0xa8]
0x4007a9:	lea	rsi, [rip + 0x234]
0x4007b0:	mov	rdi, rax
0x4007b3:	mov	eax, 0
0x4007b8:	call	0x500050
<Block for 0x40071e, 34 bytes>
0x40071e:	lea	rdx, [rbp - 0xcc]
0x400725:	mov	rax, qword ptr [rbp - 0xa8]
0x40072c:	lea	rsi, [rip + 0x2b1]
0x400733:	mov	rdi, rax
0x400736:	mov	eax, 0
0x40073b:	call	0x500050
<Block for 0x40061a, 9 bytes>
0x40061a:	cmp	eax, -1
0x40061d:	je	0x4006f9
<Block for 0x400482, 9 bytes>
0x400482:	cmp	eax, -1
0x400485:	je	0x400561
<Block for 0x4007bd, 5 bytes>
0x4007bd:	cmp	eax, 1
0x4007c0:	jne	0x40080e
<Block for 0x400740, 9 bytes>
0x400740:	cmp	eax, 1
0x400743:	jne	0x40080e
<Block for 0x400623, 51 bytes>
0x400623:	mov	eax, 0x63
0x400628:	sub	rax, qword ptr [rbp - 0xa0]
0x40062f:	mov	rdx, rax
0x400632:	mov	rcx, qword ptr [rbp - 0xa8]
0x400639:	mov	rax, qword ptr [rbp - 0xa0]
0x400640:	lea	rsi, [rcx + rax]
0x400644:	mov	eax, dword ptr [rbp - 0xb8]
0x40064a:	mov	ecx, 0
0x40064f:	mov	edi, eax
0x400651:	call	0x500038
<Block for 0x4006f9, 1 bytes>
0x4006f9:	nop	
<Block for 0x40048b, 51 bytes>
0x40048b:	mov	eax, 0x63
0x400490:	sub	rax, qword ptr [rbp - 0x90]
0x400497:	mov	rdx, rax
0x40049a:	mov	rcx, qword ptr [rbp - 0xa8]
0x4004a1:	mov	rax, qword ptr [rbp - 0x90]
0x4004a8:	lea	rsi, [rcx + rax]
0x4004ac:	mov	eax, dword ptr [rbp - 0xb0]
0x4004b2:	mov	ecx, 0
0x4004b7:	mov	edi, eax
0x4004b9:	call	0x500038
<Block for 0x400561, 1 bytes>
0x400561:	nop	
<Block for 0x4007c2, 13 bytes>
0x4007c2:	mov	eax, dword ptr [rbp - 0xcc]
0x4007c8:	cmp	eax, 0x270f
0x4007cd:	jg	0x40080e
<Block for 0x40080e, 16 bytes>
0x40080e:	nop	
0x40080f:	mov	rax, qword ptr [rbp - 8]
0x400813:	xor	rax, qword ptr fs:[0x28]
0x40081c:	je	0x400823
<Block for 0x400749, 17 bytes>
0x400749:	mov	eax, dword ptr [rbp - 0xcc]
0x40074f:	cmp	eax, 0x270f
0x400754:	jg	0x40080e
<Block for 0x400656, 19 bytes>
0x400656:	mov	dword ptr [rbp - 0xb4], eax
0x40065c:	cmp	dword ptr [rbp - 0xb4], -1
0x400663:	je	0x4006fa
<Block for 0x4004be, 19 bytes>
0x4004be:	mov	dword ptr [rbp - 0xac], eax
0x4004c4:	cmp	dword ptr [rbp - 0xac], -1
0x4004cb:	je	0x400562
<Block for 0x4007cf, 22 bytes>
0x4007cf:	mov	dword ptr [rbp - 0xbc], 0
0x4007d9:	mov	dword ptr [rbp - 0xc0], 0
0x4007e3:	jmp	0x4007f3
<Block for 0x400823, 2 bytes>
0x400823:	leave	
0x400824:	ret	
<Block for 0x40081e, 5 bytes>
0x40081e:	call	0x500060
<Block for 0x40075a, 22 bytes>
0x40075a:	mov	dword ptr [rbp - 0xc4], 0
0x400764:	mov	dword ptr [rbp - 0xc8], 0
0x40076e:	jmp	0x40077e
<Block for 0x400669, 13 bytes>
0x400669:	cmp	dword ptr [rbp - 0xb4], 0
0x400670:	je	0x4006fa
<Block for 0x4004d1, 13 bytes>
0x4004d1:	cmp	dword ptr [rbp - 0xac], 0
0x4004d8:	je	0x400562
<Block for 0x4007f3, 14 bytes>
0x4007f3:	mov	eax, dword ptr [rbp - 0xcc]
0x4007f9:	cmp	dword ptr [rbp - 0xc0], eax
0x4007ff:	jl	0x4007e5
<Block for 0x40077e, 14 bytes>
0x40077e:	mov	eax, dword ptr [rbp - 0xcc]
0x400784:	cmp	dword ptr [rbp - 0xc8], eax
0x40078a:	jl	0x400770
<Block for 0x400676, 52 bytes>
0x400676:	mov	eax, dword ptr [rbp - 0xb4]
0x40067c:	movsxd	rdx, eax
0x40067f:	mov	rax, qword ptr [rbp - 0xa0]
0x400686:	add	rdx, rax
0x400689:	mov	rax, qword ptr [rbp - 0xa8]
0x400690:	add	rax, rdx
0x400693:	mov	byte ptr [rax], 0
0x400696:	mov	rax, qword ptr [rbp - 0xa8]
0x40069d:	mov	esi, 0xd
0x4006a2:	mov	rdi, rax
0x4006a5:	call	0x500040
<Block for 0x4004de, 52 bytes>
0x4004de:	mov	eax, dword ptr [rbp - 0xac]
0x4004e4:	movsxd	rdx, eax
0x4004e7:	mov	rax, qword ptr [rbp - 0x90]
0x4004ee:	add	rdx, rax
0x4004f1:	mov	rax, qword ptr [rbp - 0xa8]
0x4004f8:	add	rax, rdx
0x4004fb:	mov	byte ptr [rax], 0
0x4004fe:	mov	rax, qword ptr [rbp - 0xa8]
0x400505:	mov	esi, 0xd
0x40050a:	mov	rdi, rax
0x40050d:	call	0x500040
<Block for 0x4007e5, 28 bytes>
0x4007e5:	add	dword ptr [rbp - 0xbc], 1
0x4007ec:	add	dword ptr [rbp - 0xc0], 1
0x4007f3:	mov	eax, dword ptr [rbp - 0xcc]
0x4007f9:	cmp	dword ptr [rbp - 0xc0], eax
0x4007ff:	jl	0x4007e5
<Block for 0x400801, 13 bytes>
0x400801:	mov	eax, dword ptr [rbp - 0xbc]
0x400807:	mov	edi, eax
0x400809:	call	0x500058
<Block for 0x400770, 28 bytes>
0x400770:	add	dword ptr [rbp - 0xc4], 1
0x400777:	add	dword ptr [rbp - 0xc8], 1
0x40077e:	mov	eax, dword ptr [rbp - 0xcc]
0x400784:	cmp	dword ptr [rbp - 0xc8], eax
0x40078a:	jl	0x400770
<Block for 0x40078c, 13 bytes>
0x40078c:	mov	eax, dword ptr [rbp - 0xc4]
0x400792:	mov	edi, eax
0x400794:	call	0x500058
<Block for 0x4006aa, 17 bytes>
0x4006aa:	mov	qword ptr [rbp - 0x98], rax
0x4006b1:	cmp	qword ptr [rbp - 0x98], 0
0x4006b9:	je	0x4006c5
<Block for 0x400512, 17 bytes>
0x400512:	mov	qword ptr [rbp - 0x88], rax
0x400519:	cmp	qword ptr [rbp - 0x88], 0
0x400521:	je	0x40052d
<Block for 0x400799, 2 bytes>
0x400799:	jmp	0x40080e
<Block for 0x4006c5, 20 bytes>
0x4006c5:	mov	rax, qword ptr [rbp - 0xa8]
0x4006cc:	mov	esi, 0xa
0x4006d1:	mov	rdi, rax
0x4006d4:	call	0x500040
<Block for 0x4006bb, 30 bytes>
0x4006bb:	mov	rax, qword ptr [rbp - 0x98]
0x4006c2:	mov	byte ptr [rax], 0
0x4006c5:	mov	rax, qword ptr [rbp - 0xa8]
0x4006cc:	mov	esi, 0xa
0x4006d1:	mov	rdi, rax
0x4006d4:	call	0x500040
<Block for 0x40052d, 20 bytes>
0x40052d:	mov	rax, qword ptr [rbp - 0xa8]
0x400534:	mov	esi, 0xa
0x400539:	mov	rdi, rax
0x40053c:	call	0x500040
<Block for 0x400523, 30 bytes>
0x400523:	mov	rax, qword ptr [rbp - 0x88]
0x40052a:	mov	byte ptr [rax], 0
0x40052d:	mov	rax, qword ptr [rbp - 0xa8]
0x400534:	mov	esi, 0xa
0x400539:	mov	rdi, rax
0x40053c:	call	0x500040
<Block for 0x4006d9, 17 bytes>
0x4006d9:	mov	qword ptr [rbp - 0x98], rax
0x4006e0:	cmp	qword ptr [rbp - 0x98], 0
0x4006e8:	je	0x4006fa
<Block for 0x400541, 17 bytes>
0x400541:	mov	qword ptr [rbp - 0x88], rax
0x400548:	cmp	qword ptr [rbp - 0x88], 0
0x400550:	je	0x400562
<Block for 0x4006ea, 12 bytes>
0x4006ea:	mov	rax, qword ptr [rbp - 0x98]
0x4006f1:	mov	byte ptr [rax], 0
0x4006f4:	jmp	0x4006fa
<Block for 0x400552, 12 bytes>
0x400552:	mov	rax, qword ptr [rbp - 0x88]
0x400559:	mov	byte ptr [rax], 0
0x40055c:	jmp	0x400562
