<Block for 0x40008e, 53 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	add	rsp, -0x80
0x40009a:	mov	qword ptr [rbp - 0x78], rdi
0x40009e:	mov	rax, qword ptr fs:[0x28]
0x4000a7:	mov	qword ptr [rbp - 8], rax
0x4000ab:	xor	eax, eax
0x4000ad:	lea	rax, [rbp - 0x70]
0x4000b1:	mov	edx, 0x63
0x4000b6:	mov	esi, 0x43
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x4000c3, 16 bytes>
0x4000c3:	mov	byte ptr [rbp - 0xd], 0
0x4000c7:	lea	rax, [rbp - 0x70]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500008
<Block for 0x4000d3, 22 bytes>
0x4000d3:	mov	rdx, rax
0x4000d6:	mov	rcx, qword ptr [rbp - 0x78]
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	rsi, rcx
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500010
<Block for 0x4000e9, 16 bytes>
0x4000e9:	mov	byte ptr [rbp - 0xd], 0
0x4000ed:	lea	rax, [rbp - 0x70]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500018
<Block for 0x4000f9, 12 bytes>
0x4000f9:	mov	rax, qword ptr [rbp - 0x78]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500020
<Block for 0x400105, 16 bytes>
0x400105:	nop	
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	xor	rax, qword ptr fs:[0x28]
0x400113:	je	0x40011a
<Block for 0x40011a, 2 bytes>
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500028
