<Block for 0x400234, 49 bytes>
0x400234:	endbr64	
0x400238:	push	rbp
0x400239:	mov	rbp, rsp
0x40023c:	add	rsp, -0x80
0x400240:	mov	rax, qword ptr fs:[0x28]
0x400249:	mov	qword ptr [rbp - 8], rax
0x40024d:	xor	eax, eax
0x40024f:	lea	rax, [rbp - 0x70]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x41
0x40025d:	mov	rdi, rax
0x400260:	call	0x500000
<Block for 0x400265, 24 bytes>
0x400265:	mov	byte ptr [rbp - 0xd], 0
0x400269:	lea	rax, [rbp - 0x70]
0x40026d:	mov	qword ptr [rbp - 0x78], rax
0x400271:	mov	rax, qword ptr [rbp - 0x78]
0x400275:	mov	rdi, rax
0x400278:	call	0x40014c
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500010
