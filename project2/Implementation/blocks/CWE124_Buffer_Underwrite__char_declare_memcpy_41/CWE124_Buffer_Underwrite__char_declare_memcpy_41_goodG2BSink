<Block for 0x40014c, 60 bytes>
0x40014c:	endbr64	
0x400150:	push	rbp
0x400151:	mov	rbp, rsp
0x400154:	push	rbx
0x400155:	sub	rsp, 0x88
0x40015c:	mov	qword ptr [rbp - 0x88], rdi
0x400163:	mov	rax, qword ptr fs:[0x28]
0x40016c:	mov	qword ptr [rbp - 0x18], rax
0x400170:	xor	eax, eax
0x400172:	lea	rax, [rbp - 0x80]
0x400176:	mov	edx, 0x63
0x40017b:	mov	esi, 0x43
0x400180:	mov	rdi, rax
0x400183:	call	0x500000
<Block for 0x400188, 141 bytes>
0x400188:	mov	byte ptr [rbp - 0x1d], 0
0x40018c:	mov	rax, qword ptr [rbp - 0x88]
0x400193:	mov	rcx, qword ptr [rbp - 0x80]
0x400197:	mov	rbx, qword ptr [rbp - 0x78]
0x40019b:	mov	qword ptr [rax], rcx
0x40019e:	mov	qword ptr [rax + 8], rbx
0x4001a2:	mov	rcx, qword ptr [rbp - 0x70]
0x4001a6:	mov	rbx, qword ptr [rbp - 0x68]
0x4001aa:	mov	qword ptr [rax + 0x10], rcx
0x4001ae:	mov	qword ptr [rax + 0x18], rbx
0x4001b2:	mov	rcx, qword ptr [rbp - 0x60]
0x4001b6:	mov	rbx, qword ptr [rbp - 0x58]
0x4001ba:	mov	qword ptr [rax + 0x20], rcx
0x4001be:	mov	qword ptr [rax + 0x28], rbx
0x4001c2:	mov	rcx, qword ptr [rbp - 0x50]
0x4001c6:	mov	rbx, qword ptr [rbp - 0x48]
0x4001ca:	mov	qword ptr [rax + 0x30], rcx
0x4001ce:	mov	qword ptr [rax + 0x38], rbx
0x4001d2:	mov	rcx, qword ptr [rbp - 0x40]
0x4001d6:	mov	rbx, qword ptr [rbp - 0x38]
0x4001da:	mov	qword ptr [rax + 0x40], rcx
0x4001de:	mov	qword ptr [rax + 0x48], rbx
0x4001e2:	mov	rcx, qword ptr [rbp - 0x30]
0x4001e6:	mov	rbx, qword ptr [rbp - 0x28]
0x4001ea:	mov	qword ptr [rax + 0x50], rcx
0x4001ee:	mov	qword ptr [rax + 0x58], rbx
0x4001f2:	mov	edx, dword ptr [rbp - 0x20]
0x4001f5:	mov	dword ptr [rax + 0x60], edx
0x4001f8:	mov	rax, qword ptr [rbp - 0x88]
0x4001ff:	add	rax, 0x63
0x400203:	mov	byte ptr [rax], 0
0x400206:	mov	rax, qword ptr [rbp - 0x88]
0x40020d:	mov	rdi, rax
0x400210:	call	0x500008
<Block for 0x400215, 16 bytes>
0x400215:	nop	
0x400216:	mov	rax, qword ptr [rbp - 0x18]
0x40021a:	xor	rax, qword ptr fs:[0x28]
0x400223:	je	0x40022a
<Block for 0x40022a, 10 bytes>
0x40022a:	add	rsp, 0x88
0x400231:	pop	rbx
0x400232:	pop	rbp
0x400233:	ret	
<Block for 0x400225, 5 bytes>
0x400225:	call	0x500010
