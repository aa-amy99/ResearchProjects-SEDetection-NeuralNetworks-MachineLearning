<Block for 0x4000e8, 49 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	add	rsp, -0x80
0x4000f4:	mov	rax, qword ptr fs:[0x28]
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	xor	eax, eax
0x400103:	lea	rax, [rbp - 0x70]
0x400107:	mov	edx, 0x63
0x40010c:	mov	esi, 0x41
0x400111:	mov	rdi, rax
0x400114:	call	0x500000
<Block for 0x400119, 28 bytes>
0x400119:	mov	byte ptr [rbp - 0xd], 0
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	sub	rax, 8
0x400125:	mov	qword ptr [rbp - 0x78], rax
0x400129:	mov	rax, qword ptr [rbp - 0x78]
0x40012d:	mov	rdi, rax
0x400130:	call	0x400000
<Block for 0x400135, 16 bytes>
0x400135:	nop	
0x400136:	mov	rax, qword ptr [rbp - 8]
0x40013a:	xor	rax, qword ptr fs:[0x28]
0x400143:	je	0x40014a
<Block for 0x40014a, 2 bytes>
0x40014a:	leave	
0x40014b:	ret	
<Block for 0x400145, 5 bytes>
0x400145:	call	0x500010
