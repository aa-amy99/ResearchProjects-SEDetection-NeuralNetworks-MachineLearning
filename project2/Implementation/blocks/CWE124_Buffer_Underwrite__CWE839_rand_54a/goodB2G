<Block for 0x400096, 25 bytes>
0x400096:	endbr64	
0x40009a:	push	rbp
0x40009b:	mov	rbp, rsp
0x40009e:	push	rbx
0x40009f:	sub	rsp, 0x18
0x4000a3:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000aa:	call	0x500000
<Block for 0x4000af, 7 bytes>
0x4000af:	and	eax, 1
0x4000b2:	test	eax, eax
0x4000b4:	je	0x4000d3
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500000
<Block for 0x4000b6, 5 bytes>
0x4000b6:	call	0x500000
<Block for 0x4000d8, 10 bytes>
0x4000d8:	shl	eax, 0x1e
0x4000db:	mov	ebx, eax
0x4000dd:	call	0x500000
<Block for 0x4000bb, 10 bytes>
0x4000bb:	shl	eax, 0x1e
0x4000be:	mov	ebx, eax
0x4000c0:	call	0x500000
<Block for 0x4000e2, 10 bytes>
0x4000e2:	shl	eax, 0xf
0x4000e5:	xor	ebx, eax
0x4000e7:	call	0x500000
<Block for 0x4000c5, 10 bytes>
0x4000c5:	shl	eax, 0xf
0x4000c8:	xor	ebx, eax
0x4000ca:	call	0x500000
<Block for 0x4000ec, 17 bytes>
0x4000ec:	xor	eax, ebx
0x4000ee:	not	eax
0x4000f0:	mov	dword ptr [rbp - 0x14], eax
0x4000f3:	mov	eax, dword ptr [rbp - 0x14]
0x4000f6:	mov	edi, eax
0x4000f8:	call	0x500018
<Block for 0x4000cf, 4 bytes>
0x4000cf:	xor	eax, ebx
0x4000d1:	jmp	0x4000f0
<Block for 0x4000fd, 8 bytes>
0x4000fd:	nop	
0x4000fe:	add	rsp, 0x18
0x400102:	pop	rbx
0x400103:	pop	rbp
0x400104:	ret	
<Block for 0x4000f0, 13 bytes>
0x4000f0:	mov	dword ptr [rbp - 0x14], eax
0x4000f3:	mov	eax, dword ptr [rbp - 0x14]
0x4000f6:	mov	edi, eax
0x4000f8:	call	0x500018
