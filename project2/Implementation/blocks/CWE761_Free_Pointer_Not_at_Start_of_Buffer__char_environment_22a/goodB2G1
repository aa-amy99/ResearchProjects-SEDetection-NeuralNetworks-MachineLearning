<Block for 0x400098, 22 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0x20
0x4000a4:	mov	edi, 0x64
0x4000a9:	call	0x500000
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	qword ptr [rbp - 0x18], rax
0x4000b2:	cmp	qword ptr [rbp - 0x18], 0
0x4000b7:	jne	0x4000c3
<Block for 0x4000b9, 10 bytes>
0x4000b9:	mov	edi, 0xffffffff
0x4000be:	call	0x500008
<Block for 0x4000c3, 19 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x18]
0x4000c7:	mov	byte ptr [rax], 0
0x4000ca:	mov	rax, qword ptr [rbp - 0x18]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500010
<Block for 0x4000d6, 16 bytes>
0x4000d6:	mov	qword ptr [rbp - 0x10], rax
0x4000da:	lea	rdi, [rip + 0x113]
0x4000e1:	call	0x500018
<Block for 0x4000e6, 11 bytes>
0x4000e6:	mov	qword ptr [rbp - 8], rax
0x4000ea:	cmp	qword ptr [rbp - 8], 0
0x4000ef:	je	0x400117
<Block for 0x400117, 22 bytes>
0x400117:	mov	dword ptr [rip + 0xcb], 0
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	mov	rdi, rax
0x400128:	call	0x500030
<Block for 0x4000f1, 38 bytes>
0x4000f1:	mov	eax, 0x63
0x4000f6:	sub	rax, qword ptr [rbp - 0x10]
0x4000fa:	mov	rdx, rax
0x4000fd:	mov	rcx, qword ptr [rbp - 0x18]
0x400101:	mov	rax, qword ptr [rbp - 0x10]
0x400105:	add	rcx, rax
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	mov	rsi, rax
0x40010f:	mov	rdi, rcx
0x400112:	call	0x500020
<Block for 0x40012d, 3 bytes>
0x40012d:	nop	
0x40012e:	leave	
0x40012f:	ret	
