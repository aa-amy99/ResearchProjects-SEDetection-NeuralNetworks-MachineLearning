<Block for 0x400073, 22 bytes>
0x400073:	endbr64	
0x400077:	push	rbp
0x400078:	mov	rbp, rsp
0x40007b:	sub	rsp, 0x10
0x40007f:	mov	eax, 0
0x400084:	call	0x40000f
<Block for 0x400089, 4 bytes>
0x400089:	test	eax, eax
0x40008b:	je	0x40009b
<Block for 0x40009b, 5 bytes>
0x40009b:	call	0x500000
<Block for 0x40008d, 12 bytes>
0x40008d:	lea	rdi, [rip + 0xf4]
0x400094:	call	0x500018
<Block for 0x4000a0, 23 bytes>
0x4000a0:	mov	dword ptr [rax], 0
0x4000a6:	mov	rax, qword ptr [rip + 0x103]
0x4000ad:	movq	xmm0, rax
0x4000b2:	call	0x500008
<Block for 0x400099, 2 bytes>
0x400099:	jmp	0x4000f0
<Block for 0x4000b7, 14 bytes>
0x4000b7:	movq	rax, xmm0
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	call	0x500000
<Block for 0x4000f0, 3 bytes>
0x4000f0:	nop	
0x4000f1:	leave	
0x4000f2:	ret	
<Block for 0x4000c5, 7 bytes>
0x4000c5:	mov	eax, dword ptr [rax]
0x4000c7:	cmp	eax, 0x21
0x4000ca:	jne	0x4000e2
<Block for 0x4000cc, 12 bytes>
0x4000cc:	lea	rdi, [rip + 0xca]
0x4000d3:	call	0x500018
<Block for 0x4000e2, 14 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 8]
0x4000e6:	movq	xmm0, rax
0x4000eb:	call	0x500010
<Block for 0x4000d8, 10 bytes>
0x4000d8:	mov	edi, 1
0x4000dd:	call	0x500020
