<Block for 0x4000f3, 22 bytes>
0x4000f3:	endbr64	
0x4000f7:	push	rbp
0x4000f8:	mov	rbp, rsp
0x4000fb:	sub	rsp, 0x10
0x4000ff:	mov	eax, 0
0x400104:	call	0x400000
<Block for 0x400109, 4 bytes>
0x400109:	test	eax, eax
0x40010b:	je	0x400162
<Block for 0x400162, 3 bytes>
0x400162:	nop	
0x400163:	leave	
0x400164:	ret	
<Block for 0x40010d, 5 bytes>
0x40010d:	call	0x500000
<Block for 0x400112, 23 bytes>
0x400112:	mov	dword ptr [rax], 0
0x400118:	mov	rax, qword ptr [rip + 0x91]
0x40011f:	movq	xmm0, rax
0x400124:	call	0x500008
<Block for 0x400129, 14 bytes>
0x400129:	movq	rax, xmm0
0x40012e:	mov	qword ptr [rbp - 8], rax
0x400132:	call	0x500000
<Block for 0x400137, 7 bytes>
0x400137:	mov	eax, dword ptr [rax]
0x400139:	cmp	eax, 0x21
0x40013c:	jne	0x400154
<Block for 0x40013e, 12 bytes>
0x40013e:	lea	rdi, [rip + 0x58]
0x400145:	call	0x500018
<Block for 0x400154, 14 bytes>
0x400154:	mov	rax, qword ptr [rbp - 8]
0x400158:	movq	xmm0, rax
0x40015d:	call	0x500010
<Block for 0x40014a, 10 bytes>
0x40014a:	mov	edi, 1
0x40014f:	call	0x500020
