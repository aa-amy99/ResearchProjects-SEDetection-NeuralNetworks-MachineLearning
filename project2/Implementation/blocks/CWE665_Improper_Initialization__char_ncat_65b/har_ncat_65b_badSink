<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	lea	rax, [rbp - 0x70]
0x400029:	mov	edx, 0x63
0x40002e:	mov	esi, 0x43
0x400033:	mov	rdi, rax
0x400036:	call	0x500000
<Block for 0x40003b, 16 bytes>
0x40003b:	mov	byte ptr [rbp - 0xd], 0
0x40003f:	lea	rax, [rbp - 0x70]
0x400043:	mov	rdi, rax
0x400046:	call	0x500008
<Block for 0x40004b, 30 bytes>
0x40004b:	mov	qword ptr [rbp - 0x78], rax
0x40004f:	mov	rdx, qword ptr [rbp - 0x78]
0x400053:	lea	rcx, [rbp - 0x70]
0x400057:	mov	rax, qword ptr [rbp - 0x88]
0x40005e:	mov	rsi, rcx
0x400061:	mov	rdi, rax
0x400064:	call	0x500010
<Block for 0x400069, 15 bytes>
0x400069:	mov	rax, qword ptr [rbp - 0x88]
0x400070:	mov	rdi, rax
0x400073:	call	0x500018
<Block for 0x400078, 16 bytes>
0x400078:	nop	
0x400079:	mov	rax, qword ptr [rbp - 8]
0x40007d:	xor	rax, qword ptr fs:[0x28]
0x400086:	je	0x40008d
<Block for 0x40008d, 2 bytes>
0x40008d:	leave	
0x40008e:	ret	
<Block for 0x400088, 5 bytes>
0x400088:	call	0x500020
