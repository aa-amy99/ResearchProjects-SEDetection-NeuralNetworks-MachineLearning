<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xa0]
0x400025:	mov	edx, 0x95
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 34 bytes>
0x400037:	mov	byte ptr [rbp - 0xb], 0
0x40003b:	lea	rcx, [rbp - 0xa0]
0x400042:	lea	rax, [rbp - 0x110]
0x400049:	mov	edx, 0x63
0x40004e:	mov	rsi, rcx
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
<Block for 0x400059, 15 bytes>
0x400059:	lea	rax, [rbp - 0x110]
0x400060:	mov	rdi, rax
0x400063:	call	0x500010
<Block for 0x400068, 17 bytes>
0x400068:	nop	
0x400069:	nop	
0x40006a:	mov	rax, qword ptr [rbp - 8]
0x40006e:	xor	rax, qword ptr fs:[0x28]
0x400077:	je	0x40007e
<Block for 0x40007e, 2 bytes>
0x40007e:	leave	
0x40007f:	ret	
<Block for 0x400079, 5 bytes>
0x400079:	call	0x500018
