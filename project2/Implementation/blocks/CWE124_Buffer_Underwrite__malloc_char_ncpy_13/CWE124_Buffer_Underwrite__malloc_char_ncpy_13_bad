<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	eax, dword ptr [rip + 0xfffd7]
0x400029:	cmp	eax, 5
0x40002c:	jne	0x40007a
<Block for 0x40002e, 10 bytes>
0x40002e:	mov	edi, 0x64
0x400033:	call	0x500008
<Block for 0x40007a, 22 bytes>
0x40007a:	lea	rax, [rbp - 0x70]
0x40007e:	mov	edx, 0x63
0x400083:	mov	esi, 0x43
0x400088:	mov	rdi, rax
0x40008b:	call	0x500018
<Block for 0x400038, 11 bytes>
0x400038:	mov	qword ptr [rbp - 0x78], rax
0x40003c:	cmp	qword ptr [rbp - 0x78], 0
0x400041:	jne	0x40004d
<Block for 0x400090, 28 bytes>
0x400090:	mov	byte ptr [rbp - 0xd], 0
0x400094:	lea	rcx, [rbp - 0x70]
0x400098:	mov	rax, qword ptr [rbp - 0x80]
0x40009c:	mov	edx, 0x63
0x4000a1:	mov	rsi, rcx
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500020
<Block for 0x400043, 10 bytes>
0x400043:	mov	edi, 0xffffffff
0x400048:	call	0x500010
<Block for 0x40004d, 22 bytes>
0x40004d:	mov	rax, qword ptr [rbp - 0x78]
0x400051:	mov	edx, 0x63
0x400056:	mov	esi, 0x41
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500018
<Block for 0x4000ac, 23 bytes>
0x4000ac:	mov	rax, qword ptr [rbp - 0x80]
0x4000b0:	add	rax, 0x63
0x4000b4:	mov	byte ptr [rax], 0
0x4000b7:	mov	rax, qword ptr [rbp - 0x80]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500028
<Block for 0x400063, 45 bytes>
0x400063:	mov	rax, qword ptr [rbp - 0x78]
0x400067:	add	rax, 0x63
0x40006b:	mov	byte ptr [rax], 0
0x40006e:	mov	rax, qword ptr [rbp - 0x78]
0x400072:	sub	rax, 8
0x400076:	mov	qword ptr [rbp - 0x80], rax
0x40007a:	lea	rax, [rbp - 0x70]
0x40007e:	mov	edx, 0x63
0x400083:	mov	esi, 0x43
0x400088:	mov	rdi, rax
0x40008b:	call	0x500018
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500030
