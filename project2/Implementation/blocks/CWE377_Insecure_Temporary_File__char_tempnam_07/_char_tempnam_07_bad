<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, dword ptr [rip + 0x1ce]
0x400012:	cmp	eax, 5
0x400015:	jne	0x40008d
<Block for 0x400017, 15 bytes>
0x400017:	mov	esi, 0
0x40001c:	mov	edi, 0
0x400021:	call	0x500000
<Block for 0x40008d, 3 bytes>
0x40008d:	nop	
0x40008e:	leave	
0x40008f:	ret	
<Block for 0x400026, 11 bytes>
0x400026:	mov	qword ptr [rbp - 8], rax
0x40002a:	cmp	qword ptr [rbp - 8], 0
0x40002f:	jne	0x40003b
<Block for 0x400031, 10 bytes>
0x400031:	mov	edi, 1
0x400036:	call	0x500008
<Block for 0x40003b, 12 bytes>
0x40003b:	mov	rax, qword ptr [rbp - 8]
0x40003f:	mov	rdi, rax
0x400042:	call	0x500010
<Block for 0x400047, 27 bytes>
0x400047:	mov	rax, qword ptr [rbp - 8]
0x40004b:	mov	edx, 0x180
0x400050:	mov	esi, 0x42
0x400055:	mov	rdi, rax
0x400058:	mov	eax, 0
0x40005d:	call	0x500018
<Block for 0x400062, 9 bytes>
0x400062:	mov	dword ptr [rbp - 0xc], eax
0x400065:	cmp	dword ptr [rbp - 0xc], -1
0x400069:	je	0x400081
<Block for 0x400081, 12 bytes>
0x400081:	mov	rax, qword ptr [rbp - 8]
0x400085:	mov	rdi, rax
0x400088:	call	0x500028
<Block for 0x40006b, 12 bytes>
0x40006b:	lea	rdi, [rip + 0x176]
0x400072:	call	0x500010
<Block for 0x400077, 10 bytes>
0x400077:	mov	eax, dword ptr [rbp - 0xc]
0x40007a:	mov	edi, eax
0x40007c:	call	0x500020
