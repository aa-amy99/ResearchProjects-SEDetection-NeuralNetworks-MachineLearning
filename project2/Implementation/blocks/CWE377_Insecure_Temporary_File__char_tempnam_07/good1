<Block for 0x400090, 38 bytes>
0x400090:	endbr64	
0x400094:	push	rbp
0x400095:	mov	rbp, rsp
0x400098:	sub	rsp, 0x30
0x40009c:	mov	rax, qword ptr fs:[0x28]
0x4000a5:	mov	qword ptr [rbp - 8], rax
0x4000a9:	xor	eax, eax
0x4000ab:	mov	eax, dword ptr [rip + 0x12f]
0x4000b1:	cmp	eax, 5
0x4000b4:	je	0x4000c4
<Block for 0x4000c4, 40 bytes>
0x4000c4:	movabs	rax, 0x6c69662f706d742f
0x4000ce:	movabs	rdx, 0x58585858585865
0x4000d8:	mov	qword ptr [rbp - 0x20], rax
0x4000dc:	mov	qword ptr [rbp - 0x18], rdx
0x4000e0:	lea	rax, [rbp - 0x20]
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500030
<Block for 0x4000b6, 12 bytes>
0x4000b6:	lea	rdi, [rip + 0x158]
0x4000bd:	call	0x500010
<Block for 0x4000ec, 15 bytes>
0x4000ec:	mov	dword ptr [rbp - 0x24], eax
0x4000ef:	lea	rax, [rbp - 0x20]
0x4000f3:	mov	rdi, rax
0x4000f6:	call	0x500010
<Block for 0x4000c2, 2 bytes>
0x4000c2:	jmp	0x400117
<Block for 0x4000fb, 6 bytes>
0x4000fb:	cmp	dword ptr [rbp - 0x24], -1
0x4000ff:	je	0x400117
<Block for 0x400117, 16 bytes>
0x400117:	nop	
0x400118:	mov	rax, qword ptr [rbp - 8]
0x40011c:	xor	rax, qword ptr fs:[0x28]
0x400125:	je	0x40012c
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0xe0]
0x400108:	call	0x500010
<Block for 0x40012c, 2 bytes>
0x40012c:	leave	
0x40012d:	ret	
<Block for 0x400127, 5 bytes>
0x400127:	call	0x500038
<Block for 0x40010d, 10 bytes>
0x40010d:	mov	eax, dword ptr [rbp - 0x24]
0x400110:	mov	edi, eax
0x400112:	call	0x500020
