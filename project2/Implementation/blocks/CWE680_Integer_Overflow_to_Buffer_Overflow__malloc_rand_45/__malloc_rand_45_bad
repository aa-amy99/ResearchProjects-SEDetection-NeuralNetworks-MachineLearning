<Block for 0x40008a, 25 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	push	rbx
0x400093:	sub	rsp, 0x18
0x400097:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x40009e:	call	0x500020
<Block for 0x4000a3, 7 bytes>
0x4000a3:	and	eax, 1
0x4000a6:	test	eax, eax
0x4000a8:	je	0x4000c7
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500020
<Block for 0x4000aa, 5 bytes>
0x4000aa:	call	0x500020
<Block for 0x4000cc, 10 bytes>
0x4000cc:	shl	eax, 0x1e
0x4000cf:	mov	ebx, eax
0x4000d1:	call	0x500020
<Block for 0x4000af, 10 bytes>
0x4000af:	shl	eax, 0x1e
0x4000b2:	mov	ebx, eax
0x4000b4:	call	0x500020
<Block for 0x4000d6, 10 bytes>
0x4000d6:	shl	eax, 0xf
0x4000d9:	xor	ebx, eax
0x4000db:	call	0x500020
<Block for 0x4000b9, 10 bytes>
0x4000b9:	shl	eax, 0xf
0x4000bc:	xor	ebx, eax
0x4000be:	call	0x500020
<Block for 0x4000e0, 26 bytes>
0x4000e0:	xor	eax, ebx
0x4000e2:	not	eax
0x4000e4:	mov	dword ptr [rbp - 0x14], eax
0x4000e7:	mov	eax, dword ptr [rbp - 0x14]
0x4000ea:	mov	dword ptr [rip + 0xe4], eax
0x4000f0:	mov	eax, 0
0x4000f5:	call	0x400000
<Block for 0x4000c3, 4 bytes>
0x4000c3:	xor	eax, ebx
0x4000c5:	jmp	0x4000e4
<Block for 0x4000fa, 8 bytes>
0x4000fa:	nop	
0x4000fb:	add	rsp, 0x18
0x4000ff:	pop	rbx
0x400100:	pop	rbp
0x400101:	ret	
<Block for 0x4000e4, 22 bytes>
0x4000e4:	mov	dword ptr [rbp - 0x14], eax
0x4000e7:	mov	eax, dword ptr [rbp - 0x14]
0x4000ea:	mov	dword ptr [rip + 0xe4], eax
0x4000f0:	mov	eax, 0
0x4000f5:	call	0x400000
