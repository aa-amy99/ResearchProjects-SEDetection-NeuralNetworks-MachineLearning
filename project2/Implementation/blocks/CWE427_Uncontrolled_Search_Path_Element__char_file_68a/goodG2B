<Block for 0x400153, 82 bytes>
0x400153:	endbr64	
0x400157:	push	rbp
0x400158:	mov	rbp, rsp
0x40015b:	sub	rsp, 0x120
0x400162:	mov	rax, qword ptr fs:[0x28]
0x40016b:	mov	qword ptr [rbp - 8], rax
0x40016f:	xor	eax, eax
0x400171:	movabs	rax, 0x3d48544150
0x40017b:	mov	edx, 0
0x400180:	mov	qword ptr [rbp - 0x110], rax
0x400187:	mov	qword ptr [rbp - 0x108], rdx
0x40018e:	lea	rdx, [rbp - 0x100]
0x400195:	mov	eax, 0
0x40019a:	mov	ecx, 0x1d
0x40019f:	mov	rdi, rdx
0x4001a2:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001a5, 51 bytes>
0x4001a5:	mov	rdx, rdi
0x4001a8:	mov	word ptr [rdx], ax
0x4001ab:	add	rdx, 2
0x4001af:	lea	rax, [rbp - 0x110]
0x4001b6:	mov	qword ptr [rbp - 0x118], rax
0x4001bd:	mov	rax, qword ptr [rbp - 0x118]
0x4001c4:	mov	rcx, -1
0x4001cb:	mov	rdx, rax
0x4001ce:	mov	eax, 0
0x4001d3:	mov	rdi, rdx
0x4001d6:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001a2, 3 bytes>
0x4001a2:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001d8, 54 bytes>
0x4001d8:	mov	rax, rcx
0x4001db:	not	rax
0x4001de:	lea	rdx, [rax - 1]
0x4001e2:	mov	rax, qword ptr [rbp - 0x118]
0x4001e9:	add	rax, rdx
0x4001ec:	mov	dword ptr [rax], 0x6e69622f
0x4001f2:	mov	byte ptr [rax + 4], 0
0x4001f6:	mov	rax, qword ptr [rbp - 0x118]
0x4001fd:	mov	qword ptr [rip - 0x1fc], rax
0x400204:	mov	eax, 0
0x400209:	call	0x500038
<Block for 0x4001d6, 2 bytes>
0x4001d6:	repne scasb	al, byte ptr [rdi]
<Block for 0x40020e, 16 bytes>
0x40020e:	nop	
0x40020f:	mov	rax, qword ptr [rbp - 8]
0x400213:	xor	rax, qword ptr fs:[0x28]
0x40021c:	je	0x400223
<Block for 0x400223, 2 bytes>
0x400223:	leave	
0x400224:	ret	
<Block for 0x40021e, 5 bytes>
0x40021e:	call	0x500030
