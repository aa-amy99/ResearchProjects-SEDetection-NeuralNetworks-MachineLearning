<Block for 0x4000c2, 44 bytes>
0x4000c2:	endbr64	
0x4000c6:	push	rbp
0x4000c7:	mov	rbp, rsp
0x4000ca:	sub	rsp, 0x40
0x4000ce:	mov	rax, qword ptr fs:[0x28]
0x4000d7:	mov	qword ptr [rbp - 8], rax
0x4000db:	xor	eax, eax
0x4000dd:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000e4:	mov	eax, 0
0x4000e9:	call	0x500000
<Block for 0x4000ee, 4 bytes>
0x4000ee:	test	eax, eax
0x4000f0:	je	0x400111
<Block for 0x400111, 10 bytes>
0x400111:	mov	eax, 0
0x400116:	call	0x500030
<Block for 0x4000f2, 31 bytes>
0x4000f2:	mov	rax, qword ptr [rip + 0xfff0f]
0x4000f9:	lea	rdx, [rbp - 0x34]
0x4000fd:	lea	rsi, [rip + 0x2f4]
0x400104:	mov	rdi, rax
0x400107:	mov	eax, 0
0x40010c:	call	0x500010
<Block for 0x40011b, 4 bytes>
0x40011b:	test	eax, eax
0x40011d:	je	0x40012d
<Block for 0x40012d, 47 bytes>
0x40012d:	mov	qword ptr [rbp - 0x30], 0
0x400135:	mov	qword ptr [rbp - 0x28], 0
0x40013d:	mov	qword ptr [rbp - 0x20], 0
0x400145:	mov	qword ptr [rbp - 0x18], 0
0x40014d:	mov	qword ptr [rbp - 0x10], 0
0x400155:	mov	eax, dword ptr [rbp - 0x34]
0x400158:	test	eax, eax
0x40015a:	js	0x400176
<Block for 0x40011f, 12 bytes>
0x40011f:	lea	rdi, [rip + 0x2f9]
0x400126:	call	0x500020
<Block for 0x400176, 12 bytes>
0x400176:	lea	rdi, [rip + 0x2bb]
0x40017d:	call	0x500020
<Block for 0x40015c, 8 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x34]
0x40015f:	cmp	eax, 9
0x400162:	jg	0x400176
<Block for 0x40012b, 2 bytes>
0x40012b:	jmp	0x400182
<Block for 0x400182, 16 bytes>
0x400182:	nop	
0x400183:	mov	rax, qword ptr [rbp - 8]
0x400187:	xor	rax, qword ptr fs:[0x28]
0x400190:	je	0x400197
<Block for 0x400164, 16 bytes>
0x400164:	mov	eax, dword ptr [rbp - 0x34]
0x400167:	cdqe	
0x400169:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40016d:	mov	edi, eax
0x40016f:	call	0x500018
<Block for 0x400197, 2 bytes>
0x400197:	leave	
0x400198:	ret	
<Block for 0x400192, 5 bytes>
0x400192:	call	0x500028
<Block for 0x400174, 2 bytes>
0x400174:	jmp	0x400182
