<Block for 0x400262, 44 bytes>
0x400262:	endbr64	
0x400266:	push	rbp
0x400267:	mov	rbp, rsp
0x40026a:	sub	rsp, 0x40
0x40026e:	mov	rax, qword ptr fs:[0x28]
0x400277:	mov	qword ptr [rbp - 8], rax
0x40027b:	xor	eax, eax
0x40027d:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400284:	mov	eax, 0
0x400289:	call	0x500030
<Block for 0x40028e, 4 bytes>
0x40028e:	test	eax, eax
0x400290:	je	0x4002a0
<Block for 0x4002a0, 17 bytes>
0x4002a0:	mov	dword ptr [rbp - 0x34], 7
0x4002a7:	mov	eax, 0
0x4002ac:	call	0x500000
<Block for 0x400292, 12 bytes>
0x400292:	lea	rdi, [rip + 0x186]
0x400299:	call	0x500020
<Block for 0x4002b1, 4 bytes>
0x4002b1:	test	eax, eax
0x4002b3:	je	0x400301
<Block for 0x40029e, 2 bytes>
0x40029e:	jmp	0x4002a7
<Block for 0x400301, 16 bytes>
0x400301:	nop	
0x400302:	mov	rax, qword ptr [rbp - 8]
0x400306:	xor	rax, qword ptr fs:[0x28]
0x40030f:	je	0x400316
<Block for 0x4002b5, 46 bytes>
0x4002b5:	mov	qword ptr [rbp - 0x30], 0
0x4002bd:	mov	qword ptr [rbp - 0x28], 0
0x4002c5:	mov	qword ptr [rbp - 0x20], 0
0x4002cd:	mov	qword ptr [rbp - 0x18], 0
0x4002d5:	mov	qword ptr [rbp - 0x10], 0
0x4002dd:	cmp	dword ptr [rbp - 0x34], 9
0x4002e1:	jg	0x4002f5
<Block for 0x4002a7, 10 bytes>
0x4002a7:	mov	eax, 0
0x4002ac:	call	0x500000
<Block for 0x400316, 2 bytes>
0x400316:	leave	
0x400317:	ret	
<Block for 0x400311, 5 bytes>
0x400311:	call	0x500028
<Block for 0x4002e3, 16 bytes>
0x4002e3:	mov	eax, dword ptr [rbp - 0x34]
0x4002e6:	cdqe	
0x4002e8:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002ec:	mov	edi, eax
0x4002ee:	call	0x500018
<Block for 0x4002f5, 12 bytes>
0x4002f5:	lea	rdi, [rip + 0x104]
0x4002fc:	call	0x500020
<Block for 0x4002f3, 2 bytes>
0x4002f3:	jmp	0x400301
