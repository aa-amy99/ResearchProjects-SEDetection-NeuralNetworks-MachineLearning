<Block for 0x40007c, 69 bytes>
0x40007c:	endbr64	
0x400080:	push	rbp
0x400081:	mov	rbp, rsp
0x400084:	sub	rsp, 0x20
0x400088:	mov	rax, qword ptr fs:[0x28]
0x400091:	mov	qword ptr [rbp - 8], rax
0x400095:	xor	eax, eax
0x400097:	lea	rax, [rbp - 0x18]
0x40009b:	mov	qword ptr [rbp - 0x10], rax
0x40009f:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x4000a6:	mov	edx, 0x180
0x4000ab:	mov	esi, 0x42
0x4000b0:	lea	rdi, [rip + 0xd1]
0x4000b7:	mov	eax, 0
0x4000bc:	call	0x500000
<Block for 0x4000c1, 22 bytes>
0x4000c1:	mov	dword ptr [rbp - 0x18], eax
0x4000c4:	mov	rax, qword ptr [rbp - 0x10]
0x4000c8:	mov	eax, dword ptr [rax]
0x4000ca:	mov	dword ptr [rbp - 0x14], eax
0x4000cd:	mov	eax, dword ptr [rbp - 0x14]
0x4000d0:	mov	edi, eax
0x4000d2:	call	0x500008
<Block for 0x4000d7, 16 bytes>
0x4000d7:	nop	
0x4000d8:	mov	rax, qword ptr [rbp - 8]
0x4000dc:	xor	rax, qword ptr fs:[0x28]
0x4000e5:	je	0x4000ec
<Block for 0x4000ec, 2 bytes>
0x4000ec:	leave	
0x4000ed:	ret	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	call	0x500010
