<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x18]
0x40001f:	mov	qword ptr [rbp - 0x10], rax
0x400023:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x40002a:	mov	edx, 0x180
0x40002f:	mov	esi, 0x42
0x400034:	lea	rdi, [rip + 0x13a]
0x40003b:	mov	eax, 0
0x400040:	call	0x500000
<Block for 0x400045, 13 bytes>
0x400045:	mov	dword ptr [rbp - 0x18], eax
0x400048:	mov	eax, dword ptr [rbp - 0x18]
0x40004b:	mov	edi, eax
0x40004d:	call	0x500008
<Block for 0x400052, 19 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x10]
0x400056:	mov	eax, dword ptr [rax]
0x400058:	mov	dword ptr [rbp - 0x14], eax
0x40005b:	mov	eax, dword ptr [rbp - 0x14]
0x40005e:	mov	edi, eax
0x400060:	call	0x500008
<Block for 0x400065, 16 bytes>
0x400065:	nop	
0x400066:	mov	rax, qword ptr [rbp - 8]
0x40006a:	xor	rax, qword ptr fs:[0x28]
0x400073:	je	0x40007a
<Block for 0x40007a, 2 bytes>
0x40007a:	leave	
0x40007b:	ret	
<Block for 0x400075, 5 bytes>
0x400075:	call	0x500010
