<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400014:	nop	
0x400015:	endbr64	
0x400019:	call	0x500000
<Block for 0x40001e, 7 bytes>
0x40001e:	and	eax, 1
0x400021:	test	eax, eax
0x400023:	je	0x400042
<Block for 0x400042, 5 bytes>
0x400042:	call	0x500000
<Block for 0x400025, 5 bytes>
0x400025:	call	0x500000
<Block for 0x400047, 10 bytes>
0x400047:	shl	eax, 0x1e
0x40004a:	mov	ebx, eax
0x40004c:	call	0x500000
<Block for 0x40002a, 10 bytes>
0x40002a:	shl	eax, 0x1e
0x40002d:	mov	ebx, eax
0x40002f:	call	0x500000
<Block for 0x400051, 10 bytes>
0x400051:	shl	eax, 0xf
0x400054:	xor	ebx, eax
0x400056:	call	0x500000
<Block for 0x400034, 10 bytes>
0x400034:	shl	eax, 0xf
0x400037:	xor	ebx, eax
0x400039:	call	0x500000
<Block for 0x40005b, 13 bytes>
0x40005b:	xor	eax, ebx
0x40005d:	not	eax
0x40005f:	mov	dword ptr [rbp - 0x14], eax
0x400062:	cmp	dword ptr [rbp - 0x14], 5
0x400066:	jg	0x400087
<Block for 0x40003e, 4 bytes>
0x40003e:	xor	eax, ebx
0x400040:	jmp	0x40005f
<Block for 0x400068, 31 bytes>
0x400068:	lea	rcx, [rip + 0xd1]
0x40006f:	mov	edx, 0x23
0x400074:	lea	rsi, [rip + 0x85]
0x40007b:	lea	rdi, [rip + 0xa4]
0x400082:	call	0x500008
<Block for 0x400087, 8 bytes>
0x400087:	nop	
0x400088:	add	rsp, 0x18
0x40008c:	pop	rbx
0x40008d:	pop	rbp
0x40008e:	ret	
<Block for 0x40005f, 9 bytes>
0x40005f:	mov	dword ptr [rbp - 0x14], eax
0x400062:	cmp	dword ptr [rbp - 0x14], 5
0x400066:	jg	0x400087
