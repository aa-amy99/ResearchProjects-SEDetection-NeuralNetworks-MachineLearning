<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 8 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x4000ad
<Block for 0x4000ad, 5 bytes>
0x4000ad:	call	0x500008
<Block for 0x40001e, 5 bytes>
0x40001e:	call	0x500008
<Block for 0x4000b2, 55 bytes>
0x4000b2:	mov	edx, eax
0x4000b4:	movsxd	rax, edx
0x4000b7:	imul	rax, rax, 0x55555556
0x4000be:	shr	rax, 0x20
0x4000c2:	mov	rcx, rax
0x4000c5:	mov	eax, edx
0x4000c7:	sar	eax, 0x1f
0x4000ca:	mov	esi, ecx
0x4000cc:	sub	esi, eax
0x4000ce:	mov	eax, esi
0x4000d0:	mov	dword ptr [rbp - 8], eax
0x4000d3:	mov	ecx, dword ptr [rbp - 8]
0x4000d6:	mov	eax, ecx
0x4000d8:	add	eax, eax
0x4000da:	add	eax, ecx
0x4000dc:	sub	edx, eax
0x4000de:	mov	eax, edx
0x4000e0:	mov	dword ptr [rbp - 8], eax
0x4000e3:	cmp	dword ptr [rbp - 8], 2
0x4000e7:	je	0x400119
<Block for 0x400023, 55 bytes>
0x400023:	mov	edx, eax
0x400025:	movsxd	rax, edx
0x400028:	imul	rax, rax, 0x55555556
0x40002f:	shr	rax, 0x20
0x400033:	mov	rcx, rax
0x400036:	mov	eax, edx
0x400038:	sar	eax, 0x1f
0x40003b:	mov	esi, ecx
0x40003d:	sub	esi, eax
0x40003f:	mov	eax, esi
0x400041:	mov	dword ptr [rbp - 4], eax
0x400044:	mov	ecx, dword ptr [rbp - 4]
0x400047:	mov	eax, ecx
0x400049:	add	eax, eax
0x40004b:	add	eax, ecx
0x40004d:	sub	edx, eax
0x40004f:	mov	eax, edx
0x400051:	mov	dword ptr [rbp - 4], eax
0x400054:	cmp	dword ptr [rbp - 4], 2
0x400058:	je	0x40008b
<Block for 0x400119, 12 bytes>
0x400119:	lea	rdi, [rip + 0x16c]
0x400120:	call	0x500010
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 8], 2
0x4000ed:	jg	0x400127
<Block for 0x40008b, 12 bytes>
0x40008b:	lea	rdi, [rip + 0x1fa]
0x400092:	call	0x500010
<Block for 0x40005a, 6 bytes>
0x40005a:	cmp	dword ptr [rbp - 4], 2
0x40005e:	jg	0x40009c
<Block for 0x400125, 2 bytes>
0x400125:	jmp	0x400134
<Block for 0x4000ef, 6 bytes>
0x4000ef:	cmp	dword ptr [rbp - 8], 0
0x4000f3:	je	0x4000fd
<Block for 0x400127, 12 bytes>
0x400127:	lea	rdi, [rip + 0x160]
0x40012e:	call	0x500010
<Block for 0x400097, 5 bytes>
0x400097:	jmp	0x400134
<Block for 0x400060, 6 bytes>
0x400060:	cmp	dword ptr [rbp - 4], 0
0x400064:	je	0x40006e
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rdi, [rip + 0x1eb]
0x4000a3:	call	0x500010
<Block for 0x400134, 3 bytes>
0x400134:	nop	
0x400135:	leave	
0x400136:	ret	
<Block for 0x4000fd, 12 bytes>
0x4000fd:	lea	rdi, [rip + 0x184]
0x400104:	call	0x500010
<Block for 0x4000f5, 6 bytes>
0x4000f5:	cmp	dword ptr [rbp - 8], 1
0x4000f9:	je	0x40010b
<Block for 0x400133, 1 bytes>
0x400133:	nop	
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rdi, [rip + 0x213]
0x400075:	call	0x500010
<Block for 0x400066, 6 bytes>
0x400066:	cmp	dword ptr [rbp - 4], 1
0x40006a:	je	0x40007a
<Block for 0x4000a8, 5 bytes>
0x4000a8:	jmp	0x400134
<Block for 0x400109, 2 bytes>
0x400109:	jmp	0x400134
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x178]
0x400112:	call	0x500010
<Block for 0x4000fb, 2 bytes>
0x4000fb:	jmp	0x400127
<Block for 0x40007a, 12 bytes>
0x40007a:	lea	rdi, [rip + 0x209]
0x400081:	call	0x500010
<Block for 0x40006c, 2 bytes>
0x40006c:	jmp	0x40009c
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x400134
<Block for 0x400086, 5 bytes>
0x400086:	jmp	0x400134
