<Block for 0x400137, 22 bytes>
0x400137:	endbr64	
0x40013b:	push	rbp
0x40013c:	mov	rbp, rsp
0x40013f:	sub	rsp, 0x10
0x400143:	mov	eax, 0
0x400148:	call	0x500000
<Block for 0x40014d, 8 bytes>
0x40014d:	test	eax, eax
0x40014f:	je	0x4001e9
<Block for 0x4001e9, 5 bytes>
0x4001e9:	call	0x500008
<Block for 0x400155, 5 bytes>
0x400155:	call	0x500008
<Block for 0x4001ee, 55 bytes>
0x4001ee:	mov	edx, eax
0x4001f0:	movsxd	rax, edx
0x4001f3:	imul	rax, rax, 0x55555556
0x4001fa:	shr	rax, 0x20
0x4001fe:	mov	rcx, rax
0x400201:	mov	eax, edx
0x400203:	sar	eax, 0x1f
0x400206:	mov	esi, ecx
0x400208:	sub	esi, eax
0x40020a:	mov	eax, esi
0x40020c:	mov	dword ptr [rbp - 8], eax
0x40020f:	mov	ecx, dword ptr [rbp - 8]
0x400212:	mov	eax, ecx
0x400214:	add	eax, eax
0x400216:	add	eax, ecx
0x400218:	sub	edx, eax
0x40021a:	mov	eax, edx
0x40021c:	mov	dword ptr [rbp - 8], eax
0x40021f:	cmp	dword ptr [rbp - 8], 2
0x400223:	je	0x400255
<Block for 0x40015a, 55 bytes>
0x40015a:	mov	edx, eax
0x40015c:	movsxd	rax, edx
0x40015f:	imul	rax, rax, 0x55555556
0x400166:	shr	rax, 0x20
0x40016a:	mov	rcx, rax
0x40016d:	mov	eax, edx
0x40016f:	sar	eax, 0x1f
0x400172:	mov	esi, ecx
0x400174:	sub	esi, eax
0x400176:	mov	eax, esi
0x400178:	mov	dword ptr [rbp - 4], eax
0x40017b:	mov	ecx, dword ptr [rbp - 4]
0x40017e:	mov	eax, ecx
0x400180:	add	eax, eax
0x400182:	add	eax, ecx
0x400184:	sub	edx, eax
0x400186:	mov	eax, edx
0x400188:	mov	dword ptr [rbp - 4], eax
0x40018b:	cmp	dword ptr [rbp - 4], 2
0x40018f:	je	0x4001c7
<Block for 0x400255, 12 bytes>
0x400255:	lea	rdi, [rip + 0x30]
0x40025c:	call	0x500010
<Block for 0x400225, 6 bytes>
0x400225:	cmp	dword ptr [rbp - 8], 2
0x400229:	jg	0x400263
<Block for 0x4001c7, 12 bytes>
0x4001c7:	lea	rdi, [rip + 0xbe]
0x4001ce:	call	0x500010
<Block for 0x400191, 6 bytes>
0x400191:	cmp	dword ptr [rbp - 4], 2
0x400195:	jg	0x4001d8
<Block for 0x400261, 2 bytes>
0x400261:	jmp	0x400270
<Block for 0x40022b, 6 bytes>
0x40022b:	cmp	dword ptr [rbp - 8], 0
0x40022f:	je	0x400239
<Block for 0x400263, 12 bytes>
0x400263:	lea	rdi, [rip + 0x24]
0x40026a:	call	0x500010
<Block for 0x4001d3, 5 bytes>
0x4001d3:	jmp	0x400270
<Block for 0x400197, 6 bytes>
0x400197:	cmp	dword ptr [rbp - 4], 0
0x40019b:	je	0x4001a5
<Block for 0x4001d8, 12 bytes>
0x4001d8:	lea	rdi, [rip + 0xaf]
0x4001df:	call	0x500010
<Block for 0x400270, 3 bytes>
0x400270:	nop	
0x400271:	leave	
0x400272:	ret	
<Block for 0x400239, 12 bytes>
0x400239:	lea	rdi, [rip + 0x48]
0x400240:	call	0x500010
<Block for 0x400231, 6 bytes>
0x400231:	cmp	dword ptr [rbp - 8], 1
0x400235:	je	0x400247
<Block for 0x40026f, 1 bytes>
0x40026f:	nop	
<Block for 0x4001a5, 12 bytes>
0x4001a5:	lea	rdi, [rip + 0xdc]
0x4001ac:	call	0x500010
<Block for 0x40019d, 6 bytes>
0x40019d:	cmp	dword ptr [rbp - 4], 1
0x4001a1:	je	0x4001b6
<Block for 0x4001e4, 5 bytes>
0x4001e4:	jmp	0x400270
<Block for 0x400245, 2 bytes>
0x400245:	jmp	0x400270
<Block for 0x400247, 12 bytes>
0x400247:	lea	rdi, [rip + 0x3c]
0x40024e:	call	0x500010
<Block for 0x400237, 2 bytes>
0x400237:	jmp	0x400263
<Block for 0x4001b1, 5 bytes>
0x4001b1:	jmp	0x400270
<Block for 0x4001b6, 12 bytes>
0x4001b6:	lea	rdi, [rip + 0xcd]
0x4001bd:	call	0x500010
<Block for 0x4001a3, 2 bytes>
0x4001a3:	jmp	0x4001d8
<Block for 0x400253, 2 bytes>
0x400253:	jmp	0x400270
<Block for 0x4001c2, 5 bytes>
0x4001c2:	jmp	0x400270
