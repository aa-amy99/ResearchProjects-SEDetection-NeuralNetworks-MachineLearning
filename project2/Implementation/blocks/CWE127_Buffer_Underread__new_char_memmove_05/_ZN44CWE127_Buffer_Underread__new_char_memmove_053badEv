<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	mov	eax, dword ptr [rip + 0x237]
0x400029:	test	eax, eax
0x40002b:	je	0x400068
<Block for 0x400068, 22 bytes>
0x400068:	lea	rax, [rbp - 0x70]
0x40006c:	mov	edx, 0x63
0x400071:	mov	esi, 0x43
0x400076:	mov	rdi, rax
0x400079:	call	0x500008
<Block for 0x40002d, 10 bytes>
0x40002d:	mov	edi, 0x64
0x400032:	call	0x500000
<Block for 0x40007e, 28 bytes>
0x40007e:	mov	byte ptr [rbp - 0xd], 0
0x400082:	mov	rcx, qword ptr [rbp - 0x80]
0x400086:	lea	rax, [rbp - 0x70]
0x40008a:	mov	edx, 0x64
0x40008f:	mov	rsi, rcx
0x400092:	mov	rdi, rax
0x400095:	call	0x500010
<Block for 0x400037, 26 bytes>
0x400037:	mov	qword ptr [rbp - 0x78], rax
0x40003b:	mov	rax, qword ptr [rbp - 0x78]
0x40003f:	mov	edx, 0x63
0x400044:	mov	esi, 0x41
0x400049:	mov	rdi, rax
0x40004c:	call	0x500008
<Block for 0x40009a, 16 bytes>
0x40009a:	mov	byte ptr [rbp - 0xd], 0
0x40009e:	lea	rax, [rbp - 0x70]
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500018
<Block for 0x400051, 45 bytes>
0x400051:	mov	rax, qword ptr [rbp - 0x78]
0x400055:	add	rax, 0x63
0x400059:	mov	byte ptr [rax], 0
0x40005c:	mov	rax, qword ptr [rbp - 0x78]
0x400060:	sub	rax, 8
0x400064:	mov	qword ptr [rbp - 0x80], rax
0x400068:	lea	rax, [rbp - 0x70]
0x40006c:	mov	edx, 0x63
0x400071:	mov	esi, 0x43
0x400076:	mov	rdi, rax
0x400079:	call	0x500008
<Block for 0x4000aa, 16 bytes>
0x4000aa:	nop	
0x4000ab:	mov	rax, qword ptr [rbp - 8]
0x4000af:	xor	rax, qword ptr fs:[0x28]
0x4000b8:	je	0x4000bf
<Block for 0x4000bf, 2 bytes>
0x4000bf:	leave	
0x4000c0:	ret	
<Block for 0x4000ba, 5 bytes>
0x4000ba:	call	0x500020
