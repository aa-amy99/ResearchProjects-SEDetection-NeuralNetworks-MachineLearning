<Block for 0x4000c1, 45 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	add	rsp, -0x80
0x4000cd:	mov	rax, qword ptr fs:[0x28]
0x4000d6:	mov	qword ptr [rbp - 8], rax
0x4000da:	xor	eax, eax
0x4000dc:	mov	qword ptr [rbp - 0x80], 0
0x4000e4:	mov	eax, dword ptr [rip + 0x17a]
0x4000ea:	test	eax, eax
0x4000ec:	je	0x4000fc
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	edi, 0x64
0x400101:	call	0x500000
<Block for 0x4000ee, 12 bytes>
0x4000ee:	lea	rdi, [rip + 0x173]
0x4000f5:	call	0x500018
<Block for 0x400106, 26 bytes>
0x400106:	mov	qword ptr [rbp - 0x78], rax
0x40010a:	mov	rax, qword ptr [rbp - 0x78]
0x40010e:	mov	edx, 0x63
0x400113:	mov	esi, 0x41
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x4000fa, 2 bytes>
0x4000fa:	jmp	0x400133
<Block for 0x400120, 41 bytes>
0x400120:	mov	rax, qword ptr [rbp - 0x78]
0x400124:	add	rax, 0x63
0x400128:	mov	byte ptr [rax], 0
0x40012b:	mov	rax, qword ptr [rbp - 0x78]
0x40012f:	mov	qword ptr [rbp - 0x80], rax
0x400133:	lea	rax, [rbp - 0x70]
0x400137:	mov	edx, 0x63
0x40013c:	mov	esi, 0x43
0x400141:	mov	rdi, rax
0x400144:	call	0x500008
<Block for 0x400133, 22 bytes>
0x400133:	lea	rax, [rbp - 0x70]
0x400137:	mov	edx, 0x63
0x40013c:	mov	esi, 0x43
0x400141:	mov	rdi, rax
0x400144:	call	0x500008
<Block for 0x400149, 28 bytes>
0x400149:	mov	byte ptr [rbp - 0xd], 0
0x40014d:	mov	rcx, qword ptr [rbp - 0x80]
0x400151:	lea	rax, [rbp - 0x70]
0x400155:	mov	edx, 0x64
0x40015a:	mov	rsi, rcx
0x40015d:	mov	rdi, rax
0x400160:	call	0x500010
<Block for 0x400165, 16 bytes>
0x400165:	mov	byte ptr [rbp - 0xd], 0
0x400169:	lea	rax, [rbp - 0x70]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500018
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500020
