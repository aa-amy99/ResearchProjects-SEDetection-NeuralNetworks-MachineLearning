<Block for 0x40018c, 45 bytes>
0x40018c:	endbr64	
0x400190:	push	rbp
0x400191:	mov	rbp, rsp
0x400194:	add	rsp, -0x80
0x400198:	mov	rax, qword ptr fs:[0x28]
0x4001a1:	mov	qword ptr [rbp - 8], rax
0x4001a5:	xor	eax, eax
0x4001a7:	mov	qword ptr [rbp - 0x80], 0
0x4001af:	mov	eax, dword ptr [rip + 0xab]
0x4001b5:	test	eax, eax
0x4001b7:	je	0x4001f0
<Block for 0x4001f0, 22 bytes>
0x4001f0:	lea	rax, [rbp - 0x70]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x43
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500008
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	edi, 0x64
0x4001be:	call	0x500000
<Block for 0x400206, 28 bytes>
0x400206:	mov	byte ptr [rbp - 0xd], 0
0x40020a:	mov	rcx, qword ptr [rbp - 0x80]
0x40020e:	lea	rax, [rbp - 0x70]
0x400212:	mov	edx, 0x64
0x400217:	mov	rsi, rcx
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500010
<Block for 0x4001c3, 26 bytes>
0x4001c3:	mov	qword ptr [rbp - 0x78], rax
0x4001c7:	mov	rax, qword ptr [rbp - 0x78]
0x4001cb:	mov	edx, 0x63
0x4001d0:	mov	esi, 0x41
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500008
<Block for 0x400222, 16 bytes>
0x400222:	mov	byte ptr [rbp - 0xd], 0
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500018
<Block for 0x4001dd, 41 bytes>
0x4001dd:	mov	rax, qword ptr [rbp - 0x78]
0x4001e1:	add	rax, 0x63
0x4001e5:	mov	byte ptr [rax], 0
0x4001e8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ec:	mov	qword ptr [rbp - 0x80], rax
0x4001f0:	lea	rax, [rbp - 0x70]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	esi, 0x43
0x4001fe:	mov	rdi, rax
0x400201:	call	0x500008
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500020
