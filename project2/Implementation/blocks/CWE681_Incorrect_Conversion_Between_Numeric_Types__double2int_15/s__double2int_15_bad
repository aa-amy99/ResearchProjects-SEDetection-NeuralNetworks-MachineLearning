<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x120
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	pxor	xmm0, xmm0
0x400022:	movsd	qword ptr [rbp - 0x118], xmm0
0x40002a:	mov	rdx, qword ptr [rip + 0xfffcf]
0x400031:	lea	rax, [rbp - 0x110]
0x400038:	mov	esi, 0x100
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400045, 5 bytes>
0x400045:	test	rax, rax
0x400048:	je	0x400067
<Block for 0x400067, 12 bytes>
0x400067:	lea	rdi, [rip + 0x1f2]
0x40006e:	call	0x500018
<Block for 0x40004a, 15 bytes>
0x40004a:	lea	rax, [rbp - 0x110]
0x400051:	mov	rdi, rax
0x400054:	call	0x500010
<Block for 0x400073, 19 bytes>
0x400073:	movsd	xmm0, qword ptr [rbp - 0x118]
0x40007b:	cvttsd2si	eax, xmm0
0x40007f:	mov	edi, eax
0x400081:	call	0x500020
<Block for 0x400059, 14 bytes>
0x400059:	movq	rax, xmm0
0x40005e:	mov	qword ptr [rbp - 0x118], rax
0x400065:	jmp	0x400073
<Block for 0x400086, 17 bytes>
0x400086:	nop	
0x400087:	nop	
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	xor	rax, qword ptr fs:[0x28]
0x400095:	je	0x40009c
<Block for 0x40009c, 2 bytes>
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x400097, 5 bytes>
0x400097:	call	0x500028
