<Block for 0x400000, 80 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	qword ptr [rbp - 0x38], rdi
0x400010:	mov	dword ptr [rbp - 0x3c], esi
0x400013:	mov	rax, qword ptr fs:[0x28]
0x40001c:	mov	qword ptr [rbp - 8], rax
0x400020:	xor	eax, eax
0x400022:	mov	qword ptr [rbp - 0x30], 0
0x40002a:	mov	qword ptr [rbp - 0x28], 0
0x400032:	mov	qword ptr [rbp - 0x20], 0
0x40003a:	mov	qword ptr [rbp - 0x18], 0
0x400042:	mov	qword ptr [rbp - 0x10], 0
0x40004a:	cmp	dword ptr [rbp - 0x3c], 9
0x40004e:	jg	0x400062
<Block for 0x400050, 16 bytes>
0x400050:	mov	eax, dword ptr [rbp - 0x3c]
0x400053:	cdqe	
0x400055:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400059:	mov	edi, eax
0x40005b:	call	0x500000
<Block for 0x400062, 12 bytes>
0x400062:	lea	rdi, [rip + 0x1f]
0x400069:	call	0x500008
<Block for 0x400060, 2 bytes>
0x400060:	jmp	0x40006e
<Block for 0x40006e, 16 bytes>
0x40006e:	nop	
0x40006f:	mov	rax, qword ptr [rbp - 8]
0x400073:	xor	rax, qword ptr fs:[0x28]
0x40007c:	je	0x400083
<Block for 0x400083, 2 bytes>
0x400083:	leave	
0x400084:	ret	
<Block for 0x40007e, 5 bytes>
0x40007e:	call	0x500010
