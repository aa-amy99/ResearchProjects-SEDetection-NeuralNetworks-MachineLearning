<Block for 0x4000cd, 50 bytes>
0x4000cd:	endbr64	
0x4000d1:	push	rbp
0x4000d2:	mov	rbp, rsp
0x4000d5:	add	rsp, -0x80
0x4000d9:	mov	rax, qword ptr fs:[0x28]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	xor	eax, eax
0x4000e8:	mov	qword ptr [rbp - 0x78], 0
0x4000f0:	nop	
0x4000f1:	endbr64	
0x4000f5:	mov	edi, 0x64
0x4000fa:	call	0x500000
<Block for 0x4000ff, 26 bytes>
0x4000ff:	mov	qword ptr [rbp - 0x78], rax
0x400103:	mov	rax, qword ptr [rbp - 0x78]
0x400107:	mov	edx, 0x63
0x40010c:	mov	esi, 0x41
0x400111:	mov	rdi, rax
0x400114:	call	0x500008
<Block for 0x400119, 33 bytes>
0x400119:	mov	rax, qword ptr [rbp - 0x78]
0x40011d:	add	rax, 0x63
0x400121:	mov	byte ptr [rax], 0
0x400124:	lea	rax, [rbp - 0x70]
0x400128:	mov	edx, 0x63
0x40012d:	mov	esi, 0x43
0x400132:	mov	rdi, rax
0x400135:	call	0x500008
<Block for 0x40013a, 16 bytes>
0x40013a:	mov	byte ptr [rbp - 0xd], 0
0x40013e:	lea	rax, [rbp - 0x70]
0x400142:	mov	rdi, rax
0x400145:	call	0x500010
<Block for 0x40014a, 22 bytes>
0x40014a:	mov	rdx, rax
0x40014d:	mov	rcx, qword ptr [rbp - 0x78]
0x400151:	lea	rax, [rbp - 0x70]
0x400155:	mov	rsi, rcx
0x400158:	mov	rdi, rax
0x40015b:	call	0x500018
<Block for 0x400160, 16 bytes>
0x400160:	mov	byte ptr [rbp - 0xd], 0
0x400164:	lea	rax, [rbp - 0x70]
0x400168:	mov	rdi, rax
0x40016b:	call	0x500020
<Block for 0x400170, 7 bytes>
0x400170:	cmp	qword ptr [rbp - 0x78], 0
0x400175:	je	0x400183
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400177, 12 bytes>
0x400177:	mov	rax, qword ptr [rbp - 0x78]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500028
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500030
