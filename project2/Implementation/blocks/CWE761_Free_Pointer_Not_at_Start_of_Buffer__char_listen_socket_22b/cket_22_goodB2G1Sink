<Block for 0x400054, 26 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	sub	rsp, 0x20
0x400060:	mov	qword ptr [rbp - 0x18], rdi
0x400064:	mov	eax, dword ptr [rip + 0xfffae]
0x40006a:	test	eax, eax
0x40006c:	je	0x40007c
<Block for 0x40007c, 10 bytes>
0x40007c:	mov	qword ptr [rbp - 8], 0
0x400084:	jmp	0x4000ab
<Block for 0x40006e, 12 bytes>
0x40006e:	lea	rdi, [rip + 0xd2]
0x400075:	call	0x500008
<Block for 0x4000ab, 12 bytes>
0x4000ab:	mov	rax, qword ptr [rbp - 0x18]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500020
<Block for 0x40007a, 2 bytes>
0x40007a:	jmp	0x4000c9
<Block for 0x4000b7, 6 bytes>
0x4000b7:	cmp	qword ptr [rbp - 8], rax
0x4000bb:	jb	0x400086
<Block for 0x4000c9, 3 bytes>
0x4000c9:	nop	
0x4000ca:	leave	
0x4000cb:	ret	
<Block for 0x400086, 18 bytes>
0x400086:	mov	rdx, qword ptr [rbp - 0x18]
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	add	rax, rdx
0x400091:	movzx	eax, byte ptr [rax]
0x400094:	cmp	al, 0x53
0x400096:	jne	0x4000a6
<Block for 0x4000bd, 12 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x18]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500010
<Block for 0x400098, 12 bytes>
0x400098:	lea	rdi, [rip + 0x97]
0x40009f:	call	0x500008
<Block for 0x4000a6, 17 bytes>
0x4000a6:	add	qword ptr [rbp - 8], 1
0x4000ab:	mov	rax, qword ptr [rbp - 0x18]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500020
<Block for 0x4000a4, 2 bytes>
0x4000a4:	jmp	0x4000bd
