<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x400083
<Block for 0x400083, 3 bytes>
0x400083:	nop	
0x400084:	leave	
0x400085:	ret	
<Block for 0x400038, 18 bytes>
0x400038:	mov	qword ptr [rbp - 8], 0
0x400040:	mov	edi, 4
0x400045:	call	0x500000
<Block for 0x40004a, 27 bytes>
0x40004a:	mov	qword ptr [rbp - 8], rax
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	mov	dword ptr [rax], 5
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	eax, dword ptr [rax]
0x40005e:	mov	edi, eax
0x400060:	call	0x500008
<Block for 0x400065, 7 bytes>
0x400065:	cmp	qword ptr [rbp - 8], 0
0x40006a:	je	0x400076
<Block for 0x400076, 13 bytes>
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	mov	eax, dword ptr [rax]
0x40007c:	mov	edi, eax
0x40007e:	call	0x500008
<Block for 0x40006c, 23 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 8]
0x400070:	mov	dword ptr [rax], 0xa
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	mov	eax, dword ptr [rax]
0x40007c:	mov	edi, eax
0x40007e:	call	0x500008
