<Block for 0x4000e8, 45 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x10
0x4000f4:	mov	rax, qword ptr fs:[0x28]
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	xor	eax, eax
0x400103:	mov	qword ptr [rbp - 0x10], 0
0x40010b:	mov	edi, 8
0x400110:	call	0x500000
<Block for 0x400115, 34 bytes>
0x400115:	mov	qword ptr [rbp - 0x10], rax
0x400119:	mov	rax, qword ptr [rbp - 0x10]
0x40011d:	mov	dword ptr [rax], 1
0x400123:	mov	rax, qword ptr [rbp - 0x10]
0x400127:	mov	dword ptr [rax + 4], 2
0x40012e:	mov	rax, qword ptr [rbp - 0x10]
0x400132:	test	rax, rax
0x400135:	je	0x400144
<Block for 0x400144, 12 bytes>
0x400144:	lea	rax, [rbp - 0x10]
0x400148:	mov	rdi, rax
0x40014b:	call	0x500028
<Block for 0x400137, 13 bytes>
0x400137:	mov	esi, 8
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500008
<Block for 0x400150, 16 bytes>
0x400150:	nop	
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	xor	rax, qword ptr fs:[0x28]
0x40015e:	je	0x400165
<Block for 0x400165, 2 bytes>
0x400165:	leave	
0x400166:	ret	
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500018
