<Block for 0x400092, 22 bytes>
0x400092:	endbr64	
0x400096:	push	rbp
0x400097:	mov	rbp, rsp
0x40009a:	sub	rsp, 0x10
0x40009e:	mov	edi, 0x64
0x4000a3:	call	0x500000
<Block for 0x4000a8, 11 bytes>
0x4000a8:	mov	qword ptr [rbp - 8], rax
0x4000ac:	cmp	qword ptr [rbp - 8], 0
0x4000b1:	jne	0x4000bd
<Block for 0x4000b3, 10 bytes>
0x4000b3:	mov	edi, 0xffffffff
0x4000b8:	call	0x500008
<Block for 0x4000bd, 45 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	mov	byte ptr [rax], 0
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	movabs	rcx, 0x7453206465786946
0x4000d2:	mov	qword ptr [rax], rcx
0x4000d5:	mov	dword ptr [rax + 8], 0x676e6972
0x4000dc:	mov	byte ptr [rax + 0xc], 0
0x4000e0:	mov	eax, dword ptr [rip + 0x12e]
0x4000e6:	test	eax, eax
0x4000e8:	je	0x4000f8
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	qword ptr [rbp - 0x10], 0
0x400100:	jmp	0x400127
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rdi, [rip + 0x138]
0x4000f1:	call	0x500010
<Block for 0x400127, 12 bytes>
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500020
<Block for 0x4000f6, 2 bytes>
0x4000f6:	jmp	0x400145
<Block for 0x400133, 6 bytes>
0x400133:	cmp	qword ptr [rbp - 0x10], rax
0x400137:	jb	0x400102
<Block for 0x400145, 3 bytes>
0x400145:	nop	
0x400146:	leave	
0x400147:	ret	
<Block for 0x400102, 18 bytes>
0x400102:	mov	rdx, qword ptr [rbp - 8]
0x400106:	mov	rax, qword ptr [rbp - 0x10]
0x40010a:	add	rax, rdx
0x40010d:	movzx	eax, byte ptr [rax]
0x400110:	cmp	al, 0x53
0x400112:	jne	0x400122
<Block for 0x400139, 12 bytes>
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	mov	rdi, rax
0x400140:	call	0x500018
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0xfd]
0x40011b:	call	0x500010
<Block for 0x400122, 17 bytes>
0x400122:	add	qword ptr [rbp - 0x10], 1
0x400127:	mov	rax, qword ptr [rbp - 8]
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500020
<Block for 0x400120, 2 bytes>
0x400120:	jmp	0x400139
