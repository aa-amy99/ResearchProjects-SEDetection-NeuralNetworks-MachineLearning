<Block for 0x400082, 65 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x10
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	dword ptr [rbp - 0xc], 0xffffffff
0x4000a4:	mov	rax, qword ptr [rip + 0xfff6d]
0x4000ab:	lea	rdx, [rbp - 0xc]
0x4000af:	lea	rsi, [rip + 0xe7]
0x4000b6:	mov	rdi, rax
0x4000b9:	mov	eax, 0
0x4000be:	call	0x500020
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	eax, dword ptr [rbp - 0xc]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x400000
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 8]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x4000e2
<Block for 0x4000e2, 2 bytes>
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500028
