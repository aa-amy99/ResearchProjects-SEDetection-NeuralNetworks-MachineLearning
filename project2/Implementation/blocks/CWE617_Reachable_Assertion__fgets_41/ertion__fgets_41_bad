<Block for 0x400037, 79 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	sub	rsp, 0x20
0x400043:	mov	rax, qword ptr fs:[0x28]
0x40004c:	mov	qword ptr [rbp - 8], rax
0x400050:	xor	eax, eax
0x400052:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400059:	mov	qword ptr [rbp - 0x16], 0
0x400061:	mov	dword ptr [rbp - 0xe], 0
0x400068:	mov	word ptr [rbp - 0xa], 0
0x40006e:	mov	rdx, qword ptr [rip + 0xfff93]
0x400075:	lea	rax, [rbp - 0x16]
0x400079:	mov	esi, 0xe
0x40007e:	mov	rdi, rax
0x400081:	call	0x500010
<Block for 0x400086, 5 bytes>
0x400086:	test	rax, rax
0x400089:	je	0x40009c
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rdi, [rip + 0xd8]
0x4000a3:	call	0x500020
<Block for 0x40008b, 12 bytes>
0x40008b:	lea	rax, [rbp - 0x16]
0x40008f:	mov	rdi, rax
0x400092:	call	0x500018
<Block for 0x4000a8, 10 bytes>
0x4000a8:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x400000
<Block for 0x400097, 5 bytes>
0x400097:	mov	dword ptr [rbp - 0x1c], eax
0x40009a:	jmp	0x4000a8
<Block for 0x4000b2, 16 bytes>
0x4000b2:	nop	
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	xor	rax, qword ptr fs:[0x28]
0x4000c0:	je	0x4000c7
<Block for 0x4000c7, 2 bytes>
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000c2, 5 bytes>
0x4000c2:	call	0x500028
