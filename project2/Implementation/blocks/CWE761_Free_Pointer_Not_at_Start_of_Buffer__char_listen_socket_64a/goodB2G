<Block for 0x4001ed, 37 bytes>
0x4001ed:	endbr64	
0x4001f1:	push	rbp
0x4001f2:	mov	rbp, rsp
0x4001f5:	sub	rsp, 0x50
0x4001f9:	mov	rax, qword ptr fs:[0x28]
0x400202:	mov	qword ptr [rbp - 8], rax
0x400206:	xor	eax, eax
0x400208:	mov	edi, 0x64
0x40020d:	call	0x500000
<Block for 0x400212, 13 bytes>
0x400212:	mov	qword ptr [rbp - 0x38], rax
0x400216:	mov	rax, qword ptr [rbp - 0x38]
0x40021a:	test	rax, rax
0x40021d:	jne	0x400229
<Block for 0x40021f, 10 bytes>
0x40021f:	mov	edi, 0xffffffff
0x400224:	call	0x500008
<Block for 0x400229, 33 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0x38]
0x40022d:	mov	byte ptr [rax], 0
0x400230:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400237:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40023e:	mov	rax, qword ptr [rbp - 0x38]
0x400242:	mov	rdi, rax
0x400245:	call	0x500010
<Block for 0x40024a, 24 bytes>
0x40024a:	mov	qword ptr [rbp - 0x30], rax
0x40024e:	mov	edx, 6
0x400253:	mov	esi, 1
0x400258:	mov	edi, 2
0x40025d:	call	0x500018
<Block for 0x400262, 13 bytes>
0x400262:	mov	dword ptr [rbp - 0x40], eax
0x400265:	cmp	dword ptr [rbp - 0x40], -1
0x400269:	je	0x40038d
<Block for 0x40038d, 3 bytes>
0x40038d:	nop	
0x40038e:	jmp	0x400397
<Block for 0x40026f, 22 bytes>
0x40026f:	lea	rax, [rbp - 0x20]
0x400273:	mov	edx, 0x10
0x400278:	mov	esi, 0
0x40027d:	mov	rdi, rax
0x400280:	call	0x500020
<Block for 0x400397, 6 bytes>
0x400397:	cmp	dword ptr [rbp - 0x40], -1
0x40039b:	je	0x4003a7
<Block for 0x400285, 23 bytes>
0x400285:	mov	word ptr [rbp - 0x20], 2
0x40028b:	mov	dword ptr [rbp - 0x1c], 0
0x400292:	mov	edi, 0x6987
0x400297:	call	0x500028
<Block for 0x4003a7, 6 bytes>
0x4003a7:	cmp	dword ptr [rbp - 0x44], -1
0x4003ab:	je	0x4003b7
<Block for 0x40039d, 10 bytes>
0x40039d:	mov	eax, dword ptr [rbp - 0x40]
0x4003a0:	mov	edi, eax
0x4003a2:	call	0x500058
<Block for 0x40029c, 26 bytes>
0x40029c:	mov	word ptr [rbp - 0x1e], ax
0x4002a0:	lea	rcx, [rbp - 0x20]
0x4002a4:	mov	eax, dword ptr [rbp - 0x40]
0x4002a7:	mov	edx, 0x10
0x4002ac:	mov	rsi, rcx
0x4002af:	mov	edi, eax
0x4002b1:	call	0x500030
<Block for 0x4003b7, 12 bytes>
0x4003b7:	lea	rax, [rbp - 0x38]
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x500070
<Block for 0x4003ad, 10 bytes>
0x4003ad:	mov	eax, dword ptr [rbp - 0x44]
0x4003b0:	mov	edi, eax
0x4003b2:	call	0x500058
<Block for 0x4002b6, 9 bytes>
0x4002b6:	cmp	eax, -1
0x4002b9:	je	0x400390
<Block for 0x4003c3, 16 bytes>
0x4003c3:	nop	
0x4003c4:	mov	rax, qword ptr [rbp - 8]
0x4003c8:	xor	rax, qword ptr fs:[0x28]
0x4003d1:	je	0x4003d8
<Block for 0x400390, 3 bytes>
0x400390:	nop	
0x400391:	jmp	0x400397
<Block for 0x4002bf, 15 bytes>
0x4002bf:	mov	eax, dword ptr [rbp - 0x40]
0x4002c2:	mov	esi, 5
0x4002c7:	mov	edi, eax
0x4002c9:	call	0x500038
<Block for 0x4003d8, 2 bytes>
0x4003d8:	leave	
0x4003d9:	ret	
<Block for 0x4003d3, 5 bytes>
0x4003d3:	call	0x500068
<Block for 0x4002ce, 9 bytes>
0x4002ce:	cmp	eax, -1
0x4002d1:	je	0x400393
<Block for 0x400393, 3 bytes>
0x400393:	nop	
0x400394:	jmp	0x400397
<Block for 0x4002d7, 20 bytes>
0x4002d7:	mov	eax, dword ptr [rbp - 0x40]
0x4002da:	mov	edx, 0
0x4002df:	mov	esi, 0
0x4002e4:	mov	edi, eax
0x4002e6:	call	0x500040
<Block for 0x4002eb, 13 bytes>
0x4002eb:	mov	dword ptr [rbp - 0x44], eax
0x4002ee:	cmp	dword ptr [rbp - 0x44], -1
0x4002f2:	je	0x400396
<Block for 0x4002f8, 39 bytes>
0x4002f8:	mov	eax, 0x63
0x4002fd:	sub	rax, qword ptr [rbp - 0x30]
0x400301:	mov	rdx, rax
0x400304:	mov	rcx, qword ptr [rbp - 0x38]
0x400308:	mov	rax, qword ptr [rbp - 0x30]
0x40030c:	lea	rsi, [rcx + rax]
0x400310:	mov	eax, dword ptr [rbp - 0x44]
0x400313:	mov	ecx, 0
0x400318:	mov	edi, eax
0x40031a:	call	0x500048
<Block for 0x400396, 1 bytes>
0x400396:	nop	
<Block for 0x40031f, 9 bytes>
0x40031f:	mov	dword ptr [rbp - 0x3c], eax
0x400322:	cmp	dword ptr [rbp - 0x3c], -1
0x400326:	je	0x400397
<Block for 0x400328, 6 bytes>
0x400328:	cmp	dword ptr [rbp - 0x3c], 0
0x40032c:	je	0x400397
<Block for 0x40032e, 40 bytes>
0x40032e:	mov	rax, qword ptr [rbp - 0x38]
0x400332:	mov	edx, dword ptr [rbp - 0x3c]
0x400335:	movsxd	rcx, edx
0x400338:	mov	rdx, qword ptr [rbp - 0x30]
0x40033c:	add	rdx, rcx
0x40033f:	add	rax, rdx
0x400342:	mov	byte ptr [rax], 0
0x400345:	mov	rax, qword ptr [rbp - 0x38]
0x400349:	mov	esi, 0xd
0x40034e:	mov	rdi, rax
0x400351:	call	0x500050
<Block for 0x400356, 11 bytes>
0x400356:	mov	qword ptr [rbp - 0x28], rax
0x40035a:	cmp	qword ptr [rbp - 0x28], 0
0x40035f:	je	0x400368
<Block for 0x400368, 17 bytes>
0x400368:	mov	rax, qword ptr [rbp - 0x38]
0x40036c:	mov	esi, 0xa
0x400371:	mov	rdi, rax
0x400374:	call	0x500050
<Block for 0x400361, 24 bytes>
0x400361:	mov	rax, qword ptr [rbp - 0x28]
0x400365:	mov	byte ptr [rax], 0
0x400368:	mov	rax, qword ptr [rbp - 0x38]
0x40036c:	mov	esi, 0xa
0x400371:	mov	rdi, rax
0x400374:	call	0x500050
<Block for 0x400379, 11 bytes>
0x400379:	mov	qword ptr [rbp - 0x28], rax
0x40037d:	cmp	qword ptr [rbp - 0x28], 0
0x400382:	je	0x400397
<Block for 0x400384, 9 bytes>
0x400384:	mov	rax, qword ptr [rbp - 0x28]
0x400388:	mov	byte ptr [rax], 0
0x40038b:	jmp	0x400397
