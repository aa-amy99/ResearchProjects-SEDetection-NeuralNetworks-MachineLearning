<Block for 0x4000e0, 37 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x20
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	eax, dword ptr [rip + 0xfff0f]
0x400101:	test	eax, eax
0x400103:	je	0x400113
<Block for 0x400113, 32 bytes>
0x400113:	mov	dword ptr [rbp - 0x10], 0
0x40011a:	mov	dword ptr [rbp - 0xc], 0
0x400121:	lea	rax, [rbp - 0x10]
0x400125:	mov	qword ptr [rbp - 0x18], rax
0x400129:	mov	eax, dword ptr [rip + 0xffed1]
0x40012f:	test	eax, eax
0x400131:	je	0x400140
<Block for 0x400105, 12 bytes>
0x400105:	lea	rdi, [rip + 0xe7]
0x40010c:	call	0x500018
<Block for 0x400140, 16 bytes>
0x400140:	nop	
0x400141:	mov	rax, qword ptr [rbp - 8]
0x400145:	xor	rax, qword ptr fs:[0x28]
0x40014e:	je	0x400155
<Block for 0x400133, 13 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x18]
0x400137:	mov	eax, dword ptr [rax]
0x400139:	mov	edi, eax
0x40013b:	call	0x500008
<Block for 0x400111, 2 bytes>
0x400111:	jmp	0x400129
<Block for 0x400155, 2 bytes>
0x400155:	leave	
0x400156:	ret	
<Block for 0x400150, 5 bytes>
0x400150:	call	0x500020
<Block for 0x400129, 10 bytes>
0x400129:	mov	eax, dword ptr [rip + 0xffed1]
0x40012f:	test	eax, eax
0x400131:	je	0x400140
