<Block for 0x400000, 73 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	rax, qword ptr [rax]
0x40002f:	mov	qword ptr [rbp - 0x80], rax
0x400033:	lea	rax, [rbp - 0x70]
0x400037:	mov	edx, 0x63
0x40003c:	mov	esi, 0x43
0x400041:	mov	rdi, rax
0x400044:	call	0x500000
<Block for 0x400049, 16 bytes>
0x400049:	mov	byte ptr [rbp - 0xd], 0
0x40004d:	lea	rax, [rbp - 0x70]
0x400051:	mov	rdi, rax
0x400054:	call	0x500008
<Block for 0x400059, 27 bytes>
0x400059:	mov	qword ptr [rbp - 0x78], rax
0x40005d:	mov	rdx, qword ptr [rbp - 0x78]
0x400061:	lea	rcx, [rbp - 0x70]
0x400065:	mov	rax, qword ptr [rbp - 0x80]
0x400069:	mov	rsi, rcx
0x40006c:	mov	rdi, rax
0x40006f:	call	0x500010
<Block for 0x400074, 12 bytes>
0x400074:	mov	rax, qword ptr [rbp - 0x80]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500018
<Block for 0x400080, 16 bytes>
0x400080:	nop	
0x400081:	mov	rax, qword ptr [rbp - 8]
0x400085:	xor	rax, qword ptr fs:[0x28]
0x40008e:	je	0x400095
<Block for 0x400095, 2 bytes>
0x400095:	leave	
0x400096:	ret	
<Block for 0x400090, 5 bytes>
0x400090:	call	0x500020
