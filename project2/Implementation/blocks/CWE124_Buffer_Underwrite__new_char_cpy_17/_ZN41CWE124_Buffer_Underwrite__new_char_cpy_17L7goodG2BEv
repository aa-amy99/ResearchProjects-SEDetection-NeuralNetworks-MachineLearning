<Block for 0x4000cd, 57 bytes>
0x4000cd:	endbr64	
0x4000d1:	push	rbp
0x4000d2:	mov	rbp, rsp
0x4000d5:	sub	rsp, 0x90
0x4000dc:	mov	rax, qword ptr fs:[0x28]
0x4000e5:	mov	qword ptr [rbp - 8], rax
0x4000e9:	xor	eax, eax
0x4000eb:	mov	qword ptr [rbp - 0x80], 0
0x4000f3:	mov	dword ptr [rbp - 0x84], 0
0x4000fd:	cmp	dword ptr [rbp - 0x84], 0
0x400104:	jg	0x400146
<Block for 0x400106, 10 bytes>
0x400106:	mov	edi, 0x64
0x40010b:	call	0x500000
<Block for 0x400146, 22 bytes>
0x400146:	lea	rax, [rbp - 0x70]
0x40014a:	mov	edx, 0x63
0x40014f:	mov	esi, 0x43
0x400154:	mov	rdi, rax
0x400157:	call	0x500008
<Block for 0x400110, 26 bytes>
0x400110:	mov	qword ptr [rbp - 0x78], rax
0x400114:	mov	rax, qword ptr [rbp - 0x78]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x41
0x400122:	mov	rdi, rax
0x400125:	call	0x500008
<Block for 0x40015c, 23 bytes>
0x40015c:	mov	byte ptr [rbp - 0xd], 0
0x400160:	lea	rdx, [rbp - 0x70]
0x400164:	mov	rax, qword ptr [rbp - 0x80]
0x400168:	mov	rsi, rdx
0x40016b:	mov	rdi, rax
0x40016e:	call	0x500010
<Block for 0x40012a, 28 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x78]
0x40012e:	add	rax, 0x63
0x400132:	mov	byte ptr [rax], 0
0x400135:	mov	rax, qword ptr [rbp - 0x78]
0x400139:	mov	qword ptr [rbp - 0x80], rax
0x40013d:	add	dword ptr [rbp - 0x84], 1
0x400144:	jmp	0x4000fd
<Block for 0x400173, 12 bytes>
0x400173:	mov	rax, qword ptr [rbp - 0x80]
0x400177:	mov	rdi, rax
0x40017a:	call	0x500018
<Block for 0x4000fd, 9 bytes>
0x4000fd:	cmp	dword ptr [rbp - 0x84], 0
0x400104:	jg	0x400146
<Block for 0x40017f, 16 bytes>
0x40017f:	nop	
0x400180:	mov	rax, qword ptr [rbp - 8]
0x400184:	xor	rax, qword ptr fs:[0x28]
0x40018d:	je	0x400194
<Block for 0x400194, 2 bytes>
0x400194:	leave	
0x400195:	ret	
<Block for 0x40018f, 5 bytes>
0x40018f:	call	0x500020
