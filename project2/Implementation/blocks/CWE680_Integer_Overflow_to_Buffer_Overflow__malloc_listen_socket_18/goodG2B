<Block for 0x4001c8, 48 bytes>
0x4001c8:	endbr64	
0x4001cc:	push	rbp
0x4001cd:	mov	rbp, rsp
0x4001d0:	sub	rsp, 0x20
0x4001d4:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4001db:	nop	
0x4001dc:	endbr64	
0x4001e0:	mov	dword ptr [rbp - 0x14], 0x14
0x4001e7:	mov	eax, dword ptr [rbp - 0x14]
0x4001ea:	cdqe	
0x4001ec:	shl	rax, 2
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500048
<Block for 0x4001f8, 11 bytes>
0x4001f8:	mov	qword ptr [rbp - 8], rax
0x4001fc:	cmp	qword ptr [rbp - 8], 0
0x400201:	jne	0x40020d
<Block for 0x400203, 10 bytes>
0x400203:	mov	edi, 0xffffffff
0x400208:	call	0x500050
<Block for 0x40020d, 10 bytes>
0x40020d:	mov	qword ptr [rbp - 0x10], 0
0x400215:	jmp	0x400235
<Block for 0x400235, 11 bytes>
0x400235:	mov	eax, dword ptr [rbp - 0x14]
0x400238:	cdqe	
0x40023a:	cmp	qword ptr [rbp - 0x10], rax
0x40023e:	jb	0x400217
<Block for 0x400217, 41 bytes>
0x400217:	mov	rax, qword ptr [rbp - 0x10]
0x40021b:	lea	rdx, [rax*4]
0x400223:	mov	rax, qword ptr [rbp - 8]
0x400227:	add	rax, rdx
0x40022a:	mov	dword ptr [rax], 0
0x400230:	add	qword ptr [rbp - 0x10], 1
0x400235:	mov	eax, dword ptr [rbp - 0x14]
0x400238:	cdqe	
0x40023a:	cmp	qword ptr [rbp - 0x10], rax
0x40023e:	jb	0x400217
<Block for 0x400240, 13 bytes>
0x400240:	mov	rax, qword ptr [rbp - 8]
0x400244:	mov	eax, dword ptr [rax]
0x400246:	mov	edi, eax
0x400248:	call	0x500058
<Block for 0x40024d, 12 bytes>
0x40024d:	mov	rax, qword ptr [rbp - 8]
0x400251:	mov	rdi, rax
0x400254:	call	0x500060
<Block for 0x400259, 3 bytes>
0x400259:	nop	
0x40025a:	leave	
0x40025b:	ret	
