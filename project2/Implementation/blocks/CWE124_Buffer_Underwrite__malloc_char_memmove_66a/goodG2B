<Block for 0x40009a, 45 bytes>
0x40009a:	endbr64	
0x40009e:	push	rbp
0x40009f:	mov	rbp, rsp
0x4000a2:	sub	rsp, 0x40
0x4000a6:	mov	rax, qword ptr fs:[0x28]
0x4000af:	mov	qword ptr [rbp - 8], rax
0x4000b3:	xor	eax, eax
0x4000b5:	mov	qword ptr [rbp - 0x40], 0
0x4000bd:	mov	edi, 0x64
0x4000c2:	call	0x500000
<Block for 0x4000c7, 11 bytes>
0x4000c7:	mov	qword ptr [rbp - 0x38], rax
0x4000cb:	cmp	qword ptr [rbp - 0x38], 0
0x4000d0:	jne	0x4000dc
<Block for 0x4000d2, 10 bytes>
0x4000d2:	mov	edi, 0xffffffff
0x4000d7:	call	0x500008
<Block for 0x4000dc, 22 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x38]
0x4000e0:	mov	edx, 0x63
0x4000e5:	mov	esi, 0x41
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500010
<Block for 0x4000f2, 39 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x38]
0x4000f6:	add	rax, 0x63
0x4000fa:	mov	byte ptr [rax], 0
0x4000fd:	mov	rax, qword ptr [rbp - 0x38]
0x400101:	mov	qword ptr [rbp - 0x40], rax
0x400105:	mov	rax, qword ptr [rbp - 0x40]
0x400109:	mov	qword ptr [rbp - 0x20], rax
0x40010d:	lea	rax, [rbp - 0x30]
0x400111:	mov	rdi, rax
0x400114:	call	0x500028
<Block for 0x400119, 16 bytes>
0x400119:	nop	
0x40011a:	mov	rax, qword ptr [rbp - 8]
0x40011e:	xor	rax, qword ptr fs:[0x28]
0x400127:	je	0x40012e
<Block for 0x40012e, 2 bytes>
0x40012e:	leave	
0x40012f:	ret	
<Block for 0x400129, 5 bytes>
0x400129:	call	0x500020
