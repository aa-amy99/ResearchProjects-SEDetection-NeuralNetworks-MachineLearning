<Block for 0x400186, 161 bytes>
0x400186:	endbr64	
0x40018a:	push	rbp
0x40018b:	mov	rbp, rsp
0x40018e:	add	rsp, -0x80
0x400192:	mov	rax, qword ptr fs:[0x28]
0x40019b:	mov	qword ptr [rbp - 8], rax
0x40019f:	xor	eax, eax
0x4001a1:	mov	qword ptr [rbp - 0x70], 0
0x4001a9:	mov	qword ptr [rbp - 0x68], 0
0x4001b1:	mov	qword ptr [rbp - 0x60], 0
0x4001b9:	mov	qword ptr [rbp - 0x58], 0
0x4001c1:	mov	qword ptr [rbp - 0x50], 0
0x4001c9:	mov	qword ptr [rbp - 0x48], 0
0x4001d1:	mov	qword ptr [rbp - 0x40], 0
0x4001d9:	mov	qword ptr [rbp - 0x38], 0
0x4001e1:	mov	qword ptr [rbp - 0x30], 0
0x4001e9:	mov	qword ptr [rbp - 0x28], 0
0x4001f1:	mov	qword ptr [rbp - 0x20], 0
0x4001f9:	mov	qword ptr [rbp - 0x18], 0
0x400201:	mov	dword ptr [rbp - 0x10], 0
0x400208:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x40020f:	mov	rdx, qword ptr [rip + 0xffdea]
0x400216:	lea	rax, [rbp - 0x70]
0x40021a:	mov	esi, 0x64
0x40021f:	mov	rdi, rax
0x400222:	call	0x500008
<Block for 0x400227, 5 bytes>
0x400227:	test	rax, rax
0x40022a:	jne	0x40023c
<Block for 0x40022c, 12 bytes>
0x40022c:	lea	rdi, [rip + 0x20a]
0x400233:	call	0x500010
<Block for 0x40023c, 11 bytes>
0x40023c:	lea	rax, [rbp - 0x70]
0x400240:	movzx	eax, byte ptr [rax]
0x400243:	test	al, al
0x400245:	je	0x40025c
<Block for 0x400238, 15 bytes>
0x400238:	mov	byte ptr [rbp - 0x70], 0
0x40023c:	lea	rax, [rbp - 0x70]
0x400240:	movzx	eax, byte ptr [rax]
0x400243:	test	al, al
0x400245:	je	0x40025c
<Block for 0x40025c, 22 bytes>
0x40025c:	lea	rax, [rbp - 0x70]
0x400260:	mov	esi, 2
0x400265:	mov	rdi, rax
0x400268:	mov	eax, 0
0x40026d:	call	0x500030
<Block for 0x400247, 12 bytes>
0x400247:	lea	rax, [rbp - 0x70]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x500018
<Block for 0x400272, 9 bytes>
0x400272:	mov	dword ptr [rbp - 0x74], eax
0x400275:	cmp	dword ptr [rbp - 0x74], -1
0x400279:	jne	0x400285
<Block for 0x400253, 31 bytes>
0x400253:	sub	rax, 1
0x400257:	mov	byte ptr [rbp + rax - 0x70], 0
0x40025c:	lea	rax, [rbp - 0x70]
0x400260:	mov	esi, 2
0x400265:	mov	rdi, rax
0x400268:	mov	eax, 0
0x40026d:	call	0x500030
<Block for 0x40027b, 10 bytes>
0x40027b:	mov	edi, 1
0x400280:	call	0x500028
<Block for 0x400285, 22 bytes>
0x400285:	mov	eax, dword ptr [rbp - 0x74]
0x400288:	mov	edx, 0xc
0x40028d:	lea	rsi, [rip + 0x1c4]
0x400294:	mov	edi, eax
0x400296:	call	0x500038
<Block for 0x40029b, 6 bytes>
0x40029b:	cmp	rax, -1
0x40029f:	jne	0x4002ab
<Block for 0x4002a1, 10 bytes>
0x4002a1:	mov	edi, 1
0x4002a6:	call	0x500028
<Block for 0x4002ab, 6 bytes>
0x4002ab:	cmp	dword ptr [rbp - 0x74], -1
0x4002af:	je	0x4002bb
<Block for 0x4002bb, 16 bytes>
0x4002bb:	nop	
0x4002bc:	mov	rax, qword ptr [rbp - 8]
0x4002c0:	xor	rax, qword ptr fs:[0x28]
0x4002c9:	je	0x4002d0
<Block for 0x4002b1, 10 bytes>
0x4002b1:	mov	eax, dword ptr [rbp - 0x74]
0x4002b4:	mov	edi, eax
0x4002b6:	call	0x500040
<Block for 0x4002d0, 2 bytes>
0x4002d0:	leave	
0x4002d1:	ret	
<Block for 0x4002cb, 5 bytes>
0x4002cb:	call	0x500048
