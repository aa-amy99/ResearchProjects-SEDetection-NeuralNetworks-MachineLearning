<Block for 0x400000, 54 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	mov	eax, 0
0x400031:	call	0x500000
<Block for 0x400036, 4 bytes>
0x400036:	test	eax, eax
0x400038:	jne	0x400044
<Block for 0x40003a, 32 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 0xf0]
0x400041:	mov	byte ptr [rax], 0
0x400044:	lea	rax, [rbp - 0x70]
0x400048:	mov	edx, 0x63
0x40004d:	mov	esi, 0x43
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x400044, 22 bytes>
0x400044:	lea	rax, [rbp - 0x70]
0x400048:	mov	edx, 0x63
0x40004d:	mov	esi, 0x43
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40005a, 16 bytes>
0x40005a:	mov	byte ptr [rbp - 0xd], 0
0x40005e:	lea	rax, [rbp - 0x70]
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x40006a, 36 bytes>
0x40006a:	mov	qword ptr [rbp - 0xe8], rax
0x400071:	mov	rdx, qword ptr [rbp - 0xe8]
0x400078:	lea	rcx, [rbp - 0x70]
0x40007c:	mov	rax, qword ptr [rbp - 0xf0]
0x400083:	mov	rsi, rcx
0x400086:	mov	rdi, rax
0x400089:	call	0x500018
<Block for 0x40008e, 15 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 0xf0]
0x400095:	mov	rdi, rax
0x400098:	call	0x500020
<Block for 0x40009d, 16 bytes>
0x40009d:	nop	
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	xor	rax, qword ptr fs:[0x28]
0x4000ab:	je	0x4000b2
<Block for 0x4000b2, 2 bytes>
0x4000b2:	leave	
0x4000b3:	ret	
<Block for 0x4000ad, 5 bytes>
0x4000ad:	call	0x500028
