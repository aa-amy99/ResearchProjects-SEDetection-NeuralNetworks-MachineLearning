<Block for 0x4000b4, 54 bytes>
0x4000b4:	endbr64	
0x4000b8:	push	rbp
0x4000b9:	mov	rbp, rsp
0x4000bc:	sub	rsp, 0xf0
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	lea	rax, [rbp - 0xe0]
0x4000d9:	mov	qword ptr [rbp - 0xf0], rax
0x4000e0:	mov	eax, 0
0x4000e5:	call	0x500000
<Block for 0x4000ea, 4 bytes>
0x4000ea:	test	eax, eax
0x4000ec:	je	0x4000fa
<Block for 0x4000fa, 32 bytes>
0x4000fa:	mov	rax, qword ptr [rbp - 0xf0]
0x400101:	mov	byte ptr [rax], 0
0x400104:	lea	rax, [rbp - 0x70]
0x400108:	mov	edx, 0x63
0x40010d:	mov	esi, 0x43
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x4000ee, 12 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0xf0]
0x4000f5:	mov	byte ptr [rax], 0
0x4000f8:	jmp	0x400104
<Block for 0x40011a, 16 bytes>
0x40011a:	mov	byte ptr [rbp - 0xd], 0
0x40011e:	lea	rax, [rbp - 0x70]
0x400122:	mov	rdi, rax
0x400125:	call	0x500010
<Block for 0x400104, 22 bytes>
0x400104:	lea	rax, [rbp - 0x70]
0x400108:	mov	edx, 0x63
0x40010d:	mov	esi, 0x43
0x400112:	mov	rdi, rax
0x400115:	call	0x500008
<Block for 0x40012a, 36 bytes>
0x40012a:	mov	qword ptr [rbp - 0xe8], rax
0x400131:	mov	rdx, qword ptr [rbp - 0xe8]
0x400138:	lea	rcx, [rbp - 0x70]
0x40013c:	mov	rax, qword ptr [rbp - 0xf0]
0x400143:	mov	rsi, rcx
0x400146:	mov	rdi, rax
0x400149:	call	0x500018
<Block for 0x40014e, 15 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 0xf0]
0x400155:	mov	rdi, rax
0x400158:	call	0x500020
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500028
