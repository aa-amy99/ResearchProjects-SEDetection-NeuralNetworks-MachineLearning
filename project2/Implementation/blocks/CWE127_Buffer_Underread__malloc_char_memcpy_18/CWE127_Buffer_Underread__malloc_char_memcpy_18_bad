<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	nop	
0x40002b:	endbr64	
0x40002f:	mov	edi, 0x64
0x400034:	call	0x500000
<Block for 0x400039, 17 bytes>
0x400039:	mov	qword ptr [rbp - 0x88], rax
0x400040:	cmp	qword ptr [rbp - 0x88], 0
0x400048:	jne	0x400054
<Block for 0x40004a, 10 bytes>
0x40004a:	mov	edi, 0xffffffff
0x40004f:	call	0x500008
<Block for 0x400054, 25 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x88]
0x40005b:	mov	edx, 0x63
0x400060:	mov	esi, 0x41
0x400065:	mov	rdi, rax
0x400068:	call	0x500010
<Block for 0x40006d, 54 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 0x88]
0x400074:	add	rax, 0x63
0x400078:	mov	byte ptr [rax], 0
0x40007b:	mov	rax, qword ptr [rbp - 0x88]
0x400082:	sub	rax, 8
0x400086:	mov	qword ptr [rbp - 0x90], rax
0x40008d:	lea	rax, [rbp - 0x80]
0x400091:	mov	edx, 0x63
0x400096:	mov	esi, 0x43
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500010
<Block for 0x4000a3, 128 bytes>
0x4000a3:	mov	byte ptr [rbp - 0x1d], 0
0x4000a7:	mov	rax, qword ptr [rbp - 0x90]
0x4000ae:	mov	rcx, qword ptr [rax]
0x4000b1:	mov	rbx, qword ptr [rax + 8]
0x4000b5:	mov	qword ptr [rbp - 0x80], rcx
0x4000b9:	mov	qword ptr [rbp - 0x78], rbx
0x4000bd:	mov	rcx, qword ptr [rax + 0x10]
0x4000c1:	mov	rbx, qword ptr [rax + 0x18]
0x4000c5:	mov	qword ptr [rbp - 0x70], rcx
0x4000c9:	mov	qword ptr [rbp - 0x68], rbx
0x4000cd:	mov	rcx, qword ptr [rax + 0x20]
0x4000d1:	mov	rbx, qword ptr [rax + 0x28]
0x4000d5:	mov	qword ptr [rbp - 0x60], rcx
0x4000d9:	mov	qword ptr [rbp - 0x58], rbx
0x4000dd:	mov	rcx, qword ptr [rax + 0x30]
0x4000e1:	mov	rbx, qword ptr [rax + 0x38]
0x4000e5:	mov	qword ptr [rbp - 0x50], rcx
0x4000e9:	mov	qword ptr [rbp - 0x48], rbx
0x4000ed:	mov	rcx, qword ptr [rax + 0x40]
0x4000f1:	mov	rbx, qword ptr [rax + 0x48]
0x4000f5:	mov	qword ptr [rbp - 0x40], rcx
0x4000f9:	mov	qword ptr [rbp - 0x38], rbx
0x4000fd:	mov	rcx, qword ptr [rax + 0x50]
0x400101:	mov	rbx, qword ptr [rax + 0x58]
0x400105:	mov	qword ptr [rbp - 0x30], rcx
0x400109:	mov	qword ptr [rbp - 0x28], rbx
0x40010d:	mov	eax, dword ptr [rax + 0x60]
0x400110:	mov	dword ptr [rbp - 0x20], eax
0x400113:	mov	byte ptr [rbp - 0x1d], 0
0x400117:	lea	rax, [rbp - 0x80]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500018
<Block for 0x400123, 16 bytes>
0x400123:	nop	
0x400124:	mov	rax, qword ptr [rbp - 0x18]
0x400128:	xor	rax, qword ptr fs:[0x28]
0x400131:	je	0x400138
<Block for 0x400138, 10 bytes>
0x400138:	add	rsp, 0x88
0x40013f:	pop	rbx
0x400140:	pop	rbp
0x400141:	ret	
<Block for 0x400133, 5 bytes>
0x400133:	call	0x500020
