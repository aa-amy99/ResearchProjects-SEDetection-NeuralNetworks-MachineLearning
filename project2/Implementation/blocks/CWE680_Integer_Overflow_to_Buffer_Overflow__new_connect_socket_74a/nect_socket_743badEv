<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xa8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xa0]
0x400026:	mov	rdi, rax
0x400029:	call	0x4004b0
<Block for 0x40002e, 40 bytes>
0x40002e:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x400038:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x400042:	mov	edx, 6
0x400047:	mov	esi, 1
0x40004c:	mov	edi, 2
0x400051:	call	0x500000
<Block for 0x400056, 19 bytes>
0x400056:	mov	dword ptr [rbp - 0xa8], eax
0x40005c:	cmp	dword ptr [rbp - 0xa8], -1
0x400063:	je	0x400119
<Block for 0x400119, 3 bytes>
0x400119:	nop	
0x40011a:	jmp	0x40011d
<Block for 0x400069, 22 bytes>
0x400069:	lea	rax, [rbp - 0x40]
0x40006d:	mov	edx, 0x10
0x400072:	mov	esi, 0
0x400077:	mov	rdi, rax
0x40007a:	call	0x500008
<Block for 0x40011d, 9 bytes>
0x40011d:	cmp	dword ptr [rbp - 0xa8], -1
0x400124:	je	0x400133
<Block for 0x40007f, 18 bytes>
0x40007f:	mov	word ptr [rbp - 0x40], 2
0x400085:	lea	rdi, [rip + 0x316]
0x40008c:	call	0x500010
<Block for 0x400133, 29 bytes>
0x400133:	mov	dword ptr [rbp - 0x70], 0
0x40013a:	lea	rdx, [rbp - 0x70]
0x40013e:	lea	rax, [rbp - 0xa0]
0x400145:	mov	rsi, rdx
0x400148:	mov	rdi, rax
0x40014b:	call	0x40066a
<Block for 0x400126, 13 bytes>
0x400126:	mov	eax, dword ptr [rbp - 0xa8]
0x40012c:	mov	edi, eax
0x40012e:	call	0x500038
<Block for 0x400091, 13 bytes>
0x400091:	mov	dword ptr [rbp - 0x3c], eax
0x400094:	mov	edi, 0x6987
0x400099:	call	0x500018
<Block for 0x400150, 37 bytes>
0x400150:	mov	edx, dword ptr [rbp - 0xac]
0x400156:	mov	dword ptr [rax], edx
0x400158:	mov	dword ptr [rbp - 0x70], 1
0x40015f:	lea	rdx, [rbp - 0x70]
0x400163:	lea	rax, [rbp - 0xa0]
0x40016a:	mov	rsi, rdx
0x40016d:	mov	rdi, rax
0x400170:	call	0x40066a
<Block for 0x40009e, 29 bytes>
0x40009e:	mov	word ptr [rbp - 0x3e], ax
0x4000a2:	lea	rcx, [rbp - 0x40]
0x4000a6:	mov	eax, dword ptr [rbp - 0xa8]
0x4000ac:	mov	edx, 0x10
0x4000b1:	mov	rsi, rcx
0x4000b4:	mov	edi, eax
0x4000b6:	call	0x500020
<Block for 0x400175, 37 bytes>
0x400175:	mov	edx, dword ptr [rbp - 0xac]
0x40017b:	mov	dword ptr [rax], edx
0x40017d:	mov	dword ptr [rbp - 0x70], 2
0x400184:	lea	rdx, [rbp - 0x70]
0x400188:	lea	rax, [rbp - 0xa0]
0x40018f:	mov	rsi, rdx
0x400192:	mov	rdi, rax
0x400195:	call	0x40066a
<Block for 0x4000bb, 10 bytes>
0x4000bb:	cmp	eax, -1
0x4000be:	sete	al
0x4000c1:	test	al, al
0x4000c3:	jne	0x40011c
<Block for 0x40019a, 30 bytes>
0x40019a:	mov	edx, dword ptr [rbp - 0xac]
0x4001a0:	mov	dword ptr [rax], edx
0x4001a2:	lea	rdx, [rbp - 0xa0]
0x4001a9:	lea	rax, [rbp - 0x70]
0x4001ad:	mov	rsi, rdx
0x4001b0:	mov	rdi, rax
0x4001b3:	call	0x4004f0
<Block for 0x4000c5, 27 bytes>
0x4000c5:	lea	rsi, [rbp - 0x26]
0x4000c9:	mov	eax, dword ptr [rbp - 0xa8]
0x4000cf:	mov	ecx, 0
0x4000d4:	mov	edx, 0xd
0x4000d9:	mov	edi, eax
0x4000db:	call	0x500028
<Block for 0x40011c, 1 bytes>
0x40011c:	nop	
<Block for 0x4001b8, 12 bytes>
0x4001b8:	lea	rax, [rbp - 0x70]
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x500040
<Block for 0x4000e0, 15 bytes>
0x4000e0:	mov	dword ptr [rbp - 0xa4], eax
0x4000e6:	cmp	dword ptr [rbp - 0xa4], -1
0x4000ed:	je	0x40011d
<Block for 0x4001c4, 12 bytes>
0x4001c4:	lea	rax, [rbp - 0x70]
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x4004d0
<Block for 0x4000ef, 9 bytes>
0x4000ef:	cmp	dword ptr [rbp - 0xa4], 0
0x4000f6:	je	0x40011d
<Block for 0x4001d0, 15 bytes>
0x4001d0:	lea	rax, [rbp - 0xa0]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x4004d0
<Block for 0x4000f8, 25 bytes>
0x4000f8:	mov	eax, dword ptr [rbp - 0xa4]
0x4000fe:	cdqe	
0x400100:	mov	byte ptr [rbp + rax - 0x26], 0
0x400105:	lea	rax, [rbp - 0x26]
0x400109:	mov	rdi, rax
0x40010c:	call	0x500030
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 0x18]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x40022c
<Block for 0x400111, 8 bytes>
0x400111:	mov	dword ptr [rbp - 0xac], eax
0x400117:	jmp	0x40011d
<Block for 0x40022c, 10 bytes>
0x40022c:	add	rsp, 0xa8
0x400233:	pop	rbx
0x400234:	pop	rbp
0x400235:	ret	
<Block for 0x4001ef, 2 bytes>
0x4001ef:	jmp	0x400227
<Block for 0x400227, 5 bytes>
0x400227:	call	0x500050
