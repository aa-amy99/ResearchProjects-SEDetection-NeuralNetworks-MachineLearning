<Block for 0x40015a, 98 bytes>
0x40015a:	endbr64	
0x40015e:	push	rbp
0x40015f:	mov	rbp, rsp
0x400162:	sub	rsp, 0xf0
0x400169:	mov	rax, qword ptr fs:[0x28]
0x400172:	mov	qword ptr [rbp - 8], rax
0x400176:	xor	eax, eax
0x400178:	lea	rax, [rbp - 0xf0]
0x40017f:	mov	qword ptr [rbp - 0xe8], rax
0x400186:	mov	eax, 0x10
0x40018b:	sub	rax, 1
0x40018f:	add	rax, 0x6c
0x400193:	mov	ecx, 0x10
0x400198:	mov	edx, 0
0x40019d:	div	rcx
0x4001a0:	imul	rax, rax, 0x10
0x4001a4:	mov	rdx, rax
0x4001a7:	and	rdx, 0xfffffffffffff000
0x4001ae:	mov	rcx, rsp
0x4001b1:	sub	rcx, rdx
0x4001b4:	mov	rdx, rcx
0x4001b7:	cmp	rsp, rdx
0x4001ba:	je	0x4001ce
<Block for 0x4001ce, 26 bytes>
0x4001ce:	mov	rdx, rax
0x4001d1:	and	edx, 0xfff
0x4001d7:	sub	rsp, rdx
0x4001da:	mov	rdx, rax
0x4001dd:	and	edx, 0xfff
0x4001e3:	test	rdx, rdx
0x4001e6:	je	0x4001f8
<Block for 0x4001bc, 18 bytes>
0x4001bc:	sub	rsp, 0x1000
0x4001c3:	or	qword ptr [rsp + 0xff8], 0
0x4001cc:	jmp	0x4001b7
<Block for 0x4001f8, 47 bytes>
0x4001f8:	mov	rax, rsp
0x4001fb:	add	rax, 0xf
0x4001ff:	shr	rax, 4
0x400203:	shl	rax, 4
0x400207:	mov	qword ptr [rbp - 0xe0], rax
0x40020e:	mov	rax, qword ptr [rbp - 0xe0]
0x400215:	mov	edx, 0x63
0x40021a:	mov	esi, 0x41
0x40021f:	mov	rdi, rax
0x400222:	call	0x500000
<Block for 0x4001e8, 63 bytes>
0x4001e8:	and	eax, 0xfff
0x4001ed:	sub	rax, 8
0x4001f1:	add	rax, rsp
0x4001f4:	or	qword ptr [rax], 0
0x4001f8:	mov	rax, rsp
0x4001fb:	add	rax, 0xf
0x4001ff:	shr	rax, 4
0x400203:	shl	rax, 4
0x400207:	mov	qword ptr [rbp - 0xe0], rax
0x40020e:	mov	rax, qword ptr [rbp - 0xe0]
0x400215:	mov	edx, 0x63
0x40021a:	mov	esi, 0x41
0x40021f:	mov	rdi, rax
0x400222:	call	0x500000
<Block for 0x4001b7, 5 bytes>
0x4001b7:	cmp	rsp, rdx
0x4001ba:	je	0x4001ce
<Block for 0x400227, 70 bytes>
0x400227:	mov	rax, qword ptr [rbp - 0xe0]
0x40022e:	add	rax, 0x63
0x400232:	mov	byte ptr [rax], 0
0x400235:	mov	rax, qword ptr [rbp - 0xe0]
0x40023c:	mov	qword ptr [rbp - 0xf0], rax
0x400243:	mov	rax, qword ptr [rbp - 0xe8]
0x40024a:	mov	rax, qword ptr [rax]
0x40024d:	mov	qword ptr [rbp - 0xd8], rax
0x400254:	lea	rax, [rbp - 0xd0]
0x40025b:	mov	edx, 0xc7
0x400260:	mov	esi, 0x43
0x400265:	mov	rdi, rax
0x400268:	call	0x500000
<Block for 0x40026d, 29 bytes>
0x40026d:	mov	byte ptr [rbp - 9], 0
0x400271:	mov	rdx, qword ptr [rbp - 0xd8]
0x400278:	lea	rax, [rbp - 0xd0]
0x40027f:	mov	rsi, rdx
0x400282:	mov	rdi, rax
0x400285:	call	0x500008
<Block for 0x40028a, 15 bytes>
0x40028a:	lea	rax, [rbp - 0xd0]
0x400291:	mov	rdi, rax
0x400294:	call	0x500010
<Block for 0x400299, 16 bytes>
0x400299:	nop	
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	xor	rax, qword ptr fs:[0x28]
0x4002a7:	je	0x4002ae
<Block for 0x4002ae, 2 bytes>
0x4002ae:	leave	
0x4002af:	ret	
<Block for 0x4002a9, 5 bytes>
0x4002a9:	call	0x500018
