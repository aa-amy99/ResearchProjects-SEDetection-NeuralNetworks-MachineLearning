<Block for 0x400000, 98 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xf0]
0x400025:	mov	qword ptr [rbp - 0xe8], rax
0x40002c:	mov	eax, 0x10
0x400031:	sub	rax, 1
0x400035:	add	rax, 0x6c
0x400039:	mov	ecx, 0x10
0x40003e:	mov	edx, 0
0x400043:	div	rcx
0x400046:	imul	rax, rax, 0x10
0x40004a:	mov	rdx, rax
0x40004d:	and	rdx, 0xfffffffffffff000
0x400054:	mov	rcx, rsp
0x400057:	sub	rcx, rdx
0x40005a:	mov	rdx, rcx
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x400074, 26 bytes>
0x400074:	mov	rdx, rax
0x400077:	and	edx, 0xfff
0x40007d:	sub	rsp, rdx
0x400080:	mov	rdx, rax
0x400083:	and	edx, 0xfff
0x400089:	test	rdx, rdx
0x40008c:	je	0x40009e
<Block for 0x400062, 18 bytes>
0x400062:	sub	rsp, 0x1000
0x400069:	or	qword ptr [rsp + 0xff8], 0
0x400072:	jmp	0x40005d
<Block for 0x40009e, 47 bytes>
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0xe0], rax
0x4000b4:	mov	rax, qword ptr [rbp - 0xe0]
0x4000bb:	mov	edx, 0x63
0x4000c0:	mov	esi, 0x41
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500000
<Block for 0x40008e, 63 bytes>
0x40008e:	and	eax, 0xfff
0x400093:	sub	rax, 8
0x400097:	add	rax, rsp
0x40009a:	or	qword ptr [rax], 0
0x40009e:	mov	rax, rsp
0x4000a1:	add	rax, 0xf
0x4000a5:	shr	rax, 4
0x4000a9:	shl	rax, 4
0x4000ad:	mov	qword ptr [rbp - 0xe0], rax
0x4000b4:	mov	rax, qword ptr [rbp - 0xe0]
0x4000bb:	mov	edx, 0x63
0x4000c0:	mov	esi, 0x41
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500000
<Block for 0x40005d, 5 bytes>
0x40005d:	cmp	rsp, rdx
0x400060:	je	0x400074
<Block for 0x4000cd, 74 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 0xe0]
0x4000d4:	add	rax, 0x63
0x4000d8:	mov	byte ptr [rax], 0
0x4000db:	mov	rax, qword ptr [rbp - 0xe0]
0x4000e2:	sub	rax, 8
0x4000e6:	mov	qword ptr [rbp - 0xf0], rax
0x4000ed:	mov	rax, qword ptr [rbp - 0xe8]
0x4000f4:	mov	rax, qword ptr [rax]
0x4000f7:	mov	qword ptr [rbp - 0xd8], rax
0x4000fe:	lea	rax, [rbp - 0xd0]
0x400105:	mov	edx, 0xc7
0x40010a:	mov	esi, 0x43
0x40010f:	mov	rdi, rax
0x400112:	call	0x500000
<Block for 0x400117, 29 bytes>
0x400117:	mov	byte ptr [rbp - 9], 0
0x40011b:	mov	rdx, qword ptr [rbp - 0xd8]
0x400122:	lea	rax, [rbp - 0xd0]
0x400129:	mov	rsi, rdx
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x400134, 15 bytes>
0x400134:	lea	rax, [rbp - 0xd0]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500010
<Block for 0x400143, 16 bytes>
0x400143:	nop	
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	xor	rax, qword ptr fs:[0x28]
0x400151:	je	0x400158
<Block for 0x400158, 2 bytes>
0x400158:	leave	
0x400159:	ret	
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500018
