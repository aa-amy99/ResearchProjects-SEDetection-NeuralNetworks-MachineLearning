<Block for 0x400066, 53 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x28
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 0x18], rax
0x400080:	xor	eax, eax
0x400082:	mov	dword ptr [rbp - 0x2c], 5
0x400089:	lea	rax, [rbp - 0x2c]
0x40008d:	mov	qword ptr [rbp - 0x28], rax
0x400091:	mov	edi, 8
0x400096:	call	0x500000
<Block for 0x40009b, 11 bytes>
0x40009b:	mov	rbx, rax
0x40009e:	mov	rdi, rbx
0x4000a1:	call	0x4001be
<Block for 0x4000a6, 30 bytes>
0x4000a6:	mov	qword ptr [rbp - 0x20], rbx
0x4000aa:	mov	rax, qword ptr [rbp - 0x20]
0x4000ae:	mov	rax, qword ptr [rax]
0x4000b1:	mov	rcx, qword ptr [rax]
0x4000b4:	mov	rdx, qword ptr [rbp - 0x28]
0x4000b8:	mov	rax, qword ptr [rbp - 0x20]
0x4000bc:	mov	rsi, rdx
0x4000bf:	mov	rdi, rax
0x4000c2:	call	rcx
<Block for 0x4000c4, 9 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x20]
0x4000c8:	test	rax, rax
0x4000cb:	je	0x4000da
<Block for 0x4000da, 16 bytes>
0x4000da:	nop	
0x4000db:	mov	rax, qword ptr [rbp - 0x18]
0x4000df:	xor	rax, qword ptr fs:[0x28]
0x4000e8:	je	0x4000ef
<Block for 0x4000cd, 13 bytes>
0x4000cd:	mov	esi, 8
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500008
<Block for 0x4000ef, 7 bytes>
0x4000ef:	add	rsp, 0x28
0x4000f3:	pop	rbx
0x4000f4:	pop	rbp
0x4000f5:	ret	
<Block for 0x4000ea, 5 bytes>
0x4000ea:	call	0x500010
