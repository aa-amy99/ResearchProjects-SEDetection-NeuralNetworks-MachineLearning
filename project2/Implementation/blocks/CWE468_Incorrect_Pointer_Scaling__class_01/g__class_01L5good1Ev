<Block for 0x400078, 47 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	push	r12
0x400082:	push	rbx
0x400083:	sub	rsp, 0x30
0x400087:	mov	rax, qword ptr fs:[0x28]
0x400090:	mov	qword ptr [rbp - 0x18], rax
0x400094:	xor	eax, eax
0x400096:	lea	rax, [rbp - 0x30]
0x40009a:	mov	ebx, 4
0x40009f:	mov	r12, rax
0x4000a2:	test	rbx, rbx
0x4000a5:	js	0x4000b9
<Block for 0x4000b9, 25 bytes>
0x4000b9:	lea	rax, [rbp - 0x30]
0x4000bd:	mov	qword ptr [rbp - 0x38], rax
0x4000c1:	mov	rax, qword ptr [rbp - 0x38]
0x4000c5:	add	rax, 0xc
0x4000c9:	mov	eax, dword ptr [rax]
0x4000cb:	mov	edi, eax
0x4000cd:	call	0x500000
<Block for 0x4000a7, 8 bytes>
0x4000a7:	mov	rdi, r12
0x4000aa:	call	0x400100
<Block for 0x4000d2, 16 bytes>
0x4000d2:	nop	
0x4000d3:	mov	rax, qword ptr [rbp - 0x18]
0x4000d7:	xor	rax, qword ptr fs:[0x28]
0x4000e0:	je	0x4000e7
<Block for 0x4000af, 10 bytes>
0x4000af:	add	r12, 4
0x4000b3:	sub	rbx, 1
0x4000b7:	jmp	0x4000a2
<Block for 0x4000e7, 9 bytes>
0x4000e7:	add	rsp, 0x30
0x4000eb:	pop	rbx
0x4000ec:	pop	r12
0x4000ee:	pop	rbp
0x4000ef:	ret	
<Block for 0x4000e2, 5 bytes>
0x4000e2:	call	0x500008
<Block for 0x4000a2, 5 bytes>
0x4000a2:	test	rbx, rbx
0x4000a5:	js	0x4000b9
