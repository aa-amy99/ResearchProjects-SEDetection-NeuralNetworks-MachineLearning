<Block for 0x400238, 30 bytes>
0x400238:	endbr64	
0x40023c:	push	rbp
0x40023d:	mov	rbp, rsp
0x400240:	sub	rsp, 0x10
0x400244:	mov	qword ptr [rbp - 8], 0
0x40024c:	mov	edi, 0x320
0x400251:	call	0x500000
<Block for 0x400256, 11 bytes>
0x400256:	mov	qword ptr [rbp - 8], rax
0x40025a:	cmp	qword ptr [rbp - 8], 0
0x40025f:	jne	0x40026b
<Block for 0x400261, 10 bytes>
0x400261:	mov	edi, 0xffffffff
0x400266:	call	0x500008
<Block for 0x40026b, 10 bytes>
0x40026b:	mov	qword ptr [rbp - 0x10], 0
0x400273:	jmp	0x4002ad
<Block for 0x4002ad, 7 bytes>
0x4002ad:	cmp	qword ptr [rbp - 0x10], 0x63
0x4002b2:	jbe	0x400275
<Block for 0x400275, 63 bytes>
0x400275:	mov	rax, qword ptr [rbp - 0x10]
0x400279:	lea	rdx, [rax*8]
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	add	rax, rdx
0x400288:	mov	dword ptr [rax], 1
0x40028e:	mov	rax, qword ptr [rbp - 0x10]
0x400292:	lea	rdx, [rax*8]
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	add	rax, rdx
0x4002a1:	mov	dword ptr [rax + 4], 2
0x4002a8:	add	qword ptr [rbp - 0x10], 1
0x4002ad:	cmp	qword ptr [rbp - 0x10], 0x63
0x4002b2:	jbe	0x400275
<Block for 0x4002b4, 12 bytes>
0x4002b4:	mov	rax, qword ptr [rbp - 8]
0x4002b8:	mov	rdi, rax
0x4002bb:	call	0x500018
<Block for 0x4002c0, 3 bytes>
0x4002c0:	nop	
0x4002c1:	leave	
0x4002c2:	ret	
