<Block for 0x400066, 34 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x18
0x400073:	lea	rax, [rip + 0x149]
0x40007a:	mov	qword ptr [rbp - 0x20], rax
0x40007e:	mov	edi, 8
0x400083:	call	0x500000
<Block for 0x400088, 11 bytes>
0x400088:	mov	rbx, rax
0x40008b:	mov	rdi, rbx
0x40008e:	call	0x400196
<Block for 0x400093, 30 bytes>
0x400093:	mov	qword ptr [rbp - 0x18], rbx
0x400097:	mov	rax, qword ptr [rbp - 0x18]
0x40009b:	mov	rax, qword ptr [rax]
0x40009e:	mov	rcx, qword ptr [rax]
0x4000a1:	mov	rdx, qword ptr [rbp - 0x20]
0x4000a5:	mov	rax, qword ptr [rbp - 0x18]
0x4000a9:	mov	rsi, rdx
0x4000ac:	mov	rdi, rax
0x4000af:	call	rcx
<Block for 0x4000b1, 9 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 0x18]
0x4000b5:	test	rax, rax
0x4000b8:	je	0x4000c7
<Block for 0x4000c7, 8 bytes>
0x4000c7:	nop	
0x4000c8:	add	rsp, 0x18
0x4000cc:	pop	rbx
0x4000cd:	pop	rbp
0x4000ce:	ret	
<Block for 0x4000ba, 13 bytes>
0x4000ba:	mov	esi, 8
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x500008
