<Block for 0x4001be, 46 bytes>
0x4001be:	endbr64	
0x4001c2:	push	rbp
0x4001c3:	mov	rbp, rsp
0x4001c6:	add	rsp, -0x80
0x4001ca:	mov	rax, qword ptr fs:[0x28]
0x4001d3:	mov	qword ptr [rbp - 8], rax
0x4001d7:	xor	eax, eax
0x4001d9:	mov	qword ptr [rbp - 0x80], 0
0x4001e1:	mov	eax, dword ptr [rip + 0xffe19]
0x4001e7:	cmp	eax, 5
0x4001ea:	jne	0x400234
<Block for 0x4001ec, 10 bytes>
0x4001ec:	mov	edi, 0x64
0x4001f1:	call	0x500008
<Block for 0x400234, 22 bytes>
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	edx, 0x63
0x40023d:	mov	esi, 0x43
0x400242:	mov	rdi, rax
0x400245:	call	0x500018
<Block for 0x4001f6, 11 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x78], rax
0x4001fa:	cmp	qword ptr [rbp - 0x78], 0
0x4001ff:	jne	0x40020b
<Block for 0x40024a, 28 bytes>
0x40024a:	mov	byte ptr [rbp - 0xd], 0
0x40024e:	lea	rcx, [rbp - 0x70]
0x400252:	mov	rax, qword ptr [rbp - 0x80]
0x400256:	mov	edx, 0x64
0x40025b:	mov	rsi, rcx
0x40025e:	mov	rdi, rax
0x400261:	call	0x500020
<Block for 0x400201, 10 bytes>
0x400201:	mov	edi, 0xffffffff
0x400206:	call	0x500010
<Block for 0x40020b, 22 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x78]
0x40020f:	mov	edx, 0x63
0x400214:	mov	esi, 0x41
0x400219:	mov	rdi, rax
0x40021c:	call	0x500018
<Block for 0x400266, 23 bytes>
0x400266:	mov	rax, qword ptr [rbp - 0x80]
0x40026a:	add	rax, 0x63
0x40026e:	mov	byte ptr [rax], 0
0x400271:	mov	rax, qword ptr [rbp - 0x80]
0x400275:	mov	rdi, rax
0x400278:	call	0x500028
<Block for 0x400221, 41 bytes>
0x400221:	mov	rax, qword ptr [rbp - 0x78]
0x400225:	add	rax, 0x63
0x400229:	mov	byte ptr [rax], 0
0x40022c:	mov	rax, qword ptr [rbp - 0x78]
0x400230:	mov	qword ptr [rbp - 0x80], rax
0x400234:	lea	rax, [rbp - 0x70]
0x400238:	mov	edx, 0x63
0x40023d:	mov	esi, 0x43
0x400242:	mov	rdi, rax
0x400245:	call	0x500018
<Block for 0x40027d, 16 bytes>
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500030
