<Block for 0x400207, 154 bytes>
0x400207:	endbr64	
0x40020b:	push	rbp
0x40020c:	mov	rbp, rsp
0x40020f:	sub	rsp, 0xb0
0x400216:	mov	rax, qword ptr fs:[0x28]
0x40021f:	mov	qword ptr [rbp - 8], rax
0x400223:	xor	eax, eax
0x400225:	mov	qword ptr [rbp - 0x70], 0
0x40022d:	mov	qword ptr [rbp - 0x68], 0
0x400235:	mov	qword ptr [rbp - 0x60], 0
0x40023d:	mov	qword ptr [rbp - 0x58], 0
0x400245:	mov	qword ptr [rbp - 0x50], 0
0x40024d:	mov	qword ptr [rbp - 0x48], 0
0x400255:	mov	qword ptr [rbp - 0x40], 0
0x40025d:	mov	qword ptr [rbp - 0x38], 0
0x400265:	mov	qword ptr [rbp - 0x30], 0
0x40026d:	mov	qword ptr [rbp - 0x28], 0
0x400275:	mov	qword ptr [rbp - 0x20], 0
0x40027d:	mov	qword ptr [rbp - 0x18], 0
0x400285:	mov	dword ptr [rbp - 0x10], 0
0x40028c:	lea	rax, [rbp - 0x70]
0x400290:	mov	qword ptr [rbp - 0x98], rax
0x400297:	mov	eax, 0
0x40029c:	call	0x500000
<Block for 0x4002a1, 4 bytes>
0x4002a1:	test	eax, eax
0x4002a3:	je	0x4002fe
<Block for 0x4002fe, 15 bytes>
0x4002fe:	mov	rax, qword ptr [rbp - 0x98]
0x400305:	mov	rdi, rax
0x400308:	call	0x500008
<Block for 0x4002a5, 15 bytes>
0x4002a5:	mov	rax, qword ptr [rbp - 0x98]
0x4002ac:	mov	rdi, rax
0x4002af:	call	0x500008
<Block for 0x40030d, 19 bytes>
0x40030d:	mov	qword ptr [rbp - 0x90], rax
0x400314:	lea	rdi, [rip + 0x312]
0x40031b:	call	0x500010
<Block for 0x4002b4, 16 bytes>
0x4002b4:	mov	qword ptr [rbp - 0x80], rax
0x4002b8:	lea	rdi, [rip + 0x36e]
0x4002bf:	call	0x500010
<Block for 0x400320, 17 bytes>
0x400320:	mov	qword ptr [rbp - 0x88], rax
0x400327:	cmp	qword ptr [rbp - 0x88], 0
0x40032f:	je	0x400363
<Block for 0x4002c4, 15 bytes>
0x4002c4:	mov	qword ptr [rbp - 0x78], rax
0x4002c8:	cmp	qword ptr [rbp - 0x78], 0
0x4002cd:	je	0x400363
<Block for 0x400363, 10 bytes>
0x400363:	mov	eax, 0
0x400368:	call	0x500000
<Block for 0x400331, 50 bytes>
0x400331:	mov	eax, 0x63
0x400336:	sub	rax, qword ptr [rbp - 0x90]
0x40033d:	mov	rdx, rax
0x400340:	mov	rcx, qword ptr [rbp - 0x98]
0x400347:	mov	rax, qword ptr [rbp - 0x90]
0x40034e:	add	rcx, rax
0x400351:	mov	rax, qword ptr [rbp - 0x88]
0x400358:	mov	rsi, rax
0x40035b:	mov	rdi, rcx
0x40035e:	call	0x500018
<Block for 0x4002d3, 41 bytes>
0x4002d3:	mov	eax, 0x63
0x4002d8:	sub	rax, qword ptr [rbp - 0x80]
0x4002dc:	mov	rdx, rax
0x4002df:	mov	rcx, qword ptr [rbp - 0x98]
0x4002e6:	mov	rax, qword ptr [rbp - 0x80]
0x4002ea:	add	rcx, rax
0x4002ed:	mov	rax, qword ptr [rbp - 0x78]
0x4002f1:	mov	rsi, rax
0x4002f4:	mov	rdi, rcx
0x4002f7:	call	0x500018
<Block for 0x40036d, 4 bytes>
0x40036d:	test	eax, eax
0x40036f:	je	0x4003ee
<Block for 0x4002fc, 2 bytes>
0x4002fc:	jmp	0x400363
<Block for 0x4003ee, 34 bytes>
0x4003ee:	lea	rdx, [rbp - 0xac]
0x4003f5:	mov	rax, qword ptr [rbp - 0x98]
0x4003fc:	lea	rsi, [rip + 0x22e]
0x400403:	mov	rdi, rax
0x400406:	mov	eax, 0
0x40040b:	call	0x500020
<Block for 0x400371, 34 bytes>
0x400371:	lea	rdx, [rbp - 0xac]
0x400378:	mov	rax, qword ptr [rbp - 0x98]
0x40037f:	lea	rsi, [rip + 0x2ab]
0x400386:	mov	rdi, rax
0x400389:	mov	eax, 0
0x40038e:	call	0x500020
<Block for 0x400410, 5 bytes>
0x400410:	cmp	eax, 1
0x400413:	jne	0x400461
<Block for 0x400393, 9 bytes>
0x400393:	cmp	eax, 1
0x400396:	jne	0x400461
<Block for 0x400415, 13 bytes>
0x400415:	mov	eax, dword ptr [rbp - 0xac]
0x40041b:	cmp	eax, 0x270f
0x400420:	jg	0x400461
<Block for 0x400461, 16 bytes>
0x400461:	nop	
0x400462:	mov	rax, qword ptr [rbp - 8]
0x400466:	xor	rax, qword ptr fs:[0x28]
0x40046f:	je	0x400476
<Block for 0x40039c, 17 bytes>
0x40039c:	mov	eax, dword ptr [rbp - 0xac]
0x4003a2:	cmp	eax, 0x270f
0x4003a7:	jg	0x400461
<Block for 0x400422, 22 bytes>
0x400422:	mov	dword ptr [rbp - 0x9c], 0
0x40042c:	mov	dword ptr [rbp - 0xa0], 0
0x400436:	jmp	0x400446
<Block for 0x400476, 2 bytes>
0x400476:	leave	
0x400477:	ret	
<Block for 0x400471, 5 bytes>
0x400471:	call	0x500030
<Block for 0x4003ad, 22 bytes>
0x4003ad:	mov	dword ptr [rbp - 0xa4], 0
0x4003b7:	mov	dword ptr [rbp - 0xa8], 0
0x4003c1:	jmp	0x4003d1
<Block for 0x400446, 14 bytes>
0x400446:	mov	eax, dword ptr [rbp - 0xac]
0x40044c:	cmp	dword ptr [rbp - 0xa0], eax
0x400452:	jl	0x400438
<Block for 0x4003d1, 14 bytes>
0x4003d1:	mov	eax, dword ptr [rbp - 0xac]
0x4003d7:	cmp	dword ptr [rbp - 0xa8], eax
0x4003dd:	jl	0x4003c3
<Block for 0x400438, 28 bytes>
0x400438:	add	dword ptr [rbp - 0x9c], 1
0x40043f:	add	dword ptr [rbp - 0xa0], 1
0x400446:	mov	eax, dword ptr [rbp - 0xac]
0x40044c:	cmp	dword ptr [rbp - 0xa0], eax
0x400452:	jl	0x400438
<Block for 0x400454, 13 bytes>
0x400454:	mov	eax, dword ptr [rbp - 0x9c]
0x40045a:	mov	edi, eax
0x40045c:	call	0x500028
<Block for 0x4003c3, 28 bytes>
0x4003c3:	add	dword ptr [rbp - 0xa4], 1
0x4003ca:	add	dword ptr [rbp - 0xa8], 1
0x4003d1:	mov	eax, dword ptr [rbp - 0xac]
0x4003d7:	cmp	dword ptr [rbp - 0xa8], eax
0x4003dd:	jl	0x4003c3
<Block for 0x4003df, 13 bytes>
0x4003df:	mov	eax, dword ptr [rbp - 0xa4]
0x4003e5:	mov	edi, eax
0x4003e7:	call	0x500028
<Block for 0x4003ec, 2 bytes>
0x4003ec:	jmp	0x400461
