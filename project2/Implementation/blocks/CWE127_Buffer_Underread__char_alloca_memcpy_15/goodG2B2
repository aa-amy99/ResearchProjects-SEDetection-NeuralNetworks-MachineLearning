<Block for 0x400320, 85 bytes>
0x400320:	endbr64	
0x400324:	push	rbp
0x400325:	mov	rbp, rsp
0x400328:	push	rbx
0x400329:	sub	rsp, 0x88
0x400330:	mov	rax, qword ptr fs:[0x28]
0x400339:	mov	qword ptr [rbp - 0x18], rax
0x40033d:	xor	eax, eax
0x40033f:	mov	eax, 0x10
0x400344:	sub	rax, 1
0x400348:	add	rax, 0x6c
0x40034c:	mov	esi, 0x10
0x400351:	mov	edx, 0
0x400356:	div	rsi
0x400359:	imul	rax, rax, 0x10
0x40035d:	mov	rdx, rax
0x400360:	and	rdx, 0xfffffffffffff000
0x400367:	mov	rbx, rsp
0x40036a:	sub	rbx, rdx
0x40036d:	mov	rdx, rbx
0x400370:	cmp	rsp, rdx
0x400373:	je	0x400387
<Block for 0x400387, 26 bytes>
0x400387:	mov	rdx, rax
0x40038a:	and	edx, 0xfff
0x400390:	sub	rsp, rdx
0x400393:	mov	rdx, rax
0x400396:	and	edx, 0xfff
0x40039c:	test	rdx, rdx
0x40039f:	je	0x4003b1
<Block for 0x400375, 18 bytes>
0x400375:	sub	rsp, 0x1000
0x40037c:	or	qword ptr [rsp + 0xff8], 0
0x400385:	jmp	0x400370
<Block for 0x4003b1, 47 bytes>
0x4003b1:	mov	rax, rsp
0x4003b4:	add	rax, 0xf
0x4003b8:	shr	rax, 4
0x4003bc:	shl	rax, 4
0x4003c0:	mov	qword ptr [rbp - 0x90], rax
0x4003c7:	mov	rax, qword ptr [rbp - 0x90]
0x4003ce:	mov	edx, 0x63
0x4003d3:	mov	esi, 0x41
0x4003d8:	mov	rdi, rax
0x4003db:	call	0x500000
<Block for 0x4003a1, 63 bytes>
0x4003a1:	and	eax, 0xfff
0x4003a6:	sub	rax, 8
0x4003aa:	add	rax, rsp
0x4003ad:	or	qword ptr [rax], 0
0x4003b1:	mov	rax, rsp
0x4003b4:	add	rax, 0xf
0x4003b8:	shr	rax, 4
0x4003bc:	shl	rax, 4
0x4003c0:	mov	qword ptr [rbp - 0x90], rax
0x4003c7:	mov	rax, qword ptr [rbp - 0x90]
0x4003ce:	mov	edx, 0x63
0x4003d3:	mov	esi, 0x41
0x4003d8:	mov	rdi, rax
0x4003db:	call	0x500000
<Block for 0x400370, 5 bytes>
0x400370:	cmp	rsp, rdx
0x400373:	je	0x400387
<Block for 0x4003e0, 51 bytes>
0x4003e0:	mov	rax, qword ptr [rbp - 0x90]
0x4003e7:	add	rax, 0x63
0x4003eb:	mov	byte ptr [rax], 0
0x4003ee:	mov	rax, qword ptr [rbp - 0x90]
0x4003f5:	mov	qword ptr [rbp - 0x88], rax
0x4003fc:	nop	
0x4003fd:	lea	rax, [rbp - 0x80]
0x400401:	mov	edx, 0x63
0x400406:	mov	esi, 0x43
0x40040b:	mov	rdi, rax
0x40040e:	call	0x500000
<Block for 0x400413, 128 bytes>
0x400413:	mov	byte ptr [rbp - 0x1d], 0
0x400417:	mov	rax, qword ptr [rbp - 0x88]
0x40041e:	mov	rcx, qword ptr [rax]
0x400421:	mov	rbx, qword ptr [rax + 8]
0x400425:	mov	qword ptr [rbp - 0x80], rcx
0x400429:	mov	qword ptr [rbp - 0x78], rbx
0x40042d:	mov	rcx, qword ptr [rax + 0x10]
0x400431:	mov	rbx, qword ptr [rax + 0x18]
0x400435:	mov	qword ptr [rbp - 0x70], rcx
0x400439:	mov	qword ptr [rbp - 0x68], rbx
0x40043d:	mov	rcx, qword ptr [rax + 0x20]
0x400441:	mov	rbx, qword ptr [rax + 0x28]
0x400445:	mov	qword ptr [rbp - 0x60], rcx
0x400449:	mov	qword ptr [rbp - 0x58], rbx
0x40044d:	mov	rcx, qword ptr [rax + 0x30]
0x400451:	mov	rbx, qword ptr [rax + 0x38]
0x400455:	mov	qword ptr [rbp - 0x50], rcx
0x400459:	mov	qword ptr [rbp - 0x48], rbx
0x40045d:	mov	rcx, qword ptr [rax + 0x40]
0x400461:	mov	rbx, qword ptr [rax + 0x48]
0x400465:	mov	qword ptr [rbp - 0x40], rcx
0x400469:	mov	qword ptr [rbp - 0x38], rbx
0x40046d:	mov	rcx, qword ptr [rax + 0x50]
0x400471:	mov	rbx, qword ptr [rax + 0x58]
0x400475:	mov	qword ptr [rbp - 0x30], rcx
0x400479:	mov	qword ptr [rbp - 0x28], rbx
0x40047d:	mov	eax, dword ptr [rax + 0x60]
0x400480:	mov	dword ptr [rbp - 0x20], eax
0x400483:	mov	byte ptr [rbp - 0x1d], 0
0x400487:	lea	rax, [rbp - 0x80]
0x40048b:	mov	rdi, rax
0x40048e:	call	0x500008
<Block for 0x400493, 16 bytes>
0x400493:	nop	
0x400494:	mov	rax, qword ptr [rbp - 0x18]
0x400498:	xor	rax, qword ptr fs:[0x28]
0x4004a1:	je	0x4004a8
<Block for 0x4004a8, 6 bytes>
0x4004a8:	mov	rbx, qword ptr [rbp - 8]
0x4004ac:	leave	
0x4004ad:	ret	
<Block for 0x4004a3, 5 bytes>
0x4004a3:	call	0x500010
