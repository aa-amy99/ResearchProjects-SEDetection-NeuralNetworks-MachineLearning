<Block for 0x400192, 85 bytes>
0x400192:	endbr64	
0x400196:	push	rbp
0x400197:	mov	rbp, rsp
0x40019a:	push	rbx
0x40019b:	sub	rsp, 0x88
0x4001a2:	mov	rax, qword ptr fs:[0x28]
0x4001ab:	mov	qword ptr [rbp - 0x18], rax
0x4001af:	xor	eax, eax
0x4001b1:	mov	eax, 0x10
0x4001b6:	sub	rax, 1
0x4001ba:	add	rax, 0x6c
0x4001be:	mov	esi, 0x10
0x4001c3:	mov	edx, 0
0x4001c8:	div	rsi
0x4001cb:	imul	rax, rax, 0x10
0x4001cf:	mov	rdx, rax
0x4001d2:	and	rdx, 0xfffffffffffff000
0x4001d9:	mov	rbx, rsp
0x4001dc:	sub	rbx, rdx
0x4001df:	mov	rdx, rbx
0x4001e2:	cmp	rsp, rdx
0x4001e5:	je	0x4001f9
<Block for 0x4001f9, 26 bytes>
0x4001f9:	mov	rdx, rax
0x4001fc:	and	edx, 0xfff
0x400202:	sub	rsp, rdx
0x400205:	mov	rdx, rax
0x400208:	and	edx, 0xfff
0x40020e:	test	rdx, rdx
0x400211:	je	0x400223
<Block for 0x4001e7, 18 bytes>
0x4001e7:	sub	rsp, 0x1000
0x4001ee:	or	qword ptr [rsp + 0xff8], 0
0x4001f7:	jmp	0x4001e2
<Block for 0x400223, 47 bytes>
0x400223:	mov	rax, rsp
0x400226:	add	rax, 0xf
0x40022a:	shr	rax, 4
0x40022e:	shl	rax, 4
0x400232:	mov	qword ptr [rbp - 0x90], rax
0x400239:	mov	rax, qword ptr [rbp - 0x90]
0x400240:	mov	edx, 0x63
0x400245:	mov	esi, 0x41
0x40024a:	mov	rdi, rax
0x40024d:	call	0x500000
<Block for 0x400213, 63 bytes>
0x400213:	and	eax, 0xfff
0x400218:	sub	rax, 8
0x40021c:	add	rax, rsp
0x40021f:	or	qword ptr [rax], 0
0x400223:	mov	rax, rsp
0x400226:	add	rax, 0xf
0x40022a:	shr	rax, 4
0x40022e:	shl	rax, 4
0x400232:	mov	qword ptr [rbp - 0x90], rax
0x400239:	mov	rax, qword ptr [rbp - 0x90]
0x400240:	mov	edx, 0x63
0x400245:	mov	esi, 0x41
0x40024a:	mov	rdi, rax
0x40024d:	call	0x500000
<Block for 0x4001e2, 5 bytes>
0x4001e2:	cmp	rsp, rdx
0x4001e5:	je	0x4001f9
<Block for 0x400252, 51 bytes>
0x400252:	mov	rax, qword ptr [rbp - 0x90]
0x400259:	add	rax, 0x63
0x40025d:	mov	byte ptr [rax], 0
0x400260:	mov	rax, qword ptr [rbp - 0x90]
0x400267:	mov	qword ptr [rbp - 0x88], rax
0x40026e:	nop	
0x40026f:	lea	rax, [rbp - 0x80]
0x400273:	mov	edx, 0x63
0x400278:	mov	esi, 0x43
0x40027d:	mov	rdi, rax
0x400280:	call	0x500000
<Block for 0x400285, 128 bytes>
0x400285:	mov	byte ptr [rbp - 0x1d], 0
0x400289:	mov	rax, qword ptr [rbp - 0x88]
0x400290:	mov	rcx, qword ptr [rax]
0x400293:	mov	rbx, qword ptr [rax + 8]
0x400297:	mov	qword ptr [rbp - 0x80], rcx
0x40029b:	mov	qword ptr [rbp - 0x78], rbx
0x40029f:	mov	rcx, qword ptr [rax + 0x10]
0x4002a3:	mov	rbx, qword ptr [rax + 0x18]
0x4002a7:	mov	qword ptr [rbp - 0x70], rcx
0x4002ab:	mov	qword ptr [rbp - 0x68], rbx
0x4002af:	mov	rcx, qword ptr [rax + 0x20]
0x4002b3:	mov	rbx, qword ptr [rax + 0x28]
0x4002b7:	mov	qword ptr [rbp - 0x60], rcx
0x4002bb:	mov	qword ptr [rbp - 0x58], rbx
0x4002bf:	mov	rcx, qword ptr [rax + 0x30]
0x4002c3:	mov	rbx, qword ptr [rax + 0x38]
0x4002c7:	mov	qword ptr [rbp - 0x50], rcx
0x4002cb:	mov	qword ptr [rbp - 0x48], rbx
0x4002cf:	mov	rcx, qword ptr [rax + 0x40]
0x4002d3:	mov	rbx, qword ptr [rax + 0x48]
0x4002d7:	mov	qword ptr [rbp - 0x40], rcx
0x4002db:	mov	qword ptr [rbp - 0x38], rbx
0x4002df:	mov	rcx, qword ptr [rax + 0x50]
0x4002e3:	mov	rbx, qword ptr [rax + 0x58]
0x4002e7:	mov	qword ptr [rbp - 0x30], rcx
0x4002eb:	mov	qword ptr [rbp - 0x28], rbx
0x4002ef:	mov	eax, dword ptr [rax + 0x60]
0x4002f2:	mov	dword ptr [rbp - 0x20], eax
0x4002f5:	mov	byte ptr [rbp - 0x1d], 0
0x4002f9:	lea	rax, [rbp - 0x80]
0x4002fd:	mov	rdi, rax
0x400300:	call	0x500008
<Block for 0x400305, 16 bytes>
0x400305:	nop	
0x400306:	mov	rax, qword ptr [rbp - 0x18]
0x40030a:	xor	rax, qword ptr fs:[0x28]
0x400313:	je	0x40031a
<Block for 0x40031a, 6 bytes>
0x40031a:	mov	rbx, qword ptr [rbp - 8]
0x40031e:	leave	
0x40031f:	ret	
<Block for 0x400315, 5 bytes>
0x400315:	call	0x500010
