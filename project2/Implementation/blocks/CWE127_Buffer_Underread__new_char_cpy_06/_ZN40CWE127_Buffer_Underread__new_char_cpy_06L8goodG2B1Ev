<Block for 0x4000cf, 51 bytes>
0x4000cf:	endbr64	
0x4000d3:	push	rbp
0x4000d4:	mov	rbp, rsp
0x4000d7:	sub	rsp, 0xe0
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	qword ptr [rbp - 0xe0], 0
0x4000f8:	mov	edi, 0x64
0x4000fd:	call	0x500000
<Block for 0x400102, 32 bytes>
0x400102:	mov	qword ptr [rbp - 0xd8], rax
0x400109:	mov	rax, qword ptr [rbp - 0xd8]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x41
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500008
<Block for 0x400122, 53 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0xd8]
0x400129:	add	rax, 0x63
0x40012d:	mov	byte ptr [rax], 0
0x400130:	mov	rax, qword ptr [rbp - 0xd8]
0x400137:	mov	qword ptr [rbp - 0xe0], rax
0x40013e:	lea	rax, [rbp - 0xd0]
0x400145:	mov	edx, 0xc7
0x40014a:	mov	esi, 0x43
0x40014f:	mov	rdi, rax
0x400152:	call	0x500008
<Block for 0x400157, 29 bytes>
0x400157:	mov	byte ptr [rbp - 9], 0
0x40015b:	mov	rdx, qword ptr [rbp - 0xe0]
0x400162:	lea	rax, [rbp - 0xd0]
0x400169:	mov	rsi, rdx
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500010
<Block for 0x400174, 15 bytes>
0x400174:	lea	rax, [rbp - 0xd0]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500018
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500020
