<Block for 0x4000d2, 31 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	sub	rsp, 0x20
0x4000de:	mov	qword ptr [rbp - 0x18], rdi
0x4000e2:	mov	rax, qword ptr [rbp - 0x18]
0x4000e6:	mov	rax, qword ptr [rax]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500000
<Block for 0x4000f1, 19 bytes>
0x4000f1:	mov	qword ptr [rbp - 0x10], rax
0x4000f5:	mov	eax, 0x64
0x4000fa:	sub	rax, qword ptr [rbp - 0x10]
0x4000fe:	cmp	rax, 1
0x400102:	jbe	0x400182
<Block for 0x400182, 3 bytes>
0x400182:	nop	
0x400183:	leave	
0x400184:	ret	
<Block for 0x400104, 19 bytes>
0x400104:	lea	rsi, [rip + 0x7a]
0x40010b:	lea	rdi, [rip + 0x75]
0x400112:	call	0x500008
<Block for 0x400117, 11 bytes>
0x400117:	mov	qword ptr [rbp - 8], rax
0x40011b:	cmp	qword ptr [rbp - 8], 0
0x400120:	je	0x400182
<Block for 0x400122, 45 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x10]
0x400126:	mov	edx, 0x64
0x40012b:	sub	edx, eax
0x40012d:	mov	eax, edx
0x40012f:	mov	esi, eax
0x400131:	mov	rax, qword ptr [rbp - 0x18]
0x400135:	mov	rdx, qword ptr [rax]
0x400138:	mov	rax, qword ptr [rbp - 0x10]
0x40013c:	lea	rcx, [rdx + rax]
0x400140:	mov	rax, qword ptr [rbp - 8]
0x400144:	mov	rdx, rax
0x400147:	mov	rdi, rcx
0x40014a:	call	0x500010
<Block for 0x40014f, 10 bytes>
0x40014f:	test	rax, rax
0x400152:	sete	al
0x400155:	test	al, al
0x400157:	je	0x400176
<Block for 0x400176, 12 bytes>
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500020
<Block for 0x400159, 12 bytes>
0x400159:	lea	rdi, [rip + 0x35]
0x400160:	call	0x500018
<Block for 0x400165, 29 bytes>
0x400165:	mov	rax, qword ptr [rbp - 0x18]
0x400169:	mov	rdx, qword ptr [rax]
0x40016c:	mov	rax, qword ptr [rbp - 0x10]
0x400170:	add	rax, rdx
0x400173:	mov	byte ptr [rax], 0
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500020
