<Block for 0x40029a, 45 bytes>
0x40029a:	endbr64	
0x40029e:	push	rbp
0x40029f:	mov	rbp, rsp
0x4002a2:	sub	rsp, 0xa0
0x4002a9:	mov	rax, qword ptr fs:[0x28]
0x4002b2:	mov	qword ptr [rbp - 8], rax
0x4002b6:	xor	eax, eax
0x4002b8:	mov	dword ptr [rbp - 0xa0], 0
0x4002c2:	jmp	0x400510
<Block for 0x400510, 13 bytes>
0x400510:	cmp	dword ptr [rbp - 0xa0], 0
0x400517:	jle	0x4002c7
<Block for 0x4002c7, 135 bytes>
0x4002c7:	mov	qword ptr [rbp - 0x70], 0
0x4002cf:	mov	qword ptr [rbp - 0x68], 0
0x4002d7:	mov	qword ptr [rbp - 0x60], 0
0x4002df:	mov	qword ptr [rbp - 0x58], 0
0x4002e7:	mov	qword ptr [rbp - 0x50], 0
0x4002ef:	mov	qword ptr [rbp - 0x48], 0
0x4002f7:	mov	qword ptr [rbp - 0x40], 0
0x4002ff:	mov	qword ptr [rbp - 0x38], 0
0x400307:	mov	qword ptr [rbp - 0x30], 0
0x40030f:	mov	qword ptr [rbp - 0x28], 0
0x400317:	mov	qword ptr [rbp - 0x20], 0
0x40031f:	mov	qword ptr [rbp - 0x18], 0
0x400327:	mov	dword ptr [rbp - 0x10], 0
0x40032e:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400338:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400342:	lea	rax, [rbp - 0x70]
0x400346:	mov	rdi, rax
0x400349:	call	0x500000
<Block for 0x40051d, 16 bytes>
0x40051d:	nop	
0x40051e:	mov	rax, qword ptr [rbp - 8]
0x400522:	xor	rax, qword ptr fs:[0x28]
0x40052b:	je	0x400532
<Block for 0x40034e, 27 bytes>
0x40034e:	mov	qword ptr [rbp - 0x90], rax
0x400355:	mov	edx, 6
0x40035a:	mov	esi, 1
0x40035f:	mov	edi, 2
0x400364:	call	0x500008
<Block for 0x400532, 2 bytes>
0x400532:	leave	
0x400533:	ret	
<Block for 0x40052d, 5 bytes>
0x40052d:	call	0x500058
<Block for 0x400369, 19 bytes>
0x400369:	mov	dword ptr [rbp - 0x98], eax
0x40036f:	cmp	dword ptr [rbp - 0x98], -1
0x400376:	je	0x4004c7
<Block for 0x4004c7, 3 bytes>
0x4004c7:	nop	
0x4004c8:	jmp	0x4004d1
<Block for 0x40037c, 22 bytes>
0x40037c:	lea	rax, [rbp - 0x80]
0x400380:	mov	edx, 0x10
0x400385:	mov	esi, 0
0x40038a:	mov	rdi, rax
0x40038d:	call	0x500010
<Block for 0x4004d1, 9 bytes>
0x4004d1:	cmp	dword ptr [rbp - 0x98], -1
0x4004d8:	je	0x4004e7
<Block for 0x400392, 23 bytes>
0x400392:	mov	word ptr [rbp - 0x80], 2
0x400398:	mov	dword ptr [rbp - 0x7c], 0
0x40039f:	mov	edi, 0x6987
0x4003a4:	call	0x500018
<Block for 0x4004e7, 9 bytes>
0x4004e7:	cmp	dword ptr [rbp - 0x9c], -1
0x4004ee:	je	0x4004fd
<Block for 0x4004da, 13 bytes>
0x4004da:	mov	eax, dword ptr [rbp - 0x98]
0x4004e0:	mov	edi, eax
0x4004e2:	call	0x500048
<Block for 0x4003a9, 29 bytes>
0x4003a9:	mov	word ptr [rbp - 0x7e], ax
0x4003ad:	lea	rcx, [rbp - 0x80]
0x4003b1:	mov	eax, dword ptr [rbp - 0x98]
0x4003b7:	mov	edx, 0x10
0x4003bc:	mov	rsi, rcx
0x4003bf:	mov	edi, eax
0x4003c1:	call	0x500028
<Block for 0x4004fd, 12 bytes>
0x4004fd:	lea	rax, [rbp - 0x70]
0x400501:	mov	rdi, rax
0x400504:	call	0x500050
<Block for 0x4004f0, 13 bytes>
0x4004f0:	mov	eax, dword ptr [rbp - 0x9c]
0x4004f6:	mov	edi, eax
0x4004f8:	call	0x500048
<Block for 0x4003c6, 9 bytes>
0x4003c6:	cmp	eax, -1
0x4003c9:	je	0x4004ca
<Block for 0x400509, 20 bytes>
0x400509:	add	dword ptr [rbp - 0xa0], 1
0x400510:	cmp	dword ptr [rbp - 0xa0], 0
0x400517:	jle	0x4002c7
<Block for 0x4004ca, 3 bytes>
0x4004ca:	nop	
0x4004cb:	jmp	0x4004d1
<Block for 0x4003cf, 18 bytes>
0x4003cf:	mov	eax, dword ptr [rbp - 0x98]
0x4003d5:	mov	esi, 5
0x4003da:	mov	edi, eax
0x4003dc:	call	0x500030
<Block for 0x4003e1, 9 bytes>
0x4003e1:	cmp	eax, -1
0x4003e4:	je	0x4004cd
<Block for 0x4004cd, 3 bytes>
0x4004cd:	nop	
0x4004ce:	jmp	0x4004d1
<Block for 0x4003ea, 23 bytes>
0x4003ea:	mov	eax, dword ptr [rbp - 0x98]
0x4003f0:	mov	edx, 0
0x4003f5:	mov	esi, 0
0x4003fa:	mov	edi, eax
0x4003fc:	call	0x500020
<Block for 0x400401, 19 bytes>
0x400401:	mov	dword ptr [rbp - 0x9c], eax
0x400407:	cmp	dword ptr [rbp - 0x9c], -1
0x40040e:	je	0x4004d0
<Block for 0x400414, 52 bytes>
0x400414:	mov	rax, qword ptr [rbp - 0x90]
0x40041b:	mov	edx, 0x63
0x400420:	sub	edx, eax
0x400422:	mov	eax, edx
0x400424:	movsxd	rdx, eax
0x400427:	lea	rcx, [rbp - 0x70]
0x40042b:	mov	rax, qword ptr [rbp - 0x90]
0x400432:	lea	rsi, [rcx + rax]
0x400436:	mov	eax, dword ptr [rbp - 0x9c]
0x40043c:	mov	ecx, 0
0x400441:	mov	edi, eax
0x400443:	call	0x500038
<Block for 0x4004d0, 1 bytes>
0x4004d0:	nop	
<Block for 0x400448, 15 bytes>
0x400448:	mov	dword ptr [rbp - 0x94], eax
0x40044e:	cmp	dword ptr [rbp - 0x94], -1
0x400455:	je	0x4004d1
<Block for 0x400457, 9 bytes>
0x400457:	cmp	dword ptr [rbp - 0x94], 0
0x40045e:	je	0x4004d1
<Block for 0x400460, 30 bytes>
0x400460:	mov	eax, dword ptr [rbp - 0x94]
0x400466:	cdqe	
0x400468:	mov	byte ptr [rbp + rax - 0x70], 0
0x40046d:	lea	rax, [rbp - 0x70]
0x400471:	mov	esi, 0xd
0x400476:	mov	rdi, rax
0x400479:	call	0x500040
<Block for 0x40047e, 17 bytes>
0x40047e:	mov	qword ptr [rbp - 0x88], rax
0x400485:	cmp	qword ptr [rbp - 0x88], 0
0x40048d:	je	0x400499
<Block for 0x400499, 17 bytes>
0x400499:	lea	rax, [rbp - 0x70]
0x40049d:	mov	esi, 0xa
0x4004a2:	mov	rdi, rax
0x4004a5:	call	0x500040
<Block for 0x40048f, 27 bytes>
0x40048f:	mov	rax, qword ptr [rbp - 0x88]
0x400496:	mov	byte ptr [rax], 0
0x400499:	lea	rax, [rbp - 0x70]
0x40049d:	mov	esi, 0xa
0x4004a2:	mov	rdi, rax
0x4004a5:	call	0x500040
<Block for 0x4004aa, 17 bytes>
0x4004aa:	mov	qword ptr [rbp - 0x88], rax
0x4004b1:	cmp	qword ptr [rbp - 0x88], 0
0x4004b9:	je	0x4004d1
<Block for 0x4004bb, 12 bytes>
0x4004bb:	mov	rax, qword ptr [rbp - 0x88]
0x4004c2:	mov	byte ptr [rax], 0
0x4004c5:	jmp	0x4004d1
