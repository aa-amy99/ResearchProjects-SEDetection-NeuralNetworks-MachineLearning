<Block for 0x400313, 22 bytes>
0x400313:	endbr64	
0x400317:	push	rbp
0x400318:	mov	rbp, rsp
0x40031b:	push	r13
0x40031d:	push	r12
0x40031f:	push	rbx
0x400320:	sub	rsp, 0x18
0x400324:	call	0x500000
<Block for 0x400329, 13 bytes>
0x400329:	test	eax, eax
0x40032b:	setne	al
0x40032e:	test	al, al
0x400330:	je	0x40048b
<Block for 0x40048b, 11 bytes>
0x40048b:	add	rsp, 0x18
0x40048f:	pop	rbx
0x400490:	pop	r12
0x400492:	pop	r13
0x400494:	pop	rbp
0x400495:	ret	
<Block for 0x400336, 5 bytes>
0x400336:	call	0x500008
<Block for 0x40033b, 12 bytes>
0x40033b:	and	eax, 1
0x40033e:	test	eax, eax
0x400340:	sete	al
0x400343:	test	al, al
0x400345:	je	0x40037c
<Block for 0x40037c, 5 bytes>
0x40037c:	call	0x500008
<Block for 0x400347, 10 bytes>
0x400347:	mov	edi, 0x10
0x40034c:	call	0x500010
<Block for 0x400381, 12 bytes>
0x400381:	and	eax, 1
0x400384:	test	eax, eax
0x400386:	sete	al
0x400389:	test	al, al
0x40038b:	je	0x4003c2
<Block for 0x400351, 18 bytes>
0x400351:	mov	rbx, rax
0x400354:	lea	rsi, [rip + 0x151]
0x40035b:	mov	rdi, rbx
0x40035e:	call	0x500018
<Block for 0x4003c2, 12 bytes>
0x4003c2:	lea	rdi, [rip + 0xed]
0x4003c9:	call	0x500060
<Block for 0x40038d, 10 bytes>
0x40038d:	mov	edi, 0x10
0x400392:	call	0x500010
<Block for 0x400363, 25 bytes>
0x400363:	mov	rax, qword ptr [rip + 0xffcbe]
0x40036a:	mov	rdx, rax
0x40036d:	lea	rsi, [rip + 0xffcbc]
0x400374:	mov	rdi, rbx
0x400377:	call	0x500038
<Block for 0x4003ce, 5 bytes>
0x4003ce:	jmp	0x40048b
<Block for 0x400397, 18 bytes>
0x400397:	mov	rbx, rax
0x40039a:	lea	rsi, [rip + 0x110]
0x4003a1:	mov	rdi, rbx
0x4003a4:	call	0x500040
<Block for 0x4003a9, 25 bytes>
0x4003a9:	mov	rax, qword ptr [rip + 0xffca0]
0x4003b0:	mov	rdx, rax
0x4003b3:	lea	rsi, [rip + 0xffc9e]
0x4003ba:	mov	rdi, rbx
0x4003bd:	call	0x500038
