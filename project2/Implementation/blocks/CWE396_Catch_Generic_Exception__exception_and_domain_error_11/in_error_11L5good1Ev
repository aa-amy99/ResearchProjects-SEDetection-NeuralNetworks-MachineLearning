<Block for 0x400183, 22 bytes>
0x400183:	endbr64	
0x400187:	push	rbp
0x400188:	mov	rbp, rsp
0x40018b:	push	r13
0x40018d:	push	r12
0x40018f:	push	rbx
0x400190:	sub	rsp, 0x18
0x400194:	call	0x500088
<Block for 0x400199, 9 bytes>
0x400199:	test	eax, eax
0x40019b:	setne	al
0x40019e:	test	al, al
0x4001a0:	je	0x4001b3
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500008
<Block for 0x4001a2, 12 bytes>
0x4001a2:	lea	rdi, [rip + 0x327]
0x4001a9:	call	0x500060
<Block for 0x4001b8, 12 bytes>
0x4001b8:	and	eax, 1
0x4001bb:	test	eax, eax
0x4001bd:	sete	al
0x4001c0:	test	al, al
0x4001c2:	je	0x4001f9
<Block for 0x4001ae, 5 bytes>
0x4001ae:	jmp	0x400308
<Block for 0x4001f9, 5 bytes>
0x4001f9:	call	0x500008
<Block for 0x4001c4, 10 bytes>
0x4001c4:	mov	edi, 0x10
0x4001c9:	call	0x500010
<Block for 0x400308, 11 bytes>
0x400308:	add	rsp, 0x18
0x40030c:	pop	rbx
0x40030d:	pop	r12
0x40030f:	pop	r13
0x400311:	pop	rbp
0x400312:	ret	
<Block for 0x4001fe, 12 bytes>
0x4001fe:	and	eax, 1
0x400201:	test	eax, eax
0x400203:	sete	al
0x400206:	test	al, al
0x400208:	je	0x40023f
<Block for 0x4001ce, 18 bytes>
0x4001ce:	mov	rbx, rax
0x4001d1:	lea	rsi, [rip + 0x2d4]
0x4001d8:	mov	rdi, rbx
0x4001db:	call	0x500018
<Block for 0x40023f, 12 bytes>
0x40023f:	lea	rdi, [rip + 0x270]
0x400246:	call	0x500060
<Block for 0x40020a, 10 bytes>
0x40020a:	mov	edi, 0x10
0x40020f:	call	0x500010
<Block for 0x4001e0, 25 bytes>
0x4001e0:	mov	rax, qword ptr [rip + 0xffe41]
0x4001e7:	mov	rdx, rax
0x4001ea:	lea	rsi, [rip + 0xffe3f]
0x4001f1:	mov	rdi, rbx
0x4001f4:	call	0x500038
<Block for 0x40024b, 5 bytes>
0x40024b:	jmp	0x400308
<Block for 0x400214, 18 bytes>
0x400214:	mov	rbx, rax
0x400217:	lea	rsi, [rip + 0x293]
0x40021e:	mov	rdi, rbx
0x400221:	call	0x500040
<Block for 0x400226, 25 bytes>
0x400226:	mov	rax, qword ptr [rip + 0xffe23]
0x40022d:	mov	rdx, rax
0x400230:	lea	rsi, [rip + 0xffe21]
0x400237:	mov	rdi, rbx
0x40023a:	call	0x500038
