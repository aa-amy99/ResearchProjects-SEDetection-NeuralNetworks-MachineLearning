<Block for 0x4001f3, 46 bytes>
0x4001f3:	endbr64	
0x4001f7:	push	rbp
0x4001f8:	mov	rbp, rsp
0x4001fb:	push	rbx
0x4001fc:	sub	rsp, 0xc8
0x400203:	mov	rax, qword ptr fs:[0x28]
0x40020c:	mov	qword ptr [rbp - 0x18], rax
0x400210:	xor	eax, eax
0x400212:	lea	rax, [rbp - 0xc0]
0x400219:	mov	rdi, rax
0x40021c:	call	0x400460
<Block for 0x400221, 22 bytes>
0x400221:	lea	rax, [rbp - 0x80]
0x400225:	mov	edx, 0x63
0x40022a:	mov	esi, 0x41
0x40022f:	mov	rdi, rax
0x400232:	call	0x500000
<Block for 0x400237, 30 bytes>
0x400237:	mov	byte ptr [rbp - 0x1d], 0
0x40023b:	lea	rax, [rbp - 0x80]
0x40023f:	mov	qword ptr [rbp - 0xd0], rax
0x400246:	lea	rax, [rbp - 0xc0]
0x40024d:	mov	rdi, rax
0x400250:	call	0x4005f2
<Block for 0x400255, 32 bytes>
0x400255:	mov	qword ptr [rbp - 0xc8], rax
0x40025c:	lea	rdx, [rbp - 0xc8]
0x400263:	lea	rax, [rbp - 0xa0]
0x40026a:	mov	rsi, rdx
0x40026d:	mov	rdi, rax
0x400270:	call	0x400642
<Block for 0x400275, 37 bytes>
0x400275:	lea	rdx, [rbp - 0xd0]
0x40027c:	mov	rsi, qword ptr [rbp - 0xa0]
0x400283:	lea	rax, [rbp - 0xc0]
0x40028a:	mov	rcx, rdx
0x40028d:	mov	edx, 1
0x400292:	mov	rdi, rax
0x400295:	call	0x400670
<Block for 0x40029a, 15 bytes>
0x40029a:	lea	rax, [rbp - 0xc0]
0x4002a1:	mov	rdi, rax
0x4002a4:	call	0x4005f2
<Block for 0x4002a9, 32 bytes>
0x4002a9:	mov	qword ptr [rbp - 0xc8], rax
0x4002b0:	lea	rdx, [rbp - 0xc8]
0x4002b7:	lea	rax, [rbp - 0xa0]
0x4002be:	mov	rsi, rdx
0x4002c1:	mov	rdi, rax
0x4002c4:	call	0x400642
<Block for 0x4002c9, 37 bytes>
0x4002c9:	lea	rdx, [rbp - 0xd0]
0x4002d0:	mov	rsi, qword ptr [rbp - 0xa0]
0x4002d7:	lea	rax, [rbp - 0xc0]
0x4002de:	mov	rcx, rdx
0x4002e1:	mov	edx, 1
0x4002e6:	mov	rdi, rax
0x4002e9:	call	0x400670
<Block for 0x4002ee, 15 bytes>
0x4002ee:	lea	rax, [rbp - 0xc0]
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x4005f2
<Block for 0x4002fd, 32 bytes>
0x4002fd:	mov	qword ptr [rbp - 0xc8], rax
0x400304:	lea	rdx, [rbp - 0xc8]
0x40030b:	lea	rax, [rbp - 0xa0]
0x400312:	mov	rsi, rdx
0x400315:	mov	rdi, rax
0x400318:	call	0x400642
<Block for 0x40031d, 37 bytes>
0x40031d:	lea	rdx, [rbp - 0xd0]
0x400324:	mov	rsi, qword ptr [rbp - 0xa0]
0x40032b:	lea	rax, [rbp - 0xc0]
0x400332:	mov	rcx, rdx
0x400335:	mov	edx, 1
0x40033a:	mov	rdi, rax
0x40033d:	call	0x400670
<Block for 0x400342, 25 bytes>
0x400342:	lea	rdx, [rbp - 0xc0]
0x400349:	lea	rax, [rbp - 0xa0]
0x400350:	mov	rsi, rdx
0x400353:	mov	rdi, rax
0x400356:	call	0x400736
<Block for 0x40035b, 15 bytes>
0x40035b:	lea	rax, [rbp - 0xa0]
0x400362:	mov	rdi, rax
0x400365:	call	0x500020
<Block for 0x40036a, 15 bytes>
0x40036a:	lea	rax, [rbp - 0xa0]
0x400371:	mov	rdi, rax
0x400374:	call	0x4005aa
<Block for 0x400379, 15 bytes>
0x400379:	lea	rax, [rbp - 0xc0]
0x400380:	mov	rdi, rax
0x400383:	call	0x4005aa
<Block for 0x400388, 16 bytes>
0x400388:	nop	
0x400389:	mov	rax, qword ptr [rbp - 0x18]
0x40038d:	xor	rax, qword ptr fs:[0x28]
0x400396:	je	0x4003d8
<Block for 0x4003d8, 10 bytes>
0x4003d8:	add	rsp, 0xc8
0x4003df:	pop	rbx
0x4003e0:	pop	rbp
0x4003e1:	ret	
<Block for 0x400398, 2 bytes>
0x400398:	jmp	0x4003d3
<Block for 0x4003d3, 5 bytes>
0x4003d3:	call	0x500018
