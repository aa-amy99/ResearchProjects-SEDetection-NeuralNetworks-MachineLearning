<Block for 0x400123, 30 bytes>
0x400123:	endbr64	
0x400127:	push	rbp
0x400128:	mov	rbp, rsp
0x40012b:	sub	rsp, 0x10
0x40012f:	mov	qword ptr [rbp - 8], 0
0x400137:	mov	eax, dword ptr [rip + 0xffec3]
0x40013d:	test	eax, eax
0x40013f:	je	0x40019b
<Block for 0x40019b, 3 bytes>
0x40019b:	nop	
0x40019c:	leave	
0x40019d:	ret	
<Block for 0x400141, 10 bytes>
0x400141:	mov	edi, 0x190
0x400146:	call	0x500008
<Block for 0x40014b, 11 bytes>
0x40014b:	mov	qword ptr [rbp - 8], rax
0x40014f:	cmp	qword ptr [rbp - 8], 0
0x400154:	jne	0x400160
<Block for 0x400156, 10 bytes>
0x400156:	mov	edi, 0xffffffff
0x40015b:	call	0x500010
<Block for 0x400160, 10 bytes>
0x400160:	mov	qword ptr [rbp - 0x10], 0
0x400168:	jmp	0x400188
<Block for 0x400188, 7 bytes>
0x400188:	cmp	qword ptr [rbp - 0x10], 0x63
0x40018d:	jbe	0x40016a
<Block for 0x40016a, 37 bytes>
0x40016a:	mov	rax, qword ptr [rbp - 0x10]
0x40016e:	lea	rdx, [rax*4]
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	add	rax, rdx
0x40017d:	mov	dword ptr [rax], 5
0x400183:	add	qword ptr [rbp - 0x10], 1
0x400188:	cmp	qword ptr [rbp - 0x10], 0x63
0x40018d:	jbe	0x40016a
<Block for 0x40018f, 12 bytes>
0x40018f:	mov	rax, qword ptr [rbp - 8]
0x400193:	mov	rdi, rax
0x400196:	call	0x500018
