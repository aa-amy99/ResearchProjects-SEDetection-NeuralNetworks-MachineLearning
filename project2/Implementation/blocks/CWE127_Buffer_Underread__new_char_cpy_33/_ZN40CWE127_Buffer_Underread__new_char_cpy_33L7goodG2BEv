<Block for 0x4000ee, 65 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	sub	rsp, 0xf0
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	lea	rax, [rbp - 0xf0]
0x400113:	mov	qword ptr [rbp - 0xe8], rax
0x40011a:	mov	qword ptr [rbp - 0xf0], 0
0x400125:	mov	edi, 0x64
0x40012a:	call	0x500000
<Block for 0x40012f, 32 bytes>
0x40012f:	mov	qword ptr [rbp - 0xe0], rax
0x400136:	mov	rax, qword ptr [rbp - 0xe0]
0x40013d:	mov	edx, 0x63
0x400142:	mov	esi, 0x41
0x400147:	mov	rdi, rax
0x40014a:	call	0x500008
<Block for 0x40014f, 70 bytes>
0x40014f:	mov	rax, qword ptr [rbp - 0xe0]
0x400156:	add	rax, 0x63
0x40015a:	mov	byte ptr [rax], 0
0x40015d:	mov	rax, qword ptr [rbp - 0xe0]
0x400164:	mov	qword ptr [rbp - 0xf0], rax
0x40016b:	mov	rax, qword ptr [rbp - 0xe8]
0x400172:	mov	rax, qword ptr [rax]
0x400175:	mov	qword ptr [rbp - 0xd8], rax
0x40017c:	lea	rax, [rbp - 0xd0]
0x400183:	mov	edx, 0xc7
0x400188:	mov	esi, 0x43
0x40018d:	mov	rdi, rax
0x400190:	call	0x500008
<Block for 0x400195, 29 bytes>
0x400195:	mov	byte ptr [rbp - 9], 0
0x400199:	mov	rdx, qword ptr [rbp - 0xd8]
0x4001a0:	lea	rax, [rbp - 0xd0]
0x4001a7:	mov	rsi, rdx
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x500010
<Block for 0x4001b2, 15 bytes>
0x4001b2:	lea	rax, [rbp - 0xd0]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500018
<Block for 0x4001c1, 16 bytes>
0x4001c1:	nop	
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	xor	rax, qword ptr fs:[0x28]
0x4001cf:	je	0x4001d6
<Block for 0x4001d6, 2 bytes>
0x4001d6:	leave	
0x4001d7:	ret	
<Block for 0x4001d1, 5 bytes>
0x4001d1:	call	0x500020
