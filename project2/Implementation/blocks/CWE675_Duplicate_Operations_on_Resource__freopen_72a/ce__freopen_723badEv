<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400582
<Block for 0x400028, 37 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	rax, qword ptr [rip + 0xfffc9]
0x400037:	mov	rdx, rax
0x40003a:	lea	rsi, [rip + 0x4bb]
0x400041:	lea	rdi, [rip + 0x4b7]
0x400048:	call	0x500008
<Block for 0x40004d, 16 bytes>
0x40004d:	mov	qword ptr [rbp - 0x60], rax
0x400051:	mov	rax, qword ptr [rbp - 0x60]
0x400055:	mov	rdi, rax
0x400058:	call	0x500010
<Block for 0x40005d, 12 bytes>
0x40005d:	lea	rax, [rbp - 0x50]
0x400061:	mov	rdi, rax
0x400064:	call	0x40072a
<Block for 0x400069, 23 bytes>
0x400069:	mov	qword ptr [rbp - 0x58], rax
0x40006d:	lea	rdx, [rbp - 0x58]
0x400071:	lea	rax, [rbp - 0x30]
0x400075:	mov	rsi, rdx
0x400078:	mov	rdi, rax
0x40007b:	call	0x40077a
<Block for 0x400080, 28 bytes>
0x400080:	lea	rdx, [rbp - 0x60]
0x400084:	mov	rsi, qword ptr [rbp - 0x30]
0x400088:	lea	rax, [rbp - 0x50]
0x40008c:	mov	rcx, rdx
0x40008f:	mov	edx, 1
0x400094:	mov	rdi, rax
0x400097:	call	0x4007a8
<Block for 0x40009c, 12 bytes>
0x40009c:	lea	rax, [rbp - 0x50]
0x4000a0:	mov	rdi, rax
0x4000a3:	call	0x40072a
<Block for 0x4000a8, 23 bytes>
0x4000a8:	mov	qword ptr [rbp - 0x58], rax
0x4000ac:	lea	rdx, [rbp - 0x58]
0x4000b0:	lea	rax, [rbp - 0x30]
0x4000b4:	mov	rsi, rdx
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x40077a
<Block for 0x4000bf, 28 bytes>
0x4000bf:	lea	rdx, [rbp - 0x60]
0x4000c3:	mov	rsi, qword ptr [rbp - 0x30]
0x4000c7:	lea	rax, [rbp - 0x50]
0x4000cb:	mov	rcx, rdx
0x4000ce:	mov	edx, 1
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x4007a8
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rax, [rbp - 0x50]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x40072a
<Block for 0x4000e7, 23 bytes>
0x4000e7:	mov	qword ptr [rbp - 0x58], rax
0x4000eb:	lea	rdx, [rbp - 0x58]
0x4000ef:	lea	rax, [rbp - 0x30]
0x4000f3:	mov	rsi, rdx
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x40077a
<Block for 0x4000fe, 28 bytes>
0x4000fe:	lea	rdx, [rbp - 0x60]
0x400102:	mov	rsi, qword ptr [rbp - 0x30]
0x400106:	lea	rax, [rbp - 0x50]
0x40010a:	mov	rcx, rdx
0x40010d:	mov	edx, 1
0x400112:	mov	rdi, rax
0x400115:	call	0x4007a8
<Block for 0x40011a, 19 bytes>
0x40011a:	lea	rdx, [rbp - 0x50]
0x40011e:	lea	rax, [rbp - 0x30]
0x400122:	mov	rsi, rdx
0x400125:	mov	rdi, rax
0x400128:	call	0x40086e
<Block for 0x40012d, 12 bytes>
0x40012d:	lea	rax, [rbp - 0x30]
0x400131:	mov	rdi, rax
0x400134:	call	0x500018
<Block for 0x400139, 12 bytes>
0x400139:	lea	rax, [rbp - 0x30]
0x40013d:	mov	rdi, rax
0x400140:	call	0x4006e2
<Block for 0x400145, 12 bytes>
0x400145:	lea	rax, [rbp - 0x50]
0x400149:	mov	rdi, rax
0x40014c:	call	0x4006e2
<Block for 0x400151, 16 bytes>
0x400151:	nop	
0x400152:	mov	rax, qword ptr [rbp - 0x18]
0x400156:	xor	rax, qword ptr fs:[0x28]
0x40015f:	je	0x40019b
<Block for 0x40019b, 7 bytes>
0x40019b:	add	rsp, 0x58
0x40019f:	pop	rbx
0x4001a0:	pop	rbp
0x4001a1:	ret	
<Block for 0x400161, 2 bytes>
0x400161:	jmp	0x400196
<Block for 0x400196, 5 bytes>
0x400196:	call	0x500028
