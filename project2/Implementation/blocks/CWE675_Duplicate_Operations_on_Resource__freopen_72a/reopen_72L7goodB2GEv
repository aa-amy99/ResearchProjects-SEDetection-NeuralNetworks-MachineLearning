<Block for 0x40032e, 40 bytes>
0x40032e:	endbr64	
0x400332:	push	rbp
0x400333:	mov	rbp, rsp
0x400336:	push	rbx
0x400337:	sub	rsp, 0x58
0x40033b:	mov	rax, qword ptr fs:[0x28]
0x400344:	mov	qword ptr [rbp - 0x18], rax
0x400348:	xor	eax, eax
0x40034a:	lea	rax, [rbp - 0x50]
0x40034e:	mov	rdi, rax
0x400351:	call	0x400582
<Block for 0x400356, 37 bytes>
0x400356:	mov	qword ptr [rbp - 0x60], 0
0x40035e:	mov	rax, qword ptr [rip + 0xffc9b]
0x400365:	mov	rdx, rax
0x400368:	lea	rsi, [rip + 0x18d]
0x40036f:	lea	rdi, [rip + 0x189]
0x400376:	call	0x500008
<Block for 0x40037b, 16 bytes>
0x40037b:	mov	qword ptr [rbp - 0x60], rax
0x40037f:	mov	rax, qword ptr [rbp - 0x60]
0x400383:	mov	rdi, rax
0x400386:	call	0x500010
<Block for 0x40038b, 12 bytes>
0x40038b:	lea	rax, [rbp - 0x50]
0x40038f:	mov	rdi, rax
0x400392:	call	0x40072a
<Block for 0x400397, 23 bytes>
0x400397:	mov	qword ptr [rbp - 0x58], rax
0x40039b:	lea	rdx, [rbp - 0x58]
0x40039f:	lea	rax, [rbp - 0x30]
0x4003a3:	mov	rsi, rdx
0x4003a6:	mov	rdi, rax
0x4003a9:	call	0x40077a
<Block for 0x4003ae, 28 bytes>
0x4003ae:	lea	rdx, [rbp - 0x60]
0x4003b2:	mov	rsi, qword ptr [rbp - 0x30]
0x4003b6:	lea	rax, [rbp - 0x50]
0x4003ba:	mov	rcx, rdx
0x4003bd:	mov	edx, 1
0x4003c2:	mov	rdi, rax
0x4003c5:	call	0x4007a8
<Block for 0x4003ca, 12 bytes>
0x4003ca:	lea	rax, [rbp - 0x50]
0x4003ce:	mov	rdi, rax
0x4003d1:	call	0x40072a
<Block for 0x4003d6, 23 bytes>
0x4003d6:	mov	qword ptr [rbp - 0x58], rax
0x4003da:	lea	rdx, [rbp - 0x58]
0x4003de:	lea	rax, [rbp - 0x30]
0x4003e2:	mov	rsi, rdx
0x4003e5:	mov	rdi, rax
0x4003e8:	call	0x40077a
<Block for 0x4003ed, 28 bytes>
0x4003ed:	lea	rdx, [rbp - 0x60]
0x4003f1:	mov	rsi, qword ptr [rbp - 0x30]
0x4003f5:	lea	rax, [rbp - 0x50]
0x4003f9:	mov	rcx, rdx
0x4003fc:	mov	edx, 1
0x400401:	mov	rdi, rax
0x400404:	call	0x4007a8
<Block for 0x400409, 12 bytes>
0x400409:	lea	rax, [rbp - 0x50]
0x40040d:	mov	rdi, rax
0x400410:	call	0x40072a
<Block for 0x400415, 23 bytes>
0x400415:	mov	qword ptr [rbp - 0x58], rax
0x400419:	lea	rdx, [rbp - 0x58]
0x40041d:	lea	rax, [rbp - 0x30]
0x400421:	mov	rsi, rdx
0x400424:	mov	rdi, rax
0x400427:	call	0x40077a
<Block for 0x40042c, 28 bytes>
0x40042c:	lea	rdx, [rbp - 0x60]
0x400430:	mov	rsi, qword ptr [rbp - 0x30]
0x400434:	lea	rax, [rbp - 0x50]
0x400438:	mov	rcx, rdx
0x40043b:	mov	edx, 1
0x400440:	mov	rdi, rax
0x400443:	call	0x4007a8
<Block for 0x400448, 19 bytes>
0x400448:	lea	rdx, [rbp - 0x50]
0x40044c:	lea	rax, [rbp - 0x30]
0x400450:	mov	rsi, rdx
0x400453:	mov	rdi, rax
0x400456:	call	0x40086e
<Block for 0x40045b, 12 bytes>
0x40045b:	lea	rax, [rbp - 0x30]
0x40045f:	mov	rdi, rax
0x400462:	call	0x500040
<Block for 0x400467, 12 bytes>
0x400467:	lea	rax, [rbp - 0x30]
0x40046b:	mov	rdi, rax
0x40046e:	call	0x4006e2
<Block for 0x400473, 12 bytes>
0x400473:	lea	rax, [rbp - 0x50]
0x400477:	mov	rdi, rax
0x40047a:	call	0x4006e2
<Block for 0x40047f, 16 bytes>
0x40047f:	nop	
0x400480:	mov	rax, qword ptr [rbp - 0x18]
0x400484:	xor	rax, qword ptr fs:[0x28]
0x40048d:	je	0x4004c9
<Block for 0x4004c9, 7 bytes>
0x4004c9:	add	rsp, 0x58
0x4004cd:	pop	rbx
0x4004ce:	pop	rbp
0x4004cf:	ret	
<Block for 0x40048f, 2 bytes>
0x40048f:	jmp	0x4004c4
<Block for 0x4004c4, 5 bytes>
0x4004c4:	call	0x500028
