<Block for 0x40019e, 85 bytes>
0x40019e:	endbr64	
0x4001a2:	push	rbp
0x4001a3:	mov	rbp, rsp
0x4001a6:	push	rbx
0x4001a7:	sub	rsp, 0x88
0x4001ae:	mov	rax, qword ptr fs:[0x28]
0x4001b7:	mov	qword ptr [rbp - 0x18], rax
0x4001bb:	xor	eax, eax
0x4001bd:	mov	eax, 0x10
0x4001c2:	sub	rax, 1
0x4001c6:	add	rax, 0x6c
0x4001ca:	mov	esi, 0x10
0x4001cf:	mov	edx, 0
0x4001d4:	div	rsi
0x4001d7:	imul	rax, rax, 0x10
0x4001db:	mov	rdx, rax
0x4001de:	and	rdx, 0xfffffffffffff000
0x4001e5:	mov	rbx, rsp
0x4001e8:	sub	rbx, rdx
0x4001eb:	mov	rdx, rbx
0x4001ee:	cmp	rsp, rdx
0x4001f1:	je	0x400205
<Block for 0x400205, 26 bytes>
0x400205:	mov	rdx, rax
0x400208:	and	edx, 0xfff
0x40020e:	sub	rsp, rdx
0x400211:	mov	rdx, rax
0x400214:	and	edx, 0xfff
0x40021a:	test	rdx, rdx
0x40021d:	je	0x40022f
<Block for 0x4001f3, 18 bytes>
0x4001f3:	sub	rsp, 0x1000
0x4001fa:	or	qword ptr [rsp + 0xff8], 0
0x400203:	jmp	0x4001ee
<Block for 0x40022f, 47 bytes>
0x40022f:	mov	rax, rsp
0x400232:	add	rax, 0xf
0x400236:	shr	rax, 4
0x40023a:	shl	rax, 4
0x40023e:	mov	qword ptr [rbp - 0x90], rax
0x400245:	mov	rax, qword ptr [rbp - 0x90]
0x40024c:	mov	edx, 0x63
0x400251:	mov	esi, 0x41
0x400256:	mov	rdi, rax
0x400259:	call	0x500000
<Block for 0x40021f, 63 bytes>
0x40021f:	and	eax, 0xfff
0x400224:	sub	rax, 8
0x400228:	add	rax, rsp
0x40022b:	or	qword ptr [rax], 0
0x40022f:	mov	rax, rsp
0x400232:	add	rax, 0xf
0x400236:	shr	rax, 4
0x40023a:	shl	rax, 4
0x40023e:	mov	qword ptr [rbp - 0x90], rax
0x400245:	mov	rax, qword ptr [rbp - 0x90]
0x40024c:	mov	edx, 0x63
0x400251:	mov	esi, 0x41
0x400256:	mov	rdi, rax
0x400259:	call	0x500000
<Block for 0x4001ee, 5 bytes>
0x4001ee:	cmp	rsp, rdx
0x4001f1:	je	0x400205
<Block for 0x40025e, 50 bytes>
0x40025e:	mov	rax, qword ptr [rbp - 0x90]
0x400265:	add	rax, 0x63
0x400269:	mov	byte ptr [rax], 0
0x40026c:	mov	rax, qword ptr [rbp - 0x90]
0x400273:	mov	qword ptr [rbp - 0x88], rax
0x40027a:	lea	rax, [rbp - 0x80]
0x40027e:	mov	edx, 0x63
0x400283:	mov	esi, 0x43
0x400288:	mov	rdi, rax
0x40028b:	call	0x500000
<Block for 0x400290, 141 bytes>
0x400290:	mov	byte ptr [rbp - 0x1d], 0
0x400294:	mov	rax, qword ptr [rbp - 0x88]
0x40029b:	mov	rcx, qword ptr [rbp - 0x80]
0x40029f:	mov	rbx, qword ptr [rbp - 0x78]
0x4002a3:	mov	qword ptr [rax], rcx
0x4002a6:	mov	qword ptr [rax + 8], rbx
0x4002aa:	mov	rcx, qword ptr [rbp - 0x70]
0x4002ae:	mov	rbx, qword ptr [rbp - 0x68]
0x4002b2:	mov	qword ptr [rax + 0x10], rcx
0x4002b6:	mov	qword ptr [rax + 0x18], rbx
0x4002ba:	mov	rcx, qword ptr [rbp - 0x60]
0x4002be:	mov	rbx, qword ptr [rbp - 0x58]
0x4002c2:	mov	qword ptr [rax + 0x20], rcx
0x4002c6:	mov	qword ptr [rax + 0x28], rbx
0x4002ca:	mov	rcx, qword ptr [rbp - 0x50]
0x4002ce:	mov	rbx, qword ptr [rbp - 0x48]
0x4002d2:	mov	qword ptr [rax + 0x30], rcx
0x4002d6:	mov	qword ptr [rax + 0x38], rbx
0x4002da:	mov	rcx, qword ptr [rbp - 0x40]
0x4002de:	mov	rbx, qword ptr [rbp - 0x38]
0x4002e2:	mov	qword ptr [rax + 0x40], rcx
0x4002e6:	mov	qword ptr [rax + 0x48], rbx
0x4002ea:	mov	rcx, qword ptr [rbp - 0x30]
0x4002ee:	mov	rbx, qword ptr [rbp - 0x28]
0x4002f2:	mov	qword ptr [rax + 0x50], rcx
0x4002f6:	mov	qword ptr [rax + 0x58], rbx
0x4002fa:	mov	edx, dword ptr [rbp - 0x20]
0x4002fd:	mov	dword ptr [rax + 0x60], edx
0x400300:	mov	rax, qword ptr [rbp - 0x88]
0x400307:	add	rax, 0x63
0x40030b:	mov	byte ptr [rax], 0
0x40030e:	mov	rax, qword ptr [rbp - 0x88]
0x400315:	mov	rdi, rax
0x400318:	call	0x500008
<Block for 0x40031d, 16 bytes>
0x40031d:	nop	
0x40031e:	mov	rax, qword ptr [rbp - 0x18]
0x400322:	xor	rax, qword ptr fs:[0x28]
0x40032b:	je	0x400332
<Block for 0x400332, 6 bytes>
0x400332:	mov	rbx, qword ptr [rbp - 8]
0x400336:	leave	
0x400337:	ret	
<Block for 0x40032d, 5 bytes>
0x40032d:	call	0x500010
