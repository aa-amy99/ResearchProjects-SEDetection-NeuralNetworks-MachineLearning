<Block for 0x400000, 104 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x40]
0x40001f:	mov	qword ptr [rbp - 0x38], rax
0x400023:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40002a:	mov	dword ptr [rbp - 0x40], 0xfffffffb
0x400031:	mov	rax, qword ptr [rbp - 0x38]
0x400035:	mov	eax, dword ptr [rax]
0x400037:	mov	dword ptr [rbp - 0x3c], eax
0x40003a:	mov	qword ptr [rbp - 0x30], 0
0x400042:	mov	qword ptr [rbp - 0x28], 0
0x40004a:	mov	qword ptr [rbp - 0x20], 0
0x400052:	mov	qword ptr [rbp - 0x18], 0
0x40005a:	mov	qword ptr [rbp - 0x10], 0
0x400062:	cmp	dword ptr [rbp - 0x3c], 9
0x400066:	jg	0x40007a
<Block for 0x400068, 16 bytes>
0x400068:	mov	eax, dword ptr [rbp - 0x3c]
0x40006b:	cdqe	
0x40006d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400071:	mov	edi, eax
0x400073:	call	0x500000
<Block for 0x40007a, 12 bytes>
0x40007a:	lea	rdi, [rip + 0x19f]
0x400081:	call	0x500008
<Block for 0x400078, 2 bytes>
0x400078:	jmp	0x400094
<Block for 0x400086, 2 bytes>
0x400086:	jmp	0x400094
<Block for 0x400094, 15 bytes>
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	xor	rax, qword ptr fs:[0x28]
0x4000a1:	je	0x4000a8
<Block for 0x4000a8, 2 bytes>
0x4000a8:	leave	
0x4000a9:	ret	
<Block for 0x4000a3, 5 bytes>
0x4000a3:	call	0x500018
