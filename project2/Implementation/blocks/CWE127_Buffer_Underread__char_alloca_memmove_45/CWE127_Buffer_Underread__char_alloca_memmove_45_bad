<Block for 0x40007f, 81 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	sub	rsp, 0x20
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	mov	eax, 0x10
0x40009f:	sub	rax, 1
0x4000a3:	add	rax, 0x6c
0x4000a7:	mov	esi, 0x10
0x4000ac:	mov	edx, 0
0x4000b1:	div	rsi
0x4000b4:	imul	rax, rax, 0x10
0x4000b8:	mov	rdx, rax
0x4000bb:	and	rdx, 0xfffffffffffff000
0x4000c2:	mov	rcx, rsp
0x4000c5:	sub	rcx, rdx
0x4000c8:	mov	rdx, rcx
0x4000cb:	cmp	rsp, rdx
0x4000ce:	je	0x4000e2
<Block for 0x4000e2, 26 bytes>
0x4000e2:	mov	rdx, rax
0x4000e5:	and	edx, 0xfff
0x4000eb:	sub	rsp, rdx
0x4000ee:	mov	rdx, rax
0x4000f1:	and	edx, 0xfff
0x4000f7:	test	rdx, rdx
0x4000fa:	je	0x40010c
<Block for 0x4000d0, 18 bytes>
0x4000d0:	sub	rsp, 0x1000
0x4000d7:	or	qword ptr [rsp + 0xff8], 0
0x4000e0:	jmp	0x4000cb
<Block for 0x40010c, 41 bytes>
0x40010c:	mov	rax, rsp
0x40010f:	add	rax, 0xf
0x400113:	shr	rax, 4
0x400117:	shl	rax, 4
0x40011b:	mov	qword ptr [rbp - 0x18], rax
0x40011f:	mov	rax, qword ptr [rbp - 0x18]
0x400123:	mov	edx, 0x63
0x400128:	mov	esi, 0x41
0x40012d:	mov	rdi, rax
0x400130:	call	0x500000
<Block for 0x4000fc, 57 bytes>
0x4000fc:	and	eax, 0xfff
0x400101:	sub	rax, 8
0x400105:	add	rax, rsp
0x400108:	or	qword ptr [rax], 0
0x40010c:	mov	rax, rsp
0x40010f:	add	rax, 0xf
0x400113:	shr	rax, 4
0x400117:	shl	rax, 4
0x40011b:	mov	qword ptr [rbp - 0x18], rax
0x40011f:	mov	rax, qword ptr [rbp - 0x18]
0x400123:	mov	edx, 0x63
0x400128:	mov	esi, 0x41
0x40012d:	mov	rdi, rax
0x400130:	call	0x500000
<Block for 0x4000cb, 5 bytes>
0x4000cb:	cmp	rsp, rdx
0x4000ce:	je	0x4000e2
<Block for 0x400135, 44 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x18]
0x400139:	add	rax, 0x63
0x40013d:	mov	byte ptr [rax], 0
0x400140:	mov	rax, qword ptr [rbp - 0x18]
0x400144:	sub	rax, 8
0x400148:	mov	qword ptr [rbp - 0x10], rax
0x40014c:	mov	rax, qword ptr [rbp - 0x10]
0x400150:	mov	qword ptr [rip + 0x1b1], rax
0x400157:	mov	eax, 0
0x40015c:	call	0x400000
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500018
