<Block for 0x400178, 60 bytes>
0x400178:	endbr64	
0x40017c:	push	rbp
0x40017d:	mov	rbp, rsp
0x400180:	add	rsp, -0x80
0x400184:	mov	rax, qword ptr fs:[0x28]
0x40018d:	mov	qword ptr [rbp - 8], rax
0x400191:	xor	eax, eax
0x400193:	mov	rax, qword ptr [rip + 0x176]
0x40019a:	mov	qword ptr [rbp - 0x78], rax
0x40019e:	lea	rax, [rbp - 0x70]
0x4001a2:	mov	edx, 0x63
0x4001a7:	mov	esi, 0x43
0x4001ac:	mov	rdi, rax
0x4001af:	call	0x500000
<Block for 0x4001b4, 28 bytes>
0x4001b4:	mov	byte ptr [rbp - 0xd], 0
0x4001b8:	mov	rcx, qword ptr [rbp - 0x78]
0x4001bc:	lea	rax, [rbp - 0x70]
0x4001c0:	mov	edx, 0x64
0x4001c5:	mov	rsi, rcx
0x4001c8:	mov	rdi, rax
0x4001cb:	call	0x500008
<Block for 0x4001d0, 16 bytes>
0x4001d0:	mov	byte ptr [rbp - 0xd], 0
0x4001d4:	lea	rax, [rbp - 0x70]
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500010
<Block for 0x4001e0, 16 bytes>
0x4001e0:	nop	
0x4001e1:	mov	rax, qword ptr [rbp - 8]
0x4001e5:	xor	rax, qword ptr fs:[0x28]
0x4001ee:	je	0x4001f5
<Block for 0x4001f5, 2 bytes>
0x4001f5:	leave	
0x4001f6:	ret	
<Block for 0x4001f0, 5 bytes>
0x4001f0:	call	0x500018
