<Block for 0x400089, 40 bytes>
0x400089:	endbr64	
0x40008d:	push	rbp
0x40008e:	mov	rbp, rsp
0x400091:	sub	rsp, 0x110
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	mov	eax, dword ptr [rip + 0xfff7b]
0x4000ad:	test	eax, eax
0x4000af:	je	0x4000bf
<Block for 0x4000bf, 25 bytes>
0x4000bf:	lea	rax, [rbp - 0xa0]
0x4000c6:	mov	edx, 0x95
0x4000cb:	mov	esi, 0x41
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500008
<Block for 0x4000b1, 12 bytes>
0x4000b1:	lea	rdi, [rip + 0x11e]
0x4000b8:	call	0x500018
<Block for 0x4000d8, 34 bytes>
0x4000d8:	mov	byte ptr [rbp - 0xb], 0
0x4000dc:	lea	rcx, [rbp - 0xa0]
0x4000e3:	lea	rax, [rbp - 0x110]
0x4000ea:	mov	edx, 0x63
0x4000ef:	mov	rsi, rcx
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
<Block for 0x4000bd, 2 bytes>
0x4000bd:	jmp	0x400110
<Block for 0x4000fa, 22 bytes>
0x4000fa:	mov	byte ptr [rbp - 0xad], 0
0x400101:	lea	rax, [rbp - 0x110]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500018
<Block for 0x400110, 16 bytes>
0x400110:	nop	
0x400111:	mov	rax, qword ptr [rbp - 8]
0x400115:	xor	rax, qword ptr fs:[0x28]
0x40011e:	je	0x400125
<Block for 0x400125, 2 bytes>
0x400125:	leave	
0x400126:	ret	
<Block for 0x400120, 5 bytes>
0x400120:	call	0x500020
