<Block for 0x400193, 65 bytes>
0x400193:	endbr64	
0x400197:	push	rbp
0x400198:	mov	rbp, rsp
0x40019b:	sub	rsp, 0x40
0x40019f:	mov	rax, qword ptr fs:[0x28]
0x4001a8:	mov	qword ptr [rbp - 8], rax
0x4001ac:	xor	eax, eax
0x4001ae:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001b5:	mov	rax, qword ptr [rip + 0xffe44]
0x4001bc:	lea	rdx, [rbp - 0x38]
0x4001c0:	lea	rsi, [rip + 0x229]
0x4001c7:	mov	rdi, rax
0x4001ca:	mov	eax, 0
0x4001cf:	call	0x500008
<Block for 0x4001d4, 47 bytes>
0x4001d4:	mov	qword ptr [rbp - 0x30], 0
0x4001dc:	mov	qword ptr [rbp - 0x28], 0
0x4001e4:	mov	qword ptr [rbp - 0x20], 0
0x4001ec:	mov	qword ptr [rbp - 0x18], 0
0x4001f4:	mov	qword ptr [rbp - 0x10], 0
0x4001fc:	mov	eax, dword ptr [rbp - 0x38]
0x4001ff:	test	eax, eax
0x400201:	js	0x40023d
<Block for 0x40023d, 12 bytes>
0x40023d:	lea	rdi, [rip + 0x1d4]
0x400244:	call	0x500018
<Block for 0x400203, 8 bytes>
0x400203:	mov	eax, dword ptr [rbp - 0x38]
0x400206:	cmp	eax, 9
0x400209:	jg	0x40023d
<Block for 0x400249, 16 bytes>
0x400249:	nop	
0x40024a:	mov	rax, qword ptr [rbp - 8]
0x40024e:	xor	rax, qword ptr fs:[0x28]
0x400257:	je	0x40025e
<Block for 0x40020b, 22 bytes>
0x40020b:	mov	eax, dword ptr [rbp - 0x38]
0x40020e:	cdqe	
0x400210:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400218:	mov	dword ptr [rbp - 0x34], 0
0x40021f:	jmp	0x400235
<Block for 0x40025e, 2 bytes>
0x40025e:	leave	
0x40025f:	ret	
<Block for 0x400259, 5 bytes>
0x400259:	call	0x500020
<Block for 0x400235, 6 bytes>
0x400235:	cmp	dword ptr [rbp - 0x34], 9
0x400239:	jle	0x400221
<Block for 0x400221, 16 bytes>
0x400221:	mov	eax, dword ptr [rbp - 0x34]
0x400224:	cdqe	
0x400226:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40022a:	mov	edi, eax
0x40022c:	call	0x500010
<Block for 0x40023b, 2 bytes>
0x40023b:	jmp	0x400249
<Block for 0x400231, 10 bytes>
0x400231:	add	dword ptr [rbp - 0x34], 1
0x400235:	cmp	dword ptr [rbp - 0x34], 9
0x400239:	jle	0x400221
