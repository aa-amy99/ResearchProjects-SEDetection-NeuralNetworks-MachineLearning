<Block for 0x40007d, 36 bytes>
0x40007d:	endbr64	
0x400081:	push	rbp
0x400082:	mov	rbp, rsp
0x400085:	sub	rsp, 0x30
0x400089:	mov	rax, qword ptr fs:[0x28]
0x400092:	mov	qword ptr [rbp - 8], rax
0x400096:	xor	eax, eax
0x400098:	mov	eax, 0
0x40009d:	test	eax, eax
0x40009f:	je	0x4000af
<Block for 0x4000af, 40 bytes>
0x4000af:	movabs	rax, 0x6c69662f706d742f
0x4000b9:	movabs	rdx, 0x58585858585865
0x4000c3:	mov	qword ptr [rbp - 0x20], rax
0x4000c7:	mov	qword ptr [rbp - 0x18], rdx
0x4000cb:	lea	rax, [rbp - 0x20]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500028
<Block for 0x4000a1, 12 bytes>
0x4000a1:	lea	rdi, [rip + 0x155]
0x4000a8:	call	0x500010
<Block for 0x4000d7, 15 bytes>
0x4000d7:	mov	dword ptr [rbp - 0x24], eax
0x4000da:	lea	rax, [rbp - 0x20]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x500010
<Block for 0x4000ad, 2 bytes>
0x4000ad:	jmp	0x400102
<Block for 0x4000e6, 6 bytes>
0x4000e6:	cmp	dword ptr [rbp - 0x24], -1
0x4000ea:	je	0x400102
<Block for 0x400102, 16 bytes>
0x400102:	nop	
0x400103:	mov	rax, qword ptr [rbp - 8]
0x400107:	xor	rax, qword ptr fs:[0x28]
0x400110:	je	0x400117
<Block for 0x4000ec, 12 bytes>
0x4000ec:	lea	rdi, [rip + 0xdd]
0x4000f3:	call	0x500010
<Block for 0x400117, 2 bytes>
0x400117:	leave	
0x400118:	ret	
<Block for 0x400112, 5 bytes>
0x400112:	call	0x500030
<Block for 0x4000f8, 10 bytes>
0x4000f8:	mov	eax, dword ptr [rbp - 0x24]
0x4000fb:	mov	edi, eax
0x4000fd:	call	0x500020
