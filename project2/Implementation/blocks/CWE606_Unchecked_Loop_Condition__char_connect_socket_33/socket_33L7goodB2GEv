<Block for 0x4003fa, 183 bytes>
0x4003fa:	endbr64	
0x4003fe:	push	rbp
0x4003ff:	mov	rbp, rsp
0x400402:	sub	rsp, 0xc0
0x400409:	mov	rax, qword ptr fs:[0x28]
0x400412:	mov	qword ptr [rbp - 8], rax
0x400416:	xor	eax, eax
0x400418:	lea	rax, [rbp - 0xa8]
0x40041f:	mov	qword ptr [rbp - 0xa0], rax
0x400426:	mov	qword ptr [rbp - 0x70], 0
0x40042e:	mov	qword ptr [rbp - 0x68], 0
0x400436:	mov	qword ptr [rbp - 0x60], 0
0x40043e:	mov	qword ptr [rbp - 0x58], 0
0x400446:	mov	qword ptr [rbp - 0x50], 0
0x40044e:	mov	qword ptr [rbp - 0x48], 0
0x400456:	mov	qword ptr [rbp - 0x40], 0
0x40045e:	mov	qword ptr [rbp - 0x38], 0
0x400466:	mov	qword ptr [rbp - 0x30], 0
0x40046e:	mov	qword ptr [rbp - 0x28], 0
0x400476:	mov	qword ptr [rbp - 0x20], 0
0x40047e:	mov	qword ptr [rbp - 0x18], 0
0x400486:	mov	dword ptr [rbp - 0x10], 0
0x40048d:	lea	rax, [rbp - 0x70]
0x400491:	mov	qword ptr [rbp - 0xa8], rax
0x400498:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x4004a2:	mov	rax, qword ptr [rbp - 0xa8]
0x4004a9:	mov	rdi, rax
0x4004ac:	call	0x500000
<Block for 0x4004b1, 27 bytes>
0x4004b1:	mov	qword ptr [rbp - 0x98], rax
0x4004b8:	mov	edx, 6
0x4004bd:	mov	esi, 1
0x4004c2:	mov	edi, 2
0x4004c7:	call	0x500008
<Block for 0x4004cc, 19 bytes>
0x4004cc:	mov	dword ptr [rbp - 0xb0], eax
0x4004d2:	cmp	dword ptr [rbp - 0xb0], -1
0x4004d9:	je	0x400612
<Block for 0x400612, 3 bytes>
0x400612:	nop	
0x400613:	jmp	0x400616
<Block for 0x4004df, 22 bytes>
0x4004df:	lea	rax, [rbp - 0x80]
0x4004e3:	mov	edx, 0x10
0x4004e8:	mov	esi, 0
0x4004ed:	mov	rdi, rax
0x4004f0:	call	0x500010
<Block for 0x400616, 9 bytes>
0x400616:	cmp	dword ptr [rbp - 0xb0], -1
0x40061d:	je	0x40062c
<Block for 0x4004f5, 18 bytes>
0x4004f5:	mov	word ptr [rbp - 0x80], 2
0x4004fb:	lea	rdi, [rip + 0x1df]
0x400502:	call	0x500018
<Block for 0x40062c, 51 bytes>
0x40062c:	mov	rax, qword ptr [rbp - 0xa0]
0x400633:	mov	rax, qword ptr [rax]
0x400636:	mov	qword ptr [rbp - 0x88], rax
0x40063d:	lea	rdx, [rbp - 0xbc]
0x400644:	mov	rax, qword ptr [rbp - 0x88]
0x40064b:	lea	rsi, [rip + 0x99]
0x400652:	mov	rdi, rax
0x400655:	mov	eax, 0
0x40065a:	call	0x500048
<Block for 0x40061f, 13 bytes>
0x40061f:	mov	eax, dword ptr [rbp - 0xb0]
0x400625:	mov	edi, eax
0x400627:	call	0x500040
<Block for 0x400507, 13 bytes>
0x400507:	mov	dword ptr [rbp - 0x7c], eax
0x40050a:	mov	edi, 0x6987
0x40050f:	call	0x500020
<Block for 0x40065f, 10 bytes>
0x40065f:	cmp	eax, 1
0x400662:	sete	al
0x400665:	test	al, al
0x400667:	je	0x4006b5
<Block for 0x400514, 29 bytes>
0x400514:	mov	word ptr [rbp - 0x7e], ax
0x400518:	lea	rcx, [rbp - 0x80]
0x40051c:	mov	eax, dword ptr [rbp - 0xb0]
0x400522:	mov	edx, 0x10
0x400527:	mov	rsi, rcx
0x40052a:	mov	edi, eax
0x40052c:	call	0x500028
<Block for 0x4006b5, 16 bytes>
0x4006b5:	nop	
0x4006b6:	mov	rax, qword ptr [rbp - 8]
0x4006ba:	xor	rax, qword ptr fs:[0x28]
0x4006c3:	je	0x4006ca
<Block for 0x400669, 13 bytes>
0x400669:	mov	eax, dword ptr [rbp - 0xbc]
0x40066f:	cmp	eax, 0x270f
0x400674:	jg	0x4006b5
<Block for 0x400531, 14 bytes>
0x400531:	cmp	eax, -1
0x400534:	sete	al
0x400537:	test	al, al
0x400539:	jne	0x400615
<Block for 0x4006ca, 2 bytes>
0x4006ca:	leave	
0x4006cb:	ret	
<Block for 0x4006c5, 5 bytes>
0x4006c5:	call	0x500058
<Block for 0x400676, 34 bytes>
0x400676:	mov	dword ptr [rbp - 0xb4], 0
0x400680:	mov	dword ptr [rbp - 0xb8], 0
0x40068a:	mov	eax, dword ptr [rbp - 0xbc]
0x400690:	cmp	dword ptr [rbp - 0xb8], eax
0x400696:	jge	0x4006a8
<Block for 0x40053f, 51 bytes>
0x40053f:	mov	eax, 0x63
0x400544:	sub	rax, qword ptr [rbp - 0x98]
0x40054b:	mov	rdx, rax
0x40054e:	mov	rcx, qword ptr [rbp - 0xa8]
0x400555:	mov	rax, qword ptr [rbp - 0x98]
0x40055c:	lea	rsi, [rcx + rax]
0x400560:	mov	eax, dword ptr [rbp - 0xb0]
0x400566:	mov	ecx, 0
0x40056b:	mov	edi, eax
0x40056d:	call	0x500030
<Block for 0x400615, 1 bytes>
0x400615:	nop	
<Block for 0x400698, 16 bytes>
0x400698:	add	dword ptr [rbp - 0xb4], 1
0x40069f:	add	dword ptr [rbp - 0xb8], 1
0x4006a6:	jmp	0x40068a
<Block for 0x4006a8, 13 bytes>
0x4006a8:	mov	eax, dword ptr [rbp - 0xb4]
0x4006ae:	mov	edi, eax
0x4006b0:	call	0x500050
<Block for 0x400572, 19 bytes>
0x400572:	mov	dword ptr [rbp - 0xac], eax
0x400578:	cmp	dword ptr [rbp - 0xac], -1
0x40057f:	je	0x400616
<Block for 0x40068a, 14 bytes>
0x40068a:	mov	eax, dword ptr [rbp - 0xbc]
0x400690:	cmp	dword ptr [rbp - 0xb8], eax
0x400696:	jge	0x4006a8
<Block for 0x400585, 13 bytes>
0x400585:	cmp	dword ptr [rbp - 0xac], 0
0x40058c:	je	0x400616
<Block for 0x400592, 52 bytes>
0x400592:	mov	rax, qword ptr [rbp - 0xa8]
0x400599:	mov	edx, dword ptr [rbp - 0xac]
0x40059f:	movsxd	rcx, edx
0x4005a2:	mov	rdx, qword ptr [rbp - 0x98]
0x4005a9:	add	rdx, rcx
0x4005ac:	add	rax, rdx
0x4005af:	mov	byte ptr [rax], 0
0x4005b2:	mov	rax, qword ptr [rbp - 0xa8]
0x4005b9:	mov	esi, 0xd
0x4005be:	mov	rdi, rax
0x4005c1:	call	0x500038
<Block for 0x4005c6, 17 bytes>
0x4005c6:	mov	qword ptr [rbp - 0x90], rax
0x4005cd:	cmp	qword ptr [rbp - 0x90], 0
0x4005d5:	je	0x4005e1
<Block for 0x4005e1, 20 bytes>
0x4005e1:	mov	rax, qword ptr [rbp - 0xa8]
0x4005e8:	mov	esi, 0xa
0x4005ed:	mov	rdi, rax
0x4005f0:	call	0x500038
<Block for 0x4005d7, 30 bytes>
0x4005d7:	mov	rax, qword ptr [rbp - 0x90]
0x4005de:	mov	byte ptr [rax], 0
0x4005e1:	mov	rax, qword ptr [rbp - 0xa8]
0x4005e8:	mov	esi, 0xa
0x4005ed:	mov	rdi, rax
0x4005f0:	call	0x500038
<Block for 0x4005f5, 17 bytes>
0x4005f5:	mov	qword ptr [rbp - 0x90], rax
0x4005fc:	cmp	qword ptr [rbp - 0x90], 0
0x400604:	je	0x400616
<Block for 0x400606, 12 bytes>
0x400606:	mov	rax, qword ptr [rbp - 0x90]
0x40060d:	mov	byte ptr [rax], 0
0x400610:	jmp	0x400616
