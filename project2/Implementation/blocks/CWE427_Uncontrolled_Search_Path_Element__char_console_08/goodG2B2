<Block for 0x400281, 82 bytes>
0x400281:	endbr64	
0x400285:	push	rbp
0x400286:	mov	rbp, rsp
0x400289:	sub	rsp, 0x120
0x400290:	mov	rax, qword ptr fs:[0x28]
0x400299:	mov	qword ptr [rbp - 8], rax
0x40029d:	xor	eax, eax
0x40029f:	movabs	rax, 0x3d48544150
0x4002a9:	mov	edx, 0
0x4002ae:	mov	qword ptr [rbp - 0x110], rax
0x4002b5:	mov	qword ptr [rbp - 0x108], rdx
0x4002bc:	lea	rdx, [rbp - 0x100]
0x4002c3:	mov	eax, 0
0x4002c8:	mov	ecx, 0x1d
0x4002cd:	mov	rdi, rdx
0x4002d0:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002d3, 34 bytes>
0x4002d3:	mov	rdx, rdi
0x4002d6:	mov	word ptr [rdx], ax
0x4002d9:	add	rdx, 2
0x4002dd:	lea	rax, [rbp - 0x110]
0x4002e4:	mov	qword ptr [rbp - 0x118], rax
0x4002eb:	mov	eax, 0
0x4002f0:	call	0x400000
<Block for 0x4002d0, 3 bytes>
0x4002d0:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002f5, 4 bytes>
0x4002f5:	test	eax, eax
0x4002f7:	je	0x400332
<Block for 0x400332, 15 bytes>
0x400332:	mov	rax, qword ptr [rbp - 0x118]
0x400339:	mov	rdi, rax
0x40033c:	call	0x500020
<Block for 0x4002f9, 27 bytes>
0x4002f9:	mov	rax, qword ptr [rbp - 0x118]
0x400300:	mov	rcx, -1
0x400307:	mov	rdx, rax
0x40030a:	mov	eax, 0
0x40030f:	mov	rdi, rdx
0x400312:	repne scasb	al, byte ptr [rdi]
<Block for 0x400341, 16 bytes>
0x400341:	nop	
0x400342:	mov	rax, qword ptr [rbp - 8]
0x400346:	xor	rax, qword ptr fs:[0x28]
0x40034f:	je	0x400356
<Block for 0x400314, 45 bytes>
0x400314:	mov	rax, rcx
0x400317:	not	rax
0x40031a:	lea	rdx, [rax - 1]
0x40031e:	mov	rax, qword ptr [rbp - 0x118]
0x400325:	add	rax, rdx
0x400328:	mov	dword ptr [rax], 0x6e69622f
0x40032e:	mov	byte ptr [rax + 4], 0
0x400332:	mov	rax, qword ptr [rbp - 0x118]
0x400339:	mov	rdi, rax
0x40033c:	call	0x500020
<Block for 0x400312, 2 bytes>
0x400312:	repne scasb	al, byte ptr [rdi]
<Block for 0x400356, 2 bytes>
0x400356:	leave	
0x400357:	ret	
<Block for 0x400351, 5 bytes>
0x400351:	call	0x500028
