<Block for 0x400000, 86 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x70
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x64]
0x40001f:	mov	qword ptr [rbp - 0x48], rax
0x400023:	lea	rax, [rbp - 0x64]
0x400027:	mov	qword ptr [rbp - 0x40], rax
0x40002b:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x48]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x60], eax
0x40003b:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x400042:	mov	edx, 6
0x400047:	mov	esi, 1
0x40004c:	mov	edi, 2
0x400051:	call	0x500000
<Block for 0x400056, 13 bytes>
0x400056:	mov	dword ptr [rbp - 0x5c], eax
0x400059:	cmp	dword ptr [rbp - 0x5c], -1
0x40005d:	je	0x4000f9
<Block for 0x4000f9, 3 bytes>
0x4000f9:	nop	
0x4000fa:	jmp	0x4000fd
<Block for 0x400063, 22 bytes>
0x400063:	lea	rax, [rbp - 0x30]
0x400067:	mov	edx, 0x10
0x40006c:	mov	esi, 0
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x4000fd, 6 bytes>
0x4000fd:	cmp	dword ptr [rbp - 0x5c], -1
0x400101:	je	0x40010d
<Block for 0x400079, 18 bytes>
0x400079:	mov	word ptr [rbp - 0x30], 2
0x40007f:	lea	rdi, [rip + 0x214]
0x400086:	call	0x500010
<Block for 0x40010d, 35 bytes>
0x40010d:	mov	rax, qword ptr [rbp - 0x48]
0x400111:	mov	edx, dword ptr [rbp - 0x60]
0x400114:	mov	dword ptr [rax], edx
0x400116:	mov	rax, qword ptr [rbp - 0x40]
0x40011a:	mov	eax, dword ptr [rax]
0x40011c:	mov	dword ptr [rbp - 0x54], eax
0x40011f:	mov	eax, dword ptr [rbp - 0x54]
0x400122:	cdqe	
0x400124:	shl	rax, 2
0x400128:	mov	rdi, rax
0x40012b:	call	0x500040
<Block for 0x400103, 10 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x5c]
0x400106:	mov	edi, eax
0x400108:	call	0x500038
<Block for 0x40008b, 13 bytes>
0x40008b:	mov	dword ptr [rbp - 0x2c], eax
0x40008e:	mov	edi, 0x6987
0x400093:	call	0x500018
<Block for 0x400130, 11 bytes>
0x400130:	mov	qword ptr [rbp - 0x38], rax
0x400134:	cmp	qword ptr [rbp - 0x38], 0
0x400139:	jne	0x400145
<Block for 0x400098, 26 bytes>
0x400098:	mov	word ptr [rbp - 0x2e], ax
0x40009c:	lea	rcx, [rbp - 0x30]
0x4000a0:	mov	eax, dword ptr [rbp - 0x5c]
0x4000a3:	mov	edx, 0x10
0x4000a8:	mov	rsi, rcx
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500020
<Block for 0x40013b, 10 bytes>
0x40013b:	mov	edi, 0xffffffff
0x400140:	call	0x500048
<Block for 0x400145, 10 bytes>
0x400145:	mov	qword ptr [rbp - 0x50], 0
0x40014d:	jmp	0x40016d
<Block for 0x4000b2, 5 bytes>
0x4000b2:	cmp	eax, -1
0x4000b5:	je	0x4000fc
<Block for 0x40016d, 11 bytes>
0x40016d:	mov	eax, dword ptr [rbp - 0x54]
0x400170:	cdqe	
0x400172:	cmp	qword ptr [rbp - 0x50], rax
0x400176:	jb	0x40014f
<Block for 0x4000b7, 24 bytes>
0x4000b7:	lea	rsi, [rbp - 0x16]
0x4000bb:	mov	eax, dword ptr [rbp - 0x5c]
0x4000be:	mov	ecx, 0
0x4000c3:	mov	edx, 0xd
0x4000c8:	mov	edi, eax
0x4000ca:	call	0x500028
<Block for 0x4000fc, 1 bytes>
0x4000fc:	nop	
<Block for 0x40014f, 41 bytes>
0x40014f:	mov	rax, qword ptr [rbp - 0x50]
0x400153:	lea	rdx, [rax*4]
0x40015b:	mov	rax, qword ptr [rbp - 0x38]
0x40015f:	add	rax, rdx
0x400162:	mov	dword ptr [rax], 0
0x400168:	add	qword ptr [rbp - 0x50], 1
0x40016d:	mov	eax, dword ptr [rbp - 0x54]
0x400170:	cdqe	
0x400172:	cmp	qword ptr [rbp - 0x50], rax
0x400176:	jb	0x40014f
<Block for 0x400178, 13 bytes>
0x400178:	mov	rax, qword ptr [rbp - 0x38]
0x40017c:	mov	eax, dword ptr [rax]
0x40017e:	mov	edi, eax
0x400180:	call	0x500050
<Block for 0x4000cf, 9 bytes>
0x4000cf:	mov	dword ptr [rbp - 0x58], eax
0x4000d2:	cmp	dword ptr [rbp - 0x58], -1
0x4000d6:	je	0x4000fd
<Block for 0x400185, 12 bytes>
0x400185:	mov	rax, qword ptr [rbp - 0x38]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500058
<Block for 0x4000d8, 6 bytes>
0x4000d8:	cmp	dword ptr [rbp - 0x58], 0
0x4000dc:	je	0x4000fd
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4000de, 22 bytes>
0x4000de:	mov	eax, dword ptr [rbp - 0x58]
0x4000e1:	cdqe	
0x4000e3:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000e8:	lea	rax, [rbp - 0x16]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500030
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500060
<Block for 0x4000f4, 5 bytes>
0x4000f4:	mov	dword ptr [rbp - 0x60], eax
0x4000f7:	jmp	0x4000fd
