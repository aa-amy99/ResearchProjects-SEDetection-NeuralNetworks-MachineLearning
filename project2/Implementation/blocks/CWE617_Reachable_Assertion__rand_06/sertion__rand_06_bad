<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400014:	mov	eax, 5
0x400019:	cmp	eax, 5
0x40001c:	jne	0x400067
<Block for 0x40001e, 5 bytes>
0x40001e:	call	0x500000
<Block for 0x400067, 6 bytes>
0x400067:	cmp	dword ptr [rbp - 0x14], 5
0x40006b:	jg	0x40008c
<Block for 0x400023, 7 bytes>
0x400023:	and	eax, 1
0x400026:	test	eax, eax
0x400028:	je	0x400047
<Block for 0x40006d, 31 bytes>
0x40006d:	lea	rcx, [rip + 0x14c]
0x400074:	mov	edx, 0x28
0x400079:	lea	rsi, [rip + 0xe8]
0x400080:	lea	rdi, [rip + 0x107]
0x400087:	call	0x500008
<Block for 0x40008c, 8 bytes>
0x40008c:	nop	
0x40008d:	add	rsp, 0x18
0x400091:	pop	rbx
0x400092:	pop	rbp
0x400093:	ret	
<Block for 0x400047, 5 bytes>
0x400047:	call	0x500000
<Block for 0x40002a, 5 bytes>
0x40002a:	call	0x500000
<Block for 0x40004c, 10 bytes>
0x40004c:	shl	eax, 0x1e
0x40004f:	mov	ebx, eax
0x400051:	call	0x500000
<Block for 0x40002f, 10 bytes>
0x40002f:	shl	eax, 0x1e
0x400032:	mov	ebx, eax
0x400034:	call	0x500000
<Block for 0x400056, 10 bytes>
0x400056:	shl	eax, 0xf
0x400059:	xor	ebx, eax
0x40005b:	call	0x500000
<Block for 0x400039, 10 bytes>
0x400039:	shl	eax, 0xf
0x40003c:	xor	ebx, eax
0x40003e:	call	0x500000
<Block for 0x400060, 13 bytes>
0x400060:	xor	eax, ebx
0x400062:	not	eax
0x400064:	mov	dword ptr [rbp - 0x14], eax
0x400067:	cmp	dword ptr [rbp - 0x14], 5
0x40006b:	jg	0x40008c
<Block for 0x400043, 4 bytes>
0x400043:	xor	eax, ebx
0x400045:	jmp	0x400064
<Block for 0x400064, 9 bytes>
0x400064:	mov	dword ptr [rbp - 0x14], eax
0x400067:	cmp	dword ptr [rbp - 0x14], 5
0x40006b:	jg	0x40008c
