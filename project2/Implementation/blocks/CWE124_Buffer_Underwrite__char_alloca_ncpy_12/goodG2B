<Block for 0x400145, 81 bytes>
0x400145:	endbr64	
0x400149:	push	rbp
0x40014a:	mov	rbp, rsp
0x40014d:	add	rsp, -0x80
0x400151:	mov	rax, qword ptr fs:[0x28]
0x40015a:	mov	qword ptr [rbp - 8], rax
0x40015e:	xor	eax, eax
0x400160:	mov	eax, 0x10
0x400165:	sub	rax, 1
0x400169:	add	rax, 0x6c
0x40016d:	mov	esi, 0x10
0x400172:	mov	edx, 0
0x400177:	div	rsi
0x40017a:	imul	rax, rax, 0x10
0x40017e:	mov	rdx, rax
0x400181:	and	rdx, 0xfffffffffffff000
0x400188:	mov	rcx, rsp
0x40018b:	sub	rcx, rdx
0x40018e:	mov	rdx, rcx
0x400191:	cmp	rsp, rdx
0x400194:	je	0x4001a8
<Block for 0x4001a8, 26 bytes>
0x4001a8:	mov	rdx, rax
0x4001ab:	and	edx, 0xfff
0x4001b1:	sub	rsp, rdx
0x4001b4:	mov	rdx, rax
0x4001b7:	and	edx, 0xfff
0x4001bd:	test	rdx, rdx
0x4001c0:	je	0x4001d2
<Block for 0x400196, 18 bytes>
0x400196:	sub	rsp, 0x1000
0x40019d:	or	qword ptr [rsp + 0xff8], 0
0x4001a6:	jmp	0x400191
<Block for 0x4001d2, 41 bytes>
0x4001d2:	mov	rax, rsp
0x4001d5:	add	rax, 0xf
0x4001d9:	shr	rax, 4
0x4001dd:	shl	rax, 4
0x4001e1:	mov	qword ptr [rbp - 0x78], rax
0x4001e5:	mov	rax, qword ptr [rbp - 0x78]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x41
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500000
<Block for 0x4001c2, 57 bytes>
0x4001c2:	and	eax, 0xfff
0x4001c7:	sub	rax, 8
0x4001cb:	add	rax, rsp
0x4001ce:	or	qword ptr [rax], 0
0x4001d2:	mov	rax, rsp
0x4001d5:	add	rax, 0xf
0x4001d9:	shr	rax, 4
0x4001dd:	shl	rax, 4
0x4001e1:	mov	qword ptr [rbp - 0x78], rax
0x4001e5:	mov	rax, qword ptr [rbp - 0x78]
0x4001e9:	mov	edx, 0x63
0x4001ee:	mov	esi, 0x41
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500000
<Block for 0x400191, 5 bytes>
0x400191:	cmp	rsp, rdx
0x400194:	je	0x4001a8
<Block for 0x4001fb, 21 bytes>
0x4001fb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ff:	add	rax, 0x63
0x400203:	mov	byte ptr [rax], 0
0x400206:	mov	eax, 0
0x40020b:	call	0x500008
<Block for 0x400210, 4 bytes>
0x400210:	test	eax, eax
0x400212:	je	0x40021e
<Block for 0x40021e, 30 bytes>
0x40021e:	mov	rax, qword ptr [rbp - 0x78]
0x400222:	mov	qword ptr [rbp - 0x80], rax
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500000
<Block for 0x400214, 10 bytes>
0x400214:	mov	rax, qword ptr [rbp - 0x78]
0x400218:	mov	qword ptr [rbp - 0x80], rax
0x40021c:	jmp	0x400226
<Block for 0x40023c, 28 bytes>
0x40023c:	mov	byte ptr [rbp - 0xd], 0
0x400240:	lea	rcx, [rbp - 0x70]
0x400244:	mov	rax, qword ptr [rbp - 0x80]
0x400248:	mov	edx, 0x63
0x40024d:	mov	rsi, rcx
0x400250:	mov	rdi, rax
0x400253:	call	0x500010
<Block for 0x400226, 22 bytes>
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	edx, 0x63
0x40022f:	mov	esi, 0x43
0x400234:	mov	rdi, rax
0x400237:	call	0x500000
<Block for 0x400258, 23 bytes>
0x400258:	mov	rax, qword ptr [rbp - 0x80]
0x40025c:	add	rax, 0x63
0x400260:	mov	byte ptr [rax], 0
0x400263:	mov	rax, qword ptr [rbp - 0x80]
0x400267:	mov	rdi, rax
0x40026a:	call	0x500018
<Block for 0x40026f, 16 bytes>
0x40026f:	nop	
0x400270:	mov	rax, qword ptr [rbp - 8]
0x400274:	xor	rax, qword ptr fs:[0x28]
0x40027d:	je	0x400284
<Block for 0x400284, 2 bytes>
0x400284:	leave	
0x400285:	ret	
<Block for 0x40027f, 5 bytes>
0x40027f:	call	0x500020
