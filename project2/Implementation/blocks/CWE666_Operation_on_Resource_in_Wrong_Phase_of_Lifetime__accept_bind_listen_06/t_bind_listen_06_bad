<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xa0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 5
0x400023:	cmp	eax, 5
0x400026:	jne	0x40026e
<Block for 0x40002c, 135 bytes>
0x40002c:	mov	qword ptr [rbp - 0x70], 0
0x400034:	mov	qword ptr [rbp - 0x68], 0
0x40003c:	mov	qword ptr [rbp - 0x60], 0
0x400044:	mov	qword ptr [rbp - 0x58], 0
0x40004c:	mov	qword ptr [rbp - 0x50], 0
0x400054:	mov	qword ptr [rbp - 0x48], 0
0x40005c:	mov	qword ptr [rbp - 0x40], 0
0x400064:	mov	qword ptr [rbp - 0x38], 0
0x40006c:	mov	qword ptr [rbp - 0x30], 0
0x400074:	mov	qword ptr [rbp - 0x28], 0
0x40007c:	mov	qword ptr [rbp - 0x20], 0
0x400084:	mov	qword ptr [rbp - 0x18], 0
0x40008c:	mov	dword ptr [rbp - 0x10], 0
0x400093:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x40009d:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4000a7:	lea	rax, [rbp - 0x70]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500000
<Block for 0x40026e, 16 bytes>
0x40026e:	nop	
0x40026f:	mov	rax, qword ptr [rbp - 8]
0x400273:	xor	rax, qword ptr fs:[0x28]
0x40027c:	je	0x400283
<Block for 0x4000b3, 27 bytes>
0x4000b3:	mov	qword ptr [rbp - 0x90], rax
0x4000ba:	mov	edx, 6
0x4000bf:	mov	esi, 1
0x4000c4:	mov	edi, 2
0x4000c9:	call	0x500008
<Block for 0x400283, 2 bytes>
0x400283:	leave	
0x400284:	ret	
<Block for 0x40027e, 5 bytes>
0x40027e:	call	0x500058
<Block for 0x4000ce, 19 bytes>
0x4000ce:	mov	dword ptr [rbp - 0x98], eax
0x4000d4:	cmp	dword ptr [rbp - 0x98], -1
0x4000db:	je	0x40022c
<Block for 0x40022c, 3 bytes>
0x40022c:	nop	
0x40022d:	jmp	0x400236
<Block for 0x4000e1, 22 bytes>
0x4000e1:	lea	rax, [rbp - 0x80]
0x4000e5:	mov	edx, 0x10
0x4000ea:	mov	esi, 0
0x4000ef:	mov	rdi, rax
0x4000f2:	call	0x500010
<Block for 0x400236, 9 bytes>
0x400236:	cmp	dword ptr [rbp - 0x98], -1
0x40023d:	je	0x40024c
<Block for 0x4000f7, 23 bytes>
0x4000f7:	mov	word ptr [rbp - 0x80], 2
0x4000fd:	mov	dword ptr [rbp - 0x7c], 0
0x400104:	mov	edi, 0x6987
0x400109:	call	0x500018
<Block for 0x40024c, 9 bytes>
0x40024c:	cmp	dword ptr [rbp - 0x9c], -1
0x400253:	je	0x400262
<Block for 0x40023f, 13 bytes>
0x40023f:	mov	eax, dword ptr [rbp - 0x98]
0x400245:	mov	edi, eax
0x400247:	call	0x500048
<Block for 0x40010e, 27 bytes>
0x40010e:	mov	word ptr [rbp - 0x7e], ax
0x400112:	mov	eax, dword ptr [rbp - 0x98]
0x400118:	mov	edx, 0
0x40011d:	mov	esi, 0
0x400122:	mov	edi, eax
0x400124:	call	0x500020
<Block for 0x400262, 12 bytes>
0x400262:	lea	rax, [rbp - 0x70]
0x400266:	mov	rdi, rax
0x400269:	call	0x500050
<Block for 0x400255, 13 bytes>
0x400255:	mov	eax, dword ptr [rbp - 0x9c]
0x40025b:	mov	edi, eax
0x40025d:	call	0x500048
<Block for 0x400129, 19 bytes>
0x400129:	mov	dword ptr [rbp - 0x9c], eax
0x40012f:	cmp	dword ptr [rbp - 0x9c], -1
0x400136:	je	0x40022f
<Block for 0x40022f, 3 bytes>
0x40022f:	nop	
0x400230:	jmp	0x400236
<Block for 0x40013c, 25 bytes>
0x40013c:	lea	rcx, [rbp - 0x80]
0x400140:	mov	eax, dword ptr [rbp - 0x98]
0x400146:	mov	edx, 0x10
0x40014b:	mov	rsi, rcx
0x40014e:	mov	edi, eax
0x400150:	call	0x500028
<Block for 0x400155, 9 bytes>
0x400155:	cmp	eax, -1
0x400158:	je	0x400232
<Block for 0x400232, 3 bytes>
0x400232:	nop	
0x400233:	jmp	0x400236
<Block for 0x40015e, 18 bytes>
0x40015e:	mov	eax, dword ptr [rbp - 0x98]
0x400164:	mov	esi, 5
0x400169:	mov	edi, eax
0x40016b:	call	0x500030
<Block for 0x400170, 9 bytes>
0x400170:	cmp	eax, -1
0x400173:	je	0x400235
<Block for 0x400179, 52 bytes>
0x400179:	mov	rax, qword ptr [rbp - 0x90]
0x400180:	mov	edx, 0x63
0x400185:	sub	edx, eax
0x400187:	mov	eax, edx
0x400189:	movsxd	rdx, eax
0x40018c:	lea	rcx, [rbp - 0x70]
0x400190:	mov	rax, qword ptr [rbp - 0x90]
0x400197:	lea	rsi, [rcx + rax]
0x40019b:	mov	eax, dword ptr [rbp - 0x9c]
0x4001a1:	mov	ecx, 0
0x4001a6:	mov	edi, eax
0x4001a8:	call	0x500038
<Block for 0x400235, 1 bytes>
0x400235:	nop	
<Block for 0x4001ad, 15 bytes>
0x4001ad:	mov	dword ptr [rbp - 0x94], eax
0x4001b3:	cmp	dword ptr [rbp - 0x94], -1
0x4001ba:	je	0x400236
<Block for 0x4001bc, 9 bytes>
0x4001bc:	cmp	dword ptr [rbp - 0x94], 0
0x4001c3:	je	0x400236
<Block for 0x4001c5, 30 bytes>
0x4001c5:	mov	eax, dword ptr [rbp - 0x94]
0x4001cb:	cdqe	
0x4001cd:	mov	byte ptr [rbp + rax - 0x70], 0
0x4001d2:	lea	rax, [rbp - 0x70]
0x4001d6:	mov	esi, 0xd
0x4001db:	mov	rdi, rax
0x4001de:	call	0x500040
<Block for 0x4001e3, 17 bytes>
0x4001e3:	mov	qword ptr [rbp - 0x88], rax
0x4001ea:	cmp	qword ptr [rbp - 0x88], 0
0x4001f2:	je	0x4001fe
<Block for 0x4001fe, 17 bytes>
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	esi, 0xa
0x400207:	mov	rdi, rax
0x40020a:	call	0x500040
<Block for 0x4001f4, 27 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x88]
0x4001fb:	mov	byte ptr [rax], 0
0x4001fe:	lea	rax, [rbp - 0x70]
0x400202:	mov	esi, 0xa
0x400207:	mov	rdi, rax
0x40020a:	call	0x500040
<Block for 0x40020f, 17 bytes>
0x40020f:	mov	qword ptr [rbp - 0x88], rax
0x400216:	cmp	qword ptr [rbp - 0x88], 0
0x40021e:	je	0x400236
<Block for 0x400220, 12 bytes>
0x400220:	mov	rax, qword ptr [rbp - 0x88]
0x400227:	mov	byte ptr [rax], 0
0x40022a:	jmp	0x400236
