<Block for 0x4000a7, 47 bytes>
0x4000a7:	endbr64	
0x4000ab:	push	rbp
0x4000ac:	mov	rbp, rsp
0x4000af:	add	rsp, -0x80
0x4000b3:	mov	rax, qword ptr fs:[0x28]
0x4000bc:	mov	qword ptr [rbp - 8], rax
0x4000c0:	xor	eax, eax
0x4000c2:	mov	qword ptr [rbp - 0x78], 0
0x4000ca:	lea	rax, [rbp - 0x78]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500038
<Block for 0x4000d6, 22 bytes>
0x4000d6:	lea	rax, [rbp - 0x70]
0x4000da:	mov	edx, 0x63
0x4000df:	mov	esi, 0x43
0x4000e4:	mov	rdi, rax
0x4000e7:	call	0x500008
<Block for 0x4000ec, 16 bytes>
0x4000ec:	mov	byte ptr [rbp - 0xd], 0
0x4000f0:	lea	rax, [rbp - 0x70]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500010
<Block for 0x4000fc, 22 bytes>
0x4000fc:	mov	rdx, rax
0x4000ff:	mov	rcx, qword ptr [rbp - 0x78]
0x400103:	lea	rax, [rbp - 0x70]
0x400107:	mov	rsi, rcx
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500018
<Block for 0x400112, 16 bytes>
0x400112:	mov	byte ptr [rbp - 0xd], 0
0x400116:	lea	rax, [rbp - 0x70]
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500020
<Block for 0x400122, 9 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x78]
0x400126:	test	rax, rax
0x400129:	je	0x400137
<Block for 0x400137, 16 bytes>
0x400137:	nop	
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	xor	rax, qword ptr fs:[0x28]
0x400145:	je	0x40014c
<Block for 0x40012b, 12 bytes>
0x40012b:	mov	rax, qword ptr [rbp - 0x78]
0x40012f:	mov	rdi, rax
0x400132:	call	0x500028
<Block for 0x40014c, 2 bytes>
0x40014c:	leave	
0x40014d:	ret	
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500030
