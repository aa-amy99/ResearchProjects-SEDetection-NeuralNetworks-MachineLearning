<Block for 0x400171, 84 bytes>
0x400171:	endbr64	
0x400175:	push	rbp
0x400176:	mov	rbp, rsp
0x400179:	sub	rsp, 0x90
0x400180:	mov	rax, qword ptr fs:[0x28]
0x400189:	mov	qword ptr [rbp - 8], rax
0x40018d:	xor	eax, eax
0x40018f:	mov	eax, 0x10
0x400194:	sub	rax, 1
0x400198:	add	rax, 0x6c
0x40019c:	mov	esi, 0x10
0x4001a1:	mov	edx, 0
0x4001a6:	div	rsi
0x4001a9:	imul	rax, rax, 0x10
0x4001ad:	mov	rdx, rax
0x4001b0:	and	rdx, 0xfffffffffffff000
0x4001b7:	mov	rcx, rsp
0x4001ba:	sub	rcx, rdx
0x4001bd:	mov	rdx, rcx
0x4001c0:	cmp	rsp, rdx
0x4001c3:	je	0x4001d7
<Block for 0x4001d7, 26 bytes>
0x4001d7:	mov	rdx, rax
0x4001da:	and	edx, 0xfff
0x4001e0:	sub	rsp, rdx
0x4001e3:	mov	rdx, rax
0x4001e6:	and	edx, 0xfff
0x4001ec:	test	rdx, rdx
0x4001ef:	je	0x400201
<Block for 0x4001c5, 18 bytes>
0x4001c5:	sub	rsp, 0x1000
0x4001cc:	or	qword ptr [rsp + 0xff8], 0
0x4001d5:	jmp	0x4001c0
<Block for 0x400201, 41 bytes>
0x400201:	mov	rax, rsp
0x400204:	add	rax, 0xf
0x400208:	shr	rax, 4
0x40020c:	shl	rax, 4
0x400210:	mov	qword ptr [rbp - 0x78], rax
0x400214:	mov	rax, qword ptr [rbp - 0x78]
0x400218:	mov	edx, 0x63
0x40021d:	mov	esi, 0x41
0x400222:	mov	rdi, rax
0x400225:	call	0x500000
<Block for 0x4001f1, 57 bytes>
0x4001f1:	and	eax, 0xfff
0x4001f6:	sub	rax, 8
0x4001fa:	add	rax, rsp
0x4001fd:	or	qword ptr [rax], 0
0x400201:	mov	rax, rsp
0x400204:	add	rax, 0xf
0x400208:	shr	rax, 4
0x40020c:	shl	rax, 4
0x400210:	mov	qword ptr [rbp - 0x78], rax
0x400214:	mov	rax, qword ptr [rbp - 0x78]
0x400218:	mov	edx, 0x63
0x40021d:	mov	esi, 0x41
0x400222:	mov	rdi, rax
0x400225:	call	0x500000
<Block for 0x4001c0, 5 bytes>
0x4001c0:	cmp	rsp, rdx
0x4001c3:	je	0x4001d7
<Block for 0x40022a, 23 bytes>
0x40022a:	mov	rax, qword ptr [rbp - 0x78]
0x40022e:	add	rax, 0x63
0x400232:	mov	byte ptr [rax], 0
0x400235:	mov	dword ptr [rbp - 0x8c], 0
0x40023f:	jmp	0x400253
<Block for 0x400253, 9 bytes>
0x400253:	cmp	dword ptr [rbp - 0x8c], 0
0x40025a:	jle	0x400241
<Block for 0x400241, 27 bytes>
0x400241:	mov	rax, qword ptr [rbp - 0x78]
0x400245:	mov	qword ptr [rbp - 0x88], rax
0x40024c:	add	dword ptr [rbp - 0x8c], 1
0x400253:	cmp	dword ptr [rbp - 0x8c], 0
0x40025a:	jle	0x400241
<Block for 0x40025c, 22 bytes>
0x40025c:	lea	rax, [rbp - 0x70]
0x400260:	mov	edx, 0x63
0x400265:	mov	esi, 0x43
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500000
<Block for 0x400272, 14 bytes>
0x400272:	mov	byte ptr [rbp - 0xd], 0
0x400276:	mov	qword ptr [rbp - 0x80], 0
0x40027e:	jmp	0x4002a3
<Block for 0x4002a3, 7 bytes>
0x4002a3:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002a8:	jbe	0x400280
<Block for 0x400280, 42 bytes>
0x400280:	mov	rdx, qword ptr [rbp - 0x88]
0x400287:	mov	rax, qword ptr [rbp - 0x80]
0x40028b:	add	rdx, rax
0x40028e:	lea	rcx, [rbp - 0x70]
0x400292:	mov	rax, qword ptr [rbp - 0x80]
0x400296:	add	rax, rcx
0x400299:	movzx	eax, byte ptr [rax]
0x40029c:	mov	byte ptr [rdx], al
0x40029e:	add	qword ptr [rbp - 0x80], 1
0x4002a3:	cmp	qword ptr [rbp - 0x80], 0x63
0x4002a8:	jbe	0x400280
<Block for 0x4002aa, 29 bytes>
0x4002aa:	mov	rax, qword ptr [rbp - 0x88]
0x4002b1:	add	rax, 0x63
0x4002b5:	mov	byte ptr [rax], 0
0x4002b8:	mov	rax, qword ptr [rbp - 0x88]
0x4002bf:	mov	rdi, rax
0x4002c2:	call	0x500008
<Block for 0x4002c7, 16 bytes>
0x4002c7:	nop	
0x4002c8:	mov	rax, qword ptr [rbp - 8]
0x4002cc:	xor	rax, qword ptr fs:[0x28]
0x4002d5:	je	0x4002dc
<Block for 0x4002dc, 2 bytes>
0x4002dc:	leave	
0x4002dd:	ret	
<Block for 0x4002d7, 5 bytes>
0x4002d7:	call	0x500010
