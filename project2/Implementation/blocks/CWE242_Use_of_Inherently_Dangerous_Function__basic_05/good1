<Block for 0x400080, 37 bytes>
0x400080:	endbr64	
0x400084:	push	rbp
0x400085:	mov	rbp, rsp
0x400088:	sub	rsp, 0x20
0x40008c:	mov	rax, qword ptr fs:[0x28]
0x400095:	mov	qword ptr [rbp - 8], rax
0x400099:	xor	eax, eax
0x40009b:	mov	eax, dword ptr [rip + 0x11b]
0x4000a1:	test	eax, eax
0x4000a3:	je	0x4000b3
<Block for 0x4000b3, 24 bytes>
0x4000b3:	mov	rdx, qword ptr [rip + 0xfff66]
0x4000ba:	lea	rax, [rbp - 0x12]
0x4000be:	mov	esi, 0xa
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500028
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x151]
0x4000ac:	call	0x500008
<Block for 0x4000cb, 11 bytes>
0x4000cb:	mov	qword ptr [rbp - 0x20], rax
0x4000cf:	cmp	qword ptr [rbp - 0x20], 0
0x4000d4:	jne	0x4000ec
<Block for 0x4000b1, 2 bytes>
0x4000b1:	jmp	0x4000fc
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rdi, [rip + 0xe3]
0x4000dd:	call	0x500008
<Block for 0x4000ec, 16 bytes>
0x4000ec:	mov	byte ptr [rbp - 9], 0
0x4000f0:	lea	rax, [rbp - 0x12]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500008
<Block for 0x4000fc, 16 bytes>
0x4000fc:	nop	
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	xor	rax, qword ptr fs:[0x28]
0x40010a:	je	0x400111
<Block for 0x4000e2, 10 bytes>
0x4000e2:	mov	edi, 1
0x4000e7:	call	0x500010
<Block for 0x400111, 2 bytes>
0x400111:	leave	
0x400112:	ret	
<Block for 0x40010c, 5 bytes>
0x40010c:	call	0x500018
