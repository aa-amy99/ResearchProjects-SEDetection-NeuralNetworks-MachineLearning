<Block for 0x400181, 40 bytes>
0x400181:	endbr64	
0x400185:	push	rbp
0x400186:	mov	rbp, rsp
0x400189:	push	rbx
0x40018a:	sub	rsp, 0x38
0x40018e:	mov	rax, qword ptr fs:[0x28]
0x400197:	mov	qword ptr [rbp - 0x18], rax
0x40019b:	xor	eax, eax
0x40019d:	lea	rax, [rbp - 0x30]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x40059c
<Block for 0x4001a9, 31 bytes>
0x4001a9:	nop	
0x4001aa:	endbr64	
0x4001ae:	mov	dword ptr [rbp - 0x38], 0x64
0x4001b5:	lea	rdx, [rbp - 0x38]
0x4001b9:	lea	rax, [rbp - 0x30]
0x4001bd:	mov	rsi, rdx
0x4001c0:	mov	rdi, rax
0x4001c3:	call	0x400684
<Block for 0x4001c8, 26 bytes>
0x4001c8:	mov	dword ptr [rbp - 0x38], 0
0x4001cf:	lea	rdx, [rbp - 0x38]
0x4001d3:	lea	rax, [rbp - 0x30]
0x4001d7:	mov	rsi, rdx
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x400684
<Block for 0x4001e2, 17 bytes>
0x4001e2:	nop	
0x4001e3:	endbr64	
0x4001e7:	lea	rax, [rbp - 0x40]
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x4006d2
<Block for 0x4001f3, 19 bytes>
0x4001f3:	lea	rsi, [rip + 0x2f6]
0x4001fa:	lea	rdi, [rip + 0xffdff]
0x400201:	call	0x500008
<Block for 0x400206, 12 bytes>
0x400206:	lea	rax, [rbp - 0x30]
0x40020a:	mov	rdi, rax
0x40020d:	call	0x4006ec
<Block for 0x400212, 16 bytes>
0x400212:	mov	qword ptr [rbp - 0x40], rax
0x400216:	lea	rax, [rbp - 0x30]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x40073c
<Block for 0x400222, 23 bytes>
0x400222:	mov	qword ptr [rbp - 0x38], rax
0x400226:	lea	rdx, [rbp - 0x38]
0x40022a:	lea	rax, [rbp - 0x40]
0x40022e:	mov	rsi, rdx
0x400231:	mov	rdi, rax
0x400234:	call	0x400788
<Block for 0x400239, 4 bytes>
0x400239:	test	al, al
0x40023b:	je	0x40027e
<Block for 0x40027e, 22 bytes>
0x40027e:	mov	rax, qword ptr [rip + 0xffd9b]
0x400285:	mov	rsi, rax
0x400288:	lea	rdi, [rip + 0xffd71]
0x40028f:	call	0x500028
<Block for 0x40023d, 19 bytes>
0x40023d:	lea	rsi, [rip + 0x2c0]
0x400244:	lea	rdi, [rip + 0xffdb5]
0x40024b:	call	0x500008
<Block for 0x400294, 12 bytes>
0x400294:	lea	rax, [rbp - 0x30]
0x400298:	mov	rdi, rax
0x40029b:	call	0x4005bc
<Block for 0x400250, 15 bytes>
0x400250:	mov	rbx, rax
0x400253:	lea	rax, [rbp - 0x40]
0x400257:	mov	rdi, rax
0x40025a:	call	0x400806
<Block for 0x4002a0, 16 bytes>
0x4002a0:	nop	
0x4002a1:	mov	rax, qword ptr [rbp - 0x18]
0x4002a5:	xor	rax, qword ptr fs:[0x28]
0x4002ae:	je	0x4002d5
<Block for 0x40025f, 12 bytes>
0x40025f:	mov	eax, dword ptr [rax]
0x400261:	mov	esi, eax
0x400263:	mov	rdi, rbx
0x400266:	call	0x500010
<Block for 0x4002d5, 7 bytes>
0x4002d5:	add	rsp, 0x38
0x4002d9:	pop	rbx
0x4002da:	pop	rbp
0x4002db:	ret	
<Block for 0x4002b0, 2 bytes>
0x4002b0:	jmp	0x4002d0
<Block for 0x40026b, 17 bytes>
0x40026b:	lea	rax, [rbp - 0x40]
0x40026f:	mov	esi, 0
0x400274:	mov	rdi, rax
0x400277:	call	0x4007ae
<Block for 0x4002d0, 5 bytes>
0x4002d0:	call	0x500038
<Block for 0x40027c, 2 bytes>
0x40027c:	jmp	0x400216
<Block for 0x400216, 12 bytes>
0x400216:	lea	rax, [rbp - 0x30]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x40073c
