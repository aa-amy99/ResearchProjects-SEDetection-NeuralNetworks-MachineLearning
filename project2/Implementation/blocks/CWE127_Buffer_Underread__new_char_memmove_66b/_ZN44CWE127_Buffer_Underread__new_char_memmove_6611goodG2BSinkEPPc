<Block for 0x40008d, 74 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x90
0x40009c:	mov	qword ptr [rbp - 0x88], rdi
0x4000a3:	mov	rax, qword ptr fs:[0x28]
0x4000ac:	mov	qword ptr [rbp - 8], rax
0x4000b0:	xor	eax, eax
0x4000b2:	mov	rax, qword ptr [rbp - 0x88]
0x4000b9:	mov	rax, qword ptr [rax + 0x10]
0x4000bd:	mov	qword ptr [rbp - 0x78], rax
0x4000c1:	lea	rax, [rbp - 0x70]
0x4000c5:	mov	edx, 0x63
0x4000ca:	mov	esi, 0x43
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500000
<Block for 0x4000d7, 28 bytes>
0x4000d7:	mov	byte ptr [rbp - 0xd], 0
0x4000db:	mov	rcx, qword ptr [rbp - 0x78]
0x4000df:	lea	rax, [rbp - 0x70]
0x4000e3:	mov	edx, 0x64
0x4000e8:	mov	rsi, rcx
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500008
<Block for 0x4000f3, 16 bytes>
0x4000f3:	mov	byte ptr [rbp - 0xd], 0
0x4000f7:	lea	rax, [rbp - 0x70]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500010
<Block for 0x400103, 16 bytes>
0x400103:	nop	
0x400104:	mov	rax, qword ptr [rbp - 8]
0x400108:	xor	rax, qword ptr fs:[0x28]
0x400111:	je	0x400118
<Block for 0x400118, 2 bytes>
0x400118:	leave	
0x400119:	ret	
<Block for 0x400113, 5 bytes>
0x400113:	call	0x500018
