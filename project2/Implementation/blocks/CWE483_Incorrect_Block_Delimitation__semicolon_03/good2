<Block for 0x4000e8, 17 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x10
0x4000f4:	call	0x500000
<Block for 0x4000f9, 62 bytes>
0x4000f9:	mov	edx, eax
0x4000fb:	movsxd	rax, edx
0x4000fe:	imul	rax, rax, 0x55555556
0x400105:	shr	rax, 0x20
0x400109:	mov	rcx, rax
0x40010c:	mov	eax, edx
0x40010e:	sar	eax, 0x1f
0x400111:	mov	esi, ecx
0x400113:	sub	esi, eax
0x400115:	mov	eax, esi
0x400117:	mov	dword ptr [rbp - 4], eax
0x40011a:	mov	ecx, dword ptr [rbp - 4]
0x40011d:	mov	eax, ecx
0x40011f:	add	eax, eax
0x400121:	add	eax, ecx
0x400123:	sub	edx, eax
0x400125:	mov	eax, edx
0x400127:	mov	dword ptr [rbp - 4], eax
0x40012a:	mov	dword ptr [rbp - 8], 0
0x400131:	cmp	dword ptr [rbp - 4], 0
0x400135:	jne	0x40014a
<Block for 0x400137, 12 bytes>
0x400137:	lea	rdi, [rip + 0x40]
0x40013e:	call	0x500008
<Block for 0x40014a, 6 bytes>
0x40014a:	cmp	dword ptr [rbp - 8], 0
0x40014e:	je	0x40015c
<Block for 0x400143, 13 bytes>
0x400143:	mov	dword ptr [rbp - 8], 1
0x40014a:	cmp	dword ptr [rbp - 8], 0
0x40014e:	je	0x40015c
<Block for 0x40015c, 3 bytes>
0x40015c:	nop	
0x40015d:	leave	
0x40015e:	ret	
<Block for 0x400150, 12 bytes>
0x400150:	lea	rdi, [rip + 0x2e]
0x400157:	call	0x500008
