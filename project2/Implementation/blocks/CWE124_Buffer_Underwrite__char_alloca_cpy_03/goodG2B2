<Block for 0x400236, 81 bytes>
0x400236:	endbr64	
0x40023a:	push	rbp
0x40023b:	mov	rbp, rsp
0x40023e:	add	rsp, -0x80
0x400242:	mov	rax, qword ptr fs:[0x28]
0x40024b:	mov	qword ptr [rbp - 8], rax
0x40024f:	xor	eax, eax
0x400251:	mov	eax, 0x10
0x400256:	sub	rax, 1
0x40025a:	add	rax, 0x6c
0x40025e:	mov	ecx, 0x10
0x400263:	mov	edx, 0
0x400268:	div	rcx
0x40026b:	imul	rax, rax, 0x10
0x40026f:	mov	rdx, rax
0x400272:	and	rdx, 0xfffffffffffff000
0x400279:	mov	rcx, rsp
0x40027c:	sub	rcx, rdx
0x40027f:	mov	rdx, rcx
0x400282:	cmp	rsp, rdx
0x400285:	je	0x400299
<Block for 0x400299, 26 bytes>
0x400299:	mov	rdx, rax
0x40029c:	and	edx, 0xfff
0x4002a2:	sub	rsp, rdx
0x4002a5:	mov	rdx, rax
0x4002a8:	and	edx, 0xfff
0x4002ae:	test	rdx, rdx
0x4002b1:	je	0x4002c3
<Block for 0x400287, 18 bytes>
0x400287:	sub	rsp, 0x1000
0x40028e:	or	qword ptr [rsp + 0xff8], 0
0x400297:	jmp	0x400282
<Block for 0x4002c3, 41 bytes>
0x4002c3:	mov	rax, rsp
0x4002c6:	add	rax, 0xf
0x4002ca:	shr	rax, 4
0x4002ce:	shl	rax, 4
0x4002d2:	mov	qword ptr [rbp - 0x80], rax
0x4002d6:	mov	rax, qword ptr [rbp - 0x80]
0x4002da:	mov	edx, 0x63
0x4002df:	mov	esi, 0x41
0x4002e4:	mov	rdi, rax
0x4002e7:	call	0x500000
<Block for 0x4002b3, 57 bytes>
0x4002b3:	and	eax, 0xfff
0x4002b8:	sub	rax, 8
0x4002bc:	add	rax, rsp
0x4002bf:	or	qword ptr [rax], 0
0x4002c3:	mov	rax, rsp
0x4002c6:	add	rax, 0xf
0x4002ca:	shr	rax, 4
0x4002ce:	shl	rax, 4
0x4002d2:	mov	qword ptr [rbp - 0x80], rax
0x4002d6:	mov	rax, qword ptr [rbp - 0x80]
0x4002da:	mov	edx, 0x63
0x4002df:	mov	esi, 0x41
0x4002e4:	mov	rdi, rax
0x4002e7:	call	0x500000
<Block for 0x400282, 5 bytes>
0x400282:	cmp	rsp, rdx
0x400285:	je	0x400299
<Block for 0x4002ec, 41 bytes>
0x4002ec:	mov	rax, qword ptr [rbp - 0x80]
0x4002f0:	add	rax, 0x63
0x4002f4:	mov	byte ptr [rax], 0
0x4002f7:	mov	rax, qword ptr [rbp - 0x80]
0x4002fb:	mov	qword ptr [rbp - 0x78], rax
0x4002ff:	lea	rax, [rbp - 0x70]
0x400303:	mov	edx, 0x63
0x400308:	mov	esi, 0x43
0x40030d:	mov	rdi, rax
0x400310:	call	0x500000
<Block for 0x400315, 23 bytes>
0x400315:	mov	byte ptr [rbp - 0xd], 0
0x400319:	lea	rdx, [rbp - 0x70]
0x40031d:	mov	rax, qword ptr [rbp - 0x78]
0x400321:	mov	rsi, rdx
0x400324:	mov	rdi, rax
0x400327:	call	0x500008
<Block for 0x40032c, 12 bytes>
0x40032c:	mov	rax, qword ptr [rbp - 0x78]
0x400330:	mov	rdi, rax
0x400333:	call	0x500010
<Block for 0x400338, 16 bytes>
0x400338:	nop	
0x400339:	mov	rax, qword ptr [rbp - 8]
0x40033d:	xor	rax, qword ptr fs:[0x28]
0x400346:	je	0x40034d
<Block for 0x40034d, 2 bytes>
0x40034d:	leave	
0x40034e:	ret	
<Block for 0x400348, 5 bytes>
0x400348:	call	0x500018
