<Block for 0x400257, 57 bytes>
0x400257:	endbr64	
0x40025b:	push	rbp
0x40025c:	mov	rbp, rsp
0x40025f:	add	rsp, -0x80
0x400263:	mov	rax, qword ptr fs:[0x28]
0x40026c:	mov	qword ptr [rbp - 8], rax
0x400270:	xor	eax, eax
0x400272:	mov	qword ptr [rbp - 0x78], 0
0x40027a:	mov	dword ptr [rip + 0x90], 1
0x400284:	mov	rax, qword ptr [rbp - 0x78]
0x400288:	mov	rdi, rax
0x40028b:	call	0x400200
<Block for 0x400290, 26 bytes>
0x400290:	mov	qword ptr [rbp - 0x78], rax
0x400294:	lea	rax, [rbp - 0x70]
0x400298:	mov	edx, 0x63
0x40029d:	mov	esi, 0x43
0x4002a2:	mov	rdi, rax
0x4002a5:	call	0x500008
<Block for 0x4002aa, 16 bytes>
0x4002aa:	mov	byte ptr [rbp - 0xd], 0
0x4002ae:	lea	rax, [rbp - 0x70]
0x4002b2:	mov	rdi, rax
0x4002b5:	call	0x500010
<Block for 0x4002ba, 22 bytes>
0x4002ba:	mov	rdx, rax
0x4002bd:	mov	rcx, qword ptr [rbp - 0x78]
0x4002c1:	lea	rax, [rbp - 0x70]
0x4002c5:	mov	rsi, rcx
0x4002c8:	mov	rdi, rax
0x4002cb:	call	0x500018
<Block for 0x4002d0, 16 bytes>
0x4002d0:	mov	byte ptr [rbp - 0xd], 0
0x4002d4:	lea	rax, [rbp - 0x70]
0x4002d8:	mov	rdi, rax
0x4002db:	call	0x500020
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500028
