<Block for 0x4000fb, 26 bytes>
0x4000fb:	endbr64	
0x4000ff:	push	rbp
0x400100:	mov	rbp, rsp
0x400103:	sub	rsp, 0x20
0x400107:	mov	qword ptr [rbp - 0x18], rdi
0x40010b:	mov	eax, dword ptr [rip + 0x1ff]
0x400111:	test	eax, eax
0x400113:	je	0x400123
<Block for 0x400123, 10 bytes>
0x400123:	mov	edi, 0x64
0x400128:	call	0x500000
<Block for 0x400115, 12 bytes>
0x400115:	lea	rdi, [rip + 0x1fc]
0x40011c:	call	0x500020
<Block for 0x40012d, 26 bytes>
0x40012d:	mov	qword ptr [rbp - 8], rax
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	mov	edx, 0x63
0x40013a:	mov	esi, 0x41
0x40013f:	mov	rdi, rax
0x400142:	call	0x500008
<Block for 0x400121, 2 bytes>
0x400121:	jmp	0x40015a
<Block for 0x400147, 25 bytes>
0x400147:	mov	rax, qword ptr [rbp - 8]
0x40014b:	add	rax, 0x63
0x40014f:	mov	byte ptr [rax], 0
0x400152:	mov	rax, qword ptr [rbp - 8]
0x400156:	mov	qword ptr [rbp - 0x18], rax
0x40015a:	mov	rax, qword ptr [rbp - 0x18]
0x40015e:	leave	
0x40015f:	ret	
<Block for 0x40015a, 6 bytes>
0x40015a:	mov	rax, qword ptr [rbp - 0x18]
0x40015e:	leave	
0x40015f:	ret	
