<Block for 0x400209, 25 bytes>
0x400209:	endbr64	
0x40020d:	push	rbp
0x40020e:	mov	rbp, rsp
0x400211:	sub	rsp, 0x10
0x400215:	mov	eax, 1
0x40021a:	test	eax, eax
0x40021c:	je	0x4002ed
<Block for 0x4002ed, 3 bytes>
0x4002ed:	nop	
0x4002ee:	leave	
0x4002ef:	ret	
<Block for 0x400222, 23 bytes>
0x400222:	mov	qword ptr [rbp - 8], 0
0x40022a:	mov	esi, 0
0x40022f:	mov	edi, 2
0x400234:	call	0x500000
<Block for 0x400239, 12 bytes>
0x400239:	mov	rax, qword ptr [rip + 0xd8]
0x400240:	test	rax, rax
0x400243:	je	0x40025f
<Block for 0x40025f, 10 bytes>
0x40025f:	mov	edi, 4
0x400264:	call	0x500010
<Block for 0x400245, 15 bytes>
0x400245:	mov	rax, qword ptr [rip + 0xcc]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500008
<Block for 0x400269, 11 bytes>
0x400269:	mov	qword ptr [rbp - 8], rax
0x40026d:	cmp	qword ptr [rbp - 8], 0
0x400272:	jne	0x40027e
<Block for 0x400254, 21 bytes>
0x400254:	mov	qword ptr [rip + 0xb9], 0
0x40025f:	mov	edi, 4
0x400264:	call	0x500010
<Block for 0x400274, 10 bytes>
0x400274:	mov	edi, 0xffffffff
0x400279:	call	0x500018
<Block for 0x40027e, 41 bytes>
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	mov	qword ptr [rip + 0x8f], rax
0x400289:	mov	rax, qword ptr [rip + 0x88]
0x400290:	mov	dword ptr [rax], 1
0x400296:	lea	rsi, [rip - 0x276]
0x40029d:	mov	edi, 2
0x4002a2:	call	0x500000
<Block for 0x4002a7, 15 bytes>
0x4002a7:	mov	esi, 0
0x4002ac:	mov	edi, 2
0x4002b1:	call	0x500000
<Block for 0x4002b6, 12 bytes>
0x4002b6:	mov	rax, qword ptr [rip + 0x5b]
0x4002bd:	test	rax, rax
0x4002c0:	je	0x4002dc
<Block for 0x4002dc, 17 bytes>
0x4002dc:	lea	rsi, [rip - 0x2bc]
0x4002e3:	mov	edi, 2
0x4002e8:	call	0x500000
<Block for 0x4002c2, 15 bytes>
0x4002c2:	mov	rax, qword ptr [rip + 0x4f]
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x500008
<Block for 0x4002d1, 28 bytes>
0x4002d1:	mov	qword ptr [rip + 0x3c], 0
0x4002dc:	lea	rsi, [rip - 0x2bc]
0x4002e3:	mov	edi, 2
0x4002e8:	call	0x500000
