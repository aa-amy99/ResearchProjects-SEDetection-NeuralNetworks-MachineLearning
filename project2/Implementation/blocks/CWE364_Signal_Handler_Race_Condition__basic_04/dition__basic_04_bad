<Block for 0x40004e, 25 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	sub	rsp, 0x10
0x40005a:	mov	eax, 1
0x40005f:	test	eax, eax
0x400061:	je	0x400112
<Block for 0x400112, 3 bytes>
0x400112:	nop	
0x400113:	leave	
0x400114:	ret	
<Block for 0x400067, 23 bytes>
0x400067:	mov	qword ptr [rbp - 8], 0
0x40006f:	mov	esi, 0
0x400074:	mov	edi, 2
0x400079:	call	0x500000
<Block for 0x40007e, 12 bytes>
0x40007e:	mov	rax, qword ptr [rip + 0x28b]
0x400085:	test	rax, rax
0x400088:	je	0x4000a4
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 4
0x4000a9:	call	0x500010
<Block for 0x40008a, 15 bytes>
0x40008a:	mov	rax, qword ptr [rip + 0x27f]
0x400091:	mov	rdi, rax
0x400094:	call	0x500008
<Block for 0x4000ae, 11 bytes>
0x4000ae:	mov	qword ptr [rbp - 8], rax
0x4000b2:	cmp	qword ptr [rbp - 8], 0
0x4000b7:	jne	0x4000c3
<Block for 0x400099, 21 bytes>
0x400099:	mov	qword ptr [rip + 0x26c], 0
0x4000a4:	mov	edi, 4
0x4000a9:	call	0x500010
<Block for 0x4000b9, 10 bytes>
0x4000b9:	mov	edi, 0xffffffff
0x4000be:	call	0x500018
<Block for 0x4000c3, 41 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 8]
0x4000c7:	mov	qword ptr [rip + 0x242], rax
0x4000ce:	mov	rax, qword ptr [rip + 0x23b]
0x4000d5:	mov	dword ptr [rax], 1
0x4000db:	lea	rsi, [rip - 0xe2]
0x4000e2:	mov	edi, 2
0x4000e7:	call	0x500000
<Block for 0x4000ec, 12 bytes>
0x4000ec:	mov	rax, qword ptr [rip + 0x21d]
0x4000f3:	test	rax, rax
0x4000f6:	je	0x400112
<Block for 0x4000f8, 15 bytes>
0x4000f8:	mov	rax, qword ptr [rip + 0x211]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500008
<Block for 0x400107, 14 bytes>
0x400107:	mov	qword ptr [rip + 0x1fe], 0
0x400112:	nop	
0x400113:	leave	
0x400114:	ret	
