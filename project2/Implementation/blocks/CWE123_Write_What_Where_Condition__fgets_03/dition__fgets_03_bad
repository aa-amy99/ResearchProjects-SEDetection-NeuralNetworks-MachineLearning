<Block for 0x400000, 99 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	lea	rax, [rbp - 0x20]
0x400027:	mov	qword ptr [rbp - 0x18], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x20]
0x40002f:	mov	qword ptr [rbp - 0x30], rax
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	qword ptr [rbp - 0x28], rax
0x40003b:	lea	rax, [rbp - 0x30]
0x40003f:	mov	qword ptr [rbp - 0x20], rax
0x400043:	lea	rax, [rbp - 0x30]
0x400047:	mov	qword ptr [rbp - 0x18], rax
0x40004b:	mov	rdx, qword ptr [rip + 0xfffae]
0x400052:	lea	rax, [rbp - 0x30]
0x400056:	mov	esi, 0x10
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500008
<Block for 0x400063, 5 bytes>
0x400063:	test	rax, rax
0x400066:	jne	0x40007e
<Block for 0x400068, 12 bytes>
0x400068:	lea	rdi, [rip + 0x1c9]
0x40006f:	call	0x500010
<Block for 0x40007e, 73 bytes>
0x40007e:	mov	rax, qword ptr [rbp - 0x28]
0x400082:	mov	qword ptr [rip + 0x19f], rax
0x400089:	mov	rax, qword ptr [rbp - 0x30]
0x40008d:	mov	qword ptr [rip + 0x19c], rax
0x400094:	mov	rax, qword ptr [rip + 0x18d]
0x40009b:	mov	rdx, qword ptr [rip + 0x18e]
0x4000a2:	mov	qword ptr [rax], rdx
0x4000a5:	mov	rax, qword ptr [rip + 0x184]
0x4000ac:	mov	rdx, qword ptr [rip + 0x175]
0x4000b3:	mov	qword ptr [rax + 8], rdx
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x400074, 10 bytes>
0x400074:	mov	edi, 1
0x400079:	call	0x500018
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500020
