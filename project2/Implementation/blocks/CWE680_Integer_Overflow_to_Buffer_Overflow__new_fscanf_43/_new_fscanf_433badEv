<Block for 0x400032, 46 bytes>
0x400032:	endbr64	
0x400036:	push	rbp
0x400037:	mov	rbp, rsp
0x40003a:	sub	rsp, 0x30
0x40003e:	mov	rax, qword ptr fs:[0x28]
0x400047:	mov	qword ptr [rbp - 8], rax
0x40004b:	xor	eax, eax
0x40004d:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400054:	lea	rax, [rbp - 0x24]
0x400058:	mov	rdi, rax
0x40005b:	call	0x400000
<Block for 0x400060, 25 bytes>
0x400060:	mov	eax, dword ptr [rbp - 0x24]
0x400063:	cdqe	
0x400065:	shl	rax, 2
0x400069:	mov	qword ptr [rbp - 0x18], rax
0x40006d:	mov	rax, qword ptr [rbp - 0x18]
0x400071:	mov	rdi, rax
0x400074:	call	0x500010
<Block for 0x400079, 23 bytes>
0x400079:	mov	qword ptr [rbp - 0x10], rax
0x40007d:	mov	qword ptr [rbp - 0x20], 0
0x400085:	mov	eax, dword ptr [rbp - 0x24]
0x400088:	cdqe	
0x40008a:	cmp	qword ptr [rbp - 0x20], rax
0x40008e:	jae	0x4000b0
<Block for 0x400090, 32 bytes>
0x400090:	mov	rax, qword ptr [rbp - 0x20]
0x400094:	lea	rdx, [rax*4]
0x40009c:	mov	rax, qword ptr [rbp - 0x10]
0x4000a0:	add	rax, rdx
0x4000a3:	mov	dword ptr [rax], 0
0x4000a9:	add	qword ptr [rbp - 0x20], 1
0x4000ae:	jmp	0x400085
<Block for 0x4000b0, 13 bytes>
0x4000b0:	mov	rax, qword ptr [rbp - 0x10]
0x4000b4:	mov	eax, dword ptr [rax]
0x4000b6:	mov	edi, eax
0x4000b8:	call	0x500018
<Block for 0x400085, 11 bytes>
0x400085:	mov	eax, dword ptr [rbp - 0x24]
0x400088:	cdqe	
0x40008a:	cmp	qword ptr [rbp - 0x20], rax
0x40008e:	jae	0x4000b0
<Block for 0x4000bd, 7 bytes>
0x4000bd:	cmp	qword ptr [rbp - 0x10], 0
0x4000c2:	je	0x4000d0
<Block for 0x4000d0, 16 bytes>
0x4000d0:	nop	
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	xor	rax, qword ptr fs:[0x28]
0x4000de:	je	0x4000e5
<Block for 0x4000c4, 12 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x10]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500020
<Block for 0x4000e5, 2 bytes>
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000e0, 5 bytes>
0x4000e0:	call	0x500028
