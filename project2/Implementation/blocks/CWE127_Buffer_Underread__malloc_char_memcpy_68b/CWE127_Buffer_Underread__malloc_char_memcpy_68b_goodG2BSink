<Block for 0x4000e2, 67 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	push	rbx
0x4000eb:	sub	rsp, 0x88
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 0x18], rax
0x4000ff:	xor	eax, eax
0x400101:	mov	rax, qword ptr [rip + 0xfff18]
0x400108:	mov	qword ptr [rbp - 0x88], rax
0x40010f:	lea	rax, [rbp - 0x80]
0x400113:	mov	edx, 0x63
0x400118:	mov	esi, 0x43
0x40011d:	mov	rdi, rax
0x400120:	call	0x500008
<Block for 0x400125, 128 bytes>
0x400125:	mov	byte ptr [rbp - 0x1d], 0
0x400129:	mov	rax, qword ptr [rbp - 0x88]
0x400130:	mov	rcx, qword ptr [rax]
0x400133:	mov	rbx, qword ptr [rax + 8]
0x400137:	mov	qword ptr [rbp - 0x80], rcx
0x40013b:	mov	qword ptr [rbp - 0x78], rbx
0x40013f:	mov	rcx, qword ptr [rax + 0x10]
0x400143:	mov	rbx, qword ptr [rax + 0x18]
0x400147:	mov	qword ptr [rbp - 0x70], rcx
0x40014b:	mov	qword ptr [rbp - 0x68], rbx
0x40014f:	mov	rcx, qword ptr [rax + 0x20]
0x400153:	mov	rbx, qword ptr [rax + 0x28]
0x400157:	mov	qword ptr [rbp - 0x60], rcx
0x40015b:	mov	qword ptr [rbp - 0x58], rbx
0x40015f:	mov	rcx, qword ptr [rax + 0x30]
0x400163:	mov	rbx, qword ptr [rax + 0x38]
0x400167:	mov	qword ptr [rbp - 0x50], rcx
0x40016b:	mov	qword ptr [rbp - 0x48], rbx
0x40016f:	mov	rcx, qword ptr [rax + 0x40]
0x400173:	mov	rbx, qword ptr [rax + 0x48]
0x400177:	mov	qword ptr [rbp - 0x40], rcx
0x40017b:	mov	qword ptr [rbp - 0x38], rbx
0x40017f:	mov	rcx, qword ptr [rax + 0x50]
0x400183:	mov	rbx, qword ptr [rax + 0x58]
0x400187:	mov	qword ptr [rbp - 0x30], rcx
0x40018b:	mov	qword ptr [rbp - 0x28], rbx
0x40018f:	mov	eax, dword ptr [rax + 0x60]
0x400192:	mov	dword ptr [rbp - 0x20], eax
0x400195:	mov	byte ptr [rbp - 0x1d], 0
0x400199:	lea	rax, [rbp - 0x80]
0x40019d:	mov	rdi, rax
0x4001a0:	call	0x500010
<Block for 0x4001a5, 16 bytes>
0x4001a5:	nop	
0x4001a6:	mov	rax, qword ptr [rbp - 0x18]
0x4001aa:	xor	rax, qword ptr fs:[0x28]
0x4001b3:	je	0x4001ba
<Block for 0x4001ba, 10 bytes>
0x4001ba:	add	rsp, 0x88
0x4001c1:	pop	rbx
0x4001c2:	pop	rbp
0x4001c3:	ret	
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500018
