<Block for 0x40002e, 22 bytes>
0x40002e:	endbr64	
0x400032:	push	rbp
0x400033:	mov	rbp, rsp
0x400036:	sub	rsp, 0x10
0x40003a:	mov	edi, 0x64
0x40003f:	call	0x500000
<Block for 0x400044, 11 bytes>
0x400044:	mov	qword ptr [rbp - 8], rax
0x400048:	cmp	qword ptr [rbp - 8], 0
0x40004d:	jne	0x400059
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 0xffffffff
0x400054:	call	0x500008
<Block for 0x400059, 19 bytes>
0x400059:	mov	rax, qword ptr [rbp - 8]
0x40005d:	mov	byte ptr [rax], 0
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	mov	rdi, rax
0x400067:	call	0x400000
<Block for 0x40006c, 6 bytes>
0x40006c:	mov	qword ptr [rbp - 8], rax
0x400070:	jmp	0x400090
<Block for 0x400090, 11 bytes>
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	movzx	eax, byte ptr [rax]
0x400097:	test	al, al
0x400099:	jne	0x400072
<Block for 0x40009b, 12 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 8]
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500018
<Block for 0x400072, 11 bytes>
0x400072:	mov	rax, qword ptr [rbp - 8]
0x400076:	movzx	eax, byte ptr [rax]
0x400079:	cmp	al, 0x53
0x40007b:	jne	0x40008b
<Block for 0x4000a7, 3 bytes>
0x4000a7:	nop	
0x4000a8:	leave	
0x4000a9:	ret	
<Block for 0x40007d, 12 bytes>
0x40007d:	lea	rdi, [rip + 0xfb]
0x400084:	call	0x500010
<Block for 0x40008b, 16 bytes>
0x40008b:	add	qword ptr [rbp - 8], 1
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	movzx	eax, byte ptr [rax]
0x400097:	test	al, al
0x400099:	jne	0x400072
<Block for 0x400089, 2 bytes>
0x400089:	jmp	0x40009b
