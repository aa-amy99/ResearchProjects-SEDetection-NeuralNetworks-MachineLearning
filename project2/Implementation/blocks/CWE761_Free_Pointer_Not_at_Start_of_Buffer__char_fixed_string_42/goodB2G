<Block for 0x4000d8, 22 bytes>
0x4000d8:	endbr64	
0x4000dc:	push	rbp
0x4000dd:	mov	rbp, rsp
0x4000e0:	sub	rsp, 0x10
0x4000e4:	mov	edi, 0x64
0x4000e9:	call	0x500000
<Block for 0x4000ee, 11 bytes>
0x4000ee:	mov	qword ptr [rbp - 8], rax
0x4000f2:	cmp	qword ptr [rbp - 8], 0
0x4000f7:	jne	0x400103
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	edi, 0xffffffff
0x4000fe:	call	0x500008
<Block for 0x400103, 19 bytes>
0x400103:	mov	rax, qword ptr [rbp - 8]
0x400107:	mov	byte ptr [rax], 0
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	mov	rdi, rax
0x400111:	call	0x4000aa
<Block for 0x400116, 14 bytes>
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	mov	qword ptr [rbp - 0x10], 0
0x400122:	jmp	0x400149
<Block for 0x400149, 12 bytes>
0x400149:	mov	rax, qword ptr [rbp - 8]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500020
<Block for 0x400155, 6 bytes>
0x400155:	cmp	qword ptr [rbp - 0x10], rax
0x400159:	jb	0x400124
<Block for 0x400124, 18 bytes>
0x400124:	mov	rdx, qword ptr [rbp - 8]
0x400128:	mov	rax, qword ptr [rbp - 0x10]
0x40012c:	add	rax, rdx
0x40012f:	movzx	eax, byte ptr [rax]
0x400132:	cmp	al, 0x53
0x400134:	jne	0x400144
<Block for 0x40015b, 12 bytes>
0x40015b:	mov	rax, qword ptr [rbp - 8]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500018
<Block for 0x400136, 12 bytes>
0x400136:	lea	rdi, [rip + 0x42]
0x40013d:	call	0x500010
<Block for 0x400144, 17 bytes>
0x400144:	add	qword ptr [rbp - 0x10], 1
0x400149:	mov	rax, qword ptr [rbp - 8]
0x40014d:	mov	rdi, rax
0x400150:	call	0x500020
<Block for 0x400167, 3 bytes>
0x400167:	nop	
0x400168:	leave	
0x400169:	ret	
<Block for 0x400142, 2 bytes>
0x400142:	jmp	0x40015b
