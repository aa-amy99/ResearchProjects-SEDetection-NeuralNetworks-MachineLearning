<Block for 0x400272, 53 bytes>
0x400272:	endbr64	
0x400276:	push	rbp
0x400277:	mov	rbp, rsp
0x40027a:	push	rbx
0x40027b:	sub	rsp, 0x88
0x400282:	mov	rax, qword ptr fs:[0x28]
0x40028b:	mov	qword ptr [rbp - 0x18], rax
0x40028f:	xor	eax, eax
0x400291:	mov	qword ptr [rbp - 0x90], 0
0x40029c:	mov	eax, dword ptr [rip + 0x116]
0x4002a2:	cmp	eax, 5
0x4002a5:	jne	0x4002ed
<Block for 0x4002a7, 10 bytes>
0x4002a7:	mov	edi, 0x64
0x4002ac:	call	0x500000
<Block for 0x4002ed, 22 bytes>
0x4002ed:	lea	rax, [rbp - 0x80]
0x4002f1:	mov	edx, 0x63
0x4002f6:	mov	esi, 0x43
0x4002fb:	mov	rdi, rax
0x4002fe:	call	0x500008
<Block for 0x4002b1, 32 bytes>
0x4002b1:	mov	qword ptr [rbp - 0x88], rax
0x4002b8:	mov	rax, qword ptr [rbp - 0x88]
0x4002bf:	mov	edx, 0x63
0x4002c4:	mov	esi, 0x41
0x4002c9:	mov	rdi, rax
0x4002cc:	call	0x500008
<Block for 0x400303, 128 bytes>
0x400303:	mov	byte ptr [rbp - 0x1d], 0
0x400307:	mov	rax, qword ptr [rbp - 0x90]
0x40030e:	mov	rcx, qword ptr [rax]
0x400311:	mov	rbx, qword ptr [rax + 8]
0x400315:	mov	qword ptr [rbp - 0x80], rcx
0x400319:	mov	qword ptr [rbp - 0x78], rbx
0x40031d:	mov	rcx, qword ptr [rax + 0x10]
0x400321:	mov	rbx, qword ptr [rax + 0x18]
0x400325:	mov	qword ptr [rbp - 0x70], rcx
0x400329:	mov	qword ptr [rbp - 0x68], rbx
0x40032d:	mov	rcx, qword ptr [rax + 0x20]
0x400331:	mov	rbx, qword ptr [rax + 0x28]
0x400335:	mov	qword ptr [rbp - 0x60], rcx
0x400339:	mov	qword ptr [rbp - 0x58], rbx
0x40033d:	mov	rcx, qword ptr [rax + 0x30]
0x400341:	mov	rbx, qword ptr [rax + 0x38]
0x400345:	mov	qword ptr [rbp - 0x50], rcx
0x400349:	mov	qword ptr [rbp - 0x48], rbx
0x40034d:	mov	rcx, qword ptr [rax + 0x40]
0x400351:	mov	rbx, qword ptr [rax + 0x48]
0x400355:	mov	qword ptr [rbp - 0x40], rcx
0x400359:	mov	qword ptr [rbp - 0x38], rbx
0x40035d:	mov	rcx, qword ptr [rax + 0x50]
0x400361:	mov	rbx, qword ptr [rax + 0x58]
0x400365:	mov	qword ptr [rbp - 0x30], rcx
0x400369:	mov	qword ptr [rbp - 0x28], rbx
0x40036d:	mov	eax, dword ptr [rax + 0x60]
0x400370:	mov	dword ptr [rbp - 0x20], eax
0x400373:	mov	byte ptr [rbp - 0x1d], 0
0x400377:	lea	rax, [rbp - 0x80]
0x40037b:	mov	rdi, rax
0x40037e:	call	0x500010
<Block for 0x4002d1, 50 bytes>
0x4002d1:	mov	rax, qword ptr [rbp - 0x88]
0x4002d8:	add	rax, 0x63
0x4002dc:	mov	byte ptr [rax], 0
0x4002df:	mov	rax, qword ptr [rbp - 0x88]
0x4002e6:	mov	qword ptr [rbp - 0x90], rax
0x4002ed:	lea	rax, [rbp - 0x80]
0x4002f1:	mov	edx, 0x63
0x4002f6:	mov	esi, 0x43
0x4002fb:	mov	rdi, rax
0x4002fe:	call	0x500008
<Block for 0x400383, 16 bytes>
0x400383:	nop	
0x400384:	mov	rax, qword ptr [rbp - 0x18]
0x400388:	xor	rax, qword ptr fs:[0x28]
0x400391:	je	0x400398
<Block for 0x400398, 10 bytes>
0x400398:	add	rsp, 0x88
0x40039f:	pop	rbx
0x4003a0:	pop	rbp
0x4003a1:	ret	
<Block for 0x400393, 5 bytes>
0x400393:	call	0x500018
