<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], rdi
0x400010:	mov	qword ptr [rbp - 0x10], rsi
0x400014:	mov	rax, qword ptr [rbp - 8]
0x400018:	mov	rdx, qword ptr [rbp - 0x10]
0x40001c:	mov	qword ptr [rax], rdx
0x40001f:	mov	edi, 0x32
0x400024:	call	0x500000
<Block for 0x400029, 22 bytes>
0x400029:	mov	rdx, rax
0x40002c:	mov	rax, qword ptr [rbp - 8]
0x400030:	mov	qword ptr [rax], rdx
0x400033:	mov	rax, qword ptr [rbp - 8]
0x400037:	mov	rax, qword ptr [rax]
0x40003a:	test	rax, rax
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 25 bytes>
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	mov	rax, qword ptr [rax]
0x400050:	mov	edx, 0x31
0x400055:	mov	esi, 0x41
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500010
<Block for 0x400062, 17 bytes>
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	mov	rax, qword ptr [rax]
0x400069:	add	rax, 0x31
0x40006d:	mov	byte ptr [rax], 0
0x400070:	nop	
0x400071:	leave	
0x400072:	ret	
