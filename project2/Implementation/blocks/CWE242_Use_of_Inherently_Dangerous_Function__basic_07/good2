<Block for 0x400115, 38 bytes>
0x400115:	endbr64	
0x400119:	push	rbp
0x40011a:	mov	rbp, rsp
0x40011d:	sub	rsp, 0x20
0x400121:	mov	rax, qword ptr fs:[0x28]
0x40012a:	mov	qword ptr [rbp - 8], rax
0x40012e:	xor	eax, eax
0x400130:	mov	eax, dword ptr [rip + 0x86]
0x400136:	cmp	eax, 5
0x400139:	jne	0x400184
<Block for 0x40013b, 24 bytes>
0x40013b:	mov	rdx, qword ptr [rip + 0xffede]
0x400142:	lea	rax, [rbp - 0x12]
0x400146:	mov	esi, 0xa
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500028
<Block for 0x400184, 16 bytes>
0x400184:	nop	
0x400185:	mov	rax, qword ptr [rbp - 8]
0x400189:	xor	rax, qword ptr fs:[0x28]
0x400192:	je	0x400199
<Block for 0x400153, 11 bytes>
0x400153:	mov	qword ptr [rbp - 0x20], rax
0x400157:	cmp	qword ptr [rbp - 0x20], 0
0x40015c:	jne	0x400174
<Block for 0x400199, 2 bytes>
0x400199:	leave	
0x40019a:	ret	
<Block for 0x400194, 5 bytes>
0x400194:	call	0x500018
<Block for 0x40015e, 12 bytes>
0x40015e:	lea	rdi, [rip + 0x5b]
0x400165:	call	0x500008
<Block for 0x400174, 16 bytes>
0x400174:	mov	byte ptr [rbp - 9], 0
0x400178:	lea	rax, [rbp - 0x12]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500008
<Block for 0x40016a, 10 bytes>
0x40016a:	mov	edi, 1
0x40016f:	call	0x500010
