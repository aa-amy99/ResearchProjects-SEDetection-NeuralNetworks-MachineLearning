<Block for 0x400061, 21 bytes>
0x400061:	endbr64	
0x400065:	push	rbp
0x400066:	mov	rbp, rsp
0x400069:	sub	rsp, 0x20
0x40006d:	mov	dword ptr [rbp - 0x14], 0
0x400074:	jmp	0x4000c8
<Block for 0x4000c8, 6 bytes>
0x4000c8:	cmp	dword ptr [rbp - 0x14], 0
0x4000cc:	jle	0x400076
<Block for 0x400076, 10 bytes>
0x400076:	mov	edi, 4
0x40007b:	call	0x500000
<Block for 0x4000ce, 4 bytes>
0x4000ce:	nop	
0x4000cf:	nop	
0x4000d0:	leave	
0x4000d1:	ret	
<Block for 0x400080, 11 bytes>
0x400080:	mov	qword ptr [rbp - 8], rax
0x400084:	cmp	qword ptr [rbp - 8], 0
0x400089:	jne	0x400095
<Block for 0x40008b, 10 bytes>
0x40008b:	mov	edi, 0xffffffff
0x400090:	call	0x500008
<Block for 0x400095, 35 bytes>
0x400095:	mov	dword ptr [rbp - 0x10], 5
0x40009c:	mov	rax, qword ptr [rbp - 8]
0x4000a0:	mov	edx, dword ptr [rbp - 0x10]
0x4000a3:	mov	dword ptr [rax], edx
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	eax, dword ptr [rax]
0x4000ab:	mov	dword ptr [rbp - 0xc], eax
0x4000ae:	mov	eax, dword ptr [rbp - 0xc]
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500018
<Block for 0x4000b8, 12 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500010
<Block for 0x4000c4, 10 bytes>
0x4000c4:	add	dword ptr [rbp - 0x14], 1
0x4000c8:	cmp	dword ptr [rbp - 0x14], 0
0x4000cc:	jle	0x400076
