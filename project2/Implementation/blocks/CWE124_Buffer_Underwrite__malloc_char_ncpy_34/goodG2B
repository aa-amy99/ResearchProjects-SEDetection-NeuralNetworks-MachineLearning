<Block for 0x4000f1, 51 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	sub	rsp, 0x90
0x400100:	mov	rax, qword ptr fs:[0x28]
0x400109:	mov	qword ptr [rbp - 8], rax
0x40010d:	xor	eax, eax
0x40010f:	mov	qword ptr [rbp - 0x88], 0
0x40011a:	mov	edi, 0x64
0x40011f:	call	0x500000
<Block for 0x400124, 11 bytes>
0x400124:	mov	qword ptr [rbp - 0x80], rax
0x400128:	cmp	qword ptr [rbp - 0x80], 0
0x40012d:	jne	0x400139
<Block for 0x40012f, 10 bytes>
0x40012f:	mov	edi, 0xffffffff
0x400134:	call	0x500008
<Block for 0x400139, 22 bytes>
0x400139:	mov	rax, qword ptr [rbp - 0x80]
0x40013d:	mov	edx, 0x63
0x400142:	mov	esi, 0x41
0x400147:	mov	rdi, rax
0x40014a:	call	0x500010
<Block for 0x40014f, 69 bytes>
0x40014f:	mov	rax, qword ptr [rbp - 0x80]
0x400153:	add	rax, 0x63
0x400157:	mov	byte ptr [rax], 0
0x40015a:	mov	rax, qword ptr [rbp - 0x80]
0x40015e:	mov	qword ptr [rbp - 0x88], rax
0x400165:	mov	rax, qword ptr [rbp - 0x88]
0x40016c:	mov	qword ptr [rbp - 0x90], rax
0x400173:	mov	rax, qword ptr [rbp - 0x90]
0x40017a:	mov	qword ptr [rbp - 0x78], rax
0x40017e:	lea	rax, [rbp - 0x70]
0x400182:	mov	edx, 0x63
0x400187:	mov	esi, 0x43
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500010
<Block for 0x400194, 28 bytes>
0x400194:	mov	byte ptr [rbp - 0xd], 0
0x400198:	lea	rcx, [rbp - 0x70]
0x40019c:	mov	rax, qword ptr [rbp - 0x78]
0x4001a0:	mov	edx, 0x63
0x4001a5:	mov	rsi, rcx
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500018
<Block for 0x4001b0, 23 bytes>
0x4001b0:	mov	rax, qword ptr [rbp - 0x78]
0x4001b4:	add	rax, 0x63
0x4001b8:	mov	byte ptr [rax], 0
0x4001bb:	mov	rax, qword ptr [rbp - 0x78]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500020
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500028
