<Block for 0x400170, 98 bytes>
0x400170:	endbr64	
0x400174:	push	rbp
0x400175:	mov	rbp, rsp
0x400178:	sub	rsp, 0xa0
0x40017f:	mov	rax, qword ptr fs:[0x28]
0x400188:	mov	qword ptr [rbp - 8], rax
0x40018c:	xor	eax, eax
0x40018e:	lea	rax, [rbp - 0x98]
0x400195:	mov	qword ptr [rbp - 0x88], rax
0x40019c:	mov	eax, 0x10
0x4001a1:	sub	rax, 1
0x4001a5:	add	rax, 0x6c
0x4001a9:	mov	esi, 0x10
0x4001ae:	mov	edx, 0
0x4001b3:	div	rsi
0x4001b6:	imul	rax, rax, 0x10
0x4001ba:	mov	rdx, rax
0x4001bd:	and	rdx, 0xfffffffffffff000
0x4001c4:	mov	rcx, rsp
0x4001c7:	sub	rcx, rdx
0x4001ca:	mov	rdx, rcx
0x4001cd:	cmp	rsp, rdx
0x4001d0:	je	0x4001e4
<Block for 0x4001e4, 26 bytes>
0x4001e4:	mov	rdx, rax
0x4001e7:	and	edx, 0xfff
0x4001ed:	sub	rsp, rdx
0x4001f0:	mov	rdx, rax
0x4001f3:	and	edx, 0xfff
0x4001f9:	test	rdx, rdx
0x4001fc:	je	0x40020e
<Block for 0x4001d2, 18 bytes>
0x4001d2:	sub	rsp, 0x1000
0x4001d9:	or	qword ptr [rsp + 0xff8], 0
0x4001e2:	jmp	0x4001cd
<Block for 0x40020e, 41 bytes>
0x40020e:	mov	rax, rsp
0x400211:	add	rax, 0xf
0x400215:	shr	rax, 4
0x400219:	shl	rax, 4
0x40021d:	mov	qword ptr [rbp - 0x80], rax
0x400221:	mov	rax, qword ptr [rbp - 0x80]
0x400225:	mov	edx, 0x63
0x40022a:	mov	esi, 0x41
0x40022f:	mov	rdi, rax
0x400232:	call	0x500000
<Block for 0x4001fe, 57 bytes>
0x4001fe:	and	eax, 0xfff
0x400203:	sub	rax, 8
0x400207:	add	rax, rsp
0x40020a:	or	qword ptr [rax], 0
0x40020e:	mov	rax, rsp
0x400211:	add	rax, 0xf
0x400215:	shr	rax, 4
0x400219:	shl	rax, 4
0x40021d:	mov	qword ptr [rbp - 0x80], rax
0x400221:	mov	rax, qword ptr [rbp - 0x80]
0x400225:	mov	edx, 0x63
0x40022a:	mov	esi, 0x41
0x40022f:	mov	rdi, rax
0x400232:	call	0x500000
<Block for 0x4001cd, 5 bytes>
0x4001cd:	cmp	rsp, rdx
0x4001d0:	je	0x4001e4
<Block for 0x400237, 58 bytes>
0x400237:	mov	rax, qword ptr [rbp - 0x80]
0x40023b:	add	rax, 0x63
0x40023f:	mov	byte ptr [rax], 0
0x400242:	mov	rax, qword ptr [rbp - 0x80]
0x400246:	mov	qword ptr [rbp - 0x98], rax
0x40024d:	mov	rax, qword ptr [rbp - 0x88]
0x400254:	mov	rax, qword ptr [rax]
0x400257:	mov	qword ptr [rbp - 0x78], rax
0x40025b:	lea	rax, [rbp - 0x70]
0x40025f:	mov	edx, 0x63
0x400264:	mov	esi, 0x43
0x400269:	mov	rdi, rax
0x40026c:	call	0x500000
<Block for 0x400271, 25 bytes>
0x400271:	mov	byte ptr [rbp - 0xd], 0
0x400275:	mov	qword ptr [rbp - 0x90], 0
0x400280:	cmp	qword ptr [rbp - 0x90], 0x63
0x400288:	ja	0x4002b5
<Block for 0x40028a, 43 bytes>
0x40028a:	mov	rdx, qword ptr [rbp - 0x78]
0x40028e:	mov	rax, qword ptr [rbp - 0x90]
0x400295:	add	rax, rdx
0x400298:	movzx	eax, byte ptr [rax]
0x40029b:	lea	rcx, [rbp - 0x70]
0x40029f:	mov	rdx, qword ptr [rbp - 0x90]
0x4002a6:	add	rdx, rcx
0x4002a9:	mov	byte ptr [rdx], al
0x4002ab:	add	qword ptr [rbp - 0x90], 1
0x4002b3:	jmp	0x400280
<Block for 0x4002b5, 16 bytes>
0x4002b5:	mov	byte ptr [rbp - 0xd], 0
0x4002b9:	lea	rax, [rbp - 0x70]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x500008
<Block for 0x400280, 10 bytes>
0x400280:	cmp	qword ptr [rbp - 0x90], 0x63
0x400288:	ja	0x4002b5
<Block for 0x4002c5, 16 bytes>
0x4002c5:	nop	
0x4002c6:	mov	rax, qword ptr [rbp - 8]
0x4002ca:	xor	rax, qword ptr fs:[0x28]
0x4002d3:	je	0x4002da
<Block for 0x4002da, 2 bytes>
0x4002da:	leave	
0x4002db:	ret	
<Block for 0x4002d5, 5 bytes>
0x4002d5:	call	0x500010
