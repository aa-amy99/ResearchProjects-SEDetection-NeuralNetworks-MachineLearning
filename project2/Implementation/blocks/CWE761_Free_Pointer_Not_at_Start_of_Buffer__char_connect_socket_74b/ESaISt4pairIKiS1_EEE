<Block for 0x40008e, 57 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x30
0x40009a:	mov	qword ptr [rbp - 0x28], rdi
0x40009e:	mov	rax, qword ptr fs:[0x28]
0x4000a7:	mov	qword ptr [rbp - 8], rax
0x4000ab:	xor	eax, eax
0x4000ad:	mov	dword ptr [rbp - 0x1c], 2
0x4000b4:	lea	rdx, [rbp - 0x1c]
0x4000b8:	mov	rax, qword ptr [rbp - 0x28]
0x4000bc:	mov	rsi, rdx
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x400170
<Block for 0x4000c7, 27 bytes>
0x4000c7:	mov	rax, qword ptr [rax]
0x4000ca:	mov	qword ptr [rbp - 0x10], rax
0x4000ce:	mov	qword ptr [rbp - 0x18], 0
0x4000d6:	mov	rax, qword ptr [rbp - 0x10]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500018
<Block for 0x4000e2, 6 bytes>
0x4000e2:	cmp	qword ptr [rbp - 0x18], rax
0x4000e6:	jae	0x40010f
<Block for 0x4000e8, 18 bytes>
0x4000e8:	mov	rdx, qword ptr [rbp - 0x10]
0x4000ec:	mov	rax, qword ptr [rbp - 0x18]
0x4000f0:	add	rax, rdx
0x4000f3:	movzx	eax, byte ptr [rax]
0x4000f6:	cmp	al, 0x53
0x4000f8:	jne	0x400108
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x10]
0x400113:	mov	rdi, rax
0x400116:	call	0x500008
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x5d]
0x400101:	call	0x500000
<Block for 0x400108, 7 bytes>
0x400108:	add	qword ptr [rbp - 0x18], 1
0x40010d:	jmp	0x4000d6
<Block for 0x40011b, 16 bytes>
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x40010f
<Block for 0x4000d6, 12 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x10]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500018
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500010
