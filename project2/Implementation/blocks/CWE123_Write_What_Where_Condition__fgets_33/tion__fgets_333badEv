<Block for 0x400000, 107 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x40]
0x40001f:	mov	qword ptr [rbp - 0x48], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x30], rax
0x40002b:	lea	rax, [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x28], rax
0x400033:	mov	rax, qword ptr [rbp - 0x30]
0x400037:	mov	qword ptr [rbp - 0x40], rax
0x40003b:	mov	rax, qword ptr [rbp - 0x28]
0x40003f:	mov	qword ptr [rbp - 0x38], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x30], rax
0x40004b:	lea	rax, [rbp - 0x40]
0x40004f:	mov	qword ptr [rbp - 0x28], rax
0x400053:	mov	rdx, qword ptr [rip + 0xfffa6]
0x40005a:	lea	rax, [rbp - 0x40]
0x40005e:	mov	esi, 0x10
0x400063:	mov	rdi, rax
0x400066:	call	0x500008
<Block for 0x40006b, 10 bytes>
0x40006b:	test	rax, rax
0x40006e:	sete	al
0x400071:	test	al, al
0x400073:	je	0x40008b
<Block for 0x40008b, 92 bytes>
0x40008b:	mov	rax, qword ptr [rbp - 0x48]
0x40008f:	mov	rdx, qword ptr [rax + 8]
0x400093:	mov	rax, qword ptr [rax]
0x400096:	mov	qword ptr [rbp - 0x20], rax
0x40009a:	mov	qword ptr [rbp - 0x18], rdx
0x40009e:	mov	rax, qword ptr [rbp - 0x18]
0x4000a2:	mov	qword ptr [rip + 0x10f], rax
0x4000a9:	mov	rax, qword ptr [rbp - 0x20]
0x4000ad:	mov	qword ptr [rip + 0x10c], rax
0x4000b4:	mov	rax, qword ptr [rip + 0xfd]
0x4000bb:	mov	rdx, qword ptr [rip + 0xfe]
0x4000c2:	mov	qword ptr [rax], rdx
0x4000c5:	mov	rax, qword ptr [rip + 0xf4]
0x4000cc:	mov	rdx, qword ptr [rip + 0xe5]
0x4000d3:	mov	qword ptr [rax + 8], rdx
0x4000d7:	nop	
0x4000d8:	mov	rax, qword ptr [rbp - 8]
0x4000dc:	xor	rax, qword ptr fs:[0x28]
0x4000e5:	je	0x4000ec
<Block for 0x400075, 12 bytes>
0x400075:	lea	rdi, [rip + 0x14c]
0x40007c:	call	0x500010
<Block for 0x4000ec, 2 bytes>
0x4000ec:	leave	
0x4000ed:	ret	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	call	0x500020
<Block for 0x400081, 10 bytes>
0x400081:	mov	edi, 1
0x400086:	call	0x500018
