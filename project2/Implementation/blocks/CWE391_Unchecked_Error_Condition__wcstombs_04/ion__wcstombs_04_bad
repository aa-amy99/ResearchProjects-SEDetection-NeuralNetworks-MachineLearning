<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 1
0x400020:	test	eax, eax
0x400022:	je	0x400063
<Block for 0x400063, 16 bytes>
0x400063:	nop	
0x400064:	mov	rax, qword ptr [rbp - 8]
0x400068:	xor	rax, qword ptr fs:[0x28]
0x400071:	je	0x400078
<Block for 0x400024, 36 bytes>
0x400024:	mov	qword ptr [rbp - 0x78], 0
0x40002c:	mov	byte ptr [rbp - 0x70], 0
0x400030:	lea	rax, [rbp - 0x70]
0x400034:	mov	edx, 0x64
0x400039:	lea	rsi, [rip + 0x1c0]
0x400040:	mov	rdi, rax
0x400043:	call	0x500000
<Block for 0x400078, 2 bytes>
0x400078:	leave	
0x400079:	ret	
<Block for 0x400073, 5 bytes>
0x400073:	call	0x500018
<Block for 0x400048, 15 bytes>
0x400048:	mov	qword ptr [rbp - 0x78], rax
0x40004c:	mov	rax, qword ptr [rbp - 0x78]
0x400050:	mov	edi, eax
0x400052:	call	0x500008
<Block for 0x400057, 12 bytes>
0x400057:	lea	rax, [rbp - 0x70]
0x40005b:	mov	rdi, rax
0x40005e:	call	0x500010
