<Block for 0x40012f, 36 bytes>
0x40012f:	endbr64	
0x400133:	push	rbp
0x400134:	mov	rbp, rsp
0x400137:	add	rsp, -0x80
0x40013b:	mov	rax, qword ptr fs:[0x28]
0x400144:	mov	qword ptr [rbp - 8], rax
0x400148:	xor	eax, eax
0x40014a:	mov	eax, 1
0x40014f:	test	eax, eax
0x400151:	je	0x4001bf
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 8]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x4001d4
<Block for 0x400153, 17 bytes>
0x400153:	mov	qword ptr [rbp - 0x78], 0
0x40015b:	mov	byte ptr [rbp - 0x70], 0
0x40015f:	call	0x500020
<Block for 0x4001d4, 2 bytes>
0x4001d4:	leave	
0x4001d5:	ret	
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500018
<Block for 0x400164, 30 bytes>
0x400164:	mov	dword ptr [rax], 0
0x40016a:	lea	rax, [rbp - 0x70]
0x40016e:	mov	edx, 0x64
0x400173:	lea	rsi, [rip + 0x86]
0x40017a:	mov	rdi, rax
0x40017d:	call	0x500000
<Block for 0x400182, 9 bytes>
0x400182:	mov	qword ptr [rbp - 0x78], rax
0x400186:	call	0x500020
<Block for 0x40018b, 7 bytes>
0x40018b:	mov	eax, dword ptr [rax]
0x40018d:	cmp	eax, 0x54
0x400190:	jne	0x4001a8
<Block for 0x400192, 12 bytes>
0x400192:	lea	rdi, [rip + 0x84]
0x400199:	call	0x500010
<Block for 0x4001a8, 11 bytes>
0x4001a8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ac:	mov	edi, eax
0x4001ae:	call	0x500008
<Block for 0x40019e, 10 bytes>
0x40019e:	mov	edi, 1
0x4001a3:	call	0x500028
<Block for 0x4001b3, 12 bytes>
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500010
