<Block for 0x40007a, 36 bytes>
0x40007a:	endbr64	
0x40007e:	push	rbp
0x40007f:	mov	rbp, rsp
0x400082:	add	rsp, -0x80
0x400086:	mov	rax, qword ptr fs:[0x28]
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	xor	eax, eax
0x400095:	mov	eax, 0
0x40009a:	test	eax, eax
0x40009c:	je	0x4000ac
<Block for 0x4000ac, 17 bytes>
0x4000ac:	mov	qword ptr [rbp - 0x78], 0
0x4000b4:	mov	byte ptr [rbp - 0x70], 0
0x4000b8:	call	0x500020
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0x163]
0x4000a5:	call	0x500010
<Block for 0x4000bd, 30 bytes>
0x4000bd:	mov	dword ptr [rax], 0
0x4000c3:	lea	rax, [rbp - 0x70]
0x4000c7:	mov	edx, 0x64
0x4000cc:	lea	rsi, [rip + 0x12d]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500000
<Block for 0x4000aa, 2 bytes>
0x4000aa:	jmp	0x400118
<Block for 0x4000db, 9 bytes>
0x4000db:	mov	qword ptr [rbp - 0x78], rax
0x4000df:	call	0x500020
<Block for 0x400118, 16 bytes>
0x400118:	nop	
0x400119:	mov	rax, qword ptr [rbp - 8]
0x40011d:	xor	rax, qword ptr fs:[0x28]
0x400126:	je	0x40012d
<Block for 0x4000e4, 7 bytes>
0x4000e4:	mov	eax, dword ptr [rax]
0x4000e6:	cmp	eax, 0x54
0x4000e9:	jne	0x400101
<Block for 0x40012d, 2 bytes>
0x40012d:	leave	
0x40012e:	ret	
<Block for 0x400128, 5 bytes>
0x400128:	call	0x500018
<Block for 0x4000eb, 12 bytes>
0x4000eb:	lea	rdi, [rip + 0x12b]
0x4000f2:	call	0x500010
<Block for 0x400101, 11 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0x78]
0x400105:	mov	edi, eax
0x400107:	call	0x500008
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	edi, 1
0x4000fc:	call	0x500028
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rax, [rbp - 0x70]
0x400110:	mov	rdi, rax
0x400113:	call	0x500010
