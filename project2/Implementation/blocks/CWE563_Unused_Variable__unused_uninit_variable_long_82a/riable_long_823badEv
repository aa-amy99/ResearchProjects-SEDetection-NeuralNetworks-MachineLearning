<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	edi, 8
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	rbx, rax
0x40001a:	mov	rdi, rbx
0x40001d:	call	0x4000ea
<Block for 0x400022, 30 bytes>
0x400022:	mov	qword ptr [rbp - 0x20], rbx
0x400026:	mov	rax, qword ptr [rbp - 0x20]
0x40002a:	mov	rax, qword ptr [rax]
0x40002d:	mov	rcx, qword ptr [rax]
0x400030:	mov	rdx, qword ptr [rbp - 0x18]
0x400034:	mov	rax, qword ptr [rbp - 0x20]
0x400038:	mov	rsi, rdx
0x40003b:	mov	rdi, rax
0x40003e:	call	rcx
<Block for 0x400040, 9 bytes>
0x400040:	mov	rax, qword ptr [rbp - 0x20]
0x400044:	test	rax, rax
0x400047:	je	0x400056
<Block for 0x400056, 8 bytes>
0x400056:	nop	
0x400057:	add	rsp, 0x18
0x40005b:	pop	rbx
0x40005c:	pop	rbp
0x40005d:	ret	
<Block for 0x400049, 13 bytes>
0x400049:	mov	esi, 8
0x40004e:	mov	rdi, rax
0x400051:	call	0x500008
