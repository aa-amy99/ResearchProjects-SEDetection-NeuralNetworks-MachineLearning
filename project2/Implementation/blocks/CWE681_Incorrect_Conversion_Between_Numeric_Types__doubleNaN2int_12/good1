<Block for 0x400146, 40 bytes>
0x400146:	endbr64	
0x40014a:	push	rbp
0x40014b:	mov	rbp, rsp
0x40014e:	sub	rsp, 0x120
0x400155:	mov	rax, qword ptr fs:[0x28]
0x40015e:	mov	qword ptr [rbp - 8], rax
0x400162:	xor	eax, eax
0x400164:	mov	eax, 0
0x400169:	call	0x500000
<Block for 0x40016e, 8 bytes>
0x40016e:	test	eax, eax
0x400170:	je	0x40020b
<Block for 0x40020b, 39 bytes>
0x40020b:	pxor	xmm0, xmm0
0x40020f:	movsd	qword ptr [rbp - 0x118], xmm0
0x400217:	mov	rdx, qword ptr [rip + 0xffdea]
0x40021e:	lea	rax, [rbp - 0x110]
0x400225:	mov	esi, 0x100
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500010
<Block for 0x400176, 39 bytes>
0x400176:	pxor	xmm0, xmm0
0x40017a:	movsd	qword ptr [rbp - 0x120], xmm0
0x400182:	mov	rdx, qword ptr [rip + 0xffe7f]
0x400189:	lea	rax, [rbp - 0x110]
0x400190:	mov	esi, 0x100
0x400195:	mov	rdi, rax
0x400198:	call	0x500010
<Block for 0x400232, 5 bytes>
0x400232:	test	rax, rax
0x400235:	je	0x400254
<Block for 0x40019d, 5 bytes>
0x40019d:	test	rax, rax
0x4001a0:	je	0x4001bf
<Block for 0x400254, 12 bytes>
0x400254:	lea	rdi, [rip + 0x69]
0x40025b:	call	0x500020
<Block for 0x400237, 15 bytes>
0x400237:	lea	rax, [rbp - 0x110]
0x40023e:	mov	rdi, rax
0x400241:	call	0x500018
<Block for 0x4001bf, 12 bytes>
0x4001bf:	lea	rdi, [rip + 0xfe]
0x4001c6:	call	0x500020
<Block for 0x4001a2, 15 bytes>
0x4001a2:	lea	rax, [rbp - 0x110]
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500018
<Block for 0x400260, 14 bytes>
0x400260:	pxor	xmm0, xmm0
0x400264:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x40026c:	jbe	0x40027c
<Block for 0x400246, 14 bytes>
0x400246:	movq	rax, xmm0
0x40024b:	mov	qword ptr [rbp - 0x118], rax
0x400252:	jmp	0x400260
<Block for 0x4001cb, 14 bytes>
0x4001cb:	pxor	xmm0, xmm0
0x4001cf:	comisd	xmm0, xmmword ptr [rbp - 0x120]
0x4001d7:	jbe	0x4001ea
<Block for 0x4001b1, 14 bytes>
0x4001b1:	movq	rax, xmm0
0x4001b6:	mov	qword ptr [rbp - 0x120], rax
0x4001bd:	jmp	0x4001cb
<Block for 0x40027c, 17 bytes>
0x40027c:	mov	rax, qword ptr [rbp - 0x118]
0x400283:	movq	xmm0, rax
0x400288:	call	0x500028
<Block for 0x40026e, 12 bytes>
0x40026e:	lea	rdi, [rip + 0x5f]
0x400275:	call	0x500020
<Block for 0x4001ea, 17 bytes>
0x4001ea:	mov	rax, qword ptr [rbp - 0x120]
0x4001f1:	movq	xmm0, rax
0x4001f6:	call	0x500028
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rdi, [rip + 0xf4]
0x4001e0:	call	0x500020
<Block for 0x40028d, 11 bytes>
0x40028d:	cvttsd2si	eax, xmm0
0x400291:	mov	edi, eax
0x400293:	call	0x500030
<Block for 0x40027a, 2 bytes>
0x40027a:	jmp	0x400298
<Block for 0x4001fb, 11 bytes>
0x4001fb:	cvttsd2si	eax, xmm0
0x4001ff:	mov	edi, eax
0x400201:	call	0x500030
<Block for 0x4001e5, 5 bytes>
0x4001e5:	jmp	0x400298
<Block for 0x400298, 16 bytes>
0x400298:	nop	
0x400299:	mov	rax, qword ptr [rbp - 8]
0x40029d:	xor	rax, qword ptr fs:[0x28]
0x4002a6:	je	0x4002ad
<Block for 0x400206, 5 bytes>
0x400206:	jmp	0x400298
<Block for 0x4002ad, 2 bytes>
0x4002ad:	leave	
0x4002ae:	ret	
<Block for 0x4002a8, 5 bytes>
0x4002a8:	call	0x500038
