<Block for 0x400118, 59 bytes>
0x400118:	endbr64	
0x40011c:	push	rbp
0x40011d:	mov	rbp, rsp
0x400120:	sub	rsp, 0x90
0x400127:	mov	qword ptr [rbp - 0x88], rdi
0x40012e:	mov	rax, qword ptr fs:[0x28]
0x400137:	mov	qword ptr [rbp - 8], rax
0x40013b:	xor	eax, eax
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	edx, 0x63
0x400146:	mov	esi, 0x43
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500000
<Block for 0x400153, 16 bytes>
0x400153:	mov	byte ptr [rbp - 0xd], 0
0x400157:	lea	rax, [rbp - 0x70]
0x40015b:	mov	rdi, rax
0x40015e:	call	0x500008
<Block for 0x400163, 22 bytes>
0x400163:	mov	qword ptr [rbp - 0x78], rax
0x400167:	mov	qword ptr [rbp - 0x80], 0
0x40016f:	mov	rax, qword ptr [rbp - 0x80]
0x400173:	cmp	rax, qword ptr [rbp - 0x78]
0x400177:	jae	0x40019e
<Block for 0x400179, 37 bytes>
0x400179:	mov	rdx, qword ptr [rbp - 0x88]
0x400180:	mov	rax, qword ptr [rbp - 0x80]
0x400184:	add	rax, rdx
0x400187:	movzx	eax, byte ptr [rax]
0x40018a:	lea	rcx, [rbp - 0x70]
0x40018e:	mov	rdx, qword ptr [rbp - 0x80]
0x400192:	add	rdx, rcx
0x400195:	mov	byte ptr [rdx], al
0x400197:	add	qword ptr [rbp - 0x80], 1
0x40019c:	jmp	0x40016f
<Block for 0x40019e, 16 bytes>
0x40019e:	mov	byte ptr [rbp - 0xd], 0
0x4001a2:	lea	rax, [rbp - 0x70]
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500010
<Block for 0x40016f, 10 bytes>
0x40016f:	mov	rax, qword ptr [rbp - 0x80]
0x400173:	cmp	rax, qword ptr [rbp - 0x78]
0x400177:	jae	0x40019e
<Block for 0x4001ae, 10 bytes>
0x4001ae:	cmp	qword ptr [rbp - 0x88], 0
0x4001b6:	je	0x4001c7
<Block for 0x4001c7, 16 bytes>
0x4001c7:	nop	
0x4001c8:	mov	rax, qword ptr [rbp - 8]
0x4001cc:	xor	rax, qword ptr fs:[0x28]
0x4001d5:	je	0x4001dc
<Block for 0x4001b8, 15 bytes>
0x4001b8:	mov	rax, qword ptr [rbp - 0x88]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500018
<Block for 0x4001dc, 2 bytes>
0x4001dc:	leave	
0x4001dd:	ret	
<Block for 0x4001d7, 5 bytes>
0x4001d7:	call	0x500020
