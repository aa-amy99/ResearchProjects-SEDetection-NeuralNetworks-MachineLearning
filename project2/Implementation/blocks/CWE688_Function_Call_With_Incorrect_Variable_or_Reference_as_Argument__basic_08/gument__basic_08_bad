<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	add	rsp, -0x80
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 4 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x400075
<Block for 0x400075, 16 bytes>
0x400075:	nop	
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	xor	rax, qword ptr fs:[0x28]
0x400083:	je	0x40008a
<Block for 0x400047, 34 bytes>
0x400047:	mov	dword ptr [rbp - 0x74], 5
0x40004e:	mov	edx, dword ptr [rbp - 0x74]
0x400051:	lea	rax, [rbp - 0x70]
0x400055:	lea	rsi, [rip + 0x139]
0x40005c:	mov	rdi, rax
0x40005f:	mov	eax, 0
0x400064:	call	0x500000
<Block for 0x40008a, 2 bytes>
0x40008a:	leave	
0x40008b:	ret	
<Block for 0x400085, 5 bytes>
0x400085:	call	0x500010
<Block for 0x400069, 12 bytes>
0x400069:	lea	rax, [rbp - 0x70]
0x40006d:	mov	rdi, rax
0x400070:	call	0x500008
