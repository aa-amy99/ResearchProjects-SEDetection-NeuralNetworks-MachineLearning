<Block for 0x40008c, 37 bytes>
0x40008c:	endbr64	
0x400090:	push	rbp
0x400091:	mov	rbp, rsp
0x400094:	add	rsp, -0x80
0x400098:	mov	rax, qword ptr fs:[0x28]
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	xor	eax, eax
0x4000a7:	mov	eax, 0
0x4000ac:	call	0x40000f
<Block for 0x4000b1, 4 bytes>
0x4000b1:	test	eax, eax
0x4000b3:	je	0x4000c3
<Block for 0x4000c3, 34 bytes>
0x4000c3:	mov	dword ptr [rbp - 0x74], 5
0x4000ca:	mov	edx, dword ptr [rbp - 0x74]
0x4000cd:	lea	rax, [rbp - 0x70]
0x4000d1:	lea	rsi, [rip + 0xd5]
0x4000d8:	mov	rdi, rax
0x4000db:	mov	eax, 0
0x4000e0:	call	0x500000
<Block for 0x4000b5, 12 bytes>
0x4000b5:	lea	rdi, [rip + 0xdc]
0x4000bc:	call	0x500008
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rax, [rbp - 0x70]
0x4000e9:	mov	rdi, rax
0x4000ec:	call	0x500008
<Block for 0x4000c1, 2 bytes>
0x4000c1:	jmp	0x4000f1
<Block for 0x4000f1, 16 bytes>
0x4000f1:	nop	
0x4000f2:	mov	rax, qword ptr [rbp - 8]
0x4000f6:	xor	rax, qword ptr fs:[0x28]
0x4000ff:	je	0x400106
<Block for 0x400106, 2 bytes>
0x400106:	leave	
0x400107:	ret	
<Block for 0x400101, 5 bytes>
0x400101:	call	0x500010
