<Block for 0x400116, 44 bytes>
0x400116:	endbr64	
0x40011a:	push	rbp
0x40011b:	mov	rbp, rsp
0x40011e:	sub	rsp, 0x20
0x400122:	mov	rax, qword ptr fs:[0x28]
0x40012b:	mov	qword ptr [rbp - 8], rax
0x40012f:	xor	eax, eax
0x400131:	mov	dword ptr [rbp - 0x14], 5
0x400138:	mov	eax, 0
0x40013d:	call	0x40000f
<Block for 0x400142, 4 bytes>
0x400142:	test	eax, eax
0x400144:	je	0x400154
<Block for 0x400154, 18 bytes>
0x400154:	lea	rax, [rbp - 0x14]
0x400158:	mov	qword ptr [rbp - 0x10], rax
0x40015c:	mov	eax, 0
0x400161:	call	0x400000
<Block for 0x400146, 12 bytes>
0x400146:	lea	rdi, [rip + 0xde]
0x40014d:	call	0x500008
<Block for 0x400166, 4 bytes>
0x400166:	test	eax, eax
0x400168:	je	0x400177
<Block for 0x400152, 2 bytes>
0x400152:	jmp	0x40015c
<Block for 0x400177, 16 bytes>
0x400177:	nop	
0x400178:	mov	rax, qword ptr [rbp - 8]
0x40017c:	xor	rax, qword ptr fs:[0x28]
0x400185:	je	0x40018c
<Block for 0x40016a, 13 bytes>
0x40016a:	mov	rax, qword ptr [rbp - 0x10]
0x40016e:	mov	eax, dword ptr [rax]
0x400170:	mov	edi, eax
0x400172:	call	0x500000
<Block for 0x40015c, 10 bytes>
0x40015c:	mov	eax, 0
0x400161:	call	0x400000
<Block for 0x40018c, 2 bytes>
0x40018c:	leave	
0x40018d:	ret	
<Block for 0x400187, 5 bytes>
0x400187:	call	0x500010
