<Block for 0x400137, 27 bytes>
0x400137:	endbr64	
0x40013b:	push	rbp
0x40013c:	mov	rbp, rsp
0x40013f:	push	r13
0x400141:	push	r12
0x400143:	push	rbx
0x400144:	sub	rsp, 0x18
0x400148:	nop	
0x400149:	endbr64	
0x40014d:	call	0x500000
<Block for 0x400152, 12 bytes>
0x400152:	and	eax, 1
0x400155:	test	eax, eax
0x400157:	sete	al
0x40015a:	test	al, al
0x40015c:	je	0x400193
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500000
<Block for 0x40015e, 10 bytes>
0x40015e:	mov	edi, 0x10
0x400163:	call	0x500008
<Block for 0x400198, 12 bytes>
0x400198:	and	eax, 1
0x40019b:	test	eax, eax
0x40019d:	sete	al
0x4001a0:	test	al, al
0x4001a2:	je	0x4001d9
<Block for 0x400168, 18 bytes>
0x400168:	mov	rbx, rax
0x40016b:	lea	rsi, [rip + 0x14d]
0x400172:	mov	rdi, rbx
0x400175:	call	0x500010
<Block for 0x4001d9, 12 bytes>
0x4001d9:	lea	rdi, [rip + 0xe9]
0x4001e0:	call	0x500058
<Block for 0x4001a4, 10 bytes>
0x4001a4:	mov	edi, 0x10
0x4001a9:	call	0x500008
<Block for 0x40017a, 25 bytes>
0x40017a:	mov	rax, qword ptr [rip + 0xffe9f]
0x400181:	mov	rdx, rax
0x400184:	lea	rsi, [rip + 0xffe9d]
0x40018b:	mov	rdi, rbx
0x40018e:	call	0x500030
<Block for 0x4001e5, 5 bytes>
0x4001e5:	jmp	0x4002a3
<Block for 0x4001ae, 18 bytes>
0x4001ae:	mov	rbx, rax
0x4001b1:	lea	rsi, [rip + 0x10c]
0x4001b8:	mov	rdi, rbx
0x4001bb:	call	0x500038
<Block for 0x4002a3, 11 bytes>
0x4002a3:	add	rsp, 0x18
0x4002a7:	pop	rbx
0x4002a8:	pop	r12
0x4002aa:	pop	r13
0x4002ac:	pop	rbp
0x4002ad:	ret	
<Block for 0x4001c0, 25 bytes>
0x4001c0:	mov	rax, qword ptr [rip + 0xffe81]
0x4001c7:	mov	rdx, rax
0x4001ca:	lea	rsi, [rip + 0xffe7f]
0x4001d1:	mov	rdi, rbx
0x4001d4:	call	0x500030
