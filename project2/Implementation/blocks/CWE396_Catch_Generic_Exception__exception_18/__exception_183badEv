<Block for 0x400000, 27 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r13
0x40000a:	push	r12
0x40000c:	push	rbx
0x40000d:	sub	rsp, 0x18
0x400011:	nop	
0x400012:	endbr64	
0x400016:	call	0x500000
<Block for 0x40001b, 12 bytes>
0x40001b:	and	eax, 1
0x40001e:	test	eax, eax
0x400020:	sete	al
0x400023:	test	al, al
0x400025:	je	0x40005c
<Block for 0x40005c, 5 bytes>
0x40005c:	call	0x500000
<Block for 0x400027, 10 bytes>
0x400027:	mov	edi, 0x10
0x40002c:	call	0x500008
<Block for 0x400061, 12 bytes>
0x400061:	and	eax, 1
0x400064:	test	eax, eax
0x400066:	sete	al
0x400069:	test	al, al
0x40006b:	je	0x4000a2
<Block for 0x400031, 18 bytes>
0x400031:	mov	rbx, rax
0x400034:	lea	rsi, [rip + 0x284]
0x40003b:	mov	rdi, rbx
0x40003e:	call	0x500010
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rdi, [rip + 0x220]
0x4000a9:	call	0x500058
<Block for 0x40006d, 10 bytes>
0x40006d:	mov	edi, 0x10
0x400072:	call	0x500008
<Block for 0x400043, 25 bytes>
0x400043:	mov	rax, qword ptr [rip + 0xfffd6]
0x40004a:	mov	rdx, rax
0x40004d:	lea	rsi, [rip + 0xfffd4]
0x400054:	mov	rdi, rbx
0x400057:	call	0x500030
<Block for 0x4000ae, 2 bytes>
0x4000ae:	jmp	0x40012c
<Block for 0x400077, 18 bytes>
0x400077:	mov	rbx, rax
0x40007a:	lea	rsi, [rip + 0x243]
0x400081:	mov	rdi, rbx
0x400084:	call	0x500038
<Block for 0x40012c, 11 bytes>
0x40012c:	add	rsp, 0x18
0x400130:	pop	rbx
0x400131:	pop	r12
0x400133:	pop	r13
0x400135:	pop	rbp
0x400136:	ret	
<Block for 0x400089, 25 bytes>
0x400089:	mov	rax, qword ptr [rip + 0xfffb8]
0x400090:	mov	rdx, rax
0x400093:	lea	rsi, [rip + 0xfffb6]
0x40009a:	mov	rdi, rbx
0x40009d:	call	0x500030
