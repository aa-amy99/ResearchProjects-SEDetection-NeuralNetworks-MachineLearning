<Block for 0x400000, 61 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400022:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400029:	mov	edx, 6
0x40002e:	mov	esi, 1
0x400033:	mov	edi, 2
0x400038:	call	0x500000
<Block for 0x40003d, 13 bytes>
0x40003d:	mov	dword ptr [rbp - 0x50], eax
0x400040:	cmp	dword ptr [rbp - 0x50], -1
0x400044:	je	0x4000e5
<Block for 0x4000e5, 3 bytes>
0x4000e5:	nop	
0x4000e6:	jmp	0x4000e9
<Block for 0x40004a, 22 bytes>
0x40004a:	lea	rax, [rbp - 0x30]
0x40004e:	mov	edx, 0x10
0x400053:	mov	esi, 0
0x400058:	mov	rdi, rax
0x40005b:	call	0x500008
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x50], -1
0x4000ed:	je	0x4000f9
<Block for 0x400060, 18 bytes>
0x400060:	mov	word ptr [rbp - 0x30], 2
0x400066:	lea	rdi, [rip + 0x245]
0x40006d:	call	0x500010
<Block for 0x4000f9, 26 bytes>
0x4000f9:	nop	
0x4000fa:	mov	eax, dword ptr [rbp - 0x54]
0x4000fd:	cdqe	
0x4000ff:	shl	rax, 2
0x400103:	mov	qword ptr [rbp - 0x40], rax
0x400107:	mov	rax, qword ptr [rbp - 0x40]
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500040
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x50]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500038
<Block for 0x400072, 13 bytes>
0x400072:	mov	dword ptr [rbp - 0x2c], eax
0x400075:	mov	edi, 0x6987
0x40007a:	call	0x500018
<Block for 0x400113, 23 bytes>
0x400113:	mov	qword ptr [rbp - 0x38], rax
0x400117:	mov	qword ptr [rbp - 0x48], 0
0x40011f:	mov	eax, dword ptr [rbp - 0x54]
0x400122:	cdqe	
0x400124:	cmp	qword ptr [rbp - 0x48], rax
0x400128:	jae	0x40014a
<Block for 0x40007f, 26 bytes>
0x40007f:	mov	word ptr [rbp - 0x2e], ax
0x400083:	lea	rcx, [rbp - 0x30]
0x400087:	mov	eax, dword ptr [rbp - 0x50]
0x40008a:	mov	edx, 0x10
0x40008f:	mov	rsi, rcx
0x400092:	mov	edi, eax
0x400094:	call	0x500020
<Block for 0x40012a, 32 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x48]
0x40012e:	lea	rdx, [rax*4]
0x400136:	mov	rax, qword ptr [rbp - 0x38]
0x40013a:	add	rax, rdx
0x40013d:	mov	dword ptr [rax], 0
0x400143:	add	qword ptr [rbp - 0x48], 1
0x400148:	jmp	0x40011f
<Block for 0x40014a, 13 bytes>
0x40014a:	mov	rax, qword ptr [rbp - 0x38]
0x40014e:	mov	eax, dword ptr [rax]
0x400150:	mov	edi, eax
0x400152:	call	0x500048
<Block for 0x400099, 10 bytes>
0x400099:	cmp	eax, -1
0x40009c:	sete	al
0x40009f:	test	al, al
0x4000a1:	jne	0x4000e8
<Block for 0x40011f, 11 bytes>
0x40011f:	mov	eax, dword ptr [rbp - 0x54]
0x400122:	cdqe	
0x400124:	cmp	qword ptr [rbp - 0x48], rax
0x400128:	jae	0x40014a
<Block for 0x400157, 7 bytes>
0x400157:	cmp	qword ptr [rbp - 0x38], 0
0x40015c:	je	0x40016a
<Block for 0x4000a3, 24 bytes>
0x4000a3:	lea	rsi, [rbp - 0x16]
0x4000a7:	mov	eax, dword ptr [rbp - 0x50]
0x4000aa:	mov	ecx, 0
0x4000af:	mov	edx, 0xd
0x4000b4:	mov	edi, eax
0x4000b6:	call	0x500028
<Block for 0x4000e8, 1 bytes>
0x4000e8:	nop	
<Block for 0x40016a, 16 bytes>
0x40016a:	nop	
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	xor	rax, qword ptr fs:[0x28]
0x400178:	je	0x40017f
<Block for 0x40015e, 12 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0x38]
0x400162:	mov	rdi, rax
0x400165:	call	0x500050
<Block for 0x4000bb, 9 bytes>
0x4000bb:	mov	dword ptr [rbp - 0x4c], eax
0x4000be:	cmp	dword ptr [rbp - 0x4c], -1
0x4000c2:	je	0x4000e9
<Block for 0x40017f, 2 bytes>
0x40017f:	leave	
0x400180:	ret	
<Block for 0x40017a, 5 bytes>
0x40017a:	call	0x500058
<Block for 0x4000c4, 6 bytes>
0x4000c4:	cmp	dword ptr [rbp - 0x4c], 0
0x4000c8:	je	0x4000e9
<Block for 0x4000ca, 22 bytes>
0x4000ca:	mov	eax, dword ptr [rbp - 0x4c]
0x4000cd:	cdqe	
0x4000cf:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000d4:	lea	rax, [rbp - 0x16]
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500030
<Block for 0x4000e0, 5 bytes>
0x4000e0:	mov	dword ptr [rbp - 0x54], eax
0x4000e3:	jmp	0x4000e9
