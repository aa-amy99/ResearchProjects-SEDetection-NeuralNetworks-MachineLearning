<Block for 0x4000d6, 22 bytes>
0x4000d6:	endbr64	
0x4000da:	push	rbp
0x4000db:	mov	rbp, rsp
0x4000de:	sub	rsp, 0x10
0x4000e2:	mov	eax, 0
0x4000e7:	call	0x500000
<Block for 0x4000ec, 4 bytes>
0x4000ec:	test	eax, eax
0x4000ee:	je	0x40013e
<Block for 0x40013e, 3 bytes>
0x40013e:	nop	
0x40013f:	leave	
0x400140:	ret	
<Block for 0x4000f0, 10 bytes>
0x4000f0:	mov	edi, 1
0x4000f5:	call	0x500008
<Block for 0x4000fa, 11 bytes>
0x4000fa:	mov	qword ptr [rbp - 8], rax
0x4000fe:	cmp	qword ptr [rbp - 8], 0
0x400103:	jne	0x40010f
<Block for 0x400105, 10 bytes>
0x400105:	mov	edi, 0xffffffff
0x40010a:	call	0x500010
<Block for 0x40010f, 35 bytes>
0x40010f:	mov	byte ptr [rbp - 0xa], 5
0x400113:	mov	rax, qword ptr [rbp - 8]
0x400117:	movzx	edx, byte ptr [rbp - 0xa]
0x40011b:	mov	byte ptr [rax], dl
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	movzx	eax, byte ptr [rax]
0x400124:	mov	byte ptr [rbp - 9], al
0x400127:	movsx	eax, byte ptr [rbp - 9]
0x40012b:	mov	edi, eax
0x40012d:	call	0x500020
<Block for 0x400132, 12 bytes>
0x400132:	mov	rax, qword ptr [rbp - 8]
0x400136:	mov	rdi, rax
0x400139:	call	0x500018
