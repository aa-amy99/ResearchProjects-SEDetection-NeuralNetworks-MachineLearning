<Block for 0x40005d, 22 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	sub	rsp, 0x10
0x400069:	mov	eax, 0
0x40006e:	call	0x500028
<Block for 0x400073, 4 bytes>
0x400073:	test	eax, eax
0x400075:	je	0x400085
<Block for 0x400085, 10 bytes>
0x400085:	mov	edi, 1
0x40008a:	call	0x500008
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0xe2]
0x40007e:	call	0x500030
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	cmp	qword ptr [rbp - 8], 0
0x400098:	jne	0x4000a4
<Block for 0x400083, 2 bytes>
0x400083:	jmp	0x4000d3
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 0xffffffff
0x40009f:	call	0x500010
<Block for 0x4000a4, 35 bytes>
0x4000a4:	mov	byte ptr [rbp - 0xa], 5
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	movzx	edx, byte ptr [rbp - 0xa]
0x4000b0:	mov	byte ptr [rax], dl
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	movzx	eax, byte ptr [rax]
0x4000b9:	mov	byte ptr [rbp - 9], al
0x4000bc:	movsx	eax, byte ptr [rbp - 9]
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500020
<Block for 0x4000d3, 3 bytes>
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
<Block for 0x4000c7, 12 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500018
