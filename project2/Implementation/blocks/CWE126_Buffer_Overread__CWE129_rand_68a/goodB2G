<Block for 0x4000a8, 25 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	push	rbx
0x4000b1:	sub	rsp, 0x18
0x4000b5:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000bc:	call	0x500000
<Block for 0x4000c1, 7 bytes>
0x4000c1:	and	eax, 1
0x4000c4:	test	eax, eax
0x4000c6:	je	0x4000e5
<Block for 0x4000e5, 5 bytes>
0x4000e5:	call	0x500000
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500000
<Block for 0x4000ea, 10 bytes>
0x4000ea:	shl	eax, 0x1e
0x4000ed:	mov	ebx, eax
0x4000ef:	call	0x500000
<Block for 0x4000cd, 10 bytes>
0x4000cd:	shl	eax, 0x1e
0x4000d0:	mov	ebx, eax
0x4000d2:	call	0x500000
<Block for 0x4000f4, 10 bytes>
0x4000f4:	shl	eax, 0xf
0x4000f7:	xor	ebx, eax
0x4000f9:	call	0x500000
<Block for 0x4000d7, 10 bytes>
0x4000d7:	shl	eax, 0xf
0x4000da:	xor	ebx, eax
0x4000dc:	call	0x500000
<Block for 0x4000fe, 26 bytes>
0x4000fe:	xor	eax, ebx
0x400100:	not	eax
0x400102:	mov	dword ptr [rbp - 0x14], eax
0x400105:	mov	eax, dword ptr [rbp - 0x14]
0x400108:	mov	dword ptr [rip - 0x10a], eax
0x40010e:	mov	eax, 0
0x400113:	call	0x500018
<Block for 0x4000e1, 4 bytes>
0x4000e1:	xor	eax, ebx
0x4000e3:	jmp	0x400102
<Block for 0x400118, 8 bytes>
0x400118:	nop	
0x400119:	add	rsp, 0x18
0x40011d:	pop	rbx
0x40011e:	pop	rbp
0x40011f:	ret	
<Block for 0x400102, 22 bytes>
0x400102:	mov	dword ptr [rbp - 0x14], eax
0x400105:	mov	eax, dword ptr [rbp - 0x14]
0x400108:	mov	dword ptr [rip - 0x10a], eax
0x40010e:	mov	eax, 0
0x400113:	call	0x500018
