<Block for 0x400000, 42 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0xfffdf]
0x400021:	cmp	eax, 5
0x400024:	jne	0x4000fc
<Block for 0x40002a, 198 bytes>
0x40002a:	mov	qword ptr [rbp - 0x70], 0
0x400032:	mov	qword ptr [rbp - 0x68], 0
0x40003a:	mov	qword ptr [rbp - 0x60], 0
0x400042:	mov	qword ptr [rbp - 0x58], 0
0x40004a:	mov	qword ptr [rbp - 0x50], 0
0x400052:	mov	qword ptr [rbp - 0x48], 0
0x40005a:	mov	qword ptr [rbp - 0x40], 0
0x400062:	mov	qword ptr [rbp - 0x38], 0
0x40006a:	mov	qword ptr [rbp - 0x30], 0
0x400072:	mov	qword ptr [rbp - 0x28], 0
0x40007a:	mov	qword ptr [rbp - 0x20], 0
0x400082:	mov	qword ptr [rbp - 0x18], 0
0x40008a:	mov	dword ptr [rbp - 0x10], 0
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	qword ptr [rbp - 0x78], rax
0x400099:	mov	rax, qword ptr [rbp - 0x78]
0x40009d:	movabs	rdx, 0x6867666564636261
0x4000a7:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4000b1:	mov	qword ptr [rax], rdx
0x4000b4:	mov	qword ptr [rax + 8], rcx
0x4000b8:	movabs	rsi, 0x7877767574737271
0x4000c2:	mov	qword ptr [rax + 0x10], rsi
0x4000c6:	mov	word ptr [rax + 0x18], 0x7a79
0x4000cc:	mov	byte ptr [rax + 0x1a], 0
0x4000d0:	mov	rax, qword ptr [rbp - 0x78]
0x4000d4:	lea	rcx, [rax + 4]
0x4000d8:	mov	rax, qword ptr [rbp - 0x78]
0x4000dc:	add	rax, 6
0x4000e0:	mov	edx, 0xa
0x4000e5:	mov	rsi, rcx
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500008
<Block for 0x4000fc, 16 bytes>
0x4000fc:	nop	
0x4000fd:	mov	rax, qword ptr [rbp - 8]
0x400101:	xor	rax, qword ptr fs:[0x28]
0x40010a:	je	0x400111
<Block for 0x4000f0, 12 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0x78]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500010
<Block for 0x400111, 2 bytes>
0x400111:	leave	
0x400112:	ret	
<Block for 0x40010c, 5 bytes>
0x40010c:	call	0x500018
