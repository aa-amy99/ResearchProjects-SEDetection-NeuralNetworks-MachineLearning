<Block for 0x400194, 37 bytes>
0x400194:	endbr64	
0x400198:	push	rbp
0x400199:	mov	rbp, rsp
0x40019c:	add	rsp, -0x80
0x4001a0:	mov	rax, qword ptr fs:[0x28]
0x4001a9:	mov	qword ptr [rbp - 8], rax
0x4001ad:	xor	eax, eax
0x4001af:	mov	eax, 5
0x4001b4:	cmp	eax, 5
0x4001b7:	je	0x4001ca
<Block for 0x4001ca, 134 bytes>
0x4001ca:	mov	qword ptr [rbp - 0x70], 0
0x4001d2:	mov	qword ptr [rbp - 0x68], 0
0x4001da:	mov	qword ptr [rbp - 0x60], 0
0x4001e2:	mov	qword ptr [rbp - 0x58], 0
0x4001ea:	mov	qword ptr [rbp - 0x50], 0
0x4001f2:	mov	qword ptr [rbp - 0x48], 0
0x4001fa:	mov	qword ptr [rbp - 0x40], 0
0x400202:	mov	qword ptr [rbp - 0x38], 0
0x40020a:	mov	qword ptr [rbp - 0x30], 0
0x400212:	mov	qword ptr [rbp - 0x28], 0
0x40021a:	mov	qword ptr [rbp - 0x20], 0
0x400222:	mov	qword ptr [rbp - 0x18], 0
0x40022a:	mov	dword ptr [rbp - 0x10], 0
0x400231:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400238:	mov	rdx, qword ptr [rip + 0xffdc1]
0x40023f:	lea	rax, [rbp - 0x70]
0x400243:	mov	esi, 0x64
0x400248:	mov	rdi, rax
0x40024b:	call	0x500008
<Block for 0x4001b9, 12 bytes>
0x4001b9:	lea	rdi, [rip + 0x2d3]
0x4001c0:	call	0x500010
<Block for 0x400250, 5 bytes>
0x400250:	test	rax, rax
0x400253:	jne	0x400265
<Block for 0x4001c5, 5 bytes>
0x4001c5:	jmp	0x4002e4
<Block for 0x400255, 12 bytes>
0x400255:	lea	rdi, [rip + 0x21c]
0x40025c:	call	0x500010
<Block for 0x400265, 11 bytes>
0x400265:	lea	rax, [rbp - 0x70]
0x400269:	movzx	eax, byte ptr [rax]
0x40026c:	test	al, al
0x40026e:	je	0x400285
<Block for 0x4002e4, 16 bytes>
0x4002e4:	nop	
0x4002e5:	mov	rax, qword ptr [rbp - 8]
0x4002e9:	xor	rax, qword ptr fs:[0x28]
0x4002f2:	je	0x4002f9
<Block for 0x400261, 15 bytes>
0x400261:	mov	byte ptr [rbp - 0x70], 0
0x400265:	lea	rax, [rbp - 0x70]
0x400269:	movzx	eax, byte ptr [rax]
0x40026c:	test	al, al
0x40026e:	je	0x400285
<Block for 0x400285, 22 bytes>
0x400285:	lea	rax, [rbp - 0x70]
0x400289:	mov	esi, 2
0x40028e:	mov	rdi, rax
0x400291:	mov	eax, 0
0x400296:	call	0x500030
<Block for 0x400270, 12 bytes>
0x400270:	lea	rax, [rbp - 0x70]
0x400274:	mov	rdi, rax
0x400277:	call	0x500018
<Block for 0x4002f9, 2 bytes>
0x4002f9:	leave	
0x4002fa:	ret	
<Block for 0x4002f4, 5 bytes>
0x4002f4:	call	0x500048
<Block for 0x40029b, 9 bytes>
0x40029b:	mov	dword ptr [rbp - 0x74], eax
0x40029e:	cmp	dword ptr [rbp - 0x74], -1
0x4002a2:	jne	0x4002ae
<Block for 0x40027c, 31 bytes>
0x40027c:	sub	rax, 1
0x400280:	mov	byte ptr [rbp + rax - 0x70], 0
0x400285:	lea	rax, [rbp - 0x70]
0x400289:	mov	esi, 2
0x40028e:	mov	rdi, rax
0x400291:	mov	eax, 0
0x400296:	call	0x500030
<Block for 0x4002a4, 10 bytes>
0x4002a4:	mov	edi, 1
0x4002a9:	call	0x500028
<Block for 0x4002ae, 22 bytes>
0x4002ae:	mov	eax, dword ptr [rbp - 0x74]
0x4002b1:	mov	edx, 0xc
0x4002b6:	lea	rsi, [rip + 0x1eb]
0x4002bd:	mov	edi, eax
0x4002bf:	call	0x500038
<Block for 0x4002c4, 6 bytes>
0x4002c4:	cmp	rax, -1
0x4002c8:	jne	0x4002d4
<Block for 0x4002ca, 10 bytes>
0x4002ca:	mov	edi, 1
0x4002cf:	call	0x500028
<Block for 0x4002d4, 6 bytes>
0x4002d4:	cmp	dword ptr [rbp - 0x74], -1
0x4002d8:	je	0x4002e4
<Block for 0x4002da, 10 bytes>
0x4002da:	mov	eax, dword ptr [rbp - 0x74]
0x4002dd:	mov	edi, eax
0x4002df:	call	0x500040
