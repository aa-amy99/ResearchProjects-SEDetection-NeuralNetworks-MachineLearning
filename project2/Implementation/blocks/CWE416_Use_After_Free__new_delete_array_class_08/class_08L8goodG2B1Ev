<Block for 0x400207, 25 bytes>
0x400207:	endbr64	
0x40020b:	push	rbp
0x40020c:	mov	rbp, rsp
0x40020f:	sub	rsp, 0x10
0x400213:	mov	qword ptr [rbp - 0x10], 0
0x40021b:	call	0x40000f
<Block for 0x400220, 9 bytes>
0x400220:	test	eax, eax
0x400222:	setne	al
0x400225:	test	al, al
0x400227:	je	0x400237
<Block for 0x400237, 10 bytes>
0x400237:	mov	edi, 0x320
0x40023c:	call	0x500000
<Block for 0x400229, 12 bytes>
0x400229:	lea	rdi, [rip + 0x132]
0x400230:	call	0x500018
<Block for 0x400241, 19 bytes>
0x400241:	mov	qword ptr [rbp - 0x10], rax
0x400245:	mov	qword ptr [rbp - 8], 0
0x40024d:	cmp	qword ptr [rbp - 8], 0x63
0x400252:	ja	0x40028e
<Block for 0x400235, 2 bytes>
0x400235:	jmp	0x40028e
<Block for 0x400254, 58 bytes>
0x400254:	mov	rax, qword ptr [rbp - 8]
0x400258:	lea	rdx, [rax*8]
0x400260:	mov	rax, qword ptr [rbp - 0x10]
0x400264:	add	rax, rdx
0x400267:	mov	dword ptr [rax], 1
0x40026d:	mov	rax, qword ptr [rbp - 8]
0x400271:	lea	rdx, [rax*8]
0x400279:	mov	rax, qword ptr [rbp - 0x10]
0x40027d:	add	rax, rdx
0x400280:	mov	dword ptr [rax + 4], 2
0x400287:	add	qword ptr [rbp - 8], 1
0x40028c:	jmp	0x40024d
<Block for 0x40028e, 5 bytes>
0x40028e:	call	0x400000
<Block for 0x40024d, 7 bytes>
0x40024d:	cmp	qword ptr [rbp - 8], 0x63
0x400252:	ja	0x40028e
<Block for 0x400293, 9 bytes>
0x400293:	test	eax, eax
0x400295:	setne	al
0x400298:	test	al, al
0x40029a:	je	0x4002a9
<Block for 0x4002a9, 3 bytes>
0x4002a9:	nop	
0x4002aa:	leave	
0x4002ab:	ret	
<Block for 0x40029c, 13 bytes>
0x40029c:	mov	rax, qword ptr [rbp - 0x10]
0x4002a0:	mov	eax, dword ptr [rax]
0x4002a2:	mov	edi, eax
0x4002a4:	call	0x500010
