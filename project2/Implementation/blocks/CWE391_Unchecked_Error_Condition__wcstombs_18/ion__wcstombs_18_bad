<Block for 0x400000, 68 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	mov	qword ptr [rbp - 0x78], 0
0x400028:	mov	byte ptr [rbp - 0x70], 0
0x40002c:	lea	rax, [rbp - 0x70]
0x400030:	mov	edx, 0x64
0x400035:	lea	rsi, [rip + 0xf4]
0x40003c:	mov	rdi, rax
0x40003f:	call	0x500000
<Block for 0x400044, 15 bytes>
0x400044:	mov	qword ptr [rbp - 0x78], rax
0x400048:	mov	rax, qword ptr [rbp - 0x78]
0x40004c:	mov	edi, eax
0x40004e:	call	0x500008
<Block for 0x400053, 12 bytes>
0x400053:	lea	rax, [rbp - 0x70]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500010
<Block for 0x40005f, 16 bytes>
0x40005f:	nop	
0x400060:	mov	rax, qword ptr [rbp - 8]
0x400064:	xor	rax, qword ptr fs:[0x28]
0x40006d:	je	0x400074
<Block for 0x400074, 2 bytes>
0x400074:	leave	
0x400075:	ret	
<Block for 0x40006f, 5 bytes>
0x40006f:	call	0x500018
