<Block for 0x400193, 40 bytes>
0x400193:	endbr64	
0x400197:	push	rbp
0x400198:	mov	rbp, rsp
0x40019b:	push	rbx
0x40019c:	sub	rsp, 0x58
0x4001a0:	mov	rax, qword ptr fs:[0x28]
0x4001a9:	mov	qword ptr [rbp - 0x18], rax
0x4001ad:	xor	eax, eax
0x4001af:	lea	rax, [rbp - 0x50]
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x400390
<Block for 0x4001bb, 26 bytes>
0x4001bb:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x4001c2:	mov	dword ptr [rbp - 0x5c], 6
0x4001c9:	lea	rax, [rbp - 0x50]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x400522
<Block for 0x4001d5, 23 bytes>
0x4001d5:	mov	qword ptr [rbp - 0x58], rax
0x4001d9:	lea	rdx, [rbp - 0x58]
0x4001dd:	lea	rax, [rbp - 0x30]
0x4001e1:	mov	rsi, rdx
0x4001e4:	mov	rdi, rax
0x4001e7:	call	0x400572
<Block for 0x4001ec, 28 bytes>
0x4001ec:	lea	rdx, [rbp - 0x5c]
0x4001f0:	mov	rsi, qword ptr [rbp - 0x30]
0x4001f4:	lea	rax, [rbp - 0x50]
0x4001f8:	mov	rcx, rdx
0x4001fb:	mov	edx, 1
0x400200:	mov	rdi, rax
0x400203:	call	0x4005a0
<Block for 0x400208, 12 bytes>
0x400208:	lea	rax, [rbp - 0x50]
0x40020c:	mov	rdi, rax
0x40020f:	call	0x400522
<Block for 0x400214, 23 bytes>
0x400214:	mov	qword ptr [rbp - 0x58], rax
0x400218:	lea	rdx, [rbp - 0x58]
0x40021c:	lea	rax, [rbp - 0x30]
0x400220:	mov	rsi, rdx
0x400223:	mov	rdi, rax
0x400226:	call	0x400572
<Block for 0x40022b, 28 bytes>
0x40022b:	lea	rdx, [rbp - 0x5c]
0x40022f:	mov	rsi, qword ptr [rbp - 0x30]
0x400233:	lea	rax, [rbp - 0x50]
0x400237:	mov	rcx, rdx
0x40023a:	mov	edx, 1
0x40023f:	mov	rdi, rax
0x400242:	call	0x4005a0
<Block for 0x400247, 12 bytes>
0x400247:	lea	rax, [rbp - 0x50]
0x40024b:	mov	rdi, rax
0x40024e:	call	0x400522
<Block for 0x400253, 23 bytes>
0x400253:	mov	qword ptr [rbp - 0x58], rax
0x400257:	lea	rdx, [rbp - 0x58]
0x40025b:	lea	rax, [rbp - 0x30]
0x40025f:	mov	rsi, rdx
0x400262:	mov	rdi, rax
0x400265:	call	0x400572
<Block for 0x40026a, 28 bytes>
0x40026a:	lea	rdx, [rbp - 0x5c]
0x40026e:	mov	rsi, qword ptr [rbp - 0x30]
0x400272:	lea	rax, [rbp - 0x50]
0x400276:	mov	rcx, rdx
0x400279:	mov	edx, 1
0x40027e:	mov	rdi, rax
0x400281:	call	0x4005a0
<Block for 0x400286, 19 bytes>
0x400286:	lea	rdx, [rbp - 0x50]
0x40028a:	lea	rax, [rbp - 0x30]
0x40028e:	mov	rsi, rdx
0x400291:	mov	rdi, rax
0x400294:	call	0x400666
<Block for 0x400299, 12 bytes>
0x400299:	lea	rax, [rbp - 0x30]
0x40029d:	mov	rdi, rax
0x4002a0:	call	0x500028
<Block for 0x4002a5, 12 bytes>
0x4002a5:	lea	rax, [rbp - 0x30]
0x4002a9:	mov	rdi, rax
0x4002ac:	call	0x4004da
<Block for 0x4002b1, 12 bytes>
0x4002b1:	lea	rax, [rbp - 0x50]
0x4002b5:	mov	rdi, rax
0x4002b8:	call	0x4004da
<Block for 0x4002bd, 16 bytes>
0x4002bd:	nop	
0x4002be:	mov	rax, qword ptr [rbp - 0x18]
0x4002c2:	xor	rax, qword ptr fs:[0x28]
0x4002cb:	je	0x400307
<Block for 0x400307, 7 bytes>
0x400307:	add	rsp, 0x58
0x40030b:	pop	rbx
0x40030c:	pop	rbp
0x40030d:	ret	
<Block for 0x4002cd, 2 bytes>
0x4002cd:	jmp	0x400302
<Block for 0x400302, 5 bytes>
0x400302:	call	0x500020
