<Block for 0x400213, 76 bytes>
0x400213:	endbr64	
0x400217:	push	rbp
0x400218:	mov	rbp, rsp
0x40021b:	sub	rsp, 0x50
0x40021f:	mov	dword ptr [rbp - 0x44], edi
0x400222:	mov	rax, qword ptr fs:[0x28]
0x40022b:	mov	qword ptr [rbp - 8], rax
0x40022f:	xor	eax, eax
0x400231:	mov	qword ptr [rbp - 0x30], 0
0x400239:	mov	qword ptr [rbp - 0x28], 0
0x400241:	mov	qword ptr [rbp - 0x20], 0
0x400249:	mov	qword ptr [rbp - 0x18], 0
0x400251:	mov	qword ptr [rbp - 0x10], 0
0x400259:	cmp	dword ptr [rbp - 0x44], 0
0x40025d:	js	0x400297
<Block for 0x400297, 12 bytes>
0x400297:	lea	rdi, [rip + 0x10a]
0x40029e:	call	0x500008
<Block for 0x40025f, 6 bytes>
0x40025f:	cmp	dword ptr [rbp - 0x44], 9
0x400263:	jg	0x400297
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002b8
<Block for 0x400265, 22 bytes>
0x400265:	mov	eax, dword ptr [rbp - 0x44]
0x400268:	cdqe	
0x40026a:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400272:	mov	dword ptr [rbp - 0x34], 0
0x400279:	jmp	0x40028f
<Block for 0x4002b8, 2 bytes>
0x4002b8:	leave	
0x4002b9:	ret	
<Block for 0x4002b3, 5 bytes>
0x4002b3:	call	0x500010
<Block for 0x40028f, 6 bytes>
0x40028f:	cmp	dword ptr [rbp - 0x34], 9
0x400293:	jle	0x40027b
<Block for 0x40027b, 16 bytes>
0x40027b:	mov	eax, dword ptr [rbp - 0x34]
0x40027e:	cdqe	
0x400280:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400284:	mov	edi, eax
0x400286:	call	0x500000
<Block for 0x400295, 2 bytes>
0x400295:	jmp	0x4002a3
<Block for 0x40028b, 10 bytes>
0x40028b:	add	dword ptr [rbp - 0x34], 1
0x40028f:	cmp	dword ptr [rbp - 0x34], 9
0x400293:	jle	0x40027b
