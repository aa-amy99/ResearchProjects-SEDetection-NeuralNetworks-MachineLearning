<Block for 0x4000ab, 25 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	push	rbx
0x4000b4:	sub	rsp, 0x18
0x4000b8:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000bf:	call	0x500018
<Block for 0x4000c4, 7 bytes>
0x4000c4:	and	eax, 1
0x4000c7:	test	eax, eax
0x4000c9:	je	0x4000e8
<Block for 0x4000e8, 5 bytes>
0x4000e8:	call	0x500018
<Block for 0x4000cb, 5 bytes>
0x4000cb:	call	0x500018
<Block for 0x4000ed, 10 bytes>
0x4000ed:	shl	eax, 0x1e
0x4000f0:	mov	ebx, eax
0x4000f2:	call	0x500018
<Block for 0x4000d0, 10 bytes>
0x4000d0:	shl	eax, 0x1e
0x4000d3:	mov	ebx, eax
0x4000d5:	call	0x500018
<Block for 0x4000f7, 10 bytes>
0x4000f7:	shl	eax, 0xf
0x4000fa:	xor	ebx, eax
0x4000fc:	call	0x500018
<Block for 0x4000da, 10 bytes>
0x4000da:	shl	eax, 0xf
0x4000dd:	xor	ebx, eax
0x4000df:	call	0x500018
<Block for 0x400101, 27 bytes>
0x400101:	xor	eax, ebx
0x400103:	not	eax
0x400105:	mov	dword ptr [rbp - 0x14], eax
0x400108:	mov	dword ptr [rip + 0x37e], 1
0x400112:	mov	eax, dword ptr [rbp - 0x14]
0x400115:	mov	edi, eax
0x400117:	call	0x400000
<Block for 0x4000e4, 4 bytes>
0x4000e4:	xor	eax, ebx
0x4000e6:	jmp	0x400105
<Block for 0x40011c, 8 bytes>
0x40011c:	nop	
0x40011d:	add	rsp, 0x18
0x400121:	pop	rbx
0x400122:	pop	rbp
0x400123:	ret	
<Block for 0x400105, 23 bytes>
0x400105:	mov	dword ptr [rbp - 0x14], eax
0x400108:	mov	dword ptr [rip + 0x37e], 1
0x400112:	mov	eax, dword ptr [rbp - 0x14]
0x400115:	mov	edi, eax
0x400117:	call	0x400000
