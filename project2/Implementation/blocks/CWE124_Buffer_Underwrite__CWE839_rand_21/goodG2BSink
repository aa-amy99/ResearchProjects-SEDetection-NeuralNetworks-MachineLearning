<Block for 0x40038a, 40 bytes>
0x40038a:	endbr64	
0x40038e:	push	rbp
0x40038f:	mov	rbp, rsp
0x400392:	sub	rsp, 0x50
0x400396:	mov	dword ptr [rbp - 0x44], edi
0x400399:	mov	rax, qword ptr fs:[0x28]
0x4003a2:	mov	qword ptr [rbp - 8], rax
0x4003a6:	xor	eax, eax
0x4003a8:	mov	eax, dword ptr [rip + 0xee]
0x4003ae:	test	eax, eax
0x4003b0:	je	0x40041e
<Block for 0x40041e, 16 bytes>
0x40041e:	nop	
0x40041f:	mov	rax, qword ptr [rbp - 8]
0x400423:	xor	rax, qword ptr fs:[0x28]
0x40042c:	je	0x400433
<Block for 0x4003b2, 46 bytes>
0x4003b2:	mov	qword ptr [rbp - 0x30], 0
0x4003ba:	mov	qword ptr [rbp - 0x28], 0
0x4003c2:	mov	qword ptr [rbp - 0x20], 0
0x4003ca:	mov	qword ptr [rbp - 0x18], 0
0x4003d2:	mov	qword ptr [rbp - 0x10], 0
0x4003da:	cmp	dword ptr [rbp - 0x44], 9
0x4003de:	jg	0x400412
<Block for 0x400433, 2 bytes>
0x400433:	leave	
0x400434:	ret	
<Block for 0x40042e, 5 bytes>
0x40042e:	call	0x500010
<Block for 0x4003e0, 22 bytes>
0x4003e0:	mov	eax, dword ptr [rbp - 0x44]
0x4003e3:	cdqe	
0x4003e5:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4003ed:	mov	dword ptr [rbp - 0x34], 0
0x4003f4:	jmp	0x40040a
<Block for 0x400412, 12 bytes>
0x400412:	lea	rdi, [rip + 0x87]
0x400419:	call	0x500008
<Block for 0x40040a, 6 bytes>
0x40040a:	cmp	dword ptr [rbp - 0x34], 9
0x40040e:	jle	0x4003f6
<Block for 0x4003f6, 16 bytes>
0x4003f6:	mov	eax, dword ptr [rbp - 0x34]
0x4003f9:	cdqe	
0x4003fb:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003ff:	mov	edi, eax
0x400401:	call	0x500000
<Block for 0x400410, 2 bytes>
0x400410:	jmp	0x40041e
<Block for 0x400406, 10 bytes>
0x400406:	add	dword ptr [rbp - 0x34], 1
0x40040a:	cmp	dword ptr [rbp - 0x34], 9
0x40040e:	jle	0x4003f6
