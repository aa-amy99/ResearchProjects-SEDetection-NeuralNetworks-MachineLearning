<Block for 0x400311, 25 bytes>
0x400311:	endbr64	
0x400315:	push	rbp
0x400316:	mov	rbp, rsp
0x400319:	push	rbx
0x40031a:	sub	rsp, 0x18
0x40031e:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400325:	call	0x500018
<Block for 0x40032a, 7 bytes>
0x40032a:	and	eax, 1
0x40032d:	test	eax, eax
0x40032f:	je	0x40034e
<Block for 0x40034e, 5 bytes>
0x40034e:	call	0x500018
<Block for 0x400331, 5 bytes>
0x400331:	call	0x500018
<Block for 0x400353, 10 bytes>
0x400353:	shl	eax, 0x1e
0x400356:	mov	ebx, eax
0x400358:	call	0x500018
<Block for 0x400336, 10 bytes>
0x400336:	shl	eax, 0x1e
0x400339:	mov	ebx, eax
0x40033b:	call	0x500018
<Block for 0x40035d, 10 bytes>
0x40035d:	shl	eax, 0xf
0x400360:	xor	ebx, eax
0x400362:	call	0x500018
<Block for 0x400340, 10 bytes>
0x400340:	shl	eax, 0xf
0x400343:	xor	ebx, eax
0x400345:	call	0x500018
<Block for 0x400367, 27 bytes>
0x400367:	xor	eax, ebx
0x400369:	not	eax
0x40036b:	mov	dword ptr [rbp - 0x14], eax
0x40036e:	mov	dword ptr [rip + 0x120], 1
0x400378:	mov	eax, dword ptr [rbp - 0x14]
0x40037b:	mov	edi, eax
0x40037d:	call	0x40025e
<Block for 0x40034a, 4 bytes>
0x40034a:	xor	eax, ebx
0x40034c:	jmp	0x40036b
<Block for 0x400382, 8 bytes>
0x400382:	nop	
0x400383:	add	rsp, 0x18
0x400387:	pop	rbx
0x400388:	pop	rbp
0x400389:	ret	
<Block for 0x40036b, 23 bytes>
0x40036b:	mov	dword ptr [rbp - 0x14], eax
0x40036e:	mov	dword ptr [rip + 0x120], 1
0x400378:	mov	eax, dword ptr [rbp - 0x14]
0x40037b:	mov	edi, eax
0x40037d:	call	0x40025e
