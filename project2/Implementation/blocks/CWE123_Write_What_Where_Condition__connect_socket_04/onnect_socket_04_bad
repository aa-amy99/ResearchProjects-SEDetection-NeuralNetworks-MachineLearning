<Block for 0x400000, 88 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	eax, 1
0x400050:	test	eax, eax
0x400052:	je	0x400101
<Block for 0x400101, 73 bytes>
0x400101:	mov	rax, qword ptr [rbp - 0x38]
0x400105:	mov	qword ptr [rip + 0x1b4], rax
0x40010c:	mov	rax, qword ptr [rbp - 0x40]
0x400110:	mov	qword ptr [rip + 0x1b1], rax
0x400117:	mov	rax, qword ptr [rip + 0x1a2]
0x40011e:	mov	rdx, qword ptr [rip + 0x1a3]
0x400125:	mov	qword ptr [rax], rdx
0x400128:	mov	rax, qword ptr [rip + 0x199]
0x40012f:	mov	rdx, qword ptr [rip + 0x18a]
0x400136:	mov	qword ptr [rax + 8], rdx
0x40013a:	nop	
0x40013b:	mov	rax, qword ptr [rbp - 8]
0x40013f:	xor	rax, qword ptr fs:[0x28]
0x400148:	je	0x40014f
<Block for 0x400058, 27 bytes>
0x400058:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40005f:	mov	edx, 6
0x400064:	mov	esi, 1
0x400069:	mov	edi, 2
0x40006e:	call	0x500000
<Block for 0x40014f, 2 bytes>
0x40014f:	leave	
0x400150:	ret	
<Block for 0x40014a, 5 bytes>
0x40014a:	call	0x500038
<Block for 0x400073, 9 bytes>
0x400073:	mov	dword ptr [rbp - 0x48], eax
0x400076:	cmp	dword ptr [rbp - 0x48], -1
0x40007a:	je	0x4000ed
<Block for 0x4000ed, 3 bytes>
0x4000ed:	nop	
0x4000ee:	jmp	0x4000f1
<Block for 0x40007c, 22 bytes>
0x40007c:	lea	rax, [rbp - 0x20]
0x400080:	mov	edx, 0x10
0x400085:	mov	esi, 0
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500008
<Block for 0x4000f1, 6 bytes>
0x4000f1:	cmp	dword ptr [rbp - 0x48], -1
0x4000f5:	je	0x400101
<Block for 0x400092, 18 bytes>
0x400092:	mov	word ptr [rbp - 0x20], 2
0x400098:	lea	rdi, [rip + 0x239]
0x40009f:	call	0x500010
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	eax, dword ptr [rbp - 0x48]
0x4000fa:	mov	edi, eax
0x4000fc:	call	0x500030
<Block for 0x4000a4, 13 bytes>
0x4000a4:	mov	dword ptr [rbp - 0x1c], eax
0x4000a7:	mov	edi, 0x6987
0x4000ac:	call	0x500018
<Block for 0x4000b1, 26 bytes>
0x4000b1:	mov	word ptr [rbp - 0x1e], ax
0x4000b5:	lea	rcx, [rbp - 0x20]
0x4000b9:	mov	eax, dword ptr [rbp - 0x48]
0x4000bc:	mov	edx, 0x10
0x4000c1:	mov	rsi, rcx
0x4000c4:	mov	edi, eax
0x4000c6:	call	0x500020
<Block for 0x4000cb, 5 bytes>
0x4000cb:	cmp	eax, -1
0x4000ce:	je	0x4000f0
<Block for 0x4000d0, 24 bytes>
0x4000d0:	lea	rsi, [rbp - 0x40]
0x4000d4:	mov	eax, dword ptr [rbp - 0x48]
0x4000d7:	mov	ecx, 0
0x4000dc:	mov	edx, 0x10
0x4000e1:	mov	edi, eax
0x4000e3:	call	0x500028
<Block for 0x4000f0, 1 bytes>
0x4000f0:	nop	
<Block for 0x4000e8, 5 bytes>
0x4000e8:	mov	dword ptr [rbp - 0x44], eax
0x4000eb:	jmp	0x4000f1
