<Block for 0x40008b, 30 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x10
0x400097:	mov	qword ptr [rbp - 8], 0
0x40009f:	mov	eax, 0
0x4000a4:	call	0x500000
<Block for 0x4000a9, 4 bytes>
0x4000a9:	test	eax, eax
0x4000ab:	je	0x4000f9
<Block for 0x4000f9, 10 bytes>
0x4000f9:	mov	eax, 0
0x4000fe:	call	0x500030
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 0x64
0x4000b2:	call	0x500008
<Block for 0x400103, 4 bytes>
0x400103:	test	eax, eax
0x400105:	je	0x400113
<Block for 0x4000b7, 11 bytes>
0x4000b7:	mov	qword ptr [rbp - 8], rax
0x4000bb:	cmp	qword ptr [rbp - 8], 0
0x4000c0:	jne	0x4000cc
<Block for 0x400113, 3 bytes>
0x400113:	nop	
0x400114:	leave	
0x400115:	ret	
<Block for 0x400107, 12 bytes>
0x400107:	lea	rdi, [rip + 0x1c2]
0x40010e:	call	0x500028
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500010
<Block for 0x4000cc, 22 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 8]
0x4000d0:	mov	edx, 0x63
0x4000d5:	mov	esi, 0x41
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500018
<Block for 0x4000e2, 23 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 8]
0x4000e6:	add	rax, 0x63
0x4000ea:	mov	byte ptr [rax], 0
0x4000ed:	mov	rax, qword ptr [rbp - 8]
0x4000f1:	mov	rdi, rax
0x4000f4:	call	0x500020
