<Block for 0x400236, 45 bytes>
0x400236:	endbr64	
0x40023a:	push	rbp
0x40023b:	mov	rbp, rsp
0x40023e:	push	rbx
0x40023f:	sub	rsp, 0x48
0x400243:	mov	rax, qword ptr fs:[0x28]
0x40024c:	mov	qword ptr [rbp - 0x18], rax
0x400250:	xor	eax, eax
0x400252:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400259:	mov	eax, 0
0x40025e:	call	0x500000
<Block for 0x400263, 4 bytes>
0x400263:	test	eax, eax
0x400265:	je	0x4002b0
<Block for 0x4002b0, 10 bytes>
0x4002b0:	mov	eax, 0
0x4002b5:	call	0x500000
<Block for 0x400267, 5 bytes>
0x400267:	call	0x500008
<Block for 0x4002ba, 4 bytes>
0x4002ba:	test	eax, eax
0x4002bc:	je	0x400332
<Block for 0x40026c, 7 bytes>
0x40026c:	and	eax, 1
0x40026f:	test	eax, eax
0x400271:	je	0x400290
<Block for 0x400332, 16 bytes>
0x400332:	nop	
0x400333:	mov	rax, qword ptr [rbp - 0x18]
0x400337:	xor	rax, qword ptr fs:[0x28]
0x400340:	je	0x400347
<Block for 0x4002be, 46 bytes>
0x4002be:	mov	qword ptr [rbp - 0x40], 0
0x4002c6:	mov	qword ptr [rbp - 0x38], 0
0x4002ce:	mov	qword ptr [rbp - 0x30], 0
0x4002d6:	mov	qword ptr [rbp - 0x28], 0
0x4002de:	mov	qword ptr [rbp - 0x20], 0
0x4002e6:	cmp	dword ptr [rbp - 0x48], 0
0x4002ea:	js	0x400324
<Block for 0x400290, 5 bytes>
0x400290:	call	0x500008
<Block for 0x400273, 5 bytes>
0x400273:	call	0x500008
<Block for 0x400347, 7 bytes>
0x400347:	add	rsp, 0x48
0x40034b:	pop	rbx
0x40034c:	pop	rbp
0x40034d:	ret	
<Block for 0x400342, 5 bytes>
0x400342:	call	0x500020
<Block for 0x400324, 12 bytes>
0x400324:	lea	rdi, [rip + 0x22d]
0x40032b:	call	0x500018
<Block for 0x4002ec, 6 bytes>
0x4002ec:	cmp	dword ptr [rbp - 0x48], 9
0x4002f0:	jg	0x400324
<Block for 0x400295, 10 bytes>
0x400295:	shl	eax, 0x1e
0x400298:	mov	ebx, eax
0x40029a:	call	0x500008
<Block for 0x400278, 10 bytes>
0x400278:	shl	eax, 0x1e
0x40027b:	mov	ebx, eax
0x40027d:	call	0x500008
<Block for 0x400330, 2 bytes>
0x400330:	jmp	0x400332
<Block for 0x4002f2, 22 bytes>
0x4002f2:	mov	eax, dword ptr [rbp - 0x48]
0x4002f5:	cdqe	
0x4002f7:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002ff:	mov	dword ptr [rbp - 0x44], 0
0x400306:	jmp	0x40031c
<Block for 0x40029f, 10 bytes>
0x40029f:	shl	eax, 0xf
0x4002a2:	xor	ebx, eax
0x4002a4:	call	0x500008
<Block for 0x400282, 10 bytes>
0x400282:	shl	eax, 0xf
0x400285:	xor	ebx, eax
0x400287:	call	0x500008
<Block for 0x40031c, 6 bytes>
0x40031c:	cmp	dword ptr [rbp - 0x44], 9
0x400320:	jle	0x400308
<Block for 0x4002a9, 17 bytes>
0x4002a9:	xor	eax, ebx
0x4002ab:	not	eax
0x4002ad:	mov	dword ptr [rbp - 0x48], eax
0x4002b0:	mov	eax, 0
0x4002b5:	call	0x500000
<Block for 0x40028c, 4 bytes>
0x40028c:	xor	eax, ebx
0x40028e:	jmp	0x4002ad
<Block for 0x400308, 16 bytes>
0x400308:	mov	eax, dword ptr [rbp - 0x44]
0x40030b:	cdqe	
0x40030d:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400311:	mov	edi, eax
0x400313:	call	0x500010
<Block for 0x400322, 2 bytes>
0x400322:	jmp	0x400332
<Block for 0x4002ad, 13 bytes>
0x4002ad:	mov	dword ptr [rbp - 0x48], eax
0x4002b0:	mov	eax, 0
0x4002b5:	call	0x500000
<Block for 0x400318, 10 bytes>
0x400318:	add	dword ptr [rbp - 0x44], 1
0x40031c:	cmp	dword ptr [rbp - 0x44], 9
0x400320:	jle	0x400308
