<Block for 0x400424, 44 bytes>
0x400424:	endbr64	
0x400428:	push	rbp
0x400429:	mov	rbp, rsp
0x40042c:	sub	rsp, 0x40
0x400430:	mov	rax, qword ptr fs:[0x28]
0x400439:	mov	qword ptr [rbp - 8], rax
0x40043d:	xor	eax, eax
0x40043f:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400446:	mov	eax, 0
0x40044b:	call	0x500000
<Block for 0x400450, 4 bytes>
0x400450:	test	eax, eax
0x400452:	je	0x40045b
<Block for 0x40045b, 10 bytes>
0x40045b:	mov	eax, 0
0x400460:	call	0x500000
<Block for 0x400454, 17 bytes>
0x400454:	mov	dword ptr [rbp - 0x38], 7
0x40045b:	mov	eax, 0
0x400460:	call	0x500000
<Block for 0x400465, 4 bytes>
0x400465:	test	eax, eax
0x400467:	je	0x4004d5
<Block for 0x4004d5, 16 bytes>
0x4004d5:	nop	
0x4004d6:	mov	rax, qword ptr [rbp - 8]
0x4004da:	xor	rax, qword ptr fs:[0x28]
0x4004e3:	je	0x4004ea
<Block for 0x400469, 46 bytes>
0x400469:	mov	qword ptr [rbp - 0x30], 0
0x400471:	mov	qword ptr [rbp - 0x28], 0
0x400479:	mov	qword ptr [rbp - 0x20], 0
0x400481:	mov	qword ptr [rbp - 0x18], 0
0x400489:	mov	qword ptr [rbp - 0x10], 0
0x400491:	cmp	dword ptr [rbp - 0x38], 9
0x400495:	jg	0x4004c9
<Block for 0x4004ea, 2 bytes>
0x4004ea:	leave	
0x4004eb:	ret	
<Block for 0x4004e5, 5 bytes>
0x4004e5:	call	0x500020
<Block for 0x400497, 22 bytes>
0x400497:	mov	eax, dword ptr [rbp - 0x38]
0x40049a:	cdqe	
0x40049c:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4004a4:	mov	dword ptr [rbp - 0x34], 0
0x4004ab:	jmp	0x4004c1
<Block for 0x4004c9, 12 bytes>
0x4004c9:	lea	rdi, [rip + 0x50]
0x4004d0:	call	0x500018
<Block for 0x4004c1, 6 bytes>
0x4004c1:	cmp	dword ptr [rbp - 0x34], 9
0x4004c5:	jle	0x4004ad
<Block for 0x4004ad, 16 bytes>
0x4004ad:	mov	eax, dword ptr [rbp - 0x34]
0x4004b0:	cdqe	
0x4004b2:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4004b6:	mov	edi, eax
0x4004b8:	call	0x500010
<Block for 0x4004c7, 2 bytes>
0x4004c7:	jmp	0x4004d5
<Block for 0x4004bd, 10 bytes>
0x4004bd:	add	dword ptr [rbp - 0x34], 1
0x4004c1:	cmp	dword ptr [rbp - 0x34], 9
0x4004c5:	jle	0x4004ad
