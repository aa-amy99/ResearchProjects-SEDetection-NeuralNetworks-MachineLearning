<Block for 0x400110, 45 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	push	rbx
0x400119:	sub	rsp, 0x48
0x40011d:	mov	rax, qword ptr fs:[0x28]
0x400126:	mov	qword ptr [rbp - 0x18], rax
0x40012a:	xor	eax, eax
0x40012c:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400133:	mov	eax, 0
0x400138:	call	0x500000
<Block for 0x40013d, 4 bytes>
0x40013d:	test	eax, eax
0x40013f:	je	0x40018a
<Block for 0x40018a, 10 bytes>
0x40018a:	mov	eax, 0
0x40018f:	call	0x500028
<Block for 0x400141, 5 bytes>
0x400141:	call	0x500008
<Block for 0x400194, 4 bytes>
0x400194:	test	eax, eax
0x400196:	je	0x4001a6
<Block for 0x400146, 7 bytes>
0x400146:	and	eax, 1
0x400149:	test	eax, eax
0x40014b:	je	0x40016a
<Block for 0x4001a6, 46 bytes>
0x4001a6:	mov	qword ptr [rbp - 0x40], 0
0x4001ae:	mov	qword ptr [rbp - 0x38], 0
0x4001b6:	mov	qword ptr [rbp - 0x30], 0
0x4001be:	mov	qword ptr [rbp - 0x28], 0
0x4001c6:	mov	qword ptr [rbp - 0x20], 0
0x4001ce:	cmp	dword ptr [rbp - 0x48], 0
0x4001d2:	js	0x40020c
<Block for 0x400198, 12 bytes>
0x400198:	lea	rdi, [rip + 0x3a1]
0x40019f:	call	0x500018
<Block for 0x40016a, 5 bytes>
0x40016a:	call	0x500008
<Block for 0x40014d, 5 bytes>
0x40014d:	call	0x500008
<Block for 0x40020c, 12 bytes>
0x40020c:	lea	rdi, [rip + 0x345]
0x400213:	call	0x500018
<Block for 0x4001d4, 6 bytes>
0x4001d4:	cmp	dword ptr [rbp - 0x48], 9
0x4001d8:	jg	0x40020c
<Block for 0x4001a4, 2 bytes>
0x4001a4:	jmp	0x40021a
<Block for 0x40016f, 10 bytes>
0x40016f:	shl	eax, 0x1e
0x400172:	mov	ebx, eax
0x400174:	call	0x500008
<Block for 0x400152, 10 bytes>
0x400152:	shl	eax, 0x1e
0x400155:	mov	ebx, eax
0x400157:	call	0x500008
<Block for 0x400218, 2 bytes>
0x400218:	jmp	0x40021a
<Block for 0x4001da, 22 bytes>
0x4001da:	mov	eax, dword ptr [rbp - 0x48]
0x4001dd:	cdqe	
0x4001df:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4001e7:	mov	dword ptr [rbp - 0x44], 0
0x4001ee:	jmp	0x400204
<Block for 0x40021a, 16 bytes>
0x40021a:	nop	
0x40021b:	mov	rax, qword ptr [rbp - 0x18]
0x40021f:	xor	rax, qword ptr fs:[0x28]
0x400228:	je	0x40022f
<Block for 0x400179, 10 bytes>
0x400179:	shl	eax, 0xf
0x40017c:	xor	ebx, eax
0x40017e:	call	0x500008
<Block for 0x40015c, 10 bytes>
0x40015c:	shl	eax, 0xf
0x40015f:	xor	ebx, eax
0x400161:	call	0x500008
<Block for 0x400204, 6 bytes>
0x400204:	cmp	dword ptr [rbp - 0x44], 9
0x400208:	jle	0x4001f0
<Block for 0x40022f, 7 bytes>
0x40022f:	add	rsp, 0x48
0x400233:	pop	rbx
0x400234:	pop	rbp
0x400235:	ret	
<Block for 0x40022a, 5 bytes>
0x40022a:	call	0x500020
<Block for 0x400183, 17 bytes>
0x400183:	xor	eax, ebx
0x400185:	not	eax
0x400187:	mov	dword ptr [rbp - 0x48], eax
0x40018a:	mov	eax, 0
0x40018f:	call	0x500028
<Block for 0x400166, 4 bytes>
0x400166:	xor	eax, ebx
0x400168:	jmp	0x400187
<Block for 0x4001f0, 16 bytes>
0x4001f0:	mov	eax, dword ptr [rbp - 0x44]
0x4001f3:	cdqe	
0x4001f5:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001f9:	mov	edi, eax
0x4001fb:	call	0x500010
<Block for 0x40020a, 2 bytes>
0x40020a:	jmp	0x40021a
<Block for 0x400187, 13 bytes>
0x400187:	mov	dword ptr [rbp - 0x48], eax
0x40018a:	mov	eax, 0
0x40018f:	call	0x500028
<Block for 0x400200, 10 bytes>
0x400200:	add	dword ptr [rbp - 0x44], 1
0x400204:	cmp	dword ptr [rbp - 0x44], 9
0x400208:	jle	0x4001f0
