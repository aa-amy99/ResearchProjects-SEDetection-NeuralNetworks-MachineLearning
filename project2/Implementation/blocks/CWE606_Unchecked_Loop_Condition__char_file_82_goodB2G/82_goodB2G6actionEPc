<Block for 0x400000, 63 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	qword ptr [rbp - 0x30], rsi
0x400014:	mov	rax, qword ptr fs:[0x28]
0x40001d:	mov	qword ptr [rbp - 8], rax
0x400021:	xor	eax, eax
0x400023:	lea	rdx, [rbp - 0x14]
0x400027:	mov	rax, qword ptr [rbp - 0x30]
0x40002b:	lea	rsi, [rip + 0x62]
0x400032:	mov	rdi, rax
0x400035:	mov	eax, 0
0x40003a:	call	0x500000
<Block for 0x40003f, 10 bytes>
0x40003f:	cmp	eax, 1
0x400042:	sete	al
0x400045:	test	al, al
0x400047:	je	0x40007d
<Block for 0x40007d, 16 bytes>
0x40007d:	nop	
0x40007e:	mov	rax, qword ptr [rbp - 8]
0x400082:	xor	rax, qword ptr fs:[0x28]
0x40008b:	je	0x400092
<Block for 0x400049, 10 bytes>
0x400049:	mov	eax, dword ptr [rbp - 0x14]
0x40004c:	cmp	eax, 0x270f
0x400051:	jg	0x40007d
<Block for 0x400092, 2 bytes>
0x400092:	leave	
0x400093:	ret	
<Block for 0x40008d, 5 bytes>
0x40008d:	call	0x500010
<Block for 0x400053, 22 bytes>
0x400053:	mov	dword ptr [rbp - 0xc], 0
0x40005a:	mov	dword ptr [rbp - 0x10], 0
0x400061:	mov	eax, dword ptr [rbp - 0x14]
0x400064:	cmp	dword ptr [rbp - 0x10], eax
0x400067:	jge	0x400073
<Block for 0x400069, 10 bytes>
0x400069:	add	dword ptr [rbp - 0xc], 1
0x40006d:	add	dword ptr [rbp - 0x10], 1
0x400071:	jmp	0x400061
<Block for 0x400073, 10 bytes>
0x400073:	mov	eax, dword ptr [rbp - 0xc]
0x400076:	mov	edi, eax
0x400078:	call	0x500008
<Block for 0x400061, 8 bytes>
0x400061:	mov	eax, dword ptr [rbp - 0x14]
0x400064:	cmp	dword ptr [rbp - 0x10], eax
0x400067:	jge	0x400073
