<Block for 0x400392, 41 bytes>
0x400392:	endbr64	
0x400396:	push	rbp
0x400397:	mov	rbp, rsp
0x40039a:	sub	rsp, 0x30
0x40039e:	mov	rax, qword ptr fs:[0x28]
0x4003a7:	mov	qword ptr [rbp - 8], rax
0x4003ab:	xor	eax, eax
0x4003ad:	mov	eax, dword ptr [rip + 0xffc4d]
0x4003b3:	test	eax, eax
0x4003b5:	je	0x4004c0
<Block for 0x4004c0, 16 bytes>
0x4004c0:	nop	
0x4004c1:	mov	rax, qword ptr [rbp - 8]
0x4004c5:	xor	rax, qword ptr fs:[0x28]
0x4004ce:	je	0x4004d5
<Block for 0x4003bb, 34 bytes>
0x4003bb:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4003c2:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4003c9:	mov	edx, 6
0x4003ce:	mov	esi, 1
0x4003d3:	mov	edi, 2
0x4003d8:	call	0x500008
<Block for 0x4004d5, 2 bytes>
0x4004d5:	leave	
0x4004d6:	ret	
<Block for 0x4004d0, 5 bytes>
0x4004d0:	call	0x500068
<Block for 0x4003dd, 13 bytes>
0x4003dd:	mov	dword ptr [rbp - 0x24], eax
0x4003e0:	cmp	dword ptr [rbp - 0x24], -1
0x4003e4:	je	0x400496
<Block for 0x400496, 3 bytes>
0x400496:	nop	
0x400497:	jmp	0x4004a0
<Block for 0x4003ea, 22 bytes>
0x4003ea:	lea	rax, [rbp - 0x20]
0x4003ee:	mov	edx, 0x10
0x4003f3:	mov	esi, 0
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x500010
<Block for 0x4004a0, 6 bytes>
0x4004a0:	cmp	dword ptr [rbp - 0x24], -1
0x4004a4:	je	0x4004b0
<Block for 0x400400, 23 bytes>
0x400400:	mov	word ptr [rbp - 0x20], 2
0x400406:	mov	dword ptr [rbp - 0x1c], 0
0x40040d:	mov	edi, 0x4e20
0x400412:	call	0x500018
<Block for 0x4004b0, 6 bytes>
0x4004b0:	cmp	dword ptr [rbp - 0x28], -1
0x4004b4:	je	0x4004c0
<Block for 0x4004a6, 10 bytes>
0x4004a6:	mov	eax, dword ptr [rbp - 0x24]
0x4004a9:	mov	edi, eax
0x4004ab:	call	0x500060
<Block for 0x400417, 26 bytes>
0x400417:	mov	word ptr [rbp - 0x1e], ax
0x40041b:	lea	rcx, [rbp - 0x20]
0x40041f:	mov	eax, dword ptr [rbp - 0x24]
0x400422:	mov	edx, 0x10
0x400427:	mov	rsi, rcx
0x40042a:	mov	edi, eax
0x40042c:	call	0x500020
<Block for 0x4004b6, 10 bytes>
0x4004b6:	mov	eax, dword ptr [rbp - 0x28]
0x4004b9:	mov	edi, eax
0x4004bb:	call	0x500060
<Block for 0x400431, 5 bytes>
0x400431:	cmp	eax, -1
0x400434:	je	0x400499
<Block for 0x400499, 3 bytes>
0x400499:	nop	
0x40049a:	jmp	0x4004a0
<Block for 0x400436, 15 bytes>
0x400436:	mov	eax, dword ptr [rbp - 0x24]
0x400439:	mov	esi, 5
0x40043e:	mov	edi, eax
0x400440:	call	0x500028
<Block for 0x400445, 5 bytes>
0x400445:	cmp	eax, -1
0x400448:	je	0x40049c
<Block for 0x40049c, 3 bytes>
0x40049c:	nop	
0x40049d:	jmp	0x4004a0
<Block for 0x40044a, 20 bytes>
0x40044a:	mov	eax, dword ptr [rbp - 0x24]
0x40044d:	mov	edx, 0
0x400452:	mov	esi, 0
0x400457:	mov	edi, eax
0x400459:	call	0x500030
<Block for 0x40045e, 9 bytes>
0x40045e:	mov	dword ptr [rbp - 0x28], eax
0x400461:	cmp	dword ptr [rbp - 0x28], -1
0x400465:	je	0x40049f
<Block for 0x400467, 27 bytes>
0x400467:	mov	eax, dword ptr [rbp - 0x28]
0x40046a:	mov	ecx, 0
0x40046f:	mov	edx, 8
0x400474:	lea	rsi, [rip + 0x9c]
0x40047b:	mov	edi, eax
0x40047d:	call	0x500050
<Block for 0x40049f, 1 bytes>
0x40049f:	nop	
<Block for 0x400482, 6 bytes>
0x400482:	cmp	rax, -1
0x400486:	jne	0x4004a0
<Block for 0x400488, 12 bytes>
0x400488:	lea	rdi, [rip + 0x91]
0x40048f:	call	0x500058
<Block for 0x400494, 2 bytes>
0x400494:	jmp	0x4004a0
