<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x58]
0x40001f:	mov	qword ptr [rbp - 0x48], rax
0x400023:	lea	rax, [rbp - 0x58]
0x400027:	mov	qword ptr [rbp - 0x40], rax
0x40002b:	mov	edi, 0x64
0x400030:	call	0x500000
<Block for 0x400035, 13 bytes>
0x400035:	mov	qword ptr [rbp - 0x58], rax
0x400039:	mov	rax, qword ptr [rbp - 0x58]
0x40003d:	test	rax, rax
0x400040:	jne	0x40004c
<Block for 0x400042, 10 bytes>
0x400042:	mov	edi, 0xffffffff
0x400047:	call	0x500008
<Block for 0x40004c, 37 bytes>
0x40004c:	mov	rax, qword ptr [rbp - 0x58]
0x400050:	mov	byte ptr [rax], 0
0x400053:	mov	rax, qword ptr [rbp - 0x48]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	mov	qword ptr [rbp - 0x38], rax
0x40005e:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x400065:	mov	rax, qword ptr [rbp - 0x38]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500010
<Block for 0x400071, 24 bytes>
0x400071:	mov	qword ptr [rbp - 0x30], rax
0x400075:	mov	edx, 6
0x40007a:	mov	esi, 1
0x40007f:	mov	edi, 2
0x400084:	call	0x500018
<Block for 0x400089, 13 bytes>
0x400089:	mov	dword ptr [rbp - 0x60], eax
0x40008c:	cmp	dword ptr [rbp - 0x60], -1
0x400090:	je	0x400183
<Block for 0x400183, 3 bytes>
0x400183:	nop	
0x400184:	jmp	0x400187
<Block for 0x400096, 22 bytes>
0x400096:	lea	rax, [rbp - 0x20]
0x40009a:	mov	edx, 0x10
0x40009f:	mov	esi, 0
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500020
<Block for 0x400187, 6 bytes>
0x400187:	cmp	dword ptr [rbp - 0x60], -1
0x40018b:	je	0x400197
<Block for 0x4000ac, 18 bytes>
0x4000ac:	mov	word ptr [rbp - 0x20], 2
0x4000b2:	lea	rdi, [rip + 0x368]
0x4000b9:	call	0x500028
<Block for 0x400197, 24 bytes>
0x400197:	mov	rax, qword ptr [rbp - 0x48]
0x40019b:	mov	rdx, qword ptr [rbp - 0x38]
0x40019f:	mov	qword ptr [rax], rdx
0x4001a2:	mov	rax, qword ptr [rbp - 0x40]
0x4001a6:	mov	rax, qword ptr [rax]
0x4001a9:	mov	qword ptr [rbp - 0x50], rax
0x4001ad:	jmp	0x4001cd
<Block for 0x40018d, 10 bytes>
0x40018d:	mov	eax, dword ptr [rbp - 0x60]
0x400190:	mov	edi, eax
0x400192:	call	0x500050
<Block for 0x4000be, 13 bytes>
0x4000be:	mov	dword ptr [rbp - 0x1c], eax
0x4000c1:	mov	edi, 0x6987
0x4000c6:	call	0x500030
<Block for 0x4001cd, 11 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x50]
0x4001d1:	movzx	eax, byte ptr [rax]
0x4001d4:	test	al, al
0x4001d6:	jne	0x4001af
<Block for 0x4000cb, 26 bytes>
0x4000cb:	mov	word ptr [rbp - 0x1e], ax
0x4000cf:	lea	rcx, [rbp - 0x20]
0x4000d3:	mov	eax, dword ptr [rbp - 0x60]
0x4000d6:	mov	edx, 0x10
0x4000db:	mov	rsi, rcx
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500038
<Block for 0x4001d8, 12 bytes>
0x4001d8:	mov	rax, qword ptr [rbp - 0x50]
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500060
<Block for 0x4001af, 11 bytes>
0x4001af:	mov	rax, qword ptr [rbp - 0x50]
0x4001b3:	movzx	eax, byte ptr [rax]
0x4001b6:	cmp	al, 0x53
0x4001b8:	jne	0x4001c8
<Block for 0x4000e5, 9 bytes>
0x4000e5:	cmp	eax, -1
0x4000e8:	je	0x400186
<Block for 0x4001e4, 16 bytes>
0x4001e4:	nop	
0x4001e5:	mov	rax, qword ptr [rbp - 8]
0x4001e9:	xor	rax, qword ptr fs:[0x28]
0x4001f2:	je	0x4001f9
<Block for 0x4001ba, 12 bytes>
0x4001ba:	lea	rdi, [rip + 0x26a]
0x4001c1:	call	0x500058
<Block for 0x4001c8, 16 bytes>
0x4001c8:	add	qword ptr [rbp - 0x50], 1
0x4001cd:	mov	rax, qword ptr [rbp - 0x50]
0x4001d1:	movzx	eax, byte ptr [rax]
0x4001d4:	test	al, al
0x4001d6:	jne	0x4001af
<Block for 0x4000ee, 39 bytes>
0x4000ee:	mov	eax, 0x63
0x4000f3:	sub	rax, qword ptr [rbp - 0x30]
0x4000f7:	mov	rdx, rax
0x4000fa:	mov	rcx, qword ptr [rbp - 0x38]
0x4000fe:	mov	rax, qword ptr [rbp - 0x30]
0x400102:	lea	rsi, [rcx + rax]
0x400106:	mov	eax, dword ptr [rbp - 0x60]
0x400109:	mov	ecx, 0
0x40010e:	mov	edi, eax
0x400110:	call	0x500040
<Block for 0x400186, 1 bytes>
0x400186:	nop	
<Block for 0x4001f9, 2 bytes>
0x4001f9:	leave	
0x4001fa:	ret	
<Block for 0x4001f4, 5 bytes>
0x4001f4:	call	0x500068
<Block for 0x4001c6, 2 bytes>
0x4001c6:	jmp	0x4001d8
<Block for 0x400115, 9 bytes>
0x400115:	mov	dword ptr [rbp - 0x5c], eax
0x400118:	cmp	dword ptr [rbp - 0x5c], -1
0x40011c:	je	0x400187
<Block for 0x40011e, 6 bytes>
0x40011e:	cmp	dword ptr [rbp - 0x5c], 0
0x400122:	je	0x400187
<Block for 0x400124, 40 bytes>
0x400124:	mov	eax, dword ptr [rbp - 0x5c]
0x400127:	movsxd	rdx, eax
0x40012a:	mov	rax, qword ptr [rbp - 0x30]
0x40012e:	add	rdx, rax
0x400131:	mov	rax, qword ptr [rbp - 0x38]
0x400135:	add	rax, rdx
0x400138:	mov	byte ptr [rax], 0
0x40013b:	mov	rax, qword ptr [rbp - 0x38]
0x40013f:	mov	esi, 0xd
0x400144:	mov	rdi, rax
0x400147:	call	0x500048
<Block for 0x40014c, 11 bytes>
0x40014c:	mov	qword ptr [rbp - 0x28], rax
0x400150:	cmp	qword ptr [rbp - 0x28], 0
0x400155:	je	0x40015e
<Block for 0x40015e, 17 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0x38]
0x400162:	mov	esi, 0xa
0x400167:	mov	rdi, rax
0x40016a:	call	0x500048
<Block for 0x400157, 24 bytes>
0x400157:	mov	rax, qword ptr [rbp - 0x28]
0x40015b:	mov	byte ptr [rax], 0
0x40015e:	mov	rax, qword ptr [rbp - 0x38]
0x400162:	mov	esi, 0xa
0x400167:	mov	rdi, rax
0x40016a:	call	0x500048
<Block for 0x40016f, 11 bytes>
0x40016f:	mov	qword ptr [rbp - 0x28], rax
0x400173:	cmp	qword ptr [rbp - 0x28], 0
0x400178:	je	0x400187
<Block for 0x40017a, 9 bytes>
0x40017a:	mov	rax, qword ptr [rbp - 0x28]
0x40017e:	mov	byte ptr [rax], 0
0x400181:	jmp	0x400187
