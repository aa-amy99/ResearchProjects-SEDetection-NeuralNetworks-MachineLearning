<Block for 0x4001fb, 53 bytes>
0x4001fb:	endbr64	
0x4001ff:	push	rbp
0x400200:	mov	rbp, rsp
0x400203:	sub	rsp, 0x70
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 8], rax
0x400214:	xor	eax, eax
0x400216:	lea	rax, [rbp - 0x60]
0x40021a:	mov	qword ptr [rbp - 0x50], rax
0x40021e:	lea	rax, [rbp - 0x60]
0x400222:	mov	qword ptr [rbp - 0x48], rax
0x400226:	mov	edi, 0x64
0x40022b:	call	0x500000
<Block for 0x400230, 13 bytes>
0x400230:	mov	qword ptr [rbp - 0x60], rax
0x400234:	mov	rax, qword ptr [rbp - 0x60]
0x400238:	test	rax, rax
0x40023b:	jne	0x400247
<Block for 0x40023d, 10 bytes>
0x40023d:	mov	edi, 0xffffffff
0x400242:	call	0x500008
<Block for 0x400247, 37 bytes>
0x400247:	mov	rax, qword ptr [rbp - 0x60]
0x40024b:	mov	byte ptr [rax], 0
0x40024e:	mov	rax, qword ptr [rbp - 0x50]
0x400252:	mov	rax, qword ptr [rax]
0x400255:	mov	qword ptr [rbp - 0x40], rax
0x400259:	mov	dword ptr [rbp - 0x68], 0xffffffff
0x400260:	mov	rax, qword ptr [rbp - 0x40]
0x400264:	mov	rdi, rax
0x400267:	call	0x500010
<Block for 0x40026c, 24 bytes>
0x40026c:	mov	qword ptr [rbp - 0x38], rax
0x400270:	mov	edx, 6
0x400275:	mov	esi, 1
0x40027a:	mov	edi, 2
0x40027f:	call	0x500018
<Block for 0x400284, 13 bytes>
0x400284:	mov	dword ptr [rbp - 0x68], eax
0x400287:	cmp	dword ptr [rbp - 0x68], -1
0x40028b:	je	0x40037e
<Block for 0x40037e, 3 bytes>
0x40037e:	nop	
0x40037f:	jmp	0x400382
<Block for 0x400291, 22 bytes>
0x400291:	lea	rax, [rbp - 0x20]
0x400295:	mov	edx, 0x10
0x40029a:	mov	esi, 0
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x500020
<Block for 0x400382, 6 bytes>
0x400382:	cmp	dword ptr [rbp - 0x68], -1
0x400386:	je	0x400392
<Block for 0x4002a7, 18 bytes>
0x4002a7:	mov	word ptr [rbp - 0x20], 2
0x4002ad:	lea	rdi, [rip + 0x16d]
0x4002b4:	call	0x500028
<Block for 0x400392, 32 bytes>
0x400392:	mov	rax, qword ptr [rbp - 0x50]
0x400396:	mov	rdx, qword ptr [rbp - 0x40]
0x40039a:	mov	qword ptr [rax], rdx
0x40039d:	mov	rax, qword ptr [rbp - 0x48]
0x4003a1:	mov	rax, qword ptr [rax]
0x4003a4:	mov	qword ptr [rbp - 0x28], rax
0x4003a8:	mov	qword ptr [rbp - 0x58], 0
0x4003b0:	jmp	0x4003d7
<Block for 0x400388, 10 bytes>
0x400388:	mov	eax, dword ptr [rbp - 0x68]
0x40038b:	mov	edi, eax
0x40038d:	call	0x500050
<Block for 0x4002b9, 13 bytes>
0x4002b9:	mov	dword ptr [rbp - 0x1c], eax
0x4002bc:	mov	edi, 0x6987
0x4002c1:	call	0x500030
<Block for 0x4003d7, 12 bytes>
0x4003d7:	mov	rax, qword ptr [rbp - 0x28]
0x4003db:	mov	rdi, rax
0x4003de:	call	0x500010
<Block for 0x4002c6, 26 bytes>
0x4002c6:	mov	word ptr [rbp - 0x1e], ax
0x4002ca:	lea	rcx, [rbp - 0x20]
0x4002ce:	mov	eax, dword ptr [rbp - 0x68]
0x4002d1:	mov	edx, 0x10
0x4002d6:	mov	rsi, rcx
0x4002d9:	mov	edi, eax
0x4002db:	call	0x500038
<Block for 0x4003e3, 6 bytes>
0x4003e3:	cmp	qword ptr [rbp - 0x58], rax
0x4003e7:	jb	0x4003b2
<Block for 0x4002e0, 9 bytes>
0x4002e0:	cmp	eax, -1
0x4002e3:	je	0x400381
<Block for 0x4003b2, 18 bytes>
0x4003b2:	mov	rdx, qword ptr [rbp - 0x28]
0x4003b6:	mov	rax, qword ptr [rbp - 0x58]
0x4003ba:	add	rax, rdx
0x4003bd:	movzx	eax, byte ptr [rax]
0x4003c0:	cmp	al, 0x53
0x4003c2:	jne	0x4003d2
<Block for 0x4003e9, 12 bytes>
0x4003e9:	mov	rax, qword ptr [rbp - 0x28]
0x4003ed:	mov	rdi, rax
0x4003f0:	call	0x500060
<Block for 0x4002e9, 39 bytes>
0x4002e9:	mov	eax, 0x63
0x4002ee:	sub	rax, qword ptr [rbp - 0x38]
0x4002f2:	mov	rdx, rax
0x4002f5:	mov	rcx, qword ptr [rbp - 0x40]
0x4002f9:	mov	rax, qword ptr [rbp - 0x38]
0x4002fd:	lea	rsi, [rcx + rax]
0x400301:	mov	eax, dword ptr [rbp - 0x68]
0x400304:	mov	ecx, 0
0x400309:	mov	edi, eax
0x40030b:	call	0x500040
<Block for 0x400381, 1 bytes>
0x400381:	nop	
<Block for 0x4003c4, 12 bytes>
0x4003c4:	lea	rdi, [rip + 0x60]
0x4003cb:	call	0x500058
<Block for 0x4003d2, 17 bytes>
0x4003d2:	add	qword ptr [rbp - 0x58], 1
0x4003d7:	mov	rax, qword ptr [rbp - 0x28]
0x4003db:	mov	rdi, rax
0x4003de:	call	0x500010
<Block for 0x4003f5, 16 bytes>
0x4003f5:	nop	
0x4003f6:	mov	rax, qword ptr [rbp - 8]
0x4003fa:	xor	rax, qword ptr fs:[0x28]
0x400403:	je	0x40040a
<Block for 0x400310, 9 bytes>
0x400310:	mov	dword ptr [rbp - 0x64], eax
0x400313:	cmp	dword ptr [rbp - 0x64], -1
0x400317:	je	0x400382
<Block for 0x4003d0, 2 bytes>
0x4003d0:	jmp	0x4003e9
<Block for 0x40040a, 2 bytes>
0x40040a:	leave	
0x40040b:	ret	
<Block for 0x400405, 5 bytes>
0x400405:	call	0x500068
<Block for 0x400319, 6 bytes>
0x400319:	cmp	dword ptr [rbp - 0x64], 0
0x40031d:	je	0x400382
<Block for 0x40031f, 40 bytes>
0x40031f:	mov	eax, dword ptr [rbp - 0x64]
0x400322:	movsxd	rdx, eax
0x400325:	mov	rax, qword ptr [rbp - 0x38]
0x400329:	add	rdx, rax
0x40032c:	mov	rax, qword ptr [rbp - 0x40]
0x400330:	add	rax, rdx
0x400333:	mov	byte ptr [rax], 0
0x400336:	mov	rax, qword ptr [rbp - 0x40]
0x40033a:	mov	esi, 0xd
0x40033f:	mov	rdi, rax
0x400342:	call	0x500048
<Block for 0x400347, 11 bytes>
0x400347:	mov	qword ptr [rbp - 0x30], rax
0x40034b:	cmp	qword ptr [rbp - 0x30], 0
0x400350:	je	0x400359
<Block for 0x400359, 17 bytes>
0x400359:	mov	rax, qword ptr [rbp - 0x40]
0x40035d:	mov	esi, 0xa
0x400362:	mov	rdi, rax
0x400365:	call	0x500048
<Block for 0x400352, 24 bytes>
0x400352:	mov	rax, qword ptr [rbp - 0x30]
0x400356:	mov	byte ptr [rax], 0
0x400359:	mov	rax, qword ptr [rbp - 0x40]
0x40035d:	mov	esi, 0xa
0x400362:	mov	rdi, rax
0x400365:	call	0x500048
<Block for 0x40036a, 11 bytes>
0x40036a:	mov	qword ptr [rbp - 0x30], rax
0x40036e:	cmp	qword ptr [rbp - 0x30], 0
0x400373:	je	0x400382
<Block for 0x400375, 9 bytes>
0x400375:	mov	rax, qword ptr [rbp - 0x30]
0x400379:	mov	byte ptr [rax], 0
0x40037c:	jmp	0x400382
