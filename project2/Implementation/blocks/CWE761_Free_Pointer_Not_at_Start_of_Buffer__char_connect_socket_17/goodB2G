<Block for 0x4001d9, 37 bytes>
0x4001d9:	endbr64	
0x4001dd:	push	rbp
0x4001de:	mov	rbp, rsp
0x4001e1:	sub	rsp, 0x50
0x4001e5:	mov	rax, qword ptr fs:[0x28]
0x4001ee:	mov	qword ptr [rbp - 8], rax
0x4001f2:	xor	eax, eax
0x4001f4:	mov	edi, 0x64
0x4001f9:	call	0x500000
<Block for 0x4001fe, 11 bytes>
0x4001fe:	mov	qword ptr [rbp - 0x38], rax
0x400202:	cmp	qword ptr [rbp - 0x38], 0
0x400207:	jne	0x400213
<Block for 0x400209, 10 bytes>
0x400209:	mov	edi, 0xffffffff
0x40020e:	call	0x500008
<Block for 0x400213, 26 bytes>
0x400213:	mov	rax, qword ptr [rbp - 0x38]
0x400217:	mov	byte ptr [rax], 0
0x40021a:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400221:	mov	rax, qword ptr [rbp - 0x38]
0x400225:	mov	rdi, rax
0x400228:	call	0x500010
<Block for 0x40022d, 24 bytes>
0x40022d:	mov	qword ptr [rbp - 0x30], rax
0x400231:	mov	edx, 6
0x400236:	mov	esi, 1
0x40023b:	mov	edi, 2
0x400240:	call	0x500018
<Block for 0x400245, 13 bytes>
0x400245:	mov	dword ptr [rbp - 0x48], eax
0x400248:	cmp	dword ptr [rbp - 0x48], -1
0x40024c:	je	0x40033f
<Block for 0x40033f, 3 bytes>
0x40033f:	nop	
0x400340:	jmp	0x400343
<Block for 0x400252, 22 bytes>
0x400252:	lea	rax, [rbp - 0x20]
0x400256:	mov	edx, 0x10
0x40025b:	mov	esi, 0
0x400260:	mov	rdi, rax
0x400263:	call	0x500020
<Block for 0x400343, 6 bytes>
0x400343:	cmp	dword ptr [rbp - 0x48], -1
0x400347:	je	0x400353
<Block for 0x400268, 18 bytes>
0x400268:	mov	word ptr [rbp - 0x20], 2
0x40026e:	lea	rdi, [rip + 0x16a]
0x400275:	call	0x500028
<Block for 0x400353, 9 bytes>
0x400353:	mov	dword ptr [rbp - 0x4c], 0
0x40035a:	jmp	0x4003ad
<Block for 0x400349, 10 bytes>
0x400349:	mov	eax, dword ptr [rbp - 0x48]
0x40034c:	mov	edi, eax
0x40034e:	call	0x500050
<Block for 0x40027a, 13 bytes>
0x40027a:	mov	dword ptr [rbp - 0x1c], eax
0x40027d:	mov	edi, 0x6987
0x400282:	call	0x500030
<Block for 0x4003ad, 6 bytes>
0x4003ad:	cmp	dword ptr [rbp - 0x4c], 0
0x4003b1:	jle	0x40035c
<Block for 0x400287, 26 bytes>
0x400287:	mov	word ptr [rbp - 0x1e], ax
0x40028b:	lea	rcx, [rbp - 0x20]
0x40028f:	mov	eax, dword ptr [rbp - 0x48]
0x400292:	mov	edx, 0x10
0x400297:	mov	rsi, rcx
0x40029a:	mov	edi, eax
0x40029c:	call	0x500038
<Block for 0x40035c, 10 bytes>
0x40035c:	mov	qword ptr [rbp - 0x40], 0
0x400364:	jmp	0x40038b
<Block for 0x4003b3, 16 bytes>
0x4003b3:	nop	
0x4003b4:	mov	rax, qword ptr [rbp - 8]
0x4003b8:	xor	rax, qword ptr fs:[0x28]
0x4003c1:	je	0x4003c8
<Block for 0x4002a1, 9 bytes>
0x4002a1:	cmp	eax, -1
0x4002a4:	je	0x400342
<Block for 0x40038b, 12 bytes>
0x40038b:	mov	rax, qword ptr [rbp - 0x38]
0x40038f:	mov	rdi, rax
0x400392:	call	0x500010
<Block for 0x4003c8, 2 bytes>
0x4003c8:	leave	
0x4003c9:	ret	
<Block for 0x4003c3, 5 bytes>
0x4003c3:	call	0x500068
<Block for 0x4002aa, 39 bytes>
0x4002aa:	mov	eax, 0x63
0x4002af:	sub	rax, qword ptr [rbp - 0x30]
0x4002b3:	mov	rdx, rax
0x4002b6:	mov	rcx, qword ptr [rbp - 0x38]
0x4002ba:	mov	rax, qword ptr [rbp - 0x30]
0x4002be:	lea	rsi, [rcx + rax]
0x4002c2:	mov	eax, dword ptr [rbp - 0x48]
0x4002c5:	mov	ecx, 0
0x4002ca:	mov	edi, eax
0x4002cc:	call	0x500040
<Block for 0x400342, 1 bytes>
0x400342:	nop	
<Block for 0x400397, 6 bytes>
0x400397:	cmp	qword ptr [rbp - 0x40], rax
0x40039b:	jb	0x400366
<Block for 0x4002d1, 9 bytes>
0x4002d1:	mov	dword ptr [rbp - 0x44], eax
0x4002d4:	cmp	dword ptr [rbp - 0x44], -1
0x4002d8:	je	0x400343
<Block for 0x400366, 18 bytes>
0x400366:	mov	rdx, qword ptr [rbp - 0x38]
0x40036a:	mov	rax, qword ptr [rbp - 0x40]
0x40036e:	add	rax, rdx
0x400371:	movzx	eax, byte ptr [rax]
0x400374:	cmp	al, 0x53
0x400376:	jne	0x400386
<Block for 0x40039d, 12 bytes>
0x40039d:	mov	rax, qword ptr [rbp - 0x38]
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500060
<Block for 0x4002da, 6 bytes>
0x4002da:	cmp	dword ptr [rbp - 0x44], 0
0x4002de:	je	0x400343
<Block for 0x400378, 12 bytes>
0x400378:	lea	rdi, [rip + 0x6a]
0x40037f:	call	0x500058
<Block for 0x400386, 17 bytes>
0x400386:	add	qword ptr [rbp - 0x40], 1
0x40038b:	mov	rax, qword ptr [rbp - 0x38]
0x40038f:	mov	rdi, rax
0x400392:	call	0x500010
<Block for 0x4003a9, 10 bytes>
0x4003a9:	add	dword ptr [rbp - 0x4c], 1
0x4003ad:	cmp	dword ptr [rbp - 0x4c], 0
0x4003b1:	jle	0x40035c
<Block for 0x4002e0, 40 bytes>
0x4002e0:	mov	eax, dword ptr [rbp - 0x44]
0x4002e3:	movsxd	rdx, eax
0x4002e6:	mov	rax, qword ptr [rbp - 0x30]
0x4002ea:	add	rdx, rax
0x4002ed:	mov	rax, qword ptr [rbp - 0x38]
0x4002f1:	add	rax, rdx
0x4002f4:	mov	byte ptr [rax], 0
0x4002f7:	mov	rax, qword ptr [rbp - 0x38]
0x4002fb:	mov	esi, 0xd
0x400300:	mov	rdi, rax
0x400303:	call	0x500048
<Block for 0x400384, 2 bytes>
0x400384:	jmp	0x40039d
<Block for 0x400308, 11 bytes>
0x400308:	mov	qword ptr [rbp - 0x28], rax
0x40030c:	cmp	qword ptr [rbp - 0x28], 0
0x400311:	je	0x40031a
<Block for 0x40031a, 17 bytes>
0x40031a:	mov	rax, qword ptr [rbp - 0x38]
0x40031e:	mov	esi, 0xa
0x400323:	mov	rdi, rax
0x400326:	call	0x500048
<Block for 0x400313, 24 bytes>
0x400313:	mov	rax, qword ptr [rbp - 0x28]
0x400317:	mov	byte ptr [rax], 0
0x40031a:	mov	rax, qword ptr [rbp - 0x38]
0x40031e:	mov	esi, 0xa
0x400323:	mov	rdi, rax
0x400326:	call	0x500048
<Block for 0x40032b, 11 bytes>
0x40032b:	mov	qword ptr [rbp - 0x28], rax
0x40032f:	cmp	qword ptr [rbp - 0x28], 0
0x400334:	je	0x400343
<Block for 0x400336, 9 bytes>
0x400336:	mov	rax, qword ptr [rbp - 0x28]
0x40033a:	mov	byte ptr [rax], 0
0x40033d:	jmp	0x400343
