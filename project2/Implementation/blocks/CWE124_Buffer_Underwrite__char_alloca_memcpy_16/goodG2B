<Block for 0x40019f, 85 bytes>
0x40019f:	endbr64	
0x4001a3:	push	rbp
0x4001a4:	mov	rbp, rsp
0x4001a7:	push	rbx
0x4001a8:	sub	rsp, 0x88
0x4001af:	mov	rax, qword ptr fs:[0x28]
0x4001b8:	mov	qword ptr [rbp - 0x18], rax
0x4001bc:	xor	eax, eax
0x4001be:	mov	eax, 0x10
0x4001c3:	sub	rax, 1
0x4001c7:	add	rax, 0x6c
0x4001cb:	mov	esi, 0x10
0x4001d0:	mov	edx, 0
0x4001d5:	div	rsi
0x4001d8:	imul	rax, rax, 0x10
0x4001dc:	mov	rdx, rax
0x4001df:	and	rdx, 0xfffffffffffff000
0x4001e6:	mov	rbx, rsp
0x4001e9:	sub	rbx, rdx
0x4001ec:	mov	rdx, rbx
0x4001ef:	cmp	rsp, rdx
0x4001f2:	je	0x400206
<Block for 0x400206, 26 bytes>
0x400206:	mov	rdx, rax
0x400209:	and	edx, 0xfff
0x40020f:	sub	rsp, rdx
0x400212:	mov	rdx, rax
0x400215:	and	edx, 0xfff
0x40021b:	test	rdx, rdx
0x40021e:	je	0x400230
<Block for 0x4001f4, 18 bytes>
0x4001f4:	sub	rsp, 0x1000
0x4001fb:	or	qword ptr [rsp + 0xff8], 0
0x400204:	jmp	0x4001ef
<Block for 0x400230, 47 bytes>
0x400230:	mov	rax, rsp
0x400233:	add	rax, 0xf
0x400237:	shr	rax, 4
0x40023b:	shl	rax, 4
0x40023f:	mov	qword ptr [rbp - 0x90], rax
0x400246:	mov	rax, qword ptr [rbp - 0x90]
0x40024d:	mov	edx, 0x63
0x400252:	mov	esi, 0x41
0x400257:	mov	rdi, rax
0x40025a:	call	0x500000
<Block for 0x400220, 63 bytes>
0x400220:	and	eax, 0xfff
0x400225:	sub	rax, 8
0x400229:	add	rax, rsp
0x40022c:	or	qword ptr [rax], 0
0x400230:	mov	rax, rsp
0x400233:	add	rax, 0xf
0x400237:	shr	rax, 4
0x40023b:	shl	rax, 4
0x40023f:	mov	qword ptr [rbp - 0x90], rax
0x400246:	mov	rax, qword ptr [rbp - 0x90]
0x40024d:	mov	edx, 0x63
0x400252:	mov	esi, 0x41
0x400257:	mov	rdi, rax
0x40025a:	call	0x500000
<Block for 0x4001ef, 5 bytes>
0x4001ef:	cmp	rsp, rdx
0x4001f2:	je	0x400206
<Block for 0x40025f, 51 bytes>
0x40025f:	mov	rax, qword ptr [rbp - 0x90]
0x400266:	add	rax, 0x63
0x40026a:	mov	byte ptr [rax], 0
0x40026d:	mov	rax, qword ptr [rbp - 0x90]
0x400274:	mov	qword ptr [rbp - 0x88], rax
0x40027b:	nop	
0x40027c:	lea	rax, [rbp - 0x80]
0x400280:	mov	edx, 0x63
0x400285:	mov	esi, 0x43
0x40028a:	mov	rdi, rax
0x40028d:	call	0x500000
<Block for 0x400292, 141 bytes>
0x400292:	mov	byte ptr [rbp - 0x1d], 0
0x400296:	mov	rax, qword ptr [rbp - 0x88]
0x40029d:	mov	rcx, qword ptr [rbp - 0x80]
0x4002a1:	mov	rbx, qword ptr [rbp - 0x78]
0x4002a5:	mov	qword ptr [rax], rcx
0x4002a8:	mov	qword ptr [rax + 8], rbx
0x4002ac:	mov	rcx, qword ptr [rbp - 0x70]
0x4002b0:	mov	rbx, qword ptr [rbp - 0x68]
0x4002b4:	mov	qword ptr [rax + 0x10], rcx
0x4002b8:	mov	qword ptr [rax + 0x18], rbx
0x4002bc:	mov	rcx, qword ptr [rbp - 0x60]
0x4002c0:	mov	rbx, qword ptr [rbp - 0x58]
0x4002c4:	mov	qword ptr [rax + 0x20], rcx
0x4002c8:	mov	qword ptr [rax + 0x28], rbx
0x4002cc:	mov	rcx, qword ptr [rbp - 0x50]
0x4002d0:	mov	rbx, qword ptr [rbp - 0x48]
0x4002d4:	mov	qword ptr [rax + 0x30], rcx
0x4002d8:	mov	qword ptr [rax + 0x38], rbx
0x4002dc:	mov	rcx, qword ptr [rbp - 0x40]
0x4002e0:	mov	rbx, qword ptr [rbp - 0x38]
0x4002e4:	mov	qword ptr [rax + 0x40], rcx
0x4002e8:	mov	qword ptr [rax + 0x48], rbx
0x4002ec:	mov	rcx, qword ptr [rbp - 0x30]
0x4002f0:	mov	rbx, qword ptr [rbp - 0x28]
0x4002f4:	mov	qword ptr [rax + 0x50], rcx
0x4002f8:	mov	qword ptr [rax + 0x58], rbx
0x4002fc:	mov	edx, dword ptr [rbp - 0x20]
0x4002ff:	mov	dword ptr [rax + 0x60], edx
0x400302:	mov	rax, qword ptr [rbp - 0x88]
0x400309:	add	rax, 0x63
0x40030d:	mov	byte ptr [rax], 0
0x400310:	mov	rax, qword ptr [rbp - 0x88]
0x400317:	mov	rdi, rax
0x40031a:	call	0x500008
<Block for 0x40031f, 16 bytes>
0x40031f:	nop	
0x400320:	mov	rax, qword ptr [rbp - 0x18]
0x400324:	xor	rax, qword ptr fs:[0x28]
0x40032d:	je	0x400334
<Block for 0x400334, 6 bytes>
0x400334:	mov	rbx, qword ptr [rbp - 8]
0x400338:	leave	
0x400339:	ret	
<Block for 0x40032f, 5 bytes>
0x40032f:	call	0x500010
