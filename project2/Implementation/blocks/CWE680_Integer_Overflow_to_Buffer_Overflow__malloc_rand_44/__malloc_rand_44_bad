<Block for 0x400084, 36 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	push	rbx
0x40008d:	sub	rsp, 0x18
0x400091:	lea	rax, [rip - 0x98]
0x400098:	mov	qword ptr [rbp - 0x18], rax
0x40009c:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a3:	call	0x500020
<Block for 0x4000a8, 7 bytes>
0x4000a8:	and	eax, 1
0x4000ab:	test	eax, eax
0x4000ad:	je	0x4000cc
<Block for 0x4000cc, 5 bytes>
0x4000cc:	call	0x500020
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500020
<Block for 0x4000d1, 10 bytes>
0x4000d1:	shl	eax, 0x1e
0x4000d4:	mov	ebx, eax
0x4000d6:	call	0x500020
<Block for 0x4000b4, 10 bytes>
0x4000b4:	shl	eax, 0x1e
0x4000b7:	mov	ebx, eax
0x4000b9:	call	0x500020
<Block for 0x4000db, 10 bytes>
0x4000db:	shl	eax, 0xf
0x4000de:	xor	ebx, eax
0x4000e0:	call	0x500020
<Block for 0x4000be, 10 bytes>
0x4000be:	shl	eax, 0xf
0x4000c1:	xor	ebx, eax
0x4000c3:	call	0x500020
<Block for 0x4000e5, 18 bytes>
0x4000e5:	xor	eax, ebx
0x4000e7:	not	eax
0x4000e9:	mov	dword ptr [rbp - 0x1c], eax
0x4000ec:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ef:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f3:	mov	edi, eax
0x4000f5:	call	rdx
<Block for 0x4000c8, 4 bytes>
0x4000c8:	xor	eax, ebx
0x4000ca:	jmp	0x4000e9
<Block for 0x4000f7, 8 bytes>
0x4000f7:	nop	
0x4000f8:	add	rsp, 0x18
0x4000fc:	pop	rbx
0x4000fd:	pop	rbp
0x4000fe:	ret	
<Block for 0x4000e9, 14 bytes>
0x4000e9:	mov	dword ptr [rbp - 0x1c], eax
0x4000ec:	mov	eax, dword ptr [rbp - 0x1c]
0x4000ef:	mov	rdx, qword ptr [rbp - 0x18]
0x4000f3:	mov	edi, eax
0x4000f5:	call	rdx
