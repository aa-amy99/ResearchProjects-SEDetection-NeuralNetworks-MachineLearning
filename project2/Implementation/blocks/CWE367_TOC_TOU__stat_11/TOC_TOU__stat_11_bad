<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 0
0x400023:	call	0x500000
<Block for 0x400028, 8 bytes>
0x400028:	test	eax, eax
0x40002a:	je	0x400181
<Block for 0x400181, 16 bytes>
0x400181:	nop	
0x400182:	mov	rax, qword ptr [rbp - 8]
0x400186:	xor	rax, qword ptr fs:[0x28]
0x40018f:	je	0x400196
<Block for 0x400030, 137 bytes>
0x400030:	mov	qword ptr [rbp - 0x70], 0
0x400038:	mov	qword ptr [rbp - 0x68], 0
0x400040:	mov	qword ptr [rbp - 0x60], 0
0x400048:	mov	qword ptr [rbp - 0x58], 0
0x400050:	mov	qword ptr [rbp - 0x50], 0
0x400058:	mov	qword ptr [rbp - 0x48], 0
0x400060:	mov	qword ptr [rbp - 0x40], 0
0x400068:	mov	qword ptr [rbp - 0x38], 0
0x400070:	mov	qword ptr [rbp - 0x30], 0
0x400078:	mov	qword ptr [rbp - 0x28], 0
0x400080:	mov	qword ptr [rbp - 0x20], 0
0x400088:	mov	qword ptr [rbp - 0x18], 0
0x400090:	mov	dword ptr [rbp - 0x10], 0
0x400097:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x4000a1:	mov	rdx, qword ptr [rip + 0xfff60]
0x4000a8:	lea	rax, [rbp - 0x70]
0x4000ac:	mov	esi, 0x64
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500010
<Block for 0x400196, 2 bytes>
0x400196:	leave	
0x400197:	ret	
<Block for 0x400191, 5 bytes>
0x400191:	call	0x500050
<Block for 0x4000b9, 5 bytes>
0x4000b9:	test	rax, rax
0x4000bc:	jne	0x4000ce
<Block for 0x4000be, 12 bytes>
0x4000be:	lea	rdi, [rip + 0x3bb]
0x4000c5:	call	0x500018
<Block for 0x4000ce, 11 bytes>
0x4000ce:	lea	rax, [rbp - 0x70]
0x4000d2:	movzx	eax, byte ptr [rax]
0x4000d5:	test	al, al
0x4000d7:	je	0x4000ee
<Block for 0x4000ca, 15 bytes>
0x4000ca:	mov	byte ptr [rbp - 0x70], 0
0x4000ce:	lea	rax, [rbp - 0x70]
0x4000d2:	movzx	eax, byte ptr [rax]
0x4000d5:	test	al, al
0x4000d7:	je	0x4000ee
<Block for 0x4000ee, 22 bytes>
0x4000ee:	lea	rdx, [rbp - 0x100]
0x4000f5:	lea	rax, [rbp - 0x70]
0x4000f9:	mov	rsi, rdx
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500028
<Block for 0x4000d9, 12 bytes>
0x4000d9:	lea	rax, [rbp - 0x70]
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500020
<Block for 0x400104, 5 bytes>
0x400104:	cmp	eax, -1
0x400107:	jne	0x400113
<Block for 0x4000e5, 31 bytes>
0x4000e5:	sub	rax, 1
0x4000e9:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000ee:	lea	rdx, [rbp - 0x100]
0x4000f5:	lea	rax, [rbp - 0x70]
0x4000f9:	mov	rsi, rdx
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500028
<Block for 0x400109, 10 bytes>
0x400109:	mov	edi, 1
0x40010e:	call	0x500030
<Block for 0x400113, 22 bytes>
0x400113:	lea	rax, [rbp - 0x70]
0x400117:	mov	esi, 2
0x40011c:	mov	rdi, rax
0x40011f:	mov	eax, 0
0x400124:	call	0x500038
<Block for 0x400129, 15 bytes>
0x400129:	mov	dword ptr [rbp - 0x104], eax
0x40012f:	cmp	dword ptr [rbp - 0x104], -1
0x400136:	jne	0x400142
<Block for 0x400138, 10 bytes>
0x400138:	mov	edi, 1
0x40013d:	call	0x500030
<Block for 0x400142, 25 bytes>
0x400142:	mov	eax, dword ptr [rbp - 0x104]
0x400148:	mov	edx, 0xb
0x40014d:	lea	rsi, [rip + 0x33b]
0x400154:	mov	edi, eax
0x400156:	call	0x500040
<Block for 0x40015b, 6 bytes>
0x40015b:	cmp	rax, -1
0x40015f:	jne	0x40016b
<Block for 0x400161, 10 bytes>
0x400161:	mov	edi, 1
0x400166:	call	0x500030
<Block for 0x40016b, 9 bytes>
0x40016b:	cmp	dword ptr [rbp - 0x104], -1
0x400172:	je	0x400181
<Block for 0x400174, 13 bytes>
0x400174:	mov	eax, dword ptr [rbp - 0x104]
0x40017a:	mov	edi, eax
0x40017c:	call	0x500048
