<Block for 0x40004e, 22 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	push	r12
0x400058:	push	rbx
0x400059:	mov	eax, dword ptr [rip + 0x14d]
0x40005f:	cmp	eax, 5
0x400062:	je	0x400072
<Block for 0x400072, 10 bytes>
0x400072:	mov	edi, 0x10
0x400077:	call	0x500000
<Block for 0x400064, 12 bytes>
0x400064:	lea	rdi, [rip + 0x165]
0x40006b:	call	0x500028
<Block for 0x40007c, 18 bytes>
0x40007c:	mov	rbx, rax
0x40007f:	lea	rsi, [rip + 0x15f]
0x400086:	mov	rdi, rbx
0x400089:	call	0x500030
<Block for 0x400070, 2 bytes>
0x400070:	jmp	0x4000c1
<Block for 0x40008e, 25 bytes>
0x40008e:	mov	rax, qword ptr [rip + 0xfffab]
0x400095:	mov	rdx, rax
0x400098:	lea	rsi, [rip + 0xfffa9]
0x40009f:	mov	rdi, rbx
0x4000a2:	call	0x500020
<Block for 0x4000c1, 5 bytes>
0x4000c1:	pop	rbx
0x4000c2:	pop	r12
0x4000c4:	pop	rbp
0x4000c5:	ret	
<Block for 0x4000a7, 15 bytes>
0x4000a7:	endbr64	
0x4000ab:	mov	r12, rax
0x4000ae:	mov	rdi, rbx
0x4000b1:	call	0x500050
<Block for 0x4000b6, 11 bytes>
0x4000b6:	mov	rax, r12
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500058
