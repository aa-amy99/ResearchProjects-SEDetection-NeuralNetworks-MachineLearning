<Block for 0x4000ee, 50 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	sub	rsp, 0x90
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	mov	qword ptr [rbp - 0x80], 0
0x400114:	mov	dword ptr [rbp - 0x84], 0
0x40011e:	jmp	0x40016f
<Block for 0x40016f, 9 bytes>
0x40016f:	cmp	dword ptr [rbp - 0x84], 0
0x400176:	jle	0x400120
<Block for 0x400120, 10 bytes>
0x400120:	mov	edi, 0x64
0x400125:	call	0x500000
<Block for 0x400178, 22 bytes>
0x400178:	lea	rax, [rbp - 0x70]
0x40017c:	mov	edx, 0x63
0x400181:	mov	esi, 0x43
0x400186:	mov	rdi, rax
0x400189:	call	0x500010
<Block for 0x40012a, 11 bytes>
0x40012a:	mov	qword ptr [rbp - 0x78], rax
0x40012e:	cmp	qword ptr [rbp - 0x78], 0
0x400133:	jne	0x40013f
<Block for 0x40018e, 28 bytes>
0x40018e:	mov	byte ptr [rbp - 0xd], 0
0x400192:	lea	rcx, [rbp - 0x70]
0x400196:	mov	rax, qword ptr [rbp - 0x80]
0x40019a:	mov	edx, 0x63
0x40019f:	mov	rsi, rcx
0x4001a2:	mov	rdi, rax
0x4001a5:	call	0x500018
<Block for 0x400135, 10 bytes>
0x400135:	mov	edi, 0xffffffff
0x40013a:	call	0x500008
<Block for 0x40013f, 22 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x78]
0x400143:	mov	edx, 0x63
0x400148:	mov	esi, 0x41
0x40014d:	mov	rdi, rax
0x400150:	call	0x500010
<Block for 0x4001aa, 23 bytes>
0x4001aa:	mov	rax, qword ptr [rbp - 0x80]
0x4001ae:	add	rax, 0x63
0x4001b2:	mov	byte ptr [rax], 0
0x4001b5:	mov	rax, qword ptr [rbp - 0x80]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500020
<Block for 0x400155, 35 bytes>
0x400155:	mov	rax, qword ptr [rbp - 0x78]
0x400159:	add	rax, 0x63
0x40015d:	mov	byte ptr [rax], 0
0x400160:	mov	rax, qword ptr [rbp - 0x78]
0x400164:	mov	qword ptr [rbp - 0x80], rax
0x400168:	add	dword ptr [rbp - 0x84], 1
0x40016f:	cmp	dword ptr [rbp - 0x84], 0
0x400176:	jle	0x400120
<Block for 0x4001c1, 16 bytes>
0x4001c1:	nop	
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	xor	rax, qword ptr fs:[0x28]
0x4001cf:	je	0x4001d6
<Block for 0x4001d6, 2 bytes>
0x4001d6:	leave	
0x4001d7:	ret	
<Block for 0x4001d1, 5 bytes>
0x4001d1:	call	0x500028
