<Block for 0x4002d8, 52 bytes>
0x4002d8:	endbr64	
0x4002dc:	push	rbp
0x4002dd:	mov	rbp, rsp
0x4002e0:	push	rbx
0x4002e1:	sub	rsp, 0x88
0x4002e8:	mov	rax, qword ptr fs:[0x28]
0x4002f1:	mov	qword ptr [rbp - 0x18], rax
0x4002f5:	xor	eax, eax
0x4002f7:	mov	qword ptr [rbp - 0x90], 0
0x400302:	mov	eax, 0
0x400307:	call	0x400000
<Block for 0x40030c, 4 bytes>
0x40030c:	test	eax, eax
0x40030e:	je	0x40036a
<Block for 0x40036a, 22 bytes>
0x40036a:	lea	rax, [rbp - 0x80]
0x40036e:	mov	edx, 0x63
0x400373:	mov	esi, 0x43
0x400378:	mov	rdi, rax
0x40037b:	call	0x500010
<Block for 0x400310, 10 bytes>
0x400310:	mov	edi, 0x64
0x400315:	call	0x500000
<Block for 0x400380, 141 bytes>
0x400380:	mov	byte ptr [rbp - 0x1d], 0
0x400384:	mov	rax, qword ptr [rbp - 0x90]
0x40038b:	mov	rcx, qword ptr [rbp - 0x80]
0x40038f:	mov	rbx, qword ptr [rbp - 0x78]
0x400393:	mov	qword ptr [rax], rcx
0x400396:	mov	qword ptr [rax + 8], rbx
0x40039a:	mov	rcx, qword ptr [rbp - 0x70]
0x40039e:	mov	rbx, qword ptr [rbp - 0x68]
0x4003a2:	mov	qword ptr [rax + 0x10], rcx
0x4003a6:	mov	qword ptr [rax + 0x18], rbx
0x4003aa:	mov	rcx, qword ptr [rbp - 0x60]
0x4003ae:	mov	rbx, qword ptr [rbp - 0x58]
0x4003b2:	mov	qword ptr [rax + 0x20], rcx
0x4003b6:	mov	qword ptr [rax + 0x28], rbx
0x4003ba:	mov	rcx, qword ptr [rbp - 0x50]
0x4003be:	mov	rbx, qword ptr [rbp - 0x48]
0x4003c2:	mov	qword ptr [rax + 0x30], rcx
0x4003c6:	mov	qword ptr [rax + 0x38], rbx
0x4003ca:	mov	rcx, qword ptr [rbp - 0x40]
0x4003ce:	mov	rbx, qword ptr [rbp - 0x38]
0x4003d2:	mov	qword ptr [rax + 0x40], rcx
0x4003d6:	mov	qword ptr [rax + 0x48], rbx
0x4003da:	mov	rcx, qword ptr [rbp - 0x30]
0x4003de:	mov	rbx, qword ptr [rbp - 0x28]
0x4003e2:	mov	qword ptr [rax + 0x50], rcx
0x4003e6:	mov	qword ptr [rax + 0x58], rbx
0x4003ea:	mov	edx, dword ptr [rbp - 0x20]
0x4003ed:	mov	dword ptr [rax + 0x60], edx
0x4003f0:	mov	rax, qword ptr [rbp - 0x90]
0x4003f7:	add	rax, 0x63
0x4003fb:	mov	byte ptr [rax], 0
0x4003fe:	mov	rax, qword ptr [rbp - 0x90]
0x400405:	mov	rdi, rax
0x400408:	call	0x500018
<Block for 0x40031a, 17 bytes>
0x40031a:	mov	qword ptr [rbp - 0x88], rax
0x400321:	cmp	qword ptr [rbp - 0x88], 0
0x400329:	jne	0x400335
<Block for 0x40040d, 16 bytes>
0x40040d:	nop	
0x40040e:	mov	rax, qword ptr [rbp - 0x18]
0x400412:	xor	rax, qword ptr fs:[0x28]
0x40041b:	je	0x400422
<Block for 0x40032b, 10 bytes>
0x40032b:	mov	edi, 0xffffffff
0x400330:	call	0x500008
<Block for 0x400335, 25 bytes>
0x400335:	mov	rax, qword ptr [rbp - 0x88]
0x40033c:	mov	edx, 0x63
0x400341:	mov	esi, 0x41
0x400346:	mov	rdi, rax
0x400349:	call	0x500010
<Block for 0x400422, 10 bytes>
0x400422:	add	rsp, 0x88
0x400429:	pop	rbx
0x40042a:	pop	rbp
0x40042b:	ret	
<Block for 0x40041d, 5 bytes>
0x40041d:	call	0x500020
<Block for 0x40034e, 50 bytes>
0x40034e:	mov	rax, qword ptr [rbp - 0x88]
0x400355:	add	rax, 0x63
0x400359:	mov	byte ptr [rax], 0
0x40035c:	mov	rax, qword ptr [rbp - 0x88]
0x400363:	mov	qword ptr [rbp - 0x90], rax
0x40036a:	lea	rax, [rbp - 0x80]
0x40036e:	mov	edx, 0x63
0x400373:	mov	esi, 0x43
0x400378:	mov	rdi, rax
0x40037b:	call	0x500010
