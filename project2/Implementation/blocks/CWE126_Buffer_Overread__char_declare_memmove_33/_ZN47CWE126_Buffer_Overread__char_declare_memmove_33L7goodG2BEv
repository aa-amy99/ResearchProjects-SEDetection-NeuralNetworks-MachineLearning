<Block for 0x4000ee, 69 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	sub	rsp, 0x140
0x4000fd:	mov	rax, qword ptr fs:[0x28]
0x400106:	mov	qword ptr [rbp - 8], rax
0x40010a:	xor	eax, eax
0x40010c:	lea	rax, [rbp - 0x138]
0x400113:	mov	qword ptr [rbp - 0x130], rax
0x40011a:	lea	rax, [rbp - 0x120]
0x400121:	mov	edx, 0x31
0x400126:	mov	esi, 0x41
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x400133, 32 bytes>
0x400133:	mov	byte ptr [rbp - 0xef], 0
0x40013a:	lea	rax, [rbp - 0xe0]
0x400141:	mov	edx, 0x63
0x400146:	mov	esi, 0x41
0x40014b:	mov	rdi, rax
0x40014e:	call	0x500000
<Block for 0x400153, 57 bytes>
0x400153:	mov	byte ptr [rbp - 0x7d], 0
0x400157:	lea	rax, [rbp - 0xe0]
0x40015e:	mov	qword ptr [rbp - 0x138], rax
0x400165:	mov	rax, qword ptr [rbp - 0x130]
0x40016c:	mov	rax, qword ptr [rax]
0x40016f:	mov	qword ptr [rbp - 0x128], rax
0x400176:	lea	rax, [rbp - 0x70]
0x40017a:	mov	edx, 0x63
0x40017f:	mov	esi, 0x43
0x400184:	mov	rdi, rax
0x400187:	call	0x500000
<Block for 0x40018c, 16 bytes>
0x40018c:	mov	byte ptr [rbp - 0xd], 0
0x400190:	lea	rax, [rbp - 0x70]
0x400194:	mov	rdi, rax
0x400197:	call	0x500008
<Block for 0x40019c, 25 bytes>
0x40019c:	mov	rdx, rax
0x40019f:	mov	rcx, qword ptr [rbp - 0x128]
0x4001a6:	lea	rax, [rbp - 0x70]
0x4001aa:	mov	rsi, rcx
0x4001ad:	mov	rdi, rax
0x4001b0:	call	0x500010
<Block for 0x4001b5, 16 bytes>
0x4001b5:	mov	byte ptr [rbp - 0xd], 0
0x4001b9:	lea	rax, [rbp - 0x70]
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500018
<Block for 0x4001c5, 16 bytes>
0x4001c5:	nop	
0x4001c6:	mov	rax, qword ptr [rbp - 8]
0x4001ca:	xor	rax, qword ptr fs:[0x28]
0x4001d3:	je	0x4001da
<Block for 0x4001da, 2 bytes>
0x4001da:	leave	
0x4001db:	ret	
<Block for 0x4001d5, 5 bytes>
0x4001d5:	call	0x500020
