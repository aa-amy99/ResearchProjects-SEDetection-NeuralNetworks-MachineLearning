<Block for 0x400000, 64 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	rax, qword ptr [rip + 0xfffd6]
0x40002a:	mov	rdx, rax
0x40002d:	lea	rsi, [rip + 0x187]
0x400034:	lea	rdi, [rip + 0x183]
0x40003b:	call	0x500008
<Block for 0x400040, 16 bytes>
0x400040:	mov	qword ptr [rbp - 0x18], rax
0x400044:	mov	rax, qword ptr [rbp - 0x18]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500010
<Block for 0x400050, 45 bytes>
0x400050:	lea	rax, [rip + 0xfffd1]
0x400057:	mov	qword ptr [rbp - 0x20], rax
0x40005b:	lea	rax, [rbp - 0x20]
0x40005f:	mov	qword ptr [rbp - 0x10], rax
0x400063:	mov	rax, qword ptr [rbp - 0x10]
0x400067:	mov	rax, qword ptr [rax]
0x40006a:	mov	rcx, qword ptr [rax]
0x40006d:	mov	rdx, qword ptr [rbp - 0x18]
0x400071:	mov	rax, qword ptr [rbp - 0x10]
0x400075:	mov	rsi, rdx
0x400078:	mov	rdi, rax
0x40007b:	call	rcx
<Block for 0x40007d, 16 bytes>
0x40007d:	nop	
0x40007e:	mov	rax, qword ptr [rbp - 8]
0x400082:	xor	rax, qword ptr fs:[0x28]
0x40008b:	je	0x400092
<Block for 0x400092, 2 bytes>
0x400092:	leave	
0x400093:	ret	
<Block for 0x40008d, 5 bytes>
0x40008d:	call	0x500020
