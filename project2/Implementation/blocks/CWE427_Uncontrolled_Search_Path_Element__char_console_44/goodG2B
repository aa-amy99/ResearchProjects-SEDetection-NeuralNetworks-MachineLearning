<Block for 0x4001bc, 96 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	sub	rsp, 0x120
0x4001cb:	mov	rax, qword ptr fs:[0x28]
0x4001d4:	mov	qword ptr [rbp - 8], rax
0x4001d8:	xor	eax, eax
0x4001da:	lea	rax, [rip - 0x44]
0x4001e1:	mov	qword ptr [rbp - 0x120], rax
0x4001e8:	movabs	rax, 0x3d48544150
0x4001f2:	mov	edx, 0
0x4001f7:	mov	qword ptr [rbp - 0x110], rax
0x4001fe:	mov	qword ptr [rbp - 0x108], rdx
0x400205:	lea	rdx, [rbp - 0x100]
0x40020c:	mov	eax, 0
0x400211:	mov	ecx, 0x1d
0x400216:	mov	rdi, rdx
0x400219:	rep stosq	qword ptr [rdi], rax
<Block for 0x40021c, 51 bytes>
0x40021c:	mov	rdx, rdi
0x40021f:	mov	word ptr [rdx], ax
0x400222:	add	rdx, 2
0x400226:	lea	rax, [rbp - 0x110]
0x40022d:	mov	qword ptr [rbp - 0x118], rax
0x400234:	mov	rax, qword ptr [rbp - 0x118]
0x40023b:	mov	rcx, -1
0x400242:	mov	rdx, rax
0x400245:	mov	eax, 0
0x40024a:	mov	rdi, rdx
0x40024d:	repne scasb	al, byte ptr [rdi]
<Block for 0x400219, 3 bytes>
0x400219:	rep stosq	qword ptr [rdi], rax
<Block for 0x40024f, 49 bytes>
0x40024f:	mov	rax, rcx
0x400252:	not	rax
0x400255:	lea	rdx, [rax - 1]
0x400259:	mov	rax, qword ptr [rbp - 0x118]
0x400260:	add	rax, rdx
0x400263:	mov	dword ptr [rax], 0x6e69622f
0x400269:	mov	byte ptr [rax + 4], 0
0x40026d:	mov	rax, qword ptr [rbp - 0x118]
0x400274:	mov	rdx, qword ptr [rbp - 0x120]
0x40027b:	mov	rdi, rax
0x40027e:	call	rdx
<Block for 0x40024d, 2 bytes>
0x40024d:	repne scasb	al, byte ptr [rdi]
<Block for 0x400280, 16 bytes>
0x400280:	nop	
0x400281:	mov	rax, qword ptr [rbp - 8]
0x400285:	xor	rax, qword ptr fs:[0x28]
0x40028e:	je	0x400295
<Block for 0x400295, 2 bytes>
0x400295:	leave	
0x400296:	ret	
<Block for 0x400290, 5 bytes>
0x400290:	call	0x500028
