<Block for 0x400152, 84 bytes>
0x400152:	endbr64	
0x400156:	push	rbp
0x400157:	mov	rbp, rsp
0x40015a:	sub	rsp, 0x90
0x400161:	mov	rax, qword ptr fs:[0x28]
0x40016a:	mov	qword ptr [rbp - 8], rax
0x40016e:	xor	eax, eax
0x400170:	mov	eax, 0x10
0x400175:	sub	rax, 1
0x400179:	add	rax, 0x6c
0x40017d:	mov	esi, 0x10
0x400182:	mov	edx, 0
0x400187:	div	rsi
0x40018a:	imul	rax, rax, 0x10
0x40018e:	mov	rdx, rax
0x400191:	and	rdx, 0xfffffffffffff000
0x400198:	mov	rcx, rsp
0x40019b:	sub	rcx, rdx
0x40019e:	mov	rdx, rcx
0x4001a1:	cmp	rsp, rdx
0x4001a4:	je	0x4001b8
<Block for 0x4001b8, 26 bytes>
0x4001b8:	mov	rdx, rax
0x4001bb:	and	edx, 0xfff
0x4001c1:	sub	rsp, rdx
0x4001c4:	mov	rdx, rax
0x4001c7:	and	edx, 0xfff
0x4001cd:	test	rdx, rdx
0x4001d0:	je	0x4001e2
<Block for 0x4001a6, 18 bytes>
0x4001a6:	sub	rsp, 0x1000
0x4001ad:	or	qword ptr [rsp + 0xff8], 0
0x4001b6:	jmp	0x4001a1
<Block for 0x4001e2, 41 bytes>
0x4001e2:	mov	rax, rsp
0x4001e5:	add	rax, 0xf
0x4001e9:	shr	rax, 4
0x4001ed:	shl	rax, 4
0x4001f1:	mov	qword ptr [rbp - 0x78], rax
0x4001f5:	mov	rax, qword ptr [rbp - 0x78]
0x4001f9:	mov	edx, 0x63
0x4001fe:	mov	esi, 0x41
0x400203:	mov	rdi, rax
0x400206:	call	0x500000
<Block for 0x4001d2, 57 bytes>
0x4001d2:	and	eax, 0xfff
0x4001d7:	sub	rax, 8
0x4001db:	add	rax, rsp
0x4001de:	or	qword ptr [rax], 0
0x4001e2:	mov	rax, rsp
0x4001e5:	add	rax, 0xf
0x4001e9:	shr	rax, 4
0x4001ed:	shl	rax, 4
0x4001f1:	mov	qword ptr [rbp - 0x78], rax
0x4001f5:	mov	rax, qword ptr [rbp - 0x78]
0x4001f9:	mov	edx, 0x63
0x4001fe:	mov	esi, 0x41
0x400203:	mov	rdi, rax
0x400206:	call	0x500000
<Block for 0x4001a1, 5 bytes>
0x4001a1:	cmp	rsp, rdx
0x4001a4:	je	0x4001b8
<Block for 0x40020b, 21 bytes>
0x40020b:	mov	rax, qword ptr [rbp - 0x78]
0x40020f:	add	rax, 0x63
0x400213:	mov	byte ptr [rax], 0
0x400216:	mov	eax, dword ptr [rip + 0xffe04]
0x40021c:	test	eax, eax
0x40021e:	je	0x40022e
<Block for 0x40022e, 33 bytes>
0x40022e:	mov	rax, qword ptr [rbp - 0x78]
0x400232:	mov	qword ptr [rbp - 0x88], rax
0x400239:	lea	rax, [rbp - 0x70]
0x40023d:	mov	edx, 0x63
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500000
<Block for 0x400220, 12 bytes>
0x400220:	lea	rdi, [rip + 0x1f4]
0x400227:	call	0x500010
<Block for 0x40024f, 14 bytes>
0x40024f:	mov	byte ptr [rbp - 0xd], 0
0x400253:	mov	qword ptr [rbp - 0x80], 0
0x40025b:	jmp	0x400280
<Block for 0x40022c, 2 bytes>
0x40022c:	jmp	0x400239
<Block for 0x400280, 7 bytes>
0x400280:	cmp	qword ptr [rbp - 0x80], 0x63
0x400285:	jbe	0x40025d
<Block for 0x400239, 22 bytes>
0x400239:	lea	rax, [rbp - 0x70]
0x40023d:	mov	edx, 0x63
0x400242:	mov	esi, 0x43
0x400247:	mov	rdi, rax
0x40024a:	call	0x500000
<Block for 0x40025d, 42 bytes>
0x40025d:	mov	rdx, qword ptr [rbp - 0x88]
0x400264:	mov	rax, qword ptr [rbp - 0x80]
0x400268:	add	rax, rdx
0x40026b:	movzx	eax, byte ptr [rax]
0x40026e:	lea	rcx, [rbp - 0x70]
0x400272:	mov	rdx, qword ptr [rbp - 0x80]
0x400276:	add	rdx, rcx
0x400279:	mov	byte ptr [rdx], al
0x40027b:	add	qword ptr [rbp - 0x80], 1
0x400280:	cmp	qword ptr [rbp - 0x80], 0x63
0x400285:	jbe	0x40025d
<Block for 0x400287, 16 bytes>
0x400287:	mov	byte ptr [rbp - 0xd], 0
0x40028b:	lea	rax, [rbp - 0x70]
0x40028f:	mov	rdi, rax
0x400292:	call	0x500010
<Block for 0x400297, 16 bytes>
0x400297:	nop	
0x400298:	mov	rax, qword ptr [rbp - 8]
0x40029c:	xor	rax, qword ptr fs:[0x28]
0x4002a5:	je	0x4002ac
<Block for 0x4002ac, 2 bytes>
0x4002ac:	leave	
0x4002ad:	ret	
<Block for 0x4002a7, 5 bytes>
0x4002a7:	call	0x500018
