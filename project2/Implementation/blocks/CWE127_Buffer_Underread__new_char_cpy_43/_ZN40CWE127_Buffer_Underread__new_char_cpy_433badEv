<Block for 0x400051, 56 bytes>
0x400051:	endbr64	
0x400055:	push	rbp
0x400056:	mov	rbp, rsp
0x400059:	sub	rsp, 0xe0
0x400060:	mov	rax, qword ptr fs:[0x28]
0x400069:	mov	qword ptr [rbp - 8], rax
0x40006d:	xor	eax, eax
0x40006f:	mov	qword ptr [rbp - 0xd8], 0
0x40007a:	lea	rax, [rbp - 0xd8]
0x400081:	mov	rdi, rax
0x400084:	call	0x400000
<Block for 0x400089, 25 bytes>
0x400089:	lea	rax, [rbp - 0xd0]
0x400090:	mov	edx, 0xc7
0x400095:	mov	esi, 0x43
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500008
<Block for 0x4000a2, 29 bytes>
0x4000a2:	mov	byte ptr [rbp - 9], 0
0x4000a6:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000ad:	lea	rax, [rbp - 0xd0]
0x4000b4:	mov	rsi, rdx
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x4000bf, 15 bytes>
0x4000bf:	lea	rax, [rbp - 0xd0]
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500018
<Block for 0x4000ce, 16 bytes>
0x4000ce:	nop	
0x4000cf:	mov	rax, qword ptr [rbp - 8]
0x4000d3:	xor	rax, qword ptr fs:[0x28]
0x4000dc:	je	0x4000e3
<Block for 0x4000e3, 2 bytes>
0x4000e3:	leave	
0x4000e4:	ret	
<Block for 0x4000de, 5 bytes>
0x4000de:	call	0x500020
