<Block for 0x4000e2, 48 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	sub	rsp, 0x90
0x4000f1:	mov	rax, qword ptr fs:[0x28]
0x4000fa:	mov	qword ptr [rbp - 8], rax
0x4000fe:	xor	eax, eax
0x400100:	mov	qword ptr [rbp - 0x80], 0
0x400108:	mov	edi, 0x64
0x40010d:	call	0x500000
<Block for 0x400112, 26 bytes>
0x400112:	mov	qword ptr [rbp - 0x78], rax
0x400116:	mov	rax, qword ptr [rbp - 0x78]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x41
0x400124:	mov	rdi, rax
0x400127:	call	0x500008
<Block for 0x40012c, 41 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0x78]
0x400130:	add	rax, 0x63
0x400134:	mov	byte ptr [rax], 0
0x400137:	mov	rax, qword ptr [rbp - 0x78]
0x40013b:	mov	qword ptr [rbp - 0x80], rax
0x40013f:	lea	rax, [rbp - 0x70]
0x400143:	mov	edx, 0x63
0x400148:	mov	esi, 0x43
0x40014d:	mov	rdi, rax
0x400150:	call	0x500008
<Block for 0x400155, 25 bytes>
0x400155:	mov	byte ptr [rbp - 0xd], 0
0x400159:	mov	qword ptr [rbp - 0x88], 0
0x400164:	cmp	qword ptr [rbp - 0x88], 0x63
0x40016c:	ja	0x400199
<Block for 0x40016e, 43 bytes>
0x40016e:	mov	rdx, qword ptr [rbp - 0x80]
0x400172:	mov	rax, qword ptr [rbp - 0x88]
0x400179:	add	rax, rdx
0x40017c:	movzx	eax, byte ptr [rax]
0x40017f:	lea	rcx, [rbp - 0x70]
0x400183:	mov	rdx, qword ptr [rbp - 0x88]
0x40018a:	add	rdx, rcx
0x40018d:	mov	byte ptr [rdx], al
0x40018f:	add	qword ptr [rbp - 0x88], 1
0x400197:	jmp	0x400164
<Block for 0x400199, 16 bytes>
0x400199:	mov	byte ptr [rbp - 0xd], 0
0x40019d:	lea	rax, [rbp - 0x70]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500010
<Block for 0x400164, 10 bytes>
0x400164:	cmp	qword ptr [rbp - 0x88], 0x63
0x40016c:	ja	0x400199
<Block for 0x4001a9, 16 bytes>
0x4001a9:	nop	
0x4001aa:	mov	rax, qword ptr [rbp - 8]
0x4001ae:	xor	rax, qword ptr fs:[0x28]
0x4001b7:	je	0x4001be
<Block for 0x4001be, 2 bytes>
0x4001be:	leave	
0x4001bf:	ret	
<Block for 0x4001b9, 5 bytes>
0x4001b9:	call	0x500018
