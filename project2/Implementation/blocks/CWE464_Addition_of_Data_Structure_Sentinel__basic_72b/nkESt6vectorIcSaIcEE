<Block for 0x40006c, 48 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x20
0x400078:	mov	qword ptr [rbp - 0x18], rdi
0x40007c:	mov	rax, qword ptr fs:[0x28]
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	xor	eax, eax
0x40008b:	mov	rax, qword ptr [rbp - 0x18]
0x40008f:	mov	esi, 2
0x400094:	mov	rdi, rax
0x400097:	call	0x4000da
<Block for 0x40009c, 37 bytes>
0x40009c:	movzx	eax, byte ptr [rax]
0x40009f:	mov	byte ptr [rbp - 0xd], al
0x4000a2:	mov	byte ptr [rbp - 0xc], 0x78
0x4000a6:	movzx	eax, byte ptr [rbp - 0xd]
0x4000aa:	mov	byte ptr [rbp - 0xb], al
0x4000ad:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000b1:	mov	byte ptr [rbp - 9], 0
0x4000b5:	lea	rax, [rbp - 0xc]
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x500000
<Block for 0x4000c1, 16 bytes>
0x4000c1:	nop	
0x4000c2:	mov	rax, qword ptr [rbp - 8]
0x4000c6:	xor	rax, qword ptr fs:[0x28]
0x4000cf:	je	0x4000d6
<Block for 0x4000d6, 2 bytes>
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000d1, 5 bytes>
0x4000d1:	call	0x500008
