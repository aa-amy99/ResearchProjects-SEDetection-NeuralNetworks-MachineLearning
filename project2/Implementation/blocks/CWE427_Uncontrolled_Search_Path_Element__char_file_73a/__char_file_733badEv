<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x178
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x160]
0x400026:	mov	rdi, rax
0x400029:	call	0x40049a
<Block for 0x40002e, 52 bytes>
0x40002e:	movabs	rax, 0x3d48544150
0x400038:	mov	edx, 0
0x40003d:	mov	qword ptr [rbp - 0x120], rax
0x400044:	mov	qword ptr [rbp - 0x118], rdx
0x40004b:	lea	rdx, [rbp - 0x110]
0x400052:	mov	eax, 0
0x400057:	mov	ecx, 0x1d
0x40005c:	mov	rdi, rdx
0x40005f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400062, 39 bytes>
0x400062:	mov	rdx, rdi
0x400065:	mov	word ptr [rdx], ax
0x400068:	add	rdx, 2
0x40006c:	lea	rax, [rbp - 0x120]
0x400073:	mov	qword ptr [rbp - 0x178], rax
0x40007a:	mov	rax, qword ptr [rbp - 0x178]
0x400081:	mov	rdi, rax
0x400084:	call	0x500000
<Block for 0x40005f, 3 bytes>
0x40005f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400089, 29 bytes>
0x400089:	mov	qword ptr [rbp - 0x170], rax
0x400090:	mov	eax, 0xfa
0x400095:	sub	rax, qword ptr [rbp - 0x170]
0x40009c:	cmp	rax, 1
0x4000a0:	jbe	0x400139
<Block for 0x400139, 25 bytes>
0x400139:	lea	rdx, [rbp - 0x178]
0x400140:	lea	rax, [rbp - 0x160]
0x400147:	mov	rsi, rdx
0x40014a:	mov	rdi, rax
0x40014d:	call	0x400594
<Block for 0x4000a6, 19 bytes>
0x4000a6:	lea	rsi, [rip + 0x338]
0x4000ad:	lea	rdi, [rip + 0x333]
0x4000b4:	call	0x500008
<Block for 0x400152, 25 bytes>
0x400152:	lea	rdx, [rbp - 0x178]
0x400159:	lea	rax, [rbp - 0x160]
0x400160:	mov	rsi, rdx
0x400163:	mov	rdi, rax
0x400166:	call	0x400594
<Block for 0x4000b9, 17 bytes>
0x4000b9:	mov	qword ptr [rbp - 0x168], rax
0x4000c0:	cmp	qword ptr [rbp - 0x168], 0
0x4000c8:	je	0x400139
<Block for 0x40016b, 25 bytes>
0x40016b:	lea	rdx, [rbp - 0x178]
0x400172:	lea	rax, [rbp - 0x160]
0x400179:	mov	rsi, rdx
0x40017c:	mov	rdi, rax
0x40017f:	call	0x400594
<Block for 0x4000ca, 54 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 0x170]
0x4000d1:	mov	edx, 0xfa
0x4000d6:	sub	edx, eax
0x4000d8:	mov	eax, edx
0x4000da:	mov	esi, eax
0x4000dc:	mov	rdx, qword ptr [rbp - 0x178]
0x4000e3:	mov	rax, qword ptr [rbp - 0x170]
0x4000ea:	lea	rcx, [rdx + rax]
0x4000ee:	mov	rax, qword ptr [rbp - 0x168]
0x4000f5:	mov	rdx, rax
0x4000f8:	mov	rdi, rcx
0x4000fb:	call	0x500010
<Block for 0x400184, 25 bytes>
0x400184:	lea	rdx, [rbp - 0x160]
0x40018b:	lea	rax, [rbp - 0x140]
0x400192:	mov	rsi, rdx
0x400195:	mov	rdi, rax
0x400198:	call	0x4005ce
<Block for 0x400100, 10 bytes>
0x400100:	test	rax, rax
0x400103:	sete	al
0x400106:	test	al, al
0x400108:	je	0x40012a
<Block for 0x40019d, 15 bytes>
0x40019d:	lea	rax, [rbp - 0x140]
0x4001a4:	mov	rdi, rax
0x4001a7:	call	0x500028
<Block for 0x40012a, 15 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x168]
0x400131:	mov	rdi, rax
0x400134:	call	0x500020
<Block for 0x40010a, 12 bytes>
0x40010a:	lea	rdi, [rip + 0x2e4]
0x400111:	call	0x500018
<Block for 0x4001ac, 15 bytes>
0x4001ac:	lea	rax, [rbp - 0x140]
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x4004ba
<Block for 0x400116, 35 bytes>
0x400116:	mov	rdx, qword ptr [rbp - 0x178]
0x40011d:	mov	rax, qword ptr [rbp - 0x170]
0x400124:	add	rax, rdx
0x400127:	mov	byte ptr [rax], 0
0x40012a:	mov	rax, qword ptr [rbp - 0x168]
0x400131:	mov	rdi, rax
0x400134:	call	0x500020
<Block for 0x4001bb, 15 bytes>
0x4001bb:	lea	rax, [rbp - 0x160]
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x4004ba
<Block for 0x4001ca, 16 bytes>
0x4001ca:	nop	
0x4001cb:	mov	rax, qword ptr [rbp - 0x18]
0x4001cf:	xor	rax, qword ptr fs:[0x28]
0x4001d8:	je	0x40021a
<Block for 0x40021a, 10 bytes>
0x40021a:	add	rsp, 0x178
0x400221:	pop	rbx
0x400222:	pop	rbp
0x400223:	ret	
<Block for 0x4001da, 2 bytes>
0x4001da:	jmp	0x400215
<Block for 0x400215, 5 bytes>
0x400215:	call	0x500038
