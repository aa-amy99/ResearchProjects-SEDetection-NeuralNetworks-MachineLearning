<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	edi, 0x64
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	qword ptr [rbp - 0x30], rax
0x40001b:	cmp	qword ptr [rbp - 0x30], 0
0x400020:	jne	0x40002c
<Block for 0x400022, 10 bytes>
0x400022:	mov	edi, 0xffffffff
0x400027:	call	0x500008
<Block for 0x40002c, 19 bytes>
0x40002c:	mov	rax, qword ptr [rbp - 0x30]
0x400030:	mov	byte ptr [rax], 0
0x400033:	mov	rax, qword ptr [rbp - 0x30]
0x400037:	mov	rdi, rax
0x40003a:	call	0x500010
<Block for 0x40003f, 19 bytes>
0x40003f:	mov	qword ptr [rbp - 0x28], rax
0x400043:	mov	eax, 0x64
0x400048:	sub	rax, qword ptr [rbp - 0x28]
0x40004c:	cmp	rax, 1
0x400050:	jbe	0x4000ca
<Block for 0x4000ca, 10 bytes>
0x4000ca:	mov	edi, 8
0x4000cf:	call	0x500038
<Block for 0x400052, 19 bytes>
0x400052:	lea	rsi, [rip + 0x238]
0x400059:	lea	rdi, [rip + 0x233]
0x400060:	call	0x500018
<Block for 0x4000d4, 11 bytes>
0x4000d4:	mov	rbx, rax
0x4000d7:	mov	rdi, rbx
0x4000da:	call	0x400264
<Block for 0x400065, 11 bytes>
0x400065:	mov	qword ptr [rbp - 0x20], rax
0x400069:	cmp	qword ptr [rbp - 0x20], 0
0x40006e:	je	0x4000ca
<Block for 0x4000df, 30 bytes>
0x4000df:	mov	qword ptr [rbp - 0x18], rbx
0x4000e3:	mov	rax, qword ptr [rbp - 0x18]
0x4000e7:	mov	rax, qword ptr [rax]
0x4000ea:	mov	rcx, qword ptr [rax]
0x4000ed:	mov	rdx, qword ptr [rbp - 0x30]
0x4000f1:	mov	rax, qword ptr [rbp - 0x18]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	rcx
<Block for 0x400070, 42 bytes>
0x400070:	mov	rax, qword ptr [rbp - 0x28]
0x400074:	mov	edx, 0x64
0x400079:	sub	edx, eax
0x40007b:	mov	eax, edx
0x40007d:	mov	esi, eax
0x40007f:	mov	rdx, qword ptr [rbp - 0x30]
0x400083:	mov	rax, qword ptr [rbp - 0x28]
0x400087:	lea	rcx, [rdx + rax]
0x40008b:	mov	rax, qword ptr [rbp - 0x20]
0x40008f:	mov	rdx, rax
0x400092:	mov	rdi, rcx
0x400095:	call	0x500020
<Block for 0x4000fd, 9 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x18]
0x400101:	test	rax, rax
0x400104:	je	0x400113
<Block for 0x40009a, 10 bytes>
0x40009a:	test	rax, rax
0x40009d:	sete	al
0x4000a0:	test	al, al
0x4000a2:	je	0x4000be
<Block for 0x400113, 8 bytes>
0x400113:	nop	
0x400114:	add	rsp, 0x28
0x400118:	pop	rbx
0x400119:	pop	rbp
0x40011a:	ret	
<Block for 0x400106, 13 bytes>
0x400106:	mov	esi, 8
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500040
<Block for 0x4000be, 12 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 0x20]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500030
<Block for 0x4000a4, 12 bytes>
0x4000a4:	lea	rdi, [rip + 0x1f6]
0x4000ab:	call	0x500028
<Block for 0x4000b0, 26 bytes>
0x4000b0:	mov	rdx, qword ptr [rbp - 0x30]
0x4000b4:	mov	rax, qword ptr [rbp - 0x28]
0x4000b8:	add	rax, rdx
0x4000bb:	mov	byte ptr [rax], 0
0x4000be:	mov	rax, qword ptr [rbp - 0x20]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500030
