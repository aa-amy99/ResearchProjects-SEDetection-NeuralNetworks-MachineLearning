<Block for 0x4000bf, 57 bytes>
0x4000bf:	endbr64	
0x4000c3:	push	rbp
0x4000c4:	mov	rbp, rsp
0x4000c7:	sub	rsp, 0x50
0x4000cb:	mov	qword ptr [rbp - 0x48], rdi
0x4000cf:	mov	rax, qword ptr fs:[0x28]
0x4000d8:	mov	qword ptr [rbp - 8], rax
0x4000dc:	xor	eax, eax
0x4000de:	mov	dword ptr [rbp - 0x3c], 2
0x4000e5:	lea	rdx, [rbp - 0x3c]
0x4000e9:	mov	rax, qword ptr [rbp - 0x48]
0x4000ed:	mov	rsi, rdx
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x4002bc
<Block for 0x4000f8, 51 bytes>
0x4000f8:	mov	eax, dword ptr [rax]
0x4000fa:	mov	dword ptr [rbp - 0x34], eax
0x4000fd:	mov	qword ptr [rbp - 0x30], 0
0x400105:	mov	qword ptr [rbp - 0x28], 0
0x40010d:	mov	qword ptr [rbp - 0x20], 0
0x400115:	mov	qword ptr [rbp - 0x18], 0
0x40011d:	mov	qword ptr [rbp - 0x10], 0
0x400125:	cmp	dword ptr [rbp - 0x34], 9
0x400129:	jg	0x40015b
<Block for 0x40012b, 26 bytes>
0x40012b:	mov	eax, dword ptr [rbp - 0x34]
0x40012e:	cdqe	
0x400130:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400138:	mov	dword ptr [rbp - 0x38], 0
0x40013f:	cmp	dword ptr [rbp - 0x38], 9
0x400143:	jg	0x400167
<Block for 0x40015b, 12 bytes>
0x40015b:	lea	rdi, [rip + 0x116]
0x400162:	call	0x500008
<Block for 0x400145, 16 bytes>
0x400145:	mov	eax, dword ptr [rbp - 0x38]
0x400148:	cdqe	
0x40014a:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40014e:	mov	edi, eax
0x400150:	call	0x500000
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x400155, 6 bytes>
0x400155:	add	dword ptr [rbp - 0x38], 1
0x400159:	jmp	0x40013f
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500010
<Block for 0x40013f, 6 bytes>
0x40013f:	cmp	dword ptr [rbp - 0x38], 9
0x400143:	jg	0x400167
