<Block for 0x400000, 65 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x4c]
0x400020:	mov	qword ptr [rbp - 0x38], rax
0x400024:	lea	rax, [rbp - 0x4c]
0x400028:	mov	qword ptr [rbp - 0x30], rax
0x40002c:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400033:	mov	rax, qword ptr [rbp - 0x38]
0x400037:	mov	eax, dword ptr [rax]
0x400039:	mov	dword ptr [rbp - 0x48], eax
0x40003c:	call	0x500000
<Block for 0x400041, 7 bytes>
0x400041:	and	eax, 1
0x400044:	test	eax, eax
0x400046:	je	0x400065
<Block for 0x400065, 5 bytes>
0x400065:	call	0x500000
<Block for 0x400048, 5 bytes>
0x400048:	call	0x500000
<Block for 0x40006a, 10 bytes>
0x40006a:	shl	eax, 0x1e
0x40006d:	mov	ebx, eax
0x40006f:	call	0x500000
<Block for 0x40004d, 10 bytes>
0x40004d:	shl	eax, 0x1e
0x400050:	mov	ebx, eax
0x400052:	call	0x500000
<Block for 0x400074, 10 bytes>
0x400074:	shl	eax, 0xf
0x400077:	xor	ebx, eax
0x400079:	call	0x500000
<Block for 0x400057, 10 bytes>
0x400057:	shl	eax, 0xf
0x40005a:	xor	ebx, eax
0x40005c:	call	0x500000
<Block for 0x40007e, 50 bytes>
0x40007e:	xor	eax, ebx
0x400080:	not	eax
0x400082:	mov	dword ptr [rbp - 0x48], eax
0x400085:	mov	rax, qword ptr [rbp - 0x38]
0x400089:	mov	edx, dword ptr [rbp - 0x48]
0x40008c:	mov	dword ptr [rax], edx
0x40008e:	mov	rax, qword ptr [rbp - 0x30]
0x400092:	mov	eax, dword ptr [rax]
0x400094:	mov	dword ptr [rbp - 0x44], eax
0x400097:	mov	eax, dword ptr [rbp - 0x44]
0x40009a:	cdqe	
0x40009c:	shl	rax, 2
0x4000a0:	mov	qword ptr [rbp - 0x28], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x28]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
<Block for 0x400061, 4 bytes>
0x400061:	xor	eax, ebx
0x400063:	jmp	0x400082
<Block for 0x4000b0, 23 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x20], rax
0x4000b4:	mov	qword ptr [rbp - 0x40], 0
0x4000bc:	mov	eax, dword ptr [rbp - 0x44]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x40], rax
0x4000c5:	jae	0x4000e7
<Block for 0x400082, 46 bytes>
0x400082:	mov	dword ptr [rbp - 0x48], eax
0x400085:	mov	rax, qword ptr [rbp - 0x38]
0x400089:	mov	edx, dword ptr [rbp - 0x48]
0x40008c:	mov	dword ptr [rax], edx
0x40008e:	mov	rax, qword ptr [rbp - 0x30]
0x400092:	mov	eax, dword ptr [rax]
0x400094:	mov	dword ptr [rbp - 0x44], eax
0x400097:	mov	eax, dword ptr [rbp - 0x44]
0x40009a:	cdqe	
0x40009c:	shl	rax, 2
0x4000a0:	mov	qword ptr [rbp - 0x28], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x28]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
<Block for 0x4000c7, 32 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x40]
0x4000cb:	lea	rdx, [rax*4]
0x4000d3:	mov	rax, qword ptr [rbp - 0x20]
0x4000d7:	add	rax, rdx
0x4000da:	mov	dword ptr [rax], 0
0x4000e0:	add	qword ptr [rbp - 0x40], 1
0x4000e5:	jmp	0x4000bc
<Block for 0x4000e7, 13 bytes>
0x4000e7:	mov	rax, qword ptr [rbp - 0x20]
0x4000eb:	mov	eax, dword ptr [rax]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500010
<Block for 0x4000bc, 11 bytes>
0x4000bc:	mov	eax, dword ptr [rbp - 0x44]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x40], rax
0x4000c5:	jae	0x4000e7
<Block for 0x4000f4, 7 bytes>
0x4000f4:	cmp	qword ptr [rbp - 0x20], 0
0x4000f9:	je	0x400107
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 0x18]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x4000fb, 12 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x20]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
<Block for 0x40011c, 7 bytes>
0x40011c:	add	rsp, 0x48
0x400120:	pop	rbx
0x400121:	pop	rbp
0x400122:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500020
