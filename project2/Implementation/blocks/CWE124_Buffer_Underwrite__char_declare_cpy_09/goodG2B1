<Block for 0x4000ad, 55 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0xf0
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	lea	rax, [rbp - 0xe0]
0x4000d2:	mov	edx, 0x63
0x4000d7:	mov	esi, 0x41
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500000
<Block for 0x4000e4, 14 bytes>
0x4000e4:	mov	byte ptr [rbp - 0x7d], 0
0x4000e8:	mov	eax, dword ptr [rip + 0xfff3a]
0x4000ee:	test	eax, eax
0x4000f0:	je	0x400100
<Block for 0x400100, 36 bytes>
0x400100:	lea	rax, [rbp - 0xe0]
0x400107:	mov	qword ptr [rbp - 0xe8], rax
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	edx, 0x63
0x400117:	mov	esi, 0x43
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x4000f2, 12 bytes>
0x4000f2:	lea	rdi, [rip + 0x133]
0x4000f9:	call	0x500018
<Block for 0x400124, 26 bytes>
0x400124:	mov	byte ptr [rbp - 0xd], 0
0x400128:	lea	rdx, [rbp - 0x70]
0x40012c:	mov	rax, qword ptr [rbp - 0xe8]
0x400133:	mov	rsi, rdx
0x400136:	mov	rdi, rax
0x400139:	call	0x500010
<Block for 0x4000fe, 2 bytes>
0x4000fe:	jmp	0x40010e
<Block for 0x40013e, 15 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0xe8]
0x400145:	mov	rdi, rax
0x400148:	call	0x500018
<Block for 0x40010e, 22 bytes>
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	edx, 0x63
0x400117:	mov	esi, 0x43
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500020
