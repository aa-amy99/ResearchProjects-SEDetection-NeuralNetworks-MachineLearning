<Block for 0x40006b, 31 bytes>
0x40006b:	endbr64	
0x40006f:	push	rbp
0x400070:	mov	rbp, rsp
0x400073:	sub	rsp, 0x10
0x400077:	mov	qword ptr [rbp - 8], 0
0x40007f:	mov	eax, dword ptr [rip + 0xfff7b]
0x400085:	cmp	eax, 5
0x400088:	jne	0x4000b9
<Block for 0x40008a, 10 bytes>
0x40008a:	mov	edi, 8
0x40008f:	call	0x500008
<Block for 0x4000b9, 11 bytes>
0x4000b9:	mov	eax, dword ptr [rip + 0xfff41]
0x4000bf:	cmp	eax, 5
0x4000c2:	je	0x4000d0
<Block for 0x400094, 24 bytes>
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	mov	rax, qword ptr [rbp - 8]
0x40009c:	mov	qword ptr [rax], 5
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	test	rax, rax
0x4000aa:	je	0x4000b9
<Block for 0x4000d0, 3 bytes>
0x4000d0:	nop	
0x4000d1:	leave	
0x4000d2:	ret	
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rdi, [rip + 0x130]
0x4000cb:	call	0x500020
<Block for 0x4000ac, 13 bytes>
0x4000ac:	mov	esi, 8
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500010
