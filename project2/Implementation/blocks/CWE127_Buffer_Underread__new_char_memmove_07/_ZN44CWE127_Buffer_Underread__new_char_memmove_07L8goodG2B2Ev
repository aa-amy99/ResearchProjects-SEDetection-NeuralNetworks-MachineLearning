<Block for 0x40018e, 46 bytes>
0x40018e:	endbr64	
0x400192:	push	rbp
0x400193:	mov	rbp, rsp
0x400196:	add	rsp, -0x80
0x40019a:	mov	rax, qword ptr fs:[0x28]
0x4001a3:	mov	qword ptr [rbp - 8], rax
0x4001a7:	xor	eax, eax
0x4001a9:	mov	qword ptr [rbp - 0x80], 0
0x4001b1:	mov	eax, dword ptr [rip + 0xad]
0x4001b7:	cmp	eax, 5
0x4001ba:	jne	0x4001f3
<Block for 0x4001bc, 10 bytes>
0x4001bc:	mov	edi, 0x64
0x4001c1:	call	0x500000
<Block for 0x4001f3, 22 bytes>
0x4001f3:	lea	rax, [rbp - 0x70]
0x4001f7:	mov	edx, 0x63
0x4001fc:	mov	esi, 0x43
0x400201:	mov	rdi, rax
0x400204:	call	0x500008
<Block for 0x4001c6, 26 bytes>
0x4001c6:	mov	qword ptr [rbp - 0x78], rax
0x4001ca:	mov	rax, qword ptr [rbp - 0x78]
0x4001ce:	mov	edx, 0x63
0x4001d3:	mov	esi, 0x41
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500008
<Block for 0x400209, 28 bytes>
0x400209:	mov	byte ptr [rbp - 0xd], 0
0x40020d:	mov	rcx, qword ptr [rbp - 0x80]
0x400211:	lea	rax, [rbp - 0x70]
0x400215:	mov	edx, 0x64
0x40021a:	mov	rsi, rcx
0x40021d:	mov	rdi, rax
0x400220:	call	0x500010
<Block for 0x4001e0, 41 bytes>
0x4001e0:	mov	rax, qword ptr [rbp - 0x78]
0x4001e4:	add	rax, 0x63
0x4001e8:	mov	byte ptr [rax], 0
0x4001eb:	mov	rax, qword ptr [rbp - 0x78]
0x4001ef:	mov	qword ptr [rbp - 0x80], rax
0x4001f3:	lea	rax, [rbp - 0x70]
0x4001f7:	mov	edx, 0x63
0x4001fc:	mov	esi, 0x43
0x400201:	mov	rdi, rax
0x400204:	call	0x500008
<Block for 0x400225, 16 bytes>
0x400225:	mov	byte ptr [rbp - 0xd], 0
0x400229:	lea	rax, [rbp - 0x70]
0x40022d:	mov	rdi, rax
0x400230:	call	0x500018
<Block for 0x400235, 16 bytes>
0x400235:	nop	
0x400236:	mov	rax, qword ptr [rbp - 8]
0x40023a:	xor	rax, qword ptr fs:[0x28]
0x400243:	je	0x40024a
<Block for 0x40024a, 2 bytes>
0x40024a:	leave	
0x40024b:	ret	
<Block for 0x400245, 5 bytes>
0x400245:	call	0x500020
