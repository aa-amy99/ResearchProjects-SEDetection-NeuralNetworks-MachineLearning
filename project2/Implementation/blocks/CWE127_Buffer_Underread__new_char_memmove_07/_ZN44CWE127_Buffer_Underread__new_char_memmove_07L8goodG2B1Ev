<Block for 0x4000c2, 46 bytes>
0x4000c2:	endbr64	
0x4000c6:	push	rbp
0x4000c7:	mov	rbp, rsp
0x4000ca:	add	rsp, -0x80
0x4000ce:	mov	rax, qword ptr fs:[0x28]
0x4000d7:	mov	qword ptr [rbp - 8], rax
0x4000db:	xor	eax, eax
0x4000dd:	mov	qword ptr [rbp - 0x80], 0
0x4000e5:	mov	eax, dword ptr [rip + 0x179]
0x4000eb:	cmp	eax, 5
0x4000ee:	je	0x4000fe
<Block for 0x4000fe, 10 bytes>
0x4000fe:	mov	edi, 0x64
0x400103:	call	0x500000
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rdi, [rip + 0x171]
0x4000f7:	call	0x500018
<Block for 0x400108, 26 bytes>
0x400108:	mov	qword ptr [rbp - 0x78], rax
0x40010c:	mov	rax, qword ptr [rbp - 0x78]
0x400110:	mov	edx, 0x63
0x400115:	mov	esi, 0x41
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500008
<Block for 0x4000fc, 2 bytes>
0x4000fc:	jmp	0x400135
<Block for 0x400122, 41 bytes>
0x400122:	mov	rax, qword ptr [rbp - 0x78]
0x400126:	add	rax, 0x63
0x40012a:	mov	byte ptr [rax], 0
0x40012d:	mov	rax, qword ptr [rbp - 0x78]
0x400131:	mov	qword ptr [rbp - 0x80], rax
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	edx, 0x63
0x40013e:	mov	esi, 0x43
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x400135, 22 bytes>
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	edx, 0x63
0x40013e:	mov	esi, 0x43
0x400143:	mov	rdi, rax
0x400146:	call	0x500008
<Block for 0x40014b, 28 bytes>
0x40014b:	mov	byte ptr [rbp - 0xd], 0
0x40014f:	mov	rcx, qword ptr [rbp - 0x80]
0x400153:	lea	rax, [rbp - 0x70]
0x400157:	mov	edx, 0x64
0x40015c:	mov	rsi, rcx
0x40015f:	mov	rdi, rax
0x400162:	call	0x500010
<Block for 0x400167, 16 bytes>
0x400167:	mov	byte ptr [rbp - 0xd], 0
0x40016b:	lea	rax, [rbp - 0x70]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500018
<Block for 0x400177, 16 bytes>
0x400177:	nop	
0x400178:	mov	rax, qword ptr [rbp - 8]
0x40017c:	xor	rax, qword ptr fs:[0x28]
0x400185:	je	0x40018c
<Block for 0x40018c, 2 bytes>
0x40018c:	leave	
0x40018d:	ret	
<Block for 0x400187, 5 bytes>
0x400187:	call	0x500020
