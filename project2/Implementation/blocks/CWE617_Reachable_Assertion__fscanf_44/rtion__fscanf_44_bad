<Block for 0x400037, 76 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	sub	rsp, 0x20
0x400043:	mov	rax, qword ptr fs:[0x28]
0x40004c:	mov	qword ptr [rbp - 8], rax
0x400050:	xor	eax, eax
0x400052:	lea	rax, [rip - 0x59]
0x400059:	mov	qword ptr [rbp - 0x10], rax
0x40005d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400064:	mov	rax, qword ptr [rip + 0xfff9d]
0x40006b:	lea	rdx, [rbp - 0x14]
0x40006f:	lea	rsi, [rip + 0xee]
0x400076:	mov	rdi, rax
0x400079:	mov	eax, 0
0x40007e:	call	0x500010
<Block for 0x400083, 11 bytes>
0x400083:	mov	eax, dword ptr [rbp - 0x14]
0x400086:	mov	rdx, qword ptr [rbp - 0x10]
0x40008a:	mov	edi, eax
0x40008c:	call	rdx
<Block for 0x40008e, 16 bytes>
0x40008e:	nop	
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	xor	rax, qword ptr fs:[0x28]
0x40009c:	je	0x4000a3
<Block for 0x4000a3, 2 bytes>
0x4000a3:	leave	
0x4000a4:	ret	
<Block for 0x40009e, 5 bytes>
0x40009e:	call	0x500018
