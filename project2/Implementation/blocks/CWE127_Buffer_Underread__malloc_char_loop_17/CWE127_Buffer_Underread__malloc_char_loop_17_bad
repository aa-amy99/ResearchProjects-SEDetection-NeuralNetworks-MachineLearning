<Block for 0x400000, 53 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	dword ptr [rbp - 0x8c], 0
0x400033:	jmp	0x40008b
<Block for 0x40008b, 9 bytes>
0x40008b:	cmp	dword ptr [rbp - 0x8c], 0
0x400092:	jle	0x400035
<Block for 0x400035, 10 bytes>
0x400035:	mov	edi, 0x64
0x40003a:	call	0x500000
<Block for 0x400094, 22 bytes>
0x400094:	lea	rax, [rbp - 0x70]
0x400098:	mov	edx, 0x63
0x40009d:	mov	esi, 0x43
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500010
<Block for 0x40003f, 11 bytes>
0x40003f:	mov	qword ptr [rbp - 0x78], rax
0x400043:	cmp	qword ptr [rbp - 0x78], 0
0x400048:	jne	0x400054
<Block for 0x4000aa, 14 bytes>
0x4000aa:	mov	byte ptr [rbp - 0xd], 0
0x4000ae:	mov	qword ptr [rbp - 0x80], 0
0x4000b6:	jmp	0x4000db
<Block for 0x40004a, 10 bytes>
0x40004a:	mov	edi, 0xffffffff
0x40004f:	call	0x500008
<Block for 0x400054, 22 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x78]
0x400058:	mov	edx, 0x63
0x40005d:	mov	esi, 0x41
0x400062:	mov	rdi, rax
0x400065:	call	0x500010
<Block for 0x4000db, 7 bytes>
0x4000db:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000e0:	jbe	0x4000b8
<Block for 0x40006a, 42 bytes>
0x40006a:	mov	rax, qword ptr [rbp - 0x78]
0x40006e:	add	rax, 0x63
0x400072:	mov	byte ptr [rax], 0
0x400075:	mov	rax, qword ptr [rbp - 0x78]
0x400079:	sub	rax, 8
0x40007d:	mov	qword ptr [rbp - 0x88], rax
0x400084:	add	dword ptr [rbp - 0x8c], 1
0x40008b:	cmp	dword ptr [rbp - 0x8c], 0
0x400092:	jle	0x400035
<Block for 0x4000b8, 42 bytes>
0x4000b8:	mov	rdx, qword ptr [rbp - 0x88]
0x4000bf:	mov	rax, qword ptr [rbp - 0x80]
0x4000c3:	add	rax, rdx
0x4000c6:	movzx	eax, byte ptr [rax]
0x4000c9:	lea	rcx, [rbp - 0x70]
0x4000cd:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d1:	add	rdx, rcx
0x4000d4:	mov	byte ptr [rdx], al
0x4000d6:	add	qword ptr [rbp - 0x80], 1
0x4000db:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000e0:	jbe	0x4000b8
<Block for 0x4000e2, 16 bytes>
0x4000e2:	mov	byte ptr [rbp - 0xd], 0
0x4000e6:	lea	rax, [rbp - 0x70]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500018
<Block for 0x4000f2, 16 bytes>
0x4000f2:	nop	
0x4000f3:	mov	rax, qword ptr [rbp - 8]
0x4000f7:	xor	rax, qword ptr fs:[0x28]
0x400100:	je	0x400107
<Block for 0x400107, 2 bytes>
0x400107:	leave	
0x400108:	ret	
<Block for 0x400102, 5 bytes>
0x400102:	call	0x500020
