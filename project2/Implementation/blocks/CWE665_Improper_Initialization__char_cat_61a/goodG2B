<Block for 0x400098, 59 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0xf0
0x4000a7:	mov	rax, qword ptr fs:[0x28]
0x4000b0:	mov	qword ptr [rbp - 8], rax
0x4000b4:	xor	eax, eax
0x4000b6:	lea	rax, [rbp - 0xe0]
0x4000bd:	mov	qword ptr [rbp - 0xe8], rax
0x4000c4:	mov	rax, qword ptr [rbp - 0xe8]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500028
<Block for 0x4000d3, 29 bytes>
0x4000d3:	mov	qword ptr [rbp - 0xe8], rax
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	edx, 0x63
0x4000e3:	mov	esi, 0x43
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500008
<Block for 0x4000f0, 26 bytes>
0x4000f0:	mov	byte ptr [rbp - 0xd], 0
0x4000f4:	lea	rdx, [rbp - 0x70]
0x4000f8:	mov	rax, qword ptr [rbp - 0xe8]
0x4000ff:	mov	rsi, rdx
0x400102:	mov	rdi, rax
0x400105:	call	0x500010
<Block for 0x40010a, 15 bytes>
0x40010a:	mov	rax, qword ptr [rbp - 0xe8]
0x400111:	mov	rdi, rax
0x400114:	call	0x500018
<Block for 0x400119, 16 bytes>
0x400119:	nop	
0x40011a:	mov	rax, qword ptr [rbp - 8]
0x40011e:	xor	rax, qword ptr fs:[0x28]
0x400127:	je	0x40012e
<Block for 0x40012e, 2 bytes>
0x40012e:	leave	
0x40012f:	ret	
<Block for 0x400129, 5 bytes>
0x400129:	call	0x500020
