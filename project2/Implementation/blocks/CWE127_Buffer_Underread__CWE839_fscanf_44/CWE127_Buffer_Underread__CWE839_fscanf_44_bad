<Block for 0x400081, 76 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x20
0x40008d:	mov	rax, qword ptr fs:[0x28]
0x400096:	mov	qword ptr [rbp - 8], rax
0x40009a:	xor	eax, eax
0x40009c:	lea	rax, [rip - 0xa3]
0x4000a3:	mov	qword ptr [rbp - 0x10], rax
0x4000a7:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000ae:	mov	rax, qword ptr [rip + 0xfff63]
0x4000b5:	lea	rdx, [rbp - 0x14]
0x4000b9:	lea	rsi, [rip + 0x217]
0x4000c0:	mov	rdi, rax
0x4000c3:	mov	eax, 0
0x4000c8:	call	0x500020
<Block for 0x4000cd, 11 bytes>
0x4000cd:	mov	eax, dword ptr [rbp - 0x14]
0x4000d0:	mov	rdx, qword ptr [rbp - 0x10]
0x4000d4:	mov	edi, eax
0x4000d6:	call	rdx
<Block for 0x4000d8, 16 bytes>
0x4000d8:	nop	
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	xor	rax, qword ptr fs:[0x28]
0x4000e6:	je	0x4000ed
<Block for 0x4000ed, 2 bytes>
0x4000ed:	leave	
0x4000ee:	ret	
<Block for 0x4000e8, 5 bytes>
0x4000e8:	call	0x500010
