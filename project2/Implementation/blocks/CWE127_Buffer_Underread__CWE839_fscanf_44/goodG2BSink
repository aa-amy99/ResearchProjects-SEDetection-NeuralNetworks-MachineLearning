<Block for 0x4000ef, 76 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0x40
0x4000fb:	mov	dword ptr [rbp - 0x34], edi
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	xor	eax, eax
0x40010d:	mov	qword ptr [rbp - 0x30], 0
0x400115:	mov	qword ptr [rbp - 0x28], 0
0x40011d:	mov	qword ptr [rbp - 0x20], 0
0x400125:	mov	qword ptr [rbp - 0x18], 0
0x40012d:	mov	qword ptr [rbp - 0x10], 0
0x400135:	cmp	dword ptr [rbp - 0x34], 9
0x400139:	jg	0x40014d
<Block for 0x40013b, 16 bytes>
0x40013b:	mov	eax, dword ptr [rbp - 0x34]
0x40013e:	cdqe	
0x400140:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400144:	mov	edi, eax
0x400146:	call	0x500000
<Block for 0x40014d, 12 bytes>
0x40014d:	lea	rdi, [rip + 0x164]
0x400154:	call	0x500008
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x400159
<Block for 0x400159, 16 bytes>
0x400159:	nop	
0x40015a:	mov	rax, qword ptr [rbp - 8]
0x40015e:	xor	rax, qword ptr fs:[0x28]
0x400167:	je	0x40016e
<Block for 0x40016e, 2 bytes>
0x40016e:	leave	
0x40016f:	ret	
<Block for 0x400169, 5 bytes>
0x400169:	call	0x500010
