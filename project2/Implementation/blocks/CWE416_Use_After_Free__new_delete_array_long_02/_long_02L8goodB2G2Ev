<Block for 0x4000df, 30 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0x10
0x4000eb:	mov	qword ptr [rbp - 8], 0
0x4000f3:	mov	edi, 0x320
0x4000f8:	call	0x500000
<Block for 0x4000fd, 19 bytes>
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	mov	qword ptr [rbp - 0x10], 0
0x400109:	cmp	qword ptr [rbp - 0x10], 0x63
0x40010e:	ja	0x400131
<Block for 0x400110, 33 bytes>
0x400110:	mov	rax, qword ptr [rbp - 0x10]
0x400114:	lea	rdx, [rax*8]
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	add	rax, rdx
0x400123:	mov	qword ptr [rax], 5
0x40012a:	add	qword ptr [rbp - 0x10], 1
0x40012f:	jmp	0x400109
<Block for 0x400131, 7 bytes>
0x400131:	cmp	qword ptr [rbp - 8], 0
0x400136:	je	0x400144
<Block for 0x400109, 7 bytes>
0x400109:	cmp	qword ptr [rbp - 0x10], 0x63
0x40010e:	ja	0x400131
<Block for 0x400144, 3 bytes>
0x400144:	nop	
0x400145:	leave	
0x400146:	ret	
<Block for 0x400138, 12 bytes>
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500008
