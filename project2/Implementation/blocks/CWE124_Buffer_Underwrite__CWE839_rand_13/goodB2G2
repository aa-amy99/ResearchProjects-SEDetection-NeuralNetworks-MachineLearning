<Block for 0x40022a, 46 bytes>
0x40022a:	endbr64	
0x40022e:	push	rbp
0x40022f:	mov	rbp, rsp
0x400232:	push	rbx
0x400233:	sub	rsp, 0x48
0x400237:	mov	rax, qword ptr fs:[0x28]
0x400240:	mov	qword ptr [rbp - 0x18], rax
0x400244:	xor	eax, eax
0x400246:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40024d:	mov	eax, dword ptr [rip + 0xffdad]
0x400253:	cmp	eax, 5
0x400256:	jne	0x4002a1
<Block for 0x400258, 5 bytes>
0x400258:	call	0x500008
<Block for 0x4002a1, 11 bytes>
0x4002a1:	mov	eax, dword ptr [rip + 0xffd59]
0x4002a7:	cmp	eax, 5
0x4002aa:	jne	0x400320
<Block for 0x40025d, 7 bytes>
0x40025d:	and	eax, 1
0x400260:	test	eax, eax
0x400262:	je	0x400281
<Block for 0x4002ac, 46 bytes>
0x4002ac:	mov	qword ptr [rbp - 0x40], 0
0x4002b4:	mov	qword ptr [rbp - 0x38], 0
0x4002bc:	mov	qword ptr [rbp - 0x30], 0
0x4002c4:	mov	qword ptr [rbp - 0x28], 0
0x4002cc:	mov	qword ptr [rbp - 0x20], 0
0x4002d4:	cmp	dword ptr [rbp - 0x48], 0
0x4002d8:	js	0x400312
<Block for 0x400320, 16 bytes>
0x400320:	nop	
0x400321:	mov	rax, qword ptr [rbp - 0x18]
0x400325:	xor	rax, qword ptr fs:[0x28]
0x40032e:	je	0x400335
<Block for 0x400281, 5 bytes>
0x400281:	call	0x500008
<Block for 0x400264, 5 bytes>
0x400264:	call	0x500008
<Block for 0x400312, 12 bytes>
0x400312:	lea	rdi, [rip + 0x227]
0x400319:	call	0x500018
<Block for 0x4002da, 6 bytes>
0x4002da:	cmp	dword ptr [rbp - 0x48], 9
0x4002de:	jg	0x400312
<Block for 0x400335, 7 bytes>
0x400335:	add	rsp, 0x48
0x400339:	pop	rbx
0x40033a:	pop	rbp
0x40033b:	ret	
<Block for 0x400330, 5 bytes>
0x400330:	call	0x500020
<Block for 0x400286, 10 bytes>
0x400286:	shl	eax, 0x1e
0x400289:	mov	ebx, eax
0x40028b:	call	0x500008
<Block for 0x400269, 10 bytes>
0x400269:	shl	eax, 0x1e
0x40026c:	mov	ebx, eax
0x40026e:	call	0x500008
<Block for 0x40031e, 2 bytes>
0x40031e:	jmp	0x400320
<Block for 0x4002e0, 22 bytes>
0x4002e0:	mov	eax, dword ptr [rbp - 0x48]
0x4002e3:	cdqe	
0x4002e5:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002ed:	mov	dword ptr [rbp - 0x44], 0
0x4002f4:	jmp	0x40030a
<Block for 0x400290, 10 bytes>
0x400290:	shl	eax, 0xf
0x400293:	xor	ebx, eax
0x400295:	call	0x500008
<Block for 0x400273, 10 bytes>
0x400273:	shl	eax, 0xf
0x400276:	xor	ebx, eax
0x400278:	call	0x500008
<Block for 0x40030a, 6 bytes>
0x40030a:	cmp	dword ptr [rbp - 0x44], 9
0x40030e:	jle	0x4002f6
<Block for 0x40029a, 18 bytes>
0x40029a:	xor	eax, ebx
0x40029c:	not	eax
0x40029e:	mov	dword ptr [rbp - 0x48], eax
0x4002a1:	mov	eax, dword ptr [rip + 0xffd59]
0x4002a7:	cmp	eax, 5
0x4002aa:	jne	0x400320
<Block for 0x40027d, 4 bytes>
0x40027d:	xor	eax, ebx
0x40027f:	jmp	0x40029e
<Block for 0x4002f6, 16 bytes>
0x4002f6:	mov	eax, dword ptr [rbp - 0x44]
0x4002f9:	cdqe	
0x4002fb:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002ff:	mov	edi, eax
0x400301:	call	0x500010
<Block for 0x400310, 2 bytes>
0x400310:	jmp	0x400320
<Block for 0x40029e, 14 bytes>
0x40029e:	mov	dword ptr [rbp - 0x48], eax
0x4002a1:	mov	eax, dword ptr [rip + 0xffd59]
0x4002a7:	cmp	eax, 5
0x4002aa:	jne	0x400320
<Block for 0x400306, 10 bytes>
0x400306:	add	dword ptr [rbp - 0x44], 1
0x40030a:	cmp	dword ptr [rbp - 0x44], 9
0x40030e:	jle	0x4002f6
