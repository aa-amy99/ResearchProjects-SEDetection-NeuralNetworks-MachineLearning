<Block for 0x4000fd, 53 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	add	rsp, -0x80
0x400109:	mov	qword ptr [rbp - 0x78], rdi
0x40010d:	mov	rax, qword ptr fs:[0x28]
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	xor	eax, eax
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x43
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500000
<Block for 0x400132, 16 bytes>
0x400132:	mov	byte ptr [rbp - 0xd], 0
0x400136:	lea	rax, [rbp - 0x70]
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500008
<Block for 0x400142, 22 bytes>
0x400142:	mov	rdx, rax
0x400145:	mov	rcx, qword ptr [rbp - 0x78]
0x400149:	lea	rax, [rbp - 0x70]
0x40014d:	mov	rsi, rcx
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400158, 16 bytes>
0x400158:	mov	byte ptr [rbp - 0xd], 0
0x40015c:	lea	rax, [rbp - 0x70]
0x400160:	mov	rdi, rax
0x400163:	call	0x500018
<Block for 0x400168, 16 bytes>
0x400168:	nop	
0x400169:	mov	rax, qword ptr [rbp - 8]
0x40016d:	xor	rax, qword ptr fs:[0x28]
0x400176:	je	0x40017d
<Block for 0x40017d, 2 bytes>
0x40017d:	leave	
0x40017e:	ret	
<Block for 0x400178, 5 bytes>
0x400178:	call	0x500020
