<Block for 0x400141, 27 bytes>
0x400141:	endbr64	
0x400145:	push	rbp
0x400146:	mov	rbp, rsp
0x400149:	push	r13
0x40014b:	push	r12
0x40014d:	push	rbx
0x40014e:	sub	rsp, 0x18
0x400152:	mov	eax, dword ptr [rip + 0xfff30]
0x400158:	test	eax, eax
0x40015a:	je	0x40016d
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500008
<Block for 0x40015c, 12 bytes>
0x40015c:	lea	rdi, [rip + 0x316]
0x400163:	call	0x500060
<Block for 0x400172, 12 bytes>
0x400172:	and	eax, 1
0x400175:	test	eax, eax
0x400177:	sete	al
0x40017a:	test	al, al
0x40017c:	je	0x4001b3
<Block for 0x400168, 5 bytes>
0x400168:	jmp	0x4002c2
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500008
<Block for 0x40017e, 10 bytes>
0x40017e:	mov	edi, 0x10
0x400183:	call	0x500010
<Block for 0x4002c2, 11 bytes>
0x4002c2:	add	rsp, 0x18
0x4002c6:	pop	rbx
0x4002c7:	pop	r12
0x4002c9:	pop	r13
0x4002cb:	pop	rbp
0x4002cc:	ret	
<Block for 0x4001b8, 12 bytes>
0x4001b8:	and	eax, 1
0x4001bb:	test	eax, eax
0x4001bd:	sete	al
0x4001c0:	test	al, al
0x4001c2:	je	0x4001f9
<Block for 0x400188, 18 bytes>
0x400188:	mov	rbx, rax
0x40018b:	lea	rsi, [rip + 0x2d0]
0x400192:	mov	rdi, rbx
0x400195:	call	0x500018
<Block for 0x4001f9, 12 bytes>
0x4001f9:	lea	rdi, [rip + 0x26c]
0x400200:	call	0x500060
<Block for 0x4001c4, 10 bytes>
0x4001c4:	mov	edi, 0x10
0x4001c9:	call	0x500010
<Block for 0x40019a, 25 bytes>
0x40019a:	mov	rax, qword ptr [rip + 0xffe87]
0x4001a1:	mov	rdx, rax
0x4001a4:	lea	rsi, [rip + 0xffe85]
0x4001ab:	mov	rdi, rbx
0x4001ae:	call	0x500038
<Block for 0x400205, 5 bytes>
0x400205:	jmp	0x4002c2
<Block for 0x4001ce, 18 bytes>
0x4001ce:	mov	rbx, rax
0x4001d1:	lea	rsi, [rip + 0x28f]
0x4001d8:	mov	rdi, rbx
0x4001db:	call	0x500040
<Block for 0x4001e0, 25 bytes>
0x4001e0:	mov	rax, qword ptr [rip + 0xffe69]
0x4001e7:	mov	rdx, rax
0x4001ea:	lea	rsi, [rip + 0xffe67]
0x4001f1:	mov	rdi, rbx
0x4001f4:	call	0x500038
