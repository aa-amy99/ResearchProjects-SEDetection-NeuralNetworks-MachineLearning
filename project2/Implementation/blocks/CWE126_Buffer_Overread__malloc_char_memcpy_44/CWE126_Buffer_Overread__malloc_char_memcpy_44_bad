<Block for 0x40008e, 41 bytes>
0x40008e:	endbr64	
0x400092:	push	rbp
0x400093:	mov	rbp, rsp
0x400096:	sub	rsp, 0x10
0x40009a:	lea	rax, [rip - 0xa1]
0x4000a1:	mov	qword ptr [rbp - 0x10], rax
0x4000a5:	mov	qword ptr [rbp - 8], 0
0x4000ad:	mov	edi, 0x32
0x4000b2:	call	0x500030
<Block for 0x4000b7, 11 bytes>
0x4000b7:	mov	qword ptr [rbp - 8], rax
0x4000bb:	cmp	qword ptr [rbp - 8], 0
0x4000c0:	jne	0x4000cc
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500038
<Block for 0x4000cc, 22 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 8]
0x4000d0:	mov	edx, 0x31
0x4000d5:	mov	esi, 0x41
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500000
<Block for 0x4000e2, 24 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 8]
0x4000e6:	add	rax, 0x31
0x4000ea:	mov	byte ptr [rax], 0
0x4000ed:	mov	rax, qword ptr [rbp - 8]
0x4000f1:	mov	rdx, qword ptr [rbp - 0x10]
0x4000f5:	mov	rdi, rax
0x4000f8:	call	rdx
<Block for 0x4000fa, 3 bytes>
0x4000fa:	nop	
0x4000fb:	leave	
0x4000fc:	ret	
