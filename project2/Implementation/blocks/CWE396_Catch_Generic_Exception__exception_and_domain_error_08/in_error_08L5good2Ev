<Block for 0x400331, 22 bytes>
0x400331:	endbr64	
0x400335:	push	rbp
0x400336:	mov	rbp, rsp
0x400339:	push	r13
0x40033b:	push	r12
0x40033d:	push	rbx
0x40033e:	sub	rsp, 0x18
0x400342:	call	0x400000
<Block for 0x400347, 13 bytes>
0x400347:	test	eax, eax
0x400349:	setne	al
0x40034c:	test	al, al
0x40034e:	je	0x4004a9
<Block for 0x4004a9, 11 bytes>
0x4004a9:	add	rsp, 0x18
0x4004ad:	pop	rbx
0x4004ae:	pop	r12
0x4004b0:	pop	r13
0x4004b2:	pop	rbp
0x4004b3:	ret	
<Block for 0x400354, 5 bytes>
0x400354:	call	0x500000
<Block for 0x400359, 12 bytes>
0x400359:	and	eax, 1
0x40035c:	test	eax, eax
0x40035e:	sete	al
0x400361:	test	al, al
0x400363:	je	0x40039a
<Block for 0x40039a, 5 bytes>
0x40039a:	call	0x500000
<Block for 0x400365, 10 bytes>
0x400365:	mov	edi, 0x10
0x40036a:	call	0x500008
<Block for 0x40039f, 12 bytes>
0x40039f:	and	eax, 1
0x4003a2:	test	eax, eax
0x4003a4:	sete	al
0x4003a7:	test	al, al
0x4003a9:	je	0x4003e0
<Block for 0x40036f, 18 bytes>
0x40036f:	mov	rbx, rax
0x400372:	lea	rsi, [rip + 0x151]
0x400379:	mov	rdi, rbx
0x40037c:	call	0x500010
<Block for 0x4003e0, 12 bytes>
0x4003e0:	lea	rdi, [rip + 0xed]
0x4003e7:	call	0x500058
<Block for 0x4003ab, 10 bytes>
0x4003ab:	mov	edi, 0x10
0x4003b0:	call	0x500008
<Block for 0x400381, 25 bytes>
0x400381:	mov	rax, qword ptr [rip + 0xffc98]
0x400388:	mov	rdx, rax
0x40038b:	lea	rsi, [rip + 0xffc96]
0x400392:	mov	rdi, rbx
0x400395:	call	0x500030
<Block for 0x4003ec, 5 bytes>
0x4003ec:	jmp	0x4004a9
<Block for 0x4003b5, 18 bytes>
0x4003b5:	mov	rbx, rax
0x4003b8:	lea	rsi, [rip + 0x110]
0x4003bf:	mov	rdi, rbx
0x4003c2:	call	0x500038
<Block for 0x4003c7, 25 bytes>
0x4003c7:	mov	rax, qword ptr [rip + 0xffc7a]
0x4003ce:	mov	rdx, rax
0x4003d1:	lea	rsi, [rip + 0xffc78]
0x4003d8:	mov	rdi, rbx
0x4003db:	call	0x500030
