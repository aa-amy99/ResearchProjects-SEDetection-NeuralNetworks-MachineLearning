<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	push	r13
0x400028:	push	r12
0x40002a:	push	rbx
0x40002b:	sub	rsp, 0x18
0x40002f:	call	0x400000
<Block for 0x400034, 13 bytes>
0x400034:	test	eax, eax
0x400036:	setne	al
0x400039:	test	al, al
0x40003b:	je	0x400196
<Block for 0x400196, 11 bytes>
0x400196:	add	rsp, 0x18
0x40019a:	pop	rbx
0x40019b:	pop	r12
0x40019d:	pop	r13
0x40019f:	pop	rbp
0x4001a0:	ret	
<Block for 0x400041, 5 bytes>
0x400041:	call	0x500000
<Block for 0x400046, 12 bytes>
0x400046:	and	eax, 1
0x400049:	test	eax, eax
0x40004b:	sete	al
0x40004e:	test	al, al
0x400050:	je	0x400087
<Block for 0x400087, 5 bytes>
0x400087:	call	0x500000
<Block for 0x400052, 10 bytes>
0x400052:	mov	edi, 0x10
0x400057:	call	0x500008
<Block for 0x40008c, 12 bytes>
0x40008c:	and	eax, 1
0x40008f:	test	eax, eax
0x400091:	sete	al
0x400094:	test	al, al
0x400096:	je	0x4000cd
<Block for 0x40005c, 18 bytes>
0x40005c:	mov	rbx, rax
0x40005f:	lea	rsi, [rip + 0x464]
0x400066:	mov	rdi, rbx
0x400069:	call	0x500010
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rdi, [rip + 0x400]
0x4000d4:	call	0x500058
<Block for 0x400098, 10 bytes>
0x400098:	mov	edi, 0x10
0x40009d:	call	0x500008
<Block for 0x40006e, 25 bytes>
0x40006e:	mov	rax, qword ptr [rip + 0xfffab]
0x400075:	mov	rdx, rax
0x400078:	lea	rsi, [rip + 0xfffa9]
0x40007f:	mov	rdi, rbx
0x400082:	call	0x500030
<Block for 0x4000d9, 5 bytes>
0x4000d9:	jmp	0x400196
<Block for 0x4000a2, 18 bytes>
0x4000a2:	mov	rbx, rax
0x4000a5:	lea	rsi, [rip + 0x423]
0x4000ac:	mov	rdi, rbx
0x4000af:	call	0x500038
<Block for 0x4000b4, 25 bytes>
0x4000b4:	mov	rax, qword ptr [rip + 0xfff8d]
0x4000bb:	mov	rdx, rax
0x4000be:	lea	rsi, [rip + 0xfff8b]
0x4000c5:	mov	rdi, rbx
0x4000c8:	call	0x500030
