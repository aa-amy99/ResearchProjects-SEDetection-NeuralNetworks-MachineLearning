<Block for 0x40006c, 57 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	add	rsp, -0x80
0x400078:	mov	rax, qword ptr fs:[0x28]
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	xor	eax, eax
0x400087:	mov	qword ptr [rbp - 0x78], 0
0x40008f:	mov	dword ptr [rip + 0x2df], 1
0x400099:	mov	rax, qword ptr [rbp - 0x78]
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x400000
<Block for 0x4000a5, 26 bytes>
0x4000a5:	mov	qword ptr [rbp - 0x78], rax
0x4000a9:	lea	rax, [rbp - 0x70]
0x4000ad:	mov	edx, 0x63
0x4000b2:	mov	esi, 0x43
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500010
<Block for 0x4000bf, 14 bytes>
0x4000bf:	mov	byte ptr [rbp - 0xd], 0
0x4000c3:	mov	qword ptr [rbp - 0x80], 0
0x4000cb:	jmp	0x4000ed
<Block for 0x4000ed, 7 bytes>
0x4000ed:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000f2:	jbe	0x4000cd
<Block for 0x4000cd, 39 bytes>
0x4000cd:	mov	rdx, qword ptr [rbp - 0x78]
0x4000d1:	mov	rax, qword ptr [rbp - 0x80]
0x4000d5:	add	rax, rdx
0x4000d8:	movzx	eax, byte ptr [rax]
0x4000db:	lea	rcx, [rbp - 0x70]
0x4000df:	mov	rdx, qword ptr [rbp - 0x80]
0x4000e3:	add	rdx, rcx
0x4000e6:	mov	byte ptr [rdx], al
0x4000e8:	add	qword ptr [rbp - 0x80], 1
0x4000ed:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000f2:	jbe	0x4000cd
<Block for 0x4000f4, 16 bytes>
0x4000f4:	mov	byte ptr [rbp - 0xd], 0
0x4000f8:	lea	rax, [rbp - 0x70]
0x4000fc:	mov	rdi, rax
0x4000ff:	call	0x500018
<Block for 0x400104, 16 bytes>
0x400104:	nop	
0x400105:	mov	rax, qword ptr [rbp - 8]
0x400109:	xor	rax, qword ptr fs:[0x28]
0x400112:	je	0x400119
<Block for 0x400119, 2 bytes>
0x400119:	leave	
0x40011a:	ret	
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500020
