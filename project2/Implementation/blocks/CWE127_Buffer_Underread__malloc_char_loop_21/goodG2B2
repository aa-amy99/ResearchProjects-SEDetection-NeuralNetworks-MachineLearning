<Block for 0x4002a8, 57 bytes>
0x4002a8:	endbr64	
0x4002ac:	push	rbp
0x4002ad:	mov	rbp, rsp
0x4002b0:	add	rsp, -0x80
0x4002b4:	mov	rax, qword ptr fs:[0x28]
0x4002bd:	mov	qword ptr [rbp - 8], rax
0x4002c1:	xor	eax, eax
0x4002c3:	mov	qword ptr [rbp - 0x78], 0
0x4002cb:	mov	dword ptr [rip + 0xab], 1
0x4002d5:	mov	rax, qword ptr [rbp - 0x78]
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x400240
<Block for 0x4002e1, 26 bytes>
0x4002e1:	mov	qword ptr [rbp - 0x78], rax
0x4002e5:	lea	rax, [rbp - 0x70]
0x4002e9:	mov	edx, 0x63
0x4002ee:	mov	esi, 0x43
0x4002f3:	mov	rdi, rax
0x4002f6:	call	0x500010
<Block for 0x4002fb, 14 bytes>
0x4002fb:	mov	byte ptr [rbp - 0xd], 0
0x4002ff:	mov	qword ptr [rbp - 0x80], 0
0x400307:	jmp	0x400329
<Block for 0x400329, 7 bytes>
0x400329:	cmp	qword ptr [rbp - 0x80], 0x63
0x40032e:	jbe	0x400309
<Block for 0x400309, 39 bytes>
0x400309:	mov	rdx, qword ptr [rbp - 0x78]
0x40030d:	mov	rax, qword ptr [rbp - 0x80]
0x400311:	add	rax, rdx
0x400314:	movzx	eax, byte ptr [rax]
0x400317:	lea	rcx, [rbp - 0x70]
0x40031b:	mov	rdx, qword ptr [rbp - 0x80]
0x40031f:	add	rdx, rcx
0x400322:	mov	byte ptr [rdx], al
0x400324:	add	qword ptr [rbp - 0x80], 1
0x400329:	cmp	qword ptr [rbp - 0x80], 0x63
0x40032e:	jbe	0x400309
<Block for 0x400330, 16 bytes>
0x400330:	mov	byte ptr [rbp - 0xd], 0
0x400334:	lea	rax, [rbp - 0x70]
0x400338:	mov	rdi, rax
0x40033b:	call	0x500018
<Block for 0x400340, 16 bytes>
0x400340:	nop	
0x400341:	mov	rax, qword ptr [rbp - 8]
0x400345:	xor	rax, qword ptr fs:[0x28]
0x40034e:	je	0x400355
<Block for 0x400355, 2 bytes>
0x400355:	leave	
0x400356:	ret	
<Block for 0x400350, 5 bytes>
0x400350:	call	0x500020
