<Block for 0x400240, 26 bytes>
0x400240:	endbr64	
0x400244:	push	rbp
0x400245:	mov	rbp, rsp
0x400248:	sub	rsp, 0x20
0x40024c:	mov	qword ptr [rbp - 0x18], rdi
0x400250:	mov	eax, dword ptr [rip + 0x12a]
0x400256:	test	eax, eax
0x400258:	je	0x4002a2
<Block for 0x4002a2, 6 bytes>
0x4002a2:	mov	rax, qword ptr [rbp - 0x18]
0x4002a6:	leave	
0x4002a7:	ret	
<Block for 0x40025a, 10 bytes>
0x40025a:	mov	edi, 0x64
0x40025f:	call	0x500000
<Block for 0x400264, 11 bytes>
0x400264:	mov	qword ptr [rbp - 8], rax
0x400268:	cmp	qword ptr [rbp - 8], 0
0x40026d:	jne	0x400279
<Block for 0x40026f, 10 bytes>
0x40026f:	mov	edi, 0xffffffff
0x400274:	call	0x500008
<Block for 0x400279, 22 bytes>
0x400279:	mov	rax, qword ptr [rbp - 8]
0x40027d:	mov	edx, 0x63
0x400282:	mov	esi, 0x41
0x400287:	mov	rdi, rax
0x40028a:	call	0x500010
<Block for 0x40028f, 25 bytes>
0x40028f:	mov	rax, qword ptr [rbp - 8]
0x400293:	add	rax, 0x63
0x400297:	mov	byte ptr [rax], 0
0x40029a:	mov	rax, qword ptr [rbp - 8]
0x40029e:	mov	qword ptr [rbp - 0x18], rax
0x4002a2:	mov	rax, qword ptr [rbp - 0x18]
0x4002a6:	leave	
0x4002a7:	ret	
