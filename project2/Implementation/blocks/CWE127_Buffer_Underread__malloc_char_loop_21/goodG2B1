<Block for 0x400191, 57 bytes>
0x400191:	endbr64	
0x400195:	push	rbp
0x400196:	mov	rbp, rsp
0x400199:	add	rsp, -0x80
0x40019d:	mov	rax, qword ptr fs:[0x28]
0x4001a6:	mov	qword ptr [rbp - 8], rax
0x4001aa:	xor	eax, eax
0x4001ac:	mov	qword ptr [rbp - 0x78], 0
0x4001b4:	mov	dword ptr [rip + 0x1be], 0
0x4001be:	mov	rax, qword ptr [rbp - 0x78]
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x40011b
<Block for 0x4001ca, 26 bytes>
0x4001ca:	mov	qword ptr [rbp - 0x78], rax
0x4001ce:	lea	rax, [rbp - 0x70]
0x4001d2:	mov	edx, 0x63
0x4001d7:	mov	esi, 0x43
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500010
<Block for 0x4001e4, 14 bytes>
0x4001e4:	mov	byte ptr [rbp - 0xd], 0
0x4001e8:	mov	qword ptr [rbp - 0x80], 0
0x4001f0:	jmp	0x400212
<Block for 0x400212, 7 bytes>
0x400212:	cmp	qword ptr [rbp - 0x80], 0x63
0x400217:	jbe	0x4001f2
<Block for 0x4001f2, 39 bytes>
0x4001f2:	mov	rdx, qword ptr [rbp - 0x78]
0x4001f6:	mov	rax, qword ptr [rbp - 0x80]
0x4001fa:	add	rax, rdx
0x4001fd:	movzx	eax, byte ptr [rax]
0x400200:	lea	rcx, [rbp - 0x70]
0x400204:	mov	rdx, qword ptr [rbp - 0x80]
0x400208:	add	rdx, rcx
0x40020b:	mov	byte ptr [rdx], al
0x40020d:	add	qword ptr [rbp - 0x80], 1
0x400212:	cmp	qword ptr [rbp - 0x80], 0x63
0x400217:	jbe	0x4001f2
<Block for 0x400219, 16 bytes>
0x400219:	mov	byte ptr [rbp - 0xd], 0
0x40021d:	lea	rax, [rbp - 0x70]
0x400221:	mov	rdi, rax
0x400224:	call	0x500018
<Block for 0x400229, 16 bytes>
0x400229:	nop	
0x40022a:	mov	rax, qword ptr [rbp - 8]
0x40022e:	xor	rax, qword ptr fs:[0x28]
0x400237:	je	0x40023e
<Block for 0x40023e, 2 bytes>
0x40023e:	leave	
0x40023f:	ret	
<Block for 0x400239, 5 bytes>
0x400239:	call	0x500020
