<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x40004e
<Block for 0x40004e, 5 bytes>
0x40004e:	call	0x500018
<Block for 0x40001a, 22 bytes>
0x40001a:	mov	edx, 0
0x40001f:	mov	esi, 0
0x400024:	lea	rdi, [rip + 0x177]
0x40002b:	call	0x500008
<Block for 0x400053, 28 bytes>
0x400053:	mov	dword ptr [rax], 0
0x400059:	mov	edx, 0
0x40005e:	mov	esi, 0
0x400063:	lea	rdi, [rip + 0x138]
0x40006a:	call	0x500008
<Block for 0x400030, 28 bytes>
0x400030:	mov	qword ptr [rbp - 8], rax
0x400034:	mov	rax, qword ptr [rbp - 8]
0x400038:	mov	rsi, rax
0x40003b:	lea	rdi, [rip + 0x16c]
0x400042:	mov	eax, 0
0x400047:	call	0x500010
<Block for 0x40006f, 9 bytes>
0x40006f:	mov	qword ptr [rbp - 0x10], rax
0x400073:	call	0x500018
<Block for 0x40004c, 2 bytes>
0x40004c:	jmp	0x4000ad
<Block for 0x400078, 7 bytes>
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	cmp	eax, 0x22
0x40007d:	jne	0x400095
<Block for 0x4000ad, 3 bytes>
0x4000ad:	nop	
0x4000ae:	leave	
0x4000af:	ret	
<Block for 0x40007f, 12 bytes>
0x40007f:	lea	rdi, [rip + 0x12d]
0x400086:	call	0x500020
<Block for 0x400095, 24 bytes>
0x400095:	mov	rax, qword ptr [rbp - 0x10]
0x400099:	mov	rsi, rax
0x40009c:	lea	rdi, [rip + 0x10b]
0x4000a3:	mov	eax, 0
0x4000a8:	call	0x500010
<Block for 0x40008b, 10 bytes>
0x40008b:	mov	edi, 1
0x400090:	call	0x500028
