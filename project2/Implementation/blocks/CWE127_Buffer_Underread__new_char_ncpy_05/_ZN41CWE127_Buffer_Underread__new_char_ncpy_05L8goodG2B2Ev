<Block for 0x4001a0, 45 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	add	rsp, -0x80
0x4001ac:	mov	rax, qword ptr fs:[0x28]
0x4001b5:	mov	qword ptr [rbp - 8], rax
0x4001b9:	xor	eax, eax
0x4001bb:	mov	qword ptr [rbp - 0x80], 0
0x4001c3:	mov	eax, dword ptr [rip + 0xb3]
0x4001c9:	test	eax, eax
0x4001cb:	je	0x400204
<Block for 0x400204, 22 bytes>
0x400204:	lea	rax, [rbp - 0x70]
0x400208:	mov	edx, 0x63
0x40020d:	mov	esi, 0x43
0x400212:	mov	rdi, rax
0x400215:	call	0x500008
<Block for 0x4001cd, 10 bytes>
0x4001cd:	mov	edi, 0x64
0x4001d2:	call	0x500000
<Block for 0x40021a, 16 bytes>
0x40021a:	mov	byte ptr [rbp - 0xd], 0
0x40021e:	lea	rax, [rbp - 0x70]
0x400222:	mov	rdi, rax
0x400225:	call	0x500010
<Block for 0x4001d7, 26 bytes>
0x4001d7:	mov	qword ptr [rbp - 0x78], rax
0x4001db:	mov	rax, qword ptr [rbp - 0x78]
0x4001df:	mov	edx, 0x63
0x4001e4:	mov	esi, 0x41
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500008
<Block for 0x40022a, 22 bytes>
0x40022a:	mov	rdx, rax
0x40022d:	mov	rcx, qword ptr [rbp - 0x80]
0x400231:	lea	rax, [rbp - 0x70]
0x400235:	mov	rsi, rcx
0x400238:	mov	rdi, rax
0x40023b:	call	0x500018
<Block for 0x4001f1, 41 bytes>
0x4001f1:	mov	rax, qword ptr [rbp - 0x78]
0x4001f5:	add	rax, 0x63
0x4001f9:	mov	byte ptr [rax], 0
0x4001fc:	mov	rax, qword ptr [rbp - 0x78]
0x400200:	mov	qword ptr [rbp - 0x80], rax
0x400204:	lea	rax, [rbp - 0x70]
0x400208:	mov	edx, 0x63
0x40020d:	mov	esi, 0x43
0x400212:	mov	rdi, rax
0x400215:	call	0x500008
<Block for 0x400240, 16 bytes>
0x400240:	mov	byte ptr [rbp - 0xd], 0
0x400244:	lea	rax, [rbp - 0x70]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500020
<Block for 0x400250, 16 bytes>
0x400250:	nop	
0x400251:	mov	rax, qword ptr [rbp - 8]
0x400255:	xor	rax, qword ptr fs:[0x28]
0x40025e:	je	0x400265
<Block for 0x400265, 2 bytes>
0x400265:	leave	
0x400266:	ret	
<Block for 0x400260, 5 bytes>
0x400260:	call	0x500028
