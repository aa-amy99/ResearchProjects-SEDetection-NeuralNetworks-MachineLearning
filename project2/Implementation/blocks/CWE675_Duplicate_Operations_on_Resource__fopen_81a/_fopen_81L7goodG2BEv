<Block for 0x40008a, 54 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	sub	rsp, 0x20
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	qword ptr [rbp - 0x18], 0
0x4000ad:	lea	rsi, [rip + 0xf3]
0x4000b4:	lea	rdi, [rip + 0x103]
0x4000bb:	call	0x500000
<Block for 0x4000c0, 49 bytes>
0x4000c0:	mov	qword ptr [rbp - 0x18], rax
0x4000c4:	lea	rax, [rip + 0xfff65]
0x4000cb:	mov	qword ptr [rbp - 0x20], rax
0x4000cf:	lea	rax, [rbp - 0x20]
0x4000d3:	mov	qword ptr [rbp - 0x10], rax
0x4000d7:	mov	rax, qword ptr [rbp - 0x10]
0x4000db:	mov	rax, qword ptr [rax]
0x4000de:	mov	rcx, qword ptr [rax]
0x4000e1:	mov	rdx, qword ptr [rbp - 0x18]
0x4000e5:	mov	rax, qword ptr [rbp - 0x10]
0x4000e9:	mov	rsi, rdx
0x4000ec:	mov	rdi, rax
0x4000ef:	call	rcx
<Block for 0x4000f1, 16 bytes>
0x4000f1:	nop	
0x4000f2:	mov	rax, qword ptr [rbp - 8]
0x4000f6:	xor	rax, qword ptr fs:[0x28]
0x4000ff:	je	0x400106
<Block for 0x400106, 2 bytes>
0x400106:	leave	
0x400107:	ret	
<Block for 0x400101, 5 bytes>
0x400101:	call	0x500018
