<Block for 0x400000, 54 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	lea	rsi, [rip + 0x17d]
0x40002a:	lea	rdi, [rip + 0x179]
0x400031:	call	0x500000
<Block for 0x400036, 16 bytes>
0x400036:	mov	qword ptr [rbp - 0x18], rax
0x40003a:	mov	rax, qword ptr [rbp - 0x18]
0x40003e:	mov	rdi, rax
0x400041:	call	0x500008
<Block for 0x400046, 45 bytes>
0x400046:	lea	rax, [rip + 0xfffd3]
0x40004d:	mov	qword ptr [rbp - 0x20], rax
0x400051:	lea	rax, [rbp - 0x20]
0x400055:	mov	qword ptr [rbp - 0x10], rax
0x400059:	mov	rax, qword ptr [rbp - 0x10]
0x40005d:	mov	rax, qword ptr [rax]
0x400060:	mov	rcx, qword ptr [rax]
0x400063:	mov	rdx, qword ptr [rbp - 0x18]
0x400067:	mov	rax, qword ptr [rbp - 0x10]
0x40006b:	mov	rsi, rdx
0x40006e:	mov	rdi, rax
0x400071:	call	rcx
<Block for 0x400073, 16 bytes>
0x400073:	nop	
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	xor	rax, qword ptr fs:[0x28]
0x400081:	je	0x400088
<Block for 0x400088, 2 bytes>
0x400088:	leave	
0x400089:	ret	
<Block for 0x400083, 5 bytes>
0x400083:	call	0x500018
