<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x30
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40008b:	lea	rax, [rbp - 0x24]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 25 bytes>
0x400097:	mov	eax, dword ptr [rbp - 0x24]
0x40009a:	cdqe	
0x40009c:	shl	rax, 2
0x4000a0:	mov	qword ptr [rbp - 0x18], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x18]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500008
<Block for 0x4000b0, 23 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x10], rax
0x4000b4:	mov	qword ptr [rbp - 0x20], 0
0x4000bc:	mov	eax, dword ptr [rbp - 0x24]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x20], rax
0x4000c5:	jae	0x4000e7
<Block for 0x4000c7, 32 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x20]
0x4000cb:	lea	rdx, [rax*4]
0x4000d3:	mov	rax, qword ptr [rbp - 0x10]
0x4000d7:	add	rax, rdx
0x4000da:	mov	dword ptr [rax], 0
0x4000e0:	add	qword ptr [rbp - 0x20], 1
0x4000e5:	jmp	0x4000bc
<Block for 0x4000e7, 13 bytes>
0x4000e7:	mov	rax, qword ptr [rbp - 0x10]
0x4000eb:	mov	eax, dword ptr [rax]
0x4000ed:	mov	edi, eax
0x4000ef:	call	0x500010
<Block for 0x4000bc, 11 bytes>
0x4000bc:	mov	eax, dword ptr [rbp - 0x24]
0x4000bf:	cdqe	
0x4000c1:	cmp	qword ptr [rbp - 0x20], rax
0x4000c5:	jae	0x4000e7
<Block for 0x4000f4, 7 bytes>
0x4000f4:	cmp	qword ptr [rbp - 0x10], 0
0x4000f9:	je	0x400107
<Block for 0x400107, 16 bytes>
0x400107:	nop	
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	xor	rax, qword ptr fs:[0x28]
0x400115:	je	0x40011c
<Block for 0x4000fb, 12 bytes>
0x4000fb:	mov	rax, qword ptr [rbp - 0x10]
0x4000ff:	mov	rdi, rax
0x400102:	call	0x500018
<Block for 0x40011c, 2 bytes>
0x40011c:	leave	
0x40011d:	ret	
<Block for 0x400117, 5 bytes>
0x400117:	call	0x500020
