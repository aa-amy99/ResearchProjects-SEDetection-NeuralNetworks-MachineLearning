<Block for 0x400081, 57 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x30
0x40008d:	mov	qword ptr [rbp - 0x28], rdi
0x400091:	mov	rax, qword ptr fs:[0x28]
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	xor	eax, eax
0x4000a0:	mov	dword ptr [rbp - 0x1c], 2
0x4000a7:	lea	rdx, [rbp - 0x1c]
0x4000ab:	mov	rax, qword ptr [rbp - 0x28]
0x4000af:	mov	rsi, rdx
0x4000b2:	mov	rdi, rax
0x4000b5:	call	0x400132
<Block for 0x4000ba, 26 bytes>
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 0x18], rax
0x4000c1:	mov	rax, qword ptr [rbp - 0x18]
0x4000c5:	lea	rsi, [rip + 0x62]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500000
<Block for 0x4000d4, 11 bytes>
0x4000d4:	mov	qword ptr [rbp - 0x10], rax
0x4000d8:	cmp	qword ptr [rbp - 0x10], 0
0x4000dd:	je	0x4000eb
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x4000df, 12 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x10]
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500008
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500010
