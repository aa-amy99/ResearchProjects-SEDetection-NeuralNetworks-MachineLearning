<Block for 0x4000ab, 30 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x10
0x4000b7:	mov	qword ptr [rbp - 8], 0
0x4000bf:	mov	eax, dword ptr [rip + 0xfff3b]
0x4000c5:	test	eax, eax
0x4000c7:	je	0x40013d
<Block for 0x40013d, 10 bytes>
0x40013d:	mov	eax, dword ptr [rip + 0xffee5]
0x400143:	test	eax, eax
0x400145:	je	0x400153
<Block for 0x4000c9, 10 bytes>
0x4000c9:	mov	edi, 0x320
0x4000ce:	call	0x500008
<Block for 0x400153, 3 bytes>
0x400153:	nop	
0x400154:	leave	
0x400155:	ret	
<Block for 0x400147, 12 bytes>
0x400147:	lea	rdi, [rip + 0x21c]
0x40014e:	call	0x500030
<Block for 0x4000d3, 11 bytes>
0x4000d3:	mov	qword ptr [rbp - 8], rax
0x4000d7:	cmp	qword ptr [rbp - 8], 0
0x4000dc:	jne	0x4000e8
<Block for 0x4000de, 10 bytes>
0x4000de:	mov	edi, 0xffffffff
0x4000e3:	call	0x500010
<Block for 0x4000e8, 10 bytes>
0x4000e8:	mov	qword ptr [rbp - 0x10], 0
0x4000f0:	jmp	0x40012a
<Block for 0x40012a, 7 bytes>
0x40012a:	cmp	qword ptr [rbp - 0x10], 0x63
0x40012f:	jbe	0x4000f2
<Block for 0x4000f2, 63 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x10]
0x4000f6:	lea	rdx, [rax*8]
0x4000fe:	mov	rax, qword ptr [rbp - 8]
0x400102:	add	rax, rdx
0x400105:	mov	dword ptr [rax], 1
0x40010b:	mov	rax, qword ptr [rbp - 0x10]
0x40010f:	lea	rdx, [rax*8]
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	add	rax, rdx
0x40011e:	mov	dword ptr [rax + 4], 2
0x400125:	add	qword ptr [rbp - 0x10], 1
0x40012a:	cmp	qword ptr [rbp - 0x10], 0x63
0x40012f:	jbe	0x4000f2
<Block for 0x400131, 12 bytes>
0x400131:	mov	rax, qword ptr [rbp - 8]
0x400135:	mov	rdi, rax
0x400138:	call	0x500018
