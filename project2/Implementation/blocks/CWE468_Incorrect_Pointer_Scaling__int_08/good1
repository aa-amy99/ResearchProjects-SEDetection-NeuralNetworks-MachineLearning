<Block for 0x4000c0, 37 bytes>
0x4000c0:	endbr64	
0x4000c4:	push	rbp
0x4000c5:	mov	rbp, rsp
0x4000c8:	sub	rsp, 0x40
0x4000cc:	mov	rax, qword ptr fs:[0x28]
0x4000d5:	mov	qword ptr [rbp - 8], rax
0x4000d9:	xor	eax, eax
0x4000db:	mov	eax, 0
0x4000e0:	call	0x40000f
<Block for 0x4000e5, 4 bytes>
0x4000e5:	test	eax, eax
0x4000e7:	je	0x4000f7
<Block for 0x4000f7, 98 bytes>
0x4000f7:	mov	dword ptr [rbp - 0x30], 1
0x4000fe:	mov	dword ptr [rbp - 0x2c], 2
0x400105:	mov	dword ptr [rbp - 0x28], 3
0x40010c:	mov	dword ptr [rbp - 0x24], 4
0x400113:	mov	dword ptr [rbp - 0x20], 5
0x40011a:	mov	dword ptr [rbp - 0x1c], 6
0x400121:	mov	dword ptr [rbp - 0x18], 7
0x400128:	mov	dword ptr [rbp - 0x14], 8
0x40012f:	mov	dword ptr [rbp - 0x10], 9
0x400136:	mov	dword ptr [rbp - 0xc], 0xa
0x40013d:	lea	rax, [rbp - 0x30]
0x400141:	mov	qword ptr [rbp - 0x38], rax
0x400145:	mov	rax, qword ptr [rbp - 0x38]
0x400149:	mov	eax, dword ptr [rax + 8]
0x40014c:	mov	dword ptr [rbp - 0x3c], eax
0x40014f:	mov	eax, dword ptr [rbp - 0x3c]
0x400152:	mov	edi, eax
0x400154:	call	0x500000
<Block for 0x4000e9, 12 bytes>
0x4000e9:	lea	rdi, [rip + 0x141]
0x4000f0:	call	0x500010
<Block for 0x400159, 16 bytes>
0x400159:	nop	
0x40015a:	mov	rax, qword ptr [rbp - 8]
0x40015e:	xor	rax, qword ptr fs:[0x28]
0x400167:	je	0x40016e
<Block for 0x4000f5, 2 bytes>
0x4000f5:	jmp	0x400159
<Block for 0x40016e, 2 bytes>
0x40016e:	leave	
0x40016f:	ret	
<Block for 0x400169, 5 bytes>
0x400169:	call	0x500008
