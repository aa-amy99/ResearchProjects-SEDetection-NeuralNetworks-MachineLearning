<Block for 0x400058, 20 bytes>
0x400058:	endbr64	
0x40005c:	push	rbp
0x40005d:	mov	rbp, rsp
0x400060:	lea	rdi, [rip + 0xa9]
0x400067:	call	0x500000
<Block for 0x40006c, 12 bytes>
0x40006c:	lea	rdi, [rip + 0x95]
0x400073:	call	0x500008
<Block for 0x400078, 4 bytes>
0x400078:	test	eax, eax
0x40007a:	jne	0x400092
<Block for 0x40007c, 12 bytes>
0x40007c:	lea	rdi, [rip + 0x9e]
0x400083:	call	0x500000
<Block for 0x400092, 12 bytes>
0x400092:	lea	rdi, [rip + 0x9e]
0x400099:	call	0x500000
<Block for 0x400088, 10 bytes>
0x400088:	mov	edi, 1
0x40008d:	call	0x500010
<Block for 0x40009e, 15 bytes>
0x40009e:	mov	rax, qword ptr [rip + 0x63]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500018
<Block for 0x4000ad, 12 bytes>
0x4000ad:	lea	rdi, [rip + 0x95]
0x4000b4:	call	0x500000
<Block for 0x4000b9, 15 bytes>
0x4000b9:	mov	rax, qword ptr [rip + 0x48]
0x4000c0:	mov	rdi, rax
0x4000c3:	call	0x500020
<Block for 0x4000c8, 12 bytes>
0x4000c8:	lea	rdi, [rip + 0x8c]
0x4000cf:	call	0x500000
<Block for 0x4000d4, 15 bytes>
0x4000d4:	mov	rax, qword ptr [rip + 0x2d]
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500028
<Block for 0x4000e3, 3 bytes>
0x4000e3:	nop	
0x4000e4:	pop	rbp
0x4000e5:	ret	
