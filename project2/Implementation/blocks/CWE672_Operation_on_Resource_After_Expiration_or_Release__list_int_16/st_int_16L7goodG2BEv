<Block for 0x4002cc, 40 bytes>
0x4002cc:	endbr64	
0x4002d0:	push	rbp
0x4002d1:	mov	rbp, rsp
0x4002d4:	push	rbx
0x4002d5:	sub	rsp, 0x38
0x4002d9:	mov	rax, qword ptr fs:[0x28]
0x4002e2:	mov	qword ptr [rbp - 0x18], rax
0x4002e6:	xor	eax, eax
0x4002e8:	lea	rax, [rbp - 0x30]
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x400584
<Block for 0x4002f4, 26 bytes>
0x4002f4:	mov	dword ptr [rbp - 0x38], 0x64
0x4002fb:	lea	rdx, [rbp - 0x38]
0x4002ff:	lea	rax, [rbp - 0x30]
0x400303:	mov	rsi, rdx
0x400306:	mov	rdi, rax
0x400309:	call	0x40066c
<Block for 0x40030e, 26 bytes>
0x40030e:	mov	dword ptr [rbp - 0x38], 0xc8
0x400315:	lea	rdx, [rbp - 0x38]
0x400319:	lea	rax, [rbp - 0x30]
0x40031d:	mov	rsi, rdx
0x400320:	mov	rdi, rax
0x400323:	call	0x40066c
<Block for 0x400328, 13 bytes>
0x400328:	nop	
0x400329:	lea	rax, [rbp - 0x40]
0x40032d:	mov	rdi, rax
0x400330:	call	0x4006ba
<Block for 0x400335, 19 bytes>
0x400335:	lea	rsi, [rip + 0x19c]
0x40033c:	lea	rdi, [rip + 0xffcbd]
0x400343:	call	0x500008
<Block for 0x400348, 12 bytes>
0x400348:	lea	rax, [rbp - 0x30]
0x40034c:	mov	rdi, rax
0x40034f:	call	0x4006d4
<Block for 0x400354, 16 bytes>
0x400354:	mov	qword ptr [rbp - 0x40], rax
0x400358:	lea	rax, [rbp - 0x30]
0x40035c:	mov	rdi, rax
0x40035f:	call	0x400724
<Block for 0x400364, 23 bytes>
0x400364:	mov	qword ptr [rbp - 0x38], rax
0x400368:	lea	rdx, [rbp - 0x38]
0x40036c:	lea	rax, [rbp - 0x40]
0x400370:	mov	rsi, rdx
0x400373:	mov	rdi, rax
0x400376:	call	0x400770
<Block for 0x40037b, 4 bytes>
0x40037b:	test	al, al
0x40037d:	je	0x4003e6
<Block for 0x4003e6, 22 bytes>
0x4003e6:	mov	rax, qword ptr [rip + 0xffc33]
0x4003ed:	mov	rsi, rax
0x4003f0:	lea	rdi, [rip + 0xffc09]
0x4003f7:	call	0x500028
<Block for 0x40037f, 12 bytes>
0x40037f:	lea	rax, [rbp - 0x40]
0x400383:	mov	rdi, rax
0x400386:	call	0x4007ee
<Block for 0x4003fc, 13 bytes>
0x4003fc:	nop	
0x4003fd:	lea	rax, [rbp - 0x30]
0x400401:	mov	rdi, rax
0x400404:	call	0x4005a4
<Block for 0x40038b, 11 bytes>
0x40038b:	mov	eax, dword ptr [rax]
0x40038d:	test	eax, eax
0x40038f:	sete	al
0x400392:	test	al, al
0x400394:	je	0x4003a2
<Block for 0x400409, 16 bytes>
0x400409:	nop	
0x40040a:	mov	rax, qword ptr [rbp - 0x18]
0x40040e:	xor	rax, qword ptr fs:[0x28]
0x400417:	je	0x40043e
<Block for 0x4003a2, 19 bytes>
0x4003a2:	lea	rsi, [rip + 0x143]
0x4003a9:	lea	rdi, [rip + 0xffc50]
0x4003b0:	call	0x500008
<Block for 0x400396, 12 bytes>
0x400396:	lea	rax, [rbp - 0x30]
0x40039a:	mov	rdi, rax
0x40039d:	call	0x400810
<Block for 0x40043e, 7 bytes>
0x40043e:	add	rsp, 0x38
0x400442:	pop	rbx
0x400443:	pop	rbp
0x400444:	ret	
<Block for 0x400419, 2 bytes>
0x400419:	jmp	0x400439
<Block for 0x4003b5, 15 bytes>
0x4003b5:	mov	rbx, rax
0x4003b8:	lea	rax, [rbp - 0x40]
0x4003bc:	mov	rdi, rax
0x4003bf:	call	0x4007ee
<Block for 0x400439, 5 bytes>
0x400439:	call	0x500038
<Block for 0x4003c4, 12 bytes>
0x4003c4:	mov	eax, dword ptr [rax]
0x4003c6:	mov	esi, eax
0x4003c8:	mov	rdi, rbx
0x4003cb:	call	0x500010
<Block for 0x4003d0, 17 bytes>
0x4003d0:	lea	rax, [rbp - 0x40]
0x4003d4:	mov	esi, 0
0x4003d9:	mov	rdi, rax
0x4003dc:	call	0x400796
<Block for 0x4003e1, 5 bytes>
0x4003e1:	jmp	0x400358
<Block for 0x400358, 12 bytes>
0x400358:	lea	rax, [rbp - 0x30]
0x40035c:	mov	rdi, rax
0x40035f:	call	0x400724
