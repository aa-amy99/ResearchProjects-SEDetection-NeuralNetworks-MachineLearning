<Block for 0x40010e, 76 bytes>
0x40010e:	endbr64	
0x400112:	push	rbp
0x400113:	mov	rbp, rsp
0x400116:	sub	rsp, 0xf0
0x40011d:	mov	rax, qword ptr fs:[0x28]
0x400126:	mov	qword ptr [rbp - 8], rax
0x40012a:	xor	eax, eax
0x40012c:	lea	rax, [rbp - 0xe0]
0x400133:	mov	qword ptr [rbp - 0xe8], rax
0x40013a:	mov	rax, qword ptr [rbp - 0xe8]
0x400141:	mov	byte ptr [rax], 0
0x400144:	lea	rax, [rbp - 0x70]
0x400148:	mov	edx, 0x63
0x40014d:	mov	esi, 0x43
0x400152:	mov	rdi, rax
0x400155:	call	0x500000
<Block for 0x40015a, 26 bytes>
0x40015a:	mov	byte ptr [rbp - 0xd], 0
0x40015e:	lea	rdx, [rbp - 0x70]
0x400162:	mov	rax, qword ptr [rbp - 0xe8]
0x400169:	mov	rsi, rdx
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500008
<Block for 0x400174, 15 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0xe8]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500010
<Block for 0x400183, 16 bytes>
0x400183:	nop	
0x400184:	mov	rax, qword ptr [rbp - 8]
0x400188:	xor	rax, qword ptr fs:[0x28]
0x400191:	je	0x400198
<Block for 0x400198, 2 bytes>
0x400198:	leave	
0x400199:	ret	
<Block for 0x400193, 5 bytes>
0x400193:	call	0x500018
