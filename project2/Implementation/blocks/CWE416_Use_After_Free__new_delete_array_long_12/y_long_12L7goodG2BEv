<Block for 0x4001a3, 25 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	sub	rsp, 0x20
0x4001af:	mov	qword ptr [rbp - 0x18], 0
0x4001b7:	call	0x500000
<Block for 0x4001bc, 9 bytes>
0x4001bc:	test	eax, eax
0x4001be:	setne	al
0x4001c1:	test	al, al
0x4001c3:	je	0x400203
<Block for 0x400203, 10 bytes>
0x400203:	mov	edi, 0x320
0x400208:	call	0x500008
<Block for 0x4001c5, 10 bytes>
0x4001c5:	mov	edi, 0x320
0x4001ca:	call	0x500008
<Block for 0x40020d, 19 bytes>
0x40020d:	mov	qword ptr [rbp - 0x18], rax
0x400211:	mov	qword ptr [rbp - 8], 0
0x400219:	cmp	qword ptr [rbp - 8], 0x63
0x40021e:	ja	0x400241
<Block for 0x4001cf, 19 bytes>
0x4001cf:	mov	qword ptr [rbp - 0x18], rax
0x4001d3:	mov	qword ptr [rbp - 0x10], 0
0x4001db:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001e0:	ja	0x400241
<Block for 0x400220, 33 bytes>
0x400220:	mov	rax, qword ptr [rbp - 8]
0x400224:	lea	rdx, [rax*8]
0x40022c:	mov	rax, qword ptr [rbp - 0x18]
0x400230:	add	rax, rdx
0x400233:	mov	qword ptr [rax], 5
0x40023a:	add	qword ptr [rbp - 8], 1
0x40023f:	jmp	0x400219
<Block for 0x400241, 5 bytes>
0x400241:	call	0x500000
<Block for 0x4001e2, 33 bytes>
0x4001e2:	mov	rax, qword ptr [rbp - 0x10]
0x4001e6:	lea	rdx, [rax*8]
0x4001ee:	mov	rax, qword ptr [rbp - 0x18]
0x4001f2:	add	rax, rdx
0x4001f5:	mov	qword ptr [rax], 5
0x4001fc:	add	qword ptr [rbp - 0x10], 1
0x400201:	jmp	0x4001db
<Block for 0x400219, 7 bytes>
0x400219:	cmp	qword ptr [rbp - 8], 0x63
0x40021e:	ja	0x400241
<Block for 0x400246, 9 bytes>
0x400246:	test	eax, eax
0x400248:	setne	al
0x40024b:	test	al, al
0x40024d:	je	0x400260
<Block for 0x4001db, 7 bytes>
0x4001db:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001e0:	ja	0x400241
<Block for 0x400260, 15 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x18]
0x400264:	mov	rax, qword ptr [rax]
0x400267:	mov	rdi, rax
0x40026a:	call	0x500018
<Block for 0x40024f, 15 bytes>
0x40024f:	mov	rax, qword ptr [rbp - 0x18]
0x400253:	mov	rax, qword ptr [rax]
0x400256:	mov	rdi, rax
0x400259:	call	0x500018
<Block for 0x40026f, 3 bytes>
0x40026f:	nop	
0x400270:	leave	
0x400271:	ret	
<Block for 0x40025e, 2 bytes>
0x40025e:	jmp	0x40026f
