<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400022:	mov	eax, 1
0x400027:	test	eax, eax
0x400029:	je	0x40004a
<Block for 0x40004a, 9 bytes>
0x40004a:	mov	eax, 1
0x40004f:	test	eax, eax
0x400051:	je	0x4000c1
<Block for 0x40002b, 31 bytes>
0x40002b:	mov	rax, qword ptr [rip + 0xfffce]
0x400032:	lea	rdx, [rbp - 0x38]
0x400036:	lea	rsi, [rip + 0x433]
0x40003d:	mov	rdi, rax
0x400040:	mov	eax, 0
0x400045:	call	0x500008
<Block for 0x4000c1, 16 bytes>
0x4000c1:	nop	
0x4000c2:	mov	rax, qword ptr [rbp - 8]
0x4000c6:	xor	rax, qword ptr fs:[0x28]
0x4000cf:	je	0x4000d6
<Block for 0x400053, 48 bytes>
0x400053:	mov	qword ptr [rbp - 0x30], 0
0x40005b:	mov	qword ptr [rbp - 0x28], 0
0x400063:	mov	qword ptr [rbp - 0x20], 0
0x40006b:	mov	qword ptr [rbp - 0x18], 0
0x400073:	mov	qword ptr [rbp - 0x10], 0
0x40007b:	mov	eax, dword ptr [rbp - 0x38]
0x40007e:	cmp	eax, 9
0x400081:	jg	0x4000b5
<Block for 0x4000d6, 2 bytes>
0x4000d6:	leave	
0x4000d7:	ret	
<Block for 0x4000d1, 5 bytes>
0x4000d1:	call	0x500020
<Block for 0x400083, 22 bytes>
0x400083:	mov	eax, dword ptr [rbp - 0x38]
0x400086:	cdqe	
0x400088:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400090:	mov	dword ptr [rbp - 0x34], 0
0x400097:	jmp	0x4000ad
<Block for 0x4000b5, 12 bytes>
0x4000b5:	lea	rdi, [rip + 0x3bc]
0x4000bc:	call	0x500018
<Block for 0x4000ad, 6 bytes>
0x4000ad:	cmp	dword ptr [rbp - 0x34], 9
0x4000b1:	jle	0x400099
<Block for 0x400099, 16 bytes>
0x400099:	mov	eax, dword ptr [rbp - 0x34]
0x40009c:	cdqe	
0x40009e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000a2:	mov	edi, eax
0x4000a4:	call	0x500010
<Block for 0x4000b3, 2 bytes>
0x4000b3:	jmp	0x4000c1
<Block for 0x4000a9, 10 bytes>
0x4000a9:	add	dword ptr [rbp - 0x34], 1
0x4000ad:	cmp	dword ptr [rbp - 0x34], 9
0x4000b1:	jle	0x400099
