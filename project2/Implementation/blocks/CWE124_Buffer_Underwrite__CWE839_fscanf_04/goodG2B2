<Block for 0x400374, 43 bytes>
0x400374:	endbr64	
0x400378:	push	rbp
0x400379:	mov	rbp, rsp
0x40037c:	sub	rsp, 0x40
0x400380:	mov	rax, qword ptr fs:[0x28]
0x400389:	mov	qword ptr [rbp - 8], rax
0x40038d:	xor	eax, eax
0x40038f:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400396:	mov	eax, 1
0x40039b:	test	eax, eax
0x40039d:	je	0x4003a6
<Block for 0x4003a6, 9 bytes>
0x4003a6:	mov	eax, 1
0x4003ab:	test	eax, eax
0x4003ad:	je	0x40041b
<Block for 0x40039f, 16 bytes>
0x40039f:	mov	dword ptr [rbp - 0x38], 7
0x4003a6:	mov	eax, 1
0x4003ab:	test	eax, eax
0x4003ad:	je	0x40041b
<Block for 0x40041b, 16 bytes>
0x40041b:	nop	
0x40041c:	mov	rax, qword ptr [rbp - 8]
0x400420:	xor	rax, qword ptr fs:[0x28]
0x400429:	je	0x400430
<Block for 0x4003af, 46 bytes>
0x4003af:	mov	qword ptr [rbp - 0x30], 0
0x4003b7:	mov	qword ptr [rbp - 0x28], 0
0x4003bf:	mov	qword ptr [rbp - 0x20], 0
0x4003c7:	mov	qword ptr [rbp - 0x18], 0
0x4003cf:	mov	qword ptr [rbp - 0x10], 0
0x4003d7:	cmp	dword ptr [rbp - 0x38], 9
0x4003db:	jg	0x40040f
<Block for 0x400430, 2 bytes>
0x400430:	leave	
0x400431:	ret	
<Block for 0x40042b, 5 bytes>
0x40042b:	call	0x500020
<Block for 0x4003dd, 22 bytes>
0x4003dd:	mov	eax, dword ptr [rbp - 0x38]
0x4003e0:	cdqe	
0x4003e2:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4003ea:	mov	dword ptr [rbp - 0x34], 0
0x4003f1:	jmp	0x400407
<Block for 0x40040f, 12 bytes>
0x40040f:	lea	rdi, [rip + 0x62]
0x400416:	call	0x500018
<Block for 0x400407, 6 bytes>
0x400407:	cmp	dword ptr [rbp - 0x34], 9
0x40040b:	jle	0x4003f3
<Block for 0x4003f3, 16 bytes>
0x4003f3:	mov	eax, dword ptr [rbp - 0x34]
0x4003f6:	cdqe	
0x4003f8:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4003fc:	mov	edi, eax
0x4003fe:	call	0x500010
<Block for 0x40040d, 2 bytes>
0x40040d:	jmp	0x40041b
<Block for 0x400403, 10 bytes>
0x400403:	add	dword ptr [rbp - 0x34], 1
0x400407:	cmp	dword ptr [rbp - 0x34], 9
0x40040b:	jle	0x4003f3
