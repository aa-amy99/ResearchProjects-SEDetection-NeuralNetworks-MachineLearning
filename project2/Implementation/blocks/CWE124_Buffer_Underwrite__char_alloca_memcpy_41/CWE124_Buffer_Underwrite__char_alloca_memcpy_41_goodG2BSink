<Block for 0x4001d8, 60 bytes>
0x4001d8:	endbr64	
0x4001dc:	push	rbp
0x4001dd:	mov	rbp, rsp
0x4001e0:	push	rbx
0x4001e1:	sub	rsp, 0x88
0x4001e8:	mov	qword ptr [rbp - 0x88], rdi
0x4001ef:	mov	rax, qword ptr fs:[0x28]
0x4001f8:	mov	qword ptr [rbp - 0x18], rax
0x4001fc:	xor	eax, eax
0x4001fe:	lea	rax, [rbp - 0x80]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x43
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500000
<Block for 0x400214, 141 bytes>
0x400214:	mov	byte ptr [rbp - 0x1d], 0
0x400218:	mov	rax, qword ptr [rbp - 0x88]
0x40021f:	mov	rcx, qword ptr [rbp - 0x80]
0x400223:	mov	rbx, qword ptr [rbp - 0x78]
0x400227:	mov	qword ptr [rax], rcx
0x40022a:	mov	qword ptr [rax + 8], rbx
0x40022e:	mov	rcx, qword ptr [rbp - 0x70]
0x400232:	mov	rbx, qword ptr [rbp - 0x68]
0x400236:	mov	qword ptr [rax + 0x10], rcx
0x40023a:	mov	qword ptr [rax + 0x18], rbx
0x40023e:	mov	rcx, qword ptr [rbp - 0x60]
0x400242:	mov	rbx, qword ptr [rbp - 0x58]
0x400246:	mov	qword ptr [rax + 0x20], rcx
0x40024a:	mov	qword ptr [rax + 0x28], rbx
0x40024e:	mov	rcx, qword ptr [rbp - 0x50]
0x400252:	mov	rbx, qword ptr [rbp - 0x48]
0x400256:	mov	qword ptr [rax + 0x30], rcx
0x40025a:	mov	qword ptr [rax + 0x38], rbx
0x40025e:	mov	rcx, qword ptr [rbp - 0x40]
0x400262:	mov	rbx, qword ptr [rbp - 0x38]
0x400266:	mov	qword ptr [rax + 0x40], rcx
0x40026a:	mov	qword ptr [rax + 0x48], rbx
0x40026e:	mov	rcx, qword ptr [rbp - 0x30]
0x400272:	mov	rbx, qword ptr [rbp - 0x28]
0x400276:	mov	qword ptr [rax + 0x50], rcx
0x40027a:	mov	qword ptr [rax + 0x58], rbx
0x40027e:	mov	edx, dword ptr [rbp - 0x20]
0x400281:	mov	dword ptr [rax + 0x60], edx
0x400284:	mov	rax, qword ptr [rbp - 0x88]
0x40028b:	add	rax, 0x63
0x40028f:	mov	byte ptr [rax], 0
0x400292:	mov	rax, qword ptr [rbp - 0x88]
0x400299:	mov	rdi, rax
0x40029c:	call	0x500008
<Block for 0x4002a1, 16 bytes>
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 0x18]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002b6
<Block for 0x4002b6, 10 bytes>
0x4002b6:	add	rsp, 0x88
0x4002bd:	pop	rbx
0x4002be:	pop	rbp
0x4002bf:	ret	
<Block for 0x4002b1, 5 bytes>
0x4002b1:	call	0x500010
