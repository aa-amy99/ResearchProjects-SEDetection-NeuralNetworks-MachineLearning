<Block for 0x4000e8, 81 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x20
0x4000f4:	mov	rax, qword ptr fs:[0x28]
0x4000fd:	mov	qword ptr [rbp - 8], rax
0x400101:	xor	eax, eax
0x400103:	mov	eax, 0x10
0x400108:	sub	rax, 1
0x40010c:	add	rax, 0x6c
0x400110:	mov	esi, 0x10
0x400115:	mov	edx, 0
0x40011a:	div	rsi
0x40011d:	imul	rax, rax, 0x10
0x400121:	mov	rdx, rax
0x400124:	and	rdx, 0xfffffffffffff000
0x40012b:	mov	rcx, rsp
0x40012e:	sub	rcx, rdx
0x400131:	mov	rdx, rcx
0x400134:	cmp	rsp, rdx
0x400137:	je	0x40014b
<Block for 0x40014b, 26 bytes>
0x40014b:	mov	rdx, rax
0x40014e:	and	edx, 0xfff
0x400154:	sub	rsp, rdx
0x400157:	mov	rdx, rax
0x40015a:	and	edx, 0xfff
0x400160:	test	rdx, rdx
0x400163:	je	0x400175
<Block for 0x400139, 18 bytes>
0x400139:	sub	rsp, 0x1000
0x400140:	or	qword ptr [rsp + 0xff8], 0
0x400149:	jmp	0x400134
<Block for 0x400175, 41 bytes>
0x400175:	mov	rax, rsp
0x400178:	add	rax, 0xf
0x40017c:	shr	rax, 4
0x400180:	shl	rax, 4
0x400184:	mov	qword ptr [rbp - 0x18], rax
0x400188:	mov	rax, qword ptr [rbp - 0x18]
0x40018c:	mov	edx, 0x63
0x400191:	mov	esi, 0x41
0x400196:	mov	rdi, rax
0x400199:	call	0x500000
<Block for 0x400165, 57 bytes>
0x400165:	and	eax, 0xfff
0x40016a:	sub	rax, 8
0x40016e:	add	rax, rsp
0x400171:	or	qword ptr [rax], 0
0x400175:	mov	rax, rsp
0x400178:	add	rax, 0xf
0x40017c:	shr	rax, 4
0x400180:	shl	rax, 4
0x400184:	mov	qword ptr [rbp - 0x18], rax
0x400188:	mov	rax, qword ptr [rbp - 0x18]
0x40018c:	mov	edx, 0x63
0x400191:	mov	esi, 0x41
0x400196:	mov	rdi, rax
0x400199:	call	0x500000
<Block for 0x400134, 5 bytes>
0x400134:	cmp	rsp, rdx
0x400137:	je	0x40014b
<Block for 0x40019e, 35 bytes>
0x40019e:	mov	rax, qword ptr [rbp - 0x18]
0x4001a2:	add	rax, 0x63
0x4001a6:	mov	byte ptr [rax], 0
0x4001a9:	mov	rax, qword ptr [rbp - 0x18]
0x4001ad:	sub	rax, 8
0x4001b1:	mov	qword ptr [rbp - 0x10], rax
0x4001b5:	mov	rax, qword ptr [rbp - 0x10]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x400000
<Block for 0x4001c1, 16 bytes>
0x4001c1:	nop	
0x4001c2:	mov	rax, qword ptr [rbp - 8]
0x4001c6:	xor	rax, qword ptr fs:[0x28]
0x4001cf:	je	0x4001d6
<Block for 0x4001d6, 2 bytes>
0x4001d6:	leave	
0x4001d7:	ret	
<Block for 0x4001d1, 5 bytes>
0x4001d1:	call	0x500010
