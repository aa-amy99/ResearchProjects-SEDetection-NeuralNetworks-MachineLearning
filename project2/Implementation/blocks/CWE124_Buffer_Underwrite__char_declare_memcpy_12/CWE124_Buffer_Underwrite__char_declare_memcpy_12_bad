<Block for 0x400000, 56 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xf8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xf0]
0x400026:	mov	edx, 0x63
0x40002b:	mov	esi, 0x41
0x400030:	mov	rdi, rax
0x400033:	call	0x500000
<Block for 0x400038, 17 bytes>
0x400038:	mov	byte ptr [rbp - 0x8d], 0
0x40003f:	mov	eax, 0
0x400044:	call	0x500008
<Block for 0x400049, 4 bytes>
0x400049:	test	eax, eax
0x40004b:	je	0x400061
<Block for 0x400061, 36 bytes>
0x400061:	lea	rax, [rbp - 0xf0]
0x400068:	mov	qword ptr [rbp - 0xf8], rax
0x40006f:	lea	rax, [rbp - 0x80]
0x400073:	mov	edx, 0x63
0x400078:	mov	esi, 0x43
0x40007d:	mov	rdi, rax
0x400080:	call	0x500000
<Block for 0x40004d, 20 bytes>
0x40004d:	lea	rax, [rbp - 0xf0]
0x400054:	sub	rax, 8
0x400058:	mov	qword ptr [rbp - 0xf8], rax
0x40005f:	jmp	0x40006f
<Block for 0x400085, 141 bytes>
0x400085:	mov	byte ptr [rbp - 0x1d], 0
0x400089:	mov	rax, qword ptr [rbp - 0xf8]
0x400090:	mov	rcx, qword ptr [rbp - 0x80]
0x400094:	mov	rbx, qword ptr [rbp - 0x78]
0x400098:	mov	qword ptr [rax], rcx
0x40009b:	mov	qword ptr [rax + 8], rbx
0x40009f:	mov	rcx, qword ptr [rbp - 0x70]
0x4000a3:	mov	rbx, qword ptr [rbp - 0x68]
0x4000a7:	mov	qword ptr [rax + 0x10], rcx
0x4000ab:	mov	qword ptr [rax + 0x18], rbx
0x4000af:	mov	rcx, qword ptr [rbp - 0x60]
0x4000b3:	mov	rbx, qword ptr [rbp - 0x58]
0x4000b7:	mov	qword ptr [rax + 0x20], rcx
0x4000bb:	mov	qword ptr [rax + 0x28], rbx
0x4000bf:	mov	rcx, qword ptr [rbp - 0x50]
0x4000c3:	mov	rbx, qword ptr [rbp - 0x48]
0x4000c7:	mov	qword ptr [rax + 0x30], rcx
0x4000cb:	mov	qword ptr [rax + 0x38], rbx
0x4000cf:	mov	rcx, qword ptr [rbp - 0x40]
0x4000d3:	mov	rbx, qword ptr [rbp - 0x38]
0x4000d7:	mov	qword ptr [rax + 0x40], rcx
0x4000db:	mov	qword ptr [rax + 0x48], rbx
0x4000df:	mov	rcx, qword ptr [rbp - 0x30]
0x4000e3:	mov	rbx, qword ptr [rbp - 0x28]
0x4000e7:	mov	qword ptr [rax + 0x50], rcx
0x4000eb:	mov	qword ptr [rax + 0x58], rbx
0x4000ef:	mov	edx, dword ptr [rbp - 0x20]
0x4000f2:	mov	dword ptr [rax + 0x60], edx
0x4000f5:	mov	rax, qword ptr [rbp - 0xf8]
0x4000fc:	add	rax, 0x63
0x400100:	mov	byte ptr [rax], 0
0x400103:	mov	rax, qword ptr [rbp - 0xf8]
0x40010a:	mov	rdi, rax
0x40010d:	call	0x500010
<Block for 0x40006f, 22 bytes>
0x40006f:	lea	rax, [rbp - 0x80]
0x400073:	mov	edx, 0x63
0x400078:	mov	esi, 0x43
0x40007d:	mov	rdi, rax
0x400080:	call	0x500000
<Block for 0x400112, 16 bytes>
0x400112:	nop	
0x400113:	mov	rax, qword ptr [rbp - 0x18]
0x400117:	xor	rax, qword ptr fs:[0x28]
0x400120:	je	0x400127
<Block for 0x400127, 10 bytes>
0x400127:	add	rsp, 0xf8
0x40012e:	pop	rbx
0x40012f:	pop	rbp
0x400130:	ret	
<Block for 0x400122, 5 bytes>
0x400122:	call	0x500018
