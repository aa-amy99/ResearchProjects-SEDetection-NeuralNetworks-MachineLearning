<Block for 0x400131, 56 bytes>
0x400131:	endbr64	
0x400135:	push	rbp
0x400136:	mov	rbp, rsp
0x400139:	push	rbx
0x40013a:	sub	rsp, 0xf8
0x400141:	mov	rax, qword ptr fs:[0x28]
0x40014a:	mov	qword ptr [rbp - 0x18], rax
0x40014e:	xor	eax, eax
0x400150:	lea	rax, [rbp - 0xf0]
0x400157:	mov	edx, 0x63
0x40015c:	mov	esi, 0x41
0x400161:	mov	rdi, rax
0x400164:	call	0x500000
<Block for 0x400169, 17 bytes>
0x400169:	mov	byte ptr [rbp - 0x8d], 0
0x400170:	mov	eax, 0
0x400175:	call	0x500008
<Block for 0x40017a, 4 bytes>
0x40017a:	test	eax, eax
0x40017c:	je	0x40018e
<Block for 0x40018e, 36 bytes>
0x40018e:	lea	rax, [rbp - 0xf0]
0x400195:	mov	qword ptr [rbp - 0xf8], rax
0x40019c:	lea	rax, [rbp - 0x80]
0x4001a0:	mov	edx, 0x63
0x4001a5:	mov	esi, 0x43
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x500000
<Block for 0x40017e, 16 bytes>
0x40017e:	lea	rax, [rbp - 0xf0]
0x400185:	mov	qword ptr [rbp - 0xf8], rax
0x40018c:	jmp	0x40019c
<Block for 0x4001b2, 141 bytes>
0x4001b2:	mov	byte ptr [rbp - 0x1d], 0
0x4001b6:	mov	rax, qword ptr [rbp - 0xf8]
0x4001bd:	mov	rcx, qword ptr [rbp - 0x80]
0x4001c1:	mov	rbx, qword ptr [rbp - 0x78]
0x4001c5:	mov	qword ptr [rax], rcx
0x4001c8:	mov	qword ptr [rax + 8], rbx
0x4001cc:	mov	rcx, qword ptr [rbp - 0x70]
0x4001d0:	mov	rbx, qword ptr [rbp - 0x68]
0x4001d4:	mov	qword ptr [rax + 0x10], rcx
0x4001d8:	mov	qword ptr [rax + 0x18], rbx
0x4001dc:	mov	rcx, qword ptr [rbp - 0x60]
0x4001e0:	mov	rbx, qword ptr [rbp - 0x58]
0x4001e4:	mov	qword ptr [rax + 0x20], rcx
0x4001e8:	mov	qword ptr [rax + 0x28], rbx
0x4001ec:	mov	rcx, qword ptr [rbp - 0x50]
0x4001f0:	mov	rbx, qword ptr [rbp - 0x48]
0x4001f4:	mov	qword ptr [rax + 0x30], rcx
0x4001f8:	mov	qword ptr [rax + 0x38], rbx
0x4001fc:	mov	rcx, qword ptr [rbp - 0x40]
0x400200:	mov	rbx, qword ptr [rbp - 0x38]
0x400204:	mov	qword ptr [rax + 0x40], rcx
0x400208:	mov	qword ptr [rax + 0x48], rbx
0x40020c:	mov	rcx, qword ptr [rbp - 0x30]
0x400210:	mov	rbx, qword ptr [rbp - 0x28]
0x400214:	mov	qword ptr [rax + 0x50], rcx
0x400218:	mov	qword ptr [rax + 0x58], rbx
0x40021c:	mov	edx, dword ptr [rbp - 0x20]
0x40021f:	mov	dword ptr [rax + 0x60], edx
0x400222:	mov	rax, qword ptr [rbp - 0xf8]
0x400229:	add	rax, 0x63
0x40022d:	mov	byte ptr [rax], 0
0x400230:	mov	rax, qword ptr [rbp - 0xf8]
0x400237:	mov	rdi, rax
0x40023a:	call	0x500010
<Block for 0x40019c, 22 bytes>
0x40019c:	lea	rax, [rbp - 0x80]
0x4001a0:	mov	edx, 0x63
0x4001a5:	mov	esi, 0x43
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x500000
<Block for 0x40023f, 16 bytes>
0x40023f:	nop	
0x400240:	mov	rax, qword ptr [rbp - 0x18]
0x400244:	xor	rax, qword ptr fs:[0x28]
0x40024d:	je	0x400254
<Block for 0x400254, 10 bytes>
0x400254:	add	rsp, 0xf8
0x40025b:	pop	rbx
0x40025c:	pop	rbp
0x40025d:	ret	
<Block for 0x40024f, 5 bytes>
0x40024f:	call	0x500018
