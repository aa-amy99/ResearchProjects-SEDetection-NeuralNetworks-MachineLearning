<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4003e6
<Block for 0x40002b, 30 bytes>
0x40002b:	mov	qword ptr [rbp - 0x88], 0
0x400036:	lea	rsi, [rip + 0x28d]
0x40003d:	lea	rdi, [rip + 0x289]
0x400044:	call	0x500000
<Block for 0x400049, 33 bytes>
0x400049:	mov	qword ptr [rbp - 0x88], rax
0x400050:	mov	dword ptr [rbp - 0x50], 0
0x400057:	lea	rdx, [rbp - 0x50]
0x40005b:	lea	rax, [rbp - 0x80]
0x40005f:	mov	rsi, rdx
0x400062:	mov	rdi, rax
0x400065:	call	0x40059e
<Block for 0x40006a, 36 bytes>
0x40006a:	mov	rdx, qword ptr [rbp - 0x88]
0x400071:	mov	qword ptr [rax], rdx
0x400074:	mov	dword ptr [rbp - 0x50], 1
0x40007b:	lea	rdx, [rbp - 0x50]
0x40007f:	lea	rax, [rbp - 0x80]
0x400083:	mov	rsi, rdx
0x400086:	mov	rdi, rax
0x400089:	call	0x40059e
<Block for 0x40008e, 36 bytes>
0x40008e:	mov	rdx, qword ptr [rbp - 0x88]
0x400095:	mov	qword ptr [rax], rdx
0x400098:	mov	dword ptr [rbp - 0x50], 2
0x40009f:	lea	rdx, [rbp - 0x50]
0x4000a3:	lea	rax, [rbp - 0x80]
0x4000a7:	mov	rsi, rdx
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x40059e
<Block for 0x4000b2, 29 bytes>
0x4000b2:	mov	rdx, qword ptr [rbp - 0x88]
0x4000b9:	mov	qword ptr [rax], rdx
0x4000bc:	lea	rdx, [rbp - 0x80]
0x4000c0:	lea	rax, [rbp - 0x50]
0x4000c4:	mov	rsi, rdx
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x400426
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rax, [rbp - 0x50]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500008
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rax, [rbp - 0x50]
0x4000df:	mov	rdi, rax
0x4000e2:	call	0x400406
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rax, [rbp - 0x80]
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x400406
<Block for 0x4000f3, 16 bytes>
0x4000f3:	nop	
0x4000f4:	mov	rax, qword ptr [rbp - 0x18]
0x4000f8:	xor	rax, qword ptr fs:[0x28]
0x400101:	je	0x40013d
<Block for 0x40013d, 10 bytes>
0x40013d:	add	rsp, 0x88
0x400144:	pop	rbx
0x400145:	pop	rbp
0x400146:	ret	
<Block for 0x400103, 2 bytes>
0x400103:	jmp	0x400138
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500018
