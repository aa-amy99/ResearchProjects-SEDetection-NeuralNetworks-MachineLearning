<Block for 0x400147, 43 bytes>
0x400147:	endbr64	
0x40014b:	push	rbp
0x40014c:	mov	rbp, rsp
0x40014f:	push	rbx
0x400150:	sub	rsp, 0x88
0x400157:	mov	rax, qword ptr fs:[0x28]
0x400160:	mov	qword ptr [rbp - 0x18], rax
0x400164:	xor	eax, eax
0x400166:	lea	rax, [rbp - 0x80]
0x40016a:	mov	rdi, rax
0x40016d:	call	0x4003e6
<Block for 0x400172, 30 bytes>
0x400172:	mov	qword ptr [rbp - 0x88], 0
0x40017d:	lea	rsi, [rip + 0x146]
0x400184:	lea	rdi, [rip + 0x142]
0x40018b:	call	0x500000
<Block for 0x400190, 33 bytes>
0x400190:	mov	qword ptr [rbp - 0x88], rax
0x400197:	mov	dword ptr [rbp - 0x50], 0
0x40019e:	lea	rdx, [rbp - 0x50]
0x4001a2:	lea	rax, [rbp - 0x80]
0x4001a6:	mov	rsi, rdx
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x40059e
<Block for 0x4001b1, 36 bytes>
0x4001b1:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b8:	mov	qword ptr [rax], rdx
0x4001bb:	mov	dword ptr [rbp - 0x50], 1
0x4001c2:	lea	rdx, [rbp - 0x50]
0x4001c6:	lea	rax, [rbp - 0x80]
0x4001ca:	mov	rsi, rdx
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x40059e
<Block for 0x4001d5, 36 bytes>
0x4001d5:	mov	rdx, qword ptr [rbp - 0x88]
0x4001dc:	mov	qword ptr [rax], rdx
0x4001df:	mov	dword ptr [rbp - 0x50], 2
0x4001e6:	lea	rdx, [rbp - 0x50]
0x4001ea:	lea	rax, [rbp - 0x80]
0x4001ee:	mov	rsi, rdx
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x40059e
<Block for 0x4001f9, 29 bytes>
0x4001f9:	mov	rdx, qword ptr [rbp - 0x88]
0x400200:	mov	qword ptr [rax], rdx
0x400203:	lea	rdx, [rbp - 0x80]
0x400207:	lea	rax, [rbp - 0x50]
0x40020b:	mov	rsi, rdx
0x40020e:	mov	rdi, rax
0x400211:	call	0x400426
<Block for 0x400216, 12 bytes>
0x400216:	lea	rax, [rbp - 0x50]
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500020
<Block for 0x400222, 12 bytes>
0x400222:	lea	rax, [rbp - 0x50]
0x400226:	mov	rdi, rax
0x400229:	call	0x400406
<Block for 0x40022e, 12 bytes>
0x40022e:	lea	rax, [rbp - 0x80]
0x400232:	mov	rdi, rax
0x400235:	call	0x400406
<Block for 0x40023a, 16 bytes>
0x40023a:	nop	
0x40023b:	mov	rax, qword ptr [rbp - 0x18]
0x40023f:	xor	rax, qword ptr fs:[0x28]
0x400248:	je	0x400284
<Block for 0x400284, 10 bytes>
0x400284:	add	rsp, 0x88
0x40028b:	pop	rbx
0x40028c:	pop	rbp
0x40028d:	ret	
<Block for 0x40024a, 2 bytes>
0x40024a:	jmp	0x40027f
<Block for 0x40027f, 5 bytes>
0x40027f:	call	0x500018
