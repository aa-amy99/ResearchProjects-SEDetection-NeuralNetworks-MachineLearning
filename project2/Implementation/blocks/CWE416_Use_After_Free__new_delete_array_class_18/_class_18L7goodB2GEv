<Block for 0x400098, 35 bytes>
0x400098:	endbr64	
0x40009c:	push	rbp
0x40009d:	mov	rbp, rsp
0x4000a0:	sub	rsp, 0x10
0x4000a4:	mov	qword ptr [rbp - 8], 0
0x4000ac:	nop	
0x4000ad:	endbr64	
0x4000b1:	mov	edi, 0x320
0x4000b6:	call	0x500000
<Block for 0x4000bb, 19 bytes>
0x4000bb:	mov	qword ptr [rbp - 8], rax
0x4000bf:	mov	qword ptr [rbp - 0x10], 0
0x4000c7:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000cc:	ja	0x400108
<Block for 0x4000ce, 58 bytes>
0x4000ce:	mov	rax, qword ptr [rbp - 0x10]
0x4000d2:	lea	rdx, [rax*8]
0x4000da:	mov	rax, qword ptr [rbp - 8]
0x4000de:	add	rax, rdx
0x4000e1:	mov	dword ptr [rax], 1
0x4000e7:	mov	rax, qword ptr [rbp - 0x10]
0x4000eb:	lea	rdx, [rax*8]
0x4000f3:	mov	rax, qword ptr [rbp - 8]
0x4000f7:	add	rax, rdx
0x4000fa:	mov	dword ptr [rax + 4], 2
0x400101:	add	qword ptr [rbp - 0x10], 1
0x400106:	jmp	0x4000c7
<Block for 0x400108, 7 bytes>
0x400108:	cmp	qword ptr [rbp - 8], 0
0x40010d:	je	0x40011b
<Block for 0x4000c7, 7 bytes>
0x4000c7:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000cc:	ja	0x400108
<Block for 0x40011b, 8 bytes>
0x40011b:	nop	
0x40011c:	endbr64	
0x400120:	nop	
0x400121:	leave	
0x400122:	ret	
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	mov	rdi, rax
0x400116:	call	0x500008
