<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4003bc
<Block for 0x40002b, 52 bytes>
0x40002b:	mov	qword ptr [rbp - 0x88], 0
0x400036:	mov	byte ptr [rbp - 0x50], 0x61
0x40003a:	lea	rax, [rbp - 0x50]
0x40003e:	mov	qword ptr [rbp - 0x88], rax
0x400045:	mov	dword ptr [rbp - 0x50], 0
0x40004c:	lea	rdx, [rbp - 0x50]
0x400050:	lea	rax, [rbp - 0x80]
0x400054:	mov	rsi, rdx
0x400057:	mov	rdi, rax
0x40005a:	call	0x400572
<Block for 0x40005f, 36 bytes>
0x40005f:	mov	rdx, qword ptr [rbp - 0x88]
0x400066:	mov	qword ptr [rax], rdx
0x400069:	mov	dword ptr [rbp - 0x50], 1
0x400070:	lea	rdx, [rbp - 0x50]
0x400074:	lea	rax, [rbp - 0x80]
0x400078:	mov	rsi, rdx
0x40007b:	mov	rdi, rax
0x40007e:	call	0x400572
<Block for 0x400083, 36 bytes>
0x400083:	mov	rdx, qword ptr [rbp - 0x88]
0x40008a:	mov	qword ptr [rax], rdx
0x40008d:	mov	dword ptr [rbp - 0x50], 2
0x400094:	lea	rdx, [rbp - 0x50]
0x400098:	lea	rax, [rbp - 0x80]
0x40009c:	mov	rsi, rdx
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x400572
<Block for 0x4000a7, 29 bytes>
0x4000a7:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ae:	mov	qword ptr [rax], rdx
0x4000b1:	lea	rdx, [rbp - 0x80]
0x4000b5:	lea	rax, [rbp - 0x50]
0x4000b9:	mov	rsi, rdx
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x4003fc
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rax, [rbp - 0x50]
0x4000c8:	mov	rdi, rax
0x4000cb:	call	0x500000
<Block for 0x4000d0, 12 bytes>
0x4000d0:	lea	rax, [rbp - 0x50]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x4003dc
<Block for 0x4000dc, 12 bytes>
0x4000dc:	lea	rax, [rbp - 0x80]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x4003dc
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 0x18]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x400132
<Block for 0x400132, 10 bytes>
0x400132:	add	rsp, 0x88
0x400139:	pop	rbx
0x40013a:	pop	rbp
0x40013b:	ret	
<Block for 0x4000f8, 2 bytes>
0x4000f8:	jmp	0x40012d
<Block for 0x40012d, 5 bytes>
0x40012d:	call	0x500010
