<Block for 0x40013c, 43 bytes>
0x40013c:	endbr64	
0x400140:	push	rbp
0x400141:	mov	rbp, rsp
0x400144:	push	rbx
0x400145:	sub	rsp, 0x88
0x40014c:	mov	rax, qword ptr fs:[0x28]
0x400155:	mov	qword ptr [rbp - 0x18], rax
0x400159:	xor	eax, eax
0x40015b:	lea	rax, [rbp - 0x80]
0x40015f:	mov	rdi, rax
0x400162:	call	0x4003bc
<Block for 0x400167, 55 bytes>
0x400167:	mov	qword ptr [rbp - 0x88], 0
0x400172:	mov	dword ptr [rbp - 0x50], 8
0x400179:	lea	rax, [rbp - 0x50]
0x40017d:	mov	qword ptr [rbp - 0x88], rax
0x400184:	mov	dword ptr [rbp - 0x50], 0
0x40018b:	lea	rdx, [rbp - 0x50]
0x40018f:	lea	rax, [rbp - 0x80]
0x400193:	mov	rsi, rdx
0x400196:	mov	rdi, rax
0x400199:	call	0x400572
<Block for 0x40019e, 36 bytes>
0x40019e:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a5:	mov	qword ptr [rax], rdx
0x4001a8:	mov	dword ptr [rbp - 0x50], 1
0x4001af:	lea	rdx, [rbp - 0x50]
0x4001b3:	lea	rax, [rbp - 0x80]
0x4001b7:	mov	rsi, rdx
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x400572
<Block for 0x4001c2, 36 bytes>
0x4001c2:	mov	rdx, qword ptr [rbp - 0x88]
0x4001c9:	mov	qword ptr [rax], rdx
0x4001cc:	mov	dword ptr [rbp - 0x50], 2
0x4001d3:	lea	rdx, [rbp - 0x50]
0x4001d7:	lea	rax, [rbp - 0x80]
0x4001db:	mov	rsi, rdx
0x4001de:	mov	rdi, rax
0x4001e1:	call	0x400572
<Block for 0x4001e6, 29 bytes>
0x4001e6:	mov	rdx, qword ptr [rbp - 0x88]
0x4001ed:	mov	qword ptr [rax], rdx
0x4001f0:	lea	rdx, [rbp - 0x80]
0x4001f4:	lea	rax, [rbp - 0x50]
0x4001f8:	mov	rsi, rdx
0x4001fb:	mov	rdi, rax
0x4001fe:	call	0x4003fc
<Block for 0x400203, 12 bytes>
0x400203:	lea	rax, [rbp - 0x50]
0x400207:	mov	rdi, rax
0x40020a:	call	0x500018
<Block for 0x40020f, 12 bytes>
0x40020f:	lea	rax, [rbp - 0x50]
0x400213:	mov	rdi, rax
0x400216:	call	0x4003dc
<Block for 0x40021b, 12 bytes>
0x40021b:	lea	rax, [rbp - 0x80]
0x40021f:	mov	rdi, rax
0x400222:	call	0x4003dc
<Block for 0x400227, 16 bytes>
0x400227:	nop	
0x400228:	mov	rax, qword ptr [rbp - 0x18]
0x40022c:	xor	rax, qword ptr fs:[0x28]
0x400235:	je	0x400271
<Block for 0x400271, 10 bytes>
0x400271:	add	rsp, 0x88
0x400278:	pop	rbx
0x400279:	pop	rbp
0x40027a:	ret	
<Block for 0x400237, 2 bytes>
0x400237:	jmp	0x40026c
<Block for 0x40026c, 5 bytes>
0x40026c:	call	0x500010
