<Block for 0x4001f6, 65 bytes>
0x4001f6:	endbr64	
0x4001fa:	push	rbp
0x4001fb:	mov	rbp, rsp
0x4001fe:	push	rbx
0x4001ff:	sub	rsp, 0x58
0x400203:	mov	rax, qword ptr fs:[0x28]
0x40020c:	mov	qword ptr [rbp - 0x18], rax
0x400210:	xor	eax, eax
0x400212:	lea	rax, [rbp - 0x60]
0x400216:	mov	qword ptr [rbp - 0x50], rax
0x40021a:	lea	rax, [rbp - 0x60]
0x40021e:	mov	qword ptr [rbp - 0x48], rax
0x400222:	mov	dword ptr [rbp - 0x60], 0xffffffff
0x400229:	mov	rax, qword ptr [rbp - 0x50]
0x40022d:	mov	eax, dword ptr [rax]
0x40022f:	mov	dword ptr [rbp - 0x58], eax
0x400232:	call	0x500000
<Block for 0x400237, 7 bytes>
0x400237:	and	eax, 1
0x40023a:	test	eax, eax
0x40023c:	je	0x40025b
<Block for 0x40025b, 5 bytes>
0x40025b:	call	0x500000
<Block for 0x40023e, 5 bytes>
0x40023e:	call	0x500000
<Block for 0x400260, 10 bytes>
0x400260:	shl	eax, 0x1e
0x400263:	mov	ebx, eax
0x400265:	call	0x500000
<Block for 0x400243, 10 bytes>
0x400243:	shl	eax, 0x1e
0x400246:	mov	ebx, eax
0x400248:	call	0x500000
<Block for 0x40026a, 10 bytes>
0x40026a:	shl	eax, 0xf
0x40026d:	xor	ebx, eax
0x40026f:	call	0x500000
<Block for 0x40024d, 10 bytes>
0x40024d:	shl	eax, 0xf
0x400250:	xor	ebx, eax
0x400252:	call	0x500000
<Block for 0x400274, 71 bytes>
0x400274:	xor	eax, ebx
0x400276:	not	eax
0x400278:	mov	dword ptr [rbp - 0x58], eax
0x40027b:	mov	rax, qword ptr [rbp - 0x50]
0x40027f:	mov	edx, dword ptr [rbp - 0x58]
0x400282:	mov	dword ptr [rax], edx
0x400284:	mov	rax, qword ptr [rbp - 0x48]
0x400288:	mov	eax, dword ptr [rax]
0x40028a:	mov	dword ptr [rbp - 0x54], eax
0x40028d:	mov	qword ptr [rbp - 0x40], 0
0x400295:	mov	qword ptr [rbp - 0x38], 0
0x40029d:	mov	qword ptr [rbp - 0x30], 0
0x4002a5:	mov	qword ptr [rbp - 0x28], 0
0x4002ad:	mov	qword ptr [rbp - 0x20], 0
0x4002b5:	cmp	dword ptr [rbp - 0x54], 0
0x4002b9:	js	0x4002f3
<Block for 0x400257, 4 bytes>
0x400257:	xor	eax, ebx
0x400259:	jmp	0x400278
<Block for 0x4002f3, 12 bytes>
0x4002f3:	lea	rdi, [rip + 0x66]
0x4002fa:	call	0x500010
<Block for 0x4002bb, 6 bytes>
0x4002bb:	cmp	dword ptr [rbp - 0x54], 9
0x4002bf:	jg	0x4002f3
<Block for 0x400278, 67 bytes>
0x400278:	mov	dword ptr [rbp - 0x58], eax
0x40027b:	mov	rax, qword ptr [rbp - 0x50]
0x40027f:	mov	edx, dword ptr [rbp - 0x58]
0x400282:	mov	dword ptr [rax], edx
0x400284:	mov	rax, qword ptr [rbp - 0x48]
0x400288:	mov	eax, dword ptr [rax]
0x40028a:	mov	dword ptr [rbp - 0x54], eax
0x40028d:	mov	qword ptr [rbp - 0x40], 0
0x400295:	mov	qword ptr [rbp - 0x38], 0
0x40029d:	mov	qword ptr [rbp - 0x30], 0
0x4002a5:	mov	qword ptr [rbp - 0x28], 0
0x4002ad:	mov	qword ptr [rbp - 0x20], 0
0x4002b5:	cmp	dword ptr [rbp - 0x54], 0
0x4002b9:	js	0x4002f3
<Block for 0x4002ff, 16 bytes>
0x4002ff:	nop	
0x400300:	mov	rax, qword ptr [rbp - 0x18]
0x400304:	xor	rax, qword ptr fs:[0x28]
0x40030d:	je	0x400314
<Block for 0x4002c1, 22 bytes>
0x4002c1:	mov	eax, dword ptr [rbp - 0x54]
0x4002c4:	cdqe	
0x4002c6:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4002ce:	mov	dword ptr [rbp - 0x5c], 0
0x4002d5:	jmp	0x4002eb
<Block for 0x400314, 7 bytes>
0x400314:	add	rsp, 0x58
0x400318:	pop	rbx
0x400319:	pop	rbp
0x40031a:	ret	
<Block for 0x40030f, 5 bytes>
0x40030f:	call	0x500018
<Block for 0x4002eb, 6 bytes>
0x4002eb:	cmp	dword ptr [rbp - 0x5c], 9
0x4002ef:	jle	0x4002d7
<Block for 0x4002d7, 16 bytes>
0x4002d7:	mov	eax, dword ptr [rbp - 0x5c]
0x4002da:	cdqe	
0x4002dc:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002e0:	mov	edi, eax
0x4002e2:	call	0x500008
<Block for 0x4002f1, 2 bytes>
0x4002f1:	jmp	0x4002ff
<Block for 0x4002e7, 10 bytes>
0x4002e7:	add	dword ptr [rbp - 0x5c], 1
0x4002eb:	cmp	dword ptr [rbp - 0x5c], 9
0x4002ef:	jle	0x4002d7
