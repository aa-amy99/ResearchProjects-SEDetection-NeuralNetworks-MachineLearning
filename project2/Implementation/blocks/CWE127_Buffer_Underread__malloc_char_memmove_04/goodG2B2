<Block for 0x4001ac, 44 bytes>
0x4001ac:	endbr64	
0x4001b0:	push	rbp
0x4001b1:	mov	rbp, rsp
0x4001b4:	add	rsp, -0x80
0x4001b8:	mov	rax, qword ptr fs:[0x28]
0x4001c1:	mov	qword ptr [rbp - 8], rax
0x4001c5:	xor	eax, eax
0x4001c7:	mov	qword ptr [rbp - 0x80], 0
0x4001cf:	mov	eax, 1
0x4001d4:	test	eax, eax
0x4001d6:	je	0x400220
<Block for 0x400220, 22 bytes>
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	edx, 0x63
0x400229:	mov	esi, 0x43
0x40022e:	mov	rdi, rax
0x400231:	call	0x500010
<Block for 0x4001d8, 10 bytes>
0x4001d8:	mov	edi, 0x64
0x4001dd:	call	0x500000
<Block for 0x400236, 28 bytes>
0x400236:	mov	byte ptr [rbp - 0xd], 0
0x40023a:	mov	rcx, qword ptr [rbp - 0x80]
0x40023e:	lea	rax, [rbp - 0x70]
0x400242:	mov	edx, 0x64
0x400247:	mov	rsi, rcx
0x40024a:	mov	rdi, rax
0x40024d:	call	0x500018
<Block for 0x4001e2, 11 bytes>
0x4001e2:	mov	qword ptr [rbp - 0x78], rax
0x4001e6:	cmp	qword ptr [rbp - 0x78], 0
0x4001eb:	jne	0x4001f7
<Block for 0x400252, 16 bytes>
0x400252:	mov	byte ptr [rbp - 0xd], 0
0x400256:	lea	rax, [rbp - 0x70]
0x40025a:	mov	rdi, rax
0x40025d:	call	0x500020
<Block for 0x4001ed, 10 bytes>
0x4001ed:	mov	edi, 0xffffffff
0x4001f2:	call	0x500008
<Block for 0x4001f7, 22 bytes>
0x4001f7:	mov	rax, qword ptr [rbp - 0x78]
0x4001fb:	mov	edx, 0x63
0x400200:	mov	esi, 0x41
0x400205:	mov	rdi, rax
0x400208:	call	0x500010
<Block for 0x400262, 16 bytes>
0x400262:	nop	
0x400263:	mov	rax, qword ptr [rbp - 8]
0x400267:	xor	rax, qword ptr fs:[0x28]
0x400270:	je	0x400277
<Block for 0x40020d, 41 bytes>
0x40020d:	mov	rax, qword ptr [rbp - 0x78]
0x400211:	add	rax, 0x63
0x400215:	mov	byte ptr [rax], 0
0x400218:	mov	rax, qword ptr [rbp - 0x78]
0x40021c:	mov	qword ptr [rbp - 0x80], rax
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	edx, 0x63
0x400229:	mov	esi, 0x43
0x40022e:	mov	rdi, rax
0x400231:	call	0x500010
<Block for 0x400277, 2 bytes>
0x400277:	leave	
0x400278:	ret	
<Block for 0x400272, 5 bytes>
0x400272:	call	0x500028
