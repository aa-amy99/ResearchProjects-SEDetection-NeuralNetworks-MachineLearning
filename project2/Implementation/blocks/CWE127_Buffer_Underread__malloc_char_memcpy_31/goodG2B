<Block for 0x400159, 52 bytes>
0x400159:	endbr64	
0x40015d:	push	rbp
0x40015e:	mov	rbp, rsp
0x400161:	push	rbx
0x400162:	sub	rsp, 0x98
0x400169:	mov	rax, qword ptr fs:[0x28]
0x400172:	mov	qword ptr [rbp - 0x18], rax
0x400176:	xor	eax, eax
0x400178:	mov	qword ptr [rbp - 0xa0], 0
0x400183:	mov	edi, 0x64
0x400188:	call	0x500000
<Block for 0x40018d, 17 bytes>
0x40018d:	mov	qword ptr [rbp - 0x98], rax
0x400194:	cmp	qword ptr [rbp - 0x98], 0
0x40019c:	jne	0x4001a8
<Block for 0x40019e, 10 bytes>
0x40019e:	mov	edi, 0xffffffff
0x4001a3:	call	0x500008
<Block for 0x4001a8, 25 bytes>
0x4001a8:	mov	rax, qword ptr [rbp - 0x98]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x41
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500010
<Block for 0x4001c1, 78 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 0x98]
0x4001c8:	add	rax, 0x63
0x4001cc:	mov	byte ptr [rax], 0
0x4001cf:	mov	rax, qword ptr [rbp - 0x98]
0x4001d6:	mov	qword ptr [rbp - 0xa0], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0xa0]
0x4001e4:	mov	qword ptr [rbp - 0x90], rax
0x4001eb:	mov	rax, qword ptr [rbp - 0x90]
0x4001f2:	mov	qword ptr [rbp - 0x88], rax
0x4001f9:	lea	rax, [rbp - 0x80]
0x4001fd:	mov	edx, 0x63
0x400202:	mov	esi, 0x43
0x400207:	mov	rdi, rax
0x40020a:	call	0x500010
<Block for 0x40020f, 128 bytes>
0x40020f:	mov	byte ptr [rbp - 0x1d], 0
0x400213:	mov	rax, qword ptr [rbp - 0x88]
0x40021a:	mov	rcx, qword ptr [rax]
0x40021d:	mov	rbx, qword ptr [rax + 8]
0x400221:	mov	qword ptr [rbp - 0x80], rcx
0x400225:	mov	qword ptr [rbp - 0x78], rbx
0x400229:	mov	rcx, qword ptr [rax + 0x10]
0x40022d:	mov	rbx, qword ptr [rax + 0x18]
0x400231:	mov	qword ptr [rbp - 0x70], rcx
0x400235:	mov	qword ptr [rbp - 0x68], rbx
0x400239:	mov	rcx, qword ptr [rax + 0x20]
0x40023d:	mov	rbx, qword ptr [rax + 0x28]
0x400241:	mov	qword ptr [rbp - 0x60], rcx
0x400245:	mov	qword ptr [rbp - 0x58], rbx
0x400249:	mov	rcx, qword ptr [rax + 0x30]
0x40024d:	mov	rbx, qword ptr [rax + 0x38]
0x400251:	mov	qword ptr [rbp - 0x50], rcx
0x400255:	mov	qword ptr [rbp - 0x48], rbx
0x400259:	mov	rcx, qword ptr [rax + 0x40]
0x40025d:	mov	rbx, qword ptr [rax + 0x48]
0x400261:	mov	qword ptr [rbp - 0x40], rcx
0x400265:	mov	qword ptr [rbp - 0x38], rbx
0x400269:	mov	rcx, qword ptr [rax + 0x50]
0x40026d:	mov	rbx, qword ptr [rax + 0x58]
0x400271:	mov	qword ptr [rbp - 0x30], rcx
0x400275:	mov	qword ptr [rbp - 0x28], rbx
0x400279:	mov	eax, dword ptr [rax + 0x60]
0x40027c:	mov	dword ptr [rbp - 0x20], eax
0x40027f:	mov	byte ptr [rbp - 0x1d], 0
0x400283:	lea	rax, [rbp - 0x80]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500018
<Block for 0x40028f, 16 bytes>
0x40028f:	nop	
0x400290:	mov	rax, qword ptr [rbp - 0x18]
0x400294:	xor	rax, qword ptr fs:[0x28]
0x40029d:	je	0x4002a4
<Block for 0x4002a4, 10 bytes>
0x4002a4:	add	rsp, 0x98
0x4002ab:	pop	rbx
0x4002ac:	pop	rbp
0x4002ad:	ret	
<Block for 0x40029f, 5 bytes>
0x40029f:	call	0x500020
