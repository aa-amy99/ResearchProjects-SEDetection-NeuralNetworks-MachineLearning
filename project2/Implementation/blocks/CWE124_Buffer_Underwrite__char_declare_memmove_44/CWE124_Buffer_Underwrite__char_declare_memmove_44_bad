<Block for 0x40007f, 60 bytes>
0x40007f:	endbr64	
0x400083:	push	rbp
0x400084:	mov	rbp, rsp
0x400087:	add	rsp, -0x80
0x40008b:	mov	rax, qword ptr fs:[0x28]
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	xor	eax, eax
0x40009a:	lea	rax, [rip - 0xa1]
0x4000a1:	mov	qword ptr [rbp - 0x80], rax
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	mov	edx, 0x63
0x4000ae:	mov	esi, 0x41
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x500000
<Block for 0x4000bb, 29 bytes>
0x4000bb:	mov	byte ptr [rbp - 0xd], 0
0x4000bf:	lea	rax, [rbp - 0x70]
0x4000c3:	sub	rax, 8
0x4000c7:	mov	qword ptr [rbp - 0x78], rax
0x4000cb:	mov	rax, qword ptr [rbp - 0x78]
0x4000cf:	mov	rdx, qword ptr [rbp - 0x80]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	rdx
<Block for 0x4000d8, 16 bytes>
0x4000d8:	nop	
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	xor	rax, qword ptr fs:[0x28]
0x4000e6:	je	0x4000ed
<Block for 0x4000ed, 2 bytes>
0x4000ed:	leave	
0x4000ee:	ret	
<Block for 0x4000e8, 5 bytes>
0x4000e8:	call	0x500018
