<Block for 0x4000ad, 52 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0x90
0x4000bc:	mov	qword ptr [rbp - 0x88], rdi
0x4000c3:	mov	rax, qword ptr fs:[0x28]
0x4000cc:	mov	qword ptr [rbp - 8], rax
0x4000d0:	xor	eax, eax
0x4000d2:	mov	rax, qword ptr [rbp - 0x88]
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x40015c
<Block for 0x4000e1, 29 bytes>
0x4000e1:	mov	rax, qword ptr [rax]
0x4000e4:	mov	qword ptr [rbp - 0x78], rax
0x4000e8:	lea	rax, [rbp - 0x70]
0x4000ec:	mov	edx, 0x63
0x4000f1:	mov	esi, 0x43
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500000
<Block for 0x4000fe, 19 bytes>
0x4000fe:	mov	byte ptr [rbp - 0xd], 0
0x400102:	mov	qword ptr [rbp - 0x80], 0
0x40010a:	cmp	qword ptr [rbp - 0x80], 0x63
0x40010f:	ja	0x400133
<Block for 0x400111, 34 bytes>
0x400111:	mov	rdx, qword ptr [rbp - 0x78]
0x400115:	mov	rax, qword ptr [rbp - 0x80]
0x400119:	add	rax, rdx
0x40011c:	movzx	eax, byte ptr [rax]
0x40011f:	lea	rcx, [rbp - 0x70]
0x400123:	mov	rdx, qword ptr [rbp - 0x80]
0x400127:	add	rdx, rcx
0x40012a:	mov	byte ptr [rdx], al
0x40012c:	add	qword ptr [rbp - 0x80], 1
0x400131:	jmp	0x40010a
<Block for 0x400133, 16 bytes>
0x400133:	mov	byte ptr [rbp - 0xd], 0
0x400137:	lea	rax, [rbp - 0x70]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500008
<Block for 0x40010a, 7 bytes>
0x40010a:	cmp	qword ptr [rbp - 0x80], 0x63
0x40010f:	ja	0x400133
<Block for 0x400143, 16 bytes>
0x400143:	nop	
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	xor	rax, qword ptr fs:[0x28]
0x400151:	je	0x400158
<Block for 0x400158, 2 bytes>
0x400158:	leave	
0x400159:	ret	
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500010
