<Block for 0x40023c, 82 bytes>
0x40023c:	endbr64	
0x400240:	push	rbp
0x400241:	mov	rbp, rsp
0x400244:	sub	rsp, 0x120
0x40024b:	mov	rax, qword ptr fs:[0x28]
0x400254:	mov	qword ptr [rbp - 8], rax
0x400258:	xor	eax, eax
0x40025a:	movabs	rax, 0x3d48544150
0x400264:	mov	edx, 0
0x400269:	mov	qword ptr [rbp - 0x110], rax
0x400270:	mov	qword ptr [rbp - 0x108], rdx
0x400277:	lea	rdx, [rbp - 0x100]
0x40027e:	mov	eax, 0
0x400283:	mov	ecx, 0x1d
0x400288:	mov	rdi, rdx
0x40028b:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028e, 51 bytes>
0x40028e:	mov	rdx, rdi
0x400291:	mov	word ptr [rdx], ax
0x400294:	add	rdx, 2
0x400298:	lea	rax, [rbp - 0x110]
0x40029f:	mov	qword ptr [rbp - 0x118], rax
0x4002a6:	mov	rax, qword ptr [rbp - 0x118]
0x4002ad:	mov	rcx, -1
0x4002b4:	mov	rdx, rax
0x4002b7:	mov	eax, 0
0x4002bc:	mov	rdi, rdx
0x4002bf:	repne scasb	al, byte ptr [rdi]
<Block for 0x40028b, 3 bytes>
0x40028b:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002c1, 59 bytes>
0x4002c1:	mov	rax, rcx
0x4002c4:	not	rax
0x4002c7:	lea	rdx, [rax - 1]
0x4002cb:	mov	rax, qword ptr [rbp - 0x118]
0x4002d2:	add	rax, rdx
0x4002d5:	mov	dword ptr [rax], 0x6e69622f
0x4002db:	mov	byte ptr [rax + 4], 0
0x4002df:	mov	rax, qword ptr [rbp - 0x118]
0x4002e6:	mov	qword ptr [rbp - 0x120], rax
0x4002ed:	mov	rax, qword ptr [rbp - 0x120]
0x4002f4:	mov	rdi, rax
0x4002f7:	call	0x500058
<Block for 0x4002bf, 2 bytes>
0x4002bf:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002fc, 16 bytes>
0x4002fc:	nop	
0x4002fd:	mov	rax, qword ptr [rbp - 8]
0x400301:	xor	rax, qword ptr fs:[0x28]
0x40030a:	je	0x400311
<Block for 0x400311, 2 bytes>
0x400311:	leave	
0x400312:	ret	
<Block for 0x40030c, 5 bytes>
0x40030c:	call	0x500050
