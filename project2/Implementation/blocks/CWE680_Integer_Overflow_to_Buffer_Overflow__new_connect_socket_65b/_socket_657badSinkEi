<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	dword ptr [rbp - 0x24], edi
0x40000f:	mov	eax, dword ptr [rbp - 0x24]
0x400012:	cdqe	
0x400014:	shl	rax, 2
0x400018:	mov	qword ptr [rbp - 0x10], rax
0x40001c:	mov	rax, qword ptr [rbp - 0x10]
0x400020:	mov	rdi, rax
0x400023:	call	0x500000
<Block for 0x400028, 23 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	mov	qword ptr [rbp - 0x18], 0
0x400034:	mov	eax, dword ptr [rbp - 0x24]
0x400037:	cdqe	
0x400039:	cmp	qword ptr [rbp - 0x18], rax
0x40003d:	jae	0x40005f
<Block for 0x40003f, 32 bytes>
0x40003f:	mov	rax, qword ptr [rbp - 0x18]
0x400043:	lea	rdx, [rax*4]
0x40004b:	mov	rax, qword ptr [rbp - 8]
0x40004f:	add	rax, rdx
0x400052:	mov	dword ptr [rax], 0
0x400058:	add	qword ptr [rbp - 0x18], 1
0x40005d:	jmp	0x400034
<Block for 0x40005f, 13 bytes>
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	mov	eax, dword ptr [rax]
0x400065:	mov	edi, eax
0x400067:	call	0x500008
<Block for 0x400034, 11 bytes>
0x400034:	mov	eax, dword ptr [rbp - 0x24]
0x400037:	cdqe	
0x400039:	cmp	qword ptr [rbp - 0x18], rax
0x40003d:	jae	0x40005f
<Block for 0x40006c, 7 bytes>
0x40006c:	cmp	qword ptr [rbp - 8], 0
0x400071:	je	0x40007f
<Block for 0x40007f, 3 bytes>
0x40007f:	nop	
0x400080:	leave	
0x400081:	ret	
<Block for 0x400073, 12 bytes>
0x400073:	mov	rax, qword ptr [rbp - 8]
0x400077:	mov	rdi, rax
0x40007a:	call	0x500010
