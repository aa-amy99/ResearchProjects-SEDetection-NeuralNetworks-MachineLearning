<Block for 0x40018a, 55 bytes>
0x40018a:	endbr64	
0x40018e:	push	rbp
0x40018f:	mov	rbp, rsp
0x400192:	sub	rsp, 0xf0
0x400199:	mov	rax, qword ptr fs:[0x28]
0x4001a2:	mov	qword ptr [rbp - 8], rax
0x4001a6:	xor	eax, eax
0x4001a8:	lea	rax, [rbp - 0xe0]
0x4001af:	mov	edx, 0x63
0x4001b4:	mov	esi, 0x41
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x500000
<Block for 0x4001c1, 14 bytes>
0x4001c1:	mov	byte ptr [rbp - 0x7d], 0
0x4001c5:	mov	eax, dword ptr [rip + 0xffe3d]
0x4001cb:	test	eax, eax
0x4001cd:	je	0x4001dd
<Block for 0x4001dd, 22 bytes>
0x4001dd:	lea	rax, [rbp - 0x70]
0x4001e1:	mov	edx, 0x63
0x4001e6:	mov	esi, 0x43
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500000
<Block for 0x4001cf, 36 bytes>
0x4001cf:	lea	rax, [rbp - 0xe0]
0x4001d6:	mov	qword ptr [rbp - 0xe8], rax
0x4001dd:	lea	rax, [rbp - 0x70]
0x4001e1:	mov	edx, 0x63
0x4001e6:	mov	esi, 0x43
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500000
<Block for 0x4001f3, 31 bytes>
0x4001f3:	mov	byte ptr [rbp - 0xd], 0
0x4001f7:	lea	rcx, [rbp - 0x70]
0x4001fb:	mov	rax, qword ptr [rbp - 0xe8]
0x400202:	mov	edx, 0x63
0x400207:	mov	rsi, rcx
0x40020a:	mov	rdi, rax
0x40020d:	call	0x500010
<Block for 0x400212, 29 bytes>
0x400212:	mov	rax, qword ptr [rbp - 0xe8]
0x400219:	add	rax, 0x63
0x40021d:	mov	byte ptr [rax], 0
0x400220:	mov	rax, qword ptr [rbp - 0xe8]
0x400227:	mov	rdi, rax
0x40022a:	call	0x500018
<Block for 0x40022f, 16 bytes>
0x40022f:	nop	
0x400230:	mov	rax, qword ptr [rbp - 8]
0x400234:	xor	rax, qword ptr fs:[0x28]
0x40023d:	je	0x400244
<Block for 0x400244, 2 bytes>
0x400244:	leave	
0x400245:	ret	
<Block for 0x40023f, 5 bytes>
0x40023f:	call	0x500020
