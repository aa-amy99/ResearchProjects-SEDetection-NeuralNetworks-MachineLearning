<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400014:	mov	dword ptr [rbp - 0x28], 0
0x40001b:	jmp	0x40006a
<Block for 0x40006a, 6 bytes>
0x40006a:	cmp	dword ptr [rbp - 0x28], 0
0x40006e:	jle	0x40001d
<Block for 0x40001d, 5 bytes>
0x40001d:	call	0x500000
<Block for 0x400070, 17 bytes>
0x400070:	mov	eax, dword ptr [rbp - 0x24]
0x400073:	cdqe	
0x400075:	shl	rax, 2
0x400079:	mov	rdi, rax
0x40007c:	call	0x500008
<Block for 0x400022, 7 bytes>
0x400022:	and	eax, 1
0x400025:	test	eax, eax
0x400027:	je	0x400046
<Block for 0x400081, 11 bytes>
0x400081:	mov	qword ptr [rbp - 0x18], rax
0x400085:	cmp	qword ptr [rbp - 0x18], 0
0x40008a:	jne	0x400096
<Block for 0x400046, 5 bytes>
0x400046:	call	0x500000
<Block for 0x400029, 5 bytes>
0x400029:	call	0x500000
<Block for 0x40008c, 10 bytes>
0x40008c:	mov	edi, 0xffffffff
0x400091:	call	0x500010
<Block for 0x400096, 10 bytes>
0x400096:	mov	qword ptr [rbp - 0x20], 0
0x40009e:	jmp	0x4000be
<Block for 0x40004b, 10 bytes>
0x40004b:	shl	eax, 0x1e
0x40004e:	mov	ebx, eax
0x400050:	call	0x500000
<Block for 0x40002e, 10 bytes>
0x40002e:	shl	eax, 0x1e
0x400031:	mov	ebx, eax
0x400033:	call	0x500000
<Block for 0x4000be, 11 bytes>
0x4000be:	mov	eax, dword ptr [rbp - 0x24]
0x4000c1:	cdqe	
0x4000c3:	cmp	qword ptr [rbp - 0x20], rax
0x4000c7:	jb	0x4000a0
<Block for 0x400055, 10 bytes>
0x400055:	shl	eax, 0xf
0x400058:	xor	ebx, eax
0x40005a:	call	0x500000
<Block for 0x400038, 10 bytes>
0x400038:	shl	eax, 0xf
0x40003b:	xor	ebx, eax
0x40003d:	call	0x500000
<Block for 0x4000a0, 41 bytes>
0x4000a0:	mov	rax, qword ptr [rbp - 0x20]
0x4000a4:	lea	rdx, [rax*4]
0x4000ac:	mov	rax, qword ptr [rbp - 0x18]
0x4000b0:	add	rax, rdx
0x4000b3:	mov	dword ptr [rax], 0
0x4000b9:	add	qword ptr [rbp - 0x20], 1
0x4000be:	mov	eax, dword ptr [rbp - 0x24]
0x4000c1:	cdqe	
0x4000c3:	cmp	qword ptr [rbp - 0x20], rax
0x4000c7:	jb	0x4000a0
<Block for 0x4000c9, 13 bytes>
0x4000c9:	mov	rax, qword ptr [rbp - 0x18]
0x4000cd:	mov	eax, dword ptr [rax]
0x4000cf:	mov	edi, eax
0x4000d1:	call	0x500018
<Block for 0x40005f, 17 bytes>
0x40005f:	xor	eax, ebx
0x400061:	not	eax
0x400063:	mov	dword ptr [rbp - 0x24], eax
0x400066:	add	dword ptr [rbp - 0x28], 1
0x40006a:	cmp	dword ptr [rbp - 0x28], 0
0x40006e:	jle	0x40001d
<Block for 0x400042, 4 bytes>
0x400042:	xor	eax, ebx
0x400044:	jmp	0x400063
<Block for 0x4000d6, 12 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x18]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500020
<Block for 0x400063, 13 bytes>
0x400063:	mov	dword ptr [rbp - 0x24], eax
0x400066:	add	dword ptr [rbp - 0x28], 1
0x40006a:	cmp	dword ptr [rbp - 0x28], 0
0x40006e:	jle	0x40001d
<Block for 0x4000e2, 8 bytes>
0x4000e2:	nop	
0x4000e3:	add	rsp, 0x28
0x4000e7:	pop	rbx
0x4000e8:	pop	rbp
0x4000e9:	ret	
