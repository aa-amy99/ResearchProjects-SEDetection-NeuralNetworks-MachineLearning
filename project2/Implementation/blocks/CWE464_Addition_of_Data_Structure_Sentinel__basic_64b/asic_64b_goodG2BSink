<Block for 0x400067, 80 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x30
0x400073:	mov	qword ptr [rbp - 0x28], rdi
0x400077:	mov	rax, qword ptr fs:[0x28]
0x400080:	mov	qword ptr [rbp - 8], rax
0x400084:	xor	eax, eax
0x400086:	mov	rax, qword ptr [rbp - 0x28]
0x40008a:	mov	qword ptr [rbp - 0x18], rax
0x40008e:	mov	rax, qword ptr [rbp - 0x18]
0x400092:	movzx	eax, byte ptr [rax]
0x400095:	mov	byte ptr [rbp - 0x19], al
0x400098:	mov	byte ptr [rbp - 0xc], 0x78
0x40009c:	movzx	eax, byte ptr [rbp - 0x19]
0x4000a0:	mov	byte ptr [rbp - 0xb], al
0x4000a3:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000a7:	mov	byte ptr [rbp - 9], 0
0x4000ab:	lea	rax, [rbp - 0xc]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500000
<Block for 0x4000b7, 16 bytes>
0x4000b7:	nop	
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	xor	rax, qword ptr fs:[0x28]
0x4000c5:	je	0x4000cc
<Block for 0x4000cc, 2 bytes>
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000c7, 5 bytes>
0x4000c7:	call	0x500008
