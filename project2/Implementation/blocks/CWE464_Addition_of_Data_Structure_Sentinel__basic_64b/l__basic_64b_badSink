<Block for 0x400000, 80 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x28]
0x400023:	mov	qword ptr [rbp - 0x18], rax
0x400027:	mov	rax, qword ptr [rbp - 0x18]
0x40002b:	movzx	eax, byte ptr [rax]
0x40002e:	mov	byte ptr [rbp - 0x19], al
0x400031:	mov	byte ptr [rbp - 0xc], 0x78
0x400035:	movzx	eax, byte ptr [rbp - 0x19]
0x400039:	mov	byte ptr [rbp - 0xb], al
0x40003c:	mov	byte ptr [rbp - 0xa], 0x7a
0x400040:	mov	byte ptr [rbp - 9], 0
0x400044:	lea	rax, [rbp - 0xc]
0x400048:	mov	rdi, rax
0x40004b:	call	0x500000
<Block for 0x400050, 16 bytes>
0x400050:	nop	
0x400051:	mov	rax, qword ptr [rbp - 8]
0x400055:	xor	rax, qword ptr fs:[0x28]
0x40005e:	je	0x400065
<Block for 0x400065, 2 bytes>
0x400065:	leave	
0x400066:	ret	
<Block for 0x400060, 5 bytes>
0x400060:	call	0x500008
