<Block for 0x40027b, 22 bytes>
0x40027b:	endbr64	
0x40027f:	push	rbp
0x400280:	mov	rbp, rsp
0x400283:	push	r13
0x400285:	push	r12
0x400287:	push	rbx
0x400288:	sub	rsp, 0x18
0x40028c:	call	0x500000
<Block for 0x400291, 12 bytes>
0x400291:	and	eax, 1
0x400294:	test	eax, eax
0x400296:	sete	al
0x400299:	test	al, al
0x40029b:	je	0x4002d2
<Block for 0x4002d2, 5 bytes>
0x4002d2:	call	0x500000
<Block for 0x40029d, 10 bytes>
0x40029d:	mov	edi, 0x10
0x4002a2:	call	0x500008
<Block for 0x4002d7, 12 bytes>
0x4002d7:	and	eax, 1
0x4002da:	test	eax, eax
0x4002dc:	sete	al
0x4002df:	test	al, al
0x4002e1:	je	0x400318
<Block for 0x4002a7, 18 bytes>
0x4002a7:	mov	rbx, rax
0x4002aa:	lea	rsi, [rip + 0x152]
0x4002b1:	mov	rdi, rbx
0x4002b4:	call	0x500010
<Block for 0x400318, 12 bytes>
0x400318:	lea	rdi, [rip + 0xee]
0x40031f:	call	0x500058
<Block for 0x4002e3, 10 bytes>
0x4002e3:	mov	edi, 0x10
0x4002e8:	call	0x500008
<Block for 0x4002b9, 25 bytes>
0x4002b9:	mov	rax, qword ptr [rip + 0xffd60]
0x4002c0:	mov	rdx, rax
0x4002c3:	lea	rsi, [rip + 0xffd5e]
0x4002ca:	mov	rdi, rbx
0x4002cd:	call	0x500030
<Block for 0x400324, 5 bytes>
0x400324:	jmp	0x4003e2
<Block for 0x4002ed, 18 bytes>
0x4002ed:	mov	rbx, rax
0x4002f0:	lea	rsi, [rip + 0x111]
0x4002f7:	mov	rdi, rbx
0x4002fa:	call	0x500038
<Block for 0x4003e2, 11 bytes>
0x4003e2:	add	rsp, 0x18
0x4003e6:	pop	rbx
0x4003e7:	pop	r12
0x4003e9:	pop	r13
0x4003eb:	pop	rbp
0x4003ec:	ret	
<Block for 0x4002ff, 25 bytes>
0x4002ff:	mov	rax, qword ptr [rip + 0xffd42]
0x400306:	mov	rdx, rax
0x400309:	lea	rsi, [rip + 0xffd40]
0x400310:	mov	rdi, rbx
0x400313:	call	0x500030
