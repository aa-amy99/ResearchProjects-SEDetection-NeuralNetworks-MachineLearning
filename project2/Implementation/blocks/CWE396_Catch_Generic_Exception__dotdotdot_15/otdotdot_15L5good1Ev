<Block for 0x400109, 22 bytes>
0x400109:	endbr64	
0x40010d:	push	rbp
0x40010e:	mov	rbp, rsp
0x400111:	push	r13
0x400113:	push	r12
0x400115:	push	rbx
0x400116:	sub	rsp, 0x18
0x40011a:	call	0x500000
<Block for 0x40011f, 12 bytes>
0x40011f:	and	eax, 1
0x400122:	test	eax, eax
0x400124:	sete	al
0x400127:	test	al, al
0x400129:	je	0x400160
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500000
<Block for 0x40012b, 10 bytes>
0x40012b:	mov	edi, 0x10
0x400130:	call	0x500008
<Block for 0x400165, 12 bytes>
0x400165:	and	eax, 1
0x400168:	test	eax, eax
0x40016a:	sete	al
0x40016d:	test	al, al
0x40016f:	je	0x4001a6
<Block for 0x400135, 18 bytes>
0x400135:	mov	rbx, rax
0x400138:	lea	rsi, [rip + 0x2c4]
0x40013f:	mov	rdi, rbx
0x400142:	call	0x500010
<Block for 0x4001a6, 12 bytes>
0x4001a6:	lea	rdi, [rip + 0x260]
0x4001ad:	call	0x500058
<Block for 0x400171, 10 bytes>
0x400171:	mov	edi, 0x10
0x400176:	call	0x500008
<Block for 0x400147, 25 bytes>
0x400147:	mov	rax, qword ptr [rip + 0xffed2]
0x40014e:	mov	rdx, rax
0x400151:	lea	rsi, [rip + 0xffed0]
0x400158:	mov	rdi, rbx
0x40015b:	call	0x500030
<Block for 0x4001b2, 5 bytes>
0x4001b2:	jmp	0x400270
<Block for 0x40017b, 18 bytes>
0x40017b:	mov	rbx, rax
0x40017e:	lea	rsi, [rip + 0x283]
0x400185:	mov	rdi, rbx
0x400188:	call	0x500038
<Block for 0x400270, 11 bytes>
0x400270:	add	rsp, 0x18
0x400274:	pop	rbx
0x400275:	pop	r12
0x400277:	pop	r13
0x400279:	pop	rbp
0x40027a:	ret	
<Block for 0x40018d, 25 bytes>
0x40018d:	mov	rax, qword ptr [rip + 0xffeb4]
0x400194:	mov	rdx, rax
0x400197:	lea	rsi, [rip + 0xffeb2]
0x40019e:	mov	rdi, rbx
0x4001a1:	call	0x500030
