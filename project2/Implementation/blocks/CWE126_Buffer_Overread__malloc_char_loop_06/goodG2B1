<Block for 0x400116, 51 bytes>
0x400116:	endbr64	
0x40011a:	push	rbp
0x40011b:	mov	rbp, rsp
0x40011e:	sub	rsp, 0x90
0x400125:	mov	rax, qword ptr fs:[0x28]
0x40012e:	mov	qword ptr [rbp - 8], rax
0x400132:	xor	eax, eax
0x400134:	mov	qword ptr [rbp - 0x88], 0
0x40013f:	mov	eax, 5
0x400144:	cmp	eax, 5
0x400147:	je	0x400157
<Block for 0x400157, 10 bytes>
0x400157:	mov	edi, 0x64
0x40015c:	call	0x500000
<Block for 0x400149, 12 bytes>
0x400149:	lea	rdi, [rip + 0x224]
0x400150:	call	0x500020
<Block for 0x400161, 17 bytes>
0x400161:	mov	qword ptr [rbp - 0x88], rax
0x400168:	cmp	qword ptr [rbp - 0x88], 0
0x400170:	jne	0x40017c
<Block for 0x400155, 2 bytes>
0x400155:	jmp	0x4001a3
<Block for 0x400172, 10 bytes>
0x400172:	mov	edi, 0xffffffff
0x400177:	call	0x500008
<Block for 0x40017c, 25 bytes>
0x40017c:	mov	rax, qword ptr [rbp - 0x88]
0x400183:	mov	edx, 0x63
0x400188:	mov	esi, 0x41
0x40018d:	mov	rdi, rax
0x400190:	call	0x500010
<Block for 0x4001a3, 22 bytes>
0x4001a3:	lea	rax, [rbp - 0x70]
0x4001a7:	mov	edx, 0x63
0x4001ac:	mov	esi, 0x43
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500010
<Block for 0x400195, 36 bytes>
0x400195:	mov	rax, qword ptr [rbp - 0x88]
0x40019c:	add	rax, 0x63
0x4001a0:	mov	byte ptr [rax], 0
0x4001a3:	lea	rax, [rbp - 0x70]
0x4001a7:	mov	edx, 0x63
0x4001ac:	mov	esi, 0x43
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500010
<Block for 0x4001b9, 16 bytes>
0x4001b9:	mov	byte ptr [rbp - 0xd], 0
0x4001bd:	lea	rax, [rbp - 0x70]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500018
<Block for 0x4001c9, 14 bytes>
0x4001c9:	mov	qword ptr [rbp - 0x78], rax
0x4001cd:	mov	qword ptr [rbp - 0x80], 0
0x4001d5:	jmp	0x4001fa
<Block for 0x4001fa, 10 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x80]
0x4001fe:	cmp	rax, qword ptr [rbp - 0x78]
0x400202:	jb	0x4001d7
<Block for 0x4001d7, 45 bytes>
0x4001d7:	mov	rdx, qword ptr [rbp - 0x88]
0x4001de:	mov	rax, qword ptr [rbp - 0x80]
0x4001e2:	add	rax, rdx
0x4001e5:	movzx	eax, byte ptr [rax]
0x4001e8:	lea	rcx, [rbp - 0x70]
0x4001ec:	mov	rdx, qword ptr [rbp - 0x80]
0x4001f0:	add	rdx, rcx
0x4001f3:	mov	byte ptr [rdx], al
0x4001f5:	add	qword ptr [rbp - 0x80], 1
0x4001fa:	mov	rax, qword ptr [rbp - 0x80]
0x4001fe:	cmp	rax, qword ptr [rbp - 0x78]
0x400202:	jb	0x4001d7
<Block for 0x400204, 16 bytes>
0x400204:	mov	byte ptr [rbp - 0xd], 0
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500020
<Block for 0x400214, 15 bytes>
0x400214:	mov	rax, qword ptr [rbp - 0x88]
0x40021b:	mov	rdi, rax
0x40021e:	call	0x500028
<Block for 0x400223, 16 bytes>
0x400223:	nop	
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	xor	rax, qword ptr fs:[0x28]
0x400231:	je	0x400238
<Block for 0x400238, 2 bytes>
0x400238:	leave	
0x400239:	ret	
<Block for 0x400233, 5 bytes>
0x400233:	call	0x500030
