<Block for 0x40004a, 21 bytes>
0x40004a:	endbr64	
0x40004e:	push	rbp
0x40004f:	mov	rbp, rsp
0x400052:	sub	rsp, 0x10
0x400056:	mov	eax, 0
0x40005b:	test	eax, eax
0x40005d:	je	0x40006d
<Block for 0x40006d, 5 bytes>
0x40006d:	call	0x500018
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rdi, [rip + 0x11b]
0x400066:	call	0x500010
<Block for 0x400072, 28 bytes>
0x400072:	mov	dword ptr [rax], 0
0x400078:	mov	edx, 0
0x40007d:	mov	esi, 0
0x400082:	lea	rdi, [rip + 0xe7]
0x400089:	call	0x500000
<Block for 0x40006b, 2 bytes>
0x40006b:	jmp	0x4000cc
<Block for 0x40008e, 9 bytes>
0x40008e:	mov	qword ptr [rbp - 8], rax
0x400092:	call	0x500018
<Block for 0x4000cc, 3 bytes>
0x4000cc:	nop	
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x400097, 7 bytes>
0x400097:	mov	eax, dword ptr [rax]
0x400099:	cmp	eax, 0x22
0x40009c:	jne	0x4000b4
<Block for 0x40009e, 12 bytes>
0x40009e:	lea	rdi, [rip + 0xf1]
0x4000a5:	call	0x500010
<Block for 0x4000b4, 24 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	mov	rsi, rax
0x4000bb:	lea	rdi, [rip + 0xba]
0x4000c2:	mov	eax, 0
0x4000c7:	call	0x500008
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	edi, 1
0x4000af:	call	0x500020
