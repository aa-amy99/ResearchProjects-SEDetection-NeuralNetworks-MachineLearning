<Block for 0x400233, 82 bytes>
0x400233:	endbr64	
0x400237:	push	rbp
0x400238:	mov	rbp, rsp
0x40023b:	sub	rsp, 0x120
0x400242:	mov	rax, qword ptr fs:[0x28]
0x40024b:	mov	qword ptr [rbp - 8], rax
0x40024f:	xor	eax, eax
0x400251:	movabs	rax, 0x3d48544150
0x40025b:	mov	edx, 0
0x400260:	mov	qword ptr [rbp - 0x110], rax
0x400267:	mov	qword ptr [rbp - 0x108], rdx
0x40026e:	lea	rdx, [rbp - 0x100]
0x400275:	mov	eax, 0
0x40027a:	mov	ecx, 0x1d
0x40027f:	mov	rdi, rdx
0x400282:	rep stosq	qword ptr [rdi], rax
<Block for 0x400285, 56 bytes>
0x400285:	mov	rdx, rdi
0x400288:	mov	word ptr [rdx], ax
0x40028b:	add	rdx, 2
0x40028f:	lea	rax, [rbp - 0x110]
0x400296:	mov	qword ptr [rbp - 0x118], rax
0x40029d:	nop	
0x40029e:	endbr64	
0x4002a2:	mov	rax, qword ptr [rbp - 0x118]
0x4002a9:	mov	rcx, -1
0x4002b0:	mov	rdx, rax
0x4002b3:	mov	eax, 0
0x4002b8:	mov	rdi, rdx
0x4002bb:	repne scasb	al, byte ptr [rdi]
<Block for 0x400282, 3 bytes>
0x400282:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002bd, 45 bytes>
0x4002bd:	mov	rax, rcx
0x4002c0:	not	rax
0x4002c3:	lea	rdx, [rax - 1]
0x4002c7:	mov	rax, qword ptr [rbp - 0x118]
0x4002ce:	add	rax, rdx
0x4002d1:	mov	dword ptr [rax], 0x6e69622f
0x4002d7:	mov	byte ptr [rax + 4], 0
0x4002db:	mov	rax, qword ptr [rbp - 0x118]
0x4002e2:	mov	rdi, rax
0x4002e5:	call	0x500048
<Block for 0x4002bb, 2 bytes>
0x4002bb:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002ea, 16 bytes>
0x4002ea:	nop	
0x4002eb:	mov	rax, qword ptr [rbp - 8]
0x4002ef:	xor	rax, qword ptr fs:[0x28]
0x4002f8:	je	0x4002ff
<Block for 0x4002ff, 2 bytes>
0x4002ff:	leave	
0x400300:	ret	
<Block for 0x4002fa, 5 bytes>
0x4002fa:	call	0x500050
