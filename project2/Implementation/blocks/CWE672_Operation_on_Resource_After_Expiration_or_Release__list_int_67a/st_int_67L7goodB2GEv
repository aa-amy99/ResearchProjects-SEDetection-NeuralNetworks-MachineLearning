<Block for 0x400236, 40 bytes>
0x400236:	endbr64	
0x40023a:	push	rbp
0x40023b:	mov	rbp, rsp
0x40023e:	push	rbx
0x40023f:	sub	rsp, 0x68
0x400243:	mov	rax, qword ptr fs:[0x28]
0x40024c:	mov	qword ptr [rbp - 0x18], rax
0x400250:	xor	eax, eax
0x400252:	lea	rax, [rbp - 0x70]
0x400256:	mov	rdi, rax
0x400259:	call	0x40047a
<Block for 0x40025e, 12 bytes>
0x40025e:	lea	rax, [rbp - 0x50]
0x400262:	mov	rdi, rax
0x400265:	call	0x4004ba
<Block for 0x40026a, 26 bytes>
0x40026a:	mov	dword ptr [rbp - 0x30], 0x64
0x400271:	lea	rdx, [rbp - 0x30]
0x400275:	lea	rax, [rbp - 0x70]
0x400279:	mov	rsi, rdx
0x40027c:	mov	rdi, rax
0x40027f:	call	0x40060a
<Block for 0x400284, 26 bytes>
0x400284:	mov	dword ptr [rbp - 0x30], 0
0x40028b:	lea	rdx, [rbp - 0x30]
0x40028f:	lea	rax, [rbp - 0x70]
0x400293:	mov	rsi, rdx
0x400296:	mov	rdi, rax
0x400299:	call	0x40060a
<Block for 0x40029e, 19 bytes>
0x40029e:	lea	rdx, [rbp - 0x70]
0x4002a2:	lea	rax, [rbp - 0x50]
0x4002a6:	mov	rsi, rdx
0x4002a9:	mov	rdi, rax
0x4002ac:	call	0x400676
<Block for 0x4002b1, 19 bytes>
0x4002b1:	lea	rdx, [rbp - 0x50]
0x4002b5:	lea	rax, [rbp - 0x30]
0x4002b9:	mov	rsi, rdx
0x4002bc:	mov	rdi, rax
0x4002bf:	call	0x4004fa
<Block for 0x4002c4, 12 bytes>
0x4002c4:	lea	rax, [rbp - 0x30]
0x4002c8:	mov	rdi, rax
0x4002cb:	call	0x500020
<Block for 0x4002d0, 12 bytes>
0x4002d0:	lea	rax, [rbp - 0x30]
0x4002d4:	mov	rdi, rax
0x4002d7:	call	0x4004da
<Block for 0x4002dc, 12 bytes>
0x4002dc:	lea	rax, [rbp - 0x50]
0x4002e0:	mov	rdi, rax
0x4002e3:	call	0x4004da
<Block for 0x4002e8, 12 bytes>
0x4002e8:	lea	rax, [rbp - 0x70]
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x40049a
<Block for 0x4002f4, 16 bytes>
0x4002f4:	nop	
0x4002f5:	mov	rax, qword ptr [rbp - 0x18]
0x4002f9:	xor	rax, qword ptr fs:[0x28]
0x400302:	je	0x40034a
<Block for 0x40034a, 7 bytes>
0x40034a:	add	rsp, 0x68
0x40034e:	pop	rbx
0x40034f:	pop	rbp
0x400350:	ret	
<Block for 0x400304, 2 bytes>
0x400304:	jmp	0x400345
<Block for 0x400345, 5 bytes>
0x400345:	call	0x500010
