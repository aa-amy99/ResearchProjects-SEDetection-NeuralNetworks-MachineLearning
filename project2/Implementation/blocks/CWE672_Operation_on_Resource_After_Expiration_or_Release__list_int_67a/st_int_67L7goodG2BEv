<Block for 0x40011b, 40 bytes>
0x40011b:	endbr64	
0x40011f:	push	rbp
0x400120:	mov	rbp, rsp
0x400123:	push	rbx
0x400124:	sub	rsp, 0x68
0x400128:	mov	rax, qword ptr fs:[0x28]
0x400131:	mov	qword ptr [rbp - 0x18], rax
0x400135:	xor	eax, eax
0x400137:	lea	rax, [rbp - 0x70]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x40047a
<Block for 0x400143, 12 bytes>
0x400143:	lea	rax, [rbp - 0x50]
0x400147:	mov	rdi, rax
0x40014a:	call	0x4004ba
<Block for 0x40014f, 26 bytes>
0x40014f:	mov	dword ptr [rbp - 0x30], 0x64
0x400156:	lea	rdx, [rbp - 0x30]
0x40015a:	lea	rax, [rbp - 0x70]
0x40015e:	mov	rsi, rdx
0x400161:	mov	rdi, rax
0x400164:	call	0x40060a
<Block for 0x400169, 26 bytes>
0x400169:	mov	dword ptr [rbp - 0x30], 0xc8
0x400170:	lea	rdx, [rbp - 0x30]
0x400174:	lea	rax, [rbp - 0x70]
0x400178:	mov	rsi, rdx
0x40017b:	mov	rdi, rax
0x40017e:	call	0x40060a
<Block for 0x400183, 19 bytes>
0x400183:	lea	rdx, [rbp - 0x70]
0x400187:	lea	rax, [rbp - 0x50]
0x40018b:	mov	rsi, rdx
0x40018e:	mov	rdi, rax
0x400191:	call	0x400676
<Block for 0x400196, 19 bytes>
0x400196:	lea	rdx, [rbp - 0x50]
0x40019a:	lea	rax, [rbp - 0x30]
0x40019e:	mov	rsi, rdx
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x4004fa
<Block for 0x4001a9, 12 bytes>
0x4001a9:	lea	rax, [rbp - 0x30]
0x4001ad:	mov	rdi, rax
0x4001b0:	call	0x500018
<Block for 0x4001b5, 12 bytes>
0x4001b5:	lea	rax, [rbp - 0x30]
0x4001b9:	mov	rdi, rax
0x4001bc:	call	0x4004da
<Block for 0x4001c1, 12 bytes>
0x4001c1:	lea	rax, [rbp - 0x50]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x4004da
<Block for 0x4001cd, 12 bytes>
0x4001cd:	lea	rax, [rbp - 0x70]
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x40049a
<Block for 0x4001d9, 16 bytes>
0x4001d9:	nop	
0x4001da:	mov	rax, qword ptr [rbp - 0x18]
0x4001de:	xor	rax, qword ptr fs:[0x28]
0x4001e7:	je	0x40022f
<Block for 0x40022f, 7 bytes>
0x40022f:	add	rsp, 0x68
0x400233:	pop	rbx
0x400234:	pop	rbp
0x400235:	ret	
<Block for 0x4001e9, 2 bytes>
0x4001e9:	jmp	0x40022a
<Block for 0x40022a, 5 bytes>
0x40022a:	call	0x500010
