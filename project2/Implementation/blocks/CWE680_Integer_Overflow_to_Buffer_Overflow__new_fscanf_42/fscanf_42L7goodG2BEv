<Block for 0x4000dd, 29 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0x20
0x4000e9:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000f0:	mov	eax, dword ptr [rbp - 0x1c]
0x4000f3:	mov	edi, eax
0x4000f5:	call	0x4000c6
<Block for 0x4000fa, 28 bytes>
0x4000fa:	mov	dword ptr [rbp - 0x1c], eax
0x4000fd:	mov	eax, dword ptr [rbp - 0x1c]
0x400100:	cdqe	
0x400102:	shl	rax, 2
0x400106:	mov	qword ptr [rbp - 0x10], rax
0x40010a:	mov	rax, qword ptr [rbp - 0x10]
0x40010e:	mov	rdi, rax
0x400111:	call	0x500010
<Block for 0x400116, 23 bytes>
0x400116:	mov	qword ptr [rbp - 8], rax
0x40011a:	mov	qword ptr [rbp - 0x18], 0
0x400122:	mov	eax, dword ptr [rbp - 0x1c]
0x400125:	cdqe	
0x400127:	cmp	qword ptr [rbp - 0x18], rax
0x40012b:	jae	0x40014d
<Block for 0x40012d, 32 bytes>
0x40012d:	mov	rax, qword ptr [rbp - 0x18]
0x400131:	lea	rdx, [rax*4]
0x400139:	mov	rax, qword ptr [rbp - 8]
0x40013d:	add	rax, rdx
0x400140:	mov	dword ptr [rax], 0
0x400146:	add	qword ptr [rbp - 0x18], 1
0x40014b:	jmp	0x400122
<Block for 0x40014d, 13 bytes>
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	mov	eax, dword ptr [rax]
0x400153:	mov	edi, eax
0x400155:	call	0x500018
<Block for 0x400122, 11 bytes>
0x400122:	mov	eax, dword ptr [rbp - 0x1c]
0x400125:	cdqe	
0x400127:	cmp	qword ptr [rbp - 0x18], rax
0x40012b:	jae	0x40014d
<Block for 0x40015a, 7 bytes>
0x40015a:	cmp	qword ptr [rbp - 8], 0
0x40015f:	je	0x40016d
<Block for 0x40016d, 3 bytes>
0x40016d:	nop	
0x40016e:	leave	
0x40016f:	ret	
<Block for 0x400161, 12 bytes>
0x400161:	mov	rax, qword ptr [rbp - 8]
0x400165:	mov	rdi, rax
0x400168:	call	0x500020
