<Block for 0x400242, 40 bytes>
0x400242:	endbr64	
0x400246:	push	rbp
0x400247:	mov	rbp, rsp
0x40024a:	push	rbx
0x40024b:	sub	rsp, 0x58
0x40024f:	mov	rax, qword ptr fs:[0x28]
0x400258:	mov	qword ptr [rbp - 0x18], rax
0x40025c:	xor	eax, eax
0x40025e:	lea	rax, [rbp - 0x50]
0x400262:	mov	rdi, rax
0x400265:	call	0x40048c
<Block for 0x40026a, 26 bytes>
0x40026a:	mov	dword ptr [rbp - 0x30], 0x64
0x400271:	lea	rdx, [rbp - 0x30]
0x400275:	lea	rax, [rbp - 0x50]
0x400279:	mov	rsi, rdx
0x40027c:	mov	rdi, rax
0x40027f:	call	0x40063e
<Block for 0x400284, 26 bytes>
0x400284:	mov	dword ptr [rbp - 0x30], 0
0x40028b:	lea	rdx, [rbp - 0x30]
0x40028f:	lea	rax, [rbp - 0x50]
0x400293:	mov	rsi, rdx
0x400296:	mov	rdi, rax
0x400299:	call	0x40063e
<Block for 0x40029e, 10 bytes>
0x40029e:	mov	edi, 8
0x4002a3:	call	0x500000
<Block for 0x4002a8, 11 bytes>
0x4002a8:	mov	rbx, rax
0x4002ab:	mov	rdi, rbx
0x4002ae:	call	0x400598
<Block for 0x4002b3, 33 bytes>
0x4002b3:	mov	qword ptr [rbp - 0x58], rbx
0x4002b7:	mov	rax, qword ptr [rbp - 0x58]
0x4002bb:	mov	rax, qword ptr [rax]
0x4002be:	mov	rbx, qword ptr [rax]
0x4002c1:	lea	rdx, [rbp - 0x50]
0x4002c5:	lea	rax, [rbp - 0x30]
0x4002c9:	mov	rsi, rdx
0x4002cc:	mov	rdi, rax
0x4002cf:	call	0x40068c
<Block for 0x4002d4, 16 bytes>
0x4002d4:	lea	rdx, [rbp - 0x30]
0x4002d8:	mov	rax, qword ptr [rbp - 0x58]
0x4002dc:	mov	rsi, rdx
0x4002df:	mov	rdi, rax
0x4002e2:	call	rbx
<Block for 0x4002e4, 12 bytes>
0x4002e4:	lea	rax, [rbp - 0x30]
0x4002e8:	mov	rdi, rax
0x4002eb:	call	0x4004ac
<Block for 0x4002f0, 9 bytes>
0x4002f0:	mov	rax, qword ptr [rbp - 0x58]
0x4002f4:	test	rax, rax
0x4002f7:	je	0x400306
<Block for 0x400306, 12 bytes>
0x400306:	lea	rax, [rbp - 0x50]
0x40030a:	mov	rdi, rax
0x40030d:	call	0x4004ac
<Block for 0x4002f9, 13 bytes>
0x4002f9:	mov	esi, 8
0x4002fe:	mov	rdi, rax
0x400301:	call	0x500008
<Block for 0x400312, 16 bytes>
0x400312:	nop	
0x400313:	mov	rax, qword ptr [rbp - 0x18]
0x400317:	xor	rax, qword ptr fs:[0x28]
0x400320:	je	0x40035c
<Block for 0x40035c, 7 bytes>
0x40035c:	add	rsp, 0x58
0x400360:	pop	rbx
0x400361:	pop	rbp
0x400362:	ret	
<Block for 0x400322, 2 bytes>
0x400322:	jmp	0x400357
<Block for 0x400357, 5 bytes>
0x400357:	call	0x500018
