<Block for 0x4001ee, 40 bytes>
0x4001ee:	endbr64	
0x4001f2:	push	rbp
0x4001f3:	mov	rbp, rsp
0x4001f6:	push	rbx
0x4001f7:	sub	rsp, 0x58
0x4001fb:	mov	rax, qword ptr fs:[0x28]
0x400204:	mov	qword ptr [rbp - 0x18], rax
0x400208:	xor	eax, eax
0x40020a:	lea	rax, [rbp - 0x50]
0x40020e:	mov	rdi, rax
0x400211:	call	0x4003a8
<Block for 0x400216, 33 bytes>
0x400216:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40021d:	mov	dword ptr [rbp - 0x54], 0xfffffffb
0x400224:	lea	rdx, [rbp - 0x54]
0x400228:	lea	rax, [rbp - 0x50]
0x40022c:	mov	rsi, rdx
0x40022f:	mov	rdi, rax
0x400232:	call	0x4004b2
<Block for 0x400237, 19 bytes>
0x400237:	lea	rdx, [rbp - 0x54]
0x40023b:	lea	rax, [rbp - 0x50]
0x40023f:	mov	rsi, rdx
0x400242:	mov	rdi, rax
0x400245:	call	0x4004b2
<Block for 0x40024a, 19 bytes>
0x40024a:	lea	rdx, [rbp - 0x54]
0x40024e:	lea	rax, [rbp - 0x50]
0x400252:	mov	rsi, rdx
0x400255:	mov	rdi, rax
0x400258:	call	0x4004b2
<Block for 0x40025d, 19 bytes>
0x40025d:	lea	rdx, [rbp - 0x50]
0x400261:	lea	rax, [rbp - 0x30]
0x400265:	mov	rsi, rdx
0x400268:	mov	rdi, rax
0x40026b:	call	0x4004ec
<Block for 0x400270, 12 bytes>
0x400270:	lea	rax, [rbp - 0x30]
0x400274:	mov	rdi, rax
0x400277:	call	0x500020
<Block for 0x40027c, 12 bytes>
0x40027c:	lea	rax, [rbp - 0x30]
0x400280:	mov	rdi, rax
0x400283:	call	0x4003c8
<Block for 0x400288, 12 bytes>
0x400288:	lea	rax, [rbp - 0x50]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x4003c8
<Block for 0x400294, 16 bytes>
0x400294:	nop	
0x400295:	mov	rax, qword ptr [rbp - 0x18]
0x400299:	xor	rax, qword ptr fs:[0x28]
0x4002a2:	je	0x4002de
<Block for 0x4002de, 7 bytes>
0x4002de:	add	rsp, 0x58
0x4002e2:	pop	rbx
0x4002e3:	pop	rbp
0x4002e4:	ret	
<Block for 0x4002a4, 2 bytes>
0x4002a4:	jmp	0x4002d9
<Block for 0x4002d9, 5 bytes>
0x4002d9:	call	0x500010
