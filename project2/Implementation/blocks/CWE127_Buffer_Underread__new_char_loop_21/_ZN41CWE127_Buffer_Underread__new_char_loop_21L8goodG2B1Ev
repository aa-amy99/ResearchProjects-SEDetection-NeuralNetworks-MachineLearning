<Block for 0x40016f, 57 bytes>
0x40016f:	endbr64	
0x400173:	push	rbp
0x400174:	mov	rbp, rsp
0x400177:	add	rsp, -0x80
0x40017b:	mov	rax, qword ptr fs:[0x28]
0x400184:	mov	qword ptr [rbp - 8], rax
0x400188:	xor	eax, eax
0x40018a:	mov	qword ptr [rbp - 0x78], 0
0x400192:	mov	dword ptr [rip + 0x1a4], 0
0x40019c:	mov	rax, qword ptr [rbp - 0x78]
0x4001a0:	mov	rdi, rax
0x4001a3:	call	0x40010a
<Block for 0x4001a8, 26 bytes>
0x4001a8:	mov	qword ptr [rbp - 0x78], rax
0x4001ac:	lea	rax, [rbp - 0x70]
0x4001b0:	mov	edx, 0x63
0x4001b5:	mov	esi, 0x43
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500008
<Block for 0x4001c2, 19 bytes>
0x4001c2:	mov	byte ptr [rbp - 0xd], 0
0x4001c6:	mov	qword ptr [rbp - 0x80], 0
0x4001ce:	cmp	qword ptr [rbp - 0x80], 0x63
0x4001d3:	ja	0x4001f7
<Block for 0x4001d5, 34 bytes>
0x4001d5:	mov	rdx, qword ptr [rbp - 0x78]
0x4001d9:	mov	rax, qword ptr [rbp - 0x80]
0x4001dd:	add	rax, rdx
0x4001e0:	movzx	eax, byte ptr [rax]
0x4001e3:	lea	rcx, [rbp - 0x70]
0x4001e7:	mov	rdx, qword ptr [rbp - 0x80]
0x4001eb:	add	rdx, rcx
0x4001ee:	mov	byte ptr [rdx], al
0x4001f0:	add	qword ptr [rbp - 0x80], 1
0x4001f5:	jmp	0x4001ce
<Block for 0x4001f7, 16 bytes>
0x4001f7:	mov	byte ptr [rbp - 0xd], 0
0x4001fb:	lea	rax, [rbp - 0x70]
0x4001ff:	mov	rdi, rax
0x400202:	call	0x500010
<Block for 0x4001ce, 7 bytes>
0x4001ce:	cmp	qword ptr [rbp - 0x80], 0x63
0x4001d3:	ja	0x4001f7
<Block for 0x400207, 16 bytes>
0x400207:	nop	
0x400208:	mov	rax, qword ptr [rbp - 8]
0x40020c:	xor	rax, qword ptr fs:[0x28]
0x400215:	je	0x40021c
<Block for 0x40021c, 2 bytes>
0x40021c:	leave	
0x40021d:	ret	
<Block for 0x400217, 5 bytes>
0x400217:	call	0x500018
