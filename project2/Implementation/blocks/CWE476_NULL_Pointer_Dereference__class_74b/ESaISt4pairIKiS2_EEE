<Block for 0x4000f4, 57 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x30
0x400100:	mov	qword ptr [rbp - 0x28], rdi
0x400104:	mov	rax, qword ptr fs:[0x28]
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	xor	eax, eax
0x400113:	mov	dword ptr [rbp - 0x14], 2
0x40011a:	lea	rdx, [rbp - 0x14]
0x40011e:	mov	rax, qword ptr [rbp - 0x28]
0x400122:	mov	rsi, rdx
0x400125:	mov	rdi, rax
0x400128:	call	0x4001bc
<Block for 0x40012d, 14 bytes>
0x40012d:	mov	rax, qword ptr [rax]
0x400130:	mov	qword ptr [rbp - 0x10], rax
0x400134:	cmp	qword ptr [rbp - 0x10], 0
0x400139:	je	0x400160
<Block for 0x400160, 12 bytes>
0x400160:	lea	rdi, [rip + 0x48]
0x400167:	call	0x500018
<Block for 0x40013b, 13 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x10]
0x40013f:	mov	eax, dword ptr [rax]
0x400141:	mov	edi, eax
0x400143:	call	0x500000
<Block for 0x40016c, 16 bytes>
0x40016c:	nop	
0x40016d:	mov	rax, qword ptr [rbp - 8]
0x400171:	xor	rax, qword ptr fs:[0x28]
0x40017a:	je	0x400181
<Block for 0x400148, 9 bytes>
0x400148:	mov	rax, qword ptr [rbp - 0x10]
0x40014c:	test	rax, rax
0x40014f:	je	0x40016c
<Block for 0x400181, 2 bytes>
0x400181:	leave	
0x400182:	ret	
<Block for 0x40017c, 5 bytes>
0x40017c:	call	0x500010
<Block for 0x400151, 13 bytes>
0x400151:	mov	esi, 8
0x400156:	mov	rdi, rax
0x400159:	call	0x500008
<Block for 0x40015e, 2 bytes>
0x40015e:	jmp	0x40016c
