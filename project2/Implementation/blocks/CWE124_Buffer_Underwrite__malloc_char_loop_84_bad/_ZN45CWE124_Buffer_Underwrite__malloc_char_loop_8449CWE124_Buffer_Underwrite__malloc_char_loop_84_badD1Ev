<Block for 0x400072, 59 bytes>
0x400072:	endbr64	
0x400076:	push	rbp
0x400077:	mov	rbp, rsp
0x40007a:	sub	rsp, 0x90
0x400081:	mov	qword ptr [rbp - 0x88], rdi
0x400088:	mov	rax, qword ptr fs:[0x28]
0x400091:	mov	qword ptr [rbp - 8], rax
0x400095:	xor	eax, eax
0x400097:	lea	rax, [rbp - 0x70]
0x40009b:	mov	edx, 0x63
0x4000a0:	mov	esi, 0x43
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500010
<Block for 0x4000ad, 19 bytes>
0x4000ad:	mov	byte ptr [rbp - 0xd], 0
0x4000b1:	mov	qword ptr [rbp - 0x78], 0
0x4000b9:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000be:	ja	0x4000e8
<Block for 0x4000c0, 40 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x88]
0x4000c7:	mov	rdx, qword ptr [rax]
0x4000ca:	mov	rax, qword ptr [rbp - 0x78]
0x4000ce:	add	rdx, rax
0x4000d1:	lea	rcx, [rbp - 0x70]
0x4000d5:	mov	rax, qword ptr [rbp - 0x78]
0x4000d9:	add	rax, rcx
0x4000dc:	movzx	eax, byte ptr [rax]
0x4000df:	mov	byte ptr [rdx], al
0x4000e1:	add	qword ptr [rbp - 0x78], 1
0x4000e6:	jmp	0x4000b9
<Block for 0x4000e8, 35 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x88]
0x4000ef:	mov	rax, qword ptr [rax]
0x4000f2:	add	rax, 0x63
0x4000f6:	mov	byte ptr [rax], 0
0x4000f9:	mov	rax, qword ptr [rbp - 0x88]
0x400100:	mov	rax, qword ptr [rax]
0x400103:	mov	rdi, rax
0x400106:	call	0x500018
<Block for 0x4000b9, 7 bytes>
0x4000b9:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000be:	ja	0x4000e8
<Block for 0x40010b, 16 bytes>
0x40010b:	nop	
0x40010c:	mov	rax, qword ptr [rbp - 8]
0x400110:	xor	rax, qword ptr fs:[0x28]
0x400119:	je	0x400120
<Block for 0x400120, 2 bytes>
0x400120:	leave	
0x400121:	ret	
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500020
