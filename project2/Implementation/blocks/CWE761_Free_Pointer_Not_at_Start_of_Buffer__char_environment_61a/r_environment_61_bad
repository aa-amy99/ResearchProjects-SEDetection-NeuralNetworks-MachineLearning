<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	edi, 0x64
0x400011:	call	0x500000
<Block for 0x400016, 11 bytes>
0x400016:	mov	qword ptr [rbp - 8], rax
0x40001a:	cmp	qword ptr [rbp - 8], 0
0x40001f:	jne	0x40002b
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 0xffffffff
0x400026:	call	0x500008
<Block for 0x40002b, 19 bytes>
0x40002b:	mov	rax, qword ptr [rbp - 8]
0x40002f:	mov	byte ptr [rax], 0
0x400032:	mov	rax, qword ptr [rbp - 8]
0x400036:	mov	rdi, rax
0x400039:	call	0x500010
<Block for 0x40003e, 6 bytes>
0x40003e:	mov	qword ptr [rbp - 8], rax
0x400042:	jmp	0x400062
<Block for 0x400062, 11 bytes>
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	movzx	eax, byte ptr [rax]
0x400069:	test	al, al
0x40006b:	jne	0x400044
<Block for 0x40006d, 12 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	mov	rdi, rax
0x400074:	call	0x500020
<Block for 0x400044, 11 bytes>
0x400044:	mov	rax, qword ptr [rbp - 8]
0x400048:	movzx	eax, byte ptr [rax]
0x40004b:	cmp	al, 0x53
0x40004d:	jne	0x40005d
<Block for 0x400079, 3 bytes>
0x400079:	nop	
0x40007a:	leave	
0x40007b:	ret	
<Block for 0x40004f, 12 bytes>
0x40004f:	lea	rdi, [rip + 0xcd]
0x400056:	call	0x500018
<Block for 0x40005d, 16 bytes>
0x40005d:	add	qword ptr [rbp - 8], 1
0x400062:	mov	rax, qword ptr [rbp - 8]
0x400066:	movzx	eax, byte ptr [rax]
0x400069:	test	al, al
0x40006b:	jne	0x400044
<Block for 0x40005b, 2 bytes>
0x40005b:	jmp	0x40006d
