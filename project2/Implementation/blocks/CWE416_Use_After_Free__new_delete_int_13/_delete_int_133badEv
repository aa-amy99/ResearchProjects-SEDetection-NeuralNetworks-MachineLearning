<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x40004d
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 4
0x400024:	call	0x500008
<Block for 0x40004d, 11 bytes>
0x40004d:	mov	eax, dword ptr [rip + 0xfffad]
0x400053:	cmp	eax, 5
0x400056:	jne	0x400065
<Block for 0x400029, 23 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	mov	rax, qword ptr [rbp - 8]
0x400031:	mov	dword ptr [rax], 5
0x400037:	mov	rax, qword ptr [rbp - 8]
0x40003b:	test	rax, rax
0x40003e:	je	0x40004d
<Block for 0x400058, 13 bytes>
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	eax, dword ptr [rax]
0x40005e:	mov	edi, eax
0x400060:	call	0x500018
<Block for 0x400065, 3 bytes>
0x400065:	nop	
0x400066:	leave	
0x400067:	ret	
<Block for 0x400040, 13 bytes>
0x400040:	mov	esi, 4
0x400045:	mov	rdi, rax
0x400048:	call	0x500010
