<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x100
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xf8]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	lea	rax, [rbp - 0xe0]
0x400033:	mov	edx, 0x63
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500000
<Block for 0x400045, 61 bytes>
0x400045:	mov	byte ptr [rbp - 0x7d], 0
0x400049:	lea	rax, [rbp - 0xe0]
0x400050:	sub	rax, 8
0x400054:	mov	qword ptr [rbp - 0xf8], rax
0x40005b:	mov	rax, qword ptr [rbp - 0xf0]
0x400062:	mov	rax, qword ptr [rax]
0x400065:	mov	qword ptr [rbp - 0xe8], rax
0x40006c:	lea	rax, [rbp - 0x70]
0x400070:	mov	edx, 0x63
0x400075:	mov	esi, 0x43
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500000
<Block for 0x400082, 31 bytes>
0x400082:	mov	byte ptr [rbp - 0xd], 0
0x400086:	lea	rcx, [rbp - 0x70]
0x40008a:	mov	rax, qword ptr [rbp - 0xe8]
0x400091:	mov	edx, 0x63
0x400096:	mov	rsi, rcx
0x400099:	mov	rdi, rax
0x40009c:	call	0x500008
<Block for 0x4000a1, 29 bytes>
0x4000a1:	mov	rax, qword ptr [rbp - 0xe8]
0x4000a8:	add	rax, 0x63
0x4000ac:	mov	byte ptr [rax], 0
0x4000af:	mov	rax, qword ptr [rbp - 0xe8]
0x4000b6:	mov	rdi, rax
0x4000b9:	call	0x500010
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x4000d3
<Block for 0x4000d3, 2 bytes>
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000ce, 5 bytes>
0x4000ce:	call	0x500018
