<Block for 0x40001e, 22 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x10
0x40002a:	mov	edi, 0x64
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	qword ptr [rbp - 8], rax
0x400038:	cmp	qword ptr [rbp - 8], 0
0x40003d:	jne	0x400049
<Block for 0x40003f, 10 bytes>
0x40003f:	mov	edi, 0xffffffff
0x400044:	call	0x500008
<Block for 0x400049, 45 bytes>
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	mov	byte ptr [rax], 0
0x400050:	mov	rax, qword ptr [rbp - 8]
0x400054:	movabs	rdx, 0x7453206465786946
0x40005e:	mov	qword ptr [rax], rdx
0x400061:	mov	dword ptr [rax + 8], 0x676e6972
0x400068:	mov	byte ptr [rax + 0xc], 0
0x40006c:	mov	eax, 0
0x400071:	call	0x400000
<Block for 0x400076, 4 bytes>
0x400076:	test	eax, eax
0x400078:	je	0x4000b1
<Block for 0x4000b1, 3 bytes>
0x4000b1:	nop	
0x4000b2:	leave	
0x4000b3:	ret	
<Block for 0x40007a, 2 bytes>
0x40007a:	jmp	0x40009a
<Block for 0x40009a, 11 bytes>
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	movzx	eax, byte ptr [rax]
0x4000a1:	test	al, al
0x4000a3:	jne	0x40007c
<Block for 0x4000a5, 12 bytes>
0x4000a5:	mov	rax, qword ptr [rbp - 8]
0x4000a9:	mov	rdi, rax
0x4000ac:	call	0x500018
<Block for 0x40007c, 11 bytes>
0x40007c:	mov	rax, qword ptr [rbp - 8]
0x400080:	movzx	eax, byte ptr [rax]
0x400083:	cmp	al, 0x53
0x400085:	jne	0x400095
<Block for 0x400087, 12 bytes>
0x400087:	lea	rdi, [rip + 0x1ab]
0x40008e:	call	0x500010
<Block for 0x400095, 16 bytes>
0x400095:	add	qword ptr [rbp - 8], 1
0x40009a:	mov	rax, qword ptr [rbp - 8]
0x40009e:	movzx	eax, byte ptr [rax]
0x4000a1:	test	al, al
0x4000a3:	jne	0x40007c
<Block for 0x400093, 2 bytes>
0x400093:	jmp	0x4000a5
