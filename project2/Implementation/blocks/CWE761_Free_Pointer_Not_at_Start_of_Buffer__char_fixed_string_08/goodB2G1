<Block for 0x4000b4, 22 bytes>
0x4000b4:	endbr64	
0x4000b8:	push	rbp
0x4000b9:	mov	rbp, rsp
0x4000bc:	sub	rsp, 0x10
0x4000c0:	mov	edi, 0x64
0x4000c5:	call	0x500000
<Block for 0x4000ca, 11 bytes>
0x4000ca:	mov	qword ptr [rbp - 8], rax
0x4000ce:	cmp	qword ptr [rbp - 8], 0
0x4000d3:	jne	0x4000df
<Block for 0x4000d5, 10 bytes>
0x4000d5:	mov	edi, 0xffffffff
0x4000da:	call	0x500008
<Block for 0x4000df, 45 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 8]
0x4000e3:	mov	byte ptr [rax], 0
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	movabs	rcx, 0x7453206465786946
0x4000f4:	mov	qword ptr [rax], rcx
0x4000f7:	mov	dword ptr [rax + 8], 0x676e6972
0x4000fe:	mov	byte ptr [rax + 0xc], 0
0x400102:	mov	eax, 0
0x400107:	call	0x40000f
<Block for 0x40010c, 4 bytes>
0x40010c:	test	eax, eax
0x40010e:	je	0x40011e
<Block for 0x40011e, 10 bytes>
0x40011e:	mov	qword ptr [rbp - 0x10], 0
0x400126:	jmp	0x40014d
<Block for 0x400110, 12 bytes>
0x400110:	lea	rdi, [rip + 0x133]
0x400117:	call	0x500010
<Block for 0x40014d, 12 bytes>
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	mov	rdi, rax
0x400154:	call	0x500020
<Block for 0x40011c, 2 bytes>
0x40011c:	jmp	0x40016b
<Block for 0x400159, 6 bytes>
0x400159:	cmp	qword ptr [rbp - 0x10], rax
0x40015d:	jb	0x400128
<Block for 0x40016b, 3 bytes>
0x40016b:	nop	
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400128, 18 bytes>
0x400128:	mov	rdx, qword ptr [rbp - 8]
0x40012c:	mov	rax, qword ptr [rbp - 0x10]
0x400130:	add	rax, rdx
0x400133:	movzx	eax, byte ptr [rax]
0x400136:	cmp	al, 0x53
0x400138:	jne	0x400148
<Block for 0x40015f, 12 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 8]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x40013a, 12 bytes>
0x40013a:	lea	rdi, [rip + 0xf8]
0x400141:	call	0x500010
<Block for 0x400148, 17 bytes>
0x400148:	add	qword ptr [rbp - 0x10], 1
0x40014d:	mov	rax, qword ptr [rbp - 8]
0x400151:	mov	rdi, rax
0x400154:	call	0x500020
<Block for 0x400146, 2 bytes>
0x400146:	jmp	0x40015f
