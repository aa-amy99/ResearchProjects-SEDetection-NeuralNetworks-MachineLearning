<Block for 0x400054, 37 bytes>
0x400054:	endbr64	
0x400058:	push	rbp
0x400059:	mov	rbp, rsp
0x40005c:	sub	rsp, 0x50
0x400060:	mov	rax, qword ptr fs:[0x28]
0x400069:	mov	qword ptr [rbp - 8], rax
0x40006d:	xor	eax, eax
0x40006f:	mov	edi, 0x64
0x400074:	call	0x500010
<Block for 0x400079, 11 bytes>
0x400079:	mov	qword ptr [rbp - 0x38], rax
0x40007d:	cmp	qword ptr [rbp - 0x38], 0
0x400082:	jne	0x40008e
<Block for 0x400084, 10 bytes>
0x400084:	mov	edi, 0xffffffff
0x400089:	call	0x500018
<Block for 0x40008e, 33 bytes>
0x40008e:	mov	rax, qword ptr [rbp - 0x38]
0x400092:	mov	byte ptr [rax], 0
0x400095:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40009c:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x4000a3:	mov	rax, qword ptr [rbp - 0x38]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500020
<Block for 0x4000af, 24 bytes>
0x4000af:	mov	qword ptr [rbp - 0x30], rax
0x4000b3:	mov	edx, 6
0x4000b8:	mov	esi, 1
0x4000bd:	mov	edi, 2
0x4000c2:	call	0x500028
<Block for 0x4000c7, 13 bytes>
0x4000c7:	mov	dword ptr [rbp - 0x40], eax
0x4000ca:	cmp	dword ptr [rbp - 0x40], -1
0x4000ce:	je	0x4001f2
<Block for 0x4001f2, 3 bytes>
0x4001f2:	nop	
0x4001f3:	jmp	0x4001fc
<Block for 0x4000d4, 22 bytes>
0x4000d4:	lea	rax, [rbp - 0x20]
0x4000d8:	mov	edx, 0x10
0x4000dd:	mov	esi, 0
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500030
<Block for 0x4001fc, 6 bytes>
0x4001fc:	cmp	dword ptr [rbp - 0x40], -1
0x400200:	je	0x40020c
<Block for 0x4000ea, 23 bytes>
0x4000ea:	mov	word ptr [rbp - 0x20], 2
0x4000f0:	mov	dword ptr [rbp - 0x1c], 0
0x4000f7:	mov	edi, 0x6987
0x4000fc:	call	0x500038
<Block for 0x40020c, 6 bytes>
0x40020c:	cmp	dword ptr [rbp - 0x44], -1
0x400210:	je	0x40021c
<Block for 0x400202, 10 bytes>
0x400202:	mov	eax, dword ptr [rbp - 0x40]
0x400205:	mov	edi, eax
0x400207:	call	0x500068
<Block for 0x400101, 26 bytes>
0x400101:	mov	word ptr [rbp - 0x1e], ax
0x400105:	lea	rcx, [rbp - 0x20]
0x400109:	mov	eax, dword ptr [rbp - 0x40]
0x40010c:	mov	edx, 0x10
0x400111:	mov	rsi, rcx
0x400114:	mov	edi, eax
0x400116:	call	0x500040
<Block for 0x40021c, 22 bytes>
0x40021c:	mov	dword ptr [rip + 0x50e], 1
0x400226:	mov	rax, qword ptr [rbp - 0x38]
0x40022a:	mov	rdi, rax
0x40022d:	call	0x400000
<Block for 0x400212, 10 bytes>
0x400212:	mov	eax, dword ptr [rbp - 0x44]
0x400215:	mov	edi, eax
0x400217:	call	0x500068
<Block for 0x40011b, 9 bytes>
0x40011b:	cmp	eax, -1
0x40011e:	je	0x4001f5
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x4001f5, 3 bytes>
0x4001f5:	nop	
0x4001f6:	jmp	0x4001fc
<Block for 0x400124, 15 bytes>
0x400124:	mov	eax, dword ptr [rbp - 0x40]
0x400127:	mov	esi, 5
0x40012c:	mov	edi, eax
0x40012e:	call	0x500048
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500070
<Block for 0x400133, 9 bytes>
0x400133:	cmp	eax, -1
0x400136:	je	0x4001f8
<Block for 0x4001f8, 3 bytes>
0x4001f8:	nop	
0x4001f9:	jmp	0x4001fc
<Block for 0x40013c, 20 bytes>
0x40013c:	mov	eax, dword ptr [rbp - 0x40]
0x40013f:	mov	edx, 0
0x400144:	mov	esi, 0
0x400149:	mov	edi, eax
0x40014b:	call	0x500050
<Block for 0x400150, 13 bytes>
0x400150:	mov	dword ptr [rbp - 0x44], eax
0x400153:	cmp	dword ptr [rbp - 0x44], -1
0x400157:	je	0x4001fb
<Block for 0x40015d, 39 bytes>
0x40015d:	mov	eax, 0x63
0x400162:	sub	rax, qword ptr [rbp - 0x30]
0x400166:	mov	rdx, rax
0x400169:	mov	rcx, qword ptr [rbp - 0x38]
0x40016d:	mov	rax, qword ptr [rbp - 0x30]
0x400171:	lea	rsi, [rcx + rax]
0x400175:	mov	eax, dword ptr [rbp - 0x44]
0x400178:	mov	ecx, 0
0x40017d:	mov	edi, eax
0x40017f:	call	0x500058
<Block for 0x4001fb, 1 bytes>
0x4001fb:	nop	
<Block for 0x400184, 9 bytes>
0x400184:	mov	dword ptr [rbp - 0x3c], eax
0x400187:	cmp	dword ptr [rbp - 0x3c], -1
0x40018b:	je	0x4001fc
<Block for 0x40018d, 6 bytes>
0x40018d:	cmp	dword ptr [rbp - 0x3c], 0
0x400191:	je	0x4001fc
<Block for 0x400193, 40 bytes>
0x400193:	mov	eax, dword ptr [rbp - 0x3c]
0x400196:	movsxd	rdx, eax
0x400199:	mov	rax, qword ptr [rbp - 0x30]
0x40019d:	add	rdx, rax
0x4001a0:	mov	rax, qword ptr [rbp - 0x38]
0x4001a4:	add	rax, rdx
0x4001a7:	mov	byte ptr [rax], 0
0x4001aa:	mov	rax, qword ptr [rbp - 0x38]
0x4001ae:	mov	esi, 0xd
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500060
<Block for 0x4001bb, 11 bytes>
0x4001bb:	mov	qword ptr [rbp - 0x28], rax
0x4001bf:	cmp	qword ptr [rbp - 0x28], 0
0x4001c4:	je	0x4001cd
<Block for 0x4001cd, 17 bytes>
0x4001cd:	mov	rax, qword ptr [rbp - 0x38]
0x4001d1:	mov	esi, 0xa
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500060
<Block for 0x4001c6, 24 bytes>
0x4001c6:	mov	rax, qword ptr [rbp - 0x28]
0x4001ca:	mov	byte ptr [rax], 0
0x4001cd:	mov	rax, qword ptr [rbp - 0x38]
0x4001d1:	mov	esi, 0xa
0x4001d6:	mov	rdi, rax
0x4001d9:	call	0x500060
<Block for 0x4001de, 11 bytes>
0x4001de:	mov	qword ptr [rbp - 0x28], rax
0x4001e2:	cmp	qword ptr [rbp - 0x28], 0
0x4001e7:	je	0x4001fc
<Block for 0x4001e9, 9 bytes>
0x4001e9:	mov	rax, qword ptr [rbp - 0x28]
0x4001ed:	mov	byte ptr [rax], 0
0x4001f0:	jmp	0x4001fc
