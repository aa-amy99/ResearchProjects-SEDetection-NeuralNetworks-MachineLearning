<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x18]
0x40001f:	mov	qword ptr [rbp - 0x10], rax
0x400023:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x40002a:	mov	edx, 0x180
0x40002f:	mov	esi, 0x42
0x400034:	lea	rdi, [rip + 0x111]
0x40003b:	mov	eax, 0
0x400040:	call	0x500000
<Block for 0x400045, 39 bytes>
0x400045:	mov	dword ptr [rbp - 0x18], eax
0x400048:	mov	rax, qword ptr [rbp - 0x10]
0x40004c:	mov	eax, dword ptr [rax]
0x40004e:	mov	dword ptr [rbp - 0x14], eax
0x400051:	mov	edx, 0x180
0x400056:	mov	esi, 0x42
0x40005b:	lea	rdi, [rip + 0xfd]
0x400062:	mov	eax, 0
0x400067:	call	0x500000
<Block for 0x40006c, 9 bytes>
0x40006c:	mov	dword ptr [rbp - 0x14], eax
0x40006f:	cmp	dword ptr [rbp - 0x14], -1
0x400073:	je	0x40007f
<Block for 0x40007f, 16 bytes>
0x40007f:	nop	
0x400080:	mov	rax, qword ptr [rbp - 8]
0x400084:	xor	rax, qword ptr fs:[0x28]
0x40008d:	je	0x400094
<Block for 0x400075, 10 bytes>
0x400075:	mov	eax, dword ptr [rbp - 0x14]
0x400078:	mov	edi, eax
0x40007a:	call	0x500008
<Block for 0x400094, 2 bytes>
0x400094:	leave	
0x400095:	ret	
<Block for 0x40008f, 5 bytes>
0x40008f:	call	0x500010
