<Block for 0x400096, 69 bytes>
0x400096:	endbr64	
0x40009a:	push	rbp
0x40009b:	mov	rbp, rsp
0x40009e:	sub	rsp, 0x20
0x4000a2:	mov	rax, qword ptr fs:[0x28]
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	xor	eax, eax
0x4000b1:	lea	rax, [rbp - 0x18]
0x4000b5:	mov	qword ptr [rbp - 0x10], rax
0x4000b9:	mov	dword ptr [rbp - 0x18], 0xffffffff
0x4000c0:	mov	edx, 0x180
0x4000c5:	mov	esi, 0x42
0x4000ca:	lea	rdi, [rip + 0x7b]
0x4000d1:	mov	eax, 0
0x4000d6:	call	0x500000
<Block for 0x4000db, 18 bytes>
0x4000db:	mov	dword ptr [rbp - 0x18], eax
0x4000de:	mov	rax, qword ptr [rbp - 0x10]
0x4000e2:	mov	eax, dword ptr [rax]
0x4000e4:	mov	dword ptr [rbp - 0x14], eax
0x4000e7:	cmp	dword ptr [rbp - 0x14], -1
0x4000eb:	je	0x4000f7
<Block for 0x4000f7, 27 bytes>
0x4000f7:	mov	edx, 0x180
0x4000fc:	mov	esi, 0x42
0x400101:	lea	rdi, [rip + 0x68]
0x400108:	mov	eax, 0
0x40010d:	call	0x500000
<Block for 0x4000ed, 10 bytes>
0x4000ed:	mov	eax, dword ptr [rbp - 0x14]
0x4000f0:	mov	edi, eax
0x4000f2:	call	0x500008
<Block for 0x400112, 9 bytes>
0x400112:	mov	dword ptr [rbp - 0x14], eax
0x400115:	cmp	dword ptr [rbp - 0x14], -1
0x400119:	je	0x400125
<Block for 0x400125, 16 bytes>
0x400125:	nop	
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	xor	rax, qword ptr fs:[0x28]
0x400133:	je	0x40013a
<Block for 0x40011b, 10 bytes>
0x40011b:	mov	eax, dword ptr [rbp - 0x14]
0x40011e:	mov	edi, eax
0x400120:	call	0x500008
<Block for 0x40013a, 2 bytes>
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x400135, 5 bytes>
0x400135:	call	0x500010
