<Block for 0x4000f4, 51 bytes>
0x4000f4:	endbr64	
0x4000f8:	push	rbp
0x4000f9:	mov	rbp, rsp
0x4000fc:	sub	rsp, 0x90
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	mov	qword ptr [rbp - 0x88], 0
0x40011d:	mov	edi, 0x64
0x400122:	call	0x500000
<Block for 0x400127, 11 bytes>
0x400127:	mov	qword ptr [rbp - 0x80], rax
0x40012b:	cmp	qword ptr [rbp - 0x80], 0
0x400130:	jne	0x40013c
<Block for 0x400132, 10 bytes>
0x400132:	mov	edi, 0xffffffff
0x400137:	call	0x500008
<Block for 0x40013c, 22 bytes>
0x40013c:	mov	rax, qword ptr [rbp - 0x80]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x41
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500010
<Block for 0x400152, 69 bytes>
0x400152:	mov	rax, qword ptr [rbp - 0x80]
0x400156:	add	rax, 0x63
0x40015a:	mov	byte ptr [rax], 0
0x40015d:	mov	rax, qword ptr [rbp - 0x80]
0x400161:	mov	qword ptr [rbp - 0x88], rax
0x400168:	mov	rax, qword ptr [rbp - 0x88]
0x40016f:	mov	qword ptr [rbp - 0x90], rax
0x400176:	mov	rax, qword ptr [rbp - 0x90]
0x40017d:	mov	qword ptr [rbp - 0x78], rax
0x400181:	lea	rax, [rbp - 0x70]
0x400185:	mov	edx, 0x63
0x40018a:	mov	esi, 0x43
0x40018f:	mov	rdi, rax
0x400192:	call	0x500010
<Block for 0x400197, 16 bytes>
0x400197:	mov	byte ptr [rbp - 0xd], 0
0x40019b:	lea	rax, [rbp - 0x70]
0x40019f:	mov	rdi, rax
0x4001a2:	call	0x500018
<Block for 0x4001a7, 22 bytes>
0x4001a7:	mov	rdx, rax
0x4001aa:	mov	rcx, qword ptr [rbp - 0x78]
0x4001ae:	lea	rax, [rbp - 0x70]
0x4001b2:	mov	rsi, rcx
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500020
<Block for 0x4001bd, 16 bytes>
0x4001bd:	mov	byte ptr [rbp - 0xd], 0
0x4001c1:	lea	rax, [rbp - 0x70]
0x4001c5:	mov	rdi, rax
0x4001c8:	call	0x500028
<Block for 0x4001cd, 16 bytes>
0x4001cd:	nop	
0x4001ce:	mov	rax, qword ptr [rbp - 8]
0x4001d2:	xor	rax, qword ptr fs:[0x28]
0x4001db:	je	0x4001e2
<Block for 0x4001e2, 2 bytes>
0x4001e2:	leave	
0x4001e3:	ret	
<Block for 0x4001dd, 5 bytes>
0x4001dd:	call	0x500030
