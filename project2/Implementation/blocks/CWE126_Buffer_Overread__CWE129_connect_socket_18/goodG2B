<Block for 0x4002c8, 97 bytes>
0x4002c8:	endbr64	
0x4002cc:	push	rbp
0x4002cd:	mov	rbp, rsp
0x4002d0:	sub	rsp, 0x40
0x4002d4:	mov	rax, qword ptr fs:[0x28]
0x4002dd:	mov	qword ptr [rbp - 8], rax
0x4002e1:	xor	eax, eax
0x4002e3:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4002ea:	nop	
0x4002eb:	endbr64	
0x4002ef:	mov	dword ptr [rbp - 0x34], 7
0x4002f6:	nop	
0x4002f7:	endbr64	
0x4002fb:	mov	qword ptr [rbp - 0x30], 0
0x400303:	mov	qword ptr [rbp - 0x28], 0
0x40030b:	mov	qword ptr [rbp - 0x20], 0
0x400313:	mov	qword ptr [rbp - 0x18], 0
0x40031b:	mov	qword ptr [rbp - 0x10], 0
0x400323:	cmp	dword ptr [rbp - 0x34], 0
0x400327:	js	0x40033b
<Block for 0x40033b, 12 bytes>
0x40033b:	lea	rdi, [rip + 0x4e]
0x400342:	call	0x500048
<Block for 0x400329, 16 bytes>
0x400329:	mov	eax, dword ptr [rbp - 0x34]
0x40032c:	cdqe	
0x40032e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400332:	mov	edi, eax
0x400334:	call	0x500040
<Block for 0x400347, 16 bytes>
0x400347:	nop	
0x400348:	mov	rax, qword ptr [rbp - 8]
0x40034c:	xor	rax, qword ptr fs:[0x28]
0x400355:	je	0x40035c
<Block for 0x400339, 2 bytes>
0x400339:	jmp	0x400347
<Block for 0x40035c, 2 bytes>
0x40035c:	leave	
0x40035d:	ret	
<Block for 0x400357, 5 bytes>
0x400357:	call	0x500050
