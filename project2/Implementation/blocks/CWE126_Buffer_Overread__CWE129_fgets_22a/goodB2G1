<Block for 0x40009c, 79 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	sub	rsp, 0x20
0x4000a8:	mov	rax, qword ptr fs:[0x28]
0x4000b1:	mov	qword ptr [rbp - 8], rax
0x4000b5:	xor	eax, eax
0x4000b7:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000be:	mov	qword ptr [rbp - 0x16], 0
0x4000c6:	mov	dword ptr [rbp - 0xe], 0
0x4000cd:	mov	word ptr [rbp - 0xa], 0
0x4000d3:	mov	rdx, qword ptr [rip + 0xfff26]
0x4000da:	lea	rax, [rbp - 0x16]
0x4000de:	mov	esi, 0xe
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500008
<Block for 0x4000eb, 5 bytes>
0x4000eb:	test	rax, rax
0x4000ee:	je	0x400101
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0x138]
0x400108:	call	0x500018
<Block for 0x4000f0, 12 bytes>
0x4000f0:	lea	rax, [rbp - 0x16]
0x4000f4:	mov	rdi, rax
0x4000f7:	call	0x500010
<Block for 0x40010d, 20 bytes>
0x40010d:	mov	dword ptr [rip + 0x11d], 0
0x400117:	mov	eax, dword ptr [rbp - 0x1c]
0x40011a:	mov	edi, eax
0x40011c:	call	0x500030
<Block for 0x4000fc, 5 bytes>
0x4000fc:	mov	dword ptr [rbp - 0x1c], eax
0x4000ff:	jmp	0x40010d
<Block for 0x400121, 16 bytes>
0x400121:	nop	
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	xor	rax, qword ptr fs:[0x28]
0x40012f:	je	0x400136
<Block for 0x400136, 2 bytes>
0x400136:	leave	
0x400137:	ret	
<Block for 0x400131, 5 bytes>
0x400131:	call	0x500028
