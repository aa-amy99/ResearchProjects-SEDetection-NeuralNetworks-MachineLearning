<Block for 0x4000c1, 55 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	sub	rsp, 0xf0
0x4000d0:	mov	rax, qword ptr fs:[0x28]
0x4000d9:	mov	qword ptr [rbp - 8], rax
0x4000dd:	xor	eax, eax
0x4000df:	lea	rax, [rbp - 0xe0]
0x4000e6:	mov	edx, 0x63
0x4000eb:	mov	esi, 0x41
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500000
<Block for 0x4000f8, 15 bytes>
0x4000f8:	mov	byte ptr [rbp - 0x7d], 0
0x4000fc:	mov	eax, dword ptr [rip + 0x166]
0x400102:	cmp	eax, 5
0x400105:	je	0x400115
<Block for 0x400115, 36 bytes>
0x400115:	lea	rax, [rbp - 0xe0]
0x40011c:	mov	qword ptr [rbp - 0xe8], rax
0x400123:	lea	rax, [rbp - 0x70]
0x400127:	mov	edx, 0x63
0x40012c:	mov	esi, 0x43
0x400131:	mov	rdi, rax
0x400134:	call	0x500000
<Block for 0x400107, 12 bytes>
0x400107:	lea	rdi, [rip + 0x15e]
0x40010e:	call	0x500010
<Block for 0x400139, 31 bytes>
0x400139:	mov	byte ptr [rbp - 0xd], 0
0x40013d:	lea	rcx, [rbp - 0x70]
0x400141:	mov	rax, qword ptr [rbp - 0xe8]
0x400148:	mov	edx, 0x63
0x40014d:	mov	rsi, rcx
0x400150:	mov	rdi, rax
0x400153:	call	0x500008
<Block for 0x400113, 2 bytes>
0x400113:	jmp	0x400123
<Block for 0x400158, 29 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0xe8]
0x40015f:	add	rax, 0x63
0x400163:	mov	byte ptr [rax], 0
0x400166:	mov	rax, qword ptr [rbp - 0xe8]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500010
<Block for 0x400123, 22 bytes>
0x400123:	lea	rax, [rbp - 0x70]
0x400127:	mov	edx, 0x63
0x40012c:	mov	esi, 0x43
0x400131:	mov	rdi, rax
0x400134:	call	0x500000
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500018
