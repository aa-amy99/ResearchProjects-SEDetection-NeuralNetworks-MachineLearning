<Block for 0x4002f8, 40 bytes>
0x4002f8:	endbr64	
0x4002fc:	push	rbp
0x4002fd:	mov	rbp, rsp
0x400300:	push	rbx
0x400301:	sub	rsp, 0x58
0x400305:	mov	rax, qword ptr fs:[0x28]
0x40030e:	mov	qword ptr [rbp - 0x18], rax
0x400312:	xor	eax, eax
0x400314:	lea	rax, [rbp - 0x50]
0x400318:	mov	rdi, rax
0x40031b:	call	0x4004f0
<Block for 0x400320, 20 bytes>
0x400320:	mov	qword ptr [rbp - 0x60], 0
0x400328:	lea	rax, [rbp - 0x50]
0x40032c:	mov	rdi, rax
0x40032f:	call	0x400696
<Block for 0x400334, 23 bytes>
0x400334:	mov	qword ptr [rbp - 0x58], rax
0x400338:	lea	rdx, [rbp - 0x58]
0x40033c:	lea	rax, [rbp - 0x30]
0x400340:	mov	rsi, rdx
0x400343:	mov	rdi, rax
0x400346:	call	0x4006e6
<Block for 0x40034b, 28 bytes>
0x40034b:	lea	rdx, [rbp - 0x60]
0x40034f:	mov	rsi, qword ptr [rbp - 0x30]
0x400353:	lea	rax, [rbp - 0x50]
0x400357:	mov	rcx, rdx
0x40035a:	mov	edx, 1
0x40035f:	mov	rdi, rax
0x400362:	call	0x400714
<Block for 0x400367, 12 bytes>
0x400367:	lea	rax, [rbp - 0x50]
0x40036b:	mov	rdi, rax
0x40036e:	call	0x400696
<Block for 0x400373, 23 bytes>
0x400373:	mov	qword ptr [rbp - 0x58], rax
0x400377:	lea	rdx, [rbp - 0x58]
0x40037b:	lea	rax, [rbp - 0x30]
0x40037f:	mov	rsi, rdx
0x400382:	mov	rdi, rax
0x400385:	call	0x4006e6
<Block for 0x40038a, 28 bytes>
0x40038a:	lea	rdx, [rbp - 0x60]
0x40038e:	mov	rsi, qword ptr [rbp - 0x30]
0x400392:	lea	rax, [rbp - 0x50]
0x400396:	mov	rcx, rdx
0x400399:	mov	edx, 1
0x40039e:	mov	rdi, rax
0x4003a1:	call	0x400714
<Block for 0x4003a6, 12 bytes>
0x4003a6:	lea	rax, [rbp - 0x50]
0x4003aa:	mov	rdi, rax
0x4003ad:	call	0x400696
<Block for 0x4003b2, 23 bytes>
0x4003b2:	mov	qword ptr [rbp - 0x58], rax
0x4003b6:	lea	rdx, [rbp - 0x58]
0x4003ba:	lea	rax, [rbp - 0x30]
0x4003be:	mov	rsi, rdx
0x4003c1:	mov	rdi, rax
0x4003c4:	call	0x4006e6
<Block for 0x4003c9, 28 bytes>
0x4003c9:	lea	rdx, [rbp - 0x60]
0x4003cd:	mov	rsi, qword ptr [rbp - 0x30]
0x4003d1:	lea	rax, [rbp - 0x50]
0x4003d5:	mov	rcx, rdx
0x4003d8:	mov	edx, 1
0x4003dd:	mov	rdi, rax
0x4003e0:	call	0x400714
<Block for 0x4003e5, 19 bytes>
0x4003e5:	lea	rdx, [rbp - 0x50]
0x4003e9:	lea	rax, [rbp - 0x30]
0x4003ed:	mov	rsi, rdx
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x4007da
<Block for 0x4003f8, 12 bytes>
0x4003f8:	lea	rax, [rbp - 0x30]
0x4003fc:	mov	rdi, rax
0x4003ff:	call	0x500020
<Block for 0x400404, 12 bytes>
0x400404:	lea	rax, [rbp - 0x30]
0x400408:	mov	rdi, rax
0x40040b:	call	0x40064e
<Block for 0x400410, 12 bytes>
0x400410:	lea	rax, [rbp - 0x50]
0x400414:	mov	rdi, rax
0x400417:	call	0x40064e
<Block for 0x40041c, 16 bytes>
0x40041c:	nop	
0x40041d:	mov	rax, qword ptr [rbp - 0x18]
0x400421:	xor	rax, qword ptr fs:[0x28]
0x40042a:	je	0x400466
<Block for 0x400466, 7 bytes>
0x400466:	add	rsp, 0x58
0x40046a:	pop	rbx
0x40046b:	pop	rbp
0x40046c:	ret	
<Block for 0x40042c, 2 bytes>
0x40042c:	jmp	0x400461
<Block for 0x400461, 5 bytes>
0x400461:	call	0x500010
