<Block for 0x400175, 40 bytes>
0x400175:	endbr64	
0x400179:	push	rbp
0x40017a:	mov	rbp, rsp
0x40017d:	push	rbx
0x40017e:	sub	rsp, 0x68
0x400182:	mov	rax, qword ptr fs:[0x28]
0x40018b:	mov	qword ptr [rbp - 0x18], rax
0x40018f:	xor	eax, eax
0x400191:	lea	rax, [rbp - 0x50]
0x400195:	mov	rdi, rax
0x400198:	call	0x4004f0
<Block for 0x40019d, 34 bytes>
0x40019d:	mov	dword ptr [rbp - 0x58], 0
0x4001a4:	mov	dword ptr [rbp - 0x54], 0
0x4001ab:	lea	rax, [rbp - 0x58]
0x4001af:	mov	qword ptr [rbp - 0x68], rax
0x4001b3:	lea	rax, [rbp - 0x50]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x400696
<Block for 0x4001bf, 23 bytes>
0x4001bf:	mov	qword ptr [rbp - 0x60], rax
0x4001c3:	lea	rdx, [rbp - 0x60]
0x4001c7:	lea	rax, [rbp - 0x30]
0x4001cb:	mov	rsi, rdx
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x4006e6
<Block for 0x4001d6, 28 bytes>
0x4001d6:	lea	rdx, [rbp - 0x68]
0x4001da:	mov	rsi, qword ptr [rbp - 0x30]
0x4001de:	lea	rax, [rbp - 0x50]
0x4001e2:	mov	rcx, rdx
0x4001e5:	mov	edx, 1
0x4001ea:	mov	rdi, rax
0x4001ed:	call	0x400714
<Block for 0x4001f2, 12 bytes>
0x4001f2:	lea	rax, [rbp - 0x50]
0x4001f6:	mov	rdi, rax
0x4001f9:	call	0x400696
<Block for 0x4001fe, 23 bytes>
0x4001fe:	mov	qword ptr [rbp - 0x60], rax
0x400202:	lea	rdx, [rbp - 0x60]
0x400206:	lea	rax, [rbp - 0x30]
0x40020a:	mov	rsi, rdx
0x40020d:	mov	rdi, rax
0x400210:	call	0x4006e6
<Block for 0x400215, 28 bytes>
0x400215:	lea	rdx, [rbp - 0x68]
0x400219:	mov	rsi, qword ptr [rbp - 0x30]
0x40021d:	lea	rax, [rbp - 0x50]
0x400221:	mov	rcx, rdx
0x400224:	mov	edx, 1
0x400229:	mov	rdi, rax
0x40022c:	call	0x400714
<Block for 0x400231, 12 bytes>
0x400231:	lea	rax, [rbp - 0x50]
0x400235:	mov	rdi, rax
0x400238:	call	0x400696
<Block for 0x40023d, 23 bytes>
0x40023d:	mov	qword ptr [rbp - 0x60], rax
0x400241:	lea	rdx, [rbp - 0x60]
0x400245:	lea	rax, [rbp - 0x30]
0x400249:	mov	rsi, rdx
0x40024c:	mov	rdi, rax
0x40024f:	call	0x4006e6
<Block for 0x400254, 28 bytes>
0x400254:	lea	rdx, [rbp - 0x68]
0x400258:	mov	rsi, qword ptr [rbp - 0x30]
0x40025c:	lea	rax, [rbp - 0x50]
0x400260:	mov	rcx, rdx
0x400263:	mov	edx, 1
0x400268:	mov	rdi, rax
0x40026b:	call	0x400714
<Block for 0x400270, 19 bytes>
0x400270:	lea	rdx, [rbp - 0x50]
0x400274:	lea	rax, [rbp - 0x30]
0x400278:	mov	rsi, rdx
0x40027b:	mov	rdi, rax
0x40027e:	call	0x4007da
<Block for 0x400283, 12 bytes>
0x400283:	lea	rax, [rbp - 0x30]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500018
<Block for 0x40028f, 12 bytes>
0x40028f:	lea	rax, [rbp - 0x30]
0x400293:	mov	rdi, rax
0x400296:	call	0x40064e
<Block for 0x40029b, 12 bytes>
0x40029b:	lea	rax, [rbp - 0x50]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x40064e
<Block for 0x4002a7, 16 bytes>
0x4002a7:	nop	
0x4002a8:	mov	rax, qword ptr [rbp - 0x18]
0x4002ac:	xor	rax, qword ptr fs:[0x28]
0x4002b5:	je	0x4002f1
<Block for 0x4002f1, 7 bytes>
0x4002f1:	add	rsp, 0x68
0x4002f5:	pop	rbx
0x4002f6:	pop	rbp
0x4002f7:	ret	
<Block for 0x4002b7, 2 bytes>
0x4002b7:	jmp	0x4002ec
<Block for 0x4002ec, 5 bytes>
0x4002ec:	call	0x500010
