<Block for 0x40006c, 30 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x10
0x400078:	mov	qword ptr [rbp - 8], 0
0x400080:	mov	edi, 0x64
0x400085:	call	0x500000
<Block for 0x40008a, 11 bytes>
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	cmp	qword ptr [rbp - 8], 0
0x400093:	jne	0x40009f
<Block for 0x400095, 10 bytes>
0x400095:	mov	edi, 0xffffffff
0x40009a:	call	0x500008
<Block for 0x40009f, 22 bytes>
0x40009f:	mov	rax, qword ptr [rbp - 8]
0x4000a3:	mov	edx, 0x63
0x4000a8:	mov	esi, 0x41
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500010
<Block for 0x4000b5, 32 bytes>
0x4000b5:	mov	rax, qword ptr [rbp - 8]
0x4000b9:	add	rax, 0x63
0x4000bd:	mov	byte ptr [rax], 0
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	mov	qword ptr [rip - 0xc3], rax
0x4000cb:	mov	eax, 0
0x4000d0:	call	0x500020
<Block for 0x4000d5, 3 bytes>
0x4000d5:	nop	
0x4000d6:	leave	
0x4000d7:	ret	
