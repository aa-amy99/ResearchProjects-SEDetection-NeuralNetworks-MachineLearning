<Block for 0x4000cb, 44 bytes>
0x4000cb:	endbr64	
0x4000cf:	push	rbp
0x4000d0:	mov	rbp, rsp
0x4000d3:	sub	rsp, 0x20
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	mov	qword ptr [rbp - 0x10], 0
0x4000ee:	mov	eax, 1
0x4000f3:	test	eax, eax
0x4000f5:	je	0x400106
<Block for 0x400106, 13 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x10]
0x40010a:	mov	eax, dword ptr [rax]
0x40010c:	mov	edi, eax
0x40010e:	call	0x500000
<Block for 0x4000f7, 28 bytes>
0x4000f7:	mov	dword ptr [rbp - 0x14], 8
0x4000fe:	lea	rax, [rbp - 0x14]
0x400102:	mov	qword ptr [rbp - 0x10], rax
0x400106:	mov	rax, qword ptr [rbp - 0x10]
0x40010a:	mov	eax, dword ptr [rax]
0x40010c:	mov	edi, eax
0x40010e:	call	0x500000
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 8]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x400128, 2 bytes>
0x400128:	leave	
0x400129:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500008
