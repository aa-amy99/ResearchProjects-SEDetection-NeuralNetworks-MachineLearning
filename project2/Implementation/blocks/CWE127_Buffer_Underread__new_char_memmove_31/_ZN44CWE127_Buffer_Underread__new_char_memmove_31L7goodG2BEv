<Block for 0x4000df, 51 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0x90
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	mov	qword ptr [rbp - 0x90], 0
0x400108:	mov	edi, 0x64
0x40010d:	call	0x500000
<Block for 0x400112, 32 bytes>
0x400112:	mov	qword ptr [rbp - 0x88], rax
0x400119:	mov	rax, qword ptr [rbp - 0x88]
0x400120:	mov	edx, 0x63
0x400125:	mov	esi, 0x41
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x400132, 69 bytes>
0x400132:	mov	rax, qword ptr [rbp - 0x88]
0x400139:	add	rax, 0x63
0x40013d:	mov	byte ptr [rax], 0
0x400140:	mov	rax, qword ptr [rbp - 0x88]
0x400147:	mov	qword ptr [rbp - 0x90], rax
0x40014e:	mov	rax, qword ptr [rbp - 0x90]
0x400155:	mov	qword ptr [rbp - 0x80], rax
0x400159:	mov	rax, qword ptr [rbp - 0x80]
0x40015d:	mov	qword ptr [rbp - 0x78], rax
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	edx, 0x63
0x40016a:	mov	esi, 0x43
0x40016f:	mov	rdi, rax
0x400172:	call	0x500008
<Block for 0x400177, 28 bytes>
0x400177:	mov	byte ptr [rbp - 0xd], 0
0x40017b:	mov	rcx, qword ptr [rbp - 0x78]
0x40017f:	lea	rax, [rbp - 0x70]
0x400183:	mov	edx, 0x64
0x400188:	mov	rsi, rcx
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500010
<Block for 0x400193, 16 bytes>
0x400193:	mov	byte ptr [rbp - 0xd], 0
0x400197:	lea	rax, [rbp - 0x70]
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500018
<Block for 0x4001a3, 16 bytes>
0x4001a3:	nop	
0x4001a4:	mov	rax, qword ptr [rbp - 8]
0x4001a8:	xor	rax, qword ptr fs:[0x28]
0x4001b1:	je	0x4001b8
<Block for 0x4001b8, 2 bytes>
0x4001b8:	leave	
0x4001b9:	ret	
<Block for 0x4001b3, 5 bytes>
0x4001b3:	call	0x500020
