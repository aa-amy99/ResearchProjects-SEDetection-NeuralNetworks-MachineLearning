<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x4000d3
<Block for 0x4000d3, 54 bytes>
0x4000d3:	mov	eax, 0x10
0x4000d8:	sub	rax, 1
0x4000dc:	add	rax, 0x10
0x4000e0:	mov	ecx, 0x10
0x4000e5:	mov	edx, 0
0x4000ea:	div	rcx
0x4000ed:	imul	rax, rax, 0x10
0x4000f1:	mov	rdx, rax
0x4000f4:	and	rdx, 0xfffffffffffff000
0x4000fb:	mov	rsi, rsp
0x4000fe:	sub	rsi, rdx
0x400101:	mov	rdx, rsi
0x400104:	cmp	rsp, rdx
0x400107:	je	0x40011b
<Block for 0x40002d, 54 bytes>
0x40002d:	mov	eax, 0x10
0x400032:	sub	rax, 1
0x400036:	add	rax, 0x10
0x40003a:	mov	edi, 0x10
0x40003f:	mov	edx, 0
0x400044:	div	rdi
0x400047:	imul	rax, rax, 0x10
0x40004b:	mov	rdx, rax
0x40004e:	and	rdx, 0xfffffffffffff000
0x400055:	mov	rcx, rsp
0x400058:	sub	rcx, rdx
0x40005b:	mov	rdx, rcx
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x40011b, 26 bytes>
0x40011b:	mov	rdx, rax
0x40011e:	and	edx, 0xfff
0x400124:	sub	rsp, rdx
0x400127:	mov	rdx, rax
0x40012a:	and	edx, 0xfff
0x400130:	test	rdx, rdx
0x400133:	je	0x400145
<Block for 0x400109, 18 bytes>
0x400109:	sub	rsp, 0x1000
0x400110:	or	qword ptr [rsp + 0xff8], 0
0x400119:	jmp	0x400104
<Block for 0x400075, 26 bytes>
0x400075:	mov	rdx, rax
0x400078:	and	edx, 0xfff
0x40007e:	sub	rsp, rdx
0x400081:	mov	rdx, rax
0x400084:	and	edx, 0xfff
0x40008a:	test	rdx, rdx
0x40008d:	je	0x40009f
<Block for 0x400063, 18 bytes>
0x400063:	sub	rsp, 0x1000
0x40006a:	or	qword ptr [rsp + 0xff8], 0
0x400073:	jmp	0x40005e
<Block for 0x400145, 29 bytes>
0x400145:	mov	rax, rsp
0x400148:	add	rax, 0xf
0x40014c:	shr	rax, 4
0x400150:	shl	rax, 4
0x400154:	mov	qword ptr [rbp - 0x30], rax
0x400158:	mov	edi, 8
0x40015d:	call	0x500010
<Block for 0x400135, 45 bytes>
0x400135:	and	eax, 0xfff
0x40013a:	sub	rax, 8
0x40013e:	add	rax, rsp
0x400141:	or	qword ptr [rax], 0
0x400145:	mov	rax, rsp
0x400148:	add	rax, 0xf
0x40014c:	shr	rax, 4
0x400150:	shl	rax, 4
0x400154:	mov	qword ptr [rbp - 0x30], rax
0x400158:	mov	edi, 8
0x40015d:	call	0x500010
<Block for 0x400104, 5 bytes>
0x400104:	cmp	rsp, rdx
0x400107:	je	0x40011b
<Block for 0x40009f, 47 bytes>
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x18], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x10]
0x4000c1:	mov	rax, qword ptr [rax]
0x4000c4:	movq	xmm0, rax
0x4000c9:	call	0x500008
<Block for 0x40008f, 63 bytes>
0x40008f:	and	eax, 0xfff
0x400094:	sub	rax, 8
0x400098:	add	rax, rsp
0x40009b:	or	qword ptr [rax], 0
0x40009f:	mov	rax, rsp
0x4000a2:	add	rax, 0xf
0x4000a6:	shr	rax, 4
0x4000aa:	shl	rax, 4
0x4000ae:	mov	qword ptr [rbp - 0x18], rax
0x4000b2:	mov	rax, qword ptr [rbp - 0x18]
0x4000b6:	mov	rax, qword ptr [rax]
0x4000b9:	mov	qword ptr [rbp - 0x10], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x10]
0x4000c1:	mov	rax, qword ptr [rax]
0x4000c4:	movq	xmm0, rax
0x4000c9:	call	0x500008
<Block for 0x40005e, 5 bytes>
0x40005e:	cmp	rsp, rdx
0x400061:	je	0x400075
<Block for 0x400162, 11 bytes>
0x400162:	mov	qword ptr [rbp - 0x28], rax
0x400166:	cmp	qword ptr [rbp - 0x28], 0
0x40016b:	jne	0x400177
<Block for 0x4000ce, 5 bytes>
0x4000ce:	jmp	0x4001ae
<Block for 0x40016d, 10 bytes>
0x40016d:	mov	edi, 0xffffffff
0x400172:	call	0x500018
<Block for 0x400177, 55 bytes>
0x400177:	mov	rax, qword ptr [rbp - 0x28]
0x40017b:	movsd	xmm0, qword ptr [rip + 0x25d]
0x400183:	movsd	qword ptr [rax], xmm0
0x400187:	mov	rax, qword ptr [rbp - 0x30]
0x40018b:	mov	rdx, qword ptr [rbp - 0x28]
0x40018f:	mov	qword ptr [rax], rdx
0x400192:	mov	rax, qword ptr [rbp - 0x30]
0x400196:	mov	rax, qword ptr [rax]
0x400199:	mov	qword ptr [rbp - 0x20], rax
0x40019d:	mov	rax, qword ptr [rbp - 0x20]
0x4001a1:	mov	rax, qword ptr [rax]
0x4001a4:	movq	xmm0, rax
0x4001a9:	call	0x500008
<Block for 0x4001ae, 16 bytes>
0x4001ae:	nop	
0x4001af:	mov	rax, qword ptr [rbp - 8]
0x4001b3:	xor	rax, qword ptr fs:[0x28]
0x4001bc:	je	0x4001c3
<Block for 0x4001c3, 2 bytes>
0x4001c3:	leave	
0x4001c4:	ret	
<Block for 0x4001be, 5 bytes>
0x4001be:	call	0x500020
