<Block for 0x400067, 22 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x10
0x400073:	mov	eax, 0
0x400078:	call	0x500028
<Block for 0x40007d, 4 bytes>
0x40007d:	test	eax, eax
0x40007f:	je	0x40008f
<Block for 0x40008f, 18 bytes>
0x40008f:	mov	qword ptr [rbp - 8], 0
0x400097:	mov	edi, 4
0x40009c:	call	0x500008
<Block for 0x400081, 12 bytes>
0x400081:	lea	rdi, [rip + 0xda]
0x400088:	call	0x500030
<Block for 0x4000a1, 11 bytes>
0x4000a1:	mov	qword ptr [rbp - 8], rax
0x4000a5:	cmp	qword ptr [rbp - 8], 0
0x4000aa:	jne	0x4000b6
<Block for 0x40008d, 2 bytes>
0x40008d:	jmp	0x4000d9
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	edi, 0xffffffff
0x4000b1:	call	0x500010
<Block for 0x4000b6, 23 bytes>
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	mov	dword ptr [rax], 6
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	mov	eax, dword ptr [rax]
0x4000c6:	mov	edi, eax
0x4000c8:	call	0x500018
<Block for 0x4000d9, 3 bytes>
0x4000d9:	nop	
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000cd, 12 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 8]
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500020
