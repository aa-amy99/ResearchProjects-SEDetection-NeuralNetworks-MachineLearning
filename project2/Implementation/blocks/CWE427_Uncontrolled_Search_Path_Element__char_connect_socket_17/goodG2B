<Block for 0x400251, 82 bytes>
0x400251:	endbr64	
0x400255:	push	rbp
0x400256:	mov	rbp, rsp
0x400259:	sub	rsp, 0x120
0x400260:	mov	rax, qword ptr fs:[0x28]
0x400269:	mov	qword ptr [rbp - 8], rax
0x40026d:	xor	eax, eax
0x40026f:	movabs	rax, 0x3d48544150
0x400279:	mov	edx, 0
0x40027e:	mov	qword ptr [rbp - 0x110], rax
0x400285:	mov	qword ptr [rbp - 0x108], rdx
0x40028c:	lea	rdx, [rbp - 0x100]
0x400293:	mov	eax, 0
0x400298:	mov	ecx, 0x1d
0x40029d:	mov	rdi, rdx
0x4002a0:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002a3, 36 bytes>
0x4002a3:	mov	rdx, rdi
0x4002a6:	mov	word ptr [rdx], ax
0x4002a9:	add	rdx, 2
0x4002ad:	lea	rax, [rbp - 0x110]
0x4002b4:	mov	qword ptr [rbp - 0x118], rax
0x4002bb:	mov	dword ptr [rbp - 0x11c], 0
0x4002c5:	jmp	0x400307
<Block for 0x4002a0, 3 bytes>
0x4002a0:	rep stosq	qword ptr [rdi], rax
<Block for 0x400307, 9 bytes>
0x400307:	cmp	dword ptr [rbp - 0x11c], 0
0x40030e:	jle	0x4002c7
<Block for 0x4002c7, 27 bytes>
0x4002c7:	mov	rax, qword ptr [rbp - 0x118]
0x4002ce:	mov	rcx, -1
0x4002d5:	mov	rdx, rax
0x4002d8:	mov	eax, 0
0x4002dd:	mov	rdi, rdx
0x4002e0:	repne scasb	al, byte ptr [rdi]
<Block for 0x400310, 15 bytes>
0x400310:	mov	rax, qword ptr [rbp - 0x118]
0x400317:	mov	rdi, rax
0x40031a:	call	0x500048
<Block for 0x4002e2, 46 bytes>
0x4002e2:	mov	rax, rcx
0x4002e5:	not	rax
0x4002e8:	lea	rdx, [rax - 1]
0x4002ec:	mov	rax, qword ptr [rbp - 0x118]
0x4002f3:	add	rax, rdx
0x4002f6:	mov	dword ptr [rax], 0x6e69622f
0x4002fc:	mov	byte ptr [rax + 4], 0
0x400300:	add	dword ptr [rbp - 0x11c], 1
0x400307:	cmp	dword ptr [rbp - 0x11c], 0
0x40030e:	jle	0x4002c7
<Block for 0x4002e0, 2 bytes>
0x4002e0:	repne scasb	al, byte ptr [rdi]
<Block for 0x40031f, 16 bytes>
0x40031f:	nop	
0x400320:	mov	rax, qword ptr [rbp - 8]
0x400324:	xor	rax, qword ptr fs:[0x28]
0x40032d:	je	0x400334
<Block for 0x400334, 2 bytes>
0x400334:	leave	
0x400335:	ret	
<Block for 0x40032f, 5 bytes>
0x40032f:	call	0x500050
