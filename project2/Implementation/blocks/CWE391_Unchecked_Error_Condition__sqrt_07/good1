<Block for 0x400042, 23 bytes>
0x400042:	endbr64	
0x400046:	push	rbp
0x400047:	mov	rbp, rsp
0x40004a:	sub	rsp, 0x10
0x40004e:	mov	eax, dword ptr [rip + 0xfc]
0x400054:	cmp	eax, 5
0x400057:	je	0x400067
<Block for 0x400067, 5 bytes>
0x400067:	call	0x500018
<Block for 0x400059, 12 bytes>
0x400059:	lea	rdi, [rip + 0xf8]
0x400060:	call	0x500010
<Block for 0x40006c, 23 bytes>
0x40006c:	mov	dword ptr [rax], 0
0x400072:	mov	rax, qword ptr [rip + 0x107]
0x400079:	movq	xmm0, rax
0x40007e:	call	0x500000
<Block for 0x400065, 2 bytes>
0x400065:	jmp	0x4000bc
<Block for 0x400083, 14 bytes>
0x400083:	movq	rax, xmm0
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	call	0x500018
<Block for 0x4000bc, 3 bytes>
0x4000bc:	nop	
0x4000bd:	leave	
0x4000be:	ret	
<Block for 0x400091, 7 bytes>
0x400091:	mov	eax, dword ptr [rax]
0x400093:	cmp	eax, 0x21
0x400096:	jne	0x4000ae
<Block for 0x400098, 12 bytes>
0x400098:	lea	rdi, [rip + 0xce]
0x40009f:	call	0x500010
<Block for 0x4000ae, 14 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 8]
0x4000b2:	movq	xmm0, rax
0x4000b7:	call	0x500008
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 1
0x4000a9:	call	0x500020
