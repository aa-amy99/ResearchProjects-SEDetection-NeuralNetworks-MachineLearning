<Block for 0x400038, 21 bytes>
0x400038:	endbr64	
0x40003c:	push	rbp
0x40003d:	mov	rbp, rsp
0x400040:	sub	rsp, 0x10
0x400044:	mov	eax, 1
0x400049:	test	eax, eax
0x40004b:	je	0x400055
<Block for 0x400055, 9 bytes>
0x400055:	mov	eax, 0
0x40005a:	test	eax, eax
0x40005c:	je	0x40006c
<Block for 0x40004d, 17 bytes>
0x40004d:	mov	qword ptr [rbp - 8], 0
0x400055:	mov	eax, 0
0x40005a:	test	eax, eax
0x40005c:	je	0x40006c
<Block for 0x40006c, 7 bytes>
0x40006c:	cmp	qword ptr [rbp - 8], 0
0x400071:	je	0x400084
<Block for 0x40005e, 12 bytes>
0x40005e:	lea	rdi, [rip + 0x18b]
0x400065:	call	0x500008
<Block for 0x400084, 12 bytes>
0x400084:	lea	rdi, [rip + 0x17a]
0x40008b:	call	0x500008
<Block for 0x400073, 15 bytes>
0x400073:	mov	rax, qword ptr [rbp - 8]
0x400077:	mov	rax, qword ptr [rax]
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500000
<Block for 0x40006a, 2 bytes>
0x40006a:	jmp	0x400090
<Block for 0x400090, 3 bytes>
0x400090:	nop	
0x400091:	leave	
0x400092:	ret	
<Block for 0x400082, 2 bytes>
0x400082:	jmp	0x400090
