<Block for 0x4001e3, 61 bytes>
0x4001e3:	endbr64	
0x4001e7:	push	rbp
0x4001e8:	mov	rbp, rsp
0x4001eb:	sub	rsp, 0x50
0x4001ef:	mov	rax, qword ptr fs:[0x28]
0x4001f8:	mov	qword ptr [rbp - 8], rax
0x4001fc:	xor	eax, eax
0x4001fe:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400205:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40020c:	mov	edx, 6
0x400211:	mov	esi, 1
0x400216:	mov	edi, 2
0x40021b:	call	0x500000
<Block for 0x400220, 13 bytes>
0x400220:	mov	dword ptr [rbp - 0x48], eax
0x400223:	cmp	dword ptr [rbp - 0x48], -1
0x400227:	je	0x4002c3
<Block for 0x4002c3, 3 bytes>
0x4002c3:	nop	
0x4002c4:	jmp	0x4002c7
<Block for 0x40022d, 22 bytes>
0x40022d:	lea	rax, [rbp - 0x40]
0x400231:	mov	edx, 0x10
0x400236:	mov	esi, 0
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500008
<Block for 0x4002c7, 6 bytes>
0x4002c7:	cmp	dword ptr [rbp - 0x48], -1
0x4002cb:	je	0x4002d7
<Block for 0x400243, 18 bytes>
0x400243:	mov	word ptr [rbp - 0x40], 2
0x400249:	lea	rdi, [rip + 0x110]
0x400250:	call	0x500010
<Block for 0x4002d7, 46 bytes>
0x4002d7:	mov	qword ptr [rbp - 0x40], 0
0x4002df:	mov	qword ptr [rbp - 0x38], 0
0x4002e7:	mov	qword ptr [rbp - 0x30], 0
0x4002ef:	mov	qword ptr [rbp - 0x28], 0
0x4002f7:	mov	qword ptr [rbp - 0x20], 0
0x4002ff:	cmp	dword ptr [rbp - 0x4c], 0
0x400303:	js	0x40031d
<Block for 0x4002cd, 10 bytes>
0x4002cd:	mov	eax, dword ptr [rbp - 0x48]
0x4002d0:	mov	edi, eax
0x4002d2:	call	0x500038
<Block for 0x400255, 13 bytes>
0x400255:	mov	dword ptr [rbp - 0x3c], eax
0x400258:	mov	edi, 0x6987
0x40025d:	call	0x500018
<Block for 0x40031d, 12 bytes>
0x40031d:	lea	rdi, [rip + 0x6c]
0x400324:	call	0x500048
<Block for 0x400305, 6 bytes>
0x400305:	cmp	dword ptr [rbp - 0x4c], 9
0x400309:	jg	0x40031d
<Block for 0x400262, 26 bytes>
0x400262:	mov	word ptr [rbp - 0x3e], ax
0x400266:	lea	rcx, [rbp - 0x40]
0x40026a:	mov	eax, dword ptr [rbp - 0x48]
0x40026d:	mov	edx, 0x10
0x400272:	mov	rsi, rcx
0x400275:	mov	edi, eax
0x400277:	call	0x500020
<Block for 0x400329, 16 bytes>
0x400329:	nop	
0x40032a:	mov	rax, qword ptr [rbp - 8]
0x40032e:	xor	rax, qword ptr fs:[0x28]
0x400337:	je	0x40033e
<Block for 0x40030b, 16 bytes>
0x40030b:	mov	eax, dword ptr [rbp - 0x4c]
0x40030e:	cdqe	
0x400310:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x400314:	mov	edi, eax
0x400316:	call	0x500040
<Block for 0x40027c, 5 bytes>
0x40027c:	cmp	eax, -1
0x40027f:	je	0x4002c6
<Block for 0x40033e, 2 bytes>
0x40033e:	leave	
0x40033f:	ret	
<Block for 0x400339, 5 bytes>
0x400339:	call	0x500050
<Block for 0x40031b, 2 bytes>
0x40031b:	jmp	0x400329
<Block for 0x400281, 24 bytes>
0x400281:	lea	rsi, [rbp - 0x16]
0x400285:	mov	eax, dword ptr [rbp - 0x48]
0x400288:	mov	ecx, 0
0x40028d:	mov	edx, 0xd
0x400292:	mov	edi, eax
0x400294:	call	0x500028
<Block for 0x4002c6, 1 bytes>
0x4002c6:	nop	
<Block for 0x400299, 9 bytes>
0x400299:	mov	dword ptr [rbp - 0x44], eax
0x40029c:	cmp	dword ptr [rbp - 0x44], -1
0x4002a0:	je	0x4002c7
<Block for 0x4002a2, 6 bytes>
0x4002a2:	cmp	dword ptr [rbp - 0x44], 0
0x4002a6:	je	0x4002c7
<Block for 0x4002a8, 22 bytes>
0x4002a8:	mov	eax, dword ptr [rbp - 0x44]
0x4002ab:	cdqe	
0x4002ad:	mov	byte ptr [rbp + rax - 0x16], 0
0x4002b2:	lea	rax, [rbp - 0x16]
0x4002b6:	mov	rdi, rax
0x4002b9:	call	0x500030
<Block for 0x4002be, 5 bytes>
0x4002be:	mov	dword ptr [rbp - 0x4c], eax
0x4002c1:	jmp	0x4002c7
