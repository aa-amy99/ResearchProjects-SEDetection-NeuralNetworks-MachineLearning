<Block for 0x400000, 58 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400026:	mov	edx, 6
0x40002b:	mov	esi, 1
0x400030:	mov	edi, 2
0x400035:	call	0x500000
<Block for 0x40003a, 13 bytes>
0x40003a:	mov	dword ptr [rbp - 0x38], eax
0x40003d:	cmp	dword ptr [rbp - 0x38], -1
0x400041:	je	0x4000e5
<Block for 0x4000e5, 3 bytes>
0x4000e5:	nop	
0x4000e6:	jmp	0x4000e9
<Block for 0x400047, 22 bytes>
0x400047:	lea	rax, [rbp - 0x30]
0x40004b:	mov	edx, 0x10
0x400050:	mov	esi, 0
0x400055:	mov	rdi, rax
0x400058:	call	0x500008
<Block for 0x4000e9, 6 bytes>
0x4000e9:	cmp	dword ptr [rbp - 0x38], -1
0x4000ed:	je	0x4000f9
<Block for 0x40005d, 18 bytes>
0x40005d:	mov	word ptr [rbp - 0x30], 2
0x400063:	lea	rdi, [rip + 0x1ae]
0x40006a:	call	0x500010
<Block for 0x4000f9, 16 bytes>
0x4000f9:	nop	
0x4000fa:	mov	rax, qword ptr [rbp - 8]
0x4000fe:	xor	rax, qword ptr fs:[0x28]
0x400107:	je	0x40010e
<Block for 0x4000ef, 10 bytes>
0x4000ef:	mov	eax, dword ptr [rbp - 0x38]
0x4000f2:	mov	edi, eax
0x4000f4:	call	0x500038
<Block for 0x40006f, 13 bytes>
0x40006f:	mov	dword ptr [rbp - 0x2c], eax
0x400072:	mov	edi, 0x6987
0x400077:	call	0x500018
<Block for 0x40010e, 2 bytes>
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400109, 5 bytes>
0x400109:	call	0x500040
<Block for 0x40007c, 26 bytes>
0x40007c:	mov	word ptr [rbp - 0x2e], ax
0x400080:	lea	rcx, [rbp - 0x30]
0x400084:	mov	eax, dword ptr [rbp - 0x38]
0x400087:	mov	edx, 0x10
0x40008c:	mov	rsi, rcx
0x40008f:	mov	edi, eax
0x400091:	call	0x500020
<Block for 0x400096, 10 bytes>
0x400096:	cmp	eax, -1
0x400099:	sete	al
0x40009c:	test	al, al
0x40009e:	jne	0x4000e8
<Block for 0x4000a0, 24 bytes>
0x4000a0:	lea	rsi, [rbp - 0x16]
0x4000a4:	mov	eax, dword ptr [rbp - 0x38]
0x4000a7:	mov	ecx, 0
0x4000ac:	mov	edx, 0xd
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500028
<Block for 0x4000e8, 1 bytes>
0x4000e8:	nop	
<Block for 0x4000b8, 9 bytes>
0x4000b8:	mov	dword ptr [rbp - 0x34], eax
0x4000bb:	cmp	dword ptr [rbp - 0x34], -1
0x4000bf:	je	0x4000e9
<Block for 0x4000c1, 6 bytes>
0x4000c1:	cmp	dword ptr [rbp - 0x34], 0
0x4000c5:	je	0x4000e9
<Block for 0x4000c7, 22 bytes>
0x4000c7:	mov	eax, dword ptr [rbp - 0x34]
0x4000ca:	cdqe	
0x4000cc:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000d1:	lea	rax, [rbp - 0x16]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500030
<Block for 0x4000dd, 8 bytes>
0x4000dd:	mov	rdx, qword ptr [rbp - 0x48]
0x4000e1:	mov	dword ptr [rdx], eax
0x4000e3:	jmp	0x4000e9
