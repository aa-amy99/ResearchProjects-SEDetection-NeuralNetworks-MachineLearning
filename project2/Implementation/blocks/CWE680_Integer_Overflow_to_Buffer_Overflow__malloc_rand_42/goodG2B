<Block for 0x40010f, 29 bytes>
0x40010f:	endbr64	
0x400113:	push	rbp
0x400114:	mov	rbp, rsp
0x400117:	sub	rsp, 0x20
0x40011b:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400122:	mov	eax, dword ptr [rbp - 0x14]
0x400125:	mov	edi, eax
0x400127:	call	0x4000f8
<Block for 0x40012c, 20 bytes>
0x40012c:	mov	dword ptr [rbp - 0x14], eax
0x40012f:	mov	eax, dword ptr [rbp - 0x14]
0x400132:	cdqe	
0x400134:	shl	rax, 2
0x400138:	mov	rdi, rax
0x40013b:	call	0x500008
<Block for 0x400140, 11 bytes>
0x400140:	mov	qword ptr [rbp - 8], rax
0x400144:	cmp	qword ptr [rbp - 8], 0
0x400149:	jne	0x400155
<Block for 0x40014b, 10 bytes>
0x40014b:	mov	edi, 0xffffffff
0x400150:	call	0x500010
<Block for 0x400155, 10 bytes>
0x400155:	mov	qword ptr [rbp - 0x10], 0
0x40015d:	jmp	0x40017d
<Block for 0x40017d, 11 bytes>
0x40017d:	mov	eax, dword ptr [rbp - 0x14]
0x400180:	cdqe	
0x400182:	cmp	qword ptr [rbp - 0x10], rax
0x400186:	jb	0x40015f
<Block for 0x40015f, 41 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 0x10]
0x400163:	lea	rdx, [rax*4]
0x40016b:	mov	rax, qword ptr [rbp - 8]
0x40016f:	add	rax, rdx
0x400172:	mov	dword ptr [rax], 0
0x400178:	add	qword ptr [rbp - 0x10], 1
0x40017d:	mov	eax, dword ptr [rbp - 0x14]
0x400180:	cdqe	
0x400182:	cmp	qword ptr [rbp - 0x10], rax
0x400186:	jb	0x40015f
<Block for 0x400188, 13 bytes>
0x400188:	mov	rax, qword ptr [rbp - 8]
0x40018c:	mov	eax, dword ptr [rax]
0x40018e:	mov	edi, eax
0x400190:	call	0x500018
<Block for 0x400195, 12 bytes>
0x400195:	mov	rax, qword ptr [rbp - 8]
0x400199:	mov	rdi, rax
0x40019c:	call	0x500020
<Block for 0x4001a1, 3 bytes>
0x4001a1:	nop	
0x4001a2:	leave	
0x4001a3:	ret	
