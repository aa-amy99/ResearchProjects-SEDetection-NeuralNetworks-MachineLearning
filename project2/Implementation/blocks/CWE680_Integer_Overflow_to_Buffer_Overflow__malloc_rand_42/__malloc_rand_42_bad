<Block for 0x400063, 29 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x20
0x40006f:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400076:	mov	eax, dword ptr [rbp - 0x14]
0x400079:	mov	edi, eax
0x40007b:	call	0x400000
<Block for 0x400080, 20 bytes>
0x400080:	mov	dword ptr [rbp - 0x14], eax
0x400083:	mov	eax, dword ptr [rbp - 0x14]
0x400086:	cdqe	
0x400088:	shl	rax, 2
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500008
<Block for 0x400094, 11 bytes>
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	cmp	qword ptr [rbp - 8], 0
0x40009d:	jne	0x4000a9
<Block for 0x40009f, 10 bytes>
0x40009f:	mov	edi, 0xffffffff
0x4000a4:	call	0x500010
<Block for 0x4000a9, 10 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x10], 0
0x4000b1:	jmp	0x4000d1
<Block for 0x4000d1, 11 bytes>
0x4000d1:	mov	eax, dword ptr [rbp - 0x14]
0x4000d4:	cdqe	
0x4000d6:	cmp	qword ptr [rbp - 0x10], rax
0x4000da:	jb	0x4000b3
<Block for 0x4000b3, 41 bytes>
0x4000b3:	mov	rax, qword ptr [rbp - 0x10]
0x4000b7:	lea	rdx, [rax*4]
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	add	rax, rdx
0x4000c6:	mov	dword ptr [rax], 0
0x4000cc:	add	qword ptr [rbp - 0x10], 1
0x4000d1:	mov	eax, dword ptr [rbp - 0x14]
0x4000d4:	cdqe	
0x4000d6:	cmp	qword ptr [rbp - 0x10], rax
0x4000da:	jb	0x4000b3
<Block for 0x4000dc, 13 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	mov	eax, dword ptr [rax]
0x4000e2:	mov	edi, eax
0x4000e4:	call	0x500018
<Block for 0x4000e9, 12 bytes>
0x4000e9:	mov	rax, qword ptr [rbp - 8]
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500020
<Block for 0x4000f5, 3 bytes>
0x4000f5:	nop	
0x4000f6:	leave	
0x4000f7:	ret	
