<Block for 0x400457, 84 bytes>
0x400457:	endbr64	
0x40045b:	push	rbp
0x40045c:	mov	rbp, rsp
0x40045f:	sub	rsp, 0xa0
0x400466:	mov	rax, qword ptr fs:[0x28]
0x40046f:	mov	qword ptr [rbp - 8], rax
0x400473:	xor	eax, eax
0x400475:	mov	eax, 0x10
0x40047a:	sub	rax, 1
0x40047e:	add	rax, 0x3a
0x400482:	mov	ecx, 0x10
0x400487:	mov	edx, 0
0x40048c:	div	rcx
0x40048f:	imul	rax, rax, 0x10
0x400493:	mov	rdx, rax
0x400496:	and	rdx, 0xfffffffffffff000
0x40049d:	mov	rcx, rsp
0x4004a0:	sub	rcx, rdx
0x4004a3:	mov	rdx, rcx
0x4004a6:	cmp	rsp, rdx
0x4004a9:	je	0x4004bd
<Block for 0x4004bd, 26 bytes>
0x4004bd:	mov	rdx, rax
0x4004c0:	and	edx, 0xfff
0x4004c6:	sub	rsp, rdx
0x4004c9:	mov	rdx, rax
0x4004cc:	and	edx, 0xfff
0x4004d2:	test	rdx, rdx
0x4004d5:	je	0x4004e7
<Block for 0x4004ab, 18 bytes>
0x4004ab:	sub	rsp, 0x1000
0x4004b2:	or	qword ptr [rsp + 0xff8], 0
0x4004bb:	jmp	0x4004a6
<Block for 0x4004e7, 76 bytes>
0x4004e7:	mov	rax, rsp
0x4004ea:	add	rax, 0xf
0x4004ee:	shr	rax, 4
0x4004f2:	shl	rax, 4
0x4004f6:	mov	qword ptr [rbp - 0x88], rax
0x4004fd:	mov	eax, 0x10
0x400502:	sub	rax, 1
0x400506:	add	rax, 0x6c
0x40050a:	mov	edi, 0x10
0x40050f:	mov	edx, 0
0x400514:	div	rdi
0x400517:	imul	rax, rax, 0x10
0x40051b:	mov	rdx, rax
0x40051e:	and	rdx, 0xfffffffffffff000
0x400525:	mov	rsi, rsp
0x400528:	sub	rsi, rdx
0x40052b:	mov	rdx, rsi
0x40052e:	cmp	rsp, rdx
0x400531:	je	0x400545
<Block for 0x4004d7, 92 bytes>
0x4004d7:	and	eax, 0xfff
0x4004dc:	sub	rax, 8
0x4004e0:	add	rax, rsp
0x4004e3:	or	qword ptr [rax], 0
0x4004e7:	mov	rax, rsp
0x4004ea:	add	rax, 0xf
0x4004ee:	shr	rax, 4
0x4004f2:	shl	rax, 4
0x4004f6:	mov	qword ptr [rbp - 0x88], rax
0x4004fd:	mov	eax, 0x10
0x400502:	sub	rax, 1
0x400506:	add	rax, 0x6c
0x40050a:	mov	edi, 0x10
0x40050f:	mov	edx, 0
0x400514:	div	rdi
0x400517:	imul	rax, rax, 0x10
0x40051b:	mov	rdx, rax
0x40051e:	and	rdx, 0xfffffffffffff000
0x400525:	mov	rsi, rsp
0x400528:	sub	rsi, rdx
0x40052b:	mov	rdx, rsi
0x40052e:	cmp	rsp, rdx
0x400531:	je	0x400545
<Block for 0x4004a6, 5 bytes>
0x4004a6:	cmp	rsp, rdx
0x4004a9:	je	0x4004bd
<Block for 0x400545, 26 bytes>
0x400545:	mov	rdx, rax
0x400548:	and	edx, 0xfff
0x40054e:	sub	rsp, rdx
0x400551:	mov	rdx, rax
0x400554:	and	edx, 0xfff
0x40055a:	test	rdx, rdx
0x40055d:	je	0x40056f
<Block for 0x400533, 18 bytes>
0x400533:	sub	rsp, 0x1000
0x40053a:	or	qword ptr [rsp + 0xff8], 0
0x400543:	jmp	0x40052e
<Block for 0x40056f, 44 bytes>
0x40056f:	mov	rax, rsp
0x400572:	add	rax, 0xf
0x400576:	shr	rax, 4
0x40057a:	shl	rax, 4
0x40057e:	mov	qword ptr [rbp - 0x80], rax
0x400582:	mov	rax, qword ptr [rbp - 0x88]
0x400589:	mov	edx, 0x31
0x40058e:	mov	esi, 0x41
0x400593:	mov	rdi, rax
0x400596:	call	0x500000
<Block for 0x40055f, 60 bytes>
0x40055f:	and	eax, 0xfff
0x400564:	sub	rax, 8
0x400568:	add	rax, rsp
0x40056b:	or	qword ptr [rax], 0
0x40056f:	mov	rax, rsp
0x400572:	add	rax, 0xf
0x400576:	shr	rax, 4
0x40057a:	shl	rax, 4
0x40057e:	mov	qword ptr [rbp - 0x80], rax
0x400582:	mov	rax, qword ptr [rbp - 0x88]
0x400589:	mov	edx, 0x31
0x40058e:	mov	esi, 0x41
0x400593:	mov	rdi, rax
0x400596:	call	0x500000
<Block for 0x40052e, 5 bytes>
0x40052e:	cmp	rsp, rdx
0x400531:	je	0x400545
<Block for 0x40059b, 36 bytes>
0x40059b:	mov	rax, qword ptr [rbp - 0x88]
0x4005a2:	add	rax, 0x31
0x4005a6:	mov	byte ptr [rax], 0
0x4005a9:	mov	rax, qword ptr [rbp - 0x80]
0x4005ad:	mov	edx, 0x63
0x4005b2:	mov	esi, 0x41
0x4005b7:	mov	rdi, rax
0x4005ba:	call	0x500000
<Block for 0x4005bf, 21 bytes>
0x4005bf:	mov	rax, qword ptr [rbp - 0x80]
0x4005c3:	add	rax, 0x63
0x4005c7:	mov	byte ptr [rax], 0
0x4005ca:	mov	eax, 0
0x4005cf:	call	0x500008
<Block for 0x4005d4, 4 bytes>
0x4005d4:	test	eax, eax
0x4005d6:	je	0x4005e3
<Block for 0x4005e3, 22 bytes>
0x4005e3:	lea	rax, [rbp - 0x70]
0x4005e7:	mov	edx, 0x63
0x4005ec:	mov	esi, 0x43
0x4005f1:	mov	rdi, rax
0x4005f4:	call	0x500000
<Block for 0x4005d8, 33 bytes>
0x4005d8:	mov	rax, qword ptr [rbp - 0x80]
0x4005dc:	mov	qword ptr [rbp - 0x98], rax
0x4005e3:	lea	rax, [rbp - 0x70]
0x4005e7:	mov	edx, 0x63
0x4005ec:	mov	esi, 0x43
0x4005f1:	mov	rdi, rax
0x4005f4:	call	0x500000
<Block for 0x4005f9, 16 bytes>
0x4005f9:	mov	byte ptr [rbp - 0xd], 0
0x4005fd:	lea	rax, [rbp - 0x70]
0x400601:	mov	rdi, rax
0x400604:	call	0x500010
<Block for 0x400609, 17 bytes>
0x400609:	mov	qword ptr [rbp - 0x78], rax
0x40060d:	mov	qword ptr [rbp - 0x90], 0
0x400618:	jmp	0x400646
<Block for 0x400646, 13 bytes>
0x400646:	mov	rax, qword ptr [rbp - 0x90]
0x40064d:	cmp	rax, qword ptr [rbp - 0x78]
0x400651:	jb	0x40061a
<Block for 0x40061a, 57 bytes>
0x40061a:	mov	rdx, qword ptr [rbp - 0x98]
0x400621:	mov	rax, qword ptr [rbp - 0x90]
0x400628:	add	rax, rdx
0x40062b:	movzx	eax, byte ptr [rax]
0x40062e:	lea	rcx, [rbp - 0x70]
0x400632:	mov	rdx, qword ptr [rbp - 0x90]
0x400639:	add	rdx, rcx
0x40063c:	mov	byte ptr [rdx], al
0x40063e:	add	qword ptr [rbp - 0x90], 1
0x400646:	mov	rax, qword ptr [rbp - 0x90]
0x40064d:	cmp	rax, qword ptr [rbp - 0x78]
0x400651:	jb	0x40061a
<Block for 0x400653, 16 bytes>
0x400653:	mov	byte ptr [rbp - 0xd], 0
0x400657:	lea	rax, [rbp - 0x70]
0x40065b:	mov	rdi, rax
0x40065e:	call	0x500018
<Block for 0x400663, 16 bytes>
0x400663:	nop	
0x400664:	mov	rax, qword ptr [rbp - 8]
0x400668:	xor	rax, qword ptr fs:[0x28]
0x400671:	je	0x400678
<Block for 0x400678, 2 bytes>
0x400678:	leave	
0x400679:	ret	
<Block for 0x400673, 5 bytes>
0x400673:	call	0x500020
