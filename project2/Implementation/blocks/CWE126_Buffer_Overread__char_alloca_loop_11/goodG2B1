<Block for 0x400226, 84 bytes>
0x400226:	endbr64	
0x40022a:	push	rbp
0x40022b:	mov	rbp, rsp
0x40022e:	sub	rsp, 0xa0
0x400235:	mov	rax, qword ptr fs:[0x28]
0x40023e:	mov	qword ptr [rbp - 8], rax
0x400242:	xor	eax, eax
0x400244:	mov	eax, 0x10
0x400249:	sub	rax, 1
0x40024d:	add	rax, 0x3a
0x400251:	mov	ecx, 0x10
0x400256:	mov	edx, 0
0x40025b:	div	rcx
0x40025e:	imul	rax, rax, 0x10
0x400262:	mov	rdx, rax
0x400265:	and	rdx, 0xfffffffffffff000
0x40026c:	mov	rcx, rsp
0x40026f:	sub	rcx, rdx
0x400272:	mov	rdx, rcx
0x400275:	cmp	rsp, rdx
0x400278:	je	0x40028c
<Block for 0x40028c, 26 bytes>
0x40028c:	mov	rdx, rax
0x40028f:	and	edx, 0xfff
0x400295:	sub	rsp, rdx
0x400298:	mov	rdx, rax
0x40029b:	and	edx, 0xfff
0x4002a1:	test	rdx, rdx
0x4002a4:	je	0x4002b6
<Block for 0x40027a, 18 bytes>
0x40027a:	sub	rsp, 0x1000
0x400281:	or	qword ptr [rsp + 0xff8], 0
0x40028a:	jmp	0x400275
<Block for 0x4002b6, 76 bytes>
0x4002b6:	mov	rax, rsp
0x4002b9:	add	rax, 0xf
0x4002bd:	shr	rax, 4
0x4002c1:	shl	rax, 4
0x4002c5:	mov	qword ptr [rbp - 0x88], rax
0x4002cc:	mov	eax, 0x10
0x4002d1:	sub	rax, 1
0x4002d5:	add	rax, 0x6c
0x4002d9:	mov	esi, 0x10
0x4002de:	mov	edx, 0
0x4002e3:	div	rsi
0x4002e6:	imul	rax, rax, 0x10
0x4002ea:	mov	rdx, rax
0x4002ed:	and	rdx, 0xfffffffffffff000
0x4002f4:	mov	rsi, rsp
0x4002f7:	sub	rsi, rdx
0x4002fa:	mov	rdx, rsi
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x4002a6, 92 bytes>
0x4002a6:	and	eax, 0xfff
0x4002ab:	sub	rax, 8
0x4002af:	add	rax, rsp
0x4002b2:	or	qword ptr [rax], 0
0x4002b6:	mov	rax, rsp
0x4002b9:	add	rax, 0xf
0x4002bd:	shr	rax, 4
0x4002c1:	shl	rax, 4
0x4002c5:	mov	qword ptr [rbp - 0x88], rax
0x4002cc:	mov	eax, 0x10
0x4002d1:	sub	rax, 1
0x4002d5:	add	rax, 0x6c
0x4002d9:	mov	esi, 0x10
0x4002de:	mov	edx, 0
0x4002e3:	div	rsi
0x4002e6:	imul	rax, rax, 0x10
0x4002ea:	mov	rdx, rax
0x4002ed:	and	rdx, 0xfffffffffffff000
0x4002f4:	mov	rsi, rsp
0x4002f7:	sub	rsi, rdx
0x4002fa:	mov	rdx, rsi
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x400275, 5 bytes>
0x400275:	cmp	rsp, rdx
0x400278:	je	0x40028c
<Block for 0x400314, 26 bytes>
0x400314:	mov	rdx, rax
0x400317:	and	edx, 0xfff
0x40031d:	sub	rsp, rdx
0x400320:	mov	rdx, rax
0x400323:	and	edx, 0xfff
0x400329:	test	rdx, rdx
0x40032c:	je	0x40033e
<Block for 0x400302, 18 bytes>
0x400302:	sub	rsp, 0x1000
0x400309:	or	qword ptr [rsp + 0xff8], 0
0x400312:	jmp	0x4002fd
<Block for 0x40033e, 44 bytes>
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x80], rax
0x400351:	mov	rax, qword ptr [rbp - 0x88]
0x400358:	mov	edx, 0x31
0x40035d:	mov	esi, 0x41
0x400362:	mov	rdi, rax
0x400365:	call	0x500000
<Block for 0x40032e, 60 bytes>
0x40032e:	and	eax, 0xfff
0x400333:	sub	rax, 8
0x400337:	add	rax, rsp
0x40033a:	or	qword ptr [rax], 0
0x40033e:	mov	rax, rsp
0x400341:	add	rax, 0xf
0x400345:	shr	rax, 4
0x400349:	shl	rax, 4
0x40034d:	mov	qword ptr [rbp - 0x80], rax
0x400351:	mov	rax, qword ptr [rbp - 0x88]
0x400358:	mov	edx, 0x31
0x40035d:	mov	esi, 0x41
0x400362:	mov	rdi, rax
0x400365:	call	0x500000
<Block for 0x4002fd, 5 bytes>
0x4002fd:	cmp	rsp, rdx
0x400300:	je	0x400314
<Block for 0x40036a, 36 bytes>
0x40036a:	mov	rax, qword ptr [rbp - 0x88]
0x400371:	add	rax, 0x31
0x400375:	mov	byte ptr [rax], 0
0x400378:	mov	rax, qword ptr [rbp - 0x80]
0x40037c:	mov	edx, 0x63
0x400381:	mov	esi, 0x41
0x400386:	mov	rdi, rax
0x400389:	call	0x500000
<Block for 0x40038e, 21 bytes>
0x40038e:	mov	rax, qword ptr [rbp - 0x80]
0x400392:	add	rax, 0x63
0x400396:	mov	byte ptr [rax], 0
0x400399:	mov	eax, 0
0x40039e:	call	0x500028
<Block for 0x4003a3, 4 bytes>
0x4003a3:	test	eax, eax
0x4003a5:	je	0x4003b5
<Block for 0x4003b5, 33 bytes>
0x4003b5:	mov	rax, qword ptr [rbp - 0x80]
0x4003b9:	mov	qword ptr [rbp - 0x98], rax
0x4003c0:	lea	rax, [rbp - 0x70]
0x4003c4:	mov	edx, 0x63
0x4003c9:	mov	esi, 0x43
0x4003ce:	mov	rdi, rax
0x4003d1:	call	0x500000
<Block for 0x4003a7, 12 bytes>
0x4003a7:	lea	rdi, [rip + 0x2eb]
0x4003ae:	call	0x500018
<Block for 0x4003d6, 16 bytes>
0x4003d6:	mov	byte ptr [rbp - 0xd], 0
0x4003da:	lea	rax, [rbp - 0x70]
0x4003de:	mov	rdi, rax
0x4003e1:	call	0x500010
<Block for 0x4003b3, 2 bytes>
0x4003b3:	jmp	0x4003c0
<Block for 0x4003e6, 17 bytes>
0x4003e6:	mov	qword ptr [rbp - 0x78], rax
0x4003ea:	mov	qword ptr [rbp - 0x90], 0
0x4003f5:	jmp	0x400423
<Block for 0x4003c0, 22 bytes>
0x4003c0:	lea	rax, [rbp - 0x70]
0x4003c4:	mov	edx, 0x63
0x4003c9:	mov	esi, 0x43
0x4003ce:	mov	rdi, rax
0x4003d1:	call	0x500000
<Block for 0x400423, 13 bytes>
0x400423:	mov	rax, qword ptr [rbp - 0x90]
0x40042a:	cmp	rax, qword ptr [rbp - 0x78]
0x40042e:	jb	0x4003f7
<Block for 0x4003f7, 57 bytes>
0x4003f7:	mov	rdx, qword ptr [rbp - 0x98]
0x4003fe:	mov	rax, qword ptr [rbp - 0x90]
0x400405:	add	rax, rdx
0x400408:	movzx	eax, byte ptr [rax]
0x40040b:	lea	rcx, [rbp - 0x70]
0x40040f:	mov	rdx, qword ptr [rbp - 0x90]
0x400416:	add	rdx, rcx
0x400419:	mov	byte ptr [rdx], al
0x40041b:	add	qword ptr [rbp - 0x90], 1
0x400423:	mov	rax, qword ptr [rbp - 0x90]
0x40042a:	cmp	rax, qword ptr [rbp - 0x78]
0x40042e:	jb	0x4003f7
<Block for 0x400430, 16 bytes>
0x400430:	mov	byte ptr [rbp - 0xd], 0
0x400434:	lea	rax, [rbp - 0x70]
0x400438:	mov	rdi, rax
0x40043b:	call	0x500018
<Block for 0x400440, 16 bytes>
0x400440:	nop	
0x400441:	mov	rax, qword ptr [rbp - 8]
0x400445:	xor	rax, qword ptr fs:[0x28]
0x40044e:	je	0x400455
<Block for 0x400455, 2 bytes>
0x400455:	leave	
0x400456:	ret	
<Block for 0x400450, 5 bytes>
0x400450:	call	0x500020
