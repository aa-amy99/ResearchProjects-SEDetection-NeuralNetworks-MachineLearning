<Block for 0x40006c, 39 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x10
0x400078:	mov	qword ptr [rbp - 8], 0
0x400080:	lea	rsi, [rip + 0x79]
0x400087:	lea	rdi, [rip + 0x75]
0x40008e:	call	0x500000
<Block for 0x400093, 13 bytes>
0x400093:	mov	qword ptr [rbp - 8], rax
0x400097:	mov	dword ptr [rbp - 0xc], 0
0x40009e:	jmp	0x4000e1
<Block for 0x4000e1, 6 bytes>
0x4000e1:	cmp	dword ptr [rbp - 0xc], 0
0x4000e5:	jle	0x4000a0
<Block for 0x4000a0, 7 bytes>
0x4000a0:	cmp	qword ptr [rbp - 8], 0
0x4000a5:	je	0x4000b3
<Block for 0x4000e7, 4 bytes>
0x4000e7:	nop	
0x4000e8:	nop	
0x4000e9:	leave	
0x4000ea:	ret	
<Block for 0x4000b3, 19 bytes>
0x4000b3:	lea	rsi, [rip + 0x46]
0x4000ba:	lea	rdi, [rip + 0x68]
0x4000c1:	call	0x500000
<Block for 0x4000a7, 12 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500008
<Block for 0x4000c6, 11 bytes>
0x4000c6:	mov	qword ptr [rbp - 8], rax
0x4000ca:	cmp	qword ptr [rbp - 8], 0
0x4000cf:	je	0x4000dd
<Block for 0x4000dd, 10 bytes>
0x4000dd:	add	dword ptr [rbp - 0xc], 1
0x4000e1:	cmp	dword ptr [rbp - 0xc], 0
0x4000e5:	jle	0x4000a0
<Block for 0x4000d1, 12 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 8]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500008
