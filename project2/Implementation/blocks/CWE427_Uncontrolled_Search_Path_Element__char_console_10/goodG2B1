<Block for 0x40017a, 82 bytes>
0x40017a:	endbr64	
0x40017e:	push	rbp
0x40017f:	mov	rbp, rsp
0x400182:	sub	rsp, 0x120
0x400189:	mov	rax, qword ptr fs:[0x28]
0x400192:	mov	qword ptr [rbp - 8], rax
0x400196:	xor	eax, eax
0x400198:	movabs	rax, 0x3d48544150
0x4001a2:	mov	edx, 0
0x4001a7:	mov	qword ptr [rbp - 0x110], rax
0x4001ae:	mov	qword ptr [rbp - 0x108], rdx
0x4001b5:	lea	rdx, [rbp - 0x100]
0x4001bc:	mov	eax, 0
0x4001c1:	mov	ecx, 0x1d
0x4001c6:	mov	rdi, rdx
0x4001c9:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001cc, 34 bytes>
0x4001cc:	mov	rdx, rdi
0x4001cf:	mov	word ptr [rdx], ax
0x4001d2:	add	rdx, 2
0x4001d6:	lea	rax, [rbp - 0x110]
0x4001dd:	mov	qword ptr [rbp - 0x118], rax
0x4001e4:	mov	eax, dword ptr [rip + 0xffe4e]
0x4001ea:	test	eax, eax
0x4001ec:	je	0x4001fc
<Block for 0x4001c9, 3 bytes>
0x4001c9:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001fc, 27 bytes>
0x4001fc:	mov	rax, qword ptr [rbp - 0x118]
0x400203:	mov	rcx, -1
0x40020a:	mov	rdx, rax
0x40020d:	mov	eax, 0
0x400212:	mov	rdi, rdx
0x400215:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001ee, 12 bytes>
0x4001ee:	lea	rdi, [rip + 0x167]
0x4001f5:	call	0x500020
<Block for 0x400217, 45 bytes>
0x400217:	mov	rax, rcx
0x40021a:	not	rax
0x40021d:	lea	rdx, [rax - 1]
0x400221:	mov	rax, qword ptr [rbp - 0x118]
0x400228:	add	rax, rdx
0x40022b:	mov	dword ptr [rax], 0x6e69622f
0x400231:	mov	byte ptr [rax + 4], 0
0x400235:	mov	rax, qword ptr [rbp - 0x118]
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500028
<Block for 0x400215, 2 bytes>
0x400215:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001fa, 2 bytes>
0x4001fa:	jmp	0x400235
<Block for 0x400244, 16 bytes>
0x400244:	nop	
0x400245:	mov	rax, qword ptr [rbp - 8]
0x400249:	xor	rax, qword ptr fs:[0x28]
0x400252:	je	0x400259
<Block for 0x400235, 15 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x118]
0x40023c:	mov	rdi, rax
0x40023f:	call	0x500028
<Block for 0x400259, 2 bytes>
0x400259:	leave	
0x40025a:	ret	
<Block for 0x400254, 5 bytes>
0x400254:	call	0x500030
