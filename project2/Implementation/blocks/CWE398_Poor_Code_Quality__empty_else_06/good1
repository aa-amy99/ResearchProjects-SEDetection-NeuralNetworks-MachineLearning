<Block for 0x40006d, 22 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x10
0x400079:	mov	eax, 5
0x40007e:	cmp	eax, 5
0x400081:	je	0x400091
<Block for 0x400091, 5 bytes>
0x400091:	call	0x500000
<Block for 0x400083, 12 bytes>
0x400083:	lea	rdi, [rip + 0x135]
0x40008a:	call	0x500008
<Block for 0x400096, 55 bytes>
0x400096:	mov	edx, eax
0x400098:	movsxd	rax, edx
0x40009b:	imul	rax, rax, 0x55555556
0x4000a2:	shr	rax, 0x20
0x4000a6:	mov	rcx, rax
0x4000a9:	mov	eax, edx
0x4000ab:	sar	eax, 0x1f
0x4000ae:	mov	esi, ecx
0x4000b0:	sub	esi, eax
0x4000b2:	mov	eax, esi
0x4000b4:	mov	dword ptr [rbp - 4], eax
0x4000b7:	mov	ecx, dword ptr [rbp - 4]
0x4000ba:	mov	eax, ecx
0x4000bc:	add	eax, eax
0x4000be:	add	eax, ecx
0x4000c0:	sub	edx, eax
0x4000c2:	mov	eax, edx
0x4000c4:	mov	dword ptr [rbp - 4], eax
0x4000c7:	cmp	dword ptr [rbp - 4], 0
0x4000cb:	jne	0x4000db
<Block for 0x40008f, 2 bytes>
0x40008f:	jmp	0x4000f3
<Block for 0x4000cd, 12 bytes>
0x4000cd:	lea	rdi, [rip + 0x100]
0x4000d4:	call	0x500008
<Block for 0x4000db, 12 bytes>
0x4000db:	lea	rdi, [rip + 0xb2]
0x4000e2:	call	0x500008
<Block for 0x4000f3, 3 bytes>
0x4000f3:	nop	
0x4000f4:	leave	
0x4000f5:	ret	
<Block for 0x4000d9, 2 bytes>
0x4000d9:	jmp	0x4000e7
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rdi, [rip + 0xfe]
0x4000ee:	call	0x500008
