<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	mov	eax, 0
0x40002f:	call	0x500000
<Block for 0x400034, 4 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x400096
<Block for 0x400096, 22 bytes>
0x400096:	lea	rax, [rbp - 0x80]
0x40009a:	mov	edx, 0x63
0x40009f:	mov	esi, 0x43
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500018
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0x64
0x40003d:	call	0x500008
<Block for 0x4000ac, 128 bytes>
0x4000ac:	mov	byte ptr [rbp - 0x1d], 0
0x4000b0:	mov	rax, qword ptr [rbp - 0x90]
0x4000b7:	mov	rcx, qword ptr [rax]
0x4000ba:	mov	rbx, qword ptr [rax + 8]
0x4000be:	mov	qword ptr [rbp - 0x80], rcx
0x4000c2:	mov	qword ptr [rbp - 0x78], rbx
0x4000c6:	mov	rcx, qword ptr [rax + 0x10]
0x4000ca:	mov	rbx, qword ptr [rax + 0x18]
0x4000ce:	mov	qword ptr [rbp - 0x70], rcx
0x4000d2:	mov	qword ptr [rbp - 0x68], rbx
0x4000d6:	mov	rcx, qword ptr [rax + 0x20]
0x4000da:	mov	rbx, qword ptr [rax + 0x28]
0x4000de:	mov	qword ptr [rbp - 0x60], rcx
0x4000e2:	mov	qword ptr [rbp - 0x58], rbx
0x4000e6:	mov	rcx, qword ptr [rax + 0x30]
0x4000ea:	mov	rbx, qword ptr [rax + 0x38]
0x4000ee:	mov	qword ptr [rbp - 0x50], rcx
0x4000f2:	mov	qword ptr [rbp - 0x48], rbx
0x4000f6:	mov	rcx, qword ptr [rax + 0x40]
0x4000fa:	mov	rbx, qword ptr [rax + 0x48]
0x4000fe:	mov	qword ptr [rbp - 0x40], rcx
0x400102:	mov	qword ptr [rbp - 0x38], rbx
0x400106:	mov	rcx, qword ptr [rax + 0x50]
0x40010a:	mov	rbx, qword ptr [rax + 0x58]
0x40010e:	mov	qword ptr [rbp - 0x30], rcx
0x400112:	mov	qword ptr [rbp - 0x28], rbx
0x400116:	mov	eax, dword ptr [rax + 0x60]
0x400119:	mov	dword ptr [rbp - 0x20], eax
0x40011c:	mov	byte ptr [rbp - 0x1d], 0
0x400120:	lea	rax, [rbp - 0x80]
0x400124:	mov	rdi, rax
0x400127:	call	0x500020
<Block for 0x400042, 17 bytes>
0x400042:	mov	qword ptr [rbp - 0x88], rax
0x400049:	cmp	qword ptr [rbp - 0x88], 0
0x400051:	jne	0x40005d
<Block for 0x40012c, 16 bytes>
0x40012c:	nop	
0x40012d:	mov	rax, qword ptr [rbp - 0x18]
0x400131:	xor	rax, qword ptr fs:[0x28]
0x40013a:	je	0x400141
<Block for 0x400053, 10 bytes>
0x400053:	mov	edi, 0xffffffff
0x400058:	call	0x500010
<Block for 0x40005d, 25 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0x88]
0x400064:	mov	edx, 0x63
0x400069:	mov	esi, 0x41
0x40006e:	mov	rdi, rax
0x400071:	call	0x500018
<Block for 0x400141, 10 bytes>
0x400141:	add	rsp, 0x88
0x400148:	pop	rbx
0x400149:	pop	rbp
0x40014a:	ret	
<Block for 0x40013c, 5 bytes>
0x40013c:	call	0x500028
<Block for 0x400076, 54 bytes>
0x400076:	mov	rax, qword ptr [rbp - 0x88]
0x40007d:	add	rax, 0x63
0x400081:	mov	byte ptr [rax], 0
0x400084:	mov	rax, qword ptr [rbp - 0x88]
0x40008b:	sub	rax, 8
0x40008f:	mov	qword ptr [rbp - 0x90], rax
0x400096:	lea	rax, [rbp - 0x80]
0x40009a:	mov	edx, 0x63
0x40009f:	mov	esi, 0x43
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500018
