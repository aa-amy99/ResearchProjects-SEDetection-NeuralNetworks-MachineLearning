<Block for 0x4002a0, 52 bytes>
0x4002a0:	endbr64	
0x4002a4:	push	rbp
0x4002a5:	mov	rbp, rsp
0x4002a8:	push	rbx
0x4002a9:	sub	rsp, 0x88
0x4002b0:	mov	rax, qword ptr fs:[0x28]
0x4002b9:	mov	qword ptr [rbp - 0x18], rax
0x4002bd:	xor	eax, eax
0x4002bf:	mov	qword ptr [rbp - 0x90], 0
0x4002ca:	mov	eax, 0
0x4002cf:	call	0x500000
<Block for 0x4002d4, 4 bytes>
0x4002d4:	test	eax, eax
0x4002d6:	je	0x400332
<Block for 0x400332, 22 bytes>
0x400332:	lea	rax, [rbp - 0x80]
0x400336:	mov	edx, 0x63
0x40033b:	mov	esi, 0x43
0x400340:	mov	rdi, rax
0x400343:	call	0x500018
<Block for 0x4002d8, 10 bytes>
0x4002d8:	mov	edi, 0x64
0x4002dd:	call	0x500008
<Block for 0x400348, 128 bytes>
0x400348:	mov	byte ptr [rbp - 0x1d], 0
0x40034c:	mov	rax, qword ptr [rbp - 0x90]
0x400353:	mov	rcx, qword ptr [rax]
0x400356:	mov	rbx, qword ptr [rax + 8]
0x40035a:	mov	qword ptr [rbp - 0x80], rcx
0x40035e:	mov	qword ptr [rbp - 0x78], rbx
0x400362:	mov	rcx, qword ptr [rax + 0x10]
0x400366:	mov	rbx, qword ptr [rax + 0x18]
0x40036a:	mov	qword ptr [rbp - 0x70], rcx
0x40036e:	mov	qword ptr [rbp - 0x68], rbx
0x400372:	mov	rcx, qword ptr [rax + 0x20]
0x400376:	mov	rbx, qword ptr [rax + 0x28]
0x40037a:	mov	qword ptr [rbp - 0x60], rcx
0x40037e:	mov	qword ptr [rbp - 0x58], rbx
0x400382:	mov	rcx, qword ptr [rax + 0x30]
0x400386:	mov	rbx, qword ptr [rax + 0x38]
0x40038a:	mov	qword ptr [rbp - 0x50], rcx
0x40038e:	mov	qword ptr [rbp - 0x48], rbx
0x400392:	mov	rcx, qword ptr [rax + 0x40]
0x400396:	mov	rbx, qword ptr [rax + 0x48]
0x40039a:	mov	qword ptr [rbp - 0x40], rcx
0x40039e:	mov	qword ptr [rbp - 0x38], rbx
0x4003a2:	mov	rcx, qword ptr [rax + 0x50]
0x4003a6:	mov	rbx, qword ptr [rax + 0x58]
0x4003aa:	mov	qword ptr [rbp - 0x30], rcx
0x4003ae:	mov	qword ptr [rbp - 0x28], rbx
0x4003b2:	mov	eax, dword ptr [rax + 0x60]
0x4003b5:	mov	dword ptr [rbp - 0x20], eax
0x4003b8:	mov	byte ptr [rbp - 0x1d], 0
0x4003bc:	lea	rax, [rbp - 0x80]
0x4003c0:	mov	rdi, rax
0x4003c3:	call	0x500020
<Block for 0x4002e2, 17 bytes>
0x4002e2:	mov	qword ptr [rbp - 0x88], rax
0x4002e9:	cmp	qword ptr [rbp - 0x88], 0
0x4002f1:	jne	0x4002fd
<Block for 0x4003c8, 16 bytes>
0x4003c8:	nop	
0x4003c9:	mov	rax, qword ptr [rbp - 0x18]
0x4003cd:	xor	rax, qword ptr fs:[0x28]
0x4003d6:	je	0x4003dd
<Block for 0x4002f3, 10 bytes>
0x4002f3:	mov	edi, 0xffffffff
0x4002f8:	call	0x500010
<Block for 0x4002fd, 25 bytes>
0x4002fd:	mov	rax, qword ptr [rbp - 0x88]
0x400304:	mov	edx, 0x63
0x400309:	mov	esi, 0x41
0x40030e:	mov	rdi, rax
0x400311:	call	0x500018
<Block for 0x4003dd, 10 bytes>
0x4003dd:	add	rsp, 0x88
0x4003e4:	pop	rbx
0x4003e5:	pop	rbp
0x4003e6:	ret	
<Block for 0x4003d8, 5 bytes>
0x4003d8:	call	0x500028
<Block for 0x400316, 50 bytes>
0x400316:	mov	rax, qword ptr [rbp - 0x88]
0x40031d:	add	rax, 0x63
0x400321:	mov	byte ptr [rax], 0
0x400324:	mov	rax, qword ptr [rbp - 0x88]
0x40032b:	mov	qword ptr [rbp - 0x90], rax
0x400332:	lea	rax, [rbp - 0x80]
0x400336:	mov	edx, 0x63
0x40033b:	mov	esi, 0x43
0x400340:	mov	rdi, rax
0x400343:	call	0x500018
