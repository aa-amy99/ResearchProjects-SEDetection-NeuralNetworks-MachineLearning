<Block for 0x40014b, 52 bytes>
0x40014b:	endbr64	
0x40014f:	push	rbp
0x400150:	mov	rbp, rsp
0x400153:	push	rbx
0x400154:	sub	rsp, 0x88
0x40015b:	mov	rax, qword ptr fs:[0x28]
0x400164:	mov	qword ptr [rbp - 0x18], rax
0x400168:	xor	eax, eax
0x40016a:	mov	qword ptr [rbp - 0x90], 0
0x400175:	mov	eax, 0
0x40017a:	call	0x500030
<Block for 0x40017f, 4 bytes>
0x40017f:	test	eax, eax
0x400181:	je	0x400191
<Block for 0x400191, 10 bytes>
0x400191:	mov	edi, 0x64
0x400196:	call	0x500008
<Block for 0x400183, 12 bytes>
0x400183:	lea	rdi, [rip + 0x27c]
0x40018a:	call	0x500020
<Block for 0x40019b, 17 bytes>
0x40019b:	mov	qword ptr [rbp - 0x88], rax
0x4001a2:	cmp	qword ptr [rbp - 0x88], 0
0x4001aa:	jne	0x4001b6
<Block for 0x40018f, 2 bytes>
0x40018f:	jmp	0x4001eb
<Block for 0x4001ac, 10 bytes>
0x4001ac:	mov	edi, 0xffffffff
0x4001b1:	call	0x500010
<Block for 0x4001b6, 25 bytes>
0x4001b6:	mov	rax, qword ptr [rbp - 0x88]
0x4001bd:	mov	edx, 0x63
0x4001c2:	mov	esi, 0x41
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x500018
<Block for 0x4001eb, 22 bytes>
0x4001eb:	lea	rax, [rbp - 0x80]
0x4001ef:	mov	edx, 0x63
0x4001f4:	mov	esi, 0x43
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500018
<Block for 0x4001cf, 50 bytes>
0x4001cf:	mov	rax, qword ptr [rbp - 0x88]
0x4001d6:	add	rax, 0x63
0x4001da:	mov	byte ptr [rax], 0
0x4001dd:	mov	rax, qword ptr [rbp - 0x88]
0x4001e4:	mov	qword ptr [rbp - 0x90], rax
0x4001eb:	lea	rax, [rbp - 0x80]
0x4001ef:	mov	edx, 0x63
0x4001f4:	mov	esi, 0x43
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500018
<Block for 0x400201, 128 bytes>
0x400201:	mov	byte ptr [rbp - 0x1d], 0
0x400205:	mov	rax, qword ptr [rbp - 0x90]
0x40020c:	mov	rcx, qword ptr [rax]
0x40020f:	mov	rbx, qword ptr [rax + 8]
0x400213:	mov	qword ptr [rbp - 0x80], rcx
0x400217:	mov	qword ptr [rbp - 0x78], rbx
0x40021b:	mov	rcx, qword ptr [rax + 0x10]
0x40021f:	mov	rbx, qword ptr [rax + 0x18]
0x400223:	mov	qword ptr [rbp - 0x70], rcx
0x400227:	mov	qword ptr [rbp - 0x68], rbx
0x40022b:	mov	rcx, qword ptr [rax + 0x20]
0x40022f:	mov	rbx, qword ptr [rax + 0x28]
0x400233:	mov	qword ptr [rbp - 0x60], rcx
0x400237:	mov	qword ptr [rbp - 0x58], rbx
0x40023b:	mov	rcx, qword ptr [rax + 0x30]
0x40023f:	mov	rbx, qword ptr [rax + 0x38]
0x400243:	mov	qword ptr [rbp - 0x50], rcx
0x400247:	mov	qword ptr [rbp - 0x48], rbx
0x40024b:	mov	rcx, qword ptr [rax + 0x40]
0x40024f:	mov	rbx, qword ptr [rax + 0x48]
0x400253:	mov	qword ptr [rbp - 0x40], rcx
0x400257:	mov	qword ptr [rbp - 0x38], rbx
0x40025b:	mov	rcx, qword ptr [rax + 0x50]
0x40025f:	mov	rbx, qword ptr [rax + 0x58]
0x400263:	mov	qword ptr [rbp - 0x30], rcx
0x400267:	mov	qword ptr [rbp - 0x28], rbx
0x40026b:	mov	eax, dword ptr [rax + 0x60]
0x40026e:	mov	dword ptr [rbp - 0x20], eax
0x400271:	mov	byte ptr [rbp - 0x1d], 0
0x400275:	lea	rax, [rbp - 0x80]
0x400279:	mov	rdi, rax
0x40027c:	call	0x500020
<Block for 0x400281, 16 bytes>
0x400281:	nop	
0x400282:	mov	rax, qword ptr [rbp - 0x18]
0x400286:	xor	rax, qword ptr fs:[0x28]
0x40028f:	je	0x400296
<Block for 0x400296, 10 bytes>
0x400296:	add	rsp, 0x88
0x40029d:	pop	rbx
0x40029e:	pop	rbp
0x40029f:	ret	
<Block for 0x400291, 5 bytes>
0x400291:	call	0x500028
