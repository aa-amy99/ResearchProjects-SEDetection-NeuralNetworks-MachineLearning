<Block for 0x4000c8, 17 bytes>
0x4000c8:	endbr64	
0x4000cc:	push	rbp
0x4000cd:	mov	rbp, rsp
0x4000d0:	sub	rsp, 0x30
0x4000d4:	call	0x500000
<Block for 0x4000d9, 9 bytes>
0x4000d9:	test	eax, eax
0x4000db:	setne	al
0x4000de:	test	al, al
0x4000e0:	je	0x40014d
<Block for 0x40014d, 10 bytes>
0x40014d:	mov	edi, 8
0x400152:	call	0x500008
<Block for 0x4000e2, 10 bytes>
0x4000e2:	mov	edi, 8
0x4000e7:	call	0x500008
<Block for 0x400157, 30 bytes>
0x400157:	mov	qword ptr [rbp - 0x30], rax
0x40015b:	mov	rax, qword ptr [rbp - 0x30]
0x40015f:	movsd	xmm0, qword ptr [rip + 0x69]
0x400167:	movsd	qword ptr [rax], xmm0
0x40016b:	mov	edi, 8
0x400170:	call	0x500008
<Block for 0x4000ec, 30 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x18], rax
0x4000f0:	mov	rax, qword ptr [rbp - 0x18]
0x4000f4:	movsd	xmm0, qword ptr [rip + 0xd4]
0x4000fc:	movsd	qword ptr [rax], xmm0
0x400100:	mov	edi, 8
0x400105:	call	0x500008
<Block for 0x400175, 43 bytes>
0x400175:	mov	qword ptr [rbp - 0x28], rax
0x400179:	mov	rax, qword ptr [rbp - 0x28]
0x40017d:	mov	rdx, qword ptr [rbp - 0x30]
0x400181:	mov	qword ptr [rax], rdx
0x400184:	mov	rax, qword ptr [rbp - 0x28]
0x400188:	mov	rax, qword ptr [rax]
0x40018b:	mov	qword ptr [rbp - 0x20], rax
0x40018f:	mov	rax, qword ptr [rbp - 0x20]
0x400193:	mov	rax, qword ptr [rax]
0x400196:	movq	xmm0, rax
0x40019b:	call	0x500018
<Block for 0x40010a, 43 bytes>
0x40010a:	mov	qword ptr [rbp - 0x10], rax
0x40010e:	mov	rax, qword ptr [rbp - 0x10]
0x400112:	mov	rdx, qword ptr [rbp - 0x18]
0x400116:	mov	qword ptr [rax], rdx
0x400119:	mov	rax, qword ptr [rbp - 0x10]
0x40011d:	mov	rax, qword ptr [rax]
0x400120:	mov	qword ptr [rbp - 8], rax
0x400124:	mov	rax, qword ptr [rbp - 8]
0x400128:	mov	rax, qword ptr [rax]
0x40012b:	movq	xmm0, rax
0x400130:	call	0x500018
<Block for 0x4001a0, 9 bytes>
0x4001a0:	mov	rax, qword ptr [rbp - 0x28]
0x4001a4:	test	rax, rax
0x4001a7:	je	0x4001b6
<Block for 0x400135, 9 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x10]
0x400139:	test	rax, rax
0x40013c:	je	0x4001b6
<Block for 0x4001b6, 3 bytes>
0x4001b6:	nop	
0x4001b7:	leave	
0x4001b8:	ret	
<Block for 0x4001a9, 13 bytes>
0x4001a9:	mov	esi, 8
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x500010
<Block for 0x40013e, 13 bytes>
0x40013e:	mov	esi, 8
0x400143:	mov	rdi, rax
0x400146:	call	0x500010
<Block for 0x40014b, 2 bytes>
0x40014b:	jmp	0x4001b6
