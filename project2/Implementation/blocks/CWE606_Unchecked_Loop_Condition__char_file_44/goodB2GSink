<Block for 0x40032b, 59 bytes>
0x40032b:	endbr64	
0x40032f:	push	rbp
0x400330:	mov	rbp, rsp
0x400333:	sub	rsp, 0x30
0x400337:	mov	qword ptr [rbp - 0x28], rdi
0x40033b:	mov	rax, qword ptr fs:[0x28]
0x400344:	mov	qword ptr [rbp - 8], rax
0x400348:	xor	eax, eax
0x40034a:	lea	rdx, [rbp - 0x14]
0x40034e:	mov	rax, qword ptr [rbp - 0x28]
0x400352:	lea	rsi, [rip + 0x1df]
0x400359:	mov	rdi, rax
0x40035c:	mov	eax, 0
0x400361:	call	0x500000
<Block for 0x400366, 5 bytes>
0x400366:	cmp	eax, 1
0x400369:	jne	0x40039f
<Block for 0x40036b, 10 bytes>
0x40036b:	mov	eax, dword ptr [rbp - 0x14]
0x40036e:	cmp	eax, 0x270f
0x400373:	jg	0x40039f
<Block for 0x40039f, 16 bytes>
0x40039f:	nop	
0x4003a0:	mov	rax, qword ptr [rbp - 8]
0x4003a4:	xor	rax, qword ptr fs:[0x28]
0x4003ad:	je	0x4003b4
<Block for 0x400375, 16 bytes>
0x400375:	mov	dword ptr [rbp - 0xc], 0
0x40037c:	mov	dword ptr [rbp - 0x10], 0
0x400383:	jmp	0x40038d
<Block for 0x4003b4, 2 bytes>
0x4003b4:	leave	
0x4003b5:	ret	
<Block for 0x4003af, 5 bytes>
0x4003af:	call	0x500010
<Block for 0x40038d, 8 bytes>
0x40038d:	mov	eax, dword ptr [rbp - 0x14]
0x400390:	cmp	dword ptr [rbp - 0x10], eax
0x400393:	jl	0x400385
<Block for 0x400385, 16 bytes>
0x400385:	add	dword ptr [rbp - 0xc], 1
0x400389:	add	dword ptr [rbp - 0x10], 1
0x40038d:	mov	eax, dword ptr [rbp - 0x14]
0x400390:	cmp	dword ptr [rbp - 0x10], eax
0x400393:	jl	0x400385
<Block for 0x400395, 10 bytes>
0x400395:	mov	eax, dword ptr [rbp - 0xc]
0x400398:	mov	edi, eax
0x40039a:	call	0x500008
