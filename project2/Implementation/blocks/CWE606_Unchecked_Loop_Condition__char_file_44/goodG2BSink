<Block for 0x4001e4, 59 bytes>
0x4001e4:	endbr64	
0x4001e8:	push	rbp
0x4001e9:	mov	rbp, rsp
0x4001ec:	sub	rsp, 0x30
0x4001f0:	mov	qword ptr [rbp - 0x28], rdi
0x4001f4:	mov	rax, qword ptr fs:[0x28]
0x4001fd:	mov	qword ptr [rbp - 8], rax
0x400201:	xor	eax, eax
0x400203:	lea	rdx, [rbp - 0x14]
0x400207:	mov	rax, qword ptr [rbp - 0x28]
0x40020b:	lea	rsi, [rip + 0x326]
0x400212:	mov	rdi, rax
0x400215:	mov	eax, 0
0x40021a:	call	0x500000
<Block for 0x40021f, 5 bytes>
0x40021f:	cmp	eax, 1
0x400222:	jne	0x40024e
<Block for 0x400224, 16 bytes>
0x400224:	mov	dword ptr [rbp - 0xc], 0
0x40022b:	mov	dword ptr [rbp - 0x10], 0
0x400232:	jmp	0x40023c
<Block for 0x40024e, 16 bytes>
0x40024e:	nop	
0x40024f:	mov	rax, qword ptr [rbp - 8]
0x400253:	xor	rax, qword ptr fs:[0x28]
0x40025c:	je	0x400263
<Block for 0x40023c, 8 bytes>
0x40023c:	mov	eax, dword ptr [rbp - 0x14]
0x40023f:	cmp	dword ptr [rbp - 0x10], eax
0x400242:	jl	0x400234
<Block for 0x400263, 2 bytes>
0x400263:	leave	
0x400264:	ret	
<Block for 0x40025e, 5 bytes>
0x40025e:	call	0x500010
<Block for 0x400234, 16 bytes>
0x400234:	add	dword ptr [rbp - 0xc], 1
0x400238:	add	dword ptr [rbp - 0x10], 1
0x40023c:	mov	eax, dword ptr [rbp - 0x14]
0x40023f:	cmp	dword ptr [rbp - 0x10], eax
0x400242:	jl	0x400234
<Block for 0x400244, 10 bytes>
0x400244:	mov	eax, dword ptr [rbp - 0xc]
0x400247:	mov	edi, eax
0x400249:	call	0x500008
