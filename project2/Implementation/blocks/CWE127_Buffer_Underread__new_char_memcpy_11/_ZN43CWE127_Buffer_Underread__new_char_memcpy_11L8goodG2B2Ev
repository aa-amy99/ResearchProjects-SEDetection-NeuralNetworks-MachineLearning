<Block for 0x400278, 47 bytes>
0x400278:	endbr64	
0x40027c:	push	rbp
0x40027d:	mov	rbp, rsp
0x400280:	push	rbx
0x400281:	sub	rsp, 0x88
0x400288:	mov	rax, qword ptr fs:[0x28]
0x400291:	mov	qword ptr [rbp - 0x18], rax
0x400295:	xor	eax, eax
0x400297:	mov	qword ptr [rbp - 0x90], 0
0x4002a2:	call	0x500000
<Block for 0x4002a7, 9 bytes>
0x4002a7:	test	eax, eax
0x4002a9:	setne	al
0x4002ac:	test	al, al
0x4002ae:	je	0x4002f6
<Block for 0x4002f6, 22 bytes>
0x4002f6:	lea	rax, [rbp - 0x80]
0x4002fa:	mov	edx, 0x63
0x4002ff:	mov	esi, 0x43
0x400304:	mov	rdi, rax
0x400307:	call	0x500010
<Block for 0x4002b0, 10 bytes>
0x4002b0:	mov	edi, 0x64
0x4002b5:	call	0x500008
<Block for 0x40030c, 128 bytes>
0x40030c:	mov	byte ptr [rbp - 0x1d], 0
0x400310:	mov	rax, qword ptr [rbp - 0x90]
0x400317:	mov	rcx, qword ptr [rax]
0x40031a:	mov	rbx, qword ptr [rax + 8]
0x40031e:	mov	qword ptr [rbp - 0x80], rcx
0x400322:	mov	qword ptr [rbp - 0x78], rbx
0x400326:	mov	rcx, qword ptr [rax + 0x10]
0x40032a:	mov	rbx, qword ptr [rax + 0x18]
0x40032e:	mov	qword ptr [rbp - 0x70], rcx
0x400332:	mov	qword ptr [rbp - 0x68], rbx
0x400336:	mov	rcx, qword ptr [rax + 0x20]
0x40033a:	mov	rbx, qword ptr [rax + 0x28]
0x40033e:	mov	qword ptr [rbp - 0x60], rcx
0x400342:	mov	qword ptr [rbp - 0x58], rbx
0x400346:	mov	rcx, qword ptr [rax + 0x30]
0x40034a:	mov	rbx, qword ptr [rax + 0x38]
0x40034e:	mov	qword ptr [rbp - 0x50], rcx
0x400352:	mov	qword ptr [rbp - 0x48], rbx
0x400356:	mov	rcx, qword ptr [rax + 0x40]
0x40035a:	mov	rbx, qword ptr [rax + 0x48]
0x40035e:	mov	qword ptr [rbp - 0x40], rcx
0x400362:	mov	qword ptr [rbp - 0x38], rbx
0x400366:	mov	rcx, qword ptr [rax + 0x50]
0x40036a:	mov	rbx, qword ptr [rax + 0x58]
0x40036e:	mov	qword ptr [rbp - 0x30], rcx
0x400372:	mov	qword ptr [rbp - 0x28], rbx
0x400376:	mov	eax, dword ptr [rax + 0x60]
0x400379:	mov	dword ptr [rbp - 0x20], eax
0x40037c:	mov	byte ptr [rbp - 0x1d], 0
0x400380:	lea	rax, [rbp - 0x80]
0x400384:	mov	rdi, rax
0x400387:	call	0x500018
<Block for 0x4002ba, 32 bytes>
0x4002ba:	mov	qword ptr [rbp - 0x88], rax
0x4002c1:	mov	rax, qword ptr [rbp - 0x88]
0x4002c8:	mov	edx, 0x63
0x4002cd:	mov	esi, 0x41
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x500010
<Block for 0x40038c, 16 bytes>
0x40038c:	nop	
0x40038d:	mov	rax, qword ptr [rbp - 0x18]
0x400391:	xor	rax, qword ptr fs:[0x28]
0x40039a:	je	0x4003a1
<Block for 0x4002da, 50 bytes>
0x4002da:	mov	rax, qword ptr [rbp - 0x88]
0x4002e1:	add	rax, 0x63
0x4002e5:	mov	byte ptr [rax], 0
0x4002e8:	mov	rax, qword ptr [rbp - 0x88]
0x4002ef:	mov	qword ptr [rbp - 0x90], rax
0x4002f6:	lea	rax, [rbp - 0x80]
0x4002fa:	mov	edx, 0x63
0x4002ff:	mov	esi, 0x43
0x400304:	mov	rdi, rax
0x400307:	call	0x500010
<Block for 0x4003a1, 10 bytes>
0x4003a1:	add	rsp, 0x88
0x4003a8:	pop	rbx
0x4003a9:	pop	rbp
0x4003aa:	ret	
<Block for 0x40039c, 5 bytes>
0x40039c:	call	0x500020
