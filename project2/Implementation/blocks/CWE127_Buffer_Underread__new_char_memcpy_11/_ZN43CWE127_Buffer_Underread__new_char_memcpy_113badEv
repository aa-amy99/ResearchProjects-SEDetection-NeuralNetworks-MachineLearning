<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	call	0x500000
<Block for 0x40002f, 9 bytes>
0x40002f:	test	eax, eax
0x400031:	setne	al
0x400034:	test	al, al
0x400036:	je	0x400082
<Block for 0x400082, 22 bytes>
0x400082:	lea	rax, [rbp - 0x80]
0x400086:	mov	edx, 0x63
0x40008b:	mov	esi, 0x43
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0x64
0x40003d:	call	0x500008
<Block for 0x400098, 128 bytes>
0x400098:	mov	byte ptr [rbp - 0x1d], 0
0x40009c:	mov	rax, qword ptr [rbp - 0x90]
0x4000a3:	mov	rcx, qword ptr [rax]
0x4000a6:	mov	rbx, qword ptr [rax + 8]
0x4000aa:	mov	qword ptr [rbp - 0x80], rcx
0x4000ae:	mov	qword ptr [rbp - 0x78], rbx
0x4000b2:	mov	rcx, qword ptr [rax + 0x10]
0x4000b6:	mov	rbx, qword ptr [rax + 0x18]
0x4000ba:	mov	qword ptr [rbp - 0x70], rcx
0x4000be:	mov	qword ptr [rbp - 0x68], rbx
0x4000c2:	mov	rcx, qword ptr [rax + 0x20]
0x4000c6:	mov	rbx, qword ptr [rax + 0x28]
0x4000ca:	mov	qword ptr [rbp - 0x60], rcx
0x4000ce:	mov	qword ptr [rbp - 0x58], rbx
0x4000d2:	mov	rcx, qword ptr [rax + 0x30]
0x4000d6:	mov	rbx, qword ptr [rax + 0x38]
0x4000da:	mov	qword ptr [rbp - 0x50], rcx
0x4000de:	mov	qword ptr [rbp - 0x48], rbx
0x4000e2:	mov	rcx, qword ptr [rax + 0x40]
0x4000e6:	mov	rbx, qword ptr [rax + 0x48]
0x4000ea:	mov	qword ptr [rbp - 0x40], rcx
0x4000ee:	mov	qword ptr [rbp - 0x38], rbx
0x4000f2:	mov	rcx, qword ptr [rax + 0x50]
0x4000f6:	mov	rbx, qword ptr [rax + 0x58]
0x4000fa:	mov	qword ptr [rbp - 0x30], rcx
0x4000fe:	mov	qword ptr [rbp - 0x28], rbx
0x400102:	mov	eax, dword ptr [rax + 0x60]
0x400105:	mov	dword ptr [rbp - 0x20], eax
0x400108:	mov	byte ptr [rbp - 0x1d], 0
0x40010c:	lea	rax, [rbp - 0x80]
0x400110:	mov	rdi, rax
0x400113:	call	0x500018
<Block for 0x400042, 32 bytes>
0x400042:	mov	qword ptr [rbp - 0x88], rax
0x400049:	mov	rax, qword ptr [rbp - 0x88]
0x400050:	mov	edx, 0x63
0x400055:	mov	esi, 0x41
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500010
<Block for 0x400118, 16 bytes>
0x400118:	nop	
0x400119:	mov	rax, qword ptr [rbp - 0x18]
0x40011d:	xor	rax, qword ptr fs:[0x28]
0x400126:	je	0x40012d
<Block for 0x400062, 54 bytes>
0x400062:	mov	rax, qword ptr [rbp - 0x88]
0x400069:	add	rax, 0x63
0x40006d:	mov	byte ptr [rax], 0
0x400070:	mov	rax, qword ptr [rbp - 0x88]
0x400077:	sub	rax, 8
0x40007b:	mov	qword ptr [rbp - 0x90], rax
0x400082:	lea	rax, [rbp - 0x80]
0x400086:	mov	edx, 0x63
0x40008b:	mov	esi, 0x43
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x40012d, 10 bytes>
0x40012d:	add	rsp, 0x88
0x400134:	pop	rbx
0x400135:	pop	rbp
0x400136:	ret	
<Block for 0x400128, 5 bytes>
0x400128:	call	0x500020
