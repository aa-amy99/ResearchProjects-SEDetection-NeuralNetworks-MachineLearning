<Block for 0x400107, 55 bytes>
0x400107:	endbr64	
0x40010b:	push	rbp
0x40010c:	mov	rbp, rsp
0x40010f:	sub	rsp, 0x140
0x400116:	mov	rax, qword ptr fs:[0x28]
0x40011f:	mov	qword ptr [rbp - 8], rax
0x400123:	xor	eax, eax
0x400125:	lea	rax, [rbp - 0x120]
0x40012c:	mov	edx, 0x31
0x400131:	mov	esi, 0x41
0x400136:	mov	rdi, rax
0x400139:	call	0x500000
<Block for 0x40013e, 32 bytes>
0x40013e:	mov	byte ptr [rbp - 0xef], 0
0x400145:	lea	rax, [rbp - 0xe0]
0x40014c:	mov	edx, 0x63
0x400151:	mov	esi, 0x41
0x400156:	mov	rdi, rax
0x400159:	call	0x500000
<Block for 0x40015e, 41 bytes>
0x40015e:	mov	byte ptr [rbp - 0x7d], 0
0x400162:	lea	rax, [rbp - 0xe0]
0x400169:	mov	qword ptr [rbp - 0x130], rax
0x400170:	nop	
0x400171:	lea	rax, [rbp - 0x70]
0x400175:	mov	edx, 0x63
0x40017a:	mov	esi, 0x43
0x40017f:	mov	rdi, rax
0x400182:	call	0x500000
<Block for 0x400187, 16 bytes>
0x400187:	mov	byte ptr [rbp - 0xd], 0
0x40018b:	lea	rax, [rbp - 0x70]
0x40018f:	mov	rdi, rax
0x400192:	call	0x500008
<Block for 0x400197, 20 bytes>
0x400197:	mov	qword ptr [rbp - 0x128], rax
0x40019e:	mov	qword ptr [rbp - 0x138], 0
0x4001a9:	jmp	0x4001d7
<Block for 0x4001d7, 16 bytes>
0x4001d7:	mov	rax, qword ptr [rbp - 0x138]
0x4001de:	cmp	rax, qword ptr [rbp - 0x128]
0x4001e5:	jb	0x4001ab
<Block for 0x4001ab, 60 bytes>
0x4001ab:	mov	rdx, qword ptr [rbp - 0x130]
0x4001b2:	mov	rax, qword ptr [rbp - 0x138]
0x4001b9:	add	rax, rdx
0x4001bc:	movzx	eax, byte ptr [rax]
0x4001bf:	lea	rcx, [rbp - 0x70]
0x4001c3:	mov	rdx, qword ptr [rbp - 0x138]
0x4001ca:	add	rdx, rcx
0x4001cd:	mov	byte ptr [rdx], al
0x4001cf:	add	qword ptr [rbp - 0x138], 1
0x4001d7:	mov	rax, qword ptr [rbp - 0x138]
0x4001de:	cmp	rax, qword ptr [rbp - 0x128]
0x4001e5:	jb	0x4001ab
<Block for 0x4001e7, 16 bytes>
0x4001e7:	mov	byte ptr [rbp - 0xd], 0
0x4001eb:	lea	rax, [rbp - 0x70]
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500010
<Block for 0x4001f7, 16 bytes>
0x4001f7:	nop	
0x4001f8:	mov	rax, qword ptr [rbp - 8]
0x4001fc:	xor	rax, qword ptr fs:[0x28]
0x400205:	je	0x40020c
<Block for 0x40020c, 2 bytes>
0x40020c:	leave	
0x40020d:	ret	
<Block for 0x400207, 5 bytes>
0x400207:	call	0x500018
