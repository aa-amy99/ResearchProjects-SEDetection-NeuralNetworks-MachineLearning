<Block for 0x40011a, 43 bytes>
0x40011a:	endbr64	
0x40011e:	push	rbp
0x40011f:	mov	rbp, rsp
0x400122:	sub	rsp, 0x50
0x400126:	mov	rax, qword ptr fs:[0x28]
0x40012f:	mov	qword ptr [rbp - 8], rax
0x400133:	xor	eax, eax
0x400135:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40013c:	mov	dword ptr [rbp - 0x50], 0
0x400143:	jmp	0x400198
<Block for 0x400198, 6 bytes>
0x400198:	cmp	dword ptr [rbp - 0x50], 0
0x40019c:	jle	0x400145
<Block for 0x400145, 45 bytes>
0x400145:	mov	qword ptr [rbp - 0x16], 0
0x40014d:	mov	dword ptr [rbp - 0xe], 0
0x400154:	mov	word ptr [rbp - 0xa], 0
0x40015a:	mov	rdx, qword ptr [rip + 0xffe9f]
0x400161:	lea	rax, [rbp - 0x16]
0x400165:	mov	esi, 0xe
0x40016a:	mov	rdi, rax
0x40016d:	call	0x500008
<Block for 0x40019e, 9 bytes>
0x40019e:	mov	dword ptr [rbp - 0x4c], 0
0x4001a5:	jmp	0x40021d
<Block for 0x400172, 5 bytes>
0x400172:	test	rax, rax
0x400175:	je	0x400188
<Block for 0x40021d, 6 bytes>
0x40021d:	cmp	dword ptr [rbp - 0x4c], 0
0x400221:	jle	0x4001a7
<Block for 0x400188, 12 bytes>
0x400188:	lea	rdi, [rip + 0x1a1]
0x40018f:	call	0x500018
<Block for 0x400177, 12 bytes>
0x400177:	lea	rax, [rbp - 0x16]
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500010
<Block for 0x4001a7, 46 bytes>
0x4001a7:	mov	qword ptr [rbp - 0x40], 0
0x4001af:	mov	qword ptr [rbp - 0x38], 0
0x4001b7:	mov	qword ptr [rbp - 0x30], 0
0x4001bf:	mov	qword ptr [rbp - 0x28], 0
0x4001c7:	mov	qword ptr [rbp - 0x20], 0
0x4001cf:	cmp	dword ptr [rbp - 0x48], 0
0x4001d3:	js	0x40020d
<Block for 0x400223, 16 bytes>
0x400223:	nop	
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	xor	rax, qword ptr fs:[0x28]
0x400231:	je	0x400238
<Block for 0x400194, 10 bytes>
0x400194:	add	dword ptr [rbp - 0x50], 1
0x400198:	cmp	dword ptr [rbp - 0x50], 0
0x40019c:	jle	0x400145
<Block for 0x400183, 5 bytes>
0x400183:	mov	dword ptr [rbp - 0x48], eax
0x400186:	jmp	0x400194
<Block for 0x40020d, 12 bytes>
0x40020d:	lea	rdi, [rip + 0x14c]
0x400214:	call	0x500018
<Block for 0x4001d5, 6 bytes>
0x4001d5:	cmp	dword ptr [rbp - 0x48], 9
0x4001d9:	jg	0x40020d
<Block for 0x400238, 2 bytes>
0x400238:	leave	
0x400239:	ret	
<Block for 0x400233, 5 bytes>
0x400233:	call	0x500028
<Block for 0x400219, 10 bytes>
0x400219:	add	dword ptr [rbp - 0x4c], 1
0x40021d:	cmp	dword ptr [rbp - 0x4c], 0
0x400221:	jle	0x4001a7
<Block for 0x4001db, 22 bytes>
0x4001db:	mov	eax, dword ptr [rbp - 0x48]
0x4001de:	cdqe	
0x4001e0:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4001e8:	mov	dword ptr [rbp - 0x44], 0
0x4001ef:	jmp	0x400205
<Block for 0x400205, 6 bytes>
0x400205:	cmp	dword ptr [rbp - 0x44], 9
0x400209:	jle	0x4001f1
<Block for 0x4001f1, 16 bytes>
0x4001f1:	mov	eax, dword ptr [rbp - 0x44]
0x4001f4:	cdqe	
0x4001f6:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001fa:	mov	edi, eax
0x4001fc:	call	0x500020
<Block for 0x40020b, 2 bytes>
0x40020b:	jmp	0x400219
<Block for 0x400201, 10 bytes>
0x400201:	add	dword ptr [rbp - 0x44], 1
0x400205:	cmp	dword ptr [rbp - 0x44], 9
0x400209:	jle	0x4001f1
