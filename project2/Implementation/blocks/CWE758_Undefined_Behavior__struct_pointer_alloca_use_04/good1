<Block for 0x4000ea, 36 bytes>
0x4000ea:	endbr64	
0x4000ee:	push	rbp
0x4000ef:	mov	rbp, rsp
0x4000f2:	sub	rsp, 0x20
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	mov	eax, 0
0x40010a:	test	eax, eax
0x40010c:	je	0x40011f
<Block for 0x40011f, 54 bytes>
0x40011f:	mov	eax, 0x10
0x400124:	sub	rax, 1
0x400128:	add	rax, 0x10
0x40012c:	mov	esi, 0x10
0x400131:	mov	edx, 0
0x400136:	div	rsi
0x400139:	imul	rax, rax, 0x10
0x40013d:	mov	rdx, rax
0x400140:	and	rdx, 0xfffffffffffff000
0x400147:	mov	rcx, rsp
0x40014a:	sub	rcx, rdx
0x40014d:	mov	rdx, rcx
0x400150:	cmp	rsp, rdx
0x400153:	je	0x400167
<Block for 0x40010e, 12 bytes>
0x40010e:	lea	rdi, [rip + 0x25b]
0x400115:	call	0x500010
<Block for 0x400167, 26 bytes>
0x400167:	mov	rdx, rax
0x40016a:	and	edx, 0xfff
0x400170:	sub	rsp, rdx
0x400173:	mov	rdx, rax
0x400176:	and	edx, 0xfff
0x40017c:	test	rdx, rdx
0x40017f:	je	0x400191
<Block for 0x400155, 18 bytes>
0x400155:	sub	rsp, 0x1000
0x40015c:	or	qword ptr [rsp + 0xff8], 0
0x400165:	jmp	0x400150
<Block for 0x40011a, 5 bytes>
0x40011a:	jmp	0x400209
<Block for 0x400191, 29 bytes>
0x400191:	mov	rax, rsp
0x400194:	add	rax, 0xf
0x400198:	shr	rax, 4
0x40019c:	shl	rax, 4
0x4001a0:	mov	qword ptr [rbp - 0x20], rax
0x4001a4:	mov	edi, 8
0x4001a9:	call	0x500018
<Block for 0x400181, 45 bytes>
0x400181:	and	eax, 0xfff
0x400186:	sub	rax, 8
0x40018a:	add	rax, rsp
0x40018d:	or	qword ptr [rax], 0
0x400191:	mov	rax, rsp
0x400194:	add	rax, 0xf
0x400198:	shr	rax, 4
0x40019c:	shl	rax, 4
0x4001a0:	mov	qword ptr [rbp - 0x20], rax
0x4001a4:	mov	edi, 8
0x4001a9:	call	0x500018
<Block for 0x400150, 5 bytes>
0x400150:	cmp	rsp, rdx
0x400153:	je	0x400167
<Block for 0x400209, 16 bytes>
0x400209:	nop	
0x40020a:	mov	rax, qword ptr [rbp - 8]
0x40020e:	xor	rax, qword ptr fs:[0x28]
0x400217:	je	0x40021e
<Block for 0x4001ae, 11 bytes>
0x4001ae:	mov	qword ptr [rbp - 0x18], rax
0x4001b2:	cmp	qword ptr [rbp - 0x18], 0
0x4001b7:	jne	0x4001c3
<Block for 0x40021e, 2 bytes>
0x40021e:	leave	
0x40021f:	ret	
<Block for 0x400219, 5 bytes>
0x400219:	call	0x500008
<Block for 0x4001b9, 10 bytes>
0x4001b9:	mov	edi, 0xffffffff
0x4001be:	call	0x500020
<Block for 0x4001c3, 56 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x18]
0x4001c7:	mov	dword ptr [rax], 5
0x4001cd:	mov	rax, qword ptr [rbp - 0x18]
0x4001d1:	mov	dword ptr [rax + 4], 6
0x4001d8:	mov	rax, qword ptr [rbp - 0x20]
0x4001dc:	mov	rdx, qword ptr [rbp - 0x18]
0x4001e0:	mov	qword ptr [rax], rdx
0x4001e3:	mov	rax, qword ptr [rbp - 0x20]
0x4001e7:	mov	rax, qword ptr [rax]
0x4001ea:	mov	qword ptr [rbp - 0x10], rax
0x4001ee:	mov	rax, qword ptr [rbp - 0x10]
0x4001f2:	mov	eax, dword ptr [rax]
0x4001f4:	mov	edi, eax
0x4001f6:	call	0x500000
<Block for 0x4001fb, 14 bytes>
0x4001fb:	mov	rax, qword ptr [rbp - 0x10]
0x4001ff:	mov	eax, dword ptr [rax + 4]
0x400202:	mov	edi, eax
0x400204:	call	0x500000
