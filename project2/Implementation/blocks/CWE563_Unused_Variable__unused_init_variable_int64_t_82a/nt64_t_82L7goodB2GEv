<Block for 0x400066, 31 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	push	rbx
0x40006f:	sub	rsp, 0x18
0x400073:	mov	qword ptr [rbp - 0x20], 5
0x40007b:	mov	edi, 8
0x400080:	call	0x500000
<Block for 0x400085, 11 bytes>
0x400085:	mov	rbx, rax
0x400088:	mov	rdi, rbx
0x40008b:	call	0x400128
<Block for 0x400090, 30 bytes>
0x400090:	mov	qword ptr [rbp - 0x18], rbx
0x400094:	mov	rax, qword ptr [rbp - 0x18]
0x400098:	mov	rax, qword ptr [rax]
0x40009b:	mov	rcx, qword ptr [rax]
0x40009e:	mov	rdx, qword ptr [rbp - 0x20]
0x4000a2:	mov	rax, qword ptr [rbp - 0x18]
0x4000a6:	mov	rsi, rdx
0x4000a9:	mov	rdi, rax
0x4000ac:	call	rcx
<Block for 0x4000ae, 9 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x18]
0x4000b2:	test	rax, rax
0x4000b5:	je	0x4000c4
<Block for 0x4000c4, 8 bytes>
0x4000c4:	nop	
0x4000c5:	add	rsp, 0x18
0x4000c9:	pop	rbx
0x4000ca:	pop	rbp
0x4000cb:	ret	
<Block for 0x4000b7, 13 bytes>
0x4000b7:	mov	esi, 8
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500008
