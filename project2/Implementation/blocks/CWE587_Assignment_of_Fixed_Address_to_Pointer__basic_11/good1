<Block for 0x400036, 37 bytes>
0x400036:	endbr64	
0x40003a:	push	rbp
0x40003b:	mov	rbp, rsp
0x40003e:	sub	rsp, 0x20
0x400042:	mov	rax, qword ptr fs:[0x28]
0x40004b:	mov	qword ptr [rbp - 8], rax
0x40004f:	xor	eax, eax
0x400051:	mov	eax, 0
0x400056:	call	0x500010
<Block for 0x40005b, 4 bytes>
0x40005b:	test	eax, eax
0x40005d:	je	0x40006d
<Block for 0x40006d, 29 bytes>
0x40006d:	mov	byte ptr [rbp - 0x11], 0x61
0x400071:	lea	rax, [rbp - 0x11]
0x400075:	mov	qword ptr [rbp - 0x10], rax
0x400079:	mov	rax, qword ptr [rbp - 0x10]
0x40007d:	movzx	eax, byte ptr [rax]
0x400080:	movsx	eax, al
0x400083:	mov	edi, eax
0x400085:	call	0x500008
<Block for 0x40005f, 12 bytes>
0x40005f:	lea	rdi, [rip + 0xb7]
0x400066:	call	0x500018
<Block for 0x40008a, 16 bytes>
0x40008a:	nop	
0x40008b:	mov	rax, qword ptr [rbp - 8]
0x40008f:	xor	rax, qword ptr fs:[0x28]
0x400098:	je	0x40009f
<Block for 0x40006b, 2 bytes>
0x40006b:	jmp	0x40008a
<Block for 0x40009f, 2 bytes>
0x40009f:	leave	
0x4000a0:	ret	
<Block for 0x40009a, 5 bytes>
0x40009a:	call	0x500020
