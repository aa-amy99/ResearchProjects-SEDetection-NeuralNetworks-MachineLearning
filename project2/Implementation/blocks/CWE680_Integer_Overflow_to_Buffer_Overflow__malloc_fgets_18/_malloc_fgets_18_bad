<Block for 0x400000, 84 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x2c], 0xffffffff
0x400022:	nop	
0x400023:	endbr64	
0x400027:	mov	qword ptr [rbp - 0x16], 0
0x40002f:	mov	dword ptr [rbp - 0xe], 0
0x400036:	mov	word ptr [rbp - 0xa], 0
0x40003c:	mov	rdx, qword ptr [rip + 0xfffbd]
0x400043:	lea	rax, [rbp - 0x16]
0x400047:	mov	esi, 0xe
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 5 bytes>
0x400054:	test	rax, rax
0x400057:	je	0x40006a
<Block for 0x40006a, 12 bytes>
0x40006a:	lea	rdi, [rip + 0x137]
0x400071:	call	0x500018
<Block for 0x400059, 12 bytes>
0x400059:	lea	rax, [rbp - 0x16]
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x400076, 17 bytes>
0x400076:	mov	eax, dword ptr [rbp - 0x2c]
0x400079:	cdqe	
0x40007b:	shl	rax, 2
0x40007f:	mov	rdi, rax
0x400082:	call	0x500020
<Block for 0x400065, 5 bytes>
0x400065:	mov	dword ptr [rbp - 0x2c], eax
0x400068:	jmp	0x400076
<Block for 0x400087, 11 bytes>
0x400087:	mov	qword ptr [rbp - 0x20], rax
0x40008b:	cmp	qword ptr [rbp - 0x20], 0
0x400090:	jne	0x40009c
<Block for 0x400092, 10 bytes>
0x400092:	mov	edi, 0xffffffff
0x400097:	call	0x500028
<Block for 0x40009c, 10 bytes>
0x40009c:	mov	qword ptr [rbp - 0x28], 0
0x4000a4:	jmp	0x4000c4
<Block for 0x4000c4, 11 bytes>
0x4000c4:	mov	eax, dword ptr [rbp - 0x2c]
0x4000c7:	cdqe	
0x4000c9:	cmp	qword ptr [rbp - 0x28], rax
0x4000cd:	jb	0x4000a6
<Block for 0x4000a6, 41 bytes>
0x4000a6:	mov	rax, qword ptr [rbp - 0x28]
0x4000aa:	lea	rdx, [rax*4]
0x4000b2:	mov	rax, qword ptr [rbp - 0x20]
0x4000b6:	add	rax, rdx
0x4000b9:	mov	dword ptr [rax], 0
0x4000bf:	add	qword ptr [rbp - 0x28], 1
0x4000c4:	mov	eax, dword ptr [rbp - 0x2c]
0x4000c7:	cdqe	
0x4000c9:	cmp	qword ptr [rbp - 0x28], rax
0x4000cd:	jb	0x4000a6
<Block for 0x4000cf, 13 bytes>
0x4000cf:	mov	rax, qword ptr [rbp - 0x20]
0x4000d3:	mov	eax, dword ptr [rax]
0x4000d5:	mov	edi, eax
0x4000d7:	call	0x500030
<Block for 0x4000dc, 12 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 0x20]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500038
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 8]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x4000fd
<Block for 0x4000fd, 2 bytes>
0x4000fd:	leave	
0x4000fe:	ret	
<Block for 0x4000f8, 5 bytes>
0x4000f8:	call	0x500040
