<Block for 0x400366, 40 bytes>
0x400366:	endbr64	
0x40036a:	push	rbp
0x40036b:	mov	rbp, rsp
0x40036e:	push	rbx
0x40036f:	sub	rsp, 0x68
0x400373:	mov	rax, qword ptr fs:[0x28]
0x40037c:	mov	qword ptr [rbp - 0x18], rax
0x400380:	xor	eax, eax
0x400382:	lea	rax, [rbp - 0x50]
0x400386:	mov	rdi, rax
0x400389:	call	0x400632
<Block for 0x40038e, 34 bytes>
0x40038e:	lea	rax, [rbp - 0x50]
0x400392:	mov	qword ptr [rbp - 0x58], rax
0x400396:	mov	dword ptr [rbp - 0x30], 0x64
0x40039d:	lea	rdx, [rbp - 0x30]
0x4003a1:	lea	rax, [rbp - 0x50]
0x4003a5:	mov	rsi, rdx
0x4003a8:	mov	rdi, rax
0x4003ab:	call	0x400740
<Block for 0x4003b0, 26 bytes>
0x4003b0:	mov	dword ptr [rbp - 0x30], 0
0x4003b7:	lea	rdx, [rbp - 0x30]
0x4003bb:	lea	rax, [rbp - 0x50]
0x4003bf:	mov	rsi, rdx
0x4003c2:	mov	rdi, rax
0x4003c5:	call	0x400740
<Block for 0x4003ca, 19 bytes>
0x4003ca:	mov	rdx, qword ptr [rbp - 0x58]
0x4003ce:	lea	rax, [rbp - 0x30]
0x4003d2:	mov	rsi, rdx
0x4003d5:	mov	rdi, rax
0x4003d8:	call	0x40078e
<Block for 0x4003dd, 12 bytes>
0x4003dd:	lea	rax, [rbp - 0x68]
0x4003e1:	mov	rdi, rax
0x4003e4:	call	0x40085a
<Block for 0x4003e9, 19 bytes>
0x4003e9:	lea	rsi, [rip + 0x196]
0x4003f0:	lea	rdi, [rip + 0xffc09]
0x4003f7:	call	0x500008
<Block for 0x4003fc, 12 bytes>
0x4003fc:	lea	rax, [rbp - 0x30]
0x400400:	mov	rdi, rax
0x400403:	call	0x400874
<Block for 0x400408, 16 bytes>
0x400408:	mov	qword ptr [rbp - 0x68], rax
0x40040c:	lea	rax, [rbp - 0x30]
0x400410:	mov	rdi, rax
0x400413:	call	0x4008c4
<Block for 0x400418, 23 bytes>
0x400418:	mov	qword ptr [rbp - 0x60], rax
0x40041c:	lea	rdx, [rbp - 0x60]
0x400420:	lea	rax, [rbp - 0x68]
0x400424:	mov	rsi, rdx
0x400427:	mov	rdi, rax
0x40042a:	call	0x400910
<Block for 0x40042f, 4 bytes>
0x40042f:	test	al, al
0x400431:	je	0x400474
<Block for 0x400474, 22 bytes>
0x400474:	mov	rax, qword ptr [rip + 0xffba5]
0x40047b:	mov	rsi, rax
0x40047e:	lea	rdi, [rip + 0xffb7b]
0x400485:	call	0x500028
<Block for 0x400433, 19 bytes>
0x400433:	lea	rsi, [rip + 0x160]
0x40043a:	lea	rdi, [rip + 0xffbbf]
0x400441:	call	0x500008
<Block for 0x40048a, 12 bytes>
0x40048a:	lea	rax, [rbp - 0x30]
0x40048e:	mov	rdi, rax
0x400491:	call	0x400652
<Block for 0x400446, 15 bytes>
0x400446:	mov	rbx, rax
0x400449:	lea	rax, [rbp - 0x68]
0x40044d:	mov	rdi, rax
0x400450:	call	0x40098e
<Block for 0x400496, 12 bytes>
0x400496:	lea	rax, [rbp - 0x50]
0x40049a:	mov	rdi, rax
0x40049d:	call	0x400652
<Block for 0x400455, 12 bytes>
0x400455:	mov	eax, dword ptr [rax]
0x400457:	mov	esi, eax
0x400459:	mov	rdi, rbx
0x40045c:	call	0x500010
<Block for 0x4004a2, 16 bytes>
0x4004a2:	nop	
0x4004a3:	mov	rax, qword ptr [rbp - 0x18]
0x4004a7:	xor	rax, qword ptr fs:[0x28]
0x4004b0:	je	0x4004ec
<Block for 0x400461, 17 bytes>
0x400461:	lea	rax, [rbp - 0x68]
0x400465:	mov	esi, 0
0x40046a:	mov	rdi, rax
0x40046d:	call	0x400936
<Block for 0x4004ec, 7 bytes>
0x4004ec:	add	rsp, 0x68
0x4004f0:	pop	rbx
0x4004f1:	pop	rbp
0x4004f2:	ret	
<Block for 0x4004b2, 2 bytes>
0x4004b2:	jmp	0x4004e7
<Block for 0x400472, 2 bytes>
0x400472:	jmp	0x40040c
<Block for 0x4004e7, 5 bytes>
0x4004e7:	call	0x500038
<Block for 0x40040c, 12 bytes>
0x40040c:	lea	rax, [rbp - 0x30]
0x400410:	mov	rdi, rax
0x400413:	call	0x4008c4
