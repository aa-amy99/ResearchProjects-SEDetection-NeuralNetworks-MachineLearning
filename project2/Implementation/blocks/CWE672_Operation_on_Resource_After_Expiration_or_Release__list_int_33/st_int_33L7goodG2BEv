<Block for 0x4001b3, 40 bytes>
0x4001b3:	endbr64	
0x4001b7:	push	rbp
0x4001b8:	mov	rbp, rsp
0x4001bb:	push	rbx
0x4001bc:	sub	rsp, 0x68
0x4001c0:	mov	rax, qword ptr fs:[0x28]
0x4001c9:	mov	qword ptr [rbp - 0x18], rax
0x4001cd:	xor	eax, eax
0x4001cf:	lea	rax, [rbp - 0x50]
0x4001d3:	mov	rdi, rax
0x4001d6:	call	0x400632
<Block for 0x4001db, 34 bytes>
0x4001db:	lea	rax, [rbp - 0x50]
0x4001df:	mov	qword ptr [rbp - 0x58], rax
0x4001e3:	mov	dword ptr [rbp - 0x30], 0x64
0x4001ea:	lea	rdx, [rbp - 0x30]
0x4001ee:	lea	rax, [rbp - 0x50]
0x4001f2:	mov	rsi, rdx
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x400740
<Block for 0x4001fd, 26 bytes>
0x4001fd:	mov	dword ptr [rbp - 0x30], 0xc8
0x400204:	lea	rdx, [rbp - 0x30]
0x400208:	lea	rax, [rbp - 0x50]
0x40020c:	mov	rsi, rdx
0x40020f:	mov	rdi, rax
0x400212:	call	0x400740
<Block for 0x400217, 19 bytes>
0x400217:	mov	rdx, qword ptr [rbp - 0x58]
0x40021b:	lea	rax, [rbp - 0x30]
0x40021f:	mov	rsi, rdx
0x400222:	mov	rdi, rax
0x400225:	call	0x40078e
<Block for 0x40022a, 12 bytes>
0x40022a:	lea	rax, [rbp - 0x68]
0x40022e:	mov	rdi, rax
0x400231:	call	0x40085a
<Block for 0x400236, 19 bytes>
0x400236:	lea	rsi, [rip + 0x349]
0x40023d:	lea	rdi, [rip + 0xffdbc]
0x400244:	call	0x500008
<Block for 0x400249, 12 bytes>
0x400249:	lea	rax, [rbp - 0x30]
0x40024d:	mov	rdi, rax
0x400250:	call	0x400874
<Block for 0x400255, 16 bytes>
0x400255:	mov	qword ptr [rbp - 0x68], rax
0x400259:	lea	rax, [rbp - 0x30]
0x40025d:	mov	rdi, rax
0x400260:	call	0x4008c4
<Block for 0x400265, 23 bytes>
0x400265:	mov	qword ptr [rbp - 0x60], rax
0x400269:	lea	rdx, [rbp - 0x60]
0x40026d:	lea	rax, [rbp - 0x68]
0x400271:	mov	rsi, rdx
0x400274:	mov	rdi, rax
0x400277:	call	0x400910
<Block for 0x40027c, 4 bytes>
0x40027c:	test	al, al
0x40027e:	je	0x4002e7
<Block for 0x4002e7, 22 bytes>
0x4002e7:	mov	rax, qword ptr [rip + 0xffd32]
0x4002ee:	mov	rsi, rax
0x4002f1:	lea	rdi, [rip + 0xffd08]
0x4002f8:	call	0x500028
<Block for 0x400280, 12 bytes>
0x400280:	lea	rax, [rbp - 0x68]
0x400284:	mov	rdi, rax
0x400287:	call	0x40098e
<Block for 0x4002fd, 12 bytes>
0x4002fd:	lea	rax, [rbp - 0x30]
0x400301:	mov	rdi, rax
0x400304:	call	0x400652
<Block for 0x40028c, 11 bytes>
0x40028c:	mov	eax, dword ptr [rax]
0x40028e:	test	eax, eax
0x400290:	sete	al
0x400293:	test	al, al
0x400295:	je	0x4002a3
<Block for 0x400309, 12 bytes>
0x400309:	lea	rax, [rbp - 0x50]
0x40030d:	mov	rdi, rax
0x400310:	call	0x400652
<Block for 0x4002a3, 19 bytes>
0x4002a3:	lea	rsi, [rip + 0x2f0]
0x4002aa:	lea	rdi, [rip + 0xffd4f]
0x4002b1:	call	0x500008
<Block for 0x400297, 12 bytes>
0x400297:	lea	rax, [rbp - 0x30]
0x40029b:	mov	rdi, rax
0x40029e:	call	0x4009b0
<Block for 0x400315, 16 bytes>
0x400315:	nop	
0x400316:	mov	rax, qword ptr [rbp - 0x18]
0x40031a:	xor	rax, qword ptr fs:[0x28]
0x400323:	je	0x40035f
<Block for 0x4002b6, 15 bytes>
0x4002b6:	mov	rbx, rax
0x4002b9:	lea	rax, [rbp - 0x68]
0x4002bd:	mov	rdi, rax
0x4002c0:	call	0x40098e
<Block for 0x40035f, 7 bytes>
0x40035f:	add	rsp, 0x68
0x400363:	pop	rbx
0x400364:	pop	rbp
0x400365:	ret	
<Block for 0x400325, 2 bytes>
0x400325:	jmp	0x40035a
<Block for 0x4002c5, 12 bytes>
0x4002c5:	mov	eax, dword ptr [rax]
0x4002c7:	mov	esi, eax
0x4002c9:	mov	rdi, rbx
0x4002cc:	call	0x500010
<Block for 0x40035a, 5 bytes>
0x40035a:	call	0x500038
<Block for 0x4002d1, 17 bytes>
0x4002d1:	lea	rax, [rbp - 0x68]
0x4002d5:	mov	esi, 0
0x4002da:	mov	rdi, rax
0x4002dd:	call	0x400936
<Block for 0x4002e2, 5 bytes>
0x4002e2:	jmp	0x400259
<Block for 0x400259, 12 bytes>
0x400259:	lea	rax, [rbp - 0x30]
0x40025d:	mov	rdi, rax
0x400260:	call	0x4008c4
