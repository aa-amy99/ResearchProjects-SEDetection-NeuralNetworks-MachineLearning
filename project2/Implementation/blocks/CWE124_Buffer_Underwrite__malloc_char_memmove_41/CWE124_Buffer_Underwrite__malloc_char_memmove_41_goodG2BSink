<Block for 0x4000ee, 53 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	add	rsp, -0x80
0x4000fa:	mov	qword ptr [rbp - 0x78], rdi
0x4000fe:	mov	rax, qword ptr fs:[0x28]
0x400107:	mov	qword ptr [rbp - 8], rax
0x40010b:	xor	eax, eax
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	edx, 0x63
0x400116:	mov	esi, 0x43
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500000
<Block for 0x400123, 28 bytes>
0x400123:	mov	byte ptr [rbp - 0xd], 0
0x400127:	lea	rcx, [rbp - 0x70]
0x40012b:	mov	rax, qword ptr [rbp - 0x78]
0x40012f:	mov	edx, 0x64
0x400134:	mov	rsi, rcx
0x400137:	mov	rdi, rax
0x40013a:	call	0x500008
<Block for 0x40013f, 23 bytes>
0x40013f:	mov	rax, qword ptr [rbp - 0x78]
0x400143:	add	rax, 0x63
0x400147:	mov	byte ptr [rax], 0
0x40014a:	mov	rax, qword ptr [rbp - 0x78]
0x40014e:	mov	rdi, rax
0x400151:	call	0x500010
<Block for 0x400156, 16 bytes>
0x400156:	nop	
0x400157:	mov	rax, qword ptr [rbp - 8]
0x40015b:	xor	rax, qword ptr fs:[0x28]
0x400164:	je	0x40016b
<Block for 0x40016b, 2 bytes>
0x40016b:	leave	
0x40016c:	ret	
<Block for 0x400166, 5 bytes>
0x400166:	call	0x500018
