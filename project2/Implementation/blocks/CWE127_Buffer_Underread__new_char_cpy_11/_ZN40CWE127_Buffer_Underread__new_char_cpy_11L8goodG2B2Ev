<Block for 0x4001c4, 46 bytes>
0x4001c4:	endbr64	
0x4001c8:	push	rbp
0x4001c9:	mov	rbp, rsp
0x4001cc:	sub	rsp, 0xe0
0x4001d3:	mov	rax, qword ptr fs:[0x28]
0x4001dc:	mov	qword ptr [rbp - 8], rax
0x4001e0:	xor	eax, eax
0x4001e2:	mov	qword ptr [rbp - 0xe0], 0
0x4001ed:	call	0x500000
<Block for 0x4001f2, 9 bytes>
0x4001f2:	test	eax, eax
0x4001f4:	setne	al
0x4001f7:	test	al, al
0x4001f9:	je	0x400241
<Block for 0x400241, 25 bytes>
0x400241:	lea	rax, [rbp - 0xd0]
0x400248:	mov	edx, 0xc7
0x40024d:	mov	esi, 0x43
0x400252:	mov	rdi, rax
0x400255:	call	0x500010
<Block for 0x4001fb, 10 bytes>
0x4001fb:	mov	edi, 0x64
0x400200:	call	0x500008
<Block for 0x40025a, 29 bytes>
0x40025a:	mov	byte ptr [rbp - 9], 0
0x40025e:	mov	rdx, qword ptr [rbp - 0xe0]
0x400265:	lea	rax, [rbp - 0xd0]
0x40026c:	mov	rsi, rdx
0x40026f:	mov	rdi, rax
0x400272:	call	0x500018
<Block for 0x400205, 32 bytes>
0x400205:	mov	qword ptr [rbp - 0xd8], rax
0x40020c:	mov	rax, qword ptr [rbp - 0xd8]
0x400213:	mov	edx, 0x63
0x400218:	mov	esi, 0x41
0x40021d:	mov	rdi, rax
0x400220:	call	0x500010
<Block for 0x400277, 15 bytes>
0x400277:	lea	rax, [rbp - 0xd0]
0x40027e:	mov	rdi, rax
0x400281:	call	0x500020
<Block for 0x400225, 53 bytes>
0x400225:	mov	rax, qword ptr [rbp - 0xd8]
0x40022c:	add	rax, 0x63
0x400230:	mov	byte ptr [rax], 0
0x400233:	mov	rax, qword ptr [rbp - 0xd8]
0x40023a:	mov	qword ptr [rbp - 0xe0], rax
0x400241:	lea	rax, [rbp - 0xd0]
0x400248:	mov	edx, 0xc7
0x40024d:	mov	esi, 0x43
0x400252:	mov	rdi, rax
0x400255:	call	0x500010
<Block for 0x400286, 16 bytes>
0x400286:	nop	
0x400287:	mov	rax, qword ptr [rbp - 8]
0x40028b:	xor	rax, qword ptr fs:[0x28]
0x400294:	je	0x40029b
<Block for 0x40029b, 2 bytes>
0x40029b:	leave	
0x40029c:	ret	
<Block for 0x400296, 5 bytes>
0x400296:	call	0x500028
