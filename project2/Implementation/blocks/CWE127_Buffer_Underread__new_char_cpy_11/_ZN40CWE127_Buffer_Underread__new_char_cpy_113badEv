<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	call	0x500000
<Block for 0x40002e, 9 bytes>
0x40002e:	test	eax, eax
0x400030:	setne	al
0x400033:	test	al, al
0x400035:	je	0x400081
<Block for 0x400081, 25 bytes>
0x400081:	lea	rax, [rbp - 0xd0]
0x400088:	mov	edx, 0xc7
0x40008d:	mov	esi, 0x43
0x400092:	mov	rdi, rax
0x400095:	call	0x500010
<Block for 0x400037, 10 bytes>
0x400037:	mov	edi, 0x64
0x40003c:	call	0x500008
<Block for 0x40009a, 29 bytes>
0x40009a:	mov	byte ptr [rbp - 9], 0
0x40009e:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000a5:	lea	rax, [rbp - 0xd0]
0x4000ac:	mov	rsi, rdx
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500018
<Block for 0x400041, 32 bytes>
0x400041:	mov	qword ptr [rbp - 0xd8], rax
0x400048:	mov	rax, qword ptr [rbp - 0xd8]
0x40004f:	mov	edx, 0x63
0x400054:	mov	esi, 0x41
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x4000b7, 15 bytes>
0x4000b7:	lea	rax, [rbp - 0xd0]
0x4000be:	mov	rdi, rax
0x4000c1:	call	0x500020
<Block for 0x400061, 57 bytes>
0x400061:	mov	rax, qword ptr [rbp - 0xd8]
0x400068:	add	rax, 0x63
0x40006c:	mov	byte ptr [rax], 0
0x40006f:	mov	rax, qword ptr [rbp - 0xd8]
0x400076:	sub	rax, 8
0x40007a:	mov	qword ptr [rbp - 0xe0], rax
0x400081:	lea	rax, [rbp - 0xd0]
0x400088:	mov	edx, 0xc7
0x40008d:	mov	esi, 0x43
0x400092:	mov	rdi, rax
0x400095:	call	0x500010
<Block for 0x4000c6, 16 bytes>
0x4000c6:	nop	
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	xor	rax, qword ptr fs:[0x28]
0x4000d4:	je	0x4000db
<Block for 0x4000db, 2 bytes>
0x4000db:	leave	
0x4000dc:	ret	
<Block for 0x4000d6, 5 bytes>
0x4000d6:	call	0x500028
