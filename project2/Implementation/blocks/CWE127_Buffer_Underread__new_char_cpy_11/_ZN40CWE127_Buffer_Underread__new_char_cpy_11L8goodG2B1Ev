<Block for 0x4000dd, 46 bytes>
0x4000dd:	endbr64	
0x4000e1:	push	rbp
0x4000e2:	mov	rbp, rsp
0x4000e5:	sub	rsp, 0xe0
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	qword ptr [rbp - 0xe0], 0
0x400106:	call	0x500030
<Block for 0x40010b, 9 bytes>
0x40010b:	test	eax, eax
0x40010d:	setne	al
0x400110:	test	al, al
0x400112:	je	0x400122
<Block for 0x400122, 10 bytes>
0x400122:	mov	edi, 0x64
0x400127:	call	0x500008
<Block for 0x400114, 12 bytes>
0x400114:	lea	rdi, [rip + 0x197]
0x40011b:	call	0x500020
<Block for 0x40012c, 32 bytes>
0x40012c:	mov	qword ptr [rbp - 0xd8], rax
0x400133:	mov	rax, qword ptr [rbp - 0xd8]
0x40013a:	mov	edx, 0x63
0x40013f:	mov	esi, 0x41
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x400120, 2 bytes>
0x400120:	jmp	0x400168
<Block for 0x40014c, 53 bytes>
0x40014c:	mov	rax, qword ptr [rbp - 0xd8]
0x400153:	add	rax, 0x63
0x400157:	mov	byte ptr [rax], 0
0x40015a:	mov	rax, qword ptr [rbp - 0xd8]
0x400161:	mov	qword ptr [rbp - 0xe0], rax
0x400168:	lea	rax, [rbp - 0xd0]
0x40016f:	mov	edx, 0xc7
0x400174:	mov	esi, 0x43
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400168, 25 bytes>
0x400168:	lea	rax, [rbp - 0xd0]
0x40016f:	mov	edx, 0xc7
0x400174:	mov	esi, 0x43
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400181, 29 bytes>
0x400181:	mov	byte ptr [rbp - 9], 0
0x400185:	mov	rdx, qword ptr [rbp - 0xe0]
0x40018c:	lea	rax, [rbp - 0xd0]
0x400193:	mov	rsi, rdx
0x400196:	mov	rdi, rax
0x400199:	call	0x500018
<Block for 0x40019e, 15 bytes>
0x40019e:	lea	rax, [rbp - 0xd0]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x500020
<Block for 0x4001ad, 16 bytes>
0x4001ad:	nop	
0x4001ae:	mov	rax, qword ptr [rbp - 8]
0x4001b2:	xor	rax, qword ptr fs:[0x28]
0x4001bb:	je	0x4001c2
<Block for 0x4001c2, 2 bytes>
0x4001c2:	leave	
0x4001c3:	ret	
<Block for 0x4001bd, 5 bytes>
0x4001bd:	call	0x500028
