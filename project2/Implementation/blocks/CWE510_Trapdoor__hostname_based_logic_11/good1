<Block for 0x400244, 37 bytes>
0x400244:	endbr64	
0x400248:	push	rbp
0x400249:	mov	rbp, rsp
0x40024c:	sub	rsp, 0x30
0x400250:	mov	rax, qword ptr fs:[0x28]
0x400259:	mov	qword ptr [rbp - 8], rax
0x40025d:	xor	eax, eax
0x40025f:	mov	eax, 0
0x400264:	call	0x500070
<Block for 0x400269, 4 bytes>
0x400269:	test	eax, eax
0x40026b:	je	0x40027e
<Block for 0x40027e, 34 bytes>
0x40027e:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400285:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40028c:	mov	edx, 6
0x400291:	mov	esi, 1
0x400296:	mov	edi, 2
0x40029b:	call	0x500008
<Block for 0x40026d, 12 bytes>
0x40026d:	lea	rdi, [rip + 0x2c5]
0x400274:	call	0x500058
<Block for 0x4002a0, 13 bytes>
0x4002a0:	mov	dword ptr [rbp - 0x24], eax
0x4002a3:	cmp	dword ptr [rbp - 0x24], -1
0x4002a7:	je	0x400359
<Block for 0x400279, 5 bytes>
0x400279:	jmp	0x400383
<Block for 0x400359, 3 bytes>
0x400359:	nop	
0x40035a:	jmp	0x400363
<Block for 0x4002ad, 22 bytes>
0x4002ad:	lea	rax, [rbp - 0x20]
0x4002b1:	mov	edx, 0x10
0x4002b6:	mov	esi, 0
0x4002bb:	mov	rdi, rax
0x4002be:	call	0x500010
<Block for 0x400383, 16 bytes>
0x400383:	nop	
0x400384:	mov	rax, qword ptr [rbp - 8]
0x400388:	xor	rax, qword ptr fs:[0x28]
0x400391:	je	0x400398
<Block for 0x400363, 6 bytes>
0x400363:	cmp	dword ptr [rbp - 0x24], -1
0x400367:	je	0x400373
<Block for 0x4002c3, 23 bytes>
0x4002c3:	mov	word ptr [rbp - 0x20], 2
0x4002c9:	mov	dword ptr [rbp - 0x1c], 0
0x4002d0:	mov	edi, 0x4e20
0x4002d5:	call	0x500018
<Block for 0x400398, 2 bytes>
0x400398:	leave	
0x400399:	ret	
<Block for 0x400393, 5 bytes>
0x400393:	call	0x500068
<Block for 0x400373, 6 bytes>
0x400373:	cmp	dword ptr [rbp - 0x28], -1
0x400377:	je	0x400383
<Block for 0x400369, 10 bytes>
0x400369:	mov	eax, dword ptr [rbp - 0x24]
0x40036c:	mov	edi, eax
0x40036e:	call	0x500060
<Block for 0x4002da, 26 bytes>
0x4002da:	mov	word ptr [rbp - 0x1e], ax
0x4002de:	lea	rcx, [rbp - 0x20]
0x4002e2:	mov	eax, dword ptr [rbp - 0x24]
0x4002e5:	mov	edx, 0x10
0x4002ea:	mov	rsi, rcx
0x4002ed:	mov	edi, eax
0x4002ef:	call	0x500020
<Block for 0x400379, 10 bytes>
0x400379:	mov	eax, dword ptr [rbp - 0x28]
0x40037c:	mov	edi, eax
0x40037e:	call	0x500060
<Block for 0x4002f4, 5 bytes>
0x4002f4:	cmp	eax, -1
0x4002f7:	je	0x40035c
<Block for 0x40035c, 3 bytes>
0x40035c:	nop	
0x40035d:	jmp	0x400363
<Block for 0x4002f9, 15 bytes>
0x4002f9:	mov	eax, dword ptr [rbp - 0x24]
0x4002fc:	mov	esi, 5
0x400301:	mov	edi, eax
0x400303:	call	0x500028
<Block for 0x400308, 5 bytes>
0x400308:	cmp	eax, -1
0x40030b:	je	0x40035f
<Block for 0x40035f, 3 bytes>
0x40035f:	nop	
0x400360:	jmp	0x400363
<Block for 0x40030d, 20 bytes>
0x40030d:	mov	eax, dword ptr [rbp - 0x24]
0x400310:	mov	edx, 0
0x400315:	mov	esi, 0
0x40031a:	mov	edi, eax
0x40031c:	call	0x500030
<Block for 0x400321, 9 bytes>
0x400321:	mov	dword ptr [rbp - 0x28], eax
0x400324:	cmp	dword ptr [rbp - 0x28], -1
0x400328:	je	0x400362
<Block for 0x40032a, 27 bytes>
0x40032a:	mov	eax, dword ptr [rbp - 0x28]
0x40032d:	mov	ecx, 0
0x400332:	mov	edx, 8
0x400337:	lea	rsi, [rip + 0x1e5]
0x40033e:	mov	edi, eax
0x400340:	call	0x500050
<Block for 0x400362, 1 bytes>
0x400362:	nop	
<Block for 0x400345, 6 bytes>
0x400345:	cmp	rax, -1
0x400349:	jne	0x400363
<Block for 0x40034b, 12 bytes>
0x40034b:	lea	rdi, [rip + 0x1da]
0x400352:	call	0x500058
<Block for 0x400357, 2 bytes>
0x400357:	jmp	0x400363
