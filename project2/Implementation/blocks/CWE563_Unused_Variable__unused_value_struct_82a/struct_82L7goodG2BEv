<Block for 0x40008f, 54 bytes>
0x40008f:	endbr64	
0x400093:	push	rbp
0x400094:	mov	rbp, rsp
0x400097:	push	rbx
0x400098:	sub	rsp, 0x28
0x40009c:	mov	rax, qword ptr fs:[0x28]
0x4000a5:	mov	qword ptr [rbp - 0x18], rax
0x4000a9:	xor	eax, eax
0x4000ab:	mov	dword ptr [rbp - 0x20], 0
0x4000b2:	mov	dword ptr [rbp - 0x1c], 0
0x4000b9:	lea	rax, [rbp - 0x20]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500018
<Block for 0x4000c5, 10 bytes>
0x4000c5:	mov	edi, 8
0x4000ca:	call	0x500000
<Block for 0x4000cf, 11 bytes>
0x4000cf:	mov	rbx, rax
0x4000d2:	mov	rdi, rbx
0x4000d5:	call	0x40021a
<Block for 0x4000da, 30 bytes>
0x4000da:	mov	qword ptr [rbp - 0x28], rbx
0x4000de:	mov	rax, qword ptr [rbp - 0x28]
0x4000e2:	mov	rax, qword ptr [rax]
0x4000e5:	mov	rcx, qword ptr [rax]
0x4000e8:	mov	rdx, qword ptr [rbp - 0x20]
0x4000ec:	mov	rax, qword ptr [rbp - 0x28]
0x4000f0:	mov	rsi, rdx
0x4000f3:	mov	rdi, rax
0x4000f6:	call	rcx
<Block for 0x4000f8, 9 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 0x28]
0x4000fc:	test	rax, rax
0x4000ff:	je	0x40010e
<Block for 0x40010e, 16 bytes>
0x40010e:	nop	
0x40010f:	mov	rax, qword ptr [rbp - 0x18]
0x400113:	xor	rax, qword ptr fs:[0x28]
0x40011c:	je	0x400123
<Block for 0x400101, 13 bytes>
0x400101:	mov	esi, 8
0x400106:	mov	rdi, rax
0x400109:	call	0x500008
<Block for 0x400123, 7 bytes>
0x400123:	add	rsp, 0x28
0x400127:	pop	rbx
0x400128:	pop	rbp
0x400129:	ret	
<Block for 0x40011e, 5 bytes>
0x40011e:	call	0x500010
