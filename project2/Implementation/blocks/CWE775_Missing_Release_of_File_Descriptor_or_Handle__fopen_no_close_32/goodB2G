<Block for 0x400082, 81 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x30
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	lea	rax, [rbp - 0x30]
0x4000a1:	mov	qword ptr [rbp - 0x28], rax
0x4000a5:	lea	rax, [rbp - 0x30]
0x4000a9:	mov	qword ptr [rbp - 0x20], rax
0x4000ad:	mov	qword ptr [rbp - 0x30], 0
0x4000b5:	mov	rax, qword ptr [rbp - 0x28]
0x4000b9:	mov	rax, qword ptr [rax]
0x4000bc:	mov	qword ptr [rbp - 0x18], rax
0x4000c0:	lea	rsi, [rip + 0x65]
0x4000c7:	lea	rdi, [rip + 0x61]
0x4000ce:	call	0x500000
<Block for 0x4000d3, 33 bytes>
0x4000d3:	mov	qword ptr [rbp - 0x18], rax
0x4000d7:	mov	rax, qword ptr [rbp - 0x28]
0x4000db:	mov	rdx, qword ptr [rbp - 0x18]
0x4000df:	mov	qword ptr [rax], rdx
0x4000e2:	mov	rax, qword ptr [rbp - 0x20]
0x4000e6:	mov	rax, qword ptr [rax]
0x4000e9:	mov	qword ptr [rbp - 0x10], rax
0x4000ed:	cmp	qword ptr [rbp - 0x10], 0
0x4000f2:	je	0x400100
<Block for 0x400100, 16 bytes>
0x400100:	nop	
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	xor	rax, qword ptr fs:[0x28]
0x40010e:	je	0x400115
<Block for 0x4000f4, 12 bytes>
0x4000f4:	mov	rax, qword ptr [rbp - 0x10]
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500010
<Block for 0x400115, 2 bytes>
0x400115:	leave	
0x400116:	ret	
<Block for 0x400110, 5 bytes>
0x400110:	call	0x500008
