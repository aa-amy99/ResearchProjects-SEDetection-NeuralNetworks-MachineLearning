<Block for 0x400094, 45 bytes>
0x400094:	endbr64	
0x400098:	push	rbp
0x400099:	mov	rbp, rsp
0x40009c:	sub	rsp, 0x10
0x4000a0:	mov	rax, qword ptr fs:[0x28]
0x4000a9:	mov	qword ptr [rbp - 8], rax
0x4000ad:	xor	eax, eax
0x4000af:	mov	qword ptr [rbp - 0x10], 0
0x4000b7:	mov	edi, 0x64
0x4000bc:	call	0x500000
<Block for 0x4000c1, 13 bytes>
0x4000c1:	mov	qword ptr [rbp - 0x10], rax
0x4000c5:	mov	rax, qword ptr [rbp - 0x10]
0x4000c9:	test	rax, rax
0x4000cc:	jne	0x4000d8
<Block for 0x4000ce, 10 bytes>
0x4000ce:	mov	edi, 0xffffffff
0x4000d3:	call	0x500008
<Block for 0x4000d8, 22 bytes>
0x4000d8:	mov	rax, qword ptr [rbp - 0x10]
0x4000dc:	mov	edx, 0x63
0x4000e1:	mov	esi, 0x41
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x500010
<Block for 0x4000ee, 23 bytes>
0x4000ee:	mov	rax, qword ptr [rbp - 0x10]
0x4000f2:	add	rax, 0x63
0x4000f6:	mov	byte ptr [rax], 0
0x4000f9:	lea	rax, [rbp - 0x10]
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500030
<Block for 0x400105, 16 bytes>
0x400105:	nop	
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	xor	rax, qword ptr fs:[0x28]
0x400113:	je	0x40011a
<Block for 0x40011a, 2 bytes>
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500028
