<Block for 0x4000af, 57 bytes>
0x4000af:	endbr64	
0x4000b3:	push	rbp
0x4000b4:	mov	rbp, rsp
0x4000b7:	sub	rsp, 0x90
0x4000be:	mov	qword ptr [rbp - 0x88], rdi
0x4000c5:	mov	rax, qword ptr fs:[0x28]
0x4000ce:	mov	qword ptr [rbp - 8], rax
0x4000d2:	xor	eax, eax
0x4000d4:	mov	rax, qword ptr [rbp - 0x88]
0x4000db:	mov	esi, 2
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x400160
<Block for 0x4000e8, 29 bytes>
0x4000e8:	mov	rax, qword ptr [rax]
0x4000eb:	mov	qword ptr [rbp - 0x78], rax
0x4000ef:	lea	rax, [rbp - 0x70]
0x4000f3:	mov	edx, 0x63
0x4000f8:	mov	esi, 0x43
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500000
<Block for 0x400105, 16 bytes>
0x400105:	mov	byte ptr [rbp - 0xd], 0
0x400109:	lea	rax, [rbp - 0x70]
0x40010d:	mov	rdi, rax
0x400110:	call	0x500008
<Block for 0x400115, 22 bytes>
0x400115:	mov	rdx, rax
0x400118:	mov	rcx, qword ptr [rbp - 0x78]
0x40011c:	lea	rax, [rbp - 0x70]
0x400120:	mov	rsi, rcx
0x400123:	mov	rdi, rax
0x400126:	call	0x500010
<Block for 0x40012b, 16 bytes>
0x40012b:	mov	byte ptr [rbp - 0xd], 0
0x40012f:	lea	rax, [rbp - 0x70]
0x400133:	mov	rdi, rax
0x400136:	call	0x500018
<Block for 0x40013b, 12 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x78]
0x40013f:	mov	rdi, rax
0x400142:	call	0x500020
<Block for 0x400147, 16 bytes>
0x400147:	nop	
0x400148:	mov	rax, qword ptr [rbp - 8]
0x40014c:	xor	rax, qword ptr fs:[0x28]
0x400155:	je	0x40015c
<Block for 0x40015c, 2 bytes>
0x40015c:	leave	
0x40015d:	ret	
<Block for 0x400157, 5 bytes>
0x400157:	call	0x500028
