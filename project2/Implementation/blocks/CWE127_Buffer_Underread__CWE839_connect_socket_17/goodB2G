<Block for 0x400184, 46 bytes>
0x400184:	endbr64	
0x400188:	push	rbp
0x400189:	mov	rbp, rsp
0x40018c:	sub	rsp, 0x60
0x400190:	mov	rax, qword ptr fs:[0x28]
0x400199:	mov	qword ptr [rbp - 8], rax
0x40019d:	xor	eax, eax
0x40019f:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x4001a6:	mov	dword ptr [rbp - 0x54], 0
0x4001ad:	jmp	0x400288
<Block for 0x400288, 10 bytes>
0x400288:	cmp	dword ptr [rbp - 0x54], 0
0x40028c:	jle	0x4001b2
<Block for 0x4001b2, 27 bytes>
0x4001b2:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x4001b9:	mov	edx, 6
0x4001be:	mov	esi, 1
0x4001c3:	mov	edi, 2
0x4001c8:	call	0x500000
<Block for 0x400292, 9 bytes>
0x400292:	mov	dword ptr [rbp - 0x50], 0
0x400299:	jmp	0x4002f1
<Block for 0x4001cd, 13 bytes>
0x4001cd:	mov	dword ptr [rbp - 0x48], eax
0x4001d0:	cmp	dword ptr [rbp - 0x48], -1
0x4001d4:	je	0x400270
<Block for 0x4002f1, 6 bytes>
0x4002f1:	cmp	dword ptr [rbp - 0x50], 0
0x4002f5:	jle	0x40029b
<Block for 0x400270, 3 bytes>
0x400270:	nop	
0x400271:	jmp	0x400274
<Block for 0x4001da, 22 bytes>
0x4001da:	lea	rax, [rbp - 0x40]
0x4001de:	mov	edx, 0x10
0x4001e3:	mov	esi, 0
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500008
<Block for 0x40029b, 46 bytes>
0x40029b:	mov	qword ptr [rbp - 0x40], 0
0x4002a3:	mov	qword ptr [rbp - 0x38], 0
0x4002ab:	mov	qword ptr [rbp - 0x30], 0
0x4002b3:	mov	qword ptr [rbp - 0x28], 0
0x4002bb:	mov	qword ptr [rbp - 0x20], 0
0x4002c3:	cmp	dword ptr [rbp - 0x4c], 0
0x4002c7:	js	0x4002e1
<Block for 0x4002f7, 16 bytes>
0x4002f7:	nop	
0x4002f8:	mov	rax, qword ptr [rbp - 8]
0x4002fc:	xor	rax, qword ptr fs:[0x28]
0x400305:	je	0x40030c
<Block for 0x400274, 6 bytes>
0x400274:	cmp	dword ptr [rbp - 0x48], -1
0x400278:	je	0x400284
<Block for 0x4001f0, 18 bytes>
0x4001f0:	mov	word ptr [rbp - 0x40], 2
0x4001f6:	lea	rdi, [rip + 0x1e3]
0x4001fd:	call	0x500010
<Block for 0x4002e1, 12 bytes>
0x4002e1:	lea	rdi, [rip + 0x128]
0x4002e8:	call	0x500048
<Block for 0x4002c9, 6 bytes>
0x4002c9:	cmp	dword ptr [rbp - 0x4c], 9
0x4002cd:	jg	0x4002e1
<Block for 0x40030c, 2 bytes>
0x40030c:	leave	
0x40030d:	ret	
<Block for 0x400307, 5 bytes>
0x400307:	call	0x500050
<Block for 0x400284, 14 bytes>
0x400284:	add	dword ptr [rbp - 0x54], 1
0x400288:	cmp	dword ptr [rbp - 0x54], 0
0x40028c:	jle	0x4001b2
<Block for 0x40027a, 10 bytes>
0x40027a:	mov	eax, dword ptr [rbp - 0x48]
0x40027d:	mov	edi, eax
0x40027f:	call	0x500038
<Block for 0x400202, 13 bytes>
0x400202:	mov	dword ptr [rbp - 0x3c], eax
0x400205:	mov	edi, 0x6987
0x40020a:	call	0x500018
<Block for 0x4002ed, 10 bytes>
0x4002ed:	add	dword ptr [rbp - 0x50], 1
0x4002f1:	cmp	dword ptr [rbp - 0x50], 0
0x4002f5:	jle	0x40029b
<Block for 0x4002cf, 16 bytes>
0x4002cf:	mov	eax, dword ptr [rbp - 0x4c]
0x4002d2:	cdqe	
0x4002d4:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002d8:	mov	edi, eax
0x4002da:	call	0x500040
<Block for 0x40020f, 26 bytes>
0x40020f:	mov	word ptr [rbp - 0x3e], ax
0x400213:	lea	rcx, [rbp - 0x40]
0x400217:	mov	eax, dword ptr [rbp - 0x48]
0x40021a:	mov	edx, 0x10
0x40021f:	mov	rsi, rcx
0x400222:	mov	edi, eax
0x400224:	call	0x500020
<Block for 0x4002df, 2 bytes>
0x4002df:	jmp	0x4002ed
<Block for 0x400229, 5 bytes>
0x400229:	cmp	eax, -1
0x40022c:	je	0x400273
<Block for 0x40022e, 24 bytes>
0x40022e:	lea	rsi, [rbp - 0x16]
0x400232:	mov	eax, dword ptr [rbp - 0x48]
0x400235:	mov	ecx, 0
0x40023a:	mov	edx, 0xd
0x40023f:	mov	edi, eax
0x400241:	call	0x500028
<Block for 0x400273, 1 bytes>
0x400273:	nop	
<Block for 0x400246, 9 bytes>
0x400246:	mov	dword ptr [rbp - 0x44], eax
0x400249:	cmp	dword ptr [rbp - 0x44], -1
0x40024d:	je	0x400274
<Block for 0x40024f, 6 bytes>
0x40024f:	cmp	dword ptr [rbp - 0x44], 0
0x400253:	je	0x400274
<Block for 0x400255, 22 bytes>
0x400255:	mov	eax, dword ptr [rbp - 0x44]
0x400258:	cdqe	
0x40025a:	mov	byte ptr [rbp + rax - 0x16], 0
0x40025f:	lea	rax, [rbp - 0x16]
0x400263:	mov	rdi, rax
0x400266:	call	0x500030
<Block for 0x40026b, 5 bytes>
0x40026b:	mov	dword ptr [rbp - 0x4c], eax
0x40026e:	jmp	0x400274
