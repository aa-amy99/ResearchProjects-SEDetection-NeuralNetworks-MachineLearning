<Block for 0x4000e0, 40 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	push	rbx
0x4000e9:	sub	rsp, 0x18
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 0x18], rax
0x4000fa:	xor	eax, eax
0x4000fc:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400103:	call	0x500000
<Block for 0x400108, 7 bytes>
0x400108:	and	eax, 1
0x40010b:	test	eax, eax
0x40010d:	je	0x40012c
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500000
<Block for 0x40010f, 5 bytes>
0x40010f:	call	0x500000
<Block for 0x400131, 10 bytes>
0x400131:	shl	eax, 0x1e
0x400134:	mov	ebx, eax
0x400136:	call	0x500000
<Block for 0x400114, 10 bytes>
0x400114:	shl	eax, 0x1e
0x400117:	mov	ebx, eax
0x400119:	call	0x500000
<Block for 0x40013b, 10 bytes>
0x40013b:	shl	eax, 0xf
0x40013e:	xor	ebx, eax
0x400140:	call	0x500000
<Block for 0x40011e, 10 bytes>
0x40011e:	shl	eax, 0xf
0x400121:	xor	ebx, eax
0x400123:	call	0x500000
<Block for 0x400145, 19 bytes>
0x400145:	xor	eax, ebx
0x400147:	not	eax
0x400149:	mov	dword ptr [rbp - 0x1c], eax
0x40014c:	lea	rax, [rbp - 0x1c]
0x400150:	mov	rdi, rax
0x400153:	call	0x500020
<Block for 0x400128, 4 bytes>
0x400128:	xor	eax, ebx
0x40012a:	jmp	0x400149
<Block for 0x400158, 16 bytes>
0x400158:	nop	
0x400159:	mov	rax, qword ptr [rbp - 0x18]
0x40015d:	xor	rax, qword ptr fs:[0x28]
0x400166:	je	0x40016d
<Block for 0x400149, 15 bytes>
0x400149:	mov	dword ptr [rbp - 0x1c], eax
0x40014c:	lea	rax, [rbp - 0x1c]
0x400150:	mov	rdi, rax
0x400153:	call	0x500020
<Block for 0x40016d, 7 bytes>
0x40016d:	add	rsp, 0x18
0x400171:	pop	rbx
0x400172:	pop	rbp
0x400173:	ret	
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500010
