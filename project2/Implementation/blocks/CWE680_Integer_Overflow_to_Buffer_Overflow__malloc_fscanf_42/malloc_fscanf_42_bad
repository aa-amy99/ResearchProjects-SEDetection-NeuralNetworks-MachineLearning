<Block for 0x400033, 29 bytes>
0x400033:	endbr64	
0x400037:	push	rbp
0x400038:	mov	rbp, rsp
0x40003b:	sub	rsp, 0x20
0x40003f:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400046:	mov	eax, dword ptr [rbp - 0x14]
0x400049:	mov	edi, eax
0x40004b:	call	0x400000
<Block for 0x400050, 20 bytes>
0x400050:	mov	dword ptr [rbp - 0x14], eax
0x400053:	mov	eax, dword ptr [rbp - 0x14]
0x400056:	cdqe	
0x400058:	shl	rax, 2
0x40005c:	mov	rdi, rax
0x40005f:	call	0x500010
<Block for 0x400064, 11 bytes>
0x400064:	mov	qword ptr [rbp - 8], rax
0x400068:	cmp	qword ptr [rbp - 8], 0
0x40006d:	jne	0x400079
<Block for 0x40006f, 10 bytes>
0x40006f:	mov	edi, 0xffffffff
0x400074:	call	0x500018
<Block for 0x400079, 10 bytes>
0x400079:	mov	qword ptr [rbp - 0x10], 0
0x400081:	jmp	0x4000a1
<Block for 0x4000a1, 11 bytes>
0x4000a1:	mov	eax, dword ptr [rbp - 0x14]
0x4000a4:	cdqe	
0x4000a6:	cmp	qword ptr [rbp - 0x10], rax
0x4000aa:	jb	0x400083
<Block for 0x400083, 41 bytes>
0x400083:	mov	rax, qword ptr [rbp - 0x10]
0x400087:	lea	rdx, [rax*4]
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	add	rax, rdx
0x400096:	mov	dword ptr [rax], 0
0x40009c:	add	qword ptr [rbp - 0x10], 1
0x4000a1:	mov	eax, dword ptr [rbp - 0x14]
0x4000a4:	cdqe	
0x4000a6:	cmp	qword ptr [rbp - 0x10], rax
0x4000aa:	jb	0x400083
<Block for 0x4000ac, 13 bytes>
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	mov	eax, dword ptr [rax]
0x4000b2:	mov	edi, eax
0x4000b4:	call	0x500020
<Block for 0x4000b9, 12 bytes>
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500028
<Block for 0x4000c5, 3 bytes>
0x4000c5:	nop	
0x4000c6:	leave	
0x4000c7:	ret	
