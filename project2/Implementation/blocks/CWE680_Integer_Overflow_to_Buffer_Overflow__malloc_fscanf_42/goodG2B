<Block for 0x4000df, 29 bytes>
0x4000df:	endbr64	
0x4000e3:	push	rbp
0x4000e4:	mov	rbp, rsp
0x4000e7:	sub	rsp, 0x20
0x4000eb:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x4000f2:	mov	eax, dword ptr [rbp - 0x14]
0x4000f5:	mov	edi, eax
0x4000f7:	call	0x4000c8
<Block for 0x4000fc, 20 bytes>
0x4000fc:	mov	dword ptr [rbp - 0x14], eax
0x4000ff:	mov	eax, dword ptr [rbp - 0x14]
0x400102:	cdqe	
0x400104:	shl	rax, 2
0x400108:	mov	rdi, rax
0x40010b:	call	0x500010
<Block for 0x400110, 11 bytes>
0x400110:	mov	qword ptr [rbp - 8], rax
0x400114:	cmp	qword ptr [rbp - 8], 0
0x400119:	jne	0x400125
<Block for 0x40011b, 10 bytes>
0x40011b:	mov	edi, 0xffffffff
0x400120:	call	0x500018
<Block for 0x400125, 10 bytes>
0x400125:	mov	qword ptr [rbp - 0x10], 0
0x40012d:	jmp	0x40014d
<Block for 0x40014d, 11 bytes>
0x40014d:	mov	eax, dword ptr [rbp - 0x14]
0x400150:	cdqe	
0x400152:	cmp	qword ptr [rbp - 0x10], rax
0x400156:	jb	0x40012f
<Block for 0x40012f, 41 bytes>
0x40012f:	mov	rax, qword ptr [rbp - 0x10]
0x400133:	lea	rdx, [rax*4]
0x40013b:	mov	rax, qword ptr [rbp - 8]
0x40013f:	add	rax, rdx
0x400142:	mov	dword ptr [rax], 0
0x400148:	add	qword ptr [rbp - 0x10], 1
0x40014d:	mov	eax, dword ptr [rbp - 0x14]
0x400150:	cdqe	
0x400152:	cmp	qword ptr [rbp - 0x10], rax
0x400156:	jb	0x40012f
<Block for 0x400158, 13 bytes>
0x400158:	mov	rax, qword ptr [rbp - 8]
0x40015c:	mov	eax, dword ptr [rax]
0x40015e:	mov	edi, eax
0x400160:	call	0x500020
<Block for 0x400165, 12 bytes>
0x400165:	mov	rax, qword ptr [rbp - 8]
0x400169:	mov	rdi, rax
0x40016c:	call	0x500028
<Block for 0x400171, 3 bytes>
0x400171:	nop	
0x400172:	leave	
0x400173:	ret	
