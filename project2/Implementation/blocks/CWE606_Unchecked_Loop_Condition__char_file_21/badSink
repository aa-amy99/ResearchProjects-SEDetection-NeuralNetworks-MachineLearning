<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	eax, dword ptr [rip + 0x727]
0x400025:	test	eax, eax
0x400027:	je	0x400074
<Block for 0x400074, 16 bytes>
0x400074:	nop	
0x400075:	mov	rax, qword ptr [rbp - 8]
0x400079:	xor	rax, qword ptr fs:[0x28]
0x400082:	je	0x400089
<Block for 0x400029, 28 bytes>
0x400029:	lea	rdx, [rbp - 0x14]
0x40002d:	mov	rax, qword ptr [rbp - 0x28]
0x400031:	lea	rsi, [rip + 0x724]
0x400038:	mov	rdi, rax
0x40003b:	mov	eax, 0
0x400040:	call	0x500000
<Block for 0x400089, 2 bytes>
0x400089:	leave	
0x40008a:	ret	
<Block for 0x400084, 5 bytes>
0x400084:	call	0x500010
<Block for 0x400045, 5 bytes>
0x400045:	cmp	eax, 1
0x400048:	jne	0x400074
<Block for 0x40004a, 16 bytes>
0x40004a:	mov	dword ptr [rbp - 0xc], 0
0x400051:	mov	dword ptr [rbp - 0x10], 0
0x400058:	jmp	0x400062
<Block for 0x400062, 8 bytes>
0x400062:	mov	eax, dword ptr [rbp - 0x14]
0x400065:	cmp	dword ptr [rbp - 0x10], eax
0x400068:	jl	0x40005a
<Block for 0x40005a, 16 bytes>
0x40005a:	add	dword ptr [rbp - 0xc], 1
0x40005e:	add	dword ptr [rbp - 0x10], 1
0x400062:	mov	eax, dword ptr [rbp - 0x14]
0x400065:	cmp	dword ptr [rbp - 0x10], eax
0x400068:	jl	0x40005a
<Block for 0x40006a, 10 bytes>
0x40006a:	mov	eax, dword ptr [rbp - 0xc]
0x40006d:	mov	edi, eax
0x40006f:	call	0x500008
