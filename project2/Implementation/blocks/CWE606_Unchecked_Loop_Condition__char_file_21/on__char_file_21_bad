<Block for 0x40008b, 159 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	sub	rsp, 0x90
0x40009a:	mov	rax, qword ptr fs:[0x28]
0x4000a3:	mov	qword ptr [rbp - 8], rax
0x4000a7:	xor	eax, eax
0x4000a9:	mov	qword ptr [rbp - 0x70], 0
0x4000b1:	mov	qword ptr [rbp - 0x68], 0
0x4000b9:	mov	qword ptr [rbp - 0x60], 0
0x4000c1:	mov	qword ptr [rbp - 0x58], 0
0x4000c9:	mov	qword ptr [rbp - 0x50], 0
0x4000d1:	mov	qword ptr [rbp - 0x48], 0
0x4000d9:	mov	qword ptr [rbp - 0x40], 0
0x4000e1:	mov	qword ptr [rbp - 0x38], 0
0x4000e9:	mov	qword ptr [rbp - 0x30], 0
0x4000f1:	mov	qword ptr [rbp - 0x28], 0
0x4000f9:	mov	qword ptr [rbp - 0x20], 0
0x400101:	mov	qword ptr [rbp - 0x18], 0
0x400109:	mov	dword ptr [rbp - 0x10], 0
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	qword ptr [rbp - 0x88], rax
0x40011b:	mov	rax, qword ptr [rbp - 0x88]
0x400122:	mov	rdi, rax
0x400125:	call	0x500018
<Block for 0x40012a, 19 bytes>
0x40012a:	mov	qword ptr [rbp - 0x80], rax
0x40012e:	mov	eax, 0x64
0x400133:	sub	rax, qword ptr [rbp - 0x80]
0x400137:	cmp	rax, 1
0x40013b:	jbe	0x4001b6
<Block for 0x4001b6, 25 bytes>
0x4001b6:	mov	dword ptr [rip + 0x58c], 1
0x4001c0:	mov	rax, qword ptr [rbp - 0x88]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x400000
<Block for 0x40013d, 19 bytes>
0x40013d:	lea	rsi, [rip + 0x61b]
0x400144:	lea	rdi, [rip + 0x616]
0x40014b:	call	0x500020
<Block for 0x4001cf, 16 bytes>
0x4001cf:	nop	
0x4001d0:	mov	rax, qword ptr [rbp - 8]
0x4001d4:	xor	rax, qword ptr fs:[0x28]
0x4001dd:	je	0x4001e4
<Block for 0x400150, 11 bytes>
0x400150:	mov	qword ptr [rbp - 0x78], rax
0x400154:	cmp	qword ptr [rbp - 0x78], 0
0x400159:	je	0x4001b6
<Block for 0x4001e4, 2 bytes>
0x4001e4:	leave	
0x4001e5:	ret	
<Block for 0x4001df, 5 bytes>
0x4001df:	call	0x500010
<Block for 0x40015b, 45 bytes>
0x40015b:	mov	rax, qword ptr [rbp - 0x80]
0x40015f:	mov	edx, 0x64
0x400164:	sub	edx, eax
0x400166:	mov	eax, edx
0x400168:	mov	esi, eax
0x40016a:	mov	rdx, qword ptr [rbp - 0x88]
0x400171:	mov	rax, qword ptr [rbp - 0x80]
0x400175:	lea	rcx, [rdx + rax]
0x400179:	mov	rax, qword ptr [rbp - 0x78]
0x40017d:	mov	rdx, rax
0x400180:	mov	rdi, rcx
0x400183:	call	0x500028
<Block for 0x400188, 5 bytes>
0x400188:	test	rax, rax
0x40018b:	jne	0x4001aa
<Block for 0x40018d, 12 bytes>
0x40018d:	lea	rdi, [rip + 0x5db]
0x400194:	call	0x500030
<Block for 0x4001aa, 12 bytes>
0x4001aa:	mov	rax, qword ptr [rbp - 0x78]
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x500038
<Block for 0x400199, 29 bytes>
0x400199:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a0:	mov	rax, qword ptr [rbp - 0x80]
0x4001a4:	add	rax, rdx
0x4001a7:	mov	byte ptr [rax], 0
0x4001aa:	mov	rax, qword ptr [rbp - 0x78]
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x500038
