<Block for 0x400050, 21 bytes>
0x400050:	endbr64	
0x400054:	push	rbp
0x400055:	mov	rbp, rsp
0x400058:	sub	rsp, 0x10
0x40005c:	mov	eax, 0
0x400061:	test	eax, eax
0x400063:	je	0x400073
<Block for 0x400073, 5 bytes>
0x400073:	call	0x500000
<Block for 0x400065, 12 bytes>
0x400065:	lea	rdi, [rip + 0xf4]
0x40006c:	call	0x500018
<Block for 0x400078, 23 bytes>
0x400078:	mov	dword ptr [rax], 0
0x40007e:	mov	rax, qword ptr [rip + 0x103]
0x400085:	movq	xmm0, rax
0x40008a:	call	0x500008
<Block for 0x400071, 2 bytes>
0x400071:	jmp	0x4000c8
<Block for 0x40008f, 14 bytes>
0x40008f:	movq	rax, xmm0
0x400094:	mov	qword ptr [rbp - 8], rax
0x400098:	call	0x500000
<Block for 0x4000c8, 3 bytes>
0x4000c8:	nop	
0x4000c9:	leave	
0x4000ca:	ret	
<Block for 0x40009d, 7 bytes>
0x40009d:	mov	eax, dword ptr [rax]
0x40009f:	cmp	eax, 0x21
0x4000a2:	jne	0x4000ba
<Block for 0x4000a4, 12 bytes>
0x4000a4:	lea	rdi, [rip + 0xca]
0x4000ab:	call	0x500018
<Block for 0x4000ba, 14 bytes>
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	movq	xmm0, rax
0x4000c3:	call	0x500010
<Block for 0x4000b0, 10 bytes>
0x4000b0:	mov	edi, 1
0x4000b5:	call	0x500020
