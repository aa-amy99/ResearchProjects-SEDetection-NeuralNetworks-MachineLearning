<Block for 0x400072, 17 bytes>
0x400072:	endbr64	
0x400076:	push	rbp
0x400077:	mov	rbp, rsp
0x40007a:	sub	rsp, 0x10
0x40007e:	call	0x40000f
<Block for 0x400083, 9 bytes>
0x400083:	test	eax, eax
0x400085:	setne	al
0x400088:	test	al, al
0x40008a:	je	0x40009a
<Block for 0x40009a, 17 bytes>
0x40009a:	mov	dword ptr [rbp - 0x10], 5
0x4000a1:	mov	edi, 4
0x4000a6:	call	0x500000
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0xca]
0x400093:	call	0x500018
<Block for 0x4000ab, 32 bytes>
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	mov	edx, dword ptr [rbp - 0x10]
0x4000b6:	mov	dword ptr [rax], edx
0x4000b8:	mov	rax, qword ptr [rbp - 8]
0x4000bc:	mov	eax, dword ptr [rax]
0x4000be:	mov	dword ptr [rbp - 0xc], eax
0x4000c1:	mov	eax, dword ptr [rbp - 0xc]
0x4000c4:	mov	edi, eax
0x4000c6:	call	0x500010
<Block for 0x400098, 2 bytes>
0x400098:	jmp	0x4000e1
<Block for 0x4000cb, 9 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 8]
0x4000cf:	test	rax, rax
0x4000d2:	je	0x4000e1
<Block for 0x4000e1, 3 bytes>
0x4000e1:	nop	
0x4000e2:	leave	
0x4000e3:	ret	
<Block for 0x4000d4, 13 bytes>
0x4000d4:	mov	esi, 4
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500008
