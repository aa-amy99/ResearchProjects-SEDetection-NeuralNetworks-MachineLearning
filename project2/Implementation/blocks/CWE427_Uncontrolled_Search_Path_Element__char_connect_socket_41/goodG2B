<Block for 0x40026c, 82 bytes>
0x40026c:	endbr64	
0x400270:	push	rbp
0x400271:	mov	rbp, rsp
0x400274:	sub	rsp, 0x120
0x40027b:	mov	rax, qword ptr fs:[0x28]
0x400284:	mov	qword ptr [rbp - 8], rax
0x400288:	xor	eax, eax
0x40028a:	movabs	rax, 0x3d48544150
0x400294:	mov	edx, 0
0x400299:	mov	qword ptr [rbp - 0x110], rax
0x4002a0:	mov	qword ptr [rbp - 0x108], rdx
0x4002a7:	lea	rdx, [rbp - 0x100]
0x4002ae:	mov	eax, 0
0x4002b3:	mov	ecx, 0x1d
0x4002b8:	mov	rdi, rdx
0x4002bb:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002be, 51 bytes>
0x4002be:	mov	rdx, rdi
0x4002c1:	mov	word ptr [rdx], ax
0x4002c4:	add	rdx, 2
0x4002c8:	lea	rax, [rbp - 0x110]
0x4002cf:	mov	qword ptr [rbp - 0x118], rax
0x4002d6:	mov	rax, qword ptr [rbp - 0x118]
0x4002dd:	mov	rcx, -1
0x4002e4:	mov	rdx, rax
0x4002e7:	mov	eax, 0
0x4002ec:	mov	rdi, rdx
0x4002ef:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002bb, 3 bytes>
0x4002bb:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002f1, 45 bytes>
0x4002f1:	mov	rax, rcx
0x4002f4:	not	rax
0x4002f7:	lea	rdx, [rax - 1]
0x4002fb:	mov	rax, qword ptr [rbp - 0x118]
0x400302:	add	rax, rdx
0x400305:	mov	dword ptr [rax], 0x6e69622f
0x40030b:	mov	byte ptr [rax + 4], 0
0x40030f:	mov	rax, qword ptr [rbp - 0x118]
0x400316:	mov	rdi, rax
0x400319:	call	0x40024d
<Block for 0x4002ef, 2 bytes>
0x4002ef:	repne scasb	al, byte ptr [rdi]
<Block for 0x40031e, 16 bytes>
0x40031e:	nop	
0x40031f:	mov	rax, qword ptr [rbp - 8]
0x400323:	xor	rax, qword ptr fs:[0x28]
0x40032c:	je	0x400333
<Block for 0x400333, 2 bytes>
0x400333:	leave	
0x400334:	ret	
<Block for 0x40032e, 5 bytes>
0x40032e:	call	0x500050
