<Block for 0x400206, 88 bytes>
0x400206:	endbr64	
0x40020a:	push	rbp
0x40020b:	mov	rbp, rsp
0x40020e:	sub	rsp, 0x40
0x400212:	mov	rax, qword ptr fs:[0x28]
0x40021b:	mov	qword ptr [rbp - 8], rax
0x40021f:	xor	eax, eax
0x400221:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400228:	mov	dword ptr [rbp - 0x34], 7
0x40022f:	nop	
0x400230:	mov	qword ptr [rbp - 0x30], 0
0x400238:	mov	qword ptr [rbp - 0x28], 0
0x400240:	mov	qword ptr [rbp - 0x20], 0
0x400248:	mov	qword ptr [rbp - 0x18], 0
0x400250:	mov	qword ptr [rbp - 0x10], 0
0x400258:	cmp	dword ptr [rbp - 0x34], 9
0x40025c:	jg	0x400270
<Block for 0x40025e, 16 bytes>
0x40025e:	mov	eax, dword ptr [rbp - 0x34]
0x400261:	cdqe	
0x400263:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400267:	mov	edi, eax
0x400269:	call	0x500010
<Block for 0x400270, 12 bytes>
0x400270:	lea	rdi, [rip + 0xe9]
0x400277:	call	0x500018
<Block for 0x40026e, 2 bytes>
0x40026e:	jmp	0x40027c
<Block for 0x40027c, 17 bytes>
0x40027c:	nop	
0x40027d:	nop	
0x40027e:	mov	rax, qword ptr [rbp - 8]
0x400282:	xor	rax, qword ptr fs:[0x28]
0x40028b:	je	0x400292
<Block for 0x400292, 2 bytes>
0x400292:	leave	
0x400293:	ret	
<Block for 0x40028d, 5 bytes>
0x40028d:	call	0x500020
