<Block for 0x400070, 61 bytes>
0x400070:	endbr64	
0x400074:	push	rbp
0x400075:	mov	rbp, rsp
0x400078:	sub	rsp, 0x20
0x40007c:	mov	rax, qword ptr fs:[0x28]
0x400085:	mov	qword ptr [rbp - 8], rax
0x400089:	xor	eax, eax
0x40008b:	mov	dword ptr [rbp - 0x1c], 0x64
0x400092:	mov	dword ptr [rbp - 0x10], 0
0x400099:	mov	dword ptr [rbp - 0xc], 0
0x4000a0:	mov	dword ptr [rbp - 0x20], 0
0x4000a7:	cmp	dword ptr [rbp - 0x20], 0
0x4000ab:	jg	0x4000bb
<Block for 0x4000ad, 14 bytes>
0x4000ad:	lea	rax, [rbp - 0x10]
0x4000b1:	mov	qword ptr [rbp - 0x18], rax
0x4000b5:	add	dword ptr [rbp - 0x20], 1
0x4000b9:	jmp	0x4000a7
<Block for 0x4000bb, 14 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x18]
0x4000bf:	mov	eax, dword ptr [rax + 4]
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500000
<Block for 0x4000a7, 6 bytes>
0x4000a7:	cmp	dword ptr [rbp - 0x20], 0
0x4000ab:	jg	0x4000bb
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500008
