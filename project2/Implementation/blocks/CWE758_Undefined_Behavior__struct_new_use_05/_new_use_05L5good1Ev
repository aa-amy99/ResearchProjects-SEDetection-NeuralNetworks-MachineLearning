<Block for 0x40005c, 37 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	sub	rsp, 0x20
0x400068:	mov	rax, qword ptr fs:[0x28]
0x400071:	mov	qword ptr [rbp - 8], rax
0x400075:	xor	eax, eax
0x400077:	mov	eax, dword ptr [rip + 0x137]
0x40007d:	test	eax, eax
0x40007f:	je	0x40008f
<Block for 0x40008f, 24 bytes>
0x40008f:	mov	dword ptr [rbp - 0x18], 1
0x400096:	mov	dword ptr [rbp - 0x14], 2
0x40009d:	mov	edi, 8
0x4000a2:	call	0x500000
<Block for 0x400081, 12 bytes>
0x400081:	lea	rdi, [rip + 0x130]
0x400088:	call	0x500018
<Block for 0x4000a7, 36 bytes>
0x4000a7:	mov	qword ptr [rbp - 0x20], rax
0x4000ab:	mov	rax, qword ptr [rbp - 0x20]
0x4000af:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b3:	mov	qword ptr [rax], rdx
0x4000b6:	mov	rax, qword ptr [rbp - 0x20]
0x4000ba:	mov	rax, qword ptr [rax]
0x4000bd:	mov	qword ptr [rbp - 0x10], rax
0x4000c1:	mov	eax, dword ptr [rbp - 0x10]
0x4000c4:	mov	edi, eax
0x4000c6:	call	0x500010
<Block for 0x40008d, 2 bytes>
0x40008d:	jmp	0x4000eb
<Block for 0x4000cb, 10 bytes>
0x4000cb:	mov	eax, dword ptr [rbp - 0xc]
0x4000ce:	mov	edi, eax
0x4000d0:	call	0x500010
<Block for 0x4000eb, 16 bytes>
0x4000eb:	nop	
0x4000ec:	mov	rax, qword ptr [rbp - 8]
0x4000f0:	xor	rax, qword ptr fs:[0x28]
0x4000f9:	je	0x400100
<Block for 0x4000d5, 9 bytes>
0x4000d5:	mov	rax, qword ptr [rbp - 0x20]
0x4000d9:	test	rax, rax
0x4000dc:	je	0x4000eb
<Block for 0x400100, 2 bytes>
0x400100:	leave	
0x400101:	ret	
<Block for 0x4000fb, 5 bytes>
0x4000fb:	call	0x500020
<Block for 0x4000de, 13 bytes>
0x4000de:	mov	esi, 8
0x4000e3:	mov	rdi, rax
0x4000e6:	call	0x500008
