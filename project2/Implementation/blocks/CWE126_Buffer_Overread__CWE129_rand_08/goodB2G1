<Block for 0x40010e, 45 bytes>
0x40010e:	endbr64	
0x400112:	push	rbp
0x400113:	mov	rbp, rsp
0x400116:	push	rbx
0x400117:	sub	rsp, 0x48
0x40011b:	mov	rax, qword ptr fs:[0x28]
0x400124:	mov	qword ptr [rbp - 0x18], rax
0x400128:	xor	eax, eax
0x40012a:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400131:	mov	eax, 0
0x400136:	call	0x400000
<Block for 0x40013b, 4 bytes>
0x40013b:	test	eax, eax
0x40013d:	je	0x400188
<Block for 0x400188, 10 bytes>
0x400188:	mov	eax, 0
0x40018d:	call	0x40000f
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500000
<Block for 0x400192, 4 bytes>
0x400192:	test	eax, eax
0x400194:	je	0x4001a4
<Block for 0x400144, 7 bytes>
0x400144:	and	eax, 1
0x400147:	test	eax, eax
0x400149:	je	0x400168
<Block for 0x4001a4, 46 bytes>
0x4001a4:	mov	qword ptr [rbp - 0x40], 0
0x4001ac:	mov	qword ptr [rbp - 0x38], 0
0x4001b4:	mov	qword ptr [rbp - 0x30], 0
0x4001bc:	mov	qword ptr [rbp - 0x28], 0
0x4001c4:	mov	qword ptr [rbp - 0x20], 0
0x4001cc:	cmp	dword ptr [rbp - 0x44], 0
0x4001d0:	js	0x4001ea
<Block for 0x400196, 12 bytes>
0x400196:	lea	rdi, [rip + 0x322]
0x40019d:	call	0x500010
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500000
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500000
<Block for 0x4001ea, 12 bytes>
0x4001ea:	lea	rdi, [rip + 0x2e7]
0x4001f1:	call	0x500010
<Block for 0x4001d2, 6 bytes>
0x4001d2:	cmp	dword ptr [rbp - 0x44], 9
0x4001d6:	jg	0x4001ea
<Block for 0x4001a2, 2 bytes>
0x4001a2:	jmp	0x4001f6
<Block for 0x40016d, 10 bytes>
0x40016d:	shl	eax, 0x1e
0x400170:	mov	ebx, eax
0x400172:	call	0x500000
<Block for 0x400150, 10 bytes>
0x400150:	shl	eax, 0x1e
0x400153:	mov	ebx, eax
0x400155:	call	0x500000
<Block for 0x4001f6, 16 bytes>
0x4001f6:	nop	
0x4001f7:	mov	rax, qword ptr [rbp - 0x18]
0x4001fb:	xor	rax, qword ptr fs:[0x28]
0x400204:	je	0x40020b
<Block for 0x4001d8, 16 bytes>
0x4001d8:	mov	eax, dword ptr [rbp - 0x44]
0x4001db:	cdqe	
0x4001dd:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001e1:	mov	edi, eax
0x4001e3:	call	0x500008
<Block for 0x400177, 10 bytes>
0x400177:	shl	eax, 0xf
0x40017a:	xor	ebx, eax
0x40017c:	call	0x500000
<Block for 0x40015a, 10 bytes>
0x40015a:	shl	eax, 0xf
0x40015d:	xor	ebx, eax
0x40015f:	call	0x500000
<Block for 0x40020b, 7 bytes>
0x40020b:	add	rsp, 0x48
0x40020f:	pop	rbx
0x400210:	pop	rbp
0x400211:	ret	
<Block for 0x400206, 5 bytes>
0x400206:	call	0x500018
<Block for 0x4001e8, 2 bytes>
0x4001e8:	jmp	0x4001f6
<Block for 0x400181, 17 bytes>
0x400181:	xor	eax, ebx
0x400183:	not	eax
0x400185:	mov	dword ptr [rbp - 0x44], eax
0x400188:	mov	eax, 0
0x40018d:	call	0x40000f
<Block for 0x400164, 4 bytes>
0x400164:	xor	eax, ebx
0x400166:	jmp	0x400185
<Block for 0x400185, 13 bytes>
0x400185:	mov	dword ptr [rbp - 0x44], eax
0x400188:	mov	eax, 0
0x40018d:	call	0x40000f
