<Block for 0x400157, 87 bytes>
0x400157:	endbr64	
0x40015b:	push	rbp
0x40015c:	mov	rbp, rsp
0x40015f:	sub	rsp, 0x40
0x400163:	mov	rax, qword ptr fs:[0x28]
0x40016c:	mov	qword ptr [rbp - 8], rax
0x400170:	xor	eax, eax
0x400172:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400179:	mov	dword ptr [rbp - 0x34], 7
0x400180:	mov	qword ptr [rbp - 0x30], 0
0x400188:	mov	qword ptr [rbp - 0x28], 0
0x400190:	mov	qword ptr [rbp - 0x20], 0
0x400198:	mov	qword ptr [rbp - 0x18], 0
0x4001a0:	mov	qword ptr [rbp - 0x10], 0
0x4001a8:	cmp	dword ptr [rbp - 0x34], 9
0x4001ac:	jg	0x4001c0
<Block for 0x4001ae, 16 bytes>
0x4001ae:	mov	eax, dword ptr [rbp - 0x34]
0x4001b1:	cdqe	
0x4001b3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001b7:	mov	edi, eax
0x4001b9:	call	0x500040
<Block for 0x4001c0, 12 bytes>
0x4001c0:	lea	rdi, [rip + 0x1a9]
0x4001c7:	call	0x500048
<Block for 0x4001be, 2 bytes>
0x4001be:	jmp	0x4001cc
<Block for 0x4001cc, 16 bytes>
0x4001cc:	nop	
0x4001cd:	mov	rax, qword ptr [rbp - 8]
0x4001d1:	xor	rax, qword ptr fs:[0x28]
0x4001da:	je	0x4001e1
<Block for 0x4001e1, 2 bytes>
0x4001e1:	leave	
0x4001e2:	ret	
<Block for 0x4001dc, 5 bytes>
0x4001dc:	call	0x500050
