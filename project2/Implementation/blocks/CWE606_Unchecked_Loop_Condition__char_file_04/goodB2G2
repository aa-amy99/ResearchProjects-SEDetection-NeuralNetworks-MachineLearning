<Block for 0x400397, 157 bytes>
0x400397:	endbr64	
0x40039b:	push	rbp
0x40039c:	mov	rbp, rsp
0x40039f:	sub	rsp, 0xa0
0x4003a6:	mov	rax, qword ptr fs:[0x28]
0x4003af:	mov	qword ptr [rbp - 8], rax
0x4003b3:	xor	eax, eax
0x4003b5:	mov	qword ptr [rbp - 0x70], 0
0x4003bd:	mov	qword ptr [rbp - 0x68], 0
0x4003c5:	mov	qword ptr [rbp - 0x60], 0
0x4003cd:	mov	qword ptr [rbp - 0x58], 0
0x4003d5:	mov	qword ptr [rbp - 0x50], 0
0x4003dd:	mov	qword ptr [rbp - 0x48], 0
0x4003e5:	mov	qword ptr [rbp - 0x40], 0
0x4003ed:	mov	qword ptr [rbp - 0x38], 0
0x4003f5:	mov	qword ptr [rbp - 0x30], 0
0x4003fd:	mov	qword ptr [rbp - 0x28], 0
0x400405:	mov	qword ptr [rbp - 0x20], 0
0x40040d:	mov	qword ptr [rbp - 0x18], 0
0x400415:	mov	dword ptr [rbp - 0x10], 0
0x40041c:	lea	rax, [rbp - 0x70]
0x400420:	mov	qword ptr [rbp - 0x88], rax
0x400427:	mov	eax, 1
0x40042c:	test	eax, eax
0x40042e:	je	0x4004cf
<Block for 0x4004cf, 9 bytes>
0x4004cf:	mov	eax, 1
0x4004d4:	test	eax, eax
0x4004d6:	je	0x40054b
<Block for 0x400434, 15 bytes>
0x400434:	mov	rax, qword ptr [rbp - 0x88]
0x40043b:	mov	rdi, rax
0x40043e:	call	0x500000
<Block for 0x40054b, 16 bytes>
0x40054b:	nop	
0x40054c:	mov	rax, qword ptr [rbp - 8]
0x400550:	xor	rax, qword ptr fs:[0x28]
0x400559:	je	0x400560
<Block for 0x4004d8, 34 bytes>
0x4004d8:	lea	rdx, [rbp - 0x94]
0x4004df:	mov	rax, qword ptr [rbp - 0x88]
0x4004e6:	lea	rsi, [rip + 0x306]
0x4004ed:	mov	rdi, rax
0x4004f0:	mov	eax, 0
0x4004f5:	call	0x500028
<Block for 0x400443, 19 bytes>
0x400443:	mov	qword ptr [rbp - 0x80], rax
0x400447:	mov	eax, 0x64
0x40044c:	sub	rax, qword ptr [rbp - 0x80]
0x400450:	cmp	rax, 1
0x400454:	jbe	0x4004cf
<Block for 0x400560, 2 bytes>
0x400560:	leave	
0x400561:	ret	
<Block for 0x40055b, 5 bytes>
0x40055b:	call	0x500038
<Block for 0x4004fa, 5 bytes>
0x4004fa:	cmp	eax, 1
0x4004fd:	jne	0x40054b
<Block for 0x400456, 19 bytes>
0x400456:	lea	rsi, [rip + 0x377]
0x40045d:	lea	rdi, [rip + 0x372]
0x400464:	call	0x500008
<Block for 0x4004ff, 13 bytes>
0x4004ff:	mov	eax, dword ptr [rbp - 0x94]
0x400505:	cmp	eax, 0x270f
0x40050a:	jg	0x40054b
<Block for 0x400469, 11 bytes>
0x400469:	mov	qword ptr [rbp - 0x78], rax
0x40046d:	cmp	qword ptr [rbp - 0x78], 0
0x400472:	je	0x4004cf
<Block for 0x40050c, 22 bytes>
0x40050c:	mov	dword ptr [rbp - 0x8c], 0
0x400516:	mov	dword ptr [rbp - 0x90], 0
0x400520:	jmp	0x400530
<Block for 0x400474, 45 bytes>
0x400474:	mov	rax, qword ptr [rbp - 0x80]
0x400478:	mov	edx, 0x64
0x40047d:	sub	edx, eax
0x40047f:	mov	eax, edx
0x400481:	mov	esi, eax
0x400483:	mov	rdx, qword ptr [rbp - 0x88]
0x40048a:	mov	rax, qword ptr [rbp - 0x80]
0x40048e:	lea	rcx, [rdx + rax]
0x400492:	mov	rax, qword ptr [rbp - 0x78]
0x400496:	mov	rdx, rax
0x400499:	mov	rdi, rcx
0x40049c:	call	0x500010
<Block for 0x400530, 14 bytes>
0x400530:	mov	eax, dword ptr [rbp - 0x94]
0x400536:	cmp	dword ptr [rbp - 0x90], eax
0x40053c:	jl	0x400522
<Block for 0x4004a1, 5 bytes>
0x4004a1:	test	rax, rax
0x4004a4:	jne	0x4004c3
<Block for 0x400522, 28 bytes>
0x400522:	add	dword ptr [rbp - 0x8c], 1
0x400529:	add	dword ptr [rbp - 0x90], 1
0x400530:	mov	eax, dword ptr [rbp - 0x94]
0x400536:	cmp	dword ptr [rbp - 0x90], eax
0x40053c:	jl	0x400522
<Block for 0x40053e, 13 bytes>
0x40053e:	mov	eax, dword ptr [rbp - 0x8c]
0x400544:	mov	edi, eax
0x400546:	call	0x500030
<Block for 0x4004a6, 12 bytes>
0x4004a6:	lea	rdi, [rip + 0x337]
0x4004ad:	call	0x500018
<Block for 0x4004c3, 12 bytes>
0x4004c3:	mov	rax, qword ptr [rbp - 0x78]
0x4004c7:	mov	rdi, rax
0x4004ca:	call	0x500020
<Block for 0x4004b2, 29 bytes>
0x4004b2:	mov	rdx, qword ptr [rbp - 0x88]
0x4004b9:	mov	rax, qword ptr [rbp - 0x80]
0x4004bd:	add	rax, rdx
0x4004c0:	mov	byte ptr [rax], 0
0x4004c3:	mov	rax, qword ptr [rbp - 0x78]
0x4004c7:	mov	rdi, rax
0x4004ca:	call	0x500020
