<Block for 0x4000e3, 37 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	add	rsp, -0x80
0x4000ef:	mov	rax, qword ptr fs:[0x28]
0x4000f8:	mov	qword ptr [rbp - 8], rax
0x4000fc:	xor	eax, eax
0x4000fe:	mov	eax, 0
0x400103:	call	0x500028
<Block for 0x400108, 4 bytes>
0x400108:	test	eax, eax
0x40010a:	je	0x40011d
<Block for 0x40011d, 123 bytes>
0x40011d:	mov	qword ptr [rbp - 0x70], 0
0x400125:	mov	qword ptr [rbp - 0x68], 0
0x40012d:	mov	qword ptr [rbp - 0x60], 0
0x400135:	mov	qword ptr [rbp - 0x58], 0
0x40013d:	mov	qword ptr [rbp - 0x50], 0
0x400145:	mov	qword ptr [rbp - 0x48], 0
0x40014d:	mov	qword ptr [rbp - 0x40], 0
0x400155:	mov	qword ptr [rbp - 0x38], 0
0x40015d:	mov	qword ptr [rbp - 0x30], 0
0x400165:	mov	qword ptr [rbp - 0x28], 0
0x40016d:	mov	qword ptr [rbp - 0x20], 0
0x400175:	mov	qword ptr [rbp - 0x18], 0
0x40017d:	mov	dword ptr [rbp - 0x10], 0
0x400184:	lea	rax, [rbp - 0x70]
0x400188:	mov	qword ptr [rbp - 0x78], rax
0x40018c:	lea	rdi, [rip + 0x178]
0x400193:	call	0x500008
<Block for 0x40010c, 12 bytes>
0x40010c:	lea	rdi, [rip + 0x210]
0x400113:	call	0x500008
<Block for 0x400198, 24 bytes>
0x400198:	mov	rdx, qword ptr [rip + 0xffe71]
0x40019f:	mov	rax, qword ptr [rbp - 0x78]
0x4001a3:	mov	esi, 0x64
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500018
<Block for 0x400118, 5 bytes>
0x400118:	jmp	0x4001d7
<Block for 0x4001b0, 5 bytes>
0x4001b0:	test	rax, rax
0x4001b3:	jne	0x4001cb
<Block for 0x4001d7, 16 bytes>
0x4001d7:	nop	
0x4001d8:	mov	rax, qword ptr [rbp - 8]
0x4001dc:	xor	rax, qword ptr fs:[0x28]
0x4001e5:	je	0x4001ec
<Block for 0x4001b5, 12 bytes>
0x4001b5:	lea	rdi, [rip + 0x17c]
0x4001bc:	call	0x500008
<Block for 0x4001cb, 12 bytes>
0x4001cb:	mov	rax, qword ptr [rbp - 0x78]
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500008
<Block for 0x4001ec, 2 bytes>
0x4001ec:	leave	
0x4001ed:	ret	
<Block for 0x4001e7, 5 bytes>
0x4001e7:	call	0x500020
<Block for 0x4001c1, 10 bytes>
0x4001c1:	mov	edi, 1
0x4001c6:	call	0x500030
