<Block for 0x40020c, 55 bytes>
0x40020c:	endbr64	
0x400210:	push	rbp
0x400211:	mov	rbp, rsp
0x400214:	sub	rsp, 0x140
0x40021b:	mov	rax, qword ptr fs:[0x28]
0x400224:	mov	qword ptr [rbp - 8], rax
0x400228:	xor	eax, eax
0x40022a:	lea	rax, [rbp - 0x120]
0x400231:	mov	edx, 0x31
0x400236:	mov	esi, 0x41
0x40023b:	mov	rdi, rax
0x40023e:	call	0x500000
<Block for 0x400243, 32 bytes>
0x400243:	mov	byte ptr [rbp - 0xef], 0
0x40024a:	lea	rax, [rbp - 0xe0]
0x400251:	mov	edx, 0x63
0x400256:	mov	esi, 0x41
0x40025b:	mov	rdi, rax
0x40025e:	call	0x500000
<Block for 0x400263, 40 bytes>
0x400263:	mov	byte ptr [rbp - 0x7d], 0
0x400267:	lea	rax, [rbp - 0xe0]
0x40026e:	mov	qword ptr [rbp - 0x130], rax
0x400275:	lea	rax, [rbp - 0x70]
0x400279:	mov	edx, 0x63
0x40027e:	mov	esi, 0x43
0x400283:	mov	rdi, rax
0x400286:	call	0x500000
<Block for 0x40028b, 16 bytes>
0x40028b:	mov	byte ptr [rbp - 0xd], 0
0x40028f:	lea	rax, [rbp - 0x70]
0x400293:	mov	rdi, rax
0x400296:	call	0x500008
<Block for 0x40029b, 20 bytes>
0x40029b:	mov	qword ptr [rbp - 0x128], rax
0x4002a2:	mov	qword ptr [rbp - 0x138], 0
0x4002ad:	jmp	0x4002db
<Block for 0x4002db, 16 bytes>
0x4002db:	mov	rax, qword ptr [rbp - 0x138]
0x4002e2:	cmp	rax, qword ptr [rbp - 0x128]
0x4002e9:	jb	0x4002af
<Block for 0x4002af, 60 bytes>
0x4002af:	mov	rdx, qword ptr [rbp - 0x130]
0x4002b6:	mov	rax, qword ptr [rbp - 0x138]
0x4002bd:	add	rax, rdx
0x4002c0:	movzx	eax, byte ptr [rax]
0x4002c3:	lea	rcx, [rbp - 0x70]
0x4002c7:	mov	rdx, qword ptr [rbp - 0x138]
0x4002ce:	add	rdx, rcx
0x4002d1:	mov	byte ptr [rdx], al
0x4002d3:	add	qword ptr [rbp - 0x138], 1
0x4002db:	mov	rax, qword ptr [rbp - 0x138]
0x4002e2:	cmp	rax, qword ptr [rbp - 0x128]
0x4002e9:	jb	0x4002af
<Block for 0x4002eb, 16 bytes>
0x4002eb:	mov	byte ptr [rbp - 0xd], 0
0x4002ef:	lea	rax, [rbp - 0x70]
0x4002f3:	mov	rdi, rax
0x4002f6:	call	0x500010
<Block for 0x4002fb, 16 bytes>
0x4002fb:	nop	
0x4002fc:	mov	rax, qword ptr [rbp - 8]
0x400300:	xor	rax, qword ptr fs:[0x28]
0x400309:	je	0x400310
<Block for 0x400310, 2 bytes>
0x400310:	leave	
0x400311:	ret	
<Block for 0x40030b, 5 bytes>
0x40030b:	call	0x500018
