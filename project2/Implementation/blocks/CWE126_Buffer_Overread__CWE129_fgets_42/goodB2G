<Block for 0x400247, 44 bytes>
0x400247:	endbr64	
0x40024b:	push	rbp
0x40024c:	mov	rbp, rsp
0x40024f:	sub	rsp, 0x40
0x400253:	mov	rax, qword ptr fs:[0x28]
0x40025c:	mov	qword ptr [rbp - 8], rax
0x400260:	xor	eax, eax
0x400262:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400269:	mov	eax, dword ptr [rbp - 0x34]
0x40026c:	mov	edi, eax
0x40026e:	call	0x4001c1
<Block for 0x400273, 49 bytes>
0x400273:	mov	dword ptr [rbp - 0x34], eax
0x400276:	mov	qword ptr [rbp - 0x30], 0
0x40027e:	mov	qword ptr [rbp - 0x28], 0
0x400286:	mov	qword ptr [rbp - 0x20], 0
0x40028e:	mov	qword ptr [rbp - 0x18], 0
0x400296:	mov	qword ptr [rbp - 0x10], 0
0x40029e:	cmp	dword ptr [rbp - 0x34], 0
0x4002a2:	js	0x4002bc
<Block for 0x4002bc, 12 bytes>
0x4002bc:	lea	rdi, [rip + 0x6d]
0x4002c3:	call	0x500018
<Block for 0x4002a4, 6 bytes>
0x4002a4:	cmp	dword ptr [rbp - 0x34], 9
0x4002a8:	jg	0x4002bc
<Block for 0x4002c8, 16 bytes>
0x4002c8:	nop	
0x4002c9:	mov	rax, qword ptr [rbp - 8]
0x4002cd:	xor	rax, qword ptr fs:[0x28]
0x4002d6:	je	0x4002dd
<Block for 0x4002aa, 16 bytes>
0x4002aa:	mov	eax, dword ptr [rbp - 0x34]
0x4002ad:	cdqe	
0x4002af:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002b3:	mov	edi, eax
0x4002b5:	call	0x500028
<Block for 0x4002dd, 2 bytes>
0x4002dd:	leave	
0x4002de:	ret	
<Block for 0x4002d8, 5 bytes>
0x4002d8:	call	0x500020
<Block for 0x4002ba, 2 bytes>
0x4002ba:	jmp	0x4002c8
