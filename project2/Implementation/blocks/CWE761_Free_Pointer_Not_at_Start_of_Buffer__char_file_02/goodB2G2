<Block for 0x400216, 22 bytes>
0x400216:	endbr64	
0x40021a:	push	rbp
0x40021b:	mov	rbp, rsp
0x40021e:	sub	rsp, 0x20
0x400222:	mov	edi, 0x64
0x400227:	call	0x500000
<Block for 0x40022c, 11 bytes>
0x40022c:	mov	qword ptr [rbp - 0x18], rax
0x400230:	cmp	qword ptr [rbp - 0x18], 0
0x400235:	jne	0x400241
<Block for 0x400237, 10 bytes>
0x400237:	mov	edi, 0xffffffff
0x40023c:	call	0x500008
<Block for 0x400241, 19 bytes>
0x400241:	mov	rax, qword ptr [rbp - 0x18]
0x400245:	mov	byte ptr [rax], 0
0x400248:	mov	rax, qword ptr [rbp - 0x18]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500010
<Block for 0x400254, 19 bytes>
0x400254:	mov	qword ptr [rbp - 0x10], rax
0x400258:	mov	eax, 0x64
0x40025d:	sub	rax, qword ptr [rbp - 0x10]
0x400261:	cmp	rax, 1
0x400265:	jbe	0x4002da
<Block for 0x4002da, 10 bytes>
0x4002da:	mov	qword ptr [rbp - 0x20], 0
0x4002e2:	jmp	0x400309
<Block for 0x400267, 19 bytes>
0x400267:	lea	rsi, [rip + 0xdb]
0x40026e:	lea	rdi, [rip + 0xd6]
0x400275:	call	0x500018
<Block for 0x400309, 12 bytes>
0x400309:	mov	rax, qword ptr [rbp - 0x18]
0x40030d:	mov	rdi, rax
0x400310:	call	0x500010
<Block for 0x40027a, 11 bytes>
0x40027a:	mov	qword ptr [rbp - 8], rax
0x40027e:	cmp	qword ptr [rbp - 8], 0
0x400283:	je	0x4002da
<Block for 0x400315, 6 bytes>
0x400315:	cmp	qword ptr [rbp - 0x20], rax
0x400319:	jb	0x4002e4
<Block for 0x400285, 42 bytes>
0x400285:	mov	rax, qword ptr [rbp - 0x10]
0x400289:	mov	edx, 0x64
0x40028e:	sub	edx, eax
0x400290:	mov	eax, edx
0x400292:	mov	esi, eax
0x400294:	mov	rdx, qword ptr [rbp - 0x18]
0x400298:	mov	rax, qword ptr [rbp - 0x10]
0x40029c:	lea	rcx, [rdx + rax]
0x4002a0:	mov	rax, qword ptr [rbp - 8]
0x4002a4:	mov	rdx, rax
0x4002a7:	mov	rdi, rcx
0x4002aa:	call	0x500020
<Block for 0x4002e4, 18 bytes>
0x4002e4:	mov	rdx, qword ptr [rbp - 0x18]
0x4002e8:	mov	rax, qword ptr [rbp - 0x20]
0x4002ec:	add	rax, rdx
0x4002ef:	movzx	eax, byte ptr [rax]
0x4002f2:	cmp	al, 0x53
0x4002f4:	jne	0x400304
<Block for 0x40031b, 12 bytes>
0x40031b:	mov	rax, qword ptr [rbp - 0x18]
0x40031f:	mov	rdi, rax
0x400322:	call	0x500038
<Block for 0x4002af, 5 bytes>
0x4002af:	test	rax, rax
0x4002b2:	jne	0x4002ce
<Block for 0x4002f6, 12 bytes>
0x4002f6:	lea	rdi, [rip + 0x6b]
0x4002fd:	call	0x500028
<Block for 0x400304, 17 bytes>
0x400304:	add	qword ptr [rbp - 0x20], 1
0x400309:	mov	rax, qword ptr [rbp - 0x18]
0x40030d:	mov	rdi, rax
0x400310:	call	0x500010
<Block for 0x400327, 3 bytes>
0x400327:	nop	
0x400328:	leave	
0x400329:	ret	
<Block for 0x4002b4, 12 bytes>
0x4002b4:	lea	rdi, [rip + 0x9e]
0x4002bb:	call	0x500028
<Block for 0x4002ce, 12 bytes>
0x4002ce:	mov	rax, qword ptr [rbp - 8]
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x500030
<Block for 0x400302, 2 bytes>
0x400302:	jmp	0x40031b
<Block for 0x4002c0, 26 bytes>
0x4002c0:	mov	rdx, qword ptr [rbp - 0x18]
0x4002c4:	mov	rax, qword ptr [rbp - 0x10]
0x4002c8:	add	rax, rdx
0x4002cb:	mov	byte ptr [rax], 0
0x4002ce:	mov	rax, qword ptr [rbp - 8]
0x4002d2:	mov	rdi, rax
0x4002d5:	call	0x500030
