<Block for 0x40005d, 39 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	sub	rsp, 0x10
0x400069:	mov	qword ptr [rbp - 8], 0
0x400071:	lea	rsi, [rip + 0x6a]
0x400078:	lea	rdi, [rip + 0x66]
0x40007f:	call	0x500000
<Block for 0x400084, 16 bytes>
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	nop	
0x400089:	endbr64	
0x40008d:	cmp	qword ptr [rbp - 8], 0
0x400092:	je	0x4000a0
<Block for 0x4000a0, 19 bytes>
0x4000a0:	lea	rsi, [rip + 0x3b]
0x4000a7:	lea	rdi, [rip + 0x5d]
0x4000ae:	call	0x500000
<Block for 0x400094, 12 bytes>
0x400094:	mov	rax, qword ptr [rbp - 8]
0x400098:	mov	rdi, rax
0x40009b:	call	0x500008
<Block for 0x4000b3, 11 bytes>
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	cmp	qword ptr [rbp - 8], 0
0x4000bc:	je	0x4000ca
<Block for 0x4000ca, 3 bytes>
0x4000ca:	nop	
0x4000cb:	leave	
0x4000cc:	ret	
<Block for 0x4000be, 12 bytes>
0x4000be:	mov	rax, qword ptr [rbp - 8]
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
