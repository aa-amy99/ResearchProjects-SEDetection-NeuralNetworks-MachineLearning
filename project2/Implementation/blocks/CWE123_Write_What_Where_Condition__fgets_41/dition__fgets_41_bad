<Block for 0x400055, 99 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x30
0x400061:	mov	rax, qword ptr fs:[0x28]
0x40006a:	mov	qword ptr [rbp - 8], rax
0x40006e:	xor	eax, eax
0x400070:	lea	rax, [rbp - 0x20]
0x400074:	mov	qword ptr [rbp - 0x20], rax
0x400078:	lea	rax, [rbp - 0x20]
0x40007c:	mov	qword ptr [rbp - 0x18], rax
0x400080:	mov	rax, qword ptr [rbp - 0x20]
0x400084:	mov	qword ptr [rbp - 0x30], rax
0x400088:	mov	rax, qword ptr [rbp - 0x18]
0x40008c:	mov	qword ptr [rbp - 0x28], rax
0x400090:	lea	rax, [rbp - 0x30]
0x400094:	mov	qword ptr [rbp - 0x20], rax
0x400098:	lea	rax, [rbp - 0x30]
0x40009c:	mov	qword ptr [rbp - 0x18], rax
0x4000a0:	mov	rdx, qword ptr [rip + 0xfff59]
0x4000a7:	lea	rax, [rbp - 0x30]
0x4000ab:	mov	esi, 0x10
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500008
<Block for 0x4000b8, 5 bytes>
0x4000b8:	test	rax, rax
0x4000bb:	jne	0x4000d3
<Block for 0x4000bd, 12 bytes>
0x4000bd:	lea	rdi, [rip + 0x12c]
0x4000c4:	call	0x500010
<Block for 0x4000d3, 19 bytes>
0x4000d3:	mov	rdx, qword ptr [rbp - 0x30]
0x4000d7:	mov	rax, qword ptr [rbp - 0x28]
0x4000db:	mov	rdi, rdx
0x4000de:	mov	rsi, rax
0x4000e1:	call	0x400000
<Block for 0x4000c9, 10 bytes>
0x4000c9:	mov	edi, 1
0x4000ce:	call	0x500018
<Block for 0x4000e6, 16 bytes>
0x4000e6:	nop	
0x4000e7:	mov	rax, qword ptr [rbp - 8]
0x4000eb:	xor	rax, qword ptr fs:[0x28]
0x4000f4:	je	0x4000fb
<Block for 0x4000fb, 2 bytes>
0x4000fb:	leave	
0x4000fc:	ret	
<Block for 0x4000f6, 5 bytes>
0x4000f6:	call	0x500020
