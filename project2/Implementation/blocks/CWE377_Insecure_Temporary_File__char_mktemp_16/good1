<Block for 0x4000ac, 67 bytes>
0x4000ac:	endbr64	
0x4000b0:	push	rbp
0x4000b1:	mov	rbp, rsp
0x4000b4:	sub	rsp, 0x30
0x4000b8:	mov	rax, qword ptr fs:[0x28]
0x4000c1:	mov	qword ptr [rbp - 8], rax
0x4000c5:	xor	eax, eax
0x4000c7:	movabs	rax, 0x6c69662f706d742f
0x4000d1:	movabs	rdx, 0x58585858585865
0x4000db:	mov	qword ptr [rbp - 0x20], rax
0x4000df:	mov	qword ptr [rbp - 0x18], rdx
0x4000e3:	lea	rax, [rbp - 0x20]
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500030
<Block for 0x4000ef, 15 bytes>
0x4000ef:	mov	dword ptr [rbp - 0x24], eax
0x4000f2:	lea	rax, [rbp - 0x20]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500010
<Block for 0x4000fe, 6 bytes>
0x4000fe:	cmp	dword ptr [rbp - 0x24], -1
0x400102:	je	0x40011a
<Block for 0x40011a, 17 bytes>
0x40011a:	nop	
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x3d]
0x40010b:	call	0x500010
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500028
<Block for 0x400110, 10 bytes>
0x400110:	mov	eax, dword ptr [rbp - 0x24]
0x400113:	mov	edi, eax
0x400115:	call	0x500020
