<Block for 0x400088, 179 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0xb0
0x400097:	mov	rax, qword ptr fs:[0x28]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	xor	eax, eax
0x4000a6:	mov	qword ptr [rbp - 0x70], 0
0x4000ae:	mov	qword ptr [rbp - 0x68], 0
0x4000b6:	mov	qword ptr [rbp - 0x60], 0
0x4000be:	mov	qword ptr [rbp - 0x58], 0
0x4000c6:	mov	qword ptr [rbp - 0x50], 0
0x4000ce:	mov	qword ptr [rbp - 0x48], 0
0x4000d6:	mov	qword ptr [rbp - 0x40], 0
0x4000de:	mov	qword ptr [rbp - 0x38], 0
0x4000e6:	mov	qword ptr [rbp - 0x30], 0
0x4000ee:	mov	qword ptr [rbp - 0x28], 0
0x4000f6:	mov	qword ptr [rbp - 0x20], 0
0x4000fe:	mov	qword ptr [rbp - 0x18], 0
0x400106:	mov	dword ptr [rbp - 0x10], 0
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	qword ptr [rbp - 0x98], rax
0x400118:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x400122:	mov	dword ptr [rbp - 0xa4], 0xffffffff
0x40012c:	mov	rax, qword ptr [rbp - 0x98]
0x400133:	mov	rdi, rax
0x400136:	call	0x500018
<Block for 0x40013b, 27 bytes>
0x40013b:	mov	qword ptr [rbp - 0x90], rax
0x400142:	mov	edx, 6
0x400147:	mov	esi, 1
0x40014c:	mov	edi, 2
0x400151:	call	0x500020
<Block for 0x400156, 19 bytes>
0x400156:	mov	dword ptr [rbp - 0xa0], eax
0x40015c:	cmp	dword ptr [rbp - 0xa0], -1
0x400163:	je	0x4002d4
<Block for 0x4002d4, 3 bytes>
0x4002d4:	nop	
0x4002d5:	jmp	0x4002de
<Block for 0x400169, 22 bytes>
0x400169:	lea	rax, [rbp - 0x80]
0x40016d:	mov	edx, 0x10
0x400172:	mov	esi, 0
0x400177:	mov	rdi, rax
0x40017a:	call	0x500028
<Block for 0x4002de, 9 bytes>
0x4002de:	cmp	dword ptr [rbp - 0xa0], -1
0x4002e5:	je	0x4002f4
<Block for 0x40017f, 23 bytes>
0x40017f:	mov	word ptr [rbp - 0x80], 2
0x400185:	mov	dword ptr [rbp - 0x7c], 0
0x40018c:	mov	edi, 0x6987
0x400191:	call	0x500030
<Block for 0x4002f4, 9 bytes>
0x4002f4:	cmp	dword ptr [rbp - 0xa4], -1
0x4002fb:	je	0x40030a
<Block for 0x4002e7, 13 bytes>
0x4002e7:	mov	eax, dword ptr [rbp - 0xa0]
0x4002ed:	mov	edi, eax
0x4002ef:	call	0x500060
<Block for 0x400196, 29 bytes>
0x400196:	mov	word ptr [rbp - 0x7e], ax
0x40019a:	lea	rcx, [rbp - 0x80]
0x40019e:	mov	eax, dword ptr [rbp - 0xa0]
0x4001a4:	mov	edx, 0x10
0x4001a9:	mov	rsi, rcx
0x4001ac:	mov	edi, eax
0x4001ae:	call	0x500038
<Block for 0x40030a, 24 bytes>
0x40030a:	mov	rax, qword ptr [rbp - 0x98]
0x400311:	mov	qword ptr [rip + 0x4d0], rax
0x400318:	mov	eax, 0
0x40031d:	call	0x400000
<Block for 0x4002fd, 13 bytes>
0x4002fd:	mov	eax, dword ptr [rbp - 0xa4]
0x400303:	mov	edi, eax
0x400305:	call	0x500060
<Block for 0x4001b3, 9 bytes>
0x4001b3:	cmp	eax, -1
0x4001b6:	je	0x4002d7
<Block for 0x400322, 16 bytes>
0x400322:	nop	
0x400323:	mov	rax, qword ptr [rbp - 8]
0x400327:	xor	rax, qword ptr fs:[0x28]
0x400330:	je	0x400337
<Block for 0x4002d7, 3 bytes>
0x4002d7:	nop	
0x4002d8:	jmp	0x4002de
<Block for 0x4001bc, 18 bytes>
0x4001bc:	mov	eax, dword ptr [rbp - 0xa0]
0x4001c2:	mov	esi, 5
0x4001c7:	mov	edi, eax
0x4001c9:	call	0x500040
<Block for 0x400337, 2 bytes>
0x400337:	leave	
0x400338:	ret	
<Block for 0x400332, 5 bytes>
0x400332:	call	0x500010
<Block for 0x4001ce, 9 bytes>
0x4001ce:	cmp	eax, -1
0x4001d1:	je	0x4002da
<Block for 0x4002da, 3 bytes>
0x4002da:	nop	
0x4002db:	jmp	0x4002de
<Block for 0x4001d7, 23 bytes>
0x4001d7:	mov	eax, dword ptr [rbp - 0xa0]
0x4001dd:	mov	edx, 0
0x4001e2:	mov	esi, 0
0x4001e7:	mov	edi, eax
0x4001e9:	call	0x500048
<Block for 0x4001ee, 19 bytes>
0x4001ee:	mov	dword ptr [rbp - 0xa4], eax
0x4001f4:	cmp	dword ptr [rbp - 0xa4], -1
0x4001fb:	je	0x4002dd
<Block for 0x400201, 51 bytes>
0x400201:	mov	eax, 0x63
0x400206:	sub	rax, qword ptr [rbp - 0x90]
0x40020d:	mov	rdx, rax
0x400210:	mov	rcx, qword ptr [rbp - 0x98]
0x400217:	mov	rax, qword ptr [rbp - 0x90]
0x40021e:	lea	rsi, [rcx + rax]
0x400222:	mov	eax, dword ptr [rbp - 0xa4]
0x400228:	mov	ecx, 0
0x40022d:	mov	edi, eax
0x40022f:	call	0x500050
<Block for 0x4002dd, 1 bytes>
0x4002dd:	nop	
<Block for 0x400234, 19 bytes>
0x400234:	mov	dword ptr [rbp - 0x9c], eax
0x40023a:	cmp	dword ptr [rbp - 0x9c], -1
0x400241:	je	0x4002de
<Block for 0x400247, 13 bytes>
0x400247:	cmp	dword ptr [rbp - 0x9c], 0
0x40024e:	je	0x4002de
<Block for 0x400254, 52 bytes>
0x400254:	mov	eax, dword ptr [rbp - 0x9c]
0x40025a:	movsxd	rdx, eax
0x40025d:	mov	rax, qword ptr [rbp - 0x90]
0x400264:	add	rdx, rax
0x400267:	mov	rax, qword ptr [rbp - 0x98]
0x40026e:	add	rax, rdx
0x400271:	mov	byte ptr [rax], 0
0x400274:	mov	rax, qword ptr [rbp - 0x98]
0x40027b:	mov	esi, 0xd
0x400280:	mov	rdi, rax
0x400283:	call	0x500058
<Block for 0x400288, 17 bytes>
0x400288:	mov	qword ptr [rbp - 0x88], rax
0x40028f:	cmp	qword ptr [rbp - 0x88], 0
0x400297:	je	0x4002a3
<Block for 0x4002a3, 20 bytes>
0x4002a3:	mov	rax, qword ptr [rbp - 0x98]
0x4002aa:	mov	esi, 0xa
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x500058
<Block for 0x400299, 30 bytes>
0x400299:	mov	rax, qword ptr [rbp - 0x88]
0x4002a0:	mov	byte ptr [rax], 0
0x4002a3:	mov	rax, qword ptr [rbp - 0x98]
0x4002aa:	mov	esi, 0xa
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x500058
<Block for 0x4002b7, 17 bytes>
0x4002b7:	mov	qword ptr [rbp - 0x88], rax
0x4002be:	cmp	qword ptr [rbp - 0x88], 0
0x4002c6:	je	0x4002de
<Block for 0x4002c8, 12 bytes>
0x4002c8:	mov	rax, qword ptr [rbp - 0x88]
0x4002cf:	mov	byte ptr [rax], 0
0x4002d2:	jmp	0x4002de
