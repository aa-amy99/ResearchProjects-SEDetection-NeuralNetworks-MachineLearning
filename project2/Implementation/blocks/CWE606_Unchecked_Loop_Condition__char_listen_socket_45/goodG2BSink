<Block for 0x400339, 66 bytes>
0x400339:	endbr64	
0x40033d:	push	rbp
0x40033e:	mov	rbp, rsp
0x400341:	sub	rsp, 0x20
0x400345:	mov	rax, qword ptr fs:[0x28]
0x40034e:	mov	qword ptr [rbp - 8], rax
0x400352:	xor	eax, eax
0x400354:	mov	rax, qword ptr [rip + 0x495]
0x40035b:	mov	qword ptr [rbp - 0x10], rax
0x40035f:	lea	rdx, [rbp - 0x1c]
0x400363:	mov	rax, qword ptr [rbp - 0x10]
0x400367:	lea	rsi, [rip + 0x492]
0x40036e:	mov	rdi, rax
0x400371:	mov	eax, 0
0x400376:	call	0x500000
<Block for 0x40037b, 5 bytes>
0x40037b:	cmp	eax, 1
0x40037e:	jne	0x4003aa
<Block for 0x400380, 16 bytes>
0x400380:	mov	dword ptr [rbp - 0x14], 0
0x400387:	mov	dword ptr [rbp - 0x18], 0
0x40038e:	jmp	0x400398
<Block for 0x4003aa, 16 bytes>
0x4003aa:	nop	
0x4003ab:	mov	rax, qword ptr [rbp - 8]
0x4003af:	xor	rax, qword ptr fs:[0x28]
0x4003b8:	je	0x4003bf
<Block for 0x400398, 8 bytes>
0x400398:	mov	eax, dword ptr [rbp - 0x1c]
0x40039b:	cmp	dword ptr [rbp - 0x18], eax
0x40039e:	jl	0x400390
<Block for 0x4003bf, 2 bytes>
0x4003bf:	leave	
0x4003c0:	ret	
<Block for 0x4003ba, 5 bytes>
0x4003ba:	call	0x500010
<Block for 0x400390, 16 bytes>
0x400390:	add	dword ptr [rbp - 0x14], 1
0x400394:	add	dword ptr [rbp - 0x18], 1
0x400398:	mov	eax, dword ptr [rbp - 0x1c]
0x40039b:	cmp	dword ptr [rbp - 0x18], eax
0x40039e:	jl	0x400390
<Block for 0x4003a0, 10 bytes>
0x4003a0:	mov	eax, dword ptr [rbp - 0x14]
0x4003a3:	mov	edi, eax
0x4003a5:	call	0x500008
