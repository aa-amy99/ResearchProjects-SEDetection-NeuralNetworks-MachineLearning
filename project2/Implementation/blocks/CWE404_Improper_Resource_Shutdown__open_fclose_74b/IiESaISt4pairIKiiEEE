<Block for 0x400068, 57 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	qword ptr [rbp - 0x18], rdi
0x400078:	mov	rax, qword ptr fs:[0x28]
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	xor	eax, eax
0x400087:	mov	dword ptr [rbp - 0x10], 2
0x40008e:	lea	rdx, [rbp - 0x10]
0x400092:	mov	rax, qword ptr [rbp - 0x18]
0x400096:	mov	rsi, rdx
0x400099:	mov	rdi, rax
0x40009c:	call	0x4000fa
<Block for 0x4000a1, 11 bytes>
0x4000a1:	mov	eax, dword ptr [rax]
0x4000a3:	mov	dword ptr [rbp - 0xc], eax
0x4000a6:	cmp	dword ptr [rbp - 0xc], -1
0x4000aa:	je	0x4000b6
<Block for 0x4000b6, 16 bytes>
0x4000b6:	nop	
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	xor	rax, qword ptr fs:[0x28]
0x4000c4:	je	0x4000cb
<Block for 0x4000ac, 10 bytes>
0x4000ac:	mov	eax, dword ptr [rbp - 0xc]
0x4000af:	mov	edi, eax
0x4000b1:	call	0x500010
<Block for 0x4000cb, 2 bytes>
0x4000cb:	leave	
0x4000cc:	ret	
<Block for 0x4000c6, 5 bytes>
0x4000c6:	call	0x500008
