<Block for 0x400156, 43 bytes>
0x400156:	endbr64	
0x40015a:	push	rbp
0x40015b:	mov	rbp, rsp
0x40015e:	push	rbx
0x40015f:	sub	rsp, 0x88
0x400166:	mov	rax, qword ptr fs:[0x28]
0x40016f:	mov	qword ptr [rbp - 0x18], rax
0x400173:	xor	eax, eax
0x400175:	lea	rax, [rbp - 0x80]
0x400179:	mov	rdi, rax
0x40017c:	call	0x400564
<Block for 0x400181, 30 bytes>
0x400181:	mov	qword ptr [rbp - 0x88], 0
0x40018c:	lea	rsi, [rip + 0x2a1]
0x400193:	lea	rdi, [rip + 0x2b1]
0x40019a:	call	0x500000
<Block for 0x40019f, 33 bytes>
0x40019f:	mov	qword ptr [rbp - 0x88], rax
0x4001a6:	mov	dword ptr [rbp - 0x50], 0
0x4001ad:	lea	rdx, [rbp - 0x50]
0x4001b1:	lea	rax, [rbp - 0x80]
0x4001b5:	mov	rsi, rdx
0x4001b8:	mov	rdi, rax
0x4001bb:	call	0x400732
<Block for 0x4001c0, 36 bytes>
0x4001c0:	mov	rdx, qword ptr [rbp - 0x88]
0x4001c7:	mov	qword ptr [rax], rdx
0x4001ca:	mov	dword ptr [rbp - 0x50], 1
0x4001d1:	lea	rdx, [rbp - 0x50]
0x4001d5:	lea	rax, [rbp - 0x80]
0x4001d9:	mov	rsi, rdx
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x400732
<Block for 0x4001e4, 36 bytes>
0x4001e4:	mov	rdx, qword ptr [rbp - 0x88]
0x4001eb:	mov	qword ptr [rax], rdx
0x4001ee:	mov	dword ptr [rbp - 0x50], 2
0x4001f5:	lea	rdx, [rbp - 0x50]
0x4001f9:	lea	rax, [rbp - 0x80]
0x4001fd:	mov	rsi, rdx
0x400200:	mov	rdi, rax
0x400203:	call	0x400732
<Block for 0x400208, 29 bytes>
0x400208:	mov	rdx, qword ptr [rbp - 0x88]
0x40020f:	mov	qword ptr [rax], rdx
0x400212:	lea	rdx, [rbp - 0x80]
0x400216:	lea	rax, [rbp - 0x50]
0x40021a:	mov	rsi, rdx
0x40021d:	mov	rdi, rax
0x400220:	call	0x4005a4
<Block for 0x400225, 12 bytes>
0x400225:	lea	rax, [rbp - 0x50]
0x400229:	mov	rdi, rax
0x40022c:	call	0x500028
<Block for 0x400231, 12 bytes>
0x400231:	lea	rax, [rbp - 0x50]
0x400235:	mov	rdi, rax
0x400238:	call	0x400584
<Block for 0x40023d, 12 bytes>
0x40023d:	lea	rax, [rbp - 0x80]
0x400241:	mov	rdi, rax
0x400244:	call	0x400584
<Block for 0x400249, 16 bytes>
0x400249:	nop	
0x40024a:	mov	rax, qword ptr [rbp - 0x18]
0x40024e:	xor	rax, qword ptr fs:[0x28]
0x400257:	je	0x400293
<Block for 0x400293, 10 bytes>
0x400293:	add	rsp, 0x88
0x40029a:	pop	rbx
0x40029b:	pop	rbp
0x40029c:	ret	
<Block for 0x400259, 2 bytes>
0x400259:	jmp	0x40028e
<Block for 0x40028e, 5 bytes>
0x40028e:	call	0x500020
