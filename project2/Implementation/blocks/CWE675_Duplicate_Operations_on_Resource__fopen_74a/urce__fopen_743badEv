<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x400564
<Block for 0x40002b, 30 bytes>
0x40002b:	mov	qword ptr [rbp - 0x88], 0
0x400036:	lea	rsi, [rip + 0x3f7]
0x40003d:	lea	rdi, [rip + 0x3f3]
0x400044:	call	0x500000
<Block for 0x400049, 22 bytes>
0x400049:	mov	qword ptr [rbp - 0x88], rax
0x400050:	mov	rax, qword ptr [rbp - 0x88]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500008
<Block for 0x40005f, 26 bytes>
0x40005f:	mov	dword ptr [rbp - 0x50], 0
0x400066:	lea	rdx, [rbp - 0x50]
0x40006a:	lea	rax, [rbp - 0x80]
0x40006e:	mov	rsi, rdx
0x400071:	mov	rdi, rax
0x400074:	call	0x400732
<Block for 0x400079, 36 bytes>
0x400079:	mov	rdx, qword ptr [rbp - 0x88]
0x400080:	mov	qword ptr [rax], rdx
0x400083:	mov	dword ptr [rbp - 0x50], 1
0x40008a:	lea	rdx, [rbp - 0x50]
0x40008e:	lea	rax, [rbp - 0x80]
0x400092:	mov	rsi, rdx
0x400095:	mov	rdi, rax
0x400098:	call	0x400732
<Block for 0x40009d, 36 bytes>
0x40009d:	mov	rdx, qword ptr [rbp - 0x88]
0x4000a4:	mov	qword ptr [rax], rdx
0x4000a7:	mov	dword ptr [rbp - 0x50], 2
0x4000ae:	lea	rdx, [rbp - 0x50]
0x4000b2:	lea	rax, [rbp - 0x80]
0x4000b6:	mov	rsi, rdx
0x4000b9:	mov	rdi, rax
0x4000bc:	call	0x400732
<Block for 0x4000c1, 29 bytes>
0x4000c1:	mov	rdx, qword ptr [rbp - 0x88]
0x4000c8:	mov	qword ptr [rax], rdx
0x4000cb:	lea	rdx, [rbp - 0x80]
0x4000cf:	lea	rax, [rbp - 0x50]
0x4000d3:	mov	rsi, rdx
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x4005a4
<Block for 0x4000de, 12 bytes>
0x4000de:	lea	rax, [rbp - 0x50]
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500010
<Block for 0x4000ea, 12 bytes>
0x4000ea:	lea	rax, [rbp - 0x50]
0x4000ee:	mov	rdi, rax
0x4000f1:	call	0x400584
<Block for 0x4000f6, 12 bytes>
0x4000f6:	lea	rax, [rbp - 0x80]
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x400584
<Block for 0x400102, 16 bytes>
0x400102:	nop	
0x400103:	mov	rax, qword ptr [rbp - 0x18]
0x400107:	xor	rax, qword ptr fs:[0x28]
0x400110:	je	0x40014c
<Block for 0x40014c, 10 bytes>
0x40014c:	add	rsp, 0x88
0x400153:	pop	rbx
0x400154:	pop	rbp
0x400155:	ret	
<Block for 0x400112, 2 bytes>
0x400112:	jmp	0x400147
<Block for 0x400147, 5 bytes>
0x400147:	call	0x500020
