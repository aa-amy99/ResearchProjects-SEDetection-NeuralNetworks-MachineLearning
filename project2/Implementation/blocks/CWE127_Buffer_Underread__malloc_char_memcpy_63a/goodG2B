<Block for 0x400092, 45 bytes>
0x400092:	endbr64	
0x400096:	push	rbp
0x400097:	mov	rbp, rsp
0x40009a:	sub	rsp, 0x20
0x40009e:	mov	rax, qword ptr fs:[0x28]
0x4000a7:	mov	qword ptr [rbp - 8], rax
0x4000ab:	xor	eax, eax
0x4000ad:	mov	qword ptr [rbp - 0x18], 0
0x4000b5:	mov	edi, 0x64
0x4000ba:	call	0x500000
<Block for 0x4000bf, 11 bytes>
0x4000bf:	mov	qword ptr [rbp - 0x10], rax
0x4000c3:	cmp	qword ptr [rbp - 0x10], 0
0x4000c8:	jne	0x4000d4
<Block for 0x4000ca, 10 bytes>
0x4000ca:	mov	edi, 0xffffffff
0x4000cf:	call	0x500008
<Block for 0x4000d4, 22 bytes>
0x4000d4:	mov	rax, qword ptr [rbp - 0x10]
0x4000d8:	mov	edx, 0x63
0x4000dd:	mov	esi, 0x41
0x4000e2:	mov	rdi, rax
0x4000e5:	call	0x500010
<Block for 0x4000ea, 31 bytes>
0x4000ea:	mov	rax, qword ptr [rbp - 0x10]
0x4000ee:	add	rax, 0x63
0x4000f2:	mov	byte ptr [rax], 0
0x4000f5:	mov	rax, qword ptr [rbp - 0x10]
0x4000f9:	mov	qword ptr [rbp - 0x18], rax
0x4000fd:	lea	rax, [rbp - 0x18]
0x400101:	mov	rdi, rax
0x400104:	call	0x500028
<Block for 0x400109, 16 bytes>
0x400109:	nop	
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	xor	rax, qword ptr fs:[0x28]
0x400117:	je	0x40011e
<Block for 0x40011e, 2 bytes>
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x400119, 5 bytes>
0x400119:	call	0x500020
