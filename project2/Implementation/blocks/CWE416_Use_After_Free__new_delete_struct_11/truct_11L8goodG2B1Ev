<Block for 0x400155, 25 bytes>
0x400155:	endbr64	
0x400159:	push	rbp
0x40015a:	mov	rbp, rsp
0x40015d:	sub	rsp, 0x10
0x400161:	mov	qword ptr [rbp - 8], 0
0x400169:	call	0x500020
<Block for 0x40016e, 9 bytes>
0x40016e:	test	eax, eax
0x400170:	setne	al
0x400173:	test	al, al
0x400175:	je	0x400185
<Block for 0x400185, 10 bytes>
0x400185:	mov	edi, 8
0x40018a:	call	0x500008
<Block for 0x400177, 12 bytes>
0x400177:	lea	rdi, [rip + 0xc8]
0x40017e:	call	0x500028
<Block for 0x40018f, 30 bytes>
0x40018f:	mov	qword ptr [rbp - 8], rax
0x400193:	mov	rax, qword ptr [rbp - 8]
0x400197:	mov	dword ptr [rax], 1
0x40019d:	mov	rax, qword ptr [rbp - 8]
0x4001a1:	mov	dword ptr [rax + 4], 2
0x4001a8:	call	0x500000
<Block for 0x400183, 2 bytes>
0x400183:	jmp	0x4001a8
<Block for 0x4001ad, 9 bytes>
0x4001ad:	test	eax, eax
0x4001af:	setne	al
0x4001b2:	test	al, al
0x4001b4:	je	0x4001c2
<Block for 0x4001a8, 5 bytes>
0x4001a8:	call	0x500000
<Block for 0x4001c2, 3 bytes>
0x4001c2:	nop	
0x4001c3:	leave	
0x4001c4:	ret	
<Block for 0x4001b6, 12 bytes>
0x4001b6:	mov	rax, qword ptr [rbp - 8]
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x500018
