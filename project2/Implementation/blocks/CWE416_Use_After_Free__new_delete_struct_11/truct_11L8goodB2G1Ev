<Block for 0x400078, 25 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	sub	rsp, 0x10
0x400084:	mov	qword ptr [rbp - 8], 0
0x40008c:	call	0x500000
<Block for 0x400091, 9 bytes>
0x400091:	test	eax, eax
0x400093:	setne	al
0x400096:	test	al, al
0x400098:	je	0x4000d3
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500020
<Block for 0x40009a, 10 bytes>
0x40009a:	mov	edi, 8
0x40009f:	call	0x500008
<Block for 0x4000d8, 9 bytes>
0x4000d8:	test	eax, eax
0x4000da:	setne	al
0x4000dd:	test	al, al
0x4000df:	je	0x4000ed
<Block for 0x4000a4, 34 bytes>
0x4000a4:	mov	qword ptr [rbp - 8], rax
0x4000a8:	mov	rax, qword ptr [rbp - 8]
0x4000ac:	mov	dword ptr [rax], 1
0x4000b2:	mov	rax, qword ptr [rbp - 8]
0x4000b6:	mov	dword ptr [rax + 4], 2
0x4000bd:	mov	rax, qword ptr [rbp - 8]
0x4000c1:	test	rax, rax
0x4000c4:	je	0x4000d3
<Block for 0x4000ed, 3 bytes>
0x4000ed:	nop	
0x4000ee:	leave	
0x4000ef:	ret	
<Block for 0x4000e1, 12 bytes>
0x4000e1:	lea	rdi, [rip + 0x15e]
0x4000e8:	call	0x500028
<Block for 0x4000c6, 13 bytes>
0x4000c6:	mov	esi, 8
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500010
