<Block for 0x400081, 30 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x10
0x40008d:	mov	qword ptr [rbp - 0x10], 0
0x400095:	mov	edi, 0x64
0x40009a:	call	0x500020
<Block for 0x40009f, 11 bytes>
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	cmp	qword ptr [rbp - 8], 0
0x4000a8:	jne	0x4000b4
<Block for 0x4000aa, 10 bytes>
0x4000aa:	mov	edi, 0xffffffff
0x4000af:	call	0x500028
<Block for 0x4000b4, 22 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	mov	edx, 0x63
0x4000bd:	mov	esi, 0x41
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500000
<Block for 0x4000ca, 35 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	add	rax, 0x63
0x4000d2:	mov	byte ptr [rax], 0
0x4000d5:	mov	rax, qword ptr [rbp - 8]
0x4000d9:	sub	rax, 8
0x4000dd:	mov	qword ptr [rbp - 0x10], rax
0x4000e1:	mov	rax, qword ptr [rbp - 0x10]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x400000
<Block for 0x4000ed, 3 bytes>
0x4000ed:	nop	
0x4000ee:	leave	
0x4000ef:	ret	
