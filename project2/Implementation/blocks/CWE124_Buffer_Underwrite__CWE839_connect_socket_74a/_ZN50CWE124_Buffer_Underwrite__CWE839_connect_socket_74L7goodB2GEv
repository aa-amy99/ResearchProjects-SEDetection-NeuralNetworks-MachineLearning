<Block for 0x400366, 46 bytes>
0x400366:	endbr64	
0x40036a:	push	rbp
0x40036b:	mov	rbp, rsp
0x40036e:	push	rbx
0x40036f:	sub	rsp, 0xa8
0x400376:	mov	rax, qword ptr fs:[0x28]
0x40037f:	mov	qword ptr [rbp - 0x18], rax
0x400383:	xor	eax, eax
0x400385:	lea	rax, [rbp - 0xa0]
0x40038c:	mov	rdi, rax
0x40038f:	call	0x4006ec
<Block for 0x400394, 40 bytes>
0x400394:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x40039e:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x4003a8:	mov	edx, 6
0x4003ad:	mov	esi, 1
0x4003b2:	mov	edi, 2
0x4003b7:	call	0x500000
<Block for 0x4003bc, 19 bytes>
0x4003bc:	mov	dword ptr [rbp - 0xa8], eax
0x4003c2:	cmp	dword ptr [rbp - 0xa8], -1
0x4003c9:	je	0x40047f
<Block for 0x40047f, 3 bytes>
0x40047f:	nop	
0x400480:	jmp	0x400483
<Block for 0x4003cf, 22 bytes>
0x4003cf:	lea	rax, [rbp - 0x40]
0x4003d3:	mov	edx, 0x10
0x4003d8:	mov	esi, 0
0x4003dd:	mov	rdi, rax
0x4003e0:	call	0x500008
<Block for 0x400483, 9 bytes>
0x400483:	cmp	dword ptr [rbp - 0xa8], -1
0x40048a:	je	0x400499
<Block for 0x4003e5, 18 bytes>
0x4003e5:	mov	word ptr [rbp - 0x40], 2
0x4003eb:	lea	rdi, [rip + 0x1eb]
0x4003f2:	call	0x500010
<Block for 0x400499, 29 bytes>
0x400499:	mov	dword ptr [rbp - 0x70], 0
0x4004a0:	lea	rdx, [rbp - 0x70]
0x4004a4:	lea	rax, [rbp - 0xa0]
0x4004ab:	mov	rsi, rdx
0x4004ae:	mov	rdi, rax
0x4004b1:	call	0x4008ba
<Block for 0x40048c, 13 bytes>
0x40048c:	mov	eax, dword ptr [rbp - 0xa8]
0x400492:	mov	edi, eax
0x400494:	call	0x500038
<Block for 0x4003f7, 13 bytes>
0x4003f7:	mov	dword ptr [rbp - 0x3c], eax
0x4003fa:	mov	edi, 0x6987
0x4003ff:	call	0x500018
<Block for 0x4004b6, 37 bytes>
0x4004b6:	mov	edx, dword ptr [rbp - 0xac]
0x4004bc:	mov	dword ptr [rax], edx
0x4004be:	mov	dword ptr [rbp - 0x70], 1
0x4004c5:	lea	rdx, [rbp - 0x70]
0x4004c9:	lea	rax, [rbp - 0xa0]
0x4004d0:	mov	rsi, rdx
0x4004d3:	mov	rdi, rax
0x4004d6:	call	0x4008ba
<Block for 0x400404, 29 bytes>
0x400404:	mov	word ptr [rbp - 0x3e], ax
0x400408:	lea	rcx, [rbp - 0x40]
0x40040c:	mov	eax, dword ptr [rbp - 0xa8]
0x400412:	mov	edx, 0x10
0x400417:	mov	rsi, rcx
0x40041a:	mov	edi, eax
0x40041c:	call	0x500020
<Block for 0x4004db, 37 bytes>
0x4004db:	mov	edx, dword ptr [rbp - 0xac]
0x4004e1:	mov	dword ptr [rax], edx
0x4004e3:	mov	dword ptr [rbp - 0x70], 2
0x4004ea:	lea	rdx, [rbp - 0x70]
0x4004ee:	lea	rax, [rbp - 0xa0]
0x4004f5:	mov	rsi, rdx
0x4004f8:	mov	rdi, rax
0x4004fb:	call	0x4008ba
<Block for 0x400421, 10 bytes>
0x400421:	cmp	eax, -1
0x400424:	sete	al
0x400427:	test	al, al
0x400429:	jne	0x400482
<Block for 0x400500, 30 bytes>
0x400500:	mov	edx, dword ptr [rbp - 0xac]
0x400506:	mov	dword ptr [rax], edx
0x400508:	lea	rdx, [rbp - 0xa0]
0x40050f:	lea	rax, [rbp - 0x70]
0x400513:	mov	rsi, rdx
0x400516:	mov	rdi, rax
0x400519:	call	0x40072c
<Block for 0x40042b, 27 bytes>
0x40042b:	lea	rsi, [rbp - 0x26]
0x40042f:	mov	eax, dword ptr [rbp - 0xa8]
0x400435:	mov	ecx, 0
0x40043a:	mov	edx, 0xd
0x40043f:	mov	edi, eax
0x400441:	call	0x500028
<Block for 0x400482, 1 bytes>
0x400482:	nop	
<Block for 0x40051e, 12 bytes>
0x40051e:	lea	rax, [rbp - 0x70]
0x400522:	mov	rdi, rax
0x400525:	call	0x500060
<Block for 0x400446, 15 bytes>
0x400446:	mov	dword ptr [rbp - 0xa4], eax
0x40044c:	cmp	dword ptr [rbp - 0xa4], -1
0x400453:	je	0x400483
<Block for 0x40052a, 12 bytes>
0x40052a:	lea	rax, [rbp - 0x70]
0x40052e:	mov	rdi, rax
0x400531:	call	0x40070c
<Block for 0x400455, 9 bytes>
0x400455:	cmp	dword ptr [rbp - 0xa4], 0
0x40045c:	je	0x400483
<Block for 0x400536, 15 bytes>
0x400536:	lea	rax, [rbp - 0xa0]
0x40053d:	mov	rdi, rax
0x400540:	call	0x40070c
<Block for 0x40045e, 25 bytes>
0x40045e:	mov	eax, dword ptr [rbp - 0xa4]
0x400464:	cdqe	
0x400466:	mov	byte ptr [rbp + rax - 0x26], 0
0x40046b:	lea	rax, [rbp - 0x26]
0x40046f:	mov	rdi, rax
0x400472:	call	0x500030
<Block for 0x400545, 16 bytes>
0x400545:	nop	
0x400546:	mov	rax, qword ptr [rbp - 0x18]
0x40054a:	xor	rax, qword ptr fs:[0x28]
0x400553:	je	0x400592
<Block for 0x400477, 8 bytes>
0x400477:	mov	dword ptr [rbp - 0xac], eax
0x40047d:	jmp	0x400483
<Block for 0x400592, 10 bytes>
0x400592:	add	rsp, 0xa8
0x400599:	pop	rbx
0x40059a:	pop	rbp
0x40059b:	ret	
<Block for 0x400555, 2 bytes>
0x400555:	jmp	0x40058d
<Block for 0x40058d, 5 bytes>
0x40058d:	call	0x500050
