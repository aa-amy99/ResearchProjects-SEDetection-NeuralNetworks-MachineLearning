<Block for 0x40021f, 25 bytes>
0x40021f:	endbr64	
0x400223:	push	rbp
0x400224:	mov	rbp, rsp
0x400227:	push	rbx
0x400228:	sub	rsp, 0x18
0x40022c:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400233:	call	0x500018
<Block for 0x400238, 7 bytes>
0x400238:	and	eax, 1
0x40023b:	test	eax, eax
0x40023d:	je	0x40025c
<Block for 0x40025c, 5 bytes>
0x40025c:	call	0x500018
<Block for 0x40023f, 5 bytes>
0x40023f:	call	0x500018
<Block for 0x400261, 10 bytes>
0x400261:	shl	eax, 0x1e
0x400264:	mov	ebx, eax
0x400266:	call	0x500018
<Block for 0x400244, 10 bytes>
0x400244:	shl	eax, 0x1e
0x400247:	mov	ebx, eax
0x400249:	call	0x500018
<Block for 0x40026b, 10 bytes>
0x40026b:	shl	eax, 0xf
0x40026e:	xor	ebx, eax
0x400270:	call	0x500018
<Block for 0x40024e, 10 bytes>
0x40024e:	shl	eax, 0xf
0x400251:	xor	ebx, eax
0x400253:	call	0x500018
<Block for 0x400275, 17 bytes>
0x400275:	xor	eax, ebx
0x400277:	not	eax
0x400279:	mov	dword ptr [rbp - 0x14], eax
0x40027c:	mov	eax, dword ptr [rbp - 0x14]
0x40027f:	mov	edi, eax
0x400281:	call	0x400198
<Block for 0x400258, 4 bytes>
0x400258:	xor	eax, ebx
0x40025a:	jmp	0x400279
<Block for 0x400286, 8 bytes>
0x400286:	nop	
0x400287:	add	rsp, 0x18
0x40028b:	pop	rbx
0x40028c:	pop	rbp
0x40028d:	ret	
<Block for 0x400279, 13 bytes>
0x400279:	mov	dword ptr [rbp - 0x14], eax
0x40027c:	mov	eax, dword ptr [rbp - 0x14]
0x40027f:	mov	edi, eax
0x400281:	call	0x400198
