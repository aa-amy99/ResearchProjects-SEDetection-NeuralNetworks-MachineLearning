<Block for 0x400000, 149 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x70], 0
0x400023:	mov	qword ptr [rbp - 0x68], 0
0x40002b:	mov	qword ptr [rbp - 0x60], 0
0x400033:	mov	qword ptr [rbp - 0x58], 0
0x40003b:	mov	qword ptr [rbp - 0x50], 0
0x400043:	mov	qword ptr [rbp - 0x48], 0
0x40004b:	mov	qword ptr [rbp - 0x40], 0
0x400053:	mov	qword ptr [rbp - 0x38], 0
0x40005b:	mov	qword ptr [rbp - 0x30], 0
0x400063:	mov	qword ptr [rbp - 0x28], 0
0x40006b:	mov	qword ptr [rbp - 0x20], 0
0x400073:	mov	qword ptr [rbp - 0x18], 0
0x40007b:	mov	dword ptr [rbp - 0x10], 0
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	mov	qword ptr [rbp - 0x80], rax
0x40008a:	mov	eax, dword ptr [rip + 0x274]
0x400090:	cmp	eax, 5
0x400093:	jne	0x4000a9
<Block for 0x400095, 39 bytes>
0x400095:	mov	rax, qword ptr [rbp - 0x80]
0x400099:	mov	dword ptr [rax], 0x2d20736c
0x40009f:	mov	word ptr [rax + 4], 0x616c
0x4000a5:	mov	byte ptr [rax + 6], 0
0x4000a9:	mov	rax, qword ptr [rbp - 0x80]
0x4000ad:	lea	rsi, [rip + 0x254]
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500000
<Block for 0x4000a9, 19 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 0x80]
0x4000ad:	lea	rsi, [rip + 0x254]
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500000
<Block for 0x4000bc, 11 bytes>
0x4000bc:	mov	qword ptr [rbp - 0x78], rax
0x4000c0:	cmp	qword ptr [rbp - 0x78], 0
0x4000c5:	je	0x4000d3
<Block for 0x4000d3, 16 bytes>
0x4000d3:	nop	
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	xor	rax, qword ptr fs:[0x28]
0x4000e1:	je	0x4000e8
<Block for 0x4000c7, 12 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x78]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500008
<Block for 0x4000e8, 2 bytes>
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000e3, 5 bytes>
0x4000e3:	call	0x500010
