<Block for 0x4000ee, 65 bytes>
0x4000ee:	endbr64	
0x4000f2:	push	rbp
0x4000f3:	mov	rbp, rsp
0x4000f6:	sub	rsp, 0x20
0x4000fa:	mov	rax, qword ptr fs:[0x28]
0x400103:	mov	qword ptr [rbp - 8], rax
0x400107:	xor	eax, eax
0x400109:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400110:	mov	rax, qword ptr [rip + 0xffee9]
0x400117:	lea	rdx, [rbp - 0x1c]
0x40011b:	lea	rsi, [rip + 0x64]
0x400122:	mov	rdi, rax
0x400125:	mov	eax, 0
0x40012a:	call	0x500008
<Block for 0x40012f, 43 bytes>
0x40012f:	lea	rax, [rip + 0xfff02]
0x400136:	mov	qword ptr [rbp - 0x18], rax
0x40013a:	lea	rax, [rbp - 0x18]
0x40013e:	mov	qword ptr [rbp - 0x10], rax
0x400142:	mov	rax, qword ptr [rbp - 0x10]
0x400146:	mov	rax, qword ptr [rax]
0x400149:	mov	rcx, qword ptr [rax]
0x40014c:	mov	edx, dword ptr [rbp - 0x1c]
0x40014f:	mov	rax, qword ptr [rbp - 0x10]
0x400153:	mov	esi, edx
0x400155:	mov	rdi, rax
0x400158:	call	rcx
<Block for 0x40015a, 16 bytes>
0x40015a:	nop	
0x40015b:	mov	rax, qword ptr [rbp - 8]
0x40015f:	xor	rax, qword ptr fs:[0x28]
0x400168:	je	0x40016f
<Block for 0x40016f, 2 bytes>
0x40016f:	leave	
0x400170:	ret	
<Block for 0x40016a, 5 bytes>
0x40016a:	call	0x500018
