<Block for 0x400000, 90 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x24]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	lea	rax, [rbp - 0x24]
0x400027:	mov	qword ptr [rbp - 0x10], rax
0x40002b:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x18]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x20], eax
0x40003b:	mov	rax, qword ptr [rip + 0xfffbe]
0x400042:	lea	rdx, [rbp - 0x20]
0x400046:	lea	rsi, [rip + 0x113]
0x40004d:	mov	rdi, rax
0x400050:	mov	eax, 0
0x400055:	call	0x500008
<Block for 0x40005a, 24 bytes>
0x40005a:	mov	edx, dword ptr [rbp - 0x20]
0x40005d:	mov	rax, qword ptr [rbp - 0x18]
0x400061:	mov	dword ptr [rax], edx
0x400063:	mov	rax, qword ptr [rbp - 0x10]
0x400067:	mov	eax, dword ptr [rax]
0x400069:	mov	dword ptr [rbp - 0x1c], eax
0x40006c:	cmp	dword ptr [rbp - 0x1c], 5
0x400070:	jg	0x400091
<Block for 0x400072, 31 bytes>
0x400072:	lea	rcx, [rip + 0x147]
0x400079:	mov	edx, 0x29
0x40007e:	lea	rsi, [rip + 0xe3]
0x400085:	lea	rdi, [rip + 0x104]
0x40008c:	call	0x500010
<Block for 0x400091, 16 bytes>
0x400091:	nop	
0x400092:	mov	rax, qword ptr [rbp - 8]
0x400096:	xor	rax, qword ptr fs:[0x28]
0x40009f:	je	0x4000a6
<Block for 0x4000a6, 2 bytes>
0x4000a6:	leave	
0x4000a7:	ret	
<Block for 0x4000a1, 5 bytes>
0x4000a1:	call	0x500018
