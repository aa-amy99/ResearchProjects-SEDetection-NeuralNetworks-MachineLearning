<Block for 0x400000, 44 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400022:	mov	eax, dword ptr [rbp - 0x34]
0x400025:	mov	edi, eax
0x400027:	call	0x500000
<Block for 0x40002c, 49 bytes>
0x40002c:	mov	dword ptr [rbp - 0x34], eax
0x40002f:	mov	qword ptr [rbp - 0x30], 0
0x400037:	mov	qword ptr [rbp - 0x28], 0
0x40003f:	mov	qword ptr [rbp - 0x20], 0
0x400047:	mov	qword ptr [rbp - 0x18], 0
0x40004f:	mov	qword ptr [rbp - 0x10], 0
0x400057:	cmp	dword ptr [rbp - 0x34], 0
0x40005b:	js	0x40006f
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0x16a]
0x400076:	call	0x500010
<Block for 0x40005d, 16 bytes>
0x40005d:	mov	eax, dword ptr [rbp - 0x34]
0x400060:	cdqe	
0x400062:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400066:	mov	edi, eax
0x400068:	call	0x500008
<Block for 0x40007b, 16 bytes>
0x40007b:	nop	
0x40007c:	mov	rax, qword ptr [rbp - 8]
0x400080:	xor	rax, qword ptr fs:[0x28]
0x400089:	je	0x400090
<Block for 0x40006d, 2 bytes>
0x40006d:	jmp	0x40007b
<Block for 0x400090, 2 bytes>
0x400090:	leave	
0x400091:	ret	
<Block for 0x40008b, 5 bytes>
0x40008b:	call	0x500018
