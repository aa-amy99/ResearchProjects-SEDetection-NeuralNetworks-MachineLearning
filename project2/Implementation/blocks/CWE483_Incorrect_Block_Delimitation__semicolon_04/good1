<Block for 0x40007a, 21 bytes>
0x40007a:	endbr64	
0x40007e:	push	rbp
0x40007f:	mov	rbp, rsp
0x400082:	sub	rsp, 0x10
0x400086:	mov	eax, 0
0x40008b:	test	eax, eax
0x40008d:	je	0x40009d
<Block for 0x40009d, 5 bytes>
0x40009d:	call	0x500000
<Block for 0x40008f, 12 bytes>
0x40008f:	lea	rdi, [rip + 0x12a]
0x400096:	call	0x500008
<Block for 0x4000a2, 62 bytes>
0x4000a2:	mov	edx, eax
0x4000a4:	movsxd	rax, edx
0x4000a7:	imul	rax, rax, 0x55555556
0x4000ae:	shr	rax, 0x20
0x4000b2:	mov	rcx, rax
0x4000b5:	mov	eax, edx
0x4000b7:	sar	eax, 0x1f
0x4000ba:	mov	esi, ecx
0x4000bc:	sub	esi, eax
0x4000be:	mov	eax, esi
0x4000c0:	mov	dword ptr [rbp - 4], eax
0x4000c3:	mov	ecx, dword ptr [rbp - 4]
0x4000c6:	mov	eax, ecx
0x4000c8:	add	eax, eax
0x4000ca:	add	eax, ecx
0x4000cc:	sub	edx, eax
0x4000ce:	mov	eax, edx
0x4000d0:	mov	dword ptr [rbp - 4], eax
0x4000d3:	mov	dword ptr [rbp - 8], 0
0x4000da:	cmp	dword ptr [rbp - 4], 0
0x4000de:	jne	0x4000f3
<Block for 0x40009b, 2 bytes>
0x40009b:	jmp	0x400105
<Block for 0x4000e0, 12 bytes>
0x4000e0:	lea	rdi, [rip + 0xc9]
0x4000e7:	call	0x500008
<Block for 0x4000f3, 6 bytes>
0x4000f3:	cmp	dword ptr [rbp - 8], 0
0x4000f7:	je	0x400105
<Block for 0x400105, 3 bytes>
0x400105:	nop	
0x400106:	leave	
0x400107:	ret	
<Block for 0x4000ec, 13 bytes>
0x4000ec:	mov	dword ptr [rbp - 8], 1
0x4000f3:	cmp	dword ptr [rbp - 8], 0
0x4000f7:	je	0x400105
<Block for 0x4000f9, 12 bytes>
0x4000f9:	lea	rdi, [rip + 0xb7]
0x400100:	call	0x500008
