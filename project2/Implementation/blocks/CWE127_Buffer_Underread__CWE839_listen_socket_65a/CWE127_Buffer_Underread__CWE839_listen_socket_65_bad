<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0xfffe6]
0x400022:	mov	qword ptr [rbp - 0x38], rax
0x400026:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40002d:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400034:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x40003b:	mov	edx, 6
0x400040:	mov	esi, 1
0x400045:	mov	edi, 2
0x40004a:	call	0x500010
<Block for 0x40004f, 13 bytes>
0x40004f:	mov	dword ptr [rbp - 0x40], eax
0x400052:	cmp	dword ptr [rbp - 0x40], -1
0x400056:	je	0x40011b
<Block for 0x40011b, 3 bytes>
0x40011b:	nop	
0x40011c:	jmp	0x400125
<Block for 0x40005c, 22 bytes>
0x40005c:	lea	rax, [rbp - 0x30]
0x400060:	mov	edx, 0x10
0x400065:	mov	esi, 0
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500018
<Block for 0x400125, 6 bytes>
0x400125:	cmp	dword ptr [rbp - 0x40], -1
0x400129:	je	0x400135
<Block for 0x400072, 23 bytes>
0x400072:	mov	word ptr [rbp - 0x30], 2
0x400078:	mov	dword ptr [rbp - 0x2c], 0
0x40007f:	mov	edi, 0x6987
0x400084:	call	0x500020
<Block for 0x400135, 6 bytes>
0x400135:	cmp	dword ptr [rbp - 0x44], -1
0x400139:	je	0x400145
<Block for 0x40012b, 10 bytes>
0x40012b:	mov	eax, dword ptr [rbp - 0x40]
0x40012e:	mov	edi, eax
0x400130:	call	0x500050
<Block for 0x400089, 26 bytes>
0x400089:	mov	word ptr [rbp - 0x2e], ax
0x40008d:	lea	rcx, [rbp - 0x30]
0x400091:	mov	eax, dword ptr [rbp - 0x40]
0x400094:	mov	edx, 0x10
0x400099:	mov	rsi, rcx
0x40009c:	mov	edi, eax
0x40009e:	call	0x500028
<Block for 0x400145, 11 bytes>
0x400145:	mov	eax, dword ptr [rbp - 0x48]
0x400148:	mov	rdx, qword ptr [rbp - 0x38]
0x40014c:	mov	edi, eax
0x40014e:	call	rdx
<Block for 0x40013b, 10 bytes>
0x40013b:	mov	eax, dword ptr [rbp - 0x44]
0x40013e:	mov	edi, eax
0x400140:	call	0x500050
<Block for 0x4000a3, 5 bytes>
0x4000a3:	cmp	eax, -1
0x4000a6:	je	0x40011e
<Block for 0x400150, 16 bytes>
0x400150:	nop	
0x400151:	mov	rax, qword ptr [rbp - 8]
0x400155:	xor	rax, qword ptr fs:[0x28]
0x40015e:	je	0x400165
<Block for 0x40011e, 3 bytes>
0x40011e:	nop	
0x40011f:	jmp	0x400125
<Block for 0x4000a8, 15 bytes>
0x4000a8:	mov	eax, dword ptr [rbp - 0x40]
0x4000ab:	mov	esi, 5
0x4000b0:	mov	edi, eax
0x4000b2:	call	0x500030
<Block for 0x400165, 2 bytes>
0x400165:	leave	
0x400166:	ret	
<Block for 0x400160, 5 bytes>
0x400160:	call	0x500058
<Block for 0x4000b7, 5 bytes>
0x4000b7:	cmp	eax, -1
0x4000ba:	je	0x400121
<Block for 0x400121, 3 bytes>
0x400121:	nop	
0x400122:	jmp	0x400125
<Block for 0x4000bc, 20 bytes>
0x4000bc:	mov	eax, dword ptr [rbp - 0x40]
0x4000bf:	mov	edx, 0
0x4000c4:	mov	esi, 0
0x4000c9:	mov	edi, eax
0x4000cb:	call	0x500038
<Block for 0x4000d0, 9 bytes>
0x4000d0:	mov	dword ptr [rbp - 0x44], eax
0x4000d3:	cmp	dword ptr [rbp - 0x44], -1
0x4000d7:	je	0x400124
<Block for 0x4000d9, 24 bytes>
0x4000d9:	lea	rsi, [rbp - 0x16]
0x4000dd:	mov	eax, dword ptr [rbp - 0x44]
0x4000e0:	mov	ecx, 0
0x4000e5:	mov	edx, 0xd
0x4000ea:	mov	edi, eax
0x4000ec:	call	0x500040
<Block for 0x400124, 1 bytes>
0x400124:	nop	
<Block for 0x4000f1, 9 bytes>
0x4000f1:	mov	dword ptr [rbp - 0x3c], eax
0x4000f4:	cmp	dword ptr [rbp - 0x3c], -1
0x4000f8:	je	0x400125
<Block for 0x4000fa, 6 bytes>
0x4000fa:	cmp	dword ptr [rbp - 0x3c], 0
0x4000fe:	je	0x400125
<Block for 0x400100, 22 bytes>
0x400100:	mov	eax, dword ptr [rbp - 0x3c]
0x400103:	cdqe	
0x400105:	mov	byte ptr [rbp + rax - 0x16], 0
0x40010a:	lea	rax, [rbp - 0x16]
0x40010e:	mov	rdi, rax
0x400111:	call	0x500048
<Block for 0x400116, 5 bytes>
0x400116:	mov	dword ptr [rbp - 0x48], eax
0x400119:	jmp	0x400125
