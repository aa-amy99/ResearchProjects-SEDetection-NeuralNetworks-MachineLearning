<Block for 0x400000, 70 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	qword ptr [rbp - 0x48], rdi
0x400010:	mov	dword ptr [rbp - 0x4c], esi
0x400013:	mov	rax, qword ptr fs:[0x28]
0x40001c:	mov	qword ptr [rbp - 8], rax
0x400020:	xor	eax, eax
0x400022:	mov	rax, qword ptr [rbp - 0x48]
0x400026:	mov	edx, dword ptr [rbp - 0x4c]
0x400029:	mov	dword ptr [rax], edx
0x40002b:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400032:	mov	edx, 6
0x400037:	mov	esi, 1
0x40003c:	mov	edi, 2
0x400041:	call	0x500000
<Block for 0x400046, 13 bytes>
0x400046:	mov	dword ptr [rbp - 0x38], eax
0x400049:	cmp	dword ptr [rbp - 0x38], -1
0x40004d:	je	0x4000f1
<Block for 0x4000f1, 3 bytes>
0x4000f1:	nop	
0x4000f2:	jmp	0x4000f5
<Block for 0x400053, 22 bytes>
0x400053:	lea	rax, [rbp - 0x30]
0x400057:	mov	edx, 0x10
0x40005c:	mov	esi, 0
0x400061:	mov	rdi, rax
0x400064:	call	0x500008
<Block for 0x4000f5, 6 bytes>
0x4000f5:	cmp	dword ptr [rbp - 0x38], -1
0x4000f9:	je	0x400105
<Block for 0x400069, 18 bytes>
0x400069:	mov	word ptr [rbp - 0x30], 2
0x40006f:	lea	rdi, [rip + 0xea]
0x400076:	call	0x500010
<Block for 0x400105, 16 bytes>
0x400105:	nop	
0x400106:	mov	rax, qword ptr [rbp - 8]
0x40010a:	xor	rax, qword ptr fs:[0x28]
0x400113:	je	0x40011a
<Block for 0x4000fb, 10 bytes>
0x4000fb:	mov	eax, dword ptr [rbp - 0x38]
0x4000fe:	mov	edi, eax
0x400100:	call	0x500038
<Block for 0x40007b, 13 bytes>
0x40007b:	mov	dword ptr [rbp - 0x2c], eax
0x40007e:	mov	edi, 0x6987
0x400083:	call	0x500018
<Block for 0x40011a, 2 bytes>
0x40011a:	leave	
0x40011b:	ret	
<Block for 0x400115, 5 bytes>
0x400115:	call	0x500040
<Block for 0x400088, 26 bytes>
0x400088:	mov	word ptr [rbp - 0x2e], ax
0x40008c:	lea	rcx, [rbp - 0x30]
0x400090:	mov	eax, dword ptr [rbp - 0x38]
0x400093:	mov	edx, 0x10
0x400098:	mov	rsi, rcx
0x40009b:	mov	edi, eax
0x40009d:	call	0x500020
<Block for 0x4000a2, 10 bytes>
0x4000a2:	cmp	eax, -1
0x4000a5:	sete	al
0x4000a8:	test	al, al
0x4000aa:	jne	0x4000f4
<Block for 0x4000ac, 24 bytes>
0x4000ac:	lea	rsi, [rbp - 0x16]
0x4000b0:	mov	eax, dword ptr [rbp - 0x38]
0x4000b3:	mov	ecx, 0
0x4000b8:	mov	edx, 0xd
0x4000bd:	mov	edi, eax
0x4000bf:	call	0x500028
<Block for 0x4000f4, 1 bytes>
0x4000f4:	nop	
<Block for 0x4000c4, 9 bytes>
0x4000c4:	mov	dword ptr [rbp - 0x34], eax
0x4000c7:	cmp	dword ptr [rbp - 0x34], -1
0x4000cb:	je	0x4000f5
<Block for 0x4000cd, 6 bytes>
0x4000cd:	cmp	dword ptr [rbp - 0x34], 0
0x4000d1:	je	0x4000f5
<Block for 0x4000d3, 22 bytes>
0x4000d3:	mov	eax, dword ptr [rbp - 0x34]
0x4000d6:	cdqe	
0x4000d8:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000dd:	lea	rax, [rbp - 0x16]
0x4000e1:	mov	rdi, rax
0x4000e4:	call	0x500030
<Block for 0x4000e9, 8 bytes>
0x4000e9:	mov	rdx, qword ptr [rbp - 0x48]
0x4000ed:	mov	dword ptr [rdx], eax
0x4000ef:	jmp	0x4000f5
