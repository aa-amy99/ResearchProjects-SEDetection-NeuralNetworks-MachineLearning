<Block for 0x40023d, 82 bytes>
0x40023d:	endbr64	
0x400241:	push	rbp
0x400242:	mov	rbp, rsp
0x400245:	sub	rsp, 0x120
0x40024c:	mov	rax, qword ptr fs:[0x28]
0x400255:	mov	qword ptr [rbp - 8], rax
0x400259:	xor	eax, eax
0x40025b:	movabs	rax, 0x3d48544150
0x400265:	mov	edx, 0
0x40026a:	mov	qword ptr [rbp - 0x110], rax
0x400271:	mov	qword ptr [rbp - 0x108], rdx
0x400278:	lea	rdx, [rbp - 0x100]
0x40027f:	mov	eax, 0
0x400284:	mov	ecx, 0x1d
0x400289:	mov	rdi, rdx
0x40028c:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028f, 35 bytes>
0x40028f:	mov	rdx, rdi
0x400292:	mov	word ptr [rdx], ax
0x400295:	add	rdx, 2
0x400299:	lea	rax, [rbp - 0x110]
0x4002a0:	mov	qword ptr [rbp - 0x118], rax
0x4002a7:	mov	eax, dword ptr [rip + 0xffd53]
0x4002ad:	cmp	eax, 5
0x4002b0:	je	0x4002c0
<Block for 0x40028c, 3 bytes>
0x40028c:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002c0, 27 bytes>
0x4002c0:	mov	rax, qword ptr [rbp - 0x118]
0x4002c7:	mov	rcx, -1
0x4002ce:	mov	rdx, rax
0x4002d1:	mov	eax, 0
0x4002d6:	mov	rdi, rdx
0x4002d9:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002b2, 12 bytes>
0x4002b2:	lea	rdi, [rip + 0x163]
0x4002b9:	call	0x500060
<Block for 0x4002db, 45 bytes>
0x4002db:	mov	rax, rcx
0x4002de:	not	rax
0x4002e1:	lea	rdx, [rax - 1]
0x4002e5:	mov	rax, qword ptr [rbp - 0x118]
0x4002ec:	add	rax, rdx
0x4002ef:	mov	dword ptr [rax], 0x6e69622f
0x4002f5:	mov	byte ptr [rax + 4], 0
0x4002f9:	mov	rax, qword ptr [rbp - 0x118]
0x400300:	mov	rdi, rax
0x400303:	call	0x500050
<Block for 0x4002d9, 2 bytes>
0x4002d9:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002be, 2 bytes>
0x4002be:	jmp	0x4002f9
<Block for 0x400308, 16 bytes>
0x400308:	nop	
0x400309:	mov	rax, qword ptr [rbp - 8]
0x40030d:	xor	rax, qword ptr fs:[0x28]
0x400316:	je	0x40031d
<Block for 0x4002f9, 15 bytes>
0x4002f9:	mov	rax, qword ptr [rbp - 0x118]
0x400300:	mov	rdi, rax
0x400303:	call	0x500050
<Block for 0x40031d, 2 bytes>
0x40031d:	leave	
0x40031e:	ret	
<Block for 0x400318, 5 bytes>
0x400318:	call	0x500058
