<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 39 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	eax, dword ptr [rip + 0xfff90]
0x400070:	cmp	eax, 5
0x400073:	jne	0x400217
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400079, 25 bytes>
0x400079:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400083:	mov	rax, qword ptr [rbp - 0x138]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500008
<Block for 0x400217, 15 bytes>
0x400217:	mov	rax, qword ptr [rbp - 0x138]
0x40021e:	mov	rdi, rax
0x400221:	call	0x500050
<Block for 0x400092, 27 bytes>
0x400092:	mov	qword ptr [rbp - 0x130], rax
0x400099:	mov	edx, 6
0x40009e:	mov	esi, 1
0x4000a3:	mov	edi, 2
0x4000a8:	call	0x500010
<Block for 0x400226, 16 bytes>
0x400226:	nop	
0x400227:	mov	rax, qword ptr [rbp - 8]
0x40022b:	xor	rax, qword ptr fs:[0x28]
0x400234:	je	0x40023b
<Block for 0x4000ad, 19 bytes>
0x4000ad:	mov	dword ptr [rbp - 0x140], eax
0x4000b3:	cmp	dword ptr [rbp - 0x140], -1
0x4000ba:	je	0x4001fd
<Block for 0x40023b, 2 bytes>
0x40023b:	leave	
0x40023c:	ret	
<Block for 0x400236, 5 bytes>
0x400236:	call	0x500058
<Block for 0x4001fd, 3 bytes>
0x4001fd:	nop	
0x4001fe:	jmp	0x400201
<Block for 0x4000c0, 25 bytes>
0x4000c0:	lea	rax, [rbp - 0x120]
0x4000c7:	mov	edx, 0x10
0x4000cc:	mov	esi, 0
0x4000d1:	mov	rdi, rax
0x4000d4:	call	0x500018
<Block for 0x400201, 9 bytes>
0x400201:	cmp	dword ptr [rbp - 0x140], -1
0x400208:	je	0x400217
<Block for 0x4000d9, 21 bytes>
0x4000d9:	mov	word ptr [rbp - 0x120], 2
0x4000e2:	lea	rdi, [rip + 0x329]
0x4000e9:	call	0x500020
<Block for 0x40020a, 13 bytes>
0x40020a:	mov	eax, dword ptr [rbp - 0x140]
0x400210:	mov	edi, eax
0x400212:	call	0x500048
<Block for 0x4000ee, 16 bytes>
0x4000ee:	mov	dword ptr [rbp - 0x11c], eax
0x4000f4:	mov	edi, 0x6987
0x4000f9:	call	0x500028
<Block for 0x4000fe, 35 bytes>
0x4000fe:	mov	word ptr [rbp - 0x11e], ax
0x400105:	lea	rcx, [rbp - 0x120]
0x40010c:	mov	eax, dword ptr [rbp - 0x140]
0x400112:	mov	edx, 0x10
0x400117:	mov	rsi, rcx
0x40011a:	mov	edi, eax
0x40011c:	call	0x500030
<Block for 0x400121, 9 bytes>
0x400121:	cmp	eax, -1
0x400124:	je	0x400200
<Block for 0x40012a, 51 bytes>
0x40012a:	mov	eax, 0xf9
0x40012f:	sub	rax, qword ptr [rbp - 0x130]
0x400136:	mov	rdx, rax
0x400139:	mov	rcx, qword ptr [rbp - 0x138]
0x400140:	mov	rax, qword ptr [rbp - 0x130]
0x400147:	lea	rsi, [rcx + rax]
0x40014b:	mov	eax, dword ptr [rbp - 0x140]
0x400151:	mov	ecx, 0
0x400156:	mov	edi, eax
0x400158:	call	0x500038
<Block for 0x400200, 1 bytes>
0x400200:	nop	
<Block for 0x40015d, 19 bytes>
0x40015d:	mov	dword ptr [rbp - 0x13c], eax
0x400163:	cmp	dword ptr [rbp - 0x13c], -1
0x40016a:	je	0x400201
<Block for 0x400170, 13 bytes>
0x400170:	cmp	dword ptr [rbp - 0x13c], 0
0x400177:	je	0x400201
<Block for 0x40017d, 52 bytes>
0x40017d:	mov	eax, dword ptr [rbp - 0x13c]
0x400183:	movsxd	rdx, eax
0x400186:	mov	rax, qword ptr [rbp - 0x130]
0x40018d:	add	rdx, rax
0x400190:	mov	rax, qword ptr [rbp - 0x138]
0x400197:	add	rax, rdx
0x40019a:	mov	byte ptr [rax], 0
0x40019d:	mov	rax, qword ptr [rbp - 0x138]
0x4001a4:	mov	esi, 0xd
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x500040
<Block for 0x4001b1, 17 bytes>
0x4001b1:	mov	qword ptr [rbp - 0x128], rax
0x4001b8:	cmp	qword ptr [rbp - 0x128], 0
0x4001c0:	je	0x4001cc
<Block for 0x4001cc, 20 bytes>
0x4001cc:	mov	rax, qword ptr [rbp - 0x138]
0x4001d3:	mov	esi, 0xa
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500040
<Block for 0x4001c2, 30 bytes>
0x4001c2:	mov	rax, qword ptr [rbp - 0x128]
0x4001c9:	mov	byte ptr [rax], 0
0x4001cc:	mov	rax, qword ptr [rbp - 0x138]
0x4001d3:	mov	esi, 0xa
0x4001d8:	mov	rdi, rax
0x4001db:	call	0x500040
<Block for 0x4001e0, 17 bytes>
0x4001e0:	mov	qword ptr [rbp - 0x128], rax
0x4001e7:	cmp	qword ptr [rbp - 0x128], 0
0x4001ef:	je	0x400201
<Block for 0x4001f1, 12 bytes>
0x4001f1:	mov	rax, qword ptr [rbp - 0x128]
0x4001f8:	mov	byte ptr [rax], 0
0x4001fb:	jmp	0x400201
