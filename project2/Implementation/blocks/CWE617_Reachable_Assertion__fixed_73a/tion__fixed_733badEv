<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002ac
<Block for 0x400028, 33 bytes>
0x400028:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40002f:	mov	dword ptr [rbp - 0x54], 4
0x400036:	lea	rdx, [rbp - 0x54]
0x40003a:	lea	rax, [rbp - 0x50]
0x40003e:	mov	rsi, rdx
0x400041:	mov	rdi, rax
0x400044:	call	0x4003a2
<Block for 0x400049, 19 bytes>
0x400049:	lea	rdx, [rbp - 0x54]
0x40004d:	lea	rax, [rbp - 0x50]
0x400051:	mov	rsi, rdx
0x400054:	mov	rdi, rax
0x400057:	call	0x4003a2
<Block for 0x40005c, 19 bytes>
0x40005c:	lea	rdx, [rbp - 0x54]
0x400060:	lea	rax, [rbp - 0x50]
0x400064:	mov	rsi, rdx
0x400067:	mov	rdi, rax
0x40006a:	call	0x4003a2
<Block for 0x40006f, 19 bytes>
0x40006f:	lea	rdx, [rbp - 0x50]
0x400073:	lea	rax, [rbp - 0x30]
0x400077:	mov	rsi, rdx
0x40007a:	mov	rdi, rax
0x40007d:	call	0x4003dc
<Block for 0x400082, 12 bytes>
0x400082:	lea	rax, [rbp - 0x30]
0x400086:	mov	rdi, rax
0x400089:	call	0x500000
<Block for 0x40008e, 12 bytes>
0x40008e:	lea	rax, [rbp - 0x30]
0x400092:	mov	rdi, rax
0x400095:	call	0x4002cc
<Block for 0x40009a, 12 bytes>
0x40009a:	lea	rax, [rbp - 0x50]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x4002cc
<Block for 0x4000a6, 16 bytes>
0x4000a6:	nop	
0x4000a7:	mov	rax, qword ptr [rbp - 0x18]
0x4000ab:	xor	rax, qword ptr fs:[0x28]
0x4000b4:	je	0x4000f0
<Block for 0x4000f0, 7 bytes>
0x4000f0:	add	rsp, 0x58
0x4000f4:	pop	rbx
0x4000f5:	pop	rbp
0x4000f6:	ret	
<Block for 0x4000b6, 2 bytes>
0x4000b6:	jmp	0x4000eb
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500010
