<Block for 0x400063, 22 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x10
0x40006f:	mov	eax, 0
0x400074:	call	0x500018
<Block for 0x400079, 4 bytes>
0x400079:	test	eax, eax
0x40007b:	je	0x40008b
<Block for 0x40008b, 5 bytes>
0x40008b:	call	0x500008
<Block for 0x40007d, 12 bytes>
0x40007d:	lea	rdi, [rip + 0x101]
0x400084:	call	0x500010
<Block for 0x400090, 55 bytes>
0x400090:	mov	edx, eax
0x400092:	movsxd	rax, edx
0x400095:	imul	rax, rax, 0x55555556
0x40009c:	shr	rax, 0x20
0x4000a0:	mov	rcx, rax
0x4000a3:	mov	eax, edx
0x4000a5:	sar	eax, 0x1f
0x4000a8:	mov	esi, ecx
0x4000aa:	sub	esi, eax
0x4000ac:	mov	eax, esi
0x4000ae:	mov	dword ptr [rbp - 4], eax
0x4000b1:	mov	ecx, dword ptr [rbp - 4]
0x4000b4:	mov	eax, ecx
0x4000b6:	add	eax, eax
0x4000b8:	add	eax, ecx
0x4000ba:	sub	edx, eax
0x4000bc:	mov	eax, edx
0x4000be:	mov	dword ptr [rbp - 4], eax
0x4000c1:	cmp	dword ptr [rbp - 4], 0
0x4000c5:	jne	0x4000d4
<Block for 0x400089, 2 bytes>
0x400089:	jmp	0x4000e0
<Block for 0x4000c7, 12 bytes>
0x4000c7:	lea	rdi, [rip + 0xcc]
0x4000ce:	call	0x500010
<Block for 0x4000d4, 12 bytes>
0x4000d4:	lea	rdi, [rip + 0xd9]
0x4000db:	call	0x500010
<Block for 0x4000e0, 3 bytes>
0x4000e0:	nop	
0x4000e1:	leave	
0x4000e2:	ret	
<Block for 0x4000d3, 1 bytes>
0x4000d3:	nop	
