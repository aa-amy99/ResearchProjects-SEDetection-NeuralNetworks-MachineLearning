<Block for 0x40030f, 40 bytes>
0x40030f:	endbr64	
0x400313:	push	rbp
0x400314:	mov	rbp, rsp
0x400317:	push	rbx
0x400318:	sub	rsp, 0x48
0x40031c:	mov	rax, qword ptr fs:[0x28]
0x400325:	mov	qword ptr [rbp - 0x18], rax
0x400329:	xor	eax, eax
0x40032b:	lea	rax, [rbp - 0x50]
0x40032f:	mov	rdi, rax
0x400332:	call	0x40095c
<Block for 0x400337, 26 bytes>
0x400337:	mov	dword ptr [rbp - 0x30], 0x64
0x40033e:	lea	rdx, [rbp - 0x30]
0x400342:	lea	rax, [rbp - 0x50]
0x400346:	mov	rsi, rdx
0x400349:	mov	rdi, rax
0x40034c:	call	0x400bfc
<Block for 0x400351, 26 bytes>
0x400351:	mov	dword ptr [rbp - 0x30], 0
0x400358:	lea	rdx, [rbp - 0x30]
0x40035c:	lea	rax, [rbp - 0x50]
0x400360:	mov	rsi, rdx
0x400363:	mov	rdi, rax
0x400366:	call	0x400bfc
<Block for 0x40036b, 29 bytes>
0x40036b:	mov	dword ptr [rip + 0x503], 0
0x400375:	lea	rdx, [rbp - 0x50]
0x400379:	lea	rax, [rbp - 0x30]
0x40037d:	mov	rsi, rdx
0x400380:	mov	rdi, rax
0x400383:	call	0x400c4a
<Block for 0x400388, 12 bytes>
0x400388:	lea	rax, [rbp - 0x30]
0x40038c:	mov	rdi, rax
0x40038f:	call	0x40020b
<Block for 0x400394, 12 bytes>
0x400394:	lea	rax, [rbp - 0x30]
0x400398:	mov	rdi, rax
0x40039b:	call	0x40097c
<Block for 0x4003a0, 12 bytes>
0x4003a0:	lea	rax, [rbp - 0x50]
0x4003a4:	mov	rdi, rax
0x4003a7:	call	0x40097c
<Block for 0x4003ac, 16 bytes>
0x4003ac:	nop	
0x4003ad:	mov	rax, qword ptr [rbp - 0x18]
0x4003b1:	xor	rax, qword ptr fs:[0x28]
0x4003ba:	je	0x4003f6
<Block for 0x4003f6, 7 bytes>
0x4003f6:	add	rsp, 0x48
0x4003fa:	pop	rbx
0x4003fb:	pop	rbp
0x4003fc:	ret	
<Block for 0x4003bc, 2 bytes>
0x4003bc:	jmp	0x4003f1
<Block for 0x4003f1, 5 bytes>
0x4003f1:	call	0x500030
