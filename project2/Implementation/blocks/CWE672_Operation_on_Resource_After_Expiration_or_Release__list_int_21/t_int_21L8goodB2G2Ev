<Block for 0x4004f4, 40 bytes>
0x4004f4:	endbr64	
0x4004f8:	push	rbp
0x4004f9:	mov	rbp, rsp
0x4004fc:	push	rbx
0x4004fd:	sub	rsp, 0x48
0x400501:	mov	rax, qword ptr fs:[0x28]
0x40050a:	mov	qword ptr [rbp - 0x18], rax
0x40050e:	xor	eax, eax
0x400510:	lea	rax, [rbp - 0x50]
0x400514:	mov	rdi, rax
0x400517:	call	0x40095c
<Block for 0x40051c, 26 bytes>
0x40051c:	mov	dword ptr [rbp - 0x30], 0x64
0x400523:	lea	rdx, [rbp - 0x30]
0x400527:	lea	rax, [rbp - 0x50]
0x40052b:	mov	rsi, rdx
0x40052e:	mov	rdi, rax
0x400531:	call	0x400bfc
<Block for 0x400536, 26 bytes>
0x400536:	mov	dword ptr [rbp - 0x30], 0
0x40053d:	lea	rdx, [rbp - 0x30]
0x400541:	lea	rax, [rbp - 0x50]
0x400545:	mov	rsi, rdx
0x400548:	mov	rdi, rax
0x40054b:	call	0x400bfc
<Block for 0x400550, 29 bytes>
0x400550:	mov	dword ptr [rip + 0x322], 1
0x40055a:	lea	rdx, [rbp - 0x50]
0x40055e:	lea	rax, [rbp - 0x30]
0x400562:	mov	rsi, rdx
0x400565:	mov	rdi, rax
0x400568:	call	0x400c4a
<Block for 0x40056d, 12 bytes>
0x40056d:	lea	rax, [rbp - 0x30]
0x400571:	mov	rdi, rax
0x400574:	call	0x4003fd
<Block for 0x400579, 12 bytes>
0x400579:	lea	rax, [rbp - 0x30]
0x40057d:	mov	rdi, rax
0x400580:	call	0x40097c
<Block for 0x400585, 12 bytes>
0x400585:	lea	rax, [rbp - 0x50]
0x400589:	mov	rdi, rax
0x40058c:	call	0x40097c
<Block for 0x400591, 16 bytes>
0x400591:	nop	
0x400592:	mov	rax, qword ptr [rbp - 0x18]
0x400596:	xor	rax, qword ptr fs:[0x28]
0x40059f:	je	0x4005db
<Block for 0x4005db, 7 bytes>
0x4005db:	add	rsp, 0x48
0x4005df:	pop	rbx
0x4005e0:	pop	rbp
0x4005e1:	ret	
<Block for 0x4005a1, 2 bytes>
0x4005a1:	jmp	0x4005d6
<Block for 0x4005d6, 5 bytes>
0x4005d6:	call	0x500030
