<Block for 0x400043, 21 bytes>
0x400043:	endbr64	
0x400047:	push	rbp
0x400048:	mov	rbp, rsp
0x40004b:	sub	rsp, 0x10
0x40004f:	mov	eax, 0
0x400054:	test	eax, eax
0x400056:	je	0x400066
<Block for 0x400066, 27 bytes>
0x400066:	mov	qword ptr [rbp - 8], 0
0x40006e:	lea	rsi, [rip + 0xc3]
0x400075:	lea	rdi, [rip + 0xbf]
0x40007c:	call	0x500000
<Block for 0x400058, 12 bytes>
0x400058:	lea	rdi, [rip + 0xe5]
0x40005f:	call	0x500010
<Block for 0x400081, 11 bytes>
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	cmp	qword ptr [rbp - 8], 0
0x40008a:	jne	0x4000a2
<Block for 0x400064, 2 bytes>
0x400064:	jmp	0x4000ae
<Block for 0x40008c, 12 bytes>
0x40008c:	lea	rdi, [rip + 0xc6]
0x400093:	call	0x500010
<Block for 0x4000a2, 12 bytes>
0x4000a2:	mov	rax, qword ptr [rbp - 8]
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500008
<Block for 0x4000ae, 3 bytes>
0x4000ae:	nop	
0x4000af:	leave	
0x4000b0:	ret	
<Block for 0x400098, 10 bytes>
0x400098:	mov	edi, 1
0x40009d:	call	0x500018
