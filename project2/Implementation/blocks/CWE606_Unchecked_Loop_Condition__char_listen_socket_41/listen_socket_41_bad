<Block for 0x400081, 179 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0xb0
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	mov	qword ptr [rbp - 0x70], 0
0x4000a7:	mov	qword ptr [rbp - 0x68], 0
0x4000af:	mov	qword ptr [rbp - 0x60], 0
0x4000b7:	mov	qword ptr [rbp - 0x58], 0
0x4000bf:	mov	qword ptr [rbp - 0x50], 0
0x4000c7:	mov	qword ptr [rbp - 0x48], 0
0x4000cf:	mov	qword ptr [rbp - 0x40], 0
0x4000d7:	mov	qword ptr [rbp - 0x38], 0
0x4000df:	mov	qword ptr [rbp - 0x30], 0
0x4000e7:	mov	qword ptr [rbp - 0x28], 0
0x4000ef:	mov	qword ptr [rbp - 0x20], 0
0x4000f7:	mov	qword ptr [rbp - 0x18], 0
0x4000ff:	mov	dword ptr [rbp - 0x10], 0
0x400106:	lea	rax, [rbp - 0x70]
0x40010a:	mov	qword ptr [rbp - 0x98], rax
0x400111:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x40011b:	mov	dword ptr [rbp - 0xa4], 0xffffffff
0x400125:	mov	rax, qword ptr [rbp - 0x98]
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500018
<Block for 0x400134, 27 bytes>
0x400134:	mov	qword ptr [rbp - 0x90], rax
0x40013b:	mov	edx, 6
0x400140:	mov	esi, 1
0x400145:	mov	edi, 2
0x40014a:	call	0x500020
<Block for 0x40014f, 19 bytes>
0x40014f:	mov	dword ptr [rbp - 0xa0], eax
0x400155:	cmp	dword ptr [rbp - 0xa0], -1
0x40015c:	je	0x4002cd
<Block for 0x4002cd, 3 bytes>
0x4002cd:	nop	
0x4002ce:	jmp	0x4002d7
<Block for 0x400162, 22 bytes>
0x400162:	lea	rax, [rbp - 0x80]
0x400166:	mov	edx, 0x10
0x40016b:	mov	esi, 0
0x400170:	mov	rdi, rax
0x400173:	call	0x500028
<Block for 0x4002d7, 9 bytes>
0x4002d7:	cmp	dword ptr [rbp - 0xa0], -1
0x4002de:	je	0x4002ed
<Block for 0x400178, 23 bytes>
0x400178:	mov	word ptr [rbp - 0x80], 2
0x40017e:	mov	dword ptr [rbp - 0x7c], 0
0x400185:	mov	edi, 0x6987
0x40018a:	call	0x500030
<Block for 0x4002ed, 9 bytes>
0x4002ed:	cmp	dword ptr [rbp - 0xa4], -1
0x4002f4:	je	0x400303
<Block for 0x4002e0, 13 bytes>
0x4002e0:	mov	eax, dword ptr [rbp - 0xa0]
0x4002e6:	mov	edi, eax
0x4002e8:	call	0x500060
<Block for 0x40018f, 29 bytes>
0x40018f:	mov	word ptr [rbp - 0x7e], ax
0x400193:	lea	rcx, [rbp - 0x80]
0x400197:	mov	eax, dword ptr [rbp - 0xa0]
0x40019d:	mov	edx, 0x10
0x4001a2:	mov	rsi, rcx
0x4001a5:	mov	edi, eax
0x4001a7:	call	0x500038
<Block for 0x400303, 15 bytes>
0x400303:	mov	rax, qword ptr [rbp - 0x98]
0x40030a:	mov	rdi, rax
0x40030d:	call	0x400000
<Block for 0x4002f6, 13 bytes>
0x4002f6:	mov	eax, dword ptr [rbp - 0xa4]
0x4002fc:	mov	edi, eax
0x4002fe:	call	0x500060
<Block for 0x4001ac, 9 bytes>
0x4001ac:	cmp	eax, -1
0x4001af:	je	0x4002d0
<Block for 0x400312, 16 bytes>
0x400312:	nop	
0x400313:	mov	rax, qword ptr [rbp - 8]
0x400317:	xor	rax, qword ptr fs:[0x28]
0x400320:	je	0x400327
<Block for 0x4002d0, 3 bytes>
0x4002d0:	nop	
0x4002d1:	jmp	0x4002d7
<Block for 0x4001b5, 18 bytes>
0x4001b5:	mov	eax, dword ptr [rbp - 0xa0]
0x4001bb:	mov	esi, 5
0x4001c0:	mov	edi, eax
0x4001c2:	call	0x500040
<Block for 0x400327, 2 bytes>
0x400327:	leave	
0x400328:	ret	
<Block for 0x400322, 5 bytes>
0x400322:	call	0x500010
<Block for 0x4001c7, 9 bytes>
0x4001c7:	cmp	eax, -1
0x4001ca:	je	0x4002d3
<Block for 0x4002d3, 3 bytes>
0x4002d3:	nop	
0x4002d4:	jmp	0x4002d7
<Block for 0x4001d0, 23 bytes>
0x4001d0:	mov	eax, dword ptr [rbp - 0xa0]
0x4001d6:	mov	edx, 0
0x4001db:	mov	esi, 0
0x4001e0:	mov	edi, eax
0x4001e2:	call	0x500048
<Block for 0x4001e7, 19 bytes>
0x4001e7:	mov	dword ptr [rbp - 0xa4], eax
0x4001ed:	cmp	dword ptr [rbp - 0xa4], -1
0x4001f4:	je	0x4002d6
<Block for 0x4001fa, 51 bytes>
0x4001fa:	mov	eax, 0x63
0x4001ff:	sub	rax, qword ptr [rbp - 0x90]
0x400206:	mov	rdx, rax
0x400209:	mov	rcx, qword ptr [rbp - 0x98]
0x400210:	mov	rax, qword ptr [rbp - 0x90]
0x400217:	lea	rsi, [rcx + rax]
0x40021b:	mov	eax, dword ptr [rbp - 0xa4]
0x400221:	mov	ecx, 0
0x400226:	mov	edi, eax
0x400228:	call	0x500050
<Block for 0x4002d6, 1 bytes>
0x4002d6:	nop	
<Block for 0x40022d, 19 bytes>
0x40022d:	mov	dword ptr [rbp - 0x9c], eax
0x400233:	cmp	dword ptr [rbp - 0x9c], -1
0x40023a:	je	0x4002d7
<Block for 0x400240, 13 bytes>
0x400240:	cmp	dword ptr [rbp - 0x9c], 0
0x400247:	je	0x4002d7
<Block for 0x40024d, 52 bytes>
0x40024d:	mov	eax, dword ptr [rbp - 0x9c]
0x400253:	movsxd	rdx, eax
0x400256:	mov	rax, qword ptr [rbp - 0x90]
0x40025d:	add	rdx, rax
0x400260:	mov	rax, qword ptr [rbp - 0x98]
0x400267:	add	rax, rdx
0x40026a:	mov	byte ptr [rax], 0
0x40026d:	mov	rax, qword ptr [rbp - 0x98]
0x400274:	mov	esi, 0xd
0x400279:	mov	rdi, rax
0x40027c:	call	0x500058
<Block for 0x400281, 17 bytes>
0x400281:	mov	qword ptr [rbp - 0x88], rax
0x400288:	cmp	qword ptr [rbp - 0x88], 0
0x400290:	je	0x40029c
<Block for 0x40029c, 20 bytes>
0x40029c:	mov	rax, qword ptr [rbp - 0x98]
0x4002a3:	mov	esi, 0xa
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x500058
<Block for 0x400292, 30 bytes>
0x400292:	mov	rax, qword ptr [rbp - 0x88]
0x400299:	mov	byte ptr [rax], 0
0x40029c:	mov	rax, qword ptr [rbp - 0x98]
0x4002a3:	mov	esi, 0xa
0x4002a8:	mov	rdi, rax
0x4002ab:	call	0x500058
<Block for 0x4002b0, 17 bytes>
0x4002b0:	mov	qword ptr [rbp - 0x88], rax
0x4002b7:	cmp	qword ptr [rbp - 0x88], 0
0x4002bf:	je	0x4002d7
<Block for 0x4002c1, 12 bytes>
0x4002c1:	mov	rax, qword ptr [rbp - 0x88]
0x4002c8:	mov	byte ptr [rax], 0
0x4002cb:	jmp	0x4002d7
