<Block for 0x400464, 59 bytes>
0x400464:	endbr64	
0x400468:	push	rbp
0x400469:	mov	rbp, rsp
0x40046c:	sub	rsp, 0x30
0x400470:	mov	qword ptr [rbp - 0x28], rdi
0x400474:	mov	rax, qword ptr fs:[0x28]
0x40047d:	mov	qword ptr [rbp - 8], rax
0x400481:	xor	eax, eax
0x400483:	lea	rdx, [rbp - 0x14]
0x400487:	mov	rax, qword ptr [rbp - 0x28]
0x40048b:	lea	rsi, [rip + 0x324]
0x400492:	mov	rdi, rax
0x400495:	mov	eax, 0
0x40049a:	call	0x500000
<Block for 0x40049f, 5 bytes>
0x40049f:	cmp	eax, 1
0x4004a2:	jne	0x4004d8
<Block for 0x4004a4, 10 bytes>
0x4004a4:	mov	eax, dword ptr [rbp - 0x14]
0x4004a7:	cmp	eax, 0x270f
0x4004ac:	jg	0x4004d8
<Block for 0x4004d8, 16 bytes>
0x4004d8:	nop	
0x4004d9:	mov	rax, qword ptr [rbp - 8]
0x4004dd:	xor	rax, qword ptr fs:[0x28]
0x4004e6:	je	0x4004ed
<Block for 0x4004ae, 16 bytes>
0x4004ae:	mov	dword ptr [rbp - 0xc], 0
0x4004b5:	mov	dword ptr [rbp - 0x10], 0
0x4004bc:	jmp	0x4004c6
<Block for 0x4004ed, 2 bytes>
0x4004ed:	leave	
0x4004ee:	ret	
<Block for 0x4004e8, 5 bytes>
0x4004e8:	call	0x500010
<Block for 0x4004c6, 8 bytes>
0x4004c6:	mov	eax, dword ptr [rbp - 0x14]
0x4004c9:	cmp	dword ptr [rbp - 0x10], eax
0x4004cc:	jl	0x4004be
<Block for 0x4004be, 16 bytes>
0x4004be:	add	dword ptr [rbp - 0xc], 1
0x4004c2:	add	dword ptr [rbp - 0x10], 1
0x4004c6:	mov	eax, dword ptr [rbp - 0x14]
0x4004c9:	cmp	dword ptr [rbp - 0x10], eax
0x4004cc:	jl	0x4004be
<Block for 0x4004ce, 10 bytes>
0x4004ce:	mov	eax, dword ptr [rbp - 0xc]
0x4004d1:	mov	edi, eax
0x4004d3:	call	0x500008
