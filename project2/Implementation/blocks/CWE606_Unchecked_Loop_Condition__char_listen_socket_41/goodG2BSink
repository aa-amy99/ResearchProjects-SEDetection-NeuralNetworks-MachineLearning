<Block for 0x400329, 59 bytes>
0x400329:	endbr64	
0x40032d:	push	rbp
0x40032e:	mov	rbp, rsp
0x400331:	sub	rsp, 0x30
0x400335:	mov	qword ptr [rbp - 0x28], rdi
0x400339:	mov	rax, qword ptr fs:[0x28]
0x400342:	mov	qword ptr [rbp - 8], rax
0x400346:	xor	eax, eax
0x400348:	lea	rdx, [rbp - 0x14]
0x40034c:	mov	rax, qword ptr [rbp - 0x28]
0x400350:	lea	rsi, [rip + 0x45f]
0x400357:	mov	rdi, rax
0x40035a:	mov	eax, 0
0x40035f:	call	0x500000
<Block for 0x400364, 5 bytes>
0x400364:	cmp	eax, 1
0x400367:	jne	0x400393
<Block for 0x400369, 16 bytes>
0x400369:	mov	dword ptr [rbp - 0xc], 0
0x400370:	mov	dword ptr [rbp - 0x10], 0
0x400377:	jmp	0x400381
<Block for 0x400393, 16 bytes>
0x400393:	nop	
0x400394:	mov	rax, qword ptr [rbp - 8]
0x400398:	xor	rax, qword ptr fs:[0x28]
0x4003a1:	je	0x4003a8
<Block for 0x400381, 8 bytes>
0x400381:	mov	eax, dword ptr [rbp - 0x14]
0x400384:	cmp	dword ptr [rbp - 0x10], eax
0x400387:	jl	0x400379
<Block for 0x4003a8, 2 bytes>
0x4003a8:	leave	
0x4003a9:	ret	
<Block for 0x4003a3, 5 bytes>
0x4003a3:	call	0x500010
<Block for 0x400379, 16 bytes>
0x400379:	add	dword ptr [rbp - 0xc], 1
0x40037d:	add	dword ptr [rbp - 0x10], 1
0x400381:	mov	eax, dword ptr [rbp - 0x14]
0x400384:	cmp	dword ptr [rbp - 0x10], eax
0x400387:	jl	0x400379
<Block for 0x400389, 10 bytes>
0x400389:	mov	eax, dword ptr [rbp - 0xc]
0x40038c:	mov	edi, eax
0x40038e:	call	0x500008
