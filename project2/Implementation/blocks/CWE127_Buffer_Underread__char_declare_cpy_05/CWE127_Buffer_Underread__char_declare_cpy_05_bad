<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x140]
0x400025:	mov	edx, 0x63
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 17 bytes>
0x400037:	mov	byte ptr [rbp - 0xdd], 0
0x40003e:	mov	eax, dword ptr [rip + 0x204]
0x400044:	test	eax, eax
0x400046:	je	0x40005a
<Block for 0x40005a, 25 bytes>
0x40005a:	lea	rax, [rbp - 0xd0]
0x400061:	mov	edx, 0xc7
0x400066:	mov	esi, 0x43
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500000
<Block for 0x400048, 43 bytes>
0x400048:	lea	rax, [rbp - 0x140]
0x40004f:	sub	rax, 8
0x400053:	mov	qword ptr [rbp - 0x148], rax
0x40005a:	lea	rax, [rbp - 0xd0]
0x400061:	mov	edx, 0xc7
0x400066:	mov	esi, 0x43
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500000
<Block for 0x400073, 29 bytes>
0x400073:	mov	byte ptr [rbp - 9], 0
0x400077:	mov	rdx, qword ptr [rbp - 0x148]
0x40007e:	lea	rax, [rbp - 0xd0]
0x400085:	mov	rsi, rdx
0x400088:	mov	rdi, rax
0x40008b:	call	0x500008
<Block for 0x400090, 15 bytes>
0x400090:	lea	rax, [rbp - 0xd0]
0x400097:	mov	rdi, rax
0x40009a:	call	0x500010
<Block for 0x40009f, 16 bytes>
0x40009f:	nop	
0x4000a0:	mov	rax, qword ptr [rbp - 8]
0x4000a4:	xor	rax, qword ptr fs:[0x28]
0x4000ad:	je	0x4000b4
<Block for 0x4000b4, 2 bytes>
0x4000b4:	leave	
0x4000b5:	ret	
<Block for 0x4000af, 5 bytes>
0x4000af:	call	0x500018
