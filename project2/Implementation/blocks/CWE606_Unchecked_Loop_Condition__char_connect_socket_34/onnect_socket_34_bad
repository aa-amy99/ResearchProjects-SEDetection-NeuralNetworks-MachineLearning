<Block for 0x400000, 169 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	lea	rax, [rbp - 0x70]
0x400089:	mov	qword ptr [rbp - 0xa0], rax
0x400090:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x40009a:	mov	rax, qword ptr [rbp - 0xa0]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x500000
<Block for 0x4000a9, 27 bytes>
0x4000a9:	mov	qword ptr [rbp - 0x98], rax
0x4000b0:	mov	edx, 6
0x4000b5:	mov	esi, 1
0x4000ba:	mov	edi, 2
0x4000bf:	call	0x500008
<Block for 0x4000c4, 19 bytes>
0x4000c4:	mov	dword ptr [rbp - 0xb0], eax
0x4000ca:	cmp	dword ptr [rbp - 0xb0], -1
0x4000d1:	je	0x400205
<Block for 0x400205, 3 bytes>
0x400205:	nop	
0x400206:	jmp	0x400209
<Block for 0x4000d7, 22 bytes>
0x4000d7:	lea	rax, [rbp - 0x80]
0x4000db:	mov	edx, 0x10
0x4000e0:	mov	esi, 0
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500010
<Block for 0x400209, 9 bytes>
0x400209:	cmp	dword ptr [rbp - 0xb0], -1
0x400210:	je	0x40021f
<Block for 0x4000ed, 18 bytes>
0x4000ed:	mov	word ptr [rbp - 0x80], 2
0x4000f3:	lea	rdi, [rip + 0x5cc]
0x4000fa:	call	0x500018
<Block for 0x40021f, 62 bytes>
0x40021f:	mov	rax, qword ptr [rbp - 0xa0]
0x400226:	mov	qword ptr [rbp - 0xa8], rax
0x40022d:	mov	rax, qword ptr [rbp - 0xa8]
0x400234:	mov	qword ptr [rbp - 0x88], rax
0x40023b:	lea	rdx, [rbp - 0xbc]
0x400242:	mov	rax, qword ptr [rbp - 0x88]
0x400249:	lea	rsi, [rip + 0x480]
0x400250:	mov	rdi, rax
0x400253:	mov	eax, 0
0x400258:	call	0x500048
<Block for 0x400212, 13 bytes>
0x400212:	mov	eax, dword ptr [rbp - 0xb0]
0x400218:	mov	edi, eax
0x40021a:	call	0x500040
<Block for 0x4000ff, 13 bytes>
0x4000ff:	mov	dword ptr [rbp - 0x7c], eax
0x400102:	mov	edi, 0x6987
0x400107:	call	0x500020
<Block for 0x40025d, 5 bytes>
0x40025d:	cmp	eax, 1
0x400260:	jne	0x4002a1
<Block for 0x40010c, 29 bytes>
0x40010c:	mov	word ptr [rbp - 0x7e], ax
0x400110:	lea	rcx, [rbp - 0x80]
0x400114:	mov	eax, dword ptr [rbp - 0xb0]
0x40011a:	mov	edx, 0x10
0x40011f:	mov	rsi, rcx
0x400122:	mov	edi, eax
0x400124:	call	0x500028
<Block for 0x400262, 22 bytes>
0x400262:	mov	dword ptr [rbp - 0xb4], 0
0x40026c:	mov	dword ptr [rbp - 0xb8], 0
0x400276:	jmp	0x400286
<Block for 0x4002a1, 16 bytes>
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 8]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002b6
<Block for 0x400129, 9 bytes>
0x400129:	cmp	eax, -1
0x40012c:	je	0x400208
<Block for 0x400286, 14 bytes>
0x400286:	mov	eax, dword ptr [rbp - 0xbc]
0x40028c:	cmp	dword ptr [rbp - 0xb8], eax
0x400292:	jl	0x400278
<Block for 0x4002b6, 2 bytes>
0x4002b6:	leave	
0x4002b7:	ret	
<Block for 0x4002b1, 5 bytes>
0x4002b1:	call	0x500058
<Block for 0x400132, 51 bytes>
0x400132:	mov	eax, 0x63
0x400137:	sub	rax, qword ptr [rbp - 0x98]
0x40013e:	mov	rdx, rax
0x400141:	mov	rcx, qword ptr [rbp - 0xa0]
0x400148:	mov	rax, qword ptr [rbp - 0x98]
0x40014f:	lea	rsi, [rcx + rax]
0x400153:	mov	eax, dword ptr [rbp - 0xb0]
0x400159:	mov	ecx, 0
0x40015e:	mov	edi, eax
0x400160:	call	0x500030
<Block for 0x400208, 1 bytes>
0x400208:	nop	
<Block for 0x400278, 28 bytes>
0x400278:	add	dword ptr [rbp - 0xb4], 1
0x40027f:	add	dword ptr [rbp - 0xb8], 1
0x400286:	mov	eax, dword ptr [rbp - 0xbc]
0x40028c:	cmp	dword ptr [rbp - 0xb8], eax
0x400292:	jl	0x400278
<Block for 0x400294, 13 bytes>
0x400294:	mov	eax, dword ptr [rbp - 0xb4]
0x40029a:	mov	edi, eax
0x40029c:	call	0x500050
<Block for 0x400165, 19 bytes>
0x400165:	mov	dword ptr [rbp - 0xac], eax
0x40016b:	cmp	dword ptr [rbp - 0xac], -1
0x400172:	je	0x400209
<Block for 0x400178, 13 bytes>
0x400178:	cmp	dword ptr [rbp - 0xac], 0
0x40017f:	je	0x400209
<Block for 0x400185, 52 bytes>
0x400185:	mov	eax, dword ptr [rbp - 0xac]
0x40018b:	movsxd	rdx, eax
0x40018e:	mov	rax, qword ptr [rbp - 0x98]
0x400195:	add	rdx, rax
0x400198:	mov	rax, qword ptr [rbp - 0xa0]
0x40019f:	add	rax, rdx
0x4001a2:	mov	byte ptr [rax], 0
0x4001a5:	mov	rax, qword ptr [rbp - 0xa0]
0x4001ac:	mov	esi, 0xd
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x500038
<Block for 0x4001b9, 17 bytes>
0x4001b9:	mov	qword ptr [rbp - 0x90], rax
0x4001c0:	cmp	qword ptr [rbp - 0x90], 0
0x4001c8:	je	0x4001d4
<Block for 0x4001d4, 20 bytes>
0x4001d4:	mov	rax, qword ptr [rbp - 0xa0]
0x4001db:	mov	esi, 0xa
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500038
<Block for 0x4001ca, 30 bytes>
0x4001ca:	mov	rax, qword ptr [rbp - 0x90]
0x4001d1:	mov	byte ptr [rax], 0
0x4001d4:	mov	rax, qword ptr [rbp - 0xa0]
0x4001db:	mov	esi, 0xa
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500038
<Block for 0x4001e8, 17 bytes>
0x4001e8:	mov	qword ptr [rbp - 0x90], rax
0x4001ef:	cmp	qword ptr [rbp - 0x90], 0
0x4001f7:	je	0x400209
<Block for 0x4001f9, 12 bytes>
0x4001f9:	mov	rax, qword ptr [rbp - 0x90]
0x400200:	mov	byte ptr [rax], 0
0x400203:	jmp	0x400209
