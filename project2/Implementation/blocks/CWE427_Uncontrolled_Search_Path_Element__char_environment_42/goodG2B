<Block for 0x40014e, 82 bytes>
0x40014e:	endbr64	
0x400152:	push	rbp
0x400153:	mov	rbp, rsp
0x400156:	sub	rsp, 0x120
0x40015d:	mov	rax, qword ptr fs:[0x28]
0x400166:	mov	qword ptr [rbp - 8], rax
0x40016a:	xor	eax, eax
0x40016c:	movabs	rax, 0x3d48544150
0x400176:	mov	edx, 0
0x40017b:	mov	qword ptr [rbp - 0x110], rax
0x400182:	mov	qword ptr [rbp - 0x108], rdx
0x400189:	lea	rdx, [rbp - 0x100]
0x400190:	mov	eax, 0
0x400195:	mov	ecx, 0x1d
0x40019a:	mov	rdi, rdx
0x40019d:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001a0, 39 bytes>
0x4001a0:	mov	rdx, rdi
0x4001a3:	mov	word ptr [rdx], ax
0x4001a6:	add	rdx, 2
0x4001aa:	lea	rax, [rbp - 0x110]
0x4001b1:	mov	qword ptr [rbp - 0x118], rax
0x4001b8:	mov	rax, qword ptr [rbp - 0x118]
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x400109
<Block for 0x40019d, 3 bytes>
0x40019d:	rep stosq	qword ptr [rdi], rax
<Block for 0x4001c7, 22 bytes>
0x4001c7:	mov	qword ptr [rbp - 0x118], rax
0x4001ce:	mov	rax, qword ptr [rbp - 0x118]
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500018
<Block for 0x4001dd, 16 bytes>
0x4001dd:	nop	
0x4001de:	mov	rax, qword ptr [rbp - 8]
0x4001e2:	xor	rax, qword ptr fs:[0x28]
0x4001eb:	je	0x4001f2
<Block for 0x4001f2, 2 bytes>
0x4001f2:	leave	
0x4001f3:	ret	
<Block for 0x4001ed, 5 bytes>
0x4001ed:	call	0x500020
