<Block for 0x400063, 82 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x120
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	movabs	rax, 0x3d48544150
0x40008b:	mov	edx, 0
0x400090:	mov	qword ptr [rbp - 0x110], rax
0x400097:	mov	qword ptr [rbp - 0x108], rdx
0x40009e:	lea	rdx, [rbp - 0x100]
0x4000a5:	mov	eax, 0
0x4000aa:	mov	ecx, 0x1d
0x4000af:	mov	rdi, rdx
0x4000b2:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000b5, 39 bytes>
0x4000b5:	mov	rdx, rdi
0x4000b8:	mov	word ptr [rdx], ax
0x4000bb:	add	rdx, 2
0x4000bf:	lea	rax, [rbp - 0x110]
0x4000c6:	mov	qword ptr [rbp - 0x118], rax
0x4000cd:	mov	rax, qword ptr [rbp - 0x118]
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x400000
<Block for 0x4000b2, 3 bytes>
0x4000b2:	rep stosq	qword ptr [rdi], rax
<Block for 0x4000dc, 22 bytes>
0x4000dc:	mov	qword ptr [rbp - 0x118], rax
0x4000e3:	mov	rax, qword ptr [rbp - 0x118]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500018
<Block for 0x4000f2, 16 bytes>
0x4000f2:	nop	
0x4000f3:	mov	rax, qword ptr [rbp - 8]
0x4000f7:	xor	rax, qword ptr fs:[0x28]
0x400100:	je	0x400107
<Block for 0x400107, 2 bytes>
0x400107:	leave	
0x400108:	ret	
<Block for 0x400102, 5 bytes>
0x400102:	call	0x500020
