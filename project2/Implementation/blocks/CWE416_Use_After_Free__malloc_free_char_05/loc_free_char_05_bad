<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0x28a]
0x40001a:	test	eax, eax
0x40001c:	je	0x40006a
<Block for 0x40006a, 10 bytes>
0x40006a:	mov	eax, dword ptr [rip + 0x234]
0x400070:	test	eax, eax
0x400072:	je	0x400080
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 0x64
0x400023:	call	0x500000
<Block for 0x400080, 3 bytes>
0x400080:	nop	
0x400081:	leave	
0x400082:	ret	
<Block for 0x400074, 12 bytes>
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	mov	rdi, rax
0x40007b:	call	0x500020
<Block for 0x400028, 11 bytes>
0x400028:	mov	qword ptr [rbp - 8], rax
0x40002c:	cmp	qword ptr [rbp - 8], 0
0x400031:	jne	0x40003d
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0xffffffff
0x400038:	call	0x500008
<Block for 0x40003d, 22 bytes>
0x40003d:	mov	rax, qword ptr [rbp - 8]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500010
<Block for 0x400053, 23 bytes>
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	add	rax, 0x63
0x40005b:	mov	byte ptr [rax], 0
0x40005e:	mov	rax, qword ptr [rbp - 8]
0x400062:	mov	rdi, rax
0x400065:	call	0x500018
