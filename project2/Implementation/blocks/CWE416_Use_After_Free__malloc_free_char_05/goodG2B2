<Block for 0x4001f8, 30 bytes>
0x4001f8:	endbr64	
0x4001fc:	push	rbp
0x4001fd:	mov	rbp, rsp
0x400200:	sub	rsp, 0x10
0x400204:	mov	qword ptr [rbp - 8], 0
0x40020c:	mov	eax, dword ptr [rip + 0x92]
0x400212:	test	eax, eax
0x400214:	je	0x400256
<Block for 0x400256, 10 bytes>
0x400256:	mov	eax, dword ptr [rip + 0x48]
0x40025c:	test	eax, eax
0x40025e:	je	0x40026c
<Block for 0x400216, 10 bytes>
0x400216:	mov	edi, 0x64
0x40021b:	call	0x500000
<Block for 0x40026c, 3 bytes>
0x40026c:	nop	
0x40026d:	leave	
0x40026e:	ret	
<Block for 0x400260, 12 bytes>
0x400260:	mov	rax, qword ptr [rbp - 8]
0x400264:	mov	rdi, rax
0x400267:	call	0x500020
<Block for 0x400220, 11 bytes>
0x400220:	mov	qword ptr [rbp - 8], rax
0x400224:	cmp	qword ptr [rbp - 8], 0
0x400229:	jne	0x400235
<Block for 0x40022b, 10 bytes>
0x40022b:	mov	edi, 0xffffffff
0x400230:	call	0x500008
<Block for 0x400235, 22 bytes>
0x400235:	mov	rax, qword ptr [rbp - 8]
0x400239:	mov	edx, 0x63
0x40023e:	mov	esi, 0x41
0x400243:	mov	rdi, rax
0x400246:	call	0x500010
<Block for 0x40024b, 21 bytes>
0x40024b:	mov	rax, qword ptr [rbp - 8]
0x40024f:	add	rax, 0x63
0x400253:	mov	byte ptr [rax], 0
0x400256:	mov	eax, dword ptr [rip + 0x48]
0x40025c:	test	eax, eax
0x40025e:	je	0x40026c
