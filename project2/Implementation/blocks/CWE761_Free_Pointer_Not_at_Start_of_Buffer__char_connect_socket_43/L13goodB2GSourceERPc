<Block for 0x400227, 53 bytes>
0x400227:	endbr64	
0x40022b:	push	rbp
0x40022c:	mov	rbp, rsp
0x40022f:	sub	rsp, 0x50
0x400233:	mov	qword ptr [rbp - 0x48], rdi
0x400237:	mov	rax, qword ptr fs:[0x28]
0x400240:	mov	qword ptr [rbp - 8], rax
0x400244:	xor	eax, eax
0x400246:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40024d:	mov	rax, qword ptr [rbp - 0x48]
0x400251:	mov	rax, qword ptr [rax]
0x400254:	mov	rdi, rax
0x400257:	call	0x500000
<Block for 0x40025c, 24 bytes>
0x40025c:	mov	qword ptr [rbp - 0x30], rax
0x400260:	mov	edx, 6
0x400265:	mov	esi, 1
0x40026a:	mov	edi, 2
0x40026f:	call	0x500008
<Block for 0x400274, 13 bytes>
0x400274:	mov	dword ptr [rbp - 0x38], eax
0x400277:	cmp	dword ptr [rbp - 0x38], -1
0x40027b:	je	0x40037f
<Block for 0x40037f, 3 bytes>
0x40037f:	nop	
0x400380:	jmp	0x400383
<Block for 0x400281, 22 bytes>
0x400281:	lea	rax, [rbp - 0x20]
0x400285:	mov	edx, 0x10
0x40028a:	mov	esi, 0
0x40028f:	mov	rdi, rax
0x400292:	call	0x500010
<Block for 0x400383, 6 bytes>
0x400383:	cmp	dword ptr [rbp - 0x38], -1
0x400387:	je	0x400393
<Block for 0x400297, 18 bytes>
0x400297:	mov	word ptr [rbp - 0x20], 2
0x40029d:	lea	rdi, [rip + 0x1c9]
0x4002a4:	call	0x500018
<Block for 0x400393, 16 bytes>
0x400393:	nop	
0x400394:	mov	rax, qword ptr [rbp - 8]
0x400398:	xor	rax, qword ptr fs:[0x28]
0x4003a1:	je	0x4003a8
<Block for 0x400389, 10 bytes>
0x400389:	mov	eax, dword ptr [rbp - 0x38]
0x40038c:	mov	edi, eax
0x40038e:	call	0x500040
<Block for 0x4002a9, 13 bytes>
0x4002a9:	mov	dword ptr [rbp - 0x1c], eax
0x4002ac:	mov	edi, 0x6987
0x4002b1:	call	0x500020
<Block for 0x4003a8, 2 bytes>
0x4003a8:	leave	
0x4003a9:	ret	
<Block for 0x4003a3, 5 bytes>
0x4003a3:	call	0x500048
<Block for 0x4002b6, 26 bytes>
0x4002b6:	mov	word ptr [rbp - 0x1e], ax
0x4002ba:	lea	rcx, [rbp - 0x20]
0x4002be:	mov	eax, dword ptr [rbp - 0x38]
0x4002c1:	mov	edx, 0x10
0x4002c6:	mov	rsi, rcx
0x4002c9:	mov	edi, eax
0x4002cb:	call	0x500028
<Block for 0x4002d0, 14 bytes>
0x4002d0:	cmp	eax, -1
0x4002d3:	sete	al
0x4002d6:	test	al, al
0x4002d8:	jne	0x400382
<Block for 0x4002de, 42 bytes>
0x4002de:	mov	eax, 0x63
0x4002e3:	sub	rax, qword ptr [rbp - 0x30]
0x4002e7:	mov	rdx, rax
0x4002ea:	mov	rax, qword ptr [rbp - 0x48]
0x4002ee:	mov	rcx, qword ptr [rax]
0x4002f1:	mov	rax, qword ptr [rbp - 0x30]
0x4002f5:	lea	rsi, [rcx + rax]
0x4002f9:	mov	eax, dword ptr [rbp - 0x38]
0x4002fc:	mov	ecx, 0
0x400301:	mov	edi, eax
0x400303:	call	0x500030
<Block for 0x400382, 1 bytes>
0x400382:	nop	
<Block for 0x400308, 9 bytes>
0x400308:	mov	dword ptr [rbp - 0x34], eax
0x40030b:	cmp	dword ptr [rbp - 0x34], -1
0x40030f:	je	0x400383
<Block for 0x400311, 6 bytes>
0x400311:	cmp	dword ptr [rbp - 0x34], 0
0x400315:	je	0x400383
<Block for 0x400317, 46 bytes>
0x400317:	mov	rax, qword ptr [rbp - 0x48]
0x40031b:	mov	rax, qword ptr [rax]
0x40031e:	mov	edx, dword ptr [rbp - 0x34]
0x400321:	movsxd	rcx, edx
0x400324:	mov	rdx, qword ptr [rbp - 0x30]
0x400328:	add	rdx, rcx
0x40032b:	add	rax, rdx
0x40032e:	mov	byte ptr [rax], 0
0x400331:	mov	rax, qword ptr [rbp - 0x48]
0x400335:	mov	rax, qword ptr [rax]
0x400338:	mov	esi, 0xd
0x40033d:	mov	rdi, rax
0x400340:	call	0x500038
<Block for 0x400345, 11 bytes>
0x400345:	mov	qword ptr [rbp - 0x28], rax
0x400349:	cmp	qword ptr [rbp - 0x28], 0
0x40034e:	je	0x400357
<Block for 0x400357, 20 bytes>
0x400357:	mov	rax, qword ptr [rbp - 0x48]
0x40035b:	mov	rax, qword ptr [rax]
0x40035e:	mov	esi, 0xa
0x400363:	mov	rdi, rax
0x400366:	call	0x500038
<Block for 0x400350, 27 bytes>
0x400350:	mov	rax, qword ptr [rbp - 0x28]
0x400354:	mov	byte ptr [rax], 0
0x400357:	mov	rax, qword ptr [rbp - 0x48]
0x40035b:	mov	rax, qword ptr [rax]
0x40035e:	mov	esi, 0xa
0x400363:	mov	rdi, rax
0x400366:	call	0x500038
<Block for 0x40036b, 11 bytes>
0x40036b:	mov	qword ptr [rbp - 0x28], rax
0x40036f:	cmp	qword ptr [rbp - 0x28], 0
0x400374:	je	0x400383
<Block for 0x400376, 9 bytes>
0x400376:	mov	rax, qword ptr [rbp - 0x28]
0x40037a:	mov	byte ptr [rax], 0
0x40037d:	jmp	0x400383
