<Block for 0x400237, 84 bytes>
0x400237:	endbr64	
0x40023b:	push	rbp
0x40023c:	mov	rbp, rsp
0x40023f:	sub	rsp, 0xb0
0x400246:	mov	rax, qword ptr fs:[0x28]
0x40024f:	mov	qword ptr [rbp - 8], rax
0x400253:	xor	eax, eax
0x400255:	mov	eax, 0x10
0x40025a:	sub	rax, 1
0x40025e:	add	rax, 0x3a
0x400262:	mov	ecx, 0x10
0x400267:	mov	edx, 0
0x40026c:	div	rcx
0x40026f:	imul	rax, rax, 0x10
0x400273:	mov	rdx, rax
0x400276:	and	rdx, 0xfffffffffffff000
0x40027d:	mov	rcx, rsp
0x400280:	sub	rcx, rdx
0x400283:	mov	rdx, rcx
0x400286:	cmp	rsp, rdx
0x400289:	je	0x40029d
<Block for 0x40029d, 26 bytes>
0x40029d:	mov	rdx, rax
0x4002a0:	and	edx, 0xfff
0x4002a6:	sub	rsp, rdx
0x4002a9:	mov	rdx, rax
0x4002ac:	and	edx, 0xfff
0x4002b2:	test	rdx, rdx
0x4002b5:	je	0x4002c7
<Block for 0x40028b, 18 bytes>
0x40028b:	sub	rsp, 0x1000
0x400292:	or	qword ptr [rsp + 0xff8], 0
0x40029b:	jmp	0x400286
<Block for 0x4002c7, 76 bytes>
0x4002c7:	mov	rax, rsp
0x4002ca:	add	rax, 0xf
0x4002ce:	shr	rax, 4
0x4002d2:	shl	rax, 4
0x4002d6:	mov	qword ptr [rbp - 0xa0], rax
0x4002dd:	mov	eax, 0x10
0x4002e2:	sub	rax, 1
0x4002e6:	add	rax, 0x6c
0x4002ea:	mov	edi, 0x10
0x4002ef:	mov	edx, 0
0x4002f4:	div	rdi
0x4002f7:	imul	rax, rax, 0x10
0x4002fb:	mov	rdx, rax
0x4002fe:	and	rdx, 0xfffffffffffff000
0x400305:	mov	rsi, rsp
0x400308:	sub	rsi, rdx
0x40030b:	mov	rdx, rsi
0x40030e:	cmp	rsp, rdx
0x400311:	je	0x400325
<Block for 0x4002b7, 92 bytes>
0x4002b7:	and	eax, 0xfff
0x4002bc:	sub	rax, 8
0x4002c0:	add	rax, rsp
0x4002c3:	or	qword ptr [rax], 0
0x4002c7:	mov	rax, rsp
0x4002ca:	add	rax, 0xf
0x4002ce:	shr	rax, 4
0x4002d2:	shl	rax, 4
0x4002d6:	mov	qword ptr [rbp - 0xa0], rax
0x4002dd:	mov	eax, 0x10
0x4002e2:	sub	rax, 1
0x4002e6:	add	rax, 0x6c
0x4002ea:	mov	edi, 0x10
0x4002ef:	mov	edx, 0
0x4002f4:	div	rdi
0x4002f7:	imul	rax, rax, 0x10
0x4002fb:	mov	rdx, rax
0x4002fe:	and	rdx, 0xfffffffffffff000
0x400305:	mov	rsi, rsp
0x400308:	sub	rsi, rdx
0x40030b:	mov	rdx, rsi
0x40030e:	cmp	rsp, rdx
0x400311:	je	0x400325
<Block for 0x400286, 5 bytes>
0x400286:	cmp	rsp, rdx
0x400289:	je	0x40029d
<Block for 0x400325, 26 bytes>
0x400325:	mov	rdx, rax
0x400328:	and	edx, 0xfff
0x40032e:	sub	rsp, rdx
0x400331:	mov	rdx, rax
0x400334:	and	edx, 0xfff
0x40033a:	test	rdx, rdx
0x40033d:	je	0x40034f
<Block for 0x400313, 18 bytes>
0x400313:	sub	rsp, 0x1000
0x40031a:	or	qword ptr [rsp + 0xff8], 0
0x400323:	jmp	0x40030e
<Block for 0x40034f, 47 bytes>
0x40034f:	mov	rax, rsp
0x400352:	add	rax, 0xf
0x400356:	shr	rax, 4
0x40035a:	shl	rax, 4
0x40035e:	mov	qword ptr [rbp - 0x98], rax
0x400365:	mov	rax, qword ptr [rbp - 0xa0]
0x40036c:	mov	edx, 0x31
0x400371:	mov	esi, 0x41
0x400376:	mov	rdi, rax
0x400379:	call	0x500000
<Block for 0x40033f, 63 bytes>
0x40033f:	and	eax, 0xfff
0x400344:	sub	rax, 8
0x400348:	add	rax, rsp
0x40034b:	or	qword ptr [rax], 0
0x40034f:	mov	rax, rsp
0x400352:	add	rax, 0xf
0x400356:	shr	rax, 4
0x40035a:	shl	rax, 4
0x40035e:	mov	qword ptr [rbp - 0x98], rax
0x400365:	mov	rax, qword ptr [rbp - 0xa0]
0x40036c:	mov	edx, 0x31
0x400371:	mov	esi, 0x41
0x400376:	mov	rdi, rax
0x400379:	call	0x500000
<Block for 0x40030e, 5 bytes>
0x40030e:	cmp	rsp, rdx
0x400311:	je	0x400325
<Block for 0x40037e, 39 bytes>
0x40037e:	mov	rax, qword ptr [rbp - 0xa0]
0x400385:	add	rax, 0x31
0x400389:	mov	byte ptr [rax], 0
0x40038c:	mov	rax, qword ptr [rbp - 0x98]
0x400393:	mov	edx, 0x63
0x400398:	mov	esi, 0x41
0x40039d:	mov	rdi, rax
0x4003a0:	call	0x500000
<Block for 0x4003a5, 75 bytes>
0x4003a5:	mov	rax, qword ptr [rbp - 0x98]
0x4003ac:	add	rax, 0x63
0x4003b0:	mov	byte ptr [rax], 0
0x4003b3:	mov	rax, qword ptr [rbp - 0x98]
0x4003ba:	mov	qword ptr [rbp - 0x90], rax
0x4003c1:	mov	rax, qword ptr [rbp - 0x90]
0x4003c8:	mov	qword ptr [rbp - 0x88], rax
0x4003cf:	mov	rax, qword ptr [rbp - 0x88]
0x4003d6:	mov	qword ptr [rbp - 0x80], rax
0x4003da:	lea	rax, [rbp - 0x70]
0x4003de:	mov	edx, 0x63
0x4003e3:	mov	esi, 0x43
0x4003e8:	mov	rdi, rax
0x4003eb:	call	0x500000
<Block for 0x4003f0, 16 bytes>
0x4003f0:	mov	byte ptr [rbp - 0xd], 0
0x4003f4:	lea	rax, [rbp - 0x70]
0x4003f8:	mov	rdi, rax
0x4003fb:	call	0x500008
<Block for 0x400400, 17 bytes>
0x400400:	mov	qword ptr [rbp - 0x78], rax
0x400404:	mov	qword ptr [rbp - 0xa8], 0
0x40040f:	jmp	0x40043a
<Block for 0x40043a, 13 bytes>
0x40043a:	mov	rax, qword ptr [rbp - 0xa8]
0x400441:	cmp	rax, qword ptr [rbp - 0x78]
0x400445:	jb	0x400411
<Block for 0x400411, 54 bytes>
0x400411:	mov	rdx, qword ptr [rbp - 0x80]
0x400415:	mov	rax, qword ptr [rbp - 0xa8]
0x40041c:	add	rax, rdx
0x40041f:	movzx	eax, byte ptr [rax]
0x400422:	lea	rcx, [rbp - 0x70]
0x400426:	mov	rdx, qword ptr [rbp - 0xa8]
0x40042d:	add	rdx, rcx
0x400430:	mov	byte ptr [rdx], al
0x400432:	add	qword ptr [rbp - 0xa8], 1
0x40043a:	mov	rax, qword ptr [rbp - 0xa8]
0x400441:	cmp	rax, qword ptr [rbp - 0x78]
0x400445:	jb	0x400411
<Block for 0x400447, 16 bytes>
0x400447:	mov	byte ptr [rbp - 0xd], 0
0x40044b:	lea	rax, [rbp - 0x70]
0x40044f:	mov	rdi, rax
0x400452:	call	0x500010
<Block for 0x400457, 16 bytes>
0x400457:	nop	
0x400458:	mov	rax, qword ptr [rbp - 8]
0x40045c:	xor	rax, qword ptr fs:[0x28]
0x400465:	je	0x40046c
<Block for 0x40046c, 2 bytes>
0x40046c:	leave	
0x40046d:	ret	
<Block for 0x400467, 5 bytes>
0x400467:	call	0x500018
