<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400022:	mov	qword ptr [rbp - 0x16], 0
0x40002a:	mov	dword ptr [rbp - 0xe], 0
0x400031:	mov	word ptr [rbp - 0xa], 0
0x400037:	mov	rdx, qword ptr [rip + 0xfffc2]
0x40003e:	lea	rax, [rbp - 0x16]
0x400042:	mov	esi, 0xe
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 5 bytes>
0x40004f:	test	rax, rax
0x400052:	je	0x400065
<Block for 0x400065, 12 bytes>
0x400065:	lea	rdi, [rip + 0x1d4]
0x40006c:	call	0x500018
<Block for 0x400054, 12 bytes>
0x400054:	lea	rax, [rbp - 0x16]
0x400058:	mov	rdi, rax
0x40005b:	call	0x500010
<Block for 0x400071, 20 bytes>
0x400071:	mov	dword ptr [rip + 0x1b5], 1
0x40007b:	mov	eax, dword ptr [rbp - 0x1c]
0x40007e:	mov	edi, eax
0x400080:	call	0x500020
<Block for 0x400060, 5 bytes>
0x400060:	mov	dword ptr [rbp - 0x1c], eax
0x400063:	jmp	0x400071
<Block for 0x400085, 16 bytes>
0x400085:	nop	
0x400086:	mov	rax, qword ptr [rbp - 8]
0x40008a:	xor	rax, qword ptr fs:[0x28]
0x400093:	je	0x40009a
<Block for 0x40009a, 2 bytes>
0x40009a:	leave	
0x40009b:	ret	
<Block for 0x400095, 5 bytes>
0x400095:	call	0x500028
