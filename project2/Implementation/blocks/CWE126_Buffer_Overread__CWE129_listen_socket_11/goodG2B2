<Block for 0x400607, 44 bytes>
0x400607:	endbr64	
0x40060b:	push	rbp
0x40060c:	mov	rbp, rsp
0x40060f:	sub	rsp, 0x40
0x400613:	mov	rax, qword ptr fs:[0x28]
0x40061c:	mov	qword ptr [rbp - 8], rax
0x400620:	xor	eax, eax
0x400622:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400629:	mov	eax, 0
0x40062e:	call	0x500000
<Block for 0x400633, 4 bytes>
0x400633:	test	eax, eax
0x400635:	je	0x40063e
<Block for 0x40063e, 10 bytes>
0x40063e:	mov	eax, 0
0x400643:	call	0x500000
<Block for 0x400637, 17 bytes>
0x400637:	mov	dword ptr [rbp - 0x34], 7
0x40063e:	mov	eax, 0
0x400643:	call	0x500000
<Block for 0x400648, 4 bytes>
0x400648:	test	eax, eax
0x40064a:	je	0x400698
<Block for 0x400698, 16 bytes>
0x400698:	nop	
0x400699:	mov	rax, qword ptr [rbp - 8]
0x40069d:	xor	rax, qword ptr fs:[0x28]
0x4006a6:	je	0x4006ad
<Block for 0x40064c, 46 bytes>
0x40064c:	mov	qword ptr [rbp - 0x30], 0
0x400654:	mov	qword ptr [rbp - 0x28], 0
0x40065c:	mov	qword ptr [rbp - 0x20], 0
0x400664:	mov	qword ptr [rbp - 0x18], 0
0x40066c:	mov	qword ptr [rbp - 0x10], 0
0x400674:	cmp	dword ptr [rbp - 0x34], 0
0x400678:	js	0x40068c
<Block for 0x4006ad, 2 bytes>
0x4006ad:	leave	
0x4006ae:	ret	
<Block for 0x4006a8, 5 bytes>
0x4006a8:	call	0x500060
<Block for 0x40068c, 12 bytes>
0x40068c:	lea	rdi, [rip + 0x55]
0x400693:	call	0x500058
<Block for 0x40067a, 16 bytes>
0x40067a:	mov	eax, dword ptr [rbp - 0x34]
0x40067d:	cdqe	
0x40067f:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400683:	mov	edi, eax
0x400685:	call	0x500050
<Block for 0x40068a, 2 bytes>
0x40068a:	jmp	0x400698
