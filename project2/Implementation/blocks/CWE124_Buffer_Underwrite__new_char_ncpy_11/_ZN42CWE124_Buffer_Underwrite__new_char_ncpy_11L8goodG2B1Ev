<Block for 0x4000cc, 40 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	add	rsp, -0x80
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	qword ptr [rbp - 0x80], 0
0x4000ef:	call	0x500030
<Block for 0x4000f4, 9 bytes>
0x4000f4:	test	eax, eax
0x4000f6:	setne	al
0x4000f9:	test	al, al
0x4000fb:	je	0x40010b
<Block for 0x40010b, 10 bytes>
0x40010b:	mov	edi, 0x64
0x400110:	call	0x500008
<Block for 0x4000fd, 12 bytes>
0x4000fd:	lea	rdi, [rip + 0x17b]
0x400104:	call	0x500020
<Block for 0x400115, 26 bytes>
0x400115:	mov	qword ptr [rbp - 0x78], rax
0x400119:	mov	rax, qword ptr [rbp - 0x78]
0x40011d:	mov	edx, 0x63
0x400122:	mov	esi, 0x41
0x400127:	mov	rdi, rax
0x40012a:	call	0x500010
<Block for 0x400109, 2 bytes>
0x400109:	jmp	0x400142
<Block for 0x40012f, 41 bytes>
0x40012f:	mov	rax, qword ptr [rbp - 0x78]
0x400133:	add	rax, 0x63
0x400137:	mov	byte ptr [rax], 0
0x40013a:	mov	rax, qword ptr [rbp - 0x78]
0x40013e:	mov	qword ptr [rbp - 0x80], rax
0x400142:	lea	rax, [rbp - 0x70]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x43
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400142, 22 bytes>
0x400142:	lea	rax, [rbp - 0x70]
0x400146:	mov	edx, 0x63
0x40014b:	mov	esi, 0x43
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400158, 28 bytes>
0x400158:	mov	byte ptr [rbp - 0xd], 0
0x40015c:	lea	rcx, [rbp - 0x70]
0x400160:	mov	rax, qword ptr [rbp - 0x80]
0x400164:	mov	edx, 0x63
0x400169:	mov	rsi, rcx
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500018
<Block for 0x400174, 23 bytes>
0x400174:	mov	rax, qword ptr [rbp - 0x80]
0x400178:	add	rax, 0x63
0x40017c:	mov	byte ptr [rax], 0
0x40017f:	mov	rax, qword ptr [rbp - 0x80]
0x400183:	mov	rdi, rax
0x400186:	call	0x500020
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 8]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001a0
<Block for 0x4001a0, 2 bytes>
0x4001a0:	leave	
0x4001a1:	ret	
<Block for 0x40019b, 5 bytes>
0x40019b:	call	0x500028
