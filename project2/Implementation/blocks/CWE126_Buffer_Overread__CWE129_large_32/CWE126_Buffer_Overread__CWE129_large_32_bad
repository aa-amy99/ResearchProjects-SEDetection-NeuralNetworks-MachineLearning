<Block for 0x400000, 130 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x4c]
0x40001f:	mov	qword ptr [rbp - 0x40], rax
0x400023:	lea	rax, [rbp - 0x4c]
0x400027:	mov	qword ptr [rbp - 0x38], rax
0x40002b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x40]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x48], eax
0x40003b:	mov	dword ptr [rbp - 0x48], 0xa
0x400042:	mov	rax, qword ptr [rbp - 0x40]
0x400046:	mov	edx, dword ptr [rbp - 0x48]
0x400049:	mov	dword ptr [rax], edx
0x40004b:	mov	rax, qword ptr [rbp - 0x38]
0x40004f:	mov	eax, dword ptr [rax]
0x400051:	mov	dword ptr [rbp - 0x44], eax
0x400054:	mov	qword ptr [rbp - 0x30], 0
0x40005c:	mov	qword ptr [rbp - 0x28], 0
0x400064:	mov	qword ptr [rbp - 0x20], 0
0x40006c:	mov	qword ptr [rbp - 0x18], 0
0x400074:	mov	qword ptr [rbp - 0x10], 0
0x40007c:	cmp	dword ptr [rbp - 0x44], 0
0x400080:	js	0x400094
<Block for 0x400094, 12 bytes>
0x400094:	lea	rdi, [rip + 0x1b5]
0x40009b:	call	0x500008
<Block for 0x400082, 16 bytes>
0x400082:	mov	eax, dword ptr [rbp - 0x44]
0x400085:	cdqe	
0x400087:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40008b:	mov	edi, eax
0x40008d:	call	0x500000
<Block for 0x4000a0, 16 bytes>
0x4000a0:	nop	
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	xor	rax, qword ptr fs:[0x28]
0x4000ae:	je	0x4000b5
<Block for 0x400092, 2 bytes>
0x400092:	jmp	0x4000a0
<Block for 0x4000b5, 2 bytes>
0x4000b5:	leave	
0x4000b6:	ret	
<Block for 0x4000b0, 5 bytes>
0x4000b0:	call	0x500010
