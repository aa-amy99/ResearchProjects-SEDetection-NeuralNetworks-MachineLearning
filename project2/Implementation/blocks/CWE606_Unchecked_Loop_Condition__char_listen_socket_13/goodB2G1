<Block for 0x400319, 159 bytes>
0x400319:	endbr64	
0x40031d:	push	rbp
0x40031e:	mov	rbp, rsp
0x400321:	sub	rsp, 0xb0
0x400328:	mov	rax, qword ptr fs:[0x28]
0x400331:	mov	qword ptr [rbp - 8], rax
0x400335:	xor	eax, eax
0x400337:	mov	qword ptr [rbp - 0x70], 0
0x40033f:	mov	qword ptr [rbp - 0x68], 0
0x400347:	mov	qword ptr [rbp - 0x60], 0
0x40034f:	mov	qword ptr [rbp - 0x58], 0
0x400357:	mov	qword ptr [rbp - 0x50], 0
0x40035f:	mov	qword ptr [rbp - 0x48], 0
0x400367:	mov	qword ptr [rbp - 0x40], 0
0x40036f:	mov	qword ptr [rbp - 0x38], 0
0x400377:	mov	qword ptr [rbp - 0x30], 0
0x40037f:	mov	qword ptr [rbp - 0x28], 0
0x400387:	mov	qword ptr [rbp - 0x20], 0
0x40038f:	mov	qword ptr [rbp - 0x18], 0
0x400397:	mov	dword ptr [rbp - 0x10], 0
0x40039e:	lea	rax, [rbp - 0x70]
0x4003a2:	mov	qword ptr [rbp - 0x98], rax
0x4003a9:	mov	eax, dword ptr [rip + 0xffc51]
0x4003af:	cmp	eax, 5
0x4003b2:	jne	0x4005aa
<Block for 0x4003b8, 35 bytes>
0x4003b8:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4003c2:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x4003cc:	mov	rax, qword ptr [rbp - 0x98]
0x4003d3:	mov	rdi, rax
0x4003d6:	call	0x500008
<Block for 0x4005aa, 11 bytes>
0x4005aa:	mov	eax, dword ptr [rip + 0xffa50]
0x4005b0:	cmp	eax, 5
0x4005b3:	je	0x4005c3
<Block for 0x4003db, 27 bytes>
0x4003db:	mov	qword ptr [rbp - 0x90], rax
0x4003e2:	mov	edx, 6
0x4003e7:	mov	esi, 1
0x4003ec:	mov	edi, 2
0x4003f1:	call	0x500010
<Block for 0x4005c3, 34 bytes>
0x4005c3:	lea	rdx, [rbp - 0xb0]
0x4005ca:	mov	rax, qword ptr [rbp - 0x98]
0x4005d1:	lea	rsi, [rip + 0x60c]
0x4005d8:	mov	rdi, rax
0x4005db:	mov	eax, 0
0x4005e0:	call	0x500058
<Block for 0x4005b5, 12 bytes>
0x4005b5:	lea	rdi, [rip + 0x62b]
0x4005bc:	call	0x500070
<Block for 0x4003f6, 19 bytes>
0x4003f6:	mov	dword ptr [rbp - 0xa0], eax
0x4003fc:	cmp	dword ptr [rbp - 0xa0], -1
0x400403:	je	0x400574
<Block for 0x4005e5, 5 bytes>
0x4005e5:	cmp	eax, 1
0x4005e8:	jne	0x400636
<Block for 0x4005c1, 2 bytes>
0x4005c1:	jmp	0x400636
<Block for 0x400574, 3 bytes>
0x400574:	nop	
0x400575:	jmp	0x40057e
<Block for 0x400409, 22 bytes>
0x400409:	lea	rax, [rbp - 0x80]
0x40040d:	mov	edx, 0x10
0x400412:	mov	esi, 0
0x400417:	mov	rdi, rax
0x40041a:	call	0x500018
<Block for 0x4005ea, 13 bytes>
0x4005ea:	mov	eax, dword ptr [rbp - 0xb0]
0x4005f0:	cmp	eax, 0x270f
0x4005f5:	jg	0x400636
<Block for 0x400636, 16 bytes>
0x400636:	nop	
0x400637:	mov	rax, qword ptr [rbp - 8]
0x40063b:	xor	rax, qword ptr fs:[0x28]
0x400644:	je	0x40064b
<Block for 0x40057e, 9 bytes>
0x40057e:	cmp	dword ptr [rbp - 0xa0], -1
0x400585:	je	0x400594
<Block for 0x40041f, 23 bytes>
0x40041f:	mov	word ptr [rbp - 0x80], 2
0x400425:	mov	dword ptr [rbp - 0x7c], 0
0x40042c:	mov	edi, 0x6987
0x400431:	call	0x500020
<Block for 0x4005f7, 22 bytes>
0x4005f7:	mov	dword ptr [rbp - 0xa4], 0
0x400601:	mov	dword ptr [rbp - 0xa8], 0
0x40060b:	jmp	0x40061b
<Block for 0x40064b, 2 bytes>
0x40064b:	leave	
0x40064c:	ret	
<Block for 0x400646, 5 bytes>
0x400646:	call	0x500068
<Block for 0x400594, 9 bytes>
0x400594:	cmp	dword ptr [rbp - 0xac], -1
0x40059b:	je	0x4005aa
<Block for 0x400587, 13 bytes>
0x400587:	mov	eax, dword ptr [rbp - 0xa0]
0x40058d:	mov	edi, eax
0x40058f:	call	0x500050
<Block for 0x400436, 29 bytes>
0x400436:	mov	word ptr [rbp - 0x7e], ax
0x40043a:	lea	rcx, [rbp - 0x80]
0x40043e:	mov	eax, dword ptr [rbp - 0xa0]
0x400444:	mov	edx, 0x10
0x400449:	mov	rsi, rcx
0x40044c:	mov	edi, eax
0x40044e:	call	0x500028
<Block for 0x40061b, 14 bytes>
0x40061b:	mov	eax, dword ptr [rbp - 0xb0]
0x400621:	cmp	dword ptr [rbp - 0xa8], eax
0x400627:	jl	0x40060d
<Block for 0x40059d, 13 bytes>
0x40059d:	mov	eax, dword ptr [rbp - 0xac]
0x4005a3:	mov	edi, eax
0x4005a5:	call	0x500050
<Block for 0x400453, 9 bytes>
0x400453:	cmp	eax, -1
0x400456:	je	0x400577
<Block for 0x40060d, 28 bytes>
0x40060d:	add	dword ptr [rbp - 0xa4], 1
0x400614:	add	dword ptr [rbp - 0xa8], 1
0x40061b:	mov	eax, dword ptr [rbp - 0xb0]
0x400621:	cmp	dword ptr [rbp - 0xa8], eax
0x400627:	jl	0x40060d
<Block for 0x400629, 13 bytes>
0x400629:	mov	eax, dword ptr [rbp - 0xa4]
0x40062f:	mov	edi, eax
0x400631:	call	0x500060
<Block for 0x400577, 3 bytes>
0x400577:	nop	
0x400578:	jmp	0x40057e
<Block for 0x40045c, 18 bytes>
0x40045c:	mov	eax, dword ptr [rbp - 0xa0]
0x400462:	mov	esi, 5
0x400467:	mov	edi, eax
0x400469:	call	0x500030
<Block for 0x40046e, 9 bytes>
0x40046e:	cmp	eax, -1
0x400471:	je	0x40057a
<Block for 0x40057a, 3 bytes>
0x40057a:	nop	
0x40057b:	jmp	0x40057e
<Block for 0x400477, 23 bytes>
0x400477:	mov	eax, dword ptr [rbp - 0xa0]
0x40047d:	mov	edx, 0
0x400482:	mov	esi, 0
0x400487:	mov	edi, eax
0x400489:	call	0x500038
<Block for 0x40048e, 19 bytes>
0x40048e:	mov	dword ptr [rbp - 0xac], eax
0x400494:	cmp	dword ptr [rbp - 0xac], -1
0x40049b:	je	0x40057d
<Block for 0x4004a1, 51 bytes>
0x4004a1:	mov	eax, 0x63
0x4004a6:	sub	rax, qword ptr [rbp - 0x90]
0x4004ad:	mov	rdx, rax
0x4004b0:	mov	rcx, qword ptr [rbp - 0x98]
0x4004b7:	mov	rax, qword ptr [rbp - 0x90]
0x4004be:	lea	rsi, [rcx + rax]
0x4004c2:	mov	eax, dword ptr [rbp - 0xac]
0x4004c8:	mov	ecx, 0
0x4004cd:	mov	edi, eax
0x4004cf:	call	0x500040
<Block for 0x40057d, 1 bytes>
0x40057d:	nop	
<Block for 0x4004d4, 19 bytes>
0x4004d4:	mov	dword ptr [rbp - 0x9c], eax
0x4004da:	cmp	dword ptr [rbp - 0x9c], -1
0x4004e1:	je	0x40057e
<Block for 0x4004e7, 13 bytes>
0x4004e7:	cmp	dword ptr [rbp - 0x9c], 0
0x4004ee:	je	0x40057e
<Block for 0x4004f4, 52 bytes>
0x4004f4:	mov	eax, dword ptr [rbp - 0x9c]
0x4004fa:	movsxd	rdx, eax
0x4004fd:	mov	rax, qword ptr [rbp - 0x90]
0x400504:	add	rdx, rax
0x400507:	mov	rax, qword ptr [rbp - 0x98]
0x40050e:	add	rax, rdx
0x400511:	mov	byte ptr [rax], 0
0x400514:	mov	rax, qword ptr [rbp - 0x98]
0x40051b:	mov	esi, 0xd
0x400520:	mov	rdi, rax
0x400523:	call	0x500048
<Block for 0x400528, 17 bytes>
0x400528:	mov	qword ptr [rbp - 0x88], rax
0x40052f:	cmp	qword ptr [rbp - 0x88], 0
0x400537:	je	0x400543
<Block for 0x400543, 20 bytes>
0x400543:	mov	rax, qword ptr [rbp - 0x98]
0x40054a:	mov	esi, 0xa
0x40054f:	mov	rdi, rax
0x400552:	call	0x500048
<Block for 0x400539, 30 bytes>
0x400539:	mov	rax, qword ptr [rbp - 0x88]
0x400540:	mov	byte ptr [rax], 0
0x400543:	mov	rax, qword ptr [rbp - 0x98]
0x40054a:	mov	esi, 0xa
0x40054f:	mov	rdi, rax
0x400552:	call	0x500048
<Block for 0x400557, 17 bytes>
0x400557:	mov	qword ptr [rbp - 0x88], rax
0x40055e:	cmp	qword ptr [rbp - 0x88], 0
0x400566:	je	0x40057e
<Block for 0x400568, 12 bytes>
0x400568:	mov	rax, qword ptr [rbp - 0x88]
0x40056f:	mov	byte ptr [rax], 0
0x400572:	jmp	0x40057e
