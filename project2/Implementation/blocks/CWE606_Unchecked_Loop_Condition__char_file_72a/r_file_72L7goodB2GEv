<Block for 0x400547, 46 bytes>
0x400547:	endbr64	
0x40054b:	push	rbp
0x40054c:	mov	rbp, rsp
0x40054f:	push	rbx
0x400550:	sub	rsp, 0xd8
0x400557:	mov	rax, qword ptr fs:[0x28]
0x400560:	mov	qword ptr [rbp - 0x18], rax
0x400564:	xor	eax, eax
0x400566:	lea	rax, [rbp - 0xc0]
0x40056d:	mov	rdi, rax
0x400570:	call	0x4008e4
<Block for 0x400575, 129 bytes>
0x400575:	mov	qword ptr [rbp - 0x80], 0
0x40057d:	mov	qword ptr [rbp - 0x78], 0
0x400585:	mov	qword ptr [rbp - 0x70], 0
0x40058d:	mov	qword ptr [rbp - 0x68], 0
0x400595:	mov	qword ptr [rbp - 0x60], 0
0x40059d:	mov	qword ptr [rbp - 0x58], 0
0x4005a5:	mov	qword ptr [rbp - 0x50], 0
0x4005ad:	mov	qword ptr [rbp - 0x48], 0
0x4005b5:	mov	qword ptr [rbp - 0x40], 0
0x4005bd:	mov	qword ptr [rbp - 0x38], 0
0x4005c5:	mov	qword ptr [rbp - 0x30], 0
0x4005cd:	mov	qword ptr [rbp - 0x28], 0
0x4005d5:	mov	dword ptr [rbp - 0x20], 0
0x4005dc:	lea	rax, [rbp - 0x80]
0x4005e0:	mov	qword ptr [rbp - 0xe0], rax
0x4005e7:	mov	rax, qword ptr [rbp - 0xe0]
0x4005ee:	mov	rdi, rax
0x4005f1:	call	0x500000
<Block for 0x4005f6, 29 bytes>
0x4005f6:	mov	qword ptr [rbp - 0xd0], rax
0x4005fd:	mov	eax, 0x64
0x400602:	sub	rax, qword ptr [rbp - 0xd0]
0x400609:	cmp	rax, 1
0x40060d:	jbe	0x4006a6
<Block for 0x4006a6, 15 bytes>
0x4006a6:	lea	rax, [rbp - 0xc0]
0x4006ad:	mov	rdi, rax
0x4006b0:	call	0x400a8e
<Block for 0x400613, 19 bytes>
0x400613:	lea	rsi, [rip + 0x254]
0x40061a:	lea	rdi, [rip + 0x24f]
0x400621:	call	0x500008
<Block for 0x4006b5, 32 bytes>
0x4006b5:	mov	qword ptr [rbp - 0xd8], rax
0x4006bc:	lea	rdx, [rbp - 0xd8]
0x4006c3:	lea	rax, [rbp - 0xa0]
0x4006ca:	mov	rsi, rdx
0x4006cd:	mov	rdi, rax
0x4006d0:	call	0x400ade
<Block for 0x400626, 17 bytes>
0x400626:	mov	qword ptr [rbp - 0xc8], rax
0x40062d:	cmp	qword ptr [rbp - 0xc8], 0
0x400635:	je	0x4006a6
<Block for 0x4006d5, 37 bytes>
0x4006d5:	lea	rdx, [rbp - 0xe0]
0x4006dc:	mov	rsi, qword ptr [rbp - 0xa0]
0x4006e3:	lea	rax, [rbp - 0xc0]
0x4006ea:	mov	rcx, rdx
0x4006ed:	mov	edx, 1
0x4006f2:	mov	rdi, rax
0x4006f5:	call	0x400b0c
<Block for 0x400637, 54 bytes>
0x400637:	mov	rax, qword ptr [rbp - 0xd0]
0x40063e:	mov	edx, 0x64
0x400643:	sub	edx, eax
0x400645:	mov	eax, edx
0x400647:	mov	esi, eax
0x400649:	mov	rdx, qword ptr [rbp - 0xe0]
0x400650:	mov	rax, qword ptr [rbp - 0xd0]
0x400657:	lea	rcx, [rdx + rax]
0x40065b:	mov	rax, qword ptr [rbp - 0xc8]
0x400662:	mov	rdx, rax
0x400665:	mov	rdi, rcx
0x400668:	call	0x500010
<Block for 0x4006fa, 15 bytes>
0x4006fa:	lea	rax, [rbp - 0xc0]
0x400701:	mov	rdi, rax
0x400704:	call	0x400a8e
<Block for 0x40066d, 10 bytes>
0x40066d:	test	rax, rax
0x400670:	sete	al
0x400673:	test	al, al
0x400675:	je	0x400697
<Block for 0x400709, 32 bytes>
0x400709:	mov	qword ptr [rbp - 0xd8], rax
0x400710:	lea	rdx, [rbp - 0xd8]
0x400717:	lea	rax, [rbp - 0xa0]
0x40071e:	mov	rsi, rdx
0x400721:	mov	rdi, rax
0x400724:	call	0x400ade
<Block for 0x400697, 15 bytes>
0x400697:	mov	rax, qword ptr [rbp - 0xc8]
0x40069e:	mov	rdi, rax
0x4006a1:	call	0x500020
<Block for 0x400677, 12 bytes>
0x400677:	lea	rdi, [rip + 0x200]
0x40067e:	call	0x500018
<Block for 0x400729, 37 bytes>
0x400729:	lea	rdx, [rbp - 0xe0]
0x400730:	mov	rsi, qword ptr [rbp - 0xa0]
0x400737:	lea	rax, [rbp - 0xc0]
0x40073e:	mov	rcx, rdx
0x400741:	mov	edx, 1
0x400746:	mov	rdi, rax
0x400749:	call	0x400b0c
<Block for 0x400683, 35 bytes>
0x400683:	mov	rdx, qword ptr [rbp - 0xe0]
0x40068a:	mov	rax, qword ptr [rbp - 0xd0]
0x400691:	add	rax, rdx
0x400694:	mov	byte ptr [rax], 0
0x400697:	mov	rax, qword ptr [rbp - 0xc8]
0x40069e:	mov	rdi, rax
0x4006a1:	call	0x500020
<Block for 0x40074e, 15 bytes>
0x40074e:	lea	rax, [rbp - 0xc0]
0x400755:	mov	rdi, rax
0x400758:	call	0x400a8e
<Block for 0x40075d, 32 bytes>
0x40075d:	mov	qword ptr [rbp - 0xd8], rax
0x400764:	lea	rdx, [rbp - 0xd8]
0x40076b:	lea	rax, [rbp - 0xa0]
0x400772:	mov	rsi, rdx
0x400775:	mov	rdi, rax
0x400778:	call	0x400ade
<Block for 0x40077d, 37 bytes>
0x40077d:	lea	rdx, [rbp - 0xe0]
0x400784:	mov	rsi, qword ptr [rbp - 0xa0]
0x40078b:	lea	rax, [rbp - 0xc0]
0x400792:	mov	rcx, rdx
0x400795:	mov	edx, 1
0x40079a:	mov	rdi, rax
0x40079d:	call	0x400b0c
<Block for 0x4007a2, 25 bytes>
0x4007a2:	lea	rdx, [rbp - 0xc0]
0x4007a9:	lea	rax, [rbp - 0xa0]
0x4007b0:	mov	rsi, rdx
0x4007b3:	mov	rdi, rax
0x4007b6:	call	0x400bd2
<Block for 0x4007bb, 15 bytes>
0x4007bb:	lea	rax, [rbp - 0xa0]
0x4007c2:	mov	rdi, rax
0x4007c5:	call	0x500048
<Block for 0x4007ca, 15 bytes>
0x4007ca:	lea	rax, [rbp - 0xa0]
0x4007d1:	mov	rdi, rax
0x4007d4:	call	0x400a46
<Block for 0x4007d9, 15 bytes>
0x4007d9:	lea	rax, [rbp - 0xc0]
0x4007e0:	mov	rdi, rax
0x4007e3:	call	0x400a46
<Block for 0x4007e8, 16 bytes>
0x4007e8:	nop	
0x4007e9:	mov	rax, qword ptr [rbp - 0x18]
0x4007ed:	xor	rax, qword ptr fs:[0x28]
0x4007f6:	je	0x400838
<Block for 0x400838, 10 bytes>
0x400838:	add	rsp, 0xd8
0x40083f:	pop	rbx
0x400840:	pop	rbp
0x400841:	ret	
<Block for 0x4007f8, 2 bytes>
0x4007f8:	jmp	0x400833
<Block for 0x400833, 5 bytes>
0x400833:	call	0x500038
