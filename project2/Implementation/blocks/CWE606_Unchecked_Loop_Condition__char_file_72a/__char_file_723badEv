<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xd8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xc0]
0x400026:	mov	rdi, rax
0x400029:	call	0x4008e4
<Block for 0x40002e, 129 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xe0], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0xe0]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500000
<Block for 0x4000af, 29 bytes>
0x4000af:	mov	qword ptr [rbp - 0xd0], rax
0x4000b6:	mov	eax, 0x64
0x4000bb:	sub	rax, qword ptr [rbp - 0xd0]
0x4000c2:	cmp	rax, 1
0x4000c6:	jbe	0x40015f
<Block for 0x40015f, 15 bytes>
0x40015f:	lea	rax, [rbp - 0xc0]
0x400166:	mov	rdi, rax
0x400169:	call	0x400a8e
<Block for 0x4000cc, 19 bytes>
0x4000cc:	lea	rsi, [rip + 0x79b]
0x4000d3:	lea	rdi, [rip + 0x796]
0x4000da:	call	0x500008
<Block for 0x40016e, 32 bytes>
0x40016e:	mov	qword ptr [rbp - 0xd8], rax
0x400175:	lea	rdx, [rbp - 0xd8]
0x40017c:	lea	rax, [rbp - 0xa0]
0x400183:	mov	rsi, rdx
0x400186:	mov	rdi, rax
0x400189:	call	0x400ade
<Block for 0x4000df, 17 bytes>
0x4000df:	mov	qword ptr [rbp - 0xc8], rax
0x4000e6:	cmp	qword ptr [rbp - 0xc8], 0
0x4000ee:	je	0x40015f
<Block for 0x40018e, 37 bytes>
0x40018e:	lea	rdx, [rbp - 0xe0]
0x400195:	mov	rsi, qword ptr [rbp - 0xa0]
0x40019c:	lea	rax, [rbp - 0xc0]
0x4001a3:	mov	rcx, rdx
0x4001a6:	mov	edx, 1
0x4001ab:	mov	rdi, rax
0x4001ae:	call	0x400b0c
<Block for 0x4000f0, 54 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0xd0]
0x4000f7:	mov	edx, 0x64
0x4000fc:	sub	edx, eax
0x4000fe:	mov	eax, edx
0x400100:	mov	esi, eax
0x400102:	mov	rdx, qword ptr [rbp - 0xe0]
0x400109:	mov	rax, qword ptr [rbp - 0xd0]
0x400110:	lea	rcx, [rdx + rax]
0x400114:	mov	rax, qword ptr [rbp - 0xc8]
0x40011b:	mov	rdx, rax
0x40011e:	mov	rdi, rcx
0x400121:	call	0x500010
<Block for 0x4001b3, 15 bytes>
0x4001b3:	lea	rax, [rbp - 0xc0]
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x400a8e
<Block for 0x400126, 10 bytes>
0x400126:	test	rax, rax
0x400129:	sete	al
0x40012c:	test	al, al
0x40012e:	je	0x400150
<Block for 0x4001c2, 32 bytes>
0x4001c2:	mov	qword ptr [rbp - 0xd8], rax
0x4001c9:	lea	rdx, [rbp - 0xd8]
0x4001d0:	lea	rax, [rbp - 0xa0]
0x4001d7:	mov	rsi, rdx
0x4001da:	mov	rdi, rax
0x4001dd:	call	0x400ade
<Block for 0x400150, 15 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0xc8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x400130, 12 bytes>
0x400130:	lea	rdi, [rip + 0x747]
0x400137:	call	0x500018
<Block for 0x4001e2, 37 bytes>
0x4001e2:	lea	rdx, [rbp - 0xe0]
0x4001e9:	mov	rsi, qword ptr [rbp - 0xa0]
0x4001f0:	lea	rax, [rbp - 0xc0]
0x4001f7:	mov	rcx, rdx
0x4001fa:	mov	edx, 1
0x4001ff:	mov	rdi, rax
0x400202:	call	0x400b0c
<Block for 0x40013c, 35 bytes>
0x40013c:	mov	rdx, qword ptr [rbp - 0xe0]
0x400143:	mov	rax, qword ptr [rbp - 0xd0]
0x40014a:	add	rax, rdx
0x40014d:	mov	byte ptr [rax], 0
0x400150:	mov	rax, qword ptr [rbp - 0xc8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x400207, 15 bytes>
0x400207:	lea	rax, [rbp - 0xc0]
0x40020e:	mov	rdi, rax
0x400211:	call	0x400a8e
<Block for 0x400216, 32 bytes>
0x400216:	mov	qword ptr [rbp - 0xd8], rax
0x40021d:	lea	rdx, [rbp - 0xd8]
0x400224:	lea	rax, [rbp - 0xa0]
0x40022b:	mov	rsi, rdx
0x40022e:	mov	rdi, rax
0x400231:	call	0x400ade
<Block for 0x400236, 37 bytes>
0x400236:	lea	rdx, [rbp - 0xe0]
0x40023d:	mov	rsi, qword ptr [rbp - 0xa0]
0x400244:	lea	rax, [rbp - 0xc0]
0x40024b:	mov	rcx, rdx
0x40024e:	mov	edx, 1
0x400253:	mov	rdi, rax
0x400256:	call	0x400b0c
<Block for 0x40025b, 25 bytes>
0x40025b:	lea	rdx, [rbp - 0xc0]
0x400262:	lea	rax, [rbp - 0xa0]
0x400269:	mov	rsi, rdx
0x40026c:	mov	rdi, rax
0x40026f:	call	0x400bd2
<Block for 0x400274, 15 bytes>
0x400274:	lea	rax, [rbp - 0xa0]
0x40027b:	mov	rdi, rax
0x40027e:	call	0x500028
<Block for 0x400283, 15 bytes>
0x400283:	lea	rax, [rbp - 0xa0]
0x40028a:	mov	rdi, rax
0x40028d:	call	0x400a46
<Block for 0x400292, 15 bytes>
0x400292:	lea	rax, [rbp - 0xc0]
0x400299:	mov	rdi, rax
0x40029c:	call	0x400a46
<Block for 0x4002a1, 16 bytes>
0x4002a1:	nop	
0x4002a2:	mov	rax, qword ptr [rbp - 0x18]
0x4002a6:	xor	rax, qword ptr fs:[0x28]
0x4002af:	je	0x4002f1
<Block for 0x4002f1, 10 bytes>
0x4002f1:	add	rsp, 0xd8
0x4002f8:	pop	rbx
0x4002f9:	pop	rbp
0x4002fa:	ret	
<Block for 0x4002b1, 2 bytes>
0x4002b1:	jmp	0x4002ec
<Block for 0x4002ec, 5 bytes>
0x4002ec:	call	0x500038
