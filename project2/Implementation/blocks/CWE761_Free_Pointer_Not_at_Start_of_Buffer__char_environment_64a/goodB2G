<Block for 0x4000b3, 37 bytes>
0x4000b3:	endbr64	
0x4000b7:	push	rbp
0x4000b8:	mov	rbp, rsp
0x4000bb:	sub	rsp, 0x20
0x4000bf:	mov	rax, qword ptr fs:[0x28]
0x4000c8:	mov	qword ptr [rbp - 8], rax
0x4000cc:	xor	eax, eax
0x4000ce:	mov	edi, 0x64
0x4000d3:	call	0x500000
<Block for 0x4000d8, 13 bytes>
0x4000d8:	mov	qword ptr [rbp - 0x20], rax
0x4000dc:	mov	rax, qword ptr [rbp - 0x20]
0x4000e0:	test	rax, rax
0x4000e3:	jne	0x4000ef
<Block for 0x4000e5, 10 bytes>
0x4000e5:	mov	edi, 0xffffffff
0x4000ea:	call	0x500008
<Block for 0x4000ef, 19 bytes>
0x4000ef:	mov	rax, qword ptr [rbp - 0x20]
0x4000f3:	mov	byte ptr [rax], 0
0x4000f6:	mov	rax, qword ptr [rbp - 0x20]
0x4000fa:	mov	rdi, rax
0x4000fd:	call	0x500010
<Block for 0x400102, 16 bytes>
0x400102:	mov	qword ptr [rbp - 0x18], rax
0x400106:	lea	rdi, [rip + 0x6e]
0x40010d:	call	0x500018
<Block for 0x400112, 11 bytes>
0x400112:	mov	qword ptr [rbp - 0x10], rax
0x400116:	cmp	qword ptr [rbp - 0x10], 0
0x40011b:	je	0x400143
<Block for 0x400143, 12 bytes>
0x400143:	lea	rax, [rbp - 0x20]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500038
<Block for 0x40011d, 38 bytes>
0x40011d:	mov	eax, 0x63
0x400122:	sub	rax, qword ptr [rbp - 0x18]
0x400126:	mov	rdx, rax
0x400129:	mov	rcx, qword ptr [rbp - 0x20]
0x40012d:	mov	rax, qword ptr [rbp - 0x18]
0x400131:	add	rcx, rax
0x400134:	mov	rax, qword ptr [rbp - 0x10]
0x400138:	mov	rsi, rax
0x40013b:	mov	rdi, rcx
0x40013e:	call	0x500020
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500030
