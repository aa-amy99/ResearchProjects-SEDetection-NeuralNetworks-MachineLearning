<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0x23e]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x400061
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 0x64
0x400024:	call	0x500000
<Block for 0x400061, 11 bytes>
0x400061:	mov	eax, dword ptr [rip + 0x1f1]
0x400067:	cmp	eax, 5
0x40006a:	jne	0x400078
<Block for 0x400029, 26 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	mov	rax, qword ptr [rbp - 8]
0x400031:	mov	edx, 0x63
0x400036:	mov	esi, 0x41
0x40003b:	mov	rdi, rax
0x40003e:	call	0x500008
<Block for 0x40006c, 12 bytes>
0x40006c:	mov	rax, qword ptr [rbp - 8]
0x400070:	mov	rdi, rax
0x400073:	call	0x500018
<Block for 0x400078, 3 bytes>
0x400078:	nop	
0x400079:	leave	
0x40007a:	ret	
<Block for 0x400043, 18 bytes>
0x400043:	mov	rax, qword ptr [rbp - 8]
0x400047:	add	rax, 0x63
0x40004b:	mov	byte ptr [rax], 0
0x40004e:	cmp	qword ptr [rbp - 8], 0
0x400053:	je	0x400061
<Block for 0x400055, 12 bytes>
0x400055:	mov	rax, qword ptr [rbp - 8]
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
