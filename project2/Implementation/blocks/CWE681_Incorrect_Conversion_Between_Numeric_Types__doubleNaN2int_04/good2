<Block for 0x40018b, 43 bytes>
0x40018b:	endbr64	
0x40018f:	push	rbp
0x400190:	mov	rbp, rsp
0x400193:	sub	rsp, 0x120
0x40019a:	mov	rax, qword ptr fs:[0x28]
0x4001a3:	mov	qword ptr [rbp - 8], rax
0x4001a7:	xor	eax, eax
0x4001a9:	mov	eax, 1
0x4001ae:	test	eax, eax
0x4001b0:	je	0x400243
<Block for 0x400243, 16 bytes>
0x400243:	nop	
0x400244:	mov	rax, qword ptr [rbp - 8]
0x400248:	xor	rax, qword ptr fs:[0x28]
0x400251:	je	0x400258
<Block for 0x4001b6, 39 bytes>
0x4001b6:	pxor	xmm0, xmm0
0x4001ba:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001c2:	mov	rdx, qword ptr [rip + 0xffe37]
0x4001c9:	lea	rax, [rbp - 0x110]
0x4001d0:	mov	esi, 0x100
0x4001d5:	mov	rdi, rax
0x4001d8:	call	0x500008
<Block for 0x400258, 2 bytes>
0x400258:	leave	
0x400259:	ret	
<Block for 0x400253, 5 bytes>
0x400253:	call	0x500030
<Block for 0x4001dd, 5 bytes>
0x4001dd:	test	rax, rax
0x4001e0:	je	0x4001ff
<Block for 0x4001ff, 12 bytes>
0x4001ff:	lea	rdi, [rip + 0x7e]
0x400206:	call	0x500018
<Block for 0x4001e2, 15 bytes>
0x4001e2:	lea	rax, [rbp - 0x110]
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500010
<Block for 0x40020b, 14 bytes>
0x40020b:	pxor	xmm0, xmm0
0x40020f:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400217:	jbe	0x400227
<Block for 0x4001f1, 14 bytes>
0x4001f1:	movq	rax, xmm0
0x4001f6:	mov	qword ptr [rbp - 0x118], rax
0x4001fd:	jmp	0x40020b
<Block for 0x400227, 17 bytes>
0x400227:	mov	rax, qword ptr [rbp - 0x118]
0x40022e:	movq	xmm0, rax
0x400233:	call	0x500020
<Block for 0x400219, 12 bytes>
0x400219:	lea	rdi, [rip + 0x89]
0x400220:	call	0x500018
<Block for 0x400238, 11 bytes>
0x400238:	cvttsd2si	eax, xmm0
0x40023c:	mov	edi, eax
0x40023e:	call	0x500028
<Block for 0x400225, 2 bytes>
0x400225:	jmp	0x400243
