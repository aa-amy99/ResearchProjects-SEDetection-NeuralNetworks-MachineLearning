<Block for 0x40016c, 40 bytes>
0x40016c:	endbr64	
0x400170:	push	rbp
0x400171:	mov	rbp, rsp
0x400174:	sub	rsp, 0x50
0x400178:	mov	dword ptr [rbp - 0x44], edi
0x40017b:	mov	rax, qword ptr fs:[0x28]
0x400184:	mov	qword ptr [rbp - 8], rax
0x400188:	xor	eax, eax
0x40018a:	mov	eax, dword ptr [rip + 0xffe98]
0x400190:	test	eax, eax
0x400192:	je	0x400208
<Block for 0x400208, 16 bytes>
0x400208:	nop	
0x400209:	mov	rax, qword ptr [rbp - 8]
0x40020d:	xor	rax, qword ptr fs:[0x28]
0x400216:	je	0x40021d
<Block for 0x400194, 46 bytes>
0x400194:	mov	qword ptr [rbp - 0x30], 0
0x40019c:	mov	qword ptr [rbp - 0x28], 0
0x4001a4:	mov	qword ptr [rbp - 0x20], 0
0x4001ac:	mov	qword ptr [rbp - 0x18], 0
0x4001b4:	mov	qword ptr [rbp - 0x10], 0
0x4001bc:	cmp	dword ptr [rbp - 0x44], 0
0x4001c0:	js	0x4001fa
<Block for 0x40021d, 2 bytes>
0x40021d:	leave	
0x40021e:	ret	
<Block for 0x400218, 5 bytes>
0x400218:	call	0x500018
<Block for 0x4001fa, 12 bytes>
0x4001fa:	lea	rdi, [rip + 0x107]
0x400201:	call	0x500010
<Block for 0x4001c2, 6 bytes>
0x4001c2:	cmp	dword ptr [rbp - 0x44], 9
0x4001c6:	jg	0x4001fa
<Block for 0x400206, 2 bytes>
0x400206:	jmp	0x400208
<Block for 0x4001c8, 22 bytes>
0x4001c8:	mov	eax, dword ptr [rbp - 0x44]
0x4001cb:	cdqe	
0x4001cd:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4001d5:	mov	dword ptr [rbp - 0x34], 0
0x4001dc:	jmp	0x4001f2
<Block for 0x4001f2, 6 bytes>
0x4001f2:	cmp	dword ptr [rbp - 0x34], 9
0x4001f6:	jle	0x4001de
<Block for 0x4001de, 16 bytes>
0x4001de:	mov	eax, dword ptr [rbp - 0x34]
0x4001e1:	cdqe	
0x4001e3:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4001e7:	mov	edi, eax
0x4001e9:	call	0x500008
<Block for 0x4001f8, 2 bytes>
0x4001f8:	jmp	0x400208
<Block for 0x4001ee, 10 bytes>
0x4001ee:	add	dword ptr [rbp - 0x34], 1
0x4001f2:	cmp	dword ptr [rbp - 0x34], 9
0x4001f6:	jle	0x4001de
