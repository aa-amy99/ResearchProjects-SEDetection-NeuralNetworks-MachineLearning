<Block for 0x40018c, 55 bytes>
0x40018c:	endbr64	
0x400190:	push	rbp
0x400191:	mov	rbp, rsp
0x400194:	sub	rsp, 0xf0
0x40019b:	mov	rax, qword ptr fs:[0x28]
0x4001a4:	mov	qword ptr [rbp - 8], rax
0x4001a8:	xor	eax, eax
0x4001aa:	lea	rax, [rbp - 0xe0]
0x4001b1:	mov	edx, 0x63
0x4001b6:	mov	esi, 0x41
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500000
<Block for 0x4001c3, 14 bytes>
0x4001c3:	mov	byte ptr [rbp - 0x7d], 0
0x4001c7:	mov	eax, 0
0x4001cc:	call	0x500008
<Block for 0x4001d1, 4 bytes>
0x4001d1:	test	eax, eax
0x4001d3:	je	0x4001e3
<Block for 0x4001e3, 22 bytes>
0x4001e3:	lea	rax, [rbp - 0x70]
0x4001e7:	mov	edx, 0x63
0x4001ec:	mov	esi, 0x43
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500000
<Block for 0x4001d5, 36 bytes>
0x4001d5:	lea	rax, [rbp - 0xe0]
0x4001dc:	mov	qword ptr [rbp - 0xe8], rax
0x4001e3:	lea	rax, [rbp - 0x70]
0x4001e7:	mov	edx, 0x63
0x4001ec:	mov	esi, 0x43
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500000
<Block for 0x4001f9, 16 bytes>
0x4001f9:	mov	byte ptr [rbp - 0xd], 0
0x4001fd:	lea	rax, [rbp - 0x70]
0x400201:	mov	rdi, rax
0x400204:	call	0x500010
<Block for 0x400209, 25 bytes>
0x400209:	mov	rdx, rax
0x40020c:	mov	rcx, qword ptr [rbp - 0xe8]
0x400213:	lea	rax, [rbp - 0x70]
0x400217:	mov	rsi, rcx
0x40021a:	mov	rdi, rax
0x40021d:	call	0x500018
<Block for 0x400222, 16 bytes>
0x400222:	mov	byte ptr [rbp - 0xd], 0
0x400226:	lea	rax, [rbp - 0x70]
0x40022a:	mov	rdi, rax
0x40022d:	call	0x500020
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500028
