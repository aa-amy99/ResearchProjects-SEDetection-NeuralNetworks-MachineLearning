<Block for 0x4000c1, 55 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	sub	rsp, 0xf0
0x4000d0:	mov	rax, qword ptr fs:[0x28]
0x4000d9:	mov	qword ptr [rbp - 8], rax
0x4000dd:	xor	eax, eax
0x4000df:	lea	rax, [rbp - 0xe0]
0x4000e6:	mov	edx, 0x63
0x4000eb:	mov	esi, 0x41
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500000
<Block for 0x4000f8, 14 bytes>
0x4000f8:	mov	byte ptr [rbp - 0x7d], 0
0x4000fc:	mov	eax, 0
0x400101:	call	0x500030
<Block for 0x400106, 4 bytes>
0x400106:	test	eax, eax
0x400108:	je	0x400118
<Block for 0x400118, 36 bytes>
0x400118:	lea	rax, [rbp - 0xe0]
0x40011f:	mov	qword ptr [rbp - 0xe8], rax
0x400126:	lea	rax, [rbp - 0x70]
0x40012a:	mov	edx, 0x63
0x40012f:	mov	esi, 0x43
0x400134:	mov	rdi, rax
0x400137:	call	0x500000
<Block for 0x40010a, 12 bytes>
0x40010a:	lea	rdi, [rip + 0x157]
0x400111:	call	0x500020
<Block for 0x40013c, 16 bytes>
0x40013c:	mov	byte ptr [rbp - 0xd], 0
0x400140:	lea	rax, [rbp - 0x70]
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x400116, 2 bytes>
0x400116:	jmp	0x400126
<Block for 0x40014c, 25 bytes>
0x40014c:	mov	rdx, rax
0x40014f:	mov	rcx, qword ptr [rbp - 0xe8]
0x400156:	lea	rax, [rbp - 0x70]
0x40015a:	mov	rsi, rcx
0x40015d:	mov	rdi, rax
0x400160:	call	0x500018
<Block for 0x400126, 22 bytes>
0x400126:	lea	rax, [rbp - 0x70]
0x40012a:	mov	edx, 0x63
0x40012f:	mov	esi, 0x43
0x400134:	mov	rdi, rax
0x400137:	call	0x500000
<Block for 0x400165, 16 bytes>
0x400165:	mov	byte ptr [rbp - 0xd], 0
0x400169:	lea	rax, [rbp - 0x70]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500020
<Block for 0x400175, 16 bytes>
0x400175:	nop	
0x400176:	mov	rax, qword ptr [rbp - 8]
0x40017a:	xor	rax, qword ptr fs:[0x28]
0x400183:	je	0x40018a
<Block for 0x40018a, 2 bytes>
0x40018a:	leave	
0x40018b:	ret	
<Block for 0x400185, 5 bytes>
0x400185:	call	0x500028
