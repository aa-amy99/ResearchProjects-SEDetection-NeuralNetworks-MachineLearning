<Block for 0x400164, 55 bytes>
0x400164:	endbr64	
0x400168:	push	rbp
0x400169:	mov	rbp, rsp
0x40016c:	sub	rsp, 0xf0
0x400173:	mov	rax, qword ptr fs:[0x28]
0x40017c:	mov	qword ptr [rbp - 8], rax
0x400180:	xor	eax, eax
0x400182:	lea	rax, [rbp - 0xe0]
0x400189:	mov	edx, 0x63
0x40018e:	mov	esi, 0x41
0x400193:	mov	rdi, rax
0x400196:	call	0x500000
<Block for 0x40019b, 41 bytes>
0x40019b:	mov	byte ptr [rbp - 0x7d], 0
0x40019f:	lea	rax, [rbp - 0xe0]
0x4001a6:	mov	qword ptr [rbp - 0xe8], rax
0x4001ad:	nop	
0x4001ae:	lea	rax, [rbp - 0x70]
0x4001b2:	mov	edx, 0x63
0x4001b7:	mov	esi, 0x43
0x4001bc:	mov	rdi, rax
0x4001bf:	call	0x500000
<Block for 0x4001c4, 16 bytes>
0x4001c4:	mov	byte ptr [rbp - 0xd], 0
0x4001c8:	lea	rax, [rbp - 0x70]
0x4001cc:	mov	rdi, rax
0x4001cf:	call	0x500008
<Block for 0x4001d4, 25 bytes>
0x4001d4:	mov	rdx, rax
0x4001d7:	mov	rcx, qword ptr [rbp - 0xe8]
0x4001de:	lea	rax, [rbp - 0x70]
0x4001e2:	mov	rsi, rcx
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x500010
<Block for 0x4001ed, 16 bytes>
0x4001ed:	mov	byte ptr [rbp - 0xd], 0
0x4001f1:	lea	rax, [rbp - 0x70]
0x4001f5:	mov	rdi, rax
0x4001f8:	call	0x500018
<Block for 0x4001fd, 16 bytes>
0x4001fd:	nop	
0x4001fe:	mov	rax, qword ptr [rbp - 8]
0x400202:	xor	rax, qword ptr fs:[0x28]
0x40020b:	je	0x400212
<Block for 0x400212, 2 bytes>
0x400212:	leave	
0x400213:	ret	
<Block for 0x40020d, 5 bytes>
0x40020d:	call	0x500020
