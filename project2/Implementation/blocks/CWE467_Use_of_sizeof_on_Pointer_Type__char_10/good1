<Block for 0x400064, 22 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x10
0x400070:	mov	eax, dword ptr [rip + 0xfffb2]
0x400076:	test	eax, eax
0x400078:	je	0x400088
<Block for 0x400088, 18 bytes>
0x400088:	mov	qword ptr [rbp - 8], 0
0x400090:	mov	edi, 1
0x400095:	call	0x500008
<Block for 0x40007a, 12 bytes>
0x40007a:	lea	rdi, [rip + 0xd8]
0x400081:	call	0x500030
<Block for 0x40009a, 11 bytes>
0x40009a:	mov	qword ptr [rbp - 8], rax
0x40009e:	cmp	qword ptr [rbp - 8], 0
0x4000a3:	jne	0x4000af
<Block for 0x400086, 2 bytes>
0x400086:	jmp	0x4000d3
<Block for 0x4000a5, 10 bytes>
0x4000a5:	mov	edi, 0xffffffff
0x4000aa:	call	0x500010
<Block for 0x4000af, 24 bytes>
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	mov	byte ptr [rax], 0x47
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	movzx	eax, byte ptr [rax]
0x4000bd:	movsx	eax, al
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500018
<Block for 0x4000d3, 3 bytes>
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
<Block for 0x4000c7, 12 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 8]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500020
