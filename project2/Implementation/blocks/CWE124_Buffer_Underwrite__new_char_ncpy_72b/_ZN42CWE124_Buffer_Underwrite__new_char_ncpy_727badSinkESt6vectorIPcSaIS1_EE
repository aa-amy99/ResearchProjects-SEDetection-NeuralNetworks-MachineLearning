<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	esi, 2
0x400031:	mov	rdi, rax
0x400034:	call	0x400142
<Block for 0x400039, 29 bytes>
0x400039:	mov	rax, qword ptr [rax]
0x40003c:	mov	qword ptr [rbp - 0x78], rax
0x400040:	lea	rax, [rbp - 0x70]
0x400044:	mov	edx, 0x63
0x400049:	mov	esi, 0x43
0x40004e:	mov	rdi, rax
0x400051:	call	0x500000
<Block for 0x400056, 28 bytes>
0x400056:	mov	byte ptr [rbp - 0xd], 0
0x40005a:	lea	rcx, [rbp - 0x70]
0x40005e:	mov	rax, qword ptr [rbp - 0x78]
0x400062:	mov	edx, 0x63
0x400067:	mov	rsi, rcx
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500008
<Block for 0x400072, 23 bytes>
0x400072:	mov	rax, qword ptr [rbp - 0x78]
0x400076:	add	rax, 0x63
0x40007a:	mov	byte ptr [rax], 0
0x40007d:	mov	rax, qword ptr [rbp - 0x78]
0x400081:	mov	rdi, rax
0x400084:	call	0x500010
<Block for 0x400089, 16 bytes>
0x400089:	nop	
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	xor	rax, qword ptr fs:[0x28]
0x400097:	je	0x40009e
<Block for 0x40009e, 2 bytes>
0x40009e:	leave	
0x40009f:	ret	
<Block for 0x400099, 5 bytes>
0x400099:	call	0x500018
