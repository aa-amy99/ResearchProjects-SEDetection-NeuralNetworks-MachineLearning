<Block for 0x400105, 55 bytes>
0x400105:	endbr64	
0x400109:	push	rbp
0x40010a:	mov	rbp, rsp
0x40010d:	sub	rsp, 0x110
0x400114:	mov	rax, qword ptr fs:[0x28]
0x40011d:	mov	qword ptr [rbp - 8], rax
0x400121:	xor	eax, eax
0x400123:	lea	rax, [rbp - 0xa0]
0x40012a:	mov	edx, 0x95
0x40012f:	mov	esi, 0x41
0x400134:	mov	rdi, rax
0x400137:	call	0x500000
<Block for 0x40013c, 34 bytes>
0x40013c:	mov	byte ptr [rbp - 0xb], 0
0x400140:	lea	rcx, [rbp - 0xa0]
0x400147:	lea	rax, [rbp - 0x110]
0x40014e:	mov	edx, 0x63
0x400153:	mov	rsi, rcx
0x400156:	mov	rdi, rax
0x400159:	call	0x500008
<Block for 0x40015e, 22 bytes>
0x40015e:	mov	byte ptr [rbp - 0xad], 0
0x400165:	lea	rax, [rbp - 0x110]
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500010
<Block for 0x400174, 16 bytes>
0x400174:	nop	
0x400175:	mov	rax, qword ptr [rbp - 8]
0x400179:	xor	rax, qword ptr fs:[0x28]
0x400182:	je	0x400189
<Block for 0x400189, 2 bytes>
0x400189:	leave	
0x40018a:	ret	
<Block for 0x400184, 5 bytes>
0x400184:	call	0x500018
