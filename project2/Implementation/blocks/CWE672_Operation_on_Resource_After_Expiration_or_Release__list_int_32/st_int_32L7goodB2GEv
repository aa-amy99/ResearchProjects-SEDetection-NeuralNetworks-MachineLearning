<Block for 0x400404, 40 bytes>
0x400404:	endbr64	
0x400408:	push	rbp
0x400409:	mov	rbp, rsp
0x40040c:	push	rbx
0x40040d:	sub	rsp, 0x68
0x400411:	mov	rax, qword ptr fs:[0x28]
0x40041a:	mov	qword ptr [rbp - 0x18], rax
0x40041e:	xor	eax, eax
0x400420:	lea	rax, [rbp - 0x50]
0x400424:	mov	rdi, rax
0x400427:	call	0x400720
<Block for 0x40042c, 35 bytes>
0x40042c:	lea	rax, [rbp - 0x50]
0x400430:	mov	qword ptr [rbp - 0x60], rax
0x400434:	lea	rax, [rbp - 0x50]
0x400438:	mov	qword ptr [rbp - 0x58], rax
0x40043c:	mov	rdx, qword ptr [rbp - 0x60]
0x400440:	lea	rax, [rbp - 0x30]
0x400444:	mov	rsi, rdx
0x400447:	mov	rdi, rax
0x40044a:	call	0x40086a
<Block for 0x40044f, 26 bytes>
0x40044f:	mov	dword ptr [rbp - 0x68], 0x64
0x400456:	lea	rdx, [rbp - 0x68]
0x40045a:	lea	rax, [rbp - 0x30]
0x40045e:	mov	rsi, rdx
0x400461:	mov	rdi, rax
0x400464:	call	0x400936
<Block for 0x400469, 26 bytes>
0x400469:	mov	dword ptr [rbp - 0x68], 0
0x400470:	lea	rdx, [rbp - 0x68]
0x400474:	lea	rax, [rbp - 0x30]
0x400478:	mov	rsi, rdx
0x40047b:	mov	rdi, rax
0x40047e:	call	0x400936
<Block for 0x400483, 19 bytes>
0x400483:	lea	rdx, [rbp - 0x30]
0x400487:	mov	rax, qword ptr [rbp - 0x60]
0x40048b:	mov	rsi, rdx
0x40048e:	mov	rdi, rax
0x400491:	call	0x4009a2
<Block for 0x400496, 12 bytes>
0x400496:	lea	rax, [rbp - 0x30]
0x40049a:	mov	rdi, rax
0x40049d:	call	0x400740
<Block for 0x4004a2, 19 bytes>
0x4004a2:	mov	rdx, qword ptr [rbp - 0x58]
0x4004a6:	lea	rax, [rbp - 0x30]
0x4004aa:	mov	rsi, rdx
0x4004ad:	mov	rdi, rax
0x4004b0:	call	0x40086a
<Block for 0x4004b5, 12 bytes>
0x4004b5:	lea	rax, [rbp - 0x70]
0x4004b9:	mov	rdi, rax
0x4004bc:	call	0x400aac
<Block for 0x4004c1, 19 bytes>
0x4004c1:	lea	rsi, [rip + 0x1ab]
0x4004c8:	lea	rdi, [rip + 0xffb31]
0x4004cf:	call	0x500008
<Block for 0x4004d4, 12 bytes>
0x4004d4:	lea	rax, [rbp - 0x30]
0x4004d8:	mov	rdi, rax
0x4004db:	call	0x400ac6
<Block for 0x4004e0, 16 bytes>
0x4004e0:	mov	qword ptr [rbp - 0x70], rax
0x4004e4:	lea	rax, [rbp - 0x30]
0x4004e8:	mov	rdi, rax
0x4004eb:	call	0x400b16
<Block for 0x4004f0, 23 bytes>
0x4004f0:	mov	qword ptr [rbp - 0x68], rax
0x4004f4:	lea	rdx, [rbp - 0x68]
0x4004f8:	lea	rax, [rbp - 0x70]
0x4004fc:	mov	rsi, rdx
0x4004ff:	mov	rdi, rax
0x400502:	call	0x400b62
<Block for 0x400507, 4 bytes>
0x400507:	test	al, al
0x400509:	je	0x40054c
<Block for 0x40054c, 22 bytes>
0x40054c:	mov	rax, qword ptr [rip + 0xffacd]
0x400553:	mov	rsi, rax
0x400556:	lea	rdi, [rip + 0xffaa3]
0x40055d:	call	0x500028
<Block for 0x40050b, 19 bytes>
0x40050b:	lea	rsi, [rip + 0x175]
0x400512:	lea	rdi, [rip + 0xffae7]
0x400519:	call	0x500008
<Block for 0x400562, 12 bytes>
0x400562:	lea	rax, [rbp - 0x30]
0x400566:	mov	rdi, rax
0x400569:	call	0x400740
<Block for 0x40051e, 15 bytes>
0x40051e:	mov	rbx, rax
0x400521:	lea	rax, [rbp - 0x70]
0x400525:	mov	rdi, rax
0x400528:	call	0x400be0
<Block for 0x40056e, 12 bytes>
0x40056e:	lea	rax, [rbp - 0x50]
0x400572:	mov	rdi, rax
0x400575:	call	0x400740
<Block for 0x40052d, 12 bytes>
0x40052d:	mov	eax, dword ptr [rax]
0x40052f:	mov	esi, eax
0x400531:	mov	rdi, rbx
0x400534:	call	0x500010
<Block for 0x40057a, 16 bytes>
0x40057a:	nop	
0x40057b:	mov	rax, qword ptr [rbp - 0x18]
0x40057f:	xor	rax, qword ptr fs:[0x28]
0x400588:	je	0x4005d9
<Block for 0x400539, 17 bytes>
0x400539:	lea	rax, [rbp - 0x70]
0x40053d:	mov	esi, 0
0x400542:	mov	rdi, rax
0x400545:	call	0x400b88
<Block for 0x4005d9, 7 bytes>
0x4005d9:	add	rsp, 0x68
0x4005dd:	pop	rbx
0x4005de:	pop	rbp
0x4005df:	ret	
<Block for 0x40058a, 2 bytes>
0x40058a:	jmp	0x4005d4
<Block for 0x40054a, 2 bytes>
0x40054a:	jmp	0x4004e4
<Block for 0x4005d4, 5 bytes>
0x4005d4:	call	0x500038
<Block for 0x4004e4, 12 bytes>
0x4004e4:	lea	rax, [rbp - 0x30]
0x4004e8:	mov	rdi, rax
0x4004eb:	call	0x400b16
