<Block for 0x40008b, 150 bytes>
0x40008b:	endbr64	
0x40008f:	push	rbp
0x400090:	mov	rbp, rsp
0x400093:	add	rsp, -0x80
0x400097:	mov	rax, qword ptr fs:[0x28]
0x4000a0:	mov	qword ptr [rbp - 8], rax
0x4000a4:	xor	eax, eax
0x4000a6:	mov	qword ptr [rbp - 0x70], 0
0x4000ae:	mov	qword ptr [rbp - 0x68], 0
0x4000b6:	mov	qword ptr [rbp - 0x60], 0
0x4000be:	mov	qword ptr [rbp - 0x58], 0
0x4000c6:	mov	qword ptr [rbp - 0x50], 0
0x4000ce:	mov	qword ptr [rbp - 0x48], 0
0x4000d6:	mov	qword ptr [rbp - 0x40], 0
0x4000de:	mov	qword ptr [rbp - 0x38], 0
0x4000e6:	mov	qword ptr [rbp - 0x30], 0
0x4000ee:	mov	qword ptr [rbp - 0x28], 0
0x4000f6:	mov	qword ptr [rbp - 0x20], 0
0x4000fe:	mov	qword ptr [rbp - 0x18], 0
0x400106:	mov	dword ptr [rbp - 0x10], 0
0x40010d:	lea	rax, [rbp - 0x70]
0x400111:	mov	qword ptr [rbp - 0x80], rax
0x400115:	mov	rax, qword ptr [rbp - 0x80]
0x400119:	mov	rdi, rax
0x40011c:	call	0x500018
<Block for 0x400121, 23 bytes>
0x400121:	mov	qword ptr [rbp - 0x78], rax
0x400125:	mov	eax, 0x64
0x40012a:	sub	rax, qword ptr [rbp - 0x78]
0x40012e:	cmp	rax, 1
0x400132:	jbe	0x4001c4
<Block for 0x4001c4, 22 bytes>
0x4001c4:	mov	dword ptr [rip + 0x5a2], 1
0x4001ce:	mov	rax, qword ptr [rbp - 0x80]
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x400000
<Block for 0x400138, 44 bytes>
0x400138:	mov	rax, qword ptr [rip + 0xffee1]
0x40013f:	mov	rdx, qword ptr [rbp - 0x78]
0x400143:	mov	ecx, 0x64
0x400148:	sub	ecx, edx
0x40014a:	mov	edx, ecx
0x40014c:	mov	esi, edx
0x40014e:	mov	rcx, qword ptr [rbp - 0x80]
0x400152:	mov	rdx, qword ptr [rbp - 0x78]
0x400156:	add	rcx, rdx
0x400159:	mov	rdx, rax
0x40015c:	mov	rdi, rcx
0x40015f:	call	0x500028
<Block for 0x4001da, 16 bytes>
0x4001da:	nop	
0x4001db:	mov	rax, qword ptr [rbp - 8]
0x4001df:	xor	rax, qword ptr fs:[0x28]
0x4001e8:	je	0x4001ef
<Block for 0x400164, 5 bytes>
0x400164:	test	rax, rax
0x400167:	je	0x4001aa
<Block for 0x4001ef, 2 bytes>
0x4001ef:	leave	
0x4001f0:	ret	
<Block for 0x4001ea, 5 bytes>
0x4001ea:	call	0x500010
<Block for 0x4001aa, 12 bytes>
0x4001aa:	lea	rdi, [rip + 0x5d2]
0x4001b1:	call	0x500030
<Block for 0x400169, 12 bytes>
0x400169:	mov	rax, qword ptr [rbp - 0x80]
0x40016d:	mov	rdi, rax
0x400170:	call	0x500018
<Block for 0x4001b6, 36 bytes>
0x4001b6:	mov	rdx, qword ptr [rbp - 0x80]
0x4001ba:	mov	rax, qword ptr [rbp - 0x78]
0x4001be:	add	rax, rdx
0x4001c1:	mov	byte ptr [rax], 0
0x4001c4:	mov	dword ptr [rip + 0x5a2], 1
0x4001ce:	mov	rax, qword ptr [rbp - 0x80]
0x4001d2:	mov	rdi, rax
0x4001d5:	call	0x400000
<Block for 0x400175, 11 bytes>
0x400175:	mov	qword ptr [rbp - 0x78], rax
0x400179:	cmp	qword ptr [rbp - 0x78], 0
0x40017e:	je	0x4001c4
<Block for 0x400180, 22 bytes>
0x400180:	mov	rax, qword ptr [rbp - 0x78]
0x400184:	lea	rdx, [rax - 1]
0x400188:	mov	rax, qword ptr [rbp - 0x80]
0x40018c:	add	rax, rdx
0x40018f:	movzx	eax, byte ptr [rax]
0x400192:	cmp	al, 0xa
0x400194:	jne	0x4001c4
<Block for 0x400196, 20 bytes>
0x400196:	mov	rax, qword ptr [rbp - 0x78]
0x40019a:	lea	rdx, [rax - 1]
0x40019e:	mov	rax, qword ptr [rbp - 0x80]
0x4001a2:	add	rax, rdx
0x4001a5:	mov	byte ptr [rax], 0
0x4001a8:	jmp	0x4001c4
