<Block for 0x40048f, 150 bytes>
0x40048f:	endbr64	
0x400493:	push	rbp
0x400494:	mov	rbp, rsp
0x400497:	add	rsp, -0x80
0x40049b:	mov	rax, qword ptr fs:[0x28]
0x4004a4:	mov	qword ptr [rbp - 8], rax
0x4004a8:	xor	eax, eax
0x4004aa:	mov	qword ptr [rbp - 0x70], 0
0x4004b2:	mov	qword ptr [rbp - 0x68], 0
0x4004ba:	mov	qword ptr [rbp - 0x60], 0
0x4004c2:	mov	qword ptr [rbp - 0x58], 0
0x4004ca:	mov	qword ptr [rbp - 0x50], 0
0x4004d2:	mov	qword ptr [rbp - 0x48], 0
0x4004da:	mov	qword ptr [rbp - 0x40], 0
0x4004e2:	mov	qword ptr [rbp - 0x38], 0
0x4004ea:	mov	qword ptr [rbp - 0x30], 0
0x4004f2:	mov	qword ptr [rbp - 0x28], 0
0x4004fa:	mov	qword ptr [rbp - 0x20], 0
0x400502:	mov	qword ptr [rbp - 0x18], 0
0x40050a:	mov	dword ptr [rbp - 0x10], 0
0x400511:	lea	rax, [rbp - 0x70]
0x400515:	mov	qword ptr [rbp - 0x80], rax
0x400519:	mov	rax, qword ptr [rbp - 0x80]
0x40051d:	mov	rdi, rax
0x400520:	call	0x500018
<Block for 0x400525, 23 bytes>
0x400525:	mov	qword ptr [rbp - 0x78], rax
0x400529:	mov	eax, 0x64
0x40052e:	sub	rax, qword ptr [rbp - 0x78]
0x400532:	cmp	rax, 1
0x400536:	jbe	0x4005c8
<Block for 0x4005c8, 22 bytes>
0x4005c8:	mov	dword ptr [rip + 0x1a6], 1
0x4005d2:	mov	rax, qword ptr [rbp - 0x80]
0x4005d6:	mov	rdi, rax
0x4005d9:	call	0x4003fa
<Block for 0x40053c, 44 bytes>
0x40053c:	mov	rax, qword ptr [rip + 0xffadd]
0x400543:	mov	rdx, qword ptr [rbp - 0x78]
0x400547:	mov	ecx, 0x64
0x40054c:	sub	ecx, edx
0x40054e:	mov	edx, ecx
0x400550:	mov	esi, edx
0x400552:	mov	rcx, qword ptr [rbp - 0x80]
0x400556:	mov	rdx, qword ptr [rbp - 0x78]
0x40055a:	add	rcx, rdx
0x40055d:	mov	rdx, rax
0x400560:	mov	rdi, rcx
0x400563:	call	0x500028
<Block for 0x4005de, 16 bytes>
0x4005de:	nop	
0x4005df:	mov	rax, qword ptr [rbp - 8]
0x4005e3:	xor	rax, qword ptr fs:[0x28]
0x4005ec:	je	0x4005f3
<Block for 0x400568, 5 bytes>
0x400568:	test	rax, rax
0x40056b:	je	0x4005ae
<Block for 0x4005f3, 2 bytes>
0x4005f3:	leave	
0x4005f4:	ret	
<Block for 0x4005ee, 5 bytes>
0x4005ee:	call	0x500010
<Block for 0x4005ae, 12 bytes>
0x4005ae:	lea	rdi, [rip + 0x1ce]
0x4005b5:	call	0x500030
<Block for 0x40056d, 12 bytes>
0x40056d:	mov	rax, qword ptr [rbp - 0x80]
0x400571:	mov	rdi, rax
0x400574:	call	0x500018
<Block for 0x4005ba, 36 bytes>
0x4005ba:	mov	rdx, qword ptr [rbp - 0x80]
0x4005be:	mov	rax, qword ptr [rbp - 0x78]
0x4005c2:	add	rax, rdx
0x4005c5:	mov	byte ptr [rax], 0
0x4005c8:	mov	dword ptr [rip + 0x1a6], 1
0x4005d2:	mov	rax, qword ptr [rbp - 0x80]
0x4005d6:	mov	rdi, rax
0x4005d9:	call	0x4003fa
<Block for 0x400579, 11 bytes>
0x400579:	mov	qword ptr [rbp - 0x78], rax
0x40057d:	cmp	qword ptr [rbp - 0x78], 0
0x400582:	je	0x4005c8
<Block for 0x400584, 22 bytes>
0x400584:	mov	rax, qword ptr [rbp - 0x78]
0x400588:	lea	rdx, [rax - 1]
0x40058c:	mov	rax, qword ptr [rbp - 0x80]
0x400590:	add	rax, rdx
0x400593:	movzx	eax, byte ptr [rax]
0x400596:	cmp	al, 0xa
0x400598:	jne	0x4005c8
<Block for 0x40059a, 20 bytes>
0x40059a:	mov	rax, qword ptr [rbp - 0x78]
0x40059e:	lea	rdx, [rax - 1]
0x4005a2:	mov	rax, qword ptr [rbp - 0x80]
0x4005a6:	add	rax, rdx
0x4005a9:	mov	byte ptr [rax], 0
0x4005ac:	jmp	0x4005c8
