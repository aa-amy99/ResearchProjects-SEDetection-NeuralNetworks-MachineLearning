<Block for 0x4005f5, 41 bytes>
0x4005f5:	endbr64	
0x4005f9:	push	rbp
0x4005fa:	mov	rbp, rsp
0x4005fd:	sub	rsp, 0x30
0x400601:	mov	qword ptr [rbp - 0x28], rdi
0x400605:	mov	rax, qword ptr fs:[0x28]
0x40060e:	mov	qword ptr [rbp - 8], rax
0x400612:	xor	eax, eax
0x400614:	mov	eax, dword ptr [rip + 0x162]
0x40061a:	test	eax, eax
0x40061c:	je	0x400669
<Block for 0x400669, 16 bytes>
0x400669:	nop	
0x40066a:	mov	rax, qword ptr [rbp - 8]
0x40066e:	xor	rax, qword ptr fs:[0x28]
0x400677:	je	0x40067e
<Block for 0x40061e, 28 bytes>
0x40061e:	lea	rdx, [rbp - 0x14]
0x400622:	mov	rax, qword ptr [rbp - 0x28]
0x400626:	lea	rsi, [rip + 0x153]
0x40062d:	mov	rdi, rax
0x400630:	mov	eax, 0
0x400635:	call	0x500000
<Block for 0x40067e, 2 bytes>
0x40067e:	leave	
0x40067f:	ret	
<Block for 0x400679, 5 bytes>
0x400679:	call	0x500010
<Block for 0x40063a, 5 bytes>
0x40063a:	cmp	eax, 1
0x40063d:	jne	0x400669
<Block for 0x40063f, 16 bytes>
0x40063f:	mov	dword ptr [rbp - 0xc], 0
0x400646:	mov	dword ptr [rbp - 0x10], 0
0x40064d:	jmp	0x400657
<Block for 0x400657, 8 bytes>
0x400657:	mov	eax, dword ptr [rbp - 0x14]
0x40065a:	cmp	dword ptr [rbp - 0x10], eax
0x40065d:	jl	0x40064f
<Block for 0x40064f, 16 bytes>
0x40064f:	add	dword ptr [rbp - 0xc], 1
0x400653:	add	dword ptr [rbp - 0x10], 1
0x400657:	mov	eax, dword ptr [rbp - 0x14]
0x40065a:	cmp	dword ptr [rbp - 0x10], eax
0x40065d:	jl	0x40064f
<Block for 0x40065f, 10 bytes>
0x40065f:	mov	eax, dword ptr [rbp - 0xc]
0x400662:	mov	edi, eax
0x400664:	call	0x500008
