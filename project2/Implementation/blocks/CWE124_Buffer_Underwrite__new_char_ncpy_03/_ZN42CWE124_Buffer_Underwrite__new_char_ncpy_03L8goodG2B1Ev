<Block for 0x4000be, 45 bytes>
0x4000be:	endbr64	
0x4000c2:	push	rbp
0x4000c3:	mov	rbp, rsp
0x4000c6:	add	rsp, -0x80
0x4000ca:	mov	rax, qword ptr fs:[0x28]
0x4000d3:	mov	qword ptr [rbp - 8], rax
0x4000d7:	xor	eax, eax
0x4000d9:	mov	qword ptr [rbp - 0x80], 0
0x4000e1:	mov	edi, 0x64
0x4000e6:	call	0x500000
<Block for 0x4000eb, 26 bytes>
0x4000eb:	mov	qword ptr [rbp - 0x78], rax
0x4000ef:	mov	rax, qword ptr [rbp - 0x78]
0x4000f3:	mov	edx, 0x63
0x4000f8:	mov	esi, 0x41
0x4000fd:	mov	rdi, rax
0x400100:	call	0x500008
<Block for 0x400105, 41 bytes>
0x400105:	mov	rax, qword ptr [rbp - 0x78]
0x400109:	add	rax, 0x63
0x40010d:	mov	byte ptr [rax], 0
0x400110:	mov	rax, qword ptr [rbp - 0x78]
0x400114:	mov	qword ptr [rbp - 0x80], rax
0x400118:	lea	rax, [rbp - 0x70]
0x40011c:	mov	edx, 0x63
0x400121:	mov	esi, 0x43
0x400126:	mov	rdi, rax
0x400129:	call	0x500008
<Block for 0x40012e, 28 bytes>
0x40012e:	mov	byte ptr [rbp - 0xd], 0
0x400132:	lea	rcx, [rbp - 0x70]
0x400136:	mov	rax, qword ptr [rbp - 0x80]
0x40013a:	mov	edx, 0x63
0x40013f:	mov	rsi, rcx
0x400142:	mov	rdi, rax
0x400145:	call	0x500010
<Block for 0x40014a, 23 bytes>
0x40014a:	mov	rax, qword ptr [rbp - 0x80]
0x40014e:	add	rax, 0x63
0x400152:	mov	byte ptr [rax], 0
0x400155:	mov	rax, qword ptr [rbp - 0x80]
0x400159:	mov	rdi, rax
0x40015c:	call	0x500018
<Block for 0x400161, 16 bytes>
0x400161:	nop	
0x400162:	mov	rax, qword ptr [rbp - 8]
0x400166:	xor	rax, qword ptr fs:[0x28]
0x40016f:	je	0x400176
<Block for 0x400176, 2 bytes>
0x400176:	leave	
0x400177:	ret	
<Block for 0x400171, 5 bytes>
0x400171:	call	0x500020
