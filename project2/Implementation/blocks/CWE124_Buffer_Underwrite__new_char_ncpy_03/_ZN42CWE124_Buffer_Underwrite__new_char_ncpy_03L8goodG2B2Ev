<Block for 0x400178, 45 bytes>
0x400178:	endbr64	
0x40017c:	push	rbp
0x40017d:	mov	rbp, rsp
0x400180:	add	rsp, -0x80
0x400184:	mov	rax, qword ptr fs:[0x28]
0x40018d:	mov	qword ptr [rbp - 8], rax
0x400191:	xor	eax, eax
0x400193:	mov	qword ptr [rbp - 0x80], 0
0x40019b:	mov	edi, 0x64
0x4001a0:	call	0x500000
<Block for 0x4001a5, 26 bytes>
0x4001a5:	mov	qword ptr [rbp - 0x78], rax
0x4001a9:	mov	rax, qword ptr [rbp - 0x78]
0x4001ad:	mov	edx, 0x63
0x4001b2:	mov	esi, 0x41
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500008
<Block for 0x4001bf, 41 bytes>
0x4001bf:	mov	rax, qword ptr [rbp - 0x78]
0x4001c3:	add	rax, 0x63
0x4001c7:	mov	byte ptr [rax], 0
0x4001ca:	mov	rax, qword ptr [rbp - 0x78]
0x4001ce:	mov	qword ptr [rbp - 0x80], rax
0x4001d2:	lea	rax, [rbp - 0x70]
0x4001d6:	mov	edx, 0x63
0x4001db:	mov	esi, 0x43
0x4001e0:	mov	rdi, rax
0x4001e3:	call	0x500008
<Block for 0x4001e8, 28 bytes>
0x4001e8:	mov	byte ptr [rbp - 0xd], 0
0x4001ec:	lea	rcx, [rbp - 0x70]
0x4001f0:	mov	rax, qword ptr [rbp - 0x80]
0x4001f4:	mov	edx, 0x63
0x4001f9:	mov	rsi, rcx
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500010
<Block for 0x400204, 23 bytes>
0x400204:	mov	rax, qword ptr [rbp - 0x80]
0x400208:	add	rax, 0x63
0x40020c:	mov	byte ptr [rax], 0
0x40020f:	mov	rax, qword ptr [rbp - 0x80]
0x400213:	mov	rdi, rax
0x400216:	call	0x500018
<Block for 0x40021b, 16 bytes>
0x40021b:	nop	
0x40021c:	mov	rax, qword ptr [rbp - 8]
0x400220:	xor	rax, qword ptr fs:[0x28]
0x400229:	je	0x400230
<Block for 0x400230, 2 bytes>
0x400230:	leave	
0x400231:	ret	
<Block for 0x40022b, 5 bytes>
0x40022b:	call	0x500020
