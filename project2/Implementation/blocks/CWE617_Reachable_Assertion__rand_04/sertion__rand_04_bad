<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400014:	mov	eax, 1
0x400019:	test	eax, eax
0x40001b:	je	0x400066
<Block for 0x400066, 6 bytes>
0x400066:	cmp	dword ptr [rbp - 0x14], 5
0x40006a:	jg	0x40008b
<Block for 0x40001d, 5 bytes>
0x40001d:	call	0x500000
<Block for 0x40006c, 31 bytes>
0x40006c:	lea	rcx, [rip + 0x14d]
0x400073:	mov	edx, 0x2b
0x400078:	lea	rsi, [rip + 0xe9]
0x40007f:	lea	rdi, [rip + 0x108]
0x400086:	call	0x500008
<Block for 0x40008b, 8 bytes>
0x40008b:	nop	
0x40008c:	add	rsp, 0x18
0x400090:	pop	rbx
0x400091:	pop	rbp
0x400092:	ret	
<Block for 0x400022, 7 bytes>
0x400022:	and	eax, 1
0x400025:	test	eax, eax
0x400027:	je	0x400046
<Block for 0x400046, 5 bytes>
0x400046:	call	0x500000
<Block for 0x400029, 5 bytes>
0x400029:	call	0x500000
<Block for 0x40004b, 10 bytes>
0x40004b:	shl	eax, 0x1e
0x40004e:	mov	ebx, eax
0x400050:	call	0x500000
<Block for 0x40002e, 10 bytes>
0x40002e:	shl	eax, 0x1e
0x400031:	mov	ebx, eax
0x400033:	call	0x500000
<Block for 0x400055, 10 bytes>
0x400055:	shl	eax, 0xf
0x400058:	xor	ebx, eax
0x40005a:	call	0x500000
<Block for 0x400038, 10 bytes>
0x400038:	shl	eax, 0xf
0x40003b:	xor	ebx, eax
0x40003d:	call	0x500000
<Block for 0x40005f, 13 bytes>
0x40005f:	xor	eax, ebx
0x400061:	not	eax
0x400063:	mov	dword ptr [rbp - 0x14], eax
0x400066:	cmp	dword ptr [rbp - 0x14], 5
0x40006a:	jg	0x40008b
<Block for 0x400042, 4 bytes>
0x400042:	xor	eax, ebx
0x400044:	jmp	0x400063
<Block for 0x400063, 9 bytes>
0x400063:	mov	dword ptr [rbp - 0x14], eax
0x400066:	cmp	dword ptr [rbp - 0x14], 5
0x40006a:	jg	0x40008b
