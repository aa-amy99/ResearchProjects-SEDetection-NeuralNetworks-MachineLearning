<Block for 0x4000e7, 60 bytes>
0x4000e7:	endbr64	
0x4000eb:	push	rbp
0x4000ec:	mov	rbp, rsp
0x4000ef:	sub	rsp, 0x90
0x4000f6:	mov	rax, qword ptr fs:[0x28]
0x4000ff:	mov	qword ptr [rbp - 8], rax
0x400103:	xor	eax, eax
0x400105:	mov	qword ptr [rbp - 0x80], 0
0x40010d:	mov	dword ptr [rip + 0x1b9], 0
0x400117:	mov	rax, qword ptr [rbp - 0x80]
0x40011b:	mov	rdi, rax
0x40011e:	call	0x500030
<Block for 0x400123, 26 bytes>
0x400123:	mov	qword ptr [rbp - 0x80], rax
0x400127:	lea	rax, [rbp - 0x70]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x43
0x400135:	mov	rdi, rax
0x400138:	call	0x500008
<Block for 0x40013d, 16 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], 0
0x400141:	lea	rax, [rbp - 0x70]
0x400145:	mov	rdi, rax
0x400148:	call	0x500010
<Block for 0x40014d, 28 bytes>
0x40014d:	mov	qword ptr [rbp - 0x78], rax
0x400151:	mov	qword ptr [rbp - 0x88], 0
0x40015c:	mov	rax, qword ptr [rbp - 0x88]
0x400163:	cmp	rax, qword ptr [rbp - 0x78]
0x400167:	jae	0x400194
<Block for 0x400169, 43 bytes>
0x400169:	mov	rdx, qword ptr [rbp - 0x80]
0x40016d:	mov	rax, qword ptr [rbp - 0x88]
0x400174:	add	rax, rdx
0x400177:	movzx	eax, byte ptr [rax]
0x40017a:	lea	rcx, [rbp - 0x70]
0x40017e:	mov	rdx, qword ptr [rbp - 0x88]
0x400185:	add	rdx, rcx
0x400188:	mov	byte ptr [rdx], al
0x40018a:	add	qword ptr [rbp - 0x88], 1
0x400192:	jmp	0x40015c
<Block for 0x400194, 16 bytes>
0x400194:	mov	byte ptr [rbp - 0xd], 0
0x400198:	lea	rax, [rbp - 0x70]
0x40019c:	mov	rdi, rax
0x40019f:	call	0x500018
<Block for 0x40015c, 13 bytes>
0x40015c:	mov	rax, qword ptr [rbp - 0x88]
0x400163:	cmp	rax, qword ptr [rbp - 0x78]
0x400167:	jae	0x400194
<Block for 0x4001a4, 7 bytes>
0x4001a4:	cmp	qword ptr [rbp - 0x80], 0
0x4001a9:	je	0x4001b7
<Block for 0x4001b7, 16 bytes>
0x4001b7:	nop	
0x4001b8:	mov	rax, qword ptr [rbp - 8]
0x4001bc:	xor	rax, qword ptr fs:[0x28]
0x4001c5:	je	0x4001cc
<Block for 0x4001ab, 12 bytes>
0x4001ab:	mov	rax, qword ptr [rbp - 0x80]
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500020
<Block for 0x4001cc, 2 bytes>
0x4001cc:	leave	
0x4001cd:	ret	
<Block for 0x4001c7, 5 bytes>
0x4001c7:	call	0x500028
