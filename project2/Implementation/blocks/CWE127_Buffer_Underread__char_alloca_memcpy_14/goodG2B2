<Block for 0x400342, 85 bytes>
0x400342:	endbr64	
0x400346:	push	rbp
0x400347:	mov	rbp, rsp
0x40034a:	push	rbx
0x40034b:	sub	rsp, 0x88
0x400352:	mov	rax, qword ptr fs:[0x28]
0x40035b:	mov	qword ptr [rbp - 0x18], rax
0x40035f:	xor	eax, eax
0x400361:	mov	eax, 0x10
0x400366:	sub	rax, 1
0x40036a:	add	rax, 0x6c
0x40036e:	mov	esi, 0x10
0x400373:	mov	edx, 0
0x400378:	div	rsi
0x40037b:	imul	rax, rax, 0x10
0x40037f:	mov	rdx, rax
0x400382:	and	rdx, 0xfffffffffffff000
0x400389:	mov	rbx, rsp
0x40038c:	sub	rbx, rdx
0x40038f:	mov	rdx, rbx
0x400392:	cmp	rsp, rdx
0x400395:	je	0x4003a9
<Block for 0x4003a9, 26 bytes>
0x4003a9:	mov	rdx, rax
0x4003ac:	and	edx, 0xfff
0x4003b2:	sub	rsp, rdx
0x4003b5:	mov	rdx, rax
0x4003b8:	and	edx, 0xfff
0x4003be:	test	rdx, rdx
0x4003c1:	je	0x4003d3
<Block for 0x400397, 18 bytes>
0x400397:	sub	rsp, 0x1000
0x40039e:	or	qword ptr [rsp + 0xff8], 0
0x4003a7:	jmp	0x400392
<Block for 0x4003d3, 47 bytes>
0x4003d3:	mov	rax, rsp
0x4003d6:	add	rax, 0xf
0x4003da:	shr	rax, 4
0x4003de:	shl	rax, 4
0x4003e2:	mov	qword ptr [rbp - 0x88], rax
0x4003e9:	mov	rax, qword ptr [rbp - 0x88]
0x4003f0:	mov	edx, 0x63
0x4003f5:	mov	esi, 0x41
0x4003fa:	mov	rdi, rax
0x4003fd:	call	0x500000
<Block for 0x4003c3, 63 bytes>
0x4003c3:	and	eax, 0xfff
0x4003c8:	sub	rax, 8
0x4003cc:	add	rax, rsp
0x4003cf:	or	qword ptr [rax], 0
0x4003d3:	mov	rax, rsp
0x4003d6:	add	rax, 0xf
0x4003da:	shr	rax, 4
0x4003de:	shl	rax, 4
0x4003e2:	mov	qword ptr [rbp - 0x88], rax
0x4003e9:	mov	rax, qword ptr [rbp - 0x88]
0x4003f0:	mov	edx, 0x63
0x4003f5:	mov	esi, 0x41
0x4003fa:	mov	rdi, rax
0x4003fd:	call	0x500000
<Block for 0x400392, 5 bytes>
0x400392:	cmp	rsp, rdx
0x400395:	je	0x4003a9
<Block for 0x400402, 25 bytes>
0x400402:	mov	rax, qword ptr [rbp - 0x88]
0x400409:	add	rax, 0x63
0x40040d:	mov	byte ptr [rax], 0
0x400410:	mov	eax, dword ptr [rip + 0xffbf2]
0x400416:	cmp	eax, 5
0x400419:	jne	0x400429
<Block for 0x40041b, 36 bytes>
0x40041b:	mov	rax, qword ptr [rbp - 0x88]
0x400422:	mov	qword ptr [rbp - 0x90], rax
0x400429:	lea	rax, [rbp - 0x80]
0x40042d:	mov	edx, 0x63
0x400432:	mov	esi, 0x43
0x400437:	mov	rdi, rax
0x40043a:	call	0x500000
<Block for 0x400429, 22 bytes>
0x400429:	lea	rax, [rbp - 0x80]
0x40042d:	mov	edx, 0x63
0x400432:	mov	esi, 0x43
0x400437:	mov	rdi, rax
0x40043a:	call	0x500000
<Block for 0x40043f, 128 bytes>
0x40043f:	mov	byte ptr [rbp - 0x1d], 0
0x400443:	mov	rax, qword ptr [rbp - 0x90]
0x40044a:	mov	rcx, qword ptr [rax]
0x40044d:	mov	rbx, qword ptr [rax + 8]
0x400451:	mov	qword ptr [rbp - 0x80], rcx
0x400455:	mov	qword ptr [rbp - 0x78], rbx
0x400459:	mov	rcx, qword ptr [rax + 0x10]
0x40045d:	mov	rbx, qword ptr [rax + 0x18]
0x400461:	mov	qword ptr [rbp - 0x70], rcx
0x400465:	mov	qword ptr [rbp - 0x68], rbx
0x400469:	mov	rcx, qword ptr [rax + 0x20]
0x40046d:	mov	rbx, qword ptr [rax + 0x28]
0x400471:	mov	qword ptr [rbp - 0x60], rcx
0x400475:	mov	qword ptr [rbp - 0x58], rbx
0x400479:	mov	rcx, qword ptr [rax + 0x30]
0x40047d:	mov	rbx, qword ptr [rax + 0x38]
0x400481:	mov	qword ptr [rbp - 0x50], rcx
0x400485:	mov	qword ptr [rbp - 0x48], rbx
0x400489:	mov	rcx, qword ptr [rax + 0x40]
0x40048d:	mov	rbx, qword ptr [rax + 0x48]
0x400491:	mov	qword ptr [rbp - 0x40], rcx
0x400495:	mov	qword ptr [rbp - 0x38], rbx
0x400499:	mov	rcx, qword ptr [rax + 0x50]
0x40049d:	mov	rbx, qword ptr [rax + 0x58]
0x4004a1:	mov	qword ptr [rbp - 0x30], rcx
0x4004a5:	mov	qword ptr [rbp - 0x28], rbx
0x4004a9:	mov	eax, dword ptr [rax + 0x60]
0x4004ac:	mov	dword ptr [rbp - 0x20], eax
0x4004af:	mov	byte ptr [rbp - 0x1d], 0
0x4004b3:	lea	rax, [rbp - 0x80]
0x4004b7:	mov	rdi, rax
0x4004ba:	call	0x500010
<Block for 0x4004bf, 16 bytes>
0x4004bf:	nop	
0x4004c0:	mov	rax, qword ptr [rbp - 0x18]
0x4004c4:	xor	rax, qword ptr fs:[0x28]
0x4004cd:	je	0x4004d4
<Block for 0x4004d4, 6 bytes>
0x4004d4:	mov	rbx, qword ptr [rbp - 8]
0x4004d8:	leave	
0x4004d9:	ret	
<Block for 0x4004cf, 5 bytes>
0x4004cf:	call	0x500018
