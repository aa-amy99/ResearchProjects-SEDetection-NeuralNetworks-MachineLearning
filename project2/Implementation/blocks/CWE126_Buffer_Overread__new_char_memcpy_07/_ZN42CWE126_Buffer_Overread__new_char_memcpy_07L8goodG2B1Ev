<Block for 0x4000d3, 46 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	add	rsp, -0x80
0x4000df:	mov	rax, qword ptr fs:[0x28]
0x4000e8:	mov	qword ptr [rbp - 8], rax
0x4000ec:	xor	eax, eax
0x4000ee:	mov	qword ptr [rbp - 0x78], 0
0x4000f6:	mov	eax, dword ptr [rip + 0x1a0]
0x4000fc:	cmp	eax, 5
0x4000ff:	je	0x40010f
<Block for 0x40010f, 10 bytes>
0x40010f:	mov	edi, 0x64
0x400114:	call	0x500000
<Block for 0x400101, 12 bytes>
0x400101:	lea	rdi, [rip + 0x198]
0x400108:	call	0x500020
<Block for 0x400119, 26 bytes>
0x400119:	mov	qword ptr [rbp - 0x78], rax
0x40011d:	mov	rax, qword ptr [rbp - 0x78]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x41
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500008
<Block for 0x40010d, 2 bytes>
0x40010d:	jmp	0x40013e
<Block for 0x400133, 33 bytes>
0x400133:	mov	rax, qword ptr [rbp - 0x78]
0x400137:	add	rax, 0x63
0x40013b:	mov	byte ptr [rax], 0
0x40013e:	lea	rax, [rbp - 0x70]
0x400142:	mov	edx, 0x63
0x400147:	mov	esi, 0x43
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500008
<Block for 0x40013e, 22 bytes>
0x40013e:	lea	rax, [rbp - 0x70]
0x400142:	mov	edx, 0x63
0x400147:	mov	esi, 0x43
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500008
<Block for 0x400154, 16 bytes>
0x400154:	mov	byte ptr [rbp - 0xd], 0
0x400158:	lea	rax, [rbp - 0x70]
0x40015c:	mov	rdi, rax
0x40015f:	call	0x500010
<Block for 0x400164, 22 bytes>
0x400164:	mov	rdx, rax
0x400167:	mov	rcx, qword ptr [rbp - 0x78]
0x40016b:	lea	rax, [rbp - 0x70]
0x40016f:	mov	rsi, rcx
0x400172:	mov	rdi, rax
0x400175:	call	0x500018
<Block for 0x40017a, 16 bytes>
0x40017a:	mov	byte ptr [rbp - 0xd], 0
0x40017e:	lea	rax, [rbp - 0x70]
0x400182:	mov	rdi, rax
0x400185:	call	0x500020
<Block for 0x40018a, 7 bytes>
0x40018a:	cmp	qword ptr [rbp - 0x78], 0
0x40018f:	je	0x40019d
<Block for 0x40019d, 16 bytes>
0x40019d:	nop	
0x40019e:	mov	rax, qword ptr [rbp - 8]
0x4001a2:	xor	rax, qword ptr fs:[0x28]
0x4001ab:	je	0x4001b2
<Block for 0x400191, 12 bytes>
0x400191:	mov	rax, qword ptr [rbp - 0x78]
0x400195:	mov	rdi, rax
0x400198:	call	0x500028
<Block for 0x4001b2, 2 bytes>
0x4001b2:	leave	
0x4001b3:	ret	
<Block for 0x4001ad, 5 bytes>
0x4001ad:	call	0x500030
