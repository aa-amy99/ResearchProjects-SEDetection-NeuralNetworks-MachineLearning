<Block for 0x400066, 82 bytes>
0x400066:	endbr64	
0x40006a:	push	rbp
0x40006b:	mov	rbp, rsp
0x40006e:	sub	rsp, 0x30
0x400072:	mov	rax, qword ptr fs:[0x28]
0x40007b:	mov	qword ptr [rbp - 8], rax
0x40007f:	xor	eax, eax
0x400081:	lea	rax, [rbp - 0x20]
0x400085:	mov	qword ptr [rbp - 0x18], rax
0x400089:	mov	qword ptr [rbp - 0x20], 0
0x400091:	mov	dword ptr [rbp - 0x24], 8
0x400098:	lea	rax, [rbp - 0x24]
0x40009c:	mov	qword ptr [rbp - 0x20], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0x18]
0x4000a4:	mov	rax, qword ptr [rax]
0x4000a7:	mov	qword ptr [rbp - 0x10], rax
0x4000ab:	mov	rax, qword ptr [rbp - 0x10]
0x4000af:	mov	eax, dword ptr [rax]
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500000
<Block for 0x4000b8, 16 bytes>
0x4000b8:	nop	
0x4000b9:	mov	rax, qword ptr [rbp - 8]
0x4000bd:	xor	rax, qword ptr fs:[0x28]
0x4000c6:	je	0x4000cd
<Block for 0x4000cd, 2 bytes>
0x4000cd:	leave	
0x4000ce:	ret	
<Block for 0x4000c8, 5 bytes>
0x4000c8:	call	0x500008
