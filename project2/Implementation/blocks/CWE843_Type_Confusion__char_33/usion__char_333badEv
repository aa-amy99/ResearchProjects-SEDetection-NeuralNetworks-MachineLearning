<Block for 0x400000, 79 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	qword ptr [rbp - 0x20], 0
0x40002b:	mov	byte ptr [rbp - 0x21], 0x61
0x40002f:	lea	rax, [rbp - 0x21]
0x400033:	mov	qword ptr [rbp - 0x20], rax
0x400037:	mov	rax, qword ptr [rbp - 0x18]
0x40003b:	mov	rax, qword ptr [rax]
0x40003e:	mov	qword ptr [rbp - 0x10], rax
0x400042:	mov	rax, qword ptr [rbp - 0x10]
0x400046:	mov	eax, dword ptr [rax]
0x400048:	mov	edi, eax
0x40004a:	call	0x500000
<Block for 0x40004f, 16 bytes>
0x40004f:	nop	
0x400050:	mov	rax, qword ptr [rbp - 8]
0x400054:	xor	rax, qword ptr fs:[0x28]
0x40005d:	je	0x400064
<Block for 0x400064, 2 bytes>
0x400064:	leave	
0x400065:	ret	
<Block for 0x40005f, 5 bytes>
0x40005f:	call	0x500008
