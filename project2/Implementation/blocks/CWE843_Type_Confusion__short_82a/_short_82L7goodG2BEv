<Block for 0x400097, 61 bytes>
0x400097:	endbr64	
0x40009b:	push	rbp
0x40009c:	mov	rbp, rsp
0x40009f:	push	rbx
0x4000a0:	sub	rsp, 0x28
0x4000a4:	mov	rax, qword ptr fs:[0x28]
0x4000ad:	mov	qword ptr [rbp - 0x18], rax
0x4000b1:	xor	eax, eax
0x4000b3:	mov	qword ptr [rbp - 0x28], 0
0x4000bb:	mov	dword ptr [rbp - 0x2c], 8
0x4000c2:	lea	rax, [rbp - 0x2c]
0x4000c6:	mov	qword ptr [rbp - 0x28], rax
0x4000ca:	mov	edi, 8
0x4000cf:	call	0x500000
<Block for 0x4000d4, 11 bytes>
0x4000d4:	mov	rbx, rax
0x4000d7:	mov	rdi, rbx
0x4000da:	call	0x40018c
<Block for 0x4000df, 30 bytes>
0x4000df:	mov	qword ptr [rbp - 0x20], rbx
0x4000e3:	mov	rax, qword ptr [rbp - 0x20]
0x4000e7:	mov	rax, qword ptr [rax]
0x4000ea:	mov	rcx, qword ptr [rax]
0x4000ed:	mov	rdx, qword ptr [rbp - 0x28]
0x4000f1:	mov	rax, qword ptr [rbp - 0x20]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	rcx
<Block for 0x4000fd, 9 bytes>
0x4000fd:	mov	rax, qword ptr [rbp - 0x20]
0x400101:	test	rax, rax
0x400104:	je	0x400113
<Block for 0x400113, 16 bytes>
0x400113:	nop	
0x400114:	mov	rax, qword ptr [rbp - 0x18]
0x400118:	xor	rax, qword ptr fs:[0x28]
0x400121:	je	0x400128
<Block for 0x400106, 13 bytes>
0x400106:	mov	esi, 8
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500008
<Block for 0x400128, 7 bytes>
0x400128:	add	rsp, 0x28
0x40012c:	pop	rbx
0x40012d:	pop	rbp
0x40012e:	ret	
<Block for 0x400123, 5 bytes>
0x400123:	call	0x500010
