<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	eax, 0
0x400011:	call	0x500000
<Block for 0x400016, 4 bytes>
0x400016:	test	eax, eax
0x400018:	je	0x400065
<Block for 0x400065, 3 bytes>
0x400065:	nop	
0x400066:	leave	
0x400067:	ret	
<Block for 0x40001a, 18 bytes>
0x40001a:	mov	qword ptr [rbp - 8], 0
0x400022:	mov	edi, 4
0x400027:	call	0x500008
<Block for 0x40002c, 27 bytes>
0x40002c:	mov	qword ptr [rbp - 8], rax
0x400030:	mov	rax, qword ptr [rbp - 8]
0x400034:	mov	dword ptr [rax], 5
0x40003a:	mov	rax, qword ptr [rbp - 8]
0x40003e:	mov	eax, dword ptr [rax]
0x400040:	mov	edi, eax
0x400042:	call	0x500010
<Block for 0x400047, 7 bytes>
0x400047:	cmp	qword ptr [rbp - 8], 0
0x40004c:	je	0x400058
<Block for 0x400058, 13 bytes>
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	eax, dword ptr [rax]
0x40005e:	mov	edi, eax
0x400060:	call	0x500010
<Block for 0x40004e, 23 bytes>
0x40004e:	mov	rax, qword ptr [rbp - 8]
0x400052:	mov	dword ptr [rax], 0xa
0x400058:	mov	rax, qword ptr [rbp - 8]
0x40005c:	mov	eax, dword ptr [rax]
0x40005e:	mov	edi, eax
0x400060:	call	0x500010
