<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x400312
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x60], 0
0x400030:	mov	edi, 0x64
0x400035:	call	0x500000
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x58]
0x400042:	mov	edx, 0x63
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 42 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x58]
0x400058:	add	rax, 0x63
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	mov	rax, qword ptr [rbp - 0x58]
0x400063:	sub	rax, 8
0x400067:	mov	qword ptr [rbp - 0x60], rax
0x40006b:	lea	rdx, [rbp - 0x60]
0x40006f:	lea	rax, [rbp - 0x50]
0x400073:	mov	rsi, rdx
0x400076:	mov	rdi, rax
0x400079:	call	0x40040a
<Block for 0x40007e, 19 bytes>
0x40007e:	lea	rdx, [rbp - 0x60]
0x400082:	lea	rax, [rbp - 0x50]
0x400086:	mov	rsi, rdx
0x400089:	mov	rdi, rax
0x40008c:	call	0x40040a
<Block for 0x400091, 19 bytes>
0x400091:	lea	rdx, [rbp - 0x60]
0x400095:	lea	rax, [rbp - 0x50]
0x400099:	mov	rsi, rdx
0x40009c:	mov	rdi, rax
0x40009f:	call	0x40040a
<Block for 0x4000a4, 19 bytes>
0x4000a4:	lea	rdx, [rbp - 0x50]
0x4000a8:	lea	rax, [rbp - 0x30]
0x4000ac:	mov	rsi, rdx
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x400444
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rax, [rbp - 0x30]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500010
<Block for 0x4000c3, 12 bytes>
0x4000c3:	lea	rax, [rbp - 0x30]
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x400332
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rax, [rbp - 0x50]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x400332
<Block for 0x4000db, 16 bytes>
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 0x18]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x400125
<Block for 0x400125, 7 bytes>
0x400125:	add	rsp, 0x58
0x400129:	pop	rbx
0x40012a:	pop	rbp
0x40012b:	ret	
<Block for 0x4000eb, 2 bytes>
0x4000eb:	jmp	0x400120
<Block for 0x400120, 5 bytes>
0x400120:	call	0x500020
