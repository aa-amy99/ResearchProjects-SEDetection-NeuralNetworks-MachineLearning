<Block for 0x4001ca, 45 bytes>
0x4001ca:	endbr64	
0x4001ce:	push	rbp
0x4001cf:	mov	rbp, rsp
0x4001d2:	add	rsp, -0x80
0x4001d6:	mov	rax, qword ptr fs:[0x28]
0x4001df:	mov	qword ptr [rbp - 8], rax
0x4001e3:	xor	eax, eax
0x4001e5:	mov	qword ptr [rbp - 0x80], 0
0x4001ed:	mov	eax, 0
0x4001f2:	call	0x500000
<Block for 0x4001f7, 4 bytes>
0x4001f7:	test	eax, eax
0x4001f9:	je	0x400243
<Block for 0x400243, 22 bytes>
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	edx, 0x63
0x40024c:	mov	esi, 0x43
0x400251:	mov	rdi, rax
0x400254:	call	0x500018
<Block for 0x4001fb, 10 bytes>
0x4001fb:	mov	edi, 0x64
0x400200:	call	0x500008
<Block for 0x400259, 16 bytes>
0x400259:	mov	byte ptr [rbp - 0xd], 0
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	rdi, rax
0x400264:	call	0x500020
<Block for 0x400205, 11 bytes>
0x400205:	mov	qword ptr [rbp - 0x78], rax
0x400209:	cmp	qword ptr [rbp - 0x78], 0
0x40020e:	jne	0x40021a
<Block for 0x400269, 22 bytes>
0x400269:	mov	rdx, rax
0x40026c:	mov	rcx, qword ptr [rbp - 0x80]
0x400270:	lea	rax, [rbp - 0x70]
0x400274:	mov	rsi, rcx
0x400277:	mov	rdi, rax
0x40027a:	call	0x500028
<Block for 0x400210, 10 bytes>
0x400210:	mov	edi, 0xffffffff
0x400215:	call	0x500010
<Block for 0x40021a, 22 bytes>
0x40021a:	mov	rax, qword ptr [rbp - 0x78]
0x40021e:	mov	edx, 0x63
0x400223:	mov	esi, 0x41
0x400228:	mov	rdi, rax
0x40022b:	call	0x500018
<Block for 0x40027f, 16 bytes>
0x40027f:	mov	byte ptr [rbp - 0xd], 0
0x400283:	lea	rax, [rbp - 0x70]
0x400287:	mov	rdi, rax
0x40028a:	call	0x500030
<Block for 0x400230, 41 bytes>
0x400230:	mov	rax, qword ptr [rbp - 0x78]
0x400234:	add	rax, 0x63
0x400238:	mov	byte ptr [rax], 0
0x40023b:	mov	rax, qword ptr [rbp - 0x78]
0x40023f:	mov	qword ptr [rbp - 0x80], rax
0x400243:	lea	rax, [rbp - 0x70]
0x400247:	mov	edx, 0x63
0x40024c:	mov	esi, 0x43
0x400251:	mov	rdi, rax
0x400254:	call	0x500018
<Block for 0x40028f, 16 bytes>
0x40028f:	nop	
0x400290:	mov	rax, qword ptr [rbp - 8]
0x400294:	xor	rax, qword ptr fs:[0x28]
0x40029d:	je	0x4002a4
<Block for 0x4002a4, 2 bytes>
0x4002a4:	leave	
0x4002a5:	ret	
<Block for 0x40029f, 5 bytes>
0x40029f:	call	0x500038
