<Block for 0x400180, 28 bytes>
0x400180:	endbr64	
0x400184:	push	rbp
0x400185:	mov	rbp, rsp
0x400188:	push	r13
0x40018a:	push	r12
0x40018c:	push	rbx
0x40018d:	sub	rsp, 0x18
0x400191:	mov	eax, dword ptr [rip + 0xffe69]
0x400197:	cmp	eax, 5
0x40019a:	je	0x4001ad
<Block for 0x4001ad, 5 bytes>
0x4001ad:	call	0x500008
<Block for 0x40019c, 12 bytes>
0x40019c:	lea	rdi, [rip + 0x324]
0x4001a3:	call	0x500060
<Block for 0x4001b2, 12 bytes>
0x4001b2:	and	eax, 1
0x4001b5:	test	eax, eax
0x4001b7:	sete	al
0x4001ba:	test	al, al
0x4001bc:	je	0x4001f3
<Block for 0x4001a8, 5 bytes>
0x4001a8:	jmp	0x400302
<Block for 0x4001f3, 5 bytes>
0x4001f3:	call	0x500008
<Block for 0x4001be, 10 bytes>
0x4001be:	mov	edi, 0x10
0x4001c3:	call	0x500010
<Block for 0x400302, 11 bytes>
0x400302:	add	rsp, 0x18
0x400306:	pop	rbx
0x400307:	pop	r12
0x400309:	pop	r13
0x40030b:	pop	rbp
0x40030c:	ret	
<Block for 0x4001f8, 12 bytes>
0x4001f8:	and	eax, 1
0x4001fb:	test	eax, eax
0x4001fd:	sete	al
0x400200:	test	al, al
0x400202:	je	0x400239
<Block for 0x4001c8, 18 bytes>
0x4001c8:	mov	rbx, rax
0x4001cb:	lea	rsi, [rip + 0x2d1]
0x4001d2:	mov	rdi, rbx
0x4001d5:	call	0x500018
<Block for 0x400239, 12 bytes>
0x400239:	lea	rdi, [rip + 0x26d]
0x400240:	call	0x500060
<Block for 0x400204, 10 bytes>
0x400204:	mov	edi, 0x10
0x400209:	call	0x500010
<Block for 0x4001da, 25 bytes>
0x4001da:	mov	rax, qword ptr [rip + 0xffe47]
0x4001e1:	mov	rdx, rax
0x4001e4:	lea	rsi, [rip + 0xffe45]
0x4001eb:	mov	rdi, rbx
0x4001ee:	call	0x500038
<Block for 0x400245, 5 bytes>
0x400245:	jmp	0x400302
<Block for 0x40020e, 18 bytes>
0x40020e:	mov	rbx, rax
0x400211:	lea	rsi, [rip + 0x290]
0x400218:	mov	rdi, rbx
0x40021b:	call	0x500040
<Block for 0x400220, 25 bytes>
0x400220:	mov	rax, qword ptr [rip + 0xffe29]
0x400227:	mov	rdx, rax
0x40022a:	lea	rsi, [rip + 0xffe27]
0x400231:	mov	rdi, rbx
0x400234:	call	0x500038
