<Block for 0x400055, 21 bytes>
0x400055:	endbr64	
0x400059:	push	rbp
0x40005a:	mov	rbp, rsp
0x40005d:	sub	rsp, 0x10
0x400061:	mov	dword ptr [rbp - 0xc], 0
0x400068:	jmp	0x4000cd
<Block for 0x4000cd, 6 bytes>
0x4000cd:	cmp	dword ptr [rbp - 0xc], 0
0x4000d1:	jle	0x40006a
<Block for 0x40006a, 5 bytes>
0x40006a:	call	0x500010
<Block for 0x4000d3, 4 bytes>
0x4000d3:	nop	
0x4000d4:	nop	
0x4000d5:	leave	
0x4000d6:	ret	
<Block for 0x40006f, 28 bytes>
0x40006f:	mov	dword ptr [rax], 0
0x400075:	mov	edx, 0
0x40007a:	mov	esi, 0
0x40007f:	lea	rdi, [rip + 0x66]
0x400086:	call	0x500000
<Block for 0x40008b, 9 bytes>
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	call	0x500010
<Block for 0x400094, 7 bytes>
0x400094:	mov	eax, dword ptr [rax]
0x400096:	cmp	eax, 0x22
0x400099:	jne	0x4000b1
<Block for 0x40009b, 12 bytes>
0x40009b:	lea	rdi, [rip + 0x5b]
0x4000a2:	call	0x500018
<Block for 0x4000b1, 24 bytes>
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	rsi, rax
0x4000b8:	lea	rdi, [rip + 0x39]
0x4000bf:	mov	eax, 0
0x4000c4:	call	0x500008
<Block for 0x4000a7, 10 bytes>
0x4000a7:	mov	edi, 1
0x4000ac:	call	0x500020
<Block for 0x4000c9, 10 bytes>
0x4000c9:	add	dword ptr [rbp - 0xc], 1
0x4000cd:	cmp	dword ptr [rbp - 0xc], 0
0x4000d1:	jle	0x40006a
