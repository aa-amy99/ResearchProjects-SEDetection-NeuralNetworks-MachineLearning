<Block for 0x4000b2, 25 bytes>
0x4000b2:	endbr64	
0x4000b6:	push	rbp
0x4000b7:	mov	rbp, rsp
0x4000ba:	sub	rsp, 0x10
0x4000be:	mov	qword ptr [rbp - 8], 0
0x4000c6:	call	0x500000
<Block for 0x4000cb, 9 bytes>
0x4000cb:	test	eax, eax
0x4000cd:	setne	al
0x4000d0:	test	al, al
0x4000d2:	je	0x400118
<Block for 0x400118, 10 bytes>
0x400118:	mov	edi, 0x64
0x40011d:	call	0x500008
<Block for 0x4000d4, 10 bytes>
0x4000d4:	mov	edi, 0x64
0x4000d9:	call	0x500008
<Block for 0x400122, 26 bytes>
0x400122:	mov	qword ptr [rbp - 8], rax
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	mov	edx, 0x63
0x40012f:	mov	esi, 0x41
0x400134:	mov	rdi, rax
0x400137:	call	0x500010
<Block for 0x4000de, 26 bytes>
0x4000de:	mov	qword ptr [rbp - 8], rax
0x4000e2:	mov	rax, qword ptr [rbp - 8]
0x4000e6:	mov	edx, 0x63
0x4000eb:	mov	esi, 0x41
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500010
<Block for 0x40013c, 18 bytes>
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	add	rax, 0x63
0x400144:	mov	byte ptr [rax], 0
0x400147:	cmp	qword ptr [rbp - 8], 0
0x40014c:	je	0x40015a
<Block for 0x4000f8, 18 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 8]
0x4000fc:	add	rax, 0x63
0x400100:	mov	byte ptr [rax], 0
0x400103:	cmp	qword ptr [rbp - 8], 0
0x400108:	je	0x40015a
<Block for 0x40015a, 5 bytes>
0x40015a:	call	0x500000
<Block for 0x40014e, 12 bytes>
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	mov	rdi, rax
0x400155:	call	0x500018
<Block for 0x40010a, 12 bytes>
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	mov	rdi, rax
0x400111:	call	0x500018
<Block for 0x40015f, 5 bytes>
0x40015f:	test	eax, eax
0x400161:	nop	
0x400162:	leave	
0x400163:	ret	
<Block for 0x400116, 2 bytes>
0x400116:	jmp	0x40015a
