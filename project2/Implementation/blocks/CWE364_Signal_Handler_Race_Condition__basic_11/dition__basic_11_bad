<Block for 0x40004e, 22 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	sub	rsp, 0x10
0x40005a:	mov	eax, 0
0x40005f:	call	0x500000
<Block for 0x400064, 8 bytes>
0x400064:	test	eax, eax
0x400066:	je	0x400117
<Block for 0x400117, 3 bytes>
0x400117:	nop	
0x400118:	leave	
0x400119:	ret	
<Block for 0x40006c, 23 bytes>
0x40006c:	mov	qword ptr [rbp - 8], 0
0x400074:	mov	esi, 0
0x400079:	mov	edi, 2
0x40007e:	call	0x500008
<Block for 0x400083, 12 bytes>
0x400083:	mov	rax, qword ptr [rip + 0x296]
0x40008a:	test	rax, rax
0x40008d:	je	0x4000a9
<Block for 0x4000a9, 10 bytes>
0x4000a9:	mov	edi, 4
0x4000ae:	call	0x500018
<Block for 0x40008f, 15 bytes>
0x40008f:	mov	rax, qword ptr [rip + 0x28a]
0x400096:	mov	rdi, rax
0x400099:	call	0x500010
<Block for 0x4000b3, 11 bytes>
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	cmp	qword ptr [rbp - 8], 0
0x4000bc:	jne	0x4000c8
<Block for 0x40009e, 21 bytes>
0x40009e:	mov	qword ptr [rip + 0x277], 0
0x4000a9:	mov	edi, 4
0x4000ae:	call	0x500018
<Block for 0x4000be, 10 bytes>
0x4000be:	mov	edi, 0xffffffff
0x4000c3:	call	0x500020
<Block for 0x4000c8, 41 bytes>
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	mov	qword ptr [rip + 0x24d], rax
0x4000d3:	mov	rax, qword ptr [rip + 0x246]
0x4000da:	mov	dword ptr [rax], 1
0x4000e0:	lea	rsi, [rip - 0xe7]
0x4000e7:	mov	edi, 2
0x4000ec:	call	0x500008
<Block for 0x4000f1, 12 bytes>
0x4000f1:	mov	rax, qword ptr [rip + 0x228]
0x4000f8:	test	rax, rax
0x4000fb:	je	0x400117
<Block for 0x4000fd, 15 bytes>
0x4000fd:	mov	rax, qword ptr [rip + 0x21c]
0x400104:	mov	rdi, rax
0x400107:	call	0x500010
<Block for 0x40010c, 14 bytes>
0x40010c:	mov	qword ptr [rip + 0x209], 0
0x400117:	nop	
0x400118:	leave	
0x400119:	ret	
