<Block for 0x400133, 42 bytes>
0x400133:	endbr64	
0x400137:	push	rbp
0x400138:	mov	rbp, rsp
0x40013b:	push	r12
0x40013d:	push	rbx
0x40013e:	sub	rsp, 0x60
0x400142:	mov	rax, qword ptr fs:[0x28]
0x40014b:	mov	qword ptr [rbp - 0x18], rax
0x40014f:	xor	eax, eax
0x400151:	lea	rax, [rbp - 0x69]
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40015d, 23 bytes>
0x40015d:	lea	rdx, [rbp - 0x69]
0x400161:	lea	rax, [rbp - 0x60]
0x400165:	lea	rsi, [rip + 0x2fe]
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500008
<Block for 0x400174, 12 bytes>
0x400174:	lea	rax, [rbp - 0x69]
0x400178:	mov	rdi, rax
0x40017b:	call	0x500010
<Block for 0x400180, 5 bytes>
0x400180:	call	0x500018
<Block for 0x400185, 8 bytes>
0x400185:	movsxd	rbx, eax
0x400188:	call	0x500018
<Block for 0x40018d, 22 bytes>
0x40018d:	movsxd	rdx, eax
0x400190:	lea	rax, [rbp - 0x40]
0x400194:	lea	rsi, [rbp - 0x60]
0x400198:	mov	rcx, rbx
0x40019b:	mov	rdi, rax
0x40019e:	call	0x500020
<Block for 0x4001a3, 12 bytes>
0x4001a3:	lea	rax, [rbp - 0x40]
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500028
<Block for 0x4001af, 8 bytes>
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x500030
<Block for 0x4001b7, 12 bytes>
0x4001b7:	lea	rax, [rbp - 0x40]
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x500038
<Block for 0x4001c3, 12 bytes>
0x4001c3:	lea	rax, [rbp - 0x60]
0x4001c7:	mov	rdi, rax
0x4001ca:	call	0x500038
<Block for 0x4001cf, 21 bytes>
0x4001cf:	nop	
0x4001d0:	nop	
0x4001d1:	mov	rax, qword ptr [rbp - 0x18]
0x4001d5:	xor	rax, qword ptr fs:[0x28]
0x4001de:	je	0x400287
<Block for 0x400287, 9 bytes>
0x400287:	add	rsp, 0x60
0x40028b:	pop	rbx
0x40028c:	pop	r12
0x40028e:	pop	rbp
0x40028f:	ret	
<Block for 0x4001e4, 5 bytes>
0x4001e4:	jmp	0x400282
<Block for 0x400282, 5 bytes>
0x400282:	call	0x500058
