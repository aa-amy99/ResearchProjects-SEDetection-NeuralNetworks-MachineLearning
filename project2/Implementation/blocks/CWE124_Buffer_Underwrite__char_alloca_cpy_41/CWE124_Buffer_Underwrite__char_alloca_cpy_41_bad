<Block for 0x40006f, 81 bytes>
0x40006f:	endbr64	
0x400073:	push	rbp
0x400074:	mov	rbp, rsp
0x400077:	sub	rsp, 0x20
0x40007b:	mov	rax, qword ptr fs:[0x28]
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	xor	eax, eax
0x40008a:	mov	eax, 0x10
0x40008f:	sub	rax, 1
0x400093:	add	rax, 0x6c
0x400097:	mov	esi, 0x10
0x40009c:	mov	edx, 0
0x4000a1:	div	rsi
0x4000a4:	imul	rax, rax, 0x10
0x4000a8:	mov	rdx, rax
0x4000ab:	and	rdx, 0xfffffffffffff000
0x4000b2:	mov	rcx, rsp
0x4000b5:	sub	rcx, rdx
0x4000b8:	mov	rdx, rcx
0x4000bb:	cmp	rsp, rdx
0x4000be:	je	0x4000d2
<Block for 0x4000d2, 26 bytes>
0x4000d2:	mov	rdx, rax
0x4000d5:	and	edx, 0xfff
0x4000db:	sub	rsp, rdx
0x4000de:	mov	rdx, rax
0x4000e1:	and	edx, 0xfff
0x4000e7:	test	rdx, rdx
0x4000ea:	je	0x4000fc
<Block for 0x4000c0, 18 bytes>
0x4000c0:	sub	rsp, 0x1000
0x4000c7:	or	qword ptr [rsp + 0xff8], 0
0x4000d0:	jmp	0x4000bb
<Block for 0x4000fc, 41 bytes>
0x4000fc:	mov	rax, rsp
0x4000ff:	add	rax, 0xf
0x400103:	shr	rax, 4
0x400107:	shl	rax, 4
0x40010b:	mov	qword ptr [rbp - 0x18], rax
0x40010f:	mov	rax, qword ptr [rbp - 0x18]
0x400113:	mov	edx, 0x63
0x400118:	mov	esi, 0x41
0x40011d:	mov	rdi, rax
0x400120:	call	0x500000
<Block for 0x4000ec, 57 bytes>
0x4000ec:	and	eax, 0xfff
0x4000f1:	sub	rax, 8
0x4000f5:	add	rax, rsp
0x4000f8:	or	qword ptr [rax], 0
0x4000fc:	mov	rax, rsp
0x4000ff:	add	rax, 0xf
0x400103:	shr	rax, 4
0x400107:	shl	rax, 4
0x40010b:	mov	qword ptr [rbp - 0x18], rax
0x40010f:	mov	rax, qword ptr [rbp - 0x18]
0x400113:	mov	edx, 0x63
0x400118:	mov	esi, 0x41
0x40011d:	mov	rdi, rax
0x400120:	call	0x500000
<Block for 0x4000bb, 5 bytes>
0x4000bb:	cmp	rsp, rdx
0x4000be:	je	0x4000d2
<Block for 0x400125, 35 bytes>
0x400125:	mov	rax, qword ptr [rbp - 0x18]
0x400129:	add	rax, 0x63
0x40012d:	mov	byte ptr [rax], 0
0x400130:	mov	rax, qword ptr [rbp - 0x18]
0x400134:	sub	rax, 8
0x400138:	mov	qword ptr [rbp - 0x10], rax
0x40013c:	mov	rax, qword ptr [rbp - 0x10]
0x400140:	mov	rdi, rax
0x400143:	call	0x400000
<Block for 0x400148, 16 bytes>
0x400148:	nop	
0x400149:	mov	rax, qword ptr [rbp - 8]
0x40014d:	xor	rax, qword ptr fs:[0x28]
0x400156:	je	0x40015d
<Block for 0x40015d, 2 bytes>
0x40015d:	leave	
0x40015e:	ret	
<Block for 0x400158, 5 bytes>
0x400158:	call	0x500018
