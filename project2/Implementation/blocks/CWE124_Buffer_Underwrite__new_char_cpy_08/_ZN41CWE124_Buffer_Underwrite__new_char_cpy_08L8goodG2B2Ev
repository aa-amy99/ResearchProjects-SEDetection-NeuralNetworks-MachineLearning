<Block for 0x4001a0, 40 bytes>
0x4001a0:	endbr64	
0x4001a4:	push	rbp
0x4001a5:	mov	rbp, rsp
0x4001a8:	add	rsp, -0x80
0x4001ac:	mov	rax, qword ptr fs:[0x28]
0x4001b5:	mov	qword ptr [rbp - 8], rax
0x4001b9:	xor	eax, eax
0x4001bb:	mov	qword ptr [rbp - 0x80], 0
0x4001c3:	call	0x400000
<Block for 0x4001c8, 9 bytes>
0x4001c8:	test	eax, eax
0x4001ca:	setne	al
0x4001cd:	test	al, al
0x4001cf:	je	0x400208
<Block for 0x400208, 22 bytes>
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500008
<Block for 0x4001d1, 10 bytes>
0x4001d1:	mov	edi, 0x64
0x4001d6:	call	0x500000
<Block for 0x40021e, 23 bytes>
0x40021e:	mov	byte ptr [rbp - 0xd], 0
0x400222:	lea	rdx, [rbp - 0x70]
0x400226:	mov	rax, qword ptr [rbp - 0x80]
0x40022a:	mov	rsi, rdx
0x40022d:	mov	rdi, rax
0x400230:	call	0x500010
<Block for 0x4001db, 26 bytes>
0x4001db:	mov	qword ptr [rbp - 0x78], rax
0x4001df:	mov	rax, qword ptr [rbp - 0x78]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500008
<Block for 0x400235, 12 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x80]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500018
<Block for 0x4001f5, 41 bytes>
0x4001f5:	mov	rax, qword ptr [rbp - 0x78]
0x4001f9:	add	rax, 0x63
0x4001fd:	mov	byte ptr [rax], 0
0x400200:	mov	rax, qword ptr [rbp - 0x78]
0x400204:	mov	qword ptr [rbp - 0x80], rax
0x400208:	lea	rax, [rbp - 0x70]
0x40020c:	mov	edx, 0x63
0x400211:	mov	esi, 0x43
0x400216:	mov	rdi, rax
0x400219:	call	0x500008
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500020
