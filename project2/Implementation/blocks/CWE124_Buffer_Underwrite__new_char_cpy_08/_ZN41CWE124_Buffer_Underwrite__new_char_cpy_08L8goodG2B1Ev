<Block for 0x4000da, 40 bytes>
0x4000da:	endbr64	
0x4000de:	push	rbp
0x4000df:	mov	rbp, rsp
0x4000e2:	add	rsp, -0x80
0x4000e6:	mov	rax, qword ptr fs:[0x28]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	xor	eax, eax
0x4000f5:	mov	qword ptr [rbp - 0x80], 0
0x4000fd:	call	0x40000f
<Block for 0x400102, 9 bytes>
0x400102:	test	eax, eax
0x400104:	setne	al
0x400107:	test	al, al
0x400109:	je	0x400119
<Block for 0x400119, 10 bytes>
0x400119:	mov	edi, 0x64
0x40011e:	call	0x500000
<Block for 0x40010b, 12 bytes>
0x40010b:	lea	rdi, [rip + 0x15b]
0x400112:	call	0x500018
<Block for 0x400123, 26 bytes>
0x400123:	mov	qword ptr [rbp - 0x78], rax
0x400127:	mov	rax, qword ptr [rbp - 0x78]
0x40012b:	mov	edx, 0x63
0x400130:	mov	esi, 0x41
0x400135:	mov	rdi, rax
0x400138:	call	0x500008
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x400150
<Block for 0x40013d, 41 bytes>
0x40013d:	mov	rax, qword ptr [rbp - 0x78]
0x400141:	add	rax, 0x63
0x400145:	mov	byte ptr [rax], 0
0x400148:	mov	rax, qword ptr [rbp - 0x78]
0x40014c:	mov	qword ptr [rbp - 0x80], rax
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	edx, 0x63
0x400159:	mov	esi, 0x43
0x40015e:	mov	rdi, rax
0x400161:	call	0x500008
<Block for 0x400150, 22 bytes>
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	edx, 0x63
0x400159:	mov	esi, 0x43
0x40015e:	mov	rdi, rax
0x400161:	call	0x500008
<Block for 0x400166, 23 bytes>
0x400166:	mov	byte ptr [rbp - 0xd], 0
0x40016a:	lea	rdx, [rbp - 0x70]
0x40016e:	mov	rax, qword ptr [rbp - 0x80]
0x400172:	mov	rsi, rdx
0x400175:	mov	rdi, rax
0x400178:	call	0x500010
<Block for 0x40017d, 12 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x80]
0x400181:	mov	rdi, rax
0x400184:	call	0x500018
<Block for 0x400189, 16 bytes>
0x400189:	nop	
0x40018a:	mov	rax, qword ptr [rbp - 8]
0x40018e:	xor	rax, qword ptr fs:[0x28]
0x400197:	je	0x40019e
<Block for 0x40019e, 2 bytes>
0x40019e:	leave	
0x40019f:	ret	
<Block for 0x400199, 5 bytes>
0x400199:	call	0x500020
