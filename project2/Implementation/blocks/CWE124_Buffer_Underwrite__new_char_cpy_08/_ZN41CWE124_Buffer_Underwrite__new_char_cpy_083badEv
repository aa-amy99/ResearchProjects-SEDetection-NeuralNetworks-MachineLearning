<Block for 0x40001e, 40 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	add	rsp, -0x80
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	qword ptr [rbp - 0x80], 0
0x400041:	call	0x400000
<Block for 0x400046, 9 bytes>
0x400046:	test	eax, eax
0x400048:	setne	al
0x40004b:	test	al, al
0x40004d:	je	0x40008a
<Block for 0x40008a, 22 bytes>
0x40008a:	lea	rax, [rbp - 0x70]
0x40008e:	mov	edx, 0x63
0x400093:	mov	esi, 0x43
0x400098:	mov	rdi, rax
0x40009b:	call	0x500008
<Block for 0x40004f, 10 bytes>
0x40004f:	mov	edi, 0x64
0x400054:	call	0x500000
<Block for 0x4000a0, 23 bytes>
0x4000a0:	mov	byte ptr [rbp - 0xd], 0
0x4000a4:	lea	rdx, [rbp - 0x70]
0x4000a8:	mov	rax, qword ptr [rbp - 0x80]
0x4000ac:	mov	rsi, rdx
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500010
<Block for 0x400059, 26 bytes>
0x400059:	mov	qword ptr [rbp - 0x78], rax
0x40005d:	mov	rax, qword ptr [rbp - 0x78]
0x400061:	mov	edx, 0x63
0x400066:	mov	esi, 0x41
0x40006b:	mov	rdi, rax
0x40006e:	call	0x500008
<Block for 0x4000b7, 12 bytes>
0x4000b7:	mov	rax, qword ptr [rbp - 0x80]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500018
<Block for 0x400073, 45 bytes>
0x400073:	mov	rax, qword ptr [rbp - 0x78]
0x400077:	add	rax, 0x63
0x40007b:	mov	byte ptr [rax], 0
0x40007e:	mov	rax, qword ptr [rbp - 0x78]
0x400082:	sub	rax, 8
0x400086:	mov	qword ptr [rbp - 0x80], rax
0x40008a:	lea	rax, [rbp - 0x70]
0x40008e:	mov	edx, 0x63
0x400093:	mov	esi, 0x43
0x400098:	mov	rdi, rax
0x40009b:	call	0x500008
<Block for 0x4000c3, 16 bytes>
0x4000c3:	nop	
0x4000c4:	mov	rax, qword ptr [rbp - 8]
0x4000c8:	xor	rax, qword ptr fs:[0x28]
0x4000d1:	je	0x4000d8
<Block for 0x4000d8, 2 bytes>
0x4000d8:	leave	
0x4000d9:	ret	
<Block for 0x4000d3, 5 bytes>
0x4000d3:	call	0x500020
