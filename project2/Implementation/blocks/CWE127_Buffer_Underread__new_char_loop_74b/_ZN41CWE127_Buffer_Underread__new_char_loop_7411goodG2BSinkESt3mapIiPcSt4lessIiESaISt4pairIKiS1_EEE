<Block for 0x4000c1, 72 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	sub	rsp, 0xa0
0x4000d0:	mov	qword ptr [rbp - 0x98], rdi
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	mov	dword ptr [rbp - 0x84], 2
0x4000f0:	lea	rdx, [rbp - 0x84]
0x4000f7:	mov	rax, qword ptr [rbp - 0x98]
0x4000fe:	mov	rsi, rdx
0x400101:	mov	rdi, rax
0x400104:	call	0x4001ae
<Block for 0x400109, 29 bytes>
0x400109:	mov	rax, qword ptr [rax]
0x40010c:	mov	qword ptr [rbp - 0x78], rax
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	edx, 0x63
0x400119:	mov	esi, 0x43
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x400126, 19 bytes>
0x400126:	mov	byte ptr [rbp - 0xd], 0
0x40012a:	mov	qword ptr [rbp - 0x80], 0
0x400132:	cmp	qword ptr [rbp - 0x80], 0x63
0x400137:	ja	0x40015b
<Block for 0x400139, 34 bytes>
0x400139:	mov	rdx, qword ptr [rbp - 0x78]
0x40013d:	mov	rax, qword ptr [rbp - 0x80]
0x400141:	add	rax, rdx
0x400144:	movzx	eax, byte ptr [rax]
0x400147:	lea	rcx, [rbp - 0x70]
0x40014b:	mov	rdx, qword ptr [rbp - 0x80]
0x40014f:	add	rdx, rcx
0x400152:	mov	byte ptr [rdx], al
0x400154:	add	qword ptr [rbp - 0x80], 1
0x400159:	jmp	0x400132
<Block for 0x40015b, 16 bytes>
0x40015b:	mov	byte ptr [rbp - 0xd], 0
0x40015f:	lea	rax, [rbp - 0x70]
0x400163:	mov	rdi, rax
0x400166:	call	0x500008
<Block for 0x400132, 7 bytes>
0x400132:	cmp	qword ptr [rbp - 0x80], 0x63
0x400137:	ja	0x40015b
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500010
