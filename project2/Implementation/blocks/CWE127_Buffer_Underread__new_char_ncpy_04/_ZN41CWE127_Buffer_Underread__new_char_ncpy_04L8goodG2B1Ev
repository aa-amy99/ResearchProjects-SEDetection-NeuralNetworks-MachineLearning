<Block for 0x4000c1, 45 bytes>
0x4000c1:	endbr64	
0x4000c5:	push	rbp
0x4000c6:	mov	rbp, rsp
0x4000c9:	add	rsp, -0x80
0x4000cd:	mov	rax, qword ptr fs:[0x28]
0x4000d6:	mov	qword ptr [rbp - 8], rax
0x4000da:	xor	eax, eax
0x4000dc:	mov	qword ptr [rbp - 0x80], 0
0x4000e4:	mov	edi, 0x64
0x4000e9:	call	0x500000
<Block for 0x4000ee, 26 bytes>
0x4000ee:	mov	qword ptr [rbp - 0x78], rax
0x4000f2:	mov	rax, qword ptr [rbp - 0x78]
0x4000f6:	mov	edx, 0x63
0x4000fb:	mov	esi, 0x41
0x400100:	mov	rdi, rax
0x400103:	call	0x500008
<Block for 0x400108, 41 bytes>
0x400108:	mov	rax, qword ptr [rbp - 0x78]
0x40010c:	add	rax, 0x63
0x400110:	mov	byte ptr [rax], 0
0x400113:	mov	rax, qword ptr [rbp - 0x78]
0x400117:	mov	qword ptr [rbp - 0x80], rax
0x40011b:	lea	rax, [rbp - 0x70]
0x40011f:	mov	edx, 0x63
0x400124:	mov	esi, 0x43
0x400129:	mov	rdi, rax
0x40012c:	call	0x500008
<Block for 0x400131, 16 bytes>
0x400131:	mov	byte ptr [rbp - 0xd], 0
0x400135:	lea	rax, [rbp - 0x70]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500010
<Block for 0x400141, 22 bytes>
0x400141:	mov	rdx, rax
0x400144:	mov	rcx, qword ptr [rbp - 0x80]
0x400148:	lea	rax, [rbp - 0x70]
0x40014c:	mov	rsi, rcx
0x40014f:	mov	rdi, rax
0x400152:	call	0x500018
<Block for 0x400157, 16 bytes>
0x400157:	mov	byte ptr [rbp - 0xd], 0
0x40015b:	lea	rax, [rbp - 0x70]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500020
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500028
