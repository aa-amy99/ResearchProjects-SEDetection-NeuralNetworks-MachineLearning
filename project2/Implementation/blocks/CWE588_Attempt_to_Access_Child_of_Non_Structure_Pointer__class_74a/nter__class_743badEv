<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	rdi, rax
0x400026:	call	0x4003dc
<Block for 0x40002b, 70 bytes>
0x40002b:	mov	dword ptr [rbp - 0x94], 0x64
0x400035:	mov	dword ptr [rbp - 0x88], 0
0x40003f:	mov	dword ptr [rbp - 0x84], 0
0x400049:	lea	rax, [rbp - 0x94]
0x400050:	mov	qword ptr [rbp - 0x90], rax
0x400057:	mov	dword ptr [rbp - 0x50], 0
0x40005e:	lea	rdx, [rbp - 0x50]
0x400062:	lea	rax, [rbp - 0x80]
0x400066:	mov	rsi, rdx
0x400069:	mov	rdi, rax
0x40006c:	call	0x400592
<Block for 0x400071, 36 bytes>
0x400071:	mov	rdx, qword ptr [rbp - 0x90]
0x400078:	mov	qword ptr [rax], rdx
0x40007b:	mov	dword ptr [rbp - 0x50], 1
0x400082:	lea	rdx, [rbp - 0x50]
0x400086:	lea	rax, [rbp - 0x80]
0x40008a:	mov	rsi, rdx
0x40008d:	mov	rdi, rax
0x400090:	call	0x400592
<Block for 0x400095, 36 bytes>
0x400095:	mov	rdx, qword ptr [rbp - 0x90]
0x40009c:	mov	qword ptr [rax], rdx
0x40009f:	mov	dword ptr [rbp - 0x50], 2
0x4000a6:	lea	rdx, [rbp - 0x50]
0x4000aa:	lea	rax, [rbp - 0x80]
0x4000ae:	mov	rsi, rdx
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x400592
<Block for 0x4000b9, 29 bytes>
0x4000b9:	mov	rdx, qword ptr [rbp - 0x90]
0x4000c0:	mov	qword ptr [rax], rdx
0x4000c3:	lea	rdx, [rbp - 0x80]
0x4000c7:	lea	rax, [rbp - 0x50]
0x4000cb:	mov	rsi, rdx
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x40041c
<Block for 0x4000d6, 12 bytes>
0x4000d6:	lea	rax, [rbp - 0x50]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500000
<Block for 0x4000e2, 12 bytes>
0x4000e2:	lea	rax, [rbp - 0x50]
0x4000e6:	mov	rdi, rax
0x4000e9:	call	0x4003fc
<Block for 0x4000ee, 12 bytes>
0x4000ee:	lea	rax, [rbp - 0x80]
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x4003fc
<Block for 0x4000fa, 16 bytes>
0x4000fa:	nop	
0x4000fb:	mov	rax, qword ptr [rbp - 0x18]
0x4000ff:	xor	rax, qword ptr fs:[0x28]
0x400108:	je	0x400144
<Block for 0x400144, 10 bytes>
0x400144:	add	rsp, 0x98
0x40014b:	pop	rbx
0x40014c:	pop	rbp
0x40014d:	ret	
<Block for 0x40010a, 2 bytes>
0x40010a:	jmp	0x40013f
<Block for 0x40013f, 5 bytes>
0x40013f:	call	0x500010
