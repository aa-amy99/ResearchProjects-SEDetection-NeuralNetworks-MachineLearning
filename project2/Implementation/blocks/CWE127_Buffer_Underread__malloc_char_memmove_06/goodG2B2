<Block for 0x4001ae, 45 bytes>
0x4001ae:	endbr64	
0x4001b2:	push	rbp
0x4001b3:	mov	rbp, rsp
0x4001b6:	add	rsp, -0x80
0x4001ba:	mov	rax, qword ptr fs:[0x28]
0x4001c3:	mov	qword ptr [rbp - 8], rax
0x4001c7:	xor	eax, eax
0x4001c9:	mov	qword ptr [rbp - 0x80], 0
0x4001d1:	mov	eax, 5
0x4001d6:	cmp	eax, 5
0x4001d9:	jne	0x400223
<Block for 0x4001db, 10 bytes>
0x4001db:	mov	edi, 0x64
0x4001e0:	call	0x500000
<Block for 0x400223, 22 bytes>
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x43
0x400231:	mov	rdi, rax
0x400234:	call	0x500010
<Block for 0x4001e5, 11 bytes>
0x4001e5:	mov	qword ptr [rbp - 0x78], rax
0x4001e9:	cmp	qword ptr [rbp - 0x78], 0
0x4001ee:	jne	0x4001fa
<Block for 0x400239, 28 bytes>
0x400239:	mov	byte ptr [rbp - 0xd], 0
0x40023d:	mov	rcx, qword ptr [rbp - 0x80]
0x400241:	lea	rax, [rbp - 0x70]
0x400245:	mov	edx, 0x64
0x40024a:	mov	rsi, rcx
0x40024d:	mov	rdi, rax
0x400250:	call	0x500018
<Block for 0x4001f0, 10 bytes>
0x4001f0:	mov	edi, 0xffffffff
0x4001f5:	call	0x500008
<Block for 0x4001fa, 22 bytes>
0x4001fa:	mov	rax, qword ptr [rbp - 0x78]
0x4001fe:	mov	edx, 0x63
0x400203:	mov	esi, 0x41
0x400208:	mov	rdi, rax
0x40020b:	call	0x500010
<Block for 0x400255, 16 bytes>
0x400255:	mov	byte ptr [rbp - 0xd], 0
0x400259:	lea	rax, [rbp - 0x70]
0x40025d:	mov	rdi, rax
0x400260:	call	0x500020
<Block for 0x400210, 41 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0x78]
0x400214:	add	rax, 0x63
0x400218:	mov	byte ptr [rax], 0
0x40021b:	mov	rax, qword ptr [rbp - 0x78]
0x40021f:	mov	qword ptr [rbp - 0x80], rax
0x400223:	lea	rax, [rbp - 0x70]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x43
0x400231:	mov	rdi, rax
0x400234:	call	0x500010
<Block for 0x400265, 16 bytes>
0x400265:	nop	
0x400266:	mov	rax, qword ptr [rbp - 8]
0x40026a:	xor	rax, qword ptr fs:[0x28]
0x400273:	je	0x40027a
<Block for 0x40027a, 2 bytes>
0x40027a:	leave	
0x40027b:	ret	
<Block for 0x400275, 5 bytes>
0x400275:	call	0x500028
