<Block for 0x400000, 29 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400013:	mov	eax, 0
0x400018:	call	0x500000
<Block for 0x40001d, 4 bytes>
0x40001d:	test	eax, eax
0x40001f:	je	0x40002a
<Block for 0x40002a, 24 bytes>
0x40002a:	mov	dword ptr [rbp - 0x14], 0x14
0x400031:	mov	eax, dword ptr [rbp - 0x14]
0x400034:	cdqe	
0x400036:	shl	rax, 2
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500008
<Block for 0x400021, 9 bytes>
0x400021:	mov	dword ptr [rbp - 0x14], 0x40000001
0x400028:	jmp	0x400031
<Block for 0x400042, 11 bytes>
0x400042:	mov	qword ptr [rbp - 8], rax
0x400046:	cmp	qword ptr [rbp - 8], 0
0x40004b:	jne	0x400057
<Block for 0x400031, 17 bytes>
0x400031:	mov	eax, dword ptr [rbp - 0x14]
0x400034:	cdqe	
0x400036:	shl	rax, 2
0x40003a:	mov	rdi, rax
0x40003d:	call	0x500008
<Block for 0x40004d, 10 bytes>
0x40004d:	mov	edi, 0xffffffff
0x400052:	call	0x500010
<Block for 0x400057, 10 bytes>
0x400057:	mov	qword ptr [rbp - 0x10], 0
0x40005f:	jmp	0x40007f
<Block for 0x40007f, 11 bytes>
0x40007f:	mov	eax, dword ptr [rbp - 0x14]
0x400082:	cdqe	
0x400084:	cmp	qword ptr [rbp - 0x10], rax
0x400088:	jb	0x400061
<Block for 0x400061, 41 bytes>
0x400061:	mov	rax, qword ptr [rbp - 0x10]
0x400065:	lea	rdx, [rax*4]
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	add	rax, rdx
0x400074:	mov	dword ptr [rax], 0
0x40007a:	add	qword ptr [rbp - 0x10], 1
0x40007f:	mov	eax, dword ptr [rbp - 0x14]
0x400082:	cdqe	
0x400084:	cmp	qword ptr [rbp - 0x10], rax
0x400088:	jb	0x400061
<Block for 0x40008a, 13 bytes>
0x40008a:	mov	rax, qword ptr [rbp - 8]
0x40008e:	mov	eax, dword ptr [rax]
0x400090:	mov	edi, eax
0x400092:	call	0x500018
<Block for 0x400097, 12 bytes>
0x400097:	mov	rax, qword ptr [rbp - 8]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500020
<Block for 0x4000a3, 3 bytes>
0x4000a3:	nop	
0x4000a4:	leave	
0x4000a5:	ret	
