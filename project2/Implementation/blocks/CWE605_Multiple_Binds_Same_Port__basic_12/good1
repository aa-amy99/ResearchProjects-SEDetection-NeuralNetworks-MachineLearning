<Block for 0x400519, 40 bytes>
0x400519:	endbr64	
0x40051d:	push	rbp
0x40051e:	mov	rbp, rsp
0x400521:	sub	rsp, 0xc0
0x400528:	mov	rax, qword ptr fs:[0x28]
0x400531:	mov	qword ptr [rbp - 8], rax
0x400535:	xor	eax, eax
0x400537:	mov	eax, 0
0x40053c:	call	0x500000
<Block for 0x400541, 8 bytes>
0x400541:	test	eax, eax
0x400543:	je	0x400790
<Block for 0x400790, 135 bytes>
0x400790:	mov	qword ptr [rbp - 0x70], 0
0x400798:	mov	qword ptr [rbp - 0x68], 0
0x4007a0:	mov	qword ptr [rbp - 0x60], 0
0x4007a8:	mov	qword ptr [rbp - 0x58], 0
0x4007b0:	mov	qword ptr [rbp - 0x50], 0
0x4007b8:	mov	qword ptr [rbp - 0x48], 0
0x4007c0:	mov	qword ptr [rbp - 0x40], 0
0x4007c8:	mov	qword ptr [rbp - 0x38], 0
0x4007d0:	mov	qword ptr [rbp - 0x30], 0
0x4007d8:	mov	qword ptr [rbp - 0x28], 0
0x4007e0:	mov	qword ptr [rbp - 0x20], 0
0x4007e8:	mov	qword ptr [rbp - 0x18], 0
0x4007f0:	mov	dword ptr [rbp - 0x10], 0
0x4007f7:	mov	dword ptr [rbp - 0xb0], 0xffffffff
0x400801:	mov	dword ptr [rbp - 0xb4], 0xffffffff
0x40080b:	lea	rax, [rbp - 0x70]
0x40080f:	mov	rdi, rax
0x400812:	call	0x500008
<Block for 0x400549, 135 bytes>
0x400549:	mov	qword ptr [rbp - 0x70], 0
0x400551:	mov	qword ptr [rbp - 0x68], 0
0x400559:	mov	qword ptr [rbp - 0x60], 0
0x400561:	mov	qword ptr [rbp - 0x58], 0
0x400569:	mov	qword ptr [rbp - 0x50], 0
0x400571:	mov	qword ptr [rbp - 0x48], 0
0x400579:	mov	qword ptr [rbp - 0x40], 0
0x400581:	mov	qword ptr [rbp - 0x38], 0
0x400589:	mov	qword ptr [rbp - 0x30], 0
0x400591:	mov	qword ptr [rbp - 0x28], 0
0x400599:	mov	qword ptr [rbp - 0x20], 0
0x4005a1:	mov	qword ptr [rbp - 0x18], 0
0x4005a9:	mov	dword ptr [rbp - 0x10], 0
0x4005b0:	mov	dword ptr [rbp - 0xa8], 0xffffffff
0x4005ba:	mov	dword ptr [rbp - 0xb8], 0xffffffff
0x4005c4:	lea	rax, [rbp - 0x70]
0x4005c8:	mov	rdi, rax
0x4005cb:	call	0x500008
<Block for 0x400817, 27 bytes>
0x400817:	mov	qword ptr [rbp - 0xa0], rax
0x40081e:	mov	edx, 6
0x400823:	mov	esi, 1
0x400828:	mov	edi, 2
0x40082d:	call	0x500010
<Block for 0x4005d0, 27 bytes>
0x4005d0:	mov	qword ptr [rbp - 0x90], rax
0x4005d7:	mov	edx, 6
0x4005dc:	mov	esi, 1
0x4005e1:	mov	edi, 2
0x4005e6:	call	0x500010
<Block for 0x400832, 19 bytes>
0x400832:	mov	dword ptr [rbp - 0xb0], eax
0x400838:	cmp	dword ptr [rbp - 0xb0], -1
0x40083f:	je	0x400990
<Block for 0x4005eb, 19 bytes>
0x4005eb:	mov	dword ptr [rbp - 0xa8], eax
0x4005f1:	cmp	dword ptr [rbp - 0xa8], -1
0x4005f8:	je	0x400749
<Block for 0x400990, 3 bytes>
0x400990:	nop	
0x400991:	jmp	0x40099a
<Block for 0x400845, 22 bytes>
0x400845:	lea	rax, [rbp - 0x80]
0x400849:	mov	edx, 0x10
0x40084e:	mov	esi, 0
0x400853:	mov	rdi, rax
0x400856:	call	0x500020
<Block for 0x400749, 3 bytes>
0x400749:	nop	
0x40074a:	jmp	0x400753
<Block for 0x4005fe, 22 bytes>
0x4005fe:	lea	rax, [rbp - 0x80]
0x400602:	mov	edx, 0x10
0x400607:	mov	esi, 0
0x40060c:	mov	rdi, rax
0x40060f:	call	0x500020
<Block for 0x40099a, 9 bytes>
0x40099a:	cmp	dword ptr [rbp - 0xb0], -1
0x4009a1:	je	0x4009b0
<Block for 0x40085b, 23 bytes>
0x40085b:	mov	word ptr [rbp - 0x80], 2
0x400861:	mov	dword ptr [rbp - 0x7c], 0
0x400868:	mov	edi, 0x6987
0x40086d:	call	0x500028
<Block for 0x400753, 9 bytes>
0x400753:	cmp	dword ptr [rbp - 0xa8], -1
0x40075a:	je	0x400769
<Block for 0x400614, 23 bytes>
0x400614:	mov	word ptr [rbp - 0x80], 2
0x40061a:	mov	dword ptr [rbp - 0x7c], 0
0x400621:	mov	edi, 0x6987
0x400626:	call	0x500028
<Block for 0x4009b0, 9 bytes>
0x4009b0:	cmp	dword ptr [rbp - 0xb4], -1
0x4009b7:	je	0x4009c6
<Block for 0x4009a3, 13 bytes>
0x4009a3:	mov	eax, dword ptr [rbp - 0xb0]
0x4009a9:	mov	edi, eax
0x4009ab:	call	0x500058
<Block for 0x400872, 29 bytes>
0x400872:	mov	word ptr [rbp - 0x7e], ax
0x400876:	lea	rcx, [rbp - 0x80]
0x40087a:	mov	eax, dword ptr [rbp - 0xb0]
0x400880:	mov	edx, 0x10
0x400885:	mov	rsi, rcx
0x400888:	mov	edi, eax
0x40088a:	call	0x500030
<Block for 0x400769, 9 bytes>
0x400769:	cmp	dword ptr [rbp - 0xb8], -1
0x400770:	je	0x40077f
<Block for 0x40075c, 13 bytes>
0x40075c:	mov	eax, dword ptr [rbp - 0xa8]
0x400762:	mov	edi, eax
0x400764:	call	0x500058
<Block for 0x40062b, 29 bytes>
0x40062b:	mov	word ptr [rbp - 0x7e], ax
0x40062f:	lea	rcx, [rbp - 0x80]
0x400633:	mov	eax, dword ptr [rbp - 0xa8]
0x400639:	mov	edx, 0x10
0x40063e:	mov	rsi, rcx
0x400641:	mov	edi, eax
0x400643:	call	0x500030
<Block for 0x4009c6, 12 bytes>
0x4009c6:	lea	rax, [rbp - 0x70]
0x4009ca:	mov	rdi, rax
0x4009cd:	call	0x500060
<Block for 0x4009b9, 13 bytes>
0x4009b9:	mov	eax, dword ptr [rbp - 0xb4]
0x4009bf:	mov	edi, eax
0x4009c1:	call	0x500058
<Block for 0x40088f, 9 bytes>
0x40088f:	cmp	eax, -1
0x400892:	je	0x400993
<Block for 0x40077f, 12 bytes>
0x40077f:	lea	rax, [rbp - 0x70]
0x400783:	mov	rdi, rax
0x400786:	call	0x500060
<Block for 0x400772, 13 bytes>
0x400772:	mov	eax, dword ptr [rbp - 0xb8]
0x400778:	mov	edi, eax
0x40077a:	call	0x500058
<Block for 0x400648, 9 bytes>
0x400648:	cmp	eax, -1
0x40064b:	je	0x40074c
<Block for 0x4009d2, 16 bytes>
0x4009d2:	nop	
0x4009d3:	mov	rax, qword ptr [rbp - 8]
0x4009d7:	xor	rax, qword ptr fs:[0x28]
0x4009e0:	je	0x4009e7
<Block for 0x400993, 3 bytes>
0x400993:	nop	
0x400994:	jmp	0x40099a
<Block for 0x400898, 18 bytes>
0x400898:	mov	eax, dword ptr [rbp - 0xb0]
0x40089e:	mov	esi, 5
0x4008a3:	mov	edi, eax
0x4008a5:	call	0x500038
<Block for 0x40078b, 5 bytes>
0x40078b:	jmp	0x4009d2
<Block for 0x40074c, 3 bytes>
0x40074c:	nop	
0x40074d:	jmp	0x400753
<Block for 0x400651, 18 bytes>
0x400651:	mov	eax, dword ptr [rbp - 0xa8]
0x400657:	mov	esi, 5
0x40065c:	mov	edi, eax
0x40065e:	call	0x500038
<Block for 0x4009e7, 2 bytes>
0x4009e7:	leave	
0x4009e8:	ret	
<Block for 0x4009e2, 5 bytes>
0x4009e2:	call	0x500068
<Block for 0x4008aa, 9 bytes>
0x4008aa:	cmp	eax, -1
0x4008ad:	je	0x400996
<Block for 0x400663, 9 bytes>
0x400663:	cmp	eax, -1
0x400666:	je	0x40074f
<Block for 0x400996, 3 bytes>
0x400996:	nop	
0x400997:	jmp	0x40099a
<Block for 0x4008b3, 23 bytes>
0x4008b3:	mov	eax, dword ptr [rbp - 0xb0]
0x4008b9:	mov	edx, 0
0x4008be:	mov	esi, 0
0x4008c3:	mov	edi, eax
0x4008c5:	call	0x500040
<Block for 0x40074f, 3 bytes>
0x40074f:	nop	
0x400750:	jmp	0x400753
<Block for 0x40066c, 23 bytes>
0x40066c:	mov	eax, dword ptr [rbp - 0xa8]
0x400672:	mov	edx, 0
0x400677:	mov	esi, 0
0x40067c:	mov	edi, eax
0x40067e:	call	0x500040
<Block for 0x4008ca, 19 bytes>
0x4008ca:	mov	dword ptr [rbp - 0xb4], eax
0x4008d0:	cmp	dword ptr [rbp - 0xb4], -1
0x4008d7:	je	0x400999
<Block for 0x400683, 19 bytes>
0x400683:	mov	dword ptr [rbp - 0xb8], eax
0x400689:	cmp	dword ptr [rbp - 0xb8], -1
0x400690:	je	0x400752
<Block for 0x4008dd, 52 bytes>
0x4008dd:	mov	rax, qword ptr [rbp - 0xa0]
0x4008e4:	mov	edx, 0x63
0x4008e9:	sub	edx, eax
0x4008eb:	mov	eax, edx
0x4008ed:	movsxd	rdx, eax
0x4008f0:	lea	rcx, [rbp - 0x70]
0x4008f4:	mov	rax, qword ptr [rbp - 0xa0]
0x4008fb:	lea	rsi, [rcx + rax]
0x4008ff:	mov	eax, dword ptr [rbp - 0xb4]
0x400905:	mov	ecx, 0
0x40090a:	mov	edi, eax
0x40090c:	call	0x500048
<Block for 0x400999, 1 bytes>
0x400999:	nop	
<Block for 0x400696, 52 bytes>
0x400696:	mov	rax, qword ptr [rbp - 0x90]
0x40069d:	mov	edx, 0x63
0x4006a2:	sub	edx, eax
0x4006a4:	mov	eax, edx
0x4006a6:	movsxd	rdx, eax
0x4006a9:	lea	rcx, [rbp - 0x70]
0x4006ad:	mov	rax, qword ptr [rbp - 0x90]
0x4006b4:	lea	rsi, [rcx + rax]
0x4006b8:	mov	eax, dword ptr [rbp - 0xb8]
0x4006be:	mov	ecx, 0
0x4006c3:	mov	edi, eax
0x4006c5:	call	0x500048
<Block for 0x400752, 1 bytes>
0x400752:	nop	
<Block for 0x400911, 15 bytes>
0x400911:	mov	dword ptr [rbp - 0xac], eax
0x400917:	cmp	dword ptr [rbp - 0xac], -1
0x40091e:	je	0x40099a
<Block for 0x4006ca, 15 bytes>
0x4006ca:	mov	dword ptr [rbp - 0xa4], eax
0x4006d0:	cmp	dword ptr [rbp - 0xa4], -1
0x4006d7:	je	0x400753
<Block for 0x400920, 9 bytes>
0x400920:	cmp	dword ptr [rbp - 0xac], 0
0x400927:	je	0x40099a
<Block for 0x4006d9, 9 bytes>
0x4006d9:	cmp	dword ptr [rbp - 0xa4], 0
0x4006e0:	je	0x400753
<Block for 0x400929, 30 bytes>
0x400929:	mov	eax, dword ptr [rbp - 0xac]
0x40092f:	cdqe	
0x400931:	mov	byte ptr [rbp + rax - 0x70], 0
0x400936:	lea	rax, [rbp - 0x70]
0x40093a:	mov	esi, 0xd
0x40093f:	mov	rdi, rax
0x400942:	call	0x500050
<Block for 0x4006e2, 30 bytes>
0x4006e2:	mov	eax, dword ptr [rbp - 0xa4]
0x4006e8:	cdqe	
0x4006ea:	mov	byte ptr [rbp + rax - 0x70], 0
0x4006ef:	lea	rax, [rbp - 0x70]
0x4006f3:	mov	esi, 0xd
0x4006f8:	mov	rdi, rax
0x4006fb:	call	0x500050
<Block for 0x400947, 17 bytes>
0x400947:	mov	qword ptr [rbp - 0x98], rax
0x40094e:	cmp	qword ptr [rbp - 0x98], 0
0x400956:	je	0x400962
<Block for 0x400700, 17 bytes>
0x400700:	mov	qword ptr [rbp - 0x88], rax
0x400707:	cmp	qword ptr [rbp - 0x88], 0
0x40070f:	je	0x40071b
<Block for 0x400962, 17 bytes>
0x400962:	lea	rax, [rbp - 0x70]
0x400966:	mov	esi, 0xa
0x40096b:	mov	rdi, rax
0x40096e:	call	0x500050
<Block for 0x400958, 27 bytes>
0x400958:	mov	rax, qword ptr [rbp - 0x98]
0x40095f:	mov	byte ptr [rax], 0
0x400962:	lea	rax, [rbp - 0x70]
0x400966:	mov	esi, 0xa
0x40096b:	mov	rdi, rax
0x40096e:	call	0x500050
<Block for 0x40071b, 17 bytes>
0x40071b:	lea	rax, [rbp - 0x70]
0x40071f:	mov	esi, 0xa
0x400724:	mov	rdi, rax
0x400727:	call	0x500050
<Block for 0x400711, 27 bytes>
0x400711:	mov	rax, qword ptr [rbp - 0x88]
0x400718:	mov	byte ptr [rax], 0
0x40071b:	lea	rax, [rbp - 0x70]
0x40071f:	mov	esi, 0xa
0x400724:	mov	rdi, rax
0x400727:	call	0x500050
<Block for 0x400973, 17 bytes>
0x400973:	mov	qword ptr [rbp - 0x98], rax
0x40097a:	cmp	qword ptr [rbp - 0x98], 0
0x400982:	je	0x40099a
<Block for 0x40072c, 17 bytes>
0x40072c:	mov	qword ptr [rbp - 0x88], rax
0x400733:	cmp	qword ptr [rbp - 0x88], 0
0x40073b:	je	0x400753
<Block for 0x400984, 12 bytes>
0x400984:	mov	rax, qword ptr [rbp - 0x98]
0x40098b:	mov	byte ptr [rax], 0
0x40098e:	jmp	0x40099a
<Block for 0x40073d, 12 bytes>
0x40073d:	mov	rax, qword ptr [rbp - 0x88]
0x400744:	mov	byte ptr [rax], 0
0x400747:	jmp	0x400753
