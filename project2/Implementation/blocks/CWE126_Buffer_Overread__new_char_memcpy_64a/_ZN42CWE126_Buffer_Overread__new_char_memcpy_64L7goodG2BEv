<Block for 0x400075, 45 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x10
0x400081:	mov	rax, qword ptr fs:[0x28]
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	xor	eax, eax
0x400090:	mov	qword ptr [rbp - 0x10], 0
0x400098:	mov	edi, 0x64
0x40009d:	call	0x500000
<Block for 0x4000a2, 26 bytes>
0x4000a2:	mov	qword ptr [rbp - 0x10], rax
0x4000a6:	mov	rax, qword ptr [rbp - 0x10]
0x4000aa:	mov	edx, 0x63
0x4000af:	mov	esi, 0x41
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500008
<Block for 0x4000bc, 23 bytes>
0x4000bc:	mov	rax, qword ptr [rbp - 0x10]
0x4000c0:	add	rax, 0x63
0x4000c4:	mov	byte ptr [rax], 0
0x4000c7:	lea	rax, [rbp - 0x10]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500020
<Block for 0x4000d3, 16 bytes>
0x4000d3:	nop	
0x4000d4:	mov	rax, qword ptr [rbp - 8]
0x4000d8:	xor	rax, qword ptr fs:[0x28]
0x4000e1:	je	0x4000e8
<Block for 0x4000e8, 2 bytes>
0x4000e8:	leave	
0x4000e9:	ret	
<Block for 0x4000e3, 5 bytes>
0x4000e3:	call	0x500018
