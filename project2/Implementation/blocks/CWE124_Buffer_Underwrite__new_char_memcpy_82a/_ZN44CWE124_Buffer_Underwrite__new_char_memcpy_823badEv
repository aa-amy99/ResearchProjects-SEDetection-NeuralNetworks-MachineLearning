<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	qword ptr [rbp - 0x28], 0
0x400015:	mov	edi, 0x64
0x40001a:	call	0x500000
<Block for 0x40001f, 26 bytes>
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	mov	rax, qword ptr [rbp - 0x20]
0x400027:	mov	edx, 0x63
0x40002c:	mov	esi, 0x41
0x400031:	mov	rdi, rax
0x400034:	call	0x500008
<Block for 0x400039, 33 bytes>
0x400039:	mov	rax, qword ptr [rbp - 0x20]
0x40003d:	add	rax, 0x63
0x400041:	mov	byte ptr [rax], 0
0x400044:	mov	rax, qword ptr [rbp - 0x20]
0x400048:	sub	rax, 8
0x40004c:	mov	qword ptr [rbp - 0x28], rax
0x400050:	mov	edi, 8
0x400055:	call	0x500010
<Block for 0x40005a, 11 bytes>
0x40005a:	mov	rbx, rax
0x40005d:	mov	rdi, rbx
0x400060:	call	0x40016c
<Block for 0x400065, 30 bytes>
0x400065:	mov	qword ptr [rbp - 0x18], rbx
0x400069:	mov	rax, qword ptr [rbp - 0x18]
0x40006d:	mov	rax, qword ptr [rax]
0x400070:	mov	rcx, qword ptr [rax]
0x400073:	mov	rdx, qword ptr [rbp - 0x28]
0x400077:	mov	rax, qword ptr [rbp - 0x18]
0x40007b:	mov	rsi, rdx
0x40007e:	mov	rdi, rax
0x400081:	call	rcx
<Block for 0x400083, 9 bytes>
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	test	rax, rax
0x40008a:	je	0x400099
<Block for 0x400099, 8 bytes>
0x400099:	nop	
0x40009a:	add	rsp, 0x28
0x40009e:	pop	rbx
0x40009f:	pop	rbp
0x4000a0:	ret	
<Block for 0x40008c, 13 bytes>
0x40008c:	mov	esi, 8
0x400091:	mov	rdi, rax
0x400094:	call	0x500018
