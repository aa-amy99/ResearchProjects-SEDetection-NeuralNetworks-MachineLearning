<Block for 0x4000a1, 31 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	push	rbx
0x4000aa:	sub	rsp, 0x28
0x4000ae:	mov	qword ptr [rbp - 0x28], 0
0x4000b6:	mov	edi, 0x64
0x4000bb:	call	0x500000
<Block for 0x4000c0, 26 bytes>
0x4000c0:	mov	qword ptr [rbp - 0x20], rax
0x4000c4:	mov	rax, qword ptr [rbp - 0x20]
0x4000c8:	mov	edx, 0x63
0x4000cd:	mov	esi, 0x41
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500008
<Block for 0x4000da, 29 bytes>
0x4000da:	mov	rax, qword ptr [rbp - 0x20]
0x4000de:	add	rax, 0x63
0x4000e2:	mov	byte ptr [rax], 0
0x4000e5:	mov	rax, qword ptr [rbp - 0x20]
0x4000e9:	mov	qword ptr [rbp - 0x28], rax
0x4000ed:	mov	edi, 8
0x4000f2:	call	0x500010
<Block for 0x4000f7, 11 bytes>
0x4000f7:	mov	rbx, rax
0x4000fa:	mov	rdi, rbx
0x4000fd:	call	0x40019a
<Block for 0x400102, 30 bytes>
0x400102:	mov	qword ptr [rbp - 0x18], rbx
0x400106:	mov	rax, qword ptr [rbp - 0x18]
0x40010a:	mov	rax, qword ptr [rax]
0x40010d:	mov	rcx, qword ptr [rax]
0x400110:	mov	rdx, qword ptr [rbp - 0x28]
0x400114:	mov	rax, qword ptr [rbp - 0x18]
0x400118:	mov	rsi, rdx
0x40011b:	mov	rdi, rax
0x40011e:	call	rcx
<Block for 0x400120, 9 bytes>
0x400120:	mov	rax, qword ptr [rbp - 0x18]
0x400124:	test	rax, rax
0x400127:	je	0x400136
<Block for 0x400136, 8 bytes>
0x400136:	nop	
0x400137:	add	rsp, 0x28
0x40013b:	pop	rbx
0x40013c:	pop	rbp
0x40013d:	ret	
<Block for 0x400129, 13 bytes>
0x400129:	mov	esi, 8
0x40012e:	mov	rdi, rax
0x400131:	call	0x500018
