<Block for 0x400000, 76 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x5c]
0x40001f:	mov	qword ptr [rbp - 0x48], rax
0x400023:	mov	dword ptr [rbp - 0x5c], 0xffffffff
0x40002a:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400031:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400038:	mov	edx, 6
0x40003d:	mov	esi, 1
0x400042:	mov	edi, 2
0x400047:	call	0x500000
<Block for 0x40004c, 13 bytes>
0x40004c:	mov	dword ptr [rbp - 0x54], eax
0x40004f:	cmp	dword ptr [rbp - 0x54], -1
0x400053:	je	0x400122
<Block for 0x400122, 3 bytes>
0x400122:	nop	
0x400123:	jmp	0x40012c
<Block for 0x400059, 22 bytes>
0x400059:	lea	rax, [rbp - 0x40]
0x40005d:	mov	edx, 0x10
0x400062:	mov	esi, 0
0x400067:	mov	rdi, rax
0x40006a:	call	0x500008
<Block for 0x40012c, 6 bytes>
0x40012c:	cmp	dword ptr [rbp - 0x54], -1
0x400130:	je	0x40013c
<Block for 0x40006f, 23 bytes>
0x40006f:	mov	word ptr [rbp - 0x40], 2
0x400075:	mov	dword ptr [rbp - 0x3c], 0
0x40007c:	mov	edi, 0x6987
0x400081:	call	0x500010
<Block for 0x40013c, 6 bytes>
0x40013c:	cmp	dword ptr [rbp - 0x58], -1
0x400140:	je	0x40014c
<Block for 0x400132, 10 bytes>
0x400132:	mov	eax, dword ptr [rbp - 0x54]
0x400135:	mov	edi, eax
0x400137:	call	0x500040
<Block for 0x400086, 26 bytes>
0x400086:	mov	word ptr [rbp - 0x3e], ax
0x40008a:	lea	rcx, [rbp - 0x40]
0x40008e:	mov	eax, dword ptr [rbp - 0x54]
0x400091:	mov	edx, 0x10
0x400096:	mov	rsi, rcx
0x400099:	mov	edi, eax
0x40009b:	call	0x500018
<Block for 0x40014c, 55 bytes>
0x40014c:	mov	rax, qword ptr [rbp - 0x48]
0x400150:	mov	eax, dword ptr [rax]
0x400152:	mov	dword ptr [rbp - 0x4c], eax
0x400155:	mov	qword ptr [rbp - 0x40], 0
0x40015d:	mov	qword ptr [rbp - 0x38], 0
0x400165:	mov	qword ptr [rbp - 0x30], 0
0x40016d:	mov	qword ptr [rbp - 0x28], 0
0x400175:	mov	qword ptr [rbp - 0x20], 0
0x40017d:	cmp	dword ptr [rbp - 0x4c], 0
0x400181:	js	0x400195
<Block for 0x400142, 10 bytes>
0x400142:	mov	eax, dword ptr [rbp - 0x58]
0x400145:	mov	edi, eax
0x400147:	call	0x500040
<Block for 0x4000a0, 10 bytes>
0x4000a0:	cmp	eax, -1
0x4000a3:	sete	al
0x4000a6:	test	al, al
0x4000a8:	jne	0x400125
<Block for 0x400195, 12 bytes>
0x400195:	lea	rdi, [rip + 0x29c]
0x40019c:	call	0x500050
<Block for 0x400183, 16 bytes>
0x400183:	mov	eax, dword ptr [rbp - 0x4c]
0x400186:	cdqe	
0x400188:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40018c:	mov	edi, eax
0x40018e:	call	0x500048
<Block for 0x4000aa, 15 bytes>
0x4000aa:	mov	eax, dword ptr [rbp - 0x54]
0x4000ad:	mov	esi, 5
0x4000b2:	mov	edi, eax
0x4000b4:	call	0x500020
<Block for 0x400125, 3 bytes>
0x400125:	nop	
0x400126:	jmp	0x40012c
<Block for 0x4001a1, 16 bytes>
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	xor	rax, qword ptr fs:[0x28]
0x4001af:	je	0x4001b6
<Block for 0x400193, 2 bytes>
0x400193:	jmp	0x4001a1
<Block for 0x4000b9, 10 bytes>
0x4000b9:	cmp	eax, -1
0x4000bc:	sete	al
0x4000bf:	test	al, al
0x4000c1:	jne	0x400128
<Block for 0x4001b6, 2 bytes>
0x4001b6:	leave	
0x4001b7:	ret	
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500058
<Block for 0x4000c3, 20 bytes>
0x4000c3:	mov	eax, dword ptr [rbp - 0x54]
0x4000c6:	mov	edx, 0
0x4000cb:	mov	esi, 0
0x4000d0:	mov	edi, eax
0x4000d2:	call	0x500028
<Block for 0x400128, 3 bytes>
0x400128:	nop	
0x400129:	jmp	0x40012c
<Block for 0x4000d7, 9 bytes>
0x4000d7:	mov	dword ptr [rbp - 0x58], eax
0x4000da:	cmp	dword ptr [rbp - 0x58], -1
0x4000de:	je	0x40012b
<Block for 0x4000e0, 24 bytes>
0x4000e0:	lea	rsi, [rbp - 0x16]
0x4000e4:	mov	eax, dword ptr [rbp - 0x58]
0x4000e7:	mov	ecx, 0
0x4000ec:	mov	edx, 0xd
0x4000f1:	mov	edi, eax
0x4000f3:	call	0x500030
<Block for 0x40012b, 1 bytes>
0x40012b:	nop	
<Block for 0x4000f8, 9 bytes>
0x4000f8:	mov	dword ptr [rbp - 0x50], eax
0x4000fb:	cmp	dword ptr [rbp - 0x50], -1
0x4000ff:	je	0x40012c
<Block for 0x400101, 6 bytes>
0x400101:	cmp	dword ptr [rbp - 0x50], 0
0x400105:	je	0x40012c
<Block for 0x400107, 22 bytes>
0x400107:	mov	eax, dword ptr [rbp - 0x50]
0x40010a:	cdqe	
0x40010c:	mov	byte ptr [rbp + rax - 0x16], 0
0x400111:	lea	rax, [rbp - 0x16]
0x400115:	mov	rdi, rax
0x400118:	call	0x500038
<Block for 0x40011d, 5 bytes>
0x40011d:	mov	dword ptr [rbp - 0x5c], eax
0x400120:	jmp	0x40012c
