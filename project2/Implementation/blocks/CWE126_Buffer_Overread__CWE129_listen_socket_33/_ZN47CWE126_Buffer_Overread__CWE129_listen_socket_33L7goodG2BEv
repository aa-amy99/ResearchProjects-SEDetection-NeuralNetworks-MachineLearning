<Block for 0x4001b8, 104 bytes>
0x4001b8:	endbr64	
0x4001bc:	push	rbp
0x4001bd:	mov	rbp, rsp
0x4001c0:	sub	rsp, 0x40
0x4001c4:	mov	rax, qword ptr fs:[0x28]
0x4001cd:	mov	qword ptr [rbp - 8], rax
0x4001d1:	xor	eax, eax
0x4001d3:	lea	rax, [rbp - 0x40]
0x4001d7:	mov	qword ptr [rbp - 0x38], rax
0x4001db:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4001e2:	mov	dword ptr [rbp - 0x40], 7
0x4001e9:	mov	rax, qword ptr [rbp - 0x38]
0x4001ed:	mov	eax, dword ptr [rax]
0x4001ef:	mov	dword ptr [rbp - 0x3c], eax
0x4001f2:	mov	qword ptr [rbp - 0x30], 0
0x4001fa:	mov	qword ptr [rbp - 0x28], 0
0x400202:	mov	qword ptr [rbp - 0x20], 0
0x40020a:	mov	qword ptr [rbp - 0x18], 0
0x400212:	mov	qword ptr [rbp - 0x10], 0
0x40021a:	cmp	dword ptr [rbp - 0x3c], 0
0x40021e:	js	0x400232
<Block for 0x400232, 12 bytes>
0x400232:	lea	rdi, [rip + 0x1ff]
0x400239:	call	0x500050
<Block for 0x400220, 16 bytes>
0x400220:	mov	eax, dword ptr [rbp - 0x3c]
0x400223:	cdqe	
0x400225:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400229:	mov	edi, eax
0x40022b:	call	0x500048
<Block for 0x40023e, 2 bytes>
0x40023e:	jmp	0x40024c
<Block for 0x400230, 2 bytes>
0x400230:	jmp	0x40024c
<Block for 0x40024c, 15 bytes>
0x40024c:	mov	rax, qword ptr [rbp - 8]
0x400250:	xor	rax, qword ptr fs:[0x28]
0x400259:	je	0x400260
<Block for 0x400260, 2 bytes>
0x400260:	leave	
0x400261:	ret	
<Block for 0x40025b, 5 bytes>
0x40025b:	call	0x500058
