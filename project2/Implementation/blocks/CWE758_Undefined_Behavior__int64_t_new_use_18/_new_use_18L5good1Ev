<Block for 0x40004f, 35 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x20
0x40005b:	nop	
0x40005c:	endbr64	
0x400060:	mov	qword ptr [rbp - 0x18], 5
0x400068:	mov	edi, 8
0x40006d:	call	0x500000
<Block for 0x400072, 38 bytes>
0x400072:	mov	qword ptr [rbp - 0x10], rax
0x400076:	mov	rax, qword ptr [rbp - 0x10]
0x40007a:	mov	rdx, qword ptr [rbp - 0x18]
0x40007e:	mov	qword ptr [rax], rdx
0x400081:	mov	rax, qword ptr [rbp - 0x10]
0x400085:	mov	rax, qword ptr [rax]
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	mov	rax, qword ptr [rbp - 8]
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x400098, 9 bytes>
0x400098:	mov	rax, qword ptr [rbp - 0x10]
0x40009c:	test	rax, rax
0x40009f:	je	0x4000ae
<Block for 0x4000ae, 3 bytes>
0x4000ae:	nop	
0x4000af:	leave	
0x4000b0:	ret	
<Block for 0x4000a1, 13 bytes>
0x4000a1:	mov	esi, 8
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500008
