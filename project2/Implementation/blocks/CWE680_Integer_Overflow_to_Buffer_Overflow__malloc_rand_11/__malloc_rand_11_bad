<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400014:	mov	eax, 0
0x400019:	call	0x500000
<Block for 0x40001e, 4 bytes>
0x40001e:	test	eax, eax
0x400020:	je	0x40006b
<Block for 0x40006b, 17 bytes>
0x40006b:	mov	eax, dword ptr [rbp - 0x24]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x400022, 5 bytes>
0x400022:	call	0x500008
<Block for 0x40007c, 11 bytes>
0x40007c:	mov	qword ptr [rbp - 0x18], rax
0x400080:	cmp	qword ptr [rbp - 0x18], 0
0x400085:	jne	0x400091
<Block for 0x400027, 7 bytes>
0x400027:	and	eax, 1
0x40002a:	test	eax, eax
0x40002c:	je	0x40004b
<Block for 0x400087, 10 bytes>
0x400087:	mov	edi, 0xffffffff
0x40008c:	call	0x500018
<Block for 0x400091, 10 bytes>
0x400091:	mov	qword ptr [rbp - 0x20], 0
0x400099:	jmp	0x4000b9
<Block for 0x40004b, 5 bytes>
0x40004b:	call	0x500008
<Block for 0x40002e, 5 bytes>
0x40002e:	call	0x500008
<Block for 0x4000b9, 11 bytes>
0x4000b9:	mov	eax, dword ptr [rbp - 0x24]
0x4000bc:	cdqe	
0x4000be:	cmp	qword ptr [rbp - 0x20], rax
0x4000c2:	jb	0x40009b
<Block for 0x400050, 10 bytes>
0x400050:	shl	eax, 0x1e
0x400053:	mov	ebx, eax
0x400055:	call	0x500008
<Block for 0x400033, 10 bytes>
0x400033:	shl	eax, 0x1e
0x400036:	mov	ebx, eax
0x400038:	call	0x500008
<Block for 0x40009b, 41 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 0x20]
0x40009f:	lea	rdx, [rax*4]
0x4000a7:	mov	rax, qword ptr [rbp - 0x18]
0x4000ab:	add	rax, rdx
0x4000ae:	mov	dword ptr [rax], 0
0x4000b4:	add	qword ptr [rbp - 0x20], 1
0x4000b9:	mov	eax, dword ptr [rbp - 0x24]
0x4000bc:	cdqe	
0x4000be:	cmp	qword ptr [rbp - 0x20], rax
0x4000c2:	jb	0x40009b
<Block for 0x4000c4, 13 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x18]
0x4000c8:	mov	eax, dword ptr [rax]
0x4000ca:	mov	edi, eax
0x4000cc:	call	0x500020
<Block for 0x40005a, 10 bytes>
0x40005a:	shl	eax, 0xf
0x40005d:	xor	ebx, eax
0x40005f:	call	0x500008
<Block for 0x40003d, 10 bytes>
0x40003d:	shl	eax, 0xf
0x400040:	xor	ebx, eax
0x400042:	call	0x500008
<Block for 0x4000d1, 12 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x18]
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500028
<Block for 0x400064, 24 bytes>
0x400064:	xor	eax, ebx
0x400066:	not	eax
0x400068:	mov	dword ptr [rbp - 0x24], eax
0x40006b:	mov	eax, dword ptr [rbp - 0x24]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
<Block for 0x400047, 4 bytes>
0x400047:	xor	eax, ebx
0x400049:	jmp	0x400068
<Block for 0x4000dd, 8 bytes>
0x4000dd:	nop	
0x4000de:	add	rsp, 0x28
0x4000e2:	pop	rbx
0x4000e3:	pop	rbp
0x4000e4:	ret	
<Block for 0x400068, 20 bytes>
0x400068:	mov	dword ptr [rbp - 0x24], eax
0x40006b:	mov	eax, dword ptr [rbp - 0x24]
0x40006e:	cdqe	
0x400070:	shl	rax, 2
0x400074:	mov	rdi, rax
0x400077:	call	0x500010
