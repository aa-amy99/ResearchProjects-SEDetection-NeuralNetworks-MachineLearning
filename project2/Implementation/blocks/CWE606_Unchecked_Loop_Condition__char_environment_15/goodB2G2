<Block for 0x4002d1, 159 bytes>
0x4002d1:	endbr64	
0x4002d5:	push	rbp
0x4002d6:	mov	rbp, rsp
0x4002d9:	sub	rsp, 0xa0
0x4002e0:	mov	rax, qword ptr fs:[0x28]
0x4002e9:	mov	qword ptr [rbp - 8], rax
0x4002ed:	xor	eax, eax
0x4002ef:	mov	qword ptr [rbp - 0x70], 0
0x4002f7:	mov	qword ptr [rbp - 0x68], 0
0x4002ff:	mov	qword ptr [rbp - 0x60], 0
0x400307:	mov	qword ptr [rbp - 0x58], 0
0x40030f:	mov	qword ptr [rbp - 0x50], 0
0x400317:	mov	qword ptr [rbp - 0x48], 0
0x40031f:	mov	qword ptr [rbp - 0x40], 0
0x400327:	mov	qword ptr [rbp - 0x38], 0
0x40032f:	mov	qword ptr [rbp - 0x30], 0
0x400337:	mov	qword ptr [rbp - 0x28], 0
0x40033f:	mov	qword ptr [rbp - 0x20], 0
0x400347:	mov	qword ptr [rbp - 0x18], 0
0x40034f:	mov	dword ptr [rbp - 0x10], 0
0x400356:	lea	rax, [rbp - 0x70]
0x40035a:	mov	qword ptr [rbp - 0x88], rax
0x400361:	mov	rax, qword ptr [rbp - 0x88]
0x400368:	mov	rdi, rax
0x40036b:	call	0x500000
<Block for 0x400370, 16 bytes>
0x400370:	mov	qword ptr [rbp - 0x80], rax
0x400374:	lea	rdi, [rip + 0x300]
0x40037b:	call	0x500008
<Block for 0x400380, 11 bytes>
0x400380:	mov	qword ptr [rbp - 0x78], rax
0x400384:	cmp	qword ptr [rbp - 0x78], 0
0x400389:	je	0x4003b4
<Block for 0x4003b4, 35 bytes>
0x4003b4:	nop	
0x4003b5:	lea	rdx, [rbp - 0x94]
0x4003bc:	mov	rax, qword ptr [rbp - 0x88]
0x4003c3:	lea	rsi, [rip + 0x2b5]
0x4003ca:	mov	rdi, rax
0x4003cd:	mov	eax, 0
0x4003d2:	call	0x500018
<Block for 0x40038b, 41 bytes>
0x40038b:	mov	eax, 0x63
0x400390:	sub	rax, qword ptr [rbp - 0x80]
0x400394:	mov	rdx, rax
0x400397:	mov	rcx, qword ptr [rbp - 0x88]
0x40039e:	mov	rax, qword ptr [rbp - 0x80]
0x4003a2:	add	rcx, rax
0x4003a5:	mov	rax, qword ptr [rbp - 0x78]
0x4003a9:	mov	rsi, rax
0x4003ac:	mov	rdi, rcx
0x4003af:	call	0x500010
<Block for 0x4003d7, 5 bytes>
0x4003d7:	cmp	eax, 1
0x4003da:	jne	0x400428
<Block for 0x4003dc, 13 bytes>
0x4003dc:	mov	eax, dword ptr [rbp - 0x94]
0x4003e2:	cmp	eax, 0x270f
0x4003e7:	jg	0x400428
<Block for 0x400428, 17 bytes>
0x400428:	nop	
0x400429:	nop	
0x40042a:	mov	rax, qword ptr [rbp - 8]
0x40042e:	xor	rax, qword ptr fs:[0x28]
0x400437:	je	0x40043e
<Block for 0x4003e9, 22 bytes>
0x4003e9:	mov	dword ptr [rbp - 0x8c], 0
0x4003f3:	mov	dword ptr [rbp - 0x90], 0
0x4003fd:	jmp	0x40040d
<Block for 0x40043e, 2 bytes>
0x40043e:	leave	
0x40043f:	ret	
<Block for 0x400439, 5 bytes>
0x400439:	call	0x500028
<Block for 0x40040d, 14 bytes>
0x40040d:	mov	eax, dword ptr [rbp - 0x94]
0x400413:	cmp	dword ptr [rbp - 0x90], eax
0x400419:	jl	0x4003ff
<Block for 0x4003ff, 28 bytes>
0x4003ff:	add	dword ptr [rbp - 0x8c], 1
0x400406:	add	dword ptr [rbp - 0x90], 1
0x40040d:	mov	eax, dword ptr [rbp - 0x94]
0x400413:	cmp	dword ptr [rbp - 0x90], eax
0x400419:	jl	0x4003ff
<Block for 0x40041b, 13 bytes>
0x40041b:	mov	eax, dword ptr [rbp - 0x8c]
0x400421:	mov	edi, eax
0x400423:	call	0x500020
