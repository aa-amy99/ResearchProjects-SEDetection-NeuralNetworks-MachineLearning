<Block for 0x400046, 22 bytes>
0x400046:	endbr64	
0x40004a:	push	rbp
0x40004b:	mov	rbp, rsp
0x40004e:	sub	rsp, 0x10
0x400052:	nop	
0x400053:	endbr64	
0x400057:	call	0x500010
<Block for 0x40005c, 28 bytes>
0x40005c:	mov	dword ptr [rax], 0
0x400062:	mov	edx, 0
0x400067:	mov	esi, 0
0x40006c:	lea	rdi, [rip + 0x5b]
0x400073:	call	0x500000
<Block for 0x400078, 9 bytes>
0x400078:	mov	qword ptr [rbp - 8], rax
0x40007c:	call	0x500010
<Block for 0x400081, 7 bytes>
0x400081:	mov	eax, dword ptr [rax]
0x400083:	cmp	eax, 0x22
0x400086:	jne	0x40009e
<Block for 0x400088, 12 bytes>
0x400088:	lea	rdi, [rip + 0x50]
0x40008f:	call	0x500018
<Block for 0x40009e, 24 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	mov	rsi, rax
0x4000a5:	lea	rdi, [rip + 0x2e]
0x4000ac:	mov	eax, 0
0x4000b1:	call	0x500008
<Block for 0x400094, 10 bytes>
0x400094:	mov	edi, 1
0x400099:	call	0x500020
<Block for 0x4000b6, 3 bytes>
0x4000b6:	nop	
0x4000b7:	leave	
0x4000b8:	ret	
