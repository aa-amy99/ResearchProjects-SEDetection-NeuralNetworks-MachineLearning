<Block for 0x40008a, 45 bytes>
0x40008a:	endbr64	
0x40008e:	push	rbp
0x40008f:	mov	rbp, rsp
0x400092:	sub	rsp, 0x10
0x400096:	mov	rax, qword ptr fs:[0x28]
0x40009f:	mov	qword ptr [rbp - 8], rax
0x4000a3:	xor	eax, eax
0x4000a5:	mov	qword ptr [rbp - 0x10], 0
0x4000ad:	mov	edi, 0x64
0x4000b2:	call	0x500000
<Block for 0x4000b7, 26 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x10], rax
0x4000bb:	mov	rax, qword ptr [rbp - 0x10]
0x4000bf:	mov	edx, 0x63
0x4000c4:	mov	esi, 0x41
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500008
<Block for 0x4000d1, 23 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x10]
0x4000d5:	add	rax, 0x63
0x4000d9:	mov	byte ptr [rax], 0
0x4000dc:	lea	rax, [rbp - 0x10]
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500028
<Block for 0x4000e8, 16 bytes>
0x4000e8:	nop	
0x4000e9:	mov	rax, qword ptr [rbp - 8]
0x4000ed:	xor	rax, qword ptr fs:[0x28]
0x4000f6:	je	0x4000fd
<Block for 0x4000fd, 2 bytes>
0x4000fd:	leave	
0x4000fe:	ret	
<Block for 0x4000f8, 5 bytes>
0x4000f8:	call	0x500020
