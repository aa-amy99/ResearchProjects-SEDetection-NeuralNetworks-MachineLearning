<Block for 0x400118, 40 bytes>
0x400118:	endbr64	
0x40011c:	push	rbp
0x40011d:	mov	rbp, rsp
0x400120:	push	rbx
0x400121:	sub	rsp, 0x58
0x400125:	mov	rax, qword ptr fs:[0x28]
0x40012e:	mov	qword ptr [rbp - 0x18], rax
0x400132:	xor	eax, eax
0x400134:	lea	rax, [rbp - 0x50]
0x400138:	mov	rdi, rax
0x40013b:	call	0x400428
<Block for 0x400140, 34 bytes>
0x400140:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400147:	mov	edx, 0x180
0x40014c:	mov	esi, 0x42
0x400151:	lea	rdi, [rip + 0x225]
0x400158:	mov	eax, 0
0x40015d:	call	0x500000
<Block for 0x400162, 22 bytes>
0x400162:	mov	dword ptr [rbp - 0x54], eax
0x400165:	lea	rdx, [rbp - 0x54]
0x400169:	lea	rax, [rbp - 0x50]
0x40016d:	mov	rsi, rdx
0x400170:	mov	rdi, rax
0x400173:	call	0x400532
<Block for 0x400178, 19 bytes>
0x400178:	lea	rdx, [rbp - 0x54]
0x40017c:	lea	rax, [rbp - 0x50]
0x400180:	mov	rsi, rdx
0x400183:	mov	rdi, rax
0x400186:	call	0x400532
<Block for 0x40018b, 19 bytes>
0x40018b:	lea	rdx, [rbp - 0x54]
0x40018f:	lea	rax, [rbp - 0x50]
0x400193:	mov	rsi, rdx
0x400196:	mov	rdi, rax
0x400199:	call	0x400532
<Block for 0x40019e, 19 bytes>
0x40019e:	lea	rdx, [rbp - 0x50]
0x4001a2:	lea	rax, [rbp - 0x30]
0x4001a6:	mov	rsi, rdx
0x4001a9:	mov	rdi, rax
0x4001ac:	call	0x40056c
<Block for 0x4001b1, 12 bytes>
0x4001b1:	lea	rax, [rbp - 0x30]
0x4001b5:	mov	rdi, rax
0x4001b8:	call	0x500028
<Block for 0x4001bd, 12 bytes>
0x4001bd:	lea	rax, [rbp - 0x30]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x400448
<Block for 0x4001c9, 12 bytes>
0x4001c9:	lea	rax, [rbp - 0x50]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x400448
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 0x18]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x40021f
<Block for 0x40021f, 7 bytes>
0x40021f:	add	rsp, 0x58
0x400223:	pop	rbx
0x400224:	pop	rbp
0x400225:	ret	
<Block for 0x4001e5, 2 bytes>
0x4001e5:	jmp	0x40021a
<Block for 0x40021a, 5 bytes>
0x40021a:	call	0x500020
