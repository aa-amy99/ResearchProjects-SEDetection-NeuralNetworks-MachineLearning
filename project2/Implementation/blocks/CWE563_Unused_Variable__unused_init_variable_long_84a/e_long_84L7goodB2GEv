<Block for 0x400078, 25 bytes>
0x400078:	endbr64	
0x40007c:	push	rbp
0x40007d:	mov	rbp, rsp
0x400080:	push	r12
0x400082:	push	rbx
0x400083:	sub	rsp, 0x10
0x400087:	mov	edi, 8
0x40008c:	call	0x500000
<Block for 0x400091, 18 bytes>
0x400091:	mov	rbx, rax
0x400094:	mov	rax, qword ptr [rbp - 0x20]
0x400098:	mov	rsi, rax
0x40009b:	mov	rdi, rbx
0x40009e:	call	0x500028
<Block for 0x4000a3, 13 bytes>
0x4000a3:	mov	qword ptr [rbp - 0x18], rbx
0x4000a7:	mov	rbx, qword ptr [rbp - 0x18]
0x4000ab:	test	rbx, rbx
0x4000ae:	je	0x4000e6
<Block for 0x4000e6, 10 bytes>
0x4000e6:	nop	
0x4000e7:	add	rsp, 0x10
0x4000eb:	pop	rbx
0x4000ec:	pop	r12
0x4000ee:	pop	rbp
0x4000ef:	ret	
<Block for 0x4000b0, 8 bytes>
0x4000b0:	mov	rdi, rbx
0x4000b3:	call	0x500030
<Block for 0x4000b8, 13 bytes>
0x4000b8:	mov	esi, 8
0x4000bd:	mov	rdi, rbx
0x4000c0:	call	0x500018
<Block for 0x4000c5, 2 bytes>
0x4000c5:	jmp	0x4000e6
