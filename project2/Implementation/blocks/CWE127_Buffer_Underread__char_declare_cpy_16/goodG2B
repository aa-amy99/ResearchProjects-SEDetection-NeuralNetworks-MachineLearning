<Block for 0x4000ad, 55 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0x150
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	lea	rax, [rbp - 0x140]
0x4000d2:	mov	edx, 0x63
0x4000d7:	mov	esi, 0x41
0x4000dc:	mov	rdi, rax
0x4000df:	call	0x500000
<Block for 0x4000e4, 47 bytes>
0x4000e4:	mov	byte ptr [rbp - 0xdd], 0
0x4000eb:	lea	rax, [rbp - 0x140]
0x4000f2:	mov	qword ptr [rbp - 0x148], rax
0x4000f9:	nop	
0x4000fa:	lea	rax, [rbp - 0xd0]
0x400101:	mov	edx, 0xc7
0x400106:	mov	esi, 0x43
0x40010b:	mov	rdi, rax
0x40010e:	call	0x500000
<Block for 0x400113, 29 bytes>
0x400113:	mov	byte ptr [rbp - 9], 0
0x400117:	mov	rdx, qword ptr [rbp - 0x148]
0x40011e:	lea	rax, [rbp - 0xd0]
0x400125:	mov	rsi, rdx
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x400130, 15 bytes>
0x400130:	lea	rax, [rbp - 0xd0]
0x400137:	mov	rdi, rax
0x40013a:	call	0x500010
<Block for 0x40013f, 16 bytes>
0x40013f:	nop	
0x400140:	mov	rax, qword ptr [rbp - 8]
0x400144:	xor	rax, qword ptr fs:[0x28]
0x40014d:	je	0x400154
<Block for 0x400154, 2 bytes>
0x400154:	leave	
0x400155:	ret	
<Block for 0x40014f, 5 bytes>
0x40014f:	call	0x500018
