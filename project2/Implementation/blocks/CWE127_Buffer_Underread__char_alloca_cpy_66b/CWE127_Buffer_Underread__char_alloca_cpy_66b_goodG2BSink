<Block for 0x400093, 80 bytes>
0x400093:	endbr64	
0x400097:	push	rbp
0x400098:	mov	rbp, rsp
0x40009b:	sub	rsp, 0xf0
0x4000a2:	mov	qword ptr [rbp - 0xe8], rdi
0x4000a9:	mov	rax, qword ptr fs:[0x28]
0x4000b2:	mov	qword ptr [rbp - 8], rax
0x4000b6:	xor	eax, eax
0x4000b8:	mov	rax, qword ptr [rbp - 0xe8]
0x4000bf:	mov	rax, qword ptr [rax + 0x10]
0x4000c3:	mov	qword ptr [rbp - 0xd8], rax
0x4000ca:	lea	rax, [rbp - 0xd0]
0x4000d1:	mov	edx, 0xc7
0x4000d6:	mov	esi, 0x43
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500000
<Block for 0x4000e3, 29 bytes>
0x4000e3:	mov	byte ptr [rbp - 9], 0
0x4000e7:	mov	rdx, qword ptr [rbp - 0xd8]
0x4000ee:	lea	rax, [rbp - 0xd0]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500008
<Block for 0x400100, 15 bytes>
0x400100:	lea	rax, [rbp - 0xd0]
0x400107:	mov	rdi, rax
0x40010a:	call	0x500010
<Block for 0x40010f, 16 bytes>
0x40010f:	nop	
0x400110:	mov	rax, qword ptr [rbp - 8]
0x400114:	xor	rax, qword ptr fs:[0x28]
0x40011d:	je	0x400124
<Block for 0x400124, 2 bytes>
0x400124:	leave	
0x400125:	ret	
<Block for 0x40011f, 5 bytes>
0x40011f:	call	0x500018
