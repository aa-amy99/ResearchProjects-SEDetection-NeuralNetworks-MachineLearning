<Block for 0x400200, 84 bytes>
0x400200:	endbr64	
0x400204:	push	rbp
0x400205:	mov	rbp, rsp
0x400208:	sub	rsp, 0xa0
0x40020f:	mov	rax, qword ptr fs:[0x28]
0x400218:	mov	qword ptr [rbp - 8], rax
0x40021c:	xor	eax, eax
0x40021e:	mov	eax, 0x10
0x400223:	sub	rax, 1
0x400227:	add	rax, 0x3a
0x40022b:	mov	ecx, 0x10
0x400230:	mov	edx, 0
0x400235:	div	rcx
0x400238:	imul	rax, rax, 0x10
0x40023c:	mov	rdx, rax
0x40023f:	and	rdx, 0xfffffffffffff000
0x400246:	mov	rcx, rsp
0x400249:	sub	rcx, rdx
0x40024c:	mov	rdx, rcx
0x40024f:	cmp	rsp, rdx
0x400252:	je	0x400266
<Block for 0x400266, 26 bytes>
0x400266:	mov	rdx, rax
0x400269:	and	edx, 0xfff
0x40026f:	sub	rsp, rdx
0x400272:	mov	rdx, rax
0x400275:	and	edx, 0xfff
0x40027b:	test	rdx, rdx
0x40027e:	je	0x400290
<Block for 0x400254, 18 bytes>
0x400254:	sub	rsp, 0x1000
0x40025b:	or	qword ptr [rsp + 0xff8], 0
0x400264:	jmp	0x40024f
<Block for 0x400290, 76 bytes>
0x400290:	mov	rax, rsp
0x400293:	add	rax, 0xf
0x400297:	shr	rax, 4
0x40029b:	shl	rax, 4
0x40029f:	mov	qword ptr [rbp - 0x90], rax
0x4002a6:	mov	eax, 0x10
0x4002ab:	sub	rax, 1
0x4002af:	add	rax, 0x6c
0x4002b3:	mov	edi, 0x10
0x4002b8:	mov	edx, 0
0x4002bd:	div	rdi
0x4002c0:	imul	rax, rax, 0x10
0x4002c4:	mov	rdx, rax
0x4002c7:	and	rdx, 0xfffffffffffff000
0x4002ce:	mov	rsi, rsp
0x4002d1:	sub	rsi, rdx
0x4002d4:	mov	rdx, rsi
0x4002d7:	cmp	rsp, rdx
0x4002da:	je	0x4002ee
<Block for 0x400280, 92 bytes>
0x400280:	and	eax, 0xfff
0x400285:	sub	rax, 8
0x400289:	add	rax, rsp
0x40028c:	or	qword ptr [rax], 0
0x400290:	mov	rax, rsp
0x400293:	add	rax, 0xf
0x400297:	shr	rax, 4
0x40029b:	shl	rax, 4
0x40029f:	mov	qword ptr [rbp - 0x90], rax
0x4002a6:	mov	eax, 0x10
0x4002ab:	sub	rax, 1
0x4002af:	add	rax, 0x6c
0x4002b3:	mov	edi, 0x10
0x4002b8:	mov	edx, 0
0x4002bd:	div	rdi
0x4002c0:	imul	rax, rax, 0x10
0x4002c4:	mov	rdx, rax
0x4002c7:	and	rdx, 0xfffffffffffff000
0x4002ce:	mov	rsi, rsp
0x4002d1:	sub	rsi, rdx
0x4002d4:	mov	rdx, rsi
0x4002d7:	cmp	rsp, rdx
0x4002da:	je	0x4002ee
<Block for 0x40024f, 5 bytes>
0x40024f:	cmp	rsp, rdx
0x400252:	je	0x400266
<Block for 0x4002ee, 26 bytes>
0x4002ee:	mov	rdx, rax
0x4002f1:	and	edx, 0xfff
0x4002f7:	sub	rsp, rdx
0x4002fa:	mov	rdx, rax
0x4002fd:	and	edx, 0xfff
0x400303:	test	rdx, rdx
0x400306:	je	0x400318
<Block for 0x4002dc, 18 bytes>
0x4002dc:	sub	rsp, 0x1000
0x4002e3:	or	qword ptr [rsp + 0xff8], 0
0x4002ec:	jmp	0x4002d7
<Block for 0x400318, 47 bytes>
0x400318:	mov	rax, rsp
0x40031b:	add	rax, 0xf
0x40031f:	shr	rax, 4
0x400323:	shl	rax, 4
0x400327:	mov	qword ptr [rbp - 0x88], rax
0x40032e:	mov	rax, qword ptr [rbp - 0x90]
0x400335:	mov	edx, 0x31
0x40033a:	mov	esi, 0x41
0x40033f:	mov	rdi, rax
0x400342:	call	0x500000
<Block for 0x400308, 63 bytes>
0x400308:	and	eax, 0xfff
0x40030d:	sub	rax, 8
0x400311:	add	rax, rsp
0x400314:	or	qword ptr [rax], 0
0x400318:	mov	rax, rsp
0x40031b:	add	rax, 0xf
0x40031f:	shr	rax, 4
0x400323:	shl	rax, 4
0x400327:	mov	qword ptr [rbp - 0x88], rax
0x40032e:	mov	rax, qword ptr [rbp - 0x90]
0x400335:	mov	edx, 0x31
0x40033a:	mov	esi, 0x41
0x40033f:	mov	rdi, rax
0x400342:	call	0x500000
<Block for 0x4002d7, 5 bytes>
0x4002d7:	cmp	rsp, rdx
0x4002da:	je	0x4002ee
<Block for 0x400347, 39 bytes>
0x400347:	mov	rax, qword ptr [rbp - 0x90]
0x40034e:	add	rax, 0x31
0x400352:	mov	byte ptr [rax], 0
0x400355:	mov	rax, qword ptr [rbp - 0x88]
0x40035c:	mov	edx, 0x63
0x400361:	mov	esi, 0x41
0x400366:	mov	rdi, rax
0x400369:	call	0x500000
<Block for 0x40036e, 69 bytes>
0x40036e:	mov	rax, qword ptr [rbp - 0x88]
0x400375:	add	rax, 0x63
0x400379:	mov	byte ptr [rax], 0
0x40037c:	mov	rax, qword ptr [rbp - 0x88]
0x400383:	mov	qword ptr [rbp - 0x80], rax
0x400387:	mov	rax, qword ptr [rbp - 0x80]
0x40038b:	mov	qword ptr [rbp - 0x98], rax
0x400392:	mov	rax, qword ptr [rbp - 0x98]
0x400399:	mov	qword ptr [rbp - 0x78], rax
0x40039d:	lea	rax, [rbp - 0x70]
0x4003a1:	mov	edx, 0x63
0x4003a6:	mov	esi, 0x43
0x4003ab:	mov	rdi, rax
0x4003ae:	call	0x500000
<Block for 0x4003b3, 16 bytes>
0x4003b3:	mov	byte ptr [rbp - 0xd], 0
0x4003b7:	lea	rax, [rbp - 0x70]
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x500008
<Block for 0x4003c3, 22 bytes>
0x4003c3:	mov	rdx, rax
0x4003c6:	mov	rcx, qword ptr [rbp - 0x78]
0x4003ca:	lea	rax, [rbp - 0x70]
0x4003ce:	mov	rsi, rcx
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x500010
<Block for 0x4003d9, 16 bytes>
0x4003d9:	mov	byte ptr [rbp - 0xd], 0
0x4003dd:	lea	rax, [rbp - 0x70]
0x4003e1:	mov	rdi, rax
0x4003e4:	call	0x500018
<Block for 0x4003e9, 16 bytes>
0x4003e9:	nop	
0x4003ea:	mov	rax, qword ptr [rbp - 8]
0x4003ee:	xor	rax, qword ptr fs:[0x28]
0x4003f7:	je	0x4003fe
<Block for 0x4003fe, 2 bytes>
0x4003fe:	leave	
0x4003ff:	ret	
<Block for 0x4003f9, 5 bytes>
0x4003f9:	call	0x500020
