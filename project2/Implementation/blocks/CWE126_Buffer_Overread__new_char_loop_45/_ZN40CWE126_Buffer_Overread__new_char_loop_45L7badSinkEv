<Block for 0x400000, 63 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	rax, qword ptr [rip + 0x23b]
0x400025:	mov	qword ptr [rbp - 0x80], rax
0x400029:	lea	rax, [rbp - 0x70]
0x40002d:	mov	edx, 0x63
0x400032:	mov	esi, 0x43
0x400037:	mov	rdi, rax
0x40003a:	call	0x500000
<Block for 0x40003f, 16 bytes>
0x40003f:	mov	byte ptr [rbp - 0xd], 0
0x400043:	lea	rax, [rbp - 0x70]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500008
<Block for 0x40004f, 28 bytes>
0x40004f:	mov	qword ptr [rbp - 0x78], rax
0x400053:	mov	qword ptr [rbp - 0x88], 0
0x40005e:	mov	rax, qword ptr [rbp - 0x88]
0x400065:	cmp	rax, qword ptr [rbp - 0x78]
0x400069:	jae	0x400096
<Block for 0x40006b, 43 bytes>
0x40006b:	mov	rdx, qword ptr [rbp - 0x80]
0x40006f:	mov	rax, qword ptr [rbp - 0x88]
0x400076:	add	rax, rdx
0x400079:	movzx	eax, byte ptr [rax]
0x40007c:	lea	rcx, [rbp - 0x70]
0x400080:	mov	rdx, qword ptr [rbp - 0x88]
0x400087:	add	rdx, rcx
0x40008a:	mov	byte ptr [rdx], al
0x40008c:	add	qword ptr [rbp - 0x88], 1
0x400094:	jmp	0x40005e
<Block for 0x400096, 16 bytes>
0x400096:	mov	byte ptr [rbp - 0xd], 0
0x40009a:	lea	rax, [rbp - 0x70]
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x500010
<Block for 0x40005e, 13 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x88]
0x400065:	cmp	rax, qword ptr [rbp - 0x78]
0x400069:	jae	0x400096
<Block for 0x4000a6, 7 bytes>
0x4000a6:	cmp	qword ptr [rbp - 0x80], 0
0x4000ab:	je	0x4000b9
<Block for 0x4000b9, 16 bytes>
0x4000b9:	nop	
0x4000ba:	mov	rax, qword ptr [rbp - 8]
0x4000be:	xor	rax, qword ptr fs:[0x28]
0x4000c7:	je	0x4000ce
<Block for 0x4000ad, 12 bytes>
0x4000ad:	mov	rax, qword ptr [rbp - 0x80]
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500018
<Block for 0x4000ce, 2 bytes>
0x4000ce:	leave	
0x4000cf:	ret	
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500020
