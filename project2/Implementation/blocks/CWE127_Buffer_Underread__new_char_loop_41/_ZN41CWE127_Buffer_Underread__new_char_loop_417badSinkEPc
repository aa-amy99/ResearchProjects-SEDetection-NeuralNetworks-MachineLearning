<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	lea	rax, [rbp - 0x70]
0x400029:	mov	edx, 0x63
0x40002e:	mov	esi, 0x43
0x400033:	mov	rdi, rax
0x400036:	call	0x500000
<Block for 0x40003b, 19 bytes>
0x40003b:	mov	byte ptr [rbp - 0xd], 0
0x40003f:	mov	qword ptr [rbp - 0x78], 0
0x400047:	cmp	qword ptr [rbp - 0x78], 0x63
0x40004c:	ja	0x400073
<Block for 0x40004e, 37 bytes>
0x40004e:	mov	rdx, qword ptr [rbp - 0x88]
0x400055:	mov	rax, qword ptr [rbp - 0x78]
0x400059:	add	rax, rdx
0x40005c:	movzx	eax, byte ptr [rax]
0x40005f:	lea	rcx, [rbp - 0x70]
0x400063:	mov	rdx, qword ptr [rbp - 0x78]
0x400067:	add	rdx, rcx
0x40006a:	mov	byte ptr [rdx], al
0x40006c:	add	qword ptr [rbp - 0x78], 1
0x400071:	jmp	0x400047
<Block for 0x400073, 16 bytes>
0x400073:	mov	byte ptr [rbp - 0xd], 0
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	rdi, rax
0x40007e:	call	0x500008
<Block for 0x400047, 7 bytes>
0x400047:	cmp	qword ptr [rbp - 0x78], 0x63
0x40004c:	ja	0x400073
<Block for 0x400083, 16 bytes>
0x400083:	nop	
0x400084:	mov	rax, qword ptr [rbp - 8]
0x400088:	xor	rax, qword ptr fs:[0x28]
0x400091:	je	0x400098
<Block for 0x400098, 2 bytes>
0x400098:	leave	
0x400099:	ret	
<Block for 0x400093, 5 bytes>
0x400093:	call	0x500010
