<Block for 0x4000f8, 59 bytes>
0x4000f8:	endbr64	
0x4000fc:	push	rbp
0x4000fd:	mov	rbp, rsp
0x400100:	sub	rsp, 0x90
0x400107:	mov	qword ptr [rbp - 0x88], rdi
0x40010e:	mov	rax, qword ptr fs:[0x28]
0x400117:	mov	qword ptr [rbp - 8], rax
0x40011b:	xor	eax, eax
0x40011d:	lea	rax, [rbp - 0x70]
0x400121:	mov	edx, 0x63
0x400126:	mov	esi, 0x43
0x40012b:	mov	rdi, rax
0x40012e:	call	0x500000
<Block for 0x400133, 19 bytes>
0x400133:	mov	byte ptr [rbp - 0xd], 0
0x400137:	mov	qword ptr [rbp - 0x78], 0
0x40013f:	cmp	qword ptr [rbp - 0x78], 0x63
0x400144:	ja	0x40016b
<Block for 0x400146, 37 bytes>
0x400146:	mov	rdx, qword ptr [rbp - 0x88]
0x40014d:	mov	rax, qword ptr [rbp - 0x78]
0x400151:	add	rax, rdx
0x400154:	movzx	eax, byte ptr [rax]
0x400157:	lea	rcx, [rbp - 0x70]
0x40015b:	mov	rdx, qword ptr [rbp - 0x78]
0x40015f:	add	rdx, rcx
0x400162:	mov	byte ptr [rdx], al
0x400164:	add	qword ptr [rbp - 0x78], 1
0x400169:	jmp	0x40013f
<Block for 0x40016b, 16 bytes>
0x40016b:	mov	byte ptr [rbp - 0xd], 0
0x40016f:	lea	rax, [rbp - 0x70]
0x400173:	mov	rdi, rax
0x400176:	call	0x500008
<Block for 0x40013f, 7 bytes>
0x40013f:	cmp	qword ptr [rbp - 0x78], 0x63
0x400144:	ja	0x40016b
<Block for 0x40017b, 16 bytes>
0x40017b:	nop	
0x40017c:	mov	rax, qword ptr [rbp - 8]
0x400180:	xor	rax, qword ptr fs:[0x28]
0x400189:	je	0x400190
<Block for 0x400190, 2 bytes>
0x400190:	leave	
0x400191:	ret	
<Block for 0x40018b, 5 bytes>
0x40018b:	call	0x500010
