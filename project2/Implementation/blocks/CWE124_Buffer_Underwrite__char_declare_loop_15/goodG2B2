<Block for 0x4001ba, 55 bytes>
0x4001ba:	endbr64	
0x4001be:	push	rbp
0x4001bf:	mov	rbp, rsp
0x4001c2:	sub	rsp, 0xf0
0x4001c9:	mov	rax, qword ptr fs:[0x28]
0x4001d2:	mov	qword ptr [rbp - 8], rax
0x4001d6:	xor	eax, eax
0x4001d8:	lea	rax, [rbp - 0xe0]
0x4001df:	mov	edx, 0x63
0x4001e4:	mov	esi, 0x41
0x4001e9:	mov	rdi, rax
0x4001ec:	call	0x500000
<Block for 0x4001f1, 41 bytes>
0x4001f1:	mov	byte ptr [rbp - 0x7d], 0
0x4001f5:	lea	rax, [rbp - 0xe0]
0x4001fc:	mov	qword ptr [rbp - 0xe8], rax
0x400203:	nop	
0x400204:	lea	rax, [rbp - 0x70]
0x400208:	mov	edx, 0x63
0x40020d:	mov	esi, 0x43
0x400212:	mov	rdi, rax
0x400215:	call	0x500000
<Block for 0x40021a, 17 bytes>
0x40021a:	mov	byte ptr [rbp - 0xd], 0
0x40021e:	mov	qword ptr [rbp - 0xf0], 0
0x400229:	jmp	0x400257
<Block for 0x400257, 10 bytes>
0x400257:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40025f:	jbe	0x40022b
<Block for 0x40022b, 54 bytes>
0x40022b:	mov	rdx, qword ptr [rbp - 0xe8]
0x400232:	mov	rax, qword ptr [rbp - 0xf0]
0x400239:	add	rdx, rax
0x40023c:	lea	rcx, [rbp - 0x70]
0x400240:	mov	rax, qword ptr [rbp - 0xf0]
0x400247:	add	rax, rcx
0x40024a:	movzx	eax, byte ptr [rax]
0x40024d:	mov	byte ptr [rdx], al
0x40024f:	add	qword ptr [rbp - 0xf0], 1
0x400257:	cmp	qword ptr [rbp - 0xf0], 0x63
0x40025f:	jbe	0x40022b
<Block for 0x400261, 29 bytes>
0x400261:	mov	rax, qword ptr [rbp - 0xe8]
0x400268:	add	rax, 0x63
0x40026c:	mov	byte ptr [rax], 0
0x40026f:	mov	rax, qword ptr [rbp - 0xe8]
0x400276:	mov	rdi, rax
0x400279:	call	0x500008
<Block for 0x40027e, 16 bytes>
0x40027e:	nop	
0x40027f:	mov	rax, qword ptr [rbp - 8]
0x400283:	xor	rax, qword ptr fs:[0x28]
0x40028c:	je	0x400293
<Block for 0x400293, 2 bytes>
0x400293:	leave	
0x400294:	ret	
<Block for 0x40028e, 5 bytes>
0x40028e:	call	0x500010
