<Block for 0x400058, 17 bytes>
0x400058:	endbr64	
0x40005c:	push	rbp
0x40005d:	mov	rbp, rsp
0x400060:	sub	rsp, 0x20
0x400064:	call	0x500020
<Block for 0x400069, 9 bytes>
0x400069:	test	eax, eax
0x40006b:	setne	al
0x40006e:	test	al, al
0x400070:	je	0x400080
<Block for 0x400080, 18 bytes>
0x400080:	mov	qword ptr [rbp - 0x18], 5
0x400088:	mov	edi, 8
0x40008d:	call	0x500008
<Block for 0x400072, 12 bytes>
0x400072:	lea	rdi, [rip + 0xd8]
0x400079:	call	0x500028
<Block for 0x400092, 38 bytes>
0x400092:	mov	qword ptr [rbp - 0x10], rax
0x400096:	mov	rax, qword ptr [rbp - 0x10]
0x40009a:	mov	rdx, qword ptr [rbp - 0x18]
0x40009e:	mov	qword ptr [rax], rdx
0x4000a1:	mov	rax, qword ptr [rbp - 0x10]
0x4000a5:	mov	rax, qword ptr [rax]
0x4000a8:	mov	qword ptr [rbp - 8], rax
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	mov	rdi, rax
0x4000b3:	call	0x500018
<Block for 0x40007e, 2 bytes>
0x40007e:	jmp	0x4000ce
<Block for 0x4000b8, 9 bytes>
0x4000b8:	mov	rax, qword ptr [rbp - 0x10]
0x4000bc:	test	rax, rax
0x4000bf:	je	0x4000ce
<Block for 0x4000ce, 3 bytes>
0x4000ce:	nop	
0x4000cf:	leave	
0x4000d0:	ret	
<Block for 0x4000c1, 13 bytes>
0x4000c1:	mov	esi, 8
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500010
