<Block for 0x400130, 22 bytes>
0x400130:	endbr64	
0x400134:	push	rbp
0x400135:	mov	rbp, rsp
0x400138:	sub	rsp, 0x10
0x40013c:	mov	eax, 0
0x400141:	call	0x400000
<Block for 0x400146, 4 bytes>
0x400146:	test	eax, eax
0x400148:	je	0x4001b2
<Block for 0x4001b2, 3 bytes>
0x4001b2:	nop	
0x4001b3:	leave	
0x4001b4:	ret	
<Block for 0x40014a, 5 bytes>
0x40014a:	call	0x500000
<Block for 0x40014f, 62 bytes>
0x40014f:	mov	edx, eax
0x400151:	movsxd	rax, edx
0x400154:	imul	rax, rax, 0x55555556
0x40015b:	shr	rax, 0x20
0x40015f:	mov	rcx, rax
0x400162:	mov	eax, edx
0x400164:	sar	eax, 0x1f
0x400167:	mov	esi, ecx
0x400169:	sub	esi, eax
0x40016b:	mov	eax, esi
0x40016d:	mov	dword ptr [rbp - 4], eax
0x400170:	mov	ecx, dword ptr [rbp - 4]
0x400173:	mov	eax, ecx
0x400175:	add	eax, eax
0x400177:	add	eax, ecx
0x400179:	sub	edx, eax
0x40017b:	mov	eax, edx
0x40017d:	mov	dword ptr [rbp - 4], eax
0x400180:	mov	dword ptr [rbp - 8], 0
0x400187:	cmp	dword ptr [rbp - 4], 0
0x40018b:	jne	0x4001a0
<Block for 0x40018d, 12 bytes>
0x40018d:	lea	rdi, [rip + 0x40]
0x400194:	call	0x500008
<Block for 0x4001a0, 6 bytes>
0x4001a0:	cmp	dword ptr [rbp - 8], 0
0x4001a4:	je	0x4001b2
<Block for 0x400199, 13 bytes>
0x400199:	mov	dword ptr [rbp - 8], 1
0x4001a0:	cmp	dword ptr [rbp - 8], 0
0x4001a4:	je	0x4001b2
<Block for 0x4001a6, 12 bytes>
0x4001a6:	lea	rdi, [rip + 0x2e]
0x4001ad:	call	0x500008
