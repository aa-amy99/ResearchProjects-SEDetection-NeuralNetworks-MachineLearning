<Block for 0x4004b3, 169 bytes>
0x4004b3:	endbr64	
0x4004b7:	push	rbp
0x4004b8:	mov	rbp, rsp
0x4004bb:	sub	rsp, 0xa0
0x4004c2:	mov	rax, qword ptr fs:[0x28]
0x4004cb:	mov	qword ptr [rbp - 8], rax
0x4004cf:	xor	eax, eax
0x4004d1:	mov	qword ptr [rbp - 0x70], 0
0x4004d9:	mov	qword ptr [rbp - 0x68], 0
0x4004e1:	mov	qword ptr [rbp - 0x60], 0
0x4004e9:	mov	qword ptr [rbp - 0x58], 0
0x4004f1:	mov	qword ptr [rbp - 0x50], 0
0x4004f9:	mov	qword ptr [rbp - 0x48], 0
0x400501:	mov	qword ptr [rbp - 0x40], 0
0x400509:	mov	qword ptr [rbp - 0x38], 0
0x400511:	mov	qword ptr [rbp - 0x30], 0
0x400519:	mov	qword ptr [rbp - 0x28], 0
0x400521:	mov	qword ptr [rbp - 0x20], 0
0x400529:	mov	qword ptr [rbp - 0x18], 0
0x400531:	mov	dword ptr [rbp - 0x10], 0
0x400538:	lea	rax, [rbp - 0x70]
0x40053c:	mov	qword ptr [rbp - 0x98], rax
0x400543:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x40054d:	mov	rax, qword ptr [rbp - 0x98]
0x400554:	mov	rdi, rax
0x400557:	call	0x500018
<Block for 0x40055c, 27 bytes>
0x40055c:	mov	qword ptr [rbp - 0x90], rax
0x400563:	mov	edx, 6
0x400568:	mov	esi, 1
0x40056d:	mov	edi, 2
0x400572:	call	0x500020
<Block for 0x400577, 19 bytes>
0x400577:	mov	dword ptr [rbp - 0xa0], eax
0x40057d:	cmp	dword ptr [rbp - 0xa0], -1
0x400584:	je	0x4006b8
<Block for 0x4006b8, 3 bytes>
0x4006b8:	nop	
0x4006b9:	jmp	0x4006bc
<Block for 0x40058a, 22 bytes>
0x40058a:	lea	rax, [rbp - 0x80]
0x40058e:	mov	edx, 0x10
0x400593:	mov	esi, 0
0x400598:	mov	rdi, rax
0x40059b:	call	0x500028
<Block for 0x4006bc, 9 bytes>
0x4006bc:	cmp	dword ptr [rbp - 0xa0], -1
0x4006c3:	je	0x4006d2
<Block for 0x4005a0, 18 bytes>
0x4005a0:	mov	word ptr [rbp - 0x80], 2
0x4005a6:	lea	rdi, [rip + 0x18e]
0x4005ad:	call	0x500030
<Block for 0x4006d2, 24 bytes>
0x4006d2:	mov	rax, qword ptr [rbp - 0x98]
0x4006d9:	mov	qword ptr [rip + 0x50], rax
0x4006e0:	mov	eax, 0
0x4006e5:	call	0x400421
<Block for 0x4006c5, 13 bytes>
0x4006c5:	mov	eax, dword ptr [rbp - 0xa0]
0x4006cb:	mov	edi, eax
0x4006cd:	call	0x500058
<Block for 0x4005b2, 13 bytes>
0x4005b2:	mov	dword ptr [rbp - 0x7c], eax
0x4005b5:	mov	edi, 0x6987
0x4005ba:	call	0x500038
<Block for 0x4006ea, 16 bytes>
0x4006ea:	nop	
0x4006eb:	mov	rax, qword ptr [rbp - 8]
0x4006ef:	xor	rax, qword ptr fs:[0x28]
0x4006f8:	je	0x4006ff
<Block for 0x4005bf, 29 bytes>
0x4005bf:	mov	word ptr [rbp - 0x7e], ax
0x4005c3:	lea	rcx, [rbp - 0x80]
0x4005c7:	mov	eax, dword ptr [rbp - 0xa0]
0x4005cd:	mov	edx, 0x10
0x4005d2:	mov	rsi, rcx
0x4005d5:	mov	edi, eax
0x4005d7:	call	0x500040
<Block for 0x4006ff, 2 bytes>
0x4006ff:	leave	
0x400700:	ret	
<Block for 0x4006fa, 5 bytes>
0x4006fa:	call	0x500010
<Block for 0x4005dc, 9 bytes>
0x4005dc:	cmp	eax, -1
0x4005df:	je	0x4006bb
<Block for 0x4005e5, 51 bytes>
0x4005e5:	mov	eax, 0x63
0x4005ea:	sub	rax, qword ptr [rbp - 0x90]
0x4005f1:	mov	rdx, rax
0x4005f4:	mov	rcx, qword ptr [rbp - 0x98]
0x4005fb:	mov	rax, qword ptr [rbp - 0x90]
0x400602:	lea	rsi, [rcx + rax]
0x400606:	mov	eax, dword ptr [rbp - 0xa0]
0x40060c:	mov	ecx, 0
0x400611:	mov	edi, eax
0x400613:	call	0x500048
<Block for 0x4006bb, 1 bytes>
0x4006bb:	nop	
<Block for 0x400618, 19 bytes>
0x400618:	mov	dword ptr [rbp - 0x9c], eax
0x40061e:	cmp	dword ptr [rbp - 0x9c], -1
0x400625:	je	0x4006bc
<Block for 0x40062b, 13 bytes>
0x40062b:	cmp	dword ptr [rbp - 0x9c], 0
0x400632:	je	0x4006bc
<Block for 0x400638, 52 bytes>
0x400638:	mov	eax, dword ptr [rbp - 0x9c]
0x40063e:	movsxd	rdx, eax
0x400641:	mov	rax, qword ptr [rbp - 0x90]
0x400648:	add	rdx, rax
0x40064b:	mov	rax, qword ptr [rbp - 0x98]
0x400652:	add	rax, rdx
0x400655:	mov	byte ptr [rax], 0
0x400658:	mov	rax, qword ptr [rbp - 0x98]
0x40065f:	mov	esi, 0xd
0x400664:	mov	rdi, rax
0x400667:	call	0x500050
<Block for 0x40066c, 17 bytes>
0x40066c:	mov	qword ptr [rbp - 0x88], rax
0x400673:	cmp	qword ptr [rbp - 0x88], 0
0x40067b:	je	0x400687
<Block for 0x400687, 20 bytes>
0x400687:	mov	rax, qword ptr [rbp - 0x98]
0x40068e:	mov	esi, 0xa
0x400693:	mov	rdi, rax
0x400696:	call	0x500050
<Block for 0x40067d, 30 bytes>
0x40067d:	mov	rax, qword ptr [rbp - 0x88]
0x400684:	mov	byte ptr [rax], 0
0x400687:	mov	rax, qword ptr [rbp - 0x98]
0x40068e:	mov	esi, 0xa
0x400693:	mov	rdi, rax
0x400696:	call	0x500050
<Block for 0x40069b, 17 bytes>
0x40069b:	mov	qword ptr [rbp - 0x88], rax
0x4006a2:	cmp	qword ptr [rbp - 0x88], 0
0x4006aa:	je	0x4006bc
<Block for 0x4006ac, 12 bytes>
0x4006ac:	mov	rax, qword ptr [rbp - 0x88]
0x4006b3:	mov	byte ptr [rax], 0
0x4006b6:	jmp	0x4006bc
