<Block for 0x4000c7, 57 bytes>
0x4000c7:	endbr64	
0x4000cb:	push	rbp
0x4000cc:	mov	rbp, rsp
0x4000cf:	sub	rsp, 0x30
0x4000d3:	mov	qword ptr [rbp - 0x28], rdi
0x4000d7:	mov	rax, qword ptr fs:[0x28]
0x4000e0:	mov	qword ptr [rbp - 8], rax
0x4000e4:	xor	eax, eax
0x4000e6:	mov	dword ptr [rbp - 0x20], 2
0x4000ed:	lea	rdx, [rbp - 0x20]
0x4000f1:	mov	rax, qword ptr [rbp - 0x28]
0x4000f5:	mov	rsi, rdx
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x4001ba
<Block for 0x400100, 22 bytes>
0x400100:	mov	eax, dword ptr [rax]
0x400102:	mov	dword ptr [rbp - 0x1c], eax
0x400105:	mov	eax, dword ptr [rbp - 0x1c]
0x400108:	cdqe	
0x40010a:	shl	rax, 2
0x40010e:	mov	rdi, rax
0x400111:	call	0x500000
<Block for 0x400116, 11 bytes>
0x400116:	mov	qword ptr [rbp - 0x10], rax
0x40011a:	cmp	qword ptr [rbp - 0x10], 0
0x40011f:	jne	0x40012b
<Block for 0x400121, 10 bytes>
0x400121:	mov	edi, 0xffffffff
0x400126:	call	0x500008
<Block for 0x40012b, 19 bytes>
0x40012b:	mov	qword ptr [rbp - 0x18], 0
0x400133:	mov	eax, dword ptr [rbp - 0x1c]
0x400136:	cdqe	
0x400138:	cmp	qword ptr [rbp - 0x18], rax
0x40013c:	jae	0x40015e
<Block for 0x40013e, 32 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x18]
0x400142:	lea	rdx, [rax*4]
0x40014a:	mov	rax, qword ptr [rbp - 0x10]
0x40014e:	add	rax, rdx
0x400151:	mov	dword ptr [rax], 0
0x400157:	add	qword ptr [rbp - 0x18], 1
0x40015c:	jmp	0x400133
<Block for 0x40015e, 13 bytes>
0x40015e:	mov	rax, qword ptr [rbp - 0x10]
0x400162:	mov	eax, dword ptr [rax]
0x400164:	mov	edi, eax
0x400166:	call	0x500010
<Block for 0x400133, 11 bytes>
0x400133:	mov	eax, dword ptr [rbp - 0x1c]
0x400136:	cdqe	
0x400138:	cmp	qword ptr [rbp - 0x18], rax
0x40013c:	jae	0x40015e
<Block for 0x40016b, 12 bytes>
0x40016b:	mov	rax, qword ptr [rbp - 0x10]
0x40016f:	mov	rdi, rax
0x400172:	call	0x500018
<Block for 0x400177, 16 bytes>
0x400177:	nop	
0x400178:	mov	rax, qword ptr [rbp - 8]
0x40017c:	xor	rax, qword ptr fs:[0x28]
0x400185:	je	0x40018c
<Block for 0x40018c, 2 bytes>
0x40018c:	leave	
0x40018d:	ret	
<Block for 0x400187, 5 bytes>
0x400187:	call	0x500020
