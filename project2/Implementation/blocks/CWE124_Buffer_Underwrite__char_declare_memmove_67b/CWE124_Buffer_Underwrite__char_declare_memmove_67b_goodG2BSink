<Block for 0x400090, 70 bytes>
0x400090:	endbr64	
0x400094:	push	rbp
0x400095:	mov	rbp, rsp
0x400098:	sub	rsp, 0x90
0x40009f:	mov	qword ptr [rbp - 0x88], rdi
0x4000a6:	mov	rax, qword ptr fs:[0x28]
0x4000af:	mov	qword ptr [rbp - 8], rax
0x4000b3:	xor	eax, eax
0x4000b5:	mov	rax, qword ptr [rbp - 0x88]
0x4000bc:	mov	qword ptr [rbp - 0x78], rax
0x4000c0:	lea	rax, [rbp - 0x70]
0x4000c4:	mov	edx, 0x63
0x4000c9:	mov	esi, 0x43
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500000
<Block for 0x4000d6, 28 bytes>
0x4000d6:	mov	byte ptr [rbp - 0xd], 0
0x4000da:	lea	rcx, [rbp - 0x70]
0x4000de:	mov	rax, qword ptr [rbp - 0x78]
0x4000e2:	mov	edx, 0x64
0x4000e7:	mov	rsi, rcx
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500008
<Block for 0x4000f2, 23 bytes>
0x4000f2:	mov	rax, qword ptr [rbp - 0x78]
0x4000f6:	add	rax, 0x63
0x4000fa:	mov	byte ptr [rax], 0
0x4000fd:	mov	rax, qword ptr [rbp - 0x78]
0x400101:	mov	rdi, rax
0x400104:	call	0x500010
<Block for 0x400109, 16 bytes>
0x400109:	nop	
0x40010a:	mov	rax, qword ptr [rbp - 8]
0x40010e:	xor	rax, qword ptr fs:[0x28]
0x400117:	je	0x40011e
<Block for 0x40011e, 2 bytes>
0x40011e:	leave	
0x40011f:	ret	
<Block for 0x400119, 5 bytes>
0x400119:	call	0x500018
