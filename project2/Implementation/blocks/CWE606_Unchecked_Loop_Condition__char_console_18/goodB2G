<Block for 0x4001c0, 158 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	sub	rsp, 0x90
0x4001cf:	mov	rax, qword ptr fs:[0x28]
0x4001d8:	mov	qword ptr [rbp - 8], rax
0x4001dc:	xor	eax, eax
0x4001de:	mov	qword ptr [rbp - 0x70], 0
0x4001e6:	mov	qword ptr [rbp - 0x68], 0
0x4001ee:	mov	qword ptr [rbp - 0x60], 0
0x4001f6:	mov	qword ptr [rbp - 0x58], 0
0x4001fe:	mov	qword ptr [rbp - 0x50], 0
0x400206:	mov	qword ptr [rbp - 0x48], 0
0x40020e:	mov	qword ptr [rbp - 0x40], 0
0x400216:	mov	qword ptr [rbp - 0x38], 0
0x40021e:	mov	qword ptr [rbp - 0x30], 0
0x400226:	mov	qword ptr [rbp - 0x28], 0
0x40022e:	mov	qword ptr [rbp - 0x20], 0
0x400236:	mov	qword ptr [rbp - 0x18], 0
0x40023e:	mov	dword ptr [rbp - 0x10], 0
0x400245:	lea	rax, [rbp - 0x70]
0x400249:	mov	qword ptr [rbp - 0x80], rax
0x40024d:	nop	
0x40024e:	endbr64	
0x400252:	mov	rax, qword ptr [rbp - 0x80]
0x400256:	mov	rdi, rax
0x400259:	call	0x500000
<Block for 0x40025e, 23 bytes>
0x40025e:	mov	qword ptr [rbp - 0x78], rax
0x400262:	mov	eax, 0x64
0x400267:	sub	rax, qword ptr [rbp - 0x78]
0x40026b:	cmp	rax, 1
0x40026f:	jbe	0x400301
<Block for 0x400301, 36 bytes>
0x400301:	nop	
0x400302:	endbr64	
0x400306:	lea	rdx, [rbp - 0x8c]
0x40030d:	mov	rax, qword ptr [rbp - 0x80]
0x400311:	lea	rsi, [rip + 0x1af]
0x400318:	mov	rdi, rax
0x40031b:	mov	eax, 0
0x400320:	call	0x500020
<Block for 0x400275, 44 bytes>
0x400275:	mov	rax, qword ptr [rip + 0xffd8c]
0x40027c:	mov	rdx, qword ptr [rbp - 0x78]
0x400280:	mov	ecx, 0x64
0x400285:	sub	ecx, edx
0x400287:	mov	edx, ecx
0x400289:	mov	esi, edx
0x40028b:	mov	rcx, qword ptr [rbp - 0x80]
0x40028f:	mov	rdx, qword ptr [rbp - 0x78]
0x400293:	add	rcx, rdx
0x400296:	mov	rdx, rax
0x400299:	mov	rdi, rcx
0x40029c:	call	0x500010
<Block for 0x400325, 5 bytes>
0x400325:	cmp	eax, 1
0x400328:	jne	0x400376
<Block for 0x4002a1, 5 bytes>
0x4002a1:	test	rax, rax
0x4002a4:	je	0x4002e7
<Block for 0x40032a, 13 bytes>
0x40032a:	mov	eax, dword ptr [rbp - 0x8c]
0x400330:	cmp	eax, 0x270f
0x400335:	jg	0x400376
<Block for 0x400376, 16 bytes>
0x400376:	nop	
0x400377:	mov	rax, qword ptr [rbp - 8]
0x40037b:	xor	rax, qword ptr fs:[0x28]
0x400384:	je	0x40038b
<Block for 0x4002e7, 12 bytes>
0x4002e7:	lea	rdi, [rip + 0x1ca]
0x4002ee:	call	0x500018
<Block for 0x4002a6, 12 bytes>
0x4002a6:	mov	rax, qword ptr [rbp - 0x80]
0x4002aa:	mov	rdi, rax
0x4002ad:	call	0x500000
<Block for 0x400337, 22 bytes>
0x400337:	mov	dword ptr [rbp - 0x84], 0
0x400341:	mov	dword ptr [rbp - 0x88], 0
0x40034b:	jmp	0x40035b
<Block for 0x40038b, 2 bytes>
0x40038b:	leave	
0x40038c:	ret	
<Block for 0x400386, 5 bytes>
0x400386:	call	0x500030
<Block for 0x4002f3, 50 bytes>
0x4002f3:	mov	rdx, qword ptr [rbp - 0x80]
0x4002f7:	mov	rax, qword ptr [rbp - 0x78]
0x4002fb:	add	rax, rdx
0x4002fe:	mov	byte ptr [rax], 0
0x400301:	nop	
0x400302:	endbr64	
0x400306:	lea	rdx, [rbp - 0x8c]
0x40030d:	mov	rax, qword ptr [rbp - 0x80]
0x400311:	lea	rsi, [rip + 0x1af]
0x400318:	mov	rdi, rax
0x40031b:	mov	eax, 0
0x400320:	call	0x500020
<Block for 0x4002b2, 11 bytes>
0x4002b2:	mov	qword ptr [rbp - 0x78], rax
0x4002b6:	cmp	qword ptr [rbp - 0x78], 0
0x4002bb:	je	0x400301
<Block for 0x40035b, 14 bytes>
0x40035b:	mov	eax, dword ptr [rbp - 0x8c]
0x400361:	cmp	dword ptr [rbp - 0x88], eax
0x400367:	jl	0x40034d
<Block for 0x4002bd, 22 bytes>
0x4002bd:	mov	rax, qword ptr [rbp - 0x78]
0x4002c1:	lea	rdx, [rax - 1]
0x4002c5:	mov	rax, qword ptr [rbp - 0x80]
0x4002c9:	add	rax, rdx
0x4002cc:	movzx	eax, byte ptr [rax]
0x4002cf:	cmp	al, 0xa
0x4002d1:	jne	0x400301
<Block for 0x40034d, 28 bytes>
0x40034d:	add	dword ptr [rbp - 0x84], 1
0x400354:	add	dword ptr [rbp - 0x88], 1
0x40035b:	mov	eax, dword ptr [rbp - 0x8c]
0x400361:	cmp	dword ptr [rbp - 0x88], eax
0x400367:	jl	0x40034d
<Block for 0x400369, 13 bytes>
0x400369:	mov	eax, dword ptr [rbp - 0x84]
0x40036f:	mov	edi, eax
0x400371:	call	0x500028
<Block for 0x4002d3, 20 bytes>
0x4002d3:	mov	rax, qword ptr [rbp - 0x78]
0x4002d7:	lea	rdx, [rax - 1]
0x4002db:	mov	rax, qword ptr [rbp - 0x80]
0x4002df:	add	rax, rdx
0x4002e2:	mov	byte ptr [rax], 0
0x4002e5:	jmp	0x400301
