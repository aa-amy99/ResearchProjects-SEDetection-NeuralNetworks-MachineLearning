<Block for 0x4000ec, 46 bytes>
0x4000ec:	endbr64	
0x4000f0:	push	rbp
0x4000f1:	mov	rbp, rsp
0x4000f4:	sub	rsp, 0x20
0x4000f8:	mov	rax, qword ptr fs:[0x28]
0x400101:	mov	qword ptr [rbp - 8], rax
0x400105:	xor	eax, eax
0x400107:	mov	qword ptr [rbp - 0x18], 5
0x40010f:	mov	eax, dword ptr [rip + 0xffeeb]
0x400115:	cmp	eax, 5
0x400118:	je	0x400128
<Block for 0x400128, 19 bytes>
0x400128:	lea	rax, [rbp - 0x18]
0x40012c:	mov	qword ptr [rbp - 0x10], rax
0x400130:	mov	eax, dword ptr [rip + 0xffeca]
0x400136:	cmp	eax, 5
0x400139:	jne	0x40014a
<Block for 0x40011a, 12 bytes>
0x40011a:	lea	rdi, [rip + 0xda]
0x400121:	call	0x500010
<Block for 0x40013b, 15 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x10]
0x40013f:	mov	rax, qword ptr [rax]
0x400142:	mov	rdi, rax
0x400145:	call	0x500008
<Block for 0x40014a, 16 bytes>
0x40014a:	nop	
0x40014b:	mov	rax, qword ptr [rbp - 8]
0x40014f:	xor	rax, qword ptr fs:[0x28]
0x400158:	je	0x40015f
<Block for 0x400126, 2 bytes>
0x400126:	jmp	0x400130
<Block for 0x40015f, 2 bytes>
0x40015f:	leave	
0x400160:	ret	
<Block for 0x40015a, 5 bytes>
0x40015a:	call	0x500018
<Block for 0x400130, 11 bytes>
0x400130:	mov	eax, dword ptr [rip + 0xffeca]
0x400136:	cmp	eax, 5
0x400139:	jne	0x40014a
