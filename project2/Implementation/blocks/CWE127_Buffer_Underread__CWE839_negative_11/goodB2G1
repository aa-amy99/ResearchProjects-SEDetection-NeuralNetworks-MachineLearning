<Block for 0x4000a8, 44 bytes>
0x4000a8:	endbr64	
0x4000ac:	push	rbp
0x4000ad:	mov	rbp, rsp
0x4000b0:	sub	rsp, 0x40
0x4000b4:	mov	rax, qword ptr fs:[0x28]
0x4000bd:	mov	qword ptr [rbp - 8], rax
0x4000c1:	xor	eax, eax
0x4000c3:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000ca:	mov	eax, 0
0x4000cf:	call	0x500000
<Block for 0x4000d4, 4 bytes>
0x4000d4:	test	eax, eax
0x4000d6:	je	0x4000df
<Block for 0x4000df, 10 bytes>
0x4000df:	mov	eax, 0
0x4000e4:	call	0x500020
<Block for 0x4000d8, 17 bytes>
0x4000d8:	mov	dword ptr [rbp - 0x34], 0xfffffffb
0x4000df:	mov	eax, 0
0x4000e4:	call	0x500020
<Block for 0x4000e9, 4 bytes>
0x4000e9:	test	eax, eax
0x4000eb:	je	0x4000fb
<Block for 0x4000fb, 46 bytes>
0x4000fb:	mov	qword ptr [rbp - 0x30], 0
0x400103:	mov	qword ptr [rbp - 0x28], 0
0x40010b:	mov	qword ptr [rbp - 0x20], 0
0x400113:	mov	qword ptr [rbp - 0x18], 0
0x40011b:	mov	qword ptr [rbp - 0x10], 0
0x400123:	cmp	dword ptr [rbp - 0x34], 0
0x400127:	js	0x400141
<Block for 0x4000ed, 12 bytes>
0x4000ed:	lea	rdi, [rip + 0x2d3]
0x4000f4:	call	0x500010
<Block for 0x400141, 12 bytes>
0x400141:	lea	rdi, [rip + 0x298]
0x400148:	call	0x500010
<Block for 0x400129, 6 bytes>
0x400129:	cmp	dword ptr [rbp - 0x34], 9
0x40012d:	jg	0x400141
<Block for 0x4000f9, 2 bytes>
0x4000f9:	jmp	0x40014d
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x40012f, 16 bytes>
0x40012f:	mov	eax, dword ptr [rbp - 0x34]
0x400132:	cdqe	
0x400134:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400138:	mov	edi, eax
0x40013a:	call	0x500008
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500018
<Block for 0x40013f, 2 bytes>
0x40013f:	jmp	0x40014d
