<Block for 0x400000, 85 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x20]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	lea	rax, [rbp - 0x20]
0x400027:	mov	qword ptr [rbp - 0x18], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x20]
0x40002f:	mov	qword ptr [rbp - 0x30], rax
0x400033:	mov	rax, qword ptr [rbp - 0x18]
0x400037:	mov	qword ptr [rbp - 0x28], rax
0x40003b:	lea	rax, [rbp - 0x30]
0x40003f:	mov	qword ptr [rbp - 0x20], rax
0x400043:	lea	rax, [rbp - 0x30]
0x400047:	mov	qword ptr [rbp - 0x18], rax
0x40004b:	mov	eax, 0
0x400050:	call	0x500000
<Block for 0x400055, 4 bytes>
0x400055:	test	eax, eax
0x400057:	je	0x40008c
<Block for 0x40008c, 73 bytes>
0x40008c:	mov	rax, qword ptr [rbp - 0x28]
0x400090:	mov	qword ptr [rip + 0x101], rax
0x400097:	mov	rax, qword ptr [rbp - 0x30]
0x40009b:	mov	qword ptr [rip + 0xfe], rax
0x4000a2:	mov	rax, qword ptr [rip + 0xef]
0x4000a9:	mov	rdx, qword ptr [rip + 0xf0]
0x4000b0:	mov	qword ptr [rax], rdx
0x4000b3:	mov	rax, qword ptr [rip + 0xe6]
0x4000ba:	mov	rdx, qword ptr [rip + 0xd7]
0x4000c1:	mov	qword ptr [rax + 8], rdx
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x400059, 24 bytes>
0x400059:	mov	rdx, qword ptr [rip + 0xfffa8]
0x400060:	lea	rax, [rbp - 0x30]
0x400064:	mov	esi, 0x10
0x400069:	mov	rdi, rax
0x40006c:	call	0x500010
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500028
<Block for 0x400071, 5 bytes>
0x400071:	test	rax, rax
0x400074:	jne	0x40008c
<Block for 0x400076, 12 bytes>
0x400076:	lea	rdi, [rip + 0x12b]
0x40007d:	call	0x500018
<Block for 0x400082, 10 bytes>
0x400082:	mov	edi, 1
0x400087:	call	0x500020
