<Block for 0x40009c, 54 bytes>
0x40009c:	endbr64	
0x4000a0:	push	rbp
0x4000a1:	mov	rbp, rsp
0x4000a4:	sub	rsp, 0xf0
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	lea	rax, [rbp - 0xe0]
0x4000c1:	mov	qword ptr [rbp - 0xf0], rax
0x4000c8:	mov	eax, dword ptr [rip + 0x162]
0x4000ce:	test	eax, eax
0x4000d0:	je	0x4000e0
<Block for 0x4000e0, 32 bytes>
0x4000e0:	mov	rax, qword ptr [rbp - 0xf0]
0x4000e7:	mov	byte ptr [rax], 0
0x4000ea:	lea	rax, [rbp - 0x70]
0x4000ee:	mov	edx, 0x63
0x4000f3:	mov	esi, 0x43
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500000
<Block for 0x4000d2, 12 bytes>
0x4000d2:	lea	rdi, [rip + 0x15b]
0x4000d9:	call	0x500018
<Block for 0x400100, 16 bytes>
0x400100:	mov	byte ptr [rbp - 0xd], 0
0x400104:	lea	rax, [rbp - 0x70]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500008
<Block for 0x4000de, 2 bytes>
0x4000de:	jmp	0x4000ea
<Block for 0x400110, 36 bytes>
0x400110:	mov	qword ptr [rbp - 0xe8], rax
0x400117:	mov	rdx, qword ptr [rbp - 0xe8]
0x40011e:	lea	rcx, [rbp - 0x70]
0x400122:	mov	rax, qword ptr [rbp - 0xf0]
0x400129:	mov	rsi, rcx
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500010
<Block for 0x4000ea, 22 bytes>
0x4000ea:	lea	rax, [rbp - 0x70]
0x4000ee:	mov	edx, 0x63
0x4000f3:	mov	esi, 0x43
0x4000f8:	mov	rdi, rax
0x4000fb:	call	0x500000
<Block for 0x400134, 15 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0xf0]
0x40013b:	mov	rdi, rax
0x40013e:	call	0x500018
<Block for 0x400143, 16 bytes>
0x400143:	nop	
0x400144:	mov	rax, qword ptr [rbp - 8]
0x400148:	xor	rax, qword ptr fs:[0x28]
0x400151:	je	0x400158
<Block for 0x400158, 2 bytes>
0x400158:	leave	
0x400159:	ret	
<Block for 0x400153, 5 bytes>
0x400153:	call	0x500020
