<Block for 0x40018a, 59 bytes>
0x40018a:	endbr64	
0x40018e:	push	rbp
0x40018f:	mov	rbp, rsp
0x400192:	sub	rsp, 0x90
0x400199:	mov	qword ptr [rbp - 0x88], rdi
0x4001a0:	mov	rax, qword ptr fs:[0x28]
0x4001a9:	mov	qword ptr [rbp - 8], rax
0x4001ad:	xor	eax, eax
0x4001af:	lea	rax, [rbp - 0x70]
0x4001b3:	mov	edx, 0x63
0x4001b8:	mov	esi, 0x43
0x4001bd:	mov	rdi, rax
0x4001c0:	call	0x500000
<Block for 0x4001c5, 14 bytes>
0x4001c5:	mov	byte ptr [rbp - 0xd], 0
0x4001c9:	mov	qword ptr [rbp - 0x78], 0
0x4001d1:	jmp	0x4001f6
<Block for 0x4001f6, 7 bytes>
0x4001f6:	cmp	qword ptr [rbp - 0x78], 0x63
0x4001fb:	jbe	0x4001d3
<Block for 0x4001d3, 42 bytes>
0x4001d3:	mov	rdx, qword ptr [rbp - 0x88]
0x4001da:	mov	rax, qword ptr [rbp - 0x78]
0x4001de:	add	rax, rdx
0x4001e1:	movzx	eax, byte ptr [rax]
0x4001e4:	lea	rcx, [rbp - 0x70]
0x4001e8:	mov	rdx, qword ptr [rbp - 0x78]
0x4001ec:	add	rdx, rcx
0x4001ef:	mov	byte ptr [rdx], al
0x4001f1:	add	qword ptr [rbp - 0x78], 1
0x4001f6:	cmp	qword ptr [rbp - 0x78], 0x63
0x4001fb:	jbe	0x4001d3
<Block for 0x4001fd, 16 bytes>
0x4001fd:	mov	byte ptr [rbp - 0xd], 0
0x400201:	lea	rax, [rbp - 0x70]
0x400205:	mov	rdi, rax
0x400208:	call	0x500008
<Block for 0x40020d, 16 bytes>
0x40020d:	nop	
0x40020e:	mov	rax, qword ptr [rbp - 8]
0x400212:	xor	rax, qword ptr fs:[0x28]
0x40021b:	je	0x400222
<Block for 0x400222, 2 bytes>
0x400222:	leave	
0x400223:	ret	
<Block for 0x40021d, 5 bytes>
0x40021d:	call	0x500010
