<Block for 0x400000, 48 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x28
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x28]
0x400020:	mov	qword ptr [rbp - 0x20], rax
0x400024:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40002b:	call	0x500000
<Block for 0x400030, 7 bytes>
0x400030:	and	eax, 1
0x400033:	test	eax, eax
0x400035:	je	0x400054
<Block for 0x400054, 5 bytes>
0x400054:	call	0x500000
<Block for 0x400037, 5 bytes>
0x400037:	call	0x500000
<Block for 0x400059, 10 bytes>
0x400059:	shl	eax, 0x1e
0x40005c:	mov	ebx, eax
0x40005e:	call	0x500000
<Block for 0x40003c, 10 bytes>
0x40003c:	shl	eax, 0x1e
0x40003f:	mov	ebx, eax
0x400041:	call	0x500000
<Block for 0x400063, 10 bytes>
0x400063:	shl	eax, 0xf
0x400066:	xor	ebx, eax
0x400068:	call	0x500000
<Block for 0x400046, 10 bytes>
0x400046:	shl	eax, 0xf
0x400049:	xor	ebx, eax
0x40004b:	call	0x500000
<Block for 0x40006d, 22 bytes>
0x40006d:	xor	eax, ebx
0x40006f:	not	eax
0x400071:	mov	dword ptr [rbp - 0x28], eax
0x400074:	mov	rax, qword ptr [rbp - 0x20]
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	mov	dword ptr [rbp - 0x24], eax
0x40007d:	cmp	dword ptr [rbp - 0x24], 5
0x400081:	jg	0x4000a2
<Block for 0x400050, 4 bytes>
0x400050:	xor	eax, ebx
0x400052:	jmp	0x400071
<Block for 0x400083, 31 bytes>
0x400083:	lea	rcx, [rip + 0xbe]
0x40008a:	mov	edx, 0x27
0x40008f:	lea	rsi, [rip + 0xe2]
0x400096:	lea	rdi, [rip + 0x103]
0x40009d:	call	0x500008
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 0x18]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x400071, 18 bytes>
0x400071:	mov	dword ptr [rbp - 0x28], eax
0x400074:	mov	rax, qword ptr [rbp - 0x20]
0x400078:	mov	eax, dword ptr [rax]
0x40007a:	mov	dword ptr [rbp - 0x24], eax
0x40007d:	cmp	dword ptr [rbp - 0x24], 5
0x400081:	jg	0x4000a2
<Block for 0x4000b7, 7 bytes>
0x4000b7:	add	rsp, 0x28
0x4000bb:	pop	rbx
0x4000bc:	pop	rbp
0x4000bd:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500010
