<Block for 0x40006d, 22 bytes>
0x40006d:	endbr64	
0x400071:	push	rbp
0x400072:	mov	rbp, rsp
0x400075:	sub	rsp, 0x10
0x400079:	mov	eax, 0
0x40007e:	call	0x40000f
<Block for 0x400083, 4 bytes>
0x400083:	test	eax, eax
0x400085:	je	0x400095
<Block for 0x400095, 5 bytes>
0x400095:	call	0x500018
<Block for 0x400087, 12 bytes>
0x400087:	lea	rdi, [rip + 0x115]
0x40008e:	call	0x500010
<Block for 0x40009a, 28 bytes>
0x40009a:	mov	dword ptr [rax], 0
0x4000a0:	mov	edx, 0
0x4000a5:	mov	esi, 0
0x4000aa:	lea	rdi, [rip + 0xe1]
0x4000b1:	call	0x500000
<Block for 0x400093, 2 bytes>
0x400093:	jmp	0x4000f4
<Block for 0x4000b6, 9 bytes>
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	call	0x500018
<Block for 0x4000f4, 3 bytes>
0x4000f4:	nop	
0x4000f5:	leave	
0x4000f6:	ret	
<Block for 0x4000bf, 7 bytes>
0x4000bf:	mov	eax, dword ptr [rax]
0x4000c1:	cmp	eax, 0x22
0x4000c4:	jne	0x4000dc
<Block for 0x4000c6, 12 bytes>
0x4000c6:	lea	rdi, [rip + 0xeb]
0x4000cd:	call	0x500010
<Block for 0x4000dc, 24 bytes>
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	mov	rsi, rax
0x4000e3:	lea	rdi, [rip + 0xb4]
0x4000ea:	mov	eax, 0
0x4000ef:	call	0x500008
<Block for 0x4000d2, 10 bytes>
0x4000d2:	mov	edi, 1
0x4000d7:	call	0x500020
