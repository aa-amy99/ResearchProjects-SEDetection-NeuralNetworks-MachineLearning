<Block for 0x40004f, 26 bytes>
0x40004f:	endbr64	
0x400053:	push	rbp
0x400054:	mov	rbp, rsp
0x400057:	sub	rsp, 0x10
0x40005b:	mov	qword ptr [rbp - 8], rdi
0x40005f:	mov	eax, dword ptr [rip + 0xfffb3]
0x400065:	test	eax, eax
0x400067:	je	0x400077
<Block for 0x400077, 10 bytes>
0x400077:	mov	edi, 0x64
0x40007c:	call	0x500008
<Block for 0x400069, 12 bytes>
0x400069:	lea	rdi, [rip + 0x8b]
0x400070:	call	0x500020
<Block for 0x400081, 26 bytes>
0x400081:	mov	qword ptr [rbp - 8], rax
0x400085:	mov	rax, qword ptr [rbp - 8]
0x400089:	mov	edx, 0x63
0x40008e:	mov	esi, 0x41
0x400093:	mov	rdi, rax
0x400096:	call	0x500010
<Block for 0x400075, 2 bytes>
0x400075:	jmp	0x4000a6
<Block for 0x40009b, 17 bytes>
0x40009b:	mov	rax, qword ptr [rbp - 8]
0x40009f:	add	rax, 0x63
0x4000a3:	mov	byte ptr [rax], 0
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	leave	
0x4000ab:	ret	
<Block for 0x4000a6, 6 bytes>
0x4000a6:	mov	rax, qword ptr [rbp - 8]
0x4000aa:	leave	
0x4000ab:	ret	
