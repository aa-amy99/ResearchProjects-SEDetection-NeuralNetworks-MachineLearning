<Block for 0x4002c0, 165 bytes>
0x4002c0:	endbr64	
0x4002c4:	push	rbp
0x4002c5:	mov	rbp, rsp
0x4002c8:	sub	rsp, 0xa0
0x4002cf:	mov	rax, qword ptr fs:[0x28]
0x4002d8:	mov	qword ptr [rbp - 8], rax
0x4002dc:	xor	eax, eax
0x4002de:	mov	qword ptr [rbp - 0x70], 0
0x4002e6:	mov	qword ptr [rbp - 0x68], 0
0x4002ee:	mov	qword ptr [rbp - 0x60], 0
0x4002f6:	mov	qword ptr [rbp - 0x58], 0
0x4002fe:	mov	qword ptr [rbp - 0x50], 0
0x400306:	mov	qword ptr [rbp - 0x48], 0
0x40030e:	mov	qword ptr [rbp - 0x40], 0
0x400316:	mov	qword ptr [rbp - 0x38], 0
0x40031e:	mov	qword ptr [rbp - 0x30], 0
0x400326:	mov	qword ptr [rbp - 0x28], 0
0x40032e:	mov	qword ptr [rbp - 0x20], 0
0x400336:	mov	qword ptr [rbp - 0x18], 0
0x40033e:	mov	dword ptr [rbp - 0x10], 0
0x400345:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x40034f:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x400359:	lea	rax, [rbp - 0x70]
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x400365, 27 bytes>
0x400365:	mov	qword ptr [rbp - 0x90], rax
0x40036c:	mov	edx, 6
0x400371:	mov	esi, 1
0x400376:	mov	edi, 2
0x40037b:	call	0x500008
<Block for 0x400380, 19 bytes>
0x400380:	mov	dword ptr [rbp - 0x98], eax
0x400386:	cmp	dword ptr [rbp - 0x98], -1
0x40038d:	je	0x4004de
<Block for 0x4004de, 3 bytes>
0x4004de:	nop	
0x4004df:	jmp	0x4004e8
<Block for 0x400393, 22 bytes>
0x400393:	lea	rax, [rbp - 0x80]
0x400397:	mov	edx, 0x10
0x40039c:	mov	esi, 0
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500018
<Block for 0x4004e8, 9 bytes>
0x4004e8:	cmp	dword ptr [rbp - 0x98], -1
0x4004ef:	je	0x4004fe
<Block for 0x4003a9, 23 bytes>
0x4003a9:	mov	word ptr [rbp - 0x80], 2
0x4003af:	mov	dword ptr [rbp - 0x7c], 0
0x4003b6:	mov	edi, 0x6987
0x4003bb:	call	0x500020
<Block for 0x4004fe, 9 bytes>
0x4004fe:	cmp	dword ptr [rbp - 0x9c], -1
0x400505:	je	0x400514
<Block for 0x4004f1, 13 bytes>
0x4004f1:	mov	eax, dword ptr [rbp - 0x98]
0x4004f7:	mov	edi, eax
0x4004f9:	call	0x500050
<Block for 0x4003c0, 29 bytes>
0x4003c0:	mov	word ptr [rbp - 0x7e], ax
0x4003c4:	lea	rcx, [rbp - 0x80]
0x4003c8:	mov	eax, dword ptr [rbp - 0x98]
0x4003ce:	mov	edx, 0x10
0x4003d3:	mov	rsi, rcx
0x4003d6:	mov	edi, eax
0x4003d8:	call	0x500028
<Block for 0x400514, 12 bytes>
0x400514:	lea	rax, [rbp - 0x70]
0x400518:	mov	rdi, rax
0x40051b:	call	0x500058
<Block for 0x400507, 13 bytes>
0x400507:	mov	eax, dword ptr [rbp - 0x9c]
0x40050d:	mov	edi, eax
0x40050f:	call	0x500050
<Block for 0x4003dd, 9 bytes>
0x4003dd:	cmp	eax, -1
0x4003e0:	je	0x4004e1
<Block for 0x400520, 16 bytes>
0x400520:	nop	
0x400521:	mov	rax, qword ptr [rbp - 8]
0x400525:	xor	rax, qword ptr fs:[0x28]
0x40052e:	je	0x400535
<Block for 0x4004e1, 3 bytes>
0x4004e1:	nop	
0x4004e2:	jmp	0x4004e8
<Block for 0x4003e6, 18 bytes>
0x4003e6:	mov	eax, dword ptr [rbp - 0x98]
0x4003ec:	mov	esi, 5
0x4003f1:	mov	edi, eax
0x4003f3:	call	0x500030
<Block for 0x400535, 2 bytes>
0x400535:	leave	
0x400536:	ret	
<Block for 0x400530, 5 bytes>
0x400530:	call	0x500060
<Block for 0x4003f8, 9 bytes>
0x4003f8:	cmp	eax, -1
0x4003fb:	je	0x4004e4
<Block for 0x4004e4, 3 bytes>
0x4004e4:	nop	
0x4004e5:	jmp	0x4004e8
<Block for 0x400401, 23 bytes>
0x400401:	mov	eax, dword ptr [rbp - 0x98]
0x400407:	mov	edx, 0
0x40040c:	mov	esi, 0
0x400411:	mov	edi, eax
0x400413:	call	0x500038
<Block for 0x400418, 19 bytes>
0x400418:	mov	dword ptr [rbp - 0x9c], eax
0x40041e:	cmp	dword ptr [rbp - 0x9c], -1
0x400425:	je	0x4004e7
<Block for 0x40042b, 52 bytes>
0x40042b:	mov	rax, qword ptr [rbp - 0x90]
0x400432:	mov	edx, 0x63
0x400437:	sub	edx, eax
0x400439:	mov	eax, edx
0x40043b:	movsxd	rdx, eax
0x40043e:	lea	rcx, [rbp - 0x70]
0x400442:	mov	rax, qword ptr [rbp - 0x90]
0x400449:	lea	rsi, [rcx + rax]
0x40044d:	mov	eax, dword ptr [rbp - 0x9c]
0x400453:	mov	ecx, 0
0x400458:	mov	edi, eax
0x40045a:	call	0x500040
<Block for 0x4004e7, 1 bytes>
0x4004e7:	nop	
<Block for 0x40045f, 15 bytes>
0x40045f:	mov	dword ptr [rbp - 0x94], eax
0x400465:	cmp	dword ptr [rbp - 0x94], -1
0x40046c:	je	0x4004e8
<Block for 0x40046e, 9 bytes>
0x40046e:	cmp	dword ptr [rbp - 0x94], 0
0x400475:	je	0x4004e8
<Block for 0x400477, 30 bytes>
0x400477:	mov	eax, dword ptr [rbp - 0x94]
0x40047d:	cdqe	
0x40047f:	mov	byte ptr [rbp + rax - 0x70], 0
0x400484:	lea	rax, [rbp - 0x70]
0x400488:	mov	esi, 0xd
0x40048d:	mov	rdi, rax
0x400490:	call	0x500048
<Block for 0x400495, 17 bytes>
0x400495:	mov	qword ptr [rbp - 0x88], rax
0x40049c:	cmp	qword ptr [rbp - 0x88], 0
0x4004a4:	je	0x4004b0
<Block for 0x4004b0, 17 bytes>
0x4004b0:	lea	rax, [rbp - 0x70]
0x4004b4:	mov	esi, 0xa
0x4004b9:	mov	rdi, rax
0x4004bc:	call	0x500048
<Block for 0x4004a6, 27 bytes>
0x4004a6:	mov	rax, qword ptr [rbp - 0x88]
0x4004ad:	mov	byte ptr [rax], 0
0x4004b0:	lea	rax, [rbp - 0x70]
0x4004b4:	mov	esi, 0xa
0x4004b9:	mov	rdi, rax
0x4004bc:	call	0x500048
<Block for 0x4004c1, 17 bytes>
0x4004c1:	mov	qword ptr [rbp - 0x88], rax
0x4004c8:	cmp	qword ptr [rbp - 0x88], 0
0x4004d0:	je	0x4004e8
<Block for 0x4004d2, 12 bytes>
0x4004d2:	mov	rax, qword ptr [rbp - 0x88]
0x4004d9:	mov	byte ptr [rax], 0
0x4004dc:	jmp	0x4004e8
