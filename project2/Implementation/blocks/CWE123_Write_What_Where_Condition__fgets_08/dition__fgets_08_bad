<Block for 0x40001e, 85 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x30
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	lea	rax, [rbp - 0x20]
0x40003d:	mov	qword ptr [rbp - 0x20], rax
0x400041:	lea	rax, [rbp - 0x20]
0x400045:	mov	qword ptr [rbp - 0x18], rax
0x400049:	mov	rax, qword ptr [rbp - 0x20]
0x40004d:	mov	qword ptr [rbp - 0x30], rax
0x400051:	mov	rax, qword ptr [rbp - 0x18]
0x400055:	mov	qword ptr [rbp - 0x28], rax
0x400059:	lea	rax, [rbp - 0x30]
0x40005d:	mov	qword ptr [rbp - 0x20], rax
0x400061:	lea	rax, [rbp - 0x30]
0x400065:	mov	qword ptr [rbp - 0x18], rax
0x400069:	mov	eax, 0
0x40006e:	call	0x400000
<Block for 0x400073, 4 bytes>
0x400073:	test	eax, eax
0x400075:	je	0x4000aa
<Block for 0x4000aa, 73 bytes>
0x4000aa:	mov	rax, qword ptr [rbp - 0x28]
0x4000ae:	mov	qword ptr [rip + 0x1c3], rax
0x4000b5:	mov	rax, qword ptr [rbp - 0x30]
0x4000b9:	mov	qword ptr [rip + 0x1c0], rax
0x4000c0:	mov	rax, qword ptr [rip + 0x1b1]
0x4000c7:	mov	rdx, qword ptr [rip + 0x1b2]
0x4000ce:	mov	qword ptr [rax], rdx
0x4000d1:	mov	rax, qword ptr [rip + 0x1a8]
0x4000d8:	mov	rdx, qword ptr [rip + 0x199]
0x4000df:	mov	qword ptr [rax + 8], rdx
0x4000e3:	nop	
0x4000e4:	mov	rax, qword ptr [rbp - 8]
0x4000e8:	xor	rax, qword ptr fs:[0x28]
0x4000f1:	je	0x4000f8
<Block for 0x400077, 24 bytes>
0x400077:	mov	rdx, qword ptr [rip + 0xfff82]
0x40007e:	lea	rax, [rbp - 0x30]
0x400082:	mov	esi, 0x10
0x400087:	mov	rdi, rax
0x40008a:	call	0x500008
<Block for 0x4000f8, 2 bytes>
0x4000f8:	leave	
0x4000f9:	ret	
<Block for 0x4000f3, 5 bytes>
0x4000f3:	call	0x500020
<Block for 0x40008f, 5 bytes>
0x40008f:	test	rax, rax
0x400092:	jne	0x4000aa
<Block for 0x400094, 12 bytes>
0x400094:	lea	rdi, [rip + 0x1ed]
0x40009b:	call	0x500010
<Block for 0x4000a0, 10 bytes>
0x4000a0:	mov	edi, 1
0x4000a5:	call	0x500018
