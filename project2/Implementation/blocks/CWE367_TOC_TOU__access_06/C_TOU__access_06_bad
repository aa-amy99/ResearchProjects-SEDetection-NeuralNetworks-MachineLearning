<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 5
0x400020:	cmp	eax, 5
0x400023:	jne	0x400163
<Block for 0x400029, 134 bytes>
0x400029:	mov	qword ptr [rbp - 0x70], 0
0x400031:	mov	qword ptr [rbp - 0x68], 0
0x400039:	mov	qword ptr [rbp - 0x60], 0
0x400041:	mov	qword ptr [rbp - 0x58], 0
0x400049:	mov	qword ptr [rbp - 0x50], 0
0x400051:	mov	qword ptr [rbp - 0x48], 0
0x400059:	mov	qword ptr [rbp - 0x40], 0
0x400061:	mov	qword ptr [rbp - 0x38], 0
0x400069:	mov	qword ptr [rbp - 0x30], 0
0x400071:	mov	qword ptr [rbp - 0x28], 0
0x400079:	mov	qword ptr [rbp - 0x20], 0
0x400081:	mov	qword ptr [rbp - 0x18], 0
0x400089:	mov	dword ptr [rbp - 0x10], 0
0x400090:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400097:	mov	rdx, qword ptr [rip + 0xfff62]
0x40009e:	lea	rax, [rbp - 0x70]
0x4000a2:	mov	esi, 0x64
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500008
<Block for 0x400163, 16 bytes>
0x400163:	nop	
0x400164:	mov	rax, qword ptr [rbp - 8]
0x400168:	xor	rax, qword ptr fs:[0x28]
0x400171:	je	0x400178
<Block for 0x4000af, 5 bytes>
0x4000af:	test	rax, rax
0x4000b2:	jne	0x4000c4
<Block for 0x400178, 2 bytes>
0x400178:	leave	
0x400179:	ret	
<Block for 0x400173, 5 bytes>
0x400173:	call	0x500048
<Block for 0x4000b4, 12 bytes>
0x4000b4:	lea	rdi, [rip + 0x3a5]
0x4000bb:	call	0x500010
<Block for 0x4000c4, 11 bytes>
0x4000c4:	lea	rax, [rbp - 0x70]
0x4000c8:	movzx	eax, byte ptr [rax]
0x4000cb:	test	al, al
0x4000cd:	je	0x4000e4
<Block for 0x4000c0, 15 bytes>
0x4000c0:	mov	byte ptr [rbp - 0x70], 0
0x4000c4:	lea	rax, [rbp - 0x70]
0x4000c8:	movzx	eax, byte ptr [rax]
0x4000cb:	test	al, al
0x4000cd:	je	0x4000e4
<Block for 0x4000e4, 17 bytes>
0x4000e4:	lea	rax, [rbp - 0x70]
0x4000e8:	mov	esi, 2
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500020
<Block for 0x4000cf, 12 bytes>
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500018
<Block for 0x4000f5, 5 bytes>
0x4000f5:	cmp	eax, -1
0x4000f8:	jne	0x400104
<Block for 0x4000db, 26 bytes>
0x4000db:	sub	rax, 1
0x4000df:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000e4:	lea	rax, [rbp - 0x70]
0x4000e8:	mov	esi, 2
0x4000ed:	mov	rdi, rax
0x4000f0:	call	0x500020
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	edi, 1
0x4000ff:	call	0x500028
<Block for 0x400104, 22 bytes>
0x400104:	lea	rax, [rbp - 0x70]
0x400108:	mov	esi, 2
0x40010d:	mov	rdi, rax
0x400110:	mov	eax, 0
0x400115:	call	0x500030
<Block for 0x40011a, 9 bytes>
0x40011a:	mov	dword ptr [rbp - 0x74], eax
0x40011d:	cmp	dword ptr [rbp - 0x74], -1
0x400121:	jne	0x40012d
<Block for 0x400123, 10 bytes>
0x400123:	mov	edi, 1
0x400128:	call	0x500028
<Block for 0x40012d, 22 bytes>
0x40012d:	mov	eax, dword ptr [rbp - 0x74]
0x400130:	mov	edx, 0xb
0x400135:	lea	rsi, [rip + 0x333]
0x40013c:	mov	edi, eax
0x40013e:	call	0x500038
<Block for 0x400143, 6 bytes>
0x400143:	cmp	rax, -1
0x400147:	jne	0x400153
<Block for 0x400149, 10 bytes>
0x400149:	mov	edi, 1
0x40014e:	call	0x500028
<Block for 0x400153, 6 bytes>
0x400153:	cmp	dword ptr [rbp - 0x74], -1
0x400157:	je	0x400163
<Block for 0x400159, 10 bytes>
0x400159:	mov	eax, dword ptr [rbp - 0x74]
0x40015c:	mov	edi, eax
0x40015e:	call	0x500040
