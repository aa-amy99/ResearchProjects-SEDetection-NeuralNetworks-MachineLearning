<Block for 0x4000a3, 21 bytes>
0x4000a3:	endbr64	
0x4000a7:	push	rbp
0x4000a8:	mov	rbp, rsp
0x4000ab:	sub	rsp, 0x10
0x4000af:	mov	eax, 0
0x4000b4:	test	eax, eax
0x4000b6:	je	0x4000c9
<Block for 0x4000c9, 5 bytes>
0x4000c9:	call	0x500000
<Block for 0x4000b8, 12 bytes>
0x4000b8:	lea	rdi, [rip + 0x176]
0x4000bf:	call	0x500008
<Block for 0x4000ce, 55 bytes>
0x4000ce:	mov	edx, eax
0x4000d0:	movsxd	rax, edx
0x4000d3:	imul	rax, rax, 0x55555556
0x4000da:	shr	rax, 0x20
0x4000de:	mov	rcx, rax
0x4000e1:	mov	eax, edx
0x4000e3:	sar	eax, 0x1f
0x4000e6:	mov	esi, ecx
0x4000e8:	sub	esi, eax
0x4000ea:	mov	eax, esi
0x4000ec:	mov	dword ptr [rbp - 4], eax
0x4000ef:	mov	ecx, dword ptr [rbp - 4]
0x4000f2:	mov	eax, ecx
0x4000f4:	add	eax, eax
0x4000f6:	add	eax, ecx
0x4000f8:	sub	edx, eax
0x4000fa:	mov	eax, edx
0x4000fc:	mov	dword ptr [rbp - 4], eax
0x4000ff:	cmp	dword ptr [rbp - 4], 2
0x400103:	je	0x400135
<Block for 0x4000c4, 5 bytes>
0x4000c4:	jmp	0x400150
<Block for 0x400135, 12 bytes>
0x400135:	lea	rdi, [rip + 0xe8]
0x40013c:	call	0x500008
<Block for 0x400105, 6 bytes>
0x400105:	cmp	dword ptr [rbp - 4], 2
0x400109:	jg	0x400143
<Block for 0x400150, 3 bytes>
0x400150:	nop	
0x400151:	leave	
0x400152:	ret	
<Block for 0x400141, 2 bytes>
0x400141:	jmp	0x400150
<Block for 0x40010b, 6 bytes>
0x40010b:	cmp	dword ptr [rbp - 4], 0
0x40010f:	je	0x400119
<Block for 0x400143, 12 bytes>
0x400143:	lea	rdi, [rip + 0xdc]
0x40014a:	call	0x500008
<Block for 0x400119, 12 bytes>
0x400119:	lea	rdi, [rip + 0x100]
0x400120:	call	0x500008
<Block for 0x400111, 6 bytes>
0x400111:	cmp	dword ptr [rbp - 4], 1
0x400115:	je	0x400127
<Block for 0x40014f, 1 bytes>
0x40014f:	nop	
<Block for 0x400125, 2 bytes>
0x400125:	jmp	0x400150
<Block for 0x400127, 12 bytes>
0x400127:	lea	rdi, [rip + 0xf4]
0x40012e:	call	0x500008
<Block for 0x400117, 2 bytes>
0x400117:	jmp	0x400143
<Block for 0x400133, 2 bytes>
0x400133:	jmp	0x400150
