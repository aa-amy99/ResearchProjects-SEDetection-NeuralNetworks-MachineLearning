<Block for 0x400058, 23 bytes>
0x400058:	endbr64	
0x40005c:	push	rbp
0x40005d:	mov	rbp, rsp
0x400060:	sub	rsp, 0x10
0x400064:	mov	eax, dword ptr [rip + 0xfff96]
0x40006a:	cmp	eax, 5
0x40006d:	je	0x40007d
<Block for 0x40007d, 10 bytes>
0x40007d:	mov	edi, 4
0x400082:	call	0x500008
<Block for 0x40006f, 12 bytes>
0x40006f:	lea	rdi, [rip + 0xdf]
0x400076:	call	0x500028
<Block for 0x400087, 11 bytes>
0x400087:	mov	qword ptr [rbp - 8], rax
0x40008b:	cmp	qword ptr [rbp - 8], 0
0x400090:	jne	0x40009c
<Block for 0x40007b, 2 bytes>
0x40007b:	jmp	0x4000cb
<Block for 0x400092, 10 bytes>
0x400092:	mov	edi, 0xffffffff
0x400097:	call	0x500010
<Block for 0x40009c, 35 bytes>
0x40009c:	mov	dword ptr [rbp - 0x10], 5
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	mov	edx, dword ptr [rbp - 0x10]
0x4000aa:	mov	dword ptr [rax], edx
0x4000ac:	mov	rax, qword ptr [rbp - 8]
0x4000b0:	mov	eax, dword ptr [rax]
0x4000b2:	mov	dword ptr [rbp - 0xc], eax
0x4000b5:	mov	eax, dword ptr [rbp - 0xc]
0x4000b8:	mov	edi, eax
0x4000ba:	call	0x500020
<Block for 0x4000cb, 3 bytes>
0x4000cb:	nop	
0x4000cc:	leave	
0x4000cd:	ret	
<Block for 0x4000bf, 12 bytes>
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	mov	rdi, rax
0x4000c6:	call	0x500018
