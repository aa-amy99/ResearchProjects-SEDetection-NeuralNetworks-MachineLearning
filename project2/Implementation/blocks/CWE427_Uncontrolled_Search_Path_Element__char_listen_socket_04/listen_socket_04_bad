<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 37 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	eax, 1
0x40006f:	test	eax, eax
0x400071:	je	0x400278
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400278, 15 bytes>
0x400278:	mov	rax, qword ptr [rbp - 0x138]
0x40027f:	mov	rdi, rax
0x400282:	call	0x500050
<Block for 0x400077, 35 bytes>
0x400077:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400081:	mov	dword ptr [rbp - 0x144], 0xffffffff
0x40008b:	mov	rax, qword ptr [rbp - 0x138]
0x400092:	mov	rdi, rax
0x400095:	call	0x500000
<Block for 0x400287, 16 bytes>
0x400287:	nop	
0x400288:	mov	rax, qword ptr [rbp - 8]
0x40028c:	xor	rax, qword ptr fs:[0x28]
0x400295:	je	0x40029c
<Block for 0x40009a, 27 bytes>
0x40009a:	mov	qword ptr [rbp - 0x130], rax
0x4000a1:	mov	edx, 6
0x4000a6:	mov	esi, 1
0x4000ab:	mov	edi, 2
0x4000b0:	call	0x500008
<Block for 0x40029c, 2 bytes>
0x40029c:	leave	
0x40029d:	ret	
<Block for 0x400297, 5 bytes>
0x400297:	call	0x500058
<Block for 0x4000b5, 19 bytes>
0x4000b5:	mov	dword ptr [rbp - 0x140], eax
0x4000bb:	cmp	dword ptr [rbp - 0x140], -1
0x4000c2:	je	0x400242
<Block for 0x400242, 3 bytes>
0x400242:	nop	
0x400243:	jmp	0x40024c
<Block for 0x4000c8, 25 bytes>
0x4000c8:	lea	rax, [rbp - 0x120]
0x4000cf:	mov	edx, 0x10
0x4000d4:	mov	esi, 0
0x4000d9:	mov	rdi, rax
0x4000dc:	call	0x500010
<Block for 0x40024c, 9 bytes>
0x40024c:	cmp	dword ptr [rbp - 0x140], -1
0x400253:	je	0x400262
<Block for 0x4000e1, 29 bytes>
0x4000e1:	mov	word ptr [rbp - 0x120], 2
0x4000ea:	mov	dword ptr [rbp - 0x11c], 0
0x4000f4:	mov	edi, 0x6987
0x4000f9:	call	0x500018
<Block for 0x400262, 9 bytes>
0x400262:	cmp	dword ptr [rbp - 0x144], -1
0x400269:	je	0x400278
<Block for 0x400255, 13 bytes>
0x400255:	mov	eax, dword ptr [rbp - 0x140]
0x40025b:	mov	edi, eax
0x40025d:	call	0x500048
<Block for 0x4000fe, 35 bytes>
0x4000fe:	mov	word ptr [rbp - 0x11e], ax
0x400105:	lea	rcx, [rbp - 0x120]
0x40010c:	mov	eax, dword ptr [rbp - 0x140]
0x400112:	mov	edx, 0x10
0x400117:	mov	rsi, rcx
0x40011a:	mov	edi, eax
0x40011c:	call	0x500020
<Block for 0x40026b, 13 bytes>
0x40026b:	mov	eax, dword ptr [rbp - 0x144]
0x400271:	mov	edi, eax
0x400273:	call	0x500048
<Block for 0x400121, 9 bytes>
0x400121:	cmp	eax, -1
0x400124:	je	0x400245
<Block for 0x400245, 3 bytes>
0x400245:	nop	
0x400246:	jmp	0x40024c
<Block for 0x40012a, 18 bytes>
0x40012a:	mov	eax, dword ptr [rbp - 0x140]
0x400130:	mov	esi, 5
0x400135:	mov	edi, eax
0x400137:	call	0x500028
<Block for 0x40013c, 9 bytes>
0x40013c:	cmp	eax, -1
0x40013f:	je	0x400248
<Block for 0x400248, 3 bytes>
0x400248:	nop	
0x400249:	jmp	0x40024c
<Block for 0x400145, 23 bytes>
0x400145:	mov	eax, dword ptr [rbp - 0x140]
0x40014b:	mov	edx, 0
0x400150:	mov	esi, 0
0x400155:	mov	edi, eax
0x400157:	call	0x500030
<Block for 0x40015c, 19 bytes>
0x40015c:	mov	dword ptr [rbp - 0x144], eax
0x400162:	cmp	dword ptr [rbp - 0x144], -1
0x400169:	je	0x40024b
<Block for 0x40016f, 51 bytes>
0x40016f:	mov	eax, 0xf9
0x400174:	sub	rax, qword ptr [rbp - 0x130]
0x40017b:	mov	rdx, rax
0x40017e:	mov	rcx, qword ptr [rbp - 0x138]
0x400185:	mov	rax, qword ptr [rbp - 0x130]
0x40018c:	lea	rsi, [rcx + rax]
0x400190:	mov	eax, dword ptr [rbp - 0x144]
0x400196:	mov	ecx, 0
0x40019b:	mov	edi, eax
0x40019d:	call	0x500038
<Block for 0x40024b, 1 bytes>
0x40024b:	nop	
<Block for 0x4001a2, 19 bytes>
0x4001a2:	mov	dword ptr [rbp - 0x13c], eax
0x4001a8:	cmp	dword ptr [rbp - 0x13c], -1
0x4001af:	je	0x40024c
<Block for 0x4001b5, 13 bytes>
0x4001b5:	cmp	dword ptr [rbp - 0x13c], 0
0x4001bc:	je	0x40024c
<Block for 0x4001c2, 52 bytes>
0x4001c2:	mov	eax, dword ptr [rbp - 0x13c]
0x4001c8:	movsxd	rdx, eax
0x4001cb:	mov	rax, qword ptr [rbp - 0x130]
0x4001d2:	add	rdx, rax
0x4001d5:	mov	rax, qword ptr [rbp - 0x138]
0x4001dc:	add	rax, rdx
0x4001df:	mov	byte ptr [rax], 0
0x4001e2:	mov	rax, qword ptr [rbp - 0x138]
0x4001e9:	mov	esi, 0xd
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x500040
<Block for 0x4001f6, 17 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x128], rax
0x4001fd:	cmp	qword ptr [rbp - 0x128], 0
0x400205:	je	0x400211
<Block for 0x400211, 20 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x138]
0x400218:	mov	esi, 0xa
0x40021d:	mov	rdi, rax
0x400220:	call	0x500040
<Block for 0x400207, 30 bytes>
0x400207:	mov	rax, qword ptr [rbp - 0x128]
0x40020e:	mov	byte ptr [rax], 0
0x400211:	mov	rax, qword ptr [rbp - 0x138]
0x400218:	mov	esi, 0xa
0x40021d:	mov	rdi, rax
0x400220:	call	0x500040
<Block for 0x400225, 17 bytes>
0x400225:	mov	qword ptr [rbp - 0x128], rax
0x40022c:	cmp	qword ptr [rbp - 0x128], 0
0x400234:	je	0x40024c
<Block for 0x400236, 12 bytes>
0x400236:	mov	rax, qword ptr [rbp - 0x128]
0x40023d:	mov	byte ptr [rax], 0
0x400240:	jmp	0x40024c
