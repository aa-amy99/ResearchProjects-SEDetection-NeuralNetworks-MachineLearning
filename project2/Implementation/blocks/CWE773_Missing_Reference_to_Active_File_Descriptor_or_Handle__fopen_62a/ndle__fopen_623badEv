<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x10], 0
0x400023:	lea	rax, [rbp - 0x10]
0x400027:	mov	rdi, rax
0x40002a:	call	0x500000
<Block for 0x40002f, 19 bytes>
0x40002f:	lea	rsi, [rip + 0xd3]
0x400036:	lea	rdi, [rip + 0xcf]
0x40003d:	call	0x500008
<Block for 0x400042, 13 bytes>
0x400042:	mov	qword ptr [rbp - 0x10], rax
0x400046:	mov	rax, qword ptr [rbp - 0x10]
0x40004a:	test	rax, rax
0x40004d:	je	0x40005b
<Block for 0x40005b, 16 bytes>
0x40005b:	nop	
0x40005c:	mov	rax, qword ptr [rbp - 8]
0x400060:	xor	rax, qword ptr fs:[0x28]
0x400069:	je	0x400070
<Block for 0x40004f, 12 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 0x10]
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x400070, 2 bytes>
0x400070:	leave	
0x400071:	ret	
<Block for 0x40006b, 5 bytes>
0x40006b:	call	0x500018
