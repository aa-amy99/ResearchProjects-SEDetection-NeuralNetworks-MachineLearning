<Block for 0x4002b2, 179 bytes>
0x4002b2:	endbr64	
0x4002b6:	push	rbp
0x4002b7:	mov	rbp, rsp
0x4002ba:	sub	rsp, 0xb0
0x4002c1:	mov	rax, qword ptr fs:[0x28]
0x4002ca:	mov	qword ptr [rbp - 8], rax
0x4002ce:	xor	eax, eax
0x4002d0:	mov	qword ptr [rbp - 0x70], 0
0x4002d8:	mov	qword ptr [rbp - 0x68], 0
0x4002e0:	mov	qword ptr [rbp - 0x60], 0
0x4002e8:	mov	qword ptr [rbp - 0x58], 0
0x4002f0:	mov	qword ptr [rbp - 0x50], 0
0x4002f8:	mov	qword ptr [rbp - 0x48], 0
0x400300:	mov	qword ptr [rbp - 0x40], 0
0x400308:	mov	qword ptr [rbp - 0x38], 0
0x400310:	mov	qword ptr [rbp - 0x30], 0
0x400318:	mov	qword ptr [rbp - 0x28], 0
0x400320:	mov	qword ptr [rbp - 0x20], 0
0x400328:	mov	qword ptr [rbp - 0x18], 0
0x400330:	mov	dword ptr [rbp - 0x10], 0
0x400337:	lea	rax, [rbp - 0x70]
0x40033b:	mov	qword ptr [rbp - 0x98], rax
0x400342:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x40034c:	mov	dword ptr [rbp - 0xa4], 0xffffffff
0x400356:	mov	rax, qword ptr [rbp - 0x98]
0x40035d:	mov	rdi, rax
0x400360:	call	0x500000
<Block for 0x400365, 27 bytes>
0x400365:	mov	qword ptr [rbp - 0x90], rax
0x40036c:	mov	edx, 6
0x400371:	mov	esi, 1
0x400376:	mov	edi, 2
0x40037b:	call	0x500008
<Block for 0x400380, 19 bytes>
0x400380:	mov	dword ptr [rbp - 0xa0], eax
0x400386:	cmp	dword ptr [rbp - 0xa0], -1
0x40038d:	je	0x4004fe
<Block for 0x4004fe, 3 bytes>
0x4004fe:	nop	
0x4004ff:	jmp	0x400508
<Block for 0x400393, 22 bytes>
0x400393:	lea	rax, [rbp - 0x80]
0x400397:	mov	edx, 0x10
0x40039c:	mov	esi, 0
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500010
<Block for 0x400508, 9 bytes>
0x400508:	cmp	dword ptr [rbp - 0xa0], -1
0x40050f:	je	0x40051e
<Block for 0x4003a9, 23 bytes>
0x4003a9:	mov	word ptr [rbp - 0x80], 2
0x4003af:	mov	dword ptr [rbp - 0x7c], 0
0x4003b6:	mov	edi, 0x6987
0x4003bb:	call	0x500018
<Block for 0x40051e, 9 bytes>
0x40051e:	cmp	dword ptr [rbp - 0xa4], -1
0x400525:	je	0x400534
<Block for 0x400511, 13 bytes>
0x400511:	mov	eax, dword ptr [rbp - 0xa0]
0x400517:	mov	edi, eax
0x400519:	call	0x500048
<Block for 0x4003c0, 29 bytes>
0x4003c0:	mov	word ptr [rbp - 0x7e], ax
0x4003c4:	lea	rcx, [rbp - 0x80]
0x4003c8:	mov	eax, dword ptr [rbp - 0xa0]
0x4003ce:	mov	edx, 0x10
0x4003d3:	mov	rsi, rcx
0x4003d6:	mov	edi, eax
0x4003d8:	call	0x500020
<Block for 0x400534, 25 bytes>
0x400534:	mov	dword ptr [rip + 0x3ca], 0
0x40053e:	mov	rax, qword ptr [rbp - 0x98]
0x400545:	mov	rdi, rax
0x400548:	call	0x500060
<Block for 0x400527, 13 bytes>
0x400527:	mov	eax, dword ptr [rbp - 0xa4]
0x40052d:	mov	edi, eax
0x40052f:	call	0x500048
<Block for 0x4003dd, 9 bytes>
0x4003dd:	cmp	eax, -1
0x4003e0:	je	0x400501
<Block for 0x40054d, 16 bytes>
0x40054d:	nop	
0x40054e:	mov	rax, qword ptr [rbp - 8]
0x400552:	xor	rax, qword ptr fs:[0x28]
0x40055b:	je	0x400562
<Block for 0x400501, 3 bytes>
0x400501:	nop	
0x400502:	jmp	0x400508
<Block for 0x4003e6, 18 bytes>
0x4003e6:	mov	eax, dword ptr [rbp - 0xa0]
0x4003ec:	mov	esi, 5
0x4003f1:	mov	edi, eax
0x4003f3:	call	0x500028
<Block for 0x400562, 2 bytes>
0x400562:	leave	
0x400563:	ret	
<Block for 0x40055d, 5 bytes>
0x40055d:	call	0x500058
<Block for 0x4003f8, 9 bytes>
0x4003f8:	cmp	eax, -1
0x4003fb:	je	0x400504
<Block for 0x400504, 3 bytes>
0x400504:	nop	
0x400505:	jmp	0x400508
<Block for 0x400401, 23 bytes>
0x400401:	mov	eax, dword ptr [rbp - 0xa0]
0x400407:	mov	edx, 0
0x40040c:	mov	esi, 0
0x400411:	mov	edi, eax
0x400413:	call	0x500030
<Block for 0x400418, 19 bytes>
0x400418:	mov	dword ptr [rbp - 0xa4], eax
0x40041e:	cmp	dword ptr [rbp - 0xa4], -1
0x400425:	je	0x400507
<Block for 0x40042b, 51 bytes>
0x40042b:	mov	eax, 0x63
0x400430:	sub	rax, qword ptr [rbp - 0x90]
0x400437:	mov	rdx, rax
0x40043a:	mov	rcx, qword ptr [rbp - 0x98]
0x400441:	mov	rax, qword ptr [rbp - 0x90]
0x400448:	lea	rsi, [rcx + rax]
0x40044c:	mov	eax, dword ptr [rbp - 0xa4]
0x400452:	mov	ecx, 0
0x400457:	mov	edi, eax
0x400459:	call	0x500038
<Block for 0x400507, 1 bytes>
0x400507:	nop	
<Block for 0x40045e, 19 bytes>
0x40045e:	mov	dword ptr [rbp - 0x9c], eax
0x400464:	cmp	dword ptr [rbp - 0x9c], -1
0x40046b:	je	0x400508
<Block for 0x400471, 13 bytes>
0x400471:	cmp	dword ptr [rbp - 0x9c], 0
0x400478:	je	0x400508
<Block for 0x40047e, 52 bytes>
0x40047e:	mov	eax, dword ptr [rbp - 0x9c]
0x400484:	movsxd	rdx, eax
0x400487:	mov	rax, qword ptr [rbp - 0x90]
0x40048e:	add	rdx, rax
0x400491:	mov	rax, qword ptr [rbp - 0x98]
0x400498:	add	rax, rdx
0x40049b:	mov	byte ptr [rax], 0
0x40049e:	mov	rax, qword ptr [rbp - 0x98]
0x4004a5:	mov	esi, 0xd
0x4004aa:	mov	rdi, rax
0x4004ad:	call	0x500040
<Block for 0x4004b2, 17 bytes>
0x4004b2:	mov	qword ptr [rbp - 0x88], rax
0x4004b9:	cmp	qword ptr [rbp - 0x88], 0
0x4004c1:	je	0x4004cd
<Block for 0x4004cd, 20 bytes>
0x4004cd:	mov	rax, qword ptr [rbp - 0x98]
0x4004d4:	mov	esi, 0xa
0x4004d9:	mov	rdi, rax
0x4004dc:	call	0x500040
<Block for 0x4004c3, 30 bytes>
0x4004c3:	mov	rax, qword ptr [rbp - 0x88]
0x4004ca:	mov	byte ptr [rax], 0
0x4004cd:	mov	rax, qword ptr [rbp - 0x98]
0x4004d4:	mov	esi, 0xa
0x4004d9:	mov	rdi, rax
0x4004dc:	call	0x500040
<Block for 0x4004e1, 17 bytes>
0x4004e1:	mov	qword ptr [rbp - 0x88], rax
0x4004e8:	cmp	qword ptr [rbp - 0x88], 0
0x4004f0:	je	0x400508
<Block for 0x4004f2, 12 bytes>
0x4004f2:	mov	rax, qword ptr [rbp - 0x88]
0x4004f9:	mov	byte ptr [rax], 0
0x4004fc:	jmp	0x400508
