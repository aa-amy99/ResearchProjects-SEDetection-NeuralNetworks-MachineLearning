<Block for 0x4002a0, 82 bytes>
0x4002a0:	endbr64	
0x4002a4:	push	rbp
0x4002a5:	mov	rbp, rsp
0x4002a8:	sub	rsp, 0x120
0x4002af:	mov	rax, qword ptr fs:[0x28]
0x4002b8:	mov	qword ptr [rbp - 8], rax
0x4002bc:	xor	eax, eax
0x4002be:	movabs	rax, 0x3d48544150
0x4002c8:	mov	edx, 0
0x4002cd:	mov	qword ptr [rbp - 0x110], rax
0x4002d4:	mov	qword ptr [rbp - 0x108], rdx
0x4002db:	lea	rdx, [rbp - 0x100]
0x4002e2:	mov	eax, 0
0x4002e7:	mov	ecx, 0x1d
0x4002ec:	mov	rdi, rdx
0x4002ef:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002f2, 35 bytes>
0x4002f2:	mov	rdx, rdi
0x4002f5:	mov	word ptr [rdx], ax
0x4002f8:	add	rdx, 2
0x4002fc:	lea	rax, [rbp - 0x110]
0x400303:	mov	qword ptr [rbp - 0x118], rax
0x40030a:	mov	eax, dword ptr [rip + 0x168]
0x400310:	cmp	eax, 5
0x400313:	je	0x400323
<Block for 0x4002ef, 3 bytes>
0x4002ef:	rep stosq	qword ptr [rdi], rax
<Block for 0x400323, 27 bytes>
0x400323:	mov	rax, qword ptr [rbp - 0x118]
0x40032a:	mov	rcx, -1
0x400331:	mov	rdx, rax
0x400334:	mov	eax, 0
0x400339:	mov	rdi, rdx
0x40033c:	repne scasb	al, byte ptr [rdi]
<Block for 0x400315, 12 bytes>
0x400315:	lea	rdi, [rip + 0x160]
0x40031c:	call	0x500060
<Block for 0x40033e, 45 bytes>
0x40033e:	mov	rax, rcx
0x400341:	not	rax
0x400344:	lea	rdx, [rax - 1]
0x400348:	mov	rax, qword ptr [rbp - 0x118]
0x40034f:	add	rax, rdx
0x400352:	mov	dword ptr [rax], 0x6e69622f
0x400358:	mov	byte ptr [rax + 4], 0
0x40035c:	mov	rax, qword ptr [rbp - 0x118]
0x400363:	mov	rdi, rax
0x400366:	call	0x500050
<Block for 0x40033c, 2 bytes>
0x40033c:	repne scasb	al, byte ptr [rdi]
<Block for 0x400321, 2 bytes>
0x400321:	jmp	0x40035c
<Block for 0x40036b, 16 bytes>
0x40036b:	nop	
0x40036c:	mov	rax, qword ptr [rbp - 8]
0x400370:	xor	rax, qword ptr fs:[0x28]
0x400379:	je	0x400380
<Block for 0x40035c, 15 bytes>
0x40035c:	mov	rax, qword ptr [rbp - 0x118]
0x400363:	mov	rdi, rax
0x400366:	call	0x500050
<Block for 0x400380, 2 bytes>
0x400380:	leave	
0x400381:	ret	
<Block for 0x40037b, 5 bytes>
0x40037b:	call	0x500058
