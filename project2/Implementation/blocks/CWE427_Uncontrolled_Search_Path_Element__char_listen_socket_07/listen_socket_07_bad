<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x150
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 39 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	eax, dword ptr [rip + 0x408]
0x400070:	cmp	eax, 5
0x400073:	jne	0x40027a
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400079, 35 bytes>
0x400079:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400083:	mov	dword ptr [rbp - 0x144], 0xffffffff
0x40008d:	mov	rax, qword ptr [rbp - 0x138]
0x400094:	mov	rdi, rax
0x400097:	call	0x500000
<Block for 0x40027a, 15 bytes>
0x40027a:	mov	rax, qword ptr [rbp - 0x138]
0x400281:	mov	rdi, rax
0x400284:	call	0x500050
<Block for 0x40009c, 27 bytes>
0x40009c:	mov	qword ptr [rbp - 0x130], rax
0x4000a3:	mov	edx, 6
0x4000a8:	mov	esi, 1
0x4000ad:	mov	edi, 2
0x4000b2:	call	0x500008
<Block for 0x400289, 16 bytes>
0x400289:	nop	
0x40028a:	mov	rax, qword ptr [rbp - 8]
0x40028e:	xor	rax, qword ptr fs:[0x28]
0x400297:	je	0x40029e
<Block for 0x4000b7, 19 bytes>
0x4000b7:	mov	dword ptr [rbp - 0x140], eax
0x4000bd:	cmp	dword ptr [rbp - 0x140], -1
0x4000c4:	je	0x400244
<Block for 0x40029e, 2 bytes>
0x40029e:	leave	
0x40029f:	ret	
<Block for 0x400299, 5 bytes>
0x400299:	call	0x500058
<Block for 0x400244, 3 bytes>
0x400244:	nop	
0x400245:	jmp	0x40024e
<Block for 0x4000ca, 25 bytes>
0x4000ca:	lea	rax, [rbp - 0x120]
0x4000d1:	mov	edx, 0x10
0x4000d6:	mov	esi, 0
0x4000db:	mov	rdi, rax
0x4000de:	call	0x500010
<Block for 0x40024e, 9 bytes>
0x40024e:	cmp	dword ptr [rbp - 0x140], -1
0x400255:	je	0x400264
<Block for 0x4000e3, 29 bytes>
0x4000e3:	mov	word ptr [rbp - 0x120], 2
0x4000ec:	mov	dword ptr [rbp - 0x11c], 0
0x4000f6:	mov	edi, 0x6987
0x4000fb:	call	0x500018
<Block for 0x400264, 9 bytes>
0x400264:	cmp	dword ptr [rbp - 0x144], -1
0x40026b:	je	0x40027a
<Block for 0x400257, 13 bytes>
0x400257:	mov	eax, dword ptr [rbp - 0x140]
0x40025d:	mov	edi, eax
0x40025f:	call	0x500048
<Block for 0x400100, 35 bytes>
0x400100:	mov	word ptr [rbp - 0x11e], ax
0x400107:	lea	rcx, [rbp - 0x120]
0x40010e:	mov	eax, dword ptr [rbp - 0x140]
0x400114:	mov	edx, 0x10
0x400119:	mov	rsi, rcx
0x40011c:	mov	edi, eax
0x40011e:	call	0x500020
<Block for 0x40026d, 13 bytes>
0x40026d:	mov	eax, dword ptr [rbp - 0x144]
0x400273:	mov	edi, eax
0x400275:	call	0x500048
<Block for 0x400123, 9 bytes>
0x400123:	cmp	eax, -1
0x400126:	je	0x400247
<Block for 0x400247, 3 bytes>
0x400247:	nop	
0x400248:	jmp	0x40024e
<Block for 0x40012c, 18 bytes>
0x40012c:	mov	eax, dword ptr [rbp - 0x140]
0x400132:	mov	esi, 5
0x400137:	mov	edi, eax
0x400139:	call	0x500028
<Block for 0x40013e, 9 bytes>
0x40013e:	cmp	eax, -1
0x400141:	je	0x40024a
<Block for 0x40024a, 3 bytes>
0x40024a:	nop	
0x40024b:	jmp	0x40024e
<Block for 0x400147, 23 bytes>
0x400147:	mov	eax, dword ptr [rbp - 0x140]
0x40014d:	mov	edx, 0
0x400152:	mov	esi, 0
0x400157:	mov	edi, eax
0x400159:	call	0x500030
<Block for 0x40015e, 19 bytes>
0x40015e:	mov	dword ptr [rbp - 0x144], eax
0x400164:	cmp	dword ptr [rbp - 0x144], -1
0x40016b:	je	0x40024d
<Block for 0x400171, 51 bytes>
0x400171:	mov	eax, 0xf9
0x400176:	sub	rax, qword ptr [rbp - 0x130]
0x40017d:	mov	rdx, rax
0x400180:	mov	rcx, qword ptr [rbp - 0x138]
0x400187:	mov	rax, qword ptr [rbp - 0x130]
0x40018e:	lea	rsi, [rcx + rax]
0x400192:	mov	eax, dword ptr [rbp - 0x144]
0x400198:	mov	ecx, 0
0x40019d:	mov	edi, eax
0x40019f:	call	0x500038
<Block for 0x40024d, 1 bytes>
0x40024d:	nop	
<Block for 0x4001a4, 19 bytes>
0x4001a4:	mov	dword ptr [rbp - 0x13c], eax
0x4001aa:	cmp	dword ptr [rbp - 0x13c], -1
0x4001b1:	je	0x40024e
<Block for 0x4001b7, 13 bytes>
0x4001b7:	cmp	dword ptr [rbp - 0x13c], 0
0x4001be:	je	0x40024e
<Block for 0x4001c4, 52 bytes>
0x4001c4:	mov	eax, dword ptr [rbp - 0x13c]
0x4001ca:	movsxd	rdx, eax
0x4001cd:	mov	rax, qword ptr [rbp - 0x130]
0x4001d4:	add	rdx, rax
0x4001d7:	mov	rax, qword ptr [rbp - 0x138]
0x4001de:	add	rax, rdx
0x4001e1:	mov	byte ptr [rax], 0
0x4001e4:	mov	rax, qword ptr [rbp - 0x138]
0x4001eb:	mov	esi, 0xd
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500040
<Block for 0x4001f8, 17 bytes>
0x4001f8:	mov	qword ptr [rbp - 0x128], rax
0x4001ff:	cmp	qword ptr [rbp - 0x128], 0
0x400207:	je	0x400213
<Block for 0x400213, 20 bytes>
0x400213:	mov	rax, qword ptr [rbp - 0x138]
0x40021a:	mov	esi, 0xa
0x40021f:	mov	rdi, rax
0x400222:	call	0x500040
<Block for 0x400209, 30 bytes>
0x400209:	mov	rax, qword ptr [rbp - 0x128]
0x400210:	mov	byte ptr [rax], 0
0x400213:	mov	rax, qword ptr [rbp - 0x138]
0x40021a:	mov	esi, 0xa
0x40021f:	mov	rdi, rax
0x400222:	call	0x500040
<Block for 0x400227, 17 bytes>
0x400227:	mov	qword ptr [rbp - 0x128], rax
0x40022e:	cmp	qword ptr [rbp - 0x128], 0
0x400236:	je	0x40024e
<Block for 0x400238, 12 bytes>
0x400238:	mov	rax, qword ptr [rbp - 0x128]
0x40023f:	mov	byte ptr [rax], 0
0x400242:	jmp	0x40024e
