<Block for 0x400068, 44 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	rax, qword ptr fs:[0x28]
0x40007d:	mov	qword ptr [rbp - 8], rax
0x400081:	xor	eax, eax
0x400083:	mov	qword ptr [rbp - 0x10], 0
0x40008b:	mov	dword ptr [rbp - 0x14], 0
0x400092:	jmp	0x4000a7
<Block for 0x4000a7, 6 bytes>
0x4000a7:	cmp	dword ptr [rbp - 0x14], 0
0x4000ab:	jle	0x400094
<Block for 0x400094, 25 bytes>
0x400094:	mov	dword ptr [rbp - 0x18], 8
0x40009b:	lea	rax, [rbp - 0x18]
0x40009f:	mov	qword ptr [rbp - 0x10], rax
0x4000a3:	add	dword ptr [rbp - 0x14], 1
0x4000a7:	cmp	dword ptr [rbp - 0x14], 0
0x4000ab:	jle	0x400094
<Block for 0x4000ad, 13 bytes>
0x4000ad:	mov	rax, qword ptr [rbp - 0x10]
0x4000b1:	mov	eax, dword ptr [rax]
0x4000b3:	mov	edi, eax
0x4000b5:	call	0x500000
<Block for 0x4000ba, 16 bytes>
0x4000ba:	nop	
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	xor	rax, qword ptr fs:[0x28]
0x4000c8:	je	0x4000cf
<Block for 0x4000cf, 2 bytes>
0x4000cf:	leave	
0x4000d0:	ret	
<Block for 0x4000ca, 5 bytes>
0x4000ca:	call	0x500008
