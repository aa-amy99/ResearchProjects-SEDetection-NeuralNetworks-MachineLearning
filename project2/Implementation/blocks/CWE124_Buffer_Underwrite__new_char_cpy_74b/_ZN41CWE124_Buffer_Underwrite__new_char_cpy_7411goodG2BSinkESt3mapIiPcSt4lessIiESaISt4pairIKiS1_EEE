<Block for 0x400099, 66 bytes>
0x400099:	endbr64	
0x40009d:	push	rbp
0x40009e:	mov	rbp, rsp
0x4000a1:	sub	rsp, 0x90
0x4000a8:	mov	qword ptr [rbp - 0x88], rdi
0x4000af:	mov	rax, qword ptr fs:[0x28]
0x4000b8:	mov	qword ptr [rbp - 8], rax
0x4000bc:	xor	eax, eax
0x4000be:	mov	dword ptr [rbp - 0x7c], 2
0x4000c5:	lea	rdx, [rbp - 0x7c]
0x4000c9:	mov	rax, qword ptr [rbp - 0x88]
0x4000d0:	mov	rsi, rdx
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x40015e
<Block for 0x4000db, 29 bytes>
0x4000db:	mov	rax, qword ptr [rax]
0x4000de:	mov	qword ptr [rbp - 0x78], rax
0x4000e2:	lea	rax, [rbp - 0x70]
0x4000e6:	mov	edx, 0x63
0x4000eb:	mov	esi, 0x43
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500000
<Block for 0x4000f8, 23 bytes>
0x4000f8:	mov	byte ptr [rbp - 0xd], 0
0x4000fc:	lea	rdx, [rbp - 0x70]
0x400100:	mov	rax, qword ptr [rbp - 0x78]
0x400104:	mov	rsi, rdx
0x400107:	mov	rdi, rax
0x40010a:	call	0x500008
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x78]
0x400113:	mov	rdi, rax
0x400116:	call	0x500010
<Block for 0x40011b, 16 bytes>
0x40011b:	nop	
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	xor	rax, qword ptr fs:[0x28]
0x400129:	je	0x400130
<Block for 0x400130, 2 bytes>
0x400130:	leave	
0x400131:	ret	
<Block for 0x40012b, 5 bytes>
0x40012b:	call	0x500018
