<Block for 0x4000a6, 74 bytes>
0x4000a6:	endbr64	
0x4000aa:	push	rbp
0x4000ab:	mov	rbp, rsp
0x4000ae:	sub	rsp, 0x90
0x4000b5:	mov	qword ptr [rbp - 0x88], rdi
0x4000bc:	mov	rax, qword ptr fs:[0x28]
0x4000c5:	mov	qword ptr [rbp - 8], rax
0x4000c9:	xor	eax, eax
0x4000cb:	mov	rax, qword ptr [rbp - 0x88]
0x4000d2:	mov	rax, qword ptr [rax + 0x10]
0x4000d6:	mov	qword ptr [rbp - 0x78], rax
0x4000da:	lea	rax, [rbp - 0x70]
0x4000de:	mov	edx, 0x63
0x4000e3:	mov	esi, 0x43
0x4000e8:	mov	rdi, rax
0x4000eb:	call	0x500000
<Block for 0x4000f0, 14 bytes>
0x4000f0:	mov	byte ptr [rbp - 0xd], 0
0x4000f4:	mov	qword ptr [rbp - 0x80], 0
0x4000fc:	jmp	0x40011e
<Block for 0x40011e, 7 bytes>
0x40011e:	cmp	qword ptr [rbp - 0x80], 0x63
0x400123:	jbe	0x4000fe
<Block for 0x4000fe, 39 bytes>
0x4000fe:	mov	rdx, qword ptr [rbp - 0x78]
0x400102:	mov	rax, qword ptr [rbp - 0x80]
0x400106:	add	rax, rdx
0x400109:	movzx	eax, byte ptr [rax]
0x40010c:	lea	rcx, [rbp - 0x70]
0x400110:	mov	rdx, qword ptr [rbp - 0x80]
0x400114:	add	rdx, rcx
0x400117:	mov	byte ptr [rdx], al
0x400119:	add	qword ptr [rbp - 0x80], 1
0x40011e:	cmp	qword ptr [rbp - 0x80], 0x63
0x400123:	jbe	0x4000fe
<Block for 0x400125, 16 bytes>
0x400125:	mov	byte ptr [rbp - 0xd], 0
0x400129:	lea	rax, [rbp - 0x70]
0x40012d:	mov	rdi, rax
0x400130:	call	0x500008
<Block for 0x400135, 16 bytes>
0x400135:	nop	
0x400136:	mov	rax, qword ptr [rbp - 8]
0x40013a:	xor	rax, qword ptr fs:[0x28]
0x400143:	je	0x40014a
<Block for 0x40014a, 2 bytes>
0x40014a:	leave	
0x40014b:	ret	
<Block for 0x400145, 5 bytes>
0x400145:	call	0x500010
