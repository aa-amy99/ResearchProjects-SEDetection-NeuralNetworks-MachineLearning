<Block for 0x400000, 94 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x18], 0
0x400023:	mov	word ptr [rbp - 0x20], 8
0x400029:	lea	rax, [rbp - 0x20]
0x40002d:	mov	qword ptr [rbp - 0x18], rax
0x400031:	lea	rax, [rip + 0xfffd8]
0x400038:	mov	qword ptr [rbp - 0x20], rax
0x40003c:	lea	rax, [rbp - 0x20]
0x400040:	mov	qword ptr [rbp - 0x10], rax
0x400044:	mov	rax, qword ptr [rbp - 0x10]
0x400048:	mov	rax, qword ptr [rax]
0x40004b:	mov	rcx, qword ptr [rax]
0x40004e:	mov	rdx, qword ptr [rbp - 0x18]
0x400052:	mov	rax, qword ptr [rbp - 0x10]
0x400056:	mov	rsi, rdx
0x400059:	mov	rdi, rax
0x40005c:	call	rcx
<Block for 0x40005e, 16 bytes>
0x40005e:	nop	
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	xor	rax, qword ptr fs:[0x28]
0x40006c:	je	0x400073
<Block for 0x400073, 2 bytes>
0x400073:	leave	
0x400074:	ret	
<Block for 0x40006e, 5 bytes>
0x40006e:	call	0x500008
