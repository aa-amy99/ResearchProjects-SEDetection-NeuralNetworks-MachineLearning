<Block for 0x400075, 95 bytes>
0x400075:	endbr64	
0x400079:	push	rbp
0x40007a:	mov	rbp, rsp
0x40007d:	sub	rsp, 0x20
0x400081:	mov	rax, qword ptr fs:[0x28]
0x40008a:	mov	qword ptr [rbp - 8], rax
0x40008e:	xor	eax, eax
0x400090:	mov	qword ptr [rbp - 0x18], 0
0x400098:	mov	dword ptr [rbp - 0x20], 8
0x40009f:	lea	rax, [rbp - 0x20]
0x4000a3:	mov	qword ptr [rbp - 0x18], rax
0x4000a7:	lea	rax, [rip + 0xfff72]
0x4000ae:	mov	qword ptr [rbp - 0x20], rax
0x4000b2:	lea	rax, [rbp - 0x20]
0x4000b6:	mov	qword ptr [rbp - 0x10], rax
0x4000ba:	mov	rax, qword ptr [rbp - 0x10]
0x4000be:	mov	rax, qword ptr [rax]
0x4000c1:	mov	rcx, qword ptr [rax]
0x4000c4:	mov	rdx, qword ptr [rbp - 0x18]
0x4000c8:	mov	rax, qword ptr [rbp - 0x10]
0x4000cc:	mov	rsi, rdx
0x4000cf:	mov	rdi, rax
0x4000d2:	call	rcx
<Block for 0x4000d4, 16 bytes>
0x4000d4:	nop	
0x4000d5:	mov	rax, qword ptr [rbp - 8]
0x4000d9:	xor	rax, qword ptr fs:[0x28]
0x4000e2:	je	0x4000e9
<Block for 0x4000e9, 2 bytes>
0x4000e9:	leave	
0x4000ea:	ret	
<Block for 0x4000e4, 5 bytes>
0x4000e4:	call	0x500008
