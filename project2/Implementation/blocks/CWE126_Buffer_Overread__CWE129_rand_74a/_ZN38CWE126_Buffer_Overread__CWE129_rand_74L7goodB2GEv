<Block for 0x4002a2, 43 bytes>
0x4002a2:	endbr64	
0x4002a6:	push	rbp
0x4002a7:	mov	rbp, rsp
0x4002aa:	push	rbx
0x4002ab:	sub	rsp, 0x88
0x4002b2:	mov	rax, qword ptr fs:[0x28]
0x4002bb:	mov	qword ptr [rbp - 0x18], rax
0x4002bf:	xor	eax, eax
0x4002c1:	lea	rax, [rbp - 0x80]
0x4002c5:	mov	rdi, rax
0x4002c8:	call	0x40055a
<Block for 0x4002cd, 15 bytes>
0x4002cd:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x4002d7:	call	0x500000
<Block for 0x4002dc, 7 bytes>
0x4002dc:	and	eax, 1
0x4002df:	test	eax, eax
0x4002e1:	je	0x400300
<Block for 0x400300, 5 bytes>
0x400300:	call	0x500000
<Block for 0x4002e3, 5 bytes>
0x4002e3:	call	0x500000
<Block for 0x400305, 10 bytes>
0x400305:	shl	eax, 0x1e
0x400308:	mov	ebx, eax
0x40030a:	call	0x500000
<Block for 0x4002e8, 10 bytes>
0x4002e8:	shl	eax, 0x1e
0x4002eb:	mov	ebx, eax
0x4002ed:	call	0x500000
<Block for 0x40030f, 10 bytes>
0x40030f:	shl	eax, 0xf
0x400312:	xor	ebx, eax
0x400314:	call	0x500000
<Block for 0x4002f2, 10 bytes>
0x4002f2:	shl	eax, 0xf
0x4002f5:	xor	ebx, eax
0x4002f7:	call	0x500000
<Block for 0x400319, 36 bytes>
0x400319:	xor	eax, ebx
0x40031b:	not	eax
0x40031d:	mov	dword ptr [rbp - 0x84], eax
0x400323:	mov	dword ptr [rbp - 0x50], 0
0x40032a:	lea	rdx, [rbp - 0x50]
0x40032e:	lea	rax, [rbp - 0x80]
0x400332:	mov	rsi, rdx
0x400335:	mov	rdi, rax
0x400338:	call	0x400726
<Block for 0x4002fc, 4 bytes>
0x4002fc:	xor	eax, ebx
0x4002fe:	jmp	0x40031d
<Block for 0x40033d, 34 bytes>
0x40033d:	mov	edx, dword ptr [rbp - 0x84]
0x400343:	mov	dword ptr [rax], edx
0x400345:	mov	dword ptr [rbp - 0x50], 1
0x40034c:	lea	rdx, [rbp - 0x50]
0x400350:	lea	rax, [rbp - 0x80]
0x400354:	mov	rsi, rdx
0x400357:	mov	rdi, rax
0x40035a:	call	0x400726
<Block for 0x40031d, 32 bytes>
0x40031d:	mov	dword ptr [rbp - 0x84], eax
0x400323:	mov	dword ptr [rbp - 0x50], 0
0x40032a:	lea	rdx, [rbp - 0x50]
0x40032e:	lea	rax, [rbp - 0x80]
0x400332:	mov	rsi, rdx
0x400335:	mov	rdi, rax
0x400338:	call	0x400726
<Block for 0x40035f, 34 bytes>
0x40035f:	mov	edx, dword ptr [rbp - 0x84]
0x400365:	mov	dword ptr [rax], edx
0x400367:	mov	dword ptr [rbp - 0x50], 2
0x40036e:	lea	rdx, [rbp - 0x50]
0x400372:	lea	rax, [rbp - 0x80]
0x400376:	mov	rsi, rdx
0x400379:	mov	rdi, rax
0x40037c:	call	0x400726
<Block for 0x400381, 27 bytes>
0x400381:	mov	edx, dword ptr [rbp - 0x84]
0x400387:	mov	dword ptr [rax], edx
0x400389:	lea	rdx, [rbp - 0x80]
0x40038d:	lea	rax, [rbp - 0x50]
0x400391:	mov	rsi, rdx
0x400394:	mov	rdi, rax
0x400397:	call	0x40059a
<Block for 0x40039c, 12 bytes>
0x40039c:	lea	rax, [rbp - 0x50]
0x4003a0:	mov	rdi, rax
0x4003a3:	call	0x500028
<Block for 0x4003a8, 12 bytes>
0x4003a8:	lea	rax, [rbp - 0x50]
0x4003ac:	mov	rdi, rax
0x4003af:	call	0x40057a
<Block for 0x4003b4, 12 bytes>
0x4003b4:	lea	rax, [rbp - 0x80]
0x4003b8:	mov	rdi, rax
0x4003bb:	call	0x40057a
<Block for 0x4003c0, 16 bytes>
0x4003c0:	nop	
0x4003c1:	mov	rax, qword ptr [rbp - 0x18]
0x4003c5:	xor	rax, qword ptr fs:[0x28]
0x4003ce:	je	0x40040a
<Block for 0x40040a, 10 bytes>
0x40040a:	add	rsp, 0x88
0x400411:	pop	rbx
0x400412:	pop	rbp
0x400413:	ret	
<Block for 0x4003d0, 2 bytes>
0x4003d0:	jmp	0x400405
<Block for 0x400405, 5 bytes>
0x400405:	call	0x500018
