<Block for 0x400095, 45 bytes>
0x400095:	endbr64	
0x400099:	push	rbp
0x40009a:	mov	rbp, rsp
0x40009d:	sub	rsp, 0x20
0x4000a1:	mov	rax, qword ptr fs:[0x28]
0x4000aa:	mov	qword ptr [rbp - 8], rax
0x4000ae:	xor	eax, eax
0x4000b0:	mov	qword ptr [rbp - 0x18], 0
0x4000b8:	mov	edi, 0x320
0x4000bd:	call	0x500000
<Block for 0x4000c2, 19 bytes>
0x4000c2:	mov	qword ptr [rbp - 0x18], rax
0x4000c6:	mov	qword ptr [rbp - 0x10], 0
0x4000ce:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d3:	ja	0x4000f2
<Block for 0x4000d5, 29 bytes>
0x4000d5:	mov	rax, qword ptr [rbp - 0x18]
0x4000d9:	mov	rdx, qword ptr [rbp - 0x10]
0x4000dd:	shl	rdx, 3
0x4000e1:	add	rax, rdx
0x4000e4:	mov	qword ptr [rax], 5
0x4000eb:	add	qword ptr [rbp - 0x10], 1
0x4000f0:	jmp	0x4000ce
<Block for 0x4000f2, 12 bytes>
0x4000f2:	lea	rax, [rbp - 0x18]
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500020
<Block for 0x4000ce, 7 bytes>
0x4000ce:	cmp	qword ptr [rbp - 0x10], 0x63
0x4000d3:	ja	0x4000f2
<Block for 0x4000fe, 16 bytes>
0x4000fe:	nop	
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	xor	rax, qword ptr fs:[0x28]
0x40010c:	je	0x400113
<Block for 0x400113, 2 bytes>
0x400113:	leave	
0x400114:	ret	
<Block for 0x40010e, 5 bytes>
0x40010e:	call	0x500018
