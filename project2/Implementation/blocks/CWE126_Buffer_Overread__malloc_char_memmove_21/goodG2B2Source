<Block for 0x400226, 26 bytes>
0x400226:	endbr64	
0x40022a:	push	rbp
0x40022b:	mov	rbp, rsp
0x40022e:	sub	rsp, 0x10
0x400232:	mov	qword ptr [rbp - 8], rdi
0x400236:	mov	eax, dword ptr [rip + 0x120]
0x40023c:	test	eax, eax
0x40023e:	je	0x400280
<Block for 0x400280, 6 bytes>
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	leave	
0x400285:	ret	
<Block for 0x400240, 10 bytes>
0x400240:	mov	edi, 0x64
0x400245:	call	0x500000
<Block for 0x40024a, 11 bytes>
0x40024a:	mov	qword ptr [rbp - 8], rax
0x40024e:	cmp	qword ptr [rbp - 8], 0
0x400253:	jne	0x40025f
<Block for 0x400255, 10 bytes>
0x400255:	mov	edi, 0xffffffff
0x40025a:	call	0x500008
<Block for 0x40025f, 22 bytes>
0x40025f:	mov	rax, qword ptr [rbp - 8]
0x400263:	mov	edx, 0x63
0x400268:	mov	esi, 0x41
0x40026d:	mov	rdi, rax
0x400270:	call	0x500010
<Block for 0x400275, 17 bytes>
0x400275:	mov	rax, qword ptr [rbp - 8]
0x400279:	add	rax, 0x63
0x40027d:	mov	byte ptr [rax], 0
0x400280:	mov	rax, qword ptr [rbp - 8]
0x400284:	leave	
0x400285:	ret	
