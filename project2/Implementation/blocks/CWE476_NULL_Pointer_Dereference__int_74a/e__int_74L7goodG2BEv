<Block for 0x40012d, 53 bytes>
0x40012d:	endbr64	
0x400131:	push	rbp
0x400132:	mov	rbp, rsp
0x400135:	push	rbx
0x400136:	sub	rsp, 0x88
0x40013d:	mov	rax, qword ptr fs:[0x28]
0x400146:	mov	qword ptr [rbp - 0x18], rax
0x40014a:	xor	eax, eax
0x40014c:	mov	dword ptr [rbp - 0x8c], 5
0x400156:	lea	rax, [rbp - 0x80]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x4004da
<Block for 0x400162, 40 bytes>
0x400162:	lea	rax, [rbp - 0x8c]
0x400169:	mov	qword ptr [rbp - 0x88], rax
0x400170:	mov	dword ptr [rbp - 0x50], 0
0x400177:	lea	rdx, [rbp - 0x50]
0x40017b:	lea	rax, [rbp - 0x80]
0x40017f:	mov	rsi, rdx
0x400182:	mov	rdi, rax
0x400185:	call	0x4006a2
<Block for 0x40018a, 36 bytes>
0x40018a:	mov	rdx, qword ptr [rbp - 0x88]
0x400191:	mov	qword ptr [rax], rdx
0x400194:	mov	dword ptr [rbp - 0x50], 1
0x40019b:	lea	rdx, [rbp - 0x50]
0x40019f:	lea	rax, [rbp - 0x80]
0x4001a3:	mov	rsi, rdx
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x4006a2
<Block for 0x4001ae, 36 bytes>
0x4001ae:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b5:	mov	qword ptr [rax], rdx
0x4001b8:	mov	dword ptr [rbp - 0x50], 2
0x4001bf:	lea	rdx, [rbp - 0x50]
0x4001c3:	lea	rax, [rbp - 0x80]
0x4001c7:	mov	rsi, rdx
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x4006a2
<Block for 0x4001d2, 29 bytes>
0x4001d2:	mov	rdx, qword ptr [rbp - 0x88]
0x4001d9:	mov	qword ptr [rax], rdx
0x4001dc:	lea	rdx, [rbp - 0x80]
0x4001e0:	lea	rax, [rbp - 0x50]
0x4001e4:	mov	rsi, rdx
0x4001e7:	mov	rdi, rax
0x4001ea:	call	0x40051a
<Block for 0x4001ef, 12 bytes>
0x4001ef:	lea	rax, [rbp - 0x50]
0x4001f3:	mov	rdi, rax
0x4001f6:	call	0x500018
<Block for 0x4001fb, 12 bytes>
0x4001fb:	lea	rax, [rbp - 0x50]
0x4001ff:	mov	rdi, rax
0x400202:	call	0x4004fa
<Block for 0x400207, 12 bytes>
0x400207:	lea	rax, [rbp - 0x80]
0x40020b:	mov	rdi, rax
0x40020e:	call	0x4004fa
<Block for 0x400213, 16 bytes>
0x400213:	nop	
0x400214:	mov	rax, qword ptr [rbp - 0x18]
0x400218:	xor	rax, qword ptr fs:[0x28]
0x400221:	je	0x40025d
<Block for 0x40025d, 10 bytes>
0x40025d:	add	rsp, 0x88
0x400264:	pop	rbx
0x400265:	pop	rbp
0x400266:	ret	
<Block for 0x400223, 2 bytes>
0x400223:	jmp	0x400258
<Block for 0x400258, 5 bytes>
0x400258:	call	0x500010
