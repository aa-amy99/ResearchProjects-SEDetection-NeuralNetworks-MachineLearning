<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf0], rax
0x40002c:	lea	rax, [rbp - 0xf0]
0x400033:	mov	rdi, rax
0x400036:	call	0x500000
<Block for 0x40003b, 22 bytes>
0x40003b:	lea	rax, [rbp - 0x70]
0x40003f:	mov	edx, 0x63
0x400044:	mov	esi, 0x43
0x400049:	mov	rdi, rax
0x40004c:	call	0x500008
<Block for 0x400051, 16 bytes>
0x400051:	mov	byte ptr [rbp - 0xd], 0
0x400055:	lea	rax, [rbp - 0x70]
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x400061, 36 bytes>
0x400061:	mov	qword ptr [rbp - 0xe8], rax
0x400068:	mov	rax, qword ptr [rbp - 0xf0]
0x40006f:	mov	rdx, qword ptr [rbp - 0xe8]
0x400076:	lea	rcx, [rbp - 0x70]
0x40007a:	mov	rsi, rcx
0x40007d:	mov	rdi, rax
0x400080:	call	0x500018
<Block for 0x400085, 15 bytes>
0x400085:	mov	rax, qword ptr [rbp - 0xf0]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500020
<Block for 0x400094, 16 bytes>
0x400094:	nop	
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	xor	rax, qword ptr fs:[0x28]
0x4000a2:	je	0x4000a9
<Block for 0x4000a9, 2 bytes>
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500028
