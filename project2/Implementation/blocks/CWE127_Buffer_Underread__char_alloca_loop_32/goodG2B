<Block for 0x4001a3, 112 bytes>
0x4001a3:	endbr64	
0x4001a7:	push	rbp
0x4001a8:	mov	rbp, rsp
0x4001ab:	sub	rsp, 0xb0
0x4001b2:	mov	rax, qword ptr fs:[0x28]
0x4001bb:	mov	qword ptr [rbp - 8], rax
0x4001bf:	xor	eax, eax
0x4001c1:	lea	rax, [rbp - 0xa8]
0x4001c8:	mov	qword ptr [rbp - 0x98], rax
0x4001cf:	lea	rax, [rbp - 0xa8]
0x4001d6:	mov	qword ptr [rbp - 0x90], rax
0x4001dd:	mov	eax, 0x10
0x4001e2:	sub	rax, 1
0x4001e6:	add	rax, 0x6c
0x4001ea:	mov	esi, 0x10
0x4001ef:	mov	edx, 0
0x4001f4:	div	rsi
0x4001f7:	imul	rax, rax, 0x10
0x4001fb:	mov	rdx, rax
0x4001fe:	and	rdx, 0xfffffffffffff000
0x400205:	mov	rcx, rsp
0x400208:	sub	rcx, rdx
0x40020b:	mov	rdx, rcx
0x40020e:	cmp	rsp, rdx
0x400211:	je	0x400225
<Block for 0x400225, 26 bytes>
0x400225:	mov	rdx, rax
0x400228:	and	edx, 0xfff
0x40022e:	sub	rsp, rdx
0x400231:	mov	rdx, rax
0x400234:	and	edx, 0xfff
0x40023a:	test	rdx, rdx
0x40023d:	je	0x40024f
<Block for 0x400213, 18 bytes>
0x400213:	sub	rsp, 0x1000
0x40021a:	or	qword ptr [rsp + 0xff8], 0
0x400223:	jmp	0x40020e
<Block for 0x40024f, 47 bytes>
0x40024f:	mov	rax, rsp
0x400252:	add	rax, 0xf
0x400256:	shr	rax, 4
0x40025a:	shl	rax, 4
0x40025e:	mov	qword ptr [rbp - 0x88], rax
0x400265:	mov	rax, qword ptr [rbp - 0x88]
0x40026c:	mov	edx, 0x63
0x400271:	mov	esi, 0x41
0x400276:	mov	rdi, rax
0x400279:	call	0x500000
<Block for 0x40023f, 63 bytes>
0x40023f:	and	eax, 0xfff
0x400244:	sub	rax, 8
0x400248:	add	rax, rsp
0x40024b:	or	qword ptr [rax], 0
0x40024f:	mov	rax, rsp
0x400252:	add	rax, 0xf
0x400256:	shr	rax, 4
0x40025a:	shl	rax, 4
0x40025e:	mov	qword ptr [rbp - 0x88], rax
0x400265:	mov	rax, qword ptr [rbp - 0x88]
0x40026c:	mov	edx, 0x63
0x400271:	mov	esi, 0x41
0x400276:	mov	rdi, rax
0x400279:	call	0x500000
<Block for 0x40020e, 5 bytes>
0x40020e:	cmp	rsp, rdx
0x400211:	je	0x400225
<Block for 0x40027e, 89 bytes>
0x40027e:	mov	rax, qword ptr [rbp - 0x88]
0x400285:	add	rax, 0x63
0x400289:	mov	byte ptr [rax], 0
0x40028c:	mov	rax, qword ptr [rbp - 0x98]
0x400293:	mov	rax, qword ptr [rax]
0x400296:	mov	qword ptr [rbp - 0x80], rax
0x40029a:	mov	rax, qword ptr [rbp - 0x88]
0x4002a1:	mov	qword ptr [rbp - 0x80], rax
0x4002a5:	mov	rax, qword ptr [rbp - 0x98]
0x4002ac:	mov	rdx, qword ptr [rbp - 0x80]
0x4002b0:	mov	qword ptr [rax], rdx
0x4002b3:	mov	rax, qword ptr [rbp - 0x90]
0x4002ba:	mov	rax, qword ptr [rax]
0x4002bd:	mov	qword ptr [rbp - 0x78], rax
0x4002c1:	lea	rax, [rbp - 0x70]
0x4002c5:	mov	edx, 0x63
0x4002ca:	mov	esi, 0x43
0x4002cf:	mov	rdi, rax
0x4002d2:	call	0x500000
<Block for 0x4002d7, 17 bytes>
0x4002d7:	mov	byte ptr [rbp - 0xd], 0
0x4002db:	mov	qword ptr [rbp - 0xa0], 0
0x4002e6:	jmp	0x400311
<Block for 0x400311, 10 bytes>
0x400311:	cmp	qword ptr [rbp - 0xa0], 0x63
0x400319:	jbe	0x4002e8
<Block for 0x4002e8, 51 bytes>
0x4002e8:	mov	rdx, qword ptr [rbp - 0x78]
0x4002ec:	mov	rax, qword ptr [rbp - 0xa0]
0x4002f3:	add	rax, rdx
0x4002f6:	movzx	eax, byte ptr [rax]
0x4002f9:	lea	rcx, [rbp - 0x70]
0x4002fd:	mov	rdx, qword ptr [rbp - 0xa0]
0x400304:	add	rdx, rcx
0x400307:	mov	byte ptr [rdx], al
0x400309:	add	qword ptr [rbp - 0xa0], 1
0x400311:	cmp	qword ptr [rbp - 0xa0], 0x63
0x400319:	jbe	0x4002e8
<Block for 0x40031b, 16 bytes>
0x40031b:	mov	byte ptr [rbp - 0xd], 0
0x40031f:	lea	rax, [rbp - 0x70]
0x400323:	mov	rdi, rax
0x400326:	call	0x500008
<Block for 0x40032b, 16 bytes>
0x40032b:	nop	
0x40032c:	mov	rax, qword ptr [rbp - 8]
0x400330:	xor	rax, qword ptr fs:[0x28]
0x400339:	je	0x400340
<Block for 0x400340, 2 bytes>
0x400340:	leave	
0x400341:	ret	
<Block for 0x40033b, 5 bytes>
0x40033b:	call	0x500010
