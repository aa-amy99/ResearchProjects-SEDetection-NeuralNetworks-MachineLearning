<Block for 0x4001c2, 51 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	sub	rsp, 0xe0
0x4001d1:	mov	rax, qword ptr fs:[0x28]
0x4001da:	mov	qword ptr [rbp - 8], rax
0x4001de:	xor	eax, eax
0x4001e0:	mov	qword ptr [rbp - 0xe0], 0
0x4001eb:	mov	edi, 0x64
0x4001f0:	call	0x500000
<Block for 0x4001f5, 17 bytes>
0x4001f5:	mov	qword ptr [rbp - 0xd8], rax
0x4001fc:	cmp	qword ptr [rbp - 0xd8], 0
0x400204:	jne	0x400210
<Block for 0x400206, 10 bytes>
0x400206:	mov	edi, 0xffffffff
0x40020b:	call	0x500008
<Block for 0x400210, 25 bytes>
0x400210:	mov	rax, qword ptr [rbp - 0xd8]
0x400217:	mov	edx, 0x63
0x40021c:	mov	esi, 0x41
0x400221:	mov	rdi, rax
0x400224:	call	0x500010
<Block for 0x400229, 53 bytes>
0x400229:	mov	rax, qword ptr [rbp - 0xd8]
0x400230:	add	rax, 0x63
0x400234:	mov	byte ptr [rax], 0
0x400237:	mov	rax, qword ptr [rbp - 0xd8]
0x40023e:	mov	qword ptr [rbp - 0xe0], rax
0x400245:	lea	rax, [rbp - 0xd0]
0x40024c:	mov	edx, 0xc7
0x400251:	mov	esi, 0x43
0x400256:	mov	rdi, rax
0x400259:	call	0x500010
<Block for 0x40025e, 29 bytes>
0x40025e:	mov	byte ptr [rbp - 9], 0
0x400262:	mov	rdx, qword ptr [rbp - 0xe0]
0x400269:	lea	rax, [rbp - 0xd0]
0x400270:	mov	rsi, rdx
0x400273:	mov	rdi, rax
0x400276:	call	0x500018
<Block for 0x40027b, 15 bytes>
0x40027b:	lea	rax, [rbp - 0xd0]
0x400282:	mov	rdi, rax
0x400285:	call	0x500020
<Block for 0x40028a, 16 bytes>
0x40028a:	nop	
0x40028b:	mov	rax, qword ptr [rbp - 8]
0x40028f:	xor	rax, qword ptr fs:[0x28]
0x400298:	je	0x40029f
<Block for 0x40029f, 2 bytes>
0x40029f:	leave	
0x4002a0:	ret	
<Block for 0x40029a, 5 bytes>
0x40029a:	call	0x500028
