<Block for 0x4000f8, 81 bytes>
0x4000f8:	endbr64	
0x4000fc:	push	rbp
0x4000fd:	mov	rbp, rsp
0x400100:	sub	rsp, 0x40
0x400104:	mov	rax, qword ptr fs:[0x28]
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	xor	eax, eax
0x400113:	mov	eax, 0x10
0x400118:	sub	rax, 1
0x40011c:	add	rax, 0x6c
0x400120:	mov	esi, 0x10
0x400125:	mov	edx, 0
0x40012a:	div	rsi
0x40012d:	imul	rax, rax, 0x10
0x400131:	mov	rdx, rax
0x400134:	and	rdx, 0xfffffffffffff000
0x40013b:	mov	rcx, rsp
0x40013e:	sub	rcx, rdx
0x400141:	mov	rdx, rcx
0x400144:	cmp	rsp, rdx
0x400147:	je	0x40015b
<Block for 0x40015b, 26 bytes>
0x40015b:	mov	rdx, rax
0x40015e:	and	edx, 0xfff
0x400164:	sub	rsp, rdx
0x400167:	mov	rdx, rax
0x40016a:	and	edx, 0xfff
0x400170:	test	rdx, rdx
0x400173:	je	0x400185
<Block for 0x400149, 18 bytes>
0x400149:	sub	rsp, 0x1000
0x400150:	or	qword ptr [rsp + 0xff8], 0
0x400159:	jmp	0x400144
<Block for 0x400185, 41 bytes>
0x400185:	mov	rax, rsp
0x400188:	add	rax, 0xf
0x40018c:	shr	rax, 4
0x400190:	shl	rax, 4
0x400194:	mov	qword ptr [rbp - 0x40], rax
0x400198:	mov	rax, qword ptr [rbp - 0x40]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x41
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500000
<Block for 0x400175, 57 bytes>
0x400175:	and	eax, 0xfff
0x40017a:	sub	rax, 8
0x40017e:	add	rax, rsp
0x400181:	or	qword ptr [rax], 0
0x400185:	mov	rax, rsp
0x400188:	add	rax, 0xf
0x40018c:	shr	rax, 4
0x400190:	shl	rax, 4
0x400194:	mov	qword ptr [rbp - 0x40], rax
0x400198:	mov	rax, qword ptr [rbp - 0x40]
0x40019c:	mov	edx, 0x63
0x4001a1:	mov	esi, 0x41
0x4001a6:	mov	rdi, rax
0x4001a9:	call	0x500000
<Block for 0x400144, 5 bytes>
0x400144:	cmp	rsp, rdx
0x400147:	je	0x40015b
<Block for 0x4001ae, 39 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x40]
0x4001b2:	add	rax, 0x63
0x4001b6:	mov	byte ptr [rax], 0
0x4001b9:	mov	rax, qword ptr [rbp - 0x40]
0x4001bd:	mov	qword ptr [rbp - 0x38], rax
0x4001c1:	mov	rax, qword ptr [rbp - 0x38]
0x4001c5:	mov	qword ptr [rbp - 0x20], rax
0x4001c9:	lea	rax, [rbp - 0x30]
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500018
<Block for 0x4001d5, 16 bytes>
0x4001d5:	nop	
0x4001d6:	mov	rax, qword ptr [rbp - 8]
0x4001da:	xor	rax, qword ptr fs:[0x28]
0x4001e3:	je	0x4001ea
<Block for 0x4001ea, 2 bytes>
0x4001ea:	leave	
0x4001eb:	ret	
<Block for 0x4001e5, 5 bytes>
0x4001e5:	call	0x500010
