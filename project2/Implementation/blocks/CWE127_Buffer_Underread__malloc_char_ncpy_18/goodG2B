<Block for 0x4000d7, 50 bytes>
0x4000d7:	endbr64	
0x4000db:	push	rbp
0x4000dc:	mov	rbp, rsp
0x4000df:	add	rsp, -0x80
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	mov	qword ptr [rbp - 0x80], 0
0x4000fa:	nop	
0x4000fb:	endbr64	
0x4000ff:	mov	edi, 0x64
0x400104:	call	0x500000
<Block for 0x400109, 11 bytes>
0x400109:	mov	qword ptr [rbp - 0x78], rax
0x40010d:	cmp	qword ptr [rbp - 0x78], 0
0x400112:	jne	0x40011e
<Block for 0x400114, 10 bytes>
0x400114:	mov	edi, 0xffffffff
0x400119:	call	0x500008
<Block for 0x40011e, 22 bytes>
0x40011e:	mov	rax, qword ptr [rbp - 0x78]
0x400122:	mov	edx, 0x63
0x400127:	mov	esi, 0x41
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500010
<Block for 0x400134, 41 bytes>
0x400134:	mov	rax, qword ptr [rbp - 0x78]
0x400138:	add	rax, 0x63
0x40013c:	mov	byte ptr [rax], 0
0x40013f:	mov	rax, qword ptr [rbp - 0x78]
0x400143:	mov	qword ptr [rbp - 0x80], rax
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500010
<Block for 0x40015d, 16 bytes>
0x40015d:	mov	byte ptr [rbp - 0xd], 0
0x400161:	lea	rax, [rbp - 0x70]
0x400165:	mov	rdi, rax
0x400168:	call	0x500018
<Block for 0x40016d, 22 bytes>
0x40016d:	mov	rdx, rax
0x400170:	mov	rcx, qword ptr [rbp - 0x80]
0x400174:	lea	rax, [rbp - 0x70]
0x400178:	mov	rsi, rcx
0x40017b:	mov	rdi, rax
0x40017e:	call	0x500020
<Block for 0x400183, 16 bytes>
0x400183:	mov	byte ptr [rbp - 0xd], 0
0x400187:	lea	rax, [rbp - 0x70]
0x40018b:	mov	rdi, rax
0x40018e:	call	0x500028
<Block for 0x400193, 16 bytes>
0x400193:	nop	
0x400194:	mov	rax, qword ptr [rbp - 8]
0x400198:	xor	rax, qword ptr fs:[0x28]
0x4001a1:	je	0x4001a8
<Block for 0x4001a8, 2 bytes>
0x4001a8:	leave	
0x4001a9:	ret	
<Block for 0x4001a3, 5 bytes>
0x4001a3:	call	0x500030
