<Block for 0x400000, 41 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	byte ptr [rbp - 0xd], 0x20
0x40001f:	mov	eax, 0
0x400024:	call	0x500000
<Block for 0x400029, 4 bytes>
0x400029:	test	eax, eax
0x40002b:	je	0x400052
<Block for 0x400052, 31 bytes>
0x400052:	mov	byte ptr [rbp - 0xc], 0x78
0x400056:	movzx	eax, byte ptr [rbp - 0xd]
0x40005a:	mov	byte ptr [rbp - 0xb], al
0x40005d:	mov	byte ptr [rbp - 0xa], 0x7a
0x400061:	mov	byte ptr [rbp - 9], 0
0x400065:	lea	rax, [rbp - 0xc]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500020
<Block for 0x40002d, 15 bytes>
0x40002d:	mov	rax, qword ptr [rip + 0xfffd4]
0x400034:	mov	rdi, rax
0x400037:	call	0x500010
<Block for 0x400071, 16 bytes>
0x400071:	nop	
0x400072:	mov	rax, qword ptr [rbp - 8]
0x400076:	xor	rax, qword ptr fs:[0x28]
0x40007f:	je	0x400086
<Block for 0x40003c, 19 bytes>
0x40003c:	mov	byte ptr [rbp - 0xc], al
0x40003f:	mov	byte ptr [rbp - 0xb], 0
0x400043:	lea	rax, [rbp - 0xc]
0x400047:	mov	rdi, rax
0x40004a:	call	0x500018
<Block for 0x400086, 2 bytes>
0x400086:	leave	
0x400087:	ret	
<Block for 0x400081, 5 bytes>
0x400081:	call	0x500028
<Block for 0x40004f, 34 bytes>
0x40004f:	mov	byte ptr [rbp - 0xd], al
0x400052:	mov	byte ptr [rbp - 0xc], 0x78
0x400056:	movzx	eax, byte ptr [rbp - 0xd]
0x40005a:	mov	byte ptr [rbp - 0xb], al
0x40005d:	mov	byte ptr [rbp - 0xa], 0x7a
0x400061:	mov	byte ptr [rbp - 9], 0
0x400065:	lea	rax, [rbp - 0xc]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500020
