<Block for 0x4000fd, 41 bytes>
0x4000fd:	endbr64	
0x400101:	push	rbp
0x400102:	mov	rbp, rsp
0x400105:	sub	rsp, 0x10
0x400109:	mov	rax, qword ptr fs:[0x28]
0x400112:	mov	qword ptr [rbp - 8], rax
0x400116:	xor	eax, eax
0x400118:	mov	byte ptr [rbp - 0xd], 0x20
0x40011c:	mov	eax, 0
0x400121:	call	0x500000
<Block for 0x400126, 4 bytes>
0x400126:	test	eax, eax
0x400128:	je	0x40012e
<Block for 0x40012e, 31 bytes>
0x40012e:	mov	byte ptr [rbp - 0xc], 0x78
0x400132:	movzx	eax, byte ptr [rbp - 0xd]
0x400136:	mov	byte ptr [rbp - 0xb], al
0x400139:	mov	byte ptr [rbp - 0xa], 0x7a
0x40013d:	mov	byte ptr [rbp - 9], 0
0x400141:	lea	rax, [rbp - 0xc]
0x400145:	mov	rdi, rax
0x400148:	call	0x500020
<Block for 0x40012a, 35 bytes>
0x40012a:	mov	byte ptr [rbp - 0xd], 0x61
0x40012e:	mov	byte ptr [rbp - 0xc], 0x78
0x400132:	movzx	eax, byte ptr [rbp - 0xd]
0x400136:	mov	byte ptr [rbp - 0xb], al
0x400139:	mov	byte ptr [rbp - 0xa], 0x7a
0x40013d:	mov	byte ptr [rbp - 9], 0
0x400141:	lea	rax, [rbp - 0xc]
0x400145:	mov	rdi, rax
0x400148:	call	0x500020
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500028
