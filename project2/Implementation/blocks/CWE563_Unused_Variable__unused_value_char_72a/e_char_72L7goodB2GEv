<Block for 0x4002f0, 40 bytes>
0x4002f0:	endbr64	
0x4002f4:	push	rbp
0x4002f5:	mov	rbp, rsp
0x4002f8:	push	rbx
0x4002f9:	sub	rsp, 0x58
0x4002fd:	mov	rax, qword ptr fs:[0x28]
0x400306:	mov	qword ptr [rbp - 0x18], rax
0x40030a:	xor	eax, eax
0x40030c:	lea	rax, [rbp - 0x50]
0x400310:	mov	rdi, rax
0x400313:	call	0x4004e4
<Block for 0x400318, 16 bytes>
0x400318:	mov	byte ptr [rbp - 0x59], 0x43
0x40031c:	lea	rax, [rbp - 0x50]
0x400320:	mov	rdi, rax
0x400323:	call	0x400666
<Block for 0x400328, 23 bytes>
0x400328:	mov	qword ptr [rbp - 0x58], rax
0x40032c:	lea	rdx, [rbp - 0x58]
0x400330:	lea	rax, [rbp - 0x30]
0x400334:	mov	rsi, rdx
0x400337:	mov	rdi, rax
0x40033a:	call	0x4006b6
<Block for 0x40033f, 28 bytes>
0x40033f:	lea	rdx, [rbp - 0x59]
0x400343:	mov	rsi, qword ptr [rbp - 0x30]
0x400347:	lea	rax, [rbp - 0x50]
0x40034b:	mov	rcx, rdx
0x40034e:	mov	edx, 1
0x400353:	mov	rdi, rax
0x400356:	call	0x4006e4
<Block for 0x40035b, 12 bytes>
0x40035b:	lea	rax, [rbp - 0x50]
0x40035f:	mov	rdi, rax
0x400362:	call	0x400666
<Block for 0x400367, 23 bytes>
0x400367:	mov	qword ptr [rbp - 0x58], rax
0x40036b:	lea	rdx, [rbp - 0x58]
0x40036f:	lea	rax, [rbp - 0x30]
0x400373:	mov	rsi, rdx
0x400376:	mov	rdi, rax
0x400379:	call	0x4006b6
<Block for 0x40037e, 28 bytes>
0x40037e:	lea	rdx, [rbp - 0x59]
0x400382:	mov	rsi, qword ptr [rbp - 0x30]
0x400386:	lea	rax, [rbp - 0x50]
0x40038a:	mov	rcx, rdx
0x40038d:	mov	edx, 1
0x400392:	mov	rdi, rax
0x400395:	call	0x4006e4
<Block for 0x40039a, 12 bytes>
0x40039a:	lea	rax, [rbp - 0x50]
0x40039e:	mov	rdi, rax
0x4003a1:	call	0x400666
<Block for 0x4003a6, 23 bytes>
0x4003a6:	mov	qword ptr [rbp - 0x58], rax
0x4003aa:	lea	rdx, [rbp - 0x58]
0x4003ae:	lea	rax, [rbp - 0x30]
0x4003b2:	mov	rsi, rdx
0x4003b5:	mov	rdi, rax
0x4003b8:	call	0x4006b6
<Block for 0x4003bd, 28 bytes>
0x4003bd:	lea	rdx, [rbp - 0x59]
0x4003c1:	mov	rsi, qword ptr [rbp - 0x30]
0x4003c5:	lea	rax, [rbp - 0x50]
0x4003c9:	mov	rcx, rdx
0x4003cc:	mov	edx, 1
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x4006e4
<Block for 0x4003d9, 19 bytes>
0x4003d9:	lea	rdx, [rbp - 0x50]
0x4003dd:	lea	rax, [rbp - 0x30]
0x4003e1:	mov	rsi, rdx
0x4003e4:	mov	rdi, rax
0x4003e7:	call	0x4007aa
<Block for 0x4003ec, 12 bytes>
0x4003ec:	lea	rax, [rbp - 0x30]
0x4003f0:	mov	rdi, rax
0x4003f3:	call	0x500028
<Block for 0x4003f8, 12 bytes>
0x4003f8:	lea	rax, [rbp - 0x30]
0x4003fc:	mov	rdi, rax
0x4003ff:	call	0x40061e
<Block for 0x400404, 12 bytes>
0x400404:	lea	rax, [rbp - 0x50]
0x400408:	mov	rdi, rax
0x40040b:	call	0x40061e
<Block for 0x400410, 16 bytes>
0x400410:	nop	
0x400411:	mov	rax, qword ptr [rbp - 0x18]
0x400415:	xor	rax, qword ptr fs:[0x28]
0x40041e:	je	0x40045a
<Block for 0x40045a, 7 bytes>
0x40045a:	add	rsp, 0x58
0x40045e:	pop	rbx
0x40045f:	pop	rbp
0x400460:	ret	
<Block for 0x400420, 2 bytes>
0x400420:	jmp	0x400455
<Block for 0x400455, 5 bytes>
0x400455:	call	0x500010
