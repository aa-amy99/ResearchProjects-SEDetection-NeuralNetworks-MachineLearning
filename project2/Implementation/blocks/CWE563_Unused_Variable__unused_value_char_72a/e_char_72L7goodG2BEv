<Block for 0x400171, 40 bytes>
0x400171:	endbr64	
0x400175:	push	rbp
0x400176:	mov	rbp, rsp
0x400179:	push	rbx
0x40017a:	sub	rsp, 0x58
0x40017e:	mov	rax, qword ptr fs:[0x28]
0x400187:	mov	qword ptr [rbp - 0x18], rax
0x40018b:	xor	eax, eax
0x40018d:	lea	rax, [rbp - 0x50]
0x400191:	mov	rdi, rax
0x400194:	call	0x4004e4
<Block for 0x400199, 18 bytes>
0x400199:	mov	byte ptr [rbp - 0x59], 0x43
0x40019d:	movzx	eax, byte ptr [rbp - 0x59]
0x4001a1:	movsx	eax, al
0x4001a4:	mov	edi, eax
0x4001a6:	call	0x500018
<Block for 0x4001ab, 12 bytes>
0x4001ab:	lea	rax, [rbp - 0x50]
0x4001af:	mov	rdi, rax
0x4001b2:	call	0x400666
<Block for 0x4001b7, 23 bytes>
0x4001b7:	mov	qword ptr [rbp - 0x58], rax
0x4001bb:	lea	rdx, [rbp - 0x58]
0x4001bf:	lea	rax, [rbp - 0x30]
0x4001c3:	mov	rsi, rdx
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x4006b6
<Block for 0x4001ce, 28 bytes>
0x4001ce:	lea	rdx, [rbp - 0x59]
0x4001d2:	mov	rsi, qword ptr [rbp - 0x30]
0x4001d6:	lea	rax, [rbp - 0x50]
0x4001da:	mov	rcx, rdx
0x4001dd:	mov	edx, 1
0x4001e2:	mov	rdi, rax
0x4001e5:	call	0x4006e4
<Block for 0x4001ea, 12 bytes>
0x4001ea:	lea	rax, [rbp - 0x50]
0x4001ee:	mov	rdi, rax
0x4001f1:	call	0x400666
<Block for 0x4001f6, 23 bytes>
0x4001f6:	mov	qword ptr [rbp - 0x58], rax
0x4001fa:	lea	rdx, [rbp - 0x58]
0x4001fe:	lea	rax, [rbp - 0x30]
0x400202:	mov	rsi, rdx
0x400205:	mov	rdi, rax
0x400208:	call	0x4006b6
<Block for 0x40020d, 28 bytes>
0x40020d:	lea	rdx, [rbp - 0x59]
0x400211:	mov	rsi, qword ptr [rbp - 0x30]
0x400215:	lea	rax, [rbp - 0x50]
0x400219:	mov	rcx, rdx
0x40021c:	mov	edx, 1
0x400221:	mov	rdi, rax
0x400224:	call	0x4006e4
<Block for 0x400229, 12 bytes>
0x400229:	lea	rax, [rbp - 0x50]
0x40022d:	mov	rdi, rax
0x400230:	call	0x400666
<Block for 0x400235, 23 bytes>
0x400235:	mov	qword ptr [rbp - 0x58], rax
0x400239:	lea	rdx, [rbp - 0x58]
0x40023d:	lea	rax, [rbp - 0x30]
0x400241:	mov	rsi, rdx
0x400244:	mov	rdi, rax
0x400247:	call	0x4006b6
<Block for 0x40024c, 28 bytes>
0x40024c:	lea	rdx, [rbp - 0x59]
0x400250:	mov	rsi, qword ptr [rbp - 0x30]
0x400254:	lea	rax, [rbp - 0x50]
0x400258:	mov	rcx, rdx
0x40025b:	mov	edx, 1
0x400260:	mov	rdi, rax
0x400263:	call	0x4006e4
<Block for 0x400268, 19 bytes>
0x400268:	lea	rdx, [rbp - 0x50]
0x40026c:	lea	rax, [rbp - 0x30]
0x400270:	mov	rsi, rdx
0x400273:	mov	rdi, rax
0x400276:	call	0x4007aa
<Block for 0x40027b, 12 bytes>
0x40027b:	lea	rax, [rbp - 0x30]
0x40027f:	mov	rdi, rax
0x400282:	call	0x500020
<Block for 0x400287, 12 bytes>
0x400287:	lea	rax, [rbp - 0x30]
0x40028b:	mov	rdi, rax
0x40028e:	call	0x40061e
<Block for 0x400293, 12 bytes>
0x400293:	lea	rax, [rbp - 0x50]
0x400297:	mov	rdi, rax
0x40029a:	call	0x40061e
<Block for 0x40029f, 16 bytes>
0x40029f:	nop	
0x4002a0:	mov	rax, qword ptr [rbp - 0x18]
0x4002a4:	xor	rax, qword ptr fs:[0x28]
0x4002ad:	je	0x4002e9
<Block for 0x4002e9, 7 bytes>
0x4002e9:	add	rsp, 0x58
0x4002ed:	pop	rbx
0x4002ee:	pop	rbp
0x4002ef:	ret	
<Block for 0x4002af, 2 bytes>
0x4002af:	jmp	0x4002e4
<Block for 0x4002e4, 5 bytes>
0x4002e4:	call	0x500010
