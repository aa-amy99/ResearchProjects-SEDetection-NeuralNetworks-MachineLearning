<Block for 0x4000d4, 57 bytes>
0x4000d4:	endbr64	
0x4000d8:	push	rbp
0x4000d9:	mov	rbp, rsp
0x4000dc:	sub	rsp, 0xa0
0x4000e3:	mov	qword ptr [rbp - 0x98], rdi
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	mov	rax, qword ptr [rbp - 0x98]
0x400100:	mov	esi, 2
0x400105:	mov	rdi, rax
0x400108:	call	0x4001aa
<Block for 0x40010d, 29 bytes>
0x40010d:	mov	rax, qword ptr [rax]
0x400110:	mov	qword ptr [rbp - 0x80], rax
0x400114:	lea	rax, [rbp - 0x70]
0x400118:	mov	edx, 0x63
0x40011d:	mov	esi, 0x43
0x400122:	mov	rdi, rax
0x400125:	call	0x500000
<Block for 0x40012a, 16 bytes>
0x40012a:	mov	byte ptr [rbp - 0xd], 0
0x40012e:	lea	rax, [rbp - 0x70]
0x400132:	mov	rdi, rax
0x400135:	call	0x500008
<Block for 0x40013a, 28 bytes>
0x40013a:	mov	qword ptr [rbp - 0x78], rax
0x40013e:	mov	qword ptr [rbp - 0x88], 0
0x400149:	mov	rax, qword ptr [rbp - 0x88]
0x400150:	cmp	rax, qword ptr [rbp - 0x78]
0x400154:	jae	0x400181
<Block for 0x400156, 43 bytes>
0x400156:	mov	rdx, qword ptr [rbp - 0x80]
0x40015a:	mov	rax, qword ptr [rbp - 0x88]
0x400161:	add	rax, rdx
0x400164:	movzx	eax, byte ptr [rax]
0x400167:	lea	rcx, [rbp - 0x70]
0x40016b:	mov	rdx, qword ptr [rbp - 0x88]
0x400172:	add	rdx, rcx
0x400175:	mov	byte ptr [rdx], al
0x400177:	add	qword ptr [rbp - 0x88], 1
0x40017f:	jmp	0x400149
<Block for 0x400181, 16 bytes>
0x400181:	mov	byte ptr [rbp - 0xd], 0
0x400185:	lea	rax, [rbp - 0x70]
0x400189:	mov	rdi, rax
0x40018c:	call	0x500010
<Block for 0x400149, 13 bytes>
0x400149:	mov	rax, qword ptr [rbp - 0x88]
0x400150:	cmp	rax, qword ptr [rbp - 0x78]
0x400154:	jae	0x400181
<Block for 0x400191, 16 bytes>
0x400191:	nop	
0x400192:	mov	rax, qword ptr [rbp - 8]
0x400196:	xor	rax, qword ptr fs:[0x28]
0x40019f:	je	0x4001a6
<Block for 0x4001a6, 2 bytes>
0x4001a6:	leave	
0x4001a7:	ret	
<Block for 0x4001a1, 5 bytes>
0x4001a1:	call	0x500018
