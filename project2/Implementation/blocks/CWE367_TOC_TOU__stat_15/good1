<Block for 0x400187, 161 bytes>
0x400187:	endbr64	
0x40018b:	push	rbp
0x40018c:	mov	rbp, rsp
0x40018f:	add	rsp, -0x80
0x400193:	mov	rax, qword ptr fs:[0x28]
0x40019c:	mov	qword ptr [rbp - 8], rax
0x4001a0:	xor	eax, eax
0x4001a2:	mov	qword ptr [rbp - 0x70], 0
0x4001aa:	mov	qword ptr [rbp - 0x68], 0
0x4001b2:	mov	qword ptr [rbp - 0x60], 0
0x4001ba:	mov	qword ptr [rbp - 0x58], 0
0x4001c2:	mov	qword ptr [rbp - 0x50], 0
0x4001ca:	mov	qword ptr [rbp - 0x48], 0
0x4001d2:	mov	qword ptr [rbp - 0x40], 0
0x4001da:	mov	qword ptr [rbp - 0x38], 0
0x4001e2:	mov	qword ptr [rbp - 0x30], 0
0x4001ea:	mov	qword ptr [rbp - 0x28], 0
0x4001f2:	mov	qword ptr [rbp - 0x20], 0
0x4001fa:	mov	qword ptr [rbp - 0x18], 0
0x400202:	mov	dword ptr [rbp - 0x10], 0
0x400209:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400210:	mov	rdx, qword ptr [rip + 0xffde9]
0x400217:	lea	rax, [rbp - 0x70]
0x40021b:	mov	esi, 0x64
0x400220:	mov	rdi, rax
0x400223:	call	0x500008
<Block for 0x400228, 5 bytes>
0x400228:	test	rax, rax
0x40022b:	jne	0x40023d
<Block for 0x40022d, 12 bytes>
0x40022d:	lea	rdi, [rip + 0x20c]
0x400234:	call	0x500010
<Block for 0x40023d, 11 bytes>
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	movzx	eax, byte ptr [rax]
0x400244:	test	al, al
0x400246:	je	0x40025d
<Block for 0x400239, 15 bytes>
0x400239:	mov	byte ptr [rbp - 0x70], 0
0x40023d:	lea	rax, [rbp - 0x70]
0x400241:	movzx	eax, byte ptr [rax]
0x400244:	test	al, al
0x400246:	je	0x40025d
<Block for 0x40025d, 22 bytes>
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	esi, 2
0x400266:	mov	rdi, rax
0x400269:	mov	eax, 0
0x40026e:	call	0x500030
<Block for 0x400248, 12 bytes>
0x400248:	lea	rax, [rbp - 0x70]
0x40024c:	mov	rdi, rax
0x40024f:	call	0x500018
<Block for 0x400273, 9 bytes>
0x400273:	mov	dword ptr [rbp - 0x74], eax
0x400276:	cmp	dword ptr [rbp - 0x74], -1
0x40027a:	jne	0x400286
<Block for 0x400254, 31 bytes>
0x400254:	sub	rax, 1
0x400258:	mov	byte ptr [rbp + rax - 0x70], 0
0x40025d:	lea	rax, [rbp - 0x70]
0x400261:	mov	esi, 2
0x400266:	mov	rdi, rax
0x400269:	mov	eax, 0
0x40026e:	call	0x500030
<Block for 0x40027c, 10 bytes>
0x40027c:	mov	edi, 1
0x400281:	call	0x500028
<Block for 0x400286, 22 bytes>
0x400286:	mov	eax, dword ptr [rbp - 0x74]
0x400289:	mov	edx, 0xc
0x40028e:	lea	rsi, [rip + 0x1c6]
0x400295:	mov	edi, eax
0x400297:	call	0x500038
<Block for 0x40029c, 6 bytes>
0x40029c:	cmp	rax, -1
0x4002a0:	jne	0x4002ac
<Block for 0x4002a2, 10 bytes>
0x4002a2:	mov	edi, 1
0x4002a7:	call	0x500028
<Block for 0x4002ac, 6 bytes>
0x4002ac:	cmp	dword ptr [rbp - 0x74], -1
0x4002b0:	je	0x4002bc
<Block for 0x4002bc, 17 bytes>
0x4002bc:	nop	
0x4002bd:	nop	
0x4002be:	mov	rax, qword ptr [rbp - 8]
0x4002c2:	xor	rax, qword ptr fs:[0x28]
0x4002cb:	je	0x4002d2
<Block for 0x4002b2, 10 bytes>
0x4002b2:	mov	eax, dword ptr [rbp - 0x74]
0x4002b5:	mov	edi, eax
0x4002b7:	call	0x500040
<Block for 0x4002d2, 2 bytes>
0x4002d2:	leave	
0x4002d3:	ret	
<Block for 0x4002cd, 5 bytes>
0x4002cd:	call	0x500048
