<Block for 0x400000, 167 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x70], 0
0x400026:	mov	qword ptr [rbp - 0x68], 0
0x40002e:	mov	qword ptr [rbp - 0x60], 0
0x400036:	mov	qword ptr [rbp - 0x58], 0
0x40003e:	mov	qword ptr [rbp - 0x50], 0
0x400046:	mov	qword ptr [rbp - 0x48], 0
0x40004e:	mov	qword ptr [rbp - 0x40], 0
0x400056:	mov	qword ptr [rbp - 0x38], 0
0x40005e:	mov	qword ptr [rbp - 0x30], 0
0x400066:	mov	qword ptr [rbp - 0x28], 0
0x40006e:	mov	qword ptr [rbp - 0x20], 0
0x400076:	mov	qword ptr [rbp - 0x18], 0
0x40007e:	mov	dword ptr [rbp - 0x10], 0
0x400085:	mov	dword ptr [rbp - 0x104], 0xffffffff
0x40008f:	mov	rdx, qword ptr [rip + 0xfff6a]
0x400096:	lea	rax, [rbp - 0x70]
0x40009a:	mov	esi, 0x64
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500008
<Block for 0x4000a7, 5 bytes>
0x4000a7:	test	rax, rax
0x4000aa:	jne	0x4000bc
<Block for 0x4000ac, 12 bytes>
0x4000ac:	lea	rdi, [rip + 0x38d]
0x4000b3:	call	0x500010
<Block for 0x4000bc, 11 bytes>
0x4000bc:	lea	rax, [rbp - 0x70]
0x4000c0:	movzx	eax, byte ptr [rax]
0x4000c3:	test	al, al
0x4000c5:	je	0x4000dc
<Block for 0x4000b8, 15 bytes>
0x4000b8:	mov	byte ptr [rbp - 0x70], 0
0x4000bc:	lea	rax, [rbp - 0x70]
0x4000c0:	movzx	eax, byte ptr [rax]
0x4000c3:	test	al, al
0x4000c5:	je	0x4000dc
<Block for 0x4000dc, 22 bytes>
0x4000dc:	lea	rdx, [rbp - 0x100]
0x4000e3:	lea	rax, [rbp - 0x70]
0x4000e7:	mov	rsi, rdx
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500020
<Block for 0x4000c7, 12 bytes>
0x4000c7:	lea	rax, [rbp - 0x70]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500018
<Block for 0x4000f2, 5 bytes>
0x4000f2:	cmp	eax, -1
0x4000f5:	jne	0x400101
<Block for 0x4000d3, 31 bytes>
0x4000d3:	sub	rax, 1
0x4000d7:	mov	byte ptr [rbp + rax - 0x70], 0
0x4000dc:	lea	rdx, [rbp - 0x100]
0x4000e3:	lea	rax, [rbp - 0x70]
0x4000e7:	mov	rsi, rdx
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500020
<Block for 0x4000f7, 10 bytes>
0x4000f7:	mov	edi, 1
0x4000fc:	call	0x500028
<Block for 0x400101, 22 bytes>
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	esi, 2
0x40010a:	mov	rdi, rax
0x40010d:	mov	eax, 0
0x400112:	call	0x500030
<Block for 0x400117, 15 bytes>
0x400117:	mov	dword ptr [rbp - 0x104], eax
0x40011d:	cmp	dword ptr [rbp - 0x104], -1
0x400124:	jne	0x400130
<Block for 0x400126, 10 bytes>
0x400126:	mov	edi, 1
0x40012b:	call	0x500028
<Block for 0x400130, 25 bytes>
0x400130:	mov	eax, dword ptr [rbp - 0x104]
0x400136:	mov	edx, 0xb
0x40013b:	lea	rsi, [rip + 0x30d]
0x400142:	mov	edi, eax
0x400144:	call	0x500038
<Block for 0x400149, 6 bytes>
0x400149:	cmp	rax, -1
0x40014d:	jne	0x400159
<Block for 0x40014f, 10 bytes>
0x40014f:	mov	edi, 1
0x400154:	call	0x500028
<Block for 0x400159, 9 bytes>
0x400159:	cmp	dword ptr [rbp - 0x104], -1
0x400160:	je	0x40016f
<Block for 0x40016f, 17 bytes>
0x40016f:	nop	
0x400170:	nop	
0x400171:	mov	rax, qword ptr [rbp - 8]
0x400175:	xor	rax, qword ptr fs:[0x28]
0x40017e:	je	0x400185
<Block for 0x400162, 13 bytes>
0x400162:	mov	eax, dword ptr [rbp - 0x104]
0x400168:	mov	edi, eax
0x40016a:	call	0x500040
<Block for 0x400185, 2 bytes>
0x400185:	leave	
0x400186:	ret	
<Block for 0x400180, 5 bytes>
0x400180:	call	0x500048
