<Block for 0x4002d4, 161 bytes>
0x4002d4:	endbr64	
0x4002d8:	push	rbp
0x4002d9:	mov	rbp, rsp
0x4002dc:	add	rsp, -0x80
0x4002e0:	mov	rax, qword ptr fs:[0x28]
0x4002e9:	mov	qword ptr [rbp - 8], rax
0x4002ed:	xor	eax, eax
0x4002ef:	mov	qword ptr [rbp - 0x70], 0
0x4002f7:	mov	qword ptr [rbp - 0x68], 0
0x4002ff:	mov	qword ptr [rbp - 0x60], 0
0x400307:	mov	qword ptr [rbp - 0x58], 0
0x40030f:	mov	qword ptr [rbp - 0x50], 0
0x400317:	mov	qword ptr [rbp - 0x48], 0
0x40031f:	mov	qword ptr [rbp - 0x40], 0
0x400327:	mov	qword ptr [rbp - 0x38], 0
0x40032f:	mov	qword ptr [rbp - 0x30], 0
0x400337:	mov	qword ptr [rbp - 0x28], 0
0x40033f:	mov	qword ptr [rbp - 0x20], 0
0x400347:	mov	qword ptr [rbp - 0x18], 0
0x40034f:	mov	dword ptr [rbp - 0x10], 0
0x400356:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x40035d:	mov	rdx, qword ptr [rip + 0xffc9c]
0x400364:	lea	rax, [rbp - 0x70]
0x400368:	mov	esi, 0x64
0x40036d:	mov	rdi, rax
0x400370:	call	0x500008
<Block for 0x400375, 5 bytes>
0x400375:	test	rax, rax
0x400378:	jne	0x40038a
<Block for 0x40037a, 12 bytes>
0x40037a:	lea	rdi, [rip + 0xbf]
0x400381:	call	0x500010
<Block for 0x40038a, 11 bytes>
0x40038a:	lea	rax, [rbp - 0x70]
0x40038e:	movzx	eax, byte ptr [rax]
0x400391:	test	al, al
0x400393:	je	0x4003aa
<Block for 0x400386, 15 bytes>
0x400386:	mov	byte ptr [rbp - 0x70], 0
0x40038a:	lea	rax, [rbp - 0x70]
0x40038e:	movzx	eax, byte ptr [rax]
0x400391:	test	al, al
0x400393:	je	0x4003aa
<Block for 0x4003aa, 22 bytes>
0x4003aa:	lea	rax, [rbp - 0x70]
0x4003ae:	mov	esi, 2
0x4003b3:	mov	rdi, rax
0x4003b6:	mov	eax, 0
0x4003bb:	call	0x500030
<Block for 0x400395, 12 bytes>
0x400395:	lea	rax, [rbp - 0x70]
0x400399:	mov	rdi, rax
0x40039c:	call	0x500018
<Block for 0x4003c0, 9 bytes>
0x4003c0:	mov	dword ptr [rbp - 0x74], eax
0x4003c3:	cmp	dword ptr [rbp - 0x74], -1
0x4003c7:	jne	0x4003d3
<Block for 0x4003a1, 31 bytes>
0x4003a1:	sub	rax, 1
0x4003a5:	mov	byte ptr [rbp + rax - 0x70], 0
0x4003aa:	lea	rax, [rbp - 0x70]
0x4003ae:	mov	esi, 2
0x4003b3:	mov	rdi, rax
0x4003b6:	mov	eax, 0
0x4003bb:	call	0x500030
<Block for 0x4003c9, 10 bytes>
0x4003c9:	mov	edi, 1
0x4003ce:	call	0x500028
<Block for 0x4003d3, 22 bytes>
0x4003d3:	mov	eax, dword ptr [rbp - 0x74]
0x4003d6:	mov	edx, 0xc
0x4003db:	lea	rsi, [rip + 0x79]
0x4003e2:	mov	edi, eax
0x4003e4:	call	0x500038
<Block for 0x4003e9, 6 bytes>
0x4003e9:	cmp	rax, -1
0x4003ed:	jne	0x4003f9
<Block for 0x4003ef, 10 bytes>
0x4003ef:	mov	edi, 1
0x4003f4:	call	0x500028
<Block for 0x4003f9, 6 bytes>
0x4003f9:	cmp	dword ptr [rbp - 0x74], -1
0x4003fd:	je	0x400409
<Block for 0x400409, 17 bytes>
0x400409:	nop	
0x40040a:	nop	
0x40040b:	mov	rax, qword ptr [rbp - 8]
0x40040f:	xor	rax, qword ptr fs:[0x28]
0x400418:	je	0x40041f
<Block for 0x4003ff, 10 bytes>
0x4003ff:	mov	eax, dword ptr [rbp - 0x74]
0x400402:	mov	edi, eax
0x400404:	call	0x500040
<Block for 0x40041f, 2 bytes>
0x40041f:	leave	
0x400420:	ret	
<Block for 0x40041a, 5 bytes>
0x40041a:	call	0x500048
