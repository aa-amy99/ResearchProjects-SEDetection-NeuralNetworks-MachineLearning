<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0x88], 0
0x400029:	mov	eax, 5
0x40002e:	cmp	eax, 5
0x400031:	jne	0x400082
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x64
0x400038:	call	0x500000
<Block for 0x400082, 22 bytes>
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	mov	edx, 0x63
0x40008b:	mov	esi, 0x43
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x40003d, 11 bytes>
0x40003d:	mov	qword ptr [rbp - 0x78], rax
0x400041:	cmp	qword ptr [rbp - 0x78], 0
0x400046:	jne	0x400052
<Block for 0x400098, 14 bytes>
0x400098:	mov	byte ptr [rbp - 0xd], 0
0x40009c:	mov	qword ptr [rbp - 0x80], 0
0x4000a4:	jmp	0x4000c9
<Block for 0x400048, 10 bytes>
0x400048:	mov	edi, 0xffffffff
0x40004d:	call	0x500008
<Block for 0x400052, 22 bytes>
0x400052:	mov	rax, qword ptr [rbp - 0x78]
0x400056:	mov	edx, 0x63
0x40005b:	mov	esi, 0x41
0x400060:	mov	rdi, rax
0x400063:	call	0x500010
<Block for 0x4000c9, 7 bytes>
0x4000c9:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000ce:	jbe	0x4000a6
<Block for 0x400068, 48 bytes>
0x400068:	mov	rax, qword ptr [rbp - 0x78]
0x40006c:	add	rax, 0x63
0x400070:	mov	byte ptr [rax], 0
0x400073:	mov	rax, qword ptr [rbp - 0x78]
0x400077:	sub	rax, 8
0x40007b:	mov	qword ptr [rbp - 0x88], rax
0x400082:	lea	rax, [rbp - 0x70]
0x400086:	mov	edx, 0x63
0x40008b:	mov	esi, 0x43
0x400090:	mov	rdi, rax
0x400093:	call	0x500010
<Block for 0x4000a6, 42 bytes>
0x4000a6:	mov	rdx, qword ptr [rbp - 0x88]
0x4000ad:	mov	rax, qword ptr [rbp - 0x80]
0x4000b1:	add	rdx, rax
0x4000b4:	lea	rcx, [rbp - 0x70]
0x4000b8:	mov	rax, qword ptr [rbp - 0x80]
0x4000bc:	add	rax, rcx
0x4000bf:	movzx	eax, byte ptr [rax]
0x4000c2:	mov	byte ptr [rdx], al
0x4000c4:	add	qword ptr [rbp - 0x80], 1
0x4000c9:	cmp	qword ptr [rbp - 0x80], 0x63
0x4000ce:	jbe	0x4000a6
<Block for 0x4000d0, 29 bytes>
0x4000d0:	mov	rax, qword ptr [rbp - 0x88]
0x4000d7:	add	rax, 0x63
0x4000db:	mov	byte ptr [rax], 0
0x4000de:	mov	rax, qword ptr [rbp - 0x88]
0x4000e5:	mov	rdi, rax
0x4000e8:	call	0x500018
<Block for 0x4000ed, 16 bytes>
0x4000ed:	nop	
0x4000ee:	mov	rax, qword ptr [rbp - 8]
0x4000f2:	xor	rax, qword ptr fs:[0x28]
0x4000fb:	je	0x400102
<Block for 0x400102, 2 bytes>
0x400102:	leave	
0x400103:	ret	
<Block for 0x4000fd, 5 bytes>
0x4000fd:	call	0x500020
