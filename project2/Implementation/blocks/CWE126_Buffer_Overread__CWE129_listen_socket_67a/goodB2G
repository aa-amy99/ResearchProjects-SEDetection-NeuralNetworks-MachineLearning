<Block for 0x40018e, 68 bytes>
0x40018e:	endbr64	
0x400192:	push	rbp
0x400193:	mov	rbp, rsp
0x400196:	sub	rsp, 0x50
0x40019a:	mov	rax, qword ptr fs:[0x28]
0x4001a3:	mov	qword ptr [rbp - 8], rax
0x4001a7:	xor	eax, eax
0x4001a9:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x4001b0:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4001b7:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4001be:	mov	edx, 6
0x4001c3:	mov	esi, 1
0x4001c8:	mov	edi, 2
0x4001cd:	call	0x500000
<Block for 0x4001d2, 13 bytes>
0x4001d2:	mov	dword ptr [rbp - 0x38], eax
0x4001d5:	cmp	dword ptr [rbp - 0x38], -1
0x4001d9:	je	0x40029e
<Block for 0x40029e, 3 bytes>
0x40029e:	nop	
0x40029f:	jmp	0x4002a8
<Block for 0x4001df, 22 bytes>
0x4001df:	lea	rax, [rbp - 0x30]
0x4001e3:	mov	edx, 0x10
0x4001e8:	mov	esi, 0
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500008
<Block for 0x4002a8, 6 bytes>
0x4002a8:	cmp	dword ptr [rbp - 0x38], -1
0x4002ac:	je	0x4002b8
<Block for 0x4001f5, 23 bytes>
0x4001f5:	mov	word ptr [rbp - 0x30], 2
0x4001fb:	mov	dword ptr [rbp - 0x2c], 0
0x400202:	mov	edi, 0x6987
0x400207:	call	0x500010
<Block for 0x4002b8, 6 bytes>
0x4002b8:	cmp	dword ptr [rbp - 0x3c], -1
0x4002bc:	je	0x4002c8
<Block for 0x4002ae, 10 bytes>
0x4002ae:	mov	eax, dword ptr [rbp - 0x38]
0x4002b1:	mov	edi, eax
0x4002b3:	call	0x500040
<Block for 0x40020c, 26 bytes>
0x40020c:	mov	word ptr [rbp - 0x2e], ax
0x400210:	lea	rcx, [rbp - 0x30]
0x400214:	mov	eax, dword ptr [rbp - 0x38]
0x400217:	mov	edx, 0x10
0x40021c:	mov	rsi, rcx
0x40021f:	mov	edi, eax
0x400221:	call	0x500018
<Block for 0x4002c8, 16 bytes>
0x4002c8:	mov	eax, dword ptr [rbp - 0x40]
0x4002cb:	mov	dword ptr [rbp - 0x44], eax
0x4002ce:	mov	eax, dword ptr [rbp - 0x44]
0x4002d1:	mov	edi, eax
0x4002d3:	call	0x500060
<Block for 0x4002be, 10 bytes>
0x4002be:	mov	eax, dword ptr [rbp - 0x3c]
0x4002c1:	mov	edi, eax
0x4002c3:	call	0x500040
<Block for 0x400226, 5 bytes>
0x400226:	cmp	eax, -1
0x400229:	je	0x4002a1
<Block for 0x4002d8, 16 bytes>
0x4002d8:	nop	
0x4002d9:	mov	rax, qword ptr [rbp - 8]
0x4002dd:	xor	rax, qword ptr fs:[0x28]
0x4002e6:	je	0x4002ed
<Block for 0x4002a1, 3 bytes>
0x4002a1:	nop	
0x4002a2:	jmp	0x4002a8
<Block for 0x40022b, 15 bytes>
0x40022b:	mov	eax, dword ptr [rbp - 0x38]
0x40022e:	mov	esi, 5
0x400233:	mov	edi, eax
0x400235:	call	0x500020
<Block for 0x4002ed, 2 bytes>
0x4002ed:	leave	
0x4002ee:	ret	
<Block for 0x4002e8, 5 bytes>
0x4002e8:	call	0x500050
<Block for 0x40023a, 5 bytes>
0x40023a:	cmp	eax, -1
0x40023d:	je	0x4002a4
<Block for 0x4002a4, 3 bytes>
0x4002a4:	nop	
0x4002a5:	jmp	0x4002a8
<Block for 0x40023f, 20 bytes>
0x40023f:	mov	eax, dword ptr [rbp - 0x38]
0x400242:	mov	edx, 0
0x400247:	mov	esi, 0
0x40024c:	mov	edi, eax
0x40024e:	call	0x500028
<Block for 0x400253, 9 bytes>
0x400253:	mov	dword ptr [rbp - 0x3c], eax
0x400256:	cmp	dword ptr [rbp - 0x3c], -1
0x40025a:	je	0x4002a7
<Block for 0x40025c, 24 bytes>
0x40025c:	lea	rsi, [rbp - 0x16]
0x400260:	mov	eax, dword ptr [rbp - 0x3c]
0x400263:	mov	ecx, 0
0x400268:	mov	edx, 0xd
0x40026d:	mov	edi, eax
0x40026f:	call	0x500030
<Block for 0x4002a7, 1 bytes>
0x4002a7:	nop	
<Block for 0x400274, 9 bytes>
0x400274:	mov	dword ptr [rbp - 0x34], eax
0x400277:	cmp	dword ptr [rbp - 0x34], -1
0x40027b:	je	0x4002a8
<Block for 0x40027d, 6 bytes>
0x40027d:	cmp	dword ptr [rbp - 0x34], 0
0x400281:	je	0x4002a8
<Block for 0x400283, 22 bytes>
0x400283:	mov	eax, dword ptr [rbp - 0x34]
0x400286:	cdqe	
0x400288:	mov	byte ptr [rbp + rax - 0x16], 0
0x40028d:	lea	rax, [rbp - 0x16]
0x400291:	mov	rdi, rax
0x400294:	call	0x500038
<Block for 0x400299, 5 bytes>
0x400299:	mov	dword ptr [rbp - 0x40], eax
0x40029c:	jmp	0x4002a8
