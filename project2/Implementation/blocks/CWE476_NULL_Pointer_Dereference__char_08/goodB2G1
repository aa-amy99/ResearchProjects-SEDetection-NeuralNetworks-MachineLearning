<Block for 0x400062, 22 bytes>
0x400062:	endbr64	
0x400066:	push	rbp
0x400067:	mov	rbp, rsp
0x40006a:	sub	rsp, 0x10
0x40006e:	mov	eax, 0
0x400073:	call	0x400000
<Block for 0x400078, 4 bytes>
0x400078:	test	eax, eax
0x40007a:	je	0x400084
<Block for 0x400084, 10 bytes>
0x400084:	mov	eax, 0
0x400089:	call	0x40000f
<Block for 0x40007c, 18 bytes>
0x40007c:	mov	qword ptr [rbp - 8], 0
0x400084:	mov	eax, 0
0x400089:	call	0x40000f
<Block for 0x40008e, 4 bytes>
0x40008e:	test	eax, eax
0x400090:	je	0x4000a0
<Block for 0x4000a0, 7 bytes>
0x4000a0:	cmp	qword ptr [rbp - 8], 0
0x4000a5:	je	0x4000ba
<Block for 0x400092, 12 bytes>
0x400092:	lea	rdi, [rip + 0x158]
0x400099:	call	0x500008
<Block for 0x4000ba, 12 bytes>
0x4000ba:	lea	rdi, [rip + 0x145]
0x4000c1:	call	0x500008
<Block for 0x4000a7, 17 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	movzx	eax, byte ptr [rax]
0x4000ae:	movsx	eax, al
0x4000b1:	mov	edi, eax
0x4000b3:	call	0x500000
<Block for 0x40009e, 2 bytes>
0x40009e:	jmp	0x4000c6
<Block for 0x4000c6, 3 bytes>
0x4000c6:	nop	
0x4000c7:	leave	
0x4000c8:	ret	
<Block for 0x4000b8, 2 bytes>
0x4000b8:	jmp	0x4000c6
