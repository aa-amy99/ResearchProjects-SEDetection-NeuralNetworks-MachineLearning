<Block for 0x4000d2, 45 bytes>
0x4000d2:	endbr64	
0x4000d6:	push	rbp
0x4000d7:	mov	rbp, rsp
0x4000da:	add	rsp, -0x80
0x4000de:	mov	rax, qword ptr fs:[0x28]
0x4000e7:	mov	qword ptr [rbp - 8], rax
0x4000eb:	xor	eax, eax
0x4000ed:	mov	qword ptr [rbp - 0x78], 0
0x4000f5:	mov	eax, dword ptr [rip + 0x1a5]
0x4000fb:	test	eax, eax
0x4000fd:	je	0x40010d
<Block for 0x40010d, 10 bytes>
0x40010d:	mov	edi, 0x64
0x400112:	call	0x500000
<Block for 0x4000ff, 12 bytes>
0x4000ff:	lea	rdi, [rip + 0x19e]
0x400106:	call	0x500020
<Block for 0x400117, 26 bytes>
0x400117:	mov	qword ptr [rbp - 0x78], rax
0x40011b:	mov	rax, qword ptr [rbp - 0x78]
0x40011f:	mov	edx, 0x63
0x400124:	mov	esi, 0x41
0x400129:	mov	rdi, rax
0x40012c:	call	0x500008
<Block for 0x40010b, 2 bytes>
0x40010b:	jmp	0x40013c
<Block for 0x400131, 33 bytes>
0x400131:	mov	rax, qword ptr [rbp - 0x78]
0x400135:	add	rax, 0x63
0x400139:	mov	byte ptr [rax], 0
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x43
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500008
<Block for 0x40013c, 22 bytes>
0x40013c:	lea	rax, [rbp - 0x70]
0x400140:	mov	edx, 0x63
0x400145:	mov	esi, 0x43
0x40014a:	mov	rdi, rax
0x40014d:	call	0x500008
<Block for 0x400152, 16 bytes>
0x400152:	mov	byte ptr [rbp - 0xd], 0
0x400156:	lea	rax, [rbp - 0x70]
0x40015a:	mov	rdi, rax
0x40015d:	call	0x500010
<Block for 0x400162, 22 bytes>
0x400162:	mov	rdx, rax
0x400165:	mov	rcx, qword ptr [rbp - 0x78]
0x400169:	lea	rax, [rbp - 0x70]
0x40016d:	mov	rsi, rcx
0x400170:	mov	rdi, rax
0x400173:	call	0x500018
<Block for 0x400178, 16 bytes>
0x400178:	mov	byte ptr [rbp - 0xd], 0
0x40017c:	lea	rax, [rbp - 0x70]
0x400180:	mov	rdi, rax
0x400183:	call	0x500020
<Block for 0x400188, 7 bytes>
0x400188:	cmp	qword ptr [rbp - 0x78], 0
0x40018d:	je	0x40019b
<Block for 0x40019b, 16 bytes>
0x40019b:	nop	
0x40019c:	mov	rax, qword ptr [rbp - 8]
0x4001a0:	xor	rax, qword ptr fs:[0x28]
0x4001a9:	je	0x4001b0
<Block for 0x40018f, 12 bytes>
0x40018f:	mov	rax, qword ptr [rbp - 0x78]
0x400193:	mov	rdi, rax
0x400196:	call	0x500028
<Block for 0x4001b0, 2 bytes>
0x4001b0:	leave	
0x4001b1:	ret	
<Block for 0x4001ab, 5 bytes>
0x4001ab:	call	0x500030
