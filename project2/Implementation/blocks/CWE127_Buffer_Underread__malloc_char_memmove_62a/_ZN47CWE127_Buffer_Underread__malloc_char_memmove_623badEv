<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x78], 0
0x400023:	lea	rax, [rbp - 0x78]
0x400027:	mov	rdi, rax
0x40002a:	call	0x500000
<Block for 0x40002f, 22 bytes>
0x40002f:	lea	rax, [rbp - 0x70]
0x400033:	mov	edx, 0x63
0x400038:	mov	esi, 0x43
0x40003d:	mov	rdi, rax
0x400040:	call	0x500008
<Block for 0x400045, 28 bytes>
0x400045:	mov	byte ptr [rbp - 0xd], 0
0x400049:	mov	rcx, qword ptr [rbp - 0x78]
0x40004d:	lea	rax, [rbp - 0x70]
0x400051:	mov	edx, 0x64
0x400056:	mov	rsi, rcx
0x400059:	mov	rdi, rax
0x40005c:	call	0x500010
<Block for 0x400061, 16 bytes>
0x400061:	mov	byte ptr [rbp - 0xd], 0
0x400065:	lea	rax, [rbp - 0x70]
0x400069:	mov	rdi, rax
0x40006c:	call	0x500018
<Block for 0x400071, 16 bytes>
0x400071:	nop	
0x400072:	mov	rax, qword ptr [rbp - 8]
0x400076:	xor	rax, qword ptr fs:[0x28]
0x40007f:	je	0x400086
<Block for 0x400086, 2 bytes>
0x400086:	leave	
0x400087:	ret	
<Block for 0x400081, 5 bytes>
0x400081:	call	0x500020
