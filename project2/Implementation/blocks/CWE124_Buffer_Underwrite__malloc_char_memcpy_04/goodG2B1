<Block for 0x400153, 51 bytes>
0x400153:	endbr64	
0x400157:	push	rbp
0x400158:	mov	rbp, rsp
0x40015b:	push	rbx
0x40015c:	sub	rsp, 0x88
0x400163:	mov	rax, qword ptr fs:[0x28]
0x40016c:	mov	qword ptr [rbp - 0x18], rax
0x400170:	xor	eax, eax
0x400172:	mov	qword ptr [rbp - 0x90], 0
0x40017d:	mov	eax, 0
0x400182:	test	eax, eax
0x400184:	je	0x400194
<Block for 0x400194, 10 bytes>
0x400194:	mov	edi, 0x64
0x400199:	call	0x500000
<Block for 0x400186, 12 bytes>
0x400186:	lea	rdi, [rip + 0x29b]
0x40018d:	call	0x500018
<Block for 0x40019e, 17 bytes>
0x40019e:	mov	qword ptr [rbp - 0x88], rax
0x4001a5:	cmp	qword ptr [rbp - 0x88], 0
0x4001ad:	jne	0x4001b9
<Block for 0x400192, 2 bytes>
0x400192:	jmp	0x4001ee
<Block for 0x4001af, 10 bytes>
0x4001af:	mov	edi, 0xffffffff
0x4001b4:	call	0x500008
<Block for 0x4001b9, 25 bytes>
0x4001b9:	mov	rax, qword ptr [rbp - 0x88]
0x4001c0:	mov	edx, 0x63
0x4001c5:	mov	esi, 0x41
0x4001ca:	mov	rdi, rax
0x4001cd:	call	0x500010
<Block for 0x4001ee, 22 bytes>
0x4001ee:	lea	rax, [rbp - 0x80]
0x4001f2:	mov	edx, 0x63
0x4001f7:	mov	esi, 0x43
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500010
<Block for 0x4001d2, 50 bytes>
0x4001d2:	mov	rax, qword ptr [rbp - 0x88]
0x4001d9:	add	rax, 0x63
0x4001dd:	mov	byte ptr [rax], 0
0x4001e0:	mov	rax, qword ptr [rbp - 0x88]
0x4001e7:	mov	qword ptr [rbp - 0x90], rax
0x4001ee:	lea	rax, [rbp - 0x80]
0x4001f2:	mov	edx, 0x63
0x4001f7:	mov	esi, 0x43
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500010
<Block for 0x400204, 141 bytes>
0x400204:	mov	byte ptr [rbp - 0x1d], 0
0x400208:	mov	rax, qword ptr [rbp - 0x90]
0x40020f:	mov	rcx, qword ptr [rbp - 0x80]
0x400213:	mov	rbx, qword ptr [rbp - 0x78]
0x400217:	mov	qword ptr [rax], rcx
0x40021a:	mov	qword ptr [rax + 8], rbx
0x40021e:	mov	rcx, qword ptr [rbp - 0x70]
0x400222:	mov	rbx, qword ptr [rbp - 0x68]
0x400226:	mov	qword ptr [rax + 0x10], rcx
0x40022a:	mov	qword ptr [rax + 0x18], rbx
0x40022e:	mov	rcx, qword ptr [rbp - 0x60]
0x400232:	mov	rbx, qword ptr [rbp - 0x58]
0x400236:	mov	qword ptr [rax + 0x20], rcx
0x40023a:	mov	qword ptr [rax + 0x28], rbx
0x40023e:	mov	rcx, qword ptr [rbp - 0x50]
0x400242:	mov	rbx, qword ptr [rbp - 0x48]
0x400246:	mov	qword ptr [rax + 0x30], rcx
0x40024a:	mov	qword ptr [rax + 0x38], rbx
0x40024e:	mov	rcx, qword ptr [rbp - 0x40]
0x400252:	mov	rbx, qword ptr [rbp - 0x38]
0x400256:	mov	qword ptr [rax + 0x40], rcx
0x40025a:	mov	qword ptr [rax + 0x48], rbx
0x40025e:	mov	rcx, qword ptr [rbp - 0x30]
0x400262:	mov	rbx, qword ptr [rbp - 0x28]
0x400266:	mov	qword ptr [rax + 0x50], rcx
0x40026a:	mov	qword ptr [rax + 0x58], rbx
0x40026e:	mov	edx, dword ptr [rbp - 0x20]
0x400271:	mov	dword ptr [rax + 0x60], edx
0x400274:	mov	rax, qword ptr [rbp - 0x90]
0x40027b:	add	rax, 0x63
0x40027f:	mov	byte ptr [rax], 0
0x400282:	mov	rax, qword ptr [rbp - 0x90]
0x400289:	mov	rdi, rax
0x40028c:	call	0x500018
<Block for 0x400291, 16 bytes>
0x400291:	nop	
0x400292:	mov	rax, qword ptr [rbp - 0x18]
0x400296:	xor	rax, qword ptr fs:[0x28]
0x40029f:	je	0x4002a6
<Block for 0x4002a6, 10 bytes>
0x4002a6:	add	rsp, 0x88
0x4002ad:	pop	rbx
0x4002ae:	pop	rbp
0x4002af:	ret	
<Block for 0x4002a1, 5 bytes>
0x4002a1:	call	0x500020
