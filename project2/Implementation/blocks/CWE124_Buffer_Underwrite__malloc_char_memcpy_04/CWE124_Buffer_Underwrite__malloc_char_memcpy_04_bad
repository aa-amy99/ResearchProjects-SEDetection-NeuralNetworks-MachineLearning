<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x90], 0
0x40002a:	mov	eax, 1
0x40002f:	test	eax, eax
0x400031:	je	0x400091
<Block for 0x400091, 22 bytes>
0x400091:	lea	rax, [rbp - 0x80]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x64
0x400038:	call	0x500000
<Block for 0x4000a7, 141 bytes>
0x4000a7:	mov	byte ptr [rbp - 0x1d], 0
0x4000ab:	mov	rax, qword ptr [rbp - 0x90]
0x4000b2:	mov	rcx, qword ptr [rbp - 0x80]
0x4000b6:	mov	rbx, qword ptr [rbp - 0x78]
0x4000ba:	mov	qword ptr [rax], rcx
0x4000bd:	mov	qword ptr [rax + 8], rbx
0x4000c1:	mov	rcx, qword ptr [rbp - 0x70]
0x4000c5:	mov	rbx, qword ptr [rbp - 0x68]
0x4000c9:	mov	qword ptr [rax + 0x10], rcx
0x4000cd:	mov	qword ptr [rax + 0x18], rbx
0x4000d1:	mov	rcx, qword ptr [rbp - 0x60]
0x4000d5:	mov	rbx, qword ptr [rbp - 0x58]
0x4000d9:	mov	qword ptr [rax + 0x20], rcx
0x4000dd:	mov	qword ptr [rax + 0x28], rbx
0x4000e1:	mov	rcx, qword ptr [rbp - 0x50]
0x4000e5:	mov	rbx, qword ptr [rbp - 0x48]
0x4000e9:	mov	qword ptr [rax + 0x30], rcx
0x4000ed:	mov	qword ptr [rax + 0x38], rbx
0x4000f1:	mov	rcx, qword ptr [rbp - 0x40]
0x4000f5:	mov	rbx, qword ptr [rbp - 0x38]
0x4000f9:	mov	qword ptr [rax + 0x40], rcx
0x4000fd:	mov	qword ptr [rax + 0x48], rbx
0x400101:	mov	rcx, qword ptr [rbp - 0x30]
0x400105:	mov	rbx, qword ptr [rbp - 0x28]
0x400109:	mov	qword ptr [rax + 0x50], rcx
0x40010d:	mov	qword ptr [rax + 0x58], rbx
0x400111:	mov	edx, dword ptr [rbp - 0x20]
0x400114:	mov	dword ptr [rax + 0x60], edx
0x400117:	mov	rax, qword ptr [rbp - 0x90]
0x40011e:	add	rax, 0x63
0x400122:	mov	byte ptr [rax], 0
0x400125:	mov	rax, qword ptr [rbp - 0x90]
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500018
<Block for 0x40003d, 17 bytes>
0x40003d:	mov	qword ptr [rbp - 0x88], rax
0x400044:	cmp	qword ptr [rbp - 0x88], 0
0x40004c:	jne	0x400058
<Block for 0x400134, 16 bytes>
0x400134:	nop	
0x400135:	mov	rax, qword ptr [rbp - 0x18]
0x400139:	xor	rax, qword ptr fs:[0x28]
0x400142:	je	0x400149
<Block for 0x40004e, 10 bytes>
0x40004e:	mov	edi, 0xffffffff
0x400053:	call	0x500008
<Block for 0x400058, 25 bytes>
0x400058:	mov	rax, qword ptr [rbp - 0x88]
0x40005f:	mov	edx, 0x63
0x400064:	mov	esi, 0x41
0x400069:	mov	rdi, rax
0x40006c:	call	0x500010
<Block for 0x400149, 10 bytes>
0x400149:	add	rsp, 0x88
0x400150:	pop	rbx
0x400151:	pop	rbp
0x400152:	ret	
<Block for 0x400144, 5 bytes>
0x400144:	call	0x500020
<Block for 0x400071, 54 bytes>
0x400071:	mov	rax, qword ptr [rbp - 0x88]
0x400078:	add	rax, 0x63
0x40007c:	mov	byte ptr [rax], 0
0x40007f:	mov	rax, qword ptr [rbp - 0x88]
0x400086:	sub	rax, 8
0x40008a:	mov	qword ptr [rbp - 0x90], rax
0x400091:	lea	rax, [rbp - 0x80]
0x400095:	mov	edx, 0x63
0x40009a:	mov	esi, 0x43
0x40009f:	mov	rdi, rax
0x4000a2:	call	0x500010
