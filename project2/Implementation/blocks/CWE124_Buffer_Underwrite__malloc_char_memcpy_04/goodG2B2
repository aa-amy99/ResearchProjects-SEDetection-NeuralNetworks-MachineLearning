<Block for 0x4002b0, 51 bytes>
0x4002b0:	endbr64	
0x4002b4:	push	rbp
0x4002b5:	mov	rbp, rsp
0x4002b8:	push	rbx
0x4002b9:	sub	rsp, 0x88
0x4002c0:	mov	rax, qword ptr fs:[0x28]
0x4002c9:	mov	qword ptr [rbp - 0x18], rax
0x4002cd:	xor	eax, eax
0x4002cf:	mov	qword ptr [rbp - 0x90], 0
0x4002da:	mov	eax, 1
0x4002df:	test	eax, eax
0x4002e1:	je	0x40033d
<Block for 0x40033d, 22 bytes>
0x40033d:	lea	rax, [rbp - 0x80]
0x400341:	mov	edx, 0x63
0x400346:	mov	esi, 0x43
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500010
<Block for 0x4002e3, 10 bytes>
0x4002e3:	mov	edi, 0x64
0x4002e8:	call	0x500000
<Block for 0x400353, 141 bytes>
0x400353:	mov	byte ptr [rbp - 0x1d], 0
0x400357:	mov	rax, qword ptr [rbp - 0x90]
0x40035e:	mov	rcx, qword ptr [rbp - 0x80]
0x400362:	mov	rbx, qword ptr [rbp - 0x78]
0x400366:	mov	qword ptr [rax], rcx
0x400369:	mov	qword ptr [rax + 8], rbx
0x40036d:	mov	rcx, qword ptr [rbp - 0x70]
0x400371:	mov	rbx, qword ptr [rbp - 0x68]
0x400375:	mov	qword ptr [rax + 0x10], rcx
0x400379:	mov	qword ptr [rax + 0x18], rbx
0x40037d:	mov	rcx, qword ptr [rbp - 0x60]
0x400381:	mov	rbx, qword ptr [rbp - 0x58]
0x400385:	mov	qword ptr [rax + 0x20], rcx
0x400389:	mov	qword ptr [rax + 0x28], rbx
0x40038d:	mov	rcx, qword ptr [rbp - 0x50]
0x400391:	mov	rbx, qword ptr [rbp - 0x48]
0x400395:	mov	qword ptr [rax + 0x30], rcx
0x400399:	mov	qword ptr [rax + 0x38], rbx
0x40039d:	mov	rcx, qword ptr [rbp - 0x40]
0x4003a1:	mov	rbx, qword ptr [rbp - 0x38]
0x4003a5:	mov	qword ptr [rax + 0x40], rcx
0x4003a9:	mov	qword ptr [rax + 0x48], rbx
0x4003ad:	mov	rcx, qword ptr [rbp - 0x30]
0x4003b1:	mov	rbx, qword ptr [rbp - 0x28]
0x4003b5:	mov	qword ptr [rax + 0x50], rcx
0x4003b9:	mov	qword ptr [rax + 0x58], rbx
0x4003bd:	mov	edx, dword ptr [rbp - 0x20]
0x4003c0:	mov	dword ptr [rax + 0x60], edx
0x4003c3:	mov	rax, qword ptr [rbp - 0x90]
0x4003ca:	add	rax, 0x63
0x4003ce:	mov	byte ptr [rax], 0
0x4003d1:	mov	rax, qword ptr [rbp - 0x90]
0x4003d8:	mov	rdi, rax
0x4003db:	call	0x500018
<Block for 0x4002ed, 17 bytes>
0x4002ed:	mov	qword ptr [rbp - 0x88], rax
0x4002f4:	cmp	qword ptr [rbp - 0x88], 0
0x4002fc:	jne	0x400308
<Block for 0x4003e0, 16 bytes>
0x4003e0:	nop	
0x4003e1:	mov	rax, qword ptr [rbp - 0x18]
0x4003e5:	xor	rax, qword ptr fs:[0x28]
0x4003ee:	je	0x4003f5
<Block for 0x4002fe, 10 bytes>
0x4002fe:	mov	edi, 0xffffffff
0x400303:	call	0x500008
<Block for 0x400308, 25 bytes>
0x400308:	mov	rax, qword ptr [rbp - 0x88]
0x40030f:	mov	edx, 0x63
0x400314:	mov	esi, 0x41
0x400319:	mov	rdi, rax
0x40031c:	call	0x500010
<Block for 0x4003f5, 10 bytes>
0x4003f5:	add	rsp, 0x88
0x4003fc:	pop	rbx
0x4003fd:	pop	rbp
0x4003fe:	ret	
<Block for 0x4003f0, 5 bytes>
0x4003f0:	call	0x500020
<Block for 0x400321, 50 bytes>
0x400321:	mov	rax, qword ptr [rbp - 0x88]
0x400328:	add	rax, 0x63
0x40032c:	mov	byte ptr [rax], 0
0x40032f:	mov	rax, qword ptr [rbp - 0x88]
0x400336:	mov	qword ptr [rbp - 0x90], rax
0x40033d:	lea	rax, [rbp - 0x80]
0x400341:	mov	edx, 0x63
0x400346:	mov	esi, 0x43
0x40034b:	mov	rdi, rax
0x40034e:	call	0x500010
