<Block for 0x4000ad, 92 bytes>
0x4000ad:	endbr64	
0x4000b1:	push	rbp
0x4000b2:	mov	rbp, rsp
0x4000b5:	sub	rsp, 0x30
0x4000b9:	mov	rax, qword ptr fs:[0x28]
0x4000c2:	mov	qword ptr [rbp - 8], rax
0x4000c6:	xor	eax, eax
0x4000c8:	lea	rax, [rip - 0xcf]
0x4000cf:	mov	qword ptr [rbp - 0x28], rax
0x4000d3:	mov	eax, 0x10
0x4000d8:	sub	rax, 1
0x4000dc:	add	rax, 0x3a
0x4000e0:	mov	ecx, 0x10
0x4000e5:	mov	edx, 0
0x4000ea:	div	rcx
0x4000ed:	imul	rax, rax, 0x10
0x4000f1:	mov	rdx, rax
0x4000f4:	and	rdx, 0xfffffffffffff000
0x4000fb:	mov	rcx, rsp
0x4000fe:	sub	rcx, rdx
0x400101:	mov	rdx, rcx
0x400104:	cmp	rsp, rdx
0x400107:	je	0x40011b
<Block for 0x40011b, 26 bytes>
0x40011b:	mov	rdx, rax
0x40011e:	and	edx, 0xfff
0x400124:	sub	rsp, rdx
0x400127:	mov	rdx, rax
0x40012a:	and	edx, 0xfff
0x400130:	test	rdx, rdx
0x400133:	je	0x400145
<Block for 0x400109, 18 bytes>
0x400109:	sub	rsp, 0x1000
0x400110:	or	qword ptr [rsp + 0xff8], 0
0x400119:	jmp	0x400104
<Block for 0x400145, 73 bytes>
0x400145:	mov	rax, rsp
0x400148:	add	rax, 0xf
0x40014c:	shr	rax, 4
0x400150:	shl	rax, 4
0x400154:	mov	qword ptr [rbp - 0x20], rax
0x400158:	mov	eax, 0x10
0x40015d:	sub	rax, 1
0x400161:	add	rax, 0x6c
0x400165:	mov	edi, 0x10
0x40016a:	mov	edx, 0
0x40016f:	div	rdi
0x400172:	imul	rax, rax, 0x10
0x400176:	mov	rdx, rax
0x400179:	and	rdx, 0xfffffffffffff000
0x400180:	mov	rsi, rsp
0x400183:	sub	rsi, rdx
0x400186:	mov	rdx, rsi
0x400189:	cmp	rsp, rdx
0x40018c:	je	0x4001a0
<Block for 0x400135, 89 bytes>
0x400135:	and	eax, 0xfff
0x40013a:	sub	rax, 8
0x40013e:	add	rax, rsp
0x400141:	or	qword ptr [rax], 0
0x400145:	mov	rax, rsp
0x400148:	add	rax, 0xf
0x40014c:	shr	rax, 4
0x400150:	shl	rax, 4
0x400154:	mov	qword ptr [rbp - 0x20], rax
0x400158:	mov	eax, 0x10
0x40015d:	sub	rax, 1
0x400161:	add	rax, 0x6c
0x400165:	mov	edi, 0x10
0x40016a:	mov	edx, 0
0x40016f:	div	rdi
0x400172:	imul	rax, rax, 0x10
0x400176:	mov	rdx, rax
0x400179:	and	rdx, 0xfffffffffffff000
0x400180:	mov	rsi, rsp
0x400183:	sub	rsi, rdx
0x400186:	mov	rdx, rsi
0x400189:	cmp	rsp, rdx
0x40018c:	je	0x4001a0
<Block for 0x400104, 5 bytes>
0x400104:	cmp	rsp, rdx
0x400107:	je	0x40011b
<Block for 0x4001a0, 26 bytes>
0x4001a0:	mov	rdx, rax
0x4001a3:	and	edx, 0xfff
0x4001a9:	sub	rsp, rdx
0x4001ac:	mov	rdx, rax
0x4001af:	and	edx, 0xfff
0x4001b5:	test	rdx, rdx
0x4001b8:	je	0x4001ca
<Block for 0x40018e, 18 bytes>
0x40018e:	sub	rsp, 0x1000
0x400195:	or	qword ptr [rsp + 0xff8], 0
0x40019e:	jmp	0x400189
<Block for 0x4001ca, 41 bytes>
0x4001ca:	mov	rax, rsp
0x4001cd:	add	rax, 0xf
0x4001d1:	shr	rax, 4
0x4001d5:	shl	rax, 4
0x4001d9:	mov	qword ptr [rbp - 0x18], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0x20]
0x4001e1:	mov	edx, 0x31
0x4001e6:	mov	esi, 0x41
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500000
<Block for 0x4001ba, 57 bytes>
0x4001ba:	and	eax, 0xfff
0x4001bf:	sub	rax, 8
0x4001c3:	add	rax, rsp
0x4001c6:	or	qword ptr [rax], 0
0x4001ca:	mov	rax, rsp
0x4001cd:	add	rax, 0xf
0x4001d1:	shr	rax, 4
0x4001d5:	shl	rax, 4
0x4001d9:	mov	qword ptr [rbp - 0x18], rax
0x4001dd:	mov	rax, qword ptr [rbp - 0x20]
0x4001e1:	mov	edx, 0x31
0x4001e6:	mov	esi, 0x41
0x4001eb:	mov	rdi, rax
0x4001ee:	call	0x500000
<Block for 0x400189, 5 bytes>
0x400189:	cmp	rsp, rdx
0x40018c:	je	0x4001a0
<Block for 0x4001f3, 33 bytes>
0x4001f3:	mov	rax, qword ptr [rbp - 0x20]
0x4001f7:	add	rax, 0x31
0x4001fb:	mov	byte ptr [rax], 0
0x4001fe:	mov	rax, qword ptr [rbp - 0x18]
0x400202:	mov	edx, 0x63
0x400207:	mov	esi, 0x41
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500000
<Block for 0x400214, 32 bytes>
0x400214:	mov	rax, qword ptr [rbp - 0x18]
0x400218:	add	rax, 0x63
0x40021c:	mov	byte ptr [rax], 0
0x40021f:	mov	rax, qword ptr [rbp - 0x20]
0x400223:	mov	qword ptr [rbp - 0x10], rax
0x400227:	mov	rax, qword ptr [rbp - 0x10]
0x40022b:	mov	rdx, qword ptr [rbp - 0x28]
0x40022f:	mov	rdi, rax
0x400232:	call	rdx
<Block for 0x400234, 16 bytes>
0x400234:	nop	
0x400235:	mov	rax, qword ptr [rbp - 8]
0x400239:	xor	rax, qword ptr fs:[0x28]
0x400242:	je	0x400249
<Block for 0x400249, 2 bytes>
0x400249:	leave	
0x40024a:	ret	
<Block for 0x400244, 5 bytes>
0x400244:	call	0x500018
