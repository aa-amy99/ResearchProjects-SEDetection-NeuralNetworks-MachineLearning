<Block for 0x4002f8, 92 bytes>
0x4002f8:	endbr64	
0x4002fc:	push	rbp
0x4002fd:	mov	rbp, rsp
0x400300:	sub	rsp, 0x30
0x400304:	mov	rax, qword ptr fs:[0x28]
0x40030d:	mov	qword ptr [rbp - 8], rax
0x400311:	xor	eax, eax
0x400313:	lea	rax, [rip - 0xcf]
0x40031a:	mov	qword ptr [rbp - 0x28], rax
0x40031e:	mov	eax, 0x10
0x400323:	sub	rax, 1
0x400327:	add	rax, 0x3a
0x40032b:	mov	ecx, 0x10
0x400330:	mov	edx, 0
0x400335:	div	rcx
0x400338:	imul	rax, rax, 0x10
0x40033c:	mov	rdx, rax
0x40033f:	and	rdx, 0xfffffffffffff000
0x400346:	mov	rcx, rsp
0x400349:	sub	rcx, rdx
0x40034c:	mov	rdx, rcx
0x40034f:	cmp	rsp, rdx
0x400352:	je	0x400366
<Block for 0x400366, 26 bytes>
0x400366:	mov	rdx, rax
0x400369:	and	edx, 0xfff
0x40036f:	sub	rsp, rdx
0x400372:	mov	rdx, rax
0x400375:	and	edx, 0xfff
0x40037b:	test	rdx, rdx
0x40037e:	je	0x400390
<Block for 0x400354, 18 bytes>
0x400354:	sub	rsp, 0x1000
0x40035b:	or	qword ptr [rsp + 0xff8], 0
0x400364:	jmp	0x40034f
<Block for 0x400390, 73 bytes>
0x400390:	mov	rax, rsp
0x400393:	add	rax, 0xf
0x400397:	shr	rax, 4
0x40039b:	shl	rax, 4
0x40039f:	mov	qword ptr [rbp - 0x20], rax
0x4003a3:	mov	eax, 0x10
0x4003a8:	sub	rax, 1
0x4003ac:	add	rax, 0x6c
0x4003b0:	mov	edi, 0x10
0x4003b5:	mov	edx, 0
0x4003ba:	div	rdi
0x4003bd:	imul	rax, rax, 0x10
0x4003c1:	mov	rdx, rax
0x4003c4:	and	rdx, 0xfffffffffffff000
0x4003cb:	mov	rsi, rsp
0x4003ce:	sub	rsi, rdx
0x4003d1:	mov	rdx, rsi
0x4003d4:	cmp	rsp, rdx
0x4003d7:	je	0x4003eb
<Block for 0x400380, 89 bytes>
0x400380:	and	eax, 0xfff
0x400385:	sub	rax, 8
0x400389:	add	rax, rsp
0x40038c:	or	qword ptr [rax], 0
0x400390:	mov	rax, rsp
0x400393:	add	rax, 0xf
0x400397:	shr	rax, 4
0x40039b:	shl	rax, 4
0x40039f:	mov	qword ptr [rbp - 0x20], rax
0x4003a3:	mov	eax, 0x10
0x4003a8:	sub	rax, 1
0x4003ac:	add	rax, 0x6c
0x4003b0:	mov	edi, 0x10
0x4003b5:	mov	edx, 0
0x4003ba:	div	rdi
0x4003bd:	imul	rax, rax, 0x10
0x4003c1:	mov	rdx, rax
0x4003c4:	and	rdx, 0xfffffffffffff000
0x4003cb:	mov	rsi, rsp
0x4003ce:	sub	rsi, rdx
0x4003d1:	mov	rdx, rsi
0x4003d4:	cmp	rsp, rdx
0x4003d7:	je	0x4003eb
<Block for 0x40034f, 5 bytes>
0x40034f:	cmp	rsp, rdx
0x400352:	je	0x400366
<Block for 0x4003eb, 26 bytes>
0x4003eb:	mov	rdx, rax
0x4003ee:	and	edx, 0xfff
0x4003f4:	sub	rsp, rdx
0x4003f7:	mov	rdx, rax
0x4003fa:	and	edx, 0xfff
0x400400:	test	rdx, rdx
0x400403:	je	0x400415
<Block for 0x4003d9, 18 bytes>
0x4003d9:	sub	rsp, 0x1000
0x4003e0:	or	qword ptr [rsp + 0xff8], 0
0x4003e9:	jmp	0x4003d4
<Block for 0x400415, 41 bytes>
0x400415:	mov	rax, rsp
0x400418:	add	rax, 0xf
0x40041c:	shr	rax, 4
0x400420:	shl	rax, 4
0x400424:	mov	qword ptr [rbp - 0x18], rax
0x400428:	mov	rax, qword ptr [rbp - 0x20]
0x40042c:	mov	edx, 0x31
0x400431:	mov	esi, 0x41
0x400436:	mov	rdi, rax
0x400439:	call	0x500000
<Block for 0x400405, 57 bytes>
0x400405:	and	eax, 0xfff
0x40040a:	sub	rax, 8
0x40040e:	add	rax, rsp
0x400411:	or	qword ptr [rax], 0
0x400415:	mov	rax, rsp
0x400418:	add	rax, 0xf
0x40041c:	shr	rax, 4
0x400420:	shl	rax, 4
0x400424:	mov	qword ptr [rbp - 0x18], rax
0x400428:	mov	rax, qword ptr [rbp - 0x20]
0x40042c:	mov	edx, 0x31
0x400431:	mov	esi, 0x41
0x400436:	mov	rdi, rax
0x400439:	call	0x500000
<Block for 0x4003d4, 5 bytes>
0x4003d4:	cmp	rsp, rdx
0x4003d7:	je	0x4003eb
<Block for 0x40043e, 33 bytes>
0x40043e:	mov	rax, qword ptr [rbp - 0x20]
0x400442:	add	rax, 0x31
0x400446:	mov	byte ptr [rax], 0
0x400449:	mov	rax, qword ptr [rbp - 0x18]
0x40044d:	mov	edx, 0x63
0x400452:	mov	esi, 0x41
0x400457:	mov	rdi, rax
0x40045a:	call	0x500000
<Block for 0x40045f, 32 bytes>
0x40045f:	mov	rax, qword ptr [rbp - 0x18]
0x400463:	add	rax, 0x63
0x400467:	mov	byte ptr [rax], 0
0x40046a:	mov	rax, qword ptr [rbp - 0x18]
0x40046e:	mov	qword ptr [rbp - 0x10], rax
0x400472:	mov	rax, qword ptr [rbp - 0x10]
0x400476:	mov	rdx, qword ptr [rbp - 0x28]
0x40047a:	mov	rdi, rax
0x40047d:	call	rdx
<Block for 0x40047f, 16 bytes>
0x40047f:	nop	
0x400480:	mov	rax, qword ptr [rbp - 8]
0x400484:	xor	rax, qword ptr fs:[0x28]
0x40048d:	je	0x400494
<Block for 0x400494, 2 bytes>
0x400494:	leave	
0x400495:	ret	
<Block for 0x40048f, 5 bytes>
0x40048f:	call	0x500018
