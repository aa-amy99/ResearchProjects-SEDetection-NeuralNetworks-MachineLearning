<Block for 0x40001e, 40 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0xa0
0x40002d:	mov	rax, qword ptr fs:[0x28]
0x400036:	mov	qword ptr [rbp - 8], rax
0x40003a:	xor	eax, eax
0x40003c:	mov	eax, 0
0x400041:	call	0x400000
<Block for 0x400046, 8 bytes>
0x400046:	test	eax, eax
0x400048:	je	0x400290
<Block for 0x400290, 16 bytes>
0x400290:	nop	
0x400291:	mov	rax, qword ptr [rbp - 8]
0x400295:	xor	rax, qword ptr fs:[0x28]
0x40029e:	je	0x4002a5
<Block for 0x40004e, 135 bytes>
0x40004e:	mov	qword ptr [rbp - 0x70], 0
0x400056:	mov	qword ptr [rbp - 0x68], 0
0x40005e:	mov	qword ptr [rbp - 0x60], 0
0x400066:	mov	qword ptr [rbp - 0x58], 0
0x40006e:	mov	qword ptr [rbp - 0x50], 0
0x400076:	mov	qword ptr [rbp - 0x48], 0
0x40007e:	mov	qword ptr [rbp - 0x40], 0
0x400086:	mov	qword ptr [rbp - 0x38], 0
0x40008e:	mov	qword ptr [rbp - 0x30], 0
0x400096:	mov	qword ptr [rbp - 0x28], 0
0x40009e:	mov	qword ptr [rbp - 0x20], 0
0x4000a6:	mov	qword ptr [rbp - 0x18], 0
0x4000ae:	mov	dword ptr [rbp - 0x10], 0
0x4000b5:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x4000bf:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x4000c9:	lea	rax, [rbp - 0x70]
0x4000cd:	mov	rdi, rax
0x4000d0:	call	0x500000
<Block for 0x4002a5, 2 bytes>
0x4002a5:	leave	
0x4002a6:	ret	
<Block for 0x4002a0, 5 bytes>
0x4002a0:	call	0x500058
<Block for 0x4000d5, 27 bytes>
0x4000d5:	mov	qword ptr [rbp - 0x90], rax
0x4000dc:	mov	edx, 6
0x4000e1:	mov	esi, 1
0x4000e6:	mov	edi, 2
0x4000eb:	call	0x500008
<Block for 0x4000f0, 19 bytes>
0x4000f0:	mov	dword ptr [rbp - 0x98], eax
0x4000f6:	cmp	dword ptr [rbp - 0x98], -1
0x4000fd:	je	0x40024e
<Block for 0x40024e, 3 bytes>
0x40024e:	nop	
0x40024f:	jmp	0x400258
<Block for 0x400103, 22 bytes>
0x400103:	lea	rax, [rbp - 0x80]
0x400107:	mov	edx, 0x10
0x40010c:	mov	esi, 0
0x400111:	mov	rdi, rax
0x400114:	call	0x500010
<Block for 0x400258, 9 bytes>
0x400258:	cmp	dword ptr [rbp - 0x98], -1
0x40025f:	je	0x40026e
<Block for 0x400119, 23 bytes>
0x400119:	mov	word ptr [rbp - 0x80], 2
0x40011f:	mov	dword ptr [rbp - 0x7c], 0
0x400126:	mov	edi, 0x6987
0x40012b:	call	0x500018
<Block for 0x40026e, 9 bytes>
0x40026e:	cmp	dword ptr [rbp - 0x9c], -1
0x400275:	je	0x400284
<Block for 0x400261, 13 bytes>
0x400261:	mov	eax, dword ptr [rbp - 0x98]
0x400267:	mov	edi, eax
0x400269:	call	0x500048
<Block for 0x400130, 27 bytes>
0x400130:	mov	word ptr [rbp - 0x7e], ax
0x400134:	mov	eax, dword ptr [rbp - 0x98]
0x40013a:	mov	edx, 0
0x40013f:	mov	esi, 0
0x400144:	mov	edi, eax
0x400146:	call	0x500020
<Block for 0x400284, 12 bytes>
0x400284:	lea	rax, [rbp - 0x70]
0x400288:	mov	rdi, rax
0x40028b:	call	0x500050
<Block for 0x400277, 13 bytes>
0x400277:	mov	eax, dword ptr [rbp - 0x9c]
0x40027d:	mov	edi, eax
0x40027f:	call	0x500048
<Block for 0x40014b, 19 bytes>
0x40014b:	mov	dword ptr [rbp - 0x9c], eax
0x400151:	cmp	dword ptr [rbp - 0x9c], -1
0x400158:	je	0x400251
<Block for 0x400251, 3 bytes>
0x400251:	nop	
0x400252:	jmp	0x400258
<Block for 0x40015e, 25 bytes>
0x40015e:	lea	rcx, [rbp - 0x80]
0x400162:	mov	eax, dword ptr [rbp - 0x98]
0x400168:	mov	edx, 0x10
0x40016d:	mov	rsi, rcx
0x400170:	mov	edi, eax
0x400172:	call	0x500028
<Block for 0x400177, 9 bytes>
0x400177:	cmp	eax, -1
0x40017a:	je	0x400254
<Block for 0x400254, 3 bytes>
0x400254:	nop	
0x400255:	jmp	0x400258
<Block for 0x400180, 18 bytes>
0x400180:	mov	eax, dword ptr [rbp - 0x98]
0x400186:	mov	esi, 5
0x40018b:	mov	edi, eax
0x40018d:	call	0x500030
<Block for 0x400192, 9 bytes>
0x400192:	cmp	eax, -1
0x400195:	je	0x400257
<Block for 0x40019b, 52 bytes>
0x40019b:	mov	rax, qword ptr [rbp - 0x90]
0x4001a2:	mov	edx, 0x63
0x4001a7:	sub	edx, eax
0x4001a9:	mov	eax, edx
0x4001ab:	movsxd	rdx, eax
0x4001ae:	lea	rcx, [rbp - 0x70]
0x4001b2:	mov	rax, qword ptr [rbp - 0x90]
0x4001b9:	lea	rsi, [rcx + rax]
0x4001bd:	mov	eax, dword ptr [rbp - 0x9c]
0x4001c3:	mov	ecx, 0
0x4001c8:	mov	edi, eax
0x4001ca:	call	0x500038
<Block for 0x400257, 1 bytes>
0x400257:	nop	
<Block for 0x4001cf, 15 bytes>
0x4001cf:	mov	dword ptr [rbp - 0x94], eax
0x4001d5:	cmp	dword ptr [rbp - 0x94], -1
0x4001dc:	je	0x400258
<Block for 0x4001de, 9 bytes>
0x4001de:	cmp	dword ptr [rbp - 0x94], 0
0x4001e5:	je	0x400258
<Block for 0x4001e7, 30 bytes>
0x4001e7:	mov	eax, dword ptr [rbp - 0x94]
0x4001ed:	cdqe	
0x4001ef:	mov	byte ptr [rbp + rax - 0x70], 0
0x4001f4:	lea	rax, [rbp - 0x70]
0x4001f8:	mov	esi, 0xd
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500040
<Block for 0x400205, 17 bytes>
0x400205:	mov	qword ptr [rbp - 0x88], rax
0x40020c:	cmp	qword ptr [rbp - 0x88], 0
0x400214:	je	0x400220
<Block for 0x400220, 17 bytes>
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	esi, 0xa
0x400229:	mov	rdi, rax
0x40022c:	call	0x500040
<Block for 0x400216, 27 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x88]
0x40021d:	mov	byte ptr [rax], 0
0x400220:	lea	rax, [rbp - 0x70]
0x400224:	mov	esi, 0xa
0x400229:	mov	rdi, rax
0x40022c:	call	0x500040
<Block for 0x400231, 17 bytes>
0x400231:	mov	qword ptr [rbp - 0x88], rax
0x400238:	cmp	qword ptr [rbp - 0x88], 0
0x400240:	je	0x400258
<Block for 0x400242, 12 bytes>
0x400242:	mov	rax, qword ptr [rbp - 0x88]
0x400249:	mov	byte ptr [rax], 0
0x40024c:	jmp	0x400258
