<Block for 0x400240, 37 bytes>
0x400240:	endbr64	
0x400244:	push	rbp
0x400245:	mov	rbp, rsp
0x400248:	sub	rsp, 0x30
0x40024c:	mov	rax, qword ptr fs:[0x28]
0x400255:	mov	qword ptr [rbp - 8], rax
0x400259:	xor	eax, eax
0x40025b:	mov	eax, 5
0x400260:	cmp	eax, 5
0x400263:	je	0x400276
<Block for 0x400276, 34 bytes>
0x400276:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40027d:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400284:	mov	edx, 6
0x400289:	mov	esi, 1
0x40028e:	mov	edi, 2
0x400293:	call	0x500000
<Block for 0x400265, 12 bytes>
0x400265:	lea	rdi, [rip + 0x2c7]
0x40026c:	call	0x500050
<Block for 0x400298, 13 bytes>
0x400298:	mov	dword ptr [rbp - 0x24], eax
0x40029b:	cmp	dword ptr [rbp - 0x24], -1
0x40029f:	je	0x400351
<Block for 0x400271, 5 bytes>
0x400271:	jmp	0x40037b
<Block for 0x400351, 3 bytes>
0x400351:	nop	
0x400352:	jmp	0x40035b
<Block for 0x4002a5, 22 bytes>
0x4002a5:	lea	rax, [rbp - 0x20]
0x4002a9:	mov	edx, 0x10
0x4002ae:	mov	esi, 0
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x500008
<Block for 0x40037b, 16 bytes>
0x40037b:	nop	
0x40037c:	mov	rax, qword ptr [rbp - 8]
0x400380:	xor	rax, qword ptr fs:[0x28]
0x400389:	je	0x400390
<Block for 0x40035b, 6 bytes>
0x40035b:	cmp	dword ptr [rbp - 0x24], -1
0x40035f:	je	0x40036b
<Block for 0x4002bb, 23 bytes>
0x4002bb:	mov	word ptr [rbp - 0x20], 2
0x4002c1:	mov	dword ptr [rbp - 0x1c], 0
0x4002c8:	mov	edi, 0x4e20
0x4002cd:	call	0x500010
<Block for 0x400390, 2 bytes>
0x400390:	leave	
0x400391:	ret	
<Block for 0x40038b, 5 bytes>
0x40038b:	call	0x500060
<Block for 0x40036b, 6 bytes>
0x40036b:	cmp	dword ptr [rbp - 0x28], -1
0x40036f:	je	0x40037b
<Block for 0x400361, 10 bytes>
0x400361:	mov	eax, dword ptr [rbp - 0x24]
0x400364:	mov	edi, eax
0x400366:	call	0x500058
<Block for 0x4002d2, 26 bytes>
0x4002d2:	mov	word ptr [rbp - 0x1e], ax
0x4002d6:	lea	rcx, [rbp - 0x20]
0x4002da:	mov	eax, dword ptr [rbp - 0x24]
0x4002dd:	mov	edx, 0x10
0x4002e2:	mov	rsi, rcx
0x4002e5:	mov	edi, eax
0x4002e7:	call	0x500018
<Block for 0x400371, 10 bytes>
0x400371:	mov	eax, dword ptr [rbp - 0x28]
0x400374:	mov	edi, eax
0x400376:	call	0x500058
<Block for 0x4002ec, 5 bytes>
0x4002ec:	cmp	eax, -1
0x4002ef:	je	0x400354
<Block for 0x400354, 3 bytes>
0x400354:	nop	
0x400355:	jmp	0x40035b
<Block for 0x4002f1, 15 bytes>
0x4002f1:	mov	eax, dword ptr [rbp - 0x24]
0x4002f4:	mov	esi, 5
0x4002f9:	mov	edi, eax
0x4002fb:	call	0x500020
<Block for 0x400300, 5 bytes>
0x400300:	cmp	eax, -1
0x400303:	je	0x400357
<Block for 0x400357, 3 bytes>
0x400357:	nop	
0x400358:	jmp	0x40035b
<Block for 0x400305, 20 bytes>
0x400305:	mov	eax, dword ptr [rbp - 0x24]
0x400308:	mov	edx, 0
0x40030d:	mov	esi, 0
0x400312:	mov	edi, eax
0x400314:	call	0x500028
<Block for 0x400319, 9 bytes>
0x400319:	mov	dword ptr [rbp - 0x28], eax
0x40031c:	cmp	dword ptr [rbp - 0x28], -1
0x400320:	je	0x40035a
<Block for 0x400322, 27 bytes>
0x400322:	mov	eax, dword ptr [rbp - 0x28]
0x400325:	mov	ecx, 0
0x40032a:	mov	edx, 8
0x40032f:	lea	rsi, [rip + 0x1e7]
0x400336:	mov	edi, eax
0x400338:	call	0x500048
<Block for 0x40035a, 1 bytes>
0x40035a:	nop	
<Block for 0x40033d, 6 bytes>
0x40033d:	cmp	rax, -1
0x400341:	jne	0x40035b
<Block for 0x400343, 12 bytes>
0x400343:	lea	rdi, [rip + 0x1dc]
0x40034a:	call	0x500050
<Block for 0x40034f, 2 bytes>
0x40034f:	jmp	0x40035b
