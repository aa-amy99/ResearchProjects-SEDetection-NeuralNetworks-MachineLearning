<Block for 0x400064, 22 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x20
0x400070:	mov	eax, 0
0x400075:	call	0x500028
<Block for 0x40007a, 4 bytes>
0x40007a:	test	eax, eax
0x40007c:	je	0x40008f
<Block for 0x40008f, 10 bytes>
0x40008f:	mov	edi, 8
0x400094:	call	0x500008
<Block for 0x40007e, 12 bytes>
0x40007e:	lea	rdi, [rip + 0x153]
0x400085:	call	0x500030
<Block for 0x400099, 11 bytes>
0x400099:	mov	qword ptr [rbp - 0x18], rax
0x40009d:	cmp	qword ptr [rbp - 0x18], 0
0x4000a2:	jne	0x4000ae
<Block for 0x40008a, 5 bytes>
0x40008a:	jmp	0x400110
<Block for 0x4000a4, 10 bytes>
0x4000a4:	mov	edi, 0xffffffff
0x4000a9:	call	0x500010
<Block for 0x4000ae, 10 bytes>
0x4000ae:	mov	edi, 8
0x4000b3:	call	0x500008
<Block for 0x400110, 3 bytes>
0x400110:	nop	
0x400111:	leave	
0x400112:	ret	
<Block for 0x4000b8, 11 bytes>
0x4000b8:	mov	qword ptr [rbp - 0x10], rax
0x4000bc:	cmp	qword ptr [rbp - 0x10], 0
0x4000c1:	jne	0x4000cd
<Block for 0x4000c3, 10 bytes>
0x4000c3:	mov	edi, 0xffffffff
0x4000c8:	call	0x500010
<Block for 0x4000cd, 55 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 0x10]
0x4000d1:	movsd	xmm0, qword ptr [rip + 0x117]
0x4000d9:	movsd	qword ptr [rax], xmm0
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	mov	rdx, qword ptr [rbp - 0x10]
0x4000e5:	mov	qword ptr [rax], rdx
0x4000e8:	mov	rax, qword ptr [rbp - 0x18]
0x4000ec:	mov	rax, qword ptr [rax]
0x4000ef:	mov	qword ptr [rbp - 8], rax
0x4000f3:	mov	rax, qword ptr [rbp - 8]
0x4000f7:	mov	rax, qword ptr [rax]
0x4000fa:	movq	xmm0, rax
0x4000ff:	call	0x500020
<Block for 0x400104, 12 bytes>
0x400104:	mov	rax, qword ptr [rbp - 0x18]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500018
