<Block for 0x400113, 22 bytes>
0x400113:	endbr64	
0x400117:	push	rbp
0x400118:	mov	rbp, rsp
0x40011b:	sub	rsp, 0x20
0x40011f:	mov	eax, 0
0x400124:	call	0x500000
<Block for 0x400129, 8 bytes>
0x400129:	test	eax, eax
0x40012b:	je	0x4001b2
<Block for 0x4001b2, 3 bytes>
0x4001b2:	nop	
0x4001b3:	leave	
0x4001b4:	ret	
<Block for 0x400131, 10 bytes>
0x400131:	mov	edi, 8
0x400136:	call	0x500008
<Block for 0x40013b, 11 bytes>
0x40013b:	mov	qword ptr [rbp - 0x18], rax
0x40013f:	cmp	qword ptr [rbp - 0x18], 0
0x400144:	jne	0x400150
<Block for 0x400146, 10 bytes>
0x400146:	mov	edi, 0xffffffff
0x40014b:	call	0x500010
<Block for 0x400150, 10 bytes>
0x400150:	mov	edi, 8
0x400155:	call	0x500008
<Block for 0x40015a, 11 bytes>
0x40015a:	mov	qword ptr [rbp - 0x10], rax
0x40015e:	cmp	qword ptr [rbp - 0x10], 0
0x400163:	jne	0x40016f
<Block for 0x400165, 10 bytes>
0x400165:	mov	edi, 0xffffffff
0x40016a:	call	0x500010
<Block for 0x40016f, 55 bytes>
0x40016f:	mov	rax, qword ptr [rbp - 0x10]
0x400173:	movsd	xmm0, qword ptr [rip + 0x75]
0x40017b:	movsd	qword ptr [rax], xmm0
0x40017f:	mov	rax, qword ptr [rbp - 0x18]
0x400183:	mov	rdx, qword ptr [rbp - 0x10]
0x400187:	mov	qword ptr [rax], rdx
0x40018a:	mov	rax, qword ptr [rbp - 0x18]
0x40018e:	mov	rax, qword ptr [rax]
0x400191:	mov	qword ptr [rbp - 8], rax
0x400195:	mov	rax, qword ptr [rbp - 8]
0x400199:	mov	rax, qword ptr [rax]
0x40019c:	movq	xmm0, rax
0x4001a1:	call	0x500020
<Block for 0x4001a6, 12 bytes>
0x4001a6:	mov	rax, qword ptr [rbp - 0x18]
0x4001aa:	mov	rdi, rax
0x4001ad:	call	0x500018
