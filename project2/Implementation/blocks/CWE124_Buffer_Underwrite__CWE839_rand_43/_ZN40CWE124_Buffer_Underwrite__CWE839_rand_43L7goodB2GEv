<Block for 0x400269, 46 bytes>
0x400269:	endbr64	
0x40026d:	push	rbp
0x40026e:	mov	rbp, rsp
0x400271:	sub	rsp, 0x40
0x400275:	mov	rax, qword ptr fs:[0x28]
0x40027e:	mov	qword ptr [rbp - 8], rax
0x400282:	xor	eax, eax
0x400284:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40028b:	lea	rax, [rbp - 0x38]
0x40028f:	mov	rdi, rax
0x400292:	call	0x400200
<Block for 0x400297, 47 bytes>
0x400297:	mov	qword ptr [rbp - 0x30], 0
0x40029f:	mov	qword ptr [rbp - 0x28], 0
0x4002a7:	mov	qword ptr [rbp - 0x20], 0
0x4002af:	mov	qword ptr [rbp - 0x18], 0
0x4002b7:	mov	qword ptr [rbp - 0x10], 0
0x4002bf:	mov	eax, dword ptr [rbp - 0x38]
0x4002c2:	test	eax, eax
0x4002c4:	js	0x4002fe
<Block for 0x4002fe, 12 bytes>
0x4002fe:	lea	rdi, [rip + 0x63]
0x400305:	call	0x500010
<Block for 0x4002c6, 8 bytes>
0x4002c6:	mov	eax, dword ptr [rbp - 0x38]
0x4002c9:	cmp	eax, 9
0x4002cc:	jg	0x4002fe
<Block for 0x40030a, 2 bytes>
0x40030a:	jmp	0x40031b
<Block for 0x4002ce, 26 bytes>
0x4002ce:	mov	eax, dword ptr [rbp - 0x38]
0x4002d1:	cdqe	
0x4002d3:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002db:	mov	dword ptr [rbp - 0x34], 0
0x4002e2:	cmp	dword ptr [rbp - 0x34], 9
0x4002e6:	jg	0x40030c
<Block for 0x40031b, 15 bytes>
0x40031b:	mov	rax, qword ptr [rbp - 8]
0x40031f:	xor	rax, qword ptr fs:[0x28]
0x400328:	je	0x40032f
<Block for 0x4002e8, 16 bytes>
0x4002e8:	mov	eax, dword ptr [rbp - 0x34]
0x4002eb:	cdqe	
0x4002ed:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002f1:	mov	edi, eax
0x4002f3:	call	0x500008
<Block for 0x40030c, 3 bytes>
0x40030c:	nop	
0x40030d:	jmp	0x40031b
<Block for 0x40032f, 2 bytes>
0x40032f:	leave	
0x400330:	ret	
<Block for 0x40032a, 5 bytes>
0x40032a:	call	0x500020
<Block for 0x4002f8, 6 bytes>
0x4002f8:	add	dword ptr [rbp - 0x34], 1
0x4002fc:	jmp	0x4002e2
<Block for 0x4002e2, 6 bytes>
0x4002e2:	cmp	dword ptr [rbp - 0x34], 9
0x4002e6:	jg	0x40030c
