<Block for 0x400069, 46 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x40
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x40008b:	lea	rax, [rbp - 0x38]
0x40008f:	mov	rdi, rax
0x400092:	call	0x400000
<Block for 0x400097, 48 bytes>
0x400097:	mov	qword ptr [rbp - 0x30], 0
0x40009f:	mov	qword ptr [rbp - 0x28], 0
0x4000a7:	mov	qword ptr [rbp - 0x20], 0
0x4000af:	mov	qword ptr [rbp - 0x18], 0
0x4000b7:	mov	qword ptr [rbp - 0x10], 0
0x4000bf:	mov	eax, dword ptr [rbp - 0x38]
0x4000c2:	cmp	eax, 9
0x4000c5:	jg	0x4000f7
<Block for 0x4000c7, 26 bytes>
0x4000c7:	mov	eax, dword ptr [rbp - 0x38]
0x4000ca:	cdqe	
0x4000cc:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4000d4:	mov	dword ptr [rbp - 0x34], 0
0x4000db:	cmp	dword ptr [rbp - 0x34], 9
0x4000df:	jg	0x400111
<Block for 0x4000f7, 12 bytes>
0x4000f7:	lea	rdi, [rip + 0x24a]
0x4000fe:	call	0x500010
<Block for 0x4000e1, 16 bytes>
0x4000e1:	mov	eax, dword ptr [rbp - 0x34]
0x4000e4:	cdqe	
0x4000e6:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000ea:	mov	edi, eax
0x4000ec:	call	0x500008
<Block for 0x400111, 16 bytes>
0x400111:	nop	
0x400112:	mov	rax, qword ptr [rbp - 8]
0x400116:	xor	rax, qword ptr fs:[0x28]
0x40011f:	je	0x400126
<Block for 0x400103, 2 bytes>
0x400103:	jmp	0x400111
<Block for 0x4000f1, 6 bytes>
0x4000f1:	add	dword ptr [rbp - 0x34], 1
0x4000f5:	jmp	0x4000db
<Block for 0x400126, 2 bytes>
0x400126:	leave	
0x400127:	ret	
<Block for 0x400121, 5 bytes>
0x400121:	call	0x500020
<Block for 0x4000db, 6 bytes>
0x4000db:	cmp	dword ptr [rbp - 0x34], 9
0x4000df:	jg	0x400111
