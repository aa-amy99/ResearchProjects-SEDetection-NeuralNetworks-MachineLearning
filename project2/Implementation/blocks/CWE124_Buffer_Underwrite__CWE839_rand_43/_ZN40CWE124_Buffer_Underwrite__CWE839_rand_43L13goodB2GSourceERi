<Block for 0x400200, 22 bytes>
0x400200:	endbr64	
0x400204:	push	rbp
0x400205:	mov	rbp, rsp
0x400208:	push	rbx
0x400209:	sub	rsp, 0x18
0x40020d:	mov	qword ptr [rbp - 0x18], rdi
0x400211:	call	0x500000
<Block for 0x400216, 7 bytes>
0x400216:	and	eax, 1
0x400219:	test	eax, eax
0x40021b:	je	0x40023c
<Block for 0x40023c, 5 bytes>
0x40023c:	call	0x500000
<Block for 0x40021d, 5 bytes>
0x40021d:	call	0x500000
<Block for 0x400241, 10 bytes>
0x400241:	shl	eax, 0x1e
0x400244:	mov	ebx, eax
0x400246:	call	0x500000
<Block for 0x400222, 10 bytes>
0x400222:	shl	eax, 0x1e
0x400225:	mov	ebx, eax
0x400227:	call	0x500000
<Block for 0x40024b, 10 bytes>
0x40024b:	shl	eax, 0xf
0x40024e:	xor	ebx, eax
0x400250:	call	0x500000
<Block for 0x40022c, 10 bytes>
0x40022c:	shl	eax, 0xf
0x40022f:	xor	ebx, eax
0x400231:	call	0x500000
<Block for 0x400255, 20 bytes>
0x400255:	xor	eax, ebx
0x400257:	not	eax
0x400259:	mov	edx, eax
0x40025b:	mov	rax, qword ptr [rbp - 0x18]
0x40025f:	mov	dword ptr [rax], edx
0x400261:	nop	
0x400262:	add	rsp, 0x18
0x400266:	pop	rbx
0x400267:	pop	rbp
0x400268:	ret	
<Block for 0x400236, 6 bytes>
0x400236:	xor	eax, ebx
0x400238:	mov	edx, eax
0x40023a:	jmp	0x40025b
<Block for 0x40025b, 14 bytes>
0x40025b:	mov	rax, qword ptr [rbp - 0x18]
0x40025f:	mov	dword ptr [rax], edx
0x400261:	nop	
0x400262:	add	rsp, 0x18
0x400266:	pop	rbx
0x400267:	pop	rbp
0x400268:	ret	
