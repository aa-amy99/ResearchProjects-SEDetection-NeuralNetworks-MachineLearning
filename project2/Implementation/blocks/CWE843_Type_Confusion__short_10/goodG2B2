<Block for 0x4000cd, 45 bytes>
0x4000cd:	endbr64	
0x4000d1:	push	rbp
0x4000d2:	mov	rbp, rsp
0x4000d5:	sub	rsp, 0x20
0x4000d9:	mov	rax, qword ptr fs:[0x28]
0x4000e2:	mov	qword ptr [rbp - 8], rax
0x4000e6:	xor	eax, eax
0x4000e8:	mov	qword ptr [rbp - 0x10], 0
0x4000f0:	mov	eax, dword ptr [rip + 0xfff0a]
0x4000f6:	test	eax, eax
0x4000f8:	je	0x400109
<Block for 0x400109, 13 bytes>
0x400109:	mov	rax, qword ptr [rbp - 0x10]
0x40010d:	mov	eax, dword ptr [rax]
0x40010f:	mov	edi, eax
0x400111:	call	0x500008
<Block for 0x4000fa, 28 bytes>
0x4000fa:	mov	dword ptr [rbp - 0x14], 8
0x400101:	lea	rax, [rbp - 0x14]
0x400105:	mov	qword ptr [rbp - 0x10], rax
0x400109:	mov	rax, qword ptr [rbp - 0x10]
0x40010d:	mov	eax, dword ptr [rax]
0x40010f:	mov	edi, eax
0x400111:	call	0x500008
<Block for 0x400116, 16 bytes>
0x400116:	nop	
0x400117:	mov	rax, qword ptr [rbp - 8]
0x40011b:	xor	rax, qword ptr fs:[0x28]
0x400124:	je	0x40012b
<Block for 0x40012b, 2 bytes>
0x40012b:	leave	
0x40012c:	ret	
<Block for 0x400126, 5 bytes>
0x400126:	call	0x500010
