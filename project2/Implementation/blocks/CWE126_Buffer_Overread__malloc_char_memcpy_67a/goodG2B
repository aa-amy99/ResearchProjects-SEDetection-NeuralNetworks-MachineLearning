<Block for 0x40006b, 30 bytes>
0x40006b:	endbr64	
0x40006f:	push	rbp
0x400070:	mov	rbp, rsp
0x400073:	sub	rsp, 0x10
0x400077:	mov	qword ptr [rbp - 8], 0
0x40007f:	mov	edi, 0x64
0x400084:	call	0x500000
<Block for 0x400089, 11 bytes>
0x400089:	mov	qword ptr [rbp - 8], rax
0x40008d:	cmp	qword ptr [rbp - 8], 0
0x400092:	jne	0x40009e
<Block for 0x400094, 10 bytes>
0x400094:	mov	edi, 0xffffffff
0x400099:	call	0x500008
<Block for 0x40009e, 22 bytes>
0x40009e:	mov	rax, qword ptr [rbp - 8]
0x4000a2:	mov	edx, 0x63
0x4000a7:	mov	esi, 0x41
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500010
<Block for 0x4000b4, 31 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	add	rax, 0x63
0x4000bc:	mov	byte ptr [rax], 0
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	mov	qword ptr [rbp - 0x10], rax
0x4000c7:	mov	rax, qword ptr [rbp - 0x10]
0x4000cb:	mov	rdi, rax
0x4000ce:	call	0x500020
<Block for 0x4000d3, 3 bytes>
0x4000d3:	nop	
0x4000d4:	leave	
0x4000d5:	ret	
