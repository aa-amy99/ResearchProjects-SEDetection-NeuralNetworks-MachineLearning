<Block for 0x4000ef, 30 bytes>
0x4000ef:	endbr64	
0x4000f3:	push	rbp
0x4000f4:	mov	rbp, rsp
0x4000f7:	sub	rsp, 0x10
0x4000fb:	mov	qword ptr [rbp - 0x10], 0
0x400103:	mov	edi, 0x64
0x400108:	call	0x500018
<Block for 0x40010d, 11 bytes>
0x40010d:	mov	qword ptr [rbp - 8], rax
0x400111:	cmp	qword ptr [rbp - 8], 0
0x400116:	jne	0x400122
<Block for 0x400118, 10 bytes>
0x400118:	mov	edi, 0xffffffff
0x40011d:	call	0x500020
<Block for 0x400122, 22 bytes>
0x400122:	mov	rax, qword ptr [rbp - 8]
0x400126:	mov	edx, 0x63
0x40012b:	mov	esi, 0x41
0x400130:	mov	rdi, rax
0x400133:	call	0x500000
<Block for 0x400138, 44 bytes>
0x400138:	mov	rax, qword ptr [rbp - 8]
0x40013c:	add	rax, 0x63
0x400140:	mov	byte ptr [rax], 0
0x400143:	mov	rax, qword ptr [rbp - 8]
0x400147:	sub	rax, 8
0x40014b:	mov	qword ptr [rbp - 0x10], rax
0x40014f:	mov	rax, qword ptr [rbp - 0x10]
0x400153:	mov	qword ptr [rip + 0x186], rax
0x40015a:	mov	eax, 0
0x40015f:	call	0x400000
<Block for 0x400164, 3 bytes>
0x400164:	nop	
0x400165:	leave	
0x400166:	ret	
