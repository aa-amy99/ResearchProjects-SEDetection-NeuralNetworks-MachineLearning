<Block for 0x400147, 52 bytes>
0x400147:	endbr64	
0x40014b:	push	rbp
0x40014c:	mov	rbp, rsp
0x40014f:	push	rbx
0x400150:	sub	rsp, 0x88
0x400157:	mov	rax, qword ptr fs:[0x28]
0x400160:	mov	qword ptr [rbp - 0x18], rax
0x400164:	xor	eax, eax
0x400166:	mov	qword ptr [rbp - 0x90], 0
0x400171:	mov	eax, dword ptr [rip + 0x289]
0x400177:	test	eax, eax
0x400179:	je	0x400189
<Block for 0x400189, 10 bytes>
0x400189:	mov	edi, 0x64
0x40018e:	call	0x500000
<Block for 0x40017b, 12 bytes>
0x40017b:	lea	rdi, [rip + 0x282]
0x400182:	call	0x500018
<Block for 0x400193, 17 bytes>
0x400193:	mov	qword ptr [rbp - 0x88], rax
0x40019a:	cmp	qword ptr [rbp - 0x88], 0
0x4001a2:	jne	0x4001ae
<Block for 0x400187, 2 bytes>
0x400187:	jmp	0x4001e3
<Block for 0x4001a4, 10 bytes>
0x4001a4:	mov	edi, 0xffffffff
0x4001a9:	call	0x500008
<Block for 0x4001ae, 25 bytes>
0x4001ae:	mov	rax, qword ptr [rbp - 0x88]
0x4001b5:	mov	edx, 0x63
0x4001ba:	mov	esi, 0x41
0x4001bf:	mov	rdi, rax
0x4001c2:	call	0x500010
<Block for 0x4001e3, 22 bytes>
0x4001e3:	lea	rax, [rbp - 0x80]
0x4001e7:	mov	edx, 0x63
0x4001ec:	mov	esi, 0x43
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500010
<Block for 0x4001c7, 50 bytes>
0x4001c7:	mov	rax, qword ptr [rbp - 0x88]
0x4001ce:	add	rax, 0x63
0x4001d2:	mov	byte ptr [rax], 0
0x4001d5:	mov	rax, qword ptr [rbp - 0x88]
0x4001dc:	mov	qword ptr [rbp - 0x90], rax
0x4001e3:	lea	rax, [rbp - 0x80]
0x4001e7:	mov	edx, 0x63
0x4001ec:	mov	esi, 0x43
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500010
<Block for 0x4001f9, 128 bytes>
0x4001f9:	mov	byte ptr [rbp - 0x1d], 0
0x4001fd:	mov	rax, qword ptr [rbp - 0x90]
0x400204:	mov	rcx, qword ptr [rax]
0x400207:	mov	rbx, qword ptr [rax + 8]
0x40020b:	mov	qword ptr [rbp - 0x80], rcx
0x40020f:	mov	qword ptr [rbp - 0x78], rbx
0x400213:	mov	rcx, qword ptr [rax + 0x10]
0x400217:	mov	rbx, qword ptr [rax + 0x18]
0x40021b:	mov	qword ptr [rbp - 0x70], rcx
0x40021f:	mov	qword ptr [rbp - 0x68], rbx
0x400223:	mov	rcx, qword ptr [rax + 0x20]
0x400227:	mov	rbx, qword ptr [rax + 0x28]
0x40022b:	mov	qword ptr [rbp - 0x60], rcx
0x40022f:	mov	qword ptr [rbp - 0x58], rbx
0x400233:	mov	rcx, qword ptr [rax + 0x30]
0x400237:	mov	rbx, qword ptr [rax + 0x38]
0x40023b:	mov	qword ptr [rbp - 0x50], rcx
0x40023f:	mov	qword ptr [rbp - 0x48], rbx
0x400243:	mov	rcx, qword ptr [rax + 0x40]
0x400247:	mov	rbx, qword ptr [rax + 0x48]
0x40024b:	mov	qword ptr [rbp - 0x40], rcx
0x40024f:	mov	qword ptr [rbp - 0x38], rbx
0x400253:	mov	rcx, qword ptr [rax + 0x50]
0x400257:	mov	rbx, qword ptr [rax + 0x58]
0x40025b:	mov	qword ptr [rbp - 0x30], rcx
0x40025f:	mov	qword ptr [rbp - 0x28], rbx
0x400263:	mov	eax, dword ptr [rax + 0x60]
0x400266:	mov	dword ptr [rbp - 0x20], eax
0x400269:	mov	byte ptr [rbp - 0x1d], 0
0x40026d:	lea	rax, [rbp - 0x80]
0x400271:	mov	rdi, rax
0x400274:	call	0x500018
<Block for 0x400279, 16 bytes>
0x400279:	nop	
0x40027a:	mov	rax, qword ptr [rbp - 0x18]
0x40027e:	xor	rax, qword ptr fs:[0x28]
0x400287:	je	0x40028e
<Block for 0x40028e, 10 bytes>
0x40028e:	add	rsp, 0x88
0x400295:	pop	rbx
0x400296:	pop	rbp
0x400297:	ret	
<Block for 0x400289, 5 bytes>
0x400289:	call	0x500020
