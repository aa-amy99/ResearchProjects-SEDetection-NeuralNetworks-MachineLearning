<Block for 0x4001b6, 76 bytes>
0x4001b6:	endbr64	
0x4001ba:	push	rbp
0x4001bb:	mov	rbp, rsp
0x4001be:	sub	rsp, 0x50
0x4001c2:	mov	dword ptr [rbp - 0x44], edi
0x4001c5:	mov	rax, qword ptr fs:[0x28]
0x4001ce:	mov	qword ptr [rbp - 8], rax
0x4001d2:	xor	eax, eax
0x4001d4:	mov	qword ptr [rbp - 0x30], 0
0x4001dc:	mov	qword ptr [rbp - 0x28], 0
0x4001e4:	mov	qword ptr [rbp - 0x20], 0
0x4001ec:	mov	qword ptr [rbp - 0x18], 0
0x4001f4:	mov	qword ptr [rbp - 0x10], 0
0x4001fc:	cmp	dword ptr [rbp - 0x44], 9
0x400200:	jg	0x400234
<Block for 0x400202, 22 bytes>
0x400202:	mov	eax, dword ptr [rbp - 0x44]
0x400205:	cdqe	
0x400207:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40020f:	mov	dword ptr [rbp - 0x34], 0
0x400216:	jmp	0x40022c
<Block for 0x400234, 12 bytes>
0x400234:	lea	rdi, [rip + 0x225]
0x40023b:	call	0x500008
<Block for 0x40022c, 6 bytes>
0x40022c:	cmp	dword ptr [rbp - 0x34], 9
0x400230:	jle	0x400218
<Block for 0x400240, 16 bytes>
0x400240:	nop	
0x400241:	mov	rax, qword ptr [rbp - 8]
0x400245:	xor	rax, qword ptr fs:[0x28]
0x40024e:	je	0x400255
<Block for 0x400218, 16 bytes>
0x400218:	mov	eax, dword ptr [rbp - 0x34]
0x40021b:	cdqe	
0x40021d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400221:	mov	edi, eax
0x400223:	call	0x500000
<Block for 0x400232, 2 bytes>
0x400232:	jmp	0x400240
<Block for 0x400255, 2 bytes>
0x400255:	leave	
0x400256:	ret	
<Block for 0x400250, 5 bytes>
0x400250:	call	0x500010
<Block for 0x400228, 10 bytes>
0x400228:	add	dword ptr [rbp - 0x34], 1
0x40022c:	cmp	dword ptr [rbp - 0x34], 9
0x400230:	jle	0x400218
