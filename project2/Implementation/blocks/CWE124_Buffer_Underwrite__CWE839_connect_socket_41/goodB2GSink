<Block for 0x40027e, 76 bytes>
0x40027e:	endbr64	
0x400282:	push	rbp
0x400283:	mov	rbp, rsp
0x400286:	sub	rsp, 0x50
0x40028a:	mov	dword ptr [rbp - 0x44], edi
0x40028d:	mov	rax, qword ptr fs:[0x28]
0x400296:	mov	qword ptr [rbp - 8], rax
0x40029a:	xor	eax, eax
0x40029c:	mov	qword ptr [rbp - 0x30], 0
0x4002a4:	mov	qword ptr [rbp - 0x28], 0
0x4002ac:	mov	qword ptr [rbp - 0x20], 0
0x4002b4:	mov	qword ptr [rbp - 0x18], 0
0x4002bc:	mov	qword ptr [rbp - 0x10], 0
0x4002c4:	cmp	dword ptr [rbp - 0x44], 0
0x4002c8:	js	0x400302
<Block for 0x400302, 12 bytes>
0x400302:	lea	rdi, [rip + 0x187]
0x400309:	call	0x500008
<Block for 0x4002ca, 6 bytes>
0x4002ca:	cmp	dword ptr [rbp - 0x44], 9
0x4002ce:	jg	0x400302
<Block for 0x40030e, 16 bytes>
0x40030e:	nop	
0x40030f:	mov	rax, qword ptr [rbp - 8]
0x400313:	xor	rax, qword ptr fs:[0x28]
0x40031c:	je	0x400323
<Block for 0x4002d0, 22 bytes>
0x4002d0:	mov	eax, dword ptr [rbp - 0x44]
0x4002d3:	cdqe	
0x4002d5:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x4002dd:	mov	dword ptr [rbp - 0x34], 0
0x4002e4:	jmp	0x4002fa
<Block for 0x400323, 2 bytes>
0x400323:	leave	
0x400324:	ret	
<Block for 0x40031e, 5 bytes>
0x40031e:	call	0x500010
<Block for 0x4002fa, 6 bytes>
0x4002fa:	cmp	dword ptr [rbp - 0x34], 9
0x4002fe:	jle	0x4002e6
<Block for 0x4002e6, 16 bytes>
0x4002e6:	mov	eax, dword ptr [rbp - 0x34]
0x4002e9:	cdqe	
0x4002eb:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002ef:	mov	edi, eax
0x4002f1:	call	0x500000
<Block for 0x400300, 2 bytes>
0x400300:	jmp	0x40030e
<Block for 0x4002f6, 10 bytes>
0x4002f6:	add	dword ptr [rbp - 0x34], 1
0x4002fa:	cmp	dword ptr [rbp - 0x34], 9
0x4002fe:	jle	0x4002e6
