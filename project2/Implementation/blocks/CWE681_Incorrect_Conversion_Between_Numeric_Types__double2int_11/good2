<Block for 0x400199, 40 bytes>
0x400199:	endbr64	
0x40019d:	push	rbp
0x40019e:	mov	rbp, rsp
0x4001a1:	sub	rsp, 0x120
0x4001a8:	mov	rax, qword ptr fs:[0x28]
0x4001b1:	mov	qword ptr [rbp - 8], rax
0x4001b5:	xor	eax, eax
0x4001b7:	mov	eax, 0
0x4001bc:	call	0x500000
<Block for 0x4001c1, 8 bytes>
0x4001c1:	test	eax, eax
0x4001c3:	je	0x400263
<Block for 0x400263, 16 bytes>
0x400263:	nop	
0x400264:	mov	rax, qword ptr [rbp - 8]
0x400268:	xor	rax, qword ptr fs:[0x28]
0x400271:	je	0x400278
<Block for 0x4001c9, 39 bytes>
0x4001c9:	pxor	xmm0, xmm0
0x4001cd:	movsd	qword ptr [rbp - 0x118], xmm0
0x4001d5:	mov	rdx, qword ptr [rip + 0xffe2c]
0x4001dc:	lea	rax, [rbp - 0x110]
0x4001e3:	mov	esi, 0x100
0x4001e8:	mov	rdi, rax
0x4001eb:	call	0x500010
<Block for 0x400278, 2 bytes>
0x400278:	leave	
0x400279:	ret	
<Block for 0x400273, 5 bytes>
0x400273:	call	0x500030
<Block for 0x4001f0, 5 bytes>
0x4001f0:	test	rax, rax
0x4001f3:	je	0x400212
<Block for 0x400212, 12 bytes>
0x400212:	lea	rdi, [rip + 0x87]
0x400219:	call	0x500020
<Block for 0x4001f5, 15 bytes>
0x4001f5:	lea	rax, [rbp - 0x110]
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500018
<Block for 0x40021e, 18 bytes>
0x40021e:	movsd	xmm0, qword ptr [rbp - 0x118]
0x400226:	comisd	xmm0, xmmword ptr [rip + 0xd2]
0x40022e:	ja	0x400242
<Block for 0x400204, 14 bytes>
0x400204:	movq	rax, xmm0
0x400209:	mov	qword ptr [rbp - 0x118], rax
0x400210:	jmp	0x40021e
<Block for 0x400230, 18 bytes>
0x400230:	movsd	xmm0, qword ptr [rip + 0xd0]
0x400238:	comisd	xmm0, xmmword ptr [rbp - 0x118]
0x400240:	jbe	0x400250
<Block for 0x400242, 12 bytes>
0x400242:	lea	rdi, [rip + 0x7f]
0x400249:	call	0x500020
<Block for 0x400250, 19 bytes>
0x400250:	movsd	xmm0, qword ptr [rbp - 0x118]
0x400258:	cvttsd2si	eax, xmm0
0x40025c:	mov	edi, eax
0x40025e:	call	0x500028
<Block for 0x40024e, 2 bytes>
0x40024e:	jmp	0x400263
