<Block for 0x4000ae, 55 bytes>
0x4000ae:	endbr64	
0x4000b2:	push	rbp
0x4000b3:	mov	rbp, rsp
0x4000b6:	sub	rsp, 0xf0
0x4000bd:	mov	rax, qword ptr fs:[0x28]
0x4000c6:	mov	qword ptr [rbp - 8], rax
0x4000ca:	xor	eax, eax
0x4000cc:	lea	rax, [rbp - 0xe0]
0x4000d3:	mov	edx, 0x63
0x4000d8:	mov	esi, 0x41
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x500000
<Block for 0x4000e5, 15 bytes>
0x4000e5:	mov	byte ptr [rbp - 0x7d], 0
0x4000e9:	mov	eax, dword ptr [rip + 0x141]
0x4000ef:	cmp	eax, 5
0x4000f2:	je	0x400102
<Block for 0x400102, 36 bytes>
0x400102:	lea	rax, [rbp - 0xe0]
0x400109:	mov	qword ptr [rbp - 0xe8], rax
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	edx, 0x63
0x400119:	mov	esi, 0x43
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x4000f4, 12 bytes>
0x4000f4:	lea	rdi, [rip + 0x139]
0x4000fb:	call	0x500010
<Block for 0x400126, 26 bytes>
0x400126:	mov	byte ptr [rbp - 0xd], 0
0x40012a:	lea	rdx, [rbp - 0x70]
0x40012e:	mov	rax, qword ptr [rbp - 0xe8]
0x400135:	mov	rsi, rdx
0x400138:	mov	rdi, rax
0x40013b:	call	0x500008
<Block for 0x400100, 2 bytes>
0x400100:	jmp	0x400110
<Block for 0x400140, 15 bytes>
0x400140:	mov	rax, qword ptr [rbp - 0xe8]
0x400147:	mov	rdi, rax
0x40014a:	call	0x500010
<Block for 0x400110, 22 bytes>
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	edx, 0x63
0x400119:	mov	esi, 0x43
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x40014f, 16 bytes>
0x40014f:	nop	
0x400150:	mov	rax, qword ptr [rbp - 8]
0x400154:	xor	rax, qword ptr fs:[0x28]
0x40015d:	je	0x400164
<Block for 0x400164, 2 bytes>
0x400164:	leave	
0x400165:	ret	
<Block for 0x40015f, 5 bytes>
0x40015f:	call	0x500018
