<Block for 0x400099, 22 bytes>
0x400099:	endbr64	
0x40009d:	push	rbp
0x40009e:	mov	rbp, rsp
0x4000a1:	sub	rsp, 0x10
0x4000a5:	nop	
0x4000a6:	endbr64	
0x4000aa:	call	0x500000
<Block for 0x4000af, 55 bytes>
0x4000af:	mov	edx, eax
0x4000b1:	movsxd	rax, edx
0x4000b4:	imul	rax, rax, 0x55555556
0x4000bb:	shr	rax, 0x20
0x4000bf:	mov	rcx, rax
0x4000c2:	mov	eax, edx
0x4000c4:	sar	eax, 0x1f
0x4000c7:	mov	esi, ecx
0x4000c9:	sub	esi, eax
0x4000cb:	mov	eax, esi
0x4000cd:	mov	dword ptr [rbp - 4], eax
0x4000d0:	mov	ecx, dword ptr [rbp - 4]
0x4000d3:	mov	eax, ecx
0x4000d5:	add	eax, eax
0x4000d7:	add	eax, ecx
0x4000d9:	sub	edx, eax
0x4000db:	mov	eax, edx
0x4000dd:	mov	dword ptr [rbp - 4], eax
0x4000e0:	cmp	dword ptr [rbp - 4], 2
0x4000e4:	je	0x400116
<Block for 0x400116, 12 bytes>
0x400116:	lea	rdi, [rip + 0x30]
0x40011d:	call	0x500008
<Block for 0x4000e6, 6 bytes>
0x4000e6:	cmp	dword ptr [rbp - 4], 2
0x4000ea:	jg	0x400124
<Block for 0x400122, 2 bytes>
0x400122:	jmp	0x400131
<Block for 0x4000ec, 6 bytes>
0x4000ec:	cmp	dword ptr [rbp - 4], 0
0x4000f0:	je	0x4000fa
<Block for 0x400124, 12 bytes>
0x400124:	lea	rdi, [rip + 0x24]
0x40012b:	call	0x500008
<Block for 0x400131, 3 bytes>
0x400131:	nop	
0x400132:	leave	
0x400133:	ret	
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rdi, [rip + 0x48]
0x400101:	call	0x500008
<Block for 0x4000f2, 6 bytes>
0x4000f2:	cmp	dword ptr [rbp - 4], 1
0x4000f6:	je	0x400108
<Block for 0x400130, 1 bytes>
0x400130:	nop	
<Block for 0x400106, 2 bytes>
0x400106:	jmp	0x400131
<Block for 0x400108, 12 bytes>
0x400108:	lea	rdi, [rip + 0x3c]
0x40010f:	call	0x500008
<Block for 0x4000f8, 2 bytes>
0x4000f8:	jmp	0x400124
<Block for 0x400114, 2 bytes>
0x400114:	jmp	0x400131
