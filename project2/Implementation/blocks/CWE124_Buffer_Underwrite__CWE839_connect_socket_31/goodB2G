<Block for 0x40023b, 61 bytes>
0x40023b:	endbr64	
0x40023f:	push	rbp
0x400240:	mov	rbp, rsp
0x400243:	sub	rsp, 0x60
0x400247:	mov	rax, qword ptr fs:[0x28]
0x400250:	mov	qword ptr [rbp - 8], rax
0x400254:	xor	eax, eax
0x400256:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x40025d:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400264:	mov	edx, 6
0x400269:	mov	esi, 1
0x40026e:	mov	edi, 2
0x400273:	call	0x500000
<Block for 0x400278, 13 bytes>
0x400278:	mov	dword ptr [rbp - 0x50], eax
0x40027b:	cmp	dword ptr [rbp - 0x50], -1
0x40027f:	je	0x40031b
<Block for 0x40031b, 3 bytes>
0x40031b:	nop	
0x40031c:	jmp	0x40031f
<Block for 0x400285, 22 bytes>
0x400285:	lea	rax, [rbp - 0x40]
0x400289:	mov	edx, 0x10
0x40028e:	mov	esi, 0
0x400293:	mov	rdi, rax
0x400296:	call	0x500008
<Block for 0x40031f, 6 bytes>
0x40031f:	cmp	dword ptr [rbp - 0x50], -1
0x400323:	je	0x40032f
<Block for 0x40029b, 18 bytes>
0x40029b:	mov	word ptr [rbp - 0x40], 2
0x4002a1:	lea	rdi, [rip + 0x140]
0x4002a8:	call	0x500010
<Block for 0x40032f, 58 bytes>
0x40032f:	mov	eax, dword ptr [rbp - 0x58]
0x400332:	mov	dword ptr [rbp - 0x48], eax
0x400335:	mov	eax, dword ptr [rbp - 0x48]
0x400338:	mov	dword ptr [rbp - 0x44], eax
0x40033b:	mov	qword ptr [rbp - 0x40], 0
0x400343:	mov	qword ptr [rbp - 0x38], 0
0x40034b:	mov	qword ptr [rbp - 0x30], 0
0x400353:	mov	qword ptr [rbp - 0x28], 0
0x40035b:	mov	qword ptr [rbp - 0x20], 0
0x400363:	cmp	dword ptr [rbp - 0x44], 0
0x400367:	js	0x4003a1
<Block for 0x400325, 10 bytes>
0x400325:	mov	eax, dword ptr [rbp - 0x50]
0x400328:	mov	edi, eax
0x40032a:	call	0x500038
<Block for 0x4002ad, 13 bytes>
0x4002ad:	mov	dword ptr [rbp - 0x3c], eax
0x4002b0:	mov	edi, 0x6987
0x4002b5:	call	0x500018
<Block for 0x4003a1, 12 bytes>
0x4003a1:	lea	rdi, [rip + 0x70]
0x4003a8:	call	0x500048
<Block for 0x400369, 6 bytes>
0x400369:	cmp	dword ptr [rbp - 0x44], 9
0x40036d:	jg	0x4003a1
<Block for 0x4002ba, 26 bytes>
0x4002ba:	mov	word ptr [rbp - 0x3e], ax
0x4002be:	lea	rcx, [rbp - 0x40]
0x4002c2:	mov	eax, dword ptr [rbp - 0x50]
0x4002c5:	mov	edx, 0x10
0x4002ca:	mov	rsi, rcx
0x4002cd:	mov	edi, eax
0x4002cf:	call	0x500020
<Block for 0x4003ad, 16 bytes>
0x4003ad:	nop	
0x4003ae:	mov	rax, qword ptr [rbp - 8]
0x4003b2:	xor	rax, qword ptr fs:[0x28]
0x4003bb:	je	0x4003c2
<Block for 0x40036f, 22 bytes>
0x40036f:	mov	eax, dword ptr [rbp - 0x44]
0x400372:	cdqe	
0x400374:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40037c:	mov	dword ptr [rbp - 0x54], 0
0x400383:	jmp	0x400399
<Block for 0x4002d4, 5 bytes>
0x4002d4:	cmp	eax, -1
0x4002d7:	je	0x40031e
<Block for 0x4003c2, 2 bytes>
0x4003c2:	leave	
0x4003c3:	ret	
<Block for 0x4003bd, 5 bytes>
0x4003bd:	call	0x500050
<Block for 0x400399, 6 bytes>
0x400399:	cmp	dword ptr [rbp - 0x54], 9
0x40039d:	jle	0x400385
<Block for 0x4002d9, 24 bytes>
0x4002d9:	lea	rsi, [rbp - 0x16]
0x4002dd:	mov	eax, dword ptr [rbp - 0x50]
0x4002e0:	mov	ecx, 0
0x4002e5:	mov	edx, 0xd
0x4002ea:	mov	edi, eax
0x4002ec:	call	0x500028
<Block for 0x40031e, 1 bytes>
0x40031e:	nop	
<Block for 0x400385, 16 bytes>
0x400385:	mov	eax, dword ptr [rbp - 0x54]
0x400388:	cdqe	
0x40038a:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40038e:	mov	edi, eax
0x400390:	call	0x500040
<Block for 0x40039f, 2 bytes>
0x40039f:	jmp	0x4003ad
<Block for 0x4002f1, 9 bytes>
0x4002f1:	mov	dword ptr [rbp - 0x4c], eax
0x4002f4:	cmp	dword ptr [rbp - 0x4c], -1
0x4002f8:	je	0x40031f
<Block for 0x400395, 10 bytes>
0x400395:	add	dword ptr [rbp - 0x54], 1
0x400399:	cmp	dword ptr [rbp - 0x54], 9
0x40039d:	jle	0x400385
<Block for 0x4002fa, 6 bytes>
0x4002fa:	cmp	dword ptr [rbp - 0x4c], 0
0x4002fe:	je	0x40031f
<Block for 0x400300, 22 bytes>
0x400300:	mov	eax, dword ptr [rbp - 0x4c]
0x400303:	cdqe	
0x400305:	mov	byte ptr [rbp + rax - 0x16], 0
0x40030a:	lea	rax, [rbp - 0x16]
0x40030e:	mov	rdi, rax
0x400311:	call	0x500030
<Block for 0x400316, 5 bytes>
0x400316:	mov	dword ptr [rbp - 0x58], eax
0x400319:	jmp	0x40031f
