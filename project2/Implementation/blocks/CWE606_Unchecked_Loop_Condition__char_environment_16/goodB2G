<Block for 0x400162, 159 bytes>
0x400162:	endbr64	
0x400166:	push	rbp
0x400167:	mov	rbp, rsp
0x40016a:	sub	rsp, 0xa0
0x400171:	mov	rax, qword ptr fs:[0x28]
0x40017a:	mov	qword ptr [rbp - 8], rax
0x40017e:	xor	eax, eax
0x400180:	mov	qword ptr [rbp - 0x70], 0
0x400188:	mov	qword ptr [rbp - 0x68], 0
0x400190:	mov	qword ptr [rbp - 0x60], 0
0x400198:	mov	qword ptr [rbp - 0x58], 0
0x4001a0:	mov	qword ptr [rbp - 0x50], 0
0x4001a8:	mov	qword ptr [rbp - 0x48], 0
0x4001b0:	mov	qword ptr [rbp - 0x40], 0
0x4001b8:	mov	qword ptr [rbp - 0x38], 0
0x4001c0:	mov	qword ptr [rbp - 0x30], 0
0x4001c8:	mov	qword ptr [rbp - 0x28], 0
0x4001d0:	mov	qword ptr [rbp - 0x20], 0
0x4001d8:	mov	qword ptr [rbp - 0x18], 0
0x4001e0:	mov	dword ptr [rbp - 0x10], 0
0x4001e7:	lea	rax, [rbp - 0x70]
0x4001eb:	mov	qword ptr [rbp - 0x88], rax
0x4001f2:	mov	rax, qword ptr [rbp - 0x88]
0x4001f9:	mov	rdi, rax
0x4001fc:	call	0x500000
<Block for 0x400201, 16 bytes>
0x400201:	mov	qword ptr [rbp - 0x80], rax
0x400205:	lea	rdi, [rip + 0x1e8]
0x40020c:	call	0x500008
<Block for 0x400211, 11 bytes>
0x400211:	mov	qword ptr [rbp - 0x78], rax
0x400215:	cmp	qword ptr [rbp - 0x78], 0
0x40021a:	je	0x400245
<Block for 0x400245, 35 bytes>
0x400245:	nop	
0x400246:	lea	rdx, [rbp - 0x94]
0x40024d:	mov	rax, qword ptr [rbp - 0x88]
0x400254:	lea	rsi, [rip + 0x19d]
0x40025b:	mov	rdi, rax
0x40025e:	mov	eax, 0
0x400263:	call	0x500018
<Block for 0x40021c, 41 bytes>
0x40021c:	mov	eax, 0x63
0x400221:	sub	rax, qword ptr [rbp - 0x80]
0x400225:	mov	rdx, rax
0x400228:	mov	rcx, qword ptr [rbp - 0x88]
0x40022f:	mov	rax, qword ptr [rbp - 0x80]
0x400233:	add	rcx, rax
0x400236:	mov	rax, qword ptr [rbp - 0x78]
0x40023a:	mov	rsi, rax
0x40023d:	mov	rdi, rcx
0x400240:	call	0x500010
<Block for 0x400268, 5 bytes>
0x400268:	cmp	eax, 1
0x40026b:	jne	0x4002b9
<Block for 0x40026d, 13 bytes>
0x40026d:	mov	eax, dword ptr [rbp - 0x94]
0x400273:	cmp	eax, 0x270f
0x400278:	jg	0x4002b9
<Block for 0x4002b9, 17 bytes>
0x4002b9:	nop	
0x4002ba:	nop	
0x4002bb:	mov	rax, qword ptr [rbp - 8]
0x4002bf:	xor	rax, qword ptr fs:[0x28]
0x4002c8:	je	0x4002cf
<Block for 0x40027a, 22 bytes>
0x40027a:	mov	dword ptr [rbp - 0x8c], 0
0x400284:	mov	dword ptr [rbp - 0x90], 0
0x40028e:	jmp	0x40029e
<Block for 0x4002cf, 2 bytes>
0x4002cf:	leave	
0x4002d0:	ret	
<Block for 0x4002ca, 5 bytes>
0x4002ca:	call	0x500028
<Block for 0x40029e, 14 bytes>
0x40029e:	mov	eax, dword ptr [rbp - 0x94]
0x4002a4:	cmp	dword ptr [rbp - 0x90], eax
0x4002aa:	jl	0x400290
<Block for 0x400290, 28 bytes>
0x400290:	add	dword ptr [rbp - 0x8c], 1
0x400297:	add	dword ptr [rbp - 0x90], 1
0x40029e:	mov	eax, dword ptr [rbp - 0x94]
0x4002a4:	cmp	dword ptr [rbp - 0x90], eax
0x4002aa:	jl	0x400290
<Block for 0x4002ac, 13 bytes>
0x4002ac:	mov	eax, dword ptr [rbp - 0x8c]
0x4002b2:	mov	edi, eax
0x4002b4:	call	0x500020
