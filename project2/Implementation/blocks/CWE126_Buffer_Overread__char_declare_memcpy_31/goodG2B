<Block for 0x4000eb, 55 bytes>
0x4000eb:	endbr64	
0x4000ef:	push	rbp
0x4000f0:	mov	rbp, rsp
0x4000f3:	sub	rsp, 0x140
0x4000fa:	mov	rax, qword ptr fs:[0x28]
0x400103:	mov	qword ptr [rbp - 8], rax
0x400107:	xor	eax, eax
0x400109:	lea	rax, [rbp - 0x120]
0x400110:	mov	edx, 0x31
0x400115:	mov	esi, 0x41
0x40011a:	mov	rdi, rax
0x40011d:	call	0x500000
<Block for 0x400122, 32 bytes>
0x400122:	mov	byte ptr [rbp - 0xef], 0
0x400129:	lea	rax, [rbp - 0xe0]
0x400130:	mov	edx, 0x63
0x400135:	mov	esi, 0x41
0x40013a:	mov	rdi, rax
0x40013d:	call	0x500000
<Block for 0x400142, 68 bytes>
0x400142:	mov	byte ptr [rbp - 0x7d], 0
0x400146:	lea	rax, [rbp - 0xe0]
0x40014d:	mov	qword ptr [rbp - 0x138], rax
0x400154:	mov	rax, qword ptr [rbp - 0x138]
0x40015b:	mov	qword ptr [rbp - 0x130], rax
0x400162:	mov	rax, qword ptr [rbp - 0x130]
0x400169:	mov	qword ptr [rbp - 0x128], rax
0x400170:	lea	rax, [rbp - 0x70]
0x400174:	mov	edx, 0x63
0x400179:	mov	esi, 0x43
0x40017e:	mov	rdi, rax
0x400181:	call	0x500000
<Block for 0x400186, 16 bytes>
0x400186:	mov	byte ptr [rbp - 0xd], 0
0x40018a:	lea	rax, [rbp - 0x70]
0x40018e:	mov	rdi, rax
0x400191:	call	0x500008
<Block for 0x400196, 25 bytes>
0x400196:	mov	rdx, rax
0x400199:	mov	rcx, qword ptr [rbp - 0x128]
0x4001a0:	lea	rax, [rbp - 0x70]
0x4001a4:	mov	rsi, rcx
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x500010
<Block for 0x4001af, 16 bytes>
0x4001af:	mov	byte ptr [rbp - 0xd], 0
0x4001b3:	lea	rax, [rbp - 0x70]
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500018
<Block for 0x4001bf, 16 bytes>
0x4001bf:	nop	
0x4001c0:	mov	rax, qword ptr [rbp - 8]
0x4001c4:	xor	rax, qword ptr fs:[0x28]
0x4001cd:	je	0x4001d4
<Block for 0x4001d4, 2 bytes>
0x4001d4:	leave	
0x4001d5:	ret	
<Block for 0x4001cf, 5 bytes>
0x4001cf:	call	0x500020
