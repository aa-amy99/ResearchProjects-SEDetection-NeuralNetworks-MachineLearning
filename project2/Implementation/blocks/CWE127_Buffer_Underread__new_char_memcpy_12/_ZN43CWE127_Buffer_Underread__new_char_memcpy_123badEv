<Block for 0x400000, 47 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	qword ptr [rbp - 0x98], 0
0x40002a:	call	0x500000
<Block for 0x40002f, 9 bytes>
0x40002f:	test	eax, eax
0x400031:	setne	al
0x400034:	test	al, al
0x400036:	je	0x400084
<Block for 0x400084, 10 bytes>
0x400084:	mov	edi, 0x64
0x400089:	call	0x500008
<Block for 0x400038, 10 bytes>
0x400038:	mov	edi, 0x64
0x40003d:	call	0x500008
<Block for 0x40008e, 32 bytes>
0x40008e:	mov	qword ptr [rbp - 0x90], rax
0x400095:	mov	rax, qword ptr [rbp - 0x90]
0x40009c:	mov	edx, 0x63
0x4000a1:	mov	esi, 0x41
0x4000a6:	mov	rdi, rax
0x4000a9:	call	0x500010
<Block for 0x400042, 32 bytes>
0x400042:	mov	qword ptr [rbp - 0x88], rax
0x400049:	mov	rax, qword ptr [rbp - 0x88]
0x400050:	mov	edx, 0x63
0x400055:	mov	esi, 0x41
0x40005a:	mov	rdi, rax
0x40005d:	call	0x500010
<Block for 0x4000ae, 50 bytes>
0x4000ae:	mov	rax, qword ptr [rbp - 0x90]
0x4000b5:	add	rax, 0x63
0x4000b9:	mov	byte ptr [rax], 0
0x4000bc:	mov	rax, qword ptr [rbp - 0x90]
0x4000c3:	mov	qword ptr [rbp - 0x98], rax
0x4000ca:	lea	rax, [rbp - 0x80]
0x4000ce:	mov	edx, 0x63
0x4000d3:	mov	esi, 0x43
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500010
<Block for 0x400062, 34 bytes>
0x400062:	mov	rax, qword ptr [rbp - 0x88]
0x400069:	add	rax, 0x63
0x40006d:	mov	byte ptr [rax], 0
0x400070:	mov	rax, qword ptr [rbp - 0x88]
0x400077:	sub	rax, 8
0x40007b:	mov	qword ptr [rbp - 0x98], rax
0x400082:	jmp	0x4000ca
<Block for 0x4000e0, 128 bytes>
0x4000e0:	mov	byte ptr [rbp - 0x1d], 0
0x4000e4:	mov	rax, qword ptr [rbp - 0x98]
0x4000eb:	mov	rcx, qword ptr [rax]
0x4000ee:	mov	rbx, qword ptr [rax + 8]
0x4000f2:	mov	qword ptr [rbp - 0x80], rcx
0x4000f6:	mov	qword ptr [rbp - 0x78], rbx
0x4000fa:	mov	rcx, qword ptr [rax + 0x10]
0x4000fe:	mov	rbx, qword ptr [rax + 0x18]
0x400102:	mov	qword ptr [rbp - 0x70], rcx
0x400106:	mov	qword ptr [rbp - 0x68], rbx
0x40010a:	mov	rcx, qword ptr [rax + 0x20]
0x40010e:	mov	rbx, qword ptr [rax + 0x28]
0x400112:	mov	qword ptr [rbp - 0x60], rcx
0x400116:	mov	qword ptr [rbp - 0x58], rbx
0x40011a:	mov	rcx, qword ptr [rax + 0x30]
0x40011e:	mov	rbx, qword ptr [rax + 0x38]
0x400122:	mov	qword ptr [rbp - 0x50], rcx
0x400126:	mov	qword ptr [rbp - 0x48], rbx
0x40012a:	mov	rcx, qword ptr [rax + 0x40]
0x40012e:	mov	rbx, qword ptr [rax + 0x48]
0x400132:	mov	qword ptr [rbp - 0x40], rcx
0x400136:	mov	qword ptr [rbp - 0x38], rbx
0x40013a:	mov	rcx, qword ptr [rax + 0x50]
0x40013e:	mov	rbx, qword ptr [rax + 0x58]
0x400142:	mov	qword ptr [rbp - 0x30], rcx
0x400146:	mov	qword ptr [rbp - 0x28], rbx
0x40014a:	mov	eax, dword ptr [rax + 0x60]
0x40014d:	mov	dword ptr [rbp - 0x20], eax
0x400150:	mov	byte ptr [rbp - 0x1d], 0
0x400154:	lea	rax, [rbp - 0x80]
0x400158:	mov	rdi, rax
0x40015b:	call	0x500018
<Block for 0x4000ca, 22 bytes>
0x4000ca:	lea	rax, [rbp - 0x80]
0x4000ce:	mov	edx, 0x63
0x4000d3:	mov	esi, 0x43
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500010
<Block for 0x400160, 16 bytes>
0x400160:	nop	
0x400161:	mov	rax, qword ptr [rbp - 0x18]
0x400165:	xor	rax, qword ptr fs:[0x28]
0x40016e:	je	0x400175
<Block for 0x400175, 10 bytes>
0x400175:	add	rsp, 0x98
0x40017c:	pop	rbx
0x40017d:	pop	rbp
0x40017e:	ret	
<Block for 0x400170, 5 bytes>
0x400170:	call	0x500020
