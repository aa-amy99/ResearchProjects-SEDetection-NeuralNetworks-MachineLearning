<Block for 0x400084, 35 bytes>
0x400084:	endbr64	
0x400088:	push	rbp
0x400089:	mov	rbp, rsp
0x40008c:	sub	rsp, 0x20
0x400090:	mov	qword ptr [rbp - 0x18], rdi
0x400094:	mov	rax, qword ptr [rbp - 0x18]
0x400098:	mov	rax, qword ptr [rax + 0x10]
0x40009c:	mov	qword ptr [rbp - 8], rax
0x4000a0:	cmp	qword ptr [rbp - 8], 0
0x4000a5:	je	0x4000cc
<Block for 0x4000cc, 12 bytes>
0x4000cc:	lea	rdi, [rip + 8]
0x4000d3:	call	0x500010
<Block for 0x4000a7, 13 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	mov	eax, dword ptr [rax]
0x4000ad:	mov	edi, eax
0x4000af:	call	0x500000
<Block for 0x4000d8, 3 bytes>
0x4000d8:	nop	
0x4000d9:	leave	
0x4000da:	ret	
<Block for 0x4000b4, 9 bytes>
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	test	rax, rax
0x4000bb:	je	0x4000d8
<Block for 0x4000bd, 13 bytes>
0x4000bd:	mov	esi, 8
0x4000c2:	mov	rdi, rax
0x4000c5:	call	0x500008
<Block for 0x4000ca, 2 bytes>
0x4000ca:	jmp	0x4000d8
