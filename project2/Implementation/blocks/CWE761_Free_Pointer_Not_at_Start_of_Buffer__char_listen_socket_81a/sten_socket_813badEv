<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	edi, 0x64
0x400020:	call	0x500000
<Block for 0x400025, 11 bytes>
0x400025:	mov	qword ptr [rbp - 0x40], rax
0x400029:	cmp	qword ptr [rbp - 0x40], 0
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0xffffffff
0x400035:	call	0x500008
<Block for 0x40003a, 33 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 0x40]
0x40003e:	mov	byte ptr [rax], 0
0x400041:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400048:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40004f:	mov	rax, qword ptr [rbp - 0x40]
0x400053:	mov	rdi, rax
0x400056:	call	0x500010
<Block for 0x40005b, 24 bytes>
0x40005b:	mov	qword ptr [rbp - 0x38], rax
0x40005f:	mov	edx, 6
0x400064:	mov	esi, 1
0x400069:	mov	edi, 2
0x40006e:	call	0x500018
<Block for 0x400073, 13 bytes>
0x400073:	mov	dword ptr [rbp - 0x50], eax
0x400076:	cmp	dword ptr [rbp - 0x50], -1
0x40007a:	je	0x4001a8
<Block for 0x4001a8, 3 bytes>
0x4001a8:	nop	
0x4001a9:	jmp	0x4001b2
<Block for 0x400080, 22 bytes>
0x400080:	lea	rax, [rbp - 0x20]
0x400084:	mov	edx, 0x10
0x400089:	mov	esi, 0
0x40008e:	mov	rdi, rax
0x400091:	call	0x500020
<Block for 0x4001b2, 6 bytes>
0x4001b2:	cmp	dword ptr [rbp - 0x50], -1
0x4001b6:	je	0x4001c2
<Block for 0x400096, 23 bytes>
0x400096:	mov	word ptr [rbp - 0x20], 2
0x40009c:	mov	dword ptr [rbp - 0x1c], 0
0x4000a3:	mov	edi, 0x6987
0x4000a8:	call	0x500028
<Block for 0x4001c2, 6 bytes>
0x4001c2:	cmp	dword ptr [rbp - 0x54], -1
0x4001c6:	je	0x4001d2
<Block for 0x4001b8, 10 bytes>
0x4001b8:	mov	eax, dword ptr [rbp - 0x50]
0x4001bb:	mov	edi, eax
0x4001bd:	call	0x500058
<Block for 0x4000ad, 26 bytes>
0x4000ad:	mov	word ptr [rbp - 0x1e], ax
0x4000b1:	lea	rcx, [rbp - 0x20]
0x4000b5:	mov	eax, dword ptr [rbp - 0x50]
0x4000b8:	mov	edx, 0x10
0x4000bd:	mov	rsi, rcx
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500030
<Block for 0x4001d2, 45 bytes>
0x4001d2:	lea	rax, [rip + 0xffe97]
0x4001d9:	mov	qword ptr [rbp - 0x48], rax
0x4001dd:	lea	rax, [rbp - 0x48]
0x4001e1:	mov	qword ptr [rbp - 0x28], rax
0x4001e5:	mov	rax, qword ptr [rbp - 0x28]
0x4001e9:	mov	rax, qword ptr [rax]
0x4001ec:	mov	rcx, qword ptr [rax]
0x4001ef:	mov	rdx, qword ptr [rbp - 0x40]
0x4001f3:	mov	rax, qword ptr [rbp - 0x28]
0x4001f7:	mov	rsi, rdx
0x4001fa:	mov	rdi, rax
0x4001fd:	call	rcx
<Block for 0x4001c8, 10 bytes>
0x4001c8:	mov	eax, dword ptr [rbp - 0x54]
0x4001cb:	mov	edi, eax
0x4001cd:	call	0x500058
<Block for 0x4000c7, 14 bytes>
0x4000c7:	cmp	eax, -1
0x4000ca:	sete	al
0x4000cd:	test	al, al
0x4000cf:	jne	0x4001ab
<Block for 0x4001ff, 16 bytes>
0x4001ff:	nop	
0x400200:	mov	rax, qword ptr [rbp - 8]
0x400204:	xor	rax, qword ptr fs:[0x28]
0x40020d:	je	0x400214
<Block for 0x4000d5, 15 bytes>
0x4000d5:	mov	eax, dword ptr [rbp - 0x50]
0x4000d8:	mov	esi, 5
0x4000dd:	mov	edi, eax
0x4000df:	call	0x500038
<Block for 0x4001ab, 3 bytes>
0x4001ab:	nop	
0x4001ac:	jmp	0x4001b2
<Block for 0x400214, 2 bytes>
0x400214:	leave	
0x400215:	ret	
<Block for 0x40020f, 5 bytes>
0x40020f:	call	0x500068
<Block for 0x4000e4, 14 bytes>
0x4000e4:	cmp	eax, -1
0x4000e7:	sete	al
0x4000ea:	test	al, al
0x4000ec:	jne	0x4001ae
<Block for 0x4000f2, 20 bytes>
0x4000f2:	mov	eax, dword ptr [rbp - 0x50]
0x4000f5:	mov	edx, 0
0x4000fa:	mov	esi, 0
0x4000ff:	mov	edi, eax
0x400101:	call	0x500040
<Block for 0x4001ae, 3 bytes>
0x4001ae:	nop	
0x4001af:	jmp	0x4001b2
<Block for 0x400106, 13 bytes>
0x400106:	mov	dword ptr [rbp - 0x54], eax
0x400109:	cmp	dword ptr [rbp - 0x54], -1
0x40010d:	je	0x4001b1
<Block for 0x400113, 39 bytes>
0x400113:	mov	eax, 0x63
0x400118:	sub	rax, qword ptr [rbp - 0x38]
0x40011c:	mov	rdx, rax
0x40011f:	mov	rcx, qword ptr [rbp - 0x40]
0x400123:	mov	rax, qword ptr [rbp - 0x38]
0x400127:	lea	rsi, [rcx + rax]
0x40012b:	mov	eax, dword ptr [rbp - 0x54]
0x40012e:	mov	ecx, 0
0x400133:	mov	edi, eax
0x400135:	call	0x500048
<Block for 0x4001b1, 1 bytes>
0x4001b1:	nop	
<Block for 0x40013a, 9 bytes>
0x40013a:	mov	dword ptr [rbp - 0x4c], eax
0x40013d:	cmp	dword ptr [rbp - 0x4c], -1
0x400141:	je	0x4001b2
<Block for 0x400143, 6 bytes>
0x400143:	cmp	dword ptr [rbp - 0x4c], 0
0x400147:	je	0x4001b2
<Block for 0x400149, 40 bytes>
0x400149:	mov	eax, dword ptr [rbp - 0x4c]
0x40014c:	movsxd	rdx, eax
0x40014f:	mov	rax, qword ptr [rbp - 0x38]
0x400153:	add	rdx, rax
0x400156:	mov	rax, qword ptr [rbp - 0x40]
0x40015a:	add	rax, rdx
0x40015d:	mov	byte ptr [rax], 0
0x400160:	mov	rax, qword ptr [rbp - 0x40]
0x400164:	mov	esi, 0xd
0x400169:	mov	rdi, rax
0x40016c:	call	0x500050
<Block for 0x400171, 11 bytes>
0x400171:	mov	qword ptr [rbp - 0x30], rax
0x400175:	cmp	qword ptr [rbp - 0x30], 0
0x40017a:	je	0x400183
<Block for 0x400183, 17 bytes>
0x400183:	mov	rax, qword ptr [rbp - 0x40]
0x400187:	mov	esi, 0xa
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500050
<Block for 0x40017c, 24 bytes>
0x40017c:	mov	rax, qword ptr [rbp - 0x30]
0x400180:	mov	byte ptr [rax], 0
0x400183:	mov	rax, qword ptr [rbp - 0x40]
0x400187:	mov	esi, 0xa
0x40018c:	mov	rdi, rax
0x40018f:	call	0x500050
<Block for 0x400194, 11 bytes>
0x400194:	mov	qword ptr [rbp - 0x30], rax
0x400198:	cmp	qword ptr [rbp - 0x30], 0
0x40019d:	je	0x4001b2
<Block for 0x40019f, 9 bytes>
0x40019f:	mov	rax, qword ptr [rbp - 0x30]
0x4001a3:	mov	byte ptr [rax], 0
0x4001a6:	jmp	0x4001b2
