<Block for 0x4000d7, 82 bytes>
0x4000d7:	endbr64	
0x4000db:	push	rbp
0x4000dc:	mov	rbp, rsp
0x4000df:	sub	rsp, 0x40
0x4000e3:	mov	rax, qword ptr fs:[0x28]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	xor	eax, eax
0x4000f2:	mov	eax, dword ptr [rip + 0x1b8]
0x4000f8:	mov	dword ptr [rbp - 0x34], eax
0x4000fb:	mov	qword ptr [rbp - 0x30], 0
0x400103:	mov	qword ptr [rbp - 0x28], 0
0x40010b:	mov	qword ptr [rbp - 0x20], 0
0x400113:	mov	qword ptr [rbp - 0x18], 0
0x40011b:	mov	qword ptr [rbp - 0x10], 0
0x400123:	cmp	dword ptr [rbp - 0x34], 9
0x400127:	jg	0x40015b
<Block for 0x400129, 22 bytes>
0x400129:	mov	eax, dword ptr [rbp - 0x34]
0x40012c:	cdqe	
0x40012e:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400136:	mov	dword ptr [rbp - 0x38], 0
0x40013d:	jmp	0x400153
<Block for 0x40015b, 12 bytes>
0x40015b:	lea	rdi, [rip + 0x156]
0x400162:	call	0x500008
<Block for 0x400153, 6 bytes>
0x400153:	cmp	dword ptr [rbp - 0x38], 9
0x400157:	jle	0x40013f
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40013f, 16 bytes>
0x40013f:	mov	eax, dword ptr [rbp - 0x38]
0x400142:	cdqe	
0x400144:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400148:	mov	edi, eax
0x40014a:	call	0x500000
<Block for 0x400159, 2 bytes>
0x400159:	jmp	0x400167
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500010
<Block for 0x40014f, 10 bytes>
0x40014f:	add	dword ptr [rbp - 0x38], 1
0x400153:	cmp	dword ptr [rbp - 0x38], 9
0x400157:	jle	0x40013f
