<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x10], 0
0x400023:	mov	eax, dword ptr [rip + 0x123]
0x400029:	test	eax, eax
0x40002b:	je	0x40003b
<Block for 0x40003b, 13 bytes>
0x40003b:	mov	rax, qword ptr [rbp - 0x10]
0x40003f:	mov	eax, dword ptr [rax]
0x400041:	mov	edi, eax
0x400043:	call	0x500000
<Block for 0x40002d, 27 bytes>
0x40002d:	mov	word ptr [rbp - 0x12], 8
0x400033:	lea	rax, [rbp - 0x12]
0x400037:	mov	qword ptr [rbp - 0x10], rax
0x40003b:	mov	rax, qword ptr [rbp - 0x10]
0x40003f:	mov	eax, dword ptr [rax]
0x400041:	mov	edi, eax
0x400043:	call	0x500000
<Block for 0x400048, 16 bytes>
0x400048:	nop	
0x400049:	mov	rax, qword ptr [rbp - 8]
0x40004d:	xor	rax, qword ptr fs:[0x28]
0x400056:	je	0x40005d
<Block for 0x40005d, 2 bytes>
0x40005d:	leave	
0x40005e:	ret	
<Block for 0x400058, 5 bytes>
0x400058:	call	0x500008
