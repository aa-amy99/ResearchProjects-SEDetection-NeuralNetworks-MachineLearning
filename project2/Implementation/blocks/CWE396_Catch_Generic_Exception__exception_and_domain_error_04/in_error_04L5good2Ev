<Block for 0x4002e3, 22 bytes>
0x4002e3:	endbr64	
0x4002e7:	push	rbp
0x4002e8:	mov	rbp, rsp
0x4002eb:	push	r13
0x4002ed:	push	r12
0x4002ef:	push	rbx
0x4002f0:	sub	rsp, 0x18
0x4002f4:	call	0x500000
<Block for 0x4002f9, 12 bytes>
0x4002f9:	and	eax, 1
0x4002fc:	test	eax, eax
0x4002fe:	sete	al
0x400301:	test	al, al
0x400303:	je	0x40033a
<Block for 0x40033a, 5 bytes>
0x40033a:	call	0x500000
<Block for 0x400305, 10 bytes>
0x400305:	mov	edi, 0x10
0x40030a:	call	0x500008
<Block for 0x40033f, 12 bytes>
0x40033f:	and	eax, 1
0x400342:	test	eax, eax
0x400344:	sete	al
0x400347:	test	al, al
0x400349:	je	0x400380
<Block for 0x40030f, 18 bytes>
0x40030f:	mov	rbx, rax
0x400312:	lea	rsi, [rip + 0x15f]
0x400319:	mov	rdi, rbx
0x40031c:	call	0x500010
<Block for 0x400380, 12 bytes>
0x400380:	lea	rdi, [rip + 0xfb]
0x400387:	call	0x500058
<Block for 0x40034b, 10 bytes>
0x40034b:	mov	edi, 0x10
0x400350:	call	0x500008
<Block for 0x400321, 25 bytes>
0x400321:	mov	rax, qword ptr [rip + 0xffcf8]
0x400328:	mov	rdx, rax
0x40032b:	lea	rsi, [rip + 0xffcf6]
0x400332:	mov	rdi, rbx
0x400335:	call	0x500030
<Block for 0x40038c, 5 bytes>
0x40038c:	jmp	0x40044a
<Block for 0x400355, 18 bytes>
0x400355:	mov	rbx, rax
0x400358:	lea	rsi, [rip + 0x11e]
0x40035f:	mov	rdi, rbx
0x400362:	call	0x500038
<Block for 0x40044a, 11 bytes>
0x40044a:	add	rsp, 0x18
0x40044e:	pop	rbx
0x40044f:	pop	r12
0x400451:	pop	r13
0x400453:	pop	rbp
0x400454:	ret	
<Block for 0x400367, 25 bytes>
0x400367:	mov	rax, qword ptr [rip + 0xffcda]
0x40036e:	mov	rdx, rax
0x400371:	lea	rsi, [rip + 0xffcd8]
0x400378:	mov	rdi, rbx
0x40037b:	call	0x500030
