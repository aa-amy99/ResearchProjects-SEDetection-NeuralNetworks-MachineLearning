<Block for 0x400103, 96 bytes>
0x400103:	endbr64	
0x400107:	push	rbp
0x400108:	mov	rbp, rsp
0x40010b:	sub	rsp, 0xa0
0x400112:	mov	rax, qword ptr fs:[0x28]
0x40011b:	mov	qword ptr [rbp - 8], rax
0x40011f:	xor	eax, eax
0x400121:	lea	rax, [rbp - 0xa0]
0x400128:	mov	qword ptr [rbp - 0x98], rax
0x40012f:	lea	rax, [rbp - 0xa0]
0x400136:	mov	qword ptr [rbp - 0x90], rax
0x40013d:	mov	qword ptr [rbp - 0xa0], 0
0x400148:	mov	rax, qword ptr [rbp - 0x98]
0x40014f:	mov	rax, qword ptr [rax]
0x400152:	mov	qword ptr [rbp - 0x88], rax
0x400159:	mov	edi, 0x64
0x40015e:	call	0x500000
<Block for 0x400163, 26 bytes>
0x400163:	mov	qword ptr [rbp - 0x80], rax
0x400167:	mov	rax, qword ptr [rbp - 0x80]
0x40016b:	mov	edx, 0x63
0x400170:	mov	esi, 0x41
0x400175:	mov	rdi, rax
0x400178:	call	0x500008
<Block for 0x40017d, 75 bytes>
0x40017d:	mov	rax, qword ptr [rbp - 0x80]
0x400181:	add	rax, 0x63
0x400185:	mov	byte ptr [rax], 0
0x400188:	mov	rax, qword ptr [rbp - 0x80]
0x40018c:	mov	qword ptr [rbp - 0x88], rax
0x400193:	mov	rax, qword ptr [rbp - 0x98]
0x40019a:	mov	rdx, qword ptr [rbp - 0x88]
0x4001a1:	mov	qword ptr [rax], rdx
0x4001a4:	mov	rax, qword ptr [rbp - 0x90]
0x4001ab:	mov	rax, qword ptr [rax]
0x4001ae:	mov	qword ptr [rbp - 0x78], rax
0x4001b2:	lea	rax, [rbp - 0x70]
0x4001b6:	mov	edx, 0x63
0x4001bb:	mov	esi, 0x43
0x4001c0:	mov	rdi, rax
0x4001c3:	call	0x500008
<Block for 0x4001c8, 23 bytes>
0x4001c8:	mov	byte ptr [rbp - 0xd], 0
0x4001cc:	lea	rdx, [rbp - 0x70]
0x4001d0:	mov	rax, qword ptr [rbp - 0x78]
0x4001d4:	mov	rsi, rdx
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500010
<Block for 0x4001df, 12 bytes>
0x4001df:	mov	rax, qword ptr [rbp - 0x78]
0x4001e3:	mov	rdi, rax
0x4001e6:	call	0x500018
<Block for 0x4001eb, 16 bytes>
0x4001eb:	nop	
0x4001ec:	mov	rax, qword ptr [rbp - 8]
0x4001f0:	xor	rax, qword ptr fs:[0x28]
0x4001f9:	je	0x400200
<Block for 0x400200, 2 bytes>
0x400200:	leave	
0x400201:	ret	
<Block for 0x4001fb, 5 bytes>
0x4001fb:	call	0x500020
