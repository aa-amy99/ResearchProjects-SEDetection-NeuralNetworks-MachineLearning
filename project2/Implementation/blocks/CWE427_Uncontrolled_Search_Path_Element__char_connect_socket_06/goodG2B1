<Block for 0x40023c, 82 bytes>
0x40023c:	endbr64	
0x400240:	push	rbp
0x400241:	mov	rbp, rsp
0x400244:	sub	rsp, 0x120
0x40024b:	mov	rax, qword ptr fs:[0x28]
0x400254:	mov	qword ptr [rbp - 8], rax
0x400258:	xor	eax, eax
0x40025a:	movabs	rax, 0x3d48544150
0x400264:	mov	edx, 0
0x400269:	mov	qword ptr [rbp - 0x110], rax
0x400270:	mov	qword ptr [rbp - 0x108], rdx
0x400277:	lea	rdx, [rbp - 0x100]
0x40027e:	mov	eax, 0
0x400283:	mov	ecx, 0x1d
0x400288:	mov	rdi, rdx
0x40028b:	rep stosq	qword ptr [rdi], rax
<Block for 0x40028e, 34 bytes>
0x40028e:	mov	rdx, rdi
0x400291:	mov	word ptr [rdx], ax
0x400294:	add	rdx, 2
0x400298:	lea	rax, [rbp - 0x110]
0x40029f:	mov	qword ptr [rbp - 0x118], rax
0x4002a6:	mov	eax, 5
0x4002ab:	cmp	eax, 5
0x4002ae:	je	0x4002be
<Block for 0x40028b, 3 bytes>
0x40028b:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002be, 27 bytes>
0x4002be:	mov	rax, qword ptr [rbp - 0x118]
0x4002c5:	mov	rcx, -1
0x4002cc:	mov	rdx, rax
0x4002cf:	mov	eax, 0
0x4002d4:	mov	rdi, rdx
0x4002d7:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002b0, 12 bytes>
0x4002b0:	lea	rdi, [rip + 0x167]
0x4002b7:	call	0x500058
<Block for 0x4002d9, 45 bytes>
0x4002d9:	mov	rax, rcx
0x4002dc:	not	rax
0x4002df:	lea	rdx, [rax - 1]
0x4002e3:	mov	rax, qword ptr [rbp - 0x118]
0x4002ea:	add	rax, rdx
0x4002ed:	mov	dword ptr [rax], 0x6e69622f
0x4002f3:	mov	byte ptr [rax + 4], 0
0x4002f7:	mov	rax, qword ptr [rbp - 0x118]
0x4002fe:	mov	rdi, rax
0x400301:	call	0x500048
<Block for 0x4002d7, 2 bytes>
0x4002d7:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002bc, 2 bytes>
0x4002bc:	jmp	0x4002f7
<Block for 0x400306, 16 bytes>
0x400306:	nop	
0x400307:	mov	rax, qword ptr [rbp - 8]
0x40030b:	xor	rax, qword ptr fs:[0x28]
0x400314:	je	0x40031b
<Block for 0x4002f7, 15 bytes>
0x4002f7:	mov	rax, qword ptr [rbp - 0x118]
0x4002fe:	mov	rdi, rax
0x400301:	call	0x500048
<Block for 0x40031b, 2 bytes>
0x40031b:	leave	
0x40031c:	ret	
<Block for 0x400316, 5 bytes>
0x400316:	call	0x500050
