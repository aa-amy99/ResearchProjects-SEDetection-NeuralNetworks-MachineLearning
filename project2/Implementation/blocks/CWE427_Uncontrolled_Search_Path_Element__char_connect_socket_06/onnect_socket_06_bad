<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 38 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x138], rax
0x40006a:	mov	eax, 5
0x40006f:	cmp	eax, 5
0x400072:	jne	0x400216
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400078, 25 bytes>
0x400078:	mov	dword ptr [rbp - 0x140], 0xffffffff
0x400082:	mov	rax, qword ptr [rbp - 0x138]
0x400089:	mov	rdi, rax
0x40008c:	call	0x500000
<Block for 0x400216, 15 bytes>
0x400216:	mov	rax, qword ptr [rbp - 0x138]
0x40021d:	mov	rdi, rax
0x400220:	call	0x500048
<Block for 0x400091, 27 bytes>
0x400091:	mov	qword ptr [rbp - 0x130], rax
0x400098:	mov	edx, 6
0x40009d:	mov	esi, 1
0x4000a2:	mov	edi, 2
0x4000a7:	call	0x500008
<Block for 0x400225, 16 bytes>
0x400225:	nop	
0x400226:	mov	rax, qword ptr [rbp - 8]
0x40022a:	xor	rax, qword ptr fs:[0x28]
0x400233:	je	0x40023a
<Block for 0x4000ac, 19 bytes>
0x4000ac:	mov	dword ptr [rbp - 0x140], eax
0x4000b2:	cmp	dword ptr [rbp - 0x140], -1
0x4000b9:	je	0x4001fc
<Block for 0x40023a, 2 bytes>
0x40023a:	leave	
0x40023b:	ret	
<Block for 0x400235, 5 bytes>
0x400235:	call	0x500050
<Block for 0x4001fc, 3 bytes>
0x4001fc:	nop	
0x4001fd:	jmp	0x400200
<Block for 0x4000bf, 25 bytes>
0x4000bf:	lea	rax, [rbp - 0x120]
0x4000c6:	mov	edx, 0x10
0x4000cb:	mov	esi, 0
0x4000d0:	mov	rdi, rax
0x4000d3:	call	0x500010
<Block for 0x400200, 9 bytes>
0x400200:	cmp	dword ptr [rbp - 0x140], -1
0x400207:	je	0x400216
<Block for 0x4000d8, 21 bytes>
0x4000d8:	mov	word ptr [rbp - 0x120], 2
0x4000e1:	lea	rdi, [rip + 0x32c]
0x4000e8:	call	0x500018
<Block for 0x400209, 13 bytes>
0x400209:	mov	eax, dword ptr [rbp - 0x140]
0x40020f:	mov	edi, eax
0x400211:	call	0x500040
<Block for 0x4000ed, 16 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x11c], eax
0x4000f3:	mov	edi, 0x6987
0x4000f8:	call	0x500020
<Block for 0x4000fd, 35 bytes>
0x4000fd:	mov	word ptr [rbp - 0x11e], ax
0x400104:	lea	rcx, [rbp - 0x120]
0x40010b:	mov	eax, dword ptr [rbp - 0x140]
0x400111:	mov	edx, 0x10
0x400116:	mov	rsi, rcx
0x400119:	mov	edi, eax
0x40011b:	call	0x500028
<Block for 0x400120, 9 bytes>
0x400120:	cmp	eax, -1
0x400123:	je	0x4001ff
<Block for 0x400129, 51 bytes>
0x400129:	mov	eax, 0xf9
0x40012e:	sub	rax, qword ptr [rbp - 0x130]
0x400135:	mov	rdx, rax
0x400138:	mov	rcx, qword ptr [rbp - 0x138]
0x40013f:	mov	rax, qword ptr [rbp - 0x130]
0x400146:	lea	rsi, [rcx + rax]
0x40014a:	mov	eax, dword ptr [rbp - 0x140]
0x400150:	mov	ecx, 0
0x400155:	mov	edi, eax
0x400157:	call	0x500030
<Block for 0x4001ff, 1 bytes>
0x4001ff:	nop	
<Block for 0x40015c, 19 bytes>
0x40015c:	mov	dword ptr [rbp - 0x13c], eax
0x400162:	cmp	dword ptr [rbp - 0x13c], -1
0x400169:	je	0x400200
<Block for 0x40016f, 13 bytes>
0x40016f:	cmp	dword ptr [rbp - 0x13c], 0
0x400176:	je	0x400200
<Block for 0x40017c, 52 bytes>
0x40017c:	mov	eax, dword ptr [rbp - 0x13c]
0x400182:	movsxd	rdx, eax
0x400185:	mov	rax, qword ptr [rbp - 0x130]
0x40018c:	add	rdx, rax
0x40018f:	mov	rax, qword ptr [rbp - 0x138]
0x400196:	add	rax, rdx
0x400199:	mov	byte ptr [rax], 0
0x40019c:	mov	rax, qword ptr [rbp - 0x138]
0x4001a3:	mov	esi, 0xd
0x4001a8:	mov	rdi, rax
0x4001ab:	call	0x500038
<Block for 0x4001b0, 17 bytes>
0x4001b0:	mov	qword ptr [rbp - 0x128], rax
0x4001b7:	cmp	qword ptr [rbp - 0x128], 0
0x4001bf:	je	0x4001cb
<Block for 0x4001cb, 20 bytes>
0x4001cb:	mov	rax, qword ptr [rbp - 0x138]
0x4001d2:	mov	esi, 0xa
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500038
<Block for 0x4001c1, 30 bytes>
0x4001c1:	mov	rax, qword ptr [rbp - 0x128]
0x4001c8:	mov	byte ptr [rax], 0
0x4001cb:	mov	rax, qword ptr [rbp - 0x138]
0x4001d2:	mov	esi, 0xa
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500038
<Block for 0x4001df, 17 bytes>
0x4001df:	mov	qword ptr [rbp - 0x128], rax
0x4001e6:	cmp	qword ptr [rbp - 0x128], 0
0x4001ee:	je	0x400200
<Block for 0x4001f0, 12 bytes>
0x4001f0:	mov	rax, qword ptr [rbp - 0x128]
0x4001f7:	mov	byte ptr [rax], 0
0x4001fa:	jmp	0x400200
