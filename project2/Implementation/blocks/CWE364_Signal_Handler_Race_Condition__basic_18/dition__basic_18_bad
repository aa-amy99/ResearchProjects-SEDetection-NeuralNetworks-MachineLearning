<Block for 0x40004e, 40 bytes>
0x40004e:	endbr64	
0x400052:	push	rbp
0x400053:	mov	rbp, rsp
0x400056:	sub	rsp, 0x10
0x40005a:	nop	
0x40005b:	endbr64	
0x40005f:	mov	qword ptr [rbp - 8], 0
0x400067:	mov	esi, 0
0x40006c:	mov	edi, 2
0x400071:	call	0x500000
<Block for 0x400076, 12 bytes>
0x400076:	mov	rax, qword ptr [rip + 0x18b]
0x40007d:	test	rax, rax
0x400080:	je	0x40009c
<Block for 0x40009c, 10 bytes>
0x40009c:	mov	edi, 4
0x4000a1:	call	0x500010
<Block for 0x400082, 15 bytes>
0x400082:	mov	rax, qword ptr [rip + 0x17f]
0x400089:	mov	rdi, rax
0x40008c:	call	0x500008
<Block for 0x4000a6, 11 bytes>
0x4000a6:	mov	qword ptr [rbp - 8], rax
0x4000aa:	cmp	qword ptr [rbp - 8], 0
0x4000af:	jne	0x4000bb
<Block for 0x400091, 21 bytes>
0x400091:	mov	qword ptr [rip + 0x16c], 0
0x40009c:	mov	edi, 4
0x4000a1:	call	0x500010
<Block for 0x4000b1, 10 bytes>
0x4000b1:	mov	edi, 0xffffffff
0x4000b6:	call	0x500018
<Block for 0x4000bb, 41 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 8]
0x4000bf:	mov	qword ptr [rip + 0x142], rax
0x4000c6:	mov	rax, qword ptr [rip + 0x13b]
0x4000cd:	mov	dword ptr [rax], 1
0x4000d3:	lea	rsi, [rip - 0xda]
0x4000da:	mov	edi, 2
0x4000df:	call	0x500000
<Block for 0x4000e4, 12 bytes>
0x4000e4:	mov	rax, qword ptr [rip + 0x11d]
0x4000eb:	test	rax, rax
0x4000ee:	je	0x40010a
<Block for 0x40010a, 3 bytes>
0x40010a:	nop	
0x40010b:	leave	
0x40010c:	ret	
<Block for 0x4000f0, 15 bytes>
0x4000f0:	mov	rax, qword ptr [rip + 0x111]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500008
<Block for 0x4000ff, 14 bytes>
0x4000ff:	mov	qword ptr [rip + 0xfe], 0
0x40010a:	nop	
0x40010b:	leave	
0x40010c:	ret	
