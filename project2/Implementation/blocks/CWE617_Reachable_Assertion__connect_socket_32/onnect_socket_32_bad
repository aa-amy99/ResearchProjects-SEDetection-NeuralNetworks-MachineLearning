<Block for 0x400000, 86 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x60
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x54]
0x40001f:	mov	qword ptr [rbp - 0x40], rax
0x400023:	lea	rax, [rbp - 0x54]
0x400027:	mov	qword ptr [rbp - 0x38], rax
0x40002b:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x40]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x50], eax
0x40003b:	mov	dword ptr [rbp - 0x4c], 0xffffffff
0x400042:	mov	edx, 6
0x400047:	mov	esi, 1
0x40004c:	mov	edi, 2
0x400051:	call	0x500000
<Block for 0x400056, 13 bytes>
0x400056:	mov	dword ptr [rbp - 0x4c], eax
0x400059:	cmp	dword ptr [rbp - 0x4c], -1
0x40005d:	je	0x4000f9
<Block for 0x4000f9, 3 bytes>
0x4000f9:	nop	
0x4000fa:	jmp	0x4000fd
<Block for 0x400063, 22 bytes>
0x400063:	lea	rax, [rbp - 0x30]
0x400067:	mov	edx, 0x10
0x40006c:	mov	esi, 0
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x4000fd, 6 bytes>
0x4000fd:	cmp	dword ptr [rbp - 0x4c], -1
0x400101:	je	0x40010d
<Block for 0x400079, 18 bytes>
0x400079:	mov	word ptr [rbp - 0x30], 2
0x40007f:	lea	rdi, [rip + 0x17a]
0x400086:	call	0x500010
<Block for 0x40010d, 24 bytes>
0x40010d:	mov	rax, qword ptr [rbp - 0x40]
0x400111:	mov	edx, dword ptr [rbp - 0x50]
0x400114:	mov	dword ptr [rax], edx
0x400116:	mov	rax, qword ptr [rbp - 0x38]
0x40011a:	mov	eax, dword ptr [rax]
0x40011c:	mov	dword ptr [rbp - 0x44], eax
0x40011f:	cmp	dword ptr [rbp - 0x44], 5
0x400123:	jg	0x400144
<Block for 0x400103, 10 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x4c]
0x400106:	mov	edi, eax
0x400108:	call	0x500038
<Block for 0x40008b, 13 bytes>
0x40008b:	mov	dword ptr [rbp - 0x2c], eax
0x40008e:	mov	edi, 0x6987
0x400093:	call	0x500018
<Block for 0x400125, 31 bytes>
0x400125:	lea	rcx, [rip + 0x134]
0x40012c:	mov	edx, 0x75
0x400131:	lea	rsi, [rip + 0xd8]
0x400138:	lea	rdi, [rip + 0x101]
0x40013f:	call	0x500040
<Block for 0x400144, 16 bytes>
0x400144:	nop	
0x400145:	mov	rax, qword ptr [rbp - 8]
0x400149:	xor	rax, qword ptr fs:[0x28]
0x400152:	je	0x400159
<Block for 0x400098, 26 bytes>
0x400098:	mov	word ptr [rbp - 0x2e], ax
0x40009c:	lea	rcx, [rbp - 0x30]
0x4000a0:	mov	eax, dword ptr [rbp - 0x4c]
0x4000a3:	mov	edx, 0x10
0x4000a8:	mov	rsi, rcx
0x4000ab:	mov	edi, eax
0x4000ad:	call	0x500020
<Block for 0x400159, 2 bytes>
0x400159:	leave	
0x40015a:	ret	
<Block for 0x400154, 5 bytes>
0x400154:	call	0x500048
<Block for 0x4000b2, 5 bytes>
0x4000b2:	cmp	eax, -1
0x4000b5:	je	0x4000fc
<Block for 0x4000b7, 24 bytes>
0x4000b7:	lea	rsi, [rbp - 0x16]
0x4000bb:	mov	eax, dword ptr [rbp - 0x4c]
0x4000be:	mov	ecx, 0
0x4000c3:	mov	edx, 0xd
0x4000c8:	mov	edi, eax
0x4000ca:	call	0x500028
<Block for 0x4000fc, 1 bytes>
0x4000fc:	nop	
<Block for 0x4000cf, 9 bytes>
0x4000cf:	mov	dword ptr [rbp - 0x48], eax
0x4000d2:	cmp	dword ptr [rbp - 0x48], -1
0x4000d6:	je	0x4000fd
<Block for 0x4000d8, 6 bytes>
0x4000d8:	cmp	dword ptr [rbp - 0x48], 0
0x4000dc:	je	0x4000fd
<Block for 0x4000de, 22 bytes>
0x4000de:	mov	eax, dword ptr [rbp - 0x48]
0x4000e1:	cdqe	
0x4000e3:	mov	byte ptr [rbp + rax - 0x16], 0
0x4000e8:	lea	rax, [rbp - 0x16]
0x4000ec:	mov	rdi, rax
0x4000ef:	call	0x500030
<Block for 0x4000f4, 5 bytes>
0x4000f4:	mov	dword ptr [rbp - 0x50], eax
0x4000f7:	jmp	0x4000fd
