<Block for 0x4000d5, 80 bytes>
0x4000d5:	endbr64	
0x4000d9:	push	rbp
0x4000da:	mov	rbp, rsp
0x4000dd:	sub	rsp, 0x20
0x4000e1:	mov	rax, qword ptr fs:[0x28]
0x4000ea:	mov	qword ptr [rbp - 8], rax
0x4000ee:	xor	eax, eax
0x4000f0:	mov	qword ptr [rbp - 0x18], 0
0x4000f8:	lea	rax, [rip + 0xfff29]
0x4000ff:	mov	qword ptr [rbp - 0x20], rax
0x400103:	lea	rax, [rbp - 0x20]
0x400107:	mov	qword ptr [rbp - 0x10], rax
0x40010b:	mov	rax, qword ptr [rbp - 0x10]
0x40010f:	mov	rax, qword ptr [rax]
0x400112:	mov	rcx, qword ptr [rax]
0x400115:	mov	rdx, qword ptr [rbp - 0x18]
0x400119:	mov	rax, qword ptr [rbp - 0x10]
0x40011d:	mov	rsi, rdx
0x400120:	mov	rdi, rax
0x400123:	call	rcx
<Block for 0x400125, 16 bytes>
0x400125:	nop	
0x400126:	mov	rax, qword ptr [rbp - 8]
0x40012a:	xor	rax, qword ptr fs:[0x28]
0x400133:	je	0x40013a
<Block for 0x40013a, 2 bytes>
0x40013a:	leave	
0x40013b:	ret	
<Block for 0x400135, 5 bytes>
0x400135:	call	0x500008
