<Block for 0x400067, 87 bytes>
0x400067:	endbr64	
0x40006b:	push	rbp
0x40006c:	mov	rbp, rsp
0x40006f:	sub	rsp, 0x30
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	dword ptr [rbp - 0x24], 5
0x400089:	lea	rax, [rbp - 0x24]
0x40008d:	mov	qword ptr [rbp - 0x18], rax
0x400091:	lea	rax, [rip + 0xfff88]
0x400098:	mov	qword ptr [rbp - 0x20], rax
0x40009c:	lea	rax, [rbp - 0x20]
0x4000a0:	mov	qword ptr [rbp - 0x10], rax
0x4000a4:	mov	rax, qword ptr [rbp - 0x10]
0x4000a8:	mov	rax, qword ptr [rax]
0x4000ab:	mov	rcx, qword ptr [rax]
0x4000ae:	mov	rdx, qword ptr [rbp - 0x18]
0x4000b2:	mov	rax, qword ptr [rbp - 0x10]
0x4000b6:	mov	rsi, rdx
0x4000b9:	mov	rdi, rax
0x4000bc:	call	rcx
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x4000d3
<Block for 0x4000d3, 2 bytes>
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000ce, 5 bytes>
0x4000ce:	call	0x500008
