<Block for 0x400000, 60 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	rax, qword ptr [rip + 0x21e]
0x400022:	mov	qword ptr [rbp - 0x78], rax
0x400026:	lea	rax, [rbp - 0x70]
0x40002a:	mov	edx, 0x63
0x40002f:	mov	esi, 0x43
0x400034:	mov	rdi, rax
0x400037:	call	0x500000
<Block for 0x40003c, 14 bytes>
0x40003c:	mov	byte ptr [rbp - 0xd], 0
0x400040:	mov	qword ptr [rbp - 0x80], 0
0x400048:	jmp	0x40006a
<Block for 0x40006a, 7 bytes>
0x40006a:	cmp	qword ptr [rbp - 0x80], 0x63
0x40006f:	jbe	0x40004a
<Block for 0x40004a, 39 bytes>
0x40004a:	mov	rdx, qword ptr [rbp - 0x78]
0x40004e:	mov	rax, qword ptr [rbp - 0x80]
0x400052:	add	rdx, rax
0x400055:	lea	rcx, [rbp - 0x70]
0x400059:	mov	rax, qword ptr [rbp - 0x80]
0x40005d:	add	rax, rcx
0x400060:	movzx	eax, byte ptr [rax]
0x400063:	mov	byte ptr [rdx], al
0x400065:	add	qword ptr [rbp - 0x80], 1
0x40006a:	cmp	qword ptr [rbp - 0x80], 0x63
0x40006f:	jbe	0x40004a
<Block for 0x400071, 23 bytes>
0x400071:	mov	rax, qword ptr [rbp - 0x78]
0x400075:	add	rax, 0x63
0x400079:	mov	byte ptr [rax], 0
0x40007c:	mov	rax, qword ptr [rbp - 0x78]
0x400080:	mov	rdi, rax
0x400083:	call	0x500008
<Block for 0x400088, 16 bytes>
0x400088:	nop	
0x400089:	mov	rax, qword ptr [rbp - 8]
0x40008d:	xor	rax, qword ptr fs:[0x28]
0x400096:	je	0x40009d
<Block for 0x40009d, 2 bytes>
0x40009d:	leave	
0x40009e:	ret	
<Block for 0x400098, 5 bytes>
0x400098:	call	0x500010
