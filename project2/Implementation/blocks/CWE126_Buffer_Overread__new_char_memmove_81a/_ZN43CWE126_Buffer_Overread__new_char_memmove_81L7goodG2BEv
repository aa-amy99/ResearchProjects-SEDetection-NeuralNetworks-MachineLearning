<Block for 0x400096, 45 bytes>
0x400096:	endbr64	
0x40009a:	push	rbp
0x40009b:	mov	rbp, rsp
0x40009e:	sub	rsp, 0x20
0x4000a2:	mov	rax, qword ptr fs:[0x28]
0x4000ab:	mov	qword ptr [rbp - 8], rax
0x4000af:	xor	eax, eax
0x4000b1:	mov	qword ptr [rbp - 0x18], 0
0x4000b9:	mov	edi, 0x64
0x4000be:	call	0x500000
<Block for 0x4000c3, 26 bytes>
0x4000c3:	mov	qword ptr [rbp - 0x18], rax
0x4000c7:	mov	rax, qword ptr [rbp - 0x18]
0x4000cb:	mov	edx, 0x63
0x4000d0:	mov	esi, 0x41
0x4000d5:	mov	rdi, rax
0x4000d8:	call	0x500008
<Block for 0x4000dd, 56 bytes>
0x4000dd:	mov	rax, qword ptr [rbp - 0x18]
0x4000e1:	add	rax, 0x63
0x4000e5:	mov	byte ptr [rax], 0
0x4000e8:	lea	rax, [rip + 0xfff41]
0x4000ef:	mov	qword ptr [rbp - 0x20], rax
0x4000f3:	lea	rax, [rbp - 0x20]
0x4000f7:	mov	qword ptr [rbp - 0x10], rax
0x4000fb:	mov	rax, qword ptr [rbp - 0x10]
0x4000ff:	mov	rax, qword ptr [rax]
0x400102:	mov	rcx, qword ptr [rax]
0x400105:	mov	rdx, qword ptr [rbp - 0x18]
0x400109:	mov	rax, qword ptr [rbp - 0x10]
0x40010d:	mov	rsi, rdx
0x400110:	mov	rdi, rax
0x400113:	call	rcx
<Block for 0x400115, 16 bytes>
0x400115:	nop	
0x400116:	mov	rax, qword ptr [rbp - 8]
0x40011a:	xor	rax, qword ptr fs:[0x28]
0x400123:	je	0x40012a
<Block for 0x40012a, 2 bytes>
0x40012a:	leave	
0x40012b:	ret	
<Block for 0x400125, 5 bytes>
0x400125:	call	0x500018
