<Block for 0x400105, 40 bytes>
0x400105:	endbr64	
0x400109:	push	rbp
0x40010a:	mov	rbp, rsp
0x40010d:	push	rbx
0x40010e:	sub	rsp, 0x58
0x400112:	mov	rax, qword ptr fs:[0x28]
0x40011b:	mov	qword ptr [rbp - 0x18], rax
0x40011f:	xor	eax, eax
0x400121:	lea	rax, [rbp - 0x50]
0x400125:	mov	rdi, rax
0x400128:	call	0x400438
<Block for 0x40012d, 26 bytes>
0x40012d:	mov	dword ptr [rbp - 0x30], 0x64
0x400134:	lea	rdx, [rbp - 0x30]
0x400138:	lea	rax, [rbp - 0x50]
0x40013c:	mov	rsi, rdx
0x40013f:	mov	rdi, rax
0x400142:	call	0x400542
<Block for 0x400147, 26 bytes>
0x400147:	mov	dword ptr [rbp - 0x30], 0xc8
0x40014e:	lea	rdx, [rbp - 0x30]
0x400152:	lea	rax, [rbp - 0x50]
0x400156:	mov	rsi, rdx
0x400159:	mov	rdi, rax
0x40015c:	call	0x400542
<Block for 0x400161, 48 bytes>
0x400161:	lea	rax, [rip + 0xffec0]
0x400168:	mov	qword ptr [rbp - 0x60], rax
0x40016c:	lea	rax, [rbp - 0x60]
0x400170:	mov	qword ptr [rbp - 0x58], rax
0x400174:	mov	rax, qword ptr [rbp - 0x58]
0x400178:	mov	rax, qword ptr [rax]
0x40017b:	mov	rbx, qword ptr [rax]
0x40017e:	lea	rdx, [rbp - 0x50]
0x400182:	lea	rax, [rbp - 0x30]
0x400186:	mov	rsi, rdx
0x400189:	mov	rdi, rax
0x40018c:	call	0x400590
<Block for 0x400191, 16 bytes>
0x400191:	lea	rdx, [rbp - 0x30]
0x400195:	mov	rax, qword ptr [rbp - 0x58]
0x400199:	mov	rsi, rdx
0x40019c:	mov	rdi, rax
0x40019f:	call	rbx
<Block for 0x4001a1, 12 bytes>
0x4001a1:	lea	rax, [rbp - 0x30]
0x4001a5:	mov	rdi, rax
0x4001a8:	call	0x400458
<Block for 0x4001ad, 12 bytes>
0x4001ad:	lea	rax, [rbp - 0x50]
0x4001b1:	mov	rdi, rax
0x4001b4:	call	0x400458
<Block for 0x4001b9, 16 bytes>
0x4001b9:	nop	
0x4001ba:	mov	rax, qword ptr [rbp - 0x18]
0x4001be:	xor	rax, qword ptr fs:[0x28]
0x4001c7:	je	0x400203
<Block for 0x400203, 7 bytes>
0x400203:	add	rsp, 0x58
0x400207:	pop	rbx
0x400208:	pop	rbp
0x400209:	ret	
<Block for 0x4001c9, 2 bytes>
0x4001c9:	jmp	0x4001fe
<Block for 0x4001fe, 5 bytes>
0x4001fe:	call	0x500010
