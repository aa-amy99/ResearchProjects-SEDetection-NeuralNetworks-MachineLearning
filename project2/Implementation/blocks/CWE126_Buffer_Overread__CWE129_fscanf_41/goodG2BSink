<Block for 0x4000e3, 76 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0x40
0x4000ef:	mov	dword ptr [rbp - 0x34], edi
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	mov	qword ptr [rbp - 0x30], 0
0x400109:	mov	qword ptr [rbp - 0x28], 0
0x400111:	mov	qword ptr [rbp - 0x20], 0
0x400119:	mov	qword ptr [rbp - 0x18], 0
0x400121:	mov	qword ptr [rbp - 0x10], 0
0x400129:	cmp	dword ptr [rbp - 0x34], 0
0x40012d:	js	0x400141
<Block for 0x400141, 12 bytes>
0x400141:	lea	rdi, [rip + 0x150]
0x400148:	call	0x500008
<Block for 0x40012f, 16 bytes>
0x40012f:	mov	eax, dword ptr [rbp - 0x34]
0x400132:	cdqe	
0x400134:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400138:	mov	edi, eax
0x40013a:	call	0x500000
<Block for 0x40014d, 16 bytes>
0x40014d:	nop	
0x40014e:	mov	rax, qword ptr [rbp - 8]
0x400152:	xor	rax, qword ptr fs:[0x28]
0x40015b:	je	0x400162
<Block for 0x40013f, 2 bytes>
0x40013f:	jmp	0x40014d
<Block for 0x400162, 2 bytes>
0x400162:	leave	
0x400163:	ret	
<Block for 0x40015d, 5 bytes>
0x40015d:	call	0x500010
