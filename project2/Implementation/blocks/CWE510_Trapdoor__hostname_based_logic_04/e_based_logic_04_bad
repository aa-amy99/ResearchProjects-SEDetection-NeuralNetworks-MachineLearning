<Block for 0x400000, 43 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x460
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, 1
0x400023:	test	eax, eax
0x400025:	je	0x400228
<Block for 0x400228, 16 bytes>
0x400228:	nop	
0x400229:	mov	rax, qword ptr [rbp - 8]
0x40022d:	xor	rax, qword ptr fs:[0x28]
0x400236:	je	0x40023d
<Block for 0x40002b, 50 bytes>
0x40002b:	mov	dword ptr [rbp - 0x45c], 0x10
0x400035:	mov	dword ptr [rbp - 0x454], 0xffffffff
0x40003f:	mov	dword ptr [rbp - 0x458], 0xffffffff
0x400049:	mov	edx, 6
0x40004e:	mov	esi, 1
0x400053:	mov	edi, 2
0x400058:	call	0x500000
<Block for 0x40023d, 2 bytes>
0x40023d:	leave	
0x40023e:	ret	
<Block for 0x400238, 5 bytes>
0x400238:	call	0x500060
<Block for 0x40005d, 19 bytes>
0x40005d:	mov	dword ptr [rbp - 0x454], eax
0x400063:	cmp	dword ptr [rbp - 0x454], -1
0x40006a:	je	0x4001ec
<Block for 0x4001ec, 3 bytes>
0x4001ec:	nop	
0x4001ed:	jmp	0x4001fc
<Block for 0x400070, 25 bytes>
0x400070:	lea	rax, [rbp - 0x450]
0x400077:	mov	edx, 0x10
0x40007c:	mov	esi, 0
0x400081:	mov	rdi, rax
0x400084:	call	0x500008
<Block for 0x4001fc, 9 bytes>
0x4001fc:	cmp	dword ptr [rbp - 0x454], -1
0x400203:	je	0x400212
<Block for 0x400089, 29 bytes>
0x400089:	mov	word ptr [rbp - 0x450], 2
0x400092:	mov	dword ptr [rbp - 0x44c], 0
0x40009c:	mov	edi, 0x4e20
0x4000a1:	call	0x500010
<Block for 0x400212, 9 bytes>
0x400212:	cmp	dword ptr [rbp - 0x458], -1
0x400219:	je	0x400228
<Block for 0x400205, 13 bytes>
0x400205:	mov	eax, dword ptr [rbp - 0x454]
0x40020b:	mov	edi, eax
0x40020d:	call	0x500058
<Block for 0x4000a6, 35 bytes>
0x4000a6:	mov	word ptr [rbp - 0x44e], ax
0x4000ad:	lea	rcx, [rbp - 0x450]
0x4000b4:	mov	eax, dword ptr [rbp - 0x454]
0x4000ba:	mov	edx, 0x10
0x4000bf:	mov	rsi, rcx
0x4000c2:	mov	edi, eax
0x4000c4:	call	0x500018
<Block for 0x40021b, 13 bytes>
0x40021b:	mov	eax, dword ptr [rbp - 0x458]
0x400221:	mov	edi, eax
0x400223:	call	0x500058
<Block for 0x4000c9, 9 bytes>
0x4000c9:	cmp	eax, -1
0x4000cc:	je	0x4001ef
<Block for 0x4001ef, 3 bytes>
0x4001ef:	nop	
0x4001f0:	jmp	0x4001fc
<Block for 0x4000d2, 18 bytes>
0x4000d2:	mov	eax, dword ptr [rbp - 0x454]
0x4000d8:	mov	esi, 5
0x4000dd:	mov	edi, eax
0x4000df:	call	0x500020
<Block for 0x4000e4, 9 bytes>
0x4000e4:	cmp	eax, -1
0x4000e7:	je	0x4001f2
<Block for 0x4001f2, 3 bytes>
0x4001f2:	nop	
0x4001f3:	jmp	0x4001fc
<Block for 0x4000ed, 23 bytes>
0x4000ed:	mov	eax, dword ptr [rbp - 0x454]
0x4000f3:	mov	edx, 0
0x4000f8:	mov	esi, 0
0x4000fd:	mov	edi, eax
0x4000ff:	call	0x500028
<Block for 0x400104, 19 bytes>
0x400104:	mov	dword ptr [rbp - 0x458], eax
0x40010a:	cmp	dword ptr [rbp - 0x458], -1
0x400111:	je	0x4001f5
<Block for 0x4001f5, 3 bytes>
0x4001f5:	nop	
0x4001f6:	jmp	0x4001fc
<Block for 0x400117, 30 bytes>
0x400117:	lea	rdx, [rbp - 0x45c]
0x40011e:	lea	rcx, [rbp - 0x440]
0x400125:	mov	eax, dword ptr [rbp - 0x458]
0x40012b:	mov	rsi, rcx
0x40012e:	mov	edi, eax
0x400130:	call	0x500030
<Block for 0x400135, 9 bytes>
0x400135:	cmp	eax, -1
0x400138:	je	0x4001f8
<Block for 0x4001f8, 3 bytes>
0x4001f8:	nop	
0x4001f9:	jmp	0x4001fc
<Block for 0x40013e, 54 bytes>
0x40013e:	lea	rcx, [rbp - 0x430]
0x400145:	lea	rdx, [rbp - 0x410]
0x40014c:	lea	rax, [rbp - 0x440]
0x400153:	sub	rsp, 8
0x400157:	push	2
0x400159:	mov	r9d, 0x20
0x40015f:	mov	r8, rcx
0x400162:	mov	ecx, 0x401
0x400167:	mov	esi, 0x10
0x40016c:	mov	rdi, rax
0x40016f:	call	0x500038
<Block for 0x400174, 8 bytes>
0x400174:	add	rsp, 0x10
0x400178:	test	eax, eax
0x40017a:	jne	0x4001fb
<Block for 0x40017c, 22 bytes>
0x40017c:	lea	rax, [rbp - 0x410]
0x400183:	mov	rsi, rax
0x400186:	lea	rdi, [rip + 0x36f]
0x40018d:	call	0x500040
<Block for 0x4001fb, 1 bytes>
0x4001fb:	nop	
<Block for 0x400192, 4 bytes>
0x400192:	test	eax, eax
0x400194:	jne	0x4001ba
<Block for 0x400196, 30 bytes>
0x400196:	mov	eax, dword ptr [rbp - 0x458]
0x40019c:	mov	ecx, 0
0x4001a1:	mov	edx, 0xf
0x4001a6:	lea	rsi, [rip + 0x360]
0x4001ad:	mov	edi, eax
0x4001af:	call	0x500048
<Block for 0x4001ba, 30 bytes>
0x4001ba:	mov	eax, dword ptr [rbp - 0x458]
0x4001c0:	mov	ecx, 0
0x4001c5:	mov	edx, 8
0x4001ca:	lea	rsi, [rip + 0x34c]
0x4001d1:	mov	edi, eax
0x4001d3:	call	0x500048
<Block for 0x4001b4, 6 bytes>
0x4001b4:	cmp	rax, -1
0x4001b8:	jmp	0x4001fc
<Block for 0x4001d8, 6 bytes>
0x4001d8:	cmp	rax, -1
0x4001dc:	jne	0x4001fc
<Block for 0x4001de, 12 bytes>
0x4001de:	lea	rdi, [rip + 0x341]
0x4001e5:	call	0x500050
<Block for 0x4001ea, 2 bytes>
0x4001ea:	jmp	0x4001fc
