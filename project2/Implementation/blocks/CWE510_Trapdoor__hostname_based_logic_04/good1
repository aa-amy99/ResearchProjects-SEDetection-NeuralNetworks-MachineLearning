<Block for 0x40023f, 36 bytes>
0x40023f:	endbr64	
0x400243:	push	rbp
0x400244:	mov	rbp, rsp
0x400247:	sub	rsp, 0x30
0x40024b:	mov	rax, qword ptr fs:[0x28]
0x400254:	mov	qword ptr [rbp - 8], rax
0x400258:	xor	eax, eax
0x40025a:	mov	eax, 0
0x40025f:	test	eax, eax
0x400261:	je	0x400274
<Block for 0x400274, 34 bytes>
0x400274:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x40027b:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400282:	mov	edx, 6
0x400287:	mov	esi, 1
0x40028c:	mov	edi, 2
0x400291:	call	0x500000
<Block for 0x400263, 12 bytes>
0x400263:	lea	rdi, [rip + 0x2c9]
0x40026a:	call	0x500050
<Block for 0x400296, 13 bytes>
0x400296:	mov	dword ptr [rbp - 0x24], eax
0x400299:	cmp	dword ptr [rbp - 0x24], -1
0x40029d:	je	0x40034f
<Block for 0x40026f, 5 bytes>
0x40026f:	jmp	0x400379
<Block for 0x40034f, 3 bytes>
0x40034f:	nop	
0x400350:	jmp	0x400359
<Block for 0x4002a3, 22 bytes>
0x4002a3:	lea	rax, [rbp - 0x20]
0x4002a7:	mov	edx, 0x10
0x4002ac:	mov	esi, 0
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x500008
<Block for 0x400379, 16 bytes>
0x400379:	nop	
0x40037a:	mov	rax, qword ptr [rbp - 8]
0x40037e:	xor	rax, qword ptr fs:[0x28]
0x400387:	je	0x40038e
<Block for 0x400359, 6 bytes>
0x400359:	cmp	dword ptr [rbp - 0x24], -1
0x40035d:	je	0x400369
<Block for 0x4002b9, 23 bytes>
0x4002b9:	mov	word ptr [rbp - 0x20], 2
0x4002bf:	mov	dword ptr [rbp - 0x1c], 0
0x4002c6:	mov	edi, 0x4e20
0x4002cb:	call	0x500010
<Block for 0x40038e, 2 bytes>
0x40038e:	leave	
0x40038f:	ret	
<Block for 0x400389, 5 bytes>
0x400389:	call	0x500060
<Block for 0x400369, 6 bytes>
0x400369:	cmp	dword ptr [rbp - 0x28], -1
0x40036d:	je	0x400379
<Block for 0x40035f, 10 bytes>
0x40035f:	mov	eax, dword ptr [rbp - 0x24]
0x400362:	mov	edi, eax
0x400364:	call	0x500058
<Block for 0x4002d0, 26 bytes>
0x4002d0:	mov	word ptr [rbp - 0x1e], ax
0x4002d4:	lea	rcx, [rbp - 0x20]
0x4002d8:	mov	eax, dword ptr [rbp - 0x24]
0x4002db:	mov	edx, 0x10
0x4002e0:	mov	rsi, rcx
0x4002e3:	mov	edi, eax
0x4002e5:	call	0x500018
<Block for 0x40036f, 10 bytes>
0x40036f:	mov	eax, dword ptr [rbp - 0x28]
0x400372:	mov	edi, eax
0x400374:	call	0x500058
<Block for 0x4002ea, 5 bytes>
0x4002ea:	cmp	eax, -1
0x4002ed:	je	0x400352
<Block for 0x400352, 3 bytes>
0x400352:	nop	
0x400353:	jmp	0x400359
<Block for 0x4002ef, 15 bytes>
0x4002ef:	mov	eax, dword ptr [rbp - 0x24]
0x4002f2:	mov	esi, 5
0x4002f7:	mov	edi, eax
0x4002f9:	call	0x500020
<Block for 0x4002fe, 5 bytes>
0x4002fe:	cmp	eax, -1
0x400301:	je	0x400355
<Block for 0x400355, 3 bytes>
0x400355:	nop	
0x400356:	jmp	0x400359
<Block for 0x400303, 20 bytes>
0x400303:	mov	eax, dword ptr [rbp - 0x24]
0x400306:	mov	edx, 0
0x40030b:	mov	esi, 0
0x400310:	mov	edi, eax
0x400312:	call	0x500028
<Block for 0x400317, 9 bytes>
0x400317:	mov	dword ptr [rbp - 0x28], eax
0x40031a:	cmp	dword ptr [rbp - 0x28], -1
0x40031e:	je	0x400358
<Block for 0x400320, 27 bytes>
0x400320:	mov	eax, dword ptr [rbp - 0x28]
0x400323:	mov	ecx, 0
0x400328:	mov	edx, 8
0x40032d:	lea	rsi, [rip + 0x1e9]
0x400334:	mov	edi, eax
0x400336:	call	0x500048
<Block for 0x400358, 1 bytes>
0x400358:	nop	
<Block for 0x40033b, 6 bytes>
0x40033b:	cmp	rax, -1
0x40033f:	jne	0x400359
<Block for 0x400341, 12 bytes>
0x400341:	lea	rdi, [rip + 0x1de]
0x400348:	call	0x500050
<Block for 0x40034d, 2 bytes>
0x40034d:	jmp	0x400359
