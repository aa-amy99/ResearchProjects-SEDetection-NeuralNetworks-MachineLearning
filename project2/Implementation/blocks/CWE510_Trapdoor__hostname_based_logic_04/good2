<Block for 0x400390, 40 bytes>
0x400390:	endbr64	
0x400394:	push	rbp
0x400395:	mov	rbp, rsp
0x400398:	sub	rsp, 0x30
0x40039c:	mov	rax, qword ptr fs:[0x28]
0x4003a5:	mov	qword ptr [rbp - 8], rax
0x4003a9:	xor	eax, eax
0x4003ab:	mov	eax, 1
0x4003b0:	test	eax, eax
0x4003b2:	je	0x4004bd
<Block for 0x4004bd, 16 bytes>
0x4004bd:	nop	
0x4004be:	mov	rax, qword ptr [rbp - 8]
0x4004c2:	xor	rax, qword ptr fs:[0x28]
0x4004cb:	je	0x4004d2
<Block for 0x4003b8, 34 bytes>
0x4003b8:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4003bf:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x4003c6:	mov	edx, 6
0x4003cb:	mov	esi, 1
0x4003d0:	mov	edi, 2
0x4003d5:	call	0x500000
<Block for 0x4004d2, 2 bytes>
0x4004d2:	leave	
0x4004d3:	ret	
<Block for 0x4004cd, 5 bytes>
0x4004cd:	call	0x500060
<Block for 0x4003da, 13 bytes>
0x4003da:	mov	dword ptr [rbp - 0x24], eax
0x4003dd:	cmp	dword ptr [rbp - 0x24], -1
0x4003e1:	je	0x400493
<Block for 0x400493, 3 bytes>
0x400493:	nop	
0x400494:	jmp	0x40049d
<Block for 0x4003e7, 22 bytes>
0x4003e7:	lea	rax, [rbp - 0x20]
0x4003eb:	mov	edx, 0x10
0x4003f0:	mov	esi, 0
0x4003f5:	mov	rdi, rax
0x4003f8:	call	0x500008
<Block for 0x40049d, 6 bytes>
0x40049d:	cmp	dword ptr [rbp - 0x24], -1
0x4004a1:	je	0x4004ad
<Block for 0x4003fd, 23 bytes>
0x4003fd:	mov	word ptr [rbp - 0x20], 2
0x400403:	mov	dword ptr [rbp - 0x1c], 0
0x40040a:	mov	edi, 0x4e20
0x40040f:	call	0x500010
<Block for 0x4004ad, 6 bytes>
0x4004ad:	cmp	dword ptr [rbp - 0x28], -1
0x4004b1:	je	0x4004bd
<Block for 0x4004a3, 10 bytes>
0x4004a3:	mov	eax, dword ptr [rbp - 0x24]
0x4004a6:	mov	edi, eax
0x4004a8:	call	0x500058
<Block for 0x400414, 26 bytes>
0x400414:	mov	word ptr [rbp - 0x1e], ax
0x400418:	lea	rcx, [rbp - 0x20]
0x40041c:	mov	eax, dword ptr [rbp - 0x24]
0x40041f:	mov	edx, 0x10
0x400424:	mov	rsi, rcx
0x400427:	mov	edi, eax
0x400429:	call	0x500018
<Block for 0x4004b3, 10 bytes>
0x4004b3:	mov	eax, dword ptr [rbp - 0x28]
0x4004b6:	mov	edi, eax
0x4004b8:	call	0x500058
<Block for 0x40042e, 5 bytes>
0x40042e:	cmp	eax, -1
0x400431:	je	0x400496
<Block for 0x400496, 3 bytes>
0x400496:	nop	
0x400497:	jmp	0x40049d
<Block for 0x400433, 15 bytes>
0x400433:	mov	eax, dword ptr [rbp - 0x24]
0x400436:	mov	esi, 5
0x40043b:	mov	edi, eax
0x40043d:	call	0x500020
<Block for 0x400442, 5 bytes>
0x400442:	cmp	eax, -1
0x400445:	je	0x400499
<Block for 0x400499, 3 bytes>
0x400499:	nop	
0x40049a:	jmp	0x40049d
<Block for 0x400447, 20 bytes>
0x400447:	mov	eax, dword ptr [rbp - 0x24]
0x40044a:	mov	edx, 0
0x40044f:	mov	esi, 0
0x400454:	mov	edi, eax
0x400456:	call	0x500028
<Block for 0x40045b, 9 bytes>
0x40045b:	mov	dword ptr [rbp - 0x28], eax
0x40045e:	cmp	dword ptr [rbp - 0x28], -1
0x400462:	je	0x40049c
<Block for 0x400464, 27 bytes>
0x400464:	mov	eax, dword ptr [rbp - 0x28]
0x400467:	mov	ecx, 0
0x40046c:	mov	edx, 8
0x400471:	lea	rsi, [rip + 0xa5]
0x400478:	mov	edi, eax
0x40047a:	call	0x500048
<Block for 0x40049c, 1 bytes>
0x40049c:	nop	
<Block for 0x40047f, 6 bytes>
0x40047f:	cmp	rax, -1
0x400483:	jne	0x40049d
<Block for 0x400485, 12 bytes>
0x400485:	lea	rdi, [rip + 0x9a]
0x40048c:	call	0x500050
<Block for 0x400491, 2 bytes>
0x400491:	jmp	0x40049d
