<Block for 0x4001bc, 85 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	push	rbx
0x4001c5:	sub	rsp, 0x88
0x4001cc:	mov	rax, qword ptr fs:[0x28]
0x4001d5:	mov	qword ptr [rbp - 0x18], rax
0x4001d9:	xor	eax, eax
0x4001db:	mov	eax, 0x10
0x4001e0:	sub	rax, 1
0x4001e4:	add	rax, 0x6c
0x4001e8:	mov	esi, 0x10
0x4001ed:	mov	edx, 0
0x4001f2:	div	rsi
0x4001f5:	imul	rax, rax, 0x10
0x4001f9:	mov	rdx, rax
0x4001fc:	and	rdx, 0xfffffffffffff000
0x400203:	mov	rbx, rsp
0x400206:	sub	rbx, rdx
0x400209:	mov	rdx, rbx
0x40020c:	cmp	rsp, rdx
0x40020f:	je	0x400223
<Block for 0x400223, 26 bytes>
0x400223:	mov	rdx, rax
0x400226:	and	edx, 0xfff
0x40022c:	sub	rsp, rdx
0x40022f:	mov	rdx, rax
0x400232:	and	edx, 0xfff
0x400238:	test	rdx, rdx
0x40023b:	je	0x40024d
<Block for 0x400211, 18 bytes>
0x400211:	sub	rsp, 0x1000
0x400218:	or	qword ptr [rsp + 0xff8], 0
0x400221:	jmp	0x40020c
<Block for 0x40024d, 47 bytes>
0x40024d:	mov	rax, rsp
0x400250:	add	rax, 0xf
0x400254:	shr	rax, 4
0x400258:	shl	rax, 4
0x40025c:	mov	qword ptr [rbp - 0x88], rax
0x400263:	mov	rax, qword ptr [rbp - 0x88]
0x40026a:	mov	edx, 0x63
0x40026f:	mov	esi, 0x41
0x400274:	mov	rdi, rax
0x400277:	call	0x500000
<Block for 0x40023d, 63 bytes>
0x40023d:	and	eax, 0xfff
0x400242:	sub	rax, 8
0x400246:	add	rax, rsp
0x400249:	or	qword ptr [rax], 0
0x40024d:	mov	rax, rsp
0x400250:	add	rax, 0xf
0x400254:	shr	rax, 4
0x400258:	shl	rax, 4
0x40025c:	mov	qword ptr [rbp - 0x88], rax
0x400263:	mov	rax, qword ptr [rbp - 0x88]
0x40026a:	mov	edx, 0x63
0x40026f:	mov	esi, 0x41
0x400274:	mov	rdi, rax
0x400277:	call	0x500000
<Block for 0x40020c, 5 bytes>
0x40020c:	cmp	rsp, rdx
0x40020f:	je	0x400223
<Block for 0x40027c, 24 bytes>
0x40027c:	mov	rax, qword ptr [rbp - 0x88]
0x400283:	add	rax, 0x63
0x400287:	mov	byte ptr [rax], 0
0x40028a:	mov	eax, 0
0x40028f:	call	0x500008
<Block for 0x400294, 4 bytes>
0x400294:	test	eax, eax
0x400296:	je	0x4002a8
<Block for 0x4002a8, 36 bytes>
0x4002a8:	mov	rax, qword ptr [rbp - 0x88]
0x4002af:	mov	qword ptr [rbp - 0x90], rax
0x4002b6:	lea	rax, [rbp - 0x80]
0x4002ba:	mov	edx, 0x63
0x4002bf:	mov	esi, 0x43
0x4002c4:	mov	rdi, rax
0x4002c7:	call	0x500000
<Block for 0x400298, 16 bytes>
0x400298:	mov	rax, qword ptr [rbp - 0x88]
0x40029f:	mov	qword ptr [rbp - 0x90], rax
0x4002a6:	jmp	0x4002b6
<Block for 0x4002cc, 141 bytes>
0x4002cc:	mov	byte ptr [rbp - 0x1d], 0
0x4002d0:	mov	rax, qword ptr [rbp - 0x90]
0x4002d7:	mov	rcx, qword ptr [rbp - 0x80]
0x4002db:	mov	rbx, qword ptr [rbp - 0x78]
0x4002df:	mov	qword ptr [rax], rcx
0x4002e2:	mov	qword ptr [rax + 8], rbx
0x4002e6:	mov	rcx, qword ptr [rbp - 0x70]
0x4002ea:	mov	rbx, qword ptr [rbp - 0x68]
0x4002ee:	mov	qword ptr [rax + 0x10], rcx
0x4002f2:	mov	qword ptr [rax + 0x18], rbx
0x4002f6:	mov	rcx, qword ptr [rbp - 0x60]
0x4002fa:	mov	rbx, qword ptr [rbp - 0x58]
0x4002fe:	mov	qword ptr [rax + 0x20], rcx
0x400302:	mov	qword ptr [rax + 0x28], rbx
0x400306:	mov	rcx, qword ptr [rbp - 0x50]
0x40030a:	mov	rbx, qword ptr [rbp - 0x48]
0x40030e:	mov	qword ptr [rax + 0x30], rcx
0x400312:	mov	qword ptr [rax + 0x38], rbx
0x400316:	mov	rcx, qword ptr [rbp - 0x40]
0x40031a:	mov	rbx, qword ptr [rbp - 0x38]
0x40031e:	mov	qword ptr [rax + 0x40], rcx
0x400322:	mov	qword ptr [rax + 0x48], rbx
0x400326:	mov	rcx, qword ptr [rbp - 0x30]
0x40032a:	mov	rbx, qword ptr [rbp - 0x28]
0x40032e:	mov	qword ptr [rax + 0x50], rcx
0x400332:	mov	qword ptr [rax + 0x58], rbx
0x400336:	mov	edx, dword ptr [rbp - 0x20]
0x400339:	mov	dword ptr [rax + 0x60], edx
0x40033c:	mov	rax, qword ptr [rbp - 0x90]
0x400343:	add	rax, 0x63
0x400347:	mov	byte ptr [rax], 0
0x40034a:	mov	rax, qword ptr [rbp - 0x90]
0x400351:	mov	rdi, rax
0x400354:	call	0x500010
<Block for 0x4002b6, 22 bytes>
0x4002b6:	lea	rax, [rbp - 0x80]
0x4002ba:	mov	edx, 0x63
0x4002bf:	mov	esi, 0x43
0x4002c4:	mov	rdi, rax
0x4002c7:	call	0x500000
<Block for 0x400359, 16 bytes>
0x400359:	nop	
0x40035a:	mov	rax, qword ptr [rbp - 0x18]
0x40035e:	xor	rax, qword ptr fs:[0x28]
0x400367:	je	0x40036e
<Block for 0x40036e, 6 bytes>
0x40036e:	mov	rbx, qword ptr [rbp - 8]
0x400372:	leave	
0x400373:	ret	
<Block for 0x400369, 5 bytes>
0x400369:	call	0x500018
