<Block for 0x400000, 94 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x100
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xf8], rax
0x40002c:	mov	rax, qword ptr [rbp - 0xf8]
0x400033:	mov	qword ptr [rbp - 0xf0], rax
0x40003a:	mov	rax, qword ptr [rbp - 0xf0]
0x400041:	mov	qword ptr [rbp - 0xe8], rax
0x400048:	lea	rax, [rbp - 0x70]
0x40004c:	mov	edx, 0x63
0x400051:	mov	esi, 0x43
0x400056:	mov	rdi, rax
0x400059:	call	0x500000
<Block for 0x40005e, 26 bytes>
0x40005e:	mov	byte ptr [rbp - 0xd], 0
0x400062:	lea	rdx, [rbp - 0x70]
0x400066:	mov	rax, qword ptr [rbp - 0xe8]
0x40006d:	mov	rsi, rdx
0x400070:	mov	rdi, rax
0x400073:	call	0x500008
<Block for 0x400078, 15 bytes>
0x400078:	mov	rax, qword ptr [rbp - 0xe8]
0x40007f:	mov	rdi, rax
0x400082:	call	0x500010
<Block for 0x400087, 16 bytes>
0x400087:	nop	
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	xor	rax, qword ptr fs:[0x28]
0x400095:	je	0x40009c
<Block for 0x40009c, 2 bytes>
0x40009c:	leave	
0x40009d:	ret	
<Block for 0x400097, 5 bytes>
0x400097:	call	0x500018
