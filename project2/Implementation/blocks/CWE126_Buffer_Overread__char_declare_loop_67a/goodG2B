<Block for 0x400097, 55 bytes>
0x400097:	endbr64	
0x40009b:	push	rbp
0x40009c:	mov	rbp, rsp
0x40009f:	sub	rsp, 0xc0
0x4000a6:	mov	rax, qword ptr fs:[0x28]
0x4000af:	mov	qword ptr [rbp - 8], rax
0x4000b3:	xor	eax, eax
0x4000b5:	lea	rax, [rbp - 0xb0]
0x4000bc:	mov	edx, 0x31
0x4000c1:	mov	esi, 0x41
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x500000
<Block for 0x4000ce, 26 bytes>
0x4000ce:	mov	byte ptr [rbp - 0x7f], 0
0x4000d2:	lea	rax, [rbp - 0x70]
0x4000d6:	mov	edx, 0x63
0x4000db:	mov	esi, 0x41
0x4000e0:	mov	rdi, rax
0x4000e3:	call	0x500000
<Block for 0x4000e8, 44 bytes>
0x4000e8:	mov	byte ptr [rbp - 0xd], 0
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	mov	qword ptr [rbp - 0xb8], rax
0x4000f7:	mov	rax, qword ptr [rbp - 0xb8]
0x4000fe:	mov	qword ptr [rbp - 0xc0], rax
0x400105:	mov	rax, qword ptr [rbp - 0xc0]
0x40010c:	mov	rdi, rax
0x40010f:	call	0x500018
<Block for 0x400114, 16 bytes>
0x400114:	nop	
0x400115:	mov	rax, qword ptr [rbp - 8]
0x400119:	xor	rax, qword ptr fs:[0x28]
0x400122:	je	0x400129
<Block for 0x400129, 2 bytes>
0x400129:	leave	
0x40012a:	ret	
<Block for 0x400124, 5 bytes>
0x400124:	call	0x500010
