<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002ca
<Block for 0x400028, 48 bytes>
0x400028:	mov	dword ptr [rbp - 0x64], 0x64
0x40002f:	mov	dword ptr [rbp - 0x58], 0
0x400036:	mov	dword ptr [rbp - 0x54], 0
0x40003d:	lea	rax, [rbp - 0x64]
0x400041:	mov	qword ptr [rbp - 0x60], rax
0x400045:	lea	rdx, [rbp - 0x60]
0x400049:	lea	rax, [rbp - 0x50]
0x40004d:	mov	rsi, rdx
0x400050:	mov	rdi, rax
0x400053:	call	0x4003c0
<Block for 0x400058, 19 bytes>
0x400058:	lea	rdx, [rbp - 0x60]
0x40005c:	lea	rax, [rbp - 0x50]
0x400060:	mov	rsi, rdx
0x400063:	mov	rdi, rax
0x400066:	call	0x4003c0
<Block for 0x40006b, 19 bytes>
0x40006b:	lea	rdx, [rbp - 0x60]
0x40006f:	lea	rax, [rbp - 0x50]
0x400073:	mov	rsi, rdx
0x400076:	mov	rdi, rax
0x400079:	call	0x4003c0
<Block for 0x40007e, 19 bytes>
0x40007e:	lea	rdx, [rbp - 0x50]
0x400082:	lea	rax, [rbp - 0x30]
0x400086:	mov	rsi, rdx
0x400089:	mov	rdi, rax
0x40008c:	call	0x4003fa
<Block for 0x400091, 12 bytes>
0x400091:	lea	rax, [rbp - 0x30]
0x400095:	mov	rdi, rax
0x400098:	call	0x500000
<Block for 0x40009d, 12 bytes>
0x40009d:	lea	rax, [rbp - 0x30]
0x4000a1:	mov	rdi, rax
0x4000a4:	call	0x4002ea
<Block for 0x4000a9, 12 bytes>
0x4000a9:	lea	rax, [rbp - 0x50]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x4002ea
<Block for 0x4000b5, 16 bytes>
0x4000b5:	nop	
0x4000b6:	mov	rax, qword ptr [rbp - 0x18]
0x4000ba:	xor	rax, qword ptr fs:[0x28]
0x4000c3:	je	0x4000ff
<Block for 0x4000ff, 7 bytes>
0x4000ff:	add	rsp, 0x68
0x400103:	pop	rbx
0x400104:	pop	rbp
0x400105:	ret	
<Block for 0x4000c5, 2 bytes>
0x4000c5:	jmp	0x4000fa
<Block for 0x4000fa, 5 bytes>
0x4000fa:	call	0x500010
