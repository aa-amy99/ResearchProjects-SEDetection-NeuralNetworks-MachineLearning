<Block for 0x40013b, 45 bytes>
0x40013b:	endbr64	
0x40013f:	push	rbp
0x400140:	mov	rbp, rsp
0x400143:	sub	rsp, 0x40
0x400147:	mov	rax, qword ptr fs:[0x28]
0x400150:	mov	qword ptr [rbp - 8], rax
0x400154:	xor	eax, eax
0x400156:	lea	rax, [rbp - 0x38]
0x40015a:	mov	qword ptr [rbp - 0x28], rax
0x40015e:	mov	edi, 0x64
0x400163:	call	0x500000
<Block for 0x400168, 13 bytes>
0x400168:	mov	qword ptr [rbp - 0x38], rax
0x40016c:	mov	rax, qword ptr [rbp - 0x38]
0x400170:	test	rax, rax
0x400173:	jne	0x40017f
<Block for 0x400175, 10 bytes>
0x400175:	mov	edi, 0xffffffff
0x40017a:	call	0x500008
<Block for 0x40017f, 19 bytes>
0x40017f:	mov	rax, qword ptr [rbp - 0x38]
0x400183:	mov	byte ptr [rax], 0
0x400186:	mov	rax, qword ptr [rbp - 0x38]
0x40018a:	mov	rdi, rax
0x40018d:	call	0x500010
<Block for 0x400192, 19 bytes>
0x400192:	mov	qword ptr [rbp - 0x20], rax
0x400196:	mov	eax, 0x64
0x40019b:	sub	rax, qword ptr [rbp - 0x20]
0x40019f:	cmp	rax, 1
0x4001a3:	jbe	0x40021d
<Block for 0x40021d, 31 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x28]
0x400221:	mov	rax, qword ptr [rax]
0x400224:	mov	qword ptr [rbp - 0x10], rax
0x400228:	mov	qword ptr [rbp - 0x30], 0
0x400230:	mov	rax, qword ptr [rbp - 0x10]
0x400234:	mov	rdi, rax
0x400237:	call	0x500010
<Block for 0x4001a5, 19 bytes>
0x4001a5:	lea	rsi, [rip + 0xf0]
0x4001ac:	lea	rdi, [rip + 0xeb]
0x4001b3:	call	0x500018
<Block for 0x40023c, 6 bytes>
0x40023c:	cmp	qword ptr [rbp - 0x30], rax
0x400240:	jae	0x400269
<Block for 0x4001b8, 11 bytes>
0x4001b8:	mov	qword ptr [rbp - 0x18], rax
0x4001bc:	cmp	qword ptr [rbp - 0x18], 0
0x4001c1:	je	0x40021d
<Block for 0x400242, 18 bytes>
0x400242:	mov	rdx, qword ptr [rbp - 0x10]
0x400246:	mov	rax, qword ptr [rbp - 0x30]
0x40024a:	add	rax, rdx
0x40024d:	movzx	eax, byte ptr [rax]
0x400250:	cmp	al, 0x53
0x400252:	jne	0x400262
<Block for 0x400269, 12 bytes>
0x400269:	mov	rax, qword ptr [rbp - 0x10]
0x40026d:	mov	rdi, rax
0x400270:	call	0x500038
<Block for 0x4001c3, 42 bytes>
0x4001c3:	mov	rax, qword ptr [rbp - 0x20]
0x4001c7:	mov	edx, 0x64
0x4001cc:	sub	edx, eax
0x4001ce:	mov	eax, edx
0x4001d0:	mov	esi, eax
0x4001d2:	mov	rdx, qword ptr [rbp - 0x38]
0x4001d6:	mov	rax, qword ptr [rbp - 0x20]
0x4001da:	lea	rcx, [rdx + rax]
0x4001de:	mov	rax, qword ptr [rbp - 0x18]
0x4001e2:	mov	rdx, rax
0x4001e5:	mov	rdi, rcx
0x4001e8:	call	0x500020
<Block for 0x400254, 12 bytes>
0x400254:	lea	rdi, [rip + 0x60]
0x40025b:	call	0x500028
<Block for 0x400262, 7 bytes>
0x400262:	add	qword ptr [rbp - 0x30], 1
0x400267:	jmp	0x400230
<Block for 0x400275, 16 bytes>
0x400275:	nop	
0x400276:	mov	rax, qword ptr [rbp - 8]
0x40027a:	xor	rax, qword ptr fs:[0x28]
0x400283:	je	0x40028a
<Block for 0x4001ed, 10 bytes>
0x4001ed:	test	rax, rax
0x4001f0:	sete	al
0x4001f3:	test	al, al
0x4001f5:	je	0x400211
<Block for 0x400260, 2 bytes>
0x400260:	jmp	0x400269
<Block for 0x400230, 12 bytes>
0x400230:	mov	rax, qword ptr [rbp - 0x10]
0x400234:	mov	rdi, rax
0x400237:	call	0x500010
<Block for 0x40028a, 2 bytes>
0x40028a:	leave	
0x40028b:	ret	
<Block for 0x400285, 5 bytes>
0x400285:	call	0x500040
<Block for 0x400211, 12 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x18]
0x400215:	mov	rdi, rax
0x400218:	call	0x500030
<Block for 0x4001f7, 12 bytes>
0x4001f7:	lea	rdi, [rip + 0xae]
0x4001fe:	call	0x500028
<Block for 0x400203, 26 bytes>
0x400203:	mov	rdx, qword ptr [rbp - 0x38]
0x400207:	mov	rax, qword ptr [rbp - 0x20]
0x40020b:	add	rax, rdx
0x40020e:	mov	byte ptr [rax], 0
0x400211:	mov	rax, qword ptr [rbp - 0x18]
0x400215:	mov	rdi, rax
0x400218:	call	0x500030
