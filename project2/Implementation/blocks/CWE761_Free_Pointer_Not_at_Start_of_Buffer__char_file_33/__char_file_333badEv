<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x20], rax
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 13 bytes>
0x40002d:	mov	qword ptr [rbp - 0x30], rax
0x400031:	mov	rax, qword ptr [rbp - 0x30]
0x400035:	test	rax, rax
0x400038:	jne	0x400044
<Block for 0x40003a, 10 bytes>
0x40003a:	mov	edi, 0xffffffff
0x40003f:	call	0x500008
<Block for 0x400044, 19 bytes>
0x400044:	mov	rax, qword ptr [rbp - 0x30]
0x400048:	mov	byte ptr [rax], 0
0x40004b:	mov	rax, qword ptr [rbp - 0x30]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
<Block for 0x400057, 19 bytes>
0x400057:	mov	qword ptr [rbp - 0x18], rax
0x40005b:	mov	eax, 0x64
0x400060:	sub	rax, qword ptr [rbp - 0x18]
0x400064:	cmp	rax, 1
0x400068:	jbe	0x4000e2
<Block for 0x4000e2, 22 bytes>
0x4000e2:	mov	rax, qword ptr [rbp - 0x20]
0x4000e6:	mov	rax, qword ptr [rax]
0x4000e9:	mov	qword ptr [rbp - 0x28], rax
0x4000ed:	mov	rax, qword ptr [rbp - 0x28]
0x4000f1:	movzx	eax, byte ptr [rax]
0x4000f4:	test	al, al
0x4000f6:	je	0x400118
<Block for 0x40006a, 19 bytes>
0x40006a:	lea	rsi, [rip + 0x22b]
0x400071:	lea	rdi, [rip + 0x226]
0x400078:	call	0x500018
<Block for 0x400118, 12 bytes>
0x400118:	mov	rax, qword ptr [rbp - 0x28]
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500038
<Block for 0x4000f8, 11 bytes>
0x4000f8:	mov	rax, qword ptr [rbp - 0x28]
0x4000fc:	movzx	eax, byte ptr [rax]
0x4000ff:	cmp	al, 0x53
0x400101:	jne	0x400111
<Block for 0x40007d, 11 bytes>
0x40007d:	mov	qword ptr [rbp - 0x10], rax
0x400081:	cmp	qword ptr [rbp - 0x10], 0
0x400086:	je	0x4000e2
<Block for 0x400124, 16 bytes>
0x400124:	nop	
0x400125:	mov	rax, qword ptr [rbp - 8]
0x400129:	xor	rax, qword ptr fs:[0x28]
0x400132:	je	0x400139
<Block for 0x400103, 12 bytes>
0x400103:	lea	rdi, [rip + 0x1b1]
0x40010a:	call	0x500028
<Block for 0x400111, 7 bytes>
0x400111:	add	qword ptr [rbp - 0x28], 1
0x400116:	jmp	0x4000ed
<Block for 0x400088, 42 bytes>
0x400088:	mov	rax, qword ptr [rbp - 0x18]
0x40008c:	mov	edx, 0x64
0x400091:	sub	edx, eax
0x400093:	mov	eax, edx
0x400095:	mov	esi, eax
0x400097:	mov	rdx, qword ptr [rbp - 0x30]
0x40009b:	mov	rax, qword ptr [rbp - 0x18]
0x40009f:	lea	rcx, [rdx + rax]
0x4000a3:	mov	rax, qword ptr [rbp - 0x10]
0x4000a7:	mov	rdx, rax
0x4000aa:	mov	rdi, rcx
0x4000ad:	call	0x500020
<Block for 0x400139, 2 bytes>
0x400139:	leave	
0x40013a:	ret	
<Block for 0x400134, 5 bytes>
0x400134:	call	0x500040
<Block for 0x40010f, 2 bytes>
0x40010f:	jmp	0x400118
<Block for 0x4000ed, 11 bytes>
0x4000ed:	mov	rax, qword ptr [rbp - 0x28]
0x4000f1:	movzx	eax, byte ptr [rax]
0x4000f4:	test	al, al
0x4000f6:	je	0x400118
<Block for 0x4000b2, 10 bytes>
0x4000b2:	test	rax, rax
0x4000b5:	sete	al
0x4000b8:	test	al, al
0x4000ba:	je	0x4000d6
<Block for 0x4000d6, 12 bytes>
0x4000d6:	mov	rax, qword ptr [rbp - 0x10]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500030
<Block for 0x4000bc, 12 bytes>
0x4000bc:	lea	rdi, [rip + 0x1e9]
0x4000c3:	call	0x500028
<Block for 0x4000c8, 26 bytes>
0x4000c8:	mov	rdx, qword ptr [rbp - 0x30]
0x4000cc:	mov	rax, qword ptr [rbp - 0x18]
0x4000d0:	add	rax, rdx
0x4000d3:	mov	byte ptr [rax], 0
0x4000d6:	mov	rax, qword ptr [rbp - 0x10]
0x4000da:	mov	rdi, rax
0x4000dd:	call	0x500030
