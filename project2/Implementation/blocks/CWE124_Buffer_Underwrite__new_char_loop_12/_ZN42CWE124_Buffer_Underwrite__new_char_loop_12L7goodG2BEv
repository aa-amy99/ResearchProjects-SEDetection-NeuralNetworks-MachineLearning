<Block for 0x400142, 46 bytes>
0x400142:	endbr64	
0x400146:	push	rbp
0x400147:	mov	rbp, rsp
0x40014a:	sub	rsp, 0x90
0x400151:	mov	rax, qword ptr fs:[0x28]
0x40015a:	mov	qword ptr [rbp - 8], rax
0x40015e:	xor	eax, eax
0x400160:	mov	qword ptr [rbp - 0x90], 0
0x40016b:	call	0x500000
<Block for 0x400170, 9 bytes>
0x400170:	test	eax, eax
0x400172:	setne	al
0x400175:	test	al, al
0x400177:	je	0x4001b5
<Block for 0x4001b5, 10 bytes>
0x4001b5:	mov	edi, 0x64
0x4001ba:	call	0x500008
<Block for 0x400179, 10 bytes>
0x400179:	mov	edi, 0x64
0x40017e:	call	0x500008
<Block for 0x4001bf, 26 bytes>
0x4001bf:	mov	qword ptr [rbp - 0x80], rax
0x4001c3:	mov	rax, qword ptr [rbp - 0x80]
0x4001c7:	mov	edx, 0x63
0x4001cc:	mov	esi, 0x41
0x4001d1:	mov	rdi, rax
0x4001d4:	call	0x500010
<Block for 0x400183, 26 bytes>
0x400183:	mov	qword ptr [rbp - 0x78], rax
0x400187:	mov	rax, qword ptr [rbp - 0x78]
0x40018b:	mov	edx, 0x63
0x400190:	mov	esi, 0x41
0x400195:	mov	rdi, rax
0x400198:	call	0x500010
<Block for 0x4001d9, 44 bytes>
0x4001d9:	mov	rax, qword ptr [rbp - 0x80]
0x4001dd:	add	rax, 0x63
0x4001e1:	mov	byte ptr [rax], 0
0x4001e4:	mov	rax, qword ptr [rbp - 0x80]
0x4001e8:	mov	qword ptr [rbp - 0x90], rax
0x4001ef:	lea	rax, [rbp - 0x70]
0x4001f3:	mov	edx, 0x63
0x4001f8:	mov	esi, 0x43
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500010
<Block for 0x40019d, 24 bytes>
0x40019d:	mov	rax, qword ptr [rbp - 0x78]
0x4001a1:	add	rax, 0x63
0x4001a5:	mov	byte ptr [rax], 0
0x4001a8:	mov	rax, qword ptr [rbp - 0x78]
0x4001ac:	mov	qword ptr [rbp - 0x90], rax
0x4001b3:	jmp	0x4001ef
<Block for 0x400205, 25 bytes>
0x400205:	mov	byte ptr [rbp - 0xd], 0
0x400209:	mov	qword ptr [rbp - 0x88], 0
0x400214:	cmp	qword ptr [rbp - 0x88], 0x63
0x40021c:	ja	0x40024c
<Block for 0x4001ef, 22 bytes>
0x4001ef:	lea	rax, [rbp - 0x70]
0x4001f3:	mov	edx, 0x63
0x4001f8:	mov	esi, 0x43
0x4001fd:	mov	rdi, rax
0x400200:	call	0x500010
<Block for 0x40021e, 46 bytes>
0x40021e:	mov	rdx, qword ptr [rbp - 0x90]
0x400225:	mov	rax, qword ptr [rbp - 0x88]
0x40022c:	add	rdx, rax
0x40022f:	lea	rcx, [rbp - 0x70]
0x400233:	mov	rax, qword ptr [rbp - 0x88]
0x40023a:	add	rax, rcx
0x40023d:	movzx	eax, byte ptr [rax]
0x400240:	mov	byte ptr [rdx], al
0x400242:	add	qword ptr [rbp - 0x88], 1
0x40024a:	jmp	0x400214
<Block for 0x40024c, 29 bytes>
0x40024c:	mov	rax, qword ptr [rbp - 0x90]
0x400253:	add	rax, 0x63
0x400257:	mov	byte ptr [rax], 0
0x40025a:	mov	rax, qword ptr [rbp - 0x90]
0x400261:	mov	rdi, rax
0x400264:	call	0x500018
<Block for 0x400214, 10 bytes>
0x400214:	cmp	qword ptr [rbp - 0x88], 0x63
0x40021c:	ja	0x40024c
<Block for 0x400269, 16 bytes>
0x400269:	nop	
0x40026a:	mov	rax, qword ptr [rbp - 8]
0x40026e:	xor	rax, qword ptr fs:[0x28]
0x400277:	je	0x40027e
<Block for 0x40027e, 2 bytes>
0x40027e:	leave	
0x40027f:	ret	
<Block for 0x400279, 5 bytes>
0x400279:	call	0x500020
