<Block for 0x4000cc, 81 bytes>
0x4000cc:	endbr64	
0x4000d0:	push	rbp
0x4000d1:	mov	rbp, rsp
0x4000d4:	sub	rsp, 0x20
0x4000d8:	mov	rax, qword ptr fs:[0x28]
0x4000e1:	mov	qword ptr [rbp - 8], rax
0x4000e5:	xor	eax, eax
0x4000e7:	mov	eax, 0x10
0x4000ec:	sub	rax, 1
0x4000f0:	add	rax, 9
0x4000f4:	mov	esi, 0x10
0x4000f9:	mov	edx, 0
0x4000fe:	div	rsi
0x400101:	imul	rax, rax, 0x10
0x400105:	mov	rdx, rax
0x400108:	and	rdx, 0xfffffffffffff000
0x40010f:	mov	rcx, rsp
0x400112:	sub	rcx, rdx
0x400115:	mov	rdx, rcx
0x400118:	cmp	rsp, rdx
0x40011b:	je	0x40012f
<Block for 0x40012f, 26 bytes>
0x40012f:	mov	rdx, rax
0x400132:	and	edx, 0xfff
0x400138:	sub	rsp, rdx
0x40013b:	mov	rdx, rax
0x40013e:	and	edx, 0xfff
0x400144:	test	rdx, rdx
0x400147:	je	0x400159
<Block for 0x40011d, 18 bytes>
0x40011d:	sub	rsp, 0x1000
0x400124:	or	qword ptr [rsp + 0xff8], 0
0x40012d:	jmp	0x400118
<Block for 0x400159, 54 bytes>
0x400159:	mov	rax, rsp
0x40015c:	add	rax, 0xf
0x400160:	shr	rax, 4
0x400164:	shl	rax, 4
0x400168:	mov	qword ptr [rbp - 0x10], rax
0x40016c:	mov	byte ptr [rbp - 0x12], 5
0x400170:	mov	rax, qword ptr [rbp - 0x10]
0x400174:	movzx	edx, byte ptr [rbp - 0x12]
0x400178:	mov	byte ptr [rax], dl
0x40017a:	mov	rax, qword ptr [rbp - 0x10]
0x40017e:	movzx	eax, byte ptr [rax]
0x400181:	mov	byte ptr [rbp - 0x11], al
0x400184:	movsx	eax, byte ptr [rbp - 0x11]
0x400188:	mov	edi, eax
0x40018a:	call	0x500000
<Block for 0x400149, 70 bytes>
0x400149:	and	eax, 0xfff
0x40014e:	sub	rax, 8
0x400152:	add	rax, rsp
0x400155:	or	qword ptr [rax], 0
0x400159:	mov	rax, rsp
0x40015c:	add	rax, 0xf
0x400160:	shr	rax, 4
0x400164:	shl	rax, 4
0x400168:	mov	qword ptr [rbp - 0x10], rax
0x40016c:	mov	byte ptr [rbp - 0x12], 5
0x400170:	mov	rax, qword ptr [rbp - 0x10]
0x400174:	movzx	edx, byte ptr [rbp - 0x12]
0x400178:	mov	byte ptr [rax], dl
0x40017a:	mov	rax, qword ptr [rbp - 0x10]
0x40017e:	movzx	eax, byte ptr [rax]
0x400181:	mov	byte ptr [rbp - 0x11], al
0x400184:	movsx	eax, byte ptr [rbp - 0x11]
0x400188:	mov	edi, eax
0x40018a:	call	0x500000
<Block for 0x400118, 5 bytes>
0x400118:	cmp	rsp, rdx
0x40011b:	je	0x40012f
<Block for 0x40018f, 16 bytes>
0x40018f:	nop	
0x400190:	mov	rax, qword ptr [rbp - 8]
0x400194:	xor	rax, qword ptr fs:[0x28]
0x40019d:	je	0x4001a4
<Block for 0x4001a4, 2 bytes>
0x4001a4:	leave	
0x4001a5:	ret	
<Block for 0x40019f, 5 bytes>
0x40019f:	call	0x500008
