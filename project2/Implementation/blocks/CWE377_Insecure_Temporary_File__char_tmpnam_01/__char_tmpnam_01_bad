<Block for 0x400000, 22 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	edi, 0
0x400011:	call	0x500000
<Block for 0x400016, 11 bytes>
0x400016:	mov	qword ptr [rbp - 8], rax
0x40001a:	cmp	qword ptr [rbp - 8], 0
0x40001f:	jne	0x40002b
<Block for 0x400021, 10 bytes>
0x400021:	mov	edi, 1
0x400026:	call	0x500008
<Block for 0x40002b, 12 bytes>
0x40002b:	mov	rax, qword ptr [rbp - 8]
0x40002f:	mov	rdi, rax
0x400032:	call	0x500010
<Block for 0x400037, 27 bytes>
0x400037:	mov	rax, qword ptr [rbp - 8]
0x40003b:	mov	edx, 0x180
0x400040:	mov	esi, 0x42
0x400045:	mov	rdi, rax
0x400048:	mov	eax, 0
0x40004d:	call	0x500018
<Block for 0x400052, 9 bytes>
0x400052:	mov	dword ptr [rbp - 0xc], eax
0x400055:	cmp	dword ptr [rbp - 0xc], -1
0x400059:	je	0x400071
<Block for 0x400071, 3 bytes>
0x400071:	nop	
0x400072:	leave	
0x400073:	ret	
<Block for 0x40005b, 12 bytes>
0x40005b:	lea	rdi, [rip + 0xae]
0x400062:	call	0x500010
<Block for 0x400067, 10 bytes>
0x400067:	mov	eax, dword ptr [rbp - 0xc]
0x40006a:	mov	edi, eax
0x40006c:	call	0x500020
