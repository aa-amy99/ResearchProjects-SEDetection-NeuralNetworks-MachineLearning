<Block for 0x400000, 58 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, rdi
0x40000f:	mov	rcx, rsi
0x400012:	mov	rdx, rcx
0x400015:	mov	qword ptr [rbp - 0x40], rax
0x400019:	mov	qword ptr [rbp - 0x38], rdx
0x40001d:	mov	rax, qword ptr fs:[0x28]
0x400026:	mov	qword ptr [rbp - 8], rax
0x40002a:	xor	eax, eax
0x40002c:	mov	eax, dword ptr [rip + 0xfffce]
0x400032:	test	eax, eax
0x400034:	je	0x4000e3
<Block for 0x4000e3, 23 bytes>
0x4000e3:	mov	rax, qword ptr [rbp - 0x40]
0x4000e7:	mov	rdx, qword ptr [rbp - 0x38]
0x4000eb:	mov	rcx, qword ptr [rbp - 8]
0x4000ef:	xor	rcx, qword ptr fs:[0x28]
0x4000f8:	je	0x4000ff
<Block for 0x40003a, 27 bytes>
0x40003a:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x400041:	mov	edx, 6
0x400046:	mov	esi, 1
0x40004b:	mov	edi, 2
0x400050:	call	0x500008
<Block for 0x4000ff, 2 bytes>
0x4000ff:	leave	
0x400100:	ret	
<Block for 0x4000fa, 5 bytes>
0x4000fa:	call	0x500040
<Block for 0x400055, 9 bytes>
0x400055:	mov	dword ptr [rbp - 0x28], eax
0x400058:	cmp	dword ptr [rbp - 0x28], -1
0x40005c:	je	0x4000cf
<Block for 0x4000cf, 3 bytes>
0x4000cf:	nop	
0x4000d0:	jmp	0x4000d3
<Block for 0x40005e, 22 bytes>
0x40005e:	lea	rax, [rbp - 0x20]
0x400062:	mov	edx, 0x10
0x400067:	mov	esi, 0
0x40006c:	mov	rdi, rax
0x40006f:	call	0x500010
<Block for 0x4000d3, 6 bytes>
0x4000d3:	cmp	dword ptr [rbp - 0x28], -1
0x4000d7:	je	0x4000e3
<Block for 0x400074, 18 bytes>
0x400074:	mov	word ptr [rbp - 0x20], 2
0x40007a:	lea	rdi, [rip + 0xf7]
0x400081:	call	0x500018
<Block for 0x4000d9, 10 bytes>
0x4000d9:	mov	eax, dword ptr [rbp - 0x28]
0x4000dc:	mov	edi, eax
0x4000de:	call	0x500038
<Block for 0x400086, 13 bytes>
0x400086:	mov	dword ptr [rbp - 0x1c], eax
0x400089:	mov	edi, 0x6987
0x40008e:	call	0x500020
<Block for 0x400093, 26 bytes>
0x400093:	mov	word ptr [rbp - 0x1e], ax
0x400097:	lea	rcx, [rbp - 0x20]
0x40009b:	mov	eax, dword ptr [rbp - 0x28]
0x40009e:	mov	edx, 0x10
0x4000a3:	mov	rsi, rcx
0x4000a6:	mov	edi, eax
0x4000a8:	call	0x500028
<Block for 0x4000ad, 5 bytes>
0x4000ad:	cmp	eax, -1
0x4000b0:	je	0x4000d2
<Block for 0x4000b2, 24 bytes>
0x4000b2:	lea	rsi, [rbp - 0x40]
0x4000b6:	mov	eax, dword ptr [rbp - 0x28]
0x4000b9:	mov	ecx, 0
0x4000be:	mov	edx, 0x10
0x4000c3:	mov	edi, eax
0x4000c5:	call	0x500030
<Block for 0x4000d2, 1 bytes>
0x4000d2:	nop	
<Block for 0x4000ca, 5 bytes>
0x4000ca:	mov	dword ptr [rbp - 0x24], eax
0x4000cd:	jmp	0x4000d3
