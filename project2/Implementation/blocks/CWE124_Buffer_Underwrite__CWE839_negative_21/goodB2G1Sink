<Block for 0x4000dc, 40 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x50
0x4000e8:	mov	dword ptr [rbp - 0x44], edi
0x4000eb:	mov	rax, qword ptr fs:[0x28]
0x4000f4:	mov	qword ptr [rbp - 8], rax
0x4000f8:	xor	eax, eax
0x4000fa:	mov	eax, dword ptr [rip + 0x2bc]
0x400100:	test	eax, eax
0x400102:	je	0x400112
<Block for 0x400112, 46 bytes>
0x400112:	mov	qword ptr [rbp - 0x30], 0
0x40011a:	mov	qword ptr [rbp - 0x28], 0
0x400122:	mov	qword ptr [rbp - 0x20], 0
0x40012a:	mov	qword ptr [rbp - 0x18], 0
0x400132:	mov	qword ptr [rbp - 0x10], 0
0x40013a:	cmp	dword ptr [rbp - 0x44], 0
0x40013e:	js	0x400178
<Block for 0x400104, 12 bytes>
0x400104:	lea	rdi, [rip + 0x2dd]
0x40010b:	call	0x500008
<Block for 0x400178, 12 bytes>
0x400178:	lea	rdi, [rip + 0x281]
0x40017f:	call	0x500008
<Block for 0x400140, 6 bytes>
0x400140:	cmp	dword ptr [rbp - 0x44], 9
0x400144:	jg	0x400178
<Block for 0x400110, 2 bytes>
0x400110:	jmp	0x400186
<Block for 0x400184, 2 bytes>
0x400184:	jmp	0x400186
<Block for 0x400146, 22 bytes>
0x400146:	mov	eax, dword ptr [rbp - 0x44]
0x400149:	cdqe	
0x40014b:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400153:	mov	dword ptr [rbp - 0x34], 0
0x40015a:	jmp	0x400170
<Block for 0x400186, 16 bytes>
0x400186:	nop	
0x400187:	mov	rax, qword ptr [rbp - 8]
0x40018b:	xor	rax, qword ptr fs:[0x28]
0x400194:	je	0x40019b
<Block for 0x400170, 6 bytes>
0x400170:	cmp	dword ptr [rbp - 0x34], 9
0x400174:	jle	0x40015c
<Block for 0x40019b, 2 bytes>
0x40019b:	leave	
0x40019c:	ret	
<Block for 0x400196, 5 bytes>
0x400196:	call	0x500010
<Block for 0x40015c, 16 bytes>
0x40015c:	mov	eax, dword ptr [rbp - 0x34]
0x40015f:	cdqe	
0x400161:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400165:	mov	edi, eax
0x400167:	call	0x500000
<Block for 0x400176, 2 bytes>
0x400176:	jmp	0x400186
<Block for 0x40016c, 10 bytes>
0x40016c:	add	dword ptr [rbp - 0x34], 1
0x400170:	cmp	dword ptr [rbp - 0x34], 9
0x400174:	jle	0x40015c
