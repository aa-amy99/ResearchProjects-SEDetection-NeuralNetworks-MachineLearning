<Block for 0x400000, 83 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x110
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x108]
0x400025:	mov	qword ptr [rbp - 0x100], rax
0x40002c:	lea	rax, [rbp - 0x108]
0x400033:	mov	qword ptr [rbp - 0xf8], rax
0x40003a:	lea	rax, [rbp - 0xe0]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500000
<Block for 0x400053, 95 bytes>
0x400053:	mov	byte ptr [rbp - 0x7d], 0
0x400057:	mov	rax, qword ptr [rbp - 0x100]
0x40005e:	mov	rax, qword ptr [rax]
0x400061:	mov	qword ptr [rbp - 0xf0], rax
0x400068:	lea	rax, [rbp - 0xe0]
0x40006f:	sub	rax, 8
0x400073:	mov	qword ptr [rbp - 0xf0], rax
0x40007a:	mov	rax, qword ptr [rbp - 0x100]
0x400081:	mov	rdx, qword ptr [rbp - 0xf0]
0x400088:	mov	qword ptr [rax], rdx
0x40008b:	mov	rax, qword ptr [rbp - 0xf8]
0x400092:	mov	rax, qword ptr [rax]
0x400095:	mov	qword ptr [rbp - 0xe8], rax
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	edx, 0x63
0x4000a5:	mov	esi, 0x43
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500000
<Block for 0x4000b2, 26 bytes>
0x4000b2:	mov	byte ptr [rbp - 0xd], 0
0x4000b6:	lea	rdx, [rbp - 0x70]
0x4000ba:	mov	rax, qword ptr [rbp - 0xe8]
0x4000c1:	mov	rsi, rdx
0x4000c4:	mov	rdi, rax
0x4000c7:	call	0x500008
<Block for 0x4000cc, 15 bytes>
0x4000cc:	mov	rax, qword ptr [rbp - 0xe8]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500010
<Block for 0x4000db, 16 bytes>
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x4000f0
<Block for 0x4000f0, 2 bytes>
0x4000f0:	leave	
0x4000f1:	ret	
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500018
