<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x60]
0x400020:	mov	rdi, rax
0x400023:	call	0x40059e
<Block for 0x400028, 52 bytes>
0x400028:	mov	dword ptr [rbp - 0x6c], 0xffffffff
0x40002f:	mov	qword ptr [rbp - 0x26], 0
0x400037:	mov	dword ptr [rbp - 0x1e], 0
0x40003e:	mov	word ptr [rbp - 0x1a], 0
0x400044:	mov	rdx, qword ptr [rip + 0xfffb5]
0x40004b:	lea	rax, [rbp - 0x26]
0x40004f:	mov	esi, 0xe
0x400054:	mov	rdi, rax
0x400057:	call	0x500008
<Block for 0x40005c, 10 bytes>
0x40005c:	test	rax, rax
0x40005f:	setne	al
0x400062:	test	al, al
0x400064:	je	0x400077
<Block for 0x400077, 12 bytes>
0x400077:	lea	rdi, [rip + 0x4b9]
0x40007e:	call	0x500018
<Block for 0x400066, 12 bytes>
0x400066:	lea	rax, [rbp - 0x26]
0x40006a:	mov	rdi, rax
0x40006d:	call	0x500010
<Block for 0x400083, 12 bytes>
0x400083:	lea	rax, [rbp - 0x60]
0x400087:	mov	rdi, rax
0x40008a:	call	0x400746
<Block for 0x400072, 5 bytes>
0x400072:	mov	dword ptr [rbp - 0x6c], eax
0x400075:	jmp	0x400083
<Block for 0x40008f, 23 bytes>
0x40008f:	mov	qword ptr [rbp - 0x68], rax
0x400093:	lea	rdx, [rbp - 0x68]
0x400097:	lea	rax, [rbp - 0x40]
0x40009b:	mov	rsi, rdx
0x40009e:	mov	rdi, rax
0x4000a1:	call	0x400796
<Block for 0x4000a6, 28 bytes>
0x4000a6:	lea	rdx, [rbp - 0x6c]
0x4000aa:	mov	rsi, qword ptr [rbp - 0x40]
0x4000ae:	lea	rax, [rbp - 0x60]
0x4000b2:	mov	rcx, rdx
0x4000b5:	mov	edx, 1
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x4007c4
<Block for 0x4000c2, 12 bytes>
0x4000c2:	lea	rax, [rbp - 0x60]
0x4000c6:	mov	rdi, rax
0x4000c9:	call	0x400746
<Block for 0x4000ce, 23 bytes>
0x4000ce:	mov	qword ptr [rbp - 0x68], rax
0x4000d2:	lea	rdx, [rbp - 0x68]
0x4000d6:	lea	rax, [rbp - 0x40]
0x4000da:	mov	rsi, rdx
0x4000dd:	mov	rdi, rax
0x4000e0:	call	0x400796
<Block for 0x4000e5, 28 bytes>
0x4000e5:	lea	rdx, [rbp - 0x6c]
0x4000e9:	mov	rsi, qword ptr [rbp - 0x40]
0x4000ed:	lea	rax, [rbp - 0x60]
0x4000f1:	mov	rcx, rdx
0x4000f4:	mov	edx, 1
0x4000f9:	mov	rdi, rax
0x4000fc:	call	0x4007c4
<Block for 0x400101, 12 bytes>
0x400101:	lea	rax, [rbp - 0x60]
0x400105:	mov	rdi, rax
0x400108:	call	0x400746
<Block for 0x40010d, 23 bytes>
0x40010d:	mov	qword ptr [rbp - 0x68], rax
0x400111:	lea	rdx, [rbp - 0x68]
0x400115:	lea	rax, [rbp - 0x40]
0x400119:	mov	rsi, rdx
0x40011c:	mov	rdi, rax
0x40011f:	call	0x400796
<Block for 0x400124, 28 bytes>
0x400124:	lea	rdx, [rbp - 0x6c]
0x400128:	mov	rsi, qword ptr [rbp - 0x40]
0x40012c:	lea	rax, [rbp - 0x60]
0x400130:	mov	rcx, rdx
0x400133:	mov	edx, 1
0x400138:	mov	rdi, rax
0x40013b:	call	0x4007c4
<Block for 0x400140, 19 bytes>
0x400140:	lea	rdx, [rbp - 0x60]
0x400144:	lea	rax, [rbp - 0x40]
0x400148:	mov	rsi, rdx
0x40014b:	mov	rdi, rax
0x40014e:	call	0x40088a
<Block for 0x400153, 12 bytes>
0x400153:	lea	rax, [rbp - 0x40]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x40015f, 12 bytes>
0x40015f:	lea	rax, [rbp - 0x40]
0x400163:	mov	rdi, rax
0x400166:	call	0x4006fe
<Block for 0x40016b, 12 bytes>
0x40016b:	lea	rax, [rbp - 0x60]
0x40016f:	mov	rdi, rax
0x400172:	call	0x4006fe
<Block for 0x400177, 16 bytes>
0x400177:	nop	
0x400178:	mov	rax, qword ptr [rbp - 0x18]
0x40017c:	xor	rax, qword ptr fs:[0x28]
0x400185:	je	0x4001c1
<Block for 0x4001c1, 7 bytes>
0x4001c1:	add	rsp, 0x68
0x4001c5:	pop	rbx
0x4001c6:	pop	rbp
0x4001c7:	ret	
<Block for 0x400187, 2 bytes>
0x400187:	jmp	0x4001bc
<Block for 0x4001bc, 5 bytes>
0x4001bc:	call	0x500030
