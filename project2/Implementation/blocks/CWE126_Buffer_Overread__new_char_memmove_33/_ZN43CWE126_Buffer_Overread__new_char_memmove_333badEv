<Block for 0x400000, 62 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x88]
0x400025:	mov	qword ptr [rbp - 0x80], rax
0x400029:	mov	qword ptr [rbp - 0x88], 0
0x400034:	mov	edi, 0x32
0x400039:	call	0x500000
<Block for 0x40003e, 32 bytes>
0x40003e:	mov	qword ptr [rbp - 0x88], rax
0x400045:	mov	rax, qword ptr [rbp - 0x88]
0x40004c:	mov	edx, 0x31
0x400051:	mov	esi, 0x41
0x400056:	mov	rdi, rax
0x400059:	call	0x500008
<Block for 0x40005e, 47 bytes>
0x40005e:	mov	rax, qword ptr [rbp - 0x88]
0x400065:	add	rax, 0x31
0x400069:	mov	byte ptr [rax], 0
0x40006c:	mov	rax, qword ptr [rbp - 0x80]
0x400070:	mov	rax, qword ptr [rax]
0x400073:	mov	qword ptr [rbp - 0x78], rax
0x400077:	lea	rax, [rbp - 0x70]
0x40007b:	mov	edx, 0x63
0x400080:	mov	esi, 0x43
0x400085:	mov	rdi, rax
0x400088:	call	0x500008
<Block for 0x40008d, 16 bytes>
0x40008d:	mov	byte ptr [rbp - 0xd], 0
0x400091:	lea	rax, [rbp - 0x70]
0x400095:	mov	rdi, rax
0x400098:	call	0x500010
<Block for 0x40009d, 22 bytes>
0x40009d:	mov	rdx, rax
0x4000a0:	mov	rcx, qword ptr [rbp - 0x78]
0x4000a4:	lea	rax, [rbp - 0x70]
0x4000a8:	mov	rsi, rcx
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500018
<Block for 0x4000b3, 16 bytes>
0x4000b3:	mov	byte ptr [rbp - 0xd], 0
0x4000b7:	lea	rax, [rbp - 0x70]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500020
<Block for 0x4000c3, 7 bytes>
0x4000c3:	cmp	qword ptr [rbp - 0x78], 0
0x4000c8:	je	0x4000d6
<Block for 0x4000d6, 16 bytes>
0x4000d6:	nop	
0x4000d7:	mov	rax, qword ptr [rbp - 8]
0x4000db:	xor	rax, qword ptr fs:[0x28]
0x4000e4:	je	0x4000eb
<Block for 0x4000ca, 12 bytes>
0x4000ca:	mov	rax, qword ptr [rbp - 0x78]
0x4000ce:	mov	rdi, rax
0x4000d1:	call	0x500028
<Block for 0x4000eb, 2 bytes>
0x4000eb:	leave	
0x4000ec:	ret	
<Block for 0x4000e6, 5 bytes>
0x4000e6:	call	0x500030
