<Block for 0x4000bc, 40 bytes>
0x4000bc:	endbr64	
0x4000c0:	push	rbp
0x4000c1:	mov	rbp, rsp
0x4000c4:	add	rsp, -0x80
0x4000c8:	mov	rax, qword ptr fs:[0x28]
0x4000d1:	mov	qword ptr [rbp - 8], rax
0x4000d5:	xor	eax, eax
0x4000d7:	mov	qword ptr [rbp - 0x80], 0
0x4000df:	call	0x500030
<Block for 0x4000e4, 9 bytes>
0x4000e4:	test	eax, eax
0x4000e6:	setne	al
0x4000e9:	test	al, al
0x4000eb:	je	0x4000fb
<Block for 0x4000fb, 10 bytes>
0x4000fb:	mov	edi, 0x64
0x400100:	call	0x500008
<Block for 0x4000ed, 12 bytes>
0x4000ed:	lea	rdi, [rip + 0x15b]
0x4000f4:	call	0x500020
<Block for 0x400105, 26 bytes>
0x400105:	mov	qword ptr [rbp - 0x78], rax
0x400109:	mov	rax, qword ptr [rbp - 0x78]
0x40010d:	mov	edx, 0x63
0x400112:	mov	esi, 0x41
0x400117:	mov	rdi, rax
0x40011a:	call	0x500010
<Block for 0x4000f9, 2 bytes>
0x4000f9:	jmp	0x400132
<Block for 0x40011f, 41 bytes>
0x40011f:	mov	rax, qword ptr [rbp - 0x78]
0x400123:	add	rax, 0x63
0x400127:	mov	byte ptr [rax], 0
0x40012a:	mov	rax, qword ptr [rbp - 0x78]
0x40012e:	mov	qword ptr [rbp - 0x80], rax
0x400132:	lea	rax, [rbp - 0x70]
0x400136:	mov	edx, 0x63
0x40013b:	mov	esi, 0x43
0x400140:	mov	rdi, rax
0x400143:	call	0x500010
<Block for 0x400132, 22 bytes>
0x400132:	lea	rax, [rbp - 0x70]
0x400136:	mov	edx, 0x63
0x40013b:	mov	esi, 0x43
0x400140:	mov	rdi, rax
0x400143:	call	0x500010
<Block for 0x400148, 23 bytes>
0x400148:	mov	byte ptr [rbp - 0xd], 0
0x40014c:	lea	rdx, [rbp - 0x70]
0x400150:	mov	rax, qword ptr [rbp - 0x80]
0x400154:	mov	rsi, rdx
0x400157:	mov	rdi, rax
0x40015a:	call	0x500018
<Block for 0x40015f, 12 bytes>
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	mov	rdi, rax
0x400166:	call	0x500020
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500028
