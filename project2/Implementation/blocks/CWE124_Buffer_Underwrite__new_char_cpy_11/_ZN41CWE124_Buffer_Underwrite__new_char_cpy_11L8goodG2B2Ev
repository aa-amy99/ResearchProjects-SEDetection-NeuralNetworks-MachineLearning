<Block for 0x400182, 40 bytes>
0x400182:	endbr64	
0x400186:	push	rbp
0x400187:	mov	rbp, rsp
0x40018a:	add	rsp, -0x80
0x40018e:	mov	rax, qword ptr fs:[0x28]
0x400197:	mov	qword ptr [rbp - 8], rax
0x40019b:	xor	eax, eax
0x40019d:	mov	qword ptr [rbp - 0x80], 0
0x4001a5:	call	0x500000
<Block for 0x4001aa, 9 bytes>
0x4001aa:	test	eax, eax
0x4001ac:	setne	al
0x4001af:	test	al, al
0x4001b1:	je	0x4001ea
<Block for 0x4001ea, 22 bytes>
0x4001ea:	lea	rax, [rbp - 0x70]
0x4001ee:	mov	edx, 0x63
0x4001f3:	mov	esi, 0x43
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500010
<Block for 0x4001b3, 10 bytes>
0x4001b3:	mov	edi, 0x64
0x4001b8:	call	0x500008
<Block for 0x400200, 23 bytes>
0x400200:	mov	byte ptr [rbp - 0xd], 0
0x400204:	lea	rdx, [rbp - 0x70]
0x400208:	mov	rax, qword ptr [rbp - 0x80]
0x40020c:	mov	rsi, rdx
0x40020f:	mov	rdi, rax
0x400212:	call	0x500018
<Block for 0x4001bd, 26 bytes>
0x4001bd:	mov	qword ptr [rbp - 0x78], rax
0x4001c1:	mov	rax, qword ptr [rbp - 0x78]
0x4001c5:	mov	edx, 0x63
0x4001ca:	mov	esi, 0x41
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500010
<Block for 0x400217, 12 bytes>
0x400217:	mov	rax, qword ptr [rbp - 0x80]
0x40021b:	mov	rdi, rax
0x40021e:	call	0x500020
<Block for 0x4001d7, 41 bytes>
0x4001d7:	mov	rax, qword ptr [rbp - 0x78]
0x4001db:	add	rax, 0x63
0x4001df:	mov	byte ptr [rax], 0
0x4001e2:	mov	rax, qword ptr [rbp - 0x78]
0x4001e6:	mov	qword ptr [rbp - 0x80], rax
0x4001ea:	lea	rax, [rbp - 0x70]
0x4001ee:	mov	edx, 0x63
0x4001f3:	mov	esi, 0x43
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x500010
<Block for 0x400223, 16 bytes>
0x400223:	nop	
0x400224:	mov	rax, qword ptr [rbp - 8]
0x400228:	xor	rax, qword ptr fs:[0x28]
0x400231:	je	0x400238
<Block for 0x400238, 2 bytes>
0x400238:	leave	
0x400239:	ret	
<Block for 0x400233, 5 bytes>
0x400233:	call	0x500028
