<Block for 0x400000, 85 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x50
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x30]
0x40001f:	mov	qword ptr [rbp - 0x30], rax
0x400023:	lea	rax, [rbp - 0x30]
0x400027:	mov	qword ptr [rbp - 0x28], rax
0x40002b:	mov	rax, qword ptr [rbp - 0x30]
0x40002f:	mov	qword ptr [rbp - 0x40], rax
0x400033:	mov	rax, qword ptr [rbp - 0x28]
0x400037:	mov	qword ptr [rbp - 0x38], rax
0x40003b:	lea	rax, [rbp - 0x40]
0x40003f:	mov	qword ptr [rbp - 0x30], rax
0x400043:	lea	rax, [rbp - 0x40]
0x400047:	mov	qword ptr [rbp - 0x28], rax
0x40004b:	mov	eax, 0
0x400050:	call	0x500000
<Block for 0x400055, 8 bytes>
0x400055:	test	eax, eax
0x400057:	je	0x400106
<Block for 0x400106, 73 bytes>
0x400106:	mov	rax, qword ptr [rbp - 0x38]
0x40010a:	mov	qword ptr [rip + 0xff], rax
0x400111:	mov	rax, qword ptr [rbp - 0x40]
0x400115:	mov	qword ptr [rip + 0xfc], rax
0x40011c:	mov	rax, qword ptr [rip + 0xed]
0x400123:	mov	rdx, qword ptr [rip + 0xee]
0x40012a:	mov	qword ptr [rax], rdx
0x40012d:	mov	rax, qword ptr [rip + 0xe4]
0x400134:	mov	rdx, qword ptr [rip + 0xd5]
0x40013b:	mov	qword ptr [rax + 8], rdx
0x40013f:	nop	
0x400140:	mov	rax, qword ptr [rbp - 8]
0x400144:	xor	rax, qword ptr fs:[0x28]
0x40014d:	je	0x400154
<Block for 0x40005d, 27 bytes>
0x40005d:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400064:	mov	edx, 6
0x400069:	mov	esi, 1
0x40006e:	mov	edi, 2
0x400073:	call	0x500008
<Block for 0x400154, 2 bytes>
0x400154:	leave	
0x400155:	ret	
<Block for 0x40014f, 5 bytes>
0x40014f:	call	0x500040
<Block for 0x400078, 9 bytes>
0x400078:	mov	dword ptr [rbp - 0x48], eax
0x40007b:	cmp	dword ptr [rbp - 0x48], -1
0x40007f:	je	0x4000f2
<Block for 0x4000f2, 3 bytes>
0x4000f2:	nop	
0x4000f3:	jmp	0x4000f6
<Block for 0x400081, 22 bytes>
0x400081:	lea	rax, [rbp - 0x20]
0x400085:	mov	edx, 0x10
0x40008a:	mov	esi, 0
0x40008f:	mov	rdi, rax
0x400092:	call	0x500010
<Block for 0x4000f6, 6 bytes>
0x4000f6:	cmp	dword ptr [rbp - 0x48], -1
0x4000fa:	je	0x400106
<Block for 0x400097, 18 bytes>
0x400097:	mov	word ptr [rbp - 0x20], 2
0x40009d:	lea	rdi, [rip + 0x17c]
0x4000a4:	call	0x500018
<Block for 0x4000fc, 10 bytes>
0x4000fc:	mov	eax, dword ptr [rbp - 0x48]
0x4000ff:	mov	edi, eax
0x400101:	call	0x500038
<Block for 0x4000a9, 13 bytes>
0x4000a9:	mov	dword ptr [rbp - 0x1c], eax
0x4000ac:	mov	edi, 0x6987
0x4000b1:	call	0x500020
<Block for 0x4000b6, 26 bytes>
0x4000b6:	mov	word ptr [rbp - 0x1e], ax
0x4000ba:	lea	rcx, [rbp - 0x20]
0x4000be:	mov	eax, dword ptr [rbp - 0x48]
0x4000c1:	mov	edx, 0x10
0x4000c6:	mov	rsi, rcx
0x4000c9:	mov	edi, eax
0x4000cb:	call	0x500028
<Block for 0x4000d0, 5 bytes>
0x4000d0:	cmp	eax, -1
0x4000d3:	je	0x4000f5
<Block for 0x4000d5, 24 bytes>
0x4000d5:	lea	rsi, [rbp - 0x40]
0x4000d9:	mov	eax, dword ptr [rbp - 0x48]
0x4000dc:	mov	ecx, 0
0x4000e1:	mov	edx, 0x10
0x4000e6:	mov	edi, eax
0x4000e8:	call	0x500030
<Block for 0x4000f5, 1 bytes>
0x4000f5:	nop	
<Block for 0x4000ed, 5 bytes>
0x4000ed:	mov	dword ptr [rbp - 0x44], eax
0x4000f0:	jmp	0x4000f6
