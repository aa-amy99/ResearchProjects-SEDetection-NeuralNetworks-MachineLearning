<Block for 0x4001de, 46 bytes>
0x4001de:	endbr64	
0x4001e2:	push	rbp
0x4001e3:	mov	rbp, rsp
0x4001e6:	sub	rsp, 0x90
0x4001ed:	mov	rax, qword ptr fs:[0x28]
0x4001f6:	mov	qword ptr [rbp - 8], rax
0x4001fa:	xor	eax, eax
0x4001fc:	mov	qword ptr [rbp - 0x88], 0
0x400207:	call	0x500000
<Block for 0x40020c, 9 bytes>
0x40020c:	test	eax, eax
0x40020e:	setne	al
0x400211:	test	al, al
0x400213:	je	0x40024f
<Block for 0x40024f, 22 bytes>
0x40024f:	lea	rax, [rbp - 0x70]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x43
0x40025d:	mov	rdi, rax
0x400260:	call	0x500010
<Block for 0x400215, 10 bytes>
0x400215:	mov	edi, 0x64
0x40021a:	call	0x500008
<Block for 0x400265, 19 bytes>
0x400265:	mov	byte ptr [rbp - 0xd], 0
0x400269:	mov	qword ptr [rbp - 0x80], 0
0x400271:	cmp	qword ptr [rbp - 0x80], 0x63
0x400276:	ja	0x40029d
<Block for 0x40021f, 26 bytes>
0x40021f:	mov	qword ptr [rbp - 0x78], rax
0x400223:	mov	rax, qword ptr [rbp - 0x78]
0x400227:	mov	edx, 0x63
0x40022c:	mov	esi, 0x41
0x400231:	mov	rdi, rax
0x400234:	call	0x500010
<Block for 0x400278, 37 bytes>
0x400278:	mov	rdx, qword ptr [rbp - 0x88]
0x40027f:	mov	rax, qword ptr [rbp - 0x80]
0x400283:	add	rax, rdx
0x400286:	movzx	eax, byte ptr [rax]
0x400289:	lea	rcx, [rbp - 0x70]
0x40028d:	mov	rdx, qword ptr [rbp - 0x80]
0x400291:	add	rdx, rcx
0x400294:	mov	byte ptr [rdx], al
0x400296:	add	qword ptr [rbp - 0x80], 1
0x40029b:	jmp	0x400271
<Block for 0x40029d, 16 bytes>
0x40029d:	mov	byte ptr [rbp - 0xd], 0
0x4002a1:	lea	rax, [rbp - 0x70]
0x4002a5:	mov	rdi, rax
0x4002a8:	call	0x500018
<Block for 0x400239, 44 bytes>
0x400239:	mov	rax, qword ptr [rbp - 0x78]
0x40023d:	add	rax, 0x63
0x400241:	mov	byte ptr [rax], 0
0x400244:	mov	rax, qword ptr [rbp - 0x78]
0x400248:	mov	qword ptr [rbp - 0x88], rax
0x40024f:	lea	rax, [rbp - 0x70]
0x400253:	mov	edx, 0x63
0x400258:	mov	esi, 0x43
0x40025d:	mov	rdi, rax
0x400260:	call	0x500010
<Block for 0x400271, 7 bytes>
0x400271:	cmp	qword ptr [rbp - 0x80], 0x63
0x400276:	ja	0x40029d
<Block for 0x4002ad, 16 bytes>
0x4002ad:	nop	
0x4002ae:	mov	rax, qword ptr [rbp - 8]
0x4002b2:	xor	rax, qword ptr fs:[0x28]
0x4002bb:	je	0x4002c2
<Block for 0x4002c2, 2 bytes>
0x4002c2:	leave	
0x4002c3:	ret	
<Block for 0x4002bd, 5 bytes>
0x4002bd:	call	0x500020
