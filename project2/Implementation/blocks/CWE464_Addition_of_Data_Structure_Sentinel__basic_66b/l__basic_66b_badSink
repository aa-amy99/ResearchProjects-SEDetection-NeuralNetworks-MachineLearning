<Block for 0x400000, 73 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	qword ptr [rbp - 0x18], rdi
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 8], rax
0x40001d:	xor	eax, eax
0x40001f:	mov	rax, qword ptr [rbp - 0x18]
0x400023:	movzx	eax, byte ptr [rax + 2]
0x400027:	mov	byte ptr [rbp - 0xd], al
0x40002a:	mov	byte ptr [rbp - 0xc], 0x78
0x40002e:	movzx	eax, byte ptr [rbp - 0xd]
0x400032:	mov	byte ptr [rbp - 0xb], al
0x400035:	mov	byte ptr [rbp - 0xa], 0x7a
0x400039:	mov	byte ptr [rbp - 9], 0
0x40003d:	lea	rax, [rbp - 0xc]
0x400041:	mov	rdi, rax
0x400044:	call	0x500000
<Block for 0x400049, 16 bytes>
0x400049:	nop	
0x40004a:	mov	rax, qword ptr [rbp - 8]
0x40004e:	xor	rax, qword ptr fs:[0x28]
0x400057:	je	0x40005e
<Block for 0x40005e, 2 bytes>
0x40005e:	leave	
0x40005f:	ret	
<Block for 0x400059, 5 bytes>
0x400059:	call	0x500008
