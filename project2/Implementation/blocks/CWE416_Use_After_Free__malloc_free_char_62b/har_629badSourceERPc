<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], rdi
0x400010:	mov	edi, 0x64
0x400015:	call	0x500000
<Block for 0x40001a, 22 bytes>
0x40001a:	mov	rdx, rax
0x40001d:	mov	rax, qword ptr [rbp - 8]
0x400021:	mov	qword ptr [rax], rdx
0x400024:	mov	rax, qword ptr [rbp - 8]
0x400028:	mov	rax, qword ptr [rax]
0x40002b:	test	rax, rax
0x40002e:	jne	0x40003a
<Block for 0x400030, 10 bytes>
0x400030:	mov	edi, 0xffffffff
0x400035:	call	0x500008
<Block for 0x40003a, 25 bytes>
0x40003a:	mov	rax, qword ptr [rbp - 8]
0x40003e:	mov	rax, qword ptr [rax]
0x400041:	mov	edx, 0x63
0x400046:	mov	esi, 0x41
0x40004b:	mov	rdi, rax
0x40004e:	call	0x500010
<Block for 0x400053, 29 bytes>
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	mov	rax, qword ptr [rax]
0x40005a:	add	rax, 0x63
0x40005e:	mov	byte ptr [rax], 0
0x400061:	mov	rax, qword ptr [rbp - 8]
0x400065:	mov	rax, qword ptr [rax]
0x400068:	mov	rdi, rax
0x40006b:	call	0x500018
<Block for 0x400070, 3 bytes>
0x400070:	nop	
0x400071:	leave	
0x400072:	ret	
