<Block for 0x400158, 84 bytes>
0x400158:	endbr64	
0x40015c:	push	rbp
0x40015d:	mov	rbp, rsp
0x400160:	sub	rsp, 0x90
0x400167:	mov	rax, qword ptr fs:[0x28]
0x400170:	mov	qword ptr [rbp - 8], rax
0x400174:	xor	eax, eax
0x400176:	mov	eax, 0x10
0x40017b:	sub	rax, 1
0x40017f:	add	rax, 0x6c
0x400183:	mov	esi, 0x10
0x400188:	mov	edx, 0
0x40018d:	div	rsi
0x400190:	imul	rax, rax, 0x10
0x400194:	mov	rdx, rax
0x400197:	and	rdx, 0xfffffffffffff000
0x40019e:	mov	rcx, rsp
0x4001a1:	sub	rcx, rdx
0x4001a4:	mov	rdx, rcx
0x4001a7:	cmp	rsp, rdx
0x4001aa:	je	0x4001be
<Block for 0x4001be, 26 bytes>
0x4001be:	mov	rdx, rax
0x4001c1:	and	edx, 0xfff
0x4001c7:	sub	rsp, rdx
0x4001ca:	mov	rdx, rax
0x4001cd:	and	edx, 0xfff
0x4001d3:	test	rdx, rdx
0x4001d6:	je	0x4001e8
<Block for 0x4001ac, 18 bytes>
0x4001ac:	sub	rsp, 0x1000
0x4001b3:	or	qword ptr [rsp + 0xff8], 0
0x4001bc:	jmp	0x4001a7
<Block for 0x4001e8, 41 bytes>
0x4001e8:	mov	rax, rsp
0x4001eb:	add	rax, 0xf
0x4001ef:	shr	rax, 4
0x4001f3:	shl	rax, 4
0x4001f7:	mov	qword ptr [rbp - 0x80], rax
0x4001fb:	mov	rax, qword ptr [rbp - 0x80]
0x4001ff:	mov	edx, 0x63
0x400204:	mov	esi, 0x41
0x400209:	mov	rdi, rax
0x40020c:	call	0x500000
<Block for 0x4001d8, 57 bytes>
0x4001d8:	and	eax, 0xfff
0x4001dd:	sub	rax, 8
0x4001e1:	add	rax, rsp
0x4001e4:	or	qword ptr [rax], 0
0x4001e8:	mov	rax, rsp
0x4001eb:	add	rax, 0xf
0x4001ef:	shr	rax, 4
0x4001f3:	shl	rax, 4
0x4001f7:	mov	qword ptr [rbp - 0x80], rax
0x4001fb:	mov	rax, qword ptr [rbp - 0x80]
0x4001ff:	mov	edx, 0x63
0x400204:	mov	esi, 0x41
0x400209:	mov	rdi, rax
0x40020c:	call	0x500000
<Block for 0x4001a7, 5 bytes>
0x4001a7:	cmp	rsp, rdx
0x4001aa:	je	0x4001be
<Block for 0x400211, 41 bytes>
0x400211:	mov	rax, qword ptr [rbp - 0x80]
0x400215:	add	rax, 0x63
0x400219:	mov	byte ptr [rax], 0
0x40021c:	mov	rax, qword ptr [rbp - 0x80]
0x400220:	mov	qword ptr [rbp - 0x78], rax
0x400224:	lea	rax, [rbp - 0x70]
0x400228:	mov	edx, 0x63
0x40022d:	mov	esi, 0x43
0x400232:	mov	rdi, rax
0x400235:	call	0x500000
<Block for 0x40023a, 17 bytes>
0x40023a:	mov	byte ptr [rbp - 0xd], 0
0x40023e:	mov	qword ptr [rbp - 0x88], 0
0x400249:	jmp	0x400274
<Block for 0x400274, 10 bytes>
0x400274:	cmp	qword ptr [rbp - 0x88], 0x63
0x40027c:	jbe	0x40024b
<Block for 0x40024b, 51 bytes>
0x40024b:	mov	rdx, qword ptr [rbp - 0x78]
0x40024f:	mov	rax, qword ptr [rbp - 0x88]
0x400256:	add	rdx, rax
0x400259:	lea	rcx, [rbp - 0x70]
0x40025d:	mov	rax, qword ptr [rbp - 0x88]
0x400264:	add	rax, rcx
0x400267:	movzx	eax, byte ptr [rax]
0x40026a:	mov	byte ptr [rdx], al
0x40026c:	add	qword ptr [rbp - 0x88], 1
0x400274:	cmp	qword ptr [rbp - 0x88], 0x63
0x40027c:	jbe	0x40024b
<Block for 0x40027e, 23 bytes>
0x40027e:	mov	rax, qword ptr [rbp - 0x78]
0x400282:	add	rax, 0x63
0x400286:	mov	byte ptr [rax], 0
0x400289:	mov	rax, qword ptr [rbp - 0x78]
0x40028d:	mov	rdi, rax
0x400290:	call	0x500008
<Block for 0x400295, 16 bytes>
0x400295:	nop	
0x400296:	mov	rax, qword ptr [rbp - 8]
0x40029a:	xor	rax, qword ptr fs:[0x28]
0x4002a3:	je	0x4002aa
<Block for 0x4002aa, 2 bytes>
0x4002aa:	leave	
0x4002ab:	ret	
<Block for 0x4002a5, 5 bytes>
0x4002a5:	call	0x500010
