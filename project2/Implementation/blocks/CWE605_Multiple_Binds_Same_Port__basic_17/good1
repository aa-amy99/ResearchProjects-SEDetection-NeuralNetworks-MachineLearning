<Block for 0x4002e3, 45 bytes>
0x4002e3:	endbr64	
0x4002e7:	push	rbp
0x4002e8:	mov	rbp, rsp
0x4002eb:	sub	rsp, 0xa0
0x4002f2:	mov	rax, qword ptr fs:[0x28]
0x4002fb:	mov	qword ptr [rbp - 8], rax
0x4002ff:	xor	eax, eax
0x400301:	mov	dword ptr [rbp - 0xa0], 0
0x40030b:	jmp	0x400559
<Block for 0x400559, 13 bytes>
0x400559:	cmp	dword ptr [rbp - 0xa0], 0
0x400560:	jle	0x400310
<Block for 0x400310, 135 bytes>
0x400310:	mov	qword ptr [rbp - 0x70], 0
0x400318:	mov	qword ptr [rbp - 0x68], 0
0x400320:	mov	qword ptr [rbp - 0x60], 0
0x400328:	mov	qword ptr [rbp - 0x58], 0
0x400330:	mov	qword ptr [rbp - 0x50], 0
0x400338:	mov	qword ptr [rbp - 0x48], 0
0x400340:	mov	qword ptr [rbp - 0x40], 0
0x400348:	mov	qword ptr [rbp - 0x38], 0
0x400350:	mov	qword ptr [rbp - 0x30], 0
0x400358:	mov	qword ptr [rbp - 0x28], 0
0x400360:	mov	qword ptr [rbp - 0x20], 0
0x400368:	mov	qword ptr [rbp - 0x18], 0
0x400370:	mov	dword ptr [rbp - 0x10], 0
0x400377:	mov	dword ptr [rbp - 0x98], 0xffffffff
0x400381:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40038b:	lea	rax, [rbp - 0x70]
0x40038f:	mov	rdi, rax
0x400392:	call	0x500000
<Block for 0x400566, 16 bytes>
0x400566:	nop	
0x400567:	mov	rax, qword ptr [rbp - 8]
0x40056b:	xor	rax, qword ptr fs:[0x28]
0x400574:	je	0x40057b
<Block for 0x400397, 27 bytes>
0x400397:	mov	qword ptr [rbp - 0x90], rax
0x40039e:	mov	edx, 6
0x4003a3:	mov	esi, 1
0x4003a8:	mov	edi, 2
0x4003ad:	call	0x500008
<Block for 0x40057b, 2 bytes>
0x40057b:	leave	
0x40057c:	ret	
<Block for 0x400576, 5 bytes>
0x400576:	call	0x500060
<Block for 0x4003b2, 19 bytes>
0x4003b2:	mov	dword ptr [rbp - 0x98], eax
0x4003b8:	cmp	dword ptr [rbp - 0x98], -1
0x4003bf:	je	0x400510
<Block for 0x400510, 3 bytes>
0x400510:	nop	
0x400511:	jmp	0x40051a
<Block for 0x4003c5, 22 bytes>
0x4003c5:	lea	rax, [rbp - 0x80]
0x4003c9:	mov	edx, 0x10
0x4003ce:	mov	esi, 0
0x4003d3:	mov	rdi, rax
0x4003d6:	call	0x500018
<Block for 0x40051a, 9 bytes>
0x40051a:	cmp	dword ptr [rbp - 0x98], -1
0x400521:	je	0x400530
<Block for 0x4003db, 23 bytes>
0x4003db:	mov	word ptr [rbp - 0x80], 2
0x4003e1:	mov	dword ptr [rbp - 0x7c], 0
0x4003e8:	mov	edi, 0x6987
0x4003ed:	call	0x500020
<Block for 0x400530, 9 bytes>
0x400530:	cmp	dword ptr [rbp - 0x9c], -1
0x400537:	je	0x400546
<Block for 0x400523, 13 bytes>
0x400523:	mov	eax, dword ptr [rbp - 0x98]
0x400529:	mov	edi, eax
0x40052b:	call	0x500050
<Block for 0x4003f2, 29 bytes>
0x4003f2:	mov	word ptr [rbp - 0x7e], ax
0x4003f6:	lea	rcx, [rbp - 0x80]
0x4003fa:	mov	eax, dword ptr [rbp - 0x98]
0x400400:	mov	edx, 0x10
0x400405:	mov	rsi, rcx
0x400408:	mov	edi, eax
0x40040a:	call	0x500028
<Block for 0x400546, 12 bytes>
0x400546:	lea	rax, [rbp - 0x70]
0x40054a:	mov	rdi, rax
0x40054d:	call	0x500058
<Block for 0x400539, 13 bytes>
0x400539:	mov	eax, dword ptr [rbp - 0x9c]
0x40053f:	mov	edi, eax
0x400541:	call	0x500050
<Block for 0x40040f, 9 bytes>
0x40040f:	cmp	eax, -1
0x400412:	je	0x400513
<Block for 0x400552, 20 bytes>
0x400552:	add	dword ptr [rbp - 0xa0], 1
0x400559:	cmp	dword ptr [rbp - 0xa0], 0
0x400560:	jle	0x400310
<Block for 0x400513, 3 bytes>
0x400513:	nop	
0x400514:	jmp	0x40051a
<Block for 0x400418, 18 bytes>
0x400418:	mov	eax, dword ptr [rbp - 0x98]
0x40041e:	mov	esi, 5
0x400423:	mov	edi, eax
0x400425:	call	0x500030
<Block for 0x40042a, 9 bytes>
0x40042a:	cmp	eax, -1
0x40042d:	je	0x400516
<Block for 0x400516, 3 bytes>
0x400516:	nop	
0x400517:	jmp	0x40051a
<Block for 0x400433, 23 bytes>
0x400433:	mov	eax, dword ptr [rbp - 0x98]
0x400439:	mov	edx, 0
0x40043e:	mov	esi, 0
0x400443:	mov	edi, eax
0x400445:	call	0x500038
<Block for 0x40044a, 19 bytes>
0x40044a:	mov	dword ptr [rbp - 0x9c], eax
0x400450:	cmp	dword ptr [rbp - 0x9c], -1
0x400457:	je	0x400519
<Block for 0x40045d, 52 bytes>
0x40045d:	mov	rax, qword ptr [rbp - 0x90]
0x400464:	mov	edx, 0x63
0x400469:	sub	edx, eax
0x40046b:	mov	eax, edx
0x40046d:	movsxd	rdx, eax
0x400470:	lea	rcx, [rbp - 0x70]
0x400474:	mov	rax, qword ptr [rbp - 0x90]
0x40047b:	lea	rsi, [rcx + rax]
0x40047f:	mov	eax, dword ptr [rbp - 0x9c]
0x400485:	mov	ecx, 0
0x40048a:	mov	edi, eax
0x40048c:	call	0x500040
<Block for 0x400519, 1 bytes>
0x400519:	nop	
<Block for 0x400491, 15 bytes>
0x400491:	mov	dword ptr [rbp - 0x94], eax
0x400497:	cmp	dword ptr [rbp - 0x94], -1
0x40049e:	je	0x40051a
<Block for 0x4004a0, 9 bytes>
0x4004a0:	cmp	dword ptr [rbp - 0x94], 0
0x4004a7:	je	0x40051a
<Block for 0x4004a9, 30 bytes>
0x4004a9:	mov	eax, dword ptr [rbp - 0x94]
0x4004af:	cdqe	
0x4004b1:	mov	byte ptr [rbp + rax - 0x70], 0
0x4004b6:	lea	rax, [rbp - 0x70]
0x4004ba:	mov	esi, 0xd
0x4004bf:	mov	rdi, rax
0x4004c2:	call	0x500048
<Block for 0x4004c7, 17 bytes>
0x4004c7:	mov	qword ptr [rbp - 0x88], rax
0x4004ce:	cmp	qword ptr [rbp - 0x88], 0
0x4004d6:	je	0x4004e2
<Block for 0x4004e2, 17 bytes>
0x4004e2:	lea	rax, [rbp - 0x70]
0x4004e6:	mov	esi, 0xa
0x4004eb:	mov	rdi, rax
0x4004ee:	call	0x500048
<Block for 0x4004d8, 27 bytes>
0x4004d8:	mov	rax, qword ptr [rbp - 0x88]
0x4004df:	mov	byte ptr [rax], 0
0x4004e2:	lea	rax, [rbp - 0x70]
0x4004e6:	mov	esi, 0xa
0x4004eb:	mov	rdi, rax
0x4004ee:	call	0x500048
<Block for 0x4004f3, 17 bytes>
0x4004f3:	mov	qword ptr [rbp - 0x88], rax
0x4004fa:	cmp	qword ptr [rbp - 0x88], 0
0x400502:	je	0x40051a
<Block for 0x400504, 12 bytes>
0x400504:	mov	rax, qword ptr [rbp - 0x88]
0x40050b:	mov	byte ptr [rax], 0
0x40050e:	jmp	0x40051a
