<Block for 0x40033d, 154 bytes>
0x40033d:	endbr64	
0x400341:	push	rbp
0x400342:	mov	rbp, rsp
0x400345:	sub	rsp, 0xb0
0x40034c:	mov	rax, qword ptr fs:[0x28]
0x400355:	mov	qword ptr [rbp - 8], rax
0x400359:	xor	eax, eax
0x40035b:	mov	qword ptr [rbp - 0x70], 0
0x400363:	mov	qword ptr [rbp - 0x68], 0
0x40036b:	mov	qword ptr [rbp - 0x60], 0
0x400373:	mov	qword ptr [rbp - 0x58], 0
0x40037b:	mov	qword ptr [rbp - 0x50], 0
0x400383:	mov	qword ptr [rbp - 0x48], 0
0x40038b:	mov	qword ptr [rbp - 0x40], 0
0x400393:	mov	qword ptr [rbp - 0x38], 0
0x40039b:	mov	qword ptr [rbp - 0x30], 0
0x4003a3:	mov	qword ptr [rbp - 0x28], 0
0x4003ab:	mov	qword ptr [rbp - 0x20], 0
0x4003b3:	mov	qword ptr [rbp - 0x18], 0
0x4003bb:	mov	dword ptr [rbp - 0x10], 0
0x4003c2:	lea	rax, [rbp - 0x70]
0x4003c6:	mov	qword ptr [rbp - 0x98], rax
0x4003cd:	mov	eax, 0
0x4003d2:	call	0x400000
<Block for 0x4003d7, 8 bytes>
0x4003d7:	test	eax, eax
0x4003d9:	je	0x4005d1
<Block for 0x4005d1, 10 bytes>
0x4005d1:	mov	eax, 0
0x4005d6:	call	0x40000f
<Block for 0x4003df, 35 bytes>
0x4003df:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4003e9:	mov	dword ptr [rbp - 0xac], 0xffffffff
0x4003f3:	mov	rax, qword ptr [rbp - 0x98]
0x4003fa:	mov	rdi, rax
0x4003fd:	call	0x500000
<Block for 0x4005db, 4 bytes>
0x4005db:	test	eax, eax
0x4005dd:	je	0x4005ed
<Block for 0x400402, 27 bytes>
0x400402:	mov	qword ptr [rbp - 0x90], rax
0x400409:	mov	edx, 6
0x40040e:	mov	esi, 1
0x400413:	mov	edi, 2
0x400418:	call	0x500008
<Block for 0x4005ed, 34 bytes>
0x4005ed:	lea	rdx, [rbp - 0xb0]
0x4005f4:	mov	rax, qword ptr [rbp - 0x98]
0x4005fb:	lea	rsi, [rip + 0x61e]
0x400602:	mov	rdi, rax
0x400605:	mov	eax, 0
0x40060a:	call	0x500050
<Block for 0x4005df, 12 bytes>
0x4005df:	lea	rdi, [rip + 0x63d]
0x4005e6:	call	0x500068
<Block for 0x40041d, 19 bytes>
0x40041d:	mov	dword ptr [rbp - 0xa0], eax
0x400423:	cmp	dword ptr [rbp - 0xa0], -1
0x40042a:	je	0x40059b
<Block for 0x40060f, 5 bytes>
0x40060f:	cmp	eax, 1
0x400612:	jne	0x400660
<Block for 0x4005eb, 2 bytes>
0x4005eb:	jmp	0x400660
<Block for 0x40059b, 3 bytes>
0x40059b:	nop	
0x40059c:	jmp	0x4005a5
<Block for 0x400430, 22 bytes>
0x400430:	lea	rax, [rbp - 0x80]
0x400434:	mov	edx, 0x10
0x400439:	mov	esi, 0
0x40043e:	mov	rdi, rax
0x400441:	call	0x500010
<Block for 0x400614, 13 bytes>
0x400614:	mov	eax, dword ptr [rbp - 0xb0]
0x40061a:	cmp	eax, 0x270f
0x40061f:	jg	0x400660
<Block for 0x400660, 16 bytes>
0x400660:	nop	
0x400661:	mov	rax, qword ptr [rbp - 8]
0x400665:	xor	rax, qword ptr fs:[0x28]
0x40066e:	je	0x400675
<Block for 0x4005a5, 9 bytes>
0x4005a5:	cmp	dword ptr [rbp - 0xa0], -1
0x4005ac:	je	0x4005bb
<Block for 0x400446, 23 bytes>
0x400446:	mov	word ptr [rbp - 0x80], 2
0x40044c:	mov	dword ptr [rbp - 0x7c], 0
0x400453:	mov	edi, 0x6987
0x400458:	call	0x500018
<Block for 0x400621, 22 bytes>
0x400621:	mov	dword ptr [rbp - 0xa4], 0
0x40062b:	mov	dword ptr [rbp - 0xa8], 0
0x400635:	jmp	0x400645
<Block for 0x400675, 2 bytes>
0x400675:	leave	
0x400676:	ret	
<Block for 0x400670, 5 bytes>
0x400670:	call	0x500060
<Block for 0x4005bb, 9 bytes>
0x4005bb:	cmp	dword ptr [rbp - 0xac], -1
0x4005c2:	je	0x4005d1
<Block for 0x4005ae, 13 bytes>
0x4005ae:	mov	eax, dword ptr [rbp - 0xa0]
0x4005b4:	mov	edi, eax
0x4005b6:	call	0x500048
<Block for 0x40045d, 29 bytes>
0x40045d:	mov	word ptr [rbp - 0x7e], ax
0x400461:	lea	rcx, [rbp - 0x80]
0x400465:	mov	eax, dword ptr [rbp - 0xa0]
0x40046b:	mov	edx, 0x10
0x400470:	mov	rsi, rcx
0x400473:	mov	edi, eax
0x400475:	call	0x500020
<Block for 0x400645, 14 bytes>
0x400645:	mov	eax, dword ptr [rbp - 0xb0]
0x40064b:	cmp	dword ptr [rbp - 0xa8], eax
0x400651:	jl	0x400637
<Block for 0x4005c4, 13 bytes>
0x4005c4:	mov	eax, dword ptr [rbp - 0xac]
0x4005ca:	mov	edi, eax
0x4005cc:	call	0x500048
<Block for 0x40047a, 9 bytes>
0x40047a:	cmp	eax, -1
0x40047d:	je	0x40059e
<Block for 0x400637, 28 bytes>
0x400637:	add	dword ptr [rbp - 0xa4], 1
0x40063e:	add	dword ptr [rbp - 0xa8], 1
0x400645:	mov	eax, dword ptr [rbp - 0xb0]
0x40064b:	cmp	dword ptr [rbp - 0xa8], eax
0x400651:	jl	0x400637
<Block for 0x400653, 13 bytes>
0x400653:	mov	eax, dword ptr [rbp - 0xa4]
0x400659:	mov	edi, eax
0x40065b:	call	0x500058
<Block for 0x40059e, 3 bytes>
0x40059e:	nop	
0x40059f:	jmp	0x4005a5
<Block for 0x400483, 18 bytes>
0x400483:	mov	eax, dword ptr [rbp - 0xa0]
0x400489:	mov	esi, 5
0x40048e:	mov	edi, eax
0x400490:	call	0x500028
<Block for 0x400495, 9 bytes>
0x400495:	cmp	eax, -1
0x400498:	je	0x4005a1
<Block for 0x4005a1, 3 bytes>
0x4005a1:	nop	
0x4005a2:	jmp	0x4005a5
<Block for 0x40049e, 23 bytes>
0x40049e:	mov	eax, dword ptr [rbp - 0xa0]
0x4004a4:	mov	edx, 0
0x4004a9:	mov	esi, 0
0x4004ae:	mov	edi, eax
0x4004b0:	call	0x500030
<Block for 0x4004b5, 19 bytes>
0x4004b5:	mov	dword ptr [rbp - 0xac], eax
0x4004bb:	cmp	dword ptr [rbp - 0xac], -1
0x4004c2:	je	0x4005a4
<Block for 0x4004c8, 51 bytes>
0x4004c8:	mov	eax, 0x63
0x4004cd:	sub	rax, qword ptr [rbp - 0x90]
0x4004d4:	mov	rdx, rax
0x4004d7:	mov	rcx, qword ptr [rbp - 0x98]
0x4004de:	mov	rax, qword ptr [rbp - 0x90]
0x4004e5:	lea	rsi, [rcx + rax]
0x4004e9:	mov	eax, dword ptr [rbp - 0xac]
0x4004ef:	mov	ecx, 0
0x4004f4:	mov	edi, eax
0x4004f6:	call	0x500038
<Block for 0x4005a4, 1 bytes>
0x4005a4:	nop	
<Block for 0x4004fb, 19 bytes>
0x4004fb:	mov	dword ptr [rbp - 0x9c], eax
0x400501:	cmp	dword ptr [rbp - 0x9c], -1
0x400508:	je	0x4005a5
<Block for 0x40050e, 13 bytes>
0x40050e:	cmp	dword ptr [rbp - 0x9c], 0
0x400515:	je	0x4005a5
<Block for 0x40051b, 52 bytes>
0x40051b:	mov	eax, dword ptr [rbp - 0x9c]
0x400521:	movsxd	rdx, eax
0x400524:	mov	rax, qword ptr [rbp - 0x90]
0x40052b:	add	rdx, rax
0x40052e:	mov	rax, qword ptr [rbp - 0x98]
0x400535:	add	rax, rdx
0x400538:	mov	byte ptr [rax], 0
0x40053b:	mov	rax, qword ptr [rbp - 0x98]
0x400542:	mov	esi, 0xd
0x400547:	mov	rdi, rax
0x40054a:	call	0x500040
<Block for 0x40054f, 17 bytes>
0x40054f:	mov	qword ptr [rbp - 0x88], rax
0x400556:	cmp	qword ptr [rbp - 0x88], 0
0x40055e:	je	0x40056a
<Block for 0x40056a, 20 bytes>
0x40056a:	mov	rax, qword ptr [rbp - 0x98]
0x400571:	mov	esi, 0xa
0x400576:	mov	rdi, rax
0x400579:	call	0x500040
<Block for 0x400560, 30 bytes>
0x400560:	mov	rax, qword ptr [rbp - 0x88]
0x400567:	mov	byte ptr [rax], 0
0x40056a:	mov	rax, qword ptr [rbp - 0x98]
0x400571:	mov	esi, 0xa
0x400576:	mov	rdi, rax
0x400579:	call	0x500040
<Block for 0x40057e, 17 bytes>
0x40057e:	mov	qword ptr [rbp - 0x88], rax
0x400585:	cmp	qword ptr [rbp - 0x88], 0
0x40058d:	je	0x4005a5
<Block for 0x40058f, 12 bytes>
0x40058f:	mov	rax, qword ptr [rbp - 0x88]
0x400596:	mov	byte ptr [rax], 0
0x400599:	jmp	0x4005a5
