<Block for 0x400000, 82 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x130
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	movabs	rax, 0x3d48544150
0x400028:	mov	edx, 0
0x40002d:	mov	qword ptr [rbp - 0x110], rax
0x400034:	mov	qword ptr [rbp - 0x108], rdx
0x40003b:	lea	rdx, [rbp - 0x100]
0x400042:	mov	eax, 0
0x400047:	mov	ecx, 0x1d
0x40004c:	mov	rdi, rdx
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400052, 34 bytes>
0x400052:	mov	rdx, rdi
0x400055:	mov	word ptr [rdx], ax
0x400058:	add	rdx, 2
0x40005c:	lea	rax, [rbp - 0x110]
0x400063:	mov	qword ptr [rbp - 0x128], rax
0x40006a:	mov	eax, 0
0x40006f:	call	0x500000
<Block for 0x40004f, 3 bytes>
0x40004f:	rep stosq	qword ptr [rdi], rax
<Block for 0x400074, 4 bytes>
0x400074:	test	eax, eax
0x400076:	je	0x4000df
<Block for 0x4000df, 27 bytes>
0x4000df:	mov	rax, qword ptr [rbp - 0x128]
0x4000e6:	mov	rcx, -1
0x4000ed:	mov	rdx, rax
0x4000f0:	mov	eax, 0
0x4000f5:	mov	rdi, rdx
0x4000f8:	repne scasb	al, byte ptr [rdi]
<Block for 0x400078, 15 bytes>
0x400078:	mov	rax, qword ptr [rbp - 0x128]
0x40007f:	mov	rdi, rax
0x400082:	call	0x500008
<Block for 0x4000fa, 45 bytes>
0x4000fa:	mov	rax, rcx
0x4000fd:	not	rax
0x400100:	lea	rdx, [rax - 1]
0x400104:	mov	rax, qword ptr [rbp - 0x128]
0x40010b:	add	rax, rdx
0x40010e:	mov	dword ptr [rax], 0x6e69622f
0x400114:	mov	byte ptr [rax + 4], 0
0x400118:	mov	rax, qword ptr [rbp - 0x128]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500020
<Block for 0x4000f8, 2 bytes>
0x4000f8:	repne scasb	al, byte ptr [rdi]
<Block for 0x400087, 19 bytes>
0x400087:	mov	qword ptr [rbp - 0x120], rax
0x40008e:	lea	rdi, [rip + 0x1d0]
0x400095:	call	0x500010
<Block for 0x400127, 16 bytes>
0x400127:	nop	
0x400128:	mov	rax, qword ptr [rbp - 8]
0x40012c:	xor	rax, qword ptr fs:[0x28]
0x400135:	je	0x40013c
<Block for 0x40009a, 17 bytes>
0x40009a:	mov	qword ptr [rbp - 0x118], rax
0x4000a1:	cmp	qword ptr [rbp - 0x118], 0
0x4000a9:	je	0x400118
<Block for 0x40013c, 2 bytes>
0x40013c:	leave	
0x40013d:	ret	
<Block for 0x400137, 5 bytes>
0x400137:	call	0x500028
<Block for 0x400118, 15 bytes>
0x400118:	mov	rax, qword ptr [rbp - 0x128]
0x40011f:	mov	rdi, rax
0x400122:	call	0x500020
<Block for 0x4000ab, 50 bytes>
0x4000ab:	mov	eax, 0xf9
0x4000b0:	sub	rax, qword ptr [rbp - 0x120]
0x4000b7:	mov	rdx, rax
0x4000ba:	mov	rcx, qword ptr [rbp - 0x128]
0x4000c1:	mov	rax, qword ptr [rbp - 0x120]
0x4000c8:	add	rcx, rax
0x4000cb:	mov	rax, qword ptr [rbp - 0x118]
0x4000d2:	mov	rsi, rax
0x4000d5:	mov	rdi, rcx
0x4000d8:	call	0x500018
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x400118
