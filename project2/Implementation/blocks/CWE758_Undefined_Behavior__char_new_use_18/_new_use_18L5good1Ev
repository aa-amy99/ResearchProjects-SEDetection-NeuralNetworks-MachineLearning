<Block for 0x40004d, 31 bytes>
0x40004d:	endbr64	
0x400051:	push	rbp
0x400052:	mov	rbp, rsp
0x400055:	sub	rsp, 0x10
0x400059:	nop	
0x40005a:	endbr64	
0x40005e:	mov	byte ptr [rbp - 0xa], 5
0x400062:	mov	edi, 1
0x400067:	call	0x500000
<Block for 0x40006c, 35 bytes>
0x40006c:	mov	qword ptr [rbp - 8], rax
0x400070:	mov	rax, qword ptr [rbp - 8]
0x400074:	movzx	edx, byte ptr [rbp - 0xa]
0x400078:	mov	byte ptr [rax], dl
0x40007a:	mov	rax, qword ptr [rbp - 8]
0x40007e:	movzx	eax, byte ptr [rax]
0x400081:	mov	byte ptr [rbp - 9], al
0x400084:	movsx	eax, byte ptr [rbp - 9]
0x400088:	mov	edi, eax
0x40008a:	call	0x500010
<Block for 0x40008f, 9 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 8]
0x400093:	test	rax, rax
0x400096:	je	0x4000a5
<Block for 0x4000a5, 3 bytes>
0x4000a5:	nop	
0x4000a6:	leave	
0x4000a7:	ret	
<Block for 0x400098, 13 bytes>
0x400098:	mov	esi, 1
0x40009d:	mov	rdi, rax
0x4000a0:	call	0x500008
