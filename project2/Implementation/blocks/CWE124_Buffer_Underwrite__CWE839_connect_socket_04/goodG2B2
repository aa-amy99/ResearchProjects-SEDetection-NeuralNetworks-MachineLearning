<Block for 0x400591, 43 bytes>
0x400591:	endbr64	
0x400595:	push	rbp
0x400596:	mov	rbp, rsp
0x400599:	sub	rsp, 0x40
0x40059d:	mov	rax, qword ptr fs:[0x28]
0x4005a6:	mov	qword ptr [rbp - 8], rax
0x4005aa:	xor	eax, eax
0x4005ac:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x4005b3:	mov	eax, 1
0x4005b8:	test	eax, eax
0x4005ba:	je	0x4005c3
<Block for 0x4005c3, 9 bytes>
0x4005c3:	mov	eax, 1
0x4005c8:	test	eax, eax
0x4005ca:	je	0x400638
<Block for 0x4005bc, 16 bytes>
0x4005bc:	mov	dword ptr [rbp - 0x38], 7
0x4005c3:	mov	eax, 1
0x4005c8:	test	eax, eax
0x4005ca:	je	0x400638
<Block for 0x400638, 16 bytes>
0x400638:	nop	
0x400639:	mov	rax, qword ptr [rbp - 8]
0x40063d:	xor	rax, qword ptr fs:[0x28]
0x400646:	je	0x40064d
<Block for 0x4005cc, 46 bytes>
0x4005cc:	mov	qword ptr [rbp - 0x30], 0
0x4005d4:	mov	qword ptr [rbp - 0x28], 0
0x4005dc:	mov	qword ptr [rbp - 0x20], 0
0x4005e4:	mov	qword ptr [rbp - 0x18], 0
0x4005ec:	mov	qword ptr [rbp - 0x10], 0
0x4005f4:	cmp	dword ptr [rbp - 0x38], 9
0x4005f8:	jg	0x40062c
<Block for 0x40064d, 2 bytes>
0x40064d:	leave	
0x40064e:	ret	
<Block for 0x400648, 5 bytes>
0x400648:	call	0x500050
<Block for 0x4005fa, 22 bytes>
0x4005fa:	mov	eax, dword ptr [rbp - 0x38]
0x4005fd:	cdqe	
0x4005ff:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400607:	mov	dword ptr [rbp - 0x34], 0
0x40060e:	jmp	0x400624
<Block for 0x40062c, 12 bytes>
0x40062c:	lea	rdi, [rip + 0x6d]
0x400633:	call	0x500048
<Block for 0x400624, 6 bytes>
0x400624:	cmp	dword ptr [rbp - 0x34], 9
0x400628:	jle	0x400610
<Block for 0x400610, 16 bytes>
0x400610:	mov	eax, dword ptr [rbp - 0x34]
0x400613:	cdqe	
0x400615:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400619:	mov	edi, eax
0x40061b:	call	0x500040
<Block for 0x40062a, 2 bytes>
0x40062a:	jmp	0x400638
<Block for 0x400620, 10 bytes>
0x400620:	add	dword ptr [rbp - 0x34], 1
0x400624:	cmp	dword ptr [rbp - 0x34], 9
0x400628:	jle	0x400610
