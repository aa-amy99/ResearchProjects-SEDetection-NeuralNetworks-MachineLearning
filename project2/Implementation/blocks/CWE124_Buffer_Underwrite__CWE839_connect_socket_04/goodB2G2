<Block for 0x400330, 47 bytes>
0x400330:	endbr64	
0x400334:	push	rbp
0x400335:	mov	rbp, rsp
0x400338:	sub	rsp, 0x50
0x40033c:	mov	rax, qword ptr fs:[0x28]
0x400345:	mov	qword ptr [rbp - 8], rax
0x400349:	xor	eax, eax
0x40034b:	mov	dword ptr [rbp - 0x50], 0xffffffff
0x400352:	mov	eax, 1
0x400357:	test	eax, eax
0x400359:	je	0x400431
<Block for 0x400431, 9 bytes>
0x400431:	mov	eax, 1
0x400436:	test	eax, eax
0x400438:	je	0x4004ae
<Block for 0x40035f, 27 bytes>
0x40035f:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x400366:	mov	edx, 6
0x40036b:	mov	esi, 1
0x400370:	mov	edi, 2
0x400375:	call	0x500000
<Block for 0x4004ae, 16 bytes>
0x4004ae:	nop	
0x4004af:	mov	rax, qword ptr [rbp - 8]
0x4004b3:	xor	rax, qword ptr fs:[0x28]
0x4004bc:	je	0x4004c3
<Block for 0x40043a, 46 bytes>
0x40043a:	mov	qword ptr [rbp - 0x40], 0
0x400442:	mov	qword ptr [rbp - 0x38], 0
0x40044a:	mov	qword ptr [rbp - 0x30], 0
0x400452:	mov	qword ptr [rbp - 0x28], 0
0x40045a:	mov	qword ptr [rbp - 0x20], 0
0x400462:	cmp	dword ptr [rbp - 0x50], 0
0x400466:	js	0x4004a0
<Block for 0x40037a, 13 bytes>
0x40037a:	mov	dword ptr [rbp - 0x48], eax
0x40037d:	cmp	dword ptr [rbp - 0x48], -1
0x400381:	je	0x40041d
<Block for 0x4004c3, 2 bytes>
0x4004c3:	leave	
0x4004c4:	ret	
<Block for 0x4004be, 5 bytes>
0x4004be:	call	0x500050
<Block for 0x4004a0, 12 bytes>
0x4004a0:	lea	rdi, [rip + 0x231]
0x4004a7:	call	0x500048
<Block for 0x400468, 6 bytes>
0x400468:	cmp	dword ptr [rbp - 0x50], 9
0x40046c:	jg	0x4004a0
<Block for 0x40041d, 3 bytes>
0x40041d:	nop	
0x40041e:	jmp	0x400421
<Block for 0x400387, 22 bytes>
0x400387:	lea	rax, [rbp - 0x40]
0x40038b:	mov	edx, 0x10
0x400390:	mov	esi, 0
0x400395:	mov	rdi, rax
0x400398:	call	0x500008
<Block for 0x4004ac, 2 bytes>
0x4004ac:	jmp	0x4004ae
<Block for 0x40046e, 22 bytes>
0x40046e:	mov	eax, dword ptr [rbp - 0x50]
0x400471:	cdqe	
0x400473:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x40047b:	mov	dword ptr [rbp - 0x4c], 0
0x400482:	jmp	0x400498
<Block for 0x400421, 6 bytes>
0x400421:	cmp	dword ptr [rbp - 0x48], -1
0x400425:	je	0x400431
<Block for 0x40039d, 18 bytes>
0x40039d:	mov	word ptr [rbp - 0x40], 2
0x4003a3:	lea	rdi, [rip + 0x2e6]
0x4003aa:	call	0x500010
<Block for 0x400498, 6 bytes>
0x400498:	cmp	dword ptr [rbp - 0x4c], 9
0x40049c:	jle	0x400484
<Block for 0x400427, 10 bytes>
0x400427:	mov	eax, dword ptr [rbp - 0x48]
0x40042a:	mov	edi, eax
0x40042c:	call	0x500038
<Block for 0x4003af, 13 bytes>
0x4003af:	mov	dword ptr [rbp - 0x3c], eax
0x4003b2:	mov	edi, 0x6987
0x4003b7:	call	0x500018
<Block for 0x400484, 16 bytes>
0x400484:	mov	eax, dword ptr [rbp - 0x4c]
0x400487:	cdqe	
0x400489:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40048d:	mov	edi, eax
0x40048f:	call	0x500040
<Block for 0x40049e, 2 bytes>
0x40049e:	jmp	0x4004ae
<Block for 0x4003bc, 26 bytes>
0x4003bc:	mov	word ptr [rbp - 0x3e], ax
0x4003c0:	lea	rcx, [rbp - 0x40]
0x4003c4:	mov	eax, dword ptr [rbp - 0x48]
0x4003c7:	mov	edx, 0x10
0x4003cc:	mov	rsi, rcx
0x4003cf:	mov	edi, eax
0x4003d1:	call	0x500020
<Block for 0x400494, 10 bytes>
0x400494:	add	dword ptr [rbp - 0x4c], 1
0x400498:	cmp	dword ptr [rbp - 0x4c], 9
0x40049c:	jle	0x400484
<Block for 0x4003d6, 5 bytes>
0x4003d6:	cmp	eax, -1
0x4003d9:	je	0x400420
<Block for 0x4003db, 24 bytes>
0x4003db:	lea	rsi, [rbp - 0x16]
0x4003df:	mov	eax, dword ptr [rbp - 0x48]
0x4003e2:	mov	ecx, 0
0x4003e7:	mov	edx, 0xd
0x4003ec:	mov	edi, eax
0x4003ee:	call	0x500028
<Block for 0x400420, 1 bytes>
0x400420:	nop	
<Block for 0x4003f3, 9 bytes>
0x4003f3:	mov	dword ptr [rbp - 0x44], eax
0x4003f6:	cmp	dword ptr [rbp - 0x44], -1
0x4003fa:	je	0x400421
<Block for 0x4003fc, 6 bytes>
0x4003fc:	cmp	dword ptr [rbp - 0x44], 0
0x400400:	je	0x400421
<Block for 0x400402, 22 bytes>
0x400402:	mov	eax, dword ptr [rbp - 0x44]
0x400405:	cdqe	
0x400407:	mov	byte ptr [rbp + rax - 0x16], 0
0x40040c:	lea	rax, [rbp - 0x16]
0x400410:	mov	rdi, rax
0x400413:	call	0x500030
<Block for 0x400418, 5 bytes>
0x400418:	mov	dword ptr [rbp - 0x50], eax
0x40041b:	jmp	0x400421
