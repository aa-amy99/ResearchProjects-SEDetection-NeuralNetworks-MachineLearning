<Block for 0x4000e8, 62 bytes>
0x4000e8:	endbr64	
0x4000ec:	push	rbp
0x4000ed:	mov	rbp, rsp
0x4000f0:	sub	rsp, 0x30
0x4000f4:	mov	qword ptr [rbp - 0x28], rdi
0x4000f8:	mov	rax, qword ptr fs:[0x28]
0x400101:	mov	qword ptr [rbp - 8], rax
0x400105:	xor	eax, eax
0x400107:	mov	rax, qword ptr [rbp - 0x28]
0x40010b:	mov	rax, qword ptr [rax]
0x40010e:	lea	rdx, [rbp - 0x14]
0x400112:	lea	rsi, [rip + 0x71]
0x400119:	mov	rdi, rax
0x40011c:	mov	eax, 0
0x400121:	call	0x500020
<Block for 0x400126, 10 bytes>
0x400126:	cmp	eax, 1
0x400129:	sete	al
0x40012c:	test	al, al
0x40012e:	je	0x400164
<Block for 0x400164, 16 bytes>
0x400164:	nop	
0x400165:	mov	rax, qword ptr [rbp - 8]
0x400169:	xor	rax, qword ptr fs:[0x28]
0x400172:	je	0x400179
<Block for 0x400130, 10 bytes>
0x400130:	mov	eax, dword ptr [rbp - 0x14]
0x400133:	cmp	eax, 0x270f
0x400138:	jg	0x400164
<Block for 0x400179, 2 bytes>
0x400179:	leave	
0x40017a:	ret	
<Block for 0x400174, 5 bytes>
0x400174:	call	0x500030
<Block for 0x40013a, 22 bytes>
0x40013a:	mov	dword ptr [rbp - 0xc], 0
0x400141:	mov	dword ptr [rbp - 0x10], 0
0x400148:	mov	eax, dword ptr [rbp - 0x14]
0x40014b:	cmp	dword ptr [rbp - 0x10], eax
0x40014e:	jge	0x40015a
<Block for 0x400150, 10 bytes>
0x400150:	add	dword ptr [rbp - 0xc], 1
0x400154:	add	dword ptr [rbp - 0x10], 1
0x400158:	jmp	0x400148
<Block for 0x40015a, 10 bytes>
0x40015a:	mov	eax, dword ptr [rbp - 0xc]
0x40015d:	mov	edi, eax
0x40015f:	call	0x500028
<Block for 0x400148, 8 bytes>
0x400148:	mov	eax, dword ptr [rbp - 0x14]
0x40014b:	cmp	dword ptr [rbp - 0x10], eax
0x40014e:	jge	0x40015a
