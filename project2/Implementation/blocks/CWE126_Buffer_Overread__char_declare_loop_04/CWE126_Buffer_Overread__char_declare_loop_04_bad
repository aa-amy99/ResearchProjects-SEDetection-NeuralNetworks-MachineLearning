<Block for 0x400000, 55 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x140
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0x120]
0x400025:	mov	edx, 0x31
0x40002a:	mov	esi, 0x41
0x40002f:	mov	rdi, rax
0x400032:	call	0x500000
<Block for 0x400037, 32 bytes>
0x400037:	mov	byte ptr [rbp - 0xef], 0
0x40003e:	lea	rax, [rbp - 0xe0]
0x400045:	mov	edx, 0x63
0x40004a:	mov	esi, 0x41
0x40004f:	mov	rdi, rax
0x400052:	call	0x500000
<Block for 0x400057, 13 bytes>
0x400057:	mov	byte ptr [rbp - 0x7d], 0
0x40005b:	mov	eax, 1
0x400060:	test	eax, eax
0x400062:	je	0x400072
<Block for 0x400072, 22 bytes>
0x400072:	lea	rax, [rbp - 0x70]
0x400076:	mov	edx, 0x63
0x40007b:	mov	esi, 0x43
0x400080:	mov	rdi, rax
0x400083:	call	0x500000
<Block for 0x400064, 36 bytes>
0x400064:	lea	rax, [rbp - 0x120]
0x40006b:	mov	qword ptr [rbp - 0x138], rax
0x400072:	lea	rax, [rbp - 0x70]
0x400076:	mov	edx, 0x63
0x40007b:	mov	esi, 0x43
0x400080:	mov	rdi, rax
0x400083:	call	0x500000
<Block for 0x400088, 16 bytes>
0x400088:	mov	byte ptr [rbp - 0xd], 0
0x40008c:	lea	rax, [rbp - 0x70]
0x400090:	mov	rdi, rax
0x400093:	call	0x500008
<Block for 0x400098, 20 bytes>
0x400098:	mov	qword ptr [rbp - 0x128], rax
0x40009f:	mov	qword ptr [rbp - 0x130], 0
0x4000aa:	jmp	0x4000d8
<Block for 0x4000d8, 16 bytes>
0x4000d8:	mov	rax, qword ptr [rbp - 0x130]
0x4000df:	cmp	rax, qword ptr [rbp - 0x128]
0x4000e6:	jb	0x4000ac
<Block for 0x4000ac, 60 bytes>
0x4000ac:	mov	rdx, qword ptr [rbp - 0x138]
0x4000b3:	mov	rax, qword ptr [rbp - 0x130]
0x4000ba:	add	rax, rdx
0x4000bd:	movzx	eax, byte ptr [rax]
0x4000c0:	lea	rcx, [rbp - 0x70]
0x4000c4:	mov	rdx, qword ptr [rbp - 0x130]
0x4000cb:	add	rdx, rcx
0x4000ce:	mov	byte ptr [rdx], al
0x4000d0:	add	qword ptr [rbp - 0x130], 1
0x4000d8:	mov	rax, qword ptr [rbp - 0x130]
0x4000df:	cmp	rax, qword ptr [rbp - 0x128]
0x4000e6:	jb	0x4000ac
<Block for 0x4000e8, 16 bytes>
0x4000e8:	mov	byte ptr [rbp - 0xd], 0
0x4000ec:	lea	rax, [rbp - 0x70]
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500010
<Block for 0x4000f8, 16 bytes>
0x4000f8:	nop	
0x4000f9:	mov	rax, qword ptr [rbp - 8]
0x4000fd:	xor	rax, qword ptr fs:[0x28]
0x400106:	je	0x40010d
<Block for 0x40010d, 2 bytes>
0x40010d:	leave	
0x40010e:	ret	
<Block for 0x400108, 5 bytes>
0x400108:	call	0x500018
