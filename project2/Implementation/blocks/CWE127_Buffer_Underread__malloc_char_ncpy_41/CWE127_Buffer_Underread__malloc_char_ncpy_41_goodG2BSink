<Block for 0x4000f1, 53 bytes>
0x4000f1:	endbr64	
0x4000f5:	push	rbp
0x4000f6:	mov	rbp, rsp
0x4000f9:	add	rsp, -0x80
0x4000fd:	mov	qword ptr [rbp - 0x78], rdi
0x400101:	mov	rax, qword ptr fs:[0x28]
0x40010a:	mov	qword ptr [rbp - 8], rax
0x40010e:	xor	eax, eax
0x400110:	lea	rax, [rbp - 0x70]
0x400114:	mov	edx, 0x63
0x400119:	mov	esi, 0x43
0x40011e:	mov	rdi, rax
0x400121:	call	0x500000
<Block for 0x400126, 16 bytes>
0x400126:	mov	byte ptr [rbp - 0xd], 0
0x40012a:	lea	rax, [rbp - 0x70]
0x40012e:	mov	rdi, rax
0x400131:	call	0x500008
<Block for 0x400136, 22 bytes>
0x400136:	mov	rdx, rax
0x400139:	mov	rcx, qword ptr [rbp - 0x78]
0x40013d:	lea	rax, [rbp - 0x70]
0x400141:	mov	rsi, rcx
0x400144:	mov	rdi, rax
0x400147:	call	0x500010
<Block for 0x40014c, 16 bytes>
0x40014c:	mov	byte ptr [rbp - 0xd], 0
0x400150:	lea	rax, [rbp - 0x70]
0x400154:	mov	rdi, rax
0x400157:	call	0x500018
<Block for 0x40015c, 16 bytes>
0x40015c:	nop	
0x40015d:	mov	rax, qword ptr [rbp - 8]
0x400161:	xor	rax, qword ptr fs:[0x28]
0x40016a:	je	0x400171
<Block for 0x400171, 2 bytes>
0x400171:	leave	
0x400172:	ret	
<Block for 0x40016c, 5 bytes>
0x40016c:	call	0x500020
