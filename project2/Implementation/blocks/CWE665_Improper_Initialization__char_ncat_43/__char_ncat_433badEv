<Block for 0x40000f, 59 bytes>
0x40000f:	endbr64	
0x400013:	push	rbp
0x400014:	mov	rbp, rsp
0x400017:	sub	rsp, 0xf0
0x40001e:	mov	rax, qword ptr fs:[0x28]
0x400027:	mov	qword ptr [rbp - 8], rax
0x40002b:	xor	eax, eax
0x40002d:	lea	rax, [rbp - 0xe0]
0x400034:	mov	qword ptr [rbp - 0xf0], rax
0x40003b:	lea	rax, [rbp - 0xf0]
0x400042:	mov	rdi, rax
0x400045:	call	0x400000
<Block for 0x40004a, 22 bytes>
0x40004a:	lea	rax, [rbp - 0x70]
0x40004e:	mov	edx, 0x63
0x400053:	mov	esi, 0x43
0x400058:	mov	rdi, rax
0x40005b:	call	0x500000
<Block for 0x400060, 16 bytes>
0x400060:	mov	byte ptr [rbp - 0xd], 0
0x400064:	lea	rax, [rbp - 0x70]
0x400068:	mov	rdi, rax
0x40006b:	call	0x500008
<Block for 0x400070, 36 bytes>
0x400070:	mov	qword ptr [rbp - 0xe8], rax
0x400077:	mov	rax, qword ptr [rbp - 0xf0]
0x40007e:	mov	rdx, qword ptr [rbp - 0xe8]
0x400085:	lea	rcx, [rbp - 0x70]
0x400089:	mov	rsi, rcx
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500010
<Block for 0x400094, 15 bytes>
0x400094:	mov	rax, qword ptr [rbp - 0xf0]
0x40009b:	mov	rdi, rax
0x40009e:	call	0x500018
<Block for 0x4000a3, 16 bytes>
0x4000a3:	nop	
0x4000a4:	mov	rax, qword ptr [rbp - 8]
0x4000a8:	xor	rax, qword ptr fs:[0x28]
0x4000b1:	je	0x4000b8
<Block for 0x4000b8, 2 bytes>
0x4000b8:	leave	
0x4000b9:	ret	
<Block for 0x4000b3, 5 bytes>
0x4000b3:	call	0x500020
