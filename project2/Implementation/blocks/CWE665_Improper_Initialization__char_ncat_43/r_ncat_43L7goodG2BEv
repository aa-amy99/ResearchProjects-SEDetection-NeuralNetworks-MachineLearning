<Block for 0x4000d3, 59 bytes>
0x4000d3:	endbr64	
0x4000d7:	push	rbp
0x4000d8:	mov	rbp, rsp
0x4000db:	sub	rsp, 0xf0
0x4000e2:	mov	rax, qword ptr fs:[0x28]
0x4000eb:	mov	qword ptr [rbp - 8], rax
0x4000ef:	xor	eax, eax
0x4000f1:	lea	rax, [rbp - 0xe0]
0x4000f8:	mov	qword ptr [rbp - 0xf0], rax
0x4000ff:	lea	rax, [rbp - 0xf0]
0x400106:	mov	rdi, rax
0x400109:	call	0x4000ba
<Block for 0x40010e, 22 bytes>
0x40010e:	lea	rax, [rbp - 0x70]
0x400112:	mov	edx, 0x63
0x400117:	mov	esi, 0x43
0x40011c:	mov	rdi, rax
0x40011f:	call	0x500000
<Block for 0x400124, 16 bytes>
0x400124:	mov	byte ptr [rbp - 0xd], 0
0x400128:	lea	rax, [rbp - 0x70]
0x40012c:	mov	rdi, rax
0x40012f:	call	0x500008
<Block for 0x400134, 36 bytes>
0x400134:	mov	qword ptr [rbp - 0xe8], rax
0x40013b:	mov	rax, qword ptr [rbp - 0xf0]
0x400142:	mov	rdx, qword ptr [rbp - 0xe8]
0x400149:	lea	rcx, [rbp - 0x70]
0x40014d:	mov	rsi, rcx
0x400150:	mov	rdi, rax
0x400153:	call	0x500010
<Block for 0x400158, 15 bytes>
0x400158:	mov	rax, qword ptr [rbp - 0xf0]
0x40015f:	mov	rdi, rax
0x400162:	call	0x500018
<Block for 0x400167, 16 bytes>
0x400167:	nop	
0x400168:	mov	rax, qword ptr [rbp - 8]
0x40016c:	xor	rax, qword ptr fs:[0x28]
0x400175:	je	0x40017c
<Block for 0x40017c, 2 bytes>
0x40017c:	leave	
0x40017d:	ret	
<Block for 0x400177, 5 bytes>
0x400177:	call	0x500020
