<Block for 0x40020a, 225 bytes>
0x40020a:	endbr64	
0x40020e:	push	rbp
0x40020f:	mov	rbp, rsp
0x400212:	add	rsp, -0x80
0x400216:	mov	rax, qword ptr fs:[0x28]
0x40021f:	mov	qword ptr [rbp - 8], rax
0x400223:	xor	eax, eax
0x400225:	mov	qword ptr [rbp - 0x70], 0
0x40022d:	mov	qword ptr [rbp - 0x68], 0
0x400235:	mov	qword ptr [rbp - 0x60], 0
0x40023d:	mov	qword ptr [rbp - 0x58], 0
0x400245:	mov	qword ptr [rbp - 0x50], 0
0x40024d:	mov	qword ptr [rbp - 0x48], 0
0x400255:	mov	qword ptr [rbp - 0x40], 0
0x40025d:	mov	qword ptr [rbp - 0x38], 0
0x400265:	mov	qword ptr [rbp - 0x30], 0
0x40026d:	mov	qword ptr [rbp - 0x28], 0
0x400275:	mov	qword ptr [rbp - 0x20], 0
0x40027d:	mov	qword ptr [rbp - 0x18], 0
0x400285:	mov	dword ptr [rbp - 0x10], 0
0x40028c:	lea	rax, [rbp - 0x70]
0x400290:	mov	qword ptr [rbp - 0x78], rax
0x400294:	mov	rax, qword ptr [rbp - 0x78]
0x400298:	movabs	rdx, 0x6867666564636261
0x4002a2:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4002ac:	mov	qword ptr [rax], rdx
0x4002af:	mov	qword ptr [rax + 8], rcx
0x4002b3:	movabs	rsi, 0x7877767574737271
0x4002bd:	mov	qword ptr [rax + 0x10], rsi
0x4002c1:	mov	word ptr [rax + 0x18], 0x7a79
0x4002c7:	mov	byte ptr [rax + 0x1a], 0
0x4002cb:	mov	rax, qword ptr [rbp - 0x78]
0x4002cf:	lea	rcx, [rax + 4]
0x4002d3:	mov	rax, qword ptr [rbp - 0x78]
0x4002d7:	add	rax, 6
0x4002db:	mov	edx, 0xa
0x4002e0:	mov	rsi, rcx
0x4002e3:	mov	rdi, rax
0x4002e6:	call	0x500018
<Block for 0x4002eb, 12 bytes>
0x4002eb:	mov	rax, qword ptr [rbp - 0x78]
0x4002ef:	mov	rdi, rax
0x4002f2:	call	0x500008
<Block for 0x4002f7, 17 bytes>
0x4002f7:	nop	
0x4002f8:	nop	
0x4002f9:	mov	rax, qword ptr [rbp - 8]
0x4002fd:	xor	rax, qword ptr fs:[0x28]
0x400306:	je	0x40030d
<Block for 0x40030d, 2 bytes>
0x40030d:	leave	
0x40030e:	ret	
<Block for 0x400308, 5 bytes>
0x400308:	call	0x500010
