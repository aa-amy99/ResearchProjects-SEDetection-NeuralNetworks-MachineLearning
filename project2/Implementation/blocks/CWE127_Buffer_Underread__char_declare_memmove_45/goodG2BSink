<Block for 0x4000ec, 60 bytes>
0x4000ec:	endbr64	
0x4000f0:	push	rbp
0x4000f1:	mov	rbp, rsp
0x4000f4:	add	rsp, -0x80
0x4000f8:	mov	rax, qword ptr fs:[0x28]
0x400101:	mov	qword ptr [rbp - 8], rax
0x400105:	xor	eax, eax
0x400107:	mov	rax, qword ptr [rip + 0xea]
0x40010e:	mov	qword ptr [rbp - 0x78], rax
0x400112:	lea	rax, [rbp - 0x70]
0x400116:	mov	edx, 0x63
0x40011b:	mov	esi, 0x43
0x400120:	mov	rdi, rax
0x400123:	call	0x500000
<Block for 0x400128, 28 bytes>
0x400128:	mov	byte ptr [rbp - 0xd], 0
0x40012c:	mov	rcx, qword ptr [rbp - 0x78]
0x400130:	lea	rax, [rbp - 0x70]
0x400134:	mov	edx, 0x64
0x400139:	mov	rsi, rcx
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500008
<Block for 0x400144, 16 bytes>
0x400144:	mov	byte ptr [rbp - 0xd], 0
0x400148:	lea	rax, [rbp - 0x70]
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500010
<Block for 0x400154, 16 bytes>
0x400154:	nop	
0x400155:	mov	rax, qword ptr [rbp - 8]
0x400159:	xor	rax, qword ptr fs:[0x28]
0x400162:	je	0x400169
<Block for 0x400169, 2 bytes>
0x400169:	leave	
0x40016a:	ret	
<Block for 0x400164, 5 bytes>
0x400164:	call	0x500018
