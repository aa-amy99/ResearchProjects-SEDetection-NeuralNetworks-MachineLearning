<Block for 0x400190, 37 bytes>
0x400190:	endbr64	
0x400194:	push	rbp
0x400195:	mov	rbp, rsp
0x400198:	sub	rsp, 0x20
0x40019c:	mov	rax, qword ptr fs:[0x28]
0x4001a5:	mov	qword ptr [rbp - 8], rax
0x4001a9:	xor	eax, eax
0x4001ab:	mov	eax, 0
0x4001b0:	call	0x500040
<Block for 0x4001b5, 4 bytes>
0x4001b5:	test	eax, eax
0x4001b7:	je	0x4001ca
<Block for 0x4001ca, 35 bytes>
0x4001ca:	mov	qword ptr [rbp - 0x18], 0
0x4001d2:	mov	qword ptr [rbp - 0x10], 0
0x4001da:	mov	dword ptr [rbp - 0x1c], 0
0x4001e1:	lea	rdi, [rip + 0x208]
0x4001e8:	call	0x500050
<Block for 0x4001b9, 12 bytes>
0x4001b9:	lea	rdi, [rip + 0x238]
0x4001c0:	call	0x500048
<Block for 0x4001ed, 8 bytes>
0x4001ed:	test	eax, eax
0x4001ef:	je	0x4002a0
<Block for 0x4001c5, 5 bytes>
0x4001c5:	jmp	0x4002a1
<Block for 0x4001f5, 23 bytes>
0x4001f5:	lea	rdx, [rbp - 0x18]
0x4001f9:	lea	rax, [rbp - 0x1c]
0x4001fd:	mov	rsi, rax
0x400200:	lea	rdi, [rip - 0x1ca]
0x400207:	call	0x500018
<Block for 0x4002a0, 1 bytes>
0x4002a0:	nop	
<Block for 0x4002a1, 15 bytes>
0x4002a1:	mov	rax, qword ptr [rbp - 8]
0x4002a5:	xor	rax, qword ptr fs:[0x28]
0x4002ae:	je	0x4002b5
<Block for 0x40020c, 4 bytes>
0x40020c:	test	eax, eax
0x40020e:	jne	0x400218
<Block for 0x4002b5, 2 bytes>
0x4002b5:	leave	
0x4002b6:	ret	
<Block for 0x4002b0, 5 bytes>
0x4002b0:	call	0x500038
<Block for 0x400210, 31 bytes>
0x400210:	mov	qword ptr [rbp - 0x18], 0
0x400218:	lea	rdx, [rbp - 0x10]
0x40021c:	lea	rax, [rbp - 0x1c]
0x400220:	mov	rsi, rax
0x400223:	lea	rdi, [rip - 0x1ed]
0x40022a:	call	0x500018
<Block for 0x400218, 23 bytes>
0x400218:	lea	rdx, [rbp - 0x10]
0x40021c:	lea	rax, [rbp - 0x1c]
0x400220:	mov	rsi, rax
0x400223:	lea	rdi, [rip - 0x1ed]
0x40022a:	call	0x500018
<Block for 0x40022f, 4 bytes>
0x40022f:	test	eax, eax
0x400231:	jne	0x40023b
<Block for 0x400233, 17 bytes>
0x400233:	mov	qword ptr [rbp - 0x10], 0
0x40023b:	mov	rax, qword ptr [rbp - 0x18]
0x40023f:	test	rax, rax
0x400242:	je	0x400260
<Block for 0x40023b, 9 bytes>
0x40023b:	mov	rax, qword ptr [rbp - 0x18]
0x40023f:	test	rax, rax
0x400242:	je	0x400260
<Block for 0x400260, 9 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x10]
0x400264:	test	rax, rax
0x400267:	je	0x400285
<Block for 0x400244, 12 bytes>
0x400244:	mov	rax, qword ptr [rbp - 0x18]
0x400248:	mov	rdi, rax
0x40024b:	call	0x500020
<Block for 0x400285, 15 bytes>
0x400285:	mov	rax, qword ptr [rip + 0x164]
0x40028c:	mov	rdi, rax
0x40028f:	call	0x500058
<Block for 0x400269, 12 bytes>
0x400269:	mov	rax, qword ptr [rbp - 0x10]
0x40026d:	mov	rdi, rax
0x400270:	call	0x500020
<Block for 0x400250, 4 bytes>
0x400250:	test	eax, eax
0x400252:	je	0x400260
<Block for 0x400294, 10 bytes>
0x400294:	mov	eax, dword ptr [rbp - 0x1c]
0x400297:	mov	edi, eax
0x400299:	call	0x500030
<Block for 0x400275, 4 bytes>
0x400275:	test	eax, eax
0x400277:	je	0x400285
<Block for 0x400254, 12 bytes>
0x400254:	mov	rax, qword ptr [rbp - 0x18]
0x400258:	mov	rdi, rax
0x40025b:	call	0x500028
<Block for 0x40029e, 2 bytes>
0x40029e:	jmp	0x4002a1
<Block for 0x400279, 12 bytes>
0x400279:	mov	rax, qword ptr [rbp - 0x10]
0x40027d:	mov	rdi, rax
0x400280:	call	0x500028
