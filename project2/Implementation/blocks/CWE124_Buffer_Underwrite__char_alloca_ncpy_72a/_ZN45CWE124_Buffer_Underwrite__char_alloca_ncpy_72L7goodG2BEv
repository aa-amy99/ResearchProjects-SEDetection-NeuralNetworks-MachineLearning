<Block for 0x40021e, 40 bytes>
0x40021e:	endbr64	
0x400222:	push	rbp
0x400223:	mov	rbp, rsp
0x400226:	push	rbx
0x400227:	sub	rsp, 0x68
0x40022b:	mov	rax, qword ptr fs:[0x28]
0x400234:	mov	qword ptr [rbp - 0x18], rax
0x400238:	xor	eax, eax
0x40023a:	lea	rax, [rbp - 0x50]
0x40023e:	mov	rdi, rax
0x400241:	call	0x4004b6
<Block for 0x400246, 54 bytes>
0x400246:	mov	eax, 0x10
0x40024b:	sub	rax, 1
0x40024f:	add	rax, 0x6c
0x400253:	mov	ebx, 0x10
0x400258:	mov	edx, 0
0x40025d:	div	rbx
0x400260:	imul	rax, rax, 0x10
0x400264:	mov	rdx, rax
0x400267:	and	rdx, 0xfffffffffffff000
0x40026e:	mov	rcx, rsp
0x400271:	sub	rcx, rdx
0x400274:	mov	rdx, rcx
0x400277:	cmp	rsp, rdx
0x40027a:	je	0x40028e
<Block for 0x40028e, 26 bytes>
0x40028e:	mov	rdx, rax
0x400291:	and	edx, 0xfff
0x400297:	sub	rsp, rdx
0x40029a:	mov	rdx, rax
0x40029d:	and	edx, 0xfff
0x4002a3:	test	rdx, rdx
0x4002a6:	je	0x4002b8
<Block for 0x40027c, 18 bytes>
0x40027c:	sub	rsp, 0x1000
0x400283:	or	qword ptr [rsp + 0xff8], 0
0x40028c:	jmp	0x400277
<Block for 0x4002b8, 41 bytes>
0x4002b8:	mov	rax, rsp
0x4002bb:	add	rax, 0xf
0x4002bf:	shr	rax, 4
0x4002c3:	shl	rax, 4
0x4002c7:	mov	qword ptr [rbp - 0x58], rax
0x4002cb:	mov	rax, qword ptr [rbp - 0x58]
0x4002cf:	mov	edx, 0x63
0x4002d4:	mov	esi, 0x41
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x500000
<Block for 0x4002a8, 57 bytes>
0x4002a8:	and	eax, 0xfff
0x4002ad:	sub	rax, 8
0x4002b1:	add	rax, rsp
0x4002b4:	or	qword ptr [rax], 0
0x4002b8:	mov	rax, rsp
0x4002bb:	add	rax, 0xf
0x4002bf:	shr	rax, 4
0x4002c3:	shl	rax, 4
0x4002c7:	mov	qword ptr [rbp - 0x58], rax
0x4002cb:	mov	rax, qword ptr [rbp - 0x58]
0x4002cf:	mov	edx, 0x63
0x4002d4:	mov	esi, 0x41
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x500000
<Block for 0x400277, 5 bytes>
0x400277:	cmp	rsp, rdx
0x40027a:	je	0x40028e
<Block for 0x4002e1, 31 bytes>
0x4002e1:	mov	rax, qword ptr [rbp - 0x58]
0x4002e5:	add	rax, 0x63
0x4002e9:	mov	byte ptr [rax], 0
0x4002ec:	mov	rax, qword ptr [rbp - 0x58]
0x4002f0:	mov	qword ptr [rbp - 0x68], rax
0x4002f4:	lea	rax, [rbp - 0x50]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x40064a
<Block for 0x400300, 23 bytes>
0x400300:	mov	qword ptr [rbp - 0x60], rax
0x400304:	lea	rdx, [rbp - 0x60]
0x400308:	lea	rax, [rbp - 0x30]
0x40030c:	mov	rsi, rdx
0x40030f:	mov	rdi, rax
0x400312:	call	0x40069a
<Block for 0x400317, 28 bytes>
0x400317:	lea	rdx, [rbp - 0x68]
0x40031b:	mov	rsi, qword ptr [rbp - 0x30]
0x40031f:	lea	rax, [rbp - 0x50]
0x400323:	mov	rcx, rdx
0x400326:	mov	edx, 1
0x40032b:	mov	rdi, rax
0x40032e:	call	0x4006c8
<Block for 0x400333, 12 bytes>
0x400333:	lea	rax, [rbp - 0x50]
0x400337:	mov	rdi, rax
0x40033a:	call	0x40064a
<Block for 0x40033f, 23 bytes>
0x40033f:	mov	qword ptr [rbp - 0x60], rax
0x400343:	lea	rdx, [rbp - 0x60]
0x400347:	lea	rax, [rbp - 0x30]
0x40034b:	mov	rsi, rdx
0x40034e:	mov	rdi, rax
0x400351:	call	0x40069a
<Block for 0x400356, 28 bytes>
0x400356:	lea	rdx, [rbp - 0x68]
0x40035a:	mov	rsi, qword ptr [rbp - 0x30]
0x40035e:	lea	rax, [rbp - 0x50]
0x400362:	mov	rcx, rdx
0x400365:	mov	edx, 1
0x40036a:	mov	rdi, rax
0x40036d:	call	0x4006c8
<Block for 0x400372, 12 bytes>
0x400372:	lea	rax, [rbp - 0x50]
0x400376:	mov	rdi, rax
0x400379:	call	0x40064a
<Block for 0x40037e, 23 bytes>
0x40037e:	mov	qword ptr [rbp - 0x60], rax
0x400382:	lea	rdx, [rbp - 0x60]
0x400386:	lea	rax, [rbp - 0x30]
0x40038a:	mov	rsi, rdx
0x40038d:	mov	rdi, rax
0x400390:	call	0x40069a
<Block for 0x400395, 28 bytes>
0x400395:	lea	rdx, [rbp - 0x68]
0x400399:	mov	rsi, qword ptr [rbp - 0x30]
0x40039d:	lea	rax, [rbp - 0x50]
0x4003a1:	mov	rcx, rdx
0x4003a4:	mov	edx, 1
0x4003a9:	mov	rdi, rax
0x4003ac:	call	0x4006c8
<Block for 0x4003b1, 19 bytes>
0x4003b1:	lea	rdx, [rbp - 0x50]
0x4003b5:	lea	rax, [rbp - 0x30]
0x4003b9:	mov	rsi, rdx
0x4003bc:	mov	rdi, rax
0x4003bf:	call	0x40078e
<Block for 0x4003c4, 12 bytes>
0x4003c4:	lea	rax, [rbp - 0x30]
0x4003c8:	mov	rdi, rax
0x4003cb:	call	0x500020
<Block for 0x4003d0, 12 bytes>
0x4003d0:	lea	rax, [rbp - 0x30]
0x4003d4:	mov	rdi, rax
0x4003d7:	call	0x400602
<Block for 0x4003dc, 12 bytes>
0x4003dc:	lea	rax, [rbp - 0x50]
0x4003e0:	mov	rdi, rax
0x4003e3:	call	0x400602
<Block for 0x4003e8, 16 bytes>
0x4003e8:	nop	
0x4003e9:	mov	rax, qword ptr [rbp - 0x18]
0x4003ed:	xor	rax, qword ptr fs:[0x28]
0x4003f6:	je	0x400432
<Block for 0x400432, 6 bytes>
0x400432:	mov	rbx, qword ptr [rbp - 8]
0x400436:	leave	
0x400437:	ret	
<Block for 0x4003f8, 2 bytes>
0x4003f8:	jmp	0x40042d
<Block for 0x40042d, 5 bytes>
0x40042d:	call	0x500018
