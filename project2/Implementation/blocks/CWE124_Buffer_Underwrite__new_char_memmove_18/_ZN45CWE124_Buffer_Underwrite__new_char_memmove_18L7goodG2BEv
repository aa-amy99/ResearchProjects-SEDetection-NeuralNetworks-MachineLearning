<Block for 0x4000c3, 50 bytes>
0x4000c3:	endbr64	
0x4000c7:	push	rbp
0x4000c8:	mov	rbp, rsp
0x4000cb:	add	rsp, -0x80
0x4000cf:	mov	rax, qword ptr fs:[0x28]
0x4000d8:	mov	qword ptr [rbp - 8], rax
0x4000dc:	xor	eax, eax
0x4000de:	mov	qword ptr [rbp - 0x80], 0
0x4000e6:	nop	
0x4000e7:	endbr64	
0x4000eb:	mov	edi, 0x64
0x4000f0:	call	0x500000
<Block for 0x4000f5, 26 bytes>
0x4000f5:	mov	qword ptr [rbp - 0x78], rax
0x4000f9:	mov	rax, qword ptr [rbp - 0x78]
0x4000fd:	mov	edx, 0x63
0x400102:	mov	esi, 0x41
0x400107:	mov	rdi, rax
0x40010a:	call	0x500008
<Block for 0x40010f, 41 bytes>
0x40010f:	mov	rax, qword ptr [rbp - 0x78]
0x400113:	add	rax, 0x63
0x400117:	mov	byte ptr [rax], 0
0x40011a:	mov	rax, qword ptr [rbp - 0x78]
0x40011e:	mov	qword ptr [rbp - 0x80], rax
0x400122:	lea	rax, [rbp - 0x70]
0x400126:	mov	edx, 0x63
0x40012b:	mov	esi, 0x43
0x400130:	mov	rdi, rax
0x400133:	call	0x500008
<Block for 0x400138, 28 bytes>
0x400138:	mov	byte ptr [rbp - 0xd], 0
0x40013c:	lea	rcx, [rbp - 0x70]
0x400140:	mov	rax, qword ptr [rbp - 0x80]
0x400144:	mov	edx, 0x64
0x400149:	mov	rsi, rcx
0x40014c:	mov	rdi, rax
0x40014f:	call	0x500010
<Block for 0x400154, 23 bytes>
0x400154:	mov	rax, qword ptr [rbp - 0x80]
0x400158:	add	rax, 0x63
0x40015c:	mov	byte ptr [rax], 0
0x40015f:	mov	rax, qword ptr [rbp - 0x80]
0x400163:	mov	rdi, rax
0x400166:	call	0x500018
<Block for 0x40016b, 16 bytes>
0x40016b:	nop	
0x40016c:	mov	rax, qword ptr [rbp - 8]
0x400170:	xor	rax, qword ptr fs:[0x28]
0x400179:	je	0x400180
<Block for 0x400180, 2 bytes>
0x400180:	leave	
0x400181:	ret	
<Block for 0x40017b, 5 bytes>
0x40017b:	call	0x500020
