<Block for 0x400000, 50 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	qword ptr [rbp - 0x80], 0
0x400023:	nop	
0x400024:	endbr64	
0x400028:	mov	edi, 0x64
0x40002d:	call	0x500000
<Block for 0x400032, 26 bytes>
0x400032:	mov	qword ptr [rbp - 0x78], rax
0x400036:	mov	rax, qword ptr [rbp - 0x78]
0x40003a:	mov	edx, 0x63
0x40003f:	mov	esi, 0x41
0x400044:	mov	rdi, rax
0x400047:	call	0x500008
<Block for 0x40004c, 45 bytes>
0x40004c:	mov	rax, qword ptr [rbp - 0x78]
0x400050:	add	rax, 0x63
0x400054:	mov	byte ptr [rax], 0
0x400057:	mov	rax, qword ptr [rbp - 0x78]
0x40005b:	sub	rax, 8
0x40005f:	mov	qword ptr [rbp - 0x80], rax
0x400063:	lea	rax, [rbp - 0x70]
0x400067:	mov	edx, 0x63
0x40006c:	mov	esi, 0x43
0x400071:	mov	rdi, rax
0x400074:	call	0x500008
<Block for 0x400079, 28 bytes>
0x400079:	mov	byte ptr [rbp - 0xd], 0
0x40007d:	lea	rcx, [rbp - 0x70]
0x400081:	mov	rax, qword ptr [rbp - 0x80]
0x400085:	mov	edx, 0x64
0x40008a:	mov	rsi, rcx
0x40008d:	mov	rdi, rax
0x400090:	call	0x500010
<Block for 0x400095, 23 bytes>
0x400095:	mov	rax, qword ptr [rbp - 0x80]
0x400099:	add	rax, 0x63
0x40009d:	mov	byte ptr [rax], 0
0x4000a0:	mov	rax, qword ptr [rbp - 0x80]
0x4000a4:	mov	rdi, rax
0x4000a7:	call	0x500018
<Block for 0x4000ac, 16 bytes>
0x4000ac:	nop	
0x4000ad:	mov	rax, qword ptr [rbp - 8]
0x4000b1:	xor	rax, qword ptr fs:[0x28]
0x4000ba:	je	0x4000c1
<Block for 0x4000c1, 2 bytes>
0x4000c1:	leave	
0x4000c2:	ret	
<Block for 0x4000bc, 5 bytes>
0x4000bc:	call	0x500020
