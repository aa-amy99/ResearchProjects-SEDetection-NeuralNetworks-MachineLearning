<Block for 0x40005c, 22 bytes>
0x40005c:	endbr64	
0x400060:	push	rbp
0x400061:	mov	rbp, rsp
0x400064:	sub	rsp, 0x10
0x400068:	mov	eax, 0
0x40006d:	call	0x500000
<Block for 0x400072, 4 bytes>
0x400072:	test	eax, eax
0x400074:	je	0x40009a
<Block for 0x40009a, 17 bytes>
0x40009a:	mov	dword ptr [rbp - 8], 0
0x4000a1:	mov	eax, dword ptr [rbp - 8]
0x4000a4:	mov	edi, eax
0x4000a6:	call	0x500008
<Block for 0x400076, 17 bytes>
0x400076:	mov	dword ptr [rbp - 4], 0
0x40007d:	mov	eax, dword ptr [rbp - 4]
0x400080:	mov	edi, eax
0x400082:	call	0x500008
<Block for 0x4000ab, 17 bytes>
0x4000ab:	mov	dword ptr [rbp - 8], 5
0x4000b2:	mov	eax, dword ptr [rbp - 8]
0x4000b5:	mov	edi, eax
0x4000b7:	call	0x500008
<Block for 0x400087, 17 bytes>
0x400087:	mov	dword ptr [rbp - 4], 5
0x40008e:	mov	eax, dword ptr [rbp - 4]
0x400091:	mov	edi, eax
0x400093:	call	0x500008
<Block for 0x4000bc, 3 bytes>
0x4000bc:	nop	
0x4000bd:	leave	
0x4000be:	ret	
<Block for 0x400098, 2 bytes>
0x400098:	jmp	0x4000bc
