<Block for 0x4002ed, 40 bytes>
0x4002ed:	endbr64	
0x4002f1:	push	rbp
0x4002f2:	mov	rbp, rsp
0x4002f5:	push	rbx
0x4002f6:	sub	rsp, 0x58
0x4002fa:	mov	rax, qword ptr fs:[0x28]
0x400303:	mov	qword ptr [rbp - 0x18], rax
0x400307:	xor	eax, eax
0x400309:	lea	rax, [rbp - 0x50]
0x40030d:	mov	rdi, rax
0x400310:	call	0x4004ea
<Block for 0x400315, 20 bytes>
0x400315:	mov	qword ptr [rbp - 0x60], 0
0x40031d:	lea	rax, [rbp - 0x50]
0x400321:	mov	rdi, rax
0x400324:	call	0x400692
<Block for 0x400329, 23 bytes>
0x400329:	mov	qword ptr [rbp - 0x58], rax
0x40032d:	lea	rdx, [rbp - 0x58]
0x400331:	lea	rax, [rbp - 0x30]
0x400335:	mov	rsi, rdx
0x400338:	mov	rdi, rax
0x40033b:	call	0x4006e2
<Block for 0x400340, 28 bytes>
0x400340:	lea	rdx, [rbp - 0x60]
0x400344:	mov	rsi, qword ptr [rbp - 0x30]
0x400348:	lea	rax, [rbp - 0x50]
0x40034c:	mov	rcx, rdx
0x40034f:	mov	edx, 1
0x400354:	mov	rdi, rax
0x400357:	call	0x400710
<Block for 0x40035c, 12 bytes>
0x40035c:	lea	rax, [rbp - 0x50]
0x400360:	mov	rdi, rax
0x400363:	call	0x400692
<Block for 0x400368, 23 bytes>
0x400368:	mov	qword ptr [rbp - 0x58], rax
0x40036c:	lea	rdx, [rbp - 0x58]
0x400370:	lea	rax, [rbp - 0x30]
0x400374:	mov	rsi, rdx
0x400377:	mov	rdi, rax
0x40037a:	call	0x4006e2
<Block for 0x40037f, 28 bytes>
0x40037f:	lea	rdx, [rbp - 0x60]
0x400383:	mov	rsi, qword ptr [rbp - 0x30]
0x400387:	lea	rax, [rbp - 0x50]
0x40038b:	mov	rcx, rdx
0x40038e:	mov	edx, 1
0x400393:	mov	rdi, rax
0x400396:	call	0x400710
<Block for 0x40039b, 12 bytes>
0x40039b:	lea	rax, [rbp - 0x50]
0x40039f:	mov	rdi, rax
0x4003a2:	call	0x400692
<Block for 0x4003a7, 23 bytes>
0x4003a7:	mov	qword ptr [rbp - 0x58], rax
0x4003ab:	lea	rdx, [rbp - 0x58]
0x4003af:	lea	rax, [rbp - 0x30]
0x4003b3:	mov	rsi, rdx
0x4003b6:	mov	rdi, rax
0x4003b9:	call	0x4006e2
<Block for 0x4003be, 28 bytes>
0x4003be:	lea	rdx, [rbp - 0x60]
0x4003c2:	mov	rsi, qword ptr [rbp - 0x30]
0x4003c6:	lea	rax, [rbp - 0x50]
0x4003ca:	mov	rcx, rdx
0x4003cd:	mov	edx, 1
0x4003d2:	mov	rdi, rax
0x4003d5:	call	0x400710
<Block for 0x4003da, 19 bytes>
0x4003da:	lea	rdx, [rbp - 0x50]
0x4003de:	lea	rax, [rbp - 0x30]
0x4003e2:	mov	rsi, rdx
0x4003e5:	mov	rdi, rax
0x4003e8:	call	0x4007d6
<Block for 0x4003ed, 12 bytes>
0x4003ed:	lea	rax, [rbp - 0x30]
0x4003f1:	mov	rdi, rax
0x4003f4:	call	0x500020
<Block for 0x4003f9, 12 bytes>
0x4003f9:	lea	rax, [rbp - 0x30]
0x4003fd:	mov	rdi, rax
0x400400:	call	0x40064a
<Block for 0x400405, 12 bytes>
0x400405:	lea	rax, [rbp - 0x50]
0x400409:	mov	rdi, rax
0x40040c:	call	0x40064a
<Block for 0x400411, 16 bytes>
0x400411:	nop	
0x400412:	mov	rax, qword ptr [rbp - 0x18]
0x400416:	xor	rax, qword ptr fs:[0x28]
0x40041f:	je	0x40045b
<Block for 0x40045b, 7 bytes>
0x40045b:	add	rsp, 0x58
0x40045f:	pop	rbx
0x400460:	pop	rbp
0x400461:	ret	
<Block for 0x400421, 2 bytes>
0x400421:	jmp	0x400456
<Block for 0x400456, 5 bytes>
0x400456:	call	0x500010
