<Block for 0x400224, 60 bytes>
0x400224:	endbr64	
0x400228:	push	rbp
0x400229:	mov	rbp, rsp
0x40022c:	add	rsp, -0x80
0x400230:	mov	rax, qword ptr fs:[0x28]
0x400239:	mov	qword ptr [rbp - 8], rax
0x40023d:	xor	eax, eax
0x40023f:	mov	rax, qword ptr [rip + 0x222]
0x400246:	mov	qword ptr [rbp - 0x78], rax
0x40024a:	lea	rax, [rbp - 0x70]
0x40024e:	mov	edx, 0x63
0x400253:	mov	esi, 0x43
0x400258:	mov	rdi, rax
0x40025b:	call	0x500000
<Block for 0x400260, 16 bytes>
0x400260:	mov	byte ptr [rbp - 0xd], 0
0x400264:	lea	rax, [rbp - 0x70]
0x400268:	mov	rdi, rax
0x40026b:	call	0x500008
<Block for 0x400270, 22 bytes>
0x400270:	mov	rdx, rax
0x400273:	mov	rcx, qword ptr [rbp - 0x78]
0x400277:	lea	rax, [rbp - 0x70]
0x40027b:	mov	rsi, rcx
0x40027e:	mov	rdi, rax
0x400281:	call	0x500010
<Block for 0x400286, 16 bytes>
0x400286:	mov	byte ptr [rbp - 0xd], 0
0x40028a:	lea	rax, [rbp - 0x70]
0x40028e:	mov	rdi, rax
0x400291:	call	0x500018
<Block for 0x400296, 16 bytes>
0x400296:	nop	
0x400297:	mov	rax, qword ptr [rbp - 8]
0x40029b:	xor	rax, qword ptr fs:[0x28]
0x4002a4:	je	0x4002ab
<Block for 0x4002ab, 2 bytes>
0x4002ab:	leave	
0x4002ac:	ret	
<Block for 0x4002a6, 5 bytes>
0x4002a6:	call	0x500020
