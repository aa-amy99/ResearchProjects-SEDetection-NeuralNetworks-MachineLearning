<Block for 0x4005ea, 40 bytes>
0x4005ea:	endbr64	
0x4005ee:	push	rbp
0x4005ef:	mov	rbp, rsp
0x4005f2:	sub	rsp, 0x40
0x4005f6:	mov	dword ptr [rbp - 0x34], edi
0x4005f9:	mov	rax, qword ptr fs:[0x28]
0x400602:	mov	qword ptr [rbp - 8], rax
0x400606:	xor	eax, eax
0x400608:	mov	eax, dword ptr [rip + 0xce]
0x40060e:	test	eax, eax
0x400610:	je	0x40065e
<Block for 0x40065e, 16 bytes>
0x40065e:	nop	
0x40065f:	mov	rax, qword ptr [rbp - 8]
0x400663:	xor	rax, qword ptr fs:[0x28]
0x40066c:	je	0x400673
<Block for 0x400612, 46 bytes>
0x400612:	mov	qword ptr [rbp - 0x30], 0
0x40061a:	mov	qword ptr [rbp - 0x28], 0
0x400622:	mov	qword ptr [rbp - 0x20], 0
0x40062a:	mov	qword ptr [rbp - 0x18], 0
0x400632:	mov	qword ptr [rbp - 0x10], 0
0x40063a:	cmp	dword ptr [rbp - 0x34], 0
0x40063e:	js	0x400652
<Block for 0x400673, 2 bytes>
0x400673:	leave	
0x400674:	ret	
<Block for 0x40066e, 5 bytes>
0x40066e:	call	0x500010
<Block for 0x400652, 12 bytes>
0x400652:	lea	rdi, [rip + 0x87]
0x400659:	call	0x500008
<Block for 0x400640, 16 bytes>
0x400640:	mov	eax, dword ptr [rbp - 0x34]
0x400643:	cdqe	
0x400645:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400649:	mov	edi, eax
0x40064b:	call	0x500000
<Block for 0x400650, 2 bytes>
0x400650:	jmp	0x40065e
