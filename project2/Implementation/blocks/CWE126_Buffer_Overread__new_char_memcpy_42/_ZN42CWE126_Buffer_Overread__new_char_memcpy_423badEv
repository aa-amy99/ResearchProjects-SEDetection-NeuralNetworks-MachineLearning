<Block for 0x400045, 47 bytes>
0x400045:	endbr64	
0x400049:	push	rbp
0x40004a:	mov	rbp, rsp
0x40004d:	add	rsp, -0x80
0x400051:	mov	rax, qword ptr fs:[0x28]
0x40005a:	mov	qword ptr [rbp - 8], rax
0x40005e:	xor	eax, eax
0x400060:	mov	qword ptr [rbp - 0x78], 0
0x400068:	mov	rax, qword ptr [rbp - 0x78]
0x40006c:	mov	rdi, rax
0x40006f:	call	0x400000
<Block for 0x400074, 26 bytes>
0x400074:	mov	qword ptr [rbp - 0x78], rax
0x400078:	lea	rax, [rbp - 0x70]
0x40007c:	mov	edx, 0x63
0x400081:	mov	esi, 0x43
0x400086:	mov	rdi, rax
0x400089:	call	0x500008
<Block for 0x40008e, 16 bytes>
0x40008e:	mov	byte ptr [rbp - 0xd], 0
0x400092:	lea	rax, [rbp - 0x70]
0x400096:	mov	rdi, rax
0x400099:	call	0x500010
<Block for 0x40009e, 22 bytes>
0x40009e:	mov	rdx, rax
0x4000a1:	mov	rcx, qword ptr [rbp - 0x78]
0x4000a5:	lea	rax, [rbp - 0x70]
0x4000a9:	mov	rsi, rcx
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500018
<Block for 0x4000b4, 16 bytes>
0x4000b4:	mov	byte ptr [rbp - 0xd], 0
0x4000b8:	lea	rax, [rbp - 0x70]
0x4000bc:	mov	rdi, rax
0x4000bf:	call	0x500020
<Block for 0x4000c4, 7 bytes>
0x4000c4:	cmp	qword ptr [rbp - 0x78], 0
0x4000c9:	je	0x4000d7
<Block for 0x4000d7, 16 bytes>
0x4000d7:	nop	
0x4000d8:	mov	rax, qword ptr [rbp - 8]
0x4000dc:	xor	rax, qword ptr fs:[0x28]
0x4000e5:	je	0x4000ec
<Block for 0x4000cb, 12 bytes>
0x4000cb:	mov	rax, qword ptr [rbp - 0x78]
0x4000cf:	mov	rdi, rax
0x4000d2:	call	0x500028
<Block for 0x4000ec, 2 bytes>
0x4000ec:	leave	
0x4000ed:	ret	
<Block for 0x4000e7, 5 bytes>
0x4000e7:	call	0x500030
