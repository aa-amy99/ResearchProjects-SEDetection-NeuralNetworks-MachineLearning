<Block for 0x400109, 52 bytes>
0x400109:	endbr64	
0x40010d:	push	rbp
0x40010e:	mov	rbp, rsp
0x400111:	sub	rsp, 0x10
0x400115:	mov	rax, qword ptr fs:[0x28]
0x40011e:	mov	qword ptr [rbp - 8], rax
0x400122:	xor	eax, eax
0x400124:	mov	byte ptr [rbp - 0xd], 0x20
0x400128:	mov	dword ptr [rip + 0xf6], 0
0x400132:	movsx	eax, byte ptr [rbp - 0xd]
0x400136:	mov	edi, eax
0x400138:	call	0x4000d6
<Block for 0x40013d, 34 bytes>
0x40013d:	mov	byte ptr [rbp - 0xd], al
0x400140:	mov	byte ptr [rbp - 0xc], 0x78
0x400144:	movzx	eax, byte ptr [rbp - 0xd]
0x400148:	mov	byte ptr [rbp - 0xb], al
0x40014b:	mov	byte ptr [rbp - 0xa], 0x7a
0x40014f:	mov	byte ptr [rbp - 9], 0
0x400153:	lea	rax, [rbp - 0xc]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x40015f, 16 bytes>
0x40015f:	nop	
0x400160:	mov	rax, qword ptr [rbp - 8]
0x400164:	xor	rax, qword ptr fs:[0x28]
0x40016d:	je	0x400174
<Block for 0x400174, 2 bytes>
0x400174:	leave	
0x400175:	ret	
<Block for 0x40016f, 5 bytes>
0x40016f:	call	0x500018
