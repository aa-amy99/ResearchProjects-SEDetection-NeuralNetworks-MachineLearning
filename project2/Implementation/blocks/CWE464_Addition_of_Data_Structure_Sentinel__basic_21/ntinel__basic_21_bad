<Block for 0x400069, 52 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x10
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	byte ptr [rbp - 0xd], 0x20
0x400088:	mov	dword ptr [rip + 0x192], 1
0x400092:	movsx	eax, byte ptr [rbp - 0xd]
0x400096:	mov	edi, eax
0x400098:	call	0x400000
<Block for 0x40009d, 34 bytes>
0x40009d:	mov	byte ptr [rbp - 0xd], al
0x4000a0:	mov	byte ptr [rbp - 0xc], 0x78
0x4000a4:	movzx	eax, byte ptr [rbp - 0xd]
0x4000a8:	mov	byte ptr [rbp - 0xb], al
0x4000ab:	mov	byte ptr [rbp - 0xa], 0x7a
0x4000af:	mov	byte ptr [rbp - 9], 0
0x4000b3:	lea	rax, [rbp - 0xc]
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500020
<Block for 0x4000bf, 16 bytes>
0x4000bf:	nop	
0x4000c0:	mov	rax, qword ptr [rbp - 8]
0x4000c4:	xor	rax, qword ptr fs:[0x28]
0x4000cd:	je	0x4000d4
<Block for 0x4000d4, 2 bytes>
0x4000d4:	leave	
0x4000d5:	ret	
<Block for 0x4000cf, 5 bytes>
0x4000cf:	call	0x500018
