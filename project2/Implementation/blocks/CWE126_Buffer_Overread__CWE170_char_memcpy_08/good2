<Block for 0x40014d, 40 bytes>
0x40014d:	endbr64	
0x400151:	push	rbp
0x400152:	mov	rbp, rsp
0x400155:	sub	rsp, 0x110
0x40015c:	mov	rax, qword ptr fs:[0x28]
0x400165:	mov	qword ptr [rbp - 8], rax
0x400169:	xor	eax, eax
0x40016b:	mov	eax, 0
0x400170:	call	0x400000
<Block for 0x400175, 4 bytes>
0x400175:	test	eax, eax
0x400177:	je	0x4001ca
<Block for 0x4001ca, 16 bytes>
0x4001ca:	nop	
0x4001cb:	mov	rax, qword ptr [rbp - 8]
0x4001cf:	xor	rax, qword ptr fs:[0x28]
0x4001d8:	je	0x4001df
<Block for 0x400179, 25 bytes>
0x400179:	lea	rax, [rbp - 0xa0]
0x400180:	mov	edx, 0x95
0x400185:	mov	esi, 0x41
0x40018a:	mov	rdi, rax
0x40018d:	call	0x500000
<Block for 0x4001df, 2 bytes>
0x4001df:	leave	
0x4001e0:	ret	
<Block for 0x4001da, 5 bytes>
0x4001da:	call	0x500018
<Block for 0x400192, 34 bytes>
0x400192:	mov	byte ptr [rbp - 0xb], 0
0x400196:	lea	rcx, [rbp - 0xa0]
0x40019d:	lea	rax, [rbp - 0x110]
0x4001a4:	mov	edx, 0x63
0x4001a9:	mov	rsi, rcx
0x4001ac:	mov	rdi, rax
0x4001af:	call	0x500008
<Block for 0x4001b4, 22 bytes>
0x4001b4:	mov	byte ptr [rbp - 0xad], 0
0x4001bb:	lea	rax, [rbp - 0x110]
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x500010
