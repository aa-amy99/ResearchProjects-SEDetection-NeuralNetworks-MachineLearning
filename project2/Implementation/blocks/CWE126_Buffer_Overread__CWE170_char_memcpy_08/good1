<Block for 0x4000ab, 40 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x110
0x4000ba:	mov	rax, qword ptr fs:[0x28]
0x4000c3:	mov	qword ptr [rbp - 8], rax
0x4000c7:	xor	eax, eax
0x4000c9:	mov	eax, 0
0x4000ce:	call	0x40000f
<Block for 0x4000d3, 4 bytes>
0x4000d3:	test	eax, eax
0x4000d5:	je	0x4000e5
<Block for 0x4000e5, 25 bytes>
0x4000e5:	lea	rax, [rbp - 0xa0]
0x4000ec:	mov	edx, 0x95
0x4000f1:	mov	esi, 0x41
0x4000f6:	mov	rdi, rax
0x4000f9:	call	0x500000
<Block for 0x4000d7, 12 bytes>
0x4000d7:	lea	rdi, [rip + 0x122]
0x4000de:	call	0x500010
<Block for 0x4000fe, 34 bytes>
0x4000fe:	mov	byte ptr [rbp - 0xb], 0
0x400102:	lea	rcx, [rbp - 0xa0]
0x400109:	lea	rax, [rbp - 0x110]
0x400110:	mov	edx, 0x63
0x400115:	mov	rsi, rcx
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x4000e3, 2 bytes>
0x4000e3:	jmp	0x400136
<Block for 0x400120, 22 bytes>
0x400120:	mov	byte ptr [rbp - 0xad], 0
0x400127:	lea	rax, [rbp - 0x110]
0x40012e:	mov	rdi, rax
0x400131:	call	0x500010
<Block for 0x400136, 16 bytes>
0x400136:	nop	
0x400137:	mov	rax, qword ptr [rbp - 8]
0x40013b:	xor	rax, qword ptr fs:[0x28]
0x400144:	je	0x40014b
<Block for 0x40014b, 2 bytes>
0x40014b:	leave	
0x40014c:	ret	
<Block for 0x400146, 5 bytes>
0x400146:	call	0x500018
