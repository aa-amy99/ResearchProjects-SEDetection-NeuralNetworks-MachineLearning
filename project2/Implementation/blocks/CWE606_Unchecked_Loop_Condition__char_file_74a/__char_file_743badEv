<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0xf8
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0xe0]
0x400026:	mov	rdi, rax
0x400029:	call	0x400848
<Block for 0x40002e, 129 bytes>
0x40002e:	mov	qword ptr [rbp - 0x80], 0
0x400036:	mov	qword ptr [rbp - 0x78], 0
0x40003e:	mov	qword ptr [rbp - 0x70], 0
0x400046:	mov	qword ptr [rbp - 0x68], 0
0x40004e:	mov	qword ptr [rbp - 0x60], 0
0x400056:	mov	qword ptr [rbp - 0x58], 0
0x40005e:	mov	qword ptr [rbp - 0x50], 0
0x400066:	mov	qword ptr [rbp - 0x48], 0
0x40006e:	mov	qword ptr [rbp - 0x40], 0
0x400076:	mov	qword ptr [rbp - 0x38], 0
0x40007e:	mov	qword ptr [rbp - 0x30], 0
0x400086:	mov	qword ptr [rbp - 0x28], 0
0x40008e:	mov	dword ptr [rbp - 0x20], 0
0x400095:	lea	rax, [rbp - 0x80]
0x400099:	mov	qword ptr [rbp - 0xf8], rax
0x4000a0:	mov	rax, qword ptr [rbp - 0xf8]
0x4000a7:	mov	rdi, rax
0x4000aa:	call	0x500000
<Block for 0x4000af, 29 bytes>
0x4000af:	mov	qword ptr [rbp - 0xf0], rax
0x4000b6:	mov	eax, 0x64
0x4000bb:	sub	rax, qword ptr [rbp - 0xf0]
0x4000c2:	cmp	rax, 1
0x4000c6:	jbe	0x40015f
<Block for 0x40015f, 35 bytes>
0x40015f:	mov	dword ptr [rbp - 0xb0], 0
0x400169:	lea	rdx, [rbp - 0xb0]
0x400170:	lea	rax, [rbp - 0xe0]
0x400177:	mov	rsi, rdx
0x40017a:	mov	rdi, rax
0x40017d:	call	0x400a1a
<Block for 0x4000cc, 19 bytes>
0x4000cc:	lea	rsi, [rip + 0x651]
0x4000d3:	lea	rdi, [rip + 0x64c]
0x4000da:	call	0x500008
<Block for 0x400182, 45 bytes>
0x400182:	mov	rdx, qword ptr [rbp - 0xf8]
0x400189:	mov	qword ptr [rax], rdx
0x40018c:	mov	dword ptr [rbp - 0xb0], 1
0x400196:	lea	rdx, [rbp - 0xb0]
0x40019d:	lea	rax, [rbp - 0xe0]
0x4001a4:	mov	rsi, rdx
0x4001a7:	mov	rdi, rax
0x4001aa:	call	0x400a1a
<Block for 0x4000df, 17 bytes>
0x4000df:	mov	qword ptr [rbp - 0xe8], rax
0x4000e6:	cmp	qword ptr [rbp - 0xe8], 0
0x4000ee:	je	0x40015f
<Block for 0x4001af, 45 bytes>
0x4001af:	mov	rdx, qword ptr [rbp - 0xf8]
0x4001b6:	mov	qword ptr [rax], rdx
0x4001b9:	mov	dword ptr [rbp - 0xb0], 2
0x4001c3:	lea	rdx, [rbp - 0xb0]
0x4001ca:	lea	rax, [rbp - 0xe0]
0x4001d1:	mov	rsi, rdx
0x4001d4:	mov	rdi, rax
0x4001d7:	call	0x400a1a
<Block for 0x4000f0, 54 bytes>
0x4000f0:	mov	rax, qword ptr [rbp - 0xf0]
0x4000f7:	mov	edx, 0x64
0x4000fc:	sub	edx, eax
0x4000fe:	mov	eax, edx
0x400100:	mov	esi, eax
0x400102:	mov	rdx, qword ptr [rbp - 0xf8]
0x400109:	mov	rax, qword ptr [rbp - 0xf0]
0x400110:	lea	rcx, [rdx + rax]
0x400114:	mov	rax, qword ptr [rbp - 0xe8]
0x40011b:	mov	rdx, rax
0x40011e:	mov	rdi, rcx
0x400121:	call	0x500010
<Block for 0x4001dc, 35 bytes>
0x4001dc:	mov	rdx, qword ptr [rbp - 0xf8]
0x4001e3:	mov	qword ptr [rax], rdx
0x4001e6:	lea	rdx, [rbp - 0xe0]
0x4001ed:	lea	rax, [rbp - 0xb0]
0x4001f4:	mov	rsi, rdx
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x400888
<Block for 0x400126, 10 bytes>
0x400126:	test	rax, rax
0x400129:	sete	al
0x40012c:	test	al, al
0x40012e:	je	0x400150
<Block for 0x4001ff, 15 bytes>
0x4001ff:	lea	rax, [rbp - 0xb0]
0x400206:	mov	rdi, rax
0x400209:	call	0x500028
<Block for 0x400150, 15 bytes>
0x400150:	mov	rax, qword ptr [rbp - 0xe8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x400130, 12 bytes>
0x400130:	lea	rdi, [rip + 0x5fd]
0x400137:	call	0x500018
<Block for 0x40020e, 15 bytes>
0x40020e:	lea	rax, [rbp - 0xb0]
0x400215:	mov	rdi, rax
0x400218:	call	0x400868
<Block for 0x40013c, 35 bytes>
0x40013c:	mov	rdx, qword ptr [rbp - 0xf8]
0x400143:	mov	rax, qword ptr [rbp - 0xf0]
0x40014a:	add	rax, rdx
0x40014d:	mov	byte ptr [rax], 0
0x400150:	mov	rax, qword ptr [rbp - 0xe8]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x40021d, 15 bytes>
0x40021d:	lea	rax, [rbp - 0xe0]
0x400224:	mov	rdi, rax
0x400227:	call	0x400868
<Block for 0x40022c, 16 bytes>
0x40022c:	nop	
0x40022d:	mov	rax, qword ptr [rbp - 0x18]
0x400231:	xor	rax, qword ptr fs:[0x28]
0x40023a:	je	0x40027c
<Block for 0x40027c, 10 bytes>
0x40027c:	add	rsp, 0xf8
0x400283:	pop	rbx
0x400284:	pop	rbp
0x400285:	ret	
<Block for 0x40023c, 2 bytes>
0x40023c:	jmp	0x400277
<Block for 0x400277, 5 bytes>
0x400277:	call	0x500038
