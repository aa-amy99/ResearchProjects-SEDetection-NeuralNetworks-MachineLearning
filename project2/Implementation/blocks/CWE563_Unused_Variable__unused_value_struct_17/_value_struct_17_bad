<Block for 0x400000, 36 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x18], 0
0x400022:	jmp	0x400036
<Block for 0x400036, 6 bytes>
0x400036:	cmp	dword ptr [rbp - 0x18], 0
0x40003a:	jle	0x400024
<Block for 0x400024, 24 bytes>
0x400024:	mov	dword ptr [rbp - 0x10], 0
0x40002b:	mov	dword ptr [rbp - 0xc], 0
0x400032:	add	dword ptr [rbp - 0x18], 1
0x400036:	cmp	dword ptr [rbp - 0x18], 0
0x40003a:	jle	0x400024
<Block for 0x40003c, 9 bytes>
0x40003c:	mov	dword ptr [rbp - 0x14], 0
0x400043:	jmp	0x400063
<Block for 0x400063, 6 bytes>
0x400063:	cmp	dword ptr [rbp - 0x14], 0
0x400067:	jle	0x400045
<Block for 0x400045, 26 bytes>
0x400045:	mov	dword ptr [rbp - 0x10], 1
0x40004c:	mov	dword ptr [rbp - 0xc], 1
0x400053:	lea	rax, [rbp - 0x10]
0x400057:	mov	rdi, rax
0x40005a:	call	0x500000
<Block for 0x400069, 16 bytes>
0x400069:	nop	
0x40006a:	mov	rax, qword ptr [rbp - 8]
0x40006e:	xor	rax, qword ptr fs:[0x28]
0x400077:	je	0x40007e
<Block for 0x40005f, 10 bytes>
0x40005f:	add	dword ptr [rbp - 0x14], 1
0x400063:	cmp	dword ptr [rbp - 0x14], 0
0x400067:	jle	0x400045
<Block for 0x40007e, 2 bytes>
0x40007e:	leave	
0x40007f:	ret	
<Block for 0x400079, 5 bytes>
0x400079:	call	0x500008
