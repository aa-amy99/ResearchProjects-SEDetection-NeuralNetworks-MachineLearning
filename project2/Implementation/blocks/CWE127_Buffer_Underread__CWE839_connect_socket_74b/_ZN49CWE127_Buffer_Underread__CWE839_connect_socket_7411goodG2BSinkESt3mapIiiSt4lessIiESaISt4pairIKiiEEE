<Block for 0x4000a1, 57 bytes>
0x4000a1:	endbr64	
0x4000a5:	push	rbp
0x4000a6:	mov	rbp, rsp
0x4000a9:	sub	rsp, 0x50
0x4000ad:	mov	qword ptr [rbp - 0x48], rdi
0x4000b1:	mov	rax, qword ptr fs:[0x28]
0x4000ba:	mov	qword ptr [rbp - 8], rax
0x4000be:	xor	eax, eax
0x4000c0:	mov	dword ptr [rbp - 0x38], 2
0x4000c7:	lea	rdx, [rbp - 0x38]
0x4000cb:	mov	rax, qword ptr [rbp - 0x48]
0x4000cf:	mov	rsi, rdx
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x400264
<Block for 0x4000da, 51 bytes>
0x4000da:	mov	eax, dword ptr [rax]
0x4000dc:	mov	dword ptr [rbp - 0x34], eax
0x4000df:	mov	qword ptr [rbp - 0x30], 0
0x4000e7:	mov	qword ptr [rbp - 0x28], 0
0x4000ef:	mov	qword ptr [rbp - 0x20], 0
0x4000f7:	mov	qword ptr [rbp - 0x18], 0
0x4000ff:	mov	qword ptr [rbp - 0x10], 0
0x400107:	cmp	dword ptr [rbp - 0x34], 9
0x40010b:	jg	0x40011f
<Block for 0x40010d, 16 bytes>
0x40010d:	mov	eax, dword ptr [rbp - 0x34]
0x400110:	cdqe	
0x400112:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400116:	mov	edi, eax
0x400118:	call	0x500000
<Block for 0x40011f, 12 bytes>
0x40011f:	lea	rdi, [rip + 0xfa]
0x400126:	call	0x500008
<Block for 0x40011d, 2 bytes>
0x40011d:	jmp	0x40012b
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500010
