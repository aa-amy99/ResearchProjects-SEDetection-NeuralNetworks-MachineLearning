<Block for 0x400000, 93 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x70
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x70]
0x40001f:	mov	qword ptr [rbp - 0x50], rax
0x400023:	lea	rax, [rbp - 0x70]
0x400027:	mov	qword ptr [rbp - 0x48], rax
0x40002b:	mov	dword ptr [rbp - 0x70], 0xffffffff
0x400032:	mov	rax, qword ptr [rbp - 0x50]
0x400036:	mov	eax, dword ptr [rax]
0x400038:	mov	dword ptr [rbp - 0x6c], eax
0x40003b:	mov	dword ptr [rbp - 0x64], 0xffffffff
0x400042:	mov	dword ptr [rbp - 0x68], 0xffffffff
0x400049:	mov	edx, 6
0x40004e:	mov	esi, 1
0x400053:	mov	edi, 2
0x400058:	call	0x500000
<Block for 0x40005d, 13 bytes>
0x40005d:	mov	dword ptr [rbp - 0x64], eax
0x400060:	cmp	dword ptr [rbp - 0x64], -1
0x400064:	je	0x400133
<Block for 0x400133, 3 bytes>
0x400133:	nop	
0x400134:	jmp	0x40013d
<Block for 0x40006a, 22 bytes>
0x40006a:	lea	rax, [rbp - 0x30]
0x40006e:	mov	edx, 0x10
0x400073:	mov	esi, 0
0x400078:	mov	rdi, rax
0x40007b:	call	0x500008
<Block for 0x40013d, 6 bytes>
0x40013d:	cmp	dword ptr [rbp - 0x64], -1
0x400141:	je	0x40014d
<Block for 0x400080, 23 bytes>
0x400080:	mov	word ptr [rbp - 0x30], 2
0x400086:	mov	dword ptr [rbp - 0x2c], 0
0x40008d:	mov	edi, 0x6987
0x400092:	call	0x500010
<Block for 0x40014d, 6 bytes>
0x40014d:	cmp	dword ptr [rbp - 0x68], -1
0x400151:	je	0x40015d
<Block for 0x400143, 10 bytes>
0x400143:	mov	eax, dword ptr [rbp - 0x64]
0x400146:	mov	edi, eax
0x400148:	call	0x500040
<Block for 0x400097, 26 bytes>
0x400097:	mov	word ptr [rbp - 0x2e], ax
0x40009b:	lea	rcx, [rbp - 0x30]
0x40009f:	mov	eax, dword ptr [rbp - 0x64]
0x4000a2:	mov	edx, 0x10
0x4000a7:	mov	rsi, rcx
0x4000aa:	mov	edi, eax
0x4000ac:	call	0x500018
<Block for 0x40015d, 43 bytes>
0x40015d:	mov	rax, qword ptr [rbp - 0x50]
0x400161:	mov	edx, dword ptr [rbp - 0x6c]
0x400164:	mov	dword ptr [rax], edx
0x400166:	mov	rax, qword ptr [rbp - 0x48]
0x40016a:	mov	eax, dword ptr [rax]
0x40016c:	mov	dword ptr [rbp - 0x5c], eax
0x40016f:	mov	eax, dword ptr [rbp - 0x5c]
0x400172:	cdqe	
0x400174:	shl	rax, 2
0x400178:	mov	qword ptr [rbp - 0x40], rax
0x40017c:	mov	rax, qword ptr [rbp - 0x40]
0x400180:	mov	rdi, rax
0x400183:	call	0x500048
<Block for 0x400153, 10 bytes>
0x400153:	mov	eax, dword ptr [rbp - 0x68]
0x400156:	mov	edi, eax
0x400158:	call	0x500040
<Block for 0x4000b1, 10 bytes>
0x4000b1:	cmp	eax, -1
0x4000b4:	sete	al
0x4000b7:	test	al, al
0x4000b9:	jne	0x400136
<Block for 0x400188, 23 bytes>
0x400188:	mov	qword ptr [rbp - 0x38], rax
0x40018c:	mov	qword ptr [rbp - 0x58], 0
0x400194:	mov	eax, dword ptr [rbp - 0x5c]
0x400197:	cdqe	
0x400199:	cmp	qword ptr [rbp - 0x58], rax
0x40019d:	jae	0x4001bf
<Block for 0x4000bb, 15 bytes>
0x4000bb:	mov	eax, dword ptr [rbp - 0x64]
0x4000be:	mov	esi, 5
0x4000c3:	mov	edi, eax
0x4000c5:	call	0x500020
<Block for 0x400136, 3 bytes>
0x400136:	nop	
0x400137:	jmp	0x40013d
<Block for 0x40019f, 32 bytes>
0x40019f:	mov	rax, qword ptr [rbp - 0x58]
0x4001a3:	lea	rdx, [rax*4]
0x4001ab:	mov	rax, qword ptr [rbp - 0x38]
0x4001af:	add	rax, rdx
0x4001b2:	mov	dword ptr [rax], 0
0x4001b8:	add	qword ptr [rbp - 0x58], 1
0x4001bd:	jmp	0x400194
<Block for 0x4001bf, 13 bytes>
0x4001bf:	mov	rax, qword ptr [rbp - 0x38]
0x4001c3:	mov	eax, dword ptr [rax]
0x4001c5:	mov	edi, eax
0x4001c7:	call	0x500050
<Block for 0x4000ca, 10 bytes>
0x4000ca:	cmp	eax, -1
0x4000cd:	sete	al
0x4000d0:	test	al, al
0x4000d2:	jne	0x400139
<Block for 0x400194, 11 bytes>
0x400194:	mov	eax, dword ptr [rbp - 0x5c]
0x400197:	cdqe	
0x400199:	cmp	qword ptr [rbp - 0x58], rax
0x40019d:	jae	0x4001bf
<Block for 0x4001cc, 7 bytes>
0x4001cc:	cmp	qword ptr [rbp - 0x38], 0
0x4001d1:	je	0x4001df
<Block for 0x4000d4, 20 bytes>
0x4000d4:	mov	eax, dword ptr [rbp - 0x64]
0x4000d7:	mov	edx, 0
0x4000dc:	mov	esi, 0
0x4000e1:	mov	edi, eax
0x4000e3:	call	0x500028
<Block for 0x400139, 3 bytes>
0x400139:	nop	
0x40013a:	jmp	0x40013d
<Block for 0x4001df, 16 bytes>
0x4001df:	nop	
0x4001e0:	mov	rax, qword ptr [rbp - 8]
0x4001e4:	xor	rax, qword ptr fs:[0x28]
0x4001ed:	je	0x4001f4
<Block for 0x4001d3, 12 bytes>
0x4001d3:	mov	rax, qword ptr [rbp - 0x38]
0x4001d7:	mov	rdi, rax
0x4001da:	call	0x500058
<Block for 0x4000e8, 9 bytes>
0x4000e8:	mov	dword ptr [rbp - 0x68], eax
0x4000eb:	cmp	dword ptr [rbp - 0x68], -1
0x4000ef:	je	0x40013c
<Block for 0x4001f4, 2 bytes>
0x4001f4:	leave	
0x4001f5:	ret	
<Block for 0x4001ef, 5 bytes>
0x4001ef:	call	0x500060
<Block for 0x4000f1, 24 bytes>
0x4000f1:	lea	rsi, [rbp - 0x16]
0x4000f5:	mov	eax, dword ptr [rbp - 0x68]
0x4000f8:	mov	ecx, 0
0x4000fd:	mov	edx, 0xd
0x400102:	mov	edi, eax
0x400104:	call	0x500030
<Block for 0x40013c, 1 bytes>
0x40013c:	nop	
<Block for 0x400109, 9 bytes>
0x400109:	mov	dword ptr [rbp - 0x60], eax
0x40010c:	cmp	dword ptr [rbp - 0x60], -1
0x400110:	je	0x40013d
<Block for 0x400112, 6 bytes>
0x400112:	cmp	dword ptr [rbp - 0x60], 0
0x400116:	je	0x40013d
<Block for 0x400118, 22 bytes>
0x400118:	mov	eax, dword ptr [rbp - 0x60]
0x40011b:	cdqe	
0x40011d:	mov	byte ptr [rbp + rax - 0x16], 0
0x400122:	lea	rax, [rbp - 0x16]
0x400126:	mov	rdi, rax
0x400129:	call	0x500038
<Block for 0x40012e, 5 bytes>
0x40012e:	mov	dword ptr [rbp - 0x6c], eax
0x400131:	jmp	0x40013d
