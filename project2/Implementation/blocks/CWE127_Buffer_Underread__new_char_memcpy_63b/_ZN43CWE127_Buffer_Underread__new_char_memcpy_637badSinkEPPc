<Block for 0x400000, 77 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x98
0x400010:	mov	qword ptr [rbp - 0x98], rdi
0x400017:	mov	rax, qword ptr fs:[0x28]
0x400020:	mov	qword ptr [rbp - 0x18], rax
0x400024:	xor	eax, eax
0x400026:	mov	rax, qword ptr [rbp - 0x98]
0x40002d:	mov	rax, qword ptr [rax]
0x400030:	mov	qword ptr [rbp - 0x88], rax
0x400037:	lea	rax, [rbp - 0x80]
0x40003b:	mov	edx, 0x63
0x400040:	mov	esi, 0x43
0x400045:	mov	rdi, rax
0x400048:	call	0x500000
<Block for 0x40004d, 128 bytes>
0x40004d:	mov	byte ptr [rbp - 0x1d], 0
0x400051:	mov	rax, qword ptr [rbp - 0x88]
0x400058:	mov	rcx, qword ptr [rax]
0x40005b:	mov	rbx, qword ptr [rax + 8]
0x40005f:	mov	qword ptr [rbp - 0x80], rcx
0x400063:	mov	qword ptr [rbp - 0x78], rbx
0x400067:	mov	rcx, qword ptr [rax + 0x10]
0x40006b:	mov	rbx, qword ptr [rax + 0x18]
0x40006f:	mov	qword ptr [rbp - 0x70], rcx
0x400073:	mov	qword ptr [rbp - 0x68], rbx
0x400077:	mov	rcx, qword ptr [rax + 0x20]
0x40007b:	mov	rbx, qword ptr [rax + 0x28]
0x40007f:	mov	qword ptr [rbp - 0x60], rcx
0x400083:	mov	qword ptr [rbp - 0x58], rbx
0x400087:	mov	rcx, qword ptr [rax + 0x30]
0x40008b:	mov	rbx, qword ptr [rax + 0x38]
0x40008f:	mov	qword ptr [rbp - 0x50], rcx
0x400093:	mov	qword ptr [rbp - 0x48], rbx
0x400097:	mov	rcx, qword ptr [rax + 0x40]
0x40009b:	mov	rbx, qword ptr [rax + 0x48]
0x40009f:	mov	qword ptr [rbp - 0x40], rcx
0x4000a3:	mov	qword ptr [rbp - 0x38], rbx
0x4000a7:	mov	rcx, qword ptr [rax + 0x50]
0x4000ab:	mov	rbx, qword ptr [rax + 0x58]
0x4000af:	mov	qword ptr [rbp - 0x30], rcx
0x4000b3:	mov	qword ptr [rbp - 0x28], rbx
0x4000b7:	mov	eax, dword ptr [rax + 0x60]
0x4000ba:	mov	dword ptr [rbp - 0x20], eax
0x4000bd:	mov	byte ptr [rbp - 0x1d], 0
0x4000c1:	lea	rax, [rbp - 0x80]
0x4000c5:	mov	rdi, rax
0x4000c8:	call	0x500008
<Block for 0x4000cd, 16 bytes>
0x4000cd:	nop	
0x4000ce:	mov	rax, qword ptr [rbp - 0x18]
0x4000d2:	xor	rax, qword ptr fs:[0x28]
0x4000db:	je	0x4000e2
<Block for 0x4000e2, 10 bytes>
0x4000e2:	add	rsp, 0x98
0x4000e9:	pop	rbx
0x4000ea:	pop	rbp
0x4000eb:	ret	
<Block for 0x4000dd, 5 bytes>
0x4000dd:	call	0x500010
