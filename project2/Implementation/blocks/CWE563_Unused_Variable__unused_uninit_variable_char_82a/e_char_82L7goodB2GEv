<Block for 0x40005d, 23 bytes>
0x40005d:	endbr64	
0x400061:	push	rbp
0x400062:	mov	rbp, rsp
0x400065:	push	rbx
0x400066:	sub	rsp, 0x18
0x40006a:	mov	edi, 8
0x40006f:	call	0x500000
<Block for 0x400074, 11 bytes>
0x400074:	mov	rbx, rax
0x400077:	mov	rdi, rbx
0x40007a:	call	0x400116
<Block for 0x40007f, 29 bytes>
0x40007f:	mov	qword ptr [rbp - 0x18], rbx
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	mov	rax, qword ptr [rax]
0x40008a:	mov	rcx, qword ptr [rax]
0x40008d:	movsx	edx, byte ptr [rbp - 0x19]
0x400091:	mov	rax, qword ptr [rbp - 0x18]
0x400095:	mov	esi, edx
0x400097:	mov	rdi, rax
0x40009a:	call	rcx
<Block for 0x40009c, 9 bytes>
0x40009c:	mov	rax, qword ptr [rbp - 0x18]
0x4000a0:	test	rax, rax
0x4000a3:	je	0x4000b2
<Block for 0x4000b2, 8 bytes>
0x4000b2:	nop	
0x4000b3:	add	rsp, 0x18
0x4000b7:	pop	rbx
0x4000b8:	pop	rbp
0x4000b9:	ret	
<Block for 0x4000a5, 13 bytes>
0x4000a5:	mov	esi, 8
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500008
