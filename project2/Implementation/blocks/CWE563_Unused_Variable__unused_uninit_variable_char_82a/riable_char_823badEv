<Block for 0x400000, 23 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x18
0x40000d:	mov	edi, 8
0x400012:	call	0x500000
<Block for 0x400017, 11 bytes>
0x400017:	mov	rbx, rax
0x40001a:	mov	rdi, rbx
0x40001d:	call	0x4000e8
<Block for 0x400022, 29 bytes>
0x400022:	mov	qword ptr [rbp - 0x18], rbx
0x400026:	mov	rax, qword ptr [rbp - 0x18]
0x40002a:	mov	rax, qword ptr [rax]
0x40002d:	mov	rcx, qword ptr [rax]
0x400030:	movsx	edx, byte ptr [rbp - 0x19]
0x400034:	mov	rax, qword ptr [rbp - 0x18]
0x400038:	mov	esi, edx
0x40003a:	mov	rdi, rax
0x40003d:	call	rcx
<Block for 0x40003f, 9 bytes>
0x40003f:	mov	rax, qword ptr [rbp - 0x18]
0x400043:	test	rax, rax
0x400046:	je	0x400055
<Block for 0x400055, 8 bytes>
0x400055:	nop	
0x400056:	add	rsp, 0x18
0x40005a:	pop	rbx
0x40005b:	pop	rbp
0x40005c:	ret	
<Block for 0x400048, 13 bytes>
0x400048:	mov	esi, 8
0x40004d:	mov	rdi, rax
0x400050:	call	0x500008
