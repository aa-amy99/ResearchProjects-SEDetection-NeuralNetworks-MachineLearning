<Block for 0x400082, 90 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x30
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	lea	rax, [rip - 0xa4]
0x4000a4:	mov	qword ptr [rbp - 0x20], rax
0x4000a8:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4000af:	mov	qword ptr [rbp - 0x16], 0
0x4000b7:	mov	dword ptr [rbp - 0xe], 0
0x4000be:	mov	word ptr [rbp - 0xa], 0
0x4000c4:	mov	rdx, qword ptr [rip + 0xfff4d]
0x4000cb:	lea	rax, [rbp - 0x16]
0x4000cf:	mov	esi, 0xe
0x4000d4:	mov	rdi, rax
0x4000d7:	call	0x500020
<Block for 0x4000dc, 10 bytes>
0x4000dc:	test	rax, rax
0x4000df:	setne	al
0x4000e2:	test	al, al
0x4000e4:	je	0x4000f7
<Block for 0x4000f7, 12 bytes>
0x4000f7:	lea	rdi, [rip + 0xec]
0x4000fe:	call	0x500030
<Block for 0x4000e6, 12 bytes>
0x4000e6:	lea	rax, [rbp - 0x16]
0x4000ea:	mov	rdi, rax
0x4000ed:	call	0x500028
<Block for 0x400103, 11 bytes>
0x400103:	mov	eax, dword ptr [rbp - 0x24]
0x400106:	mov	rdx, qword ptr [rbp - 0x20]
0x40010a:	mov	edi, eax
0x40010c:	call	rdx
<Block for 0x4000f2, 5 bytes>
0x4000f2:	mov	dword ptr [rbp - 0x24], eax
0x4000f5:	jmp	0x400103
<Block for 0x40010e, 16 bytes>
0x40010e:	nop	
0x40010f:	mov	rax, qword ptr [rbp - 8]
0x400113:	xor	rax, qword ptr fs:[0x28]
0x40011c:	je	0x400123
<Block for 0x400123, 2 bytes>
0x400123:	leave	
0x400124:	ret	
<Block for 0x40011e, 5 bytes>
0x40011e:	call	0x500038
