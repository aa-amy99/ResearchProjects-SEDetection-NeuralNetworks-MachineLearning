<Block for 0x400064, 56 bytes>
0x400064:	endbr64	
0x400068:	push	rbp
0x400069:	mov	rbp, rsp
0x40006c:	sub	rsp, 0x90
0x400073:	mov	rax, qword ptr fs:[0x28]
0x40007c:	mov	qword ptr [rbp - 8], rax
0x400080:	xor	eax, eax
0x400082:	mov	qword ptr [rbp - 0x88], 0
0x40008d:	lea	rax, [rbp - 0x88]
0x400094:	mov	rdi, rax
0x400097:	call	0x400000
<Block for 0x40009c, 22 bytes>
0x40009c:	lea	rax, [rbp - 0x70]
0x4000a0:	mov	edx, 0x63
0x4000a5:	mov	esi, 0x43
0x4000aa:	mov	rdi, rax
0x4000ad:	call	0x500010
<Block for 0x4000b2, 16 bytes>
0x4000b2:	mov	byte ptr [rbp - 0xd], 0
0x4000b6:	lea	rax, [rbp - 0x70]
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x500018
<Block for 0x4000c2, 22 bytes>
0x4000c2:	mov	qword ptr [rbp - 0x78], rax
0x4000c6:	mov	qword ptr [rbp - 0x80], 0
0x4000ce:	mov	rax, qword ptr [rbp - 0x80]
0x4000d2:	cmp	rax, qword ptr [rbp - 0x78]
0x4000d6:	jae	0x4000fd
<Block for 0x4000d8, 37 bytes>
0x4000d8:	mov	rdx, qword ptr [rbp - 0x88]
0x4000df:	mov	rax, qword ptr [rbp - 0x80]
0x4000e3:	add	rax, rdx
0x4000e6:	movzx	eax, byte ptr [rax]
0x4000e9:	lea	rcx, [rbp - 0x70]
0x4000ed:	mov	rdx, qword ptr [rbp - 0x80]
0x4000f1:	add	rdx, rcx
0x4000f4:	mov	byte ptr [rdx], al
0x4000f6:	add	qword ptr [rbp - 0x80], 1
0x4000fb:	jmp	0x4000ce
<Block for 0x4000fd, 16 bytes>
0x4000fd:	mov	byte ptr [rbp - 0xd], 0
0x400101:	lea	rax, [rbp - 0x70]
0x400105:	mov	rdi, rax
0x400108:	call	0x500020
<Block for 0x4000ce, 10 bytes>
0x4000ce:	mov	rax, qword ptr [rbp - 0x80]
0x4000d2:	cmp	rax, qword ptr [rbp - 0x78]
0x4000d6:	jae	0x4000fd
<Block for 0x40010d, 15 bytes>
0x40010d:	mov	rax, qword ptr [rbp - 0x88]
0x400114:	mov	rdi, rax
0x400117:	call	0x500028
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400131
<Block for 0x400131, 2 bytes>
0x400131:	leave	
0x400132:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500030
