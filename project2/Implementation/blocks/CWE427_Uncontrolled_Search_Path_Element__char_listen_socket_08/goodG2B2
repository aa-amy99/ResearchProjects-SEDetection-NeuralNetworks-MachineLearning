<Block for 0x4003a6, 82 bytes>
0x4003a6:	endbr64	
0x4003aa:	push	rbp
0x4003ab:	mov	rbp, rsp
0x4003ae:	sub	rsp, 0x120
0x4003b5:	mov	rax, qword ptr fs:[0x28]
0x4003be:	mov	qword ptr [rbp - 8], rax
0x4003c2:	xor	eax, eax
0x4003c4:	movabs	rax, 0x3d48544150
0x4003ce:	mov	edx, 0
0x4003d3:	mov	qword ptr [rbp - 0x110], rax
0x4003da:	mov	qword ptr [rbp - 0x108], rdx
0x4003e1:	lea	rdx, [rbp - 0x100]
0x4003e8:	mov	eax, 0
0x4003ed:	mov	ecx, 0x1d
0x4003f2:	mov	rdi, rdx
0x4003f5:	rep stosq	qword ptr [rdi], rax
<Block for 0x4003f8, 34 bytes>
0x4003f8:	mov	rdx, rdi
0x4003fb:	mov	word ptr [rdx], ax
0x4003fe:	add	rdx, 2
0x400402:	lea	rax, [rbp - 0x110]
0x400409:	mov	qword ptr [rbp - 0x118], rax
0x400410:	mov	eax, 0
0x400415:	call	0x400000
<Block for 0x4003f5, 3 bytes>
0x4003f5:	rep stosq	qword ptr [rdi], rax
<Block for 0x40041a, 4 bytes>
0x40041a:	test	eax, eax
0x40041c:	je	0x400457
<Block for 0x400457, 15 bytes>
0x400457:	mov	rax, qword ptr [rbp - 0x118]
0x40045e:	mov	rdi, rax
0x400461:	call	0x500050
<Block for 0x40041e, 27 bytes>
0x40041e:	mov	rax, qword ptr [rbp - 0x118]
0x400425:	mov	rcx, -1
0x40042c:	mov	rdx, rax
0x40042f:	mov	eax, 0
0x400434:	mov	rdi, rdx
0x400437:	repne scasb	al, byte ptr [rdi]
<Block for 0x400466, 16 bytes>
0x400466:	nop	
0x400467:	mov	rax, qword ptr [rbp - 8]
0x40046b:	xor	rax, qword ptr fs:[0x28]
0x400474:	je	0x40047b
<Block for 0x400439, 45 bytes>
0x400439:	mov	rax, rcx
0x40043c:	not	rax
0x40043f:	lea	rdx, [rax - 1]
0x400443:	mov	rax, qword ptr [rbp - 0x118]
0x40044a:	add	rax, rdx
0x40044d:	mov	dword ptr [rax], 0x6e69622f
0x400453:	mov	byte ptr [rax + 4], 0
0x400457:	mov	rax, qword ptr [rbp - 0x118]
0x40045e:	mov	rdi, rax
0x400461:	call	0x500050
<Block for 0x400437, 2 bytes>
0x400437:	repne scasb	al, byte ptr [rdi]
<Block for 0x40047b, 2 bytes>
0x40047b:	leave	
0x40047c:	ret	
<Block for 0x400476, 5 bytes>
0x400476:	call	0x500058
