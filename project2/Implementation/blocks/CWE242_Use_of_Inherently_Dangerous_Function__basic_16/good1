<Block for 0x400077, 51 bytes>
0x400077:	endbr64	
0x40007b:	push	rbp
0x40007c:	mov	rbp, rsp
0x40007f:	sub	rsp, 0x20
0x400083:	mov	rax, qword ptr fs:[0x28]
0x40008c:	mov	qword ptr [rbp - 8], rax
0x400090:	xor	eax, eax
0x400092:	mov	rdx, qword ptr [rip + 0xfff87]
0x400099:	lea	rax, [rbp - 0x12]
0x40009d:	mov	esi, 0xa
0x4000a2:	mov	rdi, rax
0x4000a5:	call	0x500028
<Block for 0x4000aa, 11 bytes>
0x4000aa:	mov	qword ptr [rbp - 0x20], rax
0x4000ae:	cmp	qword ptr [rbp - 0x20], 0
0x4000b3:	jne	0x4000cb
<Block for 0x4000b5, 12 bytes>
0x4000b5:	lea	rdi, [rip + 0x4c]
0x4000bc:	call	0x500008
<Block for 0x4000cb, 16 bytes>
0x4000cb:	mov	byte ptr [rbp - 9], 0
0x4000cf:	lea	rax, [rbp - 0x12]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500008
<Block for 0x4000c1, 10 bytes>
0x4000c1:	mov	edi, 1
0x4000c6:	call	0x500010
<Block for 0x4000db, 17 bytes>
0x4000db:	nop	
0x4000dc:	nop	
0x4000dd:	mov	rax, qword ptr [rbp - 8]
0x4000e1:	xor	rax, qword ptr fs:[0x28]
0x4000ea:	je	0x4000f1
<Block for 0x4000f1, 2 bytes>
0x4000f1:	leave	
0x4000f2:	ret	
<Block for 0x4000ec, 5 bytes>
0x4000ec:	call	0x500018
