<Block for 0x400000, 38 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, dword ptr [rip + 0x22f]
0x400021:	cmp	eax, 5
0x400024:	jne	0x400094
<Block for 0x400026, 32 bytes>
0x400026:	movabs	rax, 0x5858585858646162
0x400030:	mov	qword ptr [rbp - 0x12], rax
0x400034:	mov	word ptr [rbp - 0xa], 0x58
0x40003a:	lea	rax, [rbp - 0x12]
0x40003e:	mov	rdi, rax
0x400041:	call	0x500000
<Block for 0x400094, 16 bytes>
0x400094:	nop	
0x400095:	mov	rax, qword ptr [rbp - 8]
0x400099:	xor	rax, qword ptr fs:[0x28]
0x4000a2:	je	0x4000a9
<Block for 0x400046, 9 bytes>
0x400046:	mov	dword ptr [rbp - 0x24], eax
0x400049:	cmp	dword ptr [rbp - 0x24], -1
0x40004d:	je	0x400094
<Block for 0x4000a9, 2 bytes>
0x4000a9:	leave	
0x4000aa:	ret	
<Block for 0x4000a4, 5 bytes>
0x4000a4:	call	0x500020
<Block for 0x40004f, 17 bytes>
0x40004f:	mov	eax, dword ptr [rbp - 0x24]
0x400052:	lea	rsi, [rip + 0x1fb]
0x400059:	mov	edi, eax
0x40005b:	call	0x500008
<Block for 0x400060, 11 bytes>
0x400060:	mov	qword ptr [rbp - 0x20], rax
0x400064:	cmp	qword ptr [rbp - 0x20], 0
0x400069:	je	0x400094
<Block for 0x40006b, 29 bytes>
0x40006b:	mov	rax, qword ptr [rbp - 0x20]
0x40006f:	mov	rcx, rax
0x400072:	mov	edx, 0xe
0x400077:	mov	esi, 1
0x40007c:	lea	rdi, [rip + 0x1d3]
0x400083:	call	0x500010
<Block for 0x400088, 12 bytes>
0x400088:	mov	rax, qword ptr [rbp - 0x20]
0x40008c:	mov	rdi, rax
0x40008f:	call	0x500018
