<Block for 0x4000ab, 38 bytes>
0x4000ab:	endbr64	
0x4000af:	push	rbp
0x4000b0:	mov	rbp, rsp
0x4000b3:	sub	rsp, 0x30
0x4000b7:	mov	rax, qword ptr fs:[0x28]
0x4000c0:	mov	qword ptr [rbp - 8], rax
0x4000c4:	xor	eax, eax
0x4000c6:	mov	eax, dword ptr [rip + 0x184]
0x4000cc:	cmp	eax, 5
0x4000cf:	je	0x4000df
<Block for 0x4000df, 36 bytes>
0x4000df:	movabs	rax, 0x58585858646f6f67
0x4000e9:	mov	qword ptr [rbp - 0x13], rax
0x4000ed:	mov	word ptr [rbp - 0xb], 0x5858
0x4000f3:	mov	byte ptr [rbp - 9], 0
0x4000f7:	lea	rax, [rbp - 0x13]
0x4000fb:	mov	rdi, rax
0x4000fe:	call	0x500000
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rdi, [rip + 0x18d]
0x4000d8:	call	0x500028
<Block for 0x400103, 9 bytes>
0x400103:	mov	dword ptr [rbp - 0x24], eax
0x400106:	cmp	dword ptr [rbp - 0x24], -1
0x40010a:	je	0x40015d
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x40015d
<Block for 0x40015d, 16 bytes>
0x40015d:	nop	
0x40015e:	mov	rax, qword ptr [rbp - 8]
0x400162:	xor	rax, qword ptr fs:[0x28]
0x40016b:	je	0x400172
<Block for 0x40010c, 17 bytes>
0x40010c:	mov	eax, dword ptr [rbp - 0x24]
0x40010f:	lea	rsi, [rip + 0x13e]
0x400116:	mov	edi, eax
0x400118:	call	0x500008
<Block for 0x400172, 2 bytes>
0x400172:	leave	
0x400173:	ret	
<Block for 0x40016d, 5 bytes>
0x40016d:	call	0x500020
<Block for 0x40011d, 11 bytes>
0x40011d:	mov	qword ptr [rbp - 0x20], rax
0x400121:	cmp	qword ptr [rbp - 0x20], 0
0x400126:	je	0x40015d
<Block for 0x400128, 29 bytes>
0x400128:	mov	rax, qword ptr [rbp - 0x20]
0x40012c:	mov	rcx, rax
0x40012f:	mov	edx, 0xe
0x400134:	mov	esi, 1
0x400139:	lea	rdi, [rip + 0x116]
0x400140:	call	0x500010
<Block for 0x400145, 12 bytes>
0x400145:	mov	rax, qword ptr [rbp - 0x20]
0x400149:	mov	rdi, rax
0x40014c:	call	0x500018
<Block for 0x400151, 12 bytes>
0x400151:	lea	rax, [rbp - 0x13]
0x400155:	mov	rdi, rax
0x400158:	call	0x500030
