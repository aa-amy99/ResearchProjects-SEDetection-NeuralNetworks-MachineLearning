<Block for 0x40000f, 37 bytes>
0x40000f:	endbr64	
0x400013:	push	rbp
0x400014:	mov	rbp, rsp
0x400017:	sub	rsp, 0x30
0x40001b:	mov	rax, qword ptr fs:[0x28]
0x400024:	mov	qword ptr [rbp - 8], rax
0x400028:	xor	eax, eax
0x40002a:	mov	eax, 0
0x40002f:	call	0x400000
<Block for 0x400034, 8 bytes>
0x400034:	test	eax, eax
0x400036:	je	0x40010b
<Block for 0x40010b, 16 bytes>
0x40010b:	nop	
0x40010c:	mov	rax, qword ptr [rbp - 8]
0x400110:	xor	rax, qword ptr fs:[0x28]
0x400119:	je	0x400120
<Block for 0x40003c, 34 bytes>
0x40003c:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400043:	mov	dword ptr [rbp - 0x28], 0xffffffff
0x40004a:	mov	edx, 6
0x40004f:	mov	esi, 1
0x400054:	mov	edi, 2
0x400059:	call	0x500000
<Block for 0x400120, 2 bytes>
0x400120:	leave	
0x400121:	ret	
<Block for 0x40011b, 5 bytes>
0x40011b:	call	0x500038
<Block for 0x40005e, 9 bytes>
0x40005e:	mov	dword ptr [rbp - 0x24], eax
0x400061:	cmp	dword ptr [rbp - 0x24], -1
0x400065:	je	0x4000e4
<Block for 0x4000e4, 3 bytes>
0x4000e4:	nop	
0x4000e5:	jmp	0x4000eb
<Block for 0x400067, 22 bytes>
0x400067:	lea	rax, [rbp - 0x20]
0x40006b:	mov	edx, 0x10
0x400070:	mov	esi, 0
0x400075:	mov	rdi, rax
0x400078:	call	0x500008
<Block for 0x4000eb, 6 bytes>
0x4000eb:	cmp	dword ptr [rbp - 0x24], -1
0x4000ef:	je	0x4000fb
<Block for 0x40007d, 23 bytes>
0x40007d:	mov	word ptr [rbp - 0x20], 2
0x400083:	mov	dword ptr [rbp - 0x1c], 0
0x40008a:	mov	edi, 0x7530
0x40008f:	call	0x500010
<Block for 0x4000fb, 6 bytes>
0x4000fb:	cmp	dword ptr [rbp - 0x28], -1
0x4000ff:	je	0x40010b
<Block for 0x4000f1, 10 bytes>
0x4000f1:	mov	eax, dword ptr [rbp - 0x24]
0x4000f4:	mov	edi, eax
0x4000f6:	call	0x500030
<Block for 0x400094, 26 bytes>
0x400094:	mov	word ptr [rbp - 0x1e], ax
0x400098:	lea	rcx, [rbp - 0x20]
0x40009c:	mov	eax, dword ptr [rbp - 0x24]
0x40009f:	mov	edx, 0x10
0x4000a4:	mov	rsi, rcx
0x4000a7:	mov	edi, eax
0x4000a9:	call	0x500018
<Block for 0x400101, 10 bytes>
0x400101:	mov	eax, dword ptr [rbp - 0x28]
0x400104:	mov	edi, eax
0x400106:	call	0x500030
<Block for 0x4000ae, 5 bytes>
0x4000ae:	cmp	eax, -1
0x4000b1:	je	0x4000e7
<Block for 0x4000e7, 3 bytes>
0x4000e7:	nop	
0x4000e8:	jmp	0x4000eb
<Block for 0x4000b3, 15 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 0x24]
0x4000b6:	mov	esi, 5
0x4000bb:	mov	edi, eax
0x4000bd:	call	0x500020
<Block for 0x4000c2, 5 bytes>
0x4000c2:	cmp	eax, -1
0x4000c5:	je	0x4000ea
<Block for 0x4000c7, 20 bytes>
0x4000c7:	mov	eax, dword ptr [rbp - 0x24]
0x4000ca:	mov	edx, 0
0x4000cf:	mov	esi, 0
0x4000d4:	mov	edi, eax
0x4000d6:	call	0x500028
<Block for 0x4000ea, 1 bytes>
0x4000ea:	nop	
<Block for 0x4000db, 9 bytes>
0x4000db:	mov	dword ptr [rbp - 0x28], eax
0x4000de:	cmp	dword ptr [rbp - 0x28], -1
0x4000e2:	jmp	0x4000eb
