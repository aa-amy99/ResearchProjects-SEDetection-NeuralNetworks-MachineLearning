<Block for 0x40006c, 22 bytes>
0x40006c:	endbr64	
0x400070:	push	rbp
0x400071:	mov	rbp, rsp
0x400074:	sub	rsp, 0x10
0x400078:	mov	eax, 0
0x40007d:	call	0x40004e
<Block for 0x400082, 8 bytes>
0x400082:	test	eax, eax
0x400084:	je	0x400135
<Block for 0x400135, 3 bytes>
0x400135:	nop	
0x400136:	leave	
0x400137:	ret	
<Block for 0x40008a, 23 bytes>
0x40008a:	mov	qword ptr [rbp - 8], 0
0x400092:	mov	esi, 0
0x400097:	mov	edi, 2
0x40009c:	call	0x500000
<Block for 0x4000a1, 12 bytes>
0x4000a1:	mov	rax, qword ptr [rip + 0x298]
0x4000a8:	test	rax, rax
0x4000ab:	je	0x4000c7
<Block for 0x4000c7, 10 bytes>
0x4000c7:	mov	edi, 4
0x4000cc:	call	0x500010
<Block for 0x4000ad, 15 bytes>
0x4000ad:	mov	rax, qword ptr [rip + 0x28c]
0x4000b4:	mov	rdi, rax
0x4000b7:	call	0x500008
<Block for 0x4000d1, 11 bytes>
0x4000d1:	mov	qword ptr [rbp - 8], rax
0x4000d5:	cmp	qword ptr [rbp - 8], 0
0x4000da:	jne	0x4000e6
<Block for 0x4000bc, 21 bytes>
0x4000bc:	mov	qword ptr [rip + 0x279], 0
0x4000c7:	mov	edi, 4
0x4000cc:	call	0x500010
<Block for 0x4000dc, 10 bytes>
0x4000dc:	mov	edi, 0xffffffff
0x4000e1:	call	0x500018
<Block for 0x4000e6, 41 bytes>
0x4000e6:	mov	rax, qword ptr [rbp - 8]
0x4000ea:	mov	qword ptr [rip + 0x24f], rax
0x4000f1:	mov	rax, qword ptr [rip + 0x248]
0x4000f8:	mov	dword ptr [rax], 1
0x4000fe:	lea	rsi, [rip - 0x105]
0x400105:	mov	edi, 2
0x40010a:	call	0x500000
<Block for 0x40010f, 12 bytes>
0x40010f:	mov	rax, qword ptr [rip + 0x22a]
0x400116:	test	rax, rax
0x400119:	je	0x400135
<Block for 0x40011b, 15 bytes>
0x40011b:	mov	rax, qword ptr [rip + 0x21e]
0x400122:	mov	rdi, rax
0x400125:	call	0x500008
<Block for 0x40012a, 14 bytes>
0x40012a:	mov	qword ptr [rip + 0x20b], 0
0x400135:	nop	
0x400136:	leave	
0x400137:	ret	
