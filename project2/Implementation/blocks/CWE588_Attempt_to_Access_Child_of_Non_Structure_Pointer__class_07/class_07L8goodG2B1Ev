<Block for 0x400068, 59 bytes>
0x400068:	endbr64	
0x40006c:	push	rbp
0x40006d:	mov	rbp, rsp
0x400070:	sub	rsp, 0x20
0x400074:	mov	rax, qword ptr fs:[0x28]
0x40007d:	mov	qword ptr [rbp - 8], rax
0x400081:	xor	eax, eax
0x400083:	mov	dword ptr [rbp - 0x1c], 0x64
0x40008a:	mov	dword ptr [rbp - 0x10], 0
0x400091:	mov	dword ptr [rbp - 0xc], 0
0x400098:	mov	eax, dword ptr [rip + 0xbe]
0x40009e:	cmp	eax, 5
0x4000a1:	je	0x4000b1
<Block for 0x4000b1, 22 bytes>
0x4000b1:	lea	rax, [rbp - 0x10]
0x4000b5:	mov	qword ptr [rbp - 0x18], rax
0x4000b9:	mov	rax, qword ptr [rbp - 0x18]
0x4000bd:	mov	eax, dword ptr [rax + 4]
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500000
<Block for 0x4000a3, 12 bytes>
0x4000a3:	lea	rdi, [rip + 0xb6]
0x4000aa:	call	0x500010
<Block for 0x4000c7, 16 bytes>
0x4000c7:	nop	
0x4000c8:	mov	rax, qword ptr [rbp - 8]
0x4000cc:	xor	rax, qword ptr fs:[0x28]
0x4000d5:	je	0x4000dc
<Block for 0x4000af, 2 bytes>
0x4000af:	jmp	0x4000b9
<Block for 0x4000dc, 2 bytes>
0x4000dc:	leave	
0x4000dd:	ret	
<Block for 0x4000d7, 5 bytes>
0x4000d7:	call	0x500008
<Block for 0x4000b9, 14 bytes>
0x4000b9:	mov	rax, qword ptr [rbp - 0x18]
0x4000bd:	mov	eax, dword ptr [rax + 4]
0x4000c0:	mov	edi, eax
0x4000c2:	call	0x500000
