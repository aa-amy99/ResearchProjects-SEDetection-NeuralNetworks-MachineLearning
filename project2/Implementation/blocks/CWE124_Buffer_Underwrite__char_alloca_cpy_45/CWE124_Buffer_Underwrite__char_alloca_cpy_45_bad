<Block for 0x400076, 81 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x20
0x400082:	mov	rax, qword ptr fs:[0x28]
0x40008b:	mov	qword ptr [rbp - 8], rax
0x40008f:	xor	eax, eax
0x400091:	mov	eax, 0x10
0x400096:	sub	rax, 1
0x40009a:	add	rax, 0x6c
0x40009e:	mov	esi, 0x10
0x4000a3:	mov	edx, 0
0x4000a8:	div	rsi
0x4000ab:	imul	rax, rax, 0x10
0x4000af:	mov	rdx, rax
0x4000b2:	and	rdx, 0xfffffffffffff000
0x4000b9:	mov	rcx, rsp
0x4000bc:	sub	rcx, rdx
0x4000bf:	mov	rdx, rcx
0x4000c2:	cmp	rsp, rdx
0x4000c5:	je	0x4000d9
<Block for 0x4000d9, 26 bytes>
0x4000d9:	mov	rdx, rax
0x4000dc:	and	edx, 0xfff
0x4000e2:	sub	rsp, rdx
0x4000e5:	mov	rdx, rax
0x4000e8:	and	edx, 0xfff
0x4000ee:	test	rdx, rdx
0x4000f1:	je	0x400103
<Block for 0x4000c7, 18 bytes>
0x4000c7:	sub	rsp, 0x1000
0x4000ce:	or	qword ptr [rsp + 0xff8], 0
0x4000d7:	jmp	0x4000c2
<Block for 0x400103, 41 bytes>
0x400103:	mov	rax, rsp
0x400106:	add	rax, 0xf
0x40010a:	shr	rax, 4
0x40010e:	shl	rax, 4
0x400112:	mov	qword ptr [rbp - 0x18], rax
0x400116:	mov	rax, qword ptr [rbp - 0x18]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x41
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x4000f3, 57 bytes>
0x4000f3:	and	eax, 0xfff
0x4000f8:	sub	rax, 8
0x4000fc:	add	rax, rsp
0x4000ff:	or	qword ptr [rax], 0
0x400103:	mov	rax, rsp
0x400106:	add	rax, 0xf
0x40010a:	shr	rax, 4
0x40010e:	shl	rax, 4
0x400112:	mov	qword ptr [rbp - 0x18], rax
0x400116:	mov	rax, qword ptr [rbp - 0x18]
0x40011a:	mov	edx, 0x63
0x40011f:	mov	esi, 0x41
0x400124:	mov	rdi, rax
0x400127:	call	0x500000
<Block for 0x4000c2, 5 bytes>
0x4000c2:	cmp	rsp, rdx
0x4000c5:	je	0x4000d9
<Block for 0x40012c, 44 bytes>
0x40012c:	mov	rax, qword ptr [rbp - 0x18]
0x400130:	add	rax, 0x63
0x400134:	mov	byte ptr [rax], 0
0x400137:	mov	rax, qword ptr [rbp - 0x18]
0x40013b:	sub	rax, 8
0x40013f:	mov	qword ptr [rbp - 0x10], rax
0x400143:	mov	rax, qword ptr [rbp - 0x10]
0x400147:	mov	qword ptr [rip + 0x1a2], rax
0x40014e:	mov	eax, 0
0x400153:	call	0x400000
<Block for 0x400158, 16 bytes>
0x400158:	nop	
0x400159:	mov	rax, qword ptr [rbp - 8]
0x40015d:	xor	rax, qword ptr fs:[0x28]
0x400166:	je	0x40016d
<Block for 0x40016d, 2 bytes>
0x40016d:	leave	
0x40016e:	ret	
<Block for 0x400168, 5 bytes>
0x400168:	call	0x500018
