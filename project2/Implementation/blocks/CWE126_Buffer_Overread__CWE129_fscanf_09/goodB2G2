<Block for 0x400188, 44 bytes>
0x400188:	endbr64	
0x40018c:	push	rbp
0x40018d:	mov	rbp, rsp
0x400190:	sub	rsp, 0x40
0x400194:	mov	rax, qword ptr fs:[0x28]
0x40019d:	mov	qword ptr [rbp - 8], rax
0x4001a1:	xor	eax, eax
0x4001a3:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001aa:	mov	eax, dword ptr [rip + 0xffe50]
0x4001b0:	test	eax, eax
0x4001b2:	je	0x4001d3
<Block for 0x4001d3, 10 bytes>
0x4001d3:	mov	eax, dword ptr [rip + 0xffe27]
0x4001d9:	test	eax, eax
0x4001db:	je	0x400232
<Block for 0x4001b4, 31 bytes>
0x4001b4:	mov	rax, qword ptr [rip + 0xffe4d]
0x4001bb:	lea	rdx, [rbp - 0x34]
0x4001bf:	lea	rsi, [rip + 0x20a]
0x4001c6:	mov	rdi, rax
0x4001c9:	mov	eax, 0
0x4001ce:	call	0x500010
<Block for 0x400232, 16 bytes>
0x400232:	nop	
0x400233:	mov	rax, qword ptr [rbp - 8]
0x400237:	xor	rax, qword ptr fs:[0x28]
0x400240:	je	0x400247
<Block for 0x4001dd, 47 bytes>
0x4001dd:	mov	qword ptr [rbp - 0x30], 0
0x4001e5:	mov	qword ptr [rbp - 0x28], 0
0x4001ed:	mov	qword ptr [rbp - 0x20], 0
0x4001f5:	mov	qword ptr [rbp - 0x18], 0
0x4001fd:	mov	qword ptr [rbp - 0x10], 0
0x400205:	mov	eax, dword ptr [rbp - 0x34]
0x400208:	test	eax, eax
0x40020a:	js	0x400226
<Block for 0x400247, 2 bytes>
0x400247:	leave	
0x400248:	ret	
<Block for 0x400242, 5 bytes>
0x400242:	call	0x500028
<Block for 0x400226, 12 bytes>
0x400226:	lea	rdi, [rip + 0x1e3]
0x40022d:	call	0x500020
<Block for 0x40020c, 8 bytes>
0x40020c:	mov	eax, dword ptr [rbp - 0x34]
0x40020f:	cmp	eax, 9
0x400212:	jg	0x400226
<Block for 0x400214, 16 bytes>
0x400214:	mov	eax, dword ptr [rbp - 0x34]
0x400217:	cdqe	
0x400219:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40021d:	mov	edi, eax
0x40021f:	call	0x500018
<Block for 0x400224, 2 bytes>
0x400224:	jmp	0x400232
