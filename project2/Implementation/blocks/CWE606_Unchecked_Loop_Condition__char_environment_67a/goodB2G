<Block for 0x4001d9, 159 bytes>
0x4001d9:	endbr64	
0x4001dd:	push	rbp
0x4001de:	mov	rbp, rsp
0x4001e1:	sub	rsp, 0x90
0x4001e8:	mov	rax, qword ptr fs:[0x28]
0x4001f1:	mov	qword ptr [rbp - 8], rax
0x4001f5:	xor	eax, eax
0x4001f7:	mov	qword ptr [rbp - 0x70], 0
0x4001ff:	mov	qword ptr [rbp - 0x68], 0
0x400207:	mov	qword ptr [rbp - 0x60], 0
0x40020f:	mov	qword ptr [rbp - 0x58], 0
0x400217:	mov	qword ptr [rbp - 0x50], 0
0x40021f:	mov	qword ptr [rbp - 0x48], 0
0x400227:	mov	qword ptr [rbp - 0x40], 0
0x40022f:	mov	qword ptr [rbp - 0x38], 0
0x400237:	mov	qword ptr [rbp - 0x30], 0
0x40023f:	mov	qword ptr [rbp - 0x28], 0
0x400247:	mov	qword ptr [rbp - 0x20], 0
0x40024f:	mov	qword ptr [rbp - 0x18], 0
0x400257:	mov	dword ptr [rbp - 0x10], 0
0x40025e:	lea	rax, [rbp - 0x70]
0x400262:	mov	qword ptr [rbp - 0x88], rax
0x400269:	mov	rax, qword ptr [rbp - 0x88]
0x400270:	mov	rdi, rax
0x400273:	call	0x500000
<Block for 0x400278, 16 bytes>
0x400278:	mov	qword ptr [rbp - 0x80], rax
0x40027c:	lea	rdi, [rip + 0x8c]
0x400283:	call	0x500008
<Block for 0x400288, 11 bytes>
0x400288:	mov	qword ptr [rbp - 0x78], rax
0x40028c:	cmp	qword ptr [rbp - 0x78], 0
0x400291:	je	0x4002bc
<Block for 0x4002bc, 29 bytes>
0x4002bc:	mov	rax, qword ptr [rbp - 0x88]
0x4002c3:	mov	qword ptr [rbp - 0x90], rax
0x4002ca:	mov	rax, qword ptr [rbp - 0x90]
0x4002d1:	mov	rdi, rax
0x4002d4:	call	0x500030
<Block for 0x400293, 41 bytes>
0x400293:	mov	eax, 0x63
0x400298:	sub	rax, qword ptr [rbp - 0x80]
0x40029c:	mov	rdx, rax
0x40029f:	mov	rcx, qword ptr [rbp - 0x88]
0x4002a6:	mov	rax, qword ptr [rbp - 0x80]
0x4002aa:	add	rcx, rax
0x4002ad:	mov	rax, qword ptr [rbp - 0x78]
0x4002b1:	mov	rsi, rax
0x4002b4:	mov	rdi, rcx
0x4002b7:	call	0x500010
<Block for 0x4002d9, 16 bytes>
0x4002d9:	nop	
0x4002da:	mov	rax, qword ptr [rbp - 8]
0x4002de:	xor	rax, qword ptr fs:[0x28]
0x4002e7:	je	0x4002ee
<Block for 0x4002ee, 2 bytes>
0x4002ee:	leave	
0x4002ef:	ret	
<Block for 0x4002e9, 5 bytes>
0x4002e9:	call	0x500020
