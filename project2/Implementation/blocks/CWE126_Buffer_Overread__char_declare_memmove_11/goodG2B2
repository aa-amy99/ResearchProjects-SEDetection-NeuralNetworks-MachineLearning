<Block for 0x4001c8, 55 bytes>
0x4001c8:	endbr64	
0x4001cc:	push	rbp
0x4001cd:	mov	rbp, rsp
0x4001d0:	sub	rsp, 0x130
0x4001d7:	mov	rax, qword ptr fs:[0x28]
0x4001e0:	mov	qword ptr [rbp - 8], rax
0x4001e4:	xor	eax, eax
0x4001e6:	lea	rax, [rbp - 0x120]
0x4001ed:	mov	edx, 0x31
0x4001f2:	mov	esi, 0x41
0x4001f7:	mov	rdi, rax
0x4001fa:	call	0x500000
<Block for 0x4001ff, 32 bytes>
0x4001ff:	mov	byte ptr [rbp - 0xef], 0
0x400206:	lea	rax, [rbp - 0xe0]
0x40020d:	mov	edx, 0x63
0x400212:	mov	esi, 0x41
0x400217:	mov	rdi, rax
0x40021a:	call	0x500000
<Block for 0x40021f, 14 bytes>
0x40021f:	mov	byte ptr [rbp - 0x7d], 0
0x400223:	mov	eax, 0
0x400228:	call	0x500008
<Block for 0x40022d, 4 bytes>
0x40022d:	test	eax, eax
0x40022f:	je	0x40023f
<Block for 0x40023f, 22 bytes>
0x40023f:	lea	rax, [rbp - 0x70]
0x400243:	mov	edx, 0x63
0x400248:	mov	esi, 0x43
0x40024d:	mov	rdi, rax
0x400250:	call	0x500000
<Block for 0x400231, 36 bytes>
0x400231:	lea	rax, [rbp - 0xe0]
0x400238:	mov	qword ptr [rbp - 0x128], rax
0x40023f:	lea	rax, [rbp - 0x70]
0x400243:	mov	edx, 0x63
0x400248:	mov	esi, 0x43
0x40024d:	mov	rdi, rax
0x400250:	call	0x500000
<Block for 0x400255, 16 bytes>
0x400255:	mov	byte ptr [rbp - 0xd], 0
0x400259:	lea	rax, [rbp - 0x70]
0x40025d:	mov	rdi, rax
0x400260:	call	0x500010
<Block for 0x400265, 25 bytes>
0x400265:	mov	rdx, rax
0x400268:	mov	rcx, qword ptr [rbp - 0x128]
0x40026f:	lea	rax, [rbp - 0x70]
0x400273:	mov	rsi, rcx
0x400276:	mov	rdi, rax
0x400279:	call	0x500018
<Block for 0x40027e, 16 bytes>
0x40027e:	mov	byte ptr [rbp - 0xd], 0
0x400282:	lea	rax, [rbp - 0x70]
0x400286:	mov	rdi, rax
0x400289:	call	0x500020
<Block for 0x40028e, 16 bytes>
0x40028e:	nop	
0x40028f:	mov	rax, qword ptr [rbp - 8]
0x400293:	xor	rax, qword ptr fs:[0x28]
0x40029c:	je	0x4002a3
<Block for 0x4002a3, 2 bytes>
0x4002a3:	leave	
0x4002a4:	ret	
<Block for 0x40029e, 5 bytes>
0x40029e:	call	0x500028
