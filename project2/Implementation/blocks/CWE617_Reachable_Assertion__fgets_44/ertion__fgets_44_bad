<Block for 0x400037, 90 bytes>
0x400037:	endbr64	
0x40003b:	push	rbp
0x40003c:	mov	rbp, rsp
0x40003f:	sub	rsp, 0x30
0x400043:	mov	rax, qword ptr fs:[0x28]
0x40004c:	mov	qword ptr [rbp - 8], rax
0x400050:	xor	eax, eax
0x400052:	lea	rax, [rip - 0x59]
0x400059:	mov	qword ptr [rbp - 0x20], rax
0x40005d:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400064:	mov	qword ptr [rbp - 0x16], 0
0x40006c:	mov	dword ptr [rbp - 0xe], 0
0x400073:	mov	word ptr [rbp - 0xa], 0
0x400079:	mov	rdx, qword ptr [rip + 0xfff88]
0x400080:	lea	rax, [rbp - 0x16]
0x400084:	mov	esi, 0xe
0x400089:	mov	rdi, rax
0x40008c:	call	0x500010
<Block for 0x400091, 5 bytes>
0x400091:	test	rax, rax
0x400094:	je	0x4000a7
<Block for 0x4000a7, 12 bytes>
0x4000a7:	lea	rdi, [rip + 0xe5]
0x4000ae:	call	0x500020
<Block for 0x400096, 12 bytes>
0x400096:	lea	rax, [rbp - 0x16]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500018
<Block for 0x4000b3, 11 bytes>
0x4000b3:	mov	eax, dword ptr [rbp - 0x24]
0x4000b6:	mov	rdx, qword ptr [rbp - 0x20]
0x4000ba:	mov	edi, eax
0x4000bc:	call	rdx
<Block for 0x4000a2, 5 bytes>
0x4000a2:	mov	dword ptr [rbp - 0x24], eax
0x4000a5:	jmp	0x4000b3
<Block for 0x4000be, 16 bytes>
0x4000be:	nop	
0x4000bf:	mov	rax, qword ptr [rbp - 8]
0x4000c3:	xor	rax, qword ptr fs:[0x28]
0x4000cc:	je	0x4000d3
<Block for 0x4000d3, 2 bytes>
0x4000d3:	leave	
0x4000d4:	ret	
<Block for 0x4000ce, 5 bytes>
0x4000ce:	call	0x500028
