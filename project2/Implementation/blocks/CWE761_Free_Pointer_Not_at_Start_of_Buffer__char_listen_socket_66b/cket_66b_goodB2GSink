<Block for 0x400056, 38 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x20
0x400062:	mov	qword ptr [rbp - 0x18], rdi
0x400066:	mov	rax, qword ptr [rbp - 0x18]
0x40006a:	mov	rax, qword ptr [rax + 0x10]
0x40006e:	mov	qword ptr [rbp - 8], rax
0x400072:	mov	qword ptr [rbp - 0x10], 0
0x40007a:	jmp	0x4000a1
<Block for 0x4000a1, 12 bytes>
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500010
<Block for 0x4000ad, 6 bytes>
0x4000ad:	cmp	qword ptr [rbp - 0x10], rax
0x4000b1:	jb	0x40007c
<Block for 0x40007c, 18 bytes>
0x40007c:	mov	rdx, qword ptr [rbp - 8]
0x400080:	mov	rax, qword ptr [rbp - 0x10]
0x400084:	add	rax, rdx
0x400087:	movzx	eax, byte ptr [rax]
0x40008a:	cmp	al, 0x53
0x40008c:	jne	0x40009c
<Block for 0x4000b3, 12 bytes>
0x4000b3:	mov	rax, qword ptr [rbp - 8]
0x4000b7:	mov	rdi, rax
0x4000ba:	call	0x500008
<Block for 0x40008e, 12 bytes>
0x40008e:	lea	rdi, [rip + 0x2d]
0x400095:	call	0x500000
<Block for 0x40009c, 17 bytes>
0x40009c:	add	qword ptr [rbp - 0x10], 1
0x4000a1:	mov	rax, qword ptr [rbp - 8]
0x4000a5:	mov	rdi, rax
0x4000a8:	call	0x500010
<Block for 0x4000bf, 3 bytes>
0x4000bf:	nop	
0x4000c0:	leave	
0x4000c1:	ret	
<Block for 0x40009a, 2 bytes>
0x40009a:	jmp	0x4000b3
