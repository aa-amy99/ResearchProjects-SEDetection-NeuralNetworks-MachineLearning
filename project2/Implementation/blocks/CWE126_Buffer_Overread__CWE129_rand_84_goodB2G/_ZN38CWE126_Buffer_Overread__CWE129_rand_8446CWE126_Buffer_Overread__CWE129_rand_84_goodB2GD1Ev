<Block for 0x400076, 81 bytes>
0x400076:	endbr64	
0x40007a:	push	rbp
0x40007b:	mov	rbp, rsp
0x40007e:	sub	rsp, 0x40
0x400082:	mov	qword ptr [rbp - 0x38], rdi
0x400086:	mov	rax, qword ptr fs:[0x28]
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	xor	eax, eax
0x400095:	mov	qword ptr [rbp - 0x30], 0
0x40009d:	mov	qword ptr [rbp - 0x28], 0
0x4000a5:	mov	qword ptr [rbp - 0x20], 0
0x4000ad:	mov	qword ptr [rbp - 0x18], 0
0x4000b5:	mov	qword ptr [rbp - 0x10], 0
0x4000bd:	mov	rax, qword ptr [rbp - 0x38]
0x4000c1:	mov	eax, dword ptr [rax]
0x4000c3:	test	eax, eax
0x4000c5:	js	0x4000e7
<Block for 0x4000e7, 12 bytes>
0x4000e7:	lea	rdi, [rip + 0x22]
0x4000ee:	call	0x500010
<Block for 0x4000c7, 11 bytes>
0x4000c7:	mov	rax, qword ptr [rbp - 0x38]
0x4000cb:	mov	eax, dword ptr [rax]
0x4000cd:	cmp	eax, 9
0x4000d0:	jg	0x4000e7
<Block for 0x4000f3, 16 bytes>
0x4000f3:	nop	
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	xor	rax, qword ptr fs:[0x28]
0x400101:	je	0x400108
<Block for 0x4000d2, 19 bytes>
0x4000d2:	mov	rax, qword ptr [rbp - 0x38]
0x4000d6:	mov	eax, dword ptr [rax]
0x4000d8:	cdqe	
0x4000da:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4000de:	mov	edi, eax
0x4000e0:	call	0x500008
<Block for 0x400108, 2 bytes>
0x400108:	leave	
0x400109:	ret	
<Block for 0x400103, 5 bytes>
0x400103:	call	0x500018
<Block for 0x4000e5, 2 bytes>
0x4000e5:	jmp	0x4000f3
