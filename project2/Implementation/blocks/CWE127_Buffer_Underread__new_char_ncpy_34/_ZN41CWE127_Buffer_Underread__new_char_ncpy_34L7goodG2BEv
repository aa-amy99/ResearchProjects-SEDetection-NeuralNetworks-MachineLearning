<Block for 0x4000e3, 51 bytes>
0x4000e3:	endbr64	
0x4000e7:	push	rbp
0x4000e8:	mov	rbp, rsp
0x4000eb:	sub	rsp, 0x90
0x4000f2:	mov	rax, qword ptr fs:[0x28]
0x4000fb:	mov	qword ptr [rbp - 8], rax
0x4000ff:	xor	eax, eax
0x400101:	mov	qword ptr [rbp - 0x88], 0
0x40010c:	mov	edi, 0x64
0x400111:	call	0x500000
<Block for 0x400116, 26 bytes>
0x400116:	mov	qword ptr [rbp - 0x80], rax
0x40011a:	mov	rax, qword ptr [rbp - 0x80]
0x40011e:	mov	edx, 0x63
0x400123:	mov	esi, 0x41
0x400128:	mov	rdi, rax
0x40012b:	call	0x500008
<Block for 0x400130, 69 bytes>
0x400130:	mov	rax, qword ptr [rbp - 0x80]
0x400134:	add	rax, 0x63
0x400138:	mov	byte ptr [rax], 0
0x40013b:	mov	rax, qword ptr [rbp - 0x80]
0x40013f:	mov	qword ptr [rbp - 0x88], rax
0x400146:	mov	rax, qword ptr [rbp - 0x88]
0x40014d:	mov	qword ptr [rbp - 0x90], rax
0x400154:	mov	rax, qword ptr [rbp - 0x90]
0x40015b:	mov	qword ptr [rbp - 0x78], rax
0x40015f:	lea	rax, [rbp - 0x70]
0x400163:	mov	edx, 0x63
0x400168:	mov	esi, 0x43
0x40016d:	mov	rdi, rax
0x400170:	call	0x500008
<Block for 0x400175, 16 bytes>
0x400175:	mov	byte ptr [rbp - 0xd], 0
0x400179:	lea	rax, [rbp - 0x70]
0x40017d:	mov	rdi, rax
0x400180:	call	0x500010
<Block for 0x400185, 22 bytes>
0x400185:	mov	rdx, rax
0x400188:	mov	rcx, qword ptr [rbp - 0x78]
0x40018c:	lea	rax, [rbp - 0x70]
0x400190:	mov	rsi, rcx
0x400193:	mov	rdi, rax
0x400196:	call	0x500018
<Block for 0x40019b, 16 bytes>
0x40019b:	mov	byte ptr [rbp - 0xd], 0
0x40019f:	lea	rax, [rbp - 0x70]
0x4001a3:	mov	rdi, rax
0x4001a6:	call	0x500020
<Block for 0x4001ab, 16 bytes>
0x4001ab:	nop	
0x4001ac:	mov	rax, qword ptr [rbp - 8]
0x4001b0:	xor	rax, qword ptr fs:[0x28]
0x4001b9:	je	0x4001c0
<Block for 0x4001c0, 2 bytes>
0x4001c0:	leave	
0x4001c1:	ret	
<Block for 0x4001bb, 5 bytes>
0x4001bb:	call	0x500028
