<Block for 0x400000, 34 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r13
0x40000a:	push	r12
0x40000c:	push	rbx
0x40000d:	sub	rsp, 0x18
0x400011:	mov	dword ptr [rbp - 0x2c], 0
0x400018:	cmp	dword ptr [rbp - 0x2c], 0
0x40001c:	jg	0x40013f
<Block for 0x400022, 5 bytes>
0x400022:	call	0x500000
<Block for 0x40013f, 12 bytes>
0x40013f:	nop	
0x400140:	add	rsp, 0x18
0x400144:	pop	rbx
0x400145:	pop	r12
0x400147:	pop	r13
0x400149:	pop	rbp
0x40014a:	ret	
<Block for 0x400027, 12 bytes>
0x400027:	and	eax, 1
0x40002a:	test	eax, eax
0x40002c:	sete	al
0x40002f:	test	al, al
0x400031:	je	0x400068
<Block for 0x400068, 5 bytes>
0x400068:	call	0x500000
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x10
0x400038:	call	0x500008
<Block for 0x40006d, 12 bytes>
0x40006d:	and	eax, 1
0x400070:	test	eax, eax
0x400072:	sete	al
0x400075:	test	al, al
0x400077:	je	0x4000ae
<Block for 0x40003d, 18 bytes>
0x40003d:	mov	rbx, rax
0x400040:	lea	rsi, [rip + 0x29c]
0x400047:	mov	rdi, rbx
0x40004a:	call	0x500010
<Block for 0x4000ae, 12 bytes>
0x4000ae:	lea	rdi, [rip + 0x238]
0x4000b5:	call	0x500058
<Block for 0x400079, 10 bytes>
0x400079:	mov	edi, 0x10
0x40007e:	call	0x500008
<Block for 0x40004f, 25 bytes>
0x40004f:	mov	rax, qword ptr [rip + 0xfffca]
0x400056:	mov	rdx, rax
0x400059:	lea	rsi, [rip + 0xfffc8]
0x400060:	mov	rdi, rbx
0x400063:	call	0x500030
<Block for 0x4000ba, 9 bytes>
0x4000ba:	add	dword ptr [rbp - 0x2c], 1
0x4000be:	jmp	0x400018
<Block for 0x400083, 18 bytes>
0x400083:	mov	rbx, rax
0x400086:	lea	rsi, [rip + 0x25b]
0x40008d:	mov	rdi, rbx
0x400090:	call	0x500038
<Block for 0x400018, 10 bytes>
0x400018:	cmp	dword ptr [rbp - 0x2c], 0
0x40001c:	jg	0x40013f
<Block for 0x400095, 25 bytes>
0x400095:	mov	rax, qword ptr [rip + 0xfffac]
0x40009c:	mov	rdx, rax
0x40009f:	lea	rsi, [rip + 0xfffaa]
0x4000a6:	mov	rdi, rbx
0x4000a9:	call	0x500030
