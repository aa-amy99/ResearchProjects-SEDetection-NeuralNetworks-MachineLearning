<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	lea	rax, [rbp - 0x28]
0x40001f:	mov	qword ptr [rbp - 0x18], rax
0x400023:	mov	edi, 0x64
0x400028:	call	0x500000
<Block for 0x40002d, 13 bytes>
0x40002d:	mov	qword ptr [rbp - 0x28], rax
0x400031:	mov	rax, qword ptr [rbp - 0x28]
0x400035:	test	rax, rax
0x400038:	jne	0x400044
<Block for 0x40003a, 10 bytes>
0x40003a:	mov	edi, 0xffffffff
0x40003f:	call	0x500008
<Block for 0x400044, 19 bytes>
0x400044:	mov	rax, qword ptr [rbp - 0x28]
0x400048:	mov	byte ptr [rax], 0
0x40004b:	mov	rax, qword ptr [rbp - 0x28]
0x40004f:	mov	rdi, rax
0x400052:	call	0x500010
<Block for 0x400057, 23 bytes>
0x400057:	mov	qword ptr [rbp - 0x10], rax
0x40005b:	mov	eax, 0x64
0x400060:	sub	rax, qword ptr [rbp - 0x10]
0x400064:	cmp	rax, 1
0x400068:	jbe	0x4000ff
<Block for 0x4000ff, 22 bytes>
0x4000ff:	mov	rax, qword ptr [rbp - 0x18]
0x400103:	mov	rax, qword ptr [rax]
0x400106:	mov	qword ptr [rbp - 0x20], rax
0x40010a:	mov	rax, qword ptr [rbp - 0x20]
0x40010e:	movzx	eax, byte ptr [rax]
0x400111:	test	al, al
0x400113:	je	0x400135
<Block for 0x40006e, 44 bytes>
0x40006e:	mov	rax, qword ptr [rip + 0xfffa3]
0x400075:	mov	rdx, qword ptr [rbp - 0x10]
0x400079:	mov	ecx, 0x64
0x40007e:	sub	ecx, edx
0x400080:	mov	edx, ecx
0x400082:	mov	esi, edx
0x400084:	mov	rcx, qword ptr [rbp - 0x28]
0x400088:	mov	rdx, qword ptr [rbp - 0x10]
0x40008c:	add	rcx, rdx
0x40008f:	mov	rdx, rax
0x400092:	mov	rdi, rcx
0x400095:	call	0x500020
<Block for 0x400135, 12 bytes>
0x400135:	mov	rax, qword ptr [rbp - 0x20]
0x400139:	mov	rdi, rax
0x40013c:	call	0x500030
<Block for 0x400115, 11 bytes>
0x400115:	mov	rax, qword ptr [rbp - 0x20]
0x400119:	movzx	eax, byte ptr [rax]
0x40011c:	cmp	al, 0x53
0x40011e:	jne	0x40012e
<Block for 0x40009a, 10 bytes>
0x40009a:	test	rax, rax
0x40009d:	setne	al
0x4000a0:	test	al, al
0x4000a2:	je	0x4000e5
<Block for 0x400141, 16 bytes>
0x400141:	nop	
0x400142:	mov	rax, qword ptr [rbp - 8]
0x400146:	xor	rax, qword ptr fs:[0x28]
0x40014f:	je	0x400156
<Block for 0x400120, 12 bytes>
0x400120:	lea	rdi, [rip + 0x1be]
0x400127:	call	0x500028
<Block for 0x40012e, 7 bytes>
0x40012e:	add	qword ptr [rbp - 0x20], 1
0x400133:	jmp	0x40010a
<Block for 0x4000e5, 12 bytes>
0x4000e5:	lea	rdi, [rip + 0x1ea]
0x4000ec:	call	0x500028
<Block for 0x4000a4, 12 bytes>
0x4000a4:	mov	rax, qword ptr [rbp - 0x28]
0x4000a8:	mov	rdi, rax
0x4000ab:	call	0x500010
<Block for 0x400156, 2 bytes>
0x400156:	leave	
0x400157:	ret	
<Block for 0x400151, 5 bytes>
0x400151:	call	0x500038
<Block for 0x40012c, 2 bytes>
0x40012c:	jmp	0x400135
<Block for 0x40010a, 11 bytes>
0x40010a:	mov	rax, qword ptr [rbp - 0x20]
0x40010e:	movzx	eax, byte ptr [rax]
0x400111:	test	al, al
0x400113:	je	0x400135
<Block for 0x4000f1, 36 bytes>
0x4000f1:	mov	rdx, qword ptr [rbp - 0x28]
0x4000f5:	mov	rax, qword ptr [rbp - 0x10]
0x4000f9:	add	rax, rdx
0x4000fc:	mov	byte ptr [rax], 0
0x4000ff:	mov	rax, qword ptr [rbp - 0x18]
0x400103:	mov	rax, qword ptr [rax]
0x400106:	mov	qword ptr [rbp - 0x20], rax
0x40010a:	mov	rax, qword ptr [rbp - 0x20]
0x40010e:	movzx	eax, byte ptr [rax]
0x400111:	test	al, al
0x400113:	je	0x400135
<Block for 0x4000b0, 11 bytes>
0x4000b0:	mov	qword ptr [rbp - 0x10], rax
0x4000b4:	cmp	qword ptr [rbp - 0x10], 0
0x4000b9:	je	0x4000ff
<Block for 0x4000bb, 22 bytes>
0x4000bb:	mov	rax, qword ptr [rbp - 0x28]
0x4000bf:	mov	rdx, qword ptr [rbp - 0x10]
0x4000c3:	sub	rdx, 1
0x4000c7:	add	rax, rdx
0x4000ca:	movzx	eax, byte ptr [rax]
0x4000cd:	cmp	al, 0xa
0x4000cf:	jne	0x4000ff
<Block for 0x4000d1, 20 bytes>
0x4000d1:	mov	rax, qword ptr [rbp - 0x28]
0x4000d5:	mov	rdx, qword ptr [rbp - 0x10]
0x4000d9:	sub	rdx, 1
0x4000dd:	add	rax, rdx
0x4000e0:	mov	byte ptr [rax], 0
0x4000e3:	jmp	0x4000ff
