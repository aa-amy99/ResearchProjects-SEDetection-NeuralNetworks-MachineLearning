<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4003fc
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x68], 0
0x400030:	mov	edi, 0x64
0x400035:	call	0x500000
<Block for 0x40003a, 11 bytes>
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	cmp	qword ptr [rbp - 0x58], 0
0x400043:	jne	0x40004f
<Block for 0x400045, 10 bytes>
0x400045:	mov	edi, 0xffffffff
0x40004a:	call	0x500008
<Block for 0x40004f, 22 bytes>
0x40004f:	mov	rax, qword ptr [rbp - 0x58]
0x400053:	mov	edx, 0x63
0x400058:	mov	esi, 0x41
0x40005d:	mov	rdi, rax
0x400060:	call	0x500010
<Block for 0x400065, 35 bytes>
0x400065:	mov	rax, qword ptr [rbp - 0x58]
0x400069:	add	rax, 0x63
0x40006d:	mov	byte ptr [rax], 0
0x400070:	mov	rax, qword ptr [rbp - 0x58]
0x400074:	sub	rax, 8
0x400078:	mov	qword ptr [rbp - 0x68], rax
0x40007c:	lea	rax, [rbp - 0x50]
0x400080:	mov	rdi, rax
0x400083:	call	0x40058e
<Block for 0x400088, 23 bytes>
0x400088:	mov	qword ptr [rbp - 0x60], rax
0x40008c:	lea	rdx, [rbp - 0x60]
0x400090:	lea	rax, [rbp - 0x30]
0x400094:	mov	rsi, rdx
0x400097:	mov	rdi, rax
0x40009a:	call	0x4005de
<Block for 0x40009f, 28 bytes>
0x40009f:	lea	rdx, [rbp - 0x68]
0x4000a3:	mov	rsi, qword ptr [rbp - 0x30]
0x4000a7:	lea	rax, [rbp - 0x50]
0x4000ab:	mov	rcx, rdx
0x4000ae:	mov	edx, 1
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x40060c
<Block for 0x4000bb, 12 bytes>
0x4000bb:	lea	rax, [rbp - 0x50]
0x4000bf:	mov	rdi, rax
0x4000c2:	call	0x40058e
<Block for 0x4000c7, 23 bytes>
0x4000c7:	mov	qword ptr [rbp - 0x60], rax
0x4000cb:	lea	rdx, [rbp - 0x60]
0x4000cf:	lea	rax, [rbp - 0x30]
0x4000d3:	mov	rsi, rdx
0x4000d6:	mov	rdi, rax
0x4000d9:	call	0x4005de
<Block for 0x4000de, 28 bytes>
0x4000de:	lea	rdx, [rbp - 0x68]
0x4000e2:	mov	rsi, qword ptr [rbp - 0x30]
0x4000e6:	lea	rax, [rbp - 0x50]
0x4000ea:	mov	rcx, rdx
0x4000ed:	mov	edx, 1
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x40060c
<Block for 0x4000fa, 12 bytes>
0x4000fa:	lea	rax, [rbp - 0x50]
0x4000fe:	mov	rdi, rax
0x400101:	call	0x40058e
<Block for 0x400106, 23 bytes>
0x400106:	mov	qword ptr [rbp - 0x60], rax
0x40010a:	lea	rdx, [rbp - 0x60]
0x40010e:	lea	rax, [rbp - 0x30]
0x400112:	mov	rsi, rdx
0x400115:	mov	rdi, rax
0x400118:	call	0x4005de
<Block for 0x40011d, 28 bytes>
0x40011d:	lea	rdx, [rbp - 0x68]
0x400121:	mov	rsi, qword ptr [rbp - 0x30]
0x400125:	lea	rax, [rbp - 0x50]
0x400129:	mov	rcx, rdx
0x40012c:	mov	edx, 1
0x400131:	mov	rdi, rax
0x400134:	call	0x40060c
<Block for 0x400139, 19 bytes>
0x400139:	lea	rdx, [rbp - 0x50]
0x40013d:	lea	rax, [rbp - 0x30]
0x400141:	mov	rsi, rdx
0x400144:	mov	rdi, rax
0x400147:	call	0x4006d2
<Block for 0x40014c, 12 bytes>
0x40014c:	lea	rax, [rbp - 0x30]
0x400150:	mov	rdi, rax
0x400153:	call	0x500018
<Block for 0x400158, 12 bytes>
0x400158:	lea	rax, [rbp - 0x30]
0x40015c:	mov	rdi, rax
0x40015f:	call	0x400546
<Block for 0x400164, 12 bytes>
0x400164:	lea	rax, [rbp - 0x50]
0x400168:	mov	rdi, rax
0x40016b:	call	0x400546
<Block for 0x400170, 16 bytes>
0x400170:	nop	
0x400171:	mov	rax, qword ptr [rbp - 0x18]
0x400175:	xor	rax, qword ptr fs:[0x28]
0x40017e:	je	0x4001ba
<Block for 0x4001ba, 7 bytes>
0x4001ba:	add	rsp, 0x68
0x4001be:	pop	rbx
0x4001bf:	pop	rbp
0x4001c0:	ret	
<Block for 0x400180, 2 bytes>
0x400180:	jmp	0x4001b5
<Block for 0x4001b5, 5 bytes>
0x4001b5:	call	0x500028
