<Block for 0x400000, 52 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x88
0x400010:	mov	rax, qword ptr fs:[0x28]
0x400019:	mov	qword ptr [rbp - 0x18], rax
0x40001d:	xor	eax, eax
0x40001f:	lea	rax, [rbp - 0x80]
0x400023:	mov	qword ptr [rbp - 0x90], rax
0x40002a:	mov	edi, 8
0x40002f:	call	0x500000
<Block for 0x400034, 11 bytes>
0x400034:	mov	rbx, rax
0x400037:	mov	rdi, rbx
0x40003a:	call	0x40017a
<Block for 0x40003f, 42 bytes>
0x40003f:	mov	qword ptr [rbp - 0x88], rbx
0x400046:	mov	rax, qword ptr [rbp - 0x88]
0x40004d:	mov	rax, qword ptr [rax]
0x400050:	mov	rcx, qword ptr [rax]
0x400053:	mov	rdx, qword ptr [rbp - 0x90]
0x40005a:	mov	rax, qword ptr [rbp - 0x88]
0x400061:	mov	rsi, rdx
0x400064:	mov	rdi, rax
0x400067:	call	rcx
<Block for 0x400069, 12 bytes>
0x400069:	mov	rax, qword ptr [rbp - 0x88]
0x400070:	test	rax, rax
0x400073:	je	0x400082
<Block for 0x400082, 16 bytes>
0x400082:	nop	
0x400083:	mov	rax, qword ptr [rbp - 0x18]
0x400087:	xor	rax, qword ptr fs:[0x28]
0x400090:	je	0x400097
<Block for 0x400075, 13 bytes>
0x400075:	mov	esi, 8
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500008
<Block for 0x400097, 10 bytes>
0x400097:	add	rsp, 0x88
0x40009e:	pop	rbx
0x40009f:	pop	rbp
0x4000a0:	ret	
<Block for 0x400092, 5 bytes>
0x400092:	call	0x500010
