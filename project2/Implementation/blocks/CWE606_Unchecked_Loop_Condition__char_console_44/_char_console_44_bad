<Block for 0x400081, 167 bytes>
0x400081:	endbr64	
0x400085:	push	rbp
0x400086:	mov	rbp, rsp
0x400089:	sub	rsp, 0x90
0x400090:	mov	rax, qword ptr fs:[0x28]
0x400099:	mov	qword ptr [rbp - 8], rax
0x40009d:	xor	eax, eax
0x40009f:	lea	rax, [rip - 0xa6]
0x4000a6:	mov	qword ptr [rbp - 0x88], rax
0x4000ad:	mov	qword ptr [rbp - 0x70], 0
0x4000b5:	mov	qword ptr [rbp - 0x68], 0
0x4000bd:	mov	qword ptr [rbp - 0x60], 0
0x4000c5:	mov	qword ptr [rbp - 0x58], 0
0x4000cd:	mov	qword ptr [rbp - 0x50], 0
0x4000d5:	mov	qword ptr [rbp - 0x48], 0
0x4000dd:	mov	qword ptr [rbp - 0x40], 0
0x4000e5:	mov	qword ptr [rbp - 0x38], 0
0x4000ed:	mov	qword ptr [rbp - 0x30], 0
0x4000f5:	mov	qword ptr [rbp - 0x28], 0
0x4000fd:	mov	qword ptr [rbp - 0x20], 0
0x400105:	mov	qword ptr [rbp - 0x18], 0
0x40010d:	mov	dword ptr [rbp - 0x10], 0
0x400114:	lea	rax, [rbp - 0x70]
0x400118:	mov	qword ptr [rbp - 0x80], rax
0x40011c:	mov	rax, qword ptr [rbp - 0x80]
0x400120:	mov	rdi, rax
0x400123:	call	0x500018
<Block for 0x400128, 23 bytes>
0x400128:	mov	qword ptr [rbp - 0x78], rax
0x40012c:	mov	eax, 0x64
0x400131:	sub	rax, qword ptr [rbp - 0x78]
0x400135:	cmp	rax, 1
0x400139:	jbe	0x4001cb
<Block for 0x4001cb, 16 bytes>
0x4001cb:	mov	rax, qword ptr [rbp - 0x80]
0x4001cf:	mov	rdx, qword ptr [rbp - 0x88]
0x4001d6:	mov	rdi, rax
0x4001d9:	call	rdx
<Block for 0x40013f, 44 bytes>
0x40013f:	mov	rax, qword ptr [rip + 0xffeda]
0x400146:	mov	rdx, qword ptr [rbp - 0x78]
0x40014a:	mov	ecx, 0x64
0x40014f:	sub	ecx, edx
0x400151:	mov	edx, ecx
0x400153:	mov	esi, edx
0x400155:	mov	rcx, qword ptr [rbp - 0x80]
0x400159:	mov	rdx, qword ptr [rbp - 0x78]
0x40015d:	add	rcx, rdx
0x400160:	mov	rdx, rax
0x400163:	mov	rdi, rcx
0x400166:	call	0x500028
<Block for 0x4001db, 16 bytes>
0x4001db:	nop	
0x4001dc:	mov	rax, qword ptr [rbp - 8]
0x4001e0:	xor	rax, qword ptr fs:[0x28]
0x4001e9:	je	0x4001f0
<Block for 0x40016b, 5 bytes>
0x40016b:	test	rax, rax
0x40016e:	je	0x4001b1
<Block for 0x4001f0, 2 bytes>
0x4001f0:	leave	
0x4001f1:	ret	
<Block for 0x4001eb, 5 bytes>
0x4001eb:	call	0x500010
<Block for 0x4001b1, 12 bytes>
0x4001b1:	lea	rdi, [rip + 0x39f]
0x4001b8:	call	0x500030
<Block for 0x400170, 12 bytes>
0x400170:	mov	rax, qword ptr [rbp - 0x80]
0x400174:	mov	rdi, rax
0x400177:	call	0x500018
<Block for 0x4001bd, 30 bytes>
0x4001bd:	mov	rdx, qword ptr [rbp - 0x80]
0x4001c1:	mov	rax, qword ptr [rbp - 0x78]
0x4001c5:	add	rax, rdx
0x4001c8:	mov	byte ptr [rax], 0
0x4001cb:	mov	rax, qword ptr [rbp - 0x80]
0x4001cf:	mov	rdx, qword ptr [rbp - 0x88]
0x4001d6:	mov	rdi, rax
0x4001d9:	call	rdx
<Block for 0x40017c, 11 bytes>
0x40017c:	mov	qword ptr [rbp - 0x78], rax
0x400180:	cmp	qword ptr [rbp - 0x78], 0
0x400185:	je	0x4001cb
<Block for 0x400187, 22 bytes>
0x400187:	mov	rax, qword ptr [rbp - 0x78]
0x40018b:	lea	rdx, [rax - 1]
0x40018f:	mov	rax, qword ptr [rbp - 0x80]
0x400193:	add	rax, rdx
0x400196:	movzx	eax, byte ptr [rax]
0x400199:	cmp	al, 0xa
0x40019b:	jne	0x4001cb
<Block for 0x40019d, 20 bytes>
0x40019d:	mov	rax, qword ptr [rbp - 0x78]
0x4001a1:	lea	rdx, [rax - 1]
0x4001a5:	mov	rax, qword ptr [rbp - 0x80]
0x4001a9:	add	rax, rdx
0x4001ac:	mov	byte ptr [rax], 0
0x4001af:	jmp	0x4001cb
