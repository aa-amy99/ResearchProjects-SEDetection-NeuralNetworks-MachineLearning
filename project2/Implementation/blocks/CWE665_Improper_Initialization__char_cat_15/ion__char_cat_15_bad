<Block for 0x400000, 67 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xf0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	lea	rax, [rbp - 0xe0]
0x400025:	mov	qword ptr [rbp - 0xe8], rax
0x40002c:	nop	
0x40002d:	lea	rax, [rbp - 0x70]
0x400031:	mov	edx, 0x63
0x400036:	mov	esi, 0x43
0x40003b:	mov	rdi, rax
0x40003e:	call	0x500000
<Block for 0x400043, 26 bytes>
0x400043:	mov	byte ptr [rbp - 0xd], 0
0x400047:	lea	rdx, [rbp - 0x70]
0x40004b:	mov	rax, qword ptr [rbp - 0xe8]
0x400052:	mov	rsi, rdx
0x400055:	mov	rdi, rax
0x400058:	call	0x500008
<Block for 0x40005d, 15 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0xe8]
0x400064:	mov	rdi, rax
0x400067:	call	0x500010
<Block for 0x40006c, 16 bytes>
0x40006c:	nop	
0x40006d:	mov	rax, qword ptr [rbp - 8]
0x400071:	xor	rax, qword ptr fs:[0x28]
0x40007a:	je	0x400081
<Block for 0x400081, 2 bytes>
0x400081:	leave	
0x400082:	ret	
<Block for 0x40007c, 5 bytes>
0x40007c:	call	0x500018
