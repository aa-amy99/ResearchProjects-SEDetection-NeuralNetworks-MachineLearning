<Block for 0x400110, 77 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0xf0
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	lea	rax, [rbp - 0xe0]
0x400135:	mov	qword ptr [rbp - 0xe8], rax
0x40013c:	mov	rax, qword ptr [rbp - 0xe8]
0x400143:	mov	byte ptr [rax], 0
0x400146:	nop	
0x400147:	lea	rax, [rbp - 0x70]
0x40014b:	mov	edx, 0x63
0x400150:	mov	esi, 0x43
0x400155:	mov	rdi, rax
0x400158:	call	0x500000
<Block for 0x40015d, 26 bytes>
0x40015d:	mov	byte ptr [rbp - 0xd], 0
0x400161:	lea	rdx, [rbp - 0x70]
0x400165:	mov	rax, qword ptr [rbp - 0xe8]
0x40016c:	mov	rsi, rdx
0x40016f:	mov	rdi, rax
0x400172:	call	0x500008
<Block for 0x400177, 15 bytes>
0x400177:	mov	rax, qword ptr [rbp - 0xe8]
0x40017e:	mov	rdi, rax
0x400181:	call	0x500010
<Block for 0x400186, 16 bytes>
0x400186:	nop	
0x400187:	mov	rax, qword ptr [rbp - 8]
0x40018b:	xor	rax, qword ptr fs:[0x28]
0x400194:	je	0x40019b
<Block for 0x40019b, 2 bytes>
0x40019b:	leave	
0x40019c:	ret	
<Block for 0x400196, 5 bytes>
0x400196:	call	0x500018
