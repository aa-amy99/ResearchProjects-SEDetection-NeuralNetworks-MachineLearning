<Block for 0x4001e2, 45 bytes>
0x4001e2:	endbr64	
0x4001e6:	push	rbp
0x4001e7:	mov	rbp, rsp
0x4001ea:	sub	rsp, 0x60
0x4001ee:	mov	rax, qword ptr fs:[0x28]
0x4001f7:	mov	qword ptr [rbp - 8], rax
0x4001fb:	xor	eax, eax
0x4001fd:	lea	rax, [rbp - 0x50]
0x400201:	mov	qword ptr [rbp - 0x40], rax
0x400205:	mov	edi, 0x64
0x40020a:	call	0x500000
<Block for 0x40020f, 13 bytes>
0x40020f:	mov	qword ptr [rbp - 0x50], rax
0x400213:	mov	rax, qword ptr [rbp - 0x50]
0x400217:	test	rax, rax
0x40021a:	jne	0x400226
<Block for 0x40021c, 10 bytes>
0x40021c:	mov	edi, 0xffffffff
0x400221:	call	0x500008
<Block for 0x400226, 26 bytes>
0x400226:	mov	rax, qword ptr [rbp - 0x50]
0x40022a:	mov	byte ptr [rax], 0
0x40022d:	mov	dword ptr [rbp - 0x58], 0xffffffff
0x400234:	mov	rax, qword ptr [rbp - 0x50]
0x400238:	mov	rdi, rax
0x40023b:	call	0x500010
<Block for 0x400240, 24 bytes>
0x400240:	mov	qword ptr [rbp - 0x38], rax
0x400244:	mov	edx, 6
0x400249:	mov	esi, 1
0x40024e:	mov	edi, 2
0x400253:	call	0x500018
<Block for 0x400258, 13 bytes>
0x400258:	mov	dword ptr [rbp - 0x58], eax
0x40025b:	cmp	dword ptr [rbp - 0x58], -1
0x40025f:	je	0x400357
<Block for 0x400357, 3 bytes>
0x400357:	nop	
0x400358:	jmp	0x40035b
<Block for 0x400265, 22 bytes>
0x400265:	lea	rax, [rbp - 0x20]
0x400269:	mov	edx, 0x10
0x40026e:	mov	esi, 0
0x400273:	mov	rdi, rax
0x400276:	call	0x500020
<Block for 0x40035b, 6 bytes>
0x40035b:	cmp	dword ptr [rbp - 0x58], -1
0x40035f:	je	0x40036b
<Block for 0x40027b, 18 bytes>
0x40027b:	mov	word ptr [rbp - 0x20], 2
0x400281:	lea	rdi, [rip + 0x162]
0x400288:	call	0x500028
<Block for 0x40036b, 31 bytes>
0x40036b:	mov	rax, qword ptr [rbp - 0x40]
0x40036f:	mov	rax, qword ptr [rax]
0x400372:	mov	qword ptr [rbp - 0x28], rax
0x400376:	mov	qword ptr [rbp - 0x48], 0
0x40037e:	mov	rax, qword ptr [rbp - 0x28]
0x400382:	mov	rdi, rax
0x400385:	call	0x500010
<Block for 0x400361, 10 bytes>
0x400361:	mov	eax, dword ptr [rbp - 0x58]
0x400364:	mov	edi, eax
0x400366:	call	0x500050
<Block for 0x40028d, 13 bytes>
0x40028d:	mov	dword ptr [rbp - 0x1c], eax
0x400290:	mov	edi, 0x6987
0x400295:	call	0x500030
<Block for 0x40038a, 6 bytes>
0x40038a:	cmp	qword ptr [rbp - 0x48], rax
0x40038e:	jae	0x4003b7
<Block for 0x40029a, 26 bytes>
0x40029a:	mov	word ptr [rbp - 0x1e], ax
0x40029e:	lea	rcx, [rbp - 0x20]
0x4002a2:	mov	eax, dword ptr [rbp - 0x58]
0x4002a5:	mov	edx, 0x10
0x4002aa:	mov	rsi, rcx
0x4002ad:	mov	edi, eax
0x4002af:	call	0x500038
<Block for 0x400390, 18 bytes>
0x400390:	mov	rdx, qword ptr [rbp - 0x28]
0x400394:	mov	rax, qword ptr [rbp - 0x48]
0x400398:	add	rax, rdx
0x40039b:	movzx	eax, byte ptr [rax]
0x40039e:	cmp	al, 0x53
0x4003a0:	jne	0x4003b0
<Block for 0x4003b7, 12 bytes>
0x4003b7:	mov	rax, qword ptr [rbp - 0x28]
0x4003bb:	mov	rdi, rax
0x4003be:	call	0x500060
<Block for 0x4002b4, 14 bytes>
0x4002b4:	cmp	eax, -1
0x4002b7:	sete	al
0x4002ba:	test	al, al
0x4002bc:	jne	0x40035a
<Block for 0x4003a2, 12 bytes>
0x4003a2:	lea	rdi, [rip + 0x4b]
0x4003a9:	call	0x500058
<Block for 0x4003b0, 7 bytes>
0x4003b0:	add	qword ptr [rbp - 0x48], 1
0x4003b5:	jmp	0x40037e
<Block for 0x4003c3, 16 bytes>
0x4003c3:	nop	
0x4003c4:	mov	rax, qword ptr [rbp - 8]
0x4003c8:	xor	rax, qword ptr fs:[0x28]
0x4003d1:	je	0x4003d8
<Block for 0x4002c2, 39 bytes>
0x4002c2:	mov	eax, 0x63
0x4002c7:	sub	rax, qword ptr [rbp - 0x38]
0x4002cb:	mov	rdx, rax
0x4002ce:	mov	rcx, qword ptr [rbp - 0x50]
0x4002d2:	mov	rax, qword ptr [rbp - 0x38]
0x4002d6:	lea	rsi, [rcx + rax]
0x4002da:	mov	eax, dword ptr [rbp - 0x58]
0x4002dd:	mov	ecx, 0
0x4002e2:	mov	edi, eax
0x4002e4:	call	0x500040
<Block for 0x40035a, 1 bytes>
0x40035a:	nop	
<Block for 0x4003ae, 2 bytes>
0x4003ae:	jmp	0x4003b7
<Block for 0x40037e, 12 bytes>
0x40037e:	mov	rax, qword ptr [rbp - 0x28]
0x400382:	mov	rdi, rax
0x400385:	call	0x500010
<Block for 0x4003d8, 2 bytes>
0x4003d8:	leave	
0x4003d9:	ret	
<Block for 0x4003d3, 5 bytes>
0x4003d3:	call	0x500068
<Block for 0x4002e9, 9 bytes>
0x4002e9:	mov	dword ptr [rbp - 0x54], eax
0x4002ec:	cmp	dword ptr [rbp - 0x54], -1
0x4002f0:	je	0x40035b
<Block for 0x4002f2, 6 bytes>
0x4002f2:	cmp	dword ptr [rbp - 0x54], 0
0x4002f6:	je	0x40035b
<Block for 0x4002f8, 40 bytes>
0x4002f8:	mov	rax, qword ptr [rbp - 0x50]
0x4002fc:	mov	edx, dword ptr [rbp - 0x54]
0x4002ff:	movsxd	rcx, edx
0x400302:	mov	rdx, qword ptr [rbp - 0x38]
0x400306:	add	rdx, rcx
0x400309:	add	rax, rdx
0x40030c:	mov	byte ptr [rax], 0
0x40030f:	mov	rax, qword ptr [rbp - 0x50]
0x400313:	mov	esi, 0xd
0x400318:	mov	rdi, rax
0x40031b:	call	0x500048
<Block for 0x400320, 11 bytes>
0x400320:	mov	qword ptr [rbp - 0x30], rax
0x400324:	cmp	qword ptr [rbp - 0x30], 0
0x400329:	je	0x400332
<Block for 0x400332, 17 bytes>
0x400332:	mov	rax, qword ptr [rbp - 0x50]
0x400336:	mov	esi, 0xa
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500048
<Block for 0x40032b, 24 bytes>
0x40032b:	mov	rax, qword ptr [rbp - 0x30]
0x40032f:	mov	byte ptr [rax], 0
0x400332:	mov	rax, qword ptr [rbp - 0x50]
0x400336:	mov	esi, 0xa
0x40033b:	mov	rdi, rax
0x40033e:	call	0x500048
<Block for 0x400343, 11 bytes>
0x400343:	mov	qword ptr [rbp - 0x30], rax
0x400347:	cmp	qword ptr [rbp - 0x30], 0
0x40034c:	je	0x40035b
<Block for 0x40034e, 9 bytes>
0x40034e:	mov	rax, qword ptr [rbp - 0x30]
0x400352:	mov	byte ptr [rax], 0
0x400355:	jmp	0x40035b
