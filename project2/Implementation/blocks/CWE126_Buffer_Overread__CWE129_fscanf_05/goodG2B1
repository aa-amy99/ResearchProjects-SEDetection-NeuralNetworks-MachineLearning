<Block for 0x400249, 44 bytes>
0x400249:	endbr64	
0x40024d:	push	rbp
0x40024e:	mov	rbp, rsp
0x400251:	sub	rsp, 0x40
0x400255:	mov	rax, qword ptr fs:[0x28]
0x40025e:	mov	qword ptr [rbp - 8], rax
0x400262:	xor	eax, eax
0x400264:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x40026b:	mov	eax, dword ptr [rip + 0x15f]
0x400271:	test	eax, eax
0x400273:	je	0x400283
<Block for 0x400283, 17 bytes>
0x400283:	mov	dword ptr [rbp - 0x34], 7
0x40028a:	mov	eax, dword ptr [rip + 0x13c]
0x400290:	test	eax, eax
0x400292:	je	0x4002e0
<Block for 0x400275, 12 bytes>
0x400275:	lea	rdi, [rip + 0x183]
0x40027c:	call	0x500018
<Block for 0x4002e0, 16 bytes>
0x4002e0:	nop	
0x4002e1:	mov	rax, qword ptr [rbp - 8]
0x4002e5:	xor	rax, qword ptr fs:[0x28]
0x4002ee:	je	0x4002f5
<Block for 0x400294, 46 bytes>
0x400294:	mov	qword ptr [rbp - 0x30], 0
0x40029c:	mov	qword ptr [rbp - 0x28], 0
0x4002a4:	mov	qword ptr [rbp - 0x20], 0
0x4002ac:	mov	qword ptr [rbp - 0x18], 0
0x4002b4:	mov	qword ptr [rbp - 0x10], 0
0x4002bc:	cmp	dword ptr [rbp - 0x34], 0
0x4002c0:	js	0x4002d4
<Block for 0x400281, 2 bytes>
0x400281:	jmp	0x40028a
<Block for 0x4002f5, 2 bytes>
0x4002f5:	leave	
0x4002f6:	ret	
<Block for 0x4002f0, 5 bytes>
0x4002f0:	call	0x500020
<Block for 0x4002d4, 12 bytes>
0x4002d4:	lea	rdi, [rip + 0x105]
0x4002db:	call	0x500018
<Block for 0x4002c2, 16 bytes>
0x4002c2:	mov	eax, dword ptr [rbp - 0x34]
0x4002c5:	cdqe	
0x4002c7:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4002cb:	mov	edi, eax
0x4002cd:	call	0x500010
<Block for 0x40028a, 10 bytes>
0x40028a:	mov	eax, dword ptr [rip + 0x13c]
0x400290:	test	eax, eax
0x400292:	je	0x4002e0
<Block for 0x4002d2, 2 bytes>
0x4002d2:	jmp	0x4002e0
