<Block for 0x40038a, 40 bytes>
0x40038a:	endbr64	
0x40038e:	push	rbp
0x40038f:	mov	rbp, rsp
0x400392:	push	rbx
0x400393:	sub	rsp, 0x78
0x400397:	mov	rax, qword ptr fs:[0x28]
0x4003a0:	mov	qword ptr [rbp - 0x18], rax
0x4003a4:	xor	eax, eax
0x4003a6:	lea	rax, [rbp - 0x70]
0x4003aa:	mov	rdi, rax
0x4003ad:	call	0x40081c
<Block for 0x4003b2, 12 bytes>
0x4003b2:	lea	rax, [rbp - 0x50]
0x4003b6:	mov	rdi, rax
0x4003b9:	call	0x40089c
<Block for 0x4003be, 26 bytes>
0x4003be:	mov	dword ptr [rbp - 0x30], 0x64
0x4003c5:	lea	rdx, [rbp - 0x30]
0x4003c9:	lea	rax, [rbp - 0x70]
0x4003cd:	mov	rsi, rdx
0x4003d0:	mov	rdi, rax
0x4003d3:	call	0x400b6a
<Block for 0x4003d8, 26 bytes>
0x4003d8:	mov	dword ptr [rbp - 0x30], 0
0x4003df:	lea	rdx, [rbp - 0x30]
0x4003e3:	lea	rax, [rbp - 0x70]
0x4003e7:	mov	rsi, rdx
0x4003ea:	mov	rdi, rax
0x4003ed:	call	0x400b6a
<Block for 0x4003f2, 12 bytes>
0x4003f2:	lea	rax, [rbp - 0x50]
0x4003f6:	mov	rdi, rax
0x4003f9:	call	0x400bb8
<Block for 0x4003fe, 23 bytes>
0x4003fe:	mov	qword ptr [rbp - 0x78], rax
0x400402:	lea	rdx, [rbp - 0x78]
0x400406:	lea	rax, [rbp - 0x30]
0x40040a:	mov	rsi, rdx
0x40040d:	mov	rdi, rax
0x400410:	call	0x400c08
<Block for 0x400415, 28 bytes>
0x400415:	lea	rdx, [rbp - 0x70]
0x400419:	mov	rsi, qword ptr [rbp - 0x30]
0x40041d:	lea	rax, [rbp - 0x50]
0x400421:	mov	rcx, rdx
0x400424:	mov	edx, 1
0x400429:	mov	rdi, rax
0x40042c:	call	0x400c36
<Block for 0x400431, 12 bytes>
0x400431:	lea	rax, [rbp - 0x50]
0x400435:	mov	rdi, rax
0x400438:	call	0x400bb8
<Block for 0x40043d, 23 bytes>
0x40043d:	mov	qword ptr [rbp - 0x78], rax
0x400441:	lea	rdx, [rbp - 0x78]
0x400445:	lea	rax, [rbp - 0x30]
0x400449:	mov	rsi, rdx
0x40044c:	mov	rdi, rax
0x40044f:	call	0x400c08
<Block for 0x400454, 28 bytes>
0x400454:	lea	rdx, [rbp - 0x70]
0x400458:	mov	rsi, qword ptr [rbp - 0x30]
0x40045c:	lea	rax, [rbp - 0x50]
0x400460:	mov	rcx, rdx
0x400463:	mov	edx, 1
0x400468:	mov	rdi, rax
0x40046b:	call	0x400c36
<Block for 0x400470, 12 bytes>
0x400470:	lea	rax, [rbp - 0x50]
0x400474:	mov	rdi, rax
0x400477:	call	0x400bb8
<Block for 0x40047c, 23 bytes>
0x40047c:	mov	qword ptr [rbp - 0x78], rax
0x400480:	lea	rdx, [rbp - 0x78]
0x400484:	lea	rax, [rbp - 0x30]
0x400488:	mov	rsi, rdx
0x40048b:	mov	rdi, rax
0x40048e:	call	0x400c08
<Block for 0x400493, 28 bytes>
0x400493:	lea	rdx, [rbp - 0x70]
0x400497:	mov	rsi, qword ptr [rbp - 0x30]
0x40049b:	lea	rax, [rbp - 0x50]
0x40049f:	mov	rcx, rdx
0x4004a2:	mov	edx, 1
0x4004a7:	mov	rdi, rax
0x4004aa:	call	0x400c36
<Block for 0x4004af, 19 bytes>
0x4004af:	lea	rdx, [rbp - 0x50]
0x4004b3:	lea	rax, [rbp - 0x30]
0x4004b7:	mov	rsi, rdx
0x4004ba:	mov	rdi, rax
0x4004bd:	call	0x400cfc
<Block for 0x4004c2, 12 bytes>
0x4004c2:	lea	rax, [rbp - 0x30]
0x4004c6:	mov	rdi, rax
0x4004c9:	call	0x500020
<Block for 0x4004ce, 12 bytes>
0x4004ce:	lea	rax, [rbp - 0x30]
0x4004d2:	mov	rdi, rax
0x4004d5:	call	0x400b22
<Block for 0x4004da, 12 bytes>
0x4004da:	lea	rax, [rbp - 0x50]
0x4004de:	mov	rdi, rax
0x4004e1:	call	0x400b22
<Block for 0x4004e6, 12 bytes>
0x4004e6:	lea	rax, [rbp - 0x70]
0x4004ea:	mov	rdi, rax
0x4004ed:	call	0x40083c
<Block for 0x4004f2, 16 bytes>
0x4004f2:	nop	
0x4004f3:	mov	rax, qword ptr [rbp - 0x18]
0x4004f7:	xor	rax, qword ptr fs:[0x28]
0x400500:	je	0x400548
<Block for 0x400548, 7 bytes>
0x400548:	add	rsp, 0x78
0x40054c:	pop	rbx
0x40054d:	pop	rbp
0x40054e:	ret	
<Block for 0x400502, 2 bytes>
0x400502:	jmp	0x400543
<Block for 0x400543, 5 bytes>
0x400543:	call	0x500010
