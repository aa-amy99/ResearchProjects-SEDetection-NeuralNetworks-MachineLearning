<Block for 0x4001c5, 40 bytes>
0x4001c5:	endbr64	
0x4001c9:	push	rbp
0x4001ca:	mov	rbp, rsp
0x4001cd:	push	rbx
0x4001ce:	sub	rsp, 0x78
0x4001d2:	mov	rax, qword ptr fs:[0x28]
0x4001db:	mov	qword ptr [rbp - 0x18], rax
0x4001df:	xor	eax, eax
0x4001e1:	lea	rax, [rbp - 0x70]
0x4001e5:	mov	rdi, rax
0x4001e8:	call	0x40081c
<Block for 0x4001ed, 12 bytes>
0x4001ed:	lea	rax, [rbp - 0x50]
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x40089c
<Block for 0x4001f9, 26 bytes>
0x4001f9:	mov	dword ptr [rbp - 0x30], 0x64
0x400200:	lea	rdx, [rbp - 0x30]
0x400204:	lea	rax, [rbp - 0x70]
0x400208:	mov	rsi, rdx
0x40020b:	mov	rdi, rax
0x40020e:	call	0x400b6a
<Block for 0x400213, 26 bytes>
0x400213:	mov	dword ptr [rbp - 0x30], 0xc8
0x40021a:	lea	rdx, [rbp - 0x30]
0x40021e:	lea	rax, [rbp - 0x70]
0x400222:	mov	rsi, rdx
0x400225:	mov	rdi, rax
0x400228:	call	0x400b6a
<Block for 0x40022d, 12 bytes>
0x40022d:	lea	rax, [rbp - 0x50]
0x400231:	mov	rdi, rax
0x400234:	call	0x400bb8
<Block for 0x400239, 23 bytes>
0x400239:	mov	qword ptr [rbp - 0x78], rax
0x40023d:	lea	rdx, [rbp - 0x78]
0x400241:	lea	rax, [rbp - 0x30]
0x400245:	mov	rsi, rdx
0x400248:	mov	rdi, rax
0x40024b:	call	0x400c08
<Block for 0x400250, 28 bytes>
0x400250:	lea	rdx, [rbp - 0x70]
0x400254:	mov	rsi, qword ptr [rbp - 0x30]
0x400258:	lea	rax, [rbp - 0x50]
0x40025c:	mov	rcx, rdx
0x40025f:	mov	edx, 1
0x400264:	mov	rdi, rax
0x400267:	call	0x400c36
<Block for 0x40026c, 12 bytes>
0x40026c:	lea	rax, [rbp - 0x50]
0x400270:	mov	rdi, rax
0x400273:	call	0x400bb8
<Block for 0x400278, 23 bytes>
0x400278:	mov	qword ptr [rbp - 0x78], rax
0x40027c:	lea	rdx, [rbp - 0x78]
0x400280:	lea	rax, [rbp - 0x30]
0x400284:	mov	rsi, rdx
0x400287:	mov	rdi, rax
0x40028a:	call	0x400c08
<Block for 0x40028f, 28 bytes>
0x40028f:	lea	rdx, [rbp - 0x70]
0x400293:	mov	rsi, qword ptr [rbp - 0x30]
0x400297:	lea	rax, [rbp - 0x50]
0x40029b:	mov	rcx, rdx
0x40029e:	mov	edx, 1
0x4002a3:	mov	rdi, rax
0x4002a6:	call	0x400c36
<Block for 0x4002ab, 12 bytes>
0x4002ab:	lea	rax, [rbp - 0x50]
0x4002af:	mov	rdi, rax
0x4002b2:	call	0x400bb8
<Block for 0x4002b7, 23 bytes>
0x4002b7:	mov	qword ptr [rbp - 0x78], rax
0x4002bb:	lea	rdx, [rbp - 0x78]
0x4002bf:	lea	rax, [rbp - 0x30]
0x4002c3:	mov	rsi, rdx
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x400c08
<Block for 0x4002ce, 28 bytes>
0x4002ce:	lea	rdx, [rbp - 0x70]
0x4002d2:	mov	rsi, qword ptr [rbp - 0x30]
0x4002d6:	lea	rax, [rbp - 0x50]
0x4002da:	mov	rcx, rdx
0x4002dd:	mov	edx, 1
0x4002e2:	mov	rdi, rax
0x4002e5:	call	0x400c36
<Block for 0x4002ea, 19 bytes>
0x4002ea:	lea	rdx, [rbp - 0x50]
0x4002ee:	lea	rax, [rbp - 0x30]
0x4002f2:	mov	rsi, rdx
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x400cfc
<Block for 0x4002fd, 12 bytes>
0x4002fd:	lea	rax, [rbp - 0x30]
0x400301:	mov	rdi, rax
0x400304:	call	0x500018
<Block for 0x400309, 12 bytes>
0x400309:	lea	rax, [rbp - 0x30]
0x40030d:	mov	rdi, rax
0x400310:	call	0x400b22
<Block for 0x400315, 12 bytes>
0x400315:	lea	rax, [rbp - 0x50]
0x400319:	mov	rdi, rax
0x40031c:	call	0x400b22
<Block for 0x400321, 12 bytes>
0x400321:	lea	rax, [rbp - 0x70]
0x400325:	mov	rdi, rax
0x400328:	call	0x40083c
<Block for 0x40032d, 16 bytes>
0x40032d:	nop	
0x40032e:	mov	rax, qword ptr [rbp - 0x18]
0x400332:	xor	rax, qword ptr fs:[0x28]
0x40033b:	je	0x400383
<Block for 0x400383, 7 bytes>
0x400383:	add	rsp, 0x78
0x400387:	pop	rbx
0x400388:	pop	rbp
0x400389:	ret	
<Block for 0x40033d, 2 bytes>
0x40033d:	jmp	0x40037e
<Block for 0x40037e, 5 bytes>
0x40037e:	call	0x500010
