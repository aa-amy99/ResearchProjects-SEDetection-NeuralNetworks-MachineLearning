<Block for 0x400056, 23 bytes>
0x400056:	endbr64	
0x40005a:	push	rbp
0x40005b:	mov	rbp, rsp
0x40005e:	sub	rsp, 0x20
0x400062:	mov	eax, dword ptr [rip + 0xfff98]
0x400068:	cmp	eax, 5
0x40006b:	je	0x40007b
<Block for 0x40007b, 10 bytes>
0x40007b:	mov	edi, 4
0x400080:	call	0x500008
<Block for 0x40006d, 12 bytes>
0x40006d:	lea	rdi, [rip + 0xf7]
0x400074:	call	0x500020
<Block for 0x400085, 24 bytes>
0x400085:	mov	qword ptr [rbp - 0x18], rax
0x400089:	mov	rax, qword ptr [rbp - 0x18]
0x40008d:	mov	dword ptr [rax], 5
0x400093:	mov	edi, 8
0x400098:	call	0x500008
<Block for 0x400079, 2 bytes>
0x400079:	jmp	0x4000da
<Block for 0x40009d, 39 bytes>
0x40009d:	mov	qword ptr [rbp - 0x10], rax
0x4000a1:	mov	rax, qword ptr [rbp - 0x10]
0x4000a5:	mov	rdx, qword ptr [rbp - 0x18]
0x4000a9:	mov	qword ptr [rax], rdx
0x4000ac:	mov	rax, qword ptr [rbp - 0x10]
0x4000b0:	mov	rax, qword ptr [rax]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	mov	rax, qword ptr [rbp - 8]
0x4000bb:	mov	eax, dword ptr [rax]
0x4000bd:	mov	edi, eax
0x4000bf:	call	0x500018
<Block for 0x4000da, 3 bytes>
0x4000da:	nop	
0x4000db:	leave	
0x4000dc:	ret	
<Block for 0x4000c4, 9 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x10]
0x4000c8:	test	rax, rax
0x4000cb:	je	0x4000da
<Block for 0x4000cd, 13 bytes>
0x4000cd:	mov	esi, 8
0x4000d2:	mov	rdi, rax
0x4000d5:	call	0x500010
