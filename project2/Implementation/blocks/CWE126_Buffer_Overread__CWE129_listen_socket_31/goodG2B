<Block for 0x4001a9, 99 bytes>
0x4001a9:	endbr64	
0x4001ad:	push	rbp
0x4001ae:	mov	rbp, rsp
0x4001b1:	sub	rsp, 0x40
0x4001b5:	mov	rax, qword ptr fs:[0x28]
0x4001be:	mov	qword ptr [rbp - 8], rax
0x4001c2:	xor	eax, eax
0x4001c4:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x4001cb:	mov	dword ptr [rbp - 0x3c], 7
0x4001d2:	mov	eax, dword ptr [rbp - 0x3c]
0x4001d5:	mov	dword ptr [rbp - 0x38], eax
0x4001d8:	mov	eax, dword ptr [rbp - 0x38]
0x4001db:	mov	dword ptr [rbp - 0x34], eax
0x4001de:	mov	qword ptr [rbp - 0x30], 0
0x4001e6:	mov	qword ptr [rbp - 0x28], 0
0x4001ee:	mov	qword ptr [rbp - 0x20], 0
0x4001f6:	mov	qword ptr [rbp - 0x18], 0
0x4001fe:	mov	qword ptr [rbp - 0x10], 0
0x400206:	cmp	dword ptr [rbp - 0x34], 0
0x40020a:	js	0x40021e
<Block for 0x40021e, 12 bytes>
0x40021e:	lea	rdi, [rip + 0x1eb]
0x400225:	call	0x500050
<Block for 0x40020c, 16 bytes>
0x40020c:	mov	eax, dword ptr [rbp - 0x34]
0x40020f:	cdqe	
0x400211:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400215:	mov	edi, eax
0x400217:	call	0x500048
<Block for 0x40022a, 16 bytes>
0x40022a:	nop	
0x40022b:	mov	rax, qword ptr [rbp - 8]
0x40022f:	xor	rax, qword ptr fs:[0x28]
0x400238:	je	0x40023f
<Block for 0x40021c, 2 bytes>
0x40021c:	jmp	0x40022a
<Block for 0x40023f, 2 bytes>
0x40023f:	leave	
0x400240:	ret	
<Block for 0x40023a, 5 bytes>
0x40023a:	call	0x500058
