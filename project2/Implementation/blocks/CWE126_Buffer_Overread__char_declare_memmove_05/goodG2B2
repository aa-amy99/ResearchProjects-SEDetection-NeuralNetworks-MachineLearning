<Block for 0x4001c0, 55 bytes>
0x4001c0:	endbr64	
0x4001c4:	push	rbp
0x4001c5:	mov	rbp, rsp
0x4001c8:	sub	rsp, 0x130
0x4001cf:	mov	rax, qword ptr fs:[0x28]
0x4001d8:	mov	qword ptr [rbp - 8], rax
0x4001dc:	xor	eax, eax
0x4001de:	lea	rax, [rbp - 0x120]
0x4001e5:	mov	edx, 0x31
0x4001ea:	mov	esi, 0x41
0x4001ef:	mov	rdi, rax
0x4001f2:	call	0x500000
<Block for 0x4001f7, 32 bytes>
0x4001f7:	mov	byte ptr [rbp - 0xef], 0
0x4001fe:	lea	rax, [rbp - 0xe0]
0x400205:	mov	edx, 0x63
0x40020a:	mov	esi, 0x41
0x40020f:	mov	rdi, rax
0x400212:	call	0x500000
<Block for 0x400217, 14 bytes>
0x400217:	mov	byte ptr [rbp - 0x7d], 0
0x40021b:	mov	eax, dword ptr [rip + 0x97]
0x400221:	test	eax, eax
0x400223:	je	0x400233
<Block for 0x400233, 22 bytes>
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500000
<Block for 0x400225, 36 bytes>
0x400225:	lea	rax, [rbp - 0xe0]
0x40022c:	mov	qword ptr [rbp - 0x128], rax
0x400233:	lea	rax, [rbp - 0x70]
0x400237:	mov	edx, 0x63
0x40023c:	mov	esi, 0x43
0x400241:	mov	rdi, rax
0x400244:	call	0x500000
<Block for 0x400249, 16 bytes>
0x400249:	mov	byte ptr [rbp - 0xd], 0
0x40024d:	lea	rax, [rbp - 0x70]
0x400251:	mov	rdi, rax
0x400254:	call	0x500008
<Block for 0x400259, 25 bytes>
0x400259:	mov	rdx, rax
0x40025c:	mov	rcx, qword ptr [rbp - 0x128]
0x400263:	lea	rax, [rbp - 0x70]
0x400267:	mov	rsi, rcx
0x40026a:	mov	rdi, rax
0x40026d:	call	0x500010
<Block for 0x400272, 16 bytes>
0x400272:	mov	byte ptr [rbp - 0xd], 0
0x400276:	lea	rax, [rbp - 0x70]
0x40027a:	mov	rdi, rax
0x40027d:	call	0x500018
<Block for 0x400282, 16 bytes>
0x400282:	nop	
0x400283:	mov	rax, qword ptr [rbp - 8]
0x400287:	xor	rax, qword ptr fs:[0x28]
0x400290:	je	0x400297
<Block for 0x400297, 2 bytes>
0x400297:	leave	
0x400298:	ret	
<Block for 0x400292, 5 bytes>
0x400292:	call	0x500020
