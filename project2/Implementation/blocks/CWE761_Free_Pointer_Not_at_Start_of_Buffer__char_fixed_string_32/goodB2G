<Block for 0x4000de, 53 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	sub	rsp, 0x40
0x4000ea:	mov	rax, qword ptr fs:[0x28]
0x4000f3:	mov	qword ptr [rbp - 8], rax
0x4000f7:	xor	eax, eax
0x4000f9:	lea	rax, [rbp - 0x38]
0x4000fd:	mov	qword ptr [rbp - 0x28], rax
0x400101:	lea	rax, [rbp - 0x38]
0x400105:	mov	qword ptr [rbp - 0x20], rax
0x400109:	mov	edi, 0x64
0x40010e:	call	0x500000
<Block for 0x400113, 13 bytes>
0x400113:	mov	qword ptr [rbp - 0x38], rax
0x400117:	mov	rax, qword ptr [rbp - 0x38]
0x40011b:	test	rax, rax
0x40011e:	jne	0x40012a
<Block for 0x400120, 10 bytes>
0x400120:	mov	edi, 0xffffffff
0x400125:	call	0x500008
<Block for 0x40012a, 78 bytes>
0x40012a:	mov	rax, qword ptr [rbp - 0x38]
0x40012e:	mov	byte ptr [rax], 0
0x400131:	mov	rax, qword ptr [rbp - 0x28]
0x400135:	mov	rax, qword ptr [rax]
0x400138:	mov	qword ptr [rbp - 0x18], rax
0x40013c:	mov	rax, qword ptr [rbp - 0x18]
0x400140:	movabs	rcx, 0x7453206465786946
0x40014a:	mov	qword ptr [rax], rcx
0x40014d:	mov	dword ptr [rax + 8], 0x676e6972
0x400154:	mov	byte ptr [rax + 0xc], 0
0x400158:	mov	rax, qword ptr [rbp - 0x28]
0x40015c:	mov	rdx, qword ptr [rbp - 0x18]
0x400160:	mov	qword ptr [rax], rdx
0x400163:	mov	rax, qword ptr [rbp - 0x20]
0x400167:	mov	rax, qword ptr [rax]
0x40016a:	mov	qword ptr [rbp - 0x10], rax
0x40016e:	mov	qword ptr [rbp - 0x30], 0
0x400176:	jmp	0x40019d
<Block for 0x40019d, 12 bytes>
0x40019d:	mov	rax, qword ptr [rbp - 0x10]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500028
<Block for 0x4001a9, 6 bytes>
0x4001a9:	cmp	qword ptr [rbp - 0x30], rax
0x4001ad:	jb	0x400178
<Block for 0x400178, 18 bytes>
0x400178:	mov	rdx, qword ptr [rbp - 0x10]
0x40017c:	mov	rax, qword ptr [rbp - 0x30]
0x400180:	add	rax, rdx
0x400183:	movzx	eax, byte ptr [rax]
0x400186:	cmp	al, 0x53
0x400188:	jne	0x400198
<Block for 0x4001af, 12 bytes>
0x4001af:	mov	rax, qword ptr [rbp - 0x10]
0x4001b3:	mov	rdi, rax
0x4001b6:	call	0x500018
<Block for 0x40018a, 12 bytes>
0x40018a:	lea	rdi, [rip + 0x56]
0x400191:	call	0x500010
<Block for 0x400198, 17 bytes>
0x400198:	add	qword ptr [rbp - 0x30], 1
0x40019d:	mov	rax, qword ptr [rbp - 0x10]
0x4001a1:	mov	rdi, rax
0x4001a4:	call	0x500028
<Block for 0x4001bb, 16 bytes>
0x4001bb:	nop	
0x4001bc:	mov	rax, qword ptr [rbp - 8]
0x4001c0:	xor	rax, qword ptr fs:[0x28]
0x4001c9:	je	0x4001d0
<Block for 0x400196, 2 bytes>
0x400196:	jmp	0x4001af
<Block for 0x4001d0, 2 bytes>
0x4001d0:	leave	
0x4001d1:	ret	
<Block for 0x4001cb, 5 bytes>
0x4001cb:	call	0x500020
