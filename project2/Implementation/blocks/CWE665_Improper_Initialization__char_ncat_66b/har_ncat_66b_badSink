<Block for 0x400000, 74 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	rax, qword ptr [rax + 0x10]
0x400030:	mov	qword ptr [rbp - 0x80], rax
0x400034:	lea	rax, [rbp - 0x70]
0x400038:	mov	edx, 0x63
0x40003d:	mov	esi, 0x43
0x400042:	mov	rdi, rax
0x400045:	call	0x500000
<Block for 0x40004a, 16 bytes>
0x40004a:	mov	byte ptr [rbp - 0xd], 0
0x40004e:	lea	rax, [rbp - 0x70]
0x400052:	mov	rdi, rax
0x400055:	call	0x500008
<Block for 0x40005a, 27 bytes>
0x40005a:	mov	qword ptr [rbp - 0x78], rax
0x40005e:	mov	rdx, qword ptr [rbp - 0x78]
0x400062:	lea	rcx, [rbp - 0x70]
0x400066:	mov	rax, qword ptr [rbp - 0x80]
0x40006a:	mov	rsi, rcx
0x40006d:	mov	rdi, rax
0x400070:	call	0x500010
<Block for 0x400075, 12 bytes>
0x400075:	mov	rax, qword ptr [rbp - 0x80]
0x400079:	mov	rdi, rax
0x40007c:	call	0x500018
<Block for 0x400081, 16 bytes>
0x400081:	nop	
0x400082:	mov	rax, qword ptr [rbp - 8]
0x400086:	xor	rax, qword ptr fs:[0x28]
0x40008f:	je	0x400096
<Block for 0x400096, 2 bytes>
0x400096:	leave	
0x400097:	ret	
<Block for 0x400091, 5 bytes>
0x400091:	call	0x500020
