<Block for 0x40001e, 44 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x20
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x400040:	mov	eax, 0
0x400045:	call	0x400000
<Block for 0x40004a, 4 bytes>
0x40004a:	test	eax, eax
0x40004c:	je	0x40009d
<Block for 0x40009d, 6 bytes>
0x40009d:	cmp	dword ptr [rbp - 0x1c], 5
0x4000a1:	jg	0x4000c2
<Block for 0x40004e, 45 bytes>
0x40004e:	mov	qword ptr [rbp - 0x16], 0
0x400056:	mov	dword ptr [rbp - 0xe], 0
0x40005d:	mov	word ptr [rbp - 0xa], 0
0x400063:	mov	rdx, qword ptr [rip + 0xfff96]
0x40006a:	lea	rax, [rbp - 0x16]
0x40006e:	mov	esi, 0xe
0x400073:	mov	rdi, rax
0x400076:	call	0x500008
<Block for 0x4000a3, 31 bytes>
0x4000a3:	lea	rcx, [rip + 0x176]
0x4000aa:	mov	edx, 0x3f
0x4000af:	lea	rsi, [rip + 0x11a]
0x4000b6:	lea	rdi, [rip + 0x13a]
0x4000bd:	call	0x500020
<Block for 0x4000c2, 16 bytes>
0x4000c2:	nop	
0x4000c3:	mov	rax, qword ptr [rbp - 8]
0x4000c7:	xor	rax, qword ptr fs:[0x28]
0x4000d0:	je	0x4000d7
<Block for 0x40007b, 5 bytes>
0x40007b:	test	rax, rax
0x40007e:	je	0x400091
<Block for 0x4000d7, 2 bytes>
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000d2, 5 bytes>
0x4000d2:	call	0x500028
<Block for 0x400091, 12 bytes>
0x400091:	lea	rdi, [rip + 0x128]
0x400098:	call	0x500018
<Block for 0x400080, 12 bytes>
0x400080:	lea	rax, [rbp - 0x16]
0x400084:	mov	rdi, rax
0x400087:	call	0x500010
<Block for 0x40008c, 5 bytes>
0x40008c:	mov	dword ptr [rbp - 0x1c], eax
0x40008f:	jmp	0x40009d
