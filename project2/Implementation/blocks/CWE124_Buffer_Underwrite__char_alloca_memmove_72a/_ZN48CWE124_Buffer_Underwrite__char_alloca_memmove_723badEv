<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x68
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4004b6
<Block for 0x400028, 54 bytes>
0x400028:	mov	eax, 0x10
0x40002d:	sub	rax, 1
0x400031:	add	rax, 0x6c
0x400035:	mov	ebx, 0x10
0x40003a:	mov	edx, 0
0x40003f:	div	rbx
0x400042:	imul	rax, rax, 0x10
0x400046:	mov	rdx, rax
0x400049:	and	rdx, 0xfffffffffffff000
0x400050:	mov	rcx, rsp
0x400053:	sub	rcx, rdx
0x400056:	mov	rdx, rcx
0x400059:	cmp	rsp, rdx
0x40005c:	je	0x400070
<Block for 0x400070, 26 bytes>
0x400070:	mov	rdx, rax
0x400073:	and	edx, 0xfff
0x400079:	sub	rsp, rdx
0x40007c:	mov	rdx, rax
0x40007f:	and	edx, 0xfff
0x400085:	test	rdx, rdx
0x400088:	je	0x40009a
<Block for 0x40005e, 18 bytes>
0x40005e:	sub	rsp, 0x1000
0x400065:	or	qword ptr [rsp + 0xff8], 0
0x40006e:	jmp	0x400059
<Block for 0x40009a, 41 bytes>
0x40009a:	mov	rax, rsp
0x40009d:	add	rax, 0xf
0x4000a1:	shr	rax, 4
0x4000a5:	shl	rax, 4
0x4000a9:	mov	qword ptr [rbp - 0x58], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x58]
0x4000b1:	mov	edx, 0x63
0x4000b6:	mov	esi, 0x41
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x40008a, 57 bytes>
0x40008a:	and	eax, 0xfff
0x40008f:	sub	rax, 8
0x400093:	add	rax, rsp
0x400096:	or	qword ptr [rax], 0
0x40009a:	mov	rax, rsp
0x40009d:	add	rax, 0xf
0x4000a1:	shr	rax, 4
0x4000a5:	shl	rax, 4
0x4000a9:	mov	qword ptr [rbp - 0x58], rax
0x4000ad:	mov	rax, qword ptr [rbp - 0x58]
0x4000b1:	mov	edx, 0x63
0x4000b6:	mov	esi, 0x41
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x500000
<Block for 0x400059, 5 bytes>
0x400059:	cmp	rsp, rdx
0x40005c:	je	0x400070
<Block for 0x4000c3, 35 bytes>
0x4000c3:	mov	rax, qword ptr [rbp - 0x58]
0x4000c7:	add	rax, 0x63
0x4000cb:	mov	byte ptr [rax], 0
0x4000ce:	mov	rax, qword ptr [rbp - 0x58]
0x4000d2:	sub	rax, 8
0x4000d6:	mov	qword ptr [rbp - 0x68], rax
0x4000da:	lea	rax, [rbp - 0x50]
0x4000de:	mov	rdi, rax
0x4000e1:	call	0x40064a
<Block for 0x4000e6, 23 bytes>
0x4000e6:	mov	qword ptr [rbp - 0x60], rax
0x4000ea:	lea	rdx, [rbp - 0x60]
0x4000ee:	lea	rax, [rbp - 0x30]
0x4000f2:	mov	rsi, rdx
0x4000f5:	mov	rdi, rax
0x4000f8:	call	0x40069a
<Block for 0x4000fd, 28 bytes>
0x4000fd:	lea	rdx, [rbp - 0x68]
0x400101:	mov	rsi, qword ptr [rbp - 0x30]
0x400105:	lea	rax, [rbp - 0x50]
0x400109:	mov	rcx, rdx
0x40010c:	mov	edx, 1
0x400111:	mov	rdi, rax
0x400114:	call	0x4006c8
<Block for 0x400119, 12 bytes>
0x400119:	lea	rax, [rbp - 0x50]
0x40011d:	mov	rdi, rax
0x400120:	call	0x40064a
<Block for 0x400125, 23 bytes>
0x400125:	mov	qword ptr [rbp - 0x60], rax
0x400129:	lea	rdx, [rbp - 0x60]
0x40012d:	lea	rax, [rbp - 0x30]
0x400131:	mov	rsi, rdx
0x400134:	mov	rdi, rax
0x400137:	call	0x40069a
<Block for 0x40013c, 28 bytes>
0x40013c:	lea	rdx, [rbp - 0x68]
0x400140:	mov	rsi, qword ptr [rbp - 0x30]
0x400144:	lea	rax, [rbp - 0x50]
0x400148:	mov	rcx, rdx
0x40014b:	mov	edx, 1
0x400150:	mov	rdi, rax
0x400153:	call	0x4006c8
<Block for 0x400158, 12 bytes>
0x400158:	lea	rax, [rbp - 0x50]
0x40015c:	mov	rdi, rax
0x40015f:	call	0x40064a
<Block for 0x400164, 23 bytes>
0x400164:	mov	qword ptr [rbp - 0x60], rax
0x400168:	lea	rdx, [rbp - 0x60]
0x40016c:	lea	rax, [rbp - 0x30]
0x400170:	mov	rsi, rdx
0x400173:	mov	rdi, rax
0x400176:	call	0x40069a
<Block for 0x40017b, 28 bytes>
0x40017b:	lea	rdx, [rbp - 0x68]
0x40017f:	mov	rsi, qword ptr [rbp - 0x30]
0x400183:	lea	rax, [rbp - 0x50]
0x400187:	mov	rcx, rdx
0x40018a:	mov	edx, 1
0x40018f:	mov	rdi, rax
0x400192:	call	0x4006c8
<Block for 0x400197, 19 bytes>
0x400197:	lea	rdx, [rbp - 0x50]
0x40019b:	lea	rax, [rbp - 0x30]
0x40019f:	mov	rsi, rdx
0x4001a2:	mov	rdi, rax
0x4001a5:	call	0x40078e
<Block for 0x4001aa, 12 bytes>
0x4001aa:	lea	rax, [rbp - 0x30]
0x4001ae:	mov	rdi, rax
0x4001b1:	call	0x500008
<Block for 0x4001b6, 12 bytes>
0x4001b6:	lea	rax, [rbp - 0x30]
0x4001ba:	mov	rdi, rax
0x4001bd:	call	0x400602
<Block for 0x4001c2, 12 bytes>
0x4001c2:	lea	rax, [rbp - 0x50]
0x4001c6:	mov	rdi, rax
0x4001c9:	call	0x400602
<Block for 0x4001ce, 16 bytes>
0x4001ce:	nop	
0x4001cf:	mov	rax, qword ptr [rbp - 0x18]
0x4001d3:	xor	rax, qword ptr fs:[0x28]
0x4001dc:	je	0x400218
<Block for 0x400218, 6 bytes>
0x400218:	mov	rbx, qword ptr [rbp - 8]
0x40021c:	leave	
0x40021d:	ret	
<Block for 0x4001de, 2 bytes>
0x4001de:	jmp	0x400213
<Block for 0x400213, 5 bytes>
0x400213:	call	0x500018
