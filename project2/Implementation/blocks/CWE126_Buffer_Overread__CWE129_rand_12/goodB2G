<Block for 0x40014d, 45 bytes>
0x40014d:	endbr64	
0x400151:	push	rbp
0x400152:	mov	rbp, rsp
0x400155:	push	rbx
0x400156:	sub	rsp, 0x48
0x40015a:	mov	rax, qword ptr fs:[0x28]
0x400163:	mov	qword ptr [rbp - 0x18], rax
0x400167:	xor	eax, eax
0x400169:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400170:	mov	eax, 0
0x400175:	call	0x500000
<Block for 0x40017a, 4 bytes>
0x40017a:	test	eax, eax
0x40017c:	je	0x4001c9
<Block for 0x4001c9, 5 bytes>
0x4001c9:	call	0x500008
<Block for 0x40017e, 5 bytes>
0x40017e:	call	0x500008
<Block for 0x4001ce, 7 bytes>
0x4001ce:	and	eax, 1
0x4001d1:	test	eax, eax
0x4001d3:	je	0x4001f2
<Block for 0x400183, 7 bytes>
0x400183:	and	eax, 1
0x400186:	test	eax, eax
0x400188:	je	0x4001a7
<Block for 0x4001f2, 5 bytes>
0x4001f2:	call	0x500008
<Block for 0x4001d5, 5 bytes>
0x4001d5:	call	0x500008
<Block for 0x4001a7, 5 bytes>
0x4001a7:	call	0x500008
<Block for 0x40018a, 5 bytes>
0x40018a:	call	0x500008
<Block for 0x4001f7, 10 bytes>
0x4001f7:	shl	eax, 0x1e
0x4001fa:	mov	ebx, eax
0x4001fc:	call	0x500008
<Block for 0x4001da, 10 bytes>
0x4001da:	shl	eax, 0x1e
0x4001dd:	mov	ebx, eax
0x4001df:	call	0x500008
<Block for 0x4001ac, 10 bytes>
0x4001ac:	shl	eax, 0x1e
0x4001af:	mov	ebx, eax
0x4001b1:	call	0x500008
<Block for 0x40018f, 10 bytes>
0x40018f:	shl	eax, 0x1e
0x400192:	mov	ebx, eax
0x400194:	call	0x500008
<Block for 0x400201, 10 bytes>
0x400201:	shl	eax, 0xf
0x400204:	xor	ebx, eax
0x400206:	call	0x500008
<Block for 0x4001e4, 10 bytes>
0x4001e4:	shl	eax, 0xf
0x4001e7:	xor	ebx, eax
0x4001e9:	call	0x500008
<Block for 0x4001b6, 10 bytes>
0x4001b6:	shl	eax, 0xf
0x4001b9:	xor	ebx, eax
0x4001bb:	call	0x500008
<Block for 0x400199, 10 bytes>
0x400199:	shl	eax, 0xf
0x40019c:	xor	ebx, eax
0x40019e:	call	0x500008
<Block for 0x40020b, 17 bytes>
0x40020b:	xor	eax, ebx
0x40020d:	not	eax
0x40020f:	mov	dword ptr [rbp - 0x44], eax
0x400212:	mov	eax, 0
0x400217:	call	0x500000
<Block for 0x4001ee, 4 bytes>
0x4001ee:	xor	eax, ebx
0x4001f0:	jmp	0x40020f
<Block for 0x4001c0, 9 bytes>
0x4001c0:	xor	eax, ebx
0x4001c2:	not	eax
0x4001c4:	mov	dword ptr [rbp - 0x44], eax
0x4001c7:	jmp	0x400212
<Block for 0x4001a3, 4 bytes>
0x4001a3:	xor	eax, ebx
0x4001a5:	jmp	0x4001c4
<Block for 0x40021c, 4 bytes>
0x40021c:	test	eax, eax
0x40021e:	je	0x400274
<Block for 0x40020f, 13 bytes>
0x40020f:	mov	dword ptr [rbp - 0x44], eax
0x400212:	mov	eax, 0
0x400217:	call	0x500000
<Block for 0x400212, 10 bytes>
0x400212:	mov	eax, 0
0x400217:	call	0x500000
<Block for 0x4001c4, 5 bytes>
0x4001c4:	mov	dword ptr [rbp - 0x44], eax
0x4001c7:	jmp	0x400212
<Block for 0x400274, 46 bytes>
0x400274:	mov	qword ptr [rbp - 0x40], 0
0x40027c:	mov	qword ptr [rbp - 0x38], 0
0x400284:	mov	qword ptr [rbp - 0x30], 0
0x40028c:	mov	qword ptr [rbp - 0x28], 0
0x400294:	mov	qword ptr [rbp - 0x20], 0
0x40029c:	cmp	dword ptr [rbp - 0x44], 0
0x4002a0:	js	0x4002ba
<Block for 0x400220, 46 bytes>
0x400220:	mov	qword ptr [rbp - 0x40], 0
0x400228:	mov	qword ptr [rbp - 0x38], 0
0x400230:	mov	qword ptr [rbp - 0x30], 0
0x400238:	mov	qword ptr [rbp - 0x28], 0
0x400240:	mov	qword ptr [rbp - 0x20], 0
0x400248:	cmp	dword ptr [rbp - 0x44], 0
0x40024c:	js	0x400266
<Block for 0x4002ba, 12 bytes>
0x4002ba:	lea	rdi, [rip + 0x167]
0x4002c1:	call	0x500018
<Block for 0x4002a2, 6 bytes>
0x4002a2:	cmp	dword ptr [rbp - 0x44], 9
0x4002a6:	jg	0x4002ba
<Block for 0x400266, 12 bytes>
0x400266:	lea	rdi, [rip + 0x1bb]
0x40026d:	call	0x500018
<Block for 0x40024e, 6 bytes>
0x40024e:	cmp	dword ptr [rbp - 0x44], 9
0x400252:	jg	0x400266
<Block for 0x4002c6, 2 bytes>
0x4002c6:	jmp	0x4002c8
<Block for 0x4002a8, 16 bytes>
0x4002a8:	mov	eax, dword ptr [rbp - 0x44]
0x4002ab:	cdqe	
0x4002ad:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4002b1:	mov	edi, eax
0x4002b3:	call	0x500010
<Block for 0x400272, 2 bytes>
0x400272:	jmp	0x4002c8
<Block for 0x400254, 16 bytes>
0x400254:	mov	eax, dword ptr [rbp - 0x44]
0x400257:	cdqe	
0x400259:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40025d:	mov	edi, eax
0x40025f:	call	0x500010
<Block for 0x4002c8, 16 bytes>
0x4002c8:	nop	
0x4002c9:	mov	rax, qword ptr [rbp - 0x18]
0x4002cd:	xor	rax, qword ptr fs:[0x28]
0x4002d6:	je	0x4002dd
<Block for 0x4002b8, 2 bytes>
0x4002b8:	jmp	0x4002c8
<Block for 0x400264, 2 bytes>
0x400264:	jmp	0x4002c8
<Block for 0x4002dd, 7 bytes>
0x4002dd:	add	rsp, 0x48
0x4002e1:	pop	rbx
0x4002e2:	pop	rbp
0x4002e3:	ret	
<Block for 0x4002d8, 5 bytes>
0x4002d8:	call	0x500020
