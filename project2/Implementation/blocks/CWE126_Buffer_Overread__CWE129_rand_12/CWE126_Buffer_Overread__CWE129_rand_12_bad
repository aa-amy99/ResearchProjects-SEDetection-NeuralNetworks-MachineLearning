<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x48
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400023:	mov	eax, 0
0x400028:	call	0x500000
<Block for 0x40002d, 4 bytes>
0x40002d:	test	eax, eax
0x40002f:	je	0x40007c
<Block for 0x40007c, 17 bytes>
0x40007c:	mov	dword ptr [rbp - 0x44], 7
0x400083:	mov	eax, 0
0x400088:	call	0x500000
<Block for 0x400031, 5 bytes>
0x400031:	call	0x500008
<Block for 0x40008d, 4 bytes>
0x40008d:	test	eax, eax
0x40008f:	je	0x4000df
<Block for 0x400036, 7 bytes>
0x400036:	and	eax, 1
0x400039:	test	eax, eax
0x40003b:	je	0x40005a
<Block for 0x4000df, 46 bytes>
0x4000df:	mov	qword ptr [rbp - 0x40], 0
0x4000e7:	mov	qword ptr [rbp - 0x38], 0
0x4000ef:	mov	qword ptr [rbp - 0x30], 0
0x4000f7:	mov	qword ptr [rbp - 0x28], 0
0x4000ff:	mov	qword ptr [rbp - 0x20], 0
0x400107:	cmp	dword ptr [rbp - 0x44], 0
0x40010b:	js	0x400125
<Block for 0x400091, 46 bytes>
0x400091:	mov	qword ptr [rbp - 0x40], 0
0x400099:	mov	qword ptr [rbp - 0x38], 0
0x4000a1:	mov	qword ptr [rbp - 0x30], 0
0x4000a9:	mov	qword ptr [rbp - 0x28], 0
0x4000b1:	mov	qword ptr [rbp - 0x20], 0
0x4000b9:	cmp	dword ptr [rbp - 0x44], 0
0x4000bd:	js	0x4000d1
<Block for 0x40005a, 5 bytes>
0x40005a:	call	0x500008
<Block for 0x40003d, 5 bytes>
0x40003d:	call	0x500008
<Block for 0x400125, 12 bytes>
0x400125:	lea	rdi, [rip + 0x2fc]
0x40012c:	call	0x500018
<Block for 0x40010d, 6 bytes>
0x40010d:	cmp	dword ptr [rbp - 0x44], 9
0x400111:	jg	0x400125
<Block for 0x4000d1, 12 bytes>
0x4000d1:	lea	rdi, [rip + 0x330]
0x4000d8:	call	0x500018
<Block for 0x4000bf, 16 bytes>
0x4000bf:	mov	eax, dword ptr [rbp - 0x44]
0x4000c2:	cdqe	
0x4000c4:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4000c8:	mov	edi, eax
0x4000ca:	call	0x500010
<Block for 0x40005f, 10 bytes>
0x40005f:	shl	eax, 0x1e
0x400062:	mov	ebx, eax
0x400064:	call	0x500008
<Block for 0x400042, 10 bytes>
0x400042:	shl	eax, 0x1e
0x400045:	mov	ebx, eax
0x400047:	call	0x500008
<Block for 0x400131, 16 bytes>
0x400131:	nop	
0x400132:	mov	rax, qword ptr [rbp - 0x18]
0x400136:	xor	rax, qword ptr fs:[0x28]
0x40013f:	je	0x400146
<Block for 0x400113, 16 bytes>
0x400113:	mov	eax, dword ptr [rbp - 0x44]
0x400116:	cdqe	
0x400118:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x40011c:	mov	edi, eax
0x40011e:	call	0x500010
<Block for 0x4000dd, 2 bytes>
0x4000dd:	jmp	0x400131
<Block for 0x4000cf, 2 bytes>
0x4000cf:	jmp	0x400131
<Block for 0x400069, 10 bytes>
0x400069:	shl	eax, 0xf
0x40006c:	xor	ebx, eax
0x40006e:	call	0x500008
<Block for 0x40004c, 10 bytes>
0x40004c:	shl	eax, 0xf
0x40004f:	xor	ebx, eax
0x400051:	call	0x500008
<Block for 0x400146, 7 bytes>
0x400146:	add	rsp, 0x48
0x40014a:	pop	rbx
0x40014b:	pop	rbp
0x40014c:	ret	
<Block for 0x400141, 5 bytes>
0x400141:	call	0x500020
<Block for 0x400123, 2 bytes>
0x400123:	jmp	0x400131
<Block for 0x400073, 9 bytes>
0x400073:	xor	eax, ebx
0x400075:	not	eax
0x400077:	mov	dword ptr [rbp - 0x44], eax
0x40007a:	jmp	0x400083
<Block for 0x400056, 4 bytes>
0x400056:	xor	eax, ebx
0x400058:	jmp	0x400077
<Block for 0x400083, 10 bytes>
0x400083:	mov	eax, 0
0x400088:	call	0x500000
<Block for 0x400077, 5 bytes>
0x400077:	mov	dword ptr [rbp - 0x44], eax
0x40007a:	jmp	0x400083
