<Block for 0x4002b6, 84 bytes>
0x4002b6:	endbr64	
0x4002ba:	push	rbp
0x4002bb:	mov	rbp, rsp
0x4002be:	sub	rsp, 0x90
0x4002c5:	mov	rax, qword ptr fs:[0x28]
0x4002ce:	mov	qword ptr [rbp - 8], rax
0x4002d2:	xor	eax, eax
0x4002d4:	mov	eax, 0x10
0x4002d9:	sub	rax, 1
0x4002dd:	add	rax, 0x6c
0x4002e1:	mov	esi, 0x10
0x4002e6:	mov	edx, 0
0x4002eb:	div	rsi
0x4002ee:	imul	rax, rax, 0x10
0x4002f2:	mov	rdx, rax
0x4002f5:	and	rdx, 0xfffffffffffff000
0x4002fc:	mov	rcx, rsp
0x4002ff:	sub	rcx, rdx
0x400302:	mov	rdx, rcx
0x400305:	cmp	rsp, rdx
0x400308:	je	0x40031c
<Block for 0x40031c, 26 bytes>
0x40031c:	mov	rdx, rax
0x40031f:	and	edx, 0xfff
0x400325:	sub	rsp, rdx
0x400328:	mov	rdx, rax
0x40032b:	and	edx, 0xfff
0x400331:	test	rdx, rdx
0x400334:	je	0x400346
<Block for 0x40030a, 18 bytes>
0x40030a:	sub	rsp, 0x1000
0x400311:	or	qword ptr [rsp + 0xff8], 0
0x40031a:	jmp	0x400305
<Block for 0x400346, 41 bytes>
0x400346:	mov	rax, rsp
0x400349:	add	rax, 0xf
0x40034d:	shr	rax, 4
0x400351:	shl	rax, 4
0x400355:	mov	qword ptr [rbp - 0x78], rax
0x400359:	mov	rax, qword ptr [rbp - 0x78]
0x40035d:	mov	edx, 0x63
0x400362:	mov	esi, 0x41
0x400367:	mov	rdi, rax
0x40036a:	call	0x500000
<Block for 0x400336, 57 bytes>
0x400336:	and	eax, 0xfff
0x40033b:	sub	rax, 8
0x40033f:	add	rax, rsp
0x400342:	or	qword ptr [rax], 0
0x400346:	mov	rax, rsp
0x400349:	add	rax, 0xf
0x40034d:	shr	rax, 4
0x400351:	shl	rax, 4
0x400355:	mov	qword ptr [rbp - 0x78], rax
0x400359:	mov	rax, qword ptr [rbp - 0x78]
0x40035d:	mov	edx, 0x63
0x400362:	mov	esi, 0x41
0x400367:	mov	rdi, rax
0x40036a:	call	0x500000
<Block for 0x400305, 5 bytes>
0x400305:	cmp	rsp, rdx
0x400308:	je	0x40031c
<Block for 0x40036f, 21 bytes>
0x40036f:	mov	rax, qword ptr [rbp - 0x78]
0x400373:	add	rax, 0x63
0x400377:	mov	byte ptr [rax], 0
0x40037a:	mov	eax, 0
0x40037f:	call	0x500008
<Block for 0x400384, 4 bytes>
0x400384:	test	eax, eax
0x400386:	je	0x400393
<Block for 0x400393, 22 bytes>
0x400393:	lea	rax, [rbp - 0x70]
0x400397:	mov	edx, 0x63
0x40039c:	mov	esi, 0x43
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500000
<Block for 0x400388, 33 bytes>
0x400388:	mov	rax, qword ptr [rbp - 0x78]
0x40038c:	mov	qword ptr [rbp - 0x88], rax
0x400393:	lea	rax, [rbp - 0x70]
0x400397:	mov	edx, 0x63
0x40039c:	mov	esi, 0x43
0x4003a1:	mov	rdi, rax
0x4003a4:	call	0x500000
<Block for 0x4003a9, 14 bytes>
0x4003a9:	mov	byte ptr [rbp - 0xd], 0
0x4003ad:	mov	qword ptr [rbp - 0x80], 0
0x4003b5:	jmp	0x4003da
<Block for 0x4003da, 7 bytes>
0x4003da:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003df:	jbe	0x4003b7
<Block for 0x4003b7, 42 bytes>
0x4003b7:	mov	rdx, qword ptr [rbp - 0x88]
0x4003be:	mov	rax, qword ptr [rbp - 0x80]
0x4003c2:	add	rax, rdx
0x4003c5:	movzx	eax, byte ptr [rax]
0x4003c8:	lea	rcx, [rbp - 0x70]
0x4003cc:	mov	rdx, qword ptr [rbp - 0x80]
0x4003d0:	add	rdx, rcx
0x4003d3:	mov	byte ptr [rdx], al
0x4003d5:	add	qword ptr [rbp - 0x80], 1
0x4003da:	cmp	qword ptr [rbp - 0x80], 0x63
0x4003df:	jbe	0x4003b7
<Block for 0x4003e1, 16 bytes>
0x4003e1:	mov	byte ptr [rbp - 0xd], 0
0x4003e5:	lea	rax, [rbp - 0x70]
0x4003e9:	mov	rdi, rax
0x4003ec:	call	0x500010
<Block for 0x4003f1, 16 bytes>
0x4003f1:	nop	
0x4003f2:	mov	rax, qword ptr [rbp - 8]
0x4003f6:	xor	rax, qword ptr fs:[0x28]
0x4003ff:	je	0x400406
<Block for 0x400406, 2 bytes>
0x400406:	leave	
0x400407:	ret	
<Block for 0x400401, 5 bytes>
0x400401:	call	0x500018
