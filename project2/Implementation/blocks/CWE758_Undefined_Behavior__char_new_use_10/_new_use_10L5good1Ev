<Block for 0x400052, 22 bytes>
0x400052:	endbr64	
0x400056:	push	rbp
0x400057:	mov	rbp, rsp
0x40005a:	sub	rsp, 0x10
0x40005e:	mov	eax, dword ptr [rip + 0xfffbc]
0x400064:	test	eax, eax
0x400066:	je	0x400076
<Block for 0x400076, 14 bytes>
0x400076:	mov	byte ptr [rbp - 0xa], 5
0x40007a:	mov	edi, 1
0x40007f:	call	0x500008
<Block for 0x400068, 12 bytes>
0x400068:	lea	rdi, [rip + 0xc6]
0x40006f:	call	0x500028
<Block for 0x400084, 35 bytes>
0x400084:	mov	qword ptr [rbp - 8], rax
0x400088:	mov	rax, qword ptr [rbp - 8]
0x40008c:	movzx	edx, byte ptr [rbp - 0xa]
0x400090:	mov	byte ptr [rax], dl
0x400092:	mov	rax, qword ptr [rbp - 8]
0x400096:	movzx	eax, byte ptr [rax]
0x400099:	mov	byte ptr [rbp - 9], al
0x40009c:	movsx	eax, byte ptr [rbp - 9]
0x4000a0:	mov	edi, eax
0x4000a2:	call	0x500018
<Block for 0x400074, 2 bytes>
0x400074:	jmp	0x4000bd
<Block for 0x4000a7, 9 bytes>
0x4000a7:	mov	rax, qword ptr [rbp - 8]
0x4000ab:	test	rax, rax
0x4000ae:	je	0x4000bd
<Block for 0x4000bd, 3 bytes>
0x4000bd:	nop	
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000b0, 13 bytes>
0x4000b0:	mov	esi, 1
0x4000b5:	mov	rdi, rax
0x4000b8:	call	0x500010
