<Block for 0x40001e, 37 bytes>
0x40001e:	endbr64	
0x400022:	push	rbp
0x400023:	mov	rbp, rsp
0x400026:	sub	rsp, 0x30
0x40002a:	mov	rax, qword ptr fs:[0x28]
0x400033:	mov	qword ptr [rbp - 8], rax
0x400037:	xor	eax, eax
0x400039:	mov	eax, 0
0x40003e:	call	0x400000
<Block for 0x400043, 4 bytes>
0x400043:	test	eax, eax
0x400045:	je	0x4000b5
<Block for 0x4000b5, 16 bytes>
0x4000b5:	nop	
0x4000b6:	mov	rax, qword ptr [rbp - 8]
0x4000ba:	xor	rax, qword ptr fs:[0x28]
0x4000c3:	je	0x4000ca
<Block for 0x400047, 32 bytes>
0x400047:	movabs	rax, 0x5858585858646162
0x400051:	mov	qword ptr [rbp - 0x12], rax
0x400055:	mov	word ptr [rbp - 0xa], 0x58
0x40005b:	lea	rax, [rbp - 0x12]
0x40005f:	mov	rdi, rax
0x400062:	call	0x500000
<Block for 0x4000ca, 2 bytes>
0x4000ca:	leave	
0x4000cb:	ret	
<Block for 0x4000c5, 5 bytes>
0x4000c5:	call	0x500020
<Block for 0x400067, 9 bytes>
0x400067:	mov	dword ptr [rbp - 0x24], eax
0x40006a:	cmp	dword ptr [rbp - 0x24], -1
0x40006e:	je	0x4000b5
<Block for 0x400070, 17 bytes>
0x400070:	mov	eax, dword ptr [rbp - 0x24]
0x400073:	lea	rsi, [rip + 0x1fb]
0x40007a:	mov	edi, eax
0x40007c:	call	0x500008
<Block for 0x400081, 11 bytes>
0x400081:	mov	qword ptr [rbp - 0x20], rax
0x400085:	cmp	qword ptr [rbp - 0x20], 0
0x40008a:	je	0x4000b5
<Block for 0x40008c, 29 bytes>
0x40008c:	mov	rax, qword ptr [rbp - 0x20]
0x400090:	mov	rcx, rax
0x400093:	mov	edx, 0xe
0x400098:	mov	esi, 1
0x40009d:	lea	rdi, [rip + 0x1d3]
0x4000a4:	call	0x500010
<Block for 0x4000a9, 12 bytes>
0x4000a9:	mov	rax, qword ptr [rbp - 0x20]
0x4000ad:	mov	rdi, rax
0x4000b0:	call	0x500018
