<Block for 0x40012e, 81 bytes>
0x40012e:	endbr64	
0x400132:	push	rbp
0x400133:	mov	rbp, rsp
0x400136:	add	rsp, -0x80
0x40013a:	mov	rax, qword ptr fs:[0x28]
0x400143:	mov	qword ptr [rbp - 8], rax
0x400147:	xor	eax, eax
0x400149:	mov	eax, 0x10
0x40014e:	sub	rax, 1
0x400152:	add	rax, 0x6c
0x400156:	mov	esi, 0x10
0x40015b:	mov	edx, 0
0x400160:	div	rsi
0x400163:	imul	rax, rax, 0x10
0x400167:	mov	rdx, rax
0x40016a:	and	rdx, 0xfffffffffffff000
0x400171:	mov	rcx, rsp
0x400174:	sub	rcx, rdx
0x400177:	mov	rdx, rcx
0x40017a:	cmp	rsp, rdx
0x40017d:	je	0x400191
<Block for 0x400191, 26 bytes>
0x400191:	mov	rdx, rax
0x400194:	and	edx, 0xfff
0x40019a:	sub	rsp, rdx
0x40019d:	mov	rdx, rax
0x4001a0:	and	edx, 0xfff
0x4001a6:	test	rdx, rdx
0x4001a9:	je	0x4001bb
<Block for 0x40017f, 18 bytes>
0x40017f:	sub	rsp, 0x1000
0x400186:	or	qword ptr [rsp + 0xff8], 0
0x40018f:	jmp	0x40017a
<Block for 0x4001bb, 41 bytes>
0x4001bb:	mov	rax, rsp
0x4001be:	add	rax, 0xf
0x4001c2:	shr	rax, 4
0x4001c6:	shl	rax, 4
0x4001ca:	mov	qword ptr [rbp - 0x80], rax
0x4001ce:	mov	rax, qword ptr [rbp - 0x80]
0x4001d2:	mov	edx, 0x63
0x4001d7:	mov	esi, 0x41
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500000
<Block for 0x4001ab, 57 bytes>
0x4001ab:	and	eax, 0xfff
0x4001b0:	sub	rax, 8
0x4001b4:	add	rax, rsp
0x4001b7:	or	qword ptr [rax], 0
0x4001bb:	mov	rax, rsp
0x4001be:	add	rax, 0xf
0x4001c2:	shr	rax, 4
0x4001c6:	shl	rax, 4
0x4001ca:	mov	qword ptr [rbp - 0x80], rax
0x4001ce:	mov	rax, qword ptr [rbp - 0x80]
0x4001d2:	mov	edx, 0x63
0x4001d7:	mov	esi, 0x41
0x4001dc:	mov	rdi, rax
0x4001df:	call	0x500000
<Block for 0x40017a, 5 bytes>
0x40017a:	cmp	rsp, rdx
0x40017d:	je	0x400191
<Block for 0x4001e4, 42 bytes>
0x4001e4:	mov	rax, qword ptr [rbp - 0x80]
0x4001e8:	add	rax, 0x63
0x4001ec:	mov	byte ptr [rax], 0
0x4001ef:	mov	rax, qword ptr [rbp - 0x80]
0x4001f3:	mov	qword ptr [rbp - 0x78], rax
0x4001f7:	nop	
0x4001f8:	lea	rax, [rbp - 0x70]
0x4001fc:	mov	edx, 0x63
0x400201:	mov	esi, 0x43
0x400206:	mov	rdi, rax
0x400209:	call	0x500000
<Block for 0x40020e, 28 bytes>
0x40020e:	mov	byte ptr [rbp - 0xd], 0
0x400212:	lea	rcx, [rbp - 0x70]
0x400216:	mov	rax, qword ptr [rbp - 0x78]
0x40021a:	mov	edx, 0x63
0x40021f:	mov	rsi, rcx
0x400222:	mov	rdi, rax
0x400225:	call	0x500008
<Block for 0x40022a, 23 bytes>
0x40022a:	mov	rax, qword ptr [rbp - 0x78]
0x40022e:	add	rax, 0x63
0x400232:	mov	byte ptr [rax], 0
0x400235:	mov	rax, qword ptr [rbp - 0x78]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500010
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500018
