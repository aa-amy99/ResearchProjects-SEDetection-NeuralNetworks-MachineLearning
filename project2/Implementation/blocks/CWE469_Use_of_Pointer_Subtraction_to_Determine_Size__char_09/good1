<Block for 0x40009f, 37 bytes>
0x40009f:	endbr64	
0x4000a3:	push	rbp
0x4000a4:	mov	rbp, rsp
0x4000a7:	sub	rsp, 0x30
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 8], rax
0x4000b8:	xor	eax, eax
0x4000ba:	mov	eax, dword ptr [rip + 0xfff68]
0x4000c0:	test	eax, eax
0x4000c2:	je	0x4000d2
<Block for 0x4000d2, 38 bytes>
0x4000d2:	movabs	rax, 0x7271706f2f636261
0x4000dc:	mov	qword ptr [rbp - 0x14], rax
0x4000e0:	mov	dword ptr [rbp - 0xc], 0x757473
0x4000e7:	lea	rax, [rbp - 0x14]
0x4000eb:	mov	esi, 0x2f
0x4000f0:	mov	rdi, rax
0x4000f3:	call	0x500008
<Block for 0x4000c4, 12 bytes>
0x4000c4:	lea	rdi, [rip + 0x129]
0x4000cb:	call	0x500030
<Block for 0x4000f8, 11 bytes>
0x4000f8:	mov	qword ptr [rbp - 0x28], rax
0x4000fc:	cmp	qword ptr [rbp - 0x28], 0
0x400101:	jne	0x40010d
<Block for 0x4000d0, 2 bytes>
0x4000d0:	jmp	0x40012a
<Block for 0x400103, 10 bytes>
0x400103:	mov	edi, 1
0x400108:	call	0x500010
<Block for 0x40010d, 29 bytes>
0x40010d:	lea	rax, [rbp - 0x14]
0x400111:	mov	rdx, qword ptr [rbp - 0x28]
0x400115:	sub	rdx, rax
0x400118:	mov	rax, rdx
0x40011b:	mov	qword ptr [rbp - 0x20], rax
0x40011f:	mov	rax, qword ptr [rbp - 0x20]
0x400123:	mov	edi, eax
0x400125:	call	0x500018
<Block for 0x40012a, 16 bytes>
0x40012a:	nop	
0x40012b:	mov	rax, qword ptr [rbp - 8]
0x40012f:	xor	rax, qword ptr fs:[0x28]
0x400138:	je	0x40013f
<Block for 0x40013f, 2 bytes>
0x40013f:	leave	
0x400140:	ret	
<Block for 0x40013a, 5 bytes>
0x40013a:	call	0x500020
