<Block for 0x400196, 85 bytes>
0x400196:	endbr64	
0x40019a:	push	rbp
0x40019b:	mov	rbp, rsp
0x40019e:	push	rbx
0x40019f:	sub	rsp, 0x88
0x4001a6:	mov	rax, qword ptr fs:[0x28]
0x4001af:	mov	qword ptr [rbp - 0x18], rax
0x4001b3:	xor	eax, eax
0x4001b5:	mov	eax, 0x10
0x4001ba:	sub	rax, 1
0x4001be:	add	rax, 0x6c
0x4001c2:	mov	esi, 0x10
0x4001c7:	mov	edx, 0
0x4001cc:	div	rsi
0x4001cf:	imul	rax, rax, 0x10
0x4001d3:	mov	rdx, rax
0x4001d6:	and	rdx, 0xfffffffffffff000
0x4001dd:	mov	rbx, rsp
0x4001e0:	sub	rbx, rdx
0x4001e3:	mov	rdx, rbx
0x4001e6:	cmp	rsp, rdx
0x4001e9:	je	0x4001fd
<Block for 0x4001fd, 26 bytes>
0x4001fd:	mov	rdx, rax
0x400200:	and	edx, 0xfff
0x400206:	sub	rsp, rdx
0x400209:	mov	rdx, rax
0x40020c:	and	edx, 0xfff
0x400212:	test	rdx, rdx
0x400215:	je	0x400227
<Block for 0x4001eb, 18 bytes>
0x4001eb:	sub	rsp, 0x1000
0x4001f2:	or	qword ptr [rsp + 0xff8], 0
0x4001fb:	jmp	0x4001e6
<Block for 0x400227, 47 bytes>
0x400227:	mov	rax, rsp
0x40022a:	add	rax, 0xf
0x40022e:	shr	rax, 4
0x400232:	shl	rax, 4
0x400236:	mov	qword ptr [rbp - 0x90], rax
0x40023d:	mov	rax, qword ptr [rbp - 0x90]
0x400244:	mov	edx, 0x63
0x400249:	mov	esi, 0x41
0x40024e:	mov	rdi, rax
0x400251:	call	0x500000
<Block for 0x400217, 63 bytes>
0x400217:	and	eax, 0xfff
0x40021c:	sub	rax, 8
0x400220:	add	rax, rsp
0x400223:	or	qword ptr [rax], 0
0x400227:	mov	rax, rsp
0x40022a:	add	rax, 0xf
0x40022e:	shr	rax, 4
0x400232:	shl	rax, 4
0x400236:	mov	qword ptr [rbp - 0x90], rax
0x40023d:	mov	rax, qword ptr [rbp - 0x90]
0x400244:	mov	edx, 0x63
0x400249:	mov	esi, 0x41
0x40024e:	mov	rdi, rax
0x400251:	call	0x500000
<Block for 0x4001e6, 5 bytes>
0x4001e6:	cmp	rsp, rdx
0x4001e9:	je	0x4001fd
<Block for 0x400256, 55 bytes>
0x400256:	mov	rax, qword ptr [rbp - 0x90]
0x40025d:	add	rax, 0x63
0x400261:	mov	byte ptr [rax], 0
0x400264:	nop	
0x400265:	endbr64	
0x400269:	mov	rax, qword ptr [rbp - 0x90]
0x400270:	mov	qword ptr [rbp - 0x88], rax
0x400277:	lea	rax, [rbp - 0x80]
0x40027b:	mov	edx, 0x63
0x400280:	mov	esi, 0x43
0x400285:	mov	rdi, rax
0x400288:	call	0x500000
<Block for 0x40028d, 128 bytes>
0x40028d:	mov	byte ptr [rbp - 0x1d], 0
0x400291:	mov	rax, qword ptr [rbp - 0x88]
0x400298:	mov	rcx, qword ptr [rax]
0x40029b:	mov	rbx, qword ptr [rax + 8]
0x40029f:	mov	qword ptr [rbp - 0x80], rcx
0x4002a3:	mov	qword ptr [rbp - 0x78], rbx
0x4002a7:	mov	rcx, qword ptr [rax + 0x10]
0x4002ab:	mov	rbx, qword ptr [rax + 0x18]
0x4002af:	mov	qword ptr [rbp - 0x70], rcx
0x4002b3:	mov	qword ptr [rbp - 0x68], rbx
0x4002b7:	mov	rcx, qword ptr [rax + 0x20]
0x4002bb:	mov	rbx, qword ptr [rax + 0x28]
0x4002bf:	mov	qword ptr [rbp - 0x60], rcx
0x4002c3:	mov	qword ptr [rbp - 0x58], rbx
0x4002c7:	mov	rcx, qword ptr [rax + 0x30]
0x4002cb:	mov	rbx, qword ptr [rax + 0x38]
0x4002cf:	mov	qword ptr [rbp - 0x50], rcx
0x4002d3:	mov	qword ptr [rbp - 0x48], rbx
0x4002d7:	mov	rcx, qword ptr [rax + 0x40]
0x4002db:	mov	rbx, qword ptr [rax + 0x48]
0x4002df:	mov	qword ptr [rbp - 0x40], rcx
0x4002e3:	mov	qword ptr [rbp - 0x38], rbx
0x4002e7:	mov	rcx, qword ptr [rax + 0x50]
0x4002eb:	mov	rbx, qword ptr [rax + 0x58]
0x4002ef:	mov	qword ptr [rbp - 0x30], rcx
0x4002f3:	mov	qword ptr [rbp - 0x28], rbx
0x4002f7:	mov	eax, dword ptr [rax + 0x60]
0x4002fa:	mov	dword ptr [rbp - 0x20], eax
0x4002fd:	mov	byte ptr [rbp - 0x1d], 0
0x400301:	lea	rax, [rbp - 0x80]
0x400305:	mov	rdi, rax
0x400308:	call	0x500008
<Block for 0x40030d, 16 bytes>
0x40030d:	nop	
0x40030e:	mov	rax, qword ptr [rbp - 0x18]
0x400312:	xor	rax, qword ptr fs:[0x28]
0x40031b:	je	0x400322
<Block for 0x400322, 6 bytes>
0x400322:	mov	rbx, qword ptr [rbp - 8]
0x400326:	leave	
0x400327:	ret	
<Block for 0x40031d, 5 bytes>
0x40031d:	call	0x500010
