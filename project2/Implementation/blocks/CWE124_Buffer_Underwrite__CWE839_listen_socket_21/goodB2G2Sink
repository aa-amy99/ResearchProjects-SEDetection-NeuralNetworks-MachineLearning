<Block for 0x400436, 40 bytes>
0x400436:	endbr64	
0x40043a:	push	rbp
0x40043b:	mov	rbp, rsp
0x40043e:	sub	rsp, 0x50
0x400442:	mov	dword ptr [rbp - 0x44], edi
0x400445:	mov	rax, qword ptr fs:[0x28]
0x40044e:	mov	qword ptr [rbp - 8], rax
0x400452:	xor	eax, eax
0x400454:	mov	eax, dword ptr [rip + 0x302]
0x40045a:	test	eax, eax
0x40045c:	je	0x4004d2
<Block for 0x4004d2, 16 bytes>
0x4004d2:	nop	
0x4004d3:	mov	rax, qword ptr [rbp - 8]
0x4004d7:	xor	rax, qword ptr fs:[0x28]
0x4004e0:	je	0x4004e7
<Block for 0x40045e, 46 bytes>
0x40045e:	mov	qword ptr [rbp - 0x30], 0
0x400466:	mov	qword ptr [rbp - 0x28], 0
0x40046e:	mov	qword ptr [rbp - 0x20], 0
0x400476:	mov	qword ptr [rbp - 0x18], 0
0x40047e:	mov	qword ptr [rbp - 0x10], 0
0x400486:	cmp	dword ptr [rbp - 0x44], 0
0x40048a:	js	0x4004c4
<Block for 0x4004e7, 2 bytes>
0x4004e7:	leave	
0x4004e8:	ret	
<Block for 0x4004e2, 5 bytes>
0x4004e2:	call	0x500010
<Block for 0x4004c4, 12 bytes>
0x4004c4:	lea	rdi, [rip + 0x2d5]
0x4004cb:	call	0x500008
<Block for 0x40048c, 6 bytes>
0x40048c:	cmp	dword ptr [rbp - 0x44], 9
0x400490:	jg	0x4004c4
<Block for 0x4004d0, 2 bytes>
0x4004d0:	jmp	0x4004d2
<Block for 0x400492, 22 bytes>
0x400492:	mov	eax, dword ptr [rbp - 0x44]
0x400495:	cdqe	
0x400497:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40049f:	mov	dword ptr [rbp - 0x34], 0
0x4004a6:	jmp	0x4004bc
<Block for 0x4004bc, 6 bytes>
0x4004bc:	cmp	dword ptr [rbp - 0x34], 9
0x4004c0:	jle	0x4004a8
<Block for 0x4004a8, 16 bytes>
0x4004a8:	mov	eax, dword ptr [rbp - 0x34]
0x4004ab:	cdqe	
0x4004ad:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x4004b1:	mov	edi, eax
0x4004b3:	call	0x500000
<Block for 0x4004c2, 2 bytes>
0x4004c2:	jmp	0x4004d2
<Block for 0x4004b8, 10 bytes>
0x4004b8:	add	dword ptr [rbp - 0x34], 1
0x4004bc:	cmp	dword ptr [rbp - 0x34], 9
0x4004c0:	jle	0x4004a8
