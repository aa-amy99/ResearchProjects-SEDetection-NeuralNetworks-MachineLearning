<Block for 0x400210, 40 bytes>
0x400210:	endbr64	
0x400214:	push	rbp
0x400215:	mov	rbp, rsp
0x400218:	sub	rsp, 0x50
0x40021c:	mov	dword ptr [rbp - 0x44], edi
0x40021f:	mov	rax, qword ptr fs:[0x28]
0x400228:	mov	qword ptr [rbp - 8], rax
0x40022c:	xor	eax, eax
0x40022e:	mov	eax, dword ptr [rip + 0x524]
0x400234:	test	eax, eax
0x400236:	je	0x400246
<Block for 0x400246, 46 bytes>
0x400246:	mov	qword ptr [rbp - 0x30], 0
0x40024e:	mov	qword ptr [rbp - 0x28], 0
0x400256:	mov	qword ptr [rbp - 0x20], 0
0x40025e:	mov	qword ptr [rbp - 0x18], 0
0x400266:	mov	qword ptr [rbp - 0x10], 0
0x40026e:	cmp	dword ptr [rbp - 0x44], 0
0x400272:	js	0x4002ac
<Block for 0x400238, 12 bytes>
0x400238:	lea	rdi, [rip + 0x549]
0x40023f:	call	0x500008
<Block for 0x4002ac, 12 bytes>
0x4002ac:	lea	rdi, [rip + 0x4ed]
0x4002b3:	call	0x500008
<Block for 0x400274, 6 bytes>
0x400274:	cmp	dword ptr [rbp - 0x44], 9
0x400278:	jg	0x4002ac
<Block for 0x400244, 2 bytes>
0x400244:	jmp	0x4002ba
<Block for 0x4002b8, 2 bytes>
0x4002b8:	jmp	0x4002ba
<Block for 0x40027a, 22 bytes>
0x40027a:	mov	eax, dword ptr [rbp - 0x44]
0x40027d:	cdqe	
0x40027f:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x400287:	mov	dword ptr [rbp - 0x34], 0
0x40028e:	jmp	0x4002a4
<Block for 0x4002ba, 16 bytes>
0x4002ba:	nop	
0x4002bb:	mov	rax, qword ptr [rbp - 8]
0x4002bf:	xor	rax, qword ptr fs:[0x28]
0x4002c8:	je	0x4002cf
<Block for 0x4002a4, 6 bytes>
0x4002a4:	cmp	dword ptr [rbp - 0x34], 9
0x4002a8:	jle	0x400290
<Block for 0x4002cf, 2 bytes>
0x4002cf:	leave	
0x4002d0:	ret	
<Block for 0x4002ca, 5 bytes>
0x4002ca:	call	0x500010
<Block for 0x400290, 16 bytes>
0x400290:	mov	eax, dword ptr [rbp - 0x34]
0x400293:	cdqe	
0x400295:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400299:	mov	edi, eax
0x40029b:	call	0x500000
<Block for 0x4002aa, 2 bytes>
0x4002aa:	jmp	0x4002ba
<Block for 0x4002a0, 10 bytes>
0x4002a0:	add	dword ptr [rbp - 0x34], 1
0x4002a4:	cmp	dword ptr [rbp - 0x34], 9
0x4002a8:	jle	0x400290
