<Block for 0x4004e9, 68 bytes>
0x4004e9:	endbr64	
0x4004ed:	push	rbp
0x4004ee:	mov	rbp, rsp
0x4004f1:	sub	rsp, 0x40
0x4004f5:	mov	rax, qword ptr fs:[0x28]
0x4004fe:	mov	qword ptr [rbp - 8], rax
0x400502:	xor	eax, eax
0x400504:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x40050b:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400512:	mov	dword ptr [rbp - 0x3c], 0xffffffff
0x400519:	mov	edx, 6
0x40051e:	mov	esi, 1
0x400523:	mov	edi, 2
0x400528:	call	0x500018
<Block for 0x40052d, 13 bytes>
0x40052d:	mov	dword ptr [rbp - 0x38], eax
0x400530:	cmp	dword ptr [rbp - 0x38], -1
0x400534:	je	0x4005f9
<Block for 0x4005f9, 3 bytes>
0x4005f9:	nop	
0x4005fa:	jmp	0x400603
<Block for 0x40053a, 22 bytes>
0x40053a:	lea	rax, [rbp - 0x30]
0x40053e:	mov	edx, 0x10
0x400543:	mov	esi, 0
0x400548:	mov	rdi, rax
0x40054b:	call	0x500020
<Block for 0x400603, 6 bytes>
0x400603:	cmp	dword ptr [rbp - 0x38], -1
0x400607:	je	0x400613
<Block for 0x400550, 23 bytes>
0x400550:	mov	word ptr [rbp - 0x30], 2
0x400556:	mov	dword ptr [rbp - 0x2c], 0
0x40055d:	mov	edi, 0x6987
0x400562:	call	0x500028
<Block for 0x400613, 6 bytes>
0x400613:	cmp	dword ptr [rbp - 0x3c], -1
0x400617:	je	0x400623
<Block for 0x400609, 10 bytes>
0x400609:	mov	eax, dword ptr [rbp - 0x38]
0x40060c:	mov	edi, eax
0x40060e:	call	0x500058
<Block for 0x400567, 26 bytes>
0x400567:	mov	word ptr [rbp - 0x2e], ax
0x40056b:	lea	rcx, [rbp - 0x30]
0x40056f:	mov	eax, dword ptr [rbp - 0x38]
0x400572:	mov	edx, 0x10
0x400577:	mov	rsi, rcx
0x40057a:	mov	edi, eax
0x40057c:	call	0x500030
<Block for 0x400623, 20 bytes>
0x400623:	mov	dword ptr [rip + 0x12f], 1
0x40062d:	mov	eax, dword ptr [rbp - 0x40]
0x400630:	mov	edi, eax
0x400632:	call	0x400436
<Block for 0x400619, 10 bytes>
0x400619:	mov	eax, dword ptr [rbp - 0x3c]
0x40061c:	mov	edi, eax
0x40061e:	call	0x500058
<Block for 0x400581, 5 bytes>
0x400581:	cmp	eax, -1
0x400584:	je	0x4005fc
<Block for 0x400637, 16 bytes>
0x400637:	nop	
0x400638:	mov	rax, qword ptr [rbp - 8]
0x40063c:	xor	rax, qword ptr fs:[0x28]
0x400645:	je	0x40064c
<Block for 0x4005fc, 3 bytes>
0x4005fc:	nop	
0x4005fd:	jmp	0x400603
<Block for 0x400586, 15 bytes>
0x400586:	mov	eax, dword ptr [rbp - 0x38]
0x400589:	mov	esi, 5
0x40058e:	mov	edi, eax
0x400590:	call	0x500038
<Block for 0x40064c, 2 bytes>
0x40064c:	leave	
0x40064d:	ret	
<Block for 0x400647, 5 bytes>
0x400647:	call	0x500010
<Block for 0x400595, 5 bytes>
0x400595:	cmp	eax, -1
0x400598:	je	0x4005ff
<Block for 0x4005ff, 3 bytes>
0x4005ff:	nop	
0x400600:	jmp	0x400603
<Block for 0x40059a, 20 bytes>
0x40059a:	mov	eax, dword ptr [rbp - 0x38]
0x40059d:	mov	edx, 0
0x4005a2:	mov	esi, 0
0x4005a7:	mov	edi, eax
0x4005a9:	call	0x500040
<Block for 0x4005ae, 9 bytes>
0x4005ae:	mov	dword ptr [rbp - 0x3c], eax
0x4005b1:	cmp	dword ptr [rbp - 0x3c], -1
0x4005b5:	je	0x400602
<Block for 0x4005b7, 24 bytes>
0x4005b7:	lea	rsi, [rbp - 0x16]
0x4005bb:	mov	eax, dword ptr [rbp - 0x3c]
0x4005be:	mov	ecx, 0
0x4005c3:	mov	edx, 0xd
0x4005c8:	mov	edi, eax
0x4005ca:	call	0x500048
<Block for 0x400602, 1 bytes>
0x400602:	nop	
<Block for 0x4005cf, 9 bytes>
0x4005cf:	mov	dword ptr [rbp - 0x34], eax
0x4005d2:	cmp	dword ptr [rbp - 0x34], -1
0x4005d6:	je	0x400603
<Block for 0x4005d8, 6 bytes>
0x4005d8:	cmp	dword ptr [rbp - 0x34], 0
0x4005dc:	je	0x400603
<Block for 0x4005de, 22 bytes>
0x4005de:	mov	eax, dword ptr [rbp - 0x34]
0x4005e1:	cdqe	
0x4005e3:	mov	byte ptr [rbp + rax - 0x16], 0
0x4005e8:	lea	rax, [rbp - 0x16]
0x4005ec:	mov	rdi, rax
0x4005ef:	call	0x500050
<Block for 0x4005f4, 5 bytes>
0x4005f4:	mov	dword ptr [rbp - 0x40], eax
0x4005f7:	jmp	0x400603
