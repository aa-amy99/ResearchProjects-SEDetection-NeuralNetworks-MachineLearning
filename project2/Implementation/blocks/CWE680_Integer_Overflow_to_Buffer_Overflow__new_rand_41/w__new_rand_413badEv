<Block for 0x400082, 25 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	push	rbx
0x40008b:	sub	rsp, 0x18
0x40008f:	mov	dword ptr [rbp - 0x14], 0xffffffff
0x400096:	call	0x500018
<Block for 0x40009b, 7 bytes>
0x40009b:	and	eax, 1
0x40009e:	test	eax, eax
0x4000a0:	je	0x4000bf
<Block for 0x4000bf, 5 bytes>
0x4000bf:	call	0x500018
<Block for 0x4000a2, 5 bytes>
0x4000a2:	call	0x500018
<Block for 0x4000c4, 10 bytes>
0x4000c4:	shl	eax, 0x1e
0x4000c7:	mov	ebx, eax
0x4000c9:	call	0x500018
<Block for 0x4000a7, 10 bytes>
0x4000a7:	shl	eax, 0x1e
0x4000aa:	mov	ebx, eax
0x4000ac:	call	0x500018
<Block for 0x4000ce, 10 bytes>
0x4000ce:	shl	eax, 0xf
0x4000d1:	xor	ebx, eax
0x4000d3:	call	0x500018
<Block for 0x4000b1, 10 bytes>
0x4000b1:	shl	eax, 0xf
0x4000b4:	xor	ebx, eax
0x4000b6:	call	0x500018
<Block for 0x4000d8, 17 bytes>
0x4000d8:	xor	eax, ebx
0x4000da:	not	eax
0x4000dc:	mov	dword ptr [rbp - 0x14], eax
0x4000df:	mov	eax, dword ptr [rbp - 0x14]
0x4000e2:	mov	edi, eax
0x4000e4:	call	0x400000
<Block for 0x4000bb, 4 bytes>
0x4000bb:	xor	eax, ebx
0x4000bd:	jmp	0x4000dc
<Block for 0x4000e9, 8 bytes>
0x4000e9:	nop	
0x4000ea:	add	rsp, 0x18
0x4000ee:	pop	rbx
0x4000ef:	pop	rbp
0x4000f0:	ret	
<Block for 0x4000dc, 13 bytes>
0x4000dc:	mov	dword ptr [rbp - 0x14], eax
0x4000df:	mov	eax, dword ptr [rbp - 0x14]
0x4000e2:	mov	edi, eax
0x4000e4:	call	0x400000
