<Block for 0x400000, 30 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	eax, 5
0x400019:	cmp	eax, 5
0x40001c:	jne	0x400079
<Block for 0x40001e, 10 bytes>
0x40001e:	mov	edi, 0x320
0x400023:	call	0x500000
<Block for 0x400079, 10 bytes>
0x400079:	mov	eax, 5
0x40007e:	cmp	eax, 5
0x400081:	jne	0x400092
<Block for 0x400028, 11 bytes>
0x400028:	mov	qword ptr [rbp - 0x10], rax
0x40002c:	cmp	qword ptr [rbp - 0x10], 0
0x400031:	jne	0x40003d
<Block for 0x400083, 15 bytes>
0x400083:	mov	rax, qword ptr [rbp - 0x10]
0x400087:	mov	rax, qword ptr [rax]
0x40008a:	mov	rdi, rax
0x40008d:	call	0x500018
<Block for 0x400092, 3 bytes>
0x400092:	nop	
0x400093:	leave	
0x400094:	ret	
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0xffffffff
0x400038:	call	0x500008
<Block for 0x40003d, 10 bytes>
0x40003d:	mov	qword ptr [rbp - 8], 0
0x400045:	jmp	0x400066
<Block for 0x400066, 7 bytes>
0x400066:	cmp	qword ptr [rbp - 8], 0x63
0x40006b:	jbe	0x400047
<Block for 0x400047, 38 bytes>
0x400047:	mov	rax, qword ptr [rbp - 8]
0x40004b:	lea	rdx, [rax*8]
0x400053:	mov	rax, qword ptr [rbp - 0x10]
0x400057:	add	rax, rdx
0x40005a:	mov	qword ptr [rax], 5
0x400061:	add	qword ptr [rbp - 8], 1
0x400066:	cmp	qword ptr [rbp - 8], 0x63
0x40006b:	jbe	0x400047
<Block for 0x40006d, 12 bytes>
0x40006d:	mov	rax, qword ptr [rbp - 0x10]
0x400071:	mov	rdi, rax
0x400074:	call	0x500010
