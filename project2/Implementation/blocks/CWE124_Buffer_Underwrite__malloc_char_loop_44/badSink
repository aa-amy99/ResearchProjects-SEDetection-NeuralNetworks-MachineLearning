<Block for 0x400000, 59 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	lea	rax, [rbp - 0x70]
0x400029:	mov	edx, 0x63
0x40002e:	mov	esi, 0x43
0x400033:	mov	rdi, rax
0x400036:	call	0x500000
<Block for 0x40003b, 14 bytes>
0x40003b:	mov	byte ptr [rbp - 0xd], 0
0x40003f:	mov	qword ptr [rbp - 0x78], 0
0x400047:	jmp	0x40006c
<Block for 0x40006c, 7 bytes>
0x40006c:	cmp	qword ptr [rbp - 0x78], 0x63
0x400071:	jbe	0x400049
<Block for 0x400049, 42 bytes>
0x400049:	mov	rdx, qword ptr [rbp - 0x88]
0x400050:	mov	rax, qword ptr [rbp - 0x78]
0x400054:	add	rdx, rax
0x400057:	lea	rcx, [rbp - 0x70]
0x40005b:	mov	rax, qword ptr [rbp - 0x78]
0x40005f:	add	rax, rcx
0x400062:	movzx	eax, byte ptr [rax]
0x400065:	mov	byte ptr [rdx], al
0x400067:	add	qword ptr [rbp - 0x78], 1
0x40006c:	cmp	qword ptr [rbp - 0x78], 0x63
0x400071:	jbe	0x400049
<Block for 0x400073, 29 bytes>
0x400073:	mov	rax, qword ptr [rbp - 0x88]
0x40007a:	add	rax, 0x63
0x40007e:	mov	byte ptr [rax], 0
0x400081:	mov	rax, qword ptr [rbp - 0x88]
0x400088:	mov	rdi, rax
0x40008b:	call	0x500008
<Block for 0x400090, 16 bytes>
0x400090:	nop	
0x400091:	mov	rax, qword ptr [rbp - 8]
0x400095:	xor	rax, qword ptr fs:[0x28]
0x40009e:	je	0x4000a5
<Block for 0x4000a5, 2 bytes>
0x4000a5:	leave	
0x4000a6:	ret	
<Block for 0x4000a0, 5 bytes>
0x4000a0:	call	0x500010
