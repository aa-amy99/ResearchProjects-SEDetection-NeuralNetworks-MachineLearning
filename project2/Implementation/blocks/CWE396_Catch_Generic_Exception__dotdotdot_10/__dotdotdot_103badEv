<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	mov	eax, dword ptr [rip + 0xfffef]
0x400011:	test	eax, eax
0x400013:	je	0x400111
<Block for 0x400111, 6 bytes>
0x400111:	nop	
0x400112:	pop	rbx
0x400113:	pop	r12
0x400115:	pop	rbp
0x400116:	ret	
<Block for 0x400019, 5 bytes>
0x400019:	call	0x500008
<Block for 0x40001e, 12 bytes>
0x40001e:	and	eax, 1
0x400021:	test	eax, eax
0x400023:	sete	al
0x400026:	test	al, al
0x400028:	je	0x40005f
<Block for 0x40005f, 5 bytes>
0x40005f:	call	0x500008
<Block for 0x40002a, 10 bytes>
0x40002a:	mov	edi, 0x10
0x40002f:	call	0x500010
<Block for 0x400064, 12 bytes>
0x400064:	and	eax, 1
0x400067:	test	eax, eax
0x400069:	sete	al
0x40006c:	test	al, al
0x40006e:	je	0x4000a5
<Block for 0x400034, 18 bytes>
0x400034:	mov	rbx, rax
0x400037:	lea	rsi, [rip + 0x3fa]
0x40003e:	mov	rdi, rbx
0x400041:	call	0x500018
<Block for 0x4000a5, 12 bytes>
0x4000a5:	lea	rdi, [rip + 0x396]
0x4000ac:	call	0x500060
<Block for 0x400070, 10 bytes>
0x400070:	mov	edi, 0x10
0x400075:	call	0x500010
<Block for 0x400046, 25 bytes>
0x400046:	mov	rax, qword ptr [rip + 0xfffdb]
0x40004d:	mov	rdx, rax
0x400050:	lea	rsi, [rip + 0xfffd9]
0x400057:	mov	rdi, rbx
0x40005a:	call	0x500038
<Block for 0x4000b1, 2 bytes>
0x4000b1:	jmp	0x400111
<Block for 0x40007a, 18 bytes>
0x40007a:	mov	rbx, rax
0x40007d:	lea	rsi, [rip + 0x3b9]
0x400084:	mov	rdi, rbx
0x400087:	call	0x500040
<Block for 0x40008c, 25 bytes>
0x40008c:	mov	rax, qword ptr [rip + 0xfffbd]
0x400093:	mov	rdx, rax
0x400096:	lea	rsi, [rip + 0xfffbb]
0x40009d:	mov	rdi, rbx
0x4000a0:	call	0x500038
