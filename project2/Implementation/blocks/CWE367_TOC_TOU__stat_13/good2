<Block for 0x4002fd, 42 bytes>
0x4002fd:	endbr64	
0x400301:	push	rbp
0x400302:	mov	rbp, rsp
0x400305:	add	rsp, -0x80
0x400309:	mov	rax, qword ptr fs:[0x28]
0x400312:	mov	qword ptr [rbp - 8], rax
0x400316:	xor	eax, eax
0x400318:	mov	eax, dword ptr [rip + 0xffce2]
0x40031e:	cmp	eax, 5
0x400321:	jne	0x400441
<Block for 0x400327, 134 bytes>
0x400327:	mov	qword ptr [rbp - 0x70], 0
0x40032f:	mov	qword ptr [rbp - 0x68], 0
0x400337:	mov	qword ptr [rbp - 0x60], 0
0x40033f:	mov	qword ptr [rbp - 0x58], 0
0x400347:	mov	qword ptr [rbp - 0x50], 0
0x40034f:	mov	qword ptr [rbp - 0x48], 0
0x400357:	mov	qword ptr [rbp - 0x40], 0
0x40035f:	mov	qword ptr [rbp - 0x38], 0
0x400367:	mov	qword ptr [rbp - 0x30], 0
0x40036f:	mov	qword ptr [rbp - 0x28], 0
0x400377:	mov	qword ptr [rbp - 0x20], 0
0x40037f:	mov	qword ptr [rbp - 0x18], 0
0x400387:	mov	dword ptr [rbp - 0x10], 0
0x40038e:	mov	dword ptr [rbp - 0x74], 0xffffffff
0x400395:	mov	rdx, qword ptr [rip + 0xffc6c]
0x40039c:	lea	rax, [rbp - 0x70]
0x4003a0:	mov	esi, 0x64
0x4003a5:	mov	rdi, rax
0x4003a8:	call	0x500010
<Block for 0x400441, 16 bytes>
0x400441:	nop	
0x400442:	mov	rax, qword ptr [rbp - 8]
0x400446:	xor	rax, qword ptr fs:[0x28]
0x40044f:	je	0x400456
<Block for 0x4003ad, 5 bytes>
0x4003ad:	test	rax, rax
0x4003b0:	jne	0x4003c2
<Block for 0x400456, 2 bytes>
0x400456:	leave	
0x400457:	ret	
<Block for 0x400451, 5 bytes>
0x400451:	call	0x500050
<Block for 0x4003b2, 12 bytes>
0x4003b2:	lea	rdi, [rip + 0xbe]
0x4003b9:	call	0x500018
<Block for 0x4003c2, 11 bytes>
0x4003c2:	lea	rax, [rbp - 0x70]
0x4003c6:	movzx	eax, byte ptr [rax]
0x4003c9:	test	al, al
0x4003cb:	je	0x4003e2
<Block for 0x4003be, 15 bytes>
0x4003be:	mov	byte ptr [rbp - 0x70], 0
0x4003c2:	lea	rax, [rbp - 0x70]
0x4003c6:	movzx	eax, byte ptr [rax]
0x4003c9:	test	al, al
0x4003cb:	je	0x4003e2
<Block for 0x4003e2, 22 bytes>
0x4003e2:	lea	rax, [rbp - 0x70]
0x4003e6:	mov	esi, 2
0x4003eb:	mov	rdi, rax
0x4003ee:	mov	eax, 0
0x4003f3:	call	0x500038
<Block for 0x4003cd, 12 bytes>
0x4003cd:	lea	rax, [rbp - 0x70]
0x4003d1:	mov	rdi, rax
0x4003d4:	call	0x500020
<Block for 0x4003f8, 9 bytes>
0x4003f8:	mov	dword ptr [rbp - 0x74], eax
0x4003fb:	cmp	dword ptr [rbp - 0x74], -1
0x4003ff:	jne	0x40040b
<Block for 0x4003d9, 31 bytes>
0x4003d9:	sub	rax, 1
0x4003dd:	mov	byte ptr [rbp + rax - 0x70], 0
0x4003e2:	lea	rax, [rbp - 0x70]
0x4003e6:	mov	esi, 2
0x4003eb:	mov	rdi, rax
0x4003ee:	mov	eax, 0
0x4003f3:	call	0x500038
<Block for 0x400401, 10 bytes>
0x400401:	mov	edi, 1
0x400406:	call	0x500030
<Block for 0x40040b, 22 bytes>
0x40040b:	mov	eax, dword ptr [rbp - 0x74]
0x40040e:	mov	edx, 0xc
0x400413:	lea	rsi, [rip + 0x8d]
0x40041a:	mov	edi, eax
0x40041c:	call	0x500040
<Block for 0x400421, 6 bytes>
0x400421:	cmp	rax, -1
0x400425:	jne	0x400431
<Block for 0x400427, 10 bytes>
0x400427:	mov	edi, 1
0x40042c:	call	0x500030
<Block for 0x400431, 6 bytes>
0x400431:	cmp	dword ptr [rbp - 0x74], -1
0x400435:	je	0x400441
<Block for 0x400437, 10 bytes>
0x400437:	mov	eax, dword ptr [rbp - 0x74]
0x40043a:	mov	edi, eax
0x40043c:	call	0x500048
