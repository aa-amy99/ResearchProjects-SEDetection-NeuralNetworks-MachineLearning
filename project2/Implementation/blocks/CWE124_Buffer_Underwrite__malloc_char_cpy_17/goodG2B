<Block for 0x4000de, 50 bytes>
0x4000de:	endbr64	
0x4000e2:	push	rbp
0x4000e3:	mov	rbp, rsp
0x4000e6:	sub	rsp, 0x90
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	xor	eax, eax
0x4000fc:	mov	qword ptr [rbp - 0x80], 0
0x400104:	mov	dword ptr [rbp - 0x84], 0
0x40010e:	jmp	0x40015f
<Block for 0x40015f, 9 bytes>
0x40015f:	cmp	dword ptr [rbp - 0x84], 0
0x400166:	jle	0x400110
<Block for 0x400110, 10 bytes>
0x400110:	mov	edi, 0x64
0x400115:	call	0x500000
<Block for 0x400168, 22 bytes>
0x400168:	lea	rax, [rbp - 0x70]
0x40016c:	mov	edx, 0x63
0x400171:	mov	esi, 0x43
0x400176:	mov	rdi, rax
0x400179:	call	0x500010
<Block for 0x40011a, 11 bytes>
0x40011a:	mov	qword ptr [rbp - 0x78], rax
0x40011e:	cmp	qword ptr [rbp - 0x78], 0
0x400123:	jne	0x40012f
<Block for 0x40017e, 23 bytes>
0x40017e:	mov	byte ptr [rbp - 0xd], 0
0x400182:	lea	rdx, [rbp - 0x70]
0x400186:	mov	rax, qword ptr [rbp - 0x80]
0x40018a:	mov	rsi, rdx
0x40018d:	mov	rdi, rax
0x400190:	call	0x500018
<Block for 0x400125, 10 bytes>
0x400125:	mov	edi, 0xffffffff
0x40012a:	call	0x500008
<Block for 0x40012f, 22 bytes>
0x40012f:	mov	rax, qword ptr [rbp - 0x78]
0x400133:	mov	edx, 0x63
0x400138:	mov	esi, 0x41
0x40013d:	mov	rdi, rax
0x400140:	call	0x500010
<Block for 0x400195, 12 bytes>
0x400195:	mov	rax, qword ptr [rbp - 0x80]
0x400199:	mov	rdi, rax
0x40019c:	call	0x500020
<Block for 0x400145, 35 bytes>
0x400145:	mov	rax, qword ptr [rbp - 0x78]
0x400149:	add	rax, 0x63
0x40014d:	mov	byte ptr [rax], 0
0x400150:	mov	rax, qword ptr [rbp - 0x78]
0x400154:	mov	qword ptr [rbp - 0x80], rax
0x400158:	add	dword ptr [rbp - 0x84], 1
0x40015f:	cmp	dword ptr [rbp - 0x84], 0
0x400166:	jle	0x400110
<Block for 0x4001a1, 16 bytes>
0x4001a1:	nop	
0x4001a2:	mov	rax, qword ptr [rbp - 8]
0x4001a6:	xor	rax, qword ptr fs:[0x28]
0x4001af:	je	0x4001b6
<Block for 0x4001b6, 2 bytes>
0x4001b6:	leave	
0x4001b7:	ret	
<Block for 0x4001b1, 5 bytes>
0x4001b1:	call	0x500028
