<Block for 0x40019a, 154 bytes>
0x40019a:	endbr64	
0x40019e:	push	rbp
0x40019f:	mov	rbp, rsp
0x4001a2:	sub	rsp, 0xa0
0x4001a9:	mov	rax, qword ptr fs:[0x28]
0x4001b2:	mov	qword ptr [rbp - 8], rax
0x4001b6:	xor	eax, eax
0x4001b8:	mov	qword ptr [rbp - 0x70], 0
0x4001c0:	mov	qword ptr [rbp - 0x68], 0
0x4001c8:	mov	qword ptr [rbp - 0x60], 0
0x4001d0:	mov	qword ptr [rbp - 0x58], 0
0x4001d8:	mov	qword ptr [rbp - 0x50], 0
0x4001e0:	mov	qword ptr [rbp - 0x48], 0
0x4001e8:	mov	qword ptr [rbp - 0x40], 0
0x4001f0:	mov	qword ptr [rbp - 0x38], 0
0x4001f8:	mov	qword ptr [rbp - 0x30], 0
0x400200:	mov	qword ptr [rbp - 0x28], 0
0x400208:	mov	qword ptr [rbp - 0x20], 0
0x400210:	mov	qword ptr [rbp - 0x18], 0
0x400218:	mov	dword ptr [rbp - 0x10], 0
0x40021f:	lea	rax, [rbp - 0x70]
0x400223:	mov	qword ptr [rbp - 0x88], rax
0x40022a:	mov	eax, 0
0x40022f:	call	0x400000
<Block for 0x400234, 4 bytes>
0x400234:	test	eax, eax
0x400236:	je	0x40028b
<Block for 0x40028b, 10 bytes>
0x40028b:	mov	eax, 0
0x400290:	call	0x40000f
<Block for 0x400238, 15 bytes>
0x400238:	mov	rax, qword ptr [rbp - 0x88]
0x40023f:	mov	rdi, rax
0x400242:	call	0x500000
<Block for 0x400295, 4 bytes>
0x400295:	test	eax, eax
0x400297:	je	0x4002a7
<Block for 0x400247, 16 bytes>
0x400247:	mov	qword ptr [rbp - 0x80], rax
0x40024b:	lea	rdi, [rip + 0x4e5]
0x400252:	call	0x500008
<Block for 0x4002a7, 34 bytes>
0x4002a7:	lea	rdx, [rbp - 0x94]
0x4002ae:	mov	rax, qword ptr [rbp - 0x88]
0x4002b5:	lea	rsi, [rip + 0x47f]
0x4002bc:	mov	rdi, rax
0x4002bf:	mov	eax, 0
0x4002c4:	call	0x500018
<Block for 0x400299, 12 bytes>
0x400299:	lea	rdi, [rip + 0x49e]
0x4002a0:	call	0x500030
<Block for 0x400257, 11 bytes>
0x400257:	mov	qword ptr [rbp - 0x78], rax
0x40025b:	cmp	qword ptr [rbp - 0x78], 0
0x400260:	je	0x40028b
<Block for 0x4002c9, 5 bytes>
0x4002c9:	cmp	eax, 1
0x4002cc:	jne	0x40031a
<Block for 0x4002a5, 2 bytes>
0x4002a5:	jmp	0x40031a
<Block for 0x400262, 41 bytes>
0x400262:	mov	eax, 0x63
0x400267:	sub	rax, qword ptr [rbp - 0x80]
0x40026b:	mov	rdx, rax
0x40026e:	mov	rcx, qword ptr [rbp - 0x88]
0x400275:	mov	rax, qword ptr [rbp - 0x80]
0x400279:	add	rcx, rax
0x40027c:	mov	rax, qword ptr [rbp - 0x78]
0x400280:	mov	rsi, rax
0x400283:	mov	rdi, rcx
0x400286:	call	0x500010
<Block for 0x4002ce, 13 bytes>
0x4002ce:	mov	eax, dword ptr [rbp - 0x94]
0x4002d4:	cmp	eax, 0x270f
0x4002d9:	jg	0x40031a
<Block for 0x40031a, 16 bytes>
0x40031a:	nop	
0x40031b:	mov	rax, qword ptr [rbp - 8]
0x40031f:	xor	rax, qword ptr fs:[0x28]
0x400328:	je	0x40032f
<Block for 0x4002db, 22 bytes>
0x4002db:	mov	dword ptr [rbp - 0x8c], 0
0x4002e5:	mov	dword ptr [rbp - 0x90], 0
0x4002ef:	jmp	0x4002ff
<Block for 0x40032f, 2 bytes>
0x40032f:	leave	
0x400330:	ret	
<Block for 0x40032a, 5 bytes>
0x40032a:	call	0x500028
<Block for 0x4002ff, 14 bytes>
0x4002ff:	mov	eax, dword ptr [rbp - 0x94]
0x400305:	cmp	dword ptr [rbp - 0x90], eax
0x40030b:	jl	0x4002f1
<Block for 0x4002f1, 28 bytes>
0x4002f1:	add	dword ptr [rbp - 0x8c], 1
0x4002f8:	add	dword ptr [rbp - 0x90], 1
0x4002ff:	mov	eax, dword ptr [rbp - 0x94]
0x400305:	cmp	dword ptr [rbp - 0x90], eax
0x40030b:	jl	0x4002f1
<Block for 0x40030d, 13 bytes>
0x40030d:	mov	eax, dword ptr [rbp - 0x8c]
0x400313:	mov	edi, eax
0x400315:	call	0x500020
