<Block for 0x400000, 37 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	add	rsp, -0x80
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	eax, 0
0x400020:	call	0x500000
<Block for 0x400025, 8 bytes>
0x400025:	test	eax, eax
0x400027:	je	0x400104
<Block for 0x400104, 198 bytes>
0x400104:	mov	qword ptr [rbp - 0x70], 0
0x40010c:	mov	qword ptr [rbp - 0x68], 0
0x400114:	mov	qword ptr [rbp - 0x60], 0
0x40011c:	mov	qword ptr [rbp - 0x58], 0
0x400124:	mov	qword ptr [rbp - 0x50], 0
0x40012c:	mov	qword ptr [rbp - 0x48], 0
0x400134:	mov	qword ptr [rbp - 0x40], 0
0x40013c:	mov	qword ptr [rbp - 0x38], 0
0x400144:	mov	qword ptr [rbp - 0x30], 0
0x40014c:	mov	qword ptr [rbp - 0x28], 0
0x400154:	mov	qword ptr [rbp - 0x20], 0
0x40015c:	mov	qword ptr [rbp - 0x18], 0
0x400164:	mov	dword ptr [rbp - 0x10], 0
0x40016b:	lea	rax, [rbp - 0x70]
0x40016f:	mov	qword ptr [rbp - 0x80], rax
0x400173:	mov	rax, qword ptr [rbp - 0x80]
0x400177:	movabs	rsi, 0x6867666564636261
0x400181:	movabs	rdi, 0x706f6e6d6c6b6a69
0x40018b:	mov	qword ptr [rax], rsi
0x40018e:	mov	qword ptr [rax + 8], rdi
0x400192:	movabs	rsi, 0x7877767574737271
0x40019c:	mov	qword ptr [rax + 0x10], rsi
0x4001a0:	mov	word ptr [rax + 0x18], 0x7a79
0x4001a6:	mov	byte ptr [rax + 0x1a], 0
0x4001aa:	mov	rax, qword ptr [rbp - 0x80]
0x4001ae:	lea	rcx, [rax + 4]
0x4001b2:	mov	rax, qword ptr [rbp - 0x80]
0x4001b6:	add	rax, 6
0x4001ba:	mov	edx, 0xa
0x4001bf:	mov	rsi, rcx
0x4001c2:	mov	rdi, rax
0x4001c5:	call	0x500018
<Block for 0x40002d, 198 bytes>
0x40002d:	mov	qword ptr [rbp - 0x70], 0
0x400035:	mov	qword ptr [rbp - 0x68], 0
0x40003d:	mov	qword ptr [rbp - 0x60], 0
0x400045:	mov	qword ptr [rbp - 0x58], 0
0x40004d:	mov	qword ptr [rbp - 0x50], 0
0x400055:	mov	qword ptr [rbp - 0x48], 0
0x40005d:	mov	qword ptr [rbp - 0x40], 0
0x400065:	mov	qword ptr [rbp - 0x38], 0
0x40006d:	mov	qword ptr [rbp - 0x30], 0
0x400075:	mov	qword ptr [rbp - 0x28], 0
0x40007d:	mov	qword ptr [rbp - 0x20], 0
0x400085:	mov	qword ptr [rbp - 0x18], 0
0x40008d:	mov	dword ptr [rbp - 0x10], 0
0x400094:	lea	rax, [rbp - 0x70]
0x400098:	mov	qword ptr [rbp - 0x78], rax
0x40009c:	mov	rax, qword ptr [rbp - 0x78]
0x4000a0:	movabs	rdx, 0x6867666564636261
0x4000aa:	movabs	rcx, 0x706f6e6d6c6b6a69
0x4000b4:	mov	qword ptr [rax], rdx
0x4000b7:	mov	qword ptr [rax + 8], rcx
0x4000bb:	movabs	rdx, 0x7877767574737271
0x4000c5:	mov	qword ptr [rax + 0x10], rdx
0x4000c9:	mov	word ptr [rax + 0x18], 0x7a79
0x4000cf:	mov	byte ptr [rax + 0x1a], 0
0x4000d3:	mov	rax, qword ptr [rbp - 0x78]
0x4000d7:	lea	rcx, [rax + 4]
0x4000db:	mov	rax, qword ptr [rbp - 0x78]
0x4000df:	add	rax, 6
0x4000e3:	mov	edx, 0xa
0x4000e8:	mov	rsi, rcx
0x4000eb:	mov	rdi, rax
0x4000ee:	call	0x500008
<Block for 0x4001ca, 12 bytes>
0x4001ca:	mov	rax, qword ptr [rbp - 0x80]
0x4001ce:	mov	rdi, rax
0x4001d1:	call	0x500010
<Block for 0x4000f3, 12 bytes>
0x4000f3:	mov	rax, qword ptr [rbp - 0x78]
0x4000f7:	mov	rdi, rax
0x4000fa:	call	0x500010
<Block for 0x4001d6, 16 bytes>
0x4001d6:	nop	
0x4001d7:	mov	rax, qword ptr [rbp - 8]
0x4001db:	xor	rax, qword ptr fs:[0x28]
0x4001e4:	je	0x4001eb
<Block for 0x4000ff, 5 bytes>
0x4000ff:	jmp	0x4001d6
<Block for 0x4001eb, 2 bytes>
0x4001eb:	leave	
0x4001ec:	ret	
<Block for 0x4001e6, 5 bytes>
0x4001e6:	call	0x500020
