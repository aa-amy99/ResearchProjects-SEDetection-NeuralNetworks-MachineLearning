<Block for 0x4001c2, 97 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	sub	rsp, 0x40
0x4001ce:	mov	rax, qword ptr fs:[0x28]
0x4001d7:	mov	qword ptr [rbp - 8], rax
0x4001db:	xor	eax, eax
0x4001dd:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4001e4:	nop	
0x4001e5:	endbr64	
0x4001e9:	mov	dword ptr [rbp - 0x34], 7
0x4001f0:	nop	
0x4001f1:	endbr64	
0x4001f5:	mov	qword ptr [rbp - 0x30], 0
0x4001fd:	mov	qword ptr [rbp - 0x28], 0
0x400205:	mov	qword ptr [rbp - 0x20], 0
0x40020d:	mov	qword ptr [rbp - 0x18], 0
0x400215:	mov	qword ptr [rbp - 0x10], 0
0x40021d:	cmp	dword ptr [rbp - 0x34], 9
0x400221:	jg	0x400235
<Block for 0x400223, 16 bytes>
0x400223:	mov	eax, dword ptr [rbp - 0x34]
0x400226:	cdqe	
0x400228:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x40022c:	mov	edi, eax
0x40022e:	call	0x500008
<Block for 0x400235, 12 bytes>
0x400235:	lea	rdi, [rip + 0x3c]
0x40023c:	call	0x500010
<Block for 0x400233, 2 bytes>
0x400233:	jmp	0x400241
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500018
