<Block for 0x400000, 26 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	r12
0x40000a:	push	rbx
0x40000b:	mov	eax, dword ptr [rip + 0xfffef]
0x400011:	cmp	eax, 5
0x400014:	jne	0x400112
<Block for 0x40001a, 5 bytes>
0x40001a:	call	0x500008
<Block for 0x400112, 6 bytes>
0x400112:	nop	
0x400113:	pop	rbx
0x400114:	pop	r12
0x400116:	pop	rbp
0x400117:	ret	
<Block for 0x40001f, 12 bytes>
0x40001f:	and	eax, 1
0x400022:	test	eax, eax
0x400024:	sete	al
0x400027:	test	al, al
0x400029:	je	0x400060
<Block for 0x400060, 5 bytes>
0x400060:	call	0x500008
<Block for 0x40002b, 10 bytes>
0x40002b:	mov	edi, 0x10
0x400030:	call	0x500010
<Block for 0x400065, 12 bytes>
0x400065:	and	eax, 1
0x400068:	test	eax, eax
0x40006a:	sete	al
0x40006d:	test	al, al
0x40006f:	je	0x4000a6
<Block for 0x400035, 18 bytes>
0x400035:	mov	rbx, rax
0x400038:	lea	rsi, [rip + 0x3fc]
0x40003f:	mov	rdi, rbx
0x400042:	call	0x500018
<Block for 0x4000a6, 12 bytes>
0x4000a6:	lea	rdi, [rip + 0x398]
0x4000ad:	call	0x500060
<Block for 0x400071, 10 bytes>
0x400071:	mov	edi, 0x10
0x400076:	call	0x500010
<Block for 0x400047, 25 bytes>
0x400047:	mov	rax, qword ptr [rip + 0xfffda]
0x40004e:	mov	rdx, rax
0x400051:	lea	rsi, [rip + 0xfffd8]
0x400058:	mov	rdi, rbx
0x40005b:	call	0x500038
<Block for 0x4000b2, 2 bytes>
0x4000b2:	jmp	0x400112
<Block for 0x40007b, 18 bytes>
0x40007b:	mov	rbx, rax
0x40007e:	lea	rsi, [rip + 0x3bb]
0x400085:	mov	rdi, rbx
0x400088:	call	0x500040
<Block for 0x40008d, 25 bytes>
0x40008d:	mov	rax, qword ptr [rip + 0xfffbc]
0x400094:	mov	rdx, rax
0x400097:	lea	rsi, [rip + 0xfffba]
0x40009e:	mov	rdi, rbx
0x4000a1:	call	0x500038
