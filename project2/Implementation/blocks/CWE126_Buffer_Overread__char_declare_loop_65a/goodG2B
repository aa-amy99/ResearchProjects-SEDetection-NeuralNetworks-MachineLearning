<Block for 0x40009b, 69 bytes>
0x40009b:	endbr64	
0x40009f:	push	rbp
0x4000a0:	mov	rbp, rsp
0x4000a3:	sub	rsp, 0xc0
0x4000aa:	mov	rax, qword ptr fs:[0x28]
0x4000b3:	mov	qword ptr [rbp - 8], rax
0x4000b7:	xor	eax, eax
0x4000b9:	mov	rax, qword ptr [rip + 0xfff68]
0x4000c0:	mov	qword ptr [rbp - 0xc0], rax
0x4000c7:	lea	rax, [rbp - 0xb0]
0x4000ce:	mov	edx, 0x31
0x4000d3:	mov	esi, 0x41
0x4000d8:	mov	rdi, rax
0x4000db:	call	0x500010
<Block for 0x4000e0, 26 bytes>
0x4000e0:	mov	byte ptr [rbp - 0x7f], 0
0x4000e4:	lea	rax, [rbp - 0x70]
0x4000e8:	mov	edx, 0x63
0x4000ed:	mov	esi, 0x41
0x4000f2:	mov	rdi, rax
0x4000f5:	call	0x500010
<Block for 0x4000fa, 34 bytes>
0x4000fa:	mov	byte ptr [rbp - 0xd], 0
0x4000fe:	lea	rax, [rbp - 0x70]
0x400102:	mov	qword ptr [rbp - 0xb8], rax
0x400109:	mov	rax, qword ptr [rbp - 0xb8]
0x400110:	mov	rdx, qword ptr [rbp - 0xc0]
0x400117:	mov	rdi, rax
0x40011a:	call	rdx
<Block for 0x40011c, 16 bytes>
0x40011c:	nop	
0x40011d:	mov	rax, qword ptr [rbp - 8]
0x400121:	xor	rax, qword ptr fs:[0x28]
0x40012a:	je	0x400131
<Block for 0x400131, 2 bytes>
0x400131:	leave	
0x400132:	ret	
<Block for 0x40012c, 5 bytes>
0x40012c:	call	0x500018
