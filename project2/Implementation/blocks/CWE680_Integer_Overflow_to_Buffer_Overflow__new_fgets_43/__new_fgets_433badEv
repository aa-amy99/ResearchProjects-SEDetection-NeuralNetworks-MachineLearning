<Block for 0x40008d, 46 bytes>
0x40008d:	endbr64	
0x400091:	push	rbp
0x400092:	mov	rbp, rsp
0x400095:	sub	rsp, 0x30
0x400099:	mov	rax, qword ptr fs:[0x28]
0x4000a2:	mov	qword ptr [rbp - 8], rax
0x4000a6:	xor	eax, eax
0x4000a8:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x4000af:	lea	rax, [rbp - 0x24]
0x4000b3:	mov	rdi, rax
0x4000b6:	call	0x400000
<Block for 0x4000bb, 25 bytes>
0x4000bb:	mov	eax, dword ptr [rbp - 0x24]
0x4000be:	cdqe	
0x4000c0:	shl	rax, 2
0x4000c4:	mov	qword ptr [rbp - 0x18], rax
0x4000c8:	mov	rax, qword ptr [rbp - 0x18]
0x4000cc:	mov	rdi, rax
0x4000cf:	call	0x500028
<Block for 0x4000d4, 23 bytes>
0x4000d4:	mov	qword ptr [rbp - 0x10], rax
0x4000d8:	mov	qword ptr [rbp - 0x20], 0
0x4000e0:	mov	eax, dword ptr [rbp - 0x24]
0x4000e3:	cdqe	
0x4000e5:	cmp	qword ptr [rbp - 0x20], rax
0x4000e9:	jae	0x40010b
<Block for 0x4000eb, 32 bytes>
0x4000eb:	mov	rax, qword ptr [rbp - 0x20]
0x4000ef:	lea	rdx, [rax*4]
0x4000f7:	mov	rax, qword ptr [rbp - 0x10]
0x4000fb:	add	rax, rdx
0x4000fe:	mov	dword ptr [rax], 0
0x400104:	add	qword ptr [rbp - 0x20], 1
0x400109:	jmp	0x4000e0
<Block for 0x40010b, 13 bytes>
0x40010b:	mov	rax, qword ptr [rbp - 0x10]
0x40010f:	mov	eax, dword ptr [rax]
0x400111:	mov	edi, eax
0x400113:	call	0x500030
<Block for 0x4000e0, 11 bytes>
0x4000e0:	mov	eax, dword ptr [rbp - 0x24]
0x4000e3:	cdqe	
0x4000e5:	cmp	qword ptr [rbp - 0x20], rax
0x4000e9:	jae	0x40010b
<Block for 0x400118, 7 bytes>
0x400118:	cmp	qword ptr [rbp - 0x10], 0
0x40011d:	je	0x40012b
<Block for 0x40012b, 16 bytes>
0x40012b:	nop	
0x40012c:	mov	rax, qword ptr [rbp - 8]
0x400130:	xor	rax, qword ptr fs:[0x28]
0x400139:	je	0x400140
<Block for 0x40011f, 12 bytes>
0x40011f:	mov	rax, qword ptr [rbp - 0x10]
0x400123:	mov	rdi, rax
0x400126:	call	0x500038
<Block for 0x400140, 2 bytes>
0x400140:	leave	
0x400141:	ret	
<Block for 0x40013b, 5 bytes>
0x40013b:	call	0x500020
