<Block for 0x400113, 37 bytes>
0x400113:	endbr64	
0x400117:	push	rbp
0x400118:	mov	rbp, rsp
0x40011b:	sub	rsp, 0x20
0x40011f:	mov	rax, qword ptr fs:[0x28]
0x400128:	mov	qword ptr [rbp - 8], rax
0x40012c:	xor	eax, eax
0x40012e:	mov	eax, dword ptr [rip + 0xffecc]
0x400134:	test	eax, eax
0x400136:	je	0x400181
<Block for 0x400181, 16 bytes>
0x400181:	nop	
0x400182:	mov	rax, qword ptr [rbp - 8]
0x400186:	xor	rax, qword ptr fs:[0x28]
0x40018f:	je	0x400196
<Block for 0x400138, 24 bytes>
0x400138:	mov	rdx, qword ptr [rip + 0xffef1]
0x40013f:	lea	rax, [rbp - 0x12]
0x400143:	mov	esi, 0xa
0x400148:	mov	rdi, rax
0x40014b:	call	0x500038
<Block for 0x400196, 2 bytes>
0x400196:	leave	
0x400197:	ret	
<Block for 0x400191, 5 bytes>
0x400191:	call	0x500020
<Block for 0x400150, 11 bytes>
0x400150:	mov	qword ptr [rbp - 0x20], rax
0x400154:	cmp	qword ptr [rbp - 0x20], 0
0x400159:	jne	0x400171
<Block for 0x40015b, 12 bytes>
0x40015b:	lea	rdi, [rip + 0x56]
0x400162:	call	0x500010
<Block for 0x400171, 16 bytes>
0x400171:	mov	byte ptr [rbp - 9], 0
0x400175:	lea	rax, [rbp - 0x12]
0x400179:	mov	rdi, rax
0x40017c:	call	0x500010
<Block for 0x400167, 10 bytes>
0x400167:	mov	edi, 1
0x40016c:	call	0x500018
