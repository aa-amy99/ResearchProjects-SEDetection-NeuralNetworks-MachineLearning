<Block for 0x4002a3, 31 bytes>
0x4002a3:	endbr64	
0x4002a7:	push	rbp
0x4002a8:	mov	rbp, rsp
0x4002ab:	push	r13
0x4002ad:	push	r12
0x4002af:	push	rbx
0x4002b0:	sub	rsp, 0x18
0x4002b4:	mov	eax, dword ptr [rip + 0xffd46]
0x4002ba:	test	eax, eax
0x4002bc:	je	0x400417
<Block for 0x400417, 11 bytes>
0x400417:	add	rsp, 0x18
0x40041b:	pop	rbx
0x40041c:	pop	r12
0x40041e:	pop	r13
0x400420:	pop	rbp
0x400421:	ret	
<Block for 0x4002c2, 5 bytes>
0x4002c2:	call	0x500008
<Block for 0x4002c7, 12 bytes>
0x4002c7:	and	eax, 1
0x4002ca:	test	eax, eax
0x4002cc:	sete	al
0x4002cf:	test	al, al
0x4002d1:	je	0x400308
<Block for 0x400308, 5 bytes>
0x400308:	call	0x500008
<Block for 0x4002d3, 10 bytes>
0x4002d3:	mov	edi, 0x10
0x4002d8:	call	0x500010
<Block for 0x40030d, 12 bytes>
0x40030d:	and	eax, 1
0x400310:	test	eax, eax
0x400312:	sete	al
0x400315:	test	al, al
0x400317:	je	0x40034e
<Block for 0x4002dd, 18 bytes>
0x4002dd:	mov	rbx, rax
0x4002e0:	lea	rsi, [rip + 0x151]
0x4002e7:	mov	rdi, rbx
0x4002ea:	call	0x500018
<Block for 0x40034e, 12 bytes>
0x40034e:	lea	rdi, [rip + 0xed]
0x400355:	call	0x500060
<Block for 0x400319, 10 bytes>
0x400319:	mov	edi, 0x10
0x40031e:	call	0x500010
<Block for 0x4002ef, 25 bytes>
0x4002ef:	mov	rax, qword ptr [rip + 0xffd32]
0x4002f6:	mov	rdx, rax
0x4002f9:	lea	rsi, [rip + 0xffd30]
0x400300:	mov	rdi, rbx
0x400303:	call	0x500038
<Block for 0x40035a, 5 bytes>
0x40035a:	jmp	0x400417
<Block for 0x400323, 18 bytes>
0x400323:	mov	rbx, rax
0x400326:	lea	rsi, [rip + 0x110]
0x40032d:	mov	rdi, rbx
0x400330:	call	0x500040
<Block for 0x400335, 25 bytes>
0x400335:	mov	rax, qword ptr [rip + 0xffd14]
0x40033c:	mov	rdx, rax
0x40033f:	lea	rsi, [rip + 0xffd12]
0x400346:	mov	rdi, rbx
0x400349:	call	0x500038
