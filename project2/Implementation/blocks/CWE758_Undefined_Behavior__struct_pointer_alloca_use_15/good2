<Block for 0x4001fb, 81 bytes>
0x4001fb:	endbr64	
0x4001ff:	push	rbp
0x400200:	mov	rbp, rsp
0x400203:	sub	rsp, 0x20
0x400207:	mov	rax, qword ptr fs:[0x28]
0x400210:	mov	qword ptr [rbp - 8], rax
0x400214:	xor	eax, eax
0x400216:	mov	eax, 0x10
0x40021b:	sub	rax, 1
0x40021f:	add	rax, 0x10
0x400223:	mov	esi, 0x10
0x400228:	mov	edx, 0
0x40022d:	div	rsi
0x400230:	imul	rax, rax, 0x10
0x400234:	mov	rdx, rax
0x400237:	and	rdx, 0xfffffffffffff000
0x40023e:	mov	rcx, rsp
0x400241:	sub	rcx, rdx
0x400244:	mov	rdx, rcx
0x400247:	cmp	rsp, rdx
0x40024a:	je	0x40025e
<Block for 0x40025e, 26 bytes>
0x40025e:	mov	rdx, rax
0x400261:	and	edx, 0xfff
0x400267:	sub	rsp, rdx
0x40026a:	mov	rdx, rax
0x40026d:	and	edx, 0xfff
0x400273:	test	rdx, rdx
0x400276:	je	0x400288
<Block for 0x40024c, 18 bytes>
0x40024c:	sub	rsp, 0x1000
0x400253:	or	qword ptr [rsp + 0xff8], 0
0x40025c:	jmp	0x400247
<Block for 0x400288, 29 bytes>
0x400288:	mov	rax, rsp
0x40028b:	add	rax, 0xf
0x40028f:	shr	rax, 4
0x400293:	shl	rax, 4
0x400297:	mov	qword ptr [rbp - 0x20], rax
0x40029b:	mov	edi, 8
0x4002a0:	call	0x500010
<Block for 0x400278, 45 bytes>
0x400278:	and	eax, 0xfff
0x40027d:	sub	rax, 8
0x400281:	add	rax, rsp
0x400284:	or	qword ptr [rax], 0
0x400288:	mov	rax, rsp
0x40028b:	add	rax, 0xf
0x40028f:	shr	rax, 4
0x400293:	shl	rax, 4
0x400297:	mov	qword ptr [rbp - 0x20], rax
0x40029b:	mov	edi, 8
0x4002a0:	call	0x500010
<Block for 0x400247, 5 bytes>
0x400247:	cmp	rsp, rdx
0x40024a:	je	0x40025e
<Block for 0x4002a5, 11 bytes>
0x4002a5:	mov	qword ptr [rbp - 0x18], rax
0x4002a9:	cmp	qword ptr [rbp - 0x18], 0
0x4002ae:	jne	0x4002ba
<Block for 0x4002b0, 10 bytes>
0x4002b0:	mov	edi, 0xffffffff
0x4002b5:	call	0x500018
<Block for 0x4002ba, 56 bytes>
0x4002ba:	mov	rax, qword ptr [rbp - 0x18]
0x4002be:	mov	dword ptr [rax], 5
0x4002c4:	mov	rax, qword ptr [rbp - 0x18]
0x4002c8:	mov	dword ptr [rax + 4], 6
0x4002cf:	mov	rax, qword ptr [rbp - 0x20]
0x4002d3:	mov	rdx, qword ptr [rbp - 0x18]
0x4002d7:	mov	qword ptr [rax], rdx
0x4002da:	mov	rax, qword ptr [rbp - 0x20]
0x4002de:	mov	rax, qword ptr [rax]
0x4002e1:	mov	qword ptr [rbp - 0x10], rax
0x4002e5:	mov	rax, qword ptr [rbp - 0x10]
0x4002e9:	mov	eax, dword ptr [rax]
0x4002eb:	mov	edi, eax
0x4002ed:	call	0x500000
<Block for 0x4002f2, 14 bytes>
0x4002f2:	mov	rax, qword ptr [rbp - 0x10]
0x4002f6:	mov	eax, dword ptr [rax + 4]
0x4002f9:	mov	edi, eax
0x4002fb:	call	0x500000
<Block for 0x400300, 17 bytes>
0x400300:	nop	
0x400301:	nop	
0x400302:	mov	rax, qword ptr [rbp - 8]
0x400306:	xor	rax, qword ptr fs:[0x28]
0x40030f:	je	0x400316
<Block for 0x400316, 2 bytes>
0x400316:	leave	
0x400317:	ret	
<Block for 0x400311, 5 bytes>
0x400311:	call	0x500008
