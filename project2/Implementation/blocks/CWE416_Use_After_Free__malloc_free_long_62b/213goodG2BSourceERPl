<Block for 0x40007b, 26 bytes>
0x40007b:	endbr64	
0x40007f:	push	rbp
0x400080:	mov	rbp, rsp
0x400083:	sub	rsp, 0x20
0x400087:	mov	qword ptr [rbp - 0x18], rdi
0x40008b:	mov	edi, 0x320
0x400090:	call	0x500000
<Block for 0x400095, 22 bytes>
0x400095:	mov	rdx, rax
0x400098:	mov	rax, qword ptr [rbp - 0x18]
0x40009c:	mov	qword ptr [rax], rdx
0x40009f:	mov	rax, qword ptr [rbp - 0x18]
0x4000a3:	mov	rax, qword ptr [rax]
0x4000a6:	test	rax, rax
0x4000a9:	jne	0x4000b5
<Block for 0x4000ab, 10 bytes>
0x4000ab:	mov	edi, 0xffffffff
0x4000b0:	call	0x500008
<Block for 0x4000b5, 15 bytes>
0x4000b5:	mov	qword ptr [rbp - 8], 0
0x4000bd:	cmp	qword ptr [rbp - 8], 0x63
0x4000c2:	ja	0x4000e4
<Block for 0x4000c4, 32 bytes>
0x4000c4:	mov	rax, qword ptr [rbp - 0x18]
0x4000c8:	mov	rax, qword ptr [rax]
0x4000cb:	mov	rdx, qword ptr [rbp - 8]
0x4000cf:	shl	rdx, 3
0x4000d3:	add	rax, rdx
0x4000d6:	mov	qword ptr [rax], 5
0x4000dd:	add	qword ptr [rbp - 8], 1
0x4000e2:	jmp	0x4000bd
<Block for 0x4000e4, 3 bytes>
0x4000e4:	nop	
0x4000e5:	leave	
0x4000e6:	ret	
<Block for 0x4000bd, 7 bytes>
0x4000bd:	cmp	qword ptr [rbp - 8], 0x63
0x4000c2:	ja	0x4000e4
