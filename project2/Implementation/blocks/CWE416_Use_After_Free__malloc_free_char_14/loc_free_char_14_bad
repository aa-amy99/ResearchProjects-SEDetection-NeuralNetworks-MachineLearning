<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 8], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x40006b
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 0x64
0x400024:	call	0x500008
<Block for 0x40006b, 11 bytes>
0x40006b:	mov	eax, dword ptr [rip + 0xfff8f]
0x400071:	cmp	eax, 5
0x400074:	jne	0x400082
<Block for 0x400029, 11 bytes>
0x400029:	mov	qword ptr [rbp - 8], rax
0x40002d:	cmp	qword ptr [rbp - 8], 0
0x400032:	jne	0x40003e
<Block for 0x400076, 12 bytes>
0x400076:	mov	rax, qword ptr [rbp - 8]
0x40007a:	mov	rdi, rax
0x40007d:	call	0x500028
<Block for 0x400082, 3 bytes>
0x400082:	nop	
0x400083:	leave	
0x400084:	ret	
<Block for 0x400034, 10 bytes>
0x400034:	mov	edi, 0xffffffff
0x400039:	call	0x500010
<Block for 0x40003e, 22 bytes>
0x40003e:	mov	rax, qword ptr [rbp - 8]
0x400042:	mov	edx, 0x63
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500018
<Block for 0x400054, 23 bytes>
0x400054:	mov	rax, qword ptr [rbp - 8]
0x400058:	add	rax, 0x63
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	mov	rax, qword ptr [rbp - 8]
0x400063:	mov	rdi, rax
0x400066:	call	0x500020
