<Block for 0x400304, 159 bytes>
0x400304:	endbr64	
0x400308:	push	rbp
0x400309:	mov	rbp, rsp
0x40030c:	sub	rsp, 0xb0
0x400313:	mov	rax, qword ptr fs:[0x28]
0x40031c:	mov	qword ptr [rbp - 8], rax
0x400320:	xor	eax, eax
0x400322:	mov	qword ptr [rbp - 0x70], 0
0x40032a:	mov	qword ptr [rbp - 0x68], 0
0x400332:	mov	qword ptr [rbp - 0x60], 0
0x40033a:	mov	qword ptr [rbp - 0x58], 0
0x400342:	mov	qword ptr [rbp - 0x50], 0
0x40034a:	mov	qword ptr [rbp - 0x48], 0
0x400352:	mov	qword ptr [rbp - 0x40], 0
0x40035a:	mov	qword ptr [rbp - 0x38], 0
0x400362:	mov	qword ptr [rbp - 0x30], 0
0x40036a:	mov	qword ptr [rbp - 0x28], 0
0x400372:	mov	qword ptr [rbp - 0x20], 0
0x40037a:	mov	qword ptr [rbp - 0x18], 0
0x400382:	mov	dword ptr [rbp - 0x10], 0
0x400389:	lea	rax, [rbp - 0x70]
0x40038d:	mov	qword ptr [rbp - 0x98], rax
0x400394:	mov	rax, qword ptr [rbp - 0x98]
0x40039b:	mov	rdi, rax
0x40039e:	call	0x500000
<Block for 0x4003a3, 29 bytes>
0x4003a3:	mov	qword ptr [rbp - 0x90], rax
0x4003aa:	mov	eax, 0x64
0x4003af:	sub	rax, qword ptr [rbp - 0x90]
0x4003b6:	cmp	rax, 1
0x4003ba:	jbe	0x40044e
<Block for 0x40044e, 50 bytes>
0x40044e:	mov	rax, qword ptr [rbp - 0x98]
0x400455:	mov	qword ptr [rbp - 0x80], rax
0x400459:	mov	rax, qword ptr [rbp - 0x80]
0x40045d:	mov	qword ptr [rbp - 0x78], rax
0x400461:	lea	rdx, [rbp - 0xa4]
0x400468:	mov	rax, qword ptr [rbp - 0x78]
0x40046c:	lea	rsi, [rip + 0xb3]
0x400473:	mov	rdi, rax
0x400476:	mov	eax, 0
0x40047b:	call	0x500028
<Block for 0x4003c0, 19 bytes>
0x4003c0:	lea	rsi, [rip + 0x140]
0x4003c7:	lea	rdi, [rip + 0x13b]
0x4003ce:	call	0x500008
<Block for 0x400480, 5 bytes>
0x400480:	cmp	eax, 1
0x400483:	jne	0x4004d1
<Block for 0x4003d3, 17 bytes>
0x4003d3:	mov	qword ptr [rbp - 0x88], rax
0x4003da:	cmp	qword ptr [rbp - 0x88], 0
0x4003e2:	je	0x40044e
<Block for 0x400485, 13 bytes>
0x400485:	mov	eax, dword ptr [rbp - 0xa4]
0x40048b:	cmp	eax, 0x270f
0x400490:	jg	0x4004d1
<Block for 0x4004d1, 16 bytes>
0x4004d1:	nop	
0x4004d2:	mov	rax, qword ptr [rbp - 8]
0x4004d6:	xor	rax, qword ptr fs:[0x28]
0x4004df:	je	0x4004e6
<Block for 0x4003e4, 54 bytes>
0x4003e4:	mov	rax, qword ptr [rbp - 0x90]
0x4003eb:	mov	edx, 0x64
0x4003f0:	sub	edx, eax
0x4003f2:	mov	eax, edx
0x4003f4:	mov	esi, eax
0x4003f6:	mov	rdx, qword ptr [rbp - 0x98]
0x4003fd:	mov	rax, qword ptr [rbp - 0x90]
0x400404:	lea	rcx, [rdx + rax]
0x400408:	mov	rax, qword ptr [rbp - 0x88]
0x40040f:	mov	rdx, rax
0x400412:	mov	rdi, rcx
0x400415:	call	0x500010
<Block for 0x400492, 22 bytes>
0x400492:	mov	dword ptr [rbp - 0x9c], 0
0x40049c:	mov	dword ptr [rbp - 0xa0], 0
0x4004a6:	jmp	0x4004b6
<Block for 0x4004e6, 2 bytes>
0x4004e6:	leave	
0x4004e7:	ret	
<Block for 0x4004e1, 5 bytes>
0x4004e1:	call	0x500038
<Block for 0x40041a, 5 bytes>
0x40041a:	test	rax, rax
0x40041d:	jne	0x40043f
<Block for 0x4004b6, 14 bytes>
0x4004b6:	mov	eax, dword ptr [rbp - 0xa4]
0x4004bc:	cmp	dword ptr [rbp - 0xa0], eax
0x4004c2:	jl	0x4004a8
<Block for 0x40041f, 12 bytes>
0x40041f:	lea	rdi, [rip + 0xf1]
0x400426:	call	0x500018
<Block for 0x40043f, 15 bytes>
0x40043f:	mov	rax, qword ptr [rbp - 0x88]
0x400446:	mov	rdi, rax
0x400449:	call	0x500020
<Block for 0x4004a8, 28 bytes>
0x4004a8:	add	dword ptr [rbp - 0x9c], 1
0x4004af:	add	dword ptr [rbp - 0xa0], 1
0x4004b6:	mov	eax, dword ptr [rbp - 0xa4]
0x4004bc:	cmp	dword ptr [rbp - 0xa0], eax
0x4004c2:	jl	0x4004a8
<Block for 0x4004c4, 13 bytes>
0x4004c4:	mov	eax, dword ptr [rbp - 0x9c]
0x4004ca:	mov	edi, eax
0x4004cc:	call	0x500030
<Block for 0x40042b, 35 bytes>
0x40042b:	mov	rdx, qword ptr [rbp - 0x98]
0x400432:	mov	rax, qword ptr [rbp - 0x90]
0x400439:	add	rax, rdx
0x40043c:	mov	byte ptr [rax], 0
0x40043f:	mov	rax, qword ptr [rbp - 0x88]
0x400446:	mov	rdi, rax
0x400449:	call	0x500020
