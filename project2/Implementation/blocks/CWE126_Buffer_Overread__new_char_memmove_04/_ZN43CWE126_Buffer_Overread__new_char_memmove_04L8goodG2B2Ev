<Block for 0x400190, 45 bytes>
0x400190:	endbr64	
0x400194:	push	rbp
0x400195:	mov	rbp, rsp
0x400198:	add	rsp, -0x80
0x40019c:	mov	rax, qword ptr fs:[0x28]
0x4001a5:	mov	qword ptr [rbp - 8], rax
0x4001a9:	xor	eax, eax
0x4001ab:	mov	qword ptr [rbp - 0x78], 0
0x4001b3:	mov	edi, 0x64
0x4001b8:	call	0x500000
<Block for 0x4001bd, 26 bytes>
0x4001bd:	mov	qword ptr [rbp - 0x78], rax
0x4001c1:	mov	rax, qword ptr [rbp - 0x78]
0x4001c5:	mov	edx, 0x63
0x4001ca:	mov	esi, 0x41
0x4001cf:	mov	rdi, rax
0x4001d2:	call	0x500008
<Block for 0x4001d7, 33 bytes>
0x4001d7:	mov	rax, qword ptr [rbp - 0x78]
0x4001db:	add	rax, 0x63
0x4001df:	mov	byte ptr [rax], 0
0x4001e2:	lea	rax, [rbp - 0x70]
0x4001e6:	mov	edx, 0x63
0x4001eb:	mov	esi, 0x43
0x4001f0:	mov	rdi, rax
0x4001f3:	call	0x500008
<Block for 0x4001f8, 16 bytes>
0x4001f8:	mov	byte ptr [rbp - 0xd], 0
0x4001fc:	lea	rax, [rbp - 0x70]
0x400200:	mov	rdi, rax
0x400203:	call	0x500010
<Block for 0x400208, 22 bytes>
0x400208:	mov	rdx, rax
0x40020b:	mov	rcx, qword ptr [rbp - 0x78]
0x40020f:	lea	rax, [rbp - 0x70]
0x400213:	mov	rsi, rcx
0x400216:	mov	rdi, rax
0x400219:	call	0x500018
<Block for 0x40021e, 16 bytes>
0x40021e:	mov	byte ptr [rbp - 0xd], 0
0x400222:	lea	rax, [rbp - 0x70]
0x400226:	mov	rdi, rax
0x400229:	call	0x500020
<Block for 0x40022e, 7 bytes>
0x40022e:	cmp	qword ptr [rbp - 0x78], 0
0x400233:	je	0x400241
<Block for 0x400241, 16 bytes>
0x400241:	nop	
0x400242:	mov	rax, qword ptr [rbp - 8]
0x400246:	xor	rax, qword ptr fs:[0x28]
0x40024f:	je	0x400256
<Block for 0x400235, 12 bytes>
0x400235:	mov	rax, qword ptr [rbp - 0x78]
0x400239:	mov	rdi, rax
0x40023c:	call	0x500028
<Block for 0x400256, 2 bytes>
0x400256:	leave	
0x400257:	ret	
<Block for 0x400251, 5 bytes>
0x400251:	call	0x500030
