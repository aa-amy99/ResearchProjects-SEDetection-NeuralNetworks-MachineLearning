<Block for 0x40009e, 67 bytes>
0x40009e:	endbr64	
0x4000a2:	push	rbp
0x4000a3:	mov	rbp, rsp
0x4000a6:	push	rbx
0x4000a7:	sub	rsp, 0x38
0x4000ab:	mov	rax, qword ptr fs:[0x28]
0x4000b4:	mov	qword ptr [rbp - 0x18], rax
0x4000b8:	xor	eax, eax
0x4000ba:	mov	dword ptr [rbp - 0x34], 0x64
0x4000c1:	mov	dword ptr [rbp - 0x20], 0
0x4000c8:	mov	dword ptr [rbp - 0x1c], 0
0x4000cf:	lea	rax, [rbp - 0x20]
0x4000d3:	mov	qword ptr [rbp - 0x30], rax
0x4000d7:	mov	edi, 8
0x4000dc:	call	0x500000
<Block for 0x4000e1, 11 bytes>
0x4000e1:	mov	rbx, rax
0x4000e4:	mov	rdi, rbx
0x4000e7:	call	0x400198
<Block for 0x4000ec, 30 bytes>
0x4000ec:	mov	qword ptr [rbp - 0x28], rbx
0x4000f0:	mov	rax, qword ptr [rbp - 0x28]
0x4000f4:	mov	rax, qword ptr [rax]
0x4000f7:	mov	rcx, qword ptr [rax]
0x4000fa:	mov	rdx, qword ptr [rbp - 0x30]
0x4000fe:	mov	rax, qword ptr [rbp - 0x28]
0x400102:	mov	rsi, rdx
0x400105:	mov	rdi, rax
0x400108:	call	rcx
<Block for 0x40010a, 9 bytes>
0x40010a:	mov	rax, qword ptr [rbp - 0x28]
0x40010e:	test	rax, rax
0x400111:	je	0x400120
<Block for 0x400120, 16 bytes>
0x400120:	nop	
0x400121:	mov	rax, qword ptr [rbp - 0x18]
0x400125:	xor	rax, qword ptr fs:[0x28]
0x40012e:	je	0x400135
<Block for 0x400113, 13 bytes>
0x400113:	mov	esi, 8
0x400118:	mov	rdi, rax
0x40011b:	call	0x500008
<Block for 0x400135, 7 bytes>
0x400135:	add	rsp, 0x38
0x400139:	pop	rbx
0x40013a:	pop	rbp
0x40013b:	ret	
<Block for 0x400130, 5 bytes>
0x400130:	call	0x500010
