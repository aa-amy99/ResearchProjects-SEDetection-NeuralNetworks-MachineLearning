<Block for 0x4000a9, 40 bytes>
0x4000a9:	endbr64	
0x4000ad:	push	rbp
0x4000ae:	mov	rbp, rsp
0x4000b1:	sub	rsp, 0x30
0x4000b5:	mov	dword ptr [rbp - 0x24], edi
0x4000b8:	mov	eax, dword ptr [rbp - 0x24]
0x4000bb:	cdqe	
0x4000bd:	shl	rax, 2
0x4000c1:	mov	qword ptr [rbp - 0x10], rax
0x4000c5:	mov	rax, qword ptr [rbp - 0x10]
0x4000c9:	mov	rdi, rax
0x4000cc:	call	0x500000
<Block for 0x4000d1, 23 bytes>
0x4000d1:	mov	qword ptr [rbp - 8], rax
0x4000d5:	mov	qword ptr [rbp - 0x18], 0
0x4000dd:	mov	eax, dword ptr [rbp - 0x24]
0x4000e0:	cdqe	
0x4000e2:	cmp	qword ptr [rbp - 0x18], rax
0x4000e6:	jae	0x400108
<Block for 0x4000e8, 32 bytes>
0x4000e8:	mov	rax, qword ptr [rbp - 0x18]
0x4000ec:	lea	rdx, [rax*4]
0x4000f4:	mov	rax, qword ptr [rbp - 8]
0x4000f8:	add	rax, rdx
0x4000fb:	mov	dword ptr [rax], 0
0x400101:	add	qword ptr [rbp - 0x18], 1
0x400106:	jmp	0x4000dd
<Block for 0x400108, 13 bytes>
0x400108:	mov	rax, qword ptr [rbp - 8]
0x40010c:	mov	eax, dword ptr [rax]
0x40010e:	mov	edi, eax
0x400110:	call	0x500008
<Block for 0x4000dd, 11 bytes>
0x4000dd:	mov	eax, dword ptr [rbp - 0x24]
0x4000e0:	cdqe	
0x4000e2:	cmp	qword ptr [rbp - 0x18], rax
0x4000e6:	jae	0x400108
<Block for 0x400115, 7 bytes>
0x400115:	cmp	qword ptr [rbp - 8], 0
0x40011a:	je	0x400128
<Block for 0x400128, 3 bytes>
0x400128:	nop	
0x400129:	leave	
0x40012a:	ret	
<Block for 0x40011c, 12 bytes>
0x40011c:	mov	rax, qword ptr [rbp - 8]
0x400120:	mov	rdi, rax
0x400123:	call	0x500010
