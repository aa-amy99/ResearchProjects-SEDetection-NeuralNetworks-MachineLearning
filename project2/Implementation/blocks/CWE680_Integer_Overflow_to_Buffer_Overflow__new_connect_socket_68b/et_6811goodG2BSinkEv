<Block for 0x400088, 46 bytes>
0x400088:	endbr64	
0x40008c:	push	rbp
0x40008d:	mov	rbp, rsp
0x400090:	sub	rsp, 0x20
0x400094:	mov	eax, dword ptr [rip + 0xfff86]
0x40009a:	mov	dword ptr [rbp - 0x1c], eax
0x40009d:	mov	eax, dword ptr [rbp - 0x1c]
0x4000a0:	cdqe	
0x4000a2:	shl	rax, 2
0x4000a6:	mov	qword ptr [rbp - 0x10], rax
0x4000aa:	mov	rax, qword ptr [rbp - 0x10]
0x4000ae:	mov	rdi, rax
0x4000b1:	call	0x500008
<Block for 0x4000b6, 23 bytes>
0x4000b6:	mov	qword ptr [rbp - 8], rax
0x4000ba:	mov	qword ptr [rbp - 0x18], 0
0x4000c2:	mov	eax, dword ptr [rbp - 0x1c]
0x4000c5:	cdqe	
0x4000c7:	cmp	qword ptr [rbp - 0x18], rax
0x4000cb:	jae	0x4000ed
<Block for 0x4000cd, 32 bytes>
0x4000cd:	mov	rax, qword ptr [rbp - 0x18]
0x4000d1:	lea	rdx, [rax*4]
0x4000d9:	mov	rax, qword ptr [rbp - 8]
0x4000dd:	add	rax, rdx
0x4000e0:	mov	dword ptr [rax], 0
0x4000e6:	add	qword ptr [rbp - 0x18], 1
0x4000eb:	jmp	0x4000c2
<Block for 0x4000ed, 13 bytes>
0x4000ed:	mov	rax, qword ptr [rbp - 8]
0x4000f1:	mov	eax, dword ptr [rax]
0x4000f3:	mov	edi, eax
0x4000f5:	call	0x500010
<Block for 0x4000c2, 11 bytes>
0x4000c2:	mov	eax, dword ptr [rbp - 0x1c]
0x4000c5:	cdqe	
0x4000c7:	cmp	qword ptr [rbp - 0x18], rax
0x4000cb:	jae	0x4000ed
<Block for 0x4000fa, 7 bytes>
0x4000fa:	cmp	qword ptr [rbp - 8], 0
0x4000ff:	je	0x40010d
<Block for 0x40010d, 3 bytes>
0x40010d:	nop	
0x40010e:	leave	
0x40010f:	ret	
<Block for 0x400101, 12 bytes>
0x400101:	mov	rax, qword ptr [rbp - 8]
0x400105:	mov	rdi, rax
0x400108:	call	0x500018
