<Block for 0x400000, 17 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	call	0x500000
<Block for 0x400011, 62 bytes>
0x400011:	mov	edx, eax
0x400013:	movsxd	rax, edx
0x400016:	imul	rax, rax, 0x55555556
0x40001d:	shr	rax, 0x20
0x400021:	mov	rcx, rax
0x400024:	mov	eax, edx
0x400026:	sar	eax, 0x1f
0x400029:	mov	esi, ecx
0x40002b:	sub	esi, eax
0x40002d:	mov	eax, esi
0x40002f:	mov	dword ptr [rbp - 8], eax
0x400032:	mov	ecx, dword ptr [rbp - 8]
0x400035:	mov	eax, ecx
0x400037:	add	eax, eax
0x400039:	add	eax, ecx
0x40003b:	sub	edx, eax
0x40003d:	mov	eax, edx
0x40003f:	mov	dword ptr [rbp - 8], eax
0x400042:	mov	dword ptr [rbp - 4], 0
0x400049:	cmp	dword ptr [rbp - 8], 0
0x40004d:	jne	0x40005b
<Block for 0x40004f, 12 bytes>
0x40004f:	lea	rdi, [rip + 0xad]
0x400056:	call	0x500008
<Block for 0x40005b, 13 bytes>
0x40005b:	mov	dword ptr [rbp - 4], 1
0x400062:	cmp	dword ptr [rbp - 4], 0
0x400066:	je	0x400074
<Block for 0x400074, 3 bytes>
0x400074:	nop	
0x400075:	leave	
0x400076:	ret	
<Block for 0x400068, 12 bytes>
0x400068:	lea	rdi, [rip + 0x9b]
0x40006f:	call	0x500008
