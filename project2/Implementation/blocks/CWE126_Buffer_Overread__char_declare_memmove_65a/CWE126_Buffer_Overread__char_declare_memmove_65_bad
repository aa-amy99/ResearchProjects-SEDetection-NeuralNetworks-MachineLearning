<Block for 0x400000, 69 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xc0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	rax, qword ptr [rip + 0xfffe3]
0x400025:	mov	qword ptr [rbp - 0xc0], rax
0x40002c:	lea	rax, [rbp - 0xb0]
0x400033:	mov	edx, 0x31
0x400038:	mov	esi, 0x41
0x40003d:	mov	rdi, rax
0x400040:	call	0x500010
<Block for 0x400045, 26 bytes>
0x400045:	mov	byte ptr [rbp - 0x7f], 0
0x400049:	lea	rax, [rbp - 0x70]
0x40004d:	mov	edx, 0x63
0x400052:	mov	esi, 0x41
0x400057:	mov	rdi, rax
0x40005a:	call	0x500010
<Block for 0x40005f, 37 bytes>
0x40005f:	mov	byte ptr [rbp - 0xd], 0
0x400063:	lea	rax, [rbp - 0xb0]
0x40006a:	mov	qword ptr [rbp - 0xb8], rax
0x400071:	mov	rax, qword ptr [rbp - 0xb8]
0x400078:	mov	rdx, qword ptr [rbp - 0xc0]
0x40007f:	mov	rdi, rax
0x400082:	call	rdx
<Block for 0x400084, 16 bytes>
0x400084:	nop	
0x400085:	mov	rax, qword ptr [rbp - 8]
0x400089:	xor	rax, qword ptr fs:[0x28]
0x400092:	je	0x400099
<Block for 0x400099, 2 bytes>
0x400099:	leave	
0x40009a:	ret	
<Block for 0x400094, 5 bytes>
0x400094:	call	0x500018
