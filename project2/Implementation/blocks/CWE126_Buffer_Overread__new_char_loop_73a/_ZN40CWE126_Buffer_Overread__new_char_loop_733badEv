<Block for 0x400000, 40 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	push	rbx
0x400009:	sub	rsp, 0x58
0x40000d:	mov	rax, qword ptr fs:[0x28]
0x400016:	mov	qword ptr [rbp - 0x18], rax
0x40001a:	xor	eax, eax
0x40001c:	lea	rax, [rbp - 0x50]
0x400020:	mov	rdi, rax
0x400023:	call	0x4002fe
<Block for 0x400028, 18 bytes>
0x400028:	mov	qword ptr [rbp - 0x58], 0
0x400030:	mov	edi, 0x32
0x400035:	call	0x500000
<Block for 0x40003a, 26 bytes>
0x40003a:	mov	qword ptr [rbp - 0x58], rax
0x40003e:	mov	rax, qword ptr [rbp - 0x58]
0x400042:	mov	edx, 0x31
0x400047:	mov	esi, 0x41
0x40004c:	mov	rdi, rax
0x40004f:	call	0x500008
<Block for 0x400054, 30 bytes>
0x400054:	mov	rax, qword ptr [rbp - 0x58]
0x400058:	add	rax, 0x31
0x40005c:	mov	byte ptr [rax], 0
0x40005f:	lea	rdx, [rbp - 0x58]
0x400063:	lea	rax, [rbp - 0x50]
0x400067:	mov	rsi, rdx
0x40006a:	mov	rdi, rax
0x40006d:	call	0x4003f4
<Block for 0x400072, 19 bytes>
0x400072:	lea	rdx, [rbp - 0x58]
0x400076:	lea	rax, [rbp - 0x50]
0x40007a:	mov	rsi, rdx
0x40007d:	mov	rdi, rax
0x400080:	call	0x4003f4
<Block for 0x400085, 19 bytes>
0x400085:	lea	rdx, [rbp - 0x58]
0x400089:	lea	rax, [rbp - 0x50]
0x40008d:	mov	rsi, rdx
0x400090:	mov	rdi, rax
0x400093:	call	0x4003f4
<Block for 0x400098, 19 bytes>
0x400098:	lea	rdx, [rbp - 0x50]
0x40009c:	lea	rax, [rbp - 0x30]
0x4000a0:	mov	rsi, rdx
0x4000a3:	mov	rdi, rax
0x4000a6:	call	0x40042e
<Block for 0x4000ab, 12 bytes>
0x4000ab:	lea	rax, [rbp - 0x30]
0x4000af:	mov	rdi, rax
0x4000b2:	call	0x500010
<Block for 0x4000b7, 12 bytes>
0x4000b7:	lea	rax, [rbp - 0x30]
0x4000bb:	mov	rdi, rax
0x4000be:	call	0x40031e
<Block for 0x4000c3, 12 bytes>
0x4000c3:	lea	rax, [rbp - 0x50]
0x4000c7:	mov	rdi, rax
0x4000ca:	call	0x40031e
<Block for 0x4000cf, 16 bytes>
0x4000cf:	nop	
0x4000d0:	mov	rax, qword ptr [rbp - 0x18]
0x4000d4:	xor	rax, qword ptr fs:[0x28]
0x4000dd:	je	0x400119
<Block for 0x400119, 7 bytes>
0x400119:	add	rsp, 0x58
0x40011d:	pop	rbx
0x40011e:	pop	rbp
0x40011f:	ret	
<Block for 0x4000df, 2 bytes>
0x4000df:	jmp	0x400114
<Block for 0x400114, 5 bytes>
0x400114:	call	0x500020
