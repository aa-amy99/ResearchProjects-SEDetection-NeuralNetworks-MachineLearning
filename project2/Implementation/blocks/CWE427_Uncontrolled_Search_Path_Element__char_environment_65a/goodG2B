<Block for 0x400107, 96 bytes>
0x400107:	endbr64	
0x40010b:	push	rbp
0x40010c:	mov	rbp, rsp
0x40010f:	sub	rsp, 0x120
0x400116:	mov	rax, qword ptr fs:[0x28]
0x40011f:	mov	qword ptr [rbp - 8], rax
0x400123:	xor	eax, eax
0x400125:	mov	rax, qword ptr [rip + 0xfff0c]
0x40012c:	mov	qword ptr [rbp - 0x120], rax
0x400133:	movabs	rax, 0x3d48544150
0x40013d:	mov	edx, 0
0x400142:	mov	qword ptr [rbp - 0x110], rax
0x400149:	mov	qword ptr [rbp - 0x108], rdx
0x400150:	lea	rdx, [rbp - 0x100]
0x400157:	mov	eax, 0
0x40015c:	mov	ecx, 0x1d
0x400161:	mov	rdi, rdx
0x400164:	rep stosq	qword ptr [rdi], rax
<Block for 0x400167, 51 bytes>
0x400167:	mov	rdx, rdi
0x40016a:	mov	word ptr [rdx], ax
0x40016d:	add	rdx, 2
0x400171:	lea	rax, [rbp - 0x110]
0x400178:	mov	qword ptr [rbp - 0x118], rax
0x40017f:	mov	rax, qword ptr [rbp - 0x118]
0x400186:	mov	rcx, -1
0x40018d:	mov	rdx, rax
0x400190:	mov	eax, 0
0x400195:	mov	rdi, rdx
0x400198:	repne scasb	al, byte ptr [rdi]
<Block for 0x400164, 3 bytes>
0x400164:	rep stosq	qword ptr [rdi], rax
<Block for 0x40019a, 49 bytes>
0x40019a:	mov	rax, rcx
0x40019d:	not	rax
0x4001a0:	lea	rdx, [rax - 1]
0x4001a4:	mov	rax, qword ptr [rbp - 0x118]
0x4001ab:	add	rax, rdx
0x4001ae:	mov	dword ptr [rax], 0x6e69622f
0x4001b4:	mov	byte ptr [rax + 4], 0
0x4001b8:	mov	rax, qword ptr [rbp - 0x118]
0x4001bf:	mov	rdx, qword ptr [rbp - 0x120]
0x4001c6:	mov	rdi, rax
0x4001c9:	call	rdx
<Block for 0x400198, 2 bytes>
0x400198:	repne scasb	al, byte ptr [rdi]
<Block for 0x4001cb, 16 bytes>
0x4001cb:	nop	
0x4001cc:	mov	rax, qword ptr [rbp - 8]
0x4001d0:	xor	rax, qword ptr fs:[0x28]
0x4001d9:	je	0x4001e0
<Block for 0x4001e0, 2 bytes>
0x4001e0:	leave	
0x4001e1:	ret	
<Block for 0x4001db, 5 bytes>
0x4001db:	call	0x500028
