<Block for 0x4001c2, 55 bytes>
0x4001c2:	endbr64	
0x4001c6:	push	rbp
0x4001c7:	mov	rbp, rsp
0x4001ca:	sub	rsp, 0x130
0x4001d1:	mov	rax, qword ptr fs:[0x28]
0x4001da:	mov	qword ptr [rbp - 8], rax
0x4001de:	xor	eax, eax
0x4001e0:	lea	rax, [rbp - 0x120]
0x4001e7:	mov	edx, 0x31
0x4001ec:	mov	esi, 0x41
0x4001f1:	mov	rdi, rax
0x4001f4:	call	0x500000
<Block for 0x4001f9, 32 bytes>
0x4001f9:	mov	byte ptr [rbp - 0xef], 0
0x400200:	lea	rax, [rbp - 0xe0]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500000
<Block for 0x400219, 15 bytes>
0x400219:	mov	byte ptr [rbp - 0x7d], 0
0x40021d:	mov	eax, dword ptr [rip + 0x99]
0x400223:	cmp	eax, 5
0x400226:	jne	0x400236
<Block for 0x400228, 36 bytes>
0x400228:	lea	rax, [rbp - 0xe0]
0x40022f:	mov	qword ptr [rbp - 0x128], rax
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	edx, 0x63
0x40023f:	mov	esi, 0x43
0x400244:	mov	rdi, rax
0x400247:	call	0x500000
<Block for 0x400236, 22 bytes>
0x400236:	lea	rax, [rbp - 0x70]
0x40023a:	mov	edx, 0x63
0x40023f:	mov	esi, 0x43
0x400244:	mov	rdi, rax
0x400247:	call	0x500000
<Block for 0x40024c, 16 bytes>
0x40024c:	mov	byte ptr [rbp - 0xd], 0
0x400250:	lea	rax, [rbp - 0x70]
0x400254:	mov	rdi, rax
0x400257:	call	0x500008
<Block for 0x40025c, 25 bytes>
0x40025c:	mov	rdx, rax
0x40025f:	mov	rcx, qword ptr [rbp - 0x128]
0x400266:	lea	rax, [rbp - 0x70]
0x40026a:	mov	rsi, rcx
0x40026d:	mov	rdi, rax
0x400270:	call	0x500010
<Block for 0x400275, 16 bytes>
0x400275:	mov	byte ptr [rbp - 0xd], 0
0x400279:	lea	rax, [rbp - 0x70]
0x40027d:	mov	rdi, rax
0x400280:	call	0x500018
<Block for 0x400285, 16 bytes>
0x400285:	nop	
0x400286:	mov	rax, qword ptr [rbp - 8]
0x40028a:	xor	rax, qword ptr fs:[0x28]
0x400293:	je	0x40029a
<Block for 0x40029a, 2 bytes>
0x40029a:	leave	
0x40029b:	ret	
<Block for 0x400295, 5 bytes>
0x400295:	call	0x500020
