<Block for 0x4000f7, 42 bytes>
0x4000f7:	endbr64	
0x4000fb:	push	rbp
0x4000fc:	mov	rbp, rsp
0x4000ff:	sub	rsp, 0x10
0x400103:	mov	rax, qword ptr fs:[0x28]
0x40010c:	mov	qword ptr [rbp - 8], rax
0x400110:	xor	eax, eax
0x400112:	mov	byte ptr [rbp - 0xd], 0x20
0x400116:	mov	eax, dword ptr [rip + 0xffee4]
0x40011c:	cmp	eax, 5
0x40011f:	jne	0x400125
<Block for 0x400121, 35 bytes>
0x400121:	mov	byte ptr [rbp - 0xd], 0x61
0x400125:	mov	byte ptr [rbp - 0xc], 0x78
0x400129:	movzx	eax, byte ptr [rbp - 0xd]
0x40012d:	mov	byte ptr [rbp - 0xb], al
0x400130:	mov	byte ptr [rbp - 0xa], 0x7a
0x400134:	mov	byte ptr [rbp - 9], 0
0x400138:	lea	rax, [rbp - 0xc]
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500020
<Block for 0x400125, 31 bytes>
0x400125:	mov	byte ptr [rbp - 0xc], 0x78
0x400129:	movzx	eax, byte ptr [rbp - 0xd]
0x40012d:	mov	byte ptr [rbp - 0xb], al
0x400130:	mov	byte ptr [rbp - 0xa], 0x7a
0x400134:	mov	byte ptr [rbp - 9], 0
0x400138:	lea	rax, [rbp - 0xc]
0x40013c:	mov	rdi, rax
0x40013f:	call	0x500020
<Block for 0x400144, 16 bytes>
0x400144:	nop	
0x400145:	mov	rax, qword ptr [rbp - 8]
0x400149:	xor	rax, qword ptr fs:[0x28]
0x400152:	je	0x400159
<Block for 0x400159, 2 bytes>
0x400159:	leave	
0x40015a:	ret	
<Block for 0x400154, 5 bytes>
0x400154:	call	0x500028
