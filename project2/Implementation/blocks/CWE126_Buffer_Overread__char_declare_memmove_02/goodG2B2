<Block for 0x40019e, 55 bytes>
0x40019e:	endbr64	
0x4001a2:	push	rbp
0x4001a3:	mov	rbp, rsp
0x4001a6:	sub	rsp, 0x130
0x4001ad:	mov	rax, qword ptr fs:[0x28]
0x4001b6:	mov	qword ptr [rbp - 8], rax
0x4001ba:	xor	eax, eax
0x4001bc:	lea	rax, [rbp - 0x120]
0x4001c3:	mov	edx, 0x31
0x4001c8:	mov	esi, 0x41
0x4001cd:	mov	rdi, rax
0x4001d0:	call	0x500000
<Block for 0x4001d5, 32 bytes>
0x4001d5:	mov	byte ptr [rbp - 0xef], 0
0x4001dc:	lea	rax, [rbp - 0xe0]
0x4001e3:	mov	edx, 0x63
0x4001e8:	mov	esi, 0x41
0x4001ed:	mov	rdi, rax
0x4001f0:	call	0x500000
<Block for 0x4001f5, 40 bytes>
0x4001f5:	mov	byte ptr [rbp - 0x7d], 0
0x4001f9:	lea	rax, [rbp - 0xe0]
0x400200:	mov	qword ptr [rbp - 0x128], rax
0x400207:	lea	rax, [rbp - 0x70]
0x40020b:	mov	edx, 0x63
0x400210:	mov	esi, 0x43
0x400215:	mov	rdi, rax
0x400218:	call	0x500000
<Block for 0x40021d, 16 bytes>
0x40021d:	mov	byte ptr [rbp - 0xd], 0
0x400221:	lea	rax, [rbp - 0x70]
0x400225:	mov	rdi, rax
0x400228:	call	0x500008
<Block for 0x40022d, 25 bytes>
0x40022d:	mov	rdx, rax
0x400230:	mov	rcx, qword ptr [rbp - 0x128]
0x400237:	lea	rax, [rbp - 0x70]
0x40023b:	mov	rsi, rcx
0x40023e:	mov	rdi, rax
0x400241:	call	0x500010
<Block for 0x400246, 16 bytes>
0x400246:	mov	byte ptr [rbp - 0xd], 0
0x40024a:	lea	rax, [rbp - 0x70]
0x40024e:	mov	rdi, rax
0x400251:	call	0x500018
<Block for 0x400256, 16 bytes>
0x400256:	nop	
0x400257:	mov	rax, qword ptr [rbp - 8]
0x40025b:	xor	rax, qword ptr fs:[0x28]
0x400264:	je	0x40026b
<Block for 0x40026b, 2 bytes>
0x40026b:	leave	
0x40026c:	ret	
<Block for 0x400266, 5 bytes>
0x400266:	call	0x500020
