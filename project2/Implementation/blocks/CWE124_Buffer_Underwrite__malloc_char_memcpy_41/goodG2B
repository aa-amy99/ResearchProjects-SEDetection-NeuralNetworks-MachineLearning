<Block for 0x40023f, 30 bytes>
0x40023f:	endbr64	
0x400243:	push	rbp
0x400244:	mov	rbp, rsp
0x400247:	sub	rsp, 0x10
0x40024b:	mov	qword ptr [rbp - 0x10], 0
0x400253:	mov	edi, 0x64
0x400258:	call	0x500018
<Block for 0x40025d, 11 bytes>
0x40025d:	mov	qword ptr [rbp - 8], rax
0x400261:	cmp	qword ptr [rbp - 8], 0
0x400266:	jne	0x400272
<Block for 0x400268, 10 bytes>
0x400268:	mov	edi, 0xffffffff
0x40026d:	call	0x500020
<Block for 0x400272, 22 bytes>
0x400272:	mov	rax, qword ptr [rbp - 8]
0x400276:	mov	edx, 0x63
0x40027b:	mov	esi, 0x41
0x400280:	mov	rdi, rax
0x400283:	call	0x500000
<Block for 0x400288, 31 bytes>
0x400288:	mov	rax, qword ptr [rbp - 8]
0x40028c:	add	rax, 0x63
0x400290:	mov	byte ptr [rax], 0
0x400293:	mov	rax, qword ptr [rbp - 8]
0x400297:	mov	qword ptr [rbp - 0x10], rax
0x40029b:	mov	rax, qword ptr [rbp - 0x10]
0x40029f:	mov	rdi, rax
0x4002a2:	call	0x400157
<Block for 0x4002a7, 3 bytes>
0x4002a7:	nop	
0x4002a8:	leave	
0x4002a9:	ret	
