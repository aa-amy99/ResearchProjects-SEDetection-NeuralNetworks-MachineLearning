<Block for 0x400113, 96 bytes>
0x400113:	endbr64	
0x400117:	push	rbp
0x400118:	mov	rbp, rsp
0x40011b:	sub	rsp, 0xa0
0x400122:	mov	rax, qword ptr fs:[0x28]
0x40012b:	mov	qword ptr [rbp - 8], rax
0x40012f:	xor	eax, eax
0x400131:	lea	rax, [rbp - 0xa0]
0x400138:	mov	qword ptr [rbp - 0x98], rax
0x40013f:	lea	rax, [rbp - 0xa0]
0x400146:	mov	qword ptr [rbp - 0x90], rax
0x40014d:	mov	qword ptr [rbp - 0xa0], 0
0x400158:	mov	rax, qword ptr [rbp - 0x98]
0x40015f:	mov	rax, qword ptr [rax]
0x400162:	mov	qword ptr [rbp - 0x88], rax
0x400169:	mov	edi, 0x64
0x40016e:	call	0x500000
<Block for 0x400173, 26 bytes>
0x400173:	mov	qword ptr [rbp - 0x80], rax
0x400177:	mov	rax, qword ptr [rbp - 0x80]
0x40017b:	mov	edx, 0x63
0x400180:	mov	esi, 0x41
0x400185:	mov	rdi, rax
0x400188:	call	0x500008
<Block for 0x40018d, 75 bytes>
0x40018d:	mov	rax, qword ptr [rbp - 0x80]
0x400191:	add	rax, 0x63
0x400195:	mov	byte ptr [rax], 0
0x400198:	mov	rax, qword ptr [rbp - 0x80]
0x40019c:	mov	qword ptr [rbp - 0x88], rax
0x4001a3:	mov	rax, qword ptr [rbp - 0x98]
0x4001aa:	mov	rdx, qword ptr [rbp - 0x88]
0x4001b1:	mov	qword ptr [rax], rdx
0x4001b4:	mov	rax, qword ptr [rbp - 0x90]
0x4001bb:	mov	rax, qword ptr [rax]
0x4001be:	mov	qword ptr [rbp - 0x78], rax
0x4001c2:	lea	rax, [rbp - 0x70]
0x4001c6:	mov	edx, 0x63
0x4001cb:	mov	esi, 0x43
0x4001d0:	mov	rdi, rax
0x4001d3:	call	0x500008
<Block for 0x4001d8, 28 bytes>
0x4001d8:	mov	byte ptr [rbp - 0xd], 0
0x4001dc:	lea	rcx, [rbp - 0x70]
0x4001e0:	mov	rax, qword ptr [rbp - 0x78]
0x4001e4:	mov	edx, 0x64
0x4001e9:	mov	rsi, rcx
0x4001ec:	mov	rdi, rax
0x4001ef:	call	0x500010
<Block for 0x4001f4, 23 bytes>
0x4001f4:	mov	rax, qword ptr [rbp - 0x78]
0x4001f8:	add	rax, 0x63
0x4001fc:	mov	byte ptr [rax], 0
0x4001ff:	mov	rax, qword ptr [rbp - 0x78]
0x400203:	mov	rdi, rax
0x400206:	call	0x500018
<Block for 0x40020b, 16 bytes>
0x40020b:	nop	
0x40020c:	mov	rax, qword ptr [rbp - 8]
0x400210:	xor	rax, qword ptr fs:[0x28]
0x400219:	je	0x400220
<Block for 0x400220, 2 bytes>
0x400220:	leave	
0x400221:	ret	
<Block for 0x40021b, 5 bytes>
0x40021b:	call	0x500020
