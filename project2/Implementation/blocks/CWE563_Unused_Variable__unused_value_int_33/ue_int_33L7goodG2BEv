<Block for 0x40005b, 52 bytes>
0x40005b:	endbr64	
0x40005f:	push	rbp
0x400060:	mov	rbp, rsp
0x400063:	sub	rsp, 0x20
0x400067:	mov	rax, qword ptr fs:[0x28]
0x400070:	mov	qword ptr [rbp - 8], rax
0x400074:	xor	eax, eax
0x400076:	lea	rax, [rbp - 0x18]
0x40007a:	mov	qword ptr [rbp - 0x10], rax
0x40007e:	mov	dword ptr [rbp - 0x18], 5
0x400085:	mov	eax, dword ptr [rbp - 0x18]
0x400088:	mov	edi, eax
0x40008a:	call	0x500000
<Block for 0x40008f, 26 bytes>
0x40008f:	mov	rax, qword ptr [rbp - 0x10]
0x400093:	mov	eax, dword ptr [rax]
0x400095:	mov	dword ptr [rbp - 0x14], eax
0x400098:	mov	dword ptr [rbp - 0x14], 0xa
0x40009f:	mov	eax, dword ptr [rbp - 0x14]
0x4000a2:	mov	edi, eax
0x4000a4:	call	0x500000
<Block for 0x4000a9, 16 bytes>
0x4000a9:	nop	
0x4000aa:	mov	rax, qword ptr [rbp - 8]
0x4000ae:	xor	rax, qword ptr fs:[0x28]
0x4000b7:	je	0x4000be
<Block for 0x4000be, 2 bytes>
0x4000be:	leave	
0x4000bf:	ret	
<Block for 0x4000b9, 5 bytes>
0x4000b9:	call	0x500008
