<Block for 0x400085, 22 bytes>
0x400085:	endbr64	
0x400089:	push	rbp
0x40008a:	mov	rbp, rsp
0x40008d:	sub	rsp, 0x20
0x400091:	mov	eax, 0
0x400096:	call	0x40000f
<Block for 0x40009b, 4 bytes>
0x40009b:	test	eax, eax
0x40009d:	je	0x4000ad
<Block for 0x4000ad, 10 bytes>
0x4000ad:	mov	edi, 8
0x4000b2:	call	0x500000
<Block for 0x40009f, 12 bytes>
0x40009f:	lea	rdi, [rip + 0x10c]
0x4000a6:	call	0x500020
<Block for 0x4000b7, 11 bytes>
0x4000b7:	mov	qword ptr [rbp - 0x18], rax
0x4000bb:	cmp	qword ptr [rbp - 0x18], 0
0x4000c0:	jne	0x4000cc
<Block for 0x4000ab, 2 bytes>
0x4000ab:	jmp	0x400110
<Block for 0x4000c2, 10 bytes>
0x4000c2:	mov	edi, 0xffffffff
0x4000c7:	call	0x500008
<Block for 0x4000cc, 46 bytes>
0x4000cc:	mov	dword ptr [rbp - 0x10], 1
0x4000d3:	mov	dword ptr [rbp - 0xc], 2
0x4000da:	mov	rax, qword ptr [rbp - 0x18]
0x4000de:	mov	rdx, qword ptr [rbp - 0x10]
0x4000e2:	mov	qword ptr [rax], rdx
0x4000e5:	mov	rax, qword ptr [rbp - 0x18]
0x4000e9:	mov	rax, qword ptr [rax]
0x4000ec:	mov	qword ptr [rbp - 8], rax
0x4000f0:	mov	eax, dword ptr [rbp - 8]
0x4000f3:	mov	edi, eax
0x4000f5:	call	0x500018
<Block for 0x400110, 3 bytes>
0x400110:	nop	
0x400111:	leave	
0x400112:	ret	
<Block for 0x4000fa, 10 bytes>
0x4000fa:	mov	eax, dword ptr [rbp - 4]
0x4000fd:	mov	edi, eax
0x4000ff:	call	0x500018
<Block for 0x400104, 12 bytes>
0x400104:	mov	rax, qword ptr [rbp - 0x18]
0x400108:	mov	rdi, rax
0x40010b:	call	0x500010
