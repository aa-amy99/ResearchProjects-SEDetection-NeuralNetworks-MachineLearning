<Block for 0x400000, 63 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x30
0x40000c:	mov	qword ptr [rbp - 0x28], rdi
0x400010:	mov	qword ptr [rbp - 0x30], rsi
0x400014:	mov	rax, qword ptr fs:[0x28]
0x40001d:	mov	qword ptr [rbp - 8], rax
0x400021:	xor	eax, eax
0x400023:	lea	rdx, [rbp - 0x14]
0x400027:	mov	rax, qword ptr [rbp - 0x30]
0x40002b:	lea	rsi, [rip + 0x58]
0x400032:	mov	rdi, rax
0x400035:	mov	eax, 0
0x40003a:	call	0x500000
<Block for 0x40003f, 10 bytes>
0x40003f:	cmp	eax, 1
0x400042:	sete	al
0x400045:	test	al, al
0x400047:	je	0x400073
<Block for 0x400073, 16 bytes>
0x400073:	nop	
0x400074:	mov	rax, qword ptr [rbp - 8]
0x400078:	xor	rax, qword ptr fs:[0x28]
0x400081:	je	0x400088
<Block for 0x400049, 22 bytes>
0x400049:	mov	dword ptr [rbp - 0xc], 0
0x400050:	mov	dword ptr [rbp - 0x10], 0
0x400057:	mov	eax, dword ptr [rbp - 0x14]
0x40005a:	cmp	dword ptr [rbp - 0x10], eax
0x40005d:	jge	0x400069
<Block for 0x400088, 2 bytes>
0x400088:	leave	
0x400089:	ret	
<Block for 0x400083, 5 bytes>
0x400083:	call	0x500010
<Block for 0x40005f, 10 bytes>
0x40005f:	add	dword ptr [rbp - 0xc], 1
0x400063:	add	dword ptr [rbp - 0x10], 1
0x400067:	jmp	0x400057
<Block for 0x400069, 10 bytes>
0x400069:	mov	eax, dword ptr [rbp - 0xc]
0x40006c:	mov	edi, eax
0x40006e:	call	0x500008
<Block for 0x400057, 8 bytes>
0x400057:	mov	eax, dword ptr [rbp - 0x14]
0x40005a:	cmp	dword ptr [rbp - 0x10], eax
0x40005d:	jge	0x400069
