<Block for 0x400065, 66 bytes>
0x400065:	endbr64	
0x400069:	push	rbp
0x40006a:	mov	rbp, rsp
0x40006d:	add	rsp, -0x80
0x400071:	mov	rax, qword ptr fs:[0x28]
0x40007a:	mov	qword ptr [rbp - 8], rax
0x40007e:	xor	eax, eax
0x400080:	nop	
0x400081:	endbr64	
0x400085:	mov	dword ptr [rbp - 0x74], 5
0x40008c:	mov	edx, dword ptr [rbp - 0x74]
0x40008f:	lea	rax, [rbp - 0x70]
0x400093:	lea	rsi, [rip + 0x48]
0x40009a:	mov	rdi, rax
0x40009d:	mov	eax, 0
0x4000a2:	call	0x500000
<Block for 0x4000a7, 12 bytes>
0x4000a7:	lea	rax, [rbp - 0x70]
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500008
<Block for 0x4000b3, 16 bytes>
0x4000b3:	nop	
0x4000b4:	mov	rax, qword ptr [rbp - 8]
0x4000b8:	xor	rax, qword ptr fs:[0x28]
0x4000c1:	je	0x4000c8
<Block for 0x4000c8, 2 bytes>
0x4000c8:	leave	
0x4000c9:	ret	
<Block for 0x4000c3, 5 bytes>
0x4000c3:	call	0x500010
