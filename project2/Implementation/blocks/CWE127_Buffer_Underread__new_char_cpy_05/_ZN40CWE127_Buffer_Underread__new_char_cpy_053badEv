<Block for 0x400000, 51 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xe0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	qword ptr [rbp - 0xe0], 0
0x400029:	mov	eax, dword ptr [rip + 0x279]
0x40002f:	test	eax, eax
0x400031:	je	0x40007d
<Block for 0x40007d, 25 bytes>
0x40007d:	lea	rax, [rbp - 0xd0]
0x400084:	mov	edx, 0xc7
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x400033, 10 bytes>
0x400033:	mov	edi, 0x64
0x400038:	call	0x500000
<Block for 0x400096, 29 bytes>
0x400096:	mov	byte ptr [rbp - 9], 0
0x40009a:	mov	rdx, qword ptr [rbp - 0xe0]
0x4000a1:	lea	rax, [rbp - 0xd0]
0x4000a8:	mov	rsi, rdx
0x4000ab:	mov	rdi, rax
0x4000ae:	call	0x500010
<Block for 0x40003d, 32 bytes>
0x40003d:	mov	qword ptr [rbp - 0xd8], rax
0x400044:	mov	rax, qword ptr [rbp - 0xd8]
0x40004b:	mov	edx, 0x63
0x400050:	mov	esi, 0x41
0x400055:	mov	rdi, rax
0x400058:	call	0x500008
<Block for 0x4000b3, 15 bytes>
0x4000b3:	lea	rax, [rbp - 0xd0]
0x4000ba:	mov	rdi, rax
0x4000bd:	call	0x500018
<Block for 0x40005d, 57 bytes>
0x40005d:	mov	rax, qword ptr [rbp - 0xd8]
0x400064:	add	rax, 0x63
0x400068:	mov	byte ptr [rax], 0
0x40006b:	mov	rax, qword ptr [rbp - 0xd8]
0x400072:	sub	rax, 8
0x400076:	mov	qword ptr [rbp - 0xe0], rax
0x40007d:	lea	rax, [rbp - 0xd0]
0x400084:	mov	edx, 0xc7
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x4000c2, 16 bytes>
0x4000c2:	nop	
0x4000c3:	mov	rax, qword ptr [rbp - 8]
0x4000c7:	xor	rax, qword ptr fs:[0x28]
0x4000d0:	je	0x4000d7
<Block for 0x4000d7, 2 bytes>
0x4000d7:	leave	
0x4000d8:	ret	
<Block for 0x4000d2, 5 bytes>
0x4000d2:	call	0x500020
