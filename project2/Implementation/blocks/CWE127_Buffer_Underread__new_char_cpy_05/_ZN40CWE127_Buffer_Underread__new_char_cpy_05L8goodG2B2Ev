<Block for 0x4001bc, 51 bytes>
0x4001bc:	endbr64	
0x4001c0:	push	rbp
0x4001c1:	mov	rbp, rsp
0x4001c4:	sub	rsp, 0xe0
0x4001cb:	mov	rax, qword ptr fs:[0x28]
0x4001d4:	mov	qword ptr [rbp - 8], rax
0x4001d8:	xor	eax, eax
0x4001da:	mov	qword ptr [rbp - 0xe0], 0
0x4001e5:	mov	eax, dword ptr [rip + 0xbd]
0x4001eb:	test	eax, eax
0x4001ed:	je	0x400235
<Block for 0x400235, 25 bytes>
0x400235:	lea	rax, [rbp - 0xd0]
0x40023c:	mov	edx, 0xc7
0x400241:	mov	esi, 0x43
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x4001ef, 10 bytes>
0x4001ef:	mov	edi, 0x64
0x4001f4:	call	0x500000
<Block for 0x40024e, 29 bytes>
0x40024e:	mov	byte ptr [rbp - 9], 0
0x400252:	mov	rdx, qword ptr [rbp - 0xe0]
0x400259:	lea	rax, [rbp - 0xd0]
0x400260:	mov	rsi, rdx
0x400263:	mov	rdi, rax
0x400266:	call	0x500010
<Block for 0x4001f9, 32 bytes>
0x4001f9:	mov	qword ptr [rbp - 0xd8], rax
0x400200:	mov	rax, qword ptr [rbp - 0xd8]
0x400207:	mov	edx, 0x63
0x40020c:	mov	esi, 0x41
0x400211:	mov	rdi, rax
0x400214:	call	0x500008
<Block for 0x40026b, 15 bytes>
0x40026b:	lea	rax, [rbp - 0xd0]
0x400272:	mov	rdi, rax
0x400275:	call	0x500018
<Block for 0x400219, 53 bytes>
0x400219:	mov	rax, qword ptr [rbp - 0xd8]
0x400220:	add	rax, 0x63
0x400224:	mov	byte ptr [rax], 0
0x400227:	mov	rax, qword ptr [rbp - 0xd8]
0x40022e:	mov	qword ptr [rbp - 0xe0], rax
0x400235:	lea	rax, [rbp - 0xd0]
0x40023c:	mov	edx, 0xc7
0x400241:	mov	esi, 0x43
0x400246:	mov	rdi, rax
0x400249:	call	0x500008
<Block for 0x40027a, 16 bytes>
0x40027a:	nop	
0x40027b:	mov	rax, qword ptr [rbp - 8]
0x40027f:	xor	rax, qword ptr fs:[0x28]
0x400288:	je	0x40028f
<Block for 0x40028f, 2 bytes>
0x40028f:	leave	
0x400290:	ret	
<Block for 0x40028a, 5 bytes>
0x40028a:	call	0x500020
