<Block for 0x400230, 40 bytes>
0x400230:	endbr64	
0x400234:	push	rbp
0x400235:	mov	rbp, rsp
0x400238:	push	rbx
0x400239:	sub	rsp, 0x58
0x40023d:	mov	rax, qword ptr fs:[0x28]
0x400246:	mov	qword ptr [rbp - 0x18], rax
0x40024a:	xor	eax, eax
0x40024c:	lea	rax, [rbp - 0x50]
0x400250:	mov	rdi, rax
0x400253:	call	0x40042c
<Block for 0x400258, 12 bytes>
0x400258:	mov	dword ptr [rbp - 0x54], 0xffffffff
0x40025f:	call	0x500000
<Block for 0x400264, 7 bytes>
0x400264:	and	eax, 1
0x400267:	test	eax, eax
0x400269:	je	0x400288
<Block for 0x400288, 5 bytes>
0x400288:	call	0x500000
<Block for 0x40026b, 5 bytes>
0x40026b:	call	0x500000
<Block for 0x40028d, 10 bytes>
0x40028d:	shl	eax, 0x1e
0x400290:	mov	ebx, eax
0x400292:	call	0x500000
<Block for 0x400270, 10 bytes>
0x400270:	shl	eax, 0x1e
0x400273:	mov	ebx, eax
0x400275:	call	0x500000
<Block for 0x400297, 10 bytes>
0x400297:	shl	eax, 0xf
0x40029a:	xor	ebx, eax
0x40029c:	call	0x500000
<Block for 0x40027a, 10 bytes>
0x40027a:	shl	eax, 0xf
0x40027d:	xor	ebx, eax
0x40027f:	call	0x500000
<Block for 0x4002a1, 26 bytes>
0x4002a1:	xor	eax, ebx
0x4002a3:	not	eax
0x4002a5:	mov	dword ptr [rbp - 0x54], eax
0x4002a8:	lea	rdx, [rbp - 0x54]
0x4002ac:	lea	rax, [rbp - 0x50]
0x4002b0:	mov	rsi, rdx
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x400538
<Block for 0x400284, 4 bytes>
0x400284:	xor	eax, ebx
0x400286:	jmp	0x4002a5
<Block for 0x4002bb, 19 bytes>
0x4002bb:	lea	rdx, [rbp - 0x54]
0x4002bf:	lea	rax, [rbp - 0x50]
0x4002c3:	mov	rsi, rdx
0x4002c6:	mov	rdi, rax
0x4002c9:	call	0x400538
<Block for 0x4002a5, 22 bytes>
0x4002a5:	mov	dword ptr [rbp - 0x54], eax
0x4002a8:	lea	rdx, [rbp - 0x54]
0x4002ac:	lea	rax, [rbp - 0x50]
0x4002b0:	mov	rsi, rdx
0x4002b3:	mov	rdi, rax
0x4002b6:	call	0x400538
<Block for 0x4002ce, 19 bytes>
0x4002ce:	lea	rdx, [rbp - 0x54]
0x4002d2:	lea	rax, [rbp - 0x50]
0x4002d6:	mov	rsi, rdx
0x4002d9:	mov	rdi, rax
0x4002dc:	call	0x400538
<Block for 0x4002e1, 19 bytes>
0x4002e1:	lea	rdx, [rbp - 0x50]
0x4002e5:	lea	rax, [rbp - 0x30]
0x4002e9:	mov	rsi, rdx
0x4002ec:	mov	rdi, rax
0x4002ef:	call	0x400572
<Block for 0x4002f4, 12 bytes>
0x4002f4:	lea	rax, [rbp - 0x30]
0x4002f8:	mov	rdi, rax
0x4002fb:	call	0x500028
<Block for 0x400300, 12 bytes>
0x400300:	lea	rax, [rbp - 0x30]
0x400304:	mov	rdi, rax
0x400307:	call	0x40044c
<Block for 0x40030c, 12 bytes>
0x40030c:	lea	rax, [rbp - 0x50]
0x400310:	mov	rdi, rax
0x400313:	call	0x40044c
<Block for 0x400318, 16 bytes>
0x400318:	nop	
0x400319:	mov	rax, qword ptr [rbp - 0x18]
0x40031d:	xor	rax, qword ptr fs:[0x28]
0x400326:	je	0x400362
<Block for 0x400362, 7 bytes>
0x400362:	add	rsp, 0x58
0x400366:	pop	rbx
0x400367:	pop	rbp
0x400368:	ret	
<Block for 0x400328, 2 bytes>
0x400328:	jmp	0x40035d
<Block for 0x40035d, 5 bytes>
0x40035d:	call	0x500018
