<Block for 0x400196, 30 bytes>
0x400196:	endbr64	
0x40019a:	push	rbp
0x40019b:	mov	rbp, rsp
0x40019e:	sub	rsp, 0x10
0x4001a2:	mov	qword ptr [rbp - 8], 0
0x4001aa:	mov	edi, 0x320
0x4001af:	call	0x500000
<Block for 0x4001b4, 19 bytes>
0x4001b4:	mov	qword ptr [rbp - 8], rax
0x4001b8:	mov	qword ptr [rbp - 0x10], 0
0x4001c0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001c5:	ja	0x400201
<Block for 0x4001c7, 58 bytes>
0x4001c7:	mov	rax, qword ptr [rbp - 0x10]
0x4001cb:	lea	rdx, [rax*8]
0x4001d3:	mov	rax, qword ptr [rbp - 8]
0x4001d7:	add	rax, rdx
0x4001da:	mov	dword ptr [rax], 1
0x4001e0:	mov	rax, qword ptr [rbp - 0x10]
0x4001e4:	lea	rdx, [rax*8]
0x4001ec:	mov	rax, qword ptr [rbp - 8]
0x4001f0:	add	rax, rdx
0x4001f3:	mov	dword ptr [rax + 4], 2
0x4001fa:	add	qword ptr [rbp - 0x10], 1
0x4001ff:	jmp	0x4001c0
<Block for 0x400201, 14 bytes>
0x400201:	nop	
0x400202:	mov	rax, qword ptr [rbp - 8]
0x400206:	mov	eax, dword ptr [rax]
0x400208:	mov	edi, eax
0x40020a:	call	0x500010
<Block for 0x4001c0, 7 bytes>
0x4001c0:	cmp	qword ptr [rbp - 0x10], 0x63
0x4001c5:	ja	0x400201
<Block for 0x40020f, 4 bytes>
0x40020f:	nop	
0x400210:	nop	
0x400211:	leave	
0x400212:	ret	
