<Block for 0x4000e0, 58 bytes>
0x4000e0:	endbr64	
0x4000e4:	push	rbp
0x4000e5:	mov	rbp, rsp
0x4000e8:	sub	rsp, 0x20
0x4000ec:	mov	rax, qword ptr fs:[0x28]
0x4000f5:	mov	qword ptr [rbp - 8], rax
0x4000f9:	xor	eax, eax
0x4000fb:	mov	dword ptr [rbp - 0x1c], 0x64
0x400102:	mov	dword ptr [rbp - 0x10], 0
0x400109:	mov	dword ptr [rbp - 0xc], 0
0x400110:	mov	eax, 0
0x400115:	call	0x500000
<Block for 0x40011a, 4 bytes>
0x40011a:	test	eax, eax
0x40011c:	je	0x400126
<Block for 0x400126, 12 bytes>
0x400126:	mov	rax, qword ptr [rbp - 0x18]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x40011e, 20 bytes>
0x40011e:	lea	rax, [rbp - 0x10]
0x400122:	mov	qword ptr [rbp - 0x18], rax
0x400126:	mov	rax, qword ptr [rbp - 0x18]
0x40012a:	mov	rdi, rax
0x40012d:	call	0x500008
<Block for 0x400132, 16 bytes>
0x400132:	nop	
0x400133:	mov	rax, qword ptr [rbp - 8]
0x400137:	xor	rax, qword ptr fs:[0x28]
0x400140:	je	0x400147
<Block for 0x400147, 2 bytes>
0x400147:	leave	
0x400148:	ret	
<Block for 0x400142, 5 bytes>
0x400142:	call	0x500010
