<Block for 0x400069, 58 bytes>
0x400069:	endbr64	
0x40006d:	push	rbp
0x40006e:	mov	rbp, rsp
0x400071:	sub	rsp, 0x20
0x400075:	mov	rax, qword ptr fs:[0x28]
0x40007e:	mov	qword ptr [rbp - 8], rax
0x400082:	xor	eax, eax
0x400084:	mov	dword ptr [rbp - 0x1c], 0x64
0x40008b:	mov	dword ptr [rbp - 0x10], 0
0x400092:	mov	dword ptr [rbp - 0xc], 0
0x400099:	mov	eax, 0
0x40009e:	call	0x500018
<Block for 0x4000a3, 4 bytes>
0x4000a3:	test	eax, eax
0x4000a5:	je	0x4000b5
<Block for 0x4000b5, 20 bytes>
0x4000b5:	lea	rax, [rbp - 0x10]
0x4000b9:	mov	qword ptr [rbp - 0x18], rax
0x4000bd:	mov	rax, qword ptr [rbp - 0x18]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
<Block for 0x4000a7, 12 bytes>
0x4000a7:	lea	rdi, [rip + 0xba]
0x4000ae:	call	0x500020
<Block for 0x4000c9, 16 bytes>
0x4000c9:	nop	
0x4000ca:	mov	rax, qword ptr [rbp - 8]
0x4000ce:	xor	rax, qword ptr fs:[0x28]
0x4000d7:	je	0x4000de
<Block for 0x4000b3, 2 bytes>
0x4000b3:	jmp	0x4000bd
<Block for 0x4000de, 2 bytes>
0x4000de:	leave	
0x4000df:	ret	
<Block for 0x4000d9, 5 bytes>
0x4000d9:	call	0x500010
<Block for 0x4000bd, 12 bytes>
0x4000bd:	mov	rax, qword ptr [rbp - 0x18]
0x4000c1:	mov	rdi, rax
0x4000c4:	call	0x500008
