<Block for 0x4000ae, 22 bytes>
0x4000ae:	endbr64	
0x4000b2:	push	rbp
0x4000b3:	mov	rbp, rsp
0x4000b6:	sub	rsp, 0x10
0x4000ba:	mov	eax, 0
0x4000bf:	call	0x500000
<Block for 0x4000c4, 4 bytes>
0x4000c4:	test	eax, eax
0x4000c6:	je	0x40010e
<Block for 0x40010e, 18 bytes>
0x40010e:	mov	qword ptr [rbp - 0x10], 0
0x400116:	mov	edi, 4
0x40011b:	call	0x500008
<Block for 0x4000c8, 18 bytes>
0x4000c8:	mov	qword ptr [rbp - 8], 0
0x4000d0:	mov	edi, 4
0x4000d5:	call	0x500008
<Block for 0x400120, 27 bytes>
0x400120:	mov	qword ptr [rbp - 0x10], rax
0x400124:	mov	rax, qword ptr [rbp - 0x10]
0x400128:	mov	dword ptr [rax], 5
0x40012e:	mov	rax, qword ptr [rbp - 0x10]
0x400132:	mov	eax, dword ptr [rax]
0x400134:	mov	edi, eax
0x400136:	call	0x500010
<Block for 0x4000da, 27 bytes>
0x4000da:	mov	qword ptr [rbp - 8], rax
0x4000de:	mov	rax, qword ptr [rbp - 8]
0x4000e2:	mov	dword ptr [rax], 5
0x4000e8:	mov	rax, qword ptr [rbp - 8]
0x4000ec:	mov	eax, dword ptr [rax]
0x4000ee:	mov	edi, eax
0x4000f0:	call	0x500010
<Block for 0x40013b, 23 bytes>
0x40013b:	mov	rax, qword ptr [rbp - 0x10]
0x40013f:	mov	dword ptr [rax], 0xa
0x400145:	mov	rax, qword ptr [rbp - 0x10]
0x400149:	mov	eax, dword ptr [rax]
0x40014b:	mov	edi, eax
0x40014d:	call	0x500010
<Block for 0x4000f5, 23 bytes>
0x4000f5:	mov	rax, qword ptr [rbp - 8]
0x4000f9:	mov	dword ptr [rax], 0xa
0x4000ff:	mov	rax, qword ptr [rbp - 8]
0x400103:	mov	eax, dword ptr [rax]
0x400105:	mov	edi, eax
0x400107:	call	0x500010
<Block for 0x400152, 3 bytes>
0x400152:	nop	
0x400153:	leave	
0x400154:	ret	
<Block for 0x40010c, 2 bytes>
0x40010c:	jmp	0x400152
