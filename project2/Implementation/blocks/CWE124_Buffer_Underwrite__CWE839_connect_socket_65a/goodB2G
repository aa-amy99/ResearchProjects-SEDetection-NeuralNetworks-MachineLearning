<Block for 0x400154, 72 bytes>
0x400154:	endbr64	
0x400158:	push	rbp
0x400159:	mov	rbp, rsp
0x40015c:	sub	rsp, 0x50
0x400160:	mov	rax, qword ptr fs:[0x28]
0x400169:	mov	qword ptr [rbp - 8], rax
0x40016d:	xor	eax, eax
0x40016f:	mov	rax, qword ptr [rip + 0xffefa]
0x400176:	mov	qword ptr [rbp - 0x38], rax
0x40017a:	mov	dword ptr [rbp - 0x44], 0xffffffff
0x400181:	mov	dword ptr [rbp - 0x40], 0xffffffff
0x400188:	mov	edx, 6
0x40018d:	mov	esi, 1
0x400192:	mov	edi, 2
0x400197:	call	0x500010
<Block for 0x40019c, 13 bytes>
0x40019c:	mov	dword ptr [rbp - 0x40], eax
0x40019f:	cmp	dword ptr [rbp - 0x40], -1
0x4001a3:	je	0x40023f
<Block for 0x40023f, 3 bytes>
0x40023f:	nop	
0x400240:	jmp	0x400243
<Block for 0x4001a9, 22 bytes>
0x4001a9:	lea	rax, [rbp - 0x30]
0x4001ad:	mov	edx, 0x10
0x4001b2:	mov	esi, 0
0x4001b7:	mov	rdi, rax
0x4001ba:	call	0x500018
<Block for 0x400243, 6 bytes>
0x400243:	cmp	dword ptr [rbp - 0x40], -1
0x400247:	je	0x400253
<Block for 0x4001bf, 18 bytes>
0x4001bf:	mov	word ptr [rbp - 0x30], 2
0x4001c5:	lea	rdi, [rip + 0xc8]
0x4001cc:	call	0x500020
<Block for 0x400253, 11 bytes>
0x400253:	mov	eax, dword ptr [rbp - 0x44]
0x400256:	mov	rdx, qword ptr [rbp - 0x38]
0x40025a:	mov	edi, eax
0x40025c:	call	rdx
<Block for 0x400249, 10 bytes>
0x400249:	mov	eax, dword ptr [rbp - 0x40]
0x40024c:	mov	edi, eax
0x40024e:	call	0x500048
<Block for 0x4001d1, 13 bytes>
0x4001d1:	mov	dword ptr [rbp - 0x2c], eax
0x4001d4:	mov	edi, 0x6987
0x4001d9:	call	0x500028
<Block for 0x40025e, 16 bytes>
0x40025e:	nop	
0x40025f:	mov	rax, qword ptr [rbp - 8]
0x400263:	xor	rax, qword ptr fs:[0x28]
0x40026c:	je	0x400273
<Block for 0x4001de, 26 bytes>
0x4001de:	mov	word ptr [rbp - 0x2e], ax
0x4001e2:	lea	rcx, [rbp - 0x30]
0x4001e6:	mov	eax, dword ptr [rbp - 0x40]
0x4001e9:	mov	edx, 0x10
0x4001ee:	mov	rsi, rcx
0x4001f1:	mov	edi, eax
0x4001f3:	call	0x500030
<Block for 0x400273, 2 bytes>
0x400273:	leave	
0x400274:	ret	
<Block for 0x40026e, 5 bytes>
0x40026e:	call	0x500050
<Block for 0x4001f8, 5 bytes>
0x4001f8:	cmp	eax, -1
0x4001fb:	je	0x400242
<Block for 0x4001fd, 24 bytes>
0x4001fd:	lea	rsi, [rbp - 0x16]
0x400201:	mov	eax, dword ptr [rbp - 0x40]
0x400204:	mov	ecx, 0
0x400209:	mov	edx, 0xd
0x40020e:	mov	edi, eax
0x400210:	call	0x500038
<Block for 0x400242, 1 bytes>
0x400242:	nop	
<Block for 0x400215, 9 bytes>
0x400215:	mov	dword ptr [rbp - 0x3c], eax
0x400218:	cmp	dword ptr [rbp - 0x3c], -1
0x40021c:	je	0x400243
<Block for 0x40021e, 6 bytes>
0x40021e:	cmp	dword ptr [rbp - 0x3c], 0
0x400222:	je	0x400243
<Block for 0x400224, 22 bytes>
0x400224:	mov	eax, dword ptr [rbp - 0x3c]
0x400227:	cdqe	
0x400229:	mov	byte ptr [rbp + rax - 0x16], 0
0x40022e:	lea	rax, [rbp - 0x16]
0x400232:	mov	rdi, rax
0x400235:	call	0x500040
<Block for 0x40023a, 5 bytes>
0x40023a:	mov	dword ptr [rbp - 0x44], eax
0x40023d:	jmp	0x400243
