<Block for 0x400082, 61 bytes>
0x400082:	endbr64	
0x400086:	push	rbp
0x400087:	mov	rbp, rsp
0x40008a:	sub	rsp, 0x20
0x40008e:	mov	rax, qword ptr fs:[0x28]
0x400097:	mov	qword ptr [rbp - 8], rax
0x40009b:	xor	eax, eax
0x40009d:	mov	dword ptr [rbp - 0x1c], 0xffffffff
0x4000a4:	mov	edx, 0x180
0x4000a9:	mov	esi, 0x42
0x4000ae:	lea	rdi, [rip + 0x5f]
0x4000b5:	mov	eax, 0
0x4000ba:	call	0x500000
<Block for 0x4000bf, 46 bytes>
0x4000bf:	mov	dword ptr [rbp - 0x1c], eax
0x4000c2:	lea	rax, [rip + 0xfff5f]
0x4000c9:	mov	qword ptr [rbp - 0x18], rax
0x4000cd:	lea	rax, [rbp - 0x18]
0x4000d1:	mov	qword ptr [rbp - 0x10], rax
0x4000d5:	mov	rax, qword ptr [rbp - 0x10]
0x4000d9:	mov	rax, qword ptr [rax]
0x4000dc:	mov	rcx, qword ptr [rax]
0x4000df:	mov	edx, dword ptr [rbp - 0x1c]
0x4000e2:	mov	rax, qword ptr [rbp - 0x10]
0x4000e6:	mov	esi, edx
0x4000e8:	mov	rdi, rax
0x4000eb:	call	rcx
<Block for 0x4000ed, 16 bytes>
0x4000ed:	nop	
0x4000ee:	mov	rax, qword ptr [rbp - 8]
0x4000f2:	xor	rax, qword ptr fs:[0x28]
0x4000fb:	je	0x400102
<Block for 0x400102, 2 bytes>
0x400102:	leave	
0x400103:	ret	
<Block for 0x4000fd, 5 bytes>
0x4000fd:	call	0x500010
