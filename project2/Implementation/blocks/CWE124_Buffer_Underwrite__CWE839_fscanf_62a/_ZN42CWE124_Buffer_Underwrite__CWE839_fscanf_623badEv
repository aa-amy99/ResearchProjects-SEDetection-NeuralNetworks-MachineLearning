<Block for 0x400000, 46 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x40
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	mov	dword ptr [rbp - 0x38], 0xffffffff
0x400022:	lea	rax, [rbp - 0x38]
0x400026:	mov	rdi, rax
0x400029:	call	0x500000
<Block for 0x40002e, 48 bytes>
0x40002e:	mov	qword ptr [rbp - 0x30], 0
0x400036:	mov	qword ptr [rbp - 0x28], 0
0x40003e:	mov	qword ptr [rbp - 0x20], 0
0x400046:	mov	qword ptr [rbp - 0x18], 0
0x40004e:	mov	qword ptr [rbp - 0x10], 0
0x400056:	mov	eax, dword ptr [rbp - 0x38]
0x400059:	cmp	eax, 9
0x40005c:	jg	0x40008e
<Block for 0x40005e, 26 bytes>
0x40005e:	mov	eax, dword ptr [rbp - 0x38]
0x400061:	cdqe	
0x400063:	mov	dword ptr [rbp + rax*4 - 0x30], 1
0x40006b:	mov	dword ptr [rbp - 0x34], 0
0x400072:	cmp	dword ptr [rbp - 0x34], 9
0x400076:	jg	0x40009a
<Block for 0x40008e, 12 bytes>
0x40008e:	lea	rdi, [rip + 0x1a3]
0x400095:	call	0x500010
<Block for 0x400078, 16 bytes>
0x400078:	mov	eax, dword ptr [rbp - 0x34]
0x40007b:	cdqe	
0x40007d:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400081:	mov	edi, eax
0x400083:	call	0x500008
<Block for 0x40009a, 16 bytes>
0x40009a:	nop	
0x40009b:	mov	rax, qword ptr [rbp - 8]
0x40009f:	xor	rax, qword ptr fs:[0x28]
0x4000a8:	je	0x4000af
<Block for 0x400088, 6 bytes>
0x400088:	add	dword ptr [rbp - 0x34], 1
0x40008c:	jmp	0x400072
<Block for 0x4000af, 2 bytes>
0x4000af:	leave	
0x4000b0:	ret	
<Block for 0x4000aa, 5 bytes>
0x4000aa:	call	0x500018
<Block for 0x400072, 6 bytes>
0x400072:	cmp	dword ptr [rbp - 0x34], 9
0x400076:	jg	0x40009a
