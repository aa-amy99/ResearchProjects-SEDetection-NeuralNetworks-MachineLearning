<Block for 0x4000dc, 44 bytes>
0x4000dc:	endbr64	
0x4000e0:	push	rbp
0x4000e1:	mov	rbp, rsp
0x4000e4:	sub	rsp, 0x40
0x4000e8:	mov	rax, qword ptr fs:[0x28]
0x4000f1:	mov	qword ptr [rbp - 8], rax
0x4000f5:	xor	eax, eax
0x4000f7:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x4000fe:	mov	eax, dword ptr [rbp - 0x34]
0x400101:	mov	edi, eax
0x400103:	call	0x4000c5
<Block for 0x400108, 49 bytes>
0x400108:	mov	dword ptr [rbp - 0x34], eax
0x40010b:	mov	qword ptr [rbp - 0x30], 0
0x400113:	mov	qword ptr [rbp - 0x28], 0
0x40011b:	mov	qword ptr [rbp - 0x20], 0
0x400123:	mov	qword ptr [rbp - 0x18], 0
0x40012b:	mov	qword ptr [rbp - 0x10], 0
0x400133:	cmp	dword ptr [rbp - 0x34], 0
0x400137:	js	0x40014b
<Block for 0x40014b, 12 bytes>
0x40014b:	lea	rdi, [rip + 0x10e]
0x400152:	call	0x500018
<Block for 0x400139, 16 bytes>
0x400139:	mov	eax, dword ptr [rbp - 0x34]
0x40013c:	cdqe	
0x40013e:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400142:	mov	edi, eax
0x400144:	call	0x500010
<Block for 0x400157, 16 bytes>
0x400157:	nop	
0x400158:	mov	rax, qword ptr [rbp - 8]
0x40015c:	xor	rax, qword ptr fs:[0x28]
0x400165:	je	0x40016c
<Block for 0x400149, 2 bytes>
0x400149:	jmp	0x400157
<Block for 0x40016c, 2 bytes>
0x40016c:	leave	
0x40016d:	ret	
<Block for 0x400167, 5 bytes>
0x400167:	call	0x500020
