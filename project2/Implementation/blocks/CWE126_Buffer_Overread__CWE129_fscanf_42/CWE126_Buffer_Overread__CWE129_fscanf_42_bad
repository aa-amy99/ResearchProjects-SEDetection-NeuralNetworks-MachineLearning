<Block for 0x400033, 44 bytes>
0x400033:	endbr64	
0x400037:	push	rbp
0x400038:	mov	rbp, rsp
0x40003b:	sub	rsp, 0x40
0x40003f:	mov	rax, qword ptr fs:[0x28]
0x400048:	mov	qword ptr [rbp - 8], rax
0x40004c:	xor	eax, eax
0x40004e:	mov	dword ptr [rbp - 0x34], 0xffffffff
0x400055:	mov	eax, dword ptr [rbp - 0x34]
0x400058:	mov	edi, eax
0x40005a:	call	0x400000
<Block for 0x40005f, 49 bytes>
0x40005f:	mov	dword ptr [rbp - 0x34], eax
0x400062:	mov	qword ptr [rbp - 0x30], 0
0x40006a:	mov	qword ptr [rbp - 0x28], 0
0x400072:	mov	qword ptr [rbp - 0x20], 0
0x40007a:	mov	qword ptr [rbp - 0x18], 0
0x400082:	mov	qword ptr [rbp - 0x10], 0
0x40008a:	cmp	dword ptr [rbp - 0x34], 0
0x40008e:	js	0x4000a2
<Block for 0x4000a2, 12 bytes>
0x4000a2:	lea	rdi, [rip + 0x1b7]
0x4000a9:	call	0x500018
<Block for 0x400090, 16 bytes>
0x400090:	mov	eax, dword ptr [rbp - 0x34]
0x400093:	cdqe	
0x400095:	mov	eax, dword ptr [rbp + rax*4 - 0x30]
0x400099:	mov	edi, eax
0x40009b:	call	0x500010
<Block for 0x4000ae, 16 bytes>
0x4000ae:	nop	
0x4000af:	mov	rax, qword ptr [rbp - 8]
0x4000b3:	xor	rax, qword ptr fs:[0x28]
0x4000bc:	je	0x4000c3
<Block for 0x4000a0, 2 bytes>
0x4000a0:	jmp	0x4000ae
<Block for 0x4000c3, 2 bytes>
0x4000c3:	leave	
0x4000c4:	ret	
<Block for 0x4000be, 5 bytes>
0x4000be:	call	0x500020
