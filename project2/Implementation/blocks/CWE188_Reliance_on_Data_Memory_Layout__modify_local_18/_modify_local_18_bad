<Block for 0x400000, 72 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x20
0x40000c:	mov	rax, qword ptr fs:[0x28]
0x400015:	mov	qword ptr [rbp - 8], rax
0x400019:	xor	eax, eax
0x40001b:	nop	
0x40001c:	endbr64	
0x400020:	mov	byte ptr [rbp - 0x10], 1
0x400024:	lea	rax, [rbp - 0x10]
0x400028:	mov	qword ptr [rbp - 0x18], rax
0x40002c:	mov	rax, qword ptr [rbp - 0x18]
0x400030:	add	rax, 4
0x400034:	mov	dword ptr [rax], 5
0x40003a:	movzx	eax, byte ptr [rbp - 0x10]
0x40003e:	movsx	eax, al
0x400041:	mov	edi, eax
0x400043:	call	0x500000
<Block for 0x400048, 10 bytes>
0x400048:	mov	eax, dword ptr [rbp - 0xc]
0x40004b:	mov	edi, eax
0x40004d:	call	0x500000
<Block for 0x400052, 16 bytes>
0x400052:	nop	
0x400053:	mov	rax, qword ptr [rbp - 8]
0x400057:	xor	rax, qword ptr fs:[0x28]
0x400060:	je	0x400067
<Block for 0x400067, 2 bytes>
0x400067:	leave	
0x400068:	ret	
<Block for 0x400062, 5 bytes>
0x400062:	call	0x500008
