<Block for 0x4000e2, 51 bytes>
0x4000e2:	endbr64	
0x4000e6:	push	rbp
0x4000e7:	mov	rbp, rsp
0x4000ea:	sub	rsp, 0x20
0x4000ee:	mov	rax, qword ptr fs:[0x28]
0x4000f7:	mov	qword ptr [rbp - 8], rax
0x4000fb:	xor	eax, eax
0x4000fd:	mov	dword ptr [rbp - 0x18], 1
0x400104:	mov	dword ptr [rbp - 0x14], 2
0x40010b:	mov	edi, 8
0x400110:	call	0x500000
<Block for 0x400115, 36 bytes>
0x400115:	mov	qword ptr [rbp - 0x20], rax
0x400119:	mov	rax, qword ptr [rbp - 0x20]
0x40011d:	mov	rdx, qword ptr [rbp - 0x18]
0x400121:	mov	qword ptr [rax], rdx
0x400124:	mov	rax, qword ptr [rbp - 0x20]
0x400128:	mov	rax, qword ptr [rax]
0x40012b:	mov	qword ptr [rbp - 0x10], rax
0x40012f:	mov	eax, dword ptr [rbp - 0x10]
0x400132:	mov	edi, eax
0x400134:	call	0x500010
<Block for 0x400139, 10 bytes>
0x400139:	mov	eax, dword ptr [rbp - 0xc]
0x40013c:	mov	edi, eax
0x40013e:	call	0x500010
<Block for 0x400143, 9 bytes>
0x400143:	mov	rax, qword ptr [rbp - 0x20]
0x400147:	test	rax, rax
0x40014a:	je	0x400159
<Block for 0x400159, 17 bytes>
0x400159:	nop	
0x40015a:	nop	
0x40015b:	mov	rax, qword ptr [rbp - 8]
0x40015f:	xor	rax, qword ptr fs:[0x28]
0x400168:	je	0x40016f
<Block for 0x40014c, 13 bytes>
0x40014c:	mov	esi, 8
0x400151:	mov	rdi, rax
0x400154:	call	0x500008
<Block for 0x40016f, 2 bytes>
0x40016f:	leave	
0x400170:	ret	
<Block for 0x40016a, 5 bytes>
0x40016a:	call	0x500018
