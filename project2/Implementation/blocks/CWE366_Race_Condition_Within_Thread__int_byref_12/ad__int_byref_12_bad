<Block for 0x40009b, 37 bytes>
0x40009b:	endbr64	
0x40009f:	push	rbp
0x4000a0:	mov	rbp, rsp
0x4000a3:	sub	rsp, 0x20
0x4000a7:	mov	rax, qword ptr fs:[0x28]
0x4000b0:	mov	qword ptr [rbp - 8], rax
0x4000b4:	xor	eax, eax
0x4000b6:	mov	eax, 0
0x4000bb:	call	0x500010
<Block for 0x4000c0, 8 bytes>
0x4000c0:	test	eax, eax
0x4000c2:	je	0x40017e
<Block for 0x40017e, 35 bytes>
0x40017e:	mov	qword ptr [rbp - 0x18], 0
0x400186:	mov	qword ptr [rbp - 0x10], 0
0x40018e:	mov	dword ptr [rbp - 0x1c], 0
0x400195:	lea	rdi, [rip + 0x2dc]
0x40019c:	call	0x500038
<Block for 0x4000c8, 46 bytes>
0x4000c8:	mov	qword ptr [rbp - 0x18], 0
0x4000d0:	mov	qword ptr [rbp - 0x10], 0
0x4000d8:	mov	dword ptr [rbp - 0x1c], 0
0x4000df:	lea	rdx, [rbp - 0x18]
0x4000e3:	lea	rax, [rbp - 0x1c]
0x4000e7:	mov	rsi, rax
0x4000ea:	lea	rdi, [rip - 0xf1]
0x4000f1:	call	0x500018
<Block for 0x4001a1, 8 bytes>
0x4001a1:	test	eax, eax
0x4001a3:	je	0x400254
<Block for 0x4000f6, 4 bytes>
0x4000f6:	test	eax, eax
0x4000f8:	jne	0x400102
<Block for 0x4001a9, 23 bytes>
0x4001a9:	lea	rdx, [rbp - 0x18]
0x4001ad:	lea	rax, [rbp - 0x1c]
0x4001b1:	mov	rsi, rax
0x4001b4:	lea	rdi, [rip - 0x17e]
0x4001bb:	call	0x500018
<Block for 0x400254, 1 bytes>
0x400254:	nop	
<Block for 0x4000fa, 31 bytes>
0x4000fa:	mov	qword ptr [rbp - 0x18], 0
0x400102:	lea	rdx, [rbp - 0x10]
0x400106:	lea	rax, [rbp - 0x1c]
0x40010a:	mov	rsi, rax
0x40010d:	lea	rdi, [rip - 0x114]
0x400114:	call	0x500018
<Block for 0x400102, 23 bytes>
0x400102:	lea	rdx, [rbp - 0x10]
0x400106:	lea	rax, [rbp - 0x1c]
0x40010a:	mov	rsi, rax
0x40010d:	lea	rdi, [rip - 0x114]
0x400114:	call	0x500018
<Block for 0x4001c0, 4 bytes>
0x4001c0:	test	eax, eax
0x4001c2:	jne	0x4001cc
<Block for 0x400255, 15 bytes>
0x400255:	mov	rax, qword ptr [rbp - 8]
0x400259:	xor	rax, qword ptr fs:[0x28]
0x400262:	je	0x400269
<Block for 0x400119, 4 bytes>
0x400119:	test	eax, eax
0x40011b:	jne	0x400125
<Block for 0x4001c4, 31 bytes>
0x4001c4:	mov	qword ptr [rbp - 0x18], 0
0x4001cc:	lea	rdx, [rbp - 0x10]
0x4001d0:	lea	rax, [rbp - 0x1c]
0x4001d4:	mov	rsi, rax
0x4001d7:	lea	rdi, [rip - 0x1a1]
0x4001de:	call	0x500018
<Block for 0x4001cc, 23 bytes>
0x4001cc:	lea	rdx, [rbp - 0x10]
0x4001d0:	lea	rax, [rbp - 0x1c]
0x4001d4:	mov	rsi, rax
0x4001d7:	lea	rdi, [rip - 0x1a1]
0x4001de:	call	0x500018
<Block for 0x400269, 2 bytes>
0x400269:	leave	
0x40026a:	ret	
<Block for 0x400264, 5 bytes>
0x400264:	call	0x500048
<Block for 0x40011d, 17 bytes>
0x40011d:	mov	qword ptr [rbp - 0x10], 0
0x400125:	mov	rax, qword ptr [rbp - 0x18]
0x400129:	test	rax, rax
0x40012c:	je	0x40014a
<Block for 0x400125, 9 bytes>
0x400125:	mov	rax, qword ptr [rbp - 0x18]
0x400129:	test	rax, rax
0x40012c:	je	0x40014a
<Block for 0x4001e3, 4 bytes>
0x4001e3:	test	eax, eax
0x4001e5:	jne	0x4001ef
<Block for 0x40014a, 9 bytes>
0x40014a:	mov	rax, qword ptr [rbp - 0x10]
0x40014e:	test	rax, rax
0x400151:	je	0x40016f
<Block for 0x40012e, 12 bytes>
0x40012e:	mov	rax, qword ptr [rbp - 0x18]
0x400132:	mov	rdi, rax
0x400135:	call	0x500020
<Block for 0x4001e7, 17 bytes>
0x4001e7:	mov	qword ptr [rbp - 0x10], 0
0x4001ef:	mov	rax, qword ptr [rbp - 0x18]
0x4001f3:	test	rax, rax
0x4001f6:	je	0x400214
<Block for 0x4001ef, 9 bytes>
0x4001ef:	mov	rax, qword ptr [rbp - 0x18]
0x4001f3:	test	rax, rax
0x4001f6:	je	0x400214
<Block for 0x40016f, 10 bytes>
0x40016f:	mov	eax, dword ptr [rbp - 0x1c]
0x400172:	mov	edi, eax
0x400174:	call	0x500030
<Block for 0x400153, 12 bytes>
0x400153:	mov	rax, qword ptr [rbp - 0x10]
0x400157:	mov	rdi, rax
0x40015a:	call	0x500020
<Block for 0x40013a, 4 bytes>
0x40013a:	test	eax, eax
0x40013c:	je	0x40014a
<Block for 0x400214, 9 bytes>
0x400214:	mov	rax, qword ptr [rbp - 0x10]
0x400218:	test	rax, rax
0x40021b:	je	0x400239
<Block for 0x4001f8, 12 bytes>
0x4001f8:	mov	rax, qword ptr [rbp - 0x18]
0x4001fc:	mov	rdi, rax
0x4001ff:	call	0x500020
<Block for 0x400179, 5 bytes>
0x400179:	jmp	0x400255
<Block for 0x40015f, 4 bytes>
0x40015f:	test	eax, eax
0x400161:	je	0x40016f
<Block for 0x40013e, 12 bytes>
0x40013e:	mov	rax, qword ptr [rbp - 0x18]
0x400142:	mov	rdi, rax
0x400145:	call	0x500028
<Block for 0x400239, 15 bytes>
0x400239:	mov	rax, qword ptr [rip + 0x238]
0x400240:	mov	rdi, rax
0x400243:	call	0x500040
<Block for 0x40021d, 12 bytes>
0x40021d:	mov	rax, qword ptr [rbp - 0x10]
0x400221:	mov	rdi, rax
0x400224:	call	0x500020
<Block for 0x400204, 4 bytes>
0x400204:	test	eax, eax
0x400206:	je	0x400214
<Block for 0x400163, 12 bytes>
0x400163:	mov	rax, qword ptr [rbp - 0x10]
0x400167:	mov	rdi, rax
0x40016a:	call	0x500028
<Block for 0x400248, 10 bytes>
0x400248:	mov	eax, dword ptr [rbp - 0x1c]
0x40024b:	mov	edi, eax
0x40024d:	call	0x500030
<Block for 0x400229, 4 bytes>
0x400229:	test	eax, eax
0x40022b:	je	0x400239
<Block for 0x400208, 12 bytes>
0x400208:	mov	rax, qword ptr [rbp - 0x18]
0x40020c:	mov	rdi, rax
0x40020f:	call	0x500028
<Block for 0x400252, 2 bytes>
0x400252:	jmp	0x400255
<Block for 0x40022d, 12 bytes>
0x40022d:	mov	rax, qword ptr [rbp - 0x10]
0x400231:	mov	rdi, rax
0x400234:	call	0x500028
