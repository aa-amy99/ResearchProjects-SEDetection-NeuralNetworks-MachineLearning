<Block for 0x400000, 45 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0xb0
0x40000f:	mov	rax, qword ptr fs:[0x28]
0x400018:	mov	qword ptr [rbp - 8], rax
0x40001c:	xor	eax, eax
0x40001e:	mov	eax, dword ptr [rip + 0xfffdc]
0x400024:	cmp	eax, 5
0x400027:	jne	0x4002b8
<Block for 0x40002d, 135 bytes>
0x40002d:	mov	qword ptr [rbp - 0x70], 0
0x400035:	mov	qword ptr [rbp - 0x68], 0
0x40003d:	mov	qword ptr [rbp - 0x60], 0
0x400045:	mov	qword ptr [rbp - 0x58], 0
0x40004d:	mov	qword ptr [rbp - 0x50], 0
0x400055:	mov	qword ptr [rbp - 0x48], 0
0x40005d:	mov	qword ptr [rbp - 0x40], 0
0x400065:	mov	qword ptr [rbp - 0x38], 0
0x40006d:	mov	qword ptr [rbp - 0x30], 0
0x400075:	mov	qword ptr [rbp - 0x28], 0
0x40007d:	mov	qword ptr [rbp - 0x20], 0
0x400085:	mov	qword ptr [rbp - 0x18], 0
0x40008d:	mov	dword ptr [rbp - 0x10], 0
0x400094:	mov	dword ptr [rbp - 0x9c], 0xffffffff
0x40009e:	mov	dword ptr [rbp - 0xa0], 0xffffffff
0x4000a8:	lea	rax, [rbp - 0x70]
0x4000ac:	mov	rdi, rax
0x4000af:	call	0x500008
<Block for 0x4002b8, 16 bytes>
0x4002b8:	nop	
0x4002b9:	mov	rax, qword ptr [rbp - 8]
0x4002bd:	xor	rax, qword ptr fs:[0x28]
0x4002c6:	je	0x4002cd
<Block for 0x4000b4, 47 bytes>
0x4000b4:	mov	qword ptr [rbp - 0x90], rax
0x4000bb:	mov	dword ptr [rbp - 0xa4], 1
0x4000c5:	mov	dword ptr [rbp - 0x98], 4
0x4000cf:	mov	edx, 6
0x4000d4:	mov	esi, 1
0x4000d9:	mov	edi, 2
0x4000de:	call	0x500010
<Block for 0x4002cd, 2 bytes>
0x4002cd:	leave	
0x4002ce:	ret	
<Block for 0x4002c8, 5 bytes>
0x4002c8:	call	0x500068
<Block for 0x4000e3, 19 bytes>
0x4000e3:	mov	dword ptr [rbp - 0x9c], eax
0x4000e9:	cmp	dword ptr [rbp - 0x9c], -1
0x4000f0:	je	0x400273
<Block for 0x400273, 3 bytes>
0x400273:	nop	
0x400274:	jmp	0x400280
<Block for 0x4000f6, 42 bytes>
0x4000f6:	mov	ecx, dword ptr [rbp - 0x98]
0x4000fc:	lea	rdx, [rbp - 0xa4]
0x400103:	mov	eax, dword ptr [rbp - 0x9c]
0x400109:	mov	r8d, ecx
0x40010c:	mov	rcx, rdx
0x40010f:	mov	edx, 2
0x400114:	mov	esi, 1
0x400119:	mov	edi, eax
0x40011b:	call	0x500018
<Block for 0x400280, 9 bytes>
0x400280:	cmp	dword ptr [rbp - 0x9c], -1
0x400287:	je	0x400296
<Block for 0x400120, 8 bytes>
0x400120:	test	eax, eax
0x400122:	jne	0x400276
<Block for 0x400296, 9 bytes>
0x400296:	cmp	dword ptr [rbp - 0xa0], -1
0x40029d:	je	0x4002ac
<Block for 0x400289, 13 bytes>
0x400289:	mov	eax, dword ptr [rbp - 0x9c]
0x40028f:	mov	edi, eax
0x400291:	call	0x500058
<Block for 0x400128, 22 bytes>
0x400128:	lea	rax, [rbp - 0x80]
0x40012c:	mov	edx, 0x10
0x400131:	mov	esi, 0
0x400136:	mov	rdi, rax
0x400139:	call	0x500020
<Block for 0x400276, 3 bytes>
0x400276:	nop	
0x400277:	jmp	0x400280
<Block for 0x4002ac, 12 bytes>
0x4002ac:	lea	rax, [rbp - 0x70]
0x4002b0:	mov	rdi, rax
0x4002b3:	call	0x500060
<Block for 0x40029f, 13 bytes>
0x40029f:	mov	eax, dword ptr [rbp - 0xa0]
0x4002a5:	mov	edi, eax
0x4002a7:	call	0x500058
<Block for 0x40013e, 23 bytes>
0x40013e:	mov	word ptr [rbp - 0x80], 2
0x400144:	mov	dword ptr [rbp - 0x7c], 0
0x40014b:	mov	edi, 0x6987
0x400150:	call	0x500028
<Block for 0x400155, 29 bytes>
0x400155:	mov	word ptr [rbp - 0x7e], ax
0x400159:	lea	rcx, [rbp - 0x80]
0x40015d:	mov	eax, dword ptr [rbp - 0x9c]
0x400163:	mov	edx, 0x10
0x400168:	mov	rsi, rcx
0x40016b:	mov	edi, eax
0x40016d:	call	0x500030
<Block for 0x400172, 9 bytes>
0x400172:	cmp	eax, -1
0x400175:	je	0x400279
<Block for 0x400279, 3 bytes>
0x400279:	nop	
0x40027a:	jmp	0x400280
<Block for 0x40017b, 18 bytes>
0x40017b:	mov	eax, dword ptr [rbp - 0x9c]
0x400181:	mov	esi, 5
0x400186:	mov	edi, eax
0x400188:	call	0x500038
<Block for 0x40018d, 9 bytes>
0x40018d:	cmp	eax, -1
0x400190:	je	0x40027c
<Block for 0x40027c, 3 bytes>
0x40027c:	nop	
0x40027d:	jmp	0x400280
<Block for 0x400196, 23 bytes>
0x400196:	mov	eax, dword ptr [rbp - 0x9c]
0x40019c:	mov	edx, 0
0x4001a1:	mov	esi, 0
0x4001a6:	mov	edi, eax
0x4001a8:	call	0x500040
<Block for 0x4001ad, 19 bytes>
0x4001ad:	mov	dword ptr [rbp - 0xa0], eax
0x4001b3:	cmp	dword ptr [rbp - 0xa0], -1
0x4001ba:	je	0x40027f
<Block for 0x4001c0, 52 bytes>
0x4001c0:	mov	rax, qword ptr [rbp - 0x90]
0x4001c7:	mov	edx, 0x63
0x4001cc:	sub	edx, eax
0x4001ce:	mov	eax, edx
0x4001d0:	movsxd	rdx, eax
0x4001d3:	lea	rcx, [rbp - 0x70]
0x4001d7:	mov	rax, qword ptr [rbp - 0x90]
0x4001de:	lea	rsi, [rcx + rax]
0x4001e2:	mov	eax, dword ptr [rbp - 0xa0]
0x4001e8:	mov	ecx, 0
0x4001ed:	mov	edi, eax
0x4001ef:	call	0x500048
<Block for 0x40027f, 1 bytes>
0x40027f:	nop	
<Block for 0x4001f4, 15 bytes>
0x4001f4:	mov	dword ptr [rbp - 0x94], eax
0x4001fa:	cmp	dword ptr [rbp - 0x94], -1
0x400201:	je	0x400280
<Block for 0x400203, 9 bytes>
0x400203:	cmp	dword ptr [rbp - 0x94], 0
0x40020a:	je	0x400280
<Block for 0x40020c, 30 bytes>
0x40020c:	mov	eax, dword ptr [rbp - 0x94]
0x400212:	cdqe	
0x400214:	mov	byte ptr [rbp + rax - 0x70], 0
0x400219:	lea	rax, [rbp - 0x70]
0x40021d:	mov	esi, 0xd
0x400222:	mov	rdi, rax
0x400225:	call	0x500050
<Block for 0x40022a, 17 bytes>
0x40022a:	mov	qword ptr [rbp - 0x88], rax
0x400231:	cmp	qword ptr [rbp - 0x88], 0
0x400239:	je	0x400245
<Block for 0x400245, 17 bytes>
0x400245:	lea	rax, [rbp - 0x70]
0x400249:	mov	esi, 0xa
0x40024e:	mov	rdi, rax
0x400251:	call	0x500050
<Block for 0x40023b, 27 bytes>
0x40023b:	mov	rax, qword ptr [rbp - 0x88]
0x400242:	mov	byte ptr [rax], 0
0x400245:	lea	rax, [rbp - 0x70]
0x400249:	mov	esi, 0xa
0x40024e:	mov	rdi, rax
0x400251:	call	0x500050
<Block for 0x400256, 17 bytes>
0x400256:	mov	qword ptr [rbp - 0x88], rax
0x40025d:	cmp	qword ptr [rbp - 0x88], 0
0x400265:	je	0x400280
<Block for 0x400267, 12 bytes>
0x400267:	mov	rax, qword ptr [rbp - 0x88]
0x40026e:	mov	byte ptr [rax], 0
0x400271:	jmp	0x400280
