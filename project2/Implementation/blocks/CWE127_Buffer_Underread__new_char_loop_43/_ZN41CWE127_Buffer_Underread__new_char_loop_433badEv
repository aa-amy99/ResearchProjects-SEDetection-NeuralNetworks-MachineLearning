<Block for 0x400051, 47 bytes>
0x400051:	endbr64	
0x400055:	push	rbp
0x400056:	mov	rbp, rsp
0x400059:	add	rsp, -0x80
0x40005d:	mov	rax, qword ptr fs:[0x28]
0x400066:	mov	qword ptr [rbp - 8], rax
0x40006a:	xor	eax, eax
0x40006c:	mov	qword ptr [rbp - 0x80], 0
0x400074:	lea	rax, [rbp - 0x80]
0x400078:	mov	rdi, rax
0x40007b:	call	0x400000
<Block for 0x400080, 22 bytes>
0x400080:	lea	rax, [rbp - 0x70]
0x400084:	mov	edx, 0x63
0x400089:	mov	esi, 0x43
0x40008e:	mov	rdi, rax
0x400091:	call	0x500008
<Block for 0x400096, 19 bytes>
0x400096:	mov	byte ptr [rbp - 0xd], 0
0x40009a:	mov	qword ptr [rbp - 0x78], 0
0x4000a2:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000a7:	ja	0x4000cb
<Block for 0x4000a9, 34 bytes>
0x4000a9:	mov	rdx, qword ptr [rbp - 0x80]
0x4000ad:	mov	rax, qword ptr [rbp - 0x78]
0x4000b1:	add	rax, rdx
0x4000b4:	movzx	eax, byte ptr [rax]
0x4000b7:	lea	rcx, [rbp - 0x70]
0x4000bb:	mov	rdx, qword ptr [rbp - 0x78]
0x4000bf:	add	rdx, rcx
0x4000c2:	mov	byte ptr [rdx], al
0x4000c4:	add	qword ptr [rbp - 0x78], 1
0x4000c9:	jmp	0x4000a2
<Block for 0x4000cb, 16 bytes>
0x4000cb:	mov	byte ptr [rbp - 0xd], 0
0x4000cf:	lea	rax, [rbp - 0x70]
0x4000d3:	mov	rdi, rax
0x4000d6:	call	0x500010
<Block for 0x4000a2, 7 bytes>
0x4000a2:	cmp	qword ptr [rbp - 0x78], 0x63
0x4000a7:	ja	0x4000cb
<Block for 0x4000db, 16 bytes>
0x4000db:	nop	
0x4000dc:	mov	rax, qword ptr [rbp - 8]
0x4000e0:	xor	rax, qword ptr fs:[0x28]
0x4000e9:	je	0x4000f0
<Block for 0x4000f0, 2 bytes>
0x4000f0:	leave	
0x4000f1:	ret	
<Block for 0x4000eb, 5 bytes>
0x4000eb:	call	0x500018
