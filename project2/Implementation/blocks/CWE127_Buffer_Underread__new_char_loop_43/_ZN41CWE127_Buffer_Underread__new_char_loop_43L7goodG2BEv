<Block for 0x40013f, 47 bytes>
0x40013f:	endbr64	
0x400143:	push	rbp
0x400144:	mov	rbp, rsp
0x400147:	add	rsp, -0x80
0x40014b:	mov	rax, qword ptr fs:[0x28]
0x400154:	mov	qword ptr [rbp - 8], rax
0x400158:	xor	eax, eax
0x40015a:	mov	qword ptr [rbp - 0x80], 0
0x400162:	lea	rax, [rbp - 0x80]
0x400166:	mov	rdi, rax
0x400169:	call	0x4000f2
<Block for 0x40016e, 22 bytes>
0x40016e:	lea	rax, [rbp - 0x70]
0x400172:	mov	edx, 0x63
0x400177:	mov	esi, 0x43
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500008
<Block for 0x400184, 19 bytes>
0x400184:	mov	byte ptr [rbp - 0xd], 0
0x400188:	mov	qword ptr [rbp - 0x78], 0
0x400190:	cmp	qword ptr [rbp - 0x78], 0x63
0x400195:	ja	0x4001b9
<Block for 0x400197, 34 bytes>
0x400197:	mov	rdx, qword ptr [rbp - 0x80]
0x40019b:	mov	rax, qword ptr [rbp - 0x78]
0x40019f:	add	rax, rdx
0x4001a2:	movzx	eax, byte ptr [rax]
0x4001a5:	lea	rcx, [rbp - 0x70]
0x4001a9:	mov	rdx, qword ptr [rbp - 0x78]
0x4001ad:	add	rdx, rcx
0x4001b0:	mov	byte ptr [rdx], al
0x4001b2:	add	qword ptr [rbp - 0x78], 1
0x4001b7:	jmp	0x400190
<Block for 0x4001b9, 16 bytes>
0x4001b9:	mov	byte ptr [rbp - 0xd], 0
0x4001bd:	lea	rax, [rbp - 0x70]
0x4001c1:	mov	rdi, rax
0x4001c4:	call	0x500010
<Block for 0x400190, 7 bytes>
0x400190:	cmp	qword ptr [rbp - 0x78], 0x63
0x400195:	ja	0x4001b9
<Block for 0x4001c9, 16 bytes>
0x4001c9:	nop	
0x4001ca:	mov	rax, qword ptr [rbp - 8]
0x4001ce:	xor	rax, qword ptr fs:[0x28]
0x4001d7:	je	0x4001de
<Block for 0x4001de, 2 bytes>
0x4001de:	leave	
0x4001df:	ret	
<Block for 0x4001d9, 5 bytes>
0x4001d9:	call	0x500018
