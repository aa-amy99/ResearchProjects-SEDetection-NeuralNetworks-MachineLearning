<Block for 0x400063, 28 bytes>
0x400063:	endbr64	
0x400067:	push	rbp
0x400068:	mov	rbp, rsp
0x40006b:	sub	rsp, 0x20
0x40006f:	mov	qword ptr [rbp - 0x18], rdi
0x400073:	mov	rax, qword ptr [rbp - 0x18]
0x400077:	mov	rdi, rax
0x40007a:	call	0x500000
<Block for 0x40007f, 16 bytes>
0x40007f:	mov	qword ptr [rbp - 0x10], rax
0x400083:	lea	rdi, [rip + 0x3c]
0x40008a:	call	0x500008
<Block for 0x40008f, 11 bytes>
0x40008f:	mov	qword ptr [rbp - 8], rax
0x400093:	cmp	qword ptr [rbp - 8], 0
0x400098:	je	0x4000c0
<Block for 0x4000c0, 6 bytes>
0x4000c0:	mov	rax, qword ptr [rbp - 0x18]
0x4000c4:	leave	
0x4000c5:	ret	
<Block for 0x40009a, 38 bytes>
0x40009a:	mov	eax, 0x63
0x40009f:	sub	rax, qword ptr [rbp - 0x10]
0x4000a3:	mov	rdx, rax
0x4000a6:	mov	rcx, qword ptr [rbp - 0x18]
0x4000aa:	mov	rax, qword ptr [rbp - 0x10]
0x4000ae:	add	rcx, rax
0x4000b1:	mov	rax, qword ptr [rbp - 8]
0x4000b5:	mov	rsi, rax
0x4000b8:	mov	rdi, rcx
0x4000bb:	call	0x500010
