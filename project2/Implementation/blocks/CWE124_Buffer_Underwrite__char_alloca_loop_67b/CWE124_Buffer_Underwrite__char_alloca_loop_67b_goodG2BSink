<Block for 0x4000a9, 70 bytes>
0x4000a9:	endbr64	
0x4000ad:	push	rbp
0x4000ae:	mov	rbp, rsp
0x4000b1:	sub	rsp, 0x90
0x4000b8:	mov	qword ptr [rbp - 0x88], rdi
0x4000bf:	mov	rax, qword ptr fs:[0x28]
0x4000c8:	mov	qword ptr [rbp - 8], rax
0x4000cc:	xor	eax, eax
0x4000ce:	mov	rax, qword ptr [rbp - 0x88]
0x4000d5:	mov	qword ptr [rbp - 0x78], rax
0x4000d9:	lea	rax, [rbp - 0x70]
0x4000dd:	mov	edx, 0x63
0x4000e2:	mov	esi, 0x43
0x4000e7:	mov	rdi, rax
0x4000ea:	call	0x500000
<Block for 0x4000ef, 14 bytes>
0x4000ef:	mov	byte ptr [rbp - 0xd], 0
0x4000f3:	mov	qword ptr [rbp - 0x80], 0
0x4000fb:	jmp	0x40011d
<Block for 0x40011d, 7 bytes>
0x40011d:	cmp	qword ptr [rbp - 0x80], 0x63
0x400122:	jbe	0x4000fd
<Block for 0x4000fd, 39 bytes>
0x4000fd:	mov	rdx, qword ptr [rbp - 0x78]
0x400101:	mov	rax, qword ptr [rbp - 0x80]
0x400105:	add	rdx, rax
0x400108:	lea	rcx, [rbp - 0x70]
0x40010c:	mov	rax, qword ptr [rbp - 0x80]
0x400110:	add	rax, rcx
0x400113:	movzx	eax, byte ptr [rax]
0x400116:	mov	byte ptr [rdx], al
0x400118:	add	qword ptr [rbp - 0x80], 1
0x40011d:	cmp	qword ptr [rbp - 0x80], 0x63
0x400122:	jbe	0x4000fd
<Block for 0x400124, 23 bytes>
0x400124:	mov	rax, qword ptr [rbp - 0x78]
0x400128:	add	rax, 0x63
0x40012c:	mov	byte ptr [rax], 0
0x40012f:	mov	rax, qword ptr [rbp - 0x78]
0x400133:	mov	rdi, rax
0x400136:	call	0x500008
<Block for 0x40013b, 16 bytes>
0x40013b:	nop	
0x40013c:	mov	rax, qword ptr [rbp - 8]
0x400140:	xor	rax, qword ptr fs:[0x28]
0x400149:	je	0x400150
<Block for 0x400150, 2 bytes>
0x400150:	leave	
0x400151:	ret	
<Block for 0x40014b, 5 bytes>
0x40014b:	call	0x500010
