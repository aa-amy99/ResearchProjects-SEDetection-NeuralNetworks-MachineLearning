<Block for 0x400148, 43 bytes>
0x400148:	endbr64	
0x40014c:	push	rbp
0x40014d:	mov	rbp, rsp
0x400150:	push	rbx
0x400151:	sub	rsp, 0x88
0x400158:	mov	rax, qword ptr fs:[0x28]
0x400161:	mov	qword ptr [rbp - 0x18], rax
0x400165:	xor	eax, eax
0x400167:	lea	rax, [rbp - 0x80]
0x40016b:	mov	rdi, rax
0x40016e:	call	0x4003bc
<Block for 0x400173, 46 bytes>
0x400173:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x40017d:	mov	dword ptr [rbp - 0x84], 0x14
0x400187:	mov	dword ptr [rbp - 0x50], 0
0x40018e:	lea	rdx, [rbp - 0x50]
0x400192:	lea	rax, [rbp - 0x80]
0x400196:	mov	rsi, rdx
0x400199:	mov	rdi, rax
0x40019c:	call	0x400572
<Block for 0x4001a1, 34 bytes>
0x4001a1:	mov	edx, dword ptr [rbp - 0x84]
0x4001a7:	mov	dword ptr [rax], edx
0x4001a9:	mov	dword ptr [rbp - 0x50], 1
0x4001b0:	lea	rdx, [rbp - 0x50]
0x4001b4:	lea	rax, [rbp - 0x80]
0x4001b8:	mov	rsi, rdx
0x4001bb:	mov	rdi, rax
0x4001be:	call	0x400572
<Block for 0x4001c3, 34 bytes>
0x4001c3:	mov	edx, dword ptr [rbp - 0x84]
0x4001c9:	mov	dword ptr [rax], edx
0x4001cb:	mov	dword ptr [rbp - 0x50], 2
0x4001d2:	lea	rdx, [rbp - 0x50]
0x4001d6:	lea	rax, [rbp - 0x80]
0x4001da:	mov	rsi, rdx
0x4001dd:	mov	rdi, rax
0x4001e0:	call	0x400572
<Block for 0x4001e5, 27 bytes>
0x4001e5:	mov	edx, dword ptr [rbp - 0x84]
0x4001eb:	mov	dword ptr [rax], edx
0x4001ed:	lea	rdx, [rbp - 0x80]
0x4001f1:	lea	rax, [rbp - 0x50]
0x4001f5:	mov	rsi, rdx
0x4001f8:	mov	rdi, rax
0x4001fb:	call	0x4003fc
<Block for 0x400200, 12 bytes>
0x400200:	lea	rax, [rbp - 0x50]
0x400204:	mov	rdi, rax
0x400207:	call	0x500028
<Block for 0x40020c, 12 bytes>
0x40020c:	lea	rax, [rbp - 0x50]
0x400210:	mov	rdi, rax
0x400213:	call	0x4003dc
<Block for 0x400218, 12 bytes>
0x400218:	lea	rax, [rbp - 0x80]
0x40021c:	mov	rdi, rax
0x40021f:	call	0x4003dc
<Block for 0x400224, 16 bytes>
0x400224:	nop	
0x400225:	mov	rax, qword ptr [rbp - 0x18]
0x400229:	xor	rax, qword ptr fs:[0x28]
0x400232:	je	0x40026e
<Block for 0x40026e, 10 bytes>
0x40026e:	add	rsp, 0x88
0x400275:	pop	rbx
0x400276:	pop	rbp
0x400277:	ret	
<Block for 0x400234, 2 bytes>
0x400234:	jmp	0x400269
<Block for 0x400269, 5 bytes>
0x400269:	call	0x500020
