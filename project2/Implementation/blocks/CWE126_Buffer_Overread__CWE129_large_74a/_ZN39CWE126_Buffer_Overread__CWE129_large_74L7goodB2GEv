<Block for 0x400260, 43 bytes>
0x400260:	endbr64	
0x400264:	push	rbp
0x400265:	mov	rbp, rsp
0x400268:	push	rbx
0x400269:	sub	rsp, 0x88
0x400270:	mov	rax, qword ptr fs:[0x28]
0x400279:	mov	qword ptr [rbp - 0x18], rax
0x40027d:	xor	eax, eax
0x40027f:	lea	rax, [rbp - 0x80]
0x400283:	mov	rdi, rax
0x400286:	call	0x4004d6
<Block for 0x40028b, 46 bytes>
0x40028b:	mov	dword ptr [rbp - 0x84], 0xffffffff
0x400295:	mov	dword ptr [rbp - 0x84], 0xa
0x40029f:	mov	dword ptr [rbp - 0x50], 0
0x4002a6:	lea	rdx, [rbp - 0x50]
0x4002aa:	lea	rax, [rbp - 0x80]
0x4002ae:	mov	rsi, rdx
0x4002b1:	mov	rdi, rax
0x4002b4:	call	0x40069e
<Block for 0x4002b9, 34 bytes>
0x4002b9:	mov	edx, dword ptr [rbp - 0x84]
0x4002bf:	mov	dword ptr [rax], edx
0x4002c1:	mov	dword ptr [rbp - 0x50], 1
0x4002c8:	lea	rdx, [rbp - 0x50]
0x4002cc:	lea	rax, [rbp - 0x80]
0x4002d0:	mov	rsi, rdx
0x4002d3:	mov	rdi, rax
0x4002d6:	call	0x40069e
<Block for 0x4002db, 34 bytes>
0x4002db:	mov	edx, dword ptr [rbp - 0x84]
0x4002e1:	mov	dword ptr [rax], edx
0x4002e3:	mov	dword ptr [rbp - 0x50], 2
0x4002ea:	lea	rdx, [rbp - 0x50]
0x4002ee:	lea	rax, [rbp - 0x80]
0x4002f2:	mov	rsi, rdx
0x4002f5:	mov	rdi, rax
0x4002f8:	call	0x40069e
<Block for 0x4002fd, 27 bytes>
0x4002fd:	mov	edx, dword ptr [rbp - 0x84]
0x400303:	mov	dword ptr [rax], edx
0x400305:	lea	rdx, [rbp - 0x80]
0x400309:	lea	rax, [rbp - 0x50]
0x40030d:	mov	rsi, rdx
0x400310:	mov	rdi, rax
0x400313:	call	0x400516
<Block for 0x400318, 12 bytes>
0x400318:	lea	rax, [rbp - 0x50]
0x40031c:	mov	rdi, rax
0x40031f:	call	0x500020
<Block for 0x400324, 12 bytes>
0x400324:	lea	rax, [rbp - 0x50]
0x400328:	mov	rdi, rax
0x40032b:	call	0x4004f6
<Block for 0x400330, 12 bytes>
0x400330:	lea	rax, [rbp - 0x80]
0x400334:	mov	rdi, rax
0x400337:	call	0x4004f6
<Block for 0x40033c, 16 bytes>
0x40033c:	nop	
0x40033d:	mov	rax, qword ptr [rbp - 0x18]
0x400341:	xor	rax, qword ptr fs:[0x28]
0x40034a:	je	0x400386
<Block for 0x400386, 10 bytes>
0x400386:	add	rsp, 0x88
0x40038d:	pop	rbx
0x40038e:	pop	rbp
0x40038f:	ret	
<Block for 0x40034c, 2 bytes>
0x40034c:	jmp	0x400381
<Block for 0x400381, 5 bytes>
0x400381:	call	0x500010
