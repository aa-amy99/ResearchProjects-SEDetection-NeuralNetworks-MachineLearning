<Block for 0x400000, 57 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x90
0x40000f:	mov	qword ptr [rbp - 0x88], rdi
0x400016:	mov	rax, qword ptr fs:[0x28]
0x40001f:	mov	qword ptr [rbp - 8], rax
0x400023:	xor	eax, eax
0x400025:	mov	rax, qword ptr [rbp - 0x88]
0x40002c:	mov	esi, 2
0x400031:	mov	rdi, rax
0x400034:	call	0x400174
<Block for 0x400039, 29 bytes>
0x400039:	mov	rax, qword ptr [rax]
0x40003c:	mov	qword ptr [rbp - 0x78], rax
0x400040:	lea	rax, [rbp - 0x70]
0x400044:	mov	edx, 0x63
0x400049:	mov	esi, 0x43
0x40004e:	mov	rdi, rax
0x400051:	call	0x500000
<Block for 0x400056, 19 bytes>
0x400056:	mov	byte ptr [rbp - 0xd], 0
0x40005a:	mov	qword ptr [rbp - 0x80], 0
0x400062:	cmp	qword ptr [rbp - 0x80], 0x63
0x400067:	ja	0x40008b
<Block for 0x400069, 34 bytes>
0x400069:	mov	rdx, qword ptr [rbp - 0x78]
0x40006d:	mov	rax, qword ptr [rbp - 0x80]
0x400071:	add	rdx, rax
0x400074:	lea	rcx, [rbp - 0x70]
0x400078:	mov	rax, qword ptr [rbp - 0x80]
0x40007c:	add	rax, rcx
0x40007f:	movzx	eax, byte ptr [rax]
0x400082:	mov	byte ptr [rdx], al
0x400084:	add	qword ptr [rbp - 0x80], 1
0x400089:	jmp	0x400062
<Block for 0x40008b, 23 bytes>
0x40008b:	mov	rax, qword ptr [rbp - 0x78]
0x40008f:	add	rax, 0x63
0x400093:	mov	byte ptr [rax], 0
0x400096:	mov	rax, qword ptr [rbp - 0x78]
0x40009a:	mov	rdi, rax
0x40009d:	call	0x500008
<Block for 0x400062, 7 bytes>
0x400062:	cmp	qword ptr [rbp - 0x80], 0x63
0x400067:	ja	0x40008b
<Block for 0x4000a2, 16 bytes>
0x4000a2:	nop	
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	xor	rax, qword ptr fs:[0x28]
0x4000b0:	je	0x4000b7
<Block for 0x4000b7, 2 bytes>
0x4000b7:	leave	
0x4000b8:	ret	
<Block for 0x4000b2, 5 bytes>
0x4000b2:	call	0x500010
