<Block for 0x4001d1, 42 bytes>
0x4001d1:	endbr64	
0x4001d5:	push	rbp
0x4001d6:	mov	rbp, rsp
0x4001d9:	sub	rsp, 0x20
0x4001dd:	mov	rax, qword ptr fs:[0x28]
0x4001e6:	mov	qword ptr [rbp - 8], rax
0x4001ea:	xor	eax, eax
0x4001ec:	mov	eax, dword ptr [rip + 0xea]
0x4001f2:	cmp	eax, 5
0x4001f5:	jne	0x4002a3
<Block for 0x4001fb, 54 bytes>
0x4001fb:	mov	eax, 0x10
0x400200:	sub	rax, 1
0x400204:	add	rax, 9
0x400208:	mov	esi, 0x10
0x40020d:	mov	edx, 0
0x400212:	div	rsi
0x400215:	imul	rax, rax, 0x10
0x400219:	mov	rdx, rax
0x40021c:	and	rdx, 0xfffffffffffff000
0x400223:	mov	rcx, rsp
0x400226:	sub	rcx, rdx
0x400229:	mov	rdx, rcx
0x40022c:	cmp	rsp, rdx
0x40022f:	je	0x400243
<Block for 0x4002a3, 16 bytes>
0x4002a3:	nop	
0x4002a4:	mov	rax, qword ptr [rbp - 8]
0x4002a8:	xor	rax, qword ptr fs:[0x28]
0x4002b1:	je	0x4002b8
<Block for 0x400243, 26 bytes>
0x400243:	mov	rdx, rax
0x400246:	and	edx, 0xfff
0x40024c:	sub	rsp, rdx
0x40024f:	mov	rdx, rax
0x400252:	and	edx, 0xfff
0x400258:	test	rdx, rdx
0x40025b:	je	0x40026d
<Block for 0x400231, 18 bytes>
0x400231:	sub	rsp, 0x1000
0x400238:	or	qword ptr [rsp + 0xff8], 0
0x400241:	jmp	0x40022c
<Block for 0x4002b8, 2 bytes>
0x4002b8:	leave	
0x4002b9:	ret	
<Block for 0x4002b3, 5 bytes>
0x4002b3:	call	0x500008
<Block for 0x40026d, 54 bytes>
0x40026d:	mov	rax, rsp
0x400270:	add	rax, 0xf
0x400274:	shr	rax, 4
0x400278:	shl	rax, 4
0x40027c:	mov	qword ptr [rbp - 0x10], rax
0x400280:	mov	byte ptr [rbp - 0x12], 5
0x400284:	mov	rax, qword ptr [rbp - 0x10]
0x400288:	movzx	edx, byte ptr [rbp - 0x12]
0x40028c:	mov	byte ptr [rax], dl
0x40028e:	mov	rax, qword ptr [rbp - 0x10]
0x400292:	movzx	eax, byte ptr [rax]
0x400295:	mov	byte ptr [rbp - 0x11], al
0x400298:	movsx	eax, byte ptr [rbp - 0x11]
0x40029c:	mov	edi, eax
0x40029e:	call	0x500000
<Block for 0x40025d, 70 bytes>
0x40025d:	and	eax, 0xfff
0x400262:	sub	rax, 8
0x400266:	add	rax, rsp
0x400269:	or	qword ptr [rax], 0
0x40026d:	mov	rax, rsp
0x400270:	add	rax, 0xf
0x400274:	shr	rax, 4
0x400278:	shl	rax, 4
0x40027c:	mov	qword ptr [rbp - 0x10], rax
0x400280:	mov	byte ptr [rbp - 0x12], 5
0x400284:	mov	rax, qword ptr [rbp - 0x10]
0x400288:	movzx	edx, byte ptr [rbp - 0x12]
0x40028c:	mov	byte ptr [rax], dl
0x40028e:	mov	rax, qword ptr [rbp - 0x10]
0x400292:	movzx	eax, byte ptr [rax]
0x400295:	mov	byte ptr [rbp - 0x11], al
0x400298:	movsx	eax, byte ptr [rbp - 0x11]
0x40029c:	mov	edi, eax
0x40029e:	call	0x500000
<Block for 0x40022c, 5 bytes>
0x40022c:	cmp	rsp, rdx
0x40022f:	je	0x400243
