<Block for 0x400110, 66 bytes>
0x400110:	endbr64	
0x400114:	push	rbp
0x400115:	mov	rbp, rsp
0x400118:	sub	rsp, 0x20
0x40011c:	mov	rax, qword ptr fs:[0x28]
0x400125:	mov	qword ptr [rbp - 8], rax
0x400129:	xor	eax, eax
0x40012b:	mov	rax, qword ptr [rip + 0xffef6]
0x400132:	mov	qword ptr [rbp - 0x10], rax
0x400136:	lea	rdx, [rbp - 0x1c]
0x40013a:	mov	rax, qword ptr [rbp - 0x10]
0x40013e:	lea	rsi, [rip + 0x5d]
0x400145:	mov	rdi, rax
0x400148:	mov	eax, 0
0x40014d:	call	0x500008
<Block for 0x400152, 5 bytes>
0x400152:	cmp	eax, 1
0x400155:	jne	0x40018b
<Block for 0x400157, 10 bytes>
0x400157:	mov	eax, dword ptr [rbp - 0x1c]
0x40015a:	cmp	eax, 0x270f
0x40015f:	jg	0x40018b
<Block for 0x40018b, 16 bytes>
0x40018b:	nop	
0x40018c:	mov	rax, qword ptr [rbp - 8]
0x400190:	xor	rax, qword ptr fs:[0x28]
0x400199:	je	0x4001a0
<Block for 0x400161, 16 bytes>
0x400161:	mov	dword ptr [rbp - 0x14], 0
0x400168:	mov	dword ptr [rbp - 0x18], 0
0x40016f:	jmp	0x400179
<Block for 0x4001a0, 2 bytes>
0x4001a0:	leave	
0x4001a1:	ret	
<Block for 0x40019b, 5 bytes>
0x40019b:	call	0x500018
<Block for 0x400179, 8 bytes>
0x400179:	mov	eax, dword ptr [rbp - 0x1c]
0x40017c:	cmp	dword ptr [rbp - 0x18], eax
0x40017f:	jl	0x400171
<Block for 0x400171, 16 bytes>
0x400171:	add	dword ptr [rbp - 0x14], 1
0x400175:	add	dword ptr [rbp - 0x18], 1
0x400179:	mov	eax, dword ptr [rbp - 0x1c]
0x40017c:	cmp	dword ptr [rbp - 0x18], eax
0x40017f:	jl	0x400171
<Block for 0x400181, 10 bytes>
0x400181:	mov	eax, dword ptr [rbp - 0x14]
0x400184:	mov	edi, eax
0x400186:	call	0x500010
