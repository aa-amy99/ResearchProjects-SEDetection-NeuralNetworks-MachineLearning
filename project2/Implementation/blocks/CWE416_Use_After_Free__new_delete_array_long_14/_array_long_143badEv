<Block for 0x400000, 31 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	qword ptr [rbp - 0x10], 0
0x400014:	mov	eax, dword ptr [rip + 0xfffe6]
0x40001a:	cmp	eax, 5
0x40001d:	jne	0x400070
<Block for 0x40001f, 10 bytes>
0x40001f:	mov	edi, 0x320
0x400024:	call	0x500008
<Block for 0x400070, 11 bytes>
0x400070:	mov	eax, dword ptr [rip + 0xfff8a]
0x400076:	cmp	eax, 5
0x400079:	jne	0x40008a
<Block for 0x400029, 19 bytes>
0x400029:	mov	qword ptr [rbp - 0x10], rax
0x40002d:	mov	qword ptr [rbp - 8], 0
0x400035:	cmp	qword ptr [rbp - 8], 0x63
0x40003a:	ja	0x40005d
<Block for 0x40007b, 15 bytes>
0x40007b:	mov	rax, qword ptr [rbp - 0x10]
0x40007f:	mov	rax, qword ptr [rax]
0x400082:	mov	rdi, rax
0x400085:	call	0x500018
<Block for 0x40008a, 3 bytes>
0x40008a:	nop	
0x40008b:	leave	
0x40008c:	ret	
<Block for 0x40003c, 33 bytes>
0x40003c:	mov	rax, qword ptr [rbp - 8]
0x400040:	lea	rdx, [rax*8]
0x400048:	mov	rax, qword ptr [rbp - 0x10]
0x40004c:	add	rax, rdx
0x40004f:	mov	qword ptr [rax], 5
0x400056:	add	qword ptr [rbp - 8], 1
0x40005b:	jmp	0x400035
<Block for 0x40005d, 7 bytes>
0x40005d:	cmp	qword ptr [rbp - 0x10], 0
0x400062:	je	0x400070
<Block for 0x400035, 7 bytes>
0x400035:	cmp	qword ptr [rbp - 8], 0x63
0x40003a:	ja	0x40005d
<Block for 0x400064, 12 bytes>
0x400064:	mov	rax, qword ptr [rbp - 0x10]
0x400068:	mov	rdi, rax
0x40006b:	call	0x500010
