<Block for 0x4001c3, 41 bytes>
0x4001c3:	endbr64	
0x4001c7:	push	rbp
0x4001c8:	mov	rbp, rsp
0x4001cb:	sub	rsp, 0x30
0x4001cf:	mov	qword ptr [rbp - 0x28], rdi
0x4001d3:	mov	rax, qword ptr fs:[0x28]
0x4001dc:	mov	qword ptr [rbp - 8], rax
0x4001e0:	xor	eax, eax
0x4001e2:	mov	eax, dword ptr [rip + 0xffe50]
0x4001e8:	test	eax, eax
0x4001ea:	je	0x400237
<Block for 0x400237, 16 bytes>
0x400237:	nop	
0x400238:	mov	rax, qword ptr [rbp - 8]
0x40023c:	xor	rax, qword ptr fs:[0x28]
0x400245:	je	0x40024c
<Block for 0x4001ec, 28 bytes>
0x4001ec:	lea	rdx, [rbp - 0x14]
0x4001f0:	mov	rax, qword ptr [rbp - 0x28]
0x4001f4:	lea	rsi, [rip + 0x53]
0x4001fb:	mov	rdi, rax
0x4001fe:	mov	eax, 0
0x400203:	call	0x500008
<Block for 0x40024c, 2 bytes>
0x40024c:	leave	
0x40024d:	ret	
<Block for 0x400247, 5 bytes>
0x400247:	call	0x500018
<Block for 0x400208, 5 bytes>
0x400208:	cmp	eax, 1
0x40020b:	jne	0x400237
<Block for 0x40020d, 16 bytes>
0x40020d:	mov	dword ptr [rbp - 0xc], 0
0x400214:	mov	dword ptr [rbp - 0x10], 0
0x40021b:	jmp	0x400225
<Block for 0x400225, 8 bytes>
0x400225:	mov	eax, dword ptr [rbp - 0x14]
0x400228:	cmp	dword ptr [rbp - 0x10], eax
0x40022b:	jl	0x40021d
<Block for 0x40021d, 16 bytes>
0x40021d:	add	dword ptr [rbp - 0xc], 1
0x400221:	add	dword ptr [rbp - 0x10], 1
0x400225:	mov	eax, dword ptr [rbp - 0x14]
0x400228:	cmp	dword ptr [rbp - 0x10], eax
0x40022b:	jl	0x40021d
<Block for 0x40022d, 10 bytes>
0x40022d:	mov	eax, dword ptr [rbp - 0xc]
0x400230:	mov	edi, eax
0x400232:	call	0x500010
