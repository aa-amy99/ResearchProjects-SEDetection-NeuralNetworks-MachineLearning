<Block for 0x40024a, 82 bytes>
0x40024a:	endbr64	
0x40024e:	push	rbp
0x40024f:	mov	rbp, rsp
0x400252:	sub	rsp, 0x130
0x400259:	mov	rax, qword ptr fs:[0x28]
0x400262:	mov	qword ptr [rbp - 8], rax
0x400266:	xor	eax, eax
0x400268:	movabs	rax, 0x3d48544150
0x400272:	mov	edx, 0
0x400277:	mov	qword ptr [rbp - 0x110], rax
0x40027e:	mov	qword ptr [rbp - 0x108], rdx
0x400285:	lea	rdx, [rbp - 0x100]
0x40028c:	mov	eax, 0
0x400291:	mov	ecx, 0x1d
0x400296:	mov	rdi, rdx
0x400299:	rep stosq	qword ptr [rdi], rax
<Block for 0x40029c, 51 bytes>
0x40029c:	mov	rdx, rdi
0x40029f:	mov	word ptr [rdx], ax
0x4002a2:	add	rdx, 2
0x4002a6:	lea	rax, [rbp - 0x110]
0x4002ad:	mov	qword ptr [rbp - 0x128], rax
0x4002b4:	mov	rax, qword ptr [rbp - 0x128]
0x4002bb:	mov	rcx, -1
0x4002c2:	mov	rdx, rax
0x4002c5:	mov	eax, 0
0x4002ca:	mov	rdi, rdx
0x4002cd:	repne scasb	al, byte ptr [rdi]
<Block for 0x400299, 3 bytes>
0x400299:	rep stosq	qword ptr [rdi], rax
<Block for 0x4002cf, 73 bytes>
0x4002cf:	mov	rax, rcx
0x4002d2:	not	rax
0x4002d5:	lea	rdx, [rax - 1]
0x4002d9:	mov	rax, qword ptr [rbp - 0x128]
0x4002e0:	add	rax, rdx
0x4002e3:	mov	dword ptr [rax], 0x6e69622f
0x4002e9:	mov	byte ptr [rax + 4], 0
0x4002ed:	mov	rax, qword ptr [rbp - 0x128]
0x4002f4:	mov	qword ptr [rbp - 0x120], rax
0x4002fb:	mov	rax, qword ptr [rbp - 0x120]
0x400302:	mov	qword ptr [rbp - 0x118], rax
0x400309:	mov	rax, qword ptr [rbp - 0x118]
0x400310:	mov	rdi, rax
0x400313:	call	0x500048
<Block for 0x4002cd, 2 bytes>
0x4002cd:	repne scasb	al, byte ptr [rdi]
<Block for 0x400318, 16 bytes>
0x400318:	nop	
0x400319:	mov	rax, qword ptr [rbp - 8]
0x40031d:	xor	rax, qword ptr fs:[0x28]
0x400326:	je	0x40032d
<Block for 0x40032d, 2 bytes>
0x40032d:	leave	
0x40032e:	ret	
<Block for 0x400328, 5 bytes>
0x400328:	call	0x500050
