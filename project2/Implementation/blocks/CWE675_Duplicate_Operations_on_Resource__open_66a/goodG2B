<Block for 0x400073, 61 bytes>
0x400073:	endbr64	
0x400077:	push	rbp
0x400078:	mov	rbp, rsp
0x40007b:	sub	rsp, 0x30
0x40007f:	mov	rax, qword ptr fs:[0x28]
0x400088:	mov	qword ptr [rbp - 8], rax
0x40008c:	xor	eax, eax
0x40008e:	mov	dword ptr [rbp - 0x24], 0xffffffff
0x400095:	mov	edx, 0x180
0x40009a:	mov	esi, 0x42
0x40009f:	lea	rdi, [rip + 0xdb]
0x4000a6:	mov	eax, 0
0x4000ab:	call	0x500000
<Block for 0x4000b0, 21 bytes>
0x4000b0:	mov	dword ptr [rbp - 0x24], eax
0x4000b3:	mov	eax, dword ptr [rbp - 0x24]
0x4000b6:	mov	dword ptr [rbp - 0x18], eax
0x4000b9:	lea	rax, [rbp - 0x20]
0x4000bd:	mov	rdi, rax
0x4000c0:	call	0x500020
<Block for 0x4000c5, 16 bytes>
0x4000c5:	nop	
0x4000c6:	mov	rax, qword ptr [rbp - 8]
0x4000ca:	xor	rax, qword ptr fs:[0x28]
0x4000d3:	je	0x4000da
<Block for 0x4000da, 2 bytes>
0x4000da:	leave	
0x4000db:	ret	
<Block for 0x4000d5, 5 bytes>
0x4000d5:	call	0x500018
