<Block for 0x400059, 25 bytes>
0x400059:	endbr64	
0x40005d:	push	rbp
0x40005e:	mov	rbp, rsp
0x400061:	sub	rsp, 0x20
0x400065:	mov	dword ptr [rbp - 0x14], 0
0x40006c:	cmp	dword ptr [rbp - 0x14], 0
0x400070:	jg	0x4000bf
<Block for 0x400072, 17 bytes>
0x400072:	mov	dword ptr [rbp - 0x10], 5
0x400079:	mov	edi, 4
0x40007e:	call	0x500000
<Block for 0x4000bf, 3 bytes>
0x4000bf:	nop	
0x4000c0:	leave	
0x4000c1:	ret	
<Block for 0x400083, 32 bytes>
0x400083:	mov	qword ptr [rbp - 8], rax
0x400087:	mov	rax, qword ptr [rbp - 8]
0x40008b:	mov	edx, dword ptr [rbp - 0x10]
0x40008e:	mov	dword ptr [rax], edx
0x400090:	mov	rax, qword ptr [rbp - 8]
0x400094:	mov	eax, dword ptr [rax]
0x400096:	mov	dword ptr [rbp - 0xc], eax
0x400099:	mov	eax, dword ptr [rbp - 0xc]
0x40009c:	mov	edi, eax
0x40009e:	call	0x500010
<Block for 0x4000a3, 9 bytes>
0x4000a3:	mov	rax, qword ptr [rbp - 8]
0x4000a7:	test	rax, rax
0x4000aa:	je	0x4000b9
<Block for 0x4000b9, 6 bytes>
0x4000b9:	add	dword ptr [rbp - 0x14], 1
0x4000bd:	jmp	0x40006c
<Block for 0x4000ac, 13 bytes>
0x4000ac:	mov	esi, 4
0x4000b1:	mov	rdi, rax
0x4000b4:	call	0x500008
<Block for 0x40006c, 6 bytes>
0x40006c:	cmp	dword ptr [rbp - 0x14], 0
0x400070:	jg	0x4000bf
