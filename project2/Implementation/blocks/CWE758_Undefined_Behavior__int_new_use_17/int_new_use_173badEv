<Block for 0x400000, 25 bytes>
0x400000:	endbr64	
0x400004:	push	rbp
0x400005:	mov	rbp, rsp
0x400008:	sub	rsp, 0x10
0x40000c:	mov	dword ptr [rbp - 0x10], 0
0x400013:	cmp	dword ptr [rbp - 0x10], 0
0x400017:	jg	0x400056
<Block for 0x400019, 10 bytes>
0x400019:	mov	edi, 4
0x40001e:	call	0x500000
<Block for 0x400056, 3 bytes>
0x400056:	nop	
0x400057:	leave	
0x400058:	ret	
<Block for 0x400023, 22 bytes>
0x400023:	mov	qword ptr [rbp - 8], rax
0x400027:	mov	rax, qword ptr [rbp - 8]
0x40002b:	mov	eax, dword ptr [rax]
0x40002d:	mov	dword ptr [rbp - 0xc], eax
0x400030:	mov	rax, qword ptr [rbp - 8]
0x400034:	test	rax, rax
0x400037:	je	0x400046
<Block for 0x400046, 10 bytes>
0x400046:	mov	eax, dword ptr [rbp - 0xc]
0x400049:	mov	edi, eax
0x40004b:	call	0x500010
<Block for 0x400039, 13 bytes>
0x400039:	mov	esi, 4
0x40003e:	mov	rdi, rax
0x400041:	call	0x500008
<Block for 0x400050, 6 bytes>
0x400050:	add	dword ptr [rbp - 0x10], 1
0x400054:	jmp	0x400013
<Block for 0x400013, 6 bytes>
0x400013:	cmp	dword ptr [rbp - 0x10], 0
0x400017:	jg	0x400056
