<Block for 0x4001e8, 82 bytes>
0x4001e8:	endbr64	
0x4001ec:	push	rbp
0x4001ed:	mov	rbp, rsp
0x4001f0:	sub	rsp, 0x120
0x4001f7:	mov	rax, qword ptr fs:[0x28]
0x400200:	mov	qword ptr [rbp - 8], rax
0x400204:	xor	eax, eax
0x400206:	movabs	rax, 0x3d48544150
0x400210:	mov	edx, 0
0x400215:	mov	qword ptr [rbp - 0x110], rax
0x40021c:	mov	qword ptr [rbp - 0x108], rdx
0x400223:	lea	rdx, [rbp - 0x100]
0x40022a:	mov	eax, 0
0x40022f:	mov	ecx, 0x1d
0x400234:	mov	rdi, rdx
0x400237:	rep stosq	qword ptr [rdi], rax
<Block for 0x40023a, 34 bytes>
0x40023a:	mov	rdx, rdi
0x40023d:	mov	word ptr [rdx], ax
0x400240:	add	rdx, 2
0x400244:	lea	rax, [rbp - 0x110]
0x40024b:	mov	qword ptr [rbp - 0x118], rax
0x400252:	mov	eax, 0
0x400257:	call	0x500000
<Block for 0x400237, 3 bytes>
0x400237:	rep stosq	qword ptr [rdi], rax
<Block for 0x40025c, 4 bytes>
0x40025c:	test	eax, eax
0x40025e:	je	0x400299
<Block for 0x400299, 15 bytes>
0x400299:	mov	rax, qword ptr [rbp - 0x118]
0x4002a0:	mov	rdi, rax
0x4002a3:	call	0x500020
<Block for 0x400260, 27 bytes>
0x400260:	mov	rax, qword ptr [rbp - 0x118]
0x400267:	mov	rcx, -1
0x40026e:	mov	rdx, rax
0x400271:	mov	eax, 0
0x400276:	mov	rdi, rdx
0x400279:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002a8, 16 bytes>
0x4002a8:	nop	
0x4002a9:	mov	rax, qword ptr [rbp - 8]
0x4002ad:	xor	rax, qword ptr fs:[0x28]
0x4002b6:	je	0x4002bd
<Block for 0x40027b, 45 bytes>
0x40027b:	mov	rax, rcx
0x40027e:	not	rax
0x400281:	lea	rdx, [rax - 1]
0x400285:	mov	rax, qword ptr [rbp - 0x118]
0x40028c:	add	rax, rdx
0x40028f:	mov	dword ptr [rax], 0x6e69622f
0x400295:	mov	byte ptr [rax + 4], 0
0x400299:	mov	rax, qword ptr [rbp - 0x118]
0x4002a0:	mov	rdi, rax
0x4002a3:	call	0x500020
<Block for 0x400279, 2 bytes>
0x400279:	repne scasb	al, byte ptr [rdi]
<Block for 0x4002bd, 2 bytes>
0x4002bd:	leave	
0x4002be:	ret	
<Block for 0x4002b8, 5 bytes>
0x4002b8:	call	0x500028
