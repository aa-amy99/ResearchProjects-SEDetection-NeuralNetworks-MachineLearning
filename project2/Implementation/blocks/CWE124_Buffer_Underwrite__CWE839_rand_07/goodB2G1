<Block for 0x40010a, 46 bytes>
0x40010a:	endbr64	
0x40010e:	push	rbp
0x40010f:	mov	rbp, rsp
0x400112:	push	rbx
0x400113:	sub	rsp, 0x48
0x400117:	mov	rax, qword ptr fs:[0x28]
0x400120:	mov	qword ptr [rbp - 0x18], rax
0x400124:	xor	eax, eax
0x400126:	mov	dword ptr [rbp - 0x48], 0xffffffff
0x40012d:	mov	eax, dword ptr [rip + 0x3d1]
0x400133:	cmp	eax, 5
0x400136:	jne	0x400181
<Block for 0x400138, 5 bytes>
0x400138:	call	0x500000
<Block for 0x400181, 11 bytes>
0x400181:	mov	eax, dword ptr [rip + 0x37d]
0x400187:	cmp	eax, 5
0x40018a:	je	0x40019a
<Block for 0x40013d, 7 bytes>
0x40013d:	and	eax, 1
0x400140:	test	eax, eax
0x400142:	je	0x400161
<Block for 0x40019a, 46 bytes>
0x40019a:	mov	qword ptr [rbp - 0x40], 0
0x4001a2:	mov	qword ptr [rbp - 0x38], 0
0x4001aa:	mov	qword ptr [rbp - 0x30], 0
0x4001b2:	mov	qword ptr [rbp - 0x28], 0
0x4001ba:	mov	qword ptr [rbp - 0x20], 0
0x4001c2:	cmp	dword ptr [rbp - 0x48], 0
0x4001c6:	js	0x400200
<Block for 0x40018c, 12 bytes>
0x40018c:	lea	rdi, [rip + 0x395]
0x400193:	call	0x500010
<Block for 0x400161, 5 bytes>
0x400161:	call	0x500000
<Block for 0x400144, 5 bytes>
0x400144:	call	0x500000
<Block for 0x400200, 12 bytes>
0x400200:	lea	rdi, [rip + 0x339]
0x400207:	call	0x500010
<Block for 0x4001c8, 6 bytes>
0x4001c8:	cmp	dword ptr [rbp - 0x48], 9
0x4001cc:	jg	0x400200
<Block for 0x400198, 2 bytes>
0x400198:	jmp	0x40020e
<Block for 0x400166, 10 bytes>
0x400166:	shl	eax, 0x1e
0x400169:	mov	ebx, eax
0x40016b:	call	0x500000
<Block for 0x400149, 10 bytes>
0x400149:	shl	eax, 0x1e
0x40014c:	mov	ebx, eax
0x40014e:	call	0x500000
<Block for 0x40020c, 2 bytes>
0x40020c:	jmp	0x40020e
<Block for 0x4001ce, 22 bytes>
0x4001ce:	mov	eax, dword ptr [rbp - 0x48]
0x4001d1:	cdqe	
0x4001d3:	mov	dword ptr [rbp + rax*4 - 0x40], 1
0x4001db:	mov	dword ptr [rbp - 0x44], 0
0x4001e2:	jmp	0x4001f8
<Block for 0x40020e, 16 bytes>
0x40020e:	nop	
0x40020f:	mov	rax, qword ptr [rbp - 0x18]
0x400213:	xor	rax, qword ptr fs:[0x28]
0x40021c:	je	0x400223
<Block for 0x400170, 10 bytes>
0x400170:	shl	eax, 0xf
0x400173:	xor	ebx, eax
0x400175:	call	0x500000
<Block for 0x400153, 10 bytes>
0x400153:	shl	eax, 0xf
0x400156:	xor	ebx, eax
0x400158:	call	0x500000
<Block for 0x4001f8, 6 bytes>
0x4001f8:	cmp	dword ptr [rbp - 0x44], 9
0x4001fc:	jle	0x4001e4
<Block for 0x400223, 7 bytes>
0x400223:	add	rsp, 0x48
0x400227:	pop	rbx
0x400228:	pop	rbp
0x400229:	ret	
<Block for 0x40021e, 5 bytes>
0x40021e:	call	0x500018
<Block for 0x40017a, 18 bytes>
0x40017a:	xor	eax, ebx
0x40017c:	not	eax
0x40017e:	mov	dword ptr [rbp - 0x48], eax
0x400181:	mov	eax, dword ptr [rip + 0x37d]
0x400187:	cmp	eax, 5
0x40018a:	je	0x40019a
<Block for 0x40015d, 4 bytes>
0x40015d:	xor	eax, ebx
0x40015f:	jmp	0x40017e
<Block for 0x4001e4, 16 bytes>
0x4001e4:	mov	eax, dword ptr [rbp - 0x44]
0x4001e7:	cdqe	
0x4001e9:	mov	eax, dword ptr [rbp + rax*4 - 0x40]
0x4001ed:	mov	edi, eax
0x4001ef:	call	0x500008
<Block for 0x4001fe, 2 bytes>
0x4001fe:	jmp	0x40020e
<Block for 0x40017e, 14 bytes>
0x40017e:	mov	dword ptr [rbp - 0x48], eax
0x400181:	mov	eax, dword ptr [rip + 0x37d]
0x400187:	cmp	eax, 5
0x40018a:	je	0x40019a
<Block for 0x4001f4, 10 bytes>
0x4001f4:	add	dword ptr [rbp - 0x44], 1
0x4001f8:	cmp	dword ptr [rbp - 0x44], 9
0x4001fc:	jle	0x4001e4
