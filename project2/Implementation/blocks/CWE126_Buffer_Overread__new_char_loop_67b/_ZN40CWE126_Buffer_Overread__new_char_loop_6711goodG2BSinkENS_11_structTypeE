<Block for 0x4000d7, 70 bytes>
0x4000d7:	endbr64	
0x4000db:	push	rbp
0x4000dc:	mov	rbp, rsp
0x4000df:	sub	rsp, 0xa0
0x4000e6:	mov	qword ptr [rbp - 0x98], rdi
0x4000ed:	mov	rax, qword ptr fs:[0x28]
0x4000f6:	mov	qword ptr [rbp - 8], rax
0x4000fa:	xor	eax, eax
0x4000fc:	mov	rax, qword ptr [rbp - 0x98]
0x400103:	mov	qword ptr [rbp - 0x80], rax
0x400107:	lea	rax, [rbp - 0x70]
0x40010b:	mov	edx, 0x63
0x400110:	mov	esi, 0x43
0x400115:	mov	rdi, rax
0x400118:	call	0x500000
<Block for 0x40011d, 16 bytes>
0x40011d:	mov	byte ptr [rbp - 0xd], 0
0x400121:	lea	rax, [rbp - 0x70]
0x400125:	mov	rdi, rax
0x400128:	call	0x500008
<Block for 0x40012d, 28 bytes>
0x40012d:	mov	qword ptr [rbp - 0x78], rax
0x400131:	mov	qword ptr [rbp - 0x88], 0
0x40013c:	mov	rax, qword ptr [rbp - 0x88]
0x400143:	cmp	rax, qword ptr [rbp - 0x78]
0x400147:	jae	0x400174
<Block for 0x400149, 43 bytes>
0x400149:	mov	rdx, qword ptr [rbp - 0x80]
0x40014d:	mov	rax, qword ptr [rbp - 0x88]
0x400154:	add	rax, rdx
0x400157:	movzx	eax, byte ptr [rax]
0x40015a:	lea	rcx, [rbp - 0x70]
0x40015e:	mov	rdx, qword ptr [rbp - 0x88]
0x400165:	add	rdx, rcx
0x400168:	mov	byte ptr [rdx], al
0x40016a:	add	qword ptr [rbp - 0x88], 1
0x400172:	jmp	0x40013c
<Block for 0x400174, 16 bytes>
0x400174:	mov	byte ptr [rbp - 0xd], 0
0x400178:	lea	rax, [rbp - 0x70]
0x40017c:	mov	rdi, rax
0x40017f:	call	0x500010
<Block for 0x40013c, 13 bytes>
0x40013c:	mov	rax, qword ptr [rbp - 0x88]
0x400143:	cmp	rax, qword ptr [rbp - 0x78]
0x400147:	jae	0x400174
<Block for 0x400184, 7 bytes>
0x400184:	cmp	qword ptr [rbp - 0x80], 0
0x400189:	je	0x400197
<Block for 0x400197, 16 bytes>
0x400197:	nop	
0x400198:	mov	rax, qword ptr [rbp - 8]
0x40019c:	xor	rax, qword ptr fs:[0x28]
0x4001a5:	je	0x4001ac
<Block for 0x40018b, 12 bytes>
0x40018b:	mov	rax, qword ptr [rbp - 0x80]
0x40018f:	mov	rdi, rax
0x400192:	call	0x500018
<Block for 0x4001ac, 2 bytes>
0x4001ac:	leave	
0x4001ad:	ret	
<Block for 0x4001a7, 5 bytes>
0x4001a7:	call	0x500020
